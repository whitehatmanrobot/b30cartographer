 }
    }

    return hrC;
}

//******************************************************************************
HRESULT CCVolumeTexture8::UnlockBox(UINT uLevel) {

    LPBYTE  pBits;
    DWORD   dwSize;
    HRESULT hrC, hrS;

#ifdef D3DLOCUS_DEBUG
    if (!m_pd3dtv) {
        return ERR_NOTCREATED;
    }
#endif // D3DLOCUS_DEBUG

    if (m_pvlockd[uLevel].dwFlags & D3DLOCK_READONLY) {
        pBits = NULL;
        dwSize = 0;
    }
    else {
        D3DVOLUME_DESC  d3dvd;
        DWORD           dwWidth, dwHeight, dwDepth, dwBitDepth;
        UINT            i, j;

        m_pd3dtv->GetLevelDesc(uLevel, &d3dvd);
        if (m_pvlockd[uLevel].box.Left == -1) {
            dwWidth = d3dvd.Width;
            dwHeight = d3dvd.Height;
            dwDepth = d3dvd.Depth;
        }
        else {
            dwWidth = m_pvlockd[uLevel].box.Right - m_pvlockd[uLevel].box.Left;
            dwHeight = m_pvlockd[uLevel].box.Bottom - m_pvlockd[uLevel].box.Top;
            dwDepth = m_pvlockd[uLevel].box.Back - m_pvlockd[uLevel].box.Front;
        }
        dwBitDepth = FormatToBitDepth(d3dvd.Format);
        dwSize = dwHeight * dwWidth * dwDepth * dwBitDepth / 8;
        pBits = (LPBYTE)MemAlloc(dwSize);

#ifdef UNDER_XBOX
        if (!XGIsSwizzledFormat(d3dvd.Format)) {
#endif
            if (IsCompressedFormat(d3dvd.Format)) {
                memcpy(pBits, m_pvlockd[uLevel].d3dlb.pBits, dwWidth * dwHeight * dwDepth * dwBitDepth / 8);
            }
            else {
                for (j = 0; j < dwDepth; j++) {
                    for (i = 0; i < dwHeight; i++) {
                        memcpy(pBits + j * dwHeight * dwWidth * dwBitDepth / 8 + i * dwWidth * dwBitDepth / 8, (LPBYTE)m_pvlockd[uLevel].d3dlb.pBits + j * m_pvlockd[uLevel].d3dlb.SlicePitch + i * m_pvlockd[uLevel].d3dlb.RowPitch, dwWidth * dwBitDepth / 8);
                    }
                }
            }
#ifdef UNDER_XBOX
        }
        else {
            // Since locking a sub-box on a swizzled volume is unsupported on Xbox, simply unswizzle the entire volume
            XGUnswizzleBox(m_pvlockd[uLevel].d3dlb.pBits, dwWidth, dwHeight, dwDepth, NULL, pBits, 
                           dwWidth * dwBitDepth / 8, dwWidth * dwHeight * dwBitDepth / 8, NULL, dwBitDepth / 8);
        }
#endif
    }

    hrC = m_pd3dtv->UnlockBox(uLevel);

    if (m_pClient->CallMethod(MID_VTX8_UnlockBox, this, &hrS, uLevel, &m_pvlockd[uLevel].d3dlbSrv, sizeof(D3DLOCKED_BOX), &m_pvlockd[uLevel].box, sizeof(D3DBOX), m_pvlockd[uLevel].dwFlags, pBits, dwSize)) {
        if (hrC != hrS) {
            Log(LOG_WARN, TEXT("IDirect3DVolumeTexture8::UnlockBox result inconsistent [C: 0x%X, S: 0x%X]"), hrC, hrS);
        }
    }

    if (pBits) {
        MemFree(pBits);
    }

    return hrC;
}

//******************************************************************************
HRESULT CCVolumeTexture8::AddDirtyBox(D3DBOX* pboxDirty) {

    D3DBOX  boxNULL = {-1, -1, -1, -1, -1, -1};
    HRESULT hrC, hrS;

#ifdef D3DLOCUS_DEBUG
    if (!m_pd3dtv) {
        return ERR_NOTCREATED;
    }
#endif // D3DLOCUS_DEBUG

#ifndef UNDER_XBOX
    hrC = m_pd3dtv->AddDirtyBox(pboxDirty);

    if (!pboxDirty) {
        pboxDirty = &boxNULL;
    }

    if (m_pClient->CallMethod(MID_VTX8_AddDirtyBox, this, &hrS, pboxDirty, sizeof(D3DBOX))) {
        if (hrC != hrS) {
            Log(LOG_WARN, TEXT("IDirect3DVolumeTexture8::AddDirtyBox result inconsistent [C: 0x%X, S: 0x%X]"), hrC, hrS);
        }
    }

    return hrC;
#else
    Log(LOG_FAIL, TEXT("IDirect3DVolumeTexture8::AddDirtyBox is not implemented on XBox"));
    return E_NOTIMPL;
#endif // UNDER_XBOX
}

//******************************************************************************
HRESULT CCVolumeTexture8::GetVolumeLevel(UINT uLevel, CVolume8** ppVolumeLevel) {

    LPDIRECT3DVOLUME8   pd3dv;
    CCVolume8*          pVolume;
    HRESULT             hrC, hrS;

#ifdef D3DLOCUS_DEBUG
    if (!m_pd3dtv) {
        return ERR_NOTCREATED;
    }

    if (!ppVolumeLevel) {
        return D3DERR_INVALIDCALL;
    }
#endif // D3DLOCUS_DEBUG

    *ppVolumeLevel = NULL;

    hrC = m_pd3dtv->GetVolumeLevel(uLevel, &pd3dv);
    if (SUCCEEDED(hrC)) {
        
        if (m_pDevice->FindObject((LPVOID)pd3dv, (LPVOID*)&pVolume)) {
            pVolume->CObject::AddRef();
        }
        else {
            pVolume = new CCVolume8();
            if (!pVolume) {
                pd3dv->Release();
                return E_OUTOFMEMORY;
            }

            if (!pVolume->Create(m_pClient, m_pDevice, pd3dv)) {
                pd3dv->Release();
                return ERR_LOCUSFAIL;
            }
        }

        *ppVolumeLevel = pVolume;
    }
    else {
        pVolume = NULL;
    }

    if (m_pClient->CallMethod(MID_VTX8_GetVolumeLevel, this, &hrS, uLevel, &pVolume)) {
        if (hrC != hrS) {
            Log(LOG_WARN, TEXT("IDirect3DVolumeTexture8::GetVolumeLevel result inconsistent [C: 0x%X, S: 0x%X]"), hrC, hrS);
        }
    }

    return hrC;
}
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\test\directx\d3d\frame\d3dlocus\util.h ===
/*******************************************************************************

Copyright (c) 2000 Microsoft Corporation.  All rights reserved.

File Name:

    util.h

Author:

    Matt Bronder

Description:

    Utility functions.

*******************************************************************************/

#ifndef __UTIL_H__
#define __UTIL_H__

//******************************************************************************
// Preprocessor definitions
//******************************************************************************

#define TSTART_HARNESS          0x00000001
#define TSTART_SEQUENTIAL       0x00000002
#define TSTART_PARALLEL         0x00000004
#define TSTART_STRESS           0x00000008

//******************************************************************************
// Data types
//******************************************************************************

typedef DWORD                   TESTSTARTUPCONTEXT;

//******************************************************************************
// Debugging function prototypes
//******************************************************************************

//#if defined(DEBUG) || defined(_DEBUG) || defined(DBG)
void                DebugString(LPCTSTR szFormat, ...);
BOOL                ResultFailed(HRESULT hr, LPCTSTR sz);
//#else
//inline void         DebugString(LPCTSTR szFormat, ...) {}
//inline BOOL         ResultFailed(HRESULT hr, LPCTSTR sz) {return FALSE;};
//#endif

//******************************************************************************
// Memory allocation prototypes
//******************************************************************************

BOOL                CreateHeap();
void                ReleaseHeap();
LPVOID              MemAlloc(UINT uNumBytes);
void                MemFree(LPVOID pvMem);
LPVOID              MemAlloc32(UINT uNumBytes);
void                MemFree32(LPVOID pvMem);

//******************************************************************************
// Test startup information
//******************************************************************************

void                RegisterStartupContext(TESTSTARTUPCONTEXT tscontext);
TESTSTARTUPCONTEXT  GetStartupContext();

//******************************************************************************
// Display information
//******************************************************************************

void                RegisterDisplay(class CDisplay* pDisplay);
CDisplay*           GetDisplay();
void                EnableDisplayStability(BOOL bEnable);
BOOL                IsDisplayStable();

//******************************************************************************
// Test module instance
//******************************************************************************

void                RegisterTestInstance(HINSTANCE hInstance);
HINSTANCE           GetTestInstance();
DWORD               GetModuleName(HMODULE hModule, LPTSTR szModuleName, DWORD dwSize);

//******************************************************************************
// CMap32
//******************************************************************************

//******************************************************************************
typedef struct _PAIR32 {
    DWORD           dwKey;
    DWORD           dwData;
    struct _PAIR32* ppairNext;
} PAIR32, *PPAIR32;

//******************************************************************************
class CMap32 {

protected:

                    PPAIR32 m_ppairList;

public:

                    CMap32();
                    ~CMap32();
    BOOL            Add(DWORD dwKey, DWORD dwData);
    BOOL            Remove(DWORD dwKey);
    BOOL            Find(DWORD dwKey, LPDWORD pdwData);
    BOOL            Find(LPDWORD pdwKey, DWORD dwData);
};

//******************************************************************************
// Miscellaneous functions
//******************************************************************************

inline void         F2L(int* pint, float f) {
                        __asm fld f;
                        __asm mov edx, pint
                        __asm fistp [edx]
                    }

#endif // __UTIL_H__
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\test\directx\d3d\frame\gentest\modulex.h ===
[CODE: No readable text]
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\test\directx\d3d\frame\d3dlocus\util.cpp ===
/*******************************************************************************

Copyright (c) 2000 Microsoft Corporation.  All rights reserved.

File Name:

    util.cpp

Author:

    Matt Bronder

Description:

    Utility functions.

*******************************************************************************/

#include "d3dlocus.h"

//******************************************************************************
// Globals
//******************************************************************************

static HANDLE               g_hHeap = NULL;
static HINSTANCE            g_hInstance = NULL;
static TESTSTARTUPCONTEXT   g_tscontext = 0;
static CDisplay*            g_pDisplay = NULL;
static BOOL                 g_bDisplayStable = TRUE;

//******************************************************************************
// Debugging functions
//******************************************************************************

//#if defined(DEBUG) || defined(_DEBUG) || defined(DBG)
//******************************************************************************
//
// Function:
//
//     DebugString
//
// Description:
//
//     Take the formatted output and send the output to the debugger.
//
// Arguments:
//
//     LPCTSTR szFormat         - Formatting string describing the output
//
//     Variable argument list   - Data to be placed in the output string
//
// Return Value:
//
//     None.
//
//******************************************************************************
void DebugString(LPCTSTR szFormat, ...) {

    va_list vl;
    UINT    i, uLen, uSize;
    TCHAR   szTemp[81];
#ifndef UNDER_XBOX
    TCHAR   szBuffer[18432];
#else
    TCHAR*  szBuffer;
#endif // UNDER_XBOX

#ifdef UNDER_XBOX
    szBuffer = (LPTSTR)MemAlloc32(18432 * sizeof(TCHAR));
    if (!szBuffer) {
        OutputDebugString(TEXT("Insufficient memory for logging buffer allocation\n"));
//        __asm int 3;
        return;
    }
#endif // UNDER_XBOX

    szTemp[80] = '\0';

    va_start(vl, szFormat);
//    wvsprintf(szBuffer, szFormat, vl);
    _vstprintf(szBuffer, szFormat, vl);
    va_end(vl);

    _tcscat(szBuffer, TEXT("\r\n"));

    for (i = 0, uSize = _tcslen(szBuffer) + 1; i < uSize; i += 80) {
        uLen = i + 80 < uSize ? 80 : uSize - i;
        memcpy(szTemp, (LPTSTR)szBuffer + i, uLen * sizeof(TCHAR));
//        xDebugString(szTemp);
        xtprintf(szTemp);
        if (!(GetStartupContext() & TSTART_STRESS)) {
            OutputDebugString(szTemp);
        }
    }

#ifdef UNDER_XBOX
    MemFree32(szBuffer);
#endif // UNDER_XBOX
}

//******************************************************************************
//
// Function:
//
//     ResultFailed
//
// Description:
//
//     Test a given return code: if the code is an error, output a debug 
//     message with the error value.  If the code is a warning, output
//     a debug message with the warning value.
//
// Arguments:
//
//     HRESULT hr               - Return code to test for an error
//
//     LPCTSTR sz               - String describing the method that produced 
//                                the return code
//
// Return Value:
//
//     TRUE if the given return code is an error, FALSE otherwise.
//
//******************************************************************************
BOOL ResultFailed(HRESULT hr, LPCTSTR sz) {

    TCHAR szError[256];

    if (SUCCEEDED(hr)) {
        return FALSE;
    }

    D3DXGetErrorString(hr, szError, 256);

    if (FAILED(hr)) {
        Log(LOG_FAIL, TEXT("%s failed with %s [0x%X]"), sz, szError, hr);
        return TRUE;
    }
    else {
        Log(LOG_WARN, TEXT("%s returned %s [0x%X]"), sz, szError, hr);
    }

    return FALSE;
}
//#endif // DEBUG || _DEBUG || DBG

//******************************************************************************
// Memory allocation routines
//******************************************************************************

//******************************************************************************
//
// Function:
//
//     CreateHeap
//
// Description:
//
//     Create a heap for the application.
//
// Arguments:
//
//     None.
//
// Return Value:
//
//     TRUE on success, FALSE on failure.
//
//******************************************************************************
BOOL CreateHeap() {

    if (g_hHeap) {
        return FALSE;
    }

    g_hHeap = HeapCreate(0, 0, 0);
    if (!g_hHeap) {
        DebugString(TEXT("HeapCreate failed [%d]"), GetLastError());
        return FALSE;
    }

    return TRUE;
}

//******************************************************************************
//
// Function:
//
//     ReleaseHeap
//
// Description:
//
//     Destroy the application heap.
//
// Arguments:
//
//     None.
//
// Return Value:
//
//     None.
//
//******************************************************************************
void ReleaseHeap() {

    if (g_hHeap) {
        if (!HeapDestroy(g_hHeap)) {
            DebugString(TEXT("HeapDestroy failed [%d]"), GetLastError());
        }
        g_hHeap = NULL;
    }
}

//******************************************************************************
//
// Function:
//
//     MemAlloc
//
// Description:
//
//     Allocate the given amount of memory from the application heap.  This 
//     memory should later be freed using the MemFree function.
//
// Arguments:
//
//     UINT uNumBytes           - Number of bytes to allocate
//
// Return Value:
//
//     Base address of the allocated memory.
//
//******************************************************************************
LPVOID MemAlloc(UINT uNumBytes) {

    LPVOID pvMem = NULL;
    if (g_hHeap) {
        pvMem = HeapAlloc(g_hHeap, 0, uNumBytes);
    }
    return pvMem;
}

//******************************************************************************
//
// Function:
//
//     MemFree
//
// Description:
//
//     Free a block of memory that was allocated using the MemAlloc function.
//
// Arguments:
//
//     LPVOID pvMem             - Base address of the memory
//
// Return Value:
//
//     None.
//
//******************************************************************************
void MemFree(LPVOID pvMem) {

    if (g_hHeap) {
        if (!HeapFree(g_hHeap, 0, pvMem)) {
            DebugString(TEXT("HeapFree failed [%d]"), GetLastError());
        }
    }
}

//******************************************************************************
//
// Function:
//
//     MemAlloc32
//
// Description:
//
//     Allocate a given amount of memory whose base address is
//     aligned along a 32 byte boundary.  This memory must later be freed
//     using the MemFree32 function.
//
// Arguments:
//
//     UINT uNumBytes           - Number of bytes to allocate
//
// Return Value:
//
//     Base address of the allocated memory.
//
//******************************************************************************
LPVOID MemAlloc32(UINT uNumBytes)
{
	LPBYTE pbyAllocated, pbyAligned = NULL;

	pbyAllocated = (LPBYTE)MemAlloc(uNumBytes + 32);
    if (pbyAllocated) {
	    pbyAligned   = (LPBYTE)((((DWORD)pbyAllocated) + 32) & ~31);
	    *(((LPDWORD)pbyAligned)-1) = (DWORD)pbyAllocated;
    }
	return pbyAligned;
}

//******************************************************************************
//
// Function:
//
//     MemFree32
//
// Description:
//
//     Free an aligned block of memory that was allocated using the MemAlloc32
//     function.
//
// Arguments:
//
//     LPVOID pvAligned         - Base address of the aligned memory
//
// Return Value:
//
//     None.
//
//******************************************************************************
void MemFree32(LPVOID pvMem)
{
	LPBYTE pbyFree;

    if (pvMem) {
	    pbyFree = (LPBYTE)*(((LPDWORD)pvMem)-1);
	    MemFree(pbyFree);
    }
}

//******************************************************************************
// Test startup information
//******************************************************************************

//******************************************************************************
//
// Function:
//
//     RegisterStartupContext
//
// Description:
//
//     Set the startup information for the test.
//
// Arguments:
//
//     TESTSTARTUPCONTEXT tscontext   - Startup information
//
// Return Value:
//
//     None.
//
//******************************************************************************
void RegisterStartupContext(TESTSTARTUPCONTEXT tscontext) {

    g_tscontext = tscontext;
}

//******************************************************************************
//
// Function:
//
//     GetStartupContext
//
// Description:
//
//     Get the startup information for the test.
//
// Arguments:
//
//     None.
//
// Return Value:
//
//     Startup information for the test.
//
//******************************************************************************
TESTSTARTUPCONTEXT GetStartupContext() {

    return g_tscontext;
}


//******************************************************************************
// Display information
//******************************************************************************

//******************************************************************************
void RegisterDisplay(CDisplay* pDisplay) {

    g_pDisplay = pDisplay;
}

//******************************************************************************
CDisplay* GetDisplay() {

    return g_pDisplay;
}

//******************************************************************************
void EnableDisplayStability(BOOL bEnable) {

    g_bDisplayStable = bEnable;
}

//******************************************************************************
BOOL IsDisplayStable() {

    return g_bDisplayStable;
}

//******************************************************************************
// Test instance
//******************************************************************************

//******************************************************************************
//
// Function:
//
//     RegisterTestInstance
//
// Description:
//
//     Set the module instance of the test.
//
// Arguments:
//
//     HINSTANCE hInstance      - Test instance handle
//
// Return Value:
//
//     None.
//
//******************************************************************************
void RegisterTestInstance(HINSTANCE hInstance) {

    g_hInstance = hInstance;
}

//******************************************************************************
//
// Function:
//
//     GetTestInstance
//
// Description:
//
//     Get the module instance of the test.
//
// Arguments:
//
//     None.
//
// Return Value:
//
//     Instance handle to the test module.
//
//******************************************************************************
HINSTANCE GetTestInstance() {

    return g_hInstance;
}

//******************************************************************************
//
// Function:
//
//     GetModuleName
//
// Description:
//
//     Get the name of the module with the given instance.
//
// Arguments:
//
//     HMODULE hModule        - Instance of the module
//
//     LPTSTR szModuleName    - Pointer to a buffer to receive the module name
//
//     DWORD dwSize           - Size of the buffer in characters
//
// Return Value:
//
//     Number of characters copied to the module name buffer on success, zero
//     on failure.
//
//******************************************************************************
DWORD GetModuleName(HMODULE hModule, LPTSTR szModuleName, DWORD dwSize) {

#ifndef UNDER_XBOX

    return GetModuleFileName(hModule, szModuleName, dwSize);

#else

    PD3DTESTFUNCTIONDESC    pd3dtfd = (PD3DTESTFUNCTIONDESC)hModule;
    LPTSTR                  szSrc, szDst;
    UINT                    i;

    if (pd3dtfd) {
        for (szSrc = pd3dtfd->szModule, szDst = szModuleName, i = 0;
             *szSrc && i < dwSize - 1; szSrc++, szDst++, i++)
        {
            *szDst = *szSrc;
        }
        *szDst = '\0';
        return i;
    } 
    else {
        *szModuleName = '\0';
        return 0;
    }

/*
    PD3DTESTFUNCTIONDESC    pd3dtfd;
    LPTSTR                  szSrc, szDst;
    UINT                    i;

    for (pd3dtfd = (&D3D_BeginTestFunctionTable) + 1;
        pd3dtfd < &D3D_EndTestFunctionTable; pd3dtfd++)
    {
        if ((PD3DTESTFUNCTIONDESC)hModule == pd3dtfd) {
            for (szSrc = pd3dtfd->szModule, szDst = szModuleName, i = 0;
                 *szSrc && i < dwSize - 1; szSrc++, szDst++, i++)
            {
                *szDst = *szSrc;
            }
            *szDst = '\0';
            return i;
        }
    }

    *szModuleName = '\0';
    return 0;
*/

#endif // UNDER_XBOX
}

//******************************************************************************
// CMap32
//******************************************************************************

//******************************************************************************
CMap32::CMap32() {

    m_ppairList = NULL;
}

//******************************************************************************
CMap32::~CMap32() {

    PPAIR32 ppair;

    for (ppair = m_ppairList; m_ppairList; ppair = m_ppairList) {
        m_ppairList = m_ppairList->ppairNext;
        MemFree(ppair);
    }
}

//******************************************************************************
BOOL CMap32::Add(DWORD dwKey, DWORD dwData) {

    PPAIR32 ppair;
    ppair = (PPAIR32)MemAlloc(sizeof(PAIR32));
    if (!ppair) {
        return FALSE;
    }
    Remove(dwKey);
    ppair->dwKey = dwKey;
    ppair->dwData = dwData;
    ppair->ppairNext = m_ppairList;
    m_ppairList = ppair;
    return TRUE;
}

//******************************************************************************
BOOL CMap32::Remove(DWORD dwKey) {

    PPAIR32 ppair, ppairDel;

    if (m_ppairList) {

        if (m_ppairList->dwKey == dwKey) {
            ppair = m_ppairList->ppairNext;
            MemFree(m_ppairList);
            m_ppairList = ppair;
            return TRUE;
        }

        else {

            for (ppair = m_ppairList; 
                 ppair->ppairNext && ppair->ppairNext->dwKey != dwKey; 
                 ppair = ppair->ppairNext
            );

            if (ppair->ppairNext) {
                ppairDel = ppair->ppairNext;
                ppair->ppairNext = ppairDel->ppairNext;
                MemFree(ppairDel);
                return TRUE;
            }
        }
    }

    return FALSE;
}

//******************************************************************************
BOOL CMap32::Find(DWORD dwKey, LPDWORD pdwData) {

    PPAIR32 ppair;

    for (ppair = m_ppairList; 
         ppair && ppair->dwKey != dwKey;
         ppair = ppair->ppairNext
    );

    if (ppair) {
        if (pdwData) {
            *pdwData = ppair->dwData;
        }
        return TRUE;
    }

    return FALSE;
};

//******************************************************************************
BOOL CMap32::Find(LPDWORD pdwKey, DWORD dwData) {

    PPAIR32 ppair;

    for (ppair = m_ppairList; 
         ppair && ppair->dwData != dwData;
         ppair = ppair->ppairNext
    );

    if (ppair) {
        if (pdwKey) {
            *pdwKey = ppair->dwKey;
        }
        return TRUE;
    }

    return FALSE;
};
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\test\directx\d3d\frame\d3dlocus\volume.h ===
/*******************************************************************************

Copyright (c) 2000 Microsoft Corporation.  All rights reserved.

File Name:

    volume.h

Description:

    IDirect3DSurface classes.

*******************************************************************************/

#ifndef __VOLUME_H__
#define __VOLUME_H__

//******************************************************************************
// CVolume
//******************************************************************************

//******************************************************************************
class CVolume : public CObject {

protected:

public:

                        CVolume();
                        ~CVolume();
};

//******************************************************************************
class CVolume8 : public CVolume {

protected:

    LPDIRECT3DVOLUME8   m_pd3dv;
    CDevice8*           m_pDevice;

public:

                        CVolume8();
                        ~CVolume8();
    virtual BOOL        Create(CDevice8* pDevice, LPDIRECT3DVOLUME8 pd3ds);

    virtual 
    LPDIRECT3DVOLUME8   GetIDirect3DVolume8();

    // IUnknown

    virtual ULONG       AddRef();
    virtual ULONG       Release();

    // Information

    virtual HRESULT     GetContainer(REFIID riid, CVolumeTexture8** ppContainer);
    virtual HRESULT     GetDevice(CDevice8** ppDevice);
    virtual HRESULT     GetDesc(D3DVOLUME_DESC* pd3dvd);

    // Locking surfaces

    virtual HRESULT     LockBox(D3DLOCKED_BOX* pd3dlb, D3DBOX* pbox, DWORD dwFlags);
    virtual HRESULT     UnlockBox();

    // Private surface data

    virtual HRESULT     GetPrivateData(REFGUID refguid, void* pvData, DWORD* pdwSizeOfData);
    virtual HRESULT     SetPrivateData(REFGUID refguid, void* pvData, DWORD dwSizeOfData, DWORD dwFlags);
    virtual HRESULT     FreePrivateData(REFGUID refguid);
};

//******************************************************************************
class CCVolume8 : public CVolume8 {

protected:

    CClient*            m_pClient;

    VLOCKDESC           m_vlockd;

public:

                        CCVolume8();
                        ~CCVolume8();
    virtual BOOL        Create(CClient* pClient, CDevice8* pDevice, LPDIRECT3DVOLUME8 pd3ds);

    // IUnknown

    virtual ULONG       AddRef();
    virtual ULONG       Release();

    // Information

    virtual HRESULT     GetContainer(REFIID riid, CVolumeTexture8** ppContainer);
    virtual HRESULT     GetDevice(CDevice8** ppDevice);
    virtual HRESULT     GetDesc(D3DVOLUME_DESC* pd3dvd);

    // Locking surfaces

    virtual HRESULT     LockBox(D3DLOCKED_BOX* pd3dlb, D3DBOX* pbox, DWORD dwFlags);
    virtual HRESULT     UnlockBox();

    // Private surface data

    virtual HRESULT     GetPrivateData(REFGUID refguid, void* pvData, DWORD* pdwSizeOfData);
    virtual HRESULT     SetPrivateData(REFGUID refguid, void* pvData, DWORD dwSizeOfData, DWORD dwFlags);
    virtual HRESULT     FreePrivateData(REFGUID refguid);
};

#endif // __VOLUME_H__
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\test\directx\d3d\frame\d3dlocus\volume.cpp ===
/*******************************************************************************

Copyright (c) 2000 Microsoft Corporation.  All rights reserved.

File Name:

    volume.cpp

Author:

    Matt Bronder

Description:

    CVolume methods.

*******************************************************************************/

#include "d3dlocus.h"

#ifdef UNDER_XBOX
#define DEMO_HACK
#endif // UNDER_XBOX

//******************************************************************************
// CVolume
//******************************************************************************

//******************************************************************************
CVolume::CVolume() {
}

//******************************************************************************
CVolume::~CVolume() {
}

//******************************************************************************
// CVolume8
//******************************************************************************

//******************************************************************************
CVolume8::CVolume8() {

    m_pd3dv = NULL;
}

//******************************************************************************
CVolume8::~CVolume8() {

    if (m_pDevice) {
        m_pDevice->RemoveObject(m_pd3dv);
    }
}

//******************************************************************************
BOOL CVolume8::Create(CDevice8* pDevice, LPDIRECT3DVOLUME8 pd3dv) {

    if (m_pd3dv) {
        return FALSE;
    }

    if (pDevice && pd3dv) {

        if (!pDevice->AddObject(pd3dv, this)) {
            return FALSE;
        }

        m_pDevice = pDevice;

        m_pd3dv = pd3dv;
    }

    return (BOOL)m_pd3dv;
}

//******************************************************************************
ULONG CVolume8::AddRef() {

    ULONG uRef = 0;

    if (m_pd3dv) {
        uRef = m_pd3dv->AddRef();
        CObject::AddRef();
    }

    return uRef;
}

//******************************************************************************
ULONG CVolume8::Release() {

    ULONG uRef = 0;

    if (m_pd3dv) {
        uRef = m_pd3dv->Release();
        CObject::Release();
    }

    return uRef;
}

//******************************************************************************
LPDIRECT3DVOLUME8 CVolume8::GetIDirect3DVolume8() {

    return m_pd3dv;
}

//******************************************************************************
HRESULT CVolume8::GetContainer(REFIID riid, CVolumeTexture8** ppContainer) {

    LPDIRECT3DVOLUMETEXTURE8 pd3dtv;
    CVolumeTexture8*         pVolumeTexture;
    HRESULT                  hr = ERR_NOTCREATED;

#ifdef D3DLOCUS_DEBUG
    if (!m_pd3dv) {
        return ERR_NOTCREATED;
    }
#ifndef UNDER_XBOX
    if (riid != IID_IDirect3DVolumeTexture8) {
        return D3DERR_INVALIDCALL;
    }
#endif // !UNDER_XBOX
    if (!ppContainer) {
        return D3DERR_INVALIDCALL;
    }
#endif // D3DLOCUS_DEBUG

    *ppContainer = NULL;

#ifndef UNDER_XBOX
    hr = m_pd3dv->GetContainer(riid, (LPVOID*)&pd3dtv);
#else
#ifndef DEMO_HACK
    hr = m_pd3dv->GetContainer(&pd3dtv);
#else
    hr = m_pd3dv->GetContainer((LPDIRECT3DBASETEXTURE8*)&pd3dtv);
#endif
#endif // UNDER_XBOX
    if (SUCCEEDED(hr)) {
        if (!m_pDevice->FindObject(pd3dtv, (LPVOID*)&pVolumeTexture)) {
            pd3dtv->Release();
            return ERR_NOTCREATED;
        }
        else {
            pVolumeTexture->CObject::AddRef();
            *ppContainer = pVolumeTexture;
        }
    }

    return hr;
}

//******************************************************************************
HRESULT CVolume8::GetDevice(CDevice8** ppDevice) {

    LPDIRECT3DDEVICE8 pd3dd;
    HRESULT           hr = ERR_NOTCREATED;

#ifdef D3DLOCUS_DEBUG
    if (!m_pd3dv || !m_pDevice) {
        return ERR_NOTCREATED;
    }
    if (!ppDevice) {
        return D3DERR_INVALIDCALL;
    }
#endif // D3DLOCUS_DEBUG

    *ppDevice = NULL;

    hr = m_pd3dv->GetDevice(&pd3dd);
    if (SUCCEEDED(hr)) {
        if (pd3dd != m_pDevice->GetIDirect3DDevice8()) {
            DebugString(TEXT("Interface pointers differ for IDirect3DDevice8"));
            DebugBreak();
        }
        m_pDevice->CObject::AddRef();
        *ppDevice = m_pDevice;
    }

    return hr;
}

//******************************************************************************
HRESULT CVolume8::GetDesc(D3DVOLUME_DESC* pd3dvd) {

#ifdef D3DLOCUS_DEBUG
    if (!m_pd3dv) {
        return ERR_NOTCREATED;
    }
#endif // D3DLOCUS_DEBUG

    return m_pd3dv->GetDesc(pd3dvd);
}

//******************************************************************************
HRESULT CVolume8::LockBox(D3DLOCKED_BOX* pd3dlb, D3DBOX* pbox, DWORD dwFlags) {

#ifdef D3DLOCUS_DEBUG
    if (!m_pd3dv) {
        return ERR_NOTCREATED;
    }
#endif // D3DLOCUS_DEBUG

    return m_pd3dv->LockBox(pd3dlb, pbox, dwFlags);
}

//******************************************************************************
HRESULT CVolume8::UnlockBox() {

#ifdef D3DLOCUS_DEBUG
    if (!m_pd3dv) {
        return ERR_NOTCREATED;
    }
#endif // D3DLOCUS_DEBUG

    return m_pd3dv->UnlockBox();
}

//******************************************************************************
HRESULT CVolume8::GetPrivateData(REFGUID refguid, void* pvData, DWORD* pdwSizeOfData) {

#ifdef D3DLOCUS_DEBUG
    if (!m_pd3dv) {
        return ERR_NOTCREATED;
    }
#endif // D3DLOCUS_DEBUG

#ifndef DEMO_HACK
    return m_pd3dv->GetPrivateData(refguid, pvData, pdwSizeOfData);
#else
    return E_NOTIMPL;
#endif // DEMO_HACK
}

//******************************************************************************
HRESULT CVolume8::SetPrivateData(REFGUID refguid, void* pvData, DWORD dwSizeOfData, DWORD dwFlags) {

#ifdef D3DLOCUS_DEBUG
    if (!m_pd3dv) {
        return ERR_NOTCREATED;
    }
#endif // D3DLOCUS_DEBUG

#ifndef DEMO_HACK
    return m_pd3dv->SetPrivateData(refguid, pvData, dwSizeOfData, dwFlags);
#else
    return E_NOTIMPL;
#endif // DEMO_HACK
}

//******************************************************************************
HRESULT CVolume8::FreePrivateData(REFGUID refguid) {

#ifdef D3DLOCUS_DEBUG
    if (!m_pd3dv) {
        return ERR_NOTCREATED;
    }
#endif // D3DLOCUS_DEBUG

#ifndef DEMO_HACK
    return m_pd3dv->FreePrivateData(refguid);
#else
    return E_NOTIMPL;
#endif // DEMO_HACK
}

//******************************************************************************
// CCVolume8
//******************************************************************************

//******************************************************************************
CCVolume8::CCVolume8() {
}

//******************************************************************************
CCVolume8::~CCVolume8() {
}

//******************************************************************************
BOOL CCVolume8::Create(CClient* pClient, CDevice8* pDevice, LPDIRECT3DVOLUME8 pd3dv) {

    if (!pClient) {
        return FALSE;
    }
    m_pClient = pClient;
    return CVolume8::Create(pDevice, pd3dv);
}

//******************************************************************************
ULONG CCVolume8::AddRef() {

    ULONG uRefC = 0, uRefS;

    if (m_pd3dv) {
        uRefC = m_pd3dv->AddRef();
        if (m_pClient->CallMethod(MID_VOL8_AddRef, this, &uRefS)) {
#ifndef UNDER_XBOX
            if (uRefC != uRefS) {
                Log(LOG_WARN, TEXT("IDirect3DVolume8::AddRef result inconsistent [C: %d, S: %d]"), uRefC, uRefS);
            }
#endif // !UNDER_XBOX
        }
        CObject::AddRef();
    }

    return uRefC;
}

//******************************************************************************
ULONG CCVolume8::Release() {

    ULONG uRefC = 0, uRefS;

    if (m_pd3dv) {
        uRefC = m_pd3dv->Release();
        if (m_pClient->CallMethod(MID_VOL8_Release, this, &uRefS)) {
#ifndef UNDER_XBOX
            if (uRefC != uRefS) {
                Log(LOG_WARN, TEXT("IDirect3DVolume8::Release result inconsistent [C: %d, S: %d]"), uRefC, uRefS);
            }
#endif // !UNDER_XBOX
        }
        CObject::Release();
    }

    return uRefC;
}

//******************************************************************************
HRESULT CCVolume8::GetContainer(REFIID riid, CVolumeTexture8** ppContainer) {

    LPDIRECT3DVOLUMETEXTURE8 pd3dtv;
    CVolumeTexture8*         pVolumeTexture;
    HRESULT                  hrC = ERR_NOTCREATED, hrS;

#ifdef D3DLOCUS_DEBUG
    if (!m_pd3dv) {
        return ERR_NOTCREATED;
    }
#ifndef UNDER_XBOX
    if (riid != IID_IDirect3DVolumeTexture8) {
        return D3DERR_INVALIDCALL;
    }
#endif // !UNDER_XBOX
    if (!ppContainer) {
        return D3DERR_INVALIDCALL;
    }
#endif // D3DLOCUS_DEBUG

    *ppContainer = NULL;

#ifndef UNDER_XBOX
    hrC = m_pd3dv->GetContainer(riid, (LPVOID*)&pd3dtv);
#else
#ifndef DEMO_HACK
    hrC = m_pd3dv->GetContainer(&pd3dtv);
#else
    hrC = m_pd3dv->GetContainer((LPDIRECT3DBASETEXTURE8*)&pd3dtv);
#endif
#endif // UNDER_XBOX
    if (SUCCEEDED(hrC)) {
        if (!m_pDevice->FindObject(pd3dtv, (LPVOID*)&pVolumeTexture)) {
            pd3dtv->Release();
            return ERR_NOTCREATED;
        }
        else {
            pVolumeTexture->CObject::AddRef();
            *ppContainer = pVolumeTexture;
            if (m_pClient->CallMethod(MID_VOL8_GetContainer, this, &hrS, &riid, sizeof(GUID), &pVolumeTexture)) {
                if (hrC != hrS) {
                    Log(LOG_WARN, TEXT("IDirect3DVolume8::GetContainer result inconsistent [C: 0x%X, S: 0x%X]"), hrC, hrS);
                }
            }
        }
    }

    return hrC;
}

//******************************************************************************
HRESULT CCVolume8::GetDevice(CDevice8** ppDevice) {

    LPDIRECT3DDEVICE8 pd3dd;
    CDevice8*         pDevice;
    HRESULT           hrC = ERR_NOTCREATED, hrS;

#ifdef D3DLOCUS_DEBUG
    if (!m_pd3dv || !m_pDevice) {
        return ERR_NOTCREATED;
    }
    if (!ppDevice) {
        return D3DERR_INVALIDCALL;
    }
#endif // D3DLOCUS_DEBUG

    *ppDevice = NULL;

    hrC = m_pd3dv->GetDevice(&pd3dd);
    if (SUCCEEDED(hrC)) {
        if (pd3dd != m_pDevice->GetIDirect3DDevice8()) {
            DebugString(TEXT("Interface pointers differ for IDirect3DDevice8"));
            DebugBreak();
        }
        m_pDevice->CObject::AddRef();
        *ppDevice = m_pDevice;
        pDevice = m_pDevice;
    }
    else {
        pDevice = NULL;
    }

    if (m_pClient->CallMethod(MID_VOL8_GetDevice, this, &hrS, &pDevice)) {
        if (hrC != hrS) {
            Log(LOG_WARN, TEXT("IDirect3DVolume8::GetDevice result inconsistent [C: 0x%X, S: 0x%X]"), hrC, hrS);
        }
    }

    return hrC;
}

//******************************************************************************
HRESULT CCVolume8::GetDesc(D3DVOLUME_DESC* pd3dvd) {

#ifndef UNDER_XBOX
    D3DVOLUME_DESC      d3dvd;
#else
    WINX_D3DVOLUME_DESC d3dvd;
#endif // UNDER_XBOX
    HRESULT             hrC, hrS;

#ifdef D3DLOCUS_DEBUG
    if (!m_pd3dv) {
        return ERR_NOTCREATED;
    }
#endif // D3DLOCUS_DEBUG

    hrC = m_pd3dv->GetDesc(pd3dvd);

#ifndef UNDER_XBOX
    if (m_pClient->CallMethod(MID_VOL8_GetDesc, this, &hrS, &d3dvd, sizeof(D3DVOLUME_DESC))) {
#else
    if (m_pClient->CallMethod(MID_VOL8_GetDesc, this, &hrS, &d3dvd, sizeof(WINX_D3DVOLUME_DESC))) {
#endif // UNDER_XBOX
        if (hrC != hrS) {
            Log(LOG_WARN, TEXT("IDirect3DVolume8::GetDesc result inconsistent [C: 0x%X, S: 0x%X]"), hrC, hrS);
        }
        else {
#ifndef UNDER_XBOX
            if (memcmp(pd3dvd, &d3dvd, sizeof(D3DVOLUME_DESC))) {
#else
            if (pd3dvd->Type != d3dvd.Type ||
                pd3dvd->Width != d3dvd.Width ||
                pd3dvd->Height != d3dvd.Height ||
                pd3dvd->Depth != d3dvd.Depth)
            {
#endif // UNDER_XBOX
                Log(LOG_WARN, TEXT("IDirect3DVolume8::GetDesc returned an inconsistent description"));
            }
        }
    }

    return hrC;
}

//******************************************************************************
HRESULT CCVolume8::LockBox(D3DLOCKED_BOX* pd3dlb, D3DBOX* pbox, DWORD dwFlags) {

    HRESULT hrC, hrS;

#ifdef D3DLOCUS_DEBUG
    if (!m_pd3dv) {
        return ERR_NOTCREATED;
    }
#endif // D3DLOCUS_DEBUG

    hrC = m_pd3dv->LockBox(pd3dlb, pbox, dwFlags);

    if (pd3dlb) {
        memcpy(&m_vlockd.d3dlb, pd3dlb, sizeof(D3DLOCKED_BOX));
    }
    else {
        m_vlockd.d3dlb.pBits = 0;
    }
    if (pbox) {
        memcpy(&m_vlockd.box, pbox, sizeof(D3DBOX));
    }
    else {
        m_vlockd.box.Left = m_vlockd.box.Right = m_vlockd.box.Top = m_vlockd.box.Bottom = m_vlockd.box.Front = m_vlockd.box.Back = -1;
    }
    m_vlockd.dwFlags = dwFlags;

    if (m_pClient->CallMethod(MID_VOL8_LockBox, this, &hrS, &m_vlockd.d3dlbSrv, sizeof(D3DLOCKED_BOX), &m_vlockd.box, sizeof(D3DBOX), dwFlags)) {
        if (hrC != hrS) {
            Log(LOG_WARN, TEXT("IDirect3DVolume8::LockBox result inconsistent [C: 0x%X, S: 0x%X]"), hrC, hrS);
        }
    }

    return hrC;
}

//******************************************************************************
HRESULT CCVolume8::UnlockBox() {

    LPBYTE  pBits;
    DWORD   dwSize;
    HRESULT hrC, hrS;

#ifdef D3DLOCUS_DEBUG
    if (!m_pd3dv) {
        return ERR_NOTCREATED;
    }
#endif // D3DLOCUS_DEBUG

    if (m_vlockd.dwFlags & D3DLOCK_READONLY) {
        pBits = NULL;
        dwSize = 0;
    }
    else {
        D3DVOLUME_DESC  d3dvd;
        DWORD           dwWidth, dwHeight, dwDepth, dwBitDepth;
        UINT            i, j;

        m_pd3dv->GetDesc(&d3dvd);
        if (m_vlockd.box.Left == -1) {
            dwWidth = d3dvd.Width;
            dwHeight = d3dvd.Height;
            dwDepth = d3dvd.Depth;
        }
        else {
            dwWidth = m_vlockd.box.Right - m_vlockd.box.Left;
            dwHeight = m_vlockd.box.Bottom - m_vlockd.box.Top;
            dwDepth = m_vlockd.box.Back - m_vlockd.box.Front;
        }
        dwBitDepth = FormatToBitDepth(d3dvd.Format);
        dwSize = dwHeight * dwWidth * dwDepth * dwBitDepth / 8;
        pBits = (LPBYTE)MemAlloc(dwSize);

#ifdef UNDER_XBOX
        if (!XGIsSwizzledFormat(d3dvd.Format)) {
#endif
            if (IsCompressedFormat(d3dvd.Format)) {
                memcpy(pBits, m_vlockd.d3dlb.pBits, dwWidth * dwHeight * dwDepth * dwBitDepth / 8);
            }
            else {
                for (j = 0; j < dwDepth; j++) {
                    for (i = 0; i < dwHeight; i++) {
                        memcpy(pBits + j * dwHeight * dwWidth * dwBitDepth / 8 + i * dwWidth * dwBitDepth / 8, (LPBYTE)m_vlockd.d3dlb.pBits + j * m_vlockd.d3dlb.SlicePitch + i * m_vlockd.d3dlb.RowPitch, dwWidth * dwBitDepth / 8);
                    }
                }
            }
#ifdef UNDER_XBOX
        }
        else {
            // Since locking a sub-box on a swizzled volume is unsupported on Xbox, simply unswizzle the entire volume
            XGUnswizzleBox(m_vlockd.d3dlb.pBits, dwWidth, dwHeight, dwDepth, NULL, pBits, 
                           dwWidth * dwBitDepth / 8, dwWidth * dwHeight * dwBitDepth / 8, NULL, dwBitDepth / 8);
        }
#endif
    }

    hrC = m_pd3dv->UnlockBox();

    if (m_pClient->CallMethod(MID_VOL8_UnlockBox, this, &hrS, &m_vlockd.d3dlbSrv, sizeof(D3DLOCKED_BOX), &m_vlockd.box, sizeof(D3DBOX), m_vlockd.dwFlags, pBits, dwSize)) {
        if (hrC != hrS) {
            Log(LOG_WARN, TEXT("IDirect3DVolume8::UnlockBox result inconsistent [C: 0x%X, S: 0x%X]"), hrC, hrS);
        }
    }

    if (pBits) {
        MemFree(pBits);
    }

    return hrC;
}

//******************************************************************************
HRESULT CCVolume8::GetPrivateData(REFGUID refguid, void* pvData, DWORD* pdwSizeOfData) {

    HRESULT hrC, hrS;

#ifdef D3DLOCUS_DEBUG
    if (!m_pd3dv) {
        return ERR_NOTCREATED;
    }
#endif // D3DLOCUS_DEBUG

    hrC = m_pd3dv->GetPrivateData(refguid, pvData, pdwSizeOfData);

    if (m_pClient->CallMethod(MID_VOL8_GetPrivateData, this, &hrS, &refguid, sizeof(GUID), pvData, *pdwSizeOfData, pdwSizeOfData)) {
        if (hrC != hrS) {
            Log(LOG_WARN, TEXT("IDirect3DVolume8::GetPrivateData result inconsistent [C: 0x%X, S: 0x%X]"), hrC, hrS);
        }
    }

    return hrC;
}

//******************************************************************************
HRESULT CCVolume8::SetPrivateData(REFGUID refguid, void* pvData, DWORD dwSizeOfData, DWORD dwFlags) {

    HRESULT hrC, hrS;

#ifdef D3DLOCUS_DEBUG
    if (!m_pd3dv) {
        return ERR_NOTCREATED;
    }
#endif // D3DLOCUS_DEBUG

    hrC = m_pd3dv->SetPrivateData(refguid, pvData, dwSizeOfData, dwFlags);

    if (m_pClient->CallMethod(MID_VOL8_SetPrivateData, this, &hrS, &refguid, sizeof(GUID), pvData, dwSizeOfData, dwSizeOfData, dwFlags)) {
        if (hrC != hrS) {
            Log(LOG_WARN, TEXT("IDirect3DVolume8::SetPrivateData result inconsistent [C: 0x%X, S: 0x%X]"), hrC, hrS);
        }
    }

    return hrC;
}

//******************************************************************************
HRESULT CCVolume8::FreePrivateData(REFGUID refguid) {

    HRESULT hrC, hrS;

#ifdef D3DLOCUS_DEBUG
    if (!m_pd3dv) {
        return ERR_NOTCREATED;
    }
#endif // D3DLOCUS_DEBUG

    hrC = m_pd3dv->FreePrivateData(refguid);

    if (m_pClient->CallMethod(MID_VOL8_FreePrivateData, this, &hrS, &refguid, sizeof(GUID))) {
        if (hrC != hrS) {
            Log(LOG_WARN, TEXT("IDirect3DVolume8::FreePrivateData result inconsistent [C: 0x%X, S: 0x%X]"), hrC, hrS);
        }
    }

    return hrC;
}
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\test\directx\d3d\frame\gentest\dll\main.cpp ===
/*******************************************************************************

Copyright (c) 2000 Microsoft Corporation.  All rights reserved.

File Name:

    main.cpp

Author:

    Matt Bronder

Description:

    Direct3D Immediate-Mode Framework.

*******************************************************************************/

#define DXCONIO_NO_OVERRIDES

#include "d3dlocus.h"
#ifdef UNDER_XBOX
#include "xtestlib.h"
#include "profilep.h"
#endif // UNDER_XBOX

#ifdef DEBUG
extern "C" {
extern BOOL D3D__SingleStepPusher;
extern BOOL D3D__Parser;
}
#endif

//******************************************************************************
// Function exports to the harness
//******************************************************************************

BOOL WINAPI PREPEND_MODULE(_DllMain)(HINSTANCE hInstance, DWORD dwReason, LPVOID lpvReserved);
void WINAPI PREPEND_MODULE(_StartTest)(HANDLE hLog);
void WINAPI PREPEND_MODULE(_EndTest)(void);

#pragma data_seg(EXPORT_SECTION_NAME)
extern EXP_TABLE_ENTRY PREPEND_MODULE(_ExportTableEntry)[];
__EXTRN_C EXP_TABLE_DIRECTORY PREPEND_MODULE(_ExportTableDirectory) = {
    MODULE_STRING,
    PREPEND_MODULE(_ExportTableEntry)
};
#pragma data_seg()

__EXTRN_C EXP_TABLE_ENTRY PREPEND_MODULE(_ExportTableEntry)[] = {
    { "StartTest", (PROC)PREPEND_MODULE(_StartTest) },
    { "EndTest",   (PROC)PREPEND_MODULE(_EndTest) },
    { "DllMain",   (PROC)PREPEND_MODULE(_DllMain) },
    { NULL, NULL }
};

#pragma data_seg(D3D_SECTION_NAME)
extern "C" int PREPEND_MODULE(_ExhibitScene)(CDisplay* pDisplay, int *pnExitCode);
extern "C" BOOL PREPEND_MODULE(_ValidateDisplay)(CDirect3D8* pd3d, D3DCAPS8* pd3dcaps, D3DDISPLAYMODE* pd3ddm);
D3DTESTFUNCTIONDESC PREPEND_MODULE(_d3dtfd) = {
    TEXT(MODULE_STRING),
    PREPEND_MODULE(_ValidateDisplay),
    PREPEND_MODULE(_ExhibitScene)
};
#pragma data_seg()

//******************************************************************************
// DllMain
//******************************************************************************

//******************************************************************************
//
// Function:
//
//     DllMain
//
// Description:
//
//     Entry point for the library.
//
// Arguments:
//
//     HINSTANCE hInstance      - Library instance handle
//
//     DWORD dwReason           - Reason the function is being called
//
//     LPVOID pvReserved        - Reserved
//
// Return Value:
//
//     When DllMain is called with DLL_PROCESS_ATTACH, TRUE is returned if
//     initialization succeeded and FALSE is returned if it failed.  The
//     return value is ignored for all other reasons.
//
//******************************************************************************
BOOL WINAPI PREPEND_MODULE(_DllMain)(HINSTANCE hInstance, DWORD dwReason, LPVOID lpvReserved) {

    switch (dwReason) {

        case DLL_PROCESS_ATTACH: {

            // Allow global access to the instance handle
#ifndef UNDER_XBOX
            RegisterTestInstance(hInstance);
#endif // !UNDER_XBOX

            break;
        }

        case DLL_PROCESS_DETACH:

            break;
    }

    return TRUE;
}

//******************************************************************************
void WINAPI PREPEND_MODULE(_StartTest)(HANDLE hLog) {

    PD3DTESTFUNCTIONDESC    pd3dtfd;
    HANDLE                  hMutex;
    DWORD                   dwStress;
    DWORD                   dwTestMode;
    CDisplay*               pDisplay;
    D3DCREATIONDESC         d3dcd;
    LPTSTR                  pszLibName;
    DWORD                   dwValue;
    DWORD                   dwSetting;
    BOOL                    bDisplayOK;
    TCHAR                   szTest[96];
    int                     ret;

    // Find the test module
    for (pd3dtfd = (&D3D_BeginTestFunctionTable)+1;
        pd3dtfd < &D3D_EndTestFunctionTable; pd3dtfd++)
    {
        if (!_tcscmp(pd3dtfd->szModule, TEXT(MODULE_STRING))) {
            break;
        }
    }

    // Return immediately if the test wasn't found
    if (pd3dtfd == &D3D_EndTestFunctionTable) {
        return;
    }

    // If we are running in stress, sleep for a short period of time
    // in order to randomize the ordering of the tests
    dwStress = GetProfileInt(TEXT("GeneralSettings"), TEXT("StressTestMode"), 0xFFFFFFFF);
    if (dwStress == 0xFFFFFFFF) {
        return;
    }
    if (dwStress == 1) {
        dwStress = TSTART_STRESS;
        srand(GetTickCount());
        Sleep(rand() % 10000);
    }

    // If any other Direct3D test is running, block until it is finished
    // (if this test was started by oroborus, we are in the same
    // thread and will simply increment the ref count on the mutex
    // and continue)
#ifndef UNDER_XBOX
    hMutex = CreateMutex(NULL, FALSE, TEXT("XBox Direct3D Test"));
#else
    hMutex = CreateMutex(NULL, FALSE, "XBox Direct3D Test");
#endif // !UNDER_XBOX
    if (!hMutex) {
        OutputDebugString(TEXT("CreateMutex failed"));
        return;
    }

    if (WaitForSingleObject(hMutex, INFINITE) != WAIT_OBJECT_0) {
        OutputDebugString(TEXT("The test mutex was abandoned"));
        CloseHandle(hMutex);
        return;
    }

    wsprintf(szTest, TEXT("GRAPHICS: Entering test ") TEXT(MODULE_STRING) TEXT(" with stress == 0x%X\r\n"), dwStress);
    OutputDebugString(szTest);

#ifdef DEBUG
    D3D__Parser = GetProfileInt(TEXT("GeneralSettings"), TEXT("Parser"), 0);
    D3D__SingleStepPusher = GetProfileInt(TEXT("GeneralSettings"), TEXT("SingleStepPusher"), 0);
#endif

    VerifyTextureListIntegrity();

    // If the test has been loaded by oroborus, it will supply the display
    pDisplay = GetDisplay();
    if (pDisplay) {

        // Initialize logging
        CreateLog(hLog);

        // Render the 3D scene
        bDisplayOK = pd3dtfd->pfnExhibit(pDisplay, &ret);

        // Stop logging
        ReleaseLog();

        EnableDisplayStability(bDisplayOK);

        ReleaseMutex(hMutex);
        CloseHandle(hMutex);

        return;
    }

    // Register the test instance
#ifdef UNDER_XBOX
    RegisterTestInstance((HINSTANCE)&(PREPEND_MODULE(_d3dtfd)));
#endif // UNDER_XBOX

    // Set the test startup information
    dwTestMode = GetProfileInt(TEXT("GeneralSettings"), TEXT("ParallelTestMode"), 0xFFFFFFFF);
    if (dwTestMode == 0xFFFFFFFF) {
        ReleaseMutex(hMutex);
        CloseHandle(hMutex);
        return;
    }
    else if (dwTestMode == 0) {
        RegisterStartupContext(TSTART_HARNESS | TSTART_SEQUENTIAL | dwStress);
    }
    else {
        RegisterStartupContext(TSTART_HARNESS | TSTART_SEQUENTIAL | TSTART_PARALLEL | dwStress);
    }

    // Seed the pseudo-random number generator
    srand(GetTickCount());

    // Create a heap for the test
    if (!CreateHeap()) {
        ReleaseMutex(hMutex);
        CloseHandle(hMutex);
        return;
    }

    // Initialize logging
    CreateLog(hLog);

    // Set the validation procedure for the device
    InitCheckDisplayProc(pd3dtfd->pfnValidate);

    // Initialize creation parameters
    memset(&d3dcd, 0, sizeof(D3DCREATIONDESC));
    d3dcd.d3ddt = D3DDEVTYPE_HAL;
    d3dcd.bWindowed = FALSE;
    d3dcd.d3ddm.Width = 640;
    d3dcd.d3ddm.Height = 480;
    d3dcd.d3ddm.Format = D3DFMT_X8R8G8B8;
    d3dcd.bDepthBuffer = TRUE;
    d3dcd.fmtd = D3DFMT_D24S8;
    d3dcd.mst = D3DMULTISAMPLE_2_SAMPLES_MULTISAMPLE_QUINCUNX;
    d3dcd.bAntialias = TRUE;
    d3dcd.uPresentInterval = D3DPRESENT_INTERVAL_IMMEDIATE;

    pszLibName = (LPTSTR)MemAlloc(MAX_PATH * sizeof(TCHAR));
    if (!pszLibName) {
        ReleaseLog();
        ReleaseHeap();
        ReleaseMutex(hMutex);
        CloseHandle(hMutex);
        return;
    }

    if (GetModuleName(GetTestInstance(), pszLibName, MAX_PATH)) {
        dwValue = GetProfileInt(pszLibName, TEXT("DisplayModeWidth"), 0);
        if (dwValue) {
            d3dcd.d3ddm.Width = dwValue;
        }
        dwValue = GetProfileInt(pszLibName, TEXT("DisplayModeHeight"), 0);
        if (dwValue) {
            d3dcd.d3ddm.Height = dwValue;
        }
        dwValue = GetProfileInt(pszLibName, TEXT("DisplayModeFormat"), 0);
        if (dwValue) {
            d3dcd.d3ddm.Format = (D3DFORMAT)dwValue;
        }
        dwValue = GetProfileInt(pszLibName, TEXT("DisplayModeRefresh"), 0xFFFFFFFF);
        if (dwValue != 0xFFFFFFFF) {
            d3dcd.d3ddm.RefreshRate = dwValue;
        }
        dwValue = GetProfileInt(pszLibName, TEXT("DisplayMultiSampleType"), 0xFFFFFFFF);
        if (dwValue != 0xFFFFFFFF) {
            d3dcd.mst = (D3DMULTISAMPLE_TYPE)dwValue;
        }
#ifdef DEBUG
        dwSetting = GetProfileInt(pszLibName, TEXT("Parser"), 0xFFFFFFFF);
        if (dwSetting != 0xFFFFFFFF) {
            D3D__Parser = (BOOL)dwSetting;
        }
        dwSetting = GetProfileInt(pszLibName, TEXT("SingleStepPusher"), 0xFFFFFFFF);
        if (dwSetting != 0xFFFFFFFF) {
            D3D__SingleStepPusher = (BOOL)dwSetting;
        }
#endif
    }

    MemFree(pszLibName);

    // Create the display
    pDisplay = new CDisplay();
    if (!pDisplay) {
        ReleaseLog();
        ReleaseHeap();
        ReleaseMutex(hMutex);
        CloseHandle(hMutex);
        return;
    }

    // Disable DirectInput if we are running in parallel
    if (dwTestMode != 0) {
        pDisplay->EnableInput(FALSE);
    }

    // Initialize the display
    if (!pDisplay->Create(&d3dcd)) {
        DebugString(TEXT("CDisplay::Create failed"));
        pDisplay->Release();
        ReleaseLog();
        ReleaseHeap();
        ReleaseMutex(hMutex);
        CloseHandle(hMutex);
        return;
    }

    VerifyTextureListIntegrity();

    // Render the 3D scene
    pd3dtfd->pfnExhibit(pDisplay, &ret);

    VerifyTextureListIntegrity();

    // Clean up
    pDisplay->Release();

    VerifyTextureListIntegrity();

    // Stop logging
    ReleaseLog();

    // Release the heap
    ReleaseHeap();

    VerifyTextureListIntegrity();

    wsprintf(szTest, TEXT("GRAPHICS: Leaving test ") TEXT(MODULE_STRING) TEXT("\r\n"));
    OutputDebugString(szTest);

    ReleaseMutex(hMutex);
    CloseHandle(hMutex);
}

//******************************************************************************
void WINAPI PREPEND_MODULE(_EndTest)(void) {
}
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\test\directx\d3d\frame\d3dlocus\vpshader.cpp ===
/*******************************************************************************

Copyright (c) 2000 Microsoft Corporation.  All rights reserved.

File Name:

    vpshader.cpp

Author:

    Matt Bronder

Description:

    Direct3D vertex and pixel shader routines.

*******************************************************************************/

#include "d3dlocus.h"

//******************************************************************************
// Vertex shader functions
//******************************************************************************

//******************************************************************************
//
// Function:
//
//     CreateVertexShader
//
// Description:
//
//     Create a vertex shader using the given declaration, function, and
//     usage.  The given function is specified in shader source code in a
//     file or resource of the given name.
//
// Arguments:
//
//     CDevice8* pDevice                    - Pointer to the device object
//
//     LPDWORD pdwDeclaration               - Shader declaration token array
//
//     LPCTSTR szFunction                   - Shader function source code
//
//     DWORD dwUsage                        - Usage controls
//
// Return Value:
//
//     A handle to the created vertex shader on success, INVALID_SHADER_HANDLE
//     on failure.
//
//******************************************************************************
DWORD CreateVertexShader(CDevice8* pDevice, LPDWORD pdwDeclaration,
                            LPCTSTR szFunction, DWORD dwUsage)
{
    DWORD   dwHandle;
    LPBYTE  pData;
    DWORD   dwSize;
    HRESULT hr;

    if (!LoadResourceData(szFunction, (LPVOID*)&pData, &dwSize)) {

#ifndef UNDER_XBOX

        HGLOBAL     hg;
        HRSRC       hrsrc;

        if (hrsrc = FindResource(GetTestInstance(), szFunction, RT_RCDATA)) {
            if (hg = LoadResource(GetTestInstance(), hrsrc)) {
                if (pData = (LPBYTE)LockResource(hg)) {
                    dwSize = SizeofResource(GetTestInstance(), hrsrc);
                }
            }
        }
#else
        pData = NULL;
#endif // UNDER_XBOX
    }

    if (pData) {

        hr = pDevice->CreateVertexShaderAsm(pdwDeclaration, (LPVOID)pData, dwSize, &dwHandle, dwUsage);
        if (ResultFailed(hr, TEXT("IDirect3DDevice8::CreateVertexShader"))) {
            return INVALID_SHADER_HANDLE;
        }

        if (dwHandle == INVALID_SHADER_HANDLE) {

            hr = pDevice->CreateVertexShaderAsm(pdwDeclaration, pData, dwSize, &dwHandle, dwUsage);

            pDevice->DeleteVertexShader(INVALID_SHADER_HANDLE);

            if (ResultFailed(hr, TEXT("IDirect3DDevice8::CreateVertexShader"))) {
                return INVALID_SHADER_HANDLE;
            }
        }

        UnloadResourceData(szFunction);
    }

    else {

        // Attempt to load the shader as a file
        HANDLE  hFile;
        DWORD   dwRead;
#ifdef UNDER_XBOX
        char    aszFunction[MAX_PATH];

        wcstombs(aszFunction, szFunction, MAX_PATH);
        hFile = CreateFile(aszFunction, GENERIC_READ, FILE_SHARE_READ, NULL, 
                           OPEN_EXISTING, FILE_ATTRIBUTE_NORMAL, NULL);
#else
        hFile = CreateFile(szFunction, GENERIC_READ, FILE_SHARE_READ, NULL, 
                           OPEN_EXISTING, FILE_ATTRIBUTE_NORMAL, NULL);
#endif // !UNDER_XBOX

        if (hFile == INVALID_HANDLE_VALUE) {
            DebugString(TEXT("Shader file %s not found"), szFunction);
            return INVALID_SHADER_HANDLE;
        }

        // Get the size of the file
        dwSize = GetFileSize(hFile, NULL);
        if (dwSize == 0xFFFFFFFF) {
            CloseHandle(hFile);
            return INVALID_SHADER_HANDLE;
        }

        // Allocate a buffer for the file data
        pData = (LPBYTE)MemAlloc(dwSize);
        if (!pData) {
            CloseHandle(hFile);
            return INVALID_SHADER_HANDLE;
        }                

        // Read the file into the buffer
        if (!ReadFile(hFile, pData, dwSize, &dwRead, NULL)
            || dwSize != dwRead)
        {
            MemFree(pData);
            CloseHandle(hFile);
            return INVALID_SHADER_HANDLE;
        }

        // Close the file
        CloseHandle(hFile);

        hr = pDevice->CreateVertexShaderAsm(pdwDeclaration, (LPVOID)pData, dwSize, &dwHandle, dwUsage);
        if (ResultFailed(hr, TEXT("IDirect3DDevice8::CreateVertexShader"))) {
            MemFree(pData);
            return INVALID_SHADER_HANDLE;
        }

        if (dwHandle == INVALID_SHADER_HANDLE) {

            hr = pDevice->CreateVertexShaderAsm(pdwDeclaration, pData, dwSize, &dwHandle, dwUsage);

            pDevice->DeleteVertexShader(INVALID_SHADER_HANDLE);

            if (ResultFailed(hr, TEXT("IDirect3DDevice8::CreateVertexShader"))) {
                MemFree(pData);
                return INVALID_SHADER_HANDLE;
            }
        }

        MemFree(pData);
    }

    return dwHandle;
}

//******************************************************************************
//
// Function:
//
//     ReleaseVertexShader
//
// Description:
//
//     Delete the vertex shader corresponding to the given handle.
//
// Arguments:
//
//     CDevice8* pDevice                    - Pointer to the device object
//
//     DWORD dwHandle                       - Shader handle
//
// Return Value:
//
//     None.
//
//******************************************************************************
void ReleaseVertexShader(CDevice8* pDevice, DWORD dwHandle) {

    if (dwHandle != INVALID_SHADER_HANDLE) {
        pDevice->DeleteVertexShader(dwHandle);
    }
}

//******************************************************************************
// Pixel shader functions
//******************************************************************************

//******************************************************************************
//
// Function:
//
//     CreatePixelShader
//
// Description:
//
//     Create a pixel shader using the given function.  The given function is 
//     specified in shader source code in a file or resource of the given name.
//
// Arguments:
//
//     CDevice8* pDevice                    - Pointer to the device object
//
//     LPCTSTR szFunction                   - Shader function source code
//
// Return Value:
//
//     A handle to the created pixel shader on success, INVALID_SHADER_HANDLE
//     on failure.
//
//******************************************************************************
DWORD CreatePixelShader(CDevice8* pDevice, LPCTSTR szFunction) {

    DWORD           dwHandle;
    HRSRC           hrsrc;
    LPBYTE          pData;
    DWORD           dwSize;
    HRESULT         hr;

    if (!LoadResourceData(szFunction, (LPVOID*)&pData, &dwSize)) {

#ifndef UNDER_XBOX

        HGLOBAL     hg;
        HRSRC       hrsrc;

        if (hrsrc = FindResource(GetTestInstance(), szFunction, RT_RCDATA)) {
            if (hg = LoadResource(GetTestInstance(), hrsrc)) {
                if (pData = (LPBYTE)LockResource(hg)) {
                    dwSize = SizeofResource(GetTestInstance(), hrsrc);
                }
            }
        }
#else
        pData = NULL;
#endif // UNDER_XBOX
    }

    if (pData) {

        hr = pDevice->CreatePixelShaderAsm((LPVOID)pData, dwSize, &dwHandle);
        if (ResultFailed(hr, TEXT("IDirect3DDevice8::CreatePixelShader"))) {
            return INVALID_SHADER_HANDLE;            
        }

        if (dwHandle == INVALID_SHADER_HANDLE) {

            hr = pDevice->CreatePixelShaderAsm((LPVOID)pData, dwSize, &dwHandle);

            pDevice->DeletePixelShader(INVALID_SHADER_HANDLE);

            if (ResultFailed(hr, TEXT("IDirect3DDevice8::CreatePixelShader"))) {
                return INVALID_SHADER_HANDLE;
            }
        }

        UnloadResourceData(szFunction);
    }

    else {

        // Attempt to load the shader as a file
        HANDLE  hFile;
        DWORD   dwRead;
#ifdef UNDER_XBOX
        char    aszFunction[MAX_PATH];

        wcstombs(aszFunction, szFunction, MAX_PATH);
        hFile = CreateFile(aszFunction, GENERIC_READ, FILE_SHARE_READ, NULL, 
                           OPEN_EXISTING, FILE_ATTRIBUTE_NORMAL, NULL);
#else
        hFile = CreateFile(szFunction, GENERIC_READ, FILE_SHARE_READ, NULL, 
                           OPEN_EXISTING, FILE_ATTRIBUTE_NORMAL, NULL);
#endif // !UNDER_XBOX

        if (hFile == INVALID_HANDLE_VALUE) {
            DebugString(TEXT("Shader file %s not found"), szFunction);
            return INVALID_SHADER_HANDLE;
        }

        // Get the size of the file
        dwSize = GetFileSize(hFile, NULL);
        if (dwSize == 0xFFFFFFFF) {
            CloseHandle(hFile);
            return INVALID_SHADER_HANDLE;
        }

        // Allocate a buffer for the file data
        pData = (LPBYTE)MemAlloc(dwSize);
        if (!pData) {
            CloseHandle(hFile);
            return INVALID_SHADER_HANDLE;
        }                

        // Read the file into the buffer
        if (!ReadFile(hFile, pData, dwSize, &dwRead, NULL)
            || dwSize != dwRead)
        {
            MemFree(pData);
            CloseHandle(hFile);
            return INVALID_SHADER_HANDLE;
        }

        // Close the file
        CloseHandle(hFile);

        hr = pDevice->CreatePixelShaderAsm((LPVOID)pData, dwSize, &dwHandle);

        if (ResultFailed(hr, TEXT("IDirect3DDevice8::CreatePixelShader"))) {
            MemFree(pData);
            return INVALID_SHADER_HANDLE;            
        }

        if (dwHandle == INVALID_SHADER_HANDLE) {

            hr = pDevice->CreatePixelShaderAsm((LPVOID)pData, dwSize, &dwHandle);

            pDevice->DeletePixelShader(INVALID_SHADER_HANDLE);

            if (ResultFailed(hr, TEXT("IDirect3DDevice8::CreatePixelShader"))) {
                MemFree(pData);
                return INVALID_SHADER_HANDLE;
            }
        }

        MemFree(pData);
    }

    return dwHandle;
}

//******************************************************************************
//
// Function:
//
//     ReleasePixelShader
//
// Description:
//
//     Delete the pixel shader corresponding to the given handle.
//
// Arguments:
//
//     CDevice8* pDevice                    - Pointer to the device object
//
//     DWORD dwHandle                       - Shader handle
//
// Return Value:
//
//     None.
//
//******************************************************************************
void ReleasePixelShader(CDevice8* pDevice, DWORD dwHandle) {

    if (dwHandle != INVALID_SHADER_HANDLE) {
        pDevice->DeletePixelShader(dwHandle);
    }
}
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\test\directx\d3d\frame\d3dlocus\vpshader.h ===
/*******************************************************************************

Copyright (c) 2000 Microsoft Corporation.  All rights reserved.

File Name:

    vpshader.h

Author:

    Matt Bronder

Description:

    Direct3D vertex and pixel shader routines.

*******************************************************************************/

#ifndef __VPSHADER_H__
#define __VPSHADER_H__

//******************************************************************************
// Preprocessor definitions
//******************************************************************************

#define INVALID_SHADER_HANDLE   0xFFFFFFFE

//******************************************************************************
// Function prototypes
//******************************************************************************

DWORD                   CreateVertexShader(CDevice8* pDevice,
                                            LPDWORD pdwDeclaration,
                                            LPCTSTR szFunction = NULL, 
                                            DWORD dwUsage = 0);
void                    ReleaseVertexShader(CDevice8* pDevice, DWORD dwHandle);

DWORD                   CreatePixelShader(CDevice8* pDevice,
                                            LPCTSTR szFunction);
void                    ReleasePixelShader(CDevice8* pDevice, DWORD dwHandle);

#endif //__VPSHADER_H__
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\test\directx\d3d\frame\d3dlocus\voltex.h ===
/*******************************************************************************

Copyright (c) 2000 Microsoft Corporation.  All rights reserved.

File Name:

    voltex.h

Description:

    IDirect3DVolumeTexture classes.

*******************************************************************************/

#ifndef __VOLTEX_H__
#define __VOLTEX_H__

//******************************************************************************
// CVolumeTexture
//******************************************************************************

//******************************************************************************
class CVolumeTexture : public CBaseTexture {

protected:

public:

                        CVolumeTexture();
                        ~CVolumeTexture();
};

//******************************************************************************
class CVolumeTexture8 : public CBaseTexture8 {

protected:

    LPDIRECT3DVOLUMETEXTURE8 m_pd3dtv;

public:

                        CVolumeTexture8();
                        ~CVolumeTexture8();
    virtual BOOL        Create(CDevice8* pDevice, LPDIRECT3DVOLUMETEXTURE8 pd3dtv);

    virtual LPDIRECT3DVOLUMETEXTURE8 GetIDirect3DVolumeTexture8();

    // Information

    virtual HRESULT     GetLevelDesc(UINT uLevel, D3DVOLUME_DESC* pd3dvd);

    // Locking surfaces

    virtual HRESULT     LockBox(UINT uLevel, D3DLOCKED_BOX* pd3dlb, D3DBOX* pbox, DWORD dwFlags);
    virtual HRESULT     UnlockBox(UINT uLevel);

    // Miscellaneous

    virtual HRESULT     AddDirtyBox(D3DBOX* pboxDirty);
    virtual HRESULT     GetVolumeLevel(UINT uLevel, CVolume8** ppVolumeLevel);
};

//******************************************************************************
class CCVolumeTexture8 : public CVolumeTexture8 {

protected:

    CClient*            m_pClient;

    PVLOCKDESC          m_pvlockd;

public:

                        CCVolumeTexture8();
                        ~CCVolumeTexture8();
    virtual BOOL        Create(CClient* pClient, CDevice8* pDevice, LPDIRECT3DVOLUMETEXTURE8 pd3dtv);

    // IUnknown

    virtual ULONG       AddRef();
    virtual ULONG       Release();

    // Resource information

    virtual 
    D3DRESOURCETYPE     GetType();
    virtual HRESULT     GetDevice(CDevice8** ppDevice);

    // Resource private surface data

    virtual HRESULT     GetPrivateData(REFGUID refguid, void* pvData, DWORD* pdwSizeOfData);
    virtual HRESULT     SetPrivateData(REFGUID refguid, void* pvData, DWORD dwSizeOfData, DWORD dwFlags);
    virtual HRESULT     FreePrivateData(REFGUID refguid);

    // Resource management

    virtual DWORD       GetPriority();
    virtual DWORD       SetPriority(DWORD dwNewPriority);
    virtual void        PreLoad();

    // Base texture information

    virtual DWORD       GetLevelCount();

    // Base texture detail

    virtual DWORD       GetLOD();
    virtual DWORD       SetLOD(DWORD dwNewLOD);

    // Information

    virtual HRESULT     GetLevelDesc(UINT uLevel, D3DVOLUME_DESC* pd3dvd);

    // Locking surfaces

    virtual HRESULT     LockBox(UINT uLevel, D3DLOCKED_BOX* pd3dlb, D3DBOX* pbox, DWORD dwFlags);
    virtual HRESULT     UnlockBox(UINT uLevel);

    // Miscellaneous

    virtual HRESULT     AddDirtyBox(D3DBOX* pboxDirty);
    virtual HRESULT     GetVolumeLevel(UINT uLevel, CVolume8** ppVolumeLevel);
};

#endif // __VOLTEX_H__
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\test\directx\d3d\frame\file2cpp\main.cpp ===
#include <windows.h>
#include <tchar.h>
#include <stdio.h>

int APIENTRY WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, 
                                    LPTSTR szCmdLine, int nCmdShow) 
{
    int                     ret = -1;
    HANDLE                  hFile;
    PBYTE                   pdata;
    DWORD                   dwSize, dwRead, dwWritten;
    LPSTR                   pszFile, psz;
    char                    szName[512];
    char                    szNewFile[512];
    char                    szWrite[4096];
    char                    szIndent[] = "\r\n    ";
    UINT                    i;
    DWORD                   dwAttributes;

    dwAttributes = GetFileAttributes(TEXT("modulex.h"));
    if ((dwAttributes != 0xFFFFFFFF) && (dwAttributes & FILE_ATTRIBUTE_READONLY)) {
        MessageBox(NULL, TEXT("The file modulex.h has read-only attributes\n"), TEXT("Abort"), MB_ICONSTOP);
        return 0;
    }

    // Open the file
    hFile = CreateFile(szCmdLine, GENERIC_READ, FILE_SHARE_READ, NULL, OPEN_EXISTING, FILE_ATTRIBUTE_NORMAL, NULL);
    if (hFile == INVALID_HANDLE_VALUE) {
        MessageBox(NULL, TEXT("The specified resource file was not found\n"), TEXT("Abort"), MB_ICONSTOP);
        return 0;
    }

    // Get the size of the file
    dwSize = GetFileSize(hFile, NULL);
    if (dwSize == 0xFFFFFFFF) {
        CloseHandle(hFile);
        return 0;
    }

    // Allocate a buffer for the file data
    pdata = new BYTE[dwSize];
    if (!pdata) {
        CloseHandle(hFile);
        return 0;
    }                

    // Read the file into the buffer
    if (!ReadFile(hFile, pdata, dwSize, &dwRead, NULL)
        || dwSize != dwRead)
    {
        delete [] pdata;
        CloseHandle(hFile);
        return 0;
    }

    // Close the file
    CloseHandle(hFile);

    for (pszFile = szCmdLine + strlen(szCmdLine) - 1; pszFile > szCmdLine && *pszFile != TEXT('\\'); pszFile--);
    if (*pszFile == TEXT('\\')) {
        pszFile++;
    }

    strcpy(szName, pszFile);
    for (psz = szName; *psz != TEXT('\0') && *psz != TEXT('.'); psz++);
    *psz = TEXT('\0');

    sprintf(szNewFile, "%s.cpp", pszFile);

    hFile = CreateFile(szNewFile, GENERIC_WRITE, 0, NULL, CREATE_ALWAYS, FILE_ATTRIBUTE_NORMAL, NULL);
    if (hFile == INVALID_HANDLE_VALUE) {
        delete [] pdata;
        return 0;
    }

    sprintf(szWrite, "/*******************************************************************************\r\n\r\nCopyright (c) 2000 Microsoft Corporation.  All rights reserved.\r\n\r\nFile Name:\r\n\r\n    %s\r\n\r\nDescription\r\n\r\n    Data file for the resource %s.\r\n\r\n*******************************************************************************/\r\n\r\n#include \"d3dlocus.h\"\r\n\r\nstatic BYTE g_%s[] = {\r\n", szNewFile, pszFile, szName);
    WriteFile(hFile, szWrite, strlen(szWrite), &dwWritten, NULL);

    for (i = 0; i < dwSize; i++) {
        if (!(i % 16)) {
            WriteFile(hFile, szIndent, 5, &dwWritten, NULL);
        }
        sprintf(szWrite, "0x%02X, ", pdata[i]);
        WriteFile(hFile, szWrite, strlen(szWrite), &dwWritten, NULL);
    }

    sprintf(szWrite, "\r\n};\r\n\r\nstatic RESOURCEDATA g_rd_%s(TEXT(MODULE_STRING), TEXT(\"%s\"), g_%s, sizeof(g_%s));\r\n\r\n", szName, pszFile, szName, szName);
    WriteFile(hFile, szWrite, strlen(szWrite), &dwWritten, NULL);

    sprintf(szWrite, "extern \"C\" LPVOID PREPEND_MODULE(_%s) = (LPVOID)&g_rd_%s;\r\n", szName, szName);
    WriteFile(hFile, szWrite, strlen(szWrite), &dwWritten, NULL);

    CloseHandle(hFile);

    // Delete the file buffer
    delete [] pdata;

    hFile = CreateFile(TEXT("modulex.h"), GENERIC_WRITE, 0, NULL, OPEN_ALWAYS, FILE_ATTRIBUTE_NORMAL, NULL);
    if (hFile == INVALID_HANDLE_VALUE) {
        MessageBox(NULL, TEXT("Failed to create/open file linkinc.h\n"), TEXT("Abort"), MB_ICONSTOP);
        return 0;
    }

    if (SetFilePointer(hFile, 0, NULL, FILE_END) == 0xFFFFFFFF) {
        MessageBox(NULL, TEXT("Failed to advance to the end of file linkinc.h\n"), TEXT("Abort"), MB_ICONSTOP);
        CloseHandle(hFile);
        return 0;
    }

    sprintf(szWrite, "#pragma comment(linker, \"/include:_module_%s\")\r\n", szName);
    WriteFile(hFile, szWrite, strlen(szWrite), &dwWritten, NULL);

    CloseHandle(hFile);

    return ret;
}
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\test\directx\d3d\frame\locussrv\basetex.cpp ===
#include <windows.h>
#include <stdlib.h>
#include <tchar.h>
#include <winsock.h>
#include <d3dx8.h>
#include "transprt.h"
#include "util.h"
#include "typetran.h"
#include "server.h"

//***********************************************************************************
extern "C" void __cdecl M_BTX8_GetLevelCount(LPDIRECT3DBASETEXTURE8 pd3dtb, DWORD* pdwCount) {

    *pdwCount = pd3dtb->GetLevelCount();
}

//***********************************************************************************
extern "C" void __cdecl M_BTX8_GetLOD(LPDIRECT3DBASETEXTURE8 pd3dtb, DWORD* pdwLOD) {

    *pdwLOD = pd3dtb->GetLOD();
}

//***********************************************************************************
extern "C" void __cdecl M_BTX8_SetLOD(LPDIRECT3DBASETEXTURE8 pd3dtb, DWORD* pdwLOD, DWORD dwNewLOD) {

    *pdwLOD = pd3dtb->SetLOD(dwNewLOD);
}
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\test\directx\d3d\frame\locussrv\indxbuff.cpp ===
#include <windows.h>
#include <stdlib.h>
#include <tchar.h>
#include <winsock.h>
#include <d3dx8.h>
#include "transprt.h"
#include "util.h"
#include "typetran.h"
#include "server.h"

//***********************************************************************************
extern "C" void __cdecl M_IXB8_GetDesc(LPDIRECT3DINDEXBUFFER8 pd3di, HRESULT* phr, D3DINDEXBUFFER_DESC* pd3dibd) {

    *phr = pd3di->GetDesc(pd3dibd);
    REMAPOUT(D3DTI_D3DFORMAT, pd3dibd->Format);
    REMAPOUT(D3DTI_D3DRESOURCETYPE, pd3dibd->Type);
    REMAPOUT(D3DTI_D3DPOOL, pd3dibd->Pool);
}

//***********************************************************************************
extern "C" void __cdecl M_IXB8_Lock(LPDIRECT3DINDEXBUFFER8 pd3di, HRESULT* phr, UINT uOffsetToLock, UINT uSizeToLock, BYTE** ppdata, DWORD dwFlags) {

    *phr = pd3di->Lock(uOffsetToLock, uSizeToLock, ppdata, dwFlags);
}

//***********************************************************************************
extern "C" void __cdecl M_IXB8_Unlock(LPDIRECT3DINDEXBUFFER8 pd3di, HRESULT* phr, LPBYTE pData, UINT uSize, LPBYTE pBits) {

    if (uSize) {
        memcpy(pData, pBits, uSize);
    }

    *phr = pd3di->Unlock();
}
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\test\directx\d3d\frame\locussrv\cubetex.cpp ===
#include <windows.h>
#include <stdlib.h>
#include <tchar.h>
#include <winsock.h>
#include <d3dx8.h>
#include "transprt.h"
#include "util.h"
#include "typetran.h"
#include "server.h"

//***********************************************************************************
extern "C" void __cdecl M_CTX8_GetLevelDesc(LPDIRECT3DCUBETEXTURE8 pd3dtc, HRESULT* phr, UINT uLevel, D3DSURFACE_DESC* pd3dsd) {

    *phr = pd3dtc->GetLevelDesc(uLevel, pd3dsd);
    g_pServer->RemapStruct(FALSE, pd3dsd);
}

//***********************************************************************************
extern "C" void __cdecl M_CTX8_LockRect(LPDIRECT3DCUBETEXTURE8 pd3dtc, HRESULT* phr, D3DCUBEMAP_FACES d3dcf, UINT uLevel, D3DLOCKED_RECT* pd3dlr, RECT* prect, DWORD dwFlags) {

    REMAPIN(D3DTI_D3DCUBEMAP_FACES, d3dcf);
    if (prect->left == -1) {
        prect = NULL;
    }
    dwFlags &= ~XBOX_D3DLOCK_FLAGS;
    *phr = pd3dtc->LockRect(d3dcf, uLevel, pd3dlr, prect, dwFlags);
}

//***********************************************************************************
extern "C" void __cdecl M_CTX8_UnlockRect(LPDIRECT3DCUBETEXTURE8 pd3dtc, HRESULT* phr, D3DCUBEMAP_FACES d3dcf, UINT uLevel, D3DLOCKED_RECT* pd3dlr, RECT* prect, DWORD dwFlags, LPBYTE pBits) {

    REMAPIN(D3DTI_D3DCUBEMAP_FACES, d3dcf);

    if (!(dwFlags & D3DLOCK_READONLY)) {

        D3DSURFACE_DESC d3dsd;
        DWORD           dwWidth, dwHeight, dwBitDepth;
        UINT            i;
        pd3dtc->GetLevelDesc(uLevel, &d3dsd);
        if (prect->left == -1) {
            dwWidth = d3dsd.Width;
            dwHeight = d3dsd.Height;
        }
        else {
            dwWidth = prect->right - prect->left;
            dwHeight = prect->bottom - prect->top;
        }
        dwBitDepth = FormatToBitDepth(d3dsd.Format);
        if (IsCompressedFormat(d3dsd.Format)) {
            memcpy(pd3dlr->pBits, pBits, dwWidth * dwHeight * dwBitDepth / 8);
        }
        else {
            for (i = 0; i < dwHeight; i++) {
                memcpy((LPBYTE)pd3dlr->pBits + i * pd3dlr->Pitch, pBits + i * dwWidth * dwBitDepth / 8, dwWidth * dwBitDepth / 8);
            }
        }
    }

    *phr = pd3dtc->UnlockRect(d3dcf, uLevel);
}

//***********************************************************************************
extern "C" void __cdecl M_CTX8_AddDirtyRect(LPDIRECT3DCUBETEXTURE8 pd3dtc, HRESULT* phr, D3DCUBEMAP_FACES d3dcf, RECT* prectDirty) {

    REMAPIN(D3DTI_D3DCUBEMAP_FACES, d3dcf);
    if (prectDirty->left == -1) {
        prectDirty = NULL;
    }
    *phr = pd3dtc->AddDirtyRect(d3dcf, prectDirty);
}

//***********************************************************************************
extern "C" void __cdecl M_CTX8_GetCubeMapSurface(LPDIRECT3DCUBETEXTURE8 pd3dtc, HRESULT* phr, D3DCUBEMAP_FACES d3dcf, UINT uLevel, LPDIRECT3DSURFACE8* ppSurface) {

    REMAPIN(D3DTI_D3DCUBEMAP_FACES, d3dcf);
    *phr = pd3dtc->GetCubeMapSurface(d3dcf, uLevel, ppSurface);
}
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\test\directx\d3d\frame\locussrv\device.cpp ===
#include <windows.h>
#include <stdlib.h>
#include <tchar.h>
#include <winsock.h>
#include <d3dx8.h>
#include "transprt.h"
#include "util.h"
#include "typetran.h"
#include "server.h"

//***********************************************************************************
extern "C" void __cdecl M_DEV8_AddRef(LPDIRECT3DDEVICE8 pd3dd, ULONG* pulRet) {

    *pulRet = pd3dd->AddRef();
}

//***********************************************************************************
extern "C" void __cdecl M_DEV8_Release(LPDIRECT3DDEVICE8 pd3dd, ULONG* pulRet) {

    *pulRet = g_pServer->ReleaseObject(pd3dd);
}

//***********************************************************************************
extern "C" void __cdecl M_DEV8_CreateAdditionalSwapChain(LPDIRECT3DDEVICE8 pd3dd, HRESULT* phr, D3DPRESENT_PARAMETERS* pd3dpp, LPDIRECT3DSWAPCHAIN8* ppSwapChain) {

    g_pServer->RemapStruct(TRUE, pd3dpp);
    *phr = pd3dd->CreateAdditionalSwapChain(pd3dpp, ppSwapChain);
}

//***********************************************************************************
extern "C" void __cdecl M_DEV8_CreateCubeTexture(LPDIRECT3DDEVICE8 pd3dd, HRESULT* phr, UINT uEdgeLength, UINT uLevels, DWORD dwUsage, D3DFORMAT fmt, D3DPOOL pool, LPDIRECT3DCUBETEXTURE8* ppCubeTexture) {

    REMAPIN(D3DTI_D3DFORMAT, fmt);
    REMAPIN(D3DTI_D3DPOOL, pool);
    if ((dwUsage & D3DUSAGE_RENDERTARGET) || (dwUsage & D3DUSAGE_DEPTHSTENCIL)) {
        pool = D3DPOOL_DEFAULT;
    }
    *phr = pd3dd->CreateCubeTexture(uEdgeLength, uLevels, dwUsage, fmt, pool, ppCubeTexture);
}

//***********************************************************************************
extern "C" void __cdecl M_DEV8_CreateDepthStencilSurface(LPDIRECT3DDEVICE8 pd3dd, HRESULT* phr, UINT uWidth, UINT uHeight, D3DFORMAT fmt, D3DMULTISAMPLE_TYPE mst, LPDIRECT3DSURFACE8* ppSurface) {

    REMAPIN(D3DTI_D3DFORMAT, fmt);
    REMAPIN(D3DTI_D3DMULTISAMPLE_TYPE, mst);
    *phr = pd3dd->CreateDepthStencilSurface(uWidth, uHeight, fmt, mst, ppSurface);
}

//***********************************************************************************
extern "C" void __cdecl M_DEV8_CreateImageSurface(LPDIRECT3DDEVICE8 pd3dd, HRESULT* phr, UINT uWidth, UINT uHeight, D3DFORMAT fmt, LPDIRECT3DSURFACE8* ppSurface) {

    REMAPIN(D3DTI_D3DFORMAT, fmt);
    *phr = pd3dd->CreateImageSurface(uWidth, uHeight, fmt, ppSurface);
}

//***********************************************************************************
extern "C" void __cdecl M_DEV8_CreateIndexBuffer(LPDIRECT3DDEVICE8 pd3dd, HRESULT* phr, UINT uLength, DWORD dwUsage, D3DFORMAT fmt, D3DPOOL pool, LPDIRECT3DINDEXBUFFER8* ppIndexBuffer) {

    REMAPIN(D3DTI_D3DFORMAT, fmt);
    REMAPIN(D3DTI_D3DPOOL, pool);
    *phr = pd3dd->CreateIndexBuffer(uLength, dwUsage, fmt, pool, ppIndexBuffer);
}

//***********************************************************************************
extern "C" void __cdecl M_DEV8_CreateRenderTarget(LPDIRECT3DDEVICE8 pd3dd, HRESULT* phr, UINT uWidth, UINT uHeight, D3DFORMAT fmt, D3DMULTISAMPLE_TYPE mst, BOOL bLockable, LPDIRECT3DSURFACE8* ppSurface) {

    REMAPIN(D3DTI_D3DFORMAT, fmt);
    REMAPIN(D3DTI_D3DMULTISAMPLE_TYPE, mst);
    *phr = pd3dd->CreateRenderTarget(uWidth, uHeight, fmt, mst, bLockable, ppSurface);
}

//***********************************************************************************
extern "C" void __cdecl M_DEV8_CreateTexture(LPDIRECT3DDEVICE8 pd3dd, HRESULT* phr, UINT uWidth, UINT uHeight, UINT uLevels, DWORD dwUsage, D3DFORMAT fmt, D3DPOOL pool, LPDIRECT3DTEXTURE8* ppTexture) {

    REMAPIN(D3DTI_D3DFORMAT, fmt);
    REMAPIN(D3DTI_D3DPOOL, pool);
    if ((dwUsage & D3DUSAGE_RENDERTARGET) || (dwUsage & D3DUSAGE_DEPTHSTENCIL)) {
        pool = D3DPOOL_DEFAULT;
    }
    *phr = pd3dd->CreateTexture(uWidth, uHeight, uLevels, dwUsage, fmt, pool, ppTexture);
}

//***********************************************************************************
extern "C" void __cdecl M_DEV8_CreateVertexBuffer(LPDIRECT3DDEVICE8 pd3dd, HRESULT* phr, UINT uLength, DWORD dwUsage, DWORD dwFVF, D3DPOOL pool, LPDIRECT3DVERTEXBUFFER8* ppVertexBuffer) {

    REMAPIN(D3DTI_D3DPOOL, pool);
    *phr = pd3dd->CreateVertexBuffer(uLength, dwUsage, dwFVF, pool, ppVertexBuffer);
}

//***********************************************************************************
extern "C" void __cdecl M_DEV8_CreateVolumeTexture(LPDIRECT3DDEVICE8 pd3dd, HRESULT* phr, UINT uWidth, UINT uHeight, UINT uDepth, UINT uLevels, DWORD dwUsage, D3DFORMAT fmt, D3DPOOL pool, LPDIRECT3DVOLUMETEXTURE8* ppVolumeTexture) {

    REMAPIN(D3DTI_D3DFORMAT, fmt);
    REMAPIN(D3DTI_D3DPOOL, pool);
    *phr = pd3dd->CreateVolumeTexture(uWidth, uHeight, uDepth, uLevels, dwUsage, fmt, pool, ppVolumeTexture);
}

//***********************************************************************************
extern "C" void __cdecl M_DEV8_ApplyStateBlock(LPDIRECT3DDEVICE8 pd3dd, HRESULT* phr, DWORD dwToken) {

    *phr = pd3dd->ApplyStateBlock(dwToken);
}

//***********************************************************************************
extern "C" void __cdecl M_DEV8_BeginStateBlock(LPDIRECT3DDEVICE8 pd3dd, HRESULT* phr) {

    *phr = pd3dd->BeginStateBlock();
}

//***********************************************************************************
extern "C" void __cdecl M_DEV8_EndStateBlock(LPDIRECT3DDEVICE8 pd3dd, HRESULT* phr, LPDWORD pdwToken) {

    *phr = pd3dd->EndStateBlock(pdwToken);
}

//***********************************************************************************
extern "C" void __cdecl M_DEV8_CreateStateBlock(LPDIRECT3DDEVICE8 pd3dd, HRESULT* phr, D3DSTATEBLOCKTYPE sbt, DWORD* pdwToken) {

    REMAPIN(D3DTI_D3DSTATEBLOCKTYPE, sbt);
    *phr = pd3dd->CreateStateBlock(sbt, pdwToken);
}

//***********************************************************************************
extern "C" void __cdecl M_DEV8_DeleteStateBlock(LPDIRECT3DDEVICE8 pd3dd, HRESULT* phr, DWORD dwToken) {

    *phr = pd3dd->DeleteStateBlock(dwToken);
}

//***********************************************************************************
extern "C" void __cdecl M_DEV8_CaptureStateBlock(LPDIRECT3DDEVICE8 pd3dd, HRESULT* phr, DWORD dwToken) {

    *phr = pd3dd->CaptureStateBlock(dwToken);
}

//***********************************************************************************
extern "C" void __cdecl M_DEV8_GetClipStatus(LPDIRECT3DDEVICE8 pd3dd, HRESULT* phr, D3DCLIPSTATUS8* pd3dcs) {

    *phr = pd3dd->GetClipStatus(pd3dcs);
}

//***********************************************************************************
extern "C" void __cdecl M_DEV8_SetClipStatus(LPDIRECT3DDEVICE8 pd3dd, HRESULT* phr, D3DCLIPSTATUS8* pd3dcs) {

    *phr = pd3dd->SetClipStatus(pd3dcs);
}

//***********************************************************************************
extern "C" void __cdecl M_DEV8_GetRenderState(LPDIRECT3DDEVICE8 pd3dd, HRESULT* phr, D3DRENDERSTATETYPE rst, DWORD* pdwValue) {

    REMAPIN(D3DTI_D3DRENDERSTATETYPE, rst);
    *phr = pd3dd->GetRenderState(rst, pdwValue);
}

//***********************************************************************************
extern "C" void __cdecl M_DEV8_SetRenderState(LPDIRECT3DDEVICE8 pd3dd, HRESULT* phr, D3DRENDERSTATETYPE rst, DWORD dwValue) {

    REMAPIN(D3DTI_D3DRENDERSTATETYPE, rst);
    switch (rst) {
        case D3DRS_ZENABLE:
            REMAPIN(D3DTI_D3DZBUFFERTYPE, dwValue);
            break;
        case D3DRS_FILLMODE:
            REMAPIN(D3DTI_D3DFILLMODE, dwValue);
            break;
        case D3DRS_SHADEMODE:
            REMAPIN(D3DTI_D3DSHADEMODE, dwValue);
            break;
        case D3DRS_SRCBLEND:
        case D3DRS_DESTBLEND:
            REMAPIN(D3DTI_D3DBLEND, dwValue);
            break;
        case D3DRS_CULLMODE:
            REMAPIN(D3DTI_D3DCULL, dwValue);
            break;
        case D3DRS_ZFUNC:
        case D3DRS_ALPHAFUNC:
        case D3DRS_STENCILFUNC:
            REMAPIN(D3DTI_D3DCMPFUNC, dwValue);
            break;
        case D3DRS_FOGTABLEMODE:
        case D3DRS_FOGVERTEXMODE:
            REMAPIN(D3DTI_D3DFOGMODE, dwValue);
            break;
        case D3DRS_STENCILFAIL:
        case D3DRS_STENCILZFAIL:
        case D3DRS_STENCILPASS:
            REMAPIN(D3DTI_D3DSTENCILOP, dwValue);
            break;
        case D3DRS_WRAP0:
        case D3DRS_WRAP1:
        case D3DRS_WRAP2:
        case D3DRS_WRAP3:
        case D3DRS_WRAP4:
        case D3DRS_WRAP5:
        case D3DRS_WRAP6:
        case D3DRS_WRAP7: {
            DWORD dwWrap = 0;
            if (dwValue & XBOX_D3DWRAPCOORD_0) {
                dwWrap |= D3DWRAPCOORD_0;
            }
            if (dwValue & XBOX_D3DWRAPCOORD_1) {
                dwWrap |= D3DWRAPCOORD_1;
            }
            if (dwValue & XBOX_D3DWRAPCOORD_2) {
                dwWrap |= D3DWRAPCOORD_2;
            }
            if (dwValue & XBOX_D3DWRAPCOORD_3) {
                dwWrap |= D3DWRAPCOORD_3;
            }
            dwValue = dwWrap;
            break;
        }
        case D3DRS_DIFFUSEMATERIALSOURCE:
        case D3DRS_AMBIENTMATERIALSOURCE:
        case D3DRS_SPECULARMATERIALSOURCE:
        case D3DRS_EMISSIVEMATERIALSOURCE:
            REMAPIN(D3DTI_D3DMATERIALCOLORSOURCE, dwValue);
            break;
        case D3DRS_VERTEXBLEND:
            REMAPIN(D3DTI_D3DVERTEXBLENDFLAGS, dwValue);
            break;
        case D3DRS_PATCHEDGESTYLE:
            REMAPIN(D3DTI_D3DPATCHEDGESTYLE, dwValue);
            break;
        case D3DRS_DEBUGMONITORTOKEN:
            REMAPIN(D3DTI_D3DDEBUGMONITORTOKENS, dwValue);
            break;
        case D3DRS_BLENDOP:
            REMAPIN(D3DTI_D3DBLENDOP, dwValue);
            break;
    }
    *phr = pd3dd->SetRenderState(rst, dwValue);
}

//***********************************************************************************
extern "C" void __cdecl M_DEV8_GetRenderTarget(LPDIRECT3DDEVICE8 pd3dd, HRESULT* phr, LPDIRECT3DSURFACE8* ppRenderTarget) {

    *phr = pd3dd->GetRenderTarget(ppRenderTarget);
}

//***********************************************************************************
extern "C" void __cdecl M_DEV8_SetRenderTarget(LPDIRECT3DDEVICE8 pd3dd, HRESULT* phr, LPDIRECT3DSURFACE8 pRenderTarget, LPDIRECT3DSURFACE8 pDepthStencil) {

    LPDIRECT3DSURFACE8  pd3dsRenderTarget = NULL, pd3dsDepthStencil = NULL;
    DWORD               dwKey;

    if (pRenderTarget) {
        pd3dd->GetRenderTarget(&pd3dsRenderTarget);
    }

    if (pDepthStencil) {
        pd3dd->GetDepthStencilSurface(&pd3dsDepthStencil);
    }

    *phr = pd3dd->SetRenderTarget(pRenderTarget, pDepthStencil);

    // Check if the old render target and/or depth buffer were released when the new targets were set.
    // If they were released, remove them from the address map
    if (pd3dsRenderTarget) {
        if (pd3dsRenderTarget->Release() == 0) {
            if (g_pServer->FindMapping(__ADDRESS, &dwKey, (DWORD)pd3dsRenderTarget)) {
                g_pServer->RemoveMapping(__ADDRESS, dwKey);
            }
        }
    }

    if (pd3dsDepthStencil) {
        if (pd3dsDepthStencil->Release() == 0) {
            if (g_pServer->FindMapping(__ADDRESS, &dwKey, (DWORD)pd3dsDepthStencil)) {
                g_pServer->RemoveMapping(__ADDRESS, dwKey);
            }
        }
    }
}

//***********************************************************************************
extern "C" void __cdecl M_DEV8_GetTransform(LPDIRECT3DDEVICE8 pd3dd, HRESULT* phr, D3DTRANSFORMSTATETYPE tst, D3DMATRIX* pm) {

    REMAPIN(D3DTI_D3DTRANSFORMSTATETYPE, tst);
    *phr = pd3dd->GetTransform(tst, pm);
}

//***********************************************************************************
extern "C" void __cdecl M_DEV8_SetTransform(LPDIRECT3DDEVICE8 pd3dd, HRESULT* phr, D3DTRANSFORMSTATETYPE tst, D3DMATRIX* pm) {

    REMAPIN(D3DTI_D3DTRANSFORMSTATETYPE, tst);
    *phr = pd3dd->SetTransform(tst, pm);
}

//***********************************************************************************
extern "C" void __cdecl M_DEV8_MultiplyTransform(LPDIRECT3DDEVICE8 pd3dd, HRESULT* phr, D3DTRANSFORMSTATETYPE tst, D3DMATRIX* pm) {

    REMAPIN(D3DTI_D3DTRANSFORMSTATETYPE, tst);
    *phr = pd3dd->MultiplyTransform(tst, pm);
}

//***********************************************************************************
extern "C" void __cdecl M_DEV8_Clear(LPDIRECT3DDEVICE8 pd3dd, HRESULT* phr, DWORD dwCount, D3DRECT* prc, DWORD dwFlags, D3DCOLOR c, DWORD fZ, DWORD dwStencil) {

    DWORD dwWinxFlags = 0;

    if (dwFlags & XBOX_D3DCLEAR_TARGET) {
        dwWinxFlags |= D3DCLEAR_TARGET;
    }
    if (dwFlags & XBOX_D3DCLEAR_ZBUFFER) {
        dwWinxFlags |= D3DCLEAR_ZBUFFER;
    }
    if (dwFlags & XBOX_D3DCLEAR_STENCIL) {
        dwWinxFlags |= D3DCLEAR_STENCIL;
    }

    if (prc->x1 == -1) {
        prc = NULL;
    }
    *phr = pd3dd->Clear(dwCount, prc, dwWinxFlags, c, DW2F(fZ), dwStencil);
}

//***********************************************************************************
extern "C" void __cdecl M_DEV8_GetViewport(LPDIRECT3DDEVICE8 pd3dd, HRESULT* phr, D3DVIEWPORT8* pviewport) {

    *phr = pd3dd->GetViewport(pviewport);
}

//***********************************************************************************
extern "C" void __cdecl M_DEV8_SetViewport(LPDIRECT3DDEVICE8 pd3dd, HRESULT* phr, D3DVIEWPORT8* pviewport) {

    *phr = pd3dd->SetViewport(pviewport);
}

//***********************************************************************************
extern "C" void __cdecl M_DEV8_GetClipPlane(LPDIRECT3DDEVICE8 pd3dd, HRESULT* phr, DWORD dwIndex, float* pfPlane) {

    *phr = pd3dd->GetClipPlane(dwIndex, pfPlane);
}

//***********************************************************************************
extern "C" void __cdecl M_DEV8_SetClipPlane(LPDIRECT3DDEVICE8 pd3dd, HRESULT* phr, DWORD dwIndex, float* pfPlane) {

    *phr = pd3dd->SetClipPlane(dwIndex, pfPlane);
}

//***********************************************************************************
extern "C" void __cdecl M_DEV8_GetLight(LPDIRECT3DDEVICE8 pd3dd, HRESULT* phr, DWORD dwIndex, D3DLIGHT8* plight) {

    *phr = pd3dd->GetLight(dwIndex, plight);
    REMAPOUT(D3DTI_D3DLIGHTTYPE, plight->Type);
}

//***********************************************************************************
extern "C" void __cdecl M_DEV8_SetLight(LPDIRECT3DDEVICE8 pd3dd, HRESULT* phr, DWORD dwIndex, D3DLIGHT8* plight) {

    REMAPIN(D3DTI_D3DLIGHTTYPE, plight->Type);
    *phr = pd3dd->SetLight(dwIndex, plight);
}

//***********************************************************************************
extern "C" void __cdecl M_DEV8_LightEnable(LPDIRECT3DDEVICE8 pd3dd, HRESULT* phr, DWORD dwIndex, BOOL bEnable) {

    *phr = pd3dd->LightEnable(dwIndex, bEnable);
}

//***********************************************************************************
extern "C" void __cdecl M_DEV8_GetLightEnable(LPDIRECT3DDEVICE8 pd3dd, HRESULT* phr, DWORD dwIndex, BOOL* pbEnable) {

    *phr = pd3dd->GetLightEnable(dwIndex, pbEnable);
}

//***********************************************************************************
extern "C" void __cdecl M_DEV8_GetMaterial(LPDIRECT3DDEVICE8 pd3dd, HRESULT* phr, D3DMATERIAL8* pmaterial) {

    *phr = pd3dd->GetMaterial(pmaterial);
}

//***********************************************************************************
extern "C" void __cdecl M_DEV8_SetMaterial(LPDIRECT3DDEVICE8 pd3dd, HRESULT* phr, D3DMATERIAL8* pmaterial) {

    *phr = pd3dd->SetMaterial(pmaterial);
}

//***********************************************************************************
extern "C" void __cdecl M_DEV8_GetTexture(LPDIRECT3DDEVICE8 pd3dd, HRESULT* phr, DWORD dwStage, LPDIRECT3DBASETEXTURE8* ppTexture) {

    *phr = pd3dd->GetTexture(dwStage, ppTexture);
}

//***********************************************************************************
extern "C" void __cdecl M_DEV8_SetTexture(LPDIRECT3DDEVICE8 pd3dd, HRESULT* phr, DWORD dwStage, LPDIRECT3DBASETEXTURE8 pTexture) {

    *phr = pd3dd->SetTexture(dwStage, pTexture);
}

//***********************************************************************************
extern "C" void __cdecl M_DEV8_GetTextureStageState(LPDIRECT3DDEVICE8 pd3dd, HRESULT* phr, DWORD dwStage, D3DTEXTURESTAGESTATETYPE txsst, DWORD* pdwValue) {

    REMAPIN(D3DTI_D3DTEXTURESTAGESTATETYPE, txsst);
    *phr = pd3dd->GetTextureStageState(dwStage, txsst, pdwValue);
}

//***********************************************************************************
extern "C" void __cdecl M_DEV8_SetTextureStageState(LPDIRECT3DDEVICE8 pd3dd, HRESULT* phr, DWORD dwStage, D3DTEXTURESTAGESTATETYPE txsst, DWORD dwValue) {

    REMAPIN(D3DTI_D3DTEXTURESTAGESTATETYPE, txsst);
    switch (txsst) {
        case D3DTSS_COLOROP:
        case D3DTSS_ALPHAOP:
            REMAPIN(D3DTI_D3DTEXTUREOP, dwValue);
            break;
        case D3DTSS_ADDRESSU:
        case D3DTSS_ADDRESSV:
        case D3DTSS_ADDRESSW:
            REMAPIN(D3DTI_D3DTEXTUREADDRESS, dwValue);
            break;
        case D3DTSS_MINFILTER:
        case D3DTSS_MAGFILTER:
        case D3DTSS_MIPFILTER:
            REMAPIN(D3DTI_D3DTEXTUREFILTERTYPE, dwValue);
            break;
        case D3DTSS_TEXTURETRANSFORMFLAGS:
            REMAPIN(D3DTI_D3DTEXTURETRANSFORMFLAGS, dwValue);
            break;
    }

    *phr = pd3dd->SetTextureStageState(dwStage, txsst, dwValue);
}

//***********************************************************************************
extern "C" void __cdecl M_DEV8_UpdateTexture(LPDIRECT3DDEVICE8 pd3dd, HRESULT* phr, LPDIRECT3DBASETEXTURE8 pSourceTexture, LPDIRECT3DBASETEXTURE8 pDestinationTexture) {

    *phr = pd3dd->UpdateTexture(pSourceTexture, pDestinationTexture);
}

//***********************************************************************************
extern "C" void __cdecl M_DEV8_ValidateDevice(LPDIRECT3DDEVICE8 pd3dd, HRESULT* phr, DWORD* pdwNumPasses) {

    *phr = pd3dd->ValidateDevice(pdwNumPasses);
}

//***********************************************************************************
extern "C" void __cdecl M_DEV8_GetCurrentTexturePalette(LPDIRECT3DDEVICE8 pd3dd, HRESULT* phr, UINT* puPaletteNumber) {

    *phr = pd3dd->GetCurrentTexturePalette(puPaletteNumber);
}

//***********************************************************************************
extern "C" void __cdecl M_DEV8_SetCurrentTexturePalette(LPDIRECT3DDEVICE8 pd3dd, HRESULT* phr, UINT uPaletteNumber) {

    *phr = pd3dd->SetCurrentTexturePalette(uPaletteNumber);
}

//***********************************************************************************
extern "C" void __cdecl M_DEV8_GetPaletteEntries(LPDIRECT3DDEVICE8 pd3dd, HRESULT* phr, UINT uPaletteNumber, PALETTEENTRY* ppe) {

    *phr = pd3dd->GetPaletteEntries(uPaletteNumber, ppe);
}

//***********************************************************************************
extern "C" void __cdecl M_DEV8_SetPaletteEntries(LPDIRECT3DDEVICE8 pd3dd, HRESULT* phr, UINT uPaletteNumber, PALETTEENTRY* ppe) {

    *phr = pd3dd->SetPaletteEntries(uPaletteNumber, ppe);
}

//***********************************************************************************
extern "C" void __cdecl M_DEV8_CreateVertexShader(LPDIRECT3DDEVICE8 pd3dd, HRESULT* phr, DWORD* pdwDeclaration, DWORD* pdwFunction, DWORD* pdwHandle, DWORD dwUsage) {

    *phr = pd3dd->CreateVertexShader(pdwDeclaration, pdwFunction, pdwHandle, dwUsage);
}

//***********************************************************************************
extern "C" void __cdecl M_DEV8_DeleteVertexShader(LPDIRECT3DDEVICE8 pd3dd, HRESULT* phr, DWORD dwHandle) {

    *phr = pd3dd->DeleteVertexShader(dwHandle);
}

//***********************************************************************************
extern "C" void __cdecl M_DEV8_GetVertexShader(LPDIRECT3DDEVICE8 pd3dd, HRESULT* phr, DWORD* pdwHandle) {

    *phr = pd3dd->GetVertexShader(pdwHandle);
}

//***********************************************************************************
extern "C" void __cdecl M_DEV8_SetVertexShader(LPDIRECT3DDEVICE8 pd3dd, HRESULT* phr, DWORD dwHandle) {

    *phr = pd3dd->SetVertexShader(dwHandle);
}

//***********************************************************************************
extern "C" void __cdecl M_DEV8_GetVertexShaderConstant(LPDIRECT3DDEVICE8 pd3dd, HRESULT* phr, DWORD dwRegister, void* pvConstantData, DWORD dwConstantCount) {

    *phr = pd3dd->GetVertexShaderConstant(dwRegister, pvConstantData, dwConstantCount);
}

//***********************************************************************************
extern "C" void __cdecl M_DEV8_SetVertexShaderConstant(LPDIRECT3DDEVICE8 pd3dd, HRESULT* phr, DWORD dwRegister, void* pvConstantData, DWORD dwConstantCount) {

    *phr = pd3dd->SetVertexShaderConstant(dwRegister, pvConstantData, dwConstantCount);
}

//***********************************************************************************
extern "C" void __cdecl M_DEV8_GetVertexShaderDeclaration(LPDIRECT3DDEVICE8 pd3dd, HRESULT* phr, DWORD dwHandle, void* pvData, DWORD* pdwSizeOfData) {

    *phr = pd3dd->GetVertexShaderDeclaration(dwHandle, pvData, pdwSizeOfData);
}

//***********************************************************************************
extern "C" void __cdecl M_DEV8_GetVertexShaderFunction(LPDIRECT3DDEVICE8 pd3dd, HRESULT* phr, DWORD dwHandle, void* pvData, DWORD* pdwSizeOfData) {

    *phr = pd3dd->GetVertexShaderFunction(dwHandle, pvData, pdwSizeOfData);
}

//***********************************************************************************
extern "C" void __cdecl M_DEV8_CreatePixelShader(LPDIRECT3DDEVICE8 pd3dd, HRESULT* phr, DWORD* pdwFunction, DWORD* pdwHandle) {

    *phr = pd3dd->CreatePixelShader(pdwFunction, pdwHandle);
}

//***********************************************************************************
extern "C" void __cdecl M_DEV8_DeletePixelShader(LPDIRECT3DDEVICE8 pd3dd, HRESULT* phr, DWORD dwHandle) {

    *phr = pd3dd->DeletePixelShader(dwHandle);
}

//***********************************************************************************
extern "C" void __cdecl M_DEV8_GetPixelShader(LPDIRECT3DDEVICE8 pd3dd, HRESULT* phr, DWORD* pdwHandle) {

    *phr = pd3dd->GetPixelShader(pdwHandle);
}

//***********************************************************************************
extern "C" void __cdecl M_DEV8_SetPixelShader(LPDIRECT3DDEVICE8 pd3dd, HRESULT* phr, DWORD dwHandle) {

    *phr = pd3dd->SetPixelShader(dwHandle);
}

//***********************************************************************************
extern "C" void __cdecl M_DEV8_GetPixelShaderConstant(LPDIRECT3DDEVICE8 pd3dd, HRESULT* phr, DWORD dwRegister, void* pvConstantData, DWORD dwConstantCount) {

    *phr = pd3dd->GetPixelShaderConstant(dwRegister, pvConstantData, dwConstantCount);
}

//***********************************************************************************
extern "C" void __cdecl M_DEV8_SetPixelShaderConstant(LPDIRECT3DDEVICE8 pd3dd, HRESULT* phr, DWORD dwRegister, void* pvConstantData, DWORD dwConstantCount) {

    *phr = pd3dd->SetPixelShaderConstant(dwRegister, pvConstantData, dwConstantCount);
}

//***********************************************************************************
extern "C" void __cdecl M_DEV8_GetPixelShaderFunction(LPDIRECT3DDEVICE8 pd3dd, HRESULT* phr, DWORD dwHandle, void* pvData, DWORD* pdwSizeOfData) {

    *phr = pd3dd->GetPixelShaderFunction(dwHandle, pvData, pdwSizeOfData);
}

//***********************************************************************************
extern "C" void __cdecl M_DEV8_Present(LPDIRECT3DDEVICE8 pd3dd, HRESULT* phr, RECT* prectSrc, RECT* prectDst, HWND hDestWindowOverride, RGNDATA* prgnDirtyRegion) {

    if (prectSrc->left == -1) {
        prectSrc = NULL;
    }
    if (prectDst->left == -1) {
        prectDst = NULL;
    }
    if (prgnDirtyRegion->rdh.nCount == 0) {
        prgnDirtyRegion = NULL;
    }
    *phr = pd3dd->Present(prectSrc, prectDst, hDestWindowOverride, prgnDirtyRegion);
}

//***********************************************************************************
extern "C" void __cdecl M_DEV8_Reset(LPDIRECT3DDEVICE8 pd3dd, HRESULT* phr, D3DPRESENT_PARAMETERS* pd3dpp) {

    g_pServer->RemapStruct(TRUE, pd3dpp);
    *phr = pd3dd->Reset(pd3dpp);
}

//***********************************************************************************
extern "C" void __cdecl M_DEV8_BeginScene(LPDIRECT3DDEVICE8 pd3dd, HRESULT* phr) {

    *phr = pd3dd->BeginScene();
}

//***********************************************************************************
extern "C" void __cdecl M_DEV8_EndScene(LPDIRECT3DDEVICE8 pd3dd, HRESULT* phr) {

    *phr = pd3dd->EndScene();
}

//***********************************************************************************
extern "C" void __cdecl M_DEV8_DrawIndexedPrimitive(LPDIRECT3DDEVICE8 pd3dd, HRESULT* phr, D3DPRIMITIVETYPE d3dpt, UINT uMinVertexToShade, UINT uNumVerticesToShade, UINT uStartIndex, UINT uPrimitiveCount) {

    REMAPIN(D3DTI_D3DPRIMITIVETYPE, d3dpt);
    *phr = pd3dd->DrawIndexedPrimitive(d3dpt, uMinVertexToShade, uNumVerticesToShade, uStartIndex, uPrimitiveCount);
}

//***********************************************************************************
extern "C" void __cdecl M_DEV8_DrawIndexedPrimitiveUP(LPDIRECT3DDEVICE8 pd3dd, HRESULT* phr, D3DPRIMITIVETYPE d3dpt, UINT uMinVertexToShade, UINT uNumVerticesToShade, UINT uPrimitiveCount, void* pvIndices, D3DFORMAT fmtIndex, void* pvVertices, UINT uStride) {

    REMAPIN(D3DTI_D3DPRIMITIVETYPE, d3dpt);
    *phr = pd3dd->DrawIndexedPrimitiveUP(d3dpt, uMinVertexToShade, uNumVerticesToShade, uPrimitiveCount, pvIndices, fmtIndex, pvVertices, uStride);
}

//***********************************************************************************
extern "C" void __cdecl M_DEV8_DrawPrimitive(LPDIRECT3DDEVICE8 pd3dd, HRESULT* phr, D3DPRIMITIVETYPE d3dpt, UINT uStartVertex, UINT uPrimitiveCount) {

    REMAPIN(D3DTI_D3DPRIMITIVETYPE, d3dpt);
    *phr = pd3dd->DrawPrimitive(d3dpt, uStartVertex, uPrimitiveCount);
}

//***********************************************************************************
extern "C" void __cdecl M_DEV8_DrawPrimitiveUP(LPDIRECT3DDEVICE8 pd3dd, HRESULT* phr, D3DPRIMITIVETYPE d3dpt, UINT uPrimitiveCount, void* pvVertices, UINT uStride) {

    REMAPIN(D3DTI_D3DPRIMITIVETYPE, d3dpt);
    *phr = pd3dd->DrawPrimitiveUP(d3dpt, uPrimitiveCount, pvVertices, uStride);
}

//***********************************************************************************
extern "C" void __cdecl M_DEV8_DeletePatch(LPDIRECT3DDEVICE8 pd3dd, HRESULT* phr, UINT uHandle) {

    *phr = pd3dd->DeletePatch(uHandle);
}

//***********************************************************************************
extern "C" void __cdecl M_DEV8_DrawRectPatch(LPDIRECT3DDEVICE8 pd3dd, HRESULT* phr, UINT uHandle, float* pfNumSegs, D3DRECTPATCH_INFO* prpi) {

    REMAPIN(D3DTI_D3DBASISTYPE, prpi->Basis);
    REMAPIN(D3DTI_D3DORDERTYPE, prpi->Order);
    *phr = pd3dd->DrawRectPatch(uHandle, pfNumSegs, prpi);
}

//***********************************************************************************
extern "C" void __cdecl M_DEV8_DrawTriPatch(LPDIRECT3DDEVICE8 pd3dd, HRESULT* phr, UINT uHandle, float* pfNumSegs, D3DTRIPATCH_INFO* ptsi) {

    REMAPIN(D3DTI_D3DBASISTYPE, ptsi->Basis);
    REMAPIN(D3DTI_D3DORDERTYPE, ptsi->Order);
    *phr = pd3dd->DrawTriPatch(uHandle, pfNumSegs, ptsi);
}

//***********************************************************************************
extern "C" void __cdecl M_DEV8_GetStreamSource(LPDIRECT3DDEVICE8 pd3dd, HRESULT* phr, UINT uStream, LPDIRECT3DVERTEXBUFFER8* ppVertexData, UINT* puStride) {

    *phr = pd3dd->GetStreamSource(uStream, ppVertexData, puStride);
}

//***********************************************************************************
extern "C" void __cdecl M_DEV8_SetStreamSource(LPDIRECT3DDEVICE8 pd3dd, HRESULT* phr, UINT uStream, LPDIRECT3DVERTEXBUFFER8 pVertexData, UINT uStride) {

    *phr = pd3dd->SetStreamSource(uStream, pVertexData, uStride);
}

//***********************************************************************************
extern "C" void __cdecl M_DEV8_GetIndices(LPDIRECT3DDEVICE8 pd3dd, HRESULT* phr, LPDIRECT3DINDEXBUFFER8* ppIndexData, UINT* puBaseIndex) {

    *phr = pd3dd->GetIndices(ppIndexData, puBaseIndex);
}

//***********************************************************************************
extern "C" void __cdecl M_DEV8_SetIndices(LPDIRECT3DDEVICE8 pd3dd, HRESULT* phr, LPDIRECT3DINDEXBUFFER8 pIndexData, UINT uBaseIndex) {

    *phr = pd3dd->SetIndices(pIndexData, uBaseIndex);
}

//***********************************************************************************
extern "C" void __cdecl M_DEV8_GetAvailableTextureMem(LPDIRECT3DDEVICE8 pd3dd, UINT* puAvail) {

    *puAvail = pd3dd->GetAvailableTextureMem();
}

//***********************************************************************************
extern "C" void __cdecl M_DEV8_GetCreationParameters(LPDIRECT3DDEVICE8 pd3dd, HRESULT* phr, D3DDEVICE_CREATION_PARAMETERS* pd3dcp) {

    *phr = pd3dd->GetCreationParameters(pd3dcp);
    REMAPOUT(D3DTI_D3DDEVTYPE, pd3dcp->DeviceType);
}

//***********************************************************************************
extern "C" void __cdecl M_DEV8_GetDeviceCaps(LPDIRECT3DDEVICE8 pd3dd, HRESULT* phr, D3DCAPS8* pd3dcaps) {

    *phr = pd3dd->GetDeviceCaps(pd3dcaps);
}

//***********************************************************************************
extern "C" void __cdecl M_DEV8_GetDirect3D(LPDIRECT3DDEVICE8 pd3dd, HRESULT* phr, LPDIRECT3D8* ppDirect3D) {

    *phr = pd3dd->GetDirect3D(ppDirect3D);
}

//***********************************************************************************
extern "C" void __cdecl M_DEV8_GetInfo(LPDIRECT3DDEVICE8 pd3dd, HRESULT* phr, DWORD dwDevInfoType, void* pvDevInfo, DWORD dwDevInfoSize) {

    *phr = pd3dd->GetInfo(dwDevInfoType, pvDevInfo, dwDevInfoSize);
}

//***********************************************************************************
extern "C" void __cdecl M_DEV8_GetRasterStatus(LPDIRECT3DDEVICE8 pd3dd, HRESULT* phr, D3DRASTER_STATUS* prast) {

    *phr = pd3dd->GetRasterStatus(prast);
}

//***********************************************************************************
extern "C" void __cdecl M_DEV8_GetDisplayMode(LPDIRECT3DDEVICE8 pd3dd, HRESULT* phr, D3DDISPLAYMODE* pMode) {

    *phr = pd3dd->GetDisplayMode(pMode);
    REMAPOUT(D3DTI_D3DFORMAT, pMode->Format);
}

//***********************************************************************************
extern "C" void __cdecl M_DEV8_GetBackBuffer(LPDIRECT3DDEVICE8 pd3dd, HRESULT* phr, UINT uBackBuffer, D3DBACKBUFFER_TYPE bbt, LPDIRECT3DSURFACE8* ppBackBuffer) {

    REMAPIN(D3DTI_D3DBACKBUFFER_TYPE, bbt);
    *phr = pd3dd->GetBackBuffer(uBackBuffer, bbt, ppBackBuffer);
}

//***********************************************************************************
extern "C" void __cdecl M_DEV8_GetDepthStencilSurface(LPDIRECT3DDEVICE8 pd3dd, HRESULT* phr, LPDIRECT3DSURFACE8* ppSurface) {

    *phr = pd3dd->GetDepthStencilSurface(ppSurface);
}

//***********************************************************************************
extern "C" void __cdecl M_DEV8_GetGammaRamp(LPDIRECT3DDEVICE8 pd3dd, D3DGAMMARAMP* pgrRamp) {

    pd3dd->GetGammaRamp(pgrRamp);
}

//***********************************************************************************
extern "C" void __cdecl M_DEV8_SetGammaRamp(LPDIRECT3DDEVICE8 pd3dd, DWORD dwFlags, D3DGAMMARAMP* pgrRamp) {

    pd3dd->SetGammaRamp(dwFlags, pgrRamp);
}

//***********************************************************************************
extern "C" void __cdecl M_DEV8_CopyRects(LPDIRECT3DDEVICE8 pd3dd, HRESULT* phr, LPDIRECT3DSURFACE8 pSrcSurface, RECT* prectSrcRects, UINT uNumSrcRects, LPDIRECT3DSURFACE8 pDstSurface, POINT* ppntDstPoints) {

    *phr = pd3dd->CopyRects(pSrcSurface, prectSrcRects, uNumSrcRects, pDstSurface, ppntDstPoints);
}

//***********************************************************************************
extern "C" void __cdecl M_DEV8_GetFrontBuffer(LPDIRECT3DDEVICE8 pd3dd, HRESULT* phr, LPDIRECT3DSURFACE8 pSurface) {

    *phr = pd3dd->GetFrontBuffer(pSurface);
}

//***********************************************************************************
extern "C" void __cdecl M_DEV8_ProcessVertices(LPDIRECT3DDEVICE8 pd3dd, HRESULT* phr, UINT uStartVertexSrc, UINT uStartVertexDst, UINT uNumVertices, LPDIRECT3DVERTEXBUFFER8 pDstBuffer, DWORD dwFlags) {

    *phr = pd3dd->ProcessVertices(uStartVertexSrc, uStartVertexDst, uNumVertices, pDstBuffer, dwFlags);
}

//***********************************************************************************
extern "C" void __cdecl M_DEV8_ResourceManagerDiscardBytes(LPDIRECT3DDEVICE8 pd3dd, HRESULT* phr, DWORD dwNumBytes) {

    *phr = pd3dd->ResourceManagerDiscardBytes(dwNumBytes);
}

//***********************************************************************************
extern "C" void __cdecl M_DEV8_TestCooperativeLevel(LPDIRECT3DDEVICE8 pd3dd, HRESULT* phr) {

    *phr = pd3dd->TestCooperativeLevel();
}

//***********************************************************************************
extern "C" void __cdecl M_DEV8_SetCursorPosition(LPDIRECT3DDEVICE8 pd3dd, UINT uSX, UINT uSY, DWORD dwFlags) {

    pd3dd->SetCursorPosition(uSX, uSY, dwFlags);
}

//***********************************************************************************
extern "C" void __cdecl M_DEV8_SetCursorProperties(LPDIRECT3DDEVICE8 pd3dd, HRESULT* phr, UINT uHotSpotX, UINT uHotSpotY, LPDIRECT3DSURFACE8 pCursorBitmap) {

    *phr = pd3dd->SetCursorProperties(uHotSpotX, uHotSpotY, pCursorBitmap);
}

//***********************************************************************************
extern "C" void __cdecl M_DEV8_ShowCursor(LPDIRECT3DDEVICE8 pd3dd, BOOL* pbRet, BOOL bShow) {

    *pbRet = pd3dd->ShowCursor(bShow);
}
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\test\directx\d3d\frame\locussrv\direct3d.cpp ===
#include <windows.h>
#include <stdlib.h>
#include <tchar.h>
#include <winsock.h>
#include <d3dx8.h>
#include "transprt.h"
#include "util.h"
#include "typetran.h"
#include "server.h"

//***********************************************************************************
extern "C" void __cdecl M_D3D8_AddRef(LPDIRECT3D8 pd3d, ULONG* pulRet) {

    *pulRet = pd3d->AddRef();
}

//***********************************************************************************
extern "C" void __cdecl M_D3D8_Release(LPDIRECT3D8 pd3d, ULONG* pulRet) {

    *pulRet = g_pServer->ReleaseObject(pd3d);
}

//***********************************************************************************
extern "C" void __cdecl M_D3D8_GetAdapterCount(LPDIRECT3D8 pd3d, UINT* puRet) {

    *puRet = pd3d->GetAdapterCount();
}

//***********************************************************************************
extern "C" void __cdecl M_D3D8_GetAdapterDisplayMode(LPDIRECT3D8 pd3d, HRESULT* phr, UINT uAdapter, D3DDISPLAYMODE* pd3ddm) {

    *phr = pd3d->GetAdapterDisplayMode(uAdapter, pd3ddm);
    REMAPOUT(D3DTI_D3DFORMAT, pd3ddm->Format);
}

//***********************************************************************************
extern "C" void __cdecl M_D3D8_GetAdapterIdentifier(LPDIRECT3D8 pd3d, HRESULT* phr, UINT uAdapter, DWORD dwFlags, D3DADAPTER_IDENTIFIER8* pd3dai) {

    *phr = pd3d->GetAdapterIdentifier(uAdapter, dwFlags, pd3dai);
}

//***********************************************************************************
extern "C" void __cdecl M_D3D8_GetAdapterModeCount(LPDIRECT3D8 pd3d, UINT* puRet, UINT uAdapter) {

    *puRet = pd3d->GetAdapterModeCount(uAdapter);
}

//***********************************************************************************
extern "C" void __cdecl M_D3D8_GetAdapterMonitor(LPDIRECT3D8 pd3d, HMONITOR* phmon, UINT uAdapter) {

    *phmon = pd3d->GetAdapterMonitor(uAdapter);
}

//***********************************************************************************
extern "C" void __cdecl M_D3D8_GetDeviceCaps(LPDIRECT3D8 pd3d, HRESULT* phr, UINT uAdapter, D3DDEVTYPE d3ddt, D3DCAPS8* pd3dcaps) {

    REMAPIN(D3DTI_D3DDEVTYPE, d3ddt);
    *phr = pd3d->GetDeviceCaps(uAdapter, d3ddt, pd3dcaps);
}

//***********************************************************************************
extern "C" void __cdecl M_D3D8_EnumAdapterModes(LPDIRECT3D8 pd3d, HRESULT* phr, UINT uAdapter, UINT uMode, D3DDISPLAYMODE* pd3ddm) {

    *phr = pd3d->EnumAdapterModes(uAdapter, uMode, pd3ddm);
    REMAPOUT(D3DTI_D3DFORMAT, pd3ddm->Format);
}

//***********************************************************************************
extern "C" void __cdecl M_D3D8_RegisterSoftwareDevice(LPDIRECT3D8 pd3d, HRESULT* phr, void* pfnInitialize) {

    *phr = pd3d->RegisterSoftwareDevice(pfnInitialize);
}

//***********************************************************************************
extern "C" void __cdecl M_D3D8_CheckDeviceFormat(LPDIRECT3D8 pd3d, HRESULT* phr, UINT uAdapter, D3DDEVTYPE d3ddt, D3DFORMAT fmtAdapter, DWORD dwUsage, D3DRESOURCETYPE d3drt, D3DFORMAT fmtCheck) {

    REMAPIN(D3DTI_D3DDEVTYPE, d3ddt);
    REMAPIN(D3DTI_D3DFORMAT, fmtAdapter);
    REMAPIN(D3DTI_D3DRESOURCETYPE, d3drt);
    REMAPIN(D3DTI_D3DFORMAT, fmtCheck);
    *phr = pd3d->CheckDeviceFormat(uAdapter, d3ddt, fmtAdapter, dwUsage, d3drt, fmtCheck);
}

//***********************************************************************************
extern "C" void __cdecl M_D3D8_CheckDeviceMultiSampleType(LPDIRECT3D8 pd3d, HRESULT* phr, UINT uAdapter, D3DDEVTYPE d3ddt, D3DFORMAT fmtRenderTarget, BOOL bWindowed, D3DMULTISAMPLE_TYPE d3dmst) {

    REMAPIN(D3DTI_D3DDEVTYPE, d3ddt);
    REMAPIN(D3DTI_D3DFORMAT, fmtRenderTarget);
    REMAPIN(D3DTI_D3DMULTISAMPLE_TYPE, d3dmst);
    *phr = pd3d->CheckDeviceMultiSampleType(uAdapter, d3ddt, fmtRenderTarget, bWindowed, d3dmst);
}

//***********************************************************************************
extern "C" void __cdecl M_D3D8_CheckDeviceType(LPDIRECT3D8 pd3d, HRESULT* phr, UINT uAdapter, D3DDEVTYPE d3ddtCheck, D3DFORMAT fmtDisplayMode, D3DFORMAT fmtBackBuffer, BOOL bWindowed) {

    REMAPIN(D3DTI_D3DDEVTYPE, d3ddtCheck);
    REMAPIN(D3DTI_D3DFORMAT, fmtDisplayMode);
    REMAPIN(D3DTI_D3DFORMAT, fmtBackBuffer);
    *phr = pd3d->CheckDeviceType(uAdapter, d3ddtCheck, fmtDisplayMode, fmtBackBuffer, bWindowed);
}

//***********************************************************************************
extern "C" void __cdecl M_D3D8_CheckDepthStencilMatch(LPDIRECT3D8 pd3d, HRESULT* phr, UINT uAdapter, D3DDEVTYPE d3ddt, D3DFORMAT fmtAdapter, D3DFORMAT fmtrRenderTarget, D3DFORMAT fmtdDepthStencil) {

    REMAPIN(D3DTI_D3DDEVTYPE, d3ddt);
    REMAPIN(D3DTI_D3DFORMAT, fmtAdapter);
    REMAPIN(D3DTI_D3DFORMAT, fmtrRenderTarget);
    REMAPIN(D3DTI_D3DFORMAT, fmtdDepthStencil);
    *phr = pd3d->CheckDepthStencilMatch(uAdapter, d3ddt, fmtAdapter, fmtrRenderTarget, fmtdDepthStencil);
}

//***********************************************************************************
extern "C" void __cdecl M_D3D8_CreateDevice(LPDIRECT3D8 pd3d, HRESULT* phr, UINT uAdapter, D3DDEVTYPE d3ddt, HWND hWndFocus, DWORD dwBehaviorFlags, D3DPRESENT_PARAMETERS* pd3dpp, LPDIRECT3DDEVICE8* pd3dd) {

    REMAPIN(D3DTI_D3DDEVTYPE, d3ddt);
    g_pServer->RemapStruct(TRUE, pd3dpp);
    pd3dpp->hDeviceWindow = g_hWndD3D;
    *phr = pd3d->CreateDevice(uAdapter, d3ddt, g_hWndD3D, dwBehaviorFlags, pd3dpp, pd3dd);
}
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\test\directx\d3d\frame\locussrv\server.h ===
/*******************************************************************************

Copyright (c) 2000 Microsoft Corporation.  All rights reserved.

File Name:

    server.h

Author:

    Matt Bronder

Description:

    Server code for remote reference verification.

*******************************************************************************/

#ifndef __SERVER_H__
#define __SERVER_H__

//***********************************************************************************
// Preprocessor definitions
//***********************************************************************************

#define countof(x)      (sizeof(x) / sizeof(*(x)))

#define REMAPIN(t, x)   g_pServer->RemapType(t, (DWORD)(x), (LPDWORD)&(x))
#define REMAPOUT(t, x)  g_pServer->RemapType(t, (LPDWORD)&(x), (DWORD)(x))
#define REMAP(in, t, x) if (in) \
                            REMAPIN(t, x); \
                        else \
                            REMAPOUT(t, x);

//***********************************************************************************
// Data types
//***********************************************************************************

typedef void (__cdecl *METHODPROC)(...);

typedef struct _METHODDESC {
   METHODPROC pfnCall;
   LPCSTR     szSig;
} METHODDESC, *PMETHODDESC;

//***********************************************************************************
// CServer
//***********************************************************************************
class CServer {

private:

    TCHAR                   m_szWndClassName[32];
    BOOL                    m_bRegistered;

    SOCKET                  m_sEnumerate;
    SOCKET                  m_sClient;
    SOCKET                  m_sListen;
    BOOL                    m_bWSAStartup;
    HANDLE                  m_hThread;
    HANDLE                  m_hExitEvent;
    PPACKET                 m_pPacket;
    PACKET_SC_FAULT         m_pkFault;

    static METHODDESC       m_MethodList[];

    CMap32                  m_pMap[TRANSLATION_TYPES];
    CMap32                  m_pTypeMap[NUM_STATIC_TRANSLATIONS];

    DWORD                   m_dwCRCTable[256];

public:

                            CServer();
                            ~CServer();
    BOOL                    Create();

    void                    Connect();
    void                    Disconnect();
    void                    DispatchSocket(SOCKET s);
    void                    CloseSocket(SOCKET s);

    BOOL                    IsConnected();

    ULONG                   ReleaseObject(IUnknown* punk);
    BOOL                    AddMapping(UINT uType, DWORD dwKey, DWORD dwValue);
    BOOL                    RemoveMapping(UINT uType, DWORD dwKey);
    BOOL                    FindMapping(UINT uType, LPDWORD pdwKey, DWORD dwValue);
    void                    RemapType(D3DTYPEINDEX d3dti, DWORD dwXboxType, LPDWORD pdwWinxType);
    void                    RemapType(D3DTYPEINDEX d3dti, LPDWORD pdwXboxType, DWORD dwWinxType);
    void                    RemapType(BOOL bIn, D3DTYPEINDEX d3dti, LPDWORD pdwXboxType, LPDWORD pdwWinxType);
    void                    RemapStruct(BOOL bIn, D3DSURFACE_DESC* pd3dsd);
    void                    RemapStruct(BOOL bIn, D3DVOLUME_DESC* pd3dvd);
    void                    RemapStruct(BOOL bIn, D3DPRESENT_PARAMETERS* pd3dpp);

    void                    SendState();

    int                     SendPacket(PPACKET ppk, SOCKET s = INVALID_SOCKET);
    BOOL                    RecvPacket(PPACKET ppk = NULL, SOCKET s = INVALID_SOCKET);
    BOOL                    ProcessPacket();

    int                     Send(LPVOID pv, int nSize, SOCKET s = INVALID_SOCKET);
    int                     Recv(LPVOID pv, int nSize, SOCKET s = INVALID_SOCKET);

    DWORD                   ThreadProc();
    friend DWORD WINAPI     ThreadProcFriend(LPVOID lpv);

    LPDIRECT3DSURFACE8      GetFrontBuffer(LPDIRECT3DDEVICE8 pd3dd);
    DWORD                   ComputeSurfaceCRC32(LPDIRECT3DSURFACE8 pd3ds);

private:

    BOOL                    HandleDeviceAffinity(PPACKET_CS_CHECKDEVICEAFFINITY ppk);
    BOOL                    HandleDirect3DCreate8(PPACKET_CS_DIRECT3DCREATE8 ppk);
    BOOL                    HandleMethodCall(PPACKET_CS_CALLMETHOD ppk);
    BOOL                    HandleRefFrameCRC32(PPACKET_CS_GETREFFRAMECRC32 ppk);
    BOOL                    HandleRefFrame(PPACKET_CS_GETREFFRAME ppk);
};

//***********************************************************************************
// Function prototypes
//***********************************************************************************

DWORD WINAPI                ThreadProcFriend(LPVOID lpv);

int                         gethostaddr(IN_ADDR* psin);
int                         gethostaddr(char* addr, int addrlen);

//***********************************************************************************
extern HWND                 g_hWndD3D;
extern CServer*             g_pServer;

#endif // __SERVER_H__
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\test\directx\d3d\frame\locussrv\surface.cpp ===
#include <windows.h>
#include <stdlib.h>
#include <tchar.h>
#include <winsock.h>
#include <d3dx8.h>
#include "transprt.h"
#include "util.h"
#include "typetran.h"
#include "server.h"

//***********************************************************************************
extern "C" void __cdecl M_SUR8_AddRef(LPDIRECT3DSURFACE8 pd3ds, ULONG* pulRet) {

    *pulRet = pd3ds->AddRef();
}

//***********************************************************************************
extern "C" void __cdecl M_SUR8_Release(LPDIRECT3DSURFACE8 pd3ds, ULONG* pulRet) {

    *pulRet = g_pServer->ReleaseObject(pd3ds);
}

//***********************************************************************************
extern "C" void __cdecl M_SUR8_GetContainer(LPDIRECT3DSURFACE8 pd3ds, HRESULT* phr, LPGUID pguid, void** ppContainer) {

    *phr = pd3ds->GetContainer(*pguid, ppContainer);
}

//***********************************************************************************
extern "C" void __cdecl M_SUR8_GetDevice(LPDIRECT3DSURFACE8 pd3ds, HRESULT* phr, LPDIRECT3DDEVICE8* ppDevice) {

    *phr = pd3ds->GetDevice(ppDevice);
}

//***********************************************************************************
extern "C" void __cdecl M_SUR8_GetDesc(LPDIRECT3DSURFACE8 pd3ds, HRESULT* phr, D3DSURFACE_DESC* pd3dsd) {

    *phr = pd3ds->GetDesc(pd3dsd);
    g_pServer->RemapStruct(FALSE, pd3dsd);
}

//***********************************************************************************
extern "C" void __cdecl M_SUR8_LockRect(LPDIRECT3DSURFACE8 pd3ds, HRESULT* phr, D3DLOCKED_RECT* pd3dlr, RECT* prect, DWORD dwFlags) {

    if (prect->left == -1) {
        prect = NULL;
    }
    dwFlags &= ~XBOX_D3DLOCK_FLAGS;
    *phr = pd3ds->LockRect(pd3dlr, prect, dwFlags);
}

//***********************************************************************************
extern "C" void __cdecl M_SUR8_UnlockRect(LPDIRECT3DSURFACE8 pd3ds, HRESULT* phr, D3DLOCKED_RECT* pd3dlr, RECT* prect, DWORD dwFlags, LPBYTE pBits) {

    if (!(dwFlags & D3DLOCK_READONLY)) {

        D3DSURFACE_DESC d3dsd;
        DWORD           dwWidth, dwHeight, dwBitDepth;
        UINT            i;
        pd3ds->GetDesc(&d3dsd);
        if (prect->left == -1) {
            dwWidth = d3dsd.Width;
            dwHeight = d3dsd.Height;
        }
        else {
            dwWidth = prect->right - prect->left;
            dwHeight = prect->bottom - prect->top;
        }
        dwBitDepth = FormatToBitDepth(d3dsd.Format);
        if (IsCompressedFormat(d3dsd.Format)) {
            memcpy(pd3dlr->pBits, pBits, dwWidth * dwHeight * dwBitDepth / 8);
        }
        else {
            for (i = 0; i < dwHeight; i++) {
                memcpy((LPBYTE)pd3dlr->pBits + i * pd3dlr->Pitch, pBits + i * dwWidth * dwBitDepth / 8, dwWidth * dwBitDepth / 8);
            }
        }
    }

    *phr = pd3ds->UnlockRect();
}

//***********************************************************************************
extern "C" void __cdecl M_SUR8_GetPrivateData(LPDIRECT3DSURFACE8 pd3ds, HRESULT* phr, GUID* prefguid, void* pvData, DWORD* pdwSizeOfData) {

    *phr = pd3ds->GetPrivateData(*prefguid, pvData, pdwSizeOfData);
}

//***********************************************************************************
extern "C" void __cdecl M_SUR8_SetPrivateData(LPDIRECT3DSURFACE8 pd3ds, HRESULT* phr, GUID* prefguid, void* pvData, DWORD dwSizeOfData, DWORD dwFlags) {

    *phr = pd3ds->SetPrivateData(*prefguid, pvData, dwSizeOfData, dwFlags);
}

//***********************************************************************************
extern "C" void __cdecl M_SUR8_FreePrivateData(LPDIRECT3DSURFACE8 pd3ds, HRESULT* phr, GUID* prefguid) {

    *phr = pd3ds->FreePrivateData(*prefguid);
}
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\test\directx\d3d\frame\locussrv\swapchn.cpp ===
#include <windows.h>
#include <stdlib.h>
#include <tchar.h>
#include <winsock.h>
#include <d3dx8.h>
#include "transprt.h"
#include "util.h"
#include "typetran.h"
#include "server.h"

//***********************************************************************************
extern "C" void __cdecl M_SWC8_AddRef(LPDIRECT3DSWAPCHAIN8 pd3dsw, ULONG* pulRet) {

    *pulRet = pd3dsw->AddRef();
}

//***********************************************************************************
extern "C" void __cdecl M_SWC8_Release(LPDIRECT3DSWAPCHAIN8 pd3dsw, ULONG* pulRet) {

    *pulRet = g_pServer->ReleaseObject(pd3dsw);
}

//***********************************************************************************
extern "C" void __cdecl M_SWC8_Present(LPDIRECT3DSWAPCHAIN8 pd3dsw, HRESULT* phr, RECT* prectSrc, RECT* prectDst, HWND hDstWindowOverride, RGNDATA* prgnDirtyRegion) {

    if (prectSrc->left == -1) {
        prectSrc = NULL;
    }
    if (prectDst->left == -1) {
        prectDst = NULL;
    }
    if (prgnDirtyRegion->rdh.nCount == 0) {
        prgnDirtyRegion = NULL;
    }
    *phr = pd3dsw->Present(prectSrc, prectDst, hDstWindowOverride, prgnDirtyRegion);
}

//***********************************************************************************
extern "C" void __cdecl M_SWC8_GetBackBuffer(LPDIRECT3DSWAPCHAIN8 pd3dsw, HRESULT* phr, UINT uBackBuffer, D3DBACKBUFFER_TYPE bbt, LPDIRECT3DSURFACE8* ppBackBuffer) {

    REMAPIN(D3DTI_D3DBACKBUFFER_TYPE, bbt);
    *phr = pd3dsw->GetBackBuffer(uBackBuffer, bbt, ppBackBuffer);
}
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\test\directx\d3d\frame\gentest\exe\main.cpp ===
/*******************************************************************************

Copyright (c) 2000 Microsoft Corporation.  All rights reserved.

File Name:

    main.cpp

Author:

    Matt Bronder

Description:

    Direct3D Immediate-Mode Framework.

*******************************************************************************/

#include "d3dlocus.h"

//extern "C" {
//extern BOOL D3D__SingleStepPusher;
//extern BOOL D3D__Parser;
//}

//******************************************************************************
// Function prototypes
//******************************************************************************

#ifdef UNDER_XBOX

typedef enum _FIRMWARE_REENTRY {
    HalHaltRoutine,
    HalRebootRoutine,
    HalQuickRebootRoutine,
    HalKdRebootRoutine,
    HalMaximumRoutine
} FIRMWARE_REENTRY, *PFIRMWARE_REENTRY;

extern "C" VOID
HalReturnToFirmware (
    IN FIRMWARE_REENTRY Routine
    );

#endif // UNDER_XBOX

extern "C" BOOL  PREPEND_MODULE(_ExhibitScene)(CDisplay* pDisplay, int *pnExitCode);
extern "C" BOOL  PREPEND_MODULE(_ValidateDisplay)(CDirect3D8* pd3d, D3DCAPS8* pd3dcaps, 
                                D3DDISPLAYMODE* pd3ddm);

//******************************************************************************
// Function exports to the harness
//******************************************************************************

#ifdef UNDER_XBOX

#pragma data_seg(D3D_SECTION_NAME)
extern "C" BOOL PREPEND_MODULE(_ExhibitScene)(CDisplay* pDisplay, int *pnExitCode);
extern "C" BOOL PREPEND_MODULE(_ValidateDisplay)(CDirect3D8* pd3d, D3DCAPS8* pd3dcaps, D3DDISPLAYMODE* pd3ddm);
D3DTESTFUNCTIONDESC PREPEND_MODULE(_d3dtfd) = {
    TEXT(MODULE_STRING),
    PREPEND_MODULE(_ValidateDisplay),
    PREPEND_MODULE(_ExhibitScene)
};
#pragma data_seg()

#endif // UNDER_XBOX

//******************************************************************************
// WinMain
//******************************************************************************

#ifndef UNDER_XBOX
#define RETURN(x)   return x
#else
#define RETURN(x)   return
#endif // UNDER_XBOX

//******************************************************************************
//
// Function:
//
//     WinMain
//
// Description:
//
//     Entry point for the application.
//
// Arguments:
//
//     HINSTANCE hInstance      - Application instance handle
//
//     HINSTANCE hPrevInstance  - Previous instance of the application (always
//                                NULL for Win32 applications)
//
//     LPSTR szCmdLine          - Pointer to a string specifying the command
//                                line used in launching the application
//                                (excluding the program name)
//
//     int nCmdShow             - State specifying how the window is to be 
//                                displayed on creation
//
// Return Value:
//
//     0 on success, -1 on failure.
//
//******************************************************************************
#ifndef UNDER_XBOX
int APIENTRY WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPSTR szCmdLine, int nCmdShow) 
#else
void __cdecl main()
#endif // UNDER_XBOX
{
    CDisplay*       pDisplay;
    D3DCREATIONDESC d3dcd;
    int             ret;

    // Allow global access to the instance handle
#ifndef UNDER_XBOX
    RegisterTestInstance(hInstance);
#else
    RegisterTestInstance((HINSTANCE)&(PREPEND_MODULE(_d3dtfd)));
#endif

    // Set the test startup context
    RegisterStartupContext(0);

    // Seed the pseudo-random number generator
    srand(GetTickCount());

    // Create a heap for the application
    if (!CreateHeap()) {
        RETURN(0);
    }

    // Initialize logging
    CreateLog(INVALID_HANDLE_VALUE);

    // Set the validation procedure for the device
    InitCheckDisplayProc(PREPEND_MODULE(_ValidateDisplay));

    // Initialize creation parameters
    memset(&d3dcd, 0, sizeof(D3DCREATIONDESC));
    d3dcd.d3ddt = D3DDEVTYPE_HAL;
    d3dcd.bWindowed = FALSE;
    d3dcd.d3ddm.Width = 640;
    d3dcd.d3ddm.Height = 480;
    d3dcd.d3ddm.Format = D3DFMT_X8R8G8B8;
    d3dcd.d3ddm.RefreshRate = 60;
//    SetRect(&d3dcd.rectWnd, 20, 20, 320, 320);
    d3dcd.bDepthBuffer = TRUE;
    d3dcd.fmtd = D3DFMT_D24S8;
    d3dcd.mst = D3DMULTISAMPLE_NONE;
    d3dcd.bAntialias = FALSE;

    // Create the display
    pDisplay = new CDisplay();
    if (!pDisplay) {
        ReleaseLog();
        ReleaseHeap();
        RETURN(0);
    }

    // Initialize the display
    if (!pDisplay->Create(&d3dcd)) {
        DebugString(TEXT("CDisplay::Create failed"));
        pDisplay->Release();
        ReleaseLog();
        ReleaseHeap();
        RETURN(0);
    }

    // Render the 3D scene
    PREPEND_MODULE(_ExhibitScene)(pDisplay, &ret);

    // Clean up
    pDisplay->Release();

    // Stop logging
    ReleaseLog();

    // Release the heap
    ReleaseHeap();

    // Reboot on Xbox
#ifdef UNDER_XBOX
    HalReturnToFirmware(HalQuickRebootRoutine);
#endif

    RETURN(ret);
}
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\test\directx\d3d\frame\locussrv\resource.h ===
//{{NO_DEPENDENCIES}}
// Microsoft Developer Studio generated include file.
//
#define IDR_MENU                        101
#define IDD_ABOUT                       102
#define IDI_CONNECTED                   104
#define IDI_APP                         106
#define IDI_DISCONNECTED                107
#define IDM_EXIT                        40002
#define IDM_ABOUT                       40003

#ifndef IDC_STATIC
#define IDC_STATIC                      (-1)
#endif

/*
// Next default values for new objects
// 
#ifdef APSTUDIO_INVOKED
#ifndef APSTUDIO_READONLY_SYMBOLS
#define _APS_NEXT_RESOURCE_VALUE        111
#define _APS_NEXT_COMMAND_VALUE         40004
#define _APS_NEXT_CONTROL_VALUE         1000
#define _APS_NEXT_SYMED_VALUE           101
#endif
#endif
*/
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\test\directx\d3d\frame\locussrv\resource.cpp ===
#include <windows.h>
#include <stdlib.h>
#include <tchar.h>
#include <winsock.h>
#include <d3dx8.h>
#include "transprt.h"
#include "util.h"
#include "typetran.h"
#include "server.h"

//***********************************************************************************
extern "C" void __cdecl M_RES8_AddRef(LPDIRECT3DRESOURCE8 pd3dres, ULONG* pulRet) {

    *pulRet = pd3dres->AddRef();
}

//***********************************************************************************
extern "C" void __cdecl M_RES8_Release(LPDIRECT3DRESOURCE8 pd3dres, ULONG* pulRet) {

    *pulRet = g_pServer->ReleaseObject(pd3dres);
}

//***********************************************************************************
extern "C" void __cdecl M_RES8_GetType(LPDIRECT3DRESOURCE8 pd3dres, D3DRESOURCETYPE* pd3drt) {

    *pd3drt = pd3dres->GetType();
    REMAPOUT(D3DTI_D3DRESOURCETYPE, *pd3drt);
}

//***********************************************************************************
extern "C" void __cdecl M_RES8_GetDevice(LPDIRECT3DRESOURCE8 pd3dres, HRESULT* phr, LPDIRECT3DDEVICE8* ppDevice) {

    *phr = pd3dres->GetDevice(ppDevice);
}

//***********************************************************************************
extern "C" void __cdecl M_RES8_GetPrivateData(LPDIRECT3DRESOURCE8 pd3dres, HRESULT* phr, GUID* prefguid, void* pvData, DWORD* pdwSizeOfData) {

    *phr = pd3dres->GetPrivateData(*prefguid, pvData, pdwSizeOfData);
}

//***********************************************************************************
extern "C" void __cdecl M_RES8_SetPrivateData(LPDIRECT3DRESOURCE8 pd3dres, HRESULT* phr, GUID* prefguid, void* pvData, DWORD dwSizeOfData, DWORD dwFlags) {

    *phr = pd3dres->SetPrivateData(*prefguid, pvData, dwSizeOfData, dwFlags);
}

//***********************************************************************************
extern "C" void __cdecl M_RES8_FreePrivateData(LPDIRECT3DRESOURCE8 pd3dres, HRESULT* phr, GUID* prefguid) {

    *phr = pd3dres->FreePrivateData(*prefguid);
}

//***********************************************************************************
extern "C" void __cdecl M_RES8_GetPriority(LPDIRECT3DRESOURCE8 pd3dres, DWORD* pdwRet) {

    *pdwRet = pd3dres->GetPriority();
}

//***********************************************************************************
extern "C" void __cdecl M_RES8_SetPriority(LPDIRECT3DRESOURCE8 pd3dres, DWORD* pdwRet, DWORD dwPriority) {

    *pdwRet = pd3dres->SetPriority(dwPriority);
}

//***********************************************************************************
extern "C" void __cdecl M_RES8_PreLoad(LPDIRECT3DRESOURCE8 pd3dres) {

    pd3dres->PreLoad();
}
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\test\directx\d3d\frame\locussrv\main.cpp ===
#include <windows.h>
#include <shellapi.h>
#include <stdlib.h>
#include <tchar.h>
#include <winsock.h>
#include <d3dx8.h>
#include "transprt.h"
#include "util.h"
#include "typetran.h"
#include "server.h"
#include "resource.h"

//******************************************************************************
// Preprocessor definitions
//******************************************************************************

#define WM_TASKBAR          (WM_USER + 123)

#define ICON_DISCONNECTED   0
#define ICON_CONNECTED      1

//******************************************************************************
// Globals
//******************************************************************************

TCHAR                   g_szAppName[] = TEXT("D3DLocus");
HINSTANCE               g_hInstance = NULL;
HWND                    g_hWnd = NULL;
HWND                    g_hDlgAbout = NULL;
HICON                   g_hIcon[2] = {NULL};
CServer*                g_pServer = NULL;

//******************************************************************************
// Function prototypes
//******************************************************************************

BOOL                    RefreshTaskbar();
static void             GetTaskbarData(NOTIFYICONDATA* pnid);
static BOOL             InitTaskbar();
static void             ReleaseTaskbar();
static void             DisplayMenu();
static BOOL CALLBACK    AboutDlgProc(HWND hDlg, UINT uMsg, WPARAM wParam, LPARAM lParam);

//***********************************************************************************
LRESULT CALLBACK WndProc(HWND hWnd, UINT message, WPARAM wParam, LPARAM lParam) {

    HDC         hdc;
    PAINTSTRUCT ps;
    RECT        rect;

    switch (message) {

        case WM_CREATE:
            g_hWnd = hWnd;
            if (!InitTaskbar()) {
                return -1;
            }
            return 0;

        case WM_TASKBAR:

            switch (lParam) {

                case WM_LBUTTONUP:
//                    ToggleState();
                    break;

                case WM_MBUTTONUP:
                case WM_RBUTTONUP:
                    DisplayMenu();
                    break;
            }
            return 0;

        case WM_PAINT:
            hdc = BeginPaint(hWnd, &ps);
            GetClientRect(hWnd, &rect);
            EndPaint(hWnd, &ps);
            return 0;

        case WM_DESTROY:
            ReleaseTaskbar();
            PostQuitMessage(0);
            return 0;

        case WM_KEYDOWN:

            switch (wParam) {

                case VK_ESCAPE: // Exit
                    SendMessage(hWnd, WM_CLOSE, 0, 0);
                    return 0;
            }

            break;

        case WM_COMMAND:

            switch (LOWORD(wParam)) {

//                case IDM_ACTIVE: {
//                    ToggleState();
//                    return 0;
//                }
                
                case IDM_ABOUT:
                    if (g_hDlgAbout) {
                        SetForegroundWindow(g_hDlgAbout);
                    }
                    else {
                        DialogBox(g_hInstance, MAKEINTRESOURCE(IDD_ABOUT), g_hWnd, (DLGPROC)AboutDlgProc);
                    }
                    return 0;

                case IDM_EXIT:
                    ReleaseTaskbar();
                    PostQuitMessage(0);
                    return 0;
            }
   }

    return DefWindowProc(hWnd, message, wParam, lParam);
}

//***********************************************************************************
BOOL CALLBACK AboutDlgProc(HWND hDlg, UINT uMsg, WPARAM wParam, LPARAM lParam) {

    switch (uMsg) {

        case WM_INITDIALOG: {

            RECT rect;

            g_hDlgAbout = hDlg;
            GetWindowRect(hDlg, &rect);
            MoveWindow(hDlg, (GetSystemMetrics(SM_CXSCREEN) - (rect.right  - rect.left)) / 2,
                    (GetSystemMetrics(SM_CYSCREEN) - (rect.bottom - rect.top )) / 2,
                    rect.right - rect.left, rect.bottom - rect.top, FALSE);
            return TRUE;
        }

        case WM_COMMAND:
            switch (LOWORD(wParam)) {
                case IDOK:
                    g_hDlgAbout = NULL;
                    EndDialog(hDlg, LOWORD(wParam));
            }
            break;
    }

    return FALSE;
}

//***********************************************************************************
int WINAPI WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPTSTR lpCmdLine, int nCmdShow) {

    MSG      msg;
    WNDCLASS wc;
    BOOL     bRegistered = FALSE;

    g_hInstance = hInstance;

    if (!CreateHeap()) {
        return 0;
    }

    // Register the window class
    memset(&wc, 0, sizeof(wc));
    wc.style         = CS_HREDRAW | CS_VREDRAW;
    wc.lpfnWndProc   = (WNDPROC)WndProc;   // Window Procedure                       
    wc.cbClsExtra    = 0;
    wc.cbWndExtra    = 0;
    wc.hInstance     = hInstance;          // Owner of this class
    wc.hIcon         = LoadIcon(hInstance, MAKEINTRESOURCE(IDI_APP));
    wc.hCursor       = 0;
    wc.hbrBackground = (HBRUSH)GetStockObject(WHITE_BRUSH);
    wc.lpszMenuName  = 0;
    wc.lpszClassName = g_szAppName;

    RegisterClass(&wc);
    bRegistered = TRUE;

    // Create the main application window
    CreateWindow(g_szAppName, g_szAppName, WS_OVERLAPPEDWINDOW, CW_USEDEFAULT, CW_USEDEFAULT, 
                                    CW_USEDEFAULT, CW_USEDEFAULT, NULL, NULL, hInstance, NULL);

    // Create the transport
    g_pServer = new CServer();
    if (g_pServer) {

        if (g_pServer->Create()) {

        //    ShowWindow(g_hWnd, nCmdShow);
        //    UpdateWindow(g_hWnd);

            while (GetMessage(&msg, NULL, 0, 0)) {
                TranslateMessage(&msg);
                DispatchMessage(&msg);
            }
        }

        delete g_pServer;
    }

    DestroyWindow(g_hWnd);

    if (bRegistered) {
        UnregisterClass(g_szAppName, hInstance);
    }

    ReleaseHeap();

    return msg.wParam;
}

//***********************************************************************************
void GetTaskbarData(NOTIFYICONDATA* pnid) {

    // Initialize the taskbar status icon
    pnid->cbSize = sizeof(NOTIFYICONDATA);
    pnid->hWnd = g_hWnd;
    pnid->uID = 0;
    pnid->uFlags = NIF_ICON | NIF_TIP | NIF_MESSAGE;
    pnid->uCallbackMessage = WM_TASKBAR;
    if (g_pServer && g_pServer->IsConnected()) {
        pnid->hIcon = g_hIcon[ICON_CONNECTED];
        _tcscpy(pnid->szTip, TEXT("D3DLocus [Connected]"));
    }
    else {
        pnid->hIcon = g_hIcon[ICON_DISCONNECTED];
        _tcscpy(pnid->szTip, TEXT("D3DLocus [Disconnected]"));
    }
}

//***********************************************************************************
BOOL InitTaskbar() {

    NOTIFYICONDATA nid;

    // Load the icons that will appear in the bar
    g_hIcon[ICON_DISCONNECTED] = (HICON)LoadImage(g_hInstance, MAKEINTRESOURCE(IDI_DISCONNECTED),
                                        IMAGE_ICON, 16, 16, LR_DEFAULTCOLOR);
    g_hIcon[ICON_CONNECTED] = (HICON)LoadImage(g_hInstance, MAKEINTRESOURCE(IDI_CONNECTED),
                                        IMAGE_ICON, 16, 16, LR_DEFAULTCOLOR);

    // Set the taskbar icon
    GetTaskbarData(&nid);
    if (!Shell_NotifyIcon(NIM_ADD, &nid)) {
        return FALSE;
    }

    return TRUE;
}

//***********************************************************************************
void ReleaseTaskbar() {

    NOTIFYICONDATA nid;
    UINT           i;

    // Remove the application from the taskbar
    ZeroMemory(&nid, sizeof(NOTIFYICONDATA));
    nid.cbSize = sizeof(NOTIFYICONDATA);
    nid.hWnd = g_hWnd;
    
    if (!Shell_NotifyIcon(NIM_DELETE, &nid)) {
        DebugString(TEXT("Shell_NotifyIcon() failed"));
    }

    // Release the taskbar icons
    for (i = 0; i < 2; i++) {
        if (g_hIcon[i]) {
            DestroyIcon(g_hIcon[i]);
            g_hIcon[i] = NULL;
        }
    }
}

//***********************************************************************************
void DisplayMenu() {

    HMENU hMenu, hMenuSub;
    POINT pt;

    // Load the menu
    hMenu = LoadMenu(g_hInstance, MAKEINTRESOURCE(IDR_MENU));
    if (!hMenu) {
        return;
    }
    hMenuSub = GetSubMenu(hMenu, 0);
    if (!hMenuSub) {
        return;
    }

    // Initialize the menu
//    CheckMenuItem(hMenu, IDM_ACTIVE, MF_BYCOMMAND | 
//                    (g_pSchedule->IsActive() ? MF_CHECKED : MF_UNCHECKED));

    // Determine the menu position
    GetCursorPos(&pt);
    pt.y = GetSystemMetrics(SM_CYSCREEN);

    // Display the menu
    TrackPopupMenu(hMenuSub, TPM_BOTTOMALIGN | TPM_RIGHTALIGN | TPM_LEFTBUTTON, pt.x, pt.y, 0, g_hWnd, NULL);

    // Delete the menu
    DestroyMenu(hMenuSub);
    DestroyMenu(hMenu);
}

//***********************************************************************************
BOOL RefreshTaskbar() {

    NOTIFYICONDATA nid;
    GetTaskbarData(&nid);
    return (Shell_NotifyIcon(NIM_MODIFY, &nid) == TRUE);
}
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\test\directx\d3d\frame\locussrv\server.cpp ===
/*******************************************************************************

Copyright (c) 2000 Microsoft Corporation.  All rights reserved.

File Name:

    server.cpp

Author:

    Matt Bronder

Description:

    Server code for remote reference verification.

*******************************************************************************/

#include <windows.h>
#include <stdlib.h>
#include <tchar.h>
#include <winsock2.h>
#include <d3dx8.h>
#include <xboxdbg.h>
#include "transprt.h"
#include "util.h"
#include "typetran.h"
#include "server.h"
#include "resource.h"

// Function prototypes
#define SIG_MACRO(f,s) extern "C" void __cdecl M_##f();
#include "sigs.h"

#define SIG_MACRO(f,s) { (METHODPROC)M_##f, s },
METHODDESC CServer::m_MethodList[] = {
#include "sigs.h"
};

BOOL                    RefreshTaskbar();

extern HINSTANCE        g_hInstance;
extern HWND             g_hWnd;
HWND                    g_hWndD3D;

//***********************************************************************************
LRESULT CALLBACK WndProcD3D(HWND hWnd, UINT message, WPARAM wParam, LPARAM lParam) {

    HDC         hdc;
    PAINTSTRUCT ps;
    RECT        rect;

    switch (message) {

        case WM_PAINT:
            hdc = BeginPaint(hWnd, &ps);
            GetClientRect(hWnd, &rect);
            EndPaint(hWnd, &ps);
            return 0;

        case WM_SETCURSOR:
            SetCursor(NULL);
            return TRUE;

        case WM_DESTROY:
            PostQuitMessage(0);
            return 0;

        case WM_KEYDOWN:

            switch (wParam) {

                case VK_ESCAPE: // Exit
                    SendMessage(g_hWnd, WM_CLOSE, 0, 0);
                    return 0;
            }

            break;
   }

    return DefWindowProc(hWnd, message, wParam, lParam);
}

//***********************************************************************************
CServer::CServer() {

    DWORD   dwCRC;
    UINT    i, j;

    m_bWSAStartup = FALSE;
    m_sEnumerate = INVALID_SOCKET;
    m_sClient = INVALID_SOCKET;
    m_pPacket = NULL;
    m_hThread = NULL;
    m_hExitEvent = NULL;
    m_bRegistered = FALSE;
    _tcscpy(m_szWndClassName, TEXT("D3DLocus Server"));

    // Initialize the CRC table
    for (i = 0; i < 256; i++) {
        dwCRC = i;
        for (j = 0; j < 8; j++) {
            dwCRC = (dwCRC & 1) ? ((dwCRC >> 1) ^ 0xEDB88320L) : (dwCRC >> 1);
        }
        m_dwCRCTable[i] = dwCRC;
    }
}

//***********************************************************************************
CServer::~CServer() {

    HANDLE hThread;

    // Close the enumeration socket
    if (m_sEnumerate != INVALID_SOCKET) {
        shutdown(m_sEnumerate, SD_BOTH);
        closesocket(m_sEnumerate);
        m_sEnumerate = INVALID_SOCKET;
    }

    // Close the client socket
    if (m_sClient != INVALID_SOCKET) {
        shutdown(m_sClient, SD_BOTH);
        closesocket(m_sClient);
        m_sClient = INVALID_SOCKET;
    }

    // Trigger our termination event to cause the worker thread to finish
    SetEvent(m_hExitEvent);

    // Wait for the worker thread to exit
    if (WaitForSingleObject(m_hThread, 3000) != WAIT_OBJECT_0) {
        TerminateThread(m_hThread, STILL_ACTIVE);
        DebugString(TEXT("Unable to close the rendering thread (0x%X)"), m_hThread);
    }
    CloseHandle(m_hThread);

    if (m_hExitEvent) {
        CloseHandle(m_hExitEvent);
    }

    // Delete the packet
    if (m_pPacket) {
        delete [] m_pPacket;
        m_pPacket = NULL;
    }
    
    if (m_bWSAStartup) {
        WSACleanup();
    }

    if (m_bRegistered) {
        UnregisterClass(m_szWndClassName, g_hInstance);
    }
}

//***********************************************************************************
BOOL CServer::Create() {

    WNDCLASS    wc;
    WSADATA     wsa;
    SOCKADDR_IN addr;
    DWORD       dwThreadID;

    // Register the window class
    memset(&wc, 0, sizeof(wc));
    wc.style         = CS_HREDRAW | CS_VREDRAW;
    wc.lpfnWndProc   = (WNDPROC)WndProcD3D;   // Window Procedure                       
    wc.cbClsExtra    = 0;
    wc.cbWndExtra    = 0;
    wc.hInstance     = g_hInstance;          // Owner of this class
    wc.hIcon         = LoadIcon(g_hInstance, MAKEINTRESOURCE(IDI_APP));
    wc.hCursor       = 0;
    wc.hbrBackground = (HBRUSH)GetStockObject(WHITE_BRUSH);
    wc.lpszMenuName  = 0;
    wc.lpszClassName = m_szWndClassName;

    RegisterClass(&wc);
    m_bRegistered = TRUE;

    // Map NULL to NULL in the address map
    if (!m_pMap[__ADDRESS].Add(0, 0)) {
        return FALSE;
    }

    // Initialize the static Direct3D type translation table
    InitTypeTranslationMaps(m_pTypeMap);

    // Perform socket initilization for version 2 of the socket API's
    if (WSAStartup(MAKEWORD(2, 2), &wsa)) {
        DebugString(TEXT("WSAStartup() failed [%d]"), WSAGetLastError());
        return FALSE;
    }
    m_bWSAStartup = TRUE;

    // Create a datagram socket to listen for broadcasted enumeration requests
    m_sEnumerate = socket(AF_INET, SOCK_DGRAM, 0);
    if (m_sEnumerate == INVALID_SOCKET) {
        DebugString(TEXT("socket() failed [%d]"), WSAGetLastError());
        return FALSE;        
    }

    // Bind the socket to the broadcast port
    ZeroMemory(&addr, sizeof(addr));
    addr.sin_family = AF_INET;
    addr.sin_port = htons(PORT_BROADCAST);
    addr.sin_addr.s_addr = htonl(INADDR_ANY);

    if (bind(m_sEnumerate, (LPSOCKADDR)&addr, sizeof(addr)) == SOCKET_ERROR) {
        DebugString(TEXT("bind() failed [%d]"), WSAGetLastError());
        return FALSE;
    }

    // Switch to asynchronous mode
//    if (WSAAsyncSelect(m_sEnumerate, g_hWnd, WM_SOCKET, 
//                       FD_READ | FD_CLOSE) == SOCKET_ERROR) 
//    {
//        DebugString(TEXT("WSAAsyncSelect() failed [%d]"), WSAGetLastError());
//        return FALSE;
//    }

    // Create an event to signal the transfer threads on exit
    m_hExitEvent = CreateEvent(NULL, TRUE, FALSE, NULL);
    if (!m_hExitEvent) {
        return FALSE;
    }

    // Create an enumeration thread to service the enumeration socket
    m_hThread = CreateThread(NULL, 0, ThreadProcFriend, this, 0, &dwThreadID);
    if (!m_hThread) {
        return FALSE;
    }

    return TRUE;
}

//***********************************************************************************
void CServer::Disconnect() {

    if (m_sClient != INVALID_SOCKET) {
        shutdown(m_sClient, SD_BOTH);
        closesocket(m_sClient);
        m_sClient = INVALID_SOCKET;
        RefreshTaskbar();
    }
}

//***********************************************************************************
BOOL CServer::IsConnected() {

    return (m_sClient != INVALID_SOCKET);
}

//***********************************************************************************
DWORD WINAPI ThreadProcFriend(LPVOID lpv) {
    
    return ((CServer*)lpv)->ThreadProc();
}

//***********************************************************************************
DWORD CServer::ThreadProc() {

    MSG             msg;
    SOCKADDR_IN     addr;
    PACKET_ENUM     pkEnum, pkRecv;
    int             nSize;
    DWORD           dwAddress;
    HRESULT         hr;
    BOOL            bKeepAlive = TRUE;

    while (TRUE) {

        // Wait for an enumeration request from the client and connect if a request is
        // received
        while (TRUE) {

            if (m_sEnumerate == INVALID_SOCKET) {
                return 0;
            }

            ZeroMemory(&pkRecv, sizeof(pkRecv));
            nSize = recvfrom(m_sEnumerate, (LPSTR)&pkRecv, sizeof(pkRecv), 0, 
                NULL, 0);

            if (nSize == sizeof(pkEnum) && 
                !memcmp(&(pkRecv.enumid), &(pkEnum.enumid), sizeof(ENUMERATION_ID))) 
            {
                // Verify the address belongs to the client specified through the debug
                // interface (i.e. "xbdir -x <client_name>")
                hr = DmGetAltAddress(&dwAddress);
                if (SUCCEEDED(hr) && pkRecv.s_addrClient.S_un.S_addr == ((dwAddress >> 24) | (dwAddress << 24) | ((dwAddress & 0xFF0000) >> 8) | ((dwAddress & 0xFF00) << 8))) {

                    // An enumeration request has been received from the client.  Attempt to connect
                    // using the address specified in the message
                    m_sClient = socket(AF_INET, SOCK_STREAM, 0);
                    if (m_sClient == INVALID_SOCKET) {
                        DebugString(TEXT("socket() failed [%d]"), WSAGetLastError());
                        continue;
                    }

                    // Bind the socket
                    ZeroMemory(&addr, sizeof(addr));
                    addr.sin_family = AF_INET;
                    addr.sin_port = 0;
                    addr.sin_addr.s_addr = htonl(INADDR_ANY);

                    if (bind(m_sClient, (LPSOCKADDR)&addr, sizeof(addr)) == SOCKET_ERROR) {
                        DebugString(TEXT("bind() failed [%d]"), WSAGetLastError());
                        closesocket(m_sClient);
                        continue;
                    }

                    // Connect to the client
                    ZeroMemory(&addr, sizeof(addr));
                    addr.sin_family = AF_INET;
                    addr.sin_port = htons((USHORT)pkRecv.uPort);
                    addr.sin_addr.S_un.S_addr = pkRecv.s_addrClient.S_un.S_addr;

                    if (connect(m_sClient, (LPSOCKADDR)&addr, sizeof(addr)) == SOCKET_ERROR) {
                        DebugString(TEXT("connect() failed [%d]"), WSAGetLastError());
                        closesocket(m_sClient);
                        continue;
                    }

                    // Enable keep-alive on the socket
                    if (setsockopt(m_sClient, SOL_SOCKET, SO_KEEPALIVE, (LPSTR)&bKeepAlive, 
                                                            sizeof(BOOL)) == SOCKET_ERROR) {
                        DebugString(TEXT("setsockopt() failed [%d]"), WSAGetLastError());
                    }

                    RefreshTaskbar();

                    break;
                }
            }
            else if (!nSize || (nSize == SOCKET_ERROR && WSAGetLastError() != WSAEMSGSIZE)) {
                return 0;
            }
        }

        // A connection with the client has been established, create a window for Direct3D
        // (the main application window cannot be used because a bug in DX8 causes CreateDevice
        // to hang if called using a window created in a different thread.
        g_hWndD3D = CreateWindow(m_szWndClassName, m_szWndClassName, WS_OVERLAPPEDWINDOW, CW_USEDEFAULT, CW_USEDEFAULT, 
                                    640, 480, NULL, NULL, g_hInstance, NULL);
        ShowWindow(g_hWndD3D, SW_HIDE);
        UpdateWindow(g_hWndD3D);

        // Pump any messages
        while(PeekMessage(&msg, NULL, 0, 0, PM_REMOVE))
        {
            TranslateMessage(&msg);
            DispatchMessage(&msg);
        }

        //Begin communications
        while (TRUE) {

            // Wait for a transmission from the client
            if (!RecvPacket()) {
                // Return to listening for broadcasts if the connection has been dropped
                // TODO: Move this cleanup into recv code so that it only gets called if
                // the client dropped us rather than the socket being closed in the
                // destructor

                if (m_sClient != INVALID_SOCKET) {
                    shutdown(m_sClient, SD_BOTH);
                    closesocket(m_sClient);
                    m_sClient = INVALID_SOCKET;
                }

                // Destroy the window
                DestroyWindow(g_hWndD3D);

                RefreshTaskbar();

                break;
            }

            // Pump any messages received
            if (PeekMessage(&msg, NULL, 0, 0, PM_REMOVE)) {
                TranslateMessage(&msg);
                DispatchMessage(&msg);
            }

            // Process the packet from the client
            ProcessPacket();
        }
    }

    return 0;
}

//***********************************************************************************
void CServer::CloseSocket(SOCKET s) {

    if (s == m_sClient) {
        Disconnect();
    }
}

//***********************************************************************************
int CServer::Send(LPVOID pv, int nSize, SOCKET s) {

    int size, total = 0;

    if (s == INVALID_SOCKET) {
        s = m_sClient;
    }

    do {
        size = send(s, (char*)pv + total, nSize - total, 0);
        if (size == SOCKET_ERROR) {
            return 0;
        }
        total += size;

    } while (total < nSize);

    return total;
}

//***********************************************************************************
int CServer::SendPacket(PPACKET ppk, SOCKET s) {

    return Send(ppk, ppk->dwSize, s);
}

//***********************************************************************************
int CServer::Recv(LPVOID pv, int nSize, SOCKET s) {

    int size, total = 0;

    if (s == INVALID_SOCKET) {
        if (m_sClient == INVALID_SOCKET) {
            return 0;
        }
        s = m_sClient;
    }

    do {
        size = recv(s, (char*)pv + total, nSize - total, 0);
        if (!size || size == SOCKET_ERROR) {
            return 0;
        }
        total += size;

    } while (total < nSize);

    return total;
}

//***********************************************************************************
BOOL CServer::RecvPacket(PPACKET ppk, SOCKET s) {

    DWORD   dwSize;

    if (!ppk) {

        // If a packet has already been allocated, free it
        if (m_pPacket) {
            delete [] m_pPacket;
            m_pPacket = NULL;
        }

        // Get the size of the packet
        if (!Recv((LPVOID)&dwSize, sizeof(DWORD))) {
            return FALSE;
        }

        m_pPacket = (PPACKET)new BYTE[dwSize];
        if (!m_pPacket) {
            return FALSE;
        }
        m_pPacket->dwSize = dwSize;

        // Retrieve the rest of the packet
        if (!Recv((LPVOID)((LPBYTE)m_pPacket + sizeof(DWORD)), dwSize - sizeof(DWORD))) {
            return FALSE;
        }
    }
    else {
        // Retrieve the packet
        if (!Recv((LPVOID)ppk, ppk->dwSize, s)) {
            return FALSE;
        }
    }

    return TRUE;
}

//***********************************************************************************
BOOL CServer::ProcessPacket() {

    switch (m_pPacket->packetID) {

        case PACKETID_CS_CHECKDEVICEAFFINITY: {
            if (!HandleDeviceAffinity((PPACKET_CS_CHECKDEVICEAFFINITY)m_pPacket)) {
                SendPacket(&m_pkFault);
                return FALSE;
            }
            return TRUE;
        }

        case PACKETID_CS_DIRECT3DCREATE8: {

            if (!HandleDirect3DCreate8((PPACKET_CS_DIRECT3DCREATE8)m_pPacket)) {
                SendPacket(&m_pkFault);
                return FALSE;
            }

            return TRUE;
        }

        case PACKETID_CS_GETREFFRAMECRC32: {

            if (!HandleRefFrameCRC32((PPACKET_CS_GETREFFRAMECRC32)m_pPacket)) {
                SendPacket(&m_pkFault);
                return FALSE;
            }
            return TRUE;
        }

        case PACKETID_CS_GETREFFRAME: {

            if (!HandleRefFrame((PPACKET_CS_GETREFFRAME)m_pPacket)) {
                SendPacket(&m_pkFault);
                return FALSE;
            }
            return TRUE;
        }

        default: {

            if (!HandleMethodCall((PPACKET_CS_CALLMETHOD)m_pPacket)) {
                SendPacket(&m_pkFault);
                return FALSE;
            }

            return TRUE;
        }
    }

    return FALSE;
}

//******************************************************************************
ULONG CServer::ReleaseObject(IUnknown* punk) {

    ULONG uRef;
    DWORD dwKey;

    uRef = punk->Release();

    if (uRef == 0) {
        if (m_pMap[__ADDRESS].Find(&dwKey, (DWORD)punk)) {
            m_pMap[__ADDRESS].Remove(dwKey);
        }
    }

    return uRef;
}

//******************************************************************************
BOOL CServer::AddMapping(UINT uType, DWORD dwKey, DWORD dwValue) {

    return m_pMap[uType].Add(dwKey, dwValue);
}

//******************************************************************************
BOOL CServer::RemoveMapping(UINT uType, DWORD dwKey) {

    return m_pMap[uType].Remove(dwKey);
}

//***********************************************************************************
BOOL CServer::FindMapping(UINT uType, LPDWORD pdwKey, DWORD dwValue) {

    return m_pMap[uType].Find(pdwKey, dwValue);
}

//***********************************************************************************
void CServer::RemapType(D3DTYPEINDEX d3dti, DWORD dwXboxType, LPDWORD pdwWinxType) {

    *pdwWinxType = 0;
    m_pTypeMap[d3dti].Find(dwXboxType, pdwWinxType);
}

//***********************************************************************************
void CServer::RemapType(D3DTYPEINDEX d3dti, LPDWORD pdwXboxType, DWORD dwWinxType) {

    *pdwXboxType = 0;
    m_pTypeMap[d3dti].Find(pdwXboxType, dwWinxType);
}

//***********************************************************************************
void CServer::RemapType(BOOL bIn, D3DTYPEINDEX d3dti, LPDWORD pdwXboxType, LPDWORD pdwWinxType) {

    if (bIn) {
        *pdwWinxType = 0;
        m_pTypeMap[d3dti].Find(*pdwXboxType, pdwWinxType);
    }
    else {
        *pdwXboxType = 0;
        m_pTypeMap[d3dti].Find(pdwXboxType, *pdwWinxType);
    }
}

//***********************************************************************************
void CServer::RemapStruct(BOOL bIn, D3DSURFACE_DESC* pd3dsd) {

    REMAP(bIn, D3DTI_D3DFORMAT, pd3dsd->Format);
    REMAP(bIn, D3DTI_D3DRESOURCETYPE, pd3dsd->Type);
    REMAP(bIn, D3DTI_D3DPOOL, pd3dsd->Pool);
    REMAP(bIn, D3DTI_D3DMULTISAMPLE_TYPE, pd3dsd->MultiSampleType);
}

//***********************************************************************************
void CServer::RemapStruct(BOOL bIn, D3DVOLUME_DESC* pd3dvd) {

    REMAP(bIn, D3DTI_D3DFORMAT, pd3dvd->Format);
    REMAP(bIn, D3DTI_D3DRESOURCETYPE, pd3dvd->Type);
    REMAP(bIn, D3DTI_D3DPOOL, pd3dvd->Pool);
}

//***********************************************************************************
void CServer::RemapStruct(BOOL bIn, D3DPRESENT_PARAMETERS* pd3dpp) {

    REMAP(bIn, D3DTI_D3DFORMAT, pd3dpp->BackBufferFormat);
    REMAP(bIn, D3DTI_D3DMULTISAMPLE_TYPE, pd3dpp->MultiSampleType);
    REMAP(bIn, D3DTI_D3DSWAPEFFECT, pd3dpp->SwapEffect);
    REMAP(bIn, D3DTI_D3DFORMAT, pd3dpp->AutoDepthStencilFormat);
    pd3dpp->FullScreen_RefreshRateInHz = 0;
}

//***********************************************************************************
BOOL CServer::HandleDeviceAffinity(PPACKET_CS_CHECKDEVICEAFFINITY ppk) {

    PACKET_SC_DEVICEAFFINITY pkAffinity;
    LPDIRECT3D8              pd3d;

    if (!m_pMap[__ADDRESS].Find((DWORD)ppk->pvDirect3D, (LPDWORD)&pd3d) || !pd3d) {
        return FALSE;
    }

    pkAffinity.bEquivalent = TRUE;
    SendPacket(&pkAffinity);
    return TRUE;

    return FALSE;
}

//***********************************************************************************
BOOL CServer::HandleDirect3DCreate8(PPACKET_CS_DIRECT3DCREATE8 ppk) {

    LPDIRECT3D8 pd3d = Direct3DCreate8(D3D_SDK_VERSION);

    if (pd3d) {
        if (m_pMap[__ADDRESS].Add((DWORD)(ppk->pvDirect3D), (DWORD)pd3d)) {
            PACKET_SC_SUCCESS pk;
            SendPacket(&pk);
            return TRUE;
        }
    }

    return FALSE;
}

//******************************************************************************
BOOL CServer::HandleMethodCall(PPACKET_CS_CALLMETHOD ppk) {

    PPACKET_SC_METHODRESULT ppkResult;
    LPCSTR                  pszSigs;
    LPDWORD                 pdwArgSrc, pdwArgDst;
    DWORD                   dwObject;
    DWORD                   dwArg[16];
    PMETHODDESC             pmethod;
    DWORD                   dwArgSize, dwDataSize;
    LPBYTE                  pData;
    TRANSTYPE               ttype;
    UINT                    i, j;

    if (m_pPacket->packetID > countof(m_MethodList)) {
        DebugString(TEXT("HandleMethodCall was given an unknown method identifier"));
        return FALSE;
    }

    pmethod = &m_MethodList[m_pPacket->packetID];

    // Determine the size of the result packet
    pdwArgSrc = ppk->pdwArguments;//(LPDWORD)&(ppk->pvArguments);

    dwArgSize = 0;
    dwDataSize = 0;

    for (pszSigs = pmethod->szSig; *pszSigs; pszSigs += 2) {

        if (*pszSigs == __POUT || *pszSigs == __OUT || *pszSigs == __ADD || *pszSigs == __BI) {

            dwArgSize += 4;

            if (*pszSigs == __POUT) {
                dwDataSize += *pdwArgSrc;
                // ##TODO: Pad data so each data segment begins on a DWORD boundary
            }
        }

        if (*pszSigs != __OUT) {
            pdwArgSrc++;
        }
    }

    // Allocate memory for the result packet
    ppkResult = (PPACKET_SC_METHODRESULT)MemAlloc32(sizeof(PACKET_SC_METHODRESULT) + dwArgSize + dwDataSize - sizeof(DWORD));
    if (!ppkResult) {
        DebugString(TEXT("Unable to allocate memory for the result packet for method %d"), m_pPacket->packetID);
        return FALSE;
    }

    // Initialize the packet header
    ppkResult->dwSize = sizeof(PACKET_SC_METHODRESULT) + dwArgSize + dwDataSize - sizeof(DWORD);
    ppkResult->packetID = m_pPacket->packetID;

    // Initialize in parameters from the source packet.  Initialize out parameters as pointers into the result packet.
    pdwArgSrc = ppk->pdwArguments;//(LPDWORD)&(ppk->pvArguments);
    pdwArgDst = ppkResult->pdwResult;//(LPDWORD)&(ppkResult->pvResult);
    pData = (LPBYTE)pdwArgDst + dwArgSize;

    for (pszSigs = pmethod->szSig, i = 0; *pszSigs; pszSigs += 2, i++) {

        switch (*pszSigs) {
            case __POUT:
                if (*pdwArgSrc) {
                    dwArg[i] = (DWORD)pData;
                    *pdwArgDst = (DWORD)pData - (DWORD)pdwArgDst;
                    pData += *pdwArgSrc;
                }
                else {
                    dwArg[i] = 0;
                    *pdwArgDst = 0;
                }
                pdwArgDst++;
                break;
            case __OUT:
                dwArg[i] = (DWORD)pdwArgDst;
                pdwArgDst++;
                break;
            case __BI:
                *pdwArgDst = *pdwArgSrc;
                dwArg[i] = (DWORD)pdwArgDst;
                pdwArgDst++;
                break;
            case __ADD:
                ttype = GET_TRANSTYPE(*(pszSigs + 1));
                if (ttype != __ADDRESS || *pdwArgSrc) {
                    dwArg[i] = (DWORD)pdwArgDst;
                }
                else {
                    dwArg[i] = 0;
                }
                pdwArgDst++;
                break;
            case __PIN:
                if (*pdwArgSrc) {
                    dwArg[i] = (DWORD)((LPBYTE)pdwArgSrc + *pdwArgSrc);
                }
                else {
                    dwArg[i] = 0;
                }
                break;
            case __IN:
            case __DEL:
                ttype = GET_TRANSTYPE(*(pszSigs + 1));
                if (ttype == __DATA) {
                    dwArg[i] = *pdwArgSrc;
                }
                else {
                    if (!m_pMap[ttype].Find(*pdwArgSrc, (LPDWORD)&dwArg[i])) {
                        if (ttype == __VSHADER) {
                            dwArg[i] = *pdwArgSrc;
                        }
                        else {
                            MemFree32(ppkResult);
                            DebugString(TEXT("Unable to translate non-data argument for method %d"), m_pPacket->packetID);
                            return FALSE;
                        }
                    }
                }
                break;
        }

        if (*pszSigs != __OUT) {
            pdwArgSrc++;
        }
    }

    if (!m_pMap[__ADDRESS].Find((DWORD)ppk->pvObject, &dwObject)) {
        MemFree32(ppkResult);
        DebugString(TEXT("Unable to translate the object address for method %d"), m_pPacket->packetID);
        return FALSE;
    }

    // Call the method
    pmethod->pfnCall(dwObject,
                     dwArg[ 0], dwArg[ 1], dwArg[ 2], dwArg[ 3],
                     dwArg[ 4], dwArg[ 5], dwArg[ 6], dwArg[ 7],
                     dwArg[ 8], dwArg[ 9], dwArg[10], dwArg[11],
                     dwArg[12], dwArg[13], dwArg[14], dwArg[15]);


    // Translate out parameters and alter the translation maps as necessary
    pdwArgSrc = ppk->pdwArguments;//(LPDWORD)&(ppk->pvArguments);
    pdwArgDst = ppkResult->pdwResult;//(LPDWORD)&(ppkResult->pvResult);

    for (pszSigs = pmethod->szSig, i = 0; *pszSigs; pszSigs += 2, i++) {

        if (*pszSigs == __ADD) {

            ttype = GET_TRANSTYPE(*(pszSigs + 1));
            if (ttype != __ADDRESS || *pdwArgSrc) {
                if (ttype == __DATA || !m_pMap[ttype].Add((DWORD)*pdwArgSrc, (DWORD)*pdwArgDst)) {
                    MemFree32(ppkResult);
                    DebugString(TEXT("Unable to map a created output parameter between client and server for method %d"), m_pPacket->packetID);
                    return FALSE;
                }
            }
            *pdwArgDst = *pdwArgSrc;
        }
        else if (*pszSigs == __DEL) {

            ttype = GET_TRANSTYPE(*(pszSigs + 1));
            if (ttype != __ADDRESS || *pdwArgSrc) {
                if (ttype == __DATA || !m_pMap[ttype].Remove((DWORD)*pdwArgSrc)) {
                    MemFree32(ppkResult);
                    DebugString(TEXT("Unable to unmap a deleted parameter between client and server for method %d"), m_pPacket->packetID);
                    return FALSE;
                }
            }
        }
        else if (*pszSigs == __OUT) {
            ttype = GET_TRANSTYPE(*(pszSigs + 1));
            if (ttype != __DATA) {
                if (!m_pMap[ttype].Find(pdwArgDst, *pdwArgDst)) {
                    MemFree32(ppkResult);
                    DebugString(TEXT("Unable to translate an output parameter between client and server for method %d"), m_pPacket->packetID);
                    return FALSE;
                }
            }
        }

        if (*pszSigs == __POUT || *pszSigs == __OUT || *pszSigs == __ADD || *pszSigs == __BI) {
            pdwArgDst++;
        }

        if (*pszSigs != __OUT) {
            pdwArgSrc++;
        }
    }
/*
{
UINT i;
LPDWORD pdwArgs = (LPDWORD)&ppkResult->pvResult;
DebugString(TEXT("Args for packet %d:"), ppkResult->packetID);
for (i = 0; i < dwArgSize / 4; i++) {
DebugString(TEXT("0x%X"), *pdwArgs++);
}
}
*/
    // Send the result
    if (!SendPacket(ppkResult)) {
        MemFree32(ppkResult);
        DebugString(TEXT("Unable to send the result packet for method %d"), m_pPacket->packetID);
        return FALSE;
    }

    MemFree32(ppkResult);

    return TRUE;
}

//******************************************************************************
BOOL CServer::HandleRefFrameCRC32(PPACKET_CS_GETREFFRAMECRC32 ppk) {

    PACKET_SC_REFFRAMECRC32 pkRefCRC;
    LPDIRECT3DDEVICE8       pd3dd;
    LPDIRECT3DSURFACE8      pd3ds;
    HRESULT                 hr;

    if (!m_pMap[__ADDRESS].Find((DWORD)ppk->pvDevice, (LPDWORD)&pd3dd) || !pd3dd) {
        return FALSE;
    }

    pd3ds = GetFrontBuffer(pd3dd);
    if (!pd3ds) {
        return FALSE;
    }

    pkRefCRC.dwRefCRC = ComputeSurfaceCRC32(pd3ds);
    SendPacket(&pkRefCRC);

    pd3ds->Release();

    return TRUE;
}

//******************************************************************************
BOOL CServer::HandleRefFrame(PPACKET_CS_GETREFFRAME ppk) {

    PACKET_SC_REFFRAME      pkRef;
    LPDIRECT3DDEVICE8       pd3dd;
    LPDIRECT3DSURFACE8      pd3ds;
    D3DSURFACE_DESC         d3dsd;
    D3DLOCKED_RECT          d3dlr;
    UINT                    i;
    HRESULT                 hr;

    if (!m_pMap[__ADDRESS].Find((DWORD)ppk->pvDevice, (LPDWORD)&pd3dd) || !pd3dd) {
        return FALSE;
    }

    pd3ds = GetFrontBuffer(pd3dd);
    if (!pd3ds) {
        return FALSE;
    }

    hr = pd3ds->GetDesc(&d3dsd);
    if (FAILED(hr)) {
        pd3ds->Release();
        return FALSE;
    }

//    ppkRef = (PPACKET_SC_REFFRAME)MemAlloc32(sizeof(PACKET_SC_REFFRAME) + d3dsd.Width * d3dsd.Height * 4 - 1);
//    if (!ppkRef) {
//        return FALSE;
//    }

    pkRef.dwSize = sizeof(PACKET) + d3dsd.Width * d3dsd.Height * 4;
//    ppkRef->packetID = PACKETID_SC_REFFRAME;

    hr = pd3ds->LockRect(&d3dlr, NULL, 0);
    if (FAILED(hr)) {
//        MemFree32(ppkRef);
        return FALSE;
    }

    // Send the packet header
    Send(&pkRef, sizeof(PACKET));

    // Send the frame buffer contents in rows
    for (i = 0; i < d3dsd.Height; i++) {
        Send((LPBYTE)d3dlr.pBits + i * d3dlr.Pitch, d3dsd.Width * 4);
    }

//    for (i = 0; i < d3dsd.Height; i++) {
//        memcpy(ppkRef->pBits[i * d3dsd.Width * 4], (LPBYTE)d3dlr.pBits + i * d3dlr.Pitch, d3dsd.Width * 4);
//    }

    pd3ds->UnlockRect();
    pd3ds->Release();

    return TRUE;
}

/*
//******************************************************************************
UINT CServer::TransTypeToEntry(char cType) {

    UINT        i;
    static char cTransType[] = {
        _OBJECT,
        _VSHADER,
        _PSHADER,
        _SBLOCK
    };

    for (i = 0; i < 4; i++) {
        if (cType == cTransType[i]) {
            return i;
        }
    }

    DebugString(TEXT("TransTypeToEntry was given an invalid translation type"));
    return -1;
}
*/

//******************************************************************************
LPDIRECT3DSURFACE8 CServer::GetFrontBuffer(LPDIRECT3DDEVICE8 pd3dd) {

    LPDIRECT3DSURFACE8 pd3ds;
    D3DDISPLAYMODE     d3ddm;
    D3DSURFACE_DESC    d3dsd;
    HRESULT            hr;

    hr = pd3dd->GetDisplayMode(&d3ddm);
    if (FAILED(hr)) {
        return NULL;
    }

    hr = pd3dd->CreateImageSurface(d3ddm.Width, d3ddm.Height, D3DFMT_A8R8G8B8, &pd3ds);
    if (FAILED(hr)) {
        return NULL;
    }

    hr = pd3dd->GetFrontBuffer(pd3ds);
    if (FAILED(hr)) {
        pd3ds->Release();
        return NULL;
    }

    return pd3ds;
}

//******************************************************************************
DWORD CServer::ComputeSurfaceCRC32(LPDIRECT3DSURFACE8 pd3ds) {

    D3DSURFACE_DESC d3dsd;
    D3DLOCKED_RECT  d3dlr;
    LPDWORD         pdwPixel;
    DWORD           dwCRC = 0;
    LPBYTE          pbData;
    UINT            i, j, k;
    HRESULT         hr;

    hr = pd3ds->GetDesc(&d3dsd);
    if (FAILED(hr)) {
        return 0;
    }

    hr = pd3ds->LockRect(&d3dlr, NULL, 0);
    if (FAILED(hr)) {
        return 0;
    }

    pdwPixel = (LPDWORD)d3dlr.pBits;
    for (i = 0; i < d3dsd.Height; i++) {
        for (j = 0; j < d3dsd.Width; j++) {
            pbData = (LPBYTE)&pdwPixel[j];
            for (k = 0; k < 3; k++) {
                dwCRC = m_dwCRCTable[(dwCRC ^ pbData[k]) & 0xFF] ^ (dwCRC >> 8);
            }
        }
        pdwPixel += d3dlr.Pitch / 4;
    }

    pd3ds->UnlockRect();

    return dwCRC;
}

//******************************************************************************
int gethostaddr(IN_ADDR* psin) {

    // Return the first IP address of the host
    char            hostname[256];
    PHOSTENT        phostent;

    // Parameter validation
    if (!psin) {
        WSASetLastError(WSAEINVAL);
        return SOCKET_ERROR;
    }

    // Get the name of the host
    if (gethostname(hostname, sizeof(hostname))) {
        return SOCKET_ERROR;
    }

    // Use the name to get the host information
    phostent = gethostbyname(hostname);
    if (!phostent) {
        return SOCKET_ERROR;
    }

    // Get a string of the IP address from the host information
    psin->S_un.S_addr = *((ULONG*)phostent->h_addr_list[0]);

    return 0;
}

//******************************************************************************
int gethostaddr(char* addr, int addrlen) {

    // Return the first IP address of the host
    char*           address;
    IN_ADDR         sin;
    int             ret = 0;

    // Parameter validation
    if (!addr || addrlen <= 0) {
        WSASetLastError(WSAEINVAL);
        return SOCKET_ERROR;
    }

    // Get the address of the host
    ret = gethostaddr(&sin);

    if (!ret) {

        address = inet_ntoa(sin);
        if (!address) {
            return SOCKET_ERROR;
        }

        // Verify the buffer is large enough for the address
        if (strlen(address)+1 > (UINT)addrlen) {
            DebugString(TEXT("The address buffer is %d bytes.  It needs to be %d ")
                     TEXT("bytes\n"), addrlen, strlen(address)+1);
            WSASetLastError(WSAEFAULT);
            return SOCKET_ERROR;
        }

        // Copy the address string into the buffer
        strcpy(addr, address);
    }

    return ret;
}
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\test\directx\d3d\frame\locussrv\voltex.cpp ===
#include <windows.h>
#include <stdlib.h>
#include <tchar.h>
#include <winsock.h>
#include <d3dx8.h>
#include "transprt.h"
#include "util.h"
#include "typetran.h"
#include "server.h"

//***********************************************************************************
extern "C" void __cdecl M_VTX8_GetLevelDesc(LPDIRECT3DVOLUMETEXTURE8 pd3dtv, HRESULT* phr, UINT uLevel, D3DVOLUME_DESC* pd3dvd) {

    *phr = pd3dtv->GetLevelDesc(uLevel, pd3dvd);
    g_pServer->RemapStruct(FALSE, pd3dvd);
}

//***********************************************************************************
extern "C" void __cdecl M_VTX8_LockBox(LPDIRECT3DVOLUMETEXTURE8 pd3dtv, HRESULT* phr, UINT uLevel, D3DLOCKED_BOX* pd3dlb, D3DBOX* pbox, DWORD dwFlags) {

    if (pbox->Left == -1) {
        pbox = NULL;
    }
    dwFlags &= ~XBOX_D3DLOCK_FLAGS;
    *phr = pd3dtv->LockBox(uLevel, pd3dlb, pbox, dwFlags);
}

//***********************************************************************************
extern "C" void __cdecl M_VTX8_UnlockBox(LPDIRECT3DVOLUMETEXTURE8 pd3dtv, HRESULT* phr, UINT uLevel, D3DLOCKED_BOX* pd3dlb, D3DBOX* pbox, DWORD dwFlags, LPBYTE pBits) {

    if (!(dwFlags & D3DLOCK_READONLY)) {

        D3DVOLUME_DESC  d3dvd;
        DWORD           dwWidth, dwHeight, dwDepth, dwBitDepth;
        UINT            i, j;
        pd3dtv->GetLevelDesc(uLevel, &d3dvd);
        if (pbox->Left == -1) {
            dwWidth = d3dvd.Width;
            dwHeight = d3dvd.Height;
            dwDepth = d3dvd.Depth;
        }
        else {
            dwWidth = pbox->Right - pbox->Left;
            dwHeight = pbox->Bottom - pbox->Top;
            dwDepth = pbox->Back - pbox->Front;
        }
        dwBitDepth = FormatToBitDepth(d3dvd.Format);
        if (IsCompressedFormat(d3dvd.Format)) {
            memcpy(pd3dlb->pBits, pBits, dwWidth * dwHeight * dwDepth * dwBitDepth / 8);
        }
        else {
            for (j = 0; j < dwDepth; j++) {
                for (i = 0; i < dwHeight; i++) {
                    memcpy((LPBYTE)pd3dlb->pBits + j * pd3dlb->SlicePitch + i * pd3dlb->RowPitch, pBits + j * dwHeight * dwWidth * dwBitDepth / 8 + i * dwWidth * dwBitDepth / 8, dwWidth * dwBitDepth / 8);
                }
            }
        }
    }

    *phr = pd3dtv->UnlockBox(uLevel);
}

//***********************************************************************************
extern "C" void __cdecl M_VTX8_AddDirtyBox(LPDIRECT3DVOLUMETEXTURE8 pd3dtv, HRESULT* phr, D3DBOX* pboxDirty) {

    if (pboxDirty->Left == -1) {
        pboxDirty = NULL;
    }
    *phr = pd3dtv->AddDirtyBox(pboxDirty);
}

//***********************************************************************************
extern "C" void __cdecl M_VTX8_GetVolumeLevel(LPDIRECT3DVOLUMETEXTURE8 pd3dtv, HRESULT* phr, UINT uLevel, LPDIRECT3DVOLUME8* ppVolume) {

    *phr = pd3dtv->GetVolumeLevel(uLevel, ppVolume);
}
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\test\directx\d3d\frame\locussrv\tex.cpp ===
#include <windows.h>
#include <stdlib.h>
#include <tchar.h>
#include <winsock.h>
#include <d3dx8.h>
#include "transprt.h"
#include "util.h"
#include "typetran.h"
#include "server.h"

//***********************************************************************************
extern "C" void __cdecl M_TEX8_GetLevelDesc(LPDIRECT3DTEXTURE8 pd3dt, HRESULT* phr, UINT uLevel, D3DSURFACE_DESC* pd3dsd) {

    *phr = pd3dt->GetLevelDesc(uLevel, pd3dsd);
    g_pServer->RemapStruct(FALSE, pd3dsd);
}

//***********************************************************************************
extern "C" void __cdecl M_TEX8_LockRect(LPDIRECT3DTEXTURE8 pd3dt, HRESULT* phr, UINT uLevel, D3DLOCKED_RECT* pd3dlr, RECT* prect, DWORD dwFlags) {

    if (prect->left == -1) {
        prect = NULL;
    }
    dwFlags &= ~XBOX_D3DLOCK_FLAGS;
    *phr = pd3dt->LockRect(uLevel, pd3dlr, prect, dwFlags);
}

//***********************************************************************************
extern "C" void __cdecl M_TEX8_UnlockRect(LPDIRECT3DTEXTURE8 pd3dt, HRESULT* phr, UINT uLevel, D3DLOCKED_RECT* pd3dlr, RECT* prect, DWORD dwFlags, LPBYTE pBits) {

    if (!(dwFlags & D3DLOCK_READONLY)) {

        D3DSURFACE_DESC d3dsd;
        DWORD           dwWidth, dwHeight, dwBitDepth;
        UINT            i;
        pd3dt->GetLevelDesc(uLevel, &d3dsd);
        if (prect->left == -1) {
            dwWidth = d3dsd.Width;
            dwHeight = d3dsd.Height;
        }
        else {
            dwWidth = prect->right - prect->left;
            dwHeight = prect->bottom - prect->top;
        }
        dwBitDepth = FormatToBitDepth(d3dsd.Format);
        if (IsCompressedFormat(d3dsd.Format)) {
            memcpy(pd3dlr->pBits, pBits, dwWidth * dwHeight * dwBitDepth / 8);
        }
        else {
            for (i = 0; i < dwHeight; i++) {
                memcpy((LPBYTE)pd3dlr->pBits + i * pd3dlr->Pitch, pBits + i * dwWidth * dwBitDepth / 8, dwWidth * dwBitDepth / 8);
            }
        }
    }

    *phr = pd3dt->UnlockRect(uLevel);
}

//***********************************************************************************
extern "C" void __cdecl M_TEX8_AddDirtyRect(LPDIRECT3DTEXTURE8 pd3dt, HRESULT* phr, RECT* prectDirty) {

    if (prectDirty->left == -1) {
        prectDirty = NULL;
    }
    *phr = pd3dt->AddDirtyRect(prectDirty);
}

//***********************************************************************************
extern "C" void __cdecl M_TEX8_GetSurfaceLevel(LPDIRECT3DTEXTURE8 pd3dt, HRESULT* phr, UINT uLevel, LPDIRECT3DSURFACE8* ppSurface) {

    *phr = pd3dt->GetSurfaceLevel(uLevel, ppSurface);
}
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\test\directx\d3d\frame\locussrv\vertbuff.cpp ===
#include <windows.h>
#include <stdlib.h>
#include <tchar.h>
#include <winsock.h>
#include <d3dx8.h>
#include "transprt.h"
#include "util.h"
#include "typetran.h"
#include "server.h"

//***********************************************************************************
extern "C" void __cdecl M_VRB8_GetDesc(LPDIRECT3DVERTEXBUFFER8 pd3dr, HRESULT* phr, D3DVERTEXBUFFER_DESC* pd3dvbd) {

    *phr = pd3dr->GetDesc(pd3dvbd);
    REMAPOUT(D3DTI_D3DFORMAT, pd3dvbd->Format);
    REMAPOUT(D3DTI_D3DRESOURCETYPE, pd3dvbd->Type);
    REMAPOUT(D3DTI_D3DPOOL, pd3dvbd->Pool);
}

//***********************************************************************************
extern "C" void __cdecl M_VRB8_Lock(LPDIRECT3DVERTEXBUFFER8 pd3dr, HRESULT* phr, UINT uOffsetToLock, UINT uSizeToLock, BYTE** ppdata, DWORD dwFlags) {

    *phr = pd3dr->Lock(uOffsetToLock, uSizeToLock, ppdata, dwFlags);
}

//***********************************************************************************
extern "C" void __cdecl M_VRB8_Unlock(LPDIRECT3DVERTEXBUFFER8 pd3dr, HRESULT* phr, LPBYTE pData, UINT uSize, LPBYTE pBits) {

    if (uSize) {
        memcpy(pData, pBits, uSize);
    }

    *phr = pd3dr->Unlock();
}
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\test\directx\d3d\frame\locussrv\typetran.h ===
/*******************************************************************************

Copyright (c) 2000 Microsoft Corporation.  All rights reserved.

File Name:

    server.h

Author:

    Matt Bronder

Description:

    Server code for remote reference verification.

*******************************************************************************/

#ifndef __TYPETRAN_H__
#define __TYPETRAN_H__

//***********************************************************************************
// Preprocessor definitions
//***********************************************************************************

#define NUM_STATIC_TRANSLATIONS      33

#define XBOX_D3DCLEAR_TARGET         0x000000f0l  /* Clear target surface */
#define XBOX_D3DCLEAR_ZBUFFER        0x00000001l  /* Clear target z buffer */
#define XBOX_D3DCLEAR_STENCIL        0x00000002l  /* Clear stencil planes */

#define XBOX_D3DWRAPCOORD_0          0x00000010L    // same as D3DWRAP_U
#define XBOX_D3DWRAPCOORD_1          0x00001000L    // same as D3DWRAP_V
#define XBOX_D3DWRAPCOORD_2          0x00100000L    // same as D3DWRAP_W
#define XBOX_D3DWRAPCOORD_3          0x01000000L

#define XBOX_D3DLOCK_TILED           0x00000040L // Xbox extension
#define XBOX_D3DLOCK_NOFLUSH         0x00000010L // Xbox extension
#define XBOX_D3DLOCK_FLAGS           (XBOX_D3DLOCK_TILED | XBOX_D3DLOCK_NOFLUSH)

//***********************************************************************************
// Data types
//***********************************************************************************

typedef enum _D3DTYPEINDEX {
    D3DTI_D3DBACKBUFFER_TYPE       =  0,
    D3DTI_D3DBLEND                 =  1,
    D3DTI_D3DBLENDOP               =  2,
    D3DTI_D3DCMPFUNC               =  3,
    D3DTI_D3DCUBEMAP_FACES         =  4,
    D3DTI_D3DCULL                  =  5,
    D3DTI_D3DDEBUGMONITORTOKENS    =  6,
    D3DTI_D3DDEVTYPE               =  7,
    D3DTI_D3DFILLMODE              =  8,
    D3DTI_D3DFOGMODE               =  9,
    D3DTI_D3DFORMAT                = 10,
    D3DTI_D3DBASISTYPE             = 11,
    D3DTI_D3DLIGHTTYPE             = 12,
    D3DTI_D3DMATERIALCOLORSOURCE   = 13,
    D3DTI_D3DMULTISAMPLE_TYPE      = 14,
    D3DTI_D3DORDERTYPE             = 15,
    D3DTI_D3DPATCHEDGESTYLE        = 16,
    D3DTI_D3DPOOL                  = 17,
    D3DTI_D3DPRIMITIVETYPE         = 18,
    D3DTI_D3DRENDERSTATETYPE       = 19,
    D3DTI_D3DRESOURCETYPE          = 20,
    D3DTI_D3DSHADEMODE             = 21,
    D3DTI_D3DSTATEBLOCKTYPE        = 22,
    D3DTI_D3DSTENCILOP             = 23,
    D3DTI_D3DSWAPEFFECT            = 24,
    D3DTI_D3DTEXTUREADDRESS        = 25,
    D3DTI_D3DTEXTUREFILTERTYPE     = 26,
    D3DTI_D3DTEXTUREOP             = 27,
    D3DTI_D3DTEXTURESTAGESTATETYPE = 28,
    D3DTI_D3DTEXTURETRANSFORMFLAGS = 29,
    D3DTI_D3DTRANSFORMSTATETYPE    = 30,
    D3DTI_D3DVERTEXBLENDFLAGS      = 31,
    D3DTI_D3DZBUFFERTYPE           = 32,
    D3DTI_FORCE_DWORD              = 0x7FFFFFFF
} D3DTYPEINDEX;

typedef enum _XBOX_D3DBACKBUFFER_TYPE
{
    XBOX_D3DBACKBUFFER_TYPE_MONO         = 0,
    XBOX_D3DBACKBUFFER_TYPE_LEFT         = 1,
    XBOX_D3DBACKBUFFER_TYPE_RIGHT        = 2,

    XBOX_D3DBACKBUFFER_TYPE_FORCE_DWORD  = 0x7fffffff
} XBOX_D3DBACKBUFFER_TYPE;

typedef enum _XBOX_D3DBLEND {
    XBOX_D3DBLEND_ZERO               = 0,
    XBOX_D3DBLEND_ONE                = 1,
    XBOX_D3DBLEND_SRCCOLOR           = 0x300,
    XBOX_D3DBLEND_INVSRCCOLOR        = 0x301,
    XBOX_D3DBLEND_SRCALPHA           = 0x302,
    XBOX_D3DBLEND_INVSRCALPHA        = 0x303,
    XBOX_D3DBLEND_DESTALPHA          = 0x304,
    XBOX_D3DBLEND_INVDESTALPHA       = 0x305,
    XBOX_D3DBLEND_DESTCOLOR          = 0x306,
    XBOX_D3DBLEND_INVDESTCOLOR       = 0x307,
    XBOX_D3DBLEND_SRCALPHASAT        = 0x308,
    XBOX_D3DBLEND_BOTHSRCALPHA       = 0x302,
    XBOX_D3DBLEND_BOTHINVSRCALPHA    = 0x303,
    XBOX_D3DBLEND_CONSTANTCOLOR      = 0x8001,
    XBOX_D3DBLEND_INVCONSTANTCOLOR   = 0x8002,
    XBOX_D3DBLEND_CONSTANTALPHA      = 0x8003,
    XBOX_D3DBLEND_INVCONSTANTALPHA   = 0x8004,
    XBOX_D3DBLEND_FORCE_DWORD        = 0x7fffffff, /* force 32-bit size enum */
} XBOX_D3DBLEND;

typedef enum _XBOX_D3DBLENDOP {
    XBOX_D3DBLENDOP_ADD              = 0x8006,
    XBOX_D3DBLENDOP_SUBTRACT         = 0x800a,
    XBOX_D3DBLENDOP_REVSUBTRACT      = 0x800b,
    XBOX_D3DBLENDOP_MIN              = 0x8007,
    XBOX_D3DBLENDOP_MAX              = 0x8008,
    XBOX_D3DBLENDOP_FORCE_DWORD      = 0x7fffffff, /* force 32-bit size enum */
} XBOX_D3DBLENDOP;

typedef enum _XBOX_D3DCMPFUNC {
    XBOX_D3DCMP_NEVER                = 0x200,
    XBOX_D3DCMP_LESS                 = 0x201,
    XBOX_D3DCMP_EQUAL                = 0x202,
    XBOX_D3DCMP_LESSEQUAL            = 0x203,
    XBOX_D3DCMP_GREATER              = 0x204,
    XBOX_D3DCMP_NOTEQUAL             = 0x205,
    XBOX_D3DCMP_GREATEREQUAL         = 0x206,
    XBOX_D3DCMP_ALWAYS               = 0x207,
    XBOX_D3DCMP_FORCE_DWORD          = 0x7fffffff, /* force 32-bit size enum */
} XBOX_D3DCMPFUNC;

typedef enum _XBOX_D3DCUBEMAP_FACES
{
    XBOX_D3DCUBEMAP_FACE_POSITIVE_X     = 0,
    XBOX_D3DCUBEMAP_FACE_NEGATIVE_X     = 1,
    XBOX_D3DCUBEMAP_FACE_POSITIVE_Y     = 2,
    XBOX_D3DCUBEMAP_FACE_NEGATIVE_Y     = 3,
    XBOX_D3DCUBEMAP_FACE_POSITIVE_Z     = 4,
    XBOX_D3DCUBEMAP_FACE_NEGATIVE_Z     = 5,

    XBOX_D3DCUBEMAP_FACE_FORCE_DWORD    = 0x7fffffff
} XBOX_D3DCUBEMAP_FACES;

typedef enum _XBOX_D3DCULL {
    XBOX_D3DCULL_NONE                = 0,
    XBOX_D3DCULL_CW                  = 0x900,
    XBOX_D3DCULL_CCW                 = 0x901,
    XBOX_D3DCULL_FORCE_DWORD         = 0x7fffffff, /* force 32-bit size enum */
} XBOX_D3DCULL;

typedef enum _XBOX_D3DDEBUGMONITORTOKENS {
    XBOX_D3DDMT_ENABLE            = 0,    // enable debug monitor
    XBOX_D3DDMT_DISABLE           = 1,    // disable debug monitor
    XBOX_D3DDMT_FORCE_DWORD     = 0x7fffffff,
} XBOX_D3DDEBUGMONITORTOKENS;

typedef enum _XBOX_D3DDEVTYPE
{
    XBOX_D3DDEVTYPE_HAL         = 1,
    XBOX_D3DDEVTYPE_REF         = 2,
    XBOX_D3DDEVTYPE_SW          = 3,

    XBOX_D3DDEVTYPE_FORCE_DWORD  = 0x7fffffff
} XBOX_D3DDEVTYPE;

typedef enum _XBOX_D3DFILLMODE {
    XBOX_D3DFILL_POINT               = 0x1b00,
    XBOX_D3DFILL_WIREFRAME           = 0x1b01,
    XBOX_D3DFILL_SOLID               = 0x1b02,
    XBOX_D3DFILL_FORCE_DWORD         = 0x7fffffff, /* force 32-bit size enum */
} XBOX_D3DFILLMODE;

typedef enum _XBOX_D3DFOGMODE {
    XBOX_D3DFOG_NONE                 = 0,
    XBOX_D3DFOG_EXP                  = 1,
    XBOX_D3DFOG_EXP2                 = 2,
    XBOX_D3DFOG_LINEAR               = 3,
    XBOX_D3DFOG_FORCE_DWORD          = 0x7fffffff, /* force 32-bit size enum */
} XBOX_D3DFOGMODE;

typedef enum _XBOX_D3DFORMAT
{
    XBOX_D3DFMT_UNKNOWN              = 0xFFFFFFFF,

    /* Swizzled formats */

    XBOX_D3DFMT_A8R8G8B8             = 0x00000006,
    XBOX_D3DFMT_X8R8G8B8             = 0x00000007,
    XBOX_D3DFMT_R5G6B5               = 0x00000005,
    XBOX_D3DFMT_X1R5G5B5             = 0x00000003,
    XBOX_D3DFMT_A1R5G5B5             = 0x00000002,
    XBOX_D3DFMT_A4R4G4B4             = 0x00000004,
    XBOX_D3DFMT_A8                   = 0x00000019,
    XBOX_D3DFMT_A8B8G8R8             = 0x0000003A,   
    XBOX_D3DFMT_B8G8R8A8             = 0x0000003B,   
    XBOX_D3DFMT_R4G4B4A4             = 0x00000039,   
    XBOX_D3DFMT_R5G5B5A1             = 0x00000038,   
    XBOX_D3DFMT_R8G8B8A8             = 0x0000003C,   
    XBOX_D3DFMT_R8B8                 = 0x00000029,   
    XBOX_D3DFMT_G8B8                 = 0x00000028,   

    XBOX_D3DFMT_P8                   = 0x0000000B,

    XBOX_D3DFMT_L8                   = 0x00000000,
    XBOX_D3DFMT_A8L8                 = 0x0000001A,
    XBOX_D3DFMT_AL8                  = 0x00000001,   
    XBOX_D3DFMT_L16                  = 0x00000032,   

    XBOX_D3DFMT_V8U8                 = 0x00000028,
    XBOX_D3DFMT_L6V5U5               = 0x00000027,
    XBOX_D3DFMT_X8L8V8U8             = 0x00000007,
    XBOX_D3DFMT_Q8W8V8U8             = 0x0000003A,
    XBOX_D3DFMT_V16U16               = 0x00000033,

    XBOX_D3DFMT_D16_LOCKABLE         = 0x0000002C,
    XBOX_D3DFMT_D16                  = 0x0000002C,
    XBOX_D3DFMT_D24S8                = 0x0000002A,
    XBOX_D3DFMT_F16                  = 0x0000002D,   
    XBOX_D3DFMT_F24S8                = 0x0000002B,

    /* YUV formats */

    XBOX_D3DFMT_UYVY                 = 0x00000024,
    XBOX_D3DFMT_YUY2                 = 0x00000025,

    /* Compressed formats */

    XBOX_D3DFMT_DXT1                 = 0x0000000C,
    XBOX_D3DFMT_DXT2                 = 0x0000000E,
    XBOX_D3DFMT_DXT3                 = 0x0000000E,
    XBOX_D3DFMT_DXT4                 = 0x0000000F,
    XBOX_D3DFMT_DXT5                 = 0x0000000F,

    /* Linear formats */

    XBOX_D3DFMT_LIN_A1R5G5B5         = 0x00000010,   
    XBOX_D3DFMT_LIN_A4R4G4B4         = 0x0000001D,   
    XBOX_D3DFMT_LIN_A8               = 0x0000001F,   
    XBOX_D3DFMT_LIN_A8B8G8R8         = 0x0000003F,   
    XBOX_D3DFMT_LIN_A8R8G8B8         = 0x00000012,   
    XBOX_D3DFMT_LIN_B8G8R8A8         = 0x00000040,   
    XBOX_D3DFMT_LIN_G8B8             = 0x00000017,   
    XBOX_D3DFMT_LIN_R4G4B4A4         = 0x0000003E,   
    XBOX_D3DFMT_LIN_R5G5B5A1         = 0x0000003D,   
    XBOX_D3DFMT_LIN_R5G6B5           = 0x00000011,   
    XBOX_D3DFMT_LIN_R6G5B5           = 0x00000037,   
    XBOX_D3DFMT_LIN_R8B8             = 0x00000016,   
    XBOX_D3DFMT_LIN_R8G8B8A8         = 0x00000041,   
    XBOX_D3DFMT_LIN_X1R5G5B5         = 0x0000001C,   
    XBOX_D3DFMT_LIN_X8R8G8B8         = 0x0000001E,   

    XBOX_D3DFMT_LIN_A8L8             = 0x00000020,   
    XBOX_D3DFMT_LIN_AL8              = 0x0000001B,   
    XBOX_D3DFMT_LIN_L16              = 0x00000035,   
    XBOX_D3DFMT_LIN_L8               = 0x00000013,   

    XBOX_D3DFMT_LIN_V16U16           = 0x00000036,
    XBOX_D3DFMT_LIN_V8U8             = 0x00000017,
    XBOX_D3DFMT_LIN_L6V5U5           = 0x00000037,
    XBOX_D3DFMT_LIN_X8L8V8U8         = 0x0000001E,
    XBOX_D3DFMT_LIN_Q8W8V8U8         = 0x00000012,

    XBOX_D3DFMT_LIN_D24S8            = 0x0000002E,   
    XBOX_D3DFMT_LIN_F24S8            = 0x0000002F,   
    XBOX_D3DFMT_LIN_D16              = 0x00000030,   
    XBOX_D3DFMT_LIN_F16              = 0x00000031,   

    XBOX_D3DFMT_VERTEXDATA           = 100,
    XBOX_D3DFMT_INDEX16              = 101,
    XBOX_D3DFMT_INDEX32              = 102,

    XBOX_D3DFMT_FORCE_DWORD          =0x7fffffff

} XBOX_D3DFORMAT;

typedef enum _XBOX_D3DBASISTYPE
{
   XBOX_D3DBASIS_BEZIER      = 0,
   XBOX_D3DBASIS_BSPLINE     = 1,
   XBOX_D3DBASIS_INTERPOLATE = 2,
   XBOX_D3DBASIS_FORCE_DWORD = 0x7fffffff,
} XBOX_D3DBASISTYPE;

typedef enum _XBOX_D3DLIGHTTYPE {
    XBOX_D3DLIGHT_POINT          = 1,
    XBOX_D3DLIGHT_SPOT           = 2,
    XBOX_D3DLIGHT_DIRECTIONAL    = 3,
    XBOX_D3DLIGHT_FORCE_DWORD    = 0x7fffffff, /* force 32-bit size enum */
} XBOX_D3DLIGHTTYPE;

typedef enum _XBOX_D3DMATERIALCOLORSOURCE
{
    XBOX_D3DMCS_MATERIAL         = 0,            // Color from material is used
    XBOX_D3DMCS_COLOR1           = 1,            // Diffuse vertex color is used
    XBOX_D3DMCS_COLOR2           = 2,            // Specular vertex color is used
    XBOX_D3DMCS_FORCE_DWORD      = 0x7fffffff,   // force 32-bit size enum
} XBOX_D3DMATERIALCOLORSOURCE;

typedef enum _XBOX_D3DMULTISAMPLE_TYPE
{
    XBOX_D3DMULTISAMPLE_NONE            =  0x0011,
    XBOX_D3DMULTISAMPLE_2_SAMPLES       =  0x1121,
    XBOX_D3DMULTISAMPLE_3_SAMPLES       =  3,
    XBOX_D3DMULTISAMPLE_4_SAMPLES       =  0x1222,
    XBOX_D3DMULTISAMPLE_5_SAMPLES       =  5,
    XBOX_D3DMULTISAMPLE_6_SAMPLES       =  6,
    XBOX_D3DMULTISAMPLE_7_SAMPLES       =  7,
    XBOX_D3DMULTISAMPLE_8_SAMPLES       =  8,
    XBOX_D3DMULTISAMPLE_9_SAMPLES       =  0x2233,
    XBOX_D3DMULTISAMPLE_10_SAMPLES      = 10,
    XBOX_D3DMULTISAMPLE_11_SAMPLES      = 11,
    XBOX_D3DMULTISAMPLE_12_SAMPLES      = 12,
    XBOX_D3DMULTISAMPLE_13_SAMPLES      = 13,
    XBOX_D3DMULTISAMPLE_14_SAMPLES      = 14,
    XBOX_D3DMULTISAMPLE_15_SAMPLES      = 15,
    XBOX_D3DMULTISAMPLE_16_SAMPLES      = 16,

    XBOX_D3DMULTISAMPLE_FORCE_DWORD     = 0x7fffffff
} XBOX_D3DMULTISAMPLE_TYPE;

typedef enum _XBOX_D3DORDERTYPE
{
   XBOX_D3DORDER_LINEAR      = 1,
   XBOX_D3DORDER_CUBIC       = 3,
   XBOX_D3DORDER_QUINTIC     = 5,
   XBOX_D3DORDER_FORCE_DWORD = 0x7fffffff,
} XBOX_D3DORDERTYPE;

typedef enum _XBOX_D3DPATCHEDGESTYLE
{
   XBOX_D3DPATCHEDGE_DISCRETE    = 0,
   XBOX_D3DPATCHEDGE_CONTINUOUS  = 1,
   XBOX_D3DPATCHEDGE_FORCE_DWORD = 0x7fffffff,
} XBOX_D3DPATCHEDGESTYLE;

typedef enum _XBOX_D3DPRIMITIVETYPE {
    XBOX_D3DPT_POINTLIST             = 1,
    XBOX_D3DPT_LINELIST              = 2,
    XBOX_D3DPT_LINELOOP              = 3,  // Xbox extension
    XBOX_D3DPT_LINESTRIP             = 4,
    XBOX_D3DPT_TRIANGLELIST          = 5,
    XBOX_D3DPT_TRIANGLESTRIP         = 6,
    XBOX_D3DPT_TRIANGLEFAN           = 7,
    XBOX_D3DPT_QUADLIST              = 8,  // Xbox extension
    XBOX_D3DPT_QUADSTRIP             = 9,  // Xbox extension
    XBOX_D3DPT_POLYGON               = 10, // Xbox extension

    XBOX_D3DPT_MAX                   = 11,
    XBOX_D3DPT_FORCE_DWORD           = 0x7fffffff, /* force 32-bit size enum */
} XBOX_D3DPRIMITIVETYPE;

typedef enum _XBOX_D3DRENDERSTATETYPE {

    // Simple render states that are processed by D3D immediately:

    XBOX_D3DRS_PSALPHAINPUTS0            = 0,    // Pixel shader, Stage 0 alpha inputs                         
    XBOX_D3DRS_PSALPHAINPUTS1            = 1,    // Pixel shader, Stage 1 alpha inputs                         
    XBOX_D3DRS_PSALPHAINPUTS2            = 2,    // Pixel shader, Stage 2 alpha inputs                         
    XBOX_D3DRS_PSALPHAINPUTS3            = 3,    // Pixel shader, Stage 3 alpha inputs                         
    XBOX_D3DRS_PSALPHAINPUTS4            = 4,    // Pixel shader, Stage 4 alpha inputs                         
    XBOX_D3DRS_PSALPHAINPUTS5            = 5,    // Pixel shader, Stage 5 alpha inputs                         
    XBOX_D3DRS_PSALPHAINPUTS6            = 6,    // Pixel shader, Stage 6 alpha inputs                         
    XBOX_D3DRS_PSALPHAINPUTS7            = 7,    // Pixel shader, Stage 7 alpha inputs                         
    XBOX_D3DRS_PSFINALCOMBINERINPUTSABCD = 8,    // Pixel shader, Final combiner inputs ABCD
    XBOX_D3DRS_PSFINALCOMBINERINPUTSEFG  = 9,    // Pixel shader, Final combiner inputs EFG
    XBOX_D3DRS_PSCONSTANT0_0             = 10,   // Pixel shader, C0 in stage 0
    XBOX_D3DRS_PSCONSTANT0_1             = 11,   // Pixel shader, C0 in stage 1
    XBOX_D3DRS_PSCONSTANT0_2             = 12,   // Pixel shader, C0 in stage 2
    XBOX_D3DRS_PSCONSTANT0_3             = 13,   // Pixel shader, C0 in stage 3
    XBOX_D3DRS_PSCONSTANT0_4             = 14,   // Pixel shader, C0 in stage 4
    XBOX_D3DRS_PSCONSTANT0_5             = 15,   // Pixel shader, C0 in stage 5
    XBOX_D3DRS_PSCONSTANT0_6             = 16,   // Pixel shader, C0 in stage 6
    XBOX_D3DRS_PSCONSTANT0_7             = 17,   // Pixel shader, C0 in stage 7
    XBOX_D3DRS_PSCONSTANT1_0             = 18,   // Pixel shader, C1 in stage 0
    XBOX_D3DRS_PSCONSTANT1_1             = 19,   // Pixel shader, C1 in stage 1
    XBOX_D3DRS_PSCONSTANT1_2             = 20,   // Pixel shader, C1 in stage 2
    XBOX_D3DRS_PSCONSTANT1_3             = 21,   // Pixel shader, C1 in stage 3
    XBOX_D3DRS_PSCONSTANT1_4             = 22,   // Pixel shader, C1 in stage 4
    XBOX_D3DRS_PSCONSTANT1_5             = 23,   // Pixel shader, C1 in stage 5
    XBOX_D3DRS_PSCONSTANT1_6             = 24,   // Pixel shader, C1 in stage 6
    XBOX_D3DRS_PSCONSTANT1_7             = 25,   // Pixel shader, C1 in stage 7
    XBOX_D3DRS_PSALPHAOUTPUTS0           = 26,   // Pixel shader, Stage 0 alpha outputs                        
    XBOX_D3DRS_PSALPHAOUTPUTS1           = 27,   // Pixel shader, Stage 1 alpha outputs                        
    XBOX_D3DRS_PSALPHAOUTPUTS2           = 28,   // Pixel shader, Stage 2 alpha outputs                        
    XBOX_D3DRS_PSALPHAOUTPUTS3           = 29,   // Pixel shader, Stage 3 alpha outputs                        
    XBOX_D3DRS_PSALPHAOUTPUTS4           = 30,   // Pixel shader, Stage 4 alpha outputs                        
    XBOX_D3DRS_PSALPHAOUTPUTS5           = 31,   // Pixel shader, Stage 5 alpha outputs                        
    XBOX_D3DRS_PSALPHAOUTPUTS6           = 32,   // Pixel shader, Stage 6 alpha outputs                        
    XBOX_D3DRS_PSALPHAOUTPUTS7           = 33,   // Pixel shader, Stage 7 alpha outputs                        
    XBOX_D3DRS_PSRGBINPUTS0              = 34,   // Pixel shader, Stage 0 RGB inputs                           
    XBOX_D3DRS_PSRGBINPUTS1              = 35,   // Pixel shader, Stage 1 RGB inputs                           
    XBOX_D3DRS_PSRGBINPUTS2              = 36,   // Pixel shader, Stage 2 RGB inputs                           
    XBOX_D3DRS_PSRGBINPUTS3              = 37,   // Pixel shader, Stage 3 RGB inputs                           
    XBOX_D3DRS_PSRGBINPUTS4              = 38,   // Pixel shader, Stage 4 RGB inputs                           
    XBOX_D3DRS_PSRGBINPUTS5              = 39,   // Pixel shader, Stage 5 RGB inputs                           
    XBOX_D3DRS_PSRGBINPUTS6              = 40,   // Pixel shader, Stage 6 RGB inputs                           
    XBOX_D3DRS_PSRGBINPUTS7              = 41,   // Pixel shader, Stage 7 RGB inputs                           
    XBOX_D3DRS_PSCOMPAREMODE             = 42,   // Pixel shader, Compare modes for clipplane texture mode     
    XBOX_D3DRS_PSFINALCOMBINERCONSTANT0  = 43,   // Pixel shader, C0 in final combiner
    XBOX_D3DRS_PSFINALCOMBINERCONSTANT1  = 44,   // Pixel shader, C1 in final combiner
    XBOX_D3DRS_PSRGBOUTPUTS0             = 45,   // Pixel shader, Stage 0 RGB outputs                          
    XBOX_D3DRS_PSRGBOUTPUTS1             = 46,   // Pixel shader, Stage 1 RGB outputs                          
    XBOX_D3DRS_PSRGBOUTPUTS2             = 47,   // Pixel shader, Stage 2 RGB outputs                          
    XBOX_D3DRS_PSRGBOUTPUTS3             = 48,   // Pixel shader, Stage 3 RGB outputs                          
    XBOX_D3DRS_PSRGBOUTPUTS4             = 49,   // Pixel shader, Stage 4 RGB outputs                          
    XBOX_D3DRS_PSRGBOUTPUTS5             = 50,   // Pixel shader, Stage 5 RGB outputs                          
    XBOX_D3DRS_PSRGBOUTPUTS6             = 51,   // Pixel shader, Stage 6 RGB outputs                          
    XBOX_D3DRS_PSRGBOUTPUTS7             = 52,   // Pixel shader, Stage 7 RGB outputs                          
    XBOX_D3DRS_PSCOMBINERCOUNT           = 53,   // Pixel shader, Active combiner count (Stages 0-7)           
                                            // Pixel shader, Reserved
    XBOX_D3DRS_PSDOTMAPPING              = 55,   // Pixel shader, Input mapping for dot product modes          
    XBOX_D3DRS_PSINPUTTEXTURE            = 56,   // Pixel shader, Texture source for some texture modes        

    XBOX_D3DRS_ZFUNC                     = 57,   // D3DCMPFUNC 
    XBOX_D3DRS_ALPHAFUNC                 = 58,   // D3DCMPFUNC 
    XBOX_D3DRS_ALPHABLENDENABLE          = 59,   // TRUE to enable alpha blending 
    XBOX_D3DRS_ALPHATESTENABLE           = 60,   // TRUE to enable alpha tests 
    XBOX_D3DRS_ALPHAREF                  = 61,   // BYTE
    XBOX_D3DRS_SRCBLEND                  = 62,   // D3DBLEND 
    XBOX_D3DRS_DESTBLEND                 = 63,   // D3DBLEND 
    XBOX_D3DRS_ZWRITEENABLE              = 64,   // TRUE to enable z writes 
    XBOX_D3DRS_DITHERENABLE              = 65,   // TRUE to enable dithering 
    XBOX_D3DRS_SHADEMODE                 = 66,   // D3DSHADEMODE 
    XBOX_D3DRS_COLORWRITEENABLE          = 67,   // D3DCOLORWRITEENABLE_ALPHA, etc. per-channel write enable
    XBOX_D3DRS_STENCILZFAIL              = 68,   // D3DSTENCILOP to do if stencil test passes and Z test fails 
    XBOX_D3DRS_STENCILPASS               = 69,   // D3DSTENCILOP to do if both stencil and Z tests pass 
    XBOX_D3DRS_STENCILFUNC               = 70,   // D3DCMPFUNC
    XBOX_D3DRS_STENCILREF                = 71,   // BYTE reference value used in stencil test 
    XBOX_D3DRS_STENCILMASK               = 72,   // BYTE mask value used in stencil test 
    XBOX_D3DRS_STENCILWRITEMASK          = 73,   // BYTE write mask applied to values written to stencil buffer 
    XBOX_D3DRS_BLENDOP                   = 74,   // D3DBLENDOP setting
    XBOX_D3DRS_BLENDCOLOR                = 75,   // D3DCOLOR for D3DBLEND_CONSTANT, etc. (Xbox extension)
    XBOX_D3DRS_SWATHWIDTH                = 76,   // D3DSWATHWIDTH (Xbox extension)
    XBOX_D3DRS_POLYGONOFFSETZSLOPESCALE  = 77,   // float Z factor for shadow maps (Xbox extension)
    XBOX_D3DRS_POLYGONOFFSETZOFFSET      = 78,   // float bias for polygon offset (Xbox extension)
    XBOX_D3DRS_POINTOFFSETENABLE         = 79,   // TRUE to enable polygon offset for points (Xbox extension)
    XBOX_D3DRS_WIREFRAMEOFFSETENABLE     = 80,   // TRUE to enable polygon offset for lines (Xbox extension)
    XBOX_D3DRS_SOLIDOFFSETENABLE         = 81,   // TRUE to enable polygon offset for fills (Xbox extension)

    XBOX_D3DRS_SIMPLE_MAX                = 82,

    // State whose handling is deferred until the next Draw[Indexed]Vertices
    // call because of interdependencies on other states:

    XBOX_D3DRS_FOGENABLE                 = 82,   // TRUE to enable fog blending 
    XBOX_D3DRS_FOGTABLEMODE              = 83,   // D3DFOGMODE 
    XBOX_D3DRS_FOGSTART                  = 84,   // float fog start (for both vertex and pixel fog) 
    XBOX_D3DRS_FOGEND                    = 85,   // float fog end      
    XBOX_D3DRS_FOGDENSITY                = 86,   // float fog density  
    XBOX_D3DRS_RANGEFOGENABLE            = 87,   // TRUE to enable range-based fog 
    XBOX_D3DRS_WRAP0                     = 88,   // DWORD wrap for 1st texture coord. set 
    XBOX_D3DRS_WRAP1                     = 89,   // DWORD wrap for 2nd texture coord. set 
    XBOX_D3DRS_WRAP2                     = 90,   // DWORD wrap for 3rd texture coord. set 
    XBOX_D3DRS_WRAP3                     = 91,   // DWORD wrap for 4th texture coord. set 
    XBOX_D3DRS_LIGHTING                  = 92,   // TRUE to enable lighting
    XBOX_D3DRS_SPECULARENABLE            = 93,   // TRUE to enable specular 
    XBOX_D3DRS_LOCALVIEWER               = 94,   // TRUE to enable camera-relative specular highlights
    XBOX_D3DRS_COLORVERTEX               = 95,   // TRUE to enable per-vertex color
    XBOX_D3DRS_BACKSPECULARMATERIALSOURCE= 96,  // D3DMATERIALCOLORSOURCE (Xbox extension)
    XBOX_D3DRS_BACKDIFFUSEMATERIALSOURCE = 97,  // D3DMATERIALCOLORSOURCE (Xbox extension)
    XBOX_D3DRS_BACKAMBIENTMATERIALSOURCE = 98,  // D3DMATERIALCOLORSOURCE (Xbox extension)
    XBOX_D3DRS_BACKEMISSIVEMATERIALSOURCE= 99,  // D3DMATERIALCOLORSOURCE (Xbox extension)
    XBOX_D3DRS_SPECULARMATERIALSOURCE    = 100,  // D3DMATERIALCOLORSOURCE 
    XBOX_D3DRS_DIFFUSEMATERIALSOURCE     = 101,  // D3DMATERIALCOLORSOURCE 
    XBOX_D3DRS_AMBIENTMATERIALSOURCE     = 102,  // D3DMATERIALCOLORSOURCE 
    XBOX_D3DRS_EMISSIVEMATERIALSOURCE    = 103,  // D3DMATERIALCOLORSOURCE 
    XBOX_D3DRS_BACKAMBIENT               = 104,  // D3DCOLOR (Xbox extension)
    XBOX_D3DRS_AMBIENT                   = 105,  // D3DCOLOR 
    XBOX_D3DRS_POINTSIZE                 = 106,  // float point size 
    XBOX_D3DRS_POINTSIZE_MIN             = 107,  // float point size min threshold 
    XBOX_D3DRS_POINTSPRITEENABLE         = 108,  // TRUE to enable point sprites
    XBOX_D3DRS_POINTSCALEENABLE          = 109,  // TRUE to enable point size scaling
    XBOX_D3DRS_POINTSCALE_A              = 110,  // float point attenuation A value 
    XBOX_D3DRS_POINTSCALE_B              = 111,  // float point attenuation B value 
    XBOX_D3DRS_POINTSCALE_C              = 112,  // float point attenuation C value 
    XBOX_D3DRS_POINTSIZE_MAX             = 113,  // float point size max threshold 
    XBOX_D3DRS_PATCHEDGESTYLE            = 114,  // D3DPATCHEDGESTYLE
    XBOX_D3DRS_PATCHSEGMENTS             = 115,  // DWORD number of segments per edge when drawing patches

    XBOX_D3DRS_DEFERRED_MAX              = 116,

    // Complex state that has immediate processing:

    XBOX_D3DRS_PSTEXTUREMODES            = 116,  // Pixel shader, Texture addressing modes                     
    XBOX_D3DRS_VERTEXBLEND               = 117,   // D3DVERTEXBLENDFLAGS
    XBOX_D3DRS_FOGCOLOR                  = 118,  // D3DCOLOR 
    XBOX_D3DRS_FILLMODE                  = 119,  // D3DFILLMODE        
    XBOX_D3DRS_BACKFILLMODE              = 120,  // D3DFILLMODE (Xbox extension)
    XBOX_D3DRS_TWOSIDEDLIGHTING          = 121,  // TRUE to enable two-sided lighting (Xbox extension)
    XBOX_D3DRS_NORMALIZENORMALS          = 122,  // TRUE to enable automatic normalization
    XBOX_D3DRS_ZENABLE                   = 123,  // D3DZBUFFERTYPE (or TRUE/FALSE for legacy) 
    XBOX_D3DRS_STENCILENABLE             = 124,  // TRUE to enable stenciling
    XBOX_D3DRS_STENCILFAIL               = 125,  // D3DSTENCILOP to do if stencil test fails 
    XBOX_D3DRS_FRONTFACE                 = 126,  // D3DFRONT (Xbox extension)
    XBOX_D3DRS_CULLMODE                  = 127,  // D3DCULL 
    XBOX_D3DRS_TEXTUREFACTOR             = 128,  // D3DCOLOR used for multi-texture blend 
    XBOX_D3DRS_ZBIAS                     = 129,  // LONG Z bias 
    XBOX_D3DRS_LOGICOP                   = 130,  // D3DLOGICOP
    XBOX_D3DRS_EDGEANTIALIAS             = 131,  // TRUE to enable edge antialiasing 
    XBOX_D3DRS_MULTISAMPLEANTIALIAS      = 132,  // TRUE to enable multisample antialiasing
    XBOX_D3DRS_MULTISAMPLEMASK           = 133,  // DWORD per-pixel and sample enable/disable
    XBOX_D3DRS_MULTISAMPLETYPE           = 134,  // D3DMULTISAMPLE_TYPE (Xbox extension)
    XBOX_D3DRS_SHADOWFUNC                = 135,  // D3DCMPFUNC (Xbox extension)
    XBOX_D3DRS_LINEWIDTH                 = 136,  // float (Xbox extension)
    XBOX_D3DRS_DXT1NOISEENABLE           = 137,  // TRUE to enable DXT1 decompression noise (Xbox extension)

    XBOX_D3DRS_MAX                       = 138,  // Total number of renderstates 

    // Render states that are not supported on Xbox:
    //
    // D3DRS_LINEPATTERN
    // D3DRS_LASTPIXEL
    // D3DRS_CLIPPING
    // D3DRS_FOGVERTEXMODE
    // D3DRS_CLIPPLANEENABLE
    // D3DRS_SOFTWAREVERTEXPROCESSING
    // D3DRS_DEBUGMONITORTOKEN
    // D3DRS_INDEXEDVERTEXBLENDENABLE
    // D3DRS_TWEENFACTOR

    XBOX_D3DRS_FORCE_DWORD               = 0x7fffffff, /* force 32-bit size enum */

} XBOX_D3DRENDERSTATETYPE;

typedef enum _XBOX_D3DRESOURCETYPE {
    XBOX_D3DRTYPE_NONE                   =  0,
    XBOX_D3DRTYPE_SURFACE                =  1,
    XBOX_D3DRTYPE_VOLUME                 =  2,
    XBOX_D3DRTYPE_TEXTURE                =  3,
    XBOX_D3DRTYPE_VOLUMETEXTURE          =  4,
    XBOX_D3DRTYPE_CUBETEXTURE            =  5,
    XBOX_D3DRTYPE_VERTEXBUFFER           =  6,
    XBOX_D3DRTYPE_INDEXBUFFER            =  7,
    XBOX_D3DRTYPE_PUSHBUFFER             =  8,
    XBOX_D3DRTYPE_PALETTE                =  9,

    XBOX_D3DRTYPE_FORCE_DWORD            = 0x7fffffff
} XBOX_D3DRESOURCETYPE;

typedef enum _XBOX_D3DSHADEMODE {
    XBOX_D3DSHADE_FLAT               = 0x1d00,
    XBOX_D3DSHADE_GOURAUD            = 0x1d01,
    XBOX_D3DSHADE_PHONG              = 0x1d01,
    XBOX_D3DSHADE_FORCE_DWORD        = 0x7fffffff, /* force 32-bit size enum */
} XBOX_D3DSHADEMODE;

typedef enum _XBOX_D3DSTATEBLOCKTYPE
{
    XBOX_D3DSBT_ALL           = 1, // capture all state
    XBOX_D3DSBT_PIXELSTATE    = 2, // capture pixel state
    XBOX_D3DSBT_VERTEXSTATE   = 3, // capture vertex state
    XBOX_D3DSBT_FORCE_DWORD   = 0x7fffffff,
} XBOX_D3DSTATEBLOCKTYPE;

typedef enum _XBOX_D3DSTENCILOP {
    XBOX_D3DSTENCILOP_KEEP           = 0x1e00,
    XBOX_D3DSTENCILOP_ZERO           = 0,
    XBOX_D3DSTENCILOP_REPLACE        = 0x1e01,
    XBOX_D3DSTENCILOP_INCRSAT        = 0x1e02,
    XBOX_D3DSTENCILOP_DECRSAT        = 0x1e03,
    XBOX_D3DSTENCILOP_INVERT         = 0x150a,
    XBOX_D3DSTENCILOP_INCR           = 0x8507,
    XBOX_D3DSTENCILOP_DECR           = 0x8508,
    XBOX_D3DSTENCILOP_FORCE_DWORD    = 0x7fffffff, /* force 32-bit size enum */
} XBOX_D3DSTENCILOP;

typedef enum _XBOX_D3DSWAPEFFECT
{
    XBOX_D3DSWAPEFFECT_DISCARD           = 1,
    XBOX_D3DSWAPEFFECT_FLIP              = 2,
    XBOX_D3DSWAPEFFECT_COPY              = 3,
    XBOX_D3DSWAPEFFECT_COPY_VSYNC        = 4,

    XBOX_D3DSWAPEFFECT_FORCE_DWORD       = 0x7fffffff
} XBOX_D3DSWAPEFFECT;

typedef enum _XBOX_D3DTEXTUREADDRESS {
    XBOX_D3DTADDRESS_WRAP            = 1,
    XBOX_D3DTADDRESS_MIRROR          = 2,
    XBOX_D3DTADDRESS_CLAMP           = 3,
    XBOX_D3DTADDRESS_BORDER          = 4,
    XBOX_D3DTADDRESS_CLAMPTOEDGE     = 5, // Xbox extension

    // D3DTADDRESS_MIRRORONCE not supported on Xbox

    XBOX_D3DTADDRESS_MAX             = 6,
    XBOX_D3DTADDRESS_FORCE_DWORD     = 0x7fffffff, /* force 32-bit size enum */
} XBOX_D3DTEXTUREADDRESS;

typedef enum _XBOX_D3DTEXTUREFILTERTYPE
{
    XBOX_D3DTEXF_NONE            = 0,    // filtering disabled (valid for mip filter only)
    XBOX_D3DTEXF_POINT           = 1,    // nearest
    XBOX_D3DTEXF_LINEAR          = 2,    // linear interpolation
    XBOX_D3DTEXF_ANISOTROPIC     = 3,    // anisotropic
    XBOX_D3DTEXF_FLATCUBIC       = 4,    // cubic
    XBOX_D3DTEXF_GAUSSIANCUBIC   = 5,    // different cubic kernel

    XBOX_D3DTEXF_MAX             = 6,
    XBOX_D3DTEXF_FORCE_DWORD     = 0x7fffffff,   // force 32-bit size enum
} XBOX_D3DTEXTUREFILTERTYPE;

typedef enum _XBOX_D3DTEXTUREOP
{
    // Control
    XBOX_D3DTOP_DISABLE              = 1,      // disables stage
    XBOX_D3DTOP_SELECTARG1           = 2,      // the default
    XBOX_D3DTOP_SELECTARG2           = 3,

    // Modulate
    XBOX_D3DTOP_MODULATE             = 4,      // multiply args together
    XBOX_D3DTOP_MODULATE2X           = 5,      // multiply and  1 bit
    XBOX_D3DTOP_MODULATE4X           = 6,      // multiply and  2 bits

    // Add
    XBOX_D3DTOP_ADD                  =  7,   // add arguments together
    XBOX_D3DTOP_ADDSIGNED            =  8,   // add with -0.5 bias
    XBOX_D3DTOP_ADDSIGNED2X          =  9,   // as above but left  1 bit
    XBOX_D3DTOP_SUBTRACT             = 10,   // Arg1 - Arg2, with no saturation
    XBOX_D3DTOP_ADDSMOOTH            = 11,   // add 2 args, subtract product
                                        // Arg1 + Arg2 - Arg1*Arg2
                                        // = Arg1 + (1-Arg1)*Arg2

    // Linear alpha blend: Arg1*(Alpha) + Arg2*(1-Alpha)
    XBOX_D3DTOP_BLENDDIFFUSEALPHA    = 12, // iterated alpha
    XBOX_D3DTOP_BLENDTEXTUREALPHA    = 13, // texture alpha
    XBOX_D3DTOP_BLENDFACTORALPHA     = 14, // alpha from D3DRENDERSTATE_TEXTUREFACTOR

    // Linear alpha blend with pre-multiplied arg1 input: Arg1 + Arg2*(1-Alpha)
    XBOX_D3DTOP_BLENDTEXTUREALPHAPM  = 15, // texture alpha
    XBOX_D3DTOP_BLENDCURRENTALPHA    = 16, // by alpha of current color

    // Specular mapping
    XBOX_D3DTOP_PREMODULATE            = 17,     // modulate with next texture before use
    XBOX_D3DTOP_MODULATEALPHA_ADDCOLOR = 18,     // Arg1.RGB + Arg1.A*Arg2.RGB
                                            // COLOROP only
    XBOX_D3DTOP_MODULATECOLOR_ADDALPHA = 19,     // Arg1.RGB*Arg2.RGB + Arg1.A
                                            // COLOROP only
    XBOX_D3DTOP_MODULATEINVALPHA_ADDCOLOR = 20,  // (1-Arg1.A)*Arg2.RGB + Arg1.RGB
                                            // COLOROP only
    XBOX_D3DTOP_MODULATEINVCOLOR_ADDALPHA = 21,  // (1-Arg1.RGB)*Arg2.RGB + Arg1.A
                                            // COLOROP only

    // This can do either diffuse or specular bump mapping with correct input.
    // Performs the function (Arg1.R*Arg2.R + Arg1.G*Arg2.G + Arg1.B*Arg2.B)
    // where each component has been scaled and offset to make it signed.
    // The result is replicated into all four (including alpha) channels.
    // This is a valid COLOROP only.
    XBOX_D3DTOP_DOTPRODUCT3          = 22,

    // Triadic ops
    XBOX_D3DTOP_MULTIPLYADD          = 23, // Arg0 + Arg1*Arg2
    XBOX_D3DTOP_LERP                 = 24, // (Arg0)*Arg1 + (1-Arg0)*Arg2

    // Bump mapping
    XBOX_D3DTOP_BUMPENVMAP           = 25, // per pixel env map perturbation
    XBOX_D3DTOP_BUMPENVMAPLUMINANCE  = 26, // with luminance channel

    XBOX_D3DTOP_MAX                  = 27,
    XBOX_D3DTOP_FORCE_DWORD = 0x7fffffff,
} XBOX_D3DTEXTUREOP;

typedef enum _XBOX_D3DTEXTURESTAGESTATETYPE
{
    // State whose handling is deferred until the next Draw[Indexed]Vertices
    // call because of interdependencies on other states:

    XBOX_D3DTSS_COLOROP               =  0,  // D3DTEXTUREOP - per-stage blending controls for color channels 
    XBOX_D3DTSS_COLORARG0             =  1,  // D3DTA_* (D3DTA_TEXTURE etc.) third arg for triadic ops 
    XBOX_D3DTSS_COLORARG1             =  2,  // D3DTA_* (D3DTA_TEXTURE etc.) texture arg
    XBOX_D3DTSS_COLORARG2             =  3,  // D3DTA_* (D3DTA_TEXTURE etc.) texture arg 
    XBOX_D3DTSS_ALPHAOP               =  4,  // D3DTEXTUREOP - per-stage blending controls for alpha channel 
    XBOX_D3DTSS_ALPHAARG0             =  5,  // D3DTA_* (D3DTA_TEXTURE etc.) third arg for triadic ops 
    XBOX_D3DTSS_ALPHAARG1             =  6,  // D3DTA_* (D3DTA_TEXTURE etc.) texture arg
    XBOX_D3DTSS_ALPHAARG2             =  7,  // D3DTA_* (D3DTA_TEXTURE etc.) texture arg) 
    XBOX_D3DTSS_RESULTARG             =  8,  // D3DTA_* (D3DTA_TEXTURE etc.) arg for result (CURRENT or TEMP) 
    XBOX_D3DTSS_TEXTURETRANSFORMFLAGS =  9,  // D3DTEXTURETRANSFORMFLAGS controls texture transform 
    XBOX_D3DTSS_ADDRESSU              = 10,  // D3DTEXTUREADDRESS for U coordinate 
    XBOX_D3DTSS_ADDRESSV              = 11,  // D3DTEXTUREADDRESS for V coordinate 
    XBOX_D3DTSS_ADDRESSW              = 12,  // D3DTEXTUREADDRESS for W coordinate 
    XBOX_D3DTSS_MAGFILTER             = 13,  // D3DTEXF_* (D3DTEXF_LINEAR etc.) filter to use for magnification 
    XBOX_D3DTSS_MINFILTER             = 14,  // D3DTEXF_* (D3DTEXF_LINEAR etc.) filter to use for minification 
    XBOX_D3DTSS_MIPFILTER             = 15,  // D3DTEXF_* (D3DTEXF_LINEAR etc.) filter to use between mipmaps during minification 
    XBOX_D3DTSS_MIPMAPLODBIAS         = 16,  // float mipmap LOD bias 
    XBOX_D3DTSS_MAXMIPLEVEL           = 17,  // DWORD 0..(n-1) LOD index of largest map to use (0 == largest) 
    XBOX_D3DTSS_MAXANISOTROPY         = 18,  // DWORD maximum anisotropy 
    XBOX_D3DTSS_COLORKEYOP            = 19,  // D3DTEXTURECOLORKEYOP (Xbox extension)
    XBOX_D3DTSS_COLORSIGN             = 20,  // D3DTSIGN_* (D3DTSIGN_ASIGNED etc.) for color channels (xbox extension)
    XBOX_D3DTSS_ALPHAKILL             = 21,  // D3DTEXTUREALPHAKILL (Xbox extension)

    XBOX_D3DTSS_DEFERRED_MAX          = 22,

    // State that has immediate processing:

    XBOX_D3DTSS_BUMPENVMAT00          = 22,  // float (bump mapping matrix) 
    XBOX_D3DTSS_BUMPENVMAT01          = 23,  // float (bump mapping matrix) 
    XBOX_D3DTSS_BUMPENVMAT10          = 24,  // float (bump mapping matrix) 
    XBOX_D3DTSS_BUMPENVMAT11          = 25,  // float (bump mapping matrix) 
    XBOX_D3DTSS_BUMPENVLSCALE         = 26,  // float scale for bump map luminance 
    XBOX_D3DTSS_BUMPENVLOFFSET        = 27,  // float offset for bump map luminance 
    XBOX_D3DTSS_TEXCOORDINDEX         = 28,  // DWORD identifies which set of texture coordinates index this texture 
    XBOX_D3DTSS_BORDERCOLOR           = 29,  // D3DCOLOR 
    XBOX_D3DTSS_COLORKEYCOLOR         = 30,  // D3DCOLOR value for color key (Xbox extension)
                                 
    XBOX_D3DTSS_MAX                   = 32,  // Total number of texture stage states (bumped to a power of 2)

    XBOX_D3DTSS_FORCE_DWORD           = 0x7fffffff, // force 32-bit size enum 
} XBOX_D3DTEXTURESTAGESTATETYPE;

typedef enum _XBOX_D3DTEXTURETRANSFORMFLAGS {
    XBOX_D3DTTFF_DISABLE         = 0,    // texture coordinates are passed directly
    XBOX_D3DTTFF_COUNT1          = 1,    // rasterizer should expect 1-D texture coords
    XBOX_D3DTTFF_COUNT2          = 2,    // rasterizer should expect 2-D texture coords
    XBOX_D3DTTFF_COUNT3          = 3,    // rasterizer should expect 3-D texture coords
    XBOX_D3DTTFF_COUNT4          = 4,    // rasterizer should expect 4-D texture coords
    XBOX_D3DTTFF_PROJECTED       = 256,  // texcoords to be divided by COUNTth element
    XBOX_D3DTTFF_FORCE_DWORD     = 0x7fffffff,
} XBOX_D3DTEXTURETRANSFORMFLAGS;

typedef enum _XBOX_D3DTRANSFORMSTATETYPE {
    XBOX_D3DTS_VIEW          = 0,
    XBOX_D3DTS_PROJECTION    = 1,
    XBOX_D3DTS_TEXTURE0      = 2,
    XBOX_D3DTS_TEXTURE1      = 3,
    XBOX_D3DTS_TEXTURE2      = 4,
    XBOX_D3DTS_TEXTURE3      = 5,
    XBOX_D3DTS_WORLD         = 6,
    XBOX_D3DTS_WORLD1        = 7,
    XBOX_D3DTS_WORLD2        = 8,
    XBOX_D3DTS_WORLD3        = 9,

    XBOX_D3DTS_MAX           = 10,
    XBOX_D3DTS_FORCE_DWORD   = 0x7fffffff, /* force 32-bit size enum */
} XBOX_D3DTRANSFORMSTATETYPE;

typedef enum _XBOX_D3DVERTEXBLENDFLAGS
{
    XBOX_D3DVBF_DISABLE           = 0,     // Disable vertex blending
    XBOX_D3DVBF_1WEIGHTS          = 1,     // 2 matrix blending
    XBOX_D3DVBF_2WEIGHTS          = 3,     // 3 matrix blending
    XBOX_D3DVBF_3WEIGHTS          = 5,     // 4 matrix blending
    XBOX_D3DVBF_2WEIGHTS2MATRICES = 2,     // Xbox extension
    XBOX_D3DVBF_3WEIGHTS3MATRICES = 4,     // Xbox extension
    XBOX_D3DVBF_4WEIGHTS4MATRICES = 6,     // Xbox extension

    XBOX_D3DVBF_MAX               = 7,
    XBOX_D3DVBF_FORCE_DWORD       = 0x7fffffff, // force 32-bit size enum
} XBOX_D3DVERTEXBLENDFLAGS;

typedef enum _XBOX_D3DZBUFFERTYPE {
    XBOX_D3DZB_FALSE                 = 0,
    XBOX_D3DZB_TRUE                  = 1, // Z buffering
    XBOX_D3DZB_USEW                  = 2, // W buffering
    XBOX_D3DZB_FORCE_DWORD           = 0x7fffffff, /* force 32-bit size enum */
} XBOX_D3DZBUFFERTYPE;

// Other possible translations:
//  D3DLOCK flags
//  D3DUSAGE flags
//  D3DCAPS8 flags
//  Gamma ramp flags
//  Private data flags

//***********************************************************************************
// Function prototypes
//***********************************************************************************

void    InitTypeTranslationMaps(CMap32* pTypeMapTable);

#endif // __TYPETRAN_H__
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\test\directx\d3d\frame\locussrv\util.cpp ===
/*******************************************************************************

Copyright (c) 1998 Microsoft Corporation.  All rights reserved.

File Name:

    util.cpp

Description:

    Utility functions.

*******************************************************************************/

#include <windows.h>
#include <tchar.h>
#include <stdio.h>
#include <d3dx8.h>
#include "util.h"

static HANDLE g_hHeap = NULL;

//******************************************************************************
// Debugging function
//******************************************************************************

#ifdef _DEBUG

//******************************************************************************
//
// Function:
//
//     DebugString
//
// Description:
//
//     Take the formatted output, prepend the application name, and send the
//     output to the debugger.
//
// Arguments:
//
//     LPCTSTR szFormat         - Formatting string describing the output
//
//     Variable argument list   - Data to be placed in the output string
//
// Return Value:
//
//     None.
//
//******************************************************************************
void DebugString(LPCTSTR szFormat, ...) {

    TCHAR       szBuffer[2048];
    va_list     vl;

    _tcscpy(szBuffer, TEXT("D3DAPP: "));

    va_start(vl, szFormat);
    _vstprintf(szBuffer+8, szFormat, vl);
    va_end(vl);

    _tcscat(szBuffer, TEXT("\r\n"));

    OutputDebugString(szBuffer);
}

#endif // DEBUG

//******************************************************************************
// Memory allocation routines
//******************************************************************************

//******************************************************************************
//
// Function:
//
//     CreateHeap
//
// Description:
//
//     Create a heap for the application.
//
// Arguments:
//
//     None.
//
// Return Value:
//
//     TRUE on success, FALSE on failure.
//
//******************************************************************************
BOOL CreateHeap() {

    if (g_hHeap) {
        return FALSE;
    }

    g_hHeap = HeapCreate(0, 0, 0);
    if (!g_hHeap) {
        DebugString(TEXT("HeapCreate failed [%d]"), GetLastError());
        return FALSE;
    }

    return TRUE;
}

//******************************************************************************
//
// Function:
//
//     ReleaseHeap
//
// Description:
//
//     Destroy the application heap.
//
// Arguments:
//
//     None.
//
// Return Value:
//
//     None.
//
//******************************************************************************
void ReleaseHeap() {

    if (g_hHeap) {
        if (!HeapDestroy(g_hHeap)) {
            DebugString(TEXT("HeapDestroy failed [%d]"), GetLastError());
        }
        g_hHeap = NULL;
    }
}

//******************************************************************************
//
// Function:
//
//     MemAlloc
//
// Description:
//
//     Allocate the given amount of memory from the application heap.  This 
//     memory should later be freed using the MemFree function.
//
// Arguments:
//
//     UINT uNumBytes           - Number of bytes to allocate
//
// Return Value:
//
//     Base address of the allocated memory.
//
//******************************************************************************
LPVOID MemAlloc(UINT uNumBytes) {

    LPVOID pvMem = NULL;
    if (g_hHeap) {
        pvMem = HeapAlloc(g_hHeap, 0, uNumBytes);
    }
    return pvMem;
}

//******************************************************************************
//
// Function:
//
//     MemFree
//
// Description:
//
//     Free a block of memory that was allocated using the MemAlloc function.
//
// Arguments:
//
//     LPVOID pvMem             - Base address of the memory
//
// Return Value:
//
//     None.
//
//******************************************************************************
void MemFree(LPVOID pvMem) {

    if (g_hHeap) {
        if (!HeapFree(g_hHeap, 0, pvMem)) {
            DebugString(TEXT("HeapFree failed [%d]"), GetLastError());
        }
    }
}

//******************************************************************************
//
// Function:
//
//     MemAlloc32
//
// Description:
//
//     Allocate a given amount of memory whose base address is
//     aligned along a 32 byte boundary.  This memory must later be freed
//     using the MemFree32 function.
//
// Arguments:
//
//     UINT uNumBytes           - Number of bytes to allocate
//
// Return Value:
//
//     Base address of the allocated memory.
//
//******************************************************************************
LPVOID MemAlloc32(UINT uNumBytes)
{
	LPBYTE pbyAllocated, pbyAligned = NULL;

	pbyAllocated = (LPBYTE)MemAlloc(uNumBytes + 32);
    if (pbyAllocated) {
	    pbyAligned   = (LPBYTE)((((DWORD)pbyAllocated) + 32) & ~31);
	    *(((LPDWORD)pbyAligned)-1) = (DWORD)pbyAllocated;
    }
	return pbyAligned;
}

//******************************************************************************
//
// Function:
//
//     MemFree32
//
// Description:
//
//     Free an aligned block of memory that was allocated using the MemAlloc32
//     function.
//
// Arguments:
//
//     LPVOID pvAligned         - Base address of the aligned memory
//
// Return Value:
//
//     None.
//
//******************************************************************************
void MemFree32(LPVOID pvMem)
{
	LPBYTE pbyFree;

    if (pvMem) {
	    pbyFree = (LPBYTE)*(((LPDWORD)pvMem)-1);
	    MemFree(pbyFree);
    }
}

//******************************************************************************
// CMap32
//******************************************************************************

//******************************************************************************
CMap32::CMap32() {

    m_ppairList = NULL;
}

//******************************************************************************
CMap32::~CMap32() {

    PPAIR32 ppair;

    for (ppair = m_ppairList; m_ppairList; ppair = m_ppairList) {
        m_ppairList = m_ppairList->ppairNext;
        MemFree(ppair);
    }
}

//******************************************************************************
BOOL CMap32::Add(DWORD dwKey, DWORD dwData) {

    PPAIR32 ppair;
    ppair = (PPAIR32)MemAlloc(sizeof(PAIR32));
    if (!ppair) {
        return FALSE;
    }
    Remove(dwKey);
    ppair->dwKey = dwKey;
    ppair->dwData = dwData;
    ppair->ppairNext = m_ppairList;
    m_ppairList = ppair;
    return TRUE;
}

//******************************************************************************
BOOL CMap32::Remove(DWORD dwKey) {

    PPAIR32 ppair, ppairDel;

    if (m_ppairList) {

        if (m_ppairList->dwKey == dwKey) {
            ppair = m_ppairList->ppairNext;
            MemFree(m_ppairList);
            m_ppairList = ppair;
            return TRUE;
        }

        else {

            for (ppair = m_ppairList; 
                 ppair->ppairNext && ppair->ppairNext->dwKey != dwKey; 
                 ppair = ppair->ppairNext
            );

            if (ppair->ppairNext) {
                ppairDel = ppair->ppairNext;
                ppair->ppairNext = ppairDel->ppairNext;
                MemFree(ppairDel);
                return TRUE;
            }
        }
    }

    return FALSE;
}

//******************************************************************************
BOOL CMap32::Find(DWORD dwKey, LPDWORD pdwData) {

    PPAIR32 ppair;

    for (ppair = m_ppairList; 
         ppair && ppair->dwKey != dwKey;
         ppair = ppair->ppairNext
    );

    if (ppair) {
        if (pdwData) {
            *pdwData = ppair->dwData;
        }
        return TRUE;
    }

    return FALSE;
};

//******************************************************************************
BOOL CMap32::Find(LPDWORD pdwKey, DWORD dwData) {

    PPAIR32 ppair;

    for (ppair = m_ppairList; 
         ppair && ppair->dwData != dwData;
         ppair = ppair->ppairNext
    );

    if (ppair) {
        if (pdwKey) {
            *pdwKey = ppair->dwKey;
        }
        return TRUE;
    }

    return FALSE;
};

//******************************************************************************
//
// Function:
//
//     FormatToBitDepth
//
// Description:
//
//     Convert the given format to the number of bits needed to represent it.
//
// Arguments:
//
//     D3DFORMAT d3dfmt         - Resource format
//
// Return Value:
//
//     The number of bits required to represent the given format in memory.
//
//******************************************************************************
DWORD FormatToBitDepth(D3DFORMAT d3dfmt) {

    switch (d3dfmt) {
        case D3DFMT_DXT1:
            return 4;
        case D3DFMT_R3G3B2:
        case D3DFMT_A8:
        case D3DFMT_P8:
        case D3DFMT_L8:
        case D3DFMT_A4L4:
        case D3DFMT_DXT2:
        case D3DFMT_DXT4:
        case D3DFMT_DXT3:
        case D3DFMT_DXT5:
            return 8;
        case D3DFMT_R5G6B5:
        case D3DFMT_X1R5G5B5:
        case D3DFMT_A1R5G5B5:
        case D3DFMT_A4R4G4B4:
        case D3DFMT_A8R3G3B2:
        case D3DFMT_X4R4G4B4:
        case D3DFMT_A8P8:
        case D3DFMT_A8L8:
        case D3DFMT_V8U8:
        case D3DFMT_L6V5U5:
        case D3DFMT_D16_LOCKABLE:
        case D3DFMT_D16:
        case D3DFMT_D15S1:
            return 16;
        case D3DFMT_R8G8B8:
            return 24;
        case D3DFMT_A8R8G8B8:
        case D3DFMT_X8R8G8B8:
        case D3DFMT_X8L8V8U8:
        case D3DFMT_Q8W8V8U8:
        case D3DFMT_V16U16:
        case D3DFMT_W11V11U10:
        case D3DFMT_D32:
        case D3DFMT_D24S8:
        case D3DFMT_D24X8:
        case D3DFMT_D24X4S4:
            return 32;
        default:
            return 0;
    }
}

//******************************************************************************
BOOL IsCompressedFormat(D3DFORMAT d3dfmt) {

    switch (d3dfmt) {
        case D3DFMT_DXT1:
        case D3DFMT_DXT2:
        case D3DFMT_DXT4:
        case D3DFMT_DXT3:
        case D3DFMT_DXT5:
            return TRUE;
        default:
            return FALSE;
    }
}

//******************************************************************************
float DW2F(DWORD dw) {

    return *((float*)&dw);
}
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\test\directx\d3d\frame\locussrv\typetran.cpp ===
#include <windows.h>
#include <stdlib.h>
#include <tchar.h>
#include <winsock.h>
#include <d3dx8.h>
#include "transprt.h"
#include "util.h"
#include "typetran.h"
#include "server.h"

#define SETTYPE(x)      dwType = x;
#define MAPTYPE(x)      pTypeMapTable[dwType].Add(XBOX_##x, x);
#define MAPTYPES(x, y)  pTypeMapTable[dwType].Add(x, y);

//***********************************************************************************
void InitTypeTranslationMaps(CMap32* pTypeMapTable) {

    DWORD dwType;

    SETTYPE(D3DTI_D3DBACKBUFFER_TYPE)
    MAPTYPE(D3DBACKBUFFER_TYPE_MONO)
    MAPTYPE(D3DBACKBUFFER_TYPE_LEFT)
    MAPTYPE(D3DBACKBUFFER_TYPE_RIGHT)

    SETTYPE(D3DTI_D3DBLEND)
    MAPTYPE(D3DBLEND_ZERO)
    MAPTYPE(D3DBLEND_ONE)
    MAPTYPE(D3DBLEND_SRCCOLOR)
    MAPTYPE(D3DBLEND_INVSRCCOLOR)
    MAPTYPE(D3DBLEND_SRCALPHA)
    MAPTYPE(D3DBLEND_INVSRCALPHA)
    MAPTYPE(D3DBLEND_DESTALPHA)
    MAPTYPE(D3DBLEND_INVDESTALPHA)
    MAPTYPE(D3DBLEND_DESTCOLOR)
    MAPTYPE(D3DBLEND_INVDESTCOLOR)
    MAPTYPE(D3DBLEND_SRCALPHASAT)
//    MAPTYPE(D3DBLEND_BOTHSRCALPHA)
//    MAPTYPE(D3DBLEND_BOTHINVSRCALPHA)

    SETTYPE(D3DTI_D3DBLENDOP)
    MAPTYPE(D3DBLENDOP_ADD)
    MAPTYPE(D3DBLENDOP_SUBTRACT)
    MAPTYPE(D3DBLENDOP_REVSUBTRACT)
    MAPTYPE(D3DBLENDOP_MIN)
    MAPTYPE(D3DBLENDOP_MAX)

    SETTYPE(D3DTI_D3DCMPFUNC)
    MAPTYPE(D3DCMP_NEVER)
    MAPTYPE(D3DCMP_LESS)
    MAPTYPE(D3DCMP_EQUAL)
    MAPTYPE(D3DCMP_LESSEQUAL)
    MAPTYPE(D3DCMP_GREATER)
    MAPTYPE(D3DCMP_NOTEQUAL)
    MAPTYPE(D3DCMP_GREATEREQUAL)
    MAPTYPE(D3DCMP_ALWAYS)

    SETTYPE(D3DTI_D3DCUBEMAP_FACES)
    MAPTYPE(D3DCUBEMAP_FACE_POSITIVE_X)
    MAPTYPE(D3DCUBEMAP_FACE_NEGATIVE_X)
    MAPTYPE(D3DCUBEMAP_FACE_POSITIVE_Y)
    MAPTYPE(D3DCUBEMAP_FACE_NEGATIVE_Y)
    MAPTYPE(D3DCUBEMAP_FACE_POSITIVE_Z)
    MAPTYPE(D3DCUBEMAP_FACE_NEGATIVE_Z)

    SETTYPE(D3DTI_D3DCULL)
    MAPTYPE(D3DCULL_NONE)
    MAPTYPE(D3DCULL_CW)
    MAPTYPE(D3DCULL_CCW)

    SETTYPE(D3DTI_D3DDEBUGMONITORTOKENS)
    MAPTYPE(D3DDMT_ENABLE)
    MAPTYPE(D3DDMT_DISABLE)

    SETTYPE(D3DTI_D3DDEVTYPE)
    MAPTYPE(D3DDEVTYPE_HAL)
    MAPTYPE(D3DDEVTYPE_REF)
    MAPTYPE(D3DDEVTYPE_SW)

    SETTYPE(D3DTI_D3DFILLMODE)
    MAPTYPE(D3DFILL_POINT)
    MAPTYPE(D3DFILL_WIREFRAME)
    MAPTYPE(D3DFILL_SOLID)

    SETTYPE(D3DTI_D3DFOGMODE)
    MAPTYPE(D3DFOG_NONE)
    MAPTYPE(D3DFOG_EXP)
    MAPTYPE(D3DFOG_EXP2)
    MAPTYPE(D3DFOG_LINEAR)

    SETTYPE(D3DTI_D3DFORMAT)
    MAPTYPE(D3DFMT_UNKNOWN)
//    MAPTYPE(D3DFMT_R8G8B8)
    MAPTYPE(D3DFMT_A8R8G8B8)
    MAPTYPE(D3DFMT_X8R8G8B8)
    MAPTYPE(D3DFMT_R5G6B5)
    MAPTYPE(D3DFMT_X1R5G5B5)
    MAPTYPE(D3DFMT_A1R5G5B5)
    MAPTYPE(D3DFMT_A4R4G4B4)
//    MAPTYPE(D3DFMT_R3G3B2)
    MAPTYPE(D3DFMT_A8)
//    MAPTYPE(D3DFMT_A8R3G3B2)
//    MAPTYPE(D3DFMT_X4R4G4B4)
//    MAPTYPE(D3DFMT_A8P8)
    MAPTYPE(D3DFMT_P8)
    MAPTYPE(D3DFMT_L8)
    MAPTYPE(D3DFMT_A8L8)
//    MAPTYPE(D3DFMT_A4L4)
//    MAPTYPE(D3DFMT_V8U8)        // Equivalent to XBOX_D3DFMT_G8B8 under Xbox
//    MAPTYPE(D3DFMT_L6V5U5)
////    MAPTYPE(D3DFMT_X8L8V8U8)  // Equivalent to XBOX_D3DFMT_X8R8G8B8 under Xbox
////    MAPTYPE(D3DFMT_Q8W8V8U8)  // Equivalent to XBOX_D3DFMT_A8B8G8R8 under Xbox
//    MAPTYPE(D3DFMT_V16U16)
////    MAPTYPE(D3DFMT_W11V11U10)
    MAPTYPE(D3DFMT_X8L8V8U8)
    MAPTYPE(D3DFMT_L6V5U5)
    MAPTYPE(D3DFMT_V8U8)
    MAPTYPE(D3DFMT_Q8W8V8U8)
    MAPTYPE(D3DFMT_V16U16)
    MAPTYPES(XBOX_D3DFMT_LIN_X8L8V8U8, D3DFMT_X8L8V8U8)  // Equivalent to XBOX_D3DFMT_X8R8G8B8 under Xbox
    MAPTYPES(XBOX_D3DFMT_LIN_L6V5U5, D3DFMT_L6V5U5)
    MAPTYPES(XBOX_D3DFMT_LIN_V8U8, D3DFMT_V8U8)        // Equivalent to XBOX_D3DFMT_G8B8 under Xbox
    MAPTYPES(XBOX_D3DFMT_LIN_Q8W8V8U8, D3DFMT_Q8W8V8U8)  // Equivalent to XBOX_D3DFMT_A8B8G8R8 under Xbox
    MAPTYPES(XBOX_D3DFMT_LIN_V16U16, D3DFMT_V16U16)
    MAPTYPE(D3DFMT_UYVY)
    MAPTYPE(D3DFMT_YUY2)
    MAPTYPE(D3DFMT_DXT1)
    MAPTYPE(D3DFMT_DXT2)
//    MAPTYPE(D3DFMT_DXT3)      // Equivalent to XBOX_D3DFMT_DXT2 under Xbox
    MAPTYPE(D3DFMT_DXT4)
//    MAPTYPE(D3DFMT_DXT5)      // Equivalent to XBOX_D3DFMT_DXT4 under Xbox
//    MAPTYPE(D3DFMT_D16_LOCKABLE)
    MAPTYPE(D3DFMT_D16)
//    MAPTYPE(D3DFMT_D32)
//    MAPTYPE(D3DFMT_D15S1)
    MAPTYPE(D3DFMT_D24S8)
//    MAPTYPES(XBOX_D3DFMT_D16, D3DFMT_D16_LOCKABLE)  // XBOX_D3DFMT_D16 and XBOX_D3DFMT_D16_LOCKABLE equivalent under Xbox
//    MAPTYPE(D3DFMT_D24X8)
//    MAPTYPE(D3DFMT_D24X4S4)
    MAPTYPE(D3DFMT_VERTEXDATA)
    MAPTYPE(D3DFMT_INDEX16)
    MAPTYPE(D3DFMT_INDEX32)
    MAPTYPES(XBOX_D3DFMT_LIN_A1R5G5B5, D3DFMT_A1R5G5B5)
    MAPTYPES(XBOX_D3DFMT_LIN_A4R4G4B4, D3DFMT_A4R4G4B4)
    MAPTYPES(XBOX_D3DFMT_LIN_A8, D3DFMT_A8)
    MAPTYPES(XBOX_D3DFMT_LIN_A8R8G8B8, D3DFMT_A8R8G8B8)
    MAPTYPES(XBOX_D3DFMT_LIN_R5G6B5, D3DFMT_R5G6B5)
    MAPTYPES(XBOX_D3DFMT_LIN_X1R5G5B5, D3DFMT_X1R5G5B5)
    MAPTYPES(XBOX_D3DFMT_LIN_X8R8G8B8, D3DFMT_X8R8G8B8)
    MAPTYPES(XBOX_D3DFMT_LIN_A8L8, D3DFMT_A8L8)
    MAPTYPES(XBOX_D3DFMT_LIN_L8, D3DFMT_L8)
    MAPTYPES(XBOX_D3DFMT_LIN_D24S8, D3DFMT_D24S8)
    MAPTYPES(XBOX_D3DFMT_LIN_F24S8, D3DFMT_D24S8)
    MAPTYPES(XBOX_D3DFMT_LIN_D16, D3DFMT_D16)
    MAPTYPES(XBOX_D3DFMT_LIN_F16, D3DFMT_D16)

    SETTYPE(D3DTI_D3DBASISTYPE)
    MAPTYPE(D3DBASIS_BEZIER)
    MAPTYPE(D3DBASIS_BSPLINE)
    MAPTYPE(D3DBASIS_INTERPOLATE)

    SETTYPE(D3DTI_D3DLIGHTTYPE)
    MAPTYPE(D3DLIGHT_POINT)
    MAPTYPE(D3DLIGHT_SPOT)
    MAPTYPE(D3DLIGHT_DIRECTIONAL)

    SETTYPE(D3DTI_D3DMATERIALCOLORSOURCE)
    MAPTYPE(D3DMCS_MATERIAL)
    MAPTYPE(D3DMCS_COLOR1)
    MAPTYPE(D3DMCS_COLOR2)

    SETTYPE(D3DTI_D3DMULTISAMPLE_TYPE)
    MAPTYPE(D3DMULTISAMPLE_NONE)
    MAPTYPE(D3DMULTISAMPLE_2_SAMPLES)
    MAPTYPE(D3DMULTISAMPLE_3_SAMPLES)
    MAPTYPE(D3DMULTISAMPLE_4_SAMPLES)
    MAPTYPE(D3DMULTISAMPLE_5_SAMPLES)
    MAPTYPE(D3DMULTISAMPLE_6_SAMPLES)
    MAPTYPE(D3DMULTISAMPLE_7_SAMPLES)
    MAPTYPE(D3DMULTISAMPLE_8_SAMPLES)
    MAPTYPE(D3DMULTISAMPLE_9_SAMPLES)
    MAPTYPE(D3DMULTISAMPLE_10_SAMPLES)
    MAPTYPE(D3DMULTISAMPLE_11_SAMPLES)
    MAPTYPE(D3DMULTISAMPLE_12_SAMPLES)
    MAPTYPE(D3DMULTISAMPLE_13_SAMPLES)
    MAPTYPE(D3DMULTISAMPLE_14_SAMPLES)
    MAPTYPE(D3DMULTISAMPLE_15_SAMPLES)
    MAPTYPE(D3DMULTISAMPLE_16_SAMPLES)

    SETTYPE(D3DTI_D3DORDERTYPE)
    MAPTYPE(D3DORDER_LINEAR)
    MAPTYPE(D3DORDER_CUBIC)
    MAPTYPE(D3DORDER_QUINTIC)

    SETTYPE(D3DTI_D3DPATCHEDGESTYLE)
    MAPTYPE(D3DPATCHEDGE_DISCRETE)
    MAPTYPE(D3DPATCHEDGE_CONTINUOUS)

    SETTYPE(D3DTI_D3DPRIMITIVETYPE)
    MAPTYPE(D3DPT_POINTLIST)
    MAPTYPE(D3DPT_LINELIST)
    MAPTYPE(D3DPT_LINESTRIP)
    MAPTYPE(D3DPT_TRIANGLELIST)
    MAPTYPE(D3DPT_TRIANGLESTRIP)
    MAPTYPE(D3DPT_TRIANGLEFAN)

    SETTYPE(D3DTI_D3DRENDERSTATETYPE)
    MAPTYPE(D3DRS_ZENABLE)
    MAPTYPE(D3DRS_FILLMODE)
    MAPTYPE(D3DRS_SHADEMODE)
//    MAPTYPE(D3DRS_LINEPATTERN)
    MAPTYPE(D3DRS_ZWRITEENABLE)
    MAPTYPE(D3DRS_ALPHATESTENABLE)
//    MAPTYPE(D3DRS_LASTPIXEL)
    MAPTYPE(D3DRS_SRCBLEND)
    MAPTYPE(D3DRS_DESTBLEND)
    MAPTYPE(D3DRS_CULLMODE)
    MAPTYPE(D3DRS_ZFUNC)
    MAPTYPE(D3DRS_ALPHAREF)
    MAPTYPE(D3DRS_ALPHAFUNC)
    MAPTYPE(D3DRS_DITHERENABLE)
    MAPTYPE(D3DRS_ALPHABLENDENABLE)
    MAPTYPE(D3DRS_FOGENABLE)
    MAPTYPE(D3DRS_SPECULARENABLE)
//    MAPTYPE(D3DRS_ZVISIBLE)
    MAPTYPE(D3DRS_FOGCOLOR)
    MAPTYPE(D3DRS_FOGTABLEMODE)
    MAPTYPE(D3DRS_FOGSTART)
    MAPTYPE(D3DRS_FOGEND)
    MAPTYPE(D3DRS_FOGDENSITY)
    MAPTYPE(D3DRS_EDGEANTIALIAS)
    MAPTYPE(D3DRS_ZBIAS)
    MAPTYPE(D3DRS_RANGEFOGENABLE)
    MAPTYPE(D3DRS_STENCILENABLE)
    MAPTYPE(D3DRS_STENCILFAIL)
    MAPTYPE(D3DRS_STENCILZFAIL)
    MAPTYPE(D3DRS_STENCILPASS)
    MAPTYPE(D3DRS_STENCILFUNC)
    MAPTYPE(D3DRS_STENCILREF)
    MAPTYPE(D3DRS_STENCILMASK)
    MAPTYPE(D3DRS_STENCILWRITEMASK)
    MAPTYPE(D3DRS_TEXTUREFACTOR)
    MAPTYPE(D3DRS_WRAP0)
    MAPTYPE(D3DRS_WRAP1)
    MAPTYPE(D3DRS_WRAP2)
    MAPTYPE(D3DRS_WRAP3)
//    MAPTYPE(D3DRS_WRAP4)
//    MAPTYPE(D3DRS_WRAP5)
//    MAPTYPE(D3DRS_WRAP6)
//    MAPTYPE(D3DRS_WRAP7)
//    MAPTYPE(D3DRS_CLIPPING)
    MAPTYPE(D3DRS_LIGHTING)
    MAPTYPE(D3DRS_AMBIENT)
//    MAPTYPE(D3DRS_FOGVERTEXMODE)
    MAPTYPE(D3DRS_COLORVERTEX)
    MAPTYPE(D3DRS_LOCALVIEWER)
    MAPTYPE(D3DRS_NORMALIZENORMALS)
    MAPTYPE(D3DRS_DIFFUSEMATERIALSOURCE)
    MAPTYPE(D3DRS_SPECULARMATERIALSOURCE)
    MAPTYPE(D3DRS_AMBIENTMATERIALSOURCE)
    MAPTYPE(D3DRS_EMISSIVEMATERIALSOURCE)
    MAPTYPE(D3DRS_VERTEXBLEND)
//    MAPTYPE(D3DRS_CLIPPLANEENABLE)
//    MAPTYPE(D3DRS_SOFTWAREVERTEXPROCESSING)
    MAPTYPE(D3DRS_POINTSIZE)
    MAPTYPE(D3DRS_POINTSIZE_MIN)
    MAPTYPE(D3DRS_POINTSPRITEENABLE)
    MAPTYPE(D3DRS_POINTSCALEENABLE)
    MAPTYPE(D3DRS_POINTSCALE_A)
    MAPTYPE(D3DRS_POINTSCALE_B)
    MAPTYPE(D3DRS_POINTSCALE_C)
    MAPTYPE(D3DRS_MULTISAMPLEANTIALIAS)
    MAPTYPE(D3DRS_MULTISAMPLEMASK)
    MAPTYPE(D3DRS_PATCHEDGESTYLE)
    MAPTYPE(D3DRS_PATCHSEGMENTS)
//    MAPTYPE(D3DRS_DEBUGMONITORTOKEN)
    MAPTYPE(D3DRS_POINTSIZE_MAX)
//    MAPTYPE(D3DRS_INDEXEDVERTEXBLENDENABLE)
    MAPTYPE(D3DRS_COLORWRITEENABLE)
//    MAPTYPE(D3DRS_TWEENFACTOR)
    MAPTYPE(D3DRS_BLENDOP)

    SETTYPE(D3DTI_D3DRESOURCETYPE)
    MAPTYPE(D3DRTYPE_SURFACE)
    MAPTYPE(D3DRTYPE_VOLUME)
    MAPTYPE(D3DRTYPE_TEXTURE)
    MAPTYPE(D3DRTYPE_VOLUMETEXTURE)
    MAPTYPE(D3DRTYPE_CUBETEXTURE)
    MAPTYPE(D3DRTYPE_VERTEXBUFFER)
    MAPTYPE(D3DRTYPE_INDEXBUFFER)

    SETTYPE(D3DTI_D3DSHADEMODE)
    MAPTYPE(D3DSHADE_FLAT)
    MAPTYPE(D3DSHADE_GOURAUD)
//    MAPTYPE(D3DSHADE_PHONG)   // Equivalent to D3DSHADE_GOURAUD under Xbox

    SETTYPE(D3DTI_D3DSTATEBLOCKTYPE)
    MAPTYPE(D3DSBT_ALL)
    MAPTYPE(D3DSBT_PIXELSTATE)
    MAPTYPE(D3DSBT_VERTEXSTATE)

    SETTYPE(D3DTI_D3DSTENCILOP)
    MAPTYPE(D3DSTENCILOP_KEEP)
    MAPTYPE(D3DSTENCILOP_ZERO)
    MAPTYPE(D3DSTENCILOP_REPLACE)
    MAPTYPE(D3DSTENCILOP_INCRSAT)
    MAPTYPE(D3DSTENCILOP_DECRSAT)
    MAPTYPE(D3DSTENCILOP_INVERT)
    MAPTYPE(D3DSTENCILOP_INCR)
    MAPTYPE(D3DSTENCILOP_DECR)

    SETTYPE(D3DTI_D3DSWAPEFFECT)
    MAPTYPE(D3DSWAPEFFECT_DISCARD)
    MAPTYPE(D3DSWAPEFFECT_FLIP)
    MAPTYPE(D3DSWAPEFFECT_COPY)
    MAPTYPE(D3DSWAPEFFECT_COPY_VSYNC)

    SETTYPE(D3DTI_D3DTEXTUREADDRESS)
    MAPTYPE(D3DTADDRESS_WRAP)
    MAPTYPE(D3DTADDRESS_MIRROR)
    MAPTYPE(D3DTADDRESS_CLAMP)
    MAPTYPE(D3DTADDRESS_BORDER)
//    MAPTYPE(D3DTADDRESS_MIRRORONCE)

    SETTYPE(D3DTI_D3DTEXTUREFILTERTYPE)
    MAPTYPE(D3DTEXF_NONE)
    MAPTYPE(D3DTEXF_POINT)
    MAPTYPE(D3DTEXF_LINEAR)
    MAPTYPE(D3DTEXF_ANISOTROPIC)
    MAPTYPE(D3DTEXF_FLATCUBIC)
    MAPTYPE(D3DTEXF_GAUSSIANCUBIC)

    SETTYPE(D3DTI_D3DTEXTUREOP)
    MAPTYPE(D3DTOP_DISABLE)
    MAPTYPE(D3DTOP_SELECTARG1)
    MAPTYPE(D3DTOP_SELECTARG2)
    MAPTYPE(D3DTOP_MODULATE)
    MAPTYPE(D3DTOP_MODULATE2X)
    MAPTYPE(D3DTOP_MODULATE4X)
    MAPTYPE(D3DTOP_ADD)
    MAPTYPE(D3DTOP_ADDSIGNED)
    MAPTYPE(D3DTOP_ADDSIGNED2X)
    MAPTYPE(D3DTOP_SUBTRACT)
    MAPTYPE(D3DTOP_ADDSMOOTH)
    MAPTYPE(D3DTOP_BLENDDIFFUSEALPHA)
    MAPTYPE(D3DTOP_BLENDTEXTUREALPHA)
    MAPTYPE(D3DTOP_BLENDFACTORALPHA)
    MAPTYPE(D3DTOP_BLENDTEXTUREALPHAPM)
    MAPTYPE(D3DTOP_BLENDCURRENTALPHA)
    MAPTYPE(D3DTOP_PREMODULATE)
    MAPTYPE(D3DTOP_MODULATEALPHA_ADDCOLOR)
    MAPTYPE(D3DTOP_MODULATECOLOR_ADDALPHA)
    MAPTYPE(D3DTOP_MODULATEINVALPHA_ADDCOLOR)
    MAPTYPE(D3DTOP_MODULATEINVCOLOR_ADDALPHA)
    MAPTYPE(D3DTOP_BUMPENVMAP)
    MAPTYPE(D3DTOP_BUMPENVMAPLUMINANCE)
    MAPTYPE(D3DTOP_DOTPRODUCT3)
    MAPTYPE(D3DTOP_MULTIPLYADD)
    MAPTYPE(D3DTOP_LERP)

    SETTYPE(D3DTI_D3DTEXTURESTAGESTATETYPE)
    MAPTYPE(D3DTSS_COLOROP)
    MAPTYPE(D3DTSS_COLORARG0)
    MAPTYPE(D3DTSS_COLORARG1)
    MAPTYPE(D3DTSS_COLORARG2)
    MAPTYPE(D3DTSS_ALPHAOP)
    MAPTYPE(D3DTSS_ALPHAARG0)
    MAPTYPE(D3DTSS_ALPHAARG1)
    MAPTYPE(D3DTSS_ALPHAARG2)
    MAPTYPE(D3DTSS_BUMPENVMAT00)
    MAPTYPE(D3DTSS_BUMPENVMAT01)
    MAPTYPE(D3DTSS_BUMPENVMAT10)
    MAPTYPE(D3DTSS_BUMPENVMAT11)
    MAPTYPE(D3DTSS_TEXCOORDINDEX)
    MAPTYPE(D3DTSS_ADDRESSU)
    MAPTYPE(D3DTSS_ADDRESSV)
    MAPTYPE(D3DTSS_BORDERCOLOR)
    MAPTYPE(D3DTSS_MAGFILTER)
    MAPTYPE(D3DTSS_MINFILTER)
    MAPTYPE(D3DTSS_MIPFILTER)
    MAPTYPE(D3DTSS_MIPMAPLODBIAS)
    MAPTYPE(D3DTSS_MAXMIPLEVEL)
    MAPTYPE(D3DTSS_MAXANISOTROPY)
    MAPTYPE(D3DTSS_BUMPENVLSCALE)
    MAPTYPE(D3DTSS_BUMPENVLOFFSET)
    MAPTYPE(D3DTSS_TEXTURETRANSFORMFLAGS)
    MAPTYPE(D3DTSS_ADDRESSW)
    MAPTYPE(D3DTSS_COLORARG0)
    MAPTYPE(D3DTSS_ALPHAARG0)
    MAPTYPE(D3DTSS_RESULTARG)

    SETTYPE(D3DTI_D3DTEXTURETRANSFORMFLAGS)
    MAPTYPE(D3DTTFF_DISABLE)
    MAPTYPE(D3DTTFF_COUNT1)
    MAPTYPE(D3DTTFF_COUNT2)
    MAPTYPE(D3DTTFF_COUNT3)
    MAPTYPE(D3DTTFF_COUNT4)
    MAPTYPE(D3DTTFF_PROJECTED)

    SETTYPE(D3DTI_D3DTRANSFORMSTATETYPE)
    MAPTYPE(D3DTS_VIEW)
    MAPTYPE(D3DTS_PROJECTION)
    MAPTYPE(D3DTS_TEXTURE0)
    MAPTYPE(D3DTS_TEXTURE1)
    MAPTYPE(D3DTS_TEXTURE2)
    MAPTYPE(D3DTS_TEXTURE3)
    MAPTYPES(XBOX_D3DTS_WORLD, D3DTS_WORLDMATRIX(0))
    MAPTYPES(XBOX_D3DTS_WORLD1, D3DTS_WORLDMATRIX(1))
    MAPTYPES(XBOX_D3DTS_WORLD2, D3DTS_WORLDMATRIX(2))
    MAPTYPES(XBOX_D3DTS_WORLD3, D3DTS_WORLDMATRIX(3))

    SETTYPE(D3DTI_D3DVERTEXBLENDFLAGS)
    MAPTYPE(D3DVBF_DISABLE)
    MAPTYPE(D3DVBF_1WEIGHTS)
    MAPTYPE(D3DVBF_2WEIGHTS)
    MAPTYPE(D3DVBF_3WEIGHTS)
//    MAPTYPE(D3DVBF_TWEENING)
//    MAPTYPE(D3DVBF_0WEIGHTS)

    SETTYPE(D3DTI_D3DZBUFFERTYPE)
    MAPTYPE(D3DZB_FALSE)
    MAPTYPE(D3DZB_TRUE)
    MAPTYPE(D3DZB_USEW)

    SETTYPE(D3DTI_D3DPOOL)
    MAPTYPES(0, D3DPOOL_MANAGED)
    MAPTYPES(1, D3DPOOL_MANAGED)
    MAPTYPES(2, D3DPOOL_MANAGED)


}
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\test\directx\d3d\frame\locussrv\volume.cpp ===
#include <windows.h>
#include <stdlib.h>
#include <tchar.h>
#include <winsock.h>
#include <d3dx8.h>
#include "transprt.h"
#include "util.h"
#include "typetran.h"
#include "server.h"

//***********************************************************************************
extern "C" void __cdecl M_VOL8_AddRef(LPDIRECT3DVOLUME8 pd3dv, ULONG* pulRet) {

    *pulRet = pd3dv->AddRef();
}

//***********************************************************************************
extern "C" void __cdecl M_VOL8_Release(LPDIRECT3DVOLUME8 pd3dv, ULONG* pulRet) {

    *pulRet = g_pServer->ReleaseObject(pd3dv);
}

//***********************************************************************************
extern "C" void __cdecl M_VOL8_GetContainer(LPDIRECT3DVOLUME8 pd3dv, HRESULT* phr, LPGUID pguid, void** ppContainer) {

    *phr = pd3dv->GetContainer(*pguid, ppContainer);
}

//***********************************************************************************
extern "C" void __cdecl M_VOL8_GetDevice(LPDIRECT3DVOLUME8 pd3dv, HRESULT* phr, LPDIRECT3DDEVICE8* ppDevice) {

    *phr = pd3dv->GetDevice(ppDevice);
}

//***********************************************************************************
extern "C" void __cdecl M_VOL8_GetDesc(LPDIRECT3DVOLUME8 pd3dv, HRESULT* phr, D3DVOLUME_DESC* pd3dvd) {

    *phr = pd3dv->GetDesc(pd3dvd);
    g_pServer->RemapStruct(FALSE, pd3dvd);
}

//***********************************************************************************
extern "C" void __cdecl M_VOL8_LockBox(LPDIRECT3DVOLUME8 pd3dv, HRESULT* phr, D3DLOCKED_BOX* pd3dlb, D3DBOX* pbox, DWORD dwFlags) {

    if (pbox->Left == -1) {
        pbox = NULL;
    }
    dwFlags &= ~XBOX_D3DLOCK_FLAGS;
    *phr = pd3dv->LockBox(pd3dlb, pbox, dwFlags);
}

//***********************************************************************************
extern "C" void __cdecl M_VOL8_UnlockBox(LPDIRECT3DVOLUME8 pd3dv, HRESULT* phr, D3DLOCKED_BOX* pd3dlb, D3DBOX* pbox, DWORD dwFlags, LPBYTE pBits) {

    if (!(dwFlags & D3DLOCK_READONLY)) {

        D3DVOLUME_DESC  d3dvd;
        DWORD           dwWidth, dwHeight, dwDepth, dwBitDepth;
        UINT            i, j;
        pd3dv->GetDesc(&d3dvd);
        if (pbox->Left == -1) {
            dwWidth = d3dvd.Width;
            dwHeight = d3dvd.Height;
            dwDepth = d3dvd.Depth;
        }
        else {
            dwWidth = pbox->Right - pbox->Left;
            dwHeight = pbox->Bottom - pbox->Top;
            dwDepth = pbox->Back - pbox->Front;
        }
        dwBitDepth = FormatToBitDepth(d3dvd.Format);
        if (IsCompressedFormat(d3dvd.Format)) {
            memcpy(pd3dlb->pBits, pBits, dwWidth * dwHeight * dwDepth * dwBitDepth / 8);
        }
        else {
            for (j = 0; j < dwDepth; j++) {
                for (i = 0; i < dwHeight; i++) {
                    memcpy((LPBYTE)pd3dlb->pBits + j * pd3dlb->SlicePitch + i * pd3dlb->RowPitch, pBits + j * dwHeight * dwWidth * dwBitDepth / 8 + i * dwWidth * dwBitDepth / 8, dwWidth * dwBitDepth / 8);
                }
            }
        }
    }

    *phr = pd3dv->UnlockBox();
}

//***********************************************************************************
extern "C" void __cdecl M_VOL8_GetPrivateData(LPDIRECT3DVOLUME8 pd3dv, HRESULT* phr, GUID* prefguid, void* pvData, DWORD* pdwSizeOfData) {

    *phr = pd3dv->GetPrivateData(*prefguid, pvData, pdwSizeOfData);
}

//***********************************************************************************
extern "C" void __cdecl M_VOL8_SetPrivateData(LPDIRECT3DVOLUME8 pd3dv, HRESULT* phr, GUID* prefguid, void* pvData, DWORD dwSizeOfData, DWORD dwFlags) {

    *phr = pd3dv->SetPrivateData(*prefguid, pvData, dwSizeOfData, dwFlags);
}

//***********************************************************************************
extern "C" void __cdecl M_VOL8_FreePrivateData(LPDIRECT3DVOLUME8 pd3dv, HRESULT* phr, GUID* prefguid) {

    *phr = pd3dv->FreePrivateData(*prefguid);
}
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\test\directx\d3d\frame\locussrv\util.h ===
/*******************************************************************************

Copyright (c) 1998 Microsoft Corporation.  All rights reserved.

File Name:

    util.h

Description:

    Utility functions.

*******************************************************************************/

#ifndef __UTIL_H__
#define __UTIL_H__

//******************************************************************************
// Debugging function prototype
//******************************************************************************

#ifdef _DEBUG
void                DebugString(LPCTSTR szFormat, ...);
#else
inline void         DebugString(LPCTSTR szFormat, ...) {}
#endif

//******************************************************************************
// Memory allocation prototypes
//******************************************************************************

BOOL                CreateHeap();
void                ReleaseHeap();
LPVOID              MemAlloc(UINT uNumBytes);
void                MemFree(LPVOID pvMem);
LPVOID              MemAlloc32(UINT uNumBytes);
void                MemFree32(LPVOID pvMem);

//******************************************************************************
// CMap32
//******************************************************************************

//******************************************************************************
typedef struct _PAIR32 {
    DWORD           dwKey;
    DWORD           dwData;
    struct _PAIR32* ppairNext;
} PAIR32, *PPAIR32;

//******************************************************************************
class CMap32 {

protected:

                    PPAIR32 m_ppairList;

public:

                    CMap32();
                    ~CMap32();
    BOOL            Add(DWORD dwKey, DWORD dwData);
    BOOL            Remove(DWORD dwKey);
    BOOL            Find(DWORD dwKey, LPDWORD pdwData);
    BOOL            Find(LPDWORD pdwKey, DWORD dwData);
};

//******************************************************************************
// Miscellaneous prototypes
//******************************************************************************

DWORD               FormatToBitDepth(D3DFORMAT d3dfmt);
BOOL                IsCompressedFormat(D3DFORMAT d3dfmt);
float               DW2F(DWORD dw);

#endif // __UTIL_H__
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\test\directx\d3d\frame\ttmplate\sources.inc ===
!include ..\..\..\sources.inc

TARGETNAME=l_test
TARGETTYPE=LIBRARY
TARGETPATH=$(TEST_LIB_DEST)

SOURCES=\
    test.cpp
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\test\directx\d3d\frame\ttmplate\modulex.h ===
#define PREPEND_MODULE(Suffix) module##Suffix
#define MODULE_STRING "module"
#pragma comment(linker, "/include:_module_ExhibitScene@8")
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\test\directx\d3d\frame\ttmplate\dll\include.cpp ===
#include "dll\main.cpp"
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\test\directx\d3d\frame\oroborus\modulex.h ===
#define PREPEND_MODULE(Suffix) oroborus##Suffix
#define MODULE_STRING "oroborus"
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\test\directx\d3d\frame\ttmplate\exe\include.cpp ===
#include "exe\main.cpp"
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\test\directx\d3d\frame\oroborus\exe\main.cpp ===
/*******************************************************************************

Copyright (c) 2000 Microsoft Corporation.  All rights reserved.

File Name:

    main.cpp

Author:

    Matt Bronder

Description:

    The translated inscription at the center of an Ouroboros from the 
    Chrysopoeia of Cleopatra during the Alexandrian Period in Egypt reads
    "The All is One".  This test library allows Direct3D tests to all
    draw from the same device during the running of a suite rather than
    releasing an recreating the device for each individual test.  This 
    allows for greater stress of the device itself.

*******************************************************************************/

#include "d3dlocus.h"
#ifdef UNDER_XBOX
#include "xtestlib.h"
#include "profilep.h"
#endif // UNDER_XBOX

//******************************************************************************
// Data types
//******************************************************************************

typedef VOID (WINAPI * PTEST_STARTUP_PROC)( HANDLE );
typedef VOID (WINAPI * PTEST_CLEANUP_PROC)( VOID );
typedef BOOL (WINAPI * PTEST_DLLMAIN_PROC)( HINSTANCE, DWORD, PVOID );

//******************************************************************************
// Function prototypes
//******************************************************************************

// Functions to obtain module entries in the export directory 
// (from loader.c in the harness)
extern "C" HANDLE   FindModuleHandle(LPCWSTR ModuleName);
extern "C" PROC     FindProcAddress(PWCHAR ModuleName, PWCHAR ProcName);

LPTSTR              LoadModuleList(LPTSTR szSection);
void                IsolateModuleName(LPTSTR szLibName);
void                IsolateLibName(LPTSTR szLibName);

//******************************************************************************
// WinMain
//******************************************************************************

#ifndef UNDER_XBOX
#define RETURN(x)   return x
#else
#define RETURN(x)   return
#endif // UNDER_XBOX

//******************************************************************************
//
// Function:
//
//     WinMain
//
// Description:
//
//     Entry point for the application.
//
// Arguments:
//
//     HINSTANCE hInstance      - Application instance handle
//
//     HINSTANCE hPrevInstance  - Previous instance of the application (always
//                                NULL for Win32 applications)
//
//     LPSTR szCmdLine          - Pointer to a string specifying the command
//                                line used in launching the application
//                                (excluding the program name)
//
//     int nCmdShow             - State specifying how the window is to be 
//                                displayed on creation
//
// Return Value:
//
//     0 on success, -1 on failure.
//
//******************************************************************************
#ifndef UNDER_XBOX
int APIENTRY WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPSTR szCmdLine, int nCmdShow) 
#else
void __cdecl main()
#endif // UNDER_XBOX
{
    DWORD                   dwTestMode;
    DWORD                   dwContext = TSTART_SEQUENTIAL;
    TCHAR                   szLibName[512];
    TCHAR                   szModuleName[512];
    LPTSTR                  szLibList = NULL;
    TCHAR*                  psz;
    UINT                    uNumChars;
    CDisplay*               pDisplay;
    D3DCREATIONDESC         d3dcd;
    HINSTANCE               hTestLib;
    PTEST_STARTUP_PROC      pfnStartTest;
    PTEST_CLEANUP_PROC      pfnEndTest;
    D3DPRESENT_PARAMETERS   d3dpp;
    D3DMULTISAMPLE_TYPE     mst;
    DWORD                   dwValue;
    BOOL                    bDisplayOK = TRUE;
    int                     ret;

    // Set the test startup information
    dwTestMode = GetProfileInt(TEXT("GeneralSettings"), TEXT("StressTestMode"), 0);
    if (dwTestMode == 1) {
        dwContext |= TSTART_STRESS;
    }

    dwTestMode = GetProfileInt(TEXT("GeneralSettings"), TEXT("ParallelTestMode"), 1);
    if (dwTestMode != 0) {
        dwContext |= TSTART_PARALLEL;
    }

    RegisterStartupContext(dwContext);

    // Seed the pseudo-random number generator
    srand(GetTickCount());

    // Create a heap for the test
    if (!CreateHeap()) {
        RETURN(0);
    }

    // Initialize creation parameters
    memset(&d3dcd, 0, sizeof(D3DCREATIONDESC));
    d3dcd.d3ddt = D3DDEVTYPE_HAL;
    d3dcd.bWindowed = TRUE;

//        d3dcd.d3ddm.Width = 640;
//        d3dcd.d3ddm.Height = 480;
//        d3dcd.d3ddm.Format = D3DFMT_UNKNOWN_C5;
//        SetRect(&d3dcd.rectWnd, 20, 20, 320, 320);
//        ##HACK
//        d3dcd.bDepthBuffer = TRUE;
    d3dcd.bDepthBuffer = FALSE;
//        #HACK END
//        d3dcd.fmtd = D3DFMT_UNKNOWN_D16;
    d3dcd.mst = D3DMULTISAMPLE_NONE;

    // Create the display
    pDisplay = new CDisplay();
    if (!pDisplay) {
        ReleaseHeap();
        RETURN(0);
    }

    // Disable DirectInput if we are running in parallel
    if (dwTestMode != 0) {
        pDisplay->EnableInput(FALSE);
    }

    // Initialize the display
    if (!pDisplay->Create(&d3dcd)) {
        DebugString(TEXT("CDisplay::Create failed"));
        pDisplay->Release();
        ReleaseHeap();
        RETURN(0);
    }

    // Read in the list of test libs
    szLibList = LoadModuleList(TEXT("oroborus"));
    if (!szLibList) {
        pDisplay->Release();
        ReleaseHeap();
        RETURN(0);
    }

    // Iterate through the lib list specified in the .ini file
    for (psz = szLibList; *psz && IsDisplayStable(); psz += _tcslen(psz) + 1) {

        _tcscpy(szLibName, psz);
        _tcscpy(szModuleName, psz);

        IsolateLibName(szLibName);
        IsolateModuleName(szModuleName);

        // Get the entry and exit points
        pfnStartTest = (PTEST_STARTUP_PROC)FindProcAddress(szModuleName, TEXT("StartTest"));
        pfnEndTest = (PTEST_CLEANUP_PROC)FindProcAddress(szModuleName, TEXT("EndTest"));
        if (!pfnStartTest || !pfnEndTest) {
            DebugString(TEXT("Unable to locate test module %s in the export directory"), szModuleName);
            __asm int 3;
            continue;
        }

        pDisplay->GetPresentParameters(&d3dpp);
        dwValue = GetProfileInt(szLibName, TEXT("DisplayModeWidth"), 0);
        if (dwValue) {
            d3dpp.BackBufferWidth = dwValue;
        }
        dwValue = GetProfileInt(szLibName, TEXT("DisplayModeHeight"), 0);
        if (dwValue) {
            d3dpp.BackBufferHeight = dwValue;
        }
        dwValue = GetProfileInt(szLibName, TEXT("DisplayModeFormat"), 0);
        if (dwValue) {
            d3dpp.BackBufferFormat = (D3DFORMAT)dwValue;
        }
        dwValue = GetProfileInt(szLibName, TEXT("DisplayModeRefresh"), 0xFFFFFFFF);
        if (dwValue != 0xFFFFFFFF) {
            d3dpp.FullScreen_RefreshRateInHz = dwValue;
        }
        dwValue = GetProfileInt(szLibName, TEXT("DisplayMultiSampleType"), 0xFFFFFFFF);
        if (dwValue != 0xFFFFFFFF) {
            d3dpp.MultiSampleType = (D3DMULTISAMPLE_TYPE)dwValue;
        }

        pDisplay->Reset(&d3dpp);

        // Run the test
        pfnStartTest(NULL);
        pfnEndTest();
    }

    MemFree(szLibList);

    // Clean up
    pDisplay->Release();

    // Release the heap
    ReleaseHeap();

    RETURN(0);
}

//******************************************************************************
LPTSTR LoadModuleList(LPTSTR szSection) {

    LPTSTR szList = NULL;
    UINT   uNumChars;
    UINT   uNumListChars = 0;

    do {
        uNumListChars += 2048;
        if (szList) {
            MemFree(szList);
        }
        szList = (LPTSTR)MemAlloc(uNumListChars * sizeof(TCHAR));
        if (!szList) {
            return NULL;
        }
        uNumChars = GetProfileSection(szSection, szList, uNumListChars);
    } while (uNumChars == uNumListChars - 2);

    return szList;
}

//******************************************************************************
void IsolateModuleName(LPTSTR szLibName) {

    TCHAR* pszC;

    // Remove comments and whitespace
    for (pszC = szLibName; *pszC && *pszC != TEXT(';'); pszC++);
    if (*pszC == TEXT(';')) *pszC = TEXT('\0');
    for (pszC--; pszC >= szLibName && *pszC == TEXT(' '); pszC--);
    pszC[1] = TEXT('\0');

    // Remove the .lib extension (if present)
    pszC -= 3;
    if (!_tcscmp(pszC, TEXT(".lib"))) {
        *pszC = TEXT('\0');
    }
}

//******************************************************************************
void IsolateLibName(LPTSTR szLibName) {

    TCHAR* pszC;

    // Remove comments and whitespace
    for (pszC = szLibName; *pszC && *pszC != TEXT(';'); pszC++);
    if (*pszC == TEXT(';')) *pszC = TEXT('\0');
    for (pszC--; pszC >= szLibName && *pszC == TEXT(' '); pszC--);
    pszC[1] = TEXT('\0');
}
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\test\directx\d3d\frame\oroborus\dll\main.cpp ===
/*******************************************************************************

Copyright (c) 2000 Microsoft Corporation.  All rights reserved.

File Name:

    main.cpp

Author:

    Matt Bronder

Description:

    The translated inscription at the center of an Ouroboros from the
    Chrysopoeia of Cleopatra during the Alexandrian Period in Egypt reads
    "The All is One".  This test library allows Direct3D tests to all
    draw from the same device during the running of a suite rather than
    releasing an recreating the device for each individual test.  This
    allows for greater stress of the device itself.

*******************************************************************************/

#define DXCONIO_NO_OVERRIDES

#include "d3dlocus.h"
#ifdef UNDER_XBOX
#include "xtestlib.h"
#include "profilep.h"
#endif // UNDER_XBOX

#ifdef DEBUG
extern "C" {
extern BOOL D3D__SingleStepPusher;
extern BOOL D3D__Parser;
}
#endif

//******************************************************************************
// Data types
//******************************************************************************

typedef VOID (WINAPI * PTEST_STARTUP_PROC)( HANDLE );
typedef VOID (WINAPI * PTEST_CLEANUP_PROC)( VOID );
typedef BOOL (WINAPI * PTEST_DLLMAIN_PROC)( HINSTANCE, DWORD, PVOID );

//******************************************************************************
// Globals
//******************************************************************************

namespace Oroborus {
BOOL g_bInitModules = TRUE;
}

//******************************************************************************
// Function prototypes
//******************************************************************************

// Functions to obtain module entries in the export directory
// (from loader.c in the harness)
extern "C" HANDLE   FindModuleHandle(LPCWSTR ModuleName);
extern "C" PROC     FindProcAddress(PWCHAR ModuleName, PWCHAR ProcName);

LPTSTR              LoadModuleList(LPTSTR szSection);
void                IsolateModuleName(LPTSTR szLibName);
void                IsolateLibName(LPTSTR szLibName);

//******************************************************************************
// DllMain
//******************************************************************************

//******************************************************************************
//
// Function:
//
//     DllMain
//
// Description:
//
//     Entry point for the library.
//
// Arguments:
//
//     HINSTANCE hInstance      - Library instance handle
//
//     DWORD dwReason           - Reason the function is being called
//
//     LPVOID pvReserved        - Reserved
//
// Return Value:
//
//     When DllMain is called with DLL_PROCESS_ATTACH, TRUE is returned if
//     initialization succeeded and FALSE is returned if it failed.  The
//     return value is ignored for all other reasons.
//
//******************************************************************************
BOOL WINAPI PREPEND_MODULE(_DllMain)(HINSTANCE hInstance, DWORD dwReason, LPVOID lpvReserved) {

    switch (dwReason) {

        case DLL_PROCESS_ATTACH:

            break;

        case DLL_PROCESS_DETACH:

            break;
    }

    return TRUE;
}

//******************************************************************************
void WINAPI PREPEND_MODULE(_StartTest)(HANDLE hLog) {

    HANDLE                  hMutex;
    DWORD                   dwTestMode;
    TCHAR                   szLibName[512];
    TCHAR                   szModuleName[512];
    LPTSTR                  szLibList = NULL;
    TCHAR*                  psz;
    CDisplay*               pDisplay;
    D3DCREATIONDESC         d3dcd;
    HINSTANCE               hTestLib;
    PTEST_STARTUP_PROC      pfnStartTest;
    PTEST_CLEANUP_PROC      pfnEndTest;
    D3DPRESENT_PARAMETERS   d3dpp;
    D3DMULTISAMPLE_TYPE     mst;
    DWORD                   dwValue;
    DWORD                   dwStress;
    int                     ret;

    // If we are running in stress, sleep for a short period of time
    // in order to randomize the ordering of the tests
    dwStress = GetProfileInt(TEXT("GeneralSettings"), TEXT("StressTestMode"), 0);
    if (dwStress == 1) {
        dwStress = TSTART_STRESS;
        Sleep(rand() % 500);
    }

    // If any other Direct3D test is running, block until it is finished
#ifndef UNDER_XBOX
    hMutex = CreateMutex(NULL, FALSE, TEXT("XBox Direct3D Test"));
#else
    hMutex = CreateMutex(NULL, FALSE, "XBox Direct3D Test");
#endif // !UNDER_XBOX
    if (!hMutex) {
        OutputDebugString(TEXT("CreateMutex failed"));
        return;
    }

    if (WaitForSingleObject(hMutex, INFINITE) != WAIT_OBJECT_0) {
        OutputDebugString(TEXT("The test mutex was abandoned"));
        CloseHandle(hMutex);
        return;
    }

    // Set the test startup information
    dwTestMode = GetProfileInt(TEXT("GeneralSettings"), TEXT("ParallelTestMode"), 1);
    if (dwTestMode == 0) {
        RegisterStartupContext(TSTART_HARNESS | TSTART_SEQUENTIAL | dwStress);
    }
    else {
        RegisterStartupContext(TSTART_HARNESS | TSTART_SEQUENTIAL | TSTART_PARALLEL | dwStress);
    }

    // Seed the pseudo-random number generator
    srand(GetTickCount());

    // Create a heap for the test
    if (!CreateHeap()) {
        return;
    }

    // Read in the list of test libs
    szLibList = LoadModuleList(TEXT("oroborus"));
    if (!szLibList) {
        ReleaseHeap();
        ReleaseMutex(hMutex);
        CloseHandle(hMutex);
        return;
    }

    // If this is the first time we've been called by the harness,
    // call DllMain on any modules present in the d3d test list that
    // are not present in the harness module list
    if (Oroborus::g_bInitModules) {

        PTEST_DLLMAIN_PROC  pfnDllMain;
        LPTSTR              szHarnessList;
        TCHAR*              pszH;
        HMODULE             hModule;

        // Read in the list of harness modules
        szHarnessList = LoadModuleList(TEXT("TestList"));
        if (!szHarnessList) {
            MemFree(szLibList);
            ReleaseHeap();
            ReleaseMutex(hMutex);
            CloseHandle(hMutex);
            return;
        }

        for (psz = szLibList; *psz; psz += _tcslen(psz) + 1) {

            for (pszH = szHarnessList; *pszH; pszH += _tcslen(pszH) + 1) {
                if (!_tcscmp(psz, pszH)) {
                    break;
                }
            }
            if (!*pszH) {

                _tcscpy(szModuleName, psz);

                IsolateModuleName(szModuleName);

                hModule = (HMODULE)FindModuleHandle(szModuleName);
                pfnDllMain = (PTEST_DLLMAIN_PROC)FindProcAddress(szModuleName, TEXT("DllMain"));
                if (!hModule || !pfnDllMain) {
                    DebugString(TEXT("Unable to locate test module %s in the export directory"), szModuleName);
                    __asm int 3;
                    continue;
                }

                pfnDllMain(hModule, DLL_PROCESS_ATTACH, NULL);
            }
        }

        MemFree(szHarnessList);
    }

    Oroborus::g_bInitModules = FALSE;

#ifdef DEBUG
    D3D__Parser = GetProfileInt(TEXT("oroborus.lib"), TEXT("Parser"), 0);
    D3D__SingleStepPusher = GetProfileInt(TEXT("oroborus.lib"), TEXT("SingleStepPusher"), 0);
#endif

    // Initialize creation parameters
    memset(&d3dcd, 0, sizeof(D3DCREATIONDESC));
    d3dcd.d3ddt = D3DDEVTYPE_HAL;
    d3dcd.bWindowed = TRUE;

//        d3dcd.d3ddm.Width = 640;
//        d3dcd.d3ddm.Height = 480;
//        d3dcd.d3ddm.Format = D3DFMT_UNKNOWN_C5;
//        SetRect(&d3dcd.rectWnd, 20, 20, 320, 320);
//        ##HACK
//        d3dcd.bDepthBuffer = TRUE;
    d3dcd.bDepthBuffer = FALSE;
//        #HACK END
//        d3dcd.fmtd = D3DFMT_UNKNOWN_D16;
    d3dcd.mst = D3DMULTISAMPLE_NONE;

    // Create the display
    pDisplay = new CDisplay();
    if (!pDisplay) {
        MemFree(szLibList);
        ReleaseHeap();
        ReleaseMutex(hMutex);
        CloseHandle(hMutex);
        return;
    }

    // Disable DirectInput if we are running in parallel
    if (dwTestMode != 0) {
        pDisplay->EnableInput(FALSE);
    }

    // Initialize the display
    if (!pDisplay->Create(&d3dcd)) {
        DebugString(TEXT("CDisplay::Create failed"));
        pDisplay->Release();
        MemFree(szLibList);
        ReleaseHeap();
        ReleaseMutex(hMutex);
        CloseHandle(hMutex);
        return;
    }

    // Iterate through the lib list specified in the .ini file
    for (psz = szLibList; *psz && IsDisplayStable(); psz += _tcslen(psz) + 1) {

        _tcscpy(szLibName, psz);
        _tcscpy(szModuleName, psz);

        IsolateLibName(szLibName);
        IsolateModuleName(szModuleName);

        // Get the entry and exit points
        pfnStartTest = (PTEST_STARTUP_PROC)FindProcAddress(szModuleName, TEXT("StartTest"));
        pfnEndTest = (PTEST_CLEANUP_PROC)FindProcAddress(szModuleName, TEXT("EndTest"));
        if (!pfnStartTest || !pfnEndTest) {
            DebugString(TEXT("Unable to locate test module %s in the export directory"), szModuleName);
            __asm int 3;
            continue;
        }

        pDisplay->GetPresentParameters(&d3dpp);
        dwValue = GetProfileInt(szLibName, TEXT("DisplayModeWidth"), 0);
        if (dwValue) {
            d3dpp.BackBufferWidth = dwValue;
        }
        dwValue = GetProfileInt(szLibName, TEXT("DisplayModeHeight"), 0);
        if (dwValue) {
            d3dpp.BackBufferHeight = dwValue;
        }
        dwValue = GetProfileInt(szLibName, TEXT("DisplayModeFormat"), 0);
        if (dwValue) {
            d3dpp.BackBufferFormat = (D3DFORMAT)dwValue;
        }
        dwValue = GetProfileInt(szLibName, TEXT("DisplayModeRefresh"), 0xFFFFFFFF);
        if (dwValue != 0xFFFFFFFF) {
            d3dpp.FullScreen_RefreshRateInHz = dwValue;
        }
        dwValue = GetProfileInt(szLibName, TEXT("DisplayMultiSampleType"), 0xFFFFFFFF);
        if (dwValue != 0xFFFFFFFF) {
            d3dpp.MultiSampleType = (D3DMULTISAMPLE_TYPE)dwValue;
        }

        pDisplay->Reset(&d3dpp);

        // Run the test
        pfnStartTest(hLog);
        pfnEndTest();
    }

    MemFree(szLibList);

    // Clean up
    pDisplay->Release();

    // Release the heap
    ReleaseHeap();

    ReleaseMutex(hMutex);
    CloseHandle(hMutex);
}

//******************************************************************************
void WINAPI PREPEND_MODULE(_EndTest)(void) {
}

//******************************************************************************
LPTSTR LoadModuleList(LPTSTR szSection) {

    LPTSTR szList = NULL;
    UINT   uNumChars;
    UINT   uNumListChars = 0;

    do {
        uNumListChars += 2048;
        if (szList) {
            MemFree(szList);
        }
        szList = (LPTSTR)MemAlloc(uNumListChars * sizeof(TCHAR));
        if (!szList) {
            return NULL;
        }
        uNumChars = GetProfileSection(szSection, szList, uNumListChars);
    } while (uNumChars == uNumListChars - 2);

    return szList;
}

//******************************************************************************
void IsolateModuleName(LPTSTR szLibName) {

    TCHAR* pszC;

    // Remove comments and whitespace
    for (pszC = szLibName; *pszC && *pszC != TEXT(';'); pszC++);
    if (*pszC == TEXT(';')) *pszC = TEXT('\0');
    for (pszC--; pszC >= szLibName && *pszC == TEXT(' '); pszC--);
    pszC[1] = TEXT('\0');

    // Remove the .lib extension (if present)
    pszC -= 3;
    if (!_tcscmp(pszC, TEXT(".lib"))) {
        *pszC = TEXT('\0');
    }
}

//******************************************************************************
void IsolateLibName(LPTSTR szLibName) {

    TCHAR* pszC;

    // Remove comments and whitespace
    for (pszC = szLibName; *pszC && *pszC != TEXT(';'); pszC++);
    if (*pszC == TEXT(';')) *pszC = TEXT('\0');
    for (pszC--; pszC >= szLibName && *pszC == TEXT(' '); pszC--);
    pszC[1] = TEXT('\0');
}

//******************************************************************************
#pragma data_seg(EXPORT_SECTION_NAME)
extern EXP_TABLE_ENTRY PREPEND_MODULE(_ExportTableEntry)[];
__EXTRN_C EXP_TABLE_DIRECTORY PREPEND_MODULE(_ExportTableDirectory) = {
    MODULE_STRING,
    PREPEND_MODULE(_ExportTableEntry)
};
#pragma data_seg()

__EXTRN_C EXP_TABLE_ENTRY PREPEND_MODULE(_ExportTableEntry)[] = {
    { "StartTest", (PROC)PREPEND_MODULE(_StartTest) },
    { "EndTest",   (PROC)PREPEND_MODULE(_EndTest) },
    { "DllMain",   (PROC)PREPEND_MODULE(_DllMain) },
    { NULL, NULL }
};
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\test\directx\d3d\frame\ttmplate\test.cpp ===
/*******************************************************************************

Copyright (c) 2000 Microsoft Corporation.  All rights reserved.

File Name:

    test.cpp

Author:

    Matt Bronder

Description:

    Test functions.

*******************************************************************************/

#include "d3dlocus.h"
#include "test.h"

//******************************************************************************
//
// Function:
//
//     ExhibitScene
//
// Description:
//
//     Create the scene, pump messages, process user input,
//     update the scene, render the scene, and release the scene when finished.
//
// Arguments:
//
//     CDisplay* pDisplay           - Pointer to the Display object
//
//     int* pnExitCode              - Optional pointer to an integer that will
//                                    be set to the exit value contained in the 
//                                    wParam parameter of the WM_QUIT message 
//                                    (if received)
//
// Return Value:
//
//     TRUE if the display remains functional on exit, FALSE otherwise.
//
//******************************************************************************
extern "C" BOOL PREPEND_MODULE(_ExhibitScene)(CDisplay* pDisplay, int* pnExitCode) {

    CTest*   pTest;
    BOOL     bRet;

    // Verify that the display has been initialized
    if (!pDisplay) {
        return FALSE;
    }

    // Create the scene
    pTest = new CTest();
    if (!pTest) {
        return FALSE;
    }

    // Initialize the scene
    if (!pTest->Create(pDisplay)) {
        pTest->Release();
        return FALSE;
    }

    bRet = pTest->Exhibit(pnExitCode);

    // Clean up the scene
    pTest->Release();

    return bRet;
}

//******************************************************************************
//
// Function:
//
//     ValidateDisplay
//
// Description:
//
//     Evaluate the given display information in order to determine whether or
//     not the display is capable of rendering the scene.  If not, the given 
//     display will not be included in the display list.
//
// Arguments:
//
//     CDirect3D8* pd3d                 - Pointer to the Direct3D object
//
//     D3DCAPS8* pd3dcaps               - Capabilities of the device
//
//     D3DDISPLAYMODE*                  - Display mode into which the device
//                                        will be placed
//
// Return Value:
//
//     TRUE if the scene can be rendered using the given display, FALSE if
//     it cannot.
//
//******************************************************************************
extern "C" BOOL PREPEND_MODULE(_ValidateDisplay)(CDirect3D8* pd3d, D3DCAPS8* pd3dcaps, D3DDISPLAYMODE* pd3ddm) {

    return TRUE;
}

//******************************************************************************
// CTest
//******************************************************************************

//******************************************************************************
//
// Method:
//
//     CTest
//
// Description:
//
//     Initialize the test.
//
// Arguments:
//
//     None.
//
// Return Value:
//
//     None.
//
//******************************************************************************
CTest::CTest() {
}

//******************************************************************************
//
// Method:
//
//     ~CTest
//
// Description:
//
//     Clean up the test.
//
// Arguments:
//
//     None.
//
// Return Value:
//
//     None.
//
//******************************************************************************
CTest::~CTest() {
}

//******************************************************************************
//
// Method:
//
//     Prepare
//
// Description:
//
//     Initialize all device-independent data to be used in the scene.  This
//     method is called only once at creation (as opposed to Setup and
//     Initialize, which get called each time the device is Reset).
//
// Arguments:
//
//     None.
//
// Return Value:
//
//     TRUE if the scene was successfully prepared, FALSE if it was not.
//
//******************************************************************************
BOOL CTest::Prepare() {

    return CScene::Prepare();
}

//******************************************************************************
//
// Method:
//
//     Initialize
//
// Description:
//
//     Initialize the device and all device objects to be used in the test (or
//     at least all device resource objects to be created in the video, 
//     non-local video, or default memory pools).
//
// Arguments:
//
//     None.
//
// Return Value:
//
//     TRUE if the test was successfully initialized for rendering, FALSE if
//     it was not.
//
//******************************************************************************
BOOL CTest::Initialize() {

    return CScene::Initialize();
}

//******************************************************************************
//
// Method:
//
//     Efface
//
// Description:
//
//     Release all device resource objects (or at least those objects created
//     in video memory, non-local video memory, or the default memory pools)
//     and restore the device to its initial state.
//
// Arguments:
//
//     None.
//
// Return Value:
//
//     None.
//
//******************************************************************************
void CTest::Efface() {

    CScene::Efface();
}

//******************************************************************************
//
// Method:
//
//     Update
//
// Description:
//
//     Update the state of the scene to coincide with the given time.
//
// Arguments:
//
//     None.
//
// Return Value:
//
//     None.
//
//******************************************************************************
void CTest::Update() {

    CScene::Update();
}

//******************************************************************************
//
// Method:
//
//     Render
//
// Description:
//
//     Render the test scene.
//
// Arguments:
//
//     None.
//
// Return Value:
//
//     TRUE on success, FALSE on failure.
//
//******************************************************************************
BOOL CTest::Render() {

    DWORD    dwClearFlags = D3DCLEAR_TARGET;
    HRESULT  hr;

#ifndef UNDER_XBOX
    hr = m_pDevice->TestCooperativeLevel();
    if (FAILED(hr)) {
        if (hr == D3DERR_DEVICELOST) {
            return TRUE;
        }
        if (hr == D3DERR_DEVICENOTRESET) {
            if (!Reset()) {
                return FALSE;
            }
        }
    }
#endif // !UNDER_XBOX

    // Clear the rendering target
    if (m_pDisplay->IsDepthBuffered()) {
        dwClearFlags |= D3DCLEAR_ZBUFFER;
    }
    m_pDevice->Clear(0, NULL, dwClearFlags, RGB_MAKE(0, 0, 0), 1.0f, 0);

    // Begin the scene
    m_pDevice->BeginScene();

    // Position the view using the default camera
    m_pDisplay->SetView();

    // Use a fixed function shader
    m_pDevice->SetVertexShader(FVF_VERTEX);

    // Display the adapter mode
    ShowDisplayMode();

    // Display the frame rate
    ShowFrameRate();

    // Display the console
    m_pDisplay->ShowConsole();

    // Fade out the scene on exit
    if (m_pfnFade) {
        (this->*m_pfnFade)();
    }

    // End the scene
    m_pDevice->EndScene();

    // Update the screen
    m_pDevice->Present(NULL, NULL, NULL, NULL);

    return TRUE;
}

//******************************************************************************
//
// Method:
//
//     ProcessInput
//
// Description:
//
//     Process user input for the scene.
//
// Arguments:
//
//     None.
//
// Return Value:
//
//     None.
//
//******************************************************************************
void CTest::ProcessInput() {

    CScene::ProcessInput();
}

//******************************************************************************
//
// Method:
//
//     InitView
//
// Description:
//
//     Initialize the camera view in the scene.
//
// Arguments:
//
//     None.
//
// Return Value:
//
//     TRUE on success, FALSE on failure.
//
//******************************************************************************
BOOL CTest::InitView() {

    if (!m_pDisplay) {
        return FALSE;
    }

    // Set the view position
    m_camInitial.vPosition     = D3DXVECTOR3(0.0f, 0.0f, -50.0f);
    m_camInitial.vInterest     = D3DXVECTOR3(0.0f, 0.0f, 0.0f);
    m_camInitial.fRoll         = 0.0f;
    m_camInitial.fFieldOfView  = M_PI / 4.0f;
    m_camInitial.fNearPlane    = 0.1f;
    m_camInitial.fFarPlane     = 1000.0f;
    m_pDisplay->SetCamera(&m_camInitial);

    return m_pDisplay->SetView(&m_camInitial);
}

//******************************************************************************
// Scene window procedure (pseudo-subclassed off the main window procedure)
//******************************************************************************

//******************************************************************************
//
// Function:
//
//     WndProc
//
// Description:
//
//     Scene window procedure to process messages received by the main 
//     application window.
//
// Arguments:
//
//     LRESULT* plr             - Result of the message processing
//
//     HWND hWnd                - Application window
//
//     UINT uMsg                - Message to process
//
//     WPARAM wParam            - First message parameter
//
//     LPARAM lParam            - Second message parameter
//
// Return Value:
//
//     TRUE if the message was handled, FALSE otherwise.
//
//******************************************************************************
BOOL CTest::WndProc(LRESULT* plr, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam) {

    *plr = 0;

#ifndef UNDER_XBOX

    switch (uMsg) {

        case WM_KEYDOWN:

            switch (wParam) {

                case VK_F12: // Toggle pause state
                    m_bPaused = !m_bPaused;
                    return TRUE;
            }

            break;
    }

#endif // !UNDER_XBOX

    return CScene::WndProc(plr, hWnd, uMsg, wParam, lParam);
}
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\test\directx\d3d\func\alphabnt\dll\include.cpp ===
#include "dll\main.cpp"
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\test\directx\d3d\frame\ttmplate\dll\sources.inc ===
!include ..\..\..\..\sources.inc

TARGETNAME=d3dtest
TARGETTYPE=LIBRARY
TARGETPATH=$(TEST_LIB_DEST)

SOURCES=\
    include.cpp
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\test\directx\d3d\func\alphabnt\sources.inc ===
!include ..\..\..\sources.inc

TARGETNAME=l_albnt
TARGETTYPE=LIBRARY
TARGETPATH=$(TEST_LIB_DEST)

SYNCHRONIZE_BLOCK=1

OBJLIBFILES=\
    $(OBJLIBFILES) \
    $(TEST_LIB_PATH)\m_albnt.lib

SOURCES=\
    alpha.cpp
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\test\directx\d3d\frame\ttmplate\exe\sources.inc ===
TARGETNAME=d3dtest
TARGETTYPE=PROGRAM
TARGETPATH=obj

!include ..\..\..\..\sources.inc

TARGETLIBS=\
    $(TARGETLIBS) \
    $(TEST_LIB_PATH)\d3dlocus.lib \
    $(TEST_LIB_PATH)\l_test.lib

SOURCES=\
    include.cpp
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\test\directx\d3d\func\alphabnt\modulex.h ===
#define PREPEND_MODULE(Suffix) alphabnt##Suffix
#define MODULE_STRING "alphabnt"
#pragma comment(linker, "/include:_alphabnt_ExhibitScene@8")
#pragma comment(linker, "/include:_alphabnt_texture")
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\test\directx\d3d\frame\ttmplate\test.h ===
/*******************************************************************************

Copyright (c) 2000 Microsoft Corporation.  All rights reserved.

File Name:

    test.h

Author:

    Matt Bronder

Description:

    Direct3D test functions.

*******************************************************************************/

#ifndef __TEST_H__
#define __TEST_H__

//******************************************************************************
class CTest : public CScene {

protected:

public:

                                    CTest();
                                    ~CTest();

protected:

    virtual BOOL                    Prepare();
    virtual BOOL                    Initialize();
    virtual void                    Efface();
    virtual void                    Update();
    virtual BOOL                    Render();

    virtual void                    ProcessInput();
    virtual BOOL                    InitView();

    virtual BOOL                    WndProc(LRESULT* plr, HWND hWnd, UINT uMsg, 
                                            WPARAM wParam, LPARAM lParam);
};

#endif //__TEST_H__
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\test\directx\d3d\func\alphabnt\alpha.h ===
/*******************************************************************************

Copyright (c) 2000 Microsoft Corporation.  All rights reserved.

File Name:

    alpha.h

Author:

    Matt Bronder

Description:

    Direct3D test functions.

*******************************************************************************/

#ifndef __ALPHA_H__
#define __ALPHA_H__

//******************************************************************************
class CAlphaBnT : public CScene {

protected:

    VERTEX                          m_prVertices[4];
    CTexture8*                      m_pd3dt;

public:

                                    CAlphaBnT();
                                    ~CAlphaBnT();

    virtual BOOL                    Create(CDisplay* pDisplay);
    virtual int                     Exhibit(int *pnExitCode);

protected:

    virtual BOOL                    Prepare();
    virtual BOOL                    Setup();
    virtual BOOL                    Initialize();
    virtual void                    Efface();
    virtual void                    Update();
    virtual BOOL                    Render();

    virtual void                    ProcessInput();
    virtual BOOL                    InitView();

    virtual BOOL                    WndProc(LRESULT* plr, HWND hWnd, UINT uMsg, 
                                            WPARAM wParam, LPARAM lParam);
};

#endif //__ALPHA_H__
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\test\directx\d3d\func\alphabnt\dll\sources.inc ===
!include ..\..\..\..\sources.inc

TARGETNAME=alphabnt
TARGETTYPE=LIBRARY
TARGETPATH=$(TEST_LIB_DEST)

OBJLIBFILES=\
    $(OBJLIBFILES) \
    $(TEST_LIB_PATH)\l_albnt.lib

SOURCES=\
    include.cpp
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\test\directx\d3d\func\alphabnt\exe\include.cpp ===
#include "exe\main.cpp"
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\test\directx\d3d\func\alphabnt\alpha.cpp ===
/*******************************************************************************

Copyright (c) 2000 Microsoft Corporation.  All rights reserved.

File Name:

    alpha.cpp

Author:

    Matt Bronder

Description:

    Test functions.

*******************************************************************************/

#include "d3dlocus.h"
#include "alpha.h"

//******************************************************************************
//
// Function:
//
//     ExhibitScene
//
// Description:
//
//     Create the scene, pump messages, process user input,
//     update the scene, render the scene, and release the scene when finished.
//
// Arguments:
//
//     CDisplay* pDisplay           - Pointer to the Display object
//
//     int* pnExitCode              - Optional pointer to an integer that will
//                                    be set to the exit value contained in the 
//                                    wParam parameter of the WM_QUIT message 
//                                    (if received)
//
// Return Value:
//
//     TRUE if the display remains functional on exit, FALSE otherwise.
//
//******************************************************************************
extern "C" BOOL PREPEND_MODULE(_ExhibitScene)(CDisplay* pDisplay, int* pnExitCode) {

    CAlphaBnT*  pAlphaBnT;
    BOOL        bRet;

    // Verify that the display has been initialized
    if (!pDisplay) {
        return FALSE;
    }

    // Create the scene
    pAlphaBnT = new CAlphaBnT();
    if (!pAlphaBnT) {
        return FALSE;
    }

    // Initialize the scene
    if (!pAlphaBnT->Create(pDisplay)) {
        pAlphaBnT->Release();
        return FALSE;
    }

    bRet = pAlphaBnT->Exhibit(pnExitCode);

    // Clean up the scene
    pAlphaBnT->Release();

    return bRet;
}

//******************************************************************************
//
// Function:
//
//     ValidateDisplay
//
// Description:
//
//     Evaluate the given display information in order to determine whether or
//     not the display is capable of rendering the scene.  If not, the given 
//     display will not be included in the display list.
//
// Arguments:
//
//     CDirect3D8* pd3d                 - Pointer to the Direct3D object
//
//     D3DCAPS8* pd3dcaps               - Capabilities of the device
//
//     D3DDISPLAYMODE*                  - Display mode into which the device
//                                        will be placed
//
// Return Value:
//
//     TRUE if the scene can be rendered using the given display, FALSE if
//     it cannot.
//
//******************************************************************************
extern "C" BOOL PREPEND_MODULE(_ValidateDisplay)(CDirect3D8* pd3d, D3DCAPS8* pd3dcaps, D3DDISPLAYMODE* pd3ddm) {

    return TRUE;
}

//******************************************************************************
// CAlphaBnT
//******************************************************************************

//******************************************************************************
//
// Method:
//
//     CAlphaBnT
//
// Description:
//
//     Initialize the test.
//
// Arguments:
//
//     None.
//
// Return Value:
//
//     None.
//
//******************************************************************************
CAlphaBnT::CAlphaBnT() {

    // Initialize the vertices
    m_prVertices[0] = VERTEX(D3DXVECTOR3(-10.0f,-10.0f, 0.0f), D3DXVECTOR3(0.0f, 0.0f, -1.0f), 0.0f, 1.0f);
    m_prVertices[1] = VERTEX(D3DXVECTOR3(-10.0f, 10.0f, 0.0f), D3DXVECTOR3(0.0f, 0.0f, -1.0f), 0.0f, 0.0f);
    m_prVertices[2] = VERTEX(D3DXVECTOR3( 10.0f, 10.0f, 0.0f), D3DXVECTOR3(0.0f, 0.0f, -1.0f), 1.0f, 0.0f);
    m_prVertices[3] = VERTEX(D3DXVECTOR3( 10.0f,-10.0f, 0.0f), D3DXVECTOR3(0.0f, 0.0f, -1.0f), 1.0f, 1.0f);

    m_pd3dt = NULL;
}

//******************************************************************************
//
// Method:
//
//     ~CAlphaBnT
//
// Description:
//
//     Clean up the test.
//
// Arguments:
//
//     None.
//
// Return Value:
//
//     None.
//
//******************************************************************************
CAlphaBnT::~CAlphaBnT() {
}

//******************************************************************************
//
// Method:
//
//     Create
//
// Description:
//
//     Prepare the test for rendering.
//
// Arguments:
//
//     CDisplay* pDisplay               - Pointer to a Display object.
//
// Return Value:
//
//     TRUE on success, FALSE on failure.
//
//******************************************************************************
BOOL CAlphaBnT::Create(CDisplay* pDisplay) {

    return CScene::Create(pDisplay);
}

//******************************************************************************
//
// Method:
//
//     Exhibit
//
// Description:
//
//     Execute the test.
//
// Arguments:
//
//     None.
//
// Return Value:
//
//     The exit value contained in the wParam parameter of the WM_QUIT message.
//
//******************************************************************************
int CAlphaBnT::Exhibit(int *pnExitCode) {

    return CScene::Exhibit(pnExitCode);
}

//******************************************************************************
//
// Method:
//
//     Prepare
//
// Description:
//
//     Initialize all device-independent data to be used in the scene.  This
//     method is called only once at creation (as opposed to Setup and
//     Initialize, which get called each time the device is Reset).
//
// Arguments:
//
//     None.
//
// Return Value:
//
//     TRUE if the scene was successfully prepared, FALSE if it was not.
//
//******************************************************************************
BOOL CAlphaBnT::Prepare() {

    return TRUE;
}

//******************************************************************************
//
// Method:
//
//     Setup
//
// Description:
//
//     Obtain the device interface pointer from the display, save the current
//     state of the device, and initialize the background vertices to the
//     dimensions of the render target.
//
// Arguments:
//
//     None.
//
// Return Value:
//
//     TRUE if the scene was successfully prepared for initialization, FALSE if
//     it was not.
//
//******************************************************************************
BOOL CAlphaBnT::Setup() {

    return CScene::Setup();
}

//******************************************************************************
//
// Method:
//
//     Initialize
//
// Description:
//
//     Initialize the device and all device objects to be used in the test (or
//     at least all device resource objects to be created in the video, 
//     non-local video, or default memory pools).
//
// Arguments:
//
//     None.
//
// Return Value:
//
//     TRUE if the test was successfully initialized for rendering, FALSE if
//     it was not.
//
//******************************************************************************
BOOL CAlphaBnT::Initialize() {

    m_pd3dt = (CTexture8*)CreateTexture(m_pDevice, TEXT("texture.bmp"), D3DFMT_A1R5G5B5, TTYPE_TEXTURE, NULL, 1.0f, RGB_MAKE(255, 255, 255));
    if (!m_pd3dt) {
        return FALSE;
    }

    m_pDevice->SetRenderState(D3DRS_ALPHAFUNC, (DWORD)D3DCMP_GREATEREQUAL);
    m_pDevice->SetRenderState(D3DRS_ALPHAREF, 0xFF);

    return CScene::Initialize();
}

//******************************************************************************
//
// Method:
//
//     Efface
//
// Description:
//
//     Release all device resource objects (or at least those objects created
//     in video memory, non-local video memory, or the default memory pools)
//     and restore the device to its initial state.
//
// Arguments:
//
//     None.
//
// Return Value:
//
//     None.
//
//******************************************************************************
void CAlphaBnT::Efface() {

    ReleaseTexture(m_pd3dt);
    CScene::Efface();
}

//******************************************************************************
//
// Method:
//
//     Update
//
// Description:
//
//     Update the state of the scene to coincide with the given time.
//
// Arguments:
//
//     None.
//
// Return Value:
//
//     None.
//
//******************************************************************************
void CAlphaBnT::Update() {

    CScene::Update();
}

//******************************************************************************
//
// Method:
//
//     Render
//
// Description:
//
//     Render the test scene.
//
// Arguments:
//
//     None.
//
// Return Value:
//
//     TRUE on success, FALSE on failure.
//
//******************************************************************************
BOOL CAlphaBnT::Render() {

    D3DXMATRIX mWorld;
    DWORD      dwClearFlags = D3DCLEAR_TARGET;
    HRESULT    hr;
    UINT       i;

    hr = m_pDevice->TestCooperativeLevel();
    if (FAILED(hr)) {
        if (hr == D3DERR_DEVICELOST) {
            return TRUE;
        }
        if (hr == D3DERR_DEVICENOTRESET) {
            if (!Reset()) {
                return FALSE;
            }
        }
    }

    mWorld = m_mIdentity;

    // Clear the rendering target
    if (m_pDisplay->IsDepthBuffered()) {
        dwClearFlags |= D3DCLEAR_ZBUFFER;
    }
    m_pDevice->Clear(0, NULL, dwClearFlags, RGB_MAKE(0, 0, 0), 1.0f, 0);

    // Begin the scene
    m_pDevice->BeginScene();

    // Position the view using the default camera
    m_pDisplay->SetView();

    // Use a fixed function shader
    m_pDevice->SetVertexShader(FVF_VERTEX);

    m_pDevice->SetTexture(0, m_pd3dt);

    mWorld._41 = -10.0f;

    m_pDevice->SetRenderState(D3DRS_ALPHABLENDENABLE, (DWORD)TRUE);

    // Render
    for (i = 0; i <= 5000; i++) {

        mWorld._43 = (float)(5000-i) / 5.0f;//(float)(rand()) / (float)RAND_MAX * 1000.0f;

        m_pDevice->SetTransform(D3DTS_WORLD, &mWorld);

        m_pDevice->DrawPrimitiveUP(D3DPT_TRIANGLEFAN, 2, m_prVertices, sizeof(VERTEX));
    }

    m_pDevice->SetRenderState(D3DRS_ALPHABLENDENABLE, (DWORD)FALSE);

    mWorld._41 = 10.0f;
//    m_pDevice->SetTransform(D3DTS_WORLD, &mWorld);

    m_pDevice->SetRenderState(D3DRS_ALPHATESTENABLE, (BOOL)TRUE);

    // Render
    for (i = 0; i <= 5000; i++) {

        mWorld._43 = (float)(5000-i) / 5.0f;//(float)(rand()) / (float)RAND_MAX * 1000.0f;

        m_pDevice->SetTransform(D3DTS_WORLD, &mWorld);

        m_pDevice->DrawPrimitiveUP(D3DPT_TRIANGLEFAN, 2, m_prVertices, sizeof(VERTEX));
    }

    m_pDevice->SetRenderState(D3DRS_ALPHATESTENABLE, (BOOL)FALSE);

    m_pDevice->SetTexture(0, NULL);

    // Display the adapter mode
    ShowDisplayMode();

    // Display the frame rate
    ShowFrameRate();

    // Display the console
    m_pDisplay->ShowConsole();

    // Fade out the scene on exit
    if (m_pfnFade) {
        (this->*m_pfnFade)();
    }

    // End the scene
    m_pDevice->EndScene();

    // Update the screen
    m_pDevice->Present(NULL, NULL, NULL, NULL);

    return TRUE;
}

//******************************************************************************
//
// Method:
//
//     ProcessInput
//
// Description:
//
//     Process user input for the scene.
//
// Arguments:
//
//     None.
//
// Return Value:
//
//     None.
//
//******************************************************************************
void CAlphaBnT::ProcessInput() {

    CScene::ProcessInput();
}
//******************************************************************************
//
// Method:
//
//     InitView
//
// Description:
//
//     Initialize the camera view in the scene.
//
// Arguments:
//
//     None.
//
// Return Value:
//
//     TRUE on success, FALSE on failure.
//
//******************************************************************************
BOOL CAlphaBnT::InitView() {

    if (!m_pDisplay) {
        return FALSE;
    }

    // Set the view position
    m_camInitial.vPosition     = D3DXVECTOR3(0.0f, 0.0f, -50.0f);
    m_camInitial.vInterest     = D3DXVECTOR3(0.0f, 0.0f, 0.0f);
    m_camInitial.fRoll         = 0.0f;
    m_camInitial.fFieldOfView  = M_PI / 4.0f;
    m_camInitial.fNearPlane    = 0.1f;
    m_camInitial.fFarPlane     = 1000.0f;
    m_pDisplay->SetCamera(&m_camInitial);

    return m_pDisplay->SetView(&m_camInitial);
}

//******************************************************************************
// Scene window procedure (pseudo-subclassed off the main window procedure)
//******************************************************************************

//******************************************************************************
//
// Function:
//
//     WndProc
//
// Description:
//
//     Scene window procedure to process messages received by the main 
//     application window.
//
// Arguments:
//
//     LRESULT* plr             - Result of the message processing
//
//     HWND hWnd                - Application window
//
//     UINT uMsg                - Message to process
//
//     WPARAM wParam            - First message parameter
//
//     LPARAM lParam            - Second message parameter
//
// Return Value:
//
//     TRUE if the message was handled, FALSE otherwise.
//
//******************************************************************************
BOOL CAlphaBnT::WndProc(LRESULT* plr, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam) {

    *plr = 0;

#ifndef UNDER_XBOX

    switch (uMsg) {

        case WM_KEYDOWN:

            switch (wParam) {

                case VK_F12: // Toggle pause state
                    m_bPaused = !m_bPaused;
                    return TRUE;
            }

            break;
    }

#endif // !UNDER_XBOX

    return CScene::WndProc(plr, hWnd, uMsg, wParam, lParam);
}
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\test\directx\d3d\func\alphabnt\media\sources.inc ===
!include ..\..\..\..\sources.inc

TARGETNAME=m_albnt
TARGETTYPE=LIBRARY
TARGETPATH=$(TEST_LIB_DEST)

USER_C_FLAGS=$(USER_C_FLAGS) /Zm180

SOURCES=\
    texture.bmp.cpp
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\test\directx\d3d\func\alphabnt\exe\sources.inc ===
TARGETNAME=alphabnt
TARGETTYPE=PROGRAM
TARGETPATH=obj

!include ..\..\..\..\sources.inc

TARGETLIBS=\
    $(TARGETLIBS) \
    $(TEST_LIB_PATH)\d3dlocus.lib \
    $(TEST_LIB_PATH)\l_albnt.lib

SOURCES=\
    include.cpp
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\test\directx\d3d\func\alphpal1\dll\include.cpp ===
#include "dll\main.cpp"
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\test\directx\d3d\func\alphpal1\sources.inc ===
!include ..\..\..\sources.inc

TARGETNAME=l_alpal1
TARGETTYPE=LIBRARY
TARGETPATH=$(TEST_LIB_DEST)

SYNCHRONIZE_BLOCK=1

SOURCES=\
    alphapal.cpp
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\test\directx\d3d\func\alphpal1\modulex.h ===
#define PREPEND_MODULE(Suffix) alphpal1##Suffix
#define MODULE_STRING "alphpal1"
#pragma comment(linker, "/include:_alphpal1_ExhibitScene@8")
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\test\directx\d3d\func\alphpal1\alphapal.cpp ===
/*******************************************************************************

Copyright (c) 2000 Microsoft Corporation.  All rights reserved.

File Name:

    alphapal.cpp

Author:

    Matt Bronder

Description:

    Test functions.

*******************************************************************************/

#include "d3dlocus.h"
#include "alphapal.h"

static BOOL RandomizePalette(CTexture8* pd3dt, D3DCOLOR* pcPalette);

//******************************************************************************
//
// Function:
//
//     ExhibitScene
//
// Description:
//
//     Create the scene, pump messages, process user input,
//     update the scene, render the scene, and release the scene when finished.
//
// Arguments:
//
//     CDisplay* pDisplay           - Pointer to the Display object
//
//     int* pnExitCode              - Optional pointer to an integer that will
//                                    be set to the exit value contained in the 
//                                    wParam parameter of the WM_QUIT message 
//                                    (if received)
//
// Return Value:
//
//     TRUE if the display remains functional on exit, FALSE otherwise.
//
//******************************************************************************
extern "C" BOOL PREPEND_MODULE(_ExhibitScene)(CDisplay* pDisplay, int* pnExitCode) {

    CAlphaPalette1* pAlphaPal;
    BOOL            bRet;

    // Verify that the display has been initialized
    if (!pDisplay) {
        return FALSE;
    }

    // Create the scene
    pAlphaPal = new CAlphaPalette1();
    if (!pAlphaPal) {
        return FALSE;
    }

    // Initialize the scene
    if (!pAlphaPal->Create(pDisplay)) {
        pAlphaPal->Release();
        return FALSE;
    }

    bRet = pAlphaPal->Exhibit(pnExitCode);

    // Clean up the scene
    pAlphaPal->Release();

    return bRet;
}

//******************************************************************************
//
// Function:
//
//     ValidateDisplay
//
// Description:
//
//     Evaluate the given display information in order to determine whether or
//     not the display is capable of rendering the scene.  If not, the given 
//     display will not be included in the display list.
//
// Arguments:
//
//     CDirect3D8* pd3d                 - Pointer to the Direct3D object
//
//     D3DCAPS8* pd3dcaps               - Capabilities of the device
//
//     D3DDISPLAYMODE*                  - Display mode into which the device
//                                        will be placed
//
// Return Value:
//
//     TRUE if the scene can be rendered using the given display, FALSE if
//     it cannot.
//
//******************************************************************************
extern "C" BOOL PREPEND_MODULE(_ValidateDisplay)(CDirect3D8* pd3d, D3DCAPS8* pd3dcaps, D3DDISPLAYMODE* pd3ddm) {

    HRESULT hr;

    if (!(pd3dcaps->TextureCaps & D3DPTEXTURECAPS_ALPHAPALETTE)) {
        return FALSE;
    }

    hr = pd3d->CheckDeviceFormat(pd3dcaps->AdapterOrdinal, pd3dcaps->DeviceType, pd3ddm->Format, 0, D3DRTYPE_TEXTURE, D3DFMT_P8);
    if (FAILED(hr)) {
        return FALSE;
    }

    return TRUE;
}

//******************************************************************************
// CAlphaPalette1
//******************************************************************************

//******************************************************************************
//
// Method:
//
//     CAlphaPalette1
//
// Description:
//
//     Initialize the test.
//
// Arguments:
//
//     None.
//
// Return Value:
//
//     None.
//
//******************************************************************************
CAlphaPalette1::CAlphaPalette1() {

    memset(m_patx, 0, 64 * sizeof(APTEXTURE));
    m_pd3dtBackground = NULL;
}

//******************************************************************************
//
// Method:
//
//     ~CAlphaPalette1
//
// Description:
//
//     Clean up the test.
//
// Arguments:
//
//     None.
//
// Return Value:
//
//     None.
//
//******************************************************************************
CAlphaPalette1::~CAlphaPalette1() {
}

//******************************************************************************
//
// Method:
//
//     Create
//
// Description:
//
//     Prepare the test for rendering.
//
// Arguments:
//
//     CDisplay* pDisplay               - Pointer to a Display object.
//
// Return Value:
//
//     TRUE on success, FALSE on failure.
//
//******************************************************************************
BOOL CAlphaPalette1::Create(CDisplay* pDisplay) {

    return CScene::Create(pDisplay);
}

//******************************************************************************
//
// Method:
//
//     Exhibit
//
// Description:
//
//     Execute the test.
//
// Arguments:
//
//     None.
//
// Return Value:
//
//     The exit value contained in the wParam parameter of the WM_QUIT message.
//
//******************************************************************************
int CAlphaPalette1::Exhibit(int *pnExitCode) {

    return CScene::Exhibit(pnExitCode);
}

//******************************************************************************
BOOL CAlphaPalette1::InitTexture(PAPTEXTURE patx, UINT i) {

    TEXTURETYPE ttype;
    D3DCOLOR    cPalette[256];

    if (rand() % 2) {
        ttype = TTYPE_TEXTURE;
        patx->d3dtft = D3DTEXF_NONE;
    }
    else {
        ttype = TTYPE_MIPMAP;
        patx->d3dtft = D3DTEXF_POINT;
    }

    patx->uDecay = rand() % MAX_DECAY + 1;

    DebugString(TEXT("Creating 8 bit palettized %s #%d"), (ttype = TTYPE_MIPMAP)?TEXT("mipmap"):TEXT("texture"), i + 1);
    patx->pd3dt = (CTexture8*)CreateTexture(m_pDevice, TEXT("texture8.bmp"), D3DFMT_P8, ttype, (PALETTEENTRY*)cPalette, 0.5f);

    RandomizePalette(patx->pd3dt, cPalette);

    m_pDevice->SetPaletteEntries(i, (PALETTEENTRY*)cPalette);

    return (patx->pd3dt != NULL);
}

//******************************************************************************
//
// Method:
//
//     Prepare
//
// Description:
//
//     Initialize all device-independent data to be used in the scene.  This
//     method is called only once at creation (as opposed to Setup and
//     Initialize, which get called each time the device is Reset).
//
// Arguments:
//
//     None.
//
// Return Value:
//
//     TRUE if the scene was successfully prepared, FALSE if it was not.
//
//******************************************************************************
BOOL CAlphaPalette1::Prepare() {

    // Initialize the vertices
    m_prVertices[0] = VERTEX(D3DXVECTOR3(-2.5f,-2.5f, 0.0f), D3DXVECTOR3(0.0f, 0.0f, -1.0f), 0.0f, 1.0f);
    m_prVertices[1] = VERTEX(D3DXVECTOR3(-2.5f, 2.5f, 0.0f), D3DXVECTOR3(0.0f, 0.0f, -1.0f), 0.0f, 0.0f);
    m_prVertices[2] = VERTEX(D3DXVECTOR3( 2.5f, 2.5f, 0.0f), D3DXVECTOR3(0.0f, 0.0f, -1.0f), 1.0f, 0.0f);
    m_prVertices[3] = VERTEX(D3DXVECTOR3( 2.5f,-2.5f, 0.0f), D3DXVECTOR3(0.0f, 0.0f, -1.0f), 1.0f, 1.0f);

    return TRUE;
}

//******************************************************************************
//
// Method:
//
//     Setup
//
// Description:
//
//     Obtain the device interface pointer from the display, save the current
//     state of the device, and initialize the background vertices to the
//     dimensions of the render target.
//
// Arguments:
//
//     None.
//
// Return Value:
//
//     TRUE if the scene was successfully prepared for initialization, FALSE if
//     it was not.
//
//******************************************************************************
BOOL CAlphaPalette1::Setup() {

    return CScene::Setup();
}

//******************************************************************************
//
// Method:
//
//     Initialize
//
// Description:
//
//     Initialize the device and all device objects to be used in the test (or
//     at least all device resource objects to be created in the video, 
//     non-local video, or default memory pools).
//
// Arguments:
//
//     None.
//
// Return Value:
//
//     TRUE if the test was successfully initialized for rendering, FALSE if
//     it was not.
//
//******************************************************************************
BOOL CAlphaPalette1::Initialize() {

    UINT i;

    // Initialize the textures
    m_pd3dtBackground = (CTexture8*)CreateTexture(m_pDevice, TEXT("backgrnd.bmp"));
    if (!m_pd3dtBackground) {
        return FALSE;
    }

    for (i = 0; i < 64; i++) {
        if (!InitTexture(&m_patx[i], i)) {
            return FALSE;
        }
    }

    return CScene::Initialize();
}

//******************************************************************************
//
// Method:
//
//     Efface
//
// Description:
//
//     Release all device resource objects (or at least those objects created
//     in video memory, non-local video memory, or the default memory pools)
//     and restore the device to its initial state.
//
// Arguments:
//
//     None.
//
// Return Value:
//
//     None.
//
//******************************************************************************
void CAlphaPalette1::Efface() {

    UINT i;

    for (i = 0; i < 64; i++) {
        if (m_patx[i].pd3dt) {
            ReleaseTexture(m_patx[i].pd3dt);
        }
    }

    if (m_pd3dtBackground) {
        ReleaseTexture(m_pd3dtBackground);
    }

    CScene::Efface();
}

//******************************************************************************
//
// Method:
//
//     Update
//
// Description:
//
//     Update the state of the scene to coincide with the given time.
//
// Arguments:
//
//     None.
//
// Return Value:
//
//     None.
//
//******************************************************************************
void CAlphaPalette1::Update() {

    UINT i;

    for (i = 0; i < 64; i++) {
        if (--m_patx[i].uDecay == 0) {
            ReleaseTexture(m_patx[i].pd3dt);
            if (!InitTexture(&m_patx[i], i)) {
#ifndef UNDER_XBOX
                DebugBreak();
#else
                Log(LOG_FAIL, TEXT("Failed to create texture %d, exiting..."), i);
                m_bQuit = true;
#endif
            }
            m_patx[i].uDecay = MAX_DECAY;
        }
    }
}

//******************************************************************************
//
// Method:
//
//     Render
//
// Description:
//
//     Render the test scene.
//
// Arguments:
//
//     None.
//
// Return Value:
//
//     TRUE on success, FALSE on failure.
//
//******************************************************************************
BOOL CAlphaPalette1::Render() {

    D3DMATRIX mWorld;
    DWORD     dwClearFlags = D3DCLEAR_TARGET;
    UINT      i;
    HRESULT   hr;

    mWorld = m_mIdentity;

    hr = m_pDevice->TestCooperativeLevel();
    if (FAILED(hr)) {
        if (hr == D3DERR_DEVICELOST) {
            return TRUE;
        }
        if (hr == D3DERR_DEVICENOTRESET) {
            if (!Reset()) {
                return FALSE;
            }
        }
    }

    // Clear the rendering target
    if (m_pDisplay->IsDepthBuffered()) {
        dwClearFlags |= D3DCLEAR_ZBUFFER;
    }
    m_pDevice->Clear(0, NULL, dwClearFlags, RGB_MAKE(0, 0, 0), 1.0f, 0);

    // Begin the scene
    m_pDevice->BeginScene();

    // Position the view using the default camera
    m_pDisplay->SetView();

    // Use a fixed function shader
    m_pDevice->SetVertexShader(FVF_TLVERTEX);

    // Draw the background
    m_pDevice->SetTexture(0, m_pd3dtBackground);

    m_pDevice->SetTextureStageState(0, D3DTSS_MIPFILTER, D3DTEXF_NONE);

    m_pDevice->SetRenderState(D3DRS_ALPHABLENDENABLE, (DWORD)FALSE);

    m_pDevice->DrawPrimitiveUP(D3DPT_TRIANGLEFAN, 2, m_prBackground, sizeof(TLVERTEX));

    m_pDevice->SetRenderState(D3DRS_ALPHABLENDENABLE, (DWORD)TRUE);

    m_pDevice->SetVertexShader(FVF_VERTEX);

    for (i = 0; i < 64; i++) {

        mWorld._41 = -22.0f + (float)(i % 8) * 6.0f;
//        mWorld._42 = 22.0f - (float)(UINT)((float)i / 8.0f) * 6.0f;
        mWorld._42 = 22.0f - ((float)i / 8.0f) * 6.0f;
        m_pDevice->SetTransform(D3DTS_WORLD, &mWorld);

        // Render
        m_pDevice->SetTextureStageState(0, D3DTSS_MIPFILTER, m_patx[i].d3dtft);
        m_pDevice->SetTexture(0, m_patx[i].pd3dt);
        m_pDevice->SetCurrentTexturePalette(i);

        m_pDevice->DrawPrimitiveUP(D3DPT_TRIANGLEFAN, 2, m_prVertices, sizeof(VERTEX));
    }

    // Display the adapter mode
    ShowDisplayMode();

    // Display the frame rate
    ShowFrameRate();

    // Display the console
    m_pDisplay->ShowConsole();

    // Fade out the scene on exit
    if (m_pfnFade) {
        (this->*m_pfnFade)();
    }

    // End the scene
    m_pDevice->EndScene();

    // Update the screen
    m_pDevice->Present(NULL, NULL, NULL, NULL);

    return TRUE;
}

//******************************************************************************
//
// Method:
//
//     ProcessInput
//
// Description:
//
//     Process user input for the scene.
//
// Arguments:
//
//     None.
//
// Return Value:
//
//     None.
//
//******************************************************************************
void CAlphaPalette1::ProcessInput() {

    CScene::ProcessInput();
}
//******************************************************************************
//
// Method:
//
//     InitView
//
// Description:
//
//     Initialize the camera view in the scene.
//
// Arguments:
//
//     None.
//
// Return Value:
//
//     TRUE on success, FALSE on failure.
//
//******************************************************************************
BOOL CAlphaPalette1::InitView() {

    if (!m_pDisplay) {
        return FALSE;
    }

    // Set the view position
    m_camInitial.vPosition     = D3DXVECTOR3(0.0f, 0.0f, -90.0f);
    m_camInitial.vInterest     = D3DXVECTOR3(0.0f, 0.0f, 0.0f);
    m_camInitial.fRoll         = 0.0f;
    m_camInitial.fFieldOfView  = M_PI / 4.0f;
    m_camInitial.fNearPlane    = 0.1f;
    m_camInitial.fFarPlane     = 1000.0f;
    m_pDisplay->SetCamera(&m_camInitial);

    return m_pDisplay->SetView(&m_camInitial);
}

//******************************************************************************
// Scene window procedure (pseudo-subclassed off the main window procedure)
//******************************************************************************

//******************************************************************************
//
// Function:
//
//     WndProc
//
// Description:
//
//     Scene window procedure to process messages received by the main 
//     application window.
//
// Arguments:
//
//     LRESULT* plr             - Result of the message processing
//
//     HWND hWnd                - Application window
//
//     UINT uMsg                - Message to process
//
//     WPARAM wParam            - First message parameter
//
//     LPARAM lParam            - Second message parameter
//
// Return Value:
//
//     TRUE if the message was handled, FALSE otherwise.
//
//******************************************************************************
BOOL CAlphaPalette1::WndProc(LRESULT* plr, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam) {

    *plr = 0;

#ifndef UNDER_XBOX

    switch (uMsg) {

        case WM_KEYDOWN:

            switch (wParam) {

                case VK_F12: // Toggle pause state
                    m_bPaused = !m_bPaused;
                    return TRUE;
            }

            break;
    }

#endif // !UNDER_XBOX

    return CScene::WndProc(plr, hWnd, uMsg, wParam, lParam);
}

//******************************************************************************
static BOOL RandomizePalette(CTexture8* pd3dt, D3DCOLOR* pcPalette) {

    D3DCOLOR                pcPalNew[256];
    D3DCOLOR                c;
    BYTE                    translation[256];
    UINT                    uIndex;
    D3DSURFACE_DESC         d3dsd;
    D3DLOCKED_RECT          d3dlr;
    LPBYTE                  pdst;
    UINT                    i, j;
    HRESULT                 hr;

    if (!pd3dt) {
        return FALSE;
    }

    pd3dt->GetLevelDesc(0, &d3dsd);

    // Initialize the new palette entries
    memcpy(pcPalNew, pcPalette, 256 * sizeof(D3DCOLOR));

    // Randomize the palette entries
    for (i = 0; i < 256; i++) {
        uIndex = rand() % 256;
        c = pcPalNew[uIndex];
        pcPalNew[uIndex] = pcPalNew[i];
        pcPalNew[i] = c;
    }

    // Build a translation table between old and new palettes
    for (i = 0; i < 256; i++) {
        for (j = 0; j < 256; j++) {
            if (pcPalNew[j] == pcPalette[i]) {
                translation[i] = (BYTE)j;
                break;
            }
        }
    }

    hr = pd3dt->LockRect(0, &d3dlr, NULL, 0);
    if (ResultFailed(hr, TEXT("IDirect3DTexture8::LockRect"))) {
        return FALSE;
    }

    // Translate the surface bits
    pdst = (LPBYTE)d3dlr.pBits;

    for (i = 0; i < d3dsd.Height; i++) {

        for (j = 0; j < d3dsd.Width; j++) {
            pdst[j] = translation[pdst[j]];
        }

        pdst += d3dlr.Pitch;
    }

    hr = pd3dt->UnlockRect(0);
    if (ResultFailed(hr, TEXT("IDirect3DTexture8::UnlockRect"))) {
        return FALSE;
    }

    if (!FilterTexture(pd3dt)) {
        return FALSE;
    }

    memcpy(pcPalette, pcPalNew, 256 * sizeof(D3DCOLOR));

    return TRUE;
}
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\test\directx\d3d\func\alphpal1\alphapal.h ===
/*******************************************************************************

Copyright (c) 2000 Microsoft Corporation.  All rights reserved.

File Name:

    alphapal.h

Author:

    Matt Bronder

Description:

    Direct3D test functions.

*******************************************************************************/

#ifndef __ALPHAPAL_H__
#define __ALPHAPAL_H__

#define MAX_DECAY   50

//******************************************************************************
typedef struct _APTEXTURE {
    CTexture8*           pd3dt;
    D3DTEXTUREFILTERTYPE d3dtft;
    UINT                 uDecay;
} APTEXTURE, *PAPTEXTURE;

//******************************************************************************
class CAlphaPalette1 : public CScene {

protected:

    VERTEX                          m_prVertices[4];
    CTexture8*                      m_pd3dtBackground;
    APTEXTURE                       m_patx[64];

public:

                                    CAlphaPalette1();
                                    ~CAlphaPalette1();

    virtual BOOL                    Create(CDisplay* pDisplay);
    virtual int                     Exhibit(int *pnExitCode);

protected:

    BOOL                            InitTexture(PAPTEXTURE patx, UINT i);

    virtual BOOL                    Prepare();
    virtual BOOL                    Setup();
    virtual BOOL                    Initialize();
    virtual void                    Efface();
    virtual void                    Update();
    virtual BOOL                    Render();

    virtual void                    ProcessInput();
    virtual BOOL                    InitView();

    virtual BOOL                    WndProc(LRESULT* plr, HWND hWnd, UINT uMsg, 
                                            WPARAM wParam, LPARAM lParam);
};

#endif //__ALPHAPAL_H__
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\test\directx\d3d\func\alphpal1\dll\sources.inc ===
!include ..\..\..\..\sources.inc

TARGETNAME=alphpal1
TARGETTYPE=LIBRARY
TARGETPATH=$(TEST_LIB_DEST)

OBJLIBFILES=\
    $(OBJLIBFILES) \
    $(TEST_LIB_PATH)\l_alpal1.lib

SOURCES=\
    include.cpp
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\test\directx\d3d\func\alphpal1\exe\include.cpp ===
#pragma comment(linker, "/include:_alphpal1_texture8")
#pragma comment(linker, "/include:_alphpal1_backgrnd")
#include "exe\main.cpp"
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\test\directx\d3d\func\alphpal1\exe\sources.inc ===
TARGETNAME=alphpal1
TARGETTYPE=PROGRAM
TARGETPATH=obj

!include ..\..\..\..\sources.inc

TARGETLIBS=\
    $(TARGETLIBS) \
    $(TEST_LIB_PATH)\d3dlocus.lib \
    $(TEST_LIB_PATH)\m_alpal1.lib \
    $(TEST_LIB_PATH)\l_alpal1.lib

SOURCES=\
    include.cpp
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\test\directx\d3d\func\alphpal1\media\sources.inc ===
!include ..\..\..\..\sources.inc

TARGETNAME=m_alpal1
TARGETTYPE=LIBRARY
TARGETPATH=$(TEST_LIB_DEST)

USER_C_FLAGS=$(USER_C_FLAGS) /Zm180

SOURCES=\
    texture8.bmp.cpp \
    backgrnd.bmp.cpp \
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\test\directx\d3d\func\alphpal1\media\backgrnd.bmp.cpp ===
/*******************************************************************************

Copyright (c) 2000 Microsoft Corporation.  All rights reserved.

File Name:

    backgrnd.bmp.cpp

Description

    Data file for the resource backgrnd.bmp.

*******************************************************************************/

#include "d3dlocus.h"

static BYTE g_backgrnd[] = {

   0x42, 0x4D, 0x38, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x00, 0x28, 0x00, 
   0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x18, 0x00, 0x00, 0x00, 
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x12, 0x0B, 0x00, 0x00, 0x12, 0x0B, 0x00, 0x00, 0x00, 0x00, 
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xD8, 0xB7, 0xB4, 0xD2, 0xB1, 0xAE, 0xD4, 0xB3, 0xB0, 0xD2, 
   0xB1, 0xAE, 0xD4, 0xB3, 0xB0, 0xD4, 0xB3, 0xB0, 0xD3, 0xB2, 0xAF, 0xD4, 0xB3, 0xB0, 0xD4, 0xB3, 
   0xB0, 0xD6, 0xB5, 0xB2, 0xD6, 0xB5, 0xB2, 0xD7, 0xB6, 0xB3, 0xD4, 0xB3, 0xB0, 0xD5, 0xB4, 0xB1, 
   0xD6, 0xB5, 0xB2, 0xD8, 0xB7, 0xB4, 0xCF, 0xAE, 0xAB, 0xD2, 0xB1, 0xAE, 0xD1, 0xB0, 0xAD, 0xD2, 
   0xB1, 0xAE, 0xD3, 0xB2, 0xAF, 0xD5, 0xB4, 0xB1, 0xD9, 0xB8, 0xB5, 0xDC, 0xBB, 0xB8, 0xDD, 0xBC, 
   0xB9, 0xDD, 0xBC, 0xB9, 0xD9, 0xB8, 0xB5, 0xD3, 0xB2, 0xAF, 0xD6, 0xB5, 0xB2, 0xD1, 0xB0, 0xAD, 
   0xD7, 0xB6, 0xB3, 0xE3, 0xC2, 0xBF, 0xDB, 0xBA, 0xB7, 0xD6, 0xB5, 0xB2, 0xD8, 0xB7, 0xB4, 0xDB, 
   0xBA, 0xB7, 0xDA, 0xB9, 0xB6, 0xD3, 0xB2, 0xAF, 0xD7, 0xB6, 0xB3, 0xDA, 0xB9, 0xB6, 0xD9, 0xB8, 
   0xB5, 0xD7, 0xB6, 0xB3, 0xD6, 0xB5, 0xB2, 0xDA, 0xB9, 0xB6, 0xDD, 0xBC, 0xB9, 0xDC, 0xBB, 0xB8, 
   0xD7, 0xB6, 0xB4, 0xD5, 0xB4, 0xB1, 0xD8, 0xB7, 0xB4, 0xE3, 0xC2, 0xBF, 0xDB, 0xB9, 0xB7, 0xD8, 
   0xB7, 0xB4, 0xDC, 0xBB, 0xB8, 0xE1, 0xC0, 0xBD, 0xD7, 0xB6, 0xB3, 0xD2, 0xB1, 0xAE, 0xDF, 0xBE, 
   0xBB, 0xEA, 0xC9, 0xC6, 0xF1, 0xD0, 0xCD, 0xE8, 0xC8, 0xC6, 0xE5, 0xC7, 0xC4, 0xE7, 0xCB, 0xC7, 
   0xDE, 0xC2, 0xBE, 0xE4, 0xCA, 0xC6, 0xE0, 0xC7, 0xC3, 0xDC, 0xC3, 0xBF, 0xDE, 0xC5, 0xC1, 0xDD, 
   0xC2, 0xBE, 0xDA, 0xBE, 0xBA, 0xD9, 0xBB, 0xB7, 0xDF, 0xBF, 0xBC, 0xDB, 0xBC, 0xB9, 0xD6, 0xB7, 
   0xB4, 0xD8, 0xB9, 0xB6, 0xD3, 0xB4, 0xB1, 0xD2, 0xB3, 0xB0, 0xD3, 0xB4, 0xB1, 0xCB, 0xAC, 0xA9, 
   0xD3, 0xB2, 0xAF, 0xD4, 0xB1, 0xAE, 0xD5, 0xB3, 0xB1, 0xD6, 0xB7, 0xB3, 0xD3, 0xB7, 0xB3, 0xD4, 
   0xBA, 0xB6, 0xCD, 0xB4, 0xB0, 0xC2, 0xAA, 0xA2, 0xB0, 0x9A, 0x92, 0xA7, 0x94, 0x8C, 0xD0, 0xBC, 
   0xB4, 0xDD, 0xC6, 0xBE, 0xC5, 0xA7, 0xA1, 0xBD, 0x9E, 0x99, 0xE7, 0xC8, 0xC5, 0xF3, 0xD6, 0xD2, 
   0xE5, 0xC8, 0xC4, 0xD9, 0xBF, 0xBB, 0xD6, 0xBD, 0xB9, 0xCB, 0xB2, 0xAE, 0xC5, 0xAA, 0xA3, 0xBF, 
   0xA3, 0x9C, 0xC0, 0xA3, 0x9D, 0xC6, 0xA7, 0xA2, 0xB9, 0x97, 0x94, 0xD7, 0xB3, 0xB2, 0xC6, 0xA3, 
   0xA0, 0xDF, 0xC4, 0xC0, 0xB7, 0xAF, 0xB2, 0x45, 0x4B, 0x54, 0x36, 0x4B, 0x5A, 0x5B, 0x76, 0x87, 
   0x74, 0x91, 0xA2, 0x72, 0x8D, 0xA0, 0xBC, 0xC7, 0xD3, 0xF3, 0xE8, 0xEB, 0xF5, 0xDE, 0xDA, 0xF6, 
   0xDF, 0xD7, 0xF2, 0xE3, 0xDB, 0xC8, 0xC7, 0xC6, 0x65, 0x6E, 0x75, 0x75, 0x85, 0x8D, 0x63, 0x7C, 
   0x84, 0x1F, 0x35, 0x3D, 0x3A, 0x4A, 0x4F, 0x4E, 0x56, 0x59, 0x60, 0x59, 0x61, 0xC5, 0xBD, 0xC3, 
   0xF0, 0xE5, 0xE9, 0xF9, 0xEE, 0xEE, 0xF8, 0xE7, 0xE4, 0xFB, 0xE7, 0xE1, 0xF5, 0xE7, 0xE4, 0xED, 
   0xE3, 0xE6, 0xF1, 0xE0, 0xE3, 0xF0, 0xD9, 0xDC, 0xEE, 0xD5, 0xD7, 0xEB, 0xD3, 0xD3, 0xD6, 0xC1, 
   0xC0, 0xC3, 0xB3, 0xB0, 0x60, 0x5C, 0x5C, 0x4E, 0x58, 0x5C, 0x8A, 0x8E, 0x96, 0xD8, 0xCD, 0xD6, 
   0xE1, 0xD1, 0xD5, 0x6D, 0x71, 0x70, 0x4C, 0x5F, 0x5E, 0x56, 0x66, 0x65, 0x30, 0x3D, 0x3D, 0x3D, 
   0x47, 0x47, 0x44, 0x4B, 0x4C, 0x42, 0x48, 0x49, 0x3E, 0x46, 0x48, 0x3F, 0x48, 0x4C, 0x34, 0x3D, 
   0x40, 0x35, 0x3E, 0x41, 0x39, 0x42, 0x45, 0x33, 0x3C, 0x3F, 0x31, 0x3C, 0x3E, 0x33, 0x42, 0x40, 
   0x31, 0x3B, 0x38, 0x2F, 0x33, 0x31, 0x31, 0x36, 0x37, 0x33, 0x43, 0x4C, 0x48, 0x5F, 0x6E, 0x66, 
   0x82, 0x98, 0x74, 0x8E, 0xA4, 0x6A, 0x80, 0x8E, 0x78, 0x88, 0x8F, 0x41, 0x4F, 0x53, 0x3A, 0x49, 
   0x4D, 0x40, 0x4E, 0x51, 0x40, 0x4B, 0x49, 0x3B, 0x46, 0x45, 0x3A, 0x47, 0x49, 0x3D, 0x4B, 0x51, 
   0x54, 0x65, 0x6D, 0x58, 0x6A, 0x73, 0x50, 0x64, 0x6A, 0x42, 0x58, 0x5C, 0x47, 0x5E, 0x66, 0x68, 
   0x80, 0x8E, 0x57, 0x70, 0x83, 0x5D, 0x78, 0x8F, 0x57, 0x71, 0x8B, 0x64, 0x83, 0xA0, 0x68, 0x88, 
   0xA3, 0x64, 0x86, 0x9A, 0x62, 0x80, 0x8F, 0x41, 0x58, 0x63, 0x42, 0x51, 0x59, 0x38, 0x44, 0x4C, 
   0x4D, 0x55, 0x5C, 0xAB, 0xAA, 0xAF, 0xEE, 0xE2, 0xE5, 0xF2, 0xDF, 0xE0, 0xC0, 0xAB, 0xA9, 0xE4, 
   0xCF, 0xCA, 0xF7, 0xE6, 0xE4, 0xF7, 0xE6, 0xE5, 0xF5, 0xE4, 0xE3, 0xF4, 0xE3, 0xE1, 0xF1, 0xE0, 
   0xDF, 0xF4, 0xE2, 0xE1, 0xF8, 0xE7, 0xE7, 0xF6, 0xE8, 0xEA, 0xED, 0xE8, 0xE9, 0x78, 0x7C, 0x7E, 
   0x52, 0x5D, 0x60, 0x38, 0x46, 0x49, 0x39, 0x47, 0x4C, 0x48, 0x56, 0x5C, 0x35, 0x3C, 0x41, 0xC0, 
   0xC1, 0xC2, 0xB0, 0xAF, 0xB2, 0x64, 0x67, 0x6C, 0x89, 0x93, 0x9C, 0x47, 0x53, 0x5C, 0x65, 0x75, 
   0x7E, 0x40, 0x56, 0x5D, 0x31, 0x4D, 0x52, 0x3B, 0x59, 0x5E, 0x65, 0x80, 0x86, 0x52, 0x6A, 0x71, 
   0x52, 0x67, 0x6F, 0x60, 0x75, 0x7C, 0x4C, 0x60, 0x67, 0x68, 0x7C, 0x83, 0x5B, 0x71, 0x79, 0x51, 
   0x68, 0x73, 0x5B, 0x74, 0x82, 0x63, 0x7B, 0x8A, 0x53, 0x66, 0x71, 0x35, 0x42, 0x49, 0x39, 0x3F, 
   0x42, 0x6E, 0x6E, 0x6E, 0x69, 0x62, 0x61, 0x62, 0x45, 0x41, 0x68, 0x4A, 0x43, 0x64, 0x47, 0x3C, 
   0x69, 0x4F, 0x40, 0x67, 0x4D, 0x3C, 0x67, 0x4F, 0x39, 0x67, 0x4E, 0x3B, 0x67, 0x4C, 0x3E, 0x67, 
   0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x66, 0x4B, 
   0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 
   0x66, 0x4B, 0x3D, 0x65, 0x4B, 0x3D, 0xDB, 0xBA, 0xB7, 0xDB, 0xBA, 0xB6, 0xDA, 0xB9, 0xB6, 0xD9, 
   0xB8, 0xB5, 0xDC, 0xBC, 0xB8, 0xDD, 0xBC, 0xB8, 0xD8, 0xB7, 0xB4, 0xD4, 0xB3, 0xB0, 0xD7, 0xB6, 
   0xB3, 0xDB, 0xBA, 0xB7, 0xDB, 0xBA, 0xB7, 0xE1, 0xC0, 0xBD, 0xE0, 0xBF, 0xBC, 0xDA, 0xB9, 0xB6, 
   0xD8, 0xB7, 0xB4, 0xD9, 0xB8, 0xB5, 0xD4, 0xB3, 0xB0, 0xD6, 0xB5, 0xB2, 0xD6, 0xB5, 0xB2, 0xD7, 
   0xB6, 0xB3, 0xD8, 0xB7, 0xB4, 0xDA, 0xB9, 0xB6, 0xDD, 0xBC, 0xB9, 0xDD, 0xBC, 0xB9, 0xDB, 0xBA, 
   0xB7, 0xD9, 0xB8, 0xB5, 0xD9, 0xB8, 0xB5, 0xD7, 0xB6, 0xB3, 0xD6, 0xB5, 0xB2, 0xCB, 0xAA, 0xA7, 
   0xD1, 0xB0, 0xAD, 0xD6, 0xB5, 0xB2, 0xCB, 0xAA, 0xA7, 0xD1, 0xB0, 0xAD, 0xD7, 0xB6, 0xB3, 0xDD, 
   0xBC, 0xB9, 0xD7, 0xB6, 0xB3, 0xD5, 0xB4, 0xB1, 0xE1, 0xC0, 0xBD, 0xDB, 0xBA, 0xB7, 0xD7, 0xB6, 
   0xB3, 0xD7, 0xB6, 0xB3, 0xDA, 0xB9, 0xB6, 0xDB, 0xBA, 0xB7, 0xDA, 0xB9, 0xB6, 0xD8, 0xB7, 0xB4, 
   0xD7, 0xB6, 0xB3, 0xD9, 0xB8, 0xB5, 0xDB, 0xBB, 0xB7, 0xD9, 0xB8, 0xB4, 0xE3, 0xC2, 0xBF, 0xE0, 
   0xBF, 0xBC, 0xD9, 0xB8, 0xB4, 0xD5, 0xB4, 0xB0, 0xD7, 0xB6, 0xB2, 0xD3, 0xB2, 0xAE, 0xD5, 0xB4, 
   0xB0, 0xDC, 0xBB, 0xB8, 0xE2, 0xC2, 0xBE, 0xEB, 0xCB, 0xC9, 0xE9, 0xCB, 0xC8, 0xE5, 0xC7, 0xC3, 
   0xE7, 0xCB, 0xC7, 0xE7, 0xCD, 0xC9, 0xDF, 0xC6, 0xC2, 0xDE, 0xC5, 0xC1, 0xD9, 0xC0, 0xBC, 0xD8, 
   0xBD, 0xB9, 0xDC, 0xC0, 0xBC, 0xE3, 0xC5, 0xC2, 0xE3, 0xC4, 0xC1, 0xD5, 0xB6, 0xB3, 0xD7, 0xB8, 
   0xB5, 0xDB, 0xBC, 0xB9, 0xD4, 0xB5, 0xB2, 0xCE, 0xAF, 0xAC, 0xCE, 0xAF, 0xAC, 0xC6, 0xA8, 0xA5, 
   0xD1, 0xB0, 0xAD, 0xD9, 0xB6, 0xB3, 0xD7, 0xB6, 0xB3, 0xD2, 0xB3, 0xAF, 0xC8, 0xAC, 0xA8, 0xC6, 
   0xAB, 0xA7, 0xC4, 0xA9, 0xA5, 0xC7, 0xAD, 0xA6, 0xB6, 0xA0, 0x98, 0xAD, 0x99, 0x91, 0x9B, 0x86, 
   0x7E, 0xBC, 0xA5, 0x9D, 0xD1, 0xB3, 0xAC, 0xBF, 0x9F, 0x9B, 0xC4, 0xA5, 0xA2, 0xF2, 0xD6, 0xD2, 
   0xF3, 0xD7, 0xD3, 0xE1, 0xC5, 0xC1, 0xD5, 0xBB, 0xB7, 0xCB, 0xB2, 0xAE, 0xC1, 0xA5, 0x9E, 0xC0, 
   0xA4, 0x9D, 0xC3, 0xA6, 0xA0, 0xC0, 0xA1, 0x9D, 0xBE, 0x9D, 0x9B, 0xC9, 0xA8, 0xA8, 0xD2, 0xB2, 
   0xAF, 0xED, 0xD8, 0xD4, 0x9F, 0x97, 0x9B, 0x3C, 0x42, 0x4B, 0x32, 0x44, 0x52, 0x67, 0x7E, 0x8E, 
   0x7B, 0x93, 0xA3, 0x83, 0x95, 0xA6, 0xDE, 0xE2, 0xEE, 0xF2, 0xE3, 0xE5, 0xF6, 0xE2, 0xDD, 0xF1, 
   0xDE, 0xD8, 0xEC, 0xE0, 0xDA, 0xC2, 0xC3, 0xC5, 0x5F, 0x6A, 0x74, 0x78, 0x88, 0x92, 0x29, 0x40, 
   0x4B, 0x16, 0x2B, 0x34, 0x51, 0x60, 0x66, 0x7E, 0x86, 0x8A, 0xC8, 0xC2, 0xC7, 0xF8, 0xF1, 0xF5, 
   0xF6, 0xEC, 0xEE, 0xF6, 0xEA, 0xE9, 0xFE, 0xEE, 0xEB, 0xFF, 0xED, 0xE7, 0xF8, 0xE7, 0xE3, 0xE7, 
   0xD6, 0xD7, 0xED, 0xD7, 0xD8, 0xF0, 0xD7, 0xD8, 0xE7, 0xCC, 0xCC, 0xD8, 0xC2, 0xC0, 0xD6, 0xC2, 
   0xC1, 0xC0, 0xB2, 0xB1, 0x64, 0x62, 0x62, 0x58, 0x63, 0x66, 0xA0, 0xA5, 0xAB, 0xE4, 0xDA, 0xE2, 
   0xD2, 0xC4, 0xC7, 0x83, 0x86, 0x86, 0x72, 0x82, 0x80, 0x43, 0x50, 0x4F, 0x37, 0x42, 0x43, 0x3D, 
   0x46, 0x46, 0x46, 0x4B, 0x4B, 0x3F, 0x43, 0x44, 0x3D, 0x45, 0x47, 0x3E, 0x48, 0x4B, 0x3A, 0x44, 
   0x46, 0x3E, 0x48, 0x4A, 0x3B, 0x45, 0x48, 0x37, 0x41, 0x44, 0x37, 0x43, 0x45, 0x3A, 0x49, 0x48, 
   0x35, 0x3F, 0x3D, 0x34, 0x39, 0x38, 0x3C, 0x45, 0x46, 0x3F, 0x51, 0x5A, 0x68, 0x81, 0x90, 0x70, 
   0x8E, 0xA3, 0x60, 0x7C, 0x90, 0x65, 0x7B, 0x88, 0x79, 0x8A, 0x90, 0x39, 0x45, 0x4A, 0x3D, 0x49, 
   0x4E, 0x3F, 0x4C, 0x4F, 0x43, 0x4D, 0x4C, 0x3A, 0x44, 0x44, 0x3C, 0x48, 0x4C, 0x3D, 0x4B, 0x51, 
   0x55, 0x66, 0x6E, 0x5A, 0x6C, 0x75, 0x5D, 0x71, 0x78, 0x45, 0x5B, 0x60, 0x58, 0x6F, 0x78, 0x66, 
   0x7F, 0x8C, 0x5A, 0x74, 0x86, 0x56, 0x71, 0x88, 0x50, 0x6D, 0x85, 0x5C, 0x7C, 0x97, 0x71, 0x93, 
   0xAB, 0x5B, 0x7B, 0x8F, 0x45, 0x62, 0x6F, 0x45, 0x5C, 0x65, 0x3E, 0x4C, 0x53, 0x30, 0x3A, 0x41, 
   0x77, 0x7D, 0x82, 0xD6, 0xD4, 0xD8, 0xEB, 0xDF, 0xE1, 0xED, 0xDA, 0xDA, 0xDC, 0xC7, 0xC5, 0xF1, 
   0xDC, 0xD8, 0xF4, 0xE6, 0xE3, 0xF5, 0xE7, 0xE5, 0xF2, 0xE4, 0xE2, 0xF4, 0xE6, 0xE4, 0xF4, 0xE6, 
   0xE4, 0xF4, 0xE6, 0xE4, 0xF4, 0xE6, 0xE5, 0xF5, 0xE9, 0xE9, 0xE7, 0xE2, 0xE3, 0x55, 0x5C, 0x61, 
   0x56, 0x64, 0x6A, 0x3B, 0x4B, 0x54, 0x40, 0x52, 0x5D, 0x40, 0x4E, 0x59, 0x90, 0x97, 0x9F, 0xDC, 
   0xDD, 0xE1, 0x77, 0x74, 0x79, 0xA4, 0xA5, 0xAB, 0x57, 0x5F, 0x67, 0x6C, 0x77, 0x81, 0x40, 0x4F, 
   0x59, 0x25, 0x39, 0x42, 0x48, 0x63, 0x6A, 0x4C, 0x67, 0x6F, 0x6C, 0x86, 0x8E, 0x5A, 0x70, 0x79, 
   0x60, 0x75, 0x7D, 0x5A, 0x6F, 0x78, 0x57, 0x6C, 0x75, 0x63, 0x79, 0x81, 0x55, 0x6C, 0x75, 0x57, 
   0x6E, 0x79, 0x59, 0x70, 0x7D, 0x5C, 0x6F, 0x7C, 0x49, 0x58, 0x61, 0x62, 0x6A, 0x6F, 0x6C, 0x6B, 
   0x6C, 0x79, 0x71, 0x70, 0x59, 0x4B, 0x48, 0x64, 0x47, 0x42, 0x68, 0x4B, 0x43, 0x67, 0x4B, 0x40, 
   0x67, 0x4D, 0x3D, 0x67, 0x4D, 0x3C, 0x67, 0x4F, 0x3A, 0x67, 0x4E, 0x3C, 0x67, 0x4C, 0x3E, 0x67, 
   0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x66, 0x4B, 
   0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 
   0x66, 0x4B, 0x3D, 0x65, 0x4B, 0x3D, 0xDE, 0xBE, 0xB9, 0xE0, 0xC0, 0xBB, 0xDF, 0xBF, 0xBA, 0xDD, 
   0xBD, 0xB8, 0xDD, 0xBE, 0xB8, 0xDF, 0xBF, 0xBA, 0xDB, 0xBA, 0xB6, 0xD8, 0xB7, 0xB4, 0xDA, 0xB9, 
   0xB6, 0xDD, 0xBC, 0xB9, 0xDC, 0xBB, 0xB8, 0xE2, 0xC1, 0xBE, 0xEB, 0xCA, 0xC7, 0xEE, 0xCD, 0xCA, 
   0xE8, 0xC7, 0xC4, 0xE2, 0xC1, 0xBE, 0xE7, 0xC6, 0xC3, 0xE1, 0xC0, 0xBD, 0xE2, 0xC1, 0xBE, 0xE2, 
   0xC1, 0xBE, 0xE1, 0xC0, 0xBD, 0xDF, 0xBE, 0xBB, 0xDE, 0xBD, 0xBA, 0xE2, 0xC1, 0xBE, 0xE0, 0xBF, 
   0xBC, 0xDD, 0xBC, 0xB9, 0xDC, 0xBB, 0xB8, 0xDA, 0xB9, 0xB6, 0xD9, 0xB8, 0xB5, 0xD3, 0xB2, 0xAF, 
   0xCB, 0xAA, 0xA7, 0xC6, 0xA5, 0xA2, 0xD0, 0xAF, 0xAC, 0xD8, 0xB7, 0xB4, 0xD8, 0xB7, 0xB4, 0xD7, 
   0xB6, 0xB3, 0xD9, 0xB8, 0xB5, 0xDA, 0xB9, 0xB6, 0xD1, 0xB0, 0xAD, 0xD1, 0xB0, 0xAD, 0xD8, 0xB7, 
   0xB4, 0xDB, 0xBA, 0xB7, 0xDA, 0xB9, 0xB6, 0xDC, 0xBB, 0xB8, 0xDA, 0xB9, 0xB6, 0xD8, 0xB7, 0xB4, 
   0xD9, 0xB9, 0xB4, 0xD7, 0xB7, 0xB2, 0xD0, 0xB0, 0xAA, 0xCD, 0xAD, 0xA8, 0xD8, 0xB8, 0xB3, 0xE5, 
   0xC5, 0xC0, 0xE9, 0xC9, 0xC4, 0xD9, 0xB9, 0xB4, 0xD7, 0xB7, 0xB2, 0xD9, 0xBA, 0xB4, 0xD3, 0xB3, 
   0xAE, 0xD1, 0xB1, 0xAC, 0xD9, 0xB9, 0xB4, 0xE2, 0xC3, 0xBF, 0xEC, 0xCE, 0xCA, 0xE7, 0xCA, 0xC6, 
   0xE7, 0xCC, 0xC8, 0xF2, 0xD7, 0xD3, 0xE3, 0xCA, 0xC6, 0xDC, 0xC3, 0xBF, 0xDC, 0xC3, 0xBF, 0xD5, 
   0xBB, 0xB7, 0xD7, 0xBC, 0xB8, 0xE4, 0xC6, 0xC2, 0xDF, 0xBF, 0xBD, 0xD2, 0xB3, 0xB0, 0xD4, 0xB5, 
   0xB2, 0xCC, 0xAD, 0xAA, 0xCF, 0xB0, 0xAD, 0xCA, 0xAB, 0xA8, 0xCA, 0xAB, 0xA8, 0xC9, 0xAA, 0xA7, 
   0xC3, 0xA3, 0xA0, 0xCF, 0xAE, 0xAB, 0xD8, 0xB7, 0xB4, 0xD1, 0xB2, 0xAF, 0xC8, 0xAB, 0xA7, 0xC7, 
   0xAA, 0xA6, 0xBF, 0xA3, 0x9E, 0xC4, 0xAA, 0xA4, 0x99, 0x83, 0x7B, 0x78, 0x64, 0x5C, 0x79, 0x64, 
   0x5C, 0x8F, 0x76, 0x6E, 0xC1, 0xA3, 0x9C, 0xE1, 0xC1, 0xBC, 0xCC, 0xAD, 0xAA, 0xC0, 0xA0, 0x9D, 
   0xE4, 0xC7, 0xC3, 0xF7, 0xDB, 0xD7, 0xE4, 0xC9, 0xC5, 0xD2, 0xB8, 0xB4, 0xD0, 0xB5, 0xAE, 0xCC, 
   0xAF, 0xA9, 0xBE, 0xA1, 0x9C, 0xB3, 0x97, 0x93, 0xBD, 0x9F, 0x9F, 0xBF, 0xA2, 0xA1, 0xC9, 0xAE, 
   0xAB, 0xD3, 0xC0, 0xBD, 0xB2, 0xAC, 0xB1, 0x43, 0x48, 0x51, 0x43, 0x51, 0x5F, 0x85, 0x96, 0xA5, 
   0x7A, 0x8A, 0x97, 0x9F, 0xA4, 0xB2, 0xF1, 0xED, 0xF5, 0xF1, 0xDD, 0xDF, 0xFA, 0xE3, 0xDE, 0xF6, 
   0xE6, 0xE1, 0xD6, 0xCF, 0xCC, 0x55, 0x5A, 0x5E, 0x42, 0x4F, 0x5B, 0x4B, 0x5B, 0x69, 0x09, 0x1F, 
   0x2B, 0x38, 0x49, 0x55, 0x86, 0x92, 0x9A, 0xAD, 0xB4, 0xBA, 0xF8, 0xEF, 0xF4, 0xF8, 0xED, 0xF0, 
   0xF4, 0xE9, 0xE9, 0xF4, 0xE6, 0xE5, 0xF9, 0xE7, 0xE4, 0xF8, 0xE5, 0xE0, 0xF6, 0xE2, 0xDE, 0xEB, 
   0xD4, 0xD2, 0xE8, 0xCE, 0xCC, 0xEC, 0xCF, 0xCE, 0xE8, 0xCD, 0xCC, 0xDD, 0xC9, 0xC7, 0xDB, 0xCA, 
   0xC8, 0xB5, 0xA9, 0xAB, 0x4D, 0x4D, 0x4E, 0x5A, 0x66, 0x68, 0xCB, 0xD0, 0xD5, 0xE4, 0xDC, 0xE2, 
   0xE1, 0xD8, 0xDA, 0xD7, 0xDA, 0xDA, 0x61, 0x6B, 0x6B, 0x2C, 0x35, 0x36, 0x3F, 0x47, 0x47, 0x40, 
   0x46, 0x47, 0x42, 0x45, 0x47, 0x38, 0x3C, 0x3D, 0x3D, 0x47, 0x49, 0x44, 0x50, 0x52, 0x40, 0x4C, 
   0x4E, 0x3C, 0x48, 0x4A, 0x38, 0x44, 0x46, 0x3B, 0x48, 0x4A, 0x3E, 0x4B, 0x4C, 0x3F, 0x4B, 0x4B, 
   0x37, 0x40, 0x40, 0x36, 0x3E, 0x3E, 0x2F, 0x3A, 0x3E, 0x50, 0x64, 0x6F, 0x6E, 0x89, 0x99, 0x62, 
   0x82, 0x95, 0x5A, 0x78, 0x89, 0x68, 0x7F, 0x8A, 0x44, 0x54, 0x5B, 0x38, 0x44, 0x49, 0x44, 0x4F, 
   0x53, 0x40, 0x4A, 0x4E, 0x3A, 0x44, 0x44, 0x39, 0x44, 0x46, 0x3B, 0x47, 0x4B, 0x43, 0x51, 0x57, 
   0x4F, 0x61, 0x68, 0x4D, 0x5E, 0x69, 0x59, 0x6D, 0x76, 0x48, 0x5F, 0x65, 0x64, 0x7B, 0x84, 0x5A, 
   0x72, 0x80, 0x53, 0x6D, 0x7F, 0x5E, 0x79, 0x8E, 0x54, 0x70, 0x88, 0x68, 0x89, 0xA2, 0x69, 0x8B, 
   0xA0, 0x54, 0x72, 0x83, 0x56, 0x6F, 0x7B, 0x55, 0x66, 0x6E, 0x2A, 0x36, 0x3B, 0x44, 0x4D, 0x51, 
   0xAC, 0xAF, 0xB3, 0xDC, 0xD7, 0xD9, 0xE8, 0xDA, 0xDB, 0xE8, 0xD5, 0xD5, 0xEF, 0xDA, 0xD8, 0xF7, 
   0xE3, 0xE1, 0xF5, 0xE8, 0xE6, 0xF5, 0xEA, 0xE7, 0xF3, 0xE7, 0xE5, 0xF1, 0xE5, 0xE3, 0xF4, 0xE8, 
   0xE6, 0xF5, 0xEA, 0xE8, 0xF7, 0xE9, 0xE8, 0xF1, 0xE5, 0xE6, 0xA7, 0xA4, 0xA6, 0x3A, 0x46, 0x4C, 
   0x42, 0x53, 0x5F, 0x2E, 0x41, 0x51, 0x3C, 0x4F, 0x62, 0x75, 0x82, 0x94, 0xE1, 0xE6, 0xF3, 0xE9, 
   0xE7, 0xF0, 0xD9, 0xD2, 0xD9, 0x68, 0x65, 0x6B, 0x6E, 0x71, 0x78, 0x8C, 0x96, 0xA0, 0x2D, 0x3D, 
   0x4A, 0x50, 0x64, 0x6F, 0x4A, 0x62, 0x6D, 0x61, 0x7A, 0x84, 0x65, 0x7C, 0x86, 0x4B, 0x5F, 0x6A, 
   0x5C, 0x70, 0x7B, 0x68, 0x7C, 0x87, 0x79, 0x8E, 0x99, 0x5C, 0x73, 0x7E, 0x5D, 0x71, 0x7C, 0x58, 
   0x6C, 0x77, 0x54, 0x66, 0x70, 0x4A, 0x59, 0x61, 0x65, 0x6F, 0x74, 0x6A, 0x6A, 0x6D, 0x65, 0x5C, 
   0x5B, 0x5A, 0x4A, 0x47, 0x5F, 0x49, 0x44, 0x68, 0x4B, 0x44, 0x66, 0x49, 0x40, 0x67, 0x4B, 0x40, 
   0x67, 0x4D, 0x3E, 0x67, 0x4D, 0x3C, 0x67, 0x4E, 0x3A, 0x67, 0x4D, 0x3C, 0x67, 0x4C, 0x3E, 0x67, 
   0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x66, 0x4B, 
   0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 
   0x66, 0x4B, 0x3D, 0x65, 0x4B, 0x3D, 0xE0, 0xC0, 0xBB, 0xE1, 0xC1, 0xBC, 0xE1, 0xC1, 0xBC, 0xE2, 
   0xC2, 0xBD, 0xE1, 0xC1, 0xBC, 0xE2, 0xC2, 0xBD, 0xDF, 0xBF, 0xBA, 0xDC, 0xBB, 0xB8, 0xDB, 0xBA, 
   0xB7, 0xDB, 0xBA, 0xB7, 0xDA, 0xB9, 0xB6, 0xE0, 0xBF, 0xBC, 0xE1, 0xC0, 0xBD, 0xE7, 0xC6, 0xC3, 
   0xEB, 0xCA, 0xC7, 0xE7, 0xC6, 0xC3, 0xE7, 0xC6, 0xC3, 0xE4, 0xC3, 0xC0, 0xE7, 0xC6, 0xC3, 0xE5, 
   0xC4, 0xC1, 0xE2, 0xC1, 0xBE, 0xE0, 0xBF, 0xBC, 0xDD, 0xBC, 0xB9, 0xDD, 0xBC, 0xB9, 0xDC, 0xBB, 
   0xB8, 0xDA, 0xB9, 0xB6, 0xDB, 0xBA, 0xB7, 0xDA, 0xB9, 0xB6, 0xDD, 0xBC, 0xB9, 0xDC, 0xBB, 0xB8, 
   0xDB, 0xBA, 0xB7, 0xDF, 0xBE, 0xBB, 0xE1, 0xC0, 0xBD, 0xDE, 0xBD, 0xBA, 0xDE, 0xBD, 0xBA, 0xDE, 
   0xBD, 0xBA, 0xDD, 0xBC, 0xB9, 0xDC, 0xBB, 0xB8, 0xD9, 0xB8, 0xB5, 0xD9, 0xB8, 0xB5, 0xD8, 0xB7, 
   0xB4, 0xD8, 0xB7, 0xB4, 0xD6, 0xB5, 0xB2, 0xD8, 0xB7, 0xB4, 0xDA, 0xB9, 0xB6, 0xD6, 0xB5, 0xB2, 
   0xD7, 0xB7, 0xB2, 0xD9, 0xB9, 0xB3, 0xD1, 0xB1, 0xAC, 0xCD, 0xAD, 0xA8, 0xCA, 0xAA, 0xA5, 0xD6, 
   0xB6, 0xB1, 0xDA, 0xBA, 0xB5, 0xD4, 0xB4, 0xAF, 0xD9, 0xB9, 0xB4, 0xD6, 0xB6, 0xB1, 0xD2, 0xB2, 
   0xAD, 0xCF, 0xAF, 0xAA, 0xD3, 0xB3, 0xAF, 0xCE, 0xAE, 0xAB, 0xE2, 0xC4, 0xC1, 0xF0, 0xD3, 0xCF, 
   0xE8, 0xCD, 0xC9, 0xEC, 0xD2, 0xCE, 0xF3, 0xDA, 0xD6, 0xE8, 0xCF, 0xCB, 0xDB, 0xC2, 0xBE, 0xC9, 
   0xAE, 0xAA, 0xDA, 0xBE, 0xBA, 0xD7, 0xB9, 0xB5, 0xD5, 0xB6, 0xB3, 0xD0, 0xB1, 0xAE, 0xCC, 0xAD, 
   0xAA, 0xC6, 0xA7, 0xA4, 0xC3, 0xA4, 0xA1, 0xC9, 0xAA, 0xA7, 0xCD, 0xAE, 0xAB, 0xC8, 0xA9, 0xA6, 
   0xBE, 0x9F, 0x9C, 0xBE, 0x9F, 0x9C, 0xCE, 0xAF, 0xAC, 0xDA, 0xBB, 0xB8, 0xD7, 0xB9, 0xB5, 0xC7, 
   0xAB, 0xA7, 0xC4, 0xA7, 0xA2, 0xC9, 0xAD, 0xA7, 0x93, 0x7A, 0x72, 0x7C, 0x66, 0x5E, 0x93, 0x7C, 
   0x74, 0xC4, 0xAB, 0xA4, 0xD6, 0xB6, 0xAF, 0xE3, 0xC1, 0xBC, 0xDD, 0xBC, 0xB9, 0xC9, 0xAA, 0xA7, 
   0xB7, 0x98, 0x95, 0xD4, 0xB6, 0xB2, 0xF3, 0xD7, 0xD3, 0xE8, 0xCD, 0xC9, 0xD8, 0xBA, 0xB5, 0xC4, 
   0xA7, 0xA1, 0xC8, 0xAB, 0xA6, 0xC0, 0xA4, 0xA1, 0xB2, 0x99, 0x98, 0xB0, 0x98, 0x97, 0x9A, 0x84, 
   0x83, 0xA9, 0x9B, 0x9A, 0xC9, 0xC5, 0xCA, 0x4A, 0x4F, 0x58, 0x54, 0x5D, 0x69, 0x7B, 0x85, 0x91, 
   0x80, 0x86, 0x91, 0xD3, 0xCD, 0xD8, 0xF1, 0xE2, 0xEA, 0xF6, 0xDF, 0xDE, 0xF6, 0xE0, 0xDB, 0xF8, 
   0xED, 0xE9, 0xB8, 0xB7, 0xB6, 0x2E, 0x37, 0x3E, 0x71, 0x81, 0x8E, 0x38, 0x48, 0x57, 0x14, 0x25, 
   0x35, 0x6F, 0x7C, 0x88, 0x91, 0x99, 0xA2, 0xCD, 0xD0, 0xD5, 0xF3, 0xE9, 0xEB, 0xF1, 0xE5, 0xE6, 
   0xF3, 0xE7, 0xE6, 0xF5, 0xE7, 0xE5, 0xF8, 0xE7, 0xE4, 0xF5, 0xE6, 0xE0, 0xF5, 0xDE, 0xD9, 0xF6, 
   0xDA, 0xD6, 0xE4, 0xC7, 0xC3, 0xE2, 0xC5, 0xC1, 0xE5, 0xCC, 0xCA, 0xE2, 0xD0, 0xCD, 0xB2, 0xA5, 
   0xA3, 0x54, 0x4B, 0x50, 0x47, 0x4A, 0x4F, 0x80, 0x8D, 0x8F, 0xF2, 0xF7, 0xF9, 0xEA, 0xE4, 0xE6, 
   0xC0, 0xBA, 0xBB, 0x47, 0x49, 0x4A, 0x2A, 0x2F, 0x30, 0x40, 0x45, 0x46, 0x3D, 0x42, 0x43, 0x3E, 
   0x42, 0x43, 0x3F, 0x43, 0x44, 0x40, 0x44, 0x45, 0x3C, 0x47, 0x48, 0x43, 0x4F, 0x51, 0x42, 0x4E, 
   0x50, 0x3D, 0x49, 0x4B, 0x36, 0x42, 0x44, 0x3D, 0x49, 0x4B, 0x40, 0x4C, 0x4D, 0x3D, 0x49, 0x48, 
   0x34, 0x3E, 0x40, 0x33, 0x3E, 0x41, 0x30, 0x3D, 0x44, 0x62, 0x78, 0x84, 0x69, 0x87, 0x95, 0x63, 
   0x86, 0x97, 0x5D, 0x7D, 0x8C, 0x6A, 0x82, 0x8C, 0x3D, 0x4C, 0x52, 0x4F, 0x58, 0x5C, 0x44, 0x4A, 
   0x51, 0x48, 0x4F, 0x54, 0x3F, 0x48, 0x49, 0x41, 0x4C, 0x4E, 0x41, 0x4D, 0x52, 0x3E, 0x4B, 0x53, 
   0x2E, 0x3E, 0x49, 0x57, 0x68, 0x74, 0x5C, 0x70, 0x78, 0x4D, 0x64, 0x6C, 0x63, 0x7C, 0x86, 0x58, 
   0x72, 0x80, 0x5B, 0x76, 0x87, 0x56, 0x74, 0x87, 0x58, 0x78, 0x8D, 0x67, 0x8B, 0xA0, 0x53, 0x75, 
   0x87, 0x5C, 0x78, 0x86, 0x44, 0x57, 0x5F, 0x35, 0x40, 0x46, 0x31, 0x37, 0x39, 0x54, 0x58, 0x59, 
   0x83, 0x83, 0x84, 0xAF, 0xA8, 0xA9, 0xEE, 0xDE, 0xE0, 0xF7, 0xE3, 0xE3, 0xF0, 0xDC, 0xD9, 0xFA, 
   0xEA, 0xE6, 0xF4, 0xEB, 0xE8, 0xF7, 0xED, 0xEA, 0xF6, 0xED, 0xEA, 0xF2, 0xE9, 0xE6, 0xF1, 0xE8, 
   0xE5, 0xF1, 0xE9, 0xE5, 0xF9, 0xED, 0xEC, 0xAE, 0xA3, 0xA5, 0x5A, 0x5B, 0x5E, 0x44, 0x52, 0x5C, 
   0x2F, 0x44, 0x52, 0x3A, 0x50, 0x65, 0x6C, 0x80, 0x99, 0x9A, 0xA4, 0xB9, 0xBE, 0xC1, 0xD1, 0xEE, 
   0xEA, 0xF3, 0x88, 0x7F, 0x87, 0x60, 0x5A, 0x5F, 0xB2, 0xB1, 0xB7, 0x9E, 0xA6, 0xB0, 0x45, 0x54, 
   0x62, 0x63, 0x76, 0x83, 0x54, 0x6B, 0x77, 0x75, 0x8D, 0x99, 0x5C, 0x70, 0x7D, 0x5F, 0x6F, 0x7C, 
   0x5C, 0x6E, 0x79, 0x6F, 0x81, 0x8D, 0x61, 0x75, 0x83, 0x5C, 0x70, 0x7E, 0x62, 0x74, 0x7F, 0x58, 
   0x69, 0x72, 0x3F, 0x4D, 0x52, 0x61, 0x68, 0x6A, 0x59, 0x5A, 0x5A, 0x51, 0x4B, 0x4A, 0x59, 0x4B, 
   0x46, 0x62, 0x4B, 0x46, 0x66, 0x49, 0x43, 0x68, 0x4B, 0x43, 0x69, 0x4C, 0x42, 0x67, 0x4B, 0x3F, 
   0x67, 0x4C, 0x3E, 0x67, 0x4D, 0x3D, 0x67, 0x4D, 0x3C, 0x67, 0x4D, 0x3D, 0x67, 0x4C, 0x3E, 0x67, 
   0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x66, 0x4B, 
   0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 
   0x66, 0x4B, 0x3D, 0x65, 0x4B, 0x3D, 0xDF, 0xBE, 0xB9, 0xE1, 0xC1, 0xBB, 0xDF, 0xBF, 0xB9, 0xDD, 
   0xBD, 0xB7, 0xDE, 0xBE, 0xB9, 0xE0, 0xC0, 0xBA, 0xDF, 0xBF, 0xBA, 0xDA, 0xB8, 0xB6, 0xDC, 0xBB, 
   0xB8, 0xDF, 0xBE, 0xBB, 0xE2, 0xC1, 0xBE, 0xE2, 0xC1, 0xBE, 0xE1, 0xC0, 0xBD, 0xDE, 0xBD, 0xBA, 
   0xDD, 0xBC, 0xB9, 0xE1, 0xC0, 0xBD, 0xE2, 0xC1, 0xBE, 0xE3, 0xC2, 0xBF, 0xE3, 0xC2, 0xBF, 0xE3, 
   0xC2, 0xBF, 0xE0, 0xBF, 0xBC, 0xE2, 0xC1, 0xBE, 0xE2, 0xC1, 0xBE, 0xE0, 0xBF, 0xBC, 0xE0, 0xBF, 
   0xBC, 0xE0, 0xBF, 0xBC, 0xDF, 0xBE, 0xBB, 0xDE, 0xBD, 0xBA, 0xDC, 0xBB, 0xB8, 0xDB, 0xBA, 0xB7, 
   0xDC, 0xBB, 0xB8, 0xDB, 0xBA, 0xB7, 0xDC, 0xBB, 0xB8, 0xDC, 0xBB, 0xB8, 0xDC, 0xBB, 0xB8, 0xDC, 
   0xBB, 0xB8, 0xDD, 0xBC, 0xB9, 0xDB, 0xBA, 0xB7, 0xDB, 0xBA, 0xB7, 0xD9, 0xB8, 0xB5, 0xD4, 0xB3, 
   0xB0, 0xCE, 0xAD, 0xAA, 0xCF, 0xAE, 0xAB, 0xD6, 0xB5, 0xB2, 0xD5, 0xB4, 0xB1, 0xCC, 0xAB, 0xA8, 
   0xC8, 0xA8, 0xA2, 0xCE, 0xAE, 0xA8, 0xCF, 0xAF, 0xA9, 0xC9, 0xA9, 0xA3, 0xCD, 0xAD, 0xA8, 0xD5, 
   0xB5, 0xB0, 0xCD, 0xAD, 0xA7, 0xD2, 0xB2, 0xAC, 0xD8, 0xB8, 0xB3, 0xD7, 0xB7, 0xB1, 0xD9, 0xB9, 
   0xB4, 0xD8, 0xB8, 0xB3, 0xD7, 0xB7, 0xB2, 0xCD, 0xAD, 0xAA, 0xCF, 0xB1, 0xAD, 0xE7, 0xCB, 0xC7, 
   0xF6, 0xDB, 0xD7, 0xEA, 0xD0, 0xCC, 0xF1, 0xD8, 0xD4, 0xF2, 0xDA, 0xD6, 0xDE, 0xC4, 0xC0, 0xE1, 
   0xC6, 0xC2, 0xDD, 0xC1, 0xBD, 0xD7, 0xB9, 0xB5, 0xD5, 0xB6, 0xB3, 0xCD, 0xAE, 0xAB, 0xC8, 0xA9, 
   0xA6, 0xC7, 0xA8, 0xA5, 0xC2, 0xA3, 0xA0, 0xBF, 0xA0, 0x9D, 0xC5, 0xA6, 0xA3, 0xBE, 0x9F, 0x9C, 
   0xBE, 0xA0, 0x9D, 0xBC, 0x9F, 0x9B, 0xCC, 0xAE, 0xAB, 0xCF, 0xB0, 0xAD, 0xCA, 0xAB, 0xA8, 0xCB, 
   0xAD, 0xAA, 0xCA, 0xAB, 0xA8, 0xBC, 0xA0, 0x99, 0x82, 0x69, 0x62, 0x7E, 0x67, 0x5F, 0xA3, 0x8C, 
   0x84, 0xCF, 0xB3, 0xAC, 0xC9, 0xA8, 0xA2, 0xD6, 0xB3, 0xAF, 0xDD, 0xBC, 0xB9, 0xD3, 0xB4, 0xB1, 
   0xB6, 0x96, 0x94, 0xB3, 0x95, 0x91, 0xCC, 0xAF, 0xAB, 0xF0, 0xD3, 0xCF, 0xE2, 0xC2, 0xBE, 0xC4, 
   0xA6, 0xA2, 0x94, 0x78, 0x74, 0x9F, 0x85, 0x84, 0xC3, 0xAE, 0xAD, 0xBA, 0xA6, 0xA5, 0x97, 0x87, 
   0x86, 0x94, 0x8B, 0x8C, 0x8E, 0x8D, 0x93, 0x55, 0x5A, 0x63, 0x6E, 0x74, 0x7E, 0x6F, 0x71, 0x7B, 
   0xB9, 0xB7, 0xBE, 0xF4, 0xE8, 0xEF, 0xF1, 0xDF, 0xE2, 0xF2, 0xDB, 0xD9, 0xF3, 0xE0, 0xDA, 0xEC, 
   0xE7, 0xE4, 0x8A, 0x8E, 0x92, 0x37, 0x44, 0x4E, 0x6F, 0x80, 0x8D, 0x26, 0x34, 0x44, 0x50, 0x5C, 
   0x6D, 0x87, 0x8D, 0x9A, 0xBA, 0xBD, 0xC4, 0xF1, 0xEF, 0xF2, 0xF4, 0xE8, 0xE7, 0xF1, 0xE4, 0xE3, 
   0xF3, 0xE5, 0xE3, 0xF6, 0xE7, 0xE5, 0xF6, 0xE5, 0xE2, 0xF4, 0xE4, 0xE0, 0xEF, 0xDB, 0xD5, 0xF0, 
   0xD7, 0xD1, 0xEB, 0xD1, 0xCD, 0xE1, 0xC8, 0xC6, 0xDE, 0xCA, 0xC8, 0xB8, 0xAB, 0xAA, 0x81, 0x79, 
   0x78, 0x51, 0x4A, 0x52, 0x4E, 0x51, 0x56, 0xBE, 0xCB, 0xCC, 0xE6, 0xE8, 0xE9, 0x8B, 0x85, 0x86, 
   0x27, 0x24, 0x24, 0x1D, 0x20, 0x21, 0x35, 0x3A, 0x3B, 0x3D, 0x41, 0x42, 0x3D, 0x41, 0x42, 0x3D, 
   0x42, 0x43, 0x3F, 0x43, 0x44, 0x39, 0x3D, 0x3E, 0x3E, 0x49, 0x4A, 0x3E, 0x4C, 0x4E, 0x40, 0x4D, 
   0x4F, 0x3D, 0x4A, 0x4C, 0x35, 0x41, 0x43, 0x3F, 0x4B, 0x4D, 0x3F, 0x4B, 0x4C, 0x3B, 0x47, 0x48, 
   0x38, 0x43, 0x47, 0x32, 0x3E, 0x47, 0x42, 0x52, 0x5D, 0x6C, 0x84, 0x93, 0x73, 0x92, 0xA1, 0x6B, 
   0x8D, 0x9C, 0x71, 0x90, 0x9C, 0x52, 0x69, 0x70, 0x38, 0x46, 0x4B, 0x4C, 0x55, 0x59, 0x41, 0x49, 
   0x50, 0x46, 0x4D, 0x54, 0x45, 0x4E, 0x51, 0x43, 0x4E, 0x51, 0x41, 0x4D, 0x52, 0x36, 0x43, 0x4B, 
   0x46, 0x56, 0x62, 0x69, 0x79, 0x86, 0x61, 0x75, 0x80, 0x60, 0x78, 0x81, 0x60, 0x78, 0x84, 0x52, 
   0x6D, 0x7B, 0x5D, 0x7B, 0x8B, 0x55, 0x75, 0x86, 0x68, 0x89, 0x9D, 0x63, 0x88, 0x99, 0x54, 0x74, 
   0x83, 0x51, 0x67, 0x72, 0x26, 0x32, 0x3A, 0x31, 0x35, 0x3A, 0x45, 0x43, 0x45, 0x72, 0x6F, 0x70, 
   0x6B, 0x67, 0x67, 0xB3, 0xA7, 0xA7, 0xF3, 0xE1, 0xE1, 0xF5, 0xE1, 0xE0, 0xF6, 0xE3, 0xE1, 0xF5, 
   0xE3, 0xE2, 0xF3, 0xEA, 0xE7, 0xF6, 0xEE, 0xEB, 0xF3, 0xEA, 0xE7, 0xF3, 0xEA, 0xE7, 0xF0, 0xE8, 
   0xE5, 0xF3, 0xEB, 0xE8, 0xF8, 0xED, 0xEC, 0x87, 0x7D, 0x7E, 0x5A, 0x5E, 0x61, 0x3E, 0x50, 0x59, 
   0x45, 0x5C, 0x6B, 0x5E, 0x73, 0x89, 0x66, 0x77, 0x91, 0xA3, 0xAA, 0xBF, 0xD0, 0xCF, 0xE1, 0xA0, 
   0x99, 0xA4, 0x4C, 0x42, 0x49, 0x8C, 0x86, 0x8B, 0xE1, 0xE0, 0xE4, 0x92, 0x9B, 0xA4, 0x49, 0x5B, 
   0x67, 0x5E, 0x72, 0x7E, 0x5C, 0x73, 0x7D, 0x68, 0x7E, 0x88, 0x58, 0x69, 0x75, 0x64, 0x71, 0x7D, 
   0x64, 0x71, 0x7C, 0x6E, 0x7E, 0x8B, 0x58, 0x6B, 0x7A, 0x61, 0x74, 0x81, 0x64, 0x72, 0x7D, 0x54, 
   0x60, 0x64, 0x68, 0x6D, 0x6C, 0x5F, 0x5D, 0x59, 0x56, 0x50, 0x4C, 0x57, 0x4A, 0x45, 0x60, 0x4C, 
   0x45, 0x68, 0x4B, 0x44, 0x69, 0x48, 0x3F, 0x69, 0x4D, 0x42, 0x69, 0x4C, 0x42, 0x67, 0x4C, 0x3F, 
   0x67, 0x4C, 0x3E, 0x67, 0x4D, 0x3D, 0x67, 0x4D, 0x3D, 0x67, 0x4D, 0x3E, 0x67, 0x4C, 0x3E, 0x67, 
   0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x66, 0x4B, 
   0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 
   0x66, 0x4B, 0x3D, 0x65, 0x4B, 0x3D, 0xE4, 0xC5, 0xBD, 0xE5, 0xC5, 0xBD, 0xE0, 0xC0, 0xB8, 0xDD, 
   0xBE, 0xB6, 0xDE, 0xBF, 0xB7, 0xDF, 0xBF, 0xB7, 0xDF, 0xBF, 0xB8, 0xDC, 0xBB, 0xB9, 0xDE, 0xBD, 
   0xBA, 0xE0, 0xBF, 0xBC, 0xE2, 0xC1, 0xBE, 0xE0, 0xBF, 0xBC, 0xE1, 0xC0, 0xBD, 0xE3, 0xC2, 0xBF, 
   0xE1, 0xC0, 0xBD, 0xE3, 0xC2, 0xBF, 0xE2, 0xC1, 0xBE, 0xE4, 0xC3, 0xC0, 0xE3, 0xC2, 0xBF, 0xE3, 
   0xC2, 0xBF, 0xDF, 0xBE, 0xBB, 0xDD, 0xBC, 0xB9, 0xDD, 0xBC, 0xB9, 0xDA, 0xB9, 0xB6, 0xDC, 0xBB, 
   0xB8, 0xE0, 0xBF, 0xBC, 0xDE, 0xBD, 0xBA, 0xDE, 0xBD, 0xBA, 0xDF, 0xBE, 0xBB, 0xDE, 0xBD, 0xBA, 
   0xDC, 0xBB, 0xB8, 0xDA, 0xB9, 0xB6, 0xD8, 0xB7, 0xB4, 0xDB, 0xBA, 0xB7, 0xDA, 0xB9, 0xB6, 0xD9, 
   0xB8, 0xB5, 0xDA, 0xB9, 0xB6, 0xD9, 0xB8, 0xB5, 0xD9, 0xB8, 0xB5, 0xD6, 0xB5, 0xB2, 0xD6, 0xB5, 
   0xB2, 0xD5, 0xB4, 0xB1, 0xD3, 0xB2, 0xAF, 0xD4, 0xB3, 0xB0, 0xD6, 0xB5, 0xB2, 0xD5, 0xB4, 0xB1, 
   0xD7, 0xB7, 0xAF, 0xD5, 0xB7, 0xAE, 0xD3, 0xB4, 0xAB, 0xD7, 0xB7, 0xAF, 0xDC, 0xBD, 0xB5, 0xD8, 
   0xB8, 0xB0, 0xCE, 0xAE, 0xA6, 0xDA, 0xBA, 0xB2, 0xD5, 0xB5, 0xAD, 0xD8, 0xB9, 0xB1, 0xDD, 0xBE, 
   0xB6, 0xDA, 0xBA, 0xB2, 0xD5, 0xB6, 0xAE, 0xD1, 0xB2, 0xAE, 0xD1, 0xB3, 0xB0, 0xD1, 0xB5, 0xB1, 
   0xE4, 0xCA, 0xC6, 0xF2, 0xD7, 0xD3, 0xE8, 0xCF, 0xCB, 0xF1, 0xD8, 0xD4, 0xF1, 0xD8, 0xD4, 0xE2, 
   0xC6, 0xC2, 0xD7, 0xBB, 0xB7, 0xD6, 0xB8, 0xB5, 0xD5, 0xB6, 0xB3, 0xCA, 0xAB, 0xA8, 0xC8, 0xA9, 
   0xA6, 0xC1, 0xA2, 0x9F, 0xB9, 0x9A, 0x97, 0xC2, 0xA3, 0xA0, 0xC1, 0xA2, 0x9F, 0xB5, 0x95, 0x92, 
   0xBB, 0x9D, 0x9A, 0xB2, 0x96, 0x92, 0xBB, 0x9F, 0x9A, 0xB2, 0x94, 0x91, 0xB2, 0x92, 0x90, 0xC8, 
   0xA8, 0xA5, 0x9F, 0x80, 0x7C, 0xA0, 0x82, 0x7C, 0x83, 0x69, 0x62, 0x89, 0x72, 0x6A, 0xA5, 0x8D, 
   0x85, 0xBD, 0xA0, 0x99, 0xC7, 0xA5, 0x9E, 0xCF, 0xAC, 0xA8, 0xD2, 0xB0, 0xAD, 0xD3, 0xB2, 0xAF, 
   0xD3, 0xB3, 0xB0, 0xCC, 0xAD, 0xAA, 0xB1, 0x94, 0x90, 0xE3, 0xC6, 0xC1, 0xF3, 0xD2, 0xCE, 0xE5, 
   0xC5, 0xC3, 0xA6, 0x8B, 0x88, 0x62, 0x4B, 0x49, 0x98, 0x87, 0x86, 0xAE, 0x9F, 0x9E, 0xA8, 0x9C, 
   0x9D, 0x6F, 0x6A, 0x6D, 0x4C, 0x4E, 0x54, 0x53, 0x59, 0x61, 0x59, 0x5A, 0x62, 0x94, 0x8E, 0x96, 
   0xE8, 0xDD, 0xE3, 0xF1, 0xE2, 0xE5, 0xEE, 0xDB, 0xDB, 0xED, 0xD9, 0xD4, 0xE7, 0xD8, 0xD3, 0xE4, 
   0xE1, 0xE2, 0x6F, 0x78, 0x81, 0x4B, 0x59, 0x66, 0x6C, 0x7B, 0x87, 0x4F, 0x59, 0x68, 0x82, 0x89, 
   0x98, 0xCA, 0xC9, 0xD4, 0xF6, 0xF0, 0xF6, 0xF0, 0xE7, 0xE8, 0xF1, 0xE1, 0xDE, 0xF4, 0xE4, 0xE1, 
   0xF6, 0xE5, 0xE3, 0xF3, 0xE3, 0xE0, 0xF3, 0xE2, 0xDF, 0xF2, 0xE1, 0xDE, 0xEC, 0xDC, 0xD7, 0xE5, 
   0xD4, 0xCE, 0xE1, 0xCE, 0xCA, 0xE1, 0xCF, 0xCE, 0xC6, 0xB8, 0xB8, 0x88, 0x81, 0x83, 0x51, 0x4F, 
   0x52, 0x4C, 0x48, 0x53, 0x9E, 0xA4, 0xAB, 0x96, 0xA3, 0xA4, 0x42, 0x4A, 0x48, 0x2F, 0x2C, 0x2B, 
   0x29, 0x2B, 0x29, 0x27, 0x2D, 0x2D, 0x3A, 0x3D, 0x3E, 0x39, 0x3D, 0x3E, 0x37, 0x3C, 0x3D, 0x35, 
   0x3C, 0x3C, 0x33, 0x3C, 0x3C, 0x3B, 0x43, 0x43, 0x44, 0x51, 0x53, 0x3E, 0x4C, 0x4E, 0x3A, 0x49, 
   0x4B, 0x39, 0x47, 0x49, 0x39, 0x47, 0x49, 0x3D, 0x4C, 0x4E, 0x3A, 0x47, 0x48, 0x36, 0x3F, 0x41, 
   0x3E, 0x48, 0x4F, 0x3D, 0x4B, 0x57, 0x63, 0x75, 0x85, 0x77, 0x92, 0xA3, 0x6F, 0x90, 0xA0, 0x64, 
   0x83, 0x90, 0x71, 0x8B, 0x96, 0x38, 0x4B, 0x51, 0x42, 0x50, 0x52, 0x42, 0x4C, 0x50, 0x41, 0x4A, 
   0x51, 0x42, 0x4B, 0x52, 0x47, 0x4F, 0x52, 0x42, 0x4B, 0x50, 0x38, 0x43, 0x4A, 0x3B, 0x48, 0x51, 
   0x40, 0x50, 0x5C, 0x5F, 0x6F, 0x7C, 0x6A, 0x7F, 0x8A, 0x6C, 0x84, 0x8F, 0x63, 0x7C, 0x88, 0x50, 
   0x6A, 0x78, 0x57, 0x76, 0x85, 0x5E, 0x7F, 0x8F, 0x70, 0x91, 0xA2, 0x62, 0x84, 0x93, 0x67, 0x82, 
   0x8F, 0x39, 0x47, 0x51, 0x2C, 0x2E, 0x35, 0x47, 0x42, 0x45, 0x81, 0x76, 0x77, 0x8F, 0x85, 0x84, 
   0xBA, 0xB0, 0xAF, 0xEE, 0xE2, 0xE1, 0xF8, 0xE4, 0xE3, 0xF7, 0xE3, 0xE2, 0xF9, 0xE6, 0xE5, 0xF5, 
   0xE5, 0xE4, 0xF5, 0xEA, 0xE8, 0xF8, 0xED, 0xEA, 0xF3, 0xE9, 0xE6, 0xF1, 0xE7, 0xE4, 0xF3, 0xE8, 
   0xE6, 0xF4, 0xEA, 0xE7, 0xF1, 0xE6, 0xE5, 0x78, 0x70, 0x72, 0x53, 0x59, 0x5D, 0x30, 0x43, 0x4C, 
   0x47, 0x5E, 0x6C, 0x6B, 0x7D, 0x91, 0x64, 0x6E, 0x87, 0x81, 0x83, 0x96, 0x5B, 0x57, 0x65, 0x50, 
   0x46, 0x50, 0xA3, 0x98, 0x9C, 0xD9, 0xD5, 0xD7, 0xEE, 0xF0, 0xF2, 0x7D, 0x88, 0x8F, 0x5F, 0x72, 
   0x7C, 0x5C, 0x70, 0x79, 0x57, 0x6E, 0x77, 0x47, 0x5A, 0x64, 0x60, 0x6E, 0x79, 0x64, 0x6E, 0x78, 
   0x83, 0x8D, 0x94, 0x56, 0x63, 0x6D, 0x5A, 0x69, 0x77, 0x63, 0x72, 0x7F, 0x58, 0x62, 0x68, 0x65, 
   0x6A, 0x69, 0x63, 0x5E, 0x59, 0x57, 0x4C, 0x44, 0x56, 0x48, 0x40, 0x5D, 0x4A, 0x41, 0x65, 0x4D, 
   0x42, 0x67, 0x4B, 0x3F, 0x69, 0x4A, 0x3E, 0x6A, 0x4E, 0x41, 0x69, 0x4E, 0x41, 0x68, 0x4D, 0x3F, 
   0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x67, 
   0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x66, 0x4B, 
   0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 
   0x66, 0x4B, 0x3D, 0x65, 0x4B, 0x3D, 0xE2, 0xC3, 0xBA, 0xE3, 0xC4, 0xBB, 0xE1, 0xC2, 0xB9, 0xE1, 
   0xC2, 0xB9, 0xE0, 0xC1, 0xB8, 0xDF, 0xC0, 0xB7, 0xE0, 0xC1, 0xB9, 0xE1, 0xC0, 0xBD, 0xE1, 0xBF, 
   0xBD, 0xE0, 0xBF, 0xBC, 0xE0, 0xBF, 0xBC, 0xDF, 0xBE, 0xBB, 0xE1, 0xC0, 0xBD, 0xE2, 0xC1, 0xBE, 
   0xE0, 0xBF, 0xBC, 0xDF, 0xBE, 0xBB, 0xDF, 0xBE, 0xBB, 0xE5, 0xC4, 0xC1, 0xE3, 0xC2, 0xBF, 0xE3, 
   0xC2, 0xBF, 0xDD, 0xBC, 0xB9, 0xDC, 0xBB, 0xB8, 0xDE, 0xBD, 0xBA, 0xDC, 0xBB, 0xB8, 0xDC, 0xBB, 
   0xB8, 0xDF, 0xBE, 0xBB, 0xE0, 0xBF, 0xBC, 0xE1, 0xC0, 0xBD, 0xE2, 0xC1, 0xBE, 0xE2, 0xC1, 0xBE, 
   0xE3, 0xC2, 0xBF, 0xE1, 0xC0, 0xBD, 0xDE, 0xBD, 0xBA, 0xDA, 0xB9, 0xB6, 0xD9, 0xB8, 0xB5, 0xD8, 
   0xB7, 0xB4, 0xDB, 0xBA, 0xB7, 0xDB, 0xBA, 0xB7, 0xDB, 0xBA, 0xB7, 0xD8, 0xB7, 0xB4, 0xD7, 0xB6, 
   0xB3, 0xD7, 0xB6, 0xB3, 0xD8, 0xB7, 0xB4, 0xD7, 0xB6, 0xB3, 0xD8, 0xB7, 0xB5, 0xDA, 0xBA, 0xB6, 
   0xDC, 0xBD, 0xB4, 0xD9, 0xBA, 0xB0, 0xD3, 0xB4, 0xAB, 0xD3, 0xB4, 0xAB, 0xD0, 0xB1, 0xA8, 0xD4, 
   0xB5, 0xAC, 0xD6, 0xB7, 0xAE, 0xD2, 0xB3, 0xAA, 0xCF, 0xB0, 0xA7, 0xD0, 0xB1, 0xA8, 0xC9, 0xAB, 
   0xA1, 0xE2, 0xC3, 0xB8, 0xD5, 0xB6, 0xAE, 0xCC, 0xAD, 0xA9, 0xCE, 0xB0, 0xAC, 0xD1, 0xB4, 0xB0, 
   0xB5, 0x9A, 0x96, 0xD9, 0xBE, 0xBA, 0xE9, 0xD0, 0xCC, 0xDD, 0xC4, 0xC0, 0xF6, 0xDE, 0xDA, 0xED, 
   0xD3, 0xCF, 0xD1, 0xB5, 0xB1, 0xCE, 0xB0, 0xAC, 0xCF, 0xB0, 0xAD, 0xC9, 0xAA, 0xA7, 0xC0, 0xA1, 
   0x9E, 0xBE, 0x9F, 0x9C, 0xBC, 0x9D, 0x9A, 0xBE, 0x9F, 0x9C, 0xC8, 0xA9, 0xA6, 0x92, 0x73, 0x71, 
   0xA2, 0x85, 0x82, 0xA6, 0x8B, 0x87, 0x92, 0x76, 0x72, 0x91, 0x73, 0x70, 0xB2, 0x92, 0x8F, 0xB6, 
   0x94, 0x91, 0x81, 0x5F, 0x5C, 0xA3, 0x85, 0x7F, 0x99, 0x7E, 0x77, 0x92, 0x78, 0x71, 0xB4, 0x9A, 
   0x93, 0xB3, 0x96, 0x8F, 0xC7, 0xA4, 0x9E, 0xCF, 0xAB, 0xA6, 0xD5, 0xB1, 0xAF, 0xD0, 0xAE, 0xAB, 
   0xD3, 0xB3, 0xB0, 0xDD, 0xBE, 0xBB, 0xC8, 0xAA, 0xA6, 0xD0, 0xB2, 0xAE, 0xE4, 0xC1, 0xBE, 0xE4, 
   0xC4, 0xC2, 0xDD, 0xC2, 0xC1, 0xB7, 0xA1, 0xA1, 0x89, 0x7B, 0x7A, 0x6E, 0x63, 0x63, 0x5C, 0x56, 
   0x56, 0x54, 0x54, 0x57, 0x56, 0x5C, 0x62, 0x3C, 0x42, 0x49, 0x94, 0x92, 0x9A, 0xE8, 0xDC, 0xE1, 
   0xEB, 0xD7, 0xDB, 0xE8, 0xD9, 0xD8, 0xE2, 0xD2, 0xCD, 0xE9, 0xDA, 0xD2, 0xF4, 0xEA, 0xE4, 0xCA, 
   0xCC, 0xCE, 0x3C, 0x48, 0x54, 0x5A, 0x69, 0x77, 0x7D, 0x88, 0x93, 0x7E, 0x84, 0x91, 0xBA, 0xBA, 
   0xC7, 0xF0, 0xE8, 0xF0, 0xEF, 0xE2, 0xE4, 0xF0, 0xE2, 0xDF, 0xF8, 0xE7, 0xE2, 0xF5, 0xE3, 0xDE, 
   0xF1, 0xDF, 0xDB, 0xED, 0xDD, 0xD9, 0xEA, 0xD9, 0xD6, 0xEE, 0xDC, 0xDA, 0xE8, 0xDD, 0xD9, 0xE6, 
   0xE1, 0xDB, 0xCF, 0xC5, 0xC3, 0xC1, 0xB7, 0xB6, 0xA6, 0x9E, 0xA2, 0x53, 0x52, 0x57, 0x59, 0x5B, 
   0x62, 0x73, 0x73, 0x80, 0x80, 0x89, 0x91, 0x27, 0x37, 0x36, 0x20, 0x28, 0x24, 0x31, 0x30, 0x2D, 
   0x28, 0x2D, 0x2A, 0x2C, 0x34, 0x34, 0x39, 0x3C, 0x3E, 0x33, 0x38, 0x39, 0x33, 0x3A, 0x3A, 0x2B, 
   0x36, 0x36, 0x37, 0x43, 0x43, 0x49, 0x55, 0x55, 0x42, 0x50, 0x52, 0x41, 0x50, 0x52, 0x3A, 0x49, 
   0x4B, 0x33, 0x42, 0x44, 0x38, 0x47, 0x49, 0x39, 0x48, 0x4A, 0x32, 0x3F, 0x40, 0x3B, 0x43, 0x44, 
   0x3C, 0x46, 0x4E, 0x36, 0x48, 0x57, 0x72, 0x88, 0x9B, 0x69, 0x87, 0x99, 0x5C, 0x80, 0x8F, 0x76, 
   0x92, 0x9E, 0x52, 0x67, 0x70, 0x36, 0x47, 0x4D, 0x42, 0x4E, 0x51, 0x3B, 0x47, 0x4A, 0x3F, 0x4C, 
   0x53, 0x44, 0x50, 0x57, 0x51, 0x5A, 0x5E, 0x45, 0x4E, 0x54, 0x36, 0x41, 0x49, 0x3B, 0x48, 0x52, 
   0x39, 0x49, 0x56, 0x71, 0x81, 0x8F, 0x65, 0x79, 0x86, 0x65, 0x7E, 0x8A, 0x60, 0x7A, 0x86, 0x47, 
   0x63, 0x71, 0x53, 0x73, 0x81, 0x60, 0x82, 0x91, 0x67, 0x8A, 0x99, 0x75, 0x94, 0xA1, 0x62, 0x76, 
   0x83, 0x40, 0x46, 0x50, 0x39, 0x31, 0x37, 0x70, 0x60, 0x62, 0x89, 0x75, 0x74, 0xA4, 0x94, 0x91, 
   0xE8, 0xDB, 0xD9, 0xF4, 0xE3, 0xE1, 0xF6, 0xE1, 0xE0, 0xF5, 0xE0, 0xDF, 0xF5, 0xE2, 0xE1, 0xF2, 
   0xE3, 0xE1, 0xF2, 0xE4, 0xE2, 0xF8, 0xEA, 0xE8, 0xFA, 0xEC, 0xEA, 0xF5, 0xE7, 0xE5, 0xF2, 0xE4, 
   0xE2, 0xF4, 0xE7, 0xE4, 0xE9, 0xDB, 0xDC, 0x5E, 0x58, 0x5B, 0x3F, 0x46, 0x4B, 0x34, 0x49, 0x50, 
   0x71, 0x86, 0x93, 0x78, 0x84, 0x96, 0x7E, 0x82, 0x95, 0x5F, 0x5D, 0x69, 0x8A, 0x84, 0x8B, 0xBF, 
   0xB4, 0xB9, 0xFD, 0xF3, 0xF4, 0xFD, 0xFA, 0xFB, 0xC0, 0xC5, 0xC8, 0x59, 0x66, 0x6B, 0x65, 0x79, 
   0x7E, 0x65, 0x7B, 0x80, 0x50, 0x66, 0x6B, 0x40, 0x53, 0x58, 0x50, 0x5E, 0x65, 0x64, 0x6E, 0x74, 
   0x8E, 0x95, 0x97, 0x6A, 0x72, 0x7A, 0x4A, 0x55, 0x61, 0x5C, 0x66, 0x70, 0x4A, 0x50, 0x53, 0x75, 
   0x73, 0x6C, 0x61, 0x56, 0x4B, 0x5E, 0x4B, 0x3E, 0x62, 0x4E, 0x40, 0x64, 0x4E, 0x40, 0x66, 0x4E, 
   0x3F, 0x66, 0x4D, 0x3D, 0x67, 0x4B, 0x3C, 0x68, 0x4E, 0x3F, 0x68, 0x4D, 0x3E, 0x66, 0x4B, 0x3D, 
   0x67, 0x4C, 0x3D, 0x67, 0x4C, 0x3E, 0x67, 0x4B, 0x3F, 0x67, 0x4B, 0x3E, 0x67, 0x4C, 0x3E, 0x67, 
   0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x66, 0x4B, 
   0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 
   0x66, 0x4B, 0x3D, 0x65, 0x4B, 0x3D, 0xDC, 0xBD, 0xB4, 0xDD, 0xBE, 0xB5, 0xDE, 0xBF, 0xB6, 0xE0, 
   0xC1, 0xB8, 0xDF, 0xC0, 0xB7, 0xDF, 0xC0, 0xB7, 0xE0, 0xC1, 0xBA, 0xE1, 0xC0, 0xBD, 0xE1, 0xC0, 
   0xBD, 0xE0, 0xBF, 0xBC, 0xDE, 0xBD, 0xBA, 0xDE, 0xBD, 0xBA, 0xE1, 0xC0, 0xBD, 0xE1, 0xC0, 0xBD, 
   0xE1, 0xC0, 0xBD, 0xE1, 0xC0, 0xBD, 0xDF, 0xBE, 0xBB, 0xE2, 0xC1, 0xBE, 0xE0, 0xBF, 0xBC, 0xE1, 
   0xC0, 0xBD, 0xDE, 0xBD, 0xBA, 0xE0, 0xBF, 0xBC, 0xE1, 0xC0, 0xBD, 0xDB, 0xBA, 0xB7, 0xDC, 0xBB, 
   0xB8, 0xDF, 0xBE, 0xBB, 0xDF, 0xBE, 0xBB, 0xDF, 0xBE, 0xBB, 0xDD, 0xBC, 0xB9, 0xDD, 0xBC, 0xB9, 
   0xE0, 0xBF, 0xBC, 0xE4, 0xC3, 0xC0, 0xE4, 0xC3, 0xC0, 0xE0, 0xBF, 0xBC, 0xDF, 0xBE, 0xBB, 0xDD, 
   0xBC, 0xB9, 0xDB, 0xBA, 0xB7, 0xDA, 0xB9, 0xB6, 0xDA, 0xB9, 0xB6, 0xD9, 0xB8, 0xB5, 0xD9, 0xB8, 
   0xB5, 0xD6, 0xB4, 0xB1, 0xD7, 0xB6, 0xB3, 0xD9, 0xB8, 0xB5, 0xD7, 0xB6, 0xB3, 0xD8, 0xB7, 0xB3, 
   0xD8, 0xB9, 0xB0, 0xD9, 0xBA, 0xB1, 0xD8, 0xB9, 0xB0, 0xD8, 0xB9, 0xB0, 0xD8, 0xB9, 0xB0, 0xD4, 
   0xB5, 0xAC, 0xD2, 0xB3, 0xAA, 0xD0, 0xB1, 0xA8, 0xD1, 0xB2, 0xA9, 0xCE, 0xAF, 0xA6, 0xC8, 0xA9, 
   0xA0, 0xBE, 0x9F, 0x96, 0xD5, 0xB6, 0xAE, 0xD3, 0xB4, 0xB1, 0xCC, 0xAE, 0xAA, 0xC6, 0xAA, 0xA6, 
   0xBE, 0xA3, 0x9F, 0xC3, 0xA8, 0xA4, 0xF8, 0xDF, 0xDB, 0xDE, 0xC6, 0xC1, 0xEC, 0xD4, 0xD0, 0xEA, 
   0xD0, 0xCB, 0xD3, 0xB7, 0xB3, 0xD1, 0xB3, 0xAF, 0xCA, 0xAB, 0xA8, 0xC0, 0xA1, 0x9E, 0xC1, 0xA2, 
   0x9F, 0xB9, 0x9A, 0x97, 0xAD, 0x8E, 0x8B, 0x9E, 0x7F, 0x7C, 0xA5, 0x86, 0x83, 0x91, 0x72, 0x6F, 
   0x96, 0x7A, 0x76, 0xA3, 0x89, 0x85, 0x89, 0x6E, 0x6A, 0xAD, 0x90, 0x8C, 0xC5, 0xA4, 0xA1, 0xB7, 
   0x94, 0x91, 0xBA, 0x96, 0x93, 0xC4, 0xA5, 0x9E, 0xB3, 0x98, 0x91, 0x87, 0x6D, 0x66, 0x97, 0x7D, 
   0x76, 0x99, 0x7C, 0x75, 0xB9, 0x96, 0x90, 0xCC, 0xA6, 0xA2, 0xD5, 0xB0, 0xAE, 0xD0, 0xAD, 0xAA, 
   0xCC, 0xAA, 0xA7, 0xE3, 0xC3, 0xC0, 0xDC, 0xBE, 0xBB, 0xD2, 0xB2, 0xB0, 0xD6, 0xB1, 0xB0, 0xD4, 
   0xB3, 0xB3, 0xD0, 0xB4, 0xB4, 0xC3, 0xAE, 0xAE, 0xAE, 0xA1, 0xA2, 0x98, 0x91, 0x91, 0x5F, 0x5E, 
   0x5F, 0x4A, 0x4F, 0x52, 0x39, 0x41, 0x48, 0x39, 0x3F, 0x46, 0xDC, 0xD7, 0xDE, 0xED, 0xDC, 0xE0, 
   0xF1, 0xD8, 0xDA, 0xE9, 0xDC, 0xD7, 0xEE, 0xE2, 0xDA, 0xF3, 0xE8, 0xDE, 0xD3, 0xCD, 0xC6, 0x56, 
   0x5B, 0x5F, 0x35, 0x42, 0x51, 0x76, 0x84, 0x93, 0x80, 0x8A, 0x93, 0x99, 0x9C, 0xA7, 0xEC, 0xE6, 
   0xF1, 0xF2, 0xE4, 0xE9, 0xF3, 0xE1, 0xDF, 0xF6, 0xE3, 0xDC, 0xF5, 0xE2, 0xDC, 0xF0, 0xDD, 0xD7, 
   0xF0, 0xDE, 0xD8, 0xEF, 0xDE, 0xD9, 0xED, 0xDB, 0xD8, 0xF0, 0xDC, 0xDA, 0xE2, 0xDD, 0xD8, 0x9A, 
   0x9F, 0x9A, 0x5F, 0x5E, 0x5D, 0x62, 0x5F, 0x61, 0x69, 0x66, 0x6C, 0x4D, 0x50, 0x58, 0x54, 0x5A, 
   0x64, 0x43, 0x44, 0x52, 0x2F, 0x39, 0x42, 0x23, 0x34, 0x32, 0x2A, 0x34, 0x2E, 0x37, 0x37, 0x32, 
   0x37, 0x3C, 0x3A, 0x2C, 0x35, 0x35, 0x31, 0x37, 0x38, 0x28, 0x30, 0x30, 0x26, 0x31, 0x31, 0x2E, 
   0x3C, 0x3B, 0x3F, 0x4E, 0x4D, 0x45, 0x55, 0x54, 0x38, 0x46, 0x48, 0x40, 0x4F, 0x51, 0x3A, 0x49, 
   0x4B, 0x2D, 0x3C, 0x3E, 0x37, 0x46, 0x48, 0x3D, 0x4D, 0x4F, 0x34, 0x40, 0x42, 0x36, 0x3D, 0x3F, 
   0x29, 0x34, 0x3D, 0x55, 0x66, 0x79, 0x66, 0x7E, 0x93, 0x4F, 0x6F, 0x81, 0x65, 0x8A, 0x99, 0x5F, 
   0x77, 0x82, 0x38, 0x49, 0x50, 0x36, 0x44, 0x4A, 0x3A, 0x46, 0x49, 0x41, 0x4E, 0x51, 0x39, 0x4B, 
   0x51, 0x3B, 0x4A, 0x51, 0x46, 0x4F, 0x53, 0x3C, 0x44, 0x4A, 0x3A, 0x45, 0x4D, 0x39, 0x45, 0x4F, 
   0x52, 0x61, 0x6E, 0x5F, 0x6F, 0x7E, 0x40, 0x54, 0x62, 0x68, 0x82, 0x8E, 0x60, 0x7A, 0x87, 0x4D, 
   0x6A, 0x78, 0x4E, 0x70, 0x7E, 0x5A, 0x7D, 0x8B, 0x72, 0x96, 0xA4, 0x73, 0x90, 0x9C, 0x59, 0x6B, 
   0x75, 0x5F, 0x5E, 0x67, 0x5F, 0x51, 0x57, 0xA9, 0x92, 0x94, 0xCC, 0xB0, 0xAF, 0xE5, 0xD1, 0xCD, 
   0xE8, 0xD9, 0xD5, 0xF4, 0xE0, 0xDD, 0xF7, 0xE2, 0xE0, 0xF4, 0xDE, 0xDE, 0xF3, 0xE0, 0xE0, 0xF0, 
   0xE2, 0xE0, 0xF4, 0xE4, 0xE3, 0xF5, 0xE6, 0xE4, 0xF7, 0xE7, 0xE5, 0xF8, 0xE8, 0xE6, 0xF1, 0xE1, 
   0xDF, 0xF9, 0xE8, 0xE6, 0xC5, 0xB6, 0xB8, 0x4D, 0x47, 0x4D, 0x41, 0x4B, 0x4F, 0x47, 0x5C, 0x62, 
   0x6A, 0x7C, 0x86, 0x81, 0x88, 0x96, 0x9A, 0x97, 0xA6, 0xC9, 0xC3, 0xC9, 0xFF, 0xFA, 0xFC, 0xFA, 
   0xEE, 0xEE, 0xDC, 0xD2, 0xD2, 0xA0, 0x9F, 0x9E, 0x68, 0x71, 0x74, 0x5A, 0x6B, 0x6E, 0x5F, 0x76, 
   0x77, 0x5D, 0x76, 0x77, 0x62, 0x79, 0x7A, 0x4D, 0x60, 0x62, 0x33, 0x42, 0x45, 0x62, 0x6B, 0x6F, 
   0xA9, 0xAB, 0xAB, 0xB0, 0xB7, 0xBC, 0x4F, 0x58, 0x62, 0x5B, 0x63, 0x6B, 0x7A, 0x7C, 0x7C, 0x73, 
   0x6D, 0x61, 0x60, 0x4F, 0x3F, 0x65, 0x4C, 0x3B, 0x66, 0x4D, 0x3D, 0x64, 0x4D, 0x3C, 0x65, 0x4F, 
   0x3E, 0x64, 0x4E, 0x3C, 0x64, 0x4E, 0x3A, 0x66, 0x4C, 0x3C, 0x66, 0x4B, 0x3C, 0x64, 0x49, 0x3B, 
   0x66, 0x4B, 0x3D, 0x67, 0x4C, 0x3F, 0x67, 0x4B, 0x40, 0x67, 0x4B, 0x3F, 0x67, 0x4C, 0x3E, 0x67, 
   0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x66, 0x4B, 
   0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 
   0x66, 0x4B, 0x3D, 0x65, 0x4B, 0x3D, 0xDD, 0xBE, 0xB5, 0xDB, 0xBC, 0xB3, 0xDB, 0xBC, 0xB3, 0xDB, 
   0xBC, 0xB4, 0xDD, 0xBE, 0xB5, 0xDF, 0xC0, 0xB6, 0xE0, 0xC0, 0xB9, 0xDF, 0xBE, 0xBB, 0xE0, 0xBF, 
   0xBD, 0xE0, 0xBF, 0xBC, 0xDD, 0xBC, 0xB9, 0xDE, 0xBD, 0xBA, 0xE1, 0xC0, 0xBD, 0xE0, 0xBF, 0xBC, 
   0xE1, 0xC0, 0xBD, 0xE3, 0xC2, 0xBF, 0xE0, 0xBF, 0xBC, 0xDF, 0xBE, 0xBB, 0xDE, 0xBD, 0xBA, 0xDF, 
   0xBE, 0xBB, 0xDF, 0xBE, 0xBB, 0xE2, 0xC1, 0xBE, 0xDD, 0xBB, 0xB8, 0xD9, 0xB7, 0xB5, 0xE0, 0xBE, 
   0xBB, 0xE8, 0xC7, 0xC4, 0xE4, 0xC3, 0xC0, 0xE0, 0xBF, 0xBC, 0xE1, 0xC0, 0xBD, 0xDD, 0xBC, 0xB9, 
   0xDE, 0xBD, 0xBA, 0xE6, 0xC5, 0xC2, 0xE9, 0xC8, 0xC5, 0xE7, 0xC6, 0xC3, 0xE5, 0xC4, 0xC1, 0xE5, 
   0xC3, 0xC0, 0xE1, 0xC0, 0xBD, 0xDD, 0xBC, 0xB9, 0xDD, 0xBC, 0xB9, 0xDA, 0xB9, 0xB6, 0xD7, 0xB7, 
   0xB4, 0xD8, 0xB7, 0xB4, 0xD6, 0xB5, 0xB2, 0xD5, 0xB4, 0xB1, 0xD6, 0xB6, 0xB2, 0xD6, 0xB6, 0xB2, 
   0xD6, 0xB7, 0xAE, 0xD9, 0xB9, 0xB0, 0xDB, 0xBB, 0xB3, 0xD7, 0xB8, 0xB0, 0xD2, 0xB3, 0xAA, 0xCD, 
   0xAE, 0xA5, 0xCF, 0xAF, 0xA7, 0xD0, 0xB1, 0xA8, 0xCB, 0xAC, 0xA3, 0xCA, 0xAB, 0xA2, 0xBF, 0xA0, 
   0x97, 0xB2, 0x93, 0x8A, 0xB1, 0x92, 0x8A, 0xD8, 0xB8, 0xB5, 0xCF, 0xAF, 0xAC, 0xC0, 0xA1, 0x9E, 
   0xAE, 0x93, 0x8F, 0xC6, 0xAB, 0xA7, 0xE2, 0xC8, 0xC4, 0xE6, 0xCC, 0xC8, 0xEA, 0xD1, 0xCD, 0xF4, 
   0xD9, 0xD6, 0xCB, 0xAF, 0xAB, 0xCF, 0xB0, 0xAD, 0xD2, 0xB3, 0xB0, 0xBE, 0x9F, 0x9C, 0xAC, 0x8E, 
   0x8A, 0xB0, 0x91, 0x8E, 0xA5, 0x87, 0x83, 0xA8, 0x8A, 0x87, 0x90, 0x72, 0x6F, 0x82, 0x64, 0x61, 
   0x97, 0x7D, 0x79, 0xAD, 0x96, 0x91, 0xB0, 0x96, 0x92, 0xC5, 0xA8, 0xA5, 0xC0, 0xA1, 0x9E, 0xD0, 
   0xAF, 0xAB, 0xBE, 0x9C, 0x99, 0xAF, 0x8F, 0x89, 0x99, 0x7D, 0x76, 0x7D, 0x63, 0x5C, 0x97, 0x7B, 
   0x74, 0xA2, 0x85, 0x7E, 0xB6, 0x92, 0x8B, 0xCB, 0xA4, 0xA0, 0xCD, 0xA7, 0xA5, 0xCE, 0xA9, 0xA7, 
   0xD3, 0xAF, 0xAC, 0xD5, 0xB4, 0xB1, 0xE1, 0xC1, 0xBE, 0xD7, 0xB8, 0xB5, 0xD8, 0xB4, 0xB3, 0xD0, 
   0xB1, 0xAF, 0xCE, 0xB4, 0xB2, 0xC1, 0xAE, 0xAD, 0xB2, 0xA8, 0xA6, 0x98, 0x92, 0x92, 0x7D, 0x7C, 
   0x7F, 0x4B, 0x50, 0x54, 0x36, 0x3C, 0x42, 0xB0, 0xB4, 0xBB, 0xEE, 0xE8, 0xEB, 0xF1, 0xE1, 0xE2, 
   0xE4, 0xCE, 0xCD, 0xC9, 0xBF, 0xB8, 0xC8, 0xC0, 0xB9, 0x85, 0x7E, 0x75, 0x45, 0x43, 0x3F, 0x32, 
   0x3A, 0x3F, 0x5C, 0x6C, 0x7C, 0x87, 0x97, 0xA5, 0x5E, 0x66, 0x70, 0xC4, 0xC5, 0xCE, 0xEC, 0xE1, 
   0xE9, 0xEB, 0xD7, 0xDB, 0xF1, 0xDA, 0xD7, 0xF0, 0xD9, 0xD1, 0xEB, 0xD9, 0xD2, 0xEC, 0xDA, 0xD5, 
   0xE9, 0xD6, 0xD2, 0xE8, 0xD7, 0xD2, 0xF5, 0xE7, 0xE4, 0xE9, 0xDC, 0xD9, 0x66, 0x65, 0x61, 0x30, 
   0x3B, 0x38, 0x3F, 0x46, 0x45, 0x49, 0x4C, 0x4F, 0x3F, 0x41, 0x48, 0x54, 0x59, 0x63, 0x3C, 0x43, 
   0x4F, 0x32, 0x33, 0x42, 0x30, 0x39, 0x43, 0x2A, 0x39, 0x39, 0x24, 0x2D, 0x28, 0x36, 0x37, 0x33, 
   0x35, 0x3D, 0x3A, 0x30, 0x3A, 0x39, 0x35, 0x3B, 0x3B, 0x29, 0x31, 0x32, 0x33, 0x3E, 0x3F, 0x43, 
   0x51, 0x51, 0x3D, 0x4D, 0x4E, 0x3E, 0x4F, 0x4F, 0x3C, 0x4B, 0x4D, 0x44, 0x52, 0x55, 0x3A, 0x49, 
   0x4B, 0x36, 0x45, 0x47, 0x44, 0x52, 0x55, 0x3F, 0x4E, 0x50, 0x2E, 0x39, 0x3A, 0x2B, 0x32, 0x35, 
   0x2F, 0x3B, 0x44, 0x60, 0x73, 0x85, 0x48, 0x61, 0x76, 0x52, 0x71, 0x84, 0x6A, 0x8B, 0x9B, 0x45, 
   0x5B, 0x64, 0x33, 0x41, 0x47, 0x32, 0x3E, 0x42, 0x38, 0x44, 0x46, 0x42, 0x51, 0x53, 0x3D, 0x4F, 
   0x56, 0x35, 0x46, 0x4C, 0x32, 0x3B, 0x3F, 0x31, 0x3B, 0x40, 0x49, 0x54, 0x5C, 0x40, 0x4D, 0x59, 
   0x57, 0x66, 0x74, 0x52, 0x61, 0x72, 0x56, 0x6B, 0x79, 0x68, 0x83, 0x90, 0x50, 0x6C, 0x7B, 0x46, 
   0x63, 0x72, 0x4B, 0x6B, 0x78, 0x4C, 0x6F, 0x7B, 0x70, 0x93, 0x9F, 0x4F, 0x6B, 0x75, 0x66, 0x75, 
   0x7F, 0x98, 0x93, 0x9A, 0xB5, 0xA1, 0xA5, 0xD5, 0xB8, 0xB9, 0xF1, 0xD1, 0xCF, 0xEB, 0xD4, 0xCF, 
   0xED, 0xDA, 0xD6, 0xF9, 0xE4, 0xE1, 0xF4, 0xDD, 0xDC, 0xF4, 0xDD, 0xDD, 0xF1, 0xDF, 0xDE, 0xEE, 
   0xE1, 0xDF, 0xF3, 0xE1, 0xDF, 0xF5, 0xE2, 0xE1, 0xF4, 0xE1, 0xE0, 0xF6, 0xE4, 0xE3, 0xF3, 0xE1, 
   0xE0, 0xFA, 0xE7, 0xE6, 0xA0, 0x93, 0x96, 0x44, 0x40, 0x46, 0x5C, 0x68, 0x6C, 0x66, 0x79, 0x7E, 
   0x6E, 0x7E, 0x83, 0xA5, 0xA8, 0xB1, 0xCA, 0xC3, 0xCC, 0xF9, 0xF1, 0xF1, 0xC1, 0xB4, 0xB2, 0xB2, 
   0xA5, 0xA1, 0x6D, 0x63, 0x5F, 0x41, 0x3E, 0x3D, 0x46, 0x4C, 0x4E, 0x5D, 0x6A, 0x6C, 0x52, 0x65, 
   0x65, 0x62, 0x77, 0x77, 0x4B, 0x60, 0x5F, 0x35, 0x46, 0x46, 0x4B, 0x59, 0x5A, 0x6B, 0x72, 0x74, 
   0xA6, 0xA5, 0xA5, 0x7F, 0x81, 0x85, 0x58, 0x5C, 0x63, 0x68, 0x6B, 0x70, 0xA5, 0xA1, 0x9E, 0x68, 
   0x5D, 0x4F, 0x5D, 0x48, 0x36, 0x6A, 0x4D, 0x3C, 0x67, 0x4D, 0x3C, 0x68, 0x50, 0x3F, 0x64, 0x4E, 
   0x3D, 0x62, 0x4E, 0x3B, 0x61, 0x4E, 0x39, 0x68, 0x4D, 0x3E, 0x67, 0x4D, 0x3D, 0x66, 0x4C, 0x3C, 
   0x67, 0x4C, 0x3E, 0x67, 0x4B, 0x40, 0x67, 0x4B, 0x40, 0x67, 0x4C, 0x3F, 0x67, 0x4C, 0x3E, 0x67, 
   0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x66, 0x4B, 
   0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 
   0x66, 0x4B, 0x3D, 0x65, 0x4B, 0x3D, 0xDD, 0xBD, 0xB7, 0xDD, 0xBD, 0xB7, 0xDD, 0xBD, 0xB7, 0xDD, 
   0xBD, 0xB7, 0xDE, 0xBE, 0xB8, 0xDE, 0xBF, 0xB8, 0xE0, 0xC0, 0xBB, 0xE1, 0xC0, 0xBD, 0xE1, 0xC0, 
   0xBD, 0xDF, 0xBE, 0xBB, 0xDD, 0xBC, 0xB9, 0xE0, 0xBF, 0xBC, 0xDF, 0xBE, 0xBB, 0xE0, 0xBF, 0xBC, 
   0xE1, 0xC0, 0xBD, 0xE4, 0xC3, 0xC0, 0xE1, 0xC0, 0xBD, 0xDE, 0xBD, 0xBA, 0xDD, 0xBC, 0xB9, 0xDC, 
   0xBA, 0xB7, 0xD9, 0xB3, 0xB1, 0xDB, 0xB5, 0xB3, 0xE1, 0xBB, 0xB9, 0xE4, 0xBE, 0xBC, 0xE6, 0xC0, 
   0xBE, 0xE9, 0xC3, 0xC1, 0xE8, 0xC6, 0xC3, 0xDF, 0xBF, 0xBC, 0xE4, 0xC3, 0xC0, 0xE6, 0xC5, 0xC2, 
   0xE6, 0xC5, 0xC2, 0xE5, 0xC4, 0xC1, 0xE4, 0xC3, 0xC0, 0xE7, 0xC4, 0xC1, 0xE7, 0xC4, 0xC1, 0xEA, 
   0xC7, 0xC4, 0xEB, 0xC8, 0xC5, 0xEA, 0xC7, 0xC4, 0xE9, 0xC6, 0xC3, 0xE3, 0xC3, 0xBF, 0xD9, 0xBC, 
   0xB8, 0xD7, 0xBA, 0xB6, 0xD7, 0xBA, 0xB6, 0xD7, 0xBA, 0xB6, 0xD4, 0xB7, 0xB4, 0xD6, 0xB9, 0xB5, 
   0xD8, 0xB8, 0xB2, 0xD5, 0xB5, 0xAF, 0xD6, 0xB6, 0xB0, 0xD4, 0xB4, 0xAE, 0xD5, 0xB5, 0xAF, 0xCE, 
   0xAE, 0xA8, 0xC8, 0xA8, 0xA1, 0xCD, 0xAE, 0xA5, 0xD1, 0xB2, 0xA9, 0xBD, 0x9E, 0x95, 0xA8, 0x89, 
   0x80, 0xB4, 0x95, 0x8C, 0xBB, 0x9B, 0x92, 0xDF, 0xB6, 0xB4, 0xD2, 0xAA, 0xA8, 0xCE, 0xA8, 0xA6, 
   0xAC, 0x89, 0x86, 0xB6, 0x95, 0x93, 0xDF, 0xC0, 0xBC, 0xD9, 0xBC, 0xBA, 0xE3, 0xC7, 0xC6, 0xF2, 
   0xD5, 0xD4, 0xCD, 0xB0, 0xAC, 0xAD, 0x8F, 0x8B, 0xD3, 0xB4, 0xB0, 0xDF, 0xC1, 0xBC, 0xC8, 0xAB, 
   0xA7, 0xC4, 0xA9, 0xA5, 0xCE, 0xB4, 0xB0, 0xBA, 0xA3, 0x9E, 0xB5, 0xA1, 0x9C, 0x9D, 0x8A, 0x85, 
   0x73, 0x63, 0x5D, 0x9A, 0x8B, 0x84, 0xC1, 0xB1, 0xAA, 0xA1, 0x8E, 0x88, 0xA3, 0x8F, 0x88, 0xAD, 
   0x96, 0x90, 0xB3, 0x9A, 0x94, 0xAA, 0x8F, 0x8B, 0x96, 0x7E, 0x79, 0x8C, 0x75, 0x6D, 0xA8, 0x8E, 
   0x84, 0xAB, 0x8D, 0x82, 0xBE, 0x99, 0x8C, 0xC6, 0x9B, 0x93, 0xCB, 0x9F, 0x9D, 0xDC, 0xB1, 0xAE, 
   0xD9, 0xB0, 0xAD, 0xCC, 0xA6, 0xA2, 0xE4, 0xBF, 0xBC, 0xE5, 0xC5, 0xC0, 0xD8, 0xC4, 0xB8, 0xD4, 
   0xC2, 0xB8, 0xAC, 0x9C, 0x95, 0x7D, 0x72, 0x6D, 0x61, 0x5C, 0x5B, 0x67, 0x62, 0x63, 0x4D, 0x4A, 
   0x4E, 0x72, 0x6C, 0x71, 0xD6, 0xCB, 0xCE, 0xF2, 0xE5, 0xE7, 0xEB, 0xE3, 0xE0, 0xE5, 0xE4, 0xDE, 
   0x56, 0x5A, 0x52, 0x2B, 0x2B, 0x2A, 0x34, 0x33, 0x36, 0x37, 0x3D, 0x40, 0x38, 0x44, 0x4A, 0x53, 
   0x68, 0x71, 0x7A, 0x97, 0xA1, 0x65, 0x78, 0x89, 0x7B, 0x7F, 0x91, 0xDC, 0xD5, 0xDA, 0xEA, 0xD7, 
   0xD2, 0xF3, 0xD9, 0xD3, 0xF5, 0xD8, 0xD5, 0xF1, 0xD7, 0xD7, 0xE7, 0xD8, 0xD6, 0xE0, 0xD3, 0xD1, 
   0xE5, 0xDA, 0xD7, 0xE7, 0xE0, 0xDD, 0xA2, 0xA1, 0x9D, 0x4C, 0x4C, 0x48, 0x2C, 0x32, 0x32, 0x37, 
   0x43, 0x47, 0x4F, 0x5B, 0x5F, 0x47, 0x54, 0x57, 0x32, 0x3C, 0x40, 0x43, 0x48, 0x4D, 0x40, 0x42, 
   0x48, 0x42, 0x3F, 0x48, 0x2F, 0x2E, 0x37, 0x2F, 0x34, 0x39, 0x27, 0x30, 0x31, 0x2E, 0x37, 0x35, 
   0x2F, 0x37, 0x33, 0x36, 0x39, 0x37, 0x35, 0x34, 0x36, 0x55, 0x56, 0x58, 0x36, 0x3A, 0x3F, 0x42, 
   0x48, 0x50, 0x49, 0x50, 0x5B, 0x3E, 0x47, 0x53, 0x42, 0x4E, 0x56, 0x42, 0x4E, 0x54, 0x3A, 0x46, 
   0x4B, 0x43, 0x4F, 0x52, 0x42, 0x4C, 0x50, 0x32, 0x3D, 0x42, 0x32, 0x3B, 0x3C, 0x35, 0x3E, 0x3A, 
   0x42, 0x55, 0x56, 0x1D, 0x3E, 0x44, 0x3D, 0x5D, 0x6A, 0x69, 0x80, 0x90, 0x69, 0x77, 0x88, 0x40, 
   0x4D, 0x4F, 0x39, 0x47, 0x43, 0x34, 0x42, 0x3F, 0x3D, 0x4A, 0x4B, 0x3E, 0x4C, 0x50, 0x3C, 0x4B, 
   0x51, 0x37, 0x47, 0x4C, 0x32, 0x42, 0x44, 0x35, 0x43, 0x48, 0x4A, 0x59, 0x61, 0x58, 0x68, 0x74, 
   0x5F, 0x6F, 0x7F, 0x5E, 0x6D, 0x7F, 0x60, 0x75, 0x86, 0x5C, 0x78, 0x85, 0x51, 0x6B, 0x7B, 0x47, 
   0x5F, 0x71, 0x5B, 0x76, 0x83, 0x5D, 0x7D, 0x83, 0x66, 0x87, 0x8C, 0x58, 0x74, 0x7C, 0x92, 0x9B, 
   0xA1, 0xC5, 0xB7, 0xB8, 0xDE, 0xC0, 0xBC, 0xEE, 0xCC, 0xC7, 0xEC, 0xCC, 0xC7, 0xF0, 0xD7, 0xD2, 
   0xF9, 0xE7, 0xE4, 0xF6, 0xE3, 0xE0, 0xEE, 0xDB, 0xD8, 0xF0, 0xDD, 0xDA, 0xED, 0xDC, 0xD9, 0xEB, 
   0xDA, 0xD6, 0xF0, 0xDA, 0xD5, 0xF1, 0xDA, 0xD6, 0xF0, 0xDA, 0xD8, 0xED, 0xD9, 0xD8, 0xEE, 0xDF, 
   0xDD, 0xFC, 0xF3, 0xF1, 0x7A, 0x7B, 0x7C, 0x2D, 0x3A, 0x3E, 0x5E, 0x6C, 0x74, 0x6E, 0x79, 0x81, 
   0x7C, 0x80, 0x84, 0xC6, 0xC3, 0xC0, 0xC6, 0xBD, 0xB6, 0x96, 0x83, 0x7B, 0x52, 0x3F, 0x37, 0x5A, 
   0x47, 0x3F, 0x5C, 0x49, 0x41, 0x61, 0x4E, 0x46, 0x63, 0x4E, 0x46, 0x5D, 0x53, 0x4C, 0x63, 0x64, 
   0x5E, 0x5F, 0x5F, 0x59, 0x4B, 0x4B, 0x45, 0x4F, 0x4F, 0x49, 0x6F, 0x6F, 0x69, 0x6F, 0x6F, 0x6A, 
   0x63, 0x5E, 0x5E, 0x6F, 0x65, 0x65, 0x74, 0x67, 0x62, 0x61, 0x4F, 0x48, 0x5D, 0x44, 0x3A, 0x66, 
   0x49, 0x3D, 0x67, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x68, 0x4D, 0x3F, 0x68, 0x4D, 0x3F, 0x67, 0x4C, 
   0x3E, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x68, 0x4D, 0x3F, 0x67, 0x4C, 0x3E, 
   0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x68, 0x4D, 0x3F, 0x68, 0x4D, 0x3F, 0x68, 
   0x4D, 0x3F, 0x69, 0x4E, 0x40, 0x68, 0x4D, 0x3F, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 
   0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 
   0x67, 0x4C, 0x3E, 0x67, 0x4D, 0x3F, 0xDC, 0xBC, 0xB6, 0xDC, 0xBC, 0xB6, 0xDC, 0xBC, 0xB7, 0xDD, 
   0xBD, 0xB7, 0xDC, 0xBC, 0xB6, 0xDC, 0xBC, 0xB6, 0xDF, 0xBF, 0xBA, 0xE0, 0xBF, 0xBC, 0xE0, 0xBE, 
   0xBC, 0xDF, 0xBE, 0xBC, 0xE0, 0xBF, 0xBC, 0xE1, 0xC0, 0xBD, 0xDF, 0xBE, 0xBB, 0xE2, 0xC1, 0xBE, 
   0xDF, 0xBE, 0xBB, 0xE0, 0xBF, 0xBC, 0xE2, 0xC1, 0xBE, 0xE2, 0xC1, 0xBE, 0xE0, 0xBF, 0xBC, 0xDF, 
   0xBD, 0xBA, 0xDC, 0xB9, 0xB6, 0xDC, 0xB8, 0xB5, 0xDF, 0xBB, 0xB8, 0xDF, 0xBB, 0xB9, 0xE1, 0xBE, 
   0xBB, 0xE2, 0xBE, 0xBB, 0xE1, 0xC0, 0xBD, 0xDE, 0xBD, 0xBA, 0xE0, 0xBF, 0xBC, 0xE0, 0xBF, 0xBC, 
   0xE1, 0xC0, 0xBD, 0xE2, 0xC1, 0xBE, 0xE1, 0xC0, 0xBD, 0xE0, 0xBD, 0xBA, 0xDF, 0xBC, 0xB9, 0xD9, 
   0xB6, 0xB3, 0xD3, 0xB0, 0xAD, 0xE7, 0xC4, 0xC1, 0xF0, 0xCD, 0xCA, 0xF1, 0xD1, 0xCD, 0xED, 0xCF, 
   0xCC, 0xE4, 0xC6, 0xC3, 0xDC, 0xBD, 0xBA, 0xD7, 0xB8, 0xB5, 0xD6, 0xB7, 0xB4, 0xD7, 0xB8, 0xB5, 
   0xD7, 0xB7, 0xB1, 0xD6, 0xB6, 0xB0, 0xD6, 0xB6, 0xB0, 0xD4, 0xB4, 0xAE, 0xD5, 0xB5, 0xAF, 0xD5, 
   0xB5, 0xAF, 0xD4, 0xB5, 0xAD, 0xD2, 0xB3, 0xA9, 0xD4, 0xB5, 0xAC, 0xB8, 0x99, 0x90, 0xAE, 0x8F, 
   0x86, 0xB2, 0x94, 0x8A, 0xBC, 0x9D, 0x95, 0xC9, 0xA8, 0xA6, 0xCC, 0xAC, 0xAA, 0xC3, 0xA6, 0xA2, 
   0xAD, 0x92, 0x8E, 0xC2, 0xA9, 0xA4, 0xC6, 0xAF, 0xAA, 0xC9, 0xB1, 0xAD, 0xC8, 0xAE, 0xAC, 0xE6, 
   0xCC, 0xCA, 0xE4, 0xC9, 0xC6, 0xEE, 0xD2, 0xCE, 0xDE, 0xC2, 0xBE, 0xCF, 0xB4, 0xAF, 0xC6, 0xA8, 
   0xA4, 0xA3, 0x88, 0x84, 0x8A, 0x73, 0x6E, 0xA8, 0x96, 0x91, 0xB6, 0xA9, 0xA3, 0xA4, 0x99, 0x92, 
   0x58, 0x4E, 0x48, 0x60, 0x55, 0x51, 0x78, 0x6D, 0x68, 0x78, 0x6A, 0x66, 0xA4, 0x93, 0x90, 0xA5, 
   0x93, 0x90, 0xA5, 0x92, 0x8E, 0xA5, 0x93, 0x8F, 0x9A, 0x88, 0x85, 0xA8, 0x97, 0x92, 0xAC, 0x98, 
   0x91, 0xB3, 0x9A, 0x91, 0xBE, 0xA1, 0x96, 0xC3, 0x9F, 0x99, 0xC7, 0xA0, 0x9E, 0xCB, 0xA6, 0xA3, 
   0xD5, 0xB3, 0xAF, 0xCD, 0xAC, 0xA9, 0xCC, 0xAC, 0xA9, 0xE7, 0xCA, 0xC5, 0xDD, 0xCA, 0xC0, 0xAC, 
   0x9D, 0x93, 0xA5, 0x98, 0x90, 0x8A, 0x81, 0x7C, 0x6C, 0x67, 0x66, 0x78, 0x77, 0x77, 0x66, 0x68, 
   0x69, 0xBE, 0xBC, 0xBF, 0xE2, 0xDB, 0xDD, 0xD5, 0xCB, 0xCC, 0xED, 0xE7, 0xE7, 0x90, 0x8F, 0x8D, 
   0x30, 0x35, 0x30, 0x41, 0x42, 0x43, 0x4C, 0x4D, 0x50, 0x4B, 0x51, 0x56, 0x4E, 0x5B, 0x63, 0x7D, 
   0x91, 0x9C, 0x79, 0x94, 0xA0, 0x77, 0x88, 0x9A, 0xA8, 0xAC, 0xBC, 0xE2, 0xDA, 0xDF, 0xEA, 0xD7, 
   0xD3, 0xF1, 0xD9, 0xD1, 0xEE, 0xD3, 0xCF, 0xEE, 0xD6, 0xD6, 0xE1, 0xD4, 0xD4, 0xE6, 0xDC, 0xDC, 
   0xDB, 0xD4, 0xD2, 0x7B, 0x77, 0x76, 0x29, 0x2A, 0x27, 0x2F, 0x32, 0x2E, 0x37, 0x3E, 0x3F, 0x53, 
   0x5C, 0x61, 0x3E, 0x48, 0x4C, 0x31, 0x3A, 0x3E, 0x3C, 0x43, 0x48, 0x41, 0x46, 0x4B, 0x3C, 0x3F, 
   0x44, 0x45, 0x44, 0x49, 0x3F, 0x3F, 0x44, 0x2B, 0x31, 0x34, 0x2A, 0x33, 0x33, 0x34, 0x3C, 0x3C, 
   0x2F, 0x35, 0x33, 0x30, 0x31, 0x31, 0x5E, 0x5E, 0x5F, 0x70, 0x72, 0x75, 0x2F, 0x33, 0x38, 0x3D, 
   0x45, 0x4C, 0x4E, 0x57, 0x61, 0x3F, 0x49, 0x55, 0x3A, 0x49, 0x51, 0x3D, 0x4B, 0x51, 0x40, 0x4C, 
   0x52, 0x46, 0x50, 0x55, 0x36, 0x3D, 0x41, 0x39, 0x40, 0x45, 0x3B, 0x40, 0x40, 0x45, 0x47, 0x44, 
   0x38, 0x47, 0x48, 0x3D, 0x5A, 0x63, 0x61, 0x7F, 0x8D, 0x67, 0x7E, 0x8D, 0x6F, 0x7E, 0x8E, 0x3F, 
   0x4A, 0x4D, 0x34, 0x3F, 0x3C, 0x3A, 0x47, 0x44, 0x3C, 0x49, 0x4A, 0x3F, 0x4B, 0x50, 0x33, 0x40, 
   0x48, 0x32, 0x40, 0x46, 0x39, 0x49, 0x4B, 0x2D, 0x3D, 0x41, 0x56, 0x66, 0x6E, 0x68, 0x78, 0x84, 
   0x66, 0x76, 0x87, 0x5C, 0x6B, 0x7D, 0x66, 0x7C, 0x8A, 0x58, 0x74, 0x81, 0x67, 0x80, 0x92, 0x55, 
   0x6E, 0x81, 0x56, 0x71, 0x80, 0x65, 0x85, 0x8F, 0x62, 0x83, 0x8B, 0x64, 0x78, 0x7F, 0xB5, 0xB7, 
   0xBC, 0xC7, 0xB5, 0xB4, 0xEE, 0xCD, 0xCA, 0xED, 0xCC, 0xC7, 0xED, 0xCE, 0xCA, 0xF0, 0xD9, 0xD5, 
   0xF6, 0xE6, 0xE3, 0xF6, 0xE4, 0xE1, 0xF1, 0xDE, 0xDB, 0xF1, 0xDD, 0xDA, 0xEF, 0xDA, 0xD8, 0xED, 
   0xD9, 0xD7, 0xEF, 0xD9, 0xD3, 0xEE, 0xD9, 0xD3, 0xF3, 0xDF, 0xDC, 0xCB, 0xBD, 0xBB, 0xB4, 0xAA, 
   0xAA, 0xE2, 0xDA, 0xDB, 0x7C, 0x7F, 0x81, 0x30, 0x3D, 0x40, 0x65, 0x70, 0x77, 0x64, 0x6B, 0x72, 
   0x55, 0x55, 0x57, 0x60, 0x59, 0x53, 0x5E, 0x50, 0x47, 0x5E, 0x48, 0x3E, 0x60, 0x49, 0x3F, 0x68, 
   0x52, 0x48, 0x62, 0x4C, 0x42, 0x63, 0x4C, 0x42, 0x65, 0x4E, 0x43, 0x5D, 0x4B, 0x43, 0x57, 0x4A, 
   0x44, 0x5A, 0x4D, 0x47, 0x60, 0x52, 0x4C, 0x5D, 0x50, 0x4A, 0x63, 0x56, 0x50, 0x68, 0x5B, 0x55, 
   0x5E, 0x53, 0x51, 0x59, 0x4E, 0x4A, 0x56, 0x47, 0x40, 0x5D, 0x49, 0x41, 0x63, 0x4B, 0x3F, 0x67, 
   0x4D, 0x3F, 0x68, 0x4D, 0x3E, 0x66, 0x4B, 0x3D, 0x67, 0x4C, 0x3E, 0x68, 0x4D, 0x3F, 0x67, 0x4C, 
   0x3E, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x68, 0x4D, 0x3F, 0x67, 0x4C, 0x3E, 
   0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x68, 0x4D, 0x3F, 0x68, 0x4D, 0x3F, 0x68, 
   0x4D, 0x3F, 0x69, 0x4E, 0x40, 0x68, 0x4D, 0x3F, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 
   0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 
   0x67, 0x4C, 0x3E, 0x67, 0x4D, 0x3F, 0xDA, 0xBA, 0xB4, 0xDB, 0xBB, 0xB5, 0xDC, 0xBC, 0xB6, 0xDA, 
   0xBA, 0xB4, 0xE0, 0xC0, 0xBA, 0xE4, 0xC4, 0xBE, 0xE4, 0xC4, 0xBE, 0xE1, 0xC1, 0xBC, 0xDE, 0xBE, 
   0xB9, 0xDE, 0xBE, 0xB9, 0xE1, 0xC1, 0xBC, 0xE0, 0xC0, 0xBB, 0xDF, 0xBE, 0xB9, 0xDF, 0xBE, 0xBB, 
   0xDF, 0xBE, 0xBB, 0xE0, 0xBF, 0xBC, 0xDE, 0xBD, 0xBA, 0xDC, 0xBB, 0xB8, 0xD9, 0xB8, 0xB5, 0xDE, 
   0xBD, 0xBA, 0xDE, 0xBD, 0xBB, 0xE1, 0xC1, 0xBE, 0xDC, 0xBC, 0xB9, 0xD9, 0xB9, 0xB6, 0xDC, 0xBC, 
   0xB9, 0xDA, 0xBA, 0xB7, 0xDD, 0xBC, 0xB9, 0xDF, 0xBE, 0xBB, 0xDE, 0xBD, 0xBA, 0xDA, 0xB9, 0xB6, 
   0xDB, 0xBA, 0xB7, 0xDF, 0xBE, 0xBB, 0xDF, 0xBE, 0xBB, 0xE1, 0xBE, 0xBB, 0xE1, 0xBE, 0xBB, 0xDE, 
   0xBB, 0xB8, 0xD3, 0xB0, 0xAD, 0xD1, 0xAE, 0xAB, 0xE5, 0xC1, 0xBE, 0xEB, 0xCA, 0xC7, 0xEE, 0xCF, 
   0xCC, 0xF4, 0xD5, 0xD2, 0xEC, 0xCD, 0xCA, 0xE0, 0xC1, 0xBE, 0xDB, 0xBC, 0xB9, 0xD8, 0xB9, 0xB6, 
   0xD8, 0xB8, 0xB2, 0xD9, 0xB9, 0xB3, 0xD9, 0xB9, 0xB3, 0xD6, 0xB6, 0xB0, 0xD3, 0xB3, 0xAD, 0xD3, 
   0xB3, 0xAD, 0xD1, 0xB1, 0xAB, 0xCF, 0xB0, 0xA9, 0xCE, 0xAE, 0xA7, 0xBF, 0x9F, 0x98, 0xC4, 0xA4, 
   0x9D, 0xBA, 0x9A, 0x94, 0xB8, 0x99, 0x92, 0xC8, 0xB0, 0xAB, 0xB8, 0xA2, 0x9E, 0x9E, 0x89, 0x84, 
   0xAC, 0x97, 0x92, 0xCA, 0xB8, 0xB3, 0xC0, 0xB0, 0xA9, 0xC6, 0xB2, 0xAE, 0xBC, 0xA6, 0xA4, 0xCC, 
   0xB6, 0xB4, 0xE3, 0xCD, 0xCB, 0xF1, 0xDA, 0xD7, 0xF1, 0xDA, 0xD8, 0xD7, 0xC0, 0xBD, 0xD0, 0xB1, 
   0xAF, 0xD8, 0xBD, 0xBB, 0xAE, 0x9A, 0x96, 0x71, 0x64, 0x5F, 0x7C, 0x76, 0x70, 0x59, 0x59, 0x52, 
   0x51, 0x51, 0x4D, 0x48, 0x44, 0x43, 0x46, 0x41, 0x3F, 0x4D, 0x46, 0x44, 0x77, 0x6F, 0x6D, 0x78, 
   0x70, 0x6E, 0x80, 0x77, 0x76, 0x63, 0x5A, 0x59, 0x47, 0x3F, 0x3E, 0x52, 0x4B, 0x48, 0x7C, 0x72, 
   0x6D, 0x9F, 0x92, 0x8D, 0xAE, 0x9B, 0x95, 0xC3, 0xA9, 0xA7, 0xC3, 0xA4, 0xA4, 0xC6, 0xA9, 0xA8, 
   0xCE, 0xB3, 0xB2, 0xD3, 0xBA, 0xB8, 0xBC, 0xA4, 0xA3, 0xDD, 0xC7, 0xC5, 0xC9, 0xBC, 0xB3, 0x84, 
   0x7B, 0x73, 0x7C, 0x74, 0x6F, 0x69, 0x63, 0x61, 0x59, 0x59, 0x59, 0x53, 0x56, 0x57, 0xB2, 0xB7, 
   0xB7, 0xA9, 0xAD, 0xAB, 0x88, 0x88, 0x88, 0x8C, 0x89, 0x8A, 0x76, 0x74, 0x75, 0x50, 0x52, 0x53, 
   0x24, 0x28, 0x29, 0x75, 0x77, 0x7C, 0xA1, 0xA5, 0xAB, 0x3F, 0x47, 0x4F, 0x61, 0x6D, 0x77, 0x4E, 
   0x62, 0x6F, 0x54, 0x6C, 0x7A, 0x4F, 0x5F, 0x6F, 0x8C, 0x8E, 0x9C, 0xCA, 0xC2, 0xC7, 0xEC, 0xDA, 
   0xD6, 0xE9, 0xD3, 0xCC, 0xEE, 0xD6, 0xD3, 0xE9, 0xD2, 0xD3, 0xE5, 0xDC, 0xDE, 0xD1, 0xC9, 0xCB, 
   0x46, 0x42, 0x43, 0x2B, 0x29, 0x2A, 0x43, 0x44, 0x44, 0x37, 0x3B, 0x3A, 0x57, 0x5D, 0x5E, 0x45, 
   0x4B, 0x4F, 0x34, 0x39, 0x3D, 0x4A, 0x4F, 0x54, 0x42, 0x46, 0x4B, 0x45, 0x4A, 0x4D, 0x3E, 0x42, 
   0x46, 0x38, 0x37, 0x39, 0x33, 0x35, 0x36, 0x2E, 0x35, 0x34, 0x2F, 0x38, 0x38, 0x2E, 0x35, 0x36, 
   0x2E, 0x31, 0x33, 0x56, 0x56, 0x58, 0xBE, 0xBF, 0xBF, 0x32, 0x35, 0x36, 0x32, 0x38, 0x3D, 0x3D, 
   0x47, 0x4E, 0x49, 0x55, 0x5F, 0x39, 0x48, 0x52, 0x38, 0x4A, 0x51, 0x3D, 0x4E, 0x54, 0x36, 0x43, 
   0x49, 0x29, 0x32, 0x38, 0x36, 0x3B, 0x3F, 0x6C, 0x6D, 0x72, 0x61, 0x5E, 0x61, 0x46, 0x41, 0x41, 
   0x50, 0x58, 0x5B, 0x35, 0x4C, 0x57, 0x6C, 0x87, 0x96, 0x67, 0x7E, 0x8E, 0x64, 0x75, 0x83, 0x33, 
   0x3E, 0x3F, 0x33, 0x3B, 0x39, 0x3C, 0x46, 0x46, 0x3F, 0x48, 0x4C, 0x37, 0x42, 0x47, 0x30, 0x3A, 
   0x44, 0x36, 0x42, 0x4A, 0x34, 0x43, 0x48, 0x40, 0x50, 0x56, 0x6E, 0x7F, 0x87, 0x71, 0x81, 0x8E, 
   0x4E, 0x5E, 0x6F, 0x74, 0x84, 0x96, 0x61, 0x78, 0x86, 0x5B, 0x76, 0x84, 0x59, 0x73, 0x85, 0x51, 
   0x6B, 0x7F, 0x65, 0x81, 0x94, 0x66, 0x85, 0x95, 0x4E, 0x6D, 0x7B, 0x88, 0x8E, 0x96, 0xC1, 0xB9, 
   0xBD, 0xD5, 0xBC, 0xBC, 0xEB, 0xC9, 0xC6, 0xEB, 0xCA, 0xC6, 0xEB, 0xCF, 0xCB, 0xF2, 0xDE, 0xDA, 
   0xF3, 0xE5, 0xE2, 0xF5, 0xE3, 0xE0, 0xF6, 0xE2, 0xDF, 0xF2, 0xDC, 0xDA, 0xEE, 0xD6, 0xD4, 0xF0, 
   0xD9, 0xD6, 0xEB, 0xD5, 0xCD, 0xF4, 0xDF, 0xD8, 0xD2, 0xC2, 0xBE, 0x6A, 0x61, 0x60, 0x55, 0x51, 
   0x52, 0x5F, 0x5E, 0x61, 0x4A, 0x4F, 0x52, 0x41, 0x4A, 0x4E, 0x72, 0x77, 0x7E, 0x63, 0x63, 0x67, 
   0x4D, 0x45, 0x44, 0x59, 0x4A, 0x41, 0x61, 0x4C, 0x41, 0x69, 0x4F, 0x45, 0x68, 0x4E, 0x44, 0x6A, 
   0x50, 0x46, 0x66, 0x4C, 0x42, 0x65, 0x4B, 0x41, 0x66, 0x4C, 0x42, 0x65, 0x4B, 0x42, 0x68, 0x4C, 
   0x45, 0x67, 0x4C, 0x44, 0x63, 0x48, 0x40, 0x66, 0x4B, 0x43, 0x66, 0x4A, 0x42, 0x63, 0x48, 0x40, 
   0x5C, 0x48, 0x43, 0x5F, 0x4B, 0x45, 0x5F, 0x4A, 0x42, 0x61, 0x4B, 0x40, 0x67, 0x4F, 0x40, 0x68, 
   0x4F, 0x3E, 0x68, 0x4E, 0x3E, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 
   0x3E, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x68, 0x4D, 0x3F, 0x67, 0x4C, 0x3E, 
   0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x68, 0x4D, 0x3F, 0x68, 0x4D, 0x3F, 0x68, 
   0x4D, 0x3F, 0x69, 0x4E, 0x40, 0x68, 0x4D, 0x3F, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 
   0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 
   0x66, 0x4C, 0x3E, 0x66, 0x4C, 0x3E, 0xDD, 0xBD, 0xB7, 0xDF, 0xBF, 0xB9, 0xE0, 0xC0, 0xBA, 0xE1, 
   0xC1, 0xBB, 0xE5, 0xC5, 0xBF, 0xE8, 0xC8, 0xC2, 0xE7, 0xC7, 0xC1, 0xE2, 0xC2, 0xBD, 0xE0, 0xC0, 
   0xBB, 0xE3, 0xC3, 0xBE, 0xE1, 0xC1, 0xBC, 0xDD, 0xBD, 0xB8, 0xDB, 0xBB, 0xB6, 0xDA, 0xB9, 0xB6, 
   0xDD, 0xBC, 0xB9, 0xE6, 0xC5, 0xC2, 0xE4, 0xC3, 0xC0, 0xE4, 0xC4, 0xC1, 0xEB, 0xCB, 0xC8, 0xE9, 
   0xC9, 0xC6, 0xD8, 0xBC, 0xB8, 0xE6, 0xC9, 0xC6, 0xEB, 0xCE, 0xCB, 0xEC, 0xCF, 0xCB, 0xE6, 0xC9, 
   0xC5, 0xDA, 0xBD, 0xBA, 0xE1, 0xC1, 0xBE, 0xE5, 0xC5, 0xC2, 0xE0, 0xC0, 0xBD, 0xE3, 0xC3, 0xC0, 
   0xE6, 0xC6, 0xC3, 0xE5, 0xC5, 0xC2, 0xE2, 0xC2, 0xBF, 0xDD, 0xBB, 0xB8, 0xDC, 0xBA, 0xB7, 0xDF, 
   0xBD, 0xBA, 0xDC, 0xBA, 0xB7, 0xD0, 0xAE, 0xAB, 0xD8, 0xB6, 0xB3, 0xE0, 0xBF, 0xBC, 0xE7, 0xC7, 
   0xC4, 0xF6, 0xD6, 0xD3, 0xF7, 0xD7, 0xD4, 0xEF, 0xCF, 0xCC, 0xE8, 0xC8, 0xC5, 0xE2, 0xC2, 0xBF, 
   0xE0, 0xBF, 0xB9, 0xDC, 0xBC, 0xB6, 0xD7, 0xB7, 0xB1, 0xD4, 0xB4, 0xAE, 0xD3, 0xB3, 0xAD, 0xD0, 
   0xB0, 0xAA, 0xD0, 0xB0, 0xAA, 0xCF, 0xAF, 0xAA, 0xCA, 0xAA, 0xA4, 0xCD, 0xAD, 0xA7, 0xCA, 0xAA, 
   0xA5, 0xCB, 0xAB, 0xA5, 0xB7, 0x98, 0x92, 0xAC, 0x97, 0x92, 0xB5, 0xA1, 0x9C, 0xAF, 0x9B, 0x96, 
   0x96, 0x83, 0x7E, 0xBB, 0xAA, 0xA4, 0xC3, 0xB3, 0xAD, 0xC6, 0xB4, 0xAF, 0xBD, 0xA9, 0xA7, 0xB6, 
   0xA4, 0xA1, 0xCA, 0xB8, 0xB6, 0xD5, 0xC2, 0xC1, 0xF1, 0xE1, 0xDF, 0xE3, 0xD0, 0xD0, 0xDC, 0xBE, 
   0xBD, 0xBA, 0xA1, 0xA0, 0xA3, 0x91, 0x8E, 0x95, 0x8C, 0x89, 0x63, 0x63, 0x5E, 0x53, 0x5B, 0x55, 
   0x5E, 0x65, 0x61, 0x70, 0x71, 0x72, 0x61, 0x63, 0x63, 0x46, 0x47, 0x47, 0x42, 0x43, 0x43, 0x50, 
   0x51, 0x51, 0x93, 0x93, 0x93, 0x72, 0x71, 0x74, 0x35, 0x36, 0x36, 0x3A, 0x3D, 0x3C, 0x43, 0x46, 
   0x44, 0x5D, 0x5B, 0x5A, 0x87, 0x7F, 0x7E, 0xB9, 0xA9, 0xAA, 0xC5, 0xB1, 0xB2, 0xC5, 0xB2, 0xB3, 
   0xC4, 0xB1, 0xB2, 0xBF, 0xAD, 0xAE, 0xBE, 0xAD, 0xAE, 0xA0, 0x90, 0x90, 0x7C, 0x74, 0x6E, 0x53, 
   0x4F, 0x4A, 0x3D, 0x3A, 0x38, 0x41, 0x41, 0x40, 0x44, 0x48, 0x49, 0x63, 0x69, 0x6C, 0x68, 0x71, 
   0x71, 0x3A, 0x43, 0x40, 0x35, 0x3B, 0x3A, 0x33, 0x36, 0x37, 0x3C, 0x3E, 0x41, 0x3F, 0x42, 0x47, 
   0x3A, 0x3D, 0x45, 0x99, 0x9A, 0xA3, 0xA1, 0xA5, 0xAE, 0x6B, 0x75, 0x7E, 0x5C, 0x69, 0x75, 0x48, 
   0x59, 0x67, 0x48, 0x5C, 0x6B, 0x45, 0x50, 0x5F, 0x66, 0x65, 0x70, 0xBC, 0xB5, 0xBA, 0xF0, 0xE0, 
   0xDE, 0xF2, 0xDD, 0xD9, 0xEB, 0xD5, 0xD3, 0xE9, 0xD5, 0xD6, 0xDA, 0xD3, 0xD7, 0x75, 0x70, 0x74, 
   0x37, 0x33, 0x37, 0x3F, 0x3F, 0x43, 0x43, 0x46, 0x49, 0x54, 0x59, 0x5B, 0x4D, 0x50, 0x52, 0x32, 
   0x32, 0x35, 0x5A, 0x5A, 0x5D, 0x83, 0x82, 0x85, 0x45, 0x45, 0x49, 0x41, 0x45, 0x47, 0x42, 0x47, 
   0x49, 0x3A, 0x3D, 0x3B, 0x29, 0x2C, 0x2B, 0x2F, 0x36, 0x35, 0x39, 0x40, 0x41, 0x33, 0x37, 0x3A, 
   0x2E, 0x2D, 0x34, 0xBF, 0xBD, 0xC1, 0x94, 0x94, 0x93, 0x23, 0x26, 0x27, 0x45, 0x4C, 0x50, 0x41, 
   0x4C, 0x52, 0x4B, 0x5A, 0x61, 0x36, 0x48, 0x50, 0x31, 0x46, 0x4D, 0x31, 0x45, 0x4C, 0x3A, 0x47, 
   0x4E, 0x35, 0x3C, 0x42, 0x83, 0x83, 0x88, 0xE6, 0xE2, 0xE6, 0xCE, 0xC4, 0xC7, 0xBD, 0xB1, 0xB4, 
   0x7E, 0x7F, 0x85, 0x40, 0x52, 0x5E, 0x56, 0x6F, 0x7C, 0x77, 0x8D, 0x9B, 0x45, 0x56, 0x63, 0x35, 
   0x3E, 0x40, 0x37, 0x3D, 0x3B, 0x3C, 0x43, 0x44, 0x3E, 0x45, 0x4A, 0x38, 0x3F, 0x47, 0x3F, 0x47, 
   0x50, 0x40, 0x4C, 0x55, 0x46, 0x56, 0x5D, 0x6E, 0x7F, 0x86, 0x73, 0x85, 0x8F, 0x61, 0x72, 0x7F, 
   0x4E, 0x61, 0x70, 0x7D, 0x90, 0xA1, 0x51, 0x68, 0x76, 0x5E, 0x7A, 0x87, 0x4F, 0x6A, 0x7C, 0x4D, 
   0x68, 0x7E, 0x6C, 0x89, 0x9E, 0x55, 0x72, 0x85, 0x4D, 0x67, 0x78, 0xB5, 0xAC, 0xB6, 0xDA, 0xC5, 
   0xCA, 0xE1, 0xC2, 0xC3, 0xEA, 0xC6, 0xC2, 0xE5, 0xC6, 0xC2, 0xEB, 0xD2, 0xCE, 0xF4, 0xE3, 0xDF, 
   0xF4, 0xE6, 0xE3, 0xF4, 0xE2, 0xDF, 0xEE, 0xDA, 0xD7, 0xED, 0xD5, 0xD3, 0xF4, 0xDA, 0xD8, 0xF5, 
   0xDA, 0xD7, 0xE5, 0xCE, 0xC6, 0xD8, 0xC5, 0xBD, 0x7B, 0x6F, 0x6A, 0x57, 0x53, 0x53, 0x43, 0x45, 
   0x47, 0x34, 0x38, 0x3E, 0x3D, 0x41, 0x47, 0x5F, 0x62, 0x67, 0x82, 0x80, 0x85, 0x54, 0x4B, 0x4C, 
   0x5A, 0x4A, 0x44, 0x68, 0x51, 0x45, 0x69, 0x4D, 0x40, 0x69, 0x4E, 0x43, 0x67, 0x4C, 0x41, 0x68, 
   0x4C, 0x42, 0x68, 0x4D, 0x42, 0x66, 0x4B, 0x40, 0x67, 0x4C, 0x42, 0x6B, 0x4C, 0x42, 0x6D, 0x4B, 
   0x40, 0x6C, 0x4B, 0x3F, 0x6D, 0x4B, 0x40, 0x6E, 0x4C, 0x41, 0x6D, 0x4C, 0x40, 0x6D, 0x4C, 0x41, 
   0x66, 0x4A, 0x42, 0x65, 0x4B, 0x42, 0x67, 0x4E, 0x43, 0x65, 0x4C, 0x3E, 0x68, 0x4F, 0x3E, 0x68, 
   0x50, 0x3D, 0x67, 0x4E, 0x3D, 0x68, 0x4D, 0x3F, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x67, 0x4C, 
   0x3E, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x68, 0x4D, 0x3F, 0x67, 0x4C, 0x3E, 
   0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x68, 0x4D, 0x3F, 0x68, 0x4D, 0x3F, 0x68, 
   0x4D, 0x3F, 0x69, 0x4E, 0x40, 0x68, 0x4D, 0x3F, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 
   0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 
   0x66, 0x4B, 0x3D, 0x65, 0x4B, 0x3D, 0xDC, 0xBC, 0xB6, 0xDD, 0xBD, 0xB7, 0xDF, 0xBF, 0xB9, 0xE1, 
   0xC1, 0xBB, 0xDE, 0xBE, 0xB8, 0xDB, 0xBB, 0xB5, 0xDE, 0xBE, 0xB8, 0xDC, 0xBC, 0xB7, 0xDD, 0xBD, 
   0xB8, 0xE3, 0xC3, 0xBE, 0xE1, 0xC1, 0xBC, 0xDD, 0xBD, 0xB8, 0xDB, 0xBB, 0xB5, 0xDC, 0xBB, 0xB8, 
   0xDB, 0xBA, 0xB7, 0xDE, 0xBD, 0xBA, 0xE4, 0xC3, 0xC0, 0xF2, 0xD2, 0xCF, 0xFA, 0xDF, 0xDC, 0xFC, 
   0xE0, 0xDD, 0xE7, 0xCD, 0xC9, 0xE4, 0xCB, 0xC7, 0xF0, 0xD6, 0xD2, 0xF5, 0xDB, 0xD7, 0xF7, 0xDD, 
   0xD9, 0xF3, 0xD9, 0xD5, 0xF2, 0xD5, 0xD1, 0xF3, 0xD6, 0xD2, 0xF2, 0xD4, 0xD1, 0xED, 0xCF, 0xCC, 
   0xE7, 0xC9, 0xC5, 0xE6, 0xC7, 0xC4, 0xE5, 0xC7, 0xC3, 0xDC, 0xBB, 0xB8, 0xD8, 0xB7, 0xB4, 0xD7, 
   0xB6, 0xB3, 0xDB, 0xBA, 0xB7, 0xDF, 0xBE, 0xBB, 0xD7, 0xB6, 0xB3, 0xDB, 0xBA, 0xB7, 0xDC, 0xBB, 
   0xB8, 0xE2, 0xC1, 0xBE, 0xEA, 0xC9, 0xC6, 0xF5, 0xD4, 0xD1, 0xF9, 0xD8, 0xD5, 0xF2, 0xD1, 0xCE, 
   0xE3, 0xC3, 0xBE, 0xE1, 0xC1, 0xBB, 0xDA, 0xBA, 0xB4, 0xD4, 0xB4, 0xAE, 0xD3, 0xB3, 0xAD, 0xD3, 
   0xB3, 0xAD, 0xD1, 0xB1, 0xAB, 0xCC, 0xAC, 0xA6, 0xC8, 0xA8, 0xA2, 0xC6, 0xA6, 0xA0, 0xBC, 0x9C, 
   0x96, 0xAB, 0x8B, 0x85, 0xC4, 0xA5, 0x9F, 0xB5, 0x9D, 0x98, 0x95, 0x7C, 0x78, 0x9C, 0x84, 0x7F, 
   0xAA, 0x93, 0x8E, 0xA6, 0x8F, 0x8A, 0x98, 0x80, 0x7C, 0x85, 0x70, 0x6B, 0x9E, 0x8D, 0x89, 0x9E, 
   0x8D, 0x8A, 0xA4, 0x94, 0x92, 0xAF, 0xA0, 0x9F, 0xD1, 0xC4, 0xC3, 0xF2, 0xE3, 0xE4, 0xEC, 0xD1, 
   0xD2, 0xC4, 0xAE, 0xAF, 0x95, 0x87, 0x86, 0x52, 0x4E, 0x4B, 0x49, 0x4F, 0x4B, 0x54, 0x60, 0x5A, 
   0x4F, 0x58, 0x56, 0x61, 0x66, 0x68, 0x89, 0x8E, 0x90, 0x72, 0x77, 0x79, 0x37, 0x3C, 0x3E, 0x3C, 
   0x41, 0x43, 0x6D, 0x71, 0x74, 0x65, 0x6A, 0x6E, 0x45, 0x4D, 0x4F, 0x49, 0x53, 0x54, 0x35, 0x40, 
   0x41, 0x3C, 0x43, 0x45, 0x4D, 0x4C, 0x50, 0x61, 0x5B, 0x5E, 0x7D, 0x72, 0x75, 0x7E, 0x75, 0x78, 
   0x6B, 0x62, 0x64, 0x5D, 0x54, 0x57, 0x70, 0x66, 0x69, 0x5F, 0x55, 0x58, 0x4C, 0x49, 0x48, 0x49, 
   0x48, 0x47, 0x39, 0x39, 0x3A, 0x42, 0x45, 0x47, 0x69, 0x70, 0x72, 0x5B, 0x63, 0x66, 0x39, 0x44, 
   0x44, 0x3A, 0x46, 0x43, 0x47, 0x51, 0x50, 0x44, 0x4D, 0x4D, 0x45, 0x4B, 0x50, 0x43, 0x46, 0x4E, 
   0xA7, 0xA8, 0xB3, 0xA6, 0xA6, 0xB1, 0x78, 0x7C, 0x87, 0x39, 0x43, 0x4E, 0x25, 0x33, 0x3E, 0x50, 
   0x5E, 0x6B, 0x4F, 0x5D, 0x6C, 0x61, 0x67, 0x74, 0x7D, 0x7A, 0x83, 0xDA, 0xD1, 0xD5, 0xCD, 0xC0, 
   0xBF, 0xB5, 0xA4, 0xA1, 0xD5, 0xC3, 0xC1, 0xE0, 0xCE, 0xCF, 0x7C, 0x76, 0x7B, 0x46, 0x42, 0x47, 
   0x47, 0x43, 0x48, 0x38, 0x38, 0x3B, 0x44, 0x45, 0x49, 0x67, 0x69, 0x6E, 0x4A, 0x49, 0x4C, 0x4D, 
   0x48, 0x49, 0x6D, 0x66, 0x68, 0x94, 0x8D, 0x8E, 0x4C, 0x49, 0x49, 0x48, 0x4A, 0x4B, 0x41, 0x48, 
   0x47, 0x2E, 0x33, 0x2E, 0x1D, 0x22, 0x1F, 0x2C, 0x32, 0x31, 0x2E, 0x34, 0x36, 0x2F, 0x30, 0x36, 
   0x5C, 0x57, 0x61, 0xDB, 0xD6, 0xDA, 0x47, 0x45, 0x44, 0x35, 0x36, 0x37, 0x41, 0x48, 0x4A, 0x50, 
   0x5A, 0x5F, 0x4C, 0x5C, 0x63, 0x41, 0x54, 0x5C, 0x29, 0x3F, 0x47, 0x31, 0x45, 0x4E, 0x41, 0x4E, 
   0x56, 0x49, 0x4E, 0x54, 0xBE, 0xB9, 0xBE, 0xF3, 0xEA, 0xED, 0xF5, 0xE7, 0xE9, 0xE2, 0xD2, 0xD7, 
   0x62, 0x5E, 0x67, 0x49, 0x59, 0x65, 0x64, 0x7C, 0x87, 0x72, 0x87, 0x94, 0x32, 0x42, 0x4E, 0x37, 
   0x3F, 0x41, 0x3A, 0x3F, 0x3E, 0x47, 0x4F, 0x50, 0x3C, 0x44, 0x49, 0x31, 0x38, 0x41, 0x42, 0x4B, 
   0x55, 0x43, 0x4F, 0x59, 0x6B, 0x7C, 0x85, 0x6F, 0x81, 0x8B, 0x74, 0x87, 0x92, 0x4B, 0x5F, 0x6C, 
   0x64, 0x7A, 0x89, 0x66, 0x7C, 0x8C, 0x4C, 0x65, 0x73, 0x5A, 0x76, 0x83, 0x52, 0x6F, 0x80, 0x57, 
   0x74, 0x8A, 0x5F, 0x79, 0x90, 0x4C, 0x62, 0x77, 0x70, 0x82, 0x95, 0xC9, 0xB4, 0xBD, 0xD0, 0xB2, 
   0xB6, 0xDD, 0xB9, 0xBA, 0xE2, 0xBF, 0xBB, 0xE7, 0xC9, 0xC4, 0xF0, 0xDA, 0xD6, 0xF0, 0xE0, 0xDC, 
   0xF1, 0xE2, 0xDF, 0xED, 0xDC, 0xD9, 0xEA, 0xD5, 0xD2, 0xF1, 0xD9, 0xD7, 0xF0, 0xD4, 0xD3, 0xE2, 
   0xC5, 0xC4, 0xD5, 0xBD, 0xB6, 0x8E, 0x7D, 0x76, 0x56, 0x4E, 0x4A, 0x45, 0x47, 0x47, 0x3D, 0x43, 
   0x45, 0x42, 0x4B, 0x51, 0x44, 0x47, 0x4D, 0x6D, 0x6A, 0x6D, 0x69, 0x62, 0x62, 0x58, 0x48, 0x44, 
   0x62, 0x4B, 0x42, 0x6B, 0x4E, 0x40, 0x6F, 0x4F, 0x3F, 0x69, 0x4C, 0x41, 0x6D, 0x50, 0x45, 0x6A, 
   0x4E, 0x43, 0x68, 0x4C, 0x41, 0x68, 0x4B, 0x40, 0x69, 0x4C, 0x41, 0x69, 0x4B, 0x3E, 0x6D, 0x4D, 
   0x3F, 0x6D, 0x4E, 0x40, 0x6D, 0x4D, 0x3F, 0x6C, 0x4C, 0x3E, 0x6B, 0x4B, 0x3C, 0x6C, 0x4D, 0x3E, 
   0x6C, 0x4B, 0x40, 0x68, 0x49, 0x3D, 0x69, 0x4C, 0x3F, 0x69, 0x4E, 0x3F, 0x67, 0x4E, 0x3C, 0x67, 
   0x50, 0x3C, 0x66, 0x4D, 0x3C, 0x68, 0x4D, 0x3F, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 
   0x3E, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x68, 0x4D, 0x3F, 0x67, 0x4C, 0x3E, 
   0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x68, 0x4D, 0x3F, 0x67, 0x4C, 0x3E, 0x67, 
   0x4C, 0x3E, 0x68, 0x4D, 0x3F, 0x68, 0x4D, 0x3F, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 
   0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 
   0x65, 0x4B, 0x3D, 0x65, 0x4B, 0x3D, 0xDD, 0xBD, 0xB7, 0xDA, 0xBA, 0xB4, 0xDA, 0xBA, 0xB4, 0xDB, 
   0xBB, 0xB5, 0xDE, 0xBE, 0xB8, 0xDC, 0xBC, 0xB6, 0xDD, 0xBD, 0xB7, 0xDD, 0xBD, 0xB6, 0xDB, 0xBB, 
   0xB4, 0xDD, 0xBD, 0xB7, 0xE1, 0xC1, 0xBB, 0xE0, 0xC0, 0xBA, 0xDE, 0xBE, 0xB7, 0xDC, 0xBB, 0xB6, 
   0xDC, 0xBB, 0xB8, 0xDC, 0xBB, 0xB8, 0xD8, 0xB7, 0xB4, 0xD7, 0xB6, 0xB3, 0xDB, 0xB9, 0xB6, 0xDE, 
   0xBF, 0xBB, 0xD8, 0xBF, 0xBB, 0xD4, 0xBB, 0xB7, 0xDC, 0xC3, 0xBF, 0xDE, 0xC5, 0xC1, 0xE0, 0xC7, 
   0xC3, 0xE2, 0xC9, 0xC5, 0xE8, 0xCC, 0xC8, 0xF0, 0xD3, 0xCF, 0xE6, 0xCA, 0xC6, 0xDD, 0xC0, 0xBC, 
   0xE1, 0xC4, 0xC0, 0xEA, 0xCD, 0xC9, 0xE5, 0xC8, 0xC4, 0xDF, 0xBF, 0xBC, 0xDE, 0xBD, 0xBA, 0xDA, 
   0xBA, 0xB7, 0xD3, 0xB2, 0xAF, 0xD8, 0xB8, 0xB5, 0xD2, 0xB1, 0xAE, 0xCD, 0xAC, 0xA9, 0xDE, 0xBD, 
   0xBA, 0xD7, 0xB6, 0xB3, 0xD1, 0xB0, 0xAD, 0xDB, 0xBA, 0xB7, 0xE6, 0xC5, 0xC2, 0xF1, 0xD0, 0xCD, 
   0xEA, 0xCA, 0xC4, 0xE1, 0xC1, 0xBB, 0xE2, 0xC2, 0xBC, 0xDB, 0xBB, 0xB5, 0xD5, 0xB5, 0xAF, 0xD2, 
   0xB2, 0xAC, 0xD0, 0xB0, 0xAA, 0xD2, 0xB2, 0xAE, 0xCB, 0xAB, 0xA6, 0xBE, 0x9E, 0x99, 0xBB, 0x9B, 
   0x96, 0xBC, 0x9C, 0x97, 0xC7, 0xA7, 0xA2, 0xC7, 0xA9, 0xA5, 0xB9, 0x9B, 0x98, 0xBC, 0x9E, 0x9A, 
   0xBE, 0x9E, 0x9B, 0xC8, 0xA7, 0xA4, 0xD0, 0xAF, 0xAC, 0xB6, 0x9C, 0x98, 0xB5, 0xA5, 0x9F, 0x9A, 
   0x89, 0x86, 0x7D, 0x6E, 0x6D, 0x7D, 0x71, 0x70, 0x9E, 0x92, 0x93, 0xC1, 0xB6, 0xB9, 0xE3, 0xD1, 
   0xD3, 0xDD, 0xCE, 0xD0, 0xD4, 0xCA, 0xCB, 0x8E, 0x8B, 0x8A, 0x43, 0x46, 0x45, 0x47, 0x4F, 0x4D, 
   0x56, 0x5B, 0x5D, 0x61, 0x61, 0x68, 0x81, 0x83, 0x89, 0x8E, 0x91, 0x96, 0x8F, 0x92, 0x98, 0x66, 
   0x69, 0x6E, 0x40, 0x43, 0x48, 0x43, 0x4A, 0x4D, 0x4A, 0x54, 0x58, 0x47, 0x53, 0x58, 0x52, 0x5E, 
   0x62, 0x4A, 0x53, 0x58, 0x5D, 0x61, 0x67, 0x6A, 0x6A, 0x70, 0x67, 0x65, 0x6B, 0x65, 0x63, 0x69, 
   0x70, 0x6E, 0x74, 0x8A, 0x88, 0x8E, 0x88, 0x84, 0x8A, 0x75, 0x71, 0x76, 0x71, 0x70, 0x74, 0x4E, 
   0x50, 0x52, 0x70, 0x72, 0x77, 0x86, 0x8A, 0x8F, 0x71, 0x78, 0x7D, 0x3B, 0x43, 0x48, 0x41, 0x4C, 
   0x4E, 0x46, 0x53, 0x51, 0x49, 0x55, 0x56, 0x57, 0x63, 0x66, 0x41, 0x49, 0x4F, 0x6A, 0x6D, 0x77, 
   0x6D, 0x6D, 0x78, 0x34, 0x32, 0x3C, 0x28, 0x2A, 0x35, 0x26, 0x2F, 0x39, 0x37, 0x43, 0x4D, 0x61, 
   0x6B, 0x76, 0x67, 0x6D, 0x7A, 0x65, 0x65, 0x70, 0xB2, 0xAC, 0xB3, 0xCD, 0xC4, 0xC8, 0x94, 0x88, 
   0x88, 0xA7, 0x9A, 0x98, 0xB7, 0xA9, 0xA7, 0x86, 0x78, 0x78, 0x46, 0x3D, 0x42, 0x50, 0x49, 0x4E, 
   0x5F, 0x58, 0x5D, 0x73, 0x6C, 0x71, 0xA1, 0x9B, 0xA0, 0xDA, 0xD5, 0xDA, 0xB9, 0xB3, 0xB5, 0x76, 
   0x6B, 0x6B, 0x9E, 0x92, 0x91, 0xCE, 0xC1, 0xC0, 0x5D, 0x55, 0x54, 0x3B, 0x3C, 0x3A, 0x3D, 0x44, 
   0x40, 0x22, 0x26, 0x22, 0x27, 0x2C, 0x29, 0x31, 0x37, 0x36, 0x30, 0x34, 0x37, 0x51, 0x4F, 0x55, 
   0xE3, 0xDC, 0xE4, 0xC9, 0xC2, 0xC5, 0x32, 0x2C, 0x2A, 0x3E, 0x3A, 0x3A, 0x35, 0x38, 0x39, 0x53, 
   0x5B, 0x60, 0x45, 0x52, 0x59, 0x3B, 0x4B, 0x53, 0x3A, 0x4D, 0x57, 0x3C, 0x4F, 0x58, 0x42, 0x4D, 
   0x54, 0x54, 0x57, 0x5D, 0xD7, 0xD1, 0xD5, 0xF2, 0xE6, 0xE7, 0xFC, 0xEE, 0xF1, 0xAE, 0x9F, 0xA5, 
   0x35, 0x31, 0x3A, 0x51, 0x61, 0x6D, 0x71, 0x87, 0x93, 0x57, 0x6C, 0x77, 0x25, 0x35, 0x3F, 0x30, 
   0x3A, 0x3C, 0x39, 0x42, 0x42, 0x44, 0x4C, 0x4F, 0x32, 0x3B, 0x41, 0x27, 0x30, 0x38, 0x31, 0x3A, 
   0x44, 0x51, 0x5C, 0x69, 0x6E, 0x81, 0x8D, 0x6C, 0x80, 0x8D, 0x67, 0x7C, 0x88, 0x48, 0x5F, 0x6B, 
   0x6B, 0x82, 0x91, 0x54, 0x6D, 0x7B, 0x48, 0x63, 0x71, 0x61, 0x7D, 0x8B, 0x5A, 0x78, 0x89, 0x64, 
   0x7F, 0x93, 0x52, 0x67, 0x7B, 0x5B, 0x68, 0x7B, 0xA2, 0xA9, 0xBA, 0xDD, 0xBF, 0xC6, 0xE3, 0xBE, 
   0xC1, 0xEC, 0xC7, 0xC5, 0xEA, 0xC7, 0xC3, 0xE4, 0xC8, 0xC3, 0xEB, 0xD7, 0xD3, 0xF8, 0xE6, 0xE3, 
   0xF0, 0xDE, 0xDC, 0xED, 0xD8, 0xD5, 0xEC, 0xD6, 0xD4, 0xEF, 0xD7, 0xD5, 0xE6, 0xCC, 0xCA, 0xD5, 
   0xBA, 0xB8, 0xA5, 0x8D, 0x89, 0x4F, 0x3F, 0x3B, 0x47, 0x42, 0x3F, 0x3C, 0x43, 0x41, 0x43, 0x4B, 
   0x4C, 0x44, 0x4E, 0x52, 0x4C, 0x4D, 0x4E, 0x62, 0x58, 0x57, 0x55, 0x47, 0x42, 0x63, 0x4D, 0x43, 
   0x6A, 0x4D, 0x41, 0x6E, 0x4E, 0x3F, 0x70, 0x4E, 0x3E, 0x6B, 0x4D, 0x42, 0x6B, 0x4D, 0x42, 0x6B, 
   0x4D, 0x42, 0x6A, 0x4C, 0x41, 0x6A, 0x4C, 0x41, 0x6A, 0x4C, 0x41, 0x69, 0x4D, 0x40, 0x67, 0x4E, 
   0x3E, 0x67, 0x4E, 0x3E, 0x67, 0x4E, 0x3E, 0x67, 0x4E, 0x3E, 0x67, 0x4E, 0x3E, 0x67, 0x4E, 0x3E, 
   0x6E, 0x4C, 0x3F, 0x6D, 0x4C, 0x3F, 0x6C, 0x4D, 0x3E, 0x6A, 0x4D, 0x3E, 0x68, 0x4E, 0x3D, 0x67, 
   0x4F, 0x3D, 0x67, 0x4E, 0x3E, 0x68, 0x4D, 0x3F, 0x68, 0x4D, 0x3F, 0x68, 0x4D, 0x3F, 0x67, 0x4C, 
   0x3E, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x69, 0x4E, 0x40, 0x6A, 0x4F, 0x41, 0x69, 0x4E, 0x40, 
   0x68, 0x4D, 0x3F, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x66, 0x4B, 0x3D, 0x66, 
   0x4B, 0x3D, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x65, 0x4A, 
   0x3C, 0x65, 0x4A, 0x3C, 0x65, 0x4A, 0x3C, 0x65, 0x4A, 0x3C, 0x65, 0x4A, 0x3C, 0x65, 0x4A, 0x3C, 
   0x64, 0x4A, 0x3C, 0x64, 0x4B, 0x3D, 0xE7, 0xC7, 0xC1, 0xE2, 0xC2, 0xBC, 0xE1, 0xC1, 0xBB, 0xE1, 
   0xC1, 0xBB, 0xDD, 0xBD, 0xB7, 0xDF, 0xBF, 0xB9, 0xDD, 0xBD, 0xB7, 0xDC, 0xBD, 0xB4, 0xDC, 0xBD, 
   0xB4, 0xDD, 0xBE, 0xB4, 0xDA, 0xBB, 0xB2, 0xDB, 0xBC, 0xB3, 0xDB, 0xBC, 0xB3, 0xDD, 0xBD, 0xB8, 
   0xE0, 0xBF, 0xBC, 0xE1, 0xC0, 0xBD, 0xE6, 0xC5, 0xC2, 0xF0, 0xCF, 0xCC, 0xEE, 0xCC, 0xCA, 0xE4, 
   0xC5, 0xC1, 0xE7, 0xCC, 0xC8, 0xEE, 0xD2, 0xCE, 0xE9, 0xCE, 0xCA, 0xEA, 0xCF, 0xCB, 0xE1, 0xC6, 
   0xC2, 0xDE, 0xC3, 0xBF, 0xE6, 0xC9, 0xC5, 0xF0, 0xD3, 0xCF, 0xE2, 0xC5, 0xC1, 0xE0, 0xC3, 0xBF, 
   0xD8, 0xBB, 0xB7, 0xD9, 0xBC, 0xB8, 0xE6, 0xC9, 0xC5, 0xEE, 0xCF, 0xCC, 0xE9, 0xCA, 0xC7, 0xE6, 
   0xC7, 0xC4, 0xDA, 0xBB, 0xB8, 0xCC, 0xAD, 0xAA, 0xD1, 0xB2, 0xAF, 0xCC, 0xAB, 0xA8, 0xD7, 0xB3, 
   0xB0, 0xE4, 0xC1, 0xBE, 0xE5, 0xC2, 0xBF, 0xDC, 0xB9, 0xB6, 0xD1, 0xAE, 0xAB, 0xDD, 0xBA, 0xB7, 
   0xEB, 0xCA, 0xC5, 0xDB, 0xBB, 0xB5, 0xDB, 0xBB, 0xB5, 0xE4, 0xC4, 0xBE, 0xD9, 0xB9, 0xB3, 0xC5, 
   0xA5, 0x9F, 0xBB, 0x9B, 0x96, 0xC4, 0xA4, 0x9F, 0xC7, 0xA7, 0xA2, 0xBC, 0x9C, 0x97, 0xB3, 0x93, 
   0x8E, 0xD7, 0xB7, 0xB2, 0xC4, 0xA4, 0x9F, 0xC3, 0xA5, 0xA1, 0xC8, 0xA9, 0xA6, 0xCD, 0xAE, 0xAB, 
   0xD1, 0xB0, 0xAD, 0xCC, 0xA9, 0xA6, 0xCF, 0xAC, 0xA9, 0xCF, 0xB3, 0xAF, 0xC2, 0xB0, 0xAB, 0xCE, 
   0xBD, 0xBA, 0xAC, 0x9D, 0x9D, 0xAD, 0x9F, 0xA1, 0x9C, 0x90, 0x93, 0x78, 0x6D, 0x73, 0xAF, 0xA5, 
   0xA8, 0xAC, 0xA3, 0xA6, 0x93, 0x8B, 0x8E, 0x8F, 0x89, 0x8C, 0x78, 0x75, 0x77, 0x53, 0x52, 0x54, 
   0x4F, 0x4A, 0x4E, 0x51, 0x4A, 0x51, 0x5D, 0x58, 0x5F, 0x56, 0x54, 0x5A, 0x9C, 0x9B, 0xA0, 0xB5, 
   0xB5, 0xBB, 0x8D, 0x8D, 0x93, 0x6B, 0x6F, 0x72, 0x67, 0x6F, 0x72, 0x69, 0x73, 0x77, 0x9B, 0xA7, 
   0xAC, 0x77, 0x7F, 0x86, 0x83, 0x86, 0x90, 0x9D, 0xA1, 0xAA, 0x96, 0x9B, 0xA4, 0x80, 0x83, 0x8C, 
   0x9D, 0xA0, 0xAA, 0xB8, 0xB8, 0xC2, 0xC4, 0xC3, 0xCD, 0x8A, 0x89, 0x93, 0x65, 0x66, 0x6E, 0x5D, 
   0x5F, 0x67, 0x9F, 0xA2, 0xAA, 0xAC, 0xB1, 0xB8, 0x57, 0x5D, 0x64, 0x4E, 0x56, 0x5D, 0x51, 0x5A, 
   0x60, 0x52, 0x5D, 0x61, 0x4A, 0x56, 0x5A, 0x53, 0x5F, 0x65, 0x69, 0x71, 0x78, 0x8D, 0x8F, 0x99, 
   0x61, 0x5E, 0x68, 0x27, 0x22, 0x2B, 0x3A, 0x39, 0x42, 0x41, 0x49, 0x50, 0x54, 0x5E, 0x65, 0x7C, 
   0x82, 0x89, 0x5B, 0x58, 0x63, 0x96, 0x8F, 0x98, 0xE8, 0xE1, 0xE4, 0xD9, 0xD1, 0xD3, 0xD3, 0xC8, 
   0xCA, 0xCA, 0xBF, 0xBF, 0xCB, 0xBF, 0xBF, 0xC0, 0xB4, 0xB4, 0xB2, 0xA5, 0xA8, 0xC7, 0xB9, 0xBD, 
   0xCF, 0xC0, 0xC4, 0xE9, 0xDA, 0xDE, 0xEC, 0xE0, 0xE3, 0xF6, 0xEC, 0xEF, 0xF9, 0xED, 0xEE, 0xC8, 
   0xBA, 0xB6, 0xE1, 0xCF, 0xCE, 0xDE, 0xCC, 0xCB, 0x95, 0x89, 0x87, 0x4B, 0x4B, 0x47, 0x2F, 0x38, 
   0x33, 0x26, 0x29, 0x29, 0x38, 0x3C, 0x3C, 0x3E, 0x44, 0x44, 0x35, 0x39, 0x3A, 0xC3, 0xC1, 0xC5, 
   0xFF, 0xFC, 0xFE, 0xD4, 0xCB, 0xCB, 0x4F, 0x43, 0x42, 0x6F, 0x67, 0x68, 0x50, 0x4F, 0x50, 0x3B, 
   0x40, 0x43, 0x3E, 0x4A, 0x4F, 0x42, 0x51, 0x58, 0x3E, 0x4E, 0x5A, 0x3E, 0x4C, 0x59, 0x47, 0x4E, 
   0x57, 0x69, 0x6A, 0x70, 0xE7, 0xE2, 0xE5, 0xF2, 0xE6, 0xE6, 0xED, 0xE0, 0xE2, 0x68, 0x5B, 0x62, 
   0x2F, 0x2F, 0x37, 0x44, 0x57, 0x62, 0x75, 0x8D, 0x99, 0x48, 0x5D, 0x66, 0x28, 0x36, 0x3F, 0x35, 
   0x41, 0x43, 0x3F, 0x4A, 0x4C, 0x39, 0x45, 0x48, 0x1E, 0x29, 0x30, 0x21, 0x2D, 0x36, 0x4D, 0x59, 
   0x64, 0x6D, 0x7C, 0x8A, 0x5E, 0x73, 0x82, 0x6F, 0x84, 0x93, 0x5F, 0x75, 0x84, 0x4F, 0x66, 0x76, 
   0x5F, 0x78, 0x86, 0x54, 0x6F, 0x7D, 0x4C, 0x67, 0x75, 0x63, 0x80, 0x8F, 0x67, 0x84, 0x95, 0x65, 
   0x7E, 0x8F, 0x56, 0x66, 0x76, 0x86, 0x87, 0x94, 0xD5, 0xCE, 0xD9, 0xE9, 0xC4, 0xCA, 0xE3, 0xBC, 
   0xBE, 0xE7, 0xC2, 0xBF, 0xE1, 0xC1, 0xBC, 0xDB, 0xC2, 0xBC, 0xE3, 0xD0, 0xCC, 0xF9, 0xE3, 0xE1, 
   0xEF, 0xD8, 0xD6, 0xE9, 0xD2, 0xD0, 0xEA, 0xD3, 0xD1, 0xE3, 0xCC, 0xCA, 0xE4, 0xCD, 0xCB, 0xE6, 
   0xCE, 0xCC, 0xD2, 0xBA, 0xBC, 0x61, 0x51, 0x52, 0x46, 0x43, 0x42, 0x4A, 0x51, 0x50, 0x4B, 0x52, 
   0x52, 0x4C, 0x51, 0x52, 0x5E, 0x5B, 0x58, 0x5B, 0x4D, 0x44, 0x60, 0x4D, 0x42, 0x6A, 0x50, 0x41, 
   0x6C, 0x4E, 0x3F, 0x6D, 0x4E, 0x3F, 0x6D, 0x4D, 0x40, 0x68, 0x4E, 0x3F, 0x68, 0x4E, 0x3F, 0x68, 
   0x4E, 0x3F, 0x68, 0x4D, 0x3F, 0x68, 0x4D, 0x3F, 0x68, 0x4D, 0x3F, 0x67, 0x4E, 0x3F, 0x65, 0x4E, 
   0x3E, 0x65, 0x4E, 0x3E, 0x65, 0x4E, 0x3E, 0x65, 0x4E, 0x3E, 0x65, 0x4E, 0x3E, 0x65, 0x4E, 0x3E, 
   0x6C, 0x4D, 0x3E, 0x6C, 0x4D, 0x3E, 0x6B, 0x4D, 0x3E, 0x6A, 0x4D, 0x3E, 0x6A, 0x4D, 0x3E, 0x68, 
   0x4E, 0x3E, 0x68, 0x4E, 0x3F, 0x68, 0x4D, 0x3F, 0x68, 0x4D, 0x3F, 0x68, 0x4D, 0x3F, 0x67, 0x4C, 
   0x3E, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x69, 0x4E, 0x40, 0x6B, 0x50, 0x42, 0x6A, 0x4F, 0x41, 
   0x68, 0x4D, 0x3F, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x66, 0x4B, 0x3D, 0x66, 
   0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x65, 0x4A, 
   0x3C, 0x65, 0x4A, 0x3C, 0x65, 0x4A, 0x3C, 0x65, 0x4A, 0x3C, 0x65, 0x4A, 0x3C, 0x65, 0x4A, 0x3C, 
   0x65, 0x4A, 0x3C, 0x64, 0x4A, 0x3C, 0xE2, 0xC2, 0xBC, 0xE1, 0xC1, 0xBB, 0xE2, 0xC2, 0xBC, 0xE6, 
   0xC6, 0xC0, 0xE4, 0xC4, 0xBE, 0xE2, 0xC2, 0xBC, 0xDE, 0xBF, 0xB7, 0xDD, 0xBE, 0xB5, 0xDE, 0xBF, 
   0xB6, 0xDC, 0xBD, 0xB4, 0xD7, 0xB8, 0xAF, 0xD9, 0xBA, 0xB1, 0xDA, 0xBB, 0xB2, 0xDF, 0xBF, 0xBA, 
   0xE0, 0xBF, 0xBC, 0xDF, 0xBE, 0xBB, 0xDE, 0xBD, 0xBA, 0xE1, 0xC0, 0xBD, 0xE2, 0xC1, 0xBE, 0xE2, 
   0xC2, 0xBE, 0xE4, 0xC7, 0xC3, 0xE0, 0xC4, 0xC0, 0xE2, 0xC5, 0xC1, 0xEE, 0xD1, 0xCD, 0xEC, 0xCF, 
   0xCB, 0xED, 0xD0, 0xCC, 0xE6, 0xCB, 0xC7, 0xEB, 0xD0, 0xCC, 0xF1, 0xD6, 0xD2, 0xF1, 0xD6, 0xD2, 
   0xF0, 0xD7, 0xD3, 0xF4, 0xDA, 0xD6, 0xEA, 0xCE, 0xCA, 0xE9, 0xCA, 0xC7, 0xF1, 0xD2, 0xCF, 0xFA, 
   0xDB, 0xD8, 0xFA, 0xDB, 0xD8, 0xEA, 0xCC, 0xC9, 0xC8, 0xA9, 0xA6, 0xD5, 0xB4, 0xB1, 0xD7, 0xB4, 
   0xB1, 0xD3, 0xB0, 0xAD, 0xDC, 0xB9, 0xB6, 0xD5, 0xB2, 0xAF, 0xCA, 0xA7, 0xA4, 0xDB, 0xB8, 0xB5, 
   0xE4, 0xC4, 0xBE, 0xCB, 0xAB, 0xA5, 0xC6, 0xA6, 0xA0, 0xD1, 0xB1, 0xAB, 0xBE, 0x9E, 0x98, 0xB3, 
   0x93, 0x8D, 0xBC, 0x9C, 0x97, 0xC3, 0xA2, 0x9F, 0xC9, 0xA8, 0xA5, 0xD0, 0xAF, 0xAC, 0xB6, 0x95, 
   0x92, 0xBA, 0x99, 0x96, 0xAC, 0x8C, 0x89, 0x9B, 0x85, 0x80, 0xBE, 0xA9, 0xA3, 0xC7, 0xAF, 0xAA, 
   0xB4, 0x9A, 0x96, 0xC0, 0xA3, 0x9F, 0xBB, 0x9D, 0x99, 0xAC, 0x92, 0x8D, 0xA7, 0x93, 0x8E, 0x9E, 
   0x8B, 0x88, 0x87, 0x76, 0x77, 0x63, 0x54, 0x57, 0x7D, 0x70, 0x75, 0x76, 0x6B, 0x72, 0x79, 0x79, 
   0x7A, 0x7B, 0x7B, 0x7D, 0x70, 0x6D, 0x6F, 0x86, 0x7F, 0x82, 0xB5, 0xAB, 0xAE, 0xA8, 0x9C, 0xA0, 
   0x94, 0x86, 0x8C, 0x8E, 0x80, 0x87, 0x86, 0x79, 0x80, 0x63, 0x59, 0x5F, 0x4E, 0x46, 0x4C, 0x5E, 
   0x58, 0x5D, 0x6F, 0x6A, 0x6F, 0x69, 0x67, 0x69, 0x64, 0x67, 0x6A, 0x72, 0x78, 0x7C, 0x76, 0x7D, 
   0x83, 0x4C, 0x50, 0x58, 0x57, 0x57, 0x61, 0x6A, 0x6E, 0x78, 0x7B, 0x84, 0x8D, 0x7B, 0x81, 0x8C, 
   0x71, 0x76, 0x81, 0x83, 0x86, 0x91, 0x81, 0x82, 0x8D, 0x7B, 0x7A, 0x86, 0x7B, 0x7B, 0x87, 0x78, 
   0x79, 0x83, 0x6C, 0x6F, 0x78, 0x6C, 0x6F, 0x78, 0x82, 0x87, 0x90, 0x7D, 0x83, 0x8B, 0x52, 0x58, 
   0x61, 0x44, 0x4C, 0x56, 0x45, 0x4F, 0x59, 0x53, 0x5E, 0x66, 0x8B, 0x91, 0x9A, 0x9D, 0x9D, 0xA5, 
   0x41, 0x3A, 0x44, 0x45, 0x3D, 0x45, 0x50, 0x4C, 0x53, 0x46, 0x4B, 0x4F, 0x58, 0x60, 0x63, 0x94, 
   0x96, 0x9A, 0x62, 0x5A, 0x61, 0x96, 0x8A, 0x8E, 0xDC, 0xD3, 0xD4, 0xE4, 0xDC, 0xDE, 0xAA, 0xA1, 
   0xA4, 0x65, 0x5D, 0x5D, 0xA9, 0xA0, 0xA0, 0xE9, 0xDF, 0xDF, 0xEF, 0xDF, 0xDF, 0xEE, 0xDC, 0xDD, 
   0xE9, 0xD5, 0xD7, 0xE6, 0xD2, 0xD4, 0xF5, 0xE2, 0xE4, 0xFD, 0xEB, 0xEE, 0xE4, 0xD2, 0xD2, 0xE1, 
   0xD0, 0xCD, 0xED, 0xD7, 0xD5, 0xD7, 0xC0, 0xBE, 0x8D, 0x7E, 0x7B, 0x45, 0x45, 0x3F, 0x22, 0x2D, 
   0x26, 0x31, 0x35, 0x38, 0x3A, 0x3D, 0x40, 0x3E, 0x43, 0x45, 0x8C, 0x90, 0x90, 0xF2, 0xEF, 0xF0, 
   0xF7, 0xF0, 0xF2, 0xDE, 0xCF, 0xCF, 0x8B, 0x79, 0x77, 0x96, 0x89, 0x89, 0x5D, 0x57, 0x58, 0x44, 
   0x45, 0x4A, 0x51, 0x59, 0x5F, 0x45, 0x51, 0x58, 0x45, 0x50, 0x5D, 0x46, 0x50, 0x5E, 0x43, 0x48, 
   0x52, 0x9B, 0x99, 0xA0, 0xF6, 0xEF, 0xF1, 0xF7, 0xEE, 0xED, 0xFB, 0xF3, 0xF4, 0x6E, 0x67, 0x6F, 
   0x39, 0x3F, 0x49, 0x56, 0x6A, 0x75, 0x7C, 0x95, 0xA0, 0x39, 0x4C, 0x56, 0x28, 0x35, 0x3E, 0x35, 
   0x42, 0x45, 0x3F, 0x4E, 0x4F, 0x32, 0x41, 0x45, 0x1D, 0x2D, 0x33, 0x35, 0x44, 0x4C, 0x74, 0x83, 
   0x8F, 0x6B, 0x7C, 0x8A, 0x5D, 0x72, 0x83, 0x6E, 0x85, 0x95, 0x57, 0x70, 0x7F, 0x4B, 0x65, 0x73, 
   0x64, 0x7F, 0x8D, 0x60, 0x7C, 0x8A, 0x57, 0x75, 0x83, 0x62, 0x81, 0x90, 0x4B, 0x68, 0x79, 0x5D, 
   0x75, 0x84, 0x7B, 0x85, 0x90, 0xAE, 0xA5, 0xAC, 0xC9, 0xB8, 0xBC, 0xD8, 0xB2, 0xB6, 0xDC, 0xB5, 
   0xB6, 0xE1, 0xBD, 0xB9, 0xDA, 0xBC, 0xB5, 0xE9, 0xD0, 0xCB, 0xF0, 0xDE, 0xDB, 0xF1, 0xD8, 0xD7, 
   0xEA, 0xCC, 0xCB, 0xE6, 0xCB, 0xCA, 0xE3, 0xCB, 0xC9, 0xE0, 0xCA, 0xC8, 0xF0, 0xDC, 0xDA, 0xF2, 
   0xE0, 0xDD, 0xF1, 0xD9, 0xE0, 0xBB, 0xAC, 0xB1, 0xB8, 0xB7, 0xB8, 0x6D, 0x73, 0x72, 0x41, 0x45, 
   0x43, 0x53, 0x54, 0x51, 0x60, 0x57, 0x4F, 0x61, 0x4F, 0x40, 0x68, 0x53, 0x41, 0x6B, 0x4F, 0x3C, 
   0x6D, 0x4F, 0x3D, 0x6A, 0x4E, 0x41, 0x69, 0x4D, 0x43, 0x67, 0x4D, 0x3F, 0x67, 0x4D, 0x3F, 0x67, 
   0x4D, 0x3F, 0x67, 0x4D, 0x3F, 0x67, 0x4D, 0x3F, 0x67, 0x4D, 0x3F, 0x67, 0x4E, 0x3F, 0x67, 0x4E, 
   0x3E, 0x67, 0x4E, 0x3E, 0x67, 0x4E, 0x3E, 0x67, 0x4E, 0x3E, 0x67, 0x4E, 0x3E, 0x67, 0x4E, 0x3E, 
   0x68, 0x4D, 0x3F, 0x68, 0x4D, 0x3F, 0x68, 0x4D, 0x3F, 0x69, 0x4D, 0x40, 0x6A, 0x4C, 0x41, 0x6A, 
   0x4C, 0x41, 0x69, 0x4D, 0x40, 0x68, 0x4D, 0x3F, 0x68, 0x4D, 0x3F, 0x68, 0x4D, 0x3F, 0x67, 0x4C, 
   0x3E, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x68, 0x4D, 0x3F, 0x67, 0x4C, 0x3E, 
   0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x66, 0x4B, 0x3D, 0x66, 
   0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x65, 0x4A, 
   0x3C, 0x65, 0x4A, 0x3C, 0x65, 0x4A, 0x3C, 0x65, 0x4A, 0x3C, 0x65, 0x4A, 0x3C, 0x65, 0x4A, 0x3C, 
   0x65, 0x4A, 0x3C, 0x64, 0x4A, 0x3C, 0xDE, 0xBE, 0xB8, 0xE1, 0xC1, 0xBB, 0xDE, 0xBE, 0xB8, 0xDD, 
   0xBE, 0xB8, 0xE0, 0xC0, 0xBA, 0xDE, 0xBE, 0xB8, 0xDE, 0xBF, 0xB7, 0xDE, 0xC0, 0xB6, 0xE0, 0xC1, 
   0xB8, 0xDD, 0xBE, 0xB5, 0xD9, 0xBA, 0xB1, 0xDA, 0xBB, 0xB2, 0xDA, 0xBB, 0xB2, 0xDB, 0xBB, 0xB6, 
   0xD9, 0xB8, 0xB6, 0xDA, 0xB9, 0xB6, 0xD9, 0xB9, 0xB5, 0xD9, 0xB8, 0xB5, 0xD9, 0xB8, 0xB5, 0xD7, 
   0xB7, 0xB4, 0xDA, 0xBC, 0xB8, 0xD5, 0xB7, 0xB4, 0xD9, 0xBB, 0xB8, 0xDD, 0xBE, 0xBB, 0xDF, 0xC0, 
   0xBD, 0xD9, 0xBB, 0xB7, 0xDC, 0xC1, 0xBD, 0xDD, 0xC3, 0xBF, 0xD3, 0xB9, 0xB4, 0xD5, 0xBA, 0xB6, 
   0xD6, 0xBD, 0xB9, 0xD9, 0xBF, 0xBB, 0xD7, 0xBD, 0xB9, 0xDD, 0xBF, 0xBB, 0xDF, 0xC1, 0xBE, 0xE2, 
   0xC4, 0xC0, 0xE4, 0xC7, 0xC3, 0xEC, 0xCF, 0xCB, 0xE1, 0xC5, 0xC1, 0xCF, 0xAF, 0xAC, 0xD4, 0xB1, 
   0xAE, 0xCD, 0xAA, 0xA7, 0xD1, 0xAE, 0xAB, 0xC7, 0xA4, 0xA1, 0xC3, 0xA0, 0x9C, 0xD4, 0xB1, 0xAE, 
   0xCD, 0xAC, 0xA7, 0xCF, 0xAE, 0xA8, 0xC1, 0xA0, 0x9A, 0xC8, 0xA8, 0xA2, 0xD0, 0xB0, 0xAA, 0xD6, 
   0xB6, 0xB0, 0xCE, 0xAE, 0xA9, 0xCE, 0xAD, 0xAA, 0xC1, 0xA0, 0x9D, 0xC0, 0x9F, 0x9C, 0xB6, 0x95, 
   0x92, 0xB6, 0x95, 0x92, 0xA0, 0x80, 0x7D, 0x77, 0x6A, 0x63, 0x87, 0x7B, 0x74, 0xA5, 0x95, 0x8F, 
   0x9D, 0x8A, 0x84, 0xB6, 0xA0, 0x9B, 0xBA, 0xA4, 0x9F, 0xB1, 0x9A, 0x95, 0xA9, 0x93, 0x8D, 0x9C, 
   0x87, 0x84, 0x91, 0x7E, 0x7E, 0x88, 0x78, 0x7C, 0xA9, 0x9A, 0xA2, 0xB2, 0xA6, 0xB0, 0x81, 0x87, 
   0x8B, 0x72, 0x77, 0x7A, 0x69, 0x68, 0x6C, 0x94, 0x8A, 0x8F, 0xCC, 0xBD, 0xC3, 0xD5, 0xBF, 0xC7, 
   0xD2, 0xBD, 0xC3, 0xDE, 0xCA, 0xCF, 0xDA, 0xC7, 0xCD, 0x9C, 0x8C, 0x91, 0x8D, 0x7F, 0x83, 0x8F, 
   0x84, 0x88, 0x88, 0x7E, 0x82, 0x7A, 0x74, 0x75, 0x6C, 0x6A, 0x6B, 0x5A, 0x5B, 0x5E, 0x62, 0x64, 
   0x6B, 0x77, 0x77, 0x80, 0xA1, 0x9C, 0xA7, 0x9E, 0xA2, 0xAE, 0x73, 0x80, 0x8C, 0x6C, 0x74, 0x81, 
   0x61, 0x69, 0x76, 0x70, 0x73, 0x81, 0x62, 0x64, 0x72, 0x75, 0x76, 0x84, 0x7D, 0x7D, 0x8B, 0x94, 
   0x94, 0xA1, 0x9F, 0x9F, 0xAB, 0x9B, 0x9C, 0xA7, 0x89, 0x8B, 0x95, 0x77, 0x7A, 0x82, 0x5B, 0x5E, 
   0x6B, 0x55, 0x5C, 0x6B, 0x51, 0x5B, 0x68, 0x58, 0x64, 0x6E, 0x48, 0x4F, 0x57, 0x36, 0x35, 0x3D, 
   0x5E, 0x56, 0x5C, 0x54, 0x49, 0x50, 0x2F, 0x2C, 0x31, 0x41, 0x45, 0x48, 0x78, 0x7E, 0x7E, 0xD1, 
   0xCF, 0xD0, 0xB3, 0xA5, 0xA8, 0x8E, 0x7D, 0x7E, 0xD0, 0xC4, 0xC5, 0xCE, 0xC3, 0xC5, 0x59, 0x50, 
   0x53, 0x81, 0x79, 0x7B, 0xD7, 0xCF, 0xCF, 0xE2, 0xD7, 0xD7, 0xE7, 0xD1, 0xD1, 0xF1, 0xDA, 0xDA, 
   0xF7, 0xDF, 0xDF, 0xF2, 0xD9, 0xD9, 0xFB, 0xE1, 0xE2, 0xF7, 0xDC, 0xDD, 0xF3, 0xDB, 0xDA, 0xF2, 
   0xDD, 0xDB, 0xE6, 0xCB, 0xCA, 0xD2, 0xB5, 0xB4, 0x6E, 0x5B, 0x58, 0x33, 0x32, 0x2B, 0x26, 0x32, 
   0x2A, 0x3D, 0x41, 0x47, 0x35, 0x38, 0x40, 0x96, 0x9A, 0x9E, 0xF5, 0xF8, 0xF8, 0xF0, 0xEE, 0xED, 
   0xFB, 0xF3, 0xF3, 0xE1, 0xD0, 0xD0, 0xB8, 0xA1, 0xA1, 0xC7, 0xB6, 0xB6, 0x67, 0x5D, 0x5F, 0x50, 
   0x4F, 0x52, 0x4D, 0x53, 0x57, 0x46, 0x50, 0x56, 0x46, 0x4E, 0x5D, 0x56, 0x5C, 0x6D, 0x8F, 0x91, 
   0x9D, 0xED, 0xEC, 0xF3, 0xF4, 0xEE, 0xF0, 0xE0, 0xD6, 0xD6, 0xEA, 0xE0, 0xE0, 0x84, 0x80, 0x87, 
   0x3F, 0x48, 0x51, 0x72, 0x8B, 0x95, 0x68, 0x83, 0x8F, 0x25, 0x39, 0x42, 0x2F, 0x3C, 0x43, 0x39, 
   0x48, 0x4A, 0x28, 0x3A, 0x3A, 0x2C, 0x3E, 0x41, 0x30, 0x43, 0x49, 0x4E, 0x60, 0x6A, 0x7F, 0x91, 
   0x9E, 0x5A, 0x6D, 0x7B, 0x5C, 0x73, 0x83, 0x6B, 0x83, 0x94, 0x54, 0x6D, 0x7C, 0x62, 0x7E, 0x8B, 
   0x6B, 0x87, 0x96, 0x4B, 0x69, 0x76, 0x50, 0x6E, 0x7C, 0x5F, 0x7E, 0x8F, 0x4D, 0x6E, 0x7D, 0x60, 
   0x79, 0x86, 0x77, 0x80, 0x88, 0xBE, 0xAF, 0xB1, 0xC6, 0xAC, 0xAA, 0xD7, 0xB1, 0xB3, 0xD7, 0xB3, 
   0xB1, 0xD3, 0xB1, 0xAC, 0xDD, 0xC1, 0xBA, 0xF3, 0xDC, 0xD7, 0xE7, 0xD5, 0xD3, 0xE7, 0xCC, 0xCC, 
   0xEE, 0xCB, 0xCB, 0xEB, 0xCD, 0xCC, 0xE5, 0xCC, 0xCA, 0xEC, 0xD7, 0xD5, 0xF3, 0xE3, 0xE0, 0xE0, 
   0xD2, 0xCF, 0xEA, 0xD0, 0xDC, 0xDD, 0xCD, 0xD6, 0x92, 0x92, 0x94, 0x55, 0x5C, 0x5A, 0x48, 0x4C, 
   0x48, 0x54, 0x51, 0x4C, 0x5A, 0x4E, 0x43, 0x66, 0x53, 0x3F, 0x69, 0x52, 0x3B, 0x6C, 0x50, 0x39, 
   0x6D, 0x50, 0x3D, 0x69, 0x4D, 0x42, 0x65, 0x4C, 0x46, 0x64, 0x4D, 0x3F, 0x64, 0x4D, 0x3E, 0x64, 
   0x4D, 0x3E, 0x65, 0x4E, 0x3F, 0x65, 0x4E, 0x3F, 0x65, 0x4E, 0x3F, 0x69, 0x4D, 0x3F, 0x6B, 0x4C, 
   0x3F, 0x6B, 0x4C, 0x3F, 0x6B, 0x4C, 0x3F, 0x6B, 0x4C, 0x3F, 0x6B, 0x4C, 0x3F, 0x6B, 0x4C, 0x3F, 
   0x65, 0x4E, 0x40, 0x66, 0x4D, 0x41, 0x67, 0x4C, 0x41, 0x68, 0x4C, 0x42, 0x6A, 0x4B, 0x42, 0x6B, 
   0x4A, 0x43, 0x6A, 0x4B, 0x42, 0x68, 0x4D, 0x3F, 0x68, 0x4D, 0x3F, 0x68, 0x4D, 0x3F, 0x67, 0x4C, 
   0x3E, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x68, 0x4D, 0x3F, 0x67, 0x4C, 0x3E, 
   0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x66, 0x4B, 0x3D, 0x66, 
   0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x65, 0x4A, 0x3C, 0x65, 0x4A, 0x3C, 0x65, 0x4A, 0x3C, 0x65, 0x4A, 
   0x3C, 0x65, 0x4A, 0x3C, 0x65, 0x4A, 0x3C, 0x65, 0x4A, 0x3C, 0x65, 0x4A, 0x3C, 0x65, 0x4A, 0x3C, 
   0x65, 0x4A, 0x3C, 0x64, 0x4A, 0x3C, 0xDC, 0xBB, 0xB5, 0xE0, 0xBF, 0xB9, 0xDD, 0xBC, 0xB6, 0xDB, 
   0xBA, 0xB4, 0xDF, 0xBE, 0xB8, 0xDD, 0xBC, 0xB5, 0xDE, 0xBC, 0xB6, 0xDE, 0xBD, 0xB7, 0xDE, 0xBC, 
   0xB6, 0xDC, 0xBA, 0xB4, 0xD6, 0xB5, 0xAF, 0xD6, 0xB5, 0xAF, 0xD6, 0xB5, 0xAF, 0xD8, 0xB6, 0xB3, 
   0xD9, 0xB6, 0xB5, 0xDA, 0xB7, 0xB6, 0xDA, 0xB7, 0xB6, 0xDC, 0xB9, 0xB8, 0xDA, 0xB7, 0xB6, 0xD7, 
   0xB4, 0xB2, 0xD7, 0xB5, 0xB1, 0xD7, 0xB6, 0xB2, 0xDB, 0xBB, 0xB8, 0xD8, 0xB9, 0xB8, 0xDD, 0xBD, 
   0xBC, 0xD9, 0xBA, 0xBA, 0xDD, 0xBE, 0xBD, 0xDC, 0xBC, 0xBA, 0xD4, 0xB4, 0xB3, 0xD5, 0xB5, 0xB4, 
   0xCF, 0xAF, 0xAE, 0xD0, 0xB1, 0xAF, 0xD0, 0xB1, 0xAF, 0xC7, 0xB0, 0xAC, 0xC6, 0xAE, 0xAB, 0xCA, 
   0xAE, 0xAB, 0xC6, 0xA8, 0xA6, 0xBE, 0x9D, 0x9C, 0xD0, 0xAE, 0xAD, 0xC8, 0xA6, 0xA3, 0xC6, 0xA5, 
   0xA1, 0xC3, 0xA1, 0x9D, 0xCC, 0xAB, 0xA8, 0xCF, 0xAE, 0xAD, 0xB6, 0x95, 0x94, 0xB7, 0x95, 0x94, 
   0xBC, 0xA1, 0x9A, 0xF0, 0xDA, 0xD3, 0xD7, 0xBA, 0xB4, 0xA4, 0x81, 0x7B, 0x9E, 0x7B, 0x75, 0xAA, 
   0x88, 0x81, 0xB7, 0x95, 0x90, 0xD3, 0xB2, 0xAF, 0xD5, 0xB4, 0xB1, 0xD3, 0xB2, 0xAF, 0xCE, 0xB0, 
   0xAC, 0xC9, 0xAC, 0xA8, 0x9F, 0x83, 0x7F, 0x63, 0x57, 0x52, 0x4B, 0x43, 0x3E, 0x5B, 0x53, 0x4E, 
   0x7F, 0x76, 0x72, 0x9C, 0x8F, 0x8D, 0xA6, 0x96, 0x94, 0xB8, 0xA2, 0x9F, 0xBC, 0xA4, 0xA1, 0xB8, 
   0xA7, 0xA5, 0xBE, 0xB1, 0xB2, 0xC3, 0xBA, 0xBD, 0xC8, 0xC0, 0xC5, 0xBC, 0xB5, 0xBC, 0xB0, 0xB8, 
   0xBC, 0xAD, 0xB2, 0xB5, 0x9A, 0x99, 0x9C, 0xAD, 0xA2, 0xA6, 0xB4, 0xA2, 0xA6, 0xCD, 0xB5, 0xBA, 
   0xCE, 0xB2, 0xB7, 0xBF, 0xA5, 0xAA, 0xCA, 0xB3, 0xB6, 0xDD, 0xC9, 0xCC, 0xEF, 0xDF, 0xE1, 0xD7, 
   0xCA, 0xCB, 0xCB, 0xC1, 0xC1, 0x97, 0x94, 0x97, 0x7A, 0x7B, 0x7D, 0xA3, 0xA7, 0xAA, 0x82, 0x86, 
   0x8B, 0x8D, 0x8C, 0x92, 0x8A, 0x84, 0x8C, 0x6F, 0x6E, 0x73, 0x55, 0x57, 0x5C, 0x7E, 0x7B, 0x82, 
   0x87, 0x82, 0x8A, 0x8E, 0x87, 0x90, 0x8B, 0x86, 0x8E, 0xAE, 0xAB, 0xB4, 0xB2, 0xB5, 0xBF, 0x92, 
   0x98, 0xA2, 0x8C, 0x93, 0x9D, 0x84, 0x8B, 0x94, 0x72, 0x76, 0x7F, 0x7D, 0x7C, 0x86, 0x6A, 0x6A, 
   0x74, 0x63, 0x66, 0x70, 0x6A, 0x6C, 0x75, 0x73, 0x73, 0x7C, 0x79, 0x75, 0x7D, 0xAA, 0xA1, 0xA9, 
   0xBE, 0xB0, 0xB7, 0xB4, 0xA6, 0xAD, 0x6C, 0x60, 0x67, 0x90, 0x8A, 0x8F, 0x9E, 0x9B, 0x9F, 0x7A, 
   0x77, 0x78, 0x78, 0x71, 0x73, 0x89, 0x85, 0x87, 0x9F, 0x9F, 0xA2, 0x59, 0x5D, 0x60, 0x36, 0x3D, 
   0x40, 0xAC, 0xB2, 0xB4, 0xE1, 0xE4, 0xE7, 0xC6, 0xC4, 0xC6, 0xE0, 0xCB, 0xC9, 0xF2, 0xDA, 0xD9, 
   0xF7, 0xDF, 0xDD, 0xF2, 0xD7, 0xD6, 0xF6, 0xD7, 0xD6, 0xFF, 0xDF, 0xE0, 0xFB, 0xE2, 0xDF, 0xEB, 
   0xD7, 0xD2, 0xE8, 0xD4, 0xD1, 0xE3, 0xD4, 0xD1, 0x64, 0x5B, 0x5B, 0x30, 0x34, 0x33, 0x37, 0x42, 
   0x42, 0x3B, 0x38, 0x43, 0x6C, 0x6A, 0x74, 0xE4, 0xE4, 0xEA, 0xF5, 0xF3, 0xF7, 0xF8, 0xF2, 0xF4, 
   0xF6, 0xE6, 0xE8, 0xDF, 0xCC, 0xCD, 0xD9, 0xC5, 0xC3, 0xE4, 0xD4, 0xD2, 0x7D, 0x73, 0x73, 0x4A, 
   0x49, 0x4C, 0x48, 0x51, 0x53, 0x42, 0x52, 0x55, 0x49, 0x59, 0x5F, 0x51, 0x59, 0x60, 0xD5, 0xD1, 
   0xD4, 0xF9, 0xF0, 0xF1, 0xF2, 0xE8, 0xE9, 0xD7, 0xD0, 0xD0, 0xBF, 0xBE, 0xC2, 0x52, 0x5A, 0x67, 
   0x42, 0x4D, 0x59, 0x83, 0x92, 0x9E, 0x53, 0x63, 0x6E, 0x22, 0x31, 0x3A, 0x38, 0x46, 0x4B, 0x32, 
   0x44, 0x47, 0x50, 0x63, 0x66, 0x4B, 0x5A, 0x5F, 0x3E, 0x4B, 0x54, 0x5F, 0x6D, 0x77, 0x83, 0x96, 
   0xA2, 0x5D, 0x75, 0x81, 0x50, 0x6B, 0x77, 0x5A, 0x74, 0x82, 0x62, 0x7B, 0x8B, 0x64, 0x7C, 0x8B, 
   0x55, 0x70, 0x7B, 0x4A, 0x67, 0x6D, 0x67, 0x87, 0x92, 0x5F, 0x7C, 0x8A, 0x57, 0x64, 0x6F, 0x5A, 
   0x57, 0x5E, 0xA7, 0x98, 0x9B, 0xC8, 0xAF, 0xB0, 0xCF, 0xB3, 0xB4, 0xD6, 0xAF, 0xB3, 0xD9, 0xB5, 
   0xB6, 0xDA, 0xB8, 0xB6, 0xE6, 0xC6, 0xC3, 0xF9, 0xDD, 0xDA, 0xED, 0xD3, 0xD0, 0xEB, 0xCE, 0xCB, 
   0xEC, 0xCF, 0xCB, 0xEB, 0xD0, 0xCD, 0xEB, 0xD5, 0xD1, 0xF4, 0xE2, 0xDE, 0xE4, 0xD6, 0xD2, 0xE8, 
   0xDB, 0xD9, 0x9C, 0x97, 0x9F, 0x4E, 0x4C, 0x53, 0x4A, 0x48, 0x4A, 0x5E, 0x59, 0x56, 0x69, 0x5D, 
   0x56, 0x60, 0x4D, 0x46, 0x66, 0x50, 0x44, 0x68, 0x50, 0x3F, 0x6B, 0x51, 0x3F, 0x69, 0x4D, 0x3C, 
   0x68, 0x4D, 0x3D, 0x68, 0x4D, 0x40, 0x66, 0x4C, 0x41, 0x65, 0x4C, 0x3E, 0x65, 0x4C, 0x3D, 0x65, 
   0x4C, 0x3D, 0x66, 0x4C, 0x3E, 0x67, 0x4E, 0x40, 0x67, 0x4E, 0x40, 0x68, 0x4D, 0x3F, 0x69, 0x4C, 
   0x3E, 0x69, 0x4C, 0x3E, 0x6A, 0x4D, 0x3F, 0x6A, 0x4D, 0x3F, 0x6A, 0x4D, 0x3F, 0x6A, 0x4D, 0x3F, 
   0x67, 0x4E, 0x40, 0x68, 0x4E, 0x40, 0x68, 0x4D, 0x40, 0x69, 0x4D, 0x41, 0x69, 0x4D, 0x41, 0x6A, 
   0x4C, 0x41, 0x69, 0x4D, 0x41, 0x68, 0x4D, 0x3F, 0x68, 0x4D, 0x3F, 0x68, 0x4D, 0x3F, 0x68, 0x4D, 
   0x3F, 0x67, 0x4C, 0x3E, 0x66, 0x4B, 0x3D, 0x67, 0x4C, 0x3E, 0x68, 0x4D, 0x3F, 0x67, 0x4C, 0x3E, 
   0x68, 0x4D, 0x3F, 0x68, 0x4D, 0x3F, 0x68, 0x4D, 0x3F, 0x67, 0x4C, 0x3E, 0x66, 0x4B, 0x3D, 0x66, 
   0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x65, 0x4A, 
   0x3C, 0x65, 0x4A, 0x3C, 0x65, 0x4A, 0x3C, 0x65, 0x4A, 0x3C, 0x65, 0x4A, 0x3C, 0x64, 0x49, 0x3B, 
   0x65, 0x4A, 0x3C, 0x65, 0x4A, 0x3C, 0xD8, 0xB7, 0xB1, 0xDC, 0xBB, 0xB5, 0xDB, 0xBA, 0xB3, 0xD9, 
   0xB8, 0xB2, 0xDA, 0xB9, 0xB3, 0xDA, 0xB9, 0xB2, 0xD9, 0xB8, 0xB2, 0xD9, 0xB6, 0xB2, 0xD7, 0xB5, 
   0xB1, 0xD7, 0xB5, 0xB1, 0xD9, 0xB7, 0xB2, 0xD9, 0xB7, 0xB2, 0xD9, 0xB6, 0xB2, 0xD9, 0xB6, 0xB4, 
   0xD9, 0xB5, 0xB6, 0xDA, 0xB7, 0xB7, 0xDB, 0xB7, 0xB8, 0xDD, 0xBA, 0xBA, 0xD9, 0xB5, 0xB6, 0xDD, 
   0xB9, 0xB9, 0xDA, 0xB6, 0xB2, 0xDA, 0xB9, 0xB5, 0xD8, 0xB8, 0xB5, 0xD8, 0xB9, 0xB8, 0xD8, 0xB8, 
   0xB9, 0xCB, 0xAC, 0xAD, 0xD6, 0xB5, 0xB6, 0xDF, 0xBD, 0xBC, 0xDA, 0xB9, 0xB8, 0xD8, 0xB7, 0xB7, 
   0xDB, 0xB9, 0xB9, 0xDC, 0xB9, 0xB9, 0xDE, 0xBE, 0xBD, 0xD8, 0xC5, 0xC2, 0xD3, 0xBD, 0xBB, 0xB8, 
   0x9E, 0x9D, 0xD6, 0xB8, 0xB7, 0xD4, 0xB2, 0xB2, 0xCB, 0xA5, 0xA5, 0xC6, 0xA4, 0xA2, 0xBB, 0x9E, 
   0x98, 0xAE, 0x91, 0x8C, 0xBA, 0x9C, 0x9A, 0xBF, 0xA3, 0xA1, 0xBE, 0xA0, 0xA1, 0xBC, 0x9F, 0xA0, 
   0x99, 0x84, 0x7C, 0xBF, 0xA9, 0xA2, 0xC2, 0xA5, 0x9F, 0x98, 0x76, 0x70, 0xB4, 0x94, 0x8E, 0xCC, 
   0xAE, 0xA8, 0xD4, 0xB5, 0xB1, 0xCA, 0xAC, 0xAA, 0xD4, 0xB6, 0xB4, 0xD1, 0xB5, 0xB2, 0xCC, 0xB3, 
   0xB0, 0xC3, 0xAD, 0xA9, 0xC0, 0xAC, 0xA8, 0xAD, 0xA2, 0x9E, 0x87, 0x80, 0x7C, 0x52, 0x4F, 0x4B, 
   0x44, 0x40, 0x3E, 0x57, 0x4F, 0x50, 0x7E, 0x71, 0x72, 0xA5, 0x93, 0x93, 0xB9, 0xA8, 0xA5, 0xA3, 
   0x9A, 0x98, 0x9A, 0x97, 0x98, 0xC0, 0xC0, 0xC2, 0xB4, 0xB5, 0xB7, 0x8D, 0x8C, 0x91, 0x70, 0x75, 
   0x78, 0x92, 0x94, 0x95, 0xB1, 0xAD, 0xAE, 0xB8, 0xAB, 0xAD, 0xBA, 0xA6, 0xA9, 0xCC, 0xB3, 0xB6, 
   0xCC, 0xB0, 0xB4, 0xC1, 0xA6, 0xAA, 0x9D, 0x86, 0x87, 0x8F, 0x7B, 0x7D, 0x8F, 0x82, 0x80, 0xB1, 
   0xA7, 0xA4, 0xCA, 0xC3, 0xC0, 0x6B, 0x6C, 0x6F, 0x36, 0x39, 0x3D, 0x51, 0x57, 0x5A, 0x44, 0x4B, 
   0x4E, 0x4B, 0x4E, 0x51, 0x6D, 0x6A, 0x6E, 0x87, 0x84, 0x86, 0x91, 0x8E, 0x8F, 0xA3, 0x9C, 0x9F, 
   0xAA, 0x9E, 0xA2, 0xD3, 0xC7, 0xCC, 0xD9, 0xD1, 0xD6, 0xE5, 0xE1, 0xE6, 0xB7, 0xBE, 0xC6, 0x87, 
   0x92, 0x9A, 0x80, 0x8F, 0x97, 0x75, 0x83, 0x8A, 0x8C, 0x92, 0x9B, 0x99, 0x97, 0xA2, 0x91, 0x8F, 
   0x97, 0xAD, 0xAC, 0xB1, 0x98, 0x93, 0x99, 0xA1, 0x99, 0xA0, 0xA2, 0x95, 0x9C, 0xC7, 0xB7, 0xBF, 
   0xD2, 0xC0, 0xC9, 0xC5, 0xB2, 0xBC, 0xDA, 0xC7, 0xD0, 0xC8, 0xB9, 0xC0, 0x66, 0x5C, 0x62, 0x40, 
   0x3B, 0x3E, 0x47, 0x45, 0x46, 0x43, 0x46, 0x48, 0x42, 0x4A, 0x4C, 0x36, 0x41, 0x42, 0x5B, 0x69, 
   0x6B, 0xCC, 0xDA, 0xDA, 0xE1, 0xE7, 0xEA, 0xEA, 0xE9, 0xEC, 0xE9, 0xD5, 0xD4, 0xD8, 0xC2, 0xC0, 
   0xE8, 0xD0, 0xCE, 0xEB, 0xD0, 0xD0, 0xEF, 0xD1, 0xD1, 0xF3, 0xD4, 0xD4, 0xF1, 0xD9, 0xD5, 0xF5, 
   0xE4, 0xDE, 0xF6, 0xE9, 0xE5, 0x97, 0x91, 0x90, 0x40, 0x41, 0x42, 0x2C, 0x33, 0x37, 0x3B, 0x44, 
   0x4A, 0x86, 0x82, 0x8F, 0xE8, 0xE5, 0xF0, 0xEC, 0xEC, 0xF4, 0xC8, 0xC5, 0xCA, 0xA1, 0x96, 0x9A, 
   0xDE, 0xC8, 0xCC, 0xE8, 0xD2, 0xD3, 0xF6, 0xE8, 0xE5, 0xEB, 0xD9, 0xD6, 0xB9, 0xAC, 0xAD, 0x55, 
   0x4F, 0x52, 0x4C, 0x53, 0x56, 0x46, 0x56, 0x59, 0x4D, 0x5F, 0x5F, 0x6E, 0x77, 0x77, 0xD5, 0xCE, 
   0xCC, 0xFA, 0xED, 0xEA, 0xF6, 0xEE, 0xEF, 0xE5, 0xE1, 0xE2, 0x79, 0x7E, 0x85, 0x32, 0x43, 0x51, 
   0x66, 0x73, 0x80, 0x8B, 0x94, 0xA0, 0x40, 0x49, 0x52, 0x2D, 0x38, 0x3F, 0x38, 0x46, 0x4B, 0x49, 
   0x5C, 0x61, 0x5E, 0x71, 0x76, 0x3B, 0x48, 0x4F, 0x49, 0x52, 0x5C, 0x72, 0x7F, 0x89, 0x71, 0x85, 
   0x90, 0x49, 0x63, 0x6D, 0x4C, 0x6A, 0x73, 0x4C, 0x67, 0x74, 0x4E, 0x66, 0x75, 0x6A, 0x82, 0x91, 
   0x54, 0x70, 0x78, 0x63, 0x81, 0x84, 0x61, 0x81, 0x89, 0x62, 0x78, 0x83, 0x93, 0x91, 0x98, 0xBD, 
   0xA4, 0xA7, 0xD9, 0xB7, 0xB8, 0xD4, 0xB4, 0xB4, 0xDA, 0xBD, 0xC0, 0xEA, 0xC4, 0xC8, 0xEC, 0xC6, 
   0xC9, 0xE6, 0xC1, 0xC4, 0xE2, 0xC1, 0xC2, 0xE3, 0xC5, 0xC4, 0xF6, 0xDB, 0xD9, 0xE7, 0xC8, 0xC5, 
   0xEC, 0xD0, 0xCC, 0xF3, 0xDB, 0xD8, 0xF1, 0xDF, 0xDB, 0xE9, 0xDC, 0xD8, 0xEB, 0xE3, 0xDF, 0xB7, 
   0xB1, 0xAE, 0x45, 0x4B, 0x4E, 0x58, 0x5A, 0x5E, 0x71, 0x6D, 0x6D, 0x6E, 0x60, 0x5A, 0x62, 0x4C, 
   0x44, 0x6D, 0x52, 0x46, 0x69, 0x4C, 0x40, 0x6C, 0x50, 0x43, 0x6B, 0x50, 0x43, 0x67, 0x4C, 0x3E, 
   0x65, 0x4A, 0x3D, 0x68, 0x4D, 0x3F, 0x67, 0x4C, 0x3E, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 
   0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x69, 0x4E, 0x40, 0x69, 0x4E, 0x40, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 
   0x3E, 0x67, 0x4C, 0x3E, 0x68, 0x4D, 0x3F, 0x68, 0x4D, 0x3F, 0x68, 0x4D, 0x3F, 0x68, 0x4D, 0x3F, 
   0x69, 0x4E, 0x40, 0x69, 0x4E, 0x40, 0x69, 0x4E, 0x40, 0x69, 0x4E, 0x40, 0x69, 0x4E, 0x40, 0x69, 
   0x4E, 0x40, 0x69, 0x4E, 0x40, 0x68, 0x4D, 0x3F, 0x68, 0x4D, 0x3F, 0x68, 0x4D, 0x3F, 0x68, 0x4D, 
   0x3F, 0x67, 0x4C, 0x3E, 0x66, 0x4B, 0x3D, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 
   0x68, 0x4D, 0x3F, 0x68, 0x4D, 0x3F, 0x68, 0x4D, 0x3F, 0x67, 0x4C, 0x3E, 0x66, 0x4B, 0x3D, 0x66, 
   0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x65, 0x4A, 
   0x3C, 0x65, 0x4A, 0x3C, 0x65, 0x4A, 0x3C, 0x65, 0x4A, 0x3C, 0x65, 0x4A, 0x3C, 0x64, 0x49, 0x3B, 
   0x65, 0x4A, 0x3C, 0x64, 0x48, 0x3A, 0xD6, 0xB7, 0xB1, 0xD7, 0xB8, 0xB2, 0xD6, 0xB6, 0xB0, 0xD6, 
   0xB7, 0xB1, 0xD9, 0xB9, 0xB4, 0xD8, 0xB9, 0xB3, 0xD8, 0xB8, 0xB3, 0xD7, 0xB7, 0xB3, 0xD7, 0xB7, 
   0xB3, 0xD7, 0xB7, 0xB3, 0xD7, 0xB7, 0xB2, 0xD7, 0xB8, 0xB3, 0xD8, 0xB9, 0xB4, 0xD7, 0xB6, 0xB4, 
   0xD7, 0xB5, 0xB6, 0xDB, 0xBA, 0xB9, 0xDA, 0xB9, 0xB9, 0xD8, 0xB6, 0xB6, 0xD6, 0xB5, 0xB4, 0xD5, 
   0xB3, 0xB1, 0xD6, 0xB5, 0xB1, 0xD4, 0xB4, 0xAF, 0xCF, 0xB0, 0xAD, 0xCA, 0xAC, 0xAB, 0xBF, 0xA1, 
   0xA1, 0xC7, 0xA9, 0xA9, 0xCF, 0xB1, 0xB0, 0xDC, 0xBD, 0xBC, 0xDF, 0xC1, 0xC0, 0xD7, 0xB8, 0xB7, 
   0xDE, 0xBF, 0xBE, 0xE3, 0xC3, 0xC2, 0xE4, 0xC7, 0xC5, 0xD6, 0xC1, 0xBF, 0x9E, 0x88, 0x86, 0xCC, 
   0xB3, 0xB2, 0xEF, 0xD1, 0xD0, 0xF2, 0xD2, 0xD2, 0xE7, 0xC4, 0xC4, 0xD5, 0xB7, 0xB4, 0xC8, 0xB0, 
   0xAA, 0xA2, 0x8A, 0x86, 0x8C, 0x74, 0x71, 0xA6, 0x8F, 0x8D, 0xAA, 0x92, 0x92, 0xAB, 0x95, 0x94, 
   0xA6, 0x95, 0x8E, 0xB3, 0xA0, 0x99, 0xC9, 0xB0, 0xAB, 0xD4, 0xBA, 0xB4, 0xCB, 0xB5, 0xAF, 0xBD, 
   0xAA, 0xA4, 0xC7, 0xB4, 0xB1, 0xE2, 0xCE, 0xCD, 0xE0, 0xCD, 0xCB, 0xD8, 0xC7, 0xC5, 0xD6, 0xC7, 
   0xC5, 0xCA, 0xBD, 0xBB, 0xC0, 0xB4, 0xB2, 0x9D, 0x96, 0x93, 0x9A, 0x96, 0x93, 0xAA, 0xAA, 0xA6, 
   0x72, 0x70, 0x6E, 0x62, 0x5D, 0x5C, 0x72, 0x67, 0x67, 0x82, 0x79, 0x78, 0x75, 0x72, 0x6F, 0x46, 
   0x47, 0x47, 0x61, 0x67, 0x67, 0x62, 0x6A, 0x6C, 0x52, 0x58, 0x5C, 0x68, 0x6A, 0x70, 0x8C, 0x88, 
   0x8B, 0x9C, 0x94, 0x97, 0xB7, 0xAB, 0xAE, 0xBB, 0xAA, 0xAD, 0xBD, 0xA8, 0xAA, 0xCB, 0xB1, 0xB3, 
   0xC9, 0xAF, 0xB3, 0xC1, 0xAB, 0xAD, 0xC7, 0xB3, 0xB5, 0xC6, 0xB8, 0xB9, 0x99, 0x91, 0x8F, 0x6F, 
   0x6A, 0x68, 0x9D, 0x9B, 0x98, 0x95, 0x92, 0x97, 0x55, 0x56, 0x5B, 0x4C, 0x52, 0x56, 0x54, 0x5B, 
   0x5E, 0x4A, 0x50, 0x54, 0x4B, 0x4C, 0x50, 0x66, 0x6A, 0x6E, 0x74, 0x7A, 0x7E, 0xAB, 0xAC, 0xB1, 
   0xB4, 0xB0, 0xB6, 0xD6, 0xD2, 0xDA, 0xEE, 0xEC, 0xF2, 0x7D, 0x7E, 0x85, 0x3F, 0x49, 0x51, 0x60, 
   0x6D, 0x75, 0x5D, 0x6C, 0x74, 0x64, 0x74, 0x7B, 0x56, 0x5E, 0x68, 0x64, 0x67, 0x71, 0xBB, 0xBA, 
   0xC2, 0xC0, 0xBC, 0xC2, 0xC2, 0xBB, 0xC2, 0xBD, 0xB5, 0xBC, 0xBC, 0xAE, 0xB6, 0xA9, 0x99, 0xA1, 
   0xA8, 0x96, 0xA0, 0xC8, 0xB1, 0xBD, 0xC6, 0xB1, 0xBA, 0xC3, 0xB1, 0xB9, 0x9F, 0x92, 0x99, 0x5B, 
   0x53, 0x57, 0x38, 0x32, 0x34, 0x3F, 0x3B, 0x3D, 0x44, 0x44, 0x46, 0x54, 0x56, 0x58, 0x73, 0x78, 
   0x79, 0xAA, 0xAD, 0xAF, 0xC5, 0xC2, 0xC5, 0x92, 0x89, 0x8C, 0x7F, 0x6B, 0x6A, 0xCA, 0xB5, 0xB4, 
   0xE0, 0xC9, 0xC9, 0xE0, 0xC8, 0xC8, 0xE6, 0xCD, 0xCD, 0xEC, 0xD1, 0xD1, 0xC6, 0xB2, 0xB1, 0x97, 
   0x8C, 0x89, 0x76, 0x6E, 0x6B, 0x44, 0x3E, 0x3F, 0x36, 0x35, 0x39, 0x48, 0x4C, 0x52, 0xBB, 0xC0, 
   0xC7, 0xE9, 0xEC, 0xF7, 0xB3, 0xB5, 0xBF, 0x6B, 0x6E, 0x75, 0x43, 0x43, 0x47, 0x8F, 0x87, 0x8A, 
   0xEC, 0xDF, 0xE2, 0xE0, 0xC8, 0xC9, 0xEA, 0xD4, 0xD2, 0xF8, 0xE1, 0xE0, 0xC7, 0xB2, 0xB3, 0x6D, 
   0x5E, 0x63, 0x41, 0x3F, 0x44, 0x46, 0x4C, 0x51, 0x52, 0x5E, 0x61, 0x83, 0x8A, 0x8A, 0xF7, 0xF1, 
   0xF0, 0xEF, 0xE1, 0xDF, 0xFD, 0xF3, 0xF3, 0xB5, 0xAF, 0xB1, 0x74, 0x77, 0x7D, 0x55, 0x66, 0x73, 
   0x94, 0xA4, 0xB0, 0x67, 0x74, 0x7D, 0x2B, 0x37, 0x3F, 0x33, 0x3D, 0x45, 0x35, 0x40, 0x47, 0x50, 
   0x62, 0x67, 0x50, 0x62, 0x68, 0x3C, 0x48, 0x50, 0x51, 0x5C, 0x65, 0x7D, 0x8B, 0x95, 0x5E, 0x72, 
   0x7D, 0x4B, 0x65, 0x6E, 0x61, 0x7D, 0x87, 0x66, 0x80, 0x8E, 0x60, 0x79, 0x89, 0x62, 0x7B, 0x8C, 
   0x55, 0x71, 0x7F, 0x5F, 0x7D, 0x86, 0x5D, 0x77, 0x81, 0x6F, 0x7D, 0x85, 0xAF, 0xA8, 0xAD, 0xCD, 
   0xB3, 0xB3, 0xD6, 0xB4, 0xB3, 0xE4, 0xC4, 0xC2, 0xE7, 0xC7, 0xC7, 0xF6, 0xD1, 0xD0, 0xED, 0xC9, 
   0xC8, 0xF3, 0xD3, 0xD4, 0xCE, 0xB1, 0xB2, 0xCC, 0xB2, 0xB3, 0xDF, 0xC9, 0xCA, 0xDE, 0xC2, 0xC1, 
   0xFC, 0xDC, 0xDC, 0xFE, 0xE6, 0xE4, 0xEF, 0xE1, 0xDD, 0xE5, 0xE0, 0xDC, 0xB6, 0xB9, 0xB4, 0x48, 
   0x4F, 0x4B, 0x5A, 0x59, 0x5B, 0x77, 0x72, 0x73, 0x6B, 0x62, 0x60, 0x58, 0x48, 0x41, 0x65, 0x51, 
   0x47, 0x63, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x5E, 0x43, 0x35, 0x5B, 0x40, 0x32, 0x62, 0x47, 0x39, 
   0x66, 0x4B, 0x3D, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 
   0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x68, 0x4D, 0x3F, 0x68, 0x4D, 0x3F, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 
   0x3E, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 
   0x68, 0x4D, 0x3F, 0x68, 0x4D, 0x3F, 0x68, 0x4D, 0x3F, 0x68, 0x4D, 0x3F, 0x68, 0x4D, 0x3F, 0x68, 
   0x4D, 0x3F, 0x68, 0x4D, 0x3F, 0x68, 0x4D, 0x3F, 0x68, 0x4D, 0x3F, 0x68, 0x4D, 0x3F, 0x68, 0x4D, 
   0x3F, 0x67, 0x4C, 0x3E, 0x66, 0x4B, 0x3D, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 
   0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x66, 0x4B, 0x3D, 0x66, 
   0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x65, 0x4A, 
   0x3C, 0x65, 0x4A, 0x3C, 0x65, 0x4A, 0x3C, 0x65, 0x4A, 0x3C, 0x65, 0x4A, 0x3C, 0x61, 0x46, 0x38, 
   0x63, 0x48, 0x3A, 0x64, 0x49, 0x3B, 0xD5, 0xB7, 0xB2, 0xD6, 0xB8, 0xB3, 0xD6, 0xB8, 0xB3, 0xD7, 
   0xB9, 0xB4, 0xD6, 0xB9, 0xB4, 0xD6, 0xB8, 0xB3, 0xD6, 0xB9, 0xB4, 0xD9, 0xBA, 0xB7, 0xD9, 0xBA, 
   0xB7, 0xDA, 0xBB, 0xB8, 0xDD, 0xBE, 0xBB, 0xDE, 0xBF, 0xBD, 0xE0, 0xC1, 0xBE, 0xE1, 0xC2, 0xC0, 
   0xE2, 0xC3, 0xC2, 0xE4, 0xC6, 0xC5, 0xE5, 0xC6, 0xC5, 0xDE, 0xBF, 0xBE, 0xDF, 0xC0, 0xBF, 0xD0, 
   0xB1, 0xAF, 0xD1, 0xB1, 0xAC, 0xC4, 0xA5, 0xA1, 0xC5, 0xA7, 0xA4, 0xCF, 0xB1, 0xB0, 0xC1, 0xA6, 
   0xA5, 0xC4, 0xA8, 0xA8, 0xCC, 0xAF, 0xAE, 0xCE, 0xB1, 0xB0, 0xD7, 0xB9, 0xB8, 0xDD, 0xBF, 0xBE, 
   0xDE, 0xC1, 0xC0, 0xEA, 0xCC, 0xCB, 0xE9, 0xCC, 0xCB, 0xA9, 0x94, 0x92, 0xC1, 0xAF, 0xAC, 0xF7, 
   0xE1, 0xDF, 0xF6, 0xDA, 0xD9, 0xF4, 0xD6, 0xD5, 0xF2, 0xD3, 0xD3, 0xDF, 0xC3, 0xC0, 0xD8, 0xC3, 
   0xBD, 0xCF, 0xBA, 0xB6, 0xA1, 0x8C, 0x8A, 0x74, 0x5F, 0x5E, 0x7F, 0x6B, 0x6A, 0x8F, 0x7E, 0x7D, 
   0x82, 0x78, 0x72, 0xA3, 0x96, 0x90, 0xB9, 0xAA, 0xA4, 0xC0, 0xB1, 0xAB, 0x81, 0x77, 0x71, 0x65, 
   0x61, 0x59, 0x7E, 0x79, 0x76, 0xAB, 0xA4, 0xA6, 0xB3, 0xAC, 0xAE, 0xAB, 0xA6, 0xA8, 0x86, 0x82, 
   0x84, 0x73, 0x6F, 0x70, 0x5F, 0x5F, 0x5F, 0x76, 0x76, 0x75, 0x66, 0x69, 0x67, 0x55, 0x58, 0x57, 
   0x8A, 0x8D, 0x8B, 0x6E, 0x6D, 0x6C, 0x48, 0x3F, 0x3F, 0x53, 0x50, 0x50, 0x49, 0x52, 0x53, 0x62, 
   0x6D, 0x6E, 0x5F, 0x6C, 0x6E, 0x52, 0x5F, 0x62, 0x5D, 0x66, 0x6B, 0x80, 0x83, 0x88, 0xA0, 0x92, 
   0x96, 0x9A, 0x89, 0x8D, 0x93, 0x80, 0x83, 0x9E, 0x89, 0x8B, 0xA2, 0x8C, 0x8E, 0xBB, 0xA2, 0xA2, 
   0xC9, 0xB1, 0xB2, 0xBA, 0xA4, 0xA6, 0xB5, 0xA3, 0xA3, 0xB0, 0xA2, 0xA3, 0xAB, 0xA3, 0xA3, 0x67, 
   0x63, 0x62, 0x32, 0x2F, 0x2E, 0x5F, 0x58, 0x5F, 0x4F, 0x4E, 0x55, 0x48, 0x4D, 0x52, 0x46, 0x4F, 
   0x53, 0x2C, 0x36, 0x3A, 0x29, 0x30, 0x35, 0x32, 0x3D, 0x43, 0x34, 0x42, 0x48, 0x4D, 0x56, 0x5D, 
   0x69, 0x6D, 0x75, 0x96, 0x99, 0xA1, 0x70, 0x75, 0x7D, 0x42, 0x4A, 0x51, 0x47, 0x51, 0x5B, 0x5C, 
   0x6A, 0x73, 0x63, 0x71, 0x7B, 0x72, 0x81, 0x8A, 0x68, 0x72, 0x7C, 0x82, 0x88, 0x93, 0xBE, 0xC0, 
   0xC8, 0xAE, 0xAB, 0xB1, 0xB7, 0xB3, 0xBA, 0xAB, 0xA4, 0xAB, 0xBA, 0xAF, 0xB7, 0xC5, 0xB8, 0xC0, 
   0xBA, 0xAC, 0xB3, 0xC2, 0xAD, 0xB9, 0xB9, 0xA4, 0xAF, 0xA2, 0x91, 0x9A, 0xA1, 0x94, 0x9B, 0x8D, 
   0x84, 0x8A, 0x81, 0x7A, 0x7D, 0x6B, 0x63, 0x66, 0x6B, 0x61, 0x64, 0x95, 0x8F, 0x91, 0x61, 0x5B, 
   0x5D, 0x32, 0x2A, 0x2D, 0x4A, 0x3D, 0x41, 0x6D, 0x5E, 0x61, 0xD3, 0xBE, 0xBD, 0xE8, 0xD3, 0xD2, 
   0xDF, 0xCB, 0xCA, 0xD2, 0xBE, 0xBD, 0xA6, 0x94, 0x93, 0xA6, 0x94, 0x93, 0x8A, 0x7E, 0x7D, 0x46, 
   0x41, 0x41, 0x3F, 0x3B, 0x3C, 0x37, 0x34, 0x37, 0x60, 0x5F, 0x65, 0xD7, 0xD6, 0xDE, 0xC7, 0xC9, 
   0xD0, 0x5D, 0x64, 0x6D, 0x3C, 0x44, 0x4D, 0x42, 0x49, 0x4F, 0x55, 0x57, 0x5A, 0xAC, 0xA5, 0xA6, 
   0xD5, 0xC8, 0xC9, 0xD1, 0xBB, 0xBB, 0xC9, 0xAC, 0xAB, 0xE7, 0xCC, 0xCB, 0xD4, 0xBC, 0xBE, 0x69, 
   0x57, 0x5C, 0x3C, 0x33, 0x39, 0x43, 0x41, 0x48, 0x41, 0x49, 0x4C, 0xD1, 0xD6, 0xD6, 0xF6, 0xEA, 
   0xEA, 0xED, 0xDD, 0xDB, 0xF6, 0xE8, 0xE9, 0xEF, 0xE7, 0xE9, 0xC5, 0xC9, 0xCD, 0x75, 0x85, 0x91, 
   0x7E, 0x8E, 0x98, 0x39, 0x48, 0x50, 0x2C, 0x39, 0x42, 0x36, 0x40, 0x48, 0x41, 0x49, 0x50, 0x52, 
   0x61, 0x67, 0x48, 0x5A, 0x61, 0x46, 0x55, 0x5D, 0x71, 0x7E, 0x88, 0x7D, 0x8E, 0x98, 0x41, 0x55, 
   0x60, 0x4E, 0x67, 0x70, 0x57, 0x72, 0x7B, 0x60, 0x7A, 0x88, 0x5B, 0x75, 0x86, 0x4F, 0x69, 0x7D, 
   0x55, 0x71, 0x82, 0x60, 0x7E, 0x8D, 0x67, 0x7A, 0x86, 0x92, 0x92, 0x9A, 0xAF, 0xA0, 0xA2, 0xC0, 
   0xA1, 0xA0, 0xE5, 0xC0, 0xBC, 0xEA, 0xC7, 0xC4, 0xEC, 0xCB, 0xC7, 0xF1, 0xCD, 0xC9, 0xED, 0xCC, 
   0xC9, 0xD4, 0xBA, 0xB8, 0x82, 0x6C, 0x6E, 0xD5, 0xC2, 0xC5, 0xE2, 0xD4, 0xD8, 0xC2, 0xAC, 0xAF, 
   0xC2, 0xA3, 0xA3, 0xE8, 0xD5, 0xD4, 0xF5, 0xED, 0xEA, 0xD1, 0xD1, 0xCD, 0x54, 0x5E, 0x58, 0x56, 
   0x62, 0x5C, 0x77, 0x6F, 0x6D, 0x5B, 0x50, 0x4D, 0x58, 0x4B, 0x44, 0x68, 0x57, 0x4C, 0x67, 0x54, 
   0x45, 0x67, 0x52, 0x41, 0x4D, 0x34, 0x25, 0x41, 0x26, 0x18, 0x57, 0x3C, 0x2E, 0x64, 0x49, 0x3B, 
   0x65, 0x4A, 0x3C, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 
   0x4B, 0x3D, 0x65, 0x4A, 0x3C, 0x66, 0x4B, 0x3D, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 
   0x3E, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 
   0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x67, 
   0x4C, 0x3E, 0x68, 0x4D, 0x3F, 0x68, 0x4D, 0x3F, 0x68, 0x4D, 0x3F, 0x68, 0x4D, 0x3F, 0x68, 0x4D, 
   0x3F, 0x67, 0x4C, 0x3E, 0x66, 0x4B, 0x3D, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 
   0x67, 0x4C, 0x3E, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 
   0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x65, 0x4A, 
   0x3C, 0x65, 0x4A, 0x3C, 0x65, 0x4A, 0x3C, 0x67, 0x4C, 0x3E, 0x66, 0x4B, 0x3D, 0x60, 0x45, 0x37, 
   0x63, 0x48, 0x3A, 0x67, 0x4C, 0x3E, 0xD3, 0xB5, 0xB0, 0xD4, 0xB7, 0xB1, 0xD8, 0xBA, 0xB5, 0xDA, 
   0xBD, 0xB8, 0xDD, 0xC0, 0xBB, 0xE1, 0xC4, 0xBF, 0xE4, 0xC7, 0xC2, 0xE5, 0xC8, 0xC4, 0xE7, 0xC9, 
   0xC5, 0xE8, 0xCA, 0xC6, 0xEA, 0xCD, 0xC9, 0xEB, 0xCE, 0xCA, 0xEE, 0xD1, 0xCD, 0xF0, 0xD4, 0xD2, 
   0xF0, 0xD4, 0xD3, 0xF0, 0xD4, 0xD3, 0xF0, 0xD4, 0xD3, 0xEE, 0xD2, 0xD1, 0xEE, 0xD2, 0xD1, 0xF1, 
   0xD5, 0xD3, 0xF7, 0xD8, 0xD3, 0xE5, 0xC8, 0xC4, 0xD8, 0xBB, 0xB8, 0xAE, 0x92, 0x91, 0x99, 0x7F, 
   0x7F, 0xA1, 0x87, 0x87, 0xA5, 0x8C, 0x8A, 0xAF, 0x96, 0x94, 0xC5, 0xAB, 0xA9, 0xD4, 0xBB, 0xB9, 
   0xD9, 0xC0, 0xBE, 0xD1, 0xB7, 0xB5, 0xBF, 0xA6, 0xA4, 0xD8, 0xC7, 0xC4, 0xF8, 0xE9, 0xE7, 0xF2, 
   0xDE, 0xDC, 0xF2, 0xDB, 0xD9, 0xF4, 0xDA, 0xD9, 0xF4, 0xD8, 0xD7, 0xE8, 0xCC, 0xC9, 0xE2, 0xC7, 
   0xC3, 0xE5, 0xCA, 0xC8, 0xE5, 0xCD, 0xCC, 0xCB, 0xB6, 0xB5, 0x7B, 0x66, 0x67, 0x5A, 0x46, 0x48, 
   0x57, 0x51, 0x4E, 0x67, 0x60, 0x5D, 0x78, 0x70, 0x6D, 0x98, 0x92, 0x8F, 0x59, 0x5A, 0x56, 0x31, 
   0x39, 0x32, 0x44, 0x4C, 0x4A, 0x40, 0x45, 0x4A, 0x38, 0x3D, 0x42, 0x57, 0x5D, 0x61, 0x32, 0x37, 
   0x3C, 0x30, 0x36, 0x3B, 0x61, 0x69, 0x6C, 0xA6, 0xAA, 0xAC, 0xA3, 0xA9, 0xA9, 0x75, 0x7D, 0x7D, 
   0x42, 0x48, 0x47, 0x49, 0x49, 0x49, 0x49, 0x43, 0x42, 0x41, 0x41, 0x43, 0x5C, 0x66, 0x6A, 0x65, 
   0x71, 0x74, 0x58, 0x62, 0x66, 0x71, 0x79, 0x7D, 0x7D, 0x7F, 0x86, 0xAC, 0xA6, 0xAF, 0xCC, 0xB6, 
   0xBC, 0xC7, 0xB0, 0xB4, 0xC9, 0xB2, 0xB5, 0xC3, 0xAB, 0xAD, 0xC7, 0xAF, 0xAF, 0xC2, 0xAA, 0xAA, 
   0xC5, 0xAB, 0xAB, 0xCA, 0xB0, 0xB0, 0xBF, 0xA7, 0xA8, 0xBB, 0xA8, 0xAA, 0xD2, 0xC5, 0xC4, 0x93, 
   0x89, 0x8A, 0x3F, 0x38, 0x39, 0x2B, 0x23, 0x2A, 0x3D, 0x3B, 0x42, 0x43, 0x48, 0x4D, 0x3D, 0x49, 
   0x4D, 0x2D, 0x39, 0x3D, 0x4F, 0x59, 0x5D, 0x51, 0x62, 0x68, 0x43, 0x58, 0x60, 0x3B, 0x49, 0x52, 
   0x3C, 0x47, 0x50, 0x3E, 0x46, 0x4F, 0x46, 0x4F, 0x58, 0x4B, 0x57, 0x5D, 0x59, 0x63, 0x6D, 0x51, 
   0x5D, 0x67, 0x6A, 0x76, 0x80, 0x75, 0x82, 0x8C, 0x5F, 0x69, 0x73, 0x57, 0x61, 0x6B, 0x36, 0x3C, 
   0x44, 0x3C, 0x41, 0x45, 0x47, 0x4A, 0x4F, 0x52, 0x54, 0x5A, 0x8C, 0x8C, 0x92, 0xB0, 0xAE, 0xB5, 
   0xC8, 0xC5, 0xCC, 0xCA, 0xC0, 0xCB, 0xB7, 0xAD, 0xB8, 0xB5, 0xAC, 0xB5, 0xAE, 0xA7, 0xAE, 0x9D, 
   0x9B, 0x9F, 0xBD, 0xBC, 0xC1, 0xC0, 0xB9, 0xBC, 0xC6, 0xB7, 0xB9, 0xD1, 0xC3, 0xC5, 0xC3, 0xB6, 
   0xB8, 0x9F, 0x8F, 0x92, 0xAE, 0x9D, 0xA0, 0xD9, 0xC6, 0xC8, 0xF5, 0xDE, 0xE1, 0xE5, 0xD0, 0xD2, 
   0xDF, 0xCE, 0xCF, 0xC1, 0xB2, 0xB3, 0x89, 0x7C, 0x7C, 0x90, 0x85, 0x85, 0x70, 0x69, 0x6A, 0x6F, 
   0x6D, 0x6E, 0x62, 0x60, 0x64, 0xB5, 0xB2, 0xB8, 0xCD, 0xCA, 0xD2, 0x71, 0x70, 0x78, 0x41, 0x41, 
   0x4C, 0x3C, 0x46, 0x4E, 0x45, 0x50, 0x57, 0x4C, 0x53, 0x57, 0xAA, 0xAB, 0xAE, 0x88, 0x83, 0x84, 
   0xA5, 0x9A, 0x9A, 0xB2, 0xA1, 0x9F, 0xB5, 0xA1, 0x9E, 0xC3, 0xAE, 0xAD, 0xE1, 0xCE, 0xD0, 0x5A, 
   0x4B, 0x50, 0x46, 0x40, 0x46, 0x3C, 0x3C, 0x42, 0x72, 0x76, 0x79, 0xF6, 0xF6, 0xF7, 0xF6, 0xE8, 
   0xE5, 0xFB, 0xE9, 0xE7, 0xFA, 0xEE, 0xEC, 0xFF, 0xF7, 0xF7, 0xB0, 0xB3, 0xB6, 0x82, 0x92, 0x99, 
   0x60, 0x71, 0x78, 0x2E, 0x40, 0x47, 0x2E, 0x3E, 0x45, 0x3D, 0x47, 0x4E, 0x62, 0x68, 0x6F, 0x55, 
   0x64, 0x6A, 0x38, 0x4B, 0x52, 0x52, 0x63, 0x6C, 0x79, 0x8B, 0x95, 0x70, 0x83, 0x8E, 0x47, 0x5A, 
   0x67, 0x55, 0x6B, 0x76, 0x64, 0x7C, 0x85, 0x5E, 0x77, 0x85, 0x4F, 0x68, 0x7B, 0x51, 0x6C, 0x80, 
   0x63, 0x7B, 0x8E, 0x5E, 0x79, 0x8A, 0x79, 0x84, 0x8F, 0x96, 0x8C, 0x90, 0xB0, 0x9A, 0x99, 0xCE, 
   0xAC, 0xA8, 0xE6, 0xBF, 0xBA, 0xEA, 0xC5, 0xC1, 0xF1, 0xCF, 0xCC, 0xF7, 0xD7, 0xD2, 0xDF, 0xC2, 
   0xBD, 0x91, 0x7B, 0x79, 0xB8, 0xA7, 0xA8, 0xF0, 0xE5, 0xE9, 0xCB, 0xC4, 0xCA, 0x91, 0x86, 0x8B, 
   0x8F, 0x82, 0x83, 0xB8, 0xAE, 0xAE, 0xB9, 0xB4, 0xB4, 0x6E, 0x6C, 0x69, 0x5B, 0x5D, 0x59, 0x68, 
   0x6A, 0x66, 0x61, 0x51, 0x4C, 0x5E, 0x4D, 0x46, 0x61, 0x50, 0x45, 0x64, 0x51, 0x43, 0x67, 0x53, 
   0x42, 0x67, 0x53, 0x3F, 0x54, 0x3C, 0x2A, 0x52, 0x36, 0x29, 0x65, 0x4A, 0x3C, 0x64, 0x49, 0x3B, 
   0x64, 0x49, 0x3B, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 
   0x4B, 0x3D, 0x65, 0x4A, 0x3C, 0x66, 0x4B, 0x3D, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 
   0x3E, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 
   0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x67, 
   0x4C, 0x3E, 0x68, 0x4D, 0x3F, 0x68, 0x4D, 0x3F, 0x68, 0x4D, 0x3F, 0x68, 0x4D, 0x3F, 0x68, 0x4D, 
   0x3F, 0x67, 0x4C, 0x3E, 0x66, 0x4B, 0x3D, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 
   0x67, 0x4C, 0x3E, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 
   0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x65, 0x4A, 
   0x3C, 0x65, 0x4A, 0x3C, 0x65, 0x4A, 0x3C, 0x65, 0x4A, 0x3C, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 
   0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0xE1, 0xC5, 0xC1, 0xE3, 0xC7, 0xC3, 0xE8, 0xCD, 0xC8, 0xEB, 
   0xCF, 0xCB, 0xED, 0xD2, 0xCD, 0xEE, 0xD3, 0xCF, 0xF1, 0xD5, 0xD2, 0xF1, 0xD4, 0xD3, 0xEF, 0xD3, 
   0xD2, 0xEF, 0xD2, 0xD1, 0xEE, 0xD1, 0xD0, 0xF3, 0xD6, 0xD5, 0xF3, 0xD7, 0xD5, 0xF2, 0xD7, 0xD5, 
   0xF2, 0xD8, 0xD7, 0xF2, 0xD8, 0xD6, 0xF1, 0xD8, 0xD6, 0xF1, 0xD8, 0xD6, 0xEF, 0xD6, 0xD4, 0xF2, 
   0xD8, 0xD6, 0xF4, 0xD9, 0xD3, 0xF7, 0xDC, 0xD7, 0xF1, 0xD7, 0xD3, 0xED, 0xD3, 0xD1, 0xAF, 0x96, 
   0x97, 0x8A, 0x72, 0x72, 0x91, 0x7B, 0x79, 0x97, 0x81, 0x7F, 0xBC, 0xA7, 0xA6, 0xC6, 0xB0, 0xAF, 
   0xE9, 0xD3, 0xD1, 0xDF, 0xCB, 0xC9, 0xED, 0xD8, 0xD6, 0xF8, 0xE6, 0xE3, 0xF0, 0xDD, 0xDA, 0xEF, 
   0xDB, 0xD9, 0xF3, 0xDD, 0xDB, 0xF3, 0xDD, 0xDB, 0xF2, 0xDA, 0xD8, 0xED, 0xD1, 0xCF, 0xF3, 0xD0, 
   0xD0, 0xEF, 0xD1, 0xD0, 0xEA, 0xCF, 0xCF, 0xE5, 0xCC, 0xCD, 0xEC, 0xD6, 0xD8, 0xAE, 0x9A, 0x9D, 
   0x4F, 0x4E, 0x4E, 0x53, 0x53, 0x52, 0x5B, 0x5A, 0x59, 0x5B, 0x5C, 0x5B, 0x5A, 0x61, 0x5F, 0x40, 
   0x4D, 0x49, 0x41, 0x4E, 0x50, 0x3E, 0x4A, 0x52, 0x42, 0x4E, 0x55, 0x4B, 0x57, 0x5E, 0x33, 0x3F, 
   0x46, 0x4D, 0x57, 0x5F, 0x85, 0x90, 0x97, 0x9E, 0xA5, 0xAA, 0x7E, 0x87, 0x8A, 0x70, 0x79, 0x7B, 
   0x71, 0x79, 0x79, 0x6B, 0x6C, 0x6C, 0x5C, 0x57, 0x57, 0x54, 0x50, 0x55, 0x64, 0x63, 0x6C, 0x55, 
   0x57, 0x5D, 0x65, 0x64, 0x6B, 0xA4, 0xA0, 0xA6, 0xBA, 0xB1, 0xB9, 0xC9, 0xB9, 0xC3, 0xCA, 0xB1, 
   0xB6, 0xC6, 0xAD, 0xB0, 0xCB, 0xB2, 0xB5, 0xCB, 0xB2, 0xB4, 0xCC, 0xB3, 0xB3, 0xC4, 0xAE, 0xAC, 
   0xCC, 0xB0, 0xB0, 0xD7, 0xB8, 0xB7, 0xCB, 0xAD, 0xAE, 0xD0, 0xB7, 0xB8, 0xE2, 0xCD, 0xCF, 0xF6, 
   0xE4, 0xE7, 0xBE, 0xAF, 0xB3, 0x54, 0x4D, 0x56, 0x48, 0x47, 0x50, 0x40, 0x46, 0x4D, 0x40, 0x4C, 
   0x52, 0x3E, 0x4C, 0x51, 0x53, 0x61, 0x66, 0x48, 0x5C, 0x63, 0x43, 0x5A, 0x64, 0x4A, 0x59, 0x64, 
   0x4B, 0x55, 0x5F, 0x4A, 0x53, 0x5B, 0x51, 0x5B, 0x61, 0x58, 0x64, 0x69, 0x5F, 0x68, 0x71, 0x5A, 
   0x62, 0x6B, 0x5F, 0x65, 0x6F, 0x4D, 0x54, 0x5D, 0x4B, 0x53, 0x5C, 0x4F, 0x58, 0x62, 0x57, 0x63, 
   0x6A, 0x44, 0x54, 0x57, 0x32, 0x41, 0x44, 0x38, 0x45, 0x49, 0x53, 0x5E, 0x62, 0x59, 0x62, 0x67, 
   0x64, 0x6E, 0x72, 0x88, 0x8A, 0x93, 0x8D, 0x90, 0x99, 0x9F, 0xA3, 0xAC, 0xAC, 0xB2, 0xB7, 0xB7, 
   0xC0, 0xC4, 0x9B, 0xA6, 0xA9, 0xA8, 0xA7, 0xA9, 0xBD, 0xAC, 0xAF, 0xAF, 0x9E, 0xA1, 0xB5, 0xA2, 
   0xA5, 0xC7, 0xB3, 0xB6, 0xCD, 0xB8, 0xBB, 0x8E, 0x79, 0x7C, 0x9B, 0x88, 0x89, 0xDC, 0xCA, 0xCB, 
   0xF3, 0xE3, 0xE4, 0xE6, 0xD9, 0xDA, 0xDF, 0xD5, 0xD5, 0xA3, 0x9A, 0x9A, 0x38, 0x34, 0x35, 0x56, 
   0x56, 0x5A, 0x81, 0x81, 0x85, 0x71, 0x6D, 0x74, 0x67, 0x63, 0x6A, 0x4F, 0x4A, 0x54, 0x44, 0x3F, 
   0x49, 0x3E, 0x45, 0x4D, 0x8A, 0x90, 0x96, 0x94, 0x95, 0x99, 0xBB, 0xB8, 0xB9, 0x86, 0x7E, 0x7F, 
   0x56, 0x4A, 0x48, 0x5B, 0x52, 0x4F, 0x6C, 0x66, 0x61, 0x86, 0x7D, 0x7A, 0xB6, 0xAD, 0xAD, 0x55, 
   0x50, 0x53, 0x4B, 0x4C, 0x51, 0x46, 0x4B, 0x50, 0xAC, 0xAF, 0xB2, 0xE8, 0xE4, 0xE3, 0xE4, 0xD2, 
   0xCF, 0xEA, 0xD2, 0xD0, 0xF4, 0xE5, 0xE4, 0xFD, 0xF4, 0xF4, 0xB3, 0xB2, 0xB7, 0x84, 0x90, 0x97, 
   0x4E, 0x5D, 0x64, 0x2C, 0x3F, 0x45, 0x36, 0x48, 0x4E, 0x5F, 0x6C, 0x73, 0x74, 0x7C, 0x84, 0x52, 
   0x5F, 0x67, 0x33, 0x45, 0x4D, 0x61, 0x73, 0x7D, 0x7A, 0x8D, 0x98, 0x5F, 0x74, 0x80, 0x3C, 0x51, 
   0x5E, 0x4E, 0x64, 0x70, 0x66, 0x7A, 0x86, 0x54, 0x6B, 0x79, 0x5A, 0x74, 0x86, 0x59, 0x73, 0x87, 
   0x64, 0x78, 0x8B, 0x6A, 0x7F, 0x8F, 0x8C, 0x8F, 0x98, 0x9F, 0x8A, 0x8D, 0xB5, 0x9A, 0x98, 0xD3, 
   0xB0, 0xAB, 0xDE, 0xBA, 0xB3, 0xE7, 0xC5, 0xC0, 0xF4, 0xD5, 0xD1, 0xDC, 0xC2, 0xBC, 0xB8, 0xA2, 
   0x9E, 0xC4, 0xB3, 0xB1, 0xE4, 0xD8, 0xD9, 0xAF, 0xA8, 0xAD, 0x5A, 0x58, 0x60, 0x61, 0x66, 0x69, 
   0xAA, 0xB2, 0xB0, 0x62, 0x63, 0x62, 0x6C, 0x67, 0x65, 0x6C, 0x62, 0x5E, 0x66, 0x57, 0x54, 0x5D, 
   0x4D, 0x48, 0x63, 0x50, 0x46, 0x6C, 0x59, 0x4D, 0x67, 0x54, 0x46, 0x68, 0x54, 0x43, 0x68, 0x54, 
   0x41, 0x61, 0x4D, 0x37, 0x5D, 0x45, 0x33, 0x67, 0x4B, 0x3E, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 
   0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 
   0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x67, 0x4C, 0x3E, 0x68, 0x4D, 0x3F, 0x68, 0x4D, 0x3F, 0x67, 0x4C, 
   0x3E, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 
   0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x67, 
   0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 
   0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x65, 0x4A, 0x3C, 0x65, 0x4A, 0x3C, 0x65, 0x4A, 0x3C, 
   0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 
   0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 
   0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x65, 0x4A, 0x3C, 0x64, 0x49, 0x3B, 0x65, 0x4A, 0x3C, 
   0x65, 0x4A, 0x3C, 0x65, 0x4A, 0x3C, 0xEE, 0xD4, 0xD0, 0xEE, 0xD4, 0xD0, 0xF0, 0xD6, 0xD2, 0xF0, 
   0xD6, 0xD2, 0xF1, 0xD8, 0xD4, 0xF2, 0xD9, 0xD4, 0xF2, 0xD8, 0xD5, 0xF1, 0xD7, 0xD5, 0xED, 0xD3, 
   0xD2, 0xED, 0xD3, 0xD1, 0xED, 0xD3, 0xD2, 0xF2, 0xD8, 0xD6, 0xF3, 0xD9, 0xD7, 0xEF, 0xD8, 0xD6, 
   0xEE, 0xD8, 0xD6, 0xEE, 0xD8, 0xD6, 0xEF, 0xD8, 0xD6, 0xEF, 0xD9, 0xD7, 0xED, 0xD7, 0xD5, 0xEF, 
   0xD7, 0xD4, 0xF4, 0xDC, 0xD6, 0xF5, 0xDC, 0xD7, 0xF1, 0xDA, 0xD5, 0xF2, 0xDC, 0xD9, 0xF4, 0xDE, 
   0xDE, 0xEE, 0xDA, 0xD9, 0xF1, 0xDD, 0xDB, 0xF5, 0xE1, 0xDF, 0xF9, 0xE6, 0xE3, 0xF8, 0xE4, 0xE1, 
   0xF3, 0xDF, 0xDC, 0xF6, 0xE4, 0xE1, 0xF4, 0xE2, 0xDF, 0xEE, 0xDC, 0xD9, 0xF1, 0xE0, 0xDC, 0xF1, 
   0xDF, 0xDC, 0xF2, 0xDE, 0xDB, 0xF2, 0xDE, 0xDB, 0xEF, 0xDC, 0xD9, 0xF3, 0xD8, 0xD6, 0xF5, 0xD4, 
   0xD4, 0xF4, 0xD7, 0xD7, 0xF3, 0xDC, 0xDC, 0xE8, 0xD3, 0xD5, 0xEB, 0xD8, 0xDB, 0xFF, 0xF0, 0xF3, 
   0xBE, 0xC1, 0xC3, 0x73, 0x77, 0x79, 0x4A, 0x4C, 0x4E, 0x38, 0x3B, 0x3D, 0x4E, 0x55, 0x57, 0x6E, 
   0x7B, 0x7B, 0x59, 0x68, 0x6D, 0x52, 0x61, 0x6B, 0x63, 0x72, 0x7B, 0x6A, 0x77, 0x81, 0xA0, 0xAB, 
   0xB5, 0x65, 0x70, 0x79, 0x5D, 0x67, 0x71, 0x52, 0x59, 0x62, 0x46, 0x50, 0x57, 0x5D, 0x66, 0x6C, 
   0x79, 0x81, 0x83, 0x9C, 0x9D, 0x9E, 0xB4, 0xAF, 0xAE, 0x82, 0x7A, 0x7F, 0x61, 0x58, 0x61, 0x72, 
   0x6C, 0x73, 0xB5, 0xAE, 0xB5, 0xC0, 0xB5, 0xBB, 0xC7, 0xB8, 0xBD, 0xC9, 0xB4, 0xBA, 0xBD, 0xA8, 
   0xAA, 0xC7, 0xB3, 0xB5, 0xBB, 0xA7, 0xA7, 0xB0, 0x9A, 0x9A, 0xAC, 0x97, 0x94, 0xAC, 0x98, 0x95, 
   0xAA, 0x90, 0x8D, 0xC1, 0xA1, 0x9E, 0xCA, 0xAE, 0xAD, 0xC7, 0xAD, 0xAE, 0xD3, 0xBD, 0xC1, 0xDB, 
   0xC9, 0xCD, 0xF0, 0xE1, 0xE7, 0xC0, 0xBE, 0xC6, 0x85, 0x89, 0x91, 0x51, 0x5B, 0x62, 0x43, 0x52, 
   0x58, 0x3C, 0x4B, 0x51, 0x3B, 0x48, 0x4E, 0x40, 0x51, 0x59, 0x45, 0x58, 0x64, 0x4C, 0x57, 0x61, 
   0x55, 0x5B, 0x65, 0x65, 0x69, 0x6F, 0x5D, 0x62, 0x66, 0x56, 0x5D, 0x60, 0x54, 0x58, 0x5D, 0x75, 
   0x76, 0x7C, 0x9E, 0x9D, 0xA3, 0x7E, 0x7D, 0x83, 0x40, 0x42, 0x48, 0x42, 0x46, 0x4D, 0x43, 0x50, 
   0x54, 0x42, 0x55, 0x58, 0x44, 0x56, 0x58, 0x49, 0x5B, 0x5E, 0x4A, 0x5B, 0x5E, 0x4A, 0x5B, 0x5D, 
   0x1C, 0x2D, 0x30, 0x3D, 0x47, 0x51, 0x84, 0x8E, 0x98, 0x60, 0x6D, 0x75, 0x50, 0x5D, 0x63, 0x55, 
   0x64, 0x67, 0x68, 0x79, 0x7C, 0x7A, 0x7E, 0x7F, 0xA0, 0x96, 0x96, 0xB2, 0xA5, 0xA6, 0xBF, 0xAE, 
   0xB0, 0xC5, 0xB3, 0xB5, 0xBC, 0xAC, 0xAD, 0xB0, 0xA1, 0xA2, 0x96, 0x85, 0x87, 0xA2, 0x92, 0x94, 
   0x8C, 0x7D, 0x7F, 0x6F, 0x63, 0x64, 0x93, 0x87, 0x88, 0xA2, 0x99, 0x9A, 0x4A, 0x42, 0x45, 0x65, 
   0x61, 0x66, 0x69, 0x64, 0x69, 0x36, 0x31, 0x37, 0x37, 0x32, 0x38, 0x3E, 0x38, 0x3F, 0x3D, 0x37, 
   0x3D, 0x51, 0x4F, 0x56, 0x6F, 0x6B, 0x71, 0xAF, 0xA7, 0xAB, 0xA9, 0x9F, 0xA2, 0x84, 0x79, 0x78, 
   0x5B, 0x4E, 0x4C, 0x48, 0x46, 0x41, 0x42, 0x46, 0x40, 0x4B, 0x4B, 0x47, 0x6A, 0x66, 0x66, 0x49, 
   0x49, 0x4B, 0x4B, 0x4F, 0x54, 0x4C, 0x54, 0x58, 0xC9, 0xC8, 0xCA, 0xC5, 0xBB, 0xBB, 0xDA, 0xC4, 
   0xC1, 0xDA, 0xBF, 0xBB, 0xE7, 0xD1, 0xCF, 0xFB, 0xF3, 0xF3, 0x9E, 0x9D, 0x9F, 0x71, 0x78, 0x7C, 
   0x43, 0x50, 0x54, 0x41, 0x55, 0x59, 0x4F, 0x64, 0x68, 0x77, 0x87, 0x8E, 0x70, 0x7C, 0x83, 0x38, 
   0x46, 0x4F, 0x48, 0x5A, 0x62, 0x6F, 0x83, 0x8D, 0x6A, 0x80, 0x8B, 0x54, 0x6A, 0x78, 0x53, 0x68, 
   0x77, 0x5A, 0x6E, 0x7C, 0x55, 0x69, 0x76, 0x4D, 0x65, 0x74, 0x57, 0x70, 0x81, 0x63, 0x7A, 0x8B, 
   0x6E, 0x7C, 0x8B, 0x8C, 0x96, 0xA1, 0x9A, 0x93, 0x9A, 0xAA, 0x91, 0x93, 0xB9, 0x9D, 0x9B, 0xD0, 
   0xB1, 0xAC, 0xDB, 0xBB, 0xB5, 0xDF, 0xC3, 0xC0, 0xE6, 0xCC, 0xCB, 0xC3, 0xAF, 0xAB, 0xBE, 0xAF, 
   0xAB, 0xC1, 0xB6, 0xB5, 0x7A, 0x75, 0x76, 0x4B, 0x4A, 0x4D, 0x75, 0x77, 0x7D, 0x42, 0x4D, 0x4F, 
   0x4B, 0x5C, 0x57, 0x6F, 0x75, 0x71, 0x6E, 0x68, 0x64, 0x63, 0x51, 0x4D, 0x6C, 0x4F, 0x4C, 0x6C, 
   0x4C, 0x46, 0x67, 0x54, 0x48, 0x6A, 0x58, 0x4B, 0x61, 0x4E, 0x40, 0x63, 0x4F, 0x3E, 0x60, 0x4B, 
   0x3A, 0x65, 0x4F, 0x3B, 0x66, 0x4D, 0x3D, 0x67, 0x4C, 0x3E, 0x64, 0x49, 0x3B, 0x66, 0x4B, 0x3D, 
   0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 
   0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x67, 0x4C, 0x3E, 0x68, 0x4D, 0x3F, 0x68, 0x4D, 0x3F, 0x67, 0x4C, 
   0x3E, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 
   0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x67, 
   0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 
   0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x65, 0x4A, 0x3C, 0x65, 0x4A, 0x3C, 0x65, 0x4A, 0x3C, 
   0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 
   0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 
   0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x65, 0x4A, 0x3C, 0x65, 0x4A, 0x3C, 
   0x65, 0x4A, 0x3C, 0x65, 0x4A, 0x3C, 0xED, 0xD5, 0xD2, 0xEF, 0xD7, 0xD4, 0xF1, 0xD9, 0xD6, 0xF1, 
   0xD9, 0xD5, 0xF1, 0xD9, 0xD6, 0xF2, 0xDA, 0xD7, 0xF2, 0xDA, 0xD7, 0xEF, 0xD7, 0xD6, 0xEC, 0xD4, 
   0xD3, 0xEC, 0xD4, 0xD3, 0xEE, 0xD5, 0xD4, 0xF1, 0xD9, 0xD7, 0xF1, 0xD9, 0xD7, 0xEE, 0xD9, 0xD7, 
   0xED, 0xD9, 0xD7, 0xED, 0xD9, 0xD7, 0xED, 0xD9, 0xD7, 0xEE, 0xDA, 0xD7, 0xEC, 0xD9, 0xD6, 0xEE, 
   0xDA, 0xD6, 0xF7, 0xE0, 0xDA, 0xF2, 0xDB, 0xD6, 0xF1, 0xDC, 0xD7, 0xF0, 0xDB, 0xD9, 0xEF, 0xDB, 
   0xDA, 0xED, 0xDA, 0xD9, 0xE6, 0xD4, 0xD1, 0xED, 0xDC, 0xD9, 0xEA, 0xD8, 0xD5, 0xEF, 0xDE, 0xDA, 
   0xF3, 0xE2, 0xDF, 0xED, 0xDC, 0xD9, 0xF0, 0xDF, 0xDC, 0xF0, 0xDF, 0xDC, 0xEF, 0xDE, 0xDB, 0xF1, 
   0xE0, 0xDD, 0xF0, 0xDF, 0xDC, 0xF1, 0xE0, 0xDD, 0xF2, 0xE2, 0xDF, 0xF1, 0xDD, 0xDA, 0xF2, 0xDC, 
   0xDA, 0xEC, 0xDA, 0xD9, 0xE6, 0xD8, 0xD8, 0xEF, 0xE5, 0xE7, 0xDA, 0xD4, 0xD5, 0xBE, 0xBB, 0xBC, 
   0xA9, 0xB0, 0xB3, 0xCF, 0xD4, 0xD8, 0xA1, 0xA3, 0xA8, 0x56, 0x57, 0x5C, 0x58, 0x5B, 0x5F, 0x5F, 
   0x67, 0x6B, 0x4E, 0x5A, 0x61, 0x57, 0x65, 0x6E, 0x8E, 0x9B, 0xA4, 0x8D, 0x98, 0xA1, 0x8A, 0x92, 
   0x9B, 0x48, 0x4F, 0x59, 0x49, 0x4F, 0x59, 0x4D, 0x54, 0x60, 0x40, 0x49, 0x53, 0x64, 0x6D, 0x75, 
   0x7C, 0x81, 0x85, 0xB8, 0xB7, 0xBA, 0xAD, 0xA5, 0xA6, 0xA5, 0x9A, 0x9E, 0xB3, 0xA7, 0xAF, 0x91, 
   0x88, 0x8F, 0x76, 0x70, 0x73, 0x84, 0x7A, 0x7C, 0x8C, 0x7F, 0x80, 0x7C, 0x6A, 0x6B, 0x6E, 0x60, 
   0x61, 0xA8, 0x9A, 0x9A, 0xA0, 0x91, 0x90, 0xA5, 0x96, 0x93, 0xAE, 0x9E, 0x9B, 0xB9, 0xA9, 0xA4, 
   0xC2, 0xAE, 0xA9, 0xBC, 0xA6, 0xA1, 0xB4, 0xA1, 0x9E, 0xC3, 0xB3, 0xB2, 0xC0, 0xB3, 0xB5, 0xBF, 
   0xB6, 0xB9, 0xA6, 0x9E, 0xA5, 0x65, 0x69, 0x71, 0x7D, 0x86, 0x8E, 0x77, 0x85, 0x8C, 0x46, 0x56, 
   0x5C, 0x3B, 0x4A, 0x51, 0x3A, 0x46, 0x4D, 0x3F, 0x4C, 0x55, 0x3C, 0x49, 0x54, 0x51, 0x56, 0x60, 
   0x77, 0x77, 0x7F, 0xC4, 0xC1, 0xC5, 0xD6, 0xD3, 0xD5, 0xBC, 0xBB, 0xBC, 0xAD, 0xAC, 0xAE, 0xD4, 
   0xCE, 0xD1, 0xFD, 0xF5, 0xF6, 0xF0, 0xE7, 0xEA, 0x6D, 0x68, 0x6B, 0x45, 0x44, 0x46, 0x38, 0x3F, 
   0x42, 0x3C, 0x48, 0x4C, 0x40, 0x4C, 0x4F, 0x4A, 0x56, 0x5A, 0x49, 0x55, 0x59, 0x40, 0x4B, 0x4F, 
   0x3C, 0x49, 0x4D, 0x69, 0x73, 0x7D, 0x70, 0x7A, 0x84, 0x3F, 0x48, 0x52, 0x36, 0x41, 0x49, 0x3B, 
   0x47, 0x4C, 0x4B, 0x56, 0x5B, 0x5D, 0x64, 0x65, 0x6B, 0x69, 0x67, 0x91, 0x8B, 0x8B, 0xAC, 0xA1, 
   0xA2, 0xA7, 0x9B, 0x9C, 0x9A, 0x92, 0x92, 0xBD, 0xB7, 0xB6, 0xDE, 0xD0, 0xD3, 0xD0, 0xC3, 0xC5, 
   0xA1, 0x94, 0x96, 0x6C, 0x5F, 0x61, 0x8C, 0x7D, 0x80, 0xDE, 0xD0, 0xD2, 0x94, 0x89, 0x8C, 0x4E, 
   0x43, 0x48, 0x46, 0x3C, 0x41, 0x52, 0x49, 0x4D, 0x4E, 0x47, 0x4A, 0x48, 0x42, 0x45, 0x49, 0x42, 
   0x46, 0x69, 0x5B, 0x62, 0x77, 0x65, 0x6D, 0xD3, 0xBF, 0xC5, 0x9D, 0x8A, 0x8C, 0x64, 0x54, 0x53, 
   0x43, 0x36, 0x33, 0x40, 0x3F, 0x39, 0x47, 0x4D, 0x46, 0x3E, 0x3F, 0x3A, 0x4B, 0x48, 0x47, 0x4E, 
   0x4C, 0x4E, 0x47, 0x48, 0x4D, 0x5E, 0x62, 0x67, 0xAC, 0xA8, 0xAA, 0xDC, 0xCE, 0xCD, 0xE2, 0xC8, 
   0xC5, 0xD8, 0xBA, 0xB6, 0xE8, 0xD1, 0xCE, 0xD9, 0xCF, 0xCE, 0x62, 0x5C, 0x5E, 0x89, 0x88, 0x8C, 
   0x38, 0x40, 0x42, 0x53, 0x68, 0x6B, 0x69, 0x82, 0x86, 0x6A, 0x80, 0x85, 0x4C, 0x5D, 0x65, 0x39, 
   0x48, 0x51, 0x59, 0x6A, 0x75, 0x73, 0x89, 0x94, 0x56, 0x6F, 0x7B, 0x60, 0x77, 0x85, 0x7C, 0x91, 
   0xA1, 0x5F, 0x72, 0x81, 0x54, 0x68, 0x76, 0x5A, 0x71, 0x80, 0x5D, 0x75, 0x85, 0x6A, 0x7E, 0x8C, 
   0x8C, 0x93, 0x9B, 0xB8, 0xB8, 0xBC, 0xB7, 0xA8, 0xAD, 0xC6, 0xAB, 0xAE, 0xC9, 0xAF, 0xAE, 0xD3, 
   0xB8, 0xB4, 0xDB, 0xC2, 0xBD, 0xDF, 0xCB, 0xC9, 0xE9, 0xD6, 0xD7, 0xBD, 0xB2, 0xB1, 0xA9, 0x9F, 
   0x9E, 0x70, 0x6B, 0x6B, 0x45, 0x45, 0x45, 0x97, 0x9A, 0x9B, 0x92, 0x97, 0x9A, 0x66, 0x6F, 0x6F, 
   0x77, 0x7F, 0x7B, 0x65, 0x65, 0x60, 0x56, 0x4B, 0x45, 0x62, 0x4E, 0x46, 0x6A, 0x4E, 0x44, 0x6F, 
   0x4E, 0x44, 0x56, 0x46, 0x39, 0x57, 0x47, 0x3A, 0x4F, 0x3C, 0x2F, 0x51, 0x3D, 0x2D, 0x62, 0x4B, 
   0x3C, 0x65, 0x4D, 0x3D, 0x63, 0x49, 0x3A, 0x66, 0x4A, 0x3D, 0x62, 0x47, 0x39, 0x64, 0x49, 0x3B, 
   0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 
   0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x67, 0x4C, 0x3E, 0x68, 0x4D, 0x3F, 0x68, 0x4D, 0x3F, 0x68, 0x4D, 
   0x3F, 0x68, 0x4D, 0x3F, 0x68, 0x4D, 0x3F, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 
   0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 
   0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 
   0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x65, 0x4A, 0x3C, 0x65, 0x4A, 0x3C, 0x65, 0x4A, 0x3C, 
   0x65, 0x4A, 0x3C, 0x65, 0x4A, 0x3C, 0x65, 0x4A, 0x3C, 0x65, 0x4A, 0x3C, 0x65, 0x4A, 0x3C, 0x65, 
   0x4A, 0x3C, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 
   0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x65, 0x4A, 0x3C, 0x65, 0x4A, 0x3C, 
   0x65, 0x4A, 0x3C, 0x65, 0x4A, 0x3C, 0xEC, 0xD6, 0xD4, 0xEF, 0xD8, 0xD6, 0xF2, 0xDB, 0xDA, 0xF1, 
   0xDA, 0xD8, 0xEF, 0xD8, 0xD7, 0xF1, 0xDA, 0xD8, 0xF1, 0xDA, 0xD9, 0xF0, 0xD8, 0xD8, 0xED, 0xD5, 
   0xD5, 0xED, 0xD5, 0xD5, 0xF0, 0xD8, 0xD8, 0xF0, 0xD8, 0xD8, 0xF0, 0xD8, 0xD8, 0xEE, 0xDA, 0xD8, 
   0xED, 0xDB, 0xD8, 0xED, 0xDB, 0xD8, 0xEC, 0xDA, 0xD7, 0xED, 0xDB, 0xD8, 0xED, 0xDB, 0xD8, 0xEF, 
   0xDD, 0xD8, 0xF3, 0xDD, 0xD7, 0xF1, 0xDB, 0xD5, 0xEE, 0xDA, 0xD5, 0xEE, 0xD9, 0xD7, 0xF6, 0xE2, 
   0xE2, 0xEC, 0xD9, 0xD8, 0xE6, 0xD6, 0xD4, 0xE6, 0xD8, 0xD5, 0xE7, 0xD9, 0xD6, 0xE6, 0xD7, 0xD4, 
   0xEA, 0xDC, 0xD9, 0xF0, 0xE2, 0xDE, 0xED, 0xDF, 0xDC, 0xF0, 0xE0, 0xDD, 0xF1, 0xE0, 0xDD, 0xEF, 
   0xDF, 0xDC, 0xF1, 0xE2, 0xDF, 0xEF, 0xE0, 0xDD, 0xEC, 0xDD, 0xDA, 0xEA, 0xDF, 0xDC, 0xE6, 0xE0, 
   0xDC, 0xEC, 0xE9, 0xE6, 0xE9, 0xEB, 0xE9, 0xAE, 0xB5, 0xB3, 0x62, 0x6D, 0x6B, 0x53, 0x62, 0x61, 
   0x55, 0x5F, 0x64, 0x66, 0x6C, 0x71, 0x72, 0x74, 0x7B, 0x87, 0x85, 0x8C, 0x9B, 0x9A, 0xA1, 0x77, 
   0x79, 0x7F, 0x42, 0x4A, 0x51, 0x55, 0x61, 0x69, 0x8A, 0x94, 0x9C, 0x63, 0x6A, 0x73, 0x53, 0x57, 
   0x61, 0x52, 0x54, 0x5D, 0x62, 0x63, 0x6E, 0x61, 0x67, 0x75, 0x51, 0x59, 0x67, 0x53, 0x5C, 0x65, 
   0x77, 0x7B, 0x81, 0xA0, 0x9C, 0xA1, 0x78, 0x6C, 0x6E, 0x7B, 0x6F, 0x72, 0x69, 0x61, 0x66, 0x5F, 
   0x5A, 0x5E, 0x44, 0x43, 0x43, 0x45, 0x42, 0x41, 0x45, 0x3F, 0x3C, 0x53, 0x4A, 0x46, 0x46, 0x40, 
   0x40, 0x3B, 0x35, 0x33, 0x55, 0x4D, 0x4A, 0x83, 0x79, 0x76, 0x89, 0x7E, 0x79, 0x8A, 0x7C, 0x76, 
   0x81, 0x76, 0x6F, 0x88, 0x81, 0x7A, 0x85, 0x80, 0x7A, 0x84, 0x82, 0x7F, 0x7E, 0x7F, 0x7F, 0x7B, 
   0x80, 0x82, 0x3B, 0x42, 0x47, 0x5B, 0x64, 0x6D, 0x79, 0x86, 0x8E, 0x83, 0x94, 0x9B, 0x41, 0x52, 
   0x59, 0x3A, 0x47, 0x4F, 0x4D, 0x56, 0x5F, 0x58, 0x5F, 0x69, 0x83, 0x88, 0x92, 0xD1, 0xD0, 0xD9, 
   0xE5, 0xDE, 0xE4, 0xF7, 0xED, 0xEF, 0xFB, 0xF0, 0xF0, 0xFD, 0xF3, 0xF2, 0xF9, 0xF0, 0xF0, 0xFB, 
   0xED, 0xEE, 0xF9, 0xE7, 0xE9, 0xFB, 0xEA, 0xEC, 0xFC, 0xF5, 0xF5, 0x94, 0x91, 0x8F, 0x33, 0x31, 
   0x34, 0x49, 0x47, 0x4E, 0x61, 0x60, 0x67, 0x4F, 0x4F, 0x55, 0x47, 0x47, 0x4C, 0x3C, 0x3C, 0x42, 
   0x50, 0x52, 0x58, 0x58, 0x5A, 0x66, 0x55, 0x58, 0x63, 0x53, 0x54, 0x5F, 0x4B, 0x4D, 0x56, 0x4C, 
   0x4E, 0x57, 0x42, 0x41, 0x49, 0x43, 0x48, 0x49, 0x3A, 0x44, 0x3E, 0x41, 0x43, 0x40, 0x54, 0x50, 
   0x4E, 0x57, 0x53, 0x51, 0x6F, 0x6F, 0x6C, 0xA3, 0xA4, 0xA2, 0xE9, 0xDD, 0xDF, 0xEA, 0xDD, 0xE0, 
   0xEE, 0xE0, 0xE2, 0xE7, 0xD9, 0xDB, 0xE3, 0xD0, 0xD3, 0xE2, 0xCF, 0xD2, 0xDE, 0xCD, 0xD0, 0xC1, 
   0xB1, 0xB5, 0x6F, 0x60, 0x64, 0x4B, 0x40, 0x41, 0x3C, 0x34, 0x34, 0x4B, 0x46, 0x45, 0x7C, 0x76, 
   0x76, 0xBE, 0xA3, 0xAD, 0xC2, 0xA4, 0xAE, 0xDB, 0xBC, 0xC3, 0xE2, 0xC4, 0xC9, 0xE5, 0xD0, 0xD0, 
   0xBC, 0xAF, 0xAC, 0x9C, 0x9A, 0x94, 0x7C, 0x7E, 0x78, 0x53, 0x4F, 0x4B, 0x5B, 0x53, 0x53, 0x74, 
   0x6B, 0x6F, 0x69, 0x62, 0x69, 0x73, 0x6F, 0x76, 0xB6, 0xAF, 0xB2, 0xEB, 0xDC, 0xDA, 0xE6, 0xCB, 
   0xC8, 0xE0, 0xC0, 0xBC, 0xD7, 0xBF, 0xBD, 0x9F, 0x93, 0x91, 0x74, 0x6C, 0x6D, 0xA7, 0x9F, 0xA2, 
   0x3E, 0x43, 0x45, 0x54, 0x6B, 0x6D, 0x61, 0x7E, 0x81, 0x55, 0x6F, 0x74, 0x37, 0x4D, 0x53, 0x3C, 
   0x4B, 0x54, 0x72, 0x82, 0x8D, 0x66, 0x7D, 0x88, 0x5B, 0x76, 0x82, 0x67, 0x80, 0x8E, 0x70, 0x84, 
   0x94, 0x66, 0x77, 0x88, 0x64, 0x78, 0x87, 0x65, 0x7A, 0x8A, 0x5A, 0x71, 0x7F, 0x5D, 0x6D, 0x78, 
   0x82, 0x82, 0x86, 0xA4, 0x98, 0x96, 0xB0, 0x9A, 0x9C, 0xC1, 0xA3, 0xA9, 0xD6, 0xBD, 0xBE, 0xD7, 
   0xC0, 0xBD, 0xDA, 0xC8, 0xC4, 0xAD, 0x9F, 0x9F, 0x85, 0x7A, 0x7B, 0x70, 0x6C, 0x6E, 0x5E, 0x5B, 
   0x5D, 0x67, 0x66, 0x67, 0x90, 0x93, 0x93, 0x80, 0x86, 0x85, 0x68, 0x71, 0x71, 0x69, 0x69, 0x67, 
   0x5E, 0x54, 0x51, 0x56, 0x4B, 0x45, 0x60, 0x51, 0x48, 0x5E, 0x4D, 0x40, 0x65, 0x52, 0x41, 0x61, 
   0x4C, 0x3C, 0x41, 0x36, 0x28, 0x4B, 0x3F, 0x31, 0x44, 0x35, 0x28, 0x47, 0x33, 0x25, 0x59, 0x40, 
   0x32, 0x64, 0x49, 0x3C, 0x67, 0x4C, 0x3F, 0x66, 0x4C, 0x3E, 0x65, 0x4A, 0x3C, 0x66, 0x4B, 0x3D, 
   0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 
   0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x67, 0x4C, 0x3E, 0x68, 0x4D, 0x3F, 0x69, 0x4E, 0x40, 0x69, 0x4E, 
   0x40, 0x69, 0x4E, 0x40, 0x68, 0x4D, 0x3F, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 
   0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x65, 0x4A, 0x3C, 0x65, 
   0x4A, 0x3C, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 
   0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x65, 0x4A, 0x3C, 0x65, 0x4A, 0x3C, 0x65, 0x4A, 0x3C, 
   0x65, 0x4A, 0x3C, 0x64, 0x49, 0x3B, 0x64, 0x49, 0x3B, 0x64, 0x49, 0x3B, 0x64, 0x49, 0x3B, 0x64, 
   0x49, 0x3B, 0x65, 0x4A, 0x3C, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 
   0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x65, 0x4A, 0x3C, 0x65, 0x4A, 0x3C, 
   0x65, 0x4A, 0x3C, 0x65, 0x4A, 0x3C, 0xEF, 0xD8, 0xD6, 0xEF, 0xD8, 0xD6, 0xEE, 0xD7, 0xD5, 0xEE, 
   0xD8, 0xD6, 0xF1, 0xDB, 0xD9, 0xF2, 0xDB, 0xD9, 0xF3, 0xDC, 0xDA, 0xF1, 0xD9, 0xD9, 0xEE, 0xD6, 
   0xD6, 0xEE, 0xD6, 0xD5, 0xF2, 0xDA, 0xDA, 0xF1, 0xD9, 0xD9, 0xF1, 0xD9, 0xD9, 0xEE, 0xDA, 0xD9, 
   0xED, 0xDB, 0xD8, 0xED, 0xDB, 0xD8, 0xEC, 0xDA, 0xD7, 0xED, 0xDC, 0xD9, 0xED, 0xDB, 0xD8, 0xF1, 
   0xDF, 0xDA, 0xF2, 0xDC, 0xD6, 0xF3, 0xDD, 0xD9, 0xF0, 0xDD, 0xD8, 0xF0, 0xDD, 0xDA, 0xEF, 0xDC, 
   0xDB, 0xEF, 0xDE, 0xDC, 0xEF, 0xDF, 0xDC, 0xE9, 0xD9, 0xD6, 0xEB, 0xDB, 0xD8, 0xEB, 0xDB, 0xD8, 
   0xE9, 0xDA, 0xD7, 0xE6, 0xD7, 0xD4, 0xE9, 0xDA, 0xD7, 0xF0, 0xDE, 0xDB, 0xF4, 0xE2, 0xDF, 0xF0, 
   0xE0, 0xDE, 0xEC, 0xDE, 0xDC, 0xF2, 0xE5, 0xE3, 0xF8, 0xED, 0xEA, 0xE9, 0xE7, 0xE3, 0xCF, 0xD6, 
   0xD2, 0xC2, 0xCB, 0xC7, 0x85, 0x93, 0x91, 0x40, 0x52, 0x50, 0x4E, 0x64, 0x62, 0x50, 0x67, 0x67, 
   0x4E, 0x5B, 0x61, 0x63, 0x68, 0x70, 0x6A, 0x6A, 0x73, 0x71, 0x6E, 0x77, 0xD3, 0xD0, 0xD8, 0xDB, 
   0xDB, 0xE3, 0x75, 0x79, 0x82, 0x8C, 0x95, 0x9E, 0x9F, 0xA6, 0xAE, 0x7C, 0x80, 0x88, 0x69, 0x69, 
   0x72, 0x4F, 0x4E, 0x57, 0x6D, 0x6C, 0x75, 0x5E, 0x61, 0x6E, 0x4D, 0x50, 0x5E, 0x4F, 0x52, 0x5C, 
   0x42, 0x42, 0x48, 0x52, 0x4C, 0x50, 0x70, 0x62, 0x65, 0x6A, 0x5E, 0x62, 0x53, 0x4C, 0x50, 0x5D, 
   0x59, 0x5C, 0x7A, 0x7A, 0x7A, 0xAC, 0xAC, 0xAA, 0xA8, 0xA6, 0xA1, 0x77, 0x72, 0x6D, 0x59, 0x58, 
   0x56, 0x5C, 0x59, 0x56, 0x58, 0x53, 0x4F, 0x56, 0x4D, 0x4A, 0x4E, 0x44, 0x3E, 0x53, 0x46, 0x41, 
   0x3C, 0x36, 0x30, 0x59, 0x5C, 0x53, 0x58, 0x5C, 0x55, 0x5B, 0x61, 0x5E, 0x5E, 0x67, 0x67, 0x47, 
   0x53, 0x55, 0x2C, 0x38, 0x3C, 0x65, 0x6E, 0x76, 0x76, 0x83, 0x89, 0x50, 0x60, 0x66, 0x38, 0x47, 
   0x4D, 0x55, 0x62, 0x6A, 0x74, 0x7C, 0x84, 0x7F, 0x85, 0x8E, 0xC6, 0xC8, 0xD1, 0xEE, 0xEA, 0xF1, 
   0xF7, 0xED, 0xF1, 0xF2, 0xE2, 0xE4, 0xF6, 0xE6, 0xE5, 0xF9, 0xEB, 0xE8, 0xF8, 0xEA, 0xE6, 0xF5, 
   0xE2, 0xE0, 0xF7, 0xE4, 0xE2, 0xF9, 0xE7, 0xE5, 0xF7, 0xEA, 0xE8, 0xE9, 0xE4, 0xDF, 0xB0, 0xA8, 
   0xA9, 0xBB, 0xAF, 0xB7, 0xDE, 0xD4, 0xDA, 0x95, 0x8C, 0x92, 0x67, 0x5D, 0x63, 0x86, 0x7E, 0x84, 
   0xA8, 0xA0, 0xA7, 0xAB, 0xA5, 0xAF, 0xB2, 0xAD, 0xB8, 0xA7, 0xA1, 0xAB, 0xAA, 0xA3, 0xAD, 0x52, 
   0x4C, 0x54, 0x3C, 0x32, 0x3B, 0x2D, 0x31, 0x31, 0x26, 0x35, 0x2E, 0x37, 0x3D, 0x39, 0x3F, 0x3E, 
   0x3B, 0x3B, 0x3A, 0x37, 0x3E, 0x43, 0x3F, 0x67, 0x6C, 0x69, 0x84, 0x7B, 0x7C, 0x8B, 0x80, 0x83, 
   0x90, 0x84, 0x85, 0xA1, 0x93, 0x95, 0xCE, 0xBA, 0xBD, 0xD4, 0xBF, 0xC2, 0xE1, 0xCB, 0xCF, 0xE4, 
   0xD0, 0xD2, 0xE1, 0xCF, 0xD1, 0xAD, 0x9F, 0x9F, 0x77, 0x6B, 0x6B, 0xAE, 0xA5, 0xA4, 0xCB, 0xC2, 
   0xC0, 0xCF, 0xAF, 0xB8, 0xD1, 0xAE, 0xB7, 0xC4, 0xA0, 0xA6, 0xD7, 0xB5, 0xB9, 0xD6, 0xBD, 0xBD, 
   0xED, 0xDC, 0xD9, 0xED, 0xE4, 0xDF, 0xE6, 0xDF, 0xDA, 0xA9, 0x9E, 0x9A, 0x9D, 0x8D, 0x8E, 0xCA, 
   0xB9, 0xBD, 0xD5, 0xC4, 0xCB, 0xA3, 0x94, 0x9B, 0xAD, 0xA0, 0xA2, 0xD6, 0xC4, 0xC3, 0xB5, 0x99, 
   0x96, 0xC1, 0xA3, 0x9D, 0xC9, 0xB0, 0xAD, 0xC1, 0xB2, 0xB0, 0xCA, 0xC2, 0xC0, 0x6E, 0x65, 0x65, 
   0x53, 0x56, 0x56, 0x4C, 0x60, 0x60, 0x4D, 0x68, 0x69, 0x45, 0x60, 0x65, 0x3B, 0x53, 0x5A, 0x5C, 
   0x6D, 0x78, 0x6D, 0x7F, 0x8B, 0x5F, 0x78, 0x83, 0x70, 0x8B, 0x98, 0x62, 0x7D, 0x8B, 0x68, 0x7D, 
   0x8D, 0x5E, 0x70, 0x80, 0x6C, 0x7F, 0x90, 0x5B, 0x70, 0x80, 0x54, 0x67, 0x73, 0x73, 0x7E, 0x84, 
   0x54, 0x4E, 0x4C, 0x54, 0x43, 0x3C, 0x70, 0x58, 0x56, 0x65, 0x4A, 0x4E, 0x76, 0x5F, 0x5F, 0x75, 
   0x62, 0x5F, 0x5B, 0x4D, 0x4A, 0x43, 0x39, 0x3A, 0x4D, 0x45, 0x48, 0x6D, 0x6A, 0x6D, 0x83, 0x83, 
   0x85, 0x85, 0x86, 0x86, 0x62, 0x65, 0x63, 0x70, 0x74, 0x71, 0x4E, 0x54, 0x4F, 0x52, 0x48, 0x43, 
   0x64, 0x49, 0x45, 0x67, 0x50, 0x49, 0x61, 0x4E, 0x43, 0x61, 0x52, 0x43, 0x60, 0x53, 0x42, 0x63, 
   0x58, 0x46, 0x4F, 0x44, 0x36, 0x36, 0x2A, 0x1C, 0x3A, 0x2B, 0x1E, 0x56, 0x42, 0x36, 0x5F, 0x45, 
   0x3A, 0x64, 0x48, 0x3D, 0x66, 0x4A, 0x3E, 0x64, 0x49, 0x3B, 0x64, 0x49, 0x3B, 0x66, 0x4B, 0x3D, 
   0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 
   0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x67, 0x4C, 0x3E, 0x68, 0x4D, 0x3F, 0x69, 0x4E, 0x40, 0x69, 0x4E, 
   0x40, 0x69, 0x4E, 0x40, 0x68, 0x4D, 0x3F, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 
   0x67, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x65, 0x4A, 0x3C, 0x65, 
   0x4A, 0x3C, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 
   0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x65, 0x4A, 0x3C, 0x65, 0x4A, 0x3C, 0x65, 0x4A, 0x3C, 
   0x65, 0x4A, 0x3C, 0x64, 0x49, 0x3B, 0x64, 0x49, 0x3B, 0x64, 0x49, 0x3B, 0x64, 0x49, 0x3B, 0x64, 
   0x49, 0x3B, 0x65, 0x4A, 0x3C, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 
   0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x65, 0x4A, 0x3C, 0x65, 0x4A, 0x3C, 
   0x65, 0x4A, 0x3C, 0x65, 0x4A, 0x3C, 0xF0, 0xDB, 0xDA, 0xF0, 0xDB, 0xDA, 0xED, 0xD8, 0xD7, 0xEC, 
   0xD7, 0xD6, 0xEF, 0xDA, 0xD9, 0xEF, 0xDB, 0xDA, 0xF1, 0xDB, 0xDA, 0xF2, 0xD9, 0xD7, 0xEF, 0xD6, 
   0xD4, 0xEF, 0xD6, 0xD4, 0xF4, 0xDB, 0xD9, 0xF3, 0xDB, 0xD9, 0xF2, 0xD9, 0xD7, 0xF3, 0xDA, 0xD8, 
   0xF3, 0xDA, 0xD8, 0xF3, 0xDA, 0xD8, 0xF3, 0xDA, 0xD8, 0xF4, 0xDB, 0xD9, 0xF3, 0xD9, 0xD7, 0xF4, 
   0xDD, 0xDB, 0xF1, 0xDE, 0xDB, 0xF1, 0xDE, 0xDB, 0xF1, 0xDE, 0xDB, 0xEF, 0xDC, 0xD9, 0xEE, 0xDB, 
   0xD8, 0xF2, 0xDF, 0xDC, 0xF5, 0xDF, 0xDD, 0xF5, 0xDD, 0xDB, 0xF2, 0xDD, 0xDB, 0xF2, 0xDE, 0xDB, 
   0xF1, 0xDE, 0xDB, 0xED, 0xDC, 0xDA, 0xEE, 0xDC, 0xD9, 0xF5, 0xDB, 0xD8, 0xF4, 0xDE, 0xDB, 0xED, 
   0xE0, 0xDF, 0xF6, 0xF1, 0xF2, 0xE0, 0xDE, 0xE0, 0xAF, 0xAC, 0xB0, 0x7E, 0x85, 0x88, 0x67, 0x76, 
   0x79, 0x5B, 0x6A, 0x6D, 0x51, 0x60, 0x63, 0x3F, 0x4E, 0x51, 0x4C, 0x58, 0x5C, 0x58, 0x65, 0x69, 
   0x44, 0x5A, 0x60, 0x60, 0x6E, 0x75, 0x57, 0x5B, 0x63, 0x84, 0x84, 0x8A, 0xE9, 0xEE, 0xF2, 0x96, 
   0xA4, 0xA6, 0x61, 0x6A, 0x6F, 0xDB, 0xDD, 0xE2, 0xF6, 0xF9, 0xFC, 0xD2, 0xD3, 0xD4, 0xC6, 0xC6, 
   0xC5, 0xA5, 0xA2, 0x9F, 0xA7, 0xA4, 0xA0, 0xBC, 0xB5, 0xB6, 0xC3, 0xBB, 0xBC, 0xC8, 0xBF, 0xC2, 
   0xB0, 0xA6, 0xA8, 0xA8, 0x9C, 0x9E, 0xBB, 0xAE, 0xB0, 0xBE, 0xAC, 0xB3, 0xC0, 0xA8, 0xB3, 0xCB, 
   0xB2, 0xBC, 0xED, 0xD4, 0xD9, 0xFF, 0xEB, 0xEE, 0xFF, 0xF2, 0xF2, 0xF5, 0xE6, 0xE4, 0xEB, 0xE0, 
   0xDF, 0xED, 0xE2, 0xE2, 0xCF, 0xC6, 0xC6, 0xAF, 0xA4, 0xA4, 0x87, 0x7B, 0x7B, 0x6E, 0x62, 0x61, 
   0x72, 0x67, 0x6C, 0x45, 0x3A, 0x44, 0x35, 0x2A, 0x34, 0x49, 0x3E, 0x48, 0x52, 0x47, 0x51, 0x57, 
   0x4C, 0x56, 0x81, 0x76, 0x80, 0x7F, 0x7C, 0x7E, 0x62, 0x62, 0x63, 0x6F, 0x73, 0x74, 0x5C, 0x65, 
   0x67, 0x6F, 0x7D, 0x7F, 0x68, 0x7A, 0x7B, 0x52, 0x61, 0x64, 0x71, 0x7B, 0x7F, 0xB0, 0xB5, 0xB8, 
   0xEF, 0xED, 0xEE, 0xF1, 0xE6, 0xE7, 0xF9, 0xE7, 0xE8, 0xF8, 0xE5, 0xE3, 0xF0, 0xE8, 0xE1, 0xF1, 
   0xE8, 0xE1, 0xF2, 0xE8, 0xE1, 0xF5, 0xEA, 0xE4, 0xF3, 0xE5, 0xDF, 0xF7, 0xE8, 0xE2, 0xFC, 0xEF, 
   0xEB, 0xF7, 0xED, 0xEB, 0xFA, 0xEE, 0xEC, 0xDE, 0xD3, 0xD1, 0xE9, 0xDD, 0xDB, 0xFE, 0xF3, 0xF1, 
   0xFF, 0xF4, 0xF2, 0xFB, 0xF1, 0xF1, 0xFC, 0xF2, 0xF2, 0xFA, 0xF0, 0xF0, 0xFF, 0xF9, 0xF9, 0xAA, 
   0xA0, 0xA0, 0x48, 0x3D, 0x3D, 0x47, 0x42, 0x44, 0x37, 0x37, 0x3B, 0x34, 0x34, 0x38, 0x2F, 0x30, 
   0x34, 0x30, 0x32, 0x36, 0x3D, 0x41, 0x44, 0x41, 0x46, 0x49, 0x31, 0x31, 0x31, 0x35, 0x35, 0x35, 
   0x46, 0x45, 0x45, 0x56, 0x52, 0x52, 0x7A, 0x6D, 0x6F, 0x89, 0x76, 0x7A, 0xBD, 0xA5, 0xA6, 0xD2, 
   0xB8, 0xB6, 0xD8, 0xBB, 0xBB, 0xDD, 0xC1, 0xC0, 0xDE, 0xC3, 0xC4, 0xDB, 0xBD, 0xC1, 0xCD, 0xAE, 
   0xB2, 0xBC, 0xA2, 0x9F, 0xBB, 0xA2, 0x9F, 0xBB, 0xA0, 0x9C, 0xDD, 0xC0, 0xBD, 0xE2, 0xC4, 0xC0, 
   0xFB, 0xDD, 0xDA, 0xF3, 0xD6, 0xD4, 0xE9, 0xCE, 0xCF, 0xD3, 0xBC, 0xBB, 0xAE, 0x9A, 0x98, 0xB1, 
   0x9B, 0x9B, 0xC6, 0xAB, 0xAB, 0xD3, 0xB4, 0xB5, 0xD2, 0xBA, 0xBA, 0xD6, 0xBE, 0xBE, 0xBC, 0x9D, 
   0x9D, 0xD6, 0xB7, 0xB5, 0xDC, 0xC0, 0xBC, 0xFE, 0xE8, 0xE3, 0xE6, 0xDD, 0xD5, 0x6E, 0x6E, 0x66, 
   0x57, 0x5A, 0x55, 0x5F, 0x66, 0x65, 0x5C, 0x67, 0x6B, 0x41, 0x51, 0x59, 0x45, 0x56, 0x61, 0x63, 
   0x80, 0x8D, 0x4A, 0x6D, 0x7A, 0x69, 0x89, 0x95, 0x79, 0x96, 0xA1, 0x5E, 0x7A, 0x85, 0x4E, 0x68, 
   0x73, 0x49, 0x62, 0x73, 0x61, 0x74, 0x8D, 0x65, 0x71, 0x82, 0x80, 0x81, 0x85, 0x79, 0x71, 0x6A, 
   0x5F, 0x51, 0x43, 0x69, 0x58, 0x46, 0x5F, 0x4D, 0x3F, 0x60, 0x4F, 0x44, 0x5C, 0x4A, 0x42, 0x5C, 
   0x4C, 0x45, 0x67, 0x56, 0x52, 0x6A, 0x5B, 0x58, 0x89, 0x7A, 0x78, 0xAC, 0x9F, 0x9D, 0x9E, 0x93, 
   0x91, 0x70, 0x67, 0x64, 0x67, 0x5D, 0x57, 0x59, 0x4C, 0x41, 0x5D, 0x4E, 0x3C, 0x67, 0x50, 0x3D, 
   0x6F, 0x52, 0x41, 0x6A, 0x50, 0x40, 0x69, 0x51, 0x43, 0x66, 0x4F, 0x44, 0x63, 0x4F, 0x44, 0x6B, 
   0x56, 0x4D, 0x6B, 0x4C, 0x43, 0x50, 0x32, 0x29, 0x53, 0x34, 0x2B, 0x63, 0x44, 0x3B, 0x65, 0x46, 
   0x3D, 0x66, 0x48, 0x3F, 0x67, 0x48, 0x3D, 0x67, 0x49, 0x3C, 0x67, 0x49, 0x3C, 0x68, 0x4A, 0x3D, 
   0x68, 0x4A, 0x3D, 0x68, 0x4A, 0x3D, 0x68, 0x4A, 0x3D, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x67, 
   0x4C, 0x3E, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x67, 0x4C, 0x3F, 0x6A, 0x4E, 0x40, 0x6C, 0x4F, 
   0x40, 0x6B, 0x4E, 0x3F, 0x68, 0x4B, 0x3C, 0x68, 0x4B, 0x3C, 0x69, 0x4C, 0x3D, 0x68, 0x4B, 0x3C, 
   0x69, 0x4B, 0x3E, 0x68, 0x4A, 0x3D, 0x69, 0x4B, 0x3E, 0x68, 0x4A, 0x3D, 0x68, 0x4A, 0x3D, 0x68, 
   0x4A, 0x3D, 0x68, 0x4B, 0x3D, 0x68, 0x4B, 0x3C, 0x68, 0x4B, 0x3C, 0x68, 0x4B, 0x3C, 0x68, 0x4B, 
   0x3C, 0x68, 0x4B, 0x3C, 0x68, 0x4B, 0x3C, 0x67, 0x4A, 0x3B, 0x67, 0x4A, 0x3B, 0x67, 0x4A, 0x3B, 
   0x67, 0x4A, 0x3B, 0x66, 0x49, 0x3A, 0x66, 0x49, 0x3A, 0x66, 0x4A, 0x3B, 0x65, 0x4B, 0x3B, 0x65, 
   0x4B, 0x3B, 0x66, 0x4C, 0x3C, 0x66, 0x4C, 0x3C, 0x66, 0x4C, 0x3C, 0x66, 0x4C, 0x3C, 0x65, 0x4A, 
   0x3C, 0x65, 0x4A, 0x3C, 0x65, 0x4A, 0x3C, 0x66, 0x4B, 0x3D, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 
   0x67, 0x4C, 0x3E, 0x66, 0x4B, 0x3D, 0xED, 0xD8, 0xD7, 0xEE, 0xD9, 0xD8, 0xED, 0xD8, 0xD7, 0xED, 
   0xD8, 0xD7, 0xEF, 0xDA, 0xD9, 0xF0, 0xDB, 0xDA, 0xF1, 0xDB, 0xD9, 0xF2, 0xD9, 0xD7, 0xEF, 0xD6, 
   0xD4, 0xEF, 0xD6, 0xD4, 0xF4, 0xDB, 0xD9, 0xF4, 0xDB, 0xD9, 0xF3, 0xDA, 0xD8, 0xF4, 0xDB, 0xD9, 
   0xF4, 0xDA, 0xD8, 0xF4, 0xDB, 0xD9, 0xF4, 0xDB, 0xD9, 0xF6, 0xDD, 0xDB, 0xF7, 0xDE, 0xDC, 0xF5, 
   0xDD, 0xDB, 0xF1, 0xDE, 0xDB, 0xF1, 0xDE, 0xDB, 0xF1, 0xDE, 0xDB, 0xF3, 0xE0, 0xDD, 0xF2, 0xDF, 
   0xDC, 0xF5, 0xE2, 0xDF, 0xF5, 0xDF, 0xDD, 0xF3, 0xDC, 0xDA, 0xF1, 0xDC, 0xDA, 0xF5, 0xE1, 0xDE, 
   0xF0, 0xDE, 0xDB, 0xEE, 0xDD, 0xDA, 0xED, 0xDC, 0xD9, 0xEF, 0xDF, 0xDC, 0xED, 0xE2, 0xE0, 0xF3, 
   0xF0, 0xF0, 0xB5, 0xB8, 0xB9, 0x65, 0x6C, 0x6F, 0x49, 0x52, 0x56, 0x50, 0x5D, 0x61, 0x50, 0x61, 
   0x64, 0x63, 0x72, 0x75, 0x46, 0x55, 0x58, 0x33, 0x41, 0x44, 0x43, 0x4F, 0x53, 0x4D, 0x5A, 0x5E, 
   0x4A, 0x5F, 0x65, 0x4D, 0x5A, 0x62, 0x5C, 0x60, 0x68, 0xB4, 0xB4, 0xB9, 0xEC, 0xF1, 0xF5, 0x64, 
   0x72, 0x74, 0x4E, 0x59, 0x5B, 0xB5, 0xB8, 0xBC, 0xB5, 0xB8, 0xBC, 0xC1, 0xC1, 0xC3, 0xD4, 0xD2, 
   0xD3, 0x80, 0x7E, 0x7D, 0xD6, 0xD4, 0xD3, 0xF6, 0xEE, 0xEF, 0xF5, 0xED, 0xEF, 0xF4, 0xEC, 0xED, 
   0xF5, 0xED, 0xEE, 0xFB, 0xF5, 0xF6, 0xFA, 0xF2, 0xF2, 0xD1, 0xC3, 0xC9, 0xD8, 0xC3, 0xCC, 0xFE, 
   0xE6, 0xED, 0xF5, 0xDD, 0xE0, 0xF2, 0xDB, 0xDD, 0xF2, 0xDF, 0xDD, 0xF5, 0xE6, 0xE3, 0xF4, 0xE6, 
   0xE7, 0xF6, 0xE9, 0xE9, 0xF7, 0xEA, 0xEB, 0xFD, 0xF0, 0xF1, 0xFC, 0xEE, 0xEF, 0xEA, 0xDD, 0xDD, 
   0xEB, 0xDF, 0xE2, 0xC2, 0xB9, 0xC0, 0x9A, 0x90, 0x97, 0xA0, 0x97, 0x9E, 0xB2, 0xA8, 0xAF, 0xD8, 
   0xCE, 0xD4, 0xF1, 0xE7, 0xED, 0xEA, 0xE4, 0xE6, 0xE1, 0xE0, 0xE1, 0xEE, 0xF2, 0xF3, 0xA3, 0xAB, 
   0xAD, 0x4E, 0x5B, 0x5D, 0x44, 0x56, 0x56, 0x55, 0x65, 0x69, 0x67, 0x73, 0x78, 0x7B, 0x83, 0x87, 
   0xCE, 0xCE, 0xCF, 0xEB, 0xE3, 0xE3, 0xF2, 0xE4, 0xE4, 0xF9, 0xE9, 0xE7, 0xF4, 0xEC, 0xE5, 0xF4, 
   0xEB, 0xE4, 0xF2, 0xE8, 0xE1, 0xEF, 0xE4, 0xDD, 0xF9, 0xEB, 0xE5, 0xF7, 0xE9, 0xE3, 0xEF, 0xE2, 
   0xDE, 0xF6, 0xE9, 0xE7, 0xEF, 0xE2, 0xE0, 0xC5, 0xB9, 0xB7, 0xF6, 0xE9, 0xE7, 0xF7, 0xEA, 0xE8, 
   0xF8, 0xEB, 0xE9, 0xF1, 0xE7, 0xE7, 0xF0, 0xE6, 0xE6, 0xEF, 0xE5, 0xE5, 0xF2, 0xE8, 0xE8, 0xF1, 
   0xE8, 0xE8, 0x66, 0x5D, 0x5C, 0x41, 0x3B, 0x3C, 0x3A, 0x38, 0x3A, 0x31, 0x30, 0x32, 0x30, 0x30, 
   0x32, 0x2F, 0x30, 0x32, 0x2E, 0x31, 0x33, 0x31, 0x35, 0x36, 0x36, 0x36, 0x36, 0x34, 0x35, 0x35, 
   0x33, 0x35, 0x35, 0x39, 0x38, 0x38, 0x4D, 0x44, 0x46, 0x64, 0x55, 0x58, 0x7D, 0x69, 0x69, 0x87, 
   0x71, 0x6F, 0x9C, 0x84, 0x83, 0xB0, 0x96, 0x95, 0xA6, 0x88, 0x88, 0xA0, 0x80, 0x82, 0x9D, 0x7E, 
   0x7E, 0xAD, 0x93, 0x90, 0xCD, 0xB4, 0xB0, 0xBF, 0xA4, 0xA0, 0xC6, 0xAA, 0xA6, 0xE4, 0xC5, 0xC2, 
   0xFD, 0xDF, 0xDC, 0xE6, 0xC7, 0xC5, 0xC4, 0xA7, 0xA7, 0xBA, 0x9F, 0x9E, 0xCA, 0xB4, 0xB2, 0xBB, 
   0xA3, 0xA2, 0xC0, 0xA3, 0xA3, 0xC8, 0xA8, 0xA8, 0xBD, 0xA1, 0x9E, 0x94, 0x78, 0x75, 0xA7, 0x87, 
   0x85, 0xDE, 0xBE, 0xBB, 0xEF, 0xD3, 0xCF, 0xFD, 0xE6, 0xE1, 0xBE, 0xB0, 0xAA, 0x63, 0x61, 0x5B, 
   0x5D, 0x5D, 0x5A, 0x69, 0x6E, 0x6F, 0x59, 0x63, 0x69, 0x46, 0x56, 0x60, 0x6D, 0x7F, 0x8B, 0x63, 
   0x7B, 0x8B, 0x65, 0x80, 0x90, 0x79, 0x94, 0xA2, 0x76, 0x8E, 0x9D, 0x5B, 0x72, 0x7F, 0x53, 0x6A, 
   0x76, 0x5F, 0x75, 0x85, 0x6C, 0x7E, 0x92, 0x67, 0x72, 0x7F, 0x67, 0x66, 0x68, 0x59, 0x4F, 0x47, 
   0x63, 0x50, 0x42, 0x68, 0x52, 0x40, 0x69, 0x55, 0x46, 0x61, 0x51, 0x44, 0x63, 0x50, 0x46, 0x66, 
   0x53, 0x4D, 0x68, 0x57, 0x51, 0x54, 0x42, 0x3D, 0x53, 0x41, 0x3D, 0x59, 0x4A, 0x44, 0x59, 0x4B, 
   0x46, 0x50, 0x43, 0x40, 0x4D, 0x41, 0x39, 0x5B, 0x4A, 0x3F, 0x62, 0x50, 0x3D, 0x6B, 0x52, 0x3F, 
   0x70, 0x53, 0x42, 0x6E, 0x53, 0x44, 0x63, 0x4B, 0x3C, 0x64, 0x4D, 0x40, 0x64, 0x4E, 0x44, 0x60, 
   0x4B, 0x40, 0x64, 0x45, 0x3B, 0x67, 0x48, 0x3E, 0x6C, 0x4E, 0x43, 0x6C, 0x4E, 0x43, 0x6A, 0x4C, 
   0x41, 0x66, 0x48, 0x3D, 0x65, 0x48, 0x3C, 0x67, 0x49, 0x3C, 0x67, 0x49, 0x3C, 0x68, 0x4A, 0x3D, 
   0x68, 0x4A, 0x3D, 0x68, 0x4A, 0x3D, 0x68, 0x4A, 0x3D, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x67, 
   0x4C, 0x3E, 0x68, 0x4D, 0x3F, 0x69, 0x4E, 0x40, 0x6A, 0x4F, 0x41, 0x6B, 0x4F, 0x41, 0x6C, 0x4F, 
   0x40, 0x6B, 0x4E, 0x3F, 0x69, 0x4C, 0x3D, 0x68, 0x4B, 0x3C, 0x69, 0x4C, 0x3D, 0x69, 0x4C, 0x3D, 
   0x69, 0x4B, 0x3E, 0x6A, 0x4C, 0x3F, 0x68, 0x49, 0x3D, 0x68, 0x4A, 0x3D, 0x68, 0x4A, 0x3D, 0x68, 
   0x4A, 0x3D, 0x68, 0x4B, 0x3D, 0x68, 0x4B, 0x3C, 0x68, 0x4B, 0x3C, 0x68, 0x4B, 0x3C, 0x68, 0x4B, 
   0x3C, 0x68, 0x4B, 0x3C, 0x68, 0x4B, 0x3C, 0x67, 0x4A, 0x3B, 0x67, 0x4A, 0x3B, 0x67, 0x4A, 0x3B, 
   0x67, 0x4A, 0x3B, 0x66, 0x49, 0x3A, 0x66, 0x49, 0x3A, 0x66, 0x4A, 0x3B, 0x65, 0x4B, 0x3B, 0x65, 
   0x4B, 0x3B, 0x66, 0x4C, 0x3C, 0x66, 0x4C, 0x3C, 0x66, 0x4C, 0x3C, 0x66, 0x4C, 0x3C, 0x65, 0x4A, 
   0x3C, 0x65, 0x4A, 0x3C, 0x65, 0x4A, 0x3C, 0x66, 0x4B, 0x3D, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 
   0x67, 0x4C, 0x3E, 0x66, 0x4B, 0x3D, 0xED, 0xD8, 0xD7, 0xF0, 0xDB, 0xDA, 0xF1, 0xDC, 0xDB, 0xF0, 
   0xDB, 0xDA, 0xF0, 0xDB, 0xDA, 0xF0, 0xDC, 0xDB, 0xF2, 0xDC, 0xDB, 0xF2, 0xDA, 0xD8, 0xEF, 0xD7, 
   0xD5, 0xEF, 0xD7, 0xD5, 0xF3, 0xDB, 0xD9, 0xF3, 0xDB, 0xD9, 0xF3, 0xDB, 0xD9, 0xF2, 0xDA, 0xD8, 
   0xF0, 0xD8, 0xD6, 0xF1, 0xDA, 0xD8, 0xF3, 0xDC, 0xDA, 0xF6, 0xDE, 0xDC, 0xF8, 0xE1, 0xDF, 0xF5, 
   0xDF, 0xDD, 0xF2, 0xDF, 0xDC, 0xF2, 0xDF, 0xDC, 0xF2, 0xDF, 0xDC, 0xF4, 0xE1, 0xDE, 0xF2, 0xDF, 
   0xDC, 0xF4, 0xE1, 0xDE, 0xF4, 0xE0, 0xDE, 0xF5, 0xDF, 0xDD, 0xF5, 0xDF, 0xDE, 0xF5, 0xE2, 0xDF, 
   0xF3, 0xE1, 0xDE, 0xEF, 0xDF, 0xDC, 0xF2, 0xE3, 0xE0, 0xE5, 0xE3, 0xE0, 0xF4, 0xF7, 0xF5, 0x9F, 
   0xA6, 0xA6, 0x55, 0x61, 0x63, 0x56, 0x68, 0x6C, 0x5C, 0x71, 0x77, 0x5B, 0x6D, 0x72, 0x47, 0x57, 
   0x5C, 0x64, 0x73, 0x78, 0x3F, 0x4E, 0x53, 0x41, 0x4E, 0x53, 0x44, 0x50, 0x55, 0x4A, 0x56, 0x5C, 
   0x4A, 0x5A, 0x62, 0x45, 0x50, 0x58, 0x6E, 0x72, 0x79, 0xD3, 0xD2, 0xD8, 0xE5, 0xEB, 0xEE, 0x58, 
   0x65, 0x68, 0x4E, 0x58, 0x59, 0x61, 0x66, 0x66, 0x84, 0x88, 0x89, 0x91, 0x94, 0x95, 0x4E, 0x4E, 
   0x51, 0x63, 0x62, 0x65, 0xCF, 0xCC, 0xD0, 0xF2, 0xE8, 0xE9, 0xED, 0xE3, 0xE5, 0xF2, 0xEA, 0xEB, 
   0xF8, 0xF4, 0xF5, 0xB0, 0xAE, 0xAE, 0x72, 0x70, 0x70, 0x90, 0x88, 0x8B, 0xAA, 0x9A, 0x9F, 0xDD, 
   0xC9, 0xCD, 0xF7, 0xE0, 0xE1, 0xFA, 0xE5, 0xE3, 0xF5, 0xE3, 0xDE, 0xF1, 0xE4, 0xDD, 0xF1, 0xE3, 
   0xE3, 0xF1, 0xE3, 0xE4, 0xF2, 0xE4, 0xE5, 0xF4, 0xE6, 0xE7, 0xF3, 0xE5, 0xE6, 0xF7, 0xEA, 0xEB, 
   0xF3, 0xE7, 0xE9, 0xFA, 0xF0, 0xF4, 0xFE, 0xF3, 0xF7, 0xF8, 0xEF, 0xF2, 0xFC, 0xF3, 0xF6, 0xF4, 
   0xEA, 0xED, 0xF4, 0xEA, 0xED, 0xF0, 0xEB, 0xEB, 0xF1, 0xEE, 0xEF, 0xEA, 0xEC, 0xED, 0x73, 0x7B, 
   0x7C, 0x48, 0x55, 0x57, 0x4C, 0x5C, 0x5E, 0x59, 0x6A, 0x6F, 0x58, 0x68, 0x6E, 0x6C, 0x76, 0x7A, 
   0x98, 0x9D, 0x9F, 0xEE, 0xEA, 0xEA, 0xE5, 0xDC, 0xDC, 0xEB, 0xDF, 0xDF, 0xE9, 0xE0, 0xDC, 0xF1, 
   0xE7, 0xE3, 0xF3, 0xE8, 0xE3, 0xF4, 0xE8, 0xE5, 0xF5, 0xE7, 0xE3, 0xF5, 0xE6, 0xE2, 0xF6, 0xE9, 
   0xE5, 0xF2, 0xE6, 0xE4, 0xF2, 0xE5, 0xE3, 0xEB, 0xDE, 0xDC, 0xF2, 0xE5, 0xE3, 0xF6, 0xE8, 0xE6, 
   0xF6, 0xE9, 0xE8, 0xF0, 0xE4, 0xE4, 0xEF, 0xE4, 0xE4, 0xF1, 0xE6, 0xE6, 0xF1, 0xE6, 0xE6, 0xFC, 
   0xF3, 0xF3, 0xC7, 0xBD, 0xBC, 0x47, 0x3E, 0x3F, 0x3F, 0x3B, 0x3D, 0x41, 0x3D, 0x3F, 0x33, 0x31, 
   0x33, 0x2E, 0x2E, 0x30, 0x2C, 0x2E, 0x2E, 0x32, 0x36, 0x36, 0x38, 0x39, 0x39, 0x3B, 0x3F, 0x3E, 
   0x43, 0x48, 0x47, 0x38, 0x3B, 0x3A, 0x35, 0x30, 0x31, 0x3A, 0x32, 0x33, 0x63, 0x56, 0x55, 0x84, 
   0x78, 0x71, 0x87, 0x77, 0x72, 0x74, 0x5F, 0x5B, 0x7A, 0x5E, 0x5B, 0x7F, 0x60, 0x5E, 0x8B, 0x6B, 
   0x69, 0xC2, 0xAA, 0xA4, 0xA4, 0x8C, 0x86, 0x9E, 0x84, 0x7E, 0xC3, 0xA7, 0xA3, 0xF8, 0xD9, 0xD5, 
   0xEF, 0xD1, 0xCC, 0xCF, 0xAF, 0xAC, 0xCA, 0xAA, 0xA8, 0xDC, 0xBF, 0xBD, 0xC8, 0xAF, 0xAC, 0x9E, 
   0x84, 0x81, 0x96, 0x79, 0x77, 0x9B, 0x7A, 0x78, 0x9F, 0x80, 0x7A, 0xB1, 0x91, 0x89, 0xBE, 0x9D, 
   0x98, 0xDC, 0xBB, 0xB8, 0xED, 0xD2, 0xCF, 0xF3, 0xDE, 0xDC, 0x9D, 0x8E, 0x8C, 0x52, 0x4C, 0x4B, 
   0x4C, 0x48, 0x4A, 0x41, 0x45, 0x49, 0x3F, 0x48, 0x50, 0x53, 0x64, 0x70, 0x7E, 0x91, 0x9F, 0x6D, 
   0x82, 0x93, 0x6B, 0x7E, 0x8F, 0x79, 0x8D, 0x9C, 0x6D, 0x81, 0x90, 0x66, 0x79, 0x87, 0x5B, 0x6E, 
   0x7B, 0x80, 0x93, 0xA0, 0x7E, 0x8C, 0x9B, 0x59, 0x5F, 0x67, 0x54, 0x4D, 0x4A, 0x62, 0x52, 0x48, 
   0x6C, 0x53, 0x44, 0x73, 0x56, 0x45, 0x68, 0x51, 0x40, 0x66, 0x54, 0x46, 0x6A, 0x58, 0x4B, 0x6A, 
   0x57, 0x4D, 0x65, 0x52, 0x48, 0x63, 0x4E, 0x47, 0x65, 0x51, 0x4A, 0x6B, 0x57, 0x50, 0x58, 0x46, 
   0x3F, 0x4B, 0x3A, 0x34, 0x3E, 0x2D, 0x25, 0x5B, 0x46, 0x3A, 0x6A, 0x53, 0x3F, 0x6A, 0x51, 0x3D, 
   0x67, 0x4C, 0x3C, 0x67, 0x4D, 0x3E, 0x66, 0x4E, 0x3F, 0x68, 0x51, 0x44, 0x63, 0x4C, 0x41, 0x5F, 
   0x49, 0x3E, 0x68, 0x4B, 0x40, 0x69, 0x4A, 0x40, 0x66, 0x48, 0x3D, 0x66, 0x48, 0x3D, 0x67, 0x49, 
   0x3E, 0x68, 0x4A, 0x3F, 0x68, 0x4A, 0x3E, 0x68, 0x4A, 0x3D, 0x68, 0x4A, 0x3D, 0x69, 0x4B, 0x3E, 
   0x69, 0x4B, 0x3E, 0x69, 0x4B, 0x3E, 0x69, 0x4B, 0x3E, 0x68, 0x4D, 0x3F, 0x68, 0x4D, 0x3F, 0x68, 
   0x4D, 0x3F, 0x69, 0x4E, 0x40, 0x6A, 0x4F, 0x41, 0x6B, 0x50, 0x42, 0x6C, 0x50, 0x41, 0x6C, 0x4F, 
   0x3F, 0x6B, 0x4E, 0x3F, 0x69, 0x4C, 0x3D, 0x69, 0x4C, 0x3D, 0x6A, 0x4D, 0x3E, 0x69, 0x4C, 0x3D, 
   0x6B, 0x4D, 0x40, 0x66, 0x48, 0x3B, 0x5E, 0x40, 0x33, 0x68, 0x4A, 0x3D, 0x68, 0x4A, 0x3D, 0x69, 
   0x4B, 0x3E, 0x69, 0x4B, 0x3D, 0x68, 0x4B, 0x3C, 0x68, 0x4B, 0x3C, 0x68, 0x4B, 0x3C, 0x68, 0x4B, 
   0x3C, 0x68, 0x4B, 0x3C, 0x68, 0x4B, 0x3C, 0x68, 0x4B, 0x3C, 0x68, 0x4B, 0x3C, 0x68, 0x4B, 0x3C, 
   0x68, 0x4B, 0x3C, 0x67, 0x4A, 0x3B, 0x67, 0x4A, 0x3B, 0x67, 0x4B, 0x3C, 0x66, 0x4C, 0x3C, 0x66, 
   0x4C, 0x3C, 0x66, 0x4C, 0x3C, 0x66, 0x4C, 0x3C, 0x66, 0x4C, 0x3C, 0x66, 0x4C, 0x3C, 0x66, 0x4B, 
   0x3D, 0x66, 0x4B, 0x3D, 0x66, 0x4B, 0x3D, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 
   0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0xEE, 0xD9, 0xD8, 0xF1, 0xDC, 0xDB, 0xF2, 0xDD, 0xDC, 0xF0, 
   0xDB, 0xDA, 0xF0, 0xDB, 0xDA, 0xF1, 0xDC, 0xDB, 0xF2, 0xDD, 0xDB, 0xF1, 0xDA, 0xD8, 0xEE, 0xD7, 
   0xD5, 0xEF, 0xD8, 0xD6, 0xF2, 0xDB, 0xD9, 0xF3, 0xDC, 0xDA, 0xF3, 0xDC, 0xDA, 0xF1, 0xDA, 0xD8, 
   0xF0, 0xD9, 0xD7, 0xF4, 0xDD, 0xDB, 0xF5, 0xDE, 0xDC, 0xF3, 0xDC, 0xDA, 0xF6, 0xDF, 0xDD, 0xF5, 
   0xDF, 0xDD, 0xF3, 0xE0, 0xDD, 0xF3, 0xE0, 0xDD, 0xF3, 0xE0, 0xDD, 0xF4, 0xE1, 0xDE, 0xF1, 0xDE, 
   0xDB, 0xF2, 0xDF, 0xDC, 0xF4, 0xE0, 0xDD, 0xF5, 0xE0, 0xDE, 0xF6, 0xE2, 0xE0, 0xF5, 0xE2, 0xDF, 
   0xF3, 0xE2, 0xDF, 0xF2, 0xE2, 0xDF, 0xF5, 0xE6, 0xE3, 0xED, 0xF2, 0xF1, 0xB5, 0xBD, 0xBC, 0x5B, 
   0x64, 0x65, 0x56, 0x64, 0x69, 0x58, 0x6C, 0x72, 0x5E, 0x77, 0x7E, 0x5D, 0x73, 0x79, 0x52, 0x64, 
   0x69, 0x5A, 0x6A, 0x70, 0x38, 0x45, 0x4B, 0x41, 0x4D, 0x53, 0x4B, 0x56, 0x5C, 0x53, 0x5D, 0x64, 
   0x53, 0x60, 0x69, 0x50, 0x59, 0x61, 0x7A, 0x7E, 0x85, 0xCE, 0xCF, 0xD5, 0x75, 0x7B, 0x7F, 0x45, 
   0x52, 0x54, 0x57, 0x61, 0x60, 0xBB, 0xC1, 0xBE, 0x70, 0x75, 0x74, 0x99, 0x9C, 0xA0, 0x49, 0x4B, 
   0x51, 0x8F, 0x90, 0x96, 0xF8, 0xF6, 0xFC, 0xFB, 0xF1, 0xF4, 0xF8, 0xEF, 0xF1, 0xE4, 0xDF, 0xE1, 
   0x88, 0x87, 0x88, 0x50, 0x52, 0x52, 0x3A, 0x3F, 0x3F, 0x8E, 0x8E, 0x8E, 0xD4, 0xCB, 0xCD, 0xBA, 
   0xAC, 0xAE, 0xEF, 0xDE, 0xDB, 0xF8, 0xE6, 0xE1, 0xF7, 0xE7, 0xDF, 0xF3, 0xE7, 0xDE, 0xF3, 0xE5, 
   0xE3, 0xF4, 0xE6, 0xE5, 0xF4, 0xE5, 0xE5, 0xF1, 0xE3, 0xE2, 0xF3, 0xE5, 0xE4, 0xF3, 0xE5, 0xE4, 
   0xF0, 0xE3, 0xE2, 0xF1, 0xE5, 0xE5, 0xEF, 0xE3, 0xE3, 0xEF, 0xE4, 0xE4, 0xEF, 0xE3, 0xE3, 0xF0, 
   0xE4, 0xE4, 0xEF, 0xE4, 0xE4, 0xEC, 0xE3, 0xE2, 0xFA, 0xF6, 0xF6, 0xA5, 0xA5, 0xA5, 0x39, 0x3F, 
   0x40, 0x42, 0x4E, 0x50, 0x56, 0x66, 0x69, 0x67, 0x7A, 0x7F, 0x63, 0x75, 0x7D, 0x70, 0x7E, 0x83, 
   0x62, 0x6A, 0x6E, 0x8C, 0x8E, 0x90, 0xCC, 0xCA, 0xCA, 0xF0, 0xEB, 0xEB, 0xEA, 0xE1, 0xDD, 0xF0, 
   0xE6, 0xE2, 0xF6, 0xEB, 0xE7, 0xF8, 0xEC, 0xE8, 0xF5, 0xE6, 0xE3, 0xF5, 0xE6, 0xE2, 0xF7, 0xE8, 
   0xE6, 0xF2, 0xE5, 0xE3, 0xE7, 0xD9, 0xD7, 0xF6, 0xE8, 0xE6, 0xF9, 0xEB, 0xE9, 0xF1, 0xE3, 0xE1, 
   0xF3, 0xE5, 0xE3, 0xF4, 0xE8, 0xE7, 0xF4, 0xE8, 0xE8, 0xF1, 0xE5, 0xE5, 0xF0, 0xE4, 0xE4, 0xF3, 
   0xE7, 0xE7, 0xFB, 0xF0, 0xF0, 0xD8, 0xD1, 0xD1, 0x6C, 0x66, 0x67, 0x3F, 0x39, 0x3A, 0x34, 0x30, 
   0x32, 0x34, 0x30, 0x32, 0x34, 0x32, 0x33, 0x44, 0x44, 0x45, 0x40, 0x42, 0x42, 0x38, 0x3E, 0x3D, 
   0x39, 0x40, 0x3F, 0x38, 0x3E, 0x3D, 0x3D, 0x3E, 0x3E, 0x38, 0x34, 0x36, 0x3A, 0x37, 0x34, 0x5F, 
   0x5B, 0x53, 0x7A, 0x72, 0x6B, 0x7D, 0x6E, 0x68, 0x82, 0x6B, 0x65, 0x8B, 0x6E, 0x69, 0xBA, 0x9A, 
   0x96, 0xB3, 0x9A, 0x94, 0xA8, 0x90, 0x8A, 0xA9, 0x90, 0x8A, 0xE8, 0xCD, 0xC7, 0xF3, 0xD4, 0xD0, 
   0xE2, 0xC4, 0xBF, 0xD4, 0xB4, 0xB0, 0xDB, 0xBA, 0xB6, 0xC6, 0xA9, 0xA5, 0x8C, 0x74, 0x6E, 0x6E, 
   0x55, 0x50, 0x9A, 0x7F, 0x7A, 0xBF, 0xA1, 0x9C, 0xCD, 0xAD, 0xA3, 0xC4, 0xA2, 0x96, 0xCB, 0xAB, 
   0xA4, 0xD4, 0xB7, 0xB3, 0xEB, 0xD3, 0xD1, 0xF1, 0xDE, 0xDF, 0x7B, 0x6D, 0x6E, 0x39, 0x2F, 0x33, 
   0x54, 0x4E, 0x52, 0x54, 0x57, 0x5F, 0x50, 0x59, 0x63, 0x48, 0x5A, 0x66, 0x6F, 0x85, 0x93, 0x61, 
   0x76, 0x87, 0x75, 0x87, 0x9A, 0x78, 0x8B, 0x9B, 0x6F, 0x83, 0x92, 0x6E, 0x82, 0x8F, 0x71, 0x85, 
   0x90, 0x8A, 0x9C, 0xA6, 0x7D, 0x84, 0x8B, 0x4D, 0x4D, 0x4E, 0x5D, 0x51, 0x49, 0x6B, 0x54, 0x47, 
   0x70, 0x52, 0x43, 0x73, 0x52, 0x42, 0x70, 0x55, 0x46, 0x66, 0x53, 0x45, 0x69, 0x55, 0x46, 0x6A, 
   0x56, 0x48, 0x6F, 0x59, 0x4D, 0x6C, 0x55, 0x4B, 0x6C, 0x55, 0x4B, 0x78, 0x5E, 0x54, 0x57, 0x40, 
   0x37, 0x49, 0x33, 0x2B, 0x57, 0x42, 0x39, 0x66, 0x4E, 0x41, 0x6B, 0x51, 0x3D, 0x69, 0x4F, 0x3C, 
   0x67, 0x4E, 0x3F, 0x69, 0x4F, 0x41, 0x69, 0x4F, 0x41, 0x64, 0x4C, 0x3E, 0x62, 0x4C, 0x3E, 0x66, 
   0x4F, 0x43, 0x6A, 0x4D, 0x41, 0x67, 0x48, 0x3C, 0x66, 0x48, 0x3C, 0x68, 0x4A, 0x3E, 0x68, 0x4A, 
   0x3E, 0x68, 0x4A, 0x3E, 0x69, 0x4B, 0x3E, 0x69, 0x4B, 0x3E, 0x69, 0x4B, 0x3E, 0x6A, 0x4C, 0x3F, 
   0x6A, 0x4C, 0x3F, 0x6A, 0x4C, 0x3F, 0x6A, 0x4C, 0x3F, 0x69, 0x4E, 0x40, 0x69, 0x4E, 0x40, 0x69, 
   0x4E, 0x40, 0x68, 0x4D, 0x3F, 0x69, 0x4E, 0x40, 0x6A, 0x4F, 0x41, 0x6C, 0x50, 0x41, 0x6C, 0x4F, 
   0x40, 0x6A, 0x4D, 0x3E, 0x69, 0x4C, 0x3D, 0x6A, 0x4D, 0x3E, 0x6B, 0x4E, 0x3F, 0x6A, 0x4D, 0x3E, 
   0x68, 0x4B, 0x3D, 0x59, 0x3C, 0x2E, 0x5F, 0x41, 0x33, 0x66, 0x48, 0x3A, 0x67, 0x4A, 0x3C, 0x6A, 
   0x4D, 0x3F, 0x69, 0x4C, 0x3E, 0x68, 0x4B, 0x3C, 0x68, 0x4B, 0x3C, 0x68, 0x4B, 0x3C, 0x68, 0x4B, 
   0x3C, 0x68, 0x4B, 0x3C, 0x68, 0x4B, 0x3C, 0x69, 0x4C, 0x3D, 0x69, 0x4C, 0x3D, 0x69, 0x4C, 0x3D, 
   0x69, 0x4C, 0x3D, 0x68, 0x4B, 0x3C, 0x68, 0x4B, 0x3C, 0x68, 0x4C, 0x3D, 0x67, 0x4D, 0x3D, 0x67, 
   0x4D, 0x3D, 0x67, 0x4D, 0x3D, 0x66, 0x4C, 0x3C, 0x66, 0x4C, 0x3C, 0x66, 0x4C, 0x3C, 0x67, 0x4C, 
   0x3E, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 
   0x68, 0x4D, 0x3F, 0x68, 0x4D, 0x3F, 0xEF, 0xDA, 0xD9, 0xEF, 0xDA, 0xD9, 0xEF, 0xDA, 0xD9, 0xEF, 
   0xDA, 0xD9, 0xF0, 0xDB, 0xDA, 0xF2, 0xDD, 0xDC, 0xF3, 0xDD, 0xDC, 0xF2, 0xDC, 0xDA, 0xEF, 0xD9, 
   0xD7, 0xEE, 0xD7, 0xD5, 0xF0, 0xD9, 0xD7, 0xF3, 0xDC, 0xDA, 0xF4, 0xDD, 0xDB, 0xF3, 0xDD, 0xDB, 
   0xF3, 0xDC, 0xDA, 0xF5, 0xDF, 0xDD, 0xF6, 0xE0, 0xDE, 0xF2, 0xDC, 0xDA, 0xF5, 0xDE, 0xDC, 0xF4, 
   0xDE, 0xDC, 0xF2, 0xDF, 0xDC, 0xF4, 0xE1, 0xDE, 0xF3, 0xE0, 0xDD, 0xF4, 0xE1, 0xDE, 0xF3, 0xE0, 
   0xDD, 0xF3, 0xE0, 0xDC, 0xF3, 0xE0, 0xDD, 0xF4, 0xE0, 0xDE, 0xF5, 0xE2, 0xDF, 0xF6, 0xE3, 0xE0, 
   0xF2, 0xE3, 0xE0, 0xEF, 0xE1, 0xDD, 0xF8, 0xEB, 0xE8, 0xBD, 0xC0, 0xBF, 0x54, 0x58, 0x58, 0x5A, 
   0x5D, 0x60, 0x4F, 0x55, 0x5D, 0x55, 0x61, 0x6A, 0x66, 0x79, 0x82, 0x54, 0x68, 0x6E, 0x5F, 0x72, 
   0x77, 0x4C, 0x5D, 0x63, 0x34, 0x41, 0x47, 0x4C, 0x57, 0x5E, 0x53, 0x5C, 0x64, 0x56, 0x5D, 0x65, 
   0x53, 0x5D, 0x66, 0x59, 0x5F, 0x67, 0x86, 0x8A, 0x91, 0x7C, 0x7F, 0x85, 0x41, 0x46, 0x4B, 0x4D, 
   0x58, 0x5B, 0x5B, 0x66, 0x65, 0xD1, 0xD7, 0xD5, 0x91, 0x98, 0x96, 0xCD, 0xD2, 0xD4, 0xBC, 0xC0, 
   0xC6, 0x8B, 0x8E, 0x98, 0xB6, 0xB8, 0xC1, 0xBC, 0xB3, 0xB7, 0xF3, 0xEC, 0xEF, 0xB4, 0xB3, 0xB5, 
   0x3A, 0x3D, 0x3E, 0x3C, 0x43, 0x43, 0x3D, 0x48, 0x48, 0x4D, 0x53, 0x52, 0xAF, 0xAD, 0xAD, 0xC6, 
   0xBE, 0xBE, 0xE6, 0xD8, 0xD4, 0xF7, 0xE7, 0xE0, 0xF8, 0xE8, 0xE0, 0xF5, 0xE8, 0xDF, 0xF4, 0xE5, 
   0xE2, 0xF4, 0xE5, 0xE2, 0xF5, 0xE6, 0xE4, 0xF6, 0xE7, 0xE5, 0xF4, 0xE5, 0xE2, 0xF4, 0xE5, 0xE3, 
   0xF5, 0xE7, 0xE4, 0xF0, 0xE4, 0xE1, 0xF5, 0xE9, 0xE5, 0xF2, 0xE6, 0xE3, 0xF3, 0xE8, 0xE4, 0xF2, 
   0xE6, 0xE3, 0xF3, 0xE7, 0xE3, 0xF6, 0xE9, 0xE5, 0xF5, 0xEE, 0xEC, 0xB4, 0xB1, 0xB1, 0x48, 0x4C, 
   0x4C, 0x43, 0x4E, 0x51, 0x5E, 0x6E, 0x70, 0x53, 0x68, 0x6D, 0x54, 0x69, 0x72, 0x7B, 0x8D, 0x94, 
   0x67, 0x74, 0x79, 0x62, 0x69, 0x6C, 0xC1, 0xC5, 0xC6, 0xDB, 0xDB, 0xDB, 0xEE, 0xE5, 0xE1, 0xF2, 
   0xE8, 0xE4, 0xF7, 0xEC, 0xE8, 0xF6, 0xEA, 0xE7, 0xF8, 0xE9, 0xE6, 0xF8, 0xE9, 0xE6, 0xF8, 0xE9, 
   0xE7, 0xED, 0xDD, 0xDB, 0xED, 0xDE, 0xDC, 0xF5, 0xE6, 0xE4, 0xF5, 0xE6, 0xE4, 0xF6, 0xE7, 0xE4, 
   0xF3, 0xE5, 0xE2, 0xF0, 0xE3, 0xE3, 0xF2, 0xE6, 0xE6, 0xF4, 0xE7, 0xE7, 0xF3, 0xE7, 0xE7, 0xF4, 
   0xE7, 0xE7, 0xF1, 0xE4, 0xE4, 0xFA, 0xF1, 0xF1, 0xEE, 0xE7, 0xE8, 0xBC, 0xB3, 0xB5, 0x92, 0x8B, 
   0x8C, 0x5A, 0x54, 0x55, 0x2E, 0x2A, 0x2A, 0x35, 0x32, 0x33, 0x44, 0x45, 0x45, 0x3D, 0x42, 0x41, 
   0x31, 0x38, 0x37, 0x3B, 0x42, 0x41, 0x3A, 0x41, 0x40, 0x37, 0x39, 0x38, 0x31, 0x32, 0x30, 0x3C, 
   0x40, 0x38, 0x77, 0x74, 0x6D, 0x7B, 0x71, 0x6A, 0x80, 0x6D, 0x66, 0x89, 0x6D, 0x68, 0xB4, 0x95, 
   0x8F, 0x9B, 0x82, 0x7C, 0xA9, 0x91, 0x8A, 0xB1, 0x97, 0x91, 0xEA, 0xCE, 0xC8, 0xF0, 0xD2, 0xCC, 
   0xDC, 0xBE, 0xB8, 0xCF, 0xB0, 0xAB, 0xD8, 0xB9, 0xB4, 0x9E, 0x84, 0x7E, 0x7B, 0x65, 0x5F, 0xA4, 
   0x90, 0x8A, 0xD1, 0xBA, 0xB4, 0xD9, 0xBF, 0xBA, 0xCD, 0xAE, 0xA3, 0xD0, 0xAF, 0xA3, 0xD8, 0xBC, 
   0xB3, 0xD7, 0xBF, 0xBB, 0xD5, 0xC3, 0xC2, 0xA6, 0x98, 0x99, 0x5F, 0x53, 0x57, 0x4A, 0x3F, 0x46, 
   0x58, 0x51, 0x58, 0x52, 0x54, 0x5F, 0x61, 0x69, 0x73, 0x4F, 0x61, 0x6E, 0x5D, 0x74, 0x82, 0x75, 
   0x8B, 0x9C, 0x80, 0x96, 0xA7, 0x6E, 0x84, 0x94, 0x60, 0x77, 0x82, 0x68, 0x7D, 0x87, 0x72, 0x88, 
   0x8F, 0x80, 0x90, 0x95, 0x5D, 0x5C, 0x5B, 0x57, 0x4F, 0x4B, 0x65, 0x53, 0x48, 0x6E, 0x52, 0x44, 
   0x72, 0x51, 0x42, 0x74, 0x50, 0x43, 0x6C, 0x50, 0x43, 0x69, 0x57, 0x49, 0x5C, 0x47, 0x39, 0x59, 
   0x44, 0x34, 0x6A, 0x53, 0x45, 0x67, 0x4E, 0x42, 0x6A, 0x51, 0x44, 0x6D, 0x50, 0x43, 0x5F, 0x44, 
   0x39, 0x5C, 0x44, 0x3B, 0x65, 0x4E, 0x44, 0x65, 0x4B, 0x3D, 0x69, 0x4D, 0x3A, 0x6B, 0x50, 0x3E, 
   0x60, 0x47, 0x39, 0x4E, 0x34, 0x27, 0x53, 0x38, 0x2A, 0x67, 0x4D, 0x3F, 0x5F, 0x47, 0x39, 0x5C, 
   0x44, 0x36, 0x64, 0x47, 0x39, 0x67, 0x49, 0x3C, 0x69, 0x4A, 0x3D, 0x66, 0x48, 0x3B, 0x67, 0x49, 
   0x3C, 0x68, 0x4A, 0x3D, 0x69, 0x4B, 0x3E, 0x69, 0x4B, 0x3E, 0x6A, 0x4C, 0x3F, 0x6B, 0x4D, 0x40, 
   0x6B, 0x4D, 0x40, 0x6B, 0x4D, 0x40, 0x6B, 0x4D, 0x40, 0x69, 0x4E, 0x40, 0x69, 0x4E, 0x40, 0x69, 
   0x4E, 0x40, 0x69, 0x4E, 0x40, 0x69, 0x4E, 0x40, 0x69, 0x4F, 0x41, 0x6A, 0x4E, 0x40, 0x6B, 0x4E, 
   0x3F, 0x6A, 0x4D, 0x3E, 0x69, 0x4C, 0x3D, 0x6A, 0x4D, 0x3E, 0x6B, 0x4E, 0x3F, 0x69, 0x4C, 0x3D, 
   0x67, 0x4A, 0x3B, 0x5B, 0x3E, 0x2F, 0x69, 0x4C, 0x3D, 0x67, 0x4A, 0x3B, 0x67, 0x4A, 0x3B, 0x69, 
   0x4C, 0x3D, 0x69, 0x4C, 0x3D, 0x68, 0x4B, 0x3C, 0x68, 0x4B, 0x3C, 0x68, 0x4B, 0x3C, 0x68, 0x4B, 
   0x3C, 0x68, 0x4B, 0x3C, 0x68, 0x4B, 0x3C, 0x69, 0x4C, 0x3D, 0x69, 0x4C, 0x3D, 0x69, 0x4C, 0x3D, 
   0x69, 0x4C, 0x3D, 0x68, 0x4B, 0x3C, 0x68, 0x4B, 0x3C, 0x68, 0x4C, 0x3D, 0x67, 0x4D, 0x3D, 0x67, 
   0x4D, 0x3D, 0x67, 0x4D, 0x3D, 0x66, 0x4C, 0x3C, 0x66, 0x4C, 0x3C, 0x66, 0x4C, 0x3C, 0x67, 0x4C, 
   0x3E, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 
   0x68, 0x4D, 0x3F, 0x68, 0x4D, 0x3F, 0xF1, 0xDC, 0xDB, 0xEF, 0xDA, 0xD9, 0xF1, 0xDC, 0xDB, 0xF0, 
   0xDB, 0xDA, 0xEF, 0xDA, 0xD9, 0xF1, 0xDC, 0xDB, 0xF3, 0xDE, 0xDC, 0xF2, 0xDD, 0xDB, 0xEF, 0xDB, 
   0xD8, 0xEB, 0xD7, 0xD5, 0xEA, 0xD6, 0xD4, 0xF3, 0xDE, 0xDC, 0xF3, 0xDE, 0xDC, 0xF2, 0xDD, 0xDB, 
   0xF2, 0xDD, 0xDB, 0xF1, 0xDD, 0xDB, 0xF3, 0xDE, 0xDC, 0xF3, 0xDE, 0xDC, 0xF4, 0xDF, 0xDD, 0xF1, 
   0xDE, 0xDB, 0xF2, 0xDF, 0xDC, 0xF6, 0xE3, 0xE0, 0xF5, 0xE2, 0xDF, 0xF3, 0xE0, 0xDD, 0xF3, 0xE0, 
   0xDD, 0xF3, 0xE0, 0xDD, 0xF4, 0xE1, 0xDE, 0xF5, 0xE2, 0xDF, 0xF4, 0xE2, 0xDF, 0xF2, 0xE2, 0xDF, 
   0xF2, 0xE3, 0xE0, 0xF4, 0xE7, 0xE3, 0xE4, 0xD9, 0xD6, 0x6D, 0x6A, 0x6A, 0x64, 0x5F, 0x60, 0x69, 
   0x60, 0x64, 0x65, 0x5F, 0x68, 0x69, 0x6A, 0x74, 0x5A, 0x60, 0x6B, 0x3A, 0x4B, 0x53, 0x5A, 0x6E, 
   0x75, 0x4E, 0x60, 0x67, 0x4D, 0x5A, 0x62, 0x4C, 0x56, 0x5E, 0x5B, 0x62, 0x6B, 0x5B, 0x60, 0x6A, 
   0x5B, 0x61, 0x6A, 0x5F, 0x63, 0x6B, 0x72, 0x75, 0x7D, 0x46, 0x4A, 0x50, 0x49, 0x4F, 0x54, 0x47, 
   0x52, 0x54, 0x50, 0x5A, 0x5A, 0xEE, 0xF5, 0xF5, 0xDC, 0xE4, 0xE5, 0x96, 0x9D, 0x9F, 0xA8, 0xAE, 
   0xB4, 0x4D, 0x53, 0x5B, 0x5B, 0x60, 0x69, 0x76, 0x73, 0x76, 0xC1, 0xC0, 0xC2, 0x4E, 0x4F, 0x52, 
   0x57, 0x5D, 0x5F, 0x4E, 0x58, 0x59, 0x42, 0x50, 0x50, 0x59, 0x64, 0x63, 0x45, 0x49, 0x49, 0x87, 
   0x84, 0x83, 0xF6, 0xEA, 0xE7, 0xFA, 0xEB, 0xE4, 0xFC, 0xEC, 0xE4, 0xF9, 0xEC, 0xE3, 0xF8, 0xE9, 
   0xE5, 0xF5, 0xE6, 0xE3, 0xF6, 0xE7, 0xE4, 0xF7, 0xE8, 0xE5, 0xF7, 0xE7, 0xE4, 0xF6, 0xE7, 0xE4, 
   0xF6, 0xE7, 0xE3, 0xF4, 0xE7, 0xE1, 0xF4, 0xE7, 0xE1, 0xF4, 0xE7, 0xE1, 0xF6, 0xE9, 0xE3, 0xF5, 
   0xE8, 0xE2, 0xF5, 0xE8, 0xE2, 0xFD, 0xF0, 0xE9, 0xCA, 0xBF, 0xBB, 0x5E, 0x59, 0x57, 0x51, 0x54, 
   0x53, 0x5A, 0x63, 0x66, 0x5C, 0x6A, 0x6E, 0x5B, 0x6F, 0x76, 0x5C, 0x72, 0x7E, 0x64, 0x77, 0x80, 
   0x58, 0x68, 0x6E, 0xA7, 0xB0, 0xB5, 0x9E, 0xA4, 0xA7, 0xAE, 0xB1, 0xB3, 0x91, 0x89, 0x87, 0xF3, 
   0xEA, 0xE8, 0xF8, 0xED, 0xEB, 0xF8, 0xEB, 0xEA, 0xF6, 0xE7, 0xE5, 0xF8, 0xE9, 0xE7, 0xF5, 0xE5, 
   0xE4, 0xEE, 0xDE, 0xDC, 0xF3, 0xE4, 0xE2, 0xF4, 0xE5, 0xE3, 0xF7, 0xE8, 0xE6, 0xF8, 0xE9, 0xE6, 
   0xF6, 0xE7, 0xE5, 0xF3, 0xE4, 0xE5, 0xF2, 0xE3, 0xE5, 0xF4, 0xE6, 0xE7, 0xF5, 0xE6, 0xE7, 0xF4, 
   0xE5, 0xE6, 0xF4, 0xE6, 0xE7, 0xF3, 0xE5, 0xE6, 0xFA, 0xEC, 0xEE, 0xFF, 0xF2, 0xF4, 0xFF, 0xF5, 
   0xF7, 0xEE, 0xE8, 0xE9, 0xB0, 0xAB, 0xAC, 0x65, 0x5F, 0x60, 0x41, 0x3D, 0x3E, 0x44, 0x45, 0x45, 
   0x3F, 0x45, 0x44, 0x38, 0x40, 0x3F, 0x39, 0x42, 0x41, 0x37, 0x3C, 0x3C, 0x38, 0x3E, 0x3B, 0x38, 
   0x40, 0x3B, 0x5E, 0x60, 0x5B, 0x81, 0x7A, 0x74, 0x7E, 0x6F, 0x69, 0x92, 0x7A, 0x73, 0x96, 0x7B, 
   0x73, 0x97, 0x7F, 0x77, 0x94, 0x7E, 0x75, 0xAD, 0x93, 0x8B, 0xCF, 0xB5, 0xAD, 0xEB, 0xCE, 0xC7, 
   0xDD, 0xC0, 0xB8, 0xD0, 0xB4, 0xAE, 0xB9, 0x9E, 0x9B, 0x8E, 0x77, 0x73, 0x99, 0x88, 0x83, 0xA5, 
   0x98, 0x92, 0xE2, 0xD2, 0xCD, 0xDF, 0xCD, 0xC9, 0xE5, 0xCC, 0xC3, 0xDF, 0xC6, 0xBC, 0xE6, 0xD2, 
   0xCC, 0xC1, 0xB2, 0xAF, 0x5D, 0x52, 0x52, 0x47, 0x3E, 0x40, 0x46, 0x3D, 0x41, 0x4E, 0x45, 0x4C, 
   0x4F, 0x4A, 0x52, 0x5D, 0x5F, 0x69, 0x58, 0x61, 0x6B, 0x49, 0x58, 0x64, 0x4A, 0x5E, 0x6A, 0x7F, 
   0x98, 0xA5, 0x7C, 0x95, 0xA4, 0x6A, 0x81, 0x8E, 0x60, 0x75, 0x7D, 0x6B, 0x7D, 0x83, 0x74, 0x85, 
   0x89, 0x71, 0x79, 0x7A, 0x58, 0x4B, 0x46, 0x64, 0x53, 0x4B, 0x6C, 0x54, 0x48, 0x74, 0x56, 0x47, 
   0x77, 0x57, 0x4A, 0x71, 0x4E, 0x44, 0x5E, 0x44, 0x3A, 0x4E, 0x3E, 0x32, 0x55, 0x43, 0x36, 0x65, 
   0x4F, 0x41, 0x5F, 0x48, 0x39, 0x63, 0x49, 0x3A, 0x65, 0x4A, 0x3C, 0x66, 0x4A, 0x3B, 0x63, 0x48, 
   0x3C, 0x65, 0x4D, 0x44, 0x62, 0x4C, 0x43, 0x65, 0x4E, 0x41, 0x67, 0x4D, 0x3B, 0x61, 0x49, 0x37, 
   0x43, 0x2D, 0x1E, 0x43, 0x2B, 0x1D, 0x5C, 0x42, 0x34, 0x68, 0x4E, 0x40, 0x5E, 0x43, 0x35, 0x59, 
   0x3E, 0x30, 0x66, 0x48, 0x3B, 0x66, 0x48, 0x3B, 0x67, 0x49, 0x3C, 0x67, 0x49, 0x3C, 0x68, 0x4A, 
   0x3D, 0x69, 0x4B, 0x3E, 0x69, 0x4B, 0x3E, 0x6A, 0x4C, 0x3F, 0x6B, 0x4D, 0x40, 0x6C, 0x4E, 0x41, 
   0x6C, 0x4E, 0x41, 0x6C, 0x4E, 0x41, 0x6C, 0x4E, 0x41, 0x68, 0x4D, 0x3F, 0x68, 0x4D, 0x3F, 0x68, 
   0x4D, 0x3F, 0x6A, 0x4F, 0x41, 0x6A, 0x4F, 0x41, 0x6A, 0x4F, 0x41, 0x6B, 0x4F, 0x41, 0x6B, 0x4E, 
   0x3F, 0x69, 0x4C, 0x3D, 0x6A, 0x4D, 0x3E, 0x6B, 0x4E, 0x3F, 0x6B, 0x4E, 0x3F, 0x65, 0x48, 0x39, 
   0x65, 0x49, 0x39, 0x66, 0x49, 0x39, 0x65, 0x48, 0x39, 0x68, 0x4B, 0x3C, 0x68, 0x4B, 0x3C, 0x68, 
   0x4B, 0x3C, 0x68, 0x4B, 0x3C, 0x68, 0x4B, 0x3C, 0x68, 0x4B, 0x3C, 0x68, 0x4B, 0x3C, 0x68, 0x4B, 
   0x3C, 0x68, 0x4B, 0x3C, 0x68, 0x4B, 0x3C, 0x68, 0x4B, 0x3C, 0x68, 0x4B, 0x3C, 0x68, 0x4B, 0x3C, 
   0x68, 0x4B, 0x3C, 0x68, 0x4B, 0x3C, 0x68, 0x4B, 0x3C, 0x68, 0x4C, 0x3D, 0x67, 0x4D, 0x3D, 0x67, 
   0x4D, 0x3D, 0x67, 0x4D, 0x3D, 0x67, 0x4D, 0x3D, 0x67, 0x4D, 0x3D, 0x67, 0x4D, 0x3D, 0x67, 0x4C, 
   0x3E, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x68, 0x4D, 0x3F, 0x67, 0x4C, 0x3E, 0x66, 0x4B, 0x3D, 
   0x69, 0x4E, 0x40, 0x69, 0x4E, 0x40, 0xF1, 0xDC, 0xDB, 0xF1, 0xDC, 0xDB, 0xF2, 0xDD, 0xDC, 0xF1, 
   0xDC, 0xDB, 0xF1, 0xDC, 0xDB, 0xF2, 0xDD, 0xDC, 0xF2, 0xDE, 0xDC, 0xF2, 0xDF, 0xDC, 0xF1, 0xDE, 
   0xDB, 0xED, 0xDA, 0xD7, 0xEC, 0xD9, 0xD6, 0xF2, 0xDF, 0xDC, 0xF3, 0xE0, 0xDD, 0xF1, 0xDE, 0xDB, 
   0xF1, 0xDE, 0xDB, 0xF3, 0xE0, 0xDD, 0xF2, 0xDF, 0xDC, 0xF0, 0xDD, 0xDA, 0xF5, 0xE2, 0xDF, 0xF4, 
   0xE1, 0xDE, 0xF5, 0xE2, 0xDF, 0xF7, 0xE4, 0xE1, 0xF6, 0xE3, 0xE0, 0xF3, 0xE0, 0xDD, 0xF3, 0xE0, 
   0xDD, 0xF3, 0xE0, 0xDD, 0xF5, 0xE2, 0xDF, 0xF3, 0xE2, 0xDF, 0xF2, 0xE2, 0xDF, 0xEF, 0xE1, 0xDD, 
   0xF1, 0xE3, 0xE0, 0xF2, 0xE6, 0xE2, 0x9D, 0x92, 0x8E, 0xA6, 0x9F, 0x9E, 0xCC, 0xBF, 0xC0, 0xCE, 
   0xBE, 0xC1, 0xEA, 0xDC, 0xE4, 0xC6, 0xBE, 0xC8, 0x44, 0x43, 0x4C, 0x51, 0x5F, 0x67, 0x5B, 0x72, 
   0x78, 0x50, 0x61, 0x69, 0x4C, 0x59, 0x61, 0x57, 0x60, 0x69, 0x6B, 0x6F, 0x78, 0x5B, 0x5D, 0x67, 
   0x57, 0x59, 0x63, 0x52, 0x54, 0x5D, 0x88, 0x8B, 0x93, 0x37, 0x3C, 0x42, 0x79, 0x80, 0x84, 0x3F, 
   0x48, 0x4B, 0x46, 0x4D, 0x51, 0x68, 0x6F, 0x72, 0x5F, 0x66, 0x69, 0x35, 0x3E, 0x41, 0x3A, 0x44, 
   0x49, 0x49, 0x53, 0x5A, 0x49, 0x55, 0x5B, 0x71, 0x75, 0x79, 0x6E, 0x72, 0x76, 0x4C, 0x53, 0x56, 
   0x55, 0x5F, 0x62, 0x42, 0x4E, 0x50, 0x46, 0x53, 0x55, 0x58, 0x65, 0x66, 0x3B, 0x44, 0x44, 0x77, 
   0x79, 0x7A, 0xF7, 0xF1, 0xEF, 0xFC, 0xEF, 0xE9, 0xF9, 0xEA, 0xE3, 0xFB, 0xEB, 0xE4, 0xFC, 0xEB, 
   0xE7, 0xF9, 0xE8, 0xE6, 0xF8, 0xE7, 0xE4, 0xF9, 0xE7, 0xE4, 0xF8, 0xE7, 0xE4, 0xF8, 0xE7, 0xE4, 
   0xF8, 0xE7, 0xE3, 0xF7, 0xE7, 0xE1, 0xF7, 0xE7, 0xE1, 0xF7, 0xE7, 0xE1, 0xF8, 0xE7, 0xE2, 0xF7, 
   0xE7, 0xE2, 0xF9, 0xE9, 0xE3, 0xFF, 0xF3, 0xEA, 0xBE, 0xB2, 0xAA, 0x5E, 0x58, 0x52, 0x80, 0x81, 
   0x80, 0x52, 0x5B, 0x5E, 0x55, 0x63, 0x68, 0x6B, 0x7E, 0x88, 0x93, 0xA7, 0xB4, 0x4E, 0x60, 0x6B, 
   0x58, 0x67, 0x6F, 0x7A, 0x84, 0x8A, 0xA7, 0xAF, 0xB3, 0x7B, 0x7F, 0x82, 0x7B, 0x72, 0x72, 0xF1, 
   0xE6, 0xE6, 0xFB, 0xF0, 0xF0, 0xF6, 0xE9, 0xEA, 0xF9, 0xE9, 0xEA, 0xF6, 0xE7, 0xE8, 0xEE, 0xDD, 
   0xDD, 0xF5, 0xE3, 0xE2, 0xF6, 0xE4, 0xE3, 0xF8, 0xE6, 0xE5, 0xF7, 0xE5, 0xE4, 0xF7, 0xE5, 0xE4, 
   0xF4, 0xE3, 0xE2, 0xF4, 0xE4, 0xE5, 0xF6, 0xE6, 0xE7, 0xF6, 0xE6, 0xE7, 0xF4, 0xE4, 0xE5, 0xF5, 
   0xE5, 0xE6, 0xF8, 0xE8, 0xE9, 0xF7, 0xE7, 0xE8, 0xF4, 0xE4, 0xE5, 0xF2, 0xE5, 0xE6, 0xF5, 0xE8, 
   0xE8, 0xF9, 0xEF, 0xEF, 0xFF, 0xFC, 0xFC, 0xF4, 0xED, 0xED, 0x7A, 0x74, 0x75, 0x3E, 0x3A, 0x3C, 
   0x39, 0x3D, 0x3C, 0x3A, 0x40, 0x3F, 0x39, 0x41, 0x40, 0x33, 0x39, 0x38, 0x38, 0x40, 0x40, 0x2F, 
   0x36, 0x37, 0x48, 0x4A, 0x4B, 0x79, 0x74, 0x72, 0x7E, 0x73, 0x6F, 0x86, 0x73, 0x6D, 0x87, 0x70, 
   0x6A, 0x8D, 0x75, 0x6C, 0x87, 0x70, 0x66, 0xAD, 0x95, 0x8B, 0xBF, 0xA5, 0x9B, 0xDA, 0xBD, 0xB4, 
   0xE0, 0xC1, 0xB9, 0xC8, 0xAF, 0xAA, 0xA2, 0x8E, 0x8E, 0x9D, 0x8E, 0x8C, 0x65, 0x5C, 0x5A, 0x7C, 
   0x76, 0x73, 0xCE, 0xC8, 0xC5, 0xB1, 0xAA, 0xA7, 0xA4, 0x94, 0x90, 0xA6, 0x96, 0x90, 0xA3, 0x9B, 
   0x98, 0x79, 0x75, 0x74, 0x47, 0x44, 0x45, 0x4B, 0x48, 0x4A, 0x44, 0x3F, 0x43, 0x43, 0x3E, 0x45, 
   0x4F, 0x4D, 0x53, 0x5F, 0x63, 0x6A, 0x4E, 0x57, 0x60, 0x36, 0x45, 0x4E, 0x63, 0x74, 0x7D, 0x88, 
   0x9C, 0xA8, 0x78, 0x8B, 0x98, 0x5A, 0x69, 0x72, 0x7D, 0x87, 0x8D, 0x78, 0x7E, 0x7F, 0x64, 0x66, 
   0x65, 0x5E, 0x58, 0x55, 0x6A, 0x53, 0x4D, 0x70, 0x57, 0x4D, 0x72, 0x54, 0x48, 0x78, 0x58, 0x4A, 
   0x6F, 0x51, 0x48, 0x63, 0x46, 0x41, 0x49, 0x33, 0x2D, 0x42, 0x34, 0x2B, 0x56, 0x45, 0x3A, 0x57, 
   0x43, 0x39, 0x5C, 0x45, 0x39, 0x6C, 0x52, 0x44, 0x68, 0x4F, 0x40, 0x63, 0x47, 0x3B, 0x65, 0x4C, 
   0x42, 0x53, 0x3F, 0x37, 0x48, 0x35, 0x2D, 0x52, 0x41, 0x36, 0x5E, 0x4B, 0x3B, 0x4E, 0x39, 0x2B, 
   0x3B, 0x25, 0x19, 0x59, 0x41, 0x35, 0x69, 0x50, 0x42, 0x56, 0x3D, 0x2E, 0x5D, 0x43, 0x33, 0x64, 
   0x4A, 0x3A, 0x67, 0x4A, 0x3B, 0x66, 0x4A, 0x3A, 0x67, 0x4B, 0x3B, 0x67, 0x4B, 0x3B, 0x68, 0x4C, 
   0x3C, 0x6A, 0x4D, 0x3E, 0x69, 0x4D, 0x3F, 0x6A, 0x4C, 0x40, 0x6B, 0x4D, 0x40, 0x6C, 0x4E, 0x41, 
   0x6C, 0x4E, 0x41, 0x6C, 0x4E, 0x41, 0x6C, 0x4E, 0x41, 0x68, 0x4D, 0x3F, 0x68, 0x4D, 0x3F, 0x68, 
   0x4D, 0x3F, 0x6A, 0x4F, 0x41, 0x6A, 0x4F, 0x41, 0x6A, 0x4F, 0x41, 0x6C, 0x50, 0x42, 0x6B, 0x4E, 
   0x3F, 0x68, 0x4B, 0x3C, 0x69, 0x4C, 0x3D, 0x6A, 0x4D, 0x3E, 0x6B, 0x4E, 0x3F, 0x67, 0x4A, 0x3B, 
   0x67, 0x4B, 0x3A, 0x69, 0x4D, 0x3C, 0x68, 0x4C, 0x3B, 0x67, 0x4B, 0x3A, 0x68, 0x4C, 0x3B, 0x68, 
   0x4C, 0x3B, 0x68, 0x4C, 0x3C, 0x68, 0x4B, 0x3C, 0x68, 0x4B, 0x3C, 0x68, 0x4B, 0x3C, 0x68, 0x4B, 
   0x3C, 0x68, 0x4B, 0x3C, 0x68, 0x4B, 0x3C, 0x68, 0x4B, 0x3C, 0x68, 0x4B, 0x3C, 0x68, 0x4B, 0x3C, 
   0x68, 0x4B, 0x3C, 0x68, 0x4B, 0x3C, 0x68, 0x4B, 0x3C, 0x68, 0x4C, 0x3D, 0x67, 0x4D, 0x3D, 0x67, 
   0x4D, 0x3D, 0x67, 0x4D, 0x3D, 0x67, 0x4D, 0x3D, 0x67, 0x4D, 0x3D, 0x67, 0x4D, 0x3D, 0x67, 0x4C, 
   0x3E, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x68, 0x4D, 0x3F, 0x67, 0x4C, 0x3E, 0x66, 0x4B, 0x3D, 
   0x69, 0x4E, 0x40, 0x69, 0x4E, 0x40, 0xF2, 0xDD, 0xDC, 0xF3, 0xDE, 0xDD, 0xF3, 0xDE, 0xDD, 0xF2, 
   0xDD, 0xDC, 0xF2, 0xDD, 0xDC, 0xF3, 0xDE, 0xDD, 0xF2, 0xDE, 0xDC, 0xF3, 0xE0, 0xDD, 0xF4, 0xE1, 
   0xDE, 0xEF, 0xDC, 0xD9, 0xEF, 0xDC, 0xD9, 0xF2, 0xDF, 0xDC, 0xF3, 0xE0, 0xDD, 0xF1, 0xDE, 0xDB, 
   0xF1, 0xDE, 0xDB, 0xF4, 0xE1, 0xDE, 0xF3, 0xE0, 0xDD, 0xF1, 0xDE, 0xDB, 0xF5, 0xE2, 0xDF, 0xF6, 
   0xE3, 0xE0, 0xF5, 0xE2, 0xDF, 0xF7, 0xE4, 0xE1, 0xF7, 0xE4, 0xE1, 0xF4, 0xE1, 0xDE, 0xF4, 0xE1, 
   0xDE, 0xF4, 0xE1, 0xDE, 0xF4, 0xE2, 0xDF, 0xF3, 0xE2, 0xDF, 0xF2, 0xE2, 0xDF, 0xF1, 0xE3, 0xE0, 
   0xEE, 0xE2, 0xDE, 0xDF, 0xD4, 0xD0, 0xCA, 0xC0, 0xBC, 0xB0, 0xAA, 0xA6, 0x6E, 0x63, 0x63, 0x9A, 
   0x87, 0x8B, 0xE0, 0xD0, 0xD4, 0xC4, 0xBC, 0xC3, 0x49, 0x49, 0x4F, 0x6D, 0x7A, 0x81, 0x4C, 0x62, 
   0x6A, 0x4B, 0x5E, 0x66, 0x44, 0x50, 0x5A, 0x63, 0x6A, 0x75, 0x6D, 0x6F, 0x7B, 0x55, 0x55, 0x60, 
   0x83, 0x83, 0x8D, 0xCD, 0xCD, 0xD6, 0xC2, 0xC5, 0xCD, 0x98, 0x9E, 0xA2, 0xA1, 0xAA, 0xAE, 0x59, 
   0x63, 0x65, 0x43, 0x49, 0x4F, 0x3F, 0x44, 0x4C, 0x4E, 0x56, 0x5D, 0x3A, 0x45, 0x4A, 0x46, 0x51, 
   0x55, 0x55, 0x63, 0x66, 0x41, 0x4F, 0x52, 0x4B, 0x56, 0x59, 0x37, 0x42, 0x44, 0x53, 0x5E, 0x60, 
   0x4A, 0x56, 0x58, 0x39, 0x46, 0x48, 0x4A, 0x57, 0x59, 0x55, 0x65, 0x67, 0x42, 0x50, 0x52, 0x74, 
   0x79, 0x7A, 0xF1, 0xEB, 0xEB, 0xFA, 0xED, 0xEC, 0xF7, 0xE7, 0xE4, 0xFA, 0xE9, 0xE5, 0xFB, 0xEA, 
   0xE5, 0xF9, 0xE9, 0xE3, 0xF6, 0xE6, 0xE1, 0xF7, 0xE7, 0xE1, 0xF8, 0xE8, 0xE2, 0xF8, 0xE8, 0xE2, 
   0xF8, 0xE7, 0xE3, 0xF7, 0xE6, 0xE3, 0xF7, 0xE6, 0xE3, 0xF7, 0xE6, 0xE3, 0xF7, 0xE6, 0xE2, 0xF7, 
   0xE6, 0xE3, 0xF8, 0xE7, 0xE3, 0xF4, 0xE2, 0xD7, 0xDE, 0xCF, 0xC7, 0xA1, 0x99, 0x94, 0x8B, 0x8A, 
   0x8A, 0x64, 0x6B, 0x6E, 0x47, 0x54, 0x58, 0x9C, 0xAD, 0xB8, 0x88, 0x9A, 0xA9, 0x61, 0x71, 0x7F, 
   0x59, 0x66, 0x70, 0x5B, 0x64, 0x6C, 0x63, 0x6A, 0x6F, 0x5F, 0x64, 0x69, 0xB9, 0xB0, 0xB0, 0xF5, 
   0xEA, 0xEA, 0xF7, 0xEB, 0xEB, 0xF7, 0xEA, 0xEA, 0xF9, 0xE9, 0xEA, 0xF5, 0xE5, 0xE6, 0xF1, 0xE0, 
   0xE0, 0xF8, 0xE5, 0xE4, 0xFA, 0xE8, 0xE7, 0xF7, 0xE5, 0xE4, 0xF3, 0xE1, 0xE0, 0xF9, 0xE7, 0xE6, 
   0xFA, 0xE8, 0xE8, 0xF7, 0xE7, 0xE7, 0xF8, 0xE8, 0xE9, 0xF6, 0xE6, 0xE7, 0xF4, 0xE4, 0xE5, 0xF5, 
   0xE5, 0xE6, 0xF8, 0xE8, 0xE9, 0xF8, 0xE8, 0xE9, 0xFA, 0xE7, 0xE9, 0xFA, 0xEA, 0xEB, 0xF8, 0xE8, 
   0xEA, 0xF3, 0xE7, 0xE8, 0xF4, 0xE8, 0xE8, 0xFE, 0xF3, 0xF3, 0xDE, 0xD2, 0xD3, 0x55, 0x4E, 0x4F, 
   0x44, 0x45, 0x45, 0x3D, 0x43, 0x42, 0x3C, 0x44, 0x43, 0x32, 0x38, 0x36, 0x3B, 0x42, 0x45, 0x3B, 
   0x43, 0x49, 0x46, 0x49, 0x4D, 0x4E, 0x4B, 0x4D, 0x6C, 0x63, 0x62, 0x80, 0x71, 0x6E, 0x81, 0x6F, 
   0x6A, 0x82, 0x6B, 0x61, 0x8A, 0x73, 0x69, 0xA9, 0x91, 0x87, 0xBA, 0xA0, 0x96, 0xCC, 0xB0, 0xA6, 
   0xD4, 0xB5, 0xAC, 0xC3, 0xAD, 0xAA, 0x98, 0x8C, 0x8E, 0x5A, 0x51, 0x52, 0x42, 0x41, 0x41, 0x5B, 
   0x5E, 0x5D, 0x58, 0x5C, 0x5A, 0x3C, 0x3D, 0x3D, 0x43, 0x3D, 0x3E, 0x41, 0x3C, 0x3E, 0x3F, 0x43, 
   0x43, 0x55, 0x5D, 0x5C, 0x50, 0x57, 0x57, 0x31, 0x34, 0x35, 0x5B, 0x5C, 0x60, 0x66, 0x68, 0x6C, 
   0x5E, 0x61, 0x65, 0x57, 0x5E, 0x61, 0x4A, 0x53, 0x57, 0x51, 0x5D, 0x61, 0x74, 0x81, 0x86, 0x82, 
   0x8A, 0x94, 0x51, 0x54, 0x5F, 0x62, 0x61, 0x69, 0x92, 0x89, 0x8E, 0x85, 0x75, 0x75, 0x80, 0x68, 
   0x64, 0x7D, 0x60, 0x5D, 0x7C, 0x5B, 0x54, 0x76, 0x56, 0x4C, 0x7A, 0x58, 0x4C, 0x77, 0x59, 0x4E, 
   0x73, 0x5A, 0x53, 0x6C, 0x55, 0x53, 0x4C, 0x3B, 0x37, 0x56, 0x4B, 0x44, 0x60, 0x53, 0x4A, 0x56, 
   0x44, 0x3B, 0x4E, 0x39, 0x2F, 0x60, 0x48, 0x3C, 0x5B, 0x43, 0x36, 0x5E, 0x47, 0x3A, 0x65, 0x52, 
   0x48, 0x48, 0x39, 0x33, 0x45, 0x38, 0x32, 0x3D, 0x2F, 0x27, 0x4E, 0x3F, 0x33, 0x4A, 0x39, 0x2C, 
   0x52, 0x3B, 0x30, 0x67, 0x50, 0x44, 0x51, 0x38, 0x2A, 0x5A, 0x40, 0x32, 0x66, 0x4A, 0x3A, 0x66, 
   0x4A, 0x3A, 0x66, 0x49, 0x3A, 0x67, 0x4A, 0x3B, 0x68, 0x4B, 0x3C, 0x68, 0x4B, 0x3C, 0x69, 0x4C, 
   0x3D, 0x6A, 0x4D, 0x3E, 0x6A, 0x4D, 0x3F, 0x6B, 0x4D, 0x40, 0x6C, 0x4E, 0x41, 0x6C, 0x4E, 0x41, 
   0x6C, 0x4E, 0x41, 0x6C, 0x4E, 0x41, 0x6C, 0x4E, 0x41, 0x69, 0x4E, 0x40, 0x69, 0x4E, 0x40, 0x69, 
   0x4E, 0x40, 0x69, 0x4E, 0x40, 0x6A, 0x4F, 0x41, 0x6B, 0x50, 0x42, 0x6B, 0x4F, 0x40, 0x6C, 0x4F, 
   0x3F, 0x6C, 0x4F, 0x40, 0x6A, 0x4D, 0x3E, 0x6A, 0x4D, 0x3E, 0x6A, 0x4D, 0x3E, 0x68, 0x4B, 0x3C, 
   0x68, 0x4C, 0x3B, 0x6A, 0x4E, 0x3D, 0x69, 0x4D, 0x3C, 0x68, 0x4C, 0x3B, 0x68, 0x4C, 0x3B, 0x68, 
   0x4C, 0x3B, 0x68, 0x4C, 0x3C, 0x68, 0x4B, 0x3C, 0x68, 0x4B, 0x3C, 0x68, 0x4B, 0x3C, 0x68, 0x4B, 
   0x3C, 0x68, 0x4B, 0x3C, 0x68, 0x4B, 0x3C, 0x68, 0x4B, 0x3C, 0x68, 0x4B, 0x3C, 0x68, 0x4B, 0x3C, 
   0x68, 0x4B, 0x3C, 0x68, 0x4B, 0x3C, 0x68, 0x4B, 0x3C, 0x68, 0x4C, 0x3D, 0x67, 0x4D, 0x3D, 0x67, 
   0x4D, 0x3D, 0x67, 0x4D, 0x3D, 0x67, 0x4D, 0x3D, 0x67, 0x4D, 0x3D, 0x67, 0x4D, 0x3D, 0x67, 0x4C, 
   0x3E, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x68, 0x4D, 0x3F, 0x67, 0x4C, 0x3E, 0x66, 0x4B, 0x3D, 
   0x69, 0x4E, 0x40, 0x69, 0x4E, 0x40, 0xF2, 0xDE, 0xDD, 0xF5, 0xE0, 0xE0, 0xF4, 0xDF, 0xDE, 0xF2, 
   0xDE, 0xDD, 0xF3, 0xDF, 0xDE, 0xF3, 0xDF, 0xDE, 0xF2, 0xDF, 0xDD, 0xF4, 0xE1, 0xDE, 0xF6, 0xE3, 
   0xE0, 0xF1, 0xDE, 0xDB, 0xF2, 0xDF, 0xDC, 0xF3, 0xE0, 0xDD, 0xF3, 0xE0, 0xDD, 0xF1, 0xDE, 0xDB, 
   0xF1, 0xDE, 0xDB, 0xF5, 0xE2, 0xDF, 0xF5, 0xE2, 0xDF, 0xF3, 0xE0, 0xDD, 0xF5, 0xE2, 0xDF, 0xF5, 
   0xE2, 0xDF, 0xF5, 0xE2, 0xDF, 0xF5, 0xE2, 0xDF, 0xF5, 0xE2, 0xDF, 0xF5, 0xE2, 0xDF, 0xF5, 0xE2, 
   0xDF, 0xF5, 0xE2, 0xDF, 0xF4, 0xE2, 0xDF, 0xF3, 0xE2, 0xDF, 0xF2, 0xE3, 0xE0, 0xEB, 0xDE, 0xDB, 
   0xED, 0xE2, 0xDE, 0xE3, 0xD9, 0xD5, 0xE4, 0xDD, 0xD8, 0xBD, 0xBF, 0xB7, 0x82, 0x7C, 0x78, 0x84, 
   0x76, 0x77, 0xBB, 0xAC, 0xAF, 0xBB, 0xB4, 0xB9, 0x4E, 0x52, 0x56, 0x3D, 0x4F, 0x54, 0x3B, 0x54, 
   0x5D, 0x49, 0x5C, 0x64, 0x45, 0x52, 0x5C, 0x71, 0x79, 0x85, 0x70, 0x74, 0x7F, 0x79, 0x79, 0x85, 
   0xF4, 0xF0, 0xFA, 0xF7, 0xF6, 0xFF, 0xD1, 0xD3, 0xDB, 0xAB, 0xB0, 0xB5, 0x55, 0x5D, 0x61, 0x4F, 
   0x58, 0x5A, 0x3B, 0x41, 0x49, 0x5E, 0x61, 0x6C, 0x78, 0x7E, 0x87, 0x4B, 0x56, 0x5B, 0x55, 0x62, 
   0x65, 0x55, 0x66, 0x66, 0x4A, 0x5B, 0x5B, 0x4D, 0x5D, 0x60, 0x40, 0x50, 0x53, 0x48, 0x56, 0x59, 
   0x3B, 0x48, 0x4B, 0x36, 0x42, 0x45, 0x46, 0x51, 0x54, 0x5A, 0x6A, 0x6E, 0x55, 0x66, 0x69, 0x99, 
   0xA1, 0xA5, 0xF9, 0xF3, 0xF5, 0xF8, 0xEC, 0xED, 0xF9, 0xE8, 0xE8, 0xFC, 0xE9, 0xE8, 0xFC, 0xEC, 
   0xE6, 0xFB, 0xEB, 0xE5, 0xF8, 0xE7, 0xE1, 0xF7, 0xE7, 0xE1, 0xF8, 0xE8, 0xE2, 0xF8, 0xE8, 0xE2, 
   0xF9, 0xE7, 0xE3, 0xF9, 0xE5, 0xE4, 0xF9, 0xE5, 0xE4, 0xF9, 0xE6, 0xE4, 0xF7, 0xE3, 0xE2, 0xF8, 
   0xE5, 0xE4, 0xF8, 0xE5, 0xE2, 0xF7, 0xE3, 0xD8, 0xD1, 0xC2, 0xB8, 0xD0, 0xC8, 0xC2, 0x7A, 0x7B, 
   0x7A, 0x7B, 0x83, 0x85, 0x62, 0x6E, 0x72, 0x6B, 0x7A, 0x87, 0x56, 0x66, 0x77, 0x61, 0x6E, 0x7D, 
   0x53, 0x5F, 0x6B, 0x67, 0x6F, 0x79, 0x62, 0x69, 0x71, 0xAE, 0xB3, 0xB8, 0xFF, 0xFA, 0xFB, 0xF8, 
   0xED, 0xED, 0xF3, 0xE7, 0xE7, 0xF3, 0xE6, 0xE6, 0xF7, 0xE7, 0xE8, 0xF3, 0xE3, 0xE4, 0xF7, 0xE6, 
   0xE6, 0xFB, 0xE7, 0xE6, 0xF6, 0xE4, 0xE3, 0xF7, 0xE5, 0xE4, 0xF8, 0xE6, 0xE5, 0xFB, 0xE9, 0xE7, 
   0xF7, 0xE4, 0xE3, 0xF9, 0xE9, 0xEA, 0xF6, 0xE7, 0xE8, 0xF6, 0xE6, 0xE7, 0xF6, 0xE6, 0xE7, 0xF5, 
   0xE5, 0xE6, 0xF5, 0xE5, 0xE6, 0xFA, 0xE8, 0xE8, 0xF9, 0xE6, 0xE6, 0xF8, 0xE6, 0xE5, 0xFA, 0xEA, 
   0xE9, 0xFA, 0xEF, 0xED, 0xF7, 0xEA, 0xE9, 0xF4, 0xE7, 0xE6, 0xFF, 0xFA, 0xFD, 0xA2, 0x99, 0x9A, 
   0x4C, 0x4B, 0x4B, 0x41, 0x47, 0x46, 0x41, 0x48, 0x47, 0x45, 0x4B, 0x49, 0x38, 0x3E, 0x42, 0x41, 
   0x45, 0x50, 0x49, 0x4A, 0x52, 0x47, 0x45, 0x49, 0x50, 0x48, 0x49, 0x79, 0x6B, 0x6B, 0x83, 0x72, 
   0x6F, 0x86, 0x6E, 0x64, 0x8B, 0x72, 0x68, 0x9C, 0x82, 0x78, 0xAC, 0x91, 0x86, 0xC0, 0xA3, 0x99, 
   0xBE, 0x9E, 0x94, 0x8A, 0x76, 0x73, 0x48, 0x41, 0x43, 0x48, 0x46, 0x47, 0x4E, 0x55, 0x55, 0x55, 
   0x61, 0x60, 0x31, 0x3C, 0x3C, 0x2D, 0x37, 0x37, 0x3E, 0x42, 0x47, 0x46, 0x4B, 0x51, 0x6F, 0x7B, 
   0x7F, 0x7F, 0x8F, 0x91, 0x41, 0x4F, 0x51, 0x4C, 0x54, 0x57, 0x72, 0x78, 0x79, 0x74, 0x7B, 0x7C, 
   0x54, 0x5C, 0x5C, 0x4A, 0x53, 0x54, 0x49, 0x53, 0x56, 0x63, 0x6E, 0x71, 0x62, 0x6D, 0x70, 0x52, 
   0x52, 0x5C, 0x77, 0x70, 0x7B, 0xA1, 0x92, 0x9A, 0x9F, 0x84, 0x89, 0xA3, 0x7E, 0x7F, 0xA5, 0x76, 
   0x73, 0x9B, 0x6C, 0x67, 0x8B, 0x65, 0x5D, 0x85, 0x5E, 0x55, 0x80, 0x5B, 0x51, 0x77, 0x59, 0x4F, 
   0x66, 0x4F, 0x4B, 0x53, 0x42, 0x43, 0x40, 0x34, 0x34, 0x56, 0x4C, 0x48, 0x47, 0x3B, 0x37, 0x41, 
   0x32, 0x2B, 0x45, 0x31, 0x29, 0x59, 0x40, 0x36, 0x5F, 0x46, 0x3B, 0x63, 0x50, 0x43, 0x49, 0x39, 
   0x2F, 0x35, 0x2A, 0x24, 0x32, 0x29, 0x25, 0x32, 0x27, 0x22, 0x42, 0x38, 0x2F, 0x4E, 0x3F, 0x35, 
   0x6A, 0x55, 0x4A, 0x68, 0x52, 0x46, 0x54, 0x3C, 0x2E, 0x60, 0x47, 0x37, 0x67, 0x4B, 0x3A, 0x65, 
   0x4A, 0x37, 0x66, 0x4A, 0x39, 0x68, 0x4C, 0x3B, 0x69, 0x4D, 0x3C, 0x69, 0x4D, 0x3C, 0x69, 0x4D, 
   0x3C, 0x6B, 0x4F, 0x3D, 0x6B, 0x4E, 0x3F, 0x6B, 0x4D, 0x41, 0x6C, 0x4E, 0x41, 0x6C, 0x4E, 0x41, 
   0x6C, 0x4E, 0x41, 0x6C, 0x4E, 0x41, 0x6C, 0x4E, 0x41, 0x6A, 0x4F, 0x41, 0x6A, 0x4F, 0x41, 0x6A, 
   0x4F, 0x41, 0x68, 0x4D, 0x3F, 0x69, 0x4E, 0x40, 0x6C, 0x51, 0x43, 0x6D, 0x51, 0x43, 0x6A, 0x4D, 
   0x3E, 0x65, 0x48, 0x39, 0x6A, 0x4D, 0x3E, 0x69, 0x4C, 0x3D, 0x69, 0x4B, 0x3D, 0x69, 0x4D, 0x3D, 
   0x68, 0x4D, 0x3A, 0x67, 0x4C, 0x38, 0x67, 0x4C, 0x39, 0x68, 0x4D, 0x3A, 0x68, 0x4D, 0x39, 0x68, 
   0x4D, 0x39, 0x68, 0x4C, 0x3B, 0x68, 0x4B, 0x3C, 0x68, 0x4B, 0x3C, 0x68, 0x4B, 0x3C, 0x68, 0x4B, 
   0x3C, 0x68, 0x4B, 0x3C, 0x68, 0x4B, 0x3C, 0x68, 0x4B, 0x3C, 0x68, 0x4B, 0x3C, 0x68, 0x4B, 0x3C, 
   0x68, 0x4B, 0x3C, 0x68, 0x4B, 0x3C, 0x68, 0x4B, 0x3C, 0x68, 0x4C, 0x3D, 0x67, 0x4D, 0x3D, 0x67, 
   0x4D, 0x3D, 0x67, 0x4D, 0x3D, 0x67, 0x4D, 0x3D, 0x67, 0x4D, 0x3D, 0x67, 0x4D, 0x3D, 0x67, 0x4C, 
   0x3E, 0x67, 0x4C, 0x3E, 0x67, 0x4C, 0x3E, 0x68, 0x4D, 0x3F, 0x67, 0x4C, 0x3E, 0x66, 0x4B, 0x3D, 
   0x69, 0x4E, 0x40, 0x69, 0x4E, 0x40, 0xF5, 0xDD, 0xDC, 0xF5, 0xDE, 0xDC, 0xF6, 0xDF, 0xDD, 0xF6, 
   0xDF, 0xDD, 0xF9, 0xE2, 0xE0, 0xF7, 0xE0, 0xDE, 0xF5, 0xDF, 0xDD, 0xF4, 0xE1, 0xDE, 0xF5, 0xE2, 
   0xDF, 0xF2, 0xDF, 0xDC, 0xF3, 0xE0, 0xDD, 0xF4, 0xE1, 0xDE, 0xF4, 0xE1, 0xDE, 0xF3, 0xE0, 0xDD, 
   0xF0, 0xDD, 0xDA, 0xF3, 0xE0, 0xDD, 0xF5, 0xE2, 0xDF, 0xF5, 0xE2, 0xDF, 0xF5, 0xE2, 0xDF, 0xF5, 
   0xE2, 0xDF, 0xF7, 0xE4, 0xE1, 0xF6, 0xE3, 0xE0, 0xF6, 0xE3, 0xE0, 0xF6, 0xE3, 0xE0, 0xF5, 0xE2, 
   0xDF, 0xF4, 0xE1, 0xDE, 0xF0, 0xE5, 0xDD, 0xF0, 0xE6, 0xDC, 0xF0, 0xE3, 0xDA, 0xF0, 0xDF, 0xD8, 
   0xEF, 0xDB, 0xD6, 0xF0, 0xD9, 0xD4, 0xEB, 0xD3, 0xCF, 0xD1, 0xC2, 0xBF, 0xCF, 0xBF, 0xBD, 0xE3, 
   0xD5, 0xD4, 0xD7, 0xCF, 0xCE, 0xD4, 0xD3, 0xD2, 0xCB, 0xD1, 0xCF, 0x93, 0x9E, 0xA2, 0x4E, 0x5B, 
   0x65, 0x43, 0x4F, 0x58, 0x4E, 0x57, 0x5F, 0x5C, 0x5F, 0x66, 0x78, 0x73, 0x7A, 0xBD, 0xB5, 0xBC, 
   0xEE, 0xE8, 0xEE, 0x92, 0x91, 0x96, 0x4E, 0x54, 0x59, 0x41, 0x4D, 0x50, 0x49, 0x58, 0x5B, 0x44, 
   0x56, 0x57, 0x41, 0x4C, 0x54, 0x69, 0x6F, 0x7C, 0x59, 0x61, 0x6B, 0x96, 0xA0, 0xA7, 0xAD, 0xB9, 
   0xBD, 0x3E, 0x4B, 0x4C, 0x4E, 0x5B, 0x5B, 0x4F, 0x5D, 0x60, 0x42, 0x50, 0x52, 0x51, 0x5E, 0x61, 
   0x32, 0x3C, 0x42, 0x2F, 0x39, 0x3F, 0x56, 0x60, 0x67, 0x5F, 0x6C, 0x74, 0x5B, 0x66, 0x6E, 0xD0, 
   0xD1, 0xD7, 0xFD, 0xF3, 0xF6, 0xFA, 0xEB, 0xED, 0xF9, 0xE9, 0xE9, 0xFA, 0xEB, 0xE8, 0xFA, 0xEC, 
   0xE9, 0xF8, 0xEB, 0xE7, 0xF6, 0xE9, 0xE4, 0xF5, 0xE6, 0xE1, 0xF6, 0xE6, 0xE0, 0xF8, 0xE7, 0xE1, 
   0xF9, 0xE7, 0xE2, 0xF9, 0xE5, 0xE4, 0xF9, 0xE5, 0xE3, 0xFA, 0xE6, 0xE4, 0xF8, 0xE5, 0xE3, 0xF7, 
   0xE3, 0xE2, 0xF6, 0xE3, 0xE0, 0xF4, 0xDE, 0xD7, 0xD9, 0xC3, 0xBD, 0x92, 0x7E, 0x7B, 0x84, 0x7A, 
   0x7B, 0x76, 0x7A, 0x7E, 0x62, 0x73, 0x77, 0x55, 0x6A, 0x70, 0x56, 0x69, 0x71, 0x50, 0x62, 0x69, 
   0x51, 0x62, 0x68, 0x55, 0x61, 0x66, 0x8D, 0x92, 0x99, 0xC3, 0xC4, 0xC9, 0xF4, 0xEC, 0xEB, 0xF4, 
   0xEA, 0xE8, 0xF0, 0xE5, 0xE4, 0xF5, 0xE8, 0xE7, 0xF5, 0xE5, 0xE5, 0xF5, 0xE4, 0xE3, 0xF9, 0xE8, 
   0xE8, 0xF7, 0xE8, 0xE6, 0xF4, 0xE4, 0xE3, 0xF7, 0xE7, 0xE6, 0xF8, 0xE9, 0xE7, 0xEF, 0xE0, 0xDE, 
   0xEE, 0xDF, 0xDE, 0xFA, 0xEB, 0xEA, 0xF6, 0xE6, 0xE6, 0xF7, 0xE7, 0xE6, 0xF9, 0xEA, 0xE9, 0xF8, 
   0xE9, 0xE8, 0xF6, 0xE6, 0xE6, 0xF9, 0xE8, 0xE7, 0xF8, 0xE7, 0xE5, 0xFA, 0xE9, 0xE8, 0xF9, 0xEA, 
   0xE8, 0xF6, 0xE8, 0xE6, 0xF6, 0xE8, 0xE6, 0xF9, 0xEB, 0xE9, 0xFF, 0xF3, 0xF6, 0xC8, 0xBD, 0xBF, 
   0x46, 0x40, 0x41, 0x4E, 0x4F, 0x4F, 0x3C, 0x42, 0x41, 0x39, 0x42, 0x40, 0x3B, 0x44, 0x44, 0x41, 
   0x47, 0x4B, 0x42, 0x47, 0x4A, 0x46, 0x48, 0x49, 0x46, 0x45, 0x45, 0x53, 0x4E, 0x4E, 0x75, 0x6E, 
   0x6C, 0x82, 0x73, 0x6D, 0x84, 0x73, 0x6D, 0x91, 0x7A, 0x74, 0xA9, 0x92, 0x8C, 0xB0, 0x9C, 0x96, 
   0x76, 0x67, 0x60, 0x39, 0x34, 0x32, 0x47, 0x48, 0x4D, 0x51, 0x52, 0x57, 0x5B, 0x5E, 0x62, 0x4F, 
   0x50, 0x55, 0x24, 0x23, 0x28, 0x36, 0x33, 0x38, 0x4A, 0x47, 0x4C, 0x5B, 0x59, 0x5E, 0x5B, 0x5B, 
   0x5F, 0x52, 0x53, 0x56, 0x56, 0x57, 0x5A, 0x68, 0x65, 0x68, 0x61, 0x61, 0x63, 0x64, 0x69, 0x6A, 
   0x70, 0x74, 0x75, 0x51, 0x53, 0x54, 0x44, 0x47, 0x49, 0x45, 0x47, 0x49, 0x50, 0x51, 0x53, 0x77, 
   0x68, 0x6A, 0xC1, 0xA9, 0xAB, 0xCA, 0xAA, 0xAA, 0xC7, 0x9D, 0x9C, 0xBB, 0x8D, 0x89, 0xB5, 0x85, 
   0x7E, 0xAA, 0x7B, 0x74, 0x97, 0x71, 0x69, 0x91, 0x6F, 0x66, 0x82, 0x67, 0x5F, 0x6E, 0x5A, 0x52, 
   0x42, 0x31, 0x2E, 0x39, 0x28, 0x29, 0x47, 0x3C, 0x37, 0x49, 0x41, 0x36, 0x4F, 0x3F, 0x37, 0x53, 
   0x3E, 0x36, 0x49, 0x33, 0x2A, 0x5D, 0x47, 0x3F, 0x5F, 0x4B, 0x42, 0x42, 0x34, 0x2C, 0x38, 0x2B, 
   0x24, 0x35, 0x2B, 0x24, 0x31, 0x28, 0x20, 0x34, 0x2B, 0x22, 0x42, 0x3C, 0x2F, 0x45, 0x36, 0x28, 
   0x6D, 0x55, 0x47, 0x53, 0x3A, 0x2C, 0x5F, 0x44, 0x35, 0x62, 0x46, 0x36, 0x68, 0x4A, 0x3A, 0x66, 
   0x49, 0x37, 0x67, 0x4A, 0x3B, 0x68, 0x4B, 0x3C, 0x69, 0x4C, 0x3D, 0x6A, 0x4D, 0x3E, 0x6B, 0x4D, 
   0x3F, 0x6B, 0x4E, 0x3F, 0x6B, 0x4D, 0x40, 0x6C, 0x4E, 0x42, 0x6E, 0x50, 0x43, 0x6E, 0x50, 0x43, 
   0x6D, 0x4F, 0x42, 0x6D, 0x4F, 0x42, 0x6D, 0x4F, 0x42, 0x6C, 0x4F, 0x42, 0x6B, 0x4E, 0x40, 0x6B, 
   0x50, 0x42, 0x68, 0x4D, 0x3F, 0x69, 0x4F, 0x41, 0x69, 0x50, 0x42, 0x72, 0x56, 0x48, 0x5D, 0x3E, 
   0x2F, 0x5C, 0x3E, 0x2F, 0x69, 0x4B, 0x3C, 0x6A, 0x4D, 0x3E, 0x68, 0x4B, 0x3C, 0x68, 0x4D, 0x3D, 
   0x69, 0x4D, 0x38, 0x68, 0x4C, 0x37, 0x68, 0x4D, 0x38, 0x69, 0x4E, 0x3B, 0x66, 0x4B, 0x39, 0x68, 
   0x4C, 0x3B, 0x69, 0x4B, 0x3C, 0x69, 0x4B, 0x3C, 0x69, 0x4B, 0x3C, 0x69, 0x4B, 0x3C, 0x68, 0x4B, 
   0x3C, 0x68, 0x4C, 0x3D, 0x67, 0x4C, 0x3B, 0x68, 0x4C, 0x3A, 0x68, 0x4C, 0x3B, 0x68, 0x4C, 0x3C, 
   0x69, 0x4C, 0x3D, 0x69, 0x4B, 0x3D, 0x69, 0x4B, 0x3D, 0x68, 0x4C, 0x3E, 0x67, 0x4D, 0x3D, 0x67, 
   0x4D, 0x3D, 0x68, 0x4E, 0x3E, 0x68, 0x4E, 0x3E, 0x68, 0x4E, 0x3E, 0x68, 0x4E, 0x3E, 0x68, 0x4D, 
   0x3E, 0x68, 0x4D, 0x3E, 0x68, 0x4D, 0x3E, 0x68, 0x4E, 0x3E, 0x68, 0x4D, 0x3E, 0x67, 0x4D, 0x3E, 
   0x69, 0x4E, 0x3F, 0x69, 0x4E, 0x40, 0xF4, 0xDB, 0xD8, 0xF4, 0xDA, 0xD8, 0xF5, 0xDB, 0xD9, 0xF5, 
   0xDC, 0xDA, 0xFA, 0xE1, 0xDF, 0xF9, 0xE0, 0xDE, 0xF7, 0xDF, 0xDD, 0xF4, 0xE1, 0xDE, 0xF4, 0xE1, 
   0xDE, 0xF4, 0xE1, 0xDE, 0xF4, 0xE1, 0xDE, 0xF4, 0xE1, 0xDE, 0xF4, 0xE1, 0xDE, 0xF3, 0xE0, 0xDD, 
   0xF1, 0xDE, 0xDB, 0xF2, 0xDF, 0xDC, 0xF4, 0xE1, 0xDE, 0xF6, 0xE3, 0xE0, 0xF6, 0xE3, 0xE0, 0xF6, 
   0xE3, 0xE0, 0xF7, 0xE4, 0xE1, 0xF6, 0xE3, 0xE0, 0xF5, 0xE2, 0xDF, 0xF6, 0xE3, 0xE0, 0xF6, 0xE2, 
   0xDF, 0xF4, 0xE1, 0xDE, 0xEF, 0xE6, 0xDA, 0xEC, 0xE7, 0xD7, 0xEE, 0xE1, 0xD5, 0xF0, 0xDD, 0xD3, 
   0xF6, 0xDC, 0xD5, 0xFD, 0xDC, 0xD7, 0xF8, 0xD6, 0xD2, 0xF1, 0xD5, 0xD6, 0xE5, 0xCF, 0xCF, 0xE7, 
   0xDB, 0xD9, 0xEA, 0xE6, 0xE4, 0xD3, 0xD5, 0xD2, 0xA8, 0xAF, 0xA9, 0x7B, 0x7F, 0x83, 0x4B, 0x4D, 
   0x59, 0x48, 0x4F, 0x58, 0x61, 0x68, 0x6E, 0x98, 0x98, 0x9C, 0xFD, 0xF3, 0xF6, 0xFF, 0xFF, 0xFF, 
   0x90, 0x8A, 0x8B, 0x47, 0x46, 0x48, 0x51, 0x5B, 0x5C, 0x42, 0x55, 0x57, 0x4A, 0x5E, 0x61, 0x31, 
   0x46, 0x48, 0x49, 0x58, 0x62, 0x6A, 0x71, 0x80, 0x5F, 0x69, 0x73, 0xA7, 0xB0, 0xB8, 0x64, 0x6E, 
   0x73, 0x3F, 0x47, 0x4A, 0x51, 0x5A, 0x5A, 0x44, 0x50, 0x51, 0x3D, 0x49, 0x4A, 0x52, 0x5C, 0x5F, 
   0x3E, 0x46, 0x4D, 0x32, 0x3C, 0x43, 0x55, 0x5F, 0x68, 0x5E, 0x67, 0x71, 0x7E, 0x82, 0x8B, 0xF4, 
   0xEF, 0xF6, 0xF9, 0xEC, 0xF1, 0xFA, 0xEA, 0xEC, 0xF9, 0xE9, 0xE9, 0xF7, 0xEB, 0xE7, 0xF4, 0xE8, 
   0xE7, 0xF1, 0xE6, 0xE3, 0xF2, 0xE6, 0xE3, 0xF3, 0xE5, 0xE0, 0xF4, 0xE5, 0xDF, 0xF5, 0xE7, 0xDF, 
   0xF8, 0xE7, 0xE2, 0xF9, 0xE5, 0xE3, 0xF8, 0xE5, 0xE2, 0xF9, 0xE6, 0xE3, 0xF8, 0xE5, 0xE2, 0xF5, 
   0xE2, 0xDF, 0xF3, 0xDF, 0xDC, 0xEE, 0xD8, 0xD3, 0xE4, 0xC9, 0xC6, 0xA1, 0x86, 0x86, 0xBC, 0xAA, 
   0xAC, 0xA6, 0xA4, 0xA8, 0x4C, 0x5F, 0x62, 0x68, 0x7E, 0x80, 0x5D, 0x70, 0x72, 0x45, 0x58, 0x5A, 
   0x45, 0x57, 0x59, 0x59, 0x65, 0x68, 0x52, 0x56, 0x5B, 0xB2, 0xAF, 0xB4, 0xFE, 0xF8, 0xF5, 0xF4, 
   0xEB, 0xE8, 0xF0, 0xE5, 0xE3, 0xF2, 0xE5, 0xE3, 0xF0, 0xE1, 0xDF, 0xF4, 0xE1, 0xE0, 0xF7, 0xE7, 
   0xE6, 0xF2, 0xE6, 0xE4, 0xEE, 0xE1, 0xDF, 0xF4, 0xE8, 0xE6, 0xEF, 0xE4, 0xE2, 0xDC, 0xD0, 0xCE, 
   0xF5, 0xE9, 0xE7, 0xF7, 0xE9, 0xE6, 0xF6, 0xE7, 0xE5, 0xF7, 0xE8, 0xE6, 0xF8, 0xE9, 0xE7, 0xFA, 
   0xEB, 0xE9, 0xF8, 0xE9, 0xE6, 0xF7, 0xE8, 0xE6, 0xF2, 0xE3, 0xE1, 0xF4, 0xE5, 0xE3, 0xFA, 0xEB, 
   0xE9, 0xF7, 0xE8, 0xE6, 0xF6, 0xE7, 0xE5, 0xF7, 0xE8, 0xE6, 0xF5, 0xE4, 0xE7, 0xF2, 0xE4, 0xE6, 
   0x85, 0x7D, 0x7F, 0x47, 0x44, 0x45, 0x3F, 0x45, 0x44, 0x31, 0x3B, 0x39, 0x36, 0x3F, 0x3E, 0x3F, 
   0x45, 0x44, 0x3E, 0x45, 0x44, 0x4A, 0x4F, 0x4E, 0x47, 0x49, 0x4A, 0x43, 0x42, 0x43, 0x52, 0x51, 
   0x50, 0x74, 0x6E, 0x6B, 0x7C, 0x72, 0x6E, 0x8C, 0x78, 0x77, 0x9A, 0x85, 0x83, 0x7B, 0x6E, 0x6B, 
   0x43, 0x41, 0x3D, 0x3A, 0x3F, 0x3E, 0x5A, 0x5E, 0x63, 0x78, 0x79, 0x7D, 0x5C, 0x59, 0x5E, 0x69, 
   0x60, 0x66, 0x83, 0x75, 0x7C, 0xB5, 0xA6, 0xAD, 0xB7, 0xAB, 0xAF, 0xAC, 0xA1, 0xA3, 0xBD, 0xB2, 
   0xB5, 0xD3, 0xC7, 0xCA, 0xE6, 0xDB, 0xDD, 0xEC, 0xE0, 0xE3, 0xEF, 0xE7, 0xE8, 0xBC, 0xBB, 0xBC, 
   0x87, 0x85, 0x87, 0x4D, 0x49, 0x4C, 0x46, 0x42, 0x43, 0x44, 0x3E, 0x40, 0x52, 0x4A, 0x4C, 0xC0, 
   0xAA, 0xA6, 0xE3, 0xC3, 0xBD, 0xD9, 0xB0, 0xAB, 0xD1, 0xA2, 0x9C, 0xCE, 0x9F, 0x98, 0xBB, 0x91, 
   0x88, 0xAE, 0x86, 0x7D, 0xA2, 0x7F, 0x77, 0x8D, 0x71, 0x69, 0x75, 0x63, 0x5C, 0x60, 0x52, 0x4D, 
   0x3C, 0x2D, 0x2A, 0x43, 0x30, 0x30, 0x53, 0x45, 0x3C, 0x43, 0x3A, 0x2A, 0x49, 0x37, 0x29, 0x3E, 
   0x26, 0x1C, 0x50, 0x38, 0x2F, 0x5E, 0x4B, 0x43, 0x50, 0x41, 0x3A, 0x39, 0x2F, 0x2C, 0x38, 0x2F, 
   0x29, 0x30, 0x26, 0x1E, 0x34, 0x2B, 0x21, 0x2D, 0x25, 0x17, 0x37, 0x31, 0x21, 0x4A, 0x3A, 0x28, 
   0x63, 0x48, 0x38, 0x5B, 0x40, 0x30, 0x68, 0x4B, 0x3C, 0x5D, 0x3F, 0x30, 0x63, 0x44, 0x35, 0x69, 
   0x4A, 0x3B, 0x68, 0x4A, 0x3C, 0x68, 0x4A, 0x3D, 0x69, 0x4B, 0x3E, 0x6B, 0x4D, 0x40, 0x6B, 0x4D, 
   0x40, 0x6B, 0x4D, 0x40, 0x6B, 0x4D, 0x40, 0x6D, 0x4F, 0x42, 0x6E, 0x50, 0x43, 0x6E, 0x50, 0x43, 
   0x6E, 0x50, 0x43, 0x6E, 0x50, 0x43, 0x6E, 0x50, 0x43, 0x6D, 0x4F, 0x42, 0x6C, 0x4D, 0x41, 0x6B, 
   0x4F, 0x41, 0x6B, 0x51, 0x43, 0x6C, 0x52, 0x44, 0x65, 0x4E, 0x3F, 0x70, 0x55, 0x46, 0x58, 0x38, 
   0x29, 0x60, 0x42, 0x33, 0x6C, 0x4E, 0x3F, 0x6A, 0x4D, 0x3E, 0x67, 0x4B, 0x3C, 0x67, 0x4D, 0x3C, 
   0x6A, 0x4D, 0x38, 0x6A, 0x4D, 0x38, 0x69, 0x4D, 0x39, 0x68, 0x4C, 0x3B, 0x69, 0x4D, 0x3C, 0x68, 
   0x4C, 0x3D, 0x68, 0x4B, 0x3C, 0x6A, 0x4B, 0x3C, 0x69, 0x4B, 0x3C, 0x69, 0x4B, 0x3C, 0x68, 0x4B, 
   0x3C, 0x68, 0x4C, 0x3D, 0x66, 0x4C, 0x3B, 0x68, 0x4D, 0x39, 0x68, 0x4C, 0x3B, 0x68, 0x4C, 0x3C, 
   0x69, 0x4C, 0x3D, 0x69, 0x4B, 0x3E, 0x69, 0x4B, 0x3E, 0x68, 0x4C, 0x3E, 0x67, 0x4D, 0x3D, 0x67, 
   0x4D, 0x3D, 0x68, 0x4E, 0x3E, 0x68, 0x4E, 0x3E, 0x68, 0x4E, 0x3E, 0x68, 0x4E, 0x3E, 0x68, 0x4E, 
   0x3E, 0x68, 0x4E, 0x3E, 0x68, 0x4E, 0x3E, 0x68, 0x4E, 0x3E, 0x68, 0x4E, 0x3E, 0x68, 0x4E, 0x3E, 
   0x69, 0x4E, 0x3F, 0x69, 0x4E, 0x40, 0xF4, 0xDB, 0xD9, 0xF5, 0xDC, 0xDA, 0xF3, 0xDB, 0xD9, 0xEE, 
   0xD5, 0xD3, 0xF4, 0xDB, 0xD9, 0xFC, 0xE4, 0xE2, 0xF8, 0xE0, 0xDE, 0xF4, 0xE1, 0xDE, 0xF5, 0xE2, 
   0xDF, 0xF4, 0xE1, 0xDE, 0xF3, 0xE0, 0xDD, 0xF3, 0xE0, 0xDD, 0xF3, 0xE0, 0xDD, 0xF3, 0xE0, 0xDD, 
   0xF3, 0xE0, 0xDD, 0xF3, 0xE0, 0xDD, 0xF4, 0xE1, 0xDE, 0xF6, 0xE3, 0xE0, 0xF5, 0xE2, 0xDF, 0xF6, 
   0xE3, 0xE0, 0xF7, 0xE4, 0xE1, 0xF7, 0xE4, 0xE1, 0xF7, 0xE4, 0xE1, 0xF6, 0xE3, 0xE0, 0xF5, 0xE2, 
   0xDF, 0xF4, 0xE1, 0xDE, 0xF1, 0xE4, 0xD9, 0xEE, 0xE0, 0xD5, 0xEF, 0xDF, 0xD4, 0xF2, 0xDF, 0xD7, 
   0xF6, 0xDF, 0xD8, 0xF2, 0xD7, 0xD2, 0xED, 0xD2, 0xCE, 0xEE, 0xD9, 0xDB, 0xF6, 0xE5, 0xE7, 0xDB, 
   0xD2, 0xD2, 0x92, 0x8F, 0x8E, 0x67, 0x6B, 0x69, 0x43, 0x4C, 0x48, 0x3F, 0x45, 0x48, 0x4C, 0x50, 
   0x5A, 0x3F, 0x47, 0x50, 0x4C, 0x54, 0x5B, 0x62, 0x67, 0x6B, 0x97, 0x96, 0x98, 0xA2, 0x9B, 0x9D, 
   0x74, 0x70, 0x72, 0x56, 0x56, 0x58, 0x5B, 0x64, 0x66, 0x5B, 0x6D, 0x6F, 0x59, 0x6C, 0x6F, 0x3A, 
   0x4D, 0x51, 0x5D, 0x6D, 0x76, 0x62, 0x6C, 0x79, 0x4D, 0x57, 0x62, 0x77, 0x7F, 0x88, 0x3D, 0x44, 
   0x4A, 0x44, 0x4B, 0x4E, 0x53, 0x5A, 0x5B, 0x3F, 0x4A, 0x4C, 0x4B, 0x56, 0x58, 0x55, 0x5F, 0x62, 
   0x30, 0x39, 0x40, 0x43, 0x4C, 0x54, 0x61, 0x6A, 0x73, 0x56, 0x5D, 0x66, 0xB1, 0xB1, 0xBA, 0xF8, 
   0xF1, 0xF9, 0xF7, 0xE9, 0xEE, 0xF8, 0xE7, 0xEA, 0xF9, 0xEA, 0xE9, 0xF8, 0xEB, 0xE9, 0xF5, 0xE7, 
   0xE6, 0xF2, 0xE5, 0xE2, 0xF2, 0xE4, 0xE0, 0xF3, 0xE4, 0xDF, 0xF2, 0xE4, 0xDE, 0xF2, 0xE6, 0xDE, 
   0xF5, 0xE5, 0xE0, 0xF7, 0xE3, 0xE1, 0xF6, 0xE3, 0xE0, 0xF7, 0xE4, 0xE1, 0xF6, 0xE3, 0xE0, 0xF4, 
   0xE1, 0xDE, 0xF1, 0xDE, 0xDB, 0xEE, 0xD8, 0xD2, 0xED, 0xD4, 0xD1, 0xED, 0xD5, 0xD4, 0xDE, 0xCA, 
   0xCC, 0x8F, 0x88, 0x8A, 0x49, 0x52, 0x55, 0x5E, 0x6A, 0x6F, 0x56, 0x60, 0x64, 0x52, 0x5F, 0x62, 
   0x49, 0x55, 0x58, 0x67, 0x6E, 0x73, 0x81, 0x83, 0x89, 0xBF, 0xBC, 0xC1, 0xFD, 0xF4, 0xF1, 0xF2, 
   0xE7, 0xE5, 0xF1, 0xE5, 0xE3, 0xED, 0xE1, 0xDF, 0xE8, 0xD9, 0xD7, 0xF3, 0xE2, 0xE1, 0xF3, 0xE5, 
   0xE3, 0xF0, 0xE3, 0xE1, 0xF8, 0xEC, 0xEA, 0xF6, 0xEB, 0xE9, 0xCD, 0xC0, 0xBE, 0xF4, 0xE9, 0xE7, 
   0xF6, 0xEA, 0xE8, 0xF7, 0xE8, 0xE6, 0xF7, 0xE8, 0xE6, 0xF7, 0xE8, 0xE6, 0xF7, 0xE8, 0xE6, 0xF7, 
   0xE8, 0xE6, 0xF9, 0xEA, 0xE8, 0xF6, 0xE7, 0xE5, 0xF2, 0xE3, 0xE1, 0xF4, 0xE5, 0xE3, 0xF6, 0xE7, 
   0xE5, 0xF5, 0xE6, 0xE4, 0xF4, 0xE5, 0xE3, 0xF6, 0xE7, 0xE5, 0xF5, 0xE4, 0xE7, 0xFC, 0xEF, 0xF1, 
   0xD5, 0xCC, 0xCE, 0x4A, 0x47, 0x47, 0x3C, 0x40, 0x3F, 0x3D, 0x43, 0x42, 0x39, 0x3E, 0x3F, 0x38, 
   0x3C, 0x3E, 0x3E, 0x43, 0x45, 0x4A, 0x4E, 0x50, 0x49, 0x4A, 0x4C, 0x38, 0x36, 0x39, 0x5A, 0x56, 
   0x59, 0x78, 0x74, 0x72, 0x6D, 0x65, 0x62, 0x6C, 0x59, 0x59, 0x61, 0x4C, 0x4C, 0x4F, 0x40, 0x3F, 
   0x4A, 0x44, 0x42, 0x4F, 0x50, 0x4E, 0x69, 0x68, 0x69, 0x92, 0x8F, 0x90, 0xC4, 0xBD, 0xBF, 0xEE, 
   0xE3, 0xE5, 0xFD, 0xEF, 0xF2, 0xFF, 0xF1, 0xF4, 0xFF, 0xF1, 0xF3, 0xFF, 0xF3, 0xF4, 0xFE, 0xF1, 
   0xF2, 0xF8, 0xEA, 0xEC, 0xF6, 0xE8, 0xE9, 0xFE, 0xF0, 0xF1, 0xD8, 0xCC, 0xCD, 0x3F, 0x39, 0x39, 
   0x44, 0x3D, 0x3D, 0x56, 0x4D, 0x4E, 0x65, 0x5B, 0x5C, 0x7D, 0x72, 0x73, 0xAC, 0x9F, 0xA1, 0xEB, 
   0xD3, 0xD1, 0xE2, 0xC3, 0xBE, 0xDC, 0xB7, 0xB2, 0xDC, 0xB1, 0xAD, 0xD2, 0xA7, 0xA1, 0xCD, 0xA3, 
   0x9C, 0xBD, 0x98, 0x8F, 0xAB, 0x8C, 0x84, 0x8B, 0x72, 0x6B, 0x4C, 0x39, 0x32, 0x55, 0x44, 0x3F, 
   0x68, 0x55, 0x51, 0x68, 0x51, 0x50, 0x4D, 0x3B, 0x34, 0x45, 0x38, 0x29, 0x47, 0x33, 0x27, 0x50, 
   0x3A, 0x2F, 0x65, 0x51, 0x47, 0x62, 0x53, 0x4A, 0x38, 0x2D, 0x25, 0x39, 0x32, 0x2D, 0x36, 0x2D, 
   0x28, 0x34, 0x2A, 0x22, 0x2E, 0x23, 0x19, 0x36, 0x2A, 0x1E, 0x4D, 0x42, 0x32, 0x5F, 0x4D, 0x3C, 
   0x5C, 0x42, 0x33, 0x61, 0x47, 0x37, 0x65, 0x49, 0x3A, 0x5E, 0x40, 0x31, 0x69, 0x49, 0x3A, 0x6A, 
   0x4B, 0x3C, 0x68, 0x4A, 0x3D, 0x69, 0x4B, 0x3E, 0x6A, 0x4C, 0x3F, 0x6C, 0x4E, 0x41, 0x6C, 0x4E, 
   0x41, 0x6C, 0x4E, 0x41, 0x6C, 0x4E, 0x41, 0x6C, 0x4E, 0x41, 0x6E, 0x50, 0x43, 0x6E, 0x50, 0x43, 
   0x6E, 0x50, 0x43, 0x6E, 0x50, 0x43, 0x6E, 0x50, 0x43, 0x6D, 0x4F, 0x42, 0x6B, 0x4B, 0x3F, 0x6B, 
   0x4F, 0x41, 0x67, 0x4D, 0x3F, 0x61, 0x47, 0x39, 0x63, 0x4D, 0x3E, 0x67, 0x4C, 0x3D, 0x67, 0x48, 
   0x39, 0x70, 0x53, 0x44, 0x6B, 0x4E, 0x3F, 0x69, 0x4C, 0x3D, 0x68, 0x4B, 0x3C, 0x67, 0x4C, 0x3C, 
   0x6A, 0x4D, 0x38, 0x6A, 0x4C, 0x38, 0x69, 0x4C, 0x39, 0x67, 0x4B, 0x3A, 0x68, 0x4C, 0x3B, 0x63, 
   0x4A, 0x3A, 0x68, 0x4B, 0x3C, 0x6A, 0x4B, 0x3C, 0x68, 0x4B, 0x3C, 0x68, 0x4B, 0x3C, 0x68, 0x4B, 
   0x3C, 0x69, 0x4C, 0x3D, 0x66, 0x4C, 0x3B, 0x68, 0x4D, 0x39, 0x68, 0x4C, 0x3B, 0x68, 0x4C, 0x3C, 
   0x69, 0x4C, 0x3D, 0x69, 0x4B, 0x3E, 0x69, 0x4B, 0x3E, 0x68, 0x4C, 0x3E, 0x67, 0x4D, 0x3D, 0x67, 
   0x4D, 0x3D, 0x68, 0x4E, 0x3E, 0x68, 0x4E, 0x3E, 0x68, 0x4E, 0x3E, 0x68, 0x4E, 0x3E, 0x68, 0x4E, 
   0x3E, 0x68, 0x4E, 0x3E, 0x68, 0x4E, 0x3E, 0x68, 0x4E, 0x3E, 0x68, 0x4E, 0x3E, 0x68, 0x4E, 0x3E, 
   0x69, 0x4E, 0x3F, 0x69, 0x4E, 0x40, 0xF5, 0xDE, 0xDC, 0xF7, 0xE0, 0xDE, 0xF5, 0xDE, 0xDC, 0xF2, 
   0xDB, 0xD9, 0xE8, 0xD1, 0xCF, 0xED, 0xD5, 0xD3, 0xF6, 0xE1, 0xDE, 0xF3, 0xE0, 0xDE, 0xF4, 0xE1, 
   0xDE, 0xF3, 0xE0, 0xDD, 0xF2, 0xDF, 0xDC, 0xF2, 0xDF, 0xDC, 0xF2, 0xDF, 0xDC, 0xF3, 0xE0, 0xDD, 
   0xF4, 0xE1, 0xDE, 0xF3, 0xE0, 0xDD, 0xF3, 0xE0, 0xDD, 0xF6, 0xE3, 0xE0, 0xF6, 0xE3, 0xE0, 0xF4, 
   0xE1, 0xDE, 0xF5, 0xE2, 0xDF, 0xF5, 0xE2, 0xDF, 0xF6, 0xE3, 0xE0, 0xF6, 0xE3, 0xE0, 0xF5, 0xE2, 
   0xE0, 0xF4, 0xE1, 0xDE, 0xF4, 0xE1, 0xD9, 0xF1, 0xDE, 0xD6, 0xF1, 0xDE, 0xD7, 0xF0, 0xDD, 0xD6, 
   0xEF, 0xDD, 0xD7, 0xEC, 0xD9, 0xD4, 0xEF, 0xDC, 0xD7, 0xF7, 0xEA, 0xEA, 0xD1, 0xC8, 0xC8, 0x72, 
   0x6E, 0x6E, 0x3B, 0x3C, 0x3A, 0x4A, 0x50, 0x4E, 0x44, 0x4F, 0x4B, 0x4A, 0x51, 0x54, 0x41, 0x45, 
   0x4F, 0x62, 0x6A, 0x71, 0xBF, 0xC9, 0xCE, 0x9A, 0xA5, 0xA9, 0x52, 0x59, 0x5C, 0x5B, 0x5E, 0x62, 
   0x77, 0x74, 0x77, 0x6B, 0x6C, 0x70, 0x51, 0x5A, 0x5D, 0x4F, 0x60, 0x63, 0x4D, 0x60, 0x63, 0x5C, 
   0x6F, 0x75, 0x54, 0x66, 0x6F, 0x59, 0x67, 0x73, 0x73, 0x7F, 0x89, 0x5E, 0x67, 0x6F, 0x46, 0x4B, 
   0x51, 0x53, 0x56, 0x5A, 0x74, 0x77, 0x78, 0x51, 0x5A, 0x5D, 0x42, 0x4B, 0x4E, 0x30, 0x3A, 0x3E, 
   0x3D, 0x47, 0x4E, 0x4C, 0x53, 0x5B, 0x5A, 0x61, 0x6A, 0x67, 0x6A, 0x73, 0xD4, 0xCF, 0xD7, 0xF6, 
   0xEF, 0xF6, 0xF7, 0xE9, 0xED, 0xF8, 0xE7, 0xE9, 0xF9, 0xEA, 0xE9, 0xF8, 0xE9, 0xE7, 0xF8, 0xE5, 
   0xE4, 0xF6, 0xE3, 0xE1, 0xF4, 0xE3, 0xE0, 0xF1, 0xE3, 0xDE, 0xEF, 0xE3, 0xDD, 0xEE, 0xE4, 0xDB, 
   0xF2, 0xE3, 0xDD, 0xF5, 0xE1, 0xDF, 0xF4, 0xE1, 0xDE, 0xF6, 0xE3, 0xE0, 0xF5, 0xE2, 0xDF, 0xF4, 
   0xE1, 0xDF, 0xF3, 0xE0, 0xDD, 0xED, 0xD9, 0xD4, 0xF2, 0xDB, 0xD8, 0xF2, 0xD8, 0xD7, 0xFA, 0xE4, 
   0xE4, 0xE0, 0xD2, 0xD4, 0xAE, 0xAC, 0xAF, 0x68, 0x68, 0x6C, 0xB5, 0xB5, 0xB9, 0xD1, 0xD4, 0xD8, 
   0x63, 0x67, 0x6A, 0x5E, 0x61, 0x65, 0x5B, 0x5B, 0x5F, 0xD5, 0xD1, 0xD6, 0xF5, 0xEC, 0xEA, 0xF1, 
   0xE6, 0xE3, 0xF3, 0xE7, 0xE5, 0xEC, 0xDF, 0xDD, 0xEC, 0xDD, 0xDB, 0xF7, 0xE8, 0xE6, 0xF4, 0xE6, 
   0xE4, 0xF8, 0xEC, 0xEA, 0xF3, 0xEA, 0xE8, 0xB4, 0xA7, 0xA5, 0xDF, 0xD5, 0xD3, 0xFC, 0xF0, 0xEE, 
   0xF4, 0xE7, 0xE5, 0xF6, 0xE8, 0xE6, 0xF8, 0xE9, 0xE7, 0xF7, 0xE8, 0xE6, 0xF7, 0xE8, 0xE6, 0xF3, 
   0xE4, 0xE2, 0xF7, 0xE8, 0xE6, 0xEA, 0xDB, 0xD9, 0xE7, 0xD8, 0xD6, 0xF7, 0xE8, 0xE6, 0xF5, 0xE6, 
   0xE4, 0xF3, 0xE4, 0xE2, 0xF4, 0xE5, 0xE3, 0xF6, 0xE7, 0xE6, 0xF8, 0xE7, 0xEA, 0xF5, 0xE7, 0xE8, 
   0xFF, 0xF8, 0xF9, 0xBB, 0xB6, 0xB7, 0x48, 0x46, 0x47, 0x2D, 0x2E, 0x2E, 0x3E, 0x41, 0x43, 0x36, 
   0x38, 0x3D, 0x35, 0x38, 0x3C, 0x33, 0x33, 0x37, 0x49, 0x49, 0x4D, 0x42, 0x3F, 0x44, 0x55, 0x51, 
   0x56, 0x51, 0x52, 0x50, 0x66, 0x62, 0x60, 0x5F, 0x50, 0x51, 0x50, 0x3D, 0x3F, 0x5C, 0x4B, 0x4C, 
   0x69, 0x5E, 0x5F, 0x97, 0x92, 0x91, 0xCC, 0xC7, 0xC6, 0xEB, 0xE4, 0xE2, 0xF9, 0xEE, 0xEE, 0xF6, 
   0xE8, 0xE8, 0xF3, 0xE2, 0xE3, 0xE9, 0xD7, 0xD7, 0xF0, 0xE0, 0xDE, 0xF7, 0xE7, 0xE5, 0xF4, 0xE5, 
   0xE2, 0xF3, 0xE4, 0xE1, 0xF4, 0xE5, 0xE2, 0xF1, 0xE2, 0xDF, 0xED, 0xDF, 0xDD, 0xBF, 0xB2, 0xAF, 
   0xD3, 0xC5, 0xC3, 0xE3, 0xD5, 0xD2, 0xEC, 0xDC, 0xDA, 0xF2, 0xE0, 0xDE, 0xF0, 0xDC, 0xDB, 0xE5, 
   0xCD, 0xCA, 0xE6, 0xCA, 0xC6, 0xE6, 0xC5, 0xC1, 0xE4, 0xBF, 0xBB, 0xDB, 0xB5, 0xB0, 0xCA, 0xA4, 
   0x9F, 0xC8, 0xA6, 0x9F, 0xAB, 0x90, 0x89, 0x6F, 0x57, 0x51, 0x6E, 0x5A, 0x53, 0x7F, 0x6B, 0x66, 
   0x91, 0x79, 0x76, 0x7A, 0x5D, 0x5D, 0x5E, 0x47, 0x40, 0x6B, 0x58, 0x4A, 0x66, 0x51, 0x45, 0x62, 
   0x4E, 0x45, 0x69, 0x58, 0x50, 0x4B, 0x42, 0x39, 0x38, 0x31, 0x29, 0x37, 0x32, 0x2D, 0x3B, 0x34, 
   0x2E, 0x35, 0x2B, 0x23, 0x2B, 0x1E, 0x15, 0x3F, 0x2D, 0x22, 0x61, 0x4F, 0x41, 0x58, 0x42, 0x32, 
   0x61, 0x46, 0x36, 0x64, 0x4A, 0x3A, 0x64, 0x47, 0x38, 0x68, 0x4A, 0x3B, 0x68, 0x49, 0x3A, 0x6B, 
   0x4C, 0x3D, 0x6A, 0x4C, 0x3F, 0x69, 0x4B, 0x3E, 0x6B, 0x4D, 0x40, 0x6D, 0x4F, 0x42, 0x6D, 0x4F, 
   0x42, 0x6D, 0x4F, 0x42, 0x6C, 0x4E, 0x41, 0x6C, 0x4E, 0x41, 0x6E, 0x50, 0x43, 0x6E, 0x50, 0x43, 
   0x6E, 0x50, 0x43, 0x6E, 0x50, 0x43, 0x6E, 0x50, 0x43, 0x6C, 0x4E, 0x41, 0x6E, 0x50, 0x43, 0x6F, 
   0x53, 0x45, 0x5B, 0x41, 0x33, 0x60, 0x46, 0x38, 0x53, 0x3C, 0x2D, 0x41, 0x28, 0x19, 0x57, 0x3A, 
   0x2B, 0x6B, 0x4E, 0x3F, 0x6D, 0x50, 0x41, 0x69, 0x4C, 0x3D, 0x68, 0x4B, 0x3C, 0x69, 0x4C, 0x3C, 
   0x6A, 0x4D, 0x39, 0x6A, 0x4C, 0x39, 0x69, 0x4C, 0x3A, 0x68, 0x4E, 0x3D, 0x67, 0x4D, 0x3D, 0x65, 
   0x4D, 0x3E, 0x69, 0x4D, 0x3F, 0x68, 0x4B, 0x3C, 0x68, 0x4B, 0x3C, 0x68, 0x4B, 0x3C, 0x68, 0x4B, 
   0x3C, 0x69, 0x4C, 0x3D, 0x68, 0x4B, 0x3B, 0x68, 0x4D, 0x39, 0x68, 0x4C, 0x3B, 0x68, 0x4C, 0x3C, 
   0x69, 0x4C, 0x3D, 0x69, 0x4B, 0x3E, 0x69, 0x4B, 0x3E, 0x68, 0x4C, 0x3E, 0x67, 0x4D, 0x3D, 0x67, 
   0x4D, 0x3D, 0x68, 0x4E, 0x3E, 0x68, 0x4E, 0x3E, 0x68, 0x4E, 0x3E, 0x68, 0x4E, 0x3E, 0x68, 0x4E, 
   0x3E, 0x68, 0x4E, 0x3E, 0x68, 0x4E, 0x3E, 0x68, 0x4E, 0x3E, 0x68, 0x4E, 0x3E, 0x68, 0x4E, 0x3E, 
   0x69, 0x4E, 0x3F, 0x69, 0x4E, 0x40, 0xF6, 0xDF, 0xDD, 0xF5, 0xDE, 0xDC, 0xF7, 0xE0, 0xDE, 0xF7, 
   0xE0, 0xDE, 0xF4, 0xDD, 0xDB, 0xEB, 0xD4, 0xD2, 0xEA, 0xD4, 0xD2, 0xF1, 0xDE, 0xDB, 0xF2, 0xDF, 
   0xDC, 0xF0, 0xDD, 0xDA, 0xF2, 0xDF, 0xDC, 0xF2, 0xDF, 0xDC, 0xF2, 0xDF, 0xDC, 0xF3, 0xE0, 0xDD, 
   0xF5, 0xE2, 0xDF, 0xF4, 0xE1, 0xDE, 0xF3, 0xE0, 0xDD, 0xF6, 0xE3, 0xE0, 0xF6, 0xE3, 0xE0, 0xF4, 
   0xE1, 0xDE, 0xF4, 0xE1, 0xDE, 0xF5, 0xE2, 0xDF, 0xF6, 0xE3, 0xE0, 0xF6, 0xE3, 0xE0, 0xF5, 0xE2, 
   0xE0, 0xF4, 0xE1, 0xDE, 0xF6, 0xE0, 0xDA, 0xF8, 0xE0, 0xD9, 0xF5, 0xDF, 0xD9, 0xF0, 0xDE, 0xD8, 
   0xEB, 0xDC, 0xD7, 0xEB, 0xDD, 0xDA, 0xF9, 0xEC, 0xEA, 0xBF, 0xB8, 0xB9, 0x61, 0x5D, 0x5E, 0x6D, 
   0x6E, 0x6E, 0x5F, 0x63, 0x62, 0x3E, 0x46, 0x45, 0x3A, 0x47, 0x44, 0x46, 0x4E, 0x51, 0x45, 0x49, 
   0x52, 0x5D, 0x66, 0x6C, 0x99, 0xA4, 0xA8, 0x71, 0x7E, 0x82, 0x5A, 0x6A, 0x6D, 0x73, 0x7F, 0x83, 
   0xD3, 0xD2, 0xD6, 0x7E, 0x81, 0x85, 0x55, 0x5F, 0x62, 0x58, 0x69, 0x6D, 0x52, 0x65, 0x69, 0x49, 
   0x5C, 0x61, 0x4B, 0x5E, 0x68, 0x4F, 0x61, 0x6C, 0x69, 0x78, 0x81, 0x39, 0x42, 0x49, 0x5B, 0x5E, 
   0x64, 0x5B, 0x5A, 0x5E, 0x63, 0x62, 0x64, 0x3E, 0x43, 0x46, 0x38, 0x40, 0x43, 0x37, 0x42, 0x45, 
   0x50, 0x5A, 0x61, 0x4C, 0x54, 0x5B, 0x62, 0x66, 0x70, 0x86, 0x84, 0x8C, 0xF3, 0xEC, 0xF0, 0xF4, 
   0xED, 0xEF, 0xF8, 0xEA, 0xED, 0xF7, 0xE8, 0xEA, 0xF8, 0xE9, 0xEA, 0xF6, 0xE6, 0xE4, 0xF7, 0xE3, 
   0xE2, 0xF4, 0xE1, 0xDF, 0xF2, 0xE0, 0xDD, 0xF1, 0xE2, 0xDE, 0xF0, 0xE3, 0xDD, 0xED, 0xE2, 0xDA, 
   0xF0, 0xE2, 0xDC, 0xF3, 0xE0, 0xDD, 0xF2, 0xDF, 0xDC, 0xF5, 0xE2, 0xDF, 0xF7, 0xE4, 0xE1, 0xF6, 
   0xE3, 0xE0, 0xF6, 0xE3, 0xE0, 0xF5, 0xE2, 0xDD, 0xF8, 0xE3, 0xDF, 0xF9, 0xE0, 0xE0, 0xF6, 0xDE, 
   0xDE, 0xED, 0xDB, 0xDC, 0xB4, 0xAA, 0xAC, 0xAE, 0xA4, 0xA6, 0xDE, 0xD4, 0xD8, 0x7B, 0x75, 0x78, 
   0x80, 0x7E, 0x80, 0x7A, 0x79, 0x7C, 0x73, 0x72, 0x75, 0xFC, 0xF8, 0xFA, 0xF6, 0xEA, 0xE8, 0xF6, 
   0xEA, 0xE8, 0xF4, 0xE7, 0xE5, 0xF4, 0xE7, 0xE5, 0xF5, 0xE8, 0xE6, 0xF5, 0xE9, 0xE7, 0xF6, 0xE9, 
   0xE7, 0xFC, 0xEF, 0xED, 0xD8, 0xCB, 0xC9, 0xB6, 0xAB, 0xA9, 0xFA, 0xEF, 0xED, 0xF7, 0xEA, 0xE8, 
   0xF3, 0xE5, 0xE3, 0xF6, 0xE7, 0xE5, 0xF8, 0xE9, 0xE7, 0xF7, 0xE8, 0xE6, 0xF7, 0xE8, 0xE6, 0xF6, 
   0xE7, 0xE5, 0xF4, 0xE5, 0xE3, 0xE2, 0xD3, 0xD1, 0xEB, 0xDC, 0xDA, 0xF7, 0xE8, 0xE6, 0xF6, 0xE7, 
   0xE5, 0xF6, 0xE7, 0xE5, 0xF5, 0xE6, 0xE4, 0xF6, 0xE7, 0xE5, 0xF5, 0xE7, 0xE8, 0xF6, 0xE9, 0xEA, 
   0xF4, 0xEB, 0xEB, 0xF8, 0xF1, 0xF1, 0xD7, 0xD3, 0xD3, 0x8D, 0x89, 0x88, 0x3B, 0x39, 0x3A, 0x3A, 
   0x38, 0x3D, 0x3D, 0x39, 0x3E, 0x3E, 0x3A, 0x3F, 0x44, 0x40, 0x45, 0x38, 0x34, 0x39, 0x33, 0x2F, 
   0x34, 0x60, 0x5F, 0x5F, 0x7C, 0x77, 0x78, 0x75, 0x69, 0x6B, 0x84, 0x74, 0x77, 0xA9, 0x98, 0x9B, 
   0xDE, 0xD0, 0xD3, 0xF6, 0xEA, 0xE8, 0xF9, 0xEE, 0xE8, 0xF3, 0xE6, 0xE0, 0xF1, 0xE3, 0xDE, 0xF3, 
   0xE4, 0xDE, 0xF7, 0xE3, 0xDF, 0xF2, 0xDE, 0xDA, 0xF4, 0xE1, 0xDD, 0xF8, 0xE5, 0xE0, 0xF9, 0xE7, 
   0xE2, 0xF6, 0xE3, 0xDF, 0xF5, 0xE2, 0xDD, 0xF6, 0xE4, 0xDF, 0xF5, 0xE2, 0xDD, 0xFF, 0xEF, 0xEA, 
   0xFD, 0xE9, 0xE4, 0xF4, 0xDF, 0xDA, 0xEF, 0xD9, 0xD4, 0xEA, 0xD2, 0xCF, 0xF0, 0xD6, 0xD2, 0xEC, 
   0xD1, 0xD0, 0xEC, 0xD1, 0xD0, 0xE5, 0xC8, 0xC7, 0xC5, 0xA4, 0xA1, 0xDB, 0xBA, 0xB6, 0xCD, 0xAB, 
   0xA6, 0xC5, 0xA9, 0xA3, 0x8E, 0x7B, 0x74, 0x84, 0x6F, 0x68, 0x8D, 0x76, 0x70, 0x9C, 0x83, 0x7F, 
   0x9D, 0x81, 0x7E, 0x9C, 0x7C, 0x7A, 0x91, 0x75, 0x6E, 0x71, 0x59, 0x4E, 0x63, 0x4C, 0x43, 0x6A, 
   0x59, 0x50, 0x6C, 0x60, 0x57, 0x35, 0x2F, 0x26, 0x35, 0x32, 0x2A, 0x31, 0x2E, 0x29, 0x3D, 0x37, 
   0x31, 0x35, 0x2A, 0x22, 0x34, 0x24, 0x1A, 0x54, 0x3F, 0x34, 0x60, 0x49, 0x3C, 0x50, 0x39, 0x29, 
   0x65, 0x4B, 0x3B, 0x68, 0x4C, 0x3D, 0x66, 0x49, 0x3A, 0x64, 0x46, 0x37, 0x65, 0x46, 0x37, 0x6A, 
   0x4B, 0x3C, 0x6A, 0x4C, 0x3F, 0x6A, 0x4C, 0x3F, 0x6B, 0x4D, 0x40, 0x6D, 0x4F, 0x42, 0x6D, 0x4F, 
   0x42, 0x6D, 0x4F, 0x42, 0x6C, 0x4E, 0x41, 0x6C, 0x4E, 0x41, 0x6E, 0x50, 0x43, 0x6E, 0x50, 0x43, 
   0x6E, 0x50, 0x43, 0x6E, 0x50, 0x43, 0x6E, 0x50, 0x43, 0x6D, 0x4F, 0x42, 0x6D, 0x4F, 0x42, 0x55, 
   0x38, 0x2B, 0x50, 0x37, 0x28, 0x64, 0x4A, 0x3C, 0x57, 0x40, 0x31, 0x4E, 0x36, 0x27, 0x5F, 0x46, 
   0x36, 0x6B, 0x52, 0x42, 0x67, 0x4D, 0x3D, 0x68, 0x4D, 0x3D, 0x68, 0x4B, 0x3C, 0x69, 0x4B, 0x3C, 
   0x6B, 0x4C, 0x39, 0x6A, 0x4C, 0x3A, 0x69, 0x4C, 0x3B, 0x64, 0x4A, 0x3A, 0x67, 0x4E, 0x3E, 0x64, 
   0x4F, 0x40, 0x62, 0x4A, 0x3B, 0x66, 0x4D, 0x3D, 0x65, 0x4C, 0x3C, 0x66, 0x4C, 0x3C, 0x67, 0x4C, 
   0x3C, 0x69, 0x4C, 0x3D, 0x68, 0x4B, 0x3B, 0x68, 0x4D, 0x39, 0x68, 0x4C, 0x3B, 0x68, 0x4C, 0x3C, 
   0x69, 0x4C, 0x3D, 0x69, 0x4B, 0x3E, 0x69, 0x4B, 0x3E, 0x68, 0x4C, 0x3E, 0x67, 0x4D, 0x3D, 0x67, 
   0x4D, 0x3D, 0x68, 0x4E, 0x3E, 0x68, 0x4E, 0x3E, 0x68, 0x4E, 0x3E, 0x68, 0x4E, 0x3E, 0x68, 0x4E, 
   0x3E, 0x68, 0x4E, 0x3E, 0x68, 0x4E, 0x3E, 0x68, 0x4E, 0x3E, 0x68, 0x4E, 0x3E, 0x68, 0x4E, 0x3E, 
   0x69, 0x4E, 0x3F, 0x69, 0x4E, 0x40, 0xF7, 0xE1, 0xE0, 0xF7, 0xE1, 0xE0, 0xF5, 0xE0, 0xDE, 0xF5, 
   0xDF, 0xDD, 0xF9, 0xE3, 0xE1, 0xF8, 0xE3, 0xE1, 0xEE, 0xD9, 0xD7, 0xED, 0xDA, 0xD7, 0xF2, 0xDF, 
   0xDC, 0xF2, 0xDF, 0xDC, 0xF2, 0xDF, 0xDC, 0xF3, 0xE0, 0xDD, 0xF4, 0xE1, 0xDE, 0xF4, 0xE1, 0xDE, 
   0xF6, 0xE3, 0xE0, 0xF5, 0xE2, 0xDF, 0xF5, 0xE2, 0xDF, 0xF5, 0xE2, 0xDF, 0xF4, 0xE1, 0xDE, 0xF6, 
   0xE3, 0xE0, 0xF7, 0xE4, 0xE1, 0xF6, 0xE3, 0xE0, 0xF7, 0xE4, 0xE1, 0xF6, 0xE3, 0xE0, 0xF4, 0xE1, 
   0xDE, 0xF1, 0xDD, 0xDB, 0xF5, 0xDE, 0xDA, 0xF6, 0xDF, 0xD9, 0xF2, 0xDE, 0xD9, 0xEA, 0xDA, 0xD7, 
   0xEF, 0xE6, 0xE3, 0xF0, 0xEA, 0xE8, 0xDA, 0xD4, 0xD3, 0x84, 0x85, 0x85, 0x9B, 0x9C, 0x9C, 0x98, 
   0x9B, 0x9A, 0x9C, 0xA2, 0xA1, 0x92, 0x9A, 0x99, 0x52, 0x5C, 0x5A, 0x3D, 0x46, 0x47, 0x44, 0x49, 
   0x4F, 0x52, 0x5B, 0x5F, 0x3F, 0x49, 0x4D, 0x47, 0x55, 0x59, 0x5B, 0x6D, 0x72, 0x82, 0x94, 0x99, 
   0xDD, 0xE0, 0xE4, 0xD4, 0xDB, 0xDE, 0xAE, 0xBB, 0xBD, 0x53, 0x65, 0x6B, 0x4F, 0x62, 0x68, 0x43, 
   0x54, 0x5B, 0x4C, 0x5D, 0x67, 0x49, 0x5C, 0x67, 0x54, 0x64, 0x6D, 0x5D, 0x66, 0x6D, 0x96, 0x9A, 
   0xA0, 0x5B, 0x59, 0x5E, 0x83, 0x82, 0x84, 0x57, 0x5B, 0x5F, 0x3B, 0x42, 0x45, 0x4B, 0x56, 0x5A, 
   0x55, 0x61, 0x67, 0x50, 0x57, 0x5F, 0x5A, 0x5D, 0x67, 0xA2, 0x9D, 0xA4, 0xFF, 0xF5, 0xF8, 0xF4, 
   0xEC, 0xEE, 0xF4, 0xE9, 0xEB, 0xF6, 0xEB, 0xEB, 0xF5, 0xE9, 0xE9, 0xF8, 0xEA, 0xEA, 0xF8, 0xE4, 
   0xE3, 0xF0, 0xDC, 0xDA, 0xED, 0xDB, 0xD8, 0xF0, 0xE1, 0xDB, 0xF1, 0xE1, 0xDB, 0xEF, 0xE2, 0xDA, 
   0xF1, 0xE2, 0xDC, 0xF2, 0xDF, 0xDC, 0xF3, 0xE0, 0xDD, 0xF3, 0xE0, 0xDD, 0xF6, 0xE3, 0xE0, 0xF6, 
   0xE3, 0xE0, 0xF6, 0xE4, 0xE0, 0xF8, 0xE7, 0xE2, 0xF7, 0xE3, 0xE0, 0xF6, 0xDF, 0xDE, 0xF6, 0xE0, 
   0xDF, 0xF3, 0xDF, 0xDF, 0xE8, 0xDA, 0xDA, 0xF9, 0xE7, 0xE9, 0xDE, 0xCC, 0xCE, 0x85, 0x79, 0x7B, 
   0xCC, 0xC6, 0xC5, 0x73, 0x70, 0x6F, 0xC0, 0xBA, 0xBB, 0xFB, 0xF4, 0xF4, 0xF5, 0xE8, 0xE6, 0xF2, 
   0xE6, 0xE4, 0xEF, 0xE2, 0xE0, 0xF1, 0xE4, 0xE2, 0xF3, 0xE8, 0xE6, 0xE7, 0xDE, 0xDC, 0xD9, 0xCD, 
   0xCB, 0xF5, 0xEB, 0xE9, 0xE4, 0xD7, 0xD5, 0xF2, 0xE6, 0xE4, 0xF7, 0xEA, 0xE8, 0xF5, 0xE8, 0xE6, 
   0xF7, 0xE9, 0xE7, 0xF9, 0xEA, 0xE8, 0xF8, 0xE9, 0xE7, 0xF7, 0xE8, 0xE6, 0xF5, 0xE6, 0xE4, 0xFA, 
   0xEB, 0xE9, 0xEC, 0xDE, 0xDC, 0xEB, 0xDC, 0xDA, 0xF6, 0xE7, 0xE5, 0xF6, 0xE7, 0xE5, 0xF7, 0xE8, 
   0xE6, 0xF7, 0xE8, 0xE6, 0xF7, 0xE8, 0xE6, 0xF7, 0xE8, 0xE6, 0xF6, 0xE8, 0xE9, 0xF5, 0xE8, 0xE9, 
   0xF7, 0xEA, 0xEB, 0xF4, 0xE8, 0xE9, 0xFF, 0xF7, 0xF7, 0xFF, 0xF6, 0xF5, 0xB3, 0xA9, 0xAC, 0x86, 
   0x7D, 0x83, 0x74, 0x6B, 0x71, 0x79, 0x70, 0x76, 0x7C, 0x73, 0x79, 0x84, 0x7B, 0x81, 0x97, 0x8F, 
   0x95, 0xB7, 0xB4, 0xB4, 0xC9, 0xC4, 0xC4, 0xEC, 0xE1, 0xE2, 0xFB, 0xEC, 0xED, 0xFE, 0xEC, 0xED, 
   0xF6, 0xE7, 0xE8, 0xF2, 0xE2, 0xE0, 0xEF, 0xDE, 0xD7, 0xF2, 0xE1, 0xDA, 0xF6, 0xE4, 0xDD, 0xF6, 
   0xE3, 0xDC, 0xF6, 0xE1, 0xDB, 0xFD, 0xE6, 0xE0, 0xF6, 0xE1, 0xDB, 0xF7, 0xE1, 0xDB, 0xFD, 0xE7, 
   0xE1, 0xFD, 0xE8, 0xE2, 0xFA, 0xE5, 0xDF, 0xF5, 0xE0, 0xDA, 0xF7, 0xE1, 0xDB, 0xF6, 0xDF, 0xD9, 
   0xF2, 0xDA, 0xD4, 0xF1, 0xD7, 0xD1, 0xF3, 0xD8, 0xD3, 0xF3, 0xD7, 0xD2, 0xEC, 0xCF, 0xCA, 0xF2, 
   0xD6, 0xD7, 0xF2, 0xD8, 0xDA, 0x96, 0x7C, 0x7C, 0xAC, 0x91, 0x8F, 0xE3, 0xC7, 0xC4, 0xD5, 0xB6, 
   0xB2, 0xD5, 0xBB, 0xB6, 0x7D, 0x6B, 0x65, 0x67, 0x52, 0x4D, 0xB9, 0xA1, 0x9C, 0xBF, 0xA3, 0x9F, 
   0xA7, 0x88, 0x84, 0x9F, 0x7E, 0x7A, 0x98, 0x7A, 0x73, 0x6E, 0x55, 0x4B, 0x6D, 0x5A, 0x51, 0x6A, 
   0x5C, 0x53, 0x46, 0x3D, 0x35, 0x36, 0x33, 0x2A, 0x37, 0x34, 0x2C, 0x36, 0x31, 0x2C, 0x3C, 0x35, 
   0x2F, 0x32, 0x26, 0x1E, 0x4E, 0x3B, 0x33, 0x64, 0x4D, 0x42, 0x4C, 0x30, 0x24, 0x53, 0x39, 0x2A, 
   0x63, 0x49, 0x39, 0x5C, 0x41, 0x32, 0x65, 0x48, 0x39, 0x64, 0x46, 0x37, 0x69, 0x49, 0x3A, 0x69, 
   0x4A, 0x3B, 0x6B, 0x4D, 0x40, 0x6C, 0x4E, 0x41, 0x6D, 0x4F, 0x42, 0x6D, 0x4F, 0x42, 0x6D, 0x4F, 
   0x42, 0x6D, 0x4F, 0x42, 0x6E, 0x50, 0x43, 0x6E, 0x50, 0x43, 0x6E, 0x50, 0x43, 0x6E, 0x50, 0x43, 
   0x6E, 0x50, 0x43, 0x6D, 0x4F, 0x42, 0x6C, 0x4E, 0x41, 0x6E, 0x50, 0x43, 0x69, 0x4B, 0x3E, 0x5C, 
   0x3F, 0x32, 0x61, 0x47, 0x39, 0x69, 0x4F, 0x41, 0x5D, 0x46, 0x37, 0x62, 0x4C, 0x3B, 0x68, 0x52, 
   0x41, 0x66, 0x4E, 0x3E, 0x68, 0x4E, 0x3E, 0x68, 0x4C, 0x3D, 0x6A, 0x4C, 0x3E, 0x6C, 0x4E, 0x3F, 
   0x6F, 0x4E, 0x3D, 0x6A, 0x4C, 0x3B, 0x67, 0x4C, 0x3B, 0x68, 0x4F, 0x3F, 0x6A, 0x54, 0x45, 0x4D, 
   0x39, 0x2C, 0x43, 0x2F, 0x20, 0x5D, 0x47, 0x36, 0x65, 0x4D, 0x3D, 0x67, 0x4D, 0x3D, 0x67, 0x4B, 
   0x3C, 0x68, 0x4B, 0x3C, 0x6A, 0x4B, 0x3C, 0x68, 0x4D, 0x39, 0x69, 0x4D, 0x3C, 0x6A, 0x4E, 0x3E, 
   0x6A, 0x4C, 0x3E, 0x69, 0x4B, 0x3E, 0x69, 0x4B, 0x3E, 0x69, 0x4D, 0x3E, 0x67, 0x4D, 0x3E, 0x68, 
   0x4E, 0x3E, 0x69, 0x4F, 0x3F, 0x68, 0x4E, 0x3E, 0x67, 0x4D, 0x3D, 0x68, 0x4E, 0x3E, 0x68, 0x4E, 
   0x3E, 0x68, 0x4E, 0x3E, 0x68, 0x4E, 0x3E, 0x68, 0x4E, 0x3E, 0x68, 0x4E, 0x3E, 0x68, 0x4E, 0x3E, 
   0x69, 0x4E, 0x3F, 0x69, 0x4E, 0x40, 0xF6, 0xE2, 0xDF, 0xF6, 0xE3, 0xE0, 0xF5, 0xE1, 0xDF, 0xF9, 
   0xE5, 0xE2, 0xF4, 0xE1, 0xDE, 0xF7, 0xE4, 0xE1, 0xFA, 0xE6, 0xE3, 0xF3, 0xE0, 0xDD, 0xF4, 0xE1, 
   0xDE, 0xF6, 0xE3, 0xE0, 0xF4, 0xE1, 0xDE, 0xF5, 0xE2, 0xDF, 0xF6, 0xE3, 0xE0, 0xF6, 0xE3, 0xE0, 
   0xF6, 0xE3, 0xE0, 0xF5, 0xE2, 0xDF, 0xF6, 0xE3, 0xE0, 0xF6, 0xE3, 0xE0, 0xF5, 0xE2, 0xDF, 0xF6, 
   0xE3, 0xE0, 0xF6, 0xE3, 0xE0, 0xF6, 0xE3, 0xE0, 0xF7, 0xE4, 0xE1, 0xF7, 0xE4, 0xE1, 0xF3, 0xE0, 
   0xDD, 0xF1, 0xDE, 0xDB, 0xEF, 0xDB, 0xD8, 0xF4, 0xE0, 0xDD, 0xEF, 0xE0, 0xDC, 0xF4, 0xEB, 0xE9, 
   0xE4, 0xDF, 0xDE, 0x71, 0x70, 0x70, 0x4F, 0x51, 0x51, 0x4D, 0x51, 0x52, 0x53, 0x57, 0x58, 0x64, 
   0x69, 0x69, 0x76, 0x7C, 0x7C, 0x94, 0x9A, 0x9A, 0x61, 0x68, 0x68, 0x4B, 0x53, 0x55, 0x4B, 0x53, 
   0x57, 0x4F, 0x56, 0x5B, 0x57, 0x60, 0x65, 0x59, 0x64, 0x6A, 0x5F, 0x6F, 0x76, 0x77, 0x8A, 0x90, 
   0xBD, 0xC3, 0xC7, 0xA2, 0xAA, 0xAE, 0x91, 0x9F, 0xA3, 0x4E, 0x61, 0x67, 0x4F, 0x61, 0x68, 0x4A, 
   0x5A, 0x62, 0x4A, 0x5B, 0x65, 0x59, 0x68, 0x75, 0x5F, 0x6C, 0x76, 0x5D, 0x66, 0x6D, 0xAA, 0xAF, 
   0xB5, 0x6A, 0x6B, 0x6F, 0xA8, 0xA8, 0xAA, 0x47, 0x48, 0x4B, 0x34, 0x3B, 0x3E, 0x51, 0x5D, 0x60, 
   0x4F, 0x5B, 0x61, 0x51, 0x58, 0x60, 0x60, 0x60, 0x6B, 0xDB, 0xD7, 0xDC, 0xFA, 0xF1, 0xF1, 0xF5, 
   0xEE, 0xEF, 0xF3, 0xEE, 0xED, 0xF5, 0xEF, 0xEF, 0xF7, 0xF0, 0xF0, 0xF0, 0xE6, 0xE6, 0xF2, 0xE2, 
   0xE1, 0xEC, 0xDA, 0xD7, 0xE9, 0xD7, 0xD4, 0xE9, 0xD7, 0xD2, 0xEA, 0xD9, 0xD3, 0xEE, 0xDC, 0xD5, 
   0xF0, 0xDD, 0xD9, 0xF1, 0xDE, 0xDB, 0xF1, 0xDE, 0xDB, 0xF5, 0xE2, 0xDF, 0xF6, 0xE3, 0xE0, 0xF6, 
   0xE3, 0xE0, 0xF6, 0xE3, 0xE0, 0xF7, 0xE5, 0xE1, 0xF9, 0xE5, 0xE2, 0xF7, 0xE3, 0xE1, 0xF9, 0xE5, 
   0xE3, 0xF6, 0xE4, 0xE2, 0xF8, 0xE8, 0xE6, 0xF5, 0xE0, 0xE0, 0xF3, 0xDF, 0xDF, 0xDE, 0xCF, 0xCE, 
   0xD8, 0xCE, 0xCD, 0xC1, 0xBB, 0xB8, 0xF9, 0xF4, 0xF2, 0xF6, 0xEC, 0xEB, 0xF2, 0xE5, 0xE3, 0xF4, 
   0xE6, 0xE4, 0xF4, 0xE6, 0xE4, 0xF3, 0xE7, 0xE5, 0xFC, 0xF2, 0xF0, 0xCA, 0xBF, 0xBD, 0xEB, 0xE1, 
   0xDF, 0xF3, 0xE7, 0xE5, 0xF7, 0xEC, 0xEA, 0xF5, 0xE8, 0xE6, 0xF7, 0xE9, 0xE7, 0xF5, 0xE8, 0xE6, 
   0xF6, 0xE9, 0xE7, 0xF9, 0xEA, 0xE8, 0xF8, 0xE9, 0xE7, 0xF8, 0xE9, 0xE7, 0xF7, 0xE8, 0xE6, 0xEF, 
   0xE0, 0xDE, 0xEB, 0xDC, 0xDA, 0xF6, 0xE7, 0xE5, 0xF6, 0xE7, 0xE5, 0xF7, 0xE8, 0xE6, 0xF7, 0xE8, 
   0xE6, 0xF7, 0xE8, 0xE6, 0xF7, 0xE8, 0xE6, 0xF7, 0xE8, 0xE6, 0xF5, 0xE8, 0xE7, 0xFA, 0xED, 0xEC, 
   0xF8, 0xEA, 0xE9, 0xF8, 0xE8, 0xE7, 0xF9, 0xE9, 0xE8, 0xFC, 0xEC, 0xEB, 0xFF, 0xED, 0xEF, 0xF1, 
   0xE0, 0xE5, 0xF0, 0xE1, 0xE5, 0xEC, 0xDE, 0xE2, 0xF2, 0xE5, 0xE9, 0xF7, 0xEB, 0xEF, 0xF7, 0xEB, 
   0xEE, 0xF5, 0xEC, 0xEA, 0xF0, 0xE6, 0xE4, 0xF0, 0xE1, 0xE1, 0xF1, 0xE0, 0xE1, 0xF1, 0xDF, 0xDF, 
   0xF0, 0xDE, 0xDE, 0xF2, 0xE0, 0xDC, 0xF6, 0xE4, 0xDC, 0xF7, 0xE4, 0xDD, 0xF7, 0xE4, 0xDC, 0xF9, 
   0xE6, 0xDF, 0xF7, 0xE4, 0xDD, 0xFB, 0xE6, 0xDF, 0xFB, 0xE6, 0xE0, 0xFC, 0xE6, 0xE0, 0xFD, 0xE7, 
   0xE1, 0xFB, 0xE5, 0xDF, 0xFA, 0xE4, 0xDE, 0xF6, 0xE0, 0xDA, 0xF7, 0xE1, 0xDB, 0xF5, 0xDE, 0xD9, 
   0xF2, 0xDB, 0xD5, 0xF2, 0xD9, 0xD4, 0xF0, 0xD5, 0xD1, 0xF7, 0xDA, 0xD6, 0xF5, 0xD7, 0xD3, 0xF4, 
   0xD8, 0xDA, 0x88, 0x6E, 0x72, 0x97, 0x82, 0x83, 0xE7, 0xD2, 0xD2, 0xE0, 0xCB, 0xC9, 0xAE, 0x95, 
   0x92, 0x9E, 0x86, 0x82, 0x7F, 0x6C, 0x68, 0xA0, 0x8A, 0x86, 0xD1, 0xB6, 0xB1, 0xA0, 0x81, 0x7C, 
   0x7D, 0x5F, 0x59, 0xB9, 0x9B, 0x95, 0x8F, 0x72, 0x6B, 0x74, 0x5A, 0x52, 0x6C, 0x59, 0x51, 0x45, 
   0x39, 0x31, 0x37, 0x30, 0x29, 0x3A, 0x36, 0x2F, 0x32, 0x2D, 0x27, 0x31, 0x28, 0x24, 0x3E, 0x33, 
   0x2E, 0x4A, 0x3B, 0x33, 0x64, 0x4F, 0x47, 0x55, 0x3E, 0x33, 0x43, 0x29, 0x1D, 0x66, 0x4C, 0x3D, 
   0x5D, 0x43, 0x33, 0x58, 0x3E, 0x2E, 0x65, 0x49, 0x39, 0x69, 0x4B, 0x3C, 0x6C, 0x4C, 0x3D, 0x6D, 
   0x4E, 0x3F, 0x6C, 0x4E, 0x41, 0x6C, 0x4E, 0x42, 0x6D, 0x4F, 0x42, 0x6D, 0x4F, 0x42, 0x6D, 0x4F, 
   0x42, 0x6D, 0x4F, 0x42, 0x6E, 0x50, 0x43, 0x6E, 0x50, 0x43, 0x6E, 0x50, 0x43, 0x6E, 0x50, 0x43, 
   0x6E, 0x50, 0x43, 0x6E, 0x50, 0x43, 0x6D, 0x4F, 0x42, 0x6D, 0x4F, 0x42, 0x61, 0x43, 0x36, 0x67, 
   0x4B, 0x3E, 0x69, 0x50, 0x42, 0x64, 0x4B, 0x3D, 0x5B, 0x44, 0x35, 0x56, 0x42, 0x32, 0x60, 0x4D, 
   0x3C, 0x65, 0x50, 0x3F, 0x68, 0x4F, 0x3F, 0x6A, 0x4E, 0x3F, 0x6A, 0x4D, 0x3E, 0x6B, 0x4C, 0x3D, 
   0x6E, 0x4D, 0x3D, 0x6D, 0x4E, 0x3E, 0x6B, 0x50, 0x3F, 0x69, 0x51, 0x42, 0x59, 0x45, 0x37, 0x34, 
   0x23, 0x15, 0x34, 0x23, 0x14, 0x50, 0x3D, 0x2C, 0x62, 0x4D, 0x3C, 0x62, 0x4A, 0x3A, 0x66, 0x4B, 
   0x3C, 0x68, 0x4B, 0x3C, 0x6A, 0x4B, 0x3C, 0x69, 0x4D, 0x3A, 0x6A, 0x4E, 0x3C, 0x6A, 0x4E, 0x3E, 
   0x6A, 0x4C, 0x3E, 0x69, 0x4B, 0x3E, 0x69, 0x4B, 0x3E, 0x69, 0x4D, 0x3E, 0x68, 0x4F, 0x3F, 0x68, 
   0x4E, 0x3E, 0x67, 0x4D, 0x3D, 0x68, 0x4E, 0x3E, 0x67, 0x4D, 0x3D, 0x68, 0x4E, 0x3E, 0x68, 0x4E, 
   0x3E, 0x68, 0x4E, 0x3E, 0x68, 0x4E, 0x3E, 0x68, 0x4E, 0x3E, 0x68, 0x4E, 0x3E, 0x68, 0x4E, 0x3E, 
   0x69, 0x4E, 0x3F, 0x69, 0x4E, 0x40, 0xF4, 0xE1, 0xDE, 0xF6, 0xE3, 0xE0, 0xF6, 0xE4, 0xE1, 0xF8, 
   0xE5, 0xE2, 0xFA, 0xE7, 0xE4, 0xFA, 0xE7, 0xE4, 0xF5, 0xE2, 0xDF, 0xF5, 0xE2, 0xDF, 0xF5, 0xE2, 
   0xDF, 0xF6, 0xE3, 0xE0, 0xF5, 0xE2, 0xDF, 0xF6, 0xE3, 0xE0, 0xF6, 0xE3, 0xE0, 0xF5, 0xE2, 0xDF, 
   0xF7, 0xE4, 0xE1, 0xF6, 0xE3, 0xE0, 0xF6, 0xE3, 0xE0, 0xF6, 0xE3, 0xE0, 0xF5, 0xE2, 0xDF, 0xF6, 
   0xE3, 0xE0, 0xF9, 0xE6, 0xE3, 0xF9, 0xE6, 0xE3, 0xF8, 0xE5, 0xE2, 0xF5, 0xE2, 0xDF, 0xF1, 0xDE, 
   0xDB, 0xEE, 0xDB, 0xD8, 0xEB, 0xDB, 0xD8, 0xE9, 0xDC, 0xD9, 0xF1, 0xE8, 0xE4, 0xE3, 0xDE, 0xDD, 
   0x86, 0x86, 0x85, 0x54, 0x58, 0x58, 0x6C, 0x72, 0x72, 0x56, 0x5C, 0x5D, 0x59, 0x5E, 0x5F, 0x55, 
   0x5A, 0x5B, 0x39, 0x3D, 0x3E, 0x35, 0x39, 0x3A, 0x45, 0x48, 0x49, 0x47, 0x4D, 0x4F, 0x4B, 0x55, 
   0x56, 0xA4, 0xA9, 0xAC, 0x65, 0x6A, 0x71, 0x56, 0x5E, 0x66, 0x61, 0x6E, 0x76, 0x64, 0x73, 0x7B, 
   0x5A, 0x61, 0x66, 0x5D, 0x67, 0x6C, 0x56, 0x65, 0x6A, 0x42, 0x54, 0x5C, 0x58, 0x68, 0x71, 0x4E, 
   0x5D, 0x65, 0x52, 0x61, 0x6C, 0x61, 0x6C, 0x79, 0x5F, 0x6A, 0x74, 0x48, 0x50, 0x58, 0x43, 0x4A, 
   0x4F, 0x64, 0x69, 0x6D, 0x53, 0x56, 0x58, 0x32, 0x30, 0x34, 0x68, 0x6C, 0x70, 0x54, 0x60, 0x63, 
   0x56, 0x63, 0x69, 0x44, 0x4A, 0x52, 0x8A, 0x88, 0x94, 0xFD, 0xF4, 0xF9, 0xF7, 0xEC, 0xEA, 0xEB, 
   0xE7, 0xE4, 0xF6, 0xF7, 0xF5, 0xEF, 0xF0, 0xEE, 0xE0, 0xDE, 0xDC, 0xEB, 0xE6, 0xE4, 0xE9, 0xDC, 
   0xDA, 0xE2, 0xD4, 0xD1, 0xE2, 0xD2, 0xCF, 0xE3, 0xCF, 0xCB, 0xEA, 0xD4, 0xCF, 0xEE, 0xD5, 0xCF, 
   0xF1, 0xDA, 0xD6, 0xEE, 0xDB, 0xD8, 0xF0, 0xDD, 0xDA, 0xF6, 0xE3, 0xE0, 0xF7, 0xE4, 0xE1, 0xF7, 
   0xE4, 0xE1, 0xF7, 0xE4, 0xE1, 0xF5, 0xE2, 0xDF, 0xF7, 0xE5, 0xE2, 0xF5, 0xE4, 0xE0, 0xF5, 0xE4, 
   0xE0, 0xF3, 0xE5, 0xE0, 0xF6, 0xE8, 0xE3, 0xFF, 0xEF, 0xEC, 0xE2, 0xCF, 0xCE, 0xD1, 0xC2, 0xC0, 
   0xF4, 0xEB, 0xE7, 0xFA, 0xF2, 0xEE, 0xF2, 0xE7, 0xE4, 0xF6, 0xE9, 0xE6, 0xF8, 0xE7, 0xE6, 0xF6, 
   0xE6, 0xE4, 0xF7, 0xE9, 0xE7, 0xFC, 0xF2, 0xF0, 0xE2, 0xD8, 0xD6, 0xD9, 0xD0, 0xCD, 0xF1, 0xE7, 
   0xE5, 0xF6, 0xE8, 0xE6, 0xF5, 0xE8, 0xE6, 0xF7, 0xEA, 0xE8, 0xF7, 0xEA, 0xE8, 0xF5, 0xE8, 0xE6, 
   0xF6, 0xE8, 0xE6, 0xF8, 0xE9, 0xE7, 0xF8, 0xE9, 0xE7, 0xF8, 0xE9, 0xE7, 0xF7, 0xE8, 0xE6, 0xEF, 
   0xE0, 0xDE, 0xF0, 0xE1, 0xDF, 0xF7, 0xE8, 0xE6, 0xF6, 0xE7, 0xE5, 0xF7, 0xE8, 0xE6, 0xF8, 0xE9, 
   0xE7, 0xF8, 0xE9, 0xE7, 0xF8, 0xE9, 0xE7, 0xF8, 0xE9, 0xE7, 0xF7, 0xEA, 0xE8, 0xF9, 0xED, 0xEA, 
   0xFA, 0xEB, 0xE9, 0xFA, 0xE8, 0xE7, 0xF8, 0xE5, 0xE5, 0xFB, 0xE9, 0xE9, 0xE9, 0xD1, 0xD1, 0xEC, 
   0xD5, 0xD6, 0xEF, 0xD9, 0xDB, 0xEF, 0xDB, 0xDD, 0xEE, 0xDC, 0xDD, 0xEF, 0xDE, 0xDF, 0xEC, 0xDB, 
   0xDB, 0xEF, 0xDC, 0xD9, 0xF3, 0xDF, 0xDC, 0xF0, 0xDD, 0xDA, 0xF0, 0xDC, 0xDA, 0xF3, 0xE0, 0xDD, 
   0xF5, 0xE1, 0xDF, 0xF5, 0xE1, 0xDD, 0xF5, 0xE0, 0xDA, 0xF4, 0xE0, 0xDA, 0xF1, 0xDE, 0xD8, 0xF8, 
   0xE5, 0xDE, 0xF7, 0xE4, 0xDE, 0xF8, 0xE5, 0xDF, 0xFA, 0xE6, 0xE2, 0xFC, 0xE6, 0xE3, 0xFC, 0xE6, 
   0xE2, 0xFA, 0xE4, 0xE0, 0xF8, 0xE3, 0xDF, 0xF8, 0xE3, 0xDF, 0xF8, 0xE3, 0xDF, 0xF2, 0xDD, 0xD9, 
   0xF0, 0xDB, 0xD7, 0xF3, 0xDC, 0xD9, 0xF2, 0xD9, 0xD6, 0xF0, 0xD5, 0xD2, 0xF3, 0xD8, 0xD5, 0xBB, 
   0xA0, 0xA3, 0xA7, 0x90, 0x95, 0xE0, 0xCE, 0xD1, 0xAA, 0x9A, 0x9B, 0xA1, 0x90, 0x8F, 0x83, 0x6D, 
   0x6C, 0xB4, 0x9E, 0x9C, 0xC1, 0xAC, 0xAA, 0xBE, 0xA4, 0xA2, 0xE3, 0xC3, 0xC0, 0xAF, 0x8D, 0x89, 
   0xC8, 0xA9, 0xA3, 0xAE, 0x93, 0x8B, 0x6E, 0x54, 0x4D, 0x7C, 0x64, 0x5D, 0x5D, 0x4C, 0x44, 0x3E, 
   0x35, 0x2E, 0x40, 0x3A, 0x34, 0x34, 0x2D, 0x28, 0x36, 0x2E, 0x2A, 0x3C, 0x2E, 0x2A, 0x3D, 0x2D, 
   0x29, 0x4D, 0x3A, 0x34, 0x62, 0x4D, 0x45, 0x49, 0x32, 0x28, 0x4B, 0x34, 0x27, 0x58, 0x3F, 0x30, 
   0x54, 0x3A, 0x2A, 0x63, 0x48, 0x38, 0x6B, 0x4E, 0x3F, 0x6C, 0x4D, 0x3F, 0x6E, 0x4F, 0x40, 0x6E, 
   0x4F, 0x41, 0x6C, 0x4F, 0x41, 0x6D, 0x4F, 0x42, 0x6E, 0x50, 0x43, 0x6E, 0x50, 0x43, 0x6E, 0x50, 
   0x43, 0x6E, 0x50, 0x43, 0x6E, 0x50, 0x43, 0x6E, 0x50, 0x43, 0x6E, 0x50, 0x43, 0x6E, 0x50, 0x43, 
   0x6E, 0x50, 0x43, 0x6E, 0x50, 0x43, 0x6D, 0x4F, 0x42, 0x6B, 0x4D, 0x40, 0x6B, 0x4D, 0x40, 0x6A, 
   0x4D, 0x40, 0x6A, 0x50, 0x42, 0x6F, 0x55, 0x47, 0x68, 0x51, 0x42, 0x5A, 0x46, 0x36, 0x50, 0x40, 
   0x2F, 0x65, 0x52, 0x41, 0x66, 0x4E, 0x3E, 0x6A, 0x4F, 0x3F, 0x6C, 0x4F, 0x40, 0x6E, 0x4E, 0x3F, 
   0x6F, 0x4E, 0x3E, 0x6C, 0x4C, 0x3D, 0x66, 0x4A, 0x3B, 0x57, 0x40, 0x31, 0x58, 0x46, 0x39, 0x48, 
   0x39, 0x2C, 0x45, 0x35, 0x26, 0x48, 0x37, 0x25, 0x62, 0x4F, 0x3E, 0x63, 0x4C, 0x3C, 0x66, 0x4B, 
   0x3B, 0x69, 0x4B, 0x3C, 0x6B, 0x4C, 0x3D, 0x69, 0x4E, 0x3A, 0x6A, 0x4E, 0x3D, 0x6B, 0x4E, 0x3E, 
   0x6B, 0x4D, 0x3F, 0x6A, 0x4C, 0x3F, 0x6A, 0x4C, 0x3F, 0x69, 0x4D, 0x3E, 0x67, 0x4D, 0x3D, 0x67, 
   0x4D, 0x3D, 0x6C, 0x52, 0x42, 0x68, 0x4E, 0x3E, 0x66, 0x4C, 0x3C, 0x68, 0x4E, 0x3E, 0x67, 0x4D, 
   0x3D, 0x67, 0x4D, 0x3D, 0x67, 0x4D, 0x3D, 0x68, 0x4E, 0x3E, 0x68, 0x4E, 0x3E, 0x68, 0x4E, 0x3E, 
   0x68, 0x4E, 0x3F, 0x68, 0x4D, 0x3F, 0xF6, 0xE3, 0xE0, 0xF7, 0xE4, 0xE1, 0xF7, 0xE4, 0xE1, 0xF6, 
   0xE3, 0xE0, 0xF4, 0xE1, 0xDE, 0xF8, 0xE5, 0xE2, 0xF6, 0xE3, 0xE0, 0xF5, 0xE2, 0xDF, 0xF5, 0xE2, 
   0xDF, 0xF4, 0xE1, 0xDE, 0xF4, 0xE1, 0xDE, 0xF4, 0xE1, 0xDE, 0xF5, 0xE2, 0xDF, 0xF6, 0xE3, 0xE0, 
   0xF7, 0xE4, 0xE1, 0xF6, 0xE3, 0xE0, 0xF7, 0xE4, 0xE1, 0xF7, 0xE4, 0xE1, 0xF6, 0xE3, 0xE0, 0xF8, 
   0xE5, 0xE2, 0xFB, 0xE8, 0xE5, 0xFB, 0xE8, 0xE5, 0xF4, 0xE1, 0xDE, 0xEB, 0xD9, 0xD6, 0xF0, 0xDD, 
   0xDA, 0xF2, 0xDF, 0xDC, 0xED, 0xE3, 0xE0, 0xEB, 0xE4, 0xE0, 0xEA, 0xE6, 0xE4, 0x76, 0x75, 0x75, 
   0x3B, 0x3F, 0x3F, 0x5A, 0x61, 0x62, 0xA7, 0xB0, 0xB0, 0x50, 0x55, 0x56, 0x4A, 0x4E, 0x50, 0x4C, 
   0x51, 0x53, 0x48, 0x4B, 0x4D, 0x51, 0x52, 0x55, 0x4D, 0x4B, 0x4D, 0x3A, 0x3F, 0x41, 0x43, 0x4F, 
   0x4E, 0xBA, 0xBE, 0xC1, 0xC4, 0xC5, 0xCA, 0x70, 0x73, 0x7C, 0x7D, 0x86, 0x8F, 0x7A, 0x84, 0x8E, 
   0x52, 0x5A, 0x5F, 0x62, 0x6E, 0x73, 0x58, 0x68, 0x6E, 0x55, 0x68, 0x70, 0x56, 0x67, 0x70, 0x4A, 
   0x59, 0x62, 0x51, 0x5C, 0x69, 0x61, 0x69, 0x76, 0x4B, 0x55, 0x5F, 0x4C, 0x55, 0x5D, 0x37, 0x40, 
   0x45, 0x65, 0x6E, 0x70, 0x41, 0x48, 0x49, 0x5A, 0x57, 0x5C, 0xC6, 0xCA, 0xCD, 0x63, 0x70, 0x73, 
   0x3F, 0x4E, 0x53, 0x4C, 0x52, 0x5A, 0xC9, 0xC5, 0xD0, 0xFB, 0xF3, 0xF7, 0xF7, 0xEF, 0xEA, 0xF2, 
   0xF0, 0xEB, 0xD9, 0xDF, 0xDC, 0x77, 0x7D, 0x7A, 0x67, 0x6A, 0x68, 0xBF, 0xBE, 0xBD, 0xF1, 0xE8, 
   0xE5, 0xF5, 0xEA, 0xE6, 0xE3, 0xD5, 0xD1, 0xD4, 0xC0, 0xBB, 0xEB, 0xD1, 0xCC, 0xF0, 0xCF, 0xCB, 
   0xEC, 0xD3, 0xCF, 0xEE, 0xDC, 0xD9, 0xF1, 0xDE, 0xDB, 0xF7, 0xE4, 0xE1, 0xF8, 0xE5, 0xE2, 0xF8, 
   0xE5, 0xE2, 0xF8, 0xE5, 0xE2, 0xF6, 0xE3, 0xE0, 0xF7, 0xE5, 0xE3, 0xF5, 0xE6, 0xE3, 0xEE, 0xE1, 
   0xDB, 0xF2, 0xE6, 0xE0, 0xF3, 0xE8, 0xE1, 0xEB, 0xE1, 0xDC, 0xB2, 0xA0, 0x9D, 0xF1, 0xE7, 0xE3, 
   0xF3, 0xE9, 0xE5, 0xF3, 0xE8, 0xE4, 0xF7, 0xE8, 0xE5, 0xF6, 0xE6, 0xE3, 0xFD, 0xEB, 0xEA, 0xF9, 
   0xE8, 0xE7, 0xFA, 0xEB, 0xE9, 0xF6, 0xEB, 0xE9, 0xD8, 0xCD, 0xCA, 0xEB, 0xE3, 0xE0, 0xF7, 0xED, 
   0xEB, 0xF5, 0xE8, 0xE6, 0xFA, 0xEE, 0xEC, 0xF8, 0xEB, 0xE9, 0xF6, 0xE9, 0xE7, 0xF5, 0xE8, 0xE6, 
   0xF6, 0xE8, 0xE6, 0xF7, 0xE8, 0xE6, 0xF8, 0xE9, 0xE7, 0xF9, 0xEA, 0xE8, 0xF7, 0xE8, 0xE6, 0xF7, 
   0xE7, 0xE6, 0xF5, 0xE6, 0xE4, 0xF4, 0xE5, 0xE3, 0xF7, 0xE8, 0xE6, 0xF8, 0xE9, 0xE7, 0xF9, 0xEA, 
   0xE8, 0xF9, 0xEA, 0xE8, 0xF9, 0xEA, 0xE8, 0xF9, 0xEB, 0xE8, 0xF8, 0xEB, 0xE9, 0xF5, 0xE7, 0xE5, 
   0xFE, 0xEC, 0xEB, 0xFD, 0xEB, 0xEA, 0xFF, 0xED, 0xEB, 0xF2, 0xDB, 0xDB, 0xEA, 0xCE, 0xCD, 0xF6, 
   0xD8, 0xD7, 0xF7, 0xDA, 0xD9, 0xF4, 0xDA, 0xD9, 0xF4, 0xDE, 0xDB, 0xF1, 0xDB, 0xD9, 0xF3, 0xDD, 
   0xDB, 0xF7, 0xDE, 0xD9, 0xF6, 0xDB, 0xD6, 0xF3, 0xDD, 0xD7, 0xF2, 0xDF, 0xD8, 0xF3, 0xE0, 0xDA, 
   0xF4, 0xE1, 0xDB, 0xF6, 0xE1, 0xDC, 0xF8, 0xE1, 0xDD, 0xF7, 0xE2, 0xDD, 0xF4, 0xE0, 0xDC, 0xF8, 
   0xE4, 0xE0, 0xF8, 0xE4, 0xE0, 0xF7, 0xE4, 0xE0, 0xF7, 0xE2, 0xE0, 0xF7, 0xE2, 0xE1, 0xF9, 0xE5, 
   0xE3, 0xF9, 0xE5, 0xE3, 0xF7, 0xE2, 0xE1, 0xFA, 0xE4, 0xE2, 0xF7, 0xE3, 0xE1, 0xF0, 0xDE, 0xDB, 
   0xF0, 0xDD, 0xDB, 0xEE, 0xDA, 0xD8, 0xEE, 0xD8, 0xD7, 0xED, 0xD6, 0xD4, 0xF1, 0xD9, 0xD8, 0xBC, 
   0xA2, 0xA6, 0xD9, 0xC7, 0xCD, 0xB3, 0xA3, 0xA6, 0xBD, 0xB0, 0xB1, 0xA0, 0x92, 0x92, 0xD0, 0xBD, 
   0xBC, 0xCD, 0xB9, 0xB8, 0xE1, 0xC8, 0xC8, 0xE7, 0xCA, 0xC8, 0xE7, 0xC6, 0xC4, 0xF3, 0xD0, 0xCB, 
   0xE0, 0xC3, 0xBB, 0x7A, 0x62, 0x58, 0x74, 0x5D, 0x54, 0x63, 0x4E, 0x46, 0x42, 0x34, 0x2C, 0x3F, 
   0x38, 0x31, 0x3B, 0x35, 0x2F, 0x38, 0x2E, 0x2B, 0x3C, 0x30, 0x2D, 0x65, 0x51, 0x4E, 0x55, 0x41, 
   0x3D, 0x37, 0x23, 0x1D, 0x4A, 0x35, 0x2D, 0x4D, 0x37, 0x2C, 0x4B, 0x36, 0x28, 0x41, 0x2A, 0x1A, 
   0x57, 0x3D, 0x2D, 0x68, 0x4D, 0x3D, 0x6A, 0x4D, 0x3E, 0x6C, 0x4E, 0x3F, 0x6D, 0x4E, 0x3F, 0x6D, 
   0x4E, 0x3F, 0x6D, 0x4F, 0x42, 0x6D, 0x4F, 0x42, 0x6F, 0x51, 0x44, 0x6F, 0x51, 0x44, 0x6F, 0x51, 
   0x44, 0x6F, 0x51, 0x44, 0x6F, 0x51, 0x44, 0x6E, 0x50, 0x43, 0x6E, 0x50, 0x43, 0x6E, 0x50, 0x43, 
   0x6E, 0x50, 0x43, 0x6F, 0x51, 0x44, 0x70, 0x52, 0x45, 0x6F, 0x51, 0x44, 0x6D, 0x4F, 0x42, 0x6F, 
   0x53, 0x45, 0x6D, 0x53, 0x45, 0x67, 0x4D, 0x3F, 0x68, 0x50, 0x41, 0x56, 0x43, 0x33, 0x4E, 0x3F, 
   0x2E, 0x60, 0x4F, 0x3D, 0x65, 0x4E, 0x3E, 0x65, 0x4A, 0x3A, 0x6A, 0x4C, 0x3D, 0x6C, 0x4D, 0x3E, 
   0x6E, 0x4C, 0x3E, 0x6E, 0x4E, 0x40, 0x6D, 0x52, 0x43, 0x5B, 0x46, 0x37, 0x45, 0x34, 0x26, 0x45, 
   0x37, 0x2B, 0x3A, 0x2C, 0x1D, 0x53, 0x43, 0x32, 0x52, 0x41, 0x30, 0x5E, 0x47, 0x37, 0x66, 0x4B, 
   0x3B, 0x6A, 0x4B, 0x3D, 0x6C, 0x4D, 0x3E, 0x6A, 0x4F, 0x3B, 0x6A, 0x4F, 0x3D, 0x6B, 0x4F, 0x3F, 
   0x6B, 0x4E, 0x40, 0x6B, 0x4D, 0x40, 0x6B, 0x4D, 0x40, 0x68, 0x4C, 0x3D, 0x6D, 0x53, 0x43, 0x6D, 
   0x53, 0x43, 0x69, 0x4F, 0x3F, 0x67, 0x4C, 0x3C, 0x66, 0x4C, 0x3C, 0x67, 0x4D, 0x3D, 0x66, 0x4C, 
   0x3C, 0x66, 0x4C, 0x3C, 0x66, 0x4C, 0x3C, 0x67, 0x4D, 0x3D, 0x68, 0x4E, 0x3E, 0x68, 0x4E, 0x3E, 
   0x68, 0x4D, 0x3E, 0x67, 0x4C, 0x3E, 0xF7, 0xE4, 0xE1, 0xF8, 0xE5, 0xE2, 0xF6, 0xE3, 0xE0, 0xF7, 
   0xE4, 0xE1, 0xF6, 0xE3, 0xE0, 0xF6, 0xE3, 0xE0, 0xF4, 0xE1, 0xDE, 0xF4, 0xE2, 0xDF, 0xF7, 0xE4, 
   0xE1, 0xF5, 0xE3, 0xE0, 0xF6, 0xE3, 0xE0, 0xF6, 0xE3, 0xE0, 0xF7, 0xE5, 0xE2, 0xF7, 0xE4, 0xE1, 
   0xF9, 0xE5, 0xE2, 0xF7, 0xE4, 0xE1, 0xF7, 0xE5, 0xE2, 0xF7, 0xE4, 0xE1, 0xF6, 0xE3, 0xE0, 0xF8, 
   0xE5, 0xE2, 0xFA, 0xE7, 0xE5, 0xF8, 0xE4, 0xE1, 0xEF, 0xDB, 0xD8, 0xE7, 0xD4, 0xD0, 0xE8, 0xD6, 
   0xD3, 0xEB, 0xD9, 0xD6, 0xE3, 0xDD, 0xDA, 0xE6, 0xE6, 0xE2, 0x7A, 0x7B, 0x7A, 0x3E, 0x44, 0x42, 
   0x4C, 0x54, 0x53, 0x4D, 0x57, 0x57, 0x83, 0x8C, 0x8D, 0xA7, 0xAC, 0xAF, 0x84, 0x88, 0x8C, 0x4D, 
   0x50, 0x54, 0x4A, 0x4A, 0x4E, 0x4F, 0x4E, 0x52, 0x46, 0x42, 0x46, 0x3C, 0x42, 0x43, 0x2D, 0x3A, 
   0x39, 0x86, 0x8A, 0x8D, 0xF2, 0xF3, 0xF7, 0xE1, 0xE1, 0xE9, 0x7F, 0x83, 0x8D, 0x59, 0x62, 0x6A, 
   0xA5, 0xAD, 0xB3, 0x87, 0x93, 0x99, 0x57, 0x67, 0x6D, 0x4E, 0x61, 0x68, 0x4C, 0x5D, 0x65, 0x4E, 
   0x5C, 0x65, 0x53, 0x5C, 0x68, 0x5B, 0x62, 0x6F, 0x56, 0x5F, 0x69, 0x7B, 0x85, 0x8D, 0x3D, 0x47, 
   0x4D, 0x5C, 0x66, 0x6A, 0x37, 0x41, 0x41, 0x6A, 0x68, 0x6C, 0x59, 0x5F, 0x62, 0x39, 0x45, 0x4A, 
   0x40, 0x4D, 0x54, 0x62, 0x68, 0x70, 0xE3, 0xDF, 0xE8, 0xF6, 0xEE, 0xF1, 0xF7, 0xEF, 0xEA, 0xFC, 
   0xFC, 0xF8, 0x83, 0x8A, 0x87, 0x44, 0x4C, 0x4A, 0x58, 0x5E, 0x5D, 0x76, 0x78, 0x7A, 0xC5, 0xC2, 
   0xC0, 0xB6, 0xAF, 0xAC, 0xC9, 0xBB, 0xB8, 0xD7, 0xC2, 0xBD, 0xE4, 0xC7, 0xC3, 0xF0, 0xCD, 0xC9, 
   0xE4, 0xC8, 0xC4, 0xF0, 0xDD, 0xD9, 0xF4, 0xE0, 0xDD, 0xF7, 0xE4, 0xE0, 0xF8, 0xE5, 0xE2, 0xF7, 
   0xE4, 0xE1, 0xF9, 0xE6, 0xE2, 0xFC, 0xE7, 0xE5, 0xFA, 0xE9, 0xE6, 0xF6, 0xEA, 0xE5, 0xF2, 0xE9, 
   0xE2, 0xF8, 0xEF, 0xE8, 0xDD, 0xD5, 0xCE, 0xAE, 0xA0, 0x9B, 0xE5, 0xD7, 0xD4, 0xF2, 0xE7, 0xE3, 
   0xF5, 0xEA, 0xE7, 0xF6, 0xED, 0xE9, 0xF6, 0xE9, 0xE6, 0xF7, 0xE8, 0xE5, 0xF9, 0xE8, 0xE7, 0xFD, 
   0xEE, 0xED, 0xFA, 0xED, 0xEB, 0xF2, 0xE7, 0xE6, 0xF1, 0xE8, 0xE6, 0xF5, 0xED, 0xEB, 0xF5, 0xEB, 
   0xE9, 0xF7, 0xEA, 0xE8, 0xF7, 0xEA, 0xE8, 0xF8, 0xEC, 0xE9, 0xF7, 0xEA, 0xE7, 0xF5, 0xE8, 0xE6, 
   0xF6, 0xE8, 0xE6, 0xF7, 0xE8, 0xE6, 0xF8, 0xE9, 0xE7, 0xF9, 0xEA, 0xE8, 0xF7, 0xE9, 0xE7, 0xF7, 
   0xE8, 0xE6, 0xF8, 0xEA, 0xE7, 0xF6, 0xE8, 0xE6, 0xF7, 0xE8, 0xE7, 0xF7, 0xE9, 0xE7, 0xF7, 0xE9, 
   0xE7, 0xF8, 0xEA, 0xE8, 0xF8, 0xE9, 0xE7, 0xF9, 0xEB, 0xE9, 0xF3, 0xE8, 0xE4, 0xF2, 0xE6, 0xE3, 
   0xFD, 0xEE, 0xEB, 0xFF, 0xEC, 0xEA, 0xFB, 0xE6, 0xE4, 0xE5, 0xCB, 0xC9, 0xF2, 0xD5, 0xD2, 0xFA, 
   0xDB, 0xD8, 0xF7, 0xDA, 0xD6, 0xFB, 0xDE, 0xDA, 0xF6, 0xDB, 0xD8, 0xF3, 0xDC, 0xD7, 0xF4, 0xDE, 
   0xD9, 0xFC, 0xE0, 0xDB, 0xFC, 0xE0, 0xDA, 0xF7, 0xDF, 0xD8, 0xF5, 0xE0, 0xD8, 0xF4, 0xE2, 0xDA, 
   0xF5, 0xE2, 0xDA, 0xF6, 0xE1, 0xDC, 0xF8, 0xE1, 0xE0, 0xF8, 0xE4, 0xE2, 0xF8, 0xE3, 0xE1, 0xF7, 
   0xE4, 0xE1, 0xF8, 0xE5, 0xE2, 0xF6, 0xE3, 0xE1, 0xF8, 0xE4, 0xE2, 0xF8, 0xE4, 0xE2, 0xF8, 0xE4, 
   0xE3, 0xF7, 0xE3, 0xE2, 0xF4, 0xE0, 0xDF, 0xF6, 0xE2, 0xE1, 0xF3, 0xE1, 0xDF, 0xEF, 0xE0, 0xDE, 
   0xF1, 0xE0, 0xDF, 0xE9, 0xD7, 0xD6, 0xEA, 0xD6, 0xD5, 0xEC, 0xD8, 0xD7, 0xE9, 0xD4, 0xD3, 0x92, 
   0x7A, 0x7D, 0x93, 0x7C, 0x81, 0xDC, 0xCC, 0xCF, 0xE5, 0xDA, 0xDA, 0xD0, 0xC4, 0xC4, 0xC2, 0xB0, 
   0xAF, 0xCF, 0xBA, 0xB9, 0xF2, 0xD9, 0xD9, 0xEE, 0xD1, 0xD1, 0xE8, 0xC8, 0xC6, 0xFA, 0xDC, 0xD9, 
   0xD3, 0xB8, 0xB0, 0x7E, 0x68, 0x5E, 0x6F, 0x5B, 0x53, 0x48, 0x38, 0x30, 0x4D, 0x42, 0x3A, 0x3B, 
   0x35, 0x2D, 0x49, 0x40, 0x3B, 0x5A, 0x4C, 0x49, 0x7C, 0x69, 0x66, 0x7C, 0x65, 0x62, 0x54, 0x3D, 
   0x39, 0x45, 0x2E, 0x28, 0x50, 0x3A, 0x32, 0x5D, 0x49, 0x3E, 0x48, 0x35, 0x27, 0x55, 0x3F, 0x2F, 
   0x68, 0x4D, 0x3D, 0x69, 0x4E, 0x3F, 0x6A, 0x4D, 0x3E, 0x6E, 0x50, 0x41, 0x6E, 0x50, 0x41, 0x6E, 
   0x50, 0x41, 0x6D, 0x4F, 0x42, 0x6E, 0x50, 0x43, 0x6F, 0x51, 0x44, 0x6F, 0x51, 0x44, 0x6F, 0x51, 
   0x44, 0x6F, 0x51, 0x44, 0x6F, 0x51, 0x44, 0x6E, 0x50, 0x43, 0x6E, 0x50, 0x43, 0x6E, 0x50, 0x43, 
   0x6E, 0x50, 0x43, 0x6F, 0x52, 0x44, 0x70, 0x52, 0x45, 0x6F, 0x51, 0x44, 0x71, 0x52, 0x45, 0x6F, 
   0x52, 0x45, 0x6D, 0x53, 0x45, 0x6B, 0x52, 0x43, 0x6F, 0x57, 0x48, 0x56, 0x42, 0x33, 0x34, 0x24, 
   0x14, 0x40, 0x2E, 0x1E, 0x62, 0x4C, 0x3C, 0x6A, 0x4F, 0x41, 0x6C, 0x4E, 0x3F, 0x6D, 0x4D, 0x3E, 
   0x6F, 0x4D, 0x3F, 0x6C, 0x4C, 0x3F, 0x6B, 0x50, 0x42, 0x66, 0x4F, 0x43, 0x44, 0x32, 0x26, 0x29, 
   0x1A, 0x0F, 0x3D, 0x2F, 0x20, 0x48, 0x38, 0x26, 0x49, 0x36, 0x25, 0x65, 0x4F, 0x3E, 0x65, 0x49, 
   0x3A, 0x6A, 0x4B, 0x3C, 0x6D, 0x4E, 0x3E, 0x6A, 0x4F, 0x3B, 0x6B, 0x4F, 0x3E, 0x6C, 0x4F, 0x3F, 
   0x6C, 0x4E, 0x40, 0x6C, 0x4E, 0x41, 0x6C, 0x4E, 0x41, 0x63, 0x47, 0x39, 0x55, 0x3C, 0x2C, 0x50, 
   0x37, 0x28, 0x61, 0x48, 0x39, 0x67, 0x4E, 0x3E, 0x64, 0x4A, 0x3A, 0x66, 0x4C, 0x3C, 0x66, 0x4C, 
   0x3C, 0x66, 0x4C, 0x3C, 0x66, 0x4C, 0x3C, 0x67, 0x4D, 0x3D, 0x68, 0x4E, 0x3E, 0x68, 0x4E, 0x3E, 
   0x68, 0x4D, 0x3E, 0x67, 0x4C, 0x3E, 0xF2, 0xE1, 0xDE, 0xF2, 0xE1, 0xDE, 0xF4, 0xE3, 0xE0, 0xF5, 
   0xE4, 0xE1, 0xF4, 0xE3, 0xE0, 0xF2, 0xE1, 0xDE, 0xF2, 0xE1, 0xDE, 0xF5, 0xE4, 0xE1, 0xF5, 0xE4, 
   0xE1, 0xF5, 0xE4, 0xE1, 0xF4, 0xE3, 0xE0, 0xF4, 0xE3, 0xE0, 0xF4, 0xE3, 0xE0, 0xF9, 0xE4, 0xDE, 
   0xFA, 0xE4, 0xDE, 0xF8, 0xE6, 0xDF, 0xF7, 0xE7, 0xE2, 0xF6, 0xE4, 0xE1, 0xFA, 0xE4, 0xE3, 0xFC, 
   0xE5, 0xE7, 0xFA, 0xE4, 0xE8, 0xF5, 0xDE, 0xDE, 0xEB, 0xD2, 0xCE, 0xE7, 0xD0, 0xCA, 0xF2, 0xE4, 
   0xDF, 0x9C, 0x94, 0x90, 0x59, 0x5F, 0x5D, 0x5A, 0x67, 0x65, 0x3B, 0x4A, 0x48, 0x35, 0x45, 0x44, 
   0x3C, 0x4A, 0x4B, 0x59, 0x5F, 0x63, 0xBE, 0xC2, 0xC6, 0x99, 0x9B, 0x9D, 0x90, 0x92, 0x93, 0x93, 
   0x95, 0x96, 0x5B, 0x5D, 0x5E, 0x4F, 0x51, 0x52, 0x48, 0x4A, 0x4B, 0x3B, 0x41, 0x41, 0x44, 0x4D, 
   0x4D, 0x6B, 0x6E, 0x73, 0xD9, 0xDB, 0xE4, 0xE0, 0xE2, 0xE8, 0x61, 0x65, 0x67, 0x79, 0x81, 0x80, 
   0x9D, 0xA7, 0xA6, 0x51, 0x5E, 0x5F, 0x58, 0x6B, 0x6C, 0x42, 0x56, 0x59, 0x4A, 0x5C, 0x61, 0x45, 
   0x54, 0x5A, 0x4F, 0x5B, 0x63, 0x4D, 0x53, 0x5E, 0x66, 0x6B, 0x75, 0x89, 0x8F, 0x98, 0x46, 0x4F, 
   0x57, 0x33, 0x44, 0x49, 0x2D, 0x42, 0x44, 0x45, 0x52, 0x51, 0x36, 0x42, 0x49, 0x38, 0x43, 0x51, 
   0x41, 0x48, 0x57, 0x69, 0x69, 0x71, 0xE5, 0xE2, 0xE0, 0xFA, 0xF1, 0xEC, 0xFF, 0xF6, 0xF3, 0xBC, 
   0xBB, 0xB9, 0x48, 0x4D, 0x50, 0x51, 0x57, 0x5E, 0x5A, 0x5D, 0x68, 0x5E, 0x5E, 0x6D, 0x60, 0x69, 
   0x70, 0x43, 0x44, 0x49, 0xA1, 0x97, 0x9A, 0xE6, 0xD4, 0xD2, 0xE0, 0xC8, 0xC2, 0xE8, 0xCD, 0xC4, 
   0xE4, 0xC8, 0xBF, 0xF5, 0xDB, 0xD4, 0xFB, 0xE1, 0xDB, 0xF9, 0xE3, 0xDD, 0xFB, 0xE7, 0xE3, 0xF9, 
   0xE8, 0xE5, 0xF6, 0xE5, 0xE1, 0xF9, 0xE7, 0xE0, 0xF8, 0xEA, 0xE3, 0xF3, 0xEC, 0xE6, 0xFB, 0xF9, 
   0xF5, 0xBA, 0xB5, 0xB4, 0xAB, 0x9F, 0xA1, 0xF8, 0xEC, 0xEC, 0xFA, 0xED, 0xEB, 0xF5, 0xE8, 0xE6, 
   0xF4, 0xE7, 0xE5, 0xF4, 0xE7, 0xE5, 0xF6, 0xE9, 0xE7, 0xF8, 0xEA, 0xE8, 0xF9, 0xEB, 0xEC, 0xF4, 
   0xE9, 0xE9, 0xEB, 0xE2, 0xE2, 0xF6, 0xEE, 0xEE, 0xE7, 0xDD, 0xDD, 0xF7, 0xEA, 0xEB, 0xF9, 0xEC, 
   0xEA, 0xF6, 0xEB, 0xE6, 0xF8, 0xEC, 0xE8, 0xF8, 0xEC, 0xE8, 0xF6, 0xEA, 0xE6, 0xF6, 0xEA, 0xE6, 
   0xF6, 0xEA, 0xE6, 0xF7, 0xE8, 0xE5, 0xF7, 0xEA, 0xE6, 0xF6, 0xEA, 0xE6, 0xF5, 0xEA, 0xE6, 0xF6, 
   0xED, 0xE9, 0xF3, 0xEB, 0xE6, 0xF7, 0xEC, 0xEB, 0xFA, 0xED, 0xF0, 0xEF, 0xE8, 0xE9, 0xEE, 0xEA, 
   0xE9, 0xF2, 0xEE, 0xEC, 0xF7, 0xF0, 0xED, 0xF6, 0xEC, 0xE9, 0xEC, 0xE8, 0xE3, 0xF0, 0xEC, 0xE7, 
   0xF5, 0xED, 0xE9, 0xFD, 0xEE, 0xEB, 0xEB, 0xD6, 0xD4, 0xE7, 0xCF, 0xCD, 0xF3, 0xDC, 0xDA, 0xF1, 
   0xDC, 0xDA, 0xF2, 0xDD, 0xDB, 0xF4, 0xDF, 0xDD, 0xF2, 0xDD, 0xDB, 0xF1, 0xDC, 0xDA, 0xF3, 0xDE, 
   0xDC, 0xF0, 0xDC, 0xD9, 0xF0, 0xDD, 0xDA, 0xF0, 0xDD, 0xDA, 0xF1, 0xDE, 0xDB, 0xF3, 0xE0, 0xDD, 
   0xF3, 0xE0, 0xDD, 0xF5, 0xE2, 0xDF, 0xF7, 0xE4, 0xE1, 0xF7, 0xE4, 0xE1, 0xF5, 0xE2, 0xDF, 0xF7, 
   0xE4, 0xE1, 0xF7, 0xE4, 0xE1, 0xF7, 0xE4, 0xE1, 0xF7, 0xE4, 0xE1, 0xF7, 0xE4, 0xE1, 0xF7, 0xE4, 
   0xE1, 0xF6, 0xE3, 0xE0, 0xF5, 0xE2, 0xDF, 0xF5, 0xE2, 0xDF, 0xF5, 0xE2, 0xDF, 0xF6, 0xE3, 0xE0, 
   0xF3, 0xE0, 0xDD, 0xF2, 0xDD, 0xDB, 0xEC, 0xD5, 0xD3, 0xF1, 0xDA, 0xD8, 0xF2, 0xD9, 0xD7, 0x97, 
   0x7F, 0x7D, 0xB5, 0xA2, 0xA0, 0xFC, 0xEA, 0xE8, 0xDA, 0xC5, 0xC3, 0xBA, 0xA3, 0xA1, 0xD5, 0xC0, 
   0xBE, 0xF3, 0xDF, 0xDD, 0xE1, 0xCE, 0xCC, 0xE9, 0xD1, 0xCF, 0xF7, 0xDC, 0xDA, 0xC7, 0xAB, 0xAA, 
   0x6F, 0x54, 0x52, 0x78, 0x5E, 0x5D, 0x68, 0x5E, 0x56, 0x46, 0x49, 0x3C, 0x77, 0x74, 0x6D, 0x87, 
   0x7E, 0x7B, 0xA3, 0x91, 0x90, 0xB8, 0x9A, 0x99, 0xA0, 0x7D, 0x7A, 0x7C, 0x62, 0x5C, 0x70, 0x57, 
   0x51, 0x7C, 0x62, 0x5B, 0x72, 0x59, 0x4F, 0x6B, 0x52, 0x48, 0x67, 0x4F, 0x43, 0x66, 0x4B, 0x3E, 
   0x6D, 0x4E, 0x41, 0x6C, 0x4E, 0x41, 0x6D, 0x4F, 0x42, 0x6D, 0x4F, 0x42, 0x6D, 0x4F, 0x42, 0x6D, 
   0x4F, 0x42, 0x6E, 0x50, 0x43, 0x6F, 0x51, 0x44, 0x70, 0x52, 0x45, 0x70, 0x52, 0x45, 0x6F, 0x51, 
   0x44, 0x6E, 0x50, 0x43, 0x6D, 0x51, 0x43, 0x6E, 0x53, 0x45, 0x6C, 0x51, 0x43, 0x6D, 0x52, 0x44, 
   0x6D, 0x52, 0x44, 0x6F, 0x54, 0x46, 0x6E, 0x53, 0x45, 0x70, 0x53, 0x46, 0x6F, 0x51, 0x44, 0x6D, 
   0x51, 0x43, 0x6F, 0x56, 0x47, 0x70, 0x56, 0x48, 0x73, 0x5C, 0x4D, 0x62, 0x4D, 0x3F, 0x37, 0x25, 
   0x19, 0x2D, 0x1B, 0x13, 0x4C, 0x37, 0x2F, 0x4F, 0x36, 0x2D, 0x64, 0x47, 0x39, 0x70, 0x4E, 0x3E, 
   0x6B, 0x4D, 0x42, 0x69, 0x4A, 0x40, 0x6B, 0x4E, 0x43, 0x5F, 0x44, 0x39, 0x3F, 0x24, 0x19, 0x44, 
   0x2C, 0x20, 0x63, 0x4B, 0x3D, 0x4B, 0x32, 0x22, 0x59, 0x3F, 0x2F, 0x6B, 0x4F, 0x3F, 0x68, 0x4A, 
   0x3B, 0x6B, 0x4C, 0x3D, 0x6E, 0x4F, 0x40, 0x6E, 0x4E, 0x3B, 0x6E, 0x4D, 0x3C, 0x6D, 0x4D, 0x3D, 
   0x6D, 0x50, 0x40, 0x6F, 0x52, 0x44, 0x71, 0x56, 0x47, 0x58, 0x40, 0x35, 0x36, 0x23, 0x1A, 0x2E, 
   0x1D, 0x12, 0x43, 0x32, 0x26, 0x66, 0x53, 0x45, 0x65, 0x4B, 0x3D, 0x67, 0x48, 0x3B, 0x66, 0x49, 
   0x39, 0x67, 0x4B, 0x3A, 0x67, 0x4B, 0x3A, 0x67, 0x4B, 0x3A, 0x68, 0x4C, 0x3B, 0x69, 0x4D, 0x3C, 
   0x68, 0x4C, 0x3C, 0x68, 0x4B, 0x3C, 0xF3, 0xE2, 0xDF, 0xF3, 0xE2, 0xDF, 0xF4, 0xE3, 0xE0, 0xF4, 
   0xE3, 0xE0, 0xF4, 0xE3, 0xE0, 0xF3, 0xE2, 0xDF, 0xF4, 0xE3, 0xE0, 0xF6, 0xE5, 0xE2, 0xF6, 0xE5, 
   0xE2, 0xF6, 0xE5, 0xE2, 0xF4, 0xE3, 0xE0, 0xF4, 0xE3, 0xE0, 0xF4, 0xE3, 0xE0, 0xF8, 0xE3, 0xDD, 
   0xF7, 0xE3, 0xDC, 0xF5, 0xE4, 0xDE, 0xF2, 0xE3, 0xDE, 0xF4, 0xE5, 0xE3, 0xF8, 0xE7, 0xE5, 0xF9, 
   0xE5, 0xE6, 0xF5, 0xE0, 0xE1, 0xE9, 0xD3, 0xD1, 0xE4, 0xCD, 0xC9, 0xED, 0xDA, 0xD4, 0xC1, 0xB6, 
   0xB3, 0x52, 0x4C, 0x4C, 0x37, 0x3C, 0x3C, 0x39, 0x47, 0x45, 0x3F, 0x4E, 0x4C, 0x2F, 0x3F, 0x3E, 
   0x3A, 0x48, 0x48, 0x62, 0x68, 0x6C, 0x5E, 0x62, 0x67, 0x3B, 0x3D, 0x3F, 0x42, 0x44, 0x45, 0x48, 
   0x4A, 0x4B, 0x49, 0x4B, 0x4C, 0x5A, 0x5C, 0x5D, 0x5A, 0x5D, 0x5E, 0x3B, 0x3F, 0x3F, 0x50, 0x56, 
   0x57, 0x59, 0x5B, 0x61, 0x8D, 0x8D, 0x96, 0xD5, 0xD4, 0xDC, 0xB2, 0xB5, 0xB7, 0x70, 0x75, 0x74, 
   0x4B, 0x54, 0x54, 0x42, 0x4F, 0x50, 0x4C, 0x5D, 0x5F, 0x4A, 0x5F, 0x61, 0x47, 0x5B, 0x5E, 0x49, 
   0x5D, 0x61, 0x52, 0x60, 0x67, 0x53, 0x58, 0x64, 0xAF, 0xB4, 0xBD, 0x9F, 0xA4, 0xAB, 0x68, 0x70, 
   0x77, 0x35, 0x46, 0x4A, 0x46, 0x5A, 0x5C, 0x41, 0x4E, 0x4E, 0x35, 0x40, 0x46, 0x47, 0x51, 0x5E, 
   0x51, 0x57, 0x65, 0x8C, 0x8E, 0x94, 0xF9, 0xF5, 0xF2, 0xFB, 0xF6, 0xF0, 0xDE, 0xDB, 0xD8, 0x50, 
   0x55, 0x52, 0x4E, 0x5A, 0x5B, 0x57, 0x65, 0x6A, 0x53, 0x5D, 0x68, 0x5F, 0x66, 0x75, 0x4A, 0x53, 
   0x5A, 0x52, 0x52, 0x57, 0xE3, 0xDE, 0xE2, 0xE2, 0xD1, 0xD0, 0xE2, 0xCC, 0xC7, 0xEB, 0xD1, 0xC8, 
   0xDE, 0xC4, 0xBC, 0xF6, 0xDC, 0xD6, 0xF9, 0xE1, 0xDB, 0xFB, 0xE5, 0xE0, 0xF4, 0xE2, 0xDF, 0xF5, 
   0xE5, 0xE2, 0xF5, 0xE6, 0xE3, 0xF7, 0xE5, 0xE0, 0xFC, 0xF0, 0xEB, 0xF6, 0xEF, 0xEB, 0xC0, 0xBD, 
   0xBA, 0x6D, 0x68, 0x67, 0xE7, 0xDE, 0xE0, 0xF8, 0xEB, 0xEB, 0xF6, 0xE9, 0xE7, 0xF1, 0xE4, 0xE2, 
   0xF5, 0xE8, 0xE6, 0xF7, 0xEA, 0xE8, 0xF7, 0xEA, 0xE8, 0xF7, 0xEA, 0xE8, 0xF7, 0xE8, 0xE9, 0xF4, 
   0xE9, 0xE9, 0xF9, 0xF3, 0xF2, 0xCB, 0xC6, 0xC5, 0x8A, 0x82, 0x82, 0xF3, 0xE8, 0xE8, 0xFA, 0xEC, 
   0xEC, 0xF6, 0xEA, 0xE7, 0xF8, 0xEB, 0xE9, 0xF7, 0xEA, 0xE7, 0xF6, 0xE9, 0xE7, 0xF6, 0xE9, 0xE7, 
   0xF5, 0xE9, 0xE6, 0xF5, 0xE8, 0xE6, 0xF8, 0xEB, 0xE9, 0xF4, 0xE7, 0xE5, 0xF6, 0xEB, 0xE9, 0xF3, 
   0xEA, 0xE6, 0xF4, 0xEC, 0xE8, 0xF3, 0xEA, 0xE9, 0xF3, 0xE9, 0xEB, 0xEF, 0xEA, 0xEA, 0xF3, 0xF1, 
   0xF0, 0xF1, 0xEF, 0xEC, 0xF3, 0xED, 0xE9, 0xF7, 0xEE, 0xEB, 0xF1, 0xEE, 0xE9, 0xF2, 0xED, 0xE8, 
   0xF6, 0xEC, 0xE8, 0xF7, 0xE9, 0xE5, 0xE9, 0xD4, 0xD2, 0xEF, 0xD8, 0xD6, 0xF4, 0xDD, 0xDB, 0xF0, 
   0xDB, 0xD9, 0xF0, 0xDB, 0xD9, 0xF3, 0xDE, 0xDC, 0xF4, 0xDF, 0xDD, 0xF2, 0xDD, 0xDB, 0xF1, 0xDC, 
   0xDA, 0xF0, 0xDD, 0xDA, 0xF0, 0xDD, 0xDA, 0xF0, 0xDD, 0xDA, 0xF1, 0xDE, 0xDB, 0xF3, 0xE0, 0xDD, 
   0xF4, 0xE1, 0xDE, 0xF5, 0xE2, 0xDF, 0xF5, 0xE2, 0xDF, 0xF5, 0xE2, 0xDF, 0xF4, 0xE1, 0xDE, 0xF7, 
   0xE4, 0xE1, 0xF7, 0xE4, 0xE1, 0xF7, 0xE4, 0xE1, 0xF7, 0xE4, 0xE1, 0xF7, 0xE4, 0xE1, 0xF7, 0xE4, 
   0xE1, 0xF5, 0xE2, 0xDF, 0xF5, 0xE2, 0xDF, 0xF5, 0xE2, 0xDF, 0xF6, 0xE3, 0xE0, 0xF6, 0xE3, 0xE0, 
   0xF5, 0xE2, 0xDF, 0xF2, 0xDD, 0xDB, 0xF0, 0xD9, 0xD7, 0xED, 0xD5, 0xD3, 0xE2, 0xC9, 0xC7, 0xE0, 
   0xCB, 0xC9, 0xF9, 0xE7, 0xE5, 0xC9, 0xB2, 0xB0, 0x7D, 0x65, 0x63, 0xE8, 0xD2, 0xD0, 0xF6, 0xDF, 
   0xDE, 0xE5, 0xD0, 0xCD, 0xE9, 0xD5, 0xD3, 0xDF, 0xC8, 0xC6, 0xFA, 0xDF, 0xDE, 0x84, 0x67, 0x66, 
   0x66, 0x4E, 0x4C, 0x7B, 0x65, 0x63, 0x61, 0x5A, 0x53, 0x42, 0x46, 0x3E, 0x53, 0x52, 0x4E, 0xAC, 
   0xA3, 0xA3, 0xD1, 0xBD, 0xBE, 0xAD, 0x8E, 0x8B, 0x9B, 0x78, 0x74, 0xB2, 0x98, 0x92, 0xB1, 0x97, 
   0x91, 0x85, 0x6B, 0x64, 0x5F, 0x46, 0x3D, 0x6F, 0x56, 0x4C, 0x64, 0x4C, 0x40, 0x67, 0x4C, 0x40, 
   0x6C, 0x4E, 0x41, 0x6D, 0x4F, 0x42, 0x6D, 0x4F, 0x42, 0x6D, 0x4F, 0x42, 0x6D, 0x4F, 0x42, 0x6D, 
   0x4F, 0x42, 0x6F, 0x51, 0x44, 0x70, 0x52, 0x45, 0x70, 0x52, 0x45, 0x70, 0x52, 0x45, 0x70, 0x52, 
   0x45, 0x6F, 0x51, 0x44, 0x6D, 0x51, 0x43, 0x6E, 0x53, 0x45, 0x6D, 0x52, 0x44, 0x6D, 0x52, 0x44, 
   0x70, 0x55, 0x47, 0x6E, 0x53, 0x45, 0x6B, 0x50, 0x42, 0x71, 0x53, 0x46, 0x72, 0x53, 0x47, 0x72, 
   0x55, 0x48, 0x6C, 0x52, 0x44, 0x71, 0x58, 0x4A, 0x62, 0x4A, 0x3B, 0x57, 0x43, 0x35, 0x32, 0x20, 
   0x15, 0x2F, 0x1D, 0x15, 0x3C, 0x29, 0x21, 0x38, 0x21, 0x18, 0x61, 0x45, 0x37, 0x6C, 0x4B, 0x3B, 
   0x69, 0x4B, 0x3F, 0x6A, 0x4C, 0x40, 0x6B, 0x4E, 0x41, 0x5C, 0x42, 0x34, 0x41, 0x27, 0x19, 0x4C, 
   0x35, 0x27, 0x5B, 0x43, 0x34, 0x61, 0x47, 0x37, 0x67, 0x4D, 0x3D, 0x69, 0x4C, 0x3D, 0x6A, 0x4C, 
   0x3D, 0x6B, 0x4C, 0x3D, 0x6C, 0x4D, 0x3E, 0x6E, 0x4E, 0x3B, 0x6E, 0x4E, 0x3C, 0x6D, 0x4F, 0x3E, 
   0x6C, 0x4F, 0x40, 0x6A, 0x4F, 0x41, 0x72, 0x56, 0x48, 0x55, 0x3D, 0x33, 0x35, 0x23, 0x1A, 0x32, 
   0x23, 0x18, 0x35, 0x27, 0x19, 0x4F, 0x3B, 0x2D, 0x4F, 0x37, 0x29, 0x67, 0x49, 0x3C, 0x66, 0x4A, 
   0x39, 0x67, 0x4B, 0x3A, 0x67, 0x4B, 0x3A, 0x67, 0x4B, 0x3A, 0x68, 0x4C, 0x3B, 0x69, 0x4D, 0x3C, 
   0x68, 0x4C, 0x3C, 0x68, 0x4B, 0x3C, 0xF5, 0xE4, 0xE1, 0xF4, 0xE3, 0xE0, 0xF4, 0xE3, 0xE0, 0xF4, 
   0xE3, 0xE0, 0xF4, 0xE3, 0xE0, 0xF4, 0xE3, 0xE0, 0xF4, 0xE3, 0xE0, 0xF5, 0xE4, 0xE1, 0xF5, 0xE4, 
   0xE1, 0xF5, 0xE4, 0xE1, 0xF5, 0xE4, 0xE1, 0xF5, 0xE4, 0xE1, 0xF5, 0xE4, 0xE1, 0xF9, 0xE4, 0xDF, 
   0xF8, 0xE4, 0xDF, 0xF3, 0xE6, 0xE1, 0xF1, 0xE6, 0xE2, 0xF1, 0xE5, 0xE2, 0xF7, 0xEB, 0xE9, 0xF7, 
   0xE6, 0xE5, 0xEE, 0xD9, 0xD8, 0xE3, 0xCF, 0xCA, 0xE6, 0xD3, 0xCE, 0xE2, 0xD4, 0xCF, 0x66, 0x5E, 
   0x5F, 0x4A, 0x47, 0x4A, 0x5A, 0x5F, 0x60, 0x40, 0x4C, 0x4A, 0x3A, 0x48, 0x46, 0x37, 0x46, 0x45, 
   0x38, 0x45, 0x46, 0x39, 0x41, 0x45, 0x50, 0x54, 0x59, 0x40, 0x42, 0x43, 0x51, 0x53, 0x54, 0x46, 
   0x48, 0x49, 0x41, 0x43, 0x44, 0x41, 0x43, 0x44, 0x49, 0x4A, 0x4B, 0x42, 0x45, 0x45, 0x4D, 0x51, 
   0x52, 0x76, 0x76, 0x7D, 0x4A, 0x49, 0x52, 0x76, 0x74, 0x7B, 0xE7, 0xE6, 0xE9, 0xBF, 0xBD, 0xBD, 
   0x80, 0x80, 0x82, 0x5E, 0x63, 0x65, 0x6F, 0x7B, 0x7C, 0x63, 0x77, 0x79, 0x4A, 0x5E, 0x61, 0x50, 
   0x63, 0x67, 0x49, 0x56, 0x5E, 0x72, 0x77, 0x82, 0xA9, 0xAB, 0xB6, 0x79, 0x7C, 0x85, 0x54, 0x5B, 
   0x61, 0x3E, 0x4B, 0x4F, 0x56, 0x68, 0x6B, 0x3F, 0x4B, 0x4C, 0x47, 0x51, 0x57, 0x4B, 0x53, 0x60, 
   0x45, 0x49, 0x57, 0xAE, 0xAE, 0xB4, 0xF8, 0xF3, 0xF2, 0xF9, 0xF8, 0xF3, 0x8C, 0x91, 0x8C, 0x4B, 
   0x55, 0x52, 0x54, 0x64, 0x65, 0x57, 0x6A, 0x6F, 0x4E, 0x5F, 0x68, 0x4C, 0x5B, 0x67, 0x53, 0x5C, 
   0x63, 0x79, 0x79, 0x7E, 0xF4, 0xED, 0xF1, 0xE5, 0xD4, 0xD4, 0xE5, 0xD0, 0xCD, 0xEC, 0xD5, 0xCE, 
   0xE3, 0xCB, 0xC5, 0xF5, 0xDD, 0xD8, 0xF9, 0xE4, 0xDE, 0xF8, 0xE4, 0xE0, 0xF3, 0xE3, 0xE1, 0xF4, 
   0xE6, 0xE4, 0xF3, 0xE6, 0xE5, 0xF7, 0xE6, 0xE1, 0xF2, 0xE4, 0xDF, 0xF5, 0xEE, 0xEA, 0x8E, 0x88, 
   0x85, 0xCA, 0xC3, 0xC3, 0xF8, 0xF0, 0xF1, 0xF1, 0xE4, 0xE4, 0xF1, 0xE4, 0xE2, 0xF6, 0xE9, 0xE7, 
   0xF8, 0xEB, 0xE9, 0xF8, 0xEB, 0xE9, 0xF7, 0xEA, 0xE8, 0xF6, 0xE9, 0xE8, 0xF4, 0xE7, 0xE8, 0xF5, 
   0xEC, 0xEC, 0xD1, 0xCD, 0xCC, 0x71, 0x6C, 0x6B, 0xBE, 0xB9, 0xB8, 0xFD, 0xF6, 0xF6, 0xF5, 0xEB, 
   0xEA, 0xF7, 0xEA, 0xE8, 0xF8, 0xEB, 0xE9, 0xF6, 0xE9, 0xE7, 0xF6, 0xE9, 0xE7, 0xF6, 0xE9, 0xE7, 
   0xF6, 0xE9, 0xE7, 0xF8, 0xEB, 0xE9, 0xF7, 0xE9, 0xE7, 0xF8, 0xEB, 0xE9, 0xF4, 0xEA, 0xE7, 0xF3, 
   0xEB, 0xE7, 0xF4, 0xED, 0xE9, 0xF4, 0xEC, 0xEB, 0xF3, 0xEC, 0xED, 0xF1, 0xED, 0xEE, 0xE6, 0xE5, 
   0xE5, 0xC3, 0xC2, 0xBF, 0xF7, 0xF3, 0xF0, 0xF7, 0xF1, 0xED, 0xF4, 0xEF, 0xEA, 0xF4, 0xEE, 0xE9, 
   0xF6, 0xEB, 0xE7, 0xF1, 0xE3, 0xDF, 0xEE, 0xD9, 0xD7, 0xF3, 0xDC, 0xDA, 0xF5, 0xDE, 0xDC, 0xF0, 
   0xDB, 0xD9, 0xF0, 0xDB, 0xD9, 0xF3, 0xDE, 0xDC, 0xF3, 0xDE, 0xDC, 0xF2, 0xDD, 0xDB, 0xF4, 0xDF, 
   0xDD, 0xF1, 0xDE, 0xDB, 0xF1, 0xDE, 0xDB, 0xF1, 0xDE, 0xDB, 0xF1, 0xDE, 0xDB, 0xF3, 0xE0, 0xDD, 
   0xF3, 0xE0, 0xDD, 0xF5, 0xE2, 0xDF, 0xF5, 0xE2, 0xDF, 0xF4, 0xE1, 0xDE, 0xF6, 0xE3, 0xE0, 0xF7, 
   0xE4, 0xE1, 0xF7, 0xE4, 0xE1, 0xF7, 0xE4, 0xE1, 0xF7, 0xE4, 0xE1, 0xF7, 0xE4, 0xE1, 0xF5, 0xE2, 
   0xDF, 0xF4, 0xE1, 0xDE, 0xF5, 0xE2, 0xDF, 0xF5, 0xE2, 0xDF, 0xF5, 0xE2, 0xDF, 0xF6, 0xE3, 0xE0, 
   0xF6, 0xE3, 0xE0, 0xF6, 0xE4, 0xE2, 0xDE, 0xC7, 0xC5, 0xA6, 0x8E, 0x8C, 0xC8, 0xAE, 0xAC, 0xF9, 
   0xE4, 0xE2, 0xE4, 0xCC, 0xCA, 0xAF, 0x96, 0x94, 0xCC, 0xB3, 0xB1, 0xFA, 0xE2, 0xE0, 0xEE, 0xD5, 
   0xD3, 0xE7, 0xD0, 0xCE, 0xE8, 0xD2, 0xD0, 0xF0, 0xD8, 0xD6, 0xF7, 0xDD, 0xDC, 0x82, 0x6A, 0x68, 
   0x6F, 0x5C, 0x59, 0x64, 0x54, 0x51, 0x48, 0x45, 0x40, 0x37, 0x3B, 0x3A, 0x65, 0x64, 0x64, 0xA8, 
   0x9F, 0xA1, 0x6A, 0x56, 0x56, 0x6F, 0x50, 0x4B, 0xDA, 0xB7, 0xB2, 0xCE, 0xB1, 0xAB, 0xB4, 0x99, 
   0x92, 0x8E, 0x73, 0x6A, 0x78, 0x5D, 0x53, 0x6E, 0x53, 0x49, 0x67, 0x4E, 0x42, 0x6B, 0x4F, 0x41, 
   0x6D, 0x4F, 0x41, 0x6E, 0x50, 0x43, 0x6E, 0x50, 0x43, 0x6E, 0x50, 0x43, 0x6E, 0x50, 0x43, 0x6E, 
   0x50, 0x43, 0x6F, 0x51, 0x44, 0x70, 0x52, 0x45, 0x71, 0x53, 0x46, 0x71, 0x53, 0x46, 0x71, 0x53, 
   0x46, 0x70, 0x51, 0x44, 0x6E, 0x52, 0x44, 0x6F, 0x54, 0x46, 0x6D, 0x52, 0x44, 0x6F, 0x54, 0x46, 
   0x71, 0x56, 0x48, 0x70, 0x55, 0x47, 0x6F, 0x53, 0x45, 0x6F, 0x51, 0x44, 0x72, 0x53, 0x47, 0x71, 
   0x55, 0x47, 0x6D, 0x53, 0x45, 0x74, 0x5A, 0x4C, 0x55, 0x3E, 0x2F, 0x38, 0x24, 0x16, 0x30, 0x1F, 
   0x14, 0x35, 0x25, 0x1C, 0x33, 0x23, 0x1B, 0x41, 0x2C, 0x22, 0x66, 0x4D, 0x3E, 0x69, 0x4B, 0x3A, 
   0x6C, 0x4F, 0x3F, 0x6D, 0x50, 0x41, 0x6B, 0x50, 0x40, 0x5A, 0x41, 0x30, 0x4D, 0x34, 0x23, 0x5E, 
   0x47, 0x36, 0x62, 0x4A, 0x39, 0x68, 0x4E, 0x3E, 0x68, 0x4E, 0x3D, 0x69, 0x4D, 0x3E, 0x6D, 0x4F, 
   0x40, 0x6C, 0x4C, 0x3E, 0x6B, 0x4C, 0x3D, 0x6D, 0x4E, 0x3C, 0x6D, 0x4F, 0x3E, 0x6D, 0x50, 0x40, 
   0x6D, 0x51, 0x43, 0x6A, 0x4F, 0x41, 0x70, 0x53, 0x46, 0x55, 0x3F, 0x35, 0x36, 0x26, 0x1C, 0x40, 
   0x33, 0x27, 0x28, 0x1C, 0x0E, 0x26, 0x15, 0x07, 0x41, 0x2B, 0x1D, 0x62, 0x47, 0x39, 0x65, 0x48, 
   0x38, 0x66, 0x4A, 0x39, 0x66, 0x4A, 0x39, 0x67, 0x4B, 0x3A, 0x68, 0x4C, 0x3B, 0x69, 0x4D, 0x3C, 
   0x68, 0x4C, 0x3C, 0x68, 0x4B, 0x3C, 0xF7, 0xE6, 0xE3, 0xF5, 0xE4, 0xE1, 0xF4, 0xE3, 0xE0, 0xF4, 
   0xE3, 0xE0, 0xF4, 0xE3, 0xE0, 0xF5, 0xE4, 0xE1, 0xF5, 0xE4, 0xE1, 0xF4, 0xE3, 0xE0, 0xF4, 0xE3, 
   0xE0, 0xF4, 0xE3, 0xE0, 0xF6, 0xE5, 0xE2, 0xF6, 0xE5, 0xE2, 0xF6, 0xE5, 0xE2, 0xF8, 0xE5, 0xE0, 
   0xF7, 0xE5, 0xDF, 0xF2, 0xE8, 0xE3, 0xE4, 0xDC, 0xD8, 0xF0, 0xE8, 0xE5, 0xE5, 0xDB, 0xDB, 0xDC, 
   0xCD, 0xCC, 0xED, 0xD8, 0xD4, 0xD9, 0xC6, 0xC0, 0xEA, 0xDC, 0xD5, 0x9C, 0x92, 0x8E, 0x43, 0x3F, 
   0x41, 0x4D, 0x4D, 0x54, 0x48, 0x4D, 0x4F, 0x41, 0x4A, 0x47, 0x40, 0x4C, 0x4A, 0x3B, 0x49, 0x48, 
   0x3A, 0x47, 0x47, 0x41, 0x4A, 0x4D, 0x52, 0x57, 0x5C, 0x41, 0x44, 0x44, 0x43, 0x46, 0x47, 0x48, 
   0x4A, 0x4B, 0x48, 0x4B, 0x4C, 0x47, 0x4A, 0x4B, 0x43, 0x46, 0x47, 0x58, 0x5B, 0x5B, 0x7A, 0x7D, 
   0x7E, 0x9D, 0x9D, 0xA4, 0x5B, 0x59, 0x62, 0x56, 0x52, 0x5A, 0x94, 0x8E, 0x91, 0xDE, 0xD5, 0xD7, 
   0xD6, 0xCA, 0xCC, 0xCF, 0xCC, 0xCE, 0xA2, 0xA3, 0xA5, 0x60, 0x6B, 0x6E, 0x53, 0x60, 0x63, 0x52, 
   0x5E, 0x63, 0x53, 0x5C, 0x64, 0x94, 0x9A, 0xA4, 0x6C, 0x6E, 0x79, 0x80, 0x82, 0x8A, 0x67, 0x6C, 
   0x71, 0x53, 0x5D, 0x61, 0x40, 0x4F, 0x51, 0x43, 0x4F, 0x51, 0x4D, 0x56, 0x5E, 0x4B, 0x52, 0x5C, 
   0x57, 0x58, 0x66, 0xD6, 0xD4, 0xDB, 0xF7, 0xF3, 0xF3, 0xF1, 0xF0, 0xEC, 0x73, 0x79, 0x75, 0x44, 
   0x4D, 0x4B, 0x53, 0x61, 0x62, 0x57, 0x68, 0x6D, 0x50, 0x62, 0x6A, 0x58, 0x68, 0x72, 0x5B, 0x64, 
   0x69, 0xB4, 0xB4, 0xB9, 0xFB, 0xF3, 0xF7, 0xE8, 0xD8, 0xD8, 0xED, 0xD9, 0xD8, 0xDC, 0xC9, 0xC4, 
   0xCB, 0xB5, 0xB0, 0xEB, 0xD7, 0xD3, 0xFE, 0xEC, 0xE8, 0xF4, 0xE4, 0xE2, 0xEF, 0xE1, 0xE0, 0xF2, 
   0xE8, 0xE8, 0xF7, 0xEC, 0xEC, 0xED, 0xE0, 0xDB, 0xF0, 0xE4, 0xDF, 0xE7, 0xDF, 0xDB, 0xC7, 0xC1, 
   0xBE, 0xF8, 0xF2, 0xF1, 0xF2, 0xE9, 0xE7, 0xF4, 0xE8, 0xE6, 0xF5, 0xE8, 0xE6, 0xF7, 0xEA, 0xE8, 
   0xF5, 0xE8, 0xE6, 0xF6, 0xE9, 0xE7, 0xF5, 0xE8, 0xE6, 0xF4, 0xE7, 0xE5, 0xF3, 0xE8, 0xE8, 0xFB, 
   0xF4, 0xF3, 0x84, 0x80, 0x7F, 0x63, 0x61, 0x60, 0xF2, 0xEE, 0xED, 0xF7, 0xEE, 0xEE, 0xF3, 0xE8, 
   0xE7, 0xF8, 0xEB, 0xEA, 0xF8, 0xEB, 0xEA, 0xF6, 0xE9, 0xE8, 0xF6, 0xE9, 0xE8, 0xF6, 0xE9, 0xE8, 
   0xF6, 0xE9, 0xE8, 0xF9, 0xEC, 0xEB, 0xF6, 0xE9, 0xE8, 0xF8, 0xEC, 0xEB, 0xF5, 0xEC, 0xEA, 0xF7, 
   0xEE, 0xED, 0xF8, 0xF1, 0xEF, 0xF8, 0xF2, 0xF1, 0xF7, 0xF1, 0xF2, 0xF7, 0xF5, 0xF5, 0xA2, 0xA5, 
   0xA3, 0xA2, 0xA3, 0xA0, 0xFD, 0xFC, 0xF8, 0xF5, 0xF1, 0xED, 0xF5, 0xED, 0xE9, 0xF4, 0xEB, 0xE7, 
   0xF5, 0xE9, 0xE5, 0xF0, 0xE1, 0xDE, 0xF2, 0xDD, 0xDB, 0xF4, 0xDD, 0xDB, 0xF4, 0xDD, 0xDB, 0xF2, 
   0xDD, 0xDB, 0xF3, 0xDE, 0xDC, 0xF4, 0xDF, 0xDD, 0xF3, 0xDE, 0xDC, 0xF2, 0xDD, 0xDB, 0xF4, 0xDF, 
   0xDD, 0xF3, 0xDF, 0xDC, 0xF2, 0xDF, 0xDC, 0xF2, 0xDF, 0xDC, 0xF2, 0xDF, 0xDC, 0xF2, 0xDF, 0xDC, 
   0xF3, 0xE0, 0xDD, 0xF5, 0xE2, 0xDF, 0xF4, 0xE1, 0xDE, 0xF3, 0xE0, 0xDD, 0xF7, 0xE4, 0xE1, 0xF7, 
   0xE4, 0xE1, 0xF7, 0xE4, 0xE1, 0xF7, 0xE4, 0xE1, 0xF7, 0xE4, 0xE1, 0xF6, 0xE3, 0xE0, 0xF4, 0xE1, 
   0xDE, 0xF4, 0xE1, 0xDE, 0xF5, 0xE2, 0xDF, 0xF5, 0xE2, 0xDF, 0xF5, 0xE2, 0xDF, 0xF2, 0xDF, 0xDC, 
   0xF3, 0xE1, 0xDE, 0xB3, 0x9E, 0x9C, 0x9B, 0x85, 0x83, 0xCE, 0xB9, 0xB7, 0xF4, 0xDF, 0xDD, 0xF0, 
   0xD6, 0xD4, 0xD9, 0xBF, 0xBD, 0xE5, 0xCE, 0xCC, 0xF9, 0xE1, 0xDF, 0xF0, 0xD7, 0xD5, 0xE8, 0xCF, 
   0xCD, 0xED, 0xD4, 0xD2, 0xEE, 0xD5, 0xD3, 0xF3, 0xDA, 0xD8, 0xF5, 0xDC, 0xDA, 0xC6, 0xB1, 0xAF, 
   0x5F, 0x50, 0x4D, 0x59, 0x4E, 0x4A, 0x3E, 0x3C, 0x39, 0x42, 0x45, 0x48, 0x4A, 0x48, 0x4C, 0x5F, 
   0x55, 0x59, 0x8C, 0x7A, 0x79, 0xE0, 0xC6, 0xC1, 0xF2, 0xCE, 0xC7, 0xCB, 0xAE, 0xA8, 0xB2, 0x96, 
   0x8E, 0x8D, 0x72, 0x68, 0x79, 0x5E, 0x54, 0x6F, 0x54, 0x49, 0x68, 0x4E, 0x41, 0x6C, 0x50, 0x42, 
   0x6E, 0x50, 0x43, 0x70, 0x52, 0x45, 0x70, 0x52, 0x45, 0x6F, 0x51, 0x44, 0x6F, 0x51, 0x44, 0x6F, 
   0x51, 0x44, 0x70, 0x52, 0x45, 0x71, 0x53, 0x46, 0x72, 0x54, 0x47, 0x72, 0x54, 0x47, 0x71, 0x53, 
   0x46, 0x70, 0x52, 0x45, 0x6F, 0x52, 0x45, 0x70, 0x55, 0x47, 0x6F, 0x54, 0x46, 0x6D, 0x52, 0x44, 
   0x64, 0x49, 0x3B, 0x6B, 0x50, 0x42, 0x71, 0x56, 0x48, 0x70, 0x53, 0x45, 0x73, 0x55, 0x48, 0x6F, 
   0x53, 0x45, 0x6C, 0x52, 0x44, 0x71, 0x58, 0x4A, 0x58, 0x41, 0x32, 0x34, 0x20, 0x12, 0x36, 0x25, 
   0x1A, 0x42, 0x33, 0x2A, 0x34, 0x24, 0x1C, 0x47, 0x35, 0x2A, 0x59, 0x42, 0x34, 0x6B, 0x51, 0x3F, 
   0x6C, 0x51, 0x3E, 0x6A, 0x4E, 0x3B, 0x68, 0x4E, 0x3B, 0x62, 0x4B, 0x37, 0x60, 0x49, 0x36, 0x62, 
   0x4D, 0x39, 0x63, 0x4C, 0x3A, 0x67, 0x4E, 0x3E, 0x66, 0x4B, 0x3B, 0x6B, 0x4E, 0x3F, 0x6D, 0x4F, 
   0x40, 0x6C, 0x4D, 0x3E, 0x6D, 0x4E, 0x3F, 0x6B, 0x4E, 0x3D, 0x6B, 0x50, 0x3F, 0x6C, 0x51, 0x42, 
   0x6C, 0x52, 0x43, 0x6B, 0x51, 0x44, 0x6F, 0x56, 0x49, 0x5C, 0x47, 0x3D, 0x32, 0x24, 0x1A, 0x32, 
   0x26, 0x1A, 0x27, 0x1C, 0x0E, 0x1C, 0x0E, 0x00, 0x3F, 0x2B, 0x1C, 0x62, 0x49, 0x3A, 0x64, 0x47, 
   0x37, 0x65, 0x49, 0x38, 0x65, 0x49, 0x38, 0x67, 0x4B, 0x3A, 0x68, 0x4C, 0x3B, 0x69, 0x4D, 0x3C, 
   0x68, 0x4C, 0x3C, 0x68, 0x4B, 0x3C, 0xF6, 0xE5, 0xE2, 0xF5, 0xE4, 0xE1, 0xF4, 0xE3, 0xE0, 0xF5, 
   0xE4, 0xE1, 0xF5, 0xE4, 0xE1, 0xF6, 0xE5, 0xE2, 0xF7, 0xE6, 0xE3, 0xF6, 0xE5, 0xE2, 0xF6, 0xE5, 
   0xE2, 0xF6, 0xE5, 0xE2, 0xF6, 0xE5, 0xE2, 0xF7, 0xE6, 0xE3, 0xF6, 0xE5, 0xE2, 0xF6, 0xE4, 0xE0, 
   0xF3, 0xE5, 0xDF, 0xEB, 0xE3, 0xDF, 0xEF, 0xEB, 0xE7, 0xCE, 0xCB, 0xC8, 0xB5, 0xB0, 0xB0, 0xCD, 
   0xC2, 0xC1, 0xC0, 0xAF, 0xAA, 0xE3, 0xD4, 0xCD, 0x98, 0x8F, 0x88, 0x53, 0x4E, 0x4A, 0x4B, 0x4B, 
   0x4E, 0x6C, 0x6D, 0x77, 0x91, 0x94, 0x97, 0x52, 0x57, 0x56, 0x40, 0x4B, 0x49, 0x48, 0x57, 0x55, 
   0x3D, 0x4A, 0x4A, 0x49, 0x52, 0x55, 0x4B, 0x51, 0x55, 0x3E, 0x43, 0x44, 0x38, 0x3C, 0x3D, 0x40, 
   0x44, 0x45, 0x3C, 0x40, 0x41, 0x3E, 0x43, 0x44, 0x41, 0x46, 0x46, 0x50, 0x53, 0x53, 0xDC, 0xDE, 
   0xDF, 0xCB, 0xCB, 0xD1, 0x61, 0x5F, 0x68, 0x55, 0x50, 0x58, 0x98, 0x8F, 0x92, 0xD2, 0xC5, 0xC7, 
   0xEF, 0xD7, 0xDB, 0xFF, 0xEE, 0xF2, 0xD6, 0xCA, 0xCD, 0x60, 0x5E, 0x61, 0x41, 0x42, 0x46, 0x47, 
   0x48, 0x4D, 0x52, 0x56, 0x5D, 0x63, 0x68, 0x71, 0x5D, 0x5F, 0x68, 0x7F, 0x80, 0x87, 0x54, 0x56, 
   0x5B, 0x49, 0x50, 0x54, 0x35, 0x3F, 0x41, 0x3C, 0x48, 0x4C, 0x41, 0x49, 0x51, 0x46, 0x4A, 0x54, 
   0x6D, 0x6C, 0x77, 0xED, 0xE8, 0xEE, 0xFB, 0xF6, 0xF7, 0xE7, 0xE4, 0xE3, 0x61, 0x60, 0x5F, 0x56, 
   0x57, 0x58, 0x5B, 0x60, 0x64, 0x54, 0x5C, 0x62, 0x4C, 0x58, 0x5F, 0x5C, 0x68, 0x71, 0x65, 0x6D, 
   0x72, 0xCF, 0xCF, 0xD4, 0xFC, 0xF4, 0xF8, 0xEB, 0xDC, 0xDD, 0xEF, 0xDE, 0xDD, 0x86, 0x72, 0x6F, 
   0xD3, 0xC2, 0xBE, 0xD2, 0xC3, 0xC0, 0xF0, 0xE1, 0xDF, 0xF7, 0xEC, 0xEB, 0xF8, 0xEF, 0xF0, 0xE8, 
   0xE1, 0xE3, 0x9F, 0x98, 0x99, 0xC9, 0xBE, 0xBB, 0xE6, 0xDB, 0xD7, 0xD3, 0xC8, 0xC5, 0xCF, 0xC6, 
   0xC3, 0xF5, 0xEE, 0xEA, 0xF4, 0xE9, 0xE6, 0xF3, 0xE6, 0xE4, 0xF7, 0xEA, 0xE8, 0xF7, 0xEA, 0xE8, 
   0xF5, 0xE8, 0xE6, 0xF4, 0xE7, 0xE5, 0xF5, 0xE8, 0xE6, 0xF4, 0xE7, 0xE4, 0xF8, 0xEE, 0xEE, 0xFE, 
   0xF8, 0xF7, 0x8A, 0x86, 0x85, 0x94, 0x92, 0x91, 0xF5, 0xF0, 0xEF, 0xF3, 0xEB, 0xEB, 0xF4, 0xE9, 
   0xE9, 0xF4, 0xE9, 0xE9, 0xF4, 0xE8, 0xE8, 0xF3, 0xE8, 0xE8, 0xF4, 0xE9, 0xE9, 0xF5, 0xE9, 0xE9, 
   0xF5, 0xEA, 0xEA, 0xF7, 0xEB, 0xEB, 0xF6, 0xEB, 0xEB, 0xF4, 0xE9, 0xEA, 0xFB, 0xF3, 0xF3, 0xED, 
   0xE6, 0xE6, 0xDC, 0xD6, 0xD5, 0xD6, 0xD0, 0xD1, 0xB6, 0xB0, 0xB1, 0xC5, 0xC4, 0xC4, 0x68, 0x6B, 
   0x69, 0xAE, 0xAF, 0xAC, 0xFC, 0xFB, 0xF7, 0xF0, 0xEC, 0xE8, 0xF6, 0xEC, 0xE8, 0xF4, 0xE9, 0xE5, 
   0xF6, 0xE8, 0xE5, 0xF1, 0xE1, 0xDE, 0xF1, 0xDC, 0xDA, 0xF7, 0xE0, 0xDE, 0xF4, 0xDE, 0xDC, 0xF4, 
   0xDF, 0xDD, 0xF3, 0xDE, 0xDC, 0xF5, 0xE0, 0xDE, 0xF5, 0xE0, 0xDE, 0xF4, 0xDF, 0xDD, 0xF4, 0xDF, 
   0xDD, 0xF1, 0xDE, 0xDB, 0xF1, 0xDE, 0xDB, 0xF2, 0xDF, 0xDC, 0xF2, 0xDF, 0xDC, 0xF3, 0xE0, 0xDD, 
   0xF4, 0xE1, 0xDE, 0xF4, 0xE1, 0xDE, 0xF2, 0xDF, 0xDC, 0xF2, 0xDF, 0xDC, 0xF6, 0xE3, 0xE0, 0xF7, 
   0xE4, 0xE1, 0xF7, 0xE4, 0xE1, 0xF7, 0xE4, 0xE1, 0xF6, 0xE3, 0xE0, 0xF5, 0xE2, 0xDF, 0xF3, 0xE0, 
   0xDD, 0xF4, 0xE1, 0xDE, 0xF5, 0xE2, 0xDF, 0xF5, 0xE2, 0xDF, 0xF4, 0xE1, 0xDE, 0xF1, 0xDE, 0xDB, 
   0xEB, 0xD8, 0xD5, 0xE4, 0xCF, 0xCD, 0xEE, 0xD9, 0xD7, 0xF8, 0xE3, 0xE1, 0xF5, 0xDD, 0xDB, 0xF0, 
   0xD7, 0xD5, 0xF2, 0xD8, 0xD6, 0xF4, 0xDD, 0xDB, 0xED, 0xD3, 0xD1, 0xEF, 0xD5, 0xD3, 0xEB, 0xD1, 
   0xCF, 0xEE, 0xD4, 0xD2, 0xF2, 0xD8, 0xD6, 0xED, 0xD3, 0xD1, 0xEB, 0xD1, 0xD0, 0xF1, 0xE1, 0xDF, 
   0x63, 0x57, 0x53, 0x5B, 0x53, 0x4E, 0x67, 0x64, 0x63, 0x47, 0x46, 0x4A, 0x51, 0x4C, 0x51, 0xE0, 
   0xD5, 0xD8, 0xFE, 0xEC, 0xEB, 0xF4, 0xD6, 0xCF, 0xDF, 0xBC, 0xB2, 0xBC, 0x9F, 0x97, 0x9E, 0x82, 
   0x79, 0x85, 0x69, 0x5F, 0x75, 0x5A, 0x4E, 0x6D, 0x52, 0x46, 0x6B, 0x51, 0x42, 0x6D, 0x51, 0x44, 
   0x70, 0x51, 0x45, 0x70, 0x52, 0x45, 0x70, 0x52, 0x45, 0x70, 0x52, 0x45, 0x70, 0x52, 0x45, 0x70, 
   0x52, 0x45, 0x70, 0x52, 0x45, 0x71, 0x53, 0x46, 0x71, 0x53, 0x46, 0x71, 0x53, 0x46, 0x72, 0x54, 
   0x47, 0x70, 0x52, 0x45, 0x70, 0x54, 0x46, 0x70, 0x55, 0x47, 0x6F, 0x54, 0x46, 0x69, 0x4E, 0x40, 
   0x59, 0x3E, 0x30, 0x64, 0x49, 0x3B, 0x6D, 0x52, 0x44, 0x72, 0x54, 0x47, 0x76, 0x58, 0x4B, 0x72, 
   0x56, 0x48, 0x6E, 0x54, 0x46, 0x70, 0x56, 0x48, 0x5C, 0x45, 0x35, 0x46, 0x31, 0x23, 0x50, 0x3F, 
   0x34, 0x52, 0x42, 0x39, 0x3D, 0x2D, 0x24, 0x33, 0x22, 0x17, 0x42, 0x2D, 0x1E, 0x63, 0x4B, 0x38, 
   0x67, 0x4C, 0x38, 0x65, 0x49, 0x35, 0x67, 0x4E, 0x39, 0x68, 0x50, 0x3C, 0x68, 0x51, 0x3C, 0x64, 
   0x4F, 0x39, 0x64, 0x4D, 0x3B, 0x67, 0x4D, 0x3D, 0x65, 0x4A, 0x3A, 0x6B, 0x4F, 0x40, 0x6C, 0x4E, 
   0x3F, 0x6D, 0x4E, 0x3F, 0x6D, 0x4F, 0x40, 0x6A, 0x4F, 0x3E, 0x6A, 0x50, 0x40, 0x6D, 0x54, 0x44, 
   0x6B, 0x52, 0x44, 0x68, 0x4F, 0x44, 0x69, 0x51, 0x45, 0x53, 0x40, 0x35, 0x36, 0x28, 0x1E, 0x2E, 
   0x22, 0x16, 0x28, 0x1D, 0x0F, 0x2D, 0x1E, 0x0F, 0x4A, 0x36, 0x26, 0x5E, 0x44, 0x35, 0x63, 0x48, 
   0x36, 0x66, 0x49, 0x38, 0x65, 0x49, 0x38, 0x67, 0x4B, 0x3A, 0x69, 0x4D, 0x3C, 0x69, 0x4D, 0x3C, 
   0x68, 0x4C, 0x3C, 0x68, 0x4B, 0x3C, 0xF5, 0xE4, 0xE1, 0xF5, 0xE4, 0xE1, 0xF5, 0xE4, 0xE1, 0xF6, 
   0xE5, 0xE2, 0xF7, 0xE6, 0xE3, 0xF7, 0xE6, 0xE3, 0xF7, 0xE6, 0xE3, 0xF7, 0xE6, 0xE3, 0xF7, 0xE6, 
   0xE3, 0xF7, 0xE6, 0xE3, 0xF6, 0xE5, 0xE2, 0xF7, 0xE6, 0xE3, 0xF6, 0xE5, 0xE2, 0xF7, 0xE7, 0xE2, 
   0xF3, 0xE7, 0xE3, 0xEB, 0xE7, 0xE3, 0xFD, 0xFD, 0xF9, 0x88, 0x89, 0x87, 0xAD, 0xAE, 0xAD, 0x90, 
   0x8A, 0x8A, 0x8B, 0x7E, 0x7A, 0xA7, 0x9F, 0x98, 0x51, 0x4E, 0x47, 0x4B, 0x4D, 0x48, 0x5B, 0x5D, 
   0x61, 0x56, 0x58, 0x61, 0xC5, 0xC5, 0xC9, 0x90, 0x94, 0x93, 0x35, 0x3D, 0x3C, 0x48, 0x55, 0x55, 
   0x4C, 0x59, 0x59, 0x53, 0x5C, 0x5F, 0x3E, 0x45, 0x49, 0x44, 0x49, 0x4B, 0x3A, 0x3F, 0x3F, 0x42, 
   0x47, 0x48, 0x42, 0x47, 0x48, 0x42, 0x47, 0x48, 0x41, 0x46, 0x48, 0x3D, 0x40, 0x41, 0x80, 0x81, 
   0x83, 0xE8, 0xEB, 0xF0, 0xB7, 0xB9, 0xC1, 0x7A, 0x76, 0x7E, 0x60, 0x55, 0x5A, 0xD7, 0xC7, 0xC9, 
   0xFF, 0xE1, 0xE5, 0xFA, 0xDD, 0xE1, 0xF6, 0xE3, 0xE7, 0xA1, 0x94, 0x98, 0x87, 0x7F, 0x84, 0x90, 
   0x88, 0x8D, 0x51, 0x51, 0x58, 0x3B, 0x42, 0x49, 0x66, 0x68, 0x6F, 0x76, 0x75, 0x7B, 0x4B, 0x4B, 
   0x50, 0x51, 0x55, 0x58, 0x4E, 0x55, 0x58, 0x4C, 0x58, 0x5E, 0x5C, 0x63, 0x6B, 0x5C, 0x5D, 0x67, 
   0x81, 0x7D, 0x86, 0xF7, 0xF2, 0xF7, 0xF3, 0xEE, 0xF1, 0xB8, 0xB1, 0xB2, 0x66, 0x5C, 0x5E, 0xAA, 
   0xA1, 0xA4, 0xD4, 0xCE, 0xD3, 0x80, 0x7E, 0x85, 0x65, 0x68, 0x6F, 0x62, 0x69, 0x71, 0x71, 0x78, 
   0x7C, 0xE4, 0xE5, 0xE9, 0xFE, 0xF8, 0xFC, 0xE0, 0xD1, 0xD4, 0xA7, 0x95, 0x96, 0xC5, 0xB3, 0xB2, 
   0xFA, 0xF0, 0xEF, 0xC6, 0xBA, 0xB8, 0xC3, 0xB9, 0xB8, 0xF9, 0xF2, 0xF2, 0xEB, 0xE7, 0xE9, 0x80, 
   0x7C, 0x7E, 0x49, 0x47, 0x49, 0xA0, 0x9A, 0x98, 0xC9, 0xBE, 0xBD, 0xE7, 0xDC, 0xDA, 0xF4, 0xE7, 
   0xE5, 0xF3, 0xE7, 0xE3, 0xF2, 0xE7, 0xE3, 0xF1, 0xE5, 0xE2, 0xF6, 0xE9, 0xE7, 0xF7, 0xEA, 0xE8, 
   0xF4, 0xE7, 0xE5, 0xF2, 0xE5, 0xE3, 0xF2, 0xE5, 0xE3, 0xF9, 0xEE, 0xEC, 0xFC, 0xF0, 0xF0, 0xE8, 
   0xDF, 0xE0, 0xD4, 0xD1, 0xCF, 0xEA, 0xE6, 0xE5, 0xF4, 0xED, 0xED, 0xF6, 0xEB, 0xEB, 0xF7, 0xEB, 
   0xEC, 0xF3, 0xE9, 0xE9, 0xF5, 0xEA, 0xEB, 0xF1, 0xE7, 0xE7, 0xF3, 0xEA, 0xEA, 0xF6, 0xEC, 0xED, 
   0xF8, 0xEF, 0xEF, 0xF8, 0xED, 0xED, 0xF8, 0xED, 0xEE, 0xFB, 0xF4, 0xF4, 0xEA, 0xE3, 0xE3, 0x6F, 
   0x6A, 0x69, 0x83, 0x7E, 0x7E, 0xA6, 0x9F, 0x9F, 0xD0, 0xC8, 0xC9, 0xB7, 0xB4, 0xB4, 0x60, 0x60, 
   0x5E, 0xD6, 0xD7, 0xD3, 0xF8, 0xF5, 0xF1, 0xF4, 0xED, 0xE9, 0xF7, 0xEB, 0xE7, 0xF6, 0xE9, 0xE5, 
   0xF7, 0xE6, 0xE3, 0xF2, 0xE0, 0xDD, 0xF4, 0xDE, 0xDC, 0xF7, 0xE0, 0xDE, 0xF5, 0xDF, 0xDD, 0xF4, 
   0xDF, 0xDD, 0xF2, 0xDD, 0xDB, 0xF2, 0xDD, 0xDB, 0xF4, 0xDF, 0xDD, 0xF4, 0xDF, 0xDD, 0xF4, 0xDF, 
   0xDD, 0xEF, 0xDC, 0xD9, 0xF1, 0xDE, 0xDB, 0xF3, 0xE0, 0xDD, 0xF2, 0xDF, 0xDC, 0xF4, 0xE1, 0xDE, 
   0xF5, 0xE2, 0xDF, 0xF4, 0xE1, 0xDE, 0xF3, 0xE0, 0xDD, 0xF5, 0xE2, 0xDF, 0xF5, 0xE2, 0xDF, 0xF6, 
   0xE3, 0xE0, 0xF6, 0xE3, 0xE0, 0xF6, 0xE3, 0xE0, 0xF4, 0xE1, 0xDE, 0xF2, 0xDF, 0xDC, 0xF5, 0xE2, 
   0xDF, 0xF6, 0xE3, 0xE0, 0xF6, 0xE3, 0xE0, 0xF6, 0xE3, 0xE0, 0xF4, 0xE1, 0xDE, 0xE9, 0xD6, 0xD3, 
   0xEB, 0xD8, 0xD5, 0xF7, 0xE2, 0xE0, 0xF5, 0xDF, 0xDD, 0xF4, 0xDB, 0xD9, 0xF3, 0xD9, 0xD7, 0xF0, 
   0xD5, 0xD4, 0xF5, 0xD8, 0xD7, 0xF0, 0xD4, 0xD3, 0xF4, 0xD8, 0xD7, 0xF1, 0xD5, 0xD4, 0xEF, 0xD3, 
   0xD2, 0xEF, 0xD3, 0xD2, 0xED, 0xD3, 0xD1, 0xEA, 0xCD, 0xCC, 0xEC, 0xD0, 0xCF, 0xAD, 0x95, 0x93, 
   0x7E, 0x6F, 0x6C, 0x9C, 0x94, 0x8F, 0x83, 0x7B, 0x79, 0x5D, 0x53, 0x56, 0xA0, 0x94, 0x99, 0xFF, 
   0xEF, 0xF1, 0xD9, 0xC4, 0xC3, 0xB4, 0x94, 0x8D, 0xCC, 0xAA, 0xA0, 0xAC, 0x8F, 0x86, 0x91, 0x74, 
   0x6B, 0x7D, 0x61, 0x56, 0x72, 0x55, 0x4A, 0x6F, 0x54, 0x46, 0x6E, 0x53, 0x44, 0x70, 0x54, 0x45, 
   0x72, 0x54, 0x47, 0x71, 0x53, 0x46, 0x70, 0x52, 0x45, 0x71, 0x53, 0x46, 0x71, 0x53, 0x46, 0x71, 
   0x53, 0x46, 0x71, 0x53, 0x46, 0x71, 0x53, 0x46, 0x71, 0x53, 0x46, 0x72, 0x54, 0x47, 0x74, 0x56, 
   0x49, 0x72, 0x54, 0x47, 0x73, 0x57, 0x49, 0x6F, 0x54, 0x46, 0x6E, 0x53, 0x45, 0x67, 0x4C, 0x3E, 
   0x62, 0x47, 0x39, 0x68, 0x4D, 0x3F, 0x6B, 0x50, 0x42, 0x6F, 0x52, 0x45, 0x72, 0x53, 0x46, 0x73, 
   0x56, 0x49, 0x6F, 0x55, 0x47, 0x6F, 0x55, 0x47, 0x6F, 0x57, 0x48, 0x5C, 0x45, 0x38, 0x50, 0x3B, 
   0x30, 0x54, 0x42, 0x39, 0x40, 0x2E, 0x26, 0x3F, 0x2D, 0x22, 0x55, 0x40, 0x31, 0x61, 0x49, 0x36, 
   0x65, 0x4A, 0x36, 0x65, 0x4A, 0x36, 0x6B, 0x50, 0x3D, 0x66, 0x4E, 0x3A, 0x65, 0x4D, 0x3A, 0x65, 
   0x50, 0x3B, 0x64, 0x4D, 0x3A, 0x61, 0x47, 0x38, 0x6B, 0x51, 0x41, 0x6D, 0x51, 0x41, 0x6C, 0x4E, 
   0x3F, 0x6D, 0x4E, 0x3F, 0x6D, 0x4E, 0x3F, 0x6B, 0x52, 0x42, 0x66, 0x4D, 0x3D, 0x66, 0x4F, 0x3F, 
   0x6C, 0x54, 0x48, 0x68, 0x52, 0x46, 0x65, 0x4F, 0x45, 0x5D, 0x4B, 0x41, 0x43, 0x34, 0x2A, 0x2E, 
   0x21, 0x15, 0x23, 0x17, 0x0A, 0x4B, 0x3B, 0x2C, 0x5E, 0x48, 0x39, 0x5F, 0x43, 0x35, 0x63, 0x47, 
   0x36, 0x65, 0x49, 0x38, 0x66, 0x4A, 0x39, 0x67, 0x4B, 0x3A, 0x68, 0x4C, 0x3B, 0x68, 0x4C, 0x3B, 
   0x68, 0x4B, 0x3B, 0x67, 0x4A, 0x3B, 0xF5, 0xE4, 0xE1, 0xF5, 0xE4, 0xE1, 0xF5, 0xE4, 0xE1, 0xF7, 
   0xE6, 0xE3, 0xF7, 0xE6, 0xE3, 0xF7, 0xE6, 0xE3, 0xF7, 0xE6, 0xE3, 0xF7, 0xE6, 0xE3, 0xF7, 0xE6, 
   0xE3, 0xF7, 0xE6, 0xE3, 0xF7, 0xE6, 0xE3, 0xF5, 0xE3, 0xE0, 0xF6, 0xE5, 0xE2, 0xF4, 0xE5, 0xE2, 
   0xF3, 0xEB, 0xE7, 0xF5, 0xF2, 0xEF, 0x90, 0x93, 0x90, 0x46, 0x4B, 0x4A, 0xA2, 0xA7, 0xA6, 0x5A, 
   0x5C, 0x5B, 0x7C, 0x75, 0x74, 0x5D, 0x5B, 0x56, 0x4B, 0x4F, 0x49, 0x50, 0x56, 0x51, 0x5D, 0x60, 
   0x63, 0x5D, 0x5E, 0x66, 0x6A, 0x68, 0x6B, 0x70, 0x71, 0x70, 0x41, 0x48, 0x47, 0x52, 0x5D, 0x5D, 
   0x4A, 0x56, 0x57, 0x50, 0x59, 0x5C, 0x3C, 0x44, 0x48, 0x44, 0x49, 0x4A, 0x42, 0x47, 0x48, 0x38, 
   0x3D, 0x3E, 0x3E, 0x43, 0x44, 0x3D, 0x43, 0x44, 0x3A, 0x3F, 0x40, 0x41, 0x44, 0x45, 0x4D, 0x52, 
   0x53, 0x77, 0x7E, 0x83, 0xA5, 0xAB, 0xB3, 0xA3, 0xA2, 0xA9, 0xAF, 0xA7, 0xAA, 0xF8, 0xEA, 0xED, 
   0xFD, 0xE5, 0xE7, 0xFA, 0xE1, 0xE4, 0xF0, 0xE1, 0xE3, 0xF2, 0xE7, 0xEA, 0xF9, 0xF0, 0xF3, 0xE8, 
   0xDD, 0xE3, 0x99, 0x98, 0x9F, 0x4D, 0x54, 0x5B, 0x67, 0x69, 0x70, 0x80, 0x7D, 0x82, 0x44, 0x42, 
   0x46, 0x7A, 0x7C, 0x7D, 0x5D, 0x62, 0x63, 0x4E, 0x5A, 0x62, 0x53, 0x59, 0x62, 0x6C, 0x6C, 0x74, 
   0xCA, 0xC4, 0xCC, 0xF6, 0xF2, 0xF6, 0x96, 0x91, 0x96, 0xA3, 0x99, 0x9E, 0x9D, 0x8E, 0x92, 0xF1, 
   0xE6, 0xEA, 0xF3, 0xE8, 0xEF, 0xFD, 0xF7, 0xFD, 0xC4, 0xC3, 0xCA, 0x4C, 0x53, 0x5A, 0x7A, 0x82, 
   0x85, 0xF2, 0xF3, 0xF6, 0xFB, 0xF6, 0xFA, 0xD1, 0xC4, 0xC7, 0x57, 0x46, 0x49, 0xC6, 0xB5, 0xB7, 
   0xFD, 0xF6, 0xF6, 0xDE, 0xD5, 0xD5, 0x8C, 0x83, 0x84, 0xD4, 0xCF, 0xD0, 0x9F, 0x9D, 0xA0, 0x4D, 
   0x4E, 0x52, 0x53, 0x54, 0x58, 0x62, 0x5E, 0x5E, 0xD7, 0xD0, 0xD0, 0xF2, 0xE9, 0xE8, 0xEE, 0xDF, 
   0xDC, 0xF9, 0xED, 0xE9, 0xED, 0xE4, 0xDE, 0xEC, 0xE2, 0xDD, 0xF3, 0xE6, 0xE4, 0xF3, 0xE6, 0xE4, 
   0xF2, 0xE5, 0xE3, 0xF5, 0xEA, 0xE8, 0xFC, 0xEF, 0xED, 0xF6, 0xED, 0xEB, 0xE2, 0xD5, 0xD5, 0xEF, 
   0xE7, 0xE7, 0xF7, 0xF0, 0xF0, 0xFB, 0xF3, 0xF3, 0xF6, 0xEC, 0xEC, 0xF8, 0xEA, 0xEB, 0xF9, 0xEB, 
   0xED, 0xF0, 0xE5, 0xE8, 0xF8, 0xED, 0xEF, 0xF5, 0xEB, 0xED, 0xF9, 0xF0, 0xF2, 0xF6, 0xEB, 0xED, 
   0xF7, 0xEC, 0xEE, 0xF9, 0xED, 0xEF, 0xFA, 0xF0, 0xF2, 0xFF, 0xFF, 0xFF, 0xBD, 0xB7, 0xB8, 0x55, 
   0x4F, 0x50, 0x86, 0x81, 0x82, 0xEB, 0xE3, 0xE4, 0xFF, 0xF9, 0xFB, 0x8F, 0x88, 0x89, 0x97, 0x95, 
   0x94, 0xFF, 0xFE, 0xFB, 0xF2, 0xEC, 0xE9, 0xF4, 0xEC, 0xE8, 0xF7, 0xE8, 0xE5, 0xF9, 0xEA, 0xE7, 
   0xF6, 0xE4, 0xE1, 0xF3, 0xDF, 0xDD, 0xF6, 0xE1, 0xDF, 0xF3, 0xDE, 0xDC, 0xF6, 0xE0, 0xDE, 0xF5, 
   0xE0, 0xDE, 0xF2, 0xDD, 0xDB, 0xF4, 0xDF, 0xDD, 0xF6, 0xE1, 0xDF, 0xF4, 0xDF, 0xDD, 0xF2, 0xDD, 
   0xDB, 0xF0, 0xDD, 0xDA, 0xF2, 0xDF, 0xDC, 0xF3, 0xE0, 0xDD, 0xF3, 0xE0, 0xDD, 0xF5, 0xE2, 0xDF, 
   0xF5, 0xE2, 0xDF, 0xF4, 0xE1, 0xDE, 0xF4, 0xE1, 0xDE, 0xF5, 0xE2, 0xDF, 0xF5, 0xE2, 0xDF, 0xF6, 
   0xE3, 0xE0, 0xF6, 0xE3, 0xE0, 0xF5, 0xE2, 0xDF, 0xF4, 0xE1, 0xDE, 0xF4, 0xE1, 0xDE, 0xF8, 0xE5, 
   0xE2, 0xF8, 0xE5, 0xE2, 0xF6, 0xE3, 0xE0, 0xF4, 0xE1, 0xDE, 0xF2, 0xDF, 0xDC, 0xF2, 0xDF, 0xDC, 
   0xF3, 0xE0, 0xDD, 0xF2, 0xDD, 0xDB, 0xF4, 0xDD, 0xDB, 0xF5, 0xDD, 0xDB, 0xF5, 0xDC, 0xD9, 0xF3, 
   0xD8, 0xD6, 0xF0, 0xD4, 0xD3, 0xF1, 0xD5, 0xD4, 0xF1, 0xD5, 0xD4, 0xEE, 0xD2, 0xD1, 0xEF, 0xD3, 
   0xD2, 0xF0, 0xD5, 0xD4, 0xEF, 0xD5, 0xD3, 0xE9, 0xCC, 0xCB, 0xEE, 0xD0, 0xCF, 0xCE, 0xB2, 0xB1, 
   0xD7, 0xC2, 0xBF, 0xC6, 0xB6, 0xB4, 0x88, 0x78, 0x75, 0xB9, 0xA6, 0xA5, 0xDC, 0xCA, 0xCB, 0xA0, 
   0x8D, 0x8D, 0xC5, 0xAD, 0xAA, 0xCB, 0xAC, 0xA3, 0xB8, 0x98, 0x8E, 0x99, 0x7A, 0x71, 0x84, 0x66, 
   0x5C, 0x75, 0x57, 0x4C, 0x71, 0x53, 0x46, 0x71, 0x54, 0x45, 0x73, 0x56, 0x46, 0x72, 0x55, 0x47, 
   0x72, 0x54, 0x47, 0x73, 0x55, 0x48, 0x71, 0x53, 0x46, 0x71, 0x53, 0x46, 0x71, 0x53, 0x46, 0x71, 
   0x53, 0x46, 0x71, 0x53, 0x46, 0x71, 0x53, 0x46, 0x71, 0x53, 0x46, 0x72, 0x54, 0x47, 0x71, 0x53, 
   0x46, 0x72, 0x54, 0x47, 0x6F, 0x53, 0x45, 0x6F, 0x54, 0x46, 0x6E, 0x53, 0x45, 0x6C, 0x51, 0x43, 
   0x6A, 0x4F, 0x41, 0x6C, 0x51, 0x43, 0x6D, 0x52, 0x44, 0x6E, 0x50, 0x43, 0x6F, 0x50, 0x43, 0x6F, 
   0x52, 0x45, 0x6E, 0x54, 0x46, 0x70, 0x56, 0x48, 0x69, 0x53, 0x43, 0x5C, 0x43, 0x36, 0x52, 0x38, 
   0x2E, 0x50, 0x38, 0x30, 0x4D, 0x38, 0x31, 0x55, 0x40, 0x36, 0x63, 0x4D, 0x3E, 0x66, 0x4C, 0x3B, 
   0x6A, 0x4E, 0x3D, 0x69, 0x4D, 0x3C, 0x66, 0x4B, 0x3A, 0x65, 0x4D, 0x3B, 0x66, 0x4E, 0x3C, 0x62, 
   0x4C, 0x3A, 0x63, 0x4B, 0x3A, 0x69, 0x4F, 0x3F, 0x64, 0x4A, 0x3A, 0x61, 0x45, 0x36, 0x6C, 0x4E, 
   0x3F, 0x6E, 0x4F, 0x40, 0x6E, 0x50, 0x41, 0x68, 0x51, 0x41, 0x56, 0x3F, 0x30, 0x4B, 0x35, 0x27, 
   0x5C, 0x46, 0x3A, 0x67, 0x53, 0x48, 0x5C, 0x48, 0x3D, 0x51, 0x3F, 0x35, 0x46, 0x33, 0x2A, 0x3E, 
   0x2D, 0x22, 0x3E, 0x2E, 0x21, 0x5E, 0x4B, 0x3D, 0x5F, 0x47, 0x38, 0x64, 0x46, 0x38, 0x64, 0x48, 
   0x37, 0x64, 0x48, 0x37, 0x65, 0x49, 0x38, 0x67, 0x4B, 0x3A, 0x68, 0x4C, 0x3B, 0x68, 0x4C, 0x3B, 
   0x67, 0x4B, 0x3B, 0x67, 0x4A, 0x3B, 0xF6, 0xE5, 0xE2, 0xF6, 0xE5, 0xE2, 0xF6, 0xE5, 0xE2, 0xF7, 
   0xE6, 0xE3, 0xF7, 0xE6, 0xE3, 0xF7, 0xE6, 0xE3, 0xF7, 0xE6, 0xE3, 0xF7, 0xE6, 0xE3, 0xF7, 0xE6, 
   0xE3, 0xF7, 0xE6, 0xE3, 0xF7, 0xE6, 0xE3, 0xF5, 0xE4, 0xE1, 0xF6, 0xE4, 0xE1, 0xF3, 0xE6, 0xE3, 
   0xF8, 0xF1, 0xED, 0xBD, 0xBF, 0xBC, 0x40, 0x47, 0x44, 0x4B, 0x55, 0x52, 0x47, 0x4E, 0x4D, 0x31, 
   0x35, 0x37, 0x4B, 0x4A, 0x4C, 0x52, 0x55, 0x54, 0x97, 0xA0, 0x9A, 0x8C, 0x95, 0x8F, 0x52, 0x56, 
   0x56, 0x4D, 0x4C, 0x50, 0x56, 0x51, 0x53, 0x55, 0x54, 0x54, 0x3E, 0x43, 0x42, 0x5A, 0x65, 0x64, 
   0x3D, 0x49, 0x4A, 0x45, 0x50, 0x53, 0x47, 0x50, 0x53, 0x45, 0x4D, 0x4E, 0x4C, 0x54, 0x54, 0x3F, 
   0x47, 0x47, 0x3D, 0x44, 0x44, 0x46, 0x4E, 0x4E, 0x52, 0x5A, 0x5A, 0x49, 0x50, 0x4F, 0x45, 0x4E, 
   0x4E, 0x50, 0x5C, 0x60, 0x59, 0x63, 0x69, 0xA3, 0xA7, 0xAD, 0xF4, 0xED, 0xF1, 0xF4, 0xE3, 0xE6, 
   0xF7, 0xEA, 0xE8, 0xF4, 0xEB, 0xEA, 0xF0, 0xEC, 0xEB, 0xF2, 0xF2, 0xF2, 0xF1, 0xF2, 0xF3, 0xF7, 
   0xF5, 0xF7, 0xC6, 0xC8, 0xCD, 0x4A, 0x4F, 0x54, 0x67, 0x67, 0x6D, 0x79, 0x74, 0x79, 0x6A, 0x66, 
   0x69, 0xAE, 0xAD, 0xAE, 0x41, 0x41, 0x44, 0x34, 0x40, 0x47, 0x46, 0x4D, 0x55, 0x6B, 0x6A, 0x71, 
   0xF2, 0xED, 0xF2, 0xD5, 0xCE, 0xD3, 0xBF, 0xBA, 0xBF, 0xCE, 0xC9, 0xCC, 0xEE, 0xE7, 0xEA, 0xFE, 
   0xF6, 0xFC, 0xF3, 0xED, 0xF2, 0xD2, 0xD0, 0xD6, 0x81, 0x86, 0x8B, 0x34, 0x3F, 0x43, 0x9B, 0xA1, 
   0xA5, 0xF5, 0xF5, 0xF9, 0xEC, 0xE6, 0xEA, 0xD7, 0xCA, 0xCE, 0xA8, 0x9B, 0x9E, 0xEE, 0xE3, 0xE6, 
   0xC4, 0xBC, 0xBD, 0x86, 0x81, 0x82, 0x86, 0x80, 0x81, 0x9E, 0x9A, 0x9D, 0x90, 0x8F, 0x92, 0x47, 
   0x49, 0x4D, 0x47, 0x4B, 0x4F, 0x52, 0x50, 0x51, 0xE2, 0xDD, 0xDE, 0xCA, 0xBE, 0xBD, 0xEB, 0xDB, 
   0xD8, 0xF8, 0xE9, 0xE6, 0xF0, 0xE7, 0xE0, 0xEF, 0xE5, 0xE0, 0xF5, 0xE8, 0xE6, 0xF6, 0xE9, 0xE7, 
   0xF7, 0xEA, 0xE8, 0xFA, 0xF0, 0xEE, 0xF1, 0xE8, 0xE6, 0xB5, 0xA8, 0xA6, 0xE2, 0xD1, 0xD2, 0xFC, 
   0xEE, 0xEF, 0xF5, 0xEB, 0xEB, 0xF7, 0xED, 0xED, 0xFB, 0xED, 0xED, 0xFD, 0xEA, 0xEC, 0xFA, 0xEC, 
   0xEE, 0xF4, 0xEC, 0xEE, 0xFB, 0xF3, 0xF4, 0xF5, 0xED, 0xEF, 0xEE, 0xE7, 0xE8, 0xF6, 0xEF, 0xF0, 
   0xF4, 0xED, 0xEE, 0xFB, 0xF1, 0xF3, 0xF8, 0xF2, 0xF3, 0xBD, 0xB6, 0xB7, 0xAD, 0xA7, 0xA8, 0x64, 
   0x5E, 0x5F, 0xA8, 0xA4, 0xA5, 0xFC, 0xF3, 0xF4, 0xE9, 0xDE, 0xE1, 0xA8, 0x9D, 0x9F, 0xE8, 0xE1, 
   0xE2, 0xFA, 0xF2, 0xF1, 0xF5, 0xEA, 0xE8, 0xF5, 0xE9, 0xE7, 0xFA, 0xEA, 0xE6, 0xFA, 0xE9, 0xE6, 
   0xF5, 0xE2, 0xDF, 0xF4, 0xE2, 0xDE, 0xF8, 0xE3, 0xE1, 0xF3, 0xDE, 0xDC, 0xF6, 0xE1, 0xDF, 0xF5, 
   0xE0, 0xDE, 0xF3, 0xDE, 0xDC, 0xF4, 0xDF, 0xDD, 0xF3, 0xDE, 0xDC, 0xF3, 0xDE, 0xDC, 0xF3, 0xDE, 
   0xDC, 0xF0, 0xDD, 0xDA, 0xF2, 0xDF, 0xDC, 0xF4, 0xE1, 0xDE, 0xF3, 0xE0, 0xDD, 0xF5, 0xE2, 0xDF, 
   0xF4, 0xE1, 0xDE, 0xF3, 0xE0, 0xDD, 0xF4, 0xE1, 0xDE, 0xF6, 0xE3, 0xE0, 0xF6, 0xE3, 0xE0, 0xF7, 
   0xE4, 0xE1, 0xF6, 0xE3, 0xE0, 0xF5, 0xE2, 0xDF, 0xF5, 0xE2, 0xDF, 0xF5, 0xE2, 0xDF, 0xF4, 0xE1, 
   0xDE, 0xF5, 0xE2, 0xDF, 0xF7, 0xE4, 0xE1, 0xF4, 0xE1, 0xDE, 0xF1, 0xDE, 0xDB, 0xF2, 0xDF, 0xDC, 
   0xF3, 0xE0, 0xDD, 0xF3, 0xDE, 0xDC, 0xF2, 0xDB, 0xD9, 0xF3, 0xDB, 0xD9, 0xF3, 0xDA, 0xD8, 0xF5, 
   0xD8, 0xD7, 0xF0, 0xD3, 0xD2, 0xF3, 0xD6, 0xD5, 0xF1, 0xD4, 0xD3, 0xEF, 0xD1, 0xD0, 0xF3, 0xD4, 
   0xD3, 0xF2, 0xD6, 0xD5, 0xEB, 0xD0, 0xCF, 0xDF, 0xC2, 0xC1, 0xF1, 0xD1, 0xD1, 0xF8, 0xDA, 0xD9, 
   0xEF, 0xD4, 0xD3, 0xE8, 0xD2, 0xD1, 0xEE, 0xD6, 0xD1, 0xDA, 0xBF, 0xB8, 0xBE, 0xA5, 0xA1, 0xC3, 
   0xAB, 0xA9, 0xCE, 0xB4, 0xAF, 0xB1, 0x94, 0x8B, 0x99, 0x7B, 0x70, 0x87, 0x69, 0x5E, 0x79, 0x5B, 
   0x50, 0x70, 0x52, 0x47, 0x6F, 0x51, 0x44, 0x72, 0x55, 0x46, 0x74, 0x57, 0x47, 0x73, 0x56, 0x47, 
   0x73, 0x55, 0x48, 0x73, 0x55, 0x48, 0x71, 0x53, 0x46, 0x71, 0x53, 0x46, 0x71, 0x53, 0x46, 0x71, 
   0x53, 0x46, 0x71, 0x53, 0x46, 0x71, 0x53, 0x46, 0x71, 0x53, 0x46, 0x70, 0x52, 0x45, 0x72, 0x54, 
   0x47, 0x71, 0x53, 0x46, 0x6B, 0x4F, 0x41, 0x6E, 0x53, 0x45, 0x6E, 0x53, 0x45, 0x6E, 0x53, 0x45, 
   0x6E, 0x53, 0x45, 0x6E, 0x53, 0x45, 0x6E, 0x53, 0x45, 0x6F, 0x51, 0x44, 0x6F, 0x51, 0x44, 0x6F, 
   0x53, 0x45, 0x6F, 0x55, 0x47, 0x6F, 0x55, 0x47, 0x65, 0x4E, 0x3F, 0x61, 0x46, 0x39, 0x63, 0x44, 
   0x3A, 0x5C, 0x41, 0x3A, 0x65, 0x4C, 0x45, 0x60, 0x47, 0x3E, 0x64, 0x4C, 0x3D, 0x68, 0x4C, 0x3B, 
   0x6A, 0x4C, 0x3F, 0x6C, 0x4E, 0x40, 0x68, 0x4C, 0x3E, 0x64, 0x4B, 0x3C, 0x66, 0x4D, 0x3E, 0x69, 
   0x52, 0x43, 0x60, 0x49, 0x39, 0x65, 0x4B, 0x3B, 0x5C, 0x42, 0x32, 0x5F, 0x42, 0x33, 0x6C, 0x4E, 
   0x3F, 0x6F, 0x50, 0x41, 0x6E, 0x50, 0x41, 0x6C, 0x54, 0x45, 0x5C, 0x46, 0x37, 0x59, 0x44, 0x36, 
   0x42, 0x2E, 0x22, 0x3E, 0x2B, 0x21, 0x50, 0x3D, 0x35, 0x47, 0x33, 0x2A, 0x50, 0x39, 0x30, 0x59, 
   0x46, 0x3A, 0x5C, 0x48, 0x3C, 0x5F, 0x48, 0x3B, 0x5E, 0x41, 0x34, 0x68, 0x46, 0x39, 0x67, 0x4A, 
   0x3A, 0x67, 0x4B, 0x3A, 0x68, 0x4C, 0x3B, 0x68, 0x4C, 0x3B, 0x67, 0x4B, 0x3A, 0x67, 0x4B, 0x3A, 
   0x67, 0x4B, 0x3B, 0x67, 0x4A, 0x3B, 0xF7, 0xE6, 0xE3, 0xF7, 0xE6, 0xE3, 0xF7, 0xE6, 0xE3, 0xF7, 
   0xE6, 0xE3, 0xF7, 0xE6, 0xE3, 0xF7, 0xE6, 0xE3, 0xF7, 0xE6, 0xE3, 0xF7, 0xE6, 0xE3, 0xF7, 0xE6, 
   0xE3, 0xF7, 0xE6, 0xE3, 0xF6, 0xE5, 0xE2, 0xF7, 0xE6, 0xE3, 0xF6, 0xE5, 0xE1, 0xF6, 0xE9, 0xE6, 
   0xF3, 0xEB, 0xE8, 0x74, 0x76, 0x72, 0x2F, 0x39, 0x37, 0x37, 0x43, 0x40, 0x33, 0x3F, 0x3F, 0x41, 
   0x48, 0x4B, 0x4E, 0x52, 0x57, 0x4A, 0x52, 0x52, 0x66, 0x73, 0x6D, 0x88, 0x94, 0x8E, 0xB9, 0xBE, 
   0xBC, 0x91, 0x8E, 0x90, 0x5A, 0x54, 0x56, 0x60, 0x5E, 0x5E, 0x47, 0x4B, 0x4B, 0x4A, 0x55, 0x55, 
   0x36, 0x43, 0x44, 0x47, 0x53, 0x55, 0x4D, 0x56, 0x59, 0x4B, 0x53, 0x53, 0x50, 0x58, 0x57, 0x45, 
   0x4D, 0x4D, 0x32, 0x3A, 0x3A, 0x43, 0x4C, 0x4B, 0x58, 0x60, 0x5F, 0x40, 0x48, 0x47, 0x47, 0x52, 
   0x52, 0x60, 0x6F, 0x73, 0x79, 0x87, 0x8D, 0xA9, 0xAF, 0xB5, 0xED, 0xE3, 0xE7, 0xF9, 0xE8, 0xEB, 
   0xF6, 0xF7, 0xF3, 0xDD, 0xE6, 0xE1, 0xC4, 0xD0, 0xCC, 0x91, 0xA0, 0x9D, 0x92, 0xA0, 0x9E, 0xA3, 
   0xAE, 0xAD, 0x4F, 0x58, 0x5A, 0x48, 0x4C, 0x52, 0x65, 0x65, 0x6A, 0xCB, 0xC5, 0xCB, 0xC8, 0xC2, 
   0xC5, 0x6D, 0x6A, 0x6B, 0x34, 0x34, 0x35, 0x3C, 0x47, 0x50, 0x41, 0x48, 0x51, 0x8F, 0x8E, 0x95, 
   0xF4, 0xED, 0xF2, 0xED, 0xE6, 0xEB, 0xF6, 0xEE, 0xF4, 0xF3, 0xF1, 0xF6, 0xDF, 0xE0, 0xE3, 0xB1, 
   0xAE, 0xB2, 0x7E, 0x7C, 0x80, 0x56, 0x5B, 0x5F, 0x42, 0x50, 0x54, 0x58, 0x6E, 0x70, 0xF0, 0xF7, 
   0xF8, 0xC8, 0xC8, 0xCB, 0x6B, 0x63, 0x69, 0xC4, 0xB5, 0xBA, 0xF6, 0xE9, 0xED, 0xFD, 0xF3, 0xF6, 
   0xE0, 0xD7, 0xD9, 0x70, 0x6B, 0x6D, 0x40, 0x3C, 0x3E, 0x61, 0x61, 0x64, 0xAA, 0xAC, 0xB1, 0x48, 
   0x4D, 0x52, 0x39, 0x3F, 0x46, 0x7F, 0x80, 0x81, 0xE2, 0xDC, 0xDD, 0xD3, 0xC7, 0xC6, 0xFF, 0xF2, 
   0xEF, 0xF6, 0xE6, 0xE1, 0xF0, 0xE7, 0xDF, 0xF4, 0xEB, 0xE5, 0xF8, 0xEA, 0xE9, 0xF9, 0xEC, 0xEA, 
   0xFC, 0xEE, 0xEC, 0xF8, 0xED, 0xEB, 0xE5, 0xDA, 0xD8, 0xE2, 0xD7, 0xD6, 0xFD, 0xEF, 0xF1, 0xFA, 
   0xE9, 0xEB, 0xF9, 0xEC, 0xED, 0xF7, 0xEA, 0xEB, 0xFB, 0xEB, 0xEC, 0xFF, 0xED, 0xEF, 0xF9, 0xEB, 
   0xEC, 0xF8, 0xF2, 0xF3, 0xD8, 0xD0, 0xD2, 0xDB, 0xD3, 0xD4, 0xDA, 0xD2, 0xD3, 0xF4, 0xEB, 0xEC, 
   0xEF, 0xE9, 0xEB, 0xE5, 0xDE, 0xE0, 0xF5, 0xED, 0xEF, 0xA1, 0x9A, 0x9B, 0x75, 0x70, 0x71, 0x97, 
   0x92, 0x94, 0xE8, 0xE5, 0xE6, 0xF4, 0xEA, 0xEC, 0xCC, 0xB9, 0xBC, 0xD6, 0xC9, 0xCC, 0xFF, 0xF8, 
   0xF9, 0xF6, 0xEC, 0xEB, 0xF8, 0xEC, 0xEA, 0xF8, 0xE8, 0xE6, 0xFD, 0xEB, 0xE7, 0xFA, 0xE7, 0xE4, 
   0xF3, 0xE0, 0xDD, 0xF8, 0xE4, 0xE1, 0xF6, 0xE1, 0xDF, 0xF6, 0xE1, 0xDF, 0xF7, 0xE1, 0xE0, 0xF6, 
   0xE1, 0xDF, 0xF4, 0xDF, 0xDD, 0xF4, 0xDF, 0xDD, 0xF4, 0xDF, 0xDD, 0xF2, 0xDD, 0xDB, 0xF1, 0xDC, 
   0xDA, 0xF1, 0xDD, 0xDA, 0xF2, 0xE0, 0xDC, 0xF4, 0xE1, 0xDE, 0xF4, 0xE1, 0xDE, 0xF5, 0xE2, 0xDF, 
   0xF4, 0xE1, 0xDE, 0xF4, 0xE1, 0xDE, 0xF5, 0xE2, 0xDF, 0xF6, 0xE3, 0xE0, 0xF7, 0xE4, 0xE1, 0xF8, 
   0xE5, 0xE2, 0xF6, 0xE3, 0xE0, 0xF4, 0xE1, 0xDE, 0xF4, 0xE1, 0xDE, 0xF7, 0xE4, 0xE1, 0xF7, 0xE4, 
   0xE1, 0xF5, 0xE2, 0xDF, 0xF6, 0xE3, 0xE0, 0xF6, 0xE3, 0xE0, 0xF2, 0xE0, 0xDD, 0xF6, 0xE3, 0xE0, 
   0xF4, 0xE1, 0xDE, 0xF0, 0xDB, 0xD9, 0xF2, 0xDB, 0xD9, 0xF3, 0xDB, 0xD9, 0xF3, 0xDA, 0xD8, 0xF5, 
   0xD7, 0xD6, 0xF3, 0xD3, 0xD2, 0xF1, 0xD3, 0xD2, 0xF1, 0xD3, 0xD2, 0xF2, 0xD4, 0xD3, 0xF4, 0xD6, 
   0xD5, 0xF0, 0xD5, 0xD3, 0xE7, 0xCE, 0xCC, 0xE0, 0xC1, 0xC0, 0xF6, 0xD3, 0xD3, 0xF8, 0xD5, 0xD5, 
   0xF4, 0xD5, 0xD4, 0xF2, 0xD5, 0xD5, 0xF9, 0xD9, 0xD2, 0xF2, 0xD3, 0xC6, 0xEB, 0xCE, 0xC6, 0xD1, 
   0xB7, 0xB2, 0xAE, 0x94, 0x8E, 0x98, 0x7A, 0x72, 0x8A, 0x6C, 0x62, 0x78, 0x5A, 0x50, 0x72, 0x54, 
   0x48, 0x71, 0x53, 0x46, 0x71, 0x53, 0x45, 0x74, 0x57, 0x48, 0x73, 0x58, 0x46, 0x72, 0x55, 0x46, 
   0x74, 0x56, 0x49, 0x74, 0x56, 0x49, 0x71, 0x53, 0x46, 0x71, 0x53, 0x46, 0x71, 0x53, 0x46, 0x71, 
   0x53, 0x46, 0x71, 0x53, 0x46, 0x71, 0x53, 0x46, 0x71, 0x53, 0x46, 0x75, 0x56, 0x49, 0x72, 0x53, 
   0x46, 0x6F, 0x51, 0x44, 0x6E, 0x51, 0x44, 0x6D, 0x52, 0x44, 0x6F, 0x54, 0x46, 0x6D, 0x52, 0x44, 
   0x6D, 0x52, 0x44, 0x6E, 0x53, 0x45, 0x6E, 0x53, 0x45, 0x70, 0x52, 0x45, 0x70, 0x52, 0x45, 0x6F, 
   0x53, 0x45, 0x69, 0x4F, 0x41, 0x62, 0x49, 0x3B, 0x67, 0x51, 0x41, 0x6D, 0x4F, 0x43, 0x72, 0x4E, 
   0x46, 0x69, 0x4A, 0x44, 0x64, 0x48, 0x43, 0x66, 0x4C, 0x43, 0x67, 0x4B, 0x3D, 0x6A, 0x4C, 0x3B, 
   0x6B, 0x4D, 0x42, 0x6B, 0x4D, 0x42, 0x66, 0x4A, 0x3E, 0x6A, 0x4F, 0x44, 0x72, 0x58, 0x4C, 0x4F, 
   0x38, 0x2C, 0x3C, 0x25, 0x16, 0x5A, 0x41, 0x30, 0x64, 0x4B, 0x3B, 0x69, 0x4D, 0x3E, 0x6D, 0x4F, 
   0x40, 0x6F, 0x50, 0x41, 0x71, 0x52, 0x43, 0x6B, 0x55, 0x46, 0x53, 0x3E, 0x30, 0x38, 0x25, 0x18, 
   0x2E, 0x1B, 0x10, 0x2D, 0x1B, 0x11, 0x4A, 0x39, 0x30, 0x54, 0x3E, 0x37, 0x5C, 0x42, 0x3A, 0x5F, 
   0x49, 0x3F, 0x5D, 0x47, 0x3C, 0x61, 0x47, 0x3B, 0x66, 0x46, 0x39, 0x69, 0x44, 0x38, 0x67, 0x4A, 
   0x39, 0x67, 0x4B, 0x3A, 0x68, 0x4C, 0x3B, 0x67, 0x4B, 0x3A, 0x66, 0x4A, 0x39, 0x66, 0x4A, 0x39, 
   0x67, 0x4A, 0x3A, 0x67, 0x4A, 0x3B, 0xF6, 0xE5, 0xE2, 0xF8, 0xE7, 0xE4, 0xF8, 0xE7, 0xE4, 0xF8, 
   0xE7, 0xE4, 0xF7, 0xE6, 0xE3, 0xF7, 0xE6, 0xE3, 0xF6, 0xE5, 0xE4, 0xF5, 0xE5, 0xE4, 0xF7, 0xE7, 
   0xE2, 0xF9, 0xE8, 0xE3, 0xF7, 0xE6, 0xE0, 0xF5, 0xE6, 0xE2, 0xF1, 0xE4, 0xE1, 0xFF, 0xF1, 0xF2, 
   0xC7, 0xBD, 0xBE, 0x75, 0x73, 0x73, 0x50, 0x55, 0x54, 0x40, 0x49, 0x49, 0x36, 0x45, 0x43, 0x49, 
   0x54, 0x56, 0x5D, 0x5F, 0x67, 0x59, 0x60, 0x65, 0x40, 0x4D, 0x4F, 0x47, 0x54, 0x54, 0x92, 0x91, 
   0x94, 0xD1, 0xC6, 0xCB, 0x86, 0x7D, 0x80, 0x71, 0x6B, 0x6C, 0x57, 0x55, 0x55, 0x41, 0x44, 0x46, 
   0x3F, 0x48, 0x4A, 0x4B, 0x59, 0x5B, 0x46, 0x55, 0x58, 0x4F, 0x5C, 0x5C, 0x4F, 0x58, 0x5B, 0x4A, 
   0x4F, 0x55, 0x37, 0x3A, 0x41, 0x3B, 0x42, 0x46, 0x46, 0x51, 0x53, 0x3B, 0x49, 0x49, 0x45, 0x53, 
   0x55, 0x48, 0x57, 0x5A, 0x8E, 0x9B, 0xA0, 0x77, 0x81, 0x86, 0xA2, 0xA5, 0xAA, 0xBB, 0xBD, 0xC0, 
   0x94, 0xA1, 0xA1, 0x83, 0x93, 0x93, 0x43, 0x53, 0x53, 0x48, 0x57, 0x56, 0x4D, 0x59, 0x59, 0x41, 
   0x4C, 0x4B, 0x39, 0x41, 0x42, 0x46, 0x49, 0x4E, 0x77, 0x79, 0x7E, 0xDD, 0xDE, 0xE3, 0x6A, 0x6B, 
   0x6F, 0x39, 0x3A, 0x3E, 0x49, 0x4D, 0x50, 0x42, 0x4B, 0x52, 0x73, 0x75, 0x7C, 0xDC, 0xD7, 0xDE, 
   0xF8, 0xED, 0xF4, 0xEB, 0xE7, 0xED, 0xC3, 0xC4, 0xC9, 0x83, 0x8A, 0x8E, 0x5E, 0x69, 0x6C, 0x56, 
   0x5F, 0x62, 0x53, 0x5A, 0x5E, 0x55, 0x5F, 0x62, 0x47, 0x54, 0x58, 0xB7, 0xC7, 0xC9, 0xE2, 0xEB, 
   0xEB, 0x62, 0x68, 0x6B, 0x3C, 0x3C, 0x41, 0x9C, 0x99, 0x9D, 0xF2, 0xED, 0xF1, 0xFC, 0xF6, 0xF9, 
   0xA9, 0xA8, 0xAA, 0x8E, 0x8F, 0x90, 0x4B, 0x4A, 0x4B, 0x36, 0x33, 0x34, 0x97, 0x93, 0x96, 0xAD, 
   0xAC, 0xAF, 0x39, 0x38, 0x3B, 0x98, 0x91, 0x90, 0xFA, 0xF2, 0xF1, 0xF7, 0xEC, 0xEA, 0xF6, 0xE7, 
   0xE5, 0xF7, 0xE9, 0xE6, 0xF4, 0xE9, 0xE4, 0xF8, 0xED, 0xE9, 0xF9, 0xEC, 0xEA, 0xFA, 0xED, 0xEB, 
   0xF9, 0xEC, 0xEA, 0xF3, 0xE5, 0xE3, 0xF9, 0xEC, 0xEA, 0xFD, 0xF0, 0xEE, 0xFC, 0xEB, 0xEB, 0xFE, 
   0xED, 0xED, 0xF9, 0xEA, 0xE9, 0xFB, 0xED, 0xEC, 0xF9, 0xE9, 0xE9, 0xFD, 0xED, 0xEC, 0xFA, 0xED, 
   0xED, 0xFC, 0xF8, 0xF8, 0x96, 0x90, 0x90, 0xD1, 0xCC, 0xCC, 0x90, 0x8B, 0x8B, 0xDA, 0xD6, 0xD6, 
   0x91, 0x8E, 0x8D, 0x75, 0x6C, 0x6A, 0xF7, 0xEE, 0xEC, 0xD7, 0xCD, 0xCB, 0xAB, 0xA4, 0xA2, 0xF4, 
   0xEE, 0xEC, 0xF3, 0xEE, 0xEB, 0xEC, 0xE4, 0xE2, 0xF6, 0xE8, 0xE7, 0xFB, 0xF2, 0xF0, 0xF4, 0xED, 
   0xEA, 0xF7, 0xED, 0xEA, 0xF4, 0xE6, 0xE3, 0xFD, 0xEC, 0xE9, 0xFE, 0xEA, 0xE9, 0xF7, 0xE2, 0xE3, 
   0xF3, 0xE0, 0xDF, 0xF9, 0xE5, 0xE3, 0xF3, 0xE0, 0xDE, 0xF5, 0xE3, 0xDF, 0xF6, 0xE3, 0xDF, 0xF6, 
   0xE3, 0xDD, 0xF4, 0xE1, 0xDC, 0xF4, 0xE1, 0xDD, 0xF5, 0xE0, 0xDE, 0xF5, 0xDF, 0xDD, 0xEF, 0xD8, 
   0xD7, 0xF0, 0xDC, 0xDA, 0xF7, 0xE2, 0xE0, 0xF3, 0xDF, 0xDD, 0xF6, 0xE2, 0xE0, 0xF6, 0xE2, 0xE0, 
   0xF5, 0xE0, 0xDF, 0xF5, 0xE2, 0xDF, 0xF5, 0xE2, 0xDF, 0xF5, 0xE2, 0xDF, 0xF6, 0xE3, 0xE0, 0xF8, 
   0xE5, 0xE2, 0xF6, 0xE3, 0xE0, 0xF4, 0xE1, 0xDE, 0xF5, 0xE2, 0xDF, 0xF4, 0xE1, 0xDE, 0xF9, 0xE6, 
   0xE3, 0xF7, 0xE4, 0xE1, 0xF7, 0xE4, 0xE1, 0xF8, 0xE5, 0xE2, 0xF6, 0xE2, 0xDF, 0xF7, 0xE3, 0xE0, 
   0xF6, 0xE2, 0xE0, 0xF1, 0xDB, 0xD9, 0xF2, 0xDB, 0xD9, 0xF5, 0xDC, 0xDA, 0xF4, 0xDB, 0xD9, 0xF4, 
   0xD9, 0xD8, 0xF2, 0xD6, 0xD5, 0xF5, 0xDA, 0xD9, 0xF6, 0xD8, 0xD7, 0xF4, 0xD6, 0xD5, 0xF6, 0xD7, 
   0xD6, 0xF0, 0xD3, 0xD2, 0xEF, 0xD7, 0xD5, 0xEE, 0xD5, 0xD3, 0xF0, 0xD4, 0xD2, 0xF4, 0xD6, 0xD5, 
   0xF7, 0xD8, 0xD8, 0xF2, 0xD5, 0xD5, 0xF3, 0xCF, 0xCB, 0xEA, 0xC0, 0xB8, 0xD1, 0xAB, 0xA5, 0xBA, 
   0x98, 0x92, 0xA6, 0x85, 0x80, 0x91, 0x71, 0x6A, 0x88, 0x69, 0x60, 0x78, 0x5C, 0x50, 0x71, 0x56, 
   0x48, 0x6F, 0x54, 0x46, 0x70, 0x55, 0x47, 0x72, 0x56, 0x48, 0x71, 0x57, 0x48, 0x73, 0x56, 0x48, 
   0x74, 0x55, 0x48, 0x74, 0x55, 0x48, 0x72, 0x54, 0x47, 0x72, 0x54, 0x47, 0x72, 0x54, 0x47, 0x72, 
   0x54, 0x47, 0x70, 0x55, 0x47, 0x71, 0x56, 0x48, 0x6F, 0x54, 0x46, 0x6E, 0x53, 0x45, 0x66, 0x4B, 
   0x3D, 0x65, 0x4A, 0x3C, 0x6E, 0x52, 0x45, 0x6E, 0x51, 0x44, 0x6F, 0x52, 0x45, 0x6E, 0x51, 0x44, 
   0x6E, 0x51, 0x44, 0x6E, 0x51, 0x44, 0x6F, 0x52, 0x44, 0x70, 0x52, 0x45, 0x6F, 0x51, 0x44, 0x6E, 
   0x51, 0x43, 0x6C, 0x4F, 0x42, 0x6E, 0x51, 0x44, 0x6F, 0x54, 0x46, 0x6C, 0x4F, 0x42, 0x6B, 0x4A, 
   0x3F, 0x6A, 0x4A, 0x40, 0x68, 0x4A, 0x40, 0x6A, 0x4D, 0x42, 0x6B, 0x4D, 0x40, 0x6B, 0x4C, 0x3E, 
   0x6B, 0x4E, 0x40, 0x6A, 0x4D, 0x40, 0x6F, 0x51, 0x44, 0x66, 0x4A, 0x3C, 0x40, 0x24, 0x17, 0x39, 
   0x1F, 0x12, 0x59, 0x3A, 0x2C, 0x6A, 0x49, 0x39, 0x69, 0x4C, 0x3C, 0x6B, 0x50, 0x40, 0x6B, 0x4F, 
   0x3F, 0x6F, 0x51, 0x41, 0x74, 0x55, 0x45, 0x67, 0x53, 0x44, 0x51, 0x3E, 0x30, 0x2D, 0x1A, 0x0C, 
   0x37, 0x25, 0x16, 0x3D, 0x2C, 0x1C, 0x4F, 0x3F, 0x30, 0x5A, 0x43, 0x35, 0x64, 0x48, 0x3B, 0x62, 
   0x48, 0x3A, 0x62, 0x48, 0x39, 0x66, 0x4A, 0x3B, 0x65, 0x47, 0x37, 0x66, 0x47, 0x38, 0x65, 0x49, 
   0x38, 0x65, 0x49, 0x38, 0x66, 0x4A, 0x39, 0x67, 0x4B, 0x3A, 0x67, 0x4B, 0x3A, 0x67, 0x4B, 0x3A, 
   0x67, 0x4B, 0x3B, 0x67, 0x4A, 0x3B, 0xF6, 0xE5, 0xE2, 0xF9, 0xE8, 0xE5, 0xF9, 0xE8, 0xE5, 0xF8, 
   0xE7, 0xE4, 0xF7, 0xE6, 0xE3, 0xF7, 0xE6, 0xE3, 0xF6, 0xE5, 0xE4, 0xF3, 0xE4, 0xE4, 0xF7, 0xE7, 
   0xE2, 0xFA, 0xE7, 0xE0, 0xFB, 0xEC, 0xE4, 0xF6, 0xE9, 0xE4, 0xF3, 0xE9, 0xE7, 0xF0, 0xE3, 0xE6, 
   0x9D, 0x92, 0x96, 0xB7, 0xB3, 0xB6, 0x5B, 0x5D, 0x5E, 0x3D, 0x43, 0x44, 0x38, 0x46, 0x44, 0x49, 
   0x53, 0x55, 0x5D, 0x5F, 0x69, 0x5A, 0x62, 0x6B, 0x42, 0x51, 0x57, 0x53, 0x60, 0x65, 0x66, 0x63, 
   0x69, 0xA7, 0x9A, 0xA1, 0xC6, 0xBB, 0xBE, 0xBC, 0xB3, 0xB4, 0x62, 0x59, 0x5A, 0x3D, 0x38, 0x3B, 
   0x40, 0x43, 0x45, 0x46, 0x52, 0x56, 0x45, 0x56, 0x59, 0x48, 0x58, 0x5A, 0x4F, 0x58, 0x5E, 0x58, 
   0x5A, 0x64, 0x53, 0x53, 0x60, 0x51, 0x57, 0x5F, 0x5E, 0x6C, 0x6F, 0x47, 0x58, 0x5B, 0x46, 0x56, 
   0x59, 0x48, 0x57, 0x5A, 0x39, 0x45, 0x48, 0x4C, 0x58, 0x5B, 0x56, 0x62, 0x66, 0x6D, 0x7A, 0x7E, 
   0x4A, 0x5D, 0x61, 0x57, 0x69, 0x6C, 0x4F, 0x5E, 0x61, 0x4A, 0x55, 0x57, 0x4A, 0x52, 0x54, 0x69, 
   0x71, 0x70, 0x52, 0x56, 0x59, 0x3A, 0x3C, 0x42, 0xAC, 0xAE, 0xB4, 0xCD, 0xD1, 0xD6, 0x32, 0x38, 
   0x3D, 0x60, 0x67, 0x6B, 0x74, 0x7B, 0x80, 0x6A, 0x73, 0x77, 0xAC, 0xAC, 0xB2, 0xBA, 0xB2, 0xB9, 
   0xFF, 0xF7, 0xFC, 0xAD, 0xAA, 0xB1, 0x45, 0x4D, 0x52, 0x47, 0x55, 0x59, 0x51, 0x61, 0x64, 0x42, 
   0x52, 0x55, 0x55, 0x62, 0x66, 0x55, 0x60, 0x64, 0x6F, 0x78, 0x7C, 0xF6, 0xFE, 0xFF, 0x8D, 0x99, 
   0x9C, 0x2E, 0x39, 0x3B, 0x48, 0x51, 0x54, 0x61, 0x67, 0x6A, 0xD3, 0xD5, 0xD9, 0xBB, 0xBB, 0xBF, 
   0x5E, 0x63, 0x63, 0x54, 0x5B, 0x5A, 0x3D, 0x3D, 0x3C, 0x64, 0x5D, 0x5E, 0x61, 0x59, 0x59, 0xD3, 
   0xCC, 0xCD, 0xB1, 0xAA, 0xAA, 0xE8, 0xDC, 0xDA, 0xFC, 0xEE, 0xEC, 0xF1, 0xE5, 0xE2, 0xF7, 0xEA, 
   0xE9, 0xF5, 0xE8, 0xE6, 0xF8, 0xEB, 0xE9, 0xF9, 0xEC, 0xEA, 0xF8, 0xEB, 0xE9, 0xF6, 0xE9, 0xE7, 
   0xF4, 0xE7, 0xE5, 0xF6, 0xE9, 0xE7, 0xF6, 0xEA, 0xE8, 0xF9, 0xEC, 0xEA, 0xFD, 0xEE, 0xEC, 0xFD, 
   0xED, 0xEB, 0xFA, 0xEB, 0xE9, 0xFB, 0xEC, 0xEA, 0xFB, 0xEC, 0xEA, 0xFC, 0xED, 0xEA, 0xFC, 0xF5, 
   0xF4, 0xC6, 0xC2, 0xC0, 0x9F, 0x9C, 0x9B, 0xEC, 0xE8, 0xE7, 0x91, 0x8F, 0x8E, 0xA8, 0xA8, 0xA7, 
   0x49, 0x49, 0x47, 0x72, 0x66, 0x63, 0xF7, 0xEC, 0xE9, 0xD9, 0xCE, 0xCB, 0xFA, 0xF3, 0xEF, 0xEE, 
   0xE3, 0xDF, 0xED, 0xE2, 0xDE, 0xFB, 0xF0, 0xED, 0xFA, 0xF1, 0xEE, 0xF9, 0xF4, 0xF0, 0xF5, 0xF0, 
   0xEB, 0xF8, 0xEF, 0xEB, 0xF8, 0xE9, 0xE6, 0xFC, 0xE9, 0xE8, 0xFB, 0xE4, 0xE7, 0xF3, 0xDD, 0xDF, 
   0xFB, 0xE5, 0xE6, 0xF8, 0xE5, 0xE3, 0xF3, 0xE3, 0xDF, 0xF5, 0xE6, 0xE0, 0xF6, 0xE5, 0xDE, 0xF7, 
   0xE5, 0xDD, 0xF5, 0xE3, 0xDB, 0xF5, 0xE2, 0xDC, 0xF6, 0xE1, 0xDF, 0xF0, 0xDA, 0xD9, 0xF3, 0xDA, 
   0xDA, 0xF1, 0xDB, 0xDA, 0xF5, 0xE1, 0xE0, 0xF7, 0xE2, 0xE1, 0xF9, 0xE5, 0xE4, 0xF7, 0xE2, 0xE1, 
   0xF5, 0xE0, 0xDF, 0xF6, 0xE2, 0xE0, 0xF5, 0xE2, 0xDF, 0xF5, 0xE2, 0xDF, 0xF5, 0xE2, 0xDF, 0xF8, 
   0xE5, 0xE2, 0xF6, 0xE3, 0xE0, 0xF4, 0xE1, 0xDE, 0xF4, 0xE1, 0xDE, 0xEF, 0xDC, 0xD9, 0xF3, 0xE0, 
   0xDD, 0xF8, 0xE5, 0xE2, 0xF9, 0xE6, 0xE3, 0xF6, 0xE3, 0xE0, 0xF7, 0xE3, 0xE0, 0xF8, 0xE3, 0xE0, 
   0xF9, 0xE4, 0xE2, 0xF8, 0xE2, 0xE0, 0xF3, 0xDC, 0xDA, 0xEE, 0xD6, 0xD4, 0xF0, 0xD8, 0xD6, 0xF4, 
   0xDC, 0xDA, 0xF2, 0xDA, 0xD8, 0xF2, 0xDB, 0xD9, 0xF8, 0xDD, 0xDC, 0xF8, 0xDA, 0xD9, 0xF8, 0xD9, 
   0xD8, 0xF2, 0xD5, 0xD4, 0xED, 0xD6, 0xD4, 0xED, 0xD7, 0xD5, 0xF0, 0xD8, 0xD6, 0xF2, 0xD8, 0xD6, 
   0xF1, 0xD5, 0xD4, 0xEC, 0xD0, 0xCF, 0xEA, 0xC4, 0xC1, 0xE2, 0xB4, 0xB0, 0xCE, 0xA4, 0x9F, 0xB8, 
   0x90, 0x8B, 0xA6, 0x80, 0x7B, 0x91, 0x6E, 0x68, 0x86, 0x64, 0x5E, 0x77, 0x5D, 0x4F, 0x72, 0x59, 
   0x4A, 0x72, 0x59, 0x4B, 0x70, 0x56, 0x48, 0x6F, 0x56, 0x48, 0x71, 0x57, 0x4A, 0x73, 0x58, 0x4A, 
   0x74, 0x57, 0x49, 0x74, 0x57, 0x49, 0x73, 0x56, 0x49, 0x71, 0x54, 0x47, 0x71, 0x54, 0x47, 0x71, 
   0x54, 0x47, 0x70, 0x56, 0x48, 0x72, 0x57, 0x49, 0x6D, 0x53, 0x45, 0x5E, 0x44, 0x36, 0x61, 0x47, 
   0x39, 0x6A, 0x50, 0x42, 0x6F, 0x53, 0x45, 0x6F, 0x51, 0x44, 0x6F, 0x51, 0x44, 0x6F, 0x51, 0x44, 
   0x6F, 0x51, 0x44, 0x6F, 0x51, 0x44, 0x6F, 0x51, 0x44, 0x70, 0x52, 0x45, 0x6F, 0x51, 0x44, 0x6E, 
   0x50, 0x43, 0x6E, 0x50, 0x43, 0x6F, 0x50, 0x43, 0x6E, 0x50, 0x43, 0x6E, 0x50, 0x43, 0x6C, 0x4F, 
   0x41, 0x6B, 0x4E, 0x40, 0x6C, 0x4E, 0x40, 0x6A, 0x4C, 0x3F, 0x6A, 0x4C, 0x3F, 0x6A, 0x4C, 0x3F, 
   0x6C, 0x4F, 0x40, 0x6D, 0x50, 0x40, 0x6C, 0x4F, 0x40, 0x5D, 0x40, 0x30, 0x46, 0x29, 0x1A, 0x5A, 
   0x3D, 0x2E, 0x70, 0x4E, 0x3F, 0x71, 0x4D, 0x3D, 0x6C, 0x4F, 0x3E, 0x6C, 0x52, 0x41, 0x6C, 0x53, 
   0x42, 0x70, 0x55, 0x44, 0x70, 0x50, 0x41, 0x66, 0x51, 0x42, 0x59, 0x46, 0x37, 0x42, 0x2E, 0x1F, 
   0x4D, 0x3A, 0x29, 0x58, 0x45, 0x32, 0x5C, 0x4B, 0x36, 0x5D, 0x46, 0x32, 0x64, 0x47, 0x36, 0x63, 
   0x47, 0x36, 0x65, 0x48, 0x37, 0x65, 0x49, 0x38, 0x65, 0x49, 0x38, 0x62, 0x47, 0x36, 0x64, 0x48, 
   0x37, 0x65, 0x49, 0x38, 0x66, 0x4A, 0x39, 0x67, 0x4B, 0x3A, 0x67, 0x4B, 0x3A, 0x67, 0x4B, 0x3A, 
   0x67, 0x4B, 0x3B, 0x67, 0x4A, 0x3B, 0xF6, 0xE5, 0xE2, 0xF9, 0xE8, 0xE5, 0xF9, 0xE8, 0xE5, 0xF8, 
   0xE7, 0xE4, 0xF7, 0xE6, 0xE3, 0xF7, 0xE6, 0xE3, 0xF6, 0xE5, 0xE4, 0xF3, 0xE4, 0xE4, 0xF7, 0xE7, 
   0xE2, 0xF9, 0xE6, 0xDF, 0xF8, 0xE8, 0xE1, 0xF5, 0xE8, 0xE3, 0xF7, 0xEE, 0xEC, 0xE8, 0xE2, 0xE4, 
   0x6F, 0x6C, 0x6D, 0x86, 0x84, 0x86, 0x4E, 0x50, 0x51, 0x3B, 0x3F, 0x40, 0x64, 0x6C, 0x6C, 0x7B, 
   0x83, 0x85, 0x51, 0x59, 0x5F, 0x58, 0x65, 0x6B, 0x53, 0x65, 0x69, 0x52, 0x63, 0x65, 0x5A, 0x5E, 
   0x61, 0x7C, 0x76, 0x79, 0xC4, 0xBB, 0xBB, 0xCF, 0xC4, 0xC4, 0x66, 0x5A, 0x5C, 0x47, 0x3E, 0x3F, 
   0x44, 0x40, 0x42, 0x51, 0x55, 0x58, 0x57, 0x60, 0x62, 0x3E, 0x4A, 0x4A, 0x4A, 0x52, 0x56, 0x59, 
   0x5B, 0x64, 0x52, 0x53, 0x5E, 0x6A, 0x70, 0x79, 0x42, 0x4E, 0x53, 0x61, 0x70, 0x73, 0x4D, 0x5C, 
   0x5F, 0x50, 0x5E, 0x61, 0x67, 0x73, 0x77, 0x77, 0x82, 0x86, 0x48, 0x52, 0x56, 0x4E, 0x58, 0x5C, 
   0x70, 0x81, 0x85, 0x61, 0x72, 0x76, 0x40, 0x4F, 0x51, 0x48, 0x53, 0x55, 0x52, 0x5B, 0x5C, 0x6F, 
   0x78, 0x78, 0x67, 0x6C, 0x6F, 0x4E, 0x50, 0x56, 0xBB, 0xBD, 0xC3, 0x97, 0x9B, 0xA0, 0x48, 0x4D, 
   0x52, 0x7A, 0x81, 0x86, 0x74, 0x7E, 0x81, 0x96, 0xA2, 0xA6, 0x56, 0x5B, 0x5F, 0xA0, 0x9D, 0xA3, 
   0xEF, 0xEA, 0xEF, 0x6F, 0x70, 0x75, 0x40, 0x4A, 0x4E, 0x54, 0x63, 0x66, 0x4F, 0x5F, 0x62, 0x4C, 
   0x5B, 0x5E, 0x62, 0x6E, 0x72, 0x34, 0x3F, 0x43, 0x9D, 0xA7, 0xAB, 0x8B, 0x94, 0x97, 0x39, 0x42, 
   0x45, 0x3D, 0x45, 0x48, 0x4B, 0x52, 0x55, 0x54, 0x59, 0x5C, 0x7F, 0x83, 0x87, 0x55, 0x58, 0x5C, 
   0x42, 0x46, 0x47, 0x5E, 0x63, 0x61, 0x41, 0x3F, 0x3F, 0x73, 0x6C, 0x6D, 0x94, 0x8B, 0x8C, 0x96, 
   0x8E, 0x8F, 0xDF, 0xDB, 0xDB, 0xFC, 0xF1, 0xF0, 0xF4, 0xE7, 0xE5, 0xF9, 0xED, 0xEB, 0xF6, 0xE9, 
   0xE7, 0xFA, 0xED, 0xEB, 0xFA, 0xED, 0xEB, 0xF8, 0xEB, 0xE9, 0xF6, 0xE9, 0xE7, 0xF4, 0xE7, 0xE5, 
   0xF5, 0xE8, 0xE6, 0xF8, 0xEB, 0xE9, 0xF9, 0xEC, 0xEA, 0xFA, 0xED, 0xEB, 0xFB, 0xEC, 0xEA, 0xFB, 
   0xEC, 0xEA, 0xFC, 0xED, 0xEB, 0xFA, 0xEB, 0xE9, 0xFD, 0xEE, 0xEC, 0xFE, 0xEF, 0xED, 0xFD, 0xF7, 
   0xF6, 0xBE, 0xB9, 0xB8, 0xE7, 0xE3, 0xE3, 0xF2, 0xEE, 0xED, 0x79, 0x76, 0x75, 0x3F, 0x3D, 0x3C, 
   0x47, 0x46, 0x44, 0xD3, 0xCB, 0xC9, 0xF5, 0xE9, 0xE7, 0xF8, 0xEE, 0xEC, 0xF5, 0xEB, 0xE9, 0xF1, 
   0xE5, 0xE3, 0xF8, 0xED, 0xEB, 0xF9, 0xEE, 0xEB, 0xFA, 0xF1, 0xEF, 0xE2, 0xDB, 0xD9, 0xDF, 0xD9, 
   0xD6, 0xF1, 0xE9, 0xE6, 0xF8, 0xEB, 0xE9, 0xFA, 0xE9, 0xE8, 0xF6, 0xE1, 0xE3, 0xF7, 0xE3, 0xE5, 
   0xF8, 0xE3, 0xE4, 0xF4, 0xE2, 0xDF, 0xF7, 0xE6, 0xE3, 0xF8, 0xE8, 0xE3, 0xF5, 0xE4, 0xDD, 0xF5, 
   0xE3, 0xDB, 0xF9, 0xE5, 0xDF, 0xF7, 0xE3, 0xDF, 0xF4, 0xE0, 0xDD, 0xF3, 0xDD, 0xDC, 0xF5, 0xDD, 
   0xDD, 0xF4, 0xE0, 0xDF, 0xF4, 0xE0, 0xDF, 0xF8, 0xE4, 0xE3, 0xF8, 0xE4, 0xE3, 0xF6, 0xE2, 0xE1, 
   0xF5, 0xE1, 0xE0, 0xF6, 0xE3, 0xE1, 0xF6, 0xE3, 0xE0, 0xF6, 0xE3, 0xE0, 0xF6, 0xE3, 0xE0, 0xF8, 
   0xE5, 0xE2, 0xF7, 0xE4, 0xE1, 0xF5, 0xE2, 0xDF, 0xF7, 0xE4, 0xE1, 0xF3, 0xE0, 0xDD, 0xF5, 0xE2, 
   0xDF, 0xF6, 0xE3, 0xE0, 0xF5, 0xE2, 0xDF, 0xF7, 0xE4, 0xE1, 0xFA, 0xE6, 0xE3, 0xF9, 0xE3, 0xE1, 
   0xF9, 0xE3, 0xE1, 0xF8, 0xE3, 0xE1, 0xF5, 0xE1, 0xDE, 0xF1, 0xDE, 0xDB, 0xE9, 0xD6, 0xD4, 0xE1, 
   0xCC, 0xCA, 0xF2, 0xDC, 0xDA, 0xF1, 0xDA, 0xD8, 0xF8, 0xE0, 0xDE, 0xF8, 0xDE, 0xDC, 0xF6, 0xDA, 
   0xD8, 0xF4, 0xD9, 0xD8, 0xF1, 0xDA, 0xD8, 0xF1, 0xDA, 0xD8, 0xF3, 0xDB, 0xD9, 0xF1, 0xD5, 0xD4, 
   0xEE, 0xD1, 0xD0, 0xE6, 0xC9, 0xC8, 0xE1, 0xBC, 0xB9, 0xD7, 0xAC, 0xA7, 0xC5, 0x9C, 0x97, 0xB0, 
   0x89, 0x84, 0xA1, 0x7C, 0x75, 0x90, 0x6B, 0x66, 0x84, 0x62, 0x5C, 0x74, 0x59, 0x4B, 0x70, 0x56, 
   0x47, 0x72, 0x58, 0x4A, 0x72, 0x58, 0x4A, 0x71, 0x57, 0x49, 0x72, 0x58, 0x4A, 0x73, 0x59, 0x4B, 
   0x72, 0x58, 0x4A, 0x72, 0x58, 0x4A, 0x71, 0x57, 0x49, 0x70, 0x56, 0x48, 0x70, 0x56, 0x48, 0x70, 
   0x56, 0x48, 0x71, 0x56, 0x48, 0x72, 0x57, 0x49, 0x6F, 0x54, 0x46, 0x62, 0x47, 0x39, 0x66, 0x4B, 
   0x3D, 0x6C, 0x52, 0x44, 0x6C, 0x4F, 0x42, 0x70, 0x51, 0x44, 0x6F, 0x51, 0x44, 0x6F, 0x51, 0x44, 
   0x6F, 0x51, 0x44, 0x6F, 0x51, 0x44, 0x6F, 0x51, 0x44, 0x6F, 0x51, 0x44, 0x6E, 0x50, 0x43, 0x6E, 
   0x50, 0x43, 0x6D, 0x4F, 0x42, 0x6A, 0x4C, 0x3F, 0x6C, 0x4E, 0x41, 0x6D, 0x4F, 0x42, 0x6B, 0x4D, 
   0x40, 0x69, 0x4B, 0x3E, 0x6A, 0x4C, 0x3F, 0x6B, 0x4D, 0x40, 0x6B, 0x4D, 0x40, 0x6B, 0x4D, 0x40, 
   0x6A, 0x4D, 0x3E, 0x6D, 0x50, 0x41, 0x6A, 0x4D, 0x3E, 0x69, 0x4C, 0x3D, 0x68, 0x4B, 0x3C, 0x68, 
   0x4B, 0x3C, 0x6C, 0x4C, 0x3D, 0x6E, 0x4D, 0x3E, 0x6A, 0x4E, 0x3E, 0x68, 0x50, 0x40, 0x6B, 0x54, 
   0x43, 0x6A, 0x51, 0x41, 0x6C, 0x50, 0x41, 0x69, 0x51, 0x42, 0x63, 0x4C, 0x3D, 0x59, 0x41, 0x31, 
   0x60, 0x49, 0x38, 0x64, 0x4C, 0x3B, 0x60, 0x49, 0x37, 0x64, 0x4C, 0x39, 0x65, 0x49, 0x38, 0x64, 
   0x48, 0x37, 0x65, 0x49, 0x38, 0x64, 0x48, 0x37, 0x65, 0x49, 0x38, 0x64, 0x48, 0x37, 0x64, 0x48, 
   0x37, 0x65, 0x49, 0x38, 0x66, 0x4A, 0x39, 0x67, 0x4B, 0x3A, 0x67, 0x4B, 0x3A, 0x67, 0x4B, 0x3A, 
   0x67, 0x4B, 0x3B, 0x67, 0x4A, 0x3B, 0xF6, 0xE5, 0xE2, 0xF9, 0xE8, 0xE5, 0xF9, 0xE8, 0xE5, 0xF8, 
   0xE7, 0xE4, 0xF7, 0xE6, 0xE3, 0xF7, 0xE6, 0xE3, 0xF6, 0xE5, 0xE4, 0xF3, 0xE4, 0xE4, 0xF7, 0xE7, 
   0xE2, 0xFA, 0xE8, 0xE1, 0xF9, 0xE9, 0xE1, 0xF3, 0xE7, 0xE2, 0xE8, 0xE1, 0xDF, 0x83, 0x83, 0x84, 
   0x5F, 0x62, 0x63, 0x49, 0x4C, 0x4D, 0x3D, 0x3F, 0x40, 0x47, 0x48, 0x49, 0x5F, 0x5F, 0x60, 0x76, 
   0x77, 0x79, 0x58, 0x5F, 0x64, 0x59, 0x66, 0x69, 0x50, 0x61, 0x62, 0x44, 0x53, 0x52, 0x5C, 0x62, 
   0x61, 0x64, 0x61, 0x62, 0x9D, 0x92, 0x91, 0xEC, 0xDF, 0xDD, 0x8E, 0x7F, 0x7E, 0x76, 0x66, 0x68, 
   0x81, 0x74, 0x76, 0x5B, 0x53, 0x56, 0x51, 0x4B, 0x4D, 0x4A, 0x4F, 0x4F, 0x50, 0x53, 0x56, 0x4E, 
   0x4F, 0x59, 0x59, 0x5C, 0x65, 0x5D, 0x64, 0x6D, 0x4C, 0x57, 0x5C, 0x38, 0x45, 0x48, 0x4F, 0x5E, 
   0x61, 0x56, 0x63, 0x67, 0x86, 0x91, 0x95, 0x96, 0xA0, 0xA4, 0x3C, 0x45, 0x49, 0x4A, 0x53, 0x57, 
   0x47, 0x58, 0x5E, 0x82, 0x93, 0x98, 0x73, 0x81, 0x85, 0x38, 0x44, 0x46, 0x75, 0x7E, 0x80, 0xB9, 
   0xC0, 0xBF, 0x86, 0x8B, 0x8F, 0x54, 0x56, 0x5C, 0x97, 0x9B, 0xA0, 0x7B, 0x81, 0x86, 0x62, 0x68, 
   0x6D, 0x52, 0x5A, 0x5F, 0x68, 0x71, 0x75, 0x5E, 0x6C, 0x6F, 0x49, 0x51, 0x55, 0x79, 0x7B, 0x80, 
   0xD0, 0xD1, 0xD7, 0x72, 0x78, 0x7C, 0x4E, 0x5B, 0x5F, 0x50, 0x60, 0x63, 0x4A, 0x59, 0x5C, 0x4B, 
   0x5A, 0x5D, 0x46, 0x51, 0x55, 0x43, 0x4E, 0x52, 0x56, 0x60, 0x64, 0x44, 0x4C, 0x50, 0x51, 0x58, 
   0x5B, 0x3C, 0x42, 0x45, 0x46, 0x4C, 0x4F, 0x52, 0x57, 0x5A, 0x4C, 0x51, 0x54, 0x4B, 0x51, 0x53, 
   0x41, 0x46, 0x47, 0x55, 0x58, 0x57, 0x6D, 0x67, 0x68, 0x6A, 0x61, 0x62, 0xB4, 0xA8, 0xAB, 0x80, 
   0x76, 0x78, 0xE9, 0xE2, 0xE3, 0xF8, 0xEB, 0xE9, 0xF5, 0xE7, 0xE5, 0xF8, 0xEC, 0xEA, 0xFA, 0xED, 
   0xEB, 0xFA, 0xED, 0xEB, 0xF8, 0xEB, 0xE9, 0xF8, 0xEB, 0xE9, 0xF7, 0xEA, 0xE8, 0xF6, 0xE9, 0xE7, 
   0xF9, 0xEC, 0xEA, 0xF9, 0xEC, 0xEA, 0xF9, 0xEC, 0xEA, 0xF9, 0xEC, 0xEA, 0xFB, 0xEC, 0xEA, 0xFB, 
   0xEC, 0xEA, 0xFA, 0xEB, 0xE9, 0xF9, 0xEA, 0xE8, 0xFB, 0xED, 0xEB, 0xFF, 0xF0, 0xEE, 0xF1, 0xE6, 
   0xE5, 0xBC, 0xB5, 0xB5, 0xF0, 0xEB, 0xEB, 0xF0, 0xEC, 0xEB, 0x78, 0x74, 0x73, 0x3F, 0x3C, 0x3B, 
   0xAC, 0xAA, 0xA9, 0xFF, 0xFB, 0xF8, 0xF6, 0xED, 0xEA, 0xF5, 0xEC, 0xE9, 0xF3, 0xEB, 0xE8, 0xF6, 
   0xED, 0xEA, 0xF5, 0xEB, 0xE8, 0xFA, 0xF1, 0xEE, 0xF7, 0xEE, 0xEB, 0x82, 0x7E, 0x7B, 0x7D, 0x78, 
   0x75, 0xEE, 0xE7, 0xE4, 0xF6, 0xEB, 0xE9, 0xF9, 0xE9, 0xE8, 0xF6, 0xE6, 0xE7, 0xF2, 0xE2, 0xE3, 
   0xF1, 0xE0, 0xE0, 0xF8, 0xE7, 0xE5, 0xF8, 0xE7, 0xE4, 0xF7, 0xE8, 0xE3, 0xF9, 0xE8, 0xE1, 0xFB, 
   0xE7, 0xE1, 0xF8, 0xE3, 0xDF, 0xF3, 0xDE, 0xDC, 0xF4, 0xDF, 0xDE, 0xF1, 0xDC, 0xDB, 0xF3, 0xDE, 
   0xDD, 0xF9, 0xE5, 0xE4, 0xF6, 0xE2, 0xE1, 0xF5, 0xE2, 0xE1, 0xF4, 0xE1, 0xE0, 0xF6, 0xE2, 0xE1, 
   0xF7, 0xE2, 0xE2, 0xF7, 0xE4, 0xE2, 0xF7, 0xE4, 0xE1, 0xF7, 0xE4, 0xE1, 0xF7, 0xE4, 0xE1, 0xF8, 
   0xE5, 0xE2, 0xF8, 0xE5, 0xE2, 0xF7, 0xE4, 0xE1, 0xF7, 0xE4, 0xE1, 0xF5, 0xE2, 0xDF, 0xF6, 0xE3, 
   0xE0, 0xF8, 0xE5, 0xE2, 0xF7, 0xE4, 0xE1, 0xF6, 0xE3, 0xE0, 0xF8, 0xE4, 0xE1, 0xFC, 0xE4, 0xE2, 
   0xFA, 0xE4, 0xE2, 0xFA, 0xE7, 0xE4, 0xF9, 0xE9, 0xE6, 0xF1, 0xE4, 0xE0, 0xCA, 0xBF, 0xBB, 0xAB, 
   0x99, 0x96, 0x9A, 0x87, 0x84, 0xD8, 0xC3, 0xC1, 0xF8, 0xE3, 0xE0, 0xF4, 0xDD, 0xDB, 0xF3, 0xDA, 
   0xD8, 0xF3, 0xDB, 0xD9, 0xF4, 0xDD, 0xDB, 0xF2, 0xDA, 0xD8, 0xF0, 0xD7, 0xD5, 0xEF, 0xD3, 0xD2, 
   0xED, 0xCF, 0xCE, 0xE4, 0xC7, 0xC6, 0xDD, 0xBA, 0xB7, 0xD5, 0xAC, 0xA7, 0xC7, 0x9F, 0x9A, 0xB5, 
   0x8F, 0x8A, 0xA7, 0x82, 0x7C, 0x97, 0x74, 0x6E, 0x8C, 0x69, 0x62, 0x7B, 0x5F, 0x52, 0x75, 0x5A, 
   0x4C, 0x74, 0x59, 0x4B, 0x75, 0x5A, 0x4C, 0x74, 0x59, 0x4B, 0x74, 0x59, 0x4B, 0x72, 0x58, 0x4A, 
   0x70, 0x56, 0x48, 0x70, 0x56, 0x48, 0x70, 0x56, 0x49, 0x71, 0x57, 0x49, 0x71, 0x57, 0x49, 0x71, 
   0x57, 0x49, 0x70, 0x55, 0x47, 0x70, 0x55, 0x47, 0x71, 0x56, 0x48, 0x72, 0x57, 0x49, 0x6E, 0x53, 
   0x45, 0x6F, 0x54, 0x46, 0x6E, 0x52, 0x44, 0x6F, 0x51, 0x44, 0x6F, 0x51, 0x44, 0x6F, 0x51, 0x44, 
   0x6F, 0x51, 0x44, 0x6F, 0x51, 0x44, 0x6F, 0x51, 0x44, 0x6E, 0x50, 0x43, 0x6D, 0x4F, 0x42, 0x6D, 
   0x4F, 0x42, 0x6C, 0x4E, 0x41, 0x6B, 0x4D, 0x40, 0x6C, 0x4E, 0x41, 0x6E, 0x50, 0x43, 0x6E, 0x50, 
   0x43, 0x6E, 0x50, 0x43, 0x6B, 0x4D, 0x40, 0x6C, 0x4E, 0x41, 0x6C, 0x4E, 0x41, 0x6C, 0x4E, 0x41, 
   0x6E, 0x51, 0x42, 0x6B, 0x4E, 0x3F, 0x6C, 0x4F, 0x40, 0x6C, 0x4F, 0x40, 0x6A, 0x4D, 0x3E, 0x6A, 
   0x4D, 0x3E, 0x6A, 0x4C, 0x3D, 0x6D, 0x4F, 0x40, 0x6B, 0x53, 0x43, 0x6C, 0x59, 0x49, 0x56, 0x44, 
   0x33, 0x52, 0x3D, 0x2D, 0x67, 0x4F, 0x3F, 0x62, 0x46, 0x38, 0x65, 0x4A, 0x3D, 0x68, 0x4D, 0x3E, 
   0x64, 0x4A, 0x3A, 0x64, 0x49, 0x38, 0x65, 0x4C, 0x3A, 0x63, 0x49, 0x36, 0x66, 0x4A, 0x39, 0x64, 
   0x48, 0x37, 0x64, 0x48, 0x37, 0x64, 0x48, 0x37, 0x65, 0x49, 0x38, 0x65, 0x49, 0x38, 0x64, 0x48, 
   0x37, 0x65, 0x49, 0x38, 0x66, 0x4A, 0x39, 0x67, 0x4B, 0x3A, 0x67, 0x4B, 0x3A, 0x67, 0x4B, 0x3A, 
   0x67, 0x4B, 0x3B, 0x67, 0x4A, 0x3B, 0xF6, 0xE5, 0xE2, 0xF9, 0xE8, 0xE5, 0xF9, 0xE8, 0xE5, 0xF8, 
   0xE7, 0xE4, 0xF7, 0xE6, 0xE3, 0xF7, 0xE6, 0xE3, 0xF6, 0xE5, 0xE4, 0xF4, 0xE4, 0xE4, 0xF7, 0xE7, 
   0xE2, 0xFA, 0xE7, 0xE1, 0xF5, 0xE5, 0xDE, 0xFF, 0xF9, 0xF3, 0xA0, 0x9B, 0x98, 0x44, 0x49, 0x49, 
   0x5A, 0x63, 0x63, 0x40, 0x45, 0x46, 0x3D, 0x3E, 0x40, 0x47, 0x45, 0x47, 0x4E, 0x4A, 0x4B, 0x75, 
   0x70, 0x72, 0x5C, 0x5B, 0x5D, 0x54, 0x56, 0x58, 0x85, 0x8B, 0x8B, 0xAE, 0xB2, 0xB2, 0xC9, 0xC6, 
   0xC5, 0xA4, 0x9B, 0x9A, 0x7E, 0x73, 0x6E, 0xAE, 0x9E, 0x98, 0xB7, 0xA2, 0xA0, 0xAD, 0x97, 0x97, 
   0xB6, 0x9F, 0x9F, 0x8A, 0x76, 0x78, 0x49, 0x39, 0x3A, 0x65, 0x65, 0x63, 0x64, 0x66, 0x68, 0x4A, 
   0x4B, 0x53, 0x53, 0x55, 0x5F, 0x65, 0x6C, 0x74, 0xA3, 0xAE, 0xB3, 0x47, 0x53, 0x57, 0x4E, 0x5A, 
   0x5E, 0x49, 0x55, 0x59, 0x4F, 0x5A, 0x5E, 0x4F, 0x59, 0x5D, 0x41, 0x49, 0x4D, 0x40, 0x47, 0x4C, 
   0x40, 0x50, 0x56, 0x4D, 0x5E, 0x64, 0x52, 0x60, 0x64, 0x4D, 0x59, 0x5C, 0xB6, 0xBE, 0xC1, 0xFC, 
   0xFF, 0xFF, 0x73, 0x78, 0x7C, 0x90, 0x94, 0x99, 0x98, 0x9C, 0xA1, 0xA2, 0xA8, 0xAD, 0xA9, 0xB0, 
   0xB5, 0x5C, 0x66, 0x6A, 0x76, 0x81, 0x85, 0x4F, 0x5F, 0x62, 0x4C, 0x59, 0x5D, 0x5B, 0x62, 0x67, 
   0x79, 0x7F, 0x84, 0x60, 0x6B, 0x6F, 0x50, 0x60, 0x63, 0x4E, 0x5E, 0x61, 0x4E, 0x5D, 0x60, 0x54, 
   0x63, 0x66, 0x54, 0x5F, 0x63, 0x5F, 0x6A, 0x6E, 0x3B, 0x45, 0x49, 0x49, 0x52, 0x56, 0x58, 0x5D, 
   0x60, 0x3D, 0x42, 0x45, 0x49, 0x4E, 0x51, 0x52, 0x57, 0x5A, 0x46, 0x4D, 0x50, 0x37, 0x3E, 0x42, 
   0x3B, 0x40, 0x41, 0x65, 0x65, 0x65, 0x8C, 0x86, 0x87, 0xA3, 0x97, 0x99, 0xDE, 0xD1, 0xD3, 0xE4, 
   0xDA, 0xDC, 0xF0, 0xE7, 0xE8, 0xF6, 0xE9, 0xE7, 0xF9, 0xEC, 0xEA, 0xF6, 0xE9, 0xE7, 0xFA, 0xED, 
   0xEB, 0xF8, 0xEB, 0xE9, 0xF8, 0xEB, 0xE9, 0xF7, 0xEA, 0xE8, 0xF5, 0xE8, 0xE6, 0xF8, 0xEB, 0xE9, 
   0xFB, 0xEE, 0xEC, 0xF9, 0xEC, 0xEA, 0xF8, 0xEB, 0xE9, 0xF8, 0xEB, 0xE9, 0xFC, 0xED, 0xEB, 0xFB, 
   0xEC, 0xEA, 0xF9, 0xEA, 0xE8, 0xF9, 0xEA, 0xE8, 0xF8, 0xE9, 0xE7, 0xFB, 0xEC, 0xEA, 0xE5, 0xD9, 
   0xD7, 0xE8, 0xDF, 0xE0, 0xE2, 0xDD, 0xDD, 0xAF, 0xA8, 0xA8, 0x7C, 0x76, 0x75, 0x8B, 0x86, 0x85, 
   0xEE, 0xEA, 0xE9, 0xF9, 0xEE, 0xEE, 0xF2, 0xE8, 0xE8, 0xF4, 0xEA, 0xEA, 0xF9, 0xEF, 0xEF, 0xF8, 
   0xEE, 0xED, 0xF8, 0xEF, 0xEE, 0xFD, 0xF3, 0xF3, 0xEC, 0xE5, 0xE5, 0x62, 0x5D, 0x5C, 0x6A, 0x65, 
   0x64, 0xF7, 0xF1, 0xF0, 0xF7, 0xED, 0xED, 0xF7, 0xE9, 0xE9, 0xE6, 0xD9, 0xD9, 0xF4, 0xE8, 0xE8, 
   0xF8, 0xEB, 0xEB, 0xF2, 0xE4, 0xE1, 0xF6, 0xE6, 0xE4, 0xF5, 0xE8, 0xE2, 0xF9, 0xE7, 0xE2, 0xFB, 
   0xE5, 0xE0, 0xF8, 0xE2, 0xDF, 0xF7, 0xE2, 0xE0, 0xF3, 0xDE, 0xDD, 0xF2, 0xDD, 0xDE, 0xF6, 0xE1, 
   0xE3, 0xF1, 0xDF, 0xDE, 0xF7, 0xE4, 0xE3, 0xF2, 0xE0, 0xDF, 0xF2, 0xE0, 0xDF, 0xF4, 0xE1, 0xE0, 
   0xF5, 0xE3, 0xE2, 0xF6, 0xE4, 0xE2, 0xF7, 0xE4, 0xE1, 0xF7, 0xE4, 0xE1, 0xF7, 0xE4, 0xE1, 0xF8, 
   0xE5, 0xE2, 0xF8, 0xE5, 0xE2, 0xF8, 0xE5, 0xE2, 0xF5, 0xE2, 0xDF, 0xF3, 0xE0, 0xDD, 0xF7, 0xE4, 
   0xE1, 0xF9, 0xE6, 0xE3, 0xF9, 0xE6, 0xE3, 0xF6, 0xE3, 0xE0, 0xF6, 0xE1, 0xDE, 0xFC, 0xE4, 0xE2, 
   0xF9, 0xE4, 0xE2, 0xFB, 0xEA, 0xE7, 0xEB, 0xDE, 0xDA, 0x99, 0x90, 0x8B, 0x7E, 0x78, 0x73, 0x69, 
   0x5B, 0x57, 0xAE, 0x9E, 0x9B, 0xF3, 0xE1, 0xDE, 0xF7, 0xE3, 0xE0, 0xF1, 0xDB, 0xD9, 0xF5, 0xDE, 
   0xDC, 0xF2, 0xDB, 0xD9, 0xF2, 0xD9, 0xD7, 0xF0, 0xD8, 0xD6, 0xF0, 0xD5, 0xD4, 0xF0, 0xD2, 0xD2, 
   0xEE, 0xCF, 0xCE, 0xE6, 0xC8, 0xC7, 0xE2, 0xC0, 0xBD, 0xDE, 0xB7, 0xB2, 0xD3, 0xAC, 0xA7, 0xC4, 
   0x9F, 0x9A, 0xB8, 0x94, 0x8E, 0xA8, 0x83, 0x7E, 0x9B, 0x77, 0x71, 0x8A, 0x6C, 0x61, 0x81, 0x63, 
   0x58, 0x7B, 0x5D, 0x52, 0x77, 0x59, 0x4E, 0x76, 0x58, 0x4D, 0x75, 0x57, 0x4C, 0x73, 0x56, 0x4B, 
   0x71, 0x56, 0x4B, 0x71, 0x56, 0x4B, 0x72, 0x57, 0x4B, 0x71, 0x56, 0x4B, 0x71, 0x56, 0x4B, 0x71, 
   0x56, 0x4B, 0x71, 0x54, 0x47, 0x71, 0x53, 0x46, 0x72, 0x55, 0x48, 0x70, 0x52, 0x45, 0x71, 0x53, 
   0x46, 0x6E, 0x51, 0x44, 0x70, 0x52, 0x45, 0x6F, 0x51, 0x44, 0x6F, 0x51, 0x44, 0x6F, 0x51, 0x44, 
   0x6F, 0x51, 0x44, 0x6F, 0x51, 0x44, 0x6F, 0x51, 0x44, 0x6E, 0x50, 0x43, 0x6D, 0x4F, 0x42, 0x6C, 
   0x4E, 0x41, 0x6C, 0x4E, 0x41, 0x6E, 0x50, 0x43, 0x6D, 0x4F, 0x42, 0x6C, 0x4E, 0x41, 0x6E, 0x50, 
   0x43, 0x6D, 0x4F, 0x42, 0x6B, 0x4D, 0x40, 0x6C, 0x4E, 0x41, 0x6C, 0x4E, 0x41, 0x6C, 0x4E, 0x41, 
   0x6E, 0x50, 0x42, 0x6C, 0x4F, 0x3F, 0x6B, 0x4E, 0x3F, 0x6C, 0x4F, 0x40, 0x6C, 0x4F, 0x40, 0x69, 
   0x4C, 0x3D, 0x6A, 0x4D, 0x3F, 0x6C, 0x52, 0x44, 0x6A, 0x55, 0x46, 0x62, 0x52, 0x42, 0x4C, 0x3C, 
   0x2C, 0x55, 0x44, 0x34, 0x61, 0x4B, 0x3C, 0x60, 0x43, 0x36, 0x62, 0x44, 0x37, 0x60, 0x43, 0x35, 
   0x64, 0x47, 0x38, 0x65, 0x49, 0x38, 0x65, 0x4A, 0x37, 0x63, 0x47, 0x36, 0x65, 0x49, 0x38, 0x62, 
   0x46, 0x35, 0x62, 0x46, 0x35, 0x64, 0x48, 0x37, 0x65, 0x49, 0x38, 0x65, 0x49, 0x38, 0x64, 0x48, 
   0x37, 0x65, 0x49, 0x38, 0x66, 0x4A, 0x39, 0x67, 0x4B, 0x3A, 0x67, 0x4B, 0x3A, 0x67, 0x4B, 0x3A, 
   0x67, 0x4B, 0x3B, 0x67, 0x4A, 0x3B, 0xF8, 0xE7, 0xE4, 0xF9, 0xE8, 0xE5, 0xF7, 0xE6, 0xE3, 0xF7, 
   0xE6, 0xE3, 0xF8, 0xE7, 0xE4, 0xF8, 0xE7, 0xE4, 0xF7, 0xE7, 0xE5, 0xF4, 0xE4, 0xE3, 0xF9, 0xE8, 
   0xE4, 0xF7, 0xE7, 0xDF, 0xF5, 0xE7, 0xDF, 0xF4, 0xED, 0xE7, 0x7B, 0x77, 0x74, 0x51, 0x5A, 0x5A, 
   0x56, 0x62, 0x62, 0x53, 0x5A, 0x5A, 0x61, 0x63, 0x64, 0x5A, 0x57, 0x59, 0x5D, 0x56, 0x59, 0x81, 
   0x76, 0x79, 0x8D, 0x7C, 0x7E, 0x7C, 0x6C, 0x6E, 0xE9, 0xDE, 0xDE, 0xE2, 0xD5, 0xD5, 0xA5, 0x94, 
   0x92, 0xE6, 0xD3, 0xD0, 0xDC, 0xD1, 0xCA, 0xB0, 0x9E, 0x96, 0xAA, 0x90, 0x8B, 0xBD, 0xA1, 0x9D, 
   0xCB, 0xAD, 0xAC, 0xC6, 0xA8, 0xA8, 0xC4, 0xAB, 0xAA, 0x89, 0x83, 0x7F, 0x47, 0x46, 0x45, 0x54, 
   0x54, 0x59, 0x55, 0x57, 0x61, 0x5B, 0x62, 0x6A, 0x5B, 0x66, 0x6D, 0x48, 0x55, 0x59, 0x6F, 0x7B, 
   0x7F, 0x5B, 0x67, 0x6B, 0x40, 0x4A, 0x4E, 0x59, 0x61, 0x66, 0x3F, 0x45, 0x4A, 0x45, 0x4C, 0x51, 
   0x53, 0x64, 0x6A, 0x52, 0x62, 0x69, 0x49, 0x57, 0x5D, 0x42, 0x4D, 0x50, 0xB8, 0xC1, 0xC4, 0xD2, 
   0xDA, 0xDC, 0x51, 0x57, 0x5B, 0x6D, 0x72, 0x77, 0x7C, 0x82, 0x87, 0xB9, 0xC1, 0xC4, 0xC0, 0xCA, 
   0xCD, 0x54, 0x5F, 0x63, 0x76, 0x81, 0x85, 0x54, 0x66, 0x69, 0x4D, 0x5D, 0x60, 0x4A, 0x56, 0x59, 
   0x3D, 0x48, 0x4C, 0x4B, 0x5A, 0x5E, 0x47, 0x59, 0x5C, 0x4C, 0x5E, 0x61, 0x4F, 0x5E, 0x61, 0x52, 
   0x61, 0x64, 0x4B, 0x57, 0x5B, 0x59, 0x64, 0x68, 0x4F, 0x59, 0x5D, 0x3D, 0x46, 0x4A, 0x6C, 0x72, 
   0x75, 0x3F, 0x45, 0x48, 0x3F, 0x45, 0x48, 0x61, 0x66, 0x69, 0x41, 0x47, 0x4A, 0x4F, 0x55, 0x59, 
   0x39, 0x3C, 0x3E, 0x95, 0x92, 0x93, 0x99, 0x92, 0x93, 0xD5, 0xC9, 0xCB, 0xFB, 0xEB, 0xEE, 0xF4, 
   0xE5, 0xE7, 0xF3, 0xE7, 0xE9, 0xF8, 0xEC, 0xEA, 0xF6, 0xE9, 0xE7, 0xFB, 0xEE, 0xEC, 0xF9, 0xEC, 
   0xEA, 0xF8, 0xEB, 0xE9, 0xF5, 0xE8, 0xE6, 0xF9, 0xEC, 0xEA, 0xF5, 0xE8, 0xE6, 0xF9, 0xEC, 0xEA, 
   0xF3, 0xE6, 0xE4, 0xF7, 0xEA, 0xE8, 0xFB, 0xEE, 0xEC, 0xFA, 0xEC, 0xEA, 0xFB, 0xEC, 0xEA, 0xFA, 
   0xEB, 0xE9, 0xF7, 0xE8, 0xE6, 0xF8, 0xE9, 0xE7, 0xF8, 0xE9, 0xE7, 0xF5, 0xE6, 0xE4, 0xF0, 0xE3, 
   0xE2, 0xFA, 0xF0, 0xF1, 0xB1, 0xA5, 0xA5, 0x85, 0x7B, 0x7B, 0x9F, 0x97, 0x97, 0xE6, 0xDE, 0xDE, 
   0xF8, 0xF3, 0xF3, 0xF2, 0xEC, 0xEC, 0xF6, 0xEE, 0xEE, 0xF4, 0xEC, 0xEC, 0xF9, 0xF1, 0xF1, 0xFB, 
   0xF2, 0xF2, 0xF8, 0xF0, 0xF0, 0xFF, 0xFA, 0xFA, 0xF5, 0xF2, 0xF1, 0x98, 0x95, 0x94, 0xCB, 0xCA, 
   0xC9, 0xFC, 0xF9, 0xF8, 0xFB, 0xF4, 0xF4, 0xF1, 0xE6, 0xE5, 0xE2, 0xDA, 0xDA, 0xEB, 0xE2, 0xE2, 
   0xE3, 0xD8, 0xD7, 0xF6, 0xE9, 0xE6, 0xF5, 0xE8, 0xE4, 0xF6, 0xE8, 0xE2, 0xF8, 0xE8, 0xE2, 0xF9, 
   0xE3, 0xDF, 0xFD, 0xE9, 0xE7, 0xF6, 0xE3, 0xE2, 0xEC, 0xDB, 0xDB, 0xFE, 0xEF, 0xF0, 0xF5, 0xE7, 
   0xE8, 0xF2, 0xE0, 0xE0, 0xF7, 0xE4, 0xE3, 0xF6, 0xE4, 0xE3, 0xF7, 0xE4, 0xE3, 0xF6, 0xE4, 0xE3, 
   0xF5, 0xE3, 0xE2, 0xF6, 0xE3, 0xE1, 0xF8, 0xE5, 0xE2, 0xF8, 0xE5, 0xE2, 0xF8, 0xE5, 0xE2, 0xF7, 
   0xE4, 0xE1, 0xFA, 0xE7, 0xE4, 0xF7, 0xE4, 0xE1, 0xF4, 0xE1, 0xDE, 0xF7, 0xE4, 0xE1, 0xF8, 0xE5, 
   0xE2, 0xF6, 0xE3, 0xE0, 0xF6, 0xE4, 0xE1, 0xF2, 0xDF, 0xDC, 0xF7, 0xE2, 0xDF, 0xF7, 0xDF, 0xDD, 
   0xF5, 0xDF, 0xDD, 0xF3, 0xE2, 0xDF, 0xC8, 0xBC, 0xB8, 0x79, 0x71, 0x6C, 0xAE, 0xA9, 0xA4, 0xCD, 
   0xBF, 0xBB, 0xFE, 0xEE, 0xEB, 0xF3, 0xE1, 0xDD, 0xEE, 0xDA, 0xD7, 0xEF, 0xDA, 0xD8, 0xF3, 0xDC, 
   0xDA, 0xEF, 0xD8, 0xD6, 0xEF, 0xD5, 0xD4, 0xF0, 0xD4, 0xD3, 0xF1, 0xD4, 0xD3, 0xF1, 0xD3, 0xD2, 
   0xEF, 0xD0, 0xCF, 0xEA, 0xCC, 0xCB, 0xEA, 0xC9, 0xC6, 0xE9, 0xC5, 0xBF, 0xE2, 0xBE, 0xB9, 0xDA, 
   0xB6, 0xB0, 0xD3, 0xAF, 0xA9, 0xC5, 0xA1, 0x9B, 0xBD, 0x99, 0x93, 0xB0, 0x8E, 0x84, 0xA5, 0x83, 
   0x79, 0x99, 0x77, 0x6D, 0x8E, 0x6C, 0x62, 0x86, 0x64, 0x5A, 0x80, 0x5D, 0x54, 0x79, 0x5A, 0x50, 
   0x70, 0x55, 0x4A, 0x70, 0x55, 0x4A, 0x72, 0x57, 0x4C, 0x73, 0x59, 0x4E, 0x70, 0x56, 0x4B, 0x71, 
   0x56, 0x4B, 0x72, 0x54, 0x48, 0x72, 0x54, 0x47, 0x72, 0x54, 0x47, 0x71, 0x53, 0x46, 0x71, 0x53, 
   0x46, 0x6F, 0x51, 0x44, 0x6E, 0x50, 0x43, 0x6E, 0x50, 0x43, 0x6F, 0x51, 0x44, 0x6E, 0x50, 0x43, 
   0x6F, 0x51, 0x44, 0x6E, 0x50, 0x43, 0x6D, 0x4F, 0x42, 0x6D, 0x4F, 0x42, 0x6D, 0x4F, 0x42, 0x6D, 
   0x4F, 0x42, 0x6E, 0x50, 0x43, 0x6E, 0x50, 0x43, 0x6E, 0x50, 0x43, 0x6E, 0x50, 0x43, 0x6E, 0x50, 
   0x43, 0x6E, 0x50, 0x43, 0x6E, 0x50, 0x43, 0x6D, 0x4F, 0x42, 0x6D, 0x4F, 0x42, 0x6D, 0x4F, 0x42, 
   0x6E, 0x51, 0x42, 0x6C, 0x4F, 0x40, 0x6C, 0x4F, 0x40, 0x6C, 0x4F, 0x40, 0x6C, 0x4F, 0x40, 0x6D, 
   0x50, 0x41, 0x6E, 0x51, 0x43, 0x66, 0x4D, 0x3F, 0x62, 0x4F, 0x40, 0x5C, 0x4D, 0x3D, 0x5B, 0x4C, 
   0x3C, 0x5C, 0x4A, 0x3B, 0x67, 0x51, 0x42, 0x6A, 0x4B, 0x3E, 0x65, 0x45, 0x38, 0x62, 0x43, 0x35, 
   0x69, 0x4A, 0x3A, 0x67, 0x49, 0x39, 0x66, 0x48, 0x37, 0x65, 0x48, 0x36, 0x62, 0x46, 0x35, 0x62, 
   0x46, 0x35, 0x63, 0x47, 0x36, 0x65, 0x49, 0x38, 0x66, 0x4A, 0x39, 0x67, 0x4B, 0x3A, 0x66, 0x4A, 
   0x39, 0x65, 0x49, 0x38, 0x66, 0x4A, 0x39, 0x66, 0x4A, 0x39, 0x66, 0x4A, 0x39, 0x66, 0x4A, 0x39, 
   0x67, 0x4A, 0x3A, 0x67, 0x4A, 0x3B, 0xF9, 0xE8, 0xE5, 0xF8, 0xE7, 0xE4, 0xF7, 0xE6, 0xE3, 0xF7, 
   0xE6, 0xE3, 0xF8, 0xE7, 0xE4, 0xF8, 0xE7, 0xE4, 0xF8, 0xE7, 0xE5, 0xF8, 0xE8, 0xE7, 0xF9, 0xE8, 
   0xE3, 0xF8, 0xE8, 0xE1, 0xF4, 0xE8, 0xE0, 0xEE, 0xE9, 0xE2, 0xC7, 0xC7, 0xC3, 0x5D, 0x68, 0x67, 
   0x4F, 0x5C, 0x5C, 0x6E, 0x74, 0x75, 0x92, 0x93, 0x95, 0x5B, 0x57, 0x59, 0x55, 0x4D, 0x50, 0x88, 
   0x79, 0x7C, 0xD0, 0xB2, 0xB5, 0xDA, 0xBE, 0xBE, 0xFC, 0xE3, 0xE2, 0xDE, 0xC3, 0xC1, 0xE1, 0xC7, 
   0xC3, 0xE5, 0xC9, 0xC5, 0xAB, 0x93, 0x8B, 0xD5, 0xBF, 0xB5, 0xDA, 0xBD, 0xB5, 0xC7, 0xA6, 0xA1, 
   0xD7, 0xB6, 0xB2, 0xE4, 0xC5, 0xC2, 0xF2, 0xD6, 0xD3, 0x96, 0x8A, 0x84, 0x93, 0x8D, 0x8C, 0x91, 
   0x90, 0x94, 0x4C, 0x51, 0x59, 0x7E, 0x86, 0x8F, 0x41, 0x4C, 0x53, 0x4F, 0x5A, 0x5F, 0x7C, 0x87, 
   0x8B, 0x95, 0xA0, 0xA4, 0x6E, 0x76, 0x7B, 0x3F, 0x46, 0x4B, 0x34, 0x38, 0x3D, 0x53, 0x58, 0x5E, 
   0x4C, 0x5C, 0x64, 0x50, 0x60, 0x68, 0x5D, 0x6B, 0x72, 0x41, 0x4B, 0x51, 0x6E, 0x77, 0x7B, 0x51, 
   0x57, 0x5B, 0x32, 0x37, 0x3C, 0x57, 0x5D, 0x62, 0x67, 0x6F, 0x73, 0xB9, 0xC3, 0xC7, 0x89, 0x94, 
   0x98, 0x5C, 0x68, 0x6C, 0x5E, 0x6A, 0x6E, 0x48, 0x59, 0x5C, 0x6F, 0x7E, 0x81, 0x51, 0x60, 0x63, 
   0x61, 0x70, 0x73, 0x52, 0x60, 0x63, 0x4B, 0x5C, 0x5F, 0x45, 0x56, 0x59, 0x4B, 0x5A, 0x5D, 0x53, 
   0x62, 0x65, 0x4F, 0x5B, 0x5F, 0x62, 0x6D, 0x71, 0x4B, 0x55, 0x59, 0x36, 0x3F, 0x43, 0x64, 0x6E, 
   0x71, 0x56, 0x60, 0x63, 0xAA, 0xB1, 0xB4, 0x4C, 0x51, 0x54, 0x4E, 0x51, 0x54, 0x4B, 0x4D, 0x50, 
   0x6D, 0x6D, 0x6F, 0xCC, 0xC7, 0xC8, 0xE2, 0xD8, 0xDA, 0xDB, 0xCC, 0xCF, 0xFF, 0xEE, 0xF1, 0xF7, 
   0xE8, 0xEB, 0xF2, 0xE5, 0xE7, 0xFA, 0xEE, 0xEC, 0xFB, 0xEE, 0xEC, 0xF8, 0xEB, 0xE9, 0xF8, 0xEB, 
   0xE9, 0xF7, 0xEA, 0xE8, 0xF7, 0xEA, 0xE8, 0xF8, 0xEB, 0xE9, 0xF8, 0xEB, 0xE9, 0xF8, 0xEB, 0xE9, 
   0xF5, 0xE8, 0xE6, 0xF9, 0xEC, 0xEA, 0xFA, 0xED, 0xEB, 0xFA, 0xEC, 0xEA, 0xFB, 0xEC, 0xEA, 0xFA, 
   0xEB, 0xE9, 0xF7, 0xE8, 0xE6, 0xF9, 0xEA, 0xE8, 0xFB, 0xEC, 0xEA, 0xF8, 0xE9, 0xE7, 0xF9, 0xEA, 
   0xEA, 0xF2, 0xE6, 0xE7, 0xBF, 0xB2, 0xB2, 0xB6, 0xA9, 0xAA, 0xA9, 0x9F, 0x9F, 0xEE, 0xE6, 0xE5, 
   0xF4, 0xEE, 0xEE, 0xF4, 0xEC, 0xEC, 0xF5, 0xED, 0xEE, 0xFB, 0xF5, 0xF5, 0xF8, 0xF1, 0xF1, 0xF4, 
   0xEC, 0xED, 0xFE, 0xF6, 0xF6, 0xD2, 0xCD, 0xCD, 0x75, 0x72, 0x71, 0x60, 0x5F, 0x5F, 0xD9, 0xDB, 
   0xDA, 0xD4, 0xD3, 0xD2, 0xB2, 0xAB, 0xAC, 0xDD, 0xD4, 0xD4, 0xFA, 0xF6, 0xF5, 0xA5, 0x9F, 0x9F, 
   0x92, 0x8A, 0x89, 0xFD, 0xF4, 0xF1, 0xF9, 0xED, 0xE9, 0xF8, 0xEA, 0xE4, 0xF8, 0xE8, 0xE3, 0xFB, 
   0xEB, 0xE8, 0xFA, 0xE9, 0xE6, 0xF8, 0xE9, 0xE8, 0xF7, 0xEB, 0xEA, 0xA5, 0x9E, 0x9F, 0x94, 0x8C, 
   0x8D, 0xD4, 0xC6, 0xC5, 0xE9, 0xD9, 0xD7, 0xE9, 0xD9, 0xD7, 0xF2, 0xE2, 0xE0, 0xF7, 0xE7, 0xE5, 
   0xF5, 0xE5, 0xE4, 0xF6, 0xE5, 0xE2, 0xF8, 0xE5, 0xE2, 0xF8, 0xE5, 0xE2, 0xF8, 0xE5, 0xE2, 0xF9, 
   0xE6, 0xE3, 0xF2, 0xDF, 0xDC, 0xEF, 0xDC, 0xD9, 0xF7, 0xE4, 0xE1, 0xF6, 0xE3, 0xE0, 0xF9, 0xE6, 
   0xE3, 0xFC, 0xE9, 0xE6, 0xF0, 0xDF, 0xDC, 0xF7, 0xE4, 0xE1, 0xF6, 0xE2, 0xDF, 0xF9, 0xE1, 0xDF, 
   0xF1, 0xDB, 0xD9, 0xE9, 0xD7, 0xD4, 0xE3, 0xD4, 0xD1, 0xEC, 0xE2, 0xDD, 0xEF, 0xE6, 0xE2, 0xF9, 
   0xEA, 0xE7, 0xF3, 0xE1, 0xDE, 0xED, 0xD9, 0xD7, 0xEB, 0xD6, 0xD4, 0xEF, 0xD9, 0xD7, 0xF0, 0xD9, 
   0xD7, 0xEE, 0xD6, 0xD4, 0xEE, 0xD2, 0xD1, 0xEE, 0xD1, 0xD0, 0xEE, 0xD0, 0xD0, 0xF2, 0xD3, 0xD2, 
   0xF1, 0xD1, 0xD0, 0xEF, 0xCD, 0xCE, 0xEE, 0xCD, 0xCA, 0xED, 0xCD, 0xC6, 0xEC, 0xCB, 0xC5, 0xEE, 
   0xCB, 0xC5, 0xEB, 0xC7, 0xC1, 0xE2, 0xBD, 0xB7, 0xDD, 0xB7, 0xB2, 0xD2, 0xAE, 0xA5, 0xCA, 0xA6, 
   0x9D, 0xBE, 0x99, 0x91, 0xB0, 0x8B, 0x83, 0xA6, 0x82, 0x79, 0x9C, 0x78, 0x6F, 0x91, 0x70, 0x66, 
   0x7F, 0x62, 0x58, 0x77, 0x5A, 0x50, 0x71, 0x53, 0x4A, 0x72, 0x55, 0x4B, 0x76, 0x58, 0x4F, 0x74, 
   0x57, 0x4D, 0x75, 0x55, 0x49, 0x74, 0x55, 0x48, 0x73, 0x54, 0x47, 0x72, 0x53, 0x46, 0x72, 0x53, 
   0x46, 0x71, 0x52, 0x45, 0x6F, 0x51, 0x44, 0x6F, 0x51, 0x44, 0x6F, 0x51, 0x44, 0x6F, 0x51, 0x44, 
   0x6F, 0x51, 0x44, 0x6E, 0x50, 0x43, 0x6D, 0x4F, 0x42, 0x6D, 0x4F, 0x42, 0x6D, 0x4F, 0x42, 0x6D, 
   0x4F, 0x42, 0x6E, 0x50, 0x43, 0x6E, 0x50, 0x43, 0x6E, 0x50, 0x43, 0x6E, 0x50, 0x43, 0x6E, 0x50, 
   0x43, 0x6E, 0x50, 0x43, 0x6E, 0x50, 0x43, 0x6D, 0x4F, 0x42, 0x6D, 0x4F, 0x42, 0x6D, 0x4F, 0x42, 
   0x6F, 0x52, 0x43, 0x6F, 0x52, 0x43, 0x6E, 0x51, 0x42, 0x6F, 0x52, 0x43, 0x6E, 0x51, 0x42, 0x6D, 
   0x50, 0x41, 0x6C, 0x4F, 0x42, 0x6F, 0x55, 0x48, 0x52, 0x3D, 0x30, 0x46, 0x35, 0x27, 0x45, 0x35, 
   0x27, 0x48, 0x37, 0x29, 0x50, 0x3A, 0x2D, 0x51, 0x33, 0x26, 0x61, 0x42, 0x35, 0x66, 0x47, 0x39, 
   0x67, 0x4A, 0x3A, 0x64, 0x47, 0x37, 0x64, 0x48, 0x35, 0x63, 0x47, 0x35, 0x63, 0x47, 0x36, 0x63, 
   0x47, 0x36, 0x64, 0x48, 0x37, 0x65, 0x49, 0x38, 0x66, 0x4A, 0x39, 0x67, 0x4B, 0x3A, 0x67, 0x4B, 
   0x3A, 0x65, 0x49, 0x38, 0x66, 0x4A, 0x39, 0x67, 0x4B, 0x3A, 0x68, 0x4C, 0x3B, 0x68, 0x4C, 0x3B, 
   0x68, 0x4B, 0x3B, 0x66, 0x49, 0x3B, 0xF8, 0xE7, 0xE4, 0xF8, 0xE7, 0xE4, 0xF8, 0xE7, 0xE4, 0xF8, 
   0xE7, 0xE4, 0xF8, 0xE7, 0xE4, 0xF8, 0xE7, 0xE4, 0xF8, 0xE7, 0xE5, 0xFA, 0xE9, 0xE8, 0xF5, 0xE5, 
   0xE0, 0xF7, 0xE8, 0xE1, 0xEF, 0xE4, 0xDC, 0xE6, 0xE4, 0xDD, 0x92, 0x96, 0x92, 0x51, 0x5C, 0x5B, 
   0x50, 0x5C, 0x5C, 0x47, 0x4E, 0x4E, 0x47, 0x48, 0x4A, 0x79, 0x76, 0x78, 0x52, 0x4B, 0x4E, 0x98, 
   0x87, 0x89, 0xE4, 0xC3, 0xC3, 0xEC, 0xCB, 0xCA, 0xF2, 0xD1, 0xCF, 0xE6, 0xC6, 0xC3, 0xF1, 0xD2, 
   0xCC, 0xF1, 0xD3, 0xCD, 0xEA, 0xD0, 0xC5, 0xEC, 0xD1, 0xC5, 0xD7, 0xB8, 0xAF, 0xD5, 0xB2, 0xAB, 
   0xEA, 0xC7, 0xC1, 0xF2, 0xD4, 0xCE, 0xE7, 0xCB, 0xC5, 0xE8, 0xD6, 0xD0, 0xD4, 0xC9, 0xC7, 0x62, 
   0x61, 0x64, 0x46, 0x4C, 0x53, 0x47, 0x50, 0x59, 0x3E, 0x48, 0x4F, 0x5E, 0x68, 0x6E, 0x46, 0x51, 
   0x55, 0x69, 0x74, 0x78, 0x74, 0x7C, 0x80, 0x57, 0x5C, 0x61, 0x3B, 0x3F, 0x44, 0x63, 0x68, 0x6D, 
   0x4C, 0x5B, 0x64, 0x52, 0x60, 0x6A, 0x51, 0x5F, 0x66, 0x53, 0x5D, 0x64, 0x54, 0x5D, 0x61, 0x37, 
   0x3D, 0x42, 0x38, 0x3F, 0x44, 0x4D, 0x53, 0x58, 0x57, 0x60, 0x64, 0xB0, 0xBB, 0xBE, 0x45, 0x51, 
   0x55, 0x66, 0x72, 0x76, 0x4F, 0x5B, 0x5F, 0x5D, 0x6B, 0x6F, 0x4C, 0x5A, 0x5E, 0x3A, 0x49, 0x4C, 
   0x55, 0x64, 0x67, 0x44, 0x53, 0x56, 0x46, 0x54, 0x57, 0x4E, 0x5C, 0x60, 0x4B, 0x5A, 0x5D, 0x53, 
   0x62, 0x65, 0x4D, 0x59, 0x5C, 0x58, 0x63, 0x67, 0x53, 0x5D, 0x61, 0x3B, 0x45, 0x49, 0x49, 0x58, 
   0x5A, 0x5C, 0x69, 0x6B, 0x72, 0x7B, 0x7E, 0x45, 0x4B, 0x4E, 0x46, 0x46, 0x4A, 0x3A, 0x37, 0x3B, 
   0x8E, 0x8A, 0x8D, 0xF6, 0xF0, 0xF1, 0xF6, 0xEB, 0xED, 0xF9, 0xE7, 0xEB, 0xFA, 0xE8, 0xEB, 0xF4, 
   0xE3, 0xE6, 0xFD, 0xEF, 0xF1, 0xF9, 0xEC, 0xEB, 0xF8, 0xEB, 0xE9, 0xFB, 0xEE, 0xEC, 0xF8, 0xEB, 
   0xE9, 0xF6, 0xE9, 0xE7, 0xF9, 0xEC, 0xEA, 0xF8, 0xEB, 0xE9, 0xFB, 0xEE, 0xEC, 0xF7, 0xEA, 0xE8, 
   0xF9, 0xEC, 0xEA, 0xFB, 0xEE, 0xEC, 0xF8, 0xEB, 0xE9, 0xF9, 0xEC, 0xEA, 0xFA, 0xEB, 0xE9, 0xF9, 
   0xEA, 0xE8, 0xF8, 0xE9, 0xE7, 0xF9, 0xEA, 0xE8, 0xF6, 0xE7, 0xE5, 0xF8, 0xEA, 0xE8, 0xFA, 0xEB, 
   0xEA, 0xE8, 0xD9, 0xDA, 0xC4, 0xB5, 0xB6, 0xB7, 0xA9, 0xAA, 0xCE, 0xC3, 0xC3, 0xFC, 0xF7, 0xF7, 
   0xF2, 0xE9, 0xE9, 0xF6, 0xF0, 0xF1, 0xF6, 0xF0, 0xF1, 0xD4, 0xCD, 0xCE, 0xF1, 0xEB, 0xEC, 0xFF, 
   0xFC, 0xFD, 0xD2, 0xCB, 0xCC, 0x47, 0x42, 0x43, 0x57, 0x55, 0x55, 0x68, 0x69, 0x69, 0xD0, 0xD4, 
   0xD4, 0x55, 0x54, 0x54, 0xB0, 0xAB, 0xAD, 0xCA, 0xC3, 0xC4, 0x9D, 0x9B, 0x99, 0x57, 0x54, 0x53, 
   0xAA, 0xA7, 0xA5, 0xFB, 0xF5, 0xF1, 0xF5, 0xE9, 0xE5, 0xF5, 0xE8, 0xE2, 0xF6, 0xE7, 0xE3, 0xF7, 
   0xE9, 0xE6, 0xF2, 0xE5, 0xE3, 0xFD, 0xF4, 0xF3, 0xA7, 0xA1, 0xA0, 0x39, 0x36, 0x36, 0x83, 0x80, 
   0x80, 0x8D, 0x7E, 0x7C, 0xED, 0xE0, 0xDD, 0xF3, 0xE4, 0xE2, 0xF4, 0xE7, 0xE5, 0xF3, 0xE3, 0xE1, 
   0xF1, 0xE3, 0xE1, 0xF5, 0xE4, 0xE1, 0xF8, 0xE5, 0xE2, 0xF8, 0xE5, 0xE2, 0xF8, 0xE5, 0xE2, 0xF3, 
   0xE0, 0xDD, 0xEE, 0xDB, 0xD8, 0xF1, 0xDE, 0xDB, 0xF8, 0xE5, 0xE2, 0xF8, 0xE5, 0xE2, 0xF8, 0xE5, 
   0xE2, 0xF7, 0xE4, 0xE1, 0xE5, 0xD2, 0xCF, 0xF4, 0xE1, 0xDE, 0xF9, 0xE6, 0xE3, 0xF7, 0xE1, 0xDF, 
   0xF8, 0xE2, 0xE0, 0xF8, 0xE4, 0xE1, 0xF6, 0xE3, 0xE1, 0xF0, 0xE0, 0xDD, 0xF3, 0xE3, 0xE0, 0xF0, 
   0xDD, 0xDA, 0xED, 0xD8, 0xD6, 0xF0, 0xDB, 0xD9, 0xF2, 0xDB, 0xD9, 0xEF, 0xD6, 0xD4, 0xF0, 0xD6, 
   0xD4, 0xF0, 0xD4, 0xD3, 0xEE, 0xD1, 0xD1, 0xEE, 0xD1, 0xD0, 0xEE, 0xD0, 0xCF, 0xEF, 0xD0, 0xCF, 
   0xEF, 0xCE, 0xCE, 0xEE, 0xCB, 0xCC, 0xEC, 0xCC, 0xC9, 0xE9, 0xCB, 0xC4, 0xEB, 0xCA, 0xC4, 0xEF, 
   0xCD, 0xC7, 0xEE, 0xCA, 0xC4, 0xEB, 0xC5, 0xC0, 0xE9, 0xC3, 0xBE, 0xE6, 0xC0, 0xB8, 0xE2, 0xBC, 
   0xB4, 0xDA, 0xB4, 0xAC, 0xCE, 0xA8, 0xA0, 0xC3, 0x9D, 0x95, 0xB3, 0x8D, 0x85, 0xA7, 0x83, 0x7B, 
   0x95, 0x74, 0x6B, 0x8A, 0x69, 0x60, 0x7E, 0x5C, 0x54, 0x7A, 0x58, 0x50, 0x77, 0x56, 0x4D, 0x75, 
   0x53, 0x4B, 0x75, 0x55, 0x48, 0x76, 0x56, 0x49, 0x76, 0x56, 0x49, 0x74, 0x54, 0x47, 0x73, 0x53, 
   0x46, 0x73, 0x52, 0x45, 0x70, 0x51, 0x44, 0x70, 0x52, 0x45, 0x6F, 0x51, 0x44, 0x6F, 0x51, 0x44, 
   0x6F, 0x51, 0x44, 0x6E, 0x50, 0x43, 0x6D, 0x4F, 0x42, 0x6E, 0x50, 0x43, 0x6E, 0x50, 0x43, 0x6E, 
   0x50, 0x43, 0x6E, 0x50, 0x43, 0x6E, 0x50, 0x43, 0x6E, 0x50, 0x43, 0x6E, 0x50, 0x43, 0x6E, 0x50, 
   0x43, 0x6E, 0x50, 0x43, 0x6E, 0x50, 0x43, 0x6D, 0x4F, 0x42, 0x6D, 0x4F, 0x42, 0x6D, 0x4F, 0x42, 
   0x6C, 0x4F, 0x40, 0x67, 0x4A, 0x3B, 0x6A, 0x4D, 0x3E, 0x6F, 0x52, 0x43, 0x6F, 0x52, 0x43, 0x70, 
   0x53, 0x44, 0x70, 0x52, 0x46, 0x6E, 0x51, 0x47, 0x3C, 0x25, 0x19, 0x36, 0x25, 0x18, 0x3D, 0x2C, 
   0x1F, 0x39, 0x25, 0x19, 0x41, 0x28, 0x1D, 0x56, 0x39, 0x2C, 0x61, 0x44, 0x37, 0x5F, 0x43, 0x34, 
   0x63, 0x47, 0x38, 0x61, 0x46, 0x36, 0x61, 0x47, 0x35, 0x63, 0x48, 0x36, 0x64, 0x48, 0x37, 0x64, 
   0x48, 0x37, 0x64, 0x48, 0x37, 0x65, 0x49, 0x38, 0x66, 0x4A, 0x39, 0x67, 0x4B, 0x3A, 0x67, 0x4B, 
   0x3A, 0x65, 0x49, 0x38, 0x66, 0x4A, 0x39, 0x67, 0x4B, 0x3A, 0x66, 0x4A, 0x39, 0x66, 0x4A, 0x39, 
   0x67, 0x4A, 0x3A, 0x66, 0x49, 0x3A, 0xF7, 0xE6, 0xE3, 0xF8, 0xE7, 0xE4, 0xF9, 0xE8, 0xE5, 0xF9, 
   0xE8, 0xE5, 0xF8, 0xE7, 0xE4, 0xF8, 0xE7, 0xE4, 0xF8, 0xE6, 0xE5, 0xFA, 0xE8, 0xE7, 0xF5, 0xE4, 
   0xDF, 0xF0, 0xE3, 0xDB, 0xF5, 0xEC, 0xE3, 0xBF, 0xBE, 0xB7, 0x49, 0x4D, 0x49, 0x3D, 0x46, 0x46, 
   0x51, 0x5C, 0x5C, 0x45, 0x4C, 0x4C, 0x49, 0x4B, 0x4C, 0x6E, 0x6A, 0x6C, 0x63, 0x5D, 0x60, 0xB9, 
   0xAA, 0xAC, 0xEB, 0xCD, 0xC9, 0xEC, 0xCE, 0xCA, 0xEA, 0xCC, 0xC7, 0xEE, 0xD0, 0xCB, 0xED, 0xD3, 
   0xCA, 0xF1, 0xD8, 0xCF, 0xEC, 0xD2, 0xC4, 0xEC, 0xCD, 0xBF, 0xE1, 0xBF, 0xB5, 0xE5, 0xC2, 0xB8, 
   0xF0, 0xCE, 0xC6, 0xF4, 0xD7, 0xD0, 0xF7, 0xDC, 0xD4, 0xF8, 0xE5, 0xDD, 0xBA, 0xAD, 0xA9, 0x78, 
   0x76, 0x78, 0x4A, 0x50, 0x57, 0x35, 0x3E, 0x47, 0x4F, 0x58, 0x61, 0x4F, 0x5A, 0x5F, 0x66, 0x70, 
   0x74, 0x47, 0x50, 0x54, 0x70, 0x77, 0x7B, 0xB3, 0xB8, 0xBC, 0x4D, 0x50, 0x55, 0x48, 0x4C, 0x52, 
   0x4B, 0x5B, 0x64, 0x4A, 0x59, 0x62, 0x4B, 0x58, 0x60, 0x5F, 0x69, 0x70, 0x54, 0x5B, 0x62, 0x41, 
   0x47, 0x4C, 0x37, 0x3E, 0x42, 0x58, 0x62, 0x66, 0xA4, 0xAD, 0xB1, 0x8C, 0x97, 0x9B, 0x49, 0x55, 
   0x59, 0x5C, 0x67, 0x6B, 0x66, 0x72, 0x76, 0x78, 0x84, 0x88, 0x29, 0x36, 0x3A, 0x4E, 0x5E, 0x60, 
   0x42, 0x51, 0x54, 0x3B, 0x49, 0x4C, 0x42, 0x4D, 0x51, 0x46, 0x54, 0x57, 0x4E, 0x5D, 0x60, 0x4E, 
   0x5E, 0x61, 0x4D, 0x59, 0x5D, 0x5C, 0x67, 0x6B, 0x5D, 0x67, 0x6B, 0x4B, 0x55, 0x59, 0x4B, 0x5F, 
   0x60, 0x50, 0x61, 0x62, 0x43, 0x4E, 0x50, 0x47, 0x4B, 0x4F, 0x3D, 0x3B, 0x3F, 0x51, 0x49, 0x4F, 
   0xC4, 0xBD, 0xC1, 0xF8, 0xF2, 0xF3, 0xF1, 0xE6, 0xE8, 0xFE, 0xEF, 0xF2, 0xF7, 0xE2, 0xE5, 0xF6, 
   0xE3, 0xE6, 0xF3, 0xE1, 0xE4, 0xF6, 0xEA, 0xE8, 0xF8, 0xEC, 0xE9, 0xF6, 0xE9, 0xE7, 0xF6, 0xE9, 
   0xE7, 0xF9, 0xEC, 0xEA, 0xFA, 0xED, 0xEB, 0xF9, 0xEC, 0xEA, 0xFB, 0xEE, 0xEC, 0xF8, 0xEB, 0xE9, 
   0xFA, 0xED, 0xEB, 0xF8, 0xEB, 0xE9, 0xF6, 0xE9, 0xE7, 0xF8, 0xEA, 0xE8, 0xF9, 0xEA, 0xE8, 0xF9, 
   0xEA, 0xE8, 0xF9, 0xEA, 0xE8, 0xF9, 0xEA, 0xE8, 0xFA, 0xEB, 0xE9, 0xF6, 0xE7, 0xE5, 0xEB, 0xDC, 
   0xDC, 0xF2, 0xE4, 0xE6, 0xCB, 0xBA, 0xBB, 0xD6, 0xC8, 0xC9, 0xED, 0xE0, 0xE1, 0xF8, 0xF0, 0xEF, 
   0xF9, 0xED, 0xED, 0xF3, 0xED, 0xEE, 0xD3, 0xCE, 0xCF, 0x9E, 0x99, 0x9A, 0xF0, 0xED, 0xEE, 0xC5, 
   0xC1, 0xC2, 0x8B, 0x84, 0x86, 0x54, 0x50, 0x50, 0x6E, 0x6D, 0x6D, 0x97, 0x99, 0x99, 0x75, 0x7A, 
   0x79, 0x96, 0x97, 0x97, 0xD4, 0xD1, 0xD2, 0xC2, 0xBD, 0xBD, 0xA0, 0xA2, 0x9F, 0x74, 0x73, 0x72, 
   0xE2, 0xDF, 0xDD, 0xFA, 0xF3, 0xEF, 0xF5, 0xEA, 0xE6, 0xF4, 0xE8, 0xE2, 0xF4, 0xE8, 0xE3, 0xF5, 
   0xEB, 0xE8, 0xF7, 0xEE, 0xEC, 0xFB, 0xF4, 0xF4, 0x80, 0x7E, 0x7D, 0x3B, 0x3C, 0x3C, 0x39, 0x3B, 
   0x3B, 0xB8, 0xAC, 0xAA, 0xFF, 0xF7, 0xF4, 0xF4, 0xE6, 0xE4, 0xF5, 0xE6, 0xE4, 0xF3, 0xE5, 0xE3, 
   0xF2, 0xE4, 0xE2, 0xF5, 0xE4, 0xE2, 0xF8, 0xE5, 0xE2, 0xF8, 0xE5, 0xE2, 0xF8, 0xE5, 0xE2, 0xF0, 
   0xDD, 0xDA, 0xF2, 0xDF, 0xDC, 0xF7, 0xE4, 0xE1, 0xF7, 0xE4, 0xE1, 0xFC, 0xE9, 0xE6, 0xF7, 0xE4, 
   0xE1, 0xF5, 0xE2, 0xDF, 0xF9, 0xE6, 0xE3, 0xFC, 0xE9, 0xE6, 0xF7, 0xE4, 0xE1, 0xF4, 0xDF, 0xDD, 
   0xF5, 0xE1, 0xDF, 0xF4, 0xDF, 0xDD, 0xF2, 0xDD, 0xDB, 0xF3, 0xDD, 0xDB, 0xF1, 0xDB, 0xD9, 0xF2, 
   0xDB, 0xD9, 0xF2, 0xDB, 0xD9, 0xF0, 0xD8, 0xD6, 0xF0, 0xD7, 0xD5, 0xF0, 0xD5, 0xD4, 0xF1, 0xD2, 
   0xD1, 0xEF, 0xD2, 0xD1, 0xEF, 0xD2, 0xD1, 0xEF, 0xD1, 0xD0, 0xEF, 0xD0, 0xCF, 0xEC, 0xCD, 0xCC, 
   0xEC, 0xCB, 0xCB, 0xED, 0xC9, 0xCA, 0xEB, 0xCC, 0xC9, 0xE9, 0xCD, 0xC5, 0xEA, 0xCA, 0xC4, 0xEB, 
   0xCB, 0xC5, 0xEE, 0xCA, 0xC5, 0xED, 0xC7, 0xC2, 0xEC, 0xC6, 0xC0, 0xEE, 0xC6, 0xBF, 0xED, 0xC5, 
   0xBE, 0xE9, 0xC2, 0xBA, 0xE3, 0xBB, 0xB4, 0xDA, 0xB3, 0xAC, 0xCC, 0xA5, 0x9E, 0xC0, 0x9B, 0x93, 
   0xAF, 0x8A, 0x83, 0xA5, 0x80, 0x79, 0x99, 0x74, 0x6D, 0x8E, 0x69, 0x62, 0x7E, 0x59, 0x53, 0x77, 
   0x53, 0x4B, 0x74, 0x54, 0x47, 0x74, 0x55, 0x48, 0x75, 0x55, 0x48, 0x75, 0x55, 0x48, 0x74, 0x54, 
   0x47, 0x73, 0x53, 0x46, 0x71, 0x52, 0x45, 0x70, 0x52, 0x45, 0x70, 0x52, 0x45, 0x6F, 0x51, 0x44, 
   0x6F, 0x51, 0x44, 0x6E, 0x50, 0x43, 0x6D, 0x4F, 0x42, 0x6F, 0x51, 0x44, 0x6F, 0x51, 0x44, 0x6F, 
   0x51, 0x44, 0x6E, 0x50, 0x43, 0x6E, 0x50, 0x43, 0x6E, 0x50, 0x43, 0x6E, 0x50, 0x43, 0x6E, 0x50, 
   0x43, 0x6E, 0x50, 0x43, 0x6E, 0x50, 0x43, 0x6D, 0x4F, 0x42, 0x6D, 0x4F, 0x42, 0x6E, 0x50, 0x42, 
   0x6D, 0x50, 0x41, 0x68, 0x4B, 0x3C, 0x6D, 0x50, 0x41, 0x6E, 0x51, 0x42, 0x6D, 0x50, 0x41, 0x72, 
   0x56, 0x46, 0x72, 0x52, 0x46, 0x53, 0x33, 0x2A, 0x4B, 0x32, 0x27, 0x46, 0x31, 0x25, 0x45, 0x31, 
   0x25, 0x43, 0x2D, 0x21, 0x56, 0x3A, 0x30, 0x65, 0x4A, 0x3D, 0x62, 0x47, 0x39, 0x60, 0x45, 0x36, 
   0x61, 0x48, 0x37, 0x60, 0x47, 0x36, 0x61, 0x48, 0x36, 0x64, 0x4A, 0x37, 0x65, 0x49, 0x38, 0x65, 
   0x49, 0x38, 0x65, 0x49, 0x38, 0x65, 0x49, 0x38, 0x66, 0x4A, 0x39, 0x67, 0x4B, 0x3A, 0x67, 0x4B, 
   0x3A, 0x65, 0x49, 0x38, 0x66, 0x4A, 0x39, 0x65, 0x49, 0x38, 0x64, 0x48, 0x37, 0x64, 0x48, 0x37, 
   0x65, 0x48, 0x38, 0x66, 0x49, 0x3A, 0xF6, 0xE6, 0xE3, 0xF8, 0xE7, 0xE4, 0xF9, 0xE8, 0xE5, 0xF9, 
   0xE8, 0xE5, 0xF8, 0xE7, 0xE4, 0xF8, 0xE7, 0xE4, 0xF8, 0xE6, 0xE5, 0xFA, 0xE8, 0xE7, 0xF7, 0xE6, 
   0xE2, 0xF2, 0xE4, 0xDC, 0xF5, 0xEA, 0xE2, 0x81, 0x80, 0x79, 0x4E, 0x51, 0x4D, 0x3C, 0x44, 0x43, 
   0x48, 0x50, 0x50, 0x42, 0x47, 0x48, 0x41, 0x43, 0x45, 0x41, 0x40, 0x42, 0x6D, 0x6A, 0x6C, 0xD1, 
   0xC6, 0xC8, 0xE8, 0xD2, 0xCD, 0xE8, 0xD1, 0xCB, 0xE3, 0xCC, 0xC6, 0xFA, 0xE5, 0xDE, 0xE9, 0xD3, 
   0xC9, 0xE6, 0xD4, 0xC9, 0xEA, 0xCF, 0xC3, 0xE7, 0xC7, 0xBB, 0xE9, 0xC6, 0xBA, 0xE9, 0xC5, 0xBB, 
   0xF4, 0xD3, 0xCA, 0xF6, 0xDC, 0xD3, 0xF6, 0xDC, 0xD5, 0xF5, 0xE0, 0xD7, 0xE8, 0xDE, 0xD8, 0x85, 
   0x82, 0x82, 0x94, 0x99, 0xA0, 0x6D, 0x75, 0x7E, 0x46, 0x4D, 0x57, 0x87, 0x8F, 0x96, 0x92, 0x9B, 
   0x9D, 0x45, 0x4D, 0x51, 0x9C, 0xA2, 0xA7, 0xC5, 0xCA, 0xCF, 0x8B, 0x8E, 0x93, 0x40, 0x44, 0x4A, 
   0x44, 0x52, 0x5A, 0x4C, 0x5A, 0x64, 0x4B, 0x57, 0x61, 0x66, 0x6F, 0x78, 0x60, 0x67, 0x6F, 0x46, 
   0x4C, 0x52, 0x55, 0x5D, 0x61, 0xB2, 0xBB, 0xBF, 0xB0, 0xB9, 0xBC, 0x52, 0x5C, 0x60, 0x48, 0x53, 
   0x57, 0x6E, 0x7B, 0x7F, 0x6F, 0x7D, 0x80, 0x61, 0x6A, 0x6E, 0x37, 0x41, 0x45, 0x4F, 0x5D, 0x60, 
   0x3F, 0x4E, 0x51, 0x3B, 0x47, 0x4A, 0x4D, 0x58, 0x5C, 0x60, 0x6C, 0x70, 0x5D, 0x6B, 0x6D, 0x42, 
   0x50, 0x53, 0x50, 0x5B, 0x5F, 0x78, 0x84, 0x88, 0x6C, 0x76, 0x7A, 0x4D, 0x58, 0x5C, 0x4B, 0x62, 
   0x63, 0x55, 0x68, 0x69, 0x46, 0x52, 0x55, 0x4A, 0x4E, 0x52, 0x48, 0x42, 0x47, 0xA9, 0x9C, 0xA3, 
   0xFF, 0xF9, 0xFC, 0xEE, 0xE8, 0xE8, 0xF8, 0xEC, 0xEE, 0xF9, 0xE8, 0xEA, 0xF8, 0xE3, 0xE6, 0xFA, 
   0xE6, 0xE9, 0xFA, 0xEB, 0xEE, 0xF2, 0xE8, 0xE7, 0xDA, 0xCD, 0xCA, 0xFC, 0xEF, 0xED, 0xF6, 0xEA, 
   0xE8, 0xFB, 0xEE, 0xEC, 0xFA, 0xED, 0xEB, 0xFB, 0xEE, 0xEC, 0xF9, 0xEB, 0xE9, 0xF9, 0xEC, 0xEA, 
   0xF9, 0xEC, 0xEA, 0xF5, 0xE8, 0xE6, 0xF6, 0xE9, 0xE7, 0xF6, 0xE9, 0xE7, 0xF8, 0xEA, 0xE8, 0xF9, 
   0xEA, 0xE8, 0xF9, 0xEA, 0xE8, 0xFA, 0xEB, 0xE9, 0xF2, 0xE3, 0xE1, 0xF3, 0xE4, 0xE2, 0xF3, 0xE4, 
   0xE2, 0xF6, 0xE5, 0xE5, 0xCE, 0xBE, 0xBE, 0xEC, 0xDD, 0xDD, 0xF9, 0xED, 0xED, 0xF6, 0xEA, 0xEA, 
   0xFE, 0xF4, 0xF4, 0xD3, 0xCC, 0xCD, 0xA9, 0xA3, 0xA4, 0xDA, 0xD7, 0xD8, 0x9C, 0x98, 0x99, 0x61, 
   0x5A, 0x5B, 0x4F, 0x49, 0x4A, 0x44, 0x40, 0x40, 0x35, 0x34, 0x34, 0x5A, 0x5C, 0x5D, 0x37, 0x3B, 
   0x3B, 0x93, 0x94, 0x94, 0xD8, 0xD6, 0xD7, 0xAA, 0xA5, 0xA7, 0x88, 0x8A, 0x88, 0x97, 0x98, 0x97, 
   0xF2, 0xEF, 0xED, 0xF3, 0xEF, 0xEB, 0xFA, 0xEF, 0xEB, 0xF3, 0xE6, 0xE0, 0xF3, 0xE7, 0xE3, 0xF9, 
   0xF0, 0xEE, 0xB3, 0xAC, 0xA9, 0x82, 0x7F, 0x7E, 0x61, 0x62, 0x62, 0x39, 0x3C, 0x3D, 0x62, 0x65, 
   0x66, 0xF4, 0xEE, 0xEC, 0xF4, 0xE8, 0xE6, 0xF5, 0xE8, 0xE6, 0xF4, 0xE7, 0xE5, 0xF0, 0xE3, 0xE1, 
   0xEF, 0xE2, 0xE0, 0xF3, 0xE3, 0xE1, 0xFA, 0xE6, 0xE4, 0xF9, 0xE6, 0xE4, 0xF9, 0xE6, 0xE4, 0xF6, 
   0xE3, 0xE0, 0xF1, 0xDE, 0xDB, 0xF7, 0xE4, 0xE1, 0xFB, 0xE8, 0xE5, 0xF0, 0xDD, 0xDA, 0xFC, 0xE9, 
   0xE6, 0xFD, 0xE9, 0xE7, 0xF8, 0xE5, 0xE2, 0xF7, 0xE4, 0xE1, 0xF8, 0xE3, 0xE1, 0xF8, 0xE2, 0xE0, 
   0xF4, 0xDE, 0xDC, 0xF2, 0xDB, 0xD9, 0xF4, 0xDD, 0xDB, 0xF4, 0xDB, 0xD9, 0xF6, 0xDD, 0xDA, 0xF3, 
   0xD9, 0xD7, 0xED, 0xD3, 0xD0, 0xEF, 0xD4, 0xD2, 0xF2, 0xD5, 0xD3, 0xF2, 0xD3, 0xD2, 0xEF, 0xD0, 
   0xCF, 0xEF, 0xD0, 0xCF, 0xED, 0xCF, 0xCE, 0xED, 0xCE, 0xCD, 0xEC, 0xCD, 0xCC, 0xED, 0xCD, 0xCC, 
   0xED, 0xCC, 0xCB, 0xEE, 0xCB, 0xCC, 0xEC, 0xCC, 0xC8, 0xEA, 0xCE, 0xC7, 0xEC, 0xCE, 0xC7, 0xEB, 
   0xCA, 0xC4, 0xEC, 0xC9, 0xC3, 0xEC, 0xC7, 0xC2, 0xEB, 0xC6, 0xC1, 0xED, 0xC5, 0xC0, 0xEE, 0xC6, 
   0xC1, 0xED, 0xC5, 0xC0, 0xE8, 0xC0, 0xBB, 0xE7, 0xBF, 0xBA, 0xE2, 0xBB, 0xB6, 0xD9, 0xB3, 0xAE, 
   0xC8, 0xA3, 0x9E, 0xBD, 0x97, 0x92, 0xB1, 0x8B, 0x86, 0xA9, 0x83, 0x7E, 0x99, 0x72, 0x6D, 0x8A, 
   0x64, 0x5E, 0x80, 0x5E, 0x53, 0x7A, 0x5A, 0x4D, 0x76, 0x56, 0x4A, 0x75, 0x55, 0x48, 0x74, 0x54, 
   0x47, 0x73, 0x53, 0x46, 0x71, 0x52, 0x45, 0x70, 0x52, 0x45, 0x71, 0x53, 0x46, 0x6F, 0x51, 0x44, 
   0x6F, 0x51, 0x44, 0x6E, 0x50, 0x43, 0x6D, 0x4F, 0x42, 0x6F, 0x51, 0x44, 0x6F, 0x51, 0x44, 0x6F, 
   0x51, 0x44, 0x6E, 0x50, 0x43, 0x6E, 0x50, 0x43, 0x6E, 0x50, 0x43, 0x6E, 0x50, 0x43, 0x6E, 0x50, 
   0x43, 0x6E, 0x50, 0x43, 0x6E, 0x50, 0x43, 0x6D, 0x4F, 0x42, 0x6D, 0x4F, 0x42, 0x6D, 0x4F, 0x41, 
   0x6D, 0x50, 0x41, 0x70, 0x53, 0x44, 0x6F, 0x52, 0x43, 0x6E, 0x51, 0x42, 0x6D, 0x50, 0x41, 0x6F, 
   0x53, 0x43, 0x6A, 0x4A, 0x3E, 0x62, 0x41, 0x38, 0x66, 0x4A, 0x40, 0x63, 0x4B, 0x40, 0x56, 0x3F, 
   0x34, 0x58, 0x3E, 0x34, 0x5F, 0x44, 0x39, 0x62, 0x48, 0x3A, 0x62, 0x48, 0x3A, 0x63, 0x4A, 0x3A, 
   0x61, 0x48, 0x37, 0x61, 0x49, 0x37, 0x63, 0x4B, 0x38, 0x65, 0x4B, 0x39, 0x66, 0x4A, 0x39, 0x66, 
   0x4A, 0x39, 0x66, 0x4A, 0x39, 0x65, 0x49, 0x38, 0x66, 0x4A, 0x39, 0x67, 0x4B, 0x3A, 0x67, 0x4B, 
   0x39, 0x65, 0x49, 0x38, 0x66, 0x4A, 0x39, 0x66, 0x4A, 0x39, 0x65, 0x49, 0x38, 0x65, 0x49, 0x38, 
   0x65, 0x48, 0x38, 0x65, 0x48, 0x3A, 0xF0, 0xE7, 0xE2, 0xF4, 0xE8, 0xE4, 0xFB, 0xE8, 0xE6, 0xFB, 
   0xE5, 0xE4, 0xFA, 0xE5, 0xE4, 0xFB, 0xE6, 0xE8, 0xF4, 0xE4, 0xE2, 0xF3, 0xE6, 0xE0, 0xF8, 0xE7, 
   0xE2, 0xF5, 0xE3, 0xE0, 0xD3, 0xC4, 0xC1, 0x5A, 0x55, 0x51, 0x3D, 0x3F, 0x3C, 0x42, 0x49, 0x46, 
   0x34, 0x3B, 0x38, 0x3B, 0x40, 0x43, 0x42, 0x46, 0x4A, 0x4D, 0x51, 0x56, 0x52, 0x58, 0x5A, 0xC2, 
   0xC0, 0xC3, 0xF5, 0xE4, 0xEB, 0xE9, 0xDD, 0xE2, 0xDC, 0xD5, 0xD6, 0xE5, 0xDB, 0xDB, 0xEF, 0xD8, 
   0xD8, 0xF2, 0xD3, 0xD2, 0xE8, 0xC9, 0xCC, 0xE5, 0xC8, 0xC7, 0xEC, 0xC9, 0xC3, 0xF0, 0xCC, 0xC2, 
   0xF1, 0xD0, 0xC8, 0xF3, 0xD6, 0xD3, 0xF1, 0xD7, 0xD6, 0xF6, 0xE1, 0xD6, 0xE8, 0xD9, 0xD0, 0x68, 
   0x62, 0x5E, 0x4F, 0x4D, 0x4F, 0x70, 0x6D, 0x74, 0x5F, 0x57, 0x66, 0xC6, 0xC6, 0xCF, 0xA7, 0xAD, 
   0xAF, 0x49, 0x4C, 0x52, 0x72, 0x75, 0x7D, 0x47, 0x49, 0x52, 0x6F, 0x70, 0x7A, 0x48, 0x48, 0x52, 
   0x3F, 0x42, 0x4D, 0x56, 0x5B, 0x6A, 0x48, 0x51, 0x5F, 0x77, 0x80, 0x8E, 0x82, 0x88, 0x92, 0x62, 
   0x66, 0x6C, 0x94, 0x97, 0x9C, 0xE6, 0xEA, 0xEF, 0x62, 0x68, 0x6D, 0x70, 0x77, 0x7C, 0x54, 0x5E, 
   0x62, 0x96, 0xA1, 0xA5, 0xC9, 0xD3, 0xD7, 0x8A, 0x85, 0x8A, 0x56, 0x54, 0x59, 0x6C, 0x72, 0x75, 
   0x7B, 0x88, 0x8A, 0x62, 0x6F, 0x71, 0x45, 0x50, 0x53, 0x65, 0x6C, 0x6E, 0x5F, 0x64, 0x64, 0x5A, 
   0x5F, 0x60, 0x5A, 0x60, 0x64, 0x5F, 0x69, 0x6D, 0x68, 0x75, 0x7A, 0x42, 0x53, 0x59, 0x65, 0x7B, 
   0x83, 0x5A, 0x6B, 0x72, 0x4C, 0x58, 0x5D, 0x58, 0x5A, 0x5E, 0xB7, 0xB2, 0xB4, 0xF4, 0xEA, 0xEC, 
   0xF9, 0xEA, 0xEA, 0xF8, 0xE9, 0xE7, 0xF9, 0xEA, 0xE8, 0xF6, 0xE7, 0xE5, 0xFA, 0xEB, 0xE9, 0xFC, 
   0xED, 0xEB, 0xFF, 0xF5, 0xF3, 0xDA, 0xCF, 0xCD, 0xDA, 0xCF, 0xCD, 0xFD, 0xF1, 0xEF, 0xF7, 0xEA, 
   0xE8, 0xF8, 0xEC, 0xEA, 0xF8, 0xEC, 0xEA, 0xFA, 0xEC, 0xEA, 0xFB, 0xEC, 0xEA, 0xFA, 0xEB, 0xE9, 
   0xF9, 0xEA, 0xE8, 0xF9, 0xEA, 0xE8, 0xF8, 0xE9, 0xE7, 0xF7, 0xE8, 0xE6, 0xF7, 0xE8, 0xE6, 0xF8, 
   0xE9, 0xE7, 0xF7, 0xE8, 0xE6, 0xF5, 0xE6, 0xE4, 0xEC, 0xDD, 0xDB, 0xF1, 0xE2, 0xE0, 0xF7, 0xEA, 
   0xE6, 0xED, 0xE3, 0xDC, 0xD4, 0xC5, 0xC2, 0xF7, 0xE7, 0xE4, 0xFB, 0xEE, 0xED, 0xFB, 0xF2, 0xF2, 
   0xE5, 0xE2, 0xE2, 0x85, 0x80, 0x81, 0x95, 0x90, 0x91, 0x75, 0x71, 0x72, 0x4E, 0x4D, 0x4D, 0x3B, 
   0x3B, 0x3B, 0x63, 0x63, 0x63, 0x8E, 0x8D, 0x8D, 0x64, 0x63, 0x63, 0x45, 0x48, 0x49, 0x2D, 0x33, 
   0x34, 0x89, 0x8D, 0x90, 0xAF, 0xB0, 0xB5, 0x7B, 0x77, 0x7D, 0x55, 0x4F, 0x50, 0xC8, 0xC2, 0xC3, 
   0xF9, 0xF3, 0xF4, 0xD5, 0xCC, 0xCC, 0xED, 0xE1, 0xDF, 0xF6, 0xE7, 0xE5, 0xFB, 0xE9, 0xE7, 0xFF, 
   0xED, 0xEE, 0x93, 0x8B, 0x8B, 0x49, 0x4C, 0x4B, 0x4B, 0x4F, 0x4E, 0x6E, 0x6B, 0x6D, 0xC3, 0xBB, 
   0xBF, 0xF9, 0xEF, 0xEF, 0xF1, 0xE7, 0xE7, 0xF2, 0xE7, 0xE7, 0xF3, 0xE7, 0xE7, 0xF2, 0xE6, 0xE6, 
   0xF0, 0xE4, 0xE4, 0xF8, 0xE7, 0xE8, 0xF8, 0xE1, 0xE4, 0xFC, 0xE9, 0xEA, 0xF8, 0xE5, 0xE4, 0xF6, 
   0xE5, 0xE2, 0xF7, 0xE7, 0xE3, 0xED, 0xDF, 0xD9, 0xDA, 0xC9, 0xC6, 0xCD, 0xBB, 0xB8, 0xF7, 0xE6, 
   0xE3, 0xFB, 0xE6, 0xE4, 0xFA, 0xE4, 0xE2, 0xF7, 0xE0, 0xDE, 0xF7, 0xDF, 0xDC, 0xF8, 0xDF, 0xDB, 
   0xF5, 0xDB, 0xD7, 0xF3, 0xDA, 0xD7, 0xF3, 0xDA, 0xD6, 0xF2, 0xDA, 0xD6, 0xF2, 0xD9, 0xD5, 0xF5, 
   0xD7, 0xD1, 0xF4, 0xD4, 0xCE, 0xF4, 0xD4, 0xCE, 0xF1, 0xD1, 0xCC, 0xF2, 0xD2, 0xCC, 0xF1, 0xD1, 
   0xCB, 0xEF, 0xCF, 0xCB, 0xED, 0xCE, 0xCB, 0xEC, 0xCD, 0xCA, 0xEB, 0xCC, 0xC9, 0xEA, 0xCB, 0xC8, 
   0xE9, 0xCA, 0xC7, 0xEA, 0xCC, 0xC9, 0xED, 0xCE, 0xC9, 0xEE, 0xCE, 0xC8, 0xED, 0xCD, 0xC7, 0xE9, 
   0xC9, 0xC3, 0xE6, 0xC6, 0xC0, 0xE5, 0xC6, 0xC0, 0xE7, 0xC6, 0xC0, 0xEA, 0xC5, 0xBF, 0xE9, 0xC3, 
   0xBF, 0xED, 0xC7, 0xC2, 0xEE, 0xC8, 0xC3, 0xED, 0xC7, 0xC2, 0xEC, 0xC5, 0xC1, 0xE5, 0xC1, 0xBA, 
   0xDD, 0xBC, 0xB3, 0xD9, 0xB4, 0xAD, 0xD0, 0xAB, 0xA3, 0xC9, 0xA3, 0x9B, 0xC0, 0x96, 0x90, 0xB4, 
   0x8A, 0x84, 0xA4, 0x7D, 0x77, 0x95, 0x71, 0x69, 0x8B, 0x68, 0x5F, 0x7E, 0x5D, 0x53, 0x7A, 0x5A, 
   0x4D, 0x7A, 0x57, 0x4A, 0x72, 0x54, 0x46, 0x6F, 0x54, 0x46, 0x6F, 0x54, 0x46, 0x6D, 0x51, 0x43, 
   0x6C, 0x51, 0x43, 0x6C, 0x51, 0x43, 0x6C, 0x51, 0x43, 0x6F, 0x52, 0x43, 0x6F, 0x52, 0x43, 0x6F, 
   0x52, 0x43, 0x6E, 0x51, 0x42, 0x6E, 0x51, 0x42, 0x6E, 0x51, 0x42, 0x6F, 0x52, 0x43, 0x6F, 0x52, 
   0x43, 0x6D, 0x50, 0x41, 0x6D, 0x50, 0x41, 0x6D, 0x50, 0x41, 0x6D, 0x50, 0x41, 0x6D, 0x50, 0x41, 
   0x6C, 0x4F, 0x40, 0x6D, 0x50, 0x41, 0x6E, 0x51, 0x42, 0x6F, 0x52, 0x43, 0x6E, 0x51, 0x42, 0x6A, 
   0x4D, 0x3E, 0x68, 0x4B, 0x3C, 0x6A, 0x4D, 0x3E, 0x6A, 0x4D, 0x3E, 0x66, 0x49, 0x3A, 0x65, 0x48, 
   0x39, 0x67, 0x4A, 0x3C, 0x67, 0x4A, 0x3B, 0x64, 0x49, 0x35, 0x64, 0x49, 0x35, 0x64, 0x49, 0x35, 
   0x65, 0x4A, 0x36, 0x65, 0x4A, 0x36, 0x65, 0x4A, 0x36, 0x63, 0x4A, 0x38, 0x62, 0x4A, 0x3A, 0x63, 
   0x4A, 0x3A, 0x64, 0x49, 0x3A, 0x66, 0x48, 0x39, 0x68, 0x48, 0x39, 0x69, 0x48, 0x39, 0x64, 0x4C, 
   0x34, 0x64, 0x4C, 0x36, 0x64, 0x4B, 0x36, 0x65, 0x4B, 0x38, 0x64, 0x4A, 0x39, 0x65, 0x4B, 0x3A, 
   0x65, 0x4B, 0x3A, 0x66, 0x4C, 0x3B, 0xF3, 0xE9, 0xE5, 0xF4, 0xE8, 0xE4, 0xFA, 0xE7, 0xE5, 0xFB, 
   0xE6, 0xE5, 0xFA, 0xE5, 0xE4, 0xFA, 0xE6, 0xE5, 0xF5, 0xE4, 0xE2, 0xF1, 0xE2, 0xDB, 0xF3, 0xE2, 
   0xDB, 0xFE, 0xEB, 0xE6, 0xC3, 0xB5, 0xB0, 0x47, 0x42, 0x3D, 0x38, 0x3B, 0x35, 0x48, 0x4F, 0x4A, 
   0x31, 0x38, 0x35, 0x37, 0x3C, 0x3F, 0x45, 0x48, 0x4E, 0x4C, 0x50, 0x55, 0x46, 0x4C, 0x4E, 0x87, 
   0x89, 0x8C, 0xAC, 0xA7, 0xAE, 0x7B, 0x7B, 0x7F, 0x63, 0x67, 0x6A, 0x5F, 0x61, 0x62, 0xB9, 0xAE, 
   0xAF, 0xF0, 0xDB, 0xDC, 0xE5, 0xCD, 0xCF, 0xDD, 0xC3, 0xC3, 0xEA, 0xCB, 0xC6, 0xEE, 0xCD, 0xC4, 
   0xEF, 0xCE, 0xC7, 0xEE, 0xD1, 0xCD, 0xF0, 0xD4, 0xD3, 0xF3, 0xDA, 0xD0, 0xEF, 0xDD, 0xD4, 0xDC, 
   0xD5, 0xD1, 0x99, 0x97, 0x97, 0x58, 0x56, 0x5D, 0x48, 0x44, 0x4F, 0x81, 0x82, 0x8A, 0x47, 0x4F, 
   0x52, 0x5F, 0x65, 0x6A, 0x42, 0x48, 0x4E, 0x3C, 0x3F, 0x47, 0x47, 0x48, 0x52, 0x69, 0x6B, 0x75, 
   0x62, 0x68, 0x72, 0x47, 0x50, 0x5C, 0x4E, 0x58, 0x66, 0x66, 0x71, 0x7E, 0x56, 0x5E, 0x68, 0x6F, 
   0x75, 0x79, 0x8F, 0x91, 0x94, 0xD3, 0xD2, 0xD7, 0x5A, 0x5B, 0x5F, 0x41, 0x44, 0x48, 0x48, 0x4B, 
   0x4F, 0xC6, 0xCB, 0xCF, 0xF6, 0xFC, 0xFF, 0xC2, 0xC1, 0xC5, 0xA5, 0xA8, 0xAC, 0xDB, 0xE2, 0xE3, 
   0xA2, 0xAE, 0xB0, 0x71, 0x7C, 0x7F, 0x92, 0x9B, 0x9E, 0xAB, 0xB1, 0xB2, 0x7B, 0x7E, 0x7F, 0x78, 
   0x7C, 0x7D, 0x84, 0x8A, 0x8E, 0xB2, 0xBC, 0xC0, 0x70, 0x7D, 0x82, 0x42, 0x51, 0x58, 0x48, 0x5C, 
   0x63, 0x4D, 0x5D, 0x63, 0x5A, 0x64, 0x69, 0x75, 0x77, 0x7B, 0xF3, 0xEE, 0xF1, 0xF3, 0xE7, 0xE9, 
   0xF4, 0xE7, 0xE6, 0xF9, 0xEA, 0xE8, 0xF9, 0xEA, 0xE8, 0xF5, 0xE6, 0xE4, 0xF5, 0xE6, 0xE4, 0xFA, 
   0xEB, 0xE9, 0xF8, 0xE9, 0xE7, 0xF6, 0xE9, 0xE7, 0xF9, 0xEE, 0xEC, 0xF6, 0xE9, 0xE7, 0xFA, 0xED, 
   0xEB, 0xF9, 0xEC, 0xEA, 0xF9, 0xEC, 0xEA, 0xFA, 0xEC, 0xEA, 0xFA, 0xEB, 0xE9, 0xF9, 0xEA, 0xE8, 
   0xF9, 0xEA, 0xE8, 0xF9, 0xEA, 0xE8, 0xF8, 0xE9, 0xE7, 0xF7, 0xE8, 0xE6, 0xF7, 0xE8, 0xE6, 0xF7, 
   0xE8, 0xE6, 0xF5, 0xE6, 0xE4, 0xF5, 0xE6, 0xE4, 0xF8, 0xE9, 0xE7, 0xF9, 0xEA, 0xE8, 0xF6, 0xEA, 
   0xE5, 0xF3, 0xE9, 0xE2, 0xF4, 0xE6, 0xE3, 0xFC, 0xEC, 0xE9, 0xFC, 0xEE, 0xED, 0xFE, 0xF8, 0xF8, 
   0xA0, 0x9B, 0x9A, 0x55, 0x51, 0x51, 0x95, 0x91, 0x92, 0x49, 0x44, 0x45, 0x50, 0x4C, 0x4C, 0x9B, 
   0x99, 0x99, 0xD6, 0xD4, 0xD4, 0x78, 0x74, 0x75, 0x9A, 0x98, 0x98, 0x43, 0x45, 0x45, 0x33, 0x37, 
   0x39, 0x6E, 0x71, 0x75, 0x7F, 0x7F, 0x84, 0x48, 0x43, 0x4A, 0xA9, 0xA4, 0xA5, 0xFF, 0xFB, 0xFC, 
   0xF5, 0xEE, 0xEF, 0xCF, 0xC5, 0xC5, 0xF1, 0xE7, 0xE5, 0xF6, 0xE9, 0xE6, 0xEB, 0xD9, 0xD7, 0xD8, 
   0xC5, 0xC6, 0xA4, 0x9D, 0x9C, 0x46, 0x46, 0x46, 0x57, 0x5C, 0x5B, 0x6D, 0x6A, 0x6C, 0xF9, 0xF0, 
   0xF5, 0xF9, 0xEC, 0xED, 0xF7, 0xEB, 0xEB, 0xF4, 0xE8, 0xE8, 0xF0, 0xE5, 0xE5, 0xF8, 0xEE, 0xEE, 
   0xF4, 0xEA, 0xEA, 0xF5, 0xE8, 0xE9, 0xFE, 0xF0, 0xF2, 0xF7, 0xE9, 0xEA, 0xF1, 0xE1, 0xDF, 0xF2, 
   0xE1, 0xDE, 0xE6, 0xD6, 0xD1, 0xD4, 0xC4, 0xBE, 0xC5, 0xB3, 0xAF, 0xF5, 0xE5, 0xE2, 0xF8, 0xE4, 
   0xE1, 0xF5, 0xE0, 0xDE, 0xF3, 0xDD, 0xDB, 0xF3, 0xDC, 0xDA, 0xF5, 0xDC, 0xDA, 0xF3, 0xDA, 0xD6, 
   0xF0, 0xD7, 0xD3, 0xF0, 0xD7, 0xD3, 0xF0, 0xD7, 0xD3, 0xF0, 0xD7, 0xD3, 0xEE, 0xD6, 0xD2, 0xF3, 
   0xD5, 0xD0, 0xF3, 0xD3, 0xCD, 0xF3, 0xD3, 0xCD, 0xF1, 0xD1, 0xCB, 0xF1, 0xD1, 0xCB, 0xF0, 0xD0, 
   0xCA, 0xEF, 0xCE, 0xC9, 0xED, 0xCC, 0xC9, 0xEC, 0xCB, 0xC8, 0xEA, 0xCA, 0xC7, 0xE9, 0xC8, 0xC5, 
   0xE8, 0xC7, 0xC5, 0xEA, 0xC9, 0xC7, 0xEC, 0xCB, 0xC7, 0xEC, 0xCC, 0xC6, 0xEA, 0xCA, 0xC4, 0xE7, 
   0xC7, 0xC1, 0xE5, 0xC5, 0xBF, 0xE5, 0xC6, 0xC0, 0xE6, 0xC6, 0xC0, 0xEB, 0xC7, 0xC1, 0xEA, 0xC6, 
   0xC0, 0xED, 0xC9, 0xC3, 0xEF, 0xCB, 0xC5, 0xEE, 0xC9, 0xC4, 0xEC, 0xC8, 0xC2, 0xEA, 0xC6, 0xBF, 
   0xEA, 0xC7, 0xBE, 0xEA, 0xC5, 0xBD, 0xE4, 0xBF, 0xB7, 0xE2, 0xBC, 0xB4, 0xD9, 0xB1, 0xA9, 0xD2, 
   0xA8, 0xA2, 0xC5, 0x9D, 0x96, 0xB7, 0x91, 0x88, 0xA9, 0x86, 0x7D, 0x97, 0x75, 0x6B, 0x8E, 0x6D, 
   0x60, 0x86, 0x62, 0x56, 0x7A, 0x5B, 0x4E, 0x70, 0x55, 0x47, 0x6D, 0x53, 0x45, 0x6D, 0x52, 0x44, 
   0x6C, 0x51, 0x43, 0x6C, 0x51, 0x43, 0x6C, 0x51, 0x43, 0x6F, 0x52, 0x43, 0x6F, 0x52, 0x43, 0x6F, 
   0x52, 0x43, 0x6E, 0x51, 0x42, 0x6E, 0x51, 0x42, 0x6E, 0x51, 0x42, 0x6E, 0x51, 0x42, 0x6E, 0x51, 
   0x42, 0x6D, 0x50, 0x41, 0x6C, 0x4F, 0x40, 0x6C, 0x4F, 0x40, 0x6C, 0x4F, 0x40, 0x6C, 0x4F, 0x40, 
   0x6D, 0x50, 0x41, 0x6C, 0x4F, 0x40, 0x6C, 0x4F, 0x40, 0x6B, 0x4E, 0x3F, 0x6A, 0x4D, 0x3E, 0x68, 
   0x4B, 0x3C, 0x68, 0x4B, 0x3C, 0x67, 0x4A, 0x3B, 0x65, 0x48, 0x39, 0x66, 0x49, 0x3A, 0x66, 0x49, 
   0x3A, 0x67, 0x4A, 0x3B, 0x67, 0x4A, 0x3B, 0x65, 0x49, 0x38, 0x65, 0x49, 0x38, 0x65, 0x49, 0x38, 
   0x66, 0x4A, 0x39, 0x66, 0x4A, 0x39, 0x66, 0x4A, 0x39, 0x64, 0x4A, 0x3A, 0x63, 0x4A, 0x3A, 0x64, 
   0x4A, 0x3A, 0x64, 0x4A, 0x3A, 0x67, 0x49, 0x3A, 0x69, 0x49, 0x3A, 0x6A, 0x49, 0x3A, 0x64, 0x4C, 
   0x36, 0x64, 0x4C, 0x36, 0x64, 0x4C, 0x36, 0x65, 0x4B, 0x39, 0x64, 0x49, 0x39, 0x63, 0x49, 0x39, 
   0x65, 0x4B, 0x3B, 0x66, 0x4C, 0x3C, 0xF3, 0xE9, 0xE6, 0xF8, 0xEB, 0xE8, 0xF9, 0xE6, 0xE5, 0xF9, 
   0xE4, 0xE3, 0xF9, 0xE4, 0xE3, 0xF9, 0xE5, 0xE4, 0xF6, 0xE4, 0xE1, 0xF7, 0xE6, 0xDD, 0xF1, 0xE0, 
   0xD8, 0xEE, 0xDC, 0xD6, 0xBE, 0xAF, 0xA8, 0x6F, 0x6A, 0x63, 0x41, 0x41, 0x3B, 0x37, 0x3D, 0x38, 
   0x3A, 0x42, 0x3E, 0x36, 0x3B, 0x3E, 0x45, 0x49, 0x4F, 0x4F, 0x53, 0x58, 0x41, 0x47, 0x49, 0x32, 
   0x37, 0x3B, 0x42, 0x49, 0x51, 0x40, 0x4C, 0x52, 0x47, 0x57, 0x5B, 0x46, 0x56, 0x58, 0x85, 0x89, 
   0x8B, 0xD2, 0xCC, 0xCF, 0xE3, 0xD7, 0xDA, 0xD7, 0xC7, 0xC7, 0xD7, 0xC0, 0xBD, 0xE2, 0xC5, 0xBF, 
   0xEB, 0xCC, 0xC7, 0xEE, 0xCD, 0xCD, 0xF1, 0xD3, 0xD1, 0xF5, 0xD8, 0xCF, 0xEE, 0xD8, 0xCF, 0xFD, 
   0xF1, 0xED, 0xB4, 0xB0, 0xB1, 0x39, 0x3A, 0x3F, 0x8D, 0x8C, 0x96, 0xDC, 0xE0, 0xE6, 0xC5, 0xCF, 
   0xD1, 0x96, 0x9E, 0xA2, 0x31, 0x3A, 0x3E, 0x3C, 0x43, 0x49, 0x47, 0x4D, 0x55, 0x65, 0x6B, 0x74, 
   0x54, 0x5D, 0x67, 0x46, 0x51, 0x5D, 0x53, 0x60, 0x6E, 0x5A, 0x67, 0x74, 0x4F, 0x59, 0x60, 0x41, 
   0x49, 0x4D, 0xA1, 0xA1, 0xA5, 0xEF, 0xE8, 0xEE, 0x98, 0x93, 0x98, 0x45, 0x41, 0x46, 0x60, 0x5D, 
   0x62, 0xD4, 0xD3, 0xD7, 0x91, 0x92, 0x95, 0x59, 0x5E, 0x61, 0x7E, 0x86, 0x8A, 0x62, 0x6E, 0x6F, 
   0x3C, 0x48, 0x4A, 0x63, 0x6D, 0x6F, 0xCE, 0xD5, 0xD7, 0x6D, 0x6E, 0x70, 0xAC, 0xAA, 0xAB, 0xBF, 
   0xC1, 0xC2, 0xC1, 0xC8, 0xCC, 0xA0, 0xAD, 0xB0, 0x67, 0x76, 0x7B, 0x41, 0x53, 0x59, 0x5B, 0x6B, 
   0x72, 0x57, 0x62, 0x69, 0x3C, 0x41, 0x48, 0xAE, 0xAE, 0xB1, 0xFB, 0xF4, 0xF5, 0xF6, 0xE8, 0xEA, 
   0xF9, 0xEC, 0xEC, 0xFA, 0xEB, 0xE9, 0xFB, 0xEC, 0xEA, 0xF9, 0xEA, 0xE8, 0xF8, 0xE9, 0xE7, 0xF7, 
   0xE8, 0xE6, 0xF7, 0xE8, 0xE6, 0xFB, 0xEE, 0xEC, 0xFA, 0xED, 0xEB, 0xFA, 0xEE, 0xEC, 0xF7, 0xEA, 
   0xE8, 0xF8, 0xEB, 0xE9, 0xF8, 0xEB, 0xE9, 0xF9, 0xEB, 0xE9, 0xFA, 0xEB, 0xE9, 0xF8, 0xE9, 0xE7, 
   0xF8, 0xE9, 0xE7, 0xF8, 0xE9, 0xE7, 0xF8, 0xE9, 0xE7, 0xF8, 0xE9, 0xE7, 0xF9, 0xEA, 0xE8, 0xFA, 
   0xEB, 0xE9, 0xF8, 0xE9, 0xE7, 0xF7, 0xE8, 0xE6, 0xF8, 0xE9, 0xE7, 0xF9, 0xEA, 0xE8, 0xF7, 0xEA, 
   0xE6, 0xF6, 0xEA, 0xE4, 0xFC, 0xED, 0xEA, 0xFA, 0xE9, 0xE6, 0xFA, 0xEC, 0xEC, 0xF7, 0xEF, 0xF0, 
   0xA8, 0xA2, 0xA1, 0x92, 0x8C, 0x8D, 0x90, 0x8B, 0x8C, 0x71, 0x6C, 0x6D, 0x4D, 0x48, 0x49, 0xA1, 
   0x9C, 0x9D, 0x69, 0x64, 0x65, 0x4E, 0x49, 0x49, 0x83, 0x80, 0x80, 0x47, 0x47, 0x48, 0x3E, 0x41, 
   0x42, 0x43, 0x45, 0x47, 0x35, 0x34, 0x39, 0x67, 0x62, 0x67, 0xF8, 0xF3, 0xF4, 0xEA, 0xE5, 0xE7, 
   0xDD, 0xD3, 0xD4, 0xE4, 0xDC, 0xDC, 0xE6, 0xDC, 0xDA, 0xFC, 0xF1, 0xEE, 0xC5, 0xB3, 0xB1, 0x6A, 
   0x58, 0x58, 0x86, 0x7E, 0x7E, 0xA5, 0xA5, 0xA5, 0x62, 0x64, 0x64, 0xB5, 0xB4, 0xB6, 0xFA, 0xF3, 
   0xF7, 0xF9, 0xE9, 0xEB, 0xF9, 0xEA, 0xEB, 0xF5, 0xE8, 0xE8, 0xF9, 0xF0, 0xF0, 0xC4, 0xBC, 0xBC, 
   0xD0, 0xCB, 0xCA, 0xF6, 0xED, 0xED, 0xD6, 0xCD, 0xCD, 0x99, 0x8C, 0x8D, 0xDE, 0xD1, 0xCF, 0xEF, 
   0xE0, 0xDD, 0xE9, 0xD7, 0xD3, 0xF2, 0xE0, 0xDA, 0xF5, 0xE5, 0xE1, 0xF5, 0xE4, 0xE1, 0xF2, 0xDD, 
   0xDB, 0xF0, 0xDA, 0xD8, 0xF1, 0xDA, 0xD8, 0xF2, 0xDB, 0xD9, 0xF5, 0xDB, 0xD9, 0xF3, 0xD9, 0xD5, 
   0xF0, 0xD6, 0xD2, 0xF0, 0xD6, 0xD2, 0xF0, 0xD6, 0xD2, 0xF0, 0xD5, 0xD1, 0xEF, 0xD4, 0xD0, 0xF1, 
   0xD2, 0xCD, 0xF2, 0xD2, 0xCB, 0xF2, 0xD2, 0xCC, 0xF0, 0xD0, 0xCA, 0xEF, 0xCF, 0xC9, 0xEE, 0xCE, 
   0xC8, 0xED, 0xCD, 0xC8, 0xEC, 0xCC, 0xC7, 0xEA, 0xCA, 0xC6, 0xEA, 0xCA, 0xC5, 0xEA, 0xCA, 0xC5, 
   0xE9, 0xC9, 0xC5, 0xEB, 0xCB, 0xC7, 0xEB, 0xCB, 0xC6, 0xEA, 0xCA, 0xC3, 0xE7, 0xC7, 0xC1, 0xE5, 
   0xC5, 0xBF, 0xE6, 0xC6, 0xC0, 0xE9, 0xC9, 0xC3, 0xE9, 0xC9, 0xC3, 0xEB, 0xC8, 0xC2, 0xEB, 0xC6, 
   0xC0, 0xEE, 0xCA, 0xC4, 0xED, 0xC8, 0xC2, 0xEB, 0xC7, 0xC1, 0xE9, 0xC5, 0xBF, 0xEA, 0xC5, 0xBF, 
   0xEC, 0xC7, 0xC1, 0xEA, 0xC5, 0xBF, 0xEA, 0xC4, 0xBE, 0xE9, 0xC3, 0xBD, 0xE8, 0xC1, 0xBB, 0xE2, 
   0xBB, 0xB5, 0xD6, 0xAF, 0xAA, 0xCC, 0xA5, 0x9D, 0xBF, 0x99, 0x90, 0xB0, 0x8B, 0x81, 0xA4, 0x7E, 
   0x73, 0x92, 0x6D, 0x61, 0x83, 0x63, 0x56, 0x71, 0x57, 0x49, 0x6C, 0x51, 0x43, 0x6D, 0x52, 0x44, 
   0x6C, 0x51, 0x43, 0x6C, 0x51, 0x43, 0x6C, 0x51, 0x43, 0x6E, 0x51, 0x42, 0x6E, 0x51, 0x42, 0x6E, 
   0x51, 0x42, 0x6D, 0x50, 0x41, 0x6D, 0x50, 0x41, 0x6D, 0x50, 0x41, 0x6E, 0x51, 0x42, 0x6E, 0x51, 
   0x42, 0x6D, 0x50, 0x41, 0x6B, 0x4E, 0x3F, 0x6B, 0x4E, 0x3F, 0x6B, 0x4E, 0x3F, 0x6B, 0x4E, 0x3F, 
   0x6C, 0x4F, 0x40, 0x6B, 0x4E, 0x3F, 0x69, 0x4C, 0x3D, 0x68, 0x4B, 0x3C, 0x68, 0x4B, 0x3C, 0x67, 
   0x4A, 0x3B, 0x66, 0x49, 0x3A, 0x67, 0x4A, 0x3B, 0x66, 0x49, 0x3A, 0x65, 0x48, 0x39, 0x66, 0x49, 
   0x3A, 0x68, 0x4B, 0x3C, 0x68, 0x4B, 0x3C, 0x66, 0x4A, 0x39, 0x66, 0x4A, 0x39, 0x66, 0x4A, 0x39, 
   0x67, 0x4B, 0x3A, 0x67, 0x4B, 0x3A, 0x67, 0x4B, 0x3A, 0x65, 0x4B, 0x3B, 0x64, 0x4B, 0x3B, 0x65, 
   0x4B, 0x3B, 0x67, 0x4B, 0x3B, 0x68, 0x4A, 0x3B, 0x6A, 0x4A, 0x3B, 0x6A, 0x4A, 0x3B, 0x67, 0x4D, 
   0x38, 0x67, 0x4D, 0x38, 0x67, 0x4C, 0x38, 0x68, 0x4C, 0x3B, 0x67, 0x4B, 0x3B, 0x66, 0x49, 0x3B, 
   0x68, 0x4B, 0x3D, 0x69, 0x4E, 0x3E, 0xF7, 0xEE, 0xEC, 0xF7, 0xE9, 0xE9, 0xF9, 0xE5, 0xE4, 0xFA, 
   0xE5, 0xE4, 0xF9, 0xE4, 0xE3, 0xF8, 0xE5, 0xE3, 0xF5, 0xE4, 0xDF, 0xF6, 0xE5, 0xDA, 0xF9, 0xE8, 
   0xDE, 0xD9, 0xC9, 0xC0, 0x6C, 0x5F, 0x57, 0x79, 0x74, 0x6B, 0x7E, 0x7D, 0x75, 0x4B, 0x4F, 0x4A, 
   0x34, 0x3B, 0x38, 0x41, 0x46, 0x49, 0x57, 0x5B, 0x60, 0x53, 0x57, 0x5C, 0x4E, 0x53, 0x55, 0x40, 
   0x46, 0x4A, 0x44, 0x51, 0x5A, 0x4F, 0x60, 0x67, 0x4F, 0x64, 0x69, 0x4E, 0x62, 0x67, 0x58, 0x65, 
   0x6A, 0x65, 0x6A, 0x71, 0x9E, 0x9D, 0xA1, 0xD3, 0xCC, 0xCE, 0xDC, 0xCF, 0xCE, 0xDA, 0xC4, 0xC1, 
   0xE0, 0xC4, 0xC2, 0xED, 0xCB, 0xCB, 0xEF, 0xCD, 0xCC, 0xF5, 0xD4, 0xCC, 0xED, 0xD2, 0xCA, 0xE7, 
   0xD7, 0xD3, 0xCE, 0xC8, 0xC8, 0xA3, 0xA4, 0xA8, 0x6B, 0x6F, 0x76, 0x6D, 0x74, 0x79, 0x81, 0x8C, 
   0x8D, 0x48, 0x52, 0x55, 0x2E, 0x39, 0x3C, 0x4D, 0x58, 0x5D, 0x41, 0x4A, 0x51, 0x42, 0x4C, 0x53, 
   0x4F, 0x5D, 0x65, 0x5D, 0x6D, 0x76, 0x4C, 0x5D, 0x68, 0x5E, 0x6D, 0x78, 0x73, 0x7F, 0x86, 0x6E, 
   0x77, 0x7A, 0xBC, 0xBC, 0xBF, 0x85, 0x7F, 0x82, 0x8E, 0x88, 0x8C, 0xD3, 0xD0, 0xD3, 0xCC, 0xCA, 
   0xCD, 0xB2, 0xB2, 0xB5, 0x46, 0x48, 0x4A, 0x49, 0x53, 0x56, 0x45, 0x51, 0x53, 0x47, 0x56, 0x58, 
   0x78, 0x84, 0x86, 0x83, 0x8A, 0x8D, 0x60, 0x62, 0x66, 0x94, 0x90, 0x93, 0xE1, 0xDC, 0xDE, 0xD2, 
   0xD4, 0xD5, 0x9A, 0xA1, 0xA5, 0x57, 0x64, 0x68, 0x3B, 0x4C, 0x50, 0x4B, 0x5D, 0x63, 0x5E, 0x67, 
   0x70, 0x38, 0x3E, 0x46, 0x58, 0x59, 0x5F, 0xE6, 0xE2, 0xE5, 0xF5, 0xEC, 0xED, 0xF9, 0xED, 0xED, 
   0xFA, 0xEB, 0xEB, 0xFA, 0xEB, 0xE9, 0xFB, 0xEC, 0xEA, 0xFB, 0xEC, 0xEA, 0xFA, 0xEB, 0xE9, 0xF3, 
   0xE4, 0xE2, 0xF0, 0xE1, 0xDF, 0xFA, 0xEC, 0xEA, 0xFA, 0xEC, 0xEA, 0xF7, 0xEA, 0xE8, 0xF9, 0xEB, 
   0xE9, 0xF8, 0xEA, 0xE8, 0xF8, 0xEA, 0xE8, 0xF9, 0xEA, 0xE8, 0xF9, 0xEA, 0xE8, 0xF8, 0xE9, 0xE7, 
   0xF7, 0xE8, 0xE6, 0xF7, 0xE8, 0xE6, 0xF8, 0xE9, 0xE7, 0xF9, 0xEA, 0xE8, 0xFA, 0xEB, 0xE9, 0xFB, 
   0xEC, 0xEA, 0xFA, 0xEB, 0xE9, 0xF6, 0xE7, 0xE5, 0xF8, 0xE9, 0xE7, 0xF8, 0xE9, 0xE7, 0xF8, 0xEA, 
   0xE6, 0xFB, 0xEF, 0xE8, 0xFD, 0xEB, 0xE8, 0xFB, 0xE9, 0xE6, 0xFB, 0xED, 0xED, 0xF4, 0xE9, 0xEA, 
   0x9B, 0x92, 0x92, 0x90, 0x88, 0x89, 0xAD, 0xA6, 0xA7, 0xA6, 0xA0, 0xA0, 0x8E, 0x87, 0x88, 0x9E, 
   0x96, 0x96, 0x77, 0x6E, 0x6E, 0x84, 0x7D, 0x7D, 0x61, 0x5D, 0x5C, 0x35, 0x34, 0x33, 0x50, 0x51, 
   0x52, 0x3C, 0x3C, 0x3E, 0x4E, 0x4B, 0x4E, 0xC4, 0xBD, 0xC2, 0xB6, 0xAD, 0xAE, 0xCF, 0xC5, 0xC7, 
   0x7E, 0x74, 0x75, 0xA1, 0x96, 0x96, 0xDB, 0xD3, 0xD1, 0xAC, 0xA0, 0x9E, 0xD7, 0xC6, 0xC4, 0x8D, 
   0x7C, 0x7C, 0xAA, 0xA1, 0xA1, 0xA2, 0xA1, 0xA1, 0xB0, 0xB0, 0xB1, 0xF1, 0xEE, 0xF0, 0xF0, 0xEB, 
   0xEC, 0xFF, 0xF1, 0xF3, 0xF5, 0xE3, 0xE4, 0xFE, 0xF1, 0xF1, 0xD9, 0xCF, 0xCF, 0x7D, 0x76, 0x76, 
   0xCC, 0xC7, 0xC6, 0xD6, 0xD1, 0xD0, 0x5D, 0x55, 0x55, 0x86, 0x7E, 0x7D, 0xFA, 0xEE, 0xEC, 0xF9, 
   0xEA, 0xE7, 0xF3, 0xE1, 0xDD, 0xF7, 0xE3, 0xDE, 0xF5, 0xE2, 0xDE, 0xF3, 0xDF, 0xDD, 0xF4, 0xDE, 
   0xDC, 0xF1, 0xDA, 0xD8, 0xF1, 0xD9, 0xD7, 0xF1, 0xD9, 0xD7, 0xF4, 0xDA, 0xD7, 0xF4, 0xD9, 0xD5, 
   0xF1, 0xD6, 0xD2, 0xF1, 0xD6, 0xD2, 0xEF, 0xD4, 0xD0, 0xED, 0xD3, 0xCF, 0xED, 0xD2, 0xCE, 0xEE, 
   0xD0, 0xCB, 0xF1, 0xD1, 0xCB, 0xF2, 0xD2, 0xCC, 0xEF, 0xCF, 0xC9, 0xEF, 0xCF, 0xC9, 0xED, 0xCD, 
   0xC7, 0xED, 0xCD, 0xC7, 0xED, 0xCC, 0xC7, 0xEC, 0xCA, 0xC6, 0xEC, 0xCA, 0xC6, 0xEC, 0xCB, 0xC6, 
   0xEC, 0xCB, 0xC6, 0xEE, 0xCD, 0xC8, 0xED, 0xCC, 0xC7, 0xE9, 0xC9, 0xC3, 0xE7, 0xC7, 0xC1, 0xE5, 
   0xC5, 0xBF, 0xE7, 0xC7, 0xC1, 0xEB, 0xCB, 0xC5, 0xEA, 0xCA, 0xC4, 0xE9, 0xC6, 0xC0, 0xE8, 0xC5, 
   0xBF, 0xEC, 0xC9, 0xC3, 0xEE, 0xCB, 0xC5, 0xED, 0xCA, 0xC4, 0xEA, 0xC8, 0xC2, 0xEB, 0xC6, 0xC1, 
   0xEF, 0xC7, 0xC3, 0xEB, 0xC5, 0xC0, 0xE7, 0xC2, 0xBC, 0xE5, 0xC0, 0xBB, 0xE8, 0xC4, 0xBF, 0xE4, 
   0xC1, 0xBB, 0xDD, 0xB8, 0xB2, 0xD7, 0xB1, 0xA9, 0xCD, 0xA5, 0x9D, 0xC0, 0x97, 0x8E, 0xB1, 0x8A, 
   0x7E, 0x9C, 0x77, 0x6B, 0x8B, 0x6B, 0x5E, 0x79, 0x5F, 0x51, 0x71, 0x56, 0x48, 0x6E, 0x53, 0x45, 
   0x6C, 0x51, 0x43, 0x6C, 0x51, 0x43, 0x6C, 0x51, 0x43, 0x6D, 0x50, 0x41, 0x6D, 0x50, 0x41, 0x6D, 
   0x50, 0x41, 0x6C, 0x4F, 0x40, 0x6C, 0x4F, 0x40, 0x6C, 0x4F, 0x40, 0x6D, 0x50, 0x41, 0x6D, 0x50, 
   0x41, 0x6C, 0x4F, 0x40, 0x6A, 0x4D, 0x3E, 0x69, 0x4C, 0x3D, 0x69, 0x4C, 0x3D, 0x6A, 0x4D, 0x3E, 
   0x69, 0x4C, 0x3D, 0x69, 0x4C, 0x3D, 0x69, 0x4C, 0x3D, 0x68, 0x4B, 0x3C, 0x67, 0x4A, 0x3B, 0x67, 
   0x4A, 0x3B, 0x68, 0x4B, 0x3C, 0x68, 0x4B, 0x3C, 0x67, 0x4A, 0x3B, 0x67, 0x4A, 0x3B, 0x67, 0x4A, 
   0x3B, 0x68, 0x4B, 0x3C, 0x69, 0x4C, 0x3D, 0x67, 0x4B, 0x3B, 0x67, 0x4B, 0x3B, 0x67, 0x4B, 0x3B, 
   0x68, 0x4C, 0x3C, 0x68, 0x4C, 0x3C, 0x68, 0x4C, 0x3C, 0x66, 0x4C, 0x3C, 0x65, 0x4C, 0x3C, 0x67, 
   0x4B, 0x3C, 0x69, 0x4B, 0x3C, 0x69, 0x4B, 0x3C, 0x69, 0x4B, 0x3C, 0x69, 0x4B, 0x3C, 0x68, 0x4C, 
   0x3A, 0x68, 0x4D, 0x3A, 0x68, 0x4C, 0x3B, 0x68, 0x4B, 0x3C, 0x67, 0x49, 0x3B, 0x66, 0x48, 0x3C, 
   0x69, 0x4B, 0x3E, 0x6B, 0x4D, 0x40, 0xF7, 0xEE, 0xEF, 0xF3, 0xE5, 0xE7, 0xF5, 0xE2, 0xE2, 0xFD, 
   0xE8, 0xE7, 0xF9, 0xE4, 0xE2, 0xF7, 0xE4, 0xE0, 0xF6, 0xE4, 0xDE, 0xF2, 0xE0, 0xD5, 0xF8, 0xE7, 
   0xDD, 0xB9, 0xAB, 0xA3, 0x78, 0x6F, 0x67, 0x8D, 0x89, 0x7F, 0x88, 0x86, 0x7E, 0x63, 0x68, 0x62, 
   0x47, 0x4E, 0x4B, 0x4D, 0x53, 0x55, 0x57, 0x5B, 0x60, 0x55, 0x59, 0x5E, 0x4A, 0x4F, 0x51, 0x48, 
   0x4D, 0x51, 0x54, 0x5E, 0x67, 0x4B, 0x5A, 0x61, 0x4A, 0x5B, 0x63, 0x5B, 0x6C, 0x74, 0x65, 0x73, 
   0x7B, 0x71, 0x7B, 0x84, 0x5D, 0x62, 0x69, 0x61, 0x64, 0x69, 0x9B, 0x96, 0x99, 0xD9, 0xCA, 0xCC, 
   0xE1, 0xCA, 0xCA, 0xE9, 0xC7, 0xC8, 0xF2, 0xCE, 0xCD, 0xF6, 0xD1, 0xCB, 0xF8, 0xD8, 0xD2, 0xE3, 
   0xCF, 0xCB, 0xDF, 0xD5, 0xD4, 0x94, 0x93, 0x95, 0x50, 0x55, 0x59, 0x44, 0x4D, 0x4E, 0x39, 0x44, 
   0x44, 0x30, 0x3B, 0x3D, 0x4F, 0x5B, 0x5E, 0x4D, 0x5A, 0x5D, 0x45, 0x52, 0x58, 0x4C, 0x5A, 0x60, 
   0x47, 0x58, 0x5F, 0x4F, 0x62, 0x6A, 0x4C, 0x60, 0x69, 0x53, 0x65, 0x6E, 0x82, 0x8F, 0x95, 0x85, 
   0x8E, 0x90, 0x7F, 0x82, 0x83, 0x32, 0x30, 0x32, 0xA6, 0xA5, 0xA6, 0xF5, 0xF8, 0xF9, 0xF6, 0xFB, 
   0xFB, 0x7A, 0x7F, 0x80, 0x4D, 0x54, 0x54, 0x4B, 0x57, 0x59, 0x47, 0x55, 0x57, 0x59, 0x68, 0x6A, 
   0x8B, 0x96, 0x98, 0x83, 0x86, 0x8B, 0x81, 0x7E, 0x83, 0xE5, 0xDC, 0xE0, 0xEC, 0xE6, 0xE8, 0xB1, 
   0xB3, 0xB4, 0x8F, 0x98, 0x9C, 0x57, 0x64, 0x67, 0x4B, 0x5A, 0x5F, 0x63, 0x70, 0x78, 0x48, 0x4A, 
   0x52, 0x6F, 0x6E, 0x75, 0xE5, 0xE1, 0xE6, 0xF6, 0xEF, 0xF2, 0xF5, 0xE9, 0xEB, 0xF9, 0xEB, 0xEA, 
   0xFA, 0xEB, 0xE9, 0xF9, 0xEA, 0xE8, 0xF8, 0xE9, 0xE7, 0xF8, 0xE9, 0xE7, 0xFA, 0xEB, 0xE9, 0xF7, 
   0xE8, 0xE6, 0xF1, 0xE2, 0xE0, 0xFA, 0xEB, 0xE9, 0xF9, 0xEA, 0xE8, 0xF9, 0xEA, 0xE8, 0xFA, 0xEB, 
   0xE9, 0xF9, 0xEA, 0xE8, 0xF9, 0xEA, 0xE8, 0xF9, 0xEA, 0xE8, 0xF9, 0xEA, 0xE8, 0xF7, 0xE8, 0xE6, 
   0xF7, 0xE8, 0xE6, 0xF7, 0xE8, 0xE6, 0xF8, 0xE9, 0xE7, 0xF8, 0xE9, 0xE7, 0xF9, 0xEA, 0xE8, 0xF9, 
   0xEA, 0xE8, 0xF8, 0xE9, 0xE7, 0xF9, 0xEA, 0xE8, 0xF4, 0xE5, 0xE3, 0xF6, 0xE6, 0xE5, 0xF8, 0xEA, 
   0xE6, 0xF6, 0xE8, 0xE2, 0xFA, 0xE9, 0xE6, 0xFB, 0xE9, 0xE6, 0xFF, 0xEF, 0xEF, 0xDA, 0xD0, 0xD1, 
   0x61, 0x57, 0x57, 0xAC, 0xA5, 0xA5, 0xEA, 0xE4, 0xE3, 0xC9, 0xC0, 0xC0, 0xB3, 0xA9, 0xA9, 0x98, 
   0x8B, 0x8C, 0x6D, 0x5F, 0x60, 0xBF, 0xB3, 0xB2, 0x8A, 0x84, 0x83, 0x9C, 0x9A, 0x98, 0x6D, 0x6D, 
   0x6D, 0x66, 0x63, 0x65, 0x66, 0x61, 0x64, 0x8D, 0x83, 0x88, 0xAB, 0xA0, 0xA3, 0xDF, 0xD4, 0xD7, 
   0x7D, 0x71, 0x72, 0xDA, 0xCF, 0xCF, 0x9C, 0x92, 0x90, 0x5A, 0x4F, 0x4D, 0xDB, 0xCD, 0xCA, 0xE6, 
   0xD6, 0xD6, 0xC8, 0xC0, 0xC0, 0xE6, 0xE3, 0xE3, 0xF4, 0xF3, 0xF4, 0xFE, 0xFC, 0xFE, 0xEF, 0xEA, 
   0xED, 0xC5, 0xB4, 0xB6, 0xF4, 0xE3, 0xE4, 0xD6, 0xC8, 0xC9, 0x87, 0x7C, 0x7C, 0xB8, 0xB0, 0xB0, 
   0xF8, 0xF3, 0xF2, 0xAF, 0xAB, 0xAA, 0x84, 0x7F, 0x7E, 0xDD, 0xD8, 0xD8, 0xFA, 0xEE, 0xED, 0xF3, 
   0xE4, 0xE1, 0xF5, 0xE3, 0xDF, 0xF8, 0xE5, 0xDF, 0xF0, 0xDB, 0xD8, 0xF1, 0xDC, 0xDA, 0xF3, 0xDD, 
   0xDB, 0xEF, 0xD8, 0xD6, 0xF0, 0xD7, 0xD5, 0xF0, 0xD5, 0xD4, 0xF1, 0xD5, 0xD3, 0xF1, 0xD6, 0xD2, 
   0xF0, 0xD5, 0xD0, 0xEF, 0xD3, 0xCF, 0xED, 0xD1, 0xCD, 0xEC, 0xD0, 0xCC, 0xEB, 0xCF, 0xCB, 0xED, 
   0xCE, 0xC9, 0xF0, 0xD0, 0xCA, 0xF2, 0xD2, 0xCC, 0xEE, 0xCE, 0xC8, 0xEE, 0xCE, 0xC8, 0xEC, 0xCC, 
   0xC6, 0xED, 0xCC, 0xC6, 0xEF, 0xCC, 0xC8, 0xEF, 0xCC, 0xC7, 0xED, 0xCB, 0xC6, 0xED, 0xCA, 0xC5, 
   0xEC, 0xC9, 0xC5, 0xED, 0xCA, 0xC6, 0xED, 0xCC, 0xC7, 0xE8, 0xC9, 0xC2, 0xE9, 0xC9, 0xC3, 0xE4, 
   0xC4, 0xBE, 0xE8, 0xC8, 0xC2, 0xEA, 0xCA, 0xC4, 0xE7, 0xC7, 0xC1, 0xE8, 0xC6, 0xC0, 0xE6, 0xC4, 
   0xBE, 0xE9, 0xC7, 0xC1, 0xEE, 0xCC, 0xC6, 0xEB, 0xC9, 0xC3, 0xE9, 0xC9, 0xC3, 0xED, 0xC8, 0xC2, 
   0xEE, 0xC5, 0xC1, 0xEB, 0xC6, 0xC2, 0xE8, 0xC6, 0xC0, 0xE4, 0xC3, 0xBD, 0xE2, 0xC5, 0xBF, 0xE4, 
   0xC7, 0xC1, 0xDD, 0xBC, 0xB5, 0xD6, 0xB2, 0xAA, 0xD2, 0xAB, 0xA2, 0xC6, 0x9D, 0x94, 0xB6, 0x8E, 
   0x83, 0xA1, 0x7C, 0x71, 0x91, 0x72, 0x65, 0x80, 0x66, 0x58, 0x76, 0x5B, 0x4D, 0x6E, 0x53, 0x45, 
   0x6B, 0x50, 0x42, 0x6C, 0x51, 0x43, 0x6C, 0x51, 0x43, 0x6E, 0x50, 0x41, 0x6D, 0x50, 0x41, 0x6D, 
   0x50, 0x41, 0x6C, 0x4F, 0x40, 0x6C, 0x4F, 0x40, 0x6B, 0x4E, 0x3F, 0x6C, 0x4F, 0x40, 0x6D, 0x50, 
   0x41, 0x6C, 0x4F, 0x40, 0x6B, 0x4E, 0x3F, 0x69, 0x4C, 0x3D, 0x69, 0x4C, 0x3D, 0x69, 0x4C, 0x3D, 
   0x69, 0x4C, 0x3D, 0x69, 0x4C, 0x3D, 0x6A, 0x4D, 0x3E, 0x69, 0x4C, 0x3D, 0x68, 0x4B, 0x3C, 0x68, 
   0x4B, 0x3C, 0x6A, 0x4D, 0x3E, 0x68, 0x4B, 0x3C, 0x66, 0x49, 0x3A, 0x68, 0x4B, 0x3C, 0x67, 0x4A, 
   0x3B, 0x68, 0x4B, 0x3C, 0x69, 0x4C, 0x3D, 0x68, 0x4B, 0x3C, 0x68, 0x4B, 0x3C, 0x69, 0x4C, 0x3D, 
   0x6A, 0x4D, 0x3E, 0x6A, 0x4D, 0x3E, 0x6A, 0x4D, 0x3E, 0x69, 0x4D, 0x3E, 0x68, 0x4D, 0x3D, 0x69, 
   0x4C, 0x3D, 0x69, 0x4B, 0x3D, 0x6A, 0x4D, 0x3E, 0x69, 0x4C, 0x3E, 0x68, 0x4D, 0x3D, 0x67, 0x4C, 
   0x3B, 0x67, 0x4B, 0x3B, 0x66, 0x49, 0x3B, 0x69, 0x4C, 0x3E, 0x69, 0x4B, 0x3F, 0x6A, 0x4C, 0x41, 
   0x68, 0x4B, 0x40, 0x6B, 0x4D, 0x43, 0xCF, 0xC4, 0xC7, 0xFE, 0xF2, 0xF4, 0xF7, 0xE4, 0xE4, 0xFA, 
   0xE4, 0xE3, 0xF9, 0xE4, 0xE2, 0xF4, 0xE1, 0xDC, 0xF4, 0xE3, 0xDC, 0xF3, 0xE1, 0xD8, 0xE8, 0xDA, 
   0xD2, 0x90, 0x88, 0x80, 0x6B, 0x66, 0x5E, 0x71, 0x70, 0x67, 0x59, 0x57, 0x51, 0x2E, 0x33, 0x2E, 
   0x56, 0x5D, 0x5A, 0x4F, 0x54, 0x57, 0x44, 0x48, 0x4D, 0x54, 0x58, 0x5D, 0x70, 0x75, 0x77, 0x81, 
   0x85, 0x89, 0x5B, 0x5D, 0x66, 0x5E, 0x64, 0x6D, 0x47, 0x4F, 0x59, 0x4E, 0x56, 0x61, 0x63, 0x6C, 
   0x76, 0x76, 0x7F, 0x89, 0x60, 0x6A, 0x72, 0x55, 0x5E, 0x65, 0x54, 0x56, 0x5C, 0x9E, 0x95, 0x9B, 
   0xDE, 0xCC, 0xCF, 0xDF, 0xC1, 0xC2, 0xEB, 0xC9, 0xC8, 0xF9, 0xD4, 0xCE, 0xF7, 0xD7, 0xD1, 0xFA, 
   0xE2, 0xDF, 0xAF, 0xA1, 0x9F, 0x4D, 0x49, 0x4A, 0x5B, 0x60, 0x62, 0x56, 0x5E, 0x5E, 0x66, 0x6F, 
   0x6F, 0x7F, 0x89, 0x89, 0x53, 0x60, 0x61, 0x4C, 0x5A, 0x5D, 0x4D, 0x5C, 0x60, 0x4E, 0x5E, 0x64, 
   0x49, 0x5C, 0x62, 0x53, 0x68, 0x6F, 0x5B, 0x70, 0x78, 0x51, 0x62, 0x6B, 0x72, 0x7D, 0x83, 0x8C, 
   0x93, 0x94, 0x37, 0x3C, 0x3D, 0x37, 0x3C, 0x3D, 0xA5, 0xAA, 0xAA, 0xF6, 0xF9, 0xF9, 0xC4, 0xCD, 
   0xCD, 0x51, 0x5C, 0x5C, 0x49, 0x54, 0x54, 0x4A, 0x56, 0x58, 0x46, 0x53, 0x55, 0x54, 0x60, 0x62, 
   0x50, 0x58, 0x5B, 0x58, 0x59, 0x5E, 0x87, 0x80, 0x86, 0xF7, 0xF2, 0xF5, 0xA7, 0xA0, 0xA3, 0x9C, 
   0x9E, 0x9F, 0x83, 0x8E, 0x90, 0x41, 0x4D, 0x51, 0x5A, 0x66, 0x6B, 0x52, 0x5A, 0x62, 0x87, 0x80, 
   0x8A, 0xF9, 0xF1, 0xF8, 0xFA, 0xF1, 0xF6, 0xF4, 0xE9, 0xEB, 0xF8, 0xEA, 0xEA, 0xFA, 0xEB, 0xE9, 
   0xFC, 0xED, 0xEB, 0xFC, 0xED, 0xEB, 0xF8, 0xE9, 0xE7, 0xF7, 0xE8, 0xE6, 0xF1, 0xE2, 0xE0, 0xF6, 
   0xE7, 0xE5, 0xFD, 0xEE, 0xEC, 0xFB, 0xEB, 0xEA, 0xF8, 0xE9, 0xE7, 0xF8, 0xE9, 0xE7, 0xF9, 0xEA, 
   0xE8, 0xFA, 0xEB, 0xE9, 0xF9, 0xEA, 0xE8, 0xF9, 0xEA, 0xE8, 0xF8, 0xE9, 0xE7, 0xF6, 0xE7, 0xE5, 
   0xF6, 0xE7, 0xE5, 0xF7, 0xE8, 0xE6, 0xF7, 0xE8, 0xE6, 0xF7, 0xE8, 0xE6, 0xF7, 0xE8, 0xE6, 0xF8, 
   0xE9, 0xE7, 0xF7, 0xE8, 0xE6, 0xF7, 0xE8, 0xE6, 0xF9, 0xEA, 0xE8, 0xFA, 0xEB, 0xE9, 0xDF, 0xD0, 
   0xCC, 0xE3, 0xD4, 0xCE, 0xF8, 0xE6, 0xE2, 0xFC, 0xEA, 0xE7, 0xD2, 0xC0, 0xC0, 0x9B, 0x8D, 0x8D, 
   0xD8, 0xCF, 0xCF, 0xFE, 0xF7, 0xF6, 0xFD, 0xF3, 0xF3, 0xC0, 0xB4, 0xB4, 0xA1, 0x93, 0x93, 0x77, 
   0x66, 0x67, 0x89, 0x77, 0x78, 0x94, 0x86, 0x84, 0xBE, 0xB6, 0xB3, 0xE1, 0xDD, 0xDA, 0x78, 0x76, 
   0x75, 0x54, 0x50, 0x51, 0x5C, 0x55, 0x57, 0x9E, 0x95, 0x98, 0xF6, 0xEB, 0xED, 0xEC, 0xE1, 0xE3, 
   0xF4, 0xE8, 0xE9, 0xDF, 0xD6, 0xD6, 0x6B, 0x62, 0x60, 0x92, 0x8A, 0x86, 0xED, 0xE2, 0xDF, 0xF7, 
   0xE8, 0xE8, 0xF2, 0xE8, 0xE8, 0xF6, 0xF0, 0xF1, 0xF2, 0xEF, 0xF0, 0x9E, 0x9C, 0x9D, 0x69, 0x64, 
   0x67, 0xAF, 0xA0, 0xA1, 0xF5, 0xEB, 0xEC, 0x9F, 0x92, 0x93, 0x83, 0x77, 0x77, 0xC5, 0xBC, 0xBC, 
   0xBC, 0xB3, 0xB3, 0xCD, 0xC8, 0xC7, 0xEC, 0xE6, 0xE5, 0xF3, 0xEC, 0xEC, 0xEF, 0xE3, 0xE1, 0xEF, 
   0xDF, 0xDC, 0xF2, 0xDE, 0xDA, 0xF1, 0xDC, 0xD6, 0xEF, 0xD9, 0xD6, 0xED, 0xD8, 0xD7, 0xEE, 0xD7, 
   0xD5, 0xED, 0xD5, 0xD3, 0xF0, 0xD5, 0xD4, 0xF1, 0xD4, 0xD3, 0xEE, 0xD2, 0xD0, 0xF0, 0xD3, 0xCF, 
   0xF0, 0xD3, 0xCF, 0xEE, 0xD1, 0xCD, 0xEF, 0xD2, 0xCE, 0xEE, 0xD1, 0xCD, 0xEB, 0xCE, 0xCA, 0xEC, 
   0xCD, 0xC8, 0xEF, 0xCE, 0xC8, 0xEF, 0xCF, 0xC9, 0xED, 0xCD, 0xC7, 0xED, 0xCD, 0xC7, 0xEB, 0xCC, 
   0xC6, 0xEC, 0xCB, 0xC5, 0xEE, 0xCC, 0xC6, 0xEE, 0xCB, 0xC5, 0xEB, 0xC9, 0xC3, 0xEA, 0xC8, 0xC2, 
   0xEC, 0xCA, 0xC4, 0xEC, 0xCA, 0xC3, 0xEE, 0xCD, 0xC7, 0xE9, 0xC9, 0xC3, 0xEA, 0xCA, 0xC4, 0xE5, 
   0xC5, 0xBF, 0xE8, 0xC8, 0xC2, 0xE9, 0xC9, 0xC3, 0xEA, 0xCA, 0xC4, 0xE9, 0xC7, 0xC1, 0xE8, 0xC6, 
   0xC0, 0xE9, 0xC7, 0xC1, 0xEA, 0xC8, 0xC2, 0xEA, 0xC9, 0xC3, 0xEB, 0xC9, 0xC3, 0xED, 0xC8, 0xC3, 
   0xF0, 0xC9, 0xC6, 0xEB, 0xC8, 0xC4, 0xE2, 0xC5, 0xC0, 0xE3, 0xC9, 0xC3, 0xE7, 0xD1, 0xCB, 0xDF, 
   0xCA, 0xC4, 0xD6, 0xBB, 0xB3, 0xD4, 0xB4, 0xAB, 0xCE, 0xA9, 0xA1, 0xC5, 0x9C, 0x93, 0xB4, 0x8D, 
   0x81, 0x9D, 0x7A, 0x6E, 0x8F, 0x71, 0x63, 0x7E, 0x63, 0x55, 0x72, 0x57, 0x49, 0x6E, 0x53, 0x45, 
   0x6C, 0x51, 0x43, 0x6D, 0x52, 0x44, 0x6B, 0x50, 0x42, 0x6C, 0x4F, 0x40, 0x6D, 0x50, 0x41, 0x6D, 
   0x50, 0x41, 0x6C, 0x4F, 0x40, 0x6A, 0x4D, 0x3E, 0x6A, 0x4D, 0x3E, 0x6B, 0x4E, 0x3F, 0x6D, 0x50, 
   0x41, 0x6D, 0x50, 0x41, 0x6C, 0x4F, 0x40, 0x6B, 0x4E, 0x3F, 0x6B, 0x4E, 0x3F, 0x69, 0x4C, 0x3D, 
   0x6A, 0x4D, 0x3E, 0x6A, 0x4D, 0x3E, 0x6A, 0x4D, 0x3E, 0x6A, 0x4D, 0x3E, 0x68, 0x4B, 0x3C, 0x68, 
   0x4B, 0x3C, 0x68, 0x4B, 0x3C, 0x67, 0x4A, 0x3B, 0x67, 0x4A, 0x3B, 0x67, 0x4A, 0x3B, 0x67, 0x4A, 
   0x3B, 0x69, 0x4C, 0x3D, 0x69, 0x4C, 0x3D, 0x68, 0x4B, 0x3C, 0x69, 0x4C, 0x3D, 0x6A, 0x4D, 0x3E, 
   0x6B, 0x4E, 0x3F, 0x6B, 0x4E, 0x3F, 0x6B, 0x4E, 0x3F, 0x6D, 0x4F, 0x40, 0x6D, 0x4F, 0x40, 0x6B, 
   0x4E, 0x3F, 0x69, 0x4C, 0x3D, 0x6C, 0x4F, 0x40, 0x6B, 0x50, 0x40, 0x67, 0x4E, 0x3D, 0x66, 0x4D, 
   0x3D, 0x64, 0x4A, 0x3B, 0x64, 0x4A, 0x3C, 0x68, 0x4E, 0x41, 0x69, 0x4D, 0x43, 0x6A, 0x4D, 0x44, 
   0x6B, 0x4F, 0x46, 0x6C, 0x50, 0x47, 0x8D, 0x82, 0x85, 0xEA, 0xDC, 0xDE, 0xFA, 0xE7, 0xE7, 0xF6, 
   0xE1, 0xDF, 0xF8, 0xE5, 0xE1, 0xF4, 0xE2, 0xDB, 0xF2, 0xE1, 0xDA, 0xEB, 0xDB, 0xD3, 0xD7, 0xCD, 
   0xC7, 0x77, 0x74, 0x6C, 0x4E, 0x4E, 0x48, 0x43, 0x44, 0x41, 0x47, 0x47, 0x44, 0x3B, 0x40, 0x3B, 
   0x3C, 0x43, 0x40, 0x43, 0x48, 0x4B, 0x4D, 0x51, 0x57, 0x4E, 0x52, 0x57, 0xBB, 0xC0, 0xC3, 0xE2, 
   0xE4, 0xE8, 0x51, 0x4E, 0x57, 0x51, 0x52, 0x5A, 0x4C, 0x4D, 0x57, 0x3F, 0x44, 0x4D, 0x4C, 0x53, 
   0x5E, 0x69, 0x72, 0x7D, 0x55, 0x62, 0x6C, 0x52, 0x5F, 0x69, 0x63, 0x6B, 0x75, 0x64, 0x62, 0x6B, 
   0xA8, 0x9B, 0xA0, 0xD7, 0xBF, 0xBE, 0xDD, 0xBF, 0xBB, 0xF2, 0xCF, 0xC9, 0xF7, 0xD6, 0xD1, 0xFC, 
   0xE2, 0xDE, 0xCB, 0xB9, 0xB8, 0x6E, 0x67, 0x67, 0x5D, 0x60, 0x5F, 0x52, 0x58, 0x57, 0x61, 0x67, 
   0x66, 0x73, 0x7B, 0x7A, 0x8D, 0x97, 0x98, 0x4A, 0x57, 0x59, 0x47, 0x55, 0x58, 0x49, 0x58, 0x5B, 
   0x52, 0x65, 0x69, 0x4F, 0x63, 0x69, 0x4B, 0x5D, 0x65, 0x4F, 0x5F, 0x66, 0x59, 0x62, 0x68, 0x4F, 
   0x52, 0x53, 0x2F, 0x32, 0x32, 0x4A, 0x4F, 0x4E, 0xCC, 0xD1, 0xD0, 0xF8, 0xFC, 0xFC, 0x90, 0x97, 
   0x96, 0x47, 0x4F, 0x4E, 0x4B, 0x55, 0x54, 0x58, 0x5F, 0x62, 0x60, 0x68, 0x6B, 0x4D, 0x55, 0x58, 
   0x61, 0x64, 0x68, 0x8A, 0x88, 0x8C, 0xDF, 0xD5, 0xDA, 0xD8, 0xCD, 0xD1, 0x8E, 0x8A, 0x8C, 0x91, 
   0x95, 0x96, 0x57, 0x62, 0x65, 0x56, 0x62, 0x66, 0x51, 0x57, 0x5D, 0x5E, 0x5F, 0x67, 0xF5, 0xE9, 
   0xF1, 0xFB, 0xED, 0xF4, 0xF4, 0xE6, 0xEA, 0xF8, 0xE9, 0xEB, 0xFA, 0xEB, 0xE9, 0xFB, 0xEB, 0xE9, 
   0xFB, 0xEB, 0xE8, 0xF6, 0xE7, 0xE5, 0xF5, 0xE6, 0xE4, 0xF4, 0xE5, 0xE3, 0xEB, 0xDC, 0xDA, 0xF8, 
   0xE9, 0xE7, 0xF9, 0xEA, 0xE8, 0xFB, 0xE9, 0xE8, 0xFB, 0xE8, 0xE8, 0xFA, 0xE8, 0xE7, 0xFA, 0xE8, 
   0xE7, 0xFB, 0xE9, 0xE8, 0xFB, 0xE8, 0xE7, 0xF8, 0xE8, 0xE6, 0xF6, 0xE8, 0xE5, 0xF5, 0xE6, 0xE4, 
   0xF7, 0xE8, 0xE6, 0xF7, 0xE8, 0xE6, 0xF7, 0xE8, 0xE6, 0xF7, 0xE8, 0xE6, 0xF7, 0xE8, 0xE6, 0xF8, 
   0xE9, 0xE7, 0xF8, 0xE9, 0xE7, 0xF4, 0xE5, 0xE3, 0xF7, 0xE8, 0xE6, 0xF2, 0xE3, 0xE1, 0xE8, 0xDA, 
   0xD6, 0xF3, 0xE4, 0xDE, 0xF8, 0xE5, 0xE2, 0xF1, 0xDC, 0xDA, 0xDB, 0xC8, 0xC8, 0xF0, 0xE0, 0xE1, 
   0xFC, 0xF2, 0xF2, 0xF6, 0xED, 0xEA, 0xF5, 0xEA, 0xE8, 0xD7, 0xC9, 0xC7, 0xDD, 0xCE, 0xCC, 0xE6, 
   0xD2, 0xD1, 0xB7, 0xA0, 0x9F, 0x72, 0x61, 0x5F, 0x91, 0x87, 0x85, 0x69, 0x63, 0x60, 0x3A, 0x36, 
   0x35, 0x67, 0x62, 0x62, 0xBC, 0xB2, 0xB4, 0xFE, 0xF4, 0xF6, 0xF5, 0xE7, 0xEA, 0xF4, 0xE8, 0xEA, 
   0xF3, 0xE7, 0xE8, 0xD2, 0xC8, 0xC8, 0xCF, 0xC7, 0xC4, 0xF4, 0xEF, 0xEB, 0xF4, 0xEB, 0xE8, 0xF7, 
   0xEA, 0xE9, 0xF5, 0xEB, 0xEB, 0xFF, 0xFB, 0xFC, 0xB4, 0xAF, 0xB0, 0x3D, 0x39, 0x3B, 0x56, 0x52, 
   0x55, 0xC7, 0xBE, 0xBE, 0xA3, 0x99, 0x99, 0xA9, 0x9E, 0x9E, 0xD6, 0xCA, 0xCA, 0xBC, 0xAF, 0xAF, 
   0xDA, 0xCE, 0xCE, 0xF0, 0xE6, 0xE6, 0xE2, 0xD5, 0xD5, 0xF5, 0xE7, 0xE8, 0xED, 0xE0, 0xDE, 0xF2, 
   0xDE, 0xDC, 0xF2, 0xDD, 0xD9, 0xF1, 0xDC, 0xD7, 0xEE, 0xD8, 0xD5, 0xEE, 0xD7, 0xD5, 0xED, 0xD6, 
   0xD4, 0xEE, 0xD3, 0xD2, 0xEF, 0xD3, 0xD2, 0xF1, 0xD3, 0xD2, 0xF0, 0xD2, 0xD0, 0xF0, 0xD2, 0xCF, 
   0xEF, 0xD2, 0xCE, 0xED, 0xD0, 0xCC, 0xEF, 0xD1, 0xCE, 0xED, 0xD0, 0xCD, 0xEB, 0xCF, 0xCB, 0xEC, 
   0xCD, 0xC8, 0xEE, 0xCE, 0xC7, 0xED, 0xCD, 0xC7, 0xED, 0xCD, 0xC7, 0xED, 0xCD, 0xC7, 0xEB, 0xCC, 
   0xC6, 0xED, 0xCC, 0xC5, 0xF0, 0xCC, 0xC3, 0xEC, 0xC8, 0xC0, 0xEA, 0xC6, 0xBE, 0xEA, 0xC6, 0xBE, 
   0xEE, 0xC9, 0xC1, 0xF1, 0xCC, 0xC4, 0xF0, 0xCE, 0xC6, 0xEB, 0xCC, 0xC6, 0xE5, 0xC5, 0xBF, 0xE5, 
   0xC5, 0xBF, 0xE7, 0xC7, 0xC1, 0xE7, 0xC7, 0xC1, 0xEB, 0xCB, 0xC5, 0xE9, 0xC9, 0xC3, 0xE9, 0xC9, 
   0xC3, 0xEA, 0xCA, 0xC4, 0xE8, 0xC8, 0xC2, 0xE8, 0xC8, 0xC2, 0xE5, 0xC6, 0xBF, 0xE8, 0xC6, 0xC1, 
   0xF1, 0xCE, 0xCA, 0xEB, 0xCD, 0xC8, 0xE3, 0xCB, 0xC5, 0xD2, 0xBE, 0xB8, 0xAD, 0xA0, 0x98, 0xC1, 
   0xB7, 0xAF, 0xCD, 0xBA, 0xB1, 0xCA, 0xAF, 0xA5, 0xC5, 0xA3, 0x9A, 0xB6, 0x8E, 0x85, 0xA7, 0x84, 
   0x77, 0x90, 0x72, 0x65, 0x81, 0x67, 0x58, 0x76, 0x5B, 0x4D, 0x6E, 0x53, 0x45, 0x6D, 0x52, 0x44, 
   0x6D, 0x52, 0x44, 0x6D, 0x52, 0x44, 0x6B, 0x50, 0x42, 0x6B, 0x4E, 0x3F, 0x6F, 0x52, 0x42, 0x6F, 
   0x52, 0x43, 0x6D, 0x50, 0x41, 0x6A, 0x4D, 0x3E, 0x6A, 0x4D, 0x3E, 0x6B, 0x4E, 0x3F, 0x6D, 0x50, 
   0x41, 0x6D, 0x50, 0x41, 0x6C, 0x4F, 0x40, 0x6D, 0x50, 0x41, 0x6C, 0x4F, 0x40, 0x6B, 0x4E, 0x3F, 
   0x6B, 0x4E, 0x3F, 0x6B, 0x4E, 0x3F, 0x6B, 0x4E, 0x3F, 0x6B, 0x4E, 0x3F, 0x68, 0x4B, 0x3C, 0x68, 
   0x4B, 0x3C, 0x68, 0x4B, 0x3C, 0x67, 0x4A, 0x3B, 0x67, 0x4A, 0x3B, 0x68, 0x4B, 0x3C, 0x69, 0x4C, 
   0x3D, 0x69, 0x4C, 0x3D, 0x6A, 0x4D, 0x3E, 0x69, 0x4C, 0x3F, 0x6A, 0x4C, 0x3F, 0x6B, 0x4D, 0x40, 
   0x6C, 0x4E, 0x42, 0x6C, 0x4E, 0x42, 0x6C, 0x4E, 0x42, 0x6E, 0x4F, 0x41, 0x6F, 0x50, 0x41, 0x6E, 
   0x4F, 0x40, 0x6B, 0x4E, 0x3F, 0x6A, 0x4F, 0x3F, 0x6B, 0x51, 0x41, 0x68, 0x4E, 0x3E, 0x61, 0x4A, 
   0x3B, 0x63, 0x4C, 0x3E, 0x67, 0x4F, 0x43, 0x63, 0x4B, 0x40, 0x64, 0x4A, 0x43, 0x60, 0x47, 0x40, 
   0x50, 0x36, 0x2F, 0x4B, 0x31, 0x2A, 0x76, 0x6B, 0x6D, 0xDA, 0xCB, 0xCF, 0xF8, 0xE3, 0xE4, 0xF8, 
   0xE3, 0xE1, 0xF7, 0xE3, 0xDF, 0xF4, 0xE2, 0xDB, 0xEE, 0xDF, 0xD7, 0xE7, 0xDA, 0xD6, 0xB0, 0xA9, 
   0xA4, 0x49, 0x4C, 0x47, 0x3D, 0x42, 0x3F, 0x41, 0x46, 0x45, 0x3C, 0x40, 0x3F, 0x39, 0x3F, 0x3B, 
   0x36, 0x3D, 0x3A, 0x4C, 0x51, 0x53, 0x49, 0x4D, 0x52, 0x73, 0x78, 0x7C, 0xCD, 0xD2, 0xD5, 0x8E, 
   0x91, 0x93, 0x4A, 0x4A, 0x4F, 0x4B, 0x4D, 0x52, 0x45, 0x48, 0x4E, 0x3A, 0x42, 0x49, 0x43, 0x4F, 
   0x58, 0x52, 0x61, 0x6B, 0x53, 0x63, 0x6E, 0x50, 0x60, 0x6C, 0x60, 0x6A, 0x78, 0x5E, 0x61, 0x6E, 
   0x98, 0x90, 0x97, 0xD6, 0xC3, 0xC2, 0xD2, 0xBA, 0xB5, 0xE6, 0xC8, 0xC1, 0xF4, 0xD6, 0xD0, 0xF5, 
   0xD8, 0xD4, 0xEB, 0xD6, 0xD3, 0xD0, 0xC5, 0xC3, 0x58, 0x57, 0x56, 0x72, 0x74, 0x72, 0x6A, 0x6D, 
   0x6D, 0x39, 0x3E, 0x3E, 0x57, 0x5E, 0x5E, 0x34, 0x3E, 0x3F, 0x49, 0x56, 0x59, 0x4F, 0x5D, 0x5F, 
   0x4C, 0x5F, 0x63, 0x57, 0x6A, 0x70, 0x48, 0x59, 0x60, 0x47, 0x52, 0x5A, 0x71, 0x78, 0x7C, 0x4D, 
   0x4D, 0x4E, 0x41, 0x3C, 0x3D, 0x72, 0x6B, 0x6C, 0xF4, 0xEF, 0xF0, 0xF7, 0xF4, 0xF5, 0x9F, 0x9C, 
   0x9C, 0x76, 0x74, 0x74, 0x98, 0x97, 0x97, 0x60, 0x5E, 0x62, 0x55, 0x56, 0x5A, 0x73, 0x76, 0x7A, 
   0xCC, 0xCC, 0xD0, 0xEB, 0xE5, 0xEA, 0xF8, 0xF0, 0xF5, 0xC3, 0xBB, 0xBF, 0x85, 0x84, 0x85, 0x5A, 
   0x62, 0x62, 0x65, 0x71, 0x74, 0x4D, 0x57, 0x5B, 0x4A, 0x4C, 0x53, 0xA3, 0x9B, 0xA4, 0xFD, 0xEC, 
   0xF5, 0xF8, 0xE5, 0xED, 0xFB, 0xE9, 0xEF, 0xFB, 0xEA, 0xEB, 0xFD, 0xEB, 0xEA, 0xFD, 0xEC, 0xE9, 
   0xFA, 0xEA, 0xE7, 0xF4, 0xE5, 0xE4, 0xF5, 0xE6, 0xE4, 0xF7, 0xE8, 0xE6, 0xF4, 0xE5, 0xE3, 0xFD, 
   0xEE, 0xEC, 0xF8, 0xEA, 0xE8, 0xFB, 0xE9, 0xE8, 0xFA, 0xE7, 0xE7, 0xF9, 0xE7, 0xE6, 0xF9, 0xE7, 
   0xE6, 0xFB, 0xE9, 0xE8, 0xFA, 0xE8, 0xE7, 0xF7, 0xE7, 0xE5, 0xF5, 0xE6, 0xE4, 0xF5, 0xE6, 0xE4, 
   0xF7, 0xE8, 0xE6, 0xF7, 0xE8, 0xE6, 0xF7, 0xE8, 0xE6, 0xF7, 0xE8, 0xE6, 0xF8, 0xE9, 0xE7, 0xF9, 
   0xEA, 0xE8, 0xF9, 0xEA, 0xE8, 0xF7, 0xE8, 0xE6, 0xF3, 0xE4, 0xE2, 0xEA, 0xDB, 0xD9, 0xF8, 0xE9, 
   0xE5, 0xFB, 0xE9, 0xE4, 0xF7, 0xE3, 0xE0, 0xF8, 0xE3, 0xE1, 0xFA, 0xE8, 0xE8, 0xF1, 0xE3, 0xE5, 
   0xF5, 0xE9, 0xE9, 0xF3, 0xE8, 0xE6, 0xF4, 0xEA, 0xE8, 0xFE, 0xEF, 0xEE, 0xF3, 0xE0, 0xDF, 0xE1, 
   0xC9, 0xC9, 0xD8, 0xBD, 0xBE, 0x6D, 0x5A, 0x58, 0x5E, 0x54, 0x50, 0x4D, 0x45, 0x42, 0x6D, 0x69, 
   0x66, 0xAB, 0xA5, 0xA5, 0xF9, 0xF2, 0xF4, 0xF2, 0xE6, 0xE8, 0xF4, 0xE4, 0xE7, 0xF2, 0xE3, 0xE5, 
   0xE6, 0xDA, 0xDB, 0xEC, 0xE3, 0xE3, 0xFC, 0xF5, 0xF2, 0xEB, 0xE5, 0xE2, 0xF3, 0xEA, 0xE8, 0xF8, 
   0xEB, 0xEA, 0xF8, 0xEE, 0xEE, 0xD3, 0xCA, 0xCC, 0x5E, 0x58, 0x5A, 0x47, 0x43, 0x45, 0x83, 0x81, 
   0x83, 0xC7, 0xC3, 0xC2, 0xC1, 0xBC, 0xBB, 0xE6, 0xDD, 0xDD, 0xEC, 0xE3, 0xE3, 0xAF, 0xA1, 0xA2, 
   0xF3, 0xE7, 0xE8, 0xBC, 0xA9, 0xAB, 0xD6, 0xC2, 0xC4, 0xF9, 0xE4, 0xE6, 0xED, 0xD9, 0xD8, 0xF1, 
   0xDC, 0xDB, 0xEF, 0xDB, 0xD7, 0xED, 0xDA, 0xD4, 0xEE, 0xD8, 0xD5, 0xEE, 0xD7, 0xD5, 0xEF, 0xD6, 
   0xD4, 0xED, 0xD2, 0xD1, 0xEF, 0xD2, 0xD1, 0xF0, 0xD2, 0xD1, 0xEF, 0xD1, 0xCF, 0xEF, 0xD1, 0xCE, 
   0xF0, 0xD1, 0xCE, 0xEE, 0xCF, 0xCC, 0xEE, 0xD0, 0xCD, 0xEE, 0xCF, 0xCC, 0xED, 0xCF, 0xCB, 0xEF, 
   0xCF, 0xCA, 0xF0, 0xD0, 0xCA, 0xEF, 0xCF, 0xC9, 0xED, 0xCD, 0xC7, 0xED, 0xCD, 0xC7, 0xEB, 0xCB, 
   0xC6, 0xED, 0xCC, 0xC6, 0xF0, 0xCC, 0xC4, 0xEC, 0xC8, 0xC0, 0xEB, 0xC7, 0xBF, 0xEB, 0xC7, 0xBF, 
   0xEE, 0xCA, 0xC2, 0xF2, 0xCD, 0xC5, 0xEE, 0xCC, 0xC5, 0xEA, 0xCB, 0xC5, 0xE4, 0xC4, 0xBE, 0xE2, 
   0xC2, 0xBC, 0xE3, 0xC3, 0xBD, 0xEC, 0xCC, 0xC6, 0xEC, 0xCC, 0xC6, 0xEE, 0xCE, 0xC8, 0xEB, 0xCB, 
   0xC5, 0xE9, 0xC9, 0xC3, 0xE4, 0xC4, 0xBE, 0xE8, 0xC8, 0xC2, 0xE5, 0xC5, 0xBF, 0xE5, 0xC4, 0xBF, 
   0xEE, 0xCE, 0xCB, 0xE3, 0xC9, 0xC6, 0x8C, 0x7A, 0x75, 0x5F, 0x54, 0x4D, 0x4C, 0x48, 0x40, 0x6B, 
   0x68, 0x60, 0xB9, 0xAD, 0xA2, 0xB9, 0xA5, 0x9A, 0xAD, 0x8F, 0x85, 0xA8, 0x83, 0x79, 0x98, 0x78, 
   0x6A, 0x82, 0x68, 0x5A, 0x76, 0x5D, 0x4F, 0x70, 0x55, 0x47, 0x6C, 0x51, 0x43, 0x6B, 0x50, 0x42, 
   0x6D, 0x52, 0x44, 0x6C, 0x51, 0x43, 0x70, 0x54, 0x46, 0x71, 0x53, 0x44, 0x70, 0x53, 0x43, 0x6E, 
   0x51, 0x42, 0x6C, 0x4F, 0x40, 0x6A, 0x4D, 0x3E, 0x6A, 0x4D, 0x3E, 0x6B, 0x4E, 0x3F, 0x6D, 0x50, 
   0x41, 0x6D, 0x50, 0x41, 0x6C, 0x4F, 0x40, 0x6D, 0x50, 0x41, 0x6C, 0x4F, 0x40, 0x6B, 0x4E, 0x3F, 
   0x6B, 0x4E, 0x3F, 0x6B, 0x4E, 0x3F, 0x6B, 0x4E, 0x3F, 0x6B, 0x4E, 0x3F, 0x68, 0x4B, 0x3C, 0x68, 
   0x4B, 0x3C, 0x68, 0x4B, 0x3C, 0x68, 0x4B, 0x3C, 0x68, 0x4B, 0x3C, 0x69, 0x4C, 0x3D, 0x6A, 0x4D, 
   0x3E, 0x6B, 0x4E, 0x3F, 0x6B, 0x4E, 0x3F, 0x6A, 0x4D, 0x3F, 0x6C, 0x4E, 0x41, 0x6C, 0x4E, 0x41, 
   0x6D, 0x4F, 0x42, 0x6D, 0x4F, 0x42, 0x6D, 0x4F, 0x42, 0x70, 0x50, 0x42, 0x72, 0x51, 0x42, 0x6F, 
   0x50, 0x41, 0x6D, 0x51, 0x42, 0x6A, 0x4F, 0x40, 0x66, 0x4C, 0x3C, 0x68, 0x4F, 0x3F, 0x62, 0x50, 
   0x43, 0x5F, 0x4D, 0x41, 0x55, 0x43, 0x37, 0x41, 0x2E, 0x24, 0x46, 0x32, 0x2B, 0x2B, 0x17, 0x11, 
   0x29, 0x15, 0x0F, 0x30, 0x1C, 0x15, 0x8C, 0x80, 0x85, 0xE6, 0xD7, 0xDB, 0xF9, 0xE5, 0xE8, 0xF8, 
   0xE4, 0xE3, 0xF6, 0xE3, 0xDE, 0xF4, 0xE2, 0xDA, 0xEE, 0xDE, 0xD9, 0xE1, 0xD4, 0xD4, 0x76, 0x70, 
   0x6E, 0x37, 0x3D, 0x3B, 0x3F, 0x47, 0x45, 0x3F, 0x45, 0x45, 0x40, 0x43, 0x45, 0x3A, 0x40, 0x3C, 
   0x39, 0x41, 0x3D, 0x3F, 0x43, 0x47, 0x50, 0x53, 0x59, 0x7A, 0x7E, 0x83, 0x4E, 0x53, 0x56, 0x41, 
   0x46, 0x47, 0x43, 0x49, 0x49, 0x44, 0x4B, 0x4C, 0x3C, 0x46, 0x48, 0x47, 0x55, 0x58, 0x4A, 0x5F, 
   0x64, 0x45, 0x5D, 0x64, 0x45, 0x57, 0x62, 0x5A, 0x6A, 0x78, 0x59, 0x67, 0x77, 0x66, 0x6B, 0x7A, 
   0x7C, 0x76, 0x7F, 0xDC, 0xCC, 0xCB, 0xD3, 0xBE, 0xB8, 0xD8, 0xBD, 0xB5, 0xE3, 0xC6, 0xBF, 0xF2, 
   0xD5, 0xD1, 0xEE, 0xD7, 0xD5, 0xC8, 0xBA, 0xB7, 0xB7, 0xB4, 0xB0, 0xC5, 0xC4, 0xC1, 0x7A, 0x79, 
   0x79, 0x60, 0x63, 0x63, 0x37, 0x3D, 0x3D, 0x3F, 0x47, 0x48, 0x4E, 0x5A, 0x5C, 0x4E, 0x5A, 0x5C, 
   0x4C, 0x5D, 0x60, 0x64, 0x75, 0x7A, 0x55, 0x63, 0x6B, 0x59, 0x63, 0x6C, 0x93, 0x96, 0x9B, 0x52, 
   0x4F, 0x4F, 0x79, 0x6D, 0x6D, 0xC8, 0xB6, 0xB9, 0xFD, 0xF5, 0xF8, 0xF8, 0xE9, 0xEC, 0xF7, 0xE9, 
   0xEC, 0xF5, 0xEC, 0xEE, 0xBC, 0xB0, 0xB2, 0x91, 0x8A, 0x8F, 0x5B, 0x57, 0x5C, 0x84, 0x81, 0x86, 
   0xC5, 0xC2, 0xC7, 0xF2, 0xEC, 0xF1, 0xED, 0xE1, 0xE7, 0xAE, 0xA6, 0xAA, 0xA6, 0xAA, 0xAB, 0xD1, 
   0xDC, 0xDC, 0x80, 0x8D, 0x90, 0x5A, 0x62, 0x67, 0x50, 0x4C, 0x54, 0xE5, 0xD7, 0xE2, 0xFF, 0xED, 
   0xF7, 0xFA, 0xE6, 0xEE, 0xFA, 0xE6, 0xEB, 0xFB, 0xE9, 0xEA, 0xFF, 0xEC, 0xEC, 0xFD, 0xEC, 0xE7, 
   0xFB, 0xEB, 0xE7, 0xF8, 0xEA, 0xE8, 0xF7, 0xE8, 0xE6, 0xFC, 0xED, 0xEB, 0xFB, 0xEC, 0xEA, 0xF9, 
   0xEB, 0xE9, 0xFC, 0xED, 0xEB, 0xFB, 0xE9, 0xE8, 0xF8, 0xE6, 0xE5, 0xF8, 0xE6, 0xE5, 0xF9, 0xE7, 
   0xE6, 0xFA, 0xE8, 0xE7, 0xFA, 0xE8, 0xE7, 0xF6, 0xE6, 0xE4, 0xF4, 0xE5, 0xE3, 0xF5, 0xE6, 0xE4, 
   0xF7, 0xE8, 0xE6, 0xF7, 0xE8, 0xE6, 0xF7, 0xE8, 0xE6, 0xF7, 0xE8, 0xE6, 0xF6, 0xE7, 0xE5, 0xF7, 
   0xE8, 0xE6, 0xF6, 0xE7, 0xE5, 0xF5, 0xE6, 0xE4, 0xF3, 0xE4, 0xE2, 0xF4, 0xE5, 0xE4, 0xF6, 0xE7, 
   0xE3, 0xFA, 0xE8, 0xE3, 0xF8, 0xE3, 0xE1, 0xFA, 0xE3, 0xE1, 0xF9, 0xE6, 0xE6, 0xFB, 0xEF, 0xF0, 
   0xF1, 0xE6, 0xE6, 0xEE, 0xE3, 0xE0, 0xDD, 0xD2, 0xCF, 0xF9, 0xEE, 0xEB, 0xEC, 0xD7, 0xD6, 0xDD, 
   0xC3, 0xC2, 0xDA, 0xBE, 0xBD, 0xDF, 0xCC, 0xCA, 0x62, 0x58, 0x53, 0x5B, 0x52, 0x4E, 0x9E, 0x9A, 
   0x96, 0xDC, 0xD6, 0xD5, 0xF7, 0xEE, 0xEF, 0xEB, 0xDF, 0xE1, 0xF6, 0xE3, 0xE7, 0xF0, 0xE0, 0xE3, 
   0xF7, 0xEA, 0xEB, 0xE5, 0xDC, 0xDC, 0xEC, 0xE6, 0xE2, 0xE2, 0xDF, 0xDB, 0xEF, 0xE9, 0xE5, 0xFA, 
   0xEE, 0xED, 0xF3, 0xE7, 0xE7, 0x98, 0x8C, 0x8E, 0x50, 0x48, 0x4A, 0x5C, 0x59, 0x5B, 0xA0, 0xA1, 
   0xA3, 0xB0, 0xB0, 0xAF, 0xDC, 0xDB, 0xD9, 0x9A, 0x92, 0x92, 0xA5, 0x99, 0x9A, 0xD1, 0xC5, 0xC6, 
   0xE5, 0xD4, 0xD6, 0xE7, 0xD3, 0xD5, 0xF6, 0xDE, 0xE1, 0xF0, 0xD6, 0xD9, 0xF2, 0xDA, 0xDA, 0xEE, 
   0xD8, 0xD6, 0xEC, 0xD7, 0xD3, 0xE8, 0xD6, 0xD0, 0xEB, 0xD5, 0xD2, 0xED, 0xD5, 0xD3, 0xEE, 0xD4, 
   0xD3, 0xEC, 0xD0, 0xCF, 0xEE, 0xD0, 0xCF, 0xEF, 0xD1, 0xD0, 0xEF, 0xD1, 0xCF, 0xEF, 0xD0, 0xCD, 
   0xEF, 0xD0, 0xCD, 0xED, 0xCE, 0xCB, 0xEE, 0xCF, 0xCC, 0xEE, 0xCF, 0xCC, 0xEE, 0xCF, 0xCC, 0xEF, 
   0xD0, 0xCB, 0xF0, 0xD0, 0xCA, 0xEE, 0xCE, 0xC8, 0xEC, 0xCC, 0xC6, 0xED, 0xCD, 0xC7, 0xEB, 0xCC, 
   0xC6, 0xED, 0xCB, 0xC5, 0xEE, 0xC9, 0xC1, 0xEA, 0xC5, 0xBD, 0xEC, 0xC7, 0xBF, 0xEE, 0xC9, 0xC1, 
   0xEF, 0xCA, 0xC2, 0xF2, 0xCC, 0xC4, 0xED, 0xCA, 0xC3, 0xE8, 0xC8, 0xC2, 0xE7, 0xC7, 0xC1, 0xE9, 
   0xC8, 0xC2, 0xE3, 0xC3, 0xBD, 0xE9, 0xC9, 0xC3, 0xEC, 0xCC, 0xC6, 0xEC, 0xCF, 0xC8, 0xE9, 0xCB, 
   0xC5, 0xED, 0xCF, 0xC9, 0xEA, 0xCC, 0xC5, 0xDD, 0xC0, 0xB9, 0xE9, 0xCB, 0xC4, 0xD7, 0xB9, 0xB4, 
   0xE5, 0xC8, 0xC4, 0xCE, 0xB9, 0xB4, 0x5C, 0x50, 0x49, 0x47, 0x42, 0x3B, 0x5D, 0x60, 0x57, 0x5C, 
   0x62, 0x59, 0x88, 0x82, 0x76, 0x61, 0x50, 0x45, 0x70, 0x54, 0x4A, 0x9E, 0x7A, 0x6F, 0x87, 0x6A, 
   0x5D, 0x72, 0x5D, 0x4E, 0x6E, 0x57, 0x48, 0x6F, 0x53, 0x45, 0x6E, 0x53, 0x45, 0x73, 0x58, 0x4A, 
   0x65, 0x4B, 0x3D, 0x61, 0x46, 0x38, 0x6D, 0x52, 0x44, 0x6E, 0x51, 0x42, 0x6E, 0x51, 0x42, 0x6D, 
   0x50, 0x41, 0x6C, 0x4F, 0x40, 0x6A, 0x4D, 0x3E, 0x6A, 0x4D, 0x3E, 0x6B, 0x4E, 0x3F, 0x6D, 0x50, 
   0x41, 0x6D, 0x50, 0x41, 0x6C, 0x4F, 0x40, 0x6B, 0x4E, 0x3F, 0x6B, 0x4E, 0x3F, 0x69, 0x4C, 0x3D, 
   0x69, 0x4C, 0x3D, 0x69, 0x4C, 0x3D, 0x69, 0x4C, 0x3D, 0x6A, 0x4D, 0x3E, 0x69, 0x4C, 0x3D, 0x68, 
   0x4B, 0x3C, 0x69, 0x4C, 0x3D, 0x69, 0x4C, 0x3D, 0x69, 0x4C, 0x3D, 0x6A, 0x4D, 0x3E, 0x6B, 0x4E, 
   0x3F, 0x6C, 0x4F, 0x40, 0x6D, 0x50, 0x41, 0x6C, 0x4E, 0x41, 0x6D, 0x4F, 0x42, 0x6E, 0x50, 0x43, 
   0x6F, 0x51, 0x44, 0x6F, 0x51, 0x44, 0x6E, 0x51, 0x44, 0x72, 0x52, 0x44, 0x74, 0x53, 0x44, 0x71, 
   0x51, 0x42, 0x6E, 0x51, 0x42, 0x69, 0x4F, 0x3F, 0x67, 0x4E, 0x3D, 0x62, 0x4B, 0x3B, 0x59, 0x48, 
   0x3C, 0x3F, 0x2E, 0x22, 0x1D, 0x0B, 0x03, 0x30, 0x1F, 0x16, 0x3E, 0x2D, 0x25, 0x22, 0x10, 0x0A, 
   0x29, 0x17, 0x11, 0x26, 0x13, 0x0C, 0x99, 0x89, 0x91, 0xE7, 0xD3, 0xDA, 0xFA, 0xE3, 0xE6, 0xFA, 
   0xE1, 0xE0, 0xF2, 0xDE, 0xD7, 0xF0, 0xE0, 0xD4, 0xEE, 0xE2, 0xD7, 0xA3, 0x9B, 0x97, 0x41, 0x3F, 
   0x3E, 0x3C, 0x43, 0x44, 0x3A, 0x45, 0x46, 0x3A, 0x45, 0x44, 0x34, 0x3D, 0x3D, 0x30, 0x39, 0x37, 
   0x34, 0x3C, 0x3B, 0x4D, 0x55, 0x56, 0xAB, 0xB3, 0xB5, 0x56, 0x5E, 0x60, 0x2C, 0x34, 0x35, 0x4F, 
   0x57, 0x58, 0x43, 0x4A, 0x4D, 0x3D, 0x44, 0x48, 0x59, 0x62, 0x67, 0x59, 0x64, 0x6B, 0x4B, 0x5A, 
   0x61, 0x4B, 0x5C, 0x65, 0x43, 0x4F, 0x5A, 0x68, 0x74, 0x7F, 0x61, 0x6E, 0x79, 0x60, 0x69, 0x73, 
   0x5B, 0x5F, 0x66, 0xCB, 0xC7, 0xCA, 0xCE, 0xC6, 0xC8, 0xD3, 0xBB, 0xBC, 0xD7, 0xBA, 0xB9, 0xE5, 
   0xC6, 0xC2, 0xDF, 0xBE, 0xBB, 0xC7, 0xB1, 0xAE, 0xFA, 0xEE, 0xEE, 0xDD, 0xD1, 0xD0, 0x60, 0x57, 
   0x55, 0xC1, 0xBA, 0xB9, 0x50, 0x4E, 0x4E, 0x4B, 0x4D, 0x50, 0x45, 0x51, 0x54, 0x44, 0x54, 0x57, 
   0x50, 0x62, 0x67, 0x65, 0x7B, 0x80, 0x50, 0x60, 0x67, 0x83, 0x84, 0x8C, 0xCD, 0xC5, 0xCB, 0x79, 
   0x73, 0x76, 0x91, 0x85, 0x88, 0xF7, 0xE6, 0xEA, 0xFF, 0xF3, 0xF6, 0xFB, 0xF1, 0xF3, 0xBB, 0xB4, 
   0xB6, 0xA5, 0x9A, 0x9C, 0xD0, 0xC3, 0xC6, 0xC3, 0xBF, 0xC2, 0x8B, 0x87, 0x8A, 0x52, 0x4E, 0x51, 
   0xD0, 0xC7, 0xCB, 0xFD, 0xF2, 0xF4, 0xE2, 0xCF, 0xD2, 0xC2, 0xB3, 0xB5, 0xCE, 0xC9, 0xC9, 0x7A, 
   0x7E, 0x7E, 0x57, 0x61, 0x63, 0x55, 0x5D, 0x61, 0x5D, 0x5A, 0x62, 0xCB, 0xBF, 0xC9, 0xFF, 0xF1, 
   0xF4, 0xFA, 0xE7, 0xE8, 0xF9, 0xE7, 0xE8, 0xFC, 0xEB, 0xEB, 0xF9, 0xE8, 0xE7, 0xF9, 0xEA, 0xE7, 
   0xFC, 0xEE, 0xEC, 0xF9, 0xE8, 0xE6, 0xF8, 0xE7, 0xE6, 0xFA, 0xE9, 0xE7, 0xFB, 0xEA, 0xE9, 0xFB, 
   0xEA, 0xE9, 0xFA, 0xE9, 0xE8, 0xFA, 0xE8, 0xE7, 0xF9, 0xE7, 0xE6, 0xF8, 0xE6, 0xE5, 0xF9, 0xE7, 
   0xE6, 0xF9, 0xE7, 0xE6, 0xF8, 0xE6, 0xE5, 0xF6, 0xE5, 0xE3, 0xF5, 0xE6, 0xE4, 0xF6, 0xE7, 0xE4, 
   0xF7, 0xE8, 0xE5, 0xF7, 0xE8, 0xE5, 0xF5, 0xE6, 0xE4, 0xF5, 0xE6, 0xE3, 0xF4, 0xE5, 0xE2, 0xF5, 
   0xE6, 0xE3, 0xF4, 0xE5, 0xE3, 0xF3, 0xE4, 0xE2, 0xF4, 0xE5, 0xE3, 0xF8, 0xEA, 0xE7, 0xF6, 0xE6, 
   0xE3, 0xF9, 0xE7, 0xE4, 0xF5, 0xE2, 0xE0, 0xF7, 0xE3, 0xE2, 0xF9, 0xE9, 0xE8, 0xF7, 0xE7, 0xE7, 
   0xF5, 0xEA, 0xE9, 0xC9, 0xBB, 0xB9, 0xBF, 0xAF, 0xAD, 0xEF, 0xDF, 0xDD, 0xEC, 0xD9, 0xD7, 0xCB, 
   0xB5, 0xB4, 0xD4, 0xBF, 0xBE, 0xFF, 0xF6, 0xF2, 0xE9, 0xE0, 0xDB, 0xE2, 0xD8, 0xD7, 0xF7, 0xEF, 
   0xF0, 0xF5, 0xE8, 0xEB, 0xF5, 0xE5, 0xE8, 0xF9, 0xE9, 0xEA, 0xF5, 0xEC, 0xE8, 0xE1, 0xD9, 0xD7, 
   0xA1, 0x98, 0x95, 0xBF, 0xB5, 0xB3, 0xF7, 0xEC, 0xEB, 0xF8, 0xEE, 0xED, 0xF6, 0xEB, 0xEA, 0xF6, 
   0xEA, 0xEA, 0xF9, 0xED, 0xEF, 0x96, 0x8B, 0x8D, 0x8C, 0x83, 0x85, 0x8E, 0x88, 0x8B, 0x9B, 0x97, 
   0x99, 0xDC, 0xDA, 0xD8, 0xAE, 0xAA, 0xA8, 0x4B, 0x43, 0x41, 0x74, 0x67, 0x67, 0xD8, 0xC8, 0xC7, 
   0xE9, 0xD8, 0xD8, 0xF4, 0xE0, 0xDF, 0xF0, 0xD2, 0xD1, 0xF4, 0xD7, 0xD6, 0xF0, 0xD4, 0xD2, 0xF2, 
   0xD7, 0xD4, 0xED, 0xD4, 0xD0, 0xEC, 0xD4, 0xCF, 0xEF, 0xD4, 0xD0, 0xF1, 0xD4, 0xD1, 0xEE, 0xD1, 
   0xCE, 0xED, 0xCF, 0xCD, 0xEE, 0xD0, 0xCD, 0xEF, 0xD0, 0xCE, 0xEE, 0xD0, 0xCD, 0xED, 0xCF, 0xCC, 
   0xEE, 0xCF, 0xCC, 0xF0, 0xD0, 0xCD, 0xEF, 0xCF, 0xCC, 0xEF, 0xCE, 0xCB, 0xF0, 0xCE, 0xCB, 0xEF, 
   0xCE, 0xC9, 0xEE, 0xCE, 0xC7, 0xEC, 0xCC, 0xC6, 0xEB, 0xCB, 0xC5, 0xEB, 0xCB, 0xC5, 0xEB, 0xCB, 
   0xC5, 0xEC, 0xCB, 0xC5, 0xEA, 0xC6, 0xC0, 0xE7, 0xC4, 0xBD, 0xEB, 0xC8, 0xC1, 0xED, 0xCA, 0xC3, 
   0xED, 0xCA, 0xC3, 0xF0, 0xCC, 0xC5, 0xEA, 0xCA, 0xC2, 0xE4, 0xC7, 0xC0, 0xE5, 0xC7, 0xC1, 0xC5, 
   0xA7, 0xA0, 0xA5, 0x86, 0x80, 0xE0, 0xC2, 0xBB, 0xF2, 0xD4, 0xCD, 0xE9, 0xCD, 0xC4, 0xEB, 0xCF, 
   0xC6, 0xE2, 0xC4, 0xBD, 0xCF, 0xB0, 0xA9, 0xDC, 0xBD, 0xB6, 0xB0, 0x92, 0x8B, 0x8A, 0x68, 0x65, 
   0xAA, 0x86, 0x86, 0x7C, 0x60, 0x5E, 0x6A, 0x55, 0x51, 0x4A, 0x3A, 0x35, 0x69, 0x5D, 0x56, 0x64, 
   0x59, 0x52, 0x4F, 0x48, 0x3D, 0x43, 0x35, 0x29, 0x78, 0x60, 0x56, 0x8A, 0x6C, 0x61, 0x78, 0x5B, 
   0x4E, 0x6E, 0x54, 0x46, 0x6E, 0x53, 0x45, 0x70, 0x54, 0x45, 0x70, 0x54, 0x45, 0x75, 0x59, 0x4A, 
   0x67, 0x4B, 0x3C, 0x52, 0x36, 0x27, 0x4A, 0x2E, 0x20, 0x60, 0x44, 0x35, 0x6B, 0x4E, 0x3F, 0x6E, 
   0x51, 0x42, 0x6E, 0x51, 0x42, 0x66, 0x49, 0x3A, 0x6B, 0x4E, 0x3F, 0x6C, 0x4F, 0x40, 0x6B, 0x4E, 
   0x3F, 0x6B, 0x4E, 0x3F, 0x6B, 0x4E, 0x3F, 0x6A, 0x4D, 0x3E, 0x6A, 0x4D, 0x3E, 0x6A, 0x4D, 0x3E, 
   0x69, 0x4D, 0x3B, 0x68, 0x4D, 0x3B, 0x68, 0x4C, 0x3A, 0x69, 0x4D, 0x3B, 0x69, 0x4D, 0x3B, 0x69, 
   0x4D, 0x3B, 0x68, 0x4D, 0x3C, 0x68, 0x4D, 0x3F, 0x6A, 0x4E, 0x3F, 0x6A, 0x4E, 0x40, 0x6A, 0x4F, 
   0x40, 0x6B, 0x50, 0x41, 0x6C, 0x51, 0x42, 0x6F, 0x4F, 0x42, 0x6F, 0x50, 0x43, 0x71, 0x51, 0x44, 
   0x71, 0x52, 0x45, 0x71, 0x52, 0x45, 0x72, 0x53, 0x46, 0x74, 0x53, 0x45, 0x74, 0x54, 0x45, 0x70, 
   0x52, 0x44, 0x6C, 0x51, 0x42, 0x69, 0x4F, 0x42, 0x67, 0x4E, 0x41, 0x4B, 0x36, 0x29, 0x2C, 0x1E, 
   0x16, 0x2B, 0x1D, 0x16, 0x1C, 0x0E, 0x08, 0x36, 0x27, 0x1F, 0x30, 0x1E, 0x18, 0x21, 0x0E, 0x08, 
   0x23, 0x12, 0x0C, 0x2A, 0x1B, 0x14, 0xAB, 0x99, 0xA2, 0xF9, 0xE3, 0xEB, 0xF6, 0xDD, 0xDF, 0xF9, 
   0xE0, 0xDD, 0xF5, 0xE1, 0xDA, 0xF0, 0xE2, 0xD4, 0xDC, 0xD4, 0xC7, 0x6A, 0x65, 0x5F, 0x3F, 0x40, 
   0x3E, 0x39, 0x42, 0x42, 0x3B, 0x47, 0x49, 0x3A, 0x49, 0x48, 0x33, 0x42, 0x3F, 0x3A, 0x46, 0x44, 
   0x28, 0x32, 0x32, 0x44, 0x4F, 0x4F, 0x50, 0x5A, 0x5A, 0x4D, 0x57, 0x57, 0x31, 0x3C, 0x3C, 0x34, 
   0x3E, 0x3F, 0x46, 0x4C, 0x52, 0x3D, 0x44, 0x4B, 0x5B, 0x62, 0x6B, 0x4B, 0x54, 0x5D, 0x4F, 0x57, 
   0x62, 0x5F, 0x68, 0x73, 0x4F, 0x55, 0x60, 0x52, 0x59, 0x63, 0x6E, 0x78, 0x80, 0x56, 0x63, 0x69, 
   0x55, 0x60, 0x66, 0x67, 0x6D, 0x73, 0x54, 0x57, 0x5E, 0xB3, 0x9E, 0xA7, 0xE9, 0xCE, 0xD1, 0xD7, 
   0xB8, 0xB4, 0xDF, 0xBC, 0xB8, 0xEC, 0xCB, 0xCA, 0xF0, 0xD2, 0xD5, 0xE5, 0xCE, 0xCE, 0x8F, 0x7E, 
   0x7B, 0xC7, 0xB9, 0xB7, 0xCF, 0xC5, 0xC7, 0x84, 0x84, 0x87, 0x3F, 0x4B, 0x4E, 0x4D, 0x5F, 0x63, 
   0x46, 0x59, 0x5F, 0x49, 0x61, 0x67, 0x3B, 0x4C, 0x51, 0xAB, 0xA5, 0xAC, 0xDB, 0xCC, 0xD3, 0xC8, 
   0xC0, 0xC5, 0xCA, 0xC1, 0xC5, 0xFC, 0xEF, 0xF3, 0xFC, 0xF5, 0xF8, 0xDA, 0xD9, 0xDB, 0x5E, 0x5C, 
   0x5E, 0xB1, 0xAB, 0xAD, 0xFC, 0xF3, 0xF6, 0xE3, 0xE3, 0xE6, 0xAD, 0xAC, 0xAE, 0x91, 0x8D, 0x8F, 
   0xF1, 0xE7, 0xE8, 0xF8, 0xE8, 0xEA, 0xFC, 0xE8, 0xE8, 0xF0, 0xDF, 0xDE, 0x5D, 0x53, 0x53, 0x3C, 
   0x3D, 0x3C, 0x45, 0x4D, 0x4E, 0x3E, 0x44, 0x48, 0x85, 0x83, 0x8B, 0xEC, 0xE2, 0xEC, 0xFA, 0xEC, 
   0xEA, 0xF8, 0xE9, 0xE5, 0xF5, 0xE6, 0xE4, 0xF7, 0xE8, 0xE6, 0xF5, 0xE8, 0xE5, 0xF1, 0xE5, 0xE3, 
   0xE7, 0xD7, 0xD6, 0xFC, 0xE9, 0xE9, 0xFB, 0xE9, 0xE8, 0xFD, 0xEB, 0xEA, 0xFB, 0xE9, 0xE8, 0xFB, 
   0xE9, 0xE8, 0xFB, 0xE9, 0xE8, 0xFA, 0xE8, 0xE7, 0xF9, 0xE7, 0xE6, 0xF8, 0xE6, 0xE5, 0xF9, 0xE7, 
   0xE6, 0xF7, 0xE5, 0xE4, 0xF6, 0xE4, 0xE3, 0xF6, 0xE6, 0xE4, 0xF6, 0xE7, 0xE4, 0xF6, 0xE7, 0xE4, 
   0xF7, 0xE8, 0xE5, 0xF7, 0xE8, 0xE5, 0xF5, 0xE6, 0xE3, 0xF5, 0xE6, 0xE3, 0xF6, 0xE7, 0xE4, 0xF6, 
   0xE7, 0xE4, 0xF6, 0xE7, 0xE4, 0xF5, 0xE6, 0xE3, 0xF4, 0xE5, 0xE2, 0xF5, 0xE7, 0xE3, 0xF8, 0xE7, 
   0xE5, 0xF9, 0xE7, 0xE6, 0xF8, 0xE6, 0xE5, 0xF7, 0xE6, 0xE5, 0xF7, 0xE5, 0xE4, 0xF7, 0xE5, 0xE3, 
   0xD4, 0xC3, 0xC2, 0x9E, 0x8B, 0x8B, 0xF2, 0xE6, 0xE5, 0xEC, 0xDD, 0xDC, 0xEA, 0xD7, 0xD7, 0xA8, 
   0x97, 0x96, 0xBC, 0xAC, 0xAC, 0xFC, 0xED, 0xE8, 0xFA, 0xEC, 0xE7, 0xF9, 0xEC, 0xEC, 0xF2, 0xE6, 
   0xEA, 0xF2, 0xE2, 0xE6, 0xF4, 0xDF, 0xE4, 0xF7, 0xE2, 0xE2, 0xDC, 0xD7, 0xCF, 0xA2, 0x9D, 0x96, 
   0x9A, 0x93, 0x8E, 0xDF, 0xD5, 0xD3, 0xFA, 0xEA, 0xEB, 0xF8, 0xE7, 0xE8, 0xF7, 0xE9, 0xE9, 0xDA, 
   0xCE, 0xCF, 0xBE, 0xB3, 0xB5, 0x68, 0x5C, 0x5E, 0xBA, 0xB0, 0xB3, 0xCF, 0xC5, 0xC8, 0xE8, 0xDE, 
   0xE1, 0x77, 0x70, 0x6D, 0x58, 0x50, 0x4D, 0x78, 0x6D, 0x6A, 0xE5, 0xDB, 0xD9, 0xF1, 0xE2, 0xE0, 
   0xEA, 0xD9, 0xD8, 0xF0, 0xD7, 0xD5, 0xF3, 0xD5, 0xD1, 0xF4, 0xD7, 0xD2, 0xF2, 0xD5, 0xD1, 0xF3, 
   0xD6, 0xD1, 0xF0, 0xD3, 0xCF, 0xF1, 0xD3, 0xCF, 0xF3, 0xD4, 0xD0, 0xF3, 0xD4, 0xD1, 0xF0, 0xD0, 
   0xCD, 0xEE, 0xCF, 0xCC, 0xEF, 0xD0, 0xCD, 0xEF, 0xD0, 0xCD, 0xEE, 0xD0, 0xCC, 0xED, 0xCF, 0xCB, 
   0xEF, 0xD0, 0xCD, 0xF1, 0xD0, 0xCD, 0xEE, 0xCC, 0xC9, 0xF0, 0xCD, 0xCA, 0xF0, 0xCD, 0xCA, 0xEE, 
   0xCD, 0xC8, 0xED, 0xCD, 0xC7, 0xED, 0xCD, 0xC7, 0xEB, 0xCB, 0xC5, 0xEA, 0xCA, 0xC4, 0xEB, 0xCB, 
   0xC5, 0xEA, 0xCA, 0xC4, 0xE8, 0xC6, 0xC0, 0xE9, 0xC7, 0xC1, 0xEF, 0xCD, 0xC7, 0xEC, 0xCA, 0xC4, 
   0xEA, 0xC8, 0xC2, 0xE9, 0xC6, 0xC0, 0xE7, 0xC7, 0xC0, 0xE0, 0xC4, 0xBC, 0xDF, 0xC1, 0xBA, 0xB1, 
   0x93, 0x8C, 0xA8, 0x8B, 0x85, 0xF4, 0xD9, 0xD2, 0xE8, 0xCA, 0xC3, 0xE9, 0xCC, 0xC2, 0xE8, 0xCB, 
   0xC1, 0xDC, 0xBE, 0xB7, 0xD6, 0xB7, 0xB1, 0xF3, 0xD3, 0xCE, 0xA6, 0x88, 0x83, 0xBD, 0x98, 0x97, 
   0xCB, 0xA3, 0xA6, 0xAA, 0x8A, 0x8A, 0xA5, 0x8A, 0x88, 0x85, 0x6C, 0x67, 0x88, 0x6E, 0x69, 0x6E, 
   0x54, 0x4E, 0x52, 0x47, 0x3D, 0x70, 0x61, 0x56, 0x8F, 0x78, 0x6D, 0x7F, 0x62, 0x57, 0x74, 0x56, 
   0x49, 0x73, 0x55, 0x48, 0x72, 0x55, 0x47, 0x71, 0x54, 0x45, 0x71, 0x54, 0x45, 0x72, 0x55, 0x46, 
   0x72, 0x55, 0x46, 0x61, 0x44, 0x35, 0x52, 0x35, 0x26, 0x63, 0x46, 0x37, 0x6A, 0x4D, 0x3E, 0x6C, 
   0x4F, 0x40, 0x6C, 0x4F, 0x40, 0x64, 0x47, 0x38, 0x6E, 0x51, 0x42, 0x70, 0x53, 0x44, 0x6D, 0x50, 
   0x41, 0x6B, 0x4E, 0x3F, 0x69, 0x4C, 0x3D, 0x68, 0x4B, 0x3C, 0x68, 0x4B, 0x3C, 0x68, 0x4B, 0x3C, 
   0x6A, 0x4F, 0x3C, 0x69, 0x4E, 0x3B, 0x69, 0x4E, 0x3A, 0x69, 0x4E, 0x3B, 0x69, 0x4E, 0x3B, 0x69, 
   0x4E, 0x3B, 0x68, 0x4D, 0x3D, 0x68, 0x4D, 0x41, 0x6A, 0x4F, 0x41, 0x6A, 0x4F, 0x42, 0x6A, 0x4F, 
   0x41, 0x6C, 0x51, 0x43, 0x6C, 0x51, 0x43, 0x70, 0x50, 0x43, 0x71, 0x51, 0x44, 0x72, 0x52, 0x45, 
   0x72, 0x52, 0x45, 0x72, 0x53, 0x46, 0x73, 0x54, 0x47, 0x75, 0x54, 0x46, 0x75, 0x55, 0x46, 0x70, 
   0x52, 0x45, 0x6B, 0x50, 0x44, 0x66, 0x4D, 0x43, 0x5E, 0x47, 0x3D, 0x39, 0x25, 0x1B, 0x29, 0x1D, 
   0x16, 0x3B, 0x2F, 0x2A, 0x37, 0x2A, 0x24, 0x30, 0x21, 0x1B, 0x36, 0x26, 0x21, 0x27, 0x14, 0x0F, 
   0x2E, 0x1E, 0x18, 0x29, 0x1C, 0x16, 0xCD, 0xBF, 0xC7, 0xF0, 0xE0, 0xE6, 0xF9, 0xE6, 0xE8, 0xEE, 
   0xDB, 0xD8, 0xEB, 0xDC, 0xD3, 0xE5, 0xDB, 0xCF, 0xBE, 0xB7, 0xAB, 0x48, 0x43, 0x3E, 0x45, 0x45, 
   0x44, 0x3E, 0x47, 0x48, 0x40, 0x4C, 0x4E, 0x3F, 0x4D, 0x4D, 0x37, 0x45, 0x43, 0x55, 0x61, 0x60, 
   0x35, 0x3E, 0x3F, 0x32, 0x3C, 0x3C, 0x3D, 0x47, 0x47, 0x3B, 0x45, 0x45, 0x33, 0x3D, 0x3D, 0x44, 
   0x4D, 0x4E, 0x36, 0x3C, 0x41, 0x45, 0x4C, 0x52, 0x57, 0x5F, 0x67, 0x3E, 0x47, 0x50, 0x4D, 0x57, 
   0x61, 0x5A, 0x64, 0x6E, 0x70, 0x77, 0x82, 0x60, 0x69, 0x73, 0x58, 0x64, 0x6B, 0x59, 0x65, 0x6C, 
   0x5B, 0x65, 0x6C, 0x5D, 0x61, 0x66, 0x3F, 0x40, 0x47, 0xB8, 0xAD, 0xB4, 0xF0, 0xDD, 0xDF, 0xD6, 
   0xBD, 0xBB, 0xD7, 0xBA, 0xB7, 0xEA, 0xCB, 0xCB, 0xF7, 0xD8, 0xDB, 0xE7, 0xCD, 0xCE, 0xEB, 0xD4, 
   0xD2, 0xA9, 0x97, 0x96, 0x95, 0x89, 0x8B, 0xB4, 0xB5, 0xB7, 0x48, 0x53, 0x57, 0x4B, 0x5D, 0x61, 
   0x47, 0x58, 0x5F, 0x55, 0x6B, 0x71, 0x46, 0x56, 0x5C, 0x4E, 0x49, 0x50, 0xB2, 0xA3, 0xAC, 0xDC, 
   0xD4, 0xD9, 0xC1, 0xBA, 0xBD, 0xFF, 0xFE, 0xFF, 0xE8, 0xE6, 0xE7, 0xA3, 0xA3, 0xA5, 0xB3, 0xB3, 
   0xB5, 0xF0, 0xEE, 0xEF, 0xFF, 0xFF, 0xFF, 0xA1, 0xA4, 0xA7, 0x4F, 0x51, 0x52, 0xDE, 0xDC, 0xDC, 
   0xFE, 0xF7, 0xF7, 0xF5, 0xE8, 0xE9, 0xFF, 0xF4, 0xF3, 0xC5, 0xBA, 0xB8, 0x98, 0x93, 0x93, 0x9E, 
   0xA0, 0xA0, 0x45, 0x4B, 0x4D, 0x44, 0x47, 0x4C, 0xD6, 0xD0, 0xD7, 0xFC, 0xED, 0xF6, 0xF8, 0xE9, 
   0xE7, 0xF7, 0xE8, 0xE5, 0xF6, 0xE7, 0xE5, 0xF6, 0xE8, 0xE6, 0xF4, 0xE6, 0xE4, 0xE2, 0xD4, 0xD2, 
   0xEC, 0xDC, 0xDA, 0xFE, 0xEC, 0xEB, 0xFA, 0xE8, 0xE7, 0xFB, 0xE9, 0xE8, 0xFB, 0xE9, 0xE8, 0xFA, 
   0xE8, 0xE7, 0xF9, 0xE7, 0xE6, 0xF9, 0xE7, 0xE6, 0xF9, 0xE7, 0xE6, 0xF7, 0xE5, 0xE4, 0xF7, 0xE5, 
   0xE4, 0xF6, 0xE4, 0xE3, 0xF8, 0xE5, 0xE4, 0xF7, 0xE7, 0xE5, 0xF6, 0xE7, 0xE4, 0xF6, 0xE7, 0xE4, 
   0xF7, 0xE8, 0xE5, 0xF7, 0xE8, 0xE5, 0xF7, 0xE8, 0xE5, 0xF8, 0xE9, 0xE6, 0xF8, 0xE9, 0xE6, 0xF8, 
   0xE9, 0xE6, 0xF8, 0xE9, 0xE6, 0xF7, 0xE8, 0xE5, 0xF6, 0xE7, 0xE4, 0xF6, 0xE7, 0xE4, 0xF8, 0xE7, 
   0xE5, 0xF9, 0xE7, 0xE6, 0xF8, 0xE6, 0xE5, 0xF7, 0xE5, 0xE4, 0xF7, 0xE5, 0xE4, 0xF1, 0xDF, 0xDE, 
   0xF3, 0xE3, 0xE2, 0xF4, 0xE6, 0xE5, 0xF8, 0xE7, 0xE6, 0xE5, 0xD2, 0xD1, 0xEF, 0xDC, 0xDB, 0xE7, 
   0xD6, 0xD5, 0xF4, 0xE5, 0xE5, 0xFA, 0xEA, 0xE6, 0xF7, 0xEB, 0xE4, 0xEF, 0xE3, 0xE2, 0xF1, 0xE5, 
   0xE8, 0xF0, 0xE1, 0xE5, 0xF5, 0xE2, 0xE5, 0xF1, 0xDC, 0xDC, 0xC2, 0xB9, 0xB2, 0xCB, 0xC1, 0xBB, 
   0xF8, 0xED, 0xE9, 0xF5, 0xEA, 0xE8, 0xF7, 0xE5, 0xE6, 0xF3, 0xDF, 0xE1, 0xEE, 0xDF, 0xE0, 0xB1, 
   0xA5, 0xA7, 0x7F, 0x73, 0x75, 0xAC, 0xA0, 0xA2, 0xB5, 0xAB, 0xAD, 0xE0, 0xD5, 0xD9, 0x92, 0x86, 
   0x89, 0x5D, 0x53, 0x50, 0x81, 0x78, 0x75, 0xDE, 0xD3, 0xD1, 0xF9, 0xEC, 0xEA, 0xED, 0xDA, 0xD9, 
   0xEF, 0xDA, 0xD9, 0xEC, 0xD2, 0xD0, 0xF1, 0xD4, 0xD0, 0xF3, 0xD6, 0xD2, 0xEF, 0xD2, 0xCE, 0xF1, 
   0xD4, 0xD0, 0xF1, 0xD4, 0xD0, 0xF1, 0xD4, 0xD0, 0xF1, 0xD3, 0xD0, 0xF1, 0xD2, 0xCF, 0xEF, 0xD0, 
   0xCD, 0xEF, 0xD0, 0xCD, 0xF0, 0xD1, 0xCE, 0xEF, 0xD0, 0xCD, 0xED, 0xCF, 0xCB, 0xEE, 0xD1, 0xCD, 
   0xF1, 0xD2, 0xCF, 0xEF, 0xCE, 0xCB, 0xEC, 0xCB, 0xC8, 0xF1, 0xCE, 0xCB, 0xEF, 0xCC, 0xC9, 0xED, 
   0xCC, 0xC7, 0xED, 0xCD, 0xC7, 0xEC, 0xCC, 0xC6, 0xED, 0xCD, 0xC7, 0xED, 0xCD, 0xC7, 0xEB, 0xCB, 
   0xC5, 0xE8, 0xC8, 0xC2, 0xE7, 0xC5, 0xBF, 0xEA, 0xC8, 0xC2, 0xF0, 0xCE, 0xC8, 0xEA, 0xC8, 0xC2, 
   0xE7, 0xC5, 0xBF, 0xE6, 0xC4, 0xBE, 0xE4, 0xC3, 0xBD, 0xE4, 0xC4, 0xBE, 0xDA, 0xBA, 0xB4, 0xA9, 
   0x89, 0x83, 0xCD, 0xAD, 0xA8, 0xF1, 0xD3, 0xCD, 0xEC, 0xCC, 0xC6, 0xE4, 0xC5, 0xBD, 0xEB, 0xCC, 
   0xC5, 0xE7, 0xCA, 0xC4, 0xE3, 0xC7, 0xC2, 0xA6, 0x8B, 0x87, 0xB6, 0x9D, 0x99, 0xEA, 0xCB, 0xCA, 
   0xDA, 0xB7, 0xB9, 0xE8, 0xCC, 0xCB, 0xE8, 0xD0, 0xCC, 0xE8, 0xCF, 0xCB, 0xD3, 0xB8, 0xB3, 0xA1, 
   0x84, 0x7F, 0x9E, 0x8A, 0x80, 0xB0, 0x99, 0x90, 0x91, 0x75, 0x6B, 0x7C, 0x5D, 0x52, 0x73, 0x55, 
   0x48, 0x70, 0x54, 0x46, 0x70, 0x55, 0x46, 0x71, 0x54, 0x45, 0x71, 0x54, 0x45, 0x70, 0x53, 0x44, 
   0x6F, 0x52, 0x43, 0x6E, 0x51, 0x42, 0x6D, 0x50, 0x41, 0x6E, 0x51, 0x42, 0x6A, 0x4D, 0x3E, 0x6A, 
   0x4D, 0x3E, 0x6A, 0x4D, 0x3E, 0x68, 0x4B, 0x3C, 0x6D, 0x50, 0x41, 0x6E, 0x51, 0x42, 0x6D, 0x50, 
   0x41, 0x6A, 0x4D, 0x3E, 0x6A, 0x4D, 0x3E, 0x6A, 0x4D, 0x3E, 0x6A, 0x4D, 0x3E, 0x6A, 0x4D, 0x3E, 
   0x6B, 0x4F, 0x3E, 0x6B, 0x4F, 0x3E, 0x6A, 0x4E, 0x3D, 0x6B, 0x4F, 0x3E, 0x6B, 0x4F, 0x3E, 0x6B, 
   0x4F, 0x3E, 0x6A, 0x4F, 0x3F, 0x6A, 0x4F, 0x41, 0x6B, 0x50, 0x42, 0x6C, 0x51, 0x43, 0x6C, 0x51, 
   0x43, 0x6C, 0x51, 0x43, 0x6E, 0x52, 0x44, 0x6E, 0x51, 0x44, 0x70, 0x52, 0x45, 0x70, 0x53, 0x46, 
   0x70, 0x53, 0x46, 0x71, 0x53, 0x46, 0x72, 0x55, 0x48, 0x73, 0x55, 0x47, 0x74, 0x55, 0x46, 0x70, 
   0x53, 0x46, 0x6D, 0x52, 0x46, 0x65, 0x4E, 0x43, 0x4D, 0x38, 0x2D, 0x39, 0x25, 0x1C, 0x30, 0x24, 
   0x1D, 0x3A, 0x2F, 0x29, 0x4C, 0x3F, 0x39, 0x39, 0x2B, 0x25, 0x35, 0x26, 0x1F, 0x24, 0x13, 0x0E, 
   0x3D, 0x2D, 0x28, 0x3D, 0x30, 0x29, 0xBA, 0xB3, 0xB9, 0xE7, 0xDE, 0xE4, 0xFD, 0xF3, 0xF5, 0xF8, 
   0xEE, 0xEC, 0xE9, 0xE2, 0xDB, 0xDF, 0xDC, 0xD1, 0xAC, 0xA9, 0xA0, 0x3E, 0x3B, 0x36, 0x3F, 0x42, 
   0x40, 0x38, 0x40, 0x43, 0x3C, 0x47, 0x4B, 0x4D, 0x5A, 0x5B, 0x4A, 0x57, 0x55, 0x3E, 0x47, 0x46, 
   0x31, 0x39, 0x39, 0x3B, 0x43, 0x43, 0x40, 0x47, 0x47, 0x41, 0x49, 0x49, 0x3B, 0x43, 0x42, 0x57, 
   0x5E, 0x60, 0x36, 0x3C, 0x41, 0x46, 0x4D, 0x52, 0x5B, 0x64, 0x6A, 0x49, 0x52, 0x5B, 0x52, 0x5B, 
   0x65, 0x57, 0x62, 0x6B, 0x6F, 0x76, 0x81, 0x6B, 0x74, 0x7E, 0x44, 0x51, 0x59, 0x4B, 0x5A, 0x60, 
   0x40, 0x4C, 0x52, 0x5A, 0x60, 0x65, 0x4F, 0x51, 0x57, 0x7D, 0x77, 0x7C, 0xCB, 0xC0, 0xC2, 0xE9, 
   0xD8, 0xD8, 0xC4, 0xAD, 0xAB, 0xB2, 0x96, 0x97, 0xB1, 0x93, 0x98, 0xD2, 0xB5, 0xB7, 0xE7, 0xCA, 
   0xC9, 0xD2, 0xBB, 0xBB, 0x7F, 0x70, 0x72, 0x5A, 0x57, 0x5B, 0x52, 0x5D, 0x61, 0x52, 0x64, 0x67, 
   0x49, 0x59, 0x60, 0x4A, 0x60, 0x66, 0x50, 0x60, 0x65, 0x48, 0x44, 0x4B, 0xD9, 0xCC, 0xD4, 0xBD, 
   0xB6, 0xBB, 0xB6, 0xB2, 0xB6, 0xC5, 0xC2, 0xC4, 0x6D, 0x6C, 0x6E, 0x75, 0x79, 0x7A, 0x7E, 0x82, 
   0x82, 0xDB, 0xDD, 0xDE, 0xB3, 0xB3, 0xB5, 0x53, 0x59, 0x5C, 0x3B, 0x3F, 0x40, 0x83, 0x83, 0x84, 
   0xF9, 0xF3, 0xF4, 0xF7, 0xEF, 0xEF, 0xF3, 0xE8, 0xE7, 0xEA, 0xE2, 0xE0, 0xCB, 0xCC, 0xCC, 0xA9, 
   0xAD, 0xAD, 0x36, 0x3B, 0x3C, 0x7F, 0x7F, 0x82, 0xFA, 0xF1, 0xF7, 0xFA, 0xEA, 0xEF, 0xFA, 0xEA, 
   0xE9, 0xF8, 0xE9, 0xE7, 0xF8, 0xE9, 0xE7, 0xFC, 0xF0, 0xEE, 0xF0, 0xE2, 0xE0, 0xED, 0xDD, 0xDB, 
   0xFB, 0xED, 0xEC, 0xFA, 0xE8, 0xE7, 0xFB, 0xE9, 0xE8, 0xFB, 0xE9, 0xE8, 0xFB, 0xE9, 0xE8, 0xF9, 
   0xE7, 0xE6, 0xF8, 0xE6, 0xE5, 0xF8, 0xE6, 0xE5, 0xF8, 0xE6, 0xE5, 0xF7, 0xE5, 0xE4, 0xF5, 0xE3, 
   0xE2, 0xF5, 0xE3, 0xE2, 0xF9, 0xE7, 0xE6, 0xF9, 0xE8, 0xE6, 0xF6, 0xE7, 0xE4, 0xF6, 0xE7, 0xE4, 
   0xF7, 0xE8, 0xE5, 0xF7, 0xE8, 0xE5, 0xF6, 0xE7, 0xE4, 0xF7, 0xE8, 0xE5, 0xF8, 0xE9, 0xE6, 0xF8, 
   0xE9, 0xE6, 0xF8, 0xE9, 0xE6, 0xF8, 0xE9, 0xE6, 0xF7, 0xE8, 0xE5, 0xF6, 0xE7, 0xE4, 0xF8, 0xE7, 
   0xE5, 0xF9, 0xE7, 0xE6, 0xF8, 0xE6, 0xE5, 0xF6, 0xE5, 0xE4, 0xF5, 0xE3, 0xE2, 0xFC, 0xEA, 0xE9, 
   0xF9, 0xE7, 0xE6, 0xF6, 0xE4, 0xE3, 0xF2, 0xE0, 0xDF, 0xF3, 0xE1, 0xE0, 0xF8, 0xE6, 0xE5, 0xF6, 
   0xE4, 0xE3, 0xF6, 0xE4, 0xE3, 0xF3, 0xE4, 0xDF, 0xF4, 0xE9, 0xE2, 0xEF, 0xE3, 0xE2, 0xED, 0xE1, 
   0xE5, 0xFA, 0xEC, 0xF1, 0xF5, 0xE2, 0xE5, 0xFB, 0xE7, 0xE7, 0xE5, 0xDA, 0xD4, 0xF2, 0xE4, 0xDF, 
   0xF6, 0xE9, 0xE5, 0xF7, 0xE8, 0xE7, 0xFC, 0xE7, 0xE9, 0xF9, 0xE3, 0xE5, 0xCF, 0xBE, 0xC0, 0x6C, 
   0x60, 0x62, 0x89, 0x7B, 0x7D, 0xA7, 0x99, 0x9B, 0xDD, 0xD4, 0xD6, 0xBE, 0xB0, 0xB2, 0xC4, 0xB6, 
   0xB7, 0xE5, 0xDA, 0xD8, 0xFE, 0xF3, 0xF0, 0xF3, 0xE3, 0xE2, 0xF0, 0xDB, 0xDA, 0xED, 0xD5, 0xD5, 
   0xEE, 0xD4, 0xD4, 0xED, 0xD2, 0xD0, 0xF1, 0xD4, 0xD0, 0xF2, 0xD5, 0xD1, 0xF0, 0xD3, 0xCF, 0xF0, 
   0xD3, 0xCF, 0xF2, 0xD5, 0xD1, 0xF2, 0xD5, 0xD1, 0xF0, 0xD2, 0xCE, 0xEF, 0xD0, 0xCD, 0xEF, 0xD0, 
   0xCD, 0xF1, 0xD2, 0xCF, 0xF0, 0xD1, 0xCE, 0xEE, 0xCF, 0xCC, 0xED, 0xCF, 0xCB, 0xF0, 0xD2, 0xCD, 
   0xF1, 0xD4, 0xCE, 0xEF, 0xD0, 0xCB, 0xEE, 0xCE, 0xC9, 0xF3, 0xD0, 0xCC, 0xF2, 0xCF, 0xCB, 0xEE, 
   0xCD, 0xC7, 0xEC, 0xCC, 0xC6, 0xEA, 0xCA, 0xC4, 0xEB, 0xCB, 0xC5, 0xEC, 0xCC, 0xC6, 0xE9, 0xC9, 
   0xC3, 0xE8, 0xC7, 0xC1, 0xE9, 0xC7, 0xC1, 0xE9, 0xC7, 0xC1, 0xE9, 0xC7, 0xC1, 0xE8, 0xC6, 0xC0, 
   0xE9, 0xC7, 0xC1, 0xEA, 0xC8, 0xC2, 0xE7, 0xC6, 0xC0, 0xE0, 0xC0, 0xBA, 0xD8, 0xB8, 0xB2, 0xC4, 
   0xA4, 0x9E, 0xE9, 0xC9, 0xC3, 0xEF, 0xCE, 0xC8, 0xE8, 0xC7, 0xC1, 0xEC, 0xC9, 0xC5, 0xEB, 0xCA, 
   0xC6, 0xC2, 0xA5, 0xA2, 0xB7, 0x9F, 0x9D, 0x7E, 0x69, 0x68, 0xD5, 0xC3, 0xC2, 0xE8, 0xD1, 0xD1, 
   0xE4, 0xC8, 0xC8, 0xEB, 0xD3, 0xD1, 0xE6, 0xD0, 0xCC, 0xE4, 0xCC, 0xC7, 0xCD, 0xAF, 0xAB, 0xD2, 
   0xB2, 0xAD, 0xCD, 0xB0, 0xA8, 0xB1, 0x91, 0x88, 0x9D, 0x7A, 0x71, 0x87, 0x63, 0x59, 0x76, 0x57, 
   0x4A, 0x6D, 0x53, 0x45, 0x6F, 0x53, 0x45, 0x71, 0x54, 0x45, 0x71, 0x54, 0x45, 0x71, 0x54, 0x45, 
   0x6E, 0x51, 0x42, 0x6C, 0x4F, 0x40, 0x6C, 0x4F, 0x40, 0x6E, 0x51, 0x42, 0x6C, 0x4F, 0x40, 0x6D, 
   0x50, 0x41, 0x6C, 0x4F, 0x40, 0x6C, 0x4F, 0x40, 0x6A, 0x4D, 0x3E, 0x68, 0x4B, 0x3C, 0x6A, 0x4D, 
   0x3E, 0x6A, 0x4D, 0x3E, 0x6B, 0x4E, 0x3F, 0x6B, 0x4E, 0x3F, 0x6B, 0x4E, 0x3F, 0x6B, 0x4E, 0x3F, 
   0x6B, 0x4F, 0x3F, 0x6C, 0x50, 0x3F, 0x6D, 0x51, 0x40, 0x6D, 0x51, 0x40, 0x6C, 0x50, 0x3F, 0x6C, 
   0x50, 0x3F, 0x6B, 0x50, 0x40, 0x6B, 0x50, 0x43, 0x6D, 0x52, 0x44, 0x6D, 0x52, 0x44, 0x6D, 0x52, 
   0x44, 0x6F, 0x54, 0x46, 0x6F, 0x54, 0x46, 0x6E, 0x53, 0x45, 0x6E, 0x53, 0x45, 0x6F, 0x54, 0x46, 
   0x70, 0x55, 0x47, 0x70, 0x55, 0x47, 0x71, 0x56, 0x48, 0x72, 0x56, 0x48, 0x73, 0x55, 0x48, 0x70, 
   0x55, 0x47, 0x6B, 0x51, 0x46, 0x51, 0x3A, 0x30, 0x4E, 0x3A, 0x30, 0x43, 0x30, 0x28, 0x22, 0x18, 
   0x11, 0x30, 0x25, 0x1F, 0x30, 0x24, 0x1E, 0x31, 0x24, 0x1E, 0x38, 0x29, 0x23, 0x24, 0x14, 0x0E, 
   0x29, 0x1A, 0x14, 0x39, 0x2B, 0x25, 0xC0, 0xBE, 0xC4, 0xD5, 0xD3, 0xD8, 0xD4, 0xD1, 0xD2, 0xCE, 
   0xCB, 0xCA, 0x94, 0x93, 0x8E, 0x91, 0x94, 0x8B, 0x9E, 0x9F, 0x97, 0x7D, 0x7A, 0x77, 0x43, 0x44, 
   0x44, 0x34, 0x3D, 0x41, 0x39, 0x44, 0x48, 0x46, 0x52, 0x54, 0x4E, 0x5A, 0x58, 0x33, 0x3C, 0x3B, 
   0x30, 0x38, 0x38, 0x3D, 0x45, 0x45, 0x40, 0x48, 0x48, 0x46, 0x4E, 0x4E, 0x4B, 0x53, 0x53, 0x3F, 
   0x48, 0x48, 0x46, 0x4D, 0x50, 0x48, 0x50, 0x53, 0x4D, 0x56, 0x5B, 0x4B, 0x55, 0x5C, 0x55, 0x5E, 
   0x67, 0x47, 0x52, 0x5A, 0x54, 0x5D, 0x67, 0x5E, 0x68, 0x72, 0x56, 0x63, 0x6C, 0x48, 0x57, 0x5E, 
   0x41, 0x4D, 0x53, 0x57, 0x5D, 0x62, 0x52, 0x55, 0x5A, 0x40, 0x42, 0x46, 0x54, 0x52, 0x55, 0xD0, 
   0xC6, 0xC8, 0xDD, 0xCB, 0xCE, 0xA6, 0x90, 0x92, 0x8E, 0x74, 0x78, 0xA7, 0x8A, 0x8C, 0xE1, 0xC4, 
   0xC3, 0xE3, 0xCA, 0xCB, 0xBF, 0xAF, 0xB1, 0x47, 0x43, 0x46, 0x56, 0x60, 0x64, 0x54, 0x65, 0x68, 
   0x58, 0x67, 0x6E, 0x46, 0x5A, 0x60, 0x50, 0x5F, 0x65, 0x7B, 0x79, 0x7F, 0xF0, 0xE8, 0xEE, 0x79, 
   0x74, 0x79, 0x97, 0x97, 0x9B, 0x7E, 0x7F, 0x83, 0xD8, 0xDB, 0xDE, 0x7D, 0x82, 0x84, 0x6F, 0x75, 
   0x78, 0x88, 0x8F, 0x92, 0x40, 0x46, 0x48, 0x3E, 0x48, 0x4A, 0x56, 0x5C, 0x5D, 0x66, 0x67, 0x68, 
   0xEE, 0xE9, 0xE9, 0xF7, 0xF2, 0xF2, 0xF0, 0xEB, 0xE9, 0xE2, 0xE1, 0xDF, 0x76, 0x7A, 0x7A, 0x8E, 
   0x93, 0x92, 0x55, 0x57, 0x56, 0xD2, 0xCE, 0xD0, 0xFF, 0xF5, 0xF8, 0xFC, 0xE7, 0xEC, 0xF9, 0xEA, 
   0xE8, 0xF7, 0xE8, 0xE6, 0xFA, 0xEB, 0xE9, 0xF5, 0xE7, 0xE5, 0xE7, 0xD7, 0xD5, 0xFA, 0xEC, 0xE9, 
   0xFC, 0xEC, 0xEB, 0xFC, 0xEA, 0xE9, 0xFC, 0xEB, 0xEA, 0xFB, 0xE9, 0xE8, 0xFB, 0xE9, 0xE8, 0xF9, 
   0xE7, 0xE6, 0xF7, 0xE5, 0xE4, 0xF8, 0xE6, 0xE5, 0xF8, 0xE6, 0xE5, 0xF6, 0xE4, 0xE3, 0xF4, 0xE2, 
   0xE1, 0xF4, 0xE2, 0xE1, 0xF9, 0xE7, 0xE6, 0xF9, 0xE9, 0xE7, 0xF6, 0xE7, 0xE4, 0xF6, 0xE7, 0xE4, 
   0xF7, 0xE8, 0xE5, 0xF7, 0xE8, 0xE5, 0xF4, 0xE5, 0xE2, 0xF4, 0xE5, 0xE2, 0xF7, 0xE8, 0xE5, 0xF7, 
   0xE8, 0xE5, 0xF7, 0xE8, 0xE5, 0xF8, 0xE9, 0xE6, 0xF8, 0xE9, 0xE6, 0xF6, 0xE7, 0xE4, 0xF7, 0xE7, 
   0xE5, 0xF9, 0xE7, 0xE6, 0xF8, 0xE6, 0xE5, 0xF7, 0xE5, 0xE4, 0xF8, 0xE6, 0xE5, 0xF6, 0xE4, 0xE3, 
   0xF4, 0xE2, 0xE1, 0xF1, 0xDF, 0xDE, 0xF2, 0xE0, 0xDF, 0xF9, 0xE8, 0xE7, 0xF3, 0xE1, 0xE0, 0xF7, 
   0xE5, 0xE4, 0xF6, 0xE4, 0xE4, 0xF5, 0xE8, 0xE3, 0xF4, 0xE9, 0xE2, 0xFE, 0xF3, 0xF2, 0xF1, 0xE6, 
   0xE9, 0x9E, 0x92, 0x95, 0x84, 0x73, 0x76, 0xF3, 0xE1, 0xE1, 0xF0, 0xE1, 0xDC, 0xF7, 0xE6, 0xE2, 
   0xF7, 0xE5, 0xE3, 0xF5, 0xE1, 0xDF, 0xFD, 0xE8, 0xEA, 0xEA, 0xD3, 0xD6, 0x9D, 0x8B, 0x8D, 0x84, 
   0x77, 0x79, 0xD0, 0xC2, 0xC4, 0xEE, 0xE1, 0xE2, 0xDD, 0xCE, 0xD0, 0xF5, 0xE5, 0xE5, 0xFE, 0xF0, 
   0xEE, 0xFA, 0xEA, 0xE7, 0xF5, 0xE2, 0xDF, 0xF1, 0xDB, 0xD9, 0xF1, 0xD9, 0xD7, 0xF3, 0xD8, 0xD7, 
   0xED, 0xCF, 0xCF, 0xF1, 0xD3, 0xD1, 0xEF, 0xD2, 0xCE, 0xEE, 0xD1, 0xCD, 0xF0, 0xD3, 0xCF, 0xEF, 
   0xD2, 0xCE, 0xF3, 0xD6, 0xD2, 0xF3, 0xD6, 0xD2, 0xF0, 0xD1, 0xCE, 0xED, 0xCE, 0xCB, 0xEF, 0xD0, 
   0xCD, 0xF1, 0xD2, 0xCF, 0xF0, 0xD1, 0xCE, 0xEE, 0xCF, 0xCC, 0xEE, 0xD0, 0xCC, 0xF0, 0xD3, 0xCE, 
   0xF0, 0xD2, 0xCD, 0xF1, 0xD1, 0xCC, 0xEE, 0xCE, 0xC9, 0xEF, 0xCC, 0xC8, 0xF0, 0xCD, 0xC9, 0xEE, 
   0xCD, 0xC8, 0xEC, 0xCC, 0xC6, 0xEA, 0xCA, 0xC4, 0xEA, 0xCA, 0xC4, 0xEA, 0xCA, 0xC4, 0xE7, 0xC7, 
   0xC1, 0xE7, 0xC7, 0xC1, 0xEA, 0xC8, 0xC2, 0xEB, 0xC9, 0xC3, 0xEB, 0xC9, 0xC3, 0xEA, 0xC8, 0xC2, 
   0xE9, 0xC7, 0xC1, 0xE8, 0xC6, 0xC0, 0xE7, 0xC5, 0xBF, 0xE5, 0xC3, 0xBD, 0xE6, 0xC4, 0xBE, 0xF5, 
   0xD3, 0xCD, 0xEA, 0xC8, 0xC2, 0xE8, 0xC6, 0xC0, 0xEB, 0xC9, 0xC3, 0xED, 0xC7, 0xC4, 0xAF, 0x8B, 
   0x8A, 0xB6, 0x9A, 0x9A, 0xCB, 0xB5, 0xB4, 0xBE, 0xAC, 0xAC, 0xD6, 0xC9, 0xCA, 0xD5, 0xC4, 0xC4, 
   0xBA, 0xA5, 0xA4, 0x9A, 0x87, 0x85, 0xCF, 0xBB, 0xB7, 0xD2, 0xBA, 0xB5, 0xC5, 0xA6, 0xA1, 0xD1, 
   0xAC, 0xA8, 0xD1, 0xAC, 0xA5, 0xC4, 0x9C, 0x94, 0xAD, 0x85, 0x7D, 0x95, 0x6E, 0x65, 0x80, 0x60, 
   0x52, 0x6F, 0x55, 0x47, 0x6F, 0x53, 0x45, 0x71, 0x54, 0x45, 0x71, 0x54, 0x45, 0x70, 0x53, 0x44, 
   0x6D, 0x50, 0x41, 0x6C, 0x4F, 0x40, 0x6E, 0x51, 0x42, 0x6C, 0x4F, 0x40, 0x6D, 0x50, 0x41, 0x6D, 
   0x50, 0x41, 0x6B, 0x4E, 0x3F, 0x6C, 0x4F, 0x40, 0x6B, 0x4E, 0x3F, 0x6C, 0x4F, 0x40, 0x6C, 0x4F, 
   0x40, 0x6A, 0x4D, 0x3E, 0x6A, 0x4D, 0x3E, 0x6A, 0x4D, 0x3E, 0x6A, 0x4D, 0x3E, 0x6A, 0x4D, 0x3E, 
   0x6B, 0x4E, 0x3F, 0x6D, 0x50, 0x41, 0x6E, 0x51, 0x42, 0x6E, 0x51, 0x42, 0x6D, 0x50, 0x41, 0x6D, 
   0x50, 0x41, 0x6C, 0x50, 0x42, 0x6C, 0x52, 0x44, 0x6D, 0x52, 0x44, 0x6E, 0x53, 0x45, 0x6E, 0x53, 
   0x45, 0x6F, 0x54, 0x46, 0x70, 0x55, 0x47, 0x6D, 0x52, 0x47, 0x6E, 0x53, 0x48, 0x6F, 0x54, 0x49, 
   0x6F, 0x54, 0x49, 0x6F, 0x54, 0x49, 0x71, 0x56, 0x4B, 0x71, 0x56, 0x49, 0x71, 0x56, 0x49, 0x70, 
   0x54, 0x49, 0x64, 0x4C, 0x41, 0x46, 0x32, 0x29, 0x4A, 0x38, 0x2F, 0x56, 0x46, 0x3D, 0x27, 0x1E, 
   0x17, 0x31, 0x27, 0x20, 0x1D, 0x12, 0x0B, 0x26, 0x1A, 0x14, 0x38, 0x2A, 0x24, 0x2D, 0x1E, 0x18, 
   0x2C, 0x1C, 0x16, 0x39, 0x2B, 0x25, 0x7F, 0x80, 0x86, 0x59, 0x5B, 0x60, 0x5A, 0x5D, 0x5F, 0x4E, 
   0x52, 0x51, 0x41, 0x47, 0x43, 0x46, 0x4C, 0x46, 0x54, 0x58, 0x52, 0x88, 0x87, 0x84, 0x62, 0x65, 
   0x65, 0x34, 0x3D, 0x41, 0x39, 0x44, 0x4A, 0x49, 0x53, 0x57, 0x4A, 0x53, 0x54, 0x3C, 0x43, 0x43, 
   0x29, 0x2F, 0x30, 0x3E, 0x43, 0x44, 0x4B, 0x51, 0x52, 0x3E, 0x44, 0x44, 0x41, 0x47, 0x48, 0x4A, 
   0x50, 0x51, 0x46, 0x4D, 0x50, 0x54, 0x5C, 0x5F, 0x4C, 0x55, 0x59, 0x53, 0x5D, 0x62, 0x4C, 0x56, 
   0x5D, 0x43, 0x4F, 0x56, 0x47, 0x52, 0x5B, 0x51, 0x5D, 0x67, 0x4C, 0x5B, 0x62, 0x4B, 0x5B, 0x62, 
   0x43, 0x50, 0x56, 0x51, 0x59, 0x5E, 0x5A, 0x60, 0x65, 0x4C, 0x56, 0x59, 0x3E, 0x43, 0x47, 0x6D, 
   0x6B, 0x70, 0xA5, 0x9D, 0xA1, 0xDA, 0xCB, 0xCE, 0xE4, 0xD0, 0xD4, 0xE0, 0xC6, 0xC8, 0xE9, 0xCC, 
   0xCA, 0xE3, 0xC9, 0xCA, 0xE7, 0xD6, 0xD8, 0xAC, 0xA8, 0xAB, 0x64, 0x6D, 0x70, 0x63, 0x72, 0x75, 
   0x61, 0x6F, 0x77, 0x4D, 0x60, 0x66, 0x50, 0x5F, 0x65, 0xB2, 0xB0, 0xB6, 0xE5, 0xDB, 0xE2, 0xBA, 
   0xB7, 0xBC, 0x97, 0x9A, 0x9E, 0x76, 0x7A, 0x7F, 0xD6, 0xDA, 0xDF, 0x65, 0x69, 0x6D, 0x91, 0x97, 
   0x9B, 0x5E, 0x67, 0x6B, 0x5B, 0x65, 0x69, 0x42, 0x4D, 0x4E, 0x6D, 0x73, 0x74, 0x8B, 0x8D, 0x8E, 
   0xF8, 0xF4, 0xF4, 0xF0, 0xED, 0xED, 0xF7, 0xF8, 0xF4, 0xA0, 0xA4, 0xA1, 0x59, 0x5E, 0x5E, 0x49, 
   0x4F, 0x4E, 0x75, 0x74, 0x75, 0xFA, 0xF3, 0xF4, 0xF7, 0xE9, 0xEB, 0xFA, 0xE5, 0xE7, 0xFB, 0xEB, 
   0xE9, 0xF9, 0xEA, 0xE8, 0xFB, 0xEC, 0xEA, 0xEE, 0xDF, 0xDD, 0xEF, 0xE0, 0xDE, 0xF9, 0xEC, 0xEA, 
   0xF9, 0xE8, 0xE7, 0xFE, 0xEC, 0xEB, 0xFC, 0xEA, 0xE9, 0xFA, 0xE8, 0xE7, 0xF9, 0xE7, 0xE6, 0xF8, 
   0xE6, 0xE5, 0xF7, 0xE5, 0xE4, 0xF8, 0xE6, 0xE5, 0xF8, 0xE6, 0xE5, 0xF7, 0xE5, 0xE4, 0xF6, 0xE4, 
   0xE3, 0xF6, 0xE4, 0xE3, 0xF9, 0xE7, 0xE6, 0xF6, 0xE6, 0xE4, 0xF7, 0xE8, 0xE5, 0xF6, 0xE7, 0xE4, 
   0xF8, 0xE9, 0xE6, 0xF7, 0xE8, 0xE5, 0xF4, 0xE5, 0xE2, 0xF4, 0xE5, 0xE2, 0xF9, 0xEA, 0xE7, 0xF7, 
   0xE8, 0xE5, 0xF6, 0xE7, 0xE4, 0xF7, 0xE8, 0xE5, 0xF9, 0xEA, 0xE7, 0xF7, 0xE9, 0xE5, 0xF8, 0xE8, 
   0xE6, 0xF7, 0xE4, 0xE4, 0xF5, 0xE3, 0xE2, 0xF6, 0xE4, 0xE3, 0xF1, 0xDF, 0xDE, 0xF6, 0xE4, 0xE3, 
   0xF6, 0xE4, 0xE3, 0xF2, 0xE0, 0xDF, 0xF4, 0xE2, 0xE1, 0xF5, 0xE2, 0xE1, 0xF8, 0xE6, 0xE5, 0xF8, 
   0xE6, 0xE5, 0xF6, 0xE3, 0xE3, 0xF6, 0xEA, 0xE5, 0xF4, 0xEE, 0xE7, 0xAE, 0xA2, 0xA2, 0x78, 0x6F, 
   0x72, 0x4E, 0x41, 0x45, 0x99, 0x88, 0x8B, 0xFB, 0xEB, 0xEC, 0xFA, 0xE7, 0xE2, 0xFA, 0xE5, 0xE1, 
   0xF7, 0xE2, 0xE0, 0xF6, 0xE1, 0xE0, 0xD4, 0xBE, 0xC0, 0xBE, 0xA8, 0xAA, 0xD8, 0xC8, 0xCB, 0xF4, 
   0xE8, 0xEB, 0xF1, 0xE3, 0xE5, 0xDC, 0xCD, 0xCE, 0xEE, 0xDC, 0xDC, 0xF8, 0xE6, 0xE4, 0xF5, 0xE2, 
   0xE0, 0xEE, 0xDA, 0xD6, 0xED, 0xD9, 0xD5, 0xF0, 0xD9, 0xD5, 0xEF, 0xD6, 0xD2, 0xF1, 0xD3, 0xD1, 
   0xF0, 0xD1, 0xCE, 0xF1, 0xD3, 0xCF, 0xEF, 0xD2, 0xCE, 0xED, 0xD0, 0xCC, 0xED, 0xD0, 0xCC, 0xEE, 
   0xD1, 0xCD, 0xEF, 0xD2, 0xCE, 0xEF, 0xD2, 0xCE, 0xEF, 0xD1, 0xCE, 0xF1, 0xD2, 0xCF, 0xF1, 0xD2, 
   0xCF, 0xEF, 0xD0, 0xCD, 0xEF, 0xD0, 0xCD, 0xEF, 0xD0, 0xCD, 0xEF, 0xD0, 0xCD, 0xEF, 0xD3, 0xCD, 
   0xF1, 0xD3, 0xCD, 0xEE, 0xCE, 0xC8, 0xED, 0xCD, 0xC7, 0xF0, 0xCE, 0xC8, 0xF1, 0xCE, 0xC9, 0xEE, 
   0xCD, 0xC7, 0xEC, 0xCC, 0xC6, 0xE9, 0xC9, 0xC3, 0xE8, 0xC8, 0xC2, 0xEB, 0xCB, 0xC5, 0xEB, 0xCB, 
   0xC5, 0xEB, 0xCA, 0xC4, 0xEC, 0xCA, 0xC4, 0xEB, 0xC9, 0xC3, 0xEC, 0xCA, 0xC4, 0xEC, 0xCA, 0xC4, 
   0xEA, 0xC8, 0xC2, 0xE6, 0xC4, 0xBE, 0xE2, 0xC0, 0xBA, 0xDE, 0xBD, 0xB7, 0xE1, 0xBF, 0xB9, 0xE8, 
   0xC6, 0xC0, 0xE4, 0xC2, 0xBC, 0xE7, 0xC5, 0xBF, 0xEA, 0xC8, 0xC2, 0xDE, 0xB6, 0xB4, 0xBC, 0x97, 
   0x96, 0xAB, 0x8E, 0x8E, 0xC9, 0xB4, 0xB3, 0x7C, 0x6D, 0x6B, 0xA9, 0x9F, 0xA0, 0x9E, 0x90, 0x90, 
   0x6C, 0x5C, 0x5A, 0x8B, 0x7B, 0x78, 0x5F, 0x4D, 0x49, 0x8F, 0x77, 0x72, 0xEF, 0xD1, 0xCC, 0xEF, 
   0xC9, 0xC5, 0xE2, 0xB8, 0xB1, 0xCF, 0xA4, 0x9D, 0xB8, 0x8E, 0x86, 0xA1, 0x79, 0x70, 0x8B, 0x6A, 
   0x5D, 0x75, 0x5A, 0x4C, 0x71, 0x56, 0x47, 0x6B, 0x4E, 0x3F, 0x6D, 0x50, 0x41, 0x6B, 0x4E, 0x3F, 
   0x69, 0x4C, 0x3D, 0x6D, 0x50, 0x41, 0x6D, 0x50, 0x41, 0x6A, 0x4D, 0x3E, 0x6A, 0x4D, 0x3E, 0x69, 
   0x4C, 0x3D, 0x68, 0x4B, 0x3C, 0x6A, 0x4D, 0x3E, 0x6D, 0x50, 0x41, 0x6D, 0x50, 0x41, 0x6D, 0x50, 
   0x41, 0x6B, 0x4E, 0x3F, 0x6B, 0x4E, 0x3F, 0x6C, 0x4F, 0x40, 0x6C, 0x4F, 0x40, 0x6C, 0x4F, 0x40, 
   0x6C, 0x4F, 0x40, 0x6D, 0x50, 0x41, 0x6E, 0x51, 0x42, 0x6E, 0x51, 0x42, 0x6D, 0x51, 0x41, 0x6D, 
   0x51, 0x41, 0x6C, 0x50, 0x41, 0x6C, 0x51, 0x43, 0x6E, 0x53, 0x45, 0x6F, 0x54, 0x46, 0x6F, 0x54, 
   0x46, 0x70, 0x55, 0x47, 0x70, 0x56, 0x48, 0x6A, 0x52, 0x46, 0x6C, 0x54, 0x48, 0x6D, 0x54, 0x48, 
   0x6F, 0x56, 0x4A, 0x6E, 0x55, 0x49, 0x6F, 0x56, 0x4A, 0x70, 0x56, 0x4B, 0x6F, 0x55, 0x49, 0x70, 
   0x56, 0x4C, 0x6E, 0x59, 0x50, 0x7D, 0x6B, 0x62, 0x50, 0x40, 0x38, 0x2A, 0x1A, 0x12, 0x29, 0x21, 
   0x1A, 0x28, 0x1F, 0x18, 0x1E, 0x14, 0x0D, 0x3A, 0x2F, 0x29, 0x37, 0x2A, 0x24, 0x33, 0x25, 0x1F, 
   0x24, 0x16, 0x10, 0x26, 0x18, 0x12, 0x38, 0x3A, 0x40, 0x4B, 0x4F, 0x54, 0x57, 0x60, 0x62, 0x58, 
   0x62, 0x62, 0x4A, 0x53, 0x52, 0x5A, 0x60, 0x5E, 0x42, 0x46, 0x43, 0x45, 0x45, 0x42, 0x49, 0x4C, 
   0x4D, 0x39, 0x41, 0x47, 0x4A, 0x54, 0x5B, 0x46, 0x4F, 0x54, 0x4A, 0x50, 0x53, 0x44, 0x49, 0x4A, 
   0x34, 0x39, 0x3A, 0x45, 0x4A, 0x4B, 0x3E, 0x43, 0x44, 0x3B, 0x40, 0x41, 0x41, 0x46, 0x47, 0x42, 
   0x48, 0x48, 0x41, 0x49, 0x4A, 0x47, 0x50, 0x52, 0x52, 0x5B, 0x5F, 0x64, 0x6E, 0x73, 0x4B, 0x56, 
   0x5B, 0x38, 0x44, 0x4A, 0x4B, 0x55, 0x5E, 0x52, 0x5D, 0x67, 0x42, 0x52, 0x59, 0x4A, 0x5B, 0x62, 
   0x3E, 0x4C, 0x52, 0x58, 0x60, 0x64, 0x4E, 0x54, 0x59, 0x46, 0x51, 0x55, 0x4C, 0x57, 0x5B, 0x4D, 
   0x53, 0x5B, 0x4E, 0x4E, 0x56, 0xA9, 0xA3, 0xA8, 0xE3, 0xD7, 0xD9, 0xEC, 0xD8, 0xD8, 0xE4, 0xCA, 
   0xC9, 0xD6, 0xC0, 0xC0, 0xB6, 0xA7, 0xA9, 0xBF, 0xBA, 0xBE, 0x73, 0x79, 0x7D, 0x4F, 0x5B, 0x5F, 
   0x50, 0x5B, 0x63, 0x54, 0x66, 0x6D, 0x4A, 0x59, 0x5E, 0xC7, 0xC5, 0xCB, 0xF6, 0xEE, 0xF5, 0xDB, 
   0xD8, 0xDC, 0x84, 0x89, 0x8D, 0x5A, 0x5E, 0x63, 0x98, 0x9B, 0xA0, 0x86, 0x89, 0x8F, 0x80, 0x84, 
   0x89, 0x83, 0x8D, 0x91, 0x59, 0x65, 0x68, 0x42, 0x4D, 0x4F, 0x6D, 0x71, 0x72, 0xC0, 0xBF, 0xC1, 
   0xF8, 0xF4, 0xF4, 0xF5, 0xF3, 0xF2, 0xE1, 0xE6, 0xE2, 0x5B, 0x61, 0x5E, 0x5B, 0x60, 0x60, 0x2D, 
   0x2F, 0x2E, 0xAB, 0xA8, 0xA8, 0xFC, 0xF3, 0xF2, 0xF4, 0xE6, 0xE5, 0xFA, 0xE7, 0xE7, 0xFB, 0xEC, 
   0xEA, 0xF9, 0xEA, 0xE8, 0xF9, 0xEA, 0xE8, 0xF0, 0xE1, 0xDF, 0xF9, 0xEA, 0xE8, 0xF8, 0xE9, 0xE7, 
   0xFC, 0xEC, 0xEA, 0xFC, 0xEA, 0xE9, 0xFB, 0xE9, 0xE8, 0xFA, 0xE8, 0xE7, 0xF9, 0xE7, 0xE6, 0xF8, 
   0xE6, 0xE5, 0xF7, 0xE5, 0xE4, 0xF5, 0xE3, 0xE2, 0xF6, 0xE4, 0xE3, 0xF7, 0xE5, 0xE4, 0xF8, 0xE6, 
   0xE5, 0xF9, 0xE7, 0xE6, 0xF8, 0xE6, 0xE5, 0xF6, 0xE5, 0xE3, 0xF7, 0xE8, 0xE5, 0xF7, 0xE8, 0xE5, 
   0xF9, 0xEA, 0xE7, 0xF5, 0xE7, 0xE4, 0xF7, 0xE8, 0xE5, 0xF9, 0xEB, 0xE8, 0xF7, 0xE8, 0xE5, 0xF5, 
   0xE6, 0xE3, 0xF8, 0xE9, 0xE6, 0xF4, 0xE5, 0xE2, 0xF6, 0xE7, 0xE4, 0xF5, 0xE6, 0xE3, 0xF5, 0xE6, 
   0xE4, 0xF7, 0xE5, 0xE4, 0xF6, 0xE4, 0xE3, 0xF5, 0xE3, 0xE2, 0xF2, 0xE3, 0xE2, 0xF3, 0xE1, 0xE0, 
   0xF4, 0xE2, 0xE1, 0xF3, 0xE1, 0xE0, 0xF3, 0xE1, 0xE0, 0xF5, 0xE3, 0xE2, 0xF3, 0xE1, 0xE0, 0xF4, 
   0xE2, 0xE1, 0xF7, 0xE4, 0xE3, 0xDF, 0xD5, 0xD0, 0x91, 0x87, 0x81, 0x58, 0x4E, 0x4E, 0x63, 0x5B, 
   0x5E, 0x9F, 0x92, 0x96, 0xF0, 0xE3, 0xE5, 0xF5, 0xE3, 0xE3, 0xFA, 0xE4, 0xDF, 0xFB, 0xE5, 0xE0, 
   0xF7, 0xE1, 0xDF, 0xF2, 0xDD, 0xDC, 0xE3, 0xD0, 0xD2, 0xF1, 0xDF, 0xE0, 0xDF, 0xD0, 0xD3, 0xDD, 
   0xCE, 0xD2, 0xD3, 0xC3, 0xC6, 0xF0, 0xE0, 0xE1, 0xF9, 0xE6, 0xE3, 0xF5, 0xE1, 0xDC, 0xF2, 0xDC, 
   0xD7, 0xF1, 0xDC, 0xD7, 0xEF, 0xDA, 0xD6, 0xED, 0xD6, 0xD1, 0xEE, 0xD3, 0xCF, 0xEF, 0xD1, 0xCE, 
   0xF1, 0xD2, 0xCF, 0xF0, 0xD1, 0xCE, 0xED, 0xD1, 0xCC, 0xEE, 0xD1, 0xCD, 0xEE, 0xD1, 0xCD, 0xEE, 
   0xD1, 0xCD, 0xEE, 0xD1, 0xCD, 0xEE, 0xD1, 0xCD, 0xF1, 0xD2, 0xCF, 0xF2, 0xD3, 0xD0, 0xF0, 0xD1, 
   0xCE, 0xEF, 0xD0, 0xCD, 0xF0, 0xD1, 0xCE, 0xEE, 0xCF, 0xCC, 0xEF, 0xD1, 0xCC, 0xEF, 0xD3, 0xCB, 
   0xF0, 0xD2, 0xCA, 0xEE, 0xCF, 0xC7, 0xEE, 0xCE, 0xC6, 0xEF, 0xCE, 0xC6, 0xEE, 0xCD, 0xC5, 0xEB, 
   0xCB, 0xC4, 0xEA, 0xCA, 0xC4, 0xE8, 0xC8, 0xC2, 0xE7, 0xC7, 0xC1, 0xEB, 0xCB, 0xC5, 0xED, 0xCD, 
   0xC7, 0xEC, 0xCB, 0xC5, 0xED, 0xCB, 0xC5, 0xEC, 0xCA, 0xC4, 0xEB, 0xC9, 0xC3, 0xEA, 0xC8, 0xC2, 
   0xE4, 0xC2, 0xBC, 0xE5, 0xC3, 0xBD, 0xE5, 0xC2, 0xBC, 0xE1, 0xBD, 0xB7, 0xE4, 0xC1, 0xBB, 0xE0, 
   0xBD, 0xB7, 0xE7, 0xC3, 0xBD, 0xE9, 0xC5, 0xBF, 0xE5, 0xC1, 0xBB, 0xE2, 0xBA, 0xB7, 0xE7, 0xC1, 
   0xBF, 0xD4, 0xB6, 0xB4, 0xC4, 0xAE, 0xAD, 0xCB, 0xBA, 0xB8, 0xC0, 0xB4, 0xB3, 0x6F, 0x63, 0x61, 
   0x81, 0x72, 0x70, 0x87, 0x79, 0x76, 0x87, 0x76, 0x72, 0xEF, 0xDE, 0xD8, 0xF8, 0xDC, 0xD8, 0xF3, 
   0xD1, 0xCC, 0xEA, 0xC0, 0xBA, 0xDE, 0xB2, 0xAB, 0xCD, 0xA1, 0x99, 0xB3, 0x8A, 0x80, 0x9B, 0x79, 
   0x6D, 0x82, 0x66, 0x58, 0x78, 0x5C, 0x4E, 0x67, 0x4A, 0x3B, 0x66, 0x49, 0x3A, 0x6B, 0x4E, 0x3F, 
   0x6B, 0x4E, 0x3F, 0x6C, 0x4F, 0x40, 0x6B, 0x4E, 0x3F, 0x6A, 0x4D, 0x3E, 0x6A, 0x4D, 0x3E, 0x6A, 
   0x4D, 0x3E, 0x6C, 0x4F, 0x40, 0x6D, 0x50, 0x41, 0x6E, 0x51, 0x42, 0x6D, 0x50, 0x41, 0x6D, 0x50, 
   0x41, 0x6C, 0x4F, 0x40, 0x6C, 0x4F, 0x40, 0x6C, 0x4F, 0x40, 0x6C, 0x4F, 0x40, 0x6C, 0x4F, 0x40, 
   0x6D, 0x4F, 0x41, 0x6E, 0x50, 0x42, 0x6E, 0x50, 0x43, 0x6E, 0x51, 0x43, 0x6E, 0x50, 0x43, 0x6E, 
   0x50, 0x43, 0x6D, 0x50, 0x42, 0x6D, 0x53, 0x45, 0x70, 0x55, 0x47, 0x6F, 0x54, 0x46, 0x6E, 0x53, 
   0x45, 0x70, 0x55, 0x46, 0x70, 0x55, 0x48, 0x6D, 0x55, 0x4A, 0x6B, 0x54, 0x4A, 0x6D, 0x55, 0x4B, 
   0x6D, 0x56, 0x4B, 0x6C, 0x54, 0x4A, 0x6D, 0x56, 0x4B, 0x6F, 0x56, 0x4C, 0x70, 0x58, 0x4D, 0x6C, 
   0x57, 0x4C, 0x6B, 0x58, 0x4F, 0x58, 0x47, 0x3F, 0x3D, 0x2D, 0x26, 0x5D, 0x50, 0x49, 0x47, 0x41, 
   0x3A, 0x32, 0x2A, 0x23, 0x22, 0x19, 0x12, 0x40, 0x35, 0x2E, 0x39, 0x2D, 0x27, 0x27, 0x1A, 0x14, 
   0x2B, 0x1E, 0x18, 0x33, 0x25, 0x1F, 0x48, 0x4A, 0x50, 0x44, 0x49, 0x4E, 0x53, 0x5E, 0x62, 0x5A, 
   0x67, 0x69, 0x44, 0x4F, 0x50, 0x53, 0x59, 0x5B, 0x47, 0x4A, 0x49, 0x3F, 0x41, 0x3F, 0x42, 0x46, 
   0x48, 0x2F, 0x37, 0x3E, 0x3D, 0x46, 0x4F, 0x4F, 0x56, 0x5C, 0x30, 0x34, 0x38, 0x3D, 0x41, 0x43, 
   0x30, 0x34, 0x35, 0x6E, 0x73, 0x74, 0x44, 0x49, 0x4A, 0x3A, 0x3F, 0x40, 0x4E, 0x53, 0x54, 0x4B, 
   0x51, 0x51, 0x41, 0x4A, 0x49, 0x45, 0x4E, 0x4E, 0x4E, 0x58, 0x5A, 0x58, 0x64, 0x67, 0x4B, 0x56, 
   0x5B, 0x44, 0x50, 0x56, 0x47, 0x52, 0x5B, 0x57, 0x64, 0x6E, 0x46, 0x57, 0x5E, 0x43, 0x55, 0x5B, 
   0x49, 0x59, 0x5E, 0x59, 0x62, 0x67, 0x49, 0x50, 0x55, 0x40, 0x4C, 0x50, 0x47, 0x54, 0x5B, 0x44, 
   0x4F, 0x59, 0x51, 0x59, 0x62, 0x6C, 0x6E, 0x73, 0xDF, 0xDC, 0xDE, 0xD4, 0xC9, 0xC8, 0xE9, 0xD7, 
   0xD4, 0xC9, 0xB8, 0xB7, 0xBC, 0xB0, 0xB2, 0x68, 0x63, 0x67, 0x4A, 0x4E, 0x52, 0x87, 0x91, 0x95, 
   0x71, 0x7A, 0x83, 0x57, 0x68, 0x6E, 0x5A, 0x69, 0x6E, 0xE8, 0xE6, 0xEB, 0x97, 0x90, 0x96, 0x9F, 
   0x9E, 0xA2, 0x49, 0x4F, 0x54, 0x85, 0x89, 0x8F, 0xB0, 0xB1, 0xB7, 0x7C, 0x7B, 0x83, 0x4F, 0x51, 
   0x59, 0x59, 0x62, 0x67, 0x22, 0x2E, 0x33, 0x5A, 0x64, 0x66, 0x9A, 0x9B, 0x9C, 0xF0, 0xEA, 0xEC, 
   0xF8, 0xF2, 0xF3, 0xF8, 0xF6, 0xF5, 0x83, 0x88, 0x85, 0x4A, 0x50, 0x4D, 0x4B, 0x4E, 0x4E, 0x90, 
   0x90, 0x90, 0xEB, 0xE6, 0xE5, 0xF7, 0xED, 0xEA, 0xF8, 0xEB, 0xE8, 0xFC, 0xED, 0xEA, 0xF8, 0xE9, 
   0xE7, 0xF7, 0xE8, 0xE6, 0xF4, 0xE5, 0xE3, 0xF7, 0xE8, 0xE6, 0xFC, 0xED, 0xEB, 0xF9, 0xEB, 0xE9, 
   0xFD, 0xED, 0xEB, 0xFB, 0xE9, 0xE8, 0xFA, 0xE8, 0xE7, 0xFA, 0xE8, 0xE7, 0xF9, 0xE7, 0xE6, 0xF8, 
   0xE6, 0xE5, 0xF7, 0xE5, 0xE4, 0xF4, 0xE2, 0xE1, 0xF6, 0xE4, 0xE3, 0xF9, 0xE7, 0xE6, 0xFA, 0xE8, 
   0xE7, 0xFA, 0xE8, 0xE7, 0xF9, 0xE7, 0xE6, 0xF7, 0xE6, 0xE4, 0xF5, 0xE7, 0xE3, 0xEE, 0xDF, 0xDC, 
   0xFB, 0xED, 0xEA, 0xFB, 0xEE, 0xEB, 0xF8, 0xE9, 0xE6, 0xFA, 0xEB, 0xE8, 0xF6, 0xE7, 0xE4, 0xF5, 
   0xE6, 0xE3, 0xF6, 0xE7, 0xE4, 0xF8, 0xE9, 0xE6, 0xF7, 0xE8, 0xE5, 0xF2, 0xE3, 0xE0, 0xF3, 0xE2, 
   0xE0, 0xF8, 0xE5, 0xE5, 0xF7, 0xE5, 0xE4, 0xF5, 0xE3, 0xE2, 0xF2, 0xE2, 0xE1, 0xF7, 0xE9, 0xE8, 
   0xF5, 0xE3, 0xE2, 0xF4, 0xE1, 0xE0, 0xF0, 0xDE, 0xDD, 0xF4, 0xE2, 0xE1, 0xF0, 0xDE, 0xDD, 0xEC, 
   0xDA, 0xD9, 0xF0, 0xDD, 0xDD, 0xD3, 0xC5, 0xC0, 0x90, 0x87, 0x81, 0x7F, 0x77, 0x76, 0xC0, 0xB9, 
   0xBC, 0xFA, 0xF0, 0xF3, 0xF5, 0xE7, 0xE9, 0xF1, 0xE0, 0xE0, 0xFD, 0xE8, 0xE3, 0xFD, 0xE8, 0xE4, 
   0xF8, 0xE3, 0xE1, 0xF5, 0xE1, 0xE0, 0xFB, 0xE9, 0xEA, 0xEC, 0xDB, 0xDC, 0x9C, 0x8C, 0x8F, 0xB7, 
   0xA8, 0xAD, 0xF2, 0xE4, 0xE7, 0xFA, 0xE7, 0xE8, 0xF9, 0xE5, 0xE2, 0xF9, 0xE2, 0xDC, 0xF6, 0xDE, 
   0xD7, 0xEB, 0xD8, 0xD2, 0xEA, 0xD7, 0xD1, 0xED, 0xD8, 0xD2, 0xED, 0xD4, 0xCF, 0xEE, 0xD0, 0xCC, 
   0xF1, 0xD2, 0xCE, 0xEF, 0xD1, 0xCD, 0xEC, 0xD0, 0xCC, 0xEE, 0xD1, 0xCD, 0xF0, 0xD3, 0xCF, 0xEF, 
   0xD2, 0xCE, 0xEF, 0xD2, 0xCE, 0xEF, 0xD2, 0xCE, 0xF1, 0xD3, 0xD0, 0xF2, 0xD3, 0xD0, 0xEF, 0xD0, 
   0xCD, 0xED, 0xCE, 0xCB, 0xEE, 0xCF, 0xCC, 0xEF, 0xD0, 0xCD, 0xF1, 0xD4, 0xCF, 0xEF, 0xD3, 0xCA, 
   0xEE, 0xD1, 0xC8, 0xF0, 0xD1, 0xC8, 0xEE, 0xCF, 0xC6, 0xEC, 0xCB, 0xC2, 0xEA, 0xC9, 0xC0, 0xE8, 
   0xC8, 0xC0, 0xE8, 0xC8, 0xC3, 0xE8, 0xC8, 0xC2, 0xE8, 0xC8, 0xC2, 0xEB, 0xCB, 0xC5, 0xED, 0xCD, 
   0xC7, 0xEC, 0xCC, 0xC6, 0xED, 0xCB, 0xC5, 0xED, 0xCB, 0xC5, 0xE9, 0xC7, 0xC1, 0xEA, 0xC8, 0xC2, 
   0xE4, 0xC2, 0xBC, 0xE1, 0xC0, 0xBA, 0xE4, 0xC1, 0xBA, 0xE9, 0xC5, 0xBF, 0xE9, 0xC5, 0xBF, 0xE4, 
   0xC0, 0xB9, 0xE5, 0xC1, 0xBB, 0xE8, 0xC4, 0xBE, 0xE2, 0xBE, 0xB8, 0xDA, 0xB3, 0xAD, 0xE0, 0xBB, 
   0xB6, 0x93, 0x74, 0x6F, 0x5E, 0x46, 0x42, 0x79, 0x65, 0x61, 0x74, 0x65, 0x61, 0x64, 0x55, 0x52, 
   0x67, 0x58, 0x56, 0x77, 0x6A, 0x66, 0xEE, 0xE1, 0xDC, 0xF5, 0xE4, 0xDE, 0xF0, 0xD7, 0xD2, 0xF3, 
   0xD5, 0xD0, 0xF2, 0xCC, 0xC5, 0xE9, 0xC0, 0xB8, 0xDA, 0xAF, 0xA7, 0xC1, 0x98, 0x8E, 0xA8, 0x85, 
   0x79, 0x8C, 0x6F, 0x62, 0x7B, 0x5E, 0x50, 0x6C, 0x4F, 0x40, 0x6C, 0x4F, 0x40, 0x6E, 0x51, 0x42, 
   0x6C, 0x4F, 0x40, 0x6C, 0x4F, 0x40, 0x6B, 0x4E, 0x3F, 0x6C, 0x4F, 0x40, 0x6D, 0x50, 0x41, 0x6E, 
   0x51, 0x42, 0x70, 0x53, 0x44, 0x71, 0x54, 0x45, 0x6F, 0x52, 0x43, 0x6D, 0x50, 0x41, 0x6E, 0x51, 
   0x42, 0x6C, 0x4F, 0x40, 0x6C, 0x4F, 0x40, 0x6D, 0x50, 0x41, 0x6D, 0x50, 0x41, 0x6D, 0x50, 0x41, 
   0x6E, 0x50, 0x43, 0x6E, 0x50, 0x43, 0x6E, 0x50, 0x43, 0x6F, 0x51, 0x45, 0x71, 0x52, 0x46, 0x71, 
   0x52, 0x46, 0x6E, 0x51, 0x44, 0x6C, 0x52, 0x44, 0x6F, 0x54, 0x46, 0x6F, 0x54, 0x46, 0x6F, 0x54, 
   0x46, 0x70, 0x55, 0x47, 0x70, 0x55, 0x47, 0x6B, 0x55, 0x4A, 0x6F, 0x5A, 0x4F, 0x72, 0x5C, 0x52, 
   0x71, 0x5B, 0x51, 0x70, 0x5B, 0x50, 0x71, 0x5B, 0x51, 0x75, 0x5E, 0x54, 0x73, 0x5D, 0x53, 0x6C, 
   0x59, 0x50, 0x64, 0x53, 0x4A, 0x3E, 0x2F, 0x27, 0x3E, 0x30, 0x29, 0x52, 0x46, 0x3F, 0x40, 0x3A, 
   0x33, 0x21, 0x1A, 0x13, 0x26, 0x1D, 0x16, 0x33, 0x29, 0x22, 0x34, 0x29, 0x23, 0x31, 0x26, 0x20, 
   0x44, 0x37, 0x31, 0x61, 0x53, 0x4D, 0x50, 0x52, 0x58, 0x38, 0x3E, 0x43, 0x4E, 0x5A, 0x5F, 0x4F, 
   0x5D, 0x60, 0x4F, 0x5A, 0x5D, 0x49, 0x50, 0x54, 0x3E, 0x41, 0x44, 0x39, 0x3D, 0x3C, 0x31, 0x37, 
   0x38, 0x32, 0x3A, 0x41, 0x3A, 0x42, 0x4B, 0x3C, 0x42, 0x48, 0x39, 0x3C, 0x41, 0x3F, 0x42, 0x44, 
   0x30, 0x33, 0x34, 0x53, 0x57, 0x58, 0x47, 0x4B, 0x4C, 0x48, 0x4C, 0x4D, 0x42, 0x46, 0x47, 0x44, 
   0x49, 0x4A, 0x44, 0x4C, 0x4B, 0x4D, 0x56, 0x56, 0x4B, 0x55, 0x56, 0x55, 0x61, 0x63, 0x43, 0x4F, 
   0x52, 0x43, 0x4F, 0x54, 0x44, 0x50, 0x59, 0x5A, 0x69, 0x72, 0x56, 0x68, 0x6F, 0x3B, 0x4F, 0x55, 
   0x59, 0x69, 0x6E, 0x5D, 0x68, 0x6C, 0x53, 0x5C, 0x60, 0x3F, 0x4C, 0x51, 0x42, 0x51, 0x59, 0x3A, 
   0x49, 0x54, 0x52, 0x5F, 0x6B, 0x68, 0x71, 0x77, 0x54, 0x58, 0x59, 0x77, 0x73, 0x71, 0xB5, 0xAA, 
   0xA6, 0xEB, 0xE2, 0xDF, 0xD2, 0xC9, 0xCA, 0xCD, 0xC9, 0xCD, 0x72, 0x75, 0x7A, 0x7B, 0x83, 0x87, 
   0x80, 0x89, 0x91, 0x41, 0x52, 0x59, 0x64, 0x73, 0x78, 0x9C, 0x99, 0xA0, 0x56, 0x4F, 0x55, 0x31, 
   0x32, 0x36, 0x3E, 0x44, 0x49, 0x77, 0x7A, 0x82, 0x5F, 0x5D, 0x67, 0x53, 0x51, 0x5A, 0x51, 0x52, 
   0x5B, 0x52, 0x5A, 0x61, 0x41, 0x4E, 0x54, 0x8B, 0x93, 0x96, 0xD3, 0xD3, 0xD4, 0xFD, 0xF7, 0xF9, 
   0xEE, 0xE5, 0xE7, 0xE5, 0xE1, 0xE0, 0x52, 0x57, 0x52, 0x4E, 0x53, 0x51, 0x83, 0x82, 0x84, 0xF3, 
   0xF1, 0xF2, 0xF7, 0xF0, 0xEE, 0xF4, 0xEA, 0xE6, 0xF8, 0xEC, 0xE8, 0xF6, 0xEB, 0xE5, 0xFA, 0xEB, 
   0xE9, 0xF8, 0xE8, 0xE6, 0xF7, 0xE8, 0xE6, 0xFA, 0xEB, 0xE9, 0xF7, 0xE8, 0xE6, 0xF8, 0xEA, 0xE8, 
   0xF9, 0xE8, 0xE7, 0xFB, 0xE9, 0xE8, 0xFA, 0xE8, 0xE7, 0xFA, 0xE8, 0xE7, 0xF9, 0xE7, 0xE6, 0xF8, 
   0xE6, 0xE5, 0xF7, 0xE5, 0xE4, 0xF7, 0xE5, 0xE4, 0xF8, 0xE6, 0xE5, 0xFA, 0xE8, 0xE7, 0xF8, 0xE6, 
   0xE5, 0xF8, 0xE6, 0xE5, 0xFA, 0xE8, 0xE7, 0xF8, 0xE8, 0xE6, 0xF5, 0xE6, 0xE3, 0xF9, 0xEB, 0xE8, 
   0xDF, 0xD1, 0xCD, 0xD3, 0xC4, 0xC1, 0xEA, 0xDB, 0xD8, 0xF9, 0xEA, 0xE7, 0xF6, 0xE7, 0xE4, 0xF7, 
   0xE8, 0xE5, 0xF5, 0xE6, 0xE3, 0xFA, 0xEB, 0xE8, 0xF6, 0xE6, 0xE3, 0xF3, 0xE5, 0xE2, 0xF9, 0xE7, 
   0xE5, 0xF7, 0xE4, 0xE4, 0xF5, 0xE3, 0xE2, 0xF8, 0xE6, 0xE5, 0xF0, 0xE0, 0xDF, 0xDA, 0xCA, 0xC9, 
   0xEC, 0xDB, 0xDA, 0xE3, 0xD1, 0xD0, 0xE8, 0xD6, 0xD5, 0xF1, 0xDF, 0xDF, 0xE9, 0xD7, 0xD6, 0xE9, 
   0xD7, 0xD6, 0xF0, 0xDE, 0xDD, 0xF4, 0xE6, 0xE1, 0xD3, 0xCB, 0xC4, 0xCB, 0xC4, 0xC2, 0xF1, 0xEA, 
   0xED, 0xCF, 0xC6, 0xC9, 0xE8, 0xDE, 0xE0, 0xF6, 0xE8, 0xE8, 0xFD, 0xE9, 0xE4, 0xF8, 0xE3, 0xDF, 
   0xFA, 0xE6, 0xE4, 0xF9, 0xE7, 0xE5, 0xDB, 0xCC, 0xCD, 0x9F, 0x90, 0x91, 0xCC, 0xC1, 0xC3, 0xFF, 
   0xF4, 0xF9, 0xF7, 0xE7, 0xEA, 0xF3, 0xDF, 0xDE, 0xF7, 0xE2, 0xDE, 0xF9, 0xDF, 0xD9, 0xF6, 0xDB, 
   0xD4, 0xEC, 0xDA, 0xD3, 0xEA, 0xD8, 0xD1, 0xE7, 0xD4, 0xCD, 0xEA, 0xD3, 0xCC, 0xED, 0xD1, 0xCC, 
   0xEF, 0xD1, 0xCC, 0xEF, 0xD1, 0xCD, 0xEE, 0xD1, 0xCD, 0xEE, 0xD1, 0xCD, 0xEF, 0xD2, 0xCE, 0xF0, 
   0xD3, 0xCF, 0xF0, 0xD3, 0xCF, 0xF0, 0xD3, 0xCF, 0xF1, 0xD3, 0xCF, 0xF0, 0xD0, 0xCD, 0xEE, 0xCF, 
   0xCC, 0xEE, 0xCF, 0xCC, 0xED, 0xCE, 0xCB, 0xEF, 0xD0, 0xCD, 0xF2, 0xD5, 0xCF, 0xEF, 0xD3, 0xCA, 
   0xEF, 0xD2, 0xC9, 0xEE, 0xD0, 0xC7, 0xEA, 0xCB, 0xC2, 0xE8, 0xC7, 0xBE, 0xE8, 0xC7, 0xBE, 0xE6, 
   0xC6, 0xBF, 0xE8, 0xC8, 0xC2, 0xEB, 0xCB, 0xC5, 0xEC, 0xCC, 0xC6, 0xED, 0xCD, 0xC7, 0xED, 0xCD, 
   0xC7, 0xED, 0xCC, 0xC6, 0xED, 0xCB, 0xC5, 0xEB, 0xC9, 0xC3, 0xE8, 0xC6, 0xC0, 0xE9, 0xC7, 0xC1, 
   0xEA, 0xC8, 0xC2, 0xE4, 0xC2, 0xBD, 0xD7, 0xB4, 0xAE, 0xE9, 0xC4, 0xBF, 0xEA, 0xC5, 0xBF, 0xE2, 
   0xBD, 0xB8, 0xE6, 0xC1, 0xBC, 0xE7, 0xC2, 0xBC, 0xE3, 0xBD, 0xB7, 0xD6, 0xB1, 0xA8, 0xDA, 0xB6, 
   0xAE, 0xB4, 0x92, 0x8C, 0xA9, 0x8F, 0x88, 0x99, 0x82, 0x7D, 0x8B, 0x76, 0x70, 0x84, 0x71, 0x6E, 
   0x92, 0x83, 0x82, 0xE7, 0xDB, 0xD8, 0xF1, 0xE5, 0xDF, 0xEF, 0xDF, 0xD9, 0xF0, 0xDB, 0xD5, 0xF5, 
   0xDC, 0xD6, 0xF6, 0xD3, 0xCC, 0xED, 0xC8, 0xC0, 0xDE, 0xB7, 0xAE, 0xCA, 0xA1, 0x98, 0xB2, 0x8F, 
   0x83, 0x97, 0x77, 0x6A, 0x7E, 0x60, 0x52, 0x71, 0x54, 0x45, 0x6D, 0x50, 0x41, 0x6D, 0x50, 0x41, 
   0x6D, 0x50, 0x41, 0x6C, 0x4F, 0x40, 0x6E, 0x51, 0x42, 0x6F, 0x52, 0x43, 0x6F, 0x52, 0x44, 0x70, 
   0x53, 0x44, 0x71, 0x54, 0x45, 0x71, 0x54, 0x45, 0x6F, 0x52, 0x43, 0x6E, 0x51, 0x42, 0x6E, 0x51, 
   0x42, 0x6D, 0x50, 0x41, 0x6D, 0x50, 0x41, 0x6E, 0x51, 0x42, 0x6E, 0x51, 0x42, 0x6E, 0x51, 0x42, 
   0x6F, 0x51, 0x44, 0x6F, 0x51, 0x44, 0x6E, 0x50, 0x43, 0x6E, 0x50, 0x43, 0x6E, 0x50, 0x43, 0x6E, 
   0x50, 0x43, 0x6C, 0x50, 0x42, 0x6E, 0x53, 0x45, 0x71, 0x56, 0x48, 0x72, 0x57, 0x48, 0x71, 0x56, 
   0x48, 0x73, 0x57, 0x48, 0x73, 0x58, 0x4A, 0x66, 0x51, 0x47, 0x57, 0x44, 0x39, 0x4F, 0x3B, 0x30, 
   0x46, 0x32, 0x28, 0x46, 0x32, 0x27, 0x46, 0x32, 0x27, 0x4B, 0x36, 0x2B, 0x65, 0x50, 0x46, 0x7C, 
   0x69, 0x61, 0x64, 0x52, 0x4A, 0x3A, 0x2C, 0x24, 0x55, 0x48, 0x41, 0x3D, 0x32, 0x2C, 0x38, 0x32, 
   0x2B, 0x41, 0x3A, 0x33, 0x3F, 0x38, 0x31, 0x49, 0x41, 0x3A, 0x3E, 0x34, 0x2D, 0x2C, 0x20, 0x1A, 
   0x23, 0x16, 0x10, 0x2F, 0x21, 0x1A, 0x52, 0x55, 0x5D, 0x45, 0x4C, 0x51, 0x50, 0x5D, 0x60, 0x52, 
   0x61, 0x64, 0x44, 0x4F, 0x52, 0x49, 0x4F, 0x54, 0x52, 0x55, 0x59, 0x43, 0x46, 0x46, 0x34, 0x39, 
   0x3C, 0x3D, 0x45, 0x4C, 0x45, 0x4D, 0x55, 0x3D, 0x42, 0x48, 0x3C, 0x3F, 0x44, 0x42, 0x46, 0x48, 
   0x5D, 0x62, 0x63, 0x49, 0x4D, 0x4E, 0x69, 0x6D, 0x6E, 0x6E, 0x71, 0x72, 0x55, 0x58, 0x59, 0x47, 
   0x4B, 0x4B, 0x4B, 0x52, 0x51, 0x43, 0x4C, 0x4C, 0x3C, 0x46, 0x47, 0x41, 0x4D, 0x50, 0x3E, 0x4A, 
   0x4E, 0x42, 0x4E, 0x52, 0x40, 0x4B, 0x54, 0x59, 0x67, 0x71, 0x68, 0x7A, 0x82, 0x3B, 0x4F, 0x55, 
   0x5C, 0x6C, 0x71, 0x5C, 0x67, 0x6C, 0x48, 0x51, 0x55, 0x3C, 0x48, 0x4C, 0x3E, 0x4E, 0x55, 0x4A, 
   0x5B, 0x66, 0x4B, 0x5D, 0x69, 0x5D, 0x6A, 0x71, 0x3F, 0x49, 0x4B, 0x65, 0x67, 0x64, 0x9E, 0x98, 
   0x93, 0x81, 0x7B, 0x78, 0x54, 0x4D, 0x4E, 0x6A, 0x67, 0x6B, 0x8E, 0x91, 0x96, 0x90, 0x94, 0x99, 
   0x50, 0x56, 0x5F, 0x5A, 0x6A, 0x71, 0x55, 0x63, 0x69, 0x49, 0x47, 0x4E, 0x55, 0x4E, 0x55, 0x3F, 
   0x3F, 0x43, 0x3B, 0x40, 0x45, 0x58, 0x5B, 0x63, 0x77, 0x74, 0x7C, 0x70, 0x6B, 0x73, 0x8F, 0x8E, 
   0x96, 0x61, 0x66, 0x6D, 0x82, 0x8C, 0x92, 0x83, 0x89, 0x8B, 0xD1, 0xCF, 0xD1, 0xDF, 0xD5, 0xD8, 
   0xFD, 0xF3, 0xF5, 0xBE, 0xB8, 0xB8, 0x4A, 0x4D, 0x49, 0x60, 0x63, 0x61, 0xDA, 0xD7, 0xD9, 0xF3, 
   0xEE, 0xEF, 0xF2, 0xEA, 0xE8, 0xF7, 0xED, 0xE9, 0xF7, 0xEB, 0xE6, 0xF7, 0xED, 0xE6, 0xF8, 0xE9, 
   0xE7, 0xF4, 0xE6, 0xE4, 0xF6, 0xE7, 0xE5, 0xFB, 0xEC, 0xEA, 0xFA, 0xEA, 0xE9, 0xFA, 0xEA, 0xE8, 
   0xFA, 0xE9, 0xE8, 0xFB, 0xE9, 0xE8, 0xFA, 0xE8, 0xE6, 0xF9, 0xE7, 0xE6, 0xF9, 0xE7, 0xE6, 0xF8, 
   0xE6, 0xE5, 0xF7, 0xE5, 0xE4, 0xF6, 0xE5, 0xE4, 0xF6, 0xE5, 0xE3, 0xF6, 0xE5, 0xE4, 0xF4, 0xE3, 
   0xE1, 0xF5, 0xE3, 0xE2, 0xF9, 0xE8, 0xE7, 0xFA, 0xE9, 0xE7, 0xF5, 0xE7, 0xE4, 0xE4, 0xD5, 0xD2, 
   0xC1, 0xB1, 0xAF, 0xE3, 0xD4, 0xD2, 0xF7, 0xEA, 0xE7, 0xF7, 0xE9, 0xE7, 0xF7, 0xE8, 0xE4, 0xF9, 
   0xEB, 0xE7, 0xF9, 0xEB, 0xE8, 0xF8, 0xE9, 0xE6, 0xEC, 0xDD, 0xDA, 0xF1, 0xE2, 0xDF, 0xF9, 0xE9, 
   0xE7, 0xF5, 0xE4, 0xE3, 0xF4, 0xE3, 0xE2, 0xF8, 0xE7, 0xE6, 0xE6, 0xD4, 0xD3, 0xC7, 0xB5, 0xB4, 
   0xC3, 0xB4, 0xB3, 0xEB, 0xD9, 0xD7, 0xEB, 0xD9, 0xD8, 0xED, 0xDB, 0xD9, 0xEC, 0xD9, 0xD8, 0xF0, 
   0xDE, 0xDD, 0xF0, 0xDE, 0xDC, 0xED, 0xDE, 0xDA, 0xD2, 0xC8, 0xC3, 0xDB, 0xD4, 0xD3, 0xD0, 0xC9, 
   0xCC, 0xBD, 0xB4, 0xB7, 0xF2, 0xE8, 0xEA, 0xF5, 0xE8, 0xE7, 0xEB, 0xD8, 0xD2, 0xFA, 0xE8, 0xE3, 
   0xF4, 0xE4, 0xE1, 0xD8, 0xCA, 0xC8, 0xAF, 0xA2, 0xA4, 0xCD, 0xC2, 0xC2, 0xFD, 0xF0, 0xF2, 0xF8, 
   0xEA, 0xEE, 0xF6, 0xE4, 0xE7, 0xF7, 0xE3, 0xE2, 0xF6, 0xE0, 0xDB, 0xF7, 0xDE, 0xD7, 0xF5, 0xDB, 
   0xD2, 0xE8, 0xD6, 0xD0, 0xE8, 0xD7, 0xD0, 0xEA, 0xD4, 0xCE, 0xEC, 0xD3, 0xCE, 0xEC, 0xD2, 0xCC, 
   0xED, 0xD0, 0xCB, 0xEF, 0xD1, 0xCD, 0xEF, 0xD2, 0xCE, 0xEE, 0xD1, 0xCD, 0xED, 0xD0, 0xCC, 0xF0, 
   0xD3, 0xCF, 0xF0, 0xD3, 0xCF, 0xF0, 0xD3, 0xCF, 0xEF, 0xD1, 0xCE, 0xED, 0xCF, 0xCB, 0xEE, 0xD0, 
   0xCD, 0xF2, 0xD4, 0xD0, 0xEF, 0xD0, 0xCD, 0xEC, 0xCD, 0xCB, 0xEE, 0xD1, 0xCC, 0xEF, 0xD3, 0xCA, 
   0xF1, 0xD4, 0xCB, 0xEE, 0xCF, 0xC7, 0xE7, 0xC8, 0xC0, 0xE5, 0xC4, 0xBC, 0xE7, 0xC6, 0xBE, 0xE7, 
   0xC6, 0xBF, 0xE8, 0xC8, 0xC2, 0xED, 0xCC, 0xC6, 0xEF, 0xCF, 0xC9, 0xEF, 0xCF, 0xC9, 0xEC, 0xCC, 
   0xC6, 0xEC, 0xCB, 0xC5, 0xEC, 0xCA, 0xC4, 0xE9, 0xC7, 0xC1, 0xE8, 0xC6, 0xC0, 0xE4, 0xC2, 0xBC, 
   0xE7, 0xC5, 0xBF, 0xE6, 0xC5, 0xBE, 0xE0, 0xBC, 0xB7, 0xE9, 0xC3, 0xBE, 0xE8, 0xC2, 0xBD, 0xE4, 
   0xBD, 0xB8, 0xE8, 0xC2, 0xBD, 0xE7, 0xC0, 0xBC, 0xE5, 0xBE, 0xB9, 0xE3, 0xBE, 0xB5, 0xE4, 0xC1, 
   0xB8, 0xDB, 0xBB, 0xB2, 0xF0, 0xD4, 0xCC, 0xF1, 0xD7, 0xD1, 0xEF, 0xD8, 0xD1, 0xDF, 0xCB, 0xC8, 
   0xE1, 0xCF, 0xCE, 0xEF, 0xE0, 0xDD, 0xEC, 0xDF, 0xDA, 0xEC, 0xDD, 0xD7, 0xEE, 0xDC, 0xD5, 0xF2, 
   0xDA, 0xD4, 0xF6, 0xD7, 0xCF, 0xF0, 0xCE, 0xC5, 0xE4, 0xBE, 0xB6, 0xD3, 0xAD, 0xA3, 0xBE, 0x9A, 
   0x8E, 0xA6, 0x84, 0x77, 0x8D, 0x6D, 0x5F, 0x79, 0x5C, 0x4D, 0x6B, 0x4E, 0x3F, 0x6B, 0x4E, 0x3F, 
   0x6C, 0x4F, 0x40, 0x6D, 0x50, 0x41, 0x70, 0x54, 0x45, 0x72, 0x55, 0x45, 0x71, 0x54, 0x45, 0x70, 
   0x53, 0x44, 0x6F, 0x52, 0x42, 0x70, 0x53, 0x43, 0x6F, 0x52, 0x42, 0x70, 0x53, 0x44, 0x6F, 0x52, 
   0x43, 0x6D, 0x50, 0x41, 0x6D, 0x50, 0x41, 0x6F, 0x51, 0x42, 0x6F, 0x52, 0x43, 0x6E, 0x51, 0x42, 
   0x70, 0x53, 0x46, 0x6F, 0x52, 0x45, 0x6D, 0x50, 0x43, 0x6F, 0x52, 0x45, 0x6F, 0x52, 0x45, 0x70, 
   0x53, 0x46, 0x71, 0x55, 0x48, 0x71, 0x57, 0x4A, 0x73, 0x59, 0x4B, 0x72, 0x57, 0x4A, 0x73, 0x59, 
   0x4C, 0x75, 0x5A, 0x4D, 0x75, 0x5B, 0x4E, 0x5E, 0x49, 0x41, 0x33, 0x1E, 0x17, 0x1A, 0x06, 0x00, 
   0x26, 0x12, 0x0A, 0x31, 0x1C, 0x15, 0x38, 0x23, 0x1B, 0x31, 0x1D, 0x14, 0x37, 0x24, 0x1A, 0x5A, 
   0x48, 0x40, 0x6D, 0x5C, 0x54, 0x3E, 0x31, 0x2A, 0x3D, 0x31, 0x2B, 0x48, 0x3E, 0x37, 0x4B, 0x45, 
   0x3E, 0x62, 0x5C, 0x55, 0x76, 0x6E, 0x68, 0x52, 0x4A, 0x43, 0x38, 0x2F, 0x28, 0x29, 0x1E, 0x18, 
   0x24, 0x17, 0x11, 0x26, 0x18, 0x12, 0x60, 0x6C, 0x76, 0x46, 0x52, 0x59, 0x50, 0x5C, 0x5D, 0x5C, 
   0x65, 0x64, 0x47, 0x4F, 0x4F, 0x4E, 0x58, 0x5B, 0x4D, 0x53, 0x57, 0x47, 0x46, 0x4B, 0x38, 0x3B, 
   0x3F, 0x3E, 0x48, 0x4B, 0x4B, 0x57, 0x59, 0x47, 0x4F, 0x52, 0x4D, 0x53, 0x56, 0x45, 0x4D, 0x4D, 
   0x51, 0x5B, 0x5B, 0x3C, 0x42, 0x43, 0x49, 0x4D, 0x4E, 0x43, 0x46, 0x47, 0x48, 0x47, 0x49, 0x4C, 
   0x49, 0x4C, 0x56, 0x53, 0x58, 0x51, 0x53, 0x57, 0x40, 0x48, 0x4C, 0x45, 0x4F, 0x56, 0x42, 0x4B, 
   0x53, 0x43, 0x4A, 0x53, 0x4E, 0x54, 0x65, 0x5F, 0x69, 0x7B, 0x62, 0x73, 0x80, 0x4C, 0x62, 0x6A, 
   0x4F, 0x64, 0x69, 0x60, 0x6F, 0x71, 0x46, 0x52, 0x54, 0x3A, 0x46, 0x47, 0x3B, 0x4B, 0x50, 0x45, 
   0x5A, 0x63, 0x54, 0x6B, 0x75, 0x4E, 0x64, 0x6C, 0x50, 0x67, 0x6C, 0x52, 0x5B, 0x5D, 0x4D, 0x4A, 
   0x4B, 0x32, 0x35, 0x36, 0x88, 0x8D, 0x8E, 0x6E, 0x71, 0x72, 0x9A, 0x99, 0x9B, 0x69, 0x66, 0x69, 
   0x4E, 0x54, 0x5E, 0x56, 0x5D, 0x67, 0x5F, 0x67, 0x6E, 0x8E, 0x94, 0x99, 0x3F, 0x40, 0x45, 0x4E, 
   0x4B, 0x4E, 0x6B, 0x6C, 0x71, 0x5F, 0x62, 0x69, 0x70, 0x6D, 0x70, 0xB7, 0xAD, 0xAD, 0xC0, 0xB3, 
   0xB3, 0xAE, 0xA2, 0xA5, 0xBE, 0xB5, 0xBB, 0x6A, 0x6D, 0x70, 0xB7, 0xB6, 0xB7, 0xDA, 0xD2, 0xD4, 
   0xFC, 0xEF, 0xF1, 0xD8, 0xCE, 0xCE, 0x61, 0x5B, 0x59, 0xCB, 0xC5, 0xC4, 0xF0, 0xE9, 0xEA, 0xF0, 
   0xE7, 0xE7, 0xF6, 0xE9, 0xE7, 0xF8, 0xE8, 0xE4, 0xFD, 0xEC, 0xE6, 0xFB, 0xEA, 0xE3, 0xF7, 0xEA, 
   0xE8, 0xF5, 0xE8, 0xE6, 0xF9, 0xEB, 0xEA, 0xFD, 0xEC, 0xEB, 0xFF, 0xEB, 0xEA, 0xFE, 0xEA, 0xE9, 
   0xFC, 0xE9, 0xE7, 0xFC, 0xE8, 0xE6, 0xFB, 0xE8, 0xE6, 0xFD, 0xEA, 0xE7, 0xFC, 0xE9, 0xE6, 0xF7, 
   0xE4, 0xE1, 0xF6, 0xE3, 0xE0, 0xF4, 0xE8, 0xE4, 0xF3, 0xE7, 0xE4, 0xF3, 0xE7, 0xE3, 0xF2, 0xE6, 
   0xE2, 0xF0, 0xE4, 0xE0, 0xF4, 0xE8, 0xE4, 0xF8, 0xE8, 0xE6, 0xF7, 0xE4, 0xE3, 0xEA, 0xDB, 0xDA, 
   0xD0, 0xC0, 0xC1, 0xEE, 0xE0, 0xE2, 0xFF, 0xF5, 0xF7, 0xF3, 0xE9, 0xEC, 0xF6, 0xE9, 0xE4, 0xF6, 
   0xEB, 0xE5, 0xF5, 0xEA, 0xE5, 0xE1, 0xD5, 0xD1, 0xD0, 0xC3, 0xC0, 0xF8, 0xEB, 0xE9, 0xF3, 0xE7, 
   0xE4, 0xF2, 0xE8, 0xE4, 0xD6, 0xCB, 0xC8, 0xC2, 0xB6, 0xB2, 0xA4, 0x98, 0x94, 0x93, 0x87, 0x83, 
   0xEC, 0xE3, 0xDF, 0xFD, 0xE9, 0xE4, 0xFA, 0xE6, 0xE1, 0xF6, 0xE0, 0xDB, 0xF5, 0xDF, 0xDA, 0xF8, 
   0xE3, 0xDE, 0xF7, 0xE2, 0xDD, 0xF6, 0xDF, 0xDE, 0xEC, 0xD7, 0xD9, 0xA5, 0x96, 0x97, 0x98, 0x90, 
   0x90, 0xD0, 0xCC, 0xCB, 0xF6, 0xF3, 0xF2, 0xD7, 0xD2, 0xD0, 0xD8, 0xCB, 0xC0, 0xCA, 0xC2, 0xBB, 
   0xE4, 0xE2, 0xE0, 0xDA, 0xDA, 0xDC, 0xF4, 0xF0, 0xF5, 0xF0, 0xE6, 0xED, 0xF0, 0xE2, 0xE3, 0xF8, 
   0xE9, 0xE5, 0xF6, 0xE6, 0xE3, 0xF3, 0xE2, 0xDF, 0xF2, 0xDF, 0xDC, 0xF0, 0xDB, 0xD9, 0xEE, 0xD8, 
   0xD6, 0xF1, 0xD7, 0xD3, 0xF1, 0xD5, 0xD1, 0xEF, 0xD3, 0xCF, 0xF1, 0xD3, 0xCF, 0xF2, 0xD1, 0xCE, 
   0xEE, 0xCD, 0xCA, 0xF0, 0xD0, 0xCD, 0xF0, 0xD1, 0xCE, 0xEF, 0xD0, 0xCD, 0xEE, 0xCF, 0xCC, 0xEE, 
   0xCF, 0xCC, 0xEE, 0xCF, 0xCC, 0xEE, 0xCF, 0xCC, 0xED, 0xD0, 0xCD, 0xED, 0xD2, 0xCE, 0xEF, 0xD3, 
   0xD0, 0xEF, 0xD4, 0xD0, 0xEE, 0xD3, 0xCF, 0xEB, 0xD0, 0xCC, 0xEB, 0xD0, 0xCA, 0xEC, 0xD1, 0xC7, 
   0xED, 0xD2, 0xC8, 0xED, 0xCF, 0xC8, 0xEB, 0xCD, 0xC8, 0xE2, 0xC2, 0xBE, 0xE8, 0xC7, 0xC4, 0xE1, 
   0xBE, 0xBB, 0xEA, 0xC6, 0xC3, 0xED, 0xCA, 0xC5, 0xF1, 0xCF, 0xC9, 0xF0, 0xCE, 0xC7, 0xED, 0xCC, 
   0xC3, 0xEB, 0xCB, 0xC2, 0xED, 0xCA, 0xC4, 0xE7, 0xC5, 0xBF, 0xE6, 0xC4, 0xBE, 0xE7, 0xC5, 0xBF, 
   0xE6, 0xC4, 0xBE, 0xE7, 0xC5, 0xBF, 0xE5, 0xC1, 0xBC, 0xEE, 0xC8, 0xC3, 0xE7, 0xC1, 0xBC, 0xE6, 
   0xC0, 0xBB, 0xEA, 0xC4, 0xBF, 0xE9, 0xC3, 0xBE, 0xE8, 0xC2, 0xBD, 0xE6, 0xC6, 0xC0, 0xE6, 0xC7, 
   0xC1, 0xE5, 0xC7, 0xC1, 0xE7, 0xCB, 0xC4, 0xEE, 0xD3, 0xCC, 0xEC, 0xD1, 0xCA, 0xEA, 0xD5, 0xCE, 
   0xE3, 0xD0, 0xCB, 0xF4, 0xE1, 0xDC, 0xF1, 0xDD, 0xD8, 0xF1, 0xDC, 0xD7, 0xF2, 0xDC, 0xD7, 0xF1, 
   0xDB, 0xD6, 0xF1, 0xDC, 0xCD, 0xEB, 0xD2, 0xC4, 0xE2, 0xC6, 0xB9, 0xDB, 0xB7, 0xAB, 0xCC, 0xA3, 
   0x98, 0xBA, 0x8D, 0x82, 0x9D, 0x78, 0x6C, 0x82, 0x65, 0x58, 0x74, 0x56, 0x49, 0x6F, 0x51, 0x44, 
   0x6F, 0x51, 0x44, 0x6F, 0x53, 0x45, 0x6E, 0x53, 0x45, 0x77, 0x58, 0x44, 0x77, 0x58, 0x42, 0x76, 
   0x57, 0x42, 0x78, 0x59, 0x44, 0x76, 0x57, 0x42, 0x74, 0x55, 0x40, 0x73, 0x54, 0x42, 0x70, 0x51, 
   0x43, 0x71, 0x52, 0x43, 0x6F, 0x50, 0x41, 0x70, 0x51, 0x42, 0x6F, 0x50, 0x41, 0x70, 0x51, 0x42, 
   0x6A, 0x52, 0x45, 0x69, 0x51, 0x45, 0x6A, 0x52, 0x46, 0x6B, 0x53, 0x47, 0x6F, 0x56, 0x4A, 0x79, 
   0x5F, 0x53, 0x67, 0x52, 0x48, 0x47, 0x35, 0x2E, 0x39, 0x27, 0x20, 0x38, 0x26, 0x1F, 0x48, 0x36, 
   0x2F, 0x69, 0x57, 0x50, 0x6D, 0x5B, 0x54, 0x72, 0x61, 0x5D, 0x56, 0x45, 0x42, 0x48, 0x37, 0x33, 
   0x31, 0x20, 0x1C, 0x21, 0x0F, 0x0C, 0x26, 0x15, 0x12, 0x24, 0x16, 0x11, 0x1C, 0x12, 0x0B, 0x25, 
   0x1B, 0x14, 0x60, 0x56, 0x4F, 0x6E, 0x64, 0x5D, 0x36, 0x2C, 0x25, 0x30, 0x26, 0x1F, 0x30, 0x27, 
   0x24, 0x34, 0x2C, 0x28, 0x4C, 0x43, 0x3F, 0x4F, 0x46, 0x42, 0x42, 0x39, 0x35, 0x32, 0x29, 0x25, 
   0x34, 0x2A, 0x26, 0x23, 0x18, 0x14, 0x54, 0x62, 0x6B, 0x47, 0x55, 0x5B, 0x4F, 0x5B, 0x5C, 0x55, 
   0x5E, 0x5D, 0x4E, 0x56, 0x56, 0x59, 0x63, 0x66, 0x4B, 0x51, 0x55, 0x43, 0x43, 0x47, 0x40, 0x43, 
   0x47, 0x2B, 0x35, 0x38, 0x58, 0x64, 0x66, 0x59, 0x61, 0x64, 0x41, 0x47, 0x4A, 0x39, 0x3F, 0x40, 
   0x3D, 0x43, 0x44, 0x45, 0x4A, 0x4B, 0x44, 0x48, 0x49, 0x49, 0x4D, 0x4E, 0x36, 0x37, 0x38, 0x4F, 
   0x4F, 0x51, 0x4A, 0x49, 0x4D, 0x4A, 0x4D, 0x51, 0x43, 0x4D, 0x51, 0x41, 0x4D, 0x53, 0x50, 0x5B, 
   0x62, 0x46, 0x50, 0x58, 0x54, 0x5A, 0x6B, 0x61, 0x6D, 0x7E, 0x5B, 0x6D, 0x7A, 0x5E, 0x73, 0x7C, 
   0x5E, 0x73, 0x78, 0x5B, 0x6B, 0x6E, 0x54, 0x61, 0x62, 0x47, 0x53, 0x53, 0x39, 0x47, 0x4B, 0x3E, 
   0x50, 0x58, 0x58, 0x6C, 0x77, 0x59, 0x6C, 0x74, 0x49, 0x5D, 0x63, 0x86, 0x8C, 0x90, 0x87, 0x84, 
   0x86, 0x7F, 0x83, 0x84, 0xB9, 0xBF, 0xC0, 0x80, 0x85, 0x86, 0x96, 0x96, 0x97, 0x74, 0x71, 0x74, 
   0x56, 0x5A, 0x64, 0x5D, 0x62, 0x6B, 0x72, 0x78, 0x80, 0x65, 0x6A, 0x6F, 0x3F, 0x42, 0x47, 0x69, 
   0x68, 0x6B, 0x7D, 0x7E, 0x83, 0x50, 0x50, 0x57, 0x8E, 0x89, 0x8C, 0xEB, 0xE5, 0xE5, 0xC9, 0xC2, 
   0xC2, 0xE8, 0xDF, 0xE1, 0x6B, 0x64, 0x6A, 0x82, 0x84, 0x87, 0xC0, 0xBD, 0xBF, 0xF6, 0xEF, 0xF1, 
   0xE8, 0xDC, 0xDD, 0xB6, 0xAD, 0xAE, 0x7A, 0x72, 0x70, 0x9E, 0x96, 0x95, 0xFB, 0xF1, 0xF2, 0xEC, 
   0xE1, 0xE1, 0xF6, 0xEA, 0xE8, 0xF9, 0xEB, 0xE6, 0xFB, 0xEC, 0xE5, 0xFB, 0xEA, 0xE3, 0xF5, 0xE8, 
   0xE6, 0xFB, 0xF0, 0xEE, 0xF9, 0xEC, 0xEA, 0xFB, 0xEC, 0xEA, 0xFB, 0xEB, 0xE9, 0xFB, 0xE9, 0xE8, 
   0xFB, 0xE8, 0xE6, 0xF9, 0xE6, 0xE3, 0xF9, 0xE6, 0xE3, 0xFA, 0xE7, 0xE4, 0xF9, 0xE6, 0xE3, 0xF8, 
   0xE5, 0xE2, 0xF9, 0xE6, 0xE3, 0xF5, 0xE6, 0xE3, 0xF4, 0xE5, 0xE2, 0xF4, 0xE5, 0xE2, 0xF5, 0xE7, 
   0xE4, 0xF5, 0xE6, 0xE3, 0xF6, 0xE8, 0xE5, 0xF4, 0xE4, 0xE2, 0xF8, 0xE5, 0xE4, 0xD6, 0xC5, 0xC4, 
   0xDC, 0xCD, 0xCE, 0xFF, 0xF5, 0xF7, 0xDD, 0xD1, 0xD4, 0xE4, 0xDB, 0xDD, 0xFD, 0xF6, 0xF2, 0xFF, 
   0xF8, 0xF4, 0xFF, 0xFA, 0xF7, 0xE5, 0xD9, 0xD7, 0xF1, 0xE6, 0xE4, 0xF9, 0xEA, 0xE8, 0xF6, 0xE8, 
   0xE5, 0xF2, 0xE9, 0xE6, 0xB1, 0xA2, 0x9F, 0x94, 0x86, 0x83, 0xBF, 0xB1, 0xAD, 0xEE, 0xE1, 0xDE, 
   0xF4, 0xE5, 0xE2, 0xF6, 0xE0, 0xDB, 0xFA, 0xE3, 0xDE, 0xFB, 0xE5, 0xE0, 0xFD, 0xE8, 0xE2, 0xF9, 
   0xE3, 0xDD, 0xF6, 0xE0, 0xDB, 0xCD, 0xB6, 0xB4, 0x93, 0x7C, 0x7F, 0xB1, 0xA2, 0xA3, 0xC5, 0xBB, 
   0xBB, 0xC5, 0xC2, 0xC1, 0xC2, 0xBD, 0xBD, 0xC3, 0xBC, 0xBC, 0xBE, 0xB0, 0xA9, 0x8B, 0x80, 0x7B, 
   0xF3, 0xF2, 0xF2, 0xE7, 0xE8, 0xED, 0x9B, 0x99, 0x9E, 0x8C, 0x84, 0x8C, 0xE5, 0xD8, 0xD9, 0xF8, 
   0xE8, 0xE4, 0xF4, 0xE3, 0xE0, 0xF2, 0xDF, 0xDC, 0xF2, 0xDE, 0xDC, 0xF0, 0xDB, 0xD9, 0xEF, 0xD8, 
   0xD6, 0xF2, 0xD8, 0xD4, 0xF2, 0xD6, 0xD2, 0xF1, 0xD4, 0xD0, 0xF1, 0xD3, 0xCF, 0xF2, 0xD2, 0xCF, 
   0xEF, 0xCE, 0xCB, 0xF0, 0xD0, 0xCD, 0xF0, 0xD1, 0xCE, 0xEF, 0xD0, 0xCD, 0xEE, 0xCF, 0xCC, 0xEE, 
   0xCF, 0xCC, 0xF0, 0xD0, 0xCE, 0xF1, 0xD2, 0xCF, 0xEF, 0xD3, 0xCF, 0xEE, 0xD3, 0xCF, 0xF0, 0xD5, 
   0xD1, 0xED, 0xD2, 0xCE, 0xED, 0xD2, 0xCE, 0xE8, 0xCE, 0xCA, 0xEB, 0xD0, 0xCA, 0xED, 0xD2, 0xC8, 
   0xF0, 0xD4, 0xCB, 0xEE, 0xD1, 0xCA, 0xEC, 0xCE, 0xC8, 0xE6, 0xC7, 0xC3, 0xEA, 0xCB, 0xC8, 0xE9, 
   0xCA, 0xC7, 0xE6, 0xC7, 0xC3, 0xE6, 0xC7, 0xC2, 0xEE, 0xCF, 0xC9, 0xF0, 0xCF, 0xC8, 0xF0, 0xCE, 
   0xC5, 0xEB, 0xC8, 0xC0, 0xED, 0xCA, 0xC4, 0xEB, 0xC9, 0xC3, 0xE7, 0xC5, 0xBF, 0xEA, 0xC8, 0xC2, 
   0xE8, 0xC6, 0xC0, 0xEB, 0xC9, 0xC3, 0xE9, 0xC5, 0xC0, 0xEB, 0xC7, 0xC1, 0xE7, 0xC3, 0xBD, 0xE8, 
   0xC3, 0xBD, 0xEB, 0xC7, 0xC1, 0xE9, 0xC5, 0xBF, 0xE8, 0xC4, 0xBE, 0xE5, 0xC5, 0xBF, 0xE9, 0xC8, 
   0xC3, 0xF0, 0xD2, 0xCC, 0xED, 0xD1, 0xCA, 0xEF, 0xD4, 0xCD, 0xF1, 0xD6, 0xCF, 0xEC, 0xD6, 0xD0, 
   0xF2, 0xDF, 0xDA, 0xF3, 0xE0, 0xDB, 0xF0, 0xDC, 0xD7, 0xEE, 0xD9, 0xD4, 0xF2, 0xDC, 0xD7, 0xF4, 
   0xDB, 0xD7, 0xF3, 0xDC, 0xD0, 0xEF, 0xD6, 0xCA, 0xEB, 0xCE, 0xC2, 0xE9, 0xC6, 0xBB, 0xDB, 0xB4, 
   0xAA, 0xCB, 0x9D, 0x94, 0xB0, 0x88, 0x7D, 0x92, 0x73, 0x66, 0x81, 0x62, 0x55, 0x75, 0x57, 0x4A, 
   0x6F, 0x51, 0x44, 0x72, 0x54, 0x47, 0x74, 0x56, 0x48, 0x78, 0x5A, 0x46, 0x78, 0x59, 0x45, 0x77, 
   0x59, 0x45, 0x78, 0x59, 0x46, 0x76, 0x57, 0x44, 0x75, 0x56, 0x42, 0x73, 0x55, 0x45, 0x6F, 0x53, 
   0x46, 0x6D, 0x51, 0x43, 0x6E, 0x52, 0x44, 0x70, 0x54, 0x46, 0x74, 0x58, 0x4A, 0x71, 0x55, 0x47, 
   0x68, 0x53, 0x48, 0x64, 0x4F, 0x44, 0x6A, 0x56, 0x4A, 0x65, 0x50, 0x45, 0x5E, 0x4A, 0x3E, 0x4D, 
   0x38, 0x2D, 0x46, 0x33, 0x29, 0x33, 0x22, 0x1A, 0x26, 0x14, 0x0D, 0x23, 0x11, 0x0A, 0x1B, 0x09, 
   0x02, 0x48, 0x36, 0x2F, 0x66, 0x54, 0x4D, 0x4B, 0x3A, 0x37, 0x39, 0x28, 0x25, 0x56, 0x45, 0x42, 
   0x6C, 0x5B, 0x58, 0x58, 0x47, 0x44, 0x39, 0x27, 0x25, 0x2C, 0x1E, 0x19, 0x34, 0x28, 0x22, 0x3D, 
   0x31, 0x2B, 0x5B, 0x50, 0x4A, 0x50, 0x44, 0x3E, 0x32, 0x27, 0x21, 0x32, 0x27, 0x20, 0x42, 0x36, 
   0x2F, 0x49, 0x3E, 0x37, 0x3B, 0x31, 0x2A, 0x3D, 0x33, 0x2C, 0x51, 0x48, 0x41, 0x41, 0x38, 0x30, 
   0x38, 0x2D, 0x28, 0x31, 0x25, 0x22, 0x4C, 0x5A, 0x63, 0x57, 0x65, 0x6B, 0x66, 0x71, 0x72, 0x49, 
   0x50, 0x50, 0x4B, 0x53, 0x53, 0x55, 0x5E, 0x61, 0x4D, 0x53, 0x58, 0x50, 0x50, 0x54, 0x47, 0x4B, 
   0x4E, 0x43, 0x4C, 0x4E, 0x47, 0x53, 0x55, 0x4C, 0x54, 0x57, 0x52, 0x58, 0x5B, 0x38, 0x3C, 0x3D, 
   0x3C, 0x3F, 0x40, 0x4E, 0x52, 0x53, 0x47, 0x4B, 0x4C, 0x46, 0x4A, 0x4B, 0x3F, 0x43, 0x44, 0x49, 
   0x4C, 0x4E, 0x44, 0x45, 0x49, 0x4C, 0x52, 0x55, 0x42, 0x4F, 0x52, 0x37, 0x46, 0x4C, 0x4A, 0x57, 
   0x5E, 0x51, 0x5D, 0x65, 0x51, 0x5D, 0x6A, 0x4A, 0x59, 0x67, 0x64, 0x76, 0x81, 0x65, 0x7A, 0x82, 
   0x62, 0x77, 0x7C, 0x58, 0x6A, 0x6D, 0x50, 0x60, 0x61, 0x52, 0x5B, 0x5C, 0x50, 0x5B, 0x5F, 0x4B, 
   0x59, 0x62, 0x44, 0x54, 0x60, 0x5F, 0x6D, 0x76, 0x4E, 0x5B, 0x63, 0x93, 0x98, 0x9B, 0xE7, 0xE6, 
   0xE7, 0x97, 0x9B, 0x9C, 0x3C, 0x41, 0x42, 0x48, 0x4D, 0x4E, 0x96, 0x98, 0x98, 0xA6, 0xA3, 0xA6, 
   0x70, 0x74, 0x7C, 0x58, 0x5B, 0x64, 0x30, 0x33, 0x3A, 0x30, 0x31, 0x37, 0x58, 0x5A, 0x5E, 0x75, 
   0x76, 0x79, 0x69, 0x68, 0x6F, 0x4B, 0x48, 0x4F, 0xC6, 0xBF, 0xC2, 0xFC, 0xF7, 0xF7, 0xF8, 0xF5, 
   0xF4, 0xB5, 0xB0, 0xB1, 0x9A, 0x97, 0x9C, 0xA0, 0xA1, 0xA4, 0xCA, 0xC6, 0xC9, 0xF6, 0xEE, 0xF0, 
   0xB8, 0xAB, 0xAD, 0xB8, 0xAD, 0xAD, 0xE3, 0xDB, 0xD8, 0xE9, 0xE1, 0xE0, 0xF8, 0xEA, 0xEC, 0xED, 
   0xE1, 0xE1, 0xF3, 0xE9, 0xE7, 0xF9, 0xEC, 0xE8, 0xF9, 0xEE, 0xE9, 0xF8, 0xEE, 0xE9, 0xEF, 0xE7, 
   0xE4, 0xA5, 0x9B, 0x98, 0xF7, 0xEE, 0xEB, 0xF8, 0xEB, 0xE9, 0xF8, 0xEA, 0xE8, 0xF8, 0xE9, 0xE8, 
   0xFA, 0xE8, 0xE6, 0xFB, 0xE8, 0xE5, 0xFA, 0xE7, 0xE4, 0xF8, 0xE5, 0xE2, 0xF7, 0xE4, 0xE1, 0xFA, 
   0xE7, 0xE4, 0xFB, 0xE8, 0xE5, 0xF5, 0xE6, 0xE3, 0xF3, 0xE4, 0xE1, 0xF4, 0xE5, 0xE2, 0xF5, 0xE6, 
   0xE3, 0xF7, 0xE8, 0xE5, 0xF6, 0xE7, 0xE4, 0xFC, 0xEC, 0xE9, 0xF1, 0xDF, 0xDD, 0xD7, 0xC7, 0xC5, 
   0xF5, 0xED, 0xEC, 0xE9, 0xDF, 0xE1, 0x7E, 0x75, 0x76, 0xEB, 0xE4, 0xE5, 0xE4, 0xDF, 0xE1, 0xD8, 
   0xD2, 0xD3, 0xB6, 0xAD, 0xAE, 0xA7, 0x9D, 0x9C, 0xF7, 0xEA, 0xE8, 0xF7, 0xE7, 0xE5, 0xFB, 0xEB, 
   0xE9, 0xEB, 0xDE, 0xDA, 0xC6, 0xB7, 0xB4, 0xCF, 0xC1, 0xBE, 0xFE, 0xF1, 0xEE, 0xF4, 0xE5, 0xE2, 
   0xF2, 0xE3, 0xE0, 0xF6, 0xE1, 0xDE, 0xF8, 0xE2, 0xE0, 0xF7, 0xE2, 0xDF, 0xFD, 0xE8, 0xE5, 0xE9, 
   0xD4, 0xD1, 0xD2, 0xBD, 0xBA, 0xA8, 0x91, 0x91, 0x9F, 0x88, 0x8A, 0xF0, 0xE3, 0xE4, 0xE6, 0xDA, 
   0xDA, 0xB5, 0xAD, 0xAD, 0xBA, 0xB1, 0xB1, 0xC1, 0xB5, 0xB5, 0xA8, 0x98, 0x93, 0xF1, 0xEA, 0xE9, 
   0xDE, 0xDC, 0xDF, 0x8B, 0x8D, 0x95, 0x75, 0x75, 0x7D, 0x8A, 0x86, 0x8F, 0xE7, 0xDB, 0xDD, 0xF9, 
   0xE8, 0xE4, 0xF4, 0xE3, 0xE0, 0xF2, 0xDF, 0xDC, 0xF3, 0xDE, 0xDC, 0xF1, 0xDB, 0xD9, 0xF0, 0xD8, 
   0xD6, 0xF3, 0xD8, 0xD4, 0xF2, 0xD7, 0xD3, 0xF2, 0xD5, 0xD1, 0xF0, 0xD2, 0xCF, 0xF3, 0xD2, 0xCF, 
   0xF2, 0xD0, 0xCD, 0xF1, 0xD1, 0xCE, 0xF0, 0xD1, 0xCE, 0xEF, 0xD0, 0xCD, 0xEE, 0xCF, 0xCC, 0xEF, 
   0xD0, 0xCD, 0xF0, 0xD1, 0xCE, 0xF1, 0xD2, 0xCF, 0xEE, 0xD2, 0xCD, 0xEE, 0xD1, 0xCC, 0xEF, 0xD2, 
   0xCE, 0xEF, 0xD3, 0xCE, 0xEB, 0xCE, 0xCA, 0xE6, 0xC9, 0xC5, 0xEE, 0xD2, 0xCC, 0xF3, 0xD7, 0xCE, 
   0xED, 0xD1, 0xC8, 0xEE, 0xD1, 0xCA, 0xE9, 0xCB, 0xC6, 0xEB, 0xCC, 0xC8, 0xEA, 0xCB, 0xC8, 0xB8, 
   0x9F, 0x9A, 0xB8, 0xA2, 0x9E, 0xDD, 0xC3, 0xBE, 0xEE, 0xD2, 0xCB, 0xF0, 0xD1, 0xCA, 0xED, 0xCB, 
   0xC2, 0xEF, 0xCC, 0xC4, 0xED, 0xCB, 0xC5, 0xE9, 0xC7, 0xC1, 0xE9, 0xC7, 0xC1, 0xEC, 0xCA, 0xC4, 
   0xE6, 0xC4, 0xBE, 0xE7, 0xC5, 0xBF, 0xE9, 0xC6, 0xC0, 0xEB, 0xC6, 0xC0, 0xEA, 0xC6, 0xC0, 0xEA, 
   0xC6, 0xC0, 0xEA, 0xC6, 0xC0, 0xE7, 0xC3, 0xBD, 0xE8, 0xC4, 0xBE, 0xE8, 0xC7, 0xC2, 0xE7, 0xC7, 
   0xC2, 0xF1, 0xD2, 0xCC, 0xF3, 0xD6, 0xD0, 0xF0, 0xD4, 0xCF, 0xF1, 0xD6, 0xD0, 0xEE, 0xD8, 0xD2, 
   0xEE, 0xDB, 0xD6, 0xEE, 0xDB, 0xD6, 0xF3, 0xDF, 0xDA, 0xF5, 0xDF, 0xDA, 0xF5, 0xDD, 0xD9, 0xF3, 
   0xDB, 0xD6, 0xF4, 0xDB, 0xD3, 0xF4, 0xD9, 0xD1, 0xF3, 0xD5, 0xCE, 0xEF, 0xCC, 0xC5, 0xE5, 0xBE, 
   0xB7, 0xD3, 0xA8, 0xA2, 0xBA, 0x93, 0x89, 0x9D, 0x7B, 0x6E, 0x8C, 0x6A, 0x5D, 0x7D, 0x5D, 0x4F, 
   0x72, 0x54, 0x47, 0x74, 0x56, 0x49, 0x77, 0x59, 0x4C, 0x75, 0x5A, 0x48, 0x74, 0x59, 0x47, 0x74, 
   0x58, 0x47, 0x72, 0x57, 0x45, 0x71, 0x55, 0x44, 0x71, 0x55, 0x43, 0x70, 0x56, 0x46, 0x67, 0x50, 
   0x42, 0x6D, 0x56, 0x47, 0x6D, 0x56, 0x47, 0x5D, 0x46, 0x37, 0x57, 0x40, 0x31, 0x62, 0x4B, 0x3D, 
   0x63, 0x50, 0x47, 0x4B, 0x39, 0x30, 0x42, 0x2F, 0x27, 0x3D, 0x2A, 0x22, 0x27, 0x14, 0x0D, 0x19, 
   0x06, 0x00, 0x3A, 0x27, 0x20, 0x43, 0x30, 0x2A, 0x2C, 0x1A, 0x14, 0x22, 0x10, 0x0A, 0x1F, 0x0C, 
   0x06, 0x26, 0x13, 0x0E, 0x67, 0x55, 0x4F, 0x65, 0x54, 0x51, 0x27, 0x16, 0x13, 0x27, 0x16, 0x13, 
   0x3C, 0x2B, 0x28, 0x4F, 0x3E, 0x3B, 0x5C, 0x4A, 0x47, 0x46, 0x36, 0x32, 0x57, 0x48, 0x42, 0x4B, 
   0x3D, 0x37, 0x5A, 0x4C, 0x46, 0x59, 0x4A, 0x44, 0x3D, 0x2F, 0x29, 0x42, 0x34, 0x2D, 0x4F, 0x3E, 
   0x34, 0x55, 0x45, 0x3B, 0x5A, 0x4B, 0x40, 0x48, 0x39, 0x2F, 0x4D, 0x42, 0x37, 0x41, 0x38, 0x2C, 
   0x33, 0x28, 0x20, 0x31, 0x23, 0x1E, 0x56, 0x67, 0x6F, 0x5A, 0x68, 0x6E, 0x8D, 0x95, 0x97, 0xB5, 
   0xBB, 0xBA, 0x7A, 0x80, 0x80, 0x4A, 0x55, 0x57, 0x73, 0x7B, 0x7F, 0x5E, 0x5E, 0x62, 0x56, 0x5A, 
   0x5D, 0x4D, 0x56, 0x59, 0x53, 0x5F, 0x61, 0x43, 0x4C, 0x4E, 0x4F, 0x55, 0x58, 0x3B, 0x3C, 0x3E, 
   0x3C, 0x3C, 0x3E, 0x49, 0x4D, 0x4E, 0x45, 0x4A, 0x4B, 0x40, 0x45, 0x46, 0x47, 0x4F, 0x4F, 0x41, 
   0x48, 0x49, 0x44, 0x49, 0x4C, 0x3F, 0x48, 0x4B, 0x3C, 0x4B, 0x4F, 0x3D, 0x4F, 0x55, 0x4C, 0x5C, 
   0x62, 0x43, 0x51, 0x59, 0x44, 0x52, 0x5E, 0x4A, 0x5A, 0x66, 0x63, 0x75, 0x7F, 0x64, 0x79, 0x7F, 
   0x5C, 0x70, 0x75, 0x47, 0x59, 0x5C, 0x4B, 0x5C, 0x5E, 0x56, 0x5D, 0x5F, 0x4C, 0x55, 0x5A, 0x53, 
   0x5E, 0x68, 0x51, 0x5C, 0x69, 0x4F, 0x59, 0x63, 0x5B, 0x64, 0x6C, 0x94, 0x97, 0x9C, 0xFB, 0xFC, 
   0xFE, 0x8A, 0x8F, 0x90, 0x3C, 0x42, 0x44, 0x50, 0x56, 0x58, 0xA9, 0xAB, 0xAD, 0xA7, 0xA5, 0xA8, 
   0x6A, 0x6E, 0x75, 0x48, 0x49, 0x51, 0x4A, 0x49, 0x50, 0x3F, 0x3D, 0x42, 0x72, 0x72, 0x76, 0x93, 
   0x94, 0x98, 0x98, 0x97, 0x9E, 0xAB, 0xA4, 0xAC, 0xD9, 0xD3, 0xD6, 0xF2, 0xEA, 0xEA, 0xE0, 0xDB, 
   0xDA, 0xC6, 0xC5, 0xC6, 0x9F, 0xA1, 0xA4, 0x7A, 0x79, 0x7D, 0xE1, 0xDD, 0xE0, 0xB0, 0xA7, 0xA9, 
   0xBD, 0xB3, 0xB5, 0xF9, 0xEE, 0xEF, 0xF8, 0xEC, 0xEB, 0xF8, 0xEA, 0xE9, 0xF2, 0xDF, 0xE1, 0xF9, 
   0xEB, 0xEC, 0xF7, 0xEB, 0xE9, 0xF3, 0xEA, 0xE6, 0xFA, 0xF2, 0xEF, 0xFB, 0xF9, 0xF5, 0xE7, 0xE3, 
   0xDF, 0xA4, 0x9E, 0x9A, 0xF1, 0xEC, 0xE9, 0xF5, 0xEB, 0xE8, 0xF6, 0xEA, 0xE8, 0xF5, 0xE9, 0xE7, 
   0xF9, 0xE9, 0xE6, 0xFC, 0xE9, 0xE5, 0xF9, 0xE6, 0xE3, 0xF7, 0xE4, 0xE1, 0xF7, 0xE4, 0xE1, 0xFB, 
   0xE8, 0xE5, 0xFA, 0xE8, 0xE5, 0xF7, 0xE7, 0xE4, 0xF6, 0xE6, 0xE3, 0xF6, 0xE6, 0xE3, 0xF6, 0xE6, 
   0xE3, 0xF6, 0xE6, 0xE3, 0xF6, 0xE6, 0xE3, 0xDC, 0xCB, 0xC7, 0xD9, 0xCA, 0xC7, 0xF9, 0xED, 0xEA, 
   0xF4, 0xEB, 0xE8, 0x91, 0x88, 0x87, 0x7E, 0x77, 0x78, 0xC5, 0xC0, 0xC1, 0x56, 0x55, 0x5D, 0x89, 
   0x85, 0x8C, 0x64, 0x5E, 0x62, 0xC0, 0xB9, 0xBB, 0xF8, 0xEB, 0xE9, 0xF8, 0xE6, 0xE3, 0xF1, 0xE0, 
   0xDD, 0xF4, 0xE5, 0xE2, 0xF6, 0xE7, 0xE4, 0xFA, 0xEC, 0xE9, 0xF0, 0xE0, 0xDD, 0xEF, 0xDF, 0xDC, 
   0xF6, 0xE6, 0xE3, 0xFA, 0xE6, 0xE4, 0xF7, 0xE3, 0xE1, 0xF4, 0xDF, 0xDD, 0xF5, 0xE0, 0xDE, 0xF0, 
   0xDC, 0xDA, 0xCF, 0xBC, 0xB9, 0x9C, 0x85, 0x85, 0xE9, 0xD5, 0xD7, 0xF6, 0xE7, 0xE8, 0xCA, 0xBD, 
   0xBD, 0xCC, 0xC1, 0xC1, 0xE4, 0xD8, 0xD9, 0xD3, 0xC6, 0xC7, 0xFF, 0xF7, 0xF6, 0xE3, 0xD8, 0xDC, 
   0x74, 0x70, 0x76, 0x73, 0x74, 0x7E, 0x68, 0x6B, 0x75, 0xAE, 0xAD, 0xB7, 0xF9, 0xEE, 0xF1, 0xF9, 
   0xE7, 0xE2, 0xF6, 0xE4, 0xE1, 0xF3, 0xDF, 0xDD, 0xF3, 0xDE, 0xDC, 0xF1, 0xDB, 0xD9, 0xF0, 0xD8, 
   0xD6, 0xF2, 0xD8, 0xD4, 0xF1, 0xD5, 0xD1, 0xF1, 0xD4, 0xD0, 0xF0, 0xD2, 0xCE, 0xF4, 0xD3, 0xD0, 
   0xF3, 0xD2, 0xCF, 0xF1, 0xD1, 0xCE, 0xF0, 0xD1, 0xCE, 0xEF, 0xD0, 0xCD, 0xEE, 0xCF, 0xCC, 0xF0, 
   0xD1, 0xCE, 0xEF, 0xD0, 0xCD, 0xEE, 0xCF, 0xCC, 0xED, 0xCF, 0xCB, 0xED, 0xD0, 0xCB, 0xEE, 0xD1, 
   0xCC, 0xF0, 0xD3, 0xCE, 0xE8, 0xCB, 0xC6, 0xE9, 0xCC, 0xC7, 0xED, 0xD0, 0xCA, 0xEF, 0xD1, 0xC8, 
   0xEF, 0xD1, 0xC8, 0xF0, 0xD2, 0xCB, 0xE9, 0xCC, 0xC6, 0xEC, 0xCE, 0xCA, 0x9D, 0x7F, 0x7B, 0x6F, 
   0x5C, 0x57, 0x78, 0x68, 0x62, 0xDA, 0xC6, 0xC0, 0xF6, 0xDD, 0xD7, 0xEE, 0xD1, 0xCB, 0xEC, 0xCA, 
   0xC2, 0xEF, 0xCB, 0xC4, 0xE8, 0xC6, 0xC0, 0xE4, 0xC2, 0xBC, 0xE6, 0xC4, 0xBE, 0xE9, 0xC7, 0xC1, 
   0xEC, 0xCA, 0xC4, 0xEC, 0xCA, 0xC4, 0xED, 0xCB, 0xC5, 0xE8, 0xC5, 0xBF, 0xEC, 0xC9, 0xC3, 0xEA, 
   0xC7, 0xC1, 0xE9, 0xC6, 0xC0, 0xE9, 0xC6, 0xC0, 0xEC, 0xC9, 0xC3, 0xEA, 0xC9, 0xC4, 0xEB, 0xCB, 
   0xC6, 0xF0, 0xD2, 0xCD, 0xEE, 0xD1, 0xCC, 0xF2, 0xD6, 0xD0, 0xF3, 0xD9, 0xD3, 0xEF, 0xD8, 0xD3, 
   0xEA, 0xD6, 0xD1, 0xF0, 0xDC, 0xD7, 0xF8, 0xE3, 0xDE, 0xF8, 0xE1, 0xDD, 0xF7, 0xDE, 0xDA, 0xF5, 
   0xDB, 0xD7, 0xF3, 0xDA, 0xD4, 0xF5, 0xD9, 0xD4, 0xF4, 0xD6, 0xD1, 0xEE, 0xCB, 0xC6, 0xE6, 0xBF, 
   0xBB, 0xD2, 0xA9, 0xA5, 0xBE, 0x96, 0x8F, 0xA5, 0x80, 0x74, 0x93, 0x6F, 0x64, 0x84, 0x62, 0x56, 
   0x77, 0x58, 0x4C, 0x75, 0x58, 0x4C, 0x77, 0x5A, 0x4E, 0x74, 0x5B, 0x4B, 0x73, 0x5A, 0x4A, 0x72, 
   0x59, 0x49, 0x6E, 0x56, 0x46, 0x6D, 0x55, 0x45, 0x70, 0x57, 0x46, 0x6B, 0x56, 0x47, 0x68, 0x57, 
   0x4A, 0x5C, 0x4B, 0x3D, 0x43, 0x31, 0x24, 0x37, 0x26, 0x18, 0x33, 0x21, 0x13, 0x29, 0x18, 0x0A, 
   0x33, 0x22, 0x1D, 0x33, 0x22, 0x1E, 0x2D, 0x1C, 0x17, 0x33, 0x23, 0x1E, 0x1D, 0x0D, 0x08, 0x2C, 
   0x1C, 0x17, 0x33, 0x21, 0x1C, 0x3A, 0x27, 0x22, 0x2C, 0x19, 0x14, 0x26, 0x13, 0x0E, 0x22, 0x0F, 
   0x0A, 0x25, 0x12, 0x0D, 0x29, 0x15, 0x10, 0x31, 0x20, 0x1C, 0x2A, 0x19, 0x16, 0x23, 0x12, 0x0F, 
   0x27, 0x16, 0x13, 0x1B, 0x0A, 0x07, 0x1D, 0x0D, 0x0B, 0x37, 0x25, 0x21, 0x3A, 0x28, 0x23, 0x4E, 
   0x3C, 0x37, 0x6F, 0x5D, 0x58, 0x76, 0x65, 0x5F, 0x70, 0x5E, 0x58, 0x6B, 0x59, 0x53, 0x5C, 0x44, 
   0x3A, 0x70, 0x5B, 0x50, 0x71, 0x5E, 0x52, 0x62, 0x52, 0x45, 0x6F, 0x62, 0x55, 0x57, 0x4D, 0x3F, 
   0x3A, 0x2C, 0x23, 0x2D, 0x1C, 0x17, 0x5A, 0x6E, 0x75, 0x56, 0x64, 0x6A, 0x6D, 0x74, 0x76, 0xAC, 
   0xB0, 0xAF, 0x82, 0x87, 0x87, 0x87, 0x94, 0x96, 0xC4, 0xCD, 0xD1, 0x5E, 0x5E, 0x62, 0x3D, 0x40, 
   0x44, 0x4F, 0x58, 0x5B, 0x5D, 0x69, 0x6B, 0x4A, 0x52, 0x55, 0x43, 0x49, 0x4C, 0x44, 0x43, 0x46, 
   0x41, 0x3F, 0x41, 0x49, 0x4C, 0x4D, 0x48, 0x4D, 0x4E, 0x42, 0x49, 0x4A, 0x43, 0x4E, 0x4E, 0x43, 
   0x4C, 0x4D, 0x3F, 0x45, 0x48, 0x38, 0x42, 0x44, 0x3D, 0x4E, 0x51, 0x4A, 0x5E, 0x62, 0x51, 0x62, 
   0x68, 0x43, 0x53, 0x5A, 0x59, 0x68, 0x72, 0x5C, 0x69, 0x74, 0x55, 0x64, 0x6D, 0x5C, 0x6D, 0x73, 
   0x5C, 0x6D, 0x72, 0x40, 0x51, 0x54, 0x49, 0x59, 0x5C, 0x5B, 0x61, 0x63, 0x51, 0x59, 0x5E, 0x4E, 
   0x57, 0x61, 0x5C, 0x65, 0x72, 0x46, 0x4D, 0x58, 0x91, 0x96, 0x9F, 0xE4, 0xE6, 0xEB, 0xA8, 0xA8, 
   0xAD, 0x4A, 0x4F, 0x53, 0x4F, 0x57, 0x5A, 0x52, 0x58, 0x5B, 0xB5, 0xB7, 0xBC, 0x94, 0x93, 0x98, 
   0x57, 0x59, 0x5D, 0xA0, 0x9F, 0xA4, 0x9B, 0x96, 0x9C, 0xA6, 0xA1, 0xA5, 0xE0, 0xDF, 0xE3, 0xA2, 
   0xA4, 0xA8, 0x94, 0x93, 0x9A, 0x8A, 0x83, 0x8B, 0xEA, 0xE4, 0xE7, 0xF1, 0xEC, 0xEC, 0xF5, 0xF3, 
   0xF1, 0xB1, 0xB2, 0xB3, 0x4A, 0x4D, 0x51, 0x90, 0x8C, 0x91, 0xC0, 0xBB, 0xBE, 0x66, 0x5E, 0x60, 
   0x8A, 0x7F, 0x81, 0xF2, 0xE7, 0xE7, 0xF7, 0xEA, 0xE9, 0xF8, 0xE5, 0xE5, 0xF8, 0xE6, 0xE7, 0xFA, 
   0xEA, 0xEB, 0xF5, 0xEA, 0xEA, 0xFA, 0xF3, 0xF1, 0xD3, 0xCE, 0xCC, 0x7A, 0x78, 0x75, 0xAB, 0xA7, 
   0xA4, 0xDA, 0xD5, 0xD2, 0xF6, 0xF1, 0xEE, 0xF3, 0xEC, 0xE9, 0xF6, 0xEA, 0xE8, 0xF4, 0xE8, 0xE7, 
   0xF7, 0xE8, 0xE5, 0xF9, 0xE6, 0xE3, 0xF7, 0xE4, 0xE1, 0xF7, 0xE4, 0xE1, 0xF8, 0xE5, 0xE2, 0xFA, 
   0xE7, 0xE4, 0xF9, 0xE6, 0xE3, 0xF8, 0xE6, 0xE3, 0xF7, 0xE6, 0xE3, 0xF7, 0xE6, 0xE3, 0xF9, 0xE8, 
   0xE5, 0xF7, 0xE6, 0xE3, 0xF2, 0xE1, 0xDF, 0xDB, 0xCB, 0xC6, 0xF3, 0xE5, 0xE0, 0xF0, 0xE4, 0xE0, 
   0xEB, 0xDF, 0xDC, 0xBB, 0xB4, 0xB2, 0xC7, 0xC2, 0xC1, 0xC2, 0xBE, 0xBF, 0xAE, 0xAF, 0xB9, 0x8B, 
   0x88, 0x91, 0xBE, 0xB9, 0xBF, 0xFB, 0xF3, 0xF5, 0xF3, 0xE3, 0xE2, 0xF6, 0xE3, 0xDE, 0xF7, 0xE4, 
   0xE0, 0xF4, 0xE3, 0xE1, 0xF3, 0xE3, 0xE0, 0xF1, 0xE1, 0xDE, 0xF3, 0xE2, 0xDF, 0xFA, 0xE9, 0xE6, 
   0xF7, 0xE7, 0xE4, 0xF7, 0xE5, 0xE2, 0xF3, 0xE1, 0xDF, 0xF2, 0xE0, 0xDD, 0xF2, 0xE0, 0xDD, 0xDA, 
   0xC8, 0xC6, 0xCA, 0xB9, 0xB6, 0xE8, 0xD8, 0xD8, 0xE9, 0xD4, 0xD6, 0xEB, 0xDB, 0xDC, 0xE7, 0xDC, 
   0xDC, 0xCB, 0xC0, 0xC0, 0xB8, 0xAB, 0xAB, 0xF9, 0xED, 0xEE, 0xF5, 0xE5, 0xE8, 0xC2, 0xB2, 0xB8, 
   0x6D, 0x68, 0x71, 0x70, 0x70, 0x7C, 0x8C, 0x8D, 0x98, 0xEF, 0xEE, 0xF6, 0xF2, 0xE7, 0xE9, 0xF9, 
   0xE5, 0xE2, 0xF6, 0xE2, 0xE0, 0xF4, 0xDF, 0xDD, 0xF5, 0xDF, 0xDD, 0xF3, 0xDB, 0xD9, 0xF1, 0xD8, 
   0xD6, 0xF1, 0xD6, 0xD2, 0xF0, 0xD5, 0xD1, 0xEF, 0xD3, 0xCF, 0xEE, 0xD0, 0xCC, 0xF2, 0xD1, 0xCE, 
   0xF3, 0xD2, 0xCF, 0xF2, 0xD2, 0xCF, 0xF0, 0xD1, 0xCE, 0xEF, 0xD0, 0xCD, 0xEE, 0xCF, 0xCC, 0xEF, 
   0xD0, 0xCD, 0xEE, 0xCF, 0xCC, 0xEC, 0xCD, 0xCA, 0xED, 0xD0, 0xCB, 0xF0, 0xD3, 0xCD, 0xF0, 0xD3, 
   0xCE, 0xED, 0xD0, 0xCB, 0xE8, 0xCC, 0xC6, 0xED, 0xD0, 0xCB, 0xEC, 0xCF, 0xC8, 0xEB, 0xCC, 0xC3, 
   0xE9, 0xCB, 0xC2, 0xCC, 0xAF, 0xA8, 0x9B, 0x7E, 0x79, 0xD6, 0xBC, 0xB7, 0x9C, 0x80, 0x7C, 0x61, 
   0x51, 0x4D, 0x81, 0x74, 0x6F, 0xED, 0xDB, 0xD6, 0xF0, 0xD8, 0xD3, 0xEE, 0xD2, 0xCC, 0xEE, 0xCB, 
   0xC6, 0xEC, 0xC9, 0xC3, 0xEB, 0xC9, 0xC3, 0xEA, 0xC8, 0xC2, 0xE6, 0xC4, 0xBE, 0xEC, 0xCA, 0xC4, 
   0xED, 0xCB, 0xC5, 0xEA, 0xC8, 0xC2, 0xEA, 0xC8, 0xC2, 0xE6, 0xC4, 0xBE, 0xEB, 0xCA, 0xC4, 0xEC, 
   0xCA, 0xC4, 0xEB, 0xC9, 0xC3, 0xEB, 0xC9, 0xC3, 0xF0, 0xCE, 0xC8, 0xE7, 0xC7, 0xC2, 0xED, 0xCD, 
   0xC9, 0xF2, 0xD3, 0xCE, 0xF1, 0xD3, 0xCF, 0xF6, 0xD9, 0xD4, 0xF2, 0xD7, 0xD2, 0xF0, 0xD9, 0xD4, 
   0xF1, 0xDE, 0xD9, 0xF3, 0xDE, 0xD9, 0xF5, 0xDF, 0xDA, 0xF5, 0xDD, 0xD9, 0xF7, 0xDD, 0xDA, 0xF6, 
   0xDB, 0xD7, 0xF4, 0xDA, 0xD4, 0xF5, 0xD9, 0xD4, 0xF1, 0xD3, 0xCF, 0xED, 0xCB, 0xC6, 0xE4, 0xBF, 
   0xBC, 0xD3, 0xAC, 0xA9, 0xC1, 0x99, 0x93, 0xB0, 0x8A, 0x80, 0x9D, 0x78, 0x6E, 0x88, 0x66, 0x5D, 
   0x78, 0x5A, 0x4F, 0x71, 0x56, 0x4B, 0x73, 0x59, 0x4E, 0x72, 0x5D, 0x4F, 0x6F, 0x5A, 0x4C, 0x71, 
   0x5C, 0x4E, 0x6D, 0x58, 0x4A, 0x6A, 0x54, 0x47, 0x65, 0x50, 0x42, 0x60, 0x50, 0x43, 0x60, 0x55, 
   0x4A, 0x46, 0x3A, 0x2E, 0x35, 0x29, 0x1E, 0x39, 0x2C, 0x21, 0x36, 0x29, 0x1E, 0x20, 0x13, 0x09, 
   0x2F, 0x21, 0x1F, 0x35, 0x27, 0x25, 0x26, 0x19, 0x16, 0x2D, 0x1F, 0x1D, 0x23, 0x15, 0x13, 0x31, 
   0x23, 0x21, 0x45, 0x34, 0x31, 0x33, 0x1F, 0x1B, 0x21, 0x0E, 0x09, 0x25, 0x12, 0x0E, 0x1F, 0x0C, 
   0x08, 0x24, 0x11, 0x0D, 0x1F, 0x0C, 0x08, 0x3C, 0x2B, 0x28, 0x3A, 0x29, 0x26, 0x1C, 0x0B, 0x08, 
   0x1C, 0x0B, 0x08, 0x22, 0x11, 0x0E, 0x29, 0x18, 0x15, 0x21, 0x0F, 0x0B, 0x21, 0x0D, 0x08, 0x1E, 
   0x0B, 0x06, 0x2B, 0x18, 0x13, 0x3F, 0x2C, 0x27, 0x70, 0x5C, 0x57, 0x76, 0x62, 0x5D, 0x7A, 0x60, 
   0x54, 0x72, 0x5A, 0x4D, 0x75, 0x60, 0x52, 0x67, 0x55, 0x47, 0x54, 0x44, 0x36, 0x69, 0x5C, 0x4D, 
   0x5B, 0x4A, 0x40, 0x4D, 0x38, 0x34, 0x51, 0x66, 0x6E, 0x50, 0x61, 0x67, 0x83, 0x89, 0x8B, 0x61, 
   0x62, 0x63, 0x45, 0x49, 0x4A, 0x55, 0x61, 0x63, 0x50, 0x5C, 0x60, 0x41, 0x40, 0x44, 0x3D, 0x40, 
   0x44, 0x55, 0x5E, 0x61, 0x51, 0x5D, 0x5F, 0x4A, 0x52, 0x55, 0x46, 0x4C, 0x4F, 0x47, 0x46, 0x49, 
   0x4F, 0x4E, 0x50, 0x45, 0x48, 0x49, 0x3E, 0x42, 0x43, 0x41, 0x47, 0x48, 0x3C, 0x45, 0x45, 0x45, 
   0x4D, 0x4E, 0x42, 0x47, 0x4A, 0x38, 0x42, 0x44, 0x46, 0x56, 0x59, 0x53, 0x66, 0x6B, 0x4C, 0x5D, 
   0x63, 0x46, 0x56, 0x5D, 0x63, 0x70, 0x78, 0x5A, 0x66, 0x6E, 0x4E, 0x59, 0x60, 0x51, 0x5C, 0x62, 
   0x5E, 0x6A, 0x70, 0x40, 0x4E, 0x52, 0x49, 0x57, 0x5A, 0x5F, 0x66, 0x68, 0x54, 0x5D, 0x62, 0x54, 
   0x5E, 0x67, 0x52, 0x5A, 0x67, 0x55, 0x59, 0x64, 0x95, 0x97, 0xA0, 0x79, 0x7A, 0x80, 0x40, 0x42, 
   0x48, 0x86, 0x8B, 0x90, 0x49, 0x53, 0x56, 0x4B, 0x52, 0x56, 0xC3, 0xC5, 0xCC, 0xA2, 0xA3, 0xA9, 
   0x71, 0x72, 0x73, 0xE9, 0xE6, 0xE9, 0xC8, 0xC0, 0xC5, 0xD0, 0xC8, 0xCD, 0xDE, 0xDB, 0xDF, 0xF0, 
   0xF3, 0xF5, 0x87, 0x87, 0x8E, 0x74, 0x6E, 0x76, 0xE4, 0xE0, 0xE1, 0xF8, 0xF5, 0xF4, 0xEB, 0xE8, 
   0xE7, 0x57, 0x58, 0x59, 0x44, 0x48, 0x4C, 0x9C, 0x97, 0x9B, 0xB6, 0xB0, 0xB2, 0x51, 0x49, 0x4B, 
   0xD4, 0xCC, 0xCE, 0xFB, 0xF0, 0xF0, 0xF6, 0xE6, 0xE5, 0xF7, 0xE4, 0xE4, 0xFB, 0xEC, 0xED, 0xFA, 
   0xF0, 0xF1, 0xF9, 0xF0, 0xF0, 0xDA, 0xD6, 0xD6, 0x61, 0x5E, 0x5F, 0x68, 0x68, 0x69, 0xAD, 0xA8, 
   0xA5, 0xE8, 0xE2, 0xDF, 0xF5, 0xEF, 0xEC, 0xF4, 0xEC, 0xE9, 0xF4, 0xE8, 0xE6, 0xF4, 0xE8, 0xE6, 
   0xF6, 0xE7, 0xE4, 0xF9, 0xE5, 0xE2, 0xF7, 0xE4, 0xE1, 0xF8, 0xE5, 0xE2, 0xF8, 0xE5, 0xE2, 0xF8, 
   0xE5, 0xE2, 0xF8, 0xE5, 0xE2, 0xF7, 0xE5, 0xE2, 0xF5, 0xE4, 0xE1, 0xF5, 0xE4, 0xE1, 0xF6, 0xE5, 
   0xE2, 0xF7, 0xE5, 0xE2, 0xF5, 0xE3, 0xE1, 0xFA, 0xE9, 0xE5, 0xF5, 0xE5, 0xDF, 0xF5, 0xE5, 0xE2, 
   0xF2, 0xE8, 0xE4, 0xF7, 0xEF, 0xEC, 0xCA, 0xC4, 0xC2, 0xDC, 0xD8, 0xD7, 0xC0, 0xBE, 0xC7, 0xA8, 
   0xA3, 0xAB, 0xF4, 0xEC, 0xF2, 0xF4, 0xE9, 0xEC, 0xF7, 0xE5, 0xE4, 0xF7, 0xE3, 0xE0, 0xF9, 0xE6, 
   0xE2, 0xF5, 0xE4, 0xE1, 0xF4, 0xE2, 0xDF, 0xF7, 0xE6, 0xE3, 0xEC, 0xDB, 0xD8, 0xD0, 0xBF, 0xBC, 
   0xF1, 0xDF, 0xDD, 0xF5, 0xE7, 0xE5, 0xF1, 0xE4, 0xE3, 0xF4, 0xE7, 0xE5, 0xDD, 0xCF, 0xCD, 0x8D, 
   0x7E, 0x7D, 0xAD, 0x9F, 0x9E, 0xC0, 0xB3, 0xB3, 0xCF, 0xBC, 0xBE, 0xE3, 0xD8, 0xD9, 0xC1, 0xB8, 
   0xB8, 0xC1, 0xB8, 0xB8, 0xF4, 0xEE, 0xEE, 0xF6, 0xE8, 0xE9, 0xE7, 0xD0, 0xD4, 0xC9, 0xB9, 0xBE, 
   0x69, 0x61, 0x6B, 0x70, 0x6E, 0x79, 0xC9, 0xC7, 0xD0, 0xF4, 0xEE, 0xF5, 0xF5, 0xE7, 0xE8, 0xF7, 
   0xE2, 0xE0, 0xF4, 0xDF, 0xDD, 0xF5, 0xDF, 0xDD, 0xF3, 0xDD, 0xDB, 0xF4, 0xDC, 0xDA, 0xF3, 0xDA, 
   0xD8, 0xF1, 0xD6, 0xD2, 0xF1, 0xD6, 0xD2, 0xF0, 0xD4, 0xD0, 0xEF, 0xD1, 0xCD, 0xEF, 0xCF, 0xCC, 
   0xF1, 0xD0, 0xCD, 0xF3, 0xD3, 0xD0, 0xEF, 0xD0, 0xCD, 0xEE, 0xCF, 0xCC, 0xEF, 0xD0, 0xCD, 0xEE, 
   0xCF, 0xCC, 0xED, 0xCE, 0xCB, 0xED, 0xCE, 0xCB, 0xEE, 0xCF, 0xCA, 0xF1, 0xD4, 0xCC, 0xEF, 0xD2, 
   0xCA, 0xED, 0xD0, 0xC8, 0xEB, 0xCE, 0xC6, 0xEA, 0xCD, 0xC6, 0xEB, 0xCC, 0xC4, 0xEB, 0xCB, 0xC2, 
   0xEA, 0xCB, 0xC3, 0xDA, 0xBD, 0xB6, 0xCC, 0xAE, 0xA9, 0xB4, 0x98, 0x93, 0x83, 0x68, 0x64, 0x6E, 
   0x5F, 0x5B, 0xB1, 0xA4, 0xA1, 0xEE, 0xDD, 0xDA, 0xEA, 0xD3, 0xCE, 0xEE, 0xD0, 0xCD, 0xEC, 0xC9, 
   0xC5, 0xEA, 0xC8, 0xC2, 0xEE, 0xCC, 0xC6, 0xEB, 0xC9, 0xC3, 0xE9, 0xC7, 0xC1, 0xF0, 0xCE, 0xC8, 
   0xEA, 0xC8, 0xC2, 0xEA, 0xC8, 0xC2, 0xE9, 0xC7, 0xC1, 0xE7, 0xC5, 0xBF, 0xEA, 0xC8, 0xC2, 0xEB, 
   0xCA, 0xC4, 0xE9, 0xC7, 0xC1, 0xE7, 0xC5, 0xBF, 0xEA, 0xC8, 0xC2, 0xEB, 0xCA, 0xC7, 0xF1, 0xD0, 
   0xCD, 0xF4, 0xD4, 0xD1, 0xF3, 0xD7, 0xD3, 0xF3, 0xD6, 0xD2, 0xF4, 0xD9, 0xD5, 0xF5, 0xDD, 0xD9, 
   0xF3, 0xE0, 0xDB, 0xF4, 0xDE, 0xD9, 0xF5, 0xDE, 0xD9, 0xF5, 0xDB, 0xD7, 0xF3, 0xD8, 0xD4, 0xF1, 
   0xD6, 0xD2, 0xF1, 0xD7, 0xD1, 0xED, 0xD2, 0xCC, 0xED, 0xCF, 0xCA, 0xED, 0xCE, 0xC9, 0xEB, 0xC8, 
   0xC3, 0xDE, 0xB9, 0xB6, 0xD2, 0xAC, 0xA5, 0xBD, 0x99, 0x8E, 0xA3, 0x80, 0x76, 0x76, 0x58, 0x4D, 
   0x72, 0x58, 0x4D, 0x70, 0x58, 0x4D, 0x6F, 0x5A, 0x4E, 0x6D, 0x5B, 0x51, 0x5F, 0x4E, 0x44, 0x51, 
   0x40, 0x36, 0x67, 0x56, 0x4C, 0x6B, 0x5A, 0x4F, 0x3E, 0x2B, 0x21, 0x35, 0x27, 0x1E, 0x38, 0x30, 
   0x26, 0x46, 0x3D, 0x33, 0x37, 0x2D, 0x23, 0x34, 0x2A, 0x21, 0x2C, 0x22, 0x19, 0x27, 0x1D, 0x14, 
   0x33, 0x28, 0x25, 0x31, 0x25, 0x23, 0x22, 0x16, 0x14, 0x20, 0x15, 0x13, 0x22, 0x16, 0x14, 0x25, 
   0x1A, 0x18, 0x43, 0x33, 0x31, 0x2B, 0x18, 0x15, 0x21, 0x0E, 0x0B, 0x2B, 0x18, 0x16, 0x20, 0x0D, 
   0x0A, 0x1E, 0x0B, 0x09, 0x1C, 0x09, 0x07, 0x1E, 0x0D, 0x0B, 0x2E, 0x1E, 0x1A, 0x1C, 0x0B, 0x08, 
   0x1F, 0x0E, 0x0B, 0x20, 0x0F, 0x0C, 0x1C, 0x0B, 0x08, 0x25, 0x13, 0x0F, 0x24, 0x12, 0x0D, 0x1E, 
   0x0B, 0x06, 0x1D, 0x0A, 0x05, 0x1E, 0x0C, 0x07, 0x50, 0x3E, 0x39, 0x77, 0x63, 0x5E, 0x78, 0x60, 
   0x52, 0x7E, 0x65, 0x57, 0x76, 0x60, 0x51, 0x59, 0x45, 0x36, 0x54, 0x43, 0x34, 0x64, 0x54, 0x43, 
   0x78, 0x63, 0x58, 0x5D, 0x45, 0x40, 0x4B, 0x61, 0x6A, 0x5A, 0x6A, 0x70, 0x9C, 0x9F, 0xA2, 0x52, 
   0x51, 0x52, 0x52, 0x56, 0x56, 0x4C, 0x5A, 0x5C, 0x48, 0x55, 0x59, 0x52, 0x52, 0x56, 0x53, 0x57, 
   0x5A, 0xAA, 0xB4, 0xB7, 0xB1, 0xBD, 0xBF, 0x57, 0x60, 0x63, 0x39, 0x3E, 0x41, 0x44, 0x47, 0x49, 
   0x4E, 0x50, 0x51, 0x4A, 0x4E, 0x4F, 0x4D, 0x51, 0x52, 0x40, 0x45, 0x46, 0x4C, 0x51, 0x52, 0x4C, 
   0x50, 0x52, 0x41, 0x44, 0x47, 0x47, 0x4E, 0x51, 0x54, 0x62, 0x65, 0x52, 0x62, 0x68, 0x4C, 0x5B, 
   0x62, 0x3F, 0x4B, 0x54, 0x50, 0x5C, 0x62, 0x51, 0x5B, 0x61, 0x5D, 0x61, 0x68, 0x5E, 0x61, 0x69, 
   0x5A, 0x5E, 0x66, 0x4F, 0x59, 0x60, 0x60, 0x6A, 0x71, 0x5C, 0x67, 0x68, 0x55, 0x61, 0x65, 0x55, 
   0x60, 0x69, 0x51, 0x5A, 0x67, 0x52, 0x57, 0x62, 0x61, 0x63, 0x6C, 0xAD, 0xAE, 0xB3, 0x7F, 0x81, 
   0x88, 0xBE, 0xC5, 0xCA, 0x4B, 0x54, 0x58, 0x55, 0x5D, 0x61, 0xCA, 0xCD, 0xD3, 0x6A, 0x6A, 0x70, 
   0x85, 0x85, 0x85, 0xCB, 0xC8, 0xC9, 0x98, 0x8C, 0x90, 0xF4, 0xE7, 0xED, 0x97, 0x92, 0x98, 0x9E, 
   0xA0, 0xA5, 0x63, 0x66, 0x6C, 0x61, 0x61, 0x67, 0xF0, 0xEE, 0xEF, 0xFE, 0xFB, 0xFA, 0xA3, 0xA0, 
   0x9F, 0x3B, 0x3A, 0x3B, 0x89, 0x89, 0x8D, 0xC7, 0xBF, 0xC4, 0x86, 0x7F, 0x82, 0x50, 0x49, 0x4B, 
   0xF4, 0xEC, 0xED, 0xF7, 0xEB, 0xEB, 0xFB, 0xE9, 0xE9, 0xFA, 0xEB, 0xEA, 0xE3, 0xD4, 0xD2, 0xEC, 
   0xE0, 0xE1, 0xFC, 0xF5, 0xF5, 0x85, 0x80, 0x81, 0x80, 0x7C, 0x7F, 0xA9, 0xA6, 0xA7, 0xA8, 0xA2, 
   0x9F, 0xF1, 0xEA, 0xE7, 0xF4, 0xEC, 0xE9, 0xF5, 0xE9, 0xE7, 0xF5, 0xE8, 0xE6, 0xF5, 0xE7, 0xE5, 
   0xF7, 0xE6, 0xE4, 0xF8, 0xE4, 0xE1, 0xF7, 0xE4, 0xE1, 0xF8, 0xE5, 0xE2, 0xF8, 0xE5, 0xE2, 0xF8, 
   0xE5, 0xE2, 0xF8, 0xE5, 0xE2, 0xF8, 0xE5, 0xE2, 0xF8, 0xE5, 0xE2, 0xF5, 0xE2, 0xDF, 0xF6, 0xE3, 
   0xE0, 0xF5, 0xE2, 0xDF, 0xF7, 0xE4, 0xE1, 0xF8, 0xE5, 0xE0, 0xFA, 0xE7, 0xE1, 0xFB, 0xEA, 0xE5, 
   0xDE, 0xD4, 0xD0, 0xC6, 0xBA, 0xB7, 0x89, 0x7E, 0x7C, 0x64, 0x5C, 0x59, 0x7D, 0x77, 0x7B, 0xDE, 
   0xD8, 0xDC, 0xF2, 0xE9, 0xEB, 0xF4, 0xE6, 0xE7, 0xF9, 0xE6, 0xE5, 0xF8, 0xE3, 0xE1, 0xF8, 0xE5, 
   0xE2, 0xF8, 0xE5, 0xE2, 0xF6, 0xE3, 0xE0, 0xF6, 0xE3, 0xE0, 0xDD, 0xCA, 0xC7, 0xC7, 0xB4, 0xB1, 
   0xF6, 0xE4, 0xE2, 0xEE, 0xE1, 0xE2, 0xDC, 0xCF, 0xD0, 0xDB, 0xCE, 0xCF, 0xA7, 0x99, 0x9A, 0x86, 
   0x78, 0x79, 0x82, 0x74, 0x75, 0xC1, 0xB2, 0xB3, 0xFA, 0xF0, 0xF0, 0x8B, 0x80, 0x80, 0x73, 0x6B, 
   0x6B, 0xF2, 0xE9, 0xE9, 0xFC, 0xF2, 0xF1, 0xDD, 0xCF, 0xD0, 0xDF, 0xC9, 0xCC, 0xD0, 0xC0, 0xC5, 
   0x72, 0x67, 0x6F, 0x83, 0x7C, 0x86, 0xF0, 0xE8, 0xEF, 0xF4, 0xE6, 0xEA, 0xF5, 0xE2, 0xE2, 0xF5, 
   0xE0, 0xDD, 0xF4, 0xDE, 0xDC, 0xF7, 0xE0, 0xDE, 0xF5, 0xDE, 0xDC, 0xF3, 0xDA, 0xD8, 0xF1, 0xD7, 
   0xD5, 0xF4, 0xD9, 0xD5, 0xF1, 0xD6, 0xD2, 0xF1, 0xD5, 0xD0, 0xF3, 0xD5, 0xD1, 0xF3, 0xD2, 0xCF, 
   0xF1, 0xCF, 0xCC, 0xF0, 0xD0, 0xCD, 0xEF, 0xD0, 0xCD, 0xED, 0xCE, 0xCB, 0xEE, 0xCF, 0xCC, 0xEE, 
   0xCF, 0xCC, 0xED, 0xCE, 0xCB, 0xED, 0xCE, 0xCB, 0xEF, 0xD0, 0xC9, 0xF2, 0xD3, 0xCA, 0xF0, 0xD1, 
   0xC8, 0xEF, 0xD0, 0xC7, 0xED, 0xCE, 0xC5, 0xEB, 0xCC, 0xC3, 0xEC, 0xCB, 0xC2, 0xEB, 0xC8, 0xBF, 
   0xE8, 0xC8, 0xBF, 0xEA, 0xCD, 0xC6, 0xEE, 0xD1, 0xCB, 0xD5, 0xBB, 0xB6, 0xB7, 0x9F, 0x9B, 0xC4, 
   0xB0, 0xAE, 0xE8, 0xD6, 0xD5, 0xEC, 0xD8, 0xD6, 0xEB, 0xD2, 0xCF, 0xEB, 0xCF, 0xCB, 0xE9, 0xC9, 
   0xC4, 0xE9, 0xC8, 0xC3, 0xEC, 0xCA, 0xC4, 0xEA, 0xC8, 0xC2, 0xED, 0xCB, 0xC5, 0xED, 0xCB, 0xC5, 
   0xE9, 0xC7, 0xC1, 0xEA, 0xC8, 0xC2, 0xEA, 0xC9, 0xC3, 0xE9, 0xC9, 0xC3, 0xE9, 0xC9, 0xC3, 0xEA, 
   0xCA, 0xC4, 0xEA, 0xCA, 0xC4, 0xE8, 0xC8, 0xC2, 0xEA, 0xCA, 0xC4, 0xEE, 0xCD, 0xCA, 0xF5, 0xD4, 
   0xD1, 0xF5, 0xD5, 0xD2, 0xF4, 0xD6, 0xD2, 0xF3, 0xD6, 0xD2, 0xF8, 0xDD, 0xD9, 0xF9, 0xE0, 0xDC, 
   0xF4, 0xDF, 0xDA, 0xF1, 0xDB, 0xD6, 0xF2, 0xD8, 0xD4, 0xF4, 0xD9, 0xD5, 0xF3, 0xD6, 0xD2, 0xEC, 
   0xCF, 0xCB, 0xF3, 0xD8, 0xD1, 0xF9, 0xDE, 0xD6, 0xF9, 0xDD, 0xD6, 0xF1, 0xD5, 0xCE, 0xD0, 0xB0, 
   0xAA, 0x98, 0x77, 0x71, 0x8B, 0x69, 0x62, 0x8C, 0x68, 0x60, 0x7F, 0x5F, 0x56, 0x74, 0x59, 0x50, 
   0x6E, 0x58, 0x4D, 0x6E, 0x5D, 0x51, 0x54, 0x43, 0x38, 0x4A, 0x3B, 0x33, 0x4A, 0x3A, 0x33, 0x39, 
   0x29, 0x22, 0x3B, 0x2B, 0x24, 0x4A, 0x3A, 0x33, 0x43, 0x32, 0x2B, 0x30, 0x23, 0x1D, 0x2B, 0x22, 
   0x1A, 0x36, 0x2C, 0x24, 0x34, 0x2A, 0x22, 0x33, 0x29, 0x21, 0x29, 0x1F, 0x17, 0x2A, 0x20, 0x18, 
   0x2F, 0x24, 0x1F, 0x2A, 0x1F, 0x1B, 0x1D, 0x12, 0x0E, 0x22, 0x17, 0x13, 0x1A, 0x0F, 0x0B, 0x2A, 
   0x20, 0x1B, 0x37, 0x28, 0x24, 0x28, 0x14, 0x11, 0x24, 0x11, 0x0E, 0x25, 0x12, 0x0F, 0x22, 0x0F, 
   0x0C, 0x2A, 0x17, 0x14, 0x26, 0x13, 0x10, 0x20, 0x0E, 0x0C, 0x24, 0x13, 0x10, 0x1F, 0x0E, 0x0B, 
   0x20, 0x0F, 0x0C, 0x23, 0x12, 0x0F, 0x1C, 0x0B, 0x08, 0x1C, 0x0B, 0x08, 0x22, 0x13, 0x0D, 0x15, 
   0x05, 0x00, 0x1F, 0x10, 0x0A, 0x19, 0x09, 0x03, 0x33, 0x23, 0x1D, 0x6E, 0x5D, 0x57, 0x78, 0x66, 
   0x5A, 0x76, 0x62, 0x56, 0x5C, 0x46, 0x3A, 0x50, 0x3B, 0x2F, 0x5E, 0x48, 0x3C, 0x74, 0x5E, 0x52, 
   0x7A, 0x61, 0x58, 0x75, 0x59, 0x54, 0x49, 0x63, 0x6A, 0x5F, 0x72, 0x77, 0x91, 0x95, 0x97, 0x45, 
   0x43, 0x44, 0x50, 0x52, 0x53, 0x4E, 0x5C, 0x5E, 0x46, 0x53, 0x57, 0x51, 0x50, 0x55, 0x4D, 0x51, 
   0x54, 0x74, 0x7D, 0x80, 0xBA, 0xC5, 0xC8, 0x61, 0x6A, 0x6D, 0x70, 0x76, 0x79, 0x7F, 0x84, 0x85, 
   0x4C, 0x50, 0x51, 0x46, 0x4B, 0x4C, 0x4B, 0x4F, 0x50, 0x42, 0x47, 0x48, 0x4B, 0x4E, 0x4F, 0x46, 
   0x48, 0x4A, 0x47, 0x47, 0x4B, 0x47, 0x4C, 0x50, 0x49, 0x53, 0x57, 0x54, 0x61, 0x67, 0x4C, 0x59, 
   0x60, 0x4C, 0x57, 0x60, 0x5E, 0x67, 0x6C, 0x56, 0x5B, 0x60, 0x84, 0x83, 0x8A, 0xB4, 0xB0, 0xB7, 
   0x5A, 0x58, 0x60, 0x5D, 0x61, 0x6A, 0x4D, 0x56, 0x5D, 0x53, 0x60, 0x61, 0x58, 0x65, 0x6A, 0x55, 
   0x63, 0x6C, 0x60, 0x6C, 0x78, 0x57, 0x5F, 0x69, 0xA6, 0xA9, 0xB2, 0xF5, 0xF7, 0xFD, 0xF0, 0xF3, 
   0xF8, 0x82, 0x89, 0x90, 0x45, 0x4F, 0x56, 0x4D, 0x55, 0x5C, 0x58, 0x5C, 0x64, 0x4F, 0x52, 0x59, 
   0xB9, 0xB8, 0xB7, 0xA8, 0x9F, 0xA0, 0xCC, 0xBE, 0xC2, 0xFF, 0xF8, 0xFC, 0x98, 0x93, 0x97, 0x51, 
   0x54, 0x59, 0x50, 0x56, 0x5D, 0x96, 0x99, 0x9F, 0xE6, 0xE7, 0xE8, 0xFF, 0xFD, 0xFC, 0x69, 0x65, 
   0x64, 0x51, 0x4E, 0x4F, 0xF4, 0xF0, 0xF5, 0xCE, 0xC5, 0xCA, 0x30, 0x28, 0x2B, 0x7B, 0x75, 0x77, 
   0xF9, 0xF1, 0xF2, 0xF8, 0xEA, 0xEA, 0xFB, 0xE9, 0xE9, 0xF0, 0xDF, 0xDE, 0xE7, 0xDD, 0xDB, 0xF9, 
   0xEF, 0xEF, 0xE8, 0xE0, 0xE2, 0x6F, 0x68, 0x6A, 0xB2, 0xAB, 0xAF, 0x65, 0x60, 0x64, 0xCA, 0xC1, 
   0xC0, 0xFD, 0xF2, 0xF0, 0xF6, 0xE9, 0xE7, 0xF8, 0xEA, 0xE8, 0xF6, 0xE7, 0xE5, 0xF7, 0xE6, 0xE5, 
   0xF8, 0xE5, 0xE3, 0xF7, 0xE4, 0xE1, 0xF6, 0xE3, 0xE0, 0xF7, 0xE4, 0xE1, 0xF8, 0xE5, 0xE2, 0xF8, 
   0xE5, 0xE2, 0xF8, 0xE5, 0xE2, 0xF7, 0xE4, 0xE1, 0xF7, 0xE4, 0xE1, 0xF4, 0xE1, 0xDE, 0xF6, 0xE3, 
   0xE0, 0xF9, 0xE6, 0xE3, 0xF6, 0xE4, 0xE1, 0xFB, 0xE5, 0xE1, 0xFD, 0xE6, 0xE0, 0xEF, 0xD9, 0xD4, 
   0xC7, 0xB3, 0xAF, 0xC1, 0xB1, 0xAE, 0xC1, 0xB3, 0xB1, 0xCE, 0xC3, 0xC1, 0xF7, 0xED, 0xEC, 0xF7, 
   0xE9, 0xE8, 0xF1, 0xE3, 0xE2, 0xF2, 0xE1, 0xE0, 0xFA, 0xE6, 0xE5, 0xF8, 0xE3, 0xE2, 0xF8, 0xE4, 
   0xE2, 0xF7, 0xE5, 0xE1, 0xF5, 0xE2, 0xDF, 0xF2, 0xDF, 0xDC, 0xF3, 0xE0, 0xDD, 0xFC, 0xE9, 0xE6, 
   0xF5, 0xE3, 0xE0, 0xEC, 0xDF, 0xDF, 0xC8, 0xBC, 0xBC, 0xAC, 0xA0, 0xA0, 0xC0, 0xB4, 0xB4, 0xBB, 
   0xAE, 0xAE, 0xDA, 0xCD, 0xCE, 0xE8, 0xDE, 0xDE, 0xF0, 0xE7, 0xE7, 0xD4, 0xCE, 0xCD, 0xEC, 0xEA, 
   0xE9, 0xE7, 0xE4, 0xE3, 0xE9, 0xE1, 0xE0, 0xED, 0xE0, 0xE1, 0x97, 0x82, 0x84, 0x85, 0x75, 0x78, 
   0xAB, 0xA1, 0xA6, 0xCF, 0xC7, 0xCE, 0xF7, 0xE9, 0xEE, 0xFA, 0xE5, 0xE7, 0xF8, 0xE3, 0xE2, 0xF6, 
   0xE1, 0xDF, 0xF6, 0xE0, 0xDE, 0xF8, 0xE1, 0xDF, 0xF6, 0xDD, 0xDB, 0xEC, 0xD1, 0xD0, 0xF0, 0xD4, 
   0xD3, 0xF4, 0xD9, 0xD6, 0xF1, 0xD6, 0xD2, 0xF1, 0xD5, 0xD1, 0xF3, 0xD5, 0xD1, 0xF3, 0xD3, 0xD0, 
   0xF1, 0xD0, 0xCD, 0xEF, 0xCF, 0xCC, 0xEF, 0xD0, 0xCD, 0xED, 0xCE, 0xCB, 0xEE, 0xCF, 0xCC, 0xED, 
   0xCE, 0xCB, 0xED, 0xCE, 0xCB, 0xEE, 0xCF, 0xCC, 0xEE, 0xCF, 0xC7, 0xEF, 0xD0, 0xC7, 0xEC, 0xCD, 
   0xC4, 0xEB, 0xCC, 0xC3, 0xEC, 0xCD, 0xC4, 0xED, 0xCE, 0xC5, 0xED, 0xCC, 0xC4, 0xED, 0xC9, 0xC1, 
   0xEC, 0xCA, 0xC2, 0xE8, 0xCB, 0xC4, 0xE3, 0xC6, 0xC1, 0xEB, 0xD1, 0xCC, 0xDB, 0xC3, 0xBE, 0xE3, 
   0xCC, 0xCA, 0xDD, 0xC6, 0xC6, 0xE9, 0xD0, 0xCF, 0xEE, 0xD4, 0xD1, 0xED, 0xD1, 0xCD, 0xEB, 0xCC, 
   0xC9, 0xEA, 0xCB, 0xC6, 0xEE, 0xCC, 0xC6, 0xF2, 0xD0, 0xCA, 0xF0, 0xCE, 0xC8, 0xEC, 0xCA, 0xC4, 
   0xEC, 0xCA, 0xC4, 0xED, 0xCB, 0xC5, 0xED, 0xCC, 0xC6, 0xEC, 0xCC, 0xC6, 0xEB, 0xCA, 0xC4, 0xEA, 
   0xCA, 0xC4, 0xEC, 0xCC, 0xC6, 0xEC, 0xCB, 0xC6, 0xEB, 0xCB, 0xC6, 0xF0, 0xCE, 0xCD, 0xF6, 0xD4, 
   0xD3, 0xF5, 0xD6, 0xD5, 0xF3, 0xD5, 0xD4, 0xF6, 0xD9, 0xD8, 0xF8, 0xDC, 0xDB, 0xF6, 0xDD, 0xDA, 
   0xF6, 0xE0, 0xDB, 0xF2, 0xDA, 0xD6, 0xF0, 0xD6, 0xD2, 0xF1, 0xD5, 0xD1, 0xF1, 0xD4, 0xD0, 0xF4, 
   0xD7, 0xD3, 0xEC, 0xD1, 0xC7, 0xD9, 0xBD, 0xB2, 0xCF, 0xB5, 0xAA, 0x9C, 0x80, 0x75, 0x6F, 0x53, 
   0x48, 0x6E, 0x52, 0x47, 0x73, 0x54, 0x4A, 0x73, 0x53, 0x4A, 0x77, 0x5B, 0x51, 0x65, 0x4F, 0x45, 
   0x4F, 0x3F, 0x33, 0x4D, 0x40, 0x34, 0x42, 0x37, 0x2B, 0x3A, 0x2D, 0x27, 0x37, 0x2A, 0x24, 0x3A, 
   0x2D, 0x27, 0x36, 0x29, 0x23, 0x2C, 0x1F, 0x19, 0x35, 0x28, 0x22, 0x2E, 0x23, 0x1D, 0x2A, 0x20, 
   0x19, 0x2C, 0x22, 0x1B, 0x34, 0x2A, 0x23, 0x2C, 0x22, 0x1B, 0x29, 0x1F, 0x18, 0x29, 0x1F, 0x18, 
   0x30, 0x24, 0x1E, 0x2F, 0x23, 0x1D, 0x22, 0x16, 0x10, 0x20, 0x15, 0x0F, 0x34, 0x28, 0x22, 0x32, 
   0x26, 0x20, 0x2C, 0x1C, 0x18, 0x2C, 0x18, 0x17, 0x22, 0x0E, 0x0D, 0x1E, 0x0A, 0x09, 0x2F, 0x1B, 
   0x1A, 0x30, 0x1C, 0x1B, 0x1A, 0x06, 0x04, 0x26, 0x15, 0x12, 0x35, 0x24, 0x21, 0x1C, 0x0B, 0x08, 
   0x20, 0x0F, 0x0C, 0x25, 0x14, 0x11, 0x31, 0x1F, 0x1D, 0x2D, 0x1E, 0x1A, 0x24, 0x17, 0x12, 0x33, 
   0x26, 0x21, 0x33, 0x26, 0x21, 0x30, 0x23, 0x1D, 0x31, 0x24, 0x1E, 0x36, 0x29, 0x23, 0x61, 0x54, 
   0x48, 0x7C, 0x6C, 0x60, 0x70, 0x5E, 0x52, 0x73, 0x5E, 0x53, 0x77, 0x5E, 0x54, 0x79, 0x5F, 0x54, 
   0x74, 0x59, 0x50, 0x7C, 0x5F, 0x58, 0x4F, 0x69, 0x70, 0x89, 0x9D, 0xA2, 0x82, 0x86, 0x89, 0x3F, 
   0x3C, 0x3E, 0x4B, 0x4E, 0x50, 0x43, 0x52, 0x55, 0x44, 0x54, 0x56, 0x52, 0x52, 0x56, 0x4E, 0x52, 
   0x57, 0x3E, 0x4A, 0x4C, 0x3A, 0x48, 0x4A, 0x3B, 0x43, 0x46, 0x53, 0x58, 0x5B, 0x51, 0x57, 0x58, 
   0x42, 0x4C, 0x4C, 0x80, 0x87, 0x87, 0x9E, 0xA4, 0xA5, 0x6B, 0x6F, 0x70, 0x50, 0x4F, 0x50, 0x4A, 
   0x46, 0x49, 0x4F, 0x4B, 0x50, 0x44, 0x46, 0x49, 0x46, 0x4F, 0x52, 0x49, 0x54, 0x5B, 0x4D, 0x57, 
   0x5E, 0x50, 0x58, 0x61, 0x4D, 0x54, 0x59, 0x50, 0x52, 0x56, 0xC7, 0xC2, 0xC8, 0xE7, 0xDE, 0xE5, 
   0x75, 0x6E, 0x76, 0x44, 0x43, 0x4C, 0x4B, 0x50, 0x57, 0x6A, 0x7A, 0x79, 0x47, 0x59, 0x5C, 0x51, 
   0x62, 0x6B, 0x5A, 0x68, 0x74, 0x71, 0x7A, 0x84, 0xE5, 0xE9, 0xEF, 0xE7, 0xEA, 0xF1, 0x88, 0x8B, 
   0x92, 0x41, 0x49, 0x50, 0x47, 0x51, 0x58, 0x43, 0x4C, 0x54, 0x40, 0x45, 0x4D, 0x6F, 0x72, 0x79, 
   0xE9, 0xE8, 0xE6, 0xF4, 0xEA, 0xE9, 0xFD, 0xEC, 0xEF, 0xFD, 0xF4, 0xF8, 0x97, 0x8F, 0x95, 0x4E, 
   0x51, 0x56, 0x69, 0x71, 0x78, 0x66, 0x6E, 0x72, 0xC8, 0xCC, 0xCC, 0x99, 0x97, 0x95, 0x35, 0x31, 
   0x30, 0x9D, 0x98, 0x99, 0x9E, 0x99, 0x9E, 0x5C, 0x4F, 0x54, 0x4B, 0x42, 0x45, 0xE1, 0xDB, 0xDE, 
   0xF7, 0xEF, 0xF0, 0xF6, 0xE6, 0xE8, 0xF7, 0xE1, 0xE2, 0xEC, 0xDC, 0xDB, 0xF5, 0xEF, 0xEC, 0xF5, 
   0xEB, 0xEB, 0x9E, 0x95, 0x98, 0x7B, 0x72, 0x77, 0x91, 0x8B, 0x91, 0x9F, 0x97, 0x9E, 0xFF, 0xF6, 
   0xF5, 0xF7, 0xEA, 0xE7, 0xF7, 0xE9, 0xE7, 0xF9, 0xE9, 0xE7, 0xF9, 0xE6, 0xE5, 0xF9, 0xE5, 0xE4, 
   0xF8, 0xE5, 0xE3, 0xF6, 0xE3, 0xE0, 0xF5, 0xE2, 0xDF, 0xF6, 0xE4, 0xE1, 0xF8, 0xE5, 0xE2, 0xF8, 
   0xE5, 0xE2, 0xF8, 0xE5, 0xE2, 0xF6, 0xE1, 0xDF, 0xF5, 0xE0, 0xDE, 0xF5, 0xE0, 0xDE, 0xF6, 0xE1, 
   0xDF, 0xF4, 0xE0, 0xDE, 0xF4, 0xE0, 0xDE, 0xF9, 0xE1, 0xDD, 0xFC, 0xE2, 0xDC, 0xEF, 0xD7, 0xD1, 
   0xE1, 0xCC, 0xC6, 0xE7, 0xD5, 0xD1, 0xF4, 0xE5, 0xE3, 0xFD, 0xEF, 0xED, 0xF8, 0xE7, 0xE3, 0xF4, 
   0xE3, 0xDE, 0xF7, 0xE6, 0xE2, 0xF4, 0xE2, 0xE0, 0xF6, 0xE2, 0xE1, 0xF7, 0xE3, 0xE3, 0xF7, 0xE3, 
   0xE1, 0xF6, 0xE2, 0xDF, 0xF5, 0xE0, 0xDE, 0xF7, 0xE2, 0xE0, 0xF5, 0xE1, 0xDF, 0xF8, 0xE5, 0xE2, 
   0xF1, 0xDD, 0xDB, 0xEC, 0xE0, 0xE0, 0xD0, 0xC5, 0xC4, 0x8B, 0x7E, 0x7E, 0xA6, 0x98, 0x98, 0xFF, 
   0xFA, 0xFA, 0xF5, 0xE8, 0xE8, 0xBD, 0xB6, 0xB5, 0xDE, 0xDA, 0xD9, 0xE1, 0xE0, 0xDE, 0xD3, 0xD4, 
   0xD2, 0x92, 0x90, 0x8E, 0x94, 0x8E, 0x8C, 0xAF, 0xA4, 0xA3, 0xCD, 0xBD, 0xBC, 0x98, 0x88, 0x8A, 
   0xD3, 0xC8, 0xCC, 0xFF, 0xF4, 0xF8, 0xF7, 0xE3, 0xE6, 0xFE, 0xE3, 0xE3, 0xF9, 0xE0, 0xDF, 0xF7, 
   0xE3, 0xE1, 0xF5, 0xDE, 0xDC, 0xF4, 0xDD, 0xDB, 0xF5, 0xDB, 0xDA, 0xF3, 0xD7, 0xD7, 0xF8, 0xDB, 
   0xDA, 0xF2, 0xD7, 0xD3, 0xF1, 0xD6, 0xD2, 0xF1, 0xD4, 0xD0, 0xED, 0xCF, 0xCB, 0xEF, 0xCE, 0xCC, 
   0xF1, 0xD0, 0xCD, 0xF0, 0xD0, 0xCD, 0xED, 0xCF, 0xCC, 0xEC, 0xCD, 0xCA, 0xED, 0xCE, 0xCB, 0xEC, 
   0xCD, 0xCA, 0xED, 0xCE, 0xCB, 0xEF, 0xCF, 0xCC, 0xEE, 0xCF, 0xC7, 0xEF, 0xD0, 0xC6, 0xEB, 0xCC, 
   0xC3, 0xEB, 0xCD, 0xC3, 0xED, 0xCE, 0xC5, 0xEC, 0xCE, 0xC5, 0xEC, 0xCB, 0xC2, 0xEF, 0xCB, 0xC2, 
   0xEC, 0xC9, 0xC1, 0xE3, 0xC4, 0xBE, 0xE8, 0xCB, 0xC6, 0xD9, 0xC2, 0xBD, 0xD4, 0xBF, 0xBA, 0xE1, 
   0xC5, 0xC7, 0xEB, 0xCD, 0xCE, 0xF0, 0xD2, 0xD3, 0xEB, 0xCD, 0xCC, 0xEE, 0xD1, 0xCE, 0xEA, 0xCC, 
   0xC8, 0xEA, 0xCC, 0xC7, 0xED, 0xCB, 0xC5, 0xF0, 0xCE, 0xC8, 0xEE, 0xCC, 0xC6, 0xEB, 0xC9, 0xC3, 
   0xEE, 0xCC, 0xC6, 0xF0, 0xCE, 0xC8, 0xEE, 0xCE, 0xC8, 0xEE, 0xD0, 0xC9, 0xEB, 0xCD, 0xC6, 0xE9, 
   0xCB, 0xC4, 0xEE, 0xD0, 0xC9, 0xEE, 0xD0, 0xC9, 0xEC, 0xCE, 0xC9, 0xEF, 0xCE, 0xCE, 0xF1, 0xCF, 
   0xD0, 0xF6, 0xD6, 0xD6, 0xF9, 0xDB, 0xDB, 0xF7, 0xDA, 0xD9, 0xF3, 0xD7, 0xD7, 0xEF, 0xD6, 0xD4, 
   0xF1, 0xD9, 0xD5, 0xED, 0xD4, 0xD1, 0xED, 0xD3, 0xCF, 0xEE, 0xD2, 0xCE, 0xED, 0xCF, 0xCC, 0xF1, 
   0xD5, 0xD0, 0x91, 0x76, 0x69, 0x6B, 0x51, 0x43, 0x6A, 0x4F, 0x42, 0x6C, 0x52, 0x44, 0x74, 0x5A, 
   0x4C, 0x76, 0x5B, 0x4E, 0x75, 0x59, 0x4E, 0x7A, 0x5C, 0x54, 0x70, 0x55, 0x4D, 0x4C, 0x38, 0x2F, 
   0x48, 0x3A, 0x30, 0x40, 0x37, 0x2C, 0x44, 0x3C, 0x32, 0x3B, 0x31, 0x2C, 0x3D, 0x32, 0x2E, 0x38, 
   0x2D, 0x28, 0x26, 0x1B, 0x17, 0x24, 0x19, 0x14, 0x25, 0x1A, 0x16, 0x30, 0x26, 0x20, 0x26, 0x1C, 
   0x15, 0x38, 0x2E, 0x27, 0x35, 0x2C, 0x24, 0x2F, 0x26, 0x1E, 0x30, 0x27, 0x20, 0x2A, 0x20, 0x19, 
   0x37, 0x2A, 0x22, 0x35, 0x29, 0x21, 0x1E, 0x12, 0x0A, 0x25, 0x19, 0x11, 0x4D, 0x41, 0x39, 0x34, 
   0x28, 0x1F, 0x2F, 0x1E, 0x1A, 0x2A, 0x15, 0x15, 0x2B, 0x16, 0x15, 0x25, 0x11, 0x10, 0x31, 0x1C, 
   0x1B, 0x30, 0x1C, 0x1B, 0x20, 0x0B, 0x0B, 0x1A, 0x09, 0x06, 0x23, 0x12, 0x0F, 0x18, 0x07, 0x04, 
   0x20, 0x0F, 0x0C, 0x21, 0x10, 0x0D, 0x28, 0x16, 0x14, 0x2F, 0x21, 0x1C, 0x38, 0x30, 0x28, 0x40, 
   0x36, 0x2F, 0x57, 0x4D, 0x46, 0x70, 0x66, 0x5F, 0x52, 0x48, 0x41, 0x29, 0x1F, 0x18, 0x27, 0x1E, 
   0x13, 0x54, 0x49, 0x3E, 0x73, 0x64, 0x5A, 0x6E, 0x59, 0x50, 0x71, 0x56, 0x4E, 0x7B, 0x5D, 0x55, 
   0x6C, 0x4C, 0x45, 0x7C, 0x5B, 0x55, 0x57, 0x6A, 0x72, 0x85, 0x91, 0x96, 0x57, 0x55, 0x52, 0x4D, 
   0x43, 0x3D, 0x45, 0x40, 0x39, 0x46, 0x4B, 0x47, 0x50, 0x57, 0x56, 0x47, 0x45, 0x46, 0x53, 0x4F, 
   0x51, 0x4B, 0x47, 0x4B, 0x50, 0x4F, 0x52, 0x46, 0x4D, 0x50, 0x3E, 0x4B, 0x4C, 0x2F, 0x3B, 0x3B, 
   0x3F, 0x45, 0x46, 0x4B, 0x4C, 0x4E, 0x55, 0x52, 0x55, 0x65, 0x65, 0x67, 0x5C, 0x62, 0x63, 0x56, 
   0x5D, 0x5F, 0x78, 0x7C, 0x80, 0x77, 0x7D, 0x80, 0x42, 0x47, 0x4C, 0x61, 0x66, 0x6C, 0x87, 0x88, 
   0x8F, 0xB4, 0xB3, 0xBB, 0xBD, 0xBE, 0xC1, 0xDF, 0xE1, 0xE2, 0xE0, 0xDF, 0xE3, 0x91, 0x91, 0x96, 
   0x66, 0x67, 0x6F, 0x52, 0x53, 0x5B, 0x52, 0x54, 0x5E, 0x65, 0x75, 0x79, 0x86, 0x97, 0x9C, 0x6B, 
   0x78, 0x81, 0x42, 0x4C, 0x56, 0x86, 0x8B, 0x95, 0x8E, 0x8F, 0x99, 0x9E, 0xA1, 0xA8, 0x3D, 0x42, 
   0x48, 0x48, 0x52, 0x57, 0x40, 0x4A, 0x50, 0x55, 0x5A, 0x61, 0x40, 0x3E, 0x45, 0xB3, 0xAC, 0xB4, 
   0xFC, 0xF6, 0xF3, 0xF1, 0xE9, 0xE6, 0xFB, 0xF2, 0xF2, 0xE6, 0xE1, 0xE3, 0x6E, 0x6C, 0x70, 0x6E, 
   0x72, 0x76, 0x9F, 0xAA, 0xAD, 0x37, 0x42, 0x46, 0x7B, 0x7F, 0x81, 0x39, 0x34, 0x36, 0x69, 0x60, 
   0x62, 0xE3, 0xDA, 0xDC, 0x8F, 0x84, 0x87, 0x5E, 0x51, 0x54, 0xBB, 0xB2, 0xB4, 0xFC, 0xF8, 0xF7, 
   0xF1, 0xED, 0xEA, 0xF3, 0xE8, 0xE5, 0xF5, 0xE1, 0xDD, 0xE6, 0xD7, 0xD3, 0xED, 0xE1, 0xDE, 0xD5, 
   0xC9, 0xC7, 0xAA, 0xA0, 0x9E, 0xDE, 0xD6, 0xD5, 0xD8, 0xD1, 0xD1, 0xF5, 0xEF, 0xF0, 0xF7, 0xEB, 
   0xE8, 0xF7, 0xEA, 0xE8, 0xF7, 0xE8, 0xE6, 0xF9, 0xE9, 0xE7, 0xF8, 0xE7, 0xE5, 0xF7, 0xE6, 0xE4, 
   0xF7, 0xE4, 0xE2, 0xF8, 0xE3, 0xE1, 0xF6, 0xE2, 0xE0, 0xF7, 0xE2, 0xE0, 0xF8, 0xE4, 0xE2, 0xF8, 
   0xE4, 0xE2, 0xF8, 0xE4, 0xE2, 0xF7, 0xE3, 0xE0, 0xF1, 0xDD, 0xDB, 0xF3, 0xDF, 0xDC, 0xF4, 0xE0, 
   0xDD, 0xEF, 0xDB, 0xD9, 0xF2, 0xDE, 0xDC, 0xF5, 0xE0, 0xDC, 0xF5, 0xDF, 0xDA, 0xF9, 0xE4, 0xE0, 
   0xF7, 0xE3, 0xE0, 0xFC, 0xE9, 0xE6, 0xFC, 0xEA, 0xE7, 0xF4, 0xE1, 0xDF, 0xF7, 0xE5, 0xE1, 0xFA, 
   0xE7, 0xE3, 0xF7, 0xE4, 0xE1, 0xF4, 0xE1, 0xDE, 0xF4, 0xE0, 0xDE, 0xF6, 0xE3, 0xE1, 0xF7, 0xE3, 
   0xE0, 0xF5, 0xE2, 0xDD, 0xF6, 0xE2, 0xDF, 0xF5, 0xE1, 0xDD, 0xF9, 0xE5, 0xE3, 0xE4, 0xD2, 0xD1, 
   0xED, 0xDB, 0xDA, 0xCD, 0xBD, 0xBD, 0x84, 0x76, 0x77, 0xB3, 0xA9, 0xA9, 0xDA, 0xD3, 0xD4, 0xCD, 
   0xC7, 0xC8, 0x8A, 0x83, 0x85, 0xB4, 0xAB, 0xAD, 0xDF, 0xD8, 0xD8, 0xBF, 0xBB, 0xBC, 0xCD, 0xCD, 
   0xCE, 0x90, 0x8F, 0x93, 0x7D, 0x79, 0x7E, 0x92, 0x8B, 0x91, 0xEE, 0xDF, 0xE3, 0xF8, 0xEA, 0xEE, 
   0xF3, 0xE6, 0xE9, 0xF6, 0xE8, 0xE8, 0xF5, 0xE0, 0xDE, 0xFA, 0xE2, 0xDD, 0xF8, 0xE0, 0xDD, 0xF7, 
   0xE0, 0xDE, 0xF5, 0xDD, 0xDB, 0xF3, 0xDB, 0xD9, 0xF2, 0xD9, 0xD7, 0xF1, 0xD7, 0xD6, 0xEF, 0xD5, 
   0xD3, 0xF4, 0xD6, 0xD2, 0xF4, 0xD6, 0xD3, 0xF2, 0xD2, 0xCF, 0xED, 0xCE, 0xCB, 0xEF, 0xCF, 0xCC, 
   0xF2, 0xD1, 0xCE, 0xEF, 0xD0, 0xCC, 0xEC, 0xCE, 0xCB, 0xEC, 0xCE, 0xCA, 0xEB, 0xCE, 0xCA, 0xEC, 
   0xCE, 0xCB, 0xEF, 0xD1, 0xCD, 0xEC, 0xCE, 0xCB, 0xF0, 0xD0, 0xC9, 0xF0, 0xD0, 0xC8, 0xEC, 0xCB, 
   0xC4, 0xEB, 0xCA, 0xC3, 0xEF, 0xCF, 0xC7, 0xEC, 0xCC, 0xC5, 0xE8, 0xC6, 0xBF, 0xEA, 0xC7, 0xC0, 
   0xE8, 0xC6, 0xBF, 0xE7, 0xC7, 0xC1, 0xDD, 0xBF, 0xB9, 0xBC, 0xA2, 0x9C, 0xAD, 0x94, 0x8D, 0xDD, 
   0xC0, 0xBE, 0xEC, 0xCE, 0xCD, 0xF0, 0xD3, 0xD1, 0xF0, 0xD2, 0xCF, 0xF2, 0xD3, 0xD0, 0xF0, 0xD1, 
   0xCE, 0xF1, 0xD1, 0xCD, 0xEE, 0xCA, 0xC5, 0xEE, 0xCB, 0xC5, 0xEE, 0xCC, 0xC6, 0xE9, 0xC7, 0xC1, 
   0xEB, 0xC9, 0xC3, 0xEB, 0xCB, 0xC5, 0xEA, 0xCC, 0xC5, 0xE9, 0xCD, 0xC6, 0xEB, 0xCE, 0xC7, 0xEA, 
   0xCE, 0xC7, 0xEA, 0xCD, 0xC6, 0xE9, 0xCD, 0xC6, 0xEC, 0xCF, 0xC8, 0xF5, 0xD4, 0xD1, 0xF7, 0xD5, 
   0xD4, 0xF6, 0xD7, 0xD4, 0xF7, 0xD9, 0xD6, 0xF2, 0xD6, 0xD2, 0xED, 0xD3, 0xCE, 0xEE, 0xD6, 0xCE, 
   0xED, 0xD5, 0xCC, 0xEB, 0xD0, 0xC8, 0xF6, 0xDA, 0xD3, 0xFA, 0xDC, 0xD6, 0xF9, 0xE1, 0xDC, 0xE2, 
   0xC3, 0xBD, 0x72, 0x56, 0x4C, 0x73, 0x58, 0x4C, 0x77, 0x5C, 0x4F, 0x7B, 0x5F, 0x53, 0x79, 0x5C, 
   0x4E, 0x7D, 0x5F, 0x50, 0x7E, 0x61, 0x58, 0x6C, 0x52, 0x4F, 0x56, 0x3E, 0x3A, 0x57, 0x45, 0x3F, 
   0x50, 0x43, 0x3D, 0x4B, 0x42, 0x3B, 0x59, 0x50, 0x4A, 0x3B, 0x31, 0x2D, 0x45, 0x3A, 0x37, 0x33, 
   0x28, 0x24, 0x1E, 0x13, 0x0F, 0x21, 0x14, 0x11, 0x2D, 0x1F, 0x1C, 0x2A, 0x1E, 0x19, 0x33, 0x28, 
   0x23, 0x35, 0x2A, 0x25, 0x31, 0x24, 0x1F, 0x39, 0x2B, 0x26, 0x3A, 0x2B, 0x26, 0x30, 0x20, 0x1B, 
   0x38, 0x28, 0x23, 0x30, 0x21, 0x1C, 0x17, 0x07, 0x03, 0x28, 0x19, 0x14, 0x32, 0x23, 0x1E, 0x28, 
   0x19, 0x14, 0x35, 0x24, 0x20, 0x22, 0x0F, 0x0E, 0x2A, 0x17, 0x15, 0x24, 0x12, 0x10, 0x1F, 0x0D, 
   0x0B, 0x33, 0x21, 0x1F, 0x42, 0x2F, 0x2D, 0x1A, 0x09, 0x06, 0x21, 0x10, 0x0D, 0x1B, 0x0A, 0x07, 
   0x17, 0x06, 0x03, 0x20, 0x0F, 0x0C, 0x1C, 0x0B, 0x08, 0x3A, 0x2B, 0x26, 0x37, 0x28, 0x22, 0x2F, 
   0x21, 0x1B, 0x3F, 0x32, 0x2B, 0x49, 0x3E, 0x37, 0x5C, 0x51, 0x4B, 0x31, 0x26, 0x1F, 0x1A, 0x0E, 
   0x08, 0x38, 0x2B, 0x25, 0x6B, 0x5D, 0x56, 0x71, 0x61, 0x59, 0x71, 0x5E, 0x56, 0x6C, 0x57, 0x50, 
   0x62, 0x4E, 0x46, 0x60, 0x4D, 0x45, 0x5F, 0x67, 0x72, 0x4F, 0x52, 0x58, 0x4F, 0x46, 0x3F, 0x66, 
   0x56, 0x49, 0x62, 0x54, 0x48, 0x56, 0x4F, 0x48, 0x59, 0x54, 0x51, 0x7B, 0x72, 0x71, 0x68, 0x59, 
   0x5A, 0x7F, 0x6C, 0x6F, 0x71, 0x61, 0x64, 0x41, 0x41, 0x44, 0x3D, 0x4B, 0x4C, 0x3D, 0x4A, 0x4A, 
   0x41, 0x45, 0x46, 0x5B, 0x55, 0x58, 0x4F, 0x46, 0x49, 0x3A, 0x36, 0x38, 0x37, 0x41, 0x41, 0x3A, 
   0x48, 0x49, 0x3E, 0x4A, 0x4E, 0x48, 0x51, 0x55, 0x49, 0x4C, 0x51, 0x55, 0x55, 0x5B, 0x84, 0x7E, 
   0x86, 0xFF, 0xF9, 0xFF, 0xFF, 0xFF, 0xFF, 0xB9, 0xBC, 0xBB, 0x58, 0x5D, 0x5E, 0x29, 0x2F, 0x33, 
   0x37, 0x3D, 0x43, 0x63, 0x66, 0x6E, 0x6D, 0x70, 0x7A, 0x48, 0x56, 0x5E, 0x69, 0x76, 0x7E, 0x61, 
   0x6A, 0x73, 0x5C, 0x62, 0x6B, 0xA4, 0xA8, 0xB1, 0x5B, 0x5C, 0x67, 0x5C, 0x60, 0x67, 0x48, 0x50, 
   0x54, 0x51, 0x5D, 0x61, 0x44, 0x4D, 0x52, 0x49, 0x4C, 0x51, 0x64, 0x5D, 0x64, 0xE6, 0xDC, 0xE2, 
   0xFC, 0xF2, 0xEF, 0xF5, 0xEE, 0xEB, 0xF1, 0xEF, 0xEC, 0xC7, 0xC8, 0xC8, 0x56, 0x5B, 0x5C, 0xA3, 
   0xA9, 0xAC, 0x9F, 0xAA, 0xAD, 0x3C, 0x47, 0x4B, 0x67, 0x69, 0x6E, 0x81, 0x79, 0x7D, 0xEE, 0xE8, 
   0xEB, 0xD0, 0xC4, 0xC6, 0xA5, 0x95, 0x97, 0xC6, 0xBA, 0xBC, 0xFD, 0xF5, 0xF6, 0xF1, 0xED, 0xEB, 
   0xDC, 0xD7, 0xD2, 0xD6, 0xCC, 0xC5, 0xF8, 0xE5, 0xDE, 0xE8, 0xD5, 0xD0, 0xEA, 0xD9, 0xD7, 0xEE, 
   0xDD, 0xDB, 0xEF, 0xE4, 0xE0, 0xD8, 0xCE, 0xCA, 0xEF, 0xE6, 0xE2, 0xF4, 0xEE, 0xE9, 0xF7, 0xE8, 
   0xE5, 0xF9, 0xEA, 0xE8, 0xF8, 0xE9, 0xE7, 0xF8, 0xE9, 0xE7, 0xF7, 0xE8, 0xE6, 0xF5, 0xE6, 0xE4, 
   0xF6, 0xE4, 0xE2, 0xF9, 0xE4, 0xE2, 0xF8, 0xE3, 0xE1, 0xF7, 0xE3, 0xE1, 0xF7, 0xE3, 0xE1, 0xF7, 
   0xE3, 0xE1, 0xF7, 0xE3, 0xE1, 0xF4, 0xE2, 0xDE, 0xF4, 0xE1, 0xDE, 0xF0, 0xDD, 0xDA, 0xEF, 0xDC, 
   0xD9, 0xF1, 0xDE, 0xDB, 0xF4, 0xE1, 0xDE, 0xF5, 0xE2, 0xDF, 0xF4, 0xE2, 0xDF, 0xF3, 0xE0, 0xDE, 
   0xF4, 0xE2, 0xDF, 0xF6, 0xE3, 0xE0, 0xF4, 0xE1, 0xDE, 0xF7, 0xE4, 0xE1, 0xF8, 0xE5, 0xE2, 0xF6, 
   0xE3, 0xE0, 0xF4, 0xE1, 0xDE, 0xF3, 0xE0, 0xDD, 0xF5, 0xE2, 0xDF, 0xF7, 0xE4, 0xE1, 0xF5, 0xE2, 
   0xDD, 0xF6, 0xE4, 0xDC, 0xF6, 0xE3, 0xDE, 0xF3, 0xE1, 0xDB, 0xEC, 0xD9, 0xD6, 0xD9, 0xC6, 0xC5, 
   0xC0, 0xAD, 0xAC, 0x9B, 0x86, 0x85, 0xB0, 0xA0, 0xA1, 0xF6, 0xEF, 0xEF, 0xCB, 0xC7, 0xC8, 0x84, 
   0x82, 0x84, 0x9A, 0x98, 0x9B, 0xE3, 0xDB, 0xDF, 0xE8, 0xDE, 0xE0, 0xBE, 0xBA, 0xBC, 0x8D, 0x8C, 
   0x91, 0x56, 0x57, 0x5F, 0x8B, 0x8A, 0x95, 0x98, 0x93, 0x9F, 0xE8, 0xDC, 0xE3, 0xFE, 0xF0, 0xF5, 
   0xF8, 0xE9, 0xEB, 0xF2, 0xE1, 0xE0, 0xF2, 0xE0, 0xDA, 0xF6, 0xE4, 0xDD, 0xF6, 0xE0, 0xDB, 0xF4, 
   0xDB, 0xD9, 0xF5, 0xDB, 0xD9, 0xF3, 0xDA, 0xD8, 0xF0, 0xD7, 0xD5, 0xEF, 0xD6, 0xD4, 0xF0, 0xD6, 
   0xD4, 0xF7, 0xD6, 0xD4, 0xF5, 0xD3, 0xD0, 0xF2, 0xD1, 0xCE, 0xF1, 0xD0, 0xCD, 0xF1, 0xD0, 0xCD, 
   0xF1, 0xCF, 0xCD, 0xED, 0xCE, 0xCB, 0xEC, 0xCE, 0xCA, 0xED, 0xCF, 0xCB, 0xEB, 0xCD, 0xCA, 0xEC, 
   0xCF, 0xCB, 0xEE, 0xD0, 0xCC, 0xE9, 0xCB, 0xC7, 0xEB, 0xCA, 0xC4, 0xEC, 0xCA, 0xC4, 0xEF, 0xCC, 
   0xC7, 0xEE, 0xCB, 0xC6, 0xEC, 0xCA, 0xC4, 0xE8, 0xC6, 0xC0, 0xE7, 0xC5, 0xBF, 0xE7, 0xC6, 0xC0, 
   0xE3, 0xC2, 0xBC, 0xE1, 0xC1, 0xBB, 0xD4, 0xB4, 0xAE, 0xCB, 0xAD, 0xA6, 0xB5, 0x98, 0x91, 0xC2, 
   0xA7, 0xA2, 0xE9, 0xCE, 0xCB, 0xF5, 0xDA, 0xD5, 0xEE, 0xD0, 0xCC, 0xEF, 0xCF, 0xCC, 0xEF, 0xCF, 
   0xCC, 0xF1, 0xCE, 0xCB, 0xF2, 0xCD, 0xC7, 0xF2, 0xCE, 0xC8, 0xF2, 0xD0, 0xCA, 0xF0, 0xCE, 0xC8, 
   0xEE, 0xCE, 0xC8, 0xED, 0xCE, 0xC8, 0xEA, 0xCD, 0xC6, 0xE5, 0xC9, 0xC2, 0xE5, 0xC9, 0xC2, 0xEC, 
   0xD0, 0xC9, 0xF3, 0xD7, 0xD0, 0xF3, 0xD6, 0xCF, 0xF4, 0xD7, 0xD1, 0xF8, 0xD7, 0xD4, 0xF8, 0xD7, 
   0xD3, 0xF5, 0xD6, 0xD1, 0xF2, 0xD6, 0xCF, 0xF0, 0xD5, 0xCE, 0xEA, 0xD1, 0xC8, 0xEB, 0xD3, 0xC6, 
   0xF2, 0xD8, 0xCB, 0xFF, 0xE5, 0xD9, 0xEE, 0xD2, 0xC8, 0xBB, 0x9D, 0x95, 0x94, 0x76, 0x70, 0x7D, 
   0x5C, 0x57, 0x6F, 0x55, 0x4D, 0x70, 0x55, 0x4D, 0x74, 0x59, 0x50, 0x75, 0x59, 0x4F, 0x7A, 0x5C, 
   0x50, 0x86, 0x68, 0x5A, 0x72, 0x57, 0x4F, 0x51, 0x3B, 0x3B, 0x57, 0x43, 0x41, 0x55, 0x44, 0x42, 
   0x44, 0x37, 0x34, 0x42, 0x39, 0x35, 0x40, 0x38, 0x34, 0x38, 0x2F, 0x2B, 0x35, 0x2B, 0x27, 0x2E, 
   0x23, 0x1F, 0x1F, 0x13, 0x0F, 0x21, 0x12, 0x0F, 0x28, 0x18, 0x16, 0x2E, 0x20, 0x1D, 0x40, 0x35, 
   0x31, 0x3A, 0x2E, 0x2A, 0x36, 0x26, 0x23, 0x38, 0x27, 0x24, 0x3A, 0x28, 0x25, 0x33, 0x20, 0x1D, 
   0x2D, 0x1B, 0x18, 0x2B, 0x1A, 0x18, 0x1E, 0x0D, 0x0A, 0x1C, 0x0A, 0x08, 0x26, 0x15, 0x12, 0x2B, 
   0x1A, 0x17, 0x27, 0x16, 0x13, 0x1D, 0x0D, 0x0A, 0x23, 0x12, 0x0F, 0x2F, 0x1E, 0x1B, 0x21, 0x10, 
   0x0D, 0x26, 0x15, 0x12, 0x54, 0x43, 0x40, 0x56, 0x45, 0x42, 0x1C, 0x0B, 0x08, 0x23, 0x12, 0x0F, 
   0x36, 0x25, 0x22, 0x34, 0x23, 0x20, 0x36, 0x25, 0x23, 0x31, 0x1F, 0x1B, 0x4B, 0x38, 0x32, 0x27, 
   0x17, 0x12, 0x39, 0x29, 0x24, 0x3C, 0x2E, 0x28, 0x47, 0x3B, 0x35, 0x28, 0x1C, 0x16, 0x3D, 0x2E, 
   0x2B, 0x33, 0x25, 0x21, 0x45, 0x37, 0x31, 0x6D, 0x5F, 0x59, 0x6B, 0x5F, 0x57, 0x51, 0x45, 0x3C, 
   0x2C, 0x23, 0x19, 0x32, 0x2A, 0x20, 0x61, 0x61, 0x6C, 0xC9, 0xC5, 0xCB, 0xB7, 0xA8, 0xA3, 0xAC, 
   0x99, 0x8E, 0xA1, 0x8F, 0x86, 0x65, 0x57, 0x52, 0xC2, 0xB6, 0xB4, 0xE0, 0xCE, 0xCC, 0xB7, 0xA1, 
   0xA1, 0xC2, 0xA8, 0xA9, 0xD0, 0xBA, 0xBD, 0x82, 0x79, 0x7A, 0x59, 0x5B, 0x5B, 0x3C, 0x47, 0x47, 
   0x48, 0x4E, 0x4F, 0x58, 0x53, 0x55, 0x5F, 0x55, 0x58, 0x71, 0x6A, 0x6D, 0x62, 0x65, 0x66, 0x6F, 
   0x78, 0x79, 0x57, 0x62, 0x66, 0x34, 0x3E, 0x42, 0x54, 0x5A, 0x5F, 0x53, 0x56, 0x5C, 0xBF, 0xBD, 
   0xC3, 0xFD, 0xFC, 0xFF, 0x8D, 0x90, 0x91, 0x46, 0x4C, 0x4B, 0x44, 0x49, 0x4B, 0x34, 0x39, 0x3D, 
   0x4F, 0x52, 0x57, 0xAA, 0xAB, 0xB1, 0x4A, 0x4B, 0x53, 0x54, 0x5D, 0x65, 0x66, 0x70, 0x78, 0x62, 
   0x6B, 0x73, 0x68, 0x70, 0x79, 0xB9, 0xC1, 0xC9, 0x5B, 0x61, 0x69, 0x41, 0x49, 0x4F, 0x58, 0x63, 
   0x67, 0x46, 0x52, 0x56, 0x3F, 0x4B, 0x4E, 0x5D, 0x64, 0x68, 0x84, 0x81, 0x88, 0xC7, 0xC1, 0xC7, 
   0xE8, 0xE3, 0xE1, 0xE1, 0xDD, 0xDA, 0xE6, 0xE5, 0xE3, 0x70, 0x73, 0x73, 0x53, 0x58, 0x5A, 0xBA, 
   0xC2, 0xC5, 0x5C, 0x66, 0x6A, 0x78, 0x81, 0x85, 0xC4, 0xC4, 0xC8, 0xBA, 0xB3, 0xB7, 0xFF, 0xF9, 
   0xFC, 0xCB, 0xBD, 0xBF, 0xD8, 0xCB, 0xCD, 0xED, 0xE2, 0xE3, 0xF6, 0xEB, 0xEC, 0xE0, 0xD6, 0xD6, 
   0xD2, 0xC8, 0xC4, 0xFA, 0xED, 0xE8, 0xF0, 0xDB, 0xD6, 0xED, 0xD9, 0xD6, 0xF6, 0xE4, 0xE3, 0xF6, 
   0xE4, 0xE2, 0xF1, 0xE3, 0xE1, 0xFA, 0xEE, 0xEC, 0xF6, 0xEA, 0xE8, 0xF6, 0xED, 0xEA, 0xF7, 0xE9, 
   0xE7, 0xF9, 0xEA, 0xE8, 0xF8, 0xE9, 0xE7, 0xF7, 0xE8, 0xE6, 0xF7, 0xE8, 0xE6, 0xF5, 0xE6, 0xE5, 
   0xF7, 0xE6, 0xE4, 0xF9, 0xE6, 0xE3, 0xF7, 0xE4, 0xE1, 0xF7, 0xE4, 0xE1, 0xF6, 0xE3, 0xE0, 0xF6, 
   0xE3, 0xE0, 0xF6, 0xE3, 0xE0, 0xF3, 0xE0, 0xDD, 0xF5, 0xE2, 0xDF, 0xF2, 0xDF, 0xDC, 0xED, 0xDA, 
   0xD7, 0xF3, 0xE0, 0xDD, 0xF7, 0xE4, 0xE1, 0xF4, 0xE1, 0xDE, 0xF5, 0xE2, 0xDF, 0xF6, 0xE3, 0xE0, 
   0xF5, 0xE2, 0xDF, 0xF6, 0xE3, 0xE0, 0xF4, 0xE1, 0xDE, 0xF5, 0xE2, 0xDF, 0xF8, 0xE5, 0xE2, 0xF7, 
   0xE4, 0xE1, 0xF5, 0xE2, 0xDF, 0xF6, 0xE3, 0xE0, 0xF6, 0xE3, 0xE0, 0xF4, 0xE1, 0xDE, 0xF2, 0xDF, 
   0xDA, 0xF5, 0xE3, 0xDB, 0xF2, 0xDF, 0xDA, 0xF3, 0xE0, 0xDB, 0xF1, 0xE0, 0xDE, 0xFE, 0xEE, 0xEE, 
   0xE4, 0xD5, 0xD4, 0xC8, 0xB3, 0xB2, 0xB3, 0xA2, 0xA2, 0xB3, 0xA9, 0xA9, 0xB2, 0xAB, 0xAD, 0xDE, 
   0xD8, 0xDA, 0xD4, 0xCE, 0xD1, 0xAF, 0xA6, 0xAA, 0xC3, 0xBB, 0xBD, 0x7C, 0x78, 0x7A, 0x80, 0x82, 
   0x86, 0x76, 0x78, 0x7F, 0x63, 0x65, 0x6D, 0x79, 0x76, 0x7F, 0xF4, 0xE7, 0xED, 0xF8, 0xE9, 0xED, 
   0xF4, 0xE4, 0xE5, 0xF3, 0xE2, 0xE1, 0xF1, 0xDF, 0xD9, 0xF4, 0xE1, 0xDA, 0xF5, 0xDD, 0xD9, 0xF3, 
   0xDA, 0xD8, 0xF2, 0xD9, 0xD7, 0xF2, 0xD8, 0xD6, 0xF3, 0xD9, 0xD8, 0xF0, 0xD7, 0xD5, 0xEE, 0xD4, 
   0xD3, 0xF8, 0xD7, 0xD5, 0xF4, 0xD4, 0xD0, 0xF3, 0xD2, 0xCF, 0xF2, 0xD1, 0xCE, 0xEF, 0xCF, 0xCB, 
   0xED, 0xCC, 0xC9, 0xEC, 0xCC, 0xC9, 0xEE, 0xCF, 0xCC, 0xEE, 0xCF, 0xCC, 0xED, 0xCE, 0xCB, 0xEE, 
   0xCF, 0xCC, 0xEB, 0xCC, 0xC9, 0xE9, 0xCA, 0xC7, 0xED, 0xCC, 0xC6, 0xEF, 0xCC, 0xC7, 0xEF, 0xCD, 
   0xC7, 0xED, 0xCB, 0xC5, 0xE8, 0xC6, 0xC0, 0xE4, 0xC2, 0xBC, 0xE5, 0xC3, 0xBD, 0xE5, 0xC3, 0xBD, 
   0xE2, 0xC1, 0xBB, 0xDE, 0xBE, 0xB8, 0xE0, 0xC0, 0xBA, 0xE0, 0xC3, 0xBC, 0xE2, 0xC5, 0xBE, 0xEB, 
   0xD0, 0xCB, 0xF0, 0xD4, 0xD1, 0xED, 0xD0, 0xCC, 0xF3, 0xD6, 0xD2, 0xEF, 0xCF, 0xCC, 0xF3, 0xD2, 
   0xCF, 0xF2, 0xCF, 0xCC, 0xEF, 0xCA, 0xC4, 0xEF, 0xCC, 0xC5, 0xF1, 0xCE, 0xC8, 0xEC, 0xCA, 0xC4, 
   0xED, 0xCC, 0xC6, 0xEC, 0xCE, 0xC7, 0xE9, 0xCC, 0xC5, 0xE8, 0xCB, 0xC4, 0xEC, 0xCF, 0xC8, 0xF1, 
   0xD4, 0xCD, 0xF6, 0xD9, 0xD2, 0xF6, 0xD9, 0xD2, 0xF5, 0xD7, 0xD1, 0xF7, 0xD6, 0xD3, 0xF4, 0xD3, 
   0xCE, 0xF0, 0xD2, 0xCC, 0xED, 0xD1, 0xCA, 0xEA, 0xCF, 0xC7, 0xF3, 0xDA, 0xD0, 0xF9, 0xE0, 0xD5, 
   0xE3, 0xC8, 0xBD, 0xB5, 0x9A, 0x90, 0x81, 0x67, 0x5D, 0x62, 0x47, 0x3F, 0x67, 0x4C, 0x45, 0x6D, 
   0x52, 0x4D, 0x70, 0x5A, 0x55, 0x72, 0x5B, 0x55, 0x75, 0x5E, 0x57, 0x7F, 0x67, 0x5D, 0x7F, 0x66, 
   0x5C, 0x6B, 0x50, 0x45, 0x50, 0x38, 0x32, 0x6D, 0x58, 0x57, 0x5A, 0x48, 0x44, 0x4F, 0x40, 0x3C, 
   0x4C, 0x3F, 0x3B, 0x46, 0x3D, 0x38, 0x36, 0x30, 0x2B, 0x46, 0x3E, 0x3A, 0x3D, 0x33, 0x2F, 0x25, 
   0x1A, 0x16, 0x25, 0x18, 0x14, 0x31, 0x22, 0x1F, 0x26, 0x16, 0x14, 0x29, 0x1C, 0x18, 0x2D, 0x22, 
   0x1E, 0x3A, 0x2E, 0x2A, 0x44, 0x35, 0x32, 0x3D, 0x2E, 0x2B, 0x3A, 0x29, 0x26, 0x31, 0x1E, 0x1B, 
   0x2A, 0x18, 0x15, 0x2B, 0x1A, 0x17, 0x21, 0x10, 0x0D, 0x1E, 0x0D, 0x0A, 0x24, 0x13, 0x10, 0x26, 
   0x15, 0x12, 0x1E, 0x0D, 0x0A, 0x21, 0x10, 0x0D, 0x25, 0x14, 0x11, 0x31, 0x20, 0x1D, 0x1C, 0x0B, 
   0x08, 0x2F, 0x1E, 0x1B, 0x6B, 0x5A, 0x57, 0x5C, 0x4B, 0x48, 0x2A, 0x19, 0x16, 0x56, 0x45, 0x42, 
   0x5C, 0x4B, 0x48, 0x39, 0x28, 0x25, 0x35, 0x24, 0x21, 0x42, 0x30, 0x2C, 0x30, 0x1F, 0x1A, 0x33, 
   0x23, 0x1D, 0x3E, 0x30, 0x2A, 0x3A, 0x2D, 0x27, 0x41, 0x36, 0x30, 0x35, 0x29, 0x23, 0x35, 0x26, 
   0x23, 0x57, 0x48, 0x44, 0x1D, 0x0F, 0x0A, 0x31, 0x24, 0x1D, 0x4C, 0x3F, 0x37, 0x49, 0x3B, 0x32, 
   0x36, 0x2A, 0x21, 0x37, 0x2E, 0x23, 0xAC, 0xA3, 0xAE, 0xE2, 0xD9, 0xDF, 0xC7, 0xB6, 0xB2, 0xD5, 
   0xC2, 0xBA, 0xCE, 0xBB, 0xB4, 0x81, 0x70, 0x6D, 0xBC, 0xAB, 0xAB, 0xD0, 0xB9, 0xB7, 0xCB, 0xB0, 
   0xAF, 0xC1, 0xA2, 0xA3, 0xD8, 0xBD, 0xBD, 0x88, 0x78, 0x79, 0x74, 0x6D, 0x6D, 0x43, 0x49, 0x4A, 
   0x3C, 0x42, 0x43, 0x59, 0x54, 0x56, 0xBF, 0xB5, 0xB8, 0xD2, 0xC8, 0xCB, 0xB5, 0xAE, 0xB0, 0x72, 
   0x74, 0x76, 0x45, 0x51, 0x55, 0x57, 0x63, 0x67, 0x53, 0x5D, 0x61, 0x51, 0x57, 0x5C, 0xC0, 0xC3, 
   0xC8, 0x76, 0x78, 0x7D, 0x41, 0x49, 0x4B, 0x4A, 0x53, 0x53, 0x3E, 0x42, 0x45, 0x48, 0x49, 0x4F, 
   0x61, 0x60, 0x66, 0xB3, 0xAF, 0xB8, 0x99, 0x94, 0x9D, 0x48, 0x4E, 0x55, 0x57, 0x5E, 0x65, 0x58, 
   0x60, 0x67, 0xA2, 0xAC, 0xB3, 0xBD, 0xC8, 0xCF, 0x54, 0x60, 0x66, 0x43, 0x4F, 0x54, 0x54, 0x61, 
   0x65, 0x59, 0x69, 0x6C, 0x4A, 0x58, 0x5C, 0x52, 0x5C, 0x61, 0x7C, 0x80, 0x86, 0x9F, 0x9E, 0xA4, 
   0x81, 0x81, 0x80, 0xAB, 0xAC, 0xAB, 0xE6, 0xEA, 0xEA, 0x89, 0x8E, 0x8F, 0x42, 0x4B, 0x4B, 0x49, 
   0x51, 0x54, 0x45, 0x4E, 0x51, 0xC3, 0xC7, 0xCA, 0x7B, 0x7A, 0x7D, 0xD7, 0xCE, 0xD2, 0xF1, 0xE2, 
   0xE6, 0xEC, 0xDF, 0xE1, 0xFD, 0xF1, 0xF2, 0xFD, 0xEC, 0xED, 0xF5, 0xE6, 0xE6, 0xF2, 0xE5, 0xE4, 
   0xEF, 0xE3, 0xDF, 0xF1, 0xE1, 0xDE, 0xE7, 0xD0, 0xCD, 0xC8, 0xB3, 0xB0, 0xEA, 0xD8, 0xD7, 0xEC, 
   0xDB, 0xDA, 0xF8, 0xEA, 0xE8, 0xF7, 0xEB, 0xE9, 0xF7, 0xEA, 0xE8, 0xF7, 0xE9, 0xE7, 0xF8, 0xE9, 
   0xE8, 0xF9, 0xEA, 0xE8, 0xF8, 0xE9, 0xE7, 0xF7, 0xE8, 0xE6, 0xF6, 0xE7, 0xE5, 0xF6, 0xE7, 0xE5, 
   0xF8, 0xE7, 0xE4, 0xF9, 0xE6, 0xE3, 0xF8, 0xE5, 0xE2, 0xF8, 0xE5, 0xE2, 0xF6, 0xE4, 0xE1, 0xF6, 
   0xE4, 0xE1, 0xF6, 0xE4, 0xE1, 0xF7, 0xE4, 0xE1, 0xF4, 0xE1, 0xDE, 0xF4, 0xE1, 0xDE, 0xF4, 0xE1, 
   0xDE, 0xF7, 0xE4, 0xE1, 0xF6, 0xE3, 0xE0, 0xF5, 0xE2, 0xDF, 0xF7, 0xE4, 0xE1, 0xF6, 0xE3, 0xE0, 
   0xF5, 0xE2, 0xDF, 0xF6, 0xE3, 0xE0, 0xF4, 0xE0, 0xDD, 0xF3, 0xE0, 0xDD, 0xF4, 0xE1, 0xDE, 0xF4, 
   0xE1, 0xDE, 0xF4, 0xE1, 0xDE, 0xF4, 0xE1, 0xDE, 0xF0, 0xDD, 0xDA, 0xF3, 0xE0, 0xDD, 0xF4, 0xE2, 
   0xDD, 0xF2, 0xE0, 0xD9, 0xF1, 0xDE, 0xD9, 0xF4, 0xE1, 0xDC, 0xF1, 0xE0, 0xDE, 0xD8, 0xC8, 0xC7, 
   0xD6, 0xC2, 0xC1, 0xAA, 0x94, 0x94, 0x8B, 0x79, 0x7B, 0x94, 0x88, 0x89, 0xC2, 0xB8, 0xBA, 0xC5, 
   0xBC, 0xBF, 0xC0, 0xB7, 0xBB, 0x71, 0x68, 0x6D, 0x8F, 0x89, 0x8B, 0xA3, 0xA1, 0xA3, 0xEB, 0xEF, 
   0xF0, 0x9C, 0x9F, 0xA4, 0x58, 0x59, 0x5F, 0xB2, 0xB0, 0xB5, 0xF5, 0xE8, 0xEC, 0xF5, 0xE6, 0xE8, 
   0xF3, 0xE2, 0xE2, 0xF2, 0xDF, 0xDD, 0xF2, 0xDD, 0xD8, 0xF3, 0xDD, 0xD7, 0xF4, 0xDB, 0xD7, 0xF4, 
   0xD8, 0xD7, 0xF4, 0xD8, 0xD7, 0xF3, 0xD6, 0xD5, 0xF1, 0xD5, 0xD4, 0xF0, 0xD4, 0xD3, 0xEF, 0xD3, 
   0xD2, 0xF4, 0xD4, 0xD0, 0xF2, 0xD2, 0xCD, 0xEE, 0xCE, 0xC9, 0xEE, 0xCE, 0xC9, 0xEF, 0xCF, 0xCA, 
   0xEE, 0xCD, 0xC8, 0xEC, 0xCD, 0xC8, 0xEC, 0xCE, 0xC9, 0xED, 0xCF, 0xCA, 0xED, 0xCE, 0xC9, 0xEE, 
   0xCF, 0xCA, 0xEC, 0xCE, 0xC8, 0xE9, 0xCB, 0xC5, 0xE8, 0xC7, 0xC0, 0xE8, 0xC6, 0xC0, 0xE8, 0xC6, 
   0xC0, 0xE6, 0xC4, 0xBE, 0xE9, 0xC7, 0xC1, 0xE6, 0xC4, 0xBE, 0xE2, 0xC0, 0xBA, 0xE2, 0xC0, 0xBA, 
   0xE4, 0xC2, 0xBC, 0xE3, 0xC3, 0xBD, 0xE2, 0xC2, 0xBC, 0xE9, 0xCB, 0xC4, 0xF7, 0xDB, 0xD4, 0xEF, 
   0xD4, 0xCE, 0xF0, 0xD4, 0xCE, 0xF0, 0xD2, 0xCD, 0xF1, 0xD3, 0xCE, 0xF0, 0xD1, 0xCC, 0xF5, 0xD5, 
   0xD0, 0xF5, 0xD1, 0xCD, 0xF1, 0xCB, 0xC6, 0xEF, 0xCB, 0xC5, 0xEF, 0xCC, 0xC6, 0xEF, 0xCD, 0xC7, 
   0xEC, 0xCC, 0xC6, 0xE8, 0xCA, 0xC3, 0xEB, 0xCE, 0xC7, 0xF2, 0xD5, 0xCE, 0xF3, 0xD6, 0xCF, 0xF1, 
   0xD3, 0xCD, 0xF2, 0xD5, 0xCE, 0xF1, 0xD4, 0xCD, 0xF0, 0xD2, 0xCC, 0xF4, 0xD4, 0xD0, 0xF3, 0xD3, 
   0xCE, 0xEC, 0xCE, 0xC8, 0xE9, 0xCD, 0xC6, 0xEE, 0xD4, 0xCA, 0xDD, 0xC4, 0xBA, 0xB0, 0x94, 0x8A, 
   0x78, 0x5C, 0x51, 0x67, 0x4B, 0x41, 0x69, 0x51, 0x48, 0x6E, 0x59, 0x51, 0x6C, 0x59, 0x52, 0x6A, 
   0x58, 0x51, 0x5A, 0x4A, 0x47, 0x52, 0x41, 0x3D, 0x50, 0x3D, 0x38, 0x72, 0x60, 0x5A, 0x69, 0x56, 
   0x4F, 0x8B, 0x76, 0x6E, 0x82, 0x6E, 0x69, 0x84, 0x71, 0x6F, 0x78, 0x67, 0x64, 0x50, 0x43, 0x3F, 
   0x3A, 0x2F, 0x2B, 0x45, 0x3C, 0x38, 0x33, 0x2D, 0x28, 0x37, 0x2E, 0x2A, 0x31, 0x27, 0x23, 0x26, 
   0x1B, 0x17, 0x30, 0x24, 0x20, 0x2A, 0x1B, 0x18, 0x1F, 0x10, 0x0D, 0x24, 0x17, 0x14, 0x26, 0x1B, 
   0x17, 0x39, 0x2D, 0x29, 0x37, 0x29, 0x26, 0x3B, 0x2B, 0x28, 0x32, 0x21, 0x1E, 0x2E, 0x1D, 0x1A, 
   0x2C, 0x1B, 0x18, 0x2C, 0x1B, 0x18, 0x32, 0x21, 0x1E, 0x23, 0x12, 0x0F, 0x20, 0x0F, 0x0C, 0x23, 
   0x12, 0x0F, 0x23, 0x12, 0x0F, 0x26, 0x15, 0x12, 0x41, 0x30, 0x2D, 0x27, 0x16, 0x13, 0x2C, 0x1B, 
   0x18, 0x3A, 0x29, 0x26, 0x56, 0x45, 0x42, 0x4F, 0x3E, 0x3B, 0x41, 0x30, 0x2D, 0x3F, 0x2E, 0x2B, 
   0x3D, 0x2C, 0x29, 0x2D, 0x1D, 0x1A, 0x38, 0x27, 0x24, 0x5E, 0x4E, 0x49, 0x5B, 0x4C, 0x46, 0x5A, 
   0x4A, 0x44, 0x3E, 0x31, 0x2B, 0x61, 0x55, 0x4F, 0x55, 0x4A, 0x44, 0x63, 0x59, 0x52, 0x6E, 0x5F, 
   0x5C, 0x4D, 0x3F, 0x3A, 0x21, 0x13, 0x0D, 0x37, 0x2A, 0x23, 0x2D, 0x20, 0x18, 0x4E, 0x40, 0x37, 
   0x62, 0x56, 0x4D, 0x40, 0x36, 0x2C, 0xAA, 0xA4, 0xAA, 0x5B, 0x54, 0x58, 0x95, 0x8B, 0x87, 0xC9, 
   0xBD, 0xB6, 0x91, 0x84, 0x7E, 0x60, 0x53, 0x52, 0xA5, 0x98, 0x95, 0xD6, 0xC4, 0xBE, 0xCB, 0xB6, 
   0xB2, 0xD0, 0xB8, 0xB7, 0x92, 0x7D, 0x7B, 0x4B, 0x3F, 0x3D, 0x5C, 0x57, 0x54, 0x4A, 0x50, 0x4F, 
   0x41, 0x47, 0x48, 0x75, 0x70, 0x73, 0xBD, 0xB2, 0xB5, 0xBD, 0xB0, 0xB3, 0x74, 0x69, 0x6B, 0x49, 
   0x46, 0x49, 0x52, 0x5E, 0x62, 0x55, 0x61, 0x65, 0x74, 0x7F, 0x83, 0x7E, 0x87, 0x8B, 0x7D, 0x83, 
   0x88, 0x3F, 0x44, 0x49, 0x44, 0x4E, 0x51, 0x3B, 0x48, 0x49, 0x40, 0x45, 0x48, 0x5D, 0x5C, 0x60, 
   0x5F, 0x5A, 0x60, 0xD0, 0xCA, 0xD1, 0xF2, 0xEC, 0xF3, 0xAC, 0xAE, 0xB5, 0x61, 0x63, 0x6B, 0x98, 
   0x9F, 0xA7, 0xDE, 0xE8, 0xEF, 0x5B, 0x68, 0x6F, 0x46, 0x57, 0x5D, 0x47, 0x59, 0x5D, 0x41, 0x51, 
   0x54, 0x47, 0x58, 0x5B, 0x43, 0x51, 0x54, 0x9A, 0xA5, 0xA8, 0x8B, 0x94, 0x97, 0x43, 0x4B, 0x4F, 
   0x61, 0x66, 0x67, 0xC1, 0xC5, 0xC6, 0xDC, 0xE2, 0xE4, 0x53, 0x5A, 0x5D, 0x58, 0x60, 0x63, 0x9E, 
   0xA8, 0xAA, 0x62, 0x69, 0x6D, 0x59, 0x5A, 0x5E, 0x66, 0x62, 0x64, 0xF1, 0xE8, 0xEA, 0xF6, 0xE8, 
   0xE9, 0xF6, 0xE8, 0xE9, 0xF5, 0xE7, 0xE8, 0xFB, 0xEB, 0xEA, 0xF7, 0xE4, 0xE3, 0xFA, 0xEA, 0xE9, 
   0xF9, 0xEC, 0xEA, 0xEA, 0xD7, 0xD4, 0xEB, 0xD6, 0xD4, 0xEE, 0xDA, 0xD9, 0xEF, 0xDF, 0xE0, 0xFB, 
   0xEF, 0xEF, 0xFA, 0xEA, 0xEA, 0xF9, 0xEA, 0xEB, 0xFB, 0xEB, 0xEC, 0xF9, 0xEB, 0xEB, 0xF7, 0xE8, 
   0xE6, 0xF9, 0xEA, 0xE8, 0xF8, 0xE9, 0xE7, 0xF7, 0xE8, 0xE6, 0xF6, 0xE7, 0xE5, 0xF6, 0xE7, 0xE5, 
   0xF7, 0xE7, 0xE5, 0xF8, 0xE7, 0xE4, 0xF6, 0xE5, 0xE2, 0xF6, 0xE5, 0xE2, 0xF7, 0xE6, 0xE3, 0xF7, 
   0xE5, 0xE2, 0xF7, 0xE5, 0xE2, 0xF9, 0xE6, 0xE3, 0xF6, 0xE3, 0xE0, 0xF4, 0xE1, 0xDE, 0xF8, 0xE5, 
   0xE2, 0xF7, 0xE4, 0xE1, 0xF8, 0xE5, 0xE2, 0xFC, 0xEA, 0xE7, 0xF8, 0xE4, 0xE2, 0xF6, 0xE1, 0xDF, 
   0xF7, 0xE2, 0xE0, 0xF7, 0xE2, 0xE0, 0xF4, 0xDF, 0xDD, 0xF3, 0xDF, 0xDD, 0xF3, 0xE0, 0xDD, 0xF3, 
   0xE0, 0xDD, 0xF3, 0xE0, 0xDD, 0xF3, 0xE0, 0xDD, 0xF9, 0xE6, 0xE3, 0xF6, 0xE3, 0xE0, 0xF0, 0xDE, 
   0xD9, 0xF0, 0xDE, 0xD6, 0xF2, 0xDF, 0xDA, 0xF5, 0xE2, 0xDD, 0xE7, 0xD4, 0xD2, 0xAD, 0x98, 0x97, 
   0xCF, 0xBB, 0xBA, 0xD9, 0xC1, 0xC1, 0xE5, 0xD2, 0xD4, 0xEC, 0xE1, 0xE3, 0xC5, 0xB9, 0xBC, 0xC6, 
   0xBC, 0xC0, 0x8D, 0x7E, 0x84, 0x72, 0x67, 0x6B, 0x72, 0x6F, 0x70, 0xD1, 0xD2, 0xD3, 0x96, 0x9B, 
   0x9C, 0x5E, 0x60, 0x64, 0x83, 0x83, 0x87, 0xEC, 0xE9, 0xED, 0xF2, 0xE4, 0xE5, 0xF4, 0xE3, 0xE3, 
   0xF1, 0xDE, 0xDC, 0xEF, 0xDC, 0xD9, 0xF2, 0xDD, 0xD8, 0xF3, 0xDB, 0xD5, 0xF3, 0xD8, 0xD5, 0xF1, 
   0xD5, 0xD5, 0xF1, 0xD5, 0xD4, 0xF0, 0xD4, 0xD3, 0xEF, 0xD3, 0xD2, 0xED, 0xD2, 0xD1, 0xEC, 0xD0, 
   0xCF, 0xEF, 0xCF, 0xCA, 0xF2, 0xD2, 0xCD, 0xEF, 0xCF, 0xCA, 0xEC, 0xCC, 0xC7, 0xEF, 0xCF, 0xCA, 
   0xEF, 0xCF, 0xCA, 0xED, 0xCD, 0xC8, 0xEB, 0xCC, 0xC7, 0xED, 0xCD, 0xC8, 0xEC, 0xCC, 0xC7, 0xEB, 
   0xCB, 0xC6, 0xEB, 0xCB, 0xC6, 0xE7, 0xC7, 0xC2, 0xE3, 0xC1, 0xBC, 0xE7, 0xC5, 0xBE, 0xEA, 0xC8, 
   0xC2, 0xE8, 0xC6, 0xC0, 0xE9, 0xC7, 0xC1, 0xE7, 0xC5, 0xBF, 0xE5, 0xC3, 0xBD, 0xE7, 0xC4, 0xBE, 
   0xE7, 0xC5, 0xBF, 0xE4, 0xC4, 0xBE, 0xE9, 0xC9, 0xC3, 0xF2, 0xD4, 0xCD, 0xE8, 0xCB, 0xC4, 0xEE, 
   0xD2, 0xCC, 0xF0, 0xD3, 0xCE, 0xEB, 0xCD, 0xC8, 0xEF, 0xD0, 0xCB, 0xEF, 0xCF, 0xCA, 0xEC, 0xC9, 
   0xC5, 0xEB, 0xC7, 0xC3, 0xEE, 0xC9, 0xC3, 0xE9, 0xC5, 0xBF, 0xE6, 0xC4, 0xBE, 0xEB, 0xC9, 0xC3, 
   0xED, 0xCD, 0xC7, 0xEE, 0xCF, 0xC9, 0xF1, 0xD3, 0xCC, 0xF5, 0xD5, 0xCF, 0xF4, 0xD4, 0xCE, 0xF2, 
   0xD2, 0xCC, 0xF2, 0xD2, 0xCC, 0xEF, 0xCF, 0xC9, 0xF0, 0xD0, 0xCA, 0xEC, 0xCB, 0xC7, 0xED, 0xCD, 
   0xC7, 0xF4, 0xD6, 0xD0, 0xF1, 0xD7, 0xCD, 0xE7, 0xCD, 0xC3, 0x85, 0x6E, 0x62, 0x68, 0x4C, 0x41, 
   0x74, 0x54, 0x4B, 0x73, 0x58, 0x4F, 0x6E, 0x59, 0x51, 0x67, 0x55, 0x4E, 0x69, 0x5C, 0x55, 0x54, 
   0x48, 0x43, 0x40, 0x33, 0x32, 0x3C, 0x2F, 0x2D, 0x46, 0x3A, 0x36, 0x42, 0x35, 0x31, 0x3A, 0x2C, 
   0x26, 0x57, 0x47, 0x41, 0x77, 0x66, 0x62, 0x83, 0x73, 0x71, 0x5B, 0x4F, 0x4B, 0x4D, 0x40, 0x3C, 
   0x46, 0x3C, 0x38, 0x3B, 0x34, 0x2F, 0x39, 0x33, 0x2E, 0x35, 0x2D, 0x28, 0x3A, 0x30, 0x2C, 0x29, 
   0x1E, 0x1A, 0x32, 0x26, 0x22, 0x21, 0x12, 0x0F, 0x1B, 0x0C, 0x09, 0x2B, 0x1F, 0x1B, 0x2D, 0x23, 
   0x1F, 0x23, 0x18, 0x14, 0x33, 0x26, 0x22, 0x44, 0x36, 0x33, 0x30, 0x21, 0x1E, 0x2F, 0x1E, 0x1B, 
   0x2B, 0x1C, 0x19, 0x32, 0x23, 0x20, 0x32, 0x23, 0x20, 0x1C, 0x0D, 0x0A, 0x1D, 0x0E, 0x0B, 0x1D, 
   0x0E, 0x0B, 0x23, 0x14, 0x11, 0x37, 0x28, 0x25, 0x33, 0x24, 0x21, 0x1D, 0x0E, 0x0B, 0x23, 0x14, 
   0x11, 0x28, 0x19, 0x16, 0x28, 0x19, 0x16, 0x22, 0x13, 0x10, 0x1A, 0x0B, 0x09, 0x1F, 0x10, 0x0D, 
   0x2D, 0x1E, 0x1B, 0x32, 0x22, 0x1F, 0x33, 0x24, 0x21, 0x29, 0x19, 0x15, 0x3A, 0x2B, 0x25, 0x43, 
   0x35, 0x2F, 0x31, 0x24, 0x1F, 0x21, 0x17, 0x10, 0x1E, 0x14, 0x0D, 0x42, 0x38, 0x32, 0x54, 0x47, 
   0x44, 0x2E, 0x21, 0x1D, 0x22, 0x16, 0x10, 0x3F, 0x33, 0x2C, 0x35, 0x2A, 0x22, 0x36, 0x2B, 0x21, 
   0x57, 0x4D, 0x43, 0x40, 0x35, 0x2B, 0x38, 0x38, 0x3D, 0x6C, 0x6C, 0x6F, 0x6A, 0x6C, 0x69, 0x9A, 
   0x9C, 0x97, 0x44, 0x44, 0x3F, 0x44, 0x41, 0x40, 0x84, 0x7D, 0x7A, 0xC7, 0xBF, 0xB7, 0xD4, 0xCB, 
   0xC4, 0xC0, 0xB6, 0xB2, 0x96, 0x8E, 0x8A, 0x9A, 0x97, 0x93, 0xA3, 0xA5, 0xA0, 0x69, 0x71, 0x6F, 
   0x43, 0x47, 0x48, 0x54, 0x50, 0x53, 0xAE, 0xA6, 0xA9, 0x97, 0x8C, 0x8F, 0xB2, 0xA6, 0xA9, 0xBF, 
   0xBB, 0xBE, 0x5D, 0x69, 0x6D, 0x52, 0x5F, 0x63, 0x5E, 0x69, 0x6D, 0x69, 0x73, 0x76, 0x53, 0x5A, 
   0x5F, 0x3E, 0x43, 0x48, 0x77, 0x83, 0x87, 0x52, 0x5E, 0x61, 0x4A, 0x4C, 0x52, 0x5C, 0x57, 0x5C, 
   0x70, 0x69, 0x6F, 0xD8, 0xD2, 0xD8, 0xF3, 0xEE, 0xF3, 0xDA, 0xD9, 0xDF, 0x5B, 0x5D, 0x63, 0xB9, 
   0xC1, 0xC5, 0x8B, 0x97, 0x9B, 0x40, 0x50, 0x54, 0x49, 0x5C, 0x60, 0x48, 0x5C, 0x5F, 0x4C, 0x5D, 
   0x60, 0x42, 0x52, 0x54, 0x77, 0x85, 0x88, 0xAE, 0xBA, 0xBE, 0x50, 0x5C, 0x60, 0x48, 0x53, 0x57, 
   0x64, 0x6D, 0x70, 0x63, 0x6C, 0x6F, 0x82, 0x8A, 0x8E, 0x40, 0x46, 0x4B, 0x78, 0x7F, 0x83, 0x95, 
   0x9D, 0xA0, 0x67, 0x6B, 0x6E, 0x25, 0x23, 0x25, 0xB5, 0xAE, 0xB1, 0xFC, 0xF2, 0xF4, 0xF5, 0xE6, 
   0xE7, 0xF5, 0xE6, 0xE5, 0xF5, 0xE8, 0xE6, 0xFC, 0xEA, 0xE7, 0xF9, 0xE5, 0xE3, 0xFA, 0xE7, 0xE5, 
   0xFB, 0xE7, 0xE6, 0xF7, 0xE6, 0xE4, 0xF4, 0xE1, 0xE0, 0xF2, 0xE5, 0xE4, 0xF5, 0xE8, 0xE9, 0xFC, 
   0xEF, 0xF0, 0xF9, 0xEE, 0xEF, 0xF7, 0xEB, 0xEC, 0xF6, 0xE8, 0xE9, 0xF7, 0xEA, 0xEB, 0xFB, 0xEC, 
   0xEA, 0xF9, 0xEA, 0xE8, 0xF7, 0xE8, 0xE6, 0xF8, 0xE9, 0xE7, 0xF5, 0xE6, 0xE4, 0xF7, 0xE8, 0xE6, 
   0xF7, 0xE7, 0xE5, 0xF7, 0xE6, 0xE3, 0xF7, 0xE6, 0xE3, 0xF8, 0xE7, 0xE4, 0xF4, 0xE3, 0xE0, 0xF7, 
   0xE6, 0xE3, 0xF8, 0xE7, 0xE4, 0xF7, 0xE4, 0xE1, 0xF7, 0xE4, 0xE1, 0xF8, 0xE5, 0xE2, 0xF2, 0xDF, 
   0xDC, 0xF5, 0xE2, 0xDF, 0xF3, 0xE1, 0xDE, 0xD2, 0xBE, 0xBB, 0xEB, 0xD4, 0xD2, 0xFA, 0xE3, 0xE1, 
   0xF7, 0xE0, 0xDE, 0xF6, 0xE0, 0xDE, 0xF5, 0xDF, 0xDD, 0xF6, 0xE0, 0xDE, 0xF3, 0xE0, 0xDD, 0xF2, 
   0xDF, 0xDC, 0xF8, 0xE5, 0xE2, 0xF7, 0xE4, 0xE1, 0xB4, 0xA1, 0x9E, 0xC1, 0xAE, 0xAC, 0xF4, 0xE2, 
   0xDD, 0xF0, 0xDF, 0xD7, 0xF0, 0xDD, 0xD8, 0xF0, 0xDD, 0xD8, 0xE8, 0xD4, 0xD2, 0xE1, 0xCD, 0xCC, 
   0xDA, 0xC9, 0xC8, 0xE0, 0xCB, 0xCB, 0xE6, 0xD4, 0xD5, 0xA5, 0x96, 0x98, 0xCE, 0xC4, 0xC6, 0xF6, 
   0xE9, 0xED, 0xA4, 0x91, 0x97, 0x97, 0x8A, 0x8F, 0xDC, 0xD9, 0xDA, 0x86, 0x85, 0x87, 0x7C, 0x80, 
   0x81, 0x71, 0x72, 0x74, 0xBF, 0xBC, 0xBE, 0xF7, 0xF2, 0xF3, 0xEE, 0xDF, 0xDC, 0xF0, 0xDE, 0xDC, 
   0xEF, 0xDB, 0xD9, 0xF0, 0xDA, 0xD6, 0xF2, 0xD9, 0xD4, 0xF3, 0xD7, 0xD2, 0xF3, 0xD5, 0xD2, 0xF2, 
   0xD5, 0xD4, 0xF1, 0xD3, 0xD2, 0xF1, 0xD3, 0xD2, 0xEF, 0xD2, 0xD1, 0xEE, 0xD0, 0xCF, 0xEC, 0xCE, 
   0xCE, 0xEF, 0xCF, 0xCA, 0xF1, 0xD1, 0xCB, 0xF3, 0xD3, 0xCD, 0xF1, 0xD1, 0xCB, 0xEF, 0xCF, 0xC9, 
   0xEF, 0xCF, 0xC9, 0xEC, 0xCC, 0xC6, 0xEC, 0xCC, 0xC6, 0xEE, 0xCE, 0xC8, 0xEB, 0xCB, 0xC5, 0xED, 
   0xCD, 0xC7, 0xED, 0xCE, 0xC8, 0xE5, 0xC5, 0xBF, 0xE2, 0xC0, 0xBA, 0xEC, 0xC9, 0xC3, 0xED, 0xCB, 
   0xC5, 0xE9, 0xC7, 0xC1, 0xE9, 0xC7, 0xC1, 0xE8, 0xC6, 0xC0, 0xE9, 0xC7, 0xC1, 0xEA, 0xC8, 0xC2, 
   0xE9, 0xC7, 0xC1, 0xE6, 0xC6, 0xC0, 0xEF, 0xCF, 0xC9, 0xED, 0xD0, 0xC9, 0xEB, 0xCE, 0xC7, 0xF0, 
   0xD3, 0xCC, 0xF0, 0xD2, 0xCC, 0xF0, 0xD2, 0xCB, 0xED, 0xCE, 0xC8, 0xEC, 0xCB, 0xC5, 0xE6, 0xC4, 
   0xBE, 0xE9, 0xC5, 0xC0, 0xE7, 0xC2, 0xBC, 0xE6, 0xC2, 0xBC, 0xEA, 0xC7, 0xC1, 0xE9, 0xC7, 0xC1, 
   0xF7, 0xD7, 0xD1, 0xF1, 0xD3, 0xCC, 0xEA, 0xCC, 0xC6, 0xED, 0xCD, 0xC7, 0xF0, 0xD0, 0xCA, 0xF0, 
   0xD1, 0xCB, 0xF2, 0xD2, 0xCC, 0xEB, 0xCB, 0xC5, 0xED, 0xCD, 0xC7, 0xEF, 0xCF, 0xC9, 0xEE, 0xCE, 
   0xC8, 0xC4, 0xA6, 0x9F, 0xA9, 0x8F, 0x85, 0x87, 0x6D, 0x62, 0x6C, 0x55, 0x48, 0x76, 0x5B, 0x4E, 
   0x73, 0x55, 0x4C, 0x6A, 0x51, 0x49, 0x4C, 0x39, 0x31, 0x43, 0x36, 0x2E, 0x46, 0x3D, 0x36, 0x48, 
   0x42, 0x3A, 0x3C, 0x36, 0x35, 0x3C, 0x34, 0x34, 0x43, 0x3A, 0x39, 0x38, 0x2F, 0x2A, 0x2D, 0x21, 
   0x1C, 0x30, 0x25, 0x1E, 0x45, 0x39, 0x34, 0x5F, 0x53, 0x4F, 0x51, 0x46, 0x42, 0x33, 0x29, 0x25, 
   0x47, 0x3F, 0x3A, 0x48, 0x42, 0x3D, 0x35, 0x2F, 0x2A, 0x3A, 0x32, 0x2E, 0x4D, 0x43, 0x3F, 0x24, 
   0x19, 0x15, 0x32, 0x26, 0x22, 0x3D, 0x2E, 0x2B, 0x27, 0x18, 0x15, 0x2C, 0x20, 0x1C, 0x39, 0x30, 
   0x2B, 0x2B, 0x1F, 0x1B, 0x5B, 0x4F, 0x4B, 0x60, 0x54, 0x50, 0x2A, 0x1C, 0x19, 0x38, 0x29, 0x26, 
   0x36, 0x27, 0x24, 0x35, 0x26, 0x23, 0x3E, 0x2E, 0x2C, 0x1F, 0x10, 0x0E, 0x23, 0x14, 0x12, 0x30, 
   0x21, 0x1E, 0x33, 0x24, 0x21, 0x61, 0x52, 0x4F, 0x47, 0x38, 0x35, 0x3A, 0x2B, 0x28, 0x31, 0x22, 
   0x1F, 0x27, 0x18, 0x15, 0x26, 0x16, 0x14, 0x29, 0x1A, 0x17, 0x23, 0x14, 0x11, 0x2A, 0x1B, 0x18, 
   0x25, 0x15, 0x13, 0x33, 0x24, 0x21, 0x2F, 0x20, 0x1E, 0x27, 0x18, 0x14, 0x22, 0x14, 0x0F, 0x34, 
   0x28, 0x22, 0x32, 0x27, 0x20, 0x33, 0x29, 0x22, 0x29, 0x20, 0x19, 0x2A, 0x22, 0x1C, 0x37, 0x2C, 
   0x28, 0x2C, 0x21, 0x1B, 0x2B, 0x22, 0x1A, 0x40, 0x36, 0x2F, 0x55, 0x4C, 0x43, 0x5C, 0x53, 0x49, 
   0x58, 0x4E, 0x44, 0x4C, 0x3F, 0x36, 0x40, 0x41, 0x42, 0x2E, 0x32, 0x32, 0x42, 0x4D, 0x4A, 0x7E, 
   0x8B, 0x86, 0x4B, 0x55, 0x51, 0x3B, 0x3E, 0x3E, 0x53, 0x51, 0x4F, 0x75, 0x75, 0x6E, 0x8E, 0x8E, 
   0x88, 0x60, 0x61, 0x5B, 0x39, 0x3C, 0x36, 0x4F, 0x54, 0x4F, 0x3E, 0x45, 0x42, 0x3B, 0x41, 0x41, 
   0x74, 0x79, 0x7A, 0x91, 0x90, 0x92, 0xAE, 0xA8, 0xAA, 0xA4, 0x9C, 0x9F, 0x8D, 0x83, 0x86, 0x63, 
   0x5E, 0x62, 0x48, 0x51, 0x55, 0x4E, 0x56, 0x5B, 0x4B, 0x53, 0x58, 0x5E, 0x65, 0x6A, 0x66, 0x6D, 
   0x72, 0x84, 0x8A, 0x8F, 0x8B, 0x97, 0x9B, 0x53, 0x5C, 0x61, 0x7A, 0x79, 0x7E, 0xB2, 0xAB, 0xB0, 
   0xC3, 0xBB, 0xC0, 0xF5, 0xF2, 0xF4, 0xF0, 0xEF, 0xF2, 0x7E, 0x7E, 0x82, 0x41, 0x44, 0x49, 0x7D, 
   0x85, 0x88, 0x57, 0x63, 0x66, 0x4A, 0x5B, 0x5C, 0x42, 0x56, 0x57, 0x44, 0x57, 0x5A, 0x55, 0x65, 
   0x68, 0x59, 0x66, 0x6A, 0xAB, 0xB7, 0xBA, 0x47, 0x53, 0x56, 0x40, 0x4E, 0x52, 0x56, 0x66, 0x69, 
   0x65, 0x6F, 0x75, 0x50, 0x59, 0x60, 0x4F, 0x57, 0x5E, 0x4A, 0x4E, 0x55, 0x50, 0x53, 0x59, 0x9C, 
   0x9F, 0xA4, 0x5C, 0x5C, 0x5F, 0x78, 0x72, 0x74, 0xF1, 0xE9, 0xEB, 0xFA, 0xEC, 0xEE, 0xF9, 0xE8, 
   0xE8, 0xF8, 0xE8, 0xE6, 0xF6, 0xE8, 0xE6, 0xF7, 0xE8, 0xE3, 0xFB, 0xEA, 0xE5, 0xF9, 0xE5, 0xE3, 
   0xF8, 0xE4, 0xE3, 0xF8, 0xE7, 0xE7, 0xF1, 0xE1, 0xE1, 0xF7, 0xF0, 0xF0, 0xF4, 0xED, 0xEE, 0xC9, 
   0xC2, 0xC3, 0xBE, 0xB4, 0xB5, 0xFB, 0xF1, 0xF2, 0xFB, 0xEE, 0xF0, 0xF5, 0xE8, 0xE9, 0xF9, 0xEA, 
   0xE8, 0xF9, 0xE9, 0xE7, 0xF9, 0xEA, 0xE8, 0xF8, 0xE9, 0xE7, 0xF7, 0xE8, 0xE6, 0xF6, 0xE7, 0xE5, 
   0xF3, 0xE5, 0xE3, 0xF7, 0xE8, 0xE5, 0xF3, 0xE3, 0xE0, 0xF1, 0xE2, 0xDF, 0xF5, 0xE5, 0xE2, 0xF6, 
   0xE6, 0xE3, 0xF3, 0xE4, 0xE1, 0xF6, 0xE3, 0xE0, 0xFA, 0xE7, 0xE4, 0xF9, 0xE6, 0xE3, 0xF6, 0xE4, 
   0xE1, 0xF1, 0xDF, 0xDC, 0xC5, 0xB3, 0xB0, 0xC3, 0xAF, 0xAC, 0xF3, 0xDC, 0xDA, 0xF9, 0xE2, 0xE0, 
   0xF5, 0xDE, 0xDC, 0xF3, 0xDC, 0xDA, 0xF1, 0xDA, 0xD8, 0xF2, 0xDC, 0xDA, 0xF2, 0xDE, 0xDC, 0xF2, 
   0xDF, 0xDC, 0xF3, 0xE0, 0xDD, 0xEC, 0xD9, 0xD6, 0x9D, 0x8A, 0x87, 0xC6, 0xB3, 0xB0, 0xE0, 0xCE, 
   0xC9, 0xED, 0xDB, 0xD4, 0xF4, 0xE1, 0xDC, 0xF2, 0xDF, 0xDA, 0xE7, 0xD3, 0xD1, 0xF7, 0xE4, 0xE4, 
   0xE6, 0xD3, 0xD2, 0xE1, 0xD0, 0xCF, 0xEA, 0xDB, 0xDC, 0xD3, 0xC9, 0xCA, 0xF0, 0xE7, 0xE9, 0xF9, 
   0xEB, 0xEF, 0xF9, 0xEA, 0xEF, 0xDA, 0xCD, 0xD3, 0xD8, 0xD2, 0xD5, 0xB7, 0xB3, 0xB6, 0x6F, 0x6F, 
   0x70, 0x8A, 0x87, 0x88, 0xF3, 0xEE, 0xED, 0xEC, 0xE2, 0xE2, 0xF0, 0xDE, 0xDB, 0xEF, 0xDD, 0xD8, 
   0xEF, 0xDB, 0xD7, 0xF1, 0xD9, 0xD5, 0xF4, 0xD8, 0xD4, 0xF4, 0xD6, 0xD2, 0xF3, 0xD4, 0xD2, 0xF2, 
   0xD4, 0xD3, 0xF1, 0xD3, 0xD2, 0xF0, 0xD2, 0xD1, 0xEF, 0xD1, 0xD0, 0xED, 0xCF, 0xCF, 0xEE, 0xD0, 
   0xCE, 0xED, 0xCE, 0xC7, 0xDE, 0xBF, 0xB7, 0xD9, 0xBA, 0xB2, 0xE9, 0xC9, 0xC1, 0xF2, 0xD2, 0xCA, 
   0xEF, 0xD0, 0xC8, 0xEE, 0xCE, 0xC6, 0xED, 0xCD, 0xC5, 0xED, 0xCD, 0xC5, 0xEE, 0xCD, 0xC5, 0xEC, 
   0xCC, 0xC4, 0xED, 0xCC, 0xC4, 0xEC, 0xCC, 0xC4, 0xEB, 0xC9, 0xC2, 0xEB, 0xC9, 0xC3, 0xEA, 0xC8, 
   0xC2, 0xEB, 0xC9, 0xC3, 0xEA, 0xC8, 0xC2, 0xEB, 0xC9, 0xC3, 0xEA, 0xC8, 0xC2, 0xEA, 0xC8, 0xC2, 
   0xEA, 0xC8, 0xC2, 0xE9, 0xC9, 0xC3, 0xEE, 0xCE, 0xC8, 0xED, 0xD0, 0xC9, 0xEA, 0xCD, 0xC6, 0xED, 
   0xD1, 0xC8, 0xF0, 0xD3, 0xCB, 0xF1, 0xD2, 0xCA, 0xEB, 0xCB, 0xC4, 0xF1, 0xCF, 0xC7, 0xF1, 0xCD, 
   0xC6, 0xEC, 0xC7, 0xC1, 0xE5, 0xC0, 0xBA, 0xE5, 0xC1, 0xBB, 0xE5, 0xC2, 0xBC, 0xE7, 0xC5, 0xBF, 
   0xD0, 0xB0, 0xAA, 0xD6, 0xB7, 0xB1, 0xF1, 0xD3, 0xCC, 0xF0, 0xCE, 0xC9, 0xF2, 0xD1, 0xCB, 0xF0, 
   0xCF, 0xC9, 0xEF, 0xCD, 0xC7, 0xEC, 0xCA, 0xC4, 0xEC, 0xCB, 0xC5, 0xDB, 0xBA, 0xB5, 0x8F, 0x70, 
   0x69, 0x70, 0x53, 0x4A, 0x6D, 0x51, 0x47, 0x6F, 0x55, 0x49, 0x7A, 0x63, 0x54, 0x72, 0x58, 0x4C, 
   0x74, 0x59, 0x52, 0x56, 0x3F, 0x38, 0x3F, 0x2E, 0x27, 0x42, 0x37, 0x30, 0x48, 0x41, 0x3B, 0x3F, 
   0x3B, 0x36, 0x40, 0x3C, 0x3A, 0x4C, 0x48, 0x45, 0x59, 0x54, 0x51, 0x3D, 0x36, 0x32, 0x54, 0x4B, 
   0x45, 0x3E, 0x35, 0x2E, 0x38, 0x30, 0x2A, 0x4A, 0x42, 0x3E, 0x45, 0x3D, 0x39, 0x3B, 0x33, 0x2F, 
   0x3D, 0x36, 0x31, 0x3C, 0x36, 0x31, 0x3E, 0x37, 0x32, 0x3D, 0x34, 0x30, 0x49, 0x3E, 0x3A, 0x36, 
   0x2B, 0x27, 0x2F, 0x23, 0x1F, 0x42, 0x33, 0x30, 0x34, 0x24, 0x21, 0x31, 0x26, 0x22, 0x35, 0x2D, 
   0x29, 0x27, 0x1E, 0x1A, 0x4E, 0x43, 0x3F, 0x50, 0x44, 0x40, 0x31, 0x24, 0x21, 0x3F, 0x32, 0x2E, 
   0x36, 0x29, 0x25, 0x2A, 0x1D, 0x19, 0x3C, 0x2F, 0x2C, 0x1F, 0x11, 0x0F, 0x23, 0x16, 0x13, 0x31, 
   0x24, 0x20, 0x31, 0x24, 0x20, 0x43, 0x36, 0x32, 0x42, 0x35, 0x31, 0x36, 0x29, 0x26, 0x3D, 0x30, 
   0x2C, 0x24, 0x17, 0x13, 0x28, 0x1A, 0x17, 0x35, 0x28, 0x24, 0x2E, 0x21, 0x1D, 0x2F, 0x21, 0x1E, 
   0x30, 0x22, 0x1F, 0x40, 0x32, 0x2F, 0x2A, 0x1D, 0x1A, 0x25, 0x18, 0x13, 0x35, 0x29, 0x23, 0x3C, 
   0x30, 0x2A, 0x39, 0x2E, 0x27, 0x3C, 0x33, 0x2C, 0x2E, 0x26, 0x1F, 0x33, 0x2B, 0x25, 0x35, 0x2A, 
   0x26, 0x3A, 0x2F, 0x2A, 0x3B, 0x31, 0x2A, 0x45, 0x3A, 0x33, 0x6A, 0x60, 0x58, 0x63, 0x5A, 0x51, 
   0x46, 0x3B, 0x31, 0x4D, 0x40, 0x37, 0x34, 0x31, 0x31, 0x2F, 0x31, 0x30, 0x45, 0x51, 0x4F, 0x4F, 
   0x5F, 0x5C, 0x4D, 0x58, 0x57, 0x3F, 0x42, 0x43, 0x4A, 0x4A, 0x48, 0x5A, 0x5C, 0x57, 0x45, 0x49, 
   0x44, 0x39, 0x3D, 0x3A, 0x38, 0x3E, 0x3B, 0x2D, 0x34, 0x32, 0x3A, 0x3F, 0x3E, 0x55, 0x59, 0x5A, 
   0x76, 0x7A, 0x7B, 0x86, 0x87, 0x88, 0x5E, 0x5C, 0x5E, 0xAF, 0xAC, 0xAE, 0x5B, 0x56, 0x59, 0x41, 
   0x3F, 0x43, 0x56, 0x5A, 0x60, 0x65, 0x69, 0x6E, 0x92, 0x96, 0x9B, 0xD5, 0xDA, 0xDF, 0xE8, 0xEE, 
   0xF2, 0x92, 0x97, 0x9C, 0x2B, 0x33, 0x39, 0x40, 0x45, 0x4B, 0xE2, 0xDD, 0xE4, 0xFA, 0xEF, 0xF6, 
   0xFF, 0xFB, 0xFE, 0xE2, 0xE2, 0xE2, 0x6B, 0x70, 0x70, 0x4A, 0x4D, 0x51, 0x50, 0x55, 0x58, 0x4E, 
   0x57, 0x5A, 0x54, 0x60, 0x62, 0x4D, 0x5B, 0x5D, 0x48, 0x5A, 0x5B, 0x4C, 0x5D, 0x5F, 0x57, 0x64, 
   0x68, 0x7C, 0x86, 0x8A, 0x72, 0x7A, 0x7F, 0x47, 0x50, 0x55, 0x49, 0x57, 0x5A, 0x55, 0x66, 0x69, 
   0x53, 0x5D, 0x68, 0x3B, 0x44, 0x4E, 0x3A, 0x41, 0x4A, 0x3A, 0x3C, 0x44, 0x67, 0x66, 0x6D, 0x7F, 
   0x7C, 0x83, 0x56, 0x52, 0x56, 0xF0, 0xEA, 0xEB, 0xF9, 0xF0, 0xF2, 0xF9, 0xE7, 0xE8, 0xF8, 0xE6, 
   0xE5, 0xF9, 0xEA, 0xE7, 0xF9, 0xEA, 0xE8, 0xF9, 0xEB, 0xE5, 0xFA, 0xEA, 0xE4, 0xF8, 0xE6, 0xE2, 
   0xFB, 0xE8, 0xE7, 0xF0, 0xE1, 0xE2, 0xFE, 0xF4, 0xF5, 0xEF, 0xEB, 0xEC, 0x90, 0x8E, 0x8E, 0x68, 
   0x62, 0x63, 0xB8, 0xB2, 0xB3, 0xFE, 0xF9, 0xFA, 0xEB, 0xE2, 0xE4, 0xF2, 0xE7, 0xE7, 0xFE, 0xEF, 
   0xEE, 0xFB, 0xEC, 0xE9, 0xF9, 0xEA, 0xE8, 0xF8, 0xE9, 0xE7, 0xFA, 0xEB, 0xE9, 0xF6, 0xE7, 0xE5, 
   0xF3, 0xE4, 0xE1, 0xF6, 0xE8, 0xE5, 0xF8, 0xE9, 0xE6, 0xF4, 0xE4, 0xE1, 0xFA, 0xEC, 0xE9, 0xF6, 
   0xE7, 0xE4, 0xF3, 0xE4, 0xE1, 0xF9, 0xE6, 0xE3, 0xF8, 0xE5, 0xE2, 0xF9, 0xE6, 0xE3, 0xF3, 0xE1, 
   0xDE, 0xBE, 0xAA, 0xA7, 0xCC, 0xB9, 0xB6, 0xFF, 0xEC, 0xE9, 0xFA, 0xE3, 0xE1, 0xF5, 0xDD, 0xDB, 
   0xF7, 0xDF, 0xDD, 0xF1, 0xD9, 0xD7, 0xED, 0xD6, 0xD4, 0xEE, 0xD6, 0xD4, 0xF1, 0xDE, 0xDB, 0xF2, 
   0xDF, 0xDC, 0xEF, 0xDC, 0xD9, 0xF0, 0xDD, 0xDA, 0xF8, 0xE5, 0xE2, 0xF2, 0xE0, 0xDD, 0xD6, 0xC4, 
   0xBF, 0xF2, 0xE0, 0xD9, 0xF8, 0xE5, 0xE0, 0xF5, 0xE2, 0xDD, 0xEB, 0xD8, 0xD6, 0xF6, 0xE6, 0xE5, 
   0xF7, 0xE3, 0xE2, 0xF6, 0xE9, 0xE8, 0xAE, 0xA2, 0xA2, 0xB4, 0xAC, 0xAC, 0xF6, 0xF0, 0xF1, 0xF4, 
   0xE9, 0xEC, 0xF1, 0xE2, 0xE7, 0xE7, 0xD8, 0xDF, 0xA2, 0x98, 0x9D, 0xA5, 0x9D, 0xA1, 0x74, 0x6F, 
   0x71, 0xBD, 0xB7, 0xB7, 0xF7, 0xED, 0xEC, 0xEE, 0xDE, 0xDE, 0xF0, 0xDD, 0xD8, 0xF0, 0xDC, 0xD6, 
   0xEF, 0xDA, 0xD4, 0xF1, 0xD9, 0xD3, 0xF5, 0xD6, 0xD3, 0xF5, 0xD5, 0xD2, 0xF3, 0xD4, 0xD2, 0xF1, 
   0xD3, 0xD2, 0xF1, 0xD3, 0xD2, 0xEF, 0xD1, 0xD0, 0xEE, 0xD0, 0xCF, 0xED, 0xCF, 0xCE, 0xED, 0xCE, 
   0xCD, 0xEF, 0xD0, 0xC7, 0xED, 0xCE, 0xC5, 0xE6, 0xC7, 0xBE, 0xE8, 0xC9, 0xC0, 0xED, 0xCE, 0xC5, 
   0xEC, 0xCD, 0xC3, 0xEE, 0xCE, 0xC5, 0xEE, 0xCD, 0xC4, 0xEC, 0xCB, 0xC2, 0xF0, 0xCF, 0xC6, 0xF1, 
   0xCF, 0xC6, 0xEF, 0xCE, 0xC5, 0xEC, 0xCB, 0xC1, 0xED, 0xCB, 0xC4, 0xEE, 0xCC, 0xC6, 0xEE, 0xCC, 
   0xC6, 0xF0, 0xCE, 0xC8, 0xED, 0xCB, 0xC5, 0xEE, 0xCC, 0xC6, 0xEB, 0xC9, 0xC3, 0xE7, 0xC5, 0xBF, 
   0xE4, 0xC2, 0xBC, 0xE2, 0xC2, 0xBC, 0xE7, 0xC7, 0xC1, 0xED, 0xCF, 0xC8, 0xED, 0xD0, 0xC9, 0xEE, 
   0xD2, 0xC9, 0xEF, 0xD1, 0xC8, 0xED, 0xCE, 0xC5, 0xEF, 0xCE, 0xC5, 0xF5, 0xD2, 0xC9, 0xF0, 0xCB, 
   0xC3, 0xE8, 0xC3, 0xBC, 0xE6, 0xC1, 0xBB, 0xE5, 0xC1, 0xBB, 0xE2, 0xBF, 0xB9, 0xEA, 0xC8, 0xC2, 
   0x96, 0x76, 0x70, 0xB5, 0x98, 0x91, 0xFA, 0xDE, 0xD7, 0xF2, 0xCF, 0xC9, 0xEE, 0xCC, 0xC6, 0xED, 
   0xCB, 0xC5, 0xEC, 0xCA, 0xC4, 0xED, 0xCB, 0xC5, 0xE8, 0xC6, 0xC0, 0xE8, 0xC9, 0xC2, 0xA7, 0x88, 
   0x80, 0x76, 0x59, 0x4F, 0x78, 0x5D, 0x52, 0x7A, 0x61, 0x53, 0x73, 0x5C, 0x4C, 0x7E, 0x67, 0x5C, 
   0x67, 0x50, 0x49, 0x52, 0x3E, 0x38, 0x3C, 0x2E, 0x28, 0x45, 0x3B, 0x36, 0x3D, 0x37, 0x32, 0x39, 
   0x36, 0x31, 0x3A, 0x37, 0x34, 0x35, 0x31, 0x2D, 0x4B, 0x47, 0x42, 0x66, 0x60, 0x5A, 0x71, 0x6B, 
   0x63, 0x34, 0x2C, 0x24, 0x32, 0x2C, 0x25, 0x45, 0x41, 0x3C, 0x40, 0x3B, 0x36, 0x4B, 0x46, 0x41, 
   0x3E, 0x39, 0x34, 0x3E, 0x38, 0x33, 0x3D, 0x36, 0x31, 0x49, 0x40, 0x3C, 0x3B, 0x32, 0x2E, 0x3F, 
   0x33, 0x2F, 0x2C, 0x20, 0x1C, 0x3B, 0x2C, 0x29, 0x41, 0x31, 0x2E, 0x36, 0x2C, 0x28, 0x35, 0x2E, 
   0x2A, 0x2F, 0x26, 0x22, 0x33, 0x28, 0x24, 0x40, 0x34, 0x30, 0x4A, 0x3E, 0x3A, 0x5B, 0x4F, 0x4B, 
   0x39, 0x2E, 0x29, 0x21, 0x15, 0x11, 0x32, 0x26, 0x22, 0x26, 0x1A, 0x16, 0x2B, 0x1F, 0x1B, 0x2E, 
   0x22, 0x1E, 0x3E, 0x32, 0x2E, 0x2A, 0x1E, 0x1A, 0x33, 0x27, 0x23, 0x3D, 0x31, 0x2D, 0x36, 0x2A, 
   0x26, 0x2F, 0x23, 0x20, 0x21, 0x15, 0x11, 0x40, 0x35, 0x31, 0x2E, 0x22, 0x1E, 0x30, 0x24, 0x20, 
   0x33, 0x27, 0x23, 0x35, 0x29, 0x25, 0x33, 0x27, 0x23, 0x35, 0x29, 0x24, 0x3D, 0x31, 0x2B, 0x33, 
   0x27, 0x21, 0x39, 0x2F, 0x28, 0x3B, 0x32, 0x2B, 0x3C, 0x35, 0x2E, 0x40, 0x3A, 0x33, 0x36, 0x2D, 
   0x29, 0x39, 0x2F, 0x2A, 0x35, 0x2C, 0x25, 0x32, 0x2A, 0x22, 0x4F, 0x46, 0x3E, 0x40, 0x38, 0x2E, 
   0x46, 0x3B, 0x32, 0x46, 0x39, 0x30, 0x35, 0x2B, 0x2A, 0x39, 0x34, 0x33, 0x4A, 0x50, 0x50, 0x41, 
   0x4D, 0x4D, 0x4B, 0x52, 0x53, 0x66, 0x63, 0x65, 0x54, 0x4F, 0x4F, 0x45, 0x45, 0x41, 0x55, 0x56, 
   0x54, 0x41, 0x43, 0x43, 0x38, 0x3C, 0x3C, 0x37, 0x39, 0x3B, 0x45, 0x44, 0x47, 0x49, 0x4B, 0x4C, 
   0x44, 0x45, 0x47, 0x58, 0x5B, 0x5C, 0x5D, 0x60, 0x61, 0x5A, 0x5D, 0x5E, 0x40, 0x41, 0x43, 0x72, 
   0x73, 0x75, 0xB7, 0xB8, 0xBE, 0xBF, 0xC0, 0xC5, 0x8D, 0x8F, 0x94, 0xA0, 0xA4, 0xA9, 0x80, 0x83, 
   0x88, 0x37, 0x3B, 0x40, 0x3D, 0x42, 0x49, 0x5A, 0x5A, 0x62, 0xC1, 0xB7, 0xC0, 0xFF, 0xF6, 0xFC, 
   0xD4, 0xCC, 0xD0, 0x60, 0x63, 0x63, 0x49, 0x52, 0x51, 0x49, 0x4F, 0x52, 0x50, 0x57, 0x5A, 0x5C, 
   0x65, 0x68, 0x51, 0x5D, 0x5F, 0x4D, 0x5A, 0x5C, 0x5F, 0x6D, 0x6F, 0x53, 0x62, 0x64, 0x5B, 0x67, 
   0x6B, 0x84, 0x8C, 0x91, 0x52, 0x56, 0x5C, 0x4E, 0x55, 0x5A, 0x50, 0x5E, 0x61, 0x5A, 0x6C, 0x70, 
   0x4C, 0x55, 0x62, 0x2E, 0x34, 0x42, 0x5D, 0x62, 0x6C, 0x45, 0x46, 0x4F, 0x56, 0x52, 0x5B, 0x47, 
   0x40, 0x47, 0xC4, 0xBD, 0xC1, 0xFC, 0xF5, 0xF7, 0xF7, 0xEA, 0xEC, 0xFA, 0xE8, 0xE9, 0xFE, 0xEA, 
   0xE9, 0xFB, 0xEB, 0xE9, 0xF7, 0xE9, 0xE5, 0xF5, 0xE9, 0xE2, 0xF9, 0xEB, 0xE4, 0xFC, 0xEB, 0xE6, 
   0xEE, 0xDD, 0xDB, 0xF0, 0xE6, 0xE7, 0xE5, 0xE1, 0xE2, 0x84, 0x84, 0x84, 0x73, 0x75, 0x75, 0x94, 
   0x93, 0x93, 0xC6, 0xC3, 0xC3, 0xFB, 0xF9, 0xFA, 0xD3, 0xCE, 0xCF, 0xF3, 0xEB, 0xEC, 0xF1, 0xE3, 
   0xE1, 0xFB, 0xEC, 0xEA, 0xFA, 0xEB, 0xE9, 0xF9, 0xEA, 0xE8, 0xF9, 0xEA, 0xE8, 0xF7, 0xE8, 0xE6, 
   0xF7, 0xE9, 0xE6, 0xFB, 0xED, 0xEA, 0xED, 0xDF, 0xDB, 0xFA, 0xEE, 0xEA, 0xF1, 0xE3, 0xE0, 0xF9, 
   0xEB, 0xE8, 0xF4, 0xE6, 0xE3, 0xF9, 0xE7, 0xE3, 0xF6, 0xE3, 0xE0, 0xF9, 0xE6, 0xE3, 0xF6, 0xE3, 
   0xE0, 0xE2, 0xD1, 0xCE, 0xEF, 0xDD, 0xDA, 0xFC, 0xE6, 0xE3, 0xF9, 0xE1, 0xDF, 0xFD, 0xE5, 0xE2, 
   0xF1, 0xD8, 0xD6, 0xEA, 0xD1, 0xCF, 0xF1, 0xD8, 0xD6, 0xF6, 0xDD, 0xDB, 0xF1, 0xDE, 0xDB, 0xF1, 
   0xDE, 0xDB, 0xF6, 0xE3, 0xE1, 0xDE, 0xCB, 0xC8, 0xE3, 0xCF, 0xCD, 0xF4, 0xE2, 0xDF, 0xF8, 0xE7, 
   0xE2, 0xF9, 0xE7, 0xE0, 0xF8, 0xE5, 0xE0, 0xF5, 0xE2, 0xDC, 0xFC, 0xE8, 0xE6, 0xFA, 0xE6, 0xE5, 
   0xFC, 0xE9, 0xE8, 0xC1, 0xB6, 0xB4, 0x5D, 0x55, 0x54, 0x9D, 0x98, 0x98, 0xFC, 0xF8, 0xF9, 0xF8, 
   0xF0, 0xF2, 0xF9, 0xEC, 0xF1, 0xB7, 0xA8, 0xAF, 0x8A, 0x7D, 0x83, 0xA8, 0x9E, 0xA2, 0x6B, 0x64, 
   0x65, 0xDE, 0xD5, 0xD5, 0xF4, 0xE5, 0xE4, 0xF1, 0xDE, 0xDC, 0xF0, 0xDD, 0xD7, 0xEF, 0xDB, 0xD4, 
   0xF0, 0xD9, 0xD2, 0xF0, 0xD6, 0xD0, 0xF2, 0xD3, 0xD0, 0xF4, 0xD3, 0xD0, 0xF3, 0xD3, 0xD1, 0xF0, 
   0xD2, 0xD1, 0xEF, 0xD0, 0xCF, 0xEF, 0xD0, 0xCF, 0xEE, 0xCF, 0xCE, 0xED, 0xCE, 0xCE, 0xED, 0xCE, 
   0xCC, 0xEC, 0xCC, 0xC4, 0xEC, 0xCD, 0xC4, 0xEF, 0xD0, 0xC7, 0xEF, 0xD0, 0xC7, 0xED, 0xCE, 0xC5, 
   0xEC, 0xCD, 0xC4, 0xED, 0xCD, 0xC4, 0xEE, 0xCD, 0xC4, 0xEE, 0xCD, 0xC4, 0xEE, 0xCD, 0xC4, 0xE8, 
   0xC7, 0xBE, 0xEB, 0xCA, 0xC1, 0xE8, 0xC7, 0xBE, 0xE8, 0xC6, 0xC0, 0xF0, 0xCE, 0xC8, 0xF1, 0xCF, 
   0xC9, 0xEE, 0xCC, 0xC6, 0xE8, 0xC6, 0xC0, 0xEA, 0xC8, 0xC2, 0xE6, 0xC4, 0xBE, 0xDE, 0xBC, 0xB6, 
   0xE1, 0xBF, 0xB9, 0xE6, 0xC6, 0xC0, 0xEC, 0xCC, 0xC6, 0xEC, 0xCF, 0xC8, 0xE9, 0xCC, 0xC5, 0xEF, 
   0xD2, 0xC9, 0xEE, 0xCF, 0xC6, 0xED, 0xCD, 0xC4, 0xEE, 0xCD, 0xC4, 0xE7, 0xC5, 0xBC, 0xE7, 0xC2, 
   0xBA, 0xE8, 0xC3, 0xBB, 0xE8, 0xC3, 0xBE, 0xE6, 0xC3, 0xBC, 0xE3, 0xC1, 0xBB, 0xDF, 0xBE, 0xB7, 
   0xE0, 0xC1, 0xBB, 0xEE, 0xD0, 0xC9, 0xEB, 0xCB, 0xC5, 0xF0, 0xCE, 0xC8, 0xEB, 0xC9, 0xC3, 0xEB, 
   0xC9, 0xC3, 0xEC, 0xCA, 0xC4, 0xEB, 0xC9, 0xC3, 0xEB, 0xC9, 0xC3, 0xD3, 0xB5, 0xAC, 0x96, 0x77, 
   0x6E, 0x79, 0x5C, 0x52, 0x75, 0x5A, 0x4E, 0x77, 0x5D, 0x4F, 0x83, 0x6B, 0x5B, 0x79, 0x65, 0x58, 
   0x57, 0x46, 0x3F, 0x5C, 0x4C, 0x45, 0x60, 0x54, 0x4D, 0x3F, 0x36, 0x31, 0x3D, 0x36, 0x32, 0x3D, 
   0x38, 0x33, 0x3B, 0x39, 0x33, 0x36, 0x33, 0x2E, 0x39, 0x36, 0x2F, 0x51, 0x4D, 0x44, 0x59, 0x54, 
   0x4B, 0x56, 0x4F, 0x44, 0x47, 0x43, 0x3B, 0x39, 0x37, 0x32, 0x39, 0x36, 0x31, 0x34, 0x31, 0x2C, 
   0x47, 0x43, 0x3E, 0x3F, 0x3A, 0x35, 0x3B, 0x35, 0x30, 0x42, 0x3A, 0x36, 0x42, 0x38, 0x34, 0x35, 
   0x2A, 0x26, 0x28, 0x1B, 0x17, 0x44, 0x35, 0x32, 0x4F, 0x3F, 0x3C, 0x3C, 0x31, 0x2D, 0x36, 0x30, 
   0x2B, 0x33, 0x2A, 0x26, 0x3D, 0x33, 0x2F, 0x2D, 0x22, 0x1E, 0x33, 0x27, 0x23, 0x4B, 0x3F, 0x3B, 
   0x3B, 0x2F, 0x2B, 0x2A, 0x1E, 0x1A, 0x39, 0x2D, 0x29, 0x2F, 0x23, 0x1F, 0x37, 0x2B, 0x27, 0x31, 
   0x26, 0x22, 0x33, 0x27, 0x23, 0x27, 0x1C, 0x18, 0x35, 0x29, 0x25, 0x36, 0x2B, 0x27, 0x2F, 0x24, 
   0x20, 0x34, 0x28, 0x24, 0x21, 0x15, 0x11, 0x30, 0x24, 0x21, 0x34, 0x28, 0x24, 0x30, 0x24, 0x20, 
   0x32, 0x27, 0x23, 0x39, 0x2E, 0x2A, 0x37, 0x2B, 0x27, 0x28, 0x1D, 0x18, 0x44, 0x38, 0x32, 0x50, 
   0x45, 0x3E, 0x50, 0x47, 0x40, 0x39, 0x32, 0x2B, 0x49, 0x43, 0x3C, 0x49, 0x44, 0x3D, 0x2F, 0x26, 
   0x22, 0x2E, 0x25, 0x21, 0x3A, 0x32, 0x2B, 0x2F, 0x28, 0x20, 0x33, 0x2D, 0x23, 0x44, 0x3E, 0x34, 
   0x49, 0x40, 0x37, 0x3E, 0x31, 0x27, 0x96, 0x81, 0x80, 0x8B, 0x7E, 0x7D, 0x76, 0x74, 0x75, 0x66, 
   0x69, 0x6B, 0x45, 0x43, 0x46, 0x89, 0x7D, 0x80, 0x8C, 0x7E, 0x81, 0x62, 0x5A, 0x5A, 0x72, 0x6B, 
   0x6B, 0x65, 0x60, 0x61, 0x62, 0x5C, 0x5E, 0x6B, 0x63, 0x67, 0x60, 0x57, 0x5C, 0x6C, 0x67, 0x69, 
   0x46, 0x44, 0x45, 0x5A, 0x5D, 0x5E, 0x59, 0x5E, 0x5E, 0x28, 0x2E, 0x2E, 0x37, 0x3C, 0x3D, 0x81, 
   0x83, 0x85, 0x85, 0x83, 0x89, 0x5A, 0x59, 0x5F, 0x3F, 0x3F, 0x45, 0x82, 0x84, 0x8A, 0x3D, 0x3F, 
   0x45, 0x43, 0x46, 0x4C, 0x3E, 0x3F, 0x48, 0x43, 0x40, 0x4A, 0x6A, 0x62, 0x6B, 0xE4, 0xDA, 0xE1, 
   0x6E, 0x66, 0x6A, 0x47, 0x4D, 0x4B, 0x4A, 0x55, 0x53, 0x61, 0x6A, 0x6C, 0xB2, 0xBB, 0xBE, 0x5D, 
   0x66, 0x69, 0x56, 0x61, 0x63, 0x5B, 0x69, 0x6A, 0x60, 0x6E, 0x70, 0x5E, 0x6B, 0x6E, 0x6B, 0x75, 
   0x78, 0x8E, 0x90, 0x96, 0x4C, 0x4C, 0x52, 0x48, 0x4E, 0x52, 0x50, 0x5B, 0x5E, 0x59, 0x68, 0x6C, 
   0x3C, 0x44, 0x51, 0x70, 0x76, 0x83, 0x96, 0x99, 0xA4, 0x60, 0x5E, 0x67, 0xA2, 0x9D, 0xA3, 0xBA, 
   0xB3, 0xB9, 0xF9, 0xF1, 0xF5, 0xF2, 0xE6, 0xE8, 0xF7, 0xE7, 0xE9, 0xFA, 0xE8, 0xE8, 0xFB, 0xE7, 
   0xE5, 0xFB, 0xEA, 0xE7, 0xF6, 0xE8, 0xE5, 0xF6, 0xEB, 0xE4, 0xF9, 0xEB, 0xE4, 0xF3, 0xE3, 0xDF, 
   0xF6, 0xE8, 0xE6, 0xFF, 0xF7, 0xF7, 0xC8, 0xC6, 0xC7, 0x65, 0x68, 0x68, 0x85, 0x8B, 0x8A, 0x73, 
   0x75, 0x75, 0xDD, 0xDC, 0xDB, 0xE7, 0xE2, 0xE2, 0xCE, 0xC9, 0xCA, 0xF9, 0xF1, 0xF1, 0xEB, 0xDC, 
   0xDA, 0xFC, 0xEE, 0xEC, 0xF8, 0xEA, 0xE8, 0xF9, 0xEA, 0xE8, 0xF6, 0xE8, 0xE6, 0xFA, 0xEB, 0xE9, 
   0xFC, 0xF0, 0xED, 0xC1, 0xB8, 0xB4, 0xC0, 0xB5, 0xB1, 0xD6, 0xCD, 0xC9, 0xE0, 0xD4, 0xD0, 0xFA, 
   0xEE, 0xEA, 0xF0, 0xE4, 0xE0, 0xF4, 0xE2, 0xDE, 0xF9, 0xE6, 0xE3, 0xFA, 0xE6, 0xE3, 0xF9, 0xE5, 
   0xE3, 0xF9, 0xE9, 0xE6, 0xF9, 0xE7, 0xE4, 0xF7, 0xE0, 0xDF, 0xF7, 0xDF, 0xDD, 0xF2, 0xD8, 0xD6, 
   0xEB, 0xD1, 0xCF, 0xEE, 0xD5, 0xD3, 0xF6, 0xDC, 0xDA, 0xF5, 0xDC, 0xDA, 0xEE, 0xDB, 0xD7, 0xF2, 
   0xDF, 0xDC, 0xF2, 0xDF, 0xDB, 0xD5, 0xC2, 0xBF, 0xF2, 0xE1, 0xDE, 0xF1, 0xDE, 0xDB, 0xE7, 0xD4, 
   0xCF, 0xF7, 0xE5, 0xDE, 0xF6, 0xE4, 0xDF, 0xF6, 0xE3, 0xDE, 0xF8, 0xE4, 0xE2, 0xFC, 0xE8, 0xE8, 
   0xE8, 0xD5, 0xD4, 0xAA, 0xA0, 0x9D, 0x65, 0x5E, 0x5E, 0xC8, 0xC7, 0xC6, 0xFF, 0xFD, 0xFE, 0xF4, 
   0xED, 0xF0, 0xF0, 0xE4, 0xE7, 0xC2, 0xB3, 0xB9, 0xCE, 0xC0, 0xC6, 0xA5, 0x99, 0x9D, 0x83, 0x78, 
   0x7A, 0xF1, 0xE4, 0xE2, 0xF4, 0xE2, 0xE0, 0xF2, 0xDD, 0xDA, 0xF0, 0xDB, 0xD4, 0xF0, 0xDB, 0xD2, 
   0xF1, 0xD8, 0xD1, 0xEF, 0xD3, 0xCE, 0xEF, 0xD0, 0xCD, 0xF1, 0xD0, 0xCD, 0xF0, 0xD1, 0xCE, 0xF0, 
   0xD1, 0xD0, 0xEE, 0xCF, 0xCE, 0xEE, 0xCF, 0xCE, 0xEE, 0xCF, 0xCE, 0xED, 0xCF, 0xCD, 0xEC, 0xCE, 
   0xCC, 0xEE, 0xCF, 0xC7, 0xEE, 0xCF, 0xC6, 0xED, 0xCF, 0xC6, 0xEC, 0xCE, 0xC5, 0xEB, 0xCD, 0xC4, 
   0xEA, 0xCB, 0xC2, 0xEA, 0xCB, 0xC2, 0xEE, 0xCD, 0xC4, 0xF0, 0xCF, 0xC6, 0xED, 0xCC, 0xC3, 0xE9, 
   0xC8, 0xBF, 0xE8, 0xC7, 0xBE, 0xE9, 0xC9, 0xC0, 0xE8, 0xC6, 0xC0, 0xEA, 0xC9, 0xC3, 0xEB, 0xCA, 
   0xC4, 0xED, 0xCB, 0xC5, 0xEA, 0xC9, 0xC2, 0xEC, 0xCA, 0xC4, 0xE8, 0xC6, 0xC0, 0xE1, 0xC0, 0xBA, 
   0xE5, 0xC4, 0xBD, 0xEB, 0xCB, 0xC5, 0xED, 0xCE, 0xC8, 0xEB, 0xCE, 0xC7, 0xEA, 0xCE, 0xC6, 0xF0, 
   0xD2, 0xCA, 0xF2, 0xD3, 0xCA, 0xEE, 0xCE, 0xC5, 0xEE, 0xCB, 0xC3, 0xEB, 0xC8, 0xC0, 0xEB, 0xC7, 
   0xBF, 0xEC, 0xC7, 0xBF, 0xEC, 0xC6, 0xC1, 0xE4, 0xC0, 0xBA, 0xE3, 0xBF, 0xB9, 0xE7, 0xC5, 0xBF, 
   0xE7, 0xC7, 0xC1, 0xE3, 0xC4, 0xBE, 0xE4, 0xC5, 0xBE, 0xE2, 0xC1, 0xBB, 0xE6, 0xC4, 0xBE, 0xE9, 
   0xC7, 0xC0, 0xEB, 0xC9, 0xC2, 0xE7, 0xC5, 0xBE, 0xED, 0xCA, 0xC4, 0x9B, 0x7C, 0x72, 0x72, 0x53, 
   0x49, 0x7D, 0x60, 0x55, 0x75, 0x5B, 0x4D, 0x74, 0x5B, 0x4D, 0x78, 0x62, 0x51, 0x75, 0x62, 0x56, 
   0x77, 0x68, 0x61, 0x66, 0x59, 0x51, 0x5A, 0x4E, 0x48, 0x5D, 0x54, 0x4E, 0x4A, 0x43, 0x3F, 0x3D, 
   0x37, 0x32, 0x39, 0x37, 0x30, 0x3A, 0x38, 0x30, 0x43, 0x40, 0x37, 0x2F, 0x2A, 0x21, 0x2A, 0x25, 
   0x1B, 0x4A, 0x42, 0x38, 0x3F, 0x3B, 0x33, 0x46, 0x43, 0x3E, 0x41, 0x3D, 0x38, 0x46, 0x42, 0x3D, 
   0x61, 0x5D, 0x58, 0x3C, 0x37, 0x32, 0x33, 0x2C, 0x27, 0x42, 0x3A, 0x36, 0x52, 0x49, 0x45, 0x48, 
   0x3E, 0x39, 0x33, 0x27, 0x23, 0x40, 0x32, 0x2F, 0x51, 0x42, 0x3F, 0x41, 0x36, 0x32, 0x3D, 0x37, 
   0x32, 0x39, 0x33, 0x2F, 0x35, 0x2C, 0x28, 0x36, 0x2D, 0x29, 0x32, 0x27, 0x23, 0x3C, 0x30, 0x2C, 
   0x39, 0x2F, 0x2A, 0x36, 0x2C, 0x28, 0x3D, 0x33, 0x2F, 0x39, 0x2E, 0x2A, 0x35, 0x2A, 0x26, 0x44, 
   0x39, 0x35, 0x35, 0x2A, 0x26, 0x38, 0x2E, 0x2A, 0x59, 0x4F, 0x4B, 0x34, 0x2A, 0x26, 0x37, 0x2D, 
   0x29, 0x2B, 0x20, 0x1C, 0x26, 0x1C, 0x18, 0x39, 0x2D, 0x29, 0x60, 0x55, 0x51, 0x43, 0x38, 0x34, 
   0x3D, 0x32, 0x2D, 0x36, 0x2C, 0x27, 0x2A, 0x20, 0x1B, 0x30, 0x25, 0x20, 0x2D, 0x21, 0x1B, 0x44, 
   0x3A, 0x33, 0x73, 0x6A, 0x63, 0x45, 0x3D, 0x36, 0x37, 0x30, 0x29, 0x43, 0x3C, 0x35, 0x31, 0x28, 
   0x24, 0x2E, 0x25, 0x1F, 0x3E, 0x35, 0x2E, 0x3B, 0x33, 0x2B, 0x3D, 0x36, 0x2D, 0x49, 0x43, 0x39, 
   0x49, 0x3F, 0x36, 0x43, 0x35, 0x2C, 0xF1, 0xD7, 0xD7, 0xCF, 0xB7, 0xB7, 0xD0, 0xBD, 0xBD, 0x8B, 
   0x7A, 0x79, 0x61, 0x4E, 0x4D, 0x94, 0x7C, 0x7D, 0xAB, 0x90, 0x90, 0xBD, 0xA0, 0x9C, 0xD9, 0xBC, 
   0xB8, 0xB8, 0x9B, 0x97, 0x64, 0x48, 0x44, 0x8E, 0x72, 0x6E, 0xB2, 0x96, 0x92, 0xCB, 0xB0, 0xAC, 
   0xB2, 0x9E, 0x9C, 0x88, 0x7E, 0x7D, 0x62, 0x63, 0x62, 0x6A, 0x6D, 0x6E, 0x44, 0x47, 0x4B, 0x6C, 
   0x6A, 0x6F, 0x94, 0x8C, 0x92, 0x37, 0x31, 0x36, 0x49, 0x48, 0x4D, 0x41, 0x44, 0x48, 0x45, 0x47, 
   0x4B, 0x40, 0x41, 0x45, 0x4B, 0x4F, 0x58, 0x43, 0x45, 0x50, 0x61, 0x60, 0x69, 0x7F, 0x7C, 0x80, 
   0x53, 0x51, 0x52, 0x53, 0x56, 0x53, 0x50, 0x57, 0x52, 0x88, 0x94, 0x96, 0x79, 0x83, 0x86, 0x4A, 
   0x52, 0x56, 0x4D, 0x56, 0x59, 0x59, 0x67, 0x68, 0x54, 0x68, 0x69, 0x56, 0x64, 0x66, 0xBE, 0xB9, 
   0xBB, 0xC7, 0xB7, 0xB7, 0x97, 0x8D, 0x8A, 0xA5, 0xA7, 0xA4, 0x84, 0x8A, 0x8A, 0x55, 0x57, 0x5B, 
   0x47, 0x4A, 0x50, 0xB8, 0xB9, 0xBE, 0x88, 0x84, 0x88, 0xBD, 0xB5, 0xB9, 0xD2, 0xCC, 0xCE, 0xED, 
   0xE8, 0xE9, 0xF8, 0xEF, 0xF1, 0xF9, 0xE7, 0xEA, 0xF8, 0xE8, 0xEA, 0xFD, 0xEF, 0xED, 0xF9, 0xEA, 
   0xE5, 0xEF, 0xE7, 0xE0, 0xF0, 0xED, 0xE3, 0xFB, 0xEC, 0xE6, 0xEA, 0xD6, 0xD2, 0xEF, 0xDA, 0xD9, 
   0xFC, 0xEE, 0xEF, 0xFD, 0xF4, 0xF6, 0xD7, 0xD8, 0xDA, 0x6E, 0x71, 0x70, 0x7F, 0x7E, 0x7C, 0xD6, 
   0xD3, 0xD2, 0xF8, 0xF0, 0xEE, 0xEA, 0xE0, 0xDC, 0xF6, 0xEB, 0xE7, 0xF7, 0xE8, 0xE2, 0xF8, 0xED, 
   0xE9, 0xF8, 0xEC, 0xE8, 0xF6, 0xEA, 0xE6, 0xF7, 0xE9, 0xE6, 0xF9, 0xEB, 0xE9, 0xF9, 0xEA, 0xE7, 
   0xD6, 0xCD, 0xCA, 0xC1, 0xBB, 0xB8, 0x9C, 0x93, 0x90, 0xC2, 0xB8, 0xB5, 0xF9, 0xEE, 0xEB, 0xF2, 
   0xE5, 0xE3, 0xEE, 0xE0, 0xDE, 0xF7, 0xE2, 0xE0, 0xF8, 0xE3, 0xE1, 0xF7, 0xE2, 0xE0, 0xF6, 0xE1, 
   0xDF, 0xF6, 0xE0, 0xDE, 0xF4, 0xDF, 0xDD, 0xF4, 0xE0, 0xDD, 0xF3, 0xDE, 0xDC, 0xE7, 0xCB, 0xCA, 
   0xEF, 0xD0, 0xCF, 0xF8, 0xD9, 0xD8, 0xF5, 0xD8, 0xD7, 0xF5, 0xDB, 0xDA, 0xEE, 0xDB, 0xD4, 0xF4, 
   0xE4, 0xDD, 0xEB, 0xDA, 0xD3, 0xF9, 0xE9, 0xE3, 0xF5, 0xE3, 0xDC, 0xF5, 0xE3, 0xDD, 0xF5, 0xE4, 
   0xDD, 0xF5, 0xE5, 0xDF, 0xF6, 0xE5, 0xE2, 0xF6, 0xE3, 0xE0, 0xF9, 0xE5, 0xE5, 0xF9, 0xE3, 0xE5, 
   0xE6, 0xD0, 0xD2, 0xA3, 0x92, 0x96, 0xB0, 0xA7, 0xA9, 0xED, 0xEF, 0xEE, 0xB5, 0xB9, 0xB8, 0xEE, 
   0xEB, 0xEA, 0xF7, 0xEA, 0xE8, 0xF8, 0xEC, 0xEE, 0xA5, 0x9B, 0xA1, 0x6D, 0x60, 0x64, 0xC1, 0xB2, 
   0xB3, 0xFB, 0xEA, 0xE6, 0xF3, 0xDE, 0xD8, 0xF3, 0xDC, 0xD5, 0xF2, 0xD8, 0xD1, 0xF0, 0xD6, 0xCF, 
   0xF2, 0xD6, 0xCF, 0xF1, 0xD4, 0xCE, 0xF3, 0xD3, 0xCD, 0xF1, 0xD1, 0xCB, 0xEC, 0xCE, 0xC9, 0xEC, 
   0xCF, 0xCB, 0xED, 0xCF, 0xCC, 0xEB, 0xCE, 0xCA, 0xEB, 0xCE, 0xCA, 0xED, 0xD0, 0xCC, 0xEA, 0xCD, 
   0xC9, 0xEA, 0xCD, 0xC5, 0xEC, 0xCF, 0xC8, 0xEC, 0xCF, 0xC8, 0xE9, 0xCC, 0xC5, 0xE8, 0xCB, 0xC4, 
   0xE7, 0xCA, 0xC3, 0xE7, 0xCA, 0xC3, 0xEA, 0xCD, 0xC6, 0xED, 0xD0, 0xC9, 0xEA, 0xCC, 0xC5, 0xEC, 
   0xCF, 0xC8, 0xE8, 0xCB, 0xC4, 0xE4, 0xC7, 0xC0, 0xE7, 0xCA, 0xC3, 0xE8, 0xCB, 0xC4, 0xEA, 0xCD, 
   0xC6, 0xEC, 0xCF, 0xC8, 0xED, 0xD0, 0xC9, 0xED, 0xD0, 0xC9, 0xE9, 0xCC, 0xC4, 0xE9, 0xCC, 0xC3, 
   0xEA, 0xCD, 0xC4, 0xEB, 0xCE, 0xC5, 0xEB, 0xCE, 0xC5, 0xEC, 0xCF, 0xC6, 0xED, 0xD0, 0xC7, 0xEE, 
   0xCF, 0xC6, 0xEC, 0xCD, 0xC4, 0xE8, 0xC9, 0xC0, 0xE8, 0xC9, 0xC0, 0xE7, 0xC8, 0xBF, 0xE4, 0xC6, 
   0xBC, 0xE6, 0xC4, 0xBD, 0xEA, 0xBF, 0xBC, 0xE7, 0xBC, 0xB9, 0xD9, 0xB0, 0xAD, 0xCF, 0xA9, 0xA5, 
   0xE2, 0xBD, 0xB9, 0xE4, 0xBE, 0xBB, 0xDD, 0xBC, 0xB7, 0xD9, 0xBD, 0xB4, 0xE3, 0xC3, 0xBA, 0xE9, 
   0xC7, 0xBD, 0xEA, 0xC6, 0xBB, 0xEA, 0xC4, 0xB7, 0xEC, 0xC6, 0xBA, 0xAE, 0x8B, 0x7F, 0x7E, 0x5D, 
   0x50, 0x7E, 0x62, 0x56, 0x78, 0x5F, 0x54, 0x60, 0x4A, 0x3E, 0x49, 0x36, 0x2C, 0x5F, 0x4E, 0x45, 
   0x7E, 0x6F, 0x66, 0x78, 0x6B, 0x62, 0x48, 0x3D, 0x36, 0x64, 0x5C, 0x55, 0x7F, 0x77, 0x75, 0x70, 
   0x6B, 0x6A, 0x48, 0x46, 0x41, 0x4A, 0x46, 0x41, 0x3E, 0x39, 0x33, 0x3F, 0x37, 0x32, 0x44, 0x3A, 
   0x35, 0x51, 0x45, 0x42, 0x45, 0x3A, 0x34, 0x49, 0x42, 0x39, 0x52, 0x4B, 0x44, 0x4B, 0x43, 0x3E, 
   0x5F, 0x54, 0x52, 0x4D, 0x3F, 0x3D, 0x3E, 0x30, 0x2E, 0x53, 0x4F, 0x4A, 0x37, 0x32, 0x2E, 0x37, 
   0x32, 0x2D, 0x3F, 0x38, 0x33, 0x4F, 0x46, 0x42, 0x5B, 0x50, 0x4C, 0x4B, 0x43, 0x40, 0x31, 0x2C, 
   0x29, 0x2E, 0x29, 0x26, 0x33, 0x2C, 0x29, 0x3E, 0x36, 0x33, 0x31, 0x27, 0x25, 0x45, 0x3C, 0x39, 
   0x3A, 0x34, 0x2F, 0x2C, 0x26, 0x21, 0x38, 0x30, 0x2C, 0x35, 0x2B, 0x27, 0x2A, 0x1F, 0x1B, 0x48, 
   0x3C, 0x38, 0x35, 0x2A, 0x26, 0x37, 0x2F, 0x2B, 0x60, 0x56, 0x52, 0x51, 0x48, 0x44, 0x3A, 0x31, 
   0x2D, 0x45, 0x3C, 0x38, 0x40, 0x36, 0x32, 0x41, 0x33, 0x2D, 0x46, 0x39, 0x33, 0x41, 0x35, 0x2F, 
   0x4D, 0x42, 0x3C, 0x34, 0x2C, 0x26, 0x2A, 0x22, 0x1B, 0x47, 0x3D, 0x38, 0x58, 0x4B, 0x47, 0x48, 
   0x3C, 0x38, 0x43, 0x34, 0x2F, 0x41, 0x31, 0x2A, 0x4E, 0x3D, 0x36, 0x4D, 0x3D, 0x35, 0x45, 0x39, 
   0x32, 0x4A, 0x3D, 0x38, 0x4D, 0x42, 0x3B, 0x57, 0x4D, 0x46, 0x42, 0x3A, 0x33, 0x2F, 0x28, 0x21, 
   0x64, 0x56, 0x4E, 0x62, 0x4D, 0x45, 0xE7, 0xCC, 0xCB, 0xD6, 0xBD, 0xBC, 0xF0, 0xDB, 0xD9, 0xC3, 
   0xB1, 0xAF, 0x61, 0x4C, 0x4A, 0x9F, 0x86, 0x85, 0xB3, 0x97, 0x95, 0xB6, 0x97, 0x94, 0xD3, 0xB4, 
   0xB1, 0xD0, 0xB1, 0xAE, 0x9B, 0x7C, 0x79, 0xA4, 0x85, 0x82, 0xC4, 0xA5, 0xA2, 0xD0, 0xB2, 0xAF, 
   0xDF, 0xC7, 0xC3, 0xDC, 0xD1, 0xCD, 0xED, 0xED, 0xEC, 0xAB, 0xAB, 0xAC, 0x55, 0x55, 0x59, 0x86, 
   0x84, 0x89, 0xF8, 0xF2, 0xF7, 0x8C, 0x8A, 0x8E, 0x42, 0x46, 0x49, 0x38, 0x3E, 0x41, 0x3A, 0x3F, 
   0x42, 0x46, 0x49, 0x4D, 0x3C, 0x44, 0x4D, 0x43, 0x4E, 0x56, 0x8A, 0x8F, 0x96, 0x38, 0x39, 0x3C, 
   0x52, 0x54, 0x54, 0x6B, 0x70, 0x6E, 0x6B, 0x73, 0x6E, 0x4A, 0x55, 0x57, 0x45, 0x4E, 0x51, 0x6E, 
   0x75, 0x78, 0x64, 0x6C, 0x6F, 0x56, 0x62, 0x64, 0x43, 0x56, 0x57, 0x7A, 0x87, 0x88, 0xD1, 0xCA, 
   0xCD, 0xC3, 0xB1, 0xB2, 0xBC, 0xB0, 0xAD, 0xEB, 0xEB, 0xEA, 0x88, 0x8B, 0x8B, 0x44, 0x44, 0x48, 
   0x5E, 0x62, 0x67, 0x42, 0x41, 0x46, 0x9A, 0x95, 0x99, 0xD8, 0xD1, 0xD4, 0xDF, 0xD7, 0xD8, 0xF1, 
   0xEB, 0xEB, 0xF0, 0xE7, 0xE9, 0xFC, 0xF0, 0xF3, 0xFA, 0xEE, 0xEF, 0xF7, 0xE7, 0xE5, 0xF4, 0xE5, 
   0xE0, 0xED, 0xE3, 0xDB, 0xED, 0xE6, 0xDE, 0xF0, 0xE3, 0xDD, 0xF9, 0xEC, 0xE8, 0xFC, 0xEC, 0xEA, 
   0xFB, 0xEC, 0xED, 0xFF, 0xF6, 0xF8, 0xCC, 0xCB, 0xCD, 0x68, 0x66, 0x67, 0xC1, 0xBE, 0xBD, 0xFC, 
   0xF8, 0xF7, 0xF2, 0xEA, 0xE6, 0xF7, 0xED, 0xE9, 0xF8, 0xEC, 0xE7, 0xFA, 0xED, 0xE7, 0xF9, 0xEE, 
   0xEA, 0xF7, 0xEC, 0xE8, 0xF6, 0xE9, 0xE5, 0xF8, 0xEA, 0xE6, 0xFB, 0xEB, 0xE8, 0xF9, 0xE9, 0xE6, 
   0xCA, 0xBD, 0xBA, 0x9B, 0x93, 0x90, 0x6D, 0x63, 0x60, 0xCD, 0xC2, 0xBF, 0xF8, 0xEB, 0xE9, 0xEE, 
   0xE1, 0xDF, 0xF1, 0xE3, 0xE1, 0xF4, 0xDF, 0xDD, 0xF4, 0xDF, 0xDD, 0xF3, 0xDE, 0xDC, 0xF4, 0xDF, 
   0xDD, 0xF4, 0xE0, 0xDE, 0xF3, 0xDE, 0xDC, 0xF0, 0xDC, 0xD9, 0xEC, 0xD7, 0xD5, 0xEF, 0xD3, 0xD2, 
   0xF7, 0xD9, 0xD8, 0xF5, 0xD6, 0xD5, 0xF1, 0xD5, 0xD4, 0xF2, 0xDA, 0xD7, 0xF2, 0xE1, 0xDA, 0xF1, 
   0xE3, 0xDB, 0xE3, 0xD1, 0xCA, 0xE0, 0xCF, 0xC8, 0xF0, 0xDE, 0xD6, 0xF9, 0xE7, 0xE0, 0xF7, 0xE5, 
   0xDE, 0xF6, 0xE3, 0xDF, 0xF2, 0xE1, 0xDE, 0xF6, 0xE5, 0xE2, 0xF4, 0xE4, 0xE3, 0xF2, 0xE0, 0xE2, 
   0xF8, 0xE6, 0xE9, 0xFA, 0xEE, 0xF4, 0xD5, 0xCE, 0xD3, 0x7B, 0x7C, 0x7D, 0x8C, 0x90, 0x90, 0xD2, 
   0xD1, 0xD0, 0xFF, 0xF8, 0xF7, 0xD2, 0xC3, 0xC7, 0x5A, 0x4D, 0x53, 0xA3, 0x93, 0x96, 0xF3, 0xE6, 
   0xE7, 0xF0, 0xDC, 0xD9, 0xF3, 0xDC, 0xD6, 0xF3, 0xDB, 0xD5, 0xF1, 0xD7, 0xD0, 0xEF, 0xD5, 0xCE, 
   0xF1, 0xD6, 0xCF, 0xF0, 0xD3, 0xCD, 0xF0, 0xD0, 0xCA, 0xEF, 0xCF, 0xC9, 0xED, 0xCD, 0xC9, 0xEB, 
   0xCC, 0xC9, 0xEC, 0xCD, 0xCA, 0xEA, 0xCB, 0xC8, 0xE9, 0xCA, 0xC7, 0xE9, 0xCB, 0xC8, 0xEA, 0xCB, 
   0xC8, 0xEA, 0xCB, 0xC5, 0xEA, 0xCB, 0xC5, 0xEC, 0xCD, 0xC7, 0xED, 0xCE, 0xC8, 0xEB, 0xCB, 0xC5, 
   0xEB, 0xCB, 0xC5, 0xEB, 0xCC, 0xC5, 0xEB, 0xCB, 0xC5, 0xEE, 0xCE, 0xC8, 0xEB, 0xCC, 0xC5, 0xEB, 
   0xCC, 0xC6, 0xEC, 0xCC, 0xC6, 0xE9, 0xCA, 0xC3, 0xEC, 0xCD, 0xC7, 0xED, 0xCE, 0xC8, 0xEF, 0xCF, 
   0xC9, 0xEF, 0xD0, 0xC9, 0xEC, 0xCD, 0xC7, 0xEC, 0xCD, 0xC7, 0xEF, 0xCF, 0xC8, 0xEE, 0xCF, 0xC6, 
   0xED, 0xCE, 0xC5, 0xEC, 0xCE, 0xC5, 0xEE, 0xD0, 0xC7, 0xEF, 0xD0, 0xC7, 0xEC, 0xCD, 0xC4, 0xED, 
   0xCD, 0xC3, 0xEB, 0xCA, 0xC1, 0xE4, 0xC4, 0xBB, 0xE1, 0xC0, 0xB7, 0xE0, 0xC0, 0xB7, 0xE3, 0xC3, 
   0xBA, 0xE4, 0xC1, 0xB9, 0xE0, 0xB5, 0xB2, 0xE1, 0xB7, 0xB4, 0xD4, 0xAB, 0xA8, 0xD0, 0xA9, 0xA6, 
   0xE8, 0xC1, 0xBD, 0xE6, 0xC0, 0xBC, 0xE0, 0xBE, 0xB9, 0xDA, 0xBC, 0xB3, 0xE2, 0xC2, 0xB9, 0xE7, 
   0xC6, 0xBC, 0xF0, 0xCE, 0xC3, 0xF2, 0xCF, 0xC2, 0xF0, 0xCD, 0xC0, 0xA5, 0x82, 0x75, 0x7C, 0x5A, 
   0x4D, 0x80, 0x62, 0x56, 0x87, 0x6C, 0x61, 0x8B, 0x71, 0x67, 0x6F, 0x58, 0x4F, 0x5F, 0x4B, 0x41, 
   0x58, 0x47, 0x3E, 0x67, 0x57, 0x4E, 0x6A, 0x5D, 0x56, 0x60, 0x57, 0x51, 0x4B, 0x44, 0x41, 0x5F, 
   0x58, 0x56, 0x52, 0x50, 0x4A, 0x53, 0x4F, 0x4A, 0x41, 0x3C, 0x37, 0x42, 0x39, 0x35, 0x51, 0x46, 
   0x42, 0x7E, 0x72, 0x6E, 0x7F, 0x73, 0x6E, 0x5A, 0x52, 0x49, 0x35, 0x2E, 0x27, 0x30, 0x29, 0x23, 
   0x31, 0x26, 0x23, 0x53, 0x47, 0x45, 0x43, 0x36, 0x34, 0x48, 0x43, 0x3E, 0x40, 0x3B, 0x36, 0x37, 
   0x32, 0x2D, 0x3E, 0x37, 0x32, 0x2E, 0x25, 0x21, 0x60, 0x56, 0x52, 0x5A, 0x52, 0x4E, 0x3A, 0x34, 
   0x31, 0x32, 0x2C, 0x29, 0x2F, 0x28, 0x25, 0x35, 0x2D, 0x2A, 0x34, 0x2B, 0x28, 0x3D, 0x34, 0x31, 
   0x32, 0x2C, 0x27, 0x30, 0x2A, 0x25, 0x40, 0x37, 0x33, 0x26, 0x1C, 0x18, 0x29, 0x1E, 0x1A, 0x31, 
   0x25, 0x21, 0x27, 0x1D, 0x19, 0x41, 0x38, 0x34, 0x48, 0x3F, 0x3B, 0x59, 0x51, 0x4D, 0x42, 0x39, 
   0x35, 0x50, 0x47, 0x43, 0x5D, 0x53, 0x4F, 0x3E, 0x30, 0x2A, 0x36, 0x29, 0x23, 0x30, 0x24, 0x1E, 
   0x38, 0x2E, 0x28, 0x35, 0x2C, 0x25, 0x2C, 0x25, 0x1D, 0x30, 0x26, 0x21, 0x35, 0x29, 0x25, 0x25, 
   0x19, 0x15, 0x50, 0x44, 0x3D, 0x37, 0x2A, 0x22, 0x48, 0x3A, 0x31, 0x56, 0x46, 0x3D, 0x62, 0x56, 
   0x50, 0x46, 0x3A, 0x34, 0x40, 0x34, 0x2E, 0x58, 0x4D, 0x47, 0x35, 0x2C, 0x24, 0x1B, 0x11, 0x0B, 
   0x41, 0x31, 0x29, 0x63, 0x4F, 0x44, 0xD1, 0xB3, 0xAE, 0xE4, 0xC8, 0xC3, 0xED, 0xD5, 0xD0, 0xC6, 
   0xB1, 0xAB, 0xBA, 0xA2, 0x9C, 0xE7, 0xCC, 0xC7, 0xC1, 0xA3, 0x9E, 0xB6, 0x94, 0x90, 0xC5, 0xA3, 
   0xA0, 0xD4, 0xB3, 0xAF, 0xCA, 0xA8, 0xA5, 0xD1, 0xAF, 0xAC, 0xC3, 0xA1, 0x9E, 0xD3, 0xB1, 0xAE, 
   0xEB, 0xCD, 0xCA, 0xF4, 0xE3, 0xE0, 0xEB, 0xE1, 0xE0, 0xC6, 0xC0, 0xC1, 0x62, 0x5E, 0x61, 0x70, 
   0x6C, 0x71, 0xD4, 0xD4, 0xD8, 0xD9, 0xDE, 0xE1, 0x56, 0x60, 0x62, 0x49, 0x54, 0x56, 0x3F, 0x49, 
   0x4B, 0x4B, 0x52, 0x55, 0x31, 0x3E, 0x45, 0x54, 0x61, 0x6A, 0x82, 0x89, 0x8F, 0x4A, 0x4D, 0x52, 
   0x96, 0x97, 0x99, 0xCD, 0xD0, 0xD0, 0xDD, 0xE2, 0xE0, 0x66, 0x6E, 0x70, 0x51, 0x56, 0x5A, 0x59, 
   0x5C, 0x60, 0xBD, 0xC1, 0xC4, 0x71, 0x7A, 0x7D, 0x57, 0x67, 0x68, 0x8F, 0x97, 0x9A, 0xB6, 0xAC, 
   0xAF, 0xD4, 0xC0, 0xC0, 0x8E, 0x7D, 0x7C, 0x78, 0x73, 0x71, 0x65, 0x65, 0x66, 0x72, 0x6E, 0x73, 
   0x50, 0x53, 0x58, 0x32, 0x30, 0x35, 0x6A, 0x62, 0x67, 0xD9, 0xCE, 0xD1, 0xE8, 0xDD, 0xDF, 0xF2, 
   0xEA, 0xEB, 0xEB, 0xE2, 0xE3, 0xEB, 0xDF, 0xE0, 0xB3, 0xA2, 0xA4, 0xE5, 0xD2, 0xD0, 0xF6, 0xE5, 
   0xE1, 0xF5, 0xE8, 0xE3, 0xEF, 0xE4, 0xDE, 0xF7, 0xEE, 0xEA, 0xF0, 0xE7, 0xE5, 0xF2, 0xE6, 0xE5, 
   0xFC, 0xF1, 0xF2, 0xEF, 0xE5, 0xE6, 0x88, 0x83, 0x85, 0x99, 0x93, 0x94, 0xF2, 0xEB, 0xEB, 0xEF, 
   0xE8, 0xE7, 0xF5, 0xEE, 0xEA, 0xF7, 0xED, 0xEA, 0xF5, 0xEC, 0xE6, 0xF5, 0xEC, 0xE6, 0xF7, 0xEB, 
   0xE7, 0xF7, 0xEB, 0xE7, 0xF7, 0xEA, 0xE6, 0xF5, 0xE7, 0xE3, 0xF7, 0xE6, 0xE3, 0xFA, 0xE9, 0xE6, 
   0xE9, 0xDA, 0xD8, 0xAF, 0xA5, 0xA3, 0xAA, 0xA0, 0x9D, 0xE8, 0xDB, 0xDA, 0xF0, 0xE2, 0xE0, 0xF2, 
   0xE3, 0xE2, 0xF0, 0xDF, 0xDE, 0xF2, 0xDB, 0xD9, 0xF5, 0xDF, 0xDC, 0xF6, 0xE0, 0xDE, 0xF7, 0xE1, 
   0xDF, 0xF7, 0xE1, 0xDF, 0xF5, 0xDE, 0xDC, 0xF1, 0xDA, 0xD8, 0xF1, 0xD9, 0xD7, 0xF6, 0xDB, 0xDA, 
   0xF5, 0xD7, 0xD6, 0xF7, 0xDA, 0xD9, 0xEF, 0xD4, 0xD2, 0xE7, 0xD1, 0xCE, 0xE9, 0xD7, 0xD2, 0xCE, 
   0xBC, 0xB6, 0xB4, 0xA1, 0x9B, 0xDD, 0xCB, 0xC5, 0xF7, 0xE5, 0xDF, 0xF3, 0xE1, 0xDB, 0xF3, 0xE0, 
   0xDA, 0xF4, 0xE1, 0xDC, 0xF5, 0xE3, 0xDF, 0xF7, 0xE7, 0xE4, 0xF9, 0xED, 0xEC, 0xE3, 0xD9, 0xDA, 
   0x96, 0x8E, 0x8E, 0x7E, 0x72, 0x79, 0x71, 0x6A, 0x71, 0x9A, 0x9C, 0x9F, 0xB3, 0xB6, 0xB8, 0x94, 
   0x91, 0x92, 0xC9, 0xBF, 0xC0, 0xD8, 0xC9, 0xCD, 0xE4, 0xD4, 0xD9, 0xF7, 0xE4, 0xE6, 0xF1, 0xDB, 
   0xDB, 0xF2, 0xDA, 0xD7, 0xF2, 0xD7, 0xD2, 0xF3, 0xD7, 0xD1, 0xF0, 0xD6, 0xCE, 0xED, 0xD3, 0xCC, 
   0xEF, 0xD3, 0xCC, 0xEF, 0xD2, 0xCB, 0xEE, 0xCE, 0xC8, 0xEE, 0xCE, 0xC8, 0xED, 0xCE, 0xC8, 0xEB, 
   0xCD, 0xC8, 0xEC, 0xCE, 0xC9, 0xEB, 0xCD, 0xC8, 0xE8, 0xCA, 0xC5, 0xE4, 0xC6, 0xC2, 0xE5, 0xC6, 
   0xC2, 0xE9, 0xCA, 0xC4, 0xE8, 0xC8, 0xC2, 0xEA, 0xCA, 0xC4, 0xEC, 0xCC, 0xC6, 0xEA, 0xCA, 0xC4, 
   0xEA, 0xCA, 0xC4, 0xEA, 0xCA, 0xC4, 0xE9, 0xC9, 0xC3, 0xEB, 0xCB, 0xC5, 0xEA, 0xCA, 0xC4, 0xE8, 
   0xC8, 0xC2, 0xE9, 0xC9, 0xC3, 0xEA, 0xCA, 0xC4, 0xEA, 0xCA, 0xC4, 0xEB, 0xCB, 0xC5, 0xEB, 0xCC, 
   0xC6, 0xEA, 0xCB, 0xC5, 0xEC, 0xCD, 0xC7, 0xEF, 0xCF, 0xC9, 0xED, 0xCE, 0xC6, 0xEC, 0xCD, 0xC4, 
   0xEA, 0xCB, 0xC2, 0xE9, 0xCA, 0xC1, 0xEB, 0xCC, 0xC3, 0xED, 0xCE, 0xC5, 0xEC, 0xCD, 0xC4, 0xEC, 
   0xC9, 0xC1, 0xE8, 0xC4, 0xBC, 0xDF, 0xBC, 0xB3, 0xDA, 0xB7, 0xAE, 0xDB, 0xB7, 0xAF, 0xDF, 0xBC, 
   0xB3, 0xDE, 0xB8, 0xB1, 0xDE, 0xB4, 0xB0, 0xDA, 0xB1, 0xAD, 0xDE, 0xB7, 0xB3, 0xE9, 0xC4, 0xBF, 
   0xEA, 0xC5, 0xC0, 0xE0, 0xBC, 0xB7, 0xDE, 0xBC, 0xB6, 0xDF, 0xBD, 0xB4, 0xE3, 0xC3, 0xBA, 0xEB, 
   0xCA, 0xC0, 0xD2, 0xB2, 0xA7, 0xAA, 0x8B, 0x7E, 0xA3, 0x83, 0x76, 0x92, 0x71, 0x64, 0x80, 0x60, 
   0x53, 0x82, 0x62, 0x57, 0x82, 0x65, 0x5A, 0x8A, 0x6D, 0x64, 0x90, 0x72, 0x6B, 0x7B, 0x5F, 0x58, 
   0x6B, 0x52, 0x4B, 0x75, 0x5E, 0x57, 0x61, 0x51, 0x4A, 0x5D, 0x50, 0x4B, 0x65, 0x5C, 0x58, 0x4F, 
   0x49, 0x45, 0x4C, 0x49, 0x44, 0x40, 0x3B, 0x36, 0x50, 0x4A, 0x45, 0x66, 0x5D, 0x59, 0x52, 0x47, 
   0x43, 0x49, 0x3E, 0x3A, 0x49, 0x3F, 0x39, 0x4F, 0x46, 0x3D, 0x4C, 0x43, 0x3C, 0x43, 0x3A, 0x34, 
   0x34, 0x29, 0x27, 0x42, 0x36, 0x34, 0x5A, 0x4F, 0x4C, 0x44, 0x3B, 0x37, 0x4E, 0x46, 0x41, 0x47, 
   0x3F, 0x3B, 0x36, 0x2F, 0x2A, 0x37, 0x30, 0x2B, 0x46, 0x3E, 0x3A, 0x5C, 0x54, 0x51, 0x49, 0x41, 
   0x3E, 0x3B, 0x33, 0x30, 0x3B, 0x33, 0x30, 0x35, 0x2D, 0x2A, 0x38, 0x2F, 0x2C, 0x3B, 0x32, 0x30, 
   0x3B, 0x35, 0x30, 0x33, 0x2B, 0x27, 0x3E, 0x34, 0x30, 0x2B, 0x20, 0x1C, 0x2F, 0x23, 0x1F, 0x34, 
   0x28, 0x24, 0x34, 0x29, 0x25, 0x33, 0x28, 0x24, 0x50, 0x45, 0x41, 0x46, 0x3C, 0x38, 0x4B, 0x40, 
   0x3C, 0x59, 0x4E, 0x4A, 0x3E, 0x34, 0x30, 0x49, 0x3A, 0x34, 0x3C, 0x2F, 0x28, 0x35, 0x29, 0x21, 
   0x37, 0x2C, 0x24, 0x2A, 0x20, 0x18, 0x30, 0x27, 0x1F, 0x33, 0x2B, 0x24, 0x37, 0x2E, 0x2A, 0x37, 
   0x2E, 0x28, 0x4A, 0x40, 0x39, 0x3B, 0x30, 0x28, 0x38, 0x2B, 0x21, 0x6C, 0x5E, 0x56, 0x65, 0x59, 
   0x52, 0x38, 0x2D, 0x25, 0x41, 0x36, 0x2E, 0x41, 0x36, 0x2F, 0x35, 0x2B, 0x23, 0x15, 0x0C, 0x04, 
   0x28, 0x19, 0x0F, 0x6A, 0x56, 0x4B, 0xC0, 0x9E, 0x97, 0xE8, 0xC8, 0xC0, 0xE5, 0xCB, 0xC3, 0xD2, 
   0xBA, 0xB0, 0xD7, 0xBC, 0xB3, 0xE9, 0xCA, 0xC2, 0xCD, 0xA9, 0xA3, 0xC1, 0x9C, 0x98, 0xC4, 0x9F, 
   0x9B, 0xD7, 0xB2, 0xAE, 0xCC, 0xA8, 0xA4, 0xCF, 0xAA, 0xA6, 0xD0, 0xAB, 0xA7, 0xDF, 0xBA, 0xB7, 
   0xF0, 0xD0, 0xCC, 0xF1, 0xDB, 0xD9, 0xF5, 0xE4, 0xE4, 0xD3, 0xC9, 0xCA, 0x4C, 0x43, 0x46, 0x4F, 
   0x4A, 0x4E, 0x7B, 0x81, 0x84, 0x8A, 0x93, 0x96, 0x5B, 0x69, 0x6B, 0x75, 0x86, 0x87, 0x54, 0x61, 
   0x63, 0x50, 0x59, 0x5C, 0x3E, 0x4B, 0x51, 0x3E, 0x4A, 0x52, 0x47, 0x4B, 0x52, 0x91, 0x91, 0x95, 
   0xFB, 0xF9, 0xFB, 0xEF, 0xEB, 0xED, 0xE4, 0xE2, 0xE2, 0x84, 0x87, 0x8B, 0x56, 0x58, 0x5B, 0x81, 
   0x80, 0x85, 0xD7, 0xD8, 0xDC, 0x81, 0x86, 0x89, 0x58, 0x63, 0x65, 0x5C, 0x60, 0x63, 0xB4, 0xA7, 
   0xAB, 0xE1, 0xCC, 0xCD, 0x97, 0x83, 0x82, 0x89, 0x82, 0x80, 0x75, 0x72, 0x73, 0xC2, 0xBA, 0xBF, 
   0x63, 0x64, 0x68, 0x2B, 0x28, 0x2C, 0xB3, 0xA9, 0xAD, 0xF9, 0xED, 0xEF, 0xED, 0xE1, 0xE2, 0xBD, 
   0xB3, 0xB3, 0xA1, 0x99, 0x98, 0xC6, 0xBB, 0xB9, 0xC7, 0xBB, 0xBA, 0xF8, 0xE8, 0xE6, 0xF8, 0xE5, 
   0xE2, 0xFA, 0xE9, 0xE6, 0xF8, 0xEA, 0xE5, 0xF0, 0xEB, 0xE9, 0xC7, 0xC0, 0xBE, 0xF5, 0xEC, 0xEC, 
   0xE0, 0xD6, 0xD8, 0xA6, 0x99, 0x9B, 0xB2, 0xA9, 0xAB, 0xF9, 0xF3, 0xF4, 0xF7, 0xED, 0xED, 0xF7, 
   0xEE, 0xEE, 0xF9, 0xF3, 0xF0, 0xE7, 0xE0, 0xDB, 0xE8, 0xE1, 0xDB, 0xF8, 0xF3, 0xEB, 0xF5, 0xEA, 
   0xE6, 0xF5, 0xE8, 0xE5, 0xF4, 0xE6, 0xE3, 0xF4, 0xE4, 0xE2, 0xF5, 0xE3, 0xE0, 0xFA, 0xE7, 0xE4, 
   0xE8, 0xD7, 0xD4, 0xD5, 0xC7, 0xC5, 0xF7, 0xEB, 0xE8, 0xF4, 0xE5, 0xE3, 0xF3, 0xE2, 0xE0, 0xEF, 
   0xDD, 0xDA, 0xF6, 0xE3, 0xE1, 0xF9, 0xE2, 0xE0, 0xF7, 0xE0, 0xDE, 0xF3, 0xDC, 0xDA, 0xF1, 0xDA, 
   0xD8, 0xF2, 0xDB, 0xD9, 0xF0, 0xD9, 0xD7, 0xED, 0xD5, 0xD3, 0xF5, 0xDB, 0xDA, 0xF9, 0xDC, 0xDB, 
   0xF9, 0xDA, 0xDA, 0xF6, 0xD8, 0xD7, 0xE7, 0xCE, 0xCC, 0xCC, 0xB6, 0xB4, 0xBF, 0xAB, 0xA6, 0xDA, 
   0xC9, 0xC4, 0xEF, 0xDF, 0xDA, 0xF5, 0xE3, 0xDE, 0xEE, 0xDB, 0xD6, 0xF3, 0xE0, 0xDB, 0xF4, 0xDF, 
   0xDA, 0xF7, 0xE2, 0xDD, 0xF3, 0xE0, 0xDD, 0xF8, 0xEB, 0xE8, 0xE0, 0xD7, 0xD6, 0xC6, 0xC2, 0xC1, 
   0xC9, 0xC8, 0xC7, 0xC0, 0xB7, 0xC0, 0xC9, 0xC4, 0xCB, 0xF0, 0xF1, 0xF5, 0xBD, 0xBE, 0xC2, 0xB2, 
   0xAF, 0xB1, 0xA4, 0x9A, 0x9C, 0xF3, 0xE2, 0xE5, 0xF9, 0xE0, 0xE4, 0xF6, 0xDD, 0xDF, 0xF1, 0xD7, 
   0xD6, 0xF2, 0xD6, 0xD3, 0xF0, 0xD2, 0xCE, 0xF4, 0xD5, 0xD0, 0xEF, 0xD5, 0xCE, 0xEC, 0xD2, 0xCB, 
   0xEF, 0xD3, 0xCC, 0xED, 0xD1, 0xCA, 0xEE, 0xCE, 0xC8, 0xED, 0xCD, 0xC7, 0xEA, 0xCB, 0xC5, 0xE9, 
   0xCA, 0xC5, 0xEA, 0xCB, 0xC6, 0xE9, 0xCA, 0xC5, 0xE9, 0xCA, 0xC5, 0xE8, 0xC9, 0xC4, 0xE7, 0xC8, 
   0xC3, 0xE8, 0xC7, 0xC1, 0xE8, 0xC7, 0xC1, 0xEA, 0xC9, 0xC3, 0xE9, 0xC8, 0xC2, 0xE9, 0xC8, 0xC2, 
   0xE8, 0xC7, 0xC1, 0xE5, 0xC4, 0xBE, 0xE6, 0xC5, 0xBF, 0xE6, 0xC5, 0xBF, 0xE9, 0xC8, 0xC2, 0xE8, 
   0xC7, 0xC1, 0xEA, 0xC9, 0xC3, 0xEC, 0xCB, 0xC5, 0xEC, 0xCB, 0xC5, 0xEC, 0xCB, 0xC5, 0xEB, 0xCA, 
   0xC4, 0xEB, 0xCA, 0xC4, 0xED, 0xCC, 0xC6, 0xEE, 0xCD, 0xC7, 0xE9, 0xC9, 0xC2, 0xE8, 0xC8, 0xBF, 
   0xE8, 0xC8, 0xBF, 0xE8, 0xC8, 0xBF, 0xEB, 0xCB, 0xC2, 0xE8, 0xC8, 0xBF, 0xE8, 0xC8, 0xBF, 0xEC, 
   0xC8, 0xC0, 0xEA, 0xC4, 0xBC, 0xE1, 0xBB, 0xB3, 0xDF, 0xB8, 0xB0, 0xDF, 0xB9, 0xB1, 0xDE, 0xB7, 
   0xAF, 0xDC, 0xB4, 0xAD, 0xDD, 0xB3, 0xAF, 0xDE, 0xB7, 0xB2, 0xE1, 0xBB, 0xB6, 0xE6, 0xC1, 0xBB, 
   0xE2, 0xBF, 0xB9, 0xE6, 0xC4, 0xBE, 0xDC, 0xB8, 0xB2, 0xE2, 0xBC, 0xB5, 0xE2, 0xBF, 0xB6, 0xAD, 
   0x8C, 0x82, 0x76, 0x58, 0x4C, 0x72, 0x56, 0x48, 0x74, 0x59, 0x4C, 0x7E, 0x5F, 0x52, 0x84, 0x65, 
   0x58, 0x86, 0x66, 0x5A, 0x87, 0x67, 0x5C, 0x8D, 0x6B, 0x62, 0x8B, 0x69, 0x62, 0x94, 0x73, 0x6D, 
   0x88, 0x69, 0x62, 0x64, 0x49, 0x42, 0x60, 0x4C, 0x45, 0x5F, 0x4F, 0x49, 0x54, 0x4A, 0x44, 0x5B, 
   0x53, 0x4C, 0x47, 0x40, 0x3C, 0x4F, 0x48, 0x44, 0x66, 0x5E, 0x5A, 0x51, 0x48, 0x44, 0x41, 0x37, 
   0x33, 0x41, 0x36, 0x32, 0x2F, 0x26, 0x1F, 0x3A, 0x31, 0x29, 0x3F, 0x34, 0x2E, 0x37, 0x2C, 0x26, 
   0x3D, 0x31, 0x2F, 0x37, 0x2D, 0x2B, 0x45, 0x3E, 0x3B, 0x53, 0x47, 0x43, 0x75, 0x6A, 0x66, 0x55, 
   0x4C, 0x48, 0x3C, 0x33, 0x2F, 0x3C, 0x36, 0x31, 0x47, 0x42, 0x3D, 0x67, 0x5F, 0x5B, 0x41, 0x36, 
   0x34, 0x75, 0x6B, 0x68, 0x65, 0x5C, 0x59, 0x33, 0x2A, 0x27, 0x38, 0x30, 0x2D, 0x2B, 0x24, 0x20, 
   0x3B, 0x33, 0x2E, 0x36, 0x2C, 0x28, 0x39, 0x2E, 0x2A, 0x39, 0x2D, 0x29, 0x31, 0x25, 0x21, 0x38, 
   0x2A, 0x27, 0x3C, 0x2F, 0x2C, 0x32, 0x27, 0x23, 0x23, 0x18, 0x14, 0x2C, 0x21, 0x1D, 0x32, 0x27, 
   0x23, 0x3D, 0x32, 0x2E, 0x47, 0x3D, 0x39, 0x5F, 0x4F, 0x48, 0x59, 0x4B, 0x43, 0x58, 0x4C, 0x44, 
   0x4C, 0x40, 0x38, 0x28, 0x1D, 0x15, 0x30, 0x26, 0x1E, 0x3B, 0x33, 0x2C, 0x2D, 0x26, 0x21, 0x2B, 
   0x23, 0x1C, 0x3C, 0x34, 0x2C, 0x54, 0x4A, 0x41, 0x39, 0x2E, 0x24, 0x45, 0x3A, 0x30, 0x69, 0x5E, 
   0x56, 0x67, 0x5C, 0x54, 0x5E, 0x52, 0x4A, 0x4D, 0x40, 0x38, 0x3A, 0x2D, 0x26, 0x15, 0x08, 0x02, 
   0x2D, 0x1D, 0x13, 0x57, 0x44, 0x37, 0xF8, 0xD4, 0xCB, 0xFB, 0xDA, 0xD1, 0xE9, 0xCB, 0xC1, 0xD9, 
   0xBF, 0xB3, 0xCB, 0xAC, 0xA3, 0xE0, 0xBE, 0xB5, 0xD7, 0xB2, 0xAB, 0xC4, 0x9E, 0x9A, 0xC9, 0xA2, 
   0x9F, 0xD5, 0xAF, 0xAA, 0xCF, 0xA9, 0xA5, 0xD4, 0xAE, 0xAA, 0xDA, 0xB4, 0xB0, 0xE8, 0xC1, 0xBD, 
   0xFA, 0xD7, 0xD3, 0xDA, 0xBF, 0xBC, 0x94, 0x7D, 0x7D, 0x9D, 0x8D, 0x8D, 0x95, 0x88, 0x8B, 0x94, 
   0x8E, 0x91, 0x40, 0x49, 0x4C, 0x45, 0x51, 0x53, 0x50, 0x5F, 0x61, 0x34, 0x46, 0x47, 0x3B, 0x48, 
   0x4A, 0x4B, 0x55, 0x57, 0x52, 0x5A, 0x60, 0x50, 0x54, 0x5B, 0x54, 0x51, 0x57, 0xA8, 0x9E, 0xA5, 
   0xFA, 0xEE, 0xF3, 0xF2, 0xE6, 0xE9, 0xDC, 0xD2, 0xD4, 0x65, 0x66, 0x6A, 0x6A, 0x69, 0x6E, 0xD4, 
   0xCF, 0xD5, 0xDF, 0xDC, 0xE1, 0xA3, 0xA6, 0xAA, 0x48, 0x50, 0x54, 0x77, 0x79, 0x7D, 0xCD, 0xBE, 
   0xC2, 0xD7, 0xC0, 0xC3, 0x7F, 0x69, 0x68, 0xC5, 0xBC, 0xBB, 0xE7, 0xE2, 0xE3, 0xA7, 0x9D, 0xA4, 
   0x47, 0x45, 0x49, 0x5F, 0x5A, 0x5E, 0xEC, 0xE4, 0xE7, 0xF4, 0xE6, 0xE8, 0xF0, 0xE4, 0xE4, 0xB7, 
   0xAC, 0xAB, 0xA9, 0xA3, 0xA1, 0xDC, 0xD3, 0xD0, 0xFA, 0xEE, 0xEB, 0xF6, 0xE5, 0xE4, 0xF8, 0xE4, 
   0xE2, 0xFA, 0xE7, 0xE4, 0xFF, 0xF2, 0xF0, 0xCD, 0xCA, 0xCA, 0xD5, 0xD2, 0xD1, 0xCC, 0xC6, 0xC6, 
   0x8E, 0x84, 0x85, 0xBD, 0xB0, 0xB2, 0xF9, 0xEC, 0xEE, 0xFE, 0xF3, 0xF4, 0xF3, 0xE8, 0xE8, 0xF7, 
   0xEE, 0xEE, 0xB7, 0xB1, 0xAD, 0xC8, 0xC3, 0xBE, 0xEE, 0xEB, 0xE4, 0xEA, 0xE7, 0xDF, 0xF7, 0xEA, 
   0xE7, 0xF6, 0xE7, 0xE4, 0xF4, 0xE5, 0xE2, 0xF6, 0xE5, 0xE2, 0xF6, 0xE3, 0xE0, 0xF1, 0xDD, 0xDA, 
   0xF2, 0xE1, 0xDE, 0xFC, 0xEC, 0xE8, 0xF5, 0xE4, 0xE1, 0xF7, 0xE5, 0xE1, 0xF5, 0xE2, 0xDE, 0xF4, 
   0xE0, 0xDD, 0xF7, 0xE1, 0xDE, 0xF6, 0xDF, 0xDD, 0xF6, 0xDE, 0xDC, 0xF2, 0xDB, 0xD9, 0xF1, 0xD9, 
   0xD7, 0xF1, 0xDA, 0xD8, 0xED, 0xD6, 0xD4, 0xF1, 0xD8, 0xD6, 0xF8, 0xDD, 0xDC, 0xF7, 0xD9, 0xD8, 
   0xF6, 0xD7, 0xD6, 0xF2, 0xD6, 0xD5, 0xF1, 0xD8, 0xD7, 0xEE, 0xDC, 0xD9, 0xF0, 0xDE, 0xDA, 0xE5, 
   0xD3, 0xCF, 0xED, 0xDA, 0xD6, 0xF2, 0xDF, 0xDB, 0xF2, 0xDF, 0xDA, 0xEE, 0xDB, 0xD7, 0xF3, 0xDC, 
   0xD8, 0xF2, 0xD9, 0xD5, 0xF2, 0xDE, 0xDB, 0xF3, 0xEA, 0xE7, 0x8E, 0x89, 0x87, 0x63, 0x63, 0x62, 
   0x79, 0x7D, 0x7B, 0xC1, 0xBB, 0xC3, 0xBD, 0xB9, 0xC1, 0x8F, 0x8E, 0x94, 0xBD, 0xBB, 0xBF, 0x8D, 
   0x86, 0x89, 0xD1, 0xC5, 0xC8, 0xF1, 0xDB, 0xDE, 0xF8, 0xDA, 0xDC, 0xF3, 0xD6, 0xD6, 0xF2, 0xD5, 
   0xD4, 0xF3, 0xD3, 0xD1, 0xF4, 0xD4, 0xD0, 0xF3, 0xD3, 0xCD, 0xEE, 0xD3, 0xCC, 0xEC, 0xD2, 0xCB, 
   0xEE, 0xD2, 0xCB, 0xEE, 0xD1, 0xCA, 0xF0, 0xD1, 0xCA, 0xED, 0xCD, 0xC7, 0xE7, 0xC7, 0xC2, 0xE7, 
   0xC7, 0xC1, 0xE8, 0xC8, 0xC3, 0xE1, 0xC0, 0xBB, 0xDC, 0xBC, 0xB6, 0xE9, 0xCA, 0xC4, 0xEB, 0xCB, 
   0xC6, 0xE8, 0xC6, 0xC0, 0xEA, 0xC8, 0xC2, 0xEA, 0xC8, 0xC2, 0xE8, 0xC6, 0xC0, 0xE9, 0xC7, 0xC1, 
   0xE6, 0xC4, 0xBE, 0xE6, 0xC4, 0xBE, 0xEA, 0xC8, 0xC2, 0xE9, 0xC7, 0xC1, 0xEB, 0xC9, 0xC3, 0xEB, 
   0xC9, 0xC3, 0xEB, 0xC9, 0xC3, 0xED, 0xCB, 0xC5, 0xED, 0xCB, 0xC5, 0xED, 0xCA, 0xC4, 0xEB, 0xC9, 
   0xC3, 0xEB, 0xC9, 0xC3, 0xEB, 0xC9, 0xC3, 0xEA, 0xC8, 0xC2, 0xE9, 0xC7, 0xC1, 0xE7, 0xC6, 0xBD, 
   0xEA, 0xC8, 0xBF, 0xEC, 0xCB, 0xC2, 0xED, 0xCB, 0xC2, 0xE7, 0xC6, 0xBD, 0xE5, 0xC4, 0xBB, 0xE8, 
   0xC3, 0xBB, 0xE6, 0xBE, 0xB6, 0xE2, 0xBB, 0xB3, 0xDA, 0xB2, 0xAA, 0xD9, 0xB2, 0xAA, 0xDE, 0xB7, 
   0xAF, 0xDD, 0xB6, 0xAF, 0xE0, 0xB9, 0xB3, 0xE0, 0xBA, 0xB4, 0xE1, 0xBB, 0xB5, 0xE0, 0xBC, 0xB5, 
   0xE5, 0xC2, 0xBC, 0xE3, 0xC2, 0xBB, 0xE5, 0xC2, 0xBC, 0xE9, 0xC3, 0xBC, 0xDF, 0xBC, 0xB3, 0x8D, 
   0x6E, 0x64, 0x77, 0x5C, 0x4F, 0x7D, 0x65, 0x56, 0x79, 0x62, 0x53, 0x7F, 0x62, 0x55, 0x80, 0x63, 
   0x56, 0x84, 0x64, 0x59, 0x88, 0x67, 0x5D, 0x8D, 0x6A, 0x62, 0x91, 0x6C, 0x65, 0x95, 0x71, 0x6B, 
   0x96, 0x73, 0x6D, 0x8C, 0x6E, 0x67, 0x6C, 0x54, 0x4E, 0x6B, 0x59, 0x52, 0x68, 0x5B, 0x53, 0x66, 
   0x5B, 0x53, 0x61, 0x56, 0x53, 0x52, 0x48, 0x44, 0x48, 0x3E, 0x3A, 0x3E, 0x34, 0x30, 0x4F, 0x43, 
   0x3F, 0x5B, 0x51, 0x4D, 0x43, 0x3C, 0x35, 0x34, 0x2B, 0x22, 0x48, 0x3B, 0x35, 0x4B, 0x3D, 0x39, 
   0x3F, 0x32, 0x2F, 0x36, 0x2F, 0x2C, 0x42, 0x3E, 0x3B, 0x54, 0x48, 0x44, 0x59, 0x4D, 0x49, 0x59, 
   0x4E, 0x4A, 0x6A, 0x61, 0x5D, 0x4F, 0x49, 0x44, 0x33, 0x2E, 0x2A, 0x64, 0x5C, 0x57, 0x65, 0x58, 
   0x53, 0x7B, 0x70, 0x6B, 0x51, 0x47, 0x42, 0x3B, 0x32, 0x2D, 0x3B, 0x34, 0x2F, 0x3D, 0x37, 0x32, 
   0x4A, 0x41, 0x3D, 0x35, 0x2B, 0x27, 0x38, 0x2C, 0x28, 0x41, 0x35, 0x31, 0x49, 0x3C, 0x39, 0x3D, 
   0x2D, 0x2A, 0x36, 0x29, 0x25, 0x2D, 0x23, 0x1F, 0x22, 0x17, 0x13, 0x25, 0x1A, 0x16, 0x33, 0x28, 
   0x24, 0x2D, 0x22, 0x1E, 0x4F, 0x43, 0x3F, 0x6E, 0x5E, 0x57, 0x72, 0x63, 0x5B, 0x6D, 0x60, 0x58, 
   0x44, 0x38, 0x30, 0x2B, 0x20, 0x18, 0x45, 0x3B, 0x32, 0x3E, 0x35, 0x2D, 0x29, 0x23, 0x1C, 0x28, 
   0x20, 0x18, 0x37, 0x30, 0x26, 0x4E, 0x44, 0x3A, 0x46, 0x3C, 0x30, 0x40, 0x35, 0x29, 0x65, 0x59, 
   0x51, 0x4A, 0x3E, 0x36, 0x3E, 0x31, 0x28, 0x44, 0x35, 0x2D, 0x29, 0x18, 0x11, 0x25, 0x14, 0x0E, 
   0x3F, 0x2D, 0x23, 0x53, 0x3F, 0x32, 0xF2, 0xCE, 0xC4, 0xF7, 0xD3, 0xC9, 0xEC, 0xCD, 0xC2, 0xE1, 
   0xC5, 0xBA, 0xCD, 0xAE, 0xA3, 0xDB, 0xB8, 0xAE, 0xDA, 0xB6, 0xAD, 0xCD, 0xA7, 0xA2, 0xCE, 0xA8, 
   0xA3, 0xD4, 0xAE, 0xA8, 0xD5, 0xAF, 0xAA, 0xD9, 0xB3, 0xAE, 0xE0, 0xBA, 0xB4, 0xE5, 0xBF, 0xBB, 
   0xF1, 0xCC, 0xC7, 0xD2, 0xB0, 0xAE, 0x86, 0x6B, 0x6B, 0xC2, 0xAF, 0xAF, 0xFC, 0xEF, 0xF1, 0xCF, 
   0xC8, 0xCB, 0x77, 0x80, 0x82, 0x52, 0x5E, 0x60, 0x42, 0x4F, 0x52, 0x38, 0x46, 0x48, 0x4C, 0x56, 
   0x58, 0x48, 0x4E, 0x51, 0x5C, 0x5C, 0x61, 0x5A, 0x53, 0x5A, 0x7F, 0x72, 0x79, 0xF0, 0xE3, 0xE9, 
   0xF7, 0xE4, 0xEC, 0xF3, 0xE2, 0xE7, 0xE6, 0xD9, 0xDD, 0x6D, 0x6F, 0x73, 0xA9, 0xA7, 0xAC, 0xF0, 
   0xEB, 0xF1, 0xF1, 0xEE, 0xF2, 0xB6, 0xB8, 0xBC, 0x68, 0x70, 0x73, 0x82, 0x84, 0x88, 0x9E, 0x8E, 
   0x92, 0xDE, 0xC3, 0xC5, 0xD5, 0xBF, 0xBE, 0xFC, 0xF5, 0xF3, 0xE9, 0xE2, 0xE5, 0xCC, 0xC1, 0xC7, 
   0x59, 0x54, 0x57, 0xAB, 0xA6, 0xA9, 0xFD, 0xF4, 0xF7, 0xED, 0xDD, 0xDE, 0xEB, 0xDC, 0xDC, 0xF3, 
   0xE6, 0xE4, 0xE9, 0xE1, 0xDE, 0xEE, 0xE6, 0xE2, 0xEF, 0xE3, 0xDF, 0xF4, 0xE2, 0xE1, 0xFA, 0xE9, 
   0xE8, 0xFB, 0xE9, 0xE9, 0xF3, 0xE3, 0xE3, 0xA0, 0x9E, 0xA1, 0xA0, 0x9F, 0xA2, 0x84, 0x82, 0x84, 
   0xAC, 0xA7, 0xA8, 0xEF, 0xE8, 0xE9, 0xFA, 0xEE, 0xEF, 0xF3, 0xE7, 0xE7, 0xF8, 0xEF, 0xEF, 0xE9, 
   0xE3, 0xE3, 0xA8, 0xA1, 0x9E, 0xF0, 0xEC, 0xE7, 0xE4, 0xE1, 0xDB, 0xE6, 0xE2, 0xDB, 0xF6, 0xE8, 
   0xE5, 0xF1, 0xE3, 0xE0, 0xF6, 0xE6, 0xE3, 0xF8, 0xE5, 0xE2, 0xFB, 0xE7, 0xE4, 0xF5, 0xE0, 0xDE, 
   0xF4, 0xE1, 0xDD, 0xF4, 0xE2, 0xDC, 0xF7, 0xE3, 0xDE, 0xF3, 0xDE, 0xD9, 0xEE, 0xD8, 0xD3, 0xF9, 
   0xE1, 0xDC, 0xF4, 0xDB, 0xD7, 0xF4, 0xDB, 0xD9, 0xF5, 0xDC, 0xDA, 0xF2, 0xD9, 0xD7, 0xF2, 0xD9, 
   0xD7, 0xF2, 0xD9, 0xD7, 0xEF, 0xD7, 0xD5, 0xF0, 0xD5, 0xD4, 0xF4, 0xD8, 0xD7, 0xF8, 0xD9, 0xD8, 
   0xEF, 0xD0, 0xD0, 0xD2, 0xB7, 0xB5, 0xE9, 0xD2, 0xD0, 0xE5, 0xD5, 0xD2, 0xC8, 0xB6, 0xB3, 0xCC, 
   0xB9, 0xB6, 0xEF, 0xDC, 0xD9, 0xF2, 0xDF, 0xDD, 0xF8, 0xE6, 0xE4, 0xF4, 0xE1, 0xDE, 0xF3, 0xDB, 
   0xD8, 0xF7, 0xDC, 0xD8, 0xF0, 0xDC, 0xDA, 0xBE, 0xAE, 0xAB, 0x65, 0x60, 0x5E, 0x64, 0x65, 0x63, 
   0x61, 0x65, 0x63, 0x77, 0x73, 0x78, 0x59, 0x54, 0x5B, 0x6E, 0x69, 0x6F, 0xC0, 0xBA, 0xBD, 0xD5, 
   0xC9, 0xCC, 0xF0, 0xE1, 0xE3, 0xF0, 0xD8, 0xD8, 0xF4, 0xD5, 0xD3, 0xF2, 0xD4, 0xD3, 0xF3, 0xD4, 
   0xD2, 0xF3, 0xD3, 0xD0, 0xF3, 0xD2, 0xCF, 0xF2, 0xD2, 0xCD, 0xED, 0xD3, 0xCC, 0xEC, 0xD1, 0xCA, 
   0xED, 0xD1, 0xCA, 0xEE, 0xD1, 0xCA, 0xED, 0xCE, 0xC8, 0xEB, 0xCB, 0xC5, 0xE8, 0xC8, 0xC2, 0xE8, 
   0xC8, 0xC2, 0xEB, 0xCB, 0xC4, 0xDD, 0xBD, 0xB6, 0xD5, 0xB5, 0xAE, 0xE7, 0xC7, 0xC0, 0xE8, 0xC7, 
   0xC1, 0xEA, 0xC8, 0xC2, 0xE9, 0xC7, 0xC1, 0xE9, 0xC6, 0xC0, 0xE9, 0xC7, 0xC1, 0xE9, 0xC6, 0xC0, 
   0xE6, 0xC4, 0xBE, 0xE7, 0xC5, 0xBF, 0xE7, 0xC5, 0xBF, 0xE9, 0xC7, 0xC1, 0xEB, 0xC9, 0xC3, 0xEC, 
   0xCA, 0xC4, 0xEA, 0xC8, 0xC2, 0xE9, 0xC7, 0xC1, 0xED, 0xCB, 0xC5, 0xEC, 0xCA, 0xC4, 0xEB, 0xC9, 
   0xC3, 0xE7, 0xC4, 0xBE, 0xE6, 0xC4, 0xBE, 0xE8, 0xC5, 0xBF, 0xE8, 0xC6, 0xBF, 0xE7, 0xC6, 0xBD, 
   0xE9, 0xC7, 0xBE, 0xEB, 0xC9, 0xC0, 0xE9, 0xC8, 0xBF, 0xE5, 0xC4, 0xBB, 0xE2, 0xC1, 0xB8, 0xE3, 
   0xBE, 0xB6, 0xE2, 0xBB, 0xB3, 0xE4, 0xBE, 0xB6, 0xE5, 0xBE, 0xB6, 0xDC, 0xB5, 0xAD, 0xDC, 0xB6, 
   0xAE, 0xDE, 0xB8, 0xB0, 0xDD, 0xB8, 0xB0, 0xD7, 0xB3, 0xAA, 0xD9, 0xB6, 0xAD, 0xE7, 0xC4, 0xBC, 
   0xD2, 0xB0, 0xA7, 0xC3, 0xA3, 0x9A, 0xC0, 0x9F, 0x97, 0xBE, 0x9A, 0x93, 0xD4, 0xB4, 0xAB, 0xA8, 
   0x8B, 0x80, 0x79, 0x5E, 0x52, 0x7B, 0x64, 0x54, 0x7C, 0x64, 0x56, 0x7D, 0x63, 0x55, 0x7E, 0x62, 
   0x55, 0x82, 0x65, 0x59, 0x87, 0x67, 0x5D, 0x8A, 0x6A, 0x60, 0x92, 0x70, 0x68, 0x93, 0x6F, 0x6A, 
   0x94, 0x70, 0x6B, 0x8F, 0x70, 0x6A, 0x89, 0x70, 0x68, 0x77, 0x63, 0x5A, 0x5C, 0x4C, 0x43, 0x52, 
   0x45, 0x3B, 0x5D, 0x51, 0x4D, 0x3E, 0x33, 0x2F, 0x3F, 0x33, 0x2F, 0x47, 0x3C, 0x38, 0x4A, 0x3F, 
   0x3B, 0x4C, 0x42, 0x3F, 0x58, 0x51, 0x4A, 0x3D, 0x34, 0x2B, 0x49, 0x3B, 0x35, 0x62, 0x52, 0x4D, 
   0x42, 0x35, 0x32, 0x37, 0x31, 0x2F, 0x43, 0x43, 0x3E, 0x5B, 0x50, 0x4C, 0x52, 0x46, 0x42, 0x89, 
   0x7E, 0x7A, 0xA7, 0x9C, 0x98, 0x53, 0x49, 0x45, 0x35, 0x2C, 0x29, 0x4E, 0x42, 0x3D, 0x56, 0x47, 
   0x41, 0x4B, 0x3E, 0x38, 0x42, 0x37, 0x30, 0x44, 0x3B, 0x34, 0x43, 0x3C, 0x35, 0x3C, 0x37, 0x30, 
   0x45, 0x3C, 0x37, 0x58, 0x4D, 0x49, 0x54, 0x48, 0x44, 0x49, 0x3D, 0x39, 0x48, 0x38, 0x35, 0x3A, 
   0x29, 0x26, 0x38, 0x29, 0x25, 0x3E, 0x32, 0x2F, 0x57, 0x4A, 0x46, 0x33, 0x26, 0x22, 0x32, 0x25, 
   0x22, 0x36, 0x2A, 0x26, 0x3D, 0x30, 0x2C, 0x3C, 0x2B, 0x22, 0x60, 0x50, 0x46, 0x4A, 0x3C, 0x33, 
   0x46, 0x3A, 0x31, 0x3A, 0x30, 0x26, 0x45, 0x3A, 0x2F, 0x45, 0x3B, 0x33, 0x2E, 0x26, 0x1E, 0x35, 
   0x2E, 0x25, 0x45, 0x3B, 0x31, 0x3A, 0x2F, 0x24, 0x34, 0x29, 0x1C, 0x3D, 0x30, 0x24, 0x66, 0x59, 
   0x4F, 0x5E, 0x51, 0x47, 0x45, 0x37, 0x2E, 0x44, 0x33, 0x2A, 0x2D, 0x1A, 0x11, 0x31, 0x1C, 0x14, 
   0x55, 0x40, 0x36, 0x73, 0x5F, 0x52, 0xF2, 0xCD, 0xC5, 0xF1, 0xCD, 0xC5, 0xEB, 0xCC, 0xC3, 0xDF, 
   0xC2, 0xB9, 0xD1, 0xB2, 0xA9, 0xD6, 0xB2, 0xAA, 0xDD, 0xB8, 0xB0, 0xD0, 0xAB, 0xA3, 0xCF, 0xAA, 
   0xA2, 0xD6, 0xB1, 0xA9, 0xD7, 0xB2, 0xAA, 0xDC, 0xB8, 0xAF, 0xE2, 0xBD, 0xB4, 0xEB, 0xC5, 0xBF, 
   0xE8, 0xC4, 0xBE, 0xE9, 0xC6, 0xC2, 0xF6, 0xDA, 0xD8, 0xF6, 0xE4, 0xE4, 0xF6, 0xE9, 0xEB, 0xD4, 
   0xCF, 0xD1, 0x7B, 0x80, 0x83, 0x45, 0x4C, 0x4F, 0x48, 0x51, 0x54, 0x52, 0x5B, 0x5E, 0x50, 0x53, 
   0x57, 0x38, 0x38, 0x3C, 0x4B, 0x48, 0x4C, 0x6C, 0x64, 0x69, 0xBC, 0xB1, 0xB6, 0xF8, 0xEC, 0xF2, 
   0xF1, 0xE6, 0xEB, 0xDE, 0xD2, 0xD8, 0xBF, 0xB6, 0xBC, 0x9C, 0x9E, 0xA2, 0xF6, 0xF6, 0xF9, 0xD4, 
   0xD1, 0xD5, 0xB5, 0xB4, 0xB8, 0x83, 0x87, 0x8B, 0x43, 0x4C, 0x4F, 0x6D, 0x70, 0x74, 0xC4, 0xB5, 
   0xB9, 0xD5, 0xBA, 0xBC, 0xED, 0xDC, 0xDA, 0xF9, 0xF1, 0xF0, 0xF3, 0xEF, 0xF0, 0xFC, 0xF3, 0xF9, 
   0x8B, 0x87, 0x88, 0xE3, 0xDA, 0xDC, 0xF9, 0xEB, 0xED, 0xF3, 0xE1, 0xE2, 0xF6, 0xE5, 0xE4, 0xF1, 
   0xE2, 0xE1, 0xEF, 0xE4, 0xE0, 0xF2, 0xE9, 0xE2, 0xF5, 0xE7, 0xE3, 0xFB, 0xE8, 0xE6, 0xFA, 0xEA, 
   0xEA, 0xF6, 0xE6, 0xE7, 0xF3, 0xE6, 0xE7, 0xC0, 0xBC, 0xC0, 0x94, 0x94, 0x98, 0xB9, 0xBB, 0xBD, 
   0xD3, 0xD1, 0xD3, 0xF0, 0xEB, 0xEC, 0xF7, 0xEC, 0xED, 0xF6, 0xED, 0xED, 0xF7, 0xF1, 0xF1, 0xC5, 
   0xBF, 0xBE, 0xB0, 0xA7, 0xA4, 0xDD, 0xD3, 0xD0, 0xF3, 0xEC, 0xE6, 0xF2, 0xE9, 0xE2, 0xF4, 0xE4, 
   0xE1, 0xF2, 0xE1, 0xDE, 0xF5, 0xE3, 0xE0, 0xF8, 0xE5, 0xE3, 0xF7, 0xE2, 0xE0, 0xF2, 0xDD, 0xDC, 
   0xF2, 0xDE, 0xDA, 0xF6, 0xE2, 0xDD, 0xF7, 0xE1, 0xDC, 0xF5, 0xDF, 0xDA, 0xF6, 0xDC, 0xD7, 0xF9, 
   0xDD, 0xD9, 0xF4, 0xD9, 0xD5, 0xF3, 0xDA, 0xD8, 0xEF, 0xD6, 0xD5, 0xEE, 0xD5, 0xD3, 0xF3, 0xDA, 
   0xD8, 0xF1, 0xD8, 0xD6, 0xF2, 0xD9, 0xD7, 0xF0, 0xD5, 0xD3, 0xF2, 0xD3, 0xD2, 0xF2, 0xD3, 0xD2, 
   0xE8, 0xC9, 0xC8, 0xCF, 0xB3, 0xB2, 0xDD, 0xC7, 0xC5, 0xAB, 0x99, 0x96, 0xBA, 0xA7, 0xA4, 0xC7, 
   0xB4, 0xB1, 0xE8, 0xD5, 0xD2, 0xE0, 0xCD, 0xCA, 0xDF, 0xCF, 0xCC, 0xD1, 0xBE, 0xBB, 0xF8, 0xE2, 
   0xDE, 0xF3, 0xD9, 0xD5, 0xEC, 0xD8, 0xD6, 0xDB, 0xCA, 0xC7, 0x8C, 0x83, 0x81, 0x6A, 0x67, 0x66, 
   0xA4, 0xA4, 0xA3, 0xAA, 0xA7, 0xA9, 0x62, 0x5D, 0x5F, 0xB2, 0xAB, 0xAD, 0xF6, 0xEC, 0xED, 0xF1, 
   0xE0, 0xE2, 0xEB, 0xDA, 0xDA, 0xEE, 0xD4, 0xD2, 0xF2, 0xD2, 0xCF, 0xF4, 0xD5, 0xD1, 0xF5, 0xD6, 
   0xD3, 0xF4, 0xD5, 0xD2, 0xF3, 0xD3, 0xD1, 0xF2, 0xD3, 0xD0, 0xEC, 0xD2, 0xCB, 0xEA, 0xD0, 0xC9, 
   0xEB, 0xCF, 0xC8, 0xEB, 0xCF, 0xC8, 0xEA, 0xCA, 0xC4, 0xEC, 0xCC, 0xC5, 0xEE, 0xCE, 0xC6, 0xEE, 
   0xCD, 0xC3, 0xEC, 0xCB, 0xC2, 0xE6, 0xC5, 0xBC, 0xE9, 0xC8, 0xBF, 0xE8, 0xC7, 0xBD, 0xE5, 0xC4, 
   0xBB, 0xEA, 0xC6, 0xC0, 0xEA, 0xC6, 0xC0, 0xE8, 0xC4, 0xBE, 0xEA, 0xC6, 0xC0, 0xEA, 0xC6, 0xC0, 
   0xEB, 0xC7, 0xC1, 0xE9, 0xC5, 0xBF, 0xEA, 0xC6, 0xC0, 0xE8, 0xC4, 0xBE, 0xE4, 0xC0, 0xBA, 0xEA, 
   0xC6, 0xC0, 0xEA, 0xC6, 0xC0, 0xEA, 0xC6, 0xC0, 0xEB, 0xC7, 0xC1, 0xE8, 0xC4, 0xBE, 0xE9, 0xC5, 
   0xBF, 0xE9, 0xC5, 0xBF, 0xE7, 0xC3, 0xBD, 0xE5, 0xC1, 0xBB, 0xE6, 0xC2, 0xBC, 0xE6, 0xC2, 0xBA, 
   0xE7, 0xC3, 0xBB, 0xEA, 0xC6, 0xBE, 0xE7, 0xC3, 0xBB, 0xE0, 0xBC, 0xB4, 0xDF, 0xBB, 0xB3, 0xE2, 
   0xBD, 0xB5, 0xE6, 0xC1, 0xB9, 0xEA, 0xC5, 0xBD, 0xE4, 0xBF, 0xB7, 0xD2, 0xAD, 0xA5, 0xDA, 0xB5, 
   0xAD, 0xDD, 0xB8, 0xB0, 0xCB, 0xA7, 0x9D, 0x8B, 0x68, 0x5E, 0x84, 0x61, 0x57, 0x94, 0x73, 0x69, 
   0x7F, 0x60, 0x56, 0x74, 0x57, 0x4B, 0x77, 0x58, 0x50, 0x7B, 0x5D, 0x54, 0x85, 0x66, 0x5D, 0x7A, 
   0x5E, 0x53, 0x7C, 0x61, 0x54, 0x7D, 0x63, 0x55, 0x7D, 0x63, 0x55, 0x7D, 0x62, 0x54, 0x80, 0x65, 
   0x57, 0x82, 0x67, 0x5B, 0x86, 0x6A, 0x5F, 0x88, 0x6D, 0x63, 0x8B, 0x6F, 0x67, 0x8C, 0x6E, 0x68, 
   0x8E, 0x6F, 0x6A, 0x86, 0x6B, 0x64, 0x88, 0x6F, 0x67, 0x80, 0x6B, 0x60, 0x5E, 0x4C, 0x3F, 0x45, 
   0x34, 0x28, 0x53, 0x44, 0x41, 0x4D, 0x40, 0x3C, 0x47, 0x3B, 0x37, 0x44, 0x39, 0x35, 0x4A, 0x40, 
   0x3C, 0x3F, 0x36, 0x32, 0x3E, 0x37, 0x2F, 0x59, 0x50, 0x46, 0x66, 0x56, 0x4F, 0x7F, 0x6C, 0x68, 
   0x67, 0x5A, 0x57, 0x44, 0x40, 0x3C, 0x7A, 0x7D, 0x79, 0x74, 0x6C, 0x68, 0x6C, 0x63, 0x5F, 0x62, 
   0x58, 0x54, 0x69, 0x5D, 0x59, 0x48, 0x39, 0x36, 0x55, 0x46, 0x43, 0x50, 0x3F, 0x3B, 0x54, 0x43, 
   0x3D, 0x80, 0x72, 0x6C, 0x5F, 0x54, 0x4D, 0x58, 0x4F, 0x48, 0x46, 0x3F, 0x38, 0x2E, 0x2B, 0x23, 
   0x41, 0x36, 0x32, 0x4A, 0x3E, 0x3B, 0x5C, 0x50, 0x4C, 0x6E, 0x60, 0x5D, 0x61, 0x50, 0x4D, 0x4B, 
   0x3A, 0x37, 0x4A, 0x3A, 0x37, 0x40, 0x31, 0x2E, 0x3D, 0x2E, 0x2B, 0x41, 0x32, 0x2F, 0x36, 0x27, 
   0x24, 0x54, 0x45, 0x42, 0x5F, 0x50, 0x4C, 0x59, 0x48, 0x3E, 0x4B, 0x39, 0x2E, 0x42, 0x32, 0x27, 
   0x5B, 0x4F, 0x43, 0x4B, 0x3F, 0x33, 0x4A, 0x40, 0x34, 0x51, 0x47, 0x3D, 0x53, 0x49, 0x41, 0x3E, 
   0x33, 0x2A, 0x3F, 0x33, 0x29, 0x3B, 0x2E, 0x22, 0x3C, 0x2F, 0x22, 0x4A, 0x3D, 0x2F, 0x41, 0x35, 
   0x29, 0x6B, 0x5E, 0x52, 0x60, 0x50, 0x45, 0x60, 0x4E, 0x43, 0x45, 0x31, 0x26, 0x4A, 0x32, 0x29, 
   0x69, 0x53, 0x46, 0x6D, 0x59, 0x4A, 0xF1, 0xCB, 0xC6, 0xEC, 0xC9, 0xC3, 0xE8, 0xCA, 0xC3, 0xDF, 
   0xC2, 0xBB, 0xD5, 0xB6, 0xAE, 0xD1, 0xAF, 0xA9, 0xDD, 0xB8, 0xB2, 0xD2, 0xB0, 0xA8, 0xCF, 0xAE, 
   0xA5, 0xD5, 0xB4, 0xAB, 0xD7, 0xB6, 0xAD, 0xDF, 0xBE, 0xB5, 0xE4, 0xC2, 0xB9, 0xEB, 0xC6, 0xBF, 
   0xE6, 0xC1, 0xBB, 0xED, 0xCA, 0xC6, 0xF3, 0xD4, 0xD2, 0xF0, 0xD8, 0xD7, 0xE2, 0xD5, 0xD6, 0x8F, 
   0x8B, 0x8C, 0x39, 0x38, 0x3C, 0x4E, 0x50, 0x53, 0x56, 0x5A, 0x5E, 0x46, 0x48, 0x4C, 0x7E, 0x7B, 
   0x7F, 0xBE, 0xB6, 0xBB, 0xD0, 0xCE, 0xD3, 0xE5, 0xE5, 0xEA, 0xDA, 0xD8, 0xDC, 0xDB, 0xD7, 0xDB, 
   0x7E, 0x7E, 0x82, 0x59, 0x5C, 0x62, 0x4B, 0x52, 0x57, 0x96, 0x9A, 0x9E, 0xE9, 0xEA, 0xEE, 0xA1, 
   0xA1, 0xA5, 0x68, 0x69, 0x6D, 0x9E, 0xA3, 0xA6, 0x4F, 0x5A, 0x5C, 0x8C, 0x91, 0x94, 0xDF, 0xD3, 
   0xD6, 0xD5, 0xBD, 0xBF, 0xF9, 0xEA, 0xE9, 0xF7, 0xF1, 0xEF, 0xE3, 0xDF, 0xE1, 0x77, 0x71, 0x75, 
   0x9B, 0x96, 0x97, 0xF9, 0xEF, 0xF1, 0xF5, 0xE6, 0xE7, 0xF6, 0xE3, 0xE2, 0xE6, 0xD3, 0xD2, 0xF1, 
   0xE3, 0xE0, 0xF0, 0xE3, 0xDE, 0xF9, 0xEC, 0xE6, 0xFA, 0xEA, 0xE4, 0xF8, 0xE7, 0xE5, 0xF4, 0xE3, 
   0xE4, 0xF3, 0xE6, 0xE7, 0xF5, 0xE9, 0xEC, 0xDB, 0xD4, 0xDB, 0x8A, 0x88, 0x8E, 0x8A, 0x8C, 0x91, 
   0xC6, 0xCA, 0xCA, 0xDD, 0xDC, 0xDC, 0xFC, 0xF4, 0xF4, 0xFF, 0xFF, 0xFF, 0xBE, 0xB9, 0xB8, 0xAD, 
   0xA8, 0xA7, 0x94, 0x8C, 0x89, 0xD6, 0xCC, 0xC8, 0xFC, 0xF0, 0xEB, 0xF5, 0xE9, 0xE3, 0xF2, 0xE1, 
   0xDE, 0xF8, 0xE7, 0xE4, 0xF8, 0xE6, 0xE4, 0xF4, 0xE0, 0xDE, 0xF5, 0xDF, 0xDD, 0xF1, 0xDA, 0xD9, 
   0xF2, 0xDA, 0xD6, 0xF5, 0xDE, 0xD7, 0xF9, 0xE2, 0xDC, 0xF7, 0xDE, 0xD8, 0xF7, 0xDB, 0xD6, 0xF5, 
   0xD8, 0xD3, 0xF0, 0xD3, 0xCE, 0xEB, 0xCF, 0xCE, 0xE9, 0xCD, 0xCC, 0xEE, 0xD2, 0xD1, 0xF4, 0xD8, 
   0xD7, 0xF4, 0xD8, 0xD7, 0xF9, 0xDD, 0xDC, 0xF9, 0xDC, 0xDB, 0xE0, 0xC1, 0xC0, 0xD0, 0xB1, 0xB0, 
   0xD5, 0xB6, 0xB5, 0xB4, 0x99, 0x98, 0xA3, 0x8F, 0x8C, 0xBE, 0xAE, 0xAB, 0xB9, 0xA6, 0xA5, 0xDC, 
   0xC8, 0xC6, 0xE1, 0xCD, 0xCC, 0xBB, 0xA7, 0xA6, 0x6E, 0x5A, 0x58, 0x91, 0x7E, 0x7D, 0xFC, 0xE7, 
   0xE4, 0xE3, 0xCA, 0xC6, 0xB4, 0x9D, 0x9B, 0x9E, 0x8B, 0x87, 0xB5, 0xA9, 0xA7, 0x9A, 0x92, 0x92, 
   0x88, 0x84, 0x83, 0x71, 0x6D, 0x6C, 0x69, 0x64, 0x63, 0xF3, 0xEA, 0xE9, 0xEB, 0xDB, 0xDA, 0xEE, 
   0xD9, 0xD8, 0xEE, 0xD8, 0xD6, 0xF2, 0xD7, 0xD3, 0xF3, 0xD5, 0xD0, 0xF6, 0xD8, 0xD3, 0xF6, 0xD8, 
   0xD4, 0xF2, 0xD5, 0xD0, 0xF1, 0xD3, 0xCF, 0xF0, 0xD3, 0xCF, 0xED, 0xD3, 0xCC, 0xEB, 0xD0, 0xC9, 
   0xEA, 0xCE, 0xC7, 0xEC, 0xCF, 0xC8, 0xEF, 0xCF, 0xC9, 0xEE, 0xCE, 0xC8, 0xEB, 0xCB, 0xC3, 0xEC, 
   0xCB, 0xC2, 0xE8, 0xC7, 0xBE, 0xE5, 0xC4, 0xBB, 0xE6, 0xC5, 0xBC, 0xE8, 0xC8, 0xBE, 0xE6, 0xC5, 
   0xBC, 0xE9, 0xC5, 0xBF, 0xE9, 0xC5, 0xBF, 0xE6, 0xC2, 0xBC, 0xE5, 0xC1, 0xBB, 0xE5, 0xC1, 0xBB, 
   0xE6, 0xC3, 0xBC, 0xE0, 0xBC, 0xB6, 0xDC, 0xB9, 0xB3, 0xE1, 0xBD, 0xB7, 0xE1, 0xBD, 0xB7, 0xE1, 
   0xBD, 0xB7, 0xE7, 0xC3, 0xBD, 0xE7, 0xC4, 0xBD, 0xE6, 0xC3, 0xBC, 0xE9, 0xC5, 0xBF, 0xE8, 0xC4, 
   0xBE, 0xEB, 0xC8, 0xC1, 0xE7, 0xC3, 0xBD, 0xE2, 0xBF, 0xB8, 0xE2, 0xBE, 0xB8, 0xE7, 0xC3, 0xBB, 
   0xE3, 0xBF, 0xB7, 0xE2, 0xBE, 0xB6, 0xDF, 0xBB, 0xB3, 0xDF, 0xBB, 0xB3, 0xDF, 0xBB, 0xB3, 0xDF, 
   0xBD, 0xB4, 0xE5, 0xC3, 0xBB, 0xED, 0xCC, 0xC3, 0xDC, 0xBA, 0xB1, 0xDB, 0xB9, 0xB0, 0xDD, 0xBC, 
   0xB3, 0xD9, 0xB8, 0xAE, 0xD1, 0xAD, 0xA3, 0xA6, 0x83, 0x79, 0x7E, 0x5C, 0x52, 0x7E, 0x5C, 0x52, 
   0x7F, 0x60, 0x55, 0x7F, 0x62, 0x57, 0x7E, 0x63, 0x5A, 0x82, 0x68, 0x5F, 0x7A, 0x60, 0x55, 0x7E, 
   0x63, 0x58, 0x7C, 0x60, 0x54, 0x7A, 0x5D, 0x50, 0x7B, 0x5E, 0x51, 0x80, 0x64, 0x56, 0x81, 0x66, 
   0x58, 0x7F, 0x66, 0x59, 0x80, 0x69, 0x5E, 0x88, 0x73, 0x68, 0x81, 0x6E, 0x65, 0x81, 0x6B, 0x64, 
   0x8F, 0x76, 0x70, 0x88, 0x71, 0x68, 0x86, 0x6F, 0x65, 0x8F, 0x78, 0x6D, 0x86, 0x72, 0x63, 0x5D, 
   0x48, 0x3B, 0x58, 0x47, 0x43, 0x63, 0x54, 0x51, 0x66, 0x59, 0x55, 0x66, 0x5B, 0x57, 0x48, 0x3E, 
   0x3A, 0x42, 0x39, 0x35, 0x3A, 0x32, 0x2B, 0x69, 0x5F, 0x56, 0x7F, 0x6D, 0x68, 0x5E, 0x4B, 0x47, 
   0x4D, 0x40, 0x3E, 0x51, 0x4E, 0x4B, 0x38, 0x3E, 0x39, 0x52, 0x4E, 0x49, 0x60, 0x5A, 0x55, 0x5D, 
   0x54, 0x50, 0x8B, 0x7C, 0x79, 0x77, 0x66, 0x63, 0x60, 0x4B, 0x49, 0x69, 0x54, 0x50, 0x9F, 0x8E, 
   0x87, 0x88, 0x78, 0x71, 0x63, 0x58, 0x50, 0x47, 0x3F, 0x36, 0x2F, 0x29, 0x20, 0x2F, 0x2D, 0x23, 
   0x35, 0x2A, 0x25, 0x39, 0x2D, 0x28, 0x4F, 0x42, 0x3F, 0x52, 0x43, 0x40, 0x64, 0x53, 0x50, 0x52, 
   0x40, 0x3D, 0x4D, 0x3C, 0x39, 0x48, 0x39, 0x36, 0x38, 0x29, 0x26, 0x4A, 0x3B, 0x38, 0x4A, 0x3B, 
   0x38, 0x49, 0x3A, 0x37, 0x5D, 0x4E, 0x4A, 0x4C, 0x3A, 0x30, 0x3E, 0x2D, 0x22, 0x36, 0x27, 0x1B, 
   0x4A, 0x3C, 0x30, 0x4B, 0x3F, 0x33, 0x4E, 0x42, 0x36, 0x40, 0x34, 0x2A, 0x41, 0x34, 0x2B, 0x46, 
   0x38, 0x2F, 0x4D, 0x3D, 0x32, 0x44, 0x33, 0x27, 0x50, 0x3F, 0x32, 0x5B, 0x4A, 0x3D, 0x41, 0x34, 
   0x28, 0x4A, 0x3D, 0x31, 0x53, 0x43, 0x38, 0x5C, 0x49, 0x3E, 0x3B, 0x23, 0x19, 0x63, 0x48, 0x3F, 
   0x65, 0x4E, 0x41, 0x6B, 0x58, 0x48, 0xEF, 0xC9, 0xC5, 0xEB, 0xC7, 0xC3, 0xE4, 0xC6, 0xC2, 0xE0, 
   0xC3, 0xBE, 0xD6, 0xB8, 0xB2, 0xD3, 0xB0, 0xAC, 0xD9, 0xB5, 0xB0, 0xD5, 0xB5, 0xAB, 0xD3, 0xB3, 
   0xA9, 0xD7, 0xB6, 0xAD, 0xDA, 0xB9, 0xB0, 0xE3, 0xC2, 0xB9, 0xE6, 0xC5, 0xBC, 0xED, 0xCB, 0xC3, 
   0xF0, 0xCC, 0xC7, 0xF0, 0xCD, 0xC9, 0xE6, 0xC7, 0xC5, 0xC8, 0xB1, 0xB1, 0x5C, 0x52, 0x52, 0x46, 
   0x42, 0x43, 0x50, 0x4B, 0x50, 0x6B, 0x67, 0x6C, 0x51, 0x4F, 0x53, 0x6E, 0x6A, 0x6F, 0xAA, 0x9E, 
   0xA4, 0xF0, 0xE1, 0xE8, 0xE3, 0xE6, 0xE8, 0x7F, 0x8A, 0x8B, 0x51, 0x59, 0x5C, 0x5A, 0x62, 0x64, 
   0x43, 0x50, 0x53, 0x4A, 0x60, 0x62, 0x4C, 0x65, 0x66, 0x71, 0x77, 0x7A, 0x79, 0x7B, 0x7F, 0x6E, 
   0x6F, 0x73, 0x6B, 0x6C, 0x70, 0x70, 0x77, 0x7A, 0x57, 0x64, 0x65, 0x80, 0x87, 0x8A, 0xC3, 0xB6, 
   0xBA, 0xE3, 0xCD, 0xCE, 0xFD, 0xF3, 0xF1, 0xF3, 0xF2, 0xEF, 0x7B, 0x7A, 0x7B, 0x2C, 0x26, 0x2B, 
   0xB8, 0xB4, 0xB5, 0xF5, 0xED, 0xEE, 0xEE, 0xDD, 0xDF, 0xF6, 0xE2, 0xE2, 0xF1, 0xDE, 0xDD, 0xF3, 
   0xE2, 0xE0, 0xF5, 0xE5, 0xE0, 0xFA, 0xE9, 0xE3, 0xF4, 0xE2, 0xDC, 0xF7, 0xE4, 0xE2, 0xF7, 0xE7, 
   0xE7, 0xF7, 0xEC, 0xEE, 0xE1, 0xDA, 0xDB, 0x8A, 0x82, 0x8B, 0x76, 0x72, 0x7A, 0x6F, 0x72, 0x76, 
   0x86, 0x8B, 0x8C, 0xDD, 0xDE, 0xDD, 0xEB, 0xE6, 0xE5, 0xC4, 0xC3, 0xC2, 0xA2, 0xA0, 0x9F, 0xDB, 
   0xD8, 0xD7, 0xCF, 0xC8, 0xC5, 0xF2, 0xE8, 0xE4, 0xF4, 0xE8, 0xE3, 0xF2, 0xE4, 0xDD, 0xF6, 0xE6, 
   0xE2, 0xDB, 0xC9, 0xC6, 0xC1, 0xAE, 0xAC, 0xE7, 0xD2, 0xD0, 0xF6, 0xE1, 0xDF, 0xF3, 0xDD, 0xDB, 
   0xF7, 0xE0, 0xDC, 0xFD, 0xE5, 0xDF, 0xF7, 0xDE, 0xD8, 0xF2, 0xD7, 0xD2, 0xF5, 0xD7, 0xD3, 0xF2, 
   0xD4, 0xD0, 0xE9, 0xCB, 0xC7, 0xDC, 0xC0, 0xBF, 0xE1, 0xC6, 0xC5, 0xF1, 0xD5, 0xD4, 0xF3, 0xD7, 
   0xD6, 0xF5, 0xD9, 0xD8, 0xF7, 0xDB, 0xDA, 0xF3, 0xD5, 0xD4, 0xD2, 0xB2, 0xB1, 0xBF, 0x9D, 0x9D, 
   0xD3, 0xB4, 0xB3, 0xE3, 0xC7, 0xC6, 0xE2, 0xCE, 0xCB, 0xF1, 0xE3, 0xE0, 0xEA, 0xD7, 0xD6, 0xDE, 
   0xCA, 0xC9, 0xDD, 0xC9, 0xC8, 0xCC, 0xB8, 0xB7, 0xC6, 0xB2, 0xB1, 0xE3, 0xD0, 0xCF, 0xEF, 0xD8, 
   0xD6, 0xEA, 0xD0, 0xCB, 0xB1, 0x9B, 0x99, 0x79, 0x64, 0x61, 0x6F, 0x5F, 0x5F, 0x52, 0x47, 0x47, 
   0x4E, 0x44, 0x44, 0x34, 0x30, 0x2E, 0x9F, 0x9B, 0x99, 0xF2, 0xE5, 0xE2, 0xEF, 0xDC, 0xD9, 0xF0, 
   0xD8, 0xD5, 0xF0, 0xD7, 0xD2, 0xF0, 0xD5, 0xCE, 0xF8, 0xDA, 0xD3, 0xF3, 0xD7, 0xD0, 0xF1, 0xD4, 
   0xCF, 0xF1, 0xD6, 0xD1, 0xEF, 0xD4, 0xD1, 0xEF, 0xD4, 0xD0, 0xEF, 0xD5, 0xCF, 0xED, 0xD2, 0xCB, 
   0xEB, 0xCF, 0xC8, 0xEC, 0xCF, 0xC8, 0xED, 0xCD, 0xC7, 0xEA, 0xCA, 0xC4, 0xE6, 0xC6, 0xBE, 0xE9, 
   0xC9, 0xBF, 0xE9, 0xC8, 0xBF, 0xE6, 0xC6, 0xBD, 0xE3, 0xC3, 0xB9, 0xE5, 0xC4, 0xBB, 0xE6, 0xC5, 
   0xBC, 0xE9, 0xC4, 0xBE, 0xE8, 0xC2, 0xBD, 0xE5, 0xBF, 0xBA, 0xE0, 0xBB, 0xB5, 0xDE, 0xB9, 0xB3, 
   0xDF, 0xB9, 0xB4, 0xE3, 0xBE, 0xB8, 0xDF, 0xBA, 0xB5, 0xE0, 0xBA, 0xB5, 0xDB, 0xB6, 0xB1, 0xE1, 
   0xBC, 0xB7, 0xE7, 0xC2, 0xBD, 0xE6, 0xC0, 0xBB, 0xE2, 0xBC, 0xB7, 0xE0, 0xBB, 0xB6, 0xDA, 0xB4, 
   0xAF, 0xD3, 0xAE, 0xA8, 0xC9, 0xA3, 0x9E, 0xE1, 0xBC, 0xB7, 0xE5, 0xBF, 0xBA, 0xE2, 0xBD, 0xB5, 
   0xDC, 0xB8, 0xB0, 0xDD, 0xB9, 0xB1, 0xDC, 0xB8, 0xB0, 0xDE, 0xB9, 0xB2, 0xE3, 0xBE, 0xB7, 0xE0, 
   0xBF, 0xB7, 0xEC, 0xCC, 0xC3, 0xF1, 0xD1, 0xC8, 0xCB, 0xAA, 0xA2, 0xC7, 0xA7, 0x9E, 0xC7, 0xA7, 
   0x9E, 0xA4, 0x82, 0x79, 0x89, 0x65, 0x5A, 0x93, 0x70, 0x66, 0x89, 0x67, 0x5D, 0x85, 0x66, 0x5B, 
   0x80, 0x62, 0x57, 0x80, 0x62, 0x57, 0x85, 0x6A, 0x61, 0x83, 0x6B, 0x61, 0x7E, 0x63, 0x5A, 0x7C, 
   0x60, 0x56, 0x7D, 0x5F, 0x53, 0x7F, 0x5F, 0x52, 0x86, 0x66, 0x58, 0x83, 0x66, 0x58, 0x7F, 0x64, 
   0x56, 0x81, 0x6A, 0x5C, 0x83, 0x70, 0x63, 0x83, 0x71, 0x66, 0x71, 0x63, 0x59, 0x63, 0x52, 0x4A, 
   0x6F, 0x5B, 0x54, 0x86, 0x72, 0x69, 0x88, 0x72, 0x67, 0x88, 0x71, 0x64, 0x8F, 0x76, 0x66, 0x8A, 
   0x72, 0x62, 0x59, 0x47, 0x43, 0x4A, 0x39, 0x36, 0x53, 0x43, 0x40, 0x76, 0x6A, 0x66, 0x77, 0x6D, 
   0x69, 0x4C, 0x42, 0x3F, 0x5E, 0x56, 0x50, 0x59, 0x4E, 0x45, 0x47, 0x33, 0x2E, 0x54, 0x3F, 0x3B, 
   0x40, 0x32, 0x2F, 0x3D, 0x3B, 0x38, 0x33, 0x3A, 0x35, 0x41, 0x41, 0x3B, 0x47, 0x45, 0x3F, 0x5F, 
   0x57, 0x53, 0x9E, 0x8C, 0x8A, 0x9A, 0x86, 0x84, 0x75, 0x5C, 0x5B, 0x8A, 0x73, 0x6F, 0x78, 0x66, 
   0x5F, 0x63, 0x52, 0x4B, 0x5A, 0x4F, 0x47, 0x47, 0x3F, 0x36, 0x39, 0x34, 0x2A, 0x32, 0x30, 0x26, 
   0x56, 0x4A, 0x46, 0x48, 0x3B, 0x37, 0x32, 0x24, 0x20, 0x37, 0x25, 0x22, 0x38, 0x26, 0x23, 0x3D, 
   0x29, 0x26, 0x47, 0x36, 0x33, 0x42, 0x34, 0x31, 0x34, 0x25, 0x22, 0x3B, 0x2C, 0x29, 0x4A, 0x3B, 
   0x38, 0x4B, 0x3C, 0x3A, 0x3E, 0x2E, 0x2B, 0x48, 0x36, 0x2B, 0x4F, 0x3D, 0x32, 0x3B, 0x2A, 0x1F, 
   0x3A, 0x2C, 0x20, 0x49, 0x3C, 0x2F, 0x62, 0x57, 0x4A, 0x73, 0x66, 0x5B, 0x65, 0x54, 0x4C, 0x54, 
   0x43, 0x3B, 0x53, 0x40, 0x36, 0x50, 0x3E, 0x31, 0x5C, 0x49, 0x3C, 0x5D, 0x48, 0x3B, 0x43, 0x37, 
   0x2B, 0x5E, 0x51, 0x46, 0x63, 0x52, 0x47, 0x58, 0x44, 0x3A, 0x4D, 0x34, 0x2A, 0x5C, 0x3E, 0x36, 
   0x6F, 0x56, 0x4A, 0x70, 0x5B, 0x4B, 0xED, 0xC9, 0xC4, 0xE9, 0xC6, 0xC1, 0xE5, 0xC4, 0xBE, 0xE3, 
   0xC2, 0xBD, 0xDD, 0xBA, 0xB5, 0xD9, 0xB3, 0xAF, 0xDA, 0xB3, 0xAE, 0xD9, 0xB2, 0xAC, 0xD8, 0xB3, 
   0xAC, 0xDB, 0xB7, 0xB0, 0xDE, 0xBB, 0xB4, 0xE5, 0xC4, 0xBD, 0xEA, 0xCB, 0xC4, 0xE8, 0xCB, 0xC1, 
   0xE9, 0xCA, 0xC1, 0xE8, 0xC9, 0xC2, 0xD4, 0xB5, 0xB2, 0xBC, 0xA3, 0xA2, 0x93, 0x85, 0x84, 0xA4, 
   0x9C, 0x9B, 0x7B, 0x76, 0x7A, 0x52, 0x4E, 0x52, 0x72, 0x70, 0x73, 0xC6, 0xC3, 0xC6, 0xD8, 0xD2, 
   0xD5, 0xF0, 0xEB, 0xEE, 0x77, 0x7F, 0x81, 0x37, 0x47, 0x48, 0x41, 0x52, 0x54, 0x3A, 0x4B, 0x4F, 
   0x51, 0x63, 0x68, 0x46, 0x59, 0x61, 0x48, 0x5B, 0x62, 0x50, 0x5A, 0x5D, 0x45, 0x4F, 0x53, 0x43, 
   0x50, 0x54, 0x42, 0x50, 0x55, 0x49, 0x57, 0x5E, 0x84, 0x93, 0x9C, 0x6C, 0x74, 0x7B, 0x59, 0x53, 
   0x58, 0xB2, 0xA8, 0xAB, 0xD6, 0xD0, 0xD1, 0x5E, 0x5A, 0x59, 0x3A, 0x36, 0x38, 0x58, 0x52, 0x55, 
   0xE4, 0xD6, 0xD8, 0xF6, 0xE5, 0xE6, 0xF7, 0xE5, 0xE4, 0xEF, 0xDB, 0xD8, 0xF6, 0xE4, 0xDF, 0xF9, 
   0xE8, 0xE2, 0xF6, 0xE7, 0xE0, 0xF4, 0xE5, 0xDF, 0xF7, 0xE8, 0xE3, 0xFA, 0xED, 0xE9, 0xF2, 0xEA, 
   0xE8, 0xE5, 0xE0, 0xDE, 0xA9, 0xA4, 0xA2, 0x6A, 0x61, 0x6B, 0x6C, 0x65, 0x6F, 0x96, 0x94, 0x9A, 
   0xA5, 0xA6, 0xA8, 0xD5, 0xD7, 0xD8, 0x90, 0x90, 0x92, 0x7B, 0x7C, 0x7B, 0xE2, 0xE3, 0xE0, 0xA6, 
   0xA2, 0xA0, 0xD1, 0xC6, 0xC4, 0xFA, 0xEB, 0xE9, 0xF3, 0xE0, 0xDE, 0xFB, 0xE6, 0xE3, 0xCE, 0xBD, 
   0xBA, 0x77, 0x67, 0x64, 0xC2, 0xB2, 0xAE, 0xF0, 0xDC, 0xDA, 0xF4, 0xDD, 0xDB, 0xFB, 0xDE, 0xDE, 
   0xFB, 0xE2, 0xDD, 0xDC, 0xC4, 0xBA, 0xCE, 0xB5, 0xAB, 0xEF, 0xD4, 0xCB, 0xF1, 0xD4, 0xCC, 0xEB, 
   0xCD, 0xC4, 0xE5, 0xC6, 0xBE, 0xDE, 0xBD, 0xBC, 0xE9, 0xC9, 0xC8, 0xF2, 0xD4, 0xD3, 0xF6, 0xD9, 
   0xD8, 0xF2, 0xD6, 0xD5, 0xF5, 0xDB, 0xD9, 0xF2, 0xD9, 0xD7, 0xE6, 0xCF, 0xCD, 0xEE, 0xD4, 0xD3, 
   0xF6, 0xDE, 0xDC, 0xF9, 0xE2, 0xE0, 0xF7, 0xE3, 0xE1, 0xF1, 0xDE, 0xDB, 0xD8, 0xC1, 0xC0, 0xCB, 
   0xB5, 0xB3, 0xE5, 0xD0, 0xCE, 0xF1, 0xDC, 0xDA, 0xF4, 0xE2, 0xE0, 0xF0, 0xDD, 0xDB, 0xF1, 0xDE, 
   0xDB, 0xF4, 0xE0, 0xDC, 0xF6, 0xE5, 0xE2, 0xE7, 0xD4, 0xD0, 0xC5, 0xB3, 0xB2, 0xBA, 0xAA, 0xA9, 
   0xAC, 0x9C, 0x99, 0xB4, 0xA5, 0xA1, 0xEB, 0xDC, 0xD7, 0xEF, 0xDA, 0xD4, 0xF5, 0xDD, 0xD8, 0xF0, 
   0xD4, 0xCF, 0xF2, 0xD6, 0xD0, 0xF1, 0xD5, 0xD0, 0xF3, 0xD6, 0xD3, 0xF1, 0xD3, 0xD0, 0xF2, 0xD4, 
   0xD1, 0xF3, 0xD5, 0xD3, 0xF4, 0xD4, 0xD3, 0xF6, 0xD6, 0xD4, 0xF0, 0xD5, 0xCF, 0xEC, 0xD3, 0xCB, 
   0xED, 0xD2, 0xCB, 0xE8, 0xCB, 0xC4, 0xE7, 0xC9, 0xC2, 0xE9, 0xCA, 0xC4, 0xEB, 0xCA, 0xC3, 0xEC, 
   0xC9, 0xC1, 0xEA, 0xC4, 0xBD, 0xEB, 0xC3, 0xBD, 0xEA, 0xC6, 0xBF, 0xE4, 0xC4, 0xBD, 0xE1, 0xC4, 
   0xBC, 0xE6, 0xC3, 0xBE, 0xE6, 0xC3, 0xBD, 0xE4, 0xC1, 0xBB, 0xDE, 0xBA, 0xB5, 0xDF, 0xBB, 0xB6, 
   0xE0, 0xBD, 0xB8, 0xE5, 0xC0, 0xBA, 0xE6, 0xC0, 0xB8, 0xE6, 0xBF, 0xB8, 0xE5, 0xBE, 0xB8, 0xEA, 
   0xC4, 0xBD, 0xEC, 0xC6, 0xBF, 0xE7, 0xC0, 0xBA, 0xE4, 0xBE, 0xB7, 0xE0, 0xB9, 0xB2, 0xDA, 0xB3, 
   0xAD, 0xD4, 0xAE, 0xA7, 0xC5, 0x9E, 0x97, 0xDA, 0xB3, 0xAD, 0xDA, 0xB4, 0xAE, 0xD6, 0xB2, 0xA9, 
   0xD9, 0xB3, 0xAA, 0xDF, 0xB6, 0xAD, 0xE1, 0xB8, 0xB0, 0xDE, 0xB9, 0xAF, 0xE7, 0xC4, 0xBB, 0xCD, 
   0xAF, 0xA4, 0xAF, 0x92, 0x88, 0x93, 0x78, 0x6E, 0x6E, 0x54, 0x4A, 0x6E, 0x56, 0x4C, 0x74, 0x5E, 
   0x55, 0x7C, 0x64, 0x5C, 0x86, 0x68, 0x61, 0x7C, 0x60, 0x58, 0x82, 0x69, 0x60, 0x88, 0x71, 0x67, 
   0x78, 0x64, 0x59, 0x7C, 0x6A, 0x5D, 0x67, 0x56, 0x4C, 0x54, 0x45, 0x3A, 0x7D, 0x68, 0x5A, 0x7D, 
   0x64, 0x56, 0x7E, 0x62, 0x54, 0x81, 0x62, 0x57, 0x84, 0x64, 0x5B, 0x7D, 0x60, 0x57, 0x78, 0x61, 
   0x57, 0x80, 0x6E, 0x65, 0x79, 0x6C, 0x61, 0x62, 0x55, 0x4C, 0x53, 0x48, 0x3F, 0x4C, 0x41, 0x3A, 
   0x44, 0x37, 0x32, 0x58, 0x4B, 0x44, 0x79, 0x68, 0x61, 0x87, 0x71, 0x6A, 0x8F, 0x75, 0x6E, 0x89, 
   0x6D, 0x66, 0x81, 0x6E, 0x68, 0x51, 0x3F, 0x3A, 0x4E, 0x3E, 0x38, 0x4C, 0x40, 0x3A, 0x54, 0x4B, 
   0x46, 0x4B, 0x43, 0x3E, 0x45, 0x3E, 0x39, 0x59, 0x52, 0x4B, 0x59, 0x51, 0x4B, 0x47, 0x40, 0x3B, 
   0x48, 0x44, 0x40, 0x2F, 0x31, 0x2C, 0x3E, 0x42, 0x3C, 0x51, 0x58, 0x53, 0x32, 0x34, 0x30, 0x44, 
   0x3E, 0x3A, 0xAF, 0xA2, 0x9D, 0xAA, 0x96, 0x90, 0x6A, 0x4E, 0x47, 0x7B, 0x60, 0x57, 0x73, 0x5C, 
   0x50, 0x75, 0x60, 0x56, 0x54, 0x45, 0x3D, 0x48, 0x3B, 0x35, 0x41, 0x35, 0x30, 0x58, 0x4D, 0x4A, 
   0x54, 0x4D, 0x49, 0x31, 0x2C, 0x27, 0x30, 0x2B, 0x25, 0x36, 0x2D, 0x29, 0x40, 0x35, 0x31, 0x4B, 
   0x3C, 0x39, 0x51, 0x42, 0x3E, 0x30, 0x23, 0x20, 0x36, 0x28, 0x25, 0x31, 0x24, 0x1F, 0x3E, 0x32, 
   0x2D, 0x41, 0x35, 0x2F, 0x3C, 0x30, 0x29, 0x6C, 0x5E, 0x54, 0x76, 0x65, 0x5C, 0x60, 0x4E, 0x45, 
   0x60, 0x4F, 0x46, 0x6B, 0x58, 0x50, 0x75, 0x61, 0x59, 0x6F, 0x5C, 0x52, 0x55, 0x43, 0x38, 0x64, 
   0x51, 0x46, 0x66, 0x51, 0x46, 0x5F, 0x47, 0x3C, 0x5F, 0x46, 0x3B, 0x51, 0x38, 0x2B, 0x63, 0x4F, 
   0x3E, 0x6B, 0x57, 0x47, 0x56, 0x40, 0x32, 0x3C, 0x25, 0x18, 0x47, 0x2E, 0x23, 0x61, 0x46, 0x3C, 
   0x6F, 0x56, 0x4C, 0x6A, 0x54, 0x49, 0xEC, 0xCA, 0xC4, 0xE8, 0xC6, 0xC0, 0xE6, 0xC2, 0xBC, 0xE5, 
   0xC0, 0xBB, 0xE3, 0xBC, 0xB7, 0xDE, 0xB5, 0xB0, 0xDD, 0xB3, 0xAE, 0xDE, 0xB2, 0xAD, 0xDD, 0xB4, 
   0xAF, 0xE0, 0xB9, 0xB5, 0xE4, 0xBF, 0xBA, 0xEB, 0xC9, 0xC3, 0xEF, 0xD1, 0xCA, 0xE8, 0xCD, 0xC3, 
   0xE6, 0xCA, 0xBF, 0xE4, 0xC7, 0xBF, 0xE0, 0xC2, 0xBE, 0xDF, 0xC4, 0xC1, 0xCD, 0xBB, 0xBA, 0xD8, 
   0xCC, 0xCB, 0x7E, 0x7A, 0x7C, 0x53, 0x4F, 0x51, 0x8D, 0x8B, 0x8D, 0x9C, 0x9D, 0x9E, 0xFB, 0xFF, 
   0xFF, 0x89, 0x8D, 0x8E, 0x3E, 0x49, 0x4B, 0x43, 0x53, 0x55, 0x44, 0x57, 0x5B, 0x43, 0x57, 0x5D, 
   0x44, 0x56, 0x5F, 0x4B, 0x56, 0x63, 0x39, 0x41, 0x4E, 0x4B, 0x59, 0x5C, 0x49, 0x5C, 0x5E, 0x47, 
   0x5C, 0x60, 0x3C, 0x52, 0x59, 0x5B, 0x6E, 0x78, 0x6E, 0x7D, 0x8B, 0x49, 0x4F, 0x5A, 0x3C, 0x3E, 
   0x43, 0x71, 0x73, 0x77, 0x59, 0x57, 0x5B, 0x37, 0x33, 0x35, 0x39, 0x34, 0x35, 0x7D, 0x76, 0x78, 
   0xF9, 0xE4, 0xE7, 0xF7, 0xE1, 0xE2, 0xF5, 0xE1, 0xDF, 0xF7, 0xE4, 0xDE, 0xF7, 0xE6, 0xDE, 0xF5, 
   0xE4, 0xDB, 0xF6, 0xE6, 0xDF, 0xF1, 0xE3, 0xDE, 0xFA, 0xF0, 0xEA, 0xF7, 0xEF, 0xEB, 0xB0, 0xAA, 
   0xA7, 0xB8, 0xB2, 0xB0, 0x8B, 0x87, 0x86, 0x6D, 0x66, 0x6F, 0xCF, 0xC8, 0xD2, 0xBF, 0xBA, 0xC2, 
   0xD4, 0xD2, 0xD6, 0x81, 0x83, 0x87, 0x74, 0x76, 0x7B, 0xDA, 0xDD, 0xDC, 0xDC, 0xDB, 0xD7, 0x8B, 
   0x85, 0x81, 0xE5, 0xD6, 0xD4, 0xF6, 0xE3, 0xE2, 0xF5, 0xDE, 0xDE, 0xF8, 0xDE, 0xDF, 0xD3, 0xC2, 
   0xBF, 0xEB, 0xDC, 0xD9, 0xF3, 0xE4, 0xE1, 0xF1, 0xE1, 0xDE, 0xF8, 0xE1, 0xDF, 0xF3, 0xD6, 0xD6, 
   0xD5, 0xB9, 0xB4, 0xAB, 0x93, 0x87, 0xB0, 0x97, 0x8B, 0xEC, 0xD1, 0xC6, 0xEC, 0xCE, 0xC3, 0xE9, 
   0xC9, 0xBF, 0xED, 0xCA, 0xC2, 0xF2, 0xCD, 0xCC, 0xF0, 0xCC, 0xCC, 0xED, 0xCC, 0xCC, 0xE4, 0xC6, 
   0xC5, 0xEF, 0xD6, 0xD4, 0xFA, 0xE5, 0xE2, 0xF9, 0xE8, 0xE5, 0xF0, 0xE3, 0xDF, 0xEC, 0xDB, 0xD8, 
   0xF5, 0xE3, 0xE0, 0xF5, 0xE0, 0xDE, 0xF4, 0xE0, 0xDF, 0xF3, 0xDC, 0xDA, 0xF4, 0xDC, 0xDA, 0xF5, 
   0xDC, 0xDA, 0xF5, 0xDE, 0xDC, 0xF0, 0xDA, 0xD8, 0xEA, 0xD7, 0xD5, 0xF1, 0xDF, 0xDB, 0xF2, 0xDF, 
   0xDC, 0xF2, 0xDE, 0xDC, 0xEF, 0xDB, 0xD8, 0xEA, 0xD6, 0xD3, 0xF2, 0xDD, 0xDB, 0xFA, 0xE6, 0xE3, 
   0xFD, 0xE8, 0xE4, 0xFD, 0xEA, 0xE3, 0xF4, 0xDE, 0xD7, 0xF4, 0xDC, 0xD6, 0xF0, 0xD7, 0xD0, 0xF3, 
   0xD7, 0xD1, 0xF2, 0xD5, 0xCF, 0xF1, 0xD3, 0xD0, 0xF1, 0xD3, 0xD3, 0xF3, 0xD5, 0xD5, 0xF5, 0xD7, 
   0xD6, 0xF5, 0xD5, 0xD5, 0xF7, 0xD4, 0xD5, 0xF6, 0xD2, 0xD2, 0xF0, 0xD6, 0xCF, 0xEC, 0xD3, 0xCC, 
   0xE7, 0xCC, 0xC5, 0xE7, 0xCB, 0xC4, 0xE8, 0xCB, 0xC4, 0xEB, 0xCC, 0xC6, 0xEB, 0xC9, 0xC3, 0xEC, 
   0xC7, 0xC1, 0xED, 0xC4, 0xBF, 0xEE, 0xC1, 0xBD, 0xEC, 0xC4, 0xBF, 0xE5, 0xC5, 0xBF, 0xDE, 0xC4, 
   0xBD, 0xE0, 0xBF, 0xB9, 0xE2, 0xBF, 0xB9, 0xE4, 0xC1, 0xBB, 0xDF, 0xBD, 0xB7, 0xE0, 0xBE, 0xB8, 
   0xE0, 0xBE, 0xB9, 0xE3, 0xBE, 0xB7, 0xEA, 0xC2, 0xBA, 0xE9, 0xC2, 0xBA, 0xE7, 0xC0, 0xB8, 0xE8, 
   0xC1, 0xB8, 0xE6, 0xBF, 0xB7, 0xE2, 0xBB, 0xB3, 0xDF, 0xB8, 0xAF, 0xDC, 0xB5, 0xAC, 0xE0, 0xB9, 
   0xB1, 0xE3, 0xBC, 0xB4, 0xE0, 0xB9, 0xB1, 0xD8, 0xB1, 0xA8, 0xDD, 0xB7, 0xAF, 0xD9, 0xB6, 0xAC, 
   0xD5, 0xAE, 0xA5, 0xDB, 0xAF, 0xA6, 0xE0, 0xB6, 0xAD, 0xE2, 0xBD, 0xB3, 0xDE, 0xBC, 0xB1, 0xB4, 
   0x98, 0x8B, 0x7F, 0x66, 0x5A, 0x5E, 0x47, 0x3C, 0x59, 0x45, 0x3A, 0x6E, 0x5C, 0x52, 0x74, 0x65, 
   0x5C, 0x7B, 0x6A, 0x64, 0x83, 0x6C, 0x67, 0x82, 0x6D, 0x68, 0x60, 0x4E, 0x47, 0x65, 0x56, 0x4E, 
   0x5A, 0x4F, 0x42, 0x4C, 0x42, 0x35, 0x49, 0x41, 0x35, 0x3C, 0x33, 0x27, 0x62, 0x52, 0x42, 0x7A, 
   0x63, 0x52, 0x7A, 0x5E, 0x4F, 0x84, 0x65, 0x5D, 0x7E, 0x5F, 0x59, 0x79, 0x5E, 0x59, 0x78, 0x63, 
   0x5E, 0x62, 0x56, 0x4E, 0x6B, 0x62, 0x5A, 0x53, 0x4A, 0x42, 0x51, 0x46, 0x3F, 0x66, 0x5E, 0x57, 
   0x47, 0x3F, 0x3B, 0x4C, 0x43, 0x3F, 0x50, 0x42, 0x3E, 0x69, 0x55, 0x52, 0x77, 0x5D, 0x5C, 0x7F, 
   0x63, 0x62, 0x75, 0x61, 0x5A, 0x63, 0x51, 0x4A, 0x5C, 0x4D, 0x45, 0x6B, 0x60, 0x59, 0x57, 0x4F, 
   0x47, 0x4B, 0x44, 0x3E, 0x3F, 0x39, 0x34, 0x41, 0x3E, 0x39, 0x3D, 0x3E, 0x38, 0x3B, 0x40, 0x3A, 
   0x5D, 0x61, 0x5B, 0x36, 0x36, 0x31, 0x43, 0x41, 0x3B, 0x50, 0x58, 0x56, 0x35, 0x37, 0x35, 0x58, 
   0x55, 0x4F, 0xEE, 0xE2, 0xDB, 0x93, 0x7D, 0x74, 0x69, 0x4C, 0x41, 0x70, 0x51, 0x44, 0x7A, 0x5F, 
   0x50, 0x73, 0x5E, 0x51, 0x68, 0x58, 0x4F, 0x45, 0x36, 0x31, 0x46, 0x36, 0x35, 0x4C, 0x3B, 0x3B, 
   0x46, 0x42, 0x3D, 0x46, 0x45, 0x40, 0x26, 0x26, 0x20, 0x2D, 0x2C, 0x26, 0x36, 0x30, 0x2B, 0x3D, 
   0x30, 0x2D, 0x40, 0x32, 0x2F, 0x35, 0x29, 0x25, 0x34, 0x27, 0x24, 0x3D, 0x31, 0x2B, 0x3E, 0x33, 
   0x2B, 0x39, 0x2D, 0x25, 0x3E, 0x33, 0x29, 0x57, 0x4B, 0x43, 0x55, 0x47, 0x40, 0x64, 0x54, 0x4D, 
   0x47, 0x34, 0x2E, 0x42, 0x2D, 0x27, 0x56, 0x3D, 0x38, 0x5D, 0x48, 0x3F, 0x3F, 0x2F, 0x21, 0x3F, 
   0x2D, 0x1F, 0x4D, 0x37, 0x2A, 0x6D, 0x54, 0x49, 0x5D, 0x41, 0x37, 0x60, 0x45, 0x39, 0x53, 0x3A, 
   0x26, 0x67, 0x4F, 0x3C, 0x77, 0x5E, 0x4D, 0x6C, 0x53, 0x44, 0x66, 0x4F, 0x43, 0x6D, 0x54, 0x4A, 
   0x6F, 0x58, 0x4F, 0x71, 0x5B, 0x53, 0xEE, 0xCC, 0xC6, 0xE8, 0xC6, 0xC0, 0xE5, 0xC2, 0xBC, 0xE3, 
   0xBE, 0xB8, 0xE3, 0xBC, 0xB7, 0xDF, 0xB7, 0xB2, 0xDA, 0xB1, 0xAC, 0xDD, 0xB3, 0xAE, 0xDE, 0xB5, 
   0xB0, 0xE1, 0xBB, 0xB6, 0xE7, 0xC3, 0xBD, 0xF0, 0xCF, 0xC9, 0xF0, 0xD2, 0xCC, 0xEC, 0xCF, 0xC6, 
   0xEB, 0xCE, 0xC5, 0xEC, 0xCD, 0xC7, 0xED, 0xCF, 0xCB, 0xEA, 0xD1, 0xCE, 0xEF, 0xDD, 0xDC, 0xD2, 
   0xC7, 0xC7, 0xA8, 0xA3, 0xA4, 0x8A, 0x86, 0x88, 0xBD, 0xBC, 0xBE, 0xC9, 0xCC, 0xCD, 0x92, 0x97, 
   0x98, 0x45, 0x4B, 0x4C, 0x4B, 0x56, 0x58, 0x49, 0x58, 0x5B, 0x3D, 0x51, 0x54, 0x3E, 0x52, 0x58, 
   0x4F, 0x60, 0x69, 0x45, 0x51, 0x5B, 0x41, 0x4A, 0x56, 0x46, 0x53, 0x57, 0x50, 0x61, 0x64, 0x3F, 
   0x53, 0x57, 0x35, 0x48, 0x4F, 0x58, 0x69, 0x72, 0x4F, 0x5B, 0x68, 0x49, 0x51, 0x59, 0x57, 0x5B, 
   0x5F, 0x3E, 0x41, 0x45, 0x37, 0x36, 0x38, 0x3E, 0x39, 0x3B, 0x47, 0x41, 0x42, 0xC8, 0xBF, 0xC0, 
   0xF8, 0xE3, 0xE5, 0xF2, 0xDF, 0xDE, 0xF7, 0xE4, 0xE1, 0xF3, 0xE1, 0xDB, 0xF7, 0xE4, 0xDE, 0xFA, 
   0xE8, 0xE0, 0xF5, 0xE4, 0xDF, 0xF0, 0xE1, 0xDF, 0xF9, 0xEF, 0xEC, 0xB9, 0xB0, 0xAE, 0xA1, 0x99, 
   0x98, 0xBF, 0xB9, 0xBA, 0x7B, 0x76, 0x79, 0x72, 0x70, 0x78, 0x8E, 0x8C, 0x95, 0xCC, 0xCA, 0xD1, 
   0x7D, 0x7C, 0x7F, 0x87, 0x86, 0x88, 0xA2, 0xA1, 0xA2, 0xFE, 0xFB, 0xF9, 0xAF, 0xA8, 0xA4, 0xC1, 
   0xB7, 0xB5, 0xED, 0xDE, 0xDD, 0xF4, 0xE0, 0xDF, 0xE4, 0xCF, 0xCE, 0xE0, 0xC9, 0xC8, 0xF3, 0xDF, 
   0xDC, 0xEB, 0xD8, 0xD5, 0xED, 0xDD, 0xDA, 0xF2, 0xE2, 0xDF, 0xE0, 0xCC, 0xC9, 0xB3, 0x9A, 0x99, 
   0xA9, 0x8F, 0x8A, 0xB1, 0x95, 0x8B, 0xAF, 0x93, 0x8A, 0xD9, 0xBB, 0xB2, 0xE6, 0xC5, 0xBD, 0xE7, 
   0xC5, 0xBD, 0xF4, 0xD0, 0xC8, 0xEF, 0xC9, 0xC9, 0xE8, 0xC4, 0xC4, 0xE6, 0xC6, 0xC6, 0xD7, 0xBB, 
   0xBA, 0xE0, 0xC8, 0xC6, 0xFE, 0xEE, 0xEC, 0xC8, 0xB9, 0xB6, 0xC8, 0xC0, 0xBC, 0xF6, 0xEE, 0xEA, 
   0xE7, 0xD7, 0xD4, 0xF6, 0xE4, 0xE1, 0xF0, 0xDA, 0xD9, 0xDA, 0xC5, 0xC3, 0xDE, 0xC5, 0xC3, 0xED, 
   0xD5, 0xD3, 0xF4, 0xDD, 0xDB, 0xF4, 0xDE, 0xDC, 0xF2, 0xDF, 0xDC, 0xF5, 0xE3, 0xE0, 0xEE, 0xD9, 
   0xD6, 0xF1, 0xD9, 0xD7, 0xEA, 0xD3, 0xD1, 0xEE, 0xD7, 0xD5, 0xEC, 0xD4, 0xD2, 0xEA, 0xD3, 0xD1, 
   0xEE, 0xD7, 0xD4, 0xEC, 0xD9, 0xD3, 0xEE, 0xD9, 0xD3, 0xED, 0xD6, 0xD0, 0xE9, 0xD1, 0xCB, 0xEA, 
   0xD0, 0xCA, 0xEC, 0xD1, 0xCB, 0xE9, 0xCC, 0xC9, 0xE8, 0xCC, 0xCB, 0xE6, 0xCB, 0xCA, 0xE1, 0xC3, 
   0xC2, 0xF2, 0xD3, 0xD2, 0xF3, 0xD3, 0xD2, 0xF2, 0xD2, 0xD1, 0xEC, 0xD2, 0xCB, 0xE9, 0xCF, 0xC8, 
   0xE9, 0xCD, 0xC6, 0xED, 0xD0, 0xC9, 0xEA, 0xCD, 0xC6, 0xEB, 0xCB, 0xC5, 0xEC, 0xCB, 0xC5, 0xED, 
   0xCB, 0xC5, 0xEC, 0xC5, 0xC0, 0xEA, 0xC0, 0xBB, 0xEB, 0xC3, 0xBE, 0xE7, 0xC4, 0xBE, 0xE1, 0xC1, 
   0xBB, 0xDF, 0xBA, 0xB4, 0xE1, 0xBB, 0xB5, 0xE4, 0xBF, 0xB9, 0xE4, 0xC0, 0xBA, 0xE5, 0xC0, 0xBA, 
   0xE4, 0xBF, 0xBA, 0xE3, 0xBD, 0xB7, 0xE5, 0xBE, 0xB6, 0xE2, 0xBB, 0xB3, 0xE0, 0xB9, 0xB1, 0xD5, 
   0xAE, 0xA6, 0xD6, 0xAF, 0xA7, 0xD8, 0xB1, 0xA9, 0xE3, 0xBC, 0xB4, 0xE0, 0xB9, 0xB1, 0xDA, 0xB3, 
   0xAB, 0xD4, 0xAD, 0xA5, 0xD2, 0xAB, 0xA3, 0xD8, 0xB1, 0xA9, 0xDD, 0xB7, 0xAE, 0xD4, 0xB0, 0xA6, 
   0xCC, 0xA5, 0x9C, 0xD4, 0xAA, 0xA1, 0xD1, 0xA8, 0x9F, 0x95, 0x71, 0x67, 0x82, 0x61, 0x57, 0x79, 
   0x5D, 0x52, 0x7C, 0x65, 0x59, 0x6F, 0x59, 0x4E, 0x6C, 0x5A, 0x4F, 0x65, 0x55, 0x4B, 0x58, 0x49, 
   0x41, 0x59, 0x49, 0x43, 0x58, 0x45, 0x40, 0x65, 0x53, 0x4D, 0x6B, 0x5C, 0x54, 0x46, 0x39, 0x30, 
   0x55, 0x4B, 0x3F, 0x4E, 0x45, 0x39, 0x45, 0x3D, 0x31, 0x3B, 0x32, 0x26, 0x56, 0x46, 0x37, 0x78, 
   0x62, 0x51, 0x7C, 0x61, 0x53, 0x7C, 0x5F, 0x55, 0x7C, 0x60, 0x59, 0x7E, 0x66, 0x61, 0x6C, 0x59, 
   0x53, 0x37, 0x2B, 0x23, 0x5A, 0x51, 0x49, 0x80, 0x77, 0x6F, 0x67, 0x5D, 0x55, 0x63, 0x58, 0x51, 
   0x55, 0x4A, 0x43, 0x5A, 0x4D, 0x46, 0x5C, 0x4D, 0x46, 0x80, 0x6F, 0x68, 0x75, 0x61, 0x5B, 0x84, 
   0x6D, 0x68, 0x5A, 0x48, 0x41, 0x46, 0x36, 0x2F, 0x4D, 0x3F, 0x38, 0x4A, 0x3E, 0x38, 0x4C, 0x41, 
   0x3A, 0x47, 0x3E, 0x37, 0x5F, 0x57, 0x51, 0x48, 0x44, 0x3E, 0x53, 0x53, 0x4D, 0x37, 0x39, 0x32, 
   0x3B, 0x38, 0x33, 0x39, 0x32, 0x2D, 0x76, 0x6C, 0x68, 0x4D, 0x4D, 0x4B, 0x31, 0x2D, 0x2B, 0x98, 
   0x8F, 0x8A, 0xF9, 0xE7, 0xDF, 0xAA, 0x90, 0x88, 0x78, 0x58, 0x4E, 0x7C, 0x5B, 0x50, 0x82, 0x66, 
   0x59, 0x6E, 0x5B, 0x4E, 0x6F, 0x60, 0x57, 0x5C, 0x50, 0x4A, 0x4B, 0x3F, 0x3C, 0x3A, 0x2D, 0x2A, 
   0x42, 0x3B, 0x37, 0x49, 0x44, 0x40, 0x59, 0x55, 0x50, 0x42, 0x3F, 0x3A, 0x5D, 0x54, 0x50, 0x5E, 
   0x50, 0x4D, 0x49, 0x39, 0x36, 0x38, 0x28, 0x25, 0x43, 0x34, 0x30, 0x3F, 0x31, 0x2A, 0x39, 0x2B, 
   0x23, 0x53, 0x45, 0x3D, 0x40, 0x32, 0x29, 0x4A, 0x3F, 0x37, 0x66, 0x5A, 0x52, 0x6C, 0x5F, 0x57, 
   0x74, 0x63, 0x5C, 0x62, 0x50, 0x49, 0x56, 0x41, 0x3B, 0x5D, 0x4B, 0x41, 0x61, 0x52, 0x44, 0x66, 
   0x56, 0x49, 0x6B, 0x58, 0x4B, 0x49, 0x33, 0x27, 0x39, 0x22, 0x16, 0x65, 0x4E, 0x41, 0x65, 0x50, 
   0x3F, 0x74, 0x5F, 0x4E, 0x73, 0x5D, 0x4D, 0x73, 0x5E, 0x4F, 0x6E, 0x5A, 0x4E, 0x6C, 0x56, 0x4C, 
   0x62, 0x4D, 0x42, 0x62, 0x4F, 0x43, 0xEE, 0xCE, 0xC8, 0xE9, 0xC8, 0xC2, 0xE6, 0xC3, 0xBD, 0xE2, 
   0xBE, 0xB7, 0xE1, 0xBC, 0xB6, 0xDD, 0xB7, 0xB2, 0xD8, 0xB1, 0xAC, 0xDD, 0xB3, 0xAE, 0xDF, 0xB6, 
   0xB1, 0xE2, 0xBE, 0xB9, 0xE8, 0xC5, 0xC0, 0xEE, 0xD0, 0xC9, 0xED, 0xD0, 0xC9, 0xEF, 0xD2, 0xC9, 
   0xF3, 0xD4, 0xCB, 0xF3, 0xD4, 0xCE, 0xF4, 0xD7, 0xD2, 0xF1, 0xDA, 0xD7, 0xD8, 0xC7, 0xC6, 0xB5, 
   0xA9, 0xAA, 0xBF, 0xBA, 0xBD, 0xD4, 0xD0, 0xD2, 0xAE, 0xB0, 0xB1, 0x5F, 0x64, 0x65, 0x43, 0x4C, 
   0x4C, 0x36, 0x42, 0x42, 0x4C, 0x58, 0x5B, 0x51, 0x60, 0x63, 0x44, 0x57, 0x5C, 0x43, 0x56, 0x5C, 
   0x56, 0x68, 0x70, 0x4D, 0x59, 0x63, 0x42, 0x4C, 0x55, 0x49, 0x56, 0x5B, 0x4D, 0x5E, 0x61, 0x36, 
   0x49, 0x4E, 0x4B, 0x5E, 0x65, 0x56, 0x66, 0x6E, 0x4E, 0x59, 0x63, 0x54, 0x5E, 0x64, 0x46, 0x4F, 
   0x51, 0x2F, 0x33, 0x36, 0x42, 0x42, 0x43, 0x34, 0x2F, 0x31, 0x7C, 0x71, 0x73, 0xF7, 0xEB, 0xEB, 
   0xF7, 0xE3, 0xE2, 0xF8, 0xE4, 0xE2, 0xF4, 0xE1, 0xDE, 0xF4, 0xE1, 0xDC, 0xF6, 0xE3, 0xDD, 0xF5, 
   0xE3, 0xDB, 0xF1, 0xDF, 0xDB, 0xF7, 0xE8, 0xE7, 0xDC, 0xCD, 0xCE, 0x86, 0x7A, 0x7C, 0xB5, 0xAA, 
   0xAE, 0x96, 0x8E, 0x91, 0x70, 0x6A, 0x6D, 0x6B, 0x6E, 0x73, 0xC6, 0xC8, 0xCD, 0xA2, 0xA2, 0xA6, 
   0x64, 0x61, 0x63, 0x90, 0x8B, 0x8D, 0xE0, 0xDA, 0xDB, 0xD0, 0xC5, 0xC4, 0xD7, 0xC9, 0xC7, 0xEA, 
   0xDD, 0xDB, 0xF2, 0xE1, 0xE0, 0xD8, 0xC4, 0xC3, 0xBB, 0xA8, 0xA7, 0xEA, 0xD7, 0xD6, 0xF5, 0xDD, 
   0xDB, 0xF1, 0xDB, 0xD9, 0xEC, 0xDC, 0xD9, 0xB0, 0xA2, 0x9F, 0x77, 0x66, 0x63, 0x7C, 0x69, 0x67, 
   0xB4, 0x9B, 0x96, 0xBE, 0xA1, 0x99, 0xB8, 0x9A, 0x94, 0xC0, 0x9F, 0x99, 0xCF, 0xAD, 0xA7, 0xEC, 
   0xCA, 0xC4, 0xF0, 0xCC, 0xC6, 0xE7, 0xBF, 0xBF, 0xC9, 0xA5, 0xA5, 0xAE, 0x8E, 0x8E, 0xD4, 0xBA, 
   0xB8, 0xD8, 0xC4, 0xC2, 0xFA, 0xED, 0xEA, 0xA9, 0x9F, 0x9B, 0x99, 0x93, 0x8F, 0x93, 0x87, 0x84, 
   0x80, 0x71, 0x6E, 0xC6, 0xB4, 0xB1, 0xC0, 0xAA, 0xA8, 0xC2, 0xAA, 0xA8, 0xEA, 0xD4, 0xD2, 0xF2, 
   0xDA, 0xD8, 0xEF, 0xD8, 0xD6, 0xF1, 0xDB, 0xD9, 0xED, 0xDA, 0xD7, 0xEE, 0xDC, 0xD9, 0xEB, 0xD5, 
   0xD3, 0xF0, 0xD6, 0xD4, 0xEC, 0xD3, 0xD1, 0xEA, 0xD0, 0xCE, 0xE5, 0xCC, 0xCA, 0xE8, 0xCF, 0xCD, 
   0xF3, 0xDA, 0xD9, 0xF1, 0xDE, 0xD9, 0xF5, 0xE3, 0xDE, 0xF2, 0xDD, 0xD8, 0xEE, 0xD8, 0xD3, 0xEA, 
   0xD1, 0xCD, 0xE5, 0xCC, 0xC8, 0xC4, 0xAC, 0xA9, 0xCC, 0xB4, 0xB2, 0xDD, 0xC4, 0xC2, 0xD3, 0xB7, 
   0xB6, 0xF1, 0xD4, 0xD3, 0xEB, 0xCC, 0xCC, 0xEE, 0xD0, 0xCF, 0xEC, 0xD1, 0xCB, 0xE8, 0xCC, 0xC5, 
   0xEC, 0xD0, 0xC9, 0xEB, 0xCE, 0xC7, 0xED, 0xCD, 0xC7, 0xEC, 0xCC, 0xC6, 0xE8, 0xC9, 0xC2, 0xE3, 
   0xC5, 0xBF, 0xE5, 0xC2, 0xBC, 0xEC, 0xC4, 0xBF, 0xEB, 0xC3, 0xBF, 0xE9, 0xC3, 0xBD, 0xE5, 0xC0, 
   0xBA, 0xE3, 0xBB, 0xB6, 0xE3, 0xBB, 0xB6, 0xE4, 0xBC, 0xB7, 0xE5, 0xBD, 0xB8, 0xE6, 0xBD, 0xB8, 
   0xE7, 0xBF, 0xBA, 0xE6, 0xBF, 0xB8, 0xE2, 0xBB, 0xB2, 0xDA, 0xB3, 0xAB, 0xDC, 0xB5, 0xAD, 0xDA, 
   0xB3, 0xAB, 0xDF, 0xB8, 0xB0, 0xDB, 0xB4, 0xAC, 0xDD, 0xB6, 0xAE, 0xD9, 0xB2, 0xAA, 0xD3, 0xAC, 
   0xA4, 0xCC, 0xA5, 0x9D, 0xCE, 0xA7, 0x9F, 0xCF, 0xA7, 0x9F, 0xD1, 0xAB, 0xA2, 0xCD, 0xA8, 0x9E, 
   0xCE, 0xA6, 0x9D, 0xCF, 0xA6, 0x9D, 0xD5, 0xAC, 0xA3, 0x95, 0x73, 0x69, 0x79, 0x5B, 0x50, 0x78, 
   0x5F, 0x53, 0x7C, 0x66, 0x5A, 0x76, 0x60, 0x56, 0x6A, 0x58, 0x4E, 0x57, 0x48, 0x3F, 0x4C, 0x3F, 
   0x37, 0x48, 0x3B, 0x33, 0x51, 0x44, 0x3E, 0x51, 0x43, 0x3D, 0x66, 0x5A, 0x52, 0x5B, 0x51, 0x48, 
   0x6C, 0x64, 0x58, 0x4A, 0x43, 0x36, 0x41, 0x39, 0x2E, 0x41, 0x36, 0x2B, 0x59, 0x48, 0x3A, 0x70, 
   0x5A, 0x49, 0x77, 0x5D, 0x4F, 0x79, 0x5E, 0x55, 0x85, 0x6A, 0x63, 0x6D, 0x57, 0x52, 0x4B, 0x3A, 
   0x35, 0x50, 0x46, 0x3F, 0x3D, 0x35, 0x2E, 0x70, 0x67, 0x60, 0x59, 0x4F, 0x48, 0x5B, 0x4F, 0x48, 
   0x6E, 0x5E, 0x57, 0x6B, 0x5B, 0x54, 0x79, 0x69, 0x62, 0x6C, 0x5C, 0x55, 0x72, 0x62, 0x5B, 0x83, 
   0x73, 0x6D, 0x62, 0x52, 0x4C, 0x59, 0x4A, 0x44, 0x6A, 0x5B, 0x55, 0x52, 0x44, 0x3C, 0x49, 0x3E, 
   0x35, 0x4B, 0x40, 0x38, 0x61, 0x57, 0x50, 0x4F, 0x4C, 0x44, 0x4A, 0x48, 0x40, 0x51, 0x4F, 0x47, 
   0x48, 0x41, 0x39, 0x7A, 0x6B, 0x65, 0xE3, 0xD1, 0xCC, 0x7B, 0x70, 0x6D, 0x4E, 0x41, 0x3E, 0xBA, 
   0xA8, 0xA4, 0xE8, 0xCD, 0xC7, 0xC5, 0xA7, 0xA0, 0x8B, 0x67, 0x5E, 0x86, 0x64, 0x58, 0x77, 0x5A, 
   0x4E, 0x5B, 0x47, 0x3C, 0x6E, 0x60, 0x58, 0x58, 0x4E, 0x47, 0x44, 0x39, 0x34, 0x3D, 0x32, 0x2E, 
   0x39, 0x2F, 0x2B, 0x35, 0x2F, 0x2A, 0x4F, 0x4C, 0x46, 0x47, 0x43, 0x3E, 0x46, 0x3E, 0x3A, 0x47, 
   0x3A, 0x36, 0x3E, 0x2D, 0x2A, 0x47, 0x33, 0x30, 0x55, 0x41, 0x3C, 0x65, 0x52, 0x4D, 0x76, 0x64, 
   0x5C, 0x75, 0x63, 0x5A, 0x71, 0x60, 0x57, 0x45, 0x3B, 0x31, 0x4A, 0x3F, 0x35, 0x45, 0x38, 0x2F, 
   0x66, 0x57, 0x4E, 0x64, 0x55, 0x4C, 0x4C, 0x3B, 0x33, 0x4F, 0x40, 0x35, 0x5D, 0x51, 0x42, 0x69, 
   0x5D, 0x4F, 0x57, 0x48, 0x3B, 0x57, 0x47, 0x3A, 0x5B, 0x4A, 0x3D, 0x5C, 0x4B, 0x3D, 0x72, 0x62, 
   0x51, 0x65, 0x55, 0x44, 0x58, 0x48, 0x38, 0x6F, 0x5F, 0x51, 0x62, 0x51, 0x44, 0x43, 0x31, 0x26, 
   0x30, 0x1E, 0x13, 0x45, 0x33, 0x28, 0xEF, 0xCF, 0xC9, 0xE9, 0xC8, 0xC2, 0xE4, 0xC3, 0xBD, 0xE1, 
   0xBE, 0xB8, 0xE0, 0xBC, 0xB6, 0xDB, 0xB5, 0xB0, 0xD8, 0xB1, 0xAC, 0xDC, 0xB4, 0xAF, 0xDF, 0xB8, 
   0xB3, 0xE4, 0xC0, 0xBA, 0xEC, 0xC9, 0xC3, 0xEE, 0xCF, 0xC9, 0xED, 0xD1, 0xCA, 0xF2, 0xD5, 0xCD, 
   0xF4, 0xD7, 0xD0, 0xF8, 0xD9, 0xD4, 0xF6, 0xDB, 0xD8, 0xEA, 0xD4, 0xD3, 0xD6, 0xC8, 0xC8, 0xD9, 
   0xD0, 0xD1, 0xB8, 0xB4, 0xB8, 0x88, 0x87, 0x8B, 0x3C, 0x40, 0x43, 0x5E, 0x67, 0x6A, 0x69, 0x77, 
   0x79, 0x34, 0x44, 0x45, 0x3F, 0x4D, 0x51, 0x4A, 0x58, 0x5E, 0x42, 0x56, 0x5A, 0x54, 0x68, 0x6E, 
   0x53, 0x65, 0x6C, 0x55, 0x62, 0x6A, 0x40, 0x4A, 0x52, 0x43, 0x50, 0x54, 0x4A, 0x5B, 0x5E, 0x49, 
   0x5C, 0x61, 0x42, 0x55, 0x5A, 0x49, 0x58, 0x5E, 0x38, 0x41, 0x49, 0x47, 0x52, 0x56, 0x32, 0x3F, 
   0x40, 0x2F, 0x36, 0x37, 0x3D, 0x3C, 0x3D, 0x41, 0x3A, 0x3A, 0xC9, 0xBD, 0xBE, 0xFB, 0xEB, 0xEC, 
   0xF7, 0xE2, 0xE1, 0xF6, 0xE1, 0xDF, 0xF7, 0xE2, 0xE0, 0xF6, 0xE1, 0xDF, 0xF5, 0xE1, 0xDC, 0xF1, 
   0xDD, 0xD7, 0xF3, 0xDF, 0xDD, 0xF6, 0xE3, 0xE6, 0xCF, 0xBF, 0xC2, 0xD4, 0xC6, 0xCA, 0xDF, 0xD2, 
   0xD7, 0xB5, 0xAA, 0xB0, 0x67, 0x61, 0x66, 0x9F, 0xA4, 0xA8, 0xC6, 0xCA, 0xCC, 0x70, 0x71, 0x73, 
   0x86, 0x81, 0x82, 0xCC, 0xC4, 0xC5, 0xD1, 0xC6, 0xC6, 0xD9, 0xC6, 0xC5, 0xF0, 0xD9, 0xD7, 0xE8, 
   0xD5, 0xD2, 0xEB, 0xD9, 0xD6, 0xEF, 0xDD, 0xDB, 0xE3, 0xD1, 0xCF, 0xF1, 0xDD, 0xDB, 0xF4, 0xD5, 
   0xD5, 0xF0, 0xD6, 0xD4, 0xC7, 0xB3, 0xB1, 0x6A, 0x5B, 0x58, 0x63, 0x54, 0x51, 0x77, 0x68, 0x65, 
   0xAC, 0x94, 0x90, 0xC3, 0xA2, 0x9C, 0xB2, 0x93, 0x8D, 0xAB, 0x8C, 0x87, 0xD4, 0xB2, 0xAE, 0xF9, 
   0xD6, 0xD2, 0xEB, 0xC7, 0xC4, 0xDD, 0xB6, 0xB6, 0xDF, 0xBA, 0xBB, 0xC0, 0xA1, 0xA1, 0xB2, 0x9A, 
   0x98, 0xC3, 0xB3, 0xB0, 0xB4, 0xA9, 0xA5, 0xBD, 0xB6, 0xB2, 0x73, 0x6E, 0x69, 0x72, 0x69, 0x65, 
   0xBD, 0xB1, 0xAD, 0xE8, 0xD5, 0xD3, 0xE8, 0xD2, 0xD0, 0xFA, 0xE2, 0xE0, 0xF6, 0xDF, 0xDD, 0xEC, 
   0xD4, 0xD2, 0xF0, 0xD9, 0xD7, 0xED, 0xD7, 0xD5, 0xF0, 0xDD, 0xDA, 0xEE, 0xDB, 0xD8, 0xF0, 0xD9, 
   0xD7, 0xEC, 0xCF, 0xCE, 0xDE, 0xC2, 0xC1, 0xEB, 0xCF, 0xCE, 0xF3, 0xD7, 0xD6, 0xE9, 0xCD, 0xCC, 
   0xDF, 0xC3, 0xC2, 0xFB, 0xE8, 0xE3, 0xC1, 0xAE, 0xA9, 0xBF, 0xAC, 0xA7, 0xF2, 0xDF, 0xDA, 0xF0, 
   0xDA, 0xD6, 0xEE, 0xD5, 0xD0, 0xEE, 0xD8, 0xD5, 0xED, 0xD8, 0xD7, 0xDA, 0xC2, 0xC0, 0xE7, 0xCE, 
   0xCC, 0xEF, 0xD4, 0xD3, 0xED, 0xD0, 0xCF, 0xE8, 0xCA, 0xC8, 0xE9, 0xCD, 0xC6, 0xEC, 0xD0, 0xC9, 
   0xEB, 0xCE, 0xC7, 0xE9, 0xCB, 0xC5, 0xED, 0xCD, 0xC7, 0xEF, 0xCD, 0xC7, 0xE5, 0xC5, 0xBF, 0xDF, 
   0xC3, 0xBC, 0xDF, 0xBE, 0xB8, 0xE1, 0xBD, 0xB7, 0xE6, 0xBF, 0xBA, 0xE6, 0xBF, 0xBA, 0xE4, 0xBC, 
   0xB7, 0xE6, 0xBC, 0xB7, 0xE4, 0xBA, 0xB5, 0xDF, 0xB5, 0xB0, 0xE2, 0xB8, 0xB3, 0xE4, 0xBA, 0xB5, 
   0xE2, 0xB8, 0xB3, 0xE3, 0xBB, 0xB4, 0xE7, 0xC1, 0xB8, 0xE2, 0xBB, 0xB3, 0xDD, 0xB6, 0xAE, 0xDE, 
   0xB7, 0xAF, 0xE1, 0xBA, 0xB2, 0xE2, 0xBB, 0xB3, 0xDE, 0xB7, 0xAF, 0xD8, 0xB1, 0xA9, 0xD3, 0xAC, 
   0xA4, 0xCD, 0xA6, 0x9E, 0xCE, 0xA7, 0x9F, 0xD7, 0xAF, 0xA7, 0xD7, 0xB1, 0xA8, 0xD0, 0xAB, 0xA1, 
   0xC4, 0x9C, 0x93, 0xA5, 0x7C, 0x73, 0xA1, 0x79, 0x70, 0x8B, 0x6B, 0x60, 0x75, 0x5A, 0x4E, 0x7F, 
   0x66, 0x5C, 0x7F, 0x6B, 0x60, 0x6D, 0x5B, 0x51, 0x50, 0x40, 0x36, 0x50, 0x43, 0x3A, 0x40, 0x34, 
   0x2C, 0x47, 0x3B, 0x35, 0x53, 0x48, 0x43, 0x6B, 0x61, 0x5A, 0x5C, 0x55, 0x4E, 0x50, 0x49, 0x3F, 
   0x68, 0x61, 0x56, 0x5B, 0x54, 0x4A, 0x44, 0x3C, 0x33, 0x41, 0x35, 0x2B, 0x57, 0x46, 0x38, 0x70, 
   0x5A, 0x4A, 0x76, 0x5D, 0x50, 0x7F, 0x65, 0x5E, 0x6F, 0x57, 0x51, 0x4C, 0x3A, 0x34, 0x49, 0x3B, 
   0x35, 0x63, 0x59, 0x53, 0x53, 0x4D, 0x46, 0x4D, 0x46, 0x3F, 0x68, 0x5F, 0x58, 0x68, 0x5A, 0x52, 
   0x69, 0x57, 0x4F, 0x80, 0x6D, 0x65, 0x87, 0x75, 0x6D, 0x49, 0x3A, 0x31, 0x41, 0x37, 0x2D, 0x68, 
   0x5F, 0x57, 0x77, 0x69, 0x63, 0x88, 0x79, 0x73, 0x91, 0x82, 0x7C, 0x98, 0x88, 0x81, 0x7D, 0x6E, 
   0x67, 0x56, 0x46, 0x3E, 0x40, 0x34, 0x2C, 0x44, 0x3D, 0x35, 0x64, 0x5D, 0x56, 0x5A, 0x52, 0x4B, 
   0x3E, 0x30, 0x2A, 0xC9, 0xB1, 0xAD, 0xFD, 0xE2, 0xDE, 0xC1, 0xAD, 0xAA, 0xD3, 0xBC, 0xB9, 0xEE, 
   0xD2, 0xCE, 0xD4, 0xB5, 0xAF, 0xC1, 0x9D, 0x97, 0x9E, 0x78, 0x70, 0x7E, 0x5B, 0x51, 0x7A, 0x5F, 
   0x55, 0x6B, 0x57, 0x4C, 0x62, 0x55, 0x4C, 0x50, 0x46, 0x3F, 0x59, 0x4F, 0x49, 0x4E, 0x44, 0x3E, 
   0x56, 0x48, 0x45, 0x3E, 0x34, 0x30, 0x3B, 0x34, 0x30, 0x52, 0x4B, 0x46, 0x49, 0x3F, 0x3A, 0x4C, 
   0x3E, 0x3A, 0x64, 0x50, 0x4C, 0x94, 0x7E, 0x78, 0x66, 0x51, 0x4C, 0x54, 0x3E, 0x38, 0x72, 0x5E, 
   0x56, 0x5C, 0x47, 0x3E, 0x57, 0x44, 0x39, 0x4B, 0x40, 0x36, 0x47, 0x3B, 0x32, 0x49, 0x3C, 0x33, 
   0x57, 0x4A, 0x41, 0x4E, 0x41, 0x38, 0x3D, 0x30, 0x28, 0x44, 0x37, 0x2D, 0x4A, 0x3E, 0x32, 0x5E, 
   0x52, 0x46, 0x4C, 0x3F, 0x33, 0x4F, 0x40, 0x34, 0x3C, 0x2E, 0x22, 0x3F, 0x31, 0x24, 0x61, 0x54, 
   0x44, 0x66, 0x59, 0x49, 0x6E, 0x61, 0x53, 0x61, 0x52, 0x45, 0x44, 0x33, 0x27, 0x3C, 0x2B, 0x1E, 
   0x44, 0x33, 0x26, 0x4A, 0x3A, 0x2D, 0xEF, 0xD1, 0xCB, 0xE9, 0xCB, 0xC5, 0xE4, 0xC4, 0xBE, 0xDE, 
   0xBD, 0xB7, 0xDE, 0xBA, 0xB4, 0xDA, 0xB5, 0xAF, 0xD7, 0xB1, 0xAB, 0xDB, 0xB3, 0xAE, 0xDD, 0xB7, 
   0xB2, 0xE5, 0xC2, 0xBC, 0xEC, 0xCC, 0xC6, 0xEE, 0xD1, 0xCA, 0xED, 0xD1, 0xCA, 0xF3, 0xD7, 0xD0, 
   0xF8, 0xDB, 0xD4, 0xF5, 0xDA, 0xD5, 0xF4, 0xDC, 0xDA, 0xFA, 0xE8, 0xE8, 0xF5, 0xED, 0xEE, 0x94, 
   0x91, 0x93, 0x4F, 0x4E, 0x54, 0x5A, 0x5B, 0x61, 0x48, 0x4F, 0x53, 0x8A, 0x95, 0x99, 0x5E, 0x6D, 
   0x70, 0x39, 0x4A, 0x4D, 0x4C, 0x5A, 0x60, 0x48, 0x56, 0x5D, 0x50, 0x62, 0x69, 0x56, 0x6A, 0x70, 
   0x49, 0x5C, 0x62, 0x43, 0x50, 0x57, 0x3D, 0x49, 0x4F, 0x44, 0x52, 0x57, 0x47, 0x59, 0x5C, 0x53, 
   0x66, 0x69, 0x4C, 0x5D, 0x61, 0x3E, 0x49, 0x4E, 0x33, 0x3B, 0x40, 0x33, 0x3C, 0x3F, 0x2D, 0x38, 
   0x38, 0x37, 0x3C, 0x3C, 0x29, 0x25, 0x25, 0x7E, 0x74, 0x73, 0xFC, 0xED, 0xED, 0xF5, 0xE2, 0xE1, 
   0xF6, 0xE1, 0xDD, 0xF4, 0xDF, 0xDA, 0xF4, 0xDE, 0xDB, 0xF5, 0xDE, 0xDC, 0xF5, 0xDE, 0xDC, 0xF5, 
   0xDE, 0xDB, 0xF2, 0xDC, 0xDC, 0xE4, 0xCF, 0xD3, 0xDA, 0xC7, 0xCA, 0xE7, 0xD8, 0xDC, 0xE1, 0xD4, 
   0xD9, 0xAC, 0xA1, 0xA7, 0x80, 0x78, 0x7E, 0xD9, 0xDF, 0xE0, 0x79, 0x7D, 0x7E, 0x87, 0x86, 0x86, 
   0xCD, 0xC4, 0xC5, 0xE1, 0xD3, 0xD3, 0xDE, 0xCD, 0xCC, 0xF7, 0xDF, 0xDE, 0xF5, 0xD8, 0xD5, 0xF9, 
   0xE6, 0xE2, 0xD9, 0xC8, 0xC3, 0xAF, 0x9E, 0x99, 0xB2, 0x9E, 0x99, 0xC7, 0xAF, 0xAC, 0xE9, 0xC5, 
   0xC5, 0xD9, 0xBA, 0xB9, 0xCD, 0xB6, 0xB5, 0xA0, 0x8E, 0x8B, 0xA4, 0x94, 0x91, 0xCA, 0xBB, 0xB8, 
   0xC0, 0xA8, 0xA5, 0xD4, 0xB4, 0xB0, 0xDB, 0xBB, 0xB8, 0xE3, 0xC4, 0xC0, 0xEE, 0xCE, 0xCB, 0xEF, 
   0xD0, 0xCD, 0xDD, 0xBF, 0xBB, 0xD3, 0xB0, 0xB0, 0xCF, 0xAD, 0xAD, 0xB8, 0x9B, 0x9A, 0x95, 0x7F, 
   0x7D, 0x8C, 0x7C, 0x79, 0xA6, 0x9A, 0x96, 0xC7, 0xBF, 0xBB, 0xC5, 0xBF, 0xBA, 0xEB, 0xE1, 0xDD, 
   0xEF, 0xE2, 0xDF, 0xF3, 0xE0, 0xDE, 0xEE, 0xD8, 0xD6, 0xED, 0xD6, 0xD4, 0xF3, 0xDA, 0xD8, 0xF1, 
   0xD9, 0xD7, 0xF3, 0xDC, 0xDA, 0xF2, 0xDC, 0xDA, 0xD8, 0xC5, 0xC3, 0xC4, 0xB1, 0xAE, 0xE2, 0xCA, 
   0xC8, 0xE2, 0xC5, 0xC4, 0xEB, 0xD1, 0xD1, 0xDD, 0xC1, 0xC0, 0xD4, 0xB8, 0xB7, 0xCB, 0xAF, 0xAE, 
   0xE4, 0xC8, 0xC7, 0xC7, 0xB4, 0xB0, 0x76, 0x62, 0x5F, 0x6C, 0x57, 0x54, 0xB9, 0xA3, 0xA0, 0xC9, 
   0xB1, 0xAF, 0xE7, 0xCE, 0xCB, 0xBA, 0xA1, 0x9F, 0x8A, 0x71, 0x6F, 0xB7, 0x9E, 0x9D, 0xFA, 0xDE, 
   0xDD, 0xE7, 0xCA, 0xC9, 0xDF, 0xC1, 0xC0, 0xDA, 0xBC, 0xBB, 0xF5, 0xD9, 0xD2, 0xEA, 0xCD, 0xC6, 
   0xEE, 0xD0, 0xC9, 0xEB, 0xCB, 0xC5, 0xEA, 0xC8, 0xC2, 0xE5, 0xC3, 0xBD, 0xE4, 0xC3, 0xBD, 0xE7, 
   0xC8, 0xC2, 0xE6, 0xC6, 0xC0, 0xDB, 0xB8, 0xB2, 0xDC, 0xB6, 0xB1, 0xE2, 0xBA, 0xB5, 0xE4, 0xB9, 
   0xB4, 0xE4, 0xB9, 0xB4, 0xE1, 0xB7, 0xB2, 0xDC, 0xB2, 0xAD, 0xE0, 0xB6, 0xB1, 0xE8, 0xBD, 0xB8, 
   0xE4, 0xB9, 0xB5, 0xE0, 0xB7, 0xB1, 0xE3, 0xBC, 0xB4, 0xE2, 0xBB, 0xB3, 0xD8, 0xB1, 0xA9, 0xDA, 
   0xB3, 0xAB, 0xDE, 0xB7, 0xAF, 0xD9, 0xB2, 0xAA, 0xD1, 0xAA, 0xA2, 0xDD, 0xB6, 0xAE, 0xD5, 0xAE, 
   0xA6, 0xD5, 0xAE, 0xA6, 0xD3, 0xAC, 0xA4, 0xCD, 0xA6, 0x9E, 0xAB, 0x85, 0x7D, 0xC9, 0xA4, 0x9A, 
   0xC8, 0xA0, 0x97, 0x86, 0x5E, 0x55, 0x83, 0x5D, 0x54, 0x82, 0x64, 0x59, 0x77, 0x5E, 0x53, 0x76, 
   0x63, 0x57, 0x6B, 0x59, 0x4E, 0x58, 0x47, 0x3E, 0x4E, 0x40, 0x37, 0x4C, 0x3F, 0x37, 0x49, 0x3F, 
   0x37, 0x55, 0x4C, 0x46, 0x56, 0x4F, 0x4A, 0x57, 0x50, 0x4A, 0x4C, 0x47, 0x3F, 0x44, 0x3C, 0x35, 
   0x4F, 0x48, 0x3F, 0x44, 0x3E, 0x34, 0x51, 0x49, 0x3F, 0x43, 0x36, 0x2D, 0x56, 0x45, 0x39, 0x6D, 
   0x58, 0x4B, 0x76, 0x60, 0x54, 0x75, 0x5F, 0x58, 0x58, 0x41, 0x3C, 0x49, 0x3A, 0x36, 0x6A, 0x5F, 
   0x5B, 0x58, 0x52, 0x4D, 0x73, 0x6E, 0x69, 0x6C, 0x65, 0x61, 0x7C, 0x73, 0x6F, 0x9C, 0x8D, 0x86, 
   0x80, 0x6D, 0x65, 0x7C, 0x68, 0x5F, 0x79, 0x65, 0x5D, 0x5B, 0x4C, 0x43, 0x4B, 0x43, 0x39, 0x4A, 
   0x46, 0x3C, 0x5A, 0x4F, 0x4A, 0x7E, 0x70, 0x6C, 0x78, 0x68, 0x63, 0x75, 0x64, 0x5D, 0x8F, 0x7C, 
   0x75, 0x93, 0x80, 0x77, 0x6F, 0x5F, 0x56, 0x64, 0x56, 0x4F, 0x87, 0x79, 0x72, 0x91, 0x83, 0x7C, 
   0xB0, 0x9F, 0x98, 0xEB, 0xCF, 0xCA, 0xD9, 0xB7, 0xB3, 0xD4, 0xB4, 0xB1, 0xDB, 0xBA, 0xB6, 0xD7, 
   0xB5, 0xB0, 0xD4, 0xAF, 0xAA, 0xBE, 0x9A, 0x92, 0xA9, 0x81, 0x79, 0x91, 0x6E, 0x65, 0x81, 0x67, 
   0x5D, 0x69, 0x54, 0x4B, 0x4B, 0x3D, 0x35, 0x7A, 0x6F, 0x68, 0xA0, 0x93, 0x8C, 0x6A, 0x59, 0x53, 
   0x63, 0x51, 0x4E, 0x58, 0x4A, 0x46, 0x5D, 0x54, 0x50, 0x6C, 0x64, 0x60, 0x86, 0x7B, 0x77, 0x94, 
   0x84, 0x82, 0xB8, 0xA4, 0xA0, 0x9F, 0x88, 0x83, 0x67, 0x51, 0x4B, 0x7D, 0x68, 0x61, 0x87, 0x72, 
   0x69, 0x7C, 0x68, 0x5D, 0x63, 0x50, 0x44, 0x6B, 0x5E, 0x52, 0x55, 0x48, 0x3D, 0x54, 0x47, 0x3B, 
   0x55, 0x49, 0x3D, 0x47, 0x3B, 0x30, 0x40, 0x34, 0x28, 0x41, 0x35, 0x2A, 0x4F, 0x42, 0x39, 0x4E, 
   0x41, 0x37, 0x4C, 0x40, 0x36, 0x2E, 0x21, 0x18, 0x2F, 0x24, 0x19, 0x37, 0x2D, 0x21, 0x33, 0x29, 
   0x1C, 0x4D, 0x42, 0x35, 0x72, 0x66, 0x59, 0x53, 0x46, 0x39, 0x46, 0x37, 0x29, 0x3E, 0x2D, 0x20, 
   0x53, 0x43, 0x36, 0x66, 0x56, 0x49, 0xEE, 0xD1, 0xCA, 0xE8, 0xCC, 0xC5, 0xE6, 0xC7, 0xC1, 0xDD, 
   0xBD, 0xB7, 0xDC, 0xB9, 0xB3, 0xD8, 0xB5, 0xAF, 0xD5, 0xB1, 0xAB, 0xD7, 0xB0, 0xAC, 0xDA, 0xB5, 
   0xB0, 0xE5, 0xC3, 0xBD, 0xEC, 0xCC, 0xC6, 0xEE, 0xD2, 0xCB, 0xEE, 0xD4, 0xCD, 0xF2, 0xD9, 0xD2, 
   0xF8, 0xE0, 0xD9, 0xF6, 0xE0, 0xDB, 0xF7, 0xE4, 0xE2, 0xE2, 0xD7, 0xD5, 0x71, 0x70, 0x70, 0x36, 
   0x39, 0x3B, 0x57, 0x5D, 0x62, 0x79, 0x81, 0x85, 0x4E, 0x58, 0x5C, 0x6B, 0x76, 0x7A, 0x50, 0x5F, 
   0x62, 0x41, 0x51, 0x54, 0x4B, 0x57, 0x5F, 0x46, 0x53, 0x5C, 0x51, 0x62, 0x6A, 0x51, 0x65, 0x6B, 
   0x51, 0x65, 0x69, 0x4A, 0x58, 0x5D, 0x65, 0x71, 0x76, 0x36, 0x45, 0x4B, 0x45, 0x57, 0x5B, 0x62, 
   0x75, 0x78, 0x64, 0x74, 0x76, 0x46, 0x51, 0x53, 0x35, 0x3C, 0x3E, 0x32, 0x37, 0x38, 0x44, 0x48, 
   0x48, 0x41, 0x3F, 0x40, 0x3B, 0x32, 0x32, 0xD3, 0xCA, 0xCA, 0xFD, 0xED, 0xED, 0xED, 0xD8, 0xD7, 
   0xF7, 0xE1, 0xDC, 0xF7, 0xE1, 0xDB, 0xF4, 0xDE, 0xDA, 0xF5, 0xDE, 0xDC, 0xF5, 0xDE, 0xDD, 0xF5, 
   0xDE, 0xDD, 0xF1, 0xDA, 0xD9, 0xED, 0xDA, 0xDB, 0xE3, 0xD1, 0xD3, 0xF1, 0xE2, 0xE5, 0xD4, 0xC6, 
   0xCA, 0x79, 0x6D, 0x72, 0xB3, 0xAA, 0xAD, 0xC1, 0xC1, 0xC2, 0x71, 0x6E, 0x6F, 0x93, 0x8B, 0x8B, 
   0xE2, 0xD5, 0xD4, 0xEB, 0xD8, 0xD7, 0xEF, 0xDA, 0xD8, 0xF4, 0xD7, 0xD5, 0xFB, 0xDA, 0xD7, 0xDE, 
   0xCA, 0xC5, 0x98, 0x85, 0x80, 0x70, 0x5D, 0x58, 0x94, 0x7D, 0x78, 0xD7, 0xB9, 0xB6, 0xCE, 0xA5, 
   0xA6, 0xE5, 0xC1, 0xC2, 0xEE, 0xD4, 0xD2, 0xCF, 0xB8, 0xB6, 0xD5, 0xC0, 0xBE, 0xDB, 0xC6, 0xC4, 
   0xC2, 0xA8, 0xA6, 0xC5, 0xA6, 0xA4, 0xC7, 0xA9, 0xA7, 0xE5, 0xC8, 0xC6, 0xEE, 0xD2, 0xD0, 0xE3, 
   0xC9, 0xC7, 0xD2, 0xBB, 0xB8, 0xBF, 0xA2, 0xA1, 0xCC, 0xB1, 0xAF, 0xD7, 0xBF, 0xBD, 0xE9, 0xD5, 
   0xD2, 0xF4, 0xE3, 0xE0, 0xEA, 0xDC, 0xD9, 0xED, 0xE1, 0xDD, 0xF4, 0xE6, 0xE3, 0xF1, 0xE3, 0xDF, 
   0xE1, 0xD0, 0xCD, 0xC8, 0xB5, 0xB1, 0xD5, 0xBF, 0xBD, 0xD7, 0xC1, 0xBF, 0xED, 0xD4, 0xD2, 0xE6, 
   0xCE, 0xCC, 0xC1, 0xAA, 0xA8, 0x84, 0x6E, 0x6C, 0x99, 0x86, 0x83, 0x9A, 0x88, 0x85, 0x89, 0x73, 
   0x71, 0x91, 0x76, 0x75, 0xC8, 0xB1, 0xB0, 0xBF, 0xA5, 0xA3, 0xC6, 0xAC, 0xAA, 0xC2, 0xA8, 0xA7, 
   0xA4, 0x8A, 0x88, 0x95, 0x7F, 0x7D, 0x9F, 0x89, 0x87, 0xCE, 0xB6, 0xB4, 0xCD, 0xB4, 0xB3, 0xD1, 
   0xB6, 0xB4, 0xD8, 0xBD, 0xBB, 0xCA, 0xAF, 0xAE, 0xBC, 0xA2, 0xA1, 0xE3, 0xC7, 0xC6, 0xEC, 0xCF, 
   0xCE, 0xC3, 0xA4, 0xA3, 0xBC, 0x9C, 0x9C, 0xC7, 0xA7, 0xA6, 0xCD, 0xB0, 0xA9, 0xC1, 0xA4, 0x9D, 
   0xD7, 0xB8, 0xB2, 0xF3, 0xD3, 0xCD, 0xED, 0xCA, 0xC4, 0xE8, 0xC5, 0xBF, 0xE0, 0xBD, 0xB7, 0xE2, 
   0xBF, 0xBA, 0xE1, 0xC0, 0xB9, 0xE6, 0xC6, 0xC0, 0xDA, 0xB6, 0xB1, 0xDD, 0xB5, 0xB0, 0xDC, 0xB1, 
   0xAC, 0xDF, 0xB5, 0xB1, 0xDF, 0xB6, 0xB1, 0xDB, 0xB2, 0xAD, 0xE4, 0xBB, 0xB6, 0xE3, 0xBA, 0xB6, 
   0xE1, 0xB8, 0xB3, 0xDD, 0xB6, 0xAF, 0xD9, 0xB2, 0xAA, 0xDD, 0xB6, 0xAE, 0xE0, 0xB9, 0xB1, 0xDD, 
   0xB6, 0xAE, 0xDA, 0xB3, 0xAB, 0xD5, 0xAE, 0xA6, 0xD5, 0xAE, 0xA6, 0xE2, 0xBB, 0xB3, 0xD6, 0xAF, 
   0xA7, 0xD1, 0xAA, 0xA2, 0xCA, 0xA3, 0x9B, 0xCA, 0xA2, 0x9B, 0xB9, 0x92, 0x8A, 0xCF, 0xA8, 0x9F, 
   0xD2, 0xAA, 0xA1, 0x9E, 0x77, 0x6E, 0x85, 0x61, 0x58, 0x87, 0x6A, 0x5F, 0x74, 0x5D, 0x51, 0x61, 
   0x4F, 0x45, 0x58, 0x46, 0x3C, 0x4F, 0x40, 0x37, 0x61, 0x53, 0x4C, 0x57, 0x4C, 0x46, 0x3C, 0x33, 
   0x2E, 0x61, 0x5A, 0x55, 0x7C, 0x76, 0x72, 0x4C, 0x46, 0x41, 0x5B, 0x54, 0x4E, 0x4E, 0x47, 0x40, 
   0x71, 0x68, 0x60, 0x66, 0x5D, 0x55, 0x4D, 0x43, 0x3B, 0x37, 0x2A, 0x22, 0x56, 0x45, 0x3A, 0x6D, 
   0x59, 0x4C, 0x6F, 0x59, 0x4E, 0x67, 0x53, 0x4C, 0x6F, 0x5C, 0x57, 0x56, 0x49, 0x46, 0x49, 0x41, 
   0x3C, 0x44, 0x40, 0x3B, 0x4A, 0x46, 0x42, 0x52, 0x4D, 0x48, 0x77, 0x6D, 0x69, 0x88, 0x7B, 0x75, 
   0x9E, 0x8B, 0x83, 0x83, 0x6D, 0x66, 0x8A, 0x73, 0x6C, 0x70, 0x5E, 0x56, 0x5F, 0x57, 0x4E, 0x58, 
   0x57, 0x4C, 0x47, 0x3C, 0x39, 0x60, 0x53, 0x50, 0x66, 0x58, 0x53, 0x66, 0x53, 0x4C, 0x7D, 0x68, 
   0x5F, 0x9C, 0x85, 0x7A, 0xAA, 0x93, 0x8A, 0xD3, 0xBD, 0xB7, 0xE7, 0xD3, 0xCC, 0xEF, 0xDA, 0xD4, 
   0xF1, 0xDB, 0xD5, 0xDD, 0xBB, 0xB6, 0xD3, 0xAE, 0xAA, 0xD6, 0xAF, 0xAA, 0xD1, 0xAA, 0xA5, 0xCF, 
   0xA9, 0xA3, 0xCF, 0xA9, 0xA2, 0xBE, 0x99, 0x91, 0xA9, 0x83, 0x7B, 0x9B, 0x7A, 0x72, 0x86, 0x6B, 
   0x63, 0x7B, 0x66, 0x5E, 0x6A, 0x59, 0x51, 0x99, 0x88, 0x7F, 0x99, 0x84, 0x7C, 0x87, 0x6F, 0x68, 
   0x69, 0x54, 0x51, 0xBD, 0xAB, 0xA9, 0x6A, 0x5D, 0x5A, 0x3E, 0x34, 0x30, 0x7F, 0x73, 0x70, 0xBD, 
   0xAD, 0xAA, 0xA7, 0x93, 0x8F, 0x7E, 0x68, 0x62, 0x56, 0x41, 0x3A, 0x83, 0x6E, 0x66, 0x90, 0x7B, 
   0x71, 0x88, 0x74, 0x68, 0x80, 0x6D, 0x60, 0x7C, 0x6A, 0x5E, 0x55, 0x46, 0x39, 0x5E, 0x4E, 0x41, 
   0x71, 0x63, 0x57, 0x6A, 0x5E, 0x51, 0x60, 0x54, 0x46, 0x4C, 0x3E, 0x34, 0x4D, 0x3D, 0x35, 0x55, 
   0x47, 0x3E, 0x4B, 0x3D, 0x34, 0x43, 0x36, 0x2D, 0x37, 0x2C, 0x22, 0x2E, 0x24, 0x1A, 0x2D, 0x24, 
   0x19, 0x5D, 0x53, 0x48, 0x59, 0x4C, 0x41, 0x3B, 0x2C, 0x20, 0x3B, 0x2B, 0x1D, 0x3B, 0x29, 0x1C, 
   0x69, 0x56, 0x49, 0x6A, 0x58, 0x49, 0xE6, 0xC9, 0xC2, 0xE9, 0xCD, 0xC6, 0xE5, 0xC7, 0xC0, 0xDE, 
   0xBF, 0xB9, 0xD8, 0xB7, 0xB1, 0xD5, 0xB2, 0xAC, 0xD4, 0xB1, 0xAB, 0xD4, 0xAE, 0xA9, 0xDA, 0xB6, 
   0xB0, 0xE7, 0xC6, 0xC0, 0xEC, 0xCD, 0xC6, 0xEE, 0xD3, 0xCC, 0xF1, 0xD7, 0xD0, 0xF2, 0xDC, 0xD6, 
   0xF1, 0xDE, 0xD7, 0xF4, 0xE3, 0xDE, 0xFF, 0xF5, 0xF3, 0xB6, 0xB4, 0xB3, 0x32, 0x38, 0x38, 0x39, 
   0x44, 0x45, 0x4B, 0x5A, 0x5F, 0x45, 0x54, 0x58, 0x54, 0x62, 0x67, 0x4A, 0x57, 0x5C, 0x3E, 0x4C, 
   0x50, 0x32, 0x3F, 0x44, 0x3A, 0x45, 0x4E, 0x50, 0x5C, 0x67, 0x63, 0x75, 0x7D, 0x48, 0x5B, 0x61, 
   0x41, 0x55, 0x59, 0x53, 0x62, 0x65, 0x5A, 0x66, 0x6A, 0x33, 0x41, 0x47, 0x4D, 0x5E, 0x63, 0x4E, 
   0x61, 0x63, 0x3A, 0x49, 0x4B, 0x4B, 0x56, 0x57, 0x31, 0x36, 0x36, 0x3C, 0x3B, 0x3C, 0x45, 0x3F, 
   0x41, 0x76, 0x6D, 0x6E, 0xAF, 0xA2, 0xA2, 0xFC, 0xEC, 0xEC, 0xF1, 0xDD, 0xDB, 0xF5, 0xDF, 0xDD, 
   0xF4, 0xDD, 0xD8, 0xF4, 0xDE, 0xD8, 0xF6, 0xDF, 0xDB, 0xF5, 0xDD, 0xDB, 0xF6, 0xDE, 0xDD, 0xF7, 
   0xDD, 0xDE, 0xF6, 0xE0, 0xE0, 0xF1, 0xDD, 0xDC, 0xF8, 0xE6, 0xE5, 0xBC, 0xAD, 0xAC, 0x9B, 0x8E, 
   0x8F, 0xBB, 0xAF, 0xB2, 0xD2, 0xCA, 0xCC, 0x9A, 0x94, 0x94, 0xAC, 0xA3, 0xA3, 0xDD, 0xD3, 0xD1, 
   0xE4, 0xD3, 0xD1, 0xF0, 0xD9, 0xD6, 0xEB, 0xD2, 0xCF, 0xF1, 0xD1, 0xCE, 0xEC, 0xCA, 0xC6, 0xC1, 
   0xA8, 0xA3, 0xCB, 0xB8, 0xB2, 0xAA, 0x96, 0x90, 0xCE, 0xB2, 0xAD, 0xDD, 0xB9, 0xB6, 0xEF, 0xC2, 
   0xC4, 0xEF, 0xC8, 0xC9, 0xE9, 0xC8, 0xC8, 0xE6, 0xC9, 0xC8, 0xE3, 0xC9, 0xC7, 0xE4, 0xC7, 0xC6, 
   0xF0, 0xD2, 0xD2, 0xEC, 0xD0, 0xD0, 0xE7, 0xCC, 0xCB, 0xED, 0xD3, 0xD2, 0xE9, 0xD2, 0xD1, 0xC5, 
   0xAF, 0xAD, 0xA1, 0x8C, 0x8B, 0xBD, 0xA8, 0xA6, 0xD6, 0xC1, 0xBE, 0xF5, 0xE1, 0xDE, 0xEB, 0xD8, 
   0xD5, 0xE9, 0xD7, 0xD4, 0xEC, 0xDB, 0xD8, 0xD9, 0xC6, 0xC4, 0xC6, 0xB0, 0xAE, 0xD5, 0xC0, 0xBD, 
   0xAE, 0x99, 0x96, 0xA0, 0x8B, 0x88, 0xCE, 0xB9, 0xB7, 0xD3, 0xBE, 0xBC, 0xE8, 0xCF, 0xCD, 0xED, 
   0xD5, 0xD3, 0xAD, 0x96, 0x94, 0x5A, 0x44, 0x42, 0x5C, 0x49, 0x46, 0x95, 0x83, 0x80, 0x6A, 0x54, 
   0x52, 0x85, 0x6C, 0x6B, 0xC1, 0xA8, 0xA6, 0xEB, 0xD3, 0xD1, 0xEA, 0xD3, 0xD1, 0xDB, 0xC4, 0xC2, 
   0xC5, 0xAC, 0xAB, 0xE2, 0xC9, 0xC7, 0xE3, 0xC9, 0xC8, 0xF2, 0xD7, 0xD6, 0xDC, 0xC0, 0xBF, 0xB4, 
   0x97, 0x97, 0xA2, 0x82, 0x82, 0xC0, 0xA2, 0xA1, 0xCF, 0xB1, 0xB1, 0xD2, 0xB2, 0xB2, 0xF2, 0xD3, 
   0xD3, 0xEC, 0xCA, 0xCA, 0xE7, 0xC3, 0xC3, 0xE5, 0xC1, 0xC1, 0xD9, 0xBA, 0xB4, 0xE1, 0xC2, 0xBB, 
   0xC9, 0xA8, 0xA3, 0xE9, 0xC7, 0xC1, 0xE7, 0xC3, 0xBD, 0xE6, 0xC3, 0xBC, 0xE8, 0xC1, 0xBC, 0xE0, 
   0xB9, 0xB4, 0xE0, 0xBC, 0xB6, 0xE4, 0xC4, 0xBE, 0xDA, 0xBA, 0xB3, 0xD0, 0xAB, 0xA6, 0xD7, 0xAF, 
   0xAA, 0xD2, 0xAC, 0xA6, 0xD4, 0xAE, 0xA8, 0xDD, 0xB7, 0xB1, 0xDE, 0xB7, 0xB2, 0xE1, 0xBB, 0xB5, 
   0xE0, 0xBA, 0xB5, 0xD8, 0xB2, 0xAB, 0xD8, 0xB1, 0xA9, 0xDC, 0xB5, 0xAD, 0xDD, 0xB6, 0xAE, 0xD8, 
   0xB1, 0xA9, 0xDD, 0xB6, 0xAE, 0xD7, 0xB0, 0xA8, 0xD7, 0xB0, 0xA8, 0xDD, 0xB6, 0xAE, 0xD4, 0xAD, 
   0xA5, 0xD7, 0xB0, 0xA8, 0xD1, 0xAA, 0xA2, 0xD0, 0xAA, 0xA1, 0xCF, 0xA7, 0xA0, 0xD3, 0xAC, 0xA3, 
   0xCC, 0xA5, 0x9C, 0xD2, 0xAB, 0xA2, 0xA3, 0x80, 0x76, 0x83, 0x6A, 0x5E, 0x59, 0x46, 0x39, 0x61, 
   0x51, 0x46, 0x5E, 0x4E, 0x45, 0x58, 0x4A, 0x42, 0x6A, 0x5F, 0x57, 0x6D, 0x64, 0x5E, 0x47, 0x3F, 
   0x3B, 0x48, 0x43, 0x3F, 0x48, 0x41, 0x3E, 0x4F, 0x48, 0x45, 0x43, 0x3A, 0x36, 0x4B, 0x42, 0x3B, 
   0x64, 0x58, 0x51, 0x6D, 0x61, 0x5A, 0x5F, 0x52, 0x4C, 0x44, 0x38, 0x2F, 0x5B, 0x4A, 0x3F, 0x6C, 
   0x58, 0x4C, 0x6C, 0x58, 0x4D, 0x60, 0x4E, 0x47, 0x51, 0x3F, 0x3B, 0x3D, 0x34, 0x30, 0x49, 0x44, 
   0x40, 0x5D, 0x5B, 0x56, 0x5B, 0x59, 0x55, 0x41, 0x3C, 0x38, 0x41, 0x37, 0x34, 0x5C, 0x50, 0x4B, 
   0x6A, 0x5A, 0x53, 0x83, 0x6C, 0x67, 0x80, 0x66, 0x61, 0x4B, 0x37, 0x32, 0x5C, 0x52, 0x49, 0x44, 
   0x41, 0x38, 0x54, 0x4B, 0x4A, 0x4E, 0x42, 0x40, 0x5C, 0x4D, 0x49, 0x8A, 0x76, 0x6F, 0x93, 0x7B, 
   0x72, 0xA8, 0x8F, 0x83, 0xB2, 0x95, 0x8D, 0xD7, 0xB7, 0xB2, 0xD1, 0xB6, 0xB0, 0xD3, 0xB8, 0xB2, 
   0xD4, 0xB5, 0xB0, 0xCC, 0xA9, 0xA4, 0xD0, 0xA9, 0xA5, 0xD9, 0xAC, 0xA7, 0xCE, 0xA1, 0x9B, 0xD4, 
   0xA9, 0xA2, 0xC2, 0x9C, 0x93, 0xB0, 0x8B, 0x83, 0xA4, 0x7F, 0x78, 0x9F, 0x80, 0x78, 0x84, 0x6C, 
   0x65, 0x7C, 0x66, 0x5E, 0x8C, 0x77, 0x6F, 0x9C, 0x83, 0x7B, 0xA9, 0x8B, 0x84, 0x8B, 0x68, 0x62, 
   0x6D, 0x54, 0x52, 0x83, 0x6F, 0x6C, 0x76, 0x67, 0x64, 0x3A, 0x2E, 0x2A, 0x3F, 0x33, 0x2F, 0xAB, 
   0x9B, 0x99, 0xA5, 0x91, 0x8D, 0x7C, 0x67, 0x60, 0x50, 0x3C, 0x34, 0x51, 0x3E, 0x34, 0x75, 0x62, 
   0x57, 0x7C, 0x69, 0x5C, 0x77, 0x65, 0x58, 0x7E, 0x69, 0x5D, 0x5E, 0x4A, 0x3E, 0x6C, 0x59, 0x4D, 
   0x75, 0x63, 0x56, 0x60, 0x51, 0x44, 0x3E, 0x31, 0x22, 0x31, 0x20, 0x15, 0x3C, 0x2A, 0x23, 0x40, 
   0x2F, 0x27, 0x40, 0x30, 0x28, 0x44, 0x36, 0x2D, 0x3B, 0x2F, 0x26, 0x34, 0x29, 0x20, 0x38, 0x2E, 
   0x26, 0x45, 0x39, 0x31, 0x30, 0x21, 0x17, 0x33, 0x23, 0x17, 0x44, 0x30, 0x24, 0x5F, 0x49, 0x3C, 
   0x61, 0x4B, 0x3D, 0x6A, 0x56, 0x47, 0xDE, 0xC2, 0xBB, 0xE9, 0xCD, 0xC6, 0xE5, 0xC9, 0xC2, 0xDD, 
   0xBF, 0xB8, 0xD4, 0xB3, 0xAD, 0xD0, 0xAE, 0xA8, 0xD1, 0xAE, 0xA8, 0xD0, 0xAB, 0xA6, 0xD8, 0xB5, 
   0xAF, 0xE8, 0xC9, 0xC3, 0xEC, 0xCF, 0xC8, 0xED, 0xD2, 0xCB, 0xF0, 0xD6, 0xCF, 0xEE, 0xDD, 0xD6, 
   0xEA, 0xDC, 0xD6, 0xF3, 0xE6, 0xE1, 0xF1, 0xEA, 0xE8, 0x6A, 0x6C, 0x6C, 0x3C, 0x48, 0x47, 0x3F, 
   0x51, 0x52, 0x3C, 0x51, 0x56, 0x4D, 0x61, 0x66, 0x4A, 0x5B, 0x61, 0x4D, 0x5C, 0x62, 0x36, 0x42, 
   0x48, 0x36, 0x41, 0x47, 0x3F, 0x48, 0x53, 0x58, 0x64, 0x6F, 0x52, 0x64, 0x6C, 0x47, 0x5B, 0x61, 
   0x42, 0x56, 0x59, 0x4E, 0x5D, 0x60, 0x43, 0x50, 0x52, 0x38, 0x47, 0x4C, 0x46, 0x59, 0x5D, 0x51, 
   0x63, 0x65, 0x42, 0x51, 0x52, 0x4C, 0x56, 0x55, 0x33, 0x38, 0x37, 0x46, 0x40, 0x41, 0x9F, 0x90, 
   0x93, 0xE9, 0xDB, 0xDD, 0xFF, 0xF0, 0xF0, 0xEE, 0xDA, 0xD9, 0xF4, 0xE0, 0xDE, 0xF7, 0xE1, 0xDE, 
   0xF7, 0xDF, 0xD8, 0xF8, 0xE0, 0xD9, 0xF7, 0xDE, 0xD9, 0xF5, 0xDC, 0xDA, 0xF6, 0xDC, 0xDD, 0xF9, 
   0xDD, 0xE1, 0xF7, 0xE1, 0xE1, 0xF6, 0xE3, 0xDF, 0xED, 0xDA, 0xD6, 0xAE, 0x9E, 0x9C, 0xAC, 0xA0, 
   0x9E, 0xB8, 0xAE, 0xAE, 0x96, 0x8B, 0x8C, 0x9B, 0x8D, 0x8D, 0xE8, 0xDA, 0xDA, 0xEC, 0xDA, 0xD9, 
   0xED, 0xD7, 0xD5, 0xED, 0xD3, 0xCF, 0xEF, 0xD2, 0xCE, 0xF5, 0xD6, 0xD1, 0xF5, 0xD5, 0xD0, 0xE8, 
   0xD1, 0xCB, 0xDE, 0xCC, 0xC4, 0xE3, 0xCD, 0xC6, 0xE7, 0xC7, 0xC2, 0xF3, 0xC9, 0xC6, 0xF5, 0xC7, 
   0xC9, 0xEE, 0xC5, 0xC6, 0xEE, 0xCA, 0xCA, 0xEA, 0xC9, 0xC9, 0xEB, 0xCA, 0xC9, 0xE8, 0xC2, 0xC2, 
   0xDF, 0xBF, 0xBF, 0xB2, 0x9A, 0x9B, 0x88, 0x71, 0x72, 0x86, 0x70, 0x70, 0xBC, 0xA9, 0xA9, 0xAD, 
   0x9B, 0x9B, 0x98, 0x88, 0x87, 0xDB, 0xCC, 0xC9, 0xD8, 0xC7, 0xC4, 0xB5, 0xA3, 0xA0, 0xC5, 0xB3, 
   0xB0, 0xD3, 0xBF, 0xBD, 0xAB, 0x98, 0x95, 0x90, 0x76, 0x75, 0xB3, 0x95, 0x94, 0xCD, 0xB1, 0xB0, 
   0xDB, 0xC1, 0xBF, 0xD5, 0xBF, 0xBD, 0xE1, 0xCD, 0xCB, 0x99, 0x86, 0x83, 0x8E, 0x76, 0x74, 0xAD, 
   0x95, 0x93, 0xBE, 0xA7, 0xA5, 0xCB, 0xB5, 0xB3, 0xC7, 0xB5, 0xB2, 0xE2, 0xD0, 0xCD, 0xD7, 0xC3, 
   0xC0, 0x99, 0x83, 0x81, 0xAB, 0x95, 0x93, 0xD2, 0xBC, 0xBA, 0xC3, 0xAD, 0xAB, 0xB3, 0x9D, 0x9B, 
   0xB8, 0xA2, 0xA0, 0x97, 0x7B, 0x7B, 0xDD, 0xBF, 0xC0, 0xE8, 0xC8, 0xC9, 0xE0, 0xBF, 0xC1, 0xC7, 
   0xA6, 0xA7, 0xDB, 0xB7, 0xB9, 0xDF, 0xBC, 0xBD, 0xC0, 0x9F, 0x9E, 0xCB, 0xA8, 0xA8, 0xF5, 0xD0, 
   0xD0, 0xEF, 0xC9, 0xC9, 0xF1, 0xCA, 0xCB, 0xF1, 0xC9, 0xCA, 0xEA, 0xC9, 0xC4, 0xE3, 0xC3, 0xBD, 
   0xEB, 0xCA, 0xC4, 0xE0, 0xBE, 0xB8, 0xE4, 0xC0, 0xBA, 0xE4, 0xC0, 0xBB, 0xDE, 0xB3, 0xAF, 0xEC, 
   0xC0, 0xBB, 0xDA, 0xB4, 0xAE, 0xD7, 0xB7, 0xB1, 0xD3, 0xB6, 0xAF, 0xBD, 0x9C, 0x96, 0xBD, 0x98, 
   0x93, 0xBD, 0x99, 0x93, 0xD5, 0xB2, 0xAC, 0xD3, 0xB0, 0xAA, 0xE5, 0xC1, 0xBB, 0xE6, 0xC3, 0xBC, 
   0xDD, 0xB9, 0xB4, 0xD4, 0xAF, 0xA8, 0xDB, 0xB3, 0xAB, 0xDA, 0xB3, 0xAB, 0xD6, 0xAF, 0xA7, 0xD9, 
   0xB2, 0xAA, 0xDD, 0xB6, 0xAE, 0xC7, 0xA0, 0x98, 0xD0, 0xA9, 0xA1, 0xD8, 0xB1, 0xA9, 0xD4, 0xAD, 
   0xA5, 0xD1, 0xAA, 0xA2, 0xCB, 0xA4, 0x9C, 0xCD, 0xA6, 0x9E, 0xCC, 0xA6, 0x9D, 0xD4, 0xAC, 0xA4, 
   0xCC, 0xA3, 0x9A, 0xCA, 0xA3, 0x9A, 0xB0, 0x8D, 0x83, 0x7E, 0x67, 0x5B, 0x66, 0x56, 0x49, 0x5E, 
   0x50, 0x46, 0x4B, 0x3D, 0x35, 0x4B, 0x3E, 0x36, 0x5C, 0x52, 0x4A, 0x7B, 0x73, 0x6D, 0x75, 0x70, 
   0x6B, 0x56, 0x51, 0x4D, 0x3E, 0x36, 0x34, 0x62, 0x59, 0x56, 0x71, 0x67, 0x63, 0x45, 0x38, 0x33, 
   0x4A, 0x3B, 0x35, 0x66, 0x56, 0x4F, 0x5A, 0x4B, 0x46, 0x59, 0x4D, 0x45, 0x65, 0x53, 0x4A, 0x6F, 
   0x5B, 0x4F, 0x4B, 0x37, 0x2E, 0x42, 0x30, 0x2A, 0x44, 0x35, 0x31, 0x46, 0x40, 0x3D, 0x5D, 0x5A, 
   0x57, 0x69, 0x68, 0x64, 0x5C, 0x5C, 0x58, 0x50, 0x4B, 0x48, 0x4A, 0x40, 0x3E, 0x4A, 0x40, 0x3C, 
   0x66, 0x5A, 0x54, 0x9B, 0x84, 0x80, 0x83, 0x67, 0x63, 0x70, 0x59, 0x55, 0x44, 0x38, 0x32, 0x3D, 
   0x38, 0x32, 0x76, 0x6E, 0x6D, 0xA9, 0x9E, 0x9D, 0xBC, 0xAD, 0xA9, 0x8D, 0x77, 0x70, 0xAF, 0x95, 
   0x8C, 0xB6, 0x9A, 0x8F, 0xC0, 0x9D, 0x95, 0xD2, 0xAB, 0xA6, 0xD9, 0xB8, 0xB2, 0xE1, 0xC3, 0xBC, 
   0xC8, 0xA8, 0xA2, 0xC8, 0xA4, 0x9E, 0xC9, 0xA3, 0x9D, 0xD1, 0xA1, 0x99, 0xCE, 0x9E, 0x96, 0xC4, 
   0x98, 0x91, 0xBF, 0x98, 0x90, 0xAA, 0x85, 0x7D, 0x9B, 0x77, 0x71, 0x89, 0x6B, 0x66, 0x92, 0x7A, 
   0x74, 0x88, 0x71, 0x6B, 0x86, 0x6B, 0x64, 0x99, 0x79, 0x73, 0xAA, 0x84, 0x7E, 0xB9, 0x8D, 0x88, 
   0x8C, 0x70, 0x6E, 0x88, 0x72, 0x70, 0x9C, 0x8B, 0x89, 0x5A, 0x4E, 0x4A, 0x5E, 0x52, 0x4E, 0x62, 
   0x53, 0x50, 0x65, 0x54, 0x4F, 0x76, 0x63, 0x5B, 0x59, 0x47, 0x3E, 0x4F, 0x3D, 0x32, 0x80, 0x6F, 
   0x63, 0x97, 0x86, 0x79, 0x65, 0x55, 0x47, 0x82, 0x69, 0x5D, 0x63, 0x4A, 0x3F, 0x4E, 0x37, 0x2C, 
   0x5A, 0x46, 0x39, 0x62, 0x50, 0x43, 0x53, 0x43, 0x36, 0x4D, 0x3A, 0x30, 0x5C, 0x46, 0x40, 0x5B, 
   0x47, 0x41, 0x55, 0x43, 0x3C, 0x53, 0x44, 0x3D, 0x32, 0x25, 0x1D, 0x39, 0x2D, 0x25, 0x43, 0x37, 
   0x31, 0x40, 0x31, 0x2B, 0x46, 0x35, 0x2E, 0x3F, 0x2C, 0x22, 0x61, 0x4A, 0x3E, 0x74, 0x5A, 0x4D, 
   0x77, 0x5D, 0x4F, 0x72, 0x5A, 0x4B, 0xDA, 0xBD, 0xB7, 0xDB, 0xBF, 0xB8, 0xE1, 0xC4, 0xBD, 0xD4, 
   0xB6, 0xAF, 0xCF, 0xB0, 0xAA, 0xCD, 0xAC, 0xA6, 0xCE, 0xAC, 0xA5, 0xC9, 0xA4, 0x9E, 0xD3, 0xB0, 
   0xA9, 0xE7, 0xC7, 0xC0, 0xEF, 0xD0, 0xC9, 0xED, 0xD0, 0xC9, 0xEB, 0xD3, 0xCB, 0xEC, 0xDC, 0xD4, 
   0xED, 0xE1, 0xDA, 0xFE, 0xF4, 0xF0, 0xA4, 0x9F, 0x9D, 0x24, 0x28, 0x27, 0x4E, 0x5E, 0x5D, 0x3E, 
   0x53, 0x54, 0x45, 0x5D, 0x62, 0x3E, 0x54, 0x59, 0x56, 0x68, 0x6D, 0x63, 0x71, 0x77, 0x59, 0x64, 
   0x6A, 0x7C, 0x85, 0x8C, 0x4F, 0x58, 0x63, 0x52, 0x5E, 0x6A, 0x50, 0x61, 0x6A, 0x4D, 0x5F, 0x66, 
   0x40, 0x52, 0x56, 0x5A, 0x67, 0x6A, 0x2F, 0x3B, 0x3E, 0x45, 0x53, 0x59, 0x48, 0x59, 0x5D, 0x41, 
   0x52, 0x53, 0x50, 0x5D, 0x5C, 0x31, 0x39, 0x39, 0x2B, 0x2E, 0x2D, 0x74, 0x6C, 0x6C, 0xFE, 0xEE, 
   0xF0, 0xF7, 0xE6, 0xE8, 0xF3, 0xDE, 0xDF, 0xF0, 0xDC, 0xDA, 0xF4, 0xDF, 0xDE, 0xF3, 0xDC, 0xDA, 
   0xF3, 0xDD, 0xD5, 0xF5, 0xDD, 0xD6, 0xF7, 0xDF, 0xDB, 0xF5, 0xDD, 0xDB, 0xF6, 0xDC, 0xDD, 0xF7, 
   0xDD, 0xE0, 0xF5, 0xDE, 0xDC, 0xE5, 0xD2, 0xCC, 0xBE, 0xAA, 0xA5, 0xAC, 0x9B, 0x98, 0xA4, 0x96, 
   0x93, 0xBE, 0xB1, 0xAF, 0xE5, 0xDA, 0xD7, 0xEE, 0xDB, 0xDA, 0xF4, 0xE1, 0xE0, 0xEA, 0xD5, 0xD3, 
   0xDD, 0xC3, 0xC1, 0xEE, 0xD2, 0xCF, 0xF5, 0xD7, 0xD3, 0xF1, 0xD1, 0xCD, 0xE5, 0xC5, 0xC0, 0xDB, 
   0xC1, 0xBB, 0xDD, 0xC8, 0xC1, 0xE2, 0xC9, 0xC3, 0xEC, 0xC8, 0xC4, 0xF3, 0xC6, 0xC3, 0xED, 0xC0, 
   0xC1, 0xE8, 0xBF, 0xBF, 0xE5, 0xC0, 0xC0, 0xEE, 0xCA, 0xCA, 0xF3, 0xCD, 0xCD, 0xE5, 0xBB, 0xBC, 
   0xC1, 0xA0, 0xA1, 0xAD, 0x96, 0x98, 0xAB, 0x95, 0x96, 0xBF, 0xAB, 0xAC, 0xE2, 0xD0, 0xD1, 0xDF, 
   0xD0, 0xD0, 0xE4, 0xD6, 0xD6, 0xE4, 0xD7, 0xD3, 0xC9, 0xBB, 0xB7, 0xBF, 0xAE, 0xAB, 0xD7, 0xC4, 
   0xC1, 0xD3, 0xBE, 0xBC, 0xCE, 0xBA, 0xB8, 0xB7, 0x99, 0x98, 0xE9, 0xC8, 0xC7, 0xFE, 0xE4, 0xE3, 
   0xFE, 0xE3, 0xE1, 0xFB, 0xE4, 0xE2, 0xF3, 0xE0, 0xDD, 0xC0, 0xAF, 0xAC, 0xB0, 0x98, 0x96, 0xB7, 
   0xA0, 0x9E, 0xDD, 0xC6, 0xC4, 0xDE, 0xC8, 0xC6, 0xD6, 0xC3, 0xC0, 0xC8, 0xB5, 0xB2, 0xD2, 0xBE, 
   0xBC, 0xC7, 0xB3, 0xB0, 0xBF, 0xAB, 0xA8, 0xC6, 0xB3, 0xB0, 0xC9, 0xB6, 0xB3, 0xCA, 0xB7, 0xB4, 
   0xCA, 0xB6, 0xB3, 0xD8, 0xBA, 0xBA, 0xD7, 0xB8, 0xB8, 0xDF, 0xBE, 0xBF, 0xE1, 0xBE, 0xC0, 0xE9, 
   0xC6, 0xC7, 0xE7, 0xC2, 0xC4, 0xE8, 0xC3, 0xC3, 0xE8, 0xC5, 0xC4, 0xE8, 0xC4, 0xC3, 0xE5, 0xBF, 
   0xBF, 0xE4, 0xBB, 0xBC, 0xDE, 0xB5, 0xB6, 0xEB, 0xC1, 0xC2, 0xE3, 0xC2, 0xBC, 0xE6, 0xC5, 0xBE, 
   0xEB, 0xC9, 0xC3, 0xDA, 0xB7, 0xB1, 0xDA, 0xB5, 0xAF, 0xD5, 0xB0, 0xAB, 0xCE, 0xA3, 0x9E, 0xD8, 
   0xA9, 0xA5, 0xBF, 0x98, 0x93, 0xA7, 0x87, 0x81, 0x92, 0x75, 0x6E, 0xA8, 0x89, 0x82, 0xAE, 0x8D, 
   0x86, 0xC2, 0xA1, 0x9A, 0xD8, 0xB7, 0xB0, 0xD5, 0xB4, 0xAE, 0xE2, 0xC1, 0xBC, 0xF6, 0xD5, 0xCF, 
   0xE1, 0xC0, 0xBB, 0xCE, 0xAA, 0xA3, 0xD4, 0xAD, 0xA5, 0xD3, 0xAC, 0xA4, 0xDA, 0xB3, 0xAB, 0xDC, 
   0xB5, 0xAD, 0xD8, 0xB1, 0xA9, 0xC0, 0x99, 0x91, 0xD3, 0xAC, 0xA4, 0xD9, 0xB2, 0xAA, 0xD4, 0xAD, 
   0xA5, 0xD0, 0xA9, 0xA1, 0xCE, 0xA8, 0xA0, 0xCF, 0xA9, 0xA1, 0xCD, 0xA7, 0x9E, 0xCA, 0xA2, 0x9A, 
   0xC6, 0x9E, 0x95, 0xC1, 0x9B, 0x92, 0xC5, 0xA4, 0x9A, 0x8A, 0x72, 0x66, 0x66, 0x53, 0x47, 0x52, 
   0x42, 0x38, 0x37, 0x29, 0x21, 0x53, 0x46, 0x3F, 0x69, 0x60, 0x58, 0x68, 0x62, 0x5C, 0x64, 0x61, 
   0x5B, 0x61, 0x5C, 0x59, 0x37, 0x2F, 0x2E, 0x64, 0x5A, 0x58, 0x95, 0x89, 0x86, 0x49, 0x3A, 0x36, 
   0x44, 0x33, 0x2E, 0x56, 0x44, 0x3E, 0x47, 0x37, 0x33, 0x60, 0x52, 0x4C, 0x6F, 0x5E, 0x55, 0x62, 
   0x4F, 0x44, 0x3F, 0x2D, 0x23, 0x47, 0x38, 0x32, 0x57, 0x48, 0x45, 0x4F, 0x4A, 0x46, 0x65, 0x63, 
   0x5F, 0x63, 0x64, 0x60, 0x46, 0x44, 0x40, 0x5A, 0x56, 0x52, 0x74, 0x69, 0x67, 0x55, 0x4B, 0x48, 
   0x5B, 0x50, 0x4C, 0x99, 0x83, 0x81, 0xBE, 0xA3, 0xA2, 0x8A, 0x71, 0x70, 0x58, 0x48, 0x45, 0x45, 
   0x3D, 0x38, 0x59, 0x50, 0x4F, 0x76, 0x6A, 0x69, 0x9A, 0x8C, 0x87, 0x86, 0x71, 0x6B, 0xAB, 0x92, 
   0x89, 0xBC, 0xA0, 0x94, 0xBB, 0x95, 0x8D, 0x91, 0x67, 0x63, 0xB7, 0x94, 0x8E, 0xE1, 0xC0, 0xBB, 
   0xAF, 0x90, 0x8A, 0xB0, 0x8E, 0x88, 0xBF, 0x9A, 0x95, 0xD5, 0xA7, 0x9F, 0xCD, 0x9F, 0x97, 0xC0, 
   0x95, 0x8E, 0xC3, 0x9D, 0x96, 0x8B, 0x68, 0x60, 0x74, 0x53, 0x4D, 0x70, 0x55, 0x4F, 0x6B, 0x54, 
   0x4E, 0x70, 0x59, 0x53, 0x82, 0x65, 0x5F, 0x95, 0x72, 0x6C, 0xA9, 0x7D, 0x78, 0xBC, 0x8B, 0x85, 
   0x9C, 0x7F, 0x7C, 0xB3, 0x9C, 0x99, 0x9F, 0x8E, 0x8A, 0x61, 0x57, 0x52, 0x6E, 0x61, 0x5D, 0xAA, 
   0x9B, 0x98, 0x9D, 0x8C, 0x86, 0x81, 0x70, 0x67, 0x72, 0x61, 0x57, 0x5A, 0x48, 0x3E, 0x56, 0x44, 
   0x39, 0x88, 0x78, 0x6B, 0x93, 0x82, 0x74, 0x9E, 0x81, 0x76, 0x76, 0x59, 0x4E, 0x51, 0x36, 0x2B, 
   0x53, 0x3B, 0x2F, 0x68, 0x55, 0x48, 0x6F, 0x5E, 0x51, 0x60, 0x4C, 0x42, 0x64, 0x4B, 0x44, 0x50, 
   0x3A, 0x33, 0x64, 0x51, 0x49, 0x5C, 0x4A, 0x43, 0x4D, 0x3E, 0x36, 0x38, 0x2B, 0x22, 0x4C, 0x3F, 
   0x38, 0x52, 0x43, 0x3C, 0x5D, 0x4B, 0x43, 0x57, 0x43, 0x39, 0x73, 0x5B, 0x4E, 0x6E, 0x54, 0x46, 
   0x70, 0x55, 0x47, 0x6F, 0x55, 0x47, 0xE9, 0xCC, 0xC7, 0xDF, 0xC1, 0xBC, 0xDC, 0xBF, 0xB8, 0xCC, 
   0xAF, 0xA7, 0xC0, 0xA3, 0x9A, 0xC2, 0xA6, 0x9B, 0xC6, 0xA8, 0x9D, 0xC6, 0xA1, 0x97, 0xD3, 0xAA, 
   0xA1, 0xEF, 0xC5, 0xBC, 0xF7, 0xCD, 0xC4, 0xF2, 0xD2, 0xC8, 0xEA, 0xD0, 0xC5, 0xEF, 0xDA, 0xD0, 
   0xF2, 0xE4, 0xDC, 0xE7, 0xE8, 0xE4, 0x50, 0x5B, 0x59, 0x3C, 0x47, 0x4A, 0x58, 0x5D, 0x66, 0x4A, 
   0x4F, 0x59, 0x4E, 0x5B, 0x63, 0x44, 0x51, 0x59, 0x60, 0x6D, 0x75, 0x55, 0x62, 0x6A, 0x94, 0xA1, 
   0xA9, 0x55, 0x62, 0x6A, 0x3B, 0x45, 0x4F, 0x4F, 0x59, 0x63, 0x48, 0x51, 0x5B, 0x43, 0x48, 0x51, 
   0x5B, 0x5D, 0x66, 0x70, 0x70, 0x78, 0x79, 0x78, 0x7E, 0x4D, 0x4A, 0x52, 0x4C, 0x4D, 0x52, 0x4C, 
   0x52, 0x56, 0x44, 0x49, 0x4C, 0x27, 0x25, 0x28, 0x6F, 0x65, 0x68, 0xDE, 0xD3, 0xD2, 0xF7, 0xE9, 
   0xE6, 0xEF, 0xDE, 0xDB, 0xEF, 0xDC, 0xDA, 0xF1, 0xDC, 0xDA, 0xF5, 0xDE, 0xDC, 0xF3, 0xDB, 0xD9, 
   0xF0, 0xDB, 0xDA, 0xF0, 0xDC, 0xDB, 0xF3, 0xDF, 0xDE, 0xF1, 0xDD, 0xDC, 0xF1, 0xDD, 0xDC, 0xF2, 
   0xDE, 0xDD, 0xED, 0xD8, 0xD7, 0xC9, 0xB4, 0xB1, 0xCB, 0xB6, 0xB4, 0xCF, 0xBA, 0xB8, 0xE8, 0xD3, 
   0xD1, 0xF6, 0xE1, 0xDF, 0xF5, 0xE0, 0xDE, 0xF9, 0xE3, 0xE1, 0xDF, 0xCC, 0xCA, 0xBC, 0xA3, 0xA1, 
   0xF6, 0xDA, 0xD9, 0xDF, 0xC0, 0xBF, 0xCA, 0xA9, 0xA9, 0xE7, 0xC1, 0xBF, 0xEB, 0xC3, 0xBE, 0xEC, 
   0xC4, 0xBF, 0xEB, 0xC3, 0xBE, 0xEB, 0xC4, 0xBF, 0xEC, 0xC4, 0xBF, 0xE8, 0xC0, 0xBB, 0xE8, 0xC8, 
   0xC2, 0xE6, 0xC5, 0xBF, 0xDF, 0xC0, 0xBB, 0xE2, 0xC4, 0xC0, 0xE2, 0xC4, 0xBF, 0xEA, 0xCD, 0xCB, 
   0xE7, 0xCD, 0xCA, 0xEC, 0xD7, 0xD0, 0xE5, 0xCF, 0xC9, 0xE6, 0xD0, 0xCA, 0xD4, 0xBE, 0xB8, 0xD0, 
   0xBB, 0xB6, 0xBA, 0xA3, 0x9E, 0xB8, 0xA1, 0x9B, 0xDE, 0xC7, 0xC1, 0xDD, 0xC9, 0xC3, 0xD3, 0xC1, 
   0xBA, 0xE7, 0xD7, 0xCF, 0xFD, 0xF3, 0xEB, 0xFE, 0xF1, 0xEB, 0xF6, 0xE5, 0xE2, 0xEE, 0xDD, 0xDA, 
   0xF8, 0xE7, 0xE4, 0xF7, 0xE6, 0xE3, 0xF4, 0xE3, 0xE0, 0xFA, 0xEA, 0xE7, 0xEE, 0xE0, 0xDA, 0xF9, 
   0xE8, 0xE4, 0xF5, 0xE1, 0xDE, 0xF8, 0xE4, 0xE2, 0xEC, 0xD4, 0xD6, 0xE7, 0xCD, 0xD0, 0xE0, 0xBD, 
   0xBF, 0xD2, 0xAC, 0xAC, 0xA7, 0x8B, 0x8A, 0x92, 0x7D, 0x7B, 0x9E, 0x8B, 0x88, 0xB6, 0xA2, 0x9F, 
   0xB4, 0x9D, 0x9B, 0xC2, 0xA7, 0xA3, 0xBE, 0xA3, 0x9F, 0xD0, 0xB4, 0xB1, 0xE5, 0xCA, 0xC6, 0xE7, 
   0xCB, 0xC7, 0xDF, 0xC4, 0xC1, 0xDD, 0xC1, 0xBB, 0xE4, 0xC5, 0xBE, 0xEB, 0xC6, 0xC1, 0xEB, 0xC3, 
   0xBE, 0xE8, 0xBF, 0xBA, 0xDE, 0xB7, 0xB2, 0xE7, 0xC2, 0xBC, 0xE5, 0xC1, 0xB9, 0xDE, 0xBB, 0xB3, 
   0xDB, 0xBB, 0xB2, 0xDC, 0xBC, 0xB3, 0xDA, 0xB5, 0xAD, 0xDB, 0xB2, 0xAB, 0xE0, 0xB7, 0xAF, 0xD7, 
   0xB2, 0xAA, 0xC6, 0xA4, 0x9B, 0x85, 0x68, 0x5F, 0x67, 0x4F, 0x45, 0x80, 0x6D, 0x62, 0x7F, 0x6F, 
   0x63, 0xC1, 0xA6, 0x9B, 0xD1, 0xB5, 0xAB, 0xDD, 0xC4, 0xC0, 0xDC, 0xC5, 0xC4, 0xDD, 0xC1, 0xC0, 
   0xB0, 0x92, 0x8F, 0xBE, 0x9C, 0x95, 0xE3, 0xBE, 0xB6, 0xDB, 0xB6, 0xAE, 0xDA, 0xB3, 0xAB, 0xDE, 
   0xB4, 0xAD, 0xDE, 0xB1, 0xAA, 0xDD, 0xAF, 0xA8, 0xDC, 0xB0, 0xA9, 0xDF, 0xB3, 0xAC, 0xDA, 0xB1, 
   0xAA, 0xD3, 0xAD, 0xA5, 0xCF, 0xAB, 0xA3, 0xCD, 0xAC, 0xA3, 0xCC, 0xAA, 0xA0, 0xCB, 0xA5, 0x9D, 
   0xC4, 0x9F, 0x97, 0xBA, 0x96, 0x8E, 0xCB, 0xA7, 0x9F, 0xBC, 0x9B, 0x92, 0x90, 0x6F, 0x66, 0x7C, 
   0x63, 0x57, 0x67, 0x53, 0x48, 0x60, 0x4E, 0x46, 0x50, 0x45, 0x3D, 0x4C, 0x45, 0x3F, 0x58, 0x55, 
   0x51, 0x65, 0x64, 0x60, 0x2D, 0x2D, 0x26, 0x82, 0x7C, 0x78, 0xCA, 0xBF, 0xBB, 0x79, 0x68, 0x66, 
   0x44, 0x32, 0x33, 0x32, 0x21, 0x22, 0x50, 0x42, 0x40, 0x5A, 0x4E, 0x49, 0x5E, 0x52, 0x4E, 0x5D, 
   0x53, 0x4F, 0x65, 0x5C, 0x58, 0x47, 0x3E, 0x3A, 0x61, 0x58, 0x54, 0x5D, 0x57, 0x54, 0x5B, 0x57, 
   0x54, 0x57, 0x55, 0x51, 0x48, 0x44, 0x41, 0x71, 0x67, 0x64, 0xB8, 0xA7, 0xA6, 0xAD, 0x9E, 0x9C, 
   0x87, 0x7A, 0x78, 0x96, 0x87, 0x89, 0xE4, 0xD1, 0xD4, 0xA4, 0x8C, 0x8D, 0x81, 0x63, 0x60, 0x94, 
   0x73, 0x6D, 0x99, 0x89, 0x81, 0x84, 0x77, 0x6E, 0x4B, 0x3E, 0x36, 0x59, 0x4A, 0x41, 0x97, 0x82, 
   0x7B, 0xBA, 0x9F, 0x98, 0xC5, 0xA3, 0x9E, 0xA0, 0x7C, 0x79, 0xAF, 0x92, 0x8E, 0x8E, 0x7A, 0x75, 
   0x7B, 0x6C, 0x66, 0xA0, 0x92, 0x8C, 0xBE, 0xAD, 0xA7, 0xB3, 0x9E, 0x96, 0x97, 0x7C, 0x75, 0xAE, 
   0x91, 0x8A, 0xC1, 0xA4, 0x9D, 0x9C, 0x81, 0x7A, 0x84, 0x6E, 0x66, 0x67, 0x53, 0x4C, 0x48, 0x35, 
   0x2E, 0x7D, 0x66, 0x5E, 0x8B, 0x6E, 0x66, 0x93, 0x72, 0x68, 0xA5, 0x7F, 0x76, 0xB0, 0x87, 0x7E, 
   0x73, 0x58, 0x4E, 0x85, 0x75, 0x6A, 0x59, 0x55, 0x49, 0x78, 0x7D, 0x72, 0x85, 0x88, 0x7E, 0xA2, 
   0x9D, 0x95, 0xB7, 0xAC, 0xA5, 0x89, 0x79, 0x73, 0x74, 0x61, 0x5C, 0x74, 0x60, 0x5A, 0x79, 0x63, 
   0x5C, 0x7B, 0x63, 0x5B, 0xAD, 0x91, 0x88, 0xB0, 0x86, 0x7D, 0x9E, 0x76, 0x6D, 0x8D, 0x6C, 0x62, 
   0x7B, 0x5E, 0x54, 0x77, 0x61, 0x55, 0x6E, 0x5C, 0x4F, 0x4E, 0x39, 0x2B, 0x4C, 0x31, 0x23, 0x63, 
   0x49, 0x3B, 0x6C, 0x56, 0x47, 0x5E, 0x49, 0x3A, 0x50, 0x3C, 0x2E, 0x4E, 0x3B, 0x2C, 0x5A, 0x47, 
   0x39, 0x5A, 0x48, 0x39, 0x60, 0x4D, 0x3E, 0x6D, 0x5A, 0x4B, 0x6F, 0x5C, 0x4D, 0x56, 0x43, 0x34, 
   0x4F, 0x3D, 0x2E, 0x4F, 0x40, 0x30, 0xE3, 0xC6, 0xC2, 0xE8, 0xCA, 0xC5, 0xDF, 0xC2, 0xBC, 0xDB, 
   0xBE, 0xB7, 0xBF, 0xA2, 0x99, 0xB6, 0x97, 0x8E, 0xBC, 0xA0, 0x94, 0xC4, 0xA6, 0x9C, 0xC7, 0xA5, 
   0x9C, 0xE5, 0xBF, 0xB7, 0xF1, 0xCB, 0xC3, 0xEF, 0xD2, 0xC8, 0xE7, 0xCF, 0xC5, 0xED, 0xD6, 0xCE, 
   0xFD, 0xED, 0xE7, 0xB0, 0xB1, 0xAD, 0x30, 0x3B, 0x3A, 0x44, 0x50, 0x52, 0x3F, 0x47, 0x50, 0x4E, 
   0x54, 0x5D, 0x51, 0x5E, 0x66, 0x48, 0x55, 0x5D, 0x43, 0x50, 0x58, 0x50, 0x5D, 0x65, 0x4D, 0x5A, 
   0x62, 0x2C, 0x39, 0x41, 0x40, 0x4B, 0x55, 0x4F, 0x59, 0x63, 0x4E, 0x56, 0x60, 0x8E, 0x95, 0x9D, 
   0x8A, 0x90, 0x97, 0x9B, 0x9D, 0xA3, 0x85, 0x87, 0x8C, 0x4A, 0x49, 0x50, 0x47, 0x4A, 0x4F, 0x50, 
   0x56, 0x58, 0x30, 0x35, 0x36, 0x57, 0x54, 0x56, 0xE6, 0xDD, 0xDF, 0xFB, 0xED, 0xEC, 0xF0, 0xDE, 
   0xDB, 0xEF, 0xDD, 0xDA, 0xF1, 0xDC, 0xDA, 0xF1, 0xD9, 0xD7, 0xF5, 0xDB, 0xD9, 0xF8, 0xDC, 0xDB, 
   0xF4, 0xDD, 0xDD, 0xF5, 0xDE, 0xDE, 0xF4, 0xDD, 0xDD, 0xF3, 0xDD, 0xDD, 0xF8, 0xE3, 0xE3, 0xE4, 
   0xCE, 0xCE, 0xCB, 0xB4, 0xB3, 0xDA, 0xC3, 0xC1, 0xEA, 0xD3, 0xD1, 0xED, 0xD6, 0xD4, 0xF6, 0xE0, 
   0xDE, 0xEF, 0xDA, 0xD8, 0xE8, 0xD3, 0xD1, 0xD8, 0xC1, 0xBF, 0xCF, 0xB7, 0xB5, 0xD5, 0xBB, 0xBA, 
   0xE3, 0xC7, 0xC6, 0xD3, 0xB4, 0xB3, 0xDB, 0xBC, 0xBB, 0xEC, 0xCB, 0xC7, 0xEA, 0xC6, 0xC0, 0xE4, 
   0xC0, 0xBA, 0xE7, 0xC3, 0xBD, 0xE5, 0xC2, 0xBC, 0xE7, 0xC3, 0xBD, 0xE9, 0xC6, 0xBF, 0xDF, 0xBE, 
   0xB8, 0xDE, 0xBF, 0xB9, 0xEF, 0xD2, 0xCC, 0xE4, 0xC7, 0xC2, 0xDA, 0xBE, 0xBA, 0xE0, 0xC3, 0xC3, 
   0xE3, 0xCB, 0xC7, 0xE0, 0xCD, 0xC6, 0xC2, 0xAF, 0xA7, 0xC1, 0xAE, 0xA6, 0xAA, 0x96, 0x8F, 0xBF, 
   0xAC, 0xA5, 0xC0, 0xAD, 0xA6, 0xD4, 0xBD, 0xB7, 0xD2, 0xBD, 0xB6, 0xD3, 0xC0, 0xB9, 0xE8, 0xD6, 
   0xCF, 0xFD, 0xEE, 0xE6, 0xF9, 0xED, 0xE4, 0xF7, 0xEA, 0xE4, 0xEA, 0xD9, 0xD6, 0xF7, 0xE7, 0xE4, 
   0xFA, 0xE9, 0xE6, 0xF8, 0xE7, 0xE4, 0xF8, 0xE7, 0xE4, 0xF4, 0xE3, 0xE0, 0xE9, 0xDA, 0xD4, 0xF6, 
   0xE8, 0xE3, 0xF9, 0xE8, 0xE5, 0xFA, 0xE9, 0xE7, 0xF6, 0xDE, 0xE0, 0xF1, 0xD8, 0xDB, 0xF8, 0xD9, 
   0xDC, 0xF9, 0xD9, 0xD9, 0xE7, 0xCE, 0xCE, 0xAC, 0x99, 0x98, 0x8C, 0x7A, 0x79, 0x72, 0x5F, 0x5E, 
   0x8F, 0x78, 0x78, 0xA3, 0x8C, 0x87, 0xB6, 0x9F, 0x9A, 0x9D, 0x86, 0x81, 0x9D, 0x86, 0x81, 0xA2, 
   0x8B, 0x86, 0xCC, 0xB5, 0xB0, 0xE3, 0xCA, 0xC4, 0xE4, 0xC5, 0xBE, 0xE3, 0xBF, 0xBA, 0xE2, 0xBB, 
   0xB6, 0xEA, 0xC2, 0xBD, 0xE6, 0xC1, 0xBB, 0xE5, 0xC1, 0xBB, 0xE0, 0xBC, 0xB4, 0xCD, 0xAB, 0xA2, 
   0xD7, 0xB7, 0xAE, 0xD4, 0xB5, 0xAC, 0xDA, 0xB6, 0xAE, 0xDD, 0xB5, 0xAD, 0xDD, 0xB5, 0xAD, 0xD4, 
   0xAE, 0xA6, 0xBE, 0x9A, 0x92, 0xAC, 0x8D, 0x84, 0x93, 0x7A, 0x70, 0x89, 0x75, 0x6A, 0x70, 0x5E, 
   0x53, 0xAF, 0x94, 0x89, 0xD4, 0xB8, 0xAE, 0xBF, 0xA8, 0xA4, 0xB5, 0xA0, 0x9F, 0xE1, 0xC9, 0xC8, 
   0x85, 0x6B, 0x67, 0x88, 0x69, 0x62, 0xEE, 0xC9, 0xC1, 0xDF, 0xB9, 0xB1, 0xE0, 0xB9, 0xB1, 0xDC, 
   0xB1, 0xAA, 0xDE, 0xB2, 0xAB, 0xDD, 0xAF, 0xA8, 0xD4, 0xA7, 0xA0, 0xE1, 0xB5, 0xAE, 0xD8, 0xAF, 
   0xA8, 0xD6, 0xB0, 0xA8, 0xCE, 0xA8, 0xA0, 0xC7, 0xA4, 0x9C, 0xCB, 0xA6, 0x9E, 0xCD, 0xA7, 0x9F, 
   0xC7, 0xA2, 0x9A, 0xC3, 0x9F, 0x97, 0xBA, 0x96, 0x8E, 0xC0, 0x9E, 0x95, 0xBB, 0x9A, 0x91, 0x88, 
   0x6E, 0x62, 0x82, 0x6C, 0x62, 0x6C, 0x5A, 0x52, 0x48, 0x3B, 0x34, 0x49, 0x41, 0x3B, 0x5C, 0x59, 
   0x56, 0x63, 0x63, 0x60, 0x6B, 0x6B, 0x67, 0x68, 0x62, 0x5E, 0xC5, 0xB8, 0xB6, 0x97, 0x85, 0x84, 
   0x62, 0x50, 0x4F, 0x50, 0x40, 0x3E, 0x5B, 0x4D, 0x4A, 0x4C, 0x42, 0x3E, 0x46, 0x3B, 0x37, 0x46, 
   0x3C, 0x38, 0x64, 0x5B, 0x57, 0x6C, 0x63, 0x5F, 0x4B, 0x42, 0x3E, 0x4C, 0x45, 0x43, 0x4A, 0x46, 
   0x43, 0x5A, 0x58, 0x54, 0x42, 0x3F, 0x3B, 0x5C, 0x53, 0x50, 0x5B, 0x4C, 0x4B, 0x6A, 0x5E, 0x5B, 
   0x75, 0x6B, 0x68, 0x7F, 0x73, 0x74, 0x92, 0x84, 0x86, 0x91, 0x7F, 0x7F, 0x8E, 0x73, 0x6F, 0xA8, 
   0x89, 0x82, 0xC1, 0xA8, 0xA0, 0xB5, 0x9F, 0x97, 0x72, 0x5F, 0x57, 0x82, 0x6D, 0x65, 0xC3, 0xAA, 
   0xA3, 0xC8, 0xA9, 0xA3, 0x9F, 0x7B, 0x77, 0x93, 0x6E, 0x6C, 0x79, 0x5C, 0x58, 0x59, 0x46, 0x41, 
   0x5E, 0x4F, 0x49, 0x70, 0x60, 0x5B, 0xAF, 0x9F, 0x99, 0xAE, 0x99, 0x91, 0xB2, 0x99, 0x92, 0xA5, 
   0x86, 0x80, 0x82, 0x63, 0x5D, 0xBB, 0x9E, 0x97, 0xAC, 0x91, 0x8A, 0x65, 0x4E, 0x48, 0x79, 0x65, 
   0x5E, 0xC5, 0xAE, 0xA6, 0x97, 0x79, 0x71, 0x99, 0x78, 0x6E, 0xA6, 0x81, 0x77, 0xA4, 0x7B, 0x72, 
   0x57, 0x37, 0x2E, 0x43, 0x2F, 0x24, 0x3F, 0x37, 0x2C, 0x68, 0x68, 0x5E, 0x7F, 0x7F, 0x74, 0x52, 
   0x4B, 0x43, 0x67, 0x58, 0x53, 0x7D, 0x6A, 0x65, 0x8A, 0x75, 0x6F, 0x9F, 0x88, 0x82, 0xAF, 0x94, 
   0x8D, 0x97, 0x7A, 0x72, 0xB9, 0x9A, 0x90, 0xBF, 0x92, 0x8A, 0xAC, 0x82, 0x79, 0xA4, 0x80, 0x76, 
   0xA0, 0x82, 0x77, 0x86, 0x6C, 0x61, 0x79, 0x63, 0x57, 0x75, 0x5E, 0x50, 0x6D, 0x53, 0x44, 0x70, 
   0x56, 0x48, 0x6C, 0x54, 0x45, 0x4C, 0x36, 0x26, 0x50, 0x3C, 0x2D, 0x65, 0x50, 0x41, 0x66, 0x53, 
   0x44, 0x6C, 0x59, 0x4A, 0x70, 0x5D, 0x4E, 0x5E, 0x4B, 0x3C, 0x47, 0x35, 0x26, 0x3D, 0x29, 0x1A, 
   0x57, 0x46, 0x36, 0x62, 0x52, 0x42, 0xF1, 0xD5, 0xD1, 0xE5, 0xC9, 0xC5, 0xE0, 0xC3, 0xBE, 0xE3, 
   0xC6, 0xC0, 0xCD, 0xAF, 0xA8, 0xC1, 0xA0, 0x99, 0xB5, 0x9A, 0x90, 0xB1, 0x9A, 0x91, 0xBA, 0x9F, 
   0x97, 0xDC, 0xBD, 0xB6, 0xEA, 0xCA, 0xC3, 0xEB, 0xCF, 0xC7, 0xEB, 0xD2, 0xC9, 0xEA, 0xD2, 0xCB, 
   0xFC, 0xEA, 0xE4, 0x8A, 0x89, 0x85, 0x36, 0x41, 0x40, 0x37, 0x44, 0x46, 0x40, 0x4B, 0x52, 0x50, 
   0x5A, 0x62, 0x51, 0x5E, 0x66, 0x4A, 0x57, 0x5F, 0x43, 0x50, 0x58, 0x3C, 0x49, 0x51, 0x3F, 0x4C, 
   0x54, 0x41, 0x4E, 0x56, 0x46, 0x51, 0x5A, 0x45, 0x4F, 0x59, 0x4D, 0x56, 0x5F, 0x88, 0x91, 0x9A, 
   0x7C, 0x86, 0x8C, 0x70, 0x78, 0x7D, 0x51, 0x5A, 0x5E, 0x78, 0x7D, 0x81, 0x7A, 0x80, 0x83, 0x36, 
   0x3C, 0x3E, 0x32, 0x34, 0x34, 0xA7, 0xA2, 0xA2, 0xF6, 0xEA, 0xEB, 0xF3, 0xE1, 0xE0, 0xF9, 0xE3, 
   0xE1, 0xF3, 0xDD, 0xDA, 0xF4, 0xDB, 0xD9, 0xF4, 0xD9, 0xD8, 0xF7, 0xDA, 0xD9, 0xFA, 0xDC, 0xDB, 
   0xF4, 0xDA, 0xDA, 0xF8, 0xDF, 0xDF, 0xFB, 0xE3, 0xE3, 0xED, 0xD5, 0xD5, 0xCB, 0xB4, 0xB4, 0xB9, 
   0x9F, 0x9F, 0xE2, 0xCA, 0xC9, 0xF0, 0xD8, 0xD6, 0xEE, 0xD6, 0xD4, 0xF8, 0xE2, 0xE0, 0xF3, 0xDB, 
   0xD9, 0xC0, 0xA8, 0xA6, 0xC2, 0xAB, 0xA9, 0xC3, 0xAC, 0xAA, 0xE3, 0xCC, 0xCA, 0xD5, 0xBD, 0xBB, 
   0xD7, 0xBB, 0xBA, 0xE5, 0xC8, 0xC7, 0xE2, 0xC4, 0xC3, 0xCE, 0xAF, 0xAC, 0xCA, 0xAB, 0xA5, 0xD6, 
   0xB7, 0xB1, 0xDE, 0xC0, 0xBA, 0xDA, 0xBB, 0xB6, 0xD3, 0xB4, 0xAE, 0xD5, 0xB6, 0xB1, 0xCD, 0xAF, 
   0xA9, 0xB6, 0x99, 0x92, 0xC0, 0xA3, 0x9E, 0xCD, 0xB2, 0xAD, 0xD2, 0xB7, 0xB4, 0xC8, 0xAE, 0xAD, 
   0xBE, 0xA8, 0xA5, 0xB2, 0xA0, 0x9A, 0xC1, 0xAE, 0xA8, 0xE0, 0xCD, 0xC7, 0xF0, 0xDC, 0xD6, 0xF5, 
   0xE2, 0xDC, 0xF5, 0xE3, 0xDE, 0xD9, 0xC4, 0xBE, 0xD8, 0xC5, 0xC0, 0xF4, 0xE1, 0xDC, 0xFC, 0xEA, 
   0xE4, 0xF9, 0xE9, 0xE3, 0xF7, 0xE8, 0xE2, 0xF4, 0xE4, 0xDF, 0xF5, 0xE5, 0xE2, 0xF9, 0xE8, 0xE5, 
   0xFD, 0xEC, 0xE9, 0xF8, 0xE7, 0xE4, 0xED, 0xDC, 0xD9, 0xEF, 0xDE, 0xDB, 0xF6, 0xE8, 0xE2, 0xF6, 
   0xE9, 0xE4, 0xF5, 0xEC, 0xE9, 0xB1, 0xA0, 0x9E, 0xF4, 0xDE, 0xE0, 0xF7, 0xE1, 0xE3, 0xF7, 0xDF, 
   0xE0, 0xFA, 0xE6, 0xE4, 0xB8, 0xA8, 0xA6, 0xB0, 0xA1, 0x9F, 0xBA, 0xAA, 0xA9, 0xD1, 0xBF, 0xBE, 
   0xD9, 0xC2, 0xC2, 0xBE, 0xAA, 0xA6, 0xBD, 0xA9, 0xA5, 0xB8, 0xA4, 0xA0, 0xAB, 0x97, 0x94, 0xB2, 
   0x9F, 0x9C, 0xAF, 0x9B, 0x98, 0xC7, 0xAF, 0xAA, 0xCD, 0xB0, 0xAB, 0xD7, 0xB5, 0xB0, 0xCA, 0xA4, 
   0xA0, 0xB3, 0x8C, 0x89, 0xB0, 0x8B, 0x87, 0xB2, 0x90, 0x8A, 0xC2, 0xA0, 0x9A, 0xC4, 0xA4, 0x9D, 
   0xCB, 0xAE, 0xA6, 0xC7, 0xA9, 0xA2, 0xC9, 0xA8, 0xA1, 0xD2, 0xAD, 0xA6, 0xD0, 0xA7, 0xA1, 0xD4, 
   0xAB, 0xA3, 0xC3, 0x9D, 0x95, 0xC5, 0xA3, 0x9B, 0xC6, 0xAA, 0xA0, 0xC3, 0xAA, 0xA0, 0xA1, 0x8A, 
   0x7F, 0x90, 0x74, 0x69, 0xA7, 0x8B, 0x81, 0x78, 0x62, 0x5D, 0x77, 0x64, 0x62, 0x9A, 0x87, 0x85, 
   0x8C, 0x78, 0x73, 0xC7, 0xAA, 0xA4, 0xE3, 0xBE, 0xB6, 0xE0, 0xBB, 0xB3, 0xE9, 0xC2, 0xBA, 0xE2, 
   0xBA, 0xB2, 0xD8, 0xAD, 0xA6, 0xD7, 0xAB, 0xA4, 0xD6, 0xAA, 0xA3, 0xE0, 0xB4, 0xAD, 0xD8, 0xAC, 
   0xA6, 0xD0, 0xA8, 0xA0, 0xCF, 0xA9, 0xA1, 0xC4, 0x9F, 0x97, 0xC4, 0x9E, 0x96, 0xC7, 0xA1, 0x99, 
   0xC0, 0x9C, 0x94, 0xC1, 0x9D, 0x95, 0xBB, 0x97, 0x8F, 0xC2, 0xA1, 0x98, 0xAD, 0x8C, 0x83, 0x8D, 
   0x71, 0x67, 0x85, 0x6C, 0x62, 0x7D, 0x6A, 0x61, 0x55, 0x47, 0x40, 0x48, 0x3F, 0x3A, 0x4E, 0x49, 
   0x46, 0x48, 0x47, 0x45, 0xC1, 0xBF, 0xBF, 0xB6, 0xB0, 0xB0, 0xD9, 0xCF, 0xCD, 0x86, 0x76, 0x73, 
   0x62, 0x53, 0x4E, 0x71, 0x65, 0x5E, 0x5C, 0x50, 0x4B, 0x51, 0x47, 0x43, 0x59, 0x4E, 0x4A, 0x42, 
   0x38, 0x34, 0x46, 0x3C, 0x38, 0x4E, 0x44, 0x40, 0x3C, 0x32, 0x2E, 0x51, 0x4A, 0x47, 0x46, 0x43, 
   0x3F, 0x51, 0x51, 0x4C, 0x59, 0x57, 0x53, 0x74, 0x6D, 0x6A, 0xA3, 0x96, 0x94, 0x45, 0x3C, 0x38, 
   0x55, 0x50, 0x4C, 0x8C, 0x86, 0x86, 0x3F, 0x37, 0x38, 0x6F, 0x62, 0x61, 0x91, 0x7D, 0x78, 0xA1, 
   0x87, 0x80, 0xB4, 0x91, 0x8C, 0xBB, 0x9B, 0x96, 0xBF, 0xA3, 0x9D, 0xE3, 0xC7, 0xC1, 0xEC, 0xCE, 
   0xC8, 0xBA, 0x98, 0x93, 0x97, 0x72, 0x6F, 0xB7, 0x94, 0x91, 0x71, 0x56, 0x52, 0x63, 0x4F, 0x4A, 
   0x66, 0x56, 0x50, 0x57, 0x47, 0x41, 0x5D, 0x4B, 0x46, 0x7A, 0x65, 0x5D, 0xDE, 0xC5, 0xBE, 0xB3, 
   0x93, 0x8D, 0xAF, 0x8C, 0x86, 0xDC, 0xBA, 0xB3, 0xBA, 0x9A, 0x94, 0x89, 0x70, 0x6A, 0xAB, 0x95, 
   0x8E, 0xBD, 0xA2, 0x9C, 0xA3, 0x84, 0x7C, 0x9D, 0x7A, 0x70, 0xA3, 0x7E, 0x74, 0xB3, 0x8A, 0x81, 
   0x97, 0x73, 0x6B, 0x5D, 0x42, 0x39, 0x46, 0x37, 0x2C, 0x4F, 0x45, 0x3C, 0x6E, 0x65, 0x5C, 0x72, 
   0x62, 0x5D, 0x65, 0x4F, 0x4B, 0x8D, 0x72, 0x6E, 0xA2, 0x87, 0x82, 0xA0, 0x82, 0x7D, 0x9E, 0x7D, 
   0x76, 0xBC, 0x9A, 0x92, 0xBF, 0x9B, 0x92, 0xC7, 0x99, 0x91, 0xB5, 0x89, 0x80, 0xA1, 0x7A, 0x71, 
   0x8B, 0x6A, 0x5F, 0x82, 0x64, 0x59, 0x88, 0x6D, 0x63, 0x7B, 0x5F, 0x53, 0x73, 0x57, 0x49, 0x72, 
   0x57, 0x49, 0x77, 0x5E, 0x50, 0x5E, 0x47, 0x38, 0x4C, 0x36, 0x27, 0x6B, 0x56, 0x46, 0x5F, 0x4B, 
   0x3C, 0x68, 0x54, 0x45, 0x62, 0x4E, 0x3F, 0x41, 0x2C, 0x1D, 0x4C, 0x37, 0x28, 0x4F, 0x3A, 0x2B, 
   0x63, 0x52, 0x42, 0x65, 0x56, 0x46, 0xE9, 0xD0, 0xCE, 0xE8, 0xD0, 0xCD, 0xE1, 0xC6, 0xC3, 0xE2, 
   0xC6, 0xC1, 0xCE, 0xB1, 0xAB, 0xC4, 0xA4, 0x9F, 0xB7, 0x9C, 0x95, 0xAE, 0x9A, 0x93, 0xAE, 0x96, 
   0x8F, 0xB8, 0x9C, 0x96, 0xDB, 0xBD, 0xB7, 0xEC, 0xCD, 0xC8, 0xF0, 0xD1, 0xCB, 0xF2, 0xD6, 0xD1, 
   0xFB, 0xE9, 0xE6, 0x73, 0x70, 0x6D, 0x35, 0x3E, 0x3D, 0x2F, 0x3C, 0x3E, 0x42, 0x50, 0x54, 0x54, 
   0x62, 0x69, 0x4E, 0x5A, 0x63, 0x49, 0x56, 0x5E, 0x5E, 0x6B, 0x73, 0x3F, 0x4C, 0x54, 0x3D, 0x4A, 
   0x52, 0x44, 0x51, 0x59, 0x4A, 0x54, 0x5D, 0x4E, 0x58, 0x61, 0x48, 0x52, 0x5B, 0x3C, 0x47, 0x4D, 
   0x3F, 0x4A, 0x4F, 0x4A, 0x56, 0x59, 0x70, 0x7C, 0x7F, 0x7A, 0x83, 0x85, 0x4B, 0x52, 0x53, 0x23, 
   0x26, 0x27, 0x5A, 0x58, 0x57, 0xED, 0xE4, 0xE5, 0xF0, 0xDF, 0xDF, 0xF4, 0xDD, 0xDC, 0xF6, 0xDA, 
   0xD9, 0xF6, 0xDA, 0xD9, 0xF7, 0xDB, 0xD9, 0xF4, 0xD7, 0xD6, 0xF6, 0xD8, 0xD7, 0xF4, 0xD6, 0xD5, 
   0xF1, 0xD5, 0xD5, 0xE7, 0xCE, 0xCD, 0xCD, 0xB3, 0xB3, 0xBE, 0xA2, 0xA2, 0xD9, 0xBE, 0xBD, 0xF5, 
   0xDA, 0xD9, 0xF5, 0xDA, 0xD9, 0xE5, 0xCA, 0xC9, 0xE8, 0xCD, 0xCC, 0xEF, 0xD5, 0xD3, 0xDA, 0xBF, 
   0xBD, 0xDE, 0xC3, 0xC2, 0xF1, 0xD7, 0xD5, 0xD7, 0xC1, 0xBF, 0xAE, 0x98, 0x96, 0xC4, 0xAD, 0xAB, 
   0xF1, 0xDD, 0xDB, 0xF8, 0xDE, 0xDD, 0xF7, 0xDD, 0xDC, 0xEB, 0xD0, 0xCC, 0xD4, 0xBB, 0xB5, 0xCC, 
   0xB3, 0xAD, 0xDF, 0xC6, 0xC0, 0xDA, 0xC0, 0xBB, 0xC1, 0xA7, 0xA2, 0xC5, 0xAC, 0xA7, 0xD7, 0xBC, 
   0xB5, 0xD5, 0xB9, 0xB3, 0xD1, 0xB8, 0xB3, 0xBB, 0xA2, 0x9F, 0xB2, 0x99, 0x98, 0xC5, 0xB0, 0xAF, 
   0xDA, 0xC9, 0xC5, 0xF2, 0xDF, 0xDA, 0xF9, 0xE7, 0xE2, 0xF8, 0xE4, 0xDF, 0xEF, 0xDB, 0xD6, 0xF4, 
   0xE1, 0xDC, 0xED, 0xD9, 0xD4, 0xE5, 0xCF, 0xCA, 0xEF, 0xDF, 0xDA, 0xFD, 0xEC, 0xE7, 0xF8, 0xE5, 
   0xE0, 0xFB, 0xE9, 0xE4, 0xF6, 0xE4, 0xDF, 0xF7, 0xE6, 0xE1, 0xF7, 0xE7, 0xE4, 0xFE, 0xEE, 0xEB, 
   0xFB, 0xEA, 0xE7, 0xF2, 0xE0, 0xDD, 0xE8, 0xD7, 0xD4, 0xEF, 0xDE, 0xDB, 0xF6, 0xEB, 0xE5, 0xFB, 
   0xF2, 0xED, 0xA2, 0x93, 0x90, 0xAE, 0x9D, 0x9C, 0xF4, 0xE2, 0xE3, 0xF9, 0xE6, 0xE8, 0xF4, 0xE5, 
   0xE5, 0xAF, 0xA6, 0xA5, 0x54, 0x4C, 0x4A, 0xC0, 0xB7, 0xB6, 0xCE, 0xC0, 0xC0, 0xF7, 0xE4, 0xE5, 
   0xFA, 0xE4, 0xE5, 0xFF, 0xF0, 0xEE, 0xF8, 0xE8, 0xE5, 0xF7, 0xE6, 0xE3, 0xF8, 0xE7, 0xE4, 0xFE, 
   0xF1, 0xEE, 0xD0, 0xC0, 0xBE, 0x7C, 0x69, 0x64, 0xA7, 0x8D, 0x87, 0xBE, 0xA0, 0x9C, 0xBA, 0x98, 
   0x94, 0xB4, 0x92, 0x8E, 0x9E, 0x7D, 0x78, 0x8A, 0x6C, 0x67, 0x92, 0x74, 0x6E, 0x93, 0x77, 0x70, 
   0x9F, 0x86, 0x7F, 0xA7, 0x8E, 0x87, 0xB9, 0x9B, 0x95, 0xC5, 0xA3, 0x9D, 0xCA, 0xA2, 0x9D, 0xD7, 
   0xAD, 0xA6, 0xB2, 0x8B, 0x83, 0xA7, 0x83, 0x7B, 0xBF, 0x9F, 0x96, 0xB7, 0x9B, 0x91, 0xAA, 0x90, 
   0x86, 0xA0, 0x84, 0x79, 0x7A, 0x60, 0x56, 0x63, 0x4F, 0x4A, 0x63, 0x52, 0x50, 0x92, 0x81, 0x7F, 
   0x8A, 0x7B, 0x76, 0xC2, 0xA7, 0x9F, 0xDB, 0xB4, 0xAD, 0xE2, 0xBD, 0xB5, 0xEA, 0xC4, 0xBC, 0xE8, 
   0xC0, 0xB8, 0xE0, 0xB8, 0xB0, 0xD2, 0xA9, 0xA1, 0xD6, 0xAB, 0xA4, 0xE0, 0xB5, 0xAE, 0xD9, 0xAD, 
   0xA6, 0xCF, 0xA6, 0x9E, 0xD0, 0xA9, 0xA1, 0xC1, 0x9B, 0x93, 0xBF, 0x98, 0x90, 0xC0, 0x9A, 0x92, 
   0xC4, 0x9F, 0x97, 0xB8, 0x94, 0x8C, 0xC2, 0x9E, 0x96, 0xBE, 0x9C, 0x94, 0xBB, 0x9A, 0x91, 0x78, 
   0x5B, 0x50, 0x66, 0x4C, 0x42, 0x7E, 0x68, 0x61, 0x6E, 0x5E, 0x58, 0x4A, 0x3F, 0x3A, 0x3E, 0x38, 
   0x35, 0x41, 0x3D, 0x3D, 0x4B, 0x48, 0x4B, 0x6F, 0x68, 0x6A, 0xA2, 0x98, 0x98, 0x4F, 0x42, 0x3E, 
   0x5E, 0x53, 0x4A, 0x54, 0x4C, 0x40, 0x5C, 0x53, 0x4B, 0x81, 0x76, 0x73, 0x82, 0x79, 0x75, 0x4E, 
   0x43, 0x3F, 0x50, 0x45, 0x41, 0x4A, 0x3E, 0x3A, 0x41, 0x36, 0x32, 0x43, 0x3D, 0x3A, 0x48, 0x45, 
   0x42, 0x58, 0x57, 0x53, 0x61, 0x60, 0x5C, 0x87, 0x82, 0x7E, 0xB5, 0xA9, 0xA7, 0xA4, 0x9D, 0x99, 
   0x4E, 0x4D, 0x48, 0x5A, 0x5A, 0x59, 0x40, 0x3C, 0x3D, 0x5B, 0x54, 0x52, 0x82, 0x74, 0x6F, 0xA6, 
   0x93, 0x8C, 0xB5, 0x90, 0x8B, 0xAE, 0x8B, 0x86, 0xD0, 0xB2, 0xAD, 0xED, 0xD1, 0xCC, 0xCF, 0xB4, 
   0xAE, 0xAA, 0x8C, 0x87, 0xA6, 0x84, 0x80, 0xB0, 0x8E, 0x8C, 0xB7, 0x9D, 0x99, 0xA6, 0x92, 0x8D, 
   0x9C, 0x8A, 0x85, 0x85, 0x74, 0x6E, 0x77, 0x63, 0x5E, 0x99, 0x86, 0x7E, 0xDD, 0xC3, 0xBC, 0xC0, 
   0x9E, 0x98, 0xCB, 0xA5, 0x9F, 0xCC, 0xA6, 0xA1, 0xBB, 0x97, 0x91, 0xAD, 0x90, 0x89, 0xA8, 0x8F, 
   0x89, 0xA5, 0x89, 0x82, 0xA5, 0x86, 0x7E, 0x9A, 0x76, 0x6D, 0xA8, 0x83, 0x79, 0xA1, 0x78, 0x6F, 
   0xB1, 0x8A, 0x82, 0x9E, 0x7F, 0x76, 0x67, 0x50, 0x47, 0x47, 0x35, 0x2E, 0x6D, 0x5B, 0x54, 0xBF, 
   0xA8, 0xA3, 0xA5, 0x89, 0x84, 0xA8, 0x87, 0x83, 0x93, 0x71, 0x6C, 0x9C, 0x78, 0x72, 0xB6, 0x91, 
   0x8A, 0xBE, 0x96, 0x8E, 0xD1, 0xA6, 0x9E, 0xCD, 0x9D, 0x95, 0xC0, 0x91, 0x89, 0xAA, 0x80, 0x77, 
   0x7D, 0x57, 0x4E, 0x94, 0x72, 0x68, 0x92, 0x72, 0x68, 0x85, 0x66, 0x5A, 0x7C, 0x5E, 0x51, 0x73, 
   0x57, 0x49, 0x74, 0x58, 0x4A, 0x6D, 0x54, 0x45, 0x6A, 0x52, 0x43, 0x6F, 0x57, 0x48, 0x62, 0x4C, 
   0x3D, 0x4C, 0x36, 0x27, 0x47, 0x31, 0x22, 0x45, 0x30, 0x21, 0x69, 0x53, 0x44, 0x69, 0x53, 0x44, 
   0x67, 0x53, 0x44, 0x64, 0x54, 0x44, 0xCB, 0xB8, 0xB8, 0xD8, 0xC5, 0xC4, 0xE5, 0xCF, 0xCD, 0xDD, 
   0xC5, 0xC1, 0xD7, 0xBB, 0xB7, 0xBE, 0xA0, 0x9C, 0xBA, 0x9F, 0x99, 0xB8, 0x9F, 0x9A, 0xB5, 0x99, 
   0x94, 0xA6, 0x88, 0x84, 0xC2, 0xA2, 0x9D, 0xEE, 0xCA, 0xC7, 0xF1, 0xCC, 0xC9, 0xFB, 0xDE, 0xDA, 
   0xDD, 0xC9, 0xC7, 0x4C, 0x45, 0x44, 0x36, 0x3B, 0x3A, 0x30, 0x3B, 0x3C, 0x46, 0x56, 0x58, 0x53, 
   0x62, 0x68, 0x52, 0x5F, 0x67, 0x5E, 0x6B, 0x73, 0x4C, 0x59, 0x61, 0x37, 0x44, 0x4C, 0x3F, 0x4C, 
   0x54, 0x4D, 0x5A, 0x61, 0x50, 0x5B, 0x63, 0x47, 0x51, 0x59, 0x57, 0x63, 0x6A, 0x41, 0x4D, 0x52, 
   0x41, 0x4D, 0x51, 0x6E, 0x7C, 0x7D, 0xA0, 0xAD, 0xAE, 0x52, 0x5B, 0x5B, 0x4C, 0x52, 0x50, 0x61, 
   0x5F, 0x5F, 0xAC, 0xA5, 0xA4, 0xFD, 0xEE, 0xED, 0xEF, 0xDA, 0xD9, 0xF4, 0xDA, 0xD9, 0xF0, 0xD1, 
   0xD0, 0xF3, 0xD4, 0xD3, 0xF4, 0xD6, 0xD5, 0xF2, 0xD4, 0xD3, 0xF3, 0xD5, 0xD4, 0xF1, 0xD3, 0xD1, 
   0xF2, 0xD5, 0xD4, 0xE1, 0xC5, 0xC3, 0xDB, 0xBF, 0xBD, 0xF7, 0xDB, 0xD9, 0xFA, 0xDE, 0xDD, 0xED, 
   0xD2, 0xD0, 0xD7, 0xBB, 0xBA, 0xD7, 0xBC, 0xBB, 0xE6, 0xCA, 0xC9, 0xE4, 0xC8, 0xC7, 0xF1, 0xD6, 
   0xD5, 0xFA, 0xDE, 0xDD, 0xFE, 0xE6, 0xE5, 0xF7, 0xE3, 0xE1, 0xF5, 0xE0, 0xDE, 0xF9, 0xE5, 0xE3, 
   0xF8, 0xE4, 0xE2, 0xF7, 0xE1, 0xDF, 0xFB, 0xE5, 0xE3, 0xFA, 0xE6, 0xE2, 0xFB, 0xEB, 0xE4, 0xFC, 
   0xE9, 0xE3, 0xFB, 0xE9, 0xE3, 0xFB, 0xE9, 0xE3, 0xFB, 0xE9, 0xE3, 0xFB, 0xEC, 0xE6, 0xFF, 0xED, 
   0xE7, 0xFF, 0xEC, 0xE7, 0xFF, 0xF0, 0xEC, 0xFE, 0xE9, 0xE6, 0xFA, 0xE6, 0xE4, 0xFE, 0xEF, 0xEE, 
   0xFC, 0xEA, 0xE7, 0xF5, 0xE2, 0xDE, 0xF5, 0xE2, 0xDE, 0xF1, 0xDE, 0xDA, 0xFA, 0xE7, 0xE2, 0xF4, 
   0xE1, 0xDD, 0xF5, 0xE2, 0xDE, 0xF7, 0xE4, 0xDF, 0xF8, 0xE5, 0xE0, 0xFC, 0xEA, 0xE6, 0xFB, 0xE9, 
   0xE4, 0xF8, 0xE4, 0xDF, 0xF9, 0xE6, 0xE1, 0xF9, 0xE8, 0xE5, 0xF9, 0xE8, 0xE5, 0xF9, 0xE8, 0xE5, 
   0xFC, 0xEC, 0xE9, 0xF0, 0xE1, 0xDE, 0xE3, 0xD1, 0xCE, 0xFB, 0xEC, 0xE9, 0xFC, 0xEE, 0xE8, 0xCD, 
   0xC1, 0xBC, 0xA9, 0x9C, 0x98, 0xEE, 0xE1, 0xDF, 0xF9, 0xEB, 0xEC, 0xE4, 0xD4, 0xD5, 0xAF, 0xA7, 
   0xA7, 0x70, 0x70, 0x6E, 0x6D, 0x6A, 0x69, 0xEA, 0xE6, 0xE6, 0xDD, 0xD4, 0xD5, 0xDB, 0xCB, 0xCD, 
   0xF0, 0xE0, 0xE2, 0xF8, 0xEB, 0xE8, 0xF5, 0xE7, 0xE4, 0xFA, 0xEC, 0xE9, 0xF7, 0xE9, 0xE7, 0xF6, 
   0xEA, 0xE7, 0xED, 0xE2, 0xDF, 0x8A, 0x7B, 0x76, 0x78, 0x63, 0x5D, 0x9E, 0x84, 0x7E, 0xB2, 0x95, 
   0x90, 0xC2, 0xA4, 0x9F, 0xC7, 0xAB, 0xA6, 0x9B, 0x80, 0x7B, 0x83, 0x68, 0x61, 0x71, 0x59, 0x52, 
   0x81, 0x6E, 0x66, 0x94, 0x7F, 0x78, 0xA2, 0x88, 0x82, 0xA7, 0x88, 0x82, 0xB5, 0x90, 0x8A, 0xCC, 
   0xA2, 0x9B, 0xB6, 0x8E, 0x86, 0xAC, 0x87, 0x7F, 0xB9, 0x98, 0x8F, 0xB4, 0x95, 0x8D, 0xB2, 0x95, 
   0x8B, 0xB1, 0x95, 0x8A, 0x9F, 0x86, 0x7C, 0x75, 0x62, 0x5D, 0x66, 0x56, 0x54, 0x8E, 0x7F, 0x7D, 
   0x97, 0x8B, 0x85, 0xB5, 0x9A, 0x93, 0xEA, 0xC3, 0xBB, 0xDC, 0xB7, 0xAF, 0xE7, 0xC2, 0xBA, 0xE5, 
   0xBF, 0xB7, 0xDC, 0xB6, 0xAE, 0xD5, 0xAF, 0xA7, 0xD3, 0xAB, 0xA4, 0xDC, 0xB4, 0xAC, 0xD4, 0xAB, 
   0xA4, 0xCD, 0xA3, 0x9C, 0xCA, 0xA2, 0x9B, 0xC3, 0x9B, 0x93, 0xC8, 0xA1, 0x99, 0xCA, 0xA4, 0x9C, 
   0xB7, 0x92, 0x8A, 0xBC, 0x98, 0x90, 0xCE, 0xAA, 0xA2, 0xBF, 0x9D, 0x94, 0xC3, 0xA2, 0x99, 0x8F, 
   0x71, 0x67, 0x66, 0x4B, 0x41, 0x67, 0x50, 0x49, 0x7B, 0x69, 0x63, 0x73, 0x66, 0x61, 0x5F, 0x57, 
   0x54, 0x44, 0x3E, 0x3F, 0x31, 0x2C, 0x32, 0x4B, 0x44, 0x47, 0x73, 0x68, 0x68, 0x51, 0x45, 0x42, 
   0x56, 0x4D, 0x45, 0x58, 0x53, 0x46, 0x5F, 0x59, 0x50, 0x9E, 0x95, 0x91, 0x5E, 0x56, 0x52, 0x64, 
   0x5A, 0x56, 0x5F, 0x54, 0x50, 0x74, 0x67, 0x63, 0x6E, 0x61, 0x5E, 0x47, 0x3F, 0x3D, 0x44, 0x3E, 
   0x3B, 0x60, 0x5E, 0x5A, 0x77, 0x76, 0x72, 0x52, 0x4D, 0x4A, 0x5B, 0x50, 0x4E, 0x75, 0x6F, 0x6B, 
   0x78, 0x78, 0x73, 0x86, 0x87, 0x86, 0x45, 0x44, 0x44, 0x7F, 0x7A, 0x78, 0xA4, 0x9A, 0x94, 0x98, 
   0x8A, 0x82, 0xB9, 0x98, 0x94, 0xC8, 0xA9, 0xA5, 0xB2, 0x9A, 0x94, 0x90, 0x7B, 0x75, 0x9C, 0x88, 
   0x82, 0x9D, 0x89, 0x83, 0xA1, 0x85, 0x80, 0xAC, 0x8D, 0x8A, 0xE6, 0xCC, 0xC8, 0xBC, 0xA9, 0xA4, 
   0x88, 0x75, 0x70, 0xA4, 0x90, 0x8B, 0xC9, 0xB4, 0xAF, 0xC2, 0xAC, 0xA4, 0xAD, 0x91, 0x8A, 0xAC, 
   0x89, 0x83, 0xC6, 0xA0, 0x9B, 0xCB, 0xA4, 0x9F, 0xC2, 0x9C, 0x96, 0xB3, 0x94, 0x8E, 0x99, 0x80, 
   0x7A, 0xA9, 0x8D, 0x86, 0xA8, 0x8A, 0x82, 0xB1, 0x90, 0x86, 0xA5, 0x82, 0x78, 0xA0, 0x7A, 0x70, 
   0xAA, 0x82, 0x7A, 0x8C, 0x69, 0x60, 0x9E, 0x80, 0x78, 0x9C, 0x83, 0x7D, 0xAC, 0x92, 0x8C, 0xB9, 
   0x9C, 0x98, 0xB2, 0x91, 0x8D, 0xA5, 0x82, 0x7D, 0x98, 0x73, 0x6D, 0xA6, 0x7F, 0x79, 0xB2, 0x89, 
   0x82, 0xC3, 0x98, 0x90, 0xD3, 0xA5, 0x9C, 0xD4, 0xA3, 0x9B, 0xC6, 0x97, 0x8F, 0xB6, 0x88, 0x80, 
   0xC0, 0x97, 0x8E, 0xAF, 0x8A, 0x80, 0x94, 0x71, 0x67, 0x89, 0x68, 0x5D, 0x81, 0x60, 0x53, 0x7B, 
   0x5C, 0x4F, 0x7B, 0x5D, 0x50, 0x77, 0x5B, 0x4E, 0x70, 0x56, 0x48, 0x6C, 0x51, 0x43, 0x62, 0x4A, 
   0x3C, 0x49, 0x31, 0x22, 0x4E, 0x36, 0x27, 0x61, 0x49, 0x3A, 0x64, 0x4C, 0x3E, 0x5C, 0x44, 0x35, 
   0x6B, 0x55, 0x46, 0x68, 0x55, 0x46, 0xBD, 0xB1, 0xB2, 0xA1, 0x95, 0x96, 0xC3, 0xB3, 0xB2, 0xE8, 
   0xD5, 0xD4, 0xE4, 0xCD, 0xCA, 0xBF, 0xA6, 0xA2, 0xBA, 0x9F, 0x9C, 0xB9, 0x9C, 0x99, 0xBF, 0xA2, 
   0x9E, 0xB8, 0x9A, 0x97, 0xA6, 0x85, 0x82, 0xCD, 0xA8, 0xA6, 0xF4, 0xCD, 0xCB, 0xF2, 0xD7, 0xD5, 
   0xEB, 0xDA, 0xD9, 0x5F, 0x58, 0x58, 0x2F, 0x30, 0x30, 0x45, 0x4D, 0x4E, 0x3E, 0x4E, 0x4F, 0x3C, 
   0x4B, 0x4F, 0x47, 0x54, 0x5C, 0x58, 0x65, 0x6D, 0x46, 0x53, 0x5B, 0x3C, 0x49, 0x51, 0x44, 0x51, 
   0x59, 0x44, 0x50, 0x59, 0x45, 0x51, 0x59, 0x50, 0x5D, 0x62, 0x4E, 0x5A, 0x5F, 0x56, 0x60, 0x65, 
   0x46, 0x51, 0x54, 0x3E, 0x49, 0x4B, 0x54, 0x5B, 0x5E, 0x67, 0x6C, 0x6B, 0x6A, 0x69, 0x68, 0xD0, 
   0xC8, 0xC7, 0xF6, 0xE7, 0xE5, 0xF0, 0xDC, 0xD9, 0xF2, 0xDB, 0xD8, 0xF3, 0xD7, 0xD6, 0xEF, 0xD0, 
   0xCF, 0xF3, 0xD4, 0xD3, 0xF4, 0xD5, 0xD4, 0xF2, 0xD4, 0xD3, 0xF2, 0xD5, 0xD4, 0xF4, 0xD7, 0xD5, 
   0xF6, 0xDA, 0xD7, 0xF7, 0xDD, 0xD9, 0xF6, 0xDB, 0xD7, 0xF3, 0xD8, 0xD4, 0xE8, 0xCE, 0xCA, 0xE5, 
   0xCA, 0xC5, 0xE8, 0xCE, 0xCB, 0xE9, 0xD0, 0xCF, 0xDD, 0xC4, 0xC2, 0xF5, 0xDD, 0xDA, 0xFE, 0xE7, 
   0xE5, 0xFE, 0xE5, 0xE3, 0xFA, 0xE3, 0xE1, 0xF8, 0xE2, 0xE0, 0xF7, 0xE2, 0xE0, 0xF8, 0xE4, 0xE2, 
   0xF5, 0xE1, 0xDF, 0xF3, 0xE0, 0xDD, 0xF4, 0xE1, 0xDF, 0xF4, 0xE3, 0xDE, 0xF8, 0xE9, 0xE2, 0xFB, 
   0xEB, 0xE5, 0xF8, 0xE8, 0xE2, 0xF9, 0xEA, 0xE4, 0xFA, 0xEB, 0xE5, 0xFA, 0xEB, 0xE4, 0xFE, 0xEA, 
   0xE4, 0xFB, 0xE7, 0xE2, 0xF7, 0xE4, 0xE1, 0xFA, 0xE7, 0xE5, 0xFA, 0xE9, 0xE7, 0xF4, 0xE3, 0xE2, 
   0xF5, 0xE4, 0xE2, 0xF6, 0xE3, 0xE0, 0xF4, 0xE2, 0xDF, 0xF6, 0xE3, 0xE1, 0xF5, 0xE2, 0xDF, 0xF7, 
   0xE4, 0xE1, 0xF6, 0xE3, 0xE1, 0xF8, 0xE5, 0xE2, 0xF9, 0xE6, 0xE3, 0xF9, 0xE6, 0xE3, 0xFB, 0xE7, 
   0xE5, 0xF9, 0xE6, 0xE3, 0xFC, 0xE7, 0xE5, 0xFC, 0xE9, 0xE7, 0xF7, 0xE6, 0xE3, 0xF9, 0xE8, 0xE5, 
   0xF0, 0xE0, 0xDD, 0xE7, 0xD8, 0xD5, 0xF6, 0xE8, 0xE5, 0xFC, 0xEF, 0xEC, 0xFA, 0xF0, 0xEA, 0xAE, 
   0xA2, 0x9D, 0xE3, 0xD6, 0xD2, 0xE4, 0xD8, 0xD5, 0xE8, 0xDB, 0xDC, 0xB3, 0xA5, 0xA5, 0x6D, 0x6A, 
   0x69, 0x4B, 0x51, 0x4F, 0xA0, 0x9F, 0x9E, 0xBA, 0xB5, 0xB5, 0xDC, 0xD0, 0xD1, 0xCF, 0xC0, 0xC1, 
   0xF4, 0xE5, 0xE6, 0xF9, 0xED, 0xEB, 0xF8, 0xED, 0xEB, 0xF8, 0xED, 0xEC, 0xF4, 0xE8, 0xE6, 0xEA, 
   0xDE, 0xDC, 0xF0, 0xE8, 0xE6, 0xE7, 0xDD, 0xD9, 0xB9, 0xA9, 0xA3, 0xAF, 0x9A, 0x95, 0xA7, 0x8D, 
   0x89, 0x91, 0x76, 0x72, 0xA9, 0x90, 0x8C, 0xC6, 0xAF, 0xAB, 0x92, 0x7B, 0x75, 0x6B, 0x57, 0x51, 
   0x71, 0x5F, 0x58, 0x84, 0x72, 0x6B, 0x87, 0x72, 0x6C, 0x98, 0x7F, 0x79, 0xB4, 0x93, 0x8C, 0xBE, 
   0x96, 0x8E, 0xA9, 0x84, 0x7C, 0xB3, 0x90, 0x88, 0xBC, 0x9B, 0x92, 0xAD, 0x8E, 0x85, 0x8E, 0x70, 
   0x67, 0xB1, 0x97, 0x8B, 0xBF, 0xA9, 0x9F, 0x9F, 0x8D, 0x88, 0x75, 0x65, 0x63, 0x66, 0x56, 0x54, 
   0x85, 0x75, 0x6F, 0xDA, 0xBE, 0xB6, 0xF5, 0xCF, 0xC6, 0xD4, 0xAF, 0xA7, 0xE5, 0xC1, 0xB9, 0xE3, 
   0xBE, 0xB6, 0xDC, 0xB8, 0xB0, 0xD7, 0xB3, 0xAB, 0xC4, 0xA0, 0x98, 0xD2, 0xAF, 0xA6, 0xD0, 0xAC, 
   0xA4, 0xC3, 0x9E, 0x96, 0xC3, 0x9D, 0x95, 0xC1, 0x9A, 0x92, 0xC1, 0x9A, 0x92, 0xBA, 0x94, 0x8C, 
   0xB9, 0x94, 0x8C, 0xBD, 0x99, 0x91, 0xC9, 0xA5, 0x9D, 0xBC, 0x9A, 0x91, 0xB5, 0x94, 0x8A, 0xB2, 
   0x93, 0x89, 0x94, 0x76, 0x6D, 0x7E, 0x64, 0x5D, 0x6D, 0x57, 0x51, 0x73, 0x63, 0x5E, 0x60, 0x57, 
   0x54, 0x61, 0x58, 0x59, 0x4C, 0x47, 0x4C, 0x4D, 0x46, 0x48, 0x53, 0x48, 0x48, 0x4F, 0x43, 0x3F, 
   0x50, 0x4A, 0x41, 0x45, 0x44, 0x37, 0x6A, 0x66, 0x5D, 0x8C, 0x86, 0x82, 0x3B, 0x34, 0x2F, 0x49, 
   0x40, 0x3B, 0x62, 0x57, 0x53, 0x9B, 0x8E, 0x8B, 0x75, 0x65, 0x62, 0x5D, 0x4F, 0x4D, 0x57, 0x4D, 
   0x4A, 0x4E, 0x49, 0x45, 0xA5, 0xA3, 0x9F, 0x7A, 0x73, 0x71, 0x43, 0x38, 0x36, 0x48, 0x3F, 0x3C, 
   0x8A, 0x88, 0x84, 0x7F, 0x7D, 0x7C, 0x44, 0x43, 0x43, 0x5E, 0x59, 0x57, 0x88, 0x7E, 0x78, 0x9A, 
   0x8F, 0x85, 0x9B, 0x83, 0x7F, 0xCB, 0xB5, 0xB1, 0x93, 0x83, 0x7D, 0x42, 0x37, 0x31, 0x57, 0x4C, 
   0x46, 0x6F, 0x62, 0x5C, 0x84, 0x6C, 0x67, 0xB3, 0x94, 0x90, 0xE7, 0xCE, 0xCA, 0xC0, 0xAC, 0xA7, 
   0x88, 0x75, 0x70, 0x86, 0x71, 0x6C, 0xBC, 0xA6, 0xA0, 0xAE, 0x95, 0x8E, 0xA0, 0x82, 0x7B, 0xB1, 
   0x8E, 0x88, 0xD3, 0xAD, 0xA8, 0xBE, 0x98, 0x93, 0x90, 0x6D, 0x67, 0xA0, 0x84, 0x7E, 0x9C, 0x83, 
   0x7D, 0xA5, 0x8B, 0x84, 0x8A, 0x6F, 0x67, 0x89, 0x6C, 0x61, 0x8A, 0x6B, 0x61, 0xA1, 0x7F, 0x75, 
   0xB6, 0x90, 0x88, 0x85, 0x63, 0x5A, 0x82, 0x63, 0x5B, 0x9B, 0x7D, 0x78, 0xB5, 0x97, 0x92, 0x9E, 
   0x80, 0x7D, 0x9F, 0x7F, 0x7A, 0xA3, 0x80, 0x7A, 0x9E, 0x7A, 0x74, 0xA9, 0x83, 0x7C, 0xBA, 0x90, 
   0x88, 0xCE, 0xA1, 0x98, 0xD6, 0xA9, 0x9E, 0xD9, 0xAB, 0xA2, 0xC1, 0x93, 0x8B, 0xC6, 0x9A, 0x91, 
   0xC2, 0x99, 0x90, 0xAD, 0x86, 0x7D, 0x9E, 0x79, 0x70, 0x9B, 0x77, 0x6C, 0x8B, 0x69, 0x5C, 0x86, 
   0x65, 0x58, 0x7D, 0x5D, 0x50, 0x75, 0x56, 0x49, 0x70, 0x53, 0x45, 0x71, 0x56, 0x48, 0x6D, 0x53, 
   0x45, 0x6D, 0x53, 0x45, 0x6A, 0x50, 0x42, 0x6A, 0x50, 0x42, 0x5C, 0x41, 0x33, 0x5E, 0x43, 0x35, 
   0x5F, 0x48, 0x39, 0x58, 0x44, 0x35, 0x7C, 0x77, 0x78, 0x5F, 0x59, 0x5A, 0x5E, 0x54, 0x55, 0x95, 
   0x88, 0x87, 0xE7, 0xD6, 0xD5, 0xD7, 0xC4, 0xC2, 0xBC, 0xA6, 0xA4, 0xC2, 0xA7, 0xA6, 0xBA, 0xA2, 
   0xA0, 0xB3, 0x9C, 0x9A, 0xA9, 0x92, 0x90, 0xAA, 0x8D, 0x8C, 0xD6, 0xB6, 0xB6, 0xF1, 0xDD, 0xDC, 
   0xB0, 0xA4, 0xA4, 0x47, 0x42, 0x42, 0x37, 0x38, 0x38, 0x44, 0x4C, 0x4B, 0x44, 0x4F, 0x50, 0x43, 
   0x50, 0x53, 0x43, 0x50, 0x58, 0x40, 0x4D, 0x55, 0x45, 0x52, 0x5A, 0x49, 0x56, 0x5E, 0x49, 0x56, 
   0x5E, 0x44, 0x51, 0x59, 0x3F, 0x4C, 0x53, 0x47, 0x53, 0x59, 0x74, 0x7F, 0x83, 0x61, 0x69, 0x6D, 
   0x3E, 0x44, 0x47, 0x6D, 0x71, 0x72, 0x9C, 0x9E, 0x9F, 0x9A, 0x96, 0x94, 0xF4, 0xEA, 0xE8, 0xF6, 
   0xE4, 0xE2, 0xEE, 0xD7, 0xD5, 0xEF, 0xD6, 0xD2, 0xEF, 0xD5, 0xD1, 0xEE, 0xD1, 0xCF, 0xEF, 0xD0, 
   0xCF, 0xF3, 0xD4, 0xD3, 0xF0, 0xD2, 0xD1, 0xF1, 0xD4, 0xD3, 0xF2, 0xD6, 0xD5, 0xF2, 0xD6, 0xD5, 
   0xEB, 0xD2, 0xCE, 0xEB, 0xD2, 0xCE, 0xEB, 0xD2, 0xCE, 0xEB, 0xD2, 0xCE, 0xF0, 0xD8, 0xD4, 0xE8, 
   0xCE, 0xCA, 0xE2, 0xCB, 0xC8, 0xC7, 0xB2, 0xB0, 0xE3, 0xCE, 0xCC, 0xFA, 0xE6, 0xE4, 0xF8, 0xE3, 
   0xE1, 0xF9, 0xE4, 0xE2, 0xF8, 0xE3, 0xE1, 0xF6, 0xE1, 0xDF, 0xF5, 0xE1, 0xDE, 0xF7, 0xE5, 0xE2, 
   0xF7, 0xE6, 0xE3, 0xF5, 0xE5, 0xE2, 0xF5, 0xE6, 0xE3, 0xF4, 0xE6, 0xE1, 0xF3, 0xE5, 0xDF, 0xF5, 
   0xE7, 0xE1, 0xF9, 0xEB, 0xE5, 0xF8, 0xEA, 0xE4, 0xF9, 0xEB, 0xE5, 0xF7, 0xE9, 0xE3, 0xF9, 0xE7, 
   0xE1, 0xF8, 0xE6, 0xE2, 0xF8, 0xE8, 0xE5, 0xF0, 0xE0, 0xDE, 0xF5, 0xE6, 0xE5, 0xF1, 0xE4, 0xE5, 
   0xEE, 0xDE, 0xDD, 0xF2, 0xE1, 0xDE, 0xF3, 0xE2, 0xDF, 0xF7, 0xE7, 0xE4, 0xF6, 0xE6, 0xE3, 0xF4, 
   0xE3, 0xE0, 0xF5, 0xE4, 0xE1, 0xF8, 0xE7, 0xE4, 0xF8, 0xE8, 0xE5, 0xFA, 0xE8, 0xE5, 0xF9, 0xE6, 
   0xE3, 0xFA, 0xE5, 0xE3, 0xFD, 0xE7, 0xE5, 0xFA, 0xE7, 0xE4, 0xEF, 0xDE, 0xDB, 0xF6, 0xE5, 0xE2, 
   0xF2, 0xE1, 0xDE, 0xF1, 0xE0, 0xDD, 0xF9, 0xE9, 0xE6, 0xE3, 0xD4, 0xD1, 0xC9, 0xBB, 0xB5, 0xCF, 
   0xC3, 0xBD, 0xE4, 0xDA, 0xD6, 0xEA, 0xE2, 0xDF, 0xA0, 0x95, 0x95, 0xB5, 0xAB, 0xAB, 0x9E, 0x9D, 
   0x9C, 0x7B, 0x80, 0x7F, 0x9A, 0x95, 0x96, 0x91, 0x89, 0x8A, 0xBE, 0xB1, 0xB3, 0xE6, 0xD8, 0xDA, 
   0xFF, 0xF7, 0xF9, 0xF3, 0xE8, 0xE8, 0xF0, 0xE4, 0xE4, 0xE6, 0xDC, 0xDC, 0xC8, 0xBB, 0xBC, 0xC4, 
   0xB8, 0xB8, 0xD3, 0xC8, 0xC8, 0xCF, 0xC7, 0xC4, 0xFF, 0xF8, 0xF1, 0xE6, 0xD6, 0xD0, 0xBA, 0xA4, 
   0x9F, 0x94, 0x7E, 0x79, 0x9B, 0x87, 0x82, 0x97, 0x84, 0x7F, 0x90, 0x7E, 0x77, 0x86, 0x77, 0x70, 
   0x69, 0x5C, 0x54, 0x6F, 0x62, 0x5A, 0x77, 0x65, 0x5E, 0x9F, 0x8A, 0x84, 0xB9, 0x9B, 0x94, 0xD3, 
   0xAE, 0xA6, 0xBF, 0x9B, 0x93, 0xBB, 0x9A, 0x91, 0xC1, 0xA2, 0x99, 0xB7, 0x99, 0x90, 0x91, 0x75, 
   0x6C, 0x88, 0x72, 0x66, 0xCD, 0xB9, 0xAE, 0xA0, 0x8D, 0x88, 0x92, 0x7E, 0x7D, 0xB5, 0x9F, 0x9E, 
   0xBD, 0xA4, 0xA0, 0xDF, 0xBE, 0xB7, 0xF0, 0xC9, 0xC1, 0xD7, 0xB1, 0xA9, 0xE2, 0xBE, 0xB6, 0xE4, 
   0xC0, 0xB8, 0xDC, 0xB9, 0xB1, 0xBB, 0x9A, 0x91, 0x86, 0x67, 0x5E, 0x88, 0x69, 0x60, 0xCF, 0xAF, 
   0xA6, 0xBF, 0x9E, 0x95, 0xB8, 0x95, 0x8D, 0xB7, 0x92, 0x8A, 0xB5, 0x8F, 0x87, 0xBF, 0x98, 0x90, 
   0xC3, 0x9E, 0x96, 0xC4, 0xA0, 0x98, 0xC8, 0xA4, 0x9C, 0xBD, 0x9C, 0x93, 0xA9, 0x88, 0x7F, 0xAC, 
   0x8B, 0x81, 0x8B, 0x6C, 0x63, 0x84, 0x68, 0x61, 0x6F, 0x58, 0x53, 0x59, 0x48, 0x44, 0x49, 0x3C, 
   0x3A, 0x59, 0x4E, 0x4F, 0x51, 0x4C, 0x4E, 0x51, 0x4A, 0x4B, 0x46, 0x3C, 0x39, 0x47, 0x3C, 0x38, 
   0x3F, 0x3A, 0x32, 0x43, 0x42, 0x38, 0x52, 0x4F, 0x48, 0x86, 0x82, 0x7D, 0x9A, 0x94, 0x8F, 0x4D, 
   0x43, 0x3F, 0x7A, 0x6E, 0x6A, 0xAB, 0x9C, 0x99, 0x4F, 0x3E, 0x3B, 0x73, 0x5F, 0x5F, 0xA7, 0x97, 
   0x96, 0x7A, 0x71, 0x6E, 0x76, 0x6F, 0x6C, 0x5B, 0x52, 0x4F, 0x59, 0x4C, 0x4B, 0x58, 0x4D, 0x4A, 
   0x9F, 0x97, 0x94, 0xA0, 0x9B, 0x9A, 0x47, 0x40, 0x41, 0x4C, 0x43, 0x42, 0x6E, 0x62, 0x5C, 0xBF, 
   0xAF, 0xA7, 0x67, 0x55, 0x50, 0x6C, 0x5E, 0x58, 0x9B, 0x90, 0x89, 0x66, 0x5E, 0x57, 0x51, 0x46, 
   0x40, 0x45, 0x39, 0x33, 0xA3, 0x8C, 0x87, 0xF0, 0xD2, 0xCF, 0xDA, 0xC3, 0xBE, 0xC7, 0xB2, 0xAD, 
   0xB9, 0xA5, 0xA0, 0xD1, 0xBB, 0xB7, 0xC4, 0xAB, 0xA7, 0xA4, 0x88, 0x81, 0xD5, 0xB5, 0xAF, 0xD9, 
   0xB6, 0xB0, 0xD2, 0xAF, 0xA9, 0x89, 0x6A, 0x64, 0x67, 0x4B, 0x44, 0x58, 0x41, 0x3A, 0x70, 0x5B, 
   0x55, 0x77, 0x60, 0x58, 0x7C, 0x64, 0x5B, 0x72, 0x58, 0x4D, 0x75, 0x5A, 0x4F, 0x93, 0x78, 0x6E, 
   0xA1, 0x81, 0x77, 0x9B, 0x7C, 0x73, 0x8C, 0x6E, 0x66, 0x68, 0x4B, 0x46, 0x7A, 0x5D, 0x58, 0x8B, 
   0x70, 0x6C, 0x8D, 0x71, 0x6C, 0xA3, 0x85, 0x7E, 0xA1, 0x80, 0x77, 0xAB, 0x87, 0x7F, 0xB7, 0x92, 
   0x87, 0xCD, 0xA6, 0x9A, 0xDF, 0xB7, 0xAB, 0xD0, 0xA3, 0x9B, 0xCA, 0x9F, 0x96, 0xD2, 0xA8, 0x9F, 
   0xC9, 0xA0, 0x97, 0xB0, 0x88, 0x7F, 0x9E, 0x77, 0x6E, 0x9A, 0x76, 0x6B, 0x95, 0x71, 0x64, 0x8D, 
   0x69, 0x5D, 0x82, 0x60, 0x53, 0x79, 0x59, 0x4C, 0x77, 0x58, 0x4B, 0x73, 0x56, 0x49, 0x75, 0x5A, 
   0x4C, 0x6F, 0x54, 0x46, 0x66, 0x4B, 0x3D, 0x6E, 0x53, 0x45, 0x73, 0x58, 0x4A, 0x59, 0x3D, 0x2F, 
   0x47, 0x2F, 0x20, 0x53, 0x3E, 0x2F, 0x4F, 0x53, 0x54, 0x49, 0x4B, 0x4C, 0x44, 0x40, 0x41, 0x47, 
   0x3F, 0x3F, 0x98, 0x8C, 0x8A, 0xE9, 0xDB, 0xD9, 0xB8, 0xA7, 0xA5, 0x85, 0x73, 0x72, 0x5B, 0x4E, 
   0x4C, 0x4C, 0x44, 0x41, 0x47, 0x41, 0x3E, 0x53, 0x48, 0x46, 0x83, 0x75, 0x73, 0xDD, 0xD2, 0xD1, 
   0x5F, 0x59, 0x58, 0x48, 0x44, 0x44, 0x39, 0x39, 0x39, 0x3F, 0x42, 0x43, 0x44, 0x4C, 0x4C, 0x4D, 
   0x58, 0x5B, 0x48, 0x56, 0x5E, 0x4C, 0x59, 0x61, 0x46, 0x53, 0x5B, 0x4D, 0x5A, 0x62, 0x4C, 0x59, 
   0x61, 0x3B, 0x48, 0x50, 0x45, 0x54, 0x5A, 0x4C, 0x5B, 0x5E, 0xAA, 0xB5, 0xB8, 0x88, 0x8D, 0x91, 
   0x6A, 0x6A, 0x6D, 0xA5, 0xA0, 0xA2, 0x66, 0x5E, 0x61, 0xE1, 0xD3, 0xD2, 0xF5, 0xE2, 0xE0, 0xEA, 
   0xCF, 0xCD, 0xF0, 0xD2, 0xCF, 0xF0, 0xD3, 0xCE, 0xEF, 0xD4, 0xCE, 0xED, 0xD1, 0xCE, 0xF1, 0xD1, 
   0xD1, 0xF0, 0xD3, 0xD2, 0xED, 0xD1, 0xD0, 0xEE, 0xD3, 0xD1, 0xEC, 0xD4, 0xD2, 0xE7, 0xD1, 0xCE, 
   0xE9, 0xD2, 0xCC, 0xE9, 0xD3, 0xCD, 0xED, 0xD6, 0xD1, 0xF0, 0xD9, 0xD3, 0xE2, 0xCC, 0xC6, 0xDE, 
   0xC7, 0xC1, 0xF5, 0xE1, 0xDD, 0xF8, 0xE7, 0xE4, 0xF9, 0xE7, 0xE4, 0xF7, 0xE5, 0xE2, 0xF4, 0xE2, 
   0xDF, 0xF3, 0xE2, 0xDF, 0xF3, 0xE2, 0xDF, 0xF7, 0xE3, 0xE1, 0xF9, 0xE6, 0xE3, 0xF3, 0xE2, 0xDF, 
   0xF3, 0xE4, 0xE1, 0xF3, 0xE6, 0xE2, 0xF1, 0xE5, 0xE1, 0xF5, 0xE8, 0xE4, 0xF7, 0xE9, 0xE5, 0xFB, 
   0xED, 0xE9, 0xF6, 0xE9, 0xE6, 0xF9, 0xEA, 0xE7, 0xF7, 0xE8, 0xE5, 0xFA, 0xEB, 0xE7, 0xFB, 0xEA, 
   0xE6, 0xF6, 0xE6, 0xE3, 0xF4, 0xE5, 0xE2, 0xEC, 0xDF, 0xDD, 0xEE, 0xE1, 0xE1, 0xF4, 0xE8, 0xE8, 
   0xFB, 0xEE, 0xEE, 0xFA, 0xE9, 0xE7, 0xF6, 0xE4, 0xE3, 0xF4, 0xE2, 0xE0, 0xF5, 0xE5, 0xE3, 0xFA, 
   0xE8, 0xE7, 0xFF, 0xED, 0xEC, 0xF8, 0xE9, 0xE6, 0xF5, 0xE5, 0xE3, 0xF7, 0xE4, 0xE3, 0xF8, 0xE3, 
   0xE2, 0xF7, 0xE2, 0xE1, 0xFC, 0xE4, 0xE4, 0xF6, 0xE2, 0xE0, 0xF1, 0xE0, 0xDD, 0xEC, 0xDB, 0xD8, 
   0xF5, 0xE5, 0xE2, 0xF4, 0xE3, 0xE0, 0xF6, 0xE6, 0xE3, 0xD2, 0xC3, 0xC0, 0xD5, 0xC9, 0xC3, 0xDD, 
   0xD1, 0xCC, 0xF9, 0xF0, 0xEC, 0xE9, 0xE1, 0xDD, 0x88, 0x80, 0x7F, 0x9A, 0x93, 0x92, 0xA6, 0xA7, 
   0xA6, 0x99, 0x9C, 0x9C, 0x67, 0x62, 0x63, 0x82, 0x75, 0x77, 0xA2, 0x94, 0x96, 0xF9, 0xEE, 0xF0, 
   0xF3, 0xEE, 0xEF, 0x91, 0x84, 0x85, 0xB9, 0xAB, 0xAC, 0xCA, 0xBD, 0xBD, 0x93, 0x85, 0x86, 0xB9, 
   0xAC, 0xAD, 0xCA, 0xBC, 0xBE, 0xE5, 0xDF, 0xDD, 0xEB, 0xE3, 0xDF, 0xD4, 0xC5, 0xC2, 0xBE, 0xAA, 
   0xA7, 0xA7, 0x94, 0x91, 0xAC, 0x99, 0x96, 0x85, 0x75, 0x72, 0xB9, 0xA9, 0xA3, 0xC8, 0xBA, 0xB4, 
   0x75, 0x6B, 0x64, 0x4E, 0x43, 0x3C, 0x56, 0x48, 0x42, 0x85, 0x72, 0x6D, 0xCA, 0xAF, 0xA8, 0xCE, 
   0xAE, 0xA4, 0xA6, 0x87, 0x7E, 0xB7, 0x9A, 0x91, 0xB5, 0x97, 0x8E, 0xBE, 0xA2, 0x99, 0xBB, 0xA0, 
   0x97, 0x7A, 0x66, 0x59, 0x7F, 0x6E, 0x62, 0x8B, 0x78, 0x73, 0x9E, 0x88, 0x88, 0xC2, 0xA7, 0xA7, 
   0xD7, 0xB7, 0xB4, 0xD5, 0xB0, 0xAA, 0xE7, 0xBF, 0xB7, 0xE1, 0xBB, 0xB3, 0xDA, 0xB6, 0xAE, 0xE7, 
   0xC5, 0xBD, 0xE2, 0xC2, 0xB9, 0xCE, 0xAF, 0xA6, 0xAF, 0x95, 0x8C, 0x73, 0x59, 0x4F, 0xBF, 0xA4, 
   0x9A, 0xC8, 0xAB, 0xA2, 0xAF, 0x8F, 0x86, 0xAF, 0x8D, 0x84, 0xB5, 0x92, 0x89, 0xC4, 0x9E, 0x96, 
   0xBF, 0x9A, 0x92, 0xC7, 0xA2, 0x9A, 0xCD, 0xA8, 0xA0, 0x9B, 0x7A, 0x71, 0x98, 0x77, 0x6E, 0xB4, 
   0x92, 0x88, 0xAC, 0x8B, 0x82, 0x70, 0x54, 0x4D, 0x73, 0x5C, 0x55, 0x6E, 0x5B, 0x57, 0x70, 0x64, 
   0x62, 0x5B, 0x50, 0x50, 0x43, 0x3F, 0x3D, 0x59, 0x53, 0x50, 0x5F, 0x56, 0x53, 0x55, 0x4C, 0x49, 
   0x54, 0x4F, 0x4A, 0x45, 0x43, 0x3D, 0x4F, 0x4D, 0x48, 0xC0, 0xBD, 0xB7, 0x83, 0x7E, 0x79, 0x5E, 
   0x54, 0x50, 0x76, 0x68, 0x65, 0x8F, 0x7E, 0x7B, 0x57, 0x46, 0x43, 0x87, 0x6F, 0x6E, 0xB4, 0xA0, 
   0xA0, 0x94, 0x85, 0x83, 0x57, 0x4B, 0x49, 0x4C, 0x40, 0x3D, 0x92, 0x82, 0x80, 0x72, 0x62, 0x60, 
   0x76, 0x68, 0x66, 0xAE, 0xA2, 0xA3, 0x70, 0x63, 0x65, 0x66, 0x58, 0x57, 0xAD, 0x9C, 0x97, 0xCD, 
   0xBA, 0xB2, 0x6E, 0x5A, 0x57, 0x75, 0x64, 0x60, 0xBF, 0xB0, 0xAD, 0xAE, 0x9E, 0x9B, 0x92, 0x7F, 
   0x7C, 0xAB, 0x95, 0x92, 0xB6, 0x9C, 0x99, 0x8F, 0x73, 0x6F, 0x6B, 0x54, 0x4F, 0x88, 0x75, 0x70, 
   0x7B, 0x67, 0x62, 0x75, 0x5F, 0x5B, 0x53, 0x3A, 0x36, 0xA6, 0x89, 0x82, 0xCE, 0xAD, 0xA7, 0xDA, 
   0xB8, 0xB2, 0xD3, 0xB5, 0xAE, 0xA5, 0x8A, 0x84, 0x89, 0x75, 0x6D, 0x52, 0x40, 0x38, 0x61, 0x4F, 
   0x48, 0x65, 0x52, 0x4A, 0x7A, 0x67, 0x5D, 0x7C, 0x68, 0x5C, 0x81, 0x6D, 0x60, 0x69, 0x55, 0x48, 
   0x7F, 0x66, 0x5B, 0x87, 0x6D, 0x64, 0x88, 0x6E, 0x65, 0x80, 0x65, 0x5F, 0x70, 0x57, 0x52, 0x85, 
   0x6F, 0x6A, 0x98, 0x80, 0x7A, 0xA4, 0x8B, 0x82, 0xB1, 0x95, 0x8B, 0xA8, 0x8A, 0x80, 0xA8, 0x88, 
   0x7D, 0xD1, 0xB0, 0xA3, 0xDB, 0xB7, 0xAA, 0xCE, 0xA6, 0x9C, 0xCC, 0xA5, 0x9C, 0xC6, 0x9F, 0x96, 
   0xC0, 0x99, 0x90, 0xA8, 0x83, 0x79, 0xA2, 0x7E, 0x75, 0xA0, 0x7B, 0x70, 0x99, 0x74, 0x67, 0x93, 
   0x6F, 0x63, 0x8B, 0x67, 0x5B, 0x81, 0x5F, 0x52, 0x79, 0x58, 0x4B, 0x78, 0x58, 0x4B, 0x76, 0x58, 
   0x4B, 0x74, 0x56, 0x49, 0x70, 0x53, 0x46, 0x6C, 0x4F, 0x42, 0x72, 0x54, 0x47, 0x68, 0x49, 0x3C, 
   0x65, 0x4B, 0x3D, 0x5F, 0x4B, 0x3B, 0x4F, 0x59, 0x59, 0x51, 0x5A, 0x5A, 0x53, 0x55, 0x56, 0x5B, 
   0x58, 0x58, 0x45, 0x3C, 0x3B, 0x9B, 0x90, 0x8E, 0xB2, 0xA7, 0xA4, 0x3A, 0x33, 0x32, 0x3F, 0x3E, 
   0x3C, 0x37, 0x3F, 0x3B, 0x2A, 0x36, 0x31, 0x37, 0x3F, 0x3C, 0x3D, 0x42, 0x3E, 0x69, 0x68, 0x66, 
   0x40, 0x3E, 0x3D, 0x86, 0x83, 0x84, 0x6B, 0x69, 0x69, 0x3D, 0x3E, 0x3E, 0x49, 0x4F, 0x4E, 0x4F, 
   0x57, 0x5A, 0x4B, 0x59, 0x61, 0x4A, 0x57, 0x5F, 0x41, 0x4E, 0x56, 0x42, 0x4F, 0x57, 0x44, 0x51, 
   0x59, 0x43, 0x50, 0x58, 0x4D, 0x5E, 0x63, 0x57, 0x66, 0x69, 0x78, 0x82, 0x85, 0x65, 0x68, 0x6B, 
   0x60, 0x5A, 0x5F, 0x5A, 0x4F, 0x52, 0xD2, 0xC4, 0xC7, 0xF4, 0xE0, 0xDF, 0xEC, 0xD1, 0xD0, 0xEE, 
   0xCD, 0xCB, 0xF8, 0xD4, 0xD0, 0xF6, 0xD5, 0xD0, 0xF3, 0xD8, 0xD0, 0xF2, 0xD6, 0xD2, 0xF4, 0xD5, 
   0xD5, 0xF1, 0xD3, 0xD3, 0xEE, 0xD3, 0xD2, 0xE9, 0xD1, 0xCF, 0xE6, 0xD1, 0xCF, 0xE6, 0xD4, 0xD0, 
   0xEC, 0xD9, 0xD2, 0xEF, 0xDB, 0xD4, 0xEC, 0xD9, 0xD2, 0xCC, 0xB9, 0xB2, 0xF1, 0xDF, 0xD8, 0xFC, 
   0xE8, 0xE1, 0xFD, 0xEB, 0xE6, 0xF8, 0xE9, 0xE6, 0xFB, 0xEB, 0xE8, 0xF8, 0xE8, 0xE5, 0xF3, 0xE3, 
   0xE0, 0xF3, 0xE4, 0xE1, 0xF6, 0xE6, 0xE3, 0xF7, 0xE3, 0xE0, 0xF4, 0xE1, 0xDE, 0xF5, 0xE3, 0xE1, 
   0xF4, 0xE5, 0xE2, 0xF3, 0xE7, 0xE3, 0xEF, 0xE5, 0xE1, 0xF5, 0xE9, 0xE5, 0xF7, 0xE9, 0xE6, 0xF3, 
   0xE4, 0xE1, 0xF1, 0xE2, 0xE0, 0xFD, 0xED, 0xEB, 0xFB, 0xEB, 0xE8, 0xFC, 0xEC, 0xE9, 0xF8, 0xE8, 
   0xE4, 0xF4, 0xE5, 0xE2, 0xF1, 0xE4, 0xE1, 0xF4, 0xE7, 0xE5, 0xF8, 0xED, 0xEC, 0xF9, 0xED, 0xEE, 
   0xD3, 0xC6, 0xC5, 0xD8, 0xC6, 0xC4, 0xED, 0xDC, 0xDB, 0xF1, 0xDF, 0xDE, 0xF4, 0xE4, 0xE3, 0xE6, 
   0xD5, 0xD4, 0xBE, 0xAC, 0xAA, 0xDF, 0xD1, 0xCF, 0xF6, 0xE5, 0xE3, 0xF7, 0xE4, 0xE3, 0xFB, 0xE7, 
   0xE6, 0xF5, 0xDD, 0xDD, 0xF3, 0xD9, 0xD9, 0xFA, 0xE4, 0xE2, 0xF4, 0xE3, 0xE0, 0xF0, 0xDF, 0xDC, 
   0xF5, 0xE5, 0xE2, 0xFB, 0xEB, 0xE8, 0xEC, 0xDC, 0xD9, 0xDE, 0xCE, 0xCA, 0xEA, 0xE0, 0xD9, 0xE4, 
   0xDB, 0xD6, 0xEA, 0xE2, 0xDE, 0xD6, 0xCE, 0xCB, 0x85, 0x7F, 0x7E, 0x6D, 0x68, 0x67, 0x69, 0x68, 
   0x68, 0x99, 0x99, 0x99, 0x60, 0x56, 0x58, 0xA4, 0x96, 0x98, 0xD5, 0xC7, 0xC9, 0xE6, 0xDC, 0xDF, 
   0x91, 0x8B, 0x8D, 0x59, 0x4A, 0x4B, 0xB6, 0xA6, 0xA7, 0xC3, 0xB3, 0xB5, 0x99, 0x89, 0x8B, 0xB0, 
   0xA1, 0xA2, 0xCC, 0xBC, 0xBE, 0xD0, 0xC8, 0xC6, 0xAE, 0xAA, 0xA5, 0x71, 0x66, 0x62, 0x9D, 0x8C, 
   0x89, 0x97, 0x85, 0x82, 0x77, 0x66, 0x63, 0xB6, 0xA8, 0xA5, 0xF9, 0xEB, 0xE5, 0xDD, 0xD1, 0xCB, 
   0xD6, 0xCE, 0xC6, 0xA0, 0x98, 0x91, 0x81, 0x75, 0x6F, 0x84, 0x75, 0x6F, 0x9D, 0x85, 0x7D, 0xD9, 
   0xBC, 0xB1, 0xA8, 0x8C, 0x81, 0x91, 0x75, 0x6B, 0xBA, 0x9E, 0x93, 0xD0, 0xB4, 0xA9, 0xA7, 0x8D, 
   0x82, 0x9D, 0x8B, 0x7E, 0x90, 0x7F, 0x74, 0x83, 0x70, 0x6B, 0xA3, 0x8C, 0x8B, 0xB9, 0x99, 0x9A, 
   0xC0, 0x99, 0x98, 0xDA, 0xB1, 0xAC, 0xDD, 0xB5, 0xAD, 0xDD, 0xB7, 0xAF, 0xDD, 0xB9, 0xB1, 0xDB, 
   0xBA, 0xB2, 0xA9, 0x8A, 0x81, 0x9A, 0x7D, 0x74, 0x8D, 0x78, 0x6E, 0x80, 0x6C, 0x61, 0xA4, 0x8C, 
   0x82, 0xC8, 0xAE, 0xA4, 0xAB, 0x8E, 0x85, 0xA2, 0x85, 0x7C, 0xAE, 0x8D, 0x84, 0xB3, 0x8D, 0x85, 
   0xC1, 0x9C, 0x95, 0xCE, 0xAA, 0xA2, 0xC6, 0xA2, 0x9A, 0x9A, 0x79, 0x70, 0x89, 0x68, 0x5F, 0x92, 
   0x6F, 0x66, 0xA3, 0x82, 0x79, 0x89, 0x6B, 0x65, 0x7C, 0x63, 0x5E, 0x6C, 0x58, 0x54, 0x5C, 0x4F, 
   0x4E, 0x5D, 0x53, 0x52, 0x47, 0x45, 0x40, 0x49, 0x44, 0x40, 0x77, 0x6F, 0x6B, 0x6E, 0x64, 0x62, 
   0x47, 0x43, 0x42, 0x57, 0x57, 0x55, 0x72, 0x73, 0x6E, 0x82, 0x7F, 0x7A, 0x4E, 0x49, 0x45, 0x5D, 
   0x53, 0x4F, 0xA0, 0x92, 0x8F, 0x8E, 0x7C, 0x79, 0x55, 0x41, 0x3E, 0x6F, 0x53, 0x52, 0xAB, 0x92, 
   0x92, 0xC7, 0xB5, 0xB4, 0x65, 0x57, 0x54, 0x9C, 0x8D, 0x8B, 0xC5, 0xB3, 0xB2, 0xAC, 0x98, 0x96, 
   0x5E, 0x4C, 0x4B, 0x5A, 0x48, 0x4A, 0x6E, 0x5F, 0x61, 0x99, 0x88, 0x89, 0xC7, 0xB4, 0xAF, 0xCB, 
   0xB6, 0xAD, 0xAD, 0x95, 0x93, 0x8A, 0x73, 0x72, 0xA5, 0x8F, 0x8D, 0xBA, 0xA2, 0xA0, 0xC2, 0xA5, 
   0xA4, 0xD3, 0xB1, 0xB1, 0xDA, 0xBA, 0xB8, 0xC9, 0xAF, 0xAA, 0x94, 0x7F, 0x7A, 0x6A, 0x58, 0x53, 
   0x7C, 0x6A, 0x65, 0x9F, 0x88, 0x84, 0x9F, 0x85, 0x81, 0xD1, 0xB3, 0xAC, 0xD7, 0xB6, 0xB0, 0xD9, 
   0xB8, 0xB3, 0xB9, 0x9D, 0x97, 0x8C, 0x78, 0x70, 0x85, 0x79, 0x70, 0x90, 0x84, 0x7B, 0xAB, 0x9B, 
   0x94, 0xAF, 0xA0, 0x98, 0xAB, 0x9B, 0x91, 0x87, 0x76, 0x6A, 0x84, 0x73, 0x66, 0x53, 0x42, 0x35, 
   0x58, 0x43, 0x39, 0x84, 0x6F, 0x63, 0x75, 0x5E, 0x55, 0x7F, 0x67, 0x61, 0x73, 0x5C, 0x56, 0x55, 
   0x40, 0x3C, 0x4D, 0x3A, 0x31, 0x74, 0x60, 0x54, 0xAA, 0x92, 0x87, 0x99, 0x80, 0x73, 0xB8, 0x9D, 
   0x8F, 0xE5, 0xC8, 0xB9, 0xD0, 0xAE, 0x9F, 0xC1, 0x9C, 0x92, 0xCF, 0xAA, 0xA0, 0xBF, 0x9B, 0x91, 
   0xBD, 0x99, 0x90, 0xAE, 0x8B, 0x81, 0xAA, 0x87, 0x7D, 0xA3, 0x7E, 0x73, 0xA2, 0x7B, 0x6F, 0x9A, 
   0x75, 0x69, 0x90, 0x6C, 0x60, 0x87, 0x64, 0x58, 0x7F, 0x5D, 0x50, 0x78, 0x57, 0x4A, 0x78, 0x59, 
   0x4C, 0x73, 0x54, 0x47, 0x6E, 0x4E, 0x41, 0x71, 0x51, 0x44, 0x74, 0x54, 0x47, 0x78, 0x57, 0x4A, 
   0x6F, 0x55, 0x47, 0x55, 0x40, 0x31, 0x56, 0x5E, 0x5E, 0x5C, 0x65, 0x64, 0x60, 0x67, 0x67, 0x67, 
   0x6A, 0x69, 0x42, 0x40, 0x40, 0x51, 0x4A, 0x49, 0x9B, 0x94, 0x93, 0x45, 0x43, 0x44, 0x3E, 0x41, 
   0x41, 0x32, 0x3A, 0x39, 0x30, 0x39, 0x39, 0x42, 0x47, 0x47, 0x40, 0x41, 0x41, 0x3E, 0x3C, 0x3D, 
   0x37, 0x33, 0x33, 0xAC, 0xA7, 0xA6, 0x95, 0x91, 0x90, 0x36, 0x34, 0x34, 0x45, 0x48, 0x4B, 0x42, 
   0x48, 0x4E, 0x5B, 0x67, 0x6E, 0x47, 0x54, 0x5C, 0x39, 0x48, 0x50, 0x42, 0x51, 0x59, 0x47, 0x54, 
   0x5E, 0x45, 0x51, 0x5A, 0x45, 0x56, 0x5B, 0x49, 0x59, 0x5C, 0x4D, 0x56, 0x5A, 0x5E, 0x5D, 0x61, 
   0xA2, 0x97, 0x9B, 0xD7, 0xC4, 0xC8, 0xFE, 0xE7, 0xEA, 0xF0, 0xD4, 0xCF, 0xF4, 0xD6, 0xD1, 0xFD, 
   0xDB, 0xD7, 0xF8, 0xD6, 0xD1, 0xF6, 0xD5, 0xD0, 0xF5, 0xD7, 0xD0, 0xF3, 0xD7, 0xD1, 0xEE, 0xD4, 
   0xD1, 0xF0, 0xD3, 0xD0, 0xEB, 0xCF, 0xCD, 0xEE, 0xD1, 0xD0, 0xF1, 0xD4, 0xD4, 0xF5, 0xD9, 0xD8, 
   0xF0, 0xDE, 0xD9, 0xF4, 0xE8, 0xE3, 0xCD, 0xBD, 0xB8, 0xEC, 0xDE, 0xD8, 0xFA, 0xED, 0xE7, 0xF1, 
   0xE6, 0xDF, 0xF3, 0xEA, 0xE5, 0xFB, 0xF2, 0xF1, 0xF4, 0xEB, 0xE9, 0xEA, 0xDE, 0xDB, 0xF5, 0xE7, 
   0xE3, 0xF1, 0xE3, 0xDE, 0xF3, 0xE3, 0xDF, 0xF7, 0xE3, 0xDE, 0xF8, 0xE5, 0xDF, 0xF7, 0xE5, 0xDF, 
   0xF5, 0xE4, 0xDF, 0xF7, 0xE8, 0xE2, 0xF5, 0xE6, 0xE1, 0xF8, 0xE8, 0xE3, 0xEE, 0xDF, 0xDC, 0xF0, 
   0xE4, 0xE0, 0xF8, 0xF0, 0xEC, 0xFB, 0xF2, 0xEE, 0xF8, 0xEF, 0xEB, 0xF2, 0xE9, 0xE5, 0xF3, 0xE9, 
   0xE5, 0xF4, 0xEB, 0xE7, 0xF2, 0xEB, 0xE8, 0xFF, 0xF8, 0xF6, 0xE9, 0xE4, 0xE3, 0xAA, 0xA5, 0xA6, 
   0x6B, 0x62, 0x63, 0xDC, 0xCF, 0xD0, 0xEC, 0xDF, 0xE0, 0xF0, 0xDD, 0xDE, 0xE1, 0xD1, 0xD1, 0x93, 
   0x83, 0x83, 0x6B, 0x5F, 0x5C, 0xE9, 0xDF, 0xDC, 0xFE, 0xF1, 0xEF, 0xFF, 0xF3, 0xF1, 0xF9, 0xE9, 
   0xE9, 0xDE, 0xCA, 0xCB, 0xE4, 0xCE, 0xD1, 0xF5, 0xE2, 0xE2, 0xF4, 0xE2, 0xE0, 0xFD, 0xED, 0xEB, 
   0xF1, 0xDF, 0xDD, 0xE5, 0xD4, 0xD2, 0xD2, 0xC1, 0xBF, 0xE8, 0xD9, 0xD6, 0xE7, 0xD8, 0xD5, 0xDB, 
   0xCE, 0xCC, 0xD2, 0xC6, 0xC4, 0xC5, 0xBB, 0xBB, 0xB8, 0xB2, 0xB1, 0x76, 0x6F, 0x6E, 0xAA, 0xA3, 
   0xA3, 0xDC, 0xD3, 0xD4, 0x82, 0x75, 0x78, 0xA2, 0x96, 0x97, 0xE3, 0xD9, 0xD9, 0x89, 0x7D, 0x7C, 
   0x56, 0x4D, 0x4B, 0x63, 0x56, 0x54, 0xC1, 0xB3, 0xB1, 0xE0, 0xD0, 0xCF, 0xA0, 0x8F, 0x8E, 0x9C, 
   0x8A, 0x89, 0xD3, 0xC0, 0xBE, 0x9F, 0x8D, 0x8B, 0x8F, 0x80, 0x7D, 0x8E, 0x7E, 0x7C, 0xA0, 0x91, 
   0x8F, 0x84, 0x75, 0x73, 0xB3, 0xA3, 0xA2, 0xFB, 0xED, 0xEB, 0xE1, 0xD0, 0xCC, 0xE3, 0xD4, 0xCF, 
   0xEF, 0xE0, 0xDB, 0xF1, 0xE4, 0xDF, 0xD2, 0xC3, 0xBF, 0xC4, 0xB3, 0xAF, 0xB3, 0x9D, 0x99, 0x9A, 
   0x80, 0x7C, 0xB5, 0x9D, 0x98, 0x9C, 0x84, 0x7F, 0x8E, 0x77, 0x72, 0x8F, 0x78, 0x73, 0x7E, 0x68, 
   0x63, 0x6B, 0x5B, 0x51, 0xA8, 0x98, 0x8E, 0xA1, 0x8D, 0x87, 0x9D, 0x86, 0x81, 0xAC, 0x8E, 0x8A, 
   0xCF, 0xAD, 0xA8, 0xC7, 0xA3, 0x9B, 0xDD, 0xBB, 0xB0, 0xE3, 0xC0, 0xB5, 0xDF, 0xBB, 0xB0, 0xC3, 
   0xA3, 0x98, 0x78, 0x5D, 0x51, 0x76, 0x5F, 0x53, 0x78, 0x61, 0x55, 0x83, 0x6B, 0x61, 0x98, 0x7E, 
   0x74, 0xAB, 0x90, 0x85, 0xB5, 0x98, 0x8D, 0xA3, 0x83, 0x79, 0xA6, 0x84, 0x79, 0xAF, 0x8A, 0x7F, 
   0xC2, 0x9E, 0x93, 0xD3, 0xB0, 0xA5, 0xD7, 0xB4, 0xAA, 0x93, 0x73, 0x67, 0x8B, 0x6C, 0x60, 0x8A, 
   0x65, 0x5C, 0x85, 0x62, 0x5A, 0x83, 0x66, 0x5E, 0x86, 0x6E, 0x67, 0x73, 0x5F, 0x59, 0x77, 0x64, 
   0x60, 0x74, 0x63, 0x5F, 0x69, 0x61, 0x58, 0x55, 0x4D, 0x46, 0x55, 0x4E, 0x48, 0x70, 0x68, 0x64, 
   0x64, 0x5E, 0x5D, 0x65, 0x5E, 0x5F, 0x89, 0x87, 0x84, 0x87, 0x85, 0x7F, 0x48, 0x41, 0x3D, 0x4C, 
   0x42, 0x3E, 0xA4, 0x99, 0x95, 0xBB, 0xB2, 0xAE, 0x7A, 0x70, 0x6C, 0x89, 0x70, 0x71, 0xCD, 0xB6, 
   0xB7, 0xC4, 0xB4, 0xB4, 0x80, 0x72, 0x71, 0xA6, 0x97, 0x97, 0xC7, 0xB6, 0xB6, 0xCE, 0xB6, 0xB4, 
   0xC7, 0xAA, 0xA6, 0xC3, 0xA5, 0xA3, 0xC8, 0xA9, 0xA8, 0xCB, 0xAC, 0xA9, 0xCC, 0xAD, 0xA8, 0xC8, 
   0xAB, 0xA4, 0xB1, 0x9A, 0x96, 0x9E, 0x89, 0x85, 0xC3, 0xAD, 0xAA, 0xA9, 0x91, 0x8D, 0xB8, 0x98, 
   0x96, 0xD7, 0xAC, 0xAD, 0xDB, 0xB7, 0xB4, 0xDE, 0xC4, 0xBD, 0xDD, 0xC4, 0xBE, 0xBD, 0xA3, 0x9D, 
   0xBB, 0xA1, 0x9B, 0x99, 0x7B, 0x75, 0xE6, 0xC6, 0xC1, 0xE3, 0xBB, 0xB4, 0xDE, 0xB5, 0xAF, 0xC6, 
   0xA2, 0x9B, 0x65, 0x47, 0x3F, 0x63, 0x4B, 0x42, 0x93, 0x81, 0x78, 0xA0, 0x8D, 0x84, 0x97, 0x7F, 
   0x79, 0x82, 0x6C, 0x64, 0x6C, 0x57, 0x4E, 0x67, 0x53, 0x4A, 0x7B, 0x6A, 0x60, 0x80, 0x72, 0x67, 
   0x6F, 0x65, 0x57, 0x53, 0x46, 0x39, 0x53, 0x43, 0x38, 0x57, 0x44, 0x3D, 0x70, 0x5E, 0x58, 0x82, 
   0x73, 0x6F, 0x64, 0x51, 0x4D, 0x75, 0x5C, 0x59, 0x73, 0x58, 0x54, 0xB2, 0x95, 0x8F, 0xA8, 0x8C, 
   0x82, 0xBC, 0xA2, 0x96, 0xBC, 0xA3, 0x96, 0xBF, 0xA0, 0x98, 0xC9, 0xA7, 0x9E, 0xC2, 0x9B, 0x93, 
   0xC3, 0x99, 0x90, 0xB8, 0x8E, 0x84, 0xA9, 0x81, 0x76, 0xA9, 0x7F, 0x74, 0xA8, 0x7E, 0x72, 0x9E, 
   0x77, 0x6B, 0x95, 0x70, 0x63, 0x8B, 0x6A, 0x5C, 0x85, 0x67, 0x58, 0x75, 0x59, 0x49, 0x74, 0x55, 
   0x48, 0x73, 0x55, 0x48, 0x74, 0x56, 0x49, 0x6E, 0x50, 0x44, 0x72, 0x54, 0x49, 0x67, 0x49, 0x3E, 
   0x4C, 0x32, 0x26, 0x5F, 0x46, 0x3A, 0x67, 0x6C, 0x6B, 0x5A, 0x61, 0x60, 0x4F, 0x58, 0x57, 0x37, 
   0x3F, 0x3D, 0x58, 0x5B, 0x5B, 0x50, 0x4C, 0x4D, 0x61, 0x5C, 0x5D, 0x43, 0x40, 0x42, 0x3C, 0x3C, 
   0x3D, 0x36, 0x39, 0x3A, 0x3C, 0x3F, 0x40, 0x69, 0x64, 0x66, 0x49, 0x41, 0x44, 0x47, 0x3F, 0x42, 
   0x3E, 0x35, 0x36, 0xBE, 0xB4, 0xB3, 0xB4, 0xAD, 0xAA, 0x3A, 0x38, 0x39, 0x49, 0x4D, 0x52, 0x47, 
   0x4E, 0x56, 0x54, 0x5E, 0x65, 0x50, 0x5F, 0x65, 0x48, 0x5A, 0x61, 0x3D, 0x4F, 0x58, 0x43, 0x50, 
   0x59, 0x3B, 0x45, 0x50, 0x3D, 0x4B, 0x50, 0x43, 0x4F, 0x52, 0x47, 0x4B, 0x4F, 0x69, 0x63, 0x67, 
   0xD1, 0xC2, 0xC4, 0xF5, 0xDC, 0xE0, 0xEA, 0xCD, 0xD1, 0xF7, 0xD8, 0xD1, 0xF9, 0xD9, 0xD2, 0xF3, 
   0xD5, 0xCE, 0xF4, 0xD5, 0xCF, 0xF1, 0xD2, 0xCC, 0xF0, 0xD0, 0xCA, 0xEE, 0xD3, 0xCD, 0xEA, 0xD4, 
   0xCE, 0xE9, 0xCF, 0xCA, 0xF0, 0xD2, 0xD0, 0xF4, 0xD5, 0xD4, 0xF7, 0xD5, 0xD6, 0xFE, 0xDC, 0xDE, 
   0xED, 0xDD, 0xDC, 0xB6, 0xA7, 0xA5, 0xCC, 0xC0, 0xBE, 0xFD, 0xF2, 0xEF, 0xF6, 0xEC, 0xE8, 0xF6, 
   0xEE, 0xEA, 0xF4, 0xF0, 0xED, 0xD5, 0xD0, 0xD0, 0x89, 0x81, 0x81, 0x96, 0x8B, 0x88, 0xF2, 0xE4, 
   0xE0, 0xF5, 0xE5, 0xDF, 0xF7, 0xE6, 0xE0, 0xF7, 0xE4, 0xDD, 0xF8, 0xE5, 0xDE, 0xF9, 0xE6, 0xDF, 
   0xF8, 0xE5, 0xDE, 0xFB, 0xE8, 0xE1, 0xF9, 0xE6, 0xDF, 0xF6, 0xE2, 0xDE, 0xF1, 0xE5, 0xE3, 0xF2, 
   0xE9, 0xE6, 0xE6, 0xE3, 0xDE, 0xCE, 0xCC, 0xC6, 0xE4, 0xE0, 0xDB, 0xF3, 0xED, 0xE9, 0xF5, 0xF1, 
   0xEC, 0xFC, 0xF8, 0xF4, 0xE7, 0xE4, 0xE0, 0x9D, 0x9B, 0x99, 0x6E, 0x6C, 0x6B, 0x4B, 0x4C, 0x4B, 
   0x74, 0x71, 0x72, 0xF0, 0xE6, 0xE9, 0xE7, 0xDB, 0xDF, 0xD8, 0xC8, 0xCA, 0xAE, 0x9F, 0xA0, 0xC1, 
   0xB5, 0xB5, 0xCB, 0xC4, 0xC1, 0xFF, 0xFE, 0xFB, 0xED, 0xE8, 0xE5, 0xC4, 0xBB, 0xBB, 0x94, 0x87, 
   0x88, 0xDA, 0xCB, 0xCC, 0xF0, 0xE2, 0xE5, 0xEF, 0xDE, 0xDF, 0xFE, 0xF0, 0xEF, 0xF3, 0xE1, 0xE0, 
   0xE9, 0xD8, 0xD7, 0xDC, 0xCA, 0xC9, 0xD8, 0xC8, 0xC6, 0xF9, 0xEB, 0xE9, 0xDF, 0xD1, 0xD2, 0xD2, 
   0xC2, 0xC4, 0xFC, 0xF0, 0xF1, 0xD0, 0xC6, 0xC7, 0xA5, 0x9A, 0x9B, 0x97, 0x8E, 0x8E, 0xA3, 0x97, 
   0x98, 0xB9, 0xAC, 0xAF, 0xA7, 0x99, 0x9B, 0xF3, 0xE9, 0xEA, 0xB3, 0xA8, 0xA7, 0x6A, 0x5C, 0x59, 
   0x67, 0x59, 0x55, 0x82, 0x76, 0x71, 0xC9, 0xBC, 0xB8, 0xA9, 0x98, 0x95, 0x9C, 0x89, 0x86, 0xAB, 
   0x95, 0x93, 0xE9, 0xD3, 0xD1, 0xD1, 0xB8, 0xB7, 0x9D, 0x85, 0x85, 0xBB, 0xA7, 0xA6, 0x6E, 0x61, 
   0x5F, 0xC8, 0xBC, 0xBA, 0xFF, 0xF1, 0xF0, 0xF7, 0xE6, 0xE4, 0xEE, 0xDB, 0xD8, 0xF7, 0xE4, 0xE1, 
   0xF8, 0xE5, 0xE3, 0xFC, 0xEB, 0xE9, 0xF8, 0xE8, 0xE5, 0xFB, 0xF2, 0xEE, 0xFF, 0xED, 0xEC, 0xE6, 
   0xCF, 0xD0, 0x87, 0x72, 0x72, 0x80, 0x6C, 0x6C, 0x89, 0x75, 0x75, 0x80, 0x6E, 0x6D, 0x80, 0x6F, 
   0x6F, 0x56, 0x49, 0x41, 0x81, 0x74, 0x6B, 0xBD, 0xAB, 0xA2, 0xAF, 0x99, 0x91, 0x9D, 0x84, 0x7C, 
   0xBF, 0xA3, 0x9C, 0xC4, 0xA7, 0x9E, 0xDA, 0xBC, 0xAE, 0xE3, 0xC3, 0xB6, 0xE0, 0xBF, 0xB3, 0xAB, 
   0x8E, 0x81, 0x76, 0x61, 0x52, 0x76, 0x66, 0x57, 0x84, 0x6A, 0x5E, 0x8B, 0x6D, 0x63, 0x7B, 0x61, 
   0x56, 0x76, 0x5D, 0x52, 0xA6, 0x8A, 0x7F, 0x9C, 0x7B, 0x71, 0x9D, 0x7A, 0x6F, 0xB2, 0x8E, 0x82, 
   0xC6, 0xA3, 0x98, 0xD0, 0xAE, 0xA2, 0xE6, 0xC7, 0xBA, 0xBC, 0x9D, 0x91, 0x9B, 0x7F, 0x72, 0x96, 
   0x71, 0x67, 0x8B, 0x67, 0x5F, 0x79, 0x5D, 0x54, 0x81, 0x6A, 0x63, 0x8A, 0x76, 0x6E, 0x7F, 0x67, 
   0x62, 0x9E, 0x86, 0x81, 0x7C, 0x6C, 0x63, 0x77, 0x6B, 0x62, 0x6A, 0x63, 0x5B, 0x68, 0x61, 0x5C, 
   0x4E, 0x45, 0x43, 0x4B, 0x3E, 0x3F, 0x78, 0x6F, 0x6D, 0x72, 0x6C, 0x66, 0x56, 0x4A, 0x46, 0x6C, 
   0x5D, 0x5A, 0xD3, 0xC6, 0xC2, 0xDF, 0xD8, 0xD3, 0xAC, 0xA5, 0xA1, 0xAC, 0x98, 0x99, 0xDC, 0xCB, 
   0xCC, 0x71, 0x64, 0x65, 0x7E, 0x73, 0x73, 0xAC, 0x9E, 0x9F, 0xB6, 0xA8, 0xA9, 0xB1, 0x9A, 0x97, 
   0xDD, 0xBA, 0xB3, 0xD2, 0xAC, 0xA6, 0xD6, 0xAD, 0xA7, 0xE2, 0xB8, 0xB3, 0xDC, 0xB5, 0xB1, 0xC2, 
   0x9F, 0x9A, 0x97, 0x82, 0x7C, 0xB3, 0xA1, 0x9B, 0x99, 0x87, 0x81, 0x9F, 0x89, 0x84, 0xDC, 0xBC, 
   0xB9, 0xD5, 0xAB, 0xA9, 0xEA, 0xC4, 0xC0, 0xE3, 0xC5, 0xBD, 0xD5, 0xB5, 0xAE, 0xD3, 0xAF, 0xAA, 
   0xCF, 0xAA, 0xA4, 0xD0, 0xA9, 0xA4, 0xD4, 0xAD, 0xA7, 0xDD, 0xB0, 0xA9, 0xE0, 0xB4, 0xAD, 0xA2, 
   0x7A, 0x73, 0x73, 0x52, 0x49, 0xA9, 0x8B, 0x81, 0xA4, 0x8A, 0x80, 0xA9, 0x8D, 0x85, 0x94, 0x76, 
   0x6F, 0x6E, 0x50, 0x49, 0x6F, 0x55, 0x4E, 0x70, 0x5B, 0x53, 0x57, 0x47, 0x3F, 0x6C, 0x61, 0x57, 
   0x8E, 0x8B, 0x7B, 0x94, 0x8B, 0x7D, 0x92, 0x84, 0x79, 0x57, 0x45, 0x3D, 0x46, 0x35, 0x2F, 0x89, 
   0x7C, 0x77, 0x9C, 0x87, 0x87, 0xB3, 0x95, 0x97, 0x8A, 0x6B, 0x6B, 0xB3, 0x95, 0x93, 0x61, 0x47, 
   0x41, 0x4F, 0x3B, 0x33, 0xA5, 0x97, 0x8C, 0xC2, 0xAB, 0xA4, 0xB3, 0x93, 0x8D, 0xC1, 0x99, 0x92, 
   0xBD, 0x90, 0x89, 0xBA, 0x8D, 0x85, 0xAB, 0x81, 0x77, 0xAE, 0x84, 0x79, 0xAA, 0x7E, 0x73, 0xA1, 
   0x7A, 0x6E, 0x9F, 0x7C, 0x6D, 0x9A, 0x7C, 0x6C, 0x8B, 0x71, 0x60, 0x7C, 0x63, 0x52, 0x74, 0x56, 
   0x49, 0x6F, 0x52, 0x45, 0x5F, 0x43, 0x37, 0x53, 0x37, 0x2B, 0x6D, 0x52, 0x47, 0x6A, 0x4F, 0x45, 
   0x61, 0x45, 0x3C, 0x57, 0x3B, 0x32, 0x7B, 0x81, 0x80, 0x52, 0x5A, 0x59, 0x47, 0x52, 0x50, 0x56, 
   0x5F, 0x5D, 0x63, 0x67, 0x66, 0x5B, 0x59, 0x5A, 0x6B, 0x65, 0x66, 0x43, 0x3D, 0x3D, 0x36, 0x33, 
   0x33, 0x35, 0x37, 0x36, 0x47, 0x49, 0x48, 0x86, 0x83, 0x82, 0x77, 0x70, 0x70, 0x47, 0x39, 0x3C, 
   0x5F, 0x4E, 0x50, 0xD7, 0xC8, 0xC8, 0xD3, 0xC9, 0xC7, 0x52, 0x50, 0x4F, 0x49, 0x51, 0x53, 0x47, 
   0x51, 0x58, 0x49, 0x55, 0x5B, 0x45, 0x53, 0x5A, 0x3A, 0x4C, 0x53, 0x43, 0x56, 0x5D, 0x43, 0x50, 
   0x57, 0x57, 0x60, 0x69, 0x46, 0x4C, 0x4F, 0x2E, 0x30, 0x30, 0x68, 0x64, 0x64, 0xC9, 0xBF, 0xBF, 
   0xE9, 0xD6, 0xD7, 0xEE, 0xD5, 0xD7, 0xF1, 0xD7, 0xD8, 0xF3, 0xD6, 0xD0, 0xF0, 0xD3, 0xCD, 0xEE, 
   0xD1, 0xCB, 0xEE, 0xD1, 0xCB, 0xEC, 0xCF, 0xC9, 0xED, 0xD0, 0xC9, 0xEB, 0xD0, 0xCA, 0xEB, 0xD3, 
   0xCD, 0xEB, 0xD2, 0xCE, 0xEB, 0xD0, 0xCE, 0xF3, 0xD8, 0xD8, 0xFC, 0xE4, 0xE4, 0xE2, 0xCA, 0xC8, 
   0xC4, 0xB4, 0xB2, 0xE3, 0xD9, 0xD8, 0xF6, 0xEA, 0xE8, 0xF1, 0xE4, 0xE2, 0xF3, 0xE8, 0xE6, 0xF6, 
   0xE9, 0xE7, 0xE0, 0xD8, 0xD7, 0x6C, 0x62, 0x62, 0x5F, 0x54, 0x55, 0xBB, 0xAD, 0xAB, 0xF8, 0xE7, 
   0xE5, 0xF7, 0xE3, 0xDF, 0xF6, 0xE3, 0xDE, 0xF5, 0xE3, 0xDD, 0xF7, 0xE5, 0xDE, 0xF8, 0xE6, 0xDF, 
   0xF8, 0xE6, 0xE0, 0xF8, 0xE6, 0xDF, 0xFA, 0xE8, 0xE1, 0xFA, 0xE7, 0xE3, 0xFA, 0xEF, 0xEE, 0xC6, 
   0xBB, 0xB9, 0x87, 0x82, 0x7E, 0xAB, 0xA8, 0xA4, 0xE1, 0xDE, 0xDB, 0xFD, 0xF6, 0xF4, 0xED, 0xEA, 
   0xE5, 0xA0, 0x9C, 0x98, 0x68, 0x65, 0x61, 0x45, 0x43, 0x42, 0x43, 0x42, 0x42, 0x57, 0x57, 0x57, 
   0x61, 0x5F, 0x61, 0x9E, 0x96, 0x9A, 0xE2, 0xD9, 0xDC, 0xBA, 0xAE, 0xB0, 0xB1, 0xA6, 0xA6, 0xDD, 
   0xD5, 0xD5, 0xF4, 0xF2, 0xEF, 0xAC, 0xA8, 0xA5, 0x5C, 0x57, 0x55, 0x41, 0x38, 0x39, 0x8C, 0x81, 
   0x81, 0xFC, 0xF1, 0xF2, 0xF4, 0xE7, 0xE9, 0xFB, 0xEC, 0xED, 0xF3, 0xE4, 0xE2, 0xE8, 0xD6, 0xD5, 
   0xDD, 0xCF, 0xCD, 0xC0, 0xB2, 0xB0, 0xCE, 0xC1, 0xBF, 0xF4, 0xE7, 0xE5, 0xB7, 0xAB, 0xAC, 0xD2, 
   0xC7, 0xC8, 0xDE, 0xD3, 0xD3, 0xA0, 0x96, 0x96, 0xA6, 0x9F, 0x9E, 0x95, 0x8E, 0x8E, 0x87, 0x7E, 
   0x7F, 0xCE, 0xC3, 0xC5, 0xE1, 0xD5, 0xD7, 0xFB, 0xF0, 0xF1, 0xE4, 0xD6, 0xD6, 0xBB, 0xAD, 0xAA, 
   0x79, 0x6A, 0x67, 0xA8, 0x97, 0x95, 0xBE, 0xAC, 0xA9, 0x6C, 0x59, 0x57, 0x9E, 0x89, 0x87, 0xDD, 
   0xC5, 0xC3, 0xEC, 0xD3, 0xD2, 0xA4, 0x8B, 0x8A, 0x7C, 0x65, 0x65, 0x84, 0x71, 0x70, 0xA8, 0x9B, 
   0x99, 0xF8, 0xEF, 0xED, 0xF7, 0xE8, 0xE7, 0xF5, 0xE3, 0xE1, 0xFA, 0xE7, 0xE4, 0xFE, 0xEB, 0xE8, 
   0xFD, 0xEB, 0xE8, 0xFC, 0xEA, 0xE7, 0xF1, 0xE3, 0xE0, 0xE9, 0xD7, 0xD5, 0xF3, 0xDF, 0xDD, 0xF8, 
   0xE5, 0xE4, 0xDA, 0xC9, 0xC7, 0x71, 0x5E, 0x5D, 0x65, 0x54, 0x52, 0x74, 0x65, 0x63, 0x77, 0x69, 
   0x66, 0x71, 0x67, 0x5F, 0x4C, 0x42, 0x3A, 0x7B, 0x6D, 0x66, 0xCD, 0xBC, 0xB6, 0x99, 0x84, 0x7E, 
   0x80, 0x67, 0x61, 0xAC, 0x92, 0x8A, 0xD3, 0xB7, 0xAB, 0xAF, 0x92, 0x88, 0xAF, 0x91, 0x87, 0x90, 
   0x75, 0x6B, 0x5A, 0x46, 0x3A, 0x5D, 0x4E, 0x41, 0x81, 0x66, 0x5C, 0x8D, 0x70, 0x67, 0x83, 0x6B, 
   0x62, 0x76, 0x61, 0x57, 0x74, 0x5D, 0x53, 0x73, 0x5B, 0x51, 0x93, 0x75, 0x6C, 0xAA, 0x88, 0x7E, 
   0xC9, 0xA7, 0x9D, 0xD8, 0xB7, 0xAE, 0xF5, 0xD8, 0xCE, 0xC5, 0xA9, 0x9E, 0x9C, 0x80, 0x75, 0x9C, 
   0x7B, 0x72, 0x8D, 0x6D, 0x64, 0x76, 0x5C, 0x53, 0x62, 0x4E, 0x46, 0x8F, 0x7D, 0x76, 0xE3, 0xD2, 
   0xCD, 0xB0, 0x9B, 0x96, 0x7B, 0x69, 0x62, 0x60, 0x52, 0x4B, 0x5B, 0x52, 0x4B, 0x46, 0x3C, 0x38, 
   0x5F, 0x54, 0x51, 0x78, 0x69, 0x69, 0x91, 0x82, 0x81, 0x8D, 0x7C, 0x79, 0x64, 0x4E, 0x4B, 0x8C, 
   0x72, 0x70, 0xC9, 0xB0, 0xAF, 0x8F, 0x78, 0x76, 0x83, 0x6F, 0x6C, 0xB2, 0xA0, 0xA1, 0xC3, 0xB5, 
   0xB5, 0x66, 0x5D, 0x5D, 0x43, 0x3C, 0x3C, 0x6C, 0x62, 0x62, 0x6F, 0x64, 0x65, 0x82, 0x6F, 0x6D, 
   0xB7, 0x9C, 0x96, 0xB0, 0x90, 0x8B, 0xE1, 0xBD, 0xB9, 0xEA, 0xC6, 0xC2, 0xD6, 0xB4, 0xB0, 0xB5, 
   0x96, 0x91, 0x85, 0x71, 0x6C, 0xD6, 0xC4, 0xBE, 0xC4, 0xB2, 0xAD, 0xA6, 0x90, 0x8B, 0xC1, 0xA4, 
   0xA1, 0xE7, 0xC4, 0xC1, 0xF7, 0xD3, 0xCF, 0xD8, 0xB2, 0xAC, 0xC7, 0xA0, 0x9B, 0xCE, 0xA6, 0xA2, 
   0xDB, 0xB0, 0xAB, 0xD9, 0xAE, 0xA9, 0xD8, 0xAD, 0xA9, 0xDB, 0xB3, 0xAD, 0xC7, 0xA2, 0x9A, 0xAF, 
   0x8C, 0x84, 0xBB, 0x9A, 0x91, 0xAF, 0x92, 0x89, 0xAC, 0x91, 0x87, 0xB6, 0x97, 0x90, 0xBA, 0x9B, 
   0x95, 0x9B, 0x7E, 0x77, 0x6E, 0x56, 0x4F, 0x6B, 0x58, 0x50, 0x5D, 0x4F, 0x46, 0x5E, 0x55, 0x4B, 
   0x8B, 0x83, 0x77, 0x90, 0x83, 0x79, 0x9B, 0x88, 0x81, 0x73, 0x5C, 0x56, 0x8A, 0x72, 0x6C, 0x94, 
   0x7F, 0x78, 0xB2, 0x9C, 0x98, 0xC4, 0xAC, 0xA8, 0xCC, 0xB1, 0xAD, 0x80, 0x67, 0x61, 0x4F, 0x3A, 
   0x34, 0x6A, 0x5C, 0x54, 0xC0, 0xB7, 0xAE, 0x88, 0x73, 0x6E, 0xC2, 0xA6, 0xA0, 0x9C, 0x7C, 0x76, 
   0x75, 0x53, 0x4B, 0xBD, 0x9B, 0x93, 0xAC, 0x8D, 0x84, 0xAD, 0x8C, 0x81, 0xA7, 0x80, 0x74, 0xA6, 
   0x83, 0x77, 0xA7, 0x86, 0x79, 0xA4, 0x86, 0x78, 0x99, 0x7D, 0x6E, 0x85, 0x6A, 0x5B, 0x7E, 0x60, 
   0x53, 0x74, 0x56, 0x4A, 0x6C, 0x4E, 0x43, 0x64, 0x47, 0x3B, 0x62, 0x46, 0x3B, 0x67, 0x49, 0x40, 
   0x4A, 0x2E, 0x23, 0x50, 0x34, 0x28, 0x77, 0x80, 0x7F, 0x5B, 0x63, 0x62, 0x4D, 0x58, 0x56, 0x61, 
   0x6C, 0x6A, 0x44, 0x4A, 0x49, 0xA5, 0xA3, 0xA3, 0xB9, 0xB2, 0xB2, 0x4F, 0x46, 0x43, 0x54, 0x4E, 
   0x4B, 0x58, 0x57, 0x53, 0x5F, 0x5D, 0x59, 0x8E, 0x89, 0x86, 0xAF, 0xA6, 0xA3, 0x86, 0x6F, 0x71, 
   0xB7, 0x9D, 0xA0, 0xE9, 0xD6, 0xD4, 0xF0, 0xE5, 0xE1, 0x67, 0x66, 0x64, 0x39, 0x43, 0x46, 0x42, 
   0x50, 0x54, 0x47, 0x54, 0x5A, 0x3F, 0x4E, 0x54, 0x57, 0x69, 0x6F, 0x5B, 0x6C, 0x71, 0x4E, 0x59, 
   0x5F, 0x71, 0x78, 0x7F, 0x5D, 0x58, 0x5A, 0x90, 0x86, 0x85, 0xCB, 0xBE, 0xBC, 0xF1, 0xE0, 0xDD, 
   0xEF, 0xDA, 0xD7, 0xED, 0xD4, 0xD0, 0xED, 0xD3, 0xCE, 0xF3, 0xD6, 0xD1, 0xEF, 0xD2, 0xCD, 0xEE, 
   0xD1, 0xCC, 0xEA, 0xCD, 0xC8, 0xED, 0xD0, 0xCB, 0xF1, 0xD4, 0xCF, 0xF1, 0xD5, 0xD0, 0xF0, 0xD7, 
   0xD2, 0xEF, 0xD7, 0xD3, 0xF1, 0xDC, 0xDA, 0xFA, 0xE9, 0xE8, 0xE3, 0xD1, 0xD0, 0xDE, 0xD1, 0xCF, 
   0xE1, 0xDA, 0xD6, 0xEC, 0xE4, 0xE1, 0xF5, 0xEA, 0xE8, 0xF8, 0xEB, 0xEA, 0xF4, 0xE7, 0xE5, 0xFF, 
   0xF4, 0xF2, 0xB6, 0xAA, 0xAA, 0xAB, 0x9F, 0x9F, 0xA1, 0x93, 0x94, 0xF9, 0xEA, 0xE8, 0xF9, 0xE6, 
   0xE3, 0xF4, 0xE0, 0xDC, 0xFA, 0xE4, 0xDF, 0xF7, 0xE4, 0xDF, 0xF7, 0xE4, 0xDF, 0xF8, 0xE5, 0xE0, 
   0xF9, 0xE7, 0xE2, 0xF6, 0xE4, 0xDF, 0xFC, 0xE9, 0xE3, 0xFA, 0xE8, 0xE5, 0xE8, 0xDA, 0xD9, 0x92, 
   0x89, 0x86, 0x7A, 0x77, 0x74, 0xCF, 0xCF, 0xCA, 0xE3, 0xE1, 0xDE, 0xCD, 0xC9, 0xC6, 0x6D, 0x6A, 
   0x66, 0x51, 0x4E, 0x4A, 0x4F, 0x4C, 0x4A, 0x47, 0x47, 0x46, 0x50, 0x51, 0x50, 0x66, 0x69, 0x69, 
   0x5D, 0x5D, 0x60, 0x7A, 0x76, 0x7B, 0xCA, 0xC3, 0xC6, 0xC4, 0xBC, 0xBE, 0xED, 0xE7, 0xE7, 0xCF, 
   0xCD, 0xCB, 0x60, 0x61, 0x60, 0x4A, 0x49, 0x48, 0x4D, 0x4B, 0x4A, 0x47, 0x42, 0x41, 0xC7, 0xC0, 
   0xC0, 0xFC, 0xF5, 0xF5, 0xE7, 0xDC, 0xDC, 0xFF, 0xF2, 0xF2, 0xE2, 0xD0, 0xCF, 0xB0, 0x9B, 0x9A, 
   0xCD, 0xBB, 0xBA, 0xBD, 0xAE, 0xAC, 0xF8, 0xED, 0xEB, 0xCB, 0xBF, 0xBD, 0xB6, 0xAB, 0xAB, 0xE0, 
   0xD7, 0xD7, 0x98, 0x8F, 0x8F, 0x91, 0x8B, 0x8B, 0xAD, 0xA8, 0xA7, 0x6A, 0x66, 0x65, 0xA4, 0x9D, 
   0x9E, 0xE2, 0xD7, 0xD9, 0xEE, 0xE3, 0xE5, 0xF9, 0xEF, 0xF0, 0xEE, 0xE2, 0xE1, 0xDD, 0xCF, 0xCC, 
   0x9E, 0x8F, 0x8C, 0xC5, 0xB0, 0xAE, 0xC7, 0xB2, 0xB0, 0x9C, 0x86, 0x84, 0xBE, 0xA6, 0xA4, 0xF6, 
   0xDF, 0xDD, 0xED, 0xD7, 0xD6, 0xBA, 0x9E, 0x9E, 0xBE, 0xA8, 0xA7, 0xCD, 0xBA, 0xB9, 0xFF, 0xF5, 
   0xF3, 0xF4, 0xE9, 0xE7, 0xF4, 0xE4, 0xE3, 0xF9, 0xE8, 0xE7, 0xFB, 0xE9, 0xE6, 0xFB, 0xE8, 0xE5, 
   0xF7, 0xE4, 0xE1, 0xF9, 0xE7, 0xE4, 0xF6, 0xE3, 0xE0, 0xD8, 0xC5, 0xC2, 0xDB, 0xCA, 0xC8, 0xF2, 
   0xE2, 0xE1, 0xE2, 0xD0, 0xCF, 0xCE, 0xBC, 0xBB, 0x72, 0x62, 0x60, 0x5E, 0x50, 0x4E, 0x76, 0x6A, 
   0x67, 0x9E, 0x97, 0x90, 0x71, 0x6A, 0x63, 0x60, 0x55, 0x4F, 0x8F, 0x82, 0x7C, 0xB5, 0xA5, 0x9F, 
   0x6D, 0x5B, 0x56, 0x5F, 0x4B, 0x43, 0x7D, 0x65, 0x5B, 0x9A, 0x80, 0x76, 0x74, 0x58, 0x4F, 0x70, 
   0x59, 0x4E, 0x78, 0x69, 0x5D, 0x75, 0x6A, 0x5E, 0x84, 0x6B, 0x63, 0x88, 0x6C, 0x65, 0x74, 0x60, 
   0x58, 0x59, 0x49, 0x41, 0x71, 0x61, 0x58, 0x5B, 0x4A, 0x41, 0x7E, 0x68, 0x60, 0xBF, 0xA1, 0x98, 
   0xD4, 0xB5, 0xAC, 0xDA, 0xBD, 0xB4, 0xB5, 0x98, 0x8F, 0x9F, 0x84, 0x7A, 0x8A, 0x70, 0x66, 0xA1, 
   0x83, 0x79, 0xA4, 0x87, 0x7F, 0x82, 0x6A, 0x62, 0x5D, 0x4B, 0x43, 0x63, 0x51, 0x4B, 0xDC, 0xCE, 
   0xCA, 0x8E, 0x79, 0x74, 0xB2, 0x9D, 0x96, 0xAD, 0x9C, 0x96, 0x52, 0x45, 0x3F, 0x41, 0x36, 0x32, 
   0x81, 0x74, 0x71, 0xD0, 0xBF, 0xBE, 0xBE, 0xAA, 0xA8, 0xB9, 0x9F, 0x9D, 0xAC, 0x8D, 0x8C, 0xBF, 
   0x9C, 0x9C, 0xB9, 0x96, 0x96, 0x69, 0x4A, 0x49, 0x89, 0x6B, 0x6A, 0xAC, 0x9C, 0x9D, 0x75, 0x69, 
   0x6A, 0x59, 0x54, 0x53, 0x7D, 0x79, 0x78, 0x53, 0x4D, 0x4C, 0x7C, 0x74, 0x74, 0xA9, 0x9A, 0x97, 
   0x86, 0x70, 0x6B, 0xC4, 0xA8, 0xA4, 0xE8, 0xC9, 0xC6, 0xEB, 0xCC, 0xC9, 0xB6, 0x99, 0x95, 0xAB, 
   0x91, 0x8C, 0x7E, 0x6A, 0x65, 0x86, 0x75, 0x6F, 0x7C, 0x6C, 0x66, 0xA3, 0x90, 0x8B, 0xDF, 0xC6, 
   0xC1, 0xE4, 0xC7, 0xC3, 0xD6, 0xB2, 0xAF, 0xC8, 0x9E, 0x9C, 0xC0, 0x98, 0x95, 0xD5, 0xAA, 0xA7, 
   0xE6, 0xB9, 0xB6, 0xE1, 0xB2, 0xAF, 0xDC, 0xAD, 0xAB, 0xD7, 0xB5, 0xAF, 0xC8, 0xA7, 0xA1, 0xBB, 
   0x99, 0x93, 0xB0, 0x8F, 0x89, 0xAE, 0x8E, 0x88, 0xC3, 0xA3, 0x9D, 0xCC, 0xAB, 0xA5, 0xB2, 0x91, 
   0x8B, 0xB8, 0x9C, 0x95, 0x7B, 0x65, 0x5D, 0x4A, 0x39, 0x30, 0x59, 0x4D, 0x44, 0x8F, 0x85, 0x7C, 
   0x8E, 0x81, 0x7B, 0x4F, 0x3D, 0x36, 0x68, 0x51, 0x4B, 0x9E, 0x80, 0x79, 0x8E, 0x71, 0x6A, 0xB9, 
   0x9C, 0x93, 0xDE, 0xC4, 0xBB, 0xC9, 0xB2, 0xAA, 0xCB, 0xB1, 0xAB, 0x8F, 0x77, 0x71, 0x6C, 0x58, 
   0x54, 0x5A, 0x4E, 0x47, 0x52, 0x4B, 0x44, 0x8D, 0x7B, 0x77, 0xB0, 0x9B, 0x96, 0x9F, 0x88, 0x83, 
   0xB7, 0x9F, 0x9A, 0xBB, 0xA5, 0x9E, 0x81, 0x70, 0x69, 0x8F, 0x78, 0x6D, 0x97, 0x79, 0x6C, 0xA9, 
   0x8C, 0x7E, 0xAB, 0x8D, 0x81, 0xB2, 0x94, 0x89, 0x8F, 0x71, 0x66, 0x7D, 0x5F, 0x54, 0x75, 0x57, 
   0x4D, 0x6B, 0x4D, 0x42, 0x6F, 0x51, 0x46, 0x60, 0x42, 0x37, 0x57, 0x39, 0x2E, 0x5F, 0x40, 0x35, 
   0x5E, 0x42, 0x34, 0x59, 0x40, 0x2F, 0x58, 0x60, 0x60, 0x39, 0x43, 0x43, 0x37, 0x43, 0x42, 0x4A, 
   0x54, 0x54, 0x45, 0x49, 0x49, 0xAB, 0xAA, 0xAC, 0xD1, 0xC9, 0xCA, 0x89, 0x7C, 0x78, 0x96, 0x8D, 
   0x89, 0x96, 0x92, 0x8D, 0x6F, 0x6B, 0x66, 0xD5, 0xCF, 0xCA, 0xE1, 0xD7, 0xD3, 0xDB, 0xBE, 0xC1, 
   0xD9, 0xB7, 0xBB, 0xCE, 0xB5, 0xB4, 0xF5, 0xE5, 0xE3, 0x98, 0x95, 0x93, 0x2E, 0x39, 0x39, 0x46, 
   0x54, 0x58, 0x51, 0x5F, 0x65, 0x49, 0x59, 0x5E, 0x50, 0x5F, 0x62, 0x47, 0x54, 0x58, 0x47, 0x4F, 
   0x53, 0x38, 0x3A, 0x3E, 0xC3, 0xB3, 0xB3, 0xF9, 0xE5, 0xE2, 0xF3, 0xDE, 0xDA, 0xEC, 0xD5, 0xD0, 
   0xF2, 0xD9, 0xD3, 0xF1, 0xD7, 0xD1, 0xF5, 0xDC, 0xD5, 0xD0, 0xB5, 0xAF, 0xED, 0xD3, 0xCD, 0xEF, 
   0xD4, 0xCE, 0xF2, 0xD8, 0xD2, 0xF5, 0xDB, 0xD5, 0xF3, 0xD9, 0xD3, 0xF2, 0xD8, 0xD3, 0xEE, 0xD4, 
   0xD1, 0xD8, 0xC1, 0xBF, 0xE7, 0xD5, 0xD3, 0xBF, 0xB1, 0xB0, 0xD6, 0xCD, 0xCD, 0xFF, 0xFB, 0xFB, 
   0xC9, 0xC5, 0xC3, 0xDD, 0xD7, 0xD7, 0xF8, 0xEE, 0xEE, 0xF9, 0xEA, 0xEB, 0xFB, 0xEC, 0xED, 0xD7, 
   0xC7, 0xC8, 0x91, 0x81, 0x82, 0xB3, 0xA4, 0xA5, 0xF5, 0xEB, 0xEC, 0xF5, 0xE5, 0xE3, 0xF8, 0xE4, 
   0xE2, 0xF9, 0xE2, 0xDE, 0xFB, 0xE3, 0xDF, 0xF4, 0xE4, 0xDE, 0xF5, 0xE5, 0xDF, 0xF6, 0xE6, 0xE0, 
   0xF6, 0xE5, 0xDF, 0xFC, 0xEC, 0xE6, 0xFC, 0xEC, 0xE6, 0xEE, 0xDE, 0xDC, 0x93, 0x86, 0x87, 0x51, 
   0x49, 0x49, 0xA7, 0xA5, 0xA4, 0xFF, 0xFF, 0xFF, 0xCA, 0xC9, 0xC8, 0x51, 0x4D, 0x4B, 0x56, 0x54, 
   0x50, 0x4D, 0x4C, 0x49, 0x48, 0x49, 0x47, 0x59, 0x5A, 0x5A, 0x70, 0x72, 0x73, 0x62, 0x66, 0x67, 
   0x5A, 0x5E, 0x60, 0x81, 0x84, 0x88, 0xC8, 0xC6, 0xC9, 0x91, 0x8D, 0x8F, 0x85, 0x82, 0x83, 0x5B, 
   0x5D, 0x5C, 0x4A, 0x50, 0x4D, 0x59, 0x5D, 0x5C, 0x54, 0x56, 0x55, 0x4E, 0x4C, 0x4B, 0xCD, 0xC8, 
   0xC8, 0xBF, 0xB6, 0xB3, 0xE0, 0xD6, 0xD4, 0xE6, 0xD9, 0xD8, 0xC8, 0xB4, 0xB4, 0xE2, 0xD1, 0xD0, 
   0xFB, 0xED, 0xEB, 0xEC, 0xE3, 0xE1, 0xAD, 0xA0, 0x9E, 0xA7, 0x99, 0x98, 0xA0, 0x97, 0x97, 0x9E, 
   0x97, 0x97, 0x6A, 0x65, 0x63, 0x77, 0x73, 0x72, 0x83, 0x7F, 0x7E, 0x97, 0x95, 0x94, 0x97, 0x92, 
   0x92, 0xCD, 0xC2, 0xC4, 0xFB, 0xF6, 0xF7, 0xE9, 0xE1, 0xE2, 0xE1, 0xD6, 0xD5, 0xD4, 0xC5, 0xC3, 
   0x98, 0x87, 0x84, 0xBB, 0xA3, 0xA1, 0xD7, 0xBF, 0xBD, 0xD5, 0xBC, 0xBA, 0xDD, 0xC3, 0xC2, 0xBF, 
   0xA4, 0xA3, 0xC0, 0xA5, 0xA3, 0xDA, 0xBF, 0xBE, 0xF7, 0xE1, 0xE1, 0xF4, 0xE2, 0xE1, 0xF3, 0xE7, 
   0xE5, 0xF4, 0xE8, 0xE6, 0xF4, 0xE6, 0xE4, 0xF7, 0xE6, 0xE5, 0xFA, 0xE7, 0xE4, 0xF9, 0xE6, 0xE3, 
   0xF9, 0xE7, 0xE4, 0xF3, 0xE1, 0xDE, 0xD5, 0xC3, 0xC0, 0xC5, 0xB2, 0xAF, 0xDD, 0xCF, 0xCC, 0xDA, 
   0xC8, 0xC6, 0xD7, 0xC7, 0xC4, 0xD6, 0xC7, 0xC4, 0xB7, 0xA8, 0xA5, 0x55, 0x49, 0x45, 0x6C, 0x61, 
   0x5D, 0x70, 0x6C, 0x67, 0x5F, 0x5B, 0x56, 0x86, 0x7E, 0x7A, 0x85, 0x7B, 0x77, 0x9A, 0x8E, 0x8A, 
   0x96, 0x8A, 0x87, 0x50, 0x40, 0x3A, 0x67, 0x52, 0x49, 0x8E, 0x79, 0x71, 0xA8, 0x92, 0x8A, 0x6E, 
   0x5B, 0x52, 0x70, 0x64, 0x5A, 0x71, 0x69, 0x5F, 0x8E, 0x76, 0x70, 0x8E, 0x73, 0x6C, 0x6A, 0x58, 
   0x51, 0x53, 0x48, 0x40, 0x7E, 0x73, 0x6B, 0x62, 0x58, 0x50, 0x90, 0x7F, 0x78, 0xC8, 0xAB, 0xA4, 
   0xC5, 0xAA, 0xA3, 0xF8, 0xDF, 0xD8, 0xB8, 0xA0, 0x98, 0x5A, 0x44, 0x3C, 0x7B, 0x65, 0x5D, 0x93, 
   0x78, 0x70, 0xA0, 0x85, 0x7E, 0x8B, 0x78, 0x70, 0x62, 0x51, 0x4A, 0x4E, 0x3E, 0x38, 0x6C, 0x58, 
   0x55, 0x67, 0x51, 0x4E, 0x98, 0x81, 0x7C, 0x9F, 0x8B, 0x85, 0x90, 0x81, 0x7D, 0x75, 0x66, 0x63, 
   0xAC, 0x9C, 0x99, 0xA4, 0x93, 0x90, 0xBE, 0xAA, 0xA7, 0xD6, 0xBD, 0xBB, 0xCA, 0xAA, 0xA9, 0xBF, 
   0x9B, 0x9B, 0xD0, 0xA9, 0xA9, 0xAF, 0x8D, 0x8D, 0x97, 0x76, 0x76, 0x61, 0x52, 0x50, 0x50, 0x47, 
   0x45, 0x72, 0x6E, 0x6B, 0x88, 0x86, 0x81, 0x66, 0x62, 0x5F, 0x4F, 0x47, 0x45, 0x6F, 0x62, 0x5F, 
   0x8A, 0x77, 0x74, 0xAF, 0x98, 0x96, 0xD6, 0xBB, 0xBA, 0x81, 0x65, 0x64, 0x90, 0x77, 0x76, 0xAD, 
   0x98, 0x96, 0xB1, 0x9D, 0x99, 0x5C, 0x49, 0x44, 0x68, 0x56, 0x51, 0xBE, 0xAB, 0xA6, 0x90, 0x7C, 
   0x77, 0x9B, 0x85, 0x80, 0xD9, 0xBC, 0xB8, 0xB5, 0x93, 0x8E, 0xCC, 0xAB, 0xA6, 0xD3, 0xAE, 0xAA, 
   0xE3, 0xBC, 0xB9, 0xCC, 0xA5, 0xA1, 0xD9, 0xB2, 0xAE, 0xB5, 0x9A, 0x93, 0xA6, 0x8B, 0x83, 0xBC, 
   0x9E, 0x97, 0xB6, 0x96, 0x90, 0xC2, 0xA0, 0x9A, 0xD7, 0xB4, 0xAE, 0xC8, 0xA5, 0x9F, 0x8D, 0x6D, 
   0x67, 0x98, 0x7D, 0x76, 0x95, 0x83, 0x7A, 0x86, 0x77, 0x6E, 0x6E, 0x62, 0x59, 0x67, 0x5C, 0x53, 
   0x84, 0x73, 0x70, 0xA1, 0x8A, 0x88, 0x99, 0x7C, 0x77, 0xC6, 0xA3, 0x9D, 0xB5, 0x91, 0x89, 0xCA, 
   0xA7, 0x9C, 0xD5, 0xB3, 0xA8, 0xCE, 0xAE, 0xA5, 0x99, 0x79, 0x71, 0xB8, 0x98, 0x92, 0xA6, 0x8B, 
   0x86, 0x4A, 0x35, 0x31, 0x82, 0x74, 0x72, 0xA4, 0x95, 0x93, 0x6C, 0x5C, 0x59, 0x62, 0x52, 0x4F, 
   0x6C, 0x5F, 0x59, 0x8B, 0x7F, 0x77, 0x75, 0x6B, 0x63, 0x5A, 0x4A, 0x40, 0x90, 0x77, 0x6B, 0xBE, 
   0xA5, 0x99, 0xB2, 0x99, 0x8D, 0x76, 0x59, 0x4F, 0x62, 0x44, 0x3C, 0x70, 0x52, 0x4B, 0x7A, 0x5E, 
   0x56, 0x7A, 0x5C, 0x55, 0x71, 0x52, 0x4A, 0x5B, 0x3C, 0x33, 0x62, 0x41, 0x37, 0x6A, 0x48, 0x3F, 
   0x6D, 0x4F, 0x40, 0x66, 0x4C, 0x38, 0x3F, 0x49, 0x49, 0x36, 0x41, 0x41, 0x35, 0x41, 0x41, 0x4A, 
   0x54, 0x54, 0x53, 0x59, 0x59, 0x53, 0x52, 0x54, 0x97, 0x90, 0x90, 0x8E, 0x7D, 0x7A, 0xAD, 0xA1, 
   0x9D, 0xAF, 0xA9, 0xA4, 0x92, 0x8E, 0x88, 0xB6, 0xAF, 0xAA, 0xE1, 0xD7, 0xD3, 0xDB, 0xC0, 0xC2, 
   0xD6, 0xB4, 0xB6, 0xDA, 0xC1, 0xBF, 0xFF, 0xF8, 0xF4, 0xA9, 0xA7, 0xA4, 0x2D, 0x36, 0x36, 0x43, 
   0x50, 0x54, 0x49, 0x54, 0x5A, 0x47, 0x54, 0x58, 0x40, 0x4D, 0x4F, 0x4F, 0x56, 0x58, 0x3A, 0x3A, 
   0x3C, 0x79, 0x73, 0x75, 0xF5, 0xDD, 0xDC, 0xF8, 0xDA, 0xD5, 0xF2, 0xD6, 0xD0, 0xEE, 0xD2, 0xCC, 
   0xEF, 0xD5, 0xCD, 0xE9, 0xD0, 0xC7, 0xE9, 0xD0, 0xC7, 0xD4, 0xBB, 0xB5, 0xF0, 0xD6, 0xD2, 0xF5, 
   0xDC, 0xD7, 0xEF, 0xD6, 0xD1, 0xF0, 0xD7, 0xD3, 0xF2, 0xD8, 0xD4, 0xF2, 0xD8, 0xD4, 0xD4, 0xBC, 
   0xB9, 0xA0, 0x8C, 0x8A, 0xD8, 0xC9, 0xC7, 0x80, 0x75, 0x74, 0xBE, 0xB9, 0xB9, 0xDC, 0xDC, 0xDC, 
   0xB5, 0xB2, 0xB1, 0xFD, 0xF8, 0xF8, 0xF6, 0xEF, 0xEF, 0xFA, 0xEF, 0xF0, 0xE6, 0xD9, 0xDA, 0xC4, 
   0xB4, 0xB5, 0xB7, 0xA9, 0xAA, 0xE8, 0xDB, 0xDC, 0xFA, 0xEE, 0xEF, 0xF6, 0xE5, 0xE3, 0xF4, 0xE0, 
   0xDD, 0xF9, 0xE1, 0xDE, 0xF8, 0xDF, 0xDC, 0xF6, 0xE5, 0xE1, 0xF5, 0xE4, 0xE0, 0xF8, 0xE8, 0xE5, 
   0xF9, 0xEC, 0xE9, 0xE2, 0xD1, 0xCD, 0xCF, 0xBD, 0xB9, 0xE2, 0xD3, 0xD1, 0x9D, 0x93, 0x93, 0x6F, 
   0x69, 0x68, 0xE3, 0xE3, 0xE2, 0xD2, 0xD5, 0xD3, 0x52, 0x53, 0x51, 0x48, 0x49, 0x46, 0x5F, 0x5F, 
   0x5C, 0x44, 0x46, 0x43, 0x49, 0x4B, 0x4A, 0x5C, 0x5E, 0x5F, 0x63, 0x67, 0x68, 0x5D, 0x61, 0x63, 
   0x52, 0x59, 0x5C, 0x6D, 0x73, 0x77, 0x73, 0x75, 0x79, 0x62, 0x62, 0x65, 0x45, 0x46, 0x47, 0x5F, 
   0x64, 0x64, 0x54, 0x5E, 0x5C, 0x58, 0x5E, 0x5E, 0x5C, 0x5F, 0x5F, 0x5E, 0x5C, 0x5B, 0xA2, 0x9C, 
   0x9A, 0x99, 0x90, 0x8D, 0xFC, 0xF3, 0xF0, 0xE0, 0xD0, 0xCE, 0xF0, 0xDD, 0xDC, 0xF6, 0xE9, 0xE7, 
   0xF5, 0xE9, 0xE7, 0x9A, 0x8E, 0x8C, 0x81, 0x74, 0x72, 0x75, 0x69, 0x68, 0x87, 0x7E, 0x7E, 0x87, 
   0x81, 0x80, 0x64, 0x60, 0x5E, 0x72, 0x6D, 0x6C, 0xB9, 0xB6, 0xB5, 0x98, 0x96, 0x95, 0xAD, 0xA9, 
   0xA9, 0xD5, 0xCF, 0xD0, 0xC5, 0xBA, 0xBC, 0xAB, 0x9F, 0xA0, 0x73, 0x64, 0x64, 0x6E, 0x5B, 0x59, 
   0xA3, 0x90, 0x8D, 0x9F, 0x84, 0x82, 0xBE, 0xA3, 0xA1, 0xED, 0xD5, 0xD3, 0xD2, 0xBC, 0xBA, 0xC5, 
   0xAA, 0xA9, 0xEA, 0xD0, 0xCF, 0xF9, 0xE2, 0xE1, 0xFD, 0xE7, 0xE7, 0xFE, 0xEC, 0xEB, 0xF9, 0xEC, 
   0xEA, 0xF5, 0xE8, 0xE6, 0xF5, 0xE5, 0xE4, 0xF5, 0xE3, 0xE2, 0xF9, 0xE7, 0xE4, 0xEF, 0xE0, 0xDD, 
   0xEB, 0xD9, 0xD6, 0xD1, 0xBF, 0xBC, 0xBF, 0xAD, 0xAA, 0xF0, 0xE0, 0xDE, 0xC2, 0xB0, 0xAC, 0xA3, 
   0x91, 0x8B, 0xDB, 0xCB, 0xC6, 0xF4, 0xEA, 0xE4, 0xB6, 0xA7, 0xA2, 0x5E, 0x52, 0x4C, 0x55, 0x4A, 
   0x44, 0x5F, 0x59, 0x54, 0x5F, 0x5B, 0x56, 0x65, 0x5E, 0x5A, 0x61, 0x58, 0x54, 0x61, 0x57, 0x53, 
   0x86, 0x7B, 0x77, 0x75, 0x66, 0x61, 0x65, 0x52, 0x4A, 0x72, 0x5F, 0x57, 0x86, 0x73, 0x6C, 0x64, 
   0x53, 0x4C, 0x57, 0x4D, 0x45, 0x50, 0x49, 0x40, 0x8F, 0x7A, 0x74, 0x95, 0x7C, 0x78, 0x75, 0x66, 
   0x60, 0x6A, 0x61, 0x5A, 0x5E, 0x57, 0x50, 0x4D, 0x48, 0x41, 0x87, 0x7A, 0x73, 0xC8, 0xB0, 0xAA, 
   0xD0, 0xBB, 0xB4, 0xE9, 0xD8, 0xD1, 0xA3, 0x8F, 0x88, 0x65, 0x52, 0x4B, 0x6E, 0x5B, 0x54, 0x76, 
   0x60, 0x58, 0x7F, 0x69, 0x61, 0x8D, 0x7E, 0x76, 0x7A, 0x6D, 0x66, 0x5C, 0x4E, 0x4A, 0xA3, 0x92, 
   0x8F, 0x9A, 0x85, 0x83, 0x70, 0x57, 0x55, 0x72, 0x5D, 0x5A, 0x8C, 0x7C, 0x7A, 0x86, 0x77, 0x74, 
   0x9D, 0x8E, 0x88, 0x9D, 0x8C, 0x87, 0xA8, 0x97, 0x93, 0x98, 0x85, 0x82, 0x9B, 0x83, 0x82, 0xD2, 
   0xB3, 0xB3, 0xC8, 0xA8, 0xA7, 0xD3, 0xB4, 0xB3, 0xC5, 0xA9, 0xA8, 0x78, 0x68, 0x65, 0x91, 0x86, 
   0x83, 0x97, 0x92, 0x8D, 0x8E, 0x8A, 0x85, 0x82, 0x7C, 0x77, 0x6B, 0x61, 0x5D, 0x6C, 0x5F, 0x5C, 
   0xAD, 0x9A, 0x98, 0xB1, 0x9A, 0x98, 0x92, 0x78, 0x77, 0x9C, 0x7F, 0x7F, 0x62, 0x49, 0x48, 0x88, 
   0x73, 0x71, 0x83, 0x6F, 0x6A, 0x6A, 0x56, 0x51, 0x93, 0x80, 0x7B, 0x97, 0x83, 0x7E, 0x5A, 0x47, 
   0x42, 0x5D, 0x4C, 0x46, 0x74, 0x62, 0x5C, 0x93, 0x7E, 0x78, 0xD3, 0xBC, 0xB7, 0xB6, 0x9F, 0x9A, 
   0x85, 0x6C, 0x67, 0xA8, 0x8D, 0x89, 0xD8, 0xBD, 0xB9, 0x85, 0x6E, 0x69, 0x6B, 0x53, 0x4D, 0x8C, 
   0x72, 0x6C, 0xBD, 0x9E, 0x99, 0xDE, 0xBD, 0xB8, 0xAB, 0x86, 0x82, 0x83, 0x60, 0x5B, 0x83, 0x66, 
   0x5F, 0x6F, 0x58, 0x50, 0x83, 0x74, 0x6B, 0x79, 0x6C, 0x63, 0x78, 0x6A, 0x61, 0xB2, 0xA3, 0x9A, 
   0xC0, 0xA8, 0xA6, 0xC3, 0xA5, 0xA4, 0xCB, 0xA9, 0xA5, 0xDF, 0xB6, 0xB2, 0xE9, 0xC0, 0xB9, 0xD7, 
   0xB0, 0xA5, 0xD3, 0xAC, 0xA0, 0xDB, 0xB1, 0xA7, 0xC6, 0x9A, 0x92, 0xC8, 0x9D, 0x97, 0xC4, 0x9E, 
   0x9B, 0xA8, 0x88, 0x86, 0xB7, 0x9D, 0x9C, 0x61, 0x52, 0x50, 0x3C, 0x2F, 0x2D, 0x4F, 0x43, 0x3F, 
   0x51, 0x48, 0x42, 0x65, 0x5E, 0x55, 0x67, 0x61, 0x58, 0x83, 0x77, 0x6C, 0xAF, 0x9C, 0x8F, 0xA4, 
   0x91, 0x86, 0x7C, 0x67, 0x5C, 0x5D, 0x44, 0x3D, 0x62, 0x48, 0x43, 0x85, 0x69, 0x65, 0x83, 0x68, 
   0x62, 0x7D, 0x60, 0x5B, 0x79, 0x5B, 0x55, 0x6E, 0x51, 0x48, 0x6D, 0x4F, 0x44, 0x70, 0x4F, 0x45, 
   0x6A, 0x4C, 0x3C, 0x63, 0x49, 0x34, 0x3E, 0x47, 0x49, 0x36, 0x42, 0x43, 0x3D, 0x4A, 0x4B, 0x35, 
   0x41, 0x42, 0x42, 0x49, 0x4B, 0x47, 0x48, 0x4B, 0x5B, 0x53, 0x56, 0xAA, 0x98, 0x95, 0x8F, 0x82, 
   0x7F, 0x5F, 0x58, 0x54, 0x54, 0x4F, 0x4B, 0x4D, 0x47, 0x43, 0x97, 0x90, 0x8D, 0xD3, 0xC0, 0xC0, 
   0xD4, 0xB9, 0xB9, 0xE2, 0xCC, 0xC8, 0x9E, 0x8D, 0x88, 0x4C, 0x46, 0x42, 0x2D, 0x32, 0x31, 0x2B, 
   0x33, 0x37, 0x42, 0x4B, 0x51, 0x45, 0x4F, 0x52, 0x4E, 0x55, 0x57, 0x4A, 0x4C, 0x4C, 0x75, 0x6D, 
   0x6D, 0xEA, 0xDD, 0xDC, 0xF9, 0xDE, 0xDC, 0xF9, 0xDB, 0xD5, 0xF6, 0xD8, 0xD3, 0xF3, 0xD7, 0xD0, 
   0xF3, 0xD8, 0xD0, 0xEE, 0xD5, 0xCB, 0xF0, 0xD8, 0xCE, 0xF3, 0xDC, 0xD7, 0xF1, 0xDA, 0xD5, 0xED, 
   0xD6, 0xD2, 0xE9, 0xD2, 0xCD, 0xE8, 0xD1, 0xCC, 0xEE, 0xD7, 0xD2, 0xE9, 0xD0, 0xCD, 0xE6, 0xCF, 
   0xCD, 0xE0, 0xCC, 0xCB, 0xAE, 0xA0, 0x9F, 0x75, 0x6C, 0x6C, 0xC1, 0xBC, 0xBC, 0x77, 0x73, 0x74, 
   0xCF, 0xCA, 0xCA, 0xEA, 0xE3, 0xE4, 0xDD, 0xD5, 0xD6, 0xDE, 0xD5, 0xD6, 0xC4, 0xB8, 0xBA, 0x97, 
   0x89, 0x8B, 0xBD, 0xB1, 0xB2, 0xFA, 0xF1, 0xF1, 0xFA, 0xED, 0xEE, 0xF4, 0xE4, 0xE2, 0xF8, 0xE6, 
   0xE3, 0xF8, 0xE2, 0xDF, 0xFB, 0xE6, 0xE1, 0xF3, 0xE4, 0xE1, 0xF9, 0xE8, 0xE5, 0xF9, 0xE9, 0xE6, 
   0xDB, 0xCC, 0xC9, 0xBF, 0xB0, 0xAD, 0xEB, 0xDA, 0xD7, 0xEF, 0xDF, 0xDF, 0xE8, 0xDE, 0xDF, 0xEF, 
   0xEC, 0xEB, 0xCF, 0xD1, 0xD1, 0x5C, 0x60, 0x5F, 0x3D, 0x3F, 0x3F, 0x55, 0x57, 0x56, 0x47, 0x4A, 
   0x48, 0x43, 0x47, 0x46, 0x52, 0x56, 0x56, 0x54, 0x59, 0x5A, 0x59, 0x60, 0x61, 0x52, 0x58, 0x5B, 
   0x50, 0x58, 0x5D, 0x5C, 0x63, 0x68, 0x6F, 0x73, 0x77, 0x6E, 0x71, 0x74, 0x62, 0x65, 0x68, 0x58, 
   0x5F, 0x5F, 0x53, 0x5D, 0x5C, 0x53, 0x58, 0x5A, 0x56, 0x59, 0x5A, 0x76, 0x73, 0x74, 0x90, 0x89, 
   0x86, 0xE1, 0xD7, 0xD4, 0xF2, 0xE3, 0xDE, 0xF9, 0xEB, 0xE8, 0xE8, 0xD8, 0xD7, 0xFE, 0xF3, 0xF1, 
   0xBE, 0xB2, 0xB0, 0x69, 0x5D, 0x5B, 0x7C, 0x70, 0x6E, 0x73, 0x68, 0x66, 0x82, 0x79, 0x79, 0x94, 
   0x8C, 0x8C, 0x9A, 0x93, 0x93, 0x7F, 0x79, 0x79, 0x9F, 0x9B, 0x9A, 0x66, 0x63, 0x62, 0xC0, 0xBD, 
   0xBD, 0xE3, 0xDD, 0xDE, 0x96, 0x8C, 0x8E, 0x86, 0x7A, 0x7A, 0x7B, 0x6A, 0x6A, 0xBF, 0xAD, 0xAC, 
   0xD2, 0xBE, 0xBB, 0xD6, 0xB9, 0xB8, 0xF3, 0xDA, 0xD8, 0xF5, 0xDF, 0xDD, 0xEE, 0xDD, 0xDB, 0xFE, 
   0xEA, 0xE8, 0xFA, 0xE4, 0xE2, 0xFC, 0xE9, 0xE8, 0xFD, 0xE8, 0xE8, 0xF7, 0xE5, 0xE4, 0xF7, 0xEA, 
   0xE8, 0xF6, 0xE9, 0xE7, 0xF5, 0xE6, 0xE4, 0xFB, 0xE9, 0xE8, 0xF4, 0xE2, 0xDF, 0xCD, 0xBA, 0xB7, 
   0xBF, 0xAC, 0xA9, 0xB1, 0x9E, 0x9B, 0xFB, 0xEA, 0xE7, 0xE5, 0xD5, 0xD2, 0x90, 0x7D, 0x79, 0xDC, 
   0xCE, 0xC9, 0xE0, 0xCE, 0xC9, 0xC6, 0xB4, 0xAF, 0xCF, 0xBF, 0xB9, 0x8A, 0x7B, 0x75, 0x6B, 0x5D, 
   0x57, 0x52, 0x48, 0x42, 0x55, 0x4C, 0x46, 0x5C, 0x52, 0x4C, 0x5B, 0x51, 0x4C, 0x62, 0x57, 0x52, 
   0x67, 0x5B, 0x57, 0x8B, 0x7D, 0x77, 0x7C, 0x6A, 0x64, 0x6A, 0x57, 0x52, 0x69, 0x55, 0x4F, 0x6D, 
   0x5B, 0x55, 0x66, 0x5C, 0x54, 0x47, 0x41, 0x39, 0x60, 0x4D, 0x49, 0x85, 0x70, 0x6C, 0x62, 0x56, 
   0x51, 0x67, 0x60, 0x5A, 0x62, 0x5D, 0x57, 0x44, 0x3E, 0x39, 0x60, 0x54, 0x4E, 0xC7, 0xB2, 0xAD, 
   0xF8, 0xE4, 0xDF, 0xB4, 0xA3, 0x9C, 0x53, 0x42, 0x3B, 0x56, 0x47, 0x40, 0x61, 0x53, 0x4C, 0x77, 
   0x66, 0x5F, 0x5B, 0x4C, 0x43, 0x6E, 0x62, 0x5A, 0x72, 0x67, 0x61, 0x64, 0x58, 0x54, 0x59, 0x4A, 
   0x48, 0x78, 0x64, 0x62, 0x65, 0x4E, 0x4D, 0x70, 0x5C, 0x5A, 0x6E, 0x60, 0x5C, 0x61, 0x55, 0x50, 
   0x62, 0x55, 0x4E, 0x99, 0x88, 0x81, 0x64, 0x58, 0x52, 0x61, 0x55, 0x51, 0x73, 0x60, 0x5D, 0xC6, 
   0xAC, 0xAA, 0xE9, 0xCD, 0xCC, 0xC9, 0xAD, 0xAC, 0x97, 0x7E, 0x7C, 0x94, 0x7F, 0x7C, 0x9A, 0x8A, 
   0x86, 0x70, 0x65, 0x61, 0x9E, 0x93, 0x8F, 0xC8, 0xBB, 0xB8, 0xCD, 0xBE, 0xBB, 0xD4, 0xC4, 0xC0, 
   0xEB, 0xD7, 0xD3, 0xD7, 0xBD, 0xBA, 0xA9, 0x8C, 0x89, 0xAD, 0x8F, 0x8D, 0x8D, 0x71, 0x6E, 0xBA, 
   0xA1, 0x9E, 0xB9, 0xA3, 0x9F, 0xCC, 0xB5, 0xB0, 0xD9, 0xC1, 0xBD, 0xE4, 0xCD, 0xC8, 0xB5, 0xA2, 
   0x9D, 0x6A, 0x5C, 0x55, 0x6B, 0x5F, 0x59, 0x79, 0x6D, 0x67, 0x9A, 0x8E, 0x87, 0xB0, 0xA3, 0x9D, 
   0x8F, 0x80, 0x7A, 0xAC, 0x9C, 0x96, 0xB9, 0xA7, 0xA1, 0x87, 0x72, 0x6C, 0x95, 0x7F, 0x79, 0x80, 
   0x68, 0x62, 0xB9, 0x9B, 0x96, 0xA4, 0x85, 0x80, 0x71, 0x4F, 0x4B, 0x77, 0x58, 0x52, 0x77, 0x5E, 
   0x56, 0x70, 0x5E, 0x56, 0x86, 0x7B, 0x71, 0xA8, 0x9B, 0x92, 0x8F, 0x7F, 0x76, 0xB8, 0xA1, 0x9A, 
   0xBE, 0x9F, 0x9D, 0xCD, 0xAB, 0xA8, 0xC9, 0xA2, 0x9E, 0xD8, 0xAD, 0xA9, 0xE7, 0xBD, 0xB6, 0xD6, 
   0xB0, 0xA7, 0xD9, 0xB1, 0xA7, 0xE1, 0xB5, 0xAC, 0xDB, 0xAC, 0xA4, 0xCA, 0x9A, 0x94, 0xB7, 0x89, 
   0x87, 0xC3, 0x99, 0x98, 0xB6, 0x94, 0x92, 0x6D, 0x5C, 0x59, 0x4E, 0x41, 0x3C, 0x4D, 0x43, 0x3D, 
   0x58, 0x4F, 0x47, 0x4D, 0x43, 0x3A, 0x76, 0x6A, 0x62, 0x7E, 0x70, 0x65, 0x91, 0x81, 0x73, 0x7D, 
   0x6B, 0x60, 0x53, 0x41, 0x38, 0x5B, 0x46, 0x41, 0x75, 0x5E, 0x5C, 0xAD, 0x95, 0x93, 0xA7, 0x8F, 
   0x8D, 0x9A, 0x83, 0x7E, 0x79, 0x5F, 0x59, 0x5D, 0x42, 0x3B, 0x63, 0x46, 0x3B, 0x60, 0x42, 0x37, 
   0x66, 0x48, 0x38, 0x66, 0x49, 0x35, 0x39, 0x44, 0x46, 0x51, 0x5E, 0x60, 0x4C, 0x59, 0x5B, 0x51, 
   0x5E, 0x60, 0x48, 0x50, 0x53, 0x3B, 0x3D, 0x41, 0x6C, 0x64, 0x68, 0xCD, 0xBA, 0xBA, 0x97, 0x8A, 
   0x89, 0x49, 0x43, 0x41, 0x60, 0x5C, 0x5A, 0x4B, 0x47, 0x46, 0x47, 0x41, 0x40, 0xAB, 0x9D, 0x9C, 
   0xEB, 0xDC, 0xD9, 0xC9, 0xBA, 0xB4, 0x45, 0x36, 0x30, 0x45, 0x3C, 0x38, 0x39, 0x37, 0x38, 0x30, 
   0x32, 0x36, 0x46, 0x4A, 0x50, 0x4D, 0x52, 0x56, 0x45, 0x46, 0x47, 0x4B, 0x46, 0x46, 0xDB, 0xCB, 
   0xC9, 0xFD, 0xE5, 0xE2, 0xF4, 0xD8, 0xD5, 0xF0, 0xD4, 0xD0, 0xF3, 0xD9, 0xD3, 0xF0, 0xD7, 0xD0, 
   0xEE, 0xD6, 0xCE, 0xEE, 0xD7, 0xCD, 0xEF, 0xDA, 0xD0, 0xE8, 0xD3, 0xCF, 0xE9, 0xD3, 0xCF, 0xEC, 
   0xD6, 0xD2, 0xED, 0xD8, 0xD4, 0xED, 0xD8, 0xD5, 0xC4, 0xAF, 0xAB, 0xD9, 0xC2, 0xC0, 0xEC, 0xD6, 
   0xD5, 0xC9, 0xB4, 0xB4, 0x7D, 0x6D, 0x6D, 0xA9, 0x9E, 0x9F, 0xD1, 0xC8, 0xCA, 0xB1, 0xAB, 0xAC, 
   0xEA, 0xE2, 0xE4, 0x7D, 0x74, 0x75, 0xC3, 0xBB, 0xBD, 0x8B, 0x81, 0x83, 0xB3, 0xA8, 0xAA, 0x9A, 
   0x90, 0x92, 0xF6, 0xED, 0xEE, 0xEE, 0xEA, 0xEA, 0xE8, 0xDE, 0xDF, 0xF3, 0xE6, 0xE4, 0xF5, 0xE3, 
   0xE0, 0xF4, 0xE1, 0xDD, 0xF4, 0xE0, 0xDB, 0xF5, 0xE6, 0xE3, 0xFF, 0xF2, 0xF0, 0xE7, 0xD9, 0xD6, 
   0xB5, 0xA6, 0xA4, 0xC0, 0xB1, 0xAF, 0xD9, 0xCD, 0xCA, 0xF4, 0xE8, 0xE7, 0xF4, 0xEC, 0xEE, 0xF9, 
   0xF7, 0xF7, 0x71, 0x75, 0x75, 0x43, 0x49, 0x48, 0x4C, 0x50, 0x50, 0x53, 0x56, 0x56, 0x43, 0x47, 
   0x46, 0x5F, 0x65, 0x63, 0x56, 0x5B, 0x5B, 0x54, 0x59, 0x5B, 0x56, 0x5E, 0x61, 0x57, 0x5F, 0x62, 
   0x55, 0x5D, 0x62, 0x51, 0x57, 0x5E, 0x5E, 0x61, 0x66, 0x63, 0x65, 0x69, 0x5A, 0x5D, 0x61, 0x53, 
   0x59, 0x5A, 0x4D, 0x56, 0x56, 0x56, 0x59, 0x5E, 0x4E, 0x4E, 0x51, 0xB5, 0xB1, 0xB3, 0xEC, 0xE3, 
   0xE1, 0xF1, 0xE6, 0xE2, 0xEE, 0xDB, 0xD6, 0xEE, 0xDE, 0xDB, 0xE9, 0xDC, 0xDB, 0xDB, 0xCF, 0xCD, 
   0x83, 0x76, 0x74, 0x96, 0x8A, 0x88, 0xC9, 0xBE, 0xBC, 0x8A, 0x80, 0x7E, 0x86, 0x7A, 0x7B, 0x87, 
   0x7B, 0x7B, 0x90, 0x86, 0x86, 0x72, 0x6A, 0x6A, 0x8D, 0x87, 0x86, 0x87, 0x81, 0x81, 0xB0, 0xAB, 
   0xAB, 0x81, 0x7C, 0x7D, 0x7D, 0x74, 0x75, 0x6E, 0x62, 0x62, 0xD1, 0xC2, 0xC2, 0xE5, 0xD4, 0xD3, 
   0xE4, 0xCE, 0xCC, 0xFA, 0xE0, 0xDF, 0xFF, 0xE7, 0xE5, 0xFA, 0xE4, 0xE2, 0xF0, 0xDD, 0xDB, 0xEF, 
   0xDD, 0xDA, 0xFB, 0xEA, 0xE7, 0xFD, 0xEA, 0xE8, 0xFE, 0xE8, 0xE8, 0xFD, 0xEA, 0xE9, 0xF6, 0xE9, 
   0xE7, 0xF6, 0xEA, 0xE7, 0xF4, 0xE6, 0xE3, 0xF4, 0xE1, 0xE0, 0xE8, 0xD8, 0xD5, 0xE6, 0xD4, 0xD1, 
   0xDE, 0xCE, 0xCB, 0xE8, 0xD7, 0xD4, 0xE6, 0xD3, 0xD0, 0xC6, 0xB2, 0xAF, 0xEC, 0xDC, 0xD8, 0xA4, 
   0x8F, 0x8A, 0xA7, 0x90, 0x8B, 0xCB, 0xB6, 0xB0, 0x8F, 0x7C, 0x76, 0x9B, 0x8A, 0x83, 0x88, 0x77, 
   0x71, 0x57, 0x48, 0x42, 0x6C, 0x5D, 0x57, 0x80, 0x71, 0x6A, 0x74, 0x65, 0x5E, 0x89, 0x7B, 0x74, 
   0x75, 0x67, 0x61, 0x96, 0x84, 0x7F, 0xB8, 0xA4, 0xA0, 0x9C, 0x87, 0x83, 0x80, 0x6A, 0x66, 0x5F, 
   0x4C, 0x48, 0x64, 0x59, 0x53, 0x60, 0x59, 0x53, 0x64, 0x54, 0x51, 0x67, 0x55, 0x53, 0x75, 0x69, 
   0x67, 0x77, 0x70, 0x6B, 0x61, 0x59, 0x55, 0x51, 0x46, 0x42, 0x58, 0x48, 0x45, 0xCA, 0xB8, 0xB4, 
   0xD1, 0xBF, 0xBB, 0xB3, 0xA5, 0xA0, 0x97, 0x89, 0x84, 0x4F, 0x42, 0x3C, 0x59, 0x4D, 0x48, 0x68, 
   0x5C, 0x55, 0x81, 0x76, 0x6E, 0x79, 0x70, 0x68, 0x66, 0x5E, 0x59, 0x7F, 0x75, 0x71, 0xAB, 0x9C, 
   0x9A, 0xA2, 0x8E, 0x8D, 0x78, 0x62, 0x62, 0x63, 0x52, 0x50, 0x70, 0x65, 0x61, 0x73, 0x6B, 0x63, 
   0x89, 0x7F, 0x77, 0x7C, 0x6E, 0x66, 0x72, 0x68, 0x61, 0x58, 0x4D, 0x49, 0x86, 0x73, 0x71, 0xBC, 
   0xA1, 0xA0, 0xDB, 0xBE, 0xBD, 0xD7, 0xB9, 0xB8, 0xE9, 0xCE, 0xCD, 0xDF, 0xC2, 0xC0, 0xCF, 0xB5, 
   0xB3, 0xA8, 0x93, 0x90, 0x82, 0x6F, 0x6C, 0xA7, 0x92, 0x8F, 0xD3, 0xBC, 0xB9, 0xE0, 0xC9, 0xC4, 
   0xE5, 0xCD, 0xC8, 0xD6, 0xB8, 0xB4, 0xB4, 0x93, 0x8F, 0xBB, 0x99, 0x95, 0xD4, 0xB4, 0xB0, 0xD2, 
   0xB5, 0xB0, 0xDC, 0xC1, 0xBD, 0xDA, 0xBE, 0xBA, 0xC3, 0xA5, 0xA2, 0xD9, 0xBD, 0xB9, 0xC7, 0xB4, 
   0xAE, 0xAC, 0x9F, 0x99, 0x8B, 0x81, 0x7C, 0x8D, 0x84, 0x7E, 0x89, 0x7E, 0x79, 0x55, 0x48, 0x43, 
   0x6A, 0x5C, 0x57, 0xB9, 0xAB, 0xA6, 0x91, 0x81, 0x7C, 0xAF, 0x9B, 0x95, 0xA8, 0x92, 0x8C, 0x83, 
   0x6B, 0x66, 0xA5, 0x89, 0x85, 0x96, 0x79, 0x74, 0x73, 0x55, 0x51, 0x65, 0x4B, 0x45, 0x55, 0x42, 
   0x3A, 0x7B, 0x6F, 0x66, 0x96, 0x8D, 0x83, 0x9E, 0x92, 0x88, 0x97, 0x82, 0x7A, 0xA5, 0x86, 0x7F, 
   0xCD, 0xAA, 0xA5, 0xD2, 0xAC, 0xA7, 0xC7, 0x9D, 0x99, 0xD8, 0xAD, 0xA9, 0xE1, 0xB8, 0xB4, 0xDA, 
   0xB7, 0xB1, 0xDB, 0xB9, 0xB2, 0xE1, 0xBC, 0xB4, 0xE0, 0xB6, 0xAF, 0xCC, 0x9F, 0x99, 0xC3, 0x98, 
   0x92, 0xAA, 0x81, 0x7B, 0x81, 0x5E, 0x58, 0x80, 0x6C, 0x67, 0x83, 0x73, 0x6C, 0x76, 0x69, 0x61, 
   0x79, 0x6C, 0x62, 0x8D, 0x7C, 0x72, 0x89, 0x73, 0x69, 0x9E, 0x8A, 0x7F, 0xA2, 0x92, 0x86, 0x69, 
   0x58, 0x4D, 0x59, 0x49, 0x42, 0x75, 0x64, 0x61, 0x9E, 0x8E, 0x8C, 0xA6, 0x96, 0x96, 0xA4, 0x93, 
   0x91, 0x9E, 0x8C, 0x89, 0x62, 0x4E, 0x49, 0x50, 0x38, 0x31, 0x45, 0x2C, 0x21, 0x54, 0x3A, 0x2E, 
   0x63, 0x45, 0x35, 0x66, 0x48, 0x36, 0x4D, 0x58, 0x5B, 0x68, 0x75, 0x77, 0x56, 0x64, 0x66, 0x65, 
   0x72, 0x74, 0x40, 0x48, 0x4B, 0x5B, 0x5C, 0x61, 0x65, 0x5F, 0x63, 0xB1, 0x9E, 0xA1, 0xA5, 0x98, 
   0x9B, 0x89, 0x84, 0x85, 0x47, 0x45, 0x46, 0x43, 0x40, 0x42, 0x49, 0x44, 0x46, 0xC0, 0xBB, 0xB9, 
   0xE4, 0xDD, 0xD9, 0xC5, 0xBB, 0xB3, 0x86, 0x7B, 0x74, 0x99, 0x8E, 0x8A, 0xB0, 0xA9, 0xAA, 0x5C, 
   0x5A, 0x5D, 0x47, 0x49, 0x4F, 0x46, 0x47, 0x4C, 0x86, 0x82, 0x83, 0xDC, 0xD1, 0xD0, 0xFF, 0xE8, 
   0xE4, 0xF8, 0xDA, 0xD7, 0xF1, 0xD7, 0xD4, 0xEB, 0xD4, 0xD0, 0xED, 0xD8, 0xD3, 0xEB, 0xD6, 0xCF, 
   0xEC, 0xD8, 0xD0, 0xED, 0xDA, 0xCF, 0xF1, 0xDD, 0xD3, 0xF2, 0xDE, 0xDB, 0xEC, 0xD7, 0xD5, 0xF9, 
   0xE5, 0xE3, 0xF1, 0xDC, 0xDA, 0xB6, 0xA1, 0x9F, 0x95, 0x80, 0x7E, 0xD7, 0xC1, 0xBF, 0xC6, 0xAF, 
   0xAF, 0xC3, 0xAF, 0xAF, 0xAD, 0x9C, 0x9E, 0xDF, 0xD1, 0xD3, 0xCA, 0xBF, 0xC2, 0xF7, 0xF0, 0xF3, 
   0xBD, 0xB3, 0xB5, 0xAC, 0x9F, 0xA1, 0xB2, 0xA7, 0xA9, 0x79, 0x72, 0x73, 0x80, 0x79, 0x7A, 0xEE, 
   0xEB, 0xEC, 0xF7, 0xF3, 0xF4, 0xA0, 0x99, 0x98, 0x92, 0x89, 0x89, 0xF4, 0xEA, 0xE6, 0xFF, 0xF0, 
   0xEC, 0xF7, 0xE5, 0xE1, 0xF6, 0xE4, 0xDF, 0xF7, 0xE9, 0xE7, 0xD6, 0xCA, 0xC9, 0x68, 0x5A, 0x58, 
   0xA8, 0x99, 0x97, 0xE4, 0xD6, 0xD4, 0xDD, 0xD0, 0xCE, 0xCD, 0xC1, 0xC1, 0xD9, 0xD3, 0xD5, 0x9F, 
   0x9D, 0x9D, 0x49, 0x4E, 0x4D, 0x36, 0x3C, 0x3B, 0x47, 0x4C, 0x4B, 0x46, 0x4B, 0x4A, 0x4F, 0x54, 
   0x54, 0x60, 0x66, 0x65, 0x53, 0x5A, 0x5A, 0x5C, 0x64, 0x66, 0x5A, 0x64, 0x67, 0x51, 0x5B, 0x5F, 
   0x60, 0x69, 0x6F, 0x59, 0x5F, 0x66, 0x55, 0x57, 0x5D, 0x65, 0x65, 0x6B, 0x51, 0x53, 0x57, 0x5E, 
   0x64, 0x66, 0x50, 0x5A, 0x5A, 0x5D, 0x5F, 0x65, 0x62, 0x60, 0x63, 0xE2, 0xDC, 0xDE, 0xFF, 0xF4, 
   0xF2, 0xF8, 0xE7, 0xE4, 0xF2, 0xDC, 0xD5, 0xF3, 0xE1, 0xDD, 0xED, 0xE2, 0xE0, 0xA5, 0x98, 0x96, 
   0x95, 0x89, 0x87, 0x81, 0x75, 0x73, 0xAF, 0xA5, 0xA2, 0x94, 0x8B, 0x88, 0x76, 0x68, 0x68, 0x81, 
   0x74, 0x74, 0x95, 0x89, 0x89, 0x9E, 0x93, 0x93, 0x9D, 0x94, 0x95, 0x88, 0x7E, 0x7F, 0x6A, 0x65, 
   0x65, 0x76, 0x73, 0x74, 0x9A, 0x92, 0x93, 0x91, 0x86, 0x86, 0xB9, 0xA9, 0xA8, 0xD7, 0xC0, 0xBF, 
   0xFA, 0xE3, 0xE2, 0xF4, 0xDC, 0xDA, 0xF3, 0xDD, 0xDB, 0xF1, 0xDC, 0xD9, 0xF1, 0xDD, 0xDA, 0xF1, 
   0xE1, 0xDE, 0xF7, 0xEA, 0xE6, 0xFC, 0xE9, 0xE7, 0xFD, 0xE6, 0xE6, 0xDD, 0xCA, 0xC9, 0xCE, 0xC1, 
   0xBF, 0xFB, 0xEF, 0xED, 0xF7, 0xE8, 0xE6, 0xF2, 0xE0, 0xDF, 0xE8, 0xD7, 0xD4, 0xC8, 0xB5, 0xB2, 
   0xD8, 0xC6, 0xC3, 0xC5, 0xB3, 0xB0, 0x6C, 0x59, 0x56, 0xB5, 0xA3, 0xA0, 0xD3, 0xBC, 0xB7, 0x96, 
   0x7A, 0x74, 0xBC, 0xA3, 0x9D, 0xB9, 0xA0, 0x9A, 0x6E, 0x58, 0x52, 0x77, 0x63, 0x5D, 0x85, 0x72, 
   0x6B, 0x9C, 0x87, 0x80, 0x8D, 0x78, 0x71, 0x75, 0x61, 0x5A, 0x6C, 0x58, 0x51, 0x68, 0x55, 0x4E, 
   0x93, 0x80, 0x78, 0x86, 0x72, 0x6D, 0x66, 0x51, 0x4F, 0xB9, 0xA2, 0xA0, 0xC3, 0xAB, 0xAA, 0x60, 
   0x4C, 0x4A, 0x56, 0x49, 0x46, 0xB4, 0xAB, 0xA8, 0x93, 0x85, 0x83, 0x5E, 0x4F, 0x4F, 0x66, 0x5C, 
   0x5A, 0x6C, 0x63, 0x61, 0x8D, 0x82, 0x80, 0x8E, 0x7D, 0x7D, 0x6A, 0x57, 0x56, 0x9B, 0x8B, 0x89, 
   0x7B, 0x6D, 0x6A, 0x73, 0x68, 0x64, 0x6F, 0x64, 0x61, 0x6B, 0x61, 0x5D, 0x88, 0x7E, 0x7B, 0x5A, 
   0x51, 0x4A, 0x62, 0x59, 0x51, 0x8F, 0x89, 0x82, 0x8E, 0x88, 0x83, 0x5B, 0x53, 0x4F, 0xF6, 0xE7, 
   0xE5, 0xBF, 0xAC, 0xAD, 0xAC, 0x98, 0x99, 0xB3, 0xA4, 0xA2, 0x9D, 0x94, 0x90, 0x86, 0x80, 0x78, 
   0x71, 0x69, 0x60, 0x60, 0x56, 0x4D, 0x97, 0x8C, 0x85, 0xC2, 0xB2, 0xB0, 0xEF, 0xD6, 0xD5, 0xE9, 
   0xC9, 0xC9, 0xEB, 0xC8, 0xC8, 0xDB, 0xB7, 0xB7, 0xDB, 0xB7, 0xB7, 0xC9, 0xA5, 0xA3, 0xDC, 0xBB, 
   0xB8, 0xDB, 0xC0, 0xBC, 0xAF, 0x97, 0x92, 0xB1, 0x96, 0x92, 0xC4, 0xA6, 0xA2, 0xF0, 0xD3, 0xCE, 
   0xD6, 0xB8, 0xB3, 0xCC, 0xAA, 0xA4, 0xD2, 0xAB, 0xA7, 0xD4, 0xAD, 0xA9, 0xD4, 0xB0, 0xAC, 0xC7, 
   0xA6, 0xA1, 0xCE, 0xAF, 0xAC, 0xD3, 0xB1, 0xAE, 0xC2, 0xA0, 0x9D, 0xA8, 0x8A, 0x87, 0x81, 0x6C, 
   0x67, 0x5A, 0x4E, 0x47, 0xA8, 0x9D, 0x98, 0xB4, 0xA6, 0xA3, 0x8D, 0x7D, 0x7A, 0x51, 0x40, 0x3D, 
   0x54, 0x42, 0x3F, 0x8C, 0x78, 0x75, 0xA4, 0x8E, 0x8C, 0xCE, 0xB8, 0xB3, 0xD5, 0xBD, 0xB9, 0xCE, 
   0xB5, 0xB1, 0xBD, 0xA5, 0xA1, 0x91, 0x78, 0x74, 0x68, 0x4D, 0x4A, 0x82, 0x6E, 0x67, 0x77, 0x6B, 
   0x62, 0x89, 0x82, 0x78, 0x68, 0x61, 0x57, 0x5C, 0x50, 0x46, 0x9D, 0x86, 0x7E, 0xCB, 0xA5, 0x9F, 
   0xD0, 0xAA, 0xA1, 0xD3, 0xAA, 0xA3, 0xC9, 0x9D, 0x98, 0xDE, 0xB2, 0xAF, 0xDE, 0xB8, 0xB5, 0xDB, 
   0xBB, 0xB8, 0xCE, 0xB4, 0xAF, 0xDB, 0xC3, 0xBC, 0xBB, 0x9D, 0x96, 0xAE, 0x8B, 0x82, 0xB3, 0x90, 
   0x86, 0xB0, 0x8F, 0x83, 0x99, 0x7A, 0x6E, 0x5A, 0x43, 0x3C, 0x5F, 0x4B, 0x43, 0x62, 0x52, 0x47, 
   0x68, 0x56, 0x4B, 0x8C, 0x74, 0x68, 0xB3, 0x93, 0x88, 0xDC, 0xC2, 0xB6, 0x97, 0x87, 0x7A, 0x65, 
   0x54, 0x4B, 0x80, 0x71, 0x6B, 0x64, 0x57, 0x55, 0x62, 0x57, 0x57, 0x6A, 0x60, 0x62, 0x56, 0x4B, 
   0x4A, 0x5A, 0x4B, 0x49, 0x44, 0x34, 0x2F, 0x4C, 0x39, 0x31, 0x70, 0x5B, 0x4F, 0x69, 0x52, 0x44, 
   0x62, 0x46, 0x37, 0x61, 0x43, 0x32, 0x50, 0x5B, 0x5F, 0x64, 0x6F, 0x73, 0x48, 0x56, 0x59, 0x46, 
   0x53, 0x57, 0x50, 0x57, 0x5C, 0x6D, 0x6E, 0x74, 0x56, 0x4E, 0x54, 0x83, 0x71, 0x76, 0xA4, 0x99, 
   0x9C, 0xB7, 0xB2, 0xB4, 0x6C, 0x6B, 0x6C, 0x3C, 0x3B, 0x3D, 0x89, 0x89, 0x8B, 0xEA, 0xEA, 0xE9, 
   0xF0, 0xF0, 0xEC, 0xED, 0xE5, 0xDE, 0xC4, 0xB9, 0xB2, 0xAB, 0x9F, 0x9A, 0xCD, 0xC1, 0xC1, 0x9F, 
   0x97, 0x9B, 0x65, 0x62, 0x67, 0x96, 0x94, 0x97, 0xE7, 0xDF, 0xDF, 0xF3, 0xE3, 0xE0, 0xF2, 0xD6, 
   0xD3, 0xF8, 0xD5, 0xD2, 0xEF, 0xD7, 0xD3, 0xEE, 0xDC, 0xD9, 0xEF, 0xDC, 0xD7, 0xED, 0xDA, 0xD4, 
   0xF0, 0xDC, 0xD5, 0xF1, 0xDC, 0xD4, 0xF6, 0xE1, 0xDA, 0xEF, 0xDC, 0xD9, 0xF5, 0xE3, 0xE0, 0xB9, 
   0xA7, 0xA4, 0x95, 0x82, 0x7F, 0x8D, 0x7C, 0x79, 0xE4, 0xD4, 0xD2, 0xA4, 0x90, 0x8E, 0xAB, 0x97, 
   0x96, 0xE5, 0xD0, 0xD0, 0xFF, 0xF5, 0xF7, 0xF1, 0xE7, 0xE9, 0xF4, 0xE9, 0xEC, 0xF6, 0xE9, 0xED, 
   0xC2, 0xB4, 0xB6, 0x87, 0x79, 0x7B, 0x94, 0x89, 0x8B, 0x9F, 0x9A, 0x9B, 0xBC, 0xB7, 0xB8, 0xCE, 
   0xCA, 0xCB, 0xA5, 0xA2, 0xA2, 0x86, 0x80, 0x7F, 0xD9, 0xD3, 0xD4, 0xE6, 0xDE, 0xDA, 0xA5, 0x98, 
   0x94, 0xE3, 0xD3, 0xCF, 0xF6, 0xE6, 0xE0, 0xF5, 0xE8, 0xE6, 0xC0, 0xB2, 0xB1, 0xBA, 0xAE, 0xAC, 
   0xF6, 0xED, 0xEB, 0xCD, 0xC0, 0xBE, 0xD1, 0xC4, 0xC2, 0xC8, 0xBE, 0xBD, 0xA8, 0xA4, 0xA5, 0x3A, 
   0x3A, 0x3A, 0x57, 0x5C, 0x5B, 0x5D, 0x63, 0x62, 0x46, 0x4B, 0x4B, 0x4C, 0x51, 0x50, 0x4A, 0x50, 
   0x4F, 0x53, 0x59, 0x5A, 0x52, 0x58, 0x59, 0x65, 0x6E, 0x70, 0x73, 0x7D, 0x7F, 0x50, 0x5B, 0x5E, 
   0x5D, 0x66, 0x6B, 0x5A, 0x60, 0x68, 0x60, 0x63, 0x6A, 0x5A, 0x5B, 0x61, 0x53, 0x56, 0x5A, 0x55, 
   0x5B, 0x5D, 0x4D, 0x56, 0x56, 0x52, 0x53, 0x59, 0x65, 0x62, 0x66, 0xCF, 0xC8, 0xCA, 0xFA, 0xEC, 
   0xEB, 0xEA, 0xD6, 0xD4, 0xE1, 0xCB, 0xC5, 0xFB, 0xED, 0xE8, 0xED, 0xE1, 0xDF, 0x9D, 0x90, 0x8E, 
   0xA3, 0x96, 0x94, 0xBE, 0xB2, 0xB0, 0xA5, 0x9C, 0x99, 0x9A, 0x90, 0x8E, 0x9F, 0x8F, 0x90, 0x88, 
   0x79, 0x7A, 0xC0, 0xB1, 0xB2, 0xD8, 0xCB, 0xCB, 0xD9, 0xCD, 0xCD, 0xB3, 0xA8, 0xA8, 0x65, 0x5F, 
   0x5F, 0x81, 0x7E, 0x7F, 0xA2, 0x9A, 0x9B, 0xCE, 0xC3, 0xC3, 0xBC, 0xAA, 0xAA, 0xF7, 0xE4, 0xE3, 
   0xF9, 0xE4, 0xE2, 0xEE, 0xD8, 0xD6, 0xE8, 0xD3, 0xD1, 0xEB, 0xD7, 0xD5, 0xFA, 0xE9, 0xE6, 0xFB, 
   0xEC, 0xE9, 0xF5, 0xE9, 0xE5, 0xFA, 0xE8, 0xE5, 0xFF, 0xEA, 0xEA, 0xB8, 0xA5, 0xA5, 0xC8, 0xBB, 
   0xB9, 0xFF, 0xF3, 0xF1, 0xEF, 0xDF, 0xDE, 0xF8, 0xE5, 0xE5, 0xD1, 0xBD, 0xBB, 0x92, 0x7F, 0x7D, 
   0x85, 0x72, 0x6F, 0x5E, 0x4B, 0x48, 0x75, 0x62, 0x5F, 0xD5, 0xC3, 0xC0, 0x96, 0x7D, 0x78, 0x98, 
   0x79, 0x74, 0xAA, 0x8E, 0x88, 0xA3, 0x88, 0x82, 0x97, 0x7D, 0x76, 0x8F, 0x76, 0x70, 0x8E, 0x76, 
   0x70, 0xA3, 0x88, 0x81, 0xA2, 0x86, 0x7E, 0x72, 0x58, 0x50, 0x72, 0x5A, 0x52, 0x67, 0x52, 0x4A, 
   0x62, 0x4D, 0x44, 0x99, 0x84, 0x80, 0x9B, 0x86, 0x83, 0x88, 0x70, 0x6E, 0x89, 0x71, 0x6E, 0x72, 
   0x5E, 0x5B, 0x85, 0x76, 0x72, 0x8B, 0x7F, 0x7B, 0x56, 0x48, 0x47, 0x4D, 0x3E, 0x3F, 0x80, 0x75, 
   0x75, 0x7A, 0x6F, 0x6F, 0x91, 0x83, 0x83, 0xB6, 0xA4, 0xA5, 0xA0, 0x8C, 0x8D, 0x8C, 0x7E, 0x7A, 
   0xA0, 0x94, 0x8F, 0x63, 0x58, 0x53, 0x4E, 0x43, 0x3E, 0x92, 0x88, 0x83, 0xE9, 0xDF, 0xDA, 0x86, 
   0x7A, 0x73, 0x71, 0x67, 0x60, 0x79, 0x72, 0x6C, 0x6E, 0x69, 0x64, 0x52, 0x4A, 0x46, 0x96, 0x8A, 
   0x88, 0xAA, 0x98, 0x99, 0xBD, 0xAD, 0xAD, 0xAF, 0xA1, 0xA0, 0x95, 0x8E, 0x89, 0x7C, 0x76, 0x6F, 
   0x6B, 0x65, 0x5C, 0x77, 0x6F, 0x65, 0xBD, 0xAF, 0xA9, 0xDD, 0xC6, 0xC5, 0xE1, 0xC1, 0xC0, 0xD8, 
   0xB2, 0xB2, 0xDB, 0xB1, 0xB2, 0xEA, 0xC0, 0xC1, 0xE6, 0xBC, 0xBB, 0xDF, 0xB6, 0xB5, 0xDF, 0xBA, 
   0xB8, 0xBF, 0x9F, 0x9C, 0xA7, 0x89, 0x85, 0xAD, 0x8D, 0x8A, 0xDB, 0xB9, 0xB6, 0xAC, 0x8A, 0x85, 
   0x9B, 0x79, 0x72, 0xDB, 0xB3, 0xAE, 0xED, 0xC4, 0xBF, 0xE7, 0xBD, 0xB8, 0xD7, 0xAF, 0xAB, 0xD8, 
   0xB3, 0xAE, 0xC1, 0x9F, 0x9C, 0xB7, 0x92, 0x8F, 0xB0, 0x8C, 0x89, 0x78, 0x59, 0x56, 0x7A, 0x63, 
   0x5E, 0x78, 0x6C, 0x65, 0x9E, 0x8F, 0x88, 0xAF, 0x98, 0x97, 0x9C, 0x86, 0x84, 0xA7, 0x90, 0x8E, 
   0xA9, 0x90, 0x8E, 0xA0, 0x85, 0x83, 0xA0, 0x86, 0x84, 0xA4, 0x8A, 0x86, 0xA9, 0x90, 0x8B, 0x9E, 
   0x84, 0x80, 0x9A, 0x80, 0x7B, 0xC2, 0xAC, 0xA6, 0xB7, 0xA0, 0x9B, 0x9B, 0x8A, 0x83, 0x8D, 0x84, 
   0x7A, 0x86, 0x82, 0x77, 0xA2, 0x9C, 0x91, 0xC0, 0xB2, 0xA9, 0x93, 0x78, 0x71, 0xC8, 0xA1, 0x9A, 
   0xCF, 0xA6, 0x9C, 0xCC, 0xA1, 0x99, 0xC8, 0x9C, 0x97, 0xD8, 0xAF, 0xAD, 0xE4, 0xBF, 0xBD, 0xB6, 
   0x99, 0x98, 0xA6, 0x94, 0x90, 0x85, 0x79, 0x73, 0x7F, 0x6B, 0x63, 0x97, 0x7E, 0x74, 0xB2, 0x98, 
   0x8B, 0xAC, 0x92, 0x83, 0xB4, 0x9B, 0x8C, 0x9A, 0x81, 0x7A, 0xAF, 0x9A, 0x91, 0xB8, 0xA5, 0x9A, 
   0xB5, 0x9E, 0x93, 0xC1, 0xA4, 0x99, 0xD2, 0xAA, 0xA0, 0xD6, 0xB5, 0xAA, 0x9B, 0x88, 0x7D, 0x88, 
   0x76, 0x6E, 0xA4, 0x96, 0x8F, 0x8E, 0x84, 0x81, 0x99, 0x92, 0x92, 0xBA, 0xB4, 0xB5, 0x66, 0x5D, 
   0x5D, 0x90, 0x86, 0x83, 0xA7, 0x9A, 0x95, 0xB0, 0x9E, 0x96, 0xAB, 0x97, 0x8B, 0x98, 0x82, 0x73, 
   0x86, 0x6A, 0x5B, 0x7B, 0x5B, 0x4D, 0x4A, 0x56, 0x58, 0x4A, 0x50, 0x53, 0x4A, 0x4E, 0x51, 0x47, 
   0x54, 0x56, 0x49, 0x5B, 0x5C, 0x57, 0x5E, 0x62, 0x58, 0x4F, 0x55, 0xA5, 0x92, 0x98, 0x97, 0x89, 
   0x8A, 0x7F, 0x7A, 0x77, 0x62, 0x63, 0x5F, 0x53, 0x5A, 0x58, 0xBE, 0xC9, 0xCA, 0x7D, 0x81, 0x89, 
   0x7E, 0x7B, 0x84, 0x9C, 0x8E, 0x94, 0xBD, 0xA8, 0xA8, 0xAB, 0x92, 0x8F, 0xA8, 0x8C, 0x85, 0xCD, 
   0xB3, 0xAD, 0xCC, 0xB3, 0xAD, 0xF9, 0xE7, 0xE2, 0xF3, 0xDC, 0xD6, 0xEE, 0xD5, 0xCF, 0xF1, 0xD7, 
   0xD1, 0xF6, 0xDC, 0xD6, 0xF1, 0xDC, 0xD7, 0xF1, 0xDF, 0xDA, 0xF5, 0xE2, 0xDD, 0xE1, 0xD0, 0xCB, 
   0xE1, 0xCD, 0xC8, 0xEF, 0xDC, 0xD6, 0xE6, 0xD3, 0xCE, 0xE5, 0xD8, 0xD5, 0xA3, 0x96, 0x94, 0xA1, 
   0x97, 0x97, 0xCC, 0xC2, 0xC2, 0x8F, 0x85, 0x87, 0x79, 0x71, 0x73, 0x91, 0x86, 0x85, 0xF5, 0xEB, 
   0xE7, 0xFA, 0xF3, 0xF0, 0xF1, 0xED, 0xEB, 0xD9, 0xD5, 0xD4, 0xEC, 0xE5, 0xE6, 0xFC, 0xF1, 0xF3, 
   0xA0, 0x96, 0x99, 0x86, 0x80, 0x82, 0x91, 0x8D, 0x8F, 0xC5, 0xC3, 0xC5, 0xFE, 0xF9, 0xFB, 0xD1, 
   0xCA, 0xCC, 0xB5, 0xAB, 0xB1, 0xCD, 0xC5, 0xCD, 0xDA, 0xD2, 0xD3, 0x8A, 0x81, 0x7F, 0x6C, 0x62, 
   0x60, 0xEA, 0xDD, 0xDF, 0xF7, 0xE9, 0xEC, 0xD4, 0xC2, 0xC5, 0xAF, 0x9D, 0x9F, 0xEC, 0xDF, 0xE1, 
   0xA2, 0x94, 0x96, 0xCF, 0xC4, 0xC6, 0xF5, 0xEA, 0xEB, 0xDD, 0xD6, 0xD5, 0x5A, 0x58, 0x57, 0x3D, 
   0x3E, 0x3C, 0x54, 0x55, 0x55, 0x42, 0x45, 0x45, 0x57, 0x5B, 0x5C, 0x56, 0x5A, 0x5D, 0x57, 0x5F, 
   0x5E, 0x6C, 0x74, 0x73, 0x61, 0x69, 0x68, 0x49, 0x52, 0x51, 0x4D, 0x55, 0x54, 0x56, 0x5E, 0x5D, 
   0x64, 0x6B, 0x6E, 0x5D, 0x64, 0x6C, 0x54, 0x5F, 0x63, 0x4E, 0x59, 0x5D, 0x58, 0x62, 0x63, 0x57, 
   0x5C, 0x5D, 0x62, 0x64, 0x65, 0x4D, 0x4F, 0x5A, 0x62, 0x5F, 0x68, 0xC4, 0xBC, 0xC1, 0xF8, 0xEC, 
   0xEE, 0xC8, 0xB8, 0xB5, 0xF1, 0xE6, 0xDD, 0xFE, 0xF8, 0xF1, 0xDC, 0xCC, 0xC9, 0xA3, 0x90, 0x8D, 
   0xCE, 0xBB, 0xB8, 0xF3, 0xE1, 0xDE, 0xF5, 0xE5, 0xE2, 0xB1, 0x9E, 0x9B, 0x9E, 0x8B, 0x88, 0xAB, 
   0x9A, 0x97, 0xE9, 0xDD, 0xDA, 0xE3, 0xD6, 0xD2, 0x9D, 0x92, 0x8E, 0xA5, 0x9D, 0x99, 0x60, 0x58, 
   0x54, 0x7B, 0x72, 0x6F, 0xCC, 0xC1, 0xBD, 0xDC, 0xD0, 0xCC, 0xF0, 0xE1, 0xDC, 0xFC, 0xEB, 0xE5, 
   0xF4, 0xE2, 0xDB, 0xF0, 0xDE, 0xDB, 0xEF, 0xDE, 0xDB, 0xFC, 0xEB, 0xE8, 0xF9, 0xE7, 0xE4, 0xFC, 
   0xEA, 0xE7, 0xF9, 0xE4, 0xE2, 0xFC, 0xEC, 0xE8, 0xF8, 0xE5, 0xE1, 0xC7, 0xB6, 0xB6, 0xD6, 0xC8, 
   0xCB, 0xB8, 0xAA, 0xAD, 0xCC, 0xBE, 0xBF, 0xCB, 0xBB, 0xBC, 0xB9, 0xA0, 0xA5, 0x9D, 0x89, 0x8E, 
   0x60, 0x56, 0x56, 0x6F, 0x69, 0x64, 0xD4, 0xC7, 0xC1, 0xBE, 0xA4, 0x9E, 0x83, 0x60, 0x55, 0x9F, 
   0x77, 0x6A, 0xA2, 0x7A, 0x6E, 0x97, 0x6F, 0x63, 0x9A, 0x72, 0x67, 0x9F, 0x77, 0x6B, 0x9C, 0x74, 
   0x68, 0xA0, 0x72, 0x66, 0xA4, 0x76, 0x6A, 0xA9, 0x80, 0x77, 0x93, 0x72, 0x6C, 0x77, 0x5D, 0x59, 
   0x7A, 0x65, 0x63, 0x7F, 0x6C, 0x69, 0x88, 0x75, 0x70, 0x88, 0x75, 0x6F, 0x8C, 0x7A, 0x72, 0x7D, 
   0x6A, 0x62, 0x61, 0x4C, 0x44, 0xB7, 0xA3, 0x9B, 0xC1, 0xAE, 0xA9, 0x87, 0x75, 0x72, 0x86, 0x73, 
   0x70, 0x81, 0x6F, 0x6C, 0x74, 0x62, 0x5E, 0xA8, 0x95, 0x92, 0xB0, 0x9D, 0x99, 0xB1, 0xA0, 0x98, 
   0xA8, 0x9A, 0x91, 0xB3, 0xA7, 0x9E, 0xA5, 0x95, 0x8B, 0x94, 0x7A, 0x73, 0xA4, 0x81, 0x7C, 0x93, 
   0x71, 0x6C, 0x9E, 0x7E, 0x7A, 0xAE, 0x93, 0x8F, 0xB6, 0xA2, 0x9F, 0x87, 0x79, 0x76, 0x5B, 0x52, 
   0x4F, 0x5C, 0x53, 0x52, 0x80, 0x72, 0x6F, 0x53, 0x44, 0x41, 0x62, 0x53, 0x50, 0x7F, 0x6E, 0x6B, 
   0xC1, 0xAF, 0xAC, 0xDD, 0xCB, 0xC8, 0xE4, 0xCB, 0xC8, 0xDE, 0xBC, 0xB9, 0xD8, 0xB4, 0xB2, 0xDB, 
   0xB5, 0xB3, 0xDD, 0xB4, 0xB2, 0xED, 0xC1, 0xC0, 0xE7, 0xBA, 0xB8, 0xE0, 0xBD, 0xB8, 0xD8, 0xB6, 
   0xB0, 0xC2, 0xA0, 0x9A, 0xBC, 0x9B, 0x95, 0xBB, 0x9A, 0x94, 0xE5, 0xC4, 0xBF, 0xC6, 0xA0, 0x9C, 
   0xCE, 0xA2, 0xA1, 0xF1, 0xC5, 0xC4, 0xE4, 0xB8, 0xB7, 0xE1, 0xB5, 0xB4, 0xDC, 0xB0, 0xAE, 0xDA, 
   0xAF, 0xAD, 0xD3, 0xB1, 0xAB, 0xC8, 0xA7, 0xA1, 0xC5, 0xA6, 0xA0, 0x85, 0x69, 0x62, 0xBB, 0xA1, 
   0x9A, 0xCC, 0xB7, 0xAF, 0x7A, 0x62, 0x5A, 0x87, 0x6A, 0x63, 0xB4, 0x97, 0x90, 0xEC, 0xCD, 0xC7, 
   0xEB, 0xCA, 0xC4, 0xE5, 0xC2, 0xBC, 0xE6, 0xC3, 0xBD, 0xDD, 0xBC, 0xB3, 0xC1, 0xA0, 0x97, 0xA4, 
   0x83, 0x7A, 0xA0, 0x7F, 0x76, 0xD6, 0xB6, 0xAD, 0xBD, 0x9B, 0x92, 0xA3, 0x8A, 0x80, 0x65, 0x56, 
   0x4B, 0x8F, 0x7E, 0x73, 0xB9, 0xA4, 0x99, 0xAA, 0x90, 0x86, 0xA8, 0x8D, 0x83, 0xBF, 0xA1, 0x98, 
   0xCA, 0xA3, 0x9D, 0xA6, 0x80, 0x7C, 0xBA, 0x99, 0x95, 0xBC, 0xA2, 0x9D, 0x7F, 0x6A, 0x66, 0x69, 
   0x58, 0x55, 0x59, 0x4F, 0x4B, 0x47, 0x3F, 0x39, 0x77, 0x66, 0x60, 0xA4, 0x8E, 0x87, 0xA7, 0x8D, 
   0x87, 0xB3, 0x9A, 0x93, 0x9A, 0x84, 0x7C, 0x9D, 0x8F, 0x86, 0xAD, 0x98, 0x90, 0xB4, 0x96, 0x90, 
   0xD6, 0xAF, 0xAA, 0xD1, 0xA7, 0xA2, 0xDA, 0xAC, 0xA8, 0xDE, 0xB4, 0xB0, 0xE3, 0xC0, 0xBB, 0xA9, 
   0x8F, 0x89, 0x4D, 0x3C, 0x35, 0x73, 0x6B, 0x65, 0x69, 0x64, 0x5F, 0x45, 0x40, 0x3C, 0x68, 0x68, 
   0x60, 0xAC, 0xA6, 0x9F, 0xA4, 0x96, 0x8F, 0xC2, 0xAB, 0xA4, 0xEF, 0xCB, 0xC5, 0xE1, 0xB6, 0xAF, 
   0xC7, 0xA0, 0x9A, 0xAB, 0x8C, 0x86, 0x3E, 0x4A, 0x4C, 0x3C, 0x43, 0x46, 0x46, 0x4B, 0x4E, 0x52, 
   0x5F, 0x61, 0x51, 0x64, 0x65, 0x9D, 0xA6, 0xA8, 0x7E, 0x75, 0x7B, 0xCA, 0xB8, 0xC1, 0x89, 0x7B, 
   0x7F, 0x40, 0x3B, 0x3A, 0x30, 0x31, 0x2F, 0x40, 0x47, 0x47, 0x4D, 0x58, 0x5B, 0x39, 0x3F, 0x46, 
   0x47, 0x46, 0x50, 0x87, 0x7C, 0x81, 0xBB, 0xA9, 0xA9, 0xAD, 0x94, 0x91, 0xD2, 0xB5, 0xAF, 0xDC, 
   0xC0, 0xB9, 0xF7, 0xDE, 0xD8, 0xEE, 0xD4, 0xCE, 0xF3, 0xD9, 0xD3, 0xF2, 0xD8, 0xD2, 0xF8, 0xDD, 
   0xD7, 0xFA, 0xE0, 0xDA, 0xF2, 0xDF, 0xD9, 0xF6, 0xE5, 0xDF, 0xDE, 0xCE, 0xC8, 0x9D, 0x8D, 0x87, 
   0xE0, 0xD0, 0xCA, 0xEB, 0xDB, 0xD5, 0xED, 0xDF, 0xD9, 0xB6, 0xAA, 0xA7, 0xC6, 0xB9, 0xB7, 0xCE, 
   0xC5, 0xC4, 0x73, 0x68, 0x69, 0x94, 0x8A, 0x8B, 0xC4, 0xBC, 0xBD, 0xBD, 0xB2, 0xB1, 0xF5, 0xEE, 
   0xE9, 0xF6, 0xF1, 0xEE, 0xE1, 0xDE, 0xDB, 0xD5, 0xD2, 0xD2, 0xF5, 0xF1, 0xF2, 0xAC, 0xA4, 0xA5, 
   0xAA, 0xA2, 0xA5, 0xAE, 0xA8, 0xAB, 0x9D, 0x9A, 0x9C, 0xD5, 0xD4, 0xD6, 0xA5, 0xA0, 0xA2, 0xBE, 
   0xB6, 0xB9, 0xCA, 0xC1, 0xC8, 0xF7, 0xF1, 0xF6, 0xE0, 0xD8, 0xD9, 0x6B, 0x62, 0x61, 0xB1, 0xA7, 
   0xA5, 0xF4, 0xE8, 0xEA, 0xF9, 0xEB, 0xF0, 0xE1, 0xD3, 0xD5, 0xE4, 0xD5, 0xD7, 0xD4, 0xC5, 0xC7, 
   0xC5, 0xB9, 0xBB, 0xFD, 0xF4, 0xF7, 0xCC, 0xC3, 0xC4, 0x61, 0x5C, 0x5B, 0x42, 0x43, 0x40, 0x3D, 
   0x3E, 0x3C, 0x49, 0x4B, 0x4B, 0x4C, 0x4F, 0x4F, 0x57, 0x5B, 0x5D, 0x49, 0x4C, 0x50, 0x5C, 0x64, 
   0x63, 0x66, 0x6F, 0x6E, 0x5D, 0x65, 0x64, 0x52, 0x5A, 0x59, 0x4C, 0x54, 0x53, 0x57, 0x5F, 0x5D, 
   0x49, 0x50, 0x53, 0x55, 0x5D, 0x64, 0x55, 0x60, 0x64, 0x55, 0x61, 0x64, 0x5B, 0x65, 0x66, 0x66, 
   0x6C, 0x6C, 0x59, 0x5B, 0x5C, 0x4B, 0x4C, 0x55, 0x63, 0x5F, 0x68, 0xD4, 0xCB, 0xD0, 0xF1, 0xE4, 
   0xE5, 0xF4, 0xE6, 0xE3, 0xF0, 0xE5, 0xDD, 0xDD, 0xD0, 0xCA, 0xE3, 0xD0, 0xCD, 0xE1, 0xCE, 0xCB, 
   0xDD, 0xCA, 0xC7, 0xEE, 0xDB, 0xD8, 0xEF, 0xDD, 0xDA, 0xD1, 0xBE, 0xBB, 0xD8, 0xC5, 0xC2, 0xD3, 
   0xC5, 0xC2, 0xE0, 0xD4, 0xD1, 0xC8, 0xBF, 0xBB, 0x67, 0x5C, 0x58, 0xB7, 0xAF, 0xAB, 0x81, 0x78, 
   0x74, 0x87, 0x7E, 0x7B, 0xF2, 0xE6, 0xE2, 0xEE, 0xE2, 0xDE, 0xF6, 0xE7, 0xE1, 0xF5, 0xE4, 0xDD, 
   0xF0, 0xDE, 0xD7, 0xEB, 0xDA, 0xD7, 0xF7, 0xE6, 0xE3, 0xFC, 0xEA, 0xE7, 0xF8, 0xE6, 0xE3, 0xF7, 
   0xE2, 0xDF, 0xFD, 0xE9, 0xE8, 0xEF, 0xDC, 0xD9, 0xC1, 0xAE, 0xAA, 0xBA, 0xAB, 0xAB, 0x85, 0x78, 
   0x7B, 0xA9, 0x9B, 0x9D, 0x96, 0x88, 0x87, 0x99, 0x88, 0x86, 0x9F, 0x86, 0x89, 0x96, 0x83, 0x86, 
   0x58, 0x4D, 0x4B, 0xB1, 0xA7, 0xA1, 0xCC, 0xBA, 0xB2, 0x94, 0x77, 0x6E, 0xA5, 0x7E, 0x73, 0xA9, 
   0x7D, 0x70, 0xA2, 0x76, 0x6A, 0x9F, 0x74, 0x67, 0x9F, 0x74, 0x67, 0x9D, 0x72, 0x65, 0xA1, 0x75, 
   0x69, 0xA9, 0x7A, 0x6A, 0xA3, 0x75, 0x67, 0xA5, 0x7E, 0x72, 0xA8, 0x87, 0x7E, 0x7F, 0x65, 0x5F, 
   0x6B, 0x55, 0x51, 0x70, 0x5D, 0x58, 0x6F, 0x5C, 0x57, 0x64, 0x51, 0x4C, 0x7B, 0x68, 0x61, 0x9F, 
   0x8C, 0x84, 0x83, 0x6F, 0x67, 0x7B, 0x65, 0x5E, 0xB4, 0x9E, 0x9A, 0xAB, 0x92, 0x91, 0xAE, 0x93, 
   0x92, 0xB5, 0x9A, 0x99, 0x95, 0x79, 0x78, 0x91, 0x75, 0x74, 0x89, 0x6E, 0x6B, 0xB5, 0xA0, 0x98, 
   0xA8, 0x96, 0x8D, 0x8F, 0x7F, 0x76, 0x9E, 0x8B, 0x83, 0xC3, 0xA9, 0xA2, 0xCA, 0xAA, 0xA3, 0xC1, 
   0xA0, 0x9C, 0xA6, 0x88, 0x84, 0xA8, 0x8C, 0x89, 0x9F, 0x89, 0x87, 0xAF, 0x9E, 0x9C, 0x97, 0x8B, 
   0x89, 0x72, 0x66, 0x63, 0x9F, 0x8F, 0x8B, 0xA4, 0x93, 0x90, 0x8C, 0x7A, 0x77, 0x8D, 0x78, 0x76, 
   0x7C, 0x67, 0x65, 0x91, 0x7B, 0x79, 0xD9, 0xBE, 0xBC, 0xE0, 0xBE, 0xBB, 0xDE, 0xBA, 0xB7, 0xEC, 
   0xC5, 0xC4, 0xE8, 0xBF, 0xBE, 0xE5, 0xB9, 0xB9, 0xE7, 0xBB, 0xBA, 0xE2, 0xBF, 0xB9, 0xE1, 0xBE, 
   0xB8, 0xDE, 0xBB, 0xB5, 0xE7, 0xC4, 0xBE, 0xE5, 0xC2, 0xBC, 0xDE, 0xBB, 0xB5, 0xE6, 0xC2, 0xBE, 
   0xD7, 0xB3, 0xB1, 0xCE, 0xAA, 0xA8, 0xB8, 0x94, 0x92, 0xBE, 0x9A, 0x98, 0xC3, 0xA0, 0x9D, 0xCE, 
   0xAA, 0xA8, 0xD2, 0xB1, 0xAB, 0xDC, 0xBD, 0xB6, 0xD4, 0xB7, 0xB0, 0xD4, 0xB8, 0xB1, 0xD7, 0xBC, 
   0xB4, 0xD7, 0xBE, 0xB7, 0xC9, 0xAD, 0xA6, 0xD9, 0xBA, 0xB4, 0xDD, 0xBD, 0xB7, 0xD9, 0xB6, 0xB0, 
   0xD5, 0xB2, 0xAC, 0xDB, 0xB6, 0xB1, 0xD7, 0xB1, 0xAC, 0xD9, 0xB5, 0xAD, 0xE0, 0xBC, 0xB4, 0xE4, 
   0xC1, 0xB9, 0xDC, 0xB9, 0xB1, 0xD7, 0xB3, 0xAB, 0xA5, 0x81, 0x79, 0x9E, 0x81, 0x78, 0xAA, 0x95, 
   0x8A, 0x7C, 0x64, 0x5A, 0x93, 0x7A, 0x6F, 0x8F, 0x74, 0x6A, 0xA6, 0x8A, 0x80, 0xBE, 0xA0, 0x97, 
   0xCB, 0xA7, 0xA0, 0xB9, 0x97, 0x91, 0xC6, 0xA8, 0xA4, 0x67, 0x4F, 0x4A, 0x59, 0x46, 0x41, 0x64, 
   0x55, 0x52, 0x69, 0x62, 0x5D, 0x4C, 0x48, 0x43, 0x54, 0x49, 0x42, 0x8A, 0x78, 0x72, 0x94, 0x80, 
   0x78, 0x69, 0x56, 0x4E, 0x50, 0x40, 0x37, 0x65, 0x5D, 0x53, 0xA1, 0x93, 0x8A, 0xBF, 0xA7, 0x9F, 
   0xD4, 0xB4, 0xAE, 0xCF, 0xAC, 0xA6, 0xD8, 0xB2, 0xAD, 0xDA, 0xB4, 0xAF, 0xE4, 0xC0, 0xBD, 0xCB, 
   0xB1, 0xAD, 0xBB, 0xAB, 0xA6, 0x90, 0x88, 0x83, 0x65, 0x5F, 0x5C, 0xA1, 0x9C, 0x98, 0x9E, 0x9B, 
   0x95, 0x6D, 0x65, 0x61, 0x9D, 0x8F, 0x89, 0xEE, 0xD7, 0xD2, 0xE3, 0xC1, 0xBC, 0xE0, 0xB9, 0xB4, 
   0xDE, 0xBB, 0xB5, 0xD8, 0xBA, 0xB4, 0x93, 0xA1, 0xA3, 0x74, 0x7B, 0x7E, 0xAA, 0xAE, 0xB2, 0x9D, 
   0xA9, 0xAB, 0x6D, 0x7E, 0x80, 0x81, 0x88, 0x8A, 0x63, 0x5A, 0x60, 0x9F, 0x8D, 0x96, 0x53, 0x46, 
   0x4A, 0x3B, 0x37, 0x35, 0x34, 0x34, 0x32, 0x3D, 0x43, 0x45, 0x40, 0x49, 0x4D, 0x54, 0x5E, 0x63, 
   0x64, 0x66, 0x6D, 0x79, 0x71, 0x74, 0xB2, 0xA1, 0xA2, 0xB8, 0xA0, 0x9E, 0xB8, 0x9D, 0x97, 0xE2, 
   0xCC, 0xC6, 0xF3, 0xDA, 0xD6, 0xEC, 0xD2, 0xCD, 0xF4, 0xDB, 0xD6, 0xF7, 0xDE, 0xD9, 0xF4, 0xDB, 
   0xD6, 0xF6, 0xDD, 0xD8, 0xFA, 0xE8, 0xE4, 0xD6, 0xC5, 0xC1, 0xB6, 0xA5, 0xA1, 0xE4, 0xD4, 0xD0, 
   0xF0, 0xE0, 0xDC, 0xF9, 0xE9, 0xE5, 0xCC, 0xBD, 0xB9, 0xB4, 0xA6, 0xA3, 0xCE, 0xC1, 0xBF, 0xAB, 
   0xA0, 0x9F, 0xC0, 0xB8, 0xB8, 0xEC, 0xE3, 0xE5, 0xF6, 0xF0, 0xF2, 0xB4, 0xA9, 0xA9, 0xEF, 0xE7, 
   0xE3, 0xF7, 0xF3, 0xF0, 0xBC, 0xBA, 0xB8, 0xCE, 0xCD, 0xCC, 0x7F, 0x7A, 0x7B, 0x73, 0x6C, 0x6E, 
   0x9F, 0x96, 0x99, 0x9C, 0x97, 0x9A, 0xCA, 0xC8, 0xC9, 0x6F, 0x6E, 0x70, 0x6E, 0x6A, 0x6C, 0x85, 
   0x7D, 0x7F, 0xB4, 0xAB, 0xB0, 0xD9, 0xD5, 0xD8, 0xC1, 0xB9, 0xBA, 0x67, 0x5F, 0x5D, 0xEF, 0xE8, 
   0xE4, 0xF8, 0xED, 0xED, 0xEC, 0xE0, 0xE2, 0x91, 0x85, 0x87, 0xBC, 0xB1, 0xB2, 0xDD, 0xD5, 0xD6, 
   0xE3, 0xDB, 0xDC, 0xEC, 0xE7, 0xE8, 0x74, 0x6D, 0x6E, 0x5F, 0x5B, 0x5A, 0x40, 0x41, 0x3E, 0x44, 
   0x45, 0x43, 0x63, 0x66, 0x65, 0x48, 0x4C, 0x4C, 0x49, 0x4D, 0x4F, 0x52, 0x56, 0x59, 0x51, 0x59, 
   0x58, 0x57, 0x5F, 0x5E, 0x59, 0x61, 0x60, 0x56, 0x5E, 0x5D, 0x52, 0x5A, 0x59, 0x4D, 0x55, 0x53, 
   0x5A, 0x61, 0x64, 0x50, 0x58, 0x5F, 0x50, 0x5B, 0x60, 0x57, 0x63, 0x67, 0x63, 0x6D, 0x6E, 0x5A, 
   0x60, 0x60, 0x5B, 0x5D, 0x5F, 0x4B, 0x4C, 0x56, 0x64, 0x5F, 0x68, 0xEA, 0xE0, 0xE5, 0xF4, 0xE5, 
   0xE6, 0xE7, 0xD9, 0xD6, 0xE4, 0xD9, 0xD1, 0xB7, 0xA8, 0xA2, 0xE1, 0xCD, 0xCA, 0xD2, 0xBF, 0xBC, 
   0xD2, 0xC0, 0xBD, 0xFC, 0xEA, 0xE7, 0xE6, 0xD3, 0xD0, 0xF4, 0xE1, 0xDE, 0xE1, 0xCE, 0xCB, 0xC7, 
   0xB5, 0xB2, 0xD0, 0xC0, 0xBD, 0xA1, 0x92, 0x8F, 0xBC, 0xB3, 0xAF, 0xE3, 0xDC, 0xD7, 0x79, 0x6D, 
   0x6A, 0x9A, 0x8F, 0x8C, 0xF9, 0xED, 0xE9, 0xF5, 0xE7, 0xE3, 0xF2, 0xE3, 0xDD, 0xF0, 0xDF, 0xD8, 
   0xF7, 0xE6, 0xDF, 0xF8, 0xE7, 0xE4, 0xF5, 0xE5, 0xE2, 0xF7, 0xE5, 0xE2, 0xF7, 0xE5, 0xE2, 0xF8, 
   0xE4, 0xE3, 0xF6, 0xE2, 0xE0, 0xC8, 0xB3, 0xAE, 0x94, 0x83, 0x7D, 0x7E, 0x71, 0x6F, 0x74, 0x69, 
   0x69, 0x91, 0x84, 0x85, 0x7A, 0x6B, 0x69, 0x82, 0x71, 0x6C, 0x85, 0x6D, 0x6E, 0x67, 0x54, 0x53, 
   0x84, 0x75, 0x70, 0x94, 0x84, 0x7E, 0x97, 0x7D, 0x74, 0xA9, 0x87, 0x7E, 0xA2, 0x77, 0x6B, 0xA4, 
   0x76, 0x66, 0xA4, 0x76, 0x67, 0x9D, 0x6F, 0x60, 0x9F, 0x72, 0x62, 0xA0, 0x72, 0x63, 0xA2, 0x74, 
   0x65, 0xA1, 0x73, 0x62, 0xA6, 0x7A, 0x69, 0xA2, 0x7C, 0x6C, 0xA4, 0x83, 0x75, 0x9F, 0x83, 0x78, 
   0x77, 0x5E, 0x55, 0x6A, 0x55, 0x4E, 0x7E, 0x69, 0x64, 0x86, 0x71, 0x6C, 0x7F, 0x6A, 0x64, 0xA4, 
   0x8F, 0x8A, 0xAF, 0x9A, 0x95, 0x88, 0x72, 0x6C, 0x79, 0x5E, 0x5B, 0x77, 0x5B, 0x57, 0x7C, 0x5D, 
   0x5B, 0x96, 0x75, 0x72, 0xCA, 0xA7, 0xA6, 0xC5, 0xA0, 0x9F, 0xB1, 0x8E, 0x8B, 0x8D, 0x6F, 0x69, 
   0x9F, 0x85, 0x7E, 0xB4, 0x9F, 0x97, 0xB5, 0xA1, 0x99, 0xB9, 0xA2, 0x9A, 0xBF, 0xA5, 0x9E, 0xB6, 
   0x9B, 0x95, 0xBF, 0xA6, 0xA0, 0xBE, 0xA5, 0xA1, 0xAF, 0x99, 0x96, 0x9E, 0x8B, 0x8A, 0xAE, 0x9D, 
   0x9C, 0xA2, 0x91, 0x8F, 0xA0, 0x8D, 0x8A, 0xAF, 0x9C, 0x99, 0xAD, 0x99, 0x96, 0xBF, 0xA8, 0xA6, 
   0xBB, 0xA3, 0xA1, 0xC2, 0xA8, 0xA7, 0xD5, 0xB9, 0xB6, 0xDE, 0xBF, 0xBA, 0xDD, 0xBB, 0xB7, 0xDE, 
   0xB9, 0xB6, 0xE4, 0xBC, 0xB9, 0xE6, 0xBA, 0xB8, 0xE4, 0xB9, 0xB6, 0xD7, 0xB0, 0xAB, 0xD8, 0xB1, 
   0xAC, 0xDE, 0xB7, 0xB2, 0xDA, 0xB3, 0xAE, 0xDA, 0xB4, 0xAF, 0xE1, 0xBA, 0xB4, 0xD9, 0xB9, 0xB4, 
   0xBB, 0xA3, 0x9E, 0x98, 0x7F, 0x79, 0xC5, 0xAC, 0xA7, 0xC3, 0xAA, 0xA5, 0xB0, 0x97, 0x92, 0x89, 
   0x70, 0x6B, 0xAB, 0x8E, 0x87, 0xC8, 0xAC, 0xA5, 0xC7, 0xAB, 0xA4, 0xD8, 0xBB, 0xB4, 0xDB, 0xBC, 
   0xB6, 0xD1, 0xB3, 0xAD, 0xE7, 0xC8, 0xC2, 0xE2, 0xC0, 0xBA, 0xE7, 0xC4, 0xBE, 0xD4, 0xAF, 0xA9, 
   0xD7, 0xB1, 0xAC, 0xDB, 0xB4, 0xAF, 0xD4, 0xAD, 0xA8, 0xD9, 0xB2, 0xAB, 0xD5, 0xAF, 0xA7, 0xDC, 
   0xB6, 0xAE, 0xD9, 0xB3, 0xAB, 0xCD, 0xA8, 0x9F, 0xD8, 0xB2, 0xAA, 0xCD, 0xAB, 0xA2, 0xAD, 0x90, 
   0x87, 0x85, 0x67, 0x5E, 0x8A, 0x6D, 0x63, 0xB4, 0x98, 0x8E, 0xA7, 0x8A, 0x81, 0xE1, 0xC3, 0xBA, 
   0xC8, 0xA6, 0xA0, 0x8D, 0x6D, 0x68, 0x70, 0x55, 0x50, 0x78, 0x64, 0x5E, 0x98, 0x88, 0x82, 0x68, 
   0x5C, 0x58, 0x48, 0x43, 0x3E, 0x31, 0x30, 0x2A, 0x62, 0x59, 0x55, 0xAB, 0x9F, 0x98, 0xA3, 0x94, 
   0x8D, 0x5F, 0x53, 0x4A, 0x45, 0x3B, 0x31, 0x54, 0x51, 0x46, 0x5D, 0x54, 0x4B, 0xC4, 0xB2, 0xAB, 
   0xD8, 0xBE, 0xB8, 0xD1, 0xB2, 0xAD, 0xD2, 0xB3, 0xAE, 0xC7, 0xA5, 0xA1, 0xA8, 0x87, 0x85, 0xC9, 
   0xB2, 0xB0, 0x97, 0x88, 0x86, 0x61, 0x58, 0x57, 0x74, 0x6C, 0x6B, 0xA7, 0x9F, 0x9F, 0xAA, 0xA1, 
   0xA0, 0xE2, 0xD7, 0xD5, 0xE9, 0xD8, 0xD5, 0xE8, 0xD1, 0xCE, 0xE4, 0xC6, 0xC4, 0xEA, 0xCA, 0xC5, 
   0xEA, 0xCC, 0xC7, 0xE7, 0xCB, 0xC5, 0x9D, 0xAD, 0xAF, 0x7F, 0x88, 0x8A, 0x7C, 0x82, 0x85, 0xCE, 
   0xD9, 0xDC, 0x6C, 0x7C, 0x7E, 0x46, 0x4B, 0x4D, 0x6D, 0x63, 0x69, 0xD5, 0xC7, 0xCE, 0x5E, 0x51, 
   0x55, 0x46, 0x42, 0x41, 0x37, 0x36, 0x35, 0x42, 0x47, 0x48, 0x49, 0x4E, 0x53, 0x46, 0x50, 0x54, 
   0x49, 0x50, 0x53, 0x7E, 0x77, 0x78, 0xD4, 0xC4, 0xC4, 0xBD, 0xA7, 0xA3, 0xE3, 0xCA, 0xC4, 0xF6, 
   0xDD, 0xD6, 0xF1, 0xD8, 0xD4, 0xF9, 0xE0, 0xDC, 0xF4, 0xDB, 0xD7, 0xF4, 0xDB, 0xD7, 0xF2, 0xD9, 
   0xD5, 0xF7, 0xDE, 0xDA, 0xF1, 0xDF, 0xDC, 0xE1, 0xD4, 0xD1, 0xED, 0xE2, 0xDF, 0xD2, 0xC3, 0xBF, 
   0xD7, 0xC8, 0xC5, 0xBC, 0xAD, 0xAA, 0x92, 0x84, 0x80, 0x78, 0x6B, 0x68, 0xB7, 0xAB, 0xA9, 0xC7, 
   0xBE, 0xBD, 0xBE, 0xB3, 0xB4, 0xFA, 0xF0, 0xF2, 0xDE, 0xD6, 0xD7, 0xC0, 0xB8, 0xB7, 0xF1, 0xE9, 
   0xE6, 0xF7, 0xF3, 0xF1, 0xD8, 0xD9, 0xD8, 0x61, 0x60, 0x5F, 0x62, 0x5F, 0x60, 0xBB, 0xB4, 0xB7, 
   0x86, 0x7F, 0x82, 0xD4, 0xD1, 0xD3, 0xB5, 0xB4, 0xB6, 0x86, 0x86, 0x87, 0xB3, 0xAF, 0xB1, 0xB3, 
   0xAD, 0xAF, 0xC3, 0xBD, 0xC1, 0x61, 0x59, 0x5D, 0x62, 0x59, 0x5A, 0x9A, 0x92, 0x8F, 0xF8, 0xEF, 
   0xEC, 0xFA, 0xEF, 0xEE, 0xAF, 0xA2, 0xA4, 0x46, 0x3D, 0x3F, 0xC1, 0xBA, 0xBC, 0xEC, 0xE7, 0xE8, 
   0xCF, 0xCD, 0xCE, 0x83, 0x81, 0x81, 0x4F, 0x4D, 0x4E, 0x53, 0x53, 0x52, 0x44, 0x46, 0x44, 0x51, 
   0x53, 0x51, 0x65, 0x69, 0x68, 0x4A, 0x4F, 0x4F, 0x59, 0x5D, 0x5F, 0x6A, 0x6F, 0x72, 0x5B, 0x62, 
   0x62, 0x4C, 0x54, 0x54, 0x5B, 0x63, 0x63, 0x4B, 0x53, 0x52, 0x5A, 0x62, 0x61, 0x52, 0x5A, 0x59, 
   0x62, 0x69, 0x6D, 0x54, 0x5C, 0x63, 0x4D, 0x58, 0x5C, 0x4E, 0x5B, 0x5E, 0x52, 0x5C, 0x5D, 0x58, 
   0x5E, 0x5E, 0x64, 0x66, 0x68, 0x3F, 0x3F, 0x48, 0x5B, 0x56, 0x5D, 0xCA, 0xBE, 0xC3, 0xC6, 0xB5, 
   0xB7, 0xD8, 0xCB, 0xC9, 0xCC, 0xC0, 0xBA, 0xC2, 0xB2, 0xAD, 0xC0, 0xAC, 0xA9, 0xF6, 0xE3, 0xE0, 
   0xFA, 0xEB, 0xE8, 0xEC, 0xDB, 0xD8, 0xED, 0xDB, 0xD8, 0xF0, 0xDE, 0xDB, 0xEA, 0xD8, 0xD5, 0xED, 
   0xDE, 0xDB, 0xC9, 0xB8, 0xB5, 0xB5, 0xA4, 0xA1, 0xE4, 0xD9, 0xD5, 0xA3, 0x97, 0x93, 0x90, 0x82, 
   0x7F, 0xAB, 0x9D, 0x9B, 0xF8, 0xEB, 0xE7, 0xF2, 0xE6, 0xE2, 0xF1, 0xE2, 0xDC, 0xF4, 0xE4, 0xDD, 
   0xF6, 0xE6, 0xDF, 0xF4, 0xE3, 0xE0, 0xF5, 0xE4, 0xE1, 0xF6, 0xE4, 0xE1, 0xF9, 0xE5, 0xE2, 0xFB, 
   0xE6, 0xE4, 0xE4, 0xCE, 0xCD, 0xC1, 0xAB, 0xA7, 0xD7, 0xC7, 0xC0, 0x88, 0x7B, 0x78, 0x71, 0x65, 
   0x64, 0x83, 0x76, 0x74, 0x77, 0x68, 0x63, 0x89, 0x76, 0x6E, 0x79, 0x62, 0x5E, 0x62, 0x4E, 0x48, 
   0x8A, 0x78, 0x70, 0x7A, 0x65, 0x5C, 0x9B, 0x7B, 0x71, 0x9B, 0x73, 0x69, 0xA2, 0x74, 0x65, 0xA3, 
   0x72, 0x5F, 0xA1, 0x71, 0x5E, 0xA1, 0x71, 0x5F, 0x9F, 0x6F, 0x5D, 0xA3, 0x73, 0x60, 0xA4, 0x74, 
   0x62, 0xA3, 0x76, 0x62, 0xA1, 0x76, 0x62, 0xA3, 0x7D, 0x6A, 0xA3, 0x80, 0x6F, 0xA0, 0x81, 0x72, 
   0x9D, 0x80, 0x72, 0x79, 0x61, 0x57, 0x67, 0x50, 0x4A, 0x81, 0x6A, 0x64, 0x9B, 0x83, 0x7E, 0x7A, 
   0x63, 0x5E, 0x91, 0x7A, 0x76, 0x9B, 0x86, 0x81, 0x8C, 0x73, 0x6E, 0x88, 0x6D, 0x68, 0x79, 0x5A, 
   0x57, 0x78, 0x56, 0x53, 0xD4, 0xAF, 0xAC, 0xD2, 0xAA, 0xA8, 0xCE, 0xA7, 0xA4, 0xC6, 0xA1, 0x9C, 
   0x98, 0x76, 0x71, 0x92, 0x78, 0x71, 0x87, 0x70, 0x68, 0x9E, 0x89, 0x81, 0xC2, 0xAC, 0xA4, 0xAE, 
   0x99, 0x91, 0x97, 0x82, 0x7B, 0x88, 0x71, 0x6C, 0x8B, 0x76, 0x71, 0x8A, 0x75, 0x72, 0xA0, 0x89, 
   0x87, 0xCD, 0xB7, 0xB5, 0xD6, 0xBF, 0xBD, 0xC3, 0xAC, 0xAA, 0xBB, 0xA2, 0xA0, 0xBB, 0xA0, 0x9F, 
   0xC5, 0xA9, 0xA8, 0xB9, 0x9C, 0x9B, 0xC5, 0xA7, 0xA4, 0xB1, 0x93, 0x8E, 0xC5, 0xA4, 0xA0, 0xE3, 
   0xBF, 0xBB, 0xDF, 0xB8, 0xB4, 0xD8, 0xAE, 0xAB, 0xD0, 0xA6, 0xA3, 0xD5, 0xAC, 0xA7, 0xD7, 0xAE, 
   0xA9, 0xD7, 0xAE, 0xA9, 0xDC, 0xB3, 0xAE, 0xDF, 0xB5, 0xB0, 0xD5, 0xA9, 0xA4, 0xC3, 0xA3, 0x9E, 
   0xA2, 0x8E, 0x88, 0xA7, 0x91, 0x8B, 0x8B, 0x75, 0x6F, 0x93, 0x7E, 0x78, 0xB1, 0x9C, 0x96, 0xBA, 
   0xA3, 0x9D, 0x80, 0x66, 0x5E, 0x8B, 0x70, 0x69, 0xD0, 0xB4, 0xAD, 0xC8, 0xA9, 0xA3, 0xCE, 0xAD, 
   0xA7, 0xE0, 0xBE, 0xB8, 0xDC, 0xB9, 0xB3, 0xE2, 0xBD, 0xB7, 0xE2, 0xBC, 0xB7, 0xDB, 0xB4, 0xAF, 
   0xDB, 0xB3, 0xAE, 0xDC, 0xB3, 0xAE, 0xD8, 0xAE, 0xA9, 0xD4, 0xAC, 0xA4, 0xD1, 0xA9, 0xA1, 0xD3, 
   0xAB, 0xA3, 0xD3, 0xAA, 0xA3, 0xD5, 0xAC, 0xA5, 0xD7, 0xAF, 0xA7, 0xCE, 0xA7, 0x9F, 0xC8, 0xA3, 
   0x9B, 0xD6, 0xB1, 0xA9, 0xD7, 0xB4, 0xAC, 0xC0, 0xA0, 0x97, 0xB5, 0x97, 0x8E, 0x91, 0x74, 0x6C, 
   0x9A, 0x7A, 0x74, 0x77, 0x5A, 0x54, 0x5B, 0x42, 0x3C, 0x60, 0x4E, 0x48, 0x85, 0x78, 0x72, 0x69, 
   0x5F, 0x5B, 0x4F, 0x4A, 0x45, 0x54, 0x4F, 0x4B, 0xA9, 0x9D, 0x9A, 0xA8, 0x99, 0x94, 0x9C, 0x8D, 
   0x86, 0x68, 0x5A, 0x52, 0x3D, 0x31, 0x29, 0x57, 0x54, 0x4B, 0x7D, 0x72, 0x6A, 0x81, 0x6E, 0x67, 
   0x83, 0x69, 0x63, 0x8C, 0x6E, 0x69, 0xAE, 0x91, 0x8C, 0xC9, 0xAB, 0xA8, 0xA3, 0x87, 0x88, 0x90, 
   0x7D, 0x7C, 0x73, 0x65, 0x65, 0x71, 0x67, 0x69, 0x6D, 0x64, 0x66, 0xCD, 0xC3, 0xC5, 0xEE, 0xDF, 
   0xE2, 0xF0, 0xDF, 0xE0, 0xF2, 0xE1, 0xE1, 0xF7, 0xE3, 0xE2, 0xF3, 0xDB, 0xDA, 0xE8, 0xCF, 0xCD, 
   0xDD, 0xC4, 0xC0, 0xCB, 0xB2, 0xAD, 0x3E, 0x51, 0x52, 0x4B, 0x55, 0x57, 0x79, 0x80, 0x83, 0xA5, 
   0xB2, 0xB4, 0x54, 0x63, 0x65, 0x4B, 0x4D, 0x51, 0x77, 0x6C, 0x72, 0xF4, 0xE3, 0xEB, 0x84, 0x77, 
   0x7B, 0x55, 0x4E, 0x4D, 0x51, 0x4E, 0x4D, 0x48, 0x49, 0x4A, 0x43, 0x44, 0x49, 0x48, 0x51, 0x53, 
   0x3C, 0x44, 0x44, 0x98, 0x92, 0x91, 0xBD, 0xAC, 0xAB, 0xE9, 0xD5, 0xD1, 0xF3, 0xDD, 0xD7, 0xF4, 
   0xDB, 0xD6, 0xF3, 0xDA, 0xD7, 0xF3, 0xDB, 0xD8, 0xF2, 0xD9, 0xD6, 0xF3, 0xDB, 0xD7, 0xF7, 0xDF, 
   0xDC, 0xF5, 0xDE, 0xDA, 0xF5, 0xE5, 0xE2, 0xF9, 0xF0, 0xEC, 0xBE, 0xB4, 0xB1, 0x92, 0x86, 0x83, 
   0xA0, 0x95, 0x91, 0xC8, 0xBC, 0xB9, 0xE3, 0xD9, 0xD5, 0xC9, 0xBE, 0xBB, 0xE7, 0xDD, 0xDC, 0xD8, 
   0xCD, 0xCC, 0xC2, 0xB7, 0xB7, 0xD2, 0xC8, 0xCA, 0xA3, 0x9B, 0x9C, 0xBE, 0xB8, 0xB7, 0xF2, 0xEE, 
   0xEB, 0xB6, 0xB4, 0xB3, 0x72, 0x74, 0x74, 0x4B, 0x4C, 0x4D, 0x91, 0x8F, 0x91, 0xC7, 0xC2, 0xC5, 
   0xE8, 0xE2, 0xE4, 0x99, 0x95, 0x97, 0x56, 0x56, 0x57, 0x67, 0x69, 0x6A, 0xC7, 0xC4, 0xC6, 0xFC, 
   0xF8, 0xFA, 0x7D, 0x75, 0x7A, 0x62, 0x5A, 0x5E, 0x5B, 0x53, 0x53, 0xDC, 0xD5, 0xD1, 0xF9, 0xF0, 
   0xEC, 0xEA, 0xE2, 0xE1, 0x7C, 0x70, 0x72, 0x6E, 0x6A, 0x6B, 0xE6, 0xE2, 0xE3, 0xBA, 0xB7, 0xB8, 
   0x67, 0x66, 0x66, 0x43, 0x44, 0x44, 0x52, 0x54, 0x55, 0x4F, 0x51, 0x4F, 0x49, 0x4C, 0x49, 0x57, 
   0x5B, 0x59, 0x57, 0x5C, 0x5B, 0x4E, 0x53, 0x53, 0x5C, 0x62, 0x63, 0x64, 0x6A, 0x6D, 0x5B, 0x63, 
   0x64, 0x55, 0x5E, 0x5D, 0x58, 0x60, 0x60, 0x4D, 0x55, 0x55, 0x57, 0x5F, 0x5F, 0x53, 0x5B, 0x5A, 
   0x68, 0x6F, 0x72, 0x50, 0x58, 0x5F, 0x4D, 0x58, 0x5C, 0x4B, 0x58, 0x5B, 0x58, 0x62, 0x63, 0x64, 
   0x6A, 0x6A, 0x52, 0x53, 0x55, 0x3C, 0x3C, 0x44, 0x7C, 0x77, 0x7D, 0xC7, 0xBC, 0xC0, 0xA8, 0x99, 
   0x9A, 0xDA, 0xCA, 0xC9, 0xBC, 0xAE, 0xA9, 0xD0, 0xC0, 0xBB, 0xDF, 0xCC, 0xC9, 0xF3, 0xE1, 0xDE, 
   0xF5, 0xE4, 0xE1, 0xE7, 0xD5, 0xD2, 0xF5, 0xE4, 0xE1, 0xF3, 0xE1, 0xDE, 0xFC, 0xEF, 0xEC, 0xB3, 
   0xA3, 0xA0, 0x90, 0x7F, 0x7C, 0x9D, 0x8C, 0x89, 0xC6, 0xB5, 0xB2, 0xB1, 0xA0, 0x9D, 0xB5, 0xA6, 
   0xA4, 0xE1, 0xD3, 0xD2, 0xF5, 0xE6, 0xE3, 0xF0, 0xE0, 0xDD, 0xF6, 0xE5, 0xDF, 0xF4, 0xE4, 0xDE, 
   0xF1, 0xE1, 0xDA, 0xF0, 0xDF, 0xDC, 0xF3, 0xE2, 0xDF, 0xF7, 0xE5, 0xE2, 0xF8, 0xE4, 0xE1, 0xF6, 
   0xE2, 0xE0, 0xD9, 0xC2, 0xC1, 0xE8, 0xD4, 0xD0, 0xC7, 0xB6, 0xAF, 0x83, 0x74, 0x70, 0x97, 0x89, 
   0x88, 0xAF, 0x9F, 0x9A, 0xC4, 0xB1, 0xA9, 0xAD, 0x98, 0x8D, 0x86, 0x6D, 0x64, 0x84, 0x6C, 0x61, 
   0x96, 0x7F, 0x73, 0x95, 0x78, 0x6C, 0x9C, 0x76, 0x68, 0xA1, 0x73, 0x67, 0x9E, 0x6C, 0x5B, 0xA2, 
   0x70, 0x5A, 0xA2, 0x70, 0x5B, 0xA0, 0x6E, 0x59, 0x9F, 0x6D, 0x58, 0xA0, 0x6E, 0x5A, 0xA3, 0x71, 
   0x5D, 0x9F, 0x73, 0x5C, 0x9D, 0x72, 0x5D, 0xA1, 0x79, 0x63, 0xA2, 0x7D, 0x69, 0x9B, 0x78, 0x66, 
   0xA0, 0x80, 0x6D, 0xA1, 0x84, 0x76, 0x96, 0x7A, 0x72, 0x87, 0x6B, 0x63, 0x83, 0x68, 0x61, 0x78, 
   0x5E, 0x58, 0x6F, 0x55, 0x51, 0x80, 0x68, 0x63, 0x8E, 0x79, 0x73, 0x98, 0x83, 0x7D, 0x77, 0x5E, 
   0x59, 0x71, 0x56, 0x52, 0xAA, 0x8B, 0x87, 0xBD, 0x9B, 0x98, 0xBD, 0x99, 0x95, 0xC5, 0x9E, 0x99, 
   0xC6, 0xA3, 0x9D, 0xBB, 0x9D, 0x97, 0x90, 0x75, 0x6E, 0x6F, 0x59, 0x51, 0x73, 0x5F, 0x57, 0xAF, 
   0x9D, 0x94, 0xC3, 0xB0, 0xA8, 0xB4, 0x9F, 0x99, 0x98, 0x82, 0x7D, 0x92, 0x7A, 0x76, 0x95, 0x7B, 
   0x79, 0xBB, 0xA1, 0xA0, 0xB5, 0x9C, 0x9A, 0x91, 0x78, 0x76, 0x96, 0x7A, 0x7A, 0xB8, 0x9B, 0x9B, 
   0xC7, 0xA9, 0xA8, 0xC0, 0xA1, 0xA0, 0xB0, 0x92, 0x8F, 0xA0, 0x82, 0x7C, 0xC3, 0xA3, 0x9E, 0xDD, 
   0xBA, 0xB6, 0xD6, 0xB1, 0xAD, 0xD7, 0xAF, 0xAB, 0xDA, 0xB2, 0xAE, 0xD7, 0xAD, 0xA8, 0xDB, 0xB1, 
   0xAC, 0xE0, 0xB6, 0xB1, 0xE5, 0xBB, 0xB6, 0xDE, 0xB3, 0xAE, 0xE1, 0xB6, 0xB1, 0xD6, 0xB3, 0xAE, 
   0xCE, 0xB3, 0xAD, 0xBD, 0xA1, 0x9B, 0x9C, 0x80, 0x7A, 0x97, 0x7C, 0x76, 0xA8, 0x8D, 0x87, 0xA5, 
   0x8A, 0x84, 0x9A, 0x80, 0x79, 0xCA, 0xAF, 0xA8, 0xE3, 0xC6, 0xBF, 0xC7, 0xA7, 0xA1, 0xD4, 0xB1, 
   0xAB, 0xD5, 0xB0, 0xAA, 0xD5, 0xAF, 0xAA, 0xE1, 0xBB, 0xB6, 0xDB, 0xB5, 0xB0, 0xDB, 0xB3, 0xAE, 
   0xD8, 0xAF, 0xAA, 0xD9, 0xAE, 0xA9, 0xDB, 0xAE, 0xA9, 0xDF, 0xB5, 0xAE, 0xD5, 0xAA, 0xA4, 0xD4, 
   0xAA, 0xA3, 0xD9, 0xAF, 0xA8, 0xD5, 0xAB, 0xA4, 0xDC, 0xB2, 0xAB, 0xDC, 0xB1, 0xAA, 0xCE, 0xA2, 
   0x9C, 0xD3, 0xAA, 0xA3, 0xD1, 0xAB, 0xA3, 0xD0, 0xAD, 0xA5, 0xD4, 0xB3, 0xAA, 0xA7, 0x89, 0x80, 
   0xA7, 0x88, 0x82, 0x91, 0x76, 0x70, 0x80, 0x69, 0x63, 0x49, 0x38, 0x32, 0x6E, 0x62, 0x5D, 0x58, 
   0x51, 0x4C, 0x4A, 0x42, 0x3D, 0x6A, 0x5B, 0x59, 0xBC, 0xA9, 0xA7, 0xDA, 0xC4, 0xC1, 0xCB, 0xB4, 
   0xB0, 0xD4, 0xBE, 0xB8, 0x95, 0x83, 0x7D, 0x91, 0x87, 0x7F, 0xB8, 0xA8, 0xA1, 0xB4, 0x9B, 0x96, 
   0xBA, 0x9C, 0x98, 0xC9, 0xA9, 0xA5, 0xBA, 0x9B, 0x96, 0xB5, 0x99, 0x97, 0xC0, 0xAA, 0xAA, 0x7D, 
   0x6D, 0x6D, 0x7B, 0x70, 0x71, 0xDE, 0xD4, 0xD7, 0xDB, 0xD1, 0xD4, 0xF3, 0xE7, 0xEA, 0xF5, 0xE3, 
   0xE7, 0xD8, 0xC6, 0xC8, 0xB4, 0xA2, 0xA3, 0xA1, 0x8F, 0x8F, 0x87, 0x75, 0x73, 0x70, 0x5D, 0x5C, 
   0x68, 0x53, 0x50, 0x53, 0x3F, 0x39, 0x5A, 0x6E, 0x6F, 0x49, 0x55, 0x57, 0x59, 0x60, 0x63, 0x3E, 
   0x4B, 0x4D, 0x4E, 0x5C, 0x5E, 0x5A, 0x5B, 0x5F, 0xAF, 0xA2, 0xA8, 0xF3, 0xE2, 0xE7, 0x84, 0x74, 
   0x75, 0x64, 0x57, 0x54, 0x6B, 0x63, 0x5F, 0x55, 0x50, 0x4F, 0x52, 0x4D, 0x51, 0x49, 0x4C, 0x4D, 
   0x44, 0x48, 0x47, 0xA7, 0xA0, 0x9F, 0xEE, 0xE0, 0xDE, 0xF2, 0xDE, 0xD9, 0xF5, 0xDF, 0xD9, 0xF5, 
   0xDF, 0xDA, 0xEE, 0xD8, 0xD6, 0xF2, 0xDB, 0xD9, 0xEE, 0xD7, 0xD5, 0xF3, 0xDD, 0xDB, 0xEB, 0xD6, 
   0xD4, 0xF4, 0xDE, 0xDC, 0xF1, 0xE2, 0xE1, 0xCB, 0xC1, 0xC0, 0x93, 0x87, 0x86, 0x8D, 0x81, 0x80, 
   0xE2, 0xD5, 0xD4, 0xFF, 0xF7, 0xF5, 0xEC, 0xE2, 0xE1, 0xC1, 0xB5, 0xB2, 0xBC, 0xAF, 0xAD, 0xCE, 
   0xC1, 0xC1, 0x7A, 0x70, 0x70, 0xBC, 0xB2, 0xB3, 0x9D, 0x95, 0x96, 0xF7, 0xF1, 0xF2, 0xC4, 0xBF, 
   0xBE, 0x5C, 0x5B, 0x5B, 0x52, 0x55, 0x56, 0x5E, 0x62, 0x63, 0x75, 0x75, 0x79, 0xBA, 0xB7, 0xBC, 
   0xC0, 0xBA, 0xBD, 0x5A, 0x58, 0x5A, 0x56, 0x57, 0x58, 0x6E, 0x71, 0x72, 0xD2, 0xD2, 0xD4, 0x8E, 
   0x88, 0x8A, 0x4C, 0x45, 0x49, 0x5A, 0x53, 0x56, 0x94, 0x8D, 0x8D, 0xF1, 0xEB, 0xE5, 0xF4, 0xEC, 
   0xE6, 0xA4, 0x99, 0x96, 0x45, 0x39, 0x39, 0x88, 0x85, 0x85, 0x97, 0x95, 0x95, 0x61, 0x60, 0x60, 
   0x44, 0x46, 0x46, 0x56, 0x59, 0x59, 0x45, 0x4A, 0x49, 0x53, 0x57, 0x54, 0x59, 0x5D, 0x5A, 0x56, 
   0x5A, 0x58, 0x5D, 0x63, 0x61, 0x55, 0x5B, 0x5B, 0x57, 0x5D, 0x5E, 0x57, 0x5F, 0x61, 0x5A, 0x61, 
   0x62, 0x4F, 0x57, 0x57, 0x48, 0x50, 0x50, 0x52, 0x59, 0x5A, 0x4B, 0x52, 0x53, 0x51, 0x59, 0x58, 
   0x61, 0x68, 0x6C, 0x52, 0x59, 0x61, 0x50, 0x5B, 0x5F, 0x54, 0x60, 0x64, 0x5F, 0x69, 0x6A, 0x60, 
   0x66, 0x66, 0x46, 0x47, 0x49, 0x4F, 0x4F, 0x55, 0xC6, 0xC1, 0xC5, 0xA6, 0x99, 0x9D, 0xBF, 0xAF, 
   0xB0, 0xCE, 0xBC, 0xBD, 0xEB, 0xDA, 0xD8, 0xFE, 0xED, 0xEA, 0xF7, 0xE5, 0xE2, 0xF6, 0xE3, 0xE0, 
   0xE3, 0xD0, 0xCD, 0xE4, 0xD3, 0xD0, 0xFB, 0xEA, 0xE7, 0xF9, 0xEB, 0xE8, 0xCD, 0xBE, 0xBB, 0x77, 
   0x67, 0x64, 0x68, 0x56, 0x53, 0x9C, 0x8A, 0x87, 0xBF, 0xAB, 0xA9, 0xA5, 0x91, 0x8E, 0xE9, 0xD7, 
   0xD5, 0xFC, 0xE9, 0xE8, 0xF6, 0xE2, 0xE0, 0xF7, 0xE6, 0xE3, 0xF6, 0xE6, 0xE0, 0xF9, 0xE9, 0xE2, 
   0xF4, 0xE4, 0xDD, 0xF7, 0xE6, 0xE3, 0xF6, 0xE5, 0xE2, 0xF8, 0xE7, 0xE4, 0xF6, 0xE3, 0xE0, 0xDE, 
   0xC9, 0xC7, 0xE4, 0xCE, 0xCD, 0xFB, 0xE6, 0xE2, 0x92, 0x7C, 0x77, 0x73, 0x5F, 0x5B, 0x6D, 0x5B, 
   0x58, 0x79, 0x63, 0x5E, 0x94, 0x7C, 0x73, 0x9F, 0x83, 0x76, 0x93, 0x74, 0x65, 0x96, 0x77, 0x69, 
   0x93, 0x74, 0x64, 0x96, 0x73, 0x63, 0x9C, 0x70, 0x61, 0x9A, 0x6B, 0x5C, 0x9E, 0x6C, 0x5A, 0xA0, 
   0x70, 0x59, 0xA0, 0x6F, 0x59, 0x9F, 0x6E, 0x58, 0x9F, 0x6E, 0x58, 0xA0, 0x6F, 0x59, 0xA0, 0x70, 
   0x5A, 0x9B, 0x70, 0x59, 0x99, 0x6F, 0x58, 0x9E, 0x74, 0x5E, 0x9F, 0x76, 0x60, 0x9C, 0x76, 0x61, 
   0x9C, 0x77, 0x62, 0x99, 0x75, 0x64, 0x98, 0x76, 0x68, 0x97, 0x76, 0x69, 0x92, 0x72, 0x68, 0x8E, 
   0x70, 0x68, 0x71, 0x54, 0x4D, 0x77, 0x5A, 0x55, 0x79, 0x65, 0x5F, 0x8E, 0x7F, 0x78, 0x81, 0x70, 
   0x68, 0x63, 0x50, 0x49, 0x6C, 0x57, 0x51, 0x81, 0x6B, 0x65, 0x88, 0x6D, 0x67, 0x9D, 0x7C, 0x76, 
   0xB0, 0x90, 0x8A, 0xB4, 0x94, 0x8E, 0xBC, 0x9F, 0x98, 0xB5, 0x9D, 0x96, 0x8D, 0x78, 0x70, 0x73, 
   0x60, 0x58, 0x74, 0x61, 0x58, 0x9A, 0x85, 0x7D, 0xC7, 0xB0, 0xAB, 0xC4, 0xAA, 0xA6, 0xCC, 0xB0, 
   0xAF, 0xC9, 0xAD, 0xAB, 0xAD, 0x94, 0x92, 0xAD, 0x93, 0x91, 0xA6, 0x8A, 0x89, 0xA1, 0x83, 0x82, 
   0xB4, 0x95, 0x94, 0xC4, 0xA5, 0xA4, 0xC1, 0xA4, 0x9F, 0xB4, 0x99, 0x91, 0xC1, 0xA4, 0x9D, 0xD5, 
   0xB4, 0xAE, 0xCC, 0xA9, 0xA2, 0xD3, 0xAD, 0xA7, 0xDB, 0xB3, 0xAE, 0xDB, 0xB1, 0xAC, 0xCB, 0xA1, 
   0x9C, 0xD4, 0xAB, 0xA6, 0xD0, 0xA6, 0xA1, 0xD4, 0xAA, 0xA5, 0xE3, 0xB9, 0xB4, 0xD6, 0xAE, 0xA8, 
   0xC4, 0x9E, 0x98, 0xBF, 0x99, 0x93, 0xD0, 0xAB, 0xA5, 0xDD, 0xB8, 0xB1, 0xDA, 0xB4, 0xAE, 0xD0, 
   0xAC, 0xA6, 0xBC, 0xA1, 0x9A, 0xBE, 0xA2, 0x9B, 0xC0, 0xA1, 0x9B, 0xD0, 0xAE, 0xA8, 0xD9, 0xB5, 
   0xAF, 0xD3, 0xAE, 0xA8, 0xD2, 0xAD, 0xA8, 0xDD, 0xB7, 0xB2, 0xDA, 0xB4, 0xAF, 0xD8, 0xB0, 0xAB, 
   0xD2, 0xA9, 0xA4, 0xD4, 0xAA, 0xA5, 0xCF, 0xA3, 0x9F, 0xD1, 0xA7, 0xA1, 0xC5, 0x9B, 0x94, 0xCA, 
   0xA1, 0x9A, 0xD0, 0xA6, 0x9F, 0xCC, 0xA3, 0x9C, 0xCA, 0xA1, 0x9A, 0xD3, 0xA8, 0xA1, 0xC8, 0x9C, 
   0x95, 0xCE, 0xA4, 0x9D, 0xCA, 0xA4, 0x9C, 0xCB, 0xA5, 0x9E, 0xCC, 0xA9, 0xA1, 0xC6, 0xA4, 0x9B, 
   0xC9, 0xA9, 0xA3, 0xB8, 0x9C, 0x96, 0xB1, 0x99, 0x93, 0xAA, 0x99, 0x93, 0x82, 0x76, 0x71, 0xA9, 
   0xA2, 0x9E, 0xBE, 0xB1, 0xAE, 0x9B, 0x82, 0x83, 0xD0, 0xB2, 0xB3, 0xC9, 0xAA, 0xAA, 0xC2, 0xA3, 
   0xA1, 0xB0, 0x94, 0x90, 0x7F, 0x6A, 0x64, 0x71, 0x62, 0x5C, 0xB0, 0x9A, 0x95, 0xDD, 0xC2, 0xBF, 
   0xF2, 0xD2, 0xCF, 0xF6, 0xD3, 0xD0, 0xDC, 0xBA, 0xB7, 0x88, 0x6E, 0x6C, 0x85, 0x75, 0x74, 0x61, 
   0x56, 0x55, 0x6A, 0x62, 0x62, 0xB3, 0xAB, 0xAC, 0xA3, 0x99, 0x9C, 0x8E, 0x80, 0x83, 0x7D, 0x6A, 
   0x6D, 0x46, 0x34, 0x35, 0x34, 0x23, 0x23, 0x35, 0x25, 0x25, 0x3D, 0x2F, 0x2D, 0x3C, 0x2E, 0x2B, 
   0x41, 0x31, 0x2D, 0x41, 0x2F, 0x2A, 0x42, 0x56, 0x57, 0x53, 0x60, 0x62, 0x57, 0x5E, 0x61, 0x5F, 
   0x6B, 0x6D, 0x52, 0x60, 0x62, 0x54, 0x55, 0x59, 0xC5, 0xB5, 0xBB, 0xFE, 0xEB, 0xEE, 0x94, 0x80, 
   0x7F, 0x6B, 0x5B, 0x55, 0x77, 0x69, 0x62, 0xAD, 0xA1, 0x9F, 0x9F, 0x93, 0x94, 0x6E, 0x6A, 0x68, 
   0xB1, 0xAC, 0xA9, 0xEC, 0xDF, 0xDC, 0xF8, 0xE5, 0xE2, 0xF3, 0xDF, 0xDB, 0xF0, 0xDC, 0xD6, 0xED, 
   0xDA, 0xD4, 0xEF, 0xDA, 0xD8, 0xEC, 0xD7, 0xD5, 0xEC, 0xD7, 0xD5, 0xE5, 0xD0, 0xCE, 0xEA, 0xD5, 
   0xD3, 0xD7, 0xC2, 0xC0, 0xDC, 0xCF, 0xCE, 0xB5, 0xAB, 0xAB, 0xD1, 0xC9, 0xC9, 0xF7, 0xEF, 0xEF, 
   0xE1, 0xD6, 0xD6, 0xEF, 0xE7, 0xE7, 0x99, 0x8F, 0x8F, 0xB0, 0xA3, 0xA1, 0xC8, 0xBC, 0xBA, 0xD6, 
   0xCC, 0xCC, 0x83, 0x79, 0x79, 0xC6, 0xBD, 0xBF, 0xCB, 0xC3, 0xC4, 0xF8, 0xF3, 0xF3, 0x88, 0x86, 
   0x86, 0x4B, 0x4D, 0x4E, 0x4B, 0x50, 0x51, 0x55, 0x59, 0x5B, 0x87, 0x88, 0x8C, 0xC7, 0xC6, 0xC9, 
   0x75, 0x71, 0x73, 0x71, 0x70, 0x72, 0x60, 0x63, 0x64, 0x8B, 0x90, 0x90, 0xBE, 0xBE, 0xBF, 0x6C, 
   0x68, 0x6A, 0x74, 0x6E, 0x70, 0x6A, 0x63, 0x63, 0xD9, 0xD4, 0xD1, 0xF7, 0xF0, 0xEA, 0xE7, 0xDF, 
   0xD8, 0x86, 0x7B, 0x77, 0x69, 0x5D, 0x5C, 0xA7, 0xA4, 0xA4, 0x84, 0x82, 0x82, 0x55, 0x54, 0x54, 
   0x48, 0x4A, 0x4A, 0x4A, 0x4D, 0x4C, 0x4F, 0x54, 0x53, 0x5B, 0x61, 0x5E, 0x58, 0x5E, 0x5A, 0x4A, 
   0x4F, 0x4D, 0x56, 0x5C, 0x5B, 0x58, 0x5F, 0x5F, 0x51, 0x59, 0x59, 0x4E, 0x57, 0x5A, 0x56, 0x5E, 
   0x61, 0x57, 0x5E, 0x61, 0x44, 0x4B, 0x4E, 0x50, 0x57, 0x5A, 0x4A, 0x51, 0x54, 0x58, 0x5F, 0x61, 
   0x60, 0x66, 0x6C, 0x59, 0x61, 0x68, 0x4A, 0x55, 0x59, 0x52, 0x5E, 0x62, 0x5E, 0x68, 0x69, 0x5B, 
   0x61, 0x61, 0x48, 0x4A, 0x4B, 0x79, 0x78, 0x7C, 0xB4, 0xAD, 0xB0, 0x82, 0x74, 0x77, 0xC1, 0xAE, 
   0xB1, 0xF1, 0xDF, 0xE1, 0xFD, 0xED, 0xEE, 0xFB, 0xEA, 0xE8, 0xF9, 0xE7, 0xE4, 0xF2, 0xE0, 0xDD, 
   0xF0, 0xDF, 0xDC, 0xF5, 0xE2, 0xDF, 0xF9, 0xE6, 0xE3, 0xDF, 0xCE, 0xCB, 0xA5, 0x96, 0x93, 0x65, 
   0x53, 0x50, 0x9B, 0x8D, 0x8A, 0xDC, 0xCA, 0xC7, 0xB6, 0xA1, 0x9F, 0xD6, 0xC2, 0xC0, 0xF8, 0xE5, 
   0xE3, 0xF1, 0xDC, 0xDB, 0xF1, 0xDD, 0xDB, 0xF7, 0xE4, 0xE1, 0xF7, 0xE5, 0xE0, 0xF1, 0xE2, 0xDB, 
   0xF6, 0xE8, 0xE1, 0xEF, 0xDF, 0xDB, 0xF2, 0xE1, 0xDE, 0xF4, 0xE4, 0xE1, 0xC8, 0xB6, 0xB3, 0xE2, 
   0xCD, 0xCB, 0xEF, 0xDB, 0xD9, 0xB5, 0x9C, 0x98, 0xA1, 0x88, 0x81, 0x95, 0x7C, 0x78, 0xBA, 0xA1, 
   0x9D, 0x8B, 0x71, 0x69, 0x8E, 0x70, 0x64, 0x9A, 0x79, 0x69, 0x99, 0x74, 0x60, 0x9A, 0x75, 0x61, 
   0x9E, 0x75, 0x62, 0x9D, 0x72, 0x5F, 0x9A, 0x6C, 0x5A, 0x99, 0x6A, 0x57, 0x9B, 0x6A, 0x57, 0x9D, 
   0x6B, 0x57, 0x9E, 0x6C, 0x58, 0x9E, 0x6C, 0x58, 0x9F, 0x6D, 0x59, 0x9F, 0x6D, 0x59, 0x9F, 0x6E, 
   0x5A, 0x97, 0x6C, 0x57, 0x96, 0x6B, 0x56, 0x9A, 0x6F, 0x5A, 0x9B, 0x70, 0x5B, 0x9E, 0x73, 0x5D, 
   0xA0, 0x75, 0x5F, 0x99, 0x70, 0x5C, 0x94, 0x6D, 0x5B, 0x93, 0x6C, 0x5C, 0x91, 0x6D, 0x5F, 0x9D, 
   0x79, 0x6D, 0x95, 0x73, 0x6A, 0x8E, 0x6E, 0x65, 0x7E, 0x68, 0x61, 0x68, 0x57, 0x50, 0x85, 0x75, 
   0x6E, 0x74, 0x64, 0x5D, 0x62, 0x52, 0x4B, 0x66, 0x56, 0x4F, 0x69, 0x58, 0x51, 0x73, 0x5D, 0x55, 
   0x93, 0x79, 0x72, 0xA7, 0x8A, 0x83, 0xA8, 0x8B, 0x84, 0xA1, 0x86, 0x7F, 0x95, 0x7D, 0x75, 0x97, 
   0x82, 0x78, 0x7D, 0x69, 0x5E, 0x6F, 0x58, 0x50, 0x96, 0x7E, 0x77, 0xB3, 0x99, 0x95, 0xD2, 0xB7, 
   0xB3, 0xB2, 0x98, 0x95, 0xAB, 0x94, 0x92, 0xAE, 0x95, 0x93, 0xBE, 0xA3, 0xA1, 0xC6, 0xA9, 0xA9, 
   0xB8, 0x9A, 0x99, 0x9D, 0x7E, 0x7D, 0x9D, 0x81, 0x7B, 0xC6, 0xAD, 0xA3, 0xC2, 0xA7, 0x9D, 0xCD, 
   0xAE, 0xA5, 0xC7, 0xA4, 0x9C, 0xC2, 0x9D, 0x95, 0xCF, 0xAA, 0xA2, 0xD6, 0xAE, 0xA9, 0xD3, 0xAB, 
   0xA6, 0xC7, 0x9F, 0x9A, 0xC6, 0x9E, 0x99, 0xD2, 0xAA, 0xA5, 0xD7, 0xAF, 0xAA, 0xD6, 0xAD, 0xA7, 
   0xD3, 0xA9, 0xA2, 0xDA, 0xB0, 0xA9, 0xD5, 0xAB, 0xA4, 0xDF, 0xB5, 0xAE, 0xD7, 0xAD, 0xA6, 0xD7, 
   0xAD, 0xA6, 0xCF, 0xAE, 0xA8, 0xAD, 0x8D, 0x87, 0xC2, 0xA2, 0x9C, 0xD0, 0xAF, 0xA9, 0xB9, 0x96, 
   0x90, 0xC6, 0xA1, 0x9B, 0xD6, 0xB2, 0xAC, 0xD6, 0xB2, 0xAC, 0xDE, 0xBA, 0xB4, 0xD6, 0xB0, 0xAB, 
   0xCD, 0xA6, 0xA1, 0xD4, 0xAC, 0xA7, 0xC1, 0x99, 0x94, 0xBF, 0x98, 0x91, 0xC9, 0xA2, 0x9A, 0xCB, 
   0xA4, 0x9C, 0xC9, 0xA2, 0x9A, 0xC8, 0xA1, 0x99, 0xC9, 0xA2, 0x9A, 0xC6, 0x9E, 0x96, 0xD0, 0xA6, 
   0x9F, 0xD8, 0xB0, 0xA8, 0xD5, 0xAF, 0xA7, 0xD1, 0xAC, 0xA4, 0xCB, 0xA6, 0x9E, 0xC5, 0xA1, 0x99, 
   0xB9, 0x97, 0x91, 0x93, 0x74, 0x6F, 0x87, 0x6D, 0x67, 0xC6, 0xB2, 0xAD, 0xBB, 0xAD, 0xA7, 0xA1, 
   0x98, 0x94, 0x98, 0x88, 0x87, 0xC6, 0xAB, 0xAE, 0xD7, 0xB8, 0xB9, 0xBA, 0x9A, 0x9A, 0x90, 0x71, 
   0x70, 0x78, 0x5C, 0x5A, 0x4A, 0x35, 0x2F, 0xA7, 0x99, 0x93, 0xE1, 0xCB, 0xC7, 0xEB, 0xD0, 0xCC, 
   0xE9, 0xCA, 0xC6, 0xF6, 0xD8, 0xD5, 0xE9, 0xCC, 0xC8, 0xAD, 0x99, 0x95, 0xC1, 0xB7, 0xB3, 0x77, 
   0x6F, 0x6C, 0x4A, 0x46, 0x43, 0x44, 0x3E, 0x3D, 0x39, 0x2E, 0x2F, 0x37, 0x29, 0x2B, 0x30, 0x20, 
   0x22, 0x45, 0x36, 0x35, 0x48, 0x3A, 0x38, 0x38, 0x2B, 0x28, 0x3C, 0x30, 0x2C, 0x3F, 0x35, 0x2E, 
   0x3F, 0x34, 0x2F, 0x49, 0x3B, 0x38, 0x85, 0x99, 0x9A, 0x5D, 0x6A, 0x6C, 0x5C, 0x63, 0x66, 0x6C, 
   0x79, 0x7C, 0x4D, 0x5A, 0x5C, 0x55, 0x54, 0x59, 0xDB, 0xCA, 0xCE, 0xEA, 0xCE, 0xCD, 0xA0, 0x88, 
   0x83, 0x88, 0x75, 0x6B, 0x86, 0x75, 0x6B, 0xB9, 0xA7, 0xA2, 0xF0, 0xDF, 0xDB, 0xEE, 0xE3, 0xDF, 
   0xFC, 0xED, 0xEA, 0xF8, 0xE6, 0xE4, 0xFB, 0xE5, 0xE2, 0xF4, 0xDF, 0xDA, 0xEE, 0xDA, 0xD5, 0xED, 
   0xDB, 0xD7, 0xF2, 0xDE, 0xDD, 0xE9, 0xD4, 0xD3, 0xD7, 0xC2, 0xC1, 0xBD, 0xA8, 0xA7, 0xD4, 0xC0, 
   0xBF, 0xDA, 0xC6, 0xC5, 0xA9, 0x9D, 0x9C, 0xE8, 0xE2, 0xE2, 0xFF, 0xFA, 0xFA, 0xF5, 0xED, 0xED, 
   0xE6, 0xDE, 0xDE, 0xBA, 0xB1, 0xB1, 0xA3, 0x9A, 0x9A, 0xC2, 0xB7, 0xB4, 0xE8, 0xDE, 0xDC, 0xB5, 
   0xA9, 0xA9, 0xC5, 0xBC, 0xBC, 0xBA, 0xB1, 0xB3, 0xDC, 0xD3, 0xD4, 0xA6, 0xA0, 0xA1, 0x62, 0x60, 
   0x60, 0x57, 0x59, 0x5A, 0x47, 0x4D, 0x4F, 0x58, 0x5E, 0x61, 0xAF, 0xB2, 0xB7, 0x6F, 0x6E, 0x74, 
   0x5B, 0x57, 0x5A, 0x90, 0x8F, 0x91, 0x86, 0x89, 0x8A, 0xB6, 0xBB, 0xBC, 0x7E, 0x7F, 0x80, 0x88, 
   0x84, 0x86, 0x92, 0x8C, 0x8E, 0xA4, 0x9F, 0xA0, 0xF7, 0xF3, 0xF0, 0xF5, 0xEF, 0xE7, 0xC5, 0xBE, 
   0xB6, 0x86, 0x7C, 0x77, 0x93, 0x88, 0x86, 0x77, 0x72, 0x73, 0x68, 0x65, 0x66, 0x38, 0x37, 0x37, 
   0x4B, 0x4B, 0x4B, 0x59, 0x5A, 0x5A, 0x55, 0x58, 0x58, 0x5A, 0x5E, 0x5C, 0x4F, 0x55, 0x51, 0x4B, 
   0x51, 0x4E, 0x45, 0x4C, 0x4B, 0x57, 0x5F, 0x5E, 0x56, 0x5F, 0x5E, 0x49, 0x52, 0x55, 0x51, 0x59, 
   0x5C, 0x4D, 0x54, 0x56, 0x4A, 0x51, 0x54, 0x52, 0x59, 0x5C, 0x53, 0x5A, 0x5D, 0x5C, 0x63, 0x65, 
   0x5C, 0x62, 0x67, 0x4E, 0x55, 0x5C, 0x50, 0x5B, 0x5F, 0x64, 0x70, 0x73, 0x64, 0x6E, 0x6F, 0x58, 
   0x5D, 0x5E, 0x47, 0x49, 0x4A, 0x93, 0x92, 0x94, 0x91, 0x8A, 0x8C, 0x75, 0x67, 0x69, 0xDC, 0xCA, 
   0xCD, 0xFB, 0xE8, 0xEB, 0xF9, 0xE6, 0xE7, 0xEB, 0xD7, 0xD7, 0xDF, 0xCC, 0xC9, 0xF3, 0xE1, 0xDE, 
   0xFB, 0xEA, 0xE7, 0xF9, 0xE7, 0xE4, 0xF8, 0xE4, 0xE1, 0xEF, 0xDC, 0xD9, 0x87, 0x78, 0x75, 0x88, 
   0x78, 0x75, 0xF6, 0xE5, 0xE2, 0xE1, 0xCE, 0xCB, 0xDA, 0xC4, 0xC2, 0xFC, 0xE5, 0xE3, 0xF8, 0xDF, 
   0xDE, 0xEC, 0xD5, 0xD5, 0xED, 0xD6, 0xD5, 0xF3, 0xDE, 0xDC, 0xFB, 0xEA, 0xE4, 0xF7, 0xE8, 0xE2, 
   0xF2, 0xE5, 0xDD, 0xF4, 0xE3, 0xE0, 0xF8, 0xE7, 0xE4, 0xDA, 0xC8, 0xC5, 0x96, 0x83, 0x80, 0xC7, 
   0xB2, 0xB0, 0xA8, 0x93, 0x92, 0x97, 0x7B, 0x77, 0xA7, 0x89, 0x83, 0xB0, 0x93, 0x8F, 0xBD, 0x9F, 
   0x9C, 0x89, 0x69, 0x61, 0x92, 0x6C, 0x60, 0x9C, 0x74, 0x62, 0xA0, 0x72, 0x5D, 0xA2, 0x74, 0x5F, 
   0x9D, 0x6D, 0x59, 0x9A, 0x69, 0x56, 0x9A, 0x6B, 0x57, 0x99, 0x6A, 0x55, 0x96, 0x68, 0x55, 0x96, 
   0x68, 0x55, 0x98, 0x69, 0x57, 0x99, 0x6B, 0x58, 0x99, 0x6B, 0x58, 0x9A, 0x6B, 0x59, 0x9A, 0x6C, 
   0x5A, 0x97, 0x6B, 0x5A, 0x97, 0x6C, 0x59, 0x9B, 0x6E, 0x5B, 0x9B, 0x6D, 0x5B, 0xA0, 0x70, 0x5E, 
   0xA3, 0x72, 0x5E, 0x9E, 0x6E, 0x58, 0x9B, 0x6D, 0x56, 0x99, 0x6D, 0x57, 0x8D, 0x63, 0x51, 0x8F, 
   0x65, 0x56, 0x90, 0x6A, 0x5E, 0x9C, 0x76, 0x6B, 0x93, 0x75, 0x6D, 0x79, 0x5E, 0x57, 0x7D, 0x65, 
   0x5E, 0x6D, 0x59, 0x51, 0x72, 0x60, 0x58, 0x57, 0x46, 0x3D, 0x5E, 0x52, 0x49, 0x53, 0x4B, 0x41, 
   0x80, 0x70, 0x67, 0xBA, 0x9F, 0x98, 0xA7, 0x8A, 0x83, 0x9D, 0x7E, 0x78, 0x89, 0x6B, 0x65, 0x89, 
   0x70, 0x67, 0x91, 0x79, 0x6F, 0x93, 0x7A, 0x71, 0x98, 0x7D, 0x76, 0x92, 0x79, 0x73, 0xA0, 0x87, 
   0x83, 0x8A, 0x72, 0x6E, 0x8E, 0x78, 0x76, 0x8B, 0x73, 0x71, 0xA4, 0x8C, 0x8A, 0x9E, 0x85, 0x83, 
   0xA5, 0x89, 0x88, 0xA3, 0x86, 0x86, 0xA3, 0x89, 0x83, 0xB6, 0x9D, 0x92, 0xAC, 0x90, 0x86, 0x9D, 
   0x7F, 0x76, 0xB5, 0x95, 0x8C, 0xB1, 0x8D, 0x85, 0xC8, 0xA3, 0x9B, 0xD1, 0xAC, 0xA7, 0xD7, 0xB2, 
   0xAC, 0xB6, 0x91, 0x8B, 0xD1, 0xAC, 0xA6, 0xE2, 0xBD, 0xB7, 0xD5, 0xB1, 0xAB, 0xD2, 0xAD, 0xA6, 
   0xC9, 0xA0, 0x99, 0xC9, 0xA1, 0x99, 0xD0, 0xA8, 0xA0, 0xD7, 0xAF, 0xA8, 0xDF, 0xB7, 0xAF, 0xD5, 
   0xAD, 0xA5, 0xDD, 0xBA, 0xB4, 0xE3, 0xBF, 0xB9, 0xD3, 0xB0, 0xAA, 0xE2, 0xC0, 0xBA, 0xC9, 0xA9, 
   0xA3, 0xD8, 0xB7, 0xB1, 0xCC, 0xAC, 0xA6, 0xCB, 0xAB, 0xA5, 0xD6, 0xB5, 0xAF, 0xDD, 0xBA, 0xB4, 
   0xDF, 0xBA, 0xB4, 0xC5, 0x9F, 0x9A, 0xD4, 0xAD, 0xA9, 0xD5, 0xB1, 0xA9, 0xD9, 0xB4, 0xAC, 0xD5, 
   0xB1, 0xA9, 0xBB, 0x97, 0x8F, 0xB5, 0x90, 0x88, 0xDF, 0xBA, 0xB2, 0xE6, 0xC1, 0xB9, 0xE0, 0xBB, 
   0xB4, 0xCC, 0xA7, 0x9F, 0xC3, 0x9E, 0x96, 0xD4, 0xAE, 0xA6, 0xD9, 0xB1, 0xA9, 0xCE, 0xA8, 0xA0, 
   0xC7, 0xA4, 0x9E, 0xA7, 0x86, 0x81, 0x8B, 0x6F, 0x69, 0x80, 0x6A, 0x65, 0x6A, 0x58, 0x53, 0x6E, 
   0x61, 0x5D, 0x4B, 0x3D, 0x3B, 0x80, 0x6D, 0x6F, 0x99, 0x82, 0x83, 0x7D, 0x66, 0x65, 0x62, 0x4D, 
   0x4B, 0x82, 0x71, 0x6D, 0xBD, 0xB2, 0xAB, 0xC7, 0xC1, 0xBC, 0xBD, 0xB2, 0xAE, 0xBA, 0xA8, 0xA5, 
   0xA8, 0x92, 0x8F, 0xAF, 0x9A, 0x97, 0x65, 0x52, 0x4F, 0x55, 0x49, 0x43, 0x65, 0x5F, 0x57, 0x42, 
   0x3E, 0x37, 0x2A, 0x27, 0x22, 0x38, 0x34, 0x30, 0x45, 0x3B, 0x39, 0x48, 0x3B, 0x39, 0x3E, 0x32, 
   0x2F, 0x40, 0x34, 0x31, 0x3C, 0x31, 0x2C, 0x37, 0x2C, 0x26, 0x38, 0x2D, 0x26, 0x3F, 0x35, 0x2C, 
   0x3A, 0x30, 0x29, 0x3F, 0x34, 0x30, 0xB3, 0xC9, 0xC9, 0x4C, 0x5A, 0x5B, 0x59, 0x60, 0x63, 0x48, 
   0x55, 0x58, 0x48, 0x55, 0x57, 0x5D, 0x5E, 0x62, 0xE8, 0xD5, 0xD9, 0xDB, 0xBD, 0xBA, 0xA9, 0x8D, 
   0x86, 0xC2, 0xAB, 0x9F, 0xC1, 0xAB, 0x9F, 0xD9, 0xC3, 0xBB, 0xF5, 0xE0, 0xDB, 0xF6, 0xE3, 0xE0, 
   0xF5, 0xE0, 0xDE, 0xFD, 0xE6, 0xE2, 0xFC, 0xE4, 0xE0, 0xF9, 0xE2, 0xDD, 0xF7, 0xE7, 0xE1, 0xF7, 
   0xE7, 0xE2, 0xE0, 0xCB, 0xCA, 0xB8, 0xA2, 0xA1, 0xDD, 0xC9, 0xC8, 0xF0, 0xDE, 0xDD, 0xD0, 0xBD, 
   0xBD, 0xA6, 0x90, 0x8E, 0xBB, 0xAF, 0xAF, 0xDD, 0xD8, 0xD8, 0xC4, 0xBC, 0xBC, 0xF4, 0xEB, 0xEC, 
   0xEF, 0xE7, 0xE8, 0x93, 0x8B, 0x8B, 0xC9, 0xC1, 0xC0, 0xD5, 0xC9, 0xC7, 0xE3, 0xD8, 0xD6, 0xC1, 
   0xB5, 0xB4, 0x94, 0x8A, 0x8A, 0x86, 0x7C, 0x7E, 0x96, 0x8E, 0x8F, 0x78, 0x73, 0x73, 0x5D, 0x5C, 
   0x5C, 0x4E, 0x53, 0x53, 0x4E, 0x55, 0x57, 0xC5, 0xCC, 0xCF, 0x80, 0x83, 0x88, 0x84, 0x85, 0x8B, 
   0x7E, 0x7B, 0x7D, 0x76, 0x75, 0x77, 0xB8, 0xBC, 0xBD, 0x86, 0x8A, 0x8B, 0x57, 0x58, 0x5A, 0x7C, 
   0x79, 0x7B, 0x7A, 0x74, 0x76, 0xE4, 0xE0, 0xE0, 0xF1, 0xEC, 0xE8, 0xE5, 0xDE, 0xD5, 0x76, 0x6E, 
   0x66, 0xB3, 0xA8, 0xA4, 0x7D, 0x6F, 0x6E, 0x4E, 0x47, 0x48, 0x3D, 0x38, 0x3A, 0x43, 0x40, 0x40, 
   0x53, 0x51, 0x51, 0x57, 0x57, 0x57, 0x68, 0x68, 0x68, 0x50, 0x52, 0x50, 0x45, 0x4C, 0x48, 0x43, 
   0x4B, 0x47, 0x3E, 0x46, 0x45, 0x46, 0x4F, 0x4E, 0x49, 0x53, 0x53, 0x46, 0x4F, 0x52, 0x4A, 0x51, 
   0x55, 0x4C, 0x52, 0x56, 0x4E, 0x55, 0x59, 0x52, 0x59, 0x5D, 0x55, 0x5B, 0x60, 0x57, 0x5D, 0x62, 
   0x60, 0x67, 0x6C, 0x53, 0x5B, 0x62, 0x5D, 0x68, 0x6C, 0x5F, 0x6C, 0x6E, 0x5E, 0x68, 0x69, 0x51, 
   0x57, 0x57, 0x4B, 0x4D, 0x4E, 0x9F, 0x9F, 0x9F, 0x74, 0x6D, 0x6F, 0x78, 0x69, 0x6C, 0xEA, 0xD7, 
   0xDB, 0xF8, 0xE4, 0xE8, 0xF8, 0xE5, 0xE9, 0xD0, 0xBC, 0xBB, 0xD2, 0xBF, 0xBB, 0xFF, 0xF2, 0xEF, 
   0xF7, 0xE7, 0xE4, 0xFB, 0xEB, 0xE8, 0xFB, 0xE8, 0xE5, 0xB5, 0xA3, 0xA0, 0x84, 0x75, 0x72, 0xD8, 
   0xCB, 0xC9, 0xEF, 0xDE, 0xDB, 0xED, 0xD9, 0xD7, 0xFE, 0xE8, 0xE6, 0xF9, 0xE0, 0xDE, 0xF2, 0xD9, 
   0xD8, 0xF1, 0xD8, 0xD8, 0xE7, 0xD0, 0xCE, 0xF3, 0xDF, 0xDD, 0xF1, 0xE0, 0xDB, 0xF7, 0xEA, 0xE3, 
   0xF4, 0xE7, 0xDF, 0xF7, 0xE7, 0xE3, 0xFB, 0xEB, 0xE7, 0xD1, 0xBF, 0xBC, 0xAA, 0x97, 0x94, 0xAE, 
   0x9A, 0x98, 0xA0, 0x8C, 0x8B, 0xA6, 0x8A, 0x88, 0x99, 0x76, 0x73, 0xB2, 0x92, 0x8F, 0x9A, 0x79, 
   0x76, 0x98, 0x73, 0x6C, 0x99, 0x70, 0x62, 0x9D, 0x70, 0x5C, 0xA1, 0x6E, 0x57, 0xA3, 0x70, 0x58, 
   0x9D, 0x69, 0x53, 0x99, 0x65, 0x50, 0x98, 0x67, 0x51, 0x94, 0x67, 0x52, 0x92, 0x65, 0x52, 0x91, 
   0x64, 0x54, 0x94, 0x67, 0x56, 0x96, 0x69, 0x58, 0x96, 0x6A, 0x59, 0x97, 0x6B, 0x59, 0x97, 0x6B, 
   0x5A, 0x96, 0x69, 0x5B, 0x97, 0x6B, 0x5A, 0x9B, 0x6B, 0x5B, 0x9C, 0x6A, 0x5A, 0x9E, 0x6C, 0x5A, 
   0xA0, 0x6C, 0x5C, 0x9F, 0x6C, 0x54, 0x9E, 0x6C, 0x4F, 0x9B, 0x6B, 0x51, 0x93, 0x65, 0x4E, 0x8E, 
   0x62, 0x50, 0x89, 0x60, 0x51, 0x88, 0x62, 0x55, 0x89, 0x61, 0x5C, 0x8B, 0x64, 0x60, 0x90, 0x6E, 
   0x6A, 0x87, 0x6B, 0x65, 0x7E, 0x66, 0x5F, 0x74, 0x5F, 0x58, 0x5E, 0x53, 0x4A, 0x4C, 0x50, 0x43, 
   0x67, 0x60, 0x55, 0x9F, 0x88, 0x80, 0x9A, 0x79, 0x74, 0xA1, 0x7C, 0x77, 0x97, 0x73, 0x6D, 0x88, 
   0x6A, 0x61, 0x7B, 0x61, 0x57, 0x7B, 0x61, 0x58, 0x82, 0x68, 0x61, 0x86, 0x6D, 0x67, 0x7C, 0x65, 
   0x60, 0x6A, 0x55, 0x50, 0x70, 0x5C, 0x5A, 0x9A, 0x85, 0x83, 0xA0, 0x8A, 0x88, 0x99, 0x82, 0x80, 
   0x77, 0x5F, 0x5D, 0xB9, 0x9E, 0x9D, 0xB0, 0x96, 0x91, 0xAB, 0x93, 0x88, 0xAE, 0x92, 0x89, 0xA0, 
   0x82, 0x79, 0xB8, 0x97, 0x8E, 0xA5, 0x81, 0x79, 0xBB, 0x96, 0x8F, 0xCB, 0xA9, 0xA3, 0xBC, 0x99, 
   0x93, 0xB8, 0x95, 0x8F, 0xE3, 0xC0, 0xBA, 0xEC, 0xC9, 0xC3, 0xC6, 0xA3, 0x9D, 0xC8, 0xA5, 0x9D, 
   0xC0, 0x9C, 0x93, 0xC3, 0xA0, 0x97, 0xCD, 0xAA, 0xA1, 0xD7, 0xB4, 0xAB, 0xDB, 0xB8, 0xAF, 0xDD, 
   0xBB, 0xB2, 0xE5, 0xBE, 0xB8, 0xD8, 0xB1, 0xAC, 0xCF, 0xAA, 0xA5, 0xC5, 0xA2, 0x9C, 0xAE, 0x8F, 
   0x89, 0xE3, 0xC6, 0xBE, 0xC6, 0xA9, 0xA2, 0xDE, 0xC0, 0xB9, 0xD7, 0xB9, 0xB3, 0xD6, 0xB5, 0xAF, 
   0xAB, 0x89, 0x83, 0xB5, 0x91, 0x8C, 0xEC, 0xC8, 0xC1, 0xD3, 0xB1, 0xA8, 0xC8, 0xA5, 0x9C, 0xDA, 
   0xB8, 0xAF, 0xD1, 0xAF, 0xA6, 0xD6, 0xB4, 0xAB, 0xDC, 0xBB, 0xB1, 0xD4, 0xB4, 0xAA, 0xD6, 0xB6, 
   0xAD, 0xD0, 0xAF, 0xA6, 0xD8, 0xB3, 0xAB, 0xE1, 0xBA, 0xB1, 0xE5, 0xBB, 0xB4, 0xD7, 0xAD, 0xA5, 
   0xD6, 0xAF, 0xA9, 0xCE, 0xAA, 0xA5, 0xDA, 0xBA, 0xB6, 0xBB, 0xA2, 0x9D, 0x78, 0x63, 0x5F, 0x6C, 
   0x5B, 0x58, 0x69, 0x5E, 0x5D, 0x73, 0x6A, 0x6B, 0x6B, 0x5F, 0x5F, 0x6F, 0x62, 0x60, 0x90, 0x86, 
   0x82, 0xA8, 0xA1, 0x9D, 0x65, 0x64, 0x5D, 0x51, 0x58, 0x51, 0x8B, 0x8D, 0x86, 0x60, 0x5A, 0x55, 
   0x58, 0x50, 0x4C, 0x4B, 0x44, 0x3F, 0x47, 0x41, 0x3D, 0x3F, 0x3D, 0x35, 0x2D, 0x2B, 0x1F, 0x2E, 
   0x2D, 0x23, 0x2A, 0x2B, 0x22, 0x3C, 0x38, 0x33, 0x44, 0x3B, 0x38, 0x46, 0x38, 0x35, 0x3C, 0x33, 
   0x2C, 0x41, 0x39, 0x33, 0x3D, 0x33, 0x2C, 0x39, 0x2F, 0x27, 0x33, 0x2A, 0x20, 0x36, 0x2C, 0x20, 
   0x36, 0x2D, 0x25, 0x38, 0x2E, 0x2B, 0x2C, 0x44, 0x4A, 0x49, 0x5A, 0x61, 0x58, 0x62, 0x69, 0x4D, 
   0x54, 0x5B, 0x5B, 0x5D, 0x64, 0x6C, 0x64, 0x6D, 0xE7, 0xD5, 0xDB, 0xD6, 0xBD, 0xB8, 0xC4, 0xAB, 
   0xA4, 0xB5, 0x9D, 0x94, 0xC7, 0xB1, 0xA8, 0xF7, 0xE5, 0xDC, 0xF6, 0xE3, 0xDC, 0xF7, 0xE3, 0xDF, 
   0xFA, 0xE6, 0xE3, 0xF6, 0xE2, 0xDE, 0xF7, 0xE5, 0xE3, 0xF8, 0xE5, 0xE4, 0xEF, 0xE1, 0xE0, 0xDF, 
   0xD1, 0xD0, 0xCE, 0xBD, 0xBB, 0xE4, 0xD2, 0xD1, 0xFF, 0xF4, 0xF2, 0xFC, 0xF3, 0xF1, 0xB8, 0xAD, 
   0xAB, 0xBB, 0xAE, 0xAC, 0xFB, 0xF1, 0xF1, 0x83, 0x7E, 0x7D, 0x86, 0x86, 0x85, 0xCF, 0xD4, 0xD1, 
   0x82, 0x85, 0x83, 0x6A, 0x66, 0x65, 0xBE, 0xB6, 0xB5, 0xFB, 0xF0, 0xEE, 0xE5, 0xD7, 0xD5, 0xDA, 
   0xCF, 0xCE, 0xA9, 0x9F, 0x9F, 0xC8, 0xC1, 0xC2, 0xA0, 0x9A, 0x9B, 0x7F, 0x7A, 0x7B, 0x69, 0x68, 
   0x69, 0x52, 0x53, 0x55, 0xBF, 0xC2, 0xC4, 0xB1, 0xB6, 0xB7, 0x64, 0x69, 0x6C, 0x80, 0x83, 0x86, 
   0x5A, 0x58, 0x5A, 0x9C, 0x9D, 0x9E, 0xB8, 0xBC, 0xBD, 0x70, 0x73, 0x75, 0x5D, 0x5B, 0x5E, 0x81, 
   0x7A, 0x7F, 0xA6, 0x9E, 0xA1, 0xFE, 0xF7, 0xF6, 0xE9, 0xE2, 0xDE, 0x8C, 0x87, 0x80, 0x4D, 0x4A, 
   0x41, 0x64, 0x62, 0x59, 0x57, 0x53, 0x4C, 0x4B, 0x49, 0x48, 0x43, 0x41, 0x41, 0x4D, 0x4D, 0x4C, 
   0x4B, 0x4D, 0x4C, 0x55, 0x58, 0x57, 0x58, 0x5B, 0x5A, 0x49, 0x4D, 0x4A, 0x47, 0x4C, 0x4A, 0x40, 
   0x45, 0x44, 0x4E, 0x54, 0x54, 0x46, 0x4D, 0x4E, 0x4E, 0x56, 0x58, 0x52, 0x59, 0x5D, 0x46, 0x4B, 
   0x52, 0x49, 0x4E, 0x55, 0x4F, 0x54, 0x5C, 0x4C, 0x51, 0x59, 0x4E, 0x53, 0x5B, 0x58, 0x5E, 0x65, 
   0x60, 0x65, 0x6C, 0x52, 0x59, 0x60, 0x53, 0x5E, 0x63, 0x52, 0x5F, 0x63, 0x56, 0x61, 0x62, 0x59, 
   0x5F, 0x60, 0x51, 0x55, 0x55, 0x84, 0x81, 0x80, 0xA2, 0x99, 0x97, 0xCE, 0xC0, 0xC1, 0xF9, 0xE7, 
   0xE8, 0xF0, 0xDE, 0xDF, 0xE4, 0xD5, 0xD6, 0xE4, 0xD4, 0xD4, 0xFB, 0xED, 0xED, 0xFD, 0xEE, 0xED, 
   0xF0, 0xDD, 0xDB, 0xF8, 0xE6, 0xE4, 0xD9, 0xC4, 0xC2, 0xA9, 0x93, 0x91, 0xEC, 0xDD, 0xD6, 0xEA, 
   0xD9, 0xD4, 0xD6, 0xC4, 0xBE, 0xF5, 0xE1, 0xDC, 0xF8, 0xE1, 0xDD, 0xF3, 0xDD, 0xD9, 0xF7, 0xDF, 
   0xDD, 0xF8, 0xDF, 0xDE, 0xEA, 0xD3, 0xD2, 0xF3, 0xE2, 0xE0, 0xD5, 0xC4, 0xC0, 0xF6, 0xEC, 0xE6, 
   0xFD, 0xF0, 0xEB, 0xE8, 0xD8, 0xD7, 0xB9, 0xA8, 0xA7, 0x89, 0x74, 0x72, 0x8B, 0x74, 0x70, 0xB6, 
   0x9B, 0x95, 0xAA, 0x8F, 0x88, 0x96, 0x73, 0x6A, 0x9D, 0x75, 0x69, 0x9A, 0x72, 0x68, 0x9A, 0x73, 
   0x68, 0x9A, 0x72, 0x65, 0x99, 0x6E, 0x5F, 0x9C, 0x6F, 0x5D, 0x9F, 0x6C, 0x57, 0x9D, 0x6A, 0x55, 
   0x9B, 0x67, 0x53, 0x97, 0x65, 0x51, 0x95, 0x63, 0x4F, 0x95, 0x65, 0x51, 0x91, 0x63, 0x51, 0x8E, 
   0x63, 0x52, 0x91, 0x65, 0x54, 0x93, 0x67, 0x57, 0x94, 0x69, 0x58, 0x94, 0x68, 0x57, 0x96, 0x6A, 
   0x59, 0x98, 0x69, 0x59, 0x98, 0x6A, 0x59, 0x99, 0x69, 0x58, 0x98, 0x67, 0x56, 0x98, 0x67, 0x55, 
   0x99, 0x67, 0x56, 0x9B, 0x68, 0x53, 0x9B, 0x68, 0x4E, 0x99, 0x66, 0x4E, 0x95, 0x64, 0x4E, 0x8D, 
   0x5E, 0x49, 0x8C, 0x5D, 0x4A, 0x88, 0x5A, 0x48, 0x87, 0x59, 0x48, 0x86, 0x5A, 0x49, 0x8E, 0x65, 
   0x56, 0x94, 0x71, 0x64, 0x7C, 0x61, 0x55, 0x68, 0x53, 0x48, 0x5D, 0x4F, 0x46, 0x62, 0x5F, 0x55, 
   0x5A, 0x51, 0x47, 0x66, 0x54, 0x4A, 0x70, 0x5A, 0x51, 0x8D, 0x74, 0x6A, 0xA1, 0x88, 0x7E, 0x90, 
   0x73, 0x67, 0x8A, 0x6B, 0x5F, 0x83, 0x64, 0x5A, 0x7F, 0x61, 0x5A, 0x85, 0x6A, 0x64, 0x71, 0x5C, 
   0x57, 0x85, 0x71, 0x6B, 0x94, 0x7D, 0x7A, 0x8C, 0x74, 0x71, 0x79, 0x5F, 0x5C, 0x9D, 0x82, 0x7F, 
   0x91, 0x77, 0x73, 0x66, 0x4A, 0x48, 0x81, 0x66, 0x60, 0xA9, 0x90, 0x85, 0xAF, 0x94, 0x89, 0x9D, 
   0x81, 0x77, 0x7B, 0x5D, 0x53, 0xAB, 0x8D, 0x82, 0xB6, 0x96, 0x8D, 0x9E, 0x7C, 0x77, 0x93, 0x72, 
   0x6D, 0xCA, 0xAC, 0xA6, 0xF4, 0xD7, 0xD1, 0xBB, 0xA1, 0x9A, 0x73, 0x5A, 0x53, 0x7C, 0x64, 0x5D, 
   0xAA, 0x91, 0x8A, 0xC5, 0xAA, 0xA3, 0xCC, 0xAE, 0xA7, 0xD0, 0xB1, 0xAB, 0xD3, 0xB1, 0xAB, 0xDC, 
   0xB9, 0xB3, 0xCD, 0xAA, 0xA4, 0xC8, 0xA6, 0xA0, 0xC9, 0xA9, 0xA2, 0xB7, 0x98, 0x91, 0xAE, 0x90, 
   0x8A, 0xA2, 0x87, 0x80, 0xB5, 0x97, 0x91, 0xC8, 0xA9, 0xA4, 0xC5, 0xA6, 0xA2, 0xBB, 0x9C, 0x97, 
   0x9D, 0x7E, 0x79, 0xC2, 0xA4, 0x9F, 0xD7, 0xB9, 0xB3, 0xC3, 0xA9, 0xA2, 0xC4, 0xA9, 0xA2, 0xCF, 
   0xB2, 0xAB, 0xD2, 0xB3, 0xAD, 0xBA, 0x9A, 0x94, 0xB8, 0x97, 0x91, 0xD9, 0xBC, 0xB7, 0xE3, 0xC7, 
   0xC2, 0xD8, 0xBC, 0xB7, 0xD8, 0xB9, 0xB5, 0xDA, 0xBB, 0xB6, 0xDA, 0xBA, 0xB5, 0xC8, 0xA6, 0xA2, 
   0xA7, 0x83, 0x80, 0xBA, 0x98, 0x96, 0xB2, 0x96, 0x93, 0x9F, 0x8A, 0x86, 0xA7, 0x98, 0x94, 0x8D, 
   0x83, 0x7F, 0x8B, 0x82, 0x80, 0xA8, 0x9E, 0x9E, 0xB8, 0xAD, 0xAC, 0xC0, 0xB5, 0xB3, 0xB9, 0xAE, 
   0xAB, 0x72, 0x6A, 0x66, 0x3C, 0x36, 0x32, 0x5D, 0x5C, 0x59, 0x76, 0x73, 0x71, 0x63, 0x5D, 0x5B, 
   0x47, 0x41, 0x3E, 0x36, 0x30, 0x2D, 0x3E, 0x38, 0x36, 0x30, 0x2A, 0x25, 0x36, 0x2F, 0x26, 0x35, 
   0x2E, 0x26, 0x30, 0x2A, 0x21, 0x3D, 0x34, 0x2E, 0x3C, 0x32, 0x2C, 0x44, 0x37, 0x32, 0x3D, 0x32, 
   0x2C, 0x39, 0x2F, 0x28, 0x42, 0x37, 0x30, 0x3F, 0x34, 0x2C, 0x37, 0x2D, 0x24, 0x35, 0x2A, 0x21, 
   0x34, 0x29, 0x22, 0x32, 0x26, 0x22, 0x71, 0x86, 0x90, 0x4B, 0x5C, 0x67, 0x4C, 0x56, 0x61, 0x4F, 
   0x4F, 0x5A, 0x50, 0x46, 0x50, 0xB4, 0xA5, 0xB0, 0xF2, 0xDF, 0xE5, 0xCF, 0xB9, 0xB4, 0xE3, 0xCC, 
   0xC8, 0xCE, 0xB8, 0xB3, 0xEE, 0xDB, 0xD5, 0xF8, 0xE6, 0xDE, 0xF4, 0xE1, 0xD9, 0xF8, 0xE8, 0xE2, 
   0xF5, 0xE5, 0xE0, 0xF6, 0xE5, 0xE2, 0xF6, 0xE6, 0xE6, 0xDB, 0xCF, 0xD2, 0xC2, 0xB6, 0xBA, 0xEF, 
   0xE6, 0xE8, 0xEA, 0xDF, 0xDE, 0xFE, 0xF0, 0xEE, 0xC8, 0xBC, 0xBB, 0x9E, 0x95, 0x93, 0xDB, 0xD6, 
   0xD4, 0xFC, 0xF9, 0xF6, 0xD0, 0xCA, 0xC9, 0x64, 0x65, 0x63, 0x66, 0x70, 0x6D, 0x61, 0x71, 0x6D, 
   0x60, 0x6B, 0x68, 0x63, 0x60, 0x60, 0xD1, 0xCA, 0xCA, 0xFC, 0xEF, 0xEC, 0xF4, 0xE6, 0xE4, 0xF0, 
   0xE5, 0xE5, 0xF3, 0xEB, 0xEC, 0xC0, 0xBA, 0xBB, 0x73, 0x6E, 0x6F, 0x60, 0x5C, 0x5E, 0x70, 0x6E, 
   0x70, 0xC2, 0xC0, 0xC2, 0xD1, 0xD1, 0xD2, 0x56, 0x59, 0x5A, 0x5C, 0x60, 0x61, 0x6A, 0x6E, 0x6F, 
   0x93, 0x93, 0x95, 0xAB, 0xAD, 0xAF, 0xB0, 0xB5, 0xB6, 0x85, 0x87, 0x8A, 0x52, 0x4E, 0x52, 0x82, 
   0x79, 0x80, 0xDB, 0xCF, 0xD3, 0xF4, 0xE8, 0xE7, 0x79, 0x70, 0x6D, 0x3A, 0x36, 0x30, 0x49, 0x49, 
   0x3F, 0x48, 0x4C, 0x40, 0x36, 0x3C, 0x2F, 0x43, 0x45, 0x42, 0x48, 0x49, 0x47, 0x46, 0x49, 0x47, 
   0x5E, 0x63, 0x62, 0x95, 0x9C, 0x99, 0x4B, 0x53, 0x4F, 0x4A, 0x4F, 0x4E, 0x53, 0x53, 0x54, 0x4B, 
   0x4D, 0x4D, 0x4A, 0x4E, 0x4F, 0x47, 0x4B, 0x4E, 0x52, 0x58, 0x5B, 0x53, 0x5A, 0x5F, 0x4F, 0x54, 
   0x5D, 0x4A, 0x4F, 0x58, 0x4B, 0x50, 0x59, 0x44, 0x49, 0x52, 0x50, 0x55, 0x5E, 0x58, 0x5D, 0x67, 
   0x52, 0x56, 0x5F, 0x4D, 0x52, 0x59, 0x4C, 0x56, 0x5C, 0x4E, 0x5A, 0x5E, 0x4F, 0x5A, 0x5C, 0x6B, 
   0x72, 0x74, 0xCC, 0xD0, 0xD0, 0x80, 0x7A, 0x78, 0xC2, 0xB5, 0xB2, 0xEF, 0xDE, 0xDC, 0xEB, 0xD7, 
   0xD5, 0xEB, 0xD6, 0xD5, 0xE2, 0xD4, 0xD2, 0xF8, 0xEE, 0xEE, 0xE7, 0xDD, 0xDE, 0xCD, 0xBD, 0xBF, 
   0xED, 0xDC, 0xDB, 0xE9, 0xD8, 0xD7, 0xAF, 0x99, 0x97, 0xE1, 0xCD, 0xCA, 0xF4, 0xE3, 0xD8, 0xED, 
   0xDA, 0xD2, 0xF6, 0xE4, 0xDC, 0xF6, 0xE1, 0xDA, 0xF6, 0xE0, 0xD9, 0xF7, 0xE1, 0xDB, 0xF7, 0xE1, 
   0xDD, 0xF1, 0xD7, 0xD5, 0xF1, 0xD8, 0xD5, 0xD8, 0xC2, 0xC0, 0xD3, 0xC0, 0xBC, 0xCA, 0xBA, 0xB6, 
   0xDD, 0xCD, 0xCA, 0xB4, 0xA1, 0xA2, 0x8E, 0x7A, 0x7A, 0xA9, 0x91, 0x8E, 0x8E, 0x71, 0x6B, 0x9B, 
   0x79, 0x6E, 0x93, 0x6E, 0x62, 0x99, 0x70, 0x61, 0xA2, 0x76, 0x63, 0xA2, 0x76, 0x64, 0x9C, 0x70, 
   0x5E, 0x98, 0x6D, 0x5B, 0x99, 0x6E, 0x5D, 0x99, 0x6D, 0x5D, 0x9C, 0x6A, 0x58, 0x9B, 0x68, 0x56, 
   0x97, 0x66, 0x54, 0x95, 0x63, 0x51, 0x95, 0x63, 0x51, 0x97, 0x64, 0x52, 0x93, 0x63, 0x52, 0x8F, 
   0x62, 0x52, 0x91, 0x64, 0x53, 0x92, 0x65, 0x55, 0x92, 0x65, 0x54, 0x91, 0x64, 0x53, 0x94, 0x68, 
   0x57, 0x98, 0x68, 0x56, 0x99, 0x68, 0x56, 0x97, 0x67, 0x55, 0x94, 0x64, 0x52, 0x92, 0x62, 0x50, 
   0x92, 0x62, 0x50, 0x94, 0x63, 0x4F, 0x95, 0x63, 0x4C, 0x95, 0x63, 0x4D, 0x93, 0x60, 0x4A, 0x8E, 
   0x5B, 0x45, 0x8B, 0x59, 0x42, 0x8A, 0x57, 0x41, 0x88, 0x58, 0x3D, 0x88, 0x5A, 0x3D, 0x87, 0x5B, 
   0x42, 0x86, 0x5E, 0x4A, 0x79, 0x5B, 0x4C, 0x5D, 0x47, 0x3A, 0x5F, 0x4D, 0x42, 0x80, 0x71, 0x68, 
   0x74, 0x66, 0x5C, 0x55, 0x46, 0x3A, 0x5A, 0x4C, 0x40, 0x59, 0x4C, 0x3F, 0x82, 0x74, 0x68, 0x92, 
   0x79, 0x6B, 0xA1, 0x83, 0x75, 0x92, 0x71, 0x67, 0x80, 0x61, 0x59, 0x7A, 0x60, 0x5A, 0x5C, 0x49, 
   0x44, 0x7F, 0x6D, 0x68, 0x57, 0x40, 0x3B, 0x94, 0x7C, 0x77, 0xA4, 0x8A, 0x85, 0xB6, 0x9A, 0x95, 
   0xBF, 0xA1, 0x9E, 0xA6, 0x88, 0x85, 0x75, 0x58, 0x51, 0x7C, 0x61, 0x57, 0xAD, 0x93, 0x89, 0xA5, 
   0x8B, 0x81, 0x83, 0x69, 0x5F, 0xAF, 0x95, 0x8B, 0x95, 0x7A, 0x70, 0xB0, 0x90, 0x8B, 0xD1, 0xB3, 
   0xAF, 0xC3, 0xA9, 0xA4, 0xB9, 0xA3, 0x9E, 0xB1, 0x9E, 0x98, 0x7D, 0x6C, 0x66, 0x7A, 0x69, 0x64, 
   0xC5, 0xB2, 0xAD, 0xBC, 0xA5, 0xA1, 0xB9, 0x9E, 0x9A, 0xAC, 0x8E, 0x8A, 0xAB, 0x89, 0x87, 0xCB, 
   0xA7, 0xA5, 0xAF, 0x91, 0x8A, 0x93, 0x77, 0x70, 0xB4, 0x97, 0x90, 0xBB, 0x9F, 0x98, 0xBE, 0xA2, 
   0x9B, 0xB0, 0x94, 0x8D, 0xAD, 0x8E, 0x89, 0xC7, 0xA7, 0xA5, 0xAC, 0x8D, 0x8A, 0x94, 0x77, 0x73, 
   0x71, 0x55, 0x51, 0x85, 0x6B, 0x67, 0xA6, 0x8C, 0x88, 0xB1, 0x9B, 0x97, 0xC2, 0xAA, 0xA6, 0xB4, 
   0x9B, 0x97, 0xAF, 0x92, 0x8E, 0xD9, 0xBA, 0xB7, 0xCB, 0xAC, 0xA9, 0xCC, 0xB1, 0xAF, 0xB8, 0xA0, 
   0x9E, 0xDE, 0xC6, 0xC5, 0xE6, 0xCE, 0xCD, 0xDD, 0xC6, 0xC4, 0xD4, 0xBC, 0xBB, 0xDF, 0xC7, 0xC6, 
   0xCD, 0xAE, 0xAD, 0xB7, 0x9B, 0x9A, 0xA7, 0x90, 0x8F, 0xA1, 0x92, 0x8F, 0x8D, 0x83, 0x7F, 0x89, 
   0x86, 0x80, 0x93, 0x8B, 0x87, 0x9D, 0x8F, 0x8D, 0x91, 0x84, 0x82, 0x90, 0x83, 0x81, 0x60, 0x53, 
   0x51, 0x37, 0x29, 0x27, 0x30, 0x23, 0x21, 0x3E, 0x32, 0x32, 0x37, 0x2D, 0x2C, 0x32, 0x28, 0x27, 
   0x36, 0x2C, 0x2B, 0x3E, 0x34, 0x34, 0x33, 0x29, 0x29, 0x30, 0x24, 0x21, 0x3D, 0x30, 0x2A, 0x34, 
   0x27, 0x21, 0x39, 0x2C, 0x26, 0x4C, 0x3F, 0x39, 0x3F, 0x32, 0x2C, 0x41, 0x35, 0x2F, 0x3D, 0x30, 
   0x2A, 0x38, 0x2B, 0x25, 0x42, 0x36, 0x30, 0x42, 0x36, 0x31, 0x43, 0x36, 0x31, 0x37, 0x2B, 0x25, 
   0x2C, 0x1F, 0x19, 0x33, 0x24, 0x1E, 0x6F, 0x7F, 0x85, 0x54, 0x5F, 0x67, 0x57, 0x5B, 0x63, 0x7A, 
   0x77, 0x7E, 0x90, 0x84, 0x8A, 0xF3, 0xE4, 0xEA, 0xEE, 0xD8, 0xDC, 0xF7, 0xE0, 0xDC, 0xF7, 0xDE, 
   0xDA, 0xF7, 0xE1, 0xDB, 0xF8, 0xE2, 0xDC, 0xF7, 0xE2, 0xDC, 0xF9, 0xE7, 0xE1, 0xF3, 0xE1, 0xDC, 
   0xF6, 0xE6, 0xE2, 0xEA, 0xDB, 0xD9, 0xC1, 0xB3, 0xB3, 0x8D, 0x80, 0x82, 0xDB, 0xD1, 0xD4, 0xDC, 
   0xD0, 0xD3, 0xC2, 0xB4, 0xB5, 0xFF, 0xF7, 0xF8, 0x9A, 0x90, 0x90, 0xA4, 0x9B, 0x9C, 0xFB, 0xF5, 
   0xF5, 0xBF, 0xBA, 0xB9, 0x7D, 0x7B, 0x7B, 0x72, 0x78, 0x78, 0x64, 0x70, 0x6E, 0x6E, 0x7B, 0x7A, 
   0x69, 0x70, 0x70, 0x9D, 0x97, 0x99, 0xEE, 0xE4, 0xE6, 0xF0, 0xE2, 0xE0, 0xF8, 0xED, 0xEB, 0xF4, 
   0xEB, 0xEA, 0xF1, 0xEA, 0xEA, 0x86, 0x80, 0x81, 0x75, 0x71, 0x72, 0x60, 0x5C, 0x5E, 0xCD, 0xCC, 
   0xCE, 0xD8, 0xD8, 0xD9, 0x53, 0x55, 0x56, 0x4E, 0x51, 0x52, 0x68, 0x6C, 0x6D, 0x7F, 0x83, 0x84, 
   0x90, 0x94, 0x94, 0x99, 0x9E, 0x9F, 0xAB, 0xB0, 0xB1, 0x48, 0x4C, 0x4D, 0x53, 0x52, 0x55, 0x98, 
   0x91, 0x96, 0xA2, 0x99, 0x9C, 0xC1, 0xB5, 0xB4, 0x69, 0x60, 0x5D, 0x4E, 0x4A, 0x43, 0x56, 0x54, 
   0x4C, 0x3A, 0x3C, 0x31, 0x4D, 0x50, 0x46, 0x44, 0x44, 0x41, 0x44, 0x45, 0x43, 0x49, 0x4B, 0x49, 
   0x64, 0x69, 0x67, 0x65, 0x6A, 0x68, 0x56, 0x5D, 0x5A, 0x54, 0x58, 0x56, 0x4D, 0x4E, 0x4F, 0x4E, 
   0x51, 0x51, 0x48, 0x4D, 0x4E, 0x4B, 0x50, 0x52, 0x4B, 0x51, 0x54, 0x44, 0x4A, 0x4F, 0x4F, 0x55, 
   0x5D, 0x4A, 0x4F, 0x58, 0x49, 0x4F, 0x57, 0x48, 0x4D, 0x56, 0x4D, 0x52, 0x5B, 0x56, 0x5B, 0x64, 
   0x59, 0x5D, 0x65, 0x51, 0x56, 0x5D, 0x50, 0x58, 0x5C, 0x50, 0x5A, 0x5E, 0x54, 0x5E, 0x60, 0x7A, 
   0x7F, 0x81, 0x8A, 0x8A, 0x8B, 0x65, 0x5E, 0x5B, 0xC0, 0xB2, 0xB0, 0xF7, 0xEB, 0xE9, 0xEC, 0xD8, 
   0xD8, 0xDB, 0xC7, 0xC6, 0xF6, 0xE7, 0xE6, 0xE9, 0xE3, 0xE2, 0x92, 0x89, 0x89, 0x96, 0x88, 0x88, 
   0xDF, 0xD1, 0xD0, 0xCC, 0xBC, 0xB9, 0xEB, 0xDD, 0xDB, 0xD5, 0xC5, 0xC0, 0xDD, 0xCB, 0xC3, 0xF9, 
   0xE7, 0xE0, 0xF5, 0xE2, 0xDC, 0xF6, 0xE2, 0xDC, 0xF5, 0xDF, 0xD9, 0xF8, 0xE1, 0xDD, 0xEF, 0xD5, 
   0xD0, 0xEC, 0xD0, 0xCB, 0xBC, 0xA0, 0x9C, 0xC2, 0xA8, 0xA4, 0xD9, 0xC2, 0xBD, 0x9F, 0x8A, 0x85, 
   0x69, 0x54, 0x4F, 0x88, 0x72, 0x6F, 0xA1, 0x89, 0x86, 0x9A, 0x7E, 0x78, 0x8B, 0x6B, 0x62, 0x95, 
   0x72, 0x64, 0x94, 0x6E, 0x5F, 0x98, 0x6E, 0x5E, 0x99, 0x6D, 0x5B, 0x9A, 0x6E, 0x5D, 0x9A, 0x6E, 
   0x5D, 0x97, 0x6B, 0x5A, 0x95, 0x6A, 0x58, 0x95, 0x6A, 0x58, 0x99, 0x67, 0x55, 0x98, 0x66, 0x53, 
   0x95, 0x63, 0x51, 0x94, 0x62, 0x50, 0x94, 0x62, 0x50, 0x95, 0x63, 0x51, 0x94, 0x64, 0x52, 0x92, 
   0x64, 0x53, 0x91, 0x63, 0x52, 0x90, 0x62, 0x51, 0x90, 0x62, 0x51, 0x92, 0x64, 0x53, 0x95, 0x67, 
   0x56, 0x96, 0x66, 0x54, 0x97, 0x67, 0x55, 0x95, 0x66, 0x53, 0x92, 0x62, 0x50, 0x90, 0x60, 0x4E, 
   0x8F, 0x5F, 0x4D, 0x90, 0x5F, 0x4B, 0x91, 0x5F, 0x47, 0x92, 0x60, 0x49, 0x90, 0x5E, 0x47, 0x8C, 
   0x5A, 0x43, 0x8A, 0x57, 0x41, 0x89, 0x56, 0x40, 0x87, 0x57, 0x3D, 0x87, 0x57, 0x3A, 0x84, 0x55, 
   0x3E, 0x81, 0x56, 0x43, 0x7F, 0x5C, 0x4C, 0x6C, 0x50, 0x42, 0x5D, 0x48, 0x3C, 0x74, 0x62, 0x56, 
   0x92, 0x80, 0x74, 0x7B, 0x6A, 0x5F, 0x51, 0x40, 0x35, 0x53, 0x44, 0x3A, 0x60, 0x51, 0x49, 0xA5, 
   0x92, 0x86, 0xA0, 0x8B, 0x7C, 0x96, 0x7E, 0x72, 0x79, 0x5F, 0x58, 0x71, 0x5A, 0x55, 0x53, 0x41, 
   0x3E, 0x7E, 0x6E, 0x6C, 0x92, 0x81, 0x7C, 0x71, 0x5F, 0x5A, 0x74, 0x5F, 0x5B, 0x78, 0x60, 0x5D, 
   0xB0, 0x94, 0x91, 0xB7, 0x9A, 0x97, 0x9A, 0x7F, 0x7A, 0x9C, 0x83, 0x7C, 0x8B, 0x71, 0x6B, 0x90, 
   0x77, 0x70, 0x92, 0x79, 0x72, 0x9B, 0x82, 0x7B, 0x8F, 0x75, 0x6F, 0x83, 0x63, 0x60, 0x87, 0x69, 
   0x66, 0x8E, 0x73, 0x70, 0x58, 0x42, 0x3E, 0x73, 0x5F, 0x5B, 0x70, 0x5F, 0x5A, 0xA2, 0x91, 0x8C, 
   0xBA, 0xA6, 0xA1, 0xA6, 0x90, 0x8B, 0xBF, 0xA5, 0xA1, 0xB1, 0x93, 0x8F, 0xA0, 0x7F, 0x7C, 0x9D, 
   0x7B, 0x78, 0x7A, 0x59, 0x53, 0x74, 0x55, 0x4F, 0xA9, 0x8C, 0x85, 0xB1, 0x94, 0x8D, 0xC8, 0xAC, 
   0xA5, 0xBD, 0xA1, 0x9A, 0xA3, 0x86, 0x81, 0xAF, 0x90, 0x8D, 0xAC, 0x8D, 0x8A, 0xAE, 0x91, 0x8D, 
   0xCB, 0xAF, 0xAB, 0xB2, 0x97, 0x93, 0xB1, 0x97, 0x93, 0xC6, 0xAC, 0xA8, 0xD1, 0xB7, 0xB3, 0xD6, 
   0xBC, 0xB8, 0xC8, 0xAE, 0xAA, 0xCD, 0xB2, 0xAD, 0xBA, 0x9F, 0x9A, 0xA6, 0x8D, 0x8A, 0xAE, 0x98, 
   0x96, 0xA5, 0x8F, 0x8C, 0xAD, 0x97, 0x94, 0xCF, 0xB9, 0xB6, 0xC1, 0xAB, 0xA8, 0xBA, 0xA4, 0xA1, 
   0xA9, 0x91, 0x8E, 0xA3, 0x8D, 0x8A, 0x82, 0x6F, 0x6C, 0x71, 0x61, 0x5E, 0x77, 0x6D, 0x69, 0x6D, 
   0x67, 0x61, 0x5C, 0x53, 0x4F, 0x46, 0x39, 0x37, 0x36, 0x29, 0x27, 0x31, 0x24, 0x22, 0x31, 0x24, 
   0x22, 0x39, 0x2C, 0x2A, 0x3C, 0x2F, 0x2E, 0x3F, 0x34, 0x31, 0x36, 0x2D, 0x29, 0x33, 0x2A, 0x26, 
   0x33, 0x2A, 0x26, 0x3B, 0x32, 0x2E, 0x34, 0x2B, 0x27, 0x33, 0x28, 0x23, 0x35, 0x29, 0x23, 0x34, 
   0x28, 0x22, 0x33, 0x27, 0x21, 0x47, 0x3B, 0x35, 0x39, 0x2D, 0x27, 0x3D, 0x31, 0x2B, 0x3A, 0x2E, 
   0x28, 0x36, 0x2A, 0x24, 0x34, 0x28, 0x22, 0x37, 0x2B, 0x25, 0x41, 0x35, 0x2F, 0x3C, 0x30, 0x2A, 
   0x2D, 0x20, 0x1A, 0x36, 0x27, 0x21, 0x65, 0x6D, 0x6F, 0x68, 0x6C, 0x6F, 0x7C, 0x7A, 0x7C, 0x8B, 
   0x82, 0x84, 0xE9, 0xDB, 0xDD, 0xF4, 0xE1, 0xE3, 0xF2, 0xDA, 0xDA, 0xF5, 0xDA, 0xD6, 0xF3, 0xD9, 
   0xD5, 0xF8, 0xE0, 0xDB, 0xF6, 0xE1, 0xDC, 0xF5, 0xE0, 0xDB, 0xF7, 0xE3, 0xDE, 0xF2, 0xE3, 0xE0, 
   0xCB, 0xBE, 0xBD, 0x94, 0x88, 0x87, 0x75, 0x69, 0x69, 0xAD, 0xA2, 0xA3, 0xE2, 0xD9, 0xDC, 0x99, 
   0x8F, 0x91, 0xEC, 0xE7, 0xE7, 0xD4, 0xCB, 0xCB, 0x57, 0x4F, 0x4F, 0xAB, 0xA4, 0xA4, 0xE7, 0xE2, 
   0xE2, 0x69, 0x64, 0x63, 0x66, 0x69, 0x6B, 0x70, 0x7A, 0x7E, 0x5D, 0x6A, 0x6D, 0x65, 0x70, 0x73, 
   0x64, 0x68, 0x6C, 0xD9, 0xD2, 0xD7, 0x93, 0x87, 0x8C, 0xD8, 0xCE, 0xCB, 0xFB, 0xF0, 0xEE, 0xFD, 
   0xF4, 0xF4, 0xB9, 0xB4, 0xB4, 0x65, 0x5F, 0x60, 0x7A, 0x77, 0x77, 0xC0, 0xBF, 0xBF, 0xE6, 0xE6, 
   0xE7, 0x93, 0x93, 0x95, 0x75, 0x78, 0x79, 0x54, 0x58, 0x59, 0x5C, 0x60, 0x61, 0x91, 0x95, 0x96, 
   0x5A, 0x61, 0x61, 0x79, 0x81, 0x81, 0x52, 0x5A, 0x5A, 0x4A, 0x4F, 0x50, 0x88, 0x88, 0x89, 0x93, 
   0x8D, 0x90, 0xA1, 0x99, 0x98, 0x7A, 0x6E, 0x6B, 0x54, 0x4A, 0x47, 0x4D, 0x49, 0x42, 0x5E, 0x5C, 
   0x53, 0x41, 0x42, 0x38, 0x56, 0x56, 0x4D, 0x4F, 0x4E, 0x4C, 0x49, 0x4A, 0x48, 0x5A, 0x5C, 0x5A, 
   0x57, 0x5A, 0x58, 0x42, 0x46, 0x44, 0x64, 0x69, 0x67, 0x5B, 0x5F, 0x5D, 0x58, 0x5A, 0x5A, 0x56, 
   0x58, 0x58, 0x4A, 0x4F, 0x50, 0x4A, 0x4F, 0x51, 0x48, 0x4E, 0x51, 0x43, 0x49, 0x4E, 0x4E, 0x54, 
   0x5B, 0x4D, 0x53, 0x5A, 0x4A, 0x50, 0x57, 0x49, 0x4F, 0x56, 0x4D, 0x53, 0x5A, 0x50, 0x56, 0x5D, 
   0x59, 0x5D, 0x65, 0x5A, 0x5D, 0x62, 0x53, 0x59, 0x5E, 0x49, 0x52, 0x55, 0x4E, 0x55, 0x57, 0x7D, 
   0x7F, 0x80, 0x5E, 0x5B, 0x5B, 0x74, 0x6B, 0x69, 0xE2, 0xD7, 0xD4, 0xF3, 0xE7, 0xE6, 0xEC, 0xD9, 
   0xD8, 0xEF, 0xDE, 0xDE, 0xE4, 0xD6, 0xD5, 0x87, 0x7B, 0x7A, 0x6C, 0x63, 0x63, 0x95, 0x8A, 0x88, 
   0xC7, 0xB9, 0xB6, 0xE3, 0xD6, 0xD3, 0xD8, 0xC7, 0xC3, 0xCE, 0xBB, 0xB5, 0xEF, 0xDD, 0xD8, 0xF3, 
   0xE1, 0xDC, 0xED, 0xD9, 0xD4, 0xF2, 0xDD, 0xD8, 0xFB, 0xE5, 0xE0, 0xF2, 0xDA, 0xD5, 0xF3, 0xD7, 
   0xD3, 0xD8, 0xB9, 0xB4, 0xC8, 0xA9, 0xA4, 0xBA, 0x9C, 0x97, 0xA9, 0x8D, 0x88, 0xB2, 0x97, 0x91, 
   0x8B, 0x72, 0x6B, 0xA6, 0x89, 0x82, 0x9F, 0x81, 0x78, 0x9B, 0x7C, 0x6F, 0x94, 0x6F, 0x61, 0x96, 
   0x6E, 0x5F, 0x9B, 0x70, 0x5E, 0x96, 0x6B, 0x59, 0x97, 0x6C, 0x59, 0x96, 0x6B, 0x58, 0x95, 0x6A, 
   0x57, 0x94, 0x69, 0x56, 0x91, 0x66, 0x53, 0x92, 0x66, 0x53, 0x96, 0x64, 0x50, 0x95, 0x63, 0x4F, 
   0x93, 0x61, 0x4D, 0x92, 0x60, 0x4C, 0x92, 0x60, 0x4C, 0x93, 0x61, 0x4D, 0x93, 0x63, 0x50, 0x92, 
   0x64, 0x52, 0x90, 0x62, 0x50, 0x8F, 0x61, 0x4F, 0x92, 0x64, 0x52, 0x94, 0x66, 0x54, 0x95, 0x66, 
   0x54, 0x94, 0x65, 0x50, 0x95, 0x66, 0x51, 0x94, 0x65, 0x50, 0x91, 0x62, 0x4D, 0x8E, 0x5F, 0x4A, 
   0x8D, 0x5E, 0x49, 0x8E, 0x5E, 0x48, 0x8F, 0x5D, 0x45, 0x91, 0x5F, 0x48, 0x8F, 0x5D, 0x46, 0x8C, 
   0x5A, 0x43, 0x8A, 0x58, 0x41, 0x89, 0x57, 0x40, 0x88, 0x58, 0x3B, 0x88, 0x55, 0x39, 0x86, 0x54, 
   0x3C, 0x84, 0x54, 0x40, 0x82, 0x58, 0x48, 0x7D, 0x5B, 0x4D, 0x72, 0x55, 0x47, 0x72, 0x5C, 0x4C, 
   0x79, 0x63, 0x55, 0x9C, 0x87, 0x7C, 0x6A, 0x59, 0x50, 0x53, 0x43, 0x3C, 0x65, 0x57, 0x50, 0x78, 
   0x6D, 0x61, 0x5A, 0x4E, 0x3F, 0x87, 0x75, 0x6B, 0xA9, 0x93, 0x8C, 0x6F, 0x5B, 0x56, 0x60, 0x4F, 
   0x4C, 0x60, 0x52, 0x50, 0x6F, 0x65, 0x61, 0x87, 0x7A, 0x76, 0x8B, 0x7A, 0x77, 0x7E, 0x69, 0x67, 
   0xB3, 0x99, 0x97, 0xBA, 0x9E, 0x9D, 0xB9, 0x9F, 0x9C, 0xA2, 0x8A, 0x85, 0x85, 0x6D, 0x67, 0x88, 
   0x70, 0x6A, 0xC4, 0xAC, 0xA6, 0xDF, 0xC7, 0xC1, 0xD2, 0xBA, 0xB5, 0xC1, 0xA3, 0xA3, 0xB2, 0x95, 
   0x95, 0xBC, 0xA2, 0xA0, 0x93, 0x7E, 0x7C, 0x60, 0x4D, 0x4A, 0x64, 0x54, 0x51, 0x79, 0x67, 0x63, 
   0x90, 0x7C, 0x77, 0x8E, 0x79, 0x74, 0xAF, 0x95, 0x91, 0xB3, 0x97, 0x93, 0xD7, 0xB8, 0xB5, 0xD0, 
   0xB1, 0xAE, 0xB4, 0x94, 0x8E, 0xCE, 0xAE, 0xA8, 0xD6, 0xB8, 0xB1, 0xEF, 0xD3, 0xCC, 0xE8, 0xCD, 
   0xC6, 0xC5, 0xAB, 0xA4, 0xC2, 0xA7, 0xA2, 0xDB, 0xBC, 0xB9, 0xE9, 0xCC, 0xC8, 0xAA, 0x8E, 0x8A, 
   0x9F, 0x84, 0x80, 0xCC, 0xB2, 0xAE, 0xC2, 0xA9, 0xA5, 0xE8, 0xCD, 0xC9, 0xDB, 0xC0, 0xBC, 0xCF, 
   0xB5, 0xB1, 0xC9, 0xB1, 0xAD, 0xD3, 0xBC, 0xB7, 0xCD, 0xB7, 0xB2, 0xED, 0xD8, 0xD3, 0xC7, 0xB5, 
   0xAF, 0x5E, 0x4C, 0x46, 0x58, 0x45, 0x40, 0x65, 0x53, 0x4D, 0x4D, 0x3B, 0x35, 0x4C, 0x39, 0x34, 
   0x5B, 0x4B, 0x45, 0x62, 0x54, 0x4E, 0x54, 0x47, 0x41, 0x4E, 0x43, 0x3D, 0x2F, 0x25, 0x1D, 0x31, 
   0x28, 0x21, 0x3C, 0x31, 0x2D, 0x44, 0x37, 0x34, 0x38, 0x2B, 0x29, 0x39, 0x2C, 0x2A, 0x3D, 0x30, 
   0x2E, 0x3B, 0x2E, 0x2C, 0x46, 0x3A, 0x37, 0x39, 0x2E, 0x27, 0x36, 0x2C, 0x25, 0x35, 0x2B, 0x24, 
   0x36, 0x2C, 0x25, 0x32, 0x28, 0x21, 0x35, 0x2B, 0x24, 0x31, 0x26, 0x1F, 0x37, 0x2B, 0x25, 0x33, 
   0x27, 0x21, 0x2D, 0x21, 0x1B, 0x39, 0x2D, 0x27, 0x39, 0x2D, 0x27, 0x3A, 0x2E, 0x28, 0x3C, 0x30, 
   0x2A, 0x36, 0x2A, 0x24, 0x31, 0x25, 0x1F, 0x36, 0x2A, 0x24, 0x3B, 0x2F, 0x29, 0x35, 0x29, 0x23, 
   0x33, 0x26, 0x20, 0x36, 0x28, 0x22, 0x75, 0x74, 0x73, 0x7A, 0x77, 0x76, 0xC9, 0xC1, 0xC0, 0xCD, 
   0xC0, 0xBE, 0xF1, 0xE0, 0xDD, 0xEE, 0xD7, 0xD5, 0xF0, 0xD7, 0xD3, 0xF6, 0xDC, 0xD6, 0xF9, 0xE0, 
   0xDB, 0xF4, 0xDE, 0xDA, 0xF6, 0xE3, 0xE1, 0xFA, 0xE6, 0xE3, 0xF5, 0xE3, 0xE0, 0xB4, 0xA8, 0xA7, 
   0x77, 0x6C, 0x6C, 0x8F, 0x86, 0x87, 0x92, 0x8A, 0x8B, 0xDD, 0xD5, 0xD6, 0xAB, 0xA1, 0xA2, 0x96, 
   0x8F, 0x90, 0xA4, 0x9F, 0xA0, 0x59, 0x53, 0x54, 0x8F, 0x88, 0x89, 0xEA, 0xE6, 0xE7, 0xA5, 0xA0, 
   0xA1, 0x6E, 0x69, 0x6A, 0x78, 0x7E, 0x81, 0x5D, 0x6A, 0x6D, 0x61, 0x6E, 0x72, 0x58, 0x61, 0x66, 
   0x7D, 0x7F, 0x84, 0xBB, 0xAF, 0xB7, 0x64, 0x55, 0x5C, 0xE4, 0xD8, 0xD6, 0xF4, 0xE9, 0xE6, 0xFA, 
   0xF1, 0xF0, 0xA6, 0xA1, 0xA0, 0x66, 0x61, 0x62, 0x99, 0x97, 0x97, 0xEB, 0xEB, 0xEB, 0x65, 0x67, 
   0x68, 0x72, 0x74, 0x75, 0x6E, 0x72, 0x73, 0x88, 0x8C, 0x8D, 0x7B, 0x7F, 0x80, 0x6A, 0x6E, 0x6F, 
   0x54, 0x5D, 0x5D, 0x4B, 0x55, 0x55, 0x5D, 0x67, 0x67, 0x56, 0x5C, 0x5B, 0x9E, 0x9F, 0x9F, 0x8F, 
   0x8A, 0x89, 0x73, 0x68, 0x66, 0x6C, 0x5F, 0x5B, 0x45, 0x3B, 0x37, 0x4E, 0x47, 0x42, 0x56, 0x53, 
   0x4C, 0x61, 0x5F, 0x57, 0x4B, 0x4B, 0x43, 0x4E, 0x4D, 0x4B, 0x56, 0x54, 0x53, 0x96, 0x95, 0x94, 
   0x60, 0x63, 0x61, 0x49, 0x4D, 0x4B, 0x4F, 0x54, 0x52, 0x41, 0x45, 0x44, 0x4B, 0x4D, 0x4D, 0x43, 
   0x45, 0x45, 0x45, 0x4A, 0x4A, 0x46, 0x4B, 0x4D, 0x46, 0x4C, 0x4F, 0x4E, 0x55, 0x5A, 0x53, 0x59, 
   0x61, 0x4B, 0x51, 0x58, 0x44, 0x4A, 0x51, 0x4F, 0x55, 0x5C, 0x53, 0x59, 0x60, 0x56, 0x5C, 0x63, 
   0x58, 0x5C, 0x63, 0x53, 0x55, 0x5B, 0x52, 0x57, 0x5B, 0x47, 0x4C, 0x4F, 0x59, 0x5C, 0x5D, 0x7B, 
   0x79, 0x7A, 0x61, 0x59, 0x59, 0xB7, 0xAD, 0xAB, 0xF6, 0xEE, 0xEC, 0xA8, 0x9C, 0x9A, 0xE4, 0xD2, 
   0xD1, 0xF7, 0xE8, 0xE8, 0xA8, 0x97, 0x96, 0x85, 0x78, 0x76, 0x77, 0x71, 0x6E, 0x9D, 0x94, 0x91, 
   0xCE, 0xC4, 0xC0, 0xBC, 0xAE, 0xA9, 0xC3, 0xB3, 0xAD, 0xF4, 0xE3, 0xDD, 0xF6, 0xE4, 0xE0, 0xF1, 
   0xDE, 0xDA, 0xF3, 0xDE, 0xD9, 0xEF, 0xD8, 0xD3, 0xF6, 0xDD, 0xD7, 0xFA, 0xDF, 0xDB, 0xC4, 0xA4, 
   0x9D, 0xB3, 0x90, 0x86, 0xFA, 0xD7, 0xCE, 0xC8, 0xA8, 0x9E, 0xAE, 0x8D, 0x84, 0x9D, 0x7D, 0x73, 
   0x96, 0x76, 0x6C, 0x9C, 0x79, 0x6C, 0x90, 0x6F, 0x60, 0x8F, 0x6C, 0x5B, 0x8A, 0x62, 0x50, 0x96, 
   0x6A, 0x58, 0x96, 0x69, 0x54, 0x98, 0x6A, 0x56, 0x93, 0x65, 0x54, 0x96, 0x68, 0x56, 0x94, 0x66, 
   0x54, 0x93, 0x65, 0x53, 0x90, 0x62, 0x51, 0x91, 0x63, 0x51, 0x93, 0x61, 0x4D, 0x93, 0x61, 0x4D, 
   0x92, 0x60, 0x4C, 0x92, 0x60, 0x4C, 0x92, 0x60, 0x4C, 0x93, 0x60, 0x4C, 0x93, 0x62, 0x4F, 0x93, 
   0x63, 0x51, 0x92, 0x62, 0x50, 0x92, 0x62, 0x50, 0x94, 0x64, 0x52, 0x95, 0x65, 0x53, 0x92, 0x62, 
   0x50, 0x91, 0x5F, 0x4B, 0x91, 0x5F, 0x4B, 0x90, 0x5E, 0x4A, 0x8D, 0x5B, 0x47, 0x8D, 0x5B, 0x47, 
   0x8B, 0x59, 0x46, 0x8B, 0x59, 0x42, 0x8A, 0x59, 0x40, 0x8D, 0x5C, 0x43, 0x8C, 0x5B, 0x42, 0x8A, 
   0x59, 0x3F, 0x88, 0x57, 0x3D, 0x86, 0x55, 0x3C, 0x86, 0x54, 0x38, 0x88, 0x53, 0x38, 0x89, 0x53, 
   0x3B, 0x88, 0x54, 0x3E, 0x86, 0x58, 0x45, 0x83, 0x58, 0x48, 0x7F, 0x5C, 0x4B, 0x79, 0x5C, 0x49, 
   0x75, 0x5A, 0x48, 0x65, 0x4C, 0x3E, 0x80, 0x6A, 0x60, 0x89, 0x76, 0x70, 0x6A, 0x5A, 0x55, 0x4E, 
   0x47, 0x3A, 0x5F, 0x56, 0x47, 0x9F, 0x90, 0x85, 0xBC, 0xA9, 0xA1, 0x9B, 0x88, 0x83, 0x77, 0x66, 
   0x64, 0x51, 0x45, 0x41, 0x56, 0x4F, 0x4B, 0x7D, 0x73, 0x6F, 0x8F, 0x81, 0x7D, 0xB9, 0xA6, 0xA3, 
   0xC2, 0xAB, 0xA8, 0xCD, 0xB2, 0xB1, 0xCD, 0xB4, 0xB1, 0xC5, 0xAF, 0xAA, 0xA9, 0x93, 0x8E, 0xA6, 
   0x90, 0x8B, 0xA8, 0x92, 0x8D, 0x9E, 0x88, 0x83, 0x8F, 0x79, 0x74, 0xBA, 0x9E, 0x9D, 0xAF, 0x94, 
   0x94, 0xD1, 0xB9, 0xB9, 0xD1, 0xB9, 0xB9, 0xB4, 0xA0, 0x9E, 0x81, 0x6D, 0x6D, 0x67, 0x53, 0x50, 
   0xA9, 0x95, 0x90, 0xD6, 0xC0, 0xBB, 0xBC, 0xA2, 0x9E, 0xB1, 0x95, 0x91, 0xE2, 0xC6, 0xC2, 0xDE, 
   0xC1, 0xBC, 0xE4, 0xC3, 0xBD, 0xEE, 0xCD, 0xC7, 0xDE, 0xC0, 0xB9, 0xD2, 0xB6, 0xAF, 0xB2, 0x98, 
   0x91, 0xC3, 0xAB, 0xA3, 0xC6, 0xAB, 0xA6, 0xAB, 0x8E, 0x8A, 0xB0, 0x93, 0x8F, 0xD9, 0xBD, 0xB9, 
   0xF5, 0xDB, 0xD7, 0xE9, 0xD0, 0xCC, 0xEA, 0xD3, 0xCE, 0xDC, 0xC0, 0xBC, 0xC5, 0xA9, 0xA6, 0xCC, 
   0xB3, 0xAF, 0xB8, 0xA4, 0x9F, 0xA1, 0x8E, 0x88, 0x96, 0x85, 0x7F, 0x76, 0x66, 0x60, 0x50, 0x40, 
   0x39, 0x52, 0x42, 0x3B, 0x41, 0x31, 0x2A, 0x53, 0x42, 0x3C, 0x5F, 0x4F, 0x48, 0x52, 0x43, 0x3C, 
   0x4F, 0x46, 0x40, 0x42, 0x3A, 0x33, 0x4D, 0x44, 0x3D, 0x51, 0x47, 0x40, 0x44, 0x3A, 0x33, 0x3E, 
   0x33, 0x2C, 0x3C, 0x31, 0x2C, 0x40, 0x34, 0x31, 0x3C, 0x30, 0x2C, 0x32, 0x26, 0x22, 0x36, 0x2A, 
   0x26, 0x3E, 0x32, 0x2E, 0x3D, 0x31, 0x2C, 0x36, 0x2D, 0x24, 0x39, 0x30, 0x26, 0x3C, 0x33, 0x2A, 
   0x38, 0x2F, 0x26, 0x30, 0x27, 0x1E, 0x34, 0x2B, 0x21, 0x32, 0x27, 0x1F, 0x38, 0x2C, 0x26, 0x32, 
   0x26, 0x20, 0x31, 0x25, 0x1F, 0x3B, 0x2F, 0x29, 0x40, 0x34, 0x2E, 0x3F, 0x33, 0x2D, 0x47, 0x3B, 
   0x35, 0x36, 0x2A, 0x24, 0x32, 0x26, 0x20, 0x3B, 0x2F, 0x29, 0x43, 0x37, 0x31, 0x33, 0x28, 0x22, 
   0x3B, 0x2E, 0x28, 0x3C, 0x2E, 0x28, 0x94, 0x89, 0x88, 0xAE, 0xA4, 0xA1, 0xE4, 0xD5, 0xD1, 0xF7, 
   0xE5, 0xE0, 0xEC, 0xD7, 0xD2, 0xF4, 0xDD, 0xD7, 0xF9, 0xE0, 0xDA, 0xF6, 0xDC, 0xD6, 0xF9, 0xE1, 
   0xDC, 0xF3, 0xDD, 0xDB, 0xEF, 0xDD, 0xDA, 0xD9, 0xC9, 0xC8, 0xAC, 0x9D, 0x9D, 0xBD, 0xB6, 0xB6, 
   0x92, 0x8C, 0x8D, 0xC2, 0xBD, 0xBE, 0xA2, 0x9C, 0x9C, 0xAD, 0xA6, 0xA7, 0x7A, 0x73, 0x74, 0x99, 
   0x94, 0x94, 0x4E, 0x4B, 0x4B, 0x84, 0x81, 0x81, 0xEA, 0xE5, 0xE6, 0xDE, 0xDA, 0xDB, 0x5B, 0x56, 
   0x57, 0x8A, 0x85, 0x86, 0x76, 0x7D, 0x80, 0x5A, 0x67, 0x6B, 0x75, 0x7E, 0x83, 0x88, 0x8E, 0x93, 
   0x9A, 0x98, 0x9F, 0x71, 0x65, 0x6D, 0x76, 0x68, 0x70, 0xE5, 0xDA, 0xD8, 0xFE, 0xF5, 0xF3, 0xD7, 
   0xCF, 0xCE, 0x65, 0x60, 0x5F, 0x7D, 0x7A, 0x7A, 0xF3, 0xF3, 0xF3, 0xB5, 0xB5, 0xB6, 0x42, 0x44, 
   0x45, 0x60, 0x64, 0x65, 0x6B, 0x6F, 0x70, 0x88, 0x8D, 0x8E, 0x69, 0x70, 0x70, 0x5E, 0x65, 0x66, 
   0x56, 0x60, 0x61, 0x52, 0x5D, 0x5D, 0x6A, 0x75, 0x74, 0x6B, 0x72, 0x6F, 0x74, 0x75, 0x73, 0x78, 
   0x70, 0x6E, 0x68, 0x5B, 0x58, 0x5E, 0x52, 0x4C, 0x50, 0x44, 0x3E, 0x4B, 0x43, 0x3E, 0x4C, 0x47, 
   0x42, 0x51, 0x4E, 0x49, 0x4B, 0x49, 0x43, 0x55, 0x51, 0x50, 0x63, 0x60, 0x5F, 0x5D, 0x5C, 0x5B, 
   0x6D, 0x6F, 0x6D, 0x55, 0x57, 0x55, 0x47, 0x4A, 0x48, 0x41, 0x44, 0x43, 0x44, 0x46, 0x46, 0x44, 
   0x46, 0x46, 0x3F, 0x43, 0x44, 0x42, 0x47, 0x49, 0x44, 0x4A, 0x4D, 0x57, 0x5E, 0x62, 0x54, 0x5A, 
   0x5F, 0x48, 0x4E, 0x54, 0x4C, 0x52, 0x57, 0x51, 0x57, 0x5C, 0x51, 0x57, 0x5C, 0x55, 0x5B, 0x61, 
   0x58, 0x5C, 0x61, 0x50, 0x51, 0x56, 0x56, 0x5A, 0x5E, 0x4E, 0x52, 0x54, 0x72, 0x70, 0x72, 0x89, 
   0x81, 0x83, 0xB7, 0xAC, 0xAD, 0xEA, 0xE4, 0xE2, 0xC1, 0xB4, 0xB2, 0xD9, 0xCB, 0xC9, 0xFB, 0xED, 
   0xEB, 0xEE, 0xDC, 0xDB, 0x90, 0x7C, 0x7B, 0x8A, 0x7C, 0x7A, 0x7C, 0x75, 0x72, 0xBC, 0xB2, 0xAE, 
   0xE2, 0xD7, 0xD2, 0xED, 0xDF, 0xD9, 0xF7, 0xE6, 0xDF, 0xF5, 0xE4, 0xDE, 0xF1, 0xDE, 0xDB, 0xEF, 
   0xD9, 0xD5, 0xDC, 0xC3, 0xBF, 0xEE, 0xD5, 0xCE, 0xEC, 0xCE, 0xC6, 0xC4, 0xA4, 0x9C, 0x9F, 0x7A, 
   0x71, 0xAB, 0x85, 0x78, 0xB6, 0x90, 0x84, 0xA3, 0x7D, 0x71, 0x8F, 0x6A, 0x5D, 0x8E, 0x68, 0x5B, 
   0x95, 0x6D, 0x61, 0x94, 0x6D, 0x5C, 0x92, 0x6C, 0x59, 0x94, 0x6B, 0x57, 0x92, 0x67, 0x52, 0x97, 
   0x69, 0x53, 0x99, 0x69, 0x52, 0x96, 0x68, 0x53, 0x93, 0x66, 0x51, 0x93, 0x66, 0x52, 0x92, 0x65, 
   0x51, 0x91, 0x64, 0x4F, 0x8D, 0x60, 0x4C, 0x8D, 0x60, 0x4C, 0x93, 0x61, 0x4C, 0x92, 0x61, 0x4C, 
   0x91, 0x5F, 0x4A, 0x92, 0x60, 0x4B, 0x92, 0x61, 0x4C, 0x93, 0x62, 0x4C, 0x92, 0x62, 0x4D, 0x90, 
   0x61, 0x4D, 0x90, 0x61, 0x4D, 0x90, 0x61, 0x4D, 0x90, 0x61, 0x4D, 0x90, 0x60, 0x4C, 0x8D, 0x5E, 
   0x49, 0x8E, 0x5D, 0x47, 0x8F, 0x5E, 0x48, 0x8E, 0x5C, 0x47, 0x8C, 0x5A, 0x45, 0x8C, 0x5B, 0x46, 
   0x8B, 0x5A, 0x45, 0x8B, 0x5A, 0x42, 0x8A, 0x59, 0x3F, 0x89, 0x57, 0x3E, 0x89, 0x58, 0x3E, 0x87, 
   0x56, 0x3C, 0x85, 0x54, 0x3A, 0x84, 0x53, 0x39, 0x86, 0x54, 0x37, 0x88, 0x54, 0x36, 0x8A, 0x53, 
   0x38, 0x88, 0x52, 0x3A, 0x87, 0x54, 0x3F, 0x82, 0x54, 0x40, 0x7D, 0x54, 0x3F, 0x80, 0x5D, 0x46, 
   0x7E, 0x5D, 0x49, 0x78, 0x59, 0x4A, 0x76, 0x5B, 0x4D, 0xA0, 0x88, 0x7E, 0x91, 0x7A, 0x73, 0x5F, 
   0x54, 0x45, 0x57, 0x4D, 0x3D, 0x72, 0x62, 0x56, 0x86, 0x71, 0x68, 0xB3, 0x9D, 0x96, 0xCD, 0xB9, 
   0xB5, 0x8A, 0x7A, 0x78, 0x58, 0x4F, 0x49, 0x73, 0x67, 0x62, 0x85, 0x76, 0x70, 0xA3, 0x90, 0x8C, 
   0x93, 0x7B, 0x77, 0xA6, 0x8B, 0x88, 0xB4, 0x9A, 0x97, 0xB4, 0x9C, 0x98, 0xB9, 0xA1, 0x9C, 0xC4, 
   0xAC, 0xA8, 0xB2, 0x9A, 0x96, 0xAF, 0x97, 0x93, 0x95, 0x7D, 0x79, 0x81, 0x65, 0x64, 0x78, 0x5D, 
   0x5C, 0xB5, 0x9B, 0x9B, 0xC7, 0xAF, 0xAE, 0xC3, 0xAC, 0xAA, 0xC8, 0xB2, 0xB1, 0xAD, 0x96, 0x93, 
   0xCA, 0xB2, 0xAE, 0xD6, 0xBD, 0xB9, 0xCA, 0xAF, 0xAB, 0xB1, 0x94, 0x90, 0xB9, 0x9C, 0x98, 0xC9, 
   0xAC, 0xA7, 0xD7, 0xB4, 0xAE, 0xD8, 0xB5, 0xAF, 0xCB, 0xAC, 0xA5, 0xA6, 0x8A, 0x83, 0xA9, 0x8F, 
   0x88, 0xA9, 0x93, 0x8B, 0x9C, 0x83, 0x7D, 0x9D, 0x81, 0x7D, 0xA3, 0x87, 0x83, 0xDE, 0xC4, 0xC0, 
   0xF1, 0xD9, 0xD5, 0xDF, 0xC9, 0xC4, 0xE5, 0xCE, 0xCA, 0xF0, 0xD6, 0xD2, 0xFB, 0xE5, 0xE1, 0xDB, 
   0xC8, 0xC3, 0x87, 0x73, 0x6E, 0x5A, 0x4A, 0x44, 0x4E, 0x3F, 0x39, 0x49, 0x3A, 0x33, 0x4B, 0x3C, 
   0x33, 0x47, 0x38, 0x30, 0x44, 0x35, 0x2C, 0x41, 0x32, 0x29, 0x62, 0x52, 0x4A, 0x66, 0x57, 0x4F, 
   0x45, 0x3F, 0x36, 0x42, 0x3C, 0x34, 0x41, 0x38, 0x30, 0x4E, 0x44, 0x3D, 0x4A, 0x3F, 0x37, 0x3D, 
   0x30, 0x28, 0x3C, 0x2F, 0x28, 0x3C, 0x30, 0x2B, 0x38, 0x2C, 0x27, 0x35, 0x29, 0x24, 0x36, 0x2A, 
   0x25, 0x35, 0x2A, 0x24, 0x32, 0x26, 0x21, 0x35, 0x2C, 0x20, 0x34, 0x2B, 0x1F, 0x3B, 0x32, 0x26, 
   0x37, 0x2E, 0x22, 0x34, 0x2A, 0x1E, 0x2F, 0x25, 0x19, 0x2F, 0x24, 0x1B, 0x32, 0x26, 0x20, 0x39, 
   0x2D, 0x27, 0x2F, 0x23, 0x1D, 0x44, 0x38, 0x32, 0x45, 0x39, 0x33, 0x3A, 0x2E, 0x28, 0x43, 0x37, 
   0x31, 0x36, 0x2A, 0x24, 0x35, 0x29, 0x23, 0x33, 0x27, 0x21, 0x39, 0x2D, 0x27, 0x37, 0x2B, 0x25, 
   0x38, 0x2B, 0x25, 0x3C, 0x2E, 0x28, 0x95, 0x84, 0x82, 0xE4, 0xD3, 0xD0, 0xF7, 0xE4, 0xDF, 0xF2, 
   0xDC, 0xD7, 0xF1, 0xDA, 0xD4, 0xF8, 0xDF, 0xD9, 0xFC, 0xE4, 0xDC, 0xF6, 0xDF, 0xD8, 0xF4, 0xDF, 
   0xD9, 0xEB, 0xD9, 0xD7, 0xEA, 0xDB, 0xD9, 0x86, 0x7B, 0x7B, 0x94, 0x8C, 0x8E, 0xCA, 0xC7, 0xCA, 
   0xD6, 0xD5, 0xD8, 0xA7, 0xA5, 0xA7, 0x80, 0x7D, 0x7E, 0x94, 0x8F, 0x90, 0xAF, 0xA9, 0xAA, 0x72, 
   0x70, 0x70, 0xB3, 0xB3, 0xB4, 0xC5, 0xC4, 0xC5, 0xCB, 0xC8, 0xCA, 0x84, 0x80, 0x82, 0x62, 0x5E, 
   0x60, 0x74, 0x6F, 0x71, 0x5A, 0x5E, 0x61, 0x7C, 0x84, 0x89, 0x98, 0x9D, 0xA2, 0x8C, 0x8D, 0x91, 
   0xAE, 0xA8, 0xAE, 0x9A, 0x8F, 0x96, 0xD1, 0xC3, 0xC9, 0xFB, 0xF1, 0xEE, 0xF9, 0xF2, 0xEF, 0xBF, 
   0xB8, 0xB7, 0x63, 0x60, 0x5F, 0x8B, 0x8A, 0x8A, 0xEF, 0xF0, 0xF0, 0x6E, 0x71, 0x71, 0x57, 0x5A, 
   0x5B, 0x62, 0x66, 0x67, 0x5A, 0x5E, 0x5F, 0x75, 0x7B, 0x7C, 0x6E, 0x76, 0x76, 0x5F, 0x68, 0x68, 
   0x58, 0x60, 0x62, 0x62, 0x6B, 0x6C, 0x63, 0x6B, 0x6B, 0x55, 0x5A, 0x58, 0x86, 0x82, 0x7F, 0x7D, 
   0x72, 0x6E, 0x64, 0x57, 0x50, 0x4D, 0x40, 0x39, 0x62, 0x56, 0x50, 0x6A, 0x61, 0x5B, 0x72, 0x6B, 
   0x67, 0x4D, 0x48, 0x44, 0x46, 0x43, 0x3E, 0x65, 0x61, 0x5F, 0x7D, 0x7A, 0x79, 0x67, 0x64, 0x63, 
   0x62, 0x61, 0x60, 0x47, 0x48, 0x46, 0x49, 0x4C, 0x4A, 0x49, 0x4C, 0x4B, 0x43, 0x45, 0x45, 0x4C, 
   0x4E, 0x4E, 0x42, 0x46, 0x47, 0x47, 0x4C, 0x4E, 0x41, 0x47, 0x4B, 0x49, 0x4F, 0x54, 0x4F, 0x55, 
   0x59, 0x58, 0x5F, 0x62, 0x4C, 0x53, 0x57, 0x4C, 0x52, 0x56, 0x44, 0x4A, 0x4E, 0x55, 0x5C, 0x60, 
   0x49, 0x4C, 0x50, 0x57, 0x56, 0x5A, 0x4A, 0x4C, 0x4E, 0x50, 0x50, 0x53, 0x9E, 0x99, 0x9A, 0xCA, 
   0xBF, 0xC0, 0xE0, 0xD2, 0xD3, 0xA8, 0x9A, 0x98, 0xCD, 0xC0, 0xBE, 0xFC, 0xF0, 0xEE, 0xF4, 0xEB, 
   0xE9, 0xEF, 0xE0, 0xDF, 0xAB, 0x96, 0x95, 0x81, 0x72, 0x6F, 0x8E, 0x86, 0x82, 0xED, 0xE4, 0xE0, 
   0xF1, 0xE3, 0xDE, 0xF8, 0xE8, 0xE1, 0xF6, 0xE3, 0xDC, 0xED, 0xD9, 0xD2, 0xE9, 0xD2, 0xCD, 0xE7, 
   0xCD, 0xC8, 0xF1, 0xD8, 0xD1, 0xD7, 0xB8, 0xB0, 0xA7, 0x84, 0x7A, 0x96, 0x71, 0x65, 0x9F, 0x77, 
   0x69, 0xA2, 0x78, 0x67, 0x95, 0x6B, 0x5A, 0x94, 0x6B, 0x5A, 0x95, 0x69, 0x59, 0x97, 0x6B, 0x5A, 
   0x9D, 0x6F, 0x5E, 0x94, 0x6B, 0x55, 0x93, 0x69, 0x53, 0x93, 0x66, 0x50, 0x92, 0x64, 0x4E, 0x93, 
   0x63, 0x4D, 0x96, 0x64, 0x4D, 0x95, 0x65, 0x4F, 0x92, 0x64, 0x4F, 0x91, 0x63, 0x4E, 0x91, 0x63, 
   0x4E, 0x90, 0x62, 0x4D, 0x8D, 0x5E, 0x49, 0x8C, 0x5E, 0x49, 0x8F, 0x5F, 0x47, 0x8F, 0x5E, 0x47, 
   0x8D, 0x5D, 0x45, 0x8E, 0x5E, 0x46, 0x8F, 0x5F, 0x47, 0x8F, 0x5F, 0x47, 0x8F, 0x5F, 0x49, 0x8F, 
   0x5E, 0x4A, 0x8F, 0x5E, 0x4A, 0x8F, 0x5E, 0x4A, 0x8D, 0x5C, 0x47, 0x8C, 0x5B, 0x46, 0x8A, 0x59, 
   0x45, 0x8E, 0x5C, 0x46, 0x8E, 0x5D, 0x46, 0x8D, 0x5B, 0x45, 0x8B, 0x59, 0x43, 0x8A, 0x58, 0x41, 
   0x89, 0x58, 0x41, 0x89, 0x58, 0x3F, 0x89, 0x59, 0x3D, 0x87, 0x56, 0x3B, 0x87, 0x57, 0x3C, 0x85, 
   0x55, 0x3A, 0x84, 0x54, 0x39, 0x84, 0x54, 0x38, 0x84, 0x54, 0x36, 0x86, 0x53, 0x35, 0x89, 0x52, 
   0x37, 0x8A, 0x51, 0x39, 0x88, 0x52, 0x3A, 0x85, 0x53, 0x3C, 0x83, 0x56, 0x3E, 0x81, 0x58, 0x3F, 
   0x7D, 0x56, 0x3F, 0x79, 0x54, 0x40, 0x79, 0x56, 0x45, 0x71, 0x51, 0x42, 0x7F, 0x61, 0x53, 0x6E, 
   0x58, 0x47, 0x6B, 0x58, 0x47, 0x78, 0x5F, 0x51, 0x61, 0x43, 0x38, 0x9A, 0x7E, 0x76, 0x7B, 0x61, 
   0x5B, 0x8F, 0x78, 0x72, 0xD6, 0xC5, 0xBC, 0xD6, 0xC4, 0xBC, 0xBB, 0xA6, 0x9E, 0xA5, 0x8E, 0x86, 
   0x9B, 0x82, 0x7A, 0x77, 0x5C, 0x54, 0xA2, 0x87, 0x81, 0xCF, 0xB4, 0xAF, 0xE2, 0xC6, 0xC2, 0xC8, 
   0xAD, 0xA8, 0xB9, 0x9E, 0x99, 0xD4, 0xB8, 0xB4, 0xDB, 0xBF, 0xBB, 0xC3, 0xA6, 0xA3, 0xC5, 0xA8, 
   0xA4, 0xAD, 0x91, 0x8D, 0x91, 0x76, 0x72, 0x98, 0x7C, 0x79, 0xA9, 0x8E, 0x8A, 0xAB, 0x8F, 0x8B, 
   0xC2, 0xA4, 0xA0, 0xA5, 0x87, 0x84, 0xA5, 0x86, 0x82, 0xC7, 0xA8, 0xA5, 0xBB, 0x9C, 0x98, 0xB6, 
   0x96, 0x93, 0xD2, 0xAD, 0xA8, 0xD7, 0xB3, 0xAE, 0xCE, 0xAD, 0xA7, 0x94, 0x78, 0x71, 0xA1, 0x89, 
   0x81, 0x93, 0x7F, 0x76, 0xAC, 0x95, 0x8F, 0xE5, 0xC9, 0xC6, 0xEF, 0xD6, 0xD2, 0xE6, 0xCD, 0xC9, 
   0xEF, 0xD8, 0xD3, 0xF5, 0xE0, 0xDB, 0xEB, 0xD5, 0xD0, 0xE2, 0xCC, 0xC8, 0xA8, 0x95, 0x90, 0x5D, 
   0x49, 0x44, 0x48, 0x37, 0x31, 0x5C, 0x4C, 0x46, 0x4E, 0x40, 0x3A, 0x46, 0x38, 0x30, 0x5F, 0x4F, 
   0x45, 0x5D, 0x4D, 0x43, 0x57, 0x47, 0x3D, 0x48, 0x38, 0x2E, 0x50, 0x40, 0x35, 0x6B, 0x5B, 0x51, 
   0x45, 0x3D, 0x35, 0x49, 0x41, 0x38, 0x43, 0x39, 0x31, 0x45, 0x3A, 0x32, 0x43, 0x38, 0x30, 0x41, 
   0x34, 0x2B, 0x3C, 0x2F, 0x28, 0x3A, 0x2E, 0x28, 0x3D, 0x31, 0x2B, 0x38, 0x2C, 0x26, 0x32, 0x26, 
   0x20, 0x34, 0x28, 0x22, 0x39, 0x2D, 0x27, 0x38, 0x2C, 0x22, 0x36, 0x2A, 0x1F, 0x38, 0x2D, 0x22, 
   0x30, 0x24, 0x1A, 0x35, 0x29, 0x1F, 0x38, 0x2C, 0x21, 0x36, 0x2A, 0x22, 0x33, 0x27, 0x22, 0x37, 
   0x2B, 0x25, 0x3E, 0x32, 0x2C, 0x4B, 0x3F, 0x39, 0x4B, 0x3F, 0x39, 0x3F, 0x33, 0x2D, 0x48, 0x3C, 
   0x36, 0x37, 0x2B, 0x25, 0x30, 0x24, 0x1E, 0x32, 0x26, 0x20, 0x3B, 0x2F, 0x29, 0x3B, 0x2F, 0x29, 
   0x32, 0x25, 0x1F, 0x35, 0x27, 0x21, 0xE6, 0xD1, 0xCE, 0xEE, 0xD7, 0xD6, 0xF3, 0xDD, 0xD8, 0xF3, 
   0xDD, 0xD7, 0xF8, 0xE1, 0xDB, 0xF7, 0xE0, 0xD8, 0xF5, 0xDF, 0xD7, 0xF3, 0xE0, 0xD9, 0xE6, 0xD6, 
   0xD0, 0xD1, 0xC5, 0xC2, 0xE1, 0xD8, 0xD6, 0x82, 0x7D, 0x7D, 0xD4, 0xD1, 0xD4, 0xC7, 0xC8, 0xCC, 
   0x8A, 0x8C, 0x91, 0x71, 0x71, 0x75, 0x70, 0x6F, 0x72, 0x98, 0x96, 0x97, 0xC8, 0xC4, 0xC4, 0xAB, 
   0xAA, 0xA9, 0xFB, 0xFE, 0xFF, 0xCD, 0xCF, 0xD0, 0x6E, 0x6E, 0x70, 0x45, 0x43, 0x45, 0x5F, 0x5B, 
   0x5D, 0x89, 0x84, 0x85, 0x9A, 0x9A, 0x9C, 0xBB, 0xBC, 0xBF, 0x8A, 0x88, 0x8B, 0x9F, 0x9A, 0x9D, 
   0xC3, 0xBD, 0xC0, 0xA6, 0x9C, 0xA0, 0xDF, 0xD4, 0xD7, 0xE9, 0xE0, 0xDD, 0xF3, 0xEB, 0xE8, 0xAB, 
   0xA5, 0xA4, 0x6B, 0x68, 0x67, 0x93, 0x92, 0x92, 0x7A, 0x7B, 0x7B, 0x4A, 0x4D, 0x4E, 0x57, 0x5B, 
   0x5C, 0x5B, 0x60, 0x61, 0x6F, 0x74, 0x75, 0x7E, 0x86, 0x86, 0x68, 0x70, 0x70, 0x52, 0x5C, 0x5C, 
   0x6F, 0x75, 0x78, 0x56, 0x5D, 0x5E, 0x60, 0x65, 0x64, 0x67, 0x67, 0x65, 0xA8, 0xA3, 0x9F, 0xB5, 
   0xA7, 0xA1, 0x76, 0x66, 0x5F, 0x57, 0x4A, 0x42, 0x70, 0x63, 0x5C, 0x76, 0x6C, 0x67, 0x71, 0x69, 
   0x65, 0x51, 0x4C, 0x49, 0x45, 0x41, 0x3F, 0x52, 0x4E, 0x4D, 0x4D, 0x49, 0x48, 0x53, 0x4F, 0x4E, 
   0x4D, 0x4B, 0x4A, 0x3F, 0x3F, 0x3D, 0x50, 0x51, 0x4F, 0x4A, 0x4C, 0x4B, 0x3A, 0x3C, 0x3C, 0x44, 
   0x46, 0x46, 0x48, 0x4C, 0x4D, 0x47, 0x4C, 0x4E, 0x46, 0x4C, 0x4F, 0x47, 0x4D, 0x52, 0x4C, 0x52, 
   0x56, 0x58, 0x5F, 0x62, 0x48, 0x4F, 0x52, 0x4B, 0x52, 0x55, 0x4D, 0x54, 0x57, 0x46, 0x4D, 0x50, 
   0x44, 0x46, 0x49, 0x54, 0x53, 0x56, 0x44, 0x45, 0x47, 0x61, 0x5F, 0x60, 0xBE, 0xB9, 0xB9, 0xC2, 
   0xB6, 0xB7, 0xEF, 0xDC, 0xDC, 0xD1, 0xC0, 0xBF, 0xF1, 0xE4, 0xE2, 0xFA, 0xEF, 0xED, 0xF7, 0xEB, 
   0xE9, 0xEE, 0xE0, 0xDE, 0xAE, 0x98, 0x98, 0x96, 0x85, 0x83, 0xBD, 0xB3, 0xAF, 0xE2, 0xD6, 0xD1, 
   0xE8, 0xD7, 0xD1, 0xF5, 0xE0, 0xD9, 0xFB, 0xE5, 0xDD, 0xEF, 0xD7, 0xCF, 0xF9, 0xE0, 0xD9, 0xF9, 
   0xDC, 0xD4, 0xE5, 0xC4, 0xBB, 0xB0, 0x8C, 0x80, 0xA2, 0x79, 0x6B, 0x97, 0x6D, 0x5D, 0x98, 0x6C, 
   0x59, 0x92, 0x67, 0x53, 0x92, 0x66, 0x52, 0x95, 0x66, 0x52, 0x96, 0x66, 0x53, 0x99, 0x68, 0x55, 
   0x9A, 0x68, 0x54, 0x92, 0x67, 0x50, 0x91, 0x66, 0x4F, 0x91, 0x64, 0x4D, 0x90, 0x61, 0x4B, 0x8F, 
   0x60, 0x4A, 0x92, 0x60, 0x4A, 0x91, 0x61, 0x4C, 0x8E, 0x60, 0x4A, 0x8E, 0x5E, 0x49, 0x8D, 0x5E, 
   0x49, 0x8D, 0x5E, 0x49, 0x8B, 0x5C, 0x47, 0x8C, 0x5D, 0x47, 0x8D, 0x5D, 0x45, 0x8C, 0x5C, 0x44, 
   0x8B, 0x5B, 0x43, 0x8B, 0x5B, 0x43, 0x8C, 0x5C, 0x44, 0x8C, 0x5C, 0x44, 0x8D, 0x5C, 0x45, 0x8C, 
   0x5B, 0x46, 0x8C, 0x5B, 0x46, 0x8C, 0x5B, 0x46, 0x8B, 0x59, 0x45, 0x8A, 0x58, 0x44, 0x89, 0x57, 
   0x42, 0x8B, 0x59, 0x42, 0x8C, 0x5A, 0x43, 0x8B, 0x59, 0x42, 0x89, 0x57, 0x40, 0x88, 0x56, 0x3F, 
   0x88, 0x56, 0x3F, 0x87, 0x56, 0x3C, 0x86, 0x56, 0x3A, 0x85, 0x55, 0x39, 0x84, 0x54, 0x38, 0x83, 
   0x53, 0x37, 0x83, 0x53, 0x37, 0x83, 0x53, 0x37, 0x82, 0x53, 0x35, 0x83, 0x52, 0x34, 0x87, 0x51, 
   0x35, 0x89, 0x52, 0x37, 0x87, 0x50, 0x37, 0x85, 0x50, 0x38, 0x83, 0x53, 0x3A, 0x7F, 0x52, 0x37, 
   0x81, 0x54, 0x3B, 0x81, 0x55, 0x3D, 0x79, 0x4D, 0x38, 0x7A, 0x51, 0x3B, 0x79, 0x50, 0x3B, 0x7A, 
   0x59, 0x44, 0x74, 0x54, 0x41, 0x78, 0x53, 0x42, 0x7C, 0x54, 0x47, 0x6B, 0x46, 0x3B, 0x56, 0x35, 
   0x2D, 0x82, 0x64, 0x5B, 0xB8, 0x9D, 0x92, 0x98, 0x7C, 0x71, 0xB4, 0x99, 0x8E, 0x8D, 0x72, 0x67, 
   0x6E, 0x53, 0x47, 0x69, 0x4E, 0x42, 0x85, 0x68, 0x5F, 0x9D, 0x7F, 0x7A, 0xA9, 0x8A, 0x85, 0xC7, 
   0xA8, 0xA3, 0xCC, 0xAE, 0xA9, 0xE9, 0xCB, 0xC5, 0xEC, 0xCE, 0xC9, 0xEB, 0xCC, 0xC6, 0xE4, 0xC5, 
   0xBF, 0xE4, 0xC4, 0xBD, 0xD6, 0xB7, 0xB0, 0xCE, 0xAE, 0xA7, 0xCC, 0xAC, 0xA5, 0xD6, 0xB4, 0xB0, 
   0xD1, 0xAE, 0xAB, 0xCF, 0xAC, 0xA9, 0xC5, 0xA2, 0x9F, 0xD0, 0xAD, 0xAA, 0xCD, 0xA9, 0xA7, 0xDB, 
   0xB8, 0xB4, 0xDE, 0xB7, 0xB3, 0xE5, 0xC0, 0xBB, 0xE1, 0xBF, 0xB9, 0xDA, 0xBE, 0xB7, 0xB4, 0x9D, 
   0x96, 0xA8, 0x96, 0x8D, 0xD9, 0xC2, 0xBC, 0xEA, 0xD0, 0xCC, 0xE8, 0xCF, 0xCB, 0xF0, 0xD9, 0xD4, 
   0xDC, 0xC7, 0xC2, 0xA4, 0x90, 0x8B, 0x7B, 0x67, 0x62, 0x57, 0x46, 0x40, 0x3D, 0x2B, 0x26, 0x41, 
   0x30, 0x2B, 0x4E, 0x3F, 0x39, 0x48, 0x39, 0x33, 0x49, 0x39, 0x34, 0x4A, 0x39, 0x30, 0x58, 0x46, 
   0x39, 0x6C, 0x5B, 0x4F, 0x64, 0x52, 0x46, 0x59, 0x47, 0x3C, 0x64, 0x52, 0x46, 0x69, 0x57, 0x4C, 
   0x4A, 0x3E, 0x35, 0x46, 0x3B, 0x32, 0x47, 0x3B, 0x33, 0x40, 0x34, 0x2B, 0x4E, 0x41, 0x39, 0x46, 
   0x39, 0x31, 0x3F, 0x33, 0x2B, 0x39, 0x2D, 0x26, 0x3B, 0x2F, 0x28, 0x40, 0x34, 0x2E, 0x3A, 0x2F, 
   0x28, 0x36, 0x2A, 0x24, 0x37, 0x2B, 0x24, 0x36, 0x29, 0x20, 0x39, 0x2C, 0x23, 0x36, 0x29, 0x21, 
   0x35, 0x28, 0x1F, 0x38, 0x2B, 0x22, 0x3A, 0x2D, 0x24, 0x36, 0x2A, 0x23, 0x3C, 0x30, 0x2A, 0x37, 
   0x2B, 0x25, 0x4B, 0x3F, 0x39, 0x3B, 0x2F, 0x29, 0x3E, 0x32, 0x2C, 0x46, 0x3A, 0x34, 0x48, 0x3C, 
   0x36, 0x3B, 0x2F, 0x29, 0x30, 0x24, 0x1E, 0x30, 0x24, 0x1E, 0x39, 0x2D, 0x27, 0x38, 0x2C, 0x26, 
   0x2E, 0x21, 0x1B, 0x46, 0x38, 0x32, 0xF8, 0xE1, 0xDF, 0xF2, 0xDA, 0xD9, 0xF4, 0xDD, 0xDA, 0xF4, 
   0xDD, 0xD7, 0xF8, 0xE0, 0xDA, 0xF6, 0xDF, 0xD7, 0xF4, 0xDE, 0xD6, 0xE5, 0xD5, 0xCD, 0xD9, 0xCD, 
   0xC6, 0xF3, 0xEC, 0xE8, 0xB2, 0xAE, 0xAD, 0x9E, 0x9E, 0x9F, 0xB7, 0xB8, 0xBB, 0x63, 0x67, 0x6C, 
   0x69, 0x6E, 0x74, 0x60, 0x62, 0x67, 0x81, 0x82, 0x85, 0xE1, 0xE0, 0xE1, 0xF5, 0xF2, 0xF1, 0xF2, 
   0xF1, 0xF1, 0x9A, 0x9F, 0xA1, 0x5E, 0x62, 0x64, 0x50, 0x53, 0x54, 0x51, 0x50, 0x52, 0x6C, 0x68, 
   0x6B, 0x8C, 0x87, 0x8A, 0x84, 0x7F, 0x80, 0xDC, 0xD8, 0xD8, 0xDC, 0xD5, 0xD5, 0xCD, 0xC5, 0xC5, 
   0xE7, 0xDF, 0xE0, 0xAE, 0xA3, 0xA5, 0xE5, 0xDC, 0xDD, 0xCC, 0xC4, 0xC1, 0xE2, 0xDB, 0xD8, 0x83, 
   0x7E, 0x7C, 0x9E, 0x9C, 0x9B, 0x7E, 0x7E, 0x7E, 0x64, 0x66, 0x66, 0x4C, 0x4F, 0x50, 0x4F, 0x53, 
   0x54, 0x55, 0x5A, 0x5B, 0x62, 0x69, 0x6A, 0x60, 0x69, 0x69, 0x54, 0x5E, 0x5E, 0x54, 0x5E, 0x5E, 
   0x62, 0x67, 0x6B, 0x45, 0x4B, 0x4D, 0x7B, 0x7F, 0x7E, 0x78, 0x74, 0x70, 0xC8, 0xBD, 0xB9, 0xFF, 
   0xF6, 0xEF, 0x9E, 0x8D, 0x85, 0x55, 0x48, 0x3F, 0x5C, 0x4F, 0x47, 0x81, 0x77, 0x71, 0x6B, 0x64, 
   0x60, 0x45, 0x41, 0x3F, 0x50, 0x4B, 0x4A, 0x4C, 0x47, 0x46, 0x40, 0x3B, 0x3A, 0x47, 0x43, 0x42, 
   0x48, 0x46, 0x45, 0x43, 0x43, 0x41, 0x42, 0x43, 0x41, 0x3F, 0x40, 0x3F, 0x43, 0x45, 0x45, 0x3F, 
   0x41, 0x41, 0x45, 0x49, 0x4A, 0x45, 0x4A, 0x4C, 0x4C, 0x52, 0x55, 0x4C, 0x52, 0x57, 0x4F, 0x55, 
   0x59, 0x4C, 0x53, 0x56, 0x48, 0x4F, 0x52, 0x4D, 0x54, 0x57, 0x4D, 0x54, 0x57, 0x4C, 0x54, 0x57, 
   0x51, 0x53, 0x55, 0x55, 0x52, 0x54, 0x61, 0x60, 0x61, 0xB4, 0xB1, 0xB1, 0xAE, 0xA5, 0xA6, 0xCC, 
   0xBD, 0xBD, 0xEA, 0xD5, 0xD4, 0xF3, 0xE1, 0xE0, 0xF6, 0xE9, 0xE7, 0xE9, 0xDF, 0xDC, 0xFF, 0xF9, 
   0xF7, 0xEA, 0xDB, 0xD9, 0xD2, 0xBB, 0xBB, 0xA3, 0x90, 0x8F, 0xD5, 0xC8, 0xC5, 0xCA, 0xB9, 0xB4, 
   0xF2, 0xDE, 0xD8, 0xF1, 0xDA, 0xD3, 0xEA, 0xD1, 0xCA, 0xF5, 0xD9, 0xD3, 0xE6, 0xC9, 0xC2, 0xC8, 
   0xA6, 0x9C, 0xAC, 0x87, 0x7B, 0x9B, 0x72, 0x63, 0x95, 0x68, 0x55, 0x93, 0x62, 0x4F, 0x94, 0x65, 
   0x50, 0x92, 0x65, 0x4F, 0x93, 0x63, 0x4E, 0x97, 0x65, 0x50, 0x99, 0x64, 0x50, 0x9D, 0x68, 0x53, 
   0x9D, 0x67, 0x52, 0x90, 0x64, 0x4D, 0x8F, 0x63, 0x4C, 0x8E, 0x61, 0x4A, 0x8E, 0x5F, 0x49, 0x8D, 
   0x5E, 0x4A, 0x90, 0x5F, 0x4B, 0x8F, 0x5E, 0x4A, 0x8C, 0x5D, 0x47, 0x8B, 0x5C, 0x46, 0x8B, 0x5C, 
   0x46, 0x8A, 0x5B, 0x45, 0x89, 0x5A, 0x44, 0x8A, 0x5B, 0x45, 0x8D, 0x5D, 0x45, 0x8C, 0x5C, 0x44, 
   0x8B, 0x5B, 0x43, 0x8B, 0x5B, 0x43, 0x8B, 0x5B, 0x43, 0x8B, 0x5B, 0x43, 0x8B, 0x5A, 0x43, 0x8A, 
   0x59, 0x43, 0x8A, 0x59, 0x43, 0x8A, 0x59, 0x43, 0x8B, 0x5A, 0x44, 0x8B, 0x5A, 0x44, 0x89, 0x57, 
   0x41, 0x89, 0x57, 0x40, 0x8A, 0x58, 0x41, 0x88, 0x56, 0x3F, 0x87, 0x55, 0x3E, 0x88, 0x56, 0x3F, 
   0x87, 0x54, 0x3E, 0x84, 0x53, 0x3A, 0x83, 0x54, 0x37, 0x83, 0x53, 0x37, 0x81, 0x51, 0x35, 0x81, 
   0x51, 0x35, 0x82, 0x52, 0x36, 0x83, 0x53, 0x37, 0x7F, 0x53, 0x34, 0x7F, 0x52, 0x33, 0x84, 0x51, 
   0x33, 0x87, 0x50, 0x34, 0x87, 0x50, 0x35, 0x84, 0x51, 0x36, 0x84, 0x52, 0x38, 0x82, 0x52, 0x36, 
   0x84, 0x53, 0x37, 0x85, 0x53, 0x38, 0x84, 0x52, 0x37, 0x83, 0x51, 0x35, 0x86, 0x54, 0x37, 0x7F, 
   0x51, 0x39, 0x80, 0x51, 0x3D, 0x82, 0x51, 0x3E, 0x83, 0x52, 0x42, 0x7F, 0x52, 0x44, 0x72, 0x4C, 
   0x40, 0x70, 0x4C, 0x41, 0x78, 0x53, 0x46, 0x6F, 0x4B, 0x3D, 0x74, 0x53, 0x45, 0x84, 0x65, 0x58, 
   0x6A, 0x4D, 0x3F, 0x6A, 0x50, 0x40, 0x67, 0x4A, 0x3F, 0x7D, 0x5C, 0x56, 0x76, 0x56, 0x4F, 0xB1, 
   0x91, 0x8A, 0xD2, 0xB2, 0xAB, 0xCD, 0xAC, 0xA6, 0xCA, 0xAA, 0xA3, 0xDB, 0xBC, 0xB2, 0xDD, 0xBC, 
   0xB3, 0xD0, 0xAF, 0xA6, 0xD9, 0xB7, 0xAE, 0xDC, 0xB9, 0xB0, 0xDC, 0xB8, 0xAF, 0xDF, 0xB8, 0xB3, 
   0xE4, 0xBB, 0xBA, 0xDC, 0xB5, 0xB3, 0xDE, 0xB7, 0xB5, 0xDD, 0xB6, 0xB5, 0xE0, 0xBA, 0xB8, 0xE6, 
   0xBF, 0xBD, 0xEA, 0xC3, 0xBF, 0xEB, 0xC5, 0xBF, 0xD5, 0xB2, 0xAC, 0xDC, 0xC0, 0xB9, 0xEC, 0xD6, 
   0xCE, 0xBD, 0xAC, 0xA3, 0xCC, 0xB6, 0xB0, 0xBA, 0xA0, 0x9D, 0x99, 0x80, 0x7C, 0x86, 0x70, 0x6B, 
   0x60, 0x4C, 0x46, 0x42, 0x2E, 0x29, 0x64, 0x51, 0x4C, 0x5D, 0x52, 0x4B, 0x3F, 0x33, 0x2C, 0x3E, 
   0x31, 0x2A, 0x45, 0x35, 0x2F, 0x40, 0x2F, 0x29, 0x54, 0x40, 0x3C, 0x48, 0x34, 0x2B, 0x51, 0x3D, 
   0x2F, 0x60, 0x4C, 0x3F, 0x68, 0x55, 0x47, 0x63, 0x50, 0x42, 0x70, 0x5C, 0x4E, 0x71, 0x5D, 0x50, 
   0x56, 0x45, 0x3C, 0x44, 0x33, 0x2B, 0x49, 0x39, 0x30, 0x41, 0x31, 0x28, 0x5E, 0x51, 0x48, 0x54, 
   0x47, 0x3D, 0x3C, 0x30, 0x27, 0x3A, 0x2F, 0x27, 0x32, 0x28, 0x1F, 0x39, 0x2E, 0x26, 0x35, 0x2A, 
   0x22, 0x34, 0x29, 0x21, 0x3B, 0x30, 0x28, 0x3D, 0x30, 0x28, 0x3A, 0x2D, 0x26, 0x33, 0x25, 0x1E, 
   0x3E, 0x31, 0x29, 0x38, 0x2A, 0x23, 0x36, 0x29, 0x22, 0x33, 0x27, 0x20, 0x2F, 0x23, 0x1D, 0x38, 
   0x2C, 0x26, 0x43, 0x37, 0x31, 0x3C, 0x30, 0x2A, 0x36, 0x2A, 0x24, 0x44, 0x38, 0x32, 0x45, 0x39, 
   0x33, 0x3C, 0x30, 0x2A, 0x34, 0x28, 0x22, 0x32, 0x26, 0x20, 0x38, 0x2C, 0x26, 0x3B, 0x2F, 0x29, 
   0x31, 0x24, 0x1E, 0x31, 0x23, 0x1D, 0xF3, 0xD9, 0xD9, 0xF6, 0xDC, 0xDA, 0xF6, 0xDD, 0xDA, 0xF4, 
   0xDC, 0xD8, 0xEF, 0xDA, 0xD5, 0xF9, 0xE4, 0xDE, 0xE4, 0xD2, 0xCB, 0xD2, 0xC7, 0xBF, 0xEF, 0xE8, 
   0xE1, 0xC8, 0xC4, 0xC0, 0x94, 0x94, 0x92, 0x98, 0x9B, 0x9D, 0x57, 0x5B, 0x5F, 0x67, 0x6D, 0x72, 
   0x6B, 0x72, 0x79, 0x79, 0x7D, 0x81, 0xC1, 0xC4, 0xC6, 0xF4, 0xF4, 0xF5, 0xCF, 0xCD, 0xCB, 0xAB, 
   0xAB, 0xAC, 0x63, 0x69, 0x6C, 0x5E, 0x63, 0x67, 0x60, 0x62, 0x66, 0x62, 0x62, 0x66, 0x5B, 0x58, 
   0x5D, 0x61, 0x5B, 0x61, 0xC4, 0xBD, 0xBF, 0xFF, 0xFC, 0xFC, 0xBC, 0xB2, 0xB2, 0xC7, 0xBC, 0xBC, 
   0xF4, 0xE9, 0xE9, 0xEE, 0xE3, 0xE4, 0xC9, 0xC0, 0xC0, 0xCD, 0xC5, 0xC2, 0xE8, 0xE4, 0xE1, 0x83, 
   0x7F, 0x7D, 0x77, 0x76, 0x75, 0x60, 0x61, 0x61, 0x6E, 0x71, 0x71, 0x5A, 0x5E, 0x5F, 0x71, 0x77, 
   0x78, 0x58, 0x5E, 0x5E, 0x73, 0x7B, 0x7B, 0x9F, 0xA8, 0xA8, 0x54, 0x5D, 0x5D, 0x73, 0x7B, 0x7C, 
   0x54, 0x56, 0x5A, 0x4D, 0x4F, 0x51, 0x77, 0x77, 0x76, 0x8F, 0x89, 0x85, 0xE3, 0xD7, 0xD1, 0xFF, 
   0xEA, 0xE3, 0xCB, 0xB8, 0xAF, 0x67, 0x58, 0x50, 0x48, 0x3A, 0x33, 0x51, 0x46, 0x41, 0x51, 0x48, 
   0x46, 0x54, 0x4E, 0x4D, 0x57, 0x52, 0x51, 0x4E, 0x49, 0x47, 0x49, 0x45, 0x43, 0x48, 0x44, 0x42, 
   0x46, 0x43, 0x42, 0x49, 0x47, 0x46, 0x42, 0x43, 0x41, 0x42, 0x44, 0x43, 0x43, 0x45, 0x45, 0x3F, 
   0x40, 0x40, 0x43, 0x48, 0x48, 0x3E, 0x43, 0x45, 0x4A, 0x50, 0x53, 0x4F, 0x55, 0x59, 0x54, 0x5B, 
   0x5F, 0x4F, 0x56, 0x59, 0x44, 0x4B, 0x4E, 0x4E, 0x55, 0x58, 0x48, 0x4F, 0x52, 0x4D, 0x53, 0x57, 
   0x54, 0x56, 0x58, 0x56, 0x52, 0x54, 0xA9, 0xA6, 0xA6, 0xAE, 0xA8, 0xA8, 0x8E, 0x83, 0x83, 0xE2, 
   0xCF, 0xD0, 0xF3, 0xDC, 0xDD, 0xFF, 0xF9, 0xF9, 0xCC, 0xC0, 0xBE, 0x96, 0x8B, 0x89, 0x9B, 0x92, 
   0x8F, 0x8D, 0x7F, 0x7D, 0xC5, 0xAE, 0xAE, 0xCD, 0xB9, 0xB8, 0xD9, 0xC9, 0xC6, 0xED, 0xD8, 0xD3, 
   0xF6, 0xDE, 0xD9, 0xEA, 0xD1, 0xCA, 0xEE, 0xD3, 0xCB, 0xD4, 0xB6, 0xAF, 0xC0, 0x9E, 0x94, 0xA3, 
   0x7E, 0x72, 0x93, 0x6B, 0x5D, 0x8D, 0x63, 0x51, 0x91, 0x63, 0x4D, 0x94, 0x61, 0x4B, 0x90, 0x60, 
   0x49, 0x92, 0x63, 0x4E, 0x93, 0x63, 0x4D, 0x96, 0x65, 0x4F, 0x9A, 0x65, 0x50, 0x9D, 0x65, 0x50, 
   0x9D, 0x65, 0x50, 0x8E, 0x60, 0x4A, 0x8B, 0x5F, 0x48, 0x8A, 0x5D, 0x47, 0x8B, 0x5B, 0x47, 0x8B, 
   0x5B, 0x49, 0x8C, 0x5C, 0x4A, 0x8C, 0x5D, 0x49, 0x8C, 0x5D, 0x47, 0x8B, 0x5C, 0x46, 0x8A, 0x5B, 
   0x45, 0x88, 0x59, 0x43, 0x87, 0x58, 0x42, 0x89, 0x5A, 0x43, 0x8B, 0x5B, 0x43, 0x8A, 0x5A, 0x42, 
   0x89, 0x59, 0x41, 0x89, 0x59, 0x41, 0x89, 0x59, 0x41, 0x89, 0x59, 0x41, 0x8A, 0x59, 0x42, 0x8B, 
   0x59, 0x43, 0x8B, 0x59, 0x43, 0x8B, 0x59, 0x43, 0x8B, 0x59, 0x43, 0x8A, 0x58, 0x42, 0x88, 0x55, 
   0x3F, 0x89, 0x55, 0x3E, 0x8A, 0x56, 0x3F, 0x89, 0x55, 0x3E, 0x87, 0x53, 0x3C, 0x85, 0x51, 0x3A, 
   0x85, 0x50, 0x3A, 0x82, 0x50, 0x36, 0x81, 0x52, 0x35, 0x82, 0x52, 0x36, 0x7F, 0x4F, 0x33, 0x7F, 
   0x4F, 0x33, 0x81, 0x51, 0x35, 0x82, 0x52, 0x36, 0x7D, 0x52, 0x33, 0x7C, 0x51, 0x32, 0x82, 0x51, 
   0x32, 0x84, 0x4F, 0x31, 0x87, 0x51, 0x33, 0x86, 0x51, 0x36, 0x83, 0x51, 0x36, 0x82, 0x50, 0x35, 
   0x84, 0x51, 0x34, 0x86, 0x52, 0x34, 0x85, 0x51, 0x32, 0x86, 0x51, 0x30, 0x85, 0x50, 0x2F, 0x85, 
   0x50, 0x36, 0x86, 0x51, 0x39, 0x84, 0x4C, 0x37, 0x82, 0x4B, 0x39, 0x7E, 0x4C, 0x3D, 0x7A, 0x50, 
   0x41, 0x74, 0x4C, 0x3D, 0x79, 0x4D, 0x3D, 0x7C, 0x51, 0x41, 0x75, 0x4F, 0x3E, 0x74, 0x51, 0x40, 
   0x74, 0x56, 0x43, 0x71, 0x54, 0x41, 0x71, 0x51, 0x42, 0x71, 0x4F, 0x44, 0x6F, 0x4D, 0x42, 0x6F, 
   0x4D, 0x41, 0x7C, 0x5A, 0x4F, 0x83, 0x61, 0x56, 0x95, 0x74, 0x68, 0xA9, 0x86, 0x7B, 0xA3, 0x80, 
   0x75, 0xC5, 0xA2, 0x97, 0xE1, 0xBD, 0xB2, 0xDC, 0xB7, 0xAC, 0xE9, 0xC2, 0xB7, 0xE2, 0xB8, 0xB2, 
   0xE8, 0xBC, 0xBA, 0xEA, 0xC1, 0xBD, 0xEE, 0xC5, 0xC1, 0xEE, 0xC6, 0xC2, 0xEA, 0xC3, 0xC0, 0xE8, 
   0xC0, 0xBD, 0xE5, 0xBE, 0xB8, 0xD2, 0xAC, 0xA6, 0xBC, 0x9A, 0x94, 0xB9, 0x9D, 0x96, 0x9A, 0x84, 
   0x7C, 0x63, 0x52, 0x49, 0x67, 0x52, 0x4C, 0x5D, 0x43, 0x40, 0x4F, 0x36, 0x31, 0x5E, 0x48, 0x42, 
   0x69, 0x54, 0x4E, 0x4E, 0x3B, 0x35, 0x45, 0x33, 0x2D, 0x5E, 0x55, 0x4E, 0x46, 0x3C, 0x35, 0x43, 
   0x37, 0x30, 0x4D, 0x3D, 0x37, 0x41, 0x2E, 0x29, 0x5B, 0x47, 0x43, 0x63, 0x4E, 0x45, 0x68, 0x52, 
   0x43, 0x6C, 0x57, 0x49, 0x78, 0x63, 0x55, 0x74, 0x5F, 0x50, 0x77, 0x62, 0x53, 0x66, 0x52, 0x44, 
   0x4C, 0x38, 0x30, 0x45, 0x32, 0x2A, 0x43, 0x31, 0x29, 0x43, 0x33, 0x2A, 0x46, 0x37, 0x2E, 0x49, 
   0x3B, 0x31, 0x31, 0x25, 0x1C, 0x38, 0x2D, 0x24, 0x3B, 0x30, 0x28, 0x35, 0x2A, 0x22, 0x39, 0x2E, 
   0x26, 0x35, 0x2A, 0x22, 0x38, 0x2D, 0x25, 0x3B, 0x2E, 0x28, 0x39, 0x2C, 0x25, 0x41, 0x33, 0x2D, 
   0x41, 0x34, 0x2D, 0x31, 0x23, 0x1D, 0x36, 0x28, 0x22, 0x36, 0x29, 0x23, 0x33, 0x27, 0x21, 0x30, 
   0x24, 0x1E, 0x3E, 0x32, 0x2C, 0x48, 0x3C, 0x36, 0x35, 0x29, 0x23, 0x41, 0x35, 0x2F, 0x48, 0x3C, 
   0x36, 0x35, 0x29, 0x24, 0x37, 0x2B, 0x25, 0x3B, 0x2F, 0x2A, 0x3B, 0x2F, 0x29, 0x3A, 0x2F, 0x2A, 
   0x3C, 0x2F, 0x29, 0x2C, 0x1E, 0x18, 0xFA, 0xDF, 0xDB, 0xF8, 0xDD, 0xD9, 0xF8, 0xDD, 0xDB, 0xF4, 
   0xDD, 0xDC, 0xEB, 0xDB, 0xDC, 0xD9, 0xD3, 0xD2, 0xAB, 0xA7, 0xA7, 0xA1, 0x9D, 0x9D, 0xA2, 0xA3, 
   0xA3, 0x5F, 0x67, 0x67, 0x73, 0x7D, 0x7D, 0x6A, 0x72, 0x74, 0x5F, 0x65, 0x69, 0x5D, 0x6A, 0x6B, 
   0x5D, 0x6A, 0x6A, 0x76, 0x79, 0x7A, 0xD8, 0xD6, 0xD8, 0xC2, 0xC0, 0xC2, 0x7C, 0x7E, 0x7F, 0x58, 
   0x5C, 0x5E, 0x6A, 0x70, 0x75, 0x62, 0x6C, 0x70, 0x5D, 0x68, 0x6D, 0x5A, 0x64, 0x68, 0x57, 0x57, 
   0x5D, 0x94, 0x8D, 0x94, 0xD6, 0xCA, 0xCE, 0xBC, 0xAF, 0xB1, 0x94, 0x88, 0x8A, 0xF3, 0xE8, 0xEA, 
   0xF8, 0xEE, 0xF0, 0xEE, 0xE1, 0xE3, 0xEC, 0xDF, 0xE1, 0xF9, 0xF0, 0xEB, 0xA6, 0xA2, 0x9B, 0x5F, 
   0x63, 0x5A, 0x59, 0x60, 0x5B, 0x67, 0x71, 0x70, 0x65, 0x6F, 0x75, 0x51, 0x5D, 0x61, 0x4C, 0x5A, 
   0x57, 0x7A, 0x85, 0x83, 0x75, 0x7B, 0x7A, 0x59, 0x5C, 0x5C, 0x5E, 0x5F, 0x5F, 0x5E, 0x5C, 0x5C, 
   0x4E, 0x48, 0x4A, 0x62, 0x59, 0x5A, 0xA1, 0x91, 0x92, 0xAE, 0x9D, 0x9D, 0xED, 0xE0, 0xDE, 0xA1, 
   0x96, 0x93, 0x8F, 0x82, 0x7D, 0xAB, 0x9A, 0x94, 0x7E, 0x6E, 0x6B, 0x60, 0x55, 0x51, 0x61, 0x59, 
   0x57, 0x4D, 0x46, 0x46, 0x45, 0x40, 0x3F, 0x45, 0x44, 0x3A, 0x47, 0x46, 0x3D, 0x4D, 0x4B, 0x44, 
   0x45, 0x42, 0x3D, 0x49, 0x46, 0x42, 0x4B, 0x48, 0x44, 0x49, 0x46, 0x43, 0x4C, 0x49, 0x48, 0x45, 
   0x43, 0x42, 0x48, 0x4A, 0x48, 0x55, 0x59, 0x57, 0x54, 0x5A, 0x57, 0x4A, 0x52, 0x4F, 0x52, 0x5F, 
   0x61, 0x4B, 0x56, 0x58, 0x42, 0x49, 0x4C, 0x4B, 0x4F, 0x52, 0x4C, 0x4C, 0x50, 0x4D, 0x48, 0x4E, 
   0x8A, 0x86, 0x86, 0xA0, 0x99, 0x95, 0xCC, 0xBD, 0xBB, 0xA8, 0x93, 0x94, 0xDD, 0xC6, 0xC9, 0xF3, 
   0xDD, 0xE0, 0xEE, 0xDB, 0xDE, 0xBA, 0xA7, 0xA9, 0x9A, 0x8C, 0x8D, 0x89, 0x7E, 0x7D, 0x50, 0x47, 
   0x44, 0x9C, 0x8F, 0x8D, 0xEC, 0xDA, 0xD9, 0xCF, 0xB8, 0xB9, 0xCD, 0xB4, 0xB6, 0xF9, 0xDE, 0xDC, 
   0xF0, 0xD3, 0xCD, 0xE6, 0xC8, 0xBB, 0xD7, 0xB7, 0xA7, 0xBB, 0x9A, 0x88, 0xA4, 0x7A, 0x67, 0x92, 
   0x67, 0x54, 0x8C, 0x61, 0x4F, 0x8A, 0x5F, 0x4C, 0x8D, 0x62, 0x4E, 0x8F, 0x64, 0x51, 0x8E, 0x63, 
   0x4F, 0x8C, 0x61, 0x4E, 0x8C, 0x61, 0x4E, 0x8C, 0x61, 0x4E, 0x8D, 0x62, 0x4F, 0x91, 0x66, 0x52, 
   0x8E, 0x62, 0x4F, 0x8C, 0x5A, 0x46, 0x8C, 0x5A, 0x46, 0x8C, 0x5A, 0x46, 0x8B, 0x59, 0x45, 0x8B, 
   0x59, 0x45, 0x8C, 0x5A, 0x46, 0x8C, 0x5A, 0x45, 0x8B, 0x59, 0x43, 0x8A, 0x58, 0x42, 0x89, 0x57, 
   0x41, 0x88, 0x56, 0x40, 0x86, 0x54, 0x3E, 0x89, 0x58, 0x41, 0x8A, 0x5A, 0x3F, 0x8A, 0x5A, 0x3D, 
   0x88, 0x58, 0x3C, 0x88, 0x58, 0x3C, 0x86, 0x56, 0x3A, 0x86, 0x57, 0x3A, 0x88, 0x57, 0x3E, 0x88, 
   0x56, 0x3F, 0x88, 0x56, 0x3F, 0x88, 0x56, 0x3F, 0x88, 0x56, 0x3F, 0x86, 0x54, 0x3D, 0x85, 0x53, 
   0x3C, 0x87, 0x53, 0x3C, 0x87, 0x53, 0x3C, 0x86, 0x52, 0x3B, 0x83, 0x4F, 0x38, 0x83, 0x4F, 0x38, 
   0x84, 0x4F, 0x39, 0x82, 0x50, 0x35, 0x81, 0x52, 0x33, 0x80, 0x51, 0x32, 0x7F, 0x50, 0x31, 0x80, 
   0x51, 0x32, 0x80, 0x51, 0x32, 0x80, 0x51, 0x32, 0x81, 0x51, 0x32, 0x82, 0x50, 0x32, 0x82, 0x50, 
   0x32, 0x82, 0x50, 0x32, 0x82, 0x50, 0x32, 0x82, 0x50, 0x32, 0x83, 0x51, 0x33, 0x83, 0x51, 0x33, 
   0x83, 0x51, 0x33, 0x83, 0x51, 0x33, 0x83, 0x51, 0x33, 0x82, 0x50, 0x32, 0x83, 0x51, 0x33, 0x83, 
   0x51, 0x34, 0x82, 0x50, 0x32, 0x81, 0x4F, 0x31, 0x83, 0x51, 0x33, 0x85, 0x53, 0x35, 0x80, 0x4E, 
   0x31, 0x7E, 0x4D, 0x30, 0x7E, 0x4F, 0x31, 0x83, 0x54, 0x35, 0x82, 0x53, 0x34, 0x7E, 0x50, 0x31, 
   0x83, 0x55, 0x36, 0x7F, 0x51, 0x31, 0x7B, 0x4D, 0x34, 0x7C, 0x4F, 0x3B, 0x7F, 0x52, 0x3D, 0x7E, 
   0x51, 0x3D, 0x7B, 0x4F, 0x3A, 0x85, 0x58, 0x44, 0x94, 0x68, 0x53, 0x7F, 0x57, 0x46, 0x76, 0x4F, 
   0x3D, 0x8E, 0x66, 0x54, 0x96, 0x6E, 0x5D, 0x8B, 0x63, 0x52, 0x8A, 0x62, 0x50, 0x87, 0x5F, 0x4E, 
   0x98, 0x70, 0x5E, 0x93, 0x6B, 0x59, 0x95, 0x6D, 0x5C, 0x99, 0x71, 0x5F, 0x94, 0x6C, 0x5B, 0x90, 
   0x68, 0x57, 0x8B, 0x65, 0x5B, 0x5D, 0x3A, 0x31, 0x5C, 0x3D, 0x34, 0x5D, 0x44, 0x3C, 0x4F, 0x3B, 
   0x33, 0x4C, 0x3C, 0x35, 0x50, 0x3D, 0x34, 0x59, 0x42, 0x36, 0x5B, 0x45, 0x39, 0x5C, 0x46, 0x38, 
   0x66, 0x52, 0x43, 0x65, 0x53, 0x41, 0x45, 0x34, 0x23, 0x44, 0x3C, 0x2E, 0x48, 0x3F, 0x33, 0x49, 
   0x3E, 0x33, 0x3B, 0x2B, 0x22, 0x3E, 0x2C, 0x25, 0x4A, 0x37, 0x30, 0x4D, 0x39, 0x31, 0x6A, 0x55, 
   0x4D, 0x77, 0x62, 0x5A, 0x56, 0x43, 0x3B, 0x5E, 0x4C, 0x43, 0x6C, 0x5C, 0x53, 0x71, 0x62, 0x59, 
   0x51, 0x48, 0x3B, 0x3D, 0x32, 0x27, 0x4B, 0x40, 0x34, 0x40, 0x34, 0x28, 0x49, 0x3B, 0x2F, 0x4F, 
   0x41, 0x35, 0x42, 0x35, 0x2A, 0x39, 0x2C, 0x23, 0x4D, 0x40, 0x37, 0x3D, 0x30, 0x27, 0x35, 0x28, 
   0x1F, 0x39, 0x2C, 0x24, 0x39, 0x2C, 0x23, 0x35, 0x2B, 0x21, 0x3C, 0x32, 0x28, 0x47, 0x3D, 0x33, 
   0x3B, 0x31, 0x27, 0x2E, 0x24, 0x1A, 0x34, 0x2A, 0x20, 0x33, 0x28, 0x20, 0x30, 0x24, 0x1E, 0x33, 
   0x27, 0x21, 0x45, 0x39, 0x33, 0x48, 0x3C, 0x36, 0x31, 0x25, 0x1F, 0x43, 0x37, 0x31, 0x48, 0x3C, 
   0x38, 0x35, 0x29, 0x25, 0x32, 0x26, 0x22, 0x38, 0x2C, 0x27, 0x33, 0x27, 0x23, 0x2E, 0x22, 0x1E, 
   0x3E, 0x30, 0x2B, 0x3C, 0x2C, 0x26, 0xF8, 0xDF, 0xDB, 0xFA, 0xDF, 0xDB, 0xF6, 0xDC, 0xDA, 0xF1, 
   0xDB, 0xDA, 0xE5, 0xD7, 0xD7, 0x9F, 0x9A, 0x99, 0x64, 0x61, 0x61, 0x6B, 0x67, 0x67, 0x67, 0x68, 
   0x68, 0x68, 0x70, 0x70, 0x66, 0x70, 0x71, 0x4B, 0x53, 0x56, 0x62, 0x68, 0x6C, 0x66, 0x72, 0x72, 
   0x5D, 0x68, 0x68, 0x64, 0x66, 0x67, 0xB5, 0xB3, 0xB5, 0x6D, 0x6A, 0x6C, 0x76, 0x78, 0x79, 0x59, 
   0x5E, 0x60, 0x81, 0x87, 0x8A, 0x57, 0x5F, 0x63, 0x55, 0x61, 0x63, 0x3F, 0x48, 0x4C, 0x9D, 0x9E, 
   0xA2, 0xB1, 0xAB, 0xB0, 0xB5, 0xA9, 0xAC, 0xC3, 0xB6, 0xB8, 0xD0, 0xC3, 0xC5, 0xF5, 0xE7, 0xE9, 
   0xEF, 0xE2, 0xE4, 0xE3, 0xD6, 0xD8, 0xFC, 0xF0, 0xF2, 0xEE, 0xE2, 0xDE, 0x89, 0x80, 0x78, 0x5B, 
   0x5A, 0x52, 0x57, 0x59, 0x55, 0x5A, 0x61, 0x61, 0x65, 0x6C, 0x74, 0x52, 0x5D, 0x61, 0x50, 0x5F, 
   0x5C, 0x55, 0x60, 0x5E, 0x5D, 0x63, 0x62, 0x56, 0x59, 0x58, 0x60, 0x5E, 0x5E, 0x56, 0x54, 0x54, 
   0x4C, 0x47, 0x48, 0x98, 0x8E, 0x90, 0xE7, 0xD7, 0xD9, 0xFA, 0xE9, 0xE9, 0xE6, 0xD8, 0xD6, 0x58, 
   0x4E, 0x4B, 0x63, 0x58, 0x53, 0xCE, 0xC1, 0xBB, 0x9F, 0x92, 0x8E, 0x91, 0x85, 0x81, 0x84, 0x7A, 
   0x79, 0x4D, 0x44, 0x44, 0x50, 0x47, 0x46, 0x48, 0x43, 0x3B, 0x4B, 0x48, 0x40, 0x49, 0x46, 0x3F, 
   0x47, 0x44, 0x3F, 0x46, 0x45, 0x41, 0x47, 0x48, 0x44, 0x4D, 0x4B, 0x48, 0x4A, 0x46, 0x45, 0x46, 
   0x44, 0x43, 0x41, 0x43, 0x41, 0x43, 0x47, 0x45, 0x45, 0x4A, 0x48, 0x4D, 0x54, 0x51, 0x51, 0x5C, 
   0x5C, 0x43, 0x4E, 0x4E, 0x4B, 0x52, 0x53, 0x4D, 0x4F, 0x50, 0x4B, 0x4A, 0x4C, 0x54, 0x50, 0x53, 
   0x89, 0x82, 0x81, 0xE5, 0xDC, 0xD8, 0xC5, 0xB3, 0xB3, 0xE5, 0xD3, 0xD5, 0xD5, 0xC4, 0xC7, 0xC8, 
   0xB4, 0xB7, 0x9F, 0x90, 0x92, 0x82, 0x72, 0x74, 0x81, 0x75, 0x75, 0x75, 0x6B, 0x6A, 0x5B, 0x50, 
   0x4D, 0xDB, 0xD0, 0xCE, 0xF9, 0xE4, 0xE4, 0xE9, 0xCF, 0xD0, 0xF5, 0xDA, 0xDA, 0xF1, 0xD3, 0xD0, 
   0xDF, 0xC0, 0xB9, 0xB4, 0x93, 0x87, 0xAA, 0x87, 0x77, 0x97, 0x72, 0x5F, 0x8B, 0x5F, 0x4C, 0x89, 
   0x5B, 0x49, 0x8A, 0x5D, 0x4B, 0x8A, 0x5D, 0x4B, 0x8C, 0x5E, 0x4C, 0x8C, 0x5F, 0x4D, 0x8E, 0x60, 
   0x4E, 0x8E, 0x60, 0x4E, 0x8D, 0x60, 0x4E, 0x8E, 0x60, 0x4E, 0x8E, 0x60, 0x4E, 0x8F, 0x62, 0x50, 
   0x8B, 0x5D, 0x4B, 0x88, 0x56, 0x42, 0x88, 0x56, 0x42, 0x88, 0x56, 0x42, 0x88, 0x56, 0x42, 0x88, 
   0x56, 0x42, 0x89, 0x57, 0x43, 0x89, 0x57, 0x42, 0x89, 0x57, 0x40, 0x88, 0x56, 0x3F, 0x87, 0x55, 
   0x3E, 0x86, 0x54, 0x3D, 0x86, 0x54, 0x3D, 0x88, 0x56, 0x3F, 0x89, 0x59, 0x3D, 0x88, 0x58, 0x3C, 
   0x87, 0x57, 0x3B, 0x87, 0x57, 0x3A, 0x85, 0x55, 0x39, 0x85, 0x55, 0x39, 0x86, 0x55, 0x3B, 0x86, 
   0x55, 0x3C, 0x86, 0x55, 0x3C, 0x86, 0x55, 0x3C, 0x86, 0x55, 0x3B, 0x84, 0x53, 0x3A, 0x83, 0x52, 
   0x38, 0x84, 0x51, 0x37, 0x84, 0x51, 0x37, 0x82, 0x4F, 0x36, 0x82, 0x4F, 0x35, 0x83, 0x50, 0x36, 
   0x83, 0x50, 0x36, 0x81, 0x50, 0x34, 0x80, 0x51, 0x32, 0x7F, 0x50, 0x31, 0x7E, 0x4F, 0x30, 0x7F, 
   0x50, 0x31, 0x7F, 0x50, 0x31, 0x7F, 0x50, 0x31, 0x80, 0x50, 0x31, 0x81, 0x4F, 0x31, 0x81, 0x4F, 
   0x31, 0x81, 0x4F, 0x31, 0x81, 0x4F, 0x31, 0x81, 0x4F, 0x31, 0x82, 0x50, 0x32, 0x82, 0x50, 0x32, 
   0x82, 0x50, 0x32, 0x82, 0x50, 0x32, 0x82, 0x50, 0x32, 0x83, 0x51, 0x33, 0x83, 0x51, 0x33, 0x83, 
   0x51, 0x33, 0x82, 0x50, 0x32, 0x81, 0x4F, 0x31, 0x7E, 0x4C, 0x2E, 0x7F, 0x4D, 0x2F, 0x81, 0x4F, 
   0x31, 0x80, 0x4F, 0x31, 0x7D, 0x4E, 0x2F, 0x80, 0x51, 0x32, 0x80, 0x51, 0x32, 0x83, 0x54, 0x35, 
   0x80, 0x50, 0x31, 0x81, 0x52, 0x33, 0x81, 0x52, 0x37, 0x7B, 0x4D, 0x36, 0x7E, 0x50, 0x39, 0x81, 
   0x53, 0x3C, 0x81, 0x53, 0x3C, 0x7F, 0x51, 0x3A, 0x79, 0x4B, 0x34, 0x75, 0x4B, 0x38, 0x7B, 0x51, 
   0x3E, 0x78, 0x4E, 0x3B, 0x73, 0x49, 0x36, 0x74, 0x49, 0x37, 0x79, 0x4F, 0x3C, 0x78, 0x4E, 0x3B, 
   0x75, 0x4B, 0x38, 0x74, 0x49, 0x37, 0x74, 0x4A, 0x37, 0x76, 0x4C, 0x39, 0x78, 0x4E, 0x3B, 0x79, 
   0x4F, 0x3D, 0x7C, 0x54, 0x47, 0x7D, 0x58, 0x4C, 0x5D, 0x3D, 0x31, 0x58, 0x3D, 0x33, 0x68, 0x51, 
   0x47, 0x57, 0x44, 0x3A, 0x5E, 0x4B, 0x3F, 0x52, 0x3C, 0x30, 0x4F, 0x39, 0x2D, 0x55, 0x41, 0x34, 
   0x58, 0x45, 0x36, 0x63, 0x4F, 0x3F, 0x4E, 0x3C, 0x2D, 0x41, 0x35, 0x27, 0x4C, 0x40, 0x33, 0x4A, 
   0x3C, 0x31, 0x4B, 0x3D, 0x33, 0x4A, 0x3A, 0x32, 0x4E, 0x3D, 0x37, 0x4C, 0x39, 0x32, 0x5A, 0x47, 
   0x3F, 0x76, 0x63, 0x5B, 0x54, 0x42, 0x39, 0x4C, 0x3C, 0x33, 0x50, 0x41, 0x38, 0x67, 0x5A, 0x51, 
   0x5E, 0x56, 0x4A, 0x4E, 0x44, 0x38, 0x42, 0x37, 0x2B, 0x3A, 0x2D, 0x21, 0x40, 0x32, 0x26, 0x51, 
   0x43, 0x36, 0x4C, 0x3E, 0x34, 0x34, 0x27, 0x1E, 0x35, 0x28, 0x1F, 0x4D, 0x40, 0x37, 0x39, 0x2C, 
   0x23, 0x36, 0x29, 0x20, 0x3E, 0x31, 0x28, 0x39, 0x2E, 0x24, 0x37, 0x2D, 0x23, 0x37, 0x2D, 0x23, 
   0x33, 0x29, 0x1F, 0x34, 0x2A, 0x20, 0x3D, 0x33, 0x29, 0x32, 0x27, 0x1F, 0x38, 0x2B, 0x26, 0x3E, 
   0x32, 0x2C, 0x47, 0x3B, 0x35, 0x52, 0x46, 0x40, 0x36, 0x2A, 0x24, 0x40, 0x34, 0x2E, 0x50, 0x44, 
   0x3F, 0x36, 0x2A, 0x26, 0x36, 0x2A, 0x26, 0x37, 0x2B, 0x27, 0x3C, 0x30, 0x2C, 0x32, 0x26, 0x22, 
   0x36, 0x28, 0x23, 0x3F, 0x2F, 0x29, 0xF5, 0xDC, 0xD8, 0xF3, 0xD9, 0xD5, 0xF6, 0xDE, 0xDB, 0xE3, 
   0xCF, 0xCD, 0xE0, 0xD5, 0xD4, 0x7A, 0x75, 0x74, 0x56, 0x52, 0x52, 0x6C, 0x68, 0x69, 0x79, 0x7A, 
   0x7A, 0x68, 0x6F, 0x70, 0x46, 0x50, 0x51, 0x60, 0x68, 0x6B, 0x76, 0x7D, 0x81, 0x65, 0x6E, 0x70, 
   0x62, 0x6B, 0x6B, 0x85, 0x88, 0x89, 0x63, 0x62, 0x65, 0x60, 0x60, 0x61, 0x68, 0x6B, 0x6C, 0x64, 
   0x68, 0x6A, 0x5C, 0x62, 0x65, 0x78, 0x7F, 0x82, 0x6E, 0x76, 0x78, 0x69, 0x6F, 0x72, 0x90, 0x8E, 
   0x93, 0xA8, 0xA2, 0xA7, 0xD9, 0xCE, 0xD1, 0xC9, 0xBC, 0xBE, 0xA9, 0x9D, 0x9F, 0xED, 0xE5, 0xE7, 
   0xF2, 0xE9, 0xEB, 0xEF, 0xE4, 0xE6, 0xEA, 0xDD, 0xDF, 0xE4, 0xCD, 0xCB, 0xB2, 0x9F, 0x9B, 0x66, 
   0x5C, 0x56, 0x6F, 0x6A, 0x67, 0x6B, 0x6D, 0x6D, 0x4E, 0x53, 0x59, 0x54, 0x5D, 0x60, 0x4E, 0x59, 
   0x56, 0x54, 0x5B, 0x59, 0x59, 0x5E, 0x5D, 0x6D, 0x6E, 0x6E, 0x65, 0x64, 0x64, 0x45, 0x43, 0x43, 
   0x5F, 0x5B, 0x5B, 0xDB, 0xD4, 0xD6, 0xE0, 0xD4, 0xD6, 0xFA, 0xEA, 0xEB, 0xC2, 0xB5, 0xB3, 0x4F, 
   0x44, 0x41, 0x7E, 0x76, 0x70, 0x94, 0x8C, 0x86, 0x64, 0x5A, 0x56, 0x8F, 0x84, 0x81, 0xA0, 0x94, 
   0x93, 0x83, 0x78, 0x78, 0x63, 0x57, 0x57, 0x57, 0x4E, 0x47, 0x47, 0x3F, 0x38, 0x43, 0x3E, 0x37, 
   0x48, 0x46, 0x41, 0x44, 0x45, 0x41, 0x44, 0x49, 0x43, 0x4B, 0x4B, 0x49, 0x4E, 0x49, 0x49, 0x49, 
   0x47, 0x46, 0x49, 0x4A, 0x48, 0x42, 0x44, 0x42, 0x40, 0x43, 0x41, 0x49, 0x4D, 0x4B, 0x45, 0x4C, 
   0x4D, 0x46, 0x4C, 0x4D, 0x49, 0x4E, 0x4F, 0x53, 0x54, 0x55, 0x60, 0x5E, 0x60, 0x6D, 0x67, 0x6A, 
   0xD7, 0xCE, 0xCE, 0xE1, 0xD4, 0xD1, 0xDC, 0xCA, 0xC9, 0xB9, 0xA5, 0xA5, 0x90, 0x7D, 0x7F, 0xBA, 
   0xAB, 0xAD, 0x7F, 0x73, 0x75, 0x82, 0x77, 0x7A, 0x76, 0x6D, 0x6E, 0x81, 0x78, 0x79, 0xA6, 0x99, 
   0x98, 0xDB, 0xC8, 0xC7, 0xD0, 0xBB, 0xBB, 0xFC, 0xE0, 0xE0, 0xED, 0xCB, 0xC8, 0xCD, 0xAA, 0xA5, 
   0xB3, 0x91, 0x87, 0x9C, 0x78, 0x6A, 0x8A, 0x64, 0x54, 0x83, 0x5B, 0x47, 0x88, 0x5B, 0x47, 0x8B, 
   0x5D, 0x49, 0x8B, 0x5E, 0x4A, 0x8C, 0x5F, 0x4B, 0x8B, 0x5E, 0x4A, 0x8D, 0x5F, 0x4B, 0x8E, 0x60, 
   0x4C, 0x8E, 0x61, 0x4D, 0x8C, 0x5F, 0x4B, 0x8B, 0x5E, 0x4A, 0x8B, 0x5D, 0x49, 0x8A, 0x5D, 0x49, 
   0x87, 0x59, 0x45, 0x87, 0x56, 0x40, 0x87, 0x56, 0x40, 0x87, 0x56, 0x40, 0x87, 0x56, 0x40, 0x87, 
   0x56, 0x40, 0x87, 0x56, 0x40, 0x87, 0x55, 0x3F, 0x87, 0x55, 0x3D, 0x85, 0x53, 0x3C, 0x85, 0x52, 
   0x3C, 0x84, 0x52, 0x3B, 0x85, 0x53, 0x3C, 0x85, 0x53, 0x3D, 0x87, 0x56, 0x3B, 0x86, 0x56, 0x3A, 
   0x85, 0x55, 0x39, 0x84, 0x54, 0x38, 0x83, 0x53, 0x37, 0x83, 0x53, 0x37, 0x84, 0x53, 0x38, 0x84, 
   0x53, 0x39, 0x84, 0x53, 0x39, 0x84, 0x53, 0x39, 0x82, 0x51, 0x37, 0x82, 0x51, 0x37, 0x81, 0x50, 
   0x36, 0x81, 0x4F, 0x35, 0x81, 0x4E, 0x34, 0x7F, 0x4C, 0x32, 0x80, 0x4D, 0x33, 0x81, 0x4E, 0x34, 
   0x81, 0x4E, 0x34, 0x80, 0x4F, 0x32, 0x7E, 0x4F, 0x30, 0x7E, 0x4F, 0x30, 0x7D, 0x4E, 0x2F, 0x7E, 
   0x4F, 0x30, 0x7E, 0x4F, 0x30, 0x7E, 0x4F, 0x30, 0x7F, 0x4F, 0x30, 0x80, 0x4E, 0x30, 0x80, 0x4E, 
   0x30, 0x80, 0x4E, 0x30, 0x80, 0x4E, 0x30, 0x80, 0x4E, 0x30, 0x81, 0x4F, 0x31, 0x81, 0x4F, 0x31, 
   0x81, 0x4F, 0x31, 0x81, 0x4F, 0x31, 0x81, 0x4F, 0x31, 0x82, 0x50, 0x32, 0x83, 0x51, 0x33, 0x83, 
   0x51, 0x33, 0x82, 0x50, 0x32, 0x80, 0x4E, 0x30, 0x7E, 0x4C, 0x2E, 0x7F, 0x4D, 0x2F, 0x7F, 0x4D, 
   0x2F, 0x7D, 0x4D, 0x2E, 0x7B, 0x4C, 0x2D, 0x7E, 0x4F, 0x30, 0x7E, 0x4F, 0x30, 0x80, 0x51, 0x32, 
   0x7D, 0x4E, 0x2F, 0x7E, 0x4F, 0x30, 0x7F, 0x4F, 0x33, 0x7E, 0x4F, 0x36, 0x7F, 0x50, 0x36, 0x80, 
   0x51, 0x36, 0x7F, 0x50, 0x35, 0x7D, 0x4E, 0x33, 0x80, 0x51, 0x37, 0x7D, 0x4F, 0x38, 0x7C, 0x4F, 
   0x39, 0x7E, 0x51, 0x3B, 0x7C, 0x4F, 0x39, 0x7B, 0x4E, 0x38, 0x7B, 0x4E, 0x38, 0x7C, 0x4F, 0x39, 
   0x78, 0x4B, 0x35, 0x7D, 0x50, 0x3A, 0x7C, 0x4F, 0x39, 0x7D, 0x50, 0x3A, 0x80, 0x53, 0x3D, 0x83, 
   0x56, 0x40, 0x80, 0x55, 0x44, 0x8A, 0x61, 0x50, 0x7D, 0x57, 0x47, 0x6C, 0x4D, 0x3D, 0x60, 0x44, 
   0x35, 0x5C, 0x42, 0x34, 0x59, 0x41, 0x34, 0x59, 0x42, 0x36, 0x51, 0x3B, 0x2F, 0x55, 0x41, 0x34, 
   0x55, 0x42, 0x35, 0x56, 0x44, 0x36, 0x59, 0x47, 0x3B, 0x4C, 0x3C, 0x2E, 0x4F, 0x3F, 0x32, 0x46, 
   0x36, 0x2A, 0x4B, 0x3C, 0x32, 0x4A, 0x3D, 0x34, 0x42, 0x36, 0x2E, 0x47, 0x39, 0x31, 0x45, 0x34, 
   0x2B, 0x56, 0x46, 0x3D, 0x4E, 0x40, 0x37, 0x48, 0x3B, 0x32, 0x53, 0x48, 0x3E, 0x4F, 0x45, 0x3A, 
   0x5A, 0x51, 0x45, 0x53, 0x49, 0x3D, 0x32, 0x27, 0x1B, 0x55, 0x48, 0x3C, 0x46, 0x38, 0x2C, 0x54, 
   0x46, 0x3A, 0x45, 0x37, 0x2D, 0x3B, 0x2E, 0x25, 0x2B, 0x1E, 0x15, 0x3E, 0x31, 0x28, 0x41, 0x34, 
   0x2B, 0x3F, 0x32, 0x29, 0x3A, 0x2D, 0x24, 0x37, 0x2D, 0x23, 0x31, 0x27, 0x1D, 0x3D, 0x33, 0x29, 
   0x32, 0x28, 0x1E, 0x37, 0x2D, 0x23, 0x36, 0x2C, 0x21, 0x2F, 0x24, 0x1C, 0x3B, 0x2F, 0x29, 0x3A, 
   0x2E, 0x28, 0x3E, 0x32, 0x2C, 0x4A, 0x3E, 0x38, 0x3B, 0x2F, 0x29, 0x3F, 0x33, 0x2D, 0x47, 0x3B, 
   0x37, 0x37, 0x2B, 0x27, 0x36, 0x2A, 0x26, 0x39, 0x2D, 0x29, 0x37, 0x2B, 0x27, 0x3B, 0x2F, 0x2B, 
   0x30, 0x22, 0x1D, 0x30, 0x20, 0x19, 0xF3, 0xDB, 0xD7, 0xF5, 0xDC, 0xD8, 0xE3, 0xCB, 0xC9, 0xD5, 
   0xC5, 0xC4, 0xA8, 0x9E, 0x9E, 0x62, 0x5D, 0x5C, 0x85, 0x82, 0x81, 0x6E, 0x68, 0x6A, 0x96, 0x95, 
   0x95, 0x70, 0x76, 0x76, 0x4B, 0x55, 0x55, 0x69, 0x71, 0x73, 0x77, 0x7C, 0x80, 0x50, 0x56, 0x58, 
   0x52, 0x59, 0x59, 0x63, 0x66, 0x67, 0x47, 0x49, 0x4B, 0x70, 0x73, 0x74, 0x7C, 0x80, 0x81, 0x93, 
   0x97, 0x99, 0x83, 0x89, 0x8B, 0x81, 0x87, 0x89, 0x6A, 0x6F, 0x71, 0x8E, 0x92, 0x94, 0x8F, 0x8C, 
   0x90, 0x73, 0x6D, 0x70, 0x92, 0x88, 0x8B, 0x8C, 0x81, 0x83, 0xB6, 0xAD, 0xAF, 0xE9, 0xE1, 0xE3, 
   0xB0, 0xA5, 0xA7, 0xB5, 0xAB, 0xAD, 0xD9, 0xCD, 0xCF, 0xBD, 0xA0, 0xA1, 0xCC, 0xB2, 0xB0, 0xC0, 
   0xB0, 0xAB, 0xA3, 0x98, 0x94, 0x6E, 0x6C, 0x6D, 0x59, 0x5C, 0x61, 0x65, 0x6C, 0x6E, 0x77, 0x7E, 
   0x7C, 0x6E, 0x73, 0x72, 0x51, 0x53, 0x53, 0x68, 0x68, 0x68, 0x7A, 0x78, 0x78, 0x43, 0x41, 0x41, 
   0xB7, 0xB2, 0xB2, 0xC4, 0xBD, 0xBE, 0xC7, 0xBC, 0xBD, 0xFC, 0xEF, 0xF0, 0x7F, 0x73, 0x71, 0x52, 
   0x46, 0x43, 0x87, 0x81, 0x7A, 0x4B, 0x48, 0x40, 0x42, 0x3C, 0x37, 0x63, 0x5A, 0x56, 0x7F, 0x73, 
   0x72, 0xA4, 0x97, 0x98, 0xA3, 0x94, 0x94, 0x88, 0x7B, 0x74, 0x61, 0x56, 0x4F, 0x3E, 0x37, 0x31, 
   0x45, 0x42, 0x3D, 0x43, 0x45, 0x40, 0x41, 0x48, 0x43, 0x4C, 0x4E, 0x4B, 0x52, 0x4E, 0x4E, 0x41, 
   0x3E, 0x3D, 0x44, 0x42, 0x40, 0x41, 0x40, 0x3F, 0x4B, 0x4B, 0x4A, 0x3F, 0x40, 0x3E, 0x7B, 0x7E, 
   0x7F, 0x61, 0x63, 0x63, 0x62, 0x63, 0x63, 0x63, 0x61, 0x62, 0x52, 0x4E, 0x4F, 0xC3, 0xBD, 0xBF, 
   0xFA, 0xF0, 0xEF, 0xE5, 0xD5, 0xD3, 0xC9, 0xB8, 0xB7, 0x90, 0x7F, 0x80, 0xAF, 0xA1, 0xA2, 0x78, 
   0x6D, 0x6F, 0x70, 0x67, 0x69, 0x6B, 0x65, 0x67, 0x70, 0x67, 0x6A, 0x80, 0x75, 0x76, 0xC9, 0xB8, 
   0xB9, 0x8F, 0x76, 0x76, 0xD2, 0xB4, 0xB3, 0xF2, 0xD1, 0xCE, 0xC3, 0x9D, 0x97, 0xA5, 0x7E, 0x77, 
   0x90, 0x6A, 0x5D, 0x86, 0x5E, 0x4E, 0x86, 0x5D, 0x4B, 0x86, 0x5B, 0x47, 0x8C, 0x5E, 0x49, 0x8B, 
   0x5D, 0x48, 0x8B, 0x5D, 0x48, 0x8C, 0x5E, 0x49, 0x8B, 0x5D, 0x48, 0x8C, 0x5E, 0x49, 0x8D, 0x5F, 
   0x4A, 0x8C, 0x5E, 0x49, 0x8A, 0x5C, 0x47, 0x89, 0x5B, 0x46, 0x87, 0x59, 0x44, 0x86, 0x58, 0x43, 
   0x86, 0x58, 0x43, 0x87, 0x56, 0x40, 0x87, 0x56, 0x40, 0x87, 0x56, 0x40, 0x86, 0x55, 0x3F, 0x85, 
   0x54, 0x3E, 0x84, 0x54, 0x3E, 0x84, 0x53, 0x3C, 0x84, 0x53, 0x3A, 0x83, 0x52, 0x39, 0x82, 0x50, 
   0x38, 0x82, 0x51, 0x39, 0x84, 0x53, 0x3A, 0x84, 0x52, 0x3A, 0x85, 0x55, 0x39, 0x85, 0x55, 0x39, 
   0x83, 0x53, 0x37, 0x83, 0x53, 0x37, 0x81, 0x51, 0x35, 0x82, 0x52, 0x35, 0x82, 0x52, 0x36, 0x81, 
   0x51, 0x36, 0x81, 0x51, 0x36, 0x81, 0x51, 0x36, 0x7F, 0x4F, 0x34, 0x7F, 0x4E, 0x34, 0x80, 0x4F, 
   0x34, 0x81, 0x4E, 0x34, 0x80, 0x4D, 0x33, 0x7F, 0x4C, 0x32, 0x7F, 0x4C, 0x31, 0x81, 0x4E, 0x33, 
   0x81, 0x4D, 0x33, 0x7F, 0x4E, 0x31, 0x7D, 0x4F, 0x2F, 0x7C, 0x4D, 0x2E, 0x7C, 0x4D, 0x2E, 0x7D, 
   0x4E, 0x2F, 0x7D, 0x4E, 0x2F, 0x7D, 0x4E, 0x2F, 0x7E, 0x4E, 0x2F, 0x7F, 0x4D, 0x2F, 0x7F, 0x4D, 
   0x2F, 0x7F, 0x4D, 0x2F, 0x7F, 0x4D, 0x2F, 0x7F, 0x4D, 0x2F, 0x80, 0x4E, 0x30, 0x80, 0x4E, 0x30, 
   0x80, 0x4E, 0x30, 0x80, 0x4E, 0x30, 0x80, 0x4E, 0x30, 0x81, 0x4F, 0x31, 0x83, 0x51, 0x33, 0x83, 
   0x51, 0x33, 0x82, 0x50, 0x32, 0x7E, 0x4C, 0x2E, 0x80, 0x4E, 0x30, 0x81, 0x4F, 0x31, 0x7F, 0x4C, 
   0x2E, 0x7C, 0x4B, 0x2C, 0x7B, 0x4C, 0x2D, 0x7E, 0x50, 0x30, 0x7D, 0x4E, 0x2F, 0x7C, 0x4D, 0x2E, 
   0x7D, 0x4E, 0x2F, 0x7C, 0x4E, 0x2E, 0x7E, 0x4E, 0x2F, 0x82, 0x50, 0x33, 0x82, 0x50, 0x32, 0x7F, 
   0x4D, 0x2F, 0x81, 0x50, 0x32, 0x85, 0x53, 0x35, 0x80, 0x4F, 0x32, 0x80, 0x51, 0x36, 0x82, 0x53, 
   0x39, 0x7D, 0x4E, 0x34, 0x7F, 0x50, 0x36, 0x7E, 0x4F, 0x35, 0x7D, 0x4E, 0x34, 0x7D, 0x4E, 0x34, 
   0x7D, 0x4F, 0x34, 0x7E, 0x4F, 0x35, 0x7D, 0x4F, 0x35, 0x80, 0x52, 0x38, 0x80, 0x52, 0x38, 0x84, 
   0x55, 0x3B, 0x82, 0x53, 0x3D, 0x80, 0x53, 0x3D, 0x86, 0x5C, 0x47, 0x89, 0x64, 0x50, 0x7D, 0x5A, 
   0x47, 0x70, 0x4F, 0x3C, 0x5E, 0x41, 0x32, 0x58, 0x3F, 0x34, 0x57, 0x3F, 0x34, 0x56, 0x3F, 0x34, 
   0x51, 0x3D, 0x31, 0x4F, 0x3D, 0x32, 0x5E, 0x4C, 0x42, 0x5B, 0x45, 0x37, 0x46, 0x31, 0x24, 0x52, 
   0x40, 0x34, 0x57, 0x49, 0x3D, 0x44, 0x39, 0x2E, 0x41, 0x39, 0x30, 0x40, 0x35, 0x2D, 0x42, 0x33, 
   0x2A, 0x4A, 0x3D, 0x33, 0x41, 0x35, 0x2C, 0x38, 0x2D, 0x24, 0x4B, 0x41, 0x37, 0x4B, 0x42, 0x38, 
   0x54, 0x4B, 0x3F, 0x4B, 0x41, 0x35, 0x3D, 0x32, 0x26, 0x4E, 0x42, 0x36, 0x49, 0x3B, 0x2F, 0x69, 
   0x5B, 0x4F, 0x59, 0x4C, 0x41, 0x39, 0x2C, 0x23, 0x3A, 0x2D, 0x24, 0x3A, 0x2D, 0x24, 0x38, 0x2B, 
   0x22, 0x3D, 0x30, 0x27, 0x3F, 0x32, 0x29, 0x31, 0x27, 0x1D, 0x3E, 0x34, 0x2A, 0x38, 0x2E, 0x24, 
   0x34, 0x2A, 0x20, 0x35, 0x2B, 0x21, 0x30, 0x26, 0x1C, 0x2F, 0x24, 0x1C, 0x38, 0x2C, 0x27, 0x38, 
   0x2C, 0x26, 0x3D, 0x31, 0x2B, 0x45, 0x39, 0x33, 0x3D, 0x31, 0x2B, 0x3B, 0x2F, 0x29, 0x51, 0x45, 
   0x41, 0x3C, 0x30, 0x2C, 0x3A, 0x2E, 0x2A, 0x42, 0x36, 0x32, 0x36, 0x2A, 0x26, 0x37, 0x2B, 0x27, 
   0x31, 0x24, 0x1F, 0x2D, 0x1E, 0x18, 0xF9, 0xE3, 0xDE, 0xE8, 0xCF, 0xCC, 0xE3, 0xCC, 0xCA, 0xF8, 
   0xE8, 0xE7, 0x90, 0x85, 0x85, 0x95, 0x92, 0x91, 0xB9, 0xB7, 0xB6, 0xD8, 0xD1, 0xD2, 0xDA, 0xD7, 
   0xD7, 0x60, 0x65, 0x66, 0x43, 0x4A, 0x4A, 0x6D, 0x73, 0x75, 0x52, 0x55, 0x59, 0x8B, 0x8F, 0x91, 
   0x5E, 0x62, 0x63, 0x5E, 0x62, 0x63, 0x7F, 0x83, 0x84, 0x5F, 0x64, 0x65, 0x72, 0x76, 0x77, 0x79, 
   0x7D, 0x7E, 0xA6, 0xAA, 0xAB, 0x60, 0x64, 0x65, 0x57, 0x5A, 0x5B, 0xA5, 0xA5, 0xA6, 0xA2, 0x9D, 
   0x9F, 0xB4, 0xAD, 0xB0, 0x9F, 0x95, 0x97, 0xB7, 0xAC, 0xAE, 0xEB, 0xE2, 0xE4, 0x99, 0x8F, 0x90, 
   0x56, 0x4B, 0x4D, 0x86, 0x7D, 0x7E, 0xEF, 0xE5, 0xE7, 0xF6, 0xD7, 0xDB, 0xE0, 0xC0, 0xC1, 0xEE, 
   0xD7, 0xD3, 0xEB, 0xDB, 0xD7, 0x68, 0x63, 0x62, 0x5F, 0x61, 0x64, 0x76, 0x7A, 0x7C, 0x9E, 0xA2, 
   0xA1, 0x80, 0x83, 0x83, 0x49, 0x4A, 0x4A, 0x63, 0x61, 0x62, 0x75, 0x73, 0x73, 0x4F, 0x4D, 0x4D, 
   0xC3, 0xBE, 0xBF, 0xDC, 0xD6, 0xD7, 0xF9, 0xF2, 0xF2, 0xBF, 0xB3, 0xB3, 0x58, 0x4C, 0x4A, 0x70, 
   0x64, 0x61, 0x91, 0x8A, 0x84, 0x54, 0x54, 0x4C, 0x48, 0x44, 0x3F, 0x5D, 0x56, 0x52, 0x70, 0x65, 
   0x63, 0x86, 0x79, 0x7A, 0xB8, 0xA7, 0xA8, 0xA4, 0x94, 0x8D, 0xA3, 0x95, 0x8E, 0x79, 0x70, 0x6A, 
   0x40, 0x3D, 0x38, 0x43, 0x46, 0x42, 0x37, 0x3F, 0x39, 0x64, 0x66, 0x63, 0x67, 0x62, 0x62, 0x59, 
   0x55, 0x54, 0x4F, 0x4B, 0x4A, 0x4F, 0x4B, 0x4A, 0x66, 0x63, 0x62, 0x5A, 0x57, 0x56, 0x89, 0x88, 
   0x88, 0x79, 0x77, 0x77, 0xA8, 0xA6, 0xA6, 0x64, 0x5F, 0x5F, 0x73, 0x6C, 0x6D, 0xE5, 0xDF, 0xE0, 
   0xCB, 0xBF, 0xBE, 0xCF, 0xBE, 0xBC, 0xA9, 0x9A, 0x99, 0x8E, 0x81, 0x81, 0x85, 0x7C, 0x7D, 0x77, 
   0x6F, 0x70, 0x86, 0x80, 0x81, 0xB0, 0xAB, 0xAD, 0xB9, 0xB0, 0xB2, 0xB0, 0xA1, 0xA2, 0xCF, 0xB9, 
   0xB7, 0xC8, 0xA9, 0xA6, 0xDE, 0xB9, 0xB6, 0xB6, 0x8D, 0x87, 0xA8, 0x7E, 0x74, 0x94, 0x69, 0x5F, 
   0x8A, 0x5F, 0x50, 0x86, 0x59, 0x49, 0x86, 0x5A, 0x47, 0x8B, 0x5E, 0x49, 0x8B, 0x5C, 0x47, 0x89, 
   0x5A, 0x44, 0x8A, 0x5B, 0x46, 0x8A, 0x5A, 0x45, 0x89, 0x5A, 0x45, 0x8B, 0x5C, 0x46, 0x8B, 0x5C, 
   0x47, 0x8B, 0x5C, 0x47, 0x88, 0x59, 0x44, 0x87, 0x57, 0x42, 0x84, 0x55, 0x40, 0x85, 0x55, 0x40, 
   0x86, 0x56, 0x41, 0x85, 0x54, 0x3E, 0x85, 0x54, 0x3E, 0x84, 0x54, 0x3D, 0x83, 0x53, 0x3C, 0x82, 
   0x51, 0x3A, 0x81, 0x50, 0x3A, 0x81, 0x51, 0x38, 0x82, 0x51, 0x36, 0x81, 0x50, 0x36, 0x81, 0x50, 
   0x35, 0x81, 0x50, 0x36, 0x83, 0x52, 0x38, 0x83, 0x52, 0x38, 0x83, 0x53, 0x37, 0x83, 0x53, 0x37, 
   0x82, 0x52, 0x36, 0x81, 0x51, 0x35, 0x80, 0x50, 0x34, 0x81, 0x51, 0x35, 0x80, 0x50, 0x34, 0x7F, 
   0x4F, 0x33, 0x7F, 0x4F, 0x33, 0x7F, 0x4F, 0x33, 0x7E, 0x4E, 0x32, 0x7E, 0x4E, 0x32, 0x7E, 0x4E, 
   0x32, 0x80, 0x4D, 0x32, 0x80, 0x4D, 0x32, 0x7F, 0x4C, 0x31, 0x7E, 0x4B, 0x30, 0x7F, 0x4C, 0x31, 
   0x7F, 0x4C, 0x31, 0x7E, 0x4D, 0x30, 0x7C, 0x4E, 0x2E, 0x7C, 0x4D, 0x2E, 0x7B, 0x4C, 0x2D, 0x7C, 
   0x4D, 0x2E, 0x7C, 0x4D, 0x2E, 0x7C, 0x4D, 0x2E, 0x7D, 0x4D, 0x2E, 0x7E, 0x4C, 0x2E, 0x7E, 0x4C, 
   0x2E, 0x7E, 0x4C, 0x2E, 0x7E, 0x4C, 0x2E, 0x7E, 0x4C, 0x2E, 0x7F, 0x4D, 0x2F, 0x7F, 0x4D, 0x2F, 
   0x7F, 0x4D, 0x2F, 0x7F, 0x4D, 0x2F, 0x7F, 0x4D, 0x2F, 0x7F, 0x4D, 0x2F, 0x82, 0x50, 0x32, 0x83, 
   0x51, 0x33, 0x83, 0x51, 0x33, 0x80, 0x4E, 0x30, 0x7E, 0x4C, 0x2E, 0x80, 0x4E, 0x30, 0x80, 0x4E, 
   0x30, 0x7E, 0x4D, 0x2F, 0x7C, 0x4D, 0x2E, 0x7E, 0x50, 0x30, 0x7E, 0x4F, 0x30, 0x7F, 0x50, 0x31, 
   0x7C, 0x4D, 0x2E, 0x7D, 0x4E, 0x2F, 0x81, 0x50, 0x30, 0x82, 0x4E, 0x2D, 0x82, 0x4E, 0x2E, 0x82, 
   0x4E, 0x2E, 0x83, 0x4F, 0x2F, 0x86, 0x52, 0x32, 0x86, 0x52, 0x32, 0x7F, 0x4E, 0x31, 0x80, 0x4E, 
   0x32, 0x82, 0x51, 0x34, 0x7F, 0x4D, 0x31, 0x7E, 0x4D, 0x30, 0x80, 0x4F, 0x32, 0x80, 0x4F, 0x32, 
   0x80, 0x4F, 0x32, 0x7E, 0x4D, 0x30, 0x7F, 0x4E, 0x31, 0x7F, 0x4E, 0x31, 0x80, 0x4F, 0x32, 0x83, 
   0x51, 0x35, 0x83, 0x51, 0x36, 0x82, 0x52, 0x37, 0x7E, 0x50, 0x37, 0x7F, 0x54, 0x3B, 0x86, 0x5E, 
   0x46, 0x8D, 0x65, 0x4C, 0x78, 0x56, 0x43, 0x5D, 0x40, 0x34, 0x51, 0x35, 0x29, 0x53, 0x3A, 0x2F, 
   0x52, 0x3C, 0x31, 0x50, 0x3D, 0x32, 0x4E, 0x3A, 0x31, 0x65, 0x4A, 0x3C, 0x5D, 0x44, 0x36, 0x55, 
   0x41, 0x35, 0x4E, 0x41, 0x34, 0x3F, 0x35, 0x29, 0x4B, 0x47, 0x3B, 0x4D, 0x44, 0x3A, 0x3C, 0x2E, 
   0x25, 0x3F, 0x33, 0x2A, 0x42, 0x38, 0x2E, 0x3F, 0x35, 0x2B, 0x43, 0x3B, 0x31, 0x41, 0x38, 0x2E, 
   0x4E, 0x45, 0x38, 0x46, 0x3D, 0x31, 0x3A, 0x2F, 0x23, 0x42, 0x36, 0x2A, 0x50, 0x43, 0x37, 0x57, 
   0x49, 0x3D, 0x54, 0x47, 0x3C, 0x57, 0x4A, 0x41, 0x39, 0x2C, 0x23, 0x37, 0x2A, 0x21, 0x43, 0x36, 
   0x2D, 0x3F, 0x32, 0x29, 0x31, 0x24, 0x1B, 0x37, 0x2D, 0x23, 0x3C, 0x32, 0x28, 0x34, 0x2A, 0x20, 
   0x35, 0x2B, 0x21, 0x2F, 0x25, 0x1B, 0x33, 0x29, 0x1F, 0x31, 0x26, 0x1E, 0x34, 0x27, 0x22, 0x3D, 
   0x31, 0x2B, 0x3E, 0x32, 0x2C, 0x41, 0x35, 0x2F, 0x36, 0x2A, 0x24, 0x35, 0x29, 0x23, 0x53, 0x47, 
   0x43, 0x3A, 0x2E, 0x2A, 0x3F, 0x33, 0x2F, 0x41, 0x35, 0x31, 0x3E, 0x32, 0x2E, 0x35, 0x29, 0x26, 
   0x35, 0x28, 0x23, 0x36, 0x28, 0x22, 0xEA, 0xD5, 0xD0, 0xEA, 0xD4, 0xD0, 0xF4, 0xDF, 0xDC, 0xEE, 
   0xDD, 0xDB, 0xB7, 0xAD, 0xAC, 0x84, 0x83, 0x82, 0xB0, 0xAF, 0xAE, 0xF3, 0xEC, 0xED, 0x7D, 0x7B, 
   0x7B, 0x38, 0x3C, 0x3D, 0x45, 0x4A, 0x4B, 0x6C, 0x71, 0x74, 0x62, 0x65, 0x6A, 0x92, 0x94, 0x97, 
   0x5B, 0x5E, 0x5F, 0x61, 0x66, 0x67, 0x94, 0x9A, 0x9B, 0x74, 0x79, 0x7A, 0x6D, 0x71, 0x72, 0x78, 
   0x7D, 0x7E, 0x98, 0x9C, 0x9D, 0x60, 0x63, 0x64, 0x75, 0x72, 0x74, 0x79, 0x73, 0x75, 0xD3, 0xCE, 
   0xD0, 0xED, 0xE8, 0xEA, 0xB3, 0xAB, 0xAD, 0xF7, 0xEF, 0xF0, 0xE8, 0xE0, 0xE1, 0x78, 0x71, 0x71, 
   0x55, 0x4D, 0x4E, 0xA0, 0x99, 0x9A, 0xF5, 0xEE, 0xEF, 0xF2, 0xD5, 0xD9, 0xE7, 0xC9, 0xCA, 0xEC, 
   0xD3, 0xD1, 0xE8, 0xD5, 0xD2, 0xA5, 0x9D, 0x9D, 0x49, 0x4A, 0x4E, 0x58, 0x59, 0x5B, 0x59, 0x58, 
   0x58, 0x69, 0x68, 0x68, 0x94, 0x92, 0x92, 0xA4, 0xA1, 0xA1, 0x64, 0x5F, 0x60, 0x86, 0x81, 0x82, 
   0xE6, 0xE2, 0xE3, 0xEF, 0xE8, 0xE9, 0xDE, 0xD9, 0xD9, 0x5A, 0x52, 0x52, 0x49, 0x3F, 0x3D, 0xC3, 
   0xB9, 0xB6, 0x90, 0x8B, 0x85, 0x54, 0x52, 0x4A, 0x46, 0x42, 0x3D, 0x4F, 0x48, 0x44, 0x56, 0x4C, 
   0x4A, 0x74, 0x67, 0x68, 0x86, 0x78, 0x78, 0x71, 0x60, 0x59, 0x7C, 0x6E, 0x67, 0x86, 0x7D, 0x76, 
   0x47, 0x44, 0x3F, 0x40, 0x40, 0x3C, 0x4D, 0x52, 0x4D, 0x86, 0x87, 0x84, 0x3C, 0x37, 0x37, 0x68, 
   0x63, 0x62, 0x82, 0x7D, 0x7C, 0x80, 0x7A, 0x79, 0x79, 0x73, 0x72, 0x58, 0x52, 0x51, 0x6C, 0x66, 
   0x67, 0x5A, 0x53, 0x54, 0x85, 0x7E, 0x7F, 0x76, 0x6E, 0x6F, 0xD3, 0xCD, 0xCE, 0xD4, 0xCD, 0xCE, 
   0xAE, 0xA2, 0xA1, 0x93, 0x85, 0x82, 0x89, 0x7D, 0x7B, 0x74, 0x6B, 0x6B, 0x5C, 0x56, 0x56, 0x83, 
   0x7D, 0x7E, 0xF4, 0xEE, 0xEF, 0xB8, 0xB2, 0xB2, 0x8F, 0x82, 0x82, 0xEF, 0xD9, 0xD8, 0xD4, 0xB4, 
   0xB1, 0xD0, 0xAB, 0xA4, 0xAF, 0x86, 0x7E, 0x9E, 0x73, 0x68, 0x94, 0x68, 0x5A, 0x8A, 0x5D, 0x4E, 
   0x86, 0x59, 0x48, 0x88, 0x5A, 0x46, 0x87, 0x5A, 0x44, 0x88, 0x5B, 0x45, 0x87, 0x58, 0x42, 0x87, 
   0x58, 0x42, 0x89, 0x5A, 0x44, 0x88, 0x59, 0x43, 0x87, 0x58, 0x42, 0x88, 0x59, 0x43, 0x88, 0x59, 
   0x43, 0x87, 0x57, 0x41, 0x85, 0x55, 0x3F, 0x83, 0x54, 0x3E, 0x83, 0x54, 0x3E, 0x83, 0x54, 0x3E, 
   0x83, 0x54, 0x3E, 0x84, 0x54, 0x3C, 0x83, 0x53, 0x3B, 0x82, 0x52, 0x39, 0x82, 0x52, 0x39, 0x80, 
   0x50, 0x38, 0x7F, 0x4F, 0x37, 0x80, 0x4F, 0x36, 0x80, 0x4F, 0x35, 0x80, 0x4F, 0x35, 0x80, 0x4F, 
   0x35, 0x80, 0x4F, 0x35, 0x81, 0x50, 0x36, 0x81, 0x51, 0x36, 0x81, 0x51, 0x35, 0x81, 0x51, 0x35, 
   0x81, 0x51, 0x35, 0x80, 0x50, 0x34, 0x7F, 0x4F, 0x33, 0x80, 0x50, 0x34, 0x7E, 0x4E, 0x32, 0x7E, 
   0x4E, 0x32, 0x7E, 0x4E, 0x32, 0x7E, 0x4E, 0x32, 0x7D, 0x4D, 0x31, 0x7D, 0x4D, 0x31, 0x7D, 0x4D, 
   0x31, 0x7F, 0x4C, 0x31, 0x7F, 0x4C, 0x31, 0x7F, 0x4C, 0x31, 0x7F, 0x4C, 0x31, 0x7E, 0x4B, 0x30, 
   0x7E, 0x4B, 0x30, 0x7D, 0x4C, 0x2F, 0x7C, 0x4D, 0x2E, 0x7C, 0x4D, 0x2E, 0x7C, 0x4D, 0x2E, 0x7C, 
   0x4D, 0x2E, 0x7C, 0x4D, 0x2E, 0x7C, 0x4D, 0x2E, 0x7D, 0x4C, 0x2E, 0x7D, 0x4B, 0x2D, 0x7D, 0x4B, 
   0x2D, 0x7E, 0x4C, 0x2E, 0x7E, 0x4C, 0x2E, 0x7E, 0x4C, 0x2E, 0x7F, 0x4D, 0x2F, 0x7F, 0x4D, 0x2F, 
   0x7F, 0x4D, 0x2F, 0x7F, 0x4D, 0x2F, 0x7F, 0x4D, 0x2F, 0x7C, 0x4A, 0x2C, 0x7E, 0x4C, 0x2E, 0x83, 
   0x51, 0x33, 0x85, 0x53, 0x35, 0x82, 0x50, 0x32, 0x7C, 0x4A, 0x2C, 0x7C, 0x4A, 0x2C, 0x7E, 0x4C, 
   0x2E, 0x7E, 0x4D, 0x2F, 0x7D, 0x4E, 0x2F, 0x7D, 0x4E, 0x2F, 0x7D, 0x4E, 0x2F, 0x7C, 0x4D, 0x2E, 
   0x7C, 0x4D, 0x2E, 0x7C, 0x4D, 0x2E, 0x7F, 0x4D, 0x2E, 0x82, 0x4C, 0x2D, 0x82, 0x4C, 0x2D, 0x82, 
   0x4C, 0x2D, 0x84, 0x4E, 0x2F, 0x86, 0x50, 0x31, 0x86, 0x50, 0x31, 0x82, 0x4E, 0x30, 0x82, 0x4E, 
   0x30, 0x82, 0x4E, 0x30, 0x82, 0x4E, 0x30, 0x82, 0x4E, 0x30, 0x82, 0x4E, 0x30, 0x82, 0x4E, 0x30, 
   0x81, 0x4D, 0x2F, 0x81, 0x4D, 0x2F, 0x81, 0x4D, 0x2F, 0x81, 0x4D, 0x2F, 0x81, 0x4D, 0x2F, 0x81, 
   0x4D, 0x2E, 0x82, 0x4F, 0x31, 0x83, 0x50, 0x32, 0x83, 0x51, 0x34, 0x84, 0x54, 0x38, 0x81, 0x54, 
   0x38, 0x7F, 0x52, 0x38, 0x82, 0x59, 0x45, 0x7E, 0x5C, 0x4C, 0x68, 0x48, 0x38, 0x50, 0x33, 0x26, 
   0x4D, 0x33, 0x27, 0x50, 0x38, 0x2D, 0x4F, 0x37, 0x2C, 0x5C, 0x3F, 0x30, 0x67, 0x4E, 0x3E, 0x5B, 
   0x47, 0x39, 0x4E, 0x40, 0x32, 0x52, 0x47, 0x3B, 0x3E, 0x3A, 0x2C, 0x4A, 0x41, 0x35, 0x45, 0x36, 
   0x2D, 0x3B, 0x2E, 0x25, 0x4A, 0x40, 0x36, 0x51, 0x48, 0x3E, 0x43, 0x3A, 0x30, 0x44, 0x3B, 0x31, 
   0x4B, 0x43, 0x36, 0x4D, 0x43, 0x37, 0x46, 0x3B, 0x2F, 0x3F, 0x33, 0x27, 0x49, 0x3B, 0x2F, 0x4F, 
   0x41, 0x35, 0x41, 0x34, 0x29, 0x55, 0x48, 0x3F, 0x44, 0x37, 0x2E, 0x44, 0x37, 0x2E, 0x46, 0x39, 
   0x30, 0x37, 0x2A, 0x21, 0x36, 0x29, 0x20, 0x3A, 0x30, 0x26, 0x37, 0x2D, 0x23, 0x36, 0x2C, 0x22, 
   0x3B, 0x31, 0x27, 0x36, 0x2C, 0x22, 0x37, 0x2D, 0x23, 0x35, 0x2A, 0x22, 0x33, 0x27, 0x22, 0x3A, 
   0x2E, 0x28, 0x3F, 0x33, 0x2D, 0x43, 0x37, 0x31, 0x3B, 0x2F, 0x29, 0x37, 0x2B, 0x25, 0x4D, 0x41, 
   0x3D, 0x43, 0x37, 0x33, 0x3F, 0x33, 0x2F, 0x39, 0x2D, 0x29, 0x3E, 0x32, 0x2E, 0x48, 0x3C, 0x38, 
   0x33, 0x26, 0x21, 0x39, 0x2B, 0x25, 0xF5, 0xE1, 0xDC, 0xFB, 0xE7, 0xE2, 0xF4, 0xE1, 0xDE, 0xE8, 
   0xD8, 0xD5, 0xC0, 0xB7, 0xB6, 0x71, 0x70, 0x6F, 0x70, 0x6F, 0x6E, 0x6D, 0x64, 0x66, 0x56, 0x52, 
   0x53, 0x4A, 0x4E, 0x4F, 0x58, 0x5D, 0x5E, 0x5B, 0x60, 0x63, 0x83, 0x84, 0x89, 0x74, 0x72, 0x76, 
   0x66, 0x65, 0x67, 0x6B, 0x71, 0x71, 0x6A, 0x72, 0x72, 0x6A, 0x72, 0x72, 0x8F, 0x94, 0x95, 0x77, 
   0x7C, 0x7C, 0x7B, 0x81, 0x80, 0x68, 0x6A, 0x69, 0x72, 0x6D, 0x6D, 0x91, 0x89, 0x8A, 0xDF, 0xD8, 
   0xD9, 0x77, 0x70, 0x71, 0xCD, 0xC6, 0xC7, 0xD7, 0xCF, 0xD0, 0xCC, 0xC4, 0xC5, 0x68, 0x60, 0x61, 
   0x5E, 0x56, 0x57, 0xD4, 0xCD, 0xCD, 0xE2, 0xDA, 0xDB, 0xE7, 0xD2, 0xD6, 0xDE, 0xC6, 0xC8, 0xDE, 
   0xC7, 0xC6, 0xCD, 0xBC, 0xB9, 0x84, 0x7D, 0x7A, 0x63, 0x67, 0x67, 0x51, 0x51, 0x52, 0x8C, 0x86, 
   0x87, 0xAF, 0xAA, 0xAB, 0xAD, 0xA8, 0xA9, 0x8F, 0x8A, 0x8B, 0x99, 0x94, 0x95, 0xF0, 0xED, 0xEE, 
   0xB2, 0xAD, 0xAE, 0xE7, 0xE3, 0xE4, 0xA8, 0xA4, 0xA4, 0x4A, 0x46, 0x45, 0x61, 0x59, 0x57, 0x8F, 
   0x83, 0x80, 0x64, 0x5D, 0x56, 0x5F, 0x5B, 0x53, 0x51, 0x4D, 0x48, 0x50, 0x4B, 0x47, 0x6E, 0x66, 
   0x65, 0x64, 0x5B, 0x5B, 0x83, 0x78, 0x78, 0x96, 0x87, 0x80, 0x61, 0x54, 0x4D, 0x50, 0x46, 0x40, 
   0x4B, 0x47, 0x42, 0x44, 0x41, 0x3D, 0xA1, 0xA1, 0x9D, 0x67, 0x65, 0x62, 0x3D, 0x37, 0x37, 0x9C, 
   0x97, 0x96, 0xA8, 0xA0, 0xA0, 0x87, 0x7E, 0x7E, 0x87, 0x7D, 0x7D, 0xAC, 0xA1, 0xA1, 0x5F, 0x55, 
   0x55, 0x8D, 0x83, 0x83, 0x91, 0x87, 0x87, 0xCA, 0xC1, 0xC1, 0xFC, 0xF5, 0xF5, 0xAF, 0xA6, 0xA6, 
   0x77, 0x6C, 0x6A, 0x68, 0x5C, 0x59, 0x6F, 0x68, 0x65, 0x5D, 0x59, 0x58, 0x6F, 0x6B, 0x6B, 0xC1, 
   0xBA, 0xBB, 0xF0, 0xEA, 0xEA, 0x79, 0x6D, 0x6C, 0xC1, 0xAF, 0xAD, 0xCE, 0xB2, 0xAD, 0xB6, 0x91, 
   0x89, 0xB6, 0x8B, 0x80, 0x9C, 0x70, 0x62, 0x91, 0x64, 0x54, 0x8E, 0x60, 0x4E, 0x89, 0x5B, 0x49, 
   0x88, 0x5A, 0x46, 0x87, 0x5A, 0x43, 0x82, 0x57, 0x3F, 0x81, 0x55, 0x3E, 0x87, 0x58, 0x40, 0x88, 
   0x59, 0x41, 0x89, 0x59, 0x41, 0x88, 0x58, 0x41, 0x87, 0x57, 0x40, 0x88, 0x58, 0x40, 0x86, 0x56, 
   0x3E, 0x84, 0x54, 0x3C, 0x83, 0x53, 0x3B, 0x82, 0x52, 0x3A, 0x84, 0x54, 0x3C, 0x84, 0x54, 0x3C, 
   0x84, 0x54, 0x3C, 0x83, 0x53, 0x39, 0x82, 0x52, 0x39, 0x81, 0x51, 0x37, 0x81, 0x51, 0x37, 0x80, 
   0x50, 0x36, 0x7F, 0x4F, 0x35, 0x80, 0x50, 0x35, 0x81, 0x51, 0x35, 0x81, 0x51, 0x35, 0x81, 0x51, 
   0x35, 0x80, 0x4F, 0x34, 0x80, 0x50, 0x34, 0x80, 0x51, 0x34, 0x80, 0x50, 0x34, 0x80, 0x50, 0x34, 
   0x80, 0x50, 0x34, 0x7F, 0x4F, 0x33, 0x7F, 0x4F, 0x33, 0x7F, 0x4F, 0x33, 0x7D, 0x4E, 0x31, 0x7D, 
   0x4E, 0x2F, 0x7D, 0x4E, 0x2F, 0x7D, 0x4E, 0x2F, 0x7D, 0x4E, 0x2F, 0x7D, 0x4E, 0x2F, 0x7D, 0x4E, 
   0x2F, 0x7F, 0x4D, 0x2F, 0x7F, 0x4D, 0x2F, 0x7F, 0x4D, 0x2F, 0x7F, 0x4D, 0x2F, 0x7E, 0x4C, 0x2E, 
   0x7E, 0x4C, 0x2E, 0x7D, 0x4D, 0x2E, 0x7C, 0x4D, 0x2E, 0x7C, 0x4D, 0x2E, 0x7C, 0x4D, 0x2E, 0x7C, 
   0x4D, 0x2E, 0x7C, 0x4D, 0x2E, 0x7C, 0x4D, 0x2E, 0x7D, 0x4C, 0x2E, 0x7D, 0x4B, 0x2D, 0x7D, 0x4B, 
   0x2D, 0x7E, 0x4C, 0x2E, 0x7E, 0x4C, 0x2E, 0x7E, 0x4C, 0x2E, 0x7F, 0x4D, 0x2F, 0x7F, 0x4D, 0x2F, 
   0x7F, 0x4D, 0x2F, 0x7F, 0x4D, 0x2F, 0x7E, 0x4C, 0x2E, 0x7D, 0x4B, 0x2D, 0x7D, 0x4B, 0x2D, 0x7F, 
   0x4D, 0x2F, 0x7F, 0x4D, 0x2F, 0x7D, 0x4B, 0x2D, 0x7B, 0x49, 0x2B, 0x7B, 0x49, 0x2B, 0x7C, 0x49, 
   0x2C, 0x7C, 0x4B, 0x2D, 0x7C, 0x4D, 0x2E, 0x7C, 0x4D, 0x2E, 0x7C, 0x4D, 0x2E, 0x7C, 0x4D, 0x2E, 
   0x7C, 0x4D, 0x2E, 0x7C, 0x4D, 0x2E, 0x7E, 0x4D, 0x2E, 0x80, 0x4D, 0x2D, 0x80, 0x4D, 0x2D, 0x80, 
   0x4D, 0x2D, 0x81, 0x4E, 0x2E, 0x83, 0x50, 0x31, 0x83, 0x50, 0x30, 0x81, 0x4D, 0x2F, 0x81, 0x4D, 
   0x2F, 0x81, 0x4D, 0x2F, 0x81, 0x4D, 0x2F, 0x81, 0x4D, 0x2F, 0x81, 0x4D, 0x2F, 0x81, 0x4D, 0x2F, 
   0x81, 0x4D, 0x2F, 0x81, 0x4D, 0x2F, 0x81, 0x4D, 0x2F, 0x80, 0x4C, 0x2E, 0x80, 0x4C, 0x2E, 0x80, 
   0x4C, 0x2E, 0x81, 0x4D, 0x2D, 0x81, 0x4E, 0x2E, 0x81, 0x4F, 0x30, 0x84, 0x52, 0x34, 0x82, 0x52, 
   0x36, 0x82, 0x52, 0x37, 0x7B, 0x4E, 0x37, 0x7F, 0x58, 0x42, 0x85, 0x60, 0x4C, 0x72, 0x51, 0x40, 
   0x5C, 0x3D, 0x2F, 0x54, 0x38, 0x2C, 0x58, 0x3D, 0x32, 0x59, 0x3D, 0x2E, 0x54, 0x3B, 0x2B, 0x5A, 
   0x45, 0x36, 0x56, 0x46, 0x39, 0x47, 0x3C, 0x2E, 0x4C, 0x46, 0x38, 0x49, 0x3D, 0x32, 0x45, 0x35, 
   0x2C, 0x40, 0x32, 0x29, 0x43, 0x36, 0x2D, 0x50, 0x44, 0x3B, 0x4A, 0x40, 0x36, 0x3C, 0x32, 0x28, 
   0x3B, 0x33, 0x26, 0x52, 0x48, 0x3C, 0x47, 0x3C, 0x30, 0x4D, 0x41, 0x35, 0x49, 0x3B, 0x2F, 0x44, 
   0x36, 0x2A, 0x45, 0x37, 0x2D, 0x46, 0x39, 0x30, 0x4A, 0x3D, 0x34, 0x48, 0x3B, 0x32, 0x3B, 0x2E, 
   0x25, 0x3D, 0x30, 0x27, 0x3F, 0x32, 0x29, 0x39, 0x2F, 0x25, 0x39, 0x2F, 0x25, 0x37, 0x2D, 0x23, 
   0x43, 0x39, 0x2F, 0x48, 0x3E, 0x34, 0x3E, 0x34, 0x2A, 0x34, 0x29, 0x21, 0x30, 0x24, 0x1E, 0x37, 
   0x2B, 0x25, 0x3A, 0x2E, 0x28, 0x3F, 0x33, 0x2D, 0x3A, 0x2E, 0x28, 0x38, 0x2C, 0x26, 0x48, 0x3C, 
   0x38, 0x3D, 0x31, 0x2D, 0x3B, 0x2F, 0x2B, 0x3C, 0x30, 0x2C, 0x32, 0x26, 0x22, 0x3E, 0x32, 0x2E, 
   0x3B, 0x2F, 0x2A, 0x39, 0x2D, 0x27, 0xFE, 0xED, 0xE8, 0xF0, 0xDC, 0xD7, 0xEE, 0xDA, 0xD7, 0xE9, 
   0xD9, 0xD6, 0xC1, 0xB9, 0xB8, 0x76, 0x77, 0x75, 0x64, 0x64, 0x64, 0x6F, 0x65, 0x67, 0x76, 0x71, 
   0x72, 0x61, 0x63, 0x64, 0x6D, 0x70, 0x72, 0x8E, 0x91, 0x95, 0xA2, 0xA3, 0xA8, 0x5B, 0x58, 0x5B, 
   0x5B, 0x59, 0x5A, 0x5F, 0x64, 0x65, 0x41, 0x4B, 0x4A, 0x55, 0x5F, 0x5F, 0x6C, 0x71, 0x72, 0x67, 
   0x6C, 0x6C, 0x56, 0x5B, 0x5A, 0x62, 0x60, 0x61, 0xC7, 0xBF, 0xC0, 0xF8, 0xEC, 0xEE, 0xD1, 0xC7, 
   0xC9, 0x9A, 0x93, 0x94, 0xD8, 0xD2, 0xD3, 0x8A, 0x83, 0x84, 0x9F, 0x98, 0x99, 0x94, 0x8E, 0x8F, 
   0x6F, 0x68, 0x69, 0xC3, 0xBD, 0xBE, 0x80, 0x7A, 0x7B, 0xAA, 0xA0, 0xA3, 0xCA, 0xBB, 0xBB, 0x84, 
   0x72, 0x70, 0x6E, 0x5F, 0x5C, 0x69, 0x63, 0x60, 0x4A, 0x4E, 0x4C, 0x63, 0x64, 0x64, 0xD7, 0xD2, 
   0xD3, 0xCB, 0xC6, 0xC7, 0x9D, 0x98, 0x99, 0x9C, 0x97, 0x98, 0xAC, 0xA7, 0xA8, 0xE8, 0xE4, 0xE5, 
   0x87, 0x80, 0x81, 0xC5, 0xC1, 0xC2, 0x4F, 0x4E, 0x4D, 0x46, 0x44, 0x43, 0xB4, 0xAD, 0xAB, 0xB4, 
   0xA7, 0xA5, 0x50, 0x47, 0x41, 0x53, 0x4E, 0x47, 0x64, 0x5E, 0x59, 0x52, 0x4D, 0x49, 0x4A, 0x45, 
   0x43, 0x63, 0x5E, 0x5D, 0x96, 0x91, 0x8F, 0x75, 0x6A, 0x62, 0x3D, 0x32, 0x2B, 0x45, 0x3C, 0x35, 
   0x40, 0x3B, 0x36, 0x51, 0x4B, 0x47, 0x82, 0x7E, 0x7B, 0x45, 0x3F, 0x3D, 0x9B, 0x97, 0x96, 0x9D, 
   0x97, 0x96, 0x6A, 0x61, 0x61, 0x6F, 0x64, 0x64, 0xB1, 0xA5, 0xA5, 0xA8, 0x9A, 0x9B, 0x7B, 0x6E, 
   0x6F, 0x90, 0x82, 0x83, 0xCF, 0xC3, 0xC4, 0xE9, 0xDE, 0xDE, 0xB8, 0xAD, 0xAD, 0x89, 0x7D, 0x7D, 
   0x68, 0x5F, 0x5D, 0x69, 0x63, 0x5F, 0x68, 0x66, 0x62, 0x63, 0x63, 0x61, 0xA2, 0x9E, 0x9E, 0xC9, 
   0xC1, 0xC2, 0x99, 0x8B, 0x8C, 0x98, 0x86, 0x82, 0xCC, 0xB4, 0xAE, 0xA4, 0x80, 0x79, 0xA7, 0x7B, 
   0x70, 0x9D, 0x6F, 0x5F, 0x93, 0x67, 0x52, 0x88, 0x5C, 0x46, 0x85, 0x58, 0x44, 0x84, 0x58, 0x42, 
   0x86, 0x59, 0x42, 0x83, 0x58, 0x40, 0x80, 0x57, 0x3E, 0x81, 0x57, 0x3F, 0x87, 0x57, 0x3F, 0x87, 
   0x57, 0x3E, 0x86, 0x56, 0x3E, 0x86, 0x56, 0x3E, 0x86, 0x56, 0x3E, 0x85, 0x55, 0x3D, 0x83, 0x53, 
   0x3B, 0x81, 0x51, 0x39, 0x81, 0x51, 0x39, 0x80, 0x50, 0x38, 0x81, 0x51, 0x39, 0x81, 0x51, 0x39, 
   0x81, 0x51, 0x39, 0x81, 0x51, 0x38, 0x81, 0x51, 0x37, 0x80, 0x50, 0x36, 0x80, 0x50, 0x36, 0x7F, 
   0x4F, 0x35, 0x7E, 0x4E, 0x34, 0x80, 0x50, 0x35, 0x81, 0x51, 0x35, 0x81, 0x51, 0x35, 0x81, 0x51, 
   0x35, 0x7F, 0x4F, 0x33, 0x7F, 0x4F, 0x33, 0x7E, 0x4E, 0x32, 0x7F, 0x4F, 0x33, 0x7F, 0x4F, 0x33, 
   0x7F, 0x4F, 0x33, 0x7E, 0x4E, 0x32, 0x7E, 0x4E, 0x32, 0x7F, 0x4F, 0x33, 0x7C, 0x4D, 0x2F, 0x7C, 
   0x4D, 0x2E, 0x7C, 0x4D, 0x2E, 0x7C, 0x4D, 0x2E, 0x7C, 0x4D, 0x2E, 0x7C, 0x4D, 0x2E, 0x7C, 0x4D, 
   0x2E, 0x7E, 0x4C, 0x2E, 0x7E, 0x4C, 0x2E, 0x7E, 0x4C, 0x2E, 0x7E, 0x4C, 0x2E, 0x7D, 0x4B, 0x2D, 
   0x7D, 0x4B, 0x2D, 0x7C, 0x4C, 0x2D, 0x7B, 0x4C, 0x2D, 0x7B, 0x4C, 0x2D, 0x7B, 0x4C, 0x2D, 0x7B, 
   0x4C, 0x2D, 0x7B, 0x4C, 0x2D, 0x7B, 0x4C, 0x2D, 0x7C, 0x4C, 0x2D, 0x7D, 0x4B, 0x2D, 0x7D, 0x4B, 
   0x2D, 0x7D, 0x4B, 0x2D, 0x7D, 0x4B, 0x2D, 0x7D, 0x4B, 0x2D, 0x7E, 0x4C, 0x2E, 0x7E, 0x4C, 0x2E, 
   0x7E, 0x4C, 0x2E, 0x7E, 0x4C, 0x2E, 0x7D, 0x4B, 0x2D, 0x7D, 0x4B, 0x2D, 0x7D, 0x4B, 0x2D, 0x7C, 
   0x4A, 0x2C, 0x7C, 0x4A, 0x2C, 0x7B, 0x49, 0x2B, 0x7B, 0x49, 0x2B, 0x7B, 0x49, 0x2B, 0x7A, 0x48, 
   0x2A, 0x7A, 0x49, 0x2B, 0x7B, 0x4C, 0x2D, 0x7B, 0x4C, 0x2D, 0x7B, 0x4C, 0x2D, 0x7B, 0x4C, 0x2D, 
   0x7B, 0x4C, 0x2D, 0x7B, 0x4C, 0x2D, 0x7C, 0x4C, 0x2D, 0x7D, 0x4B, 0x2C, 0x7D, 0x4B, 0x2C, 0x7D, 
   0x4B, 0x2C, 0x7F, 0x4D, 0x2E, 0x80, 0x4E, 0x30, 0x7F, 0x4D, 0x2E, 0x7E, 0x4C, 0x2E, 0x7E, 0x4C, 
   0x2E, 0x7E, 0x4C, 0x2E, 0x7E, 0x4C, 0x2E, 0x7E, 0x4C, 0x2E, 0x7E, 0x4C, 0x2E, 0x7E, 0x4C, 0x2D, 
   0x7E, 0x4C, 0x2E, 0x7E, 0x4C, 0x2E, 0x7E, 0x4C, 0x2E, 0x7D, 0x4B, 0x2D, 0x7D, 0x4B, 0x2D, 0x7D, 
   0x4B, 0x2D, 0x7E, 0x4B, 0x2B, 0x7F, 0x4C, 0x2C, 0x80, 0x4D, 0x2E, 0x81, 0x4F, 0x31, 0x80, 0x4E, 
   0x33, 0x80, 0x4E, 0x32, 0x80, 0x4E, 0x34, 0x7B, 0x4E, 0x35, 0x7D, 0x52, 0x3B, 0x85, 0x5F, 0x4A, 
   0x7D, 0x5A, 0x49, 0x63, 0x44, 0x36, 0x4E, 0x30, 0x22, 0x51, 0x36, 0x26, 0x54, 0x3C, 0x2B, 0x4E, 
   0x3A, 0x2A, 0x53, 0x44, 0x34, 0x4D, 0x41, 0x33, 0x53, 0x4A, 0x3C, 0x5A, 0x4D, 0x42, 0x46, 0x33, 
   0x2B, 0x4B, 0x39, 0x31, 0x39, 0x28, 0x1F, 0x47, 0x38, 0x2F, 0x46, 0x37, 0x2E, 0x41, 0x35, 0x2B, 
   0x45, 0x3C, 0x30, 0x50, 0x46, 0x3A, 0x43, 0x38, 0x2C, 0x45, 0x39, 0x2D, 0x51, 0x43, 0x37, 0x46, 
   0x38, 0x2C, 0x45, 0x38, 0x2D, 0x4C, 0x3F, 0x36, 0x5F, 0x52, 0x49, 0x45, 0x38, 0x2F, 0x40, 0x33, 
   0x2A, 0x3B, 0x2E, 0x25, 0x35, 0x28, 0x1F, 0x41, 0x37, 0x2D, 0x3D, 0x33, 0x29, 0x3D, 0x33, 0x29, 
   0x44, 0x3A, 0x30, 0x3F, 0x35, 0x2B, 0x37, 0x2D, 0x22, 0x34, 0x29, 0x21, 0x2E, 0x22, 0x1C, 0x3A, 
   0x2E, 0x28, 0x39, 0x2D, 0x27, 0x47, 0x3B, 0x35, 0x3B, 0x2F, 0x29, 0x3A, 0x2E, 0x28, 0x42, 0x36, 
   0x32, 0x38, 0x2C, 0x28, 0x38, 0x2C, 0x28, 0x44, 0x38, 0x34, 0x41, 0x35, 0x31, 0x31, 0x25, 0x21, 
   0x41, 0x35, 0x30, 0x3D, 0x30, 0x2A, 0x99, 0x84, 0x7F, 0xC4, 0xB0, 0xAB, 0xE8, 0xD3, 0xD1, 0xB9, 
   0xA9, 0xA7, 0x61, 0x58, 0x58, 0x88, 0x89, 0x88, 0xAD, 0xAD, 0xAC, 0xD9, 0xCF, 0xD1, 0x99, 0x94, 
   0x95, 0x7D, 0x7F, 0x80, 0x81, 0x86, 0x87, 0x87, 0x8A, 0x8E, 0x5C, 0x5E, 0x62, 0x5C, 0x57, 0x5B, 
   0x84, 0x81, 0x83, 0x51, 0x58, 0x58, 0x42, 0x4E, 0x4E, 0x63, 0x6E, 0x6E, 0x6A, 0x6F, 0x70, 0x86, 
   0x8B, 0x8C, 0x76, 0x7B, 0x7B, 0xA4, 0xA3, 0xA3, 0xF7, 0xED, 0xF0, 0xF7, 0xEC, 0xEE, 0xE0, 0xD7, 
   0xD9, 0xF9, 0xF2, 0xF4, 0x84, 0x7E, 0x7F, 0x71, 0x6B, 0x6C, 0xA2, 0x9C, 0x9D, 0xE9, 0xE3, 0xE4, 
   0xB7, 0xB1, 0xB2, 0x8D, 0x86, 0x87, 0x67, 0x62, 0x63, 0x6E, 0x6D, 0x70, 0x92, 0x8A, 0x8B, 0x6C, 
   0x5F, 0x5C, 0x93, 0x86, 0x81, 0x80, 0x7D, 0x78, 0x40, 0x46, 0x45, 0x72, 0x72, 0x72, 0x90, 0x89, 
   0x8A, 0xA1, 0x9B, 0x9C, 0xC8, 0xC3, 0xC4, 0xDC, 0xD6, 0xD7, 0x8A, 0x85, 0x85, 0x9A, 0x94, 0x94, 
   0x85, 0x7E, 0x7F, 0x85, 0x80, 0x81, 0x3F, 0x3F, 0x3E, 0x39, 0x39, 0x38, 0x93, 0x8D, 0x8A, 0xE0, 
   0xD5, 0xD2, 0xA2, 0x97, 0x92, 0x5A, 0x53, 0x4C, 0x47, 0x3F, 0x3A, 0x40, 0x3C, 0x37, 0x41, 0x3F, 
   0x3D, 0x4A, 0x4B, 0x4A, 0x52, 0x53, 0x51, 0x5E, 0x56, 0x4E, 0x5B, 0x53, 0x4B, 0x40, 0x38, 0x31, 
   0x43, 0x3B, 0x37, 0x5F, 0x57, 0x55, 0x99, 0x90, 0x8E, 0x58, 0x52, 0x50, 0x85, 0x80, 0x7F, 0xB5, 
   0xAD, 0xAD, 0x70, 0x65, 0x65, 0xB6, 0xA9, 0xAA, 0xC0, 0xB0, 0xB1, 0xBA, 0xAA, 0xAB, 0xA4, 0x94, 
   0x93, 0xC3, 0xB6, 0xB5, 0xF1, 0xE6, 0xE5, 0xA4, 0x98, 0x97, 0x71, 0x65, 0x64, 0x7B, 0x6D, 0x6C, 
   0x65, 0x5D, 0x5A, 0x64, 0x63, 0x5E, 0x61, 0x62, 0x5E, 0x84, 0x86, 0x84, 0x89, 0x87, 0x87, 0xB3, 
   0xAB, 0xAD, 0x80, 0x6F, 0x72, 0xD9, 0xC1, 0xBD, 0xD5, 0xB4, 0xAD, 0xAE, 0x83, 0x7A, 0x98, 0x68, 
   0x5A, 0x92, 0x61, 0x4E, 0x8B, 0x5F, 0x46, 0x89, 0x5E, 0x45, 0x86, 0x5A, 0x43, 0x84, 0x58, 0x40, 
   0x82, 0x58, 0x40, 0x80, 0x57, 0x3E, 0x7E, 0x56, 0x3D, 0x80, 0x58, 0x3E, 0x86, 0x55, 0x3E, 0x86, 
   0x53, 0x3C, 0x85, 0x53, 0x3C, 0x85, 0x53, 0x3C, 0x85, 0x53, 0x3C, 0x82, 0x50, 0x39, 0x81, 0x4F, 
   0x38, 0x81, 0x4F, 0x38, 0x81, 0x4F, 0x38, 0x81, 0x4F, 0x38, 0x80, 0x4E, 0x37, 0x80, 0x4E, 0x37, 
   0x80, 0x4E, 0x37, 0x80, 0x50, 0x36, 0x80, 0x50, 0x36, 0x7E, 0x4E, 0x34, 0x7F, 0x4F, 0x35, 0x7E, 
   0x4E, 0x34, 0x7D, 0x4D, 0x33, 0x7F, 0x4F, 0x34, 0x7F, 0x4F, 0x33, 0x7F, 0x4F, 0x33, 0x7F, 0x4F, 
   0x33, 0x7E, 0x4E, 0x32, 0x7D, 0x4D, 0x31, 0x7D, 0x4D, 0x31, 0x7D, 0x4D, 0x31, 0x7D, 0x4D, 0x31, 
   0x7D, 0x4D, 0x31, 0x7D, 0x4D, 0x31, 0x7E, 0x4E, 0x32, 0x7E, 0x4E, 0x32, 0x7B, 0x4C, 0x2E, 0x7A, 
   0x4B, 0x2B, 0x7A, 0x4B, 0x2B, 0x7A, 0x4B, 0x2B, 0x7B, 0x4C, 0x2C, 0x7B, 0x4C, 0x2C, 0x7B, 0x4C, 
   0x2C, 0x7D, 0x4C, 0x2C, 0x7D, 0x4C, 0x2C, 0x7D, 0x4C, 0x2C, 0x7D, 0x4C, 0x2C, 0x7C, 0x4B, 0x2B, 
   0x7C, 0x4B, 0x2B, 0x7B, 0x4B, 0x2C, 0x7A, 0x4B, 0x2C, 0x7A, 0x4B, 0x2C, 0x7A, 0x4B, 0x2C, 0x7A, 
   0x4B, 0x2C, 0x7A, 0x4B, 0x2C, 0x7A, 0x4B, 0x2C, 0x7C, 0x4B, 0x2D, 0x7D, 0x4B, 0x2D, 0x7D, 0x4B, 
   0x2D, 0x7D, 0x4B, 0x2D, 0x7C, 0x4A, 0x2C, 0x7C, 0x4A, 0x2C, 0x7D, 0x4B, 0x2D, 0x7D, 0x4B, 0x2D, 
   0x7D, 0x4B, 0x2D, 0x7D, 0x4B, 0x2D, 0x7C, 0x4A, 0x2C, 0x7D, 0x4B, 0x2D, 0x7C, 0x4A, 0x2C, 0x7C, 
   0x4A, 0x2C, 0x7C, 0x4A, 0x2C, 0x7D, 0x4A, 0x2C, 0x7D, 0x4B, 0x2D, 0x7C, 0x4A, 0x2C, 0x7B, 0x49, 
   0x2B, 0x7A, 0x49, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x7A, 0x4B, 0x2C, 
   0x7A, 0x4B, 0x2C, 0x7A, 0x4B, 0x2C, 0x7A, 0x4B, 0x2D, 0x7A, 0x4A, 0x2E, 0x7A, 0x4A, 0x2E, 0x7A, 
   0x4A, 0x2E, 0x7C, 0x4C, 0x30, 0x7D, 0x4C, 0x30, 0x7A, 0x4A, 0x2E, 0x7B, 0x4A, 0x2E, 0x7B, 0x4A, 
   0x2E, 0x7B, 0x4A, 0x2E, 0x7B, 0x4A, 0x2E, 0x7B, 0x4A, 0x2E, 0x7B, 0x4A, 0x2E, 0x7B, 0x4B, 0x2F, 
   0x7B, 0x4B, 0x2F, 0x7B, 0x4B, 0x2F, 0x7B, 0x4A, 0x2E, 0x7A, 0x49, 0x2D, 0x7A, 0x49, 0x2D, 0x7A, 
   0x49, 0x2D, 0x7E, 0x4B, 0x2B, 0x7F, 0x4C, 0x2C, 0x7F, 0x4C, 0x2D, 0x7E, 0x4C, 0x2E, 0x7E, 0x4B, 
   0x30, 0x7E, 0x4B, 0x31, 0x7E, 0x4A, 0x2F, 0x7C, 0x4A, 0x2D, 0x7C, 0x4D, 0x33, 0x7F, 0x55, 0x3E, 
   0x81, 0x5B, 0x48, 0x7C, 0x5C, 0x4A, 0x67, 0x49, 0x39, 0x4D, 0x36, 0x26, 0x4E, 0x38, 0x28, 0x4E, 
   0x3B, 0x2A, 0x4B, 0x3C, 0x2C, 0x48, 0x3A, 0x2B, 0x53, 0x47, 0x38, 0x62, 0x52, 0x47, 0x49, 0x33, 
   0x2C, 0x43, 0x2E, 0x27, 0x40, 0x2D, 0x26, 0x4F, 0x3D, 0x36, 0x4E, 0x3D, 0x35, 0x42, 0x34, 0x2B, 
   0x4B, 0x42, 0x36, 0x4D, 0x43, 0x37, 0x51, 0x46, 0x3A, 0x41, 0x35, 0x29, 0x46, 0x38, 0x2C, 0x41, 
   0x33, 0x27, 0x4B, 0x3D, 0x33, 0x4E, 0x41, 0x38, 0x55, 0x48, 0x3F, 0x47, 0x3A, 0x31, 0x4A, 0x3D, 
   0x35, 0x41, 0x34, 0x2B, 0x33, 0x26, 0x1E, 0x38, 0x2E, 0x24, 0x32, 0x28, 0x1E, 0x3A, 0x30, 0x26, 
   0x40, 0x37, 0x2D, 0x3F, 0x35, 0x2B, 0x36, 0x2D, 0x23, 0x3A, 0x2F, 0x27, 0x33, 0x27, 0x21, 0x37, 
   0x2B, 0x25, 0x3A, 0x2E, 0x28, 0x48, 0x3C, 0x36, 0x3D, 0x30, 0x2A, 0x37, 0x2B, 0x25, 0x40, 0x34, 
   0x30, 0x3F, 0x32, 0x2E, 0x3A, 0x2E, 0x2A, 0x40, 0x34, 0x30, 0x45, 0x3A, 0x35, 0x31, 0x25, 0x21, 
   0x38, 0x2D, 0x28, 0x40, 0x35, 0x2E, 0x6F, 0x61, 0x5D, 0xCB, 0xB7, 0xB2, 0xDC, 0xC5, 0xC0, 0x79, 
   0x6B, 0x65, 0x97, 0x95, 0x8F, 0x90, 0x94, 0x91, 0xB6, 0xB4, 0xB3, 0xE6, 0xDC, 0xDB, 0xC3, 0xBD, 
   0xBD, 0x7C, 0x7D, 0x7D, 0x6B, 0x6C, 0x6E, 0x6D, 0x6C, 0x72, 0x63, 0x5E, 0x67, 0x65, 0x5F, 0x63, 
   0x71, 0x6C, 0x6E, 0x54, 0x53, 0x55, 0x4E, 0x51, 0x52, 0x6A, 0x6E, 0x6F, 0x6F, 0x72, 0x73, 0x7E, 
   0x80, 0x80, 0xD2, 0xD0, 0xD0, 0xFE, 0xF9, 0xF9, 0xB3, 0xA9, 0xAA, 0xC8, 0xBB, 0xBC, 0xEF, 0xE5, 
   0xE5, 0xC4, 0xBD, 0xBC, 0x53, 0x4B, 0x4C, 0x6F, 0x68, 0x6B, 0xE1, 0xDB, 0xDE, 0x8D, 0x89, 0x8A, 
   0x7B, 0x77, 0x79, 0x62, 0x5F, 0x60, 0x59, 0x56, 0x58, 0x6F, 0x6D, 0x6E, 0x4B, 0x45, 0x46, 0xA1, 
   0x96, 0x94, 0xAA, 0x9C, 0x9B, 0xAE, 0xA3, 0xA2, 0x9F, 0x95, 0x96, 0xA6, 0x9A, 0x9A, 0xD5, 0xC7, 
   0xC7, 0xCE, 0xC4, 0xC5, 0xF0, 0xED, 0xEE, 0xA5, 0xA6, 0xA7, 0x62, 0x62, 0x64, 0x6D, 0x6C, 0x70, 
   0x75, 0x70, 0x70, 0x66, 0x64, 0x63, 0x4B, 0x4B, 0x49, 0x35, 0x34, 0x30, 0x9C, 0x94, 0x90, 0xF1, 
   0xE3, 0xDF, 0xAC, 0x9F, 0x99, 0x84, 0x79, 0x74, 0x8D, 0x81, 0x7D, 0x90, 0x84, 0x80, 0x80, 0x74, 
   0x71, 0x56, 0x4A, 0x48, 0x79, 0x6D, 0x6B, 0xB0, 0xA7, 0x9E, 0xC3, 0xBB, 0xB2, 0x6A, 0x62, 0x5A, 
   0x3B, 0x31, 0x2B, 0x51, 0x47, 0x42, 0x6B, 0x61, 0x5D, 0x78, 0x6F, 0x6E, 0x8E, 0x86, 0x86, 0x76, 
   0x6E, 0x6E, 0x5E, 0x55, 0x55, 0xA2, 0x9A, 0x9A, 0x9C, 0x92, 0x91, 0x6A, 0x60, 0x5E, 0x7F, 0x74, 
   0x70, 0xD8, 0xCB, 0xC8, 0xE8, 0xD8, 0xD5, 0xBF, 0xAC, 0xAA, 0xA4, 0x94, 0x91, 0x74, 0x66, 0x63, 
   0x6A, 0x61, 0x5E, 0x55, 0x52, 0x4F, 0x79, 0x7B, 0x77, 0x78, 0x7B, 0x7A, 0x94, 0x91, 0x91, 0xB8, 
   0xAA, 0xAD, 0xA6, 0x8D, 0x90, 0xFE, 0xE0, 0xD7, 0xC6, 0xA4, 0x97, 0x88, 0x5F, 0x4F, 0x8A, 0x5D, 
   0x4A, 0x88, 0x5A, 0x42, 0x88, 0x5B, 0x3F, 0x83, 0x57, 0x3C, 0x84, 0x57, 0x3F, 0x82, 0x54, 0x3C, 
   0x80, 0x55, 0x3C, 0x80, 0x55, 0x3C, 0x7F, 0x54, 0x3B, 0x80, 0x54, 0x3B, 0x84, 0x55, 0x3C, 0x83, 
   0x54, 0x3A, 0x81, 0x51, 0x38, 0x80, 0x51, 0x38, 0x80, 0x51, 0x38, 0x7F, 0x4F, 0x36, 0x7F, 0x4F, 
   0x36, 0x80, 0x4F, 0x36, 0x80, 0x4F, 0x36, 0x80, 0x4F, 0x36, 0x7F, 0x4E, 0x36, 0x7F, 0x4E, 0x36, 
   0x7F, 0x4E, 0x36, 0x7F, 0x4F, 0x35, 0x7F, 0x4F, 0x35, 0x7F, 0x4F, 0x35, 0x7F, 0x4F, 0x35, 0x7E, 
   0x4E, 0x34, 0x7C, 0x4C, 0x33, 0x7D, 0x4D, 0x32, 0x7D, 0x4D, 0x31, 0x7D, 0x4D, 0x31, 0x7D, 0x4D, 
   0x31, 0x7D, 0x4D, 0x31, 0x7C, 0x4D, 0x31, 0x7C, 0x4D, 0x31, 0x7C, 0x4D, 0x31, 0x7B, 0x4C, 0x30, 
   0x7B, 0x4C, 0x30, 0x7C, 0x4C, 0x30, 0x7C, 0x4D, 0x31, 0x7C, 0x4D, 0x31, 0x7A, 0x4B, 0x2E, 0x79, 
   0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x7A, 0x4B, 0x2B, 0x7A, 0x4B, 0x2B, 0x7A, 0x4B, 
   0x2B, 0x7B, 0x4B, 0x2B, 0x7B, 0x4B, 0x2B, 0x7B, 0x4B, 0x2B, 0x7B, 0x4B, 0x2B, 0x7A, 0x4B, 0x2B, 
   0x7A, 0x4B, 0x2B, 0x7A, 0x4B, 0x2C, 0x7A, 0x4B, 0x2C, 0x7A, 0x4B, 0x2C, 0x7A, 0x4B, 0x2C, 0x79, 
   0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x7A, 0x4A, 0x2C, 0x7B, 0x4A, 0x2C, 0x7B, 0x4A, 
   0x2C, 0x7B, 0x4B, 0x2C, 0x7B, 0x4B, 0x2C, 0x7B, 0x4B, 0x2C, 0x7B, 0x4B, 0x2C, 0x7B, 0x4B, 0x2C, 
   0x7C, 0x4C, 0x2D, 0x7B, 0x4B, 0x2D, 0x7A, 0x4A, 0x2B, 0x7B, 0x4B, 0x2D, 0x7B, 0x4B, 0x2D, 0x7C, 
   0x4C, 0x2D, 0x7C, 0x4C, 0x2D, 0x7C, 0x4C, 0x2D, 0x7C, 0x4C, 0x2E, 0x7B, 0x4B, 0x2C, 0x7B, 0x4A, 
   0x2C, 0x79, 0x4A, 0x2B, 0x78, 0x49, 0x2A, 0x78, 0x49, 0x2A, 0x78, 0x49, 0x2A, 0x7A, 0x4B, 0x2C, 
   0x7A, 0x4B, 0x2C, 0x7A, 0x4B, 0x2C, 0x7A, 0x4B, 0x2D, 0x7B, 0x4A, 0x2D, 0x7B, 0x4A, 0x2D, 0x7B, 
   0x4A, 0x2D, 0x7C, 0x4B, 0x2E, 0x7C, 0x4B, 0x2E, 0x7B, 0x4A, 0x2D, 0x7B, 0x4A, 0x2D, 0x7B, 0x4A, 
   0x2D, 0x7B, 0x4A, 0x2D, 0x7B, 0x4A, 0x2D, 0x7B, 0x4A, 0x2D, 0x7B, 0x4A, 0x2D, 0x7B, 0x4A, 0x2D, 
   0x7C, 0x4B, 0x2E, 0x7C, 0x4B, 0x2E, 0x7A, 0x49, 0x2C, 0x79, 0x48, 0x2B, 0x79, 0x48, 0x2B, 0x79, 
   0x48, 0x2B, 0x7C, 0x4A, 0x2B, 0x7D, 0x4A, 0x2B, 0x7D, 0x4A, 0x2C, 0x7C, 0x4A, 0x2C, 0x7C, 0x49, 
   0x2D, 0x7C, 0x49, 0x2D, 0x7B, 0x49, 0x2B, 0x7D, 0x4B, 0x2B, 0x7F, 0x4E, 0x30, 0x7E, 0x4F, 0x33, 
   0x7D, 0x51, 0x36, 0x80, 0x56, 0x3B, 0x8B, 0x63, 0x4A, 0x67, 0x4E, 0x34, 0x48, 0x32, 0x1A, 0x4A, 
   0x35, 0x21, 0x57, 0x45, 0x34, 0x50, 0x40, 0x30, 0x4A, 0x3B, 0x2F, 0x5C, 0x4B, 0x40, 0x53, 0x40, 
   0x35, 0x41, 0x2D, 0x22, 0x44, 0x31, 0x25, 0x4B, 0x38, 0x2B, 0x52, 0x40, 0x33, 0x4C, 0x3A, 0x2D, 
   0x42, 0x37, 0x2C, 0x45, 0x3A, 0x30, 0x53, 0x47, 0x3C, 0x51, 0x44, 0x3A, 0x56, 0x48, 0x3E, 0x42, 
   0x35, 0x2B, 0x46, 0x39, 0x2E, 0x45, 0x38, 0x2E, 0x3E, 0x32, 0x27, 0x45, 0x38, 0x2D, 0x42, 0x36, 
   0x2B, 0x3B, 0x2F, 0x24, 0x3A, 0x2D, 0x23, 0x3D, 0x32, 0x28, 0x3D, 0x32, 0x28, 0x45, 0x39, 0x2F, 
   0x41, 0x35, 0x2C, 0x41, 0x36, 0x2C, 0x37, 0x2B, 0x22, 0x36, 0x2A, 0x21, 0x30, 0x24, 0x1C, 0x35, 
   0x28, 0x21, 0x32, 0x27, 0x20, 0x43, 0x38, 0x31, 0x46, 0x3B, 0x36, 0x31, 0x26, 0x21, 0x3E, 0x34, 
   0x30, 0x3E, 0x33, 0x2F, 0x3A, 0x2F, 0x2B, 0x40, 0x34, 0x30, 0x48, 0x3A, 0x37, 0x36, 0x29, 0x25, 
   0x31, 0x24, 0x20, 0x3C, 0x30, 0x2B, 0x74, 0x6B, 0x66, 0xD5, 0xC1, 0xBC, 0xDF, 0xC7, 0xC0, 0xAF, 
   0xA2, 0x98, 0x59, 0x5D, 0x54, 0x52, 0x57, 0x54, 0xB0, 0xAD, 0xAB, 0xD4, 0xCA, 0xC6, 0xB1, 0xAB, 
   0xA9, 0x82, 0x82, 0x82, 0x6C, 0x6D, 0x70, 0x66, 0x63, 0x6C, 0x95, 0x8F, 0x9A, 0xAD, 0xA7, 0xAD, 
   0xCB, 0xC6, 0xC8, 0x73, 0x6D, 0x71, 0x92, 0x8D, 0x90, 0x7D, 0x79, 0x7C, 0x95, 0x93, 0x96, 0xC4, 
   0xC0, 0xC2, 0xF4, 0xEC, 0xED, 0xCF, 0xC6, 0xC7, 0x82, 0x78, 0x79, 0xE6, 0xDB, 0xDB, 0xDF, 0xD3, 
   0xD1, 0x8D, 0x81, 0x7D, 0x78, 0x6F, 0x6F, 0xD3, 0xD0, 0xD3, 0xD0, 0xCA, 0xCC, 0x58, 0x53, 0x55, 
   0x6A, 0x67, 0x68, 0x6B, 0x69, 0x6B, 0x73, 0x70, 0x72, 0x6C, 0x66, 0x66, 0x48, 0x41, 0x40, 0xB0, 
   0xA4, 0xA5, 0xC9, 0xBA, 0xBB, 0xFA, 0xEA, 0xEC, 0xD6, 0xC1, 0xC4, 0xEC, 0xD9, 0xD9, 0xF5, 0xE3, 
   0xE2, 0xF2, 0xE8, 0xE8, 0xBF, 0xBF, 0xBF, 0x40, 0x43, 0x44, 0x60, 0x63, 0x68, 0x72, 0x75, 0x7A, 
   0x60, 0x5E, 0x5E, 0x52, 0x52, 0x50, 0x4D, 0x4E, 0x4A, 0x3C, 0x39, 0x34, 0xB1, 0xA7, 0xA2, 0xEE, 
   0xDE, 0xD8, 0x5F, 0x50, 0x4B, 0x51, 0x45, 0x41, 0x66, 0x57, 0x54, 0x8D, 0x7C, 0x78, 0x9E, 0x8A, 
   0x87, 0x95, 0x7D, 0x7B, 0xDA, 0xC4, 0xC1, 0xEF, 0xE5, 0xDC, 0xD4, 0xCB, 0xC0, 0x81, 0x77, 0x6E, 
   0x4C, 0x41, 0x3A, 0x46, 0x3C, 0x35, 0x50, 0x45, 0x3F, 0x67, 0x5B, 0x5B, 0x51, 0x45, 0x48, 0x44, 
   0x3B, 0x3C, 0x5A, 0x54, 0x53, 0x75, 0x70, 0x6E, 0x85, 0x80, 0x7D, 0x6C, 0x69, 0x64, 0x9A, 0x93, 
   0x8F, 0xF3, 0xE7, 0xE3, 0xEF, 0xDC, 0xD9, 0x9A, 0x83, 0x82, 0x6F, 0x5C, 0x59, 0x70, 0x63, 0x5F, 
   0x60, 0x56, 0x54, 0x70, 0x6A, 0x6A, 0x91, 0x92, 0x90, 0x84, 0x85, 0x84, 0xBA, 0xB3, 0xB3, 0x8F, 
   0x7C, 0x7D, 0xD3, 0xB4, 0xB7, 0xD0, 0xAE, 0xA0, 0x87, 0x62, 0x50, 0x86, 0x5F, 0x4B, 0x85, 0x5C, 
   0x44, 0x86, 0x5B, 0x40, 0x88, 0x5A, 0x3C, 0x86, 0x57, 0x3C, 0x83, 0x55, 0x3E, 0x82, 0x54, 0x3C, 
   0x82, 0x54, 0x3C, 0x81, 0x53, 0x3B, 0x81, 0x53, 0x3B, 0x81, 0x53, 0x3B, 0x81, 0x55, 0x39, 0x7F, 
   0x53, 0x37, 0x7D, 0x50, 0x35, 0x7B, 0x4F, 0x33, 0x7B, 0x4E, 0x33, 0x7B, 0x4E, 0x33, 0x7D, 0x4F, 
   0x34, 0x7E, 0x4E, 0x34, 0x7E, 0x4E, 0x34, 0x7E, 0x4E, 0x34, 0x7E, 0x4E, 0x34, 0x7E, 0x4E, 0x34, 
   0x7E, 0x4E, 0x34, 0x7E, 0x4E, 0x34, 0x7E, 0x4E, 0x34, 0x7E, 0x4E, 0x34, 0x7E, 0x4E, 0x34, 0x7D, 
   0x4D, 0x33, 0x7C, 0x4C, 0x33, 0x7C, 0x4C, 0x31, 0x7C, 0x4D, 0x31, 0x7C, 0x4D, 0x31, 0x7C, 0x4D, 
   0x31, 0x7C, 0x4D, 0x31, 0x7C, 0x4D, 0x31, 0x7C, 0x4D, 0x31, 0x7C, 0x4D, 0x31, 0x7A, 0x4B, 0x2F, 
   0x7A, 0x4B, 0x2F, 0x7B, 0x4C, 0x30, 0x7B, 0x4C, 0x30, 0x7B, 0x4C, 0x30, 0x7A, 0x4B, 0x2E, 0x79, 
   0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 
   0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 
   0x79, 0x4A, 0x2B, 0x7A, 0x4B, 0x2C, 0x7A, 0x4B, 0x2C, 0x7A, 0x4B, 0x2C, 0x7A, 0x4B, 0x2C, 0x79, 
   0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 
   0x2B, 0x7A, 0x4B, 0x2C, 0x7A, 0x4B, 0x2C, 0x7A, 0x4B, 0x2C, 0x7A, 0x4B, 0x2C, 0x7A, 0x4B, 0x2C, 
   0x7B, 0x4C, 0x2D, 0x79, 0x4B, 0x2C, 0x79, 0x4A, 0x2B, 0x7A, 0x4B, 0x2C, 0x7B, 0x4C, 0x2D, 0x7B, 
   0x4C, 0x2D, 0x7B, 0x4C, 0x2D, 0x7B, 0x4C, 0x2D, 0x7B, 0x4C, 0x2D, 0x7A, 0x4B, 0x2C, 0x7A, 0x4B, 
   0x2C, 0x79, 0x4A, 0x2B, 0x78, 0x49, 0x2A, 0x78, 0x49, 0x2A, 0x78, 0x49, 0x2A, 0x7A, 0x4B, 0x2C, 
   0x7A, 0x4B, 0x2C, 0x7A, 0x4B, 0x2C, 0x7B, 0x4B, 0x2C, 0x7C, 0x4A, 0x2C, 0x7C, 0x4A, 0x2C, 0x7C, 
   0x4A, 0x2C, 0x7C, 0x4A, 0x2C, 0x7C, 0x4A, 0x2C, 0x7C, 0x4A, 0x2C, 0x7C, 0x4A, 0x2C, 0x7C, 0x4A, 
   0x2C, 0x7C, 0x4A, 0x2C, 0x7C, 0x4A, 0x2C, 0x7C, 0x4A, 0x2C, 0x7C, 0x4A, 0x2C, 0x7C, 0x4A, 0x2C, 
   0x7D, 0x4B, 0x2D, 0x7D, 0x4B, 0x2D, 0x7A, 0x48, 0x2A, 0x7A, 0x48, 0x2A, 0x7A, 0x48, 0x2A, 0x7A, 
   0x48, 0x2A, 0x7B, 0x49, 0x2B, 0x7B, 0x49, 0x2B, 0x7B, 0x49, 0x2B, 0x7B, 0x49, 0x2B, 0x7B, 0x49, 
   0x2B, 0x7B, 0x49, 0x2B, 0x7B, 0x49, 0x2A, 0x7B, 0x4B, 0x2A, 0x7E, 0x4D, 0x2C, 0x7F, 0x4E, 0x2D, 
   0x80, 0x4E, 0x2D, 0x7F, 0x4D, 0x2C, 0x84, 0x54, 0x32, 0x79, 0x5B, 0x3B, 0x63, 0x49, 0x2C, 0x4C, 
   0x33, 0x1B, 0x4B, 0x35, 0x23, 0x4C, 0x3B, 0x2B, 0x4A, 0x39, 0x2E, 0x4D, 0x3C, 0x30, 0x60, 0x4F, 
   0x41, 0x54, 0x41, 0x34, 0x49, 0x36, 0x27, 0x54, 0x43, 0x32, 0x5C, 0x4A, 0x39, 0x52, 0x3F, 0x2E, 
   0x47, 0x3A, 0x30, 0x48, 0x3B, 0x32, 0x41, 0x33, 0x2B, 0x5B, 0x4E, 0x45, 0x68, 0x5B, 0x52, 0x4D, 
   0x40, 0x38, 0x44, 0x38, 0x2D, 0x4A, 0x3E, 0x31, 0x43, 0x37, 0x2B, 0x48, 0x3D, 0x30, 0x41, 0x35, 
   0x28, 0x34, 0x28, 0x1C, 0x2F, 0x23, 0x17, 0x3A, 0x2C, 0x23, 0x45, 0x38, 0x2F, 0x47, 0x3A, 0x31, 
   0x4B, 0x3E, 0x35, 0x3D, 0x30, 0x27, 0x3E, 0x31, 0x28, 0x37, 0x2A, 0x21, 0x35, 0x28, 0x1F, 0x38, 
   0x2B, 0x23, 0x36, 0x2B, 0x23, 0x3E, 0x34, 0x2D, 0x42, 0x39, 0x33, 0x35, 0x2D, 0x29, 0x40, 0x38, 
   0x34, 0x38, 0x2E, 0x2A, 0x36, 0x2B, 0x27, 0x3F, 0x33, 0x2F, 0x49, 0x3A, 0x36, 0x41, 0x32, 0x2F, 
   0x3D, 0x2D, 0x2B, 0x3A, 0x2C, 0x29, 0x89, 0x7C, 0x78, 0xE0, 0xCB, 0xC6, 0xD1, 0xB7, 0xB1, 0xD0, 
   0xC2, 0xB9, 0x68, 0x69, 0x63, 0x54, 0x58, 0x56, 0x8F, 0x8A, 0x88, 0xAC, 0xA1, 0x9E, 0x9C, 0x96, 
   0x95, 0xA5, 0xA5, 0xA6, 0x47, 0x4B, 0x4F, 0x6D, 0x6F, 0x76, 0x5C, 0x5C, 0x66, 0xB1, 0xB1, 0xB7, 
   0xD9, 0xDA, 0xDE, 0xCB, 0xCA, 0xCE, 0xE4, 0xE1, 0xE6, 0xE5, 0xE1, 0xE6, 0xAC, 0xA8, 0xAD, 0x99, 
   0x94, 0x98, 0xDE, 0xD7, 0xD8, 0x85, 0x7B, 0x7C, 0xC5, 0xBB, 0xBB, 0xF1, 0xE8, 0xE8, 0xA6, 0x9A, 
   0x99, 0xC7, 0xBA, 0xB7, 0xF0, 0xE6, 0xE5, 0xF2, 0xEA, 0xEA, 0x9F, 0x96, 0x97, 0x6D, 0x65, 0x65, 
   0xAE, 0xA7, 0xA8, 0x8F, 0x89, 0x89, 0x6E, 0x69, 0x69, 0x5D, 0x55, 0x55, 0xA8, 0x9F, 0x9F, 0xD2, 
   0xC5, 0xC5, 0xEA, 0xDB, 0xDC, 0xE7, 0xD3, 0xD5, 0xE1, 0xCB, 0xCD, 0xDD, 0xCA, 0xCA, 0xE9, 0xD9, 
   0xD8, 0xF0, 0xE8, 0xE9, 0x5F, 0x5D, 0x5E, 0x42, 0x45, 0x46, 0x5A, 0x5D, 0x60, 0x5C, 0x5F, 0x62, 
   0xAD, 0xAB, 0xAA, 0x61, 0x60, 0x5E, 0x3F, 0x3F, 0x3C, 0x2F, 0x2B, 0x26, 0x9C, 0x93, 0x8E, 0x95, 
   0x88, 0x81, 0x5F, 0x52, 0x4D, 0x3F, 0x35, 0x31, 0x3B, 0x2F, 0x2B, 0x46, 0x39, 0x36, 0x71, 0x62, 
   0x5F, 0x8A, 0x78, 0x75, 0xCE, 0xBD, 0xB9, 0xEE, 0xE5, 0xDB, 0x85, 0x7B, 0x72, 0x55, 0x4B, 0x42, 
   0x64, 0x5A, 0x53, 0x64, 0x5A, 0x54, 0x5C, 0x51, 0x4C, 0x83, 0x78, 0x77, 0x61, 0x55, 0x58, 0x43, 
   0x38, 0x3A, 0x57, 0x4E, 0x4E, 0x8E, 0x85, 0x84, 0x7D, 0x76, 0x73, 0xAB, 0xA5, 0xA1, 0xF5, 0xEA, 
   0xE7, 0xC5, 0xB6, 0xB2, 0xAC, 0x99, 0x96, 0x82, 0x6F, 0x6C, 0x60, 0x50, 0x4C, 0x5B, 0x50, 0x4C, 
   0x50, 0x49, 0x47, 0x74, 0x6F, 0x70, 0xBA, 0xBB, 0xB9, 0xB6, 0xB5, 0xB3, 0x83, 0x78, 0x75, 0xA6, 
   0x8F, 0x8D, 0xBE, 0x9D, 0x9A, 0x82, 0x5E, 0x4E, 0x84, 0x5B, 0x4B, 0x84, 0x5B, 0x47, 0x86, 0x5A, 
   0x43, 0x86, 0x58, 0x3E, 0x87, 0x58, 0x3B, 0x86, 0x57, 0x3D, 0x83, 0x55, 0x3D, 0x82, 0x54, 0x3C, 
   0x81, 0x53, 0x3B, 0x81, 0x53, 0x3B, 0x80, 0x52, 0x3A, 0x7F, 0x52, 0x39, 0x7E, 0x51, 0x36, 0x7C, 
   0x50, 0x34, 0x7B, 0x4E, 0x33, 0x7B, 0x4E, 0x33, 0x7B, 0x4E, 0x33, 0x7B, 0x4E, 0x33, 0x7C, 0x4D, 
   0x33, 0x7C, 0x4C, 0x32, 0x7C, 0x4C, 0x32, 0x7C, 0x4C, 0x32, 0x7C, 0x4C, 0x32, 0x7C, 0x4C, 0x32, 
   0x7C, 0x4C, 0x32, 0x7C, 0x4C, 0x32, 0x7C, 0x4C, 0x32, 0x7C, 0x4C, 0x32, 0x7D, 0x4D, 0x33, 0x7D, 
   0x4D, 0x33, 0x7C, 0x4C, 0x32, 0x7B, 0x4C, 0x31, 0x7B, 0x4C, 0x30, 0x7B, 0x4C, 0x30, 0x7B, 0x4C, 
   0x30, 0x7B, 0x4C, 0x30, 0x7B, 0x4C, 0x30, 0x7B, 0x4C, 0x30, 0x7B, 0x4C, 0x30, 0x7A, 0x4B, 0x2F, 
   0x7A, 0x4B, 0x2F, 0x7A, 0x4B, 0x2F, 0x7A, 0x4B, 0x2F, 0x7A, 0x4B, 0x2F, 0x7A, 0x4B, 0x2D, 0x79, 
   0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 
   0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 
   0x79, 0x4A, 0x2B, 0x7A, 0x4B, 0x2C, 0x7A, 0x4B, 0x2C, 0x7A, 0x4B, 0x2C, 0x7A, 0x4B, 0x2C, 0x79, 
   0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 
   0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x7A, 0x4B, 0x2C, 
   0x7A, 0x4B, 0x2C, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x7A, 0x4B, 0x2C, 0x7B, 0x4C, 0x2D, 0x7B, 
   0x4C, 0x2D, 0x7A, 0x4B, 0x2C, 0x7A, 0x4B, 0x2C, 0x7A, 0x4B, 0x2C, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 
   0x2B, 0x79, 0x4A, 0x2B, 0x78, 0x49, 0x2A, 0x78, 0x49, 0x2A, 0x78, 0x49, 0x2A, 0x79, 0x4A, 0x2B, 
   0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x7A, 0x4A, 0x2B, 0x7B, 0x49, 0x2B, 0x7B, 0x49, 0x2B, 0x7B, 
   0x49, 0x2B, 0x7B, 0x49, 0x2B, 0x7B, 0x49, 0x2B, 0x7B, 0x49, 0x2B, 0x7B, 0x49, 0x2B, 0x7B, 0x49, 
   0x2B, 0x7B, 0x49, 0x2B, 0x7B, 0x49, 0x2B, 0x7B, 0x49, 0x2B, 0x7B, 0x49, 0x2B, 0x7B, 0x49, 0x2B, 
   0x7C, 0x4A, 0x2C, 0x7C, 0x4A, 0x2C, 0x7A, 0x48, 0x2A, 0x7A, 0x48, 0x2A, 0x7A, 0x48, 0x2A, 0x7A, 
   0x48, 0x2A, 0x7A, 0x48, 0x2A, 0x7A, 0x48, 0x2A, 0x7A, 0x48, 0x2A, 0x7A, 0x48, 0x2A, 0x7A, 0x48, 
   0x2A, 0x7A, 0x48, 0x2A, 0x7A, 0x49, 0x2A, 0x7B, 0x4A, 0x2A, 0x7C, 0x4B, 0x2B, 0x7C, 0x4B, 0x2B, 
   0x7C, 0x4B, 0x2B, 0x7D, 0x4B, 0x2B, 0x7B, 0x4B, 0x2B, 0x74, 0x50, 0x32, 0x7B, 0x5A, 0x3E, 0x6D, 
   0x51, 0x37, 0x49, 0x31, 0x1C, 0x43, 0x2E, 0x1D, 0x49, 0x38, 0x29, 0x4D, 0x3B, 0x2D, 0x5F, 0x4B, 
   0x3E, 0x69, 0x56, 0x49, 0x4B, 0x39, 0x2C, 0x55, 0x46, 0x37, 0x62, 0x52, 0x42, 0x67, 0x58, 0x4A, 
   0x4B, 0x3E, 0x34, 0x49, 0x3C, 0x33, 0x4E, 0x41, 0x38, 0x51, 0x44, 0x3B, 0x54, 0x47, 0x3E, 0x47, 
   0x3A, 0x31, 0x43, 0x36, 0x2C, 0x4A, 0x3E, 0x32, 0x42, 0x36, 0x2B, 0x4D, 0x41, 0x35, 0x4A, 0x3E, 
   0x32, 0x38, 0x2B, 0x20, 0x3D, 0x30, 0x25, 0x46, 0x39, 0x30, 0x43, 0x36, 0x2D, 0x42, 0x35, 0x2C, 
   0x4C, 0x3F, 0x36, 0x37, 0x2A, 0x21, 0x41, 0x34, 0x2B, 0x41, 0x34, 0x2B, 0x3A, 0x2D, 0x25, 0x37, 
   0x2A, 0x22, 0x49, 0x3E, 0x37, 0x48, 0x3E, 0x37, 0x39, 0x2F, 0x2A, 0x39, 0x30, 0x2D, 0x41, 0x38, 
   0x34, 0x31, 0x27, 0x23, 0x2E, 0x23, 0x1F, 0x3B, 0x30, 0x2C, 0x43, 0x34, 0x31, 0x40, 0x31, 0x2E, 
   0x3D, 0x2E, 0x2B, 0x40, 0x33, 0x2F, 0x90, 0x80, 0x7D, 0xEC, 0xD3, 0xCF, 0xD9, 0xBD, 0xB8, 0xAD, 
   0x9E, 0x96, 0x55, 0x55, 0x4F, 0x4A, 0x49, 0x48, 0x7D, 0x76, 0x75, 0xC9, 0xBD, 0xBC, 0xAF, 0xA8, 
   0xA9, 0x63, 0x67, 0x68, 0x52, 0x59, 0x5C, 0x57, 0x60, 0x65, 0x5A, 0x62, 0x69, 0x5F, 0x64, 0x6A, 
   0x62, 0x66, 0x6B, 0x7C, 0x7E, 0x84, 0x81, 0x80, 0x86, 0xAC, 0xA8, 0xAE, 0x6C, 0x65, 0x6C, 0x83, 
   0x7C, 0x81, 0xA9, 0xA0, 0xA2, 0xA2, 0x98, 0x9A, 0xF6, 0xEF, 0xEF, 0xB6, 0xAA, 0xAA, 0xC3, 0xB7, 
   0xB5, 0xEF, 0xE3, 0xE0, 0xFA, 0xED, 0xEA, 0xD9, 0xCB, 0xC9, 0x92, 0x85, 0x82, 0x9B, 0x8F, 0x8D, 
   0x94, 0x89, 0x87, 0x59, 0x50, 0x4D, 0x64, 0x5C, 0x59, 0xAF, 0xA4, 0xA5, 0xF4, 0xE9, 0xE9, 0xA9, 
   0x9B, 0x9C, 0xC6, 0xB4, 0xB5, 0xC2, 0xAC, 0xAE, 0xD9, 0xC2, 0xC4, 0xE5, 0xD1, 0xD3, 0xFB, 0xF1, 
   0xF2, 0xCB, 0xC5, 0xC5, 0x41, 0x41, 0x41, 0x53, 0x55, 0x55, 0x57, 0x5A, 0x5B, 0x77, 0x78, 0x79, 
   0xAA, 0xA6, 0xA5, 0x55, 0x52, 0x51, 0x50, 0x4E, 0x4C, 0x43, 0x41, 0x3C, 0x50, 0x48, 0x43, 0x48, 
   0x3B, 0x35, 0x54, 0x4A, 0x45, 0x50, 0x4A, 0x45, 0x4C, 0x43, 0x3F, 0x4E, 0x44, 0x40, 0x50, 0x46, 
   0x41, 0x6E, 0x63, 0x5F, 0xA9, 0x9E, 0x99, 0x9B, 0x92, 0x88, 0x41, 0x37, 0x2E, 0x4F, 0x45, 0x3D, 
   0x56, 0x4B, 0x45, 0x5B, 0x51, 0x4C, 0x52, 0x47, 0x43, 0x7D, 0x72, 0x71, 0xA7, 0x9C, 0x9F, 0x8A, 
   0x7F, 0x81, 0x75, 0x6A, 0x6A, 0x83, 0x7A, 0x78, 0x89, 0x81, 0x7D, 0xF0, 0xE7, 0xE3, 0xDF, 0xCF, 
   0xCC, 0xAA, 0x98, 0x95, 0xA0, 0x8D, 0x8A, 0x7B, 0x69, 0x66, 0x6C, 0x5F, 0x5C, 0x58, 0x52, 0x4D, 
   0x5C, 0x57, 0x56, 0x57, 0x51, 0x54, 0x80, 0x7E, 0x7D, 0x8C, 0x86, 0x82, 0x71, 0x62, 0x5B, 0x90, 
   0x74, 0x6C, 0x86, 0x5E, 0x54, 0x82, 0x57, 0x46, 0x84, 0x58, 0x46, 0x83, 0x57, 0x43, 0x86, 0x57, 
   0x41, 0x86, 0x56, 0x3E, 0x88, 0x56, 0x3B, 0x85, 0x55, 0x3B, 0x82, 0x54, 0x3C, 0x81, 0x53, 0x3B, 
   0x81, 0x53, 0x3B, 0x81, 0x53, 0x3B, 0x7F, 0x51, 0x39, 0x7E, 0x50, 0x38, 0x7C, 0x4F, 0x34, 0x7B, 
   0x4E, 0x33, 0x7B, 0x4E, 0x33, 0x7C, 0x4F, 0x34, 0x7C, 0x4F, 0x34, 0x7C, 0x4F, 0x34, 0x7C, 0x4E, 
   0x33, 0x7C, 0x4C, 0x32, 0x7C, 0x4C, 0x32, 0x7C, 0x4C, 0x32, 0x7C, 0x4C, 0x32, 0x7C, 0x4C, 0x32, 
   0x7C, 0x4C, 0x32, 0x7C, 0x4C, 0x32, 0x7C, 0x4C, 0x32, 0x7C, 0x4C, 0x32, 0x7C, 0x4C, 0x32, 0x7C, 
   0x4C, 0x32, 0x7B, 0x4B, 0x31, 0x7A, 0x4B, 0x30, 0x7A, 0x4B, 0x2F, 0x7A, 0x4B, 0x2F, 0x7A, 0x4B, 
   0x2F, 0x7A, 0x4B, 0x2F, 0x7A, 0x4B, 0x2F, 0x7A, 0x4B, 0x2F, 0x7B, 0x4C, 0x30, 0x79, 0x4A, 0x2E, 
   0x78, 0x49, 0x2D, 0x79, 0x4A, 0x2E, 0x79, 0x4A, 0x2E, 0x79, 0x4A, 0x2E, 0x79, 0x4A, 0x2D, 0x79, 
   0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 
   0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 
   0x79, 0x4A, 0x2B, 0x7A, 0x4B, 0x2C, 0x7A, 0x4B, 0x2C, 0x7A, 0x4B, 0x2C, 0x7A, 0x4B, 0x2C, 0x79, 
   0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 
   0x2B, 0x79, 0x4A, 0x2B, 0x78, 0x49, 0x2A, 0x78, 0x49, 0x2A, 0x78, 0x49, 0x2A, 0x79, 0x4A, 0x2B, 
   0x79, 0x4A, 0x2B, 0x78, 0x49, 0x2A, 0x79, 0x4A, 0x2B, 0x7A, 0x4B, 0x2C, 0x7B, 0x4C, 0x2D, 0x7A, 
   0x4B, 0x2C, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x78, 0x49, 0x2A, 0x78, 0x49, 
   0x2A, 0x78, 0x49, 0x2A, 0x78, 0x49, 0x2A, 0x78, 0x49, 0x2A, 0x78, 0x49, 0x2A, 0x78, 0x49, 0x2A, 
   0x78, 0x49, 0x2A, 0x78, 0x49, 0x2A, 0x79, 0x49, 0x2A, 0x7A, 0x48, 0x2A, 0x7A, 0x48, 0x2A, 0x7A, 
   0x48, 0x2A, 0x7A, 0x48, 0x2A, 0x7A, 0x48, 0x2A, 0x7A, 0x48, 0x2A, 0x7A, 0x48, 0x2A, 0x7A, 0x48, 
   0x2A, 0x7A, 0x48, 0x2A, 0x7A, 0x48, 0x2A, 0x7A, 0x48, 0x2A, 0x7A, 0x48, 0x2A, 0x7A, 0x48, 0x2A, 
   0x7B, 0x49, 0x2B, 0x7B, 0x49, 0x2B, 0x7A, 0x48, 0x2A, 0x7A, 0x48, 0x2A, 0x7A, 0x48, 0x2A, 0x7A, 
   0x48, 0x2A, 0x79, 0x47, 0x29, 0x79, 0x47, 0x29, 0x79, 0x47, 0x29, 0x79, 0x47, 0x29, 0x79, 0x47, 
   0x29, 0x79, 0x47, 0x29, 0x7A, 0x48, 0x29, 0x7A, 0x49, 0x29, 0x7A, 0x49, 0x29, 0x79, 0x48, 0x28, 
   0x7E, 0x4D, 0x2D, 0x7B, 0x4A, 0x2A, 0x7A, 0x49, 0x29, 0x76, 0x4A, 0x2B, 0x77, 0x4D, 0x30, 0x7E, 
   0x5A, 0x40, 0x73, 0x55, 0x3F, 0x59, 0x3F, 0x2B, 0x46, 0x31, 0x1F, 0x53, 0x3E, 0x2F, 0x54, 0x3E, 
   0x33, 0x5E, 0x4B, 0x3E, 0x50, 0x3E, 0x31, 0x43, 0x33, 0x26, 0x45, 0x34, 0x28, 0x5C, 0x4E, 0x42, 
   0x53, 0x46, 0x3D, 0x43, 0x36, 0x2D, 0x4A, 0x3D, 0x34, 0x46, 0x39, 0x30, 0x4D, 0x40, 0x37, 0x50, 
   0x43, 0x3A, 0x47, 0x3A, 0x31, 0x40, 0x33, 0x2A, 0x44, 0x37, 0x2E, 0x57, 0x4A, 0x41, 0x4A, 0x3D, 
   0x34, 0x3E, 0x31, 0x28, 0x3E, 0x31, 0x28, 0x41, 0x34, 0x2B, 0x35, 0x28, 0x1F, 0x3D, 0x30, 0x27, 
   0x3D, 0x30, 0x27, 0x3A, 0x2D, 0x24, 0x38, 0x2B, 0x22, 0x38, 0x2B, 0x22, 0x35, 0x28, 0x1F, 0x34, 
   0x27, 0x1F, 0x34, 0x29, 0x21, 0x40, 0x36, 0x2F, 0x36, 0x2D, 0x27, 0x3F, 0x36, 0x32, 0x41, 0x38, 
   0x34, 0x31, 0x27, 0x23, 0x2F, 0x24, 0x20, 0x3D, 0x31, 0x2D, 0x3E, 0x2F, 0x2C, 0x3B, 0x2C, 0x29, 
   0x3B, 0x2E, 0x29, 0x39, 0x2D, 0x27, 0xA5, 0x91, 0x90, 0xF6, 0xD9, 0xD8, 0xDF, 0xC3, 0xBF, 0xAA, 
   0x9B, 0x94, 0x74, 0x74, 0x6F, 0x87, 0x82, 0x84, 0xC9, 0xBD, 0xBF, 0xDA, 0xCD, 0xCD, 0xD3, 0xCC, 
   0xCD, 0x53, 0x57, 0x58, 0x53, 0x5B, 0x5E, 0x50, 0x5E, 0x61, 0x58, 0x67, 0x6B, 0x46, 0x52, 0x56, 
   0x58, 0x61, 0x65, 0x61, 0x65, 0x6B, 0x66, 0x66, 0x6C, 0x5A, 0x56, 0x5C, 0x5D, 0x55, 0x5C, 0x68, 
   0x5F, 0x65, 0xD2, 0xC7, 0xC9, 0xF8, 0xEF, 0xF1, 0xBD, 0xB1, 0xB1, 0xC9, 0xBC, 0xBC, 0xF3, 0xE7, 
   0xE5, 0xF6, 0xE8, 0xE6, 0xD8, 0xC9, 0xC5, 0x83, 0x72, 0x6D, 0xB6, 0xA7, 0xA2, 0xA3, 0x95, 0x8F, 
   0x84, 0x77, 0x72, 0x9B, 0x8F, 0x8A, 0xD8, 0xCD, 0xC7, 0xFD, 0xF3, 0xF2, 0xD4, 0xC7, 0xC8, 0x9D, 
   0x8C, 0x8E, 0xB7, 0xA6, 0xA7, 0xD7, 0xC5, 0xC7, 0xE5, 0xD6, 0xD8, 0xFB, 0xEE, 0xF0, 0xEE, 0xE8, 
   0xE8, 0x93, 0x8E, 0x8F, 0x6D, 0x6E, 0x6E, 0x4C, 0x4E, 0x4E, 0x54, 0x55, 0x55, 0xA2, 0xA0, 0xA1, 
   0xA0, 0x9B, 0x9A, 0x39, 0x36, 0x35, 0x5E, 0x5C, 0x5A, 0x52, 0x4F, 0x4A, 0x3F, 0x38, 0x33, 0x44, 
   0x38, 0x32, 0x3C, 0x33, 0x2E, 0x43, 0x3F, 0x3A, 0x42, 0x3D, 0x38, 0x39, 0x35, 0x30, 0x39, 0x35, 
   0x30, 0x48, 0x42, 0x3E, 0x56, 0x4E, 0x49, 0x4A, 0x40, 0x38, 0x42, 0x38, 0x30, 0x3E, 0x34, 0x2C, 
   0x48, 0x3E, 0x39, 0x45, 0x39, 0x36, 0x4F, 0x43, 0x41, 0x73, 0x67, 0x67, 0x98, 0x8D, 0x90, 0x6B, 
   0x5E, 0x60, 0x65, 0x5A, 0x5A, 0x85, 0x79, 0x78, 0xBD, 0xB1, 0xAF, 0xE4, 0xD8, 0xD4, 0xC6, 0xB2, 
   0xAF, 0xC3, 0xAF, 0xAD, 0xC4, 0xB2, 0xAF, 0x5E, 0x50, 0x4C, 0x5B, 0x52, 0x4E, 0x5E, 0x5A, 0x55, 
   0x73, 0x6E, 0x6E, 0x59, 0x52, 0x57, 0x5D, 0x57, 0x56, 0x6E, 0x64, 0x5D, 0x85, 0x71, 0x65, 0x90, 
   0x70, 0x60, 0x87, 0x5D, 0x4B, 0x84, 0x56, 0x44, 0x85, 0x55, 0x44, 0x81, 0x51, 0x3E, 0x85, 0x55, 
   0x3F, 0x88, 0x56, 0x3F, 0x88, 0x55, 0x3B, 0x84, 0x53, 0x3A, 0x82, 0x54, 0x3C, 0x81, 0x53, 0x3B, 
   0x81, 0x53, 0x3B, 0x81, 0x53, 0x3B, 0x7F, 0x51, 0x3A, 0x7D, 0x4F, 0x37, 0x7C, 0x4E, 0x34, 0x7C, 
   0x4F, 0x34, 0x7C, 0x4F, 0x34, 0x7B, 0x4E, 0x33, 0x7A, 0x4D, 0x32, 0x7A, 0x4D, 0x32, 0x7C, 0x4D, 
   0x33, 0x7D, 0x4D, 0x33, 0x7D, 0x4D, 0x33, 0x7D, 0x4D, 0x33, 0x7D, 0x4D, 0x33, 0x7D, 0x4D, 0x33, 
   0x7D, 0x4D, 0x33, 0x7D, 0x4D, 0x33, 0x7D, 0x4D, 0x33, 0x7D, 0x4D, 0x33, 0x7D, 0x4D, 0x33, 0x7B, 
   0x4B, 0x31, 0x7B, 0x4B, 0x31, 0x7A, 0x4B, 0x30, 0x7A, 0x4B, 0x2F, 0x7A, 0x4B, 0x2F, 0x7A, 0x4B, 
   0x2F, 0x7A, 0x4B, 0x2F, 0x7A, 0x4B, 0x2F, 0x7A, 0x4B, 0x2F, 0x7A, 0x4B, 0x2F, 0x78, 0x49, 0x2D, 
   0x78, 0x49, 0x2D, 0x79, 0x4A, 0x2E, 0x79, 0x4A, 0x2E, 0x79, 0x4A, 0x2E, 0x79, 0x4A, 0x2D, 0x79, 
   0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 
   0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 
   0x79, 0x4A, 0x2B, 0x7A, 0x4B, 0x2C, 0x7A, 0x4B, 0x2C, 0x7A, 0x4B, 0x2C, 0x7A, 0x4B, 0x2C, 0x79, 
   0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 
   0x2B, 0x79, 0x4A, 0x2B, 0x78, 0x49, 0x2A, 0x78, 0x49, 0x2A, 0x78, 0x49, 0x2A, 0x78, 0x49, 0x2A, 
   0x79, 0x4A, 0x2B, 0x78, 0x49, 0x2A, 0x79, 0x4A, 0x2B, 0x7A, 0x4B, 0x2C, 0x7B, 0x4C, 0x2D, 0x7A, 
   0x4B, 0x2C, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x78, 0x49, 0x2A, 0x78, 0x49, 
   0x2A, 0x78, 0x49, 0x2A, 0x78, 0x49, 0x2A, 0x78, 0x49, 0x2A, 0x78, 0x49, 0x2A, 0x78, 0x49, 0x2A, 
   0x78, 0x49, 0x2A, 0x78, 0x49, 0x2A, 0x79, 0x49, 0x2A, 0x7A, 0x48, 0x2A, 0x7A, 0x48, 0x2A, 0x7A, 
   0x48, 0x2A, 0x7A, 0x48, 0x2A, 0x7A, 0x48, 0x2A, 0x7A, 0x48, 0x2A, 0x7A, 0x48, 0x2A, 0x7A, 0x48, 
   0x2A, 0x7A, 0x48, 0x2A, 0x7A, 0x48, 0x2A, 0x7A, 0x48, 0x2A, 0x7A, 0x48, 0x2A, 0x7A, 0x48, 0x2A, 
   0x7B, 0x49, 0x2B, 0x7A, 0x48, 0x2A, 0x79, 0x47, 0x29, 0x7A, 0x48, 0x2A, 0x7A, 0x48, 0x2A, 0x7A, 
   0x48, 0x2A, 0x79, 0x47, 0x29, 0x79, 0x47, 0x29, 0x79, 0x47, 0x29, 0x79, 0x47, 0x29, 0x79, 0x47, 
   0x29, 0x79, 0x47, 0x29, 0x79, 0x48, 0x29, 0x79, 0x48, 0x28, 0x79, 0x48, 0x28, 0x7A, 0x49, 0x29, 
   0x79, 0x48, 0x28, 0x7A, 0x49, 0x29, 0x7B, 0x49, 0x29, 0x7D, 0x48, 0x29, 0x7D, 0x4B, 0x2E, 0x78, 
   0x4C, 0x31, 0x7B, 0x58, 0x40, 0x79, 0x5A, 0x44, 0x56, 0x3C, 0x28, 0x4E, 0x35, 0x24, 0x50, 0x36, 
   0x2B, 0x54, 0x3C, 0x31, 0x57, 0x44, 0x38, 0x4A, 0x39, 0x2D, 0x42, 0x32, 0x27, 0x39, 0x2C, 0x22, 
   0x4D, 0x40, 0x37, 0x43, 0x36, 0x2D, 0x44, 0x37, 0x2E, 0x4E, 0x41, 0x38, 0x4C, 0x3F, 0x36, 0x45, 
   0x38, 0x2F, 0x4F, 0x43, 0x3A, 0x41, 0x37, 0x2D, 0x42, 0x37, 0x2D, 0x5E, 0x54, 0x4A, 0x4D, 0x42, 
   0x38, 0x40, 0x36, 0x2C, 0x35, 0x2A, 0x21, 0x3B, 0x2F, 0x26, 0x39, 0x2C, 0x23, 0x39, 0x2C, 0x23, 
   0x3C, 0x2F, 0x26, 0x47, 0x3A, 0x31, 0x36, 0x29, 0x20, 0x34, 0x27, 0x1E, 0x38, 0x2B, 0x22, 0x30, 
   0x23, 0x1B, 0x34, 0x2A, 0x22, 0x43, 0x39, 0x32, 0x3A, 0x30, 0x2B, 0x3D, 0x35, 0x31, 0x3F, 0x36, 
   0x32, 0x3F, 0x35, 0x31, 0x31, 0x26, 0x22, 0x37, 0x2C, 0x28, 0x34, 0x26, 0x22, 0x3D, 0x2E, 0x2B, 
   0x3C, 0x2F, 0x2A, 0x43, 0x37, 0x31, 0xC2, 0xAC, 0xAB, 0xFB, 0xE1, 0xE0, 0xF3, 0xDA, 0xD6, 0xCB, 
   0xBF, 0xB8, 0x91, 0x93, 0x8D, 0x94, 0x91, 0x92, 0xDF, 0xD2, 0xD6, 0xCB, 0xBC, 0xBE, 0x9B, 0x95, 
   0x96, 0x8E, 0x92, 0x93, 0x52, 0x5C, 0x5C, 0x55, 0x63, 0x64, 0x59, 0x69, 0x6B, 0x57, 0x61, 0x66, 
   0x62, 0x69, 0x6E, 0x66, 0x69, 0x6E, 0x6E, 0x6E, 0x74, 0x5E, 0x5A, 0x61, 0x71, 0x69, 0x71, 0xBC, 
   0xB2, 0xB8, 0xF8, 0xF1, 0xF3, 0x9B, 0x8F, 0x91, 0xAC, 0x9F, 0xA1, 0xF9, 0xEB, 0xEC, 0xF3, 0xE4, 
   0xE2, 0xFB, 0xEB, 0xE8, 0xB6, 0xA3, 0x9D, 0x88, 0x76, 0x6F, 0xA3, 0x91, 0x8A, 0xB8, 0xA7, 0xA0, 
   0xDA, 0xCC, 0xC5, 0xEE, 0xE2, 0xDA, 0xF4, 0xE7, 0xE0, 0xEC, 0xE0, 0xDF, 0xC4, 0xB8, 0xB8, 0xCA, 
   0xBC, 0xBD, 0xE9, 0xDA, 0xDB, 0xEB, 0xDC, 0xDD, 0xE0, 0xD0, 0xD1, 0xF2, 0xE5, 0xE6, 0xC3, 0xBE, 
   0xBE, 0x70, 0x70, 0x70, 0x52, 0x54, 0x53, 0x56, 0x57, 0x57, 0x5D, 0x5C, 0x5D, 0xC8, 0xC4, 0xC5, 
   0x77, 0x71, 0x71, 0x36, 0x32, 0x31, 0x50, 0x4E, 0x4C, 0x59, 0x56, 0x51, 0x47, 0x42, 0x3C, 0x40, 
   0x36, 0x2E, 0x42, 0x3B, 0x35, 0x40, 0x3D, 0x38, 0x3F, 0x3C, 0x37, 0x3B, 0x38, 0x33, 0x45, 0x42, 
   0x3D, 0x44, 0x41, 0x3C, 0x40, 0x3E, 0x38, 0x49, 0x3F, 0x38, 0x48, 0x3E, 0x36, 0x46, 0x3B, 0x36, 
   0x49, 0x3E, 0x3A, 0x49, 0x3D, 0x3B, 0x46, 0x39, 0x37, 0x4E, 0x43, 0x43, 0x68, 0x5C, 0x5E, 0xAD, 
   0xA0, 0xA2, 0xBA, 0xAC, 0xAD, 0xA0, 0x90, 0x8F, 0xCE, 0xC0, 0xBE, 0xE6, 0xD7, 0xD4, 0xB2, 0x9E, 
   0x9B, 0x94, 0x81, 0x7E, 0x75, 0x65, 0x62, 0x66, 0x5D, 0x58, 0x60, 0x5A, 0x55, 0x6F, 0x6C, 0x66, 
   0x71, 0x6B, 0x69, 0x59, 0x4F, 0x52, 0x81, 0x76, 0x74, 0x8C, 0x7B, 0x72, 0x98, 0x7E, 0x6D, 0x83, 
   0x5F, 0x4A, 0x89, 0x5D, 0x47, 0x8C, 0x5D, 0x49, 0x88, 0x59, 0x45, 0x84, 0x54, 0x40, 0x85, 0x53, 
   0x3E, 0x87, 0x56, 0x3F, 0x87, 0x53, 0x3C, 0x83, 0x53, 0x3B, 0x82, 0x54, 0x3C, 0x81, 0x53, 0x3B, 
   0x80, 0x52, 0x3A, 0x7F, 0x51, 0x39, 0x7E, 0x50, 0x38, 0x7D, 0x4F, 0x37, 0x7D, 0x50, 0x35, 0x7C, 
   0x4F, 0x34, 0x7B, 0x4E, 0x33, 0x7A, 0x4D, 0x32, 0x7A, 0x4D, 0x32, 0x7A, 0x4D, 0x32, 0x7C, 0x4D, 
   0x33, 0x7D, 0x4D, 0x33, 0x7D, 0x4D, 0x33, 0x7D, 0x4D, 0x33, 0x7E, 0x4E, 0x34, 0x7E, 0x4E, 0x34, 
   0x7E, 0x4E, 0x34, 0x7E, 0x4E, 0x34, 0x7C, 0x4C, 0x32, 0x7C, 0x4C, 0x32, 0x7C, 0x4C, 0x32, 0x7C, 
   0x4C, 0x32, 0x7A, 0x4A, 0x31, 0x7A, 0x4A, 0x2F, 0x7A, 0x4B, 0x2F, 0x7A, 0x4B, 0x2F, 0x7A, 0x4B, 
   0x2F, 0x79, 0x4A, 0x2E, 0x79, 0x4A, 0x2E, 0x79, 0x4A, 0x2E, 0x79, 0x4A, 0x2E, 0x79, 0x4A, 0x2E, 
   0x79, 0x4A, 0x2E, 0x79, 0x4A, 0x2E, 0x79, 0x4A, 0x2E, 0x79, 0x4A, 0x2E, 0x79, 0x4A, 0x2D, 0x79, 
   0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 
   0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 
   0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 
   0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x78, 0x49, 0x2A, 0x78, 0x49, 
   0x2A, 0x78, 0x49, 0x2A, 0x78, 0x49, 0x2A, 0x78, 0x49, 0x2A, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 
   0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 
   0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x78, 0x49, 0x2A, 0x78, 0x49, 
   0x2A, 0x78, 0x49, 0x2A, 0x78, 0x49, 0x2A, 0x78, 0x49, 0x2A, 0x78, 0x49, 0x2A, 0x77, 0x48, 0x29, 
   0x77, 0x48, 0x29, 0x77, 0x48, 0x29, 0x78, 0x48, 0x29, 0x79, 0x47, 0x29, 0x79, 0x47, 0x29, 0x79, 
   0x47, 0x29, 0x79, 0x47, 0x29, 0x79, 0x47, 0x29, 0x79, 0x47, 0x29, 0x79, 0x47, 0x29, 0x79, 0x47, 
   0x29, 0x79, 0x47, 0x29, 0x7A, 0x48, 0x2A, 0x7A, 0x48, 0x2A, 0x7A, 0x48, 0x2A, 0x7A, 0x48, 0x2A, 
   0x7A, 0x48, 0x2A, 0x7A, 0x48, 0x2A, 0x79, 0x47, 0x29, 0x78, 0x46, 0x28, 0x78, 0x46, 0x28, 0x78, 
   0x46, 0x28, 0x78, 0x46, 0x28, 0x78, 0x46, 0x28, 0x78, 0x46, 0x28, 0x78, 0x46, 0x28, 0x78, 0x46, 
   0x28, 0x78, 0x46, 0x28, 0x78, 0x47, 0x28, 0x78, 0x47, 0x27, 0x78, 0x47, 0x27, 0x78, 0x47, 0x27, 
   0x77, 0x46, 0x26, 0x78, 0x47, 0x27, 0x79, 0x47, 0x27, 0x80, 0x48, 0x28, 0x81, 0x4B, 0x2D, 0x7C, 
   0x4C, 0x2F, 0x74, 0x4B, 0x32, 0x79, 0x54, 0x3C, 0x78, 0x5A, 0x41, 0x6D, 0x4F, 0x3B, 0x52, 0x34, 
   0x26, 0x4A, 0x2F, 0x21, 0x50, 0x3A, 0x2E, 0x4E, 0x3D, 0x31, 0x3E, 0x2F, 0x24, 0x3F, 0x34, 0x28, 
   0x59, 0x4C, 0x43, 0x50, 0x43, 0x3A, 0x3E, 0x31, 0x28, 0x46, 0x39, 0x30, 0x48, 0x3B, 0x32, 0x4A, 
   0x3C, 0x33, 0x46, 0x3A, 0x32, 0x4C, 0x43, 0x3A, 0x3B, 0x31, 0x28, 0x43, 0x39, 0x31, 0x46, 0x3C, 
   0x33, 0x48, 0x3E, 0x36, 0x33, 0x28, 0x20, 0x3F, 0x33, 0x2A, 0x46, 0x39, 0x30, 0x42, 0x35, 0x2C, 
   0x3F, 0x32, 0x29, 0x44, 0x37, 0x2E, 0x38, 0x2B, 0x22, 0x2F, 0x22, 0x19, 0x36, 0x29, 0x20, 0x34, 
   0x27, 0x1F, 0x38, 0x2E, 0x26, 0x40, 0x36, 0x2F, 0x36, 0x2D, 0x27, 0x39, 0x30, 0x2C, 0x3C, 0x32, 
   0x2E, 0x3D, 0x33, 0x2F, 0x2E, 0x23, 0x1F, 0x31, 0x25, 0x21, 0x33, 0x23, 0x21, 0x36, 0x26, 0x24, 
   0x2F, 0x22, 0x1D, 0x39, 0x2E, 0x26, 0xDB, 0xC5, 0xC6, 0xF8, 0xDD, 0xDD, 0xEF, 0xDA, 0xD6, 0x9B, 
   0x95, 0x8E, 0x4A, 0x4F, 0x4A, 0xA1, 0xA0, 0xA1, 0xA8, 0x9B, 0xA0, 0x84, 0x76, 0x79, 0xC7, 0xC0, 
   0xC3, 0xB8, 0xBC, 0xBD, 0x69, 0x72, 0x72, 0x57, 0x63, 0x64, 0x46, 0x53, 0x53, 0x54, 0x5B, 0x5E, 
   0x62, 0x66, 0x69, 0x69, 0x68, 0x6C, 0x5A, 0x57, 0x5B, 0x74, 0x6E, 0x72, 0xD2, 0xCA, 0xCE, 0xFC, 
   0xF1, 0xF5, 0x73, 0x67, 0x69, 0x88, 0x7B, 0x7D, 0xF8, 0xEB, 0xED, 0xF3, 0xE5, 0xE6, 0xF9, 0xE9, 
   0xE9, 0xF7, 0xE6, 0xE3, 0xD7, 0xC4, 0xBF, 0xAE, 0x9A, 0x94, 0xA1, 0x8F, 0x89, 0xEF, 0xDE, 0xD8, 
   0xEA, 0xDB, 0xD5, 0xE9, 0xDB, 0xD3, 0xEF, 0xE1, 0xDB, 0xF3, 0xE7, 0xE7, 0xD2, 0xC6, 0xC7, 0xAD, 
   0xA1, 0xA2, 0x90, 0x84, 0x85, 0xBD, 0xB0, 0xB0, 0xAB, 0x9E, 0x9D, 0xDD, 0xD6, 0xD7, 0x82, 0x80, 
   0x81, 0x94, 0x96, 0x96, 0x7E, 0x81, 0x80, 0x6C, 0x6D, 0x6C, 0x6B, 0x69, 0x68, 0xE4, 0xDD, 0xDD, 
   0x61, 0x58, 0x58, 0x3C, 0x37, 0x36, 0x3D, 0x3B, 0x39, 0x41, 0x41, 0x3B, 0x3F, 0x3A, 0x34, 0x41, 
   0x38, 0x31, 0x41, 0x3A, 0x34, 0x47, 0x45, 0x40, 0x40, 0x3C, 0x37, 0x40, 0x3D, 0x38, 0x48, 0x46, 
   0x41, 0x5E, 0x5E, 0x58, 0x58, 0x59, 0x53, 0x45, 0x3C, 0x35, 0x49, 0x3F, 0x38, 0x48, 0x3D, 0x39, 
   0x49, 0x3D, 0x3A, 0x46, 0x3A, 0x38, 0x4B, 0x3F, 0x3E, 0x59, 0x4D, 0x4E, 0xA2, 0x95, 0x98, 0xD1, 
   0xC3, 0xC6, 0xAA, 0x9A, 0x9B, 0xB9, 0xA8, 0xA8, 0xFC, 0xEC, 0xEB, 0xBC, 0xA7, 0xA4, 0x81, 0x6E, 
   0x6B, 0x66, 0x56, 0x53, 0x61, 0x56, 0x52, 0x6C, 0x65, 0x60, 0x7E, 0x79, 0x73, 0x5D, 0x57, 0x52, 
   0x6C, 0x61, 0x5F, 0x97, 0x89, 0x86, 0xC8, 0xB7, 0xB1, 0x9C, 0x84, 0x78, 0x89, 0x6A, 0x57, 0x8B, 
   0x63, 0x4B, 0x87, 0x5B, 0x40, 0x8A, 0x5B, 0x45, 0x89, 0x5A, 0x44, 0x87, 0x57, 0x41, 0x85, 0x55, 
   0x40, 0x85, 0x55, 0x3F, 0x84, 0x53, 0x3E, 0x83, 0x54, 0x3D, 0x82, 0x54, 0x3C, 0x81, 0x53, 0x3B, 
   0x80, 0x52, 0x3A, 0x7F, 0x51, 0x39, 0x7F, 0x51, 0x39, 0x7D, 0x4F, 0x37, 0x7D, 0x50, 0x35, 0x7D, 
   0x50, 0x34, 0x7C, 0x4F, 0x34, 0x7C, 0x4F, 0x34, 0x7C, 0x4F, 0x34, 0x7C, 0x4F, 0x34, 0x7D, 0x4F, 
   0x34, 0x7D, 0x4D, 0x33, 0x7D, 0x4D, 0x33, 0x7D, 0x4D, 0x33, 0x7E, 0x4E, 0x34, 0x7E, 0x4E, 0x34, 
   0x7E, 0x4E, 0x34, 0x7E, 0x4E, 0x34, 0x7C, 0x4C, 0x32, 0x7B, 0x4B, 0x31, 0x7C, 0x4C, 0x32, 0x7C, 
   0x4C, 0x32, 0x7B, 0x4B, 0x31, 0x7A, 0x4B, 0x30, 0x7A, 0x4B, 0x2F, 0x7A, 0x4B, 0x2F, 0x7A, 0x4B, 
   0x2F, 0x79, 0x4A, 0x2E, 0x79, 0x4A, 0x2E, 0x79, 0x4A, 0x2E, 0x79, 0x4A, 0x2E, 0x79, 0x4A, 0x2E, 
   0x79, 0x4A, 0x2E, 0x79, 0x4A, 0x2E, 0x79, 0x4A, 0x2E, 0x79, 0x4A, 0x2E, 0x79, 0x4A, 0x2D, 0x79, 
   0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 
   0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 
   0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 
   0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x78, 0x49, 0x2A, 0x78, 0x49, 
   0x2A, 0x78, 0x49, 0x2A, 0x78, 0x49, 0x2A, 0x78, 0x49, 0x2A, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 
   0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 
   0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x78, 0x49, 0x2A, 0x78, 0x49, 
   0x2A, 0x78, 0x49, 0x2A, 0x78, 0x49, 0x2A, 0x78, 0x49, 0x2A, 0x78, 0x49, 0x2A, 0x77, 0x48, 0x29, 
   0x77, 0x48, 0x29, 0x77, 0x48, 0x29, 0x78, 0x48, 0x29, 0x79, 0x47, 0x29, 0x79, 0x47, 0x29, 0x79, 
   0x47, 0x29, 0x79, 0x47, 0x29, 0x79, 0x47, 0x29, 0x79, 0x47, 0x29, 0x79, 0x47, 0x29, 0x79, 0x47, 
   0x29, 0x79, 0x47, 0x29, 0x7A, 0x48, 0x2A, 0x7A, 0x48, 0x2A, 0x7A, 0x48, 0x2A, 0x7A, 0x48, 0x2A, 
   0x7A, 0x48, 0x2A, 0x7A, 0x48, 0x2A, 0x79, 0x47, 0x29, 0x78, 0x46, 0x28, 0x78, 0x46, 0x28, 0x78, 
   0x46, 0x28, 0x78, 0x46, 0x28, 0x78, 0x46, 0x28, 0x78, 0x46, 0x28, 0x78, 0x46, 0x28, 0x78, 0x46, 
   0x28, 0x78, 0x46, 0x28, 0x78, 0x47, 0x28, 0x78, 0x47, 0x27, 0x78, 0x47, 0x27, 0x78, 0x47, 0x27, 
   0x78, 0x47, 0x27, 0x78, 0x47, 0x27, 0x78, 0x47, 0x27, 0x7D, 0x46, 0x26, 0x7D, 0x47, 0x27, 0x7B, 
   0x49, 0x2A, 0x75, 0x48, 0x2B, 0x73, 0x4B, 0x2E, 0x75, 0x50, 0x34, 0x7B, 0x57, 0x3F, 0x74, 0x4F, 
   0x3C, 0x54, 0x32, 0x20, 0x50, 0x36, 0x26, 0x4B, 0x37, 0x28, 0x49, 0x39, 0x2C, 0x47, 0x3B, 0x2E, 
   0x47, 0x3A, 0x31, 0x58, 0x4B, 0x42, 0x50, 0x43, 0x3A, 0x4E, 0x41, 0x38, 0x55, 0x48, 0x3F, 0x54, 
   0x47, 0x3E, 0x4A, 0x3E, 0x36, 0x47, 0x3D, 0x35, 0x45, 0x3B, 0x33, 0x41, 0x36, 0x2E, 0x3A, 0x30, 
   0x28, 0x48, 0x3E, 0x36, 0x49, 0x3E, 0x36, 0x38, 0x2A, 0x21, 0x3D, 0x30, 0x27, 0x48, 0x3B, 0x32, 
   0x42, 0x35, 0x2C, 0x41, 0x34, 0x2B, 0x47, 0x3A, 0x31, 0x48, 0x3B, 0x32, 0x33, 0x26, 0x1D, 0x39, 
   0x2C, 0x24, 0x39, 0x2E, 0x26, 0x3F, 0x35, 0x2D, 0x3A, 0x30, 0x2B, 0x31, 0x28, 0x24, 0x3B, 0x32, 
   0x2E, 0x34, 0x2A, 0x26, 0x37, 0x2C, 0x28, 0x3D, 0x31, 0x2D, 0x2C, 0x1D, 0x1A, 0x39, 0x2A, 0x27, 
   0x34, 0x27, 0x22, 0x33, 0x2A, 0x21, 0xFB, 0xE9, 0xEA, 0xFA, 0xE3, 0xE4, 0xB1, 0xA0, 0x9C, 0x49, 
   0x47, 0x41, 0x70, 0x79, 0x75, 0x95, 0x96, 0x98, 0x86, 0x7B, 0x81, 0xEF, 0xE1, 0xE7, 0xE4, 0xDD, 
   0xE0, 0x96, 0x98, 0x99, 0x5C, 0x62, 0x63, 0x5B, 0x62, 0x62, 0x5A, 0x61, 0x61, 0x5C, 0x5E, 0x5F, 
   0x7C, 0x7B, 0x7B, 0x74, 0x71, 0x72, 0x71, 0x6C, 0x6D, 0xAC, 0xA6, 0xA7, 0xFF, 0xFD, 0xFE, 0xAF, 
   0xA5, 0xA6, 0x63, 0x55, 0x58, 0xEF, 0xE1, 0xE3, 0xF4, 0xE6, 0xE7, 0xF8, 0xE9, 0xE9, 0xF6, 0xE7, 
   0xE6, 0xDD, 0xCB, 0xC9, 0xEB, 0xD9, 0xD5, 0xE5, 0xD2, 0xCE, 0xF3, 0xE5, 0xE1, 0xF2, 0xE1, 0xDD, 
   0xE6, 0xD7, 0xD2, 0xEB, 0xDE, 0xD8, 0xF4, 0xE8, 0xE3, 0xD3, 0xCA, 0xCA, 0x72, 0x6A, 0x6A, 0x5D, 
   0x55, 0x54, 0x5B, 0x54, 0x53, 0x6E, 0x67, 0x66, 0x9F, 0x98, 0x97, 0xAE, 0xAA, 0xAB, 0xC4, 0xC5, 
   0xC8, 0x63, 0x66, 0x67, 0x89, 0x8D, 0x8D, 0xA6, 0xA8, 0xA6, 0x5B, 0x57, 0x56, 0x84, 0x7B, 0x7A, 
   0x59, 0x4F, 0x4F, 0x43, 0x3C, 0x3C, 0x35, 0x32, 0x30, 0x34, 0x35, 0x2F, 0x3B, 0x38, 0x32, 0x43, 
   0x3C, 0x35, 0x41, 0x3A, 0x34, 0x40, 0x3A, 0x36, 0x3E, 0x39, 0x34, 0x3F, 0x3B, 0x36, 0x58, 0x57, 
   0x51, 0x5B, 0x5B, 0x55, 0x48, 0x49, 0x43, 0x4A, 0x41, 0x3B, 0x45, 0x3A, 0x35, 0x48, 0x3D, 0x3A, 
   0x3F, 0x33, 0x31, 0x5C, 0x50, 0x4E, 0x93, 0x87, 0x87, 0x7E, 0x71, 0x72, 0x91, 0x84, 0x86, 0x8C, 
   0x7E, 0x7F, 0xD1, 0xBF, 0xC1, 0xF3, 0xDF, 0xDF, 0xE4, 0xCE, 0xCC, 0xA9, 0x91, 0x8F, 0x8C, 0x7B, 
   0x78, 0x60, 0x53, 0x4F, 0x58, 0x4F, 0x4B, 0x58, 0x53, 0x4D, 0x52, 0x4C, 0x47, 0x66, 0x5D, 0x58, 
   0x73, 0x64, 0x60, 0xC5, 0xB1, 0xAA, 0x99, 0x82, 0x77, 0x8F, 0x73, 0x63, 0x86, 0x64, 0x4F, 0x86, 
   0x5F, 0x45, 0x8A, 0x60, 0x43, 0x88, 0x5A, 0x43, 0x87, 0x59, 0x43, 0x86, 0x59, 0x43, 0x84, 0x56, 
   0x41, 0x82, 0x55, 0x3F, 0x81, 0x54, 0x3F, 0x82, 0x55, 0x3E, 0x83, 0x55, 0x3D, 0x81, 0x53, 0x3B, 
   0x81, 0x53, 0x3B, 0x80, 0x52, 0x3A, 0x7F, 0x51, 0x39, 0x7E, 0x50, 0x38, 0x7E, 0x51, 0x36, 0x7D, 
   0x50, 0x35, 0x7C, 0x4F, 0x34, 0x7C, 0x4F, 0x34, 0x7D, 0x50, 0x35, 0x7D, 0x50, 0x35, 0x7E, 0x4F, 
   0x35, 0x7E, 0x4E, 0x34, 0x7E, 0x4E, 0x34, 0x7E, 0x4E, 0x34, 0x7E, 0x4E, 0x34, 0x7E, 0x4E, 0x34, 
   0x7E, 0x4E, 0x34, 0x7E, 0x4E, 0x34, 0x7C, 0x4C, 0x32, 0x7C, 0x4C, 0x32, 0x7D, 0x4D, 0x33, 0x7C, 
   0x4C, 0x32, 0x7C, 0x4B, 0x32, 0x7A, 0x4B, 0x30, 0x7A, 0x4B, 0x2F, 0x7A, 0x4B, 0x2F, 0x7A, 0x4B, 
   0x2F, 0x79, 0x4A, 0x2E, 0x79, 0x4A, 0x2E, 0x79, 0x4A, 0x2E, 0x79, 0x4A, 0x2E, 0x79, 0x4A, 0x2E, 
   0x79, 0x4A, 0x2E, 0x79, 0x4A, 0x2E, 0x79, 0x4A, 0x2E, 0x79, 0x4A, 0x2E, 0x79, 0x4A, 0x2D, 0x79, 
   0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 
   0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 
   0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x78, 
   0x49, 0x2A, 0x78, 0x49, 0x2A, 0x78, 0x49, 0x2A, 0x78, 0x49, 0x2A, 0x78, 0x49, 0x2A, 0x78, 0x49, 
   0x2A, 0x78, 0x49, 0x2A, 0x78, 0x49, 0x2A, 0x78, 0x49, 0x2A, 0x78, 0x49, 0x2A, 0x78, 0x49, 0x2A, 
   0x78, 0x49, 0x2A, 0x78, 0x49, 0x2A, 0x78, 0x49, 0x2A, 0x78, 0x49, 0x2A, 0x78, 0x49, 0x2A, 0x78, 
   0x49, 0x2A, 0x78, 0x49, 0x2A, 0x78, 0x49, 0x2A, 0x78, 0x49, 0x2A, 0x78, 0x49, 0x2A, 0x78, 0x49, 
   0x2A, 0x78, 0x49, 0x2A, 0x78, 0x49, 0x2A, 0x78, 0x49, 0x2A, 0x78, 0x49, 0x2A, 0x77, 0x48, 0x29, 
   0x77, 0x48, 0x29, 0x77, 0x48, 0x29, 0x78, 0x48, 0x29, 0x79, 0x47, 0x29, 0x79, 0x47, 0x29, 0x79, 
   0x47, 0x29, 0x79, 0x47, 0x29, 0x79, 0x47, 0x29, 0x79, 0x47, 0x29, 0x79, 0x47, 0x29, 0x79, 0x47, 
   0x29, 0x79, 0x47, 0x29, 0x79, 0x47, 0x29, 0x79, 0x47, 0x29, 0x79, 0x47, 0x29, 0x79, 0x47, 0x29, 
   0x79, 0x47, 0x29, 0x79, 0x47, 0x29, 0x79, 0x47, 0x29, 0x78, 0x46, 0x28, 0x78, 0x46, 0x28, 0x78, 
   0x46, 0x28, 0x78, 0x46, 0x28, 0x78, 0x46, 0x28, 0x78, 0x46, 0x28, 0x78, 0x46, 0x28, 0x78, 0x46, 
   0x28, 0x78, 0x46, 0x28, 0x78, 0x47, 0x28, 0x78, 0x47, 0x27, 0x78, 0x47, 0x27, 0x78, 0x47, 0x27, 
   0x78, 0x47, 0x27, 0x78, 0x47, 0x27, 0x78, 0x47, 0x27, 0x7A, 0x47, 0x24, 0x7A, 0x47, 0x25, 0x79, 
   0x48, 0x27, 0x73, 0x45, 0x25, 0x73, 0x47, 0x27, 0x74, 0x4A, 0x2B, 0x75, 0x4A, 0x2E, 0x7C, 0x52, 
   0x3A, 0x7A, 0x54, 0x3E, 0x5E, 0x40, 0x2C, 0x58, 0x40, 0x2F, 0x4C, 0x3A, 0x2A, 0x45, 0x37, 0x29, 
   0x42, 0x35, 0x2C, 0x48, 0x3B, 0x32, 0x55, 0x48, 0x3F, 0x4D, 0x40, 0x37, 0x51, 0x44, 0x3B, 0x4D, 
   0x40, 0x37, 0x43, 0x37, 0x2F, 0x40, 0x37, 0x2F, 0x42, 0x39, 0x32, 0x45, 0x3C, 0x35, 0x44, 0x3B, 
   0x34, 0x45, 0x3C, 0x35, 0x5C, 0x53, 0x4B, 0x4A, 0x3D, 0x34, 0x46, 0x39, 0x30, 0x3F, 0x32, 0x29, 
   0x42, 0x35, 0x2C, 0x42, 0x35, 0x2C, 0x4B, 0x3E, 0x35, 0x50, 0x43, 0x3A, 0x3A, 0x2D, 0x24, 0x38, 
   0x2B, 0x23, 0x3B, 0x31, 0x29, 0x41, 0x37, 0x30, 0x40, 0x36, 0x31, 0x35, 0x2C, 0x28, 0x40, 0x38, 
   0x34, 0x35, 0x2B, 0x27, 0x36, 0x2B, 0x27, 0x3B, 0x2F, 0x2B, 0x2C, 0x1D, 0x1A, 0x36, 0x26, 0x24, 
   0x33, 0x26, 0x20, 0x3D, 0x34, 0x2B, 0xF7, 0xE6, 0xE7, 0xF8, 0xE2, 0xE5, 0x9F, 0x91, 0x8E, 0x59, 
   0x5B, 0x55, 0x52, 0x5E, 0x5A, 0x6D, 0x72, 0x73, 0x83, 0x79, 0x80, 0xE7, 0xDB, 0xE1, 0xA1, 0x99, 
   0x9E, 0x48, 0x47, 0x49, 0x52, 0x55, 0x56, 0x63, 0x65, 0x66, 0x5F, 0x60, 0x61, 0x85, 0x80, 0x80, 
   0xA5, 0x9D, 0x9B, 0xA7, 0xA1, 0x9F, 0xD2, 0xCD, 0xCB, 0xEE, 0xE9, 0xE7, 0xDB, 0xD6, 0xD5, 0x76, 
   0x6D, 0x6C, 0xC1, 0xB6, 0xB8, 0xF9, 0xEE, 0xF0, 0xA7, 0x97, 0x99, 0xAE, 0x9D, 0x9E, 0xA7, 0x96, 
   0x95, 0xDD, 0xCB, 0xC9, 0xF6, 0xE4, 0xE1, 0xF9, 0xE8, 0xE5, 0xF4, 0xE6, 0xE3, 0xEE, 0xDE, 0xDB, 
   0xF1, 0xE2, 0xE0, 0xFB, 0xEF, 0xEB, 0xD8, 0xCC, 0xC8, 0x59, 0x55, 0x54, 0x3C, 0x39, 0x38, 0x60, 
   0x5D, 0x5C, 0x55, 0x52, 0x51, 0x76, 0x73, 0x72, 0x86, 0x84, 0x81, 0x7E, 0x7E, 0x7F, 0x8D, 0x91, 
   0x95, 0x58, 0x5D, 0x5E, 0xB8, 0xBE, 0xBD, 0xD8, 0xD9, 0xD8, 0x61, 0x5C, 0x5A, 0x58, 0x4F, 0x4B, 
   0x54, 0x49, 0x49, 0x45, 0x3E, 0x3E, 0x40, 0x3D, 0x3A, 0x32, 0x32, 0x2C, 0x3A, 0x37, 0x31, 0x3B, 
   0x34, 0x2D, 0x49, 0x40, 0x3B, 0x48, 0x3E, 0x3A, 0x40, 0x39, 0x34, 0x5C, 0x58, 0x53, 0x8E, 0x8D, 
   0x87, 0x59, 0x59, 0x53, 0x53, 0x54, 0x4E, 0x52, 0x48, 0x42, 0x43, 0x38, 0x34, 0x45, 0x39, 0x36, 
   0x42, 0x36, 0x34, 0x93, 0x87, 0x88, 0xA2, 0x96, 0x96, 0xCA, 0xBE, 0xBF, 0x60, 0x53, 0x55, 0xB2, 
   0xA4, 0xA6, 0xF3, 0xE0, 0xE2, 0xD8, 0xC1, 0xC2, 0xBE, 0xA4, 0xA4, 0xA5, 0x8C, 0x8A, 0x8F, 0x81, 
   0x7E, 0x76, 0x6D, 0x69, 0x8F, 0x89, 0x85, 0x7E, 0x7A, 0x75, 0x5E, 0x57, 0x52, 0x69, 0x5C, 0x59, 
   0xA9, 0x96, 0x90, 0xB0, 0x99, 0x8D, 0x91, 0x75, 0x67, 0x8E, 0x6E, 0x5B, 0x85, 0x60, 0x4A, 0x88, 
   0x61, 0x46, 0x85, 0x5D, 0x41, 0x85, 0x5A, 0x42, 0x85, 0x5A, 0x43, 0x83, 0x5A, 0x43, 0x82, 0x57, 
   0x42, 0x80, 0x56, 0x41, 0x7E, 0x56, 0x40, 0x81, 0x56, 0x3F, 0x83, 0x55, 0x3D, 0x82, 0x54, 0x3C, 
   0x82, 0x54, 0x3C, 0x80, 0x52, 0x3A, 0x7F, 0x51, 0x3A, 0x7F, 0x51, 0x39, 0x7F, 0x52, 0x37, 0x7D, 
   0x50, 0x35, 0x7D, 0x50, 0x35, 0x7D, 0x50, 0x35, 0x7D, 0x50, 0x35, 0x7D, 0x50, 0x35, 0x7E, 0x50, 
   0x35, 0x7F, 0x4F, 0x35, 0x7F, 0x4F, 0x35, 0x7F, 0x4F, 0x35, 0x7E, 0x4E, 0x34, 0x7E, 0x4E, 0x34, 
   0x7E, 0x4E, 0x34, 0x7F, 0x4F, 0x35, 0x7E, 0x4E, 0x34, 0x7D, 0x4D, 0x33, 0x7D, 0x4D, 0x33, 0x7D, 
   0x4D, 0x33, 0x7C, 0x4C, 0x32, 0x7B, 0x4B, 0x30, 0x7A, 0x4B, 0x2F, 0x7A, 0x4B, 0x2F, 0x7A, 0x4B, 
   0x2F, 0x79, 0x4A, 0x2E, 0x79, 0x4A, 0x2E, 0x79, 0x4A, 0x2E, 0x79, 0x4A, 0x2E, 0x79, 0x4A, 0x2E, 
   0x79, 0x4A, 0x2E, 0x79, 0x4A, 0x2E, 0x79, 0x4A, 0x2E, 0x79, 0x4A, 0x2E, 0x79, 0x4A, 0x2D, 0x79, 
   0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 
   0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 
   0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x77, 
   0x48, 0x29, 0x77, 0x48, 0x29, 0x77, 0x48, 0x29, 0x78, 0x49, 0x2A, 0x78, 0x49, 0x2A, 0x78, 0x49, 
   0x2A, 0x78, 0x49, 0x2A, 0x78, 0x49, 0x2A, 0x78, 0x49, 0x2A, 0x78, 0x49, 0x2A, 0x77, 0x48, 0x29, 
   0x77, 0x48, 0x29, 0x77, 0x48, 0x29, 0x77, 0x48, 0x29, 0x77, 0x48, 0x29, 0x77, 0x48, 0x29, 0x77, 
   0x48, 0x29, 0x77, 0x48, 0x29, 0x77, 0x48, 0x29, 0x78, 0x49, 0x2A, 0x78, 0x49, 0x2A, 0x78, 0x49, 
   0x2A, 0x78, 0x49, 0x2A, 0x78, 0x49, 0x2A, 0x78, 0x49, 0x2A, 0x78, 0x49, 0x2A, 0x77, 0x48, 0x29, 
   0x77, 0x48, 0x29, 0x77, 0x48, 0x29, 0x78, 0x48, 0x29, 0x79, 0x47, 0x29, 0x79, 0x47, 0x29, 0x79, 
   0x47, 0x29, 0x79, 0x47, 0x29, 0x79, 0x47, 0x29, 0x79, 0x47, 0x29, 0x79, 0x47, 0x29, 0x79, 0x47, 
   0x29, 0x79, 0x47, 0x29, 0x78, 0x46, 0x28, 0x78, 0x46, 0x28, 0x78, 0x46, 0x28, 0x78, 0x46, 0x28, 
   0x78, 0x46, 0x28, 0x78, 0x46, 0x28, 0x78, 0x46, 0x28, 0x78, 0x46, 0x28, 0x78, 0x46, 0x28, 0x78, 
   0x46, 0x28, 0x78, 0x46, 0x28, 0x78, 0x46, 0x28, 0x78, 0x46, 0x28, 0x78, 0x46, 0x28, 0x78, 0x46, 
   0x28, 0x78, 0x46, 0x28, 0x78, 0x47, 0x28, 0x78, 0x47, 0x27, 0x78, 0x47, 0x27, 0x78, 0x47, 0x27, 
   0x78, 0x47, 0x27, 0x78, 0x47, 0x27, 0x78, 0x47, 0x27, 0x79, 0x49, 0x25, 0x78, 0x49, 0x26, 0x79, 
   0x49, 0x27, 0x76, 0x47, 0x25, 0x77, 0x48, 0x27, 0x78, 0x4A, 0x29, 0x79, 0x49, 0x2A, 0x79, 0x4B, 
   0x2F, 0x7D, 0x53, 0x39, 0x75, 0x54, 0x3D, 0x62, 0x48, 0x34, 0x57, 0x43, 0x30, 0x40, 0x33, 0x21, 
   0x42, 0x35, 0x2C, 0x44, 0x37, 0x2E, 0x4F, 0x42, 0x39, 0x48, 0x3B, 0x32, 0x51, 0x43, 0x3A, 0x58, 
   0x4B, 0x42, 0x42, 0x38, 0x30, 0x3E, 0x36, 0x2F, 0x44, 0x3C, 0x35, 0x43, 0x3B, 0x34, 0x3D, 0x35, 
   0x2E, 0x40, 0x39, 0x32, 0x49, 0x41, 0x3A, 0x58, 0x4B, 0x42, 0x56, 0x49, 0x40, 0x51, 0x44, 0x3B, 
   0x42, 0x35, 0x2C, 0x46, 0x39, 0x30, 0x4A, 0x3D, 0x34, 0x45, 0x38, 0x2F, 0x3F, 0x32, 0x29, 0x31, 
   0x24, 0x1C, 0x3C, 0x31, 0x29, 0x46, 0x3D, 0x35, 0x41, 0x37, 0x32, 0x39, 0x30, 0x2D, 0x35, 0x2B, 
   0x28, 0x33, 0x29, 0x25, 0x35, 0x2A, 0x26, 0x34, 0x28, 0x24, 0x31, 0x22, 0x20, 0x2F, 0x1F, 0x1D, 
   0x34, 0x28, 0x22, 0x31, 0x2A, 0x1F, 0xED, 0xDD, 0xDF, 0xF0, 0xDD, 0xDD, 0x9A, 0x8D, 0x8A, 0x61, 
   0x64, 0x5E, 0x55, 0x62, 0x5E, 0x5A, 0x60, 0x60, 0x6B, 0x63, 0x68, 0x67, 0x5B, 0x61, 0x5F, 0x58, 
   0x5D, 0x60, 0x5E, 0x60, 0x51, 0x50, 0x52, 0x6B, 0x69, 0x6A, 0xB6, 0xB2, 0xB2, 0x88, 0x7D, 0x7B, 
   0xA7, 0x9A, 0x97, 0xD1, 0xC7, 0xC4, 0xED, 0xE4, 0xE1, 0xEF, 0xE7, 0xE3, 0xB5, 0xAF, 0xAC, 0xB4, 
   0xAD, 0xAC, 0xFF, 0xF2, 0xF4, 0xC7, 0xB9, 0xBA, 0x80, 0x6F, 0x71, 0x9B, 0x89, 0x8A, 0xC9, 0xB6, 
   0xB5, 0xF6, 0xE5, 0xE4, 0xF3, 0xE2, 0xE0, 0xE5, 0xD5, 0xD4, 0xDB, 0xCB, 0xCB, 0xF9, 0xEB, 0xEA, 
   0xDE, 0xD0, 0xCE, 0x8F, 0x83, 0x82, 0x50, 0x45, 0x43, 0x3E, 0x3A, 0x3A, 0x54, 0x53, 0x52, 0x57, 
   0x56, 0x56, 0x53, 0x54, 0x53, 0x77, 0x79, 0x77, 0x80, 0x81, 0x7F, 0x59, 0x5B, 0x5D, 0x59, 0x5D, 
   0x61, 0x87, 0x8B, 0x8E, 0x81, 0x86, 0x86, 0x64, 0x65, 0x64, 0xB2, 0xAC, 0xAA, 0x76, 0x6D, 0x69, 
   0x41, 0x36, 0x36, 0x4C, 0x45, 0x44, 0x3B, 0x38, 0x35, 0x32, 0x32, 0x2C, 0x59, 0x57, 0x51, 0x4A, 
   0x44, 0x3D, 0x57, 0x4E, 0x49, 0x5F, 0x53, 0x50, 0x47, 0x3D, 0x39, 0x54, 0x4E, 0x49, 0x79, 0x73, 
   0x6F, 0x86, 0x84, 0x7E, 0x62, 0x61, 0x5B, 0x63, 0x59, 0x54, 0x43, 0x38, 0x34, 0x44, 0x39, 0x35, 
   0x75, 0x69, 0x67, 0xA7, 0x9C, 0x9C, 0xD4, 0xC8, 0xC9, 0xBF, 0xB3, 0xB4, 0x71, 0x64, 0x66, 0xD3, 
   0xC5, 0xC7, 0xD6, 0xC3, 0xC4, 0xA4, 0x8D, 0x8E, 0x83, 0x6A, 0x69, 0x76, 0x5C, 0x5B, 0x68, 0x5C, 
   0x58, 0x6D, 0x66, 0x62, 0x85, 0x81, 0x7D, 0x73, 0x6E, 0x6A, 0x69, 0x5F, 0x5B, 0x9B, 0x8A, 0x88, 
   0xC8, 0xB1, 0xA7, 0xA3, 0x87, 0x78, 0x92, 0x73, 0x62, 0x8D, 0x6B, 0x57, 0x88, 0x63, 0x4D, 0x8A, 
   0x63, 0x4A, 0x87, 0x60, 0x45, 0x85, 0x5C, 0x43, 0x84, 0x5B, 0x43, 0x81, 0x58, 0x42, 0x81, 0x58, 
   0x42, 0x7F, 0x58, 0x42, 0x7D, 0x56, 0x41, 0x81, 0x56, 0x3F, 0x85, 0x56, 0x3E, 0x83, 0x55, 0x3D, 
   0x82, 0x54, 0x3C, 0x81, 0x53, 0x3B, 0x80, 0x52, 0x3A, 0x7F, 0x51, 0x39, 0x7F, 0x52, 0x37, 0x7E, 
   0x51, 0x36, 0x7D, 0x50, 0x35, 0x7E, 0x51, 0x36, 0x80, 0x53, 0x38, 0x80, 0x53, 0x38, 0x7F, 0x51, 
   0x36, 0x7F, 0x4F, 0x35, 0x7F, 0x4F, 0x35, 0x7F, 0x4F, 0x35, 0x7E, 0x4E, 0x34, 0x7E, 0x4E, 0x34, 
   0x7E, 0x4E, 0x34, 0x7F, 0x4F, 0x35, 0x7E, 0x4E, 0x34, 0x7D, 0x4D, 0x33, 0x7E, 0x4E, 0x34, 0x7D, 
   0x4E, 0x34, 0x7D, 0x4D, 0x33, 0x7B, 0x4B, 0x30, 0x7A, 0x4B, 0x2F, 0x7A, 0x4B, 0x2F, 0x7A, 0x4B, 
   0x2F, 0x79, 0x4A, 0x2E, 0x79, 0x4A, 0x2E, 0x79, 0x4A, 0x2E, 0x79, 0x4A, 0x2E, 0x79, 0x4A, 0x2E, 
   0x79, 0x4A, 0x2E, 0x79, 0x4A, 0x2E, 0x79, 0x4A, 0x2E, 0x79, 0x4A, 0x2E, 0x79, 0x4A, 0x2D, 0x79, 
   0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 
   0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 
   0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x79, 0x4A, 0x2B, 0x77, 
   0x48, 0x29, 0x77, 0x48, 0x29, 0x77, 0x48, 0x29, 0x78, 0x49, 0x2A, 0x78, 0x49, 0x2A, 0x78, 0x49, 
   0x2A, 0x78, 0x49, 0x2A, 0x78, 0x49, 0x2A, 0x78, 0x49, 0x2A, 0x78, 0x49, 0x2A, 0x77, 0x48, 0x29, 
   0x77, 0x48, 0x29, 0x77, 0x48, 0x29, 0x77, 0x48, 0x29, 0x77, 0x48, 0x29, 0x77, 0x48, 0x29, 0x77, 
   0x48, 0x29, 0x77, 0x48, 0x29, 0x77, 0x48, 0x29, 0x78, 0x49, 0x2A, 0x78, 0x49, 0x2A, 0x78, 0x49, 
   0x2A, 0x78, 0x49, 0x2A, 0x78, 0x49, 0x2A, 0x78, 0x49, 0x2A, 0x78, 0x49, 0x2A, 0x77, 0x48, 0x29, 
   0x77, 0x48, 0x29, 0x77, 0x48, 0x29, 0x78, 0x48, 0x29, 0x79, 0x47, 0x29, 0x79, 0x47, 0x29, 0x79, 
   0x47, 0x29, 0x79, 0x47, 0x29, 0x79, 0x47, 0x29, 0x79, 0x47, 0x29, 0x79, 0x47, 0x29, 0x79, 0x47, 
   0x29, 0x79, 0x47, 0x29, 0x78, 0x46, 0x28, 0x78, 0x46, 0x28, 0x78, 0x46, 0x28, 0x78, 0x46, 0x28, 
   0x78, 0x46, 0x28, 0x78, 0x46, 0x28, 0x78, 0x46, 0x28, 0x78, 0x46, 0x28, 0x78, 0x46, 0x28, 0x78, 
   0x46, 0x28, 0x78, 0x46, 0x28, 0x78, 0x46, 0x28, 0x78, 0x46, 0x28, 0x78, 0x46, 0x28, 0x78, 0x46, 
   0x28, 0x78, 0x46, 0x28, 0x78, 0x47, 0x28, 0x78, 0x47, 0x27, 0x78, 0x47, 0x27, 0x78, 0x47, 0x27, 
   0x78, 0x47, 0x27, 0x78, 0x47, 0x27, 0x78, 0x47, 0x27, 0x76, 0x49, 0x25, 0x76, 0x49, 0x25, 0x76, 
   0x49, 0x24, 0x79, 0x49, 0x27, 0x79, 0x49, 0x27, 0x7A, 0x49, 0x27, 0x7A, 0x48, 0x27, 0x7A, 0x47, 
   0x29, 0x78, 0x4A, 0x2E, 0x7D, 0x59, 0x41, 0x81, 0x64, 0x4E, 0x66, 0x51, 0x3A, 0x3F, 0x30, 0x1D, 
   0x3A, 0x2C, 0x22, 0x43, 0x35, 0x2D, 0x5A, 0x4D, 0x44, 0x47, 0x3A, 0x32, 0x3E, 0x31, 0x29, 0x49, 
   0x3C, 0x33, 0x4D, 0x43, 0x3B, 0x44, 0x3D, 0x36, 0x45, 0x3E, 0x37, 0x41, 0x3A, 0x33, 0x40, 0x39, 
   0x32, 0x3C, 0x34, 0x2D, 0x3E, 0x36, 0x2F, 0x51, 0x44, 0x3C, 0x54, 0x47, 0x3E, 0x5C, 0x50, 0x47, 
   0x44, 0x37, 0x2E, 0x42, 0x35, 0x2C, 0x48, 0x3A, 0x31, 0x45, 0x38, 0x2F, 0x41, 0x34, 0x2B, 0x39, 
   0x2C, 0x24, 0x36, 0x2B, 0x23, 0x3B, 0x31, 0x2A, 0x40, 0x37, 0x31, 0x42, 0x38, 0x34, 0x36, 0x2E, 
   0x29, 0x35, 0x2B, 0x27, 0x40, 0x35, 0x30, 0x3D, 0x31, 0x2C, 0x2E, 0x20, 0x1C, 0x33, 0x24, 0x21, 
   0x42, 0x36, 0x2F, 0x46, 0x3D, 0x33, 0xFF, 0xED, 0xE9, 0xF4, 0xDD, 0xD8, 0xB0, 0x9F, 0x9A, 0x94, 
   0x8A, 0x84, 0x7C, 0x7A, 0x72, 0x56, 0x5B, 0x52, 0x5F, 0x66, 0x5F, 0x5C, 0x5E, 0x5E, 0x5F, 0x5F, 
   0x60, 0x5D, 0x58, 0x59, 0x59, 0x52, 0x53, 0x94, 0x88, 0x8A, 0xB2, 0xA6, 0xA7, 0xAC, 0x9A, 0x97, 
   0xDB, 0xC8, 0xC3, 0xEE, 0xDB, 0xD6, 0xF4, 0xE1, 0xDC, 0xF0, 0xDF, 0xD7, 0xEC, 0xDE, 0xD6, 0xF2, 
   0xE5, 0xE1, 0xE0, 0xD1, 0xD4, 0xBB, 0xAD, 0xAD, 0xC3, 0xB4, 0xB1, 0xF5, 0xE6, 0xE3, 0xF2, 0xE3, 
   0xE3, 0xEC, 0xDD, 0xE1, 0xF0, 0xDD, 0xDF, 0xC3, 0xB2, 0xB3, 0xCC, 0xC4, 0xC4, 0xBB, 0xBA, 0xB8, 
   0x52, 0x52, 0x51, 0x45, 0x3F, 0x40, 0x4B, 0x45, 0x46, 0x52, 0x51, 0x57, 0x4B, 0x4C, 0x51, 0x5D, 
   0x5D, 0x63, 0x5A, 0x5A, 0x60, 0x67, 0x67, 0x6D, 0x87, 0x86, 0x8D, 0x5E, 0x60, 0x64, 0x63, 0x65, 
   0x68, 0x9C, 0x9C, 0xA2, 0x51, 0x4F, 0x53, 0x4C, 0x4A, 0x4A, 0xCC, 0xC9, 0xC5, 0x85, 0x83, 0x79, 
   0x66, 0x63, 0x58, 0x3F, 0x3D, 0x33, 0x3C, 0x3B, 0x32, 0x47, 0x43, 0x3E, 0x54, 0x49, 0x47, 0x84, 
   0x70, 0x73, 0x97, 0x88, 0x85, 0x78, 0x6D, 0x66, 0x67, 0x55, 0x51, 0x62, 0x4E, 0x49, 0x6B, 0x58, 
   0x54, 0x8C, 0x7F, 0x79, 0x96, 0x8F, 0x88, 0x76, 0x73, 0x6B, 0x30, 0x27, 0x22, 0x6B, 0x5F, 0x5C, 
   0x9C, 0x90, 0x90, 0xAD, 0xA3, 0xA4, 0xD3, 0xCE, 0xD0, 0x54, 0x50, 0x4F, 0x77, 0x6D, 0x6A, 0xE9, 
   0xDA, 0xD8, 0xCB, 0xB6, 0xB5, 0x9A, 0x84, 0x84, 0x7D, 0x6C, 0x6A, 0x61, 0x54, 0x52, 0x5F, 0x51, 
   0x52, 0x5C, 0x50, 0x51, 0x57, 0x4D, 0x4F, 0x71, 0x64, 0x65, 0x7C, 0x6B, 0x68, 0xAC, 0x97, 0x8D, 
   0xA3, 0x83, 0x75, 0x9E, 0x75, 0x66, 0x94, 0x6B, 0x5C, 0x92, 0x69, 0x5A, 0x8E, 0x65, 0x55, 0x8B, 
   0x62, 0x52, 0x88, 0x5F, 0x4F, 0x87, 0x5C, 0x4C, 0x84, 0x59, 0x48, 0x83, 0x58, 0x47, 0x84, 0x59, 
   0x48, 0x83, 0x58, 0x47, 0x80, 0x55, 0x45, 0x82, 0x55, 0x43, 0x85, 0x55, 0x43, 0x84, 0x54, 0x42, 
   0x82, 0x52, 0x40, 0x82, 0x52, 0x40, 0x82, 0x52, 0x40, 0x80, 0x50, 0x3E, 0x7E, 0x53, 0x38, 0x7F, 
   0x54, 0x39, 0x7D, 0x52, 0x37, 0x7D, 0x52, 0x37, 0x7E, 0x53, 0x38, 0x7D, 0x52, 0x37, 0x7C, 0x50, 
   0x36, 0x7B, 0x50, 0x35, 0x7B, 0x50, 0x35, 0x7B, 0x50, 0x35, 0x7A, 0x4F, 0x34, 0x7A, 0x4F, 0x34, 
   0x7A, 0x4F, 0x34, 0x7A, 0x4F, 0x34, 0x79, 0x4E, 0x33, 0x78, 0x4D, 0x32, 0x78, 0x4D, 0x32, 0x79, 
   0x4E, 0x33, 0x79, 0x4E, 0x33, 0x79, 0x4D, 0x32, 0x79, 0x4C, 0x31, 0x78, 0x4B, 0x30, 0x77, 0x4A, 
   0x2F, 0x78, 0x4B, 0x30, 0x78, 0x4B, 0x30, 0x77, 0x4A, 0x2F, 0x78, 0x49, 0x2D, 0x78, 0x49, 0x2D, 
   0x78, 0x49, 0x2D, 0x79, 0x4A, 0x2E, 0x79, 0x4A, 0x2E, 0x79, 0x4A, 0x2E, 0x79, 0x4A, 0x2E, 0x78, 
   0x49, 0x2D, 0x78, 0x49, 0x2D, 0x78, 0x49, 0x2D, 0x79, 0x4A, 0x2E, 0x79, 0x4A, 0x2E, 0x79, 0x4A, 
   0x2E, 0x79, 0x49, 0x2D, 0x79, 0x49, 0x2D, 0x77, 0x47, 0x2B, 0x77, 0x47, 0x2B, 0x77, 0x47, 0x2B, 
   0x77, 0x47, 0x2B, 0x78, 0x48, 0x2B, 0x78, 0x49, 0x2A, 0x78, 0x49, 0x2A, 0x78, 0x49, 0x2A, 0x76, 
   0x47, 0x28, 0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x76, 0x47, 
   0x28, 0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 
   0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x77, 0x48, 0x29, 0x77, 0x48, 0x29, 0x77, 0x48, 0x29, 0x77, 
   0x48, 0x29, 0x77, 0x48, 0x29, 0x77, 0x48, 0x29, 0x77, 0x48, 0x29, 0x76, 0x47, 0x28, 0x76, 0x47, 
   0x28, 0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x77, 0x48, 0x29, 
   0x77, 0x48, 0x29, 0x77, 0x48, 0x29, 0x77, 0x48, 0x29, 0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x76, 
   0x47, 0x28, 0x76, 0x47, 0x28, 0x75, 0x46, 0x27, 0x74, 0x45, 0x26, 0x76, 0x47, 0x28, 0x76, 0x47, 
   0x28, 0x76, 0x47, 0x28, 0x75, 0x46, 0x27, 0x75, 0x46, 0x27, 0x75, 0x46, 0x27, 0x76, 0x47, 0x28, 
   0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x76, 
   0x47, 0x28, 0x79, 0x48, 0x28, 0x79, 0x48, 0x28, 0x79, 0x48, 0x28, 0x78, 0x47, 0x27, 0x78, 0x47, 
   0x27, 0x78, 0x47, 0x27, 0x78, 0x47, 0x27, 0x78, 0x47, 0x27, 0x78, 0x47, 0x27, 0x78, 0x47, 0x27, 
   0x77, 0x46, 0x26, 0x77, 0x46, 0x26, 0x77, 0x46, 0x26, 0x78, 0x47, 0x27, 0x78, 0x47, 0x27, 0x78, 
   0x47, 0x27, 0x79, 0x48, 0x28, 0x79, 0x48, 0x28, 0x79, 0x48, 0x28, 0x7A, 0x47, 0x25, 0x7C, 0x46, 
   0x25, 0x7B, 0x4A, 0x2A, 0x79, 0x50, 0x33, 0x7C, 0x57, 0x3D, 0x85, 0x63, 0x4C, 0x6B, 0x4D, 0x39, 
   0x4D, 0x31, 0x28, 0x44, 0x2E, 0x2A, 0x53, 0x44, 0x42, 0x45, 0x39, 0x37, 0x42, 0x36, 0x30, 0x49, 
   0x3C, 0x2D, 0x4A, 0x42, 0x37, 0x3D, 0x3B, 0x36, 0x3A, 0x3A, 0x34, 0x39, 0x3A, 0x33, 0x3F, 0x3A, 
   0x35, 0x3E, 0x35, 0x31, 0x56, 0x47, 0x44, 0x52, 0x45, 0x40, 0x4F, 0x43, 0x3C, 0x3D, 0x31, 0x29, 
   0x48, 0x39, 0x31, 0x4F, 0x40, 0x37, 0x4B, 0x39, 0x2F, 0x4D, 0x3E, 0x34, 0x47, 0x3A, 0x32, 0x3E, 
   0x31, 0x28, 0x43, 0x36, 0x2D, 0x47, 0x3A, 0x31, 0x49, 0x3C, 0x33, 0x45, 0x38, 0x30, 0x48, 0x40, 
   0x33, 0x41, 0x39, 0x2C, 0x40, 0x38, 0x2C, 0x43, 0x3B, 0x2F, 0x2E, 0x26, 0x19, 0x31, 0x29, 0x1C, 
   0x4F, 0x42, 0x36, 0x5B, 0x48, 0x3E, 0xCA, 0xAC, 0xAA, 0xED, 0xD0, 0xCE, 0xE6, 0xCF, 0xCC, 0xC6, 
   0xB4, 0xB1, 0xDB, 0xD1, 0xCB, 0xAC, 0xA7, 0xA2, 0x70, 0x6E, 0x69, 0x41, 0x40, 0x3F, 0x70, 0x6E, 
   0x6D, 0x84, 0x7D, 0x7D, 0xA6, 0x9D, 0x9D, 0xAF, 0xA1, 0xA2, 0xDC, 0xCC, 0xCD, 0xDC, 0xCB, 0xC9, 
   0xF0, 0xDE, 0xDB, 0xF2, 0xE1, 0xDD, 0xEE, 0xDE, 0xD7, 0xE5, 0xD3, 0xCD, 0xF3, 0xE3, 0xDC, 0xC8, 
   0xB8, 0xB4, 0xBD, 0xB0, 0xB1, 0xE5, 0xD5, 0xD3, 0xF1, 0xDE, 0xDB, 0xE8, 0xD4, 0xD0, 0xEA, 0xDA, 
   0xD8, 0xE6, 0xD9, 0xDA, 0xDF, 0xCF, 0xD2, 0xDA, 0xCC, 0xCC, 0xA0, 0x9C, 0x9B, 0x3C, 0x3E, 0x3D, 
   0x49, 0x4D, 0x4C, 0x52, 0x52, 0x53, 0x4A, 0x48, 0x4A, 0x4E, 0x4F, 0x53, 0x4E, 0x4F, 0x54, 0x5A, 
   0x5B, 0x60, 0x5D, 0x5E, 0x63, 0x6E, 0x6E, 0x73, 0x76, 0x77, 0x7C, 0x4C, 0x4E, 0x51, 0x6D, 0x6F, 
   0x72, 0xB9, 0xB8, 0xBE, 0xA2, 0x9D, 0xA2, 0x70, 0x6C, 0x6B, 0xBB, 0xB7, 0xB3, 0x6E, 0x6A, 0x61, 
   0x78, 0x70, 0x66, 0x5A, 0x54, 0x4B, 0x49, 0x46, 0x3D, 0x94, 0x8E, 0x89, 0x9A, 0x8D, 0x8C, 0xD4, 
   0xC2, 0xC3, 0xB5, 0xA7, 0xA4, 0xB3, 0xA7, 0xA1, 0xA7, 0x97, 0x91, 0x9C, 0x87, 0x82, 0x67, 0x54, 
   0x4F, 0x76, 0x69, 0x63, 0x80, 0x77, 0x70, 0x3F, 0x3A, 0x33, 0x50, 0x48, 0x42, 0x81, 0x75, 0x72, 
   0x6B, 0x5E, 0x5C, 0x97, 0x8E, 0x8E, 0x9A, 0x95, 0x97, 0x5C, 0x55, 0x54, 0xA2, 0x97, 0x94, 0xD5, 
   0xC4, 0xC3, 0x8F, 0x7A, 0x79, 0x90, 0x7C, 0x7B, 0x8C, 0x7C, 0x7B, 0x6D, 0x61, 0x60, 0x62, 0x56, 
   0x54, 0x5E, 0x51, 0x52, 0x61, 0x54, 0x56, 0x6D, 0x5F, 0x5F, 0xA8, 0x96, 0x91, 0x9E, 0x87, 0x7E, 
   0x9E, 0x7B, 0x6E, 0x9E, 0x73, 0x64, 0x9C, 0x73, 0x64, 0x94, 0x6A, 0x5C, 0x8D, 0x64, 0x55, 0x8B, 
   0x62, 0x54, 0x89, 0x60, 0x51, 0x8A, 0x5F, 0x4F, 0x87, 0x5C, 0x4B, 0x86, 0x5B, 0x4A, 0x85, 0x5A, 
   0x4A, 0x84, 0x59, 0x48, 0x82, 0x57, 0x46, 0x83, 0x56, 0x44, 0x86, 0x56, 0x44, 0x84, 0x54, 0x42, 
   0x84, 0x54, 0x42, 0x84, 0x54, 0x42, 0x84, 0x54, 0x42, 0x82, 0x52, 0x40, 0x7F, 0x54, 0x39, 0x7F, 
   0x55, 0x39, 0x7E, 0x53, 0x38, 0x7E, 0x53, 0x38, 0x7E, 0x53, 0x38, 0x7D, 0x52, 0x37, 0x7C, 0x51, 
   0x36, 0x7B, 0x50, 0x35, 0x7B, 0x50, 0x35, 0x7B, 0x50, 0x35, 0x7A, 0x4F, 0x34, 0x7A, 0x4F, 0x34, 
   0x7A, 0x4F, 0x34, 0x7A, 0x4F, 0x34, 0x79, 0x4E, 0x33, 0x78, 0x4D, 0x32, 0x78, 0x4D, 0x32, 0x79, 
   0x4E, 0x33, 0x79, 0x4E, 0x33, 0x79, 0x4D, 0x32, 0x79, 0x4C, 0x31, 0x78, 0x4B, 0x31, 0x77, 0x4A, 
   0x2F, 0x78, 0x4B, 0x30, 0x78, 0x4B, 0x30, 0x77, 0x4A, 0x2F, 0x78, 0x49, 0x2D, 0x78, 0x49, 0x2D, 
   0x78, 0x49, 0x2D, 0x79, 0x4A, 0x2E, 0x79, 0x4A, 0x2E, 0x79, 0x4A, 0x2E, 0x79, 0x4A, 0x2E, 0x78, 
   0x49, 0x2D, 0x78, 0x49, 0x2D, 0x78, 0x49, 0x2D, 0x79, 0x4A, 0x2E, 0x79, 0x4A, 0x2E, 0x79, 0x4A, 
   0x2E, 0x79, 0x49, 0x2D, 0x78, 0x48, 0x2C, 0x77, 0x47, 0x2B, 0x77, 0x47, 0x2B, 0x77, 0x47, 0x2B, 
   0x77, 0x47, 0x2B, 0x78, 0x48, 0x2B, 0x78, 0x49, 0x2A, 0x78, 0x49, 0x2A, 0x78, 0x49, 0x2A, 0x76, 
   0x47, 0x28, 0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x76, 0x47, 
   0x28, 0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 
   0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x77, 0x48, 0x29, 0x77, 0x48, 0x29, 0x77, 0x48, 0x29, 0x77, 
   0x48, 0x29, 0x77, 0x48, 0x29, 0x77, 0x48, 0x29, 0x77, 0x48, 0x29, 0x76, 0x47, 0x28, 0x76, 0x47, 
   0x28, 0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x77, 0x48, 0x29, 
   0x77, 0x48, 0x29, 0x77, 0x48, 0x29, 0x77, 0x48, 0x29, 0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x76, 
   0x47, 0x28, 0x76, 0x47, 0x28, 0x75, 0x46, 0x27, 0x74, 0x45, 0x26, 0x76, 0x47, 0x28, 0x76, 0x47, 
   0x28, 0x76, 0x47, 0x28, 0x75, 0x46, 0x27, 0x75, 0x46, 0x27, 0x75, 0x46, 0x27, 0x76, 0x47, 0x28, 
   0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x76, 
   0x47, 0x28, 0x79, 0x48, 0x28, 0x79, 0x48, 0x28, 0x79, 0x48, 0x28, 0x78, 0x47, 0x27, 0x78, 0x47, 
   0x27, 0x78, 0x47, 0x27, 0x78, 0x47, 0x27, 0x78, 0x47, 0x27, 0x78, 0x47, 0x27, 0x78, 0x47, 0x27, 
   0x77, 0x46, 0x26, 0x77, 0x46, 0x26, 0x77, 0x46, 0x26, 0x78, 0x47, 0x27, 0x78, 0x47, 0x27, 0x78, 
   0x47, 0x27, 0x77, 0x46, 0x26, 0x77, 0x46, 0x26, 0x77, 0x46, 0x26, 0x79, 0x46, 0x24, 0x7C, 0x48, 
   0x26, 0x7B, 0x4A, 0x29, 0x78, 0x4D, 0x2F, 0x74, 0x4C, 0x32, 0x7A, 0x55, 0x3D, 0x8C, 0x69, 0x53, 
   0x6B, 0x4B, 0x3E, 0x43, 0x2A, 0x21, 0x43, 0x30, 0x2B, 0x43, 0x35, 0x32, 0x3E, 0x33, 0x2E, 0x42, 
   0x34, 0x28, 0x45, 0x3C, 0x32, 0x3E, 0x3C, 0x38, 0x3F, 0x3F, 0x39, 0x3F, 0x3F, 0x39, 0x41, 0x3D, 
   0x39, 0x3F, 0x36, 0x32, 0x4A, 0x3E, 0x3A, 0x4B, 0x3F, 0x39, 0x49, 0x3E, 0x37, 0x42, 0x36, 0x2E, 
   0x4B, 0x3E, 0x35, 0x52, 0x43, 0x3A, 0x45, 0x35, 0x2A, 0x53, 0x44, 0x3A, 0x4B, 0x3E, 0x35, 0x44, 
   0x37, 0x2E, 0x50, 0x43, 0x3A, 0x49, 0x3C, 0x33, 0x42, 0x35, 0x2C, 0x41, 0x34, 0x2B, 0x42, 0x3A, 
   0x2D, 0x3F, 0x38, 0x2A, 0x3F, 0x38, 0x2A, 0x42, 0x3A, 0x2D, 0x3E, 0x36, 0x29, 0x2B, 0x24, 0x17, 
   0x57, 0x4A, 0x3E, 0x53, 0x3F, 0x34, 0xAC, 0x8D, 0x8F, 0xF7, 0xDA, 0xDC, 0xD2, 0xB6, 0xB7, 0xB1, 
   0x99, 0x9A, 0xE2, 0xCE, 0xCE, 0xEB, 0xD8, 0xD8, 0xC2, 0xB4, 0xB3, 0x54, 0x50, 0x4C, 0x71, 0x6B, 
   0x68, 0xC7, 0xBC, 0xBA, 0xCF, 0xC2, 0xC0, 0xD8, 0xC7, 0xC6, 0xEB, 0xD9, 0xD7, 0xEF, 0xE0, 0xDE, 
   0xEF, 0xE1, 0xDE, 0xF1, 0xE2, 0xDE, 0xE2, 0xD3, 0xCE, 0xE9, 0xD7, 0xD3, 0xCA, 0xB8, 0xB2, 0xC0, 
   0xAE, 0xA9, 0xF5, 0xE4, 0xE2, 0xFD, 0xF1, 0xED, 0xF7, 0xE4, 0xDD, 0xF2, 0xDB, 0xD3, 0xE2, 0xCE, 
   0xC9, 0xBF, 0xAD, 0xAB, 0x92, 0x86, 0x85, 0x70, 0x66, 0x66, 0x53, 0x52, 0x51, 0x4A, 0x4F, 0x4F, 
   0x4E, 0x57, 0x56, 0x50, 0x57, 0x57, 0x4D, 0x51, 0x54, 0x49, 0x4B, 0x4C, 0x5D, 0x5F, 0x61, 0x5A, 
   0x5C, 0x5D, 0x4F, 0x51, 0x52, 0x83, 0x84, 0x86, 0x6F, 0x71, 0x72, 0x52, 0x53, 0x55, 0x66, 0x66, 
   0x6A, 0xCA, 0xC6, 0xCC, 0x6F, 0x68, 0x6D, 0x8A, 0x81, 0x82, 0x9F, 0x96, 0x92, 0x47, 0x3F, 0x36, 
   0x8A, 0x7B, 0x74, 0x5D, 0x51, 0x4B, 0x5C, 0x54, 0x4D, 0x67, 0x5F, 0x5A, 0x8F, 0x83, 0x80, 0x6D, 
   0x5E, 0x5C, 0x98, 0x8A, 0x87, 0xA3, 0x97, 0x93, 0xA9, 0x99, 0x95, 0x9B, 0x89, 0x85, 0x73, 0x62, 
   0x5F, 0x54, 0x46, 0x42, 0x6A, 0x60, 0x5B, 0x67, 0x61, 0x5A, 0x4E, 0x44, 0x3F, 0xA7, 0x9A, 0x97, 
   0x97, 0x89, 0x87, 0xC5, 0xBC, 0xBB, 0x62, 0x5A, 0x5B, 0x73, 0x6A, 0x69, 0xB2, 0xA6, 0xA4, 0x87, 
   0x75, 0x74, 0x79, 0x64, 0x64, 0x6F, 0x5C, 0x5B, 0x6D, 0x5D, 0x5D, 0x82, 0x76, 0x74, 0x68, 0x5D, 
   0x5A, 0x82, 0x77, 0x76, 0xA9, 0x9C, 0x9D, 0x70, 0x62, 0x60, 0x85, 0x72, 0x6C, 0x8F, 0x77, 0x6C, 
   0x98, 0x76, 0x68, 0x99, 0x6F, 0x60, 0x96, 0x6D, 0x5E, 0x91, 0x68, 0x59, 0x8E, 0x65, 0x56, 0x8D, 
   0x64, 0x55, 0x8C, 0x63, 0x53, 0x8D, 0x62, 0x51, 0x8B, 0x5F, 0x4E, 0x89, 0x5E, 0x4D, 0x88, 0x5D, 
   0x4C, 0x86, 0x5B, 0x4A, 0x84, 0x59, 0x49, 0x85, 0x58, 0x46, 0x87, 0x57, 0x45, 0x86, 0x56, 0x44, 
   0x86, 0x56, 0x44, 0x86, 0x56, 0x44, 0x87, 0x56, 0x45, 0x84, 0x55, 0x42, 0x81, 0x56, 0x3B, 0x81, 
   0x56, 0x3B, 0x7F, 0x54, 0x39, 0x7F, 0x54, 0x38, 0x7F, 0x54, 0x39, 0x7E, 0x53, 0x38, 0x7D, 0x52, 
   0x37, 0x7C, 0x51, 0x36, 0x7C, 0x51, 0x36, 0x7C, 0x51, 0x36, 0x7B, 0x50, 0x35, 0x7B, 0x50, 0x35, 
   0x7B, 0x50, 0x35, 0x7A, 0x4F, 0x34, 0x79, 0x4E, 0x33, 0x78, 0x4D, 0x32, 0x78, 0x4D, 0x32, 0x78, 
   0x4D, 0x32, 0x78, 0x4D, 0x32, 0x79, 0x4D, 0x32, 0x7A, 0x4D, 0x32, 0x79, 0x4C, 0x31, 0x78, 0x4B, 
   0x30, 0x78, 0x4B, 0x30, 0x78, 0x4B, 0x30, 0x77, 0x4A, 0x2F, 0x78, 0x49, 0x2D, 0x78, 0x49, 0x2D, 
   0x78, 0x49, 0x2D, 0x79, 0x4A, 0x2E, 0x79, 0x4A, 0x2E, 0x79, 0x4A, 0x2E, 0x79, 0x4A, 0x2E, 0x78, 
   0x49, 0x2D, 0x78, 0x49, 0x2D, 0x78, 0x49, 0x2D, 0x78, 0x49, 0x2D, 0x78, 0x49, 0x2D, 0x78, 0x49, 
   0x2D, 0x78, 0x48, 0x2C, 0x78, 0x48, 0x2C, 0x78, 0x48, 0x2C, 0x78, 0x48, 0x2C, 0x77, 0x47, 0x2B, 
   0x77, 0x47, 0x2B, 0x77, 0x48, 0x2A, 0x77, 0x48, 0x29, 0x77, 0x48, 0x29, 0x77, 0x48, 0x29, 0x76, 
   0x47, 0x28, 0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x76, 0x47, 
   0x28, 0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 
   0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x77, 0x48, 0x29, 0x77, 0x48, 0x29, 0x77, 0x48, 0x29, 0x77, 
   0x48, 0x29, 0x77, 0x48, 0x29, 0x77, 0x48, 0x29, 0x77, 0x48, 0x29, 0x76, 0x47, 0x28, 0x76, 0x47, 
   0x28, 0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x77, 0x48, 0x29, 
   0x77, 0x48, 0x29, 0x77, 0x48, 0x29, 0x77, 0x48, 0x29, 0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x76, 
   0x47, 0x28, 0x76, 0x47, 0x28, 0x75, 0x46, 0x27, 0x74, 0x45, 0x26, 0x75, 0x46, 0x27, 0x75, 0x46, 
   0x27, 0x75, 0x46, 0x27, 0x75, 0x46, 0x27, 0x75, 0x46, 0x27, 0x75, 0x46, 0x27, 0x76, 0x47, 0x28, 
   0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x76, 
   0x47, 0x28, 0x78, 0x47, 0x27, 0x78, 0x47, 0x27, 0x78, 0x47, 0x27, 0x78, 0x47, 0x27, 0x78, 0x47, 
   0x27, 0x78, 0x47, 0x27, 0x78, 0x47, 0x27, 0x78, 0x47, 0x27, 0x78, 0x47, 0x27, 0x78, 0x47, 0x27, 
   0x77, 0x46, 0x26, 0x77, 0x46, 0x26, 0x77, 0x46, 0x26, 0x78, 0x47, 0x27, 0x78, 0x47, 0x27, 0x78, 
   0x47, 0x27, 0x78, 0x47, 0x27, 0x78, 0x47, 0x27, 0x78, 0x47, 0x27, 0x79, 0x47, 0x26, 0x7A, 0x47, 
   0x26, 0x7A, 0x49, 0x29, 0x76, 0x47, 0x29, 0x78, 0x4B, 0x30, 0x79, 0x4C, 0x34, 0x7C, 0x51, 0x3B, 
   0x7E, 0x5A, 0x47, 0x55, 0x36, 0x28, 0x47, 0x2E, 0x25, 0x4D, 0x3B, 0x35, 0x42, 0x34, 0x2D, 0x43, 
   0x36, 0x2D, 0x44, 0x3B, 0x33, 0x3F, 0x3C, 0x36, 0x45, 0x44, 0x3C, 0x3E, 0x3E, 0x36, 0x3C, 0x38, 
   0x31, 0x3C, 0x34, 0x2E, 0x3E, 0x32, 0x2D, 0x4A, 0x40, 0x39, 0x43, 0x38, 0x31, 0x53, 0x47, 0x3F, 
   0x4C, 0x3F, 0x37, 0x56, 0x47, 0x3E, 0x4D, 0x3E, 0x32, 0x4C, 0x3E, 0x34, 0x4F, 0x42, 0x39, 0x46, 
   0x39, 0x30, 0x47, 0x3A, 0x31, 0x41, 0x34, 0x2B, 0x3E, 0x31, 0x28, 0x4C, 0x3F, 0x36, 0x40, 0x36, 
   0x2B, 0x3C, 0x33, 0x27, 0x47, 0x3E, 0x32, 0x40, 0x37, 0x2B, 0x44, 0x3B, 0x2F, 0x33, 0x2B, 0x1F, 
   0x47, 0x39, 0x2D, 0x46, 0x34, 0x29, 0xDB, 0xC1, 0xC5, 0xF0, 0xDC, 0xE0, 0x88, 0x70, 0x74, 0xB6, 
   0x9E, 0xA1, 0xDF, 0xC6, 0xC9, 0xEC, 0xCF, 0xD3, 0xF9, 0xE5, 0xE6, 0xB2, 0xAB, 0xA5, 0x94, 0x8A, 
   0x85, 0xDC, 0xCE, 0xC9, 0xC4, 0xB3, 0xAF, 0xE0, 0xCC, 0xC8, 0xF1, 0xDD, 0xD9, 0xF2, 0xE4, 0xE4, 
   0xF1, 0xE4, 0xE4, 0xE3, 0xD5, 0xD3, 0xAD, 0x9E, 0x9B, 0xC4, 0xB6, 0xB1, 0xB3, 0x9F, 0x9A, 0xF1, 
   0xDF, 0xD9, 0xD5, 0xC0, 0xBA, 0xE5, 0xD6, 0xCF, 0x9C, 0x82, 0x77, 0x80, 0x65, 0x5A, 0x6D, 0x56, 
   0x4E, 0x62, 0x4C, 0x46, 0x6C, 0x5F, 0x5C, 0x5F, 0x5A, 0x57, 0x45, 0x46, 0x43, 0x5F, 0x66, 0x65, 
   0x41, 0x4B, 0x4B, 0x42, 0x4E, 0x4F, 0x43, 0x4D, 0x50, 0x4A, 0x4D, 0x4C, 0x59, 0x5C, 0x5A, 0x54, 
   0x56, 0x55, 0x4E, 0x51, 0x50, 0x6C, 0x6E, 0x6D, 0x69, 0x6B, 0x6A, 0x61, 0x61, 0x62, 0x6E, 0x6C, 
   0x70, 0xAA, 0xA4, 0xAB, 0x43, 0x3A, 0x3F, 0xB0, 0xA5, 0xA6, 0xB5, 0xA8, 0xA5, 0xB5, 0xA8, 0xA0, 
   0xDB, 0xC7, 0xC0, 0x82, 0x71, 0x6B, 0x64, 0x57, 0x51, 0x51, 0x46, 0x42, 0x44, 0x39, 0x35, 0x52, 
   0x44, 0x42, 0x61, 0x53, 0x50, 0x66, 0x5A, 0x56, 0x97, 0x89, 0x85, 0x5D, 0x4D, 0x4A, 0x57, 0x48, 
   0x45, 0x4C, 0x40, 0x3C, 0x67, 0x5D, 0x58, 0x63, 0x5C, 0x55, 0x87, 0x7B, 0x76, 0x74, 0x65, 0x62, 
   0xC7, 0xB6, 0xB4, 0xC3, 0xB4, 0xB2, 0xA5, 0x9D, 0x9B, 0xA4, 0x9A, 0x97, 0xAD, 0x9E, 0x9C, 0x70, 
   0x5E, 0x5D, 0x77, 0x65, 0x63, 0x83, 0x72, 0x70, 0x74, 0x66, 0x64, 0x6D, 0x62, 0x5F, 0x72, 0x66, 
   0x61, 0x79, 0x6D, 0x6B, 0x74, 0x67, 0x67, 0xA7, 0x96, 0x93, 0x8E, 0x7A, 0x73, 0x86, 0x6C, 0x5F, 
   0x96, 0x72, 0x63, 0x99, 0x70, 0x61, 0x93, 0x6A, 0x5B, 0x92, 0x69, 0x5A, 0x8F, 0x66, 0x57, 0x8E, 
   0x65, 0x56, 0x8D, 0x64, 0x55, 0x8E, 0x63, 0x52, 0x8B, 0x60, 0x4F, 0x8A, 0x5F, 0x4E, 0x8A, 0x5F, 
   0x4E, 0x88, 0x5D, 0x4C, 0x85, 0x5C, 0x4A, 0x86, 0x59, 0x47, 0x88, 0x58, 0x46, 0x87, 0x58, 0x46, 
   0x85, 0x56, 0x44, 0x86, 0x56, 0x44, 0x86, 0x57, 0x45, 0x83, 0x55, 0x42, 0x82, 0x56, 0x3D, 0x82, 
   0x57, 0x3D, 0x81, 0x55, 0x3B, 0x7F, 0x54, 0x3A, 0x7F, 0x54, 0x3A, 0x7E, 0x53, 0x39, 0x7D, 0x51, 
   0x38, 0x7D, 0x51, 0x38, 0x7D, 0x51, 0x38, 0x7D, 0x52, 0x38, 0x7C, 0x51, 0x37, 0x7C, 0x51, 0x37, 
   0x7C, 0x51, 0x37, 0x7A, 0x4F, 0x34, 0x79, 0x4E, 0x33, 0x78, 0x4D, 0x32, 0x77, 0x4C, 0x31, 0x77, 
   0x4C, 0x31, 0x77, 0x4C, 0x31, 0x79, 0x4D, 0x32, 0x7B, 0x4E, 0x33, 0x7A, 0x4D, 0x32, 0x79, 0x4C, 
   0x31, 0x78, 0x4B, 0x30, 0x78, 0x4B, 0x30, 0x77, 0x4A, 0x2F, 0x78, 0x49, 0x2D, 0x78, 0x49, 0x2D, 
   0x78, 0x49, 0x2D, 0x79, 0x4A, 0x2E, 0x79, 0x4A, 0x2E, 0x79, 0x4A, 0x2E, 0x79, 0x4A, 0x2E, 0x78, 
   0x49, 0x2D, 0x78, 0x49, 0x2D, 0x78, 0x49, 0x2D, 0x77, 0x48, 0x2C, 0x77, 0x48, 0x2C, 0x77, 0x48, 
   0x2C, 0x77, 0x47, 0x2B, 0x78, 0x48, 0x2C, 0x79, 0x49, 0x2D, 0x78, 0x48, 0x2C, 0x77, 0x47, 0x2B, 
   0x77, 0x47, 0x2B, 0x77, 0x47, 0x2A, 0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x76, 
   0x47, 0x28, 0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x76, 0x47, 
   0x28, 0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 
   0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x77, 0x48, 0x29, 0x77, 0x48, 0x29, 0x77, 0x48, 0x29, 0x77, 
   0x48, 0x29, 0x77, 0x48, 0x29, 0x77, 0x48, 0x29, 0x77, 0x48, 0x29, 0x76, 0x47, 0x28, 0x76, 0x47, 
   0x28, 0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x77, 0x48, 0x29, 
   0x77, 0x48, 0x29, 0x77, 0x48, 0x29, 0x77, 0x48, 0x29, 0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x76, 
   0x47, 0x28, 0x76, 0x47, 0x28, 0x75, 0x46, 0x27, 0x74, 0x45, 0x26, 0x74, 0x45, 0x26, 0x74, 0x45, 
   0x26, 0x74, 0x45, 0x26, 0x75, 0x46, 0x27, 0x75, 0x46, 0x27, 0x75, 0x46, 0x27, 0x76, 0x47, 0x28, 
   0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x76, 
   0x47, 0x28, 0x77, 0x46, 0x26, 0x77, 0x46, 0x26, 0x77, 0x46, 0x26, 0x78, 0x47, 0x27, 0x78, 0x47, 
   0x27, 0x78, 0x47, 0x27, 0x78, 0x47, 0x27, 0x78, 0x47, 0x27, 0x78, 0x47, 0x27, 0x78, 0x47, 0x27, 
   0x77, 0x46, 0x26, 0x77, 0x46, 0x26, 0x77, 0x46, 0x26, 0x78, 0x47, 0x27, 0x78, 0x47, 0x27, 0x78, 
   0x47, 0x27, 0x79, 0x48, 0x28, 0x79, 0x48, 0x28, 0x79, 0x48, 0x28, 0x79, 0x47, 0x27, 0x79, 0x47, 
   0x26, 0x79, 0x48, 0x28, 0x7A, 0x47, 0x2A, 0x79, 0x46, 0x2B, 0x79, 0x45, 0x2D, 0x7B, 0x48, 0x30, 
   0x7C, 0x52, 0x3A, 0x69, 0x45, 0x31, 0x51, 0x34, 0x24, 0x4A, 0x32, 0x29, 0x46, 0x34, 0x2D, 0x4B, 
   0x3B, 0x35, 0x49, 0x3D, 0x37, 0x42, 0x3C, 0x35, 0x42, 0x40, 0x37, 0x3D, 0x3C, 0x34, 0x39, 0x35, 
   0x2D, 0x3C, 0x34, 0x2D, 0x42, 0x36, 0x30, 0x50, 0x46, 0x40, 0x40, 0x36, 0x2E, 0x48, 0x3D, 0x35, 
   0x4E, 0x43, 0x39, 0x59, 0x4B, 0x42, 0x5F, 0x51, 0x45, 0x48, 0x3B, 0x30, 0x4C, 0x3F, 0x37, 0x40, 
   0x33, 0x2A, 0x49, 0x3C, 0x33, 0x36, 0x29, 0x20, 0x4B, 0x3E, 0x35, 0x57, 0x4A, 0x40, 0x43, 0x39, 
   0x2D, 0x3B, 0x30, 0x24, 0x3D, 0x32, 0x26, 0x46, 0x3C, 0x30, 0x39, 0x2F, 0x23, 0x37, 0x2D, 0x21, 
   0x3C, 0x2D, 0x22, 0x3D, 0x2C, 0x21, 0xF8, 0xEB, 0xED, 0xE2, 0xD2, 0xD5, 0x94, 0x86, 0x88, 0x68, 
   0x58, 0x5A, 0x94, 0x80, 0x84, 0xE6, 0xCC, 0xD1, 0xF5, 0xDC, 0xDF, 0xA4, 0x96, 0x90, 0xC5, 0xB7, 
   0xB1, 0xE8, 0xD7, 0xD1, 0xE2, 0xCF, 0xCA, 0xF1, 0xDF, 0xDA, 0xF5, 0xE4, 0xDE, 0xE6, 0xDA, 0xDA, 
   0xE8, 0xE0, 0xE1, 0x9D, 0x90, 0x8E, 0x9C, 0x8C, 0x87, 0xBF, 0xAF, 0xA8, 0xB9, 0xA1, 0x9A, 0xA3, 
   0x8B, 0x83, 0x70, 0x56, 0x4C, 0x7A, 0x5E, 0x51, 0x66, 0x47, 0x38, 0x69, 0x49, 0x3A, 0x68, 0x4B, 
   0x3F, 0x6B, 0x51, 0x47, 0x67, 0x5A, 0x54, 0x58, 0x54, 0x4E, 0x46, 0x44, 0x3F, 0x51, 0x54, 0x52, 
   0x42, 0x4A, 0x49, 0x3A, 0x46, 0x48, 0x3B, 0x47, 0x49, 0x44, 0x47, 0x45, 0x49, 0x4C, 0x4A, 0x5F, 
   0x62, 0x60, 0x72, 0x75, 0x73, 0x4B, 0x4E, 0x4C, 0x61, 0x64, 0x62, 0x63, 0x65, 0x64, 0x6E, 0x6B, 
   0x70, 0x7F, 0x79, 0x80, 0x6D, 0x63, 0x68, 0xC1, 0xB5, 0xB6, 0xD6, 0xC7, 0xC5, 0xEA, 0xDB, 0xD3, 
   0xA1, 0x88, 0x84, 0x80, 0x6B, 0x66, 0x60, 0x50, 0x4C, 0x4C, 0x41, 0x3D, 0x43, 0x38, 0x33, 0x45, 
   0x38, 0x33, 0x50, 0x42, 0x3E, 0x67, 0x5B, 0x57, 0x48, 0x3C, 0x39, 0x45, 0x37, 0x34, 0x48, 0x3C, 
   0x38, 0x44, 0x38, 0x35, 0x3F, 0x34, 0x30, 0x91, 0x88, 0x82, 0xAE, 0xA1, 0x9C, 0x9C, 0x89, 0x86, 
   0xB9, 0xA5, 0xA1, 0xB6, 0xA4, 0xA1, 0xC9, 0xBB, 0xB7, 0xC1, 0xB2, 0xAE, 0x93, 0x81, 0x7E, 0x7B, 
   0x6A, 0x66, 0x7F, 0x71, 0x6D, 0x8D, 0x7F, 0x7B, 0x90, 0x83, 0x7F, 0x86, 0x7B, 0x76, 0x74, 0x68, 
   0x62, 0x6B, 0x5E, 0x5B, 0x74, 0x66, 0x63, 0xC3, 0xB1, 0xAC, 0x9D, 0x85, 0x7D, 0x90, 0x73, 0x65, 
   0x98, 0x73, 0x64, 0x97, 0x6E, 0x5F, 0x94, 0x6B, 0x5C, 0x92, 0x69, 0x5A, 0x8F, 0x66, 0x57, 0x8F, 
   0x66, 0x57, 0x8F, 0x66, 0x57, 0x8F, 0x64, 0x53, 0x8C, 0x61, 0x50, 0x8A, 0x5F, 0x4E, 0x8A, 0x5F, 
   0x4E, 0x89, 0x5E, 0x4D, 0x87, 0x5C, 0x4B, 0x86, 0x5A, 0x48, 0x87, 0x59, 0x47, 0x86, 0x58, 0x46, 
   0x84, 0x56, 0x44, 0x84, 0x56, 0x44, 0x84, 0x56, 0x44, 0x82, 0x54, 0x42, 0x82, 0x56, 0x3F, 0x82, 
   0x56, 0x3F, 0x82, 0x56, 0x3E, 0x80, 0x54, 0x3D, 0x80, 0x54, 0x3C, 0x7F, 0x53, 0x3C, 0x7E, 0x52, 
   0x3A, 0x7E, 0x51, 0x3A, 0x7D, 0x51, 0x3A, 0x7D, 0x51, 0x39, 0x7C, 0x50, 0x38, 0x7C, 0x50, 0x38, 
   0x7B, 0x4F, 0x38, 0x7A, 0x4F, 0x34, 0x79, 0x4E, 0x33, 0x78, 0x4D, 0x32, 0x77, 0x4C, 0x31, 0x77, 
   0x4C, 0x31, 0x77, 0x4C, 0x31, 0x79, 0x4D, 0x32, 0x7B, 0x4E, 0x33, 0x7A, 0x4D, 0x32, 0x79, 0x4C, 
   0x31, 0x78, 0x4B, 0x30, 0x78, 0x4B, 0x30, 0x77, 0x4A, 0x2F, 0x78, 0x49, 0x2D, 0x78, 0x49, 0x2D, 
   0x78, 0x49, 0x2D, 0x79, 0x4A, 0x2E, 0x79, 0x4A, 0x2E, 0x78, 0x49, 0x2D, 0x78, 0x49, 0x2D, 0x78, 
   0x49, 0x2D, 0x78, 0x49, 0x2D, 0x78, 0x49, 0x2D, 0x77, 0x48, 0x2C, 0x77, 0x48, 0x2C, 0x77, 0x48, 
   0x2C, 0x77, 0x47, 0x2B, 0x77, 0x47, 0x2B, 0x78, 0x48, 0x2C, 0x78, 0x48, 0x2C, 0x77, 0x47, 0x2B, 
   0x77, 0x47, 0x2B, 0x77, 0x48, 0x2A, 0x77, 0x48, 0x28, 0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x76, 
   0x47, 0x28, 0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x76, 0x47, 
   0x28, 0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 
   0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x77, 0x48, 0x29, 0x77, 0x48, 0x29, 0x77, 0x48, 0x29, 0x77, 
   0x48, 0x29, 0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x77, 0x48, 0x29, 0x76, 0x47, 0x28, 0x76, 0x47, 
   0x28, 0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x77, 0x48, 0x29, 
   0x77, 0x48, 0x29, 0x77, 0x48, 0x29, 0x77, 0x48, 0x29, 0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x75, 
   0x46, 0x27, 0x75, 0x46, 0x27, 0x74, 0x45, 0x26, 0x74, 0x45, 0x26, 0x74, 0x45, 0x26, 0x74, 0x45, 
   0x26, 0x74, 0x45, 0x26, 0x75, 0x46, 0x27, 0x75, 0x46, 0x27, 0x75, 0x46, 0x27, 0x76, 0x47, 0x28, 
   0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x76, 
   0x47, 0x28, 0x77, 0x46, 0x26, 0x77, 0x46, 0x26, 0x77, 0x46, 0x26, 0x78, 0x47, 0x27, 0x78, 0x47, 
   0x27, 0x78, 0x47, 0x27, 0x78, 0x47, 0x27, 0x78, 0x47, 0x27, 0x78, 0x47, 0x27, 0x78, 0x47, 0x27, 
   0x77, 0x46, 0x26, 0x77, 0x46, 0x26, 0x77, 0x46, 0x26, 0x78, 0x47, 0x27, 0x78, 0x47, 0x27, 0x78, 
   0x47, 0x27, 0x77, 0x46, 0x26, 0x77, 0x46, 0x26, 0x77, 0x46, 0x26, 0x77, 0x47, 0x26, 0x78, 0x48, 
   0x26, 0x78, 0x47, 0x27, 0x7A, 0x46, 0x29, 0x78, 0x42, 0x26, 0x7C, 0x44, 0x29, 0x7D, 0x44, 0x2A, 
   0x76, 0x48, 0x2B, 0x79, 0x50, 0x37, 0x6E, 0x4B, 0x36, 0x51, 0x34, 0x26, 0x4B, 0x34, 0x2B, 0x46, 
   0x31, 0x2D, 0x43, 0x35, 0x30, 0x3D, 0x34, 0x2D, 0x33, 0x2F, 0x27, 0x38, 0x37, 0x2E, 0x33, 0x30, 
   0x27, 0x38, 0x31, 0x2A, 0x3E, 0x33, 0x2D, 0x45, 0x3C, 0x35, 0x40, 0x36, 0x2F, 0x45, 0x3B, 0x33, 
   0x56, 0x4C, 0x42, 0x4A, 0x3E, 0x34, 0x5E, 0x52, 0x46, 0x4F, 0x42, 0x38, 0x4E, 0x41, 0x39, 0x48, 
   0x3B, 0x32, 0x44, 0x37, 0x2E, 0x3F, 0x32, 0x29, 0x4B, 0x3E, 0x35, 0x60, 0x53, 0x49, 0x55, 0x48, 
   0x3C, 0x42, 0x35, 0x29, 0x3E, 0x30, 0x24, 0x48, 0x3A, 0x2F, 0x3E, 0x31, 0x25, 0x3C, 0x2E, 0x22, 
   0x35, 0x25, 0x1A, 0x3C, 0x2A, 0x20, 0x9C, 0x95, 0x96, 0xC5, 0xC1, 0xC1, 0x5A, 0x57, 0x58, 0x53, 
   0x50, 0x50, 0x87, 0x7C, 0x7E, 0xFA, 0xE7, 0xEB, 0xD4, 0xBF, 0xC0, 0xCC, 0xBB, 0xB6, 0xEC, 0xDF, 
   0xDA, 0xE6, 0xD2, 0xCE, 0xEE, 0xDB, 0xD6, 0xE6, 0xD5, 0xD0, 0xEA, 0xDC, 0xD8, 0x99, 0x8F, 0x8D, 
   0x82, 0x79, 0x78, 0x86, 0x77, 0x73, 0xF0, 0xE3, 0xDB, 0xC4, 0xB2, 0xAA, 0x6C, 0x4F, 0x44, 0x65, 
   0x47, 0x3B, 0x67, 0x48, 0x39, 0x6A, 0x49, 0x38, 0x75, 0x51, 0x3D, 0x74, 0x50, 0x3B, 0x6D, 0x4B, 
   0x3A, 0x67, 0x48, 0x39, 0x67, 0x56, 0x4A, 0x65, 0x59, 0x50, 0x64, 0x5B, 0x54, 0x6C, 0x67, 0x62, 
   0x4C, 0x4C, 0x49, 0x36, 0x3F, 0x3F, 0x52, 0x5D, 0x5D, 0x52, 0x55, 0x54, 0x52, 0x55, 0x53, 0x61, 
   0x64, 0x62, 0x98, 0x9B, 0x99, 0x6D, 0x70, 0x6E, 0x9E, 0xA1, 0x9F, 0x75, 0x78, 0x78, 0x5C, 0x5C, 
   0x61, 0x8F, 0x8A, 0x91, 0x96, 0x8D, 0x93, 0xC4, 0xB7, 0xB9, 0xDB, 0xCB, 0xC9, 0x90, 0x7F, 0x78, 
   0x52, 0x3A, 0x38, 0x50, 0x3C, 0x39, 0x47, 0x38, 0x35, 0x4E, 0x44, 0x3F, 0x43, 0x3A, 0x32, 0x42, 
   0x35, 0x2E, 0x58, 0x4A, 0x46, 0x5F, 0x51, 0x50, 0x42, 0x36, 0x35, 0x41, 0x36, 0x34, 0x49, 0x3D, 
   0x3B, 0x7A, 0x6D, 0x6C, 0xAC, 0x9F, 0x9D, 0xA4, 0x98, 0x95, 0xC4, 0xB4, 0xB1, 0xDC, 0xC8, 0xC4, 
   0xE0, 0xCC, 0xC7, 0xB0, 0x99, 0x93, 0xB0, 0x9C, 0x96, 0x9A, 0x86, 0x81, 0x85, 0x71, 0x6C, 0x8B, 
   0x7B, 0x75, 0x64, 0x58, 0x51, 0x7C, 0x72, 0x6B, 0x99, 0x90, 0x88, 0x6C, 0x62, 0x5B, 0x73, 0x68, 
   0x60, 0x6E, 0x63, 0x5C, 0x7D, 0x6F, 0x69, 0x8D, 0x79, 0x72, 0x8B, 0x70, 0x66, 0x98, 0x76, 0x67, 
   0x97, 0x70, 0x60, 0x96, 0x6D, 0x5E, 0x93, 0x6A, 0x5B, 0x91, 0x68, 0x59, 0x90, 0x67, 0x58, 0x90, 
   0x68, 0x59, 0x91, 0x68, 0x59, 0x91, 0x67, 0x56, 0x8E, 0x63, 0x52, 0x8D, 0x62, 0x51, 0x8D, 0x62, 
   0x51, 0x8A, 0x5F, 0x4E, 0x87, 0x5D, 0x4C, 0x87, 0x5B, 0x49, 0x88, 0x59, 0x47, 0x85, 0x57, 0x45, 
   0x84, 0x56, 0x44, 0x85, 0x57, 0x45, 0x84, 0x56, 0x44, 0x83, 0x55, 0x43, 0x81, 0x55, 0x3E, 0x81, 
   0x55, 0x3E, 0x81, 0x55, 0x3E, 0x81, 0x55, 0x3E, 0x81, 0x55, 0x3E, 0x81, 0x55, 0x3E, 0x80, 0x54, 
   0x3D, 0x7F, 0x53, 0x3C, 0x7E, 0x52, 0x3B, 0x7D, 0x51, 0x3A, 0x7C, 0x50, 0x39, 0x7B, 0x4F, 0x38, 
   0x7A, 0x4E, 0x37, 0x7A, 0x4F, 0x34, 0x7A, 0x4F, 0x34, 0x78, 0x4D, 0x32, 0x78, 0x4D, 0x32, 0x78, 
   0x4D, 0x32, 0x78, 0x4D, 0x32, 0x79, 0x4D, 0x32, 0x7A, 0x4D, 0x32, 0x79, 0x4C, 0x31, 0x78, 0x4B, 
   0x30, 0x79, 0x4C, 0x31, 0x79, 0x4C, 0x31, 0x78, 0x4B, 0x2F, 0x78, 0x49, 0x2D, 0x78, 0x49, 0x2D, 
   0x78, 0x49, 0x2D, 0x78, 0x49, 0x2D, 0x78, 0x49, 0x2D, 0x76, 0x47, 0x2B, 0x76, 0x47, 0x2B, 0x77, 
   0x48, 0x2C, 0x77, 0x48, 0x2C, 0x77, 0x48, 0x2C, 0x76, 0x47, 0x2B, 0x76, 0x47, 0x2B, 0x76, 0x47, 
   0x2B, 0x76, 0x46, 0x2A, 0x76, 0x46, 0x2A, 0x76, 0x46, 0x2A, 0x77, 0x47, 0x2B, 0x77, 0x47, 0x2B, 
   0x77, 0x47, 0x2B, 0x78, 0x49, 0x2B, 0x78, 0x49, 0x2A, 0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x76, 
   0x47, 0x28, 0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x76, 0x47, 
   0x28, 0x76, 0x47, 0x28, 0x75, 0x46, 0x27, 0x75, 0x46, 0x27, 0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 
   0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x76, 
   0x47, 0x28, 0x75, 0x46, 0x27, 0x75, 0x46, 0x27, 0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x76, 0x47, 
   0x28, 0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 
   0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x75, 0x46, 0x27, 0x75, 0x46, 0x27, 0x74, 
   0x45, 0x26, 0x73, 0x44, 0x25, 0x73, 0x44, 0x25, 0x73, 0x44, 0x25, 0x73, 0x44, 0x25, 0x73, 0x44, 
   0x25, 0x73, 0x44, 0x25, 0x74, 0x45, 0x26, 0x74, 0x45, 0x26, 0x74, 0x45, 0x26, 0x75, 0x46, 0x27, 
   0x75, 0x46, 0x27, 0x75, 0x46, 0x27, 0x75, 0x46, 0x27, 0x75, 0x46, 0x27, 0x75, 0x46, 0x27, 0x75, 
   0x46, 0x27, 0x77, 0x46, 0x26, 0x77, 0x46, 0x26, 0x77, 0x46, 0x26, 0x77, 0x46, 0x26, 0x77, 0x46, 
   0x26, 0x77, 0x46, 0x26, 0x77, 0x46, 0x26, 0x77, 0x46, 0x26, 0x77, 0x46, 0x26, 0x77, 0x46, 0x26, 
   0x77, 0x46, 0x26, 0x77, 0x46, 0x26, 0x77, 0x46, 0x26, 0x77, 0x46, 0x26, 0x77, 0x46, 0x26, 0x77, 
   0x46, 0x26, 0x77, 0x46, 0x26, 0x77, 0x46, 0x26, 0x77, 0x46, 0x26, 0x77, 0x47, 0x26, 0x77, 0x47, 
   0x26, 0x77, 0x46, 0x26, 0x7A, 0x46, 0x27, 0x7D, 0x46, 0x28, 0x7D, 0x45, 0x28, 0x7D, 0x44, 0x2A, 
   0x78, 0x47, 0x26, 0x74, 0x47, 0x28, 0x7B, 0x52, 0x37, 0x70, 0x4B, 0x39, 0x4D, 0x2F, 0x24, 0x49, 
   0x32, 0x2C, 0x44, 0x34, 0x2E, 0x3C, 0x33, 0x2A, 0x31, 0x2C, 0x23, 0x34, 0x32, 0x28, 0x38, 0x35, 
   0x2B, 0x48, 0x41, 0x39, 0x5D, 0x53, 0x4B, 0x51, 0x49, 0x42, 0x42, 0x39, 0x32, 0x3D, 0x33, 0x2B, 
   0x49, 0x3F, 0x35, 0x4B, 0x41, 0x37, 0x50, 0x44, 0x38, 0x4E, 0x42, 0x38, 0x3F, 0x32, 0x29, 0x4B, 
   0x3E, 0x35, 0x45, 0x38, 0x2F, 0x33, 0x26, 0x1D, 0x4A, 0x3D, 0x34, 0x63, 0x56, 0x4D, 0x6F, 0x5D, 
   0x53, 0x52, 0x41, 0x36, 0x4C, 0x3A, 0x2F, 0x46, 0x34, 0x2A, 0x42, 0x31, 0x26, 0x40, 0x2F, 0x24, 
   0x36, 0x25, 0x1A, 0x3F, 0x2E, 0x23, 0x8E, 0x8A, 0x89, 0x91, 0x8F, 0x8E, 0x41, 0x45, 0x43, 0x52, 
   0x55, 0x53, 0xAE, 0xA8, 0xA7, 0xC9, 0xB9, 0xBA, 0xC8, 0xB3, 0xB4, 0xF5, 0xE2, 0xDF, 0xD8, 0xC6, 
   0xC3, 0xF5, 0xE2, 0xDF, 0xF0, 0xDD, 0xDA, 0xDF, 0xCC, 0xCA, 0xBA, 0xA4, 0xA2, 0xA6, 0x9A, 0x97, 
   0x96, 0x8C, 0x88, 0xA6, 0x96, 0x90, 0xAE, 0x99, 0x90, 0x6F, 0x53, 0x47, 0x6A, 0x48, 0x39, 0x75, 
   0x53, 0x43, 0x70, 0x4E, 0x3C, 0x74, 0x4F, 0x3A, 0x75, 0x4C, 0x35, 0x77, 0x4E, 0x37, 0x72, 0x4C, 
   0x37, 0x6C, 0x4A, 0x38, 0x67, 0x4E, 0x3E, 0x61, 0x4C, 0x3D, 0x76, 0x60, 0x55, 0x8C, 0x7A, 0x73, 
   0x5A, 0x51, 0x4C, 0x44, 0x46, 0x43, 0x53, 0x58, 0x56, 0x56, 0x58, 0x58, 0x59, 0x5B, 0x5B, 0x5F, 
   0x61, 0x61, 0xA5, 0xA7, 0xA7, 0x58, 0x5A, 0x5A, 0xC4, 0xC6, 0xC6, 0x60, 0x63, 0x64, 0x5B, 0x5E, 
   0x62, 0x66, 0x63, 0x69, 0x68, 0x60, 0x66, 0xCA, 0xBF, 0xC1, 0x93, 0x84, 0x82, 0x46, 0x36, 0x2F, 
   0x4E, 0x3A, 0x39, 0x3E, 0x2F, 0x2D, 0x68, 0x5D, 0x59, 0x99, 0x91, 0x8A, 0x58, 0x4E, 0x46, 0x5C, 
   0x50, 0x47, 0x48, 0x39, 0x36, 0x46, 0x38, 0x3A, 0x42, 0x38, 0x38, 0x42, 0x3A, 0x3A, 0x51, 0x48, 
   0x48, 0xB5, 0xA8, 0xA9, 0xBE, 0xAE, 0xAE, 0xA7, 0x9B, 0x97, 0xB7, 0xA5, 0xA3, 0xD7, 0xC1, 0xBE, 
   0xD4, 0xBB, 0xB5, 0xD3, 0xBA, 0xB4, 0xC2, 0xAB, 0xA3, 0x8D, 0x75, 0x6F, 0x76, 0x60, 0x5C, 0x7A, 
   0x6A, 0x64, 0x7A, 0x6F, 0x68, 0x90, 0x88, 0x81, 0x6C, 0x63, 0x5C, 0x5D, 0x51, 0x4B, 0x66, 0x5C, 
   0x52, 0x6C, 0x61, 0x58, 0x72, 0x62, 0x5B, 0x85, 0x6E, 0x66, 0x90, 0x73, 0x68, 0x95, 0x6F, 0x5F, 
   0x93, 0x6A, 0x5A, 0x93, 0x6A, 0x5B, 0x92, 0x69, 0x5A, 0x92, 0x69, 0x5A, 0x92, 0x69, 0x5A, 0x91, 
   0x69, 0x5A, 0x91, 0x68, 0x59, 0x92, 0x67, 0x56, 0x8F, 0x64, 0x53, 0x8F, 0x64, 0x53, 0x8E, 0x63, 
   0x52, 0x8B, 0x60, 0x4F, 0x88, 0x5D, 0x4C, 0x86, 0x5B, 0x49, 0x86, 0x5B, 0x48, 0x84, 0x59, 0x46, 
   0x83, 0x58, 0x45, 0x83, 0x58, 0x45, 0x82, 0x57, 0x44, 0x81, 0x56, 0x43, 0x81, 0x55, 0x3E, 0x81, 
   0x55, 0x3E, 0x81, 0x55, 0x3E, 0x82, 0x56, 0x3F, 0x82, 0x56, 0x3F, 0x82, 0x56, 0x3F, 0x81, 0x54, 
   0x3E, 0x7F, 0x53, 0x3C, 0x7E, 0x52, 0x3B, 0x7D, 0x51, 0x3A, 0x7C, 0x50, 0x39, 0x7C, 0x50, 0x39, 
   0x7A, 0x4F, 0x37, 0x7A, 0x50, 0x34, 0x7A, 0x4F, 0x34, 0x79, 0x4E, 0x33, 0x78, 0x4D, 0x32, 0x78, 
   0x4D, 0x32, 0x78, 0x4D, 0x32, 0x79, 0x4D, 0x32, 0x7A, 0x4D, 0x32, 0x79, 0x4C, 0x31, 0x78, 0x4B, 
   0x30, 0x79, 0x4C, 0x31, 0x79, 0x4C, 0x31, 0x77, 0x4A, 0x2F, 0x78, 0x49, 0x2D, 0x78, 0x49, 0x2D, 
   0x78, 0x49, 0x2D, 0x78, 0x49, 0x2D, 0x78, 0x49, 0x2D, 0x76, 0x47, 0x2B, 0x76, 0x47, 0x2B, 0x77, 
   0x48, 0x2C, 0x77, 0x48, 0x2C, 0x77, 0x48, 0x2C, 0x76, 0x47, 0x2B, 0x76, 0x47, 0x2B, 0x76, 0x47, 
   0x2B, 0x76, 0x46, 0x2A, 0x76, 0x46, 0x2A, 0x76, 0x46, 0x2A, 0x77, 0x47, 0x2B, 0x77, 0x47, 0x2B, 
   0x77, 0x47, 0x2B, 0x78, 0x48, 0x2B, 0x78, 0x49, 0x29, 0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x76, 
   0x47, 0x28, 0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x76, 0x47, 
   0x28, 0x76, 0x47, 0x28, 0x75, 0x46, 0x27, 0x75, 0x46, 0x27, 0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 
   0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x76, 
   0x47, 0x28, 0x75, 0x46, 0x27, 0x75, 0x46, 0x27, 0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x76, 0x47, 
   0x28, 0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 
   0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x75, 0x46, 0x27, 0x75, 0x46, 0x27, 0x74, 
   0x45, 0x26, 0x73, 0x44, 0x25, 0x73, 0x44, 0x25, 0x73, 0x44, 0x25, 0x73, 0x44, 0x25, 0x73, 0x44, 
   0x25, 0x73, 0x44, 0x25, 0x74, 0x45, 0x26, 0x74, 0x45, 0x26, 0x74, 0x45, 0x26, 0x75, 0x46, 0x27, 
   0x75, 0x46, 0x27, 0x75, 0x46, 0x27, 0x75, 0x46, 0x27, 0x75, 0x46, 0x27, 0x75, 0x46, 0x27, 0x75, 
   0x46, 0x27, 0x77, 0x46, 0x26, 0x77, 0x46, 0x26, 0x77, 0x46, 0x26, 0x77, 0x46, 0x26, 0x77, 0x46, 
   0x26, 0x77, 0x46, 0x26, 0x77, 0x46, 0x26, 0x77, 0x46, 0x26, 0x77, 0x46, 0x26, 0x77, 0x46, 0x26, 
   0x77, 0x46, 0x26, 0x77, 0x46, 0x26, 0x77, 0x46, 0x26, 0x77, 0x46, 0x26, 0x77, 0x46, 0x26, 0x77, 
   0x46, 0x26, 0x77, 0x46, 0x26, 0x77, 0x46, 0x26, 0x77, 0x46, 0x26, 0x77, 0x46, 0x26, 0x77, 0x46, 
   0x26, 0x77, 0x46, 0x26, 0x79, 0x47, 0x27, 0x7B, 0x47, 0x27, 0x7C, 0x46, 0x27, 0x7C, 0x46, 0x27, 
   0x79, 0x48, 0x27, 0x76, 0x46, 0x25, 0x74, 0x45, 0x27, 0x7E, 0x53, 0x3B, 0x67, 0x43, 0x33, 0x4C, 
   0x2E, 0x25, 0x47, 0x31, 0x2A, 0x42, 0x36, 0x2E, 0x37, 0x30, 0x27, 0x37, 0x32, 0x29, 0x40, 0x3D, 
   0x33, 0x3A, 0x34, 0x2B, 0x3E, 0x35, 0x2D, 0x41, 0x3B, 0x34, 0x3F, 0x38, 0x30, 0x48, 0x40, 0x37, 
   0x5D, 0x53, 0x4A, 0x4D, 0x43, 0x38, 0x3E, 0x34, 0x28, 0x48, 0x3C, 0x32, 0x42, 0x35, 0x2C, 0x3B, 
   0x2E, 0x25, 0x44, 0x37, 0x2E, 0x2E, 0x21, 0x18, 0x3F, 0x32, 0x29, 0x62, 0x55, 0x4C, 0x6C, 0x5A, 
   0x4F, 0x63, 0x51, 0x46, 0x57, 0x45, 0x3A, 0x3E, 0x2C, 0x21, 0x43, 0x31, 0x26, 0x4D, 0x3B, 0x30, 
   0x44, 0x34, 0x29, 0x3C, 0x2C, 0x21, 0xE7, 0xE0, 0xDD, 0x73, 0x6A, 0x67, 0x50, 0x50, 0x4A, 0x55, 
   0x54, 0x50, 0x83, 0x7B, 0x77, 0xB6, 0xA3, 0xA0, 0xD9, 0xC2, 0xC1, 0xD0, 0xBB, 0xBC, 0xAE, 0x9A, 
   0x9B, 0xC6, 0xB1, 0xB3, 0xC3, 0xAF, 0xB0, 0xD9, 0xC7, 0xC7, 0xC7, 0xB4, 0xB5, 0x76, 0x6B, 0x67, 
   0x9E, 0x94, 0x8D, 0x7F, 0x6D, 0x63, 0x57, 0x3E, 0x31, 0x6F, 0x50, 0x40, 0x74, 0x4F, 0x3A, 0x74, 
   0x4D, 0x37, 0x74, 0x4E, 0x37, 0x78, 0x4F, 0x37, 0x7A, 0x4D, 0x33, 0x7B, 0x4E, 0x33, 0x76, 0x4C, 
   0x34, 0x72, 0x4B, 0x36, 0x6D, 0x4B, 0x35, 0x69, 0x49, 0x35, 0x67, 0x47, 0x37, 0x62, 0x45, 0x3A, 
   0x5D, 0x49, 0x41, 0x68, 0x60, 0x5A, 0x52, 0x4E, 0x4A, 0x4D, 0x4E, 0x51, 0x45, 0x46, 0x49, 0x74, 
   0x75, 0x79, 0x61, 0x62, 0x66, 0x67, 0x68, 0x6B, 0x72, 0x73, 0x77, 0x47, 0x4D, 0x4F, 0x58, 0x5F, 
   0x62, 0x54, 0x55, 0x5B, 0x40, 0x3B, 0x3F, 0x81, 0x78, 0x7A, 0x93, 0x87, 0x84, 0x57, 0x49, 0x42, 
   0x4B, 0x3D, 0x3C, 0x35, 0x2A, 0x28, 0x7F, 0x79, 0x75, 0xAA, 0xA3, 0x9C, 0x55, 0x4A, 0x42, 0x5D, 
   0x4F, 0x46, 0x5F, 0x50, 0x4C, 0x4F, 0x43, 0x44, 0x31, 0x29, 0x29, 0x4C, 0x46, 0x45, 0x6F, 0x69, 
   0x68, 0x7C, 0x70, 0x70, 0x6D, 0x5D, 0x5F, 0xA3, 0x96, 0x91, 0xB8, 0xA4, 0xA1, 0xD9, 0xC0, 0xBD, 
   0xBB, 0x9E, 0x99, 0xDE, 0xC2, 0xBB, 0xB6, 0x9B, 0x91, 0xA8, 0x8E, 0x86, 0x80, 0x69, 0x64, 0x7D, 
   0x6D, 0x66, 0x74, 0x6A, 0x62, 0x69, 0x62, 0x59, 0x62, 0x59, 0x51, 0x6C, 0x61, 0x59, 0x71, 0x67, 
   0x5C, 0x70, 0x64, 0x5B, 0x7D, 0x6E, 0x65, 0x89, 0x71, 0x67, 0x90, 0x70, 0x63, 0x91, 0x6A, 0x58, 
   0x97, 0x6D, 0x5B, 0x91, 0x68, 0x5A, 0x91, 0x68, 0x59, 0x91, 0x68, 0x59, 0x92, 0x69, 0x5A, 0x91, 
   0x68, 0x59, 0x90, 0x67, 0x58, 0x91, 0x66, 0x55, 0x8F, 0x64, 0x53, 0x90, 0x65, 0x54, 0x8F, 0x64, 
   0x53, 0x8C, 0x61, 0x50, 0x87, 0x5C, 0x4C, 0x86, 0x5B, 0x49, 0x87, 0x5C, 0x48, 0x84, 0x59, 0x46, 
   0x83, 0x58, 0x45, 0x83, 0x58, 0x45, 0x82, 0x57, 0x44, 0x81, 0x56, 0x43, 0x81, 0x54, 0x3F, 0x81, 
   0x54, 0x3F, 0x81, 0x54, 0x3F, 0x82, 0x55, 0x40, 0x82, 0x55, 0x40, 0x82, 0x55, 0x40, 0x81, 0x54, 
   0x3F, 0x80, 0x53, 0x3E, 0x7F, 0x52, 0x3D, 0x7E, 0x51, 0x3C, 0x7D, 0x50, 0x3B, 0x7C, 0x4F, 0x3A, 
   0x7B, 0x4F, 0x39, 0x7B, 0x50, 0x35, 0x7B, 0x50, 0x35, 0x7A, 0x4F, 0x34, 0x78, 0x4D, 0x32, 0x78, 
   0x4D, 0x32, 0x78, 0x4D, 0x32, 0x79, 0x4D, 0x32, 0x7A, 0x4D, 0x32, 0x79, 0x4C, 0x31, 0x78, 0x4B, 
   0x30, 0x78, 0x4B, 0x30, 0x78, 0x4B, 0x30, 0x77, 0x49, 0x2E, 0x78, 0x49, 0x2D, 0x78, 0x49, 0x2D, 
   0x78, 0x49, 0x2D, 0x78, 0x49, 0x2D, 0x78, 0x49, 0x2D, 0x76, 0x47, 0x2B, 0x76, 0x47, 0x2B, 0x76, 
   0x47, 0x2B, 0x76, 0x47, 0x2B, 0x76, 0x47, 0x2B, 0x76, 0x47, 0x2B, 0x76, 0x47, 0x2B, 0x76, 0x47, 
   0x2B, 0x76, 0x46, 0x2A, 0x76, 0x46, 0x2A, 0x76, 0x46, 0x2A, 0x77, 0x47, 0x2B, 0x77, 0x47, 0x2B, 
   0x77, 0x47, 0x2B, 0x78, 0x48, 0x2B, 0x77, 0x48, 0x28, 0x75, 0x46, 0x27, 0x75, 0x46, 0x27, 0x76, 
   0x47, 0x28, 0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x76, 0x47, 
   0x28, 0x76, 0x47, 0x28, 0x75, 0x46, 0x27, 0x75, 0x46, 0x27, 0x75, 0x46, 0x27, 0x75, 0x46, 0x27, 
   0x75, 0x46, 0x27, 0x75, 0x46, 0x27, 0x75, 0x46, 0x27, 0x75, 0x46, 0x27, 0x75, 0x46, 0x27, 0x75, 
   0x46, 0x27, 0x75, 0x46, 0x27, 0x75, 0x46, 0x27, 0x75, 0x46, 0x27, 0x75, 0x46, 0x27, 0x75, 0x46, 
   0x27, 0x75, 0x46, 0x27, 0x75, 0x46, 0x27, 0x75, 0x46, 0x27, 0x75, 0x46, 0x27, 0x75, 0x46, 0x27, 
   0x75, 0x46, 0x27, 0x75, 0x46, 0x27, 0x75, 0x46, 0x27, 0x74, 0x45, 0x26, 0x74, 0x45, 0x26, 0x74, 
   0x45, 0x26, 0x73, 0x44, 0x25, 0x73, 0x44, 0x25, 0x73, 0x44, 0x25, 0x73, 0x44, 0x25, 0x73, 0x44, 
   0x25, 0x73, 0x44, 0x25, 0x73, 0x44, 0x25, 0x73, 0x44, 0x25, 0x73, 0x44, 0x25, 0x74, 0x45, 0x26, 
   0x74, 0x45, 0x26, 0x74, 0x45, 0x26, 0x74, 0x45, 0x26, 0x74, 0x45, 0x26, 0x74, 0x45, 0x26, 0x74, 
   0x45, 0x26, 0x76, 0x45, 0x25, 0x76, 0x45, 0x25, 0x76, 0x45, 0x25, 0x76, 0x45, 0x25, 0x76, 0x45, 
   0x25, 0x76, 0x45, 0x25, 0x76, 0x45, 0x25, 0x76, 0x45, 0x25, 0x76, 0x45, 0x25, 0x76, 0x45, 0x25, 
   0x76, 0x45, 0x25, 0x76, 0x45, 0x25, 0x76, 0x45, 0x25, 0x76, 0x45, 0x25, 0x76, 0x45, 0x25, 0x76, 
   0x45, 0x25, 0x76, 0x45, 0x25, 0x76, 0x45, 0x25, 0x76, 0x45, 0x25, 0x76, 0x45, 0x25, 0x76, 0x45, 
   0x25, 0x76, 0x45, 0x25, 0x77, 0x46, 0x25, 0x76, 0x47, 0x25, 0x75, 0x46, 0x25, 0x76, 0x46, 0x25, 
   0x77, 0x46, 0x26, 0x78, 0x46, 0x25, 0x77, 0x44, 0x24, 0x7B, 0x4B, 0x2F, 0x7A, 0x50, 0x3C, 0x5A, 
   0x34, 0x28, 0x49, 0x2F, 0x27, 0x41, 0x35, 0x2C, 0x3C, 0x33, 0x29, 0x38, 0x34, 0x29, 0x3E, 0x3B, 
   0x31, 0x3A, 0x34, 0x29, 0x3A, 0x31, 0x27, 0x34, 0x2E, 0x27, 0x3B, 0x34, 0x2C, 0x36, 0x2F, 0x25, 
   0x4D, 0x45, 0x3B, 0x41, 0x38, 0x2E, 0x3C, 0x32, 0x26, 0x3E, 0x32, 0x28, 0x40, 0x33, 0x2A, 0x45, 
   0x38, 0x2F, 0x50, 0x43, 0x3A, 0x33, 0x26, 0x1D, 0x39, 0x2C, 0x23, 0x46, 0x38, 0x2F, 0x68, 0x54, 
   0x49, 0x72, 0x5E, 0x53, 0x6C, 0x58, 0x4D, 0x63, 0x4F, 0x44, 0x3F, 0x2B, 0x20, 0x53, 0x3F, 0x34, 
   0x74, 0x63, 0x58, 0x4D, 0x40, 0x34, 0xFE, 0xF0, 0xEB, 0x9F, 0x90, 0x8C, 0x44, 0x3D, 0x38, 0x5F, 
   0x5A, 0x54, 0x82, 0x76, 0x70, 0xAD, 0x94, 0x91, 0xBB, 0xA0, 0xA0, 0x62, 0x4E, 0x52, 0x7A, 0x66, 
   0x6A, 0x90, 0x7E, 0x82, 0x92, 0x80, 0x83, 0xBD, 0xAD, 0xB1, 0x9A, 0x8A, 0x8E, 0x9D, 0x93, 0x8F, 
   0xA5, 0x9C, 0x93, 0x64, 0x53, 0x47, 0x64, 0x4B, 0x3A, 0x6E, 0x4D, 0x39, 0x79, 0x50, 0x38, 0x7A, 
   0x50, 0x39, 0x76, 0x4D, 0x36, 0x78, 0x4C, 0x32, 0x7D, 0x4F, 0x31, 0x7D, 0x4F, 0x30, 0x78, 0x4D, 
   0x32, 0x76, 0x4D, 0x35, 0x73, 0x4B, 0x33, 0x73, 0x49, 0x33, 0x72, 0x47, 0x36, 0x69, 0x43, 0x36, 
   0x6E, 0x51, 0x48, 0x74, 0x65, 0x5F, 0x5D, 0x54, 0x50, 0x52, 0x52, 0x57, 0x43, 0x44, 0x4A, 0x54, 
   0x55, 0x5B, 0x41, 0x41, 0x48, 0x83, 0x84, 0x8A, 0x7A, 0x7A, 0x80, 0x47, 0x4F, 0x52, 0x46, 0x53, 
   0x56, 0x51, 0x56, 0x5C, 0x52, 0x50, 0x55, 0x5F, 0x58, 0x5A, 0x96, 0x8B, 0x88, 0x47, 0x3A, 0x33, 
   0x39, 0x31, 0x30, 0x51, 0x4B, 0x4A, 0x98, 0x95, 0x91, 0x73, 0x6E, 0x67, 0x4A, 0x3F, 0x37, 0x4E, 
   0x3E, 0x34, 0x52, 0x42, 0x3E, 0x3E, 0x32, 0x33, 0x46, 0x3E, 0x3F, 0x61, 0x5D, 0x5C, 0x6D, 0x67, 
   0x67, 0x7B, 0x6F, 0x6F, 0x86, 0x77, 0x78, 0xD2, 0xC7, 0xC5, 0xEA, 0xD6, 0xD5, 0xB9, 0xA0, 0x9D, 
   0xE4, 0xC6, 0xC1, 0xD5, 0xB7, 0xAF, 0xB4, 0x97, 0x8D, 0xB0, 0x93, 0x8B, 0x8F, 0x76, 0x71, 0x83, 
   0x73, 0x6C, 0x6F, 0x68, 0x5F, 0x6B, 0x67, 0x5D, 0x6F, 0x69, 0x60, 0x63, 0x59, 0x51, 0x6B, 0x63, 
   0x56, 0x84, 0x79, 0x6F, 0x94, 0x85, 0x7D, 0x89, 0x72, 0x69, 0x90, 0x70, 0x61, 0x95, 0x6C, 0x58, 
   0x95, 0x6B, 0x58, 0x94, 0x6B, 0x5C, 0x91, 0x68, 0x59, 0x91, 0x68, 0x59, 0x91, 0x68, 0x59, 0x8E, 
   0x65, 0x57, 0x8D, 0x64, 0x54, 0x8F, 0x64, 0x53, 0x8E, 0x63, 0x52, 0x8F, 0x64, 0x53, 0x90, 0x65, 
   0x54, 0x8D, 0x62, 0x51, 0x87, 0x5C, 0x4C, 0x86, 0x5C, 0x4A, 0x87, 0x5D, 0x49, 0x84, 0x5A, 0x47, 
   0x83, 0x59, 0x46, 0x82, 0x58, 0x45, 0x81, 0x57, 0x44, 0x80, 0x56, 0x43, 0x81, 0x54, 0x3F, 0x81, 
   0x54, 0x3F, 0x81, 0x54, 0x3F, 0x81, 0x54, 0x3F, 0x81, 0x54, 0x3F, 0x81, 0x54, 0x3F, 0x81, 0x54, 
   0x3F, 0x81, 0x54, 0x3F, 0x7F, 0x52, 0x3D, 0x7F, 0x52, 0x3D, 0x7E, 0x51, 0x3C, 0x7D, 0x50, 0x3B, 
   0x7C, 0x4F, 0x3A, 0x7C, 0x51, 0x36, 0x7B, 0x50, 0x35, 0x7A, 0x4F, 0x34, 0x79, 0x4E, 0x33, 0x78, 
   0x4D, 0x32, 0x78, 0x4D, 0x32, 0x79, 0x4D, 0x32, 0x7A, 0x4D, 0x32, 0x79, 0x4C, 0x31, 0x78, 0x4B, 
   0x30, 0x77, 0x4A, 0x2F, 0x77, 0x4A, 0x2F, 0x76, 0x49, 0x2E, 0x78, 0x49, 0x2D, 0x78, 0x49, 0x2D, 
   0x78, 0x49, 0x2D, 0x78, 0x49, 0x2D, 0x78, 0x49, 0x2D, 0x77, 0x48, 0x2C, 0x75, 0x46, 0x2A, 0x75, 
   0x46, 0x2A, 0x75, 0x46, 0x2A, 0x75, 0x46, 0x2A, 0x76, 0x47, 0x2B, 0x76, 0x47, 0x2B, 0x76, 0x47, 
   0x2B, 0x76, 0x46, 0x2A, 0x76, 0x46, 0x2A, 0x76, 0x46, 0x2A, 0x77, 0x47, 0x2B, 0x77, 0x47, 0x2B, 
   0x77, 0x47, 0x2B, 0x77, 0x48, 0x2A, 0x75, 0x47, 0x27, 0x74, 0x45, 0x26, 0x75, 0x46, 0x27, 0x76, 
   0x47, 0x28, 0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x76, 0x47, 0x28, 0x76, 0x47, 
   0x28, 0x76, 0x47, 0x28, 0x75, 0x46, 0x27, 0x75, 0x46, 0x27, 0x75, 0x46, 0x27, 0x74, 0x45, 0x26, 
   0x74, 0x45, 0x26, 0x74, 0x45, 0x26, 0x74, 0x45, 0x26, 0x74, 0x45, 0x26, 0x74, 0x45, 0x26, 0x75, 
   0x46, 0x27, 0x75, 0x46, 0x27, 0x75, 0x46, 0x27, 0x75, 0x46, 0x27, 0x74, 0x45, 0x26, 0x74, 0x45, 
   0x26, 0x74, 0x45, 0x26, 0x74, 0x45, 0x26, 0x74, 0x45, 0x26, 0x74, 0x45, 0x26, 0x74, 0x45, 0x26, 
   0x74, 0x45, 0x26, 0x74, 0x45, 0x26, 0x74, 0x45, 0x26, 0x73, 0x44, 0x25, 0x73, 0x44, 0x25, 0x73, 
   0x44, 0x25, 0x73, 0x44, 0x25, 0x73, 0x44, 0x25, 0x73, 0x44, 0x25, 0x73, 0x44, 0x25, 0x73, 0x44, 
   0x25, 0x73, 0x44, 0x25, 0x72, 0x43, 0x24, 0x72, 0x43, 0x24, 0x72, 0x43, 0x24, 0x73, 0x44, 0x25, 
   0x73, 0x44, 0x25, 0x73, 0x44, 0x25, 0x73, 0x44, 0x25, 0x73, 0x44, 0x25, 0x73, 0x44, 0x25, 0x73, 
   0x44, 0x25, 0x75, 0x44, 0x24, 0x75, 0x44, 0x24, 0x75, 0x44, 0x24, 0x75, 0x44, 0x24, 0x75, 0x44, 
   0x24, 0x75, 0x44, 0x24, 0x75, 0x44, 0x24, 0x75, 0x44, 0x24, 0x75, 0x44, 0x24, 0x75, 0x44, 0x24, 
   0x75, 0x44, 0x24, 0x75, 0x44, 0x24, 0x75, 0x44, 0x24, 0x75, 0x44, 0x24, 0x75, 0x44, 0x24, 0x75, 
   0x44, 0x24, 0x75, 0x44, 0x24, 0x75, 0x44, 0x24, 0x75, 0x44, 0x24, 0x76, 0x44, 0x24, 0x76, 0x44, 
   0x24, 0x75, 0x44, 0x24, 0x74, 0x45, 0x24, 0x73, 0x46, 0x24, 0x72, 0x47, 0x23, 0x72, 0x47, 0x22, 
   0x75, 0x45, 0x25, 0x76, 0x43, 0x23, 0x79, 0x43, 0x22, 0x7D, 0x4A, 0x2B, 0x77, 0x48, 0x31, 0x6E, 
   0x45, 0x37, 0x4C, 0x31, 0x28, 0x40, 0x32, 0x2A, 0x3C, 0x32, 0x28, 0x3C, 0x37, 0x2C, 0x36, 0x33, 
   0x27, 0x31, 0x2B, 0x21, 0x3D, 0x35, 0x2C, 0x31, 0x2B, 0x25, 0x38, 0x32, 0x2A, 0x44, 0x3E, 0x35, 
   0x42, 0x3B, 0x30, 0x4A, 0x41, 0x37, 0x46, 0x3C, 0x2F, 0x3A, 0x2E, 0x24, 0x3B, 0x2F, 0x26, 0x3A, 
   0x2E, 0x25, 0x4C, 0x3F, 0x36, 0x39, 0x2C, 0x23, 0x36, 0x29, 0x20, 0x44, 0x37, 0x2E, 0x4E, 0x3A, 
   0x2F, 0x74, 0x60, 0x54, 0x77, 0x63, 0x58, 0x74, 0x5F, 0x54, 0x5E, 0x4A, 0x3F, 0x3E, 0x2A, 0x1F, 
   0x5F, 0x4E, 0x42, 0x5E, 0x51, 0x45, 0xA2, 0x8D, 0x86, 0x7E, 0x6C, 0x66, 0x47, 0x3E, 0x35, 0x7A, 
   0x73, 0x68, 0xA5, 0x94, 0x8B, 0xB4, 0x97, 0x8E, 0x73, 0x52, 0x4A, 0x5E, 0x42, 0x3C, 0x65, 0x4A, 
   0x43, 0x77, 0x5D, 0x56, 0x73, 0x58, 0x52, 0x92, 0x79, 0x72, 0x9D, 0x84, 0x7D, 0x90, 0x75, 0x69, 
   0x65, 0x4A, 0x39, 0x6B, 0x4D, 0x3A, 0x6D, 0x4B, 0x36, 0x71, 0x4C, 0x36, 0x76, 0x4C, 0x35, 0x78, 
   0x4E, 0x37, 0x76, 0x4D, 0x35, 0x76, 0x4C, 0x32, 0x79, 0x4E, 0x32, 0x7A, 0x4F, 0x33, 0x78, 0x4E, 
   0x33, 0x76, 0x4D, 0x34, 0x74, 0x4C, 0x31, 0x76, 0x4C, 0x31, 0x75, 0x4A, 0x33, 0x72, 0x49, 0x35, 
   0x6E, 0x49, 0x39, 0x70, 0x50, 0x41, 0x6E, 0x52, 0x47, 0x5F, 0x5C, 0x5E, 0x58, 0x57, 0x5A, 0x4E, 
   0x4C, 0x4F, 0x40, 0x3F, 0x42, 0x5D, 0x5C, 0x5F, 0x83, 0x81, 0x84, 0x42, 0x45, 0x42, 0x4A, 0x50, 
   0x49, 0x55, 0x55, 0x51, 0x5F, 0x5A, 0x57, 0x57, 0x4E, 0x4A, 0x5A, 0x4D, 0x48, 0x4E, 0x40, 0x3A, 
   0x43, 0x3E, 0x38, 0x51, 0x4E, 0x47, 0x6E, 0x6A, 0x63, 0x5D, 0x58, 0x52, 0x3F, 0x37, 0x33, 0x42, 
   0x37, 0x32, 0x3F, 0x32, 0x2E, 0x4C, 0x41, 0x3C, 0x67, 0x5E, 0x5A, 0x74, 0x6D, 0x6A, 0x67, 0x5E, 
   0x5D, 0x83, 0x74, 0x76, 0xAF, 0x9C, 0x9F, 0xE6, 0xD7, 0xD1, 0x9F, 0x87, 0x81, 0xB0, 0x91, 0x8C, 
   0xD1, 0xAF, 0xA9, 0xBC, 0x9D, 0x95, 0xAC, 0x91, 0x87, 0xAD, 0x95, 0x8D, 0xA0, 0x8B, 0x84, 0x8C, 
   0x7B, 0x74, 0x7D, 0x6F, 0x66, 0x74, 0x67, 0x5D, 0x6D, 0x5D, 0x54, 0x75, 0x64, 0x5A, 0x8D, 0x7C, 
   0x6D, 0x8D, 0x79, 0x6C, 0x8B, 0x74, 0x68, 0x8E, 0x71, 0x65, 0x91, 0x6F, 0x61, 0x94, 0x6D, 0x5C, 
   0x97, 0x6F, 0x5E, 0x95, 0x6C, 0x5D, 0x90, 0x67, 0x58, 0x90, 0x67, 0x58, 0x91, 0x68, 0x59, 0x8E, 
   0x65, 0x56, 0x8C, 0x63, 0x54, 0x8E, 0x63, 0x52, 0x8D, 0x62, 0x51, 0x8E, 0x63, 0x52, 0x8E, 0x63, 
   0x52, 0x8C, 0x61, 0x50, 0x87, 0x5C, 0x4B, 0x85, 0x5A, 0x48, 0x86, 0x5B, 0x49, 0x84, 0x5A, 0x48, 
   0x83, 0x58, 0x47, 0x82, 0x57, 0x46, 0x81, 0x57, 0x45, 0x80, 0x55, 0x43, 0x80, 0x55, 0x41, 0x81, 
   0x55, 0x41, 0x81, 0x54, 0x3F, 0x7F, 0x54, 0x3E, 0x7F, 0x54, 0x3D, 0x7E, 0x53, 0x3C, 0x7F, 0x53, 
   0x3D, 0x81, 0x54, 0x3F, 0x81, 0x54, 0x3F, 0x7F, 0x52, 0x3D, 0x7E, 0x51, 0x3C, 0x7D, 0x50, 0x3B, 
   0x7C, 0x4F, 0x3A, 0x7D, 0x51, 0x35, 0x7C, 0x4F, 0x34, 0x7B, 0x4E, 0x33, 0x7A, 0x4D, 0x32, 0x79, 
   0x4D, 0x32, 0x79, 0x4D, 0x32, 0x7A, 0x4D, 0x32, 0x7A, 0x4D, 0x32, 0x79, 0x4C, 0x31, 0x78, 0x4B, 
   0x30, 0x77, 0x4A, 0x2F, 0x77, 0x4A, 0x2F, 0x76, 0x49, 0x2E, 0x77, 0x49, 0x2D, 0x77, 0x49, 0x2D, 
   0x77, 0x49, 0x2D, 0x77, 0x49, 0x2D, 0x77, 0x49, 0x2D, 0x75, 0x48, 0x2C, 0x74, 0x46, 0x2A, 0x75, 
   0x46, 0x2A, 0x75, 0x46, 0x2A, 0x75, 0x46, 0x2A, 0x75, 0x46, 0x2A, 0x75, 0x46, 0x2A, 0x75, 0x46, 
   0x2A, 0x74, 0x45, 0x28, 0x74, 0x45, 0x28, 0x74, 0x45, 0x28, 0x75, 0x46, 0x29, 0x75, 0x46, 0x29, 
   0x75, 0x46, 0x29, 0x75, 0x47, 0x28, 0x75, 0x46, 0x27, 0x74, 0x45, 0x26, 0x74, 0x46, 0x27, 0x75, 
   0x46, 0x27, 0x75, 0x46, 0x27, 0x75, 0x46, 0x27, 0x75, 0x46, 0x27, 0x75, 0x46, 0x27, 0x75, 0x46, 
   0x27, 0x75, 0x46, 0x27, 0x74, 0x46, 0x27, 0x74, 0x46, 0x27, 0x74, 0x45, 0x26, 0x73, 0x44, 0x25, 
   0x73, 0x44, 0x25, 0x73, 0x44, 0x25, 0x73, 0x44, 0x25, 0x73, 0x44, 0x25, 0x73, 0x44, 0x25, 0x74, 
   0x45, 0x26, 0x74, 0x45, 0x26, 0x74, 0x45, 0x26, 0x74, 0x45, 0x26, 0x73, 0x44, 0x25, 0x73, 0x44, 
   0x25, 0x73, 0x44, 0x25, 0x73, 0x44, 0x25, 0x73, 0x44, 0x25, 0x73, 0x44, 0x25, 0x73, 0x44, 0x25, 
   0x73, 0x44, 0x25, 0x73, 0x44, 0x25, 0x73, 0x45, 0x26, 0x74, 0x45, 0x26, 0x72, 0x43, 0x24, 0x72, 
   0x43, 0x24, 0x73, 0x44, 0x25, 0x73, 0x44, 0x25, 0x73, 0x44, 0x25, 0x73, 0x44, 0x24, 0x73, 0x44, 
   0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 
   0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 
   0x44, 0x24, 0x74, 0x44, 0x24, 0x74, 0x44, 0x24, 0x74, 0x44, 0x24, 0x74, 0x44, 0x24, 0x74, 0x44, 
   0x24, 0x74, 0x44, 0x24, 0x74, 0x44, 0x24, 0x74, 0x44, 0x24, 0x74, 0x44, 0x24, 0x74, 0x44, 0x24, 
   0x74, 0x44, 0x24, 0x74, 0x44, 0x24, 0x74, 0x44, 0x24, 0x74, 0x44, 0x24, 0x74, 0x44, 0x24, 0x74, 
   0x44, 0x24, 0x74, 0x44, 0x24, 0x74, 0x44, 0x24, 0x74, 0x44, 0x24, 0x74, 0x44, 0x24, 0x74, 0x43, 
   0x23, 0x73, 0x43, 0x23, 0x72, 0x44, 0x23, 0x72, 0x44, 0x23, 0x72, 0x45, 0x23, 0x71, 0x45, 0x22, 
   0x73, 0x44, 0x24, 0x73, 0x42, 0x22, 0x74, 0x41, 0x21, 0x78, 0x47, 0x26, 0x79, 0x49, 0x2D, 0x78, 
   0x4A, 0x31, 0x5E, 0x3C, 0x2A, 0x4A, 0x35, 0x29, 0x38, 0x2A, 0x22, 0x3C, 0x33, 0x2D, 0x35, 0x2F, 
   0x28, 0x2E, 0x28, 0x1D, 0x32, 0x2C, 0x1C, 0x34, 0x2D, 0x22, 0x41, 0x3B, 0x31, 0x44, 0x3C, 0x32, 
   0x41, 0x39, 0x30, 0x42, 0x38, 0x2F, 0x43, 0x3A, 0x31, 0x44, 0x36, 0x2D, 0x3B, 0x2C, 0x23, 0x47, 
   0x38, 0x2F, 0x3E, 0x2F, 0x26, 0x3A, 0x2A, 0x21, 0x31, 0x21, 0x18, 0x44, 0x34, 0x2C, 0x51, 0x3E, 
   0x34, 0x52, 0x3F, 0x35, 0x5B, 0x49, 0x3F, 0x5D, 0x4B, 0x41, 0x7F, 0x69, 0x60, 0x57, 0x3E, 0x35, 
   0x4F, 0x3B, 0x31, 0x41, 0x32, 0x26, 0x5C, 0x45, 0x3C, 0x52, 0x40, 0x36, 0x6B, 0x60, 0x54, 0x7B, 
   0x70, 0x61, 0x70, 0x5D, 0x4F, 0x64, 0x43, 0x36, 0x71, 0x4C, 0x3D, 0x72, 0x50, 0x3E, 0x6F, 0x4D, 
   0x3B, 0x6F, 0x4D, 0x3B, 0x71, 0x4F, 0x3D, 0x69, 0x47, 0x36, 0x69, 0x47, 0x35, 0x6D, 0x44, 0x2F, 
   0x78, 0x4C, 0x35, 0x78, 0x4E, 0x37, 0x77, 0x4D, 0x37, 0x75, 0x4B, 0x35, 0x74, 0x4C, 0x36, 0x75, 
   0x4C, 0x35, 0x76, 0x4D, 0x34, 0x76, 0x4D, 0x34, 0x76, 0x4D, 0x34, 0x76, 0x4E, 0x35, 0x76, 0x4D, 
   0x34, 0x75, 0x4C, 0x33, 0x74, 0x4C, 0x30, 0x74, 0x4C, 0x2F, 0x74, 0x4B, 0x31, 0x74, 0x4A, 0x32, 
   0x73, 0x48, 0x31, 0x73, 0x47, 0x30, 0x72, 0x48, 0x34, 0x50, 0x44, 0x3F, 0x56, 0x4D, 0x49, 0x4E, 
   0x44, 0x40, 0x63, 0x59, 0x55, 0xAB, 0xA1, 0x9D, 0x84, 0x7A, 0x77, 0x63, 0x59, 0x4F, 0x68, 0x5F, 
   0x4F, 0x62, 0x56, 0x48, 0x69, 0x5A, 0x50, 0x67, 0x56, 0x4D, 0x58, 0x45, 0x3D, 0x6E, 0x5A, 0x54, 
   0x4B, 0x45, 0x39, 0x57, 0x52, 0x46, 0x6A, 0x62, 0x5A, 0x54, 0x4D, 0x49, 0x39, 0x31, 0x31, 0x40, 
   0x38, 0x3B, 0x3C, 0x32, 0x2F, 0x63, 0x59, 0x4F, 0x84, 0x7B, 0x72, 0x71, 0x67, 0x62, 0x79, 0x6B, 
   0x6A, 0x7F, 0x6C, 0x6E, 0x96, 0x7E, 0x80, 0xA6, 0x8D, 0x84, 0xC3, 0xA6, 0x9C, 0xDA, 0xB8, 0xAF, 
   0xC4, 0xA0, 0x98, 0xBD, 0x9F, 0x95, 0xAA, 0x91, 0x86, 0x9E, 0x8A, 0x82, 0x9E, 0x8D, 0x86, 0x95, 
   0x82, 0x7B, 0x88, 0x73, 0x6A, 0x82, 0x6B, 0x60, 0x7E, 0x65, 0x5A, 0x95, 0x7E, 0x71, 0x9F, 0x84, 
   0x74, 0x90, 0x73, 0x63, 0x8F, 0x70, 0x60, 0x93, 0x71, 0x62, 0x93, 0x70, 0x62, 0x93, 0x6E, 0x61, 
   0x94, 0x6D, 0x5F, 0x94, 0x6B, 0x5C, 0x91, 0x68, 0x59, 0x91, 0x68, 0x59, 0x91, 0x68, 0x59, 0x8E, 
   0x65, 0x57, 0x8D, 0x64, 0x55, 0x8F, 0x64, 0x53, 0x8E, 0x63, 0x52, 0x8D, 0x62, 0x51, 0x8C, 0x61, 
   0x50, 0x8B, 0x60, 0x4F, 0x88, 0x5D, 0x4C, 0x84, 0x59, 0x48, 0x85, 0x5A, 0x4A, 0x85, 0x5A, 0x49, 
   0x83, 0x58, 0x47, 0x82, 0x57, 0x46, 0x81, 0x56, 0x45, 0x7F, 0x54, 0x43, 0x80, 0x55, 0x42, 0x81, 
   0x56, 0x42, 0x80, 0x54, 0x3F, 0x7E, 0x53, 0x3D, 0x7D, 0x53, 0x3C, 0x7C, 0x53, 0x3A, 0x7D, 0x52, 
   0x3B, 0x80, 0x53, 0x3E, 0x81, 0x54, 0x3F, 0x7F, 0x52, 0x3D, 0x7E, 0x51, 0x3C, 0x7D, 0x50, 0x3B, 
   0x7C, 0x4F, 0x3A, 0x7D, 0x50, 0x35, 0x7C, 0x4F, 0x34, 0x7B, 0x4E, 0x33, 0x7A, 0x4D, 0x32, 0x7A, 
   0x4D, 0x32, 0x7A, 0x4D, 0x32, 0x7A, 0x4D, 0x32, 0x7A, 0x4D, 0x32, 0x79, 0x4C, 0x31, 0x78, 0x4B, 
   0x30, 0x77, 0x4A, 0x2F, 0x77, 0x4A, 0x2F, 0x76, 0x49, 0x2E, 0x76, 0x49, 0x2D, 0x76, 0x49, 0x2D, 
   0x76, 0x49, 0x2D, 0x76, 0x49, 0x2D, 0x75, 0x48, 0x2C, 0x74, 0x48, 0x2C, 0x74, 0x46, 0x2A, 0x75, 
   0x46, 0x2A, 0x75, 0x46, 0x2A, 0x75, 0x46, 0x2A, 0x75, 0x46, 0x2A, 0x75, 0x46, 0x2A, 0x75, 0x46, 
   0x2A, 0x73, 0x45, 0x26, 0x73, 0x45, 0x26, 0x73, 0x45, 0x26, 0x74, 0x46, 0x27, 0x74, 0x46, 0x27, 
   0x74, 0x46, 0x27, 0x74, 0x46, 0x27, 0x74, 0x46, 0x27, 0x74, 0x46, 0x27, 0x74, 0x46, 0x27, 0x74, 
   0x46, 0x27, 0x74, 0x46, 0x27, 0x74, 0x46, 0x27, 0x74, 0x46, 0x27, 0x74, 0x46, 0x27, 0x74, 0x46, 
   0x27, 0x74, 0x46, 0x27, 0x74, 0x46, 0x27, 0x74, 0x46, 0x27, 0x73, 0x45, 0x26, 0x72, 0x44, 0x25, 
   0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 0x73, 
   0x44, 0x25, 0x73, 0x44, 0x25, 0x73, 0x44, 0x25, 0x73, 0x44, 0x25, 0x73, 0x44, 0x25, 0x73, 0x44, 
   0x25, 0x73, 0x44, 0x25, 0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 
   0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 0x73, 0x45, 0x26, 0x74, 0x45, 0x26, 0x72, 0x43, 0x24, 0x72, 
   0x43, 0x24, 0x73, 0x44, 0x25, 0x73, 0x44, 0x25, 0x73, 0x44, 0x25, 0x73, 0x44, 0x24, 0x73, 0x44, 
   0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 
   0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 
   0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 
   0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 
   0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 
   0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x72, 0x43, 
   0x23, 0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 
   0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 0x74, 0x45, 0x25, 0x7B, 
   0x4A, 0x28, 0x70, 0x47, 0x2C, 0x5F, 0x42, 0x32, 0x48, 0x33, 0x2B, 0x39, 0x2B, 0x2A, 0x3B, 0x32, 
   0x2F, 0x36, 0x31, 0x25, 0x38, 0x34, 0x1F, 0x37, 0x2F, 0x22, 0x41, 0x39, 0x2D, 0x43, 0x3A, 0x30, 
   0x45, 0x3B, 0x33, 0x4B, 0x41, 0x39, 0x3F, 0x36, 0x30, 0x4C, 0x3F, 0x38, 0x40, 0x2F, 0x26, 0x4F, 
   0x3E, 0x36, 0x4B, 0x3B, 0x32, 0x40, 0x30, 0x27, 0x2D, 0x1C, 0x14, 0x3E, 0x2E, 0x25, 0x57, 0x45, 
   0x3D, 0x49, 0x39, 0x30, 0x42, 0x33, 0x2B, 0x4A, 0x3B, 0x32, 0x65, 0x4F, 0x47, 0x75, 0x59, 0x52, 
   0x4C, 0x35, 0x2C, 0x51, 0x40, 0x35, 0x64, 0x48, 0x3D, 0x67, 0x4F, 0x43, 0x6C, 0x5B, 0x4C, 0x61, 
   0x51, 0x40, 0x62, 0x4A, 0x39, 0x6E, 0x49, 0x3B, 0x75, 0x4E, 0x3E, 0x6D, 0x4C, 0x38, 0x6F, 0x4D, 
   0x39, 0x6D, 0x4B, 0x37, 0x6D, 0x4C, 0x38, 0x6D, 0x4C, 0x38, 0x6C, 0x4B, 0x37, 0x73, 0x4D, 0x37, 
   0x7A, 0x50, 0x3A, 0x76, 0x4D, 0x37, 0x77, 0x4E, 0x38, 0x73, 0x4A, 0x34, 0x74, 0x4B, 0x34, 0x75, 
   0x4C, 0x34, 0x75, 0x4C, 0x33, 0x75, 0x4C, 0x33, 0x75, 0x4C, 0x33, 0x75, 0x4C, 0x33, 0x75, 0x4C, 
   0x33, 0x74, 0x4B, 0x32, 0x73, 0x4B, 0x2F, 0x73, 0x4B, 0x2E, 0x73, 0x4A, 0x30, 0x73, 0x49, 0x31, 
   0x74, 0x49, 0x33, 0x73, 0x48, 0x33, 0x70, 0x46, 0x31, 0x5D, 0x45, 0x37, 0x60, 0x49, 0x3B, 0x65, 
   0x4E, 0x40, 0x94, 0x7D, 0x6F, 0x9C, 0x85, 0x78, 0x8B, 0x74, 0x66, 0x80, 0x69, 0x5A, 0x76, 0x5F, 
   0x50, 0x70, 0x56, 0x49, 0x6F, 0x53, 0x47, 0x76, 0x57, 0x4C, 0x7D, 0x5D, 0x54, 0x95, 0x76, 0x6E, 
   0x5D, 0x4F, 0x43, 0x73, 0x68, 0x5C, 0x97, 0x8C, 0x83, 0x6A, 0x60, 0x5B, 0x63, 0x5A, 0x57, 0x67, 
   0x5F, 0x5F, 0x72, 0x6A, 0x66, 0x84, 0x7A, 0x74, 0x88, 0x81, 0x7B, 0x73, 0x6A, 0x65, 0x82, 0x75, 
   0x71, 0x6F, 0x5C, 0x5A, 0x82, 0x6A, 0x68, 0xB1, 0x99, 0x90, 0xDC, 0xC0, 0xB6, 0xCA, 0xAB, 0xA2, 
   0xC1, 0xA0, 0x97, 0xB5, 0x97, 0x8E, 0xB1, 0x97, 0x8D, 0xA4, 0x8E, 0x86, 0xA2, 0x8E, 0x87, 0x95, 
   0x80, 0x78, 0x90, 0x79, 0x70, 0x8B, 0x72, 0x68, 0xA0, 0x87, 0x7C, 0x9F, 0x86, 0x7A, 0x94, 0x76, 
   0x68, 0x93, 0x74, 0x65, 0x94, 0x74, 0x65, 0x94, 0x72, 0x63, 0x96, 0x73, 0x65, 0x93, 0x6F, 0x61, 
   0x91, 0x6A, 0x5B, 0x92, 0x68, 0x59, 0x92, 0x69, 0x5A, 0x92, 0x69, 0x5A, 0x90, 0x67, 0x58, 0x8E, 
   0x65, 0x56, 0x8C, 0x63, 0x54, 0x8F, 0x64, 0x53, 0x8F, 0x63, 0x52, 0x8D, 0x62, 0x51, 0x8C, 0x61, 
   0x50, 0x8B, 0x60, 0x4F, 0x88, 0x5D, 0x4C, 0x87, 0x5C, 0x4B, 0x88, 0x5D, 0x4C, 0x86, 0x5B, 0x4A, 
   0x83, 0x58, 0x47, 0x82, 0x57, 0x46, 0x80, 0x55, 0x44, 0x7E, 0x53, 0x42, 0x7F, 0x54, 0x42, 0x80, 
   0x55, 0x41, 0x7F, 0x53, 0x3E, 0x7D, 0x53, 0x3D, 0x7D, 0x53, 0x3B, 0x7C, 0x53, 0x3A, 0x7C, 0x52, 
   0x3A, 0x7F, 0x51, 0x3D, 0x7F, 0x52, 0x3D, 0x7E, 0x51, 0x3C, 0x7D, 0x50, 0x3B, 0x7C, 0x4F, 0x3A, 
   0x7C, 0x4F, 0x39, 0x7C, 0x4F, 0x34, 0x7C, 0x4F, 0x33, 0x7B, 0x4E, 0x33, 0x79, 0x4C, 0x31, 0x79, 
   0x4C, 0x31, 0x79, 0x4C, 0x31, 0x79, 0x4C, 0x31, 0x79, 0x4C, 0x31, 0x78, 0x4B, 0x30, 0x77, 0x4A, 
   0x2F, 0x77, 0x4A, 0x2F, 0x77, 0x4A, 0x2F, 0x76, 0x49, 0x2E, 0x75, 0x48, 0x2C, 0x75, 0x48, 0x2C, 
   0x75, 0x48, 0x2C, 0x75, 0x48, 0x2C, 0x75, 0x48, 0x2C, 0x74, 0x47, 0x2B, 0x74, 0x46, 0x2A, 0x75, 
   0x46, 0x2A, 0x75, 0x46, 0x2A, 0x75, 0x46, 0x2A, 0x74, 0x45, 0x29, 0x74, 0x45, 0x29, 0x74, 0x45, 
   0x29, 0x73, 0x45, 0x26, 0x73, 0x45, 0x26, 0x73, 0x45, 0x26, 0x73, 0x45, 0x26, 0x73, 0x45, 0x26, 
   0x73, 0x45, 0x26, 0x73, 0x45, 0x26, 0x73, 0x45, 0x26, 0x73, 0x45, 0x26, 0x73, 0x45, 0x26, 0x73, 
   0x45, 0x26, 0x73, 0x45, 0x26, 0x73, 0x45, 0x26, 0x73, 0x45, 0x26, 0x73, 0x45, 0x26, 0x73, 0x45, 
   0x26, 0x73, 0x45, 0x26, 0x73, 0x45, 0x26, 0x73, 0x45, 0x26, 0x73, 0x45, 0x26, 0x72, 0x44, 0x25, 
   0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 0x73, 
   0x44, 0x25, 0x73, 0x44, 0x25, 0x73, 0x44, 0x25, 0x73, 0x44, 0x25, 0x73, 0x44, 0x25, 0x73, 0x44, 
   0x25, 0x73, 0x44, 0x25, 0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 
   0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 0x73, 0x45, 0x26, 0x74, 0x45, 0x26, 0x72, 0x43, 0x24, 0x72, 
   0x43, 0x24, 0x73, 0x44, 0x25, 0x73, 0x44, 0x25, 0x73, 0x44, 0x25, 0x73, 0x44, 0x24, 0x73, 0x44, 
   0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 
   0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 
   0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 
   0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 
   0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 0x72, 
   0x43, 0x23, 0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 0x72, 0x43, 
   0x23, 0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 
   0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 0x71, 0x42, 0x22, 0x72, 0x43, 0x23, 0x76, 
   0x46, 0x25, 0x6F, 0x46, 0x2A, 0x6D, 0x4C, 0x38, 0x5D, 0x43, 0x39, 0x3B, 0x29, 0x26, 0x37, 0x2D, 
   0x28, 0x39, 0x33, 0x29, 0x39, 0x35, 0x25, 0x37, 0x2F, 0x24, 0x55, 0x4B, 0x42, 0x4C, 0x42, 0x3A, 
   0x44, 0x3A, 0x32, 0x51, 0x47, 0x41, 0x39, 0x2F, 0x29, 0x43, 0x38, 0x32, 0x36, 0x2A, 0x22, 0x39, 
   0x2D, 0x26, 0x44, 0x38, 0x30, 0x46, 0x3A, 0x33, 0x33, 0x27, 0x1F, 0x31, 0x25, 0x1D, 0x5F, 0x4F, 
   0x46, 0x3F, 0x31, 0x29, 0x36, 0x2A, 0x21, 0x4D, 0x3F, 0x37, 0x48, 0x36, 0x2E, 0x65, 0x4E, 0x47, 
   0x5A, 0x45, 0x3C, 0x46, 0x35, 0x2A, 0x6F, 0x4C, 0x3E, 0x6B, 0x4C, 0x3D, 0x64, 0x4A, 0x38, 0x65, 
   0x4C, 0x39, 0x6C, 0x4D, 0x3A, 0x76, 0x4D, 0x3A, 0x7A, 0x4F, 0x3A, 0x71, 0x4D, 0x35, 0x70, 0x4C, 
   0x34, 0x6F, 0x4B, 0x33, 0x70, 0x4C, 0x34, 0x71, 0x4C, 0x34, 0x72, 0x4E, 0x36, 0x73, 0x4B, 0x33, 
   0x74, 0x4B, 0x34, 0x76, 0x4D, 0x36, 0x75, 0x4C, 0x35, 0x75, 0x4C, 0x35, 0x75, 0x4C, 0x35, 0x75, 
   0x4C, 0x34, 0x74, 0x4B, 0x32, 0x74, 0x4B, 0x32, 0x74, 0x4B, 0x32, 0x74, 0x4B, 0x32, 0x73, 0x4A, 
   0x31, 0x72, 0x49, 0x30, 0x72, 0x49, 0x2F, 0x72, 0x49, 0x2E, 0x72, 0x49, 0x2F, 0x72, 0x48, 0x30, 
   0x72, 0x48, 0x31, 0x72, 0x48, 0x32, 0x70, 0x45, 0x30, 0x6C, 0x49, 0x32, 0x6E, 0x4C, 0x35, 0x6B, 
   0x49, 0x31, 0x6B, 0x48, 0x31, 0x65, 0x42, 0x2B, 0x6A, 0x48, 0x30, 0x6E, 0x4B, 0x35, 0x71, 0x4B, 
   0x3A, 0x73, 0x4C, 0x3D, 0x77, 0x4E, 0x3F, 0x80, 0x56, 0x49, 0x83, 0x55, 0x4A, 0x83, 0x56, 0x4B, 
   0x6F, 0x59, 0x4C, 0x69, 0x56, 0x49, 0x7B, 0x6A, 0x60, 0x69, 0x5E, 0x56, 0x6F, 0x64, 0x5F, 0x90, 
   0x88, 0x85, 0x77, 0x70, 0x6D, 0x7A, 0x74, 0x6F, 0x64, 0x60, 0x5C, 0x78, 0x70, 0x6A, 0x78, 0x6B, 
   0x65, 0x74, 0x62, 0x5B, 0x99, 0x81, 0x7B, 0xC4, 0xAB, 0xA1, 0xC9, 0xAD, 0xA3, 0xBA, 0x9D, 0x94, 
   0xAF, 0x90, 0x87, 0xB3, 0x96, 0x8D, 0xB4, 0x9A, 0x90, 0xB6, 0x9D, 0x95, 0xAC, 0x94, 0x8D, 0x96, 
   0x7D, 0x76, 0x93, 0x79, 0x6F, 0x9E, 0x83, 0x78, 0xA2, 0x87, 0x7C, 0x96, 0x7B, 0x6D, 0x9B, 0x7C, 
   0x6D, 0x9F, 0x7E, 0x6F, 0x9A, 0x78, 0x6A, 0x96, 0x73, 0x65, 0x96, 0x73, 0x65, 0x93, 0x6F, 0x61, 
   0x90, 0x69, 0x5B, 0x91, 0x67, 0x58, 0x91, 0x68, 0x59, 0x92, 0x69, 0x5A, 0x8F, 0x66, 0x57, 0x8D, 
   0x65, 0x55, 0x8C, 0x63, 0x53, 0x8F, 0x64, 0x53, 0x8F, 0x63, 0x52, 0x8D, 0x62, 0x51, 0x8C, 0x61, 
   0x50, 0x8C, 0x61, 0x50, 0x8A, 0x5F, 0x4E, 0x89, 0x5E, 0x4D, 0x88, 0x5D, 0x4C, 0x84, 0x59, 0x48, 
   0x83, 0x58, 0x47, 0x81, 0x56, 0x45, 0x80, 0x55, 0x44, 0x7E, 0x53, 0x41, 0x7F, 0x54, 0x41, 0x7F, 
   0x54, 0x40, 0x7E, 0x53, 0x3E, 0x7C, 0x52, 0x3C, 0x7C, 0x52, 0x3B, 0x7B, 0x52, 0x39, 0x7B, 0x50, 
   0x38, 0x7D, 0x51, 0x3A, 0x7E, 0x52, 0x3B, 0x7C, 0x50, 0x39, 0x7C, 0x50, 0x39, 0x7C, 0x50, 0x39, 
   0x7B, 0x4E, 0x37, 0x7B, 0x4E, 0x33, 0x7B, 0x4E, 0x33, 0x7A, 0x4D, 0x32, 0x79, 0x4C, 0x31, 0x78, 
   0x4B, 0x30, 0x78, 0x4B, 0x30, 0x78, 0x4B, 0x30, 0x78, 0x4B, 0x30, 0x77, 0x4A, 0x2F, 0x76, 0x49, 
   0x2E, 0x77, 0x4A, 0x2F, 0x77, 0x4A, 0x2F, 0x76, 0x49, 0x2D, 0x74, 0x47, 0x2B, 0x74, 0x47, 0x2B, 
   0x74, 0x47, 0x2B, 0x74, 0x47, 0x2B, 0x74, 0x47, 0x2B, 0x73, 0x46, 0x2A, 0x74, 0x46, 0x2A, 0x75, 
   0x46, 0x2A, 0x75, 0x46, 0x2A, 0x75, 0x46, 0x2A, 0x73, 0x44, 0x28, 0x73, 0x44, 0x28, 0x73, 0x44, 
   0x28, 0x73, 0x45, 0x26, 0x73, 0x45, 0x26, 0x73, 0x45, 0x26, 0x73, 0x45, 0x26, 0x72, 0x44, 0x25, 
   0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 0x72, 
   0x44, 0x25, 0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 0x72, 0x44, 
   0x25, 0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 
   0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 0x73, 
   0x44, 0x25, 0x73, 0x44, 0x25, 0x73, 0x44, 0x25, 0x73, 0x44, 0x25, 0x73, 0x44, 0x25, 0x73, 0x44, 
   0x25, 0x73, 0x44, 0x25, 0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 
   0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 0x73, 0x45, 0x26, 0x74, 0x45, 0x26, 0x72, 0x43, 0x24, 0x72, 
   0x43, 0x24, 0x73, 0x44, 0x25, 0x73, 0x44, 0x25, 0x73, 0x44, 0x25, 0x73, 0x44, 0x24, 0x73, 0x44, 
   0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 
   0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 
   0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 
   0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x72, 0x43, 0x23, 
   0x71, 0x42, 0x22, 0x71, 0x42, 0x22, 0x71, 0x42, 0x22, 0x71, 0x42, 0x22, 0x71, 0x42, 0x22, 0x71, 
   0x42, 0x22, 0x71, 0x42, 0x22, 0x71, 0x42, 0x22, 0x71, 0x42, 0x22, 0x72, 0x43, 0x23, 0x72, 0x43, 
   0x23, 0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 
   0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 0x71, 0x42, 0x22, 0x73, 
   0x44, 0x24, 0x72, 0x46, 0x26, 0x71, 0x4C, 0x31, 0x66, 0x47, 0x38, 0x4A, 0x34, 0x2C, 0x38, 0x2B, 
   0x25, 0x38, 0x31, 0x29, 0x39, 0x35, 0x2B, 0x3B, 0x32, 0x28, 0x49, 0x3E, 0x36, 0x3D, 0x33, 0x2B, 
   0x39, 0x2F, 0x29, 0x4D, 0x42, 0x3D, 0x44, 0x38, 0x35, 0x46, 0x3D, 0x37, 0x34, 0x2C, 0x25, 0x2E, 
   0x27, 0x20, 0x3B, 0x33, 0x2C, 0x42, 0x3B, 0x34, 0x3D, 0x35, 0x2E, 0x27, 0x1F, 0x18, 0x3B, 0x2E, 
   0x26, 0x55, 0x4B, 0x43, 0x40, 0x38, 0x2F, 0x3D, 0x35, 0x2D, 0x41, 0x34, 0x2C, 0x46, 0x35, 0x2E, 
   0x6A, 0x57, 0x4E, 0x4A, 0x38, 0x2D, 0x74, 0x49, 0x39, 0x74, 0x4D, 0x3B, 0x6D, 0x4C, 0x39, 0x6C, 
   0x4C, 0x37, 0x72, 0x4E, 0x36, 0x78, 0x4C, 0x36, 0x77, 0x49, 0x32, 0x73, 0x4B, 0x32, 0x73, 0x4B, 
   0x32, 0x73, 0x4B, 0x32, 0x75, 0x4D, 0x34, 0x74, 0x4D, 0x34, 0x74, 0x4D, 0x34, 0x74, 0x4B, 0x34, 
   0x74, 0x4B, 0x34, 0x77, 0x4D, 0x37, 0x74, 0x4B, 0x34, 0x73, 0x4A, 0x33, 0x73, 0x4A, 0x33, 0x74, 
   0x4B, 0x33, 0x74, 0x4B, 0x32, 0x74, 0x4B, 0x32, 0x74, 0x4B, 0x32, 0x73, 0x4A, 0x31, 0x73, 0x4A, 
   0x31, 0x71, 0x48, 0x2F, 0x72, 0x49, 0x30, 0x72, 0x49, 0x30, 0x72, 0x49, 0x30, 0x72, 0x49, 0x2F, 
   0x70, 0x47, 0x2F, 0x71, 0x46, 0x30, 0x73, 0x49, 0x32, 0x72, 0x49, 0x31, 0x73, 0x49, 0x32, 0x71, 
   0x47, 0x30, 0x73, 0x49, 0x32, 0x75, 0x4C, 0x35, 0x75, 0x4C, 0x34, 0x71, 0x48, 0x31, 0x72, 0x48, 
   0x32, 0x75, 0x4A, 0x35, 0x78, 0x4D, 0x39, 0x7E, 0x52, 0x40, 0x80, 0x51, 0x41, 0x81, 0x53, 0x43, 
   0x78, 0x5A, 0x4A, 0x6F, 0x55, 0x47, 0x81, 0x6A, 0x5E, 0x75, 0x65, 0x5C, 0x6D, 0x61, 0x5A, 0x75, 
   0x6B, 0x64, 0x8C, 0x83, 0x80, 0x76, 0x6F, 0x6D, 0x68, 0x63, 0x5E, 0x7B, 0x73, 0x6C, 0x77, 0x6A, 
   0x63, 0x9D, 0x8A, 0x80, 0xDD, 0xC5, 0xBB, 0xD2, 0xB8, 0xAE, 0xB9, 0x9E, 0x94, 0xB5, 0x98, 0x8F, 
   0xB7, 0x9A, 0x91, 0xB6, 0x9A, 0x90, 0xB0, 0x96, 0x8C, 0xB7, 0x9C, 0x94, 0xA3, 0x88, 0x81, 0x94, 
   0x78, 0x6F, 0x9C, 0x80, 0x76, 0xA7, 0x87, 0x7D, 0xA5, 0x85, 0x79, 0xA2, 0x82, 0x75, 0xA0, 0x7F, 
   0x71, 0x9D, 0x7A, 0x6C, 0x9C, 0x7A, 0x6C, 0x99, 0x76, 0x68, 0x95, 0x72, 0x64, 0x91, 0x6E, 0x60, 
   0x91, 0x6B, 0x5C, 0x91, 0x68, 0x59, 0x90, 0x67, 0x58, 0x91, 0x68, 0x59, 0x8F, 0x66, 0x57, 0x8D, 
   0x64, 0x55, 0x8B, 0x62, 0x53, 0x8F, 0x64, 0x53, 0x8F, 0x63, 0x52, 0x8D, 0x62, 0x51, 0x8C, 0x61, 
   0x50, 0x8C, 0x61, 0x50, 0x8B, 0x60, 0x4F, 0x89, 0x5E, 0x4D, 0x86, 0x5B, 0x4A, 0x82, 0x57, 0x46, 
   0x82, 0x57, 0x46, 0x81, 0x56, 0x45, 0x7F, 0x54, 0x43, 0x7D, 0x52, 0x41, 0x7E, 0x53, 0x41, 0x7F, 
   0x54, 0x40, 0x7E, 0x52, 0x3D, 0x7C, 0x52, 0x3C, 0x7C, 0x52, 0x3A, 0x7B, 0x52, 0x39, 0x7B, 0x50, 
   0x38, 0x7D, 0x50, 0x3A, 0x7D, 0x51, 0x3A, 0x7C, 0x50, 0x39, 0x7C, 0x50, 0x39, 0x7B, 0x4F, 0x38, 
   0x7A, 0x4E, 0x37, 0x7B, 0x4E, 0x33, 0x7B, 0x4E, 0x33, 0x7A, 0x4D, 0x32, 0x78, 0x4B, 0x30, 0x78, 
   0x4B, 0x30, 0x78, 0x4B, 0x30, 0x78, 0x4B, 0x30, 0x78, 0x4B, 0x30, 0x77, 0x4A, 0x2F, 0x76, 0x49, 
   0x2E, 0x77, 0x4A, 0x2F, 0x77, 0x4A, 0x2F, 0x76, 0x49, 0x2D, 0x74, 0x47, 0x2B, 0x74, 0x47, 0x2B, 
   0x74, 0x47, 0x2B, 0x74, 0x47, 0x2B, 0x74, 0x47, 0x2B, 0x73, 0x46, 0x2A, 0x74, 0x46, 0x2A, 0x75, 
   0x46, 0x2A, 0x75, 0x46, 0x2A, 0x75, 0x46, 0x2A, 0x73, 0x44, 0x28, 0x73, 0x44, 0x28, 0x73, 0x44, 
   0x28, 0x73, 0x45, 0x26, 0x73, 0x45, 0x26, 0x73, 0x45, 0x26, 0x73, 0x45, 0x26, 0x72, 0x44, 0x25, 
   0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 0x72, 
   0x44, 0x25, 0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 0x72, 0x44, 
   0x25, 0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 
   0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 0x73, 
   0x44, 0x25, 0x73, 0x44, 0x25, 0x73, 0x44, 0x25, 0x73, 0x44, 0x25, 0x73, 0x44, 0x25, 0x73, 0x44, 
   0x25, 0x73, 0x44, 0x25, 0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 
   0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 0x73, 0x45, 0x26, 0x74, 0x45, 0x26, 0x72, 0x43, 0x24, 0x72, 
   0x43, 0x24, 0x73, 0x44, 0x25, 0x73, 0x44, 0x25, 0x73, 0x44, 0x25, 0x73, 0x44, 0x24, 0x73, 0x44, 
   0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 
   0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 
   0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 
   0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x72, 0x43, 0x23, 
   0x71, 0x42, 0x22, 0x71, 0x42, 0x22, 0x71, 0x42, 0x22, 0x71, 0x42, 0x22, 0x71, 0x42, 0x22, 0x71, 
   0x42, 0x22, 0x71, 0x42, 0x22, 0x71, 0x42, 0x22, 0x71, 0x42, 0x22, 0x72, 0x43, 0x23, 0x72, 0x43, 
   0x23, 0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 
   0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 0x73, 
   0x44, 0x24, 0x73, 0x46, 0x23, 0x74, 0x4B, 0x2A, 0x6C, 0x49, 0x32, 0x49, 0x2F, 0x22, 0x36, 0x26, 
   0x1F, 0x3A, 0x31, 0x2A, 0x38, 0x32, 0x2B, 0x3E, 0x35, 0x2B, 0x42, 0x38, 0x30, 0x45, 0x3B, 0x33, 
   0x49, 0x40, 0x39, 0x45, 0x3A, 0x36, 0x4C, 0x40, 0x3C, 0x4C, 0x44, 0x3F, 0x39, 0x33, 0x2E, 0x29, 
   0x23, 0x1E, 0x36, 0x30, 0x2B, 0x3F, 0x39, 0x34, 0x3B, 0x34, 0x30, 0x31, 0x2B, 0x26, 0x33, 0x28, 
   0x20, 0x42, 0x39, 0x31, 0x48, 0x45, 0x3B, 0x3F, 0x3B, 0x32, 0x3C, 0x35, 0x2B, 0x30, 0x24, 0x1D, 
   0x41, 0x31, 0x27, 0x5D, 0x4B, 0x40, 0x76, 0x4B, 0x38, 0x74, 0x49, 0x35, 0x72, 0x4A, 0x35, 0x72, 
   0x4C, 0x35, 0x74, 0x4B, 0x32, 0x79, 0x4A, 0x33, 0x78, 0x49, 0x31, 0x73, 0x4A, 0x2F, 0x74, 0x4B, 
   0x31, 0x74, 0x4B, 0x30, 0x73, 0x4A, 0x2F, 0x73, 0x4A, 0x2F, 0x73, 0x4A, 0x2F, 0x73, 0x4B, 0x32, 
   0x73, 0x4B, 0x33, 0x73, 0x4B, 0x33, 0x73, 0x4B, 0x33, 0x73, 0x4A, 0x32, 0x73, 0x4A, 0x32, 0x73, 
   0x4A, 0x31, 0x72, 0x49, 0x30, 0x72, 0x49, 0x30, 0x72, 0x49, 0x30, 0x73, 0x4A, 0x31, 0x73, 0x4A, 
   0x31, 0x73, 0x4A, 0x31, 0x73, 0x49, 0x31, 0x72, 0x47, 0x31, 0x70, 0x48, 0x2F, 0x70, 0x48, 0x2E, 
   0x70, 0x47, 0x2F, 0x71, 0x48, 0x2F, 0x72, 0x49, 0x30, 0x71, 0x47, 0x33, 0x71, 0x46, 0x32, 0x70, 
   0x46, 0x32, 0x71, 0x47, 0x33, 0x73, 0x49, 0x35, 0x72, 0x48, 0x35, 0x73, 0x4A, 0x32, 0x70, 0x4A, 
   0x2F, 0x71, 0x4A, 0x32, 0x74, 0x4D, 0x35, 0x76, 0x4D, 0x37, 0x7A, 0x50, 0x3C, 0x7A, 0x51, 0x3C, 
   0x74, 0x51, 0x41, 0x74, 0x54, 0x44, 0x73, 0x56, 0x48, 0x76, 0x60, 0x55, 0x87, 0x76, 0x6C, 0x7A, 
   0x6C, 0x63, 0x97, 0x8B, 0x86, 0x74, 0x69, 0x68, 0x7A, 0x72, 0x6D, 0x75, 0x6B, 0x64, 0x7A, 0x6B, 
   0x63, 0xBE, 0xA9, 0x9F, 0xED, 0xD3, 0xC8, 0xCE, 0xB3, 0xA9, 0xB1, 0x97, 0x8C, 0xA9, 0x8F, 0x85, 
   0xA6, 0x8C, 0x82, 0x9F, 0x85, 0x7B, 0xA2, 0x87, 0x7D, 0xA1, 0x84, 0x7A, 0x9D, 0x7D, 0x75, 0xA4, 
   0x84, 0x7B, 0xA5, 0x83, 0x79, 0xA6, 0x83, 0x79, 0xA7, 0x84, 0x78, 0xA5, 0x81, 0x74, 0xA2, 0x7F, 
   0x71, 0x9E, 0x7A, 0x6C, 0x9D, 0x78, 0x6A, 0x9A, 0x76, 0x68, 0x97, 0x74, 0x66, 0x95, 0x73, 0x65, 
   0x96, 0x70, 0x62, 0x93, 0x6A, 0x5B, 0x8F, 0x66, 0x57, 0x8E, 0x65, 0x56, 0x8E, 0x65, 0x56, 0x8B, 
   0x62, 0x53, 0x8A, 0x61, 0x52, 0x8D, 0x62, 0x51, 0x8D, 0x62, 0x51, 0x8D, 0x62, 0x51, 0x8C, 0x61, 
   0x50, 0x8B, 0x60, 0x4F, 0x8A, 0x5F, 0x4E, 0x88, 0x5D, 0x4C, 0x85, 0x5A, 0x49, 0x83, 0x58, 0x47, 
   0x82, 0x57, 0x46, 0x82, 0x57, 0x46, 0x81, 0x56, 0x45, 0x80, 0x55, 0x43, 0x7F, 0x54, 0x41, 0x7E, 
   0x53, 0x3F, 0x7D, 0x52, 0x3D, 0x7D, 0x52, 0x3C, 0x7C, 0x52, 0x3A, 0x7A, 0x52, 0x39, 0x7A, 0x50, 
   0x37, 0x7B, 0x4F, 0x38, 0x7B, 0x4F, 0x38, 0x7B, 0x4F, 0x38, 0x7C, 0x50, 0x38, 0x7B, 0x4F, 0x37, 
   0x7A, 0x4E, 0x36, 0x7B, 0x4E, 0x33, 0x7A, 0x4D, 0x32, 0x77, 0x4A, 0x2F, 0x77, 0x4A, 0x2F, 0x77, 
   0x4A, 0x2F, 0x77, 0x4A, 0x2F, 0x78, 0x4B, 0x30, 0x79, 0x4C, 0x31, 0x78, 0x4B, 0x30, 0x77, 0x4A, 
   0x2F, 0x77, 0x4A, 0x2F, 0x76, 0x49, 0x2E, 0x75, 0x48, 0x2D, 0x74, 0x47, 0x2B, 0x74, 0x47, 0x2B, 
   0x74, 0x47, 0x2B, 0x74, 0x47, 0x2B, 0x73, 0x46, 0x2A, 0x73, 0x46, 0x2A, 0x74, 0x46, 0x2A, 0x74, 
   0x45, 0x29, 0x74, 0x45, 0x29, 0x74, 0x45, 0x29, 0x73, 0x44, 0x28, 0x73, 0x44, 0x28, 0x73, 0x44, 
   0x28, 0x71, 0x43, 0x24, 0x71, 0x43, 0x24, 0x71, 0x43, 0x24, 0x71, 0x43, 0x24, 0x71, 0x43, 0x24, 
   0x71, 0x43, 0x24, 0x71, 0x43, 0x24, 0x71, 0x43, 0x24, 0x71, 0x43, 0x24, 0x71, 0x43, 0x24, 0x72, 
   0x44, 0x25, 0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 0x72, 0x44, 
   0x25, 0x73, 0x45, 0x26, 0x73, 0x45, 0x26, 0x73, 0x45, 0x26, 0x73, 0x45, 0x26, 0x72, 0x44, 0x25, 
   0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 0x73, 
   0x44, 0x25, 0x73, 0x44, 0x25, 0x73, 0x44, 0x25, 0x73, 0x44, 0x25, 0x72, 0x43, 0x24, 0x72, 0x43, 
   0x24, 0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 
   0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 0x73, 0x44, 0x25, 0x73, 0x44, 0x25, 0x73, 0x44, 0x25, 0x73, 
   0x44, 0x25, 0x72, 0x43, 0x24, 0x72, 0x43, 0x24, 0x72, 0x43, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 
   0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 
   0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 
   0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 
   0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 
   0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 0x72, 
   0x43, 0x23, 0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 0x73, 0x44, 0x24, 0x73, 0x44, 
   0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 
   0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 
   0x44, 0x24, 0x73, 0x45, 0x21, 0x74, 0x47, 0x24, 0x70, 0x47, 0x2C, 0x51, 0x30, 0x1F, 0x39, 0x21, 
   0x18, 0x3F, 0x30, 0x29, 0x3F, 0x36, 0x2F, 0x39, 0x2F, 0x23, 0x4D, 0x41, 0x38, 0x76, 0x6A, 0x62, 
   0x6B, 0x5F, 0x57, 0x4A, 0x3E, 0x37, 0x42, 0x34, 0x2F, 0x45, 0x3C, 0x36, 0x42, 0x3D, 0x36, 0x2C, 
   0x26, 0x20, 0x34, 0x2F, 0x28, 0x4B, 0x45, 0x3F, 0x3E, 0x38, 0x32, 0x32, 0x2C, 0x26, 0x3B, 0x30, 
   0x2A, 0x30, 0x29, 0x22, 0x34, 0x31, 0x29, 0x32, 0x30, 0x27, 0x3A, 0x36, 0x2E, 0x39, 0x31, 0x2A, 
   0x32, 0x24, 0x1B, 0x4F, 0x3C, 0x32, 0x75, 0x4A, 0x37, 0x75, 0x4A, 0x35, 0x75, 0x4B, 0x35, 0x73, 
   0x4B, 0x34, 0x74, 0x4B, 0x32, 0x76, 0x4A, 0x32, 0x76, 0x4B, 0x32, 0x74, 0x4B, 0x31, 0x74, 0x4B, 
   0x31, 0x74, 0x4B, 0x31, 0x73, 0x4A, 0x30, 0x73, 0x4A, 0x30, 0x73, 0x4A, 0x30, 0x73, 0x4B, 0x31, 
   0x73, 0x4C, 0x31, 0x73, 0x4C, 0x31, 0x73, 0x4C, 0x31, 0x73, 0x4C, 0x31, 0x73, 0x4C, 0x31, 0x73, 
   0x4B, 0x30, 0x72, 0x49, 0x30, 0x72, 0x49, 0x30, 0x72, 0x49, 0x30, 0x73, 0x4A, 0x31, 0x73, 0x4A, 
   0x31, 0x73, 0x4A, 0x31, 0x72, 0x48, 0x31, 0x71, 0x47, 0x30, 0x70, 0x46, 0x2F, 0x70, 0x47, 0x2F, 
   0x71, 0x48, 0x2E, 0x71, 0x48, 0x2E, 0x71, 0x48, 0x2E, 0x6E, 0x46, 0x33, 0x6E, 0x46, 0x33, 0x6E, 
   0x46, 0x33, 0x6F, 0x46, 0x34, 0x6F, 0x47, 0x34, 0x71, 0x48, 0x36, 0x70, 0x4A, 0x32, 0x6E, 0x4C, 
   0x2E, 0x6F, 0x4C, 0x31, 0x70, 0x4D, 0x33, 0x70, 0x4E, 0x35, 0x70, 0x4E, 0x37, 0x71, 0x4E, 0x37, 
   0x77, 0x52, 0x3F, 0x76, 0x52, 0x40, 0x74, 0x52, 0x42, 0x78, 0x5C, 0x4E, 0x7D, 0x65, 0x59, 0x86, 
   0x70, 0x66, 0x81, 0x6E, 0x67, 0x85, 0x73, 0x70, 0x79, 0x6A, 0x65, 0x7C, 0x6E, 0x66, 0x77, 0x66, 
   0x5D, 0xC3, 0xAA, 0xA2, 0xDF, 0xC4, 0xB9, 0xAE, 0x94, 0x8A, 0x99, 0x80, 0x76, 0x96, 0x7F, 0x74, 
   0x94, 0x7E, 0x73, 0x97, 0x7E, 0x74, 0x96, 0x7D, 0x73, 0xA6, 0x87, 0x7E, 0xAA, 0x86, 0x7D, 0xAF, 
   0x8B, 0x82, 0xA9, 0x83, 0x79, 0xA8, 0x82, 0x75, 0xAA, 0x84, 0x76, 0xAA, 0x82, 0x75, 0xA8, 0x81, 
   0x73, 0xA3, 0x7D, 0x6F, 0x9F, 0x79, 0x6B, 0x9B, 0x76, 0x68, 0x98, 0x75, 0x67, 0x96, 0x73, 0x65, 
   0x97, 0x71, 0x62, 0x94, 0x6B, 0x5C, 0x8E, 0x65, 0x56, 0x8C, 0x63, 0x54, 0x8C, 0x63, 0x54, 0x89, 
   0x60, 0x52, 0x87, 0x5E, 0x4F, 0x8B, 0x60, 0x4F, 0x8B, 0x60, 0x4F, 0x8B, 0x60, 0x4F, 0x8A, 0x5F, 
   0x4E, 0x89, 0x5E, 0x4D, 0x89, 0x5E, 0x4D, 0x87, 0x5C, 0x4B, 0x84, 0x59, 0x48, 0x83, 0x58, 0x47, 
   0x81, 0x56, 0x45, 0x81, 0x56, 0x45, 0x81, 0x56, 0x45, 0x80, 0x55, 0x44, 0x7F, 0x54, 0x41, 0x7E, 
   0x53, 0x3F, 0x7D, 0x52, 0x3D, 0x7D, 0x52, 0x3C, 0x7C, 0x52, 0x3A, 0x7A, 0x51, 0x39, 0x7A, 0x50, 
   0x36, 0x7B, 0x50, 0x36, 0x7B, 0x4F, 0x36, 0x7B, 0x50, 0x36, 0x7C, 0x50, 0x36, 0x7A, 0x4F, 0x35, 
   0x7A, 0x4F, 0x35, 0x7B, 0x4E, 0x33, 0x79, 0x4C, 0x31, 0x77, 0x4A, 0x2F, 0x77, 0x4A, 0x2F, 0x77, 
   0x4A, 0x2F, 0x77, 0x4A, 0x2F, 0x78, 0x4B, 0x30, 0x78, 0x4B, 0x30, 0x77, 0x4A, 0x2F, 0x76, 0x49, 
   0x2E, 0x76, 0x49, 0x2E, 0x75, 0x48, 0x2D, 0x74, 0x47, 0x2C, 0x74, 0x47, 0x2B, 0x74, 0x47, 0x2B, 
   0x74, 0x47, 0x2B, 0x74, 0x47, 0x2B, 0x73, 0x46, 0x2A, 0x73, 0x46, 0x2A, 0x74, 0x46, 0x2A, 0x74, 
   0x45, 0x29, 0x74, 0x45, 0x29, 0x74, 0x45, 0x29, 0x73, 0x44, 0x28, 0x73, 0x44, 0x28, 0x73, 0x44, 
   0x28, 0x71, 0x43, 0x24, 0x71, 0x43, 0x24, 0x71, 0x43, 0x24, 0x71, 0x43, 0x24, 0x71, 0x43, 0x24, 
   0x71, 0x43, 0x24, 0x71, 0x43, 0x24, 0x71, 0x43, 0x24, 0x71, 0x43, 0x24, 0x71, 0x43, 0x24, 0x72, 
   0x44, 0x25, 0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 0x72, 0x44, 
   0x25, 0x73, 0x45, 0x26, 0x73, 0x45, 0x26, 0x73, 0x45, 0x26, 0x73, 0x45, 0x26, 0x72, 0x44, 0x25, 
   0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 0x73, 
   0x44, 0x25, 0x73, 0x44, 0x25, 0x73, 0x44, 0x25, 0x73, 0x44, 0x25, 0x72, 0x43, 0x24, 0x72, 0x43, 
   0x24, 0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 
   0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 0x73, 0x44, 0x25, 0x73, 0x44, 0x25, 0x73, 0x44, 0x25, 0x73, 
   0x44, 0x25, 0x72, 0x43, 0x24, 0x72, 0x43, 0x24, 0x72, 0x43, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 
   0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 
   0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 
   0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 
   0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 
   0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 0x72, 
   0x43, 0x23, 0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 0x71, 0x42, 
   0x22, 0x71, 0x42, 0x22, 0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 
   0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 
   0x44, 0x24, 0x75, 0x46, 0x23, 0x76, 0x46, 0x22, 0x75, 0x48, 0x2B, 0x5D, 0x37, 0x22, 0x30, 0x12, 
   0x05, 0x3A, 0x25, 0x1D, 0x45, 0x37, 0x31, 0x43, 0x35, 0x27, 0x37, 0x29, 0x1B, 0x54, 0x45, 0x3A, 
   0x6D, 0x5E, 0x54, 0x51, 0x41, 0x38, 0x47, 0x35, 0x2F, 0x46, 0x3A, 0x32, 0x48, 0x41, 0x39, 0x3F, 
   0x37, 0x2E, 0x3C, 0x34, 0x2C, 0x44, 0x3C, 0x33, 0x3A, 0x33, 0x2A, 0x3B, 0x33, 0x2A, 0x3F, 0x32, 
   0x2C, 0x35, 0x2D, 0x27, 0x31, 0x2D, 0x25, 0x37, 0x36, 0x2E, 0x34, 0x31, 0x29, 0x34, 0x2E, 0x27, 
   0x39, 0x2C, 0x22, 0x34, 0x22, 0x17, 0x74, 0x4A, 0x37, 0x74, 0x4A, 0x36, 0x73, 0x4B, 0x35, 0x73, 
   0x4B, 0x34, 0x72, 0x4B, 0x32, 0x72, 0x4B, 0x32, 0x72, 0x4B, 0x32, 0x72, 0x4B, 0x32, 0x72, 0x4B, 
   0x32, 0x72, 0x4B, 0x32, 0x71, 0x4A, 0x31, 0x71, 0x4A, 0x31, 0x71, 0x4A, 0x31, 0x72, 0x4B, 0x30, 
   0x72, 0x4B, 0x2F, 0x72, 0x4B, 0x2F, 0x72, 0x4B, 0x2F, 0x72, 0x4B, 0x2F, 0x72, 0x4B, 0x2F, 0x72, 
   0x4A, 0x30, 0x72, 0x49, 0x30, 0x72, 0x49, 0x30, 0x72, 0x49, 0x30, 0x72, 0x49, 0x30, 0x72, 0x49, 
   0x30, 0x72, 0x49, 0x30, 0x72, 0x47, 0x31, 0x70, 0x46, 0x30, 0x70, 0x46, 0x2F, 0x70, 0x46, 0x2E, 
   0x70, 0x47, 0x2D, 0x70, 0x47, 0x2C, 0x70, 0x47, 0x2C, 0x6F, 0x45, 0x31, 0x6F, 0x45, 0x31, 0x6F, 
   0x45, 0x31, 0x6F, 0x45, 0x31, 0x70, 0x47, 0x32, 0x70, 0x47, 0x32, 0x70, 0x49, 0x30, 0x6E, 0x4A, 
   0x2E, 0x6F, 0x4B, 0x2F, 0x6E, 0x4A, 0x31, 0x6C, 0x4B, 0x32, 0x6C, 0x4D, 0x34, 0x6D, 0x4C, 0x35, 
   0x76, 0x50, 0x3A, 0x76, 0x50, 0x3C, 0x74, 0x51, 0x3E, 0x74, 0x53, 0x44, 0x7A, 0x5B, 0x4E, 0x7F, 
   0x60, 0x55, 0x8A, 0x6C, 0x64, 0x8F, 0x75, 0x6F, 0x86, 0x70, 0x68, 0x79, 0x66, 0x5E, 0x87, 0x72, 
   0x6A, 0xC6, 0xAC, 0xA6, 0xBD, 0xA1, 0x98, 0xA1, 0x87, 0x7D, 0x95, 0x7E, 0x74, 0x91, 0x7C, 0x71, 
   0x8A, 0x77, 0x6C, 0x8D, 0x76, 0x6B, 0x99, 0x80, 0x76, 0xB3, 0x91, 0x88, 0xAD, 0x86, 0x7E, 0xAA, 
   0x82, 0x79, 0xAB, 0x81, 0x77, 0xA9, 0x80, 0x73, 0xAC, 0x81, 0x74, 0xAD, 0x82, 0x74, 0xAB, 0x81, 
   0x73, 0xA5, 0x7D, 0x6F, 0xA1, 0x79, 0x6C, 0x9C, 0x77, 0x69, 0x98, 0x75, 0x67, 0x95, 0x73, 0x65, 
   0x97, 0x71, 0x62, 0x96, 0x6C, 0x5D, 0x90, 0x67, 0x58, 0x8E, 0x65, 0x56, 0x8D, 0x64, 0x55, 0x8B, 
   0x62, 0x53, 0x87, 0x5E, 0x4F, 0x87, 0x5C, 0x4B, 0x87, 0x5C, 0x4B, 0x87, 0x5C, 0x4B, 0x88, 0x5D, 
   0x4C, 0x88, 0x5D, 0x4C, 0x87, 0x5C, 0x4B, 0x86, 0x5B, 0x4A, 0x84, 0x59, 0x48, 0x82, 0x57, 0x46, 
   0x80, 0x55, 0x44, 0x80, 0x55, 0x44, 0x80, 0x55, 0x44, 0x80, 0x55, 0x44, 0x7F, 0x54, 0x41, 0x7E, 
   0x53, 0x3F, 0x7D, 0x52, 0x3D, 0x7D, 0x52, 0x3C, 0x7C, 0x52, 0x3A, 0x7A, 0x52, 0x39, 0x7A, 0x50, 
   0x36, 0x7A, 0x4F, 0x34, 0x7A, 0x4F, 0x34, 0x7A, 0x4F, 0x34, 0x7B, 0x50, 0x35, 0x7A, 0x4F, 0x34, 
   0x7A, 0x4E, 0x33, 0x7A, 0x4D, 0x32, 0x79, 0x4C, 0x31, 0x77, 0x4A, 0x2F, 0x76, 0x49, 0x2E, 0x76, 
   0x49, 0x2E, 0x76, 0x49, 0x2E, 0x77, 0x4A, 0x2F, 0x77, 0x4A, 0x2F, 0x76, 0x49, 0x2E, 0x75, 0x48, 
   0x2D, 0x75, 0x48, 0x2D, 0x74, 0x47, 0x2C, 0x74, 0x47, 0x2C, 0x73, 0x46, 0x2A, 0x73, 0x46, 0x2A, 
   0x73, 0x46, 0x2A, 0x73, 0x46, 0x2A, 0x72, 0x45, 0x29, 0x72, 0x45, 0x29, 0x73, 0x45, 0x29, 0x73, 
   0x44, 0x28, 0x73, 0x44, 0x28, 0x73, 0x44, 0x28, 0x72, 0x43, 0x27, 0x72, 0x43, 0x27, 0x72, 0x43, 
   0x27, 0x71, 0x43, 0x24, 0x71, 0x43, 0x24, 0x71, 0x43, 0x24, 0x71, 0x43, 0x24, 0x71, 0x43, 0x24, 
   0x71, 0x43, 0x24, 0x71, 0x43, 0x24, 0x71, 0x43, 0x24, 0x71, 0x43, 0x24, 0x71, 0x43, 0x24, 0x72, 
   0x44, 0x25, 0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 0x72, 0x44, 
   0x25, 0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 
   0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 0x73, 
   0x44, 0x25, 0x73, 0x44, 0x25, 0x73, 0x44, 0x25, 0x73, 0x44, 0x25, 0x72, 0x43, 0x24, 0x72, 0x43, 
   0x24, 0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 
   0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 0x73, 0x44, 0x25, 0x73, 0x44, 0x25, 0x73, 0x44, 0x25, 0x73, 
   0x44, 0x25, 0x72, 0x43, 0x24, 0x72, 0x43, 0x24, 0x72, 0x43, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 
   0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 
   0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 
   0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 
   0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 
   0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 0x72, 
   0x43, 0x23, 0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 0x72, 0x43, 
   0x23, 0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 
   0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 
   0x44, 0x24, 0x75, 0x46, 0x23, 0x75, 0x46, 0x21, 0x76, 0x47, 0x28, 0x6B, 0x3F, 0x28, 0x45, 0x22, 
   0x11, 0x44, 0x29, 0x1E, 0x3F, 0x2D, 0x25, 0x44, 0x32, 0x21, 0x3C, 0x2A, 0x18, 0x3D, 0x2A, 0x1A, 
   0x4C, 0x38, 0x2B, 0x52, 0x3E, 0x31, 0x52, 0x3D, 0x32, 0x49, 0x38, 0x2D, 0x4C, 0x40, 0x34, 0x46, 
   0x39, 0x2E, 0x45, 0x39, 0x2D, 0x3D, 0x30, 0x25, 0x40, 0x33, 0x28, 0x42, 0x35, 0x2A, 0x47, 0x37, 
   0x32, 0x40, 0x36, 0x30, 0x34, 0x30, 0x29, 0x3C, 0x3A, 0x34, 0x41, 0x3D, 0x36, 0x37, 0x31, 0x2B, 
   0x31, 0x24, 0x1B, 0x3C, 0x2A, 0x1F, 0x71, 0x4A, 0x37, 0x71, 0x4A, 0x37, 0x71, 0x4B, 0x36, 0x71, 
   0x4B, 0x34, 0x6F, 0x4B, 0x33, 0x6E, 0x4C, 0x32, 0x6D, 0x4C, 0x32, 0x70, 0x4B, 0x33, 0x70, 0x4B, 
   0x33, 0x70, 0x4B, 0x33, 0x6F, 0x4A, 0x32, 0x6F, 0x4A, 0x32, 0x6F, 0x4A, 0x32, 0x71, 0x4A, 0x2F, 
   0x71, 0x4A, 0x2E, 0x71, 0x4A, 0x2E, 0x71, 0x4A, 0x2E, 0x71, 0x4A, 0x2E, 0x71, 0x4A, 0x2E, 0x72, 
   0x4A, 0x2F, 0x72, 0x49, 0x30, 0x72, 0x49, 0x30, 0x72, 0x49, 0x30, 0x71, 0x48, 0x2F, 0x71, 0x48, 
   0x2F, 0x71, 0x48, 0x2F, 0x71, 0x46, 0x30, 0x70, 0x45, 0x30, 0x6F, 0x45, 0x2E, 0x6F, 0x45, 0x2D, 
   0x6F, 0x46, 0x2C, 0x6F, 0x47, 0x2A, 0x6F, 0x47, 0x2A, 0x73, 0x46, 0x2C, 0x73, 0x46, 0x2C, 0x73, 
   0x46, 0x2C, 0x72, 0x45, 0x2B, 0x73, 0x46, 0x2B, 0x74, 0x47, 0x2D, 0x73, 0x47, 0x2C, 0x72, 0x47, 
   0x2D, 0x72, 0x48, 0x2F, 0x71, 0x48, 0x31, 0x6F, 0x49, 0x31, 0x6D, 0x4A, 0x33, 0x6E, 0x4B, 0x34, 
   0x72, 0x4C, 0x35, 0x74, 0x4E, 0x38, 0x77, 0x51, 0x3D, 0x78, 0x53, 0x42, 0x77, 0x52, 0x44, 0x81, 
   0x5B, 0x4F, 0x87, 0x60, 0x56, 0x8A, 0x69, 0x5F, 0x89, 0x6C, 0x62, 0x87, 0x6F, 0x67, 0xAE, 0x96, 
   0x90, 0xC3, 0xA8, 0xA3, 0xA6, 0x89, 0x85, 0xA6, 0x89, 0x80, 0x92, 0x7C, 0x71, 0x85, 0x73, 0x68, 
   0x8D, 0x7C, 0x71, 0x95, 0x81, 0x76, 0x9C, 0x82, 0x78, 0xB2, 0x8F, 0x86, 0xAF, 0x85, 0x7C, 0xAE, 
   0x84, 0x7B, 0xAB, 0x7E, 0x74, 0xAA, 0x7D, 0x71, 0xA9, 0x7C, 0x6F, 0xAB, 0x7C, 0x6F, 0xA9, 0x7D, 
   0x70, 0xA6, 0x7B, 0x6E, 0xA3, 0x7A, 0x6C, 0x9D, 0x78, 0x6A, 0x99, 0x75, 0x67, 0x94, 0x72, 0x64, 
   0x96, 0x72, 0x63, 0x97, 0x6D, 0x5E, 0x91, 0x68, 0x59, 0x8E, 0x65, 0x56, 0x8F, 0x66, 0x57, 0x8E, 
   0x65, 0x56, 0x88, 0x5F, 0x50, 0x85, 0x5A, 0x49, 0x85, 0x5A, 0x49, 0x85, 0x5A, 0x49, 0x86, 0x5B, 
   0x4A, 0x86, 0x5B, 0x4A, 0x85, 0x5A, 0x49, 0x84, 0x59, 0x48, 0x82, 0x57, 0x46, 0x80, 0x55, 0x44, 
   0x7F, 0x54, 0x43, 0x7F, 0x54, 0x43, 0x80, 0x55, 0x44, 0x80, 0x55, 0x44, 0x7F, 0x54, 0x41, 0x7E, 
   0x53, 0x3F, 0x7D, 0x52, 0x3D, 0x7D, 0x52, 0x3C, 0x7C, 0x52, 0x3A, 0x7B, 0x52, 0x39, 0x79, 0x4F, 
   0x35, 0x79, 0x4E, 0x33, 0x79, 0x4E, 0x33, 0x79, 0x4E, 0x33, 0x7A, 0x4F, 0x34, 0x7A, 0x4F, 0x34, 
   0x78, 0x4D, 0x32, 0x79, 0x4C, 0x31, 0x78, 0x4B, 0x30, 0x76, 0x49, 0x2E, 0x75, 0x48, 0x2D, 0x75, 
   0x48, 0x2D, 0x75, 0x48, 0x2D, 0x76, 0x49, 0x2E, 0x76, 0x49, 0x2E, 0x74, 0x47, 0x2C, 0x74, 0x47, 
   0x2C, 0x74, 0x47, 0x2C, 0x73, 0x46, 0x2B, 0x72, 0x45, 0x2A, 0x72, 0x45, 0x29, 0x72, 0x45, 0x29, 
   0x72, 0x45, 0x29, 0x72, 0x45, 0x29, 0x71, 0x44, 0x28, 0x71, 0x44, 0x28, 0x72, 0x44, 0x28, 0x72, 
   0x43, 0x27, 0x72, 0x43, 0x27, 0x72, 0x43, 0x27, 0x71, 0x42, 0x26, 0x71, 0x42, 0x26, 0x71, 0x42, 
   0x26, 0x71, 0x43, 0x24, 0x71, 0x43, 0x24, 0x71, 0x43, 0x24, 0x71, 0x43, 0x24, 0x71, 0x43, 0x24, 
   0x71, 0x43, 0x24, 0x71, 0x43, 0x24, 0x71, 0x43, 0x24, 0x71, 0x43, 0x24, 0x71, 0x43, 0x24, 0x72, 
   0x44, 0x25, 0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 0x72, 0x44, 
   0x25, 0x72, 0x44, 0x25, 0x71, 0x43, 0x24, 0x71, 0x43, 0x24, 0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 
   0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 0x73, 
   0x44, 0x25, 0x73, 0x44, 0x25, 0x73, 0x44, 0x25, 0x73, 0x44, 0x25, 0x72, 0x43, 0x24, 0x72, 0x43, 
   0x24, 0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 
   0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 0x73, 0x44, 0x25, 0x73, 0x44, 0x25, 0x73, 0x44, 0x25, 0x73, 
   0x44, 0x25, 0x72, 0x43, 0x24, 0x72, 0x43, 0x24, 0x72, 0x43, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 
   0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 
   0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 
   0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 
   0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 
   0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 0x72, 
   0x43, 0x23, 0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 0x73, 0x44, 0x24, 0x73, 0x44, 
   0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 
   0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 
   0x44, 0x24, 0x73, 0x46, 0x23, 0x73, 0x46, 0x22, 0x74, 0x44, 0x24, 0x75, 0x46, 0x2B, 0x6C, 0x46, 
   0x32, 0x63, 0x44, 0x35, 0x50, 0x3A, 0x2E, 0x52, 0x3D, 0x28, 0x53, 0x3D, 0x29, 0x56, 0x3F, 0x2D, 
   0x51, 0x39, 0x27, 0x5A, 0x43, 0x33, 0x5A, 0x42, 0x32, 0x4D, 0x38, 0x2A, 0x52, 0x40, 0x33, 0x4B, 
   0x39, 0x2C, 0x45, 0x33, 0x25, 0x4C, 0x3A, 0x2C, 0x55, 0x43, 0x34, 0x4F, 0x3D, 0x30, 0x42, 0x30, 
   0x2D, 0x34, 0x27, 0x25, 0x34, 0x2D, 0x29, 0x38, 0x34, 0x2F, 0x42, 0x3E, 0x39, 0x36, 0x30, 0x2D, 
   0x2F, 0x21, 0x1A, 0x37, 0x25, 0x19, 0x6E, 0x4A, 0x38, 0x6E, 0x4A, 0x38, 0x70, 0x4B, 0x37, 0x70, 
   0x4B, 0x36, 0x6D, 0x4B, 0x34, 0x6B, 0x4C, 0x33, 0x6C, 0x4B, 0x33, 0x6F, 0x4A, 0x34, 0x6F, 0x4A, 
   0x34, 0x6F, 0x4A, 0x34, 0x6E, 0x49, 0x33, 0x6E, 0x49, 0x33, 0x6E, 0x49, 0x33, 0x70, 0x4A, 0x30, 
   0x71, 0x4A, 0x2E, 0x71, 0x4A, 0x2E, 0x71, 0x4A, 0x2E, 0x71, 0x4A, 0x2E, 0x71, 0x4A, 0x2E, 0x72, 
   0x4A, 0x2F, 0x72, 0x49, 0x30, 0x72, 0x49, 0x30, 0x72, 0x49, 0x30, 0x71, 0x48, 0x2F, 0x71, 0x48, 
   0x2F, 0x71, 0x48, 0x2F, 0x71, 0x46, 0x31, 0x70, 0x44, 0x30, 0x6E, 0x44, 0x2E, 0x6E, 0x45, 0x2D, 
   0x6F, 0x46, 0x2C, 0x6F, 0x47, 0x2A, 0x6F, 0x47, 0x2A, 0x76, 0x47, 0x27, 0x76, 0x47, 0x27, 0x76, 
   0x47, 0x27, 0x75, 0x46, 0x26, 0x76, 0x47, 0x27, 0x77, 0x48, 0x28, 0x76, 0x46, 0x2A, 0x76, 0x45, 
   0x2D, 0x76, 0x46, 0x2F, 0x75, 0x47, 0x31, 0x73, 0x48, 0x32, 0x73, 0x49, 0x33, 0x71, 0x4A, 0x34, 
   0x71, 0x4B, 0x33, 0x71, 0x4B, 0x34, 0x73, 0x4C, 0x37, 0x78, 0x50, 0x3E, 0x77, 0x4D, 0x3E, 0x7D, 
   0x52, 0x46, 0x81, 0x56, 0x4B, 0x82, 0x5C, 0x50, 0x85, 0x63, 0x59, 0x8F, 0x74, 0x6C, 0xAE, 0x94, 
   0x8F, 0xA1, 0x86, 0x82, 0x9F, 0x81, 0x7F, 0xA9, 0x8C, 0x84, 0x92, 0x7B, 0x71, 0x82, 0x6F, 0x65, 
   0x88, 0x76, 0x6B, 0x95, 0x80, 0x75, 0xA5, 0x8B, 0x81, 0xA2, 0x7E, 0x75, 0xAE, 0x82, 0x79, 0xAD, 
   0x82, 0x77, 0xAC, 0x7F, 0x73, 0xA9, 0x7B, 0x6F, 0xA6, 0x78, 0x6B, 0xA6, 0x78, 0x69, 0xA4, 0x79, 
   0x6B, 0xA4, 0x79, 0x6C, 0xA3, 0x7B, 0x6D, 0x9F, 0x79, 0x6B, 0x99, 0x76, 0x68, 0x94, 0x72, 0x64, 
   0x94, 0x6F, 0x60, 0x94, 0x6A, 0x5B, 0x8E, 0x65, 0x56, 0x8B, 0x62, 0x53, 0x8D, 0x64, 0x55, 0x8C, 
   0x63, 0x54, 0x86, 0x5D, 0x4E, 0x85, 0x5A, 0x49, 0x85, 0x5A, 0x49, 0x85, 0x5A, 0x49, 0x85, 0x5A, 
   0x49, 0x84, 0x59, 0x48, 0x84, 0x59, 0x48, 0x83, 0x58, 0x47, 0x81, 0x56, 0x45, 0x7F, 0x54, 0x43, 
   0x7E, 0x53, 0x42, 0x7E, 0x53, 0x42, 0x7F, 0x54, 0x43, 0x80, 0x55, 0x44, 0x7F, 0x54, 0x41, 0x7E, 
   0x53, 0x3F, 0x7D, 0x52, 0x3D, 0x7D, 0x52, 0x3C, 0x7C, 0x52, 0x3A, 0x7B, 0x52, 0x39, 0x79, 0x4F, 
   0x35, 0x79, 0x4E, 0x33, 0x79, 0x4E, 0x33, 0x79, 0x4E, 0x33, 0x7A, 0x4F, 0x34, 0x79, 0x4E, 0x33, 
   0x78, 0x4D, 0x32, 0x79, 0x4C, 0x31, 0x78, 0x4B, 0x30, 0x75, 0x48, 0x2D, 0x75, 0x48, 0x2D, 0x75, 
   0x48, 0x2D, 0x75, 0x48, 0x2D, 0x75, 0x48, 0x2D, 0x75, 0x48, 0x2D, 0x73, 0x46, 0x2B, 0x73, 0x46, 
   0x2B, 0x73, 0x46, 0x2B, 0x72, 0x45, 0x2A, 0x71, 0x44, 0x29, 0x72, 0x45, 0x29, 0x72, 0x45, 0x29, 
   0x72, 0x45, 0x29, 0x72, 0x45, 0x29, 0x71, 0x44, 0x28, 0x71, 0x44, 0x28, 0x72, 0x44, 0x28, 0x72, 
   0x43, 0x27, 0x72, 0x43, 0x27, 0x72, 0x43, 0x27, 0x71, 0x42, 0x26, 0x71, 0x42, 0x26, 0x71, 0x42, 
   0x26, 0x71, 0x43, 0x24, 0x71, 0x43, 0x24, 0x71, 0x43, 0x24, 0x71, 0x43, 0x24, 0x71, 0x43, 0x24, 
   0x71, 0x43, 0x24, 0x71, 0x43, 0x24, 0x71, 0x43, 0x24, 0x71, 0x43, 0x24, 0x71, 0x43, 0x24, 0x72, 
   0x44, 0x25, 0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 0x72, 0x44, 
   0x25, 0x72, 0x44, 0x25, 0x71, 0x43, 0x24, 0x71, 0x43, 0x24, 0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 
   0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 0x73, 
   0x44, 0x25, 0x73, 0x44, 0x25, 0x73, 0x44, 0x25, 0x73, 0x44, 0x25, 0x72, 0x43, 0x24, 0x72, 0x43, 
   0x24, 0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 
   0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 0x73, 0x44, 0x25, 0x73, 0x44, 0x25, 0x73, 0x44, 0x25, 0x73, 
   0x44, 0x25, 0x72, 0x43, 0x24, 0x72, 0x43, 0x24, 0x72, 0x43, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 
   0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 
   0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 
   0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 
   0x24, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 
   0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 0x72, 
   0x43, 0x23, 0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 0x71, 0x42, 
   0x22, 0x71, 0x42, 0x22, 0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 
   0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 0x73, 0x44, 0x24, 0x73, 0x44, 0x24, 0x73, 
   0x44, 0x24, 0x72, 0x44, 0x23, 0x73, 0x45, 0x23, 0x75, 0x44, 0x24, 0x72, 0x44, 0x27, 0x6D, 0x44, 
   0x2D, 0x6A, 0x48, 0x36, 0x5F, 0x44, 0x35, 0x5F, 0x46, 0x2F, 0x67, 0x4D, 0x35, 0x6C, 0x51, 0x3C, 
   0x67, 0x4C, 0x39, 0x6E, 0x53, 0x41, 0x6E, 0x52, 0x40, 0x67, 0x4E, 0x3E, 0x69, 0x53, 0x43, 0x61, 
   0x4B, 0x3B, 0x61, 0x4B, 0x3B, 0x6F, 0x58, 0x49, 0x74, 0x5D, 0x4E, 0x73, 0x5D, 0x4E, 0x52, 0x3E, 
   0x3A, 0x37, 0x28, 0x25, 0x31, 0x28, 0x24, 0x35, 0x30, 0x2A, 0x34, 0x2F, 0x2A, 0x32, 0x2C, 0x28, 
   0x35, 0x26, 0x20, 0x32, 0x20, 0x15, 0x72, 0x4A, 0x31, 0x72, 0x4A, 0x31, 0x72, 0x4A, 0x31, 0x72, 
   0x4A, 0x31, 0x71, 0x49, 0x30, 0x71, 0x49, 0x30, 0x72, 0x4A, 0x31, 0x72, 0x4A, 0x31, 0x72, 0x4A, 
   0x31, 0x72, 0x4A, 0x31, 0x71, 0x49, 0x30, 0x71, 0x49, 0x30, 0x71, 0x49, 0x30, 0x71, 0x49, 0x30, 
   0x71, 0x49, 0x30, 0x71, 0x49, 0x30, 0x71, 0x49, 0x30, 0x71, 0x49, 0x30, 0x71, 0x49, 0x30, 0x71, 
   0x48, 0x2F, 0x70, 0x47, 0x2E, 0x70, 0x47, 0x2E, 0x70, 0x47, 0x2E, 0x71, 0x48, 0x2F, 0x70, 0x47, 
   0x2E, 0x6F, 0x46, 0x2D, 0x6F, 0x46, 0x2D, 0x6F, 0x46, 0x2D, 0x6F, 0x46, 0x2D, 0x6F, 0x46, 0x2D, 
   0x6F, 0x46, 0x2D, 0x6F, 0x46, 0x2D, 0x6F, 0x46, 0x2D, 0x6F, 0x46, 0x2B, 0x6F, 0x46, 0x2B, 0x6F, 
   0x46, 0x2B, 0x6F, 0x46, 0x2B, 0x6F, 0x46, 0x2B, 0x6F, 0x46, 0x2B, 0x6F, 0x46, 0x2C, 0x6F, 0x46, 
   0x2E, 0x71, 0x48, 0x2F, 0x72, 0x49, 0x30, 0x70, 0x47, 0x2E, 0x6F, 0x46, 0x2D, 0x71, 0x48, 0x30, 
   0x70, 0x48, 0x34, 0x71, 0x48, 0x36, 0x72, 0x4A, 0x37, 0x76, 0x4E, 0x3B, 0x7A, 0x52, 0x3F, 0x77, 
   0x4F, 0x3B, 0x79, 0x53, 0x43, 0x78, 0x54, 0x48, 0x80, 0x5E, 0x52, 0x89, 0x67, 0x5D, 0x91, 0x71, 
   0x68, 0x96, 0x78, 0x6F, 0x93, 0x74, 0x6B, 0x95, 0x76, 0x6D, 0x9B, 0x7C, 0x73, 0x8F, 0x71, 0x68, 
   0x8B, 0x6D, 0x64, 0xAF, 0x91, 0x87, 0xA1, 0x83, 0x7B, 0xA3, 0x81, 0x75, 0xAA, 0x85, 0x76, 0xA7, 
   0x82, 0x74, 0xA5, 0x7F, 0x71, 0xA1, 0x7C, 0x6E, 0x9F, 0x79, 0x6B, 0x9C, 0x77, 0x69, 0x9E, 0x78, 
   0x6C, 0x9C, 0x76, 0x6A, 0x9B, 0x75, 0x69, 0x9E, 0x78, 0x6C, 0x9A, 0x74, 0x68, 0x94, 0x6E, 0x62, 
   0x92, 0x6A, 0x5D, 0x92, 0x69, 0x5A, 0x8E, 0x65, 0x56, 0x8B, 0x62, 0x53, 0x8B, 0x62, 0x53, 0x89, 
   0x60, 0x51, 0x84, 0x5B, 0x4C, 0x84, 0x59, 0x48, 0x84, 0x59, 0x48, 0x84, 0x59, 0x48, 0x84, 0x59, 
   0x48, 0x82, 0x57, 0x46, 0x80, 0x55, 0x44, 0x7F, 0x54, 0x43, 0x7F, 0x53, 0x42, 0x7F, 0x53, 0x42, 
   0x7E, 0x52, 0x41, 0x7C, 0x50, 0x3F, 0x7D, 0x51, 0x40, 0x7E, 0x52, 0x41, 0x7D, 0x54, 0x3C, 0x7F, 
   0x56, 0x3D, 0x7F, 0x55, 0x3D, 0x7D, 0x54, 0x3B, 0x7B, 0x52, 0x39, 0x7A, 0x52, 0x39, 0x7A, 0x50, 
   0x36, 0x7A, 0x4E, 0x33, 0x78, 0x4D, 0x32, 0x78, 0x4D, 0x32, 0x78, 0x4D, 0x32, 0x78, 0x4D, 0x32, 
   0x78, 0x4D, 0x32, 0x79, 0x4C, 0x31, 0x78, 0x4B, 0x30, 0x75, 0x48, 0x2D, 0x75, 0x48, 0x2D, 0x74, 
   0x47, 0x2C, 0x73, 0x46, 0x2C, 0x74, 0x47, 0x2B, 0x73, 0x46, 0x2A, 0x73, 0x46, 0x2A, 0x73, 0x46, 
   0x2A, 0x72, 0x45, 0x29, 0x72, 0x45, 0x29, 0x72, 0x45, 0x29, 0x72, 0x45, 0x29, 0x73, 0x46, 0x2A, 
   0x72, 0x45, 0x29, 0x71, 0x44, 0x28, 0x70, 0x43, 0x27, 0x6F, 0x42, 0x26, 0x70, 0x43, 0x27, 0x70, 
   0x43, 0x27, 0x70, 0x43, 0x27, 0x70, 0x43, 0x27, 0x70, 0x43, 0x27, 0x70, 0x43, 0x27, 0x70, 0x43, 
   0x27, 0x71, 0x43, 0x24, 0x71, 0x43, 0x24, 0x71, 0x43, 0x24, 0x71, 0x43, 0x24, 0x71, 0x43, 0x24, 
   0x71, 0x43, 0x24, 0x71, 0x43, 0x24, 0x71, 0x43, 0x24, 0x71, 0x43, 0x24, 0x71, 0x43, 0x24, 0x71, 
   0x43, 0x24, 0x71, 0x43, 0x24, 0x71, 0x43, 0x24, 0x71, 0x43, 0x24, 0x70, 0x42, 0x23, 0x70, 0x42, 
   0x23, 0x71, 0x43, 0x24, 0x71, 0x43, 0x24, 0x71, 0x43, 0x24, 0x71, 0x44, 0x24, 0x71, 0x44, 0x23, 
   0x71, 0x44, 0x23, 0x71, 0x44, 0x23, 0x71, 0x44, 0x23, 0x71, 0x44, 0x23, 0x71, 0x44, 0x23, 0x71, 
   0x44, 0x23, 0x71, 0x44, 0x23, 0x71, 0x44, 0x23, 0x71, 0x44, 0x23, 0x71, 0x44, 0x23, 0x71, 0x44, 
   0x23, 0x71, 0x44, 0x23, 0x71, 0x44, 0x23, 0x71, 0x44, 0x23, 0x71, 0x44, 0x23, 0x70, 0x43, 0x22, 
   0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 0x71, 0x43, 0x23, 0x71, 0x43, 0x24, 0x71, 0x43, 0x24, 0x71, 
   0x43, 0x24, 0x71, 0x43, 0x24, 0x71, 0x43, 0x24, 0x71, 0x43, 0x24, 0x71, 0x44, 0x23, 0x71, 0x44, 
   0x23, 0x71, 0x44, 0x23, 0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 
   0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 0x71, 0x44, 0x23, 0x71, 0x44, 0x23, 0x71, 0x44, 0x23, 0x71, 
   0x44, 0x23, 0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 0x70, 0x43, 
   0x22, 0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 0x71, 0x44, 0x23, 
   0x71, 0x44, 0x23, 0x71, 0x44, 0x23, 0x71, 0x44, 0x23, 0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 0x70, 
   0x43, 0x22, 0x71, 0x44, 0x23, 0x71, 0x44, 0x23, 0x71, 0x44, 0x23, 0x71, 0x43, 0x23, 0x71, 0x42, 
   0x22, 0x71, 0x42, 0x22, 0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 
   0x71, 0x42, 0x22, 0x71, 0x42, 0x22, 0x71, 0x42, 0x22, 0x71, 0x42, 0x22, 0x72, 0x43, 0x23, 0x73, 
   0x44, 0x24, 0x73, 0x45, 0x24, 0x72, 0x45, 0x24, 0x72, 0x45, 0x24, 0x73, 0x45, 0x25, 0x72, 0x45, 
   0x25, 0x73, 0x47, 0x26, 0x75, 0x49, 0x29, 0x79, 0x4B, 0x30, 0x7A, 0x4B, 0x30, 0x7A, 0x4B, 0x31, 
   0x7A, 0x4B, 0x32, 0x7B, 0x4C, 0x34, 0x7F, 0x4E, 0x39, 0x7D, 0x52, 0x3B, 0x78, 0x53, 0x3B, 0x7B, 
   0x56, 0x3E, 0x81, 0x5B, 0x45, 0x81, 0x5B, 0x47, 0x82, 0x5B, 0x48, 0x87, 0x61, 0x4E, 0x75, 0x58, 
   0x4E, 0x36, 0x22, 0x1A, 0x31, 0x25, 0x1C, 0x34, 0x2D, 0x26, 0x38, 0x32, 0x2D, 0x32, 0x29, 0x27, 
   0x2E, 0x1E, 0x1D, 0x34, 0x1F, 0x1C, 0x72, 0x4A, 0x31, 0x72, 0x4A, 0x31, 0x72, 0x4A, 0x31, 0x72, 
   0x4A, 0x31, 0x71, 0x49, 0x30, 0x71, 0x49, 0x30, 0x72, 0x4A, 0x31, 0x72, 0x4A, 0x31, 0x72, 0x4A, 
   0x31, 0x72, 0x4A, 0x31, 0x71, 0x49, 0x30, 0x71, 0x49, 0x30, 0x71, 0x49, 0x30, 0x71, 0x49, 0x30, 
   0x71, 0x49, 0x30, 0x71, 0x49, 0x30, 0x71, 0x49, 0x30, 0x71, 0x49, 0x30, 0x71, 0x49, 0x30, 0x71, 
   0x48, 0x2F, 0x70, 0x47, 0x2E, 0x70, 0x47, 0x2E, 0x70, 0x47, 0x2E, 0x71, 0x48, 0x2F, 0x6F, 0x46, 
   0x2D, 0x6F, 0x46, 0x2D, 0x6F, 0x46, 0x2D, 0x6F, 0x46, 0x2D, 0x6F, 0x46, 0x2D, 0x6F, 0x46, 0x2D, 
   0x6F, 0x46, 0x2D, 0x6F, 0x46, 0x2D, 0x6F, 0x46, 0x2D, 0x6F, 0x46, 0x2B, 0x6F, 0x46, 0x2B, 0x6F, 
   0x46, 0x2B, 0x6F, 0x46, 0x2B, 0x6F, 0x46, 0x2B, 0x6F, 0x46, 0x2B, 0x6F, 0x46, 0x2C, 0x6F, 0x46, 
   0x2D, 0x70, 0x47, 0x2E, 0x71, 0x48, 0x2F, 0x70, 0x47, 0x2E, 0x70, 0x46, 0x2D, 0x70, 0x47, 0x2F, 
   0x6F, 0x47, 0x34, 0x70, 0x48, 0x35, 0x71, 0x49, 0x36, 0x73, 0x4B, 0x38, 0x77, 0x4F, 0x3C, 0x78, 
   0x4F, 0x3C, 0x77, 0x52, 0x42, 0x78, 0x55, 0x48, 0x7D, 0x5A, 0x4D, 0x82, 0x60, 0x56, 0x8A, 0x6A, 
   0x61, 0x92, 0x73, 0x6A, 0x8A, 0x6B, 0x62, 0x8F, 0x6F, 0x65, 0x93, 0x72, 0x69, 0x92, 0x71, 0x68, 
   0xBF, 0x9E, 0x94, 0xB9, 0x98, 0x8E, 0x9A, 0x7A, 0x70, 0xA2, 0x7F, 0x73, 0xAA, 0x85, 0x77, 0xA5, 
   0x80, 0x72, 0xA1, 0x7C, 0x6E, 0x9F, 0x7A, 0x6C, 0x9D, 0x78, 0x6A, 0x9A, 0x75, 0x67, 0x9B, 0x75, 
   0x69, 0x9B, 0x75, 0x69, 0x99, 0x73, 0x67, 0x98, 0x72, 0x66, 0x96, 0x70, 0x64, 0x91, 0x6B, 0x60, 
   0x8F, 0x68, 0x5A, 0x91, 0x68, 0x58, 0x8D, 0x64, 0x55, 0x89, 0x60, 0x51, 0x88, 0x5F, 0x50, 0x86, 
   0x5D, 0x4E, 0x83, 0x59, 0x4A, 0x84, 0x59, 0x48, 0x84, 0x59, 0x48, 0x83, 0x58, 0x47, 0x82, 0x57, 
   0x46, 0x81, 0x56, 0x45, 0x7F, 0x54, 0x43, 0x7E, 0x53, 0x42, 0x7E, 0x52, 0x41, 0x7E, 0x52, 0x41, 
   0x7E, 0x52, 0x41, 0x7C, 0x50, 0x3F, 0x7D, 0x51, 0x40, 0x7E, 0x52, 0x41, 0x7D, 0x54, 0x3B, 0x7E, 
   0x55, 0x3C, 0x7E, 0x55, 0x3C, 0x7C, 0x53, 0x3A, 0x7B, 0x52, 0x39, 0x7A, 0x51, 0x38, 0x7B, 0x51, 
   0x37, 0x7A, 0x4E, 0x33, 0x78, 0x4D, 0x32, 0x78, 0x4D, 0x32, 0x78, 0x4D, 0x32, 0x78, 0x4D, 0x32, 
   0x78, 0x4D, 0x32, 0x79, 0x4C, 0x31, 0x77, 0x4A, 0x2F, 0x75, 0x48, 0x2D, 0x75, 0x48, 0x2D, 0x74, 
   0x47, 0x2C, 0x73, 0x46, 0x2B, 0x73, 0x46, 0x2B, 0x73, 0x46, 0x2A, 0x73, 0x46, 0x2A, 0x73, 0x46, 
   0x2A, 0x72, 0x45, 0x29, 0x72, 0x45, 0x29, 0x72, 0x45, 0x29, 0x72, 0x45, 0x29, 0x73, 0x46, 0x2A, 
   0x72, 0x45, 0x29, 0x71, 0x44, 0x28, 0x70, 0x43, 0x27, 0x6F, 0x42, 0x26, 0x70, 0x43, 0x27, 0x70, 
   0x43, 0x27, 0x70, 0x43, 0x27, 0x70, 0x43, 0x27, 0x70, 0x43, 0x27, 0x70, 0x43, 0x27, 0x70, 0x43, 
   0x27, 0x71, 0x43, 0x24, 0x71, 0x43, 0x24, 0x71, 0x43, 0x24, 0x71, 0x43, 0x24, 0x71, 0x43, 0x24, 
   0x71, 0x43, 0x24, 0x71, 0x43, 0x24, 0x71, 0x43, 0x24, 0x71, 0x43, 0x24, 0x71, 0x43, 0x24, 0x71, 
   0x43, 0x24, 0x71, 0x43, 0x24, 0x71, 0x43, 0x24, 0x71, 0x43, 0x24, 0x70, 0x42, 0x23, 0x70, 0x42, 
   0x23, 0x71, 0x43, 0x24, 0x71, 0x43, 0x24, 0x71, 0x43, 0x24, 0x71, 0x44, 0x24, 0x71, 0x44, 0x23, 
   0x71, 0x44, 0x23, 0x71, 0x44, 0x23, 0x71, 0x44, 0x23, 0x71, 0x44, 0x23, 0x71, 0x44, 0x23, 0x71, 
   0x44, 0x23, 0x71, 0x44, 0x23, 0x71, 0x44, 0x23, 0x71, 0x44, 0x23, 0x71, 0x44, 0x23, 0x71, 0x44, 
   0x23, 0x71, 0x44, 0x23, 0x71, 0x44, 0x23, 0x71, 0x44, 0x23, 0x71, 0x44, 0x23, 0x70, 0x43, 0x22, 
   0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 0x70, 0x42, 0x22, 0x6F, 0x41, 0x22, 0x6F, 0x41, 0x22, 0x6F, 
   0x41, 0x22, 0x6F, 0x41, 0x22, 0x6F, 0x41, 0x22, 0x6F, 0x41, 0x22, 0x6F, 0x42, 0x21, 0x6F, 0x42, 
   0x21, 0x6F, 0x42, 0x21, 0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 
   0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 0x71, 0x44, 0x23, 0x71, 0x44, 0x23, 0x71, 0x44, 0x23, 0x71, 
   0x44, 0x23, 0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 0x70, 0x43, 
   0x22, 0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 0x71, 0x44, 0x23, 
   0x71, 0x44, 0x23, 0x71, 0x44, 0x23, 0x71, 0x44, 0x23, 0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 0x70, 
   0x43, 0x22, 0x71, 0x44, 0x23, 0x71, 0x44, 0x23, 0x71, 0x44, 0x23, 0x71, 0x43, 0x23, 0x71, 0x42, 
   0x22, 0x71, 0x42, 0x22, 0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 
   0x71, 0x42, 0x22, 0x71, 0x42, 0x22, 0x71, 0x42, 0x22, 0x71, 0x42, 0x22, 0x72, 0x43, 0x23, 0x73, 
   0x44, 0x24, 0x73, 0x45, 0x24, 0x72, 0x45, 0x24, 0x72, 0x45, 0x24, 0x73, 0x46, 0x25, 0x74, 0x47, 
   0x26, 0x73, 0x46, 0x25, 0x74, 0x46, 0x25, 0x78, 0x49, 0x2D, 0x77, 0x48, 0x2C, 0x77, 0x48, 0x2D, 
   0x79, 0x49, 0x31, 0x7A, 0x4A, 0x32, 0x7E, 0x4C, 0x36, 0x7B, 0x4F, 0x38, 0x76, 0x50, 0x37, 0x76, 
   0x50, 0x38, 0x7B, 0x54, 0x3D, 0x7E, 0x57, 0x41, 0x7F, 0x58, 0x43, 0x82, 0x5A, 0x48, 0x7D, 0x5C, 
   0x52, 0x43, 0x2C, 0x21, 0x30, 0x21, 0x17, 0x36, 0x2D, 0x25, 0x32, 0x2D, 0x28, 0x35, 0x2C, 0x2A, 
   0x32, 0x23, 0x21, 0x3E, 0x2B, 0x27, 0x72, 0x4A, 0x31, 0x72, 0x4A, 0x31, 0x72, 0x4A, 0x31, 0x72, 
   0x4A, 0x31, 0x71, 0x49, 0x30, 0x71, 0x49, 0x30, 0x71, 0x49, 0x30, 0x71, 0x49, 0x30, 0x71, 0x49, 
   0x30, 0x71, 0x49, 0x30, 0x70, 0x48, 0x2F, 0x70, 0x48, 0x2F, 0x70, 0x48, 0x2F, 0x70, 0x48, 0x2F, 
   0x70, 0x48, 0x2F, 0x70, 0x48, 0x2F, 0x70, 0x48, 0x2F, 0x70, 0x48, 0x2F, 0x70, 0x48, 0x2F, 0x70, 
   0x48, 0x2F, 0x70, 0x47, 0x2E, 0x70, 0x47, 0x2E, 0x70, 0x47, 0x2E, 0x70, 0x47, 0x2E, 0x6F, 0x46, 
   0x2D, 0x6E, 0x45, 0x2C, 0x6F, 0x46, 0x2D, 0x6F, 0x46, 0x2D, 0x6F, 0x46, 0x2D, 0x6F, 0x46, 0x2D, 
   0x6F, 0x46, 0x2D, 0x6F, 0x46, 0x2D, 0x6F, 0x46, 0x2D, 0x6E, 0x45, 0x2A, 0x6E, 0x45, 0x2A, 0x6E, 
   0x45, 0x2A, 0x6E, 0x45, 0x2A, 0x6E, 0x45, 0x2A, 0x6E, 0x45, 0x2A, 0x6E, 0x45, 0x2B, 0x6E, 0x45, 
   0x2D, 0x70, 0x47, 0x2E, 0x70, 0x47, 0x2E, 0x70, 0x47, 0x2E, 0x70, 0x47, 0x2E, 0x70, 0x47, 0x2E, 
   0x70, 0x47, 0x32, 0x71, 0x48, 0x33, 0x71, 0x48, 0x33, 0x71, 0x48, 0x33, 0x75, 0x4C, 0x37, 0x78, 
   0x4F, 0x39, 0x75, 0x4F, 0x3C, 0x73, 0x50, 0x41, 0x76, 0x53, 0x45, 0x7A, 0x59, 0x4C, 0x85, 0x64, 
   0x59, 0x8B, 0x6A, 0x60, 0x86, 0x66, 0x5D, 0x8C, 0x6A, 0x60, 0xA1, 0x7E, 0x74, 0xA5, 0x83, 0x79, 
   0xB4, 0x91, 0x87, 0x9F, 0x7D, 0x73, 0x9A, 0x78, 0x6E, 0x9F, 0x7B, 0x6F, 0xA0, 0x7B, 0x6D, 0xA2, 
   0x7D, 0x6F, 0x9F, 0x7A, 0x6C, 0x9B, 0x76, 0x68, 0x9A, 0x76, 0x67, 0x98, 0x73, 0x65, 0x99, 0x73, 
   0x67, 0x9C, 0x76, 0x6A, 0x9B, 0x75, 0x69, 0x95, 0x6F, 0x63, 0x93, 0x6D, 0x61, 0x8F, 0x69, 0x5E, 
   0x8E, 0x67, 0x59, 0x90, 0x67, 0x58, 0x8E, 0x65, 0x56, 0x8A, 0x61, 0x52, 0x85, 0x5C, 0x4D, 0x83, 
   0x5A, 0x4B, 0x82, 0x59, 0x4A, 0x84, 0x5A, 0x47, 0x83, 0x59, 0x46, 0x82, 0x58, 0x46, 0x81, 0x57, 
   0x45, 0x7F, 0x55, 0x43, 0x7D, 0x53, 0x41, 0x7D, 0x52, 0x40, 0x7D, 0x51, 0x3F, 0x7C, 0x51, 0x3F, 
   0x7D, 0x52, 0x3F, 0x7C, 0x51, 0x3E, 0x7D, 0x52, 0x3F, 0x7E, 0x53, 0x40, 0x7E, 0x55, 0x3C, 0x7E, 
   0x55, 0x3B, 0x7C, 0x53, 0x3A, 0x7B, 0x52, 0x39, 0x7A, 0x51, 0x38, 0x79, 0x51, 0x38, 0x7A, 0x50, 
   0x36, 0x7A, 0x4F, 0x33, 0x78, 0x4D, 0x32, 0x78, 0x4D, 0x32, 0x77, 0x4C, 0x31, 0x77, 0x4C, 0x31, 
   0x77, 0x4C, 0x31, 0x78, 0x4B, 0x30, 0x77, 0x4A, 0x2F, 0x74, 0x47, 0x2C, 0x74, 0x47, 0x2C, 0x73, 
   0x46, 0x2B, 0x72, 0x45, 0x2A, 0x72, 0x45, 0x2A, 0x72, 0x45, 0x29, 0x72, 0x45, 0x29, 0x72, 0x45, 
   0x29, 0x72, 0x45, 0x29, 0x72, 0x45, 0x29, 0x72, 0x45, 0x29, 0x72, 0x45, 0x29, 0x73, 0x46, 0x2A, 
   0x72, 0x45, 0x29, 0x71, 0x44, 0x28, 0x70, 0x43, 0x27, 0x6F, 0x42, 0x26, 0x70, 0x43, 0x27, 0x70, 
   0x43, 0x27, 0x70, 0x43, 0x27, 0x70, 0x43, 0x27, 0x6F, 0x42, 0x26, 0x6F, 0x42, 0x26, 0x6F, 0x42, 
   0x26, 0x71, 0x43, 0x24, 0x71, 0x43, 0x24, 0x71, 0x43, 0x24, 0x71, 0x43, 0x24, 0x70, 0x42, 0x23, 
   0x70, 0x42, 0x23, 0x70, 0x42, 0x23, 0x70, 0x42, 0x23, 0x70, 0x42, 0x23, 0x70, 0x42, 0x23, 0x70, 
   0x42, 0x23, 0x70, 0x42, 0x23, 0x70, 0x42, 0x23, 0x70, 0x42, 0x23, 0x70, 0x42, 0x23, 0x70, 0x42, 
   0x23, 0x70, 0x42, 0x23, 0x70, 0x42, 0x23, 0x70, 0x42, 0x23, 0x70, 0x43, 0x23, 0x70, 0x43, 0x22, 
   0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 0x70, 
   0x43, 0x22, 0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 0x70, 0x43, 
   0x22, 0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 
   0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 0x71, 0x43, 0x23, 0x70, 0x42, 0x23, 0x70, 0x42, 0x23, 0x70, 
   0x42, 0x23, 0x70, 0x42, 0x23, 0x70, 0x42, 0x23, 0x70, 0x42, 0x23, 0x70, 0x43, 0x22, 0x70, 0x43, 
   0x22, 0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 
   0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 0x70, 
   0x43, 0x22, 0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 0x70, 0x43, 
   0x22, 0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 
   0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 0x70, 
   0x43, 0x22, 0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 0x71, 0x43, 0x22, 0x71, 0x42, 
   0x22, 0x71, 0x42, 0x22, 0x71, 0x42, 0x22, 0x71, 0x42, 0x22, 0x71, 0x42, 0x22, 0x71, 0x42, 0x22, 
   0x71, 0x42, 0x22, 0x71, 0x42, 0x22, 0x71, 0x42, 0x22, 0x71, 0x42, 0x22, 0x72, 0x43, 0x23, 0x73, 
   0x44, 0x24, 0x73, 0x45, 0x24, 0x72, 0x45, 0x24, 0x72, 0x45, 0x24, 0x72, 0x45, 0x24, 0x71, 0x44, 
   0x23, 0x72, 0x46, 0x24, 0x75, 0x48, 0x27, 0x75, 0x47, 0x29, 0x74, 0x45, 0x29, 0x74, 0x45, 0x2A, 
   0x77, 0x47, 0x2E, 0x78, 0x48, 0x30, 0x7B, 0x4A, 0x33, 0x7B, 0x4F, 0x37, 0x79, 0x52, 0x3A, 0x78, 
   0x51, 0x38, 0x7A, 0x52, 0x3B, 0x7E, 0x55, 0x3F, 0x7F, 0x57, 0x41, 0x81, 0x58, 0x45, 0x7F, 0x5A, 
   0x4E, 0x6C, 0x4E, 0x43, 0x41, 0x2C, 0x22, 0x41, 0x34, 0x2B, 0x36, 0x2E, 0x27, 0x2B, 0x24, 0x1F, 
   0x34, 0x28, 0x23, 0x35, 0x24, 0x1E, 0x72, 0x4A, 0x31, 0x72, 0x4A, 0x31, 0x72, 0x4A, 0x31, 0x72, 
   0x4A, 0x31, 0x71, 0x49, 0x30, 0x71, 0x49, 0x30, 0x71, 0x49, 0x30, 0x70, 0x48, 0x2F, 0x70, 0x48, 
   0x2F, 0x70, 0x48, 0x2F, 0x6F, 0x47, 0x2E, 0x6F, 0x47, 0x2E, 0x6F, 0x47, 0x2E, 0x6F, 0x47, 0x2E, 
   0x6F, 0x47, 0x2E, 0x6F, 0x47, 0x2E, 0x6F, 0x47, 0x2E, 0x6F, 0x47, 0x2E, 0x6F, 0x47, 0x2E, 0x70, 
   0x47, 0x2E, 0x70, 0x47, 0x2E, 0x70, 0x47, 0x2E, 0x70, 0x47, 0x2E, 0x6F, 0x46, 0x2D, 0x6E, 0x45, 
   0x2C, 0x6E, 0x45, 0x2C, 0x6F, 0x46, 0x2D, 0x6F, 0x46, 0x2D, 0x6F, 0x46, 0x2D, 0x6F, 0x46, 0x2D, 
   0x6F, 0x46, 0x2D, 0x6F, 0x46, 0x2D, 0x6F, 0x46, 0x2D, 0x6D, 0x44, 0x29, 0x6D, 0x44, 0x29, 0x6D, 
   0x44, 0x29, 0x6D, 0x44, 0x29, 0x6D, 0x44, 0x29, 0x6D, 0x44, 0x29, 0x6D, 0x44, 0x2A, 0x6E, 0x45, 
   0x2C, 0x6F, 0x46, 0x2D, 0x6F, 0x46, 0x2D, 0x70, 0x47, 0x2E, 0x71, 0x48, 0x2F, 0x70, 0x47, 0x2E, 
   0x70, 0x47, 0x31, 0x70, 0x47, 0x30, 0x70, 0x47, 0x30, 0x71, 0x48, 0x31, 0x73, 0x4A, 0x34, 0x75, 
   0x4C, 0x35, 0x73, 0x4C, 0x38, 0x71, 0x4D, 0x3C, 0x74, 0x4F, 0x3F, 0x7A, 0x57, 0x49, 0x84, 0x62, 
   0x54, 0x89, 0x67, 0x5B, 0x85, 0x64, 0x58, 0x8A, 0x64, 0x59, 0x95, 0x70, 0x65, 0x9D, 0x77, 0x6C, 
   0x9C, 0x76, 0x6B, 0x9E, 0x78, 0x6D, 0x9F, 0x79, 0x6E, 0x9C, 0x77, 0x6B, 0x9E, 0x79, 0x6B, 0x9E, 
   0x79, 0x6B, 0x9B, 0x76, 0x68, 0x99, 0x74, 0x66, 0x98, 0x74, 0x65, 0x98, 0x72, 0x65, 0x96, 0x70, 
   0x63, 0x97, 0x72, 0x65, 0x99, 0x74, 0x67, 0x94, 0x6F, 0x62, 0x91, 0x6C, 0x5F, 0x8C, 0x67, 0x5A, 
   0x8B, 0x64, 0x55, 0x8E, 0x65, 0x54, 0x8C, 0x63, 0x53, 0x88, 0x60, 0x4F, 0x84, 0x5C, 0x4B, 0x83, 
   0x5A, 0x4A, 0x84, 0x5B, 0x4B, 0x84, 0x5A, 0x47, 0x83, 0x59, 0x46, 0x81, 0x57, 0x44, 0x80, 0x56, 
   0x43, 0x7E, 0x54, 0x41, 0x7C, 0x52, 0x3F, 0x7B, 0x51, 0x3E, 0x7B, 0x50, 0x3D, 0x7B, 0x50, 0x3D, 
   0x7C, 0x51, 0x3E, 0x7C, 0x51, 0x3E, 0x7D, 0x52, 0x3F, 0x7E, 0x53, 0x40, 0x7E, 0x55, 0x3C, 0x7E, 
   0x55, 0x3C, 0x7B, 0x52, 0x39, 0x7A, 0x51, 0x38, 0x7A, 0x51, 0x38, 0x79, 0x50, 0x37, 0x7A, 0x50, 
   0x36, 0x7A, 0x4F, 0x33, 0x78, 0x4D, 0x32, 0x78, 0x4D, 0x32, 0x76, 0x4B, 0x30, 0x76, 0x4B, 0x30, 
   0x76, 0x4B, 0x30, 0x77, 0x4A, 0x2F, 0x76, 0x49, 0x2E, 0x74, 0x47, 0x2C, 0x74, 0x47, 0x2C, 0x72, 
   0x45, 0x2A, 0x72, 0x45, 0x2A, 0x72, 0x45, 0x29, 0x71, 0x44, 0x28, 0x71, 0x44, 0x28, 0x71, 0x44, 
   0x28, 0x72, 0x45, 0x29, 0x72, 0x45, 0x29, 0x72, 0x45, 0x29, 0x72, 0x45, 0x29, 0x73, 0x46, 0x2A, 
   0x72, 0x45, 0x29, 0x71, 0x44, 0x28, 0x70, 0x43, 0x27, 0x6F, 0x42, 0x26, 0x70, 0x43, 0x27, 0x70, 
   0x43, 0x27, 0x70, 0x43, 0x27, 0x70, 0x43, 0x27, 0x6E, 0x41, 0x25, 0x6E, 0x41, 0x25, 0x6E, 0x41, 
   0x25, 0x71, 0x43, 0x24, 0x71, 0x43, 0x24, 0x71, 0x43, 0x24, 0x70, 0x42, 0x23, 0x6F, 0x41, 0x22, 
   0x6F, 0x41, 0x22, 0x6F, 0x41, 0x22, 0x6F, 0x41, 0x22, 0x6F, 0x41, 0x22, 0x6F, 0x41, 0x22, 0x6F, 
   0x41, 0x22, 0x6F, 0x41, 0x22, 0x6F, 0x41, 0x22, 0x70, 0x42, 0x23, 0x70, 0x42, 0x23, 0x70, 0x42, 
   0x23, 0x70, 0x42, 0x23, 0x6F, 0x41, 0x22, 0x6F, 0x41, 0x22, 0x6F, 0x42, 0x22, 0x6F, 0x42, 0x21, 
   0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 
   0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 
   0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x70, 0x43, 0x22, 
   0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 0x71, 0x43, 0x23, 0x71, 0x43, 0x24, 0x71, 0x43, 0x24, 0x71, 
   0x43, 0x24, 0x71, 0x43, 0x24, 0x71, 0x43, 0x24, 0x71, 0x43, 0x24, 0x71, 0x44, 0x23, 0x71, 0x44, 
   0x23, 0x71, 0x44, 0x23, 0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 
   0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 
   0x42, 0x21, 0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 0x70, 0x43, 
   0x22, 0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 
   0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 0x70, 
   0x43, 0x22, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x70, 0x42, 0x22, 0x71, 0x42, 
   0x22, 0x71, 0x42, 0x22, 0x71, 0x42, 0x22, 0x70, 0x41, 0x21, 0x70, 0x41, 0x21, 0x70, 0x41, 0x21, 
   0x71, 0x42, 0x22, 0x71, 0x42, 0x22, 0x71, 0x42, 0x22, 0x71, 0x42, 0x22, 0x72, 0x43, 0x23, 0x73, 
   0x44, 0x24, 0x73, 0x45, 0x24, 0x72, 0x45, 0x24, 0x72, 0x45, 0x24, 0x71, 0x44, 0x23, 0x70, 0x43, 
   0x22, 0x72, 0x45, 0x24, 0x75, 0x48, 0x27, 0x75, 0x47, 0x28, 0x73, 0x45, 0x27, 0x74, 0x44, 0x29, 
   0x75, 0x45, 0x2C, 0x75, 0x45, 0x2C, 0x7A, 0x49, 0x32, 0x78, 0x4C, 0x33, 0x75, 0x4E, 0x34, 0x76, 
   0x4E, 0x34, 0x77, 0x4E, 0x37, 0x7C, 0x53, 0x3D, 0x7E, 0x55, 0x3F, 0x81, 0x58, 0x43, 0x83, 0x57, 
   0x49, 0x84, 0x60, 0x54, 0x61, 0x46, 0x3A, 0x3B, 0x29, 0x1E, 0x36, 0x2B, 0x23, 0x30, 0x2A, 0x22, 
   0x2A, 0x20, 0x1A, 0x2D, 0x1E, 0x17, 0x71, 0x49, 0x30, 0x71, 0x49, 0x30, 0x71, 0x49, 0x30, 0x71, 
   0x49, 0x30, 0x71, 0x49, 0x30, 0x71, 0x49, 0x30, 0x70, 0x48, 0x2F, 0x6F, 0x47, 0x2E, 0x6F, 0x47, 
   0x2E, 0x6F, 0x47, 0x2E, 0x6F, 0x47, 0x2E, 0x6F, 0x47, 0x2E, 0x6F, 0x47, 0x2E, 0x6F, 0x47, 0x2E, 
   0x6F, 0x47, 0x2E, 0x6F, 0x47, 0x2E, 0x6F, 0x47, 0x2E, 0x6F, 0x47, 0x2E, 0x6F, 0x47, 0x2E, 0x6F, 
   0x47, 0x2E, 0x6F, 0x46, 0x2D, 0x6F, 0x46, 0x2D, 0x6F, 0x46, 0x2D, 0x6F, 0x46, 0x2D, 0x6E, 0x45, 
   0x2C, 0x6D, 0x44, 0x2B, 0x6E, 0x45, 0x2C, 0x6E, 0x45, 0x2C, 0x6E, 0x45, 0x2C, 0x6F, 0x46, 0x2D, 
   0x6F, 0x46, 0x2D, 0x6F, 0x46, 0x2D, 0x6F, 0x46, 0x2D, 0x6D, 0x44, 0x29, 0x6D, 0x44, 0x29, 0x6D, 
   0x44, 0x29, 0x6D, 0x44, 0x29, 0x6D, 0x44, 0x29, 0x6D, 0x44, 0x29, 0x6D, 0x44, 0x2A, 0x6D, 0x44, 
   0x2C, 0x6E, 0x45, 0x2C, 0x6E, 0x45, 0x2C, 0x70, 0x47, 0x2E, 0x71, 0x48, 0x2F, 0x6F, 0x46, 0x2D, 
   0x6F, 0x46, 0x2F, 0x6F, 0x46, 0x30, 0x6F, 0x46, 0x30, 0x70, 0x47, 0x31, 0x72, 0x49, 0x32, 0x73, 
   0x4A, 0x33, 0x70, 0x48, 0x34, 0x6F, 0x48, 0x36, 0x71, 0x4B, 0x38, 0x7A, 0x56, 0x46, 0x84, 0x60, 
   0x51, 0x89, 0x65, 0x58, 0x88, 0x66, 0x58, 0x8E, 0x66, 0x5A, 0x92, 0x69, 0x5D, 0x97, 0x6D, 0x62, 
   0x9A, 0x71, 0x65, 0x98, 0x6F, 0x63, 0x99, 0x70, 0x64, 0x99, 0x71, 0x64, 0x97, 0x72, 0x64, 0x98, 
   0x73, 0x65, 0x97, 0x72, 0x64, 0x96, 0x71, 0x63, 0x96, 0x71, 0x63, 0x96, 0x71, 0x63, 0x92, 0x6D, 
   0x5F, 0x91, 0x6C, 0x5E, 0x95, 0x70, 0x62, 0x92, 0x6D, 0x5F, 0x8F, 0x6A, 0x5C, 0x89, 0x64, 0x56, 
   0x86, 0x60, 0x50, 0x89, 0x61, 0x4E, 0x88, 0x60, 0x4D, 0x86, 0x5E, 0x4B, 0x84, 0x5C, 0x49, 0x82, 
   0x5A, 0x48, 0x83, 0x5B, 0x49, 0x84, 0x5A, 0x46, 0x82, 0x59, 0x45, 0x81, 0x57, 0x43, 0x7F, 0x56, 
   0x42, 0x7E, 0x55, 0x41, 0x7C, 0x53, 0x3F, 0x7C, 0x52, 0x3E, 0x7B, 0x50, 0x3D, 0x7B, 0x50, 0x3C, 
   0x7C, 0x51, 0x3E, 0x7C, 0x51, 0x3E, 0x7D, 0x52, 0x3F, 0x7E, 0x53, 0x3F, 0x7D, 0x54, 0x3B, 0x7C, 
   0x53, 0x3B, 0x7A, 0x51, 0x38, 0x7A, 0x51, 0x38, 0x7A, 0x51, 0x38, 0x78, 0x4F, 0x37, 0x79, 0x4F, 
   0x35, 0x7A, 0x4F, 0x33, 0x78, 0x4D, 0x32, 0x78, 0x4D, 0x32, 0x76, 0x4B, 0x30, 0x76, 0x4B, 0x30, 
   0x76, 0x4A, 0x2F, 0x76, 0x49, 0x2E, 0x75, 0x48, 0x2D, 0x73, 0x46, 0x2B, 0x73, 0x46, 0x2B, 0x72, 
   0x45, 0x2A, 0x71, 0x44, 0x29, 0x71, 0x44, 0x29, 0x71, 0x44, 0x28, 0x71, 0x44, 0x28, 0x71, 0x44, 
   0x28, 0x71, 0x44, 0x28, 0x71, 0x44, 0x28, 0x71, 0x44, 0x28, 0x71, 0x44, 0x28, 0x72, 0x45, 0x29, 
   0x71, 0x44, 0x28, 0x71, 0x44, 0x28, 0x70, 0x43, 0x27, 0x6F, 0x42, 0x26, 0x70, 0x43, 0x27, 0x70, 
   0x43, 0x27, 0x70, 0x43, 0x27, 0x70, 0x43, 0x27, 0x6E, 0x41, 0x25, 0x6E, 0x41, 0x25, 0x6E, 0x41, 
   0x25, 0x70, 0x42, 0x23, 0x70, 0x42, 0x23, 0x70, 0x42, 0x23, 0x70, 0x42, 0x23, 0x6F, 0x41, 0x22, 
   0x6F, 0x41, 0x22, 0x6F, 0x41, 0x22, 0x6F, 0x41, 0x22, 0x6F, 0x41, 0x22, 0x6F, 0x41, 0x22, 0x6F, 
   0x41, 0x22, 0x6F, 0x41, 0x22, 0x6F, 0x41, 0x22, 0x6F, 0x41, 0x22, 0x6F, 0x41, 0x22, 0x6F, 0x41, 
   0x22, 0x6F, 0x41, 0x22, 0x6F, 0x41, 0x22, 0x6F, 0x41, 0x22, 0x6F, 0x42, 0x22, 0x6F, 0x42, 0x21, 
   0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 
   0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 
   0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x70, 0x43, 0x22, 
   0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 0x70, 0x42, 0x22, 0x6F, 0x41, 0x22, 0x6F, 0x41, 0x22, 0x6F, 
   0x41, 0x22, 0x6F, 0x41, 0x22, 0x6F, 0x41, 0x22, 0x6F, 0x41, 0x22, 0x6F, 0x42, 0x21, 0x6F, 0x42, 
   0x21, 0x6F, 0x42, 0x21, 0x70, 0x43, 0x22, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 
   0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 
   0x42, 0x21, 0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 0x70, 0x43, 
   0x22, 0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 
   0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 0x70, 
   0x43, 0x22, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x70, 0x42, 0x22, 0x71, 0x42, 
   0x22, 0x71, 0x42, 0x22, 0x71, 0x42, 0x22, 0x70, 0x41, 0x21, 0x70, 0x41, 0x21, 0x70, 0x41, 0x21, 
   0x71, 0x42, 0x22, 0x71, 0x42, 0x22, 0x71, 0x42, 0x22, 0x71, 0x42, 0x22, 0x71, 0x42, 0x22, 0x73, 
   0x44, 0x24, 0x73, 0x45, 0x24, 0x72, 0x45, 0x24, 0x72, 0x45, 0x24, 0x73, 0x46, 0x25, 0x72, 0x45, 
   0x24, 0x71, 0x44, 0x23, 0x72, 0x45, 0x24, 0x73, 0x45, 0x26, 0x73, 0x45, 0x25, 0x74, 0x46, 0x27, 
   0x75, 0x45, 0x2A, 0x75, 0x45, 0x2B, 0x78, 0x48, 0x2F, 0x76, 0x4B, 0x2F, 0x74, 0x4D, 0x31, 0x76, 
   0x4D, 0x34, 0x77, 0x4F, 0x36, 0x79, 0x50, 0x39, 0x7B, 0x52, 0x3B, 0x7C, 0x53, 0x3E, 0x83, 0x53, 
   0x43, 0x82, 0x58, 0x48, 0x70, 0x4E, 0x3F, 0x46, 0x2F, 0x21, 0x36, 0x28, 0x1E, 0x33, 0x2C, 0x22, 
   0x35, 0x29, 0x20, 0x2D, 0x1D, 0x15, 0x70, 0x48, 0x2F, 0x70, 0x48, 0x2F, 0x70, 0x48, 0x2F, 0x70, 
   0x48, 0x2F, 0x70, 0x48, 0x2F, 0x70, 0x48, 0x2F, 0x6F, 0x47, 0x2E, 0x6E, 0x46, 0x2D, 0x6E, 0x46, 
   0x2D, 0x6E, 0x46, 0x2D, 0x6E, 0x46, 0x2D, 0x6E, 0x46, 0x2D, 0x6E, 0x46, 0x2D, 0x6E, 0x46, 0x2D, 
   0x6E, 0x46, 0x2D, 0x6E, 0x46, 0x2D, 0x6E, 0x46, 0x2D, 0x6E, 0x46, 0x2D, 0x6E, 0x46, 0x2D, 0x6E, 
   0x46, 0x2D, 0x6E, 0x45, 0x2C, 0x6E, 0x45, 0x2C, 0x6E, 0x45, 0x2C, 0x6F, 0x46, 0x2D, 0x6E, 0x45, 
   0x2C, 0x6D, 0x44, 0x2B, 0x6D, 0x44, 0x2B, 0x6D, 0x44, 0x2B, 0x6D, 0x44, 0x2B, 0x6E, 0x45, 0x2C, 
   0x6E, 0x45, 0x2C, 0x6E, 0x45, 0x2C, 0x6E, 0x45, 0x2C, 0x6C, 0x43, 0x28, 0x6C, 0x43, 0x28, 0x6C, 
   0x43, 0x28, 0x6C, 0x43, 0x28, 0x6C, 0x43, 0x28, 0x6C, 0x43, 0x28, 0x6D, 0x44, 0x2A, 0x6D, 0x44, 
   0x2B, 0x6D, 0x44, 0x2B, 0x6E, 0x45, 0x2C, 0x6F, 0x46, 0x2D, 0x6F, 0x46, 0x2D, 0x6F, 0x46, 0x2D, 
   0x6F, 0x45, 0x2E, 0x70, 0x46, 0x2F, 0x71, 0x46, 0x2F, 0x6F, 0x45, 0x2E, 0x70, 0x46, 0x2F, 0x73, 
   0x49, 0x31, 0x73, 0x48, 0x33, 0x72, 0x49, 0x36, 0x73, 0x4B, 0x38, 0x79, 0x53, 0x40, 0x7D, 0x58, 
   0x47, 0x83, 0x5F, 0x50, 0x88, 0x65, 0x57, 0x8D, 0x62, 0x57, 0x8F, 0x64, 0x59, 0x93, 0x68, 0x5D, 
   0x94, 0x69, 0x5E, 0x95, 0x6A, 0x5F, 0x95, 0x6A, 0x5F, 0x93, 0x6B, 0x5E, 0x92, 0x6D, 0x5F, 0x92, 
   0x6D, 0x5F, 0x92, 0x6D, 0x5F, 0x8F, 0x6A, 0x5C, 0x91, 0x6C, 0x5E, 0x93, 0x6E, 0x60, 0x8E, 0x69, 
   0x5B, 0x8E, 0x69, 0x5B, 0x90, 0x6B, 0x5D, 0x8E, 0x69, 0x5A, 0x8B, 0x66, 0x58, 0x87, 0x63, 0x54, 
   0x84, 0x5E, 0x4D, 0x85, 0x5C, 0x49, 0x84, 0x5C, 0x49, 0x84, 0x5C, 0x49, 0x81, 0x59, 0x46, 0x80, 
   0x58, 0x45, 0x80, 0x58, 0x45, 0x81, 0x58, 0x42, 0x81, 0x58, 0x42, 0x80, 0x57, 0x41, 0x7F, 0x56, 
   0x3F, 0x7E, 0x55, 0x3E, 0x7C, 0x54, 0x3D, 0x7C, 0x52, 0x3C, 0x7D, 0x52, 0x3D, 0x7D, 0x52, 0x3D, 
   0x7D, 0x52, 0x3D, 0x7D, 0x52, 0x3D, 0x7D, 0x52, 0x3D, 0x7D, 0x52, 0x3D, 0x7B, 0x52, 0x39, 0x7A, 
   0x51, 0x38, 0x79, 0x50, 0x37, 0x79, 0x50, 0x37, 0x7A, 0x51, 0x38, 0x78, 0x50, 0x37, 0x78, 0x4E, 
   0x34, 0x79, 0x4E, 0x32, 0x77, 0x4C, 0x31, 0x77, 0x4C, 0x31, 0x76, 0x4B, 0x30, 0x75, 0x4A, 0x2F, 
   0x74, 0x49, 0x2E, 0x75, 0x48, 0x2D, 0x74, 0x47, 0x2C, 0x73, 0x46, 0x2B, 0x73, 0x46, 0x2B, 0x71, 
   0x44, 0x29, 0x70, 0x43, 0x28, 0x71, 0x44, 0x28, 0x71, 0x44, 0x28, 0x71, 0x44, 0x28, 0x71, 0x44, 
   0x28, 0x70, 0x43, 0x27, 0x70, 0x43, 0x27, 0x70, 0x43, 0x27, 0x70, 0x43, 0x27, 0x70, 0x43, 0x27, 
   0x70, 0x43, 0x27, 0x70, 0x43, 0x27, 0x70, 0x43, 0x27, 0x70, 0x43, 0x27, 0x70, 0x43, 0x27, 0x70, 
   0x43, 0x27, 0x70, 0x43, 0x27, 0x70, 0x43, 0x27, 0x6E, 0x41, 0x25, 0x6E, 0x41, 0x25, 0x6E, 0x41, 
   0x25, 0x6F, 0x41, 0x22, 0x6F, 0x41, 0x22, 0x6F, 0x41, 0x22, 0x6F, 0x41, 0x22, 0x6F, 0x41, 0x22, 
   0x6F, 0x41, 0x22, 0x6F, 0x41, 0x22, 0x6F, 0x41, 0x22, 0x6F, 0x41, 0x22, 0x6F, 0x41, 0x22, 0x6E, 
   0x40, 0x21, 0x6E, 0x40, 0x21, 0x6E, 0x40, 0x21, 0x6E, 0x40, 0x21, 0x6E, 0x40, 0x21, 0x6E, 0x40, 
   0x21, 0x6E, 0x40, 0x21, 0x6E, 0x40, 0x21, 0x6E, 0x40, 0x21, 0x6E, 0x41, 0x21, 0x6E, 0x41, 0x20, 
   0x6E, 0x41, 0x20, 0x6E, 0x41, 0x20, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 
   0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6E, 0x41, 0x20, 0x6E, 0x41, 
   0x20, 0x6E, 0x41, 0x20, 0x6E, 0x41, 0x20, 0x6E, 0x41, 0x20, 0x6E, 0x41, 0x20, 0x70, 0x43, 0x22, 
   0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 0x70, 0x43, 0x23, 0x70, 0x42, 0x23, 0x70, 0x42, 0x23, 0x70, 
   0x42, 0x23, 0x6F, 0x41, 0x22, 0x6F, 0x41, 0x22, 0x6F, 0x41, 0x22, 0x6F, 0x42, 0x21, 0x6F, 0x42, 
   0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6D, 0x40, 0x1F, 0x6D, 0x40, 0x1F, 0x6E, 0x41, 0x20, 
   0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 
   0x42, 0x21, 0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 0x70, 0x43, 
   0x22, 0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 
   0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 0x70, 
   0x43, 0x22, 0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 0x71, 0x43, 0x22, 0x71, 0x42, 
   0x22, 0x71, 0x42, 0x22, 0x71, 0x42, 0x22, 0x71, 0x42, 0x22, 0x71, 0x42, 0x22, 0x71, 0x42, 0x22, 
   0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 0x70, 0x41, 0x21, 0x70, 0x41, 0x21, 0x72, 
   0x43, 0x23, 0x72, 0x44, 0x24, 0x72, 0x45, 0x24, 0x72, 0x45, 0x24, 0x72, 0x45, 0x24, 0x71, 0x44, 
   0x23, 0x71, 0x44, 0x23, 0x71, 0x44, 0x23, 0x71, 0x44, 0x23, 0x72, 0x44, 0x24, 0x73, 0x45, 0x26, 
   0x74, 0x46, 0x29, 0x76, 0x46, 0x2C, 0x77, 0x46, 0x2C, 0x75, 0x49, 0x2D, 0x73, 0x4B, 0x2F, 0x75, 
   0x4C, 0x31, 0x77, 0x4F, 0x35, 0x78, 0x4E, 0x36, 0x79, 0x4F, 0x38, 0x7C, 0x50, 0x3B, 0x81, 0x51, 
   0x3F, 0x82, 0x54, 0x43, 0x82, 0x5A, 0x49, 0x6C, 0x4D, 0x3D, 0x35, 0x23, 0x16, 0x3A, 0x2F, 0x22, 
   0x3E, 0x31, 0x26, 0x34, 0x24, 0x1B, 0x70, 0x48, 0x2F, 0x70, 0x48, 0x2F, 0x70, 0x48, 0x2F, 0x70, 
   0x48, 0x2F, 0x70, 0x48, 0x2F, 0x70, 0x48, 0x2F, 0x6F, 0x47, 0x2E, 0x6E, 0x46, 0x2D, 0x6E, 0x46, 
   0x2D, 0x6E, 0x46, 0x2D, 0x6E, 0x46, 0x2D, 0x6E, 0x46, 0x2D, 0x6E, 0x46, 0x2D, 0x6E, 0x46, 0x2D, 
   0x6E, 0x46, 0x2D, 0x6E, 0x46, 0x2D, 0x6E, 0x46, 0x2D, 0x6E, 0x46, 0x2D, 0x6E, 0x46, 0x2D, 0x6E, 
   0x46, 0x2D, 0x6E, 0x45, 0x2C, 0x6E, 0x45, 0x2C, 0x6E, 0x45, 0x2C, 0x6F, 0x46, 0x2D, 0x6D, 0x44, 
   0x2B, 0x6D, 0x44, 0x2B, 0x6D, 0x44, 0x2B, 0x6D, 0x44, 0x2B, 0x6D, 0x44, 0x2B, 0x6E, 0x45, 0x2C, 
   0x6E, 0x45, 0x2C, 0x6E, 0x45, 0x2C, 0x6E, 0x45, 0x2C, 0x6C, 0x43, 0x28, 0x6C, 0x43, 0x28, 0x6C, 
   0x43, 0x28, 0x6C, 0x43, 0x28, 0x6C, 0x43, 0x28, 0x6C, 0x43, 0x28, 0x6D, 0x44, 0x2A, 0x6D, 0x44, 
   0x2B, 0x6D, 0x44, 0x2B, 0x6E, 0x45, 0x2C, 0x6F, 0x46, 0x2D, 0x6F, 0x46, 0x2D, 0x6F, 0x46, 0x2D, 
   0x71, 0x45, 0x2D, 0x72, 0x45, 0x2D, 0x72, 0x46, 0x2E, 0x71, 0x45, 0x2D, 0x72, 0x46, 0x2E, 0x74, 
   0x48, 0x2F, 0x73, 0x48, 0x30, 0x72, 0x4A, 0x34, 0x74, 0x4B, 0x35, 0x75, 0x4D, 0x39, 0x76, 0x4F, 
   0x3C, 0x7D, 0x57, 0x46, 0x84, 0x5D, 0x4E, 0x8A, 0x63, 0x55, 0x8A, 0x63, 0x55, 0x8D, 0x66, 0x58, 
   0x91, 0x6A, 0x5C, 0x92, 0x6B, 0x5D, 0x91, 0x68, 0x5A, 0x90, 0x6A, 0x5C, 0x8F, 0x6B, 0x5D, 0x8E, 
   0x69, 0x5B, 0x8E, 0x69, 0x5B, 0x8D, 0x68, 0x5A, 0x8F, 0x6A, 0x5C, 0x8E, 0x69, 0x5B, 0x8A, 0x66, 
   0x56, 0x8B, 0x67, 0x57, 0x8C, 0x68, 0x58, 0x88, 0x64, 0x54, 0x86, 0x62, 0x52, 0x81, 0x5E, 0x4E, 
   0x80, 0x5A, 0x4A, 0x83, 0x5A, 0x47, 0x81, 0x59, 0x46, 0x80, 0x58, 0x45, 0x7F, 0x57, 0x44, 0x7D, 
   0x55, 0x42, 0x7E, 0x56, 0x43, 0x7F, 0x56, 0x40, 0x7E, 0x55, 0x3F, 0x7D, 0x54, 0x3E, 0x7B, 0x52, 
   0x3C, 0x7A, 0x51, 0x3B, 0x7A, 0x51, 0x3B, 0x7B, 0x51, 0x3B, 0x7C, 0x51, 0x3C, 0x7B, 0x50, 0x3B, 
   0x7B, 0x50, 0x3B, 0x7B, 0x50, 0x3B, 0x7B, 0x50, 0x3B, 0x7B, 0x50, 0x3B, 0x7A, 0x51, 0x38, 0x78, 
   0x4F, 0x36, 0x78, 0x4F, 0x36, 0x78, 0x4F, 0x36, 0x78, 0x4F, 0x36, 0x78, 0x4F, 0x36, 0x77, 0x4D, 
   0x33, 0x78, 0x4D, 0x32, 0x77, 0x4C, 0x31, 0x76, 0x4B, 0x30, 0x75, 0x4A, 0x2F, 0x74, 0x49, 0x2E, 
   0x74, 0x48, 0x2D, 0x74, 0x47, 0x2C, 0x74, 0x47, 0x2C, 0x73, 0x46, 0x2B, 0x73, 0x46, 0x2B, 0x71, 
   0x44, 0x29, 0x70, 0x43, 0x28, 0x71, 0x44, 0x28, 0x71, 0x44, 0x28, 0x71, 0x44, 0x28, 0x71, 0x44, 
   0x28, 0x70, 0x43, 0x27, 0x70, 0x43, 0x27, 0x70, 0x43, 0x27, 0x70, 0x43, 0x27, 0x70, 0x43, 0x27, 
   0x70, 0x43, 0x27, 0x70, 0x43, 0x27, 0x70, 0x43, 0x27, 0x70, 0x43, 0x27, 0x70, 0x43, 0x27, 0x70, 
   0x43, 0x27, 0x70, 0x43, 0x27, 0x70, 0x43, 0x27, 0x6E, 0x41, 0x25, 0x6E, 0x41, 0x25, 0x6E, 0x41, 
   0x25, 0x6F, 0x41, 0x22, 0x6F, 0x41, 0x22, 0x6F, 0x41, 0x22, 0x6F, 0x41, 0x22, 0x6F, 0x41, 0x22, 
   0x6F, 0x41, 0x22, 0x6F, 0x41, 0x22, 0x6F, 0x41, 0x22, 0x6F, 0x41, 0x22, 0x6F, 0x41, 0x22, 0x6E, 
   0x40, 0x21, 0x6E, 0x40, 0x21, 0x6E, 0x40, 0x21, 0x6E, 0x40, 0x21, 0x6E, 0x40, 0x21, 0x6E, 0x40, 
   0x21, 0x6E, 0x40, 0x21, 0x6E, 0x40, 0x21, 0x6E, 0x40, 0x21, 0x6E, 0x41, 0x21, 0x6E, 0x41, 0x20, 
   0x6E, 0x41, 0x20, 0x6E, 0x41, 0x20, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 
   0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6E, 0x41, 0x20, 0x6E, 0x41, 
   0x20, 0x6E, 0x41, 0x20, 0x6E, 0x41, 0x20, 0x6E, 0x41, 0x20, 0x6E, 0x41, 0x20, 0x70, 0x43, 0x22, 
   0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 0x70, 0x43, 0x23, 0x70, 0x42, 0x23, 0x70, 0x42, 0x23, 0x70, 
   0x42, 0x23, 0x6F, 0x41, 0x22, 0x6F, 0x41, 0x22, 0x6F, 0x41, 0x22, 0x6F, 0x42, 0x21, 0x6F, 0x42, 
   0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6D, 0x40, 0x1F, 0x6D, 0x40, 0x1F, 0x6E, 0x41, 0x20, 
   0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 
   0x42, 0x21, 0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 0x70, 0x43, 
   0x22, 0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 
   0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 0x70, 
   0x43, 0x22, 0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 0x71, 0x43, 0x22, 0x71, 0x42, 
   0x22, 0x71, 0x42, 0x22, 0x71, 0x42, 0x22, 0x71, 0x42, 0x22, 0x71, 0x42, 0x22, 0x71, 0x42, 0x22, 
   0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 0x72, 0x43, 0x23, 0x70, 0x41, 0x21, 0x70, 0x41, 0x21, 0x72, 
   0x43, 0x23, 0x72, 0x44, 0x24, 0x72, 0x45, 0x24, 0x72, 0x45, 0x24, 0x72, 0x45, 0x24, 0x71, 0x44, 
   0x23, 0x71, 0x44, 0x23, 0x71, 0x44, 0x23, 0x71, 0x44, 0x23, 0x72, 0x45, 0x24, 0x73, 0x45, 0x25, 
   0x74, 0x46, 0x28, 0x75, 0x46, 0x2A, 0x76, 0x47, 0x2C, 0x74, 0x47, 0x2C, 0x72, 0x48, 0x2B, 0x72, 
   0x48, 0x2B, 0x75, 0x4A, 0x30, 0x77, 0x4B, 0x33, 0x78, 0x4C, 0x35, 0x7B, 0x4E, 0x38, 0x81, 0x50, 
   0x3A, 0x81, 0x52, 0x3F, 0x80, 0x53, 0x42, 0x80, 0x5A, 0x49, 0x50, 0x37, 0x27, 0x2E, 0x1D, 0x0D, 
   0x3E, 0x2E, 0x21, 0x48, 0x35, 0x2A, 0x6F, 0x47, 0x2E, 0x6F, 0x47, 0x2E, 0x6F, 0x47, 0x2E, 0x6F, 
   0x47, 0x2E, 0x6F, 0x47, 0x2E, 0x6F, 0x47, 0x2E, 0x6F, 0x47, 0x2E, 0x6E, 0x46, 0x2D, 0x6E, 0x46, 
   0x2D, 0x6E, 0x46, 0x2D, 0x6E, 0x46, 0x2D, 0x6E, 0x46, 0x2D, 0x6E, 0x46, 0x2D, 0x6E, 0x46, 0x2D, 
   0x6E, 0x46, 0x2D, 0x6E, 0x46, 0x2D, 0x6E, 0x46, 0x2D, 0x6E, 0x46, 0x2D, 0x6E, 0x46, 0x2D, 0x6E, 
   0x46, 0x2D, 0x6E, 0x45, 0x2C, 0x6E, 0x45, 0x2C, 0x6E, 0x45, 0x2C, 0x6E, 0x45, 0x2C, 0x6C, 0x43, 
   0x2A, 0x6C, 0x43, 0x2A, 0x6C, 0x43, 0x2A, 0x6C, 0x43, 0x2A, 0x6C, 0x43, 0x2A, 0x6D, 0x44, 0x2B, 
   0x6D, 0x44, 0x2B, 0x6D, 0x44, 0x2B, 0x6D, 0x44, 0x2B, 0x6C, 0x43, 0x28, 0x6C, 0x43, 0x28, 0x6C, 
   0x43, 0x28, 0x6C, 0x43, 0x28, 0x6C, 0x43, 0x28, 0x6C, 0x43, 0x28, 0x6D, 0x44, 0x2A, 0x6D, 0x44, 
   0x2B, 0x6D, 0x44, 0x2B, 0x6E, 0x45, 0x2C, 0x6E, 0x45, 0x2C, 0x6E, 0x45, 0x2C, 0x6E, 0x45, 0x2C, 
   0x70, 0x44, 0x2C, 0x71, 0x45, 0x2D, 0x71, 0x45, 0x2D, 0x71, 0x45, 0x2D, 0x71, 0x45, 0x2D, 0x72, 
   0x46, 0x2E, 0x72, 0x47, 0x2F, 0x72, 0x48, 0x31, 0x72, 0x48, 0x31, 0x74, 0x4B, 0x35, 0x74, 0x4C, 
   0x37, 0x79, 0x51, 0x3F, 0x7E, 0x58, 0x47, 0x84, 0x5E, 0x50, 0x84, 0x5E, 0x50, 0x86, 0x61, 0x53, 
   0x8D, 0x68, 0x5A, 0x8F, 0x6A, 0x5C, 0x8E, 0x69, 0x5B, 0x8E, 0x69, 0x5B, 0x8D, 0x68, 0x5A, 0x8C, 
   0x67, 0x59, 0x8C, 0x67, 0x59, 0x8C, 0x67, 0x59, 0x8D, 0x68, 0x5A, 0x8C, 0x67, 0x59, 0x89, 0x65, 
   0x55, 0x89, 0x65, 0x55, 0x89, 0x65, 0x55, 0x85, 0x61, 0x51, 0x83, 0x5F, 0x4F, 0x7E, 0x5A, 0x4B, 
   0x7F, 0x5A, 0x47, 0x82, 0x5B, 0x45, 0x80, 0x59, 0x43, 0x7E, 0x57, 0x41, 0x7B, 0x53, 0x3E, 0x7A, 
   0x53, 0x3D, 0x7B, 0x53, 0x3D, 0x7C, 0x53, 0x3C, 0x7B, 0x52, 0x3B, 0x7A, 0x51, 0x3A, 0x7A, 0x51, 
   0x3A, 0x7A, 0x51, 0x3A, 0x7A, 0x51, 0x3A, 0x7A, 0x51, 0x3A, 0x7A, 0x50, 0x39, 0x78, 0x4E, 0x38, 
   0x78, 0x4E, 0x37, 0x78, 0x4E, 0x37, 0x78, 0x4E, 0x37, 0x78, 0x4E, 0x37, 0x77, 0x4E, 0x35, 0x77, 
   0x4E, 0x34, 0x76, 0x4D, 0x34, 0x75, 0x4C, 0x33, 0x76, 0x4D, 0x34, 0x76, 0x4D, 0x34, 0x76, 0x4C, 
   0x32, 0x76, 0x4B, 0x30, 0x75, 0x4A, 0x2F, 0x75, 0x4A, 0x2F, 0x74, 0x49, 0x2E, 0x72, 0x47, 0x2C, 
   0x72, 0x47, 0x2C, 0x74, 0x47, 0x2C, 0x73, 0x46, 0x2B, 0x72, 0x45, 0x2A, 0x72, 0x45, 0x2A, 0x71, 
   0x44, 0x29, 0x70, 0x43, 0x28, 0x71, 0x44, 0x28, 0x71, 0x44, 0x28, 0x71, 0x44, 0x28, 0x71, 0x44, 
   0x28, 0x70, 0x43, 0x27, 0x70, 0x43, 0x27, 0x70, 0x43, 0x27, 0x70, 0x43, 0x27, 0x70, 0x43, 0x27, 
   0x70, 0x43, 0x27, 0x70, 0x43, 0x27, 0x70, 0x43, 0x27, 0x70, 0x43, 0x27, 0x70, 0x43, 0x27, 0x6F, 
   0x42, 0x26, 0x6F, 0x42, 0x26, 0x6F, 0x42, 0x26, 0x6E, 0x41, 0x25, 0x6E, 0x41, 0x25, 0x6E, 0x41, 
   0x25, 0x6F, 0x41, 0x22, 0x6F, 0x41, 0x22, 0x6F, 0x41, 0x22, 0x6F, 0x41, 0x22, 0x6F, 0x41, 0x22, 
   0x6F, 0x41, 0x22, 0x6F, 0x41, 0x22, 0x6F, 0x41, 0x22, 0x6F, 0x41, 0x22, 0x6F, 0x41, 0x22, 0x6E, 
   0x40, 0x21, 0x6E, 0x40, 0x21, 0x6E, 0x40, 0x21, 0x6E, 0x40, 0x21, 0x6E, 0x40, 0x21, 0x6E, 0x40, 
   0x21, 0x6E, 0x40, 0x21, 0x6E, 0x40, 0x21, 0x6E, 0x40, 0x21, 0x6E, 0x41, 0x21, 0x6E, 0x41, 0x20, 
   0x6E, 0x41, 0x20, 0x6E, 0x41, 0x20, 0x6E, 0x41, 0x20, 0x6E, 0x41, 0x20, 0x6E, 0x41, 0x20, 0x6E, 
   0x41, 0x20, 0x6E, 0x41, 0x20, 0x6E, 0x41, 0x20, 0x6E, 0x41, 0x20, 0x6E, 0x41, 0x20, 0x6E, 0x41, 
   0x20, 0x6E, 0x41, 0x20, 0x6E, 0x41, 0x20, 0x6E, 0x41, 0x20, 0x6E, 0x41, 0x20, 0x6F, 0x42, 0x21, 
   0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x22, 0x6F, 0x41, 0x22, 0x6F, 0x41, 0x22, 0x6F, 
   0x41, 0x22, 0x6F, 0x41, 0x22, 0x6F, 0x41, 0x22, 0x6F, 0x41, 0x22, 0x6F, 0x42, 0x21, 0x6F, 0x42, 
   0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6D, 0x40, 0x1F, 0x6D, 0x40, 0x1F, 0x6E, 0x41, 0x20, 
   0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 
   0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 
   0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 
   0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 
   0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x70, 0x42, 0x21, 0x70, 0x41, 
   0x21, 0x70, 0x41, 0x21, 0x71, 0x42, 0x22, 0x71, 0x42, 0x22, 0x71, 0x42, 0x22, 0x71, 0x42, 0x22, 
   0x71, 0x42, 0x22, 0x71, 0x42, 0x22, 0x71, 0x42, 0x22, 0x70, 0x41, 0x21, 0x70, 0x41, 0x21, 0x72, 
   0x43, 0x23, 0x72, 0x44, 0x24, 0x72, 0x45, 0x24, 0x72, 0x45, 0x24, 0x72, 0x45, 0x24, 0x71, 0x44, 
   0x23, 0x71, 0x44, 0x23, 0x71, 0x44, 0x23, 0x71, 0x44, 0x22, 0x72, 0x45, 0x23, 0x73, 0x46, 0x25, 
   0x74, 0x46, 0x27, 0x74, 0x45, 0x29, 0x76, 0x46, 0x2B, 0x75, 0x49, 0x2B, 0x72, 0x49, 0x2B, 0x72, 
   0x48, 0x2C, 0x74, 0x49, 0x2E, 0x75, 0x49, 0x30, 0x77, 0x4A, 0x33, 0x78, 0x4C, 0x34, 0x7A, 0x4D, 
   0x36, 0x7C, 0x4E, 0x38, 0x7D, 0x4F, 0x3A, 0x7F, 0x55, 0x42, 0x7C, 0x5C, 0x4C, 0x4A, 0x33, 0x22, 
   0x37, 0x22, 0x14, 0x44, 0x2D, 0x22, 0x6E, 0x46, 0x2D, 0x6E, 0x46, 0x2D, 0x6E, 0x46, 0x2D, 0x6E, 
   0x46, 0x2D, 0x6E, 0x46, 0x2D, 0x6E, 0x46, 0x2D, 0x6E, 0x46, 0x2D, 0x6E, 0x46, 0x2D, 0x6E, 0x46, 
   0x2D, 0x6E, 0x46, 0x2D, 0x6E, 0x46, 0x2D, 0x6E, 0x46, 0x2D, 0x6E, 0x46, 0x2D, 0x6E, 0x46, 0x2D, 
   0x6E, 0x46, 0x2D, 0x6E, 0x46, 0x2D, 0x6E, 0x46, 0x2D, 0x6E, 0x46, 0x2D, 0x6E, 0x46, 0x2D, 0x6E, 
   0x46, 0x2D, 0x6E, 0x45, 0x2C, 0x6E, 0x45, 0x2C, 0x6E, 0x45, 0x2C, 0x6E, 0x45, 0x2C, 0x6B, 0x42, 
   0x29, 0x6B, 0x42, 0x29, 0x6C, 0x43, 0x2A, 0x6B, 0x42, 0x29, 0x6B, 0x42, 0x29, 0x6C, 0x43, 0x2A, 
   0x6C, 0x43, 0x2A, 0x6C, 0x43, 0x2A, 0x6C, 0x43, 0x2A, 0x6C, 0x43, 0x28, 0x6C, 0x43, 0x28, 0x6C, 
   0x43, 0x28, 0x6C, 0x43, 0x28, 0x6C, 0x43, 0x28, 0x6C, 0x43, 0x28, 0x6D, 0x44, 0x2A, 0x6D, 0x44, 
   0x2B, 0x6D, 0x44, 0x2B, 0x6D, 0x44, 0x2B, 0x6D, 0x44, 0x2B, 0x6D, 0x44, 0x2B, 0x6D, 0x44, 0x2B, 
   0x70, 0x44, 0x2C, 0x70, 0x44, 0x2C, 0x71, 0x45, 0x2D, 0x71, 0x45, 0x2D, 0x71, 0x45, 0x2D, 0x71, 
   0x45, 0x2D, 0x71, 0x45, 0x2E, 0x72, 0x46, 0x2F, 0x70, 0x46, 0x2E, 0x74, 0x4A, 0x35, 0x75, 0x4C, 
   0x37, 0x77, 0x4E, 0x3C, 0x78, 0x52, 0x3F, 0x78, 0x54, 0x45, 0x78, 0x56, 0x46, 0x7D, 0x5A, 0x4B, 
   0x81, 0x5F, 0x50, 0x84, 0x62, 0x53, 0x87, 0x64, 0x55, 0x87, 0x64, 0x55, 0x89, 0x64, 0x56, 0x89, 
   0x63, 0x56, 0x8A, 0x65, 0x57, 0x89, 0x64, 0x56, 0x89, 0x64, 0x56, 0x87, 0x62, 0x55, 0x86, 0x62, 
   0x50, 0x84, 0x61, 0x4F, 0x84, 0x60, 0x4F, 0x82, 0x5E, 0x4D, 0x81, 0x5D, 0x4C, 0x7B, 0x58, 0x47, 
   0x7D, 0x58, 0x44, 0x80, 0x58, 0x43, 0x7C, 0x55, 0x3F, 0x7B, 0x54, 0x3E, 0x78, 0x51, 0x3B, 0x77, 
   0x50, 0x3A, 0x77, 0x50, 0x3A, 0x78, 0x50, 0x39, 0x77, 0x4E, 0x38, 0x77, 0x4E, 0x37, 0x77, 0x4E, 
   0x37, 0x77, 0x4E, 0x38, 0x79, 0x50, 0x39, 0x7A, 0x50, 0x39, 0x7A, 0x4F, 0x38, 0x77, 0x4D, 0x36, 
   0x76, 0x4C, 0x35, 0x76, 0x4C, 0x35, 0x76, 0x4C, 0x35, 0x76, 0x4C, 0x35, 0x75, 0x4C, 0x33, 0x75, 
   0x4C, 0x33, 0x73, 0x4A, 0x31, 0x72, 0x49, 0x30, 0x73, 0x4A, 0x31, 0x74, 0x4B, 0x32, 0x75, 0x4B, 
   0x31, 0x75, 0x4A, 0x2F, 0x74, 0x49, 0x2E, 0x73, 0x48, 0x2D, 0x72, 0x47, 0x2C, 0x71, 0x46, 0x2B, 
   0x71, 0x46, 0x2B, 0x73, 0x46, 0x2B, 0x73, 0x46, 0x2B, 0x71, 0x44, 0x29, 0x72, 0x45, 0x2A, 0x71, 
   0x44, 0x29, 0x70, 0x43, 0x28, 0x71, 0x44, 0x28, 0x71, 0x44, 0x28, 0x71, 0x44, 0x28, 0x71, 0x44, 
   0x28, 0x70, 0x43, 0x27, 0x70, 0x43, 0x27, 0x70, 0x43, 0x27, 0x70, 0x43, 0x27, 0x70, 0x43, 0x27, 
   0x70, 0x43, 0x27, 0x70, 0x43, 0x27, 0x70, 0x43, 0x27, 0x70, 0x43, 0x27, 0x6F, 0x42, 0x26, 0x6E, 
   0x41, 0x25, 0x6E, 0x41, 0x25, 0x6E, 0x41, 0x25, 0x6E, 0x41, 0x25, 0x6E, 0x41, 0x25, 0x6E, 0x41, 
   0x25, 0x6F, 0x41, 0x22, 0x6F, 0x41, 0x22, 0x6F, 0x41, 0x22, 0x6F, 0x41, 0x22, 0x6F, 0x41, 0x22, 
   0x6F, 0x41, 0x22, 0x6F, 0x41, 0x22, 0x6F, 0x41, 0x22, 0x6F, 0x41, 0x22, 0x6F, 0x41, 0x22, 0x6E, 
   0x40, 0x21, 0x6E, 0x40, 0x21, 0x6E, 0x40, 0x21, 0x6E, 0x40, 0x21, 0x6E, 0x40, 0x21, 0x6E, 0x40, 
   0x21, 0x6E, 0x40, 0x21, 0x6E, 0x40, 0x21, 0x6E, 0x40, 0x21, 0x6E, 0x41, 0x21, 0x6E, 0x41, 0x20, 
   0x6E, 0x41, 0x20, 0x6E, 0x41, 0x20, 0x6D, 0x40, 0x1F, 0x6D, 0x40, 0x1F, 0x6D, 0x40, 0x1F, 0x6D, 
   0x40, 0x1F, 0x6D, 0x40, 0x1F, 0x6D, 0x40, 0x1F, 0x6E, 0x41, 0x20, 0x6E, 0x41, 0x20, 0x6E, 0x41, 
   0x20, 0x6E, 0x41, 0x20, 0x6E, 0x41, 0x20, 0x6E, 0x41, 0x20, 0x6E, 0x41, 0x20, 0x6E, 0x41, 0x20, 
   0x6E, 0x41, 0x20, 0x6E, 0x41, 0x20, 0x6E, 0x41, 0x21, 0x6E, 0x40, 0x21, 0x6E, 0x40, 0x21, 0x6F, 
   0x41, 0x22, 0x6F, 0x41, 0x22, 0x6F, 0x41, 0x22, 0x6F, 0x41, 0x22, 0x6F, 0x42, 0x21, 0x6F, 0x42, 
   0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6D, 0x40, 0x1F, 0x6D, 0x40, 0x1F, 0x6E, 0x41, 0x20, 
   0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 
   0x42, 0x21, 0x6E, 0x41, 0x20, 0x6E, 0x41, 0x20, 0x6E, 0x41, 0x20, 0x6E, 0x41, 0x20, 0x6E, 0x41, 
   0x20, 0x6E, 0x41, 0x20, 0x6E, 0x41, 0x20, 0x6E, 0x41, 0x20, 0x6E, 0x41, 0x20, 0x6E, 0x41, 0x20, 
   0x6E, 0x41, 0x20, 0x6E, 0x41, 0x20, 0x6E, 0x41, 0x20, 0x6E, 0x41, 0x20, 0x6E, 0x41, 0x20, 0x6E, 
   0x41, 0x20, 0x6E, 0x41, 0x20, 0x6E, 0x41, 0x20, 0x6E, 0x41, 0x20, 0x6F, 0x41, 0x20, 0x6F, 0x40, 
   0x20, 0x6F, 0x40, 0x20, 0x70, 0x41, 0x21, 0x71, 0x42, 0x22, 0x71, 0x42, 0x22, 0x71, 0x42, 0x22, 
   0x70, 0x41, 0x21, 0x70, 0x41, 0x21, 0x70, 0x41, 0x21, 0x70, 0x41, 0x21, 0x71, 0x42, 0x22, 0x72, 
   0x43, 0x23, 0x72, 0x44, 0x24, 0x72, 0x45, 0x24, 0x72, 0x45, 0x24, 0x72, 0x45, 0x24, 0x71, 0x44, 
   0x23, 0x71, 0x44, 0x23, 0x71, 0x44, 0x23, 0x71, 0x44, 0x22, 0x72, 0x45, 0x23, 0x73, 0x46, 0x25, 
   0x73, 0x46, 0x26, 0x74, 0x46, 0x28, 0x75, 0x45, 0x29, 0x75, 0x49, 0x2B, 0x73, 0x4A, 0x2B, 0x72, 
   0x49, 0x2B, 0x73, 0x49, 0x2D, 0x74, 0x49, 0x30, 0x76, 0x4A, 0x32, 0x78, 0x4C, 0x34, 0x76, 0x4D, 
   0x33, 0x7A, 0x4C, 0x35, 0x7C, 0x4D, 0x37, 0x7F, 0x51, 0x3E, 0x7D, 0x59, 0x47, 0x73, 0x58, 0x47, 
   0x52, 0x38, 0x2B, 0x42, 0x2A, 0x1E, 0x6E, 0x46, 0x2D, 0x6E, 0x46, 0x2D, 0x6E, 0x46, 0x2D, 0x6E, 
   0x46, 0x2D, 0x6E, 0x46, 0x2D, 0x6E, 0x46, 0x2D, 0x6E, 0x46, 0x2D, 0x6E, 0x46, 0x2D, 0x6E, 0x46, 
   0x2D, 0x6E, 0x46, 0x2D, 0x6E, 0x46, 0x2D, 0x6E, 0x46, 0x2D, 0x6E, 0x46, 0x2D, 0x6F, 0x46, 0x2D, 
   0x6E, 0x45, 0x2C, 0x6D, 0x45, 0x2C, 0x6E, 0x45, 0x2C, 0x6E, 0x45, 0x2C, 0x6E, 0x45, 0x2C, 0x6E, 
   0x45, 0x2C, 0x6D, 0x44, 0x2B, 0x6D, 0x44, 0x2B, 0x6D, 0x44, 0x2B, 0x6D, 0x44, 0x2B, 0x6A, 0x41, 
   0x28, 0x6A, 0x41, 0x28, 0x6A, 0x41, 0x28, 0x6A, 0x41, 0x27, 0x6A, 0x41, 0x27, 0x6B, 0x42, 0x28, 
   0x6B, 0x42, 0x28, 0x6B, 0x42, 0x28, 0x6B, 0x42, 0x28, 0x6B, 0x42, 0x27, 0x6B, 0x42, 0x27, 0x6B, 
   0x42, 0x27, 0x6B, 0x42, 0x27, 0x6B, 0x42, 0x27, 0x6B, 0x42, 0x27, 0x6C, 0x43, 0x28, 0x6C, 0x43, 
   0x29, 0x6C, 0x43, 0x29, 0x6C, 0x43, 0x29, 0x6C, 0x43, 0x29, 0x6C, 0x43, 0x29, 0x6C, 0x43, 0x29, 
   0x6D, 0x42, 0x29, 0x6E, 0x44, 0x2A, 0x70, 0x46, 0x2C, 0x70, 0x46, 0x2C, 0x70, 0x46, 0x2C, 0x70, 
   0x45, 0x2C, 0x70, 0x45, 0x2C, 0x70, 0x46, 0x2D, 0x6F, 0x45, 0x2D, 0x72, 0x48, 0x31, 0x74, 0x4B, 
   0x34, 0x74, 0x4B, 0x35, 0x75, 0x4C, 0x37, 0x70, 0x4D, 0x3A, 0x74, 0x50, 0x3E, 0x79, 0x55, 0x43, 
   0x7B, 0x57, 0x45, 0x7F, 0x5C, 0x4A, 0x82, 0x5F, 0x4D, 0x82, 0x5E, 0x4D, 0x82, 0x5E, 0x4E, 0x84, 
   0x5F, 0x4F, 0x87, 0x63, 0x53, 0x88, 0x63, 0x53, 0x86, 0x62, 0x52, 0x86, 0x61, 0x51, 0x83, 0x5F, 
   0x4B, 0x82, 0x5E, 0x4A, 0x81, 0x5C, 0x49, 0x7F, 0x5B, 0x48, 0x7D, 0x59, 0x46, 0x7A, 0x55, 0x43, 
   0x7C, 0x56, 0x40, 0x7F, 0x57, 0x3F, 0x7C, 0x54, 0x3C, 0x7A, 0x52, 0x3A, 0x78, 0x50, 0x38, 0x77, 
   0x4F, 0x38, 0x78, 0x4F, 0x37, 0x77, 0x4E, 0x36, 0x77, 0x4E, 0x36, 0x76, 0x4D, 0x34, 0x74, 0x4B, 
   0x33, 0x75, 0x4C, 0x34, 0x76, 0x4D, 0x35, 0x77, 0x4E, 0x35, 0x77, 0x4D, 0x34, 0x75, 0x4B, 0x32, 
   0x74, 0x4A, 0x31, 0x74, 0x4A, 0x31, 0x74, 0x4A, 0x31, 0x74, 0x4A, 0x31, 0x75, 0x4B, 0x31, 0x75, 
   0x4A, 0x30, 0x74, 0x4A, 0x30, 0x74, 0x4A, 0x2F, 0x73, 0x49, 0x2F, 0x74, 0x4A, 0x30, 0x75, 0x4B, 
   0x30, 0x74, 0x49, 0x2E, 0x71, 0x46, 0x2B, 0x71, 0x46, 0x2B, 0x71, 0x46, 0x2B, 0x70, 0x45, 0x2A, 
   0x6F, 0x44, 0x29, 0x72, 0x45, 0x2A, 0x71, 0x44, 0x29, 0x71, 0x44, 0x29, 0x71, 0x44, 0x29, 0x71, 
   0x44, 0x29, 0x71, 0x44, 0x29, 0x71, 0x44, 0x28, 0x70, 0x43, 0x27, 0x70, 0x43, 0x27, 0x70, 0x43, 
   0x27, 0x70, 0x43, 0x27, 0x70, 0x43, 0x27, 0x70, 0x43, 0x27, 0x70, 0x43, 0x27, 0x70, 0x43, 0x27, 
   0x70, 0x43, 0x27, 0x70, 0x43, 0x27, 0x6F, 0x42, 0x26, 0x6F, 0x42, 0x26, 0x6F, 0x42, 0x26, 0x6E, 
   0x41, 0x25, 0x6E, 0x41, 0x25, 0x6E, 0x41, 0x25, 0x6F, 0x42, 0x26, 0x6D, 0x40, 0x24, 0x6D, 0x40, 
   0x24, 0x6E, 0x40, 0x23, 0x6E, 0x40, 0x23, 0x6E, 0x40, 0x23, 0x6E, 0x40, 0x23, 0x6E, 0x40, 0x23, 
   0x6E, 0x40, 0x23, 0x6E, 0x42, 0x23, 0x6E, 0x42, 0x22, 0x6D, 0x40, 0x21, 0x6E, 0x41, 0x22, 0x6C, 
   0x3F, 0x20, 0x6C, 0x3F, 0x20, 0x6C, 0x3F, 0x20, 0x6D, 0x40, 0x21, 0x6E, 0x40, 0x21, 0x6E, 0x40, 
   0x21, 0x6E, 0x40, 0x21, 0x6E, 0x40, 0x21, 0x6E, 0x40, 0x21, 0x6E, 0x40, 0x21, 0x6E, 0x40, 0x21, 
   0x6E, 0x40, 0x21, 0x6E, 0x40, 0x21, 0x6E, 0x41, 0x21, 0x6E, 0x41, 0x21, 0x6E, 0x41, 0x21, 0x6E, 
   0x41, 0x21, 0x6E, 0x41, 0x21, 0x6E, 0x41, 0x21, 0x6F, 0x41, 0x21, 0x6E, 0x40, 0x21, 0x6E, 0x40, 
   0x21, 0x6E, 0x40, 0x21, 0x6E, 0x40, 0x21, 0x6D, 0x40, 0x20, 0x6D, 0x3F, 0x1F, 0x6E, 0x41, 0x21, 
   0x6F, 0x41, 0x21, 0x6E, 0x40, 0x21, 0x6D, 0x40, 0x20, 0x6D, 0x3F, 0x20, 0x6D, 0x3F, 0x20, 0x6E, 
   0x40, 0x21, 0x6F, 0x41, 0x22, 0x6F, 0x41, 0x22, 0x6F, 0x41, 0x22, 0x6F, 0x41, 0x22, 0x6F, 0x41, 
   0x22, 0x6F, 0x41, 0x22, 0x6E, 0x41, 0x21, 0x6E, 0x40, 0x20, 0x6E, 0x40, 0x20, 0x6F, 0x41, 0x21, 
   0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6E, 0x41, 0x20, 0x6E, 0x41, 0x20, 0x6E, 
   0x41, 0x20, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 
   0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 
   0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 
   0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x41, 
   0x21, 0x6F, 0x41, 0x21, 0x6F, 0x42, 0x21, 0x70, 0x42, 0x21, 0x70, 0x42, 0x21, 0x70, 0x42, 0x21, 
   0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x70, 0x42, 0x22, 0x70, 0x43, 0x22, 0x71, 
   0x43, 0x22, 0x71, 0x44, 0x23, 0x71, 0x44, 0x23, 0x71, 0x44, 0x23, 0x71, 0x44, 0x23, 0x71, 0x44, 
   0x23, 0x71, 0x44, 0x23, 0x71, 0x44, 0x23, 0x72, 0x45, 0x23, 0x72, 0x45, 0x24, 0x72, 0x45, 0x24, 
   0x72, 0x44, 0x24, 0x72, 0x45, 0x25, 0x75, 0x47, 0x27, 0x75, 0x49, 0x2A, 0x74, 0x49, 0x29, 0x74, 
   0x48, 0x29, 0x75, 0x49, 0x2B, 0x77, 0x4A, 0x2D, 0x78, 0x4B, 0x2F, 0x79, 0x4C, 0x30, 0x76, 0x4B, 
   0x30, 0x77, 0x4A, 0x31, 0x79, 0x4A, 0x33, 0x7D, 0x4F, 0x39, 0x7C, 0x52, 0x3E, 0x7B, 0x54, 0x40, 
   0x79, 0x56, 0x46, 0x68, 0x48, 0x3C, 0x6E, 0x46, 0x2D, 0x6E, 0x46, 0x2D, 0x6E, 0x46, 0x2D, 0x6E, 
   0x46, 0x2D, 0x6E, 0x46, 0x2D, 0x6E, 0x46, 0x2D, 0x6E, 0x46, 0x2D, 0x6E, 0x46, 0x2D, 0x6E, 0x46, 
   0x2D, 0x6E, 0x46, 0x2D, 0x6E, 0x46, 0x2D, 0x6E, 0x46, 0x2D, 0x6E, 0x46, 0x2D, 0x6F, 0x46, 0x2D, 
   0x6E, 0x44, 0x2B, 0x6D, 0x44, 0x2B, 0x6E, 0x45, 0x2C, 0x6E, 0x45, 0x2C, 0x6E, 0x45, 0x2C, 0x6E, 
   0x45, 0x2C, 0x6D, 0x44, 0x2B, 0x6D, 0x44, 0x2B, 0x6D, 0x44, 0x2B, 0x6C, 0x43, 0x2A, 0x69, 0x40, 
   0x27, 0x69, 0x40, 0x27, 0x6A, 0x41, 0x27, 0x6A, 0x41, 0x26, 0x6A, 0x41, 0x26, 0x6B, 0x42, 0x27, 
   0x6B, 0x42, 0x27, 0x6B, 0x42, 0x27, 0x6B, 0x42, 0x27, 0x6B, 0x42, 0x27, 0x6B, 0x42, 0x27, 0x6B, 
   0x42, 0x27, 0x6A, 0x41, 0x26, 0x6A, 0x41, 0x26, 0x6A, 0x41, 0x26, 0x6B, 0x42, 0x27, 0x6B, 0x42, 
   0x27, 0x6B, 0x42, 0x27, 0x6B, 0x42, 0x27, 0x6B, 0x42, 0x27, 0x6B, 0x42, 0x27, 0x6B, 0x42, 0x27, 
   0x6B, 0x42, 0x27, 0x6D, 0x44, 0x29, 0x6F, 0x46, 0x2B, 0x6F, 0x46, 0x2B, 0x6F, 0x46, 0x2B, 0x6F, 
   0x46, 0x2B, 0x6F, 0x46, 0x2C, 0x6F, 0x46, 0x2D, 0x6F, 0x46, 0x2D, 0x70, 0x47, 0x2E, 0x72, 0x49, 
   0x2F, 0x73, 0x4A, 0x30, 0x73, 0x4B, 0x31, 0x6E, 0x49, 0x35, 0x73, 0x4E, 0x39, 0x77, 0x52, 0x3E, 
   0x78, 0x53, 0x3F, 0x7D, 0x58, 0x44, 0x7F, 0x5A, 0x46, 0x7E, 0x59, 0x46, 0x7C, 0x58, 0x47, 0x7C, 
   0x58, 0x46, 0x80, 0x5C, 0x4A, 0x82, 0x5E, 0x4C, 0x82, 0x5E, 0x4C, 0x82, 0x5D, 0x4B, 0x7F, 0x5A, 
   0x46, 0x7F, 0x59, 0x45, 0x7D, 0x58, 0x44, 0x7C, 0x57, 0x43, 0x78, 0x53, 0x3F, 0x77, 0x52, 0x3E, 
   0x79, 0x52, 0x3C, 0x7C, 0x52, 0x39, 0x7B, 0x52, 0x38, 0x77, 0x4E, 0x35, 0x75, 0x4C, 0x33, 0x75, 
   0x4C, 0x33, 0x75, 0x4C, 0x33, 0x75, 0x4C, 0x33, 0x74, 0x4B, 0x32, 0x73, 0x4A, 0x31, 0x74, 0x4B, 
   0x32, 0x74, 0x4B, 0x32, 0x76, 0x4D, 0x34, 0x76, 0x4D, 0x32, 0x74, 0x4C, 0x30, 0x73, 0x4A, 0x2F, 
   0x73, 0x4A, 0x2E, 0x73, 0x4A, 0x2E, 0x73, 0x4A, 0x2E, 0x73, 0x4A, 0x2E, 0x75, 0x4A, 0x2E, 0x75, 
   0x4A, 0x2F, 0x75, 0x4A, 0x2F, 0x75, 0x4A, 0x2F, 0x74, 0x49, 0x2E, 0x74, 0x49, 0x2D, 0x75, 0x4A, 
   0x2F, 0x74, 0x49, 0x2E, 0x70, 0x45, 0x2A, 0x70, 0x45, 0x2A, 0x70, 0x45, 0x2A, 0x6F, 0x44, 0x29, 
   0x6E, 0x43, 0x28, 0x71, 0x44, 0x29, 0x71, 0x44, 0x29, 0x71, 0x44, 0x29, 0x71, 0x44, 0x29, 0x71, 
   0x44, 0x29, 0x71, 0x44, 0x29, 0x71, 0x44, 0x28, 0x70, 0x43, 0x27, 0x70, 0x43, 0x27, 0x70, 0x43, 
   0x27, 0x70, 0x43, 0x27, 0x70, 0x43, 0x27, 0x70, 0x43, 0x27, 0x70, 0x43, 0x27, 0x70, 0x43, 0x27, 
   0x70, 0x43, 0x27, 0x70, 0x43, 0x27, 0x6F, 0x42, 0x26, 0x6F, 0x42, 0x26, 0x6F, 0x42, 0x26, 0x6E, 
   0x41, 0x25, 0x6E, 0x41, 0x25, 0x6E, 0x41, 0x25, 0x6F, 0x42, 0x26, 0x6D, 0x40, 0x24, 0x6D, 0x40, 
   0x24, 0x6D, 0x40, 0x24, 0x6D, 0x40, 0x24, 0x6D, 0x40, 0x24, 0x6D, 0x40, 0x24, 0x6D, 0x40, 0x24, 
   0x6D, 0x40, 0x24, 0x6E, 0x42, 0x24, 0x6E, 0x42, 0x23, 0x6C, 0x40, 0x21, 0x6C, 0x40, 0x21, 0x6B, 
   0x3F, 0x20, 0x6B, 0x3F, 0x20, 0x6B, 0x3F, 0x20, 0x6D, 0x40, 0x21, 0x6E, 0x40, 0x21, 0x6E, 0x40, 
   0x21, 0x6E, 0x40, 0x21, 0x6E, 0x40, 0x21, 0x6E, 0x40, 0x21, 0x6E, 0x40, 0x21, 0x6E, 0x40, 0x21, 
   0x6E, 0x40, 0x21, 0x6E, 0x40, 0x21, 0x6F, 0x41, 0x22, 0x6F, 0x41, 0x22, 0x6F, 0x41, 0x22, 0x6F, 
   0x41, 0x22, 0x6F, 0x41, 0x22, 0x6F, 0x41, 0x22, 0x6F, 0x41, 0x22, 0x6E, 0x40, 0x21, 0x6E, 0x40, 
   0x21, 0x6E, 0x40, 0x21, 0x6E, 0x40, 0x21, 0x6D, 0x3F, 0x20, 0x6C, 0x3E, 0x1F, 0x6E, 0x40, 0x21, 
   0x6F, 0x41, 0x22, 0x6E, 0x40, 0x21, 0x6D, 0x3F, 0x20, 0x6D, 0x3F, 0x20, 0x6D, 0x3F, 0x20, 0x6E, 
   0x40, 0x21, 0x6F, 0x41, 0x22, 0x6F, 0x41, 0x22, 0x6F, 0x41, 0x22, 0x6F, 0x41, 0x22, 0x6F, 0x41, 
   0x22, 0x6F, 0x41, 0x22, 0x6E, 0x40, 0x21, 0x6E, 0x40, 0x21, 0x6E, 0x40, 0x21, 0x6F, 0x41, 0x21, 
   0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6E, 0x41, 0x20, 0x6E, 0x41, 0x20, 0x6E, 
   0x41, 0x20, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 
   0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 
   0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 
   0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 
   0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 
   0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 0x70, 
   0x43, 0x22, 0x71, 0x44, 0x23, 0x71, 0x44, 0x23, 0x71, 0x44, 0x23, 0x71, 0x44, 0x23, 0x71, 0x44, 
   0x23, 0x71, 0x44, 0x23, 0x71, 0x44, 0x23, 0x72, 0x45, 0x24, 0x72, 0x45, 0x24, 0x72, 0x45, 0x24, 
   0x72, 0x45, 0x24, 0x72, 0x45, 0x24, 0x74, 0x47, 0x26, 0x76, 0x48, 0x28, 0x76, 0x48, 0x29, 0x76, 
   0x48, 0x29, 0x77, 0x48, 0x29, 0x78, 0x4A, 0x2A, 0x79, 0x4B, 0x2B, 0x7A, 0x4C, 0x2C, 0x79, 0x4C, 
   0x30, 0x78, 0x4A, 0x31, 0x79, 0x4B, 0x33, 0x7C, 0x4E, 0x36, 0x7D, 0x4D, 0x38, 0x82, 0x51, 0x3B, 
   0x7D, 0x51, 0x3F, 0x7D, 0x56, 0x49, 0x6D, 0x45, 0x2C, 0x6D, 0x45, 0x2C, 0x6D, 0x45, 0x2C, 0x6D, 
   0x45, 0x2C, 0x6D, 0x45, 0x2C, 0x6D, 0x45, 0x2C, 0x6E, 0x46, 0x2D, 0x6E, 0x46, 0x2D, 0x6E, 0x46, 
   0x2D, 0x6E, 0x46, 0x2D, 0x6D, 0x45, 0x2C, 0x6D, 0x45, 0x2C, 0x6D, 0x45, 0x2C, 0x6E, 0x45, 0x2C, 
   0x6D, 0x44, 0x2B, 0x6D, 0x44, 0x2B, 0x6D, 0x44, 0x2B, 0x6D, 0x44, 0x2B, 0x6D, 0x44, 0x2B, 0x6D, 
   0x44, 0x2B, 0x6C, 0x43, 0x2A, 0x6C, 0x43, 0x2A, 0x6C, 0x43, 0x2A, 0x6C, 0x43, 0x2A, 0x69, 0x40, 
   0x27, 0x69, 0x40, 0x27, 0x6A, 0x41, 0x27, 0x6A, 0x41, 0x26, 0x6A, 0x41, 0x26, 0x6A, 0x41, 0x26, 
   0x6A, 0x41, 0x26, 0x6A, 0x41, 0x26, 0x6A, 0x41, 0x26, 0x6A, 0x41, 0x26, 0x6A, 0x41, 0x26, 0x6A, 
   0x41, 0x26, 0x6A, 0x41, 0x26, 0x6A, 0x41, 0x26, 0x6A, 0x41, 0x26, 0x6B, 0x42, 0x27, 0x6B, 0x42, 
   0x27, 0x6B, 0x42, 0x27, 0x6B, 0x42, 0x27, 0x6B, 0x42, 0x27, 0x6B, 0x42, 0x27, 0x6B, 0x42, 0x27, 
   0x6B, 0x42, 0x27, 0x6C, 0x43, 0x28, 0x6D, 0x44, 0x29, 0x6E, 0x45, 0x2A, 0x6E, 0x45, 0x2A, 0x6E, 
   0x45, 0x2A, 0x6E, 0x45, 0x2B, 0x6E, 0x45, 0x2C, 0x6E, 0x45, 0x2C, 0x6F, 0x46, 0x2D, 0x70, 0x47, 
   0x2E, 0x71, 0x48, 0x2F, 0x71, 0x49, 0x30, 0x6D, 0x48, 0x34, 0x70, 0x4B, 0x37, 0x74, 0x4E, 0x3A, 
   0x73, 0x4E, 0x3A, 0x77, 0x52, 0x3D, 0x78, 0x52, 0x3E, 0x79, 0x53, 0x40, 0x77, 0x53, 0x40, 0x75, 
   0x50, 0x3E, 0x75, 0x51, 0x3F, 0x7A, 0x55, 0x43, 0x7D, 0x58, 0x46, 0x7B, 0x56, 0x43, 0x7A, 0x54, 
   0x40, 0x7A, 0x54, 0x40, 0x79, 0x54, 0x40, 0x79, 0x53, 0x3F, 0x76, 0x50, 0x3C, 0x74, 0x50, 0x3C, 
   0x76, 0x4F, 0x39, 0x78, 0x4E, 0x35, 0x76, 0x4D, 0x34, 0x73, 0x4A, 0x31, 0x73, 0x4A, 0x31, 0x73, 
   0x4A, 0x31, 0x73, 0x4A, 0x31, 0x73, 0x4A, 0x31, 0x72, 0x49, 0x30, 0x71, 0x48, 0x2F, 0x72, 0x49, 
   0x30, 0x72, 0x49, 0x30, 0x74, 0x4B, 0x32, 0x74, 0x4B, 0x31, 0x73, 0x4A, 0x2F, 0x72, 0x49, 0x2E, 
   0x71, 0x48, 0x2D, 0x71, 0x48, 0x2D, 0x71, 0x48, 0x2D, 0x71, 0x48, 0x2D, 0x73, 0x48, 0x2D, 0x73, 
   0x48, 0x2D, 0x73, 0x48, 0x2D, 0x73, 0x48, 0x2D, 0x72, 0x47, 0x2C, 0x72, 0x47, 0x2C, 0x73, 0x48, 
   0x2D, 0x72, 0x47, 0x2C, 0x70, 0x45, 0x2A, 0x70, 0x45, 0x2A, 0x70, 0x45, 0x2A, 0x6F, 0x44, 0x29, 
   0x6E, 0x43, 0x28, 0x70, 0x43, 0x28, 0x70, 0x43, 0x28, 0x70, 0x43, 0x28, 0x70, 0x43, 0x28, 0x70, 
   0x43, 0x28, 0x70, 0x43, 0x28, 0x70, 0x43, 0x27, 0x6F, 0x42, 0x26, 0x6F, 0x42, 0x26, 0x6F, 0x42, 
   0x26, 0x6F, 0x42, 0x26, 0x6F, 0x42, 0x26, 0x6F, 0x42, 0x26, 0x70, 0x43, 0x27, 0x70, 0x43, 0x27, 
   0x70, 0x43, 0x27, 0x70, 0x43, 0x27, 0x6F, 0x42, 0x26, 0x6F, 0x42, 0x26, 0x6F, 0x42, 0x26, 0x6E, 
   0x41, 0x25, 0x6E, 0x41, 0x25, 0x6E, 0x41, 0x25, 0x6E, 0x41, 0x25, 0x6C, 0x3F, 0x23, 0x6C, 0x3F, 
   0x23, 0x6C, 0x3F, 0x23, 0x6C, 0x3F, 0x23, 0x6C, 0x3F, 0x23, 0x6D, 0x40, 0x24, 0x6D, 0x40, 0x24, 
   0x6D, 0x40, 0x24, 0x6E, 0x41, 0x24, 0x6D, 0x41, 0x22, 0x6B, 0x3F, 0x20, 0x6C, 0x40, 0x21, 0x6B, 
   0x3F, 0x20, 0x6B, 0x3F, 0x20, 0x6B, 0x3F, 0x20, 0x6C, 0x3F, 0x20, 0x6D, 0x3F, 0x20, 0x6D, 0x3F, 
   0x20, 0x6D, 0x3F, 0x20, 0x6D, 0x3F, 0x20, 0x6D, 0x3F, 0x20, 0x6D, 0x3F, 0x20, 0x6D, 0x3F, 0x20, 
   0x6D, 0x3F, 0x20, 0x6D, 0x3F, 0x20, 0x6D, 0x3F, 0x20, 0x6D, 0x3F, 0x20, 0x6D, 0x3F, 0x20, 0x6E, 
   0x40, 0x21, 0x6E, 0x40, 0x21, 0x6E, 0x40, 0x21, 0x6E, 0x40, 0x21, 0x6E, 0x40, 0x21, 0x6E, 0x40, 
   0x21, 0x6E, 0x40, 0x21, 0x6E, 0x40, 0x21, 0x6D, 0x3F, 0x20, 0x6C, 0x3E, 0x1F, 0x6D, 0x3F, 0x20, 
   0x6E, 0x40, 0x21, 0x6D, 0x3F, 0x20, 0x6C, 0x3E, 0x1F, 0x6D, 0x3F, 0x20, 0x6D, 0x3F, 0x20, 0x6E, 
   0x40, 0x21, 0x6E, 0x40, 0x21, 0x6E, 0x40, 0x21, 0x6E, 0x40, 0x21, 0x6E, 0x40, 0x21, 0x6E, 0x40, 
   0x21, 0x6E, 0x40, 0x21, 0x6E, 0x40, 0x21, 0x6E, 0x40, 0x21, 0x6E, 0x40, 0x21, 0x6F, 0x41, 0x21, 
   0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6E, 0x41, 0x20, 0x6E, 0x41, 0x20, 0x6E, 
   0x41, 0x20, 0x6E, 0x41, 0x20, 0x6E, 0x41, 0x20, 0x6E, 0x41, 0x20, 0x6E, 0x41, 0x20, 0x6E, 0x41, 
   0x20, 0x6E, 0x41, 0x20, 0x6E, 0x41, 0x20, 0x6E, 0x41, 0x20, 0x6E, 0x41, 0x20, 0x6E, 0x41, 0x20, 
   0x6E, 0x41, 0x20, 0x6E, 0x41, 0x20, 0x6E, 0x41, 0x20, 0x6E, 0x41, 0x20, 0x6E, 0x41, 0x20, 0x6E, 
   0x41, 0x20, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 
   0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 
   0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 
   0x42, 0x21, 0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 0x70, 0x43, 
   0x22, 0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 0x71, 0x44, 0x23, 0x71, 0x44, 0x23, 0x71, 0x44, 0x23, 
   0x71, 0x44, 0x23, 0x71, 0x44, 0x23, 0x73, 0x46, 0x25, 0x74, 0x46, 0x26, 0x74, 0x46, 0x27, 0x75, 
   0x47, 0x28, 0x75, 0x47, 0x28, 0x77, 0x49, 0x2A, 0x78, 0x4A, 0x2A, 0x78, 0x4A, 0x2B, 0x77, 0x4A, 
   0x2E, 0x77, 0x49, 0x30, 0x78, 0x4A, 0x32, 0x7A, 0x4C, 0x35, 0x7B, 0x4C, 0x36, 0x7F, 0x4F, 0x3A, 
   0x7B, 0x4F, 0x3C, 0x7A, 0x52, 0x42, 0x6C, 0x44, 0x2B, 0x6C, 0x44, 0x2B, 0x6C, 0x44, 0x2B, 0x6C, 
   0x44, 0x2B, 0x6C, 0x44, 0x2B, 0x6C, 0x44, 0x2B, 0x6D, 0x45, 0x2C, 0x6E, 0x46, 0x2D, 0x6E, 0x46, 
   0x2D, 0x6E, 0x46, 0x2D, 0x6C, 0x44, 0x2B, 0x6C, 0x44, 0x2B, 0x6C, 0x44, 0x2B, 0x6D, 0x45, 0x2C, 
   0x6D, 0x43, 0x2A, 0x6B, 0x42, 0x29, 0x6C, 0x43, 0x2A, 0x6C, 0x43, 0x2A, 0x6C, 0x43, 0x2A, 0x6C, 
   0x43, 0x2A, 0x6B, 0x42, 0x29, 0x6B, 0x42, 0x29, 0x6B, 0x42, 0x29, 0x6B, 0x42, 0x29, 0x69, 0x40, 
   0x28, 0x69, 0x40, 0x27, 0x6A, 0x41, 0x27, 0x6A, 0x41, 0x26, 0x6A, 0x41, 0x26, 0x6A, 0x41, 0x26, 
   0x69, 0x40, 0x25, 0x69, 0x40, 0x25, 0x69, 0x40, 0x25, 0x69, 0x40, 0x25, 0x69, 0x40, 0x25, 0x69, 
   0x40, 0x25, 0x6A, 0x41, 0x26, 0x6A, 0x41, 0x26, 0x6A, 0x41, 0x26, 0x6B, 0x42, 0x27, 0x6B, 0x42, 
   0x27, 0x6B, 0x42, 0x27, 0x6B, 0x42, 0x27, 0x6B, 0x42, 0x27, 0x6B, 0x42, 0x27, 0x6B, 0x42, 0x27, 
   0x6B, 0x42, 0x27, 0x6B, 0x42, 0x27, 0x6C, 0x43, 0x28, 0x6D, 0x44, 0x29, 0x6D, 0x44, 0x29, 0x6D, 
   0x44, 0x29, 0x6D, 0x44, 0x2A, 0x6D, 0x44, 0x2B, 0x6D, 0x44, 0x2B, 0x6D, 0x44, 0x2B, 0x6E, 0x45, 
   0x2C, 0x6F, 0x46, 0x2D, 0x6F, 0x46, 0x2D, 0x70, 0x48, 0x32, 0x71, 0x4A, 0x34, 0x73, 0x4C, 0x36, 
   0x73, 0x4C, 0x36, 0x75, 0x4E, 0x38, 0x76, 0x4F, 0x39, 0x75, 0x4F, 0x3A, 0x73, 0x4E, 0x3A, 0x72, 
   0x4D, 0x39, 0x73, 0x4E, 0x39, 0x76, 0x51, 0x3C, 0x79, 0x54, 0x3F, 0x76, 0x51, 0x3D, 0x77, 0x50, 
   0x3A, 0x78, 0x51, 0x3A, 0x78, 0x51, 0x3B, 0x77, 0x50, 0x3A, 0x75, 0x4E, 0x38, 0x75, 0x4E, 0x38, 
   0x77, 0x4E, 0x37, 0x77, 0x4E, 0x35, 0x75, 0x4C, 0x33, 0x73, 0x4A, 0x31, 0x74, 0x4B, 0x32, 0x74, 
   0x4B, 0x32, 0x74, 0x4B, 0x32, 0x72, 0x49, 0x30, 0x71, 0x48, 0x2F, 0x71, 0x48, 0x2F, 0x70, 0x47, 
   0x2E, 0x70, 0x47, 0x2E, 0x71, 0x48, 0x2F, 0x72, 0x49, 0x2F, 0x72, 0x49, 0x2E, 0x70, 0x47, 0x2C, 
   0x70, 0x47, 0x2C, 0x70, 0x47, 0x2C, 0x70, 0x47, 0x2C, 0x70, 0x47, 0x2C, 0x72, 0x47, 0x2C, 0x72, 
   0x47, 0x2C, 0x72, 0x47, 0x2C, 0x72, 0x47, 0x2C, 0x71, 0x46, 0x2B, 0x71, 0x46, 0x2B, 0x71, 0x46, 
   0x2B, 0x70, 0x45, 0x2A, 0x70, 0x45, 0x2A, 0x71, 0x46, 0x2B, 0x70, 0x45, 0x2A, 0x6F, 0x44, 0x29, 
   0x6E, 0x43, 0x28, 0x6F, 0x42, 0x27, 0x6F, 0x42, 0x27, 0x6F, 0x42, 0x27, 0x6F, 0x42, 0x27, 0x6F, 
   0x42, 0x27, 0x6F, 0x42, 0x27, 0x6F, 0x42, 0x26, 0x6E, 0x41, 0x25, 0x6E, 0x41, 0x25, 0x6E, 0x41, 
   0x25, 0x6E, 0x41, 0x25, 0x6E, 0x41, 0x25, 0x6E, 0x41, 0x25, 0x70, 0x43, 0x27, 0x70, 0x43, 0x27, 
   0x70, 0x43, 0x27, 0x70, 0x43, 0x27, 0x6F, 0x42, 0x26, 0x6F, 0x42, 0x26, 0x6F, 0x42, 0x26, 0x6E, 
   0x41, 0x25, 0x6E, 0x41, 0x25, 0x6E, 0x41, 0x25, 0x6E, 0x41, 0x25, 0x6C, 0x3F, 0x23, 0x6B, 0x3E, 
   0x22, 0x6B, 0x3E, 0x22, 0x6B, 0x3E, 0x22, 0x6B, 0x3E, 0x22, 0x6C, 0x3F, 0x23, 0x6D, 0x40, 0x24, 
   0x6D, 0x40, 0x24, 0x6D, 0x41, 0x23, 0x6C, 0x41, 0x21, 0x6B, 0x3F, 0x20, 0x6B, 0x3F, 0x20, 0x6B, 
   0x3F, 0x20, 0x6B, 0x3F, 0x20, 0x6B, 0x3F, 0x20, 0x6C, 0x3F, 0x20, 0x6C, 0x3E, 0x1F, 0x6C, 0x3E, 
   0x1F, 0x6C, 0x3E, 0x1F, 0x6C, 0x3E, 0x1F, 0x6C, 0x3E, 0x1F, 0x6C, 0x3E, 0x1F, 0x6C, 0x3E, 0x1F, 
   0x6C, 0x3E, 0x1F, 0x6C, 0x3E, 0x1F, 0x6C, 0x3E, 0x1F, 0x6C, 0x3E, 0x1F, 0x6C, 0x3E, 0x1F, 0x6D, 
   0x3F, 0x20, 0x6D, 0x3F, 0x20, 0x6D, 0x3F, 0x20, 0x6E, 0x40, 0x21, 0x6E, 0x40, 0x21, 0x6E, 0x40, 
   0x21, 0x6E, 0x40, 0x21, 0x6E, 0x40, 0x21, 0x6D, 0x3F, 0x20, 0x6C, 0x3E, 0x1F, 0x6C, 0x3E, 0x1F, 
   0x6D, 0x3F, 0x20, 0x6C, 0x3E, 0x1F, 0x6C, 0x3E, 0x1F, 0x6D, 0x3F, 0x20, 0x6D, 0x3F, 0x20, 0x6D, 
   0x3F, 0x20, 0x6D, 0x3F, 0x20, 0x6D, 0x3F, 0x20, 0x6D, 0x3F, 0x20, 0x6D, 0x3F, 0x20, 0x6D, 0x3F, 
   0x20, 0x6D, 0x3F, 0x20, 0x6E, 0x40, 0x21, 0x6E, 0x40, 0x21, 0x6E, 0x40, 0x21, 0x6F, 0x41, 0x21, 
   0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6E, 0x41, 0x20, 0x6E, 0x41, 0x20, 0x6E, 
   0x41, 0x20, 0x6D, 0x40, 0x1F, 0x6D, 0x40, 0x1F, 0x6D, 0x40, 0x1F, 0x6D, 0x40, 0x1F, 0x6D, 0x40, 
   0x1F, 0x6D, 0x40, 0x1F, 0x6D, 0x40, 0x1F, 0x6D, 0x40, 0x1F, 0x6D, 0x40, 0x1F, 0x6D, 0x40, 0x1F, 
   0x6D, 0x40, 0x1F, 0x6D, 0x40, 0x1F, 0x6D, 0x40, 0x1F, 0x6D, 0x40, 0x1F, 0x6D, 0x40, 0x1F, 0x6D, 
   0x40, 0x1F, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 
   0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 
   0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6E, 0x41, 0x20, 0x6E, 
   0x41, 0x20, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 
   0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 
   0x71, 0x44, 0x23, 0x71, 0x44, 0x23, 0x72, 0x45, 0x24, 0x71, 0x44, 0x24, 0x71, 0x43, 0x25, 0x74, 
   0x46, 0x27, 0x75, 0x47, 0x28, 0x75, 0x47, 0x28, 0x76, 0x48, 0x29, 0x77, 0x49, 0x2A, 0x76, 0x49, 
   0x2C, 0x75, 0x48, 0x2D, 0x76, 0x49, 0x2F, 0x78, 0x4A, 0x33, 0x79, 0x4A, 0x34, 0x7C, 0x4D, 0x37, 
   0x7D, 0x50, 0x3B, 0x7D, 0x54, 0x3D, 0x6C, 0x44, 0x2B, 0x6C, 0x44, 0x2B, 0x6C, 0x44, 0x2B, 0x6C, 
   0x44, 0x2B, 0x6C, 0x44, 0x2B, 0x6C, 0x44, 0x2B, 0x6D, 0x45, 0x2C, 0x6E, 0x46, 0x2D, 0x6E, 0x46, 
   0x2D, 0x6E, 0x46, 0x2D, 0x6C, 0x44, 0x2B, 0x6C, 0x44, 0x2B, 0x6C, 0x44, 0x2B, 0x6D, 0x44, 0x2B, 
   0x6C, 0x42, 0x29, 0x6B, 0x42, 0x29, 0x6C, 0x43, 0x2A, 0x6C, 0x43, 0x2A, 0x6C, 0x43, 0x2A, 0x6C, 
   0x43, 0x2A, 0x6B, 0x42, 0x29, 0x6B, 0x42, 0x29, 0x6B, 0x42, 0x29, 0x6B, 0x42, 0x29, 0x69, 0x40, 
   0x28, 0x69, 0x40, 0x27, 0x6A, 0x41, 0x27, 0x6A, 0x41, 0x26, 0x6A, 0x41, 0x26, 0x6A, 0x41, 0x26, 
   0x69, 0x40, 0x25, 0x69, 0x40, 0x25, 0x69, 0x40, 0x25, 0x69, 0x40, 0x25, 0x69, 0x40, 0x25, 0x69, 
   0x40, 0x25, 0x6A, 0x41, 0x26, 0x6A, 0x41, 0x26, 0x6A, 0x41, 0x26, 0x6B, 0x42, 0x27, 0x6B, 0x42, 
   0x27, 0x6B, 0x42, 0x27, 0x6B, 0x42, 0x27, 0x6B, 0x42, 0x27, 0x6B, 0x42, 0x27, 0x6B, 0x42, 0x27, 
   0x6B, 0x42, 0x27, 0x6B, 0x42, 0x27, 0x6B, 0x42, 0x27, 0x6D, 0x44, 0x29, 0x6D, 0x44, 0x29, 0x6D, 
   0x44, 0x29, 0x6D, 0x44, 0x2A, 0x6D, 0x44, 0x2B, 0x6D, 0x44, 0x2B, 0x6C, 0x43, 0x2A, 0x6C, 0x43, 
   0x2A, 0x6E, 0x45, 0x2C, 0x6E, 0x45, 0x2C, 0x6E, 0x47, 0x30, 0x6E, 0x48, 0x32, 0x6E, 0x48, 0x32, 
   0x70, 0x4A, 0x34, 0x70, 0x4A, 0x34, 0x73, 0x4C, 0x36, 0x71, 0x4B, 0x35, 0x6E, 0x49, 0x33, 0x6D, 
   0x49, 0x33, 0x71, 0x4C, 0x36, 0x72, 0x4D, 0x37, 0x71, 0x4C, 0x36, 0x71, 0x4C, 0x36, 0x71, 0x4B, 
   0x35, 0x73, 0x4B, 0x35, 0x74, 0x4D, 0x37, 0x72, 0x4C, 0x36, 0x72, 0x4B, 0x35, 0x73, 0x4C, 0x36, 
   0x74, 0x4C, 0x35, 0x76, 0x4D, 0x33, 0x73, 0x4A, 0x31, 0x72, 0x49, 0x30, 0x73, 0x4A, 0x31, 0x73, 
   0x4A, 0x31, 0x73, 0x4A, 0x31, 0x70, 0x47, 0x2E, 0x6F, 0x46, 0x2D, 0x6E, 0x45, 0x2C, 0x6F, 0x46, 
   0x2D, 0x6F, 0x46, 0x2D, 0x70, 0x47, 0x2E, 0x71, 0x48, 0x2E, 0x71, 0x48, 0x2D, 0x6F, 0x46, 0x2B, 
   0x6F, 0x46, 0x2B, 0x6F, 0x46, 0x2B, 0x6F, 0x46, 0x2B, 0x6F, 0x46, 0x2B, 0x71, 0x46, 0x2B, 0x71, 
   0x46, 0x2B, 0x71, 0x46, 0x2B, 0x71, 0x46, 0x2B, 0x70, 0x45, 0x2A, 0x70, 0x45, 0x2A, 0x70, 0x45, 
   0x2A, 0x70, 0x45, 0x2A, 0x70, 0x45, 0x2A, 0x71, 0x46, 0x2B, 0x70, 0x45, 0x2A, 0x6F, 0x44, 0x29, 
   0x6E, 0x43, 0x28, 0x6F, 0x42, 0x27, 0x6F, 0x42, 0x27, 0x6F, 0x42, 0x27, 0x6F, 0x42, 0x27, 0x6F, 
   0x42, 0x27, 0x6F, 0x42, 0x27, 0x6F, 0x42, 0x26, 0x6E, 0x41, 0x25, 0x6E, 0x41, 0x25, 0x6E, 0x41, 
   0x25, 0x6E, 0x41, 0x25, 0x6E, 0x41, 0x25, 0x6E, 0x41, 0x25, 0x70, 0x43, 0x27, 0x70, 0x43, 0x27, 
   0x70, 0x43, 0x27, 0x70, 0x43, 0x27, 0x6F, 0x42, 0x26, 0x6F, 0x42, 0x26, 0x6F, 0x42, 0x26, 0x6E, 
   0x41, 0x25, 0x6E, 0x41, 0x25, 0x6E, 0x41, 0x25, 0x6D, 0x40, 0x24, 0x6B, 0x3E, 0x22, 0x6B, 0x3E, 
   0x22, 0x6B, 0x3E, 0x22, 0x6B, 0x3E, 0x22, 0x6B, 0x3E, 0x22, 0x6C, 0x3F, 0x23, 0x6D, 0x40, 0x24, 
   0x6D, 0x40, 0x24, 0x6D, 0x41, 0x23, 0x6B, 0x40, 0x20, 0x6A, 0x3E, 0x1F, 0x6B, 0x3F, 0x20, 0x6B, 
   0x3F, 0x20, 0x6B, 0x3F, 0x20, 0x6B, 0x3F, 0x20, 0x6C, 0x3F, 0x20, 0x6C, 0x3E, 0x1F, 0x6C, 0x3E, 
   0x1F, 0x6C, 0x3E, 0x1F, 0x6C, 0x3E, 0x1F, 0x6C, 0x3E, 0x1F, 0x6C, 0x3E, 0x1F, 0x6C, 0x3E, 0x1F, 
   0x6C, 0x3E, 0x1F, 0x6C, 0x3E, 0x1F, 0x6B, 0x3D, 0x1E, 0x6B, 0x3D, 0x1E, 0x6B, 0x3D, 0x1E, 0x6C, 
   0x3E, 0x1F, 0x6D, 0x3F, 0x20, 0x6D, 0x3F, 0x20, 0x6E, 0x40, 0x21, 0x6E, 0x40, 0x21, 0x6E, 0x40, 
   0x21, 0x6E, 0x40, 0x21, 0x6E, 0x40, 0x21, 0x6D, 0x3F, 0x20, 0x6C, 0x3E, 0x1F, 0x6C, 0x3E, 0x1F, 
   0x6D, 0x3F, 0x20, 0x6C, 0x3E, 0x1F, 0x6C, 0x3E, 0x1F, 0x6D, 0x3F, 0x20, 0x6D, 0x3F, 0x20, 0x6D, 
   0x3F, 0x20, 0x6D, 0x3F, 0x20, 0x6D, 0x3F, 0x20, 0x6D, 0x3F, 0x20, 0x6D, 0x3F, 0x20, 0x6D, 0x3F, 
   0x20, 0x6D, 0x3F, 0x20, 0x6E, 0x40, 0x21, 0x6E, 0x40, 0x21, 0x6E, 0x40, 0x21, 0x6F, 0x41, 0x21, 
   0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6E, 0x41, 0x20, 0x6E, 0x41, 0x20, 0x6E, 
   0x41, 0x20, 0x6D, 0x40, 0x1F, 0x6D, 0x40, 0x1F, 0x6D, 0x40, 0x1F, 0x6D, 0x40, 0x1F, 0x6D, 0x40, 
   0x1F, 0x6D, 0x40, 0x1F, 0x6D, 0x40, 0x1F, 0x6D, 0x40, 0x1F, 0x6D, 0x40, 0x1F, 0x6D, 0x40, 0x1F, 
   0x6D, 0x40, 0x1F, 0x6D, 0x40, 0x1F, 0x6D, 0x40, 0x1F, 0x6D, 0x40, 0x1F, 0x6D, 0x40, 0x1F, 0x6D, 
   0x40, 0x1F, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 
   0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 
   0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6E, 0x41, 0x20, 0x6E, 
   0x41, 0x20, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 
   0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 
   0x71, 0x44, 0x23, 0x71, 0x44, 0x23, 0x71, 0x44, 0x23, 0x70, 0x43, 0x23, 0x71, 0x43, 0x24, 0x74, 
   0x46, 0x27, 0x74, 0x46, 0x27, 0x75, 0x47, 0x28, 0x75, 0x47, 0x28, 0x76, 0x48, 0x29, 0x75, 0x48, 
   0x2C, 0x74, 0x47, 0x2C, 0x76, 0x49, 0x2D, 0x77, 0x4A, 0x30, 0x78, 0x4A, 0x32, 0x7B, 0x4C, 0x36, 
   0x7B, 0x4D, 0x36, 0x7C, 0x4F, 0x37, 0x6E, 0x46, 0x2D, 0x6E, 0x46, 0x2D, 0x6C, 0x44, 0x2B, 0x6C, 
   0x44, 0x2B, 0x6C, 0x44, 0x2B, 0x6C, 0x44, 0x2B, 0x6D, 0x45, 0x2C, 0x6E, 0x46, 0x2D, 0x6D, 0x45, 
   0x2C, 0x6C, 0x44, 0x2B, 0x6C, 0x44, 0x2B, 0x6C, 0x44, 0x2B, 0x6C, 0x44, 0x2B, 0x6D, 0x44, 0x2B, 
   0x6C, 0x42, 0x29, 0x6B, 0x42, 0x29, 0x6C, 0x43, 0x2A, 0x6B, 0x42, 0x29, 0x6B, 0x42, 0x29, 0x6A, 
   0x41, 0x28, 0x69, 0x40, 0x27, 0x69, 0x40, 0x27, 0x69, 0x40, 0x27, 0x6A, 0x41, 0x28, 0x6A, 0x41, 
   0x28, 0x6A, 0x41, 0x28, 0x6A, 0x41, 0x27, 0x6A, 0x41, 0x26, 0x6A, 0x41, 0x26, 0x6A, 0x41, 0x26, 
   0x69, 0x40, 0x25, 0x67, 0x3E, 0x23, 0x67, 0x3E, 0x23, 0x68, 0x3F, 0x24, 0x68, 0x3F, 0x24, 0x68, 
   0x3F, 0x24, 0x69, 0x40, 0x25, 0x69, 0x40, 0x25, 0x69, 0x40, 0x25, 0x69, 0x40, 0x25, 0x69, 0x40, 
   0x25, 0x69, 0x40, 0x25, 0x6A, 0x41, 0x26, 0x6A, 0x41, 0x26, 0x6A, 0x41, 0x26, 0x6A, 0x41, 0x26, 
   0x6A, 0x41, 0x26, 0x6A, 0x41, 0x26, 0x6A, 0x41, 0x26, 0x6B, 0x42, 0x27, 0x6C, 0x43, 0x28, 0x6D, 
   0x44, 0x29, 0x6D, 0x44, 0x2A, 0x6C, 0x43, 0x2A, 0x6C, 0x43, 0x2A, 0x6D, 0x44, 0x2B, 0x6D, 0x44, 
   0x2B, 0x6E, 0x45, 0x2C, 0x6E, 0x45, 0x2C, 0x6E, 0x46, 0x2F, 0x6E, 0x46, 0x2F, 0x6E, 0x46, 0x2F, 
   0x70, 0x47, 0x30, 0x70, 0x47, 0x30, 0x6F, 0x46, 0x2F, 0x6D, 0x46, 0x2F, 0x6C, 0x47, 0x2F, 0x6C, 
   0x47, 0x2F, 0x6E, 0x48, 0x31, 0x71, 0x4B, 0x33, 0x70, 0x4A, 0x33, 0x6F, 0x49, 0x32, 0x6F, 0x46, 
   0x30, 0x6F, 0x46, 0x30, 0x70, 0x47, 0x30, 0x70, 0x47, 0x31, 0x70, 0x47, 0x30, 0x70, 0x47, 0x31, 
   0x72, 0x49, 0x31, 0x73, 0x4A, 0x31, 0x72, 0x49, 0x30, 0x71, 0x48, 0x2F, 0x70, 0x47, 0x2E, 0x70, 
   0x47, 0x2E, 0x70, 0x47, 0x2E, 0x70, 0x47, 0x2E, 0x6F, 0x46, 0x2D, 0x6E, 0x45, 0x2C, 0x6E, 0x45, 
   0x2C, 0x6E, 0x45, 0x2C, 0x6E, 0x45, 0x2C, 0x6F, 0x46, 0x2C, 0x71, 0x48, 0x2D, 0x70, 0x47, 0x2C, 
   0x6F, 0x46, 0x2B, 0x6F, 0x46, 0x2B, 0x6F, 0x46, 0x2B, 0x6F, 0x46, 0x2B, 0x70, 0x45, 0x2A, 0x70, 
   0x45, 0x2A, 0x70, 0x45, 0x2A, 0x70, 0x45, 0x2A, 0x70, 0x45, 0x2A, 0x70, 0x45, 0x2A, 0x70, 0x45, 
   0x2A, 0x6F, 0x44, 0x29, 0x6F, 0x44, 0x29, 0x6F, 0x44, 0x29, 0x6F, 0x44, 0x29, 0x6E, 0x43, 0x28, 
   0x6D, 0x42, 0x27, 0x6D, 0x40, 0x25, 0x6D, 0x40, 0x25, 0x6D, 0x40, 0x25, 0x6D, 0x40, 0x25, 0x6D, 
   0x40, 0x25, 0x6D, 0x40, 0x25, 0x6D, 0x40, 0x25, 0x6D, 0x40, 0x24, 0x6D, 0x40, 0x24, 0x6D, 0x40, 
   0x24, 0x6E, 0x41, 0x25, 0x6E, 0x41, 0x25, 0x6E, 0x41, 0x25, 0x6F, 0x42, 0x26, 0x6F, 0x42, 0x26, 
   0x6F, 0x42, 0x26, 0x6F, 0x42, 0x26, 0x6E, 0x41, 0x25, 0x6E, 0x41, 0x25, 0x6D, 0x40, 0x24, 0x6C, 
   0x3F, 0x23, 0x6C, 0x3F, 0x23, 0x6C, 0x3F, 0x23, 0x6C, 0x3F, 0x23, 0x6C, 0x3F, 0x23, 0x6C, 0x3F, 
   0x23, 0x6C, 0x3F, 0x23, 0x6C, 0x3F, 0x23, 0x6C, 0x3F, 0x23, 0x6D, 0x40, 0x24, 0x6D, 0x40, 0x24, 
   0x6B, 0x3E, 0x23, 0x6B, 0x3F, 0x21, 0x6C, 0x40, 0x21, 0x6C, 0x40, 0x21, 0x6B, 0x3F, 0x20, 0x6B, 
   0x3F, 0x20, 0x6B, 0x3F, 0x20, 0x6B, 0x3F, 0x20, 0x6C, 0x3F, 0x20, 0x6D, 0x3F, 0x20, 0x6D, 0x3F, 
   0x20, 0x6C, 0x3E, 0x1F, 0x6B, 0x3D, 0x1E, 0x6B, 0x3D, 0x1E, 0x6B, 0x3D, 0x1E, 0x6C, 0x3E, 0x1F, 
   0x6D, 0x3F, 0x20, 0x6C, 0x3E, 0x1F, 0x6B, 0x3D, 0x1E, 0x6B, 0x3D, 0x1E, 0x6B, 0x3D, 0x1E, 0x6C, 
   0x3E, 0x1F, 0x6D, 0x3F, 0x20, 0x6D, 0x3F, 0x20, 0x6D, 0x3F, 0x20, 0x6D, 0x3F, 0x20, 0x6D, 0x3F, 
   0x20, 0x6D, 0x3F, 0x20, 0x6C, 0x3E, 0x1F, 0x6C, 0x3E, 0x1F, 0x6C, 0x3E, 0x1F, 0x6B, 0x3D, 0x1E, 
   0x6D, 0x3F, 0x20, 0x6D, 0x3F, 0x20, 0x6D, 0x3F, 0x20, 0x6D, 0x3F, 0x20, 0x6D, 0x3F, 0x20, 0x6D, 
   0x3F, 0x20, 0x6C, 0x3E, 0x1F, 0x6C, 0x3E, 0x1F, 0x6C, 0x3E, 0x1F, 0x6D, 0x3F, 0x20, 0x6D, 0x3F, 
   0x20, 0x6D, 0x3F, 0x20, 0x6C, 0x3E, 0x1F, 0x6C, 0x3E, 0x1F, 0x6C, 0x3E, 0x1F, 0x6D, 0x3F, 0x1F, 
   0x6D, 0x40, 0x1F, 0x6D, 0x40, 0x1F, 0x6E, 0x41, 0x20, 0x6E, 0x41, 0x20, 0x6E, 0x41, 0x20, 0x6E, 
   0x41, 0x20, 0x6D, 0x40, 0x1F, 0x6D, 0x40, 0x1F, 0x6D, 0x40, 0x1F, 0x6D, 0x40, 0x1F, 0x6D, 0x40, 
   0x1F, 0x6D, 0x40, 0x1F, 0x6D, 0x40, 0x1F, 0x6C, 0x3F, 0x1E, 0x6C, 0x3F, 0x1E, 0x6C, 0x3F, 0x1E, 
   0x6C, 0x3F, 0x1E, 0x6C, 0x3F, 0x1E, 0x6C, 0x3F, 0x1E, 0x6C, 0x3F, 0x1E, 0x6E, 0x41, 0x20, 0x6E, 
   0x41, 0x20, 0x6E, 0x41, 0x20, 0x6E, 0x41, 0x20, 0x6E, 0x41, 0x20, 0x6E, 0x41, 0x20, 0x6E, 0x41, 
   0x20, 0x6E, 0x41, 0x20, 0x6E, 0x41, 0x20, 0x6D, 0x40, 0x1F, 0x6D, 0x40, 0x1F, 0x6D, 0x40, 0x1F, 
   0x6D, 0x40, 0x1F, 0x6D, 0x40, 0x1F, 0x6D, 0x40, 0x1F, 0x6E, 0x41, 0x20, 0x6E, 0x41, 0x20, 0x6E, 
   0x41, 0x20, 0x6E, 0x41, 0x20, 0x6E, 0x41, 0x20, 0x6E, 0x41, 0x20, 0x6F, 0x42, 0x21, 0x6F, 0x42, 
   0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x70, 0x43, 0x22, 0x71, 0x44, 0x23, 
   0x70, 0x43, 0x22, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x41, 0x21, 0x6F, 0x41, 0x23, 0x71, 
   0x43, 0x24, 0x72, 0x44, 0x25, 0x72, 0x44, 0x25, 0x73, 0x45, 0x26, 0x73, 0x45, 0x26, 0x73, 0x47, 
   0x29, 0x74, 0x48, 0x2A, 0x75, 0x48, 0x2C, 0x76, 0x48, 0x2E, 0x78, 0x4A, 0x32, 0x7A, 0x4C, 0x34, 
   0x7B, 0x4B, 0x33, 0x7D, 0x4F, 0x35, 0x6D, 0x45, 0x2C, 0x6D, 0x45, 0x2C, 0x6C, 0x44, 0x2B, 0x6C, 
   0x44, 0x2B, 0x6C, 0x44, 0x2B, 0x6C, 0x44, 0x2B, 0x6D, 0x45, 0x2C, 0x6D, 0x45, 0x2C, 0x6D, 0x45, 
   0x2C, 0x6C, 0x44, 0x2B, 0x6C, 0x44, 0x2B, 0x6C, 0x44, 0x2B, 0x6C, 0x44, 0x2B, 0x6D, 0x44, 0x2B, 
   0x6C, 0x43, 0x2A, 0x6B, 0x42, 0x29, 0x6B, 0x42, 0x29, 0x6B, 0x42, 0x29, 0x6B, 0x42, 0x29, 0x6A, 
   0x41, 0x28, 0x69, 0x40, 0x27, 0x69, 0x40, 0x27, 0x69, 0x40, 0x27, 0x6A, 0x41, 0x28, 0x6A, 0x41, 
   0x28, 0x6A, 0x41, 0x28, 0x6A, 0x41, 0x27, 0x6A, 0x41, 0x26, 0x6A, 0x41, 0x26, 0x6A, 0x41, 0x26, 
   0x69, 0x40, 0x25, 0x67, 0x3E, 0x23, 0x67, 0x3E, 0x23, 0x68, 0x3F, 0x24, 0x68, 0x3F, 0x24, 0x68, 
   0x3F, 0x24, 0x69, 0x40, 0x25, 0x69, 0x40, 0x25, 0x69, 0x40, 0x25, 0x69, 0x40, 0x25, 0x69, 0x40, 
   0x25, 0x69, 0x40, 0x25, 0x6A, 0x41, 0x26, 0x6A, 0x41, 0x26, 0x6A, 0x41, 0x26, 0x6A, 0x41, 0x26, 
   0x6A, 0x41, 0x26, 0x6A, 0x41, 0x26, 0x6A, 0x41, 0x26, 0x6B, 0x42, 0x27, 0x6C, 0x43, 0x28, 0x6C, 
   0x43, 0x28, 0x6C, 0x43, 0x29, 0x6C, 0x43, 0x2A, 0x6C, 0x43, 0x2A, 0x6C, 0x43, 0x2A, 0x6C, 0x43, 
   0x2A, 0x6C, 0x43, 0x2A, 0x6C, 0x43, 0x2A, 0x6C, 0x43, 0x2B, 0x6C, 0x43, 0x2B, 0x6C, 0x43, 0x2B, 
   0x6E, 0x46, 0x2E, 0x6E, 0x45, 0x2D, 0x6D, 0x44, 0x2B, 0x6B, 0x43, 0x2B, 0x6A, 0x44, 0x2B, 0x6A, 
   0x44, 0x2B, 0x6A, 0x44, 0x2C, 0x6C, 0x46, 0x2E, 0x6D, 0x47, 0x2F, 0x6C, 0x46, 0x2D, 0x6E, 0x46, 
   0x2E, 0x6E, 0x46, 0x2E, 0x6E, 0x46, 0x2E, 0x6E, 0x46, 0x2E, 0x6E, 0x46, 0x2E, 0x6E, 0x46, 0x2E, 
   0x70, 0x47, 0x2F, 0x71, 0x48, 0x2F, 0x70, 0x47, 0x2E, 0x6F, 0x46, 0x2D, 0x70, 0x47, 0x2E, 0x70, 
   0x47, 0x2E, 0x70, 0x47, 0x2E, 0x70, 0x47, 0x2E, 0x6F, 0x46, 0x2D, 0x6E, 0x45, 0x2C, 0x6E, 0x45, 
   0x2C, 0x6E, 0x45, 0x2C, 0x6E, 0x45, 0x2C, 0x6F, 0x46, 0x2C, 0x71, 0x48, 0x2D, 0x70, 0x47, 0x2C, 
   0x6E, 0x45, 0x2A, 0x6F, 0x46, 0x2B, 0x6F, 0x46, 0x2B, 0x6F, 0x46, 0x2B, 0x70, 0x45, 0x2A, 0x70, 
   0x45, 0x2A, 0x70, 0x45, 0x2A, 0x70, 0x45, 0x2A, 0x70, 0x45, 0x2A, 0x70, 0x45, 0x2A, 0x70, 0x45, 
   0x2A, 0x6F, 0x44, 0x29, 0x6F, 0x44, 0x29, 0x6F, 0x44, 0x29, 0x6F, 0x44, 0x29, 0x6D, 0x42, 0x27, 
   0x6D, 0x42, 0x27, 0x6D, 0x40, 0x25, 0x6D, 0x40, 0x25, 0x6D, 0x40, 0x25, 0x6D, 0x40, 0x25, 0x6D, 
   0x40, 0x25, 0x6D, 0x40, 0x25, 0x6D, 0x40, 0x25, 0x6D, 0x40, 0x24, 0x6D, 0x40, 0x24, 0x6D, 0x40, 
   0x24, 0x6E, 0x41, 0x25, 0x6E, 0x41, 0x25, 0x6E, 0x41, 0x25, 0x6F, 0x42, 0x26, 0x6F, 0x42, 0x26, 
   0x6F, 0x42, 0x26, 0x6F, 0x42, 0x26, 0x6E, 0x41, 0x25, 0x6E, 0x41, 0x25, 0x6D, 0x40, 0x24, 0x6C, 
   0x3F, 0x23, 0x6C, 0x3F, 0x23, 0x6C, 0x3F, 0x23, 0x6C, 0x3F, 0x23, 0x6C, 0x3F, 0x23, 0x6C, 0x3F, 
   0x23, 0x6C, 0x3F, 0x23, 0x6C, 0x3F, 0x23, 0x6C, 0x3F, 0x23, 0x6C, 0x3F, 0x23, 0x6C, 0x3F, 0x23, 
   0x6B, 0x3E, 0x22, 0x6B, 0x3F, 0x21, 0x6C, 0x40, 0x21, 0x6C, 0x40, 0x21, 0x6C, 0x40, 0x21, 0x6B, 
   0x3F, 0x20, 0x6B, 0x3F, 0x20, 0x6B, 0x3F, 0x20, 0x6C, 0x3F, 0x20, 0x6D, 0x3F, 0x20, 0x6D, 0x3F, 
   0x20, 0x6C, 0x3E, 0x1F, 0x6B, 0x3D, 0x1E, 0x6B, 0x3D, 0x1E, 0x6B, 0x3D, 0x1E, 0x6C, 0x3E, 0x1F, 
   0x6D, 0x3F, 0x20, 0x6C, 0x3E, 0x1F, 0x6C, 0x3E, 0x1F, 0x6C, 0x3E, 0x1F, 0x6C, 0x3E, 0x1F, 0x6D, 
   0x3F, 0x20, 0x6D, 0x3F, 0x20, 0x6D, 0x3F, 0x20, 0x6D, 0x3F, 0x20, 0x6D, 0x3F, 0x20, 0x6D, 0x3F, 
   0x20, 0x6D, 0x3F, 0x20, 0x6C, 0x3E, 0x1F, 0x6C, 0x3E, 0x1F, 0x6C, 0x3E, 0x1F, 0x6B, 0x3D, 0x1E, 
   0x6D, 0x3F, 0x20, 0x6D, 0x3F, 0x20, 0x6D, 0x3F, 0x20, 0x6D, 0x3F, 0x20, 0x6D, 0x3F, 0x20, 0x6D, 
   0x3F, 0x20, 0x6C, 0x3E, 0x1F, 0x6C, 0x3E, 0x1F, 0x6C, 0x3E, 0x1F, 0x6D, 0x3F, 0x20, 0x6D, 0x3F, 
   0x20, 0x6D, 0x3F, 0x20, 0x6B, 0x3D, 0x1E, 0x6B, 0x3D, 0x1E, 0x6B, 0x3D, 0x1E, 0x6C, 0x3F, 0x1F, 
   0x6D, 0x40, 0x1F, 0x6D, 0x40, 0x1F, 0x6E, 0x41, 0x20, 0x6E, 0x41, 0x20, 0x6E, 0x41, 0x20, 0x6E, 
   0x41, 0x20, 0x6D, 0x40, 0x1F, 0x6D, 0x40, 0x1F, 0x6D, 0x40, 0x1F, 0x6B, 0x3E, 0x1D, 0x6B, 0x3E, 
   0x1D, 0x6B, 0x3E, 0x1D, 0x6C, 0x3F, 0x1E, 0x6C, 0x3F, 0x1E, 0x6C, 0x3F, 0x1E, 0x6C, 0x3F, 0x1E, 
   0x6C, 0x3F, 0x1E, 0x6C, 0x3F, 0x1E, 0x6C, 0x3F, 0x1E, 0x6C, 0x3F, 0x1E, 0x6E, 0x41, 0x20, 0x6E, 
   0x41, 0x20, 0x6E, 0x41, 0x20, 0x6E, 0x41, 0x20, 0x6E, 0x41, 0x20, 0x6E, 0x41, 0x20, 0x6E, 0x41, 
   0x20, 0x6E, 0x41, 0x20, 0x6E, 0x41, 0x20, 0x6D, 0x40, 0x1F, 0x6D, 0x40, 0x1F, 0x6D, 0x40, 0x1F, 
   0x6D, 0x40, 0x1F, 0x6D, 0x40, 0x1F, 0x6D, 0x40, 0x1F, 0x6E, 0x41, 0x20, 0x6E, 0x41, 0x20, 0x6E, 
   0x41, 0x20, 0x6E, 0x41, 0x20, 0x6E, 0x41, 0x20, 0x6E, 0x41, 0x20, 0x6F, 0x42, 0x21, 0x6F, 0x42, 
   0x21, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6E, 0x41, 0x20, 0x6F, 0x42, 0x21, 0x71, 0x44, 0x23, 
   0x70, 0x43, 0x22, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 0x6F, 0x41, 0x21, 0x6F, 0x41, 0x22, 0x70, 
   0x42, 0x23, 0x71, 0x43, 0x24, 0x71, 0x43, 0x24, 0x71, 0x43, 0x24, 0x71, 0x43, 0x24, 0x71, 0x45, 
   0x26, 0x72, 0x46, 0x27, 0x73, 0x46, 0x29, 0x74, 0x46, 0x2C, 0x78, 0x4A, 0x30, 0x78, 0x4A, 0x33, 
   0x79, 0x4B, 0x31, 0x7C, 0x4F, 0x33, 0x6C, 0x44, 0x2B, 0x6C, 0x44, 0x2B, 0x6C, 0x44, 0x2B, 0x6C, 
   0x44, 0x2B, 0x6C, 0x44, 0x2B, 0x6C, 0x44, 0x2B, 0x6D, 0x45, 0x2C, 0x6D, 0x45, 0x2C, 0x6C, 0x44, 
   0x2B, 0x6B, 0x43, 0x2A, 0x6C, 0x44, 0x2B, 0x6C, 0x44, 0x2B, 0x6C, 0x44, 0x2B, 0x6C, 0x43, 0x2A, 
   0x6B, 0x42, 0x29, 0x6B, 0x42, 0x29, 0x6B, 0x42, 0x29, 0x6A, 0x41, 0x28, 0x6A, 0x41, 0x28, 0x6A, 
   0x41, 0x28, 0x69, 0x40, 0x27, 0x69, 0x40, 0x27, 0x69, 0x40, 0x27, 0x69, 0x40, 0x27, 0x69, 0x40, 
   0x27, 0x69, 0x40, 0x27, 0x69, 0x40, 0x26, 0x69, 0x40, 0x25, 0x69, 0x40, 0x25, 0x6A, 0x41, 0x26, 
   0x69, 0x40, 0x25, 0x67, 0x3E, 0x23, 0x67, 0x3E, 0x23, 0x68, 0x3F, 0x24, 0x68, 0x3F, 0x24, 0x68, 
   0x3F, 0x24, 0x69, 0x40, 0x25, 0x69, 0x40, 0x25, 0x69, 0x40, 0x25, 0x69, 0x40, 0x25, 0x69, 0x40, 
   0x25, 0x69, 0x40, 0x25, 0x6A, 0x41, 0x26, 0x6A, 0x41, 0x26, 0x6A, 0x41, 0x26, 0x6A, 0x41, 0x26, 
   0x6A, 0x41, 0x26, 0x6A, 0x41, 0x26, 0x6A, 0x41, 0x26, 0x6A, 0x41, 0x26, 0x6B, 0x42, 0x27, 0x6C, 
   0x43, 0x28, 0x6C, 0x43, 0x29, 0x6C, 0x43, 0x2A, 0x6C, 0x43, 0x2A, 0x6C, 0x43, 0x2A, 0x6B, 0x42, 
   0x29, 0x6B, 0x42, 0x29, 0x6B, 0x42, 0x29, 0x6B, 0x42, 0x29, 0x6B, 0x42, 0x29, 0x6B, 0x42, 0x29, 
   0x6C, 0x44, 0x2B, 0x6C, 0x44, 0x2A, 0x6B, 0x42, 0x29, 0x6A, 0x42, 0x28, 0x69, 0x43, 0x28, 0x69, 
   0x43, 0x28, 0x69, 0x43, 0x29, 0x6B, 0x44, 0x2A, 0x6C, 0x45, 0x2B, 0x6A, 0x44, 0x2A, 0x6D, 0x45, 
   0x2C, 0x6D, 0x45, 0x2C, 0x6D, 0x45, 0x2C, 0x6D, 0x45, 0x2C, 0x6C, 0x44, 0x2B, 0x6C, 0x44, 0x2B, 
   0x6E, 0x45, 0x2C, 0x6E, 0x45, 0x2C, 0x6E, 0x45, 0x2C, 0x6F, 0x46, 0x2D, 0x6F, 0x46, 0x2D, 0x6F, 
   0x46, 0x2D, 0x6F, 0x46, 0x2D, 0x70, 0x47, 0x2E, 0x6F, 0x46, 0x2D, 0x6E, 0x45, 0x2C, 0x6E, 0x45, 
   0x2C, 0x6E, 0x45, 0x2C, 0x6E, 0x45, 0x2C, 0x6F, 0x46, 0x2C, 0x70, 0x47, 0x2C, 0x6F, 0x46, 0x2B, 
   0x6E, 0x45, 0x2A, 0x6E, 0x45, 0x2A, 0x6E, 0x45, 0x2A, 0x6E, 0x45, 0x2A, 0x70, 0x45, 0x2A, 0x70, 
   0x45, 0x2A, 0x70, 0x45, 0x2A, 0x70, 0x45, 0x2A, 0x6F, 0x44, 0x29, 0x6F, 0x44, 0x29, 0x6F, 0x44, 
   0x29, 0x6E, 0x43, 0x28, 0x6E, 0x43, 0x28, 0x6E, 0x43, 0x28, 0x6E, 0x43, 0x28, 0x6D, 0x42, 0x27, 
   0x6D, 0x41, 0x26, 0x6D, 0x40, 0x25, 0x6D, 0x40, 0x25, 0x6D, 0x40, 0x25, 0x6D, 0x40, 0x25, 0x6D, 
   0x40, 0x25, 0x6D, 0x40, 0x25, 0x6D, 0x40, 0x25, 0x6D, 0x40, 0x24, 0x6D, 0x40, 0x24, 0x6D, 0x40, 
   0x24, 0x6D, 0x40, 0x24, 0x6D, 0x40, 0x24, 0x6D, 0x40, 0x24, 0x6E, 0x41, 0x25, 0x6E, 0x41, 0x25, 
   0x6E, 0x41, 0x25, 0x6E, 0x41, 0x25, 0x6D, 0x40, 0x24, 0x6D, 0x40, 0x24, 0x6D, 0x40, 0x24, 0x6C, 
   0x3F, 0x23, 0x6C, 0x3F, 0x23, 0x6C, 0x3F, 0x23, 0x6C, 0x3F, 0x23, 0x6C, 0x3F, 0x23, 0x6C, 0x3F, 
   0x23, 0x6C, 0x3F, 0x23, 0x6C, 0x3F, 0x23, 0x6C, 0x3F, 0x23, 0x6C, 0x3F, 0x23, 0x6C, 0x3F, 0x23, 
   0x6B, 0x3E, 0x22, 0x6B, 0x3E, 0x21, 0x6B, 0x3F, 0x20, 0x6B, 0x3F, 0x20, 0x6B, 0x3F, 0x20, 0x6A, 
   0x3E, 0x1F, 0x6A, 0x3E, 0x1F, 0x6A, 0x3E, 0x1F, 0x6B, 0x3E, 0x1F, 0x6C, 0x3E, 0x1F, 0x6C, 0x3E, 
   0x1F, 0x6C, 0x3E, 0x1F, 0x6B, 0x3D, 0x1E, 0x6B, 0x3D, 0x1E, 0x6B, 0x3D, 0x1E, 0x6C, 0x3E, 0x1F, 
   0x6D, 0x3F, 0x20, 0x6C, 0x3E, 0x1F, 0x6D, 0x3F, 0x20, 0x6D, 0x3F, 0x20, 0x6D, 0x3F, 0x20, 0x6D, 
   0x3F, 0x20, 0x6C, 0x3E, 0x1F, 0x6C, 0x3E, 0x1F, 0x6C, 0x3E, 0x1F, 0x6C, 0x3E, 0x1F, 0x6C, 0x3E, 
   0x1F, 0x6C, 0x3E, 0x1F, 0x6C, 0x3E, 0x1F, 0x6C, 0x3E, 0x1F, 0x6C, 0x3E, 0x1F, 0x6B, 0x3D, 0x1E, 
   0x6D, 0x3F, 0x20, 0x6D, 0x3F, 0x20, 0x6D, 0x3F, 0x20, 0x6D, 0x3F, 0x20, 0x6D, 0x3F, 0x20, 0x6D, 
   0x3F, 0x20, 0x6C, 0x3E, 0x1F, 0x6C, 0x3E, 0x1F, 0x6C, 0x3E, 0x1F, 0x6C, 0x3E, 0x1F, 0x6C, 0x3E, 
   0x1F, 0x6C, 0x3E, 0x1F, 0x6D, 0x3F, 0x20, 0x6D, 0x3F, 0x20, 0x6D, 0x3F, 0x20, 0x6C, 0x3F, 0x1F, 
   0x6C, 0x3F, 0x1E, 0x6C, 0x3F, 0x1E, 0x6D, 0x40, 0x1F, 0x6D, 0x40, 0x1F, 0x6D, 0x40, 0x1F, 0x6D, 
   0x40, 0x1F, 0x6C, 0x3F, 0x1E, 0x6C, 0x3F, 0x1E, 0x6C, 0x3F, 0x1E, 0x6C, 0x3F, 0x1E, 0x6C, 0x3F, 
   0x1E, 0x6C, 0x3F, 0x1E, 0x6C, 0x3F, 0x1E, 0x6C, 0x3F, 0x1E, 0x6C, 0x3F, 0x1E, 0x6C, 0x3F, 0x1E, 
   0x6C, 0x3F, 0x1E, 0x6C, 0x3F, 0x1E, 0x6C, 0x3F, 0x1E, 0x6D, 0x40, 0x1F, 0x6E, 0x41, 0x20, 0x6D, 
   0x40, 0x1F, 0x6D, 0x40, 0x1F, 0x6D, 0x40, 0x1F, 0x6D, 0x40, 0x1F, 0x6D, 0x40, 0x1F, 0x6D, 0x40, 
   0x1F, 0x6D, 0x40, 0x1F, 0x6D, 0x40, 0x1F, 0x6D, 0x40, 0x1F, 0x6D, 0x40, 0x1F, 0x6D, 0x40, 0x1F, 
   0x6D, 0x40, 0x1F, 0x6D, 0x40, 0x1F, 0x6D, 0x40, 0x1F, 0x6D, 0x40, 0x1F, 0x6D, 0x40, 0x1F, 0x6D, 
   0x40, 0x1F, 0x6D, 0x40, 0x1F, 0x6D, 0x40, 0x1F, 0x6D, 0x40, 0x1F, 0x6E, 0x41, 0x20, 0x6E, 0x41, 
   0x20, 0x6E, 0x41, 0x20, 0x6E, 0x41, 0x20, 0x6E, 0x41, 0x20, 0x6E, 0x41, 0x20, 0x6E, 0x41, 0x20, 
   0x6F, 0x42, 0x21, 0x6E, 0x41, 0x20, 0x6E, 0x41, 0x20, 0x6E, 0x40, 0x20, 0x6E, 0x40, 0x22, 0x70, 
   0x42, 0x23, 0x70, 0x42, 0x23, 0x70, 0x42, 0x23, 0x70, 0x42, 0x23, 0x70, 0x42, 0x23, 0x6E, 0x42, 
   0x22, 0x6F, 0x44, 0x23, 0x70, 0x43, 0x25, 0x72, 0x45, 0x29, 0x74, 0x47, 0x2C, 0x75, 0x48, 0x2F, 
   0x76, 0x49, 0x30, 0x79, 0x4C, 0x32, 0x6B, 0x43, 0x2A, 0x6B, 0x43, 0x2A, 0x6C, 0x44, 0x2B, 0x6C, 
   0x44, 0x2B, 0x6C, 0x44, 0x2B, 0x6C, 0x44, 0x2B, 0x6C, 0x44, 0x2B, 0x6C, 0x44, 0x2B, 0x6C, 0x44, 
   0x2B, 0x6B, 0x43, 0x2A, 0x6C, 0x44, 0x2B, 0x6C, 0x44, 0x2B, 0x6C, 0x44, 0x2B, 0x6C, 0x44, 0x2B, 
   0x6A, 0x41, 0x28, 0x6A, 0x41, 0x28, 0x6A, 0x41, 0x28, 0x69, 0x40, 0x27, 0x69, 0x40, 0x27, 0x69, 
   0x40, 0x27, 0x69, 0x40, 0x27, 0x69, 0x40, 0x27, 0x69, 0x40, 0x27, 0x68, 0x3F, 0x26, 0x68, 0x3F, 
   0x26, 0x68, 0x3F, 0x26, 0x68, 0x3F, 0x25, 0x68, 0x3F, 0x24, 0x68, 0x3F, 0x24, 0x69, 0x40, 0x25, 
   0x69, 0x40, 0x25, 0x67, 0x3E, 0x23, 0x67, 0x3E, 0x23, 0x68, 0x3F, 0x24, 0x68, 0x3F, 0x24, 0x68, 
   0x3F, 0x24, 0x69, 0x40, 0x25, 0x69, 0x40, 0x25, 0x69, 0x40, 0x25, 0x69, 0x40, 0x25, 0x69, 0x40, 
   0x25, 0x69, 0x40, 0x25, 0x6A, 0x41, 0x26, 0x6A, 0x41, 0x26, 0x6A, 0x41, 0x26, 0x6A, 0x41, 0x26, 
   0x6A, 0x41, 0x26, 0x6A, 0x41, 0x26, 0x6A, 0x41, 0x26, 0x69, 0x40, 0x25, 0x6B, 0x42, 0x27, 0x6B, 
   0x42, 0x27, 0x6C, 0x43, 0x29, 0x6C, 0x43, 0x2A, 0x6C, 0x43, 0x2A, 0x6C, 0x43, 0x2A, 0x6B, 0x42, 
   0x29, 0x6B, 0x42, 0x29, 0x6B, 0x42, 0x29, 0x6D, 0x44, 0x2B, 0x6D, 0x44, 0x2B, 0x6D, 0x44, 0x2B, 
   0x6C, 0x43, 0x2A, 0x6C, 0x43, 0x2A, 0x6A, 0x41, 0x28, 0x6B, 0x43, 0x28, 0x6C, 0x45, 0x29, 0x6C, 
   0x45, 0x29, 0x6C, 0x45, 0x28, 0x6C, 0x45, 0x28, 0x6D, 0x46, 0x2A, 0x6C, 0x45, 0x29, 0x6D, 0x44, 
   0x2B, 0x6D, 0x44, 0x2B, 0x6D, 0x44, 0x2B, 0x6D, 0x44, 0x2B, 0x6C, 0x43, 0x2A, 0x6C, 0x43, 0x2A, 
   0x6C, 0x43, 0x2A, 0x6D, 0x44, 0x2B, 0x6E, 0x45, 0x2C, 0x6E, 0x45, 0x2C, 0x6E, 0x45, 0x2C, 0x6E, 
   0x45, 0x2C, 0x6E, 0x45, 0x2C, 0x70, 0x47, 0x2E, 0x6F, 0x46, 0x2D, 0x6E, 0x45, 0x2C, 0x6E, 0x45, 
   0x2C, 0x6E, 0x45, 0x2C, 0x6E, 0x45, 0x2C, 0x6F, 0x46, 0x2B, 0x6F, 0x46, 0x2B, 0x6E, 0x45, 0x2A, 
   0x6D, 0x44, 0x29, 0x6D, 0x44, 0x29, 0x6D, 0x44, 0x29, 0x6D, 0x44, 0x29, 0x70, 0x45, 0x2A, 0x70, 
   0x45, 0x2A, 0x70, 0x45, 0x2A, 0x6F, 0x44, 0x29, 0x6E, 0x43, 0x28, 0x6E, 0x43, 0x28, 0x6E, 0x43, 
   0x28, 0x6D, 0x42, 0x27, 0x6D, 0x42, 0x27, 0x6D, 0x42, 0x27, 0x6D, 0x42, 0x27, 0x6D, 0x42, 0x27, 
   0x6C, 0x40, 0x25, 0x6D, 0x40, 0x25, 0x6D, 0x40, 0x25, 0x6D, 0x40, 0x25, 0x6D, 0x40, 0x25, 0x6D, 
   0x40, 0x25, 0x6D, 0x40, 0x25, 0x6D, 0x40, 0x25, 0x6D, 0x40, 0x24, 0x6D, 0x40, 0x24, 0x6D, 0x40, 
   0x24, 0x6C, 0x3F, 0x23, 0x6C, 0x3F, 0x23, 0x6C, 0x3F, 0x23, 0x6D, 0x40, 0x24, 0x6D, 0x40, 0x24, 
   0x6D, 0x40, 0x24, 0x6D, 0x40, 0x24, 0x6C, 0x3F, 0x23, 0x6C, 0x3F, 0x23, 0x6C, 0x3F, 0x23, 0x6C, 
   0x3F, 0x23, 0x6C, 0x3F, 0x23, 0x6C, 0x3F, 0x23, 0x6C, 0x3F, 0x23, 0x6C, 0x3F, 0x23, 0x6C, 0x3F, 
   0x23, 0x6C, 0x3F, 0x23, 0x6C, 0x3F, 0x23, 0x6C, 0x3F, 0x23, 0x6C, 0x3F, 0x23, 0x6B, 0x3E, 0x22, 
   0x6A, 0x3D, 0x21, 0x6A, 0x3D, 0x20, 0x6A, 0x3E, 0x1F, 0x6A, 0x3E, 0x1F, 0x6A, 0x3E, 0x1F, 0x69, 
   0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x6A, 0x3D, 0x1E, 0x6B, 0x3D, 0x1E, 0x6B, 0x3D, 
   0x1E, 0x6B, 0x3D, 0x1E, 0x6B, 0x3D, 0x1E, 0x6B, 0x3D, 0x1E, 0x6B, 0x3D, 0x1E, 0x6C, 0x3E, 0x1F, 
   0x6D, 0x3F, 0x20, 0x6C, 0x3E, 0x1F, 0x6C, 0x3E, 0x1F, 0x6C, 0x3E, 0x1F, 0x6C, 0x3E, 0x1F, 0x6C, 
   0x3E, 0x1F, 0x6B, 0x3D, 0x1E, 0x6B, 0x3D, 0x1E, 0x6B, 0x3D, 0x1E, 0x6B, 0x3D, 0x1E, 0x6B, 0x3D, 
   0x1E, 0x6C, 0x3E, 0x1F, 0x6C, 0x3E, 0x1F, 0x6C, 0x3E, 0x1F, 0x6C, 0x3E, 0x1F, 0x6B, 0x3D, 0x1E, 
   0x6D, 0x3F, 0x20, 0x6D, 0x3F, 0x20, 0x6D, 0x3F, 0x20, 0x6D, 0x3F, 0x20, 0x6D, 0x3F, 0x20, 0x6D, 
   0x3F, 0x20, 0x6C, 0x3E, 0x1F, 0x6C, 0x3E, 0x1F, 0x6C, 0x3E, 0x1F, 0x6B, 0x3D, 0x1E, 0x6B, 0x3D, 
   0x1E, 0x6B, 0x3D, 0x1E, 0x6E, 0x40, 0x21, 0x6E, 0x40, 0x21, 0x6E, 0x40, 0x21, 0x6D, 0x3F, 0x1F, 
   0x6B, 0x3E, 0x1D, 0x6B, 0x3E, 0x1D, 0x6C, 0x3F, 0x1E, 0x6C, 0x3F, 0x1E, 0x6C, 0x3F, 0x1E, 0x6C, 
   0x3F, 0x1E, 0x6B, 0x3E, 0x1D, 0x6B, 0x3E, 0x1D, 0x6B, 0x3E, 0x1D, 0x6D, 0x40, 0x1F, 0x6D, 0x40, 
   0x1F, 0x6D, 0x40, 0x1F, 0x6D, 0x40, 0x1F, 0x6C, 0x3F, 0x1E, 0x6C, 0x3F, 0x1E, 0x6C, 0x3F, 0x1E, 
   0x6C, 0x3F, 0x1E, 0x6C, 0x3F, 0x1E, 0x6C, 0x3F, 0x1E, 0x6D, 0x40, 0x1F, 0x6E, 0x41, 0x20, 0x6D, 
   0x40, 0x1F, 0x6C, 0x3F, 0x1E, 0x6C, 0x3F, 0x1E, 0x6C, 0x3F, 0x1E, 0x6C, 0x3F, 0x1E, 0x6C, 0x3F, 
   0x1E, 0x6C, 0x3F, 0x1E, 0x6D, 0x40, 0x1F, 0x6D, 0x40, 0x1F, 0x6D, 0x40, 0x1F, 0x6D, 0x40, 0x1F, 
   0x6D, 0x40, 0x1F, 0x6D, 0x40, 0x1F, 0x6D, 0x40, 0x1F, 0x6D, 0x40, 0x1F, 0x6C, 0x3F, 0x1E, 0x6C, 
   0x3F, 0x1E, 0x6C, 0x3F, 0x1E, 0x6C, 0x3F, 0x1E, 0x6C, 0x3F, 0x1E, 0x6D, 0x40, 0x1F, 0x6D, 0x40, 
   0x1F, 0x6D, 0x40, 0x1F, 0x6D, 0x40, 0x1F, 0x6D, 0x40, 0x1F, 0x6D, 0x40, 0x1F, 0x6C, 0x3F, 0x1E, 
   0x6D, 0x40, 0x1F, 0x6D, 0x40, 0x1F, 0x6D, 0x40, 0x1F, 0x6D, 0x40, 0x20, 0x6E, 0x40, 0x21, 0x6F, 
   0x41, 0x22, 0x6F, 0x41, 0x22, 0x6F, 0x41, 0x22, 0x6F, 0x41, 0x22, 0x6F, 0x41, 0x22, 0x6D, 0x42, 
   0x21, 0x6E, 0x42, 0x22, 0x6E, 0x42, 0x23, 0x70, 0x43, 0x26, 0x70, 0x43, 0x28, 0x72, 0x45, 0x2A, 
   0x74, 0x47, 0x2E, 0x74, 0x49, 0x32, 0x69, 0x41, 0x28, 0x6B, 0x43, 0x2A, 0x6C, 0x44, 0x2B, 0x6C, 
   0x44, 0x2B, 0x6C, 0x44, 0x2B, 0x6C, 0x44, 0x2B, 0x6C, 0x44, 0x2B, 0x6C, 0x44, 0x2B, 0x6B, 0x43, 
   0x2A, 0x6A, 0x42, 0x29, 0x6C, 0x44, 0x2B, 0x6C, 0x44, 0x2B, 0x6C, 0x44, 0x2B, 0x6C, 0x43, 0x2A, 
   0x69, 0x40, 0x27, 0x69, 0x40, 0x27, 0x69, 0x40, 0x27, 0x69, 0x40, 0x27, 0x69, 0x40, 0x27, 0x69, 
   0x40, 0x27, 0x69, 0x40, 0x27, 0x69, 0x40, 0x27, 0x69, 0x40, 0x27, 0x68, 0x3F, 0x26, 0x68, 0x3F, 
   0x26, 0x68, 0x3F, 0x26, 0x68, 0x3F, 0x25, 0x68, 0x3F, 0x24, 0x68, 0x3F, 0x24, 0x69, 0x40, 0x25, 
   0x69, 0x40, 0x25, 0x67, 0x3E, 0x23, 0x67, 0x3E, 0x23, 0x68, 0x3F, 0x24, 0x68, 0x3F, 0x24, 0x68, 
   0x3F, 0x24, 0x69, 0x40, 0x25, 0x69, 0x40, 0x25, 0x69, 0x40, 0x25, 0x69, 0x40, 0x25, 0x69, 0x40, 
   0x25, 0x69, 0x40, 0x25, 0x6A, 0x41, 0x26, 0x6A, 0x41, 0x26, 0x6A, 0x41, 0x26, 0x6A, 0x41, 0x26, 
   0x6A, 0x41, 0x26, 0x6A, 0x41, 0x26, 0x6A, 0x41, 0x26, 0x69, 0x40, 0x25, 0x6A, 0x41, 0x26, 0x6B, 
   0x42, 0x27, 0x6C, 0x43, 0x29, 0x6C, 0x43, 0x2A, 0x6C, 0x43, 0x2A, 0x6C, 0x43, 0x2A, 0x6C, 0x43, 
   0x2A, 0x6C, 0x43, 0x2A, 0x6C, 0x43, 0x2A, 0x6C, 0x43, 0x2A, 0x6C, 0x43, 0x2A, 0x6C, 0x43, 0x2A, 
   0x6D, 0x44, 0x2B, 0x6C, 0x43, 0x2A, 0x6B, 0x42, 0x29, 0x6B, 0x43, 0x28, 0x6B, 0x45, 0x27, 0x6B, 
   0x45, 0x27, 0x6B, 0x44, 0x26, 0x6A, 0x44, 0x26, 0x6B, 0x45, 0x27, 0x6A, 0x44, 0x26, 0x6C, 0x43, 
   0x2A, 0x6C, 0x43, 0x2A, 0x6C, 0x43, 0x2A, 0x6D, 0x44, 0x2B, 0x6D, 0x44, 0x2B, 0x6D, 0x44, 0x2B, 
   0x6D, 0x44, 0x2B, 0x6D, 0x44, 0x2B, 0x6F, 0x46, 0x2D, 0x6F, 0x46, 0x2D, 0x6E, 0x45, 0x2C, 0x6E, 
   0x45, 0x2C, 0x6E, 0x45, 0x2C, 0x70, 0x47, 0x2E, 0x6F, 0x46, 0x2D, 0x6E, 0x45, 0x2C, 0x6E, 0x45, 
   0x2C, 0x6E, 0x45, 0x2C, 0x6E, 0x45, 0x2C, 0x6E, 0x45, 0x2B, 0x6E, 0x46, 0x2A, 0x6E, 0x45, 0x2B, 
   0x6D, 0x44, 0x29, 0x6D, 0x44, 0x29, 0x6D, 0x44, 0x29, 0x6D, 0x44, 0x29, 0x70, 0x45, 0x2A, 0x70, 
   0x45, 0x2A, 0x70, 0x45, 0x2A, 0x6F, 0x44, 0x29, 0x6E, 0x43, 0x28, 0x6E, 0x43, 0x28, 0x6E, 0x43, 
   0x28, 0x6D, 0x42, 0x27, 0x6D, 0x42, 0x27, 0x6D, 0x42, 0x27, 0x6D, 0x42, 0x27, 0x6C, 0x41, 0x26, 
   0x6B, 0x40, 0x25, 0x6D, 0x40, 0x25, 0x6D, 0x40, 0x25, 0x6D, 0x40, 0x25, 0x6D, 0x40, 0x25, 0x6D, 
   0x40, 0x25, 0x6D, 0x40, 0x25, 0x6D, 0x40, 0x25, 0x6D, 0x40, 0x24, 0x6D, 0x40, 0x24, 0x6D, 0x40, 
   0x24, 0x6C, 0x3F, 0x23, 0x6C, 0x3F, 0x23, 0x6C, 0x3F, 0x23, 0x6D, 0x40, 0x24, 0x6D, 0x40, 0x24, 
   0x6D, 0x40, 0x24, 0x6D, 0x40, 0x24, 0x6C, 0x3F, 0x23, 0x6C, 0x3F, 0x23, 0x6C, 0x3F, 0x23, 0x6C, 
   0x3F, 0x23, 0x6C, 0x3F, 0x23, 0x6C, 0x3F, 0x23, 0x6C, 0x3F, 0x23, 0x6C, 0x3F, 0x23, 0x6C, 0x3F, 
   0x23, 0x6C, 0x3F, 0x23, 0x6C, 0x3F, 0x23, 0x6C, 0x3F, 0x23, 0x6C, 0x3F, 0x23, 0x6A, 0x3E, 0x21, 
   0x69, 0x3D, 0x21, 0x6A, 0x3D, 0x1F, 0x6A, 0x3E, 0x1F, 0x6A, 0x3E, 0x1F, 0x6A, 0x3E, 0x1F, 0x69, 
   0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x6A, 0x3D, 0x1E, 0x6B, 0x3D, 0x1E, 0x6B, 0x3D, 
   0x1E, 0x6B, 0x3D, 0x1E, 0x6B, 0x3D, 0x1E, 0x6B, 0x3D, 0x1E, 0x6B, 0x3D, 0x1E, 0x6C, 0x3E, 0x1F, 
   0x6D, 0x3F, 0x20, 0x6C, 0x3E, 0x1F, 0x6B, 0x3D, 0x1E, 0x6B, 0x3D, 0x1E, 0x6B, 0x3D, 0x1E, 0x6B, 
   0x3D, 0x1E, 0x6B, 0x3D, 0x1E, 0x6B, 0x3D, 0x1E, 0x6B, 0x3D, 0x1E, 0x6B, 0x3D, 0x1E, 0x6B, 0x3D, 
   0x1E, 0x6C, 0x3E, 0x1F, 0x6C, 0x3E, 0x1F, 0x6C, 0x3E, 0x1F, 0x6C, 0x3E, 0x1F, 0x6B, 0x3D, 0x1E, 
   0x6D, 0x3F, 0x20, 0x6D, 0x3F, 0x20, 0x6D, 0x3F, 0x20, 0x6D, 0x3F, 0x20, 0x6D, 0x3F, 0x20, 0x6D, 
   0x3F, 0x20, 0x6C, 0x3E, 0x1F, 0x6C, 0x3E, 0x1F, 0x6C, 0x3E, 0x1F, 0x6B, 0x3D, 0x1E, 0x6B, 0x3D, 
   0x1E, 0x6B, 0x3D, 0x1E, 0x6B, 0x3D, 0x1E, 0x6B, 0x3D, 0x1E, 0x6B, 0x3D, 0x1E, 0x6B, 0x3D, 0x1D, 
   0x6B, 0x3E, 0x1D, 0x6B, 0x3E, 0x1D, 0x6C, 0x3F, 0x1E, 0x6C, 0x3F, 0x1E, 0x6C, 0x3F, 0x1E, 0x6C, 
   0x3F, 0x1E, 0x6B, 0x3E, 0x1D, 0x6B, 0x3E, 0x1D, 0x6B, 0x3E, 0x1D, 0x6B, 0x3E, 0x1D, 0x6B, 0x3E, 
   0x1D, 0x6B, 0x3E, 0x1D, 0x6C, 0x3F, 0x1E, 0x6C, 0x3F, 0x1E, 0x6C, 0x3F, 0x1E, 0x6C, 0x3F, 0x1E, 
   0x6C, 0x3F, 0x1E, 0x6C, 0x3F, 0x1E, 0x6C, 0x3F, 0x1E, 0x6D, 0x40, 0x1F, 0x6E, 0x41, 0x20, 0x6C, 
   0x3F, 0x1E, 0x6C, 0x3F, 0x1E, 0x6C, 0x3F, 0x1E, 0x6C, 0x3F, 0x1E, 0x6C, 0x3F, 0x1E, 0x6C, 0x3F, 
   0x1E, 0x6C, 0x3F, 0x1E, 0x6D, 0x40, 0x1F, 0x6D, 0x40, 0x1F, 0x6D, 0x40, 0x1F, 0x6D, 0x40, 0x1F, 
   0x6D, 0x40, 0x1F, 0x6D, 0x40, 0x1F, 0x6D, 0x40, 0x1F, 0x6D, 0x40, 0x1F, 0x6C, 0x3F, 0x1E, 0x6C, 
   0x3F, 0x1E, 0x6C, 0x3F, 0x1E, 0x6C, 0x3F, 0x1E, 0x6C, 0x3F, 0x1E, 0x6D, 0x40, 0x1F, 0x6D, 0x40, 
   0x1F, 0x6D, 0x40, 0x1F, 0x6D, 0x40, 0x1F, 0x6D, 0x40, 0x1F, 0x6C, 0x3F, 0x1E, 0x6B, 0x3E, 0x1D, 
   0x6C, 0x3F, 0x1E, 0x6D, 0x40, 0x1F, 0x6D, 0x40, 0x1F, 0x6D, 0x3F, 0x1F, 0x6D, 0x3F, 0x21, 0x6F, 
   0x41, 0x22, 0x6F, 0x41, 0x22, 0x6E, 0x40, 0x21, 0x6E, 0x40, 0x21, 0x6E, 0x40, 0x21, 0x6D, 0x42, 
   0x21, 0x6E, 0x42, 0x22, 0x6E, 0x42, 0x23, 0x6F, 0x42, 0x25, 0x6E, 0x41, 0x25, 0x70, 0x43, 0x28, 
   0x71, 0x46, 0x2C, 0x72, 0x49, 0x30, 0x6B, 0x42, 0x2B, 0x6B, 0x42, 0x2B, 0x6B, 0x42, 0x2B, 0x6C, 
   0x43, 0x2C, 0x6C, 0x43, 0x2C, 0x6C, 0x43, 0x2C, 0x6D, 0x44, 0x2C, 0x6D, 0x45, 0x2C, 0x6C, 0x44, 
   0x2B, 0x6B, 0x43, 0x2A, 0x6B, 0x43, 0x2A, 0x6C, 0x44, 0x2B, 0x6B, 0x43, 0x2A, 0x6B, 0x42, 0x29, 
   0x6B, 0x42, 0x29, 0x69, 0x40, 0x27, 0x69, 0x40, 0x27, 0x69, 0x40, 0x27, 0x69, 0x40, 0x27, 0x69, 
   0x40, 0x27, 0x69, 0x40, 0x27, 0x69, 0x40, 0x27, 0x69, 0x40, 0x27, 0x69, 0x40, 0x27, 0x69, 0x40, 
   0x27, 0x69, 0x40, 0x27, 0x69, 0x40, 0x26, 0x69, 0x40, 0x25, 0x69, 0x40, 0x25, 0x69, 0x40, 0x25, 
   0x69, 0x40, 0x25, 0x69, 0x40, 0x25, 0x69, 0x40, 0x25, 0x67, 0x3E, 0x23, 0x67, 0x3E, 0x23, 0x67, 
   0x3E, 0x23, 0x67, 0x3E, 0x23, 0x67, 0x3E, 0x23, 0x67, 0x3E, 0x23, 0x68, 0x3F, 0x24, 0x68, 0x3F, 
   0x24, 0x68, 0x3F, 0x24, 0x68, 0x3F, 0x24, 0x68, 0x3F, 0x24, 0x68, 0x3F, 0x24, 0x68, 0x3F, 0x24, 
   0x69, 0x40, 0x25, 0x69, 0x40, 0x25, 0x69, 0x40, 0x25, 0x69, 0x40, 0x25, 0x69, 0x40, 0x25, 0x69, 
   0x40, 0x25, 0x6A, 0x41, 0x26, 0x6D, 0x44, 0x29, 0x6D, 0x44, 0x29, 0x6D, 0x44, 0x29, 0x6C, 0x43, 
   0x28, 0x6C, 0x43, 0x28, 0x6C, 0x43, 0x28, 0x6B, 0x42, 0x27, 0x6B, 0x42, 0x27, 0x6B, 0x42, 0x27, 
   0x6C, 0x43, 0x28, 0x6C, 0x43, 0x28, 0x6C, 0x43, 0x28, 0x6C, 0x43, 0x28, 0x6C, 0x43, 0x28, 0x6C, 
   0x43, 0x28, 0x6C, 0x43, 0x28, 0x6B, 0x42, 0x27, 0x6B, 0x42, 0x27, 0x6B, 0x42, 0x27, 0x6B, 0x42, 
   0x27, 0x6B, 0x42, 0x27, 0x6B, 0x42, 0x27, 0x6C, 0x43, 0x28, 0x6C, 0x43, 0x28, 0x6C, 0x43, 0x28, 
   0x6D, 0x42, 0x29, 0x6F, 0x42, 0x2B, 0x70, 0x44, 0x2C, 0x71, 0x45, 0x2D, 0x71, 0x45, 0x2D, 0x71, 
   0x45, 0x2D, 0x71, 0x45, 0x2D, 0x6E, 0x45, 0x2C, 0x6E, 0x45, 0x2C, 0x6E, 0x45, 0x2C, 0x6E, 0x45, 
   0x2C, 0x6E, 0x45, 0x2C, 0x6E, 0x45, 0x2C, 0x6C, 0x45, 0x2D, 0x69, 0x44, 0x2E, 0x6A, 0x44, 0x2D, 
   0x6C, 0x45, 0x2D, 0x6D, 0x44, 0x2A, 0x6D, 0x44, 0x29, 0x6D, 0x44, 0x29, 0x6F, 0x44, 0x29, 0x6F, 
   0x44, 0x29, 0x6F, 0x44, 0x29, 0x6F, 0x44, 0x29, 0x6E, 0x43, 0x28, 0x6E, 0x43, 0x28, 0x6E, 0x43, 
   0x28, 0x6D, 0x42, 0x27, 0x6D, 0x42, 0x27, 0x6D, 0x42, 0x27, 0x6C, 0x41, 0x26, 0x6C, 0x41, 0x26, 
   0x6C, 0x41, 0x26, 0x6B, 0x40, 0x25, 0x6B, 0x40, 0x25, 0x6B, 0x40, 0x25, 0x6C, 0x41, 0x26, 0x6C, 
   0x41, 0x26, 0x6C, 0x41, 0x26, 0x6C, 0x41, 0x25, 0x6B, 0x41, 0x24, 0x6B, 0x41, 0x24, 0x6B, 0x41, 
   0x24, 0x6B, 0x41, 0x24, 0x6B, 0x41, 0x24, 0x6B, 0x41, 0x24, 0x6E, 0x41, 0x25, 0x6D, 0x40, 0x24, 
   0x6C, 0x3F, 0x23, 0x6C, 0x3F, 0x23, 0x6C, 0x3F, 0x23, 0x6C, 0x3F, 0x23, 0x6C, 0x40, 0x22, 0x6C, 
   0x40, 0x21, 0x6C, 0x40, 0x21, 0x6C, 0x40, 0x21, 0x6B, 0x3F, 0x20, 0x6B, 0x3F, 0x20, 0x6B, 0x3F, 
   0x20, 0x6B, 0x3F, 0x20, 0x6B, 0x3F, 0x20, 0x6B, 0x3F, 0x20, 0x6B, 0x3F, 0x20, 0x6A, 0x3E, 0x1F, 
   0x6A, 0x3E, 0x1F, 0x6B, 0x3F, 0x20, 0x6B, 0x3F, 0x20, 0x6B, 0x3F, 0x20, 0x6B, 0x3F, 0x20, 0x6A, 
   0x3E, 0x1F, 0x6A, 0x3E, 0x1F, 0x6A, 0x3E, 0x1F, 0x6A, 0x3E, 0x1F, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 
   0x1E, 0x69, 0x3D, 0x1E, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 
   0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x69, 
   0x3C, 0x1D, 0x6A, 0x3C, 0x1D, 0x6A, 0x3C, 0x1D, 0x6A, 0x3C, 0x1D, 0x6C, 0x3E, 0x1F, 0x6C, 0x3E, 
   0x1F, 0x6A, 0x3C, 0x1D, 0x6A, 0x3C, 0x1D, 0x6A, 0x3C, 0x1D, 0x6A, 0x3C, 0x1D, 0x6A, 0x3C, 0x1D, 
   0x6B, 0x3D, 0x1E, 0x6C, 0x3E, 0x1F, 0x6B, 0x3E, 0x1F, 0x6A, 0x3E, 0x1F, 0x6A, 0x3E, 0x1F, 0x6A, 
   0x3E, 0x1F, 0x6A, 0x3E, 0x1F, 0x6A, 0x3E, 0x1F, 0x6A, 0x3E, 0x1F, 0x6A, 0x3E, 0x1F, 0x69, 0x3D, 
   0x1E, 0x68, 0x3C, 0x1D, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x6A, 0x3E, 0x1F, 
   0x6B, 0x3F, 0x20, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 
   0x3D, 0x1E, 0x6B, 0x3E, 0x1D, 0x6B, 0x3E, 0x1D, 0x6B, 0x3E, 0x1D, 0x6C, 0x3F, 0x1E, 0x6C, 0x3F, 
   0x1E, 0x6C, 0x3F, 0x1E, 0x6C, 0x3F, 0x1E, 0x6C, 0x3F, 0x1E, 0x6C, 0x3F, 0x1E, 0x6C, 0x3F, 0x1E, 
   0x6C, 0x3F, 0x1E, 0x6C, 0x3F, 0x1E, 0x6C, 0x3F, 0x1E, 0x6B, 0x3E, 0x1D, 0x6B, 0x3E, 0x1D, 0x6B, 
   0x3E, 0x1D, 0x6C, 0x3F, 0x1E, 0x6C, 0x3F, 0x1E, 0x6C, 0x3F, 0x1E, 0x6C, 0x3F, 0x1E, 0x6B, 0x3E, 
   0x1D, 0x6B, 0x3E, 0x1D, 0x6C, 0x3F, 0x1E, 0x6C, 0x3F, 0x1E, 0x6C, 0x3F, 0x1E, 0x6C, 0x3F, 0x1E, 
   0x6C, 0x3F, 0x1E, 0x6C, 0x3F, 0x1E, 0x6C, 0x3F, 0x1E, 0x6C, 0x3F, 0x1E, 0x6B, 0x3E, 0x1D, 0x6B, 
   0x3E, 0x1D, 0x6B, 0x3E, 0x1D, 0x6B, 0x3E, 0x1D, 0x6B, 0x3E, 0x1D, 0x6C, 0x3F, 0x1E, 0x6C, 0x3F, 
   0x1E, 0x6C, 0x3F, 0x1E, 0x6C, 0x3F, 0x1E, 0x6C, 0x3F, 0x1E, 0x6B, 0x3E, 0x1D, 0x6A, 0x3D, 0x1C, 
   0x6B, 0x3E, 0x1D, 0x6C, 0x3F, 0x1E, 0x6C, 0x3F, 0x1E, 0x6D, 0x40, 0x1F, 0x6D, 0x40, 0x1F, 0x6D, 
   0x40, 0x1F, 0x6E, 0x41, 0x20, 0x6E, 0x41, 0x20, 0x6E, 0x41, 0x20, 0x6E, 0x41, 0x20, 0x6D, 0x40, 
   0x1F, 0x6D, 0x40, 0x1F, 0x6D, 0x40, 0x1F, 0x6F, 0x42, 0x21, 0x70, 0x43, 0x22, 0x70, 0x43, 0x22, 
   0x70, 0x43, 0x25, 0x73, 0x46, 0x2A, 0x6B, 0x42, 0x2B, 0x6B, 0x42, 0x2B, 0x6B, 0x42, 0x2B, 0x6C, 
   0x43, 0x2C, 0x6C, 0x43, 0x2C, 0x6C, 0x43, 0x2C, 0x6C, 0x44, 0x2C, 0x6C, 0x44, 0x2B, 0x6C, 0x44, 
   0x2B, 0x6B, 0x43, 0x2A, 0x6A, 0x42, 0x29, 0x6B, 0x43, 0x2A, 0x6B, 0x43, 0x2A, 0x6B, 0x42, 0x29, 
   0x6B, 0x42, 0x29, 0x69, 0x40, 0x27, 0x69, 0x40, 0x27, 0x69, 0x40, 0x27, 0x69, 0x40, 0x27, 0x69, 
   0x40, 0x27, 0x69, 0x40, 0x27, 0x69, 0x40, 0x27, 0x69, 0x40, 0x27, 0x69, 0x40, 0x27, 0x69, 0x40, 
   0x27, 0x69, 0x40, 0x27, 0x69, 0x40, 0x26, 0x69, 0x40, 0x25, 0x69, 0x40, 0x25, 0x69, 0x40, 0x25, 
   0x69, 0x40, 0x25, 0x69, 0x40, 0x25, 0x69, 0x40, 0x25, 0x67, 0x3E, 0x23, 0x67, 0x3E, 0x23, 0x67, 
   0x3E, 0x23, 0x67, 0x3E, 0x23, 0x67, 0x3E, 0x23, 0x67, 0x3E, 0x23, 0x68, 0x3F, 0x24, 0x68, 0x3F, 
   0x24, 0x68, 0x3F, 0x24, 0x68, 0x3F, 0x24, 0x68, 0x3F, 0x24, 0x68, 0x3F, 0x24, 0x68, 0x3F, 0x24, 
   0x67, 0x3E, 0x23, 0x67, 0x3E, 0x23, 0x67, 0x3E, 0x23, 0x69, 0x40, 0x25, 0x69, 0x40, 0x25, 0x69, 
   0x40, 0x25, 0x69, 0x40, 0x25, 0x6C, 0x43, 0x28, 0x6D, 0x44, 0x29, 0x6C, 0x43, 0x28, 0x6C, 0x43, 
   0x28, 0x6C, 0x43, 0x28, 0x6C, 0x43, 0x28, 0x6B, 0x42, 0x27, 0x6B, 0x42, 0x27, 0x6B, 0x42, 0x27, 
   0x6C, 0x43, 0x28, 0x6C, 0x43, 0x28, 0x6C, 0x43, 0x28, 0x6C, 0x43, 0x28, 0x6C, 0x43, 0x28, 0x6C, 
   0x43, 0x28, 0x6C, 0x43, 0x28, 0x6B, 0x42, 0x27, 0x6B, 0x42, 0x27, 0x6B, 0x42, 0x27, 0x6B, 0x42, 
   0x27, 0x6B, 0x42, 0x27, 0x6B, 0x42, 0x27, 0x6C, 0x43, 0x28, 0x6C, 0x43, 0x28, 0x6C, 0x43, 0x28, 
   0x6D, 0x42, 0x29, 0x6F, 0x42, 0x2B, 0x70, 0x44, 0x2C, 0x71, 0x45, 0x2D, 0x71, 0x45, 0x2D, 0x71, 
   0x45, 0x2D, 0x71, 0x45, 0x2D, 0x6E, 0x45, 0x2C, 0x6E, 0x45, 0x2C, 0x6E, 0x45, 0x2C, 0x6E, 0x45, 
   0x2C, 0x6E, 0x45, 0x2C, 0x6E, 0x45, 0x2C, 0x6C, 0x45, 0x2E, 0x69, 0x44, 0x2F, 0x6B, 0x46, 0x2E, 
   0x6B, 0x45, 0x2E, 0x6C, 0x43, 0x2A, 0x6C, 0x43, 0x28, 0x6C, 0x43, 0x28, 0x6F, 0x44, 0x29, 0x6F, 
   0x44, 0x29, 0x6E, 0x43, 0x28, 0x6E, 0x43, 0x28, 0x6E, 0x43, 0x28, 0x6E, 0x43, 0x28, 0x6E, 0x43, 
   0x28, 0x6D, 0x42, 0x27, 0x6D, 0x42, 0x27, 0x6D, 0x42, 0x27, 0x6C, 0x41, 0x26, 0x6C, 0x41, 0x26, 
   0x6C, 0x41, 0x26, 0x6B, 0x40, 0x25, 0x6B, 0x40, 0x25, 0x6B, 0x40, 0x25, 0x6C, 0x41, 0x26, 0x6C, 
   0x41, 0x26, 0x6C, 0x41, 0x26, 0x6C, 0x41, 0x25, 0x6B, 0x41, 0x24, 0x6B, 0x41, 0x24, 0x6B, 0x41, 
   0x24, 0x6B, 0x41, 0x24, 0x6B, 0x41, 0x24, 0x6B, 0x41, 0x24, 0x6D, 0x41, 0x24, 0x6D, 0x40, 0x24, 
   0x6C, 0x3F, 0x23, 0x6C, 0x3F, 0x23, 0x6C, 0x3F, 0x23, 0x6C, 0x3F, 0x23, 0x6C, 0x40, 0x22, 0x6C, 
   0x40, 0x21, 0x6C, 0x40, 0x21, 0x6C, 0x40, 0x21, 0x6B, 0x3F, 0x20, 0x6B, 0x3F, 0x20, 0x6B, 0x3F, 
   0x20, 0x6B, 0x3F, 0x20, 0x6B, 0x3F, 0x20, 0x6B, 0x3F, 0x20, 0x6B, 0x3F, 0x20, 0x6A, 0x3E, 0x1F, 
   0x6A, 0x3E, 0x1F, 0x6B, 0x3F, 0x20, 0x6B, 0x3F, 0x20, 0x6B, 0x3F, 0x20, 0x6B, 0x3F, 0x20, 0x6A, 
   0x3E, 0x1F, 0x6A, 0x3E, 0x1F, 0x6A, 0x3E, 0x1F, 0x6A, 0x3E, 0x1F, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 
   0x1E, 0x69, 0x3D, 0x1E, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 
   0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x69, 
   0x3C, 0x1D, 0x6A, 0x3C, 0x1D, 0x6A, 0x3C, 0x1D, 0x6A, 0x3C, 0x1D, 0x6C, 0x3E, 0x1F, 0x6C, 0x3E, 
   0x1F, 0x6A, 0x3C, 0x1D, 0x6A, 0x3C, 0x1D, 0x6A, 0x3C, 0x1D, 0x6A, 0x3C, 0x1D, 0x6A, 0x3C, 0x1D, 
   0x6B, 0x3D, 0x1E, 0x6C, 0x3E, 0x1F, 0x6B, 0x3E, 0x1F, 0x6A, 0x3E, 0x1F, 0x6A, 0x3E, 0x1F, 0x6A, 
   0x3E, 0x1F, 0x6A, 0x3E, 0x1F, 0x6A, 0x3E, 0x1F, 0x6A, 0x3E, 0x1F, 0x6A, 0x3E, 0x1F, 0x69, 0x3D, 
   0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x6A, 0x3E, 0x1F, 
   0x6B, 0x3F, 0x20, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 
   0x3D, 0x1E, 0x6B, 0x3E, 0x1D, 0x6B, 0x3E, 0x1D, 0x6B, 0x3E, 0x1D, 0x6C, 0x3F, 0x1E, 0x6C, 0x3F, 
   0x1E, 0x6C, 0x3F, 0x1E, 0x6C, 0x3F, 0x1E, 0x6C, 0x3F, 0x1E, 0x6C, 0x3F, 0x1E, 0x6C, 0x3F, 0x1E, 
   0x6C, 0x3F, 0x1E, 0x6C, 0x3F, 0x1E, 0x6C, 0x3F, 0x1E, 0x6B, 0x3E, 0x1D, 0x6B, 0x3E, 0x1D, 0x6B, 
   0x3E, 0x1D, 0x6C, 0x3F, 0x1E, 0x6C, 0x3F, 0x1E, 0x6C, 0x3F, 0x1E, 0x6C, 0x3F, 0x1E, 0x6B, 0x3E, 
   0x1D, 0x6B, 0x3E, 0x1D, 0x6C, 0x3F, 0x1E, 0x6C, 0x3F, 0x1E, 0x6C, 0x3F, 0x1E, 0x6C, 0x3F, 0x1E, 
   0x6C, 0x3F, 0x1E, 0x6C, 0x3F, 0x1E, 0x6C, 0x3F, 0x1E, 0x6C, 0x3F, 0x1E, 0x6B, 0x3E, 0x1D, 0x6B, 
   0x3E, 0x1D, 0x6B, 0x3E, 0x1D, 0x6B, 0x3E, 0x1D, 0x6B, 0x3E, 0x1D, 0x6C, 0x3F, 0x1E, 0x6C, 0x3F, 
   0x1E, 0x6C, 0x3F, 0x1E, 0x6C, 0x3F, 0x1E, 0x6C, 0x3F, 0x1E, 0x6B, 0x3E, 0x1D, 0x6A, 0x3D, 0x1C, 
   0x6B, 0x3E, 0x1D, 0x6C, 0x3F, 0x1E, 0x6C, 0x3F, 0x1E, 0x6D, 0x40, 0x1F, 0x6D, 0x40, 0x1F, 0x6D, 
   0x40, 0x1F, 0x6E, 0x41, 0x20, 0x6E, 0x41, 0x20, 0x6E, 0x41, 0x20, 0x6E, 0x41, 0x20, 0x6D, 0x40, 
   0x1F, 0x6D, 0x40, 0x1F, 0x6D, 0x40, 0x1F, 0x6E, 0x41, 0x20, 0x6F, 0x42, 0x21, 0x6F, 0x42, 0x21, 
   0x6F, 0x42, 0x23, 0x70, 0x43, 0x28, 0x6B, 0x42, 0x2B, 0x6B, 0x42, 0x2B, 0x6B, 0x42, 0x2B, 0x6C, 
   0x43, 0x2C, 0x6C, 0x43, 0x2C, 0x6C, 0x43, 0x2C, 0x6C, 0x44, 0x2C, 0x6C, 0x44, 0x2B, 0x6B, 0x43, 
   0x2A, 0x6A, 0x42, 0x29, 0x69, 0x41, 0x28, 0x6B, 0x43, 0x2A, 0x6A, 0x42, 0x29, 0x6A, 0x42, 0x29, 
   0x6B, 0x42, 0x29, 0x69, 0x40, 0x27, 0x69, 0x40, 0x27, 0x69, 0x40, 0x27, 0x69, 0x40, 0x27, 0x69, 
   0x40, 0x27, 0x69, 0x40, 0x27, 0x69, 0x40, 0x27, 0x69, 0x40, 0x27, 0x68, 0x3F, 0x26, 0x68, 0x3F, 
   0x26, 0x68, 0x3F, 0x26, 0x69, 0x40, 0x26, 0x69, 0x40, 0x25, 0x69, 0x40, 0x25, 0x69, 0x40, 0x25, 
   0x68, 0x3F, 0x24, 0x68, 0x3F, 0x24, 0x68, 0x3F, 0x24, 0x67, 0x3E, 0x23, 0x67, 0x3E, 0x23, 0x67, 
   0x3E, 0x23, 0x67, 0x3E, 0x23, 0x67, 0x3E, 0x23, 0x67, 0x3E, 0x23, 0x68, 0x3F, 0x24, 0x68, 0x3F, 
   0x24, 0x68, 0x3F, 0x24, 0x68, 0x3F, 0x24, 0x68, 0x3F, 0x24, 0x68, 0x3F, 0x24, 0x68, 0x3F, 0x24, 
   0x68, 0x3F, 0x24, 0x68, 0x3F, 0x24, 0x68, 0x3F, 0x24, 0x69, 0x40, 0x25, 0x69, 0x40, 0x25, 0x69, 
   0x40, 0x25, 0x6A, 0x41, 0x26, 0x6B, 0x42, 0x27, 0x6C, 0x43, 0x28, 0x6B, 0x42, 0x27, 0x6B, 0x42, 
   0x27, 0x6B, 0x42, 0x27, 0x6B, 0x42, 0x27, 0x6B, 0x42, 0x27, 0x6B, 0x42, 0x27, 0x6B, 0x42, 0x27, 
   0x6B, 0x42, 0x27, 0x6B, 0x42, 0x27, 0x6B, 0x42, 0x27, 0x6C, 0x43, 0x28, 0x6C, 0x43, 0x28, 0x6C, 
   0x43, 0x28, 0x6C, 0x43, 0x28, 0x6B, 0x42, 0x27, 0x6B, 0x42, 0x27, 0x6B, 0x42, 0x27, 0x6B, 0x42, 
   0x27, 0x6B, 0x42, 0x27, 0x6B, 0x42, 0x27, 0x6C, 0x43, 0x28, 0x6C, 0x43, 0x28, 0x6C, 0x43, 0x28, 
   0x6D, 0x42, 0x29, 0x6F, 0x42, 0x2B, 0x70, 0x44, 0x2C, 0x70, 0x44, 0x2C, 0x70, 0x44, 0x2C, 0x70, 
   0x44, 0x2C, 0x70, 0x44, 0x2C, 0x6E, 0x45, 0x2C, 0x6E, 0x45, 0x2C, 0x6E, 0x45, 0x2C, 0x6E, 0x45, 
   0x2C, 0x6E, 0x45, 0x2C, 0x6E, 0x45, 0x2C, 0x6B, 0x44, 0x2D, 0x69, 0x44, 0x2E, 0x6B, 0x46, 0x2E, 
   0x6B, 0x45, 0x2D, 0x6E, 0x45, 0x2B, 0x6E, 0x44, 0x29, 0x6D, 0x43, 0x28, 0x6F, 0x44, 0x29, 0x6F, 
   0x43, 0x28, 0x6D, 0x42, 0x27, 0x6D, 0x42, 0x27, 0x6D, 0x42, 0x27, 0x6D, 0x42, 0x27, 0x6D, 0x42, 
   0x27, 0x6C, 0x41, 0x26, 0x6C, 0x41, 0x26, 0x6C, 0x41, 0x26, 0x6B, 0x40, 0x25, 0x6B, 0x40, 0x25, 
   0x6B, 0x40, 0x25, 0x6B, 0x40, 0x25, 0x6B, 0x40, 0x25, 0x6B, 0x40, 0x25, 0x6B, 0x40, 0x25, 0x6B, 
   0x40, 0x25, 0x6B, 0x40, 0x25, 0x6B, 0x40, 0x24, 0x6A, 0x40, 0x23, 0x6A, 0x40, 0x23, 0x6A, 0x40, 
   0x23, 0x6B, 0x41, 0x24, 0x6B, 0x41, 0x24, 0x6B, 0x41, 0x24, 0x6D, 0x40, 0x24, 0x6C, 0x3F, 0x23, 
   0x6B, 0x3E, 0x22, 0x6B, 0x3E, 0x22, 0x6B, 0x3E, 0x22, 0x6B, 0x3E, 0x22, 0x6B, 0x3F, 0x21, 0x6B, 
   0x3F, 0x20, 0x6B, 0x3F, 0x20, 0x6B, 0x3F, 0x20, 0x6B, 0x3F, 0x20, 0x6B, 0x3F, 0x20, 0x6B, 0x3F, 
   0x20, 0x6A, 0x3E, 0x1F, 0x6A, 0x3E, 0x1F, 0x6A, 0x3E, 0x1F, 0x6A, 0x3E, 0x1F, 0x6A, 0x3E, 0x1F, 
   0x6A, 0x3E, 0x1F, 0x6A, 0x3E, 0x1F, 0x6A, 0x3E, 0x1F, 0x6A, 0x3E, 0x1F, 0x6A, 0x3E, 0x1F, 0x69, 
   0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 
   0x1E, 0x69, 0x3D, 0x1E, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 
   0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x69, 
   0x3C, 0x1D, 0x6A, 0x3C, 0x1D, 0x6A, 0x3C, 0x1D, 0x6A, 0x3C, 0x1D, 0x6C, 0x3E, 0x1F, 0x6C, 0x3E, 
   0x1F, 0x6A, 0x3C, 0x1D, 0x6A, 0x3C, 0x1D, 0x6A, 0x3C, 0x1D, 0x6A, 0x3C, 0x1D, 0x6B, 0x3D, 0x1E, 
   0x6B, 0x3D, 0x1E, 0x6B, 0x3D, 0x1E, 0x6A, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 
   0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 
   0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x6A, 0x3E, 0x1F, 
   0x6B, 0x3F, 0x20, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 
   0x3D, 0x1E, 0x6B, 0x3E, 0x1D, 0x6B, 0x3E, 0x1D, 0x6B, 0x3E, 0x1D, 0x6B, 0x3E, 0x1D, 0x6B, 0x3E, 
   0x1D, 0x6B, 0x3E, 0x1D, 0x6B, 0x3E, 0x1D, 0x6B, 0x3E, 0x1D, 0x6B, 0x3E, 0x1D, 0x6B, 0x3E, 0x1D, 
   0x6B, 0x3E, 0x1D, 0x6B, 0x3E, 0x1D, 0x6B, 0x3E, 0x1D, 0x6B, 0x3E, 0x1D, 0x6B, 0x3E, 0x1D, 0x6B, 
   0x3E, 0x1D, 0x6B, 0x3E, 0x1D, 0x6B, 0x3E, 0x1D, 0x6B, 0x3E, 0x1D, 0x6B, 0x3E, 0x1D, 0x6B, 0x3E, 
   0x1D, 0x6B, 0x3E, 0x1D, 0x6B, 0x3E, 0x1D, 0x6B, 0x3E, 0x1D, 0x6B, 0x3E, 0x1D, 0x6B, 0x3E, 0x1D, 
   0x6B, 0x3E, 0x1D, 0x6B, 0x3E, 0x1D, 0x6B, 0x3E, 0x1D, 0x6B, 0x3E, 0x1D, 0x6B, 0x3E, 0x1D, 0x6B, 
   0x3E, 0x1D, 0x6B, 0x3E, 0x1D, 0x6B, 0x3E, 0x1D, 0x6B, 0x3E, 0x1D, 0x6C, 0x3F, 0x1E, 0x6C, 0x3F, 
   0x1E, 0x6C, 0x3F, 0x1E, 0x6C, 0x3F, 0x1E, 0x6B, 0x3E, 0x1D, 0x6B, 0x3E, 0x1D, 0x6B, 0x3E, 0x1D, 
   0x6C, 0x3F, 0x1E, 0x6C, 0x3F, 0x1E, 0x6C, 0x3F, 0x1E, 0x6C, 0x3F, 0x1E, 0x6C, 0x3F, 0x1E, 0x6C, 
   0x3F, 0x1E, 0x6D, 0x40, 0x1F, 0x6D, 0x40, 0x1F, 0x6D, 0x40, 0x1F, 0x6D, 0x40, 0x1F, 0x6C, 0x3F, 
   0x1E, 0x6C, 0x3F, 0x1E, 0x6C, 0x3F, 0x1E, 0x6C, 0x3F, 0x1E, 0x6D, 0x40, 0x1F, 0x6D, 0x40, 0x1F, 
   0x6D, 0x40, 0x20, 0x6E, 0x41, 0x24, 0x6B, 0x42, 0x2B, 0x6B, 0x42, 0x2B, 0x6B, 0x42, 0x2B, 0x6C, 
   0x43, 0x2C, 0x6C, 0x43, 0x2C, 0x6C, 0x43, 0x2C, 0x6C, 0x43, 0x2B, 0x6B, 0x43, 0x2A, 0x6B, 0x43, 
   0x2A, 0x69, 0x41, 0x28, 0x69, 0x41, 0x28, 0x6A, 0x42, 0x29, 0x6A, 0x42, 0x29, 0x6A, 0x42, 0x29, 
   0x6B, 0x42, 0x29, 0x69, 0x40, 0x27, 0x69, 0x40, 0x27, 0x69, 0x40, 0x27, 0x69, 0x40, 0x27, 0x69, 
   0x40, 0x27, 0x69, 0x40, 0x27, 0x69, 0x40, 0x27, 0x69, 0x40, 0x27, 0x67, 0x3E, 0x25, 0x67, 0x3E, 
   0x25, 0x67, 0x3E, 0x25, 0x68, 0x3F, 0x25, 0x69, 0x40, 0x25, 0x69, 0x40, 0x25, 0x68, 0x3F, 0x24, 
   0x67, 0x3E, 0x23, 0x67, 0x3E, 0x23, 0x67, 0x3E, 0x23, 0x67, 0x3E, 0x23, 0x67, 0x3E, 0x23, 0x67, 
   0x3E, 0x23, 0x67, 0x3E, 0x23, 0x67, 0x3E, 0x23, 0x67, 0x3E, 0x23, 0x68, 0x3F, 0x24, 0x68, 0x3F, 
   0x24, 0x68, 0x3F, 0x24, 0x68, 0x3F, 0x24, 0x68, 0x3F, 0x24, 0x68, 0x3F, 0x24, 0x68, 0x3F, 0x24, 
   0x69, 0x40, 0x25, 0x69, 0x40, 0x25, 0x69, 0x40, 0x25, 0x69, 0x40, 0x25, 0x69, 0x40, 0x25, 0x69, 
   0x40, 0x25, 0x69, 0x40, 0x25, 0x6A, 0x41, 0x26, 0x6B, 0x42, 0x27, 0x6B, 0x42, 0x27, 0x6A, 0x41, 
   0x26, 0x6A, 0x41, 0x26, 0x6A, 0x41, 0x26, 0x6B, 0x42, 0x27, 0x6B, 0x42, 0x27, 0x6B, 0x42, 0x27, 
   0x6A, 0x41, 0x26, 0x6A, 0x41, 0x26, 0x6A, 0x41, 0x26, 0x6B, 0x42, 0x27, 0x6C, 0x43, 0x28, 0x6C, 
   0x43, 0x28, 0x6C, 0x43, 0x28, 0x6B, 0x42, 0x27, 0x6B, 0x42, 0x27, 0x6B, 0x42, 0x27, 0x6B, 0x42, 
   0x27, 0x6B, 0x42, 0x27, 0x6B, 0x42, 0x27, 0x6C, 0x43, 0x28, 0x6C, 0x43, 0x28, 0x6C, 0x43, 0x28, 
   0x6D, 0x42, 0x29, 0x6E, 0x42, 0x2B, 0x6F, 0x45, 0x2C, 0x6F, 0x44, 0x2C, 0x6E, 0x43, 0x2B, 0x6E, 
   0x44, 0x2B, 0x6E, 0x43, 0x2B, 0x6E, 0x45, 0x2C, 0x6E, 0x45, 0x2C, 0x6E, 0x45, 0x2C, 0x6E, 0x45, 
   0x2C, 0x6E, 0x45, 0x2C, 0x6E, 0x45, 0x2C, 0x6D, 0x46, 0x2E, 0x6F, 0x4A, 0x34, 0x71, 0x4C, 0x34, 
   0x6F, 0x49, 0x31, 0x70, 0x47, 0x2E, 0x70, 0x46, 0x2B, 0x6E, 0x44, 0x29, 0x6F, 0x44, 0x29, 0x6E, 
   0x43, 0x28, 0x6B, 0x40, 0x25, 0x6C, 0x41, 0x26, 0x6C, 0x41, 0x26, 0x6C, 0x41, 0x26, 0x6C, 0x41, 
   0x26, 0x6B, 0x40, 0x25, 0x6B, 0x40, 0x25, 0x6B, 0x40, 0x25, 0x6A, 0x3F, 0x24, 0x6A, 0x3F, 0x24, 
   0x6A, 0x3F, 0x24, 0x6B, 0x40, 0x25, 0x6B, 0x40, 0x25, 0x6B, 0x40, 0x25, 0x6B, 0x40, 0x25, 0x6A, 
   0x3F, 0x24, 0x6A, 0x3F, 0x24, 0x6A, 0x3F, 0x23, 0x69, 0x3F, 0x22, 0x69, 0x3F, 0x22, 0x69, 0x3F, 
   0x22, 0x6B, 0x41, 0x24, 0x6B, 0x41, 0x24, 0x6B, 0x41, 0x24, 0x6C, 0x3F, 0x23, 0x6C, 0x3F, 0x23, 
   0x6B, 0x3E, 0x22, 0x6A, 0x3D, 0x21, 0x6A, 0x3D, 0x21, 0x6A, 0x3D, 0x21, 0x6A, 0x3E, 0x20, 0x6A, 
   0x3E, 0x1F, 0x6A, 0x3E, 0x1F, 0x6A, 0x3E, 0x1F, 0x6B, 0x3F, 0x20, 0x6B, 0x3F, 0x20, 0x6B, 0x3F, 
   0x20, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x6A, 0x3E, 0x1F, 0x6A, 0x3E, 0x1F, 
   0x6A, 0x3E, 0x1F, 0x6A, 0x3E, 0x1F, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x68, 
   0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 
   0x1E, 0x69, 0x3D, 0x1E, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 
   0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x69, 
   0x3C, 0x1D, 0x6A, 0x3C, 0x1D, 0x6A, 0x3C, 0x1D, 0x6A, 0x3C, 0x1D, 0x6C, 0x3E, 0x1F, 0x6C, 0x3E, 
   0x1F, 0x6A, 0x3C, 0x1D, 0x6A, 0x3C, 0x1D, 0x6A, 0x3C, 0x1D, 0x6A, 0x3C, 0x1D, 0x6C, 0x3E, 0x1F, 
   0x6B, 0x3D, 0x1E, 0x6B, 0x3C, 0x1D, 0x69, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x68, 
   0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x69, 0x3D, 
   0x1E, 0x6A, 0x3E, 0x1F, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x6A, 0x3E, 0x1F, 
   0x6B, 0x3F, 0x20, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 
   0x3D, 0x1E, 0x6B, 0x3E, 0x1D, 0x6B, 0x3E, 0x1D, 0x6B, 0x3E, 0x1D, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 
   0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 
   0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6B, 0x3E, 0x1D, 0x6B, 0x3E, 0x1D, 0x6B, 
   0x3E, 0x1D, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6B, 0x3E, 0x1D, 0x6B, 0x3E, 
   0x1D, 0x6B, 0x3E, 0x1D, 0x6B, 0x3E, 0x1D, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 
   0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6B, 0x3E, 0x1D, 0x6B, 0x3E, 0x1D, 0x6B, 
   0x3E, 0x1D, 0x6B, 0x3E, 0x1D, 0x6B, 0x3E, 0x1D, 0x6B, 0x3E, 0x1D, 0x6C, 0x3F, 0x1E, 0x6C, 0x3F, 
   0x1E, 0x6C, 0x3F, 0x1E, 0x6C, 0x3F, 0x1E, 0x6A, 0x3D, 0x1C, 0x6B, 0x3E, 0x1D, 0x6C, 0x3F, 0x1E, 
   0x6C, 0x3F, 0x1E, 0x6C, 0x3F, 0x1E, 0x6C, 0x3F, 0x1E, 0x6C, 0x3F, 0x1E, 0x6B, 0x3E, 0x1D, 0x6B, 
   0x3E, 0x1D, 0x6C, 0x3F, 0x1E, 0x6C, 0x3F, 0x1E, 0x6C, 0x3F, 0x1E, 0x6C, 0x3F, 0x1E, 0x6B, 0x3E, 
   0x1D, 0x6B, 0x3E, 0x1D, 0x6B, 0x3E, 0x1D, 0x6B, 0x3E, 0x1D, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 
   0x69, 0x3D, 0x1D, 0x6B, 0x3F, 0x21, 0x6B, 0x42, 0x2B, 0x6B, 0x42, 0x2B, 0x6B, 0x42, 0x2B, 0x6C, 
   0x43, 0x2C, 0x6B, 0x42, 0x2B, 0x6B, 0x42, 0x2B, 0x6B, 0x43, 0x2B, 0x6B, 0x43, 0x2A, 0x6A, 0x42, 
   0x29, 0x69, 0x41, 0x28, 0x69, 0x41, 0x28, 0x69, 0x41, 0x28, 0x69, 0x41, 0x28, 0x6A, 0x41, 0x28, 
   0x6A, 0x41, 0x28, 0x69, 0x40, 0x27, 0x69, 0x40, 0x27, 0x69, 0x40, 0x27, 0x69, 0x40, 0x27, 0x69, 
   0x40, 0x27, 0x69, 0x40, 0x27, 0x69, 0x40, 0x27, 0x69, 0x40, 0x27, 0x67, 0x3E, 0x25, 0x67, 0x3E, 
   0x25, 0x67, 0x3E, 0x25, 0x68, 0x3F, 0x25, 0x69, 0x40, 0x25, 0x69, 0x40, 0x25, 0x68, 0x3F, 0x24, 
   0x67, 0x3E, 0x23, 0x67, 0x3E, 0x23, 0x67, 0x3E, 0x23, 0x67, 0x3E, 0x23, 0x67, 0x3E, 0x23, 0x67, 
   0x3E, 0x23, 0x67, 0x3E, 0x23, 0x67, 0x3E, 0x23, 0x67, 0x3E, 0x23, 0x67, 0x3E, 0x23, 0x67, 0x3E, 
   0x23, 0x67, 0x3E, 0x23, 0x68, 0x3F, 0x24, 0x68, 0x3F, 0x24, 0x68, 0x3F, 0x24, 0x68, 0x3F, 0x24, 
   0x67, 0x3E, 0x23, 0x67, 0x3E, 0x23, 0x67, 0x3E, 0x23, 0x68, 0x3F, 0x24, 0x69, 0x40, 0x25, 0x69, 
   0x40, 0x25, 0x69, 0x40, 0x25, 0x6A, 0x41, 0x26, 0x6A, 0x41, 0x26, 0x6A, 0x41, 0x26, 0x6A, 0x41, 
   0x26, 0x6A, 0x41, 0x26, 0x6A, 0x41, 0x26, 0x6B, 0x42, 0x27, 0x6B, 0x42, 0x27, 0x6B, 0x42, 0x27, 
   0x6A, 0x41, 0x26, 0x6A, 0x41, 0x26, 0x6A, 0x41, 0x26, 0x6B, 0x42, 0x27, 0x6C, 0x43, 0x28, 0x6C, 
   0x43, 0x28, 0x6C, 0x43, 0x28, 0x6B, 0x42, 0x27, 0x6B, 0x42, 0x27, 0x6B, 0x42, 0x27, 0x6B, 0x42, 
   0x27, 0x6B, 0x42, 0x27, 0x6B, 0x42, 0x27, 0x6C, 0x43, 0x28, 0x6C, 0x43, 0x28, 0x6C, 0x43, 0x28, 
   0x6C, 0x43, 0x29, 0x6C, 0x43, 0x2B, 0x6D, 0x45, 0x2B, 0x6D, 0x45, 0x2C, 0x6D, 0x44, 0x2B, 0x6C, 
   0x44, 0x2B, 0x6D, 0x44, 0x2B, 0x6E, 0x45, 0x2C, 0x6E, 0x45, 0x2C, 0x6E, 0x45, 0x2C, 0x6E, 0x45, 
   0x2C, 0x6E, 0x45, 0x2C, 0x6F, 0x46, 0x2D, 0x6E, 0x47, 0x2F, 0x6F, 0x4A, 0x34, 0x72, 0x4C, 0x34, 
   0x71, 0x4A, 0x32, 0x73, 0x4A, 0x30, 0x73, 0x49, 0x2E, 0x6F, 0x46, 0x2B, 0x6F, 0x44, 0x29, 0x6E, 
   0x43, 0x28, 0x6B, 0x40, 0x25, 0x6B, 0x40, 0x25, 0x6C, 0x41, 0x26, 0x6C, 0x41, 0x26, 0x6C, 0x41, 
   0x26, 0x6B, 0x40, 0x25, 0x6B, 0x40, 0x25, 0x6B, 0x40, 0x25, 0x6A, 0x3F, 0x24, 0x6A, 0x3F, 0x24, 
   0x6A, 0x3F, 0x24, 0x6B, 0x40, 0x25, 0x6B, 0x40, 0x25, 0x6B, 0x40, 0x25, 0x6B, 0x40, 0x25, 0x6A, 
   0x3F, 0x24, 0x6A, 0x3F, 0x24, 0x6A, 0x3F, 0x23, 0x69, 0x3F, 0x22, 0x69, 0x3F, 0x22, 0x69, 0x3F, 
   0x22, 0x6A, 0x40, 0x23, 0x6A, 0x40, 0x23, 0x6A, 0x40, 0x23, 0x6C, 0x3F, 0x23, 0x6B, 0x3E, 0x22, 
   0x6A, 0x3D, 0x21, 0x6A, 0x3D, 0x21, 0x6A, 0x3D, 0x21, 0x6A, 0x3D, 0x21, 0x6A, 0x3E, 0x20, 0x6A, 
   0x3E, 0x1F, 0x6A, 0x3E, 0x1F, 0x6A, 0x3E, 0x1F, 0x6B, 0x3F, 0x20, 0x6B, 0x3F, 0x20, 0x6B, 0x3F, 
   0x20, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x6A, 0x3E, 0x1F, 0x6A, 0x3E, 0x1F, 
   0x6A, 0x3E, 0x1F, 0x6A, 0x3E, 0x1F, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x68, 
   0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 
   0x1E, 0x69, 0x3D, 0x1E, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 
   0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x69, 
   0x3C, 0x1D, 0x6A, 0x3C, 0x1D, 0x6A, 0x3C, 0x1D, 0x6A, 0x3C, 0x1D, 0x6C, 0x3E, 0x1F, 0x6C, 0x3E, 
   0x1F, 0x6A, 0x3C, 0x1D, 0x6A, 0x3C, 0x1D, 0x6A, 0x3C, 0x1D, 0x6A, 0x3C, 0x1D, 0x6B, 0x3D, 0x1E, 
   0x6B, 0x3D, 0x1E, 0x6A, 0x3C, 0x1D, 0x69, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x68, 
   0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x69, 0x3D, 
   0x1E, 0x6A, 0x3E, 0x1F, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x6A, 0x3E, 0x1F, 
   0x6A, 0x3E, 0x1F, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 
   0x3D, 0x1E, 0x6B, 0x3E, 0x1D, 0x6B, 0x3E, 0x1D, 0x6B, 0x3E, 0x1D, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 
   0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 
   0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6B, 0x3E, 0x1D, 0x6B, 0x3E, 0x1D, 0x6B, 
   0x3E, 0x1D, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6B, 0x3E, 0x1D, 0x6B, 0x3E, 
   0x1D, 0x6B, 0x3E, 0x1D, 0x6B, 0x3E, 0x1D, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 
   0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6B, 0x3E, 0x1D, 0x6B, 0x3E, 0x1D, 0x6B, 
   0x3E, 0x1D, 0x6B, 0x3E, 0x1D, 0x6B, 0x3E, 0x1D, 0x6B, 0x3E, 0x1D, 0x6C, 0x3F, 0x1E, 0x6C, 0x3F, 
   0x1E, 0x6C, 0x3F, 0x1E, 0x6C, 0x3F, 0x1E, 0x6A, 0x3D, 0x1C, 0x6B, 0x3E, 0x1D, 0x6C, 0x3F, 0x1E, 
   0x6B, 0x3E, 0x1D, 0x6B, 0x3E, 0x1D, 0x6B, 0x3E, 0x1D, 0x6B, 0x3E, 0x1D, 0x6B, 0x3E, 0x1D, 0x6B, 
   0x3E, 0x1D, 0x6B, 0x3E, 0x1D, 0x6B, 0x3E, 0x1D, 0x6B, 0x3E, 0x1D, 0x6B, 0x3E, 0x1D, 0x6B, 0x3E, 
   0x1D, 0x6B, 0x3E, 0x1D, 0x6B, 0x3E, 0x1D, 0x6B, 0x3E, 0x1D, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 
   0x69, 0x3D, 0x1C, 0x6A, 0x3F, 0x1F, 0x6B, 0x42, 0x2B, 0x6B, 0x42, 0x2B, 0x6B, 0x42, 0x2B, 0x6B, 
   0x42, 0x2B, 0x6A, 0x41, 0x2A, 0x6A, 0x41, 0x2A, 0x6A, 0x42, 0x2A, 0x6A, 0x42, 0x29, 0x69, 0x41, 
   0x28, 0x68, 0x40, 0x27, 0x68, 0x40, 0x27, 0x68, 0x40, 0x27, 0x68, 0x40, 0x27, 0x69, 0x40, 0x27, 
   0x69, 0x3F, 0x26, 0x69, 0x40, 0x27, 0x69, 0x40, 0x27, 0x69, 0x40, 0x27, 0x69, 0x40, 0x27, 0x69, 
   0x40, 0x27, 0x68, 0x3F, 0x26, 0x68, 0x3F, 0x26, 0x68, 0x3F, 0x26, 0x68, 0x3F, 0x26, 0x68, 0x3F, 
   0x26, 0x68, 0x3F, 0x26, 0x68, 0x3F, 0x25, 0x68, 0x3F, 0x24, 0x68, 0x3F, 0x24, 0x68, 0x3F, 0x24, 
   0x67, 0x3E, 0x23, 0x67, 0x3E, 0x23, 0x67, 0x3E, 0x23, 0x66, 0x3D, 0x22, 0x66, 0x3D, 0x22, 0x66, 
   0x3D, 0x22, 0x66, 0x3D, 0x22, 0x66, 0x3D, 0x22, 0x66, 0x3D, 0x22, 0x66, 0x3D, 0x22, 0x66, 0x3D, 
   0x22, 0x66, 0x3D, 0x22, 0x67, 0x3E, 0x23, 0x67, 0x3E, 0x23, 0x67, 0x3E, 0x23, 0x67, 0x3E, 0x23, 
   0x67, 0x3E, 0x23, 0x67, 0x3E, 0x23, 0x67, 0x3E, 0x23, 0x67, 0x3E, 0x23, 0x6A, 0x41, 0x26, 0x6A, 
   0x41, 0x26, 0x69, 0x40, 0x25, 0x69, 0x40, 0x25, 0x69, 0x40, 0x25, 0x69, 0x40, 0x25, 0x69, 0x40, 
   0x25, 0x69, 0x40, 0x25, 0x69, 0x40, 0x25, 0x6A, 0x41, 0x26, 0x6C, 0x43, 0x28, 0x6C, 0x43, 0x28, 
   0x6B, 0x42, 0x27, 0x6B, 0x42, 0x27, 0x6B, 0x42, 0x27, 0x6B, 0x42, 0x27, 0x6B, 0x42, 0x27, 0x6B, 
   0x42, 0x27, 0x6B, 0x42, 0x27, 0x6B, 0x42, 0x27, 0x6B, 0x42, 0x27, 0x6B, 0x42, 0x27, 0x6C, 0x43, 
   0x28, 0x6C, 0x43, 0x28, 0x6C, 0x43, 0x28, 0x6C, 0x43, 0x28, 0x6C, 0x43, 0x28, 0x6C, 0x43, 0x28, 
   0x6C, 0x43, 0x29, 0x6B, 0x43, 0x2A, 0x6B, 0x43, 0x2A, 0x6C, 0x44, 0x2B, 0x6C, 0x44, 0x2B, 0x6B, 
   0x43, 0x2A, 0x6C, 0x44, 0x2B, 0x6F, 0x46, 0x2D, 0x6E, 0x45, 0x2C, 0x6F, 0x46, 0x2D, 0x70, 0x47, 
   0x2E, 0x6F, 0x46, 0x2D, 0x71, 0x47, 0x2E, 0x70, 0x49, 0x32, 0x6D, 0x48, 0x33, 0x71, 0x4B, 0x33, 
   0x72, 0x4C, 0x34, 0x73, 0x4A, 0x30, 0x71, 0x47, 0x2C, 0x6E, 0x45, 0x2A, 0x70, 0x45, 0x2A, 0x6F, 
   0x44, 0x29, 0x6C, 0x41, 0x26, 0x6B, 0x40, 0x25, 0x6B, 0x40, 0x25, 0x6D, 0x42, 0x27, 0x6D, 0x42, 
   0x27, 0x6C, 0x41, 0x26, 0x6C, 0x41, 0x26, 0x6C, 0x41, 0x26, 0x6A, 0x3F, 0x24, 0x6A, 0x3F, 0x24, 
   0x6A, 0x3F, 0x24, 0x69, 0x3E, 0x23, 0x69, 0x3E, 0x23, 0x69, 0x3E, 0x23, 0x6A, 0x3F, 0x24, 0x6A, 
   0x3F, 0x24, 0x6A, 0x3F, 0x24, 0x6A, 0x40, 0x24, 0x6A, 0x40, 0x23, 0x6A, 0x40, 0x23, 0x6A, 0x40, 
   0x23, 0x69, 0x3F, 0x22, 0x69, 0x3F, 0x22, 0x69, 0x3F, 0x22, 0x6C, 0x3F, 0x23, 0x6B, 0x3E, 0x22, 
   0x6A, 0x3D, 0x21, 0x6A, 0x3D, 0x21, 0x6A, 0x3D, 0x21, 0x6A, 0x3D, 0x21, 0x6A, 0x3D, 0x20, 0x69, 
   0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x6B, 0x3F, 0x20, 0x6C, 0x40, 0x21, 0x6B, 0x3F, 
   0x20, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 
   0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 
   0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 
   0x1E, 0x69, 0x3D, 0x1E, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 
   0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x6A, 
   0x3D, 0x1E, 0x6B, 0x3D, 0x1E, 0x6B, 0x3D, 0x1E, 0x6B, 0x3D, 0x1E, 0x6B, 0x3D, 0x1E, 0x6B, 0x3D, 
   0x1E, 0x6A, 0x3C, 0x1D, 0x69, 0x3B, 0x1C, 0x6A, 0x3C, 0x1D, 0x69, 0x3B, 0x1C, 0x69, 0x3B, 0x1C, 
   0x6A, 0x3C, 0x1D, 0x6B, 0x3D, 0x1E, 0x6A, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 
   0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 
   0x1E, 0x69, 0x3D, 0x1E, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x6A, 0x3E, 0x1F, 0x6A, 0x3E, 0x1F, 
   0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 
   0x3D, 0x1E, 0x6B, 0x3E, 0x1D, 0x6B, 0x3E, 0x1D, 0x6B, 0x3E, 0x1D, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 
   0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 
   0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6B, 0x3E, 0x1D, 0x6C, 
   0x3F, 0x1E, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 
   0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 
   0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 
   0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6B, 0x3E, 0x1D, 0x6C, 0x3F, 
   0x1E, 0x6C, 0x3F, 0x1E, 0x6C, 0x3F, 0x1E, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 
   0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 
   0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 
   0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 
   0x69, 0x3D, 0x1C, 0x6A, 0x3F, 0x1E, 0x6B, 0x42, 0x2B, 0x6B, 0x42, 0x2B, 0x6B, 0x42, 0x2B, 0x6B, 
   0x42, 0x2B, 0x6A, 0x41, 0x2A, 0x6A, 0x41, 0x2A, 0x6A, 0x42, 0x2A, 0x6A, 0x42, 0x29, 0x69, 0x41, 
   0x28, 0x68, 0x40, 0x27, 0x68, 0x40, 0x27, 0x68, 0x40, 0x27, 0x68, 0x40, 0x27, 0x69, 0x40, 0x27, 
   0x69, 0x3F, 0x26, 0x69, 0x40, 0x27, 0x69, 0x40, 0x27, 0x69, 0x40, 0x27, 0x69, 0x40, 0x27, 0x69, 
   0x40, 0x27, 0x68, 0x3F, 0x26, 0x68, 0x3F, 0x26, 0x68, 0x3F, 0x26, 0x68, 0x3F, 0x26, 0x68, 0x3F, 
   0x26, 0x68, 0x3F, 0x26, 0x68, 0x3F, 0x25, 0x68, 0x3F, 0x24, 0x68, 0x3F, 0x24, 0x68, 0x3F, 0x24, 
   0x67, 0x3E, 0x23, 0x67, 0x3E, 0x23, 0x67, 0x3E, 0x23, 0x66, 0x3D, 0x22, 0x66, 0x3D, 0x22, 0x66, 
   0x3D, 0x22, 0x66, 0x3D, 0x22, 0x66, 0x3D, 0x22, 0x66, 0x3D, 0x22, 0x66, 0x3D, 0x22, 0x66, 0x3D, 
   0x22, 0x66, 0x3D, 0x22, 0x67, 0x3E, 0x23, 0x67, 0x3E, 0x23, 0x67, 0x3E, 0x23, 0x67, 0x3E, 0x23, 
   0x67, 0x3E, 0x23, 0x67, 0x3E, 0x23, 0x67, 0x3E, 0x23, 0x67, 0x3E, 0x23, 0x6A, 0x41, 0x26, 0x6A, 
   0x41, 0x26, 0x69, 0x40, 0x25, 0x69, 0x40, 0x25, 0x69, 0x40, 0x25, 0x69, 0x40, 0x25, 0x69, 0x40, 
   0x25, 0x69, 0x40, 0x25, 0x69, 0x40, 0x25, 0x6A, 0x41, 0x26, 0x6C, 0x43, 0x28, 0x6C, 0x43, 0x28, 
   0x6B, 0x42, 0x27, 0x6B, 0x42, 0x27, 0x6B, 0x42, 0x27, 0x6B, 0x42, 0x27, 0x6B, 0x42, 0x27, 0x6B, 
   0x42, 0x27, 0x6B, 0x42, 0x27, 0x6B, 0x42, 0x27, 0x6B, 0x42, 0x27, 0x6B, 0x42, 0x27, 0x6C, 0x43, 
   0x28, 0x6C, 0x43, 0x28, 0x6C, 0x43, 0x28, 0x6C, 0x43, 0x28, 0x6C, 0x43, 0x28, 0x6C, 0x43, 0x28, 
   0x6B, 0x43, 0x29, 0x6B, 0x43, 0x2A, 0x6C, 0x44, 0x2B, 0x6C, 0x44, 0x2B, 0x6B, 0x43, 0x2A, 0x6B, 
   0x43, 0x2A, 0x6D, 0x45, 0x2C, 0x70, 0x47, 0x2E, 0x72, 0x48, 0x2F, 0x73, 0x4A, 0x31, 0x70, 0x47, 
   0x2E, 0x6F, 0x46, 0x2D, 0x71, 0x47, 0x2E, 0x70, 0x49, 0x32, 0x6F, 0x4A, 0x35, 0x73, 0x4D, 0x36, 
   0x73, 0x4C, 0x34, 0x70, 0x47, 0x2D, 0x6C, 0x43, 0x28, 0x6C, 0x43, 0x28, 0x6F, 0x44, 0x29, 0x6F, 
   0x44, 0x29, 0x6D, 0x42, 0x27, 0x6B, 0x40, 0x25, 0x6C, 0x41, 0x26, 0x6D, 0x42, 0x27, 0x6D, 0x42, 
   0x27, 0x6C, 0x41, 0x26, 0x6C, 0x41, 0x26, 0x6C, 0x41, 0x26, 0x6A, 0x3F, 0x24, 0x6A, 0x3F, 0x24, 
   0x6A, 0x3F, 0x24, 0x68, 0x3D, 0x22, 0x68, 0x3D, 0x22, 0x68, 0x3D, 0x22, 0x69, 0x3E, 0x23, 0x6A, 
   0x3F, 0x24, 0x6A, 0x3F, 0x24, 0x6A, 0x40, 0x24, 0x6A, 0x40, 0x23, 0x6A, 0x40, 0x23, 0x6A, 0x40, 
   0x23, 0x69, 0x3F, 0x22, 0x69, 0x3F, 0x22, 0x69, 0x3F, 0x22, 0x6C, 0x3F, 0x23, 0x6B, 0x3E, 0x22, 
   0x6A, 0x3D, 0x21, 0x6A, 0x3D, 0x21, 0x6A, 0x3D, 0x21, 0x6A, 0x3D, 0x21, 0x6A, 0x3D, 0x20, 0x69, 
   0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x6A, 0x3E, 0x1F, 0x6B, 0x3F, 0x20, 0x6A, 0x3E, 
   0x1F, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 
   0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 
   0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 
   0x1E, 0x69, 0x3D, 0x1E, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 
   0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x6A, 
   0x3D, 0x1E, 0x6B, 0x3D, 0x1E, 0x6B, 0x3D, 0x1E, 0x6B, 0x3D, 0x1E, 0x6B, 0x3D, 0x1E, 0x6B, 0x3D, 
   0x1E, 0x6A, 0x3C, 0x1D, 0x69, 0x3B, 0x1C, 0x6A, 0x3C, 0x1D, 0x69, 0x3B, 0x1C, 0x69, 0x3B, 0x1C, 
   0x6A, 0x3C, 0x1D, 0x6B, 0x3D, 0x1E, 0x6A, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 
   0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 
   0x1E, 0x69, 0x3D, 0x1E, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 
   0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 
   0x3D, 0x1E, 0x6B, 0x3E, 0x1D, 0x6B, 0x3E, 0x1D, 0x6B, 0x3E, 0x1D, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 
   0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 
   0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6B, 0x3E, 0x1D, 0x6C, 
   0x3F, 0x1E, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 
   0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 
   0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 
   0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6B, 0x3E, 0x1D, 0x6C, 0x3F, 
   0x1E, 0x6C, 0x3F, 0x1E, 0x6C, 0x3F, 0x1E, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 
   0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 
   0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 
   0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 
   0x69, 0x3D, 0x1C, 0x68, 0x3E, 0x1D, 0x6B, 0x42, 0x2B, 0x6B, 0x42, 0x2B, 0x6B, 0x42, 0x2B, 0x6B, 
   0x42, 0x2B, 0x6A, 0x41, 0x2A, 0x6A, 0x41, 0x2A, 0x6A, 0x42, 0x2A, 0x6A, 0x42, 0x29, 0x69, 0x41, 
   0x28, 0x68, 0x40, 0x27, 0x68, 0x40, 0x27, 0x68, 0x40, 0x27, 0x68, 0x40, 0x27, 0x69, 0x40, 0x27, 
   0x69, 0x3F, 0x26, 0x69, 0x40, 0x27, 0x69, 0x40, 0x27, 0x69, 0x40, 0x27, 0x69, 0x40, 0x27, 0x69, 
   0x40, 0x27, 0x68, 0x3F, 0x26, 0x68, 0x3F, 0x26, 0x68, 0x3F, 0x26, 0x68, 0x3F, 0x26, 0x68, 0x3F, 
   0x26, 0x68, 0x3F, 0x26, 0x68, 0x3F, 0x25, 0x68, 0x3F, 0x24, 0x68, 0x3F, 0x24, 0x68, 0x3F, 0x24, 
   0x67, 0x3E, 0x23, 0x67, 0x3E, 0x23, 0x67, 0x3E, 0x23, 0x66, 0x3D, 0x22, 0x66, 0x3D, 0x22, 0x66, 
   0x3D, 0x22, 0x66, 0x3D, 0x22, 0x66, 0x3D, 0x22, 0x66, 0x3D, 0x22, 0x66, 0x3D, 0x22, 0x66, 0x3D, 
   0x22, 0x66, 0x3D, 0x22, 0x67, 0x3E, 0x23, 0x67, 0x3E, 0x23, 0x67, 0x3E, 0x23, 0x67, 0x3E, 0x23, 
   0x67, 0x3E, 0x23, 0x67, 0x3E, 0x23, 0x67, 0x3E, 0x23, 0x67, 0x3E, 0x23, 0x6A, 0x41, 0x26, 0x6A, 
   0x41, 0x26, 0x69, 0x40, 0x25, 0x69, 0x40, 0x25, 0x69, 0x40, 0x25, 0x69, 0x40, 0x25, 0x69, 0x40, 
   0x25, 0x69, 0x40, 0x25, 0x69, 0x40, 0x25, 0x6A, 0x41, 0x26, 0x6C, 0x43, 0x28, 0x6C, 0x43, 0x28, 
   0x6B, 0x42, 0x27, 0x6B, 0x42, 0x27, 0x6B, 0x42, 0x27, 0x6B, 0x42, 0x27, 0x6B, 0x42, 0x27, 0x6B, 
   0x42, 0x27, 0x6B, 0x42, 0x27, 0x6B, 0x42, 0x27, 0x6B, 0x42, 0x27, 0x6B, 0x42, 0x27, 0x6C, 0x43, 
   0x28, 0x6C, 0x43, 0x28, 0x6C, 0x43, 0x28, 0x6C, 0x43, 0x28, 0x6C, 0x43, 0x28, 0x6C, 0x43, 0x28, 
   0x6A, 0x43, 0x29, 0x6A, 0x43, 0x2B, 0x6B, 0x45, 0x2C, 0x6C, 0x46, 0x2D, 0x6B, 0x45, 0x2C, 0x6B, 
   0x45, 0x2C, 0x6E, 0x48, 0x2F, 0x73, 0x4A, 0x31, 0x75, 0x4C, 0x33, 0x74, 0x4B, 0x32, 0x70, 0x47, 
   0x2E, 0x6E, 0x45, 0x2C, 0x70, 0x46, 0x2D, 0x70, 0x49, 0x31, 0x6F, 0x4A, 0x34, 0x74, 0x4F, 0x37, 
   0x72, 0x4B, 0x33, 0x71, 0x48, 0x2F, 0x72, 0x49, 0x2E, 0x6C, 0x43, 0x28, 0x6E, 0x43, 0x28, 0x6F, 
   0x44, 0x29, 0x6E, 0x43, 0x28, 0x6C, 0x41, 0x26, 0x6C, 0x41, 0x26, 0x6C, 0x41, 0x26, 0x6C, 0x41, 
   0x26, 0x6B, 0x40, 0x25, 0x6B, 0x40, 0x25, 0x6B, 0x40, 0x25, 0x6A, 0x3F, 0x24, 0x6A, 0x3F, 0x24, 
   0x6A, 0x3F, 0x24, 0x6B, 0x40, 0x25, 0x6B, 0x40, 0x25, 0x6B, 0x40, 0x25, 0x6B, 0x40, 0x25, 0x6A, 
   0x3F, 0x24, 0x6A, 0x3F, 0x24, 0x6A, 0x40, 0x24, 0x6A, 0x40, 0x23, 0x6A, 0x40, 0x23, 0x6A, 0x40, 
   0x23, 0x69, 0x3F, 0x22, 0x69, 0x3F, 0x22, 0x69, 0x3F, 0x22, 0x6C, 0x3F, 0x23, 0x6B, 0x3E, 0x22, 
   0x6A, 0x3D, 0x21, 0x6A, 0x3D, 0x21, 0x6A, 0x3D, 0x21, 0x6A, 0x3D, 0x21, 0x6A, 0x3D, 0x20, 0x69, 
   0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x6A, 0x3E, 0x1F, 0x6B, 0x3F, 0x20, 0x6A, 0x3E, 
   0x1F, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 
   0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 
   0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 
   0x1E, 0x69, 0x3D, 0x1E, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 
   0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x69, 
   0x3C, 0x1D, 0x6A, 0x3C, 0x1D, 0x6A, 0x3C, 0x1D, 0x6A, 0x3C, 0x1D, 0x6A, 0x3C, 0x1D, 0x6A, 0x3C, 
   0x1D, 0x69, 0x3B, 0x1C, 0x69, 0x3B, 0x1C, 0x6A, 0x3C, 0x1D, 0x69, 0x3B, 0x1C, 0x69, 0x3B, 0x1C, 
   0x6A, 0x3C, 0x1D, 0x6B, 0x3D, 0x1E, 0x6A, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 
   0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 
   0x1E, 0x69, 0x3D, 0x1E, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 
   0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 
   0x3D, 0x1E, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 
   0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 
   0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6B, 0x3E, 0x1D, 0x6C, 
   0x3F, 0x1E, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 
   0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 
   0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 
   0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6B, 0x3E, 0x1D, 0x6B, 0x3E, 
   0x1D, 0x6B, 0x3E, 0x1D, 0x6B, 0x3E, 0x1D, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 
   0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 
   0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 
   0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 
   0x69, 0x3E, 0x1C, 0x68, 0x3E, 0x1B, 0x6B, 0x42, 0x2B, 0x6B, 0x42, 0x2B, 0x6B, 0x42, 0x2B, 0x6B, 
   0x42, 0x2B, 0x6A, 0x41, 0x2A, 0x6A, 0x41, 0x2A, 0x6A, 0x42, 0x2A, 0x6A, 0x42, 0x29, 0x69, 0x41, 
   0x28, 0x68, 0x40, 0x27, 0x68, 0x40, 0x27, 0x68, 0x40, 0x27, 0x68, 0x40, 0x27, 0x69, 0x40, 0x27, 
   0x69, 0x3F, 0x26, 0x69, 0x40, 0x27, 0x69, 0x40, 0x27, 0x69, 0x40, 0x27, 0x69, 0x40, 0x27, 0x69, 
   0x40, 0x27, 0x68, 0x3F, 0x26, 0x68, 0x3F, 0x26, 0x68, 0x3F, 0x26, 0x68, 0x3F, 0x26, 0x68, 0x3F, 
   0x26, 0x68, 0x3F, 0x26, 0x68, 0x3F, 0x25, 0x68, 0x3F, 0x24, 0x68, 0x3F, 0x24, 0x68, 0x3F, 0x24, 
   0x67, 0x3E, 0x23, 0x67, 0x3E, 0x23, 0x67, 0x3E, 0x23, 0x66, 0x3D, 0x22, 0x66, 0x3D, 0x22, 0x66, 
   0x3D, 0x22, 0x66, 0x3D, 0x22, 0x66, 0x3D, 0x22, 0x66, 0x3D, 0x22, 0x66, 0x3D, 0x22, 0x66, 0x3D, 
   0x22, 0x66, 0x3D, 0x22, 0x67, 0x3E, 0x23, 0x67, 0x3E, 0x23, 0x67, 0x3E, 0x23, 0x67, 0x3E, 0x23, 
   0x67, 0x3E, 0x23, 0x67, 0x3E, 0x23, 0x67, 0x3E, 0x23, 0x67, 0x3E, 0x23, 0x6A, 0x41, 0x26, 0x6A, 
   0x41, 0x26, 0x69, 0x40, 0x25, 0x69, 0x40, 0x25, 0x69, 0x40, 0x25, 0x69, 0x40, 0x25, 0x69, 0x40, 
   0x25, 0x69, 0x40, 0x25, 0x69, 0x40, 0x25, 0x6A, 0x41, 0x26, 0x6C, 0x43, 0x28, 0x6C, 0x43, 0x28, 
   0x6B, 0x42, 0x27, 0x6B, 0x42, 0x27, 0x6B, 0x42, 0x27, 0x6B, 0x42, 0x27, 0x6B, 0x42, 0x27, 0x6B, 
   0x42, 0x27, 0x6B, 0x42, 0x27, 0x6B, 0x42, 0x27, 0x6B, 0x42, 0x27, 0x6B, 0x42, 0x27, 0x6C, 0x43, 
   0x28, 0x6C, 0x43, 0x28, 0x6C, 0x43, 0x28, 0x6C, 0x43, 0x28, 0x6C, 0x43, 0x28, 0x6C, 0x43, 0x28, 
   0x6B, 0x43, 0x29, 0x6A, 0x44, 0x2B, 0x6B, 0x45, 0x2C, 0x6D, 0x47, 0x2E, 0x6D, 0x47, 0x2E, 0x6F, 
   0x49, 0x2F, 0x72, 0x4C, 0x32, 0x76, 0x4E, 0x35, 0x77, 0x4E, 0x35, 0x72, 0x49, 0x30, 0x6E, 0x45, 
   0x2C, 0x6D, 0x44, 0x2B, 0x70, 0x46, 0x2C, 0x6E, 0x47, 0x30, 0x6E, 0x49, 0x33, 0x73, 0x4E, 0x36, 
   0x70, 0x4A, 0x32, 0x73, 0x4A, 0x30, 0x75, 0x4B, 0x30, 0x6D, 0x44, 0x29, 0x6D, 0x42, 0x27, 0x6F, 
   0x44, 0x29, 0x6E, 0x43, 0x28, 0x6D, 0x42, 0x27, 0x6D, 0x42, 0x27, 0x6C, 0x41, 0x26, 0x6A, 0x3F, 
   0x24, 0x6A, 0x3F, 0x24, 0x6A, 0x3F, 0x24, 0x6A, 0x3F, 0x24, 0x6A, 0x3F, 0x24, 0x6A, 0x3F, 0x24, 
   0x6A, 0x3F, 0x24, 0x6B, 0x40, 0x25, 0x6B, 0x40, 0x25, 0x6B, 0x40, 0x25, 0x6B, 0x40, 0x25, 0x6A, 
   0x3F, 0x24, 0x6A, 0x3F, 0x24, 0x6A, 0x40, 0x24, 0x6A, 0x40, 0x23, 0x6A, 0x40, 0x23, 0x6A, 0x40, 
   0x23, 0x69, 0x3F, 0x22, 0x69, 0x3F, 0x22, 0x69, 0x3F, 0x22, 0x6C, 0x3F, 0x23, 0x6B, 0x3E, 0x22, 
   0x6A, 0x3D, 0x21, 0x6A, 0x3D, 0x21, 0x6A, 0x3D, 0x21, 0x6A, 0x3D, 0x21, 0x6A, 0x3D, 0x20, 0x69, 
   0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x6A, 0x3E, 0x1F, 0x69, 0x3D, 
   0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 
   0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 
   0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 
   0x1E, 0x69, 0x3D, 0x1E, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x67, 0x3B, 0x1C, 
   0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x69, 
   0x3C, 0x1D, 0x69, 0x3B, 0x1C, 0x69, 0x3B, 0x1C, 0x69, 0x3B, 0x1C, 0x69, 0x3B, 0x1C, 0x69, 0x3B, 
   0x1C, 0x69, 0x3B, 0x1C, 0x69, 0x3B, 0x1C, 0x6A, 0x3C, 0x1D, 0x69, 0x3B, 0x1C, 0x69, 0x3B, 0x1C, 
   0x6A, 0x3C, 0x1D, 0x6B, 0x3D, 0x1E, 0x6A, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 
   0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 
   0x1E, 0x69, 0x3D, 0x1E, 0x66, 0x3A, 0x1B, 0x67, 0x3B, 0x1C, 0x68, 0x3C, 0x1D, 0x69, 0x3D, 0x1E, 
   0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 
   0x3D, 0x1E, 0x69, 0x3C, 0x1B, 0x69, 0x3C, 0x1B, 0x69, 0x3C, 0x1B, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 
   0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 
   0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6B, 0x3E, 0x1D, 0x6C, 
   0x3F, 0x1E, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 
   0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 
   0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 
   0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 
   0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 
   0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 
   0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 
   0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 
   0x6A, 0x3F, 0x1D, 0x6A, 0x40, 0x1D, 0x6B, 0x42, 0x2B, 0x6B, 0x42, 0x2B, 0x6B, 0x42, 0x2B, 0x6B, 
   0x42, 0x2B, 0x6B, 0x42, 0x2B, 0x69, 0x40, 0x29, 0x69, 0x41, 0x29, 0x69, 0x41, 0x28, 0x69, 0x41, 
   0x28, 0x69, 0x41, 0x28, 0x68, 0x40, 0x27, 0x68, 0x40, 0x27, 0x68, 0x40, 0x27, 0x68, 0x40, 0x27, 
   0x68, 0x3F, 0x26, 0x68, 0x3F, 0x26, 0x68, 0x3F, 0x26, 0x67, 0x3F, 0x26, 0x67, 0x3F, 0x26, 0x67, 
   0x3F, 0x26, 0x67, 0x3E, 0x25, 0x67, 0x3E, 0x25, 0x67, 0x3E, 0x25, 0x67, 0x3E, 0x25, 0x67, 0x3E, 
   0x25, 0x67, 0x3E, 0x25, 0x67, 0x3E, 0x24, 0x67, 0x3E, 0x24, 0x67, 0x3E, 0x24, 0x67, 0x3E, 0x24, 
   0x66, 0x3D, 0x24, 0x66, 0x3D, 0x24, 0x66, 0x3D, 0x24, 0x66, 0x3D, 0x22, 0x66, 0x3D, 0x22, 0x66, 
   0x3D, 0x22, 0x66, 0x3D, 0x22, 0x66, 0x3D, 0x22, 0x66, 0x3D, 0x22, 0x67, 0x3E, 0x23, 0x67, 0x3E, 
   0x23, 0x67, 0x3E, 0x23, 0x66, 0x3D, 0x22, 0x66, 0x3D, 0x22, 0x66, 0x3D, 0x22, 0x66, 0x3D, 0x22, 
   0x66, 0x3D, 0x22, 0x66, 0x3D, 0x22, 0x66, 0x3D, 0x22, 0x67, 0x3E, 0x23, 0x68, 0x3F, 0x24, 0x68, 
   0x3F, 0x24, 0x68, 0x3F, 0x24, 0x69, 0x40, 0x25, 0x68, 0x3F, 0x24, 0x68, 0x3F, 0x24, 0x68, 0x3F, 
   0x24, 0x68, 0x3F, 0x24, 0x68, 0x3F, 0x24, 0x6A, 0x41, 0x26, 0x6B, 0x42, 0x27, 0x6B, 0x42, 0x27, 
   0x6A, 0x41, 0x26, 0x6A, 0x41, 0x26, 0x6A, 0x41, 0x26, 0x6A, 0x41, 0x26, 0x6A, 0x41, 0x26, 0x6A, 
   0x41, 0x26, 0x6A, 0x41, 0x26, 0x6A, 0x41, 0x26, 0x6A, 0x41, 0x26, 0x6A, 0x41, 0x26, 0x6B, 0x42, 
   0x28, 0x6B, 0x42, 0x28, 0x6B, 0x42, 0x28, 0x6B, 0x42, 0x29, 0x6B, 0x42, 0x29, 0x6D, 0x44, 0x2A, 
   0x6C, 0x43, 0x2A, 0x6B, 0x44, 0x2B, 0x6C, 0x46, 0x2D, 0x6E, 0x49, 0x30, 0x6D, 0x48, 0x31, 0x6F, 
   0x4A, 0x33, 0x72, 0x4D, 0x37, 0x77, 0x50, 0x37, 0x73, 0x4C, 0x33, 0x6E, 0x46, 0x2E, 0x6C, 0x45, 
   0x2C, 0x6B, 0x44, 0x2B, 0x6C, 0x45, 0x2C, 0x6D, 0x46, 0x2F, 0x70, 0x48, 0x34, 0x75, 0x4E, 0x37, 
   0x72, 0x4A, 0x33, 0x70, 0x47, 0x2E, 0x6E, 0x45, 0x2C, 0x6A, 0x42, 0x28, 0x6B, 0x41, 0x26, 0x6C, 
   0x42, 0x27, 0x6D, 0x43, 0x28, 0x6E, 0x44, 0x29, 0x6D, 0x43, 0x28, 0x6B, 0x42, 0x27, 0x69, 0x3F, 
   0x24, 0x6A, 0x3F, 0x24, 0x6B, 0x40, 0x25, 0x69, 0x3E, 0x23, 0x6A, 0x3F, 0x24, 0x6A, 0x3F, 0x24, 
   0x6A, 0x3F, 0x24, 0x6A, 0x3F, 0x24, 0x6A, 0x3F, 0x24, 0x6A, 0x3F, 0x24, 0x69, 0x3E, 0x23, 0x69, 
   0x3E, 0x23, 0x6B, 0x40, 0x25, 0x6B, 0x41, 0x25, 0x6A, 0x40, 0x23, 0x6A, 0x40, 0x23, 0x6A, 0x40, 
   0x23, 0x69, 0x3F, 0x22, 0x6A, 0x40, 0x23, 0x69, 0x3F, 0x22, 0x6B, 0x3E, 0x21, 0x6A, 0x3E, 0x20, 
   0x6A, 0x3E, 0x20, 0x6A, 0x3E, 0x20, 0x69, 0x3D, 0x1F, 0x69, 0x3D, 0x1F, 0x69, 0x3D, 0x1F, 0x69, 
   0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 
   0x1E, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x69, 0x3D, 0x1E, 
   0x6A, 0x3E, 0x1F, 0x69, 0x3D, 0x1E, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x68, 
   0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 
   0x1D, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x67, 0x3B, 0x1C, 
   0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x66, 0x3A, 0x1B, 0x67, 
   0x3B, 0x1C, 0x68, 0x3B, 0x1C, 0x68, 0x3B, 0x1C, 0x68, 0x3B, 0x1C, 0x68, 0x3B, 0x1C, 0x68, 0x3B, 
   0x1C, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x68, 0x3B, 0x1C, 0x67, 0x3A, 0x1B, 0x67, 0x3A, 0x1B, 
   0x68, 0x3B, 0x1C, 0x69, 0x3C, 0x1D, 0x69, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x68, 
   0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x69, 0x3D, 
   0x1E, 0x6A, 0x3E, 0x1F, 0x66, 0x3A, 0x1B, 0x67, 0x3B, 0x1C, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 
   0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x68, 
   0x3C, 0x1D, 0x68, 0x3C, 0x1B, 0x68, 0x3C, 0x1B, 0x68, 0x3C, 0x1B, 0x69, 0x3D, 0x1C, 0x69, 0x3D, 
   0x1C, 0x69, 0x3D, 0x1C, 0x69, 0x3D, 0x1C, 0x69, 0x3D, 0x1C, 0x69, 0x3D, 0x1C, 0x69, 0x3D, 0x1C, 
   0x69, 0x3D, 0x1C, 0x69, 0x3D, 0x1C, 0x69, 0x3D, 0x1C, 0x68, 0x3C, 0x1B, 0x69, 0x3D, 0x1C, 0x69, 
   0x3D, 0x1C, 0x69, 0x3D, 0x1C, 0x69, 0x3D, 0x1C, 0x69, 0x3D, 0x1C, 0x69, 0x3D, 0x1C, 0x69, 0x3D, 
   0x1C, 0x69, 0x3D, 0x1C, 0x69, 0x3D, 0x1C, 0x69, 0x3D, 0x1C, 0x69, 0x3D, 0x1C, 0x69, 0x3D, 0x1C, 
   0x69, 0x3D, 0x1C, 0x69, 0x3D, 0x1C, 0x69, 0x3D, 0x1C, 0x69, 0x3D, 0x1C, 0x69, 0x3D, 0x1C, 0x69, 
   0x3D, 0x1C, 0x69, 0x3D, 0x1C, 0x69, 0x3D, 0x1C, 0x69, 0x3D, 0x1C, 0x69, 0x3D, 0x1C, 0x69, 0x3D, 
   0x1C, 0x69, 0x3D, 0x1C, 0x69, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 
   0x6B, 0x3E, 0x1D, 0x6B, 0x3E, 0x1D, 0x6B, 0x3E, 0x1D, 0x6B, 0x3E, 0x1D, 0x6A, 0x3D, 0x1C, 0x6A, 
   0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 
   0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 
   0x6A, 0x3E, 0x1D, 0x6B, 0x3F, 0x1D, 0x6B, 0x42, 0x2B, 0x6B, 0x42, 0x2B, 0x6B, 0x42, 0x2B, 0x6B, 
   0x42, 0x2B, 0x6B, 0x42, 0x2B, 0x69, 0x40, 0x29, 0x69, 0x40, 0x29, 0x69, 0x41, 0x28, 0x69, 0x41, 
   0x28, 0x69, 0x41, 0x28, 0x68, 0x40, 0x27, 0x68, 0x40, 0x27, 0x68, 0x40, 0x27, 0x68, 0x40, 0x27, 
   0x67, 0x3F, 0x26, 0x67, 0x3F, 0x26, 0x67, 0x3F, 0x26, 0x66, 0x3E, 0x25, 0x66, 0x3E, 0x25, 0x66, 
   0x3E, 0x25, 0x66, 0x3D, 0x24, 0x66, 0x3D, 0x24, 0x66, 0x3D, 0x24, 0x66, 0x3D, 0x24, 0x66, 0x3D, 
   0x24, 0x66, 0x3D, 0x24, 0x66, 0x3D, 0x24, 0x66, 0x3D, 0x24, 0x66, 0x3D, 0x24, 0x66, 0x3D, 0x24, 
   0x66, 0x3D, 0x24, 0x66, 0x3D, 0x24, 0x66, 0x3D, 0x24, 0x66, 0x3D, 0x22, 0x66, 0x3D, 0x22, 0x66, 
   0x3D, 0x22, 0x66, 0x3D, 0x22, 0x66, 0x3D, 0x22, 0x66, 0x3D, 0x22, 0x67, 0x3E, 0x23, 0x67, 0x3E, 
   0x23, 0x67, 0x3E, 0x23, 0x66, 0x3D, 0x22, 0x65, 0x3C, 0x21, 0x65, 0x3C, 0x21, 0x65, 0x3C, 0x21, 
   0x66, 0x3D, 0x22, 0x66, 0x3D, 0x22, 0x66, 0x3D, 0x22, 0x67, 0x3E, 0x23, 0x67, 0x3E, 0x23, 0x67, 
   0x3E, 0x23, 0x67, 0x3E, 0x23, 0x68, 0x3F, 0x24, 0x67, 0x3E, 0x23, 0x67, 0x3E, 0x23, 0x68, 0x3F, 
   0x24, 0x68, 0x3F, 0x24, 0x68, 0x3F, 0x24, 0x6A, 0x41, 0x26, 0x6A, 0x41, 0x26, 0x6A, 0x41, 0x26, 
   0x6A, 0x41, 0x26, 0x6A, 0x41, 0x26, 0x6A, 0x41, 0x26, 0x6A, 0x41, 0x26, 0x69, 0x40, 0x25, 0x69, 
   0x40, 0x25, 0x69, 0x40, 0x25, 0x69, 0x40, 0x25, 0x69, 0x40, 0x25, 0x69, 0x40, 0x25, 0x6A, 0x41, 
   0x28, 0x6A, 0x41, 0x28, 0x6A, 0x41, 0x28, 0x6B, 0x42, 0x29, 0x6B, 0x42, 0x29, 0x6D, 0x44, 0x2B, 
   0x6D, 0x44, 0x2B, 0x6C, 0x44, 0x2B, 0x6D, 0x47, 0x2E, 0x6F, 0x4A, 0x32, 0x6E, 0x49, 0x33, 0x6E, 
   0x4A, 0x36, 0x6F, 0x4C, 0x38, 0x73, 0x4D, 0x36, 0x70, 0x4A, 0x32, 0x6E, 0x48, 0x30, 0x6E, 0x48, 
   0x31, 0x6B, 0x45, 0x2E, 0x6B, 0x45, 0x2E, 0x6F, 0x47, 0x32, 0x76, 0x4B, 0x38, 0x78, 0x4E, 0x39, 
   0x74, 0x4B, 0x34, 0x6F, 0x46, 0x2F, 0x6D, 0x44, 0x2C, 0x68, 0x40, 0x27, 0x6A, 0x41, 0x27, 0x69, 
   0x40, 0x25, 0x69, 0x40, 0x25, 0x6B, 0x43, 0x28, 0x6C, 0x43, 0x28, 0x6A, 0x41, 0x26, 0x69, 0x3F, 
   0x24, 0x6A, 0x3F, 0x24, 0x6B, 0x40, 0x25, 0x69, 0x3E, 0x23, 0x6A, 0x3F, 0x24, 0x6A, 0x3F, 0x24, 
   0x6A, 0x3F, 0x24, 0x6A, 0x3F, 0x24, 0x6A, 0x3F, 0x24, 0x6A, 0x3F, 0x24, 0x69, 0x3E, 0x23, 0x69, 
   0x3E, 0x23, 0x6B, 0x40, 0x25, 0x6B, 0x41, 0x25, 0x6A, 0x40, 0x23, 0x6A, 0x40, 0x23, 0x6A, 0x40, 
   0x23, 0x69, 0x3F, 0x22, 0x6A, 0x40, 0x23, 0x69, 0x3F, 0x22, 0x6A, 0x3E, 0x1F, 0x6A, 0x3E, 0x1F, 
   0x6A, 0x3E, 0x1F, 0x6A, 0x3E, 0x1F, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 
   0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 
   0x1E, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x69, 0x3D, 0x1E, 
   0x6A, 0x3E, 0x1F, 0x69, 0x3D, 0x1E, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x67, 
   0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 
   0x1C, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x67, 0x3B, 0x1C, 
   0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x66, 0x3A, 0x1B, 0x65, 0x39, 0x1A, 0x66, 
   0x3A, 0x1B, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 
   0x1C, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x67, 0x3B, 0x1C, 0x66, 0x3A, 0x1B, 0x66, 0x3A, 0x1B, 
   0x67, 0x3B, 0x1C, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 
   0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x68, 0x3C, 0x1D, 0x69, 0x3D, 
   0x1E, 0x6A, 0x3E, 0x1F, 0x67, 0x3B, 0x1C, 0x68, 0x3C, 0x1D, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 
   0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x68, 
   0x3C, 0x1D, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x68, 0x3D, 0x1C, 0x68, 0x3D, 
   0x1C, 0x68, 0x3D, 0x1C, 0x68, 0x3D, 0x1C, 0x68, 0x3D, 0x1C, 0x68, 0x3D, 0x1C, 0x68, 0x3D, 0x1C, 
   0x68, 0x3D, 0x1C, 0x68, 0x3D, 0x1C, 0x68, 0x3D, 0x1C, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 
   0x3C, 0x1B, 0x68, 0x3D, 0x1C, 0x68, 0x3D, 0x1C, 0x68, 0x3D, 0x1C, 0x68, 0x3D, 0x1C, 0x68, 0x3D, 
   0x1C, 0x68, 0x3D, 0x1C, 0x68, 0x3D, 0x1C, 0x68, 0x3D, 0x1C, 0x68, 0x3D, 0x1C, 0x68, 0x3D, 0x1C, 
   0x68, 0x3D, 0x1C, 0x68, 0x3D, 0x1C, 0x68, 0x3D, 0x1C, 0x68, 0x3D, 0x1C, 0x68, 0x3D, 0x1C, 0x68, 
   0x3D, 0x1C, 0x68, 0x3D, 0x1C, 0x68, 0x3D, 0x1C, 0x68, 0x3D, 0x1C, 0x68, 0x3D, 0x1C, 0x68, 0x3D, 
   0x1C, 0x68, 0x3D, 0x1C, 0x68, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 
   0x6B, 0x3E, 0x1D, 0x6B, 0x3E, 0x1D, 0x6B, 0x3E, 0x1D, 0x6B, 0x3E, 0x1D, 0x6A, 0x3D, 0x1C, 0x6A, 
   0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 
   0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 
   0x6A, 0x3D, 0x1C, 0x6B, 0x3E, 0x1D, 0x6A, 0x41, 0x2A, 0x6A, 0x41, 0x2A, 0x6A, 0x41, 0x2A, 0x6A, 
   0x41, 0x2A, 0x6A, 0x41, 0x2A, 0x69, 0x40, 0x29, 0x68, 0x40, 0x28, 0x68, 0x40, 0x27, 0x68, 0x40, 
   0x27, 0x68, 0x40, 0x27, 0x68, 0x40, 0x27, 0x68, 0x40, 0x27, 0x68, 0x40, 0x27, 0x68, 0x40, 0x27, 
   0x67, 0x3F, 0x26, 0x67, 0x3F, 0x26, 0x67, 0x3F, 0x26, 0x66, 0x3E, 0x25, 0x66, 0x3E, 0x25, 0x66, 
   0x3E, 0x25, 0x66, 0x3D, 0x24, 0x66, 0x3D, 0x24, 0x66, 0x3D, 0x24, 0x66, 0x3D, 0x24, 0x66, 0x3D, 
   0x24, 0x66, 0x3D, 0x24, 0x66, 0x3D, 0x24, 0x66, 0x3D, 0x24, 0x66, 0x3D, 0x24, 0x66, 0x3D, 0x24, 
   0x66, 0x3D, 0x24, 0x66, 0x3D, 0x24, 0x66, 0x3D, 0x24, 0x66, 0x3D, 0x22, 0x66, 0x3D, 0x22, 0x66, 
   0x3D, 0x22, 0x66, 0x3D, 0x22, 0x66, 0x3D, 0x22, 0x66, 0x3D, 0x22, 0x66, 0x3D, 0x22, 0x66, 0x3D, 
   0x22, 0x66, 0x3D, 0x22, 0x66, 0x3D, 0x22, 0x65, 0x3C, 0x21, 0x65, 0x3C, 0x21, 0x65, 0x3C, 0x21, 
   0x66, 0x3D, 0x22, 0x66, 0x3D, 0x22, 0x66, 0x3D, 0x22, 0x66, 0x3D, 0x22, 0x66, 0x3D, 0x22, 0x66, 
   0x3D, 0x22, 0x66, 0x3D, 0x22, 0x67, 0x3E, 0x23, 0x68, 0x3F, 0x24, 0x68, 0x3F, 0x24, 0x68, 0x3F, 
   0x24, 0x68, 0x3F, 0x24, 0x68, 0x3F, 0x24, 0x69, 0x40, 0x25, 0x69, 0x40, 0x25, 0x69, 0x40, 0x25, 
   0x69, 0x40, 0x25, 0x69, 0x40, 0x25, 0x69, 0x40, 0x25, 0x69, 0x40, 0x25, 0x69, 0x40, 0x25, 0x69, 
   0x40, 0x25, 0x69, 0x40, 0x25, 0x69, 0x40, 0x25, 0x69, 0x40, 0x25, 0x69, 0x40, 0x25, 0x6A, 0x41, 
   0x28, 0x6A, 0x41, 0x28, 0x6A, 0x41, 0x28, 0x6B, 0x42, 0x29, 0x6A, 0x41, 0x28, 0x6B, 0x42, 0x29, 
   0x6D, 0x45, 0x2C, 0x6E, 0x47, 0x2E, 0x6F, 0x49, 0x30, 0x71, 0x4C, 0x34, 0x70, 0x4B, 0x35, 0x6F, 
   0x4B, 0x36, 0x6D, 0x4A, 0x36, 0x71, 0x4B, 0x33, 0x73, 0x4D, 0x34, 0x73, 0x4D, 0x35, 0x71, 0x4B, 
   0x33, 0x6D, 0x47, 0x2F, 0x6D, 0x47, 0x2F, 0x71, 0x49, 0x34, 0x76, 0x4C, 0x39, 0x79, 0x4F, 0x3A, 
   0x78, 0x4F, 0x39, 0x73, 0x4A, 0x33, 0x6F, 0x47, 0x2F, 0x6B, 0x43, 0x2A, 0x6D, 0x44, 0x29, 0x6A, 
   0x41, 0x26, 0x68, 0x3F, 0x24, 0x6A, 0x41, 0x26, 0x6B, 0x42, 0x27, 0x69, 0x41, 0x26, 0x69, 0x3F, 
   0x24, 0x6B, 0x3F, 0x24, 0x6B, 0x40, 0x25, 0x69, 0x3E, 0x23, 0x6A, 0x3F, 0x24, 0x6A, 0x3F, 0x24, 
   0x6A, 0x3F, 0x24, 0x6A, 0x3F, 0x24, 0x6A, 0x3F, 0x24, 0x6A, 0x3F, 0x24, 0x69, 0x3E, 0x23, 0x69, 
   0x3E, 0x23, 0x6B, 0x40, 0x25, 0x6B, 0x40, 0x24, 0x69, 0x3F, 0x22, 0x69, 0x3F, 0x22, 0x6A, 0x40, 
   0x23, 0x69, 0x3F, 0x22, 0x69, 0x3F, 0x22, 0x69, 0x3E, 0x21, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 
   0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x68, 
   0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 
   0x1D, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x68, 0x3C, 0x1D, 
   0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x67, 
   0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 
   0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 
   0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x66, 0x3A, 0x1B, 0x65, 0x39, 0x1A, 0x66, 
   0x3A, 0x1B, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 
   0x1C, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x67, 0x3B, 0x1C, 0x66, 0x3A, 0x1B, 0x67, 0x3B, 0x1C, 
   0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 
   0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x68, 0x3C, 
   0x1D, 0x69, 0x3D, 0x1E, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 
   0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x68, 
   0x3C, 0x1D, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 
   0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x68, 0x3D, 0x1C, 
   0x68, 0x3D, 0x1C, 0x68, 0x3D, 0x1C, 0x68, 0x3D, 0x1C, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 
   0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x68, 0x3D, 0x1C, 0x68, 0x3D, 
   0x1C, 0x68, 0x3D, 0x1C, 0x68, 0x3D, 0x1C, 0x68, 0x3D, 0x1C, 0x68, 0x3D, 0x1C, 0x68, 0x3D, 0x1C, 
   0x68, 0x3D, 0x1C, 0x68, 0x3D, 0x1C, 0x68, 0x3D, 0x1C, 0x68, 0x3D, 0x1C, 0x68, 0x3D, 0x1C, 0x68, 
   0x3D, 0x1C, 0x68, 0x3D, 0x1C, 0x68, 0x3D, 0x1C, 0x68, 0x3D, 0x1C, 0x68, 0x3D, 0x1C, 0x68, 0x3D, 
   0x1C, 0x68, 0x3D, 0x1C, 0x68, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 
   0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x69, 0x3C, 0x1B, 0x69, 
   0x3C, 0x1B, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 
   0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 
   0x69, 0x3C, 0x1B, 0x69, 0x3C, 0x1B, 0x69, 0x40, 0x29, 0x69, 0x40, 0x29, 0x69, 0x40, 0x29, 0x69, 
   0x40, 0x29, 0x69, 0x40, 0x29, 0x68, 0x3F, 0x28, 0x67, 0x3F, 0x27, 0x67, 0x3F, 0x26, 0x67, 0x3F, 
   0x26, 0x67, 0x3F, 0x26, 0x68, 0x40, 0x27, 0x68, 0x40, 0x27, 0x68, 0x40, 0x27, 0x68, 0x40, 0x27, 
   0x67, 0x3F, 0x26, 0x67, 0x3F, 0x26, 0x67, 0x3F, 0x26, 0x66, 0x3E, 0x25, 0x66, 0x3E, 0x25, 0x66, 
   0x3E, 0x25, 0x66, 0x3D, 0x24, 0x66, 0x3D, 0x24, 0x66, 0x3D, 0x24, 0x66, 0x3D, 0x24, 0x66, 0x3D, 
   0x24, 0x66, 0x3D, 0x24, 0x66, 0x3D, 0x24, 0x66, 0x3D, 0x24, 0x66, 0x3D, 0x24, 0x66, 0x3D, 0x24, 
   0x66, 0x3D, 0x24, 0x66, 0x3D, 0x24, 0x66, 0x3D, 0x24, 0x66, 0x3D, 0x22, 0x66, 0x3D, 0x22, 0x66, 
   0x3D, 0x22, 0x66, 0x3D, 0x22, 0x66, 0x3D, 0x22, 0x66, 0x3D, 0x22, 0x66, 0x3D, 0x22, 0x65, 0x3C, 
   0x21, 0x65, 0x3C, 0x21, 0x65, 0x3C, 0x21, 0x65, 0x3C, 0x21, 0x65, 0x3C, 0x21, 0x65, 0x3C, 0x21, 
   0x66, 0x3D, 0x22, 0x66, 0x3D, 0x22, 0x66, 0x3D, 0x22, 0x65, 0x3C, 0x21, 0x65, 0x3C, 0x21, 0x65, 
   0x3C, 0x21, 0x65, 0x3C, 0x21, 0x67, 0x3E, 0x23, 0x68, 0x3F, 0x24, 0x68, 0x3F, 0x24, 0x68, 0x3F, 
   0x24, 0x68, 0x3F, 0x24, 0x68, 0x3F, 0x24, 0x68, 0x3F, 0x24, 0x68, 0x3F, 0x24, 0x68, 0x3F, 0x24, 
   0x68, 0x3F, 0x24, 0x68, 0x3F, 0x24, 0x68, 0x3F, 0x24, 0x69, 0x40, 0x25, 0x69, 0x40, 0x25, 0x69, 
   0x40, 0x25, 0x69, 0x40, 0x25, 0x69, 0x40, 0x25, 0x69, 0x40, 0x25, 0x69, 0x40, 0x25, 0x6A, 0x41, 
   0x28, 0x6A, 0x41, 0x28, 0x6A, 0x41, 0x28, 0x6A, 0x41, 0x28, 0x69, 0x40, 0x27, 0x6B, 0x42, 0x29, 
   0x6D, 0x44, 0x2B, 0x6D, 0x47, 0x2E, 0x6E, 0x49, 0x30, 0x71, 0x4C, 0x33, 0x71, 0x4C, 0x36, 0x70, 
   0x4C, 0x36, 0x6E, 0x4B, 0x37, 0x73, 0x4D, 0x36, 0x76, 0x50, 0x38, 0x75, 0x4F, 0x37, 0x71, 0x4B, 
   0x33, 0x6D, 0x47, 0x2F, 0x6D, 0x47, 0x2E, 0x70, 0x48, 0x32, 0x73, 0x49, 0x36, 0x79, 0x50, 0x3A, 
   0x7F, 0x56, 0x3F, 0x77, 0x4E, 0x37, 0x71, 0x49, 0x31, 0x6E, 0x46, 0x2D, 0x6F, 0x46, 0x2B, 0x6D, 
   0x44, 0x29, 0x6B, 0x42, 0x27, 0x6B, 0x42, 0x27, 0x69, 0x40, 0x25, 0x69, 0x40, 0x25, 0x69, 0x3F, 
   0x24, 0x6B, 0x3F, 0x24, 0x6B, 0x40, 0x25, 0x69, 0x3E, 0x23, 0x6A, 0x3F, 0x24, 0x6A, 0x3F, 0x24, 
   0x6A, 0x3F, 0x24, 0x6A, 0x3F, 0x24, 0x6A, 0x3F, 0x24, 0x6A, 0x3F, 0x24, 0x69, 0x3E, 0x23, 0x69, 
   0x3E, 0x23, 0x6B, 0x40, 0x25, 0x6A, 0x40, 0x24, 0x68, 0x3E, 0x21, 0x68, 0x3E, 0x21, 0x69, 0x3F, 
   0x22, 0x68, 0x3E, 0x21, 0x68, 0x3E, 0x21, 0x68, 0x3D, 0x20, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 
   0x68, 0x3C, 0x1D, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x68, 0x3C, 0x1D, 0x67, 
   0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 
   0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x66, 0x3A, 0x1B, 0x67, 0x3B, 0x1C, 
   0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x67, 
   0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 
   0x1C, 0x67, 0x3B, 0x1C, 0x66, 0x3A, 0x1B, 0x66, 0x3A, 0x1B, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 
   0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x66, 0x3A, 0x1B, 0x65, 0x39, 0x1A, 0x66, 
   0x3A, 0x1B, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 
   0x1C, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x67, 0x3B, 0x1C, 0x66, 0x3A, 0x1B, 0x68, 0x3C, 0x1D, 
   0x67, 0x3B, 0x1C, 0x66, 0x3A, 0x1B, 0x66, 0x3A, 0x1B, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 
   0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 
   0x1C, 0x68, 0x3C, 0x1D, 0x69, 0x3D, 0x1E, 0x68, 0x3C, 0x1D, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 
   0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x68, 
   0x3C, 0x1D, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x66, 0x3B, 0x1A, 0x66, 0x3B, 
   0x1A, 0x66, 0x3B, 0x1A, 0x66, 0x3B, 0x1A, 0x66, 0x3B, 0x1A, 0x66, 0x3B, 0x1A, 0x67, 0x3C, 0x1B, 
   0x68, 0x3D, 0x1C, 0x68, 0x3D, 0x1C, 0x68, 0x3D, 0x1C, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 
   0x3C, 0x1B, 0x66, 0x3B, 0x1A, 0x66, 0x3B, 0x1A, 0x66, 0x3B, 0x1A, 0x67, 0x3C, 0x1B, 0x68, 0x3D, 
   0x1C, 0x68, 0x3D, 0x1C, 0x68, 0x3D, 0x1C, 0x68, 0x3D, 0x1C, 0x68, 0x3D, 0x1C, 0x68, 0x3D, 0x1C, 
   0x68, 0x3D, 0x1C, 0x68, 0x3D, 0x1C, 0x68, 0x3D, 0x1C, 0x68, 0x3D, 0x1C, 0x68, 0x3D, 0x1C, 0x68, 
   0x3D, 0x1C, 0x68, 0x3D, 0x1C, 0x68, 0x3D, 0x1C, 0x68, 0x3D, 0x1C, 0x68, 0x3D, 0x1C, 0x68, 0x3D, 
   0x1C, 0x68, 0x3D, 0x1C, 0x68, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 
   0x6A, 0x3D, 0x1C, 0x69, 0x3C, 0x1B, 0x69, 0x3C, 0x1B, 0x69, 0x3C, 0x1B, 0x68, 0x3B, 0x1A, 0x68, 
   0x3B, 0x1A, 0x69, 0x3C, 0x1B, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 
   0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 
   0x69, 0x3C, 0x1B, 0x69, 0x3C, 0x1B, 0x69, 0x40, 0x29, 0x69, 0x40, 0x29, 0x69, 0x40, 0x29, 0x69, 
   0x40, 0x29, 0x69, 0x40, 0x29, 0x68, 0x3F, 0x28, 0x67, 0x3F, 0x27, 0x67, 0x3F, 0x26, 0x67, 0x3F, 
   0x26, 0x67, 0x3F, 0x26, 0x68, 0x40, 0x27, 0x68, 0x40, 0x27, 0x68, 0x40, 0x27, 0x68, 0x40, 0x27, 
   0x67, 0x3F, 0x26, 0x67, 0x3F, 0x26, 0x67, 0x3F, 0x26, 0x66, 0x3E, 0x25, 0x66, 0x3E, 0x25, 0x66, 
   0x3E, 0x25, 0x66, 0x3D, 0x24, 0x66, 0x3D, 0x24, 0x66, 0x3D, 0x24, 0x66, 0x3D, 0x24, 0x66, 0x3D, 
   0x24, 0x66, 0x3D, 0x24, 0x66, 0x3D, 0x24, 0x66, 0x3D, 0x24, 0x66, 0x3D, 0x24, 0x66, 0x3D, 0x24, 
   0x66, 0x3D, 0x24, 0x66, 0x3D, 0x24, 0x66, 0x3D, 0x24, 0x66, 0x3D, 0x22, 0x66, 0x3D, 0x22, 0x66, 
   0x3D, 0x22, 0x66, 0x3D, 0x22, 0x66, 0x3D, 0x22, 0x66, 0x3D, 0x22, 0x66, 0x3D, 0x22, 0x65, 0x3C, 
   0x21, 0x65, 0x3C, 0x21, 0x65, 0x3C, 0x21, 0x65, 0x3C, 0x21, 0x65, 0x3C, 0x21, 0x65, 0x3C, 0x21, 
   0x66, 0x3D, 0x22, 0x66, 0x3D, 0x22, 0x66, 0x3D, 0x22, 0x65, 0x3C, 0x21, 0x65, 0x3C, 0x21, 0x65, 
   0x3C, 0x21, 0x65, 0x3C, 0x21, 0x66, 0x3D, 0x22, 0x69, 0x40, 0x25, 0x69, 0x40, 0x25, 0x68, 0x3F, 
   0x24, 0x68, 0x3F, 0x24, 0x68, 0x3F, 0x24, 0x68, 0x3F, 0x24, 0x68, 0x3F, 0x24, 0x68, 0x3F, 0x24, 
   0x68, 0x3F, 0x24, 0x68, 0x3F, 0x24, 0x68, 0x3F, 0x24, 0x69, 0x40, 0x25, 0x69, 0x40, 0x25, 0x69, 
   0x40, 0x25, 0x69, 0x40, 0x25, 0x69, 0x40, 0x25, 0x69, 0x40, 0x25, 0x69, 0x40, 0x25, 0x6A, 0x41, 
   0x28, 0x6A, 0x41, 0x28, 0x6A, 0x41, 0x28, 0x6A, 0x41, 0x28, 0x69, 0x40, 0x27, 0x6A, 0x41, 0x28, 
   0x6C, 0x43, 0x2A, 0x6C, 0x44, 0x2B, 0x6D, 0x47, 0x2E, 0x6F, 0x4A, 0x32, 0x70, 0x4B, 0x34, 0x70, 
   0x4C, 0x37, 0x71, 0x4E, 0x3A, 0x78, 0x52, 0x3B, 0x79, 0x53, 0x3B, 0x73, 0x4D, 0x35, 0x72, 0x4C, 
   0x34, 0x70, 0x4A, 0x32, 0x6F, 0x4A, 0x31, 0x72, 0x4A, 0x34, 0x72, 0x48, 0x35, 0x77, 0x4E, 0x38, 
   0x7F, 0x56, 0x40, 0x7A, 0x51, 0x3A, 0x73, 0x4B, 0x33, 0x71, 0x49, 0x2F, 0x6D, 0x44, 0x29, 0x6B, 
   0x42, 0x27, 0x6C, 0x43, 0x28, 0x6B, 0x42, 0x27, 0x69, 0x40, 0x25, 0x69, 0x40, 0x25, 0x69, 0x3F, 
   0x24, 0x6B, 0x3F, 0x24, 0x6B, 0x40, 0x25, 0x69, 0x3E, 0x23, 0x6A, 0x3F, 0x24, 0x6A, 0x3F, 0x24, 
   0x6A, 0x3F, 0x24, 0x6A, 0x3F, 0x24, 0x6A, 0x3F, 0x24, 0x6A, 0x3F, 0x24, 0x69, 0x3E, 0x23, 0x69, 
   0x3E, 0x23, 0x6B, 0x40, 0x25, 0x6A, 0x40, 0x24, 0x68, 0x3E, 0x21, 0x68, 0x3E, 0x21, 0x68, 0x3E, 
   0x21, 0x67, 0x3D, 0x20, 0x68, 0x3E, 0x21, 0x67, 0x3D, 0x20, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 
   0x68, 0x3C, 0x1D, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x68, 0x3C, 0x1D, 0x67, 
   0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 
   0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x66, 0x3A, 0x1B, 0x67, 0x3B, 0x1C, 
   0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x67, 
   0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 
   0x1C, 0x67, 0x3B, 0x1C, 0x66, 0x3A, 0x1B, 0x66, 0x3A, 0x1B, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 
   0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x66, 0x3A, 0x1B, 0x65, 0x39, 0x1A, 0x66, 
   0x3A, 0x1B, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 
   0x1C, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x67, 0x3B, 0x1C, 0x66, 0x3A, 0x1B, 0x68, 0x3C, 0x1D, 
   0x67, 0x3B, 0x1C, 0x66, 0x3A, 0x1B, 0x66, 0x3A, 0x1B, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 
   0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 
   0x1C, 0x68, 0x3C, 0x1D, 0x69, 0x3D, 0x1E, 0x68, 0x3C, 0x1D, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 
   0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x68, 
   0x3C, 0x1D, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x66, 0x3B, 0x1A, 0x66, 0x3B, 
   0x1A, 0x66, 0x3B, 0x1A, 0x66, 0x3B, 0x1A, 0x66, 0x3B, 0x1A, 0x66, 0x3B, 0x1A, 0x67, 0x3C, 0x1B, 
   0x68, 0x3D, 0x1C, 0x68, 0x3D, 0x1C, 0x68, 0x3D, 0x1C, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 
   0x3C, 0x1B, 0x66, 0x3B, 0x1A, 0x66, 0x3B, 0x1A, 0x66, 0x3B, 0x1A, 0x67, 0x3C, 0x1B, 0x68, 0x3D, 
   0x1C, 0x68, 0x3D, 0x1C, 0x68, 0x3D, 0x1C, 0x68, 0x3D, 0x1C, 0x68, 0x3D, 0x1C, 0x68, 0x3D, 0x1C, 
   0x68, 0x3D, 0x1C, 0x68, 0x3D, 0x1C, 0x68, 0x3D, 0x1C, 0x68, 0x3D, 0x1C, 0x68, 0x3D, 0x1C, 0x68, 
   0x3D, 0x1C, 0x68, 0x3D, 0x1C, 0x68, 0x3D, 0x1C, 0x68, 0x3D, 0x1C, 0x68, 0x3D, 0x1C, 0x68, 0x3D, 
   0x1C, 0x68, 0x3D, 0x1C, 0x68, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 
   0x6A, 0x3D, 0x1C, 0x69, 0x3C, 0x1B, 0x69, 0x3C, 0x1B, 0x69, 0x3C, 0x1B, 0x68, 0x3B, 0x1A, 0x68, 
   0x3B, 0x1A, 0x69, 0x3C, 0x1B, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 
   0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 
   0x69, 0x3C, 0x1B, 0x68, 0x3B, 0x1A, 0x6A, 0x41, 0x2A, 0x6A, 0x41, 0x2A, 0x6A, 0x41, 0x2A, 0x6A, 
   0x41, 0x2A, 0x6A, 0x41, 0x2A, 0x68, 0x3F, 0x29, 0x68, 0x3F, 0x27, 0x67, 0x3F, 0x26, 0x67, 0x3F, 
   0x26, 0x67, 0x3F, 0x26, 0x67, 0x3F, 0x26, 0x67, 0x3F, 0x26, 0x67, 0x3F, 0x26, 0x67, 0x3F, 0x26, 
   0x67, 0x3F, 0x26, 0x67, 0x3F, 0x26, 0x67, 0x3F, 0x26, 0x67, 0x3F, 0x26, 0x67, 0x3F, 0x26, 0x67, 
   0x3E, 0x25, 0x66, 0x3D, 0x24, 0x66, 0x3D, 0x24, 0x66, 0x3D, 0x24, 0x66, 0x3D, 0x24, 0x66, 0x3D, 
   0x24, 0x66, 0x3D, 0x24, 0x67, 0x3E, 0x25, 0x67, 0x3E, 0x25, 0x67, 0x3E, 0x25, 0x66, 0x3D, 0x24, 
   0x67, 0x3E, 0x25, 0x68, 0x3F, 0x26, 0x66, 0x3D, 0x24, 0x66, 0x3D, 0x22, 0x66, 0x3D, 0x22, 0x66, 
   0x3D, 0x22, 0x65, 0x3C, 0x21, 0x65, 0x3C, 0x21, 0x65, 0x3C, 0x21, 0x66, 0x3D, 0x22, 0x66, 0x3D, 
   0x22, 0x66, 0x3D, 0x22, 0x66, 0x3D, 0x22, 0x65, 0x3C, 0x21, 0x65, 0x3C, 0x21, 0x65, 0x3C, 0x21, 
   0x64, 0x3B, 0x20, 0x64, 0x3B, 0x20, 0x64, 0x3B, 0x20, 0x65, 0x3C, 0x21, 0x65, 0x3C, 0x21, 0x65, 
   0x3C, 0x21, 0x66, 0x3D, 0x22, 0x66, 0x3D, 0x22, 0x67, 0x3E, 0x23, 0x67, 0x3E, 0x23, 0x66, 0x3D, 
   0x22, 0x66, 0x3D, 0x22, 0x66, 0x3D, 0x22, 0x67, 0x3E, 0x23, 0x67, 0x3E, 0x23, 0x67, 0x3E, 0x23, 
   0x66, 0x3D, 0x22, 0x67, 0x3E, 0x23, 0x68, 0x3F, 0x24, 0x69, 0x40, 0x25, 0x69, 0x40, 0x25, 0x69, 
   0x40, 0x25, 0x69, 0x40, 0x25, 0x69, 0x40, 0x25, 0x69, 0x40, 0x25, 0x69, 0x40, 0x25, 0x6B, 0x42, 
   0x29, 0x6A, 0x41, 0x28, 0x69, 0x40, 0x27, 0x6A, 0x41, 0x28, 0x6B, 0x42, 0x29, 0x6B, 0x42, 0x29, 
   0x6B, 0x42, 0x29, 0x6C, 0x45, 0x2C, 0x6E, 0x47, 0x2E, 0x70, 0x4A, 0x33, 0x71, 0x4C, 0x35, 0x73, 
   0x4F, 0x3A, 0x74, 0x50, 0x3C, 0x7A, 0x55, 0x3D, 0x78, 0x52, 0x3A, 0x73, 0x4D, 0x35, 0x70, 0x4A, 
   0x32, 0x6F, 0x49, 0x31, 0x72, 0x4C, 0x34, 0x72, 0x4A, 0x35, 0x70, 0x46, 0x33, 0x78, 0x4F, 0x39, 
   0x7F, 0x56, 0x40, 0x7A, 0x51, 0x3A, 0x76, 0x4D, 0x35, 0x6F, 0x47, 0x2E, 0x6B, 0x42, 0x27, 0x6A, 
   0x41, 0x26, 0x69, 0x40, 0x25, 0x69, 0x40, 0x25, 0x67, 0x3E, 0x23, 0x67, 0x3E, 0x23, 0x6A, 0x40, 
   0x25, 0x6B, 0x40, 0x25, 0x6A, 0x3F, 0x24, 0x69, 0x3E, 0x23, 0x68, 0x3D, 0x22, 0x68, 0x3D, 0x22, 
   0x68, 0x3D, 0x22, 0x68, 0x3D, 0x22, 0x68, 0x3D, 0x22, 0x68, 0x3D, 0x22, 0x68, 0x3D, 0x22, 0x68, 
   0x3D, 0x22, 0x6B, 0x40, 0x25, 0x6B, 0x41, 0x25, 0x68, 0x3E, 0x21, 0x66, 0x3C, 0x1F, 0x66, 0x3C, 
   0x1F, 0x67, 0x3D, 0x20, 0x67, 0x3D, 0x20, 0x67, 0x3D, 0x20, 0x67, 0x3B, 0x1C, 0x68, 0x3C, 0x1C, 
   0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x67, 
   0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x66, 0x3A, 0x1B, 0x66, 0x3A, 0x1B, 0x66, 0x3A, 
   0x1B, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 
   0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x67, 
   0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 
   0x1D, 0x68, 0x3C, 0x1D, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 
   0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x66, 0x3A, 0x1B, 0x65, 0x39, 0x1A, 0x67, 
   0x3B, 0x1C, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x67, 0x3B, 0x1C, 0x66, 0x3A, 0x1B, 0x66, 0x3A, 
   0x1B, 0x66, 0x3A, 0x1B, 0x66, 0x3A, 0x1B, 0x66, 0x3A, 0x1B, 0x66, 0x3A, 0x1B, 0x68, 0x3C, 0x1D, 
   0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 
   0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x66, 0x3A, 0x1B, 0x66, 0x3A, 
   0x1B, 0x66, 0x3A, 0x1B, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 
   0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x66, 0x3A, 0x1B, 0x66, 0x3A, 0x1B, 0x66, 
   0x3A, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 
   0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 
   0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 
   0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 
   0x1B, 0x67, 0x3C, 0x1B, 0x68, 0x3D, 0x1C, 0x68, 0x3D, 0x1C, 0x68, 0x3D, 0x1C, 0x68, 0x3D, 0x1C, 
   0x68, 0x3D, 0x1C, 0x68, 0x3D, 0x1C, 0x68, 0x3D, 0x1C, 0x68, 0x3D, 0x1C, 0x68, 0x3D, 0x1C, 0x68, 
   0x3D, 0x1C, 0x68, 0x3D, 0x1C, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 
   0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x69, 0x3C, 0x1B, 0x69, 0x3C, 0x1B, 0x69, 0x3C, 0x1B, 
   0x69, 0x3C, 0x1B, 0x69, 0x3C, 0x1B, 0x69, 0x3C, 0x1B, 0x69, 0x3C, 0x1B, 0x69, 0x3C, 0x1B, 0x69, 
   0x3C, 0x1B, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6B, 0x3E, 
   0x1D, 0x6B, 0x3E, 0x1D, 0x6B, 0x3E, 0x1D, 0x6A, 0x3D, 0x1C, 0x69, 0x3C, 0x1B, 0x69, 0x3C, 0x1B, 
   0x69, 0x3C, 0x1B, 0x69, 0x3C, 0x1B, 0x6A, 0x41, 0x2A, 0x6A, 0x41, 0x2A, 0x6A, 0x41, 0x2A, 0x6A, 
   0x41, 0x2A, 0x69, 0x40, 0x29, 0x68, 0x3F, 0x29, 0x68, 0x3F, 0x27, 0x67, 0x3F, 0x26, 0x67, 0x3F, 
   0x26, 0x67, 0x3F, 0x26, 0x67, 0x3F, 0x26, 0x67, 0x3F, 0x26, 0x67, 0x3F, 0x26, 0x67, 0x3F, 0x26, 
   0x67, 0x3F, 0x26, 0x67, 0x3F, 0x26, 0x67, 0x3F, 0x26, 0x67, 0x3F, 0x26, 0x67, 0x3F, 0x26, 0x67, 
   0x3E, 0x25, 0x66, 0x3D, 0x24, 0x66, 0x3D, 0x24, 0x66, 0x3D, 0x24, 0x66, 0x3D, 0x24, 0x66, 0x3D, 
   0x24, 0x66, 0x3D, 0x24, 0x67, 0x3E, 0x25, 0x67, 0x3E, 0x25, 0x67, 0x3E, 0x25, 0x66, 0x3D, 0x24, 
   0x66, 0x3D, 0x24, 0x68, 0x3F, 0x26, 0x66, 0x3D, 0x24, 0x66, 0x3D, 0x22, 0x66, 0x3D, 0x22, 0x66, 
   0x3D, 0x22, 0x65, 0x3C, 0x21, 0x65, 0x3C, 0x21, 0x65, 0x3C, 0x21, 0x66, 0x3D, 0x22, 0x66, 0x3D, 
   0x22, 0x66, 0x3D, 0x22, 0x66, 0x3D, 0x22, 0x65, 0x3C, 0x21, 0x65, 0x3C, 0x21, 0x65, 0x3C, 0x21, 
   0x64, 0x3B, 0x20, 0x64, 0x3B, 0x20, 0x64, 0x3B, 0x20, 0x65, 0x3C, 0x21, 0x65, 0x3C, 0x21, 0x65, 
   0x3C, 0x21, 0x66, 0x3D, 0x22, 0x66, 0x3D, 0x22, 0x66, 0x3D, 0x22, 0x66, 0x3D, 0x22, 0x66, 0x3D, 
   0x22, 0x66, 0x3D, 0x22, 0x66, 0x3D, 0x22, 0x67, 0x3E, 0x23, 0x67, 0x3E, 0x23, 0x67, 0x3E, 0x23, 
   0x66, 0x3D, 0x22, 0x67, 0x3E, 0x23, 0x68, 0x3F, 0x24, 0x69, 0x40, 0x25, 0x69, 0x40, 0x25, 0x69, 
   0x40, 0x25, 0x69, 0x40, 0x25, 0x69, 0x40, 0x25, 0x69, 0x40, 0x25, 0x69, 0x40, 0x25, 0x6B, 0x42, 
   0x29, 0x6A, 0x41, 0x28, 0x69, 0x40, 0x27, 0x6A, 0x41, 0x28, 0x6C, 0x43, 0x2A, 0x6B, 0x42, 0x29, 
   0x6B, 0x43, 0x2A, 0x6E, 0x46, 0x2D, 0x70, 0x4A, 0x31, 0x73, 0x4D, 0x35, 0x73, 0x4E, 0x38, 0x76, 
   0x52, 0x3D, 0x76, 0x53, 0x3F, 0x78, 0x52, 0x3B, 0x73, 0x4D, 0x34, 0x6E, 0x48, 0x30, 0x6C, 0x46, 
   0x2E, 0x6D, 0x47, 0x2F, 0x70, 0x4A, 0x32, 0x70, 0x48, 0x32, 0x6D, 0x43, 0x30, 0x76, 0x4D, 0x37, 
   0x7D, 0x54, 0x3E, 0x79, 0x50, 0x39, 0x73, 0x4A, 0x32, 0x6B, 0x43, 0x2A, 0x6A, 0x41, 0x26, 0x6A, 
   0x41, 0x25, 0x68, 0x3F, 0x24, 0x68, 0x3F, 0x24, 0x66, 0x3D, 0x22, 0x66, 0x3D, 0x22, 0x6A, 0x40, 
   0x25, 0x6A, 0x3F, 0x24, 0x69, 0x3E, 0x23, 0x69, 0x3E, 0x23, 0x68, 0x3D, 0x22, 0x68, 0x3D, 0x22, 
   0x68, 0x3D, 0x22, 0x68, 0x3D, 0x22, 0x68, 0x3D, 0x22, 0x68, 0x3D, 0x22, 0x68, 0x3D, 0x22, 0x68, 
   0x3D, 0x22, 0x69, 0x3E, 0x23, 0x6B, 0x41, 0x25, 0x6C, 0x42, 0x25, 0x6A, 0x40, 0x23, 0x66, 0x3C, 
   0x1F, 0x67, 0x3D, 0x20, 0x67, 0x3D, 0x20, 0x67, 0x3D, 0x20, 0x67, 0x3B, 0x1C, 0x68, 0x3C, 0x1D, 
   0x69, 0x3D, 0x1E, 0x69, 0x3D, 0x1E, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x67, 
   0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x66, 0x3A, 0x1B, 0x66, 0x3A, 0x1B, 0x66, 0x3A, 
   0x1B, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 
   0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x67, 
   0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 
   0x1D, 0x68, 0x3C, 0x1D, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 
   0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x66, 0x3A, 0x1B, 0x66, 0x3A, 0x1B, 0x67, 
   0x3B, 0x1C, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x67, 0x3B, 0x1C, 0x66, 0x3A, 0x1B, 0x66, 0x3A, 
   0x1B, 0x66, 0x3A, 0x1B, 0x66, 0x3A, 0x1B, 0x66, 0x3A, 0x1B, 0x66, 0x3A, 0x1B, 0x68, 0x3C, 0x1D, 
   0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 
   0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x66, 0x3A, 0x1B, 0x66, 0x3A, 
   0x1B, 0x66, 0x3A, 0x1B, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 
   0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x66, 0x3A, 0x1B, 0x66, 0x3A, 0x1B, 0x66, 
   0x3A, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 
   0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 
   0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 
   0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 
   0x1B, 0x67, 0x3C, 0x1B, 0x68, 0x3D, 0x1C, 0x68, 0x3D, 0x1C, 0x68, 0x3D, 0x1C, 0x68, 0x3D, 0x1C, 
   0x68, 0x3D, 0x1C, 0x68, 0x3D, 0x1C, 0x68, 0x3D, 0x1C, 0x68, 0x3D, 0x1C, 0x68, 0x3D, 0x1C, 0x68, 
   0x3D, 0x1C, 0x68, 0x3D, 0x1C, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 
   0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x69, 0x3C, 0x1B, 0x69, 0x3C, 0x1B, 0x69, 0x3C, 0x1B, 
   0x69, 0x3C, 0x1B, 0x69, 0x3C, 0x1B, 0x69, 0x3C, 0x1B, 0x69, 0x3C, 0x1B, 0x69, 0x3C, 0x1B, 0x69, 
   0x3C, 0x1B, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6B, 0x3E, 
   0x1D, 0x6B, 0x3E, 0x1D, 0x6B, 0x3E, 0x1D, 0x6A, 0x3D, 0x1C, 0x69, 0x3C, 0x1B, 0x69, 0x3C, 0x1B, 
   0x69, 0x3C, 0x1B, 0x69, 0x3C, 0x1B, 0x6B, 0x42, 0x2B, 0x6A, 0x41, 0x2A, 0x69, 0x40, 0x29, 0x69, 
   0x40, 0x29, 0x69, 0x40, 0x29, 0x68, 0x3F, 0x28, 0x67, 0x3F, 0x27, 0x67, 0x3F, 0x26, 0x67, 0x3F, 
   0x26, 0x67, 0x3F, 0x26, 0x67, 0x3F, 0x26, 0x67, 0x3F, 0x26, 0x67, 0x3F, 0x26, 0x67, 0x3F, 0x26, 
   0x67, 0x3F, 0x26, 0x67, 0x3F, 0x26, 0x67, 0x3F, 0x26, 0x66, 0x3E, 0x25, 0x66, 0x3E, 0x25, 0x66, 
   0x3E, 0x25, 0x66, 0x3D, 0x24, 0x66, 0x3D, 0x24, 0x66, 0x3D, 0x24, 0x66, 0x3D, 0x24, 0x66, 0x3D, 
   0x24, 0x66, 0x3D, 0x24, 0x66, 0x3D, 0x24, 0x66, 0x3D, 0x24, 0x66, 0x3D, 0x24, 0x65, 0x3C, 0x23, 
   0x66, 0x3D, 0x24, 0x67, 0x3E, 0x25, 0x66, 0x3D, 0x23, 0x65, 0x3C, 0x21, 0x65, 0x3C, 0x21, 0x65, 
   0x3C, 0x21, 0x65, 0x3C, 0x21, 0x65, 0x3C, 0x21, 0x65, 0x3C, 0x21, 0x65, 0x3C, 0x21, 0x65, 0x3C, 
   0x21, 0x65, 0x3C, 0x21, 0x65, 0x3C, 0x21, 0x65, 0x3C, 0x21, 0x65, 0x3C, 0x21, 0x65, 0x3C, 0x21, 
   0x64, 0x3B, 0x20, 0x64, 0x3B, 0x20, 0x64, 0x3B, 0x20, 0x65, 0x3C, 0x21, 0x65, 0x3C, 0x21, 0x65, 
   0x3C, 0x21, 0x65, 0x3C, 0x21, 0x65, 0x3C, 0x21, 0x65, 0x3C, 0x21, 0x65, 0x3C, 0x21, 0x65, 0x3C, 
   0x21, 0x65, 0x3C, 0x21, 0x65, 0x3C, 0x21, 0x66, 0x3D, 0x22, 0x66, 0x3D, 0x22, 0x66, 0x3D, 0x22, 
   0x66, 0x3D, 0x22, 0x67, 0x3E, 0x23, 0x68, 0x3F, 0x24, 0x68, 0x3F, 0x24, 0x68, 0x3F, 0x24, 0x68, 
   0x3F, 0x24, 0x69, 0x40, 0x25, 0x69, 0x40, 0x25, 0x69, 0x40, 0x25, 0x69, 0x40, 0x25, 0x6A, 0x41, 
   0x28, 0x6A, 0x41, 0x28, 0x6A, 0x41, 0x28, 0x6B, 0x42, 0x29, 0x6A, 0x41, 0x28, 0x6B, 0x42, 0x29, 
   0x6D, 0x44, 0x2B, 0x6F, 0x47, 0x2E, 0x72, 0x4C, 0x33, 0x75, 0x50, 0x38, 0x77, 0x52, 0x3C, 0x79, 
   0x55, 0x40, 0x79, 0x56, 0x42, 0x79, 0x53, 0x3B, 0x6F, 0x49, 0x31, 0x69, 0x43, 0x2B, 0x6C, 0x46, 
   0x2E, 0x70, 0x4A, 0x32, 0x72, 0x4C, 0x33, 0x70, 0x48, 0x33, 0x6C, 0x42, 0x2F, 0x72, 0x49, 0x33, 
   0x78, 0x4F, 0x39, 0x75, 0x4C, 0x35, 0x6F, 0x47, 0x2F, 0x6C, 0x44, 0x2B, 0x6A, 0x41, 0x26, 0x6A, 
   0x40, 0x25, 0x69, 0x40, 0x25, 0x69, 0x40, 0x25, 0x67, 0x3E, 0x23, 0x67, 0x3F, 0x24, 0x6A, 0x40, 
   0x25, 0x6A, 0x3F, 0x24, 0x69, 0x3E, 0x23, 0x68, 0x3D, 0x22, 0x68, 0x3D, 0x22, 0x68, 0x3D, 0x22, 
   0x68, 0x3D, 0x22, 0x68, 0x3D, 0x22, 0x68, 0x3D, 0x22, 0x68, 0x3D, 0x22, 0x67, 0x3C, 0x21, 0x67, 
   0x3C, 0x21, 0x69, 0x3D, 0x23, 0x6A, 0x3F, 0x23, 0x6D, 0x43, 0x26, 0x6C, 0x42, 0x25, 0x66, 0x3C, 
   0x1F, 0x67, 0x3D, 0x20, 0x67, 0x3D, 0x20, 0x67, 0x3D, 0x20, 0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 
   0x68, 0x3C, 0x1D, 0x68, 0x3C, 0x1D, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 
   0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x66, 0x3A, 0x1B, 0x66, 0x3A, 0x1B, 0x66, 0x3A, 
   0x1B, 0x66, 0x3A, 0x1B, 0x66, 0x3A, 0x1B, 0x66, 0x3A, 0x1B, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 
   0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 
   0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 
   0x1C, 0x67, 0x3B, 0x1C, 0x66, 0x3A, 0x1B, 0x66, 0x3A, 0x1B, 0x66, 0x3A, 0x1B, 0x66, 0x3A, 0x1B, 
   0x66, 0x3A, 0x1B, 0x66, 0x3A, 0x1B, 0x66, 0x3A, 0x1B, 0x66, 0x3A, 0x1B, 0x66, 0x3A, 0x1B, 0x67, 
   0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x66, 0x3A, 0x1B, 0x66, 0x3A, 
   0x1B, 0x66, 0x3A, 0x1B, 0x66, 0x3A, 0x1B, 0x66, 0x3A, 0x1B, 0x66, 0x3A, 0x1B, 0x67, 0x3B, 0x1C, 
   0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x66, 0x3A, 0x1B, 0x66, 0x3A, 0x1B, 0x66, 
   0x3A, 0x1B, 0x66, 0x3A, 0x1B, 0x66, 0x3A, 0x1B, 0x66, 0x3A, 0x1B, 0x66, 0x3A, 0x1B, 0x66, 0x3A, 
   0x1B, 0x66, 0x3A, 0x1B, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 
   0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x66, 0x3A, 0x1B, 0x66, 0x3A, 0x1B, 0x66, 
   0x3A, 0x1B, 0x66, 0x3B, 0x1A, 0x66, 0x3B, 0x1A, 0x66, 0x3B, 0x1A, 0x66, 0x3B, 0x1A, 0x66, 0x3B, 
   0x1A, 0x66, 0x3B, 0x1A, 0x66, 0x3B, 0x1A, 0x66, 0x3B, 0x1A, 0x66, 0x3B, 0x1A, 0x67, 0x3C, 0x1B, 
   0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 
   0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 
   0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 
   0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 
   0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 
   0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x69, 0x3C, 0x1B, 0x69, 0x3C, 0x1B, 0x69, 0x3C, 0x1B, 
   0x69, 0x3C, 0x1B, 0x69, 0x3C, 0x1B, 0x69, 0x3C, 0x1B, 0x69, 0x3C, 0x1B, 0x69, 0x3C, 0x1B, 0x69, 
   0x3C, 0x1B, 0x69, 0x3C, 0x1B, 0x69, 0x3C, 0x1B, 0x69, 0x3C, 0x1B, 0x69, 0x3C, 0x1B, 0x6A, 0x3D, 
   0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x6A, 0x3D, 0x1C, 0x69, 0x3C, 0x1B, 0x69, 0x3C, 0x1B, 
   0x69, 0x3C, 0x1B, 0x69, 0x3C, 0x1B, 0x6C, 0x43, 0x2C, 0x6B, 0x42, 0x2B, 0x69, 0x40, 0x29, 0x68, 
   0x3F, 0x28, 0x68, 0x3F, 0x28, 0x67, 0x3E, 0x27, 0x67, 0x3E, 0x26, 0x67, 0x3F, 0x26, 0x67, 0x3F, 
   0x26, 0x67, 0x3F, 0x26, 0x67, 0x3F, 0x26, 0x67, 0x3F, 0x26, 0x67, 0x3F, 0x26, 0x67, 0x3F, 0x26, 
   0x67, 0x3F, 0x26, 0x67, 0x3F, 0x26, 0x66, 0x3E, 0x25, 0x65, 0x3D, 0x24, 0x65, 0x3D, 0x24, 0x66, 
   0x3D, 0x24, 0x66, 0x3D, 0x24, 0x66, 0x3D, 0x24, 0x66, 0x3D, 0x24, 0x66, 0x3D, 0x24, 0x66, 0x3D, 
   0x24, 0x66, 0x3D, 0x24, 0x66, 0x3D, 0x24, 0x65, 0x3C, 0x23, 0x65, 0x3C, 0x23, 0x65, 0x3C, 0x23, 
   0x66, 0x3D, 0x24, 0x66, 0x3D, 0x24, 0x65, 0x3C, 0x23, 0x64, 0x3B, 0x20, 0x64, 0x3B, 0x20, 0x64, 
   0x3B, 0x20, 0x65, 0x3C, 0x21, 0x65, 0x3C, 0x21, 0x65, 0x3C, 0x21, 0x65, 0x3C, 0x21, 0x64, 0x3B, 
   0x20, 0x64, 0x3B, 0x20, 0x65, 0x3C, 0x21, 0x65, 0x3C, 0x21, 0x65, 0x3C, 0x21, 0x65, 0x3C, 0x21, 
   0x64, 0x3B, 0x20, 0x64, 0x3B, 0x20, 0x64, 0x3B, 0x20, 0x65, 0x3C, 0x21, 0x65, 0x3C, 0x21, 0x65, 
   0x3C, 0x21, 0x65, 0x3C, 0x21, 0x64, 0x3B, 0x20, 0x64, 0x3B, 0x20, 0x64, 0x3B, 0x20, 0x64, 0x3B, 
   0x20, 0x64, 0x3B, 0x20, 0x64, 0x3B, 0x20, 0x65, 0x3C, 0x21, 0x65, 0x3C, 0x21, 0x65, 0x3C, 0x21, 
   0x66, 0x3D, 0x22, 0x67, 0x3E, 0x23, 0x68, 0x3F, 0x24, 0x68, 0x3F, 0x24, 0x67, 0x3E, 0x23, 0x67, 
   0x3E, 0x23, 0x68, 0x3F, 0x24, 0x69, 0x40, 0x25, 0x69, 0x40, 0x25, 0x69, 0x40, 0x25, 0x6A, 0x41, 
   0x27, 0x6A, 0x41, 0x28, 0x6B, 0x42, 0x29, 0x6A, 0x41, 0x28, 0x69, 0x40, 0x27, 0x6C, 0x43, 0x2A, 
   0x6F, 0x46, 0x2D, 0x6F, 0x48, 0x2F, 0x71, 0x4B, 0x32, 0x74, 0x4F, 0x37, 0x76, 0x51, 0x3A, 0x78, 
   0x54, 0x3F, 0x79, 0x56, 0x41, 0x7B, 0x55, 0x3D, 0x70, 0x4A, 0x32, 0x6B, 0x45, 0x2D, 0x6E, 0x48, 
   0x30, 0x72, 0x4C, 0x34, 0x74, 0x4E, 0x36, 0x70, 0x48, 0x32, 0x6B, 0x41, 0x2E, 0x70, 0x47, 0x32, 
   0x77, 0x4E, 0x37, 0x73, 0x4A, 0x33, 0x70, 0x48, 0x30, 0x72, 0x4A, 0x30, 0x6E, 0x45, 0x2B, 0x6C, 
   0x43, 0x28, 0x6A, 0x41, 0x26, 0x69, 0x40, 0x25, 0x68, 0x3F, 0x24, 0x68, 0x40, 0x25, 0x69, 0x3F, 
   0x24, 0x69, 0x3E, 0x23, 0x68, 0x3D, 0x22, 0x68, 0x3D, 0x22, 0x68, 0x3D, 0x22, 0x68, 0x3D, 0x22, 
   0x68, 0x3D, 0x22, 0x68, 0x3D, 0x22, 0x68, 0x3D, 0x22, 0x68, 0x3D, 0x22, 0x68, 0x3D, 0x22, 0x67, 
   0x3C, 0x21, 0x68, 0x3C, 0x22, 0x68, 0x3D, 0x21, 0x69, 0x3F, 0x21, 0x6A, 0x40, 0x23, 0x68, 0x3E, 
   0x21, 0x67, 0x3D, 0x20, 0x67, 0x3D, 0x20, 0x67, 0x3D, 0x20, 0x69, 0x3D, 0x1E, 0x68, 0x3C, 0x1D, 
   0x68, 0x3C, 0x1D, 0x66, 0x3A, 0x1B, 0x66, 0x3A, 0x1B, 0x66, 0x3A, 0x1B, 0x67, 0x3B, 0x1C, 0x67, 
   0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x66, 0x3A, 0x1B, 0x66, 0x3A, 0x1B, 0x66, 0x3A, 
   0x1B, 0x65, 0x39, 0x1A, 0x65, 0x39, 0x1A, 0x65, 0x39, 0x1A, 0x66, 0x3A, 0x1B, 0x66, 0x3A, 0x1B, 
   0x66, 0x3A, 0x1B, 0x66, 0x3A, 0x1B, 0x66, 0x3A, 0x1B, 0x66, 0x3A, 0x1B, 0x66, 0x3A, 0x1B, 0x67, 
   0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x66, 0x3A, 0x1B, 0x66, 0x3A, 
   0x1B, 0x66, 0x3A, 0x1B, 0x65, 0x39, 0x1A, 0x65, 0x39, 0x1A, 0x65, 0x39, 0x1A, 0x65, 0x39, 0x1A, 
   0x65, 0x39, 0x1A, 0x65, 0x39, 0x1A, 0x65, 0x39, 0x1A, 0x66, 0x3A, 0x1B, 0x67, 0x3B, 0x1C, 0x67, 
   0x3B, 0x1C, 0x66, 0x3A, 0x1B, 0x66, 0x3A, 0x1B, 0x66, 0x3A, 0x1B, 0x66, 0x3A, 0x1B, 0x66, 0x3A, 
   0x1B, 0x66, 0x3A, 0x1B, 0x66, 0x3A, 0x1B, 0x66, 0x3A, 0x1B, 0x66, 0x3A, 0x1B, 0x66, 0x3A, 0x1B, 
   0x66, 0x3A, 0x1B, 0x66, 0x3A, 0x1B, 0x66, 0x3A, 0x1B, 0x65, 0x39, 0x1A, 0x65, 0x39, 0x1A, 0x65, 
   0x39, 0x1A, 0x65, 0x39, 0x1A, 0x65, 0x39, 0x1A, 0x65, 0x39, 0x1A, 0x66, 0x3A, 0x1B, 0x66, 0x3A, 
   0x1B, 0x66, 0x3A, 0x1B, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 
   0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x66, 0x3A, 0x1B, 0x66, 0x3A, 0x1B, 0x66, 
   0x3A, 0x1B, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 
   0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x66, 0x3B, 0x1A, 
   0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 
   0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 
   0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x66, 0x3B, 0x1A, 0x66, 0x3B, 0x1A, 0x66, 0x3B, 0x1A, 
   0x66, 0x3B, 0x1A, 0x66, 0x3B, 0x1A, 0x66, 0x3B, 0x1A, 0x66, 0x3B, 0x1A, 0x66, 0x3B, 0x1A, 0x66, 
   0x3B, 0x1A, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 
   0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x69, 0x3C, 0x1B, 0x69, 0x3C, 0x1B, 0x69, 0x3C, 0x1B, 
   0x69, 0x3C, 0x1B, 0x69, 0x3C, 0x1B, 0x69, 0x3C, 0x1B, 0x69, 0x3C, 0x1B, 0x69, 0x3C, 0x1B, 0x69, 
   0x3C, 0x1B, 0x69, 0x3C, 0x1B, 0x68, 0x3B, 0x1A, 0x68, 0x3B, 0x1A, 0x68, 0x3B, 0x1A, 0x69, 0x3C, 
   0x1B, 0x69, 0x3C, 0x1B, 0x69, 0x3C, 0x1B, 0x69, 0x3C, 0x1B, 0x69, 0x3C, 0x1B, 0x69, 0x3C, 0x1B, 
   0x69, 0x3C, 0x1B, 0x69, 0x3C, 0x1B, 0x6C, 0x43, 0x2C, 0x6B, 0x42, 0x2B, 0x69, 0x40, 0x29, 0x68, 
   0x3F, 0x28, 0x68, 0x3F, 0x28, 0x66, 0x3D, 0x26, 0x66, 0x3D, 0x26, 0x67, 0x3F, 0x26, 0x67, 0x3F, 
   0x26, 0x67, 0x3F, 0x26, 0x67, 0x3F, 0x26, 0x67, 0x3F, 0x26, 0x67, 0x3F, 0x26, 0x67, 0x3F, 0x26, 
   0x67, 0x3F, 0x26, 0x67, 0x3F, 0x26, 0x66, 0x3E, 0x25, 0x65, 0x3D, 0x24, 0x65, 0x3D, 0x24, 0x66, 
   0x3D, 0x24, 0x66, 0x3D, 0x24, 0x66, 0x3D, 0x24, 0x66, 0x3D, 0x24, 0x66, 0x3D, 0x24, 0x66, 0x3D, 
   0x24, 0x66, 0x3D, 0x24, 0x66, 0x3D, 0x24, 0x65, 0x3C, 0x23, 0x65, 0x3C, 0x23, 0x64, 0x3B, 0x22, 
   0x65, 0x3C, 0x23, 0x66, 0x3D, 0x24, 0x64, 0x3B, 0x22, 0x64, 0x3B, 0x20, 0x64, 0x3B, 0x20, 0x64, 
   0x3B, 0x20, 0x65, 0x3C, 0x21, 0x65, 0x3C, 0x21, 0x65, 0x3C, 0x21, 0x65, 0x3C, 0x21, 0x64, 0x3B, 
   0x20, 0x64, 0x3B, 0x20, 0x65, 0x3C, 0x21, 0x65, 0x3C, 0x21, 0x65, 0x3C, 0x21, 0x65, 0x3C, 0x21, 
   0x64, 0x3B, 0x20, 0x64, 0x3B, 0x20, 0x64, 0x3B, 0x20, 0x65, 0x3C, 0x21, 0x65, 0x3C, 0x21, 0x65, 
   0x3C, 0x21, 0x65, 0x3C, 0x21, 0x64, 0x3B, 0x20, 0x64, 0x3B, 0x20, 0x64, 0x3B, 0x20, 0x64, 0x3B, 
   0x20, 0x64, 0x3B, 0x20, 0x64, 0x3B, 0x20, 0x65, 0x3C, 0x21, 0x65, 0x3C, 0x21, 0x65, 0x3C, 0x21, 
   0x66, 0x3D, 0x22, 0x67, 0x3E, 0x23, 0x68, 0x3F, 0x24, 0x68, 0x3F, 0x24, 0x67, 0x3E, 0x23, 0x67, 
   0x3E, 0x23, 0x68, 0x3F, 0x24, 0x69, 0x40, 0x25, 0x69, 0x40, 0x25, 0x69, 0x40, 0x25, 0x69, 0x40, 
   0x27, 0x6A, 0x41, 0x28, 0x6B, 0x42, 0x29, 0x6A, 0x41, 0x28, 0x68, 0x3F, 0x26, 0x6C, 0x43, 0x2A, 
   0x70, 0x47, 0x2E, 0x70, 0x48, 0x2F, 0x6F, 0x48, 0x2F, 0x71, 0x4B, 0x34, 0x73, 0x4E, 0x37, 0x75, 
   0x51, 0x3C, 0x76, 0x53, 0x3F, 0x7A, 0x54, 0x3C, 0x70, 0x4A, 0x32, 0x6B, 0x45, 0x2D, 0x6D, 0x47, 
   0x2F, 0x72, 0x4C, 0x34, 0x73, 0x4D, 0x35, 0x6E, 0x46, 0x31, 0x6A, 0x40, 0x2D, 0x71, 0x48, 0x32, 
   0x79, 0x50, 0x3A, 0x78, 0x4F, 0x38, 0x72, 0x4A, 0x32, 0x73, 0x4B, 0x32, 0x72, 0x49, 0x2F, 0x6F, 
   0x45, 0x2A, 0x6A, 0x41, 0x26, 0x69, 0x40, 0x25, 0x69, 0x40, 0x25, 0x69, 0x40, 0x25, 0x6A, 0x40, 
   0x25, 0x69, 0x3E, 0x23, 0x68, 0x3D, 0x22, 0x67, 0x3C, 0x21, 0x68, 0x3D, 0x22, 0x68, 0x3D, 0x22, 
   0x68, 0x3D, 0x22, 0x68, 0x3D, 0x22, 0x68, 0x3D, 0x22, 0x68, 0x3D, 0x22, 0x68, 0x3D, 0x22, 0x67, 
   0x3C, 0x21, 0x67, 0x3C, 0x21, 0x66, 0x3C, 0x20, 0x66, 0x3C, 0x1F, 0x69, 0x3F, 0x22, 0x6B, 0x41, 
   0x24, 0x67, 0x3D, 0x20, 0x67, 0x3D, 0x20, 0x67, 0x3D, 0x20, 0x69, 0x3D, 0x1E, 0x68, 0x3C, 0x1D, 
   0x67, 0x3B, 0x1C, 0x66, 0x3A, 0x1B, 0x66, 0x3A, 0x1B, 0x66, 0x3A, 0x1B, 0x67, 0x3B, 0x1C, 0x67, 
   0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x66, 0x3A, 0x1B, 0x66, 0x3A, 0x1B, 0x66, 0x3A, 
   0x1B, 0x65, 0x39, 0x1A, 0x65, 0x39, 0x1A, 0x65, 0x39, 0x1A, 0x66, 0x3A, 0x1B, 0x66, 0x3A, 0x1B, 
   0x66, 0x3A, 0x1B, 0x66, 0x3A, 0x1B, 0x66, 0x3A, 0x1B, 0x66, 0x3A, 0x1B, 0x66, 0x3A, 0x1B, 0x67, 
   0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x66, 0x3A, 0x1B, 0x66, 0x3A, 
   0x1B, 0x66, 0x3A, 0x1B, 0x65, 0x39, 0x1A, 0x65, 0x39, 0x1A, 0x65, 0x39, 0x1A, 0x65, 0x39, 0x1A, 
   0x65, 0x39, 0x1A, 0x65, 0x39, 0x1A, 0x65, 0x39, 0x1A, 0x66, 0x3A, 0x1B, 0x67, 0x3B, 0x1C, 0x67, 
   0x3B, 0x1C, 0x66, 0x3A, 0x1B, 0x66, 0x3A, 0x1B, 0x66, 0x3A, 0x1B, 0x66, 0x3A, 0x1B, 0x66, 0x3A, 
   0x1B, 0x66, 0x3A, 0x1B, 0x66, 0x3A, 0x1B, 0x66, 0x3A, 0x1B, 0x66, 0x3A, 0x1B, 0x66, 0x3A, 0x1B, 
   0x66, 0x3A, 0x1B, 0x66, 0x3A, 0x1B, 0x66, 0x3A, 0x1B, 0x65, 0x39, 0x1A, 0x65, 0x39, 0x1A, 0x65, 
   0x39, 0x1A, 0x65, 0x39, 0x1A, 0x65, 0x39, 0x1A, 0x65, 0x39, 0x1A, 0x66, 0x3A, 0x1B, 0x66, 0x3A, 
   0x1B, 0x66, 0x3A, 0x1B, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 
   0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x66, 0x3A, 0x1B, 0x66, 0x3A, 0x1B, 0x66, 
   0x3A, 0x1B, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 
   0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x66, 0x3B, 0x1A, 
   0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 
   0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 
   0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x66, 0x3B, 0x1A, 0x66, 0x3B, 0x1A, 0x66, 0x3B, 0x1A, 
   0x66, 0x3B, 0x1A, 0x66, 0x3B, 0x1A, 0x66, 0x3B, 0x1A, 0x66, 0x3B, 0x1A, 0x66, 0x3B, 0x1A, 0x66, 
   0x3B, 0x1A, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 
   0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x69, 0x3C, 0x1B, 0x69, 0x3C, 0x1B, 0x69, 0x3C, 0x1B, 
   0x69, 0x3C, 0x1B, 0x69, 0x3C, 0x1B, 0x69, 0x3C, 0x1B, 0x69, 0x3C, 0x1B, 0x69, 0x3C, 0x1B, 0x69, 
   0x3C, 0x1B, 0x69, 0x3C, 0x1B, 0x68, 0x3B, 0x1A, 0x68, 0x3B, 0x1A, 0x68, 0x3B, 0x1A, 0x69, 0x3C, 
   0x1B, 0x69, 0x3C, 0x1B, 0x69, 0x3C, 0x1B, 0x69, 0x3C, 0x1B, 0x69, 0x3C, 0x1B, 0x69, 0x3C, 0x1B, 
   0x69, 0x3C, 0x1B, 0x69, 0x3C, 0x1B, 0x65, 0x43, 0x2B, 0x65, 0x43, 0x2B, 0x64, 0x42, 0x2A, 0x63, 
   0x41, 0x29, 0x62, 0x40, 0x28, 0x60, 0x3E, 0x26, 0x61, 0x3E, 0x26, 0x64, 0x3E, 0x25, 0x64, 0x3E, 
   0x25, 0x64, 0x3E, 0x25, 0x63, 0x3D, 0x24, 0x63, 0x3D, 0x24, 0x63, 0x3D, 0x24, 0x63, 0x3D, 0x24, 
   0x64, 0x3E, 0x25, 0x65, 0x3F, 0x26, 0x65, 0x3F, 0x26, 0x64, 0x3E, 0x25, 0x64, 0x3E, 0x25, 0x65, 
   0x3F, 0x26, 0x66, 0x3E, 0x25, 0x64, 0x3C, 0x23, 0x65, 0x3D, 0x24, 0x66, 0x3E, 0x25, 0x66, 0x3E, 
   0x25, 0x66, 0x3E, 0x25, 0x65, 0x3D, 0x24, 0x64, 0x3C, 0x23, 0x64, 0x3C, 0x23, 0x64, 0x3C, 0x23, 
   0x64, 0x3C, 0x23, 0x64, 0x3C, 0x23, 0x64, 0x3C, 0x23, 0x64, 0x3B, 0x20, 0x64, 0x3B, 0x20, 0x64, 
   0x3B, 0x20, 0x66, 0x3D, 0x22, 0x65, 0x3C, 0x21, 0x64, 0x3B, 0x20, 0x64, 0x3B, 0x1F, 0x64, 0x3C, 
   0x1F, 0x64, 0x3C, 0x1F, 0x64, 0x3C, 0x1F, 0x64, 0x3C, 0x1F, 0x64, 0x3C, 0x1F, 0x64, 0x3C, 0x1F, 
   0x62, 0x39, 0x1E, 0x62, 0x39, 0x1E, 0x62, 0x39, 0x1E, 0x62, 0x39, 0x1E, 0x64, 0x3B, 0x20, 0x64, 
   0x3B, 0x20, 0x64, 0x3B, 0x1F, 0x64, 0x3C, 0x1F, 0x64, 0x3C, 0x1F, 0x64, 0x3C, 0x1F, 0x63, 0x3B, 
   0x1E, 0x63, 0x3B, 0x1E, 0x63, 0x3B, 0x1E, 0x64, 0x3B, 0x20, 0x64, 0x3B, 0x20, 0x64, 0x3B, 0x20, 
   0x64, 0x3B, 0x20, 0x65, 0x3C, 0x21, 0x66, 0x3D, 0x22, 0x66, 0x3D, 0x23, 0x68, 0x3F, 0x26, 0x68, 
   0x3F, 0x26, 0x69, 0x40, 0x27, 0x69, 0x40, 0x27, 0x69, 0x40, 0x27, 0x69, 0x40, 0x27, 0x69, 0x41, 
   0x28, 0x6A, 0x42, 0x29, 0x6B, 0x43, 0x2A, 0x6B, 0x43, 0x2A, 0x6A, 0x42, 0x29, 0x6A, 0x42, 0x29, 
   0x6A, 0x42, 0x29, 0x6A, 0x45, 0x2D, 0x6B, 0x46, 0x2F, 0x6E, 0x49, 0x34, 0x72, 0x4F, 0x3B, 0x75, 
   0x53, 0x3F, 0x72, 0x51, 0x3E, 0x72, 0x50, 0x38, 0x6E, 0x4A, 0x32, 0x6B, 0x46, 0x2E, 0x6E, 0x48, 
   0x30, 0x73, 0x4B, 0x34, 0x74, 0x4C, 0x35, 0x6D, 0x46, 0x2E, 0x68, 0x42, 0x2A, 0x6F, 0x49, 0x31, 
   0x79, 0x53, 0x3B, 0x76, 0x50, 0x38, 0x70, 0x49, 0x31, 0x6D, 0x47, 0x2E, 0x6B, 0x43, 0x29, 0x6E, 
   0x45, 0x2C, 0x6D, 0x44, 0x2A, 0x6B, 0x42, 0x28, 0x67, 0x3E, 0x25, 0x68, 0x3F, 0x26, 0x69, 0x40, 
   0x26, 0x67, 0x3E, 0x23, 0x67, 0x3E, 0x23, 0x67, 0x3E, 0x23, 0x67, 0x3E, 0x23, 0x69, 0x40, 0x25, 
   0x69, 0x40, 0x25, 0x66, 0x3C, 0x1F, 0x66, 0x3C, 0x1F, 0x66, 0x3C, 0x1F, 0x66, 0x3C, 0x1F, 0x66, 
   0x3C, 0x1F, 0x66, 0x3C, 0x1F, 0x66, 0x3C, 0x1F, 0x66, 0x3C, 0x1F, 0x69, 0x3F, 0x22, 0x6A, 0x40, 
   0x23, 0x67, 0x3D, 0x20, 0x67, 0x3D, 0x20, 0x67, 0x3D, 0x20, 0x67, 0x3D, 0x20, 0x66, 0x3C, 0x1F, 
   0x63, 0x39, 0x1C, 0x63, 0x39, 0x1C, 0x64, 0x3A, 0x1D, 0x64, 0x3A, 0x1D, 0x64, 0x3A, 0x1C, 0x63, 
   0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x64, 0x3B, 0x1B, 0x64, 0x3B, 0x1B, 0x64, 0x3B, 
   0x1B, 0x64, 0x3B, 0x1B, 0x64, 0x3B, 0x1B, 0x64, 0x3B, 0x1B, 0x64, 0x3B, 0x1B, 0x64, 0x3B, 0x1B, 
   0x64, 0x3B, 0x1B, 0x64, 0x3B, 0x1B, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 
   0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x64, 0x3B, 0x1B, 0x64, 0x3B, 0x1B, 0x64, 0x3B, 
   0x1B, 0x64, 0x3B, 0x1B, 0x64, 0x3B, 0x1B, 0x64, 0x3B, 0x1B, 0x65, 0x3C, 0x1C, 0x65, 0x3C, 0x1C, 
   0x65, 0x3C, 0x1C, 0x65, 0x3C, 0x1C, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x64, 
   0x3B, 0x1B, 0x64, 0x3B, 0x1B, 0x64, 0x3B, 0x1B, 0x64, 0x3B, 0x1B, 0x64, 0x3B, 0x1B, 0x64, 0x3B, 
   0x1B, 0x64, 0x3B, 0x1B, 0x64, 0x3B, 0x1B, 0x64, 0x3B, 0x1B, 0x64, 0x3B, 0x1B, 0x64, 0x3B, 0x1B, 
   0x64, 0x3B, 0x1B, 0x64, 0x3B, 0x1B, 0x64, 0x3B, 0x1B, 0x64, 0x3B, 0x1B, 0x64, 0x3B, 0x1B, 0x64, 
   0x3B, 0x1B, 0x64, 0x3B, 0x1B, 0x64, 0x3B, 0x1B, 0x64, 0x3B, 0x1B, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 
   0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x65, 0x3B, 0x1B, 
   0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 
   0x3B, 0x1C, 0x64, 0x3B, 0x1B, 0x64, 0x3B, 0x1B, 0x64, 0x3B, 0x1B, 0x64, 0x3B, 0x1B, 0x64, 0x3B, 
   0x1B, 0x64, 0x3B, 0x1B, 0x65, 0x3B, 0x1B, 0x66, 0x3A, 0x1B, 0x66, 0x3A, 0x1B, 0x67, 0x3B, 0x1C, 
   0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 
   0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 
   0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 
   0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 
   0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x66, 0x3B, 0x1A, 0x66, 0x3B, 0x1A, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 
   0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 
   0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 
   0x3C, 0x1B, 0x68, 0x3D, 0x1C, 0x68, 0x3D, 0x1C, 0x67, 0x3C, 0x1B, 0x66, 0x3B, 0x1A, 0x67, 0x3C, 
   0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 
   0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x65, 0x43, 0x2B, 0x64, 0x42, 0x2A, 0x63, 0x41, 0x29, 0x63, 
   0x41, 0x29, 0x62, 0x40, 0x28, 0x60, 0x3E, 0x26, 0x61, 0x3E, 0x26, 0x64, 0x3E, 0x25, 0x64, 0x3E, 
   0x25, 0x64, 0x3E, 0x25, 0x63, 0x3D, 0x24, 0x63, 0x3D, 0x24, 0x63, 0x3D, 0x24, 0x63, 0x3D, 0x24, 
   0x64, 0x3E, 0x25, 0x65, 0x3F, 0x26, 0x65, 0x3F, 0x26, 0x64, 0x3E, 0x25, 0x64, 0x3E, 0x25, 0x65, 
   0x3F, 0x26, 0x66, 0x3E, 0x25, 0x64, 0x3C, 0x23, 0x65, 0x3D, 0x24, 0x66, 0x3E, 0x25, 0x66, 0x3E, 
   0x25, 0x66, 0x3E, 0x25, 0x65, 0x3D, 0x24, 0x64, 0x3C, 0x23, 0x64, 0x3C, 0x23, 0x64, 0x3C, 0x23, 
   0x64, 0x3C, 0x23, 0x63, 0x3C, 0x23, 0x63, 0x3B, 0x22, 0x64, 0x3B, 0x20, 0x64, 0x3B, 0x20, 0x64, 
   0x3B, 0x20, 0x63, 0x3A, 0x1F, 0x63, 0x3A, 0x1F, 0x62, 0x39, 0x1E, 0x63, 0x3A, 0x1E, 0x64, 0x3C, 
   0x1F, 0x64, 0x3C, 0x1F, 0x64, 0x3C, 0x1F, 0x64, 0x3C, 0x1F, 0x64, 0x3C, 0x1F, 0x64, 0x3C, 0x1F, 
   0x62, 0x39, 0x1E, 0x62, 0x39, 0x1E, 0x62, 0x39, 0x1E, 0x62, 0x39, 0x1E, 0x64, 0x3B, 0x20, 0x64, 
   0x3B, 0x20, 0x64, 0x3B, 0x1F, 0x64, 0x3C, 0x1F, 0x64, 0x3C, 0x1F, 0x63, 0x3B, 0x1E, 0x63, 0x3B, 
   0x1E, 0x63, 0x3B, 0x1E, 0x63, 0x3B, 0x1E, 0x64, 0x3B, 0x20, 0x64, 0x3B, 0x20, 0x64, 0x3B, 0x20, 
   0x64, 0x3B, 0x20, 0x65, 0x3C, 0x21, 0x66, 0x3D, 0x22, 0x67, 0x3E, 0x24, 0x67, 0x3E, 0x25, 0x68, 
   0x3F, 0x26, 0x69, 0x40, 0x27, 0x69, 0x40, 0x27, 0x69, 0x40, 0x27, 0x69, 0x40, 0x27, 0x69, 0x40, 
   0x27, 0x69, 0x41, 0x28, 0x6A, 0x42, 0x29, 0x6A, 0x42, 0x29, 0x6A, 0x42, 0x29, 0x6A, 0x42, 0x29, 
   0x69, 0x42, 0x2A, 0x68, 0x43, 0x2B, 0x68, 0x43, 0x2D, 0x6F, 0x4A, 0x35, 0x73, 0x50, 0x3B, 0x74, 
   0x52, 0x3F, 0x72, 0x51, 0x3E, 0x72, 0x4F, 0x38, 0x6E, 0x4B, 0x33, 0x69, 0x45, 0x2D, 0x6C, 0x46, 
   0x2E, 0x72, 0x49, 0x32, 0x73, 0x49, 0x33, 0x6C, 0x44, 0x2D, 0x68, 0x42, 0x2A, 0x6F, 0x49, 0x31, 
   0x76, 0x50, 0x38, 0x71, 0x4B, 0x33, 0x6B, 0x46, 0x2E, 0x6A, 0x43, 0x2B, 0x6B, 0x42, 0x29, 0x6C, 
   0x43, 0x2A, 0x6B, 0x42, 0x29, 0x69, 0x40, 0x27, 0x68, 0x3F, 0x26, 0x68, 0x3F, 0x26, 0x68, 0x3F, 
   0x25, 0x67, 0x3E, 0x23, 0x67, 0x3E, 0x23, 0x67, 0x3E, 0x23, 0x69, 0x40, 0x25, 0x6A, 0x41, 0x26, 
   0x69, 0x40, 0x25, 0x66, 0x3C, 0x1F, 0x66, 0x3C, 0x1F, 0x66, 0x3C, 0x1F, 0x66, 0x3C, 0x1F, 0x66, 
   0x3C, 0x1F, 0x66, 0x3C, 0x1F, 0x65, 0x3B, 0x1E, 0x65, 0x3B, 0x1E, 0x67, 0x3D, 0x20, 0x68, 0x3E, 
   0x21, 0x67, 0x3D, 0x20, 0x67, 0x3D, 0x20, 0x67, 0x3D, 0x20, 0x67, 0x3D, 0x20, 0x66, 0x3C, 0x1F, 
   0x63, 0x39, 0x1C, 0x63, 0x39, 0x1C, 0x64, 0x3A, 0x1D, 0x64, 0x3A, 0x1D, 0x64, 0x3A, 0x1C, 0x63, 
   0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x64, 0x3B, 0x1B, 0x64, 0x3B, 0x1B, 0x64, 0x3B, 
   0x1B, 0x64, 0x3B, 0x1B, 0x64, 0x3B, 0x1B, 0x64, 0x3B, 0x1B, 0x64, 0x3B, 0x1B, 0x64, 0x3B, 0x1B, 
   0x64, 0x3B, 0x1B, 0x64, 0x3B, 0x1B, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 
   0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x64, 0x3B, 0x1B, 0x64, 0x3B, 0x1B, 0x64, 0x3B, 
   0x1B, 0x64, 0x3B, 0x1B, 0x64, 0x3B, 0x1B, 0x64, 0x3B, 0x1B, 0x65, 0x3C, 0x1C, 0x65, 0x3C, 0x1C, 
   0x65, 0x3C, 0x1C, 0x65, 0x3C, 0x1C, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x64, 
   0x3B, 0x1B, 0x64, 0x3B, 0x1B, 0x64, 0x3B, 0x1B, 0x64, 0x3B, 0x1B, 0x64, 0x3B, 0x1B, 0x64, 0x3B, 
   0x1B, 0x64, 0x3B, 0x1B, 0x64, 0x3B, 0x1B, 0x64, 0x3B, 0x1B, 0x64, 0x3B, 0x1B, 0x64, 0x3B, 0x1B, 
   0x64, 0x3B, 0x1B, 0x64, 0x3B, 0x1B, 0x64, 0x3B, 0x1B, 0x64, 0x3B, 0x1B, 0x64, 0x3B, 0x1B, 0x64, 
   0x3B, 0x1B, 0x64, 0x3B, 0x1B, 0x64, 0x3B, 0x1B, 0x64, 0x3B, 0x1B, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 
   0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x65, 0x3B, 0x1B, 
   0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 
   0x3B, 0x1C, 0x64, 0x3B, 0x1B, 0x64, 0x3B, 0x1B, 0x64, 0x3B, 0x1B, 0x64, 0x3B, 0x1B, 0x64, 0x3B, 
   0x1B, 0x64, 0x3B, 0x1B, 0x65, 0x3B, 0x1B, 0x66, 0x3A, 0x1B, 0x66, 0x3A, 0x1B, 0x67, 0x3B, 0x1C, 
   0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3B, 0x1C, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 
   0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 
   0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 
   0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 
   0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x66, 0x3B, 0x1A, 0x66, 0x3B, 0x1A, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 
   0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 
   0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 
   0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x66, 0x3B, 0x1A, 0x66, 0x3B, 0x1A, 0x67, 0x3C, 
   0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 
   0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x64, 0x42, 0x2A, 0x63, 0x41, 0x29, 0x62, 0x40, 0x28, 0x62, 
   0x40, 0x28, 0x62, 0x40, 0x28, 0x60, 0x3E, 0x26, 0x61, 0x3E, 0x26, 0x64, 0x3E, 0x25, 0x64, 0x3E, 
   0x25, 0x64, 0x3E, 0x25, 0x63, 0x3D, 0x24, 0x63, 0x3D, 0x24, 0x63, 0x3D, 0x24, 0x63, 0x3D, 0x24, 
   0x64, 0x3E, 0x25, 0x65, 0x3F, 0x26, 0x65, 0x3F, 0x26, 0x64, 0x3E, 0x25, 0x64, 0x3E, 0x25, 0x65, 
   0x3F, 0x26, 0x66, 0x3E, 0x25, 0x64, 0x3C, 0x23, 0x64, 0x3C, 0x23, 0x65, 0x3D, 0x24, 0x65, 0x3D, 
   0x24, 0x65, 0x3D, 0x24, 0x65, 0x3D, 0x24, 0x64, 0x3C, 0x23, 0x64, 0x3C, 0x23, 0x64, 0x3C, 0x23, 
   0x64, 0x3C, 0x23, 0x63, 0x3B, 0x22, 0x62, 0x39, 0x20, 0x63, 0x3A, 0x1F, 0x63, 0x3A, 0x1F, 0x63, 
   0x3A, 0x1F, 0x64, 0x3B, 0x20, 0x64, 0x3B, 0x20, 0x63, 0x3A, 0x1F, 0x63, 0x3A, 0x1E, 0x63, 0x3B, 
   0x1E, 0x63, 0x3B, 0x1E, 0x63, 0x3B, 0x1E, 0x63, 0x3B, 0x1E, 0x63, 0x3B, 0x1E, 0x63, 0x3B, 0x1E, 
   0x62, 0x39, 0x1E, 0x62, 0x39, 0x1E, 0x62, 0x39, 0x1E, 0x62, 0x39, 0x1E, 0x64, 0x3B, 0x20, 0x64, 
   0x3B, 0x20, 0x64, 0x3B, 0x1F, 0x64, 0x3C, 0x1F, 0x62, 0x3A, 0x1D, 0x62, 0x3A, 0x1D, 0x63, 0x3B, 
   0x1E, 0x63, 0x3B, 0x1E, 0x63, 0x3B, 0x1E, 0x64, 0x3B, 0x20, 0x64, 0x3B, 0x20, 0x64, 0x3B, 0x20, 
   0x64, 0x3B, 0x20, 0x65, 0x3C, 0x21, 0x66, 0x3D, 0x22, 0x66, 0x3D, 0x23, 0x66, 0x3D, 0x25, 0x67, 
   0x3E, 0x25, 0x68, 0x3F, 0x26, 0x68, 0x3F, 0x26, 0x68, 0x3F, 0x26, 0x68, 0x3F, 0x26, 0x67, 0x3F, 
   0x26, 0x68, 0x40, 0x27, 0x68, 0x40, 0x27, 0x69, 0x41, 0x28, 0x69, 0x41, 0x28, 0x69, 0x41, 0x28, 
   0x69, 0x42, 0x29, 0x67, 0x41, 0x29, 0x68, 0x42, 0x2C, 0x71, 0x4C, 0x37, 0x74, 0x51, 0x3D, 0x74, 
   0x52, 0x3F, 0x72, 0x52, 0x3E, 0x71, 0x4F, 0x38, 0x6D, 0x4A, 0x33, 0x67, 0x43, 0x2D, 0x6B, 0x44, 
   0x2E, 0x70, 0x48, 0x32, 0x71, 0x47, 0x31, 0x6B, 0x43, 0x2C, 0x68, 0x42, 0x2A, 0x6E, 0x48, 0x30, 
   0x75, 0x4F, 0x37, 0x6F, 0x49, 0x31, 0x6B, 0x45, 0x2D, 0x6B, 0x44, 0x2C, 0x6B, 0x42, 0x29, 0x6A, 
   0x41, 0x28, 0x69, 0x40, 0x27, 0x68, 0x3F, 0x26, 0x69, 0x40, 0x27, 0x6B, 0x42, 0x29, 0x69, 0x40, 
   0x26, 0x68, 0x3F, 0x24, 0x67, 0x3E, 0x23, 0x66, 0x3D, 0x22, 0x69, 0x40, 0x25, 0x6A, 0x41, 0x26, 
   0x68, 0x3F, 0x24, 0x65, 0x3B, 0x1E, 0x65, 0x3B, 0x1E, 0x65, 0x3B, 0x1E, 0x65, 0x3B, 0x1E, 0x65, 
   0x3B, 0x1E, 0x65, 0x3B, 0x1E, 0x64, 0x3A, 0x1D, 0x64, 0x3A, 0x1D, 0x65, 0x3B, 0x1E, 0x65, 0x3B, 
   0x1E, 0x66, 0x3C, 0x1F, 0x66, 0x3C, 0x1F, 0x66, 0x3C, 0x1F, 0x66, 0x3C, 0x1F, 0x65, 0x3B, 0x1E, 
   0x64, 0x3A, 0x1D, 0x64, 0x3A, 0x1D, 0x64, 0x3A, 0x1D, 0x64, 0x3A, 0x1D, 0x64, 0x3A, 0x1C, 0x63, 
   0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 
   0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 
   0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 
   0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 
   0x1A, 0x64, 0x3B, 0x1B, 0x64, 0x3B, 0x1B, 0x64, 0x3B, 0x1B, 0x64, 0x3B, 0x1B, 0x64, 0x3B, 0x1B, 
   0x64, 0x3B, 0x1B, 0x64, 0x3B, 0x1B, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 
   0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 
   0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 
   0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 
   0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 
   0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x65, 0x3A, 0x1B, 
   0x66, 0x3A, 0x1B, 0x66, 0x3A, 0x1B, 0x66, 0x3A, 0x1B, 0x66, 0x3A, 0x1B, 0x66, 0x3A, 0x1B, 0x66, 
   0x3A, 0x1B, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 
   0x1A, 0x63, 0x3A, 0x1A, 0x64, 0x3A, 0x1A, 0x65, 0x39, 0x1A, 0x65, 0x39, 0x1A, 0x66, 0x3A, 0x1B, 
   0x66, 0x3A, 0x1B, 0x66, 0x3A, 0x1B, 0x66, 0x3A, 0x1B, 0x66, 0x3B, 0x1A, 0x66, 0x3B, 0x1A, 0x66, 
   0x3B, 0x1A, 0x66, 0x3B, 0x1A, 0x66, 0x3B, 0x1A, 0x66, 0x3B, 0x1A, 0x66, 0x3B, 0x1A, 0x66, 0x3B, 
   0x1A, 0x66, 0x3B, 0x1A, 0x66, 0x3B, 0x1A, 0x66, 0x3B, 0x1A, 0x66, 0x3B, 0x1A, 0x66, 0x3B, 0x1A, 
   0x66, 0x3B, 0x1A, 0x66, 0x3B, 0x1A, 0x66, 0x3B, 0x1A, 0x66, 0x3B, 0x1A, 0x66, 0x3B, 0x1A, 0x66, 
   0x3B, 0x1A, 0x66, 0x3B, 0x1A, 0x66, 0x3B, 0x1A, 0x66, 0x3B, 0x1A, 0x66, 0x3B, 0x1A, 0x66, 0x3B, 
   0x1A, 0x66, 0x3B, 0x1A, 0x66, 0x3B, 0x1A, 0x66, 0x3B, 0x1A, 0x66, 0x3B, 0x1A, 0x66, 0x3B, 0x1A, 
   0x66, 0x3B, 0x1A, 0x66, 0x3B, 0x1A, 0x66, 0x3B, 0x1A, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 
   0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x66, 0x3B, 0x1A, 0x65, 0x3A, 0x19, 0x66, 0x3B, 
   0x1A, 0x66, 0x3B, 0x1A, 0x66, 0x3B, 0x1A, 0x66, 0x3B, 0x1A, 0x66, 0x3B, 0x1A, 0x66, 0x3B, 0x1A, 
   0x66, 0x3B, 0x1A, 0x66, 0x3B, 0x1A, 0x63, 0x41, 0x29, 0x63, 0x41, 0x29, 0x62, 0x40, 0x28, 0x62, 
   0x40, 0x28, 0x62, 0x40, 0x28, 0x60, 0x3E, 0x26, 0x61, 0x3E, 0x26, 0x64, 0x3E, 0x25, 0x64, 0x3E, 
   0x25, 0x64, 0x3E, 0x25, 0x63, 0x3D, 0x24, 0x63, 0x3D, 0x24, 0x63, 0x3D, 0x24, 0x63, 0x3D, 0x24, 
   0x64, 0x3E, 0x25, 0x65, 0x3F, 0x26, 0x65, 0x3F, 0x26, 0x64, 0x3E, 0x25, 0x64, 0x3E, 0x25, 0x65, 
   0x3F, 0x26, 0x66, 0x3E, 0x25, 0x64, 0x3C, 0x23, 0x64, 0x3C, 0x23, 0x64, 0x3C, 0x23, 0x64, 0x3C, 
   0x23, 0x64, 0x3C, 0x23, 0x64, 0x3C, 0x23, 0x64, 0x3C, 0x23, 0x64, 0x3C, 0x23, 0x64, 0x3C, 0x23, 
   0x64, 0x3C, 0x23, 0x61, 0x39, 0x20, 0x60, 0x38, 0x1F, 0x62, 0x39, 0x1E, 0x62, 0x39, 0x1E, 0x62, 
   0x39, 0x1E, 0x64, 0x3B, 0x20, 0x64, 0x3B, 0x20, 0x62, 0x39, 0x1F, 0x62, 0x3A, 0x1E, 0x62, 0x3A, 
   0x1D, 0x62, 0x3A, 0x1D, 0x62, 0x3A, 0x1D, 0x62, 0x3A, 0x1D, 0x62, 0x3A, 0x1D, 0x62, 0x3A, 0x1D, 
   0x62, 0x39, 0x1E, 0x62, 0x39, 0x1E, 0x62, 0x39, 0x1E, 0x62, 0x39, 0x1E, 0x64, 0x3B, 0x20, 0x64, 
   0x3B, 0x20, 0x64, 0x3B, 0x1F, 0x63, 0x3B, 0x1E, 0x61, 0x39, 0x1C, 0x61, 0x39, 0x1C, 0x63, 0x3B, 
   0x1E, 0x63, 0x3B, 0x1E, 0x63, 0x3B, 0x1E, 0x64, 0x3B, 0x20, 0x64, 0x3B, 0x20, 0x64, 0x3B, 0x20, 
   0x64, 0x3B, 0x20, 0x65, 0x3C, 0x21, 0x66, 0x3D, 0x22, 0x66, 0x3D, 0x23, 0x66, 0x3D, 0x24, 0x67, 
   0x3E, 0x25, 0x67, 0x3E, 0x25, 0x67, 0x3E, 0x25, 0x67, 0x3E, 0x25, 0x67, 0x3E, 0x25, 0x66, 0x3E, 
   0x25, 0x66, 0x3E, 0x25, 0x68, 0x40, 0x27, 0x68, 0x40, 0x27, 0x68, 0x40, 0x27, 0x68, 0x40, 0x27, 
   0x68, 0x41, 0x28, 0x69, 0x44, 0x2C, 0x6B, 0x45, 0x2F, 0x72, 0x4D, 0x38, 0x75, 0x52, 0x3E, 0x74, 
   0x52, 0x3E, 0x73, 0x52, 0x3F, 0x6F, 0x4E, 0x36, 0x69, 0x47, 0x30, 0x68, 0x45, 0x2E, 0x6C, 0x47, 
   0x31, 0x70, 0x49, 0x33, 0x6F, 0x47, 0x31, 0x6A, 0x43, 0x2C, 0x68, 0x42, 0x29, 0x6D, 0x47, 0x2F, 
   0x74, 0x4E, 0x36, 0x6F, 0x49, 0x31, 0x6C, 0x46, 0x2E, 0x6D, 0x46, 0x2E, 0x6B, 0x43, 0x2A, 0x68, 
   0x3F, 0x26, 0x67, 0x3E, 0x25, 0x67, 0x3E, 0x25, 0x67, 0x3E, 0x25, 0x69, 0x40, 0x27, 0x6A, 0x41, 
   0x27, 0x68, 0x3F, 0x24, 0x66, 0x3D, 0x22, 0x65, 0x3C, 0x21, 0x68, 0x3F, 0x24, 0x69, 0x40, 0x25, 
   0x66, 0x3D, 0x22, 0x64, 0x3A, 0x1D, 0x64, 0x3A, 0x1D, 0x64, 0x3A, 0x1D, 0x64, 0x3A, 0x1D, 0x64, 
   0x3A, 0x1D, 0x64, 0x3A, 0x1D, 0x65, 0x3B, 0x1E, 0x66, 0x3C, 0x1F, 0x65, 0x3B, 0x1E, 0x65, 0x3B, 
   0x1E, 0x65, 0x3B, 0x1E, 0x65, 0x3B, 0x1E, 0x65, 0x3B, 0x1E, 0x65, 0x3B, 0x1E, 0x65, 0x3B, 0x1E, 
   0x65, 0x3B, 0x1E, 0x65, 0x3B, 0x1E, 0x64, 0x3A, 0x1D, 0x64, 0x3A, 0x1D, 0x64, 0x3A, 0x1C, 0x63, 
   0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 
   0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 
   0x62, 0x39, 0x19, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 
   0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x62, 0x39, 0x19, 0x62, 0x39, 
   0x19, 0x63, 0x3A, 0x1A, 0x64, 0x3B, 0x1B, 0x64, 0x3B, 0x1B, 0x64, 0x3B, 0x1B, 0x63, 0x3A, 0x1A, 
   0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 
   0x3A, 0x1A, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 
   0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 
   0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 
   0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 
   0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x64, 0x3A, 0x1A, 
   0x65, 0x39, 0x1A, 0x65, 0x39, 0x1A, 0x65, 0x39, 0x1A, 0x65, 0x39, 0x1A, 0x65, 0x39, 0x1A, 0x65, 
   0x39, 0x1A, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 
   0x19, 0x62, 0x39, 0x19, 0x63, 0x39, 0x19, 0x64, 0x38, 0x19, 0x64, 0x38, 0x19, 0x65, 0x39, 0x1A, 
   0x65, 0x39, 0x1A, 0x65, 0x39, 0x1A, 0x65, 0x39, 0x1A, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 
   0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 
   0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 
   0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 
   0x3A, 0x19, 0x66, 0x3B, 0x1A, 0x66, 0x3B, 0x1A, 0x66, 0x3B, 0x1A, 0x66, 0x3B, 0x1A, 0x65, 0x3A, 
   0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 
   0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x66, 0x3B, 0x1A, 0x67, 0x3C, 0x1B, 0x67, 
   0x3C, 0x1B, 0x67, 0x3C, 0x1B, 0x66, 0x3B, 0x1A, 0x66, 0x3B, 0x1A, 0x64, 0x39, 0x18, 0x65, 0x3A, 
   0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 
   0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x63, 0x41, 0x29, 0x63, 0x41, 0x29, 0x61, 0x3F, 0x27, 0x62, 
   0x40, 0x28, 0x62, 0x40, 0x28, 0x60, 0x3E, 0x26, 0x61, 0x3E, 0x26, 0x64, 0x3E, 0x25, 0x64, 0x3E, 
   0x25, 0x64, 0x3E, 0x25, 0x63, 0x3D, 0x24, 0x63, 0x3D, 0x24, 0x63, 0x3D, 0x24, 0x63, 0x3D, 0x24, 
   0x64, 0x3E, 0x25, 0x65, 0x3F, 0x26, 0x65, 0x3F, 0x26, 0x64, 0x3E, 0x25, 0x64, 0x3E, 0x25, 0x65, 
   0x3F, 0x26, 0x66, 0x3E, 0x25, 0x64, 0x3C, 0x23, 0x64, 0x3C, 0x23, 0x64, 0x3C, 0x23, 0x64, 0x3C, 
   0x23, 0x64, 0x3C, 0x23, 0x64, 0x3C, 0x23, 0x64, 0x3C, 0x23, 0x64, 0x3C, 0x23, 0x64, 0x3C, 0x23, 
   0x63, 0x3B, 0x22, 0x61, 0x39, 0x20, 0x60, 0x38, 0x1F, 0x62, 0x39, 0x1E, 0x62, 0x39, 0x1E, 0x62, 
   0x39, 0x1E, 0x62, 0x39, 0x1E, 0x61, 0x38, 0x1D, 0x60, 0x37, 0x1C, 0x61, 0x38, 0x1C, 0x62, 0x3A, 
   0x1D, 0x62, 0x3A, 0x1D, 0x62, 0x3A, 0x1D, 0x62, 0x3A, 0x1D, 0x62, 0x3A, 0x1D, 0x62, 0x3A, 0x1D, 
   0x62, 0x39, 0x1E, 0x62, 0x39, 0x1E, 0x62, 0x39, 0x1E, 0x62, 0x39, 0x1E, 0x63, 0x3A, 0x1F, 0x63, 
   0x3A, 0x1F, 0x63, 0x3B, 0x1F, 0x63, 0x3B, 0x1E, 0x61, 0x39, 0x1C, 0x62, 0x3A, 0x1D, 0x63, 0x3B, 
   0x1E, 0x62, 0x3A, 0x1D, 0x63, 0x3B, 0x1E, 0x64, 0x3B, 0x20, 0x64, 0x3B, 0x20, 0x64, 0x3B, 0x20, 
   0x64, 0x3B, 0x20, 0x66, 0x3D, 0x22, 0x66, 0x3D, 0x22, 0x65, 0x3C, 0x22, 0x65, 0x3C, 0x24, 0x67, 
   0x3E, 0x25, 0x67, 0x3E, 0x25, 0x67, 0x3E, 0x25, 0x67, 0x3E, 0x25, 0x67, 0x3E, 0x25, 0x65, 0x3D, 
   0x24, 0x66, 0x3E, 0x25, 0x67, 0x3F, 0x26, 0x68, 0x40, 0x27, 0x68, 0x40, 0x27, 0x68, 0x40, 0x27, 
   0x67, 0x40, 0x28, 0x6D, 0x47, 0x2F, 0x6F, 0x4A, 0x34, 0x74, 0x4F, 0x3A, 0x75, 0x52, 0x3E, 0x74, 
   0x52, 0x3E, 0x73, 0x52, 0x3F, 0x6D, 0x4D, 0x37, 0x64, 0x43, 0x2D, 0x68, 0x46, 0x30, 0x6E, 0x4A, 
   0x34, 0x70, 0x4A, 0x34, 0x6F, 0x48, 0x32, 0x6A, 0x44, 0x2D, 0x69, 0x43, 0x2A, 0x6D, 0x47, 0x2F, 
   0x72, 0x4C, 0x34, 0x6D, 0x47, 0x2F, 0x6A, 0x44, 0x2C, 0x6C, 0x45, 0x2D, 0x6B, 0x43, 0x2A, 0x67, 
   0x3E, 0x25, 0x66, 0x3D, 0x24, 0x66, 0x3D, 0x24, 0x63, 0x3A, 0x21, 0x65, 0x3C, 0x23, 0x69, 0x40, 
   0x26, 0x68, 0x3F, 0x23, 0x66, 0x3D, 0x22, 0x65, 0x3C, 0x21, 0x66, 0x3D, 0x22, 0x66, 0x3D, 0x22, 
   0x64, 0x3B, 0x20, 0x64, 0x3A, 0x1D, 0x64, 0x3A, 0x1D, 0x64, 0x3A, 0x1D, 0x64, 0x3A, 0x1D, 0x64, 
   0x3A, 0x1D, 0x64, 0x3A, 0x1D, 0x65, 0x3B, 0x1E, 0x66, 0x3C, 0x1F, 0x66, 0x3C, 0x1F, 0x66, 0x3C, 
   0x1F, 0x65, 0x3B, 0x1E, 0x65, 0x3B, 0x1E, 0x65, 0x3B, 0x1E, 0x65, 0x3B, 0x1E, 0x65, 0x3B, 0x1E, 
   0x65, 0x3B, 0x1E, 0x65, 0x3B, 0x1E, 0x64, 0x3A, 0x1D, 0x64, 0x3A, 0x1D, 0x64, 0x3A, 0x1C, 0x63, 
   0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 
   0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 
   0x62, 0x39, 0x19, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 
   0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x62, 0x39, 0x19, 0x62, 0x39, 
   0x19, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x64, 0x3B, 0x1B, 0x63, 0x3A, 0x1A, 
   0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 
   0x3A, 0x1A, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 
   0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 
   0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 
   0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 
   0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x64, 0x3A, 0x1A, 
   0x65, 0x39, 0x1A, 0x65, 0x39, 0x1A, 0x65, 0x39, 0x1A, 0x65, 0x39, 0x1A, 0x65, 0x39, 0x1A, 0x65, 
   0x39, 0x1A, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 
   0x19, 0x62, 0x39, 0x19, 0x63, 0x39, 0x19, 0x64, 0x38, 0x19, 0x64, 0x38, 0x19, 0x65, 0x39, 0x1A, 
   0x65, 0x39, 0x1A, 0x65, 0x39, 0x1A, 0x65, 0x39, 0x1A, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 
   0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 
   0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 
   0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 
   0x3A, 0x19, 0x66, 0x3B, 0x1A, 0x66, 0x3B, 0x1A, 0x66, 0x3B, 0x1A, 0x66, 0x3B, 0x1A, 0x65, 0x3A, 
   0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 
   0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x66, 0x3B, 0x1A, 0x66, 0x3B, 0x1A, 0x66, 
   0x3B, 0x1A, 0x66, 0x3B, 0x1A, 0x66, 0x3B, 0x1A, 0x65, 0x3A, 0x19, 0x64, 0x39, 0x18, 0x65, 0x3A, 
   0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 
   0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x62, 0x40, 0x28, 0x62, 0x40, 0x28, 0x62, 0x40, 0x28, 0x62, 
   0x40, 0x28, 0x61, 0x3F, 0x27, 0x61, 0x3F, 0x27, 0x62, 0x3E, 0x26, 0x63, 0x3D, 0x24, 0x63, 0x3D, 
   0x24, 0x63, 0x3D, 0x24, 0x64, 0x3E, 0x25, 0x64, 0x3E, 0x25, 0x64, 0x3E, 0x25, 0x64, 0x3E, 0x25, 
   0x63, 0x3D, 0x24, 0x64, 0x3E, 0x25, 0x64, 0x3E, 0x25, 0x64, 0x3E, 0x25, 0x64, 0x3E, 0x25, 0x65, 
   0x3E, 0x25, 0x65, 0x3D, 0x24, 0x64, 0x3C, 0x23, 0x63, 0x3B, 0x22, 0x64, 0x3C, 0x23, 0x64, 0x3C, 
   0x23, 0x64, 0x3C, 0x23, 0x64, 0x3C, 0x23, 0x64, 0x3C, 0x23, 0x64, 0x3C, 0x23, 0x64, 0x3C, 0x23, 
   0x64, 0x3C, 0x23, 0x63, 0x3B, 0x22, 0x62, 0x3A, 0x21, 0x63, 0x3A, 0x1F, 0x62, 0x39, 0x1E, 0x61, 
   0x38, 0x1D, 0x62, 0x39, 0x1E, 0x61, 0x38, 0x1D, 0x60, 0x37, 0x1C, 0x60, 0x38, 0x1C, 0x61, 0x39, 
   0x1C, 0x61, 0x39, 0x1C, 0x62, 0x3A, 0x1D, 0x62, 0x3A, 0x1D, 0x62, 0x3A, 0x1D, 0x62, 0x3A, 0x1D, 
   0x62, 0x39, 0x1E, 0x62, 0x39, 0x1E, 0x62, 0x39, 0x1E, 0x62, 0x39, 0x1E, 0x62, 0x39, 0x1E, 0x62, 
   0x39, 0x1E, 0x62, 0x3A, 0x1E, 0x62, 0x3A, 0x1D, 0x62, 0x3A, 0x1D, 0x62, 0x3A, 0x1D, 0x62, 0x3A, 
   0x1D, 0x61, 0x39, 0x1C, 0x63, 0x3B, 0x1E, 0x64, 0x3B, 0x20, 0x64, 0x3B, 0x20, 0x64, 0x3B, 0x20, 
   0x64, 0x3B, 0x20, 0x67, 0x3E, 0x23, 0x67, 0x3E, 0x23, 0x66, 0x3D, 0x23, 0x66, 0x3D, 0x25, 0x68, 
   0x3F, 0x26, 0x68, 0x3F, 0x26, 0x67, 0x3E, 0x25, 0x67, 0x3E, 0x25, 0x67, 0x3E, 0x25, 0x66, 0x3E, 
   0x25, 0x66, 0x3E, 0x25, 0x66, 0x3E, 0x25, 0x67, 0x3F, 0x26, 0x68, 0x40, 0x27, 0x68, 0x40, 0x27, 
   0x68, 0x41, 0x28, 0x6C, 0x46, 0x2F, 0x70, 0x4B, 0x35, 0x75, 0x50, 0x3B, 0x74, 0x51, 0x3D, 0x73, 
   0x51, 0x3E, 0x74, 0x53, 0x40, 0x70, 0x4F, 0x3B, 0x65, 0x44, 0x30, 0x6A, 0x48, 0x34, 0x70, 0x4D, 
   0x39, 0x6E, 0x4A, 0x36, 0x6F, 0x48, 0x35, 0x6D, 0x45, 0x30, 0x69, 0x43, 0x2B, 0x6A, 0x44, 0x2C, 
   0x6E, 0x48, 0x30, 0x6C, 0x46, 0x2E, 0x6A, 0x44, 0x2C, 0x6B, 0x45, 0x2D, 0x6B, 0x42, 0x29, 0x67, 
   0x3E, 0x25, 0x66, 0x3D, 0x24, 0x66, 0x3D, 0x24, 0x64, 0x3B, 0x22, 0x66, 0x3D, 0x24, 0x67, 0x3E, 
   0x24, 0x66, 0x3D, 0x22, 0x66, 0x3D, 0x22, 0x66, 0x3D, 0x22, 0x64, 0x3B, 0x20, 0x63, 0x3A, 0x1F, 
   0x62, 0x39, 0x1E, 0x63, 0x39, 0x1C, 0x63, 0x39, 0x1C, 0x63, 0x39, 0x1C, 0x63, 0x39, 0x1C, 0x63, 
   0x39, 0x1C, 0x63, 0x39, 0x1C, 0x63, 0x39, 0x1C, 0x64, 0x3A, 0x1D, 0x65, 0x3B, 0x1E, 0x66, 0x3C, 
   0x1F, 0x65, 0x3B, 0x1E, 0x65, 0x3B, 0x1E, 0x65, 0x3B, 0x1E, 0x65, 0x3B, 0x1E, 0x65, 0x3B, 0x1E, 
   0x65, 0x3B, 0x1E, 0x65, 0x3B, 0x1E, 0x65, 0x3B, 0x1E, 0x65, 0x3B, 0x1E, 0x64, 0x3B, 0x1C, 0x63, 
   0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 
   0x1A, 0x64, 0x3B, 0x1B, 0x64, 0x3B, 0x1B, 0x64, 0x3B, 0x1B, 0x64, 0x3B, 0x1B, 0x63, 0x3A, 0x1A, 
   0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x63, 
   0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x64, 0x3B, 0x1B, 0x64, 0x3B, 0x1B, 0x64, 0x3B, 
   0x1B, 0x63, 0x3A, 0x1A, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 
   0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 
   0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 
   0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 
   0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 
   0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 
   0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x64, 0x3A, 0x1A, 
   0x65, 0x39, 0x1A, 0x65, 0x39, 0x1A, 0x65, 0x39, 0x1A, 0x65, 0x39, 0x1A, 0x65, 0x39, 0x1A, 0x65, 
   0x39, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 
   0x1A, 0x63, 0x3A, 0x1A, 0x64, 0x3A, 0x1A, 0x65, 0x39, 0x1A, 0x65, 0x39, 0x1A, 0x65, 0x39, 0x1A, 
   0x65, 0x39, 0x1A, 0x65, 0x39, 0x1A, 0x65, 0x39, 0x1A, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 
   0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x64, 0x39, 
   0x18, 0x64, 0x39, 0x18, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 
   0x66, 0x3B, 0x1A, 0x66, 0x3B, 0x1A, 0x66, 0x3B, 0x1A, 0x66, 0x3B, 0x1A, 0x66, 0x3B, 0x1A, 0x66, 
   0x3B, 0x1A, 0x66, 0x3B, 0x1A, 0x66, 0x3B, 0x1A, 0x66, 0x3B, 0x1A, 0x66, 0x3B, 0x1A, 0x66, 0x3B, 
   0x1A, 0x66, 0x3B, 0x1A, 0x66, 0x3B, 0x1A, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 
   0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 
   0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 
   0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x66, 0x3B, 0x1A, 0x66, 0x3B, 0x1A, 0x66, 0x3B, 0x1A, 
   0x66, 0x3B, 0x1A, 0x66, 0x3B, 0x1A, 0x62, 0x40, 0x28, 0x62, 0x40, 0x28, 0x62, 0x40, 0x28, 0x62, 
   0x40, 0x28, 0x61, 0x3F, 0x27, 0x61, 0x3F, 0x27, 0x62, 0x3E, 0x26, 0x63, 0x3D, 0x24, 0x63, 0x3D, 
   0x24, 0x63, 0x3D, 0x24, 0x64, 0x3E, 0x25, 0x64, 0x3E, 0x25, 0x64, 0x3E, 0x25, 0x64, 0x3E, 0x25, 
   0x63, 0x3D, 0x24, 0x64, 0x3E, 0x25, 0x64, 0x3E, 0x25, 0x64, 0x3E, 0x25, 0x64, 0x3E, 0x25, 0x65, 
   0x3E, 0x25, 0x65, 0x3D, 0x24, 0x65, 0x3D, 0x24, 0x63, 0x3B, 0x22, 0x64, 0x3C, 0x23, 0x64, 0x3C, 
   0x23, 0x64, 0x3C, 0x23, 0x64, 0x3C, 0x23, 0x64, 0x3C, 0x23, 0x64, 0x3C, 0x23, 0x64, 0x3C, 0x23, 
   0x64, 0x3C, 0x23, 0x63, 0x3B, 0x22, 0x62, 0x3A, 0x21, 0x63, 0x3A, 0x1F, 0x62, 0x39, 0x1E, 0x61, 
   0x38, 0x1D, 0x62, 0x39, 0x1E, 0x61, 0x38, 0x1D, 0x60, 0x37, 0x1C, 0x60, 0x38, 0x1C, 0x61, 0x39, 
   0x1C, 0x61, 0x39, 0x1C, 0x62, 0x3A, 0x1D, 0x62, 0x3A, 0x1D, 0x62, 0x3A, 0x1D, 0x62, 0x3A, 0x1D, 
   0x62, 0x39, 0x1E, 0x62, 0x39, 0x1E, 0x62, 0x39, 0x1E, 0x62, 0x39, 0x1E, 0x62, 0x39, 0x1E, 0x62, 
   0x39, 0x1E, 0x62, 0x3A, 0x1E, 0x62, 0x3A, 0x1D, 0x62, 0x3A, 0x1D, 0x62, 0x3A, 0x1D, 0x61, 0x39, 
   0x1C, 0x61, 0x39, 0x1C, 0x62, 0x3A, 0x1D, 0x64, 0x3B, 0x20, 0x64, 0x3B, 0x20, 0x64, 0x3B, 0x20, 
   0x64, 0x3B, 0x20, 0x67, 0x3E, 0x23, 0x67, 0x3E, 0x23, 0x66, 0x3D, 0x23, 0x66, 0x3D, 0x25, 0x68, 
   0x3F, 0x26, 0x68, 0x3F, 0x26, 0x67, 0x3E, 0x25, 0x67, 0x3E, 0x25, 0x67, 0x3E, 0x25, 0x66, 0x3E, 
   0x25, 0x66, 0x3E, 0x25, 0x66, 0x3E, 0x25, 0x68, 0x40, 0x27, 0x69, 0x41, 0x28, 0x69, 0x41, 0x28, 
   0x68, 0x41, 0x28, 0x69, 0x43, 0x2B, 0x6E, 0x48, 0x32, 0x75, 0x50, 0x3B, 0x74, 0x51, 0x3D, 0x73, 
   0x51, 0x3E, 0x73, 0x52, 0x3F, 0x70, 0x51, 0x3C, 0x69, 0x49, 0x35, 0x6D, 0x4C, 0x38, 0x71, 0x4E, 
   0x3A, 0x6C, 0x49, 0x35, 0x6F, 0x4B, 0x37, 0x6E, 0x49, 0x33, 0x6B, 0x45, 0x2C, 0x69, 0x43, 0x2B, 
   0x6B, 0x45, 0x2D, 0x6C, 0x46, 0x2E, 0x6A, 0x44, 0x2C, 0x6A, 0x44, 0x2C, 0x6B, 0x42, 0x29, 0x68, 
   0x3F, 0x26, 0x67, 0x3E, 0x25, 0x66, 0x3D, 0x24, 0x64, 0x3B, 0x22, 0x66, 0x3D, 0x24, 0x67, 0x3E, 
   0x24, 0x66, 0x3D, 0x22, 0x66, 0x3D, 0x22, 0x66, 0x3D, 0x22, 0x64, 0x3B, 0x20, 0x63, 0x3A, 0x1F, 
   0x62, 0x39, 0x1E, 0x63, 0x39, 0x1C, 0x63, 0x39, 0x1C, 0x63, 0x39, 0x1C, 0x63, 0x39, 0x1C, 0x63, 
   0x39, 0x1C, 0x63, 0x39, 0x1C, 0x63, 0x39, 0x1C, 0x64, 0x3A, 0x1D, 0x65, 0x3B, 0x1E, 0x65, 0x3B, 
   0x1E, 0x65, 0x3B, 0x1E, 0x65, 0x3B, 0x1E, 0x65, 0x3B, 0x1E, 0x66, 0x3C, 0x1F, 0x66, 0x3C, 0x1F, 
   0x62, 0x38, 0x1B, 0x64, 0x3A, 0x1D, 0x65, 0x3B, 0x1E, 0x65, 0x3B, 0x1E, 0x64, 0x3B, 0x1C, 0x63, 
   0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 
   0x1A, 0x64, 0x3B, 0x1B, 0x64, 0x3B, 0x1B, 0x64, 0x3B, 0x1B, 0x64, 0x3B, 0x1B, 0x63, 0x3A, 0x1A, 
   0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x63, 
   0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x64, 0x3B, 0x1B, 0x64, 0x3B, 0x1B, 0x64, 0x3B, 
   0x1B, 0x63, 0x3A, 0x1A, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 
   0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 
   0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 
   0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 
   0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 
   0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 
   0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x64, 0x3A, 0x1A, 
   0x65, 0x39, 0x1A, 0x65, 0x39, 0x1A, 0x65, 0x39, 0x1A, 0x65, 0x39, 0x1A, 0x65, 0x39, 0x1A, 0x65, 
   0x39, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 
   0x1A, 0x63, 0x3A, 0x1A, 0x64, 0x3A, 0x1A, 0x65, 0x39, 0x1A, 0x65, 0x39, 0x1A, 0x65, 0x39, 0x1A, 
   0x65, 0x39, 0x1A, 0x65, 0x39, 0x1A, 0x65, 0x39, 0x1A, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 
   0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x64, 0x39, 0x18, 0x63, 0x38, 
   0x17, 0x63, 0x38, 0x17, 0x64, 0x39, 0x18, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 
   0x66, 0x3B, 0x1A, 0x66, 0x3B, 0x1A, 0x66, 0x3B, 0x1A, 0x66, 0x3B, 0x1A, 0x66, 0x3B, 0x1A, 0x66, 
   0x3B, 0x1A, 0x66, 0x3B, 0x1A, 0x66, 0x3B, 0x1A, 0x66, 0x3B, 0x1A, 0x66, 0x3B, 0x1A, 0x66, 0x3B, 
   0x1A, 0x66, 0x3B, 0x1A, 0x66, 0x3B, 0x1A, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 
   0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 
   0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 
   0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x66, 0x3B, 0x1A, 0x66, 0x3B, 0x1A, 0x66, 0x3B, 0x1A, 
   0x66, 0x3B, 0x1A, 0x66, 0x3B, 0x1A, 0x62, 0x40, 0x28, 0x62, 0x40, 0x28, 0x62, 0x40, 0x28, 0x62, 
   0x40, 0x28, 0x61, 0x3F, 0x27, 0x61, 0x3F, 0x27, 0x62, 0x3F, 0x26, 0x64, 0x3E, 0x25, 0x64, 0x3E, 
   0x25, 0x64, 0x3E, 0x25, 0x64, 0x3E, 0x25, 0x64, 0x3E, 0x25, 0x64, 0x3E, 0x25, 0x64, 0x3E, 0x25, 
   0x63, 0x3D, 0x24, 0x64, 0x3E, 0x25, 0x64, 0x3E, 0x25, 0x64, 0x3E, 0x25, 0x64, 0x3E, 0x25, 0x65, 
   0x3E, 0x25, 0x66, 0x3E, 0x25, 0x65, 0x3D, 0x24, 0x64, 0x3C, 0x23, 0x64, 0x3C, 0x23, 0x64, 0x3C, 
   0x23, 0x64, 0x3C, 0x23, 0x64, 0x3C, 0x23, 0x63, 0x3B, 0x22, 0x63, 0x3B, 0x22, 0x64, 0x3C, 0x23, 
   0x64, 0x3C, 0x23, 0x63, 0x3B, 0x22, 0x62, 0x3A, 0x21, 0x63, 0x3A, 0x1F, 0x62, 0x39, 0x1E, 0x61, 
   0x38, 0x1D, 0x62, 0x39, 0x1E, 0x61, 0x38, 0x1D, 0x60, 0x37, 0x1C, 0x60, 0x38, 0x1C, 0x61, 0x39, 
   0x1C, 0x61, 0x39, 0x1C, 0x61, 0x39, 0x1C, 0x61, 0x39, 0x1C, 0x61, 0x39, 0x1C, 0x61, 0x39, 0x1C, 
   0x62, 0x39, 0x1E, 0x62, 0x39, 0x1E, 0x62, 0x39, 0x1E, 0x62, 0x39, 0x1E, 0x62, 0x39, 0x1E, 0x62, 
   0x39, 0x1E, 0x62, 0x39, 0x1D, 0x61, 0x39, 0x1C, 0x61, 0x39, 0x1C, 0x62, 0x3A, 0x1D, 0x61, 0x39, 
   0x1C, 0x60, 0x38, 0x1B, 0x62, 0x39, 0x1D, 0x63, 0x3A, 0x1F, 0x63, 0x3A, 0x1F, 0x63, 0x3A, 0x1F, 
   0x64, 0x3B, 0x20, 0x67, 0x3E, 0x23, 0x67, 0x3E, 0x23, 0x66, 0x3D, 0x23, 0x66, 0x3D, 0x25, 0x68, 
   0x3F, 0x26, 0x68, 0x3F, 0x26, 0x67, 0x3E, 0x25, 0x67, 0x3E, 0x25, 0x67, 0x3E, 0x25, 0x66, 0x3E, 
   0x25, 0x66, 0x3E, 0x25, 0x66, 0x3E, 0x25, 0x68, 0x40, 0x27, 0x69, 0x41, 0x28, 0x69, 0x41, 0x28, 
   0x68, 0x41, 0x29, 0x68, 0x42, 0x2B, 0x6C, 0x47, 0x31, 0x73, 0x4F, 0x39, 0x71, 0x4E, 0x39, 0x71, 
   0x4F, 0x3B, 0x71, 0x51, 0x3E, 0x6D, 0x4F, 0x3B, 0x6B, 0x4B, 0x38, 0x6E, 0x4D, 0x3A, 0x70, 0x4F, 
   0x3C, 0x6C, 0x48, 0x36, 0x6E, 0x49, 0x38, 0x6F, 0x49, 0x34, 0x6E, 0x48, 0x30, 0x6D, 0x47, 0x2F, 
   0x6B, 0x45, 0x2D, 0x6B, 0x45, 0x2D, 0x6A, 0x44, 0x2C, 0x69, 0x43, 0x2A, 0x6B, 0x42, 0x29, 0x6A, 
   0x41, 0x28, 0x67, 0x3E, 0x25, 0x67, 0x3E, 0x25, 0x66, 0x3D, 0x24, 0x66, 0x3D, 0x24, 0x66, 0x3D, 
   0x23, 0x65, 0x3C, 0x21, 0x65, 0x3C, 0x21, 0x65, 0x3C, 0x21, 0x64, 0x3B, 0x20, 0x63, 0x3A, 0x1F, 
   0x62, 0x39, 0x1E, 0x63, 0x39, 0x1C, 0x63, 0x39, 0x1C, 0x63, 0x39, 0x1C, 0x63, 0x39, 0x1C, 0x63, 
   0x39, 0x1C, 0x63, 0x39, 0x1C, 0x63, 0x39, 0x1C, 0x63, 0x39, 0x1C, 0x64, 0x3A, 0x1D, 0x65, 0x3B, 
   0x1E, 0x64, 0x3A, 0x1D, 0x64, 0x3A, 0x1D, 0x64, 0x3A, 0x1D, 0x66, 0x3C, 0x1F, 0x64, 0x3A, 0x1D, 
   0x62, 0x38, 0x1B, 0x63, 0x39, 0x1C, 0x64, 0x3A, 0x1D, 0x64, 0x3A, 0x1D, 0x64, 0x3A, 0x1C, 0x63, 
   0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 
   0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x62, 0x39, 0x19, 
   0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x63, 
   0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 
   0x1A, 0x63, 0x3A, 0x1A, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 
   0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 
   0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 
   0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 
   0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 
   0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 
   0x19, 0x62, 0x39, 0x19, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x64, 0x3A, 0x1A, 
   0x65, 0x39, 0x1A, 0x65, 0x39, 0x1A, 0x65, 0x39, 0x1A, 0x65, 0x39, 0x1A, 0x65, 0x39, 0x1A, 0x65, 
   0x39, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 
   0x1A, 0x63, 0x3A, 0x1A, 0x64, 0x3A, 0x1A, 0x65, 0x39, 0x1A, 0x65, 0x39, 0x1A, 0x65, 0x39, 0x1A, 
   0x65, 0x39, 0x1A, 0x65, 0x39, 0x1A, 0x65, 0x39, 0x1A, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 
   0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x66, 0x3B, 0x1A, 0x66, 0x3B, 
   0x1A, 0x66, 0x3B, 0x1A, 0x66, 0x3B, 0x1A, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 
   0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 
   0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x66, 0x3B, 0x1A, 0x66, 0x3B, 
   0x1A, 0x66, 0x3B, 0x1A, 0x66, 0x3B, 0x1A, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 
   0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 
   0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 
   0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 
   0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x62, 0x40, 0x28, 0x62, 0x40, 0x28, 0x62, 0x40, 0x28, 0x62, 
   0x40, 0x28, 0x61, 0x3F, 0x27, 0x61, 0x3F, 0x27, 0x62, 0x3F, 0x27, 0x65, 0x3F, 0x26, 0x65, 0x3F, 
   0x26, 0x65, 0x3F, 0x26, 0x64, 0x3E, 0x25, 0x64, 0x3E, 0x25, 0x64, 0x3E, 0x25, 0x64, 0x3E, 0x25, 
   0x63, 0x3D, 0x24, 0x64, 0x3E, 0x25, 0x64, 0x3E, 0x25, 0x64, 0x3E, 0x25, 0x64, 0x3E, 0x25, 0x65, 
   0x3F, 0x26, 0x67, 0x3F, 0x26, 0x66, 0x3E, 0x25, 0x65, 0x3D, 0x24, 0x64, 0x3C, 0x23, 0x64, 0x3C, 
   0x23, 0x64, 0x3C, 0x23, 0x63, 0x3B, 0x22, 0x62, 0x3A, 0x21, 0x62, 0x3A, 0x21, 0x63, 0x3B, 0x22, 
   0x64, 0x3C, 0x23, 0x63, 0x3B, 0x22, 0x62, 0x3A, 0x21, 0x63, 0x3A, 0x1F, 0x62, 0x39, 0x1E, 0x61, 
   0x38, 0x1D, 0x62, 0x39, 0x1E, 0x61, 0x38, 0x1D, 0x60, 0x37, 0x1C, 0x60, 0x38, 0x1C, 0x61, 0x39, 
   0x1C, 0x61, 0x39, 0x1C, 0x61, 0x39, 0x1C, 0x60, 0x38, 0x1B, 0x60, 0x38, 0x1B, 0x60, 0x38, 0x1B, 
   0x62, 0x39, 0x1E, 0x62, 0x39, 0x1E, 0x62, 0x39, 0x1E, 0x62, 0x39, 0x1E, 0x62, 0x39, 0x1E, 0x62, 
   0x39, 0x1E, 0x61, 0x39, 0x1D, 0x60, 0x38, 0x1B, 0x60, 0x38, 0x1B, 0x60, 0x38, 0x1B, 0x60, 0x38, 
   0x1B, 0x5F, 0x37, 0x1A, 0x61, 0x39, 0x1C, 0x62, 0x39, 0x1E, 0x62, 0x39, 0x1E, 0x62, 0x39, 0x1E, 
   0x64, 0x3B, 0x20, 0x67, 0x3E, 0x23, 0x67, 0x3E, 0x23, 0x66, 0x3D, 0x23, 0x66, 0x3D, 0x25, 0x68, 
   0x3F, 0x26, 0x68, 0x3F, 0x26, 0x67, 0x3E, 0x25, 0x67, 0x3E, 0x25, 0x67, 0x3E, 0x25, 0x66, 0x3E, 
   0x25, 0x66, 0x3E, 0x25, 0x66, 0x3E, 0x25, 0x67, 0x3F, 0x26, 0x67, 0x3F, 0x26, 0x67, 0x3F, 0x26, 
   0x66, 0x3F, 0x26, 0x66, 0x41, 0x28, 0x69, 0x44, 0x2D, 0x6C, 0x47, 0x32, 0x6A, 0x47, 0x33, 0x6E, 
   0x4C, 0x38, 0x71, 0x50, 0x3D, 0x6D, 0x4F, 0x3C, 0x6E, 0x4F, 0x3C, 0x72, 0x52, 0x3E, 0x70, 0x4F, 
   0x3C, 0x6D, 0x4A, 0x37, 0x6B, 0x46, 0x35, 0x6A, 0x44, 0x2F, 0x6F, 0x49, 0x31, 0x70, 0x49, 0x31, 
   0x6B, 0x45, 0x2D, 0x6A, 0x43, 0x2B, 0x6B, 0x45, 0x2D, 0x68, 0x42, 0x2A, 0x6B, 0x42, 0x29, 0x6C, 
   0x42, 0x29, 0x68, 0x3F, 0x26, 0x67, 0x3E, 0x25, 0x67, 0x3E, 0x25, 0x66, 0x3D, 0x24, 0x65, 0x3C, 
   0x22, 0x64, 0x3B, 0x20, 0x64, 0x3B, 0x20, 0x64, 0x3B, 0x20, 0x64, 0x3B, 0x20, 0x63, 0x3A, 0x1F, 
   0x62, 0x39, 0x1E, 0x63, 0x39, 0x1C, 0x63, 0x39, 0x1C, 0x63, 0x39, 0x1C, 0x63, 0x39, 0x1C, 0x63, 
   0x39, 0x1C, 0x63, 0x39, 0x1C, 0x62, 0x38, 0x1B, 0x62, 0x38, 0x1B, 0x64, 0x3A, 0x1D, 0x64, 0x3A, 
   0x1D, 0x63, 0x39, 0x1C, 0x63, 0x39, 0x1C, 0x63, 0x39, 0x1C, 0x63, 0x39, 0x1C, 0x63, 0x39, 0x1C, 
   0x63, 0x39, 0x1C, 0x63, 0x39, 0x1C, 0x63, 0x39, 0x1C, 0x63, 0x39, 0x1C, 0x63, 0x3A, 0x1B, 0x63, 
   0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 
   0x1A, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x61, 0x38, 0x18, 
   0x61, 0x38, 0x18, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x63, 
   0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x62, 0x39, 0x19, 0x62, 0x39, 
   0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x61, 0x38, 0x18, 
   0x61, 0x38, 0x18, 0x61, 0x38, 0x18, 0x61, 0x38, 0x18, 0x61, 0x38, 0x18, 0x61, 0x38, 0x18, 0x61, 
   0x38, 0x18, 0x61, 0x38, 0x18, 0x61, 0x38, 0x18, 0x61, 0x38, 0x18, 0x61, 0x38, 0x18, 0x61, 0x38, 
   0x18, 0x61, 0x38, 0x18, 0x61, 0x38, 0x18, 0x61, 0x38, 0x18, 0x61, 0x38, 0x18, 0x61, 0x38, 0x18, 
   0x61, 0x38, 0x18, 0x61, 0x38, 0x18, 0x61, 0x38, 0x18, 0x61, 0x38, 0x18, 0x61, 0x38, 0x18, 0x61, 
   0x38, 0x18, 0x61, 0x38, 0x18, 0x61, 0x38, 0x18, 0x61, 0x38, 0x18, 0x61, 0x38, 0x18, 0x61, 0x38, 
   0x18, 0x61, 0x38, 0x18, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x64, 0x3A, 0x1A, 
   0x65, 0x39, 0x1A, 0x65, 0x39, 0x1A, 0x65, 0x39, 0x1A, 0x65, 0x39, 0x1A, 0x65, 0x39, 0x1A, 0x65, 
   0x39, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 
   0x1A, 0x63, 0x3A, 0x1A, 0x64, 0x3A, 0x1A, 0x65, 0x39, 0x1A, 0x65, 0x39, 0x1A, 0x65, 0x39, 0x1A, 
   0x65, 0x39, 0x1A, 0x65, 0x39, 0x1A, 0x65, 0x39, 0x1A, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 
   0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x66, 0x3B, 0x1A, 0x67, 0x3B, 
   0x1A, 0x67, 0x3B, 0x1A, 0x66, 0x3B, 0x1A, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 
   0x64, 0x39, 0x18, 0x64, 0x39, 0x18, 0x64, 0x39, 0x18, 0x64, 0x39, 0x18, 0x64, 0x39, 0x18, 0x64, 
   0x39, 0x18, 0x64, 0x39, 0x18, 0x64, 0x39, 0x18, 0x64, 0x39, 0x18, 0x65, 0x3A, 0x19, 0x66, 0x3B, 
   0x1A, 0x66, 0x3B, 0x1A, 0x66, 0x3B, 0x1A, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 
   0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 
   0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 
   0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x64, 0x39, 0x18, 0x64, 0x39, 0x18, 
   0x64, 0x39, 0x18, 0x64, 0x39, 0x18, 0x61, 0x3F, 0x27, 0x61, 0x3F, 0x27, 0x61, 0x3F, 0x27, 0x62, 
   0x40, 0x28, 0x61, 0x3F, 0x27, 0x61, 0x3F, 0x27, 0x63, 0x40, 0x28, 0x66, 0x40, 0x27, 0x66, 0x40, 
   0x27, 0x66, 0x40, 0x27, 0x65, 0x3F, 0x26, 0x65, 0x3F, 0x26, 0x65, 0x3F, 0x26, 0x64, 0x3E, 0x25, 
   0x63, 0x3D, 0x24, 0x64, 0x3E, 0x26, 0x65, 0x3F, 0x26, 0x64, 0x3E, 0x26, 0x64, 0x3E, 0x26, 0x65, 
   0x3F, 0x26, 0x66, 0x3F, 0x26, 0x66, 0x3F, 0x26, 0x65, 0x3E, 0x25, 0x64, 0x3D, 0x24, 0x63, 0x3C, 
   0x23, 0x63, 0x3C, 0x23, 0x63, 0x3B, 0x22, 0x62, 0x3A, 0x21, 0x62, 0x3A, 0x21, 0x63, 0x3B, 0x22, 
   0x64, 0x3C, 0x23, 0x63, 0x3B, 0x22, 0x62, 0x3A, 0x21, 0x63, 0x3A, 0x20, 0x62, 0x39, 0x1F, 0x62, 
   0x39, 0x1F, 0x62, 0x39, 0x1F, 0x61, 0x38, 0x1E, 0x61, 0x38, 0x1E, 0x60, 0x38, 0x1D, 0x60, 0x39, 
   0x1C, 0x60, 0x39, 0x1C, 0x60, 0x39, 0x1C, 0x60, 0x38, 0x1C, 0x60, 0x39, 0x1C, 0x61, 0x39, 0x1D, 
   0x62, 0x39, 0x1E, 0x61, 0x38, 0x1D, 0x62, 0x39, 0x1E, 0x63, 0x3A, 0x1F, 0x61, 0x38, 0x1D, 0x61, 
   0x38, 0x1D, 0x61, 0x39, 0x1D, 0x61, 0x38, 0x1C, 0x61, 0x38, 0x1C, 0x60, 0x38, 0x1C, 0x60, 0x38, 
   0x1C, 0x60, 0x37, 0x1B, 0x61, 0x39, 0x1D, 0x61, 0x39, 0x1E, 0x61, 0x39, 0x1E, 0x61, 0x39, 0x1E, 
   0x64, 0x3C, 0x20, 0x67, 0x3F, 0x23, 0x67, 0x3F, 0x23, 0x66, 0x3D, 0x23, 0x66, 0x3D, 0x25, 0x67, 
   0x3E, 0x25, 0x67, 0x3F, 0x26, 0x67, 0x3E, 0x25, 0x67, 0x3E, 0x25, 0x67, 0x3E, 0x25, 0x67, 0x3F, 
   0x26, 0x67, 0x3F, 0x26, 0x66, 0x3E, 0x25, 0x65, 0x3D, 0x24, 0x65, 0x3D, 0x24, 0x65, 0x3D, 0x24, 
   0x63, 0x3C, 0x24, 0x63, 0x3E, 0x27, 0x63, 0x3E, 0x28, 0x63, 0x3F, 0x2A, 0x64, 0x41, 0x2D, 0x69, 
   0x48, 0x35, 0x70, 0x50, 0x3D, 0x71, 0x52, 0x40, 0x71, 0x51, 0x40, 0x73, 0x52, 0x40, 0x70, 0x4F, 
   0x3E, 0x6C, 0x4A, 0x39, 0x66, 0x44, 0x34, 0x64, 0x40, 0x2C, 0x69, 0x45, 0x2C, 0x6B, 0x47, 0x2F, 
   0x6A, 0x46, 0x2E, 0x6A, 0x46, 0x2E, 0x6A, 0x46, 0x2E, 0x66, 0x42, 0x2A, 0x69, 0x41, 0x2A, 0x69, 
   0x41, 0x29, 0x69, 0x40, 0x28, 0x68, 0x3F, 0x26, 0x68, 0x3F, 0x25, 0x67, 0x3D, 0x23, 0x66, 0x3C, 
   0x21, 0x64, 0x3B, 0x1F, 0x63, 0x3B, 0x1F, 0x63, 0x3B, 0x1F, 0x64, 0x3C, 0x20, 0x64, 0x3B, 0x1F, 
   0x62, 0x3A, 0x1E, 0x63, 0x39, 0x1C, 0x63, 0x38, 0x1B, 0x62, 0x38, 0x1B, 0x63, 0x39, 0x1C, 0x63, 
   0x39, 0x1C, 0x63, 0x39, 0x1C, 0x61, 0x38, 0x1A, 0x62, 0x39, 0x1A, 0x64, 0x3A, 0x1C, 0x64, 0x3A, 
   0x1C, 0x63, 0x3A, 0x1B, 0x63, 0x3A, 0x1B, 0x63, 0x3A, 0x1B, 0x61, 0x38, 0x1B, 0x62, 0x39, 0x1C, 
   0x62, 0x39, 0x1C, 0x62, 0x39, 0x1C, 0x62, 0x39, 0x1C, 0x62, 0x39, 0x1C, 0x63, 0x3A, 0x1C, 0x62, 
   0x3A, 0x1A, 0x61, 0x39, 0x19, 0x61, 0x39, 0x19, 0x61, 0x39, 0x19, 0x61, 0x39, 0x19, 0x61, 0x39, 
   0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 
   0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 
   0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x63, 0x3A, 0x1A, 0x62, 0x39, 0x19, 0x62, 0x39, 
   0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 
   0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 
   0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 
   0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 
   0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 
   0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 
   0x19, 0x62, 0x39, 0x19, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 
   0x64, 0x39, 0x1A, 0x64, 0x39, 0x1A, 0x64, 0x3A, 0x1A, 0x64, 0x3A, 0x1A, 0x64, 0x3A, 0x1A, 0x64, 
   0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 
   0x1A, 0x63, 0x3A, 0x1A, 0x64, 0x3A, 0x1A, 0x64, 0x39, 0x1A, 0x64, 0x39, 0x1A, 0x64, 0x3A, 0x1A, 
   0x64, 0x3A, 0x1A, 0x64, 0x3A, 0x1A, 0x64, 0x3A, 0x1A, 0x64, 0x3A, 0x1A, 0x64, 0x3A, 0x1A, 0x64, 
   0x3A, 0x1A, 0x64, 0x3A, 0x1A, 0x64, 0x3A, 0x1A, 0x64, 0x3A, 0x1A, 0x64, 0x3A, 0x1A, 0x63, 0x39, 
   0x19, 0x63, 0x39, 0x19, 0x64, 0x3A, 0x1A, 0x64, 0x3A, 0x1A, 0x64, 0x3A, 0x1A, 0x64, 0x3A, 0x1A, 
   0x65, 0x39, 0x19, 0x65, 0x39, 0x19, 0x65, 0x39, 0x19, 0x65, 0x39, 0x19, 0x65, 0x39, 0x19, 0x65, 
   0x39, 0x19, 0x65, 0x39, 0x19, 0x65, 0x39, 0x19, 0x65, 0x39, 0x19, 0x65, 0x3A, 0x1A, 0x65, 0x3A, 
   0x1A, 0x65, 0x3A, 0x1A, 0x65, 0x3A, 0x1A, 0x65, 0x3A, 0x1A, 0x65, 0x3A, 0x1A, 0x65, 0x3A, 0x1A, 
   0x65, 0x3A, 0x1A, 0x65, 0x3A, 0x1A, 0x65, 0x3A, 0x1A, 0x65, 0x3A, 0x1A, 0x65, 0x3A, 0x19, 0x65, 
   0x3A, 0x19, 0x66, 0x3B, 0x1A, 0x66, 0x3B, 0x1A, 0x66, 0x3B, 0x1A, 0x66, 0x3B, 0x1A, 0x65, 0x3A, 
   0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 
   0x65, 0x3A, 0x19, 0x65, 0x39, 0x19, 0x60, 0x3E, 0x26, 0x60, 0x3E, 0x26, 0x60, 0x3E, 0x26, 0x61, 
   0x3F, 0x27, 0x61, 0x3F, 0x27, 0x61, 0x3F, 0x27, 0x63, 0x40, 0x28, 0x66, 0x40, 0x28, 0x66, 0x40, 
   0x28, 0x66, 0x40, 0x28, 0x65, 0x3F, 0x27, 0x65, 0x3F, 0x27, 0x65, 0x3F, 0x27, 0x63, 0x3D, 0x25, 
   0x62, 0x3C, 0x24, 0x64, 0x3E, 0x26, 0x65, 0x3F, 0x27, 0x64, 0x3E, 0x26, 0x64, 0x3E, 0x26, 0x64, 
   0x3E, 0x26, 0x65, 0x3F, 0x26, 0x66, 0x40, 0x27, 0x65, 0x3F, 0x26, 0x63, 0x3D, 0x24, 0x62, 0x3C, 
   0x23, 0x61, 0x3B, 0x22, 0x62, 0x3A, 0x21, 0x62, 0x3A, 0x21, 0x62, 0x3A, 0x21, 0x63, 0x3B, 0x22, 
   0x63, 0x3B, 0x22, 0x62, 0x3A, 0x21, 0x61, 0x39, 0x20, 0x62, 0x39, 0x20, 0x62, 0x39, 0x20, 0x62, 
   0x39, 0x20, 0x61, 0x38, 0x1F, 0x61, 0x38, 0x1F, 0x61, 0x38, 0x1F, 0x60, 0x38, 0x1E, 0x5F, 0x38, 
   0x1C, 0x5F, 0x38, 0x1C, 0x5F, 0x38, 0x1C, 0x5F, 0x38, 0x1C, 0x60, 0x39, 0x1D, 0x61, 0x3A, 0x1E, 
   0x61, 0x38, 0x1D, 0x60, 0x37, 0x1C, 0x62, 0x39, 0x1E, 0x63, 0x3A, 0x1F, 0x60, 0x37, 0x1C, 0x60, 
   0x37, 0x1C, 0x61, 0x38, 0x1D, 0x61, 0x38, 0x1D, 0x61, 0x38, 0x1D, 0x61, 0x38, 0x1D, 0x61, 0x38, 
   0x1D, 0x61, 0x38, 0x1D, 0x61, 0x38, 0x1D, 0x60, 0x39, 0x1D, 0x60, 0x39, 0x1D, 0x60, 0x39, 0x1D, 
   0x63, 0x3C, 0x20, 0x66, 0x3F, 0x23, 0x66, 0x3F, 0x23, 0x65, 0x3D, 0x23, 0x65, 0x3D, 0x24, 0x65, 
   0x3D, 0x24, 0x66, 0x3E, 0x25, 0x66, 0x3E, 0x25, 0x66, 0x3E, 0x25, 0x66, 0x3E, 0x25, 0x67, 0x3F, 
   0x26, 0x67, 0x3F, 0x26, 0x64, 0x3C, 0x23, 0x64, 0x3C, 0x23, 0x64, 0x3C, 0x23, 0x64, 0x3C, 0x23, 
   0x63, 0x3C, 0x24, 0x62, 0x3D, 0x27, 0x60, 0x3B, 0x25, 0x5F, 0x3C, 0x27, 0x61, 0x3F, 0x2B, 0x67, 
   0x47, 0x34, 0x70, 0x50, 0x3D, 0x75, 0x54, 0x44, 0x73, 0x52, 0x42, 0x72, 0x51, 0x41, 0x71, 0x50, 
   0x40, 0x6B, 0x4A, 0x3A, 0x66, 0x45, 0x36, 0x63, 0x41, 0x2D, 0x63, 0x42, 0x29, 0x64, 0x43, 0x2B, 
   0x67, 0x45, 0x2D, 0x68, 0x46, 0x2E, 0x68, 0x46, 0x2E, 0x67, 0x45, 0x2D, 0x68, 0x42, 0x2C, 0x66, 
   0x3F, 0x28, 0x66, 0x3E, 0x27, 0x69, 0x40, 0x28, 0x6A, 0x41, 0x26, 0x69, 0x3F, 0x24, 0x66, 0x3D, 
   0x21, 0x63, 0x3B, 0x1E, 0x61, 0x3A, 0x1C, 0x62, 0x3A, 0x1D, 0x64, 0x3C, 0x1F, 0x64, 0x3C, 0x1F, 
   0x62, 0x3A, 0x1D, 0x63, 0x39, 0x1C, 0x62, 0x37, 0x1A, 0x61, 0x37, 0x1A, 0x62, 0x38, 0x1B, 0x62, 
   0x38, 0x1B, 0x62, 0x38, 0x1B, 0x61, 0x38, 0x19, 0x62, 0x3A, 0x19, 0x64, 0x3B, 0x1B, 0x63, 0x3A, 
   0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x61, 0x39, 0x1C, 0x61, 0x39, 0x1C, 
   0x61, 0x39, 0x1C, 0x61, 0x39, 0x1C, 0x61, 0x39, 0x1C, 0x61, 0x39, 0x1C, 0x62, 0x3A, 0x1C, 0x61, 
   0x3A, 0x19, 0x5F, 0x38, 0x18, 0x5F, 0x38, 0x18, 0x5F, 0x38, 0x18, 0x5F, 0x38, 0x18, 0x5F, 0x38, 
   0x18, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 
   0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x61, 
   0x38, 0x18, 0x61, 0x38, 0x18, 0x61, 0x38, 0x18, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 
   0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 
   0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 
   0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 
   0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 
   0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x63, 
   0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x62, 0x39, 0x19, 0x62, 0x39, 
   0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 
   0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 
   0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 
   0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x63, 0x3A, 0x1A, 
   0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 
   0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x62, 0x39, 
   0x19, 0x62, 0x39, 0x19, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 
   0x65, 0x39, 0x1A, 0x65, 0x39, 0x1A, 0x65, 0x39, 0x1A, 0x65, 0x39, 0x1A, 0x65, 0x39, 0x1A, 0x65, 
   0x39, 0x1A, 0x65, 0x39, 0x1A, 0x65, 0x39, 0x1A, 0x65, 0x39, 0x1A, 0x65, 0x39, 0x1A, 0x64, 0x38, 
   0x19, 0x64, 0x38, 0x19, 0x64, 0x38, 0x19, 0x65, 0x39, 0x1A, 0x65, 0x39, 0x1A, 0x65, 0x39, 0x1A, 
   0x65, 0x39, 0x1A, 0x65, 0x39, 0x1A, 0x65, 0x39, 0x1A, 0x65, 0x3A, 0x1A, 0x65, 0x3A, 0x19, 0x65, 
   0x3A, 0x19, 0x66, 0x3B, 0x1A, 0x66, 0x3B, 0x1A, 0x66, 0x3B, 0x1A, 0x66, 0x3B, 0x1A, 0x65, 0x3A, 
   0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 
   0x65, 0x3A, 0x1A, 0x65, 0x39, 0x1A, 0x60, 0x3E, 0x26, 0x60, 0x3E, 0x26, 0x60, 0x3E, 0x26, 0x60, 
   0x3E, 0x26, 0x60, 0x3E, 0x26, 0x60, 0x3E, 0x26, 0x62, 0x3F, 0x27, 0x65, 0x3F, 0x27, 0x65, 0x3F, 
   0x27, 0x65, 0x3F, 0x27, 0x64, 0x3E, 0x26, 0x64, 0x3E, 0x26, 0x64, 0x3E, 0x26, 0x63, 0x3D, 0x25, 
   0x62, 0x3C, 0x24, 0x64, 0x3E, 0x26, 0x65, 0x3F, 0x27, 0x64, 0x3E, 0x26, 0x64, 0x3E, 0x26, 0x64, 
   0x3E, 0x25, 0x65, 0x3F, 0x25, 0x65, 0x3F, 0x26, 0x64, 0x3E, 0x25, 0x63, 0x3D, 0x24, 0x62, 0x3C, 
   0x23, 0x61, 0x3B, 0x22, 0x62, 0x3B, 0x22, 0x63, 0x3B, 0x22, 0x63, 0x3B, 0x22, 0x63, 0x3B, 0x22, 
   0x63, 0x3B, 0x22, 0x62, 0x3A, 0x21, 0x61, 0x39, 0x20, 0x62, 0x39, 0x20, 0x62, 0x39, 0x20, 0x62, 
   0x39, 0x20, 0x61, 0x38, 0x1F, 0x61, 0x38, 0x1F, 0x61, 0x38, 0x1F, 0x60, 0x38, 0x1E, 0x5F, 0x38, 
   0x1C, 0x5F, 0x38, 0x1C, 0x5F, 0x38, 0x1C, 0x5F, 0x38, 0x1C, 0x60, 0x39, 0x1D, 0x61, 0x3A, 0x1E, 
   0x61, 0x38, 0x1D, 0x60, 0x37, 0x1C, 0x62, 0x39, 0x1E, 0x63, 0x3A, 0x1F, 0x60, 0x37, 0x1C, 0x60, 
   0x37, 0x1C, 0x61, 0x38, 0x1D, 0x61, 0x38, 0x1D, 0x61, 0x38, 0x1D, 0x61, 0x38, 0x1D, 0x61, 0x38, 
   0x1D, 0x61, 0x38, 0x1D, 0x61, 0x38, 0x1D, 0x60, 0x39, 0x1D, 0x60, 0x39, 0x1D, 0x60, 0x39, 0x1D, 
   0x62, 0x3B, 0x1F, 0x65, 0x3E, 0x22, 0x65, 0x3E, 0x22, 0x64, 0x3D, 0x22, 0x64, 0x3C, 0x23, 0x64, 
   0x3C, 0x23, 0x65, 0x3D, 0x24, 0x65, 0x3D, 0x24, 0x65, 0x3D, 0x24, 0x65, 0x3D, 0x24, 0x66, 0x3E, 
   0x25, 0x66, 0x3E, 0x25, 0x65, 0x3D, 0x24, 0x64, 0x3C, 0x23, 0x64, 0x3C, 0x23, 0x64, 0x3C, 0x23, 
   0x63, 0x3C, 0x24, 0x63, 0x3D, 0x25, 0x60, 0x3B, 0x25, 0x62, 0x3E, 0x28, 0x63, 0x41, 0x2E, 0x68, 
   0x47, 0x35, 0x71, 0x50, 0x3E, 0x77, 0x56, 0x46, 0x77, 0x56, 0x46, 0x76, 0x55, 0x45, 0x73, 0x52, 
   0x42, 0x6A, 0x49, 0x39, 0x68, 0x47, 0x38, 0x66, 0x44, 0x30, 0x62, 0x40, 0x28, 0x61, 0x3F, 0x27, 
   0x62, 0x40, 0x28, 0x65, 0x43, 0x2B, 0x67, 0x45, 0x2D, 0x67, 0x45, 0x2D, 0x67, 0x42, 0x2C, 0x65, 
   0x3F, 0x28, 0x65, 0x3D, 0x26, 0x67, 0x3E, 0x26, 0x68, 0x40, 0x25, 0x66, 0x3D, 0x22, 0x64, 0x3B, 
   0x1F, 0x63, 0x3B, 0x1E, 0x62, 0x3A, 0x1D, 0x62, 0x3A, 0x1D, 0x63, 0x3B, 0x1E, 0x63, 0x3B, 0x1E, 
   0x62, 0x3A, 0x1D, 0x63, 0x39, 0x1C, 0x62, 0x37, 0x1A, 0x61, 0x37, 0x1A, 0x61, 0x37, 0x1A, 0x61, 
   0x37, 0x1A, 0x61, 0x37, 0x1A, 0x60, 0x37, 0x18, 0x61, 0x39, 0x18, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 
   0x1A, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x60, 0x38, 0x1B, 0x60, 0x38, 0x1B, 
   0x60, 0x38, 0x1B, 0x60, 0x38, 0x1B, 0x60, 0x38, 0x1B, 0x60, 0x38, 0x1B, 0x61, 0x39, 0x1B, 0x60, 
   0x39, 0x19, 0x5E, 0x37, 0x17, 0x5F, 0x38, 0x18, 0x5F, 0x38, 0x18, 0x5F, 0x38, 0x18, 0x5F, 0x38, 
   0x18, 0x61, 0x38, 0x18, 0x61, 0x38, 0x18, 0x61, 0x38, 0x18, 0x61, 0x38, 0x18, 0x61, 0x38, 0x18, 
   0x61, 0x38, 0x18, 0x61, 0x38, 0x18, 0x61, 0x38, 0x18, 0x61, 0x38, 0x18, 0x61, 0x38, 0x18, 0x61, 
   0x38, 0x18, 0x61, 0x38, 0x18, 0x61, 0x38, 0x18, 0x61, 0x38, 0x18, 0x61, 0x38, 0x18, 0x61, 0x38, 
   0x18, 0x61, 0x38, 0x18, 0x61, 0x38, 0x18, 0x61, 0x38, 0x18, 0x61, 0x38, 0x18, 0x61, 0x38, 0x18, 
   0x61, 0x38, 0x18, 0x61, 0x38, 0x18, 0x61, 0x38, 0x18, 0x61, 0x38, 0x18, 0x61, 0x38, 0x18, 0x61, 
   0x38, 0x18, 0x61, 0x38, 0x18, 0x61, 0x38, 0x18, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 
   0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 
   0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 
   0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 
   0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 
   0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 
   0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 
   0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x63, 0x3A, 0x1A, 
   0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 
   0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 
   0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 
   0x64, 0x38, 0x19, 0x64, 0x38, 0x19, 0x64, 0x38, 0x19, 0x64, 0x38, 0x19, 0x64, 0x38, 0x19, 0x64, 
   0x38, 0x19, 0x64, 0x38, 0x19, 0x64, 0x38, 0x19, 0x64, 0x38, 0x19, 0x64, 0x38, 0x19, 0x64, 0x38, 
   0x19, 0x64, 0x38, 0x19, 0x64, 0x38, 0x19, 0x64, 0x38, 0x19, 0x64, 0x38, 0x19, 0x64, 0x38, 0x19, 
   0x64, 0x38, 0x19, 0x64, 0x38, 0x19, 0x64, 0x38, 0x19, 0x64, 0x39, 0x19, 0x64, 0x39, 0x18, 0x64, 
   0x39, 0x18, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x65, 0x3A, 0x19, 0x64, 0x39, 
   0x18, 0x64, 0x39, 0x18, 0x64, 0x39, 0x18, 0x64, 0x39, 0x18, 0x64, 0x39, 0x18, 0x64, 0x39, 0x18, 
   0x64, 0x39, 0x19, 0x64, 0x38, 0x19, 0x60, 0x3E, 0x26, 0x60, 0x3E, 0x26, 0x60, 0x3E, 0x26, 0x60, 
   0x3E, 0x26, 0x5F, 0x3D, 0x25, 0x5F, 0x3D, 0x25, 0x61, 0x3E, 0x26, 0x64, 0x3E, 0x26, 0x64, 0x3E, 
   0x26, 0x64, 0x3E, 0x26, 0x63, 0x3D, 0x25, 0x63, 0x3D, 0x25, 0x63, 0x3D, 0x25, 0x62, 0x3C, 0x24, 
   0x62, 0x3C, 0x24, 0x64, 0x3E, 0x26, 0x65, 0x3F, 0x27, 0x64, 0x3E, 0x26, 0x64, 0x3E, 0x26, 0x64, 
   0x3E, 0x25, 0x64, 0x3E, 0x24, 0x64, 0x3E, 0x25, 0x64, 0x3E, 0x25, 0x63, 0x3D, 0x24, 0x62, 0x3C, 
   0x23, 0x61, 0x3B, 0x22, 0x63, 0x3C, 0x23, 0x64, 0x3C, 0x23, 0x64, 0x3C, 0x23, 0x64, 0x3C, 0x23, 
   0x63, 0x3B, 0x22, 0x62, 0x3A, 0x21, 0x61, 0x39, 0x20, 0x62, 0x39, 0x20, 0x62, 0x39, 0x20, 0x62, 
   0x39, 0x20, 0x61, 0x38, 0x1F, 0x61, 0x38, 0x1F, 0x61, 0x38, 0x1F, 0x60, 0x38, 0x1E, 0x5F, 0x38, 
   0x1C, 0x5F, 0x38, 0x1C, 0x5F, 0x38, 0x1C, 0x5F, 0x38, 0x1C, 0x60, 0x39, 0x1D, 0x61, 0x3A, 0x1E, 
   0x61, 0x38, 0x1D, 0x60, 0x37, 0x1C, 0x62, 0x39, 0x1E, 0x63, 0x3A, 0x1F, 0x60, 0x37, 0x1C, 0x60, 
   0x37, 0x1C, 0x61, 0x38, 0x1D, 0x61, 0x38, 0x1D, 0x61, 0x38, 0x1D, 0x61, 0x38, 0x1D, 0x61, 0x38, 
   0x1D, 0x61, 0x38, 0x1D, 0x61, 0x38, 0x1D, 0x60, 0x39, 0x1D, 0x60, 0x39, 0x1D, 0x60, 0x39, 0x1D, 
   0x62, 0x3B, 0x1F, 0x64, 0x3D, 0x21, 0x64, 0x3D, 0x21, 0x64, 0x3C, 0x22, 0x63, 0x3B, 0x22, 0x63, 
   0x3B, 0x22, 0x64, 0x3C, 0x23, 0x64, 0x3C, 0x23, 0x64, 0x3C, 0x23, 0x64, 0x3C, 0x23, 0x66, 0x3E, 
   0x25, 0x68, 0x40, 0x27, 0x68, 0x40, 0x27, 0x65, 0x3D, 0x24, 0x64, 0x3C, 0x23, 0x64, 0x3C, 0x23, 
   0x63, 0x3C, 0x24, 0x62, 0x3C, 0x24, 0x61, 0x3B, 0x23, 0x64, 0x40, 0x2A, 0x67, 0x44, 0x30, 0x6C, 
   0x4A, 0x36, 0x72, 0x51, 0x3E, 0x76, 0x55, 0x45, 0x78, 0x57, 0x47, 0x75, 0x54, 0x44, 0x71, 0x50, 
   0x40, 0x6A, 0x49, 0x39, 0x69, 0x48, 0x38, 0x66, 0x45, 0x31, 0x63, 0x41, 0x29, 0x61, 0x3F, 0x27, 
   0x63, 0x41, 0x29, 0x68, 0x46, 0x2E, 0x67, 0x45, 0x2D, 0x65, 0x43, 0x2B, 0x66, 0x41, 0x2B, 0x65, 
   0x40, 0x29, 0x65, 0x3F, 0x27, 0x68, 0x41, 0x28, 0x6A, 0x43, 0x27, 0x69, 0x40, 0x25, 0x66, 0x3D, 
   0x22, 0x64, 0x3C, 0x20, 0x63, 0x3B, 0x1E, 0x64, 0x3C, 0x1F, 0x63, 0x3B, 0x1E, 0x60, 0x39, 0x1C, 
   0x61, 0x39, 0x1C, 0x63, 0x39, 0x1C, 0x62, 0x37, 0x1A, 0x61, 0x37, 0x1A, 0x61, 0x37, 0x1A, 0x60, 
   0x36, 0x19, 0x60, 0x36, 0x19, 0x60, 0x36, 0x18, 0x61, 0x38, 0x17, 0x62, 0x39, 0x19, 0x62, 0x39, 
   0x19, 0x61, 0x38, 0x18, 0x61, 0x38, 0x18, 0x61, 0x38, 0x18, 0x5F, 0x37, 0x1A, 0x5F, 0x37, 0x1A, 
   0x5F, 0x37, 0x1A, 0x5F, 0x37, 0x1A, 0x5F, 0x37, 0x1A, 0x5F, 0x37, 0x1A, 0x60, 0x38, 0x1A, 0x60, 
   0x39, 0x18, 0x5E, 0x37, 0x17, 0x5E, 0x37, 0x17, 0x5F, 0x38, 0x18, 0x5F, 0x38, 0x18, 0x5F, 0x38, 
   0x18, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 
   0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x61, 
   0x38, 0x18, 0x61, 0x38, 0x18, 0x61, 0x38, 0x18, 0x61, 0x38, 0x18, 0x60, 0x37, 0x17, 0x60, 0x37, 
   0x17, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 
   0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 
   0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x61, 0x38, 0x18, 0x62, 0x39, 0x19, 0x62, 0x39, 
   0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 
   0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 
   0x39, 0x19, 0x61, 0x38, 0x18, 0x61, 0x38, 0x18, 0x61, 0x38, 0x18, 0x62, 0x39, 0x19, 0x62, 0x39, 
   0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 
   0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x61, 0x38, 0x18, 0x61, 0x38, 0x18, 0x61, 
   0x38, 0x18, 0x61, 0x38, 0x18, 0x61, 0x38, 0x18, 0x61, 0x38, 0x18, 0x61, 0x38, 0x18, 0x61, 0x38, 
   0x18, 0x61, 0x38, 0x18, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x63, 0x3A, 0x1A, 
   0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x61, 0x38, 0x18, 0x61, 0x38, 0x18, 0x61, 
   0x38, 0x18, 0x61, 0x38, 0x18, 0x61, 0x38, 0x18, 0x61, 0x38, 0x18, 0x62, 0x39, 0x19, 0x62, 0x39, 
   0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x61, 0x38, 0x18, 0x61, 0x38, 0x18, 0x61, 0x38, 0x18, 
   0x63, 0x37, 0x18, 0x63, 0x37, 0x18, 0x63, 0x37, 0x18, 0x63, 0x37, 0x18, 0x63, 0x37, 0x18, 0x63, 
   0x37, 0x18, 0x63, 0x37, 0x18, 0x63, 0x37, 0x18, 0x63, 0x37, 0x18, 0x64, 0x38, 0x19, 0x64, 0x38, 
   0x19, 0x64, 0x38, 0x19, 0x64, 0x38, 0x19, 0x63, 0x37, 0x18, 0x63, 0x37, 0x18, 0x63, 0x37, 0x18, 
   0x63, 0x37, 0x18, 0x63, 0x37, 0x18, 0x63, 0x37, 0x18, 0x63, 0x38, 0x18, 0x63, 0x38, 0x17, 0x63, 
   0x38, 0x17, 0x64, 0x39, 0x18, 0x64, 0x39, 0x18, 0x64, 0x39, 0x18, 0x64, 0x39, 0x18, 0x63, 0x38, 
   0x17, 0x63, 0x38, 0x17, 0x63, 0x38, 0x17, 0x63, 0x38, 0x17, 0x63, 0x38, 0x17, 0x63, 0x38, 0x17, 
   0x63, 0x38, 0x18, 0x63, 0x37, 0x18, 0x60, 0x3E, 0x26, 0x60, 0x3E, 0x26, 0x60, 0x3E, 0x26, 0x60, 
   0x3E, 0x26, 0x5F, 0x3D, 0x25, 0x5F, 0x3D, 0x25, 0x61, 0x3E, 0x26, 0x64, 0x3E, 0x26, 0x64, 0x3E, 
   0x26, 0x64, 0x3E, 0x26, 0x63, 0x3D, 0x25, 0x63, 0x3D, 0x25, 0x63, 0x3D, 0x25, 0x62, 0x3C, 0x24, 
   0x62, 0x3C, 0x24, 0x64, 0x3E, 0x26, 0x65, 0x3F, 0x27, 0x64, 0x3E, 0x26, 0x64, 0x3E, 0x26, 0x63, 
   0x3D, 0x25, 0x63, 0x3D, 0x24, 0x64, 0x3E, 0x25, 0x63, 0x3D, 0x24, 0x63, 0x3D, 0x24, 0x62, 0x3C, 
   0x23, 0x61, 0x3B, 0x22, 0x63, 0x3C, 0x23, 0x64, 0x3C, 0x23, 0x64, 0x3C, 0x23, 0x64, 0x3C, 0x23, 
   0x63, 0x3B, 0x22, 0x62, 0x3A, 0x21, 0x61, 0x39, 0x20, 0x61, 0x39, 0x20, 0x61, 0x39, 0x20, 0x61, 
   0x39, 0x20, 0x60, 0x38, 0x1F, 0x60, 0x38, 0x1F, 0x60, 0x38, 0x1F, 0x60, 0x38, 0x1E, 0x5F, 0x38, 
   0x1C, 0x5F, 0x38, 0x1C, 0x5F, 0x38, 0x1C, 0x5F, 0x38, 0x1C, 0x60, 0x39, 0x1D, 0x61, 0x3A, 0x1E, 
   0x61, 0x38, 0x1D, 0x60, 0x37, 0x1C, 0x62, 0x39, 0x1E, 0x63, 0x3A, 0x1F, 0x60, 0x37, 0x1C, 0x60, 
   0x37, 0x1C, 0x61, 0x38, 0x1D, 0x61, 0x38, 0x1D, 0x61, 0x38, 0x1D, 0x61, 0x38, 0x1D, 0x61, 0x38, 
   0x1D, 0x61, 0x38, 0x1D, 0x61, 0x38, 0x1D, 0x60, 0x39, 0x1D, 0x60, 0x39, 0x1D, 0x60, 0x39, 0x1D, 
   0x61, 0x3A, 0x1E, 0x64, 0x3D, 0x21, 0x64, 0x3D, 0x21, 0x63, 0x3C, 0x21, 0x63, 0x3B, 0x22, 0x63, 
   0x3B, 0x22, 0x64, 0x3C, 0x23, 0x64, 0x3C, 0x23, 0x64, 0x3C, 0x23, 0x64, 0x3C, 0x23, 0x65, 0x3D, 
   0x24, 0x67, 0x3F, 0x26, 0x67, 0x3F, 0x26, 0x65, 0x3D, 0x24, 0x64, 0x3C, 0x23, 0x64, 0x3C, 0x23, 
   0x64, 0x3C, 0x23, 0x62, 0x3B, 0x22, 0x61, 0x3B, 0x23, 0x67, 0x41, 0x2A, 0x69, 0x45, 0x30, 0x6D, 
   0x4A, 0x36, 0x74, 0x51, 0x3D, 0x73, 0x52, 0x40, 0x76, 0x55, 0x42, 0x73, 0x52, 0x3F, 0x6E, 0x4E, 
   0x3B, 0x6B, 0x4A, 0x37, 0x69, 0x48, 0x35, 0x65, 0x44, 0x2E, 0x65, 0x43, 0x2B, 0x65, 0x43, 0x2B, 
   0x65, 0x43, 0x2B, 0x67, 0x45, 0x2D, 0x69, 0x47, 0x2F, 0x68, 0x46, 0x2E, 0x64, 0x42, 0x2B, 0x65, 
   0x42, 0x2B, 0x69, 0x43, 0x2B, 0x6B, 0x45, 0x2C, 0x6C, 0x45, 0x29, 0x6A, 0x43, 0x27, 0x68, 0x41, 
   0x24, 0x67, 0x3F, 0x21, 0x66, 0x3E, 0x21, 0x66, 0x3E, 0x21, 0x62, 0x3A, 0x1D, 0x60, 0x38, 0x1B, 
   0x61, 0x39, 0x1C, 0x63, 0x39, 0x1C, 0x62, 0x37, 0x1A, 0x61, 0x37, 0x1A, 0x61, 0x37, 0x1A, 0x60, 
   0x36, 0x19, 0x60, 0x36, 0x19, 0x5F, 0x36, 0x17, 0x60, 0x38, 0x17, 0x62, 0x39, 0x19, 0x62, 0x39, 
   0x19, 0x61, 0x38, 0x18, 0x61, 0x38, 0x18, 0x61, 0x38, 0x18, 0x5F, 0x37, 0x1A, 0x5F, 0x37, 0x1A, 
   0x5F, 0x37, 0x1A, 0x5F, 0x37, 0x1A, 0x5F, 0x37, 0x1A, 0x5F, 0x37, 0x1A, 0x60, 0x38, 0x1A, 0x5F, 
   0x38, 0x17, 0x5D, 0x36, 0x16, 0x5E, 0x37, 0x17, 0x5F, 0x38, 0x18, 0x5F, 0x38, 0x18, 0x5F, 0x38, 
   0x18, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 
   0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x61, 
   0x38, 0x18, 0x61, 0x38, 0x18, 0x61, 0x38, 0x18, 0x61, 0x38, 0x18, 0x60, 0x37, 0x17, 0x60, 0x37, 
   0x17, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 
   0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 
   0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x61, 0x38, 0x18, 0x62, 0x39, 0x19, 0x62, 0x39, 
   0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 
   0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 
   0x39, 0x19, 0x61, 0x38, 0x18, 0x61, 0x38, 0x18, 0x61, 0x38, 0x18, 0x62, 0x39, 0x19, 0x62, 0x39, 
   0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 
   0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x61, 0x38, 0x18, 0x61, 0x38, 0x18, 0x61, 
   0x38, 0x18, 0x61, 0x38, 0x18, 0x61, 0x38, 0x18, 0x61, 0x38, 0x18, 0x61, 0x38, 0x18, 0x61, 0x38, 
   0x18, 0x61, 0x38, 0x18, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x63, 0x3A, 0x1A, 
   0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x63, 0x3A, 0x1A, 0x61, 0x38, 0x18, 0x61, 0x38, 0x18, 0x61, 
   0x38, 0x18, 0x61, 0x38, 0x18, 0x61, 0x38, 0x18, 0x61, 0x38, 0x18, 0x62, 0x39, 0x19, 0x62, 0x39, 
   0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x61, 0x38, 0x18, 0x61, 0x38, 0x18, 0x61, 0x38, 0x18, 
   0x63, 0x37, 0x18, 0x63, 0x37, 0x18, 0x63, 0x37, 0x18, 0x63, 0x37, 0x18, 0x63, 0x37, 0x18, 0x63, 
   0x37, 0x18, 0x63, 0x37, 0x18, 0x63, 0x37, 0x18, 0x63, 0x37, 0x18, 0x64, 0x38, 0x19, 0x64, 0x38, 
   0x19, 0x64, 0x38, 0x19, 0x64, 0x38, 0x19, 0x63, 0x37, 0x18, 0x63, 0x37, 0x18, 0x63, 0x37, 0x18, 
   0x63, 0x37, 0x18, 0x63, 0x37, 0x18, 0x63, 0x37, 0x18, 0x63, 0x38, 0x18, 0x63, 0x38, 0x17, 0x63, 
   0x38, 0x17, 0x64, 0x39, 0x18, 0x64, 0x39, 0x18, 0x64, 0x39, 0x18, 0x64, 0x39, 0x18, 0x63, 0x38, 
   0x17, 0x63, 0x38, 0x17, 0x63, 0x38, 0x17, 0x63, 0x38, 0x17, 0x63, 0x38, 0x17, 0x63, 0x38, 0x17, 
   0x63, 0x38, 0x18, 0x63, 0x37, 0x18, 0x5F, 0x3D, 0x25, 0x5F, 0x3D, 0x25, 0x5F, 0x3D, 0x25, 0x60, 
   0x3E, 0x26, 0x60, 0x3E, 0x26, 0x5E, 0x3C, 0x24, 0x5F, 0x3C, 0x24, 0x62, 0x3C, 0x24, 0x62, 0x3C, 
   0x24, 0x62, 0x3C, 0x24, 0x62, 0x3C, 0x24, 0x62, 0x3C, 0x24, 0x62, 0x3C, 0x24, 0x61, 0x3B, 0x23, 
   0x61, 0x3B, 0x23, 0x63, 0x3D, 0x25, 0x64, 0x3E, 0x26, 0x64, 0x3E, 0x26, 0x63, 0x3D, 0x25, 0x62, 
   0x3C, 0x23, 0x61, 0x3B, 0x22, 0x63, 0x3D, 0x24, 0x63, 0x3D, 0x24, 0x62, 0x3C, 0x23, 0x62, 0x3C, 
   0x23, 0x62, 0x3C, 0x23, 0x63, 0x3C, 0x23, 0x64, 0x3C, 0x23, 0x64, 0x3C, 0x23, 0x64, 0x3C, 0x23, 
   0x64, 0x3C, 0x23, 0x63, 0x3B, 0x22, 0x62, 0x3A, 0x21, 0x60, 0x3A, 0x21, 0x5F, 0x39, 0x20, 0x5F, 
   0x38, 0x1F, 0x5E, 0x37, 0x1E, 0x5E, 0x38, 0x1F, 0x5F, 0x39, 0x20, 0x60, 0x3A, 0x1F, 0x60, 0x39, 
   0x1D, 0x5F, 0x38, 0x1C, 0x5F, 0x38, 0x1C, 0x5F, 0x38, 0x1C, 0x60, 0x39, 0x1D, 0x61, 0x3A, 0x1E, 
   0x60, 0x38, 0x1C, 0x5F, 0x36, 0x1B, 0x60, 0x37, 0x1C, 0x62, 0x39, 0x1E, 0x62, 0x39, 0x1E, 0x62, 
   0x39, 0x1E, 0x62, 0x39, 0x1E, 0x61, 0x38, 0x1D, 0x61, 0x38, 0x1D, 0x62, 0x39, 0x1E, 0x62, 0x39, 
   0x1E, 0x62, 0x39, 0x1E, 0x62, 0x39, 0x1E, 0x60, 0x39, 0x1D, 0x60, 0x39, 0x1D, 0x60, 0x39, 0x1D, 
   0x63, 0x3C, 0x20, 0x63, 0x3C, 0x20, 0x63, 0x3C, 0x20, 0x63, 0x3B, 0x21, 0x63, 0x3B, 0x23, 0x64, 
   0x3C, 0x23, 0x64, 0x3C, 0x23, 0x63, 0x3B, 0x22, 0x63, 0x3B, 0x22, 0x63, 0x3B, 0x22, 0x63, 0x3B, 
   0x22, 0x64, 0x3C, 0x23, 0x64, 0x3C, 0x23, 0x66, 0x3E, 0x25, 0x68, 0x40, 0x27, 0x68, 0x40, 0x27, 
   0x65, 0x3D, 0x24, 0x63, 0x3C, 0x23, 0x65, 0x3D, 0x25, 0x69, 0x43, 0x2B, 0x6E, 0x49, 0x32, 0x72, 
   0x4E, 0x39, 0x75, 0x52, 0x3E, 0x77, 0x55, 0x41, 0x75, 0x53, 0x3F, 0x6E, 0x4B, 0x38, 0x6C, 0x4A, 
   0x36, 0x6E, 0x4C, 0x38, 0x6B, 0x49, 0x35, 0x6A, 0x48, 0x32, 0x69, 0x47, 0x2F, 0x68, 0x46, 0x2E, 
   0x68, 0x46, 0x2E, 0x64, 0x42, 0x2A, 0x66, 0x44, 0x2C, 0x6B, 0x49, 0x32, 0x6A, 0x48, 0x31, 0x67, 
   0x45, 0x2E, 0x6C, 0x48, 0x30, 0x6D, 0x48, 0x2F, 0x6A, 0x45, 0x29, 0x6A, 0x43, 0x27, 0x67, 0x3F, 
   0x23, 0x66, 0x3E, 0x21, 0x63, 0x3B, 0x1E, 0x63, 0x3B, 0x1E, 0x60, 0x38, 0x1B, 0x5F, 0x37, 0x1A, 
   0x5F, 0x37, 0x1A, 0x61, 0x37, 0x1A, 0x60, 0x36, 0x19, 0x60, 0x36, 0x19, 0x61, 0x37, 0x1A, 0x61, 
   0x37, 0x1A, 0x61, 0x37, 0x1A, 0x61, 0x38, 0x19, 0x61, 0x38, 0x18, 0x61, 0x38, 0x18, 0x61, 0x38, 
   0x18, 0x5F, 0x36, 0x16, 0x5F, 0x36, 0x16, 0x5F, 0x36, 0x16, 0x5E, 0x36, 0x19, 0x5E, 0x36, 0x19, 
   0x5E, 0x36, 0x19, 0x5F, 0x37, 0x1A, 0x5F, 0x37, 0x1A, 0x5F, 0x37, 0x1A, 0x5F, 0x37, 0x19, 0x5E, 
   0x37, 0x17, 0x5E, 0x37, 0x17, 0x5E, 0x37, 0x17, 0x5D, 0x36, 0x16, 0x5D, 0x36, 0x16, 0x5D, 0x36, 
   0x16, 0x5F, 0x36, 0x16, 0x5F, 0x36, 0x16, 0x5F, 0x36, 0x16, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 
   0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x61, 
   0x38, 0x18, 0x61, 0x38, 0x18, 0x61, 0x38, 0x18, 0x60, 0x37, 0x17, 0x5F, 0x36, 0x16, 0x5F, 0x36, 
   0x16, 0x5F, 0x36, 0x16, 0x5F, 0x36, 0x16, 0x5F, 0x36, 0x16, 0x5F, 0x36, 0x16, 0x5F, 0x36, 0x16, 
   0x5F, 0x36, 0x16, 0x5F, 0x36, 0x16, 0x5F, 0x36, 0x16, 0x5F, 0x36, 0x16, 0x5F, 0x36, 0x16, 0x5F, 
   0x36, 0x16, 0x5F, 0x36, 0x16, 0x5F, 0x36, 0x16, 0x60, 0x37, 0x17, 0x61, 0x38, 0x18, 0x61, 0x38, 
   0x18, 0x61, 0x38, 0x18, 0x61, 0x38, 0x18, 0x61, 0x38, 0x18, 0x61, 0x38, 0x18, 0x61, 0x38, 0x18, 
   0x61, 0x38, 0x18, 0x61, 0x38, 0x18, 0x61, 0x38, 0x18, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x61, 
   0x38, 0x18, 0x61, 0x38, 0x18, 0x61, 0x38, 0x18, 0x61, 0x38, 0x18, 0x60, 0x37, 0x17, 0x60, 0x37, 
   0x17, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 
   0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 
   0x37, 0x17, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x61, 0x38, 0x18, 0x61, 0x38, 
   0x18, 0x61, 0x38, 0x18, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 
   0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 
   0x39, 0x19, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x61, 0x38, 0x18, 0x61, 0x38, 
   0x18, 0x61, 0x38, 0x18, 0x61, 0x38, 0x18, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 
   0x62, 0x36, 0x17, 0x62, 0x36, 0x17, 0x62, 0x36, 0x17, 0x63, 0x37, 0x18, 0x63, 0x37, 0x18, 0x63, 
   0x37, 0x18, 0x63, 0x37, 0x18, 0x62, 0x36, 0x17, 0x62, 0x36, 0x17, 0x63, 0x37, 0x18, 0x63, 0x37, 
   0x18, 0x63, 0x37, 0x18, 0x63, 0x37, 0x18, 0x64, 0x38, 0x19, 0x64, 0x38, 0x19, 0x64, 0x38, 0x19, 
   0x64, 0x38, 0x19, 0x63, 0x37, 0x18, 0x63, 0x37, 0x18, 0x64, 0x38, 0x18, 0x64, 0x39, 0x18, 0x64, 
   0x39, 0x18, 0x64, 0x39, 0x18, 0x64, 0x39, 0x18, 0x64, 0x39, 0x18, 0x64, 0x39, 0x18, 0x64, 0x39, 
   0x18, 0x64, 0x39, 0x18, 0x64, 0x39, 0x18, 0x64, 0x39, 0x18, 0x64, 0x39, 0x18, 0x64, 0x39, 0x18, 
   0x64, 0x39, 0x19, 0x64, 0x38, 0x19, 0x5F, 0x3D, 0x25, 0x5F, 0x3D, 0x25, 0x5F, 0x3D, 0x25, 0x5F, 
   0x3D, 0x25, 0x5F, 0x3D, 0x25, 0x5E, 0x3C, 0x24, 0x5F, 0x3C, 0x24, 0x62, 0x3C, 0x24, 0x62, 0x3C, 
   0x24, 0x62, 0x3C, 0x24, 0x62, 0x3C, 0x24, 0x62, 0x3C, 0x24, 0x62, 0x3C, 0x24, 0x61, 0x3B, 0x23, 
   0x61, 0x3B, 0x23, 0x62, 0x3C, 0x24, 0x63, 0x3D, 0x25, 0x64, 0x3E, 0x26, 0x62, 0x3C, 0x24, 0x61, 
   0x3B, 0x23, 0x61, 0x3B, 0x22, 0x61, 0x3B, 0x22, 0x63, 0x3D, 0x24, 0x62, 0x3C, 0x23, 0x62, 0x3C, 
   0x23, 0x62, 0x3C, 0x23, 0x63, 0x3C, 0x23, 0x64, 0x3C, 0x23, 0x64, 0x3C, 0x23, 0x64, 0x3C, 0x23, 
   0x64, 0x3C, 0x23, 0x63, 0x3B, 0x22, 0x62, 0x3A, 0x21, 0x60, 0x3A, 0x21, 0x5F, 0x39, 0x20, 0x5E, 
   0x38, 0x1F, 0x5D, 0x37, 0x1E, 0x5E, 0x38, 0x1F, 0x5F, 0x39, 0x20, 0x60, 0x3A, 0x1F, 0x60, 0x39, 
   0x1D, 0x5F, 0x38, 0x1C, 0x5F, 0x38, 0x1C, 0x5F, 0x38, 0x1C, 0x60, 0x39, 0x1D, 0x61, 0x3A, 0x1E, 
   0x60, 0x38, 0x1C, 0x5F, 0x36, 0x1B, 0x60, 0x37, 0x1C, 0x62, 0x39, 0x1E, 0x62, 0x39, 0x1E, 0x62, 
   0x39, 0x1E, 0x62, 0x39, 0x1E, 0x61, 0x38, 0x1D, 0x61, 0x38, 0x1D, 0x62, 0x39, 0x1E, 0x62, 0x39, 
   0x1E, 0x62, 0x39, 0x1E, 0x62, 0x39, 0x1E, 0x60, 0x39, 0x1D, 0x60, 0x39, 0x1D, 0x60, 0x39, 0x1D, 
   0x63, 0x3C, 0x20, 0x63, 0x3C, 0x20, 0x63, 0x3C, 0x20, 0x63, 0x3B, 0x21, 0x63, 0x3B, 0x22, 0x64, 
   0x3C, 0x23, 0x64, 0x3C, 0x23, 0x63, 0x3B, 0x22, 0x63, 0x3B, 0x22, 0x63, 0x3B, 0x22, 0x63, 0x3B, 
   0x22, 0x63, 0x3B, 0x22, 0x63, 0x3B, 0x22, 0x64, 0x3C, 0x23, 0x68, 0x40, 0x27, 0x66, 0x3E, 0x26, 
   0x64, 0x3B, 0x22, 0x65, 0x3C, 0x22, 0x66, 0x3E, 0x25, 0x68, 0x41, 0x28, 0x6C, 0x46, 0x2E, 0x71, 
   0x4C, 0x36, 0x75, 0x51, 0x3C, 0x73, 0x50, 0x3D, 0x71, 0x4E, 0x3A, 0x69, 0x46, 0x32, 0x68, 0x45, 
   0x31, 0x6B, 0x48, 0x34, 0x6A, 0x47, 0x34, 0x6B, 0x48, 0x32, 0x6B, 0x49, 0x30, 0x69, 0x47, 0x2F, 
   0x66, 0x44, 0x2C, 0x62, 0x40, 0x28, 0x61, 0x3F, 0x27, 0x66, 0x44, 0x2C, 0x66, 0x46, 0x2F, 0x68, 
   0x46, 0x2F, 0x6C, 0x49, 0x31, 0x6D, 0x49, 0x30, 0x6C, 0x47, 0x2B, 0x6C, 0x46, 0x2A, 0x65, 0x3E, 
   0x21, 0x63, 0x3B, 0x1E, 0x61, 0x39, 0x1C, 0x62, 0x3A, 0x1D, 0x60, 0x38, 0x1B, 0x5F, 0x37, 0x1A, 
   0x5E, 0x36, 0x19, 0x60, 0x36, 0x19, 0x60, 0x36, 0x19, 0x60, 0x36, 0x19, 0x61, 0x37, 0x1A, 0x61, 
   0x37, 0x1A, 0x61, 0x37, 0x1A, 0x61, 0x38, 0x19, 0x61, 0x38, 0x18, 0x61, 0x38, 0x18, 0x61, 0x38, 
   0x18, 0x5F, 0x36, 0x16, 0x5F, 0x36, 0x16, 0x5F, 0x36, 0x16, 0x5E, 0x36, 0x19, 0x5E, 0x36, 0x19, 
   0x5E, 0x36, 0x19, 0x5F, 0x37, 0x1A, 0x5F, 0x37, 0x1A, 0x5F, 0x37, 0x1A, 0x5F, 0x37, 0x19, 0x5E, 
   0x37, 0x17, 0x5E, 0x37, 0x17, 0x5E, 0x37, 0x17, 0x5D, 0x36, 0x16, 0x5D, 0x36, 0x16, 0x5D, 0x36, 
   0x16, 0x5F, 0x36, 0x16, 0x5F, 0x36, 0x16, 0x5F, 0x36, 0x16, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 
   0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x61, 
   0x38, 0x18, 0x61, 0x38, 0x18, 0x61, 0x38, 0x18, 0x60, 0x37, 0x17, 0x5F, 0x36, 0x16, 0x5F, 0x36, 
   0x16, 0x5F, 0x36, 0x16, 0x5F, 0x36, 0x16, 0x5F, 0x36, 0x16, 0x5F, 0x36, 0x16, 0x5F, 0x36, 0x16, 
   0x5F, 0x36, 0x16, 0x5F, 0x36, 0x16, 0x5F, 0x36, 0x16, 0x5F, 0x36, 0x16, 0x5F, 0x36, 0x16, 0x5F, 
   0x36, 0x16, 0x5F, 0x36, 0x16, 0x5F, 0x36, 0x16, 0x60, 0x37, 0x17, 0x61, 0x38, 0x18, 0x61, 0x38, 
   0x18, 0x61, 0x38, 0x18, 0x61, 0x38, 0x18, 0x61, 0x38, 0x18, 0x61, 0x38, 0x18, 0x61, 0x38, 0x18, 
   0x61, 0x38, 0x18, 0x61, 0x38, 0x18, 0x61, 0x38, 0x18, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x61, 
   0x38, 0x18, 0x61, 0x38, 0x18, 0x61, 0x38, 0x18, 0x61, 0x38, 0x18, 0x60, 0x37, 0x17, 0x60, 0x37, 
   0x17, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 
   0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 
   0x37, 0x17, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x61, 0x38, 0x18, 0x61, 0x38, 
   0x18, 0x61, 0x38, 0x18, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 
   0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 0x39, 0x19, 0x62, 
   0x39, 0x19, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x61, 0x38, 0x18, 0x61, 0x38, 
   0x18, 0x61, 0x38, 0x18, 0x61, 0x38, 0x18, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 
   0x62, 0x36, 0x17, 0x62, 0x36, 0x17, 0x62, 0x36, 0x17, 0x63, 0x37, 0x18, 0x63, 0x37, 0x18, 0x63, 
   0x37, 0x18, 0x63, 0x37, 0x18, 0x62, 0x36, 0x17, 0x62, 0x36, 0x17, 0x63, 0x37, 0x18, 0x63, 0x37, 
   0x18, 0x63, 0x37, 0x18, 0x63, 0x37, 0x18, 0x64, 0x38, 0x19, 0x64, 0x38, 0x19, 0x64, 0x38, 0x19, 
   0x64, 0x38, 0x19, 0x63, 0x37, 0x18, 0x63, 0x37, 0x18, 0x64, 0x38, 0x18, 0x64, 0x39, 0x18, 0x64, 
   0x39, 0x18, 0x64, 0x39, 0x18, 0x64, 0x39, 0x18, 0x64, 0x39, 0x18, 0x64, 0x39, 0x18, 0x64, 0x39, 
   0x18, 0x64, 0x39, 0x18, 0x64, 0x39, 0x18, 0x64, 0x39, 0x18, 0x64, 0x39, 0x18, 0x64, 0x39, 0x18, 
   0x64, 0x39, 0x19, 0x64, 0x38, 0x19, 0x5E, 0x3C, 0x24, 0x5E, 0x3C, 0x24, 0x5E, 0x3C, 0x24, 0x5F, 
   0x3D, 0x25, 0x5F, 0x3D, 0x25, 0x5E, 0x3C, 0x24, 0x5E, 0x3B, 0x23, 0x61, 0x3B, 0x23, 0x61, 0x3B, 
   0x23, 0x61, 0x3B, 0x23, 0x61, 0x3B, 0x23, 0x61, 0x3B, 0x23, 0x61, 0x3B, 0x23, 0x61, 0x3B, 0x23, 
   0x61, 0x3B, 0x23, 0x61, 0x3B, 0x23, 0x61, 0x3B, 0x23, 0x61, 0x3B, 0x23, 0x61, 0x3B, 0x23, 0x61, 
   0x3B, 0x22, 0x61, 0x3B, 0x21, 0x61, 0x3B, 0x22, 0x62, 0x3C, 0x23, 0x61, 0x3B, 0x22, 0x61, 0x3B, 
   0x22, 0x61, 0x3B, 0x22, 0x63, 0x3C, 0x23, 0x64, 0x3C, 0x23, 0x64, 0x3C, 0x23, 0x64, 0x3C, 0x23, 
   0x64, 0x3C, 0x23, 0x63, 0x3B, 0x22, 0x62, 0x3A, 0x21, 0x5F, 0x3A, 0x21, 0x5E, 0x39, 0x20, 0x5D, 
   0x38, 0x1F, 0x5D, 0x38, 0x1F, 0x5E, 0x39, 0x1F, 0x5F, 0x3A, 0x21, 0x61, 0x3B, 0x20, 0x60, 0x39, 
   0x1C, 0x5F, 0x38, 0x1C, 0x5F, 0x38, 0x1C, 0x5F, 0x38, 0x1C, 0x5F, 0x38, 0x1C, 0x60, 0x39, 0x1D, 
   0x60, 0x37, 0x1C, 0x5F, 0x36, 0x1B, 0x60, 0x37, 0x1C, 0x61, 0x38, 0x1D, 0x61, 0x38, 0x1D, 0x61, 
   0x38, 0x1D, 0x61, 0x38, 0x1D, 0x61, 0x38, 0x1D, 0x61, 0x38, 0x1D, 0x61, 0x38, 0x1D, 0x61, 0x38, 
   0x1D, 0x61, 0x38, 0x1D, 0x61, 0x38, 0x1D, 0x60, 0x39, 0x1D, 0x60, 0x39, 0x1D, 0x60, 0x39, 0x1D, 
   0x61, 0x3A, 0x1E, 0x62, 0x3B, 0x1F, 0x63, 0x3C, 0x20, 0x63, 0x3B, 0x21, 0x63, 0x3B, 0x22, 0x64, 
   0x3C, 0x23, 0x64, 0x3C, 0x23, 0x63, 0x3B, 0x22, 0x63, 0x3B, 0x22, 0x63, 0x3B, 0x22, 0x63, 0x3B, 
   0x22, 0x63, 0x3B, 0x22, 0x63, 0x3B, 0x22, 0x63, 0x3B, 0x22, 0x66, 0x3E, 0x25, 0x65, 0x3D, 0x24, 
   0x64, 0x3B, 0x21, 0x65, 0x3C, 0x21, 0x65, 0x3C, 0x22, 0x66, 0x3E, 0x25, 0x65, 0x3F, 0x27, 0x68, 
   0x42, 0x2B, 0x6B, 0x45, 0x30, 0x6D, 0x49, 0x34, 0x6E, 0x4B, 0x36, 0x67, 0x43, 0x2E, 0x63, 0x3F, 
   0x2B, 0x66, 0x42, 0x2D, 0x68, 0x44, 0x30, 0x69, 0x46, 0x30, 0x6B, 0x49, 0x30, 0x6A, 0x48, 0x30, 
   0x64, 0x42, 0x2A, 0x62, 0x40, 0x28, 0x62, 0x40, 0x28, 0x63, 0x41, 0x2A, 0x64, 0x44, 0x2D, 0x66, 
   0x46, 0x2E, 0x65, 0x44, 0x2C, 0x64, 0x43, 0x29, 0x65, 0x41, 0x25, 0x64, 0x40, 0x24, 0x62, 0x3B, 
   0x1F, 0x60, 0x38, 0x1B, 0x61, 0x39, 0x1C, 0x62, 0x3A, 0x1D, 0x60, 0x38, 0x1B, 0x5F, 0x37, 0x1A, 
   0x5E, 0x36, 0x19, 0x60, 0x36, 0x19, 0x60, 0x36, 0x19, 0x60, 0x36, 0x19, 0x60, 0x36, 0x19, 0x60, 
   0x36, 0x19, 0x60, 0x36, 0x19, 0x60, 0x37, 0x18, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 0x37, 
   0x17, 0x5F, 0x36, 0x16, 0x5F, 0x36, 0x16, 0x5F, 0x36, 0x16, 0x5D, 0x35, 0x18, 0x5D, 0x35, 0x18, 
   0x5D, 0x35, 0x18, 0x5E, 0x36, 0x19, 0x5E, 0x36, 0x19, 0x5E, 0x36, 0x19, 0x5E, 0x37, 0x18, 0x5E, 
   0x37, 0x17, 0x5E, 0x37, 0x17, 0x5E, 0x37, 0x17, 0x5D, 0x36, 0x16, 0x5D, 0x36, 0x16, 0x5D, 0x36, 
   0x16, 0x5F, 0x36, 0x16, 0x5F, 0x36, 0x16, 0x5F, 0x36, 0x16, 0x5F, 0x36, 0x16, 0x5F, 0x36, 0x16, 
   0x5F, 0x36, 0x16, 0x5F, 0x36, 0x16, 0x5F, 0x36, 0x16, 0x5F, 0x36, 0x16, 0x5F, 0x36, 0x16, 0x60, 
   0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x5F, 0x36, 0x16, 0x5F, 0x36, 
   0x16, 0x5F, 0x36, 0x16, 0x5F, 0x36, 0x16, 0x5F, 0x36, 0x16, 0x5F, 0x36, 0x16, 0x5F, 0x36, 0x16, 
   0x5F, 0x36, 0x16, 0x5F, 0x36, 0x16, 0x5F, 0x36, 0x16, 0x5F, 0x36, 0x16, 0x5F, 0x36, 0x16, 0x5F, 
   0x36, 0x16, 0x5F, 0x36, 0x16, 0x5F, 0x36, 0x16, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 0x37, 
   0x17, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 
   0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 
   0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 0x37, 
   0x17, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 
   0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 
   0x37, 0x17, 0x61, 0x38, 0x18, 0x61, 0x38, 0x18, 0x61, 0x38, 0x18, 0x61, 0x38, 0x18, 0x61, 0x38, 
   0x18, 0x61, 0x38, 0x18, 0x61, 0x38, 0x18, 0x61, 0x38, 0x18, 0x61, 0x38, 0x18, 0x61, 0x38, 0x18, 
   0x61, 0x38, 0x18, 0x61, 0x38, 0x18, 0x61, 0x38, 0x18, 0x61, 0x38, 0x18, 0x61, 0x38, 0x18, 0x61, 
   0x38, 0x18, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x61, 0x38, 0x18, 0x61, 0x38, 
   0x18, 0x61, 0x38, 0x18, 0x61, 0x38, 0x18, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 
   0x62, 0x36, 0x17, 0x62, 0x36, 0x17, 0x62, 0x36, 0x17, 0x63, 0x37, 0x18, 0x63, 0x37, 0x18, 0x63, 
   0x37, 0x18, 0x63, 0x37, 0x18, 0x62, 0x36, 0x17, 0x62, 0x36, 0x17, 0x63, 0x37, 0x18, 0x63, 0x37, 
   0x18, 0x63, 0x37, 0x18, 0x63, 0x37, 0x18, 0x63, 0x37, 0x18, 0x63, 0x37, 0x18, 0x63, 0x37, 0x18, 
   0x63, 0x37, 0x18, 0x63, 0x37, 0x18, 0x63, 0x37, 0x18, 0x63, 0x38, 0x18, 0x63, 0x38, 0x17, 0x63, 
   0x38, 0x17, 0x63, 0x38, 0x17, 0x63, 0x38, 0x17, 0x63, 0x38, 0x17, 0x63, 0x38, 0x17, 0x63, 0x38, 
   0x17, 0x63, 0x38, 0x17, 0x63, 0x38, 0x17, 0x63, 0x38, 0x17, 0x63, 0x38, 0x17, 0x63, 0x38, 0x17, 
   0x63, 0x38, 0x18, 0x63, 0x37, 0x18, 0x5D, 0x3B, 0x23, 0x5D, 0x3B, 0x23, 0x5D, 0x3B, 0x23, 0x5E, 
   0x3C, 0x24, 0x5E, 0x3C, 0x24, 0x5D, 0x3B, 0x23, 0x5E, 0x3A, 0x22, 0x60, 0x3A, 0x22, 0x60, 0x3A, 
   0x22, 0x60, 0x3A, 0x22, 0x60, 0x3A, 0x22, 0x60, 0x3A, 0x22, 0x60, 0x3A, 0x22, 0x61, 0x3B, 0x23, 
   0x61, 0x3B, 0x23, 0x60, 0x3A, 0x22, 0x5F, 0x39, 0x21, 0x5F, 0x39, 0x21, 0x60, 0x3A, 0x22, 0x60, 
   0x3A, 0x22, 0x60, 0x3A, 0x21, 0x61, 0x3B, 0x22, 0x61, 0x3B, 0x22, 0x60, 0x3A, 0x21, 0x60, 0x3A, 
   0x21, 0x60, 0x3A, 0x21, 0x63, 0x3B, 0x22, 0x64, 0x3C, 0x23, 0x64, 0x3C, 0x23, 0x64, 0x3C, 0x23, 
   0x64, 0x3C, 0x23, 0x63, 0x3B, 0x22, 0x62, 0x3A, 0x21, 0x5E, 0x3B, 0x21, 0x5D, 0x3A, 0x20, 0x5C, 
   0x39, 0x1F, 0x5D, 0x3A, 0x20, 0x5D, 0x3B, 0x21, 0x5E, 0x3B, 0x21, 0x60, 0x3B, 0x20, 0x60, 0x39, 
   0x1C, 0x5F, 0x38, 0x1C, 0x5F, 0x38, 0x1C, 0x5F, 0x38, 0x1C, 0x5E, 0x37, 0x1B, 0x5E, 0x37, 0x1B, 
   0x60, 0x37, 0x1C, 0x5F, 0x36, 0x1B, 0x60, 0x37, 0x1C, 0x60, 0x37, 0x1C, 0x60, 0x37, 0x1C, 0x60, 
   0x37, 0x1C, 0x61, 0x38, 0x1D, 0x61, 0x38, 0x1D, 0x61, 0x38, 0x1D, 0x61, 0x38, 0x1D, 0x60, 0x37, 
   0x1C, 0x60, 0x37, 0x1C, 0x60, 0x37, 0x1C, 0x60, 0x39, 0x1D, 0x60, 0x39, 0x1D, 0x60, 0x39, 0x1D, 
   0x60, 0x39, 0x1D, 0x61, 0x3A, 0x1E, 0x63, 0x3C, 0x20, 0x62, 0x3B, 0x20, 0x62, 0x3A, 0x21, 0x63, 
   0x3B, 0x22, 0x63, 0x3B, 0x22, 0x63, 0x3B, 0x22, 0x63, 0x3B, 0x22, 0x63, 0x3B, 0x22, 0x63, 0x3B, 
   0x22, 0x63, 0x3B, 0x22, 0x63, 0x3B, 0x22, 0x64, 0x3C, 0x23, 0x67, 0x3F, 0x26, 0x65, 0x3D, 0x25, 
   0x63, 0x3B, 0x20, 0x64, 0x3B, 0x1F, 0x63, 0x3A, 0x20, 0x63, 0x3C, 0x22, 0x60, 0x3A, 0x22, 0x5E, 
   0x38, 0x20, 0x5E, 0x39, 0x22, 0x69, 0x44, 0x2E, 0x6F, 0x4A, 0x34, 0x67, 0x42, 0x2C, 0x63, 0x3E, 
   0x28, 0x64, 0x3F, 0x29, 0x67, 0x42, 0x2C, 0x68, 0x44, 0x2D, 0x68, 0x46, 0x2E, 0x6A, 0x48, 0x30, 
   0x64, 0x42, 0x2A, 0x63, 0x41, 0x29, 0x64, 0x42, 0x2A, 0x65, 0x44, 0x2C, 0x67, 0x47, 0x30, 0x62, 
   0x43, 0x2B, 0x5D, 0x3D, 0x25, 0x5F, 0x3D, 0x24, 0x60, 0x3F, 0x22, 0x60, 0x3C, 0x20, 0x63, 0x3B, 
   0x20, 0x61, 0x39, 0x1C, 0x60, 0x38, 0x1B, 0x61, 0x39, 0x1C, 0x60, 0x38, 0x1B, 0x5F, 0x37, 0x1A, 
   0x5E, 0x36, 0x19, 0x60, 0x36, 0x19, 0x60, 0x36, 0x19, 0x60, 0x36, 0x19, 0x60, 0x36, 0x19, 0x5F, 
   0x35, 0x18, 0x5F, 0x35, 0x18, 0x5F, 0x36, 0x17, 0x5F, 0x36, 0x16, 0x5F, 0x36, 0x16, 0x5F, 0x36, 
   0x16, 0x5F, 0x36, 0x16, 0x5F, 0x36, 0x16, 0x5F, 0x36, 0x16, 0x5C, 0x34, 0x17, 0x5C, 0x34, 0x17, 
   0x5C, 0x34, 0x17, 0x5D, 0x35, 0x18, 0x5D, 0x35, 0x18, 0x5D, 0x35, 0x18, 0x5E, 0x36, 0x18, 0x5E, 
   0x37, 0x17, 0x5E, 0x37, 0x17, 0x5E, 0x37, 0x17, 0x5D, 0x36, 0x16, 0x5D, 0x36, 0x16, 0x5D, 0x36, 
   0x16, 0x5F, 0x36, 0x16, 0x5F, 0x36, 0x16, 0x5F, 0x36, 0x16, 0x5F, 0x36, 0x16, 0x5E, 0x35, 0x15, 
   0x5E, 0x35, 0x15, 0x5E, 0x35, 0x15, 0x5E, 0x35, 0x15, 0x5E, 0x35, 0x15, 0x5E, 0x35, 0x15, 0x5F, 
   0x36, 0x16, 0x5F, 0x36, 0x16, 0x5F, 0x36, 0x16, 0x5F, 0x36, 0x16, 0x5F, 0x36, 0x16, 0x5F, 0x36, 
   0x16, 0x5F, 0x36, 0x16, 0x5F, 0x36, 0x16, 0x5F, 0x36, 0x16, 0x5F, 0x36, 0x16, 0x5F, 0x36, 0x16, 
   0x5F, 0x36, 0x16, 0x5F, 0x36, 0x16, 0x5F, 0x36, 0x16, 0x5F, 0x36, 0x16, 0x5F, 0x36, 0x16, 0x5F, 
   0x36, 0x16, 0x5F, 0x36, 0x16, 0x5F, 0x36, 0x16, 0x5F, 0x36, 0x16, 0x5F, 0x36, 0x16, 0x5F, 0x36, 
   0x16, 0x5F, 0x36, 0x16, 0x5F, 0x36, 0x16, 0x5F, 0x36, 0x16, 0x5F, 0x36, 0x16, 0x5F, 0x36, 0x16, 
   0x5F, 0x36, 0x16, 0x5F, 0x36, 0x16, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 
   0x37, 0x17, 0x5F, 0x36, 0x16, 0x5F, 0x36, 0x16, 0x5F, 0x36, 0x16, 0x60, 0x37, 0x17, 0x60, 0x37, 
   0x17, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 
   0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 
   0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x61, 0x38, 0x18, 0x61, 0x38, 
   0x18, 0x61, 0x38, 0x18, 0x61, 0x38, 0x18, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 
   0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 
   0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x61, 0x38, 0x18, 0x61, 0x38, 
   0x18, 0x61, 0x38, 0x18, 0x61, 0x38, 0x18, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 
   0x62, 0x36, 0x17, 0x62, 0x36, 0x17, 0x62, 0x36, 0x17, 0x63, 0x37, 0x18, 0x63, 0x37, 0x18, 0x63, 
   0x37, 0x18, 0x63, 0x37, 0x18, 0x62, 0x36, 0x17, 0x62, 0x36, 0x17, 0x63, 0x37, 0x18, 0x63, 0x37, 
   0x18, 0x63, 0x37, 0x18, 0x63, 0x37, 0x18, 0x62, 0x36, 0x17, 0x62, 0x36, 0x17, 0x62, 0x36, 0x17, 
   0x63, 0x37, 0x18, 0x63, 0x37, 0x18, 0x63, 0x37, 0x18, 0x63, 0x37, 0x17, 0x62, 0x37, 0x16, 0x62, 
   0x37, 0x16, 0x62, 0x37, 0x16, 0x62, 0x37, 0x16, 0x62, 0x37, 0x16, 0x62, 0x37, 0x16, 0x62, 0x37, 
   0x16, 0x62, 0x37, 0x16, 0x62, 0x37, 0x16, 0x62, 0x37, 0x16, 0x62, 0x37, 0x16, 0x62, 0x37, 0x16, 
   0x62, 0x37, 0x17, 0x62, 0x36, 0x17, 0x5D, 0x3B, 0x23, 0x5D, 0x3B, 0x23, 0x5D, 0x3B, 0x23, 0x5E, 
   0x3C, 0x24, 0x5E, 0x3C, 0x24, 0x5C, 0x3A, 0x22, 0x5D, 0x3A, 0x22, 0x60, 0x3A, 0x22, 0x60, 0x3A, 
   0x22, 0x60, 0x3A, 0x22, 0x60, 0x3A, 0x22, 0x60, 0x3A, 0x22, 0x60, 0x3A, 0x22, 0x61, 0x3B, 0x23, 
   0x61, 0x3B, 0x23, 0x60, 0x3A, 0x22, 0x5E, 0x38, 0x20, 0x5E, 0x38, 0x20, 0x60, 0x3A, 0x22, 0x60, 
   0x3A, 0x21, 0x5F, 0x39, 0x20, 0x60, 0x3A, 0x21, 0x61, 0x3B, 0x22, 0x60, 0x3A, 0x21, 0x60, 0x3A, 
   0x21, 0x60, 0x3A, 0x21, 0x63, 0x3B, 0x22, 0x64, 0x3C, 0x23, 0x64, 0x3C, 0x23, 0x64, 0x3C, 0x23, 
   0x64, 0x3C, 0x23, 0x63, 0x3B, 0x22, 0x62, 0x3A, 0x21, 0x5E, 0x3B, 0x21, 0x5D, 0x3A, 0x20, 0x5C, 
   0x39, 0x1F, 0x5D, 0x3A, 0x20, 0x5E, 0x3B, 0x21, 0x5F, 0x3C, 0x22, 0x60, 0x3B, 0x20, 0x60, 0x39, 
   0x1C, 0x5F, 0x38, 0x1C, 0x5F, 0x38, 0x1C, 0x5F, 0x38, 0x1C, 0x5D, 0x37, 0x1B, 0x5D, 0x36, 0x1A, 
   0x60, 0x37, 0x1C, 0x5F, 0x36, 0x1B, 0x60, 0x37, 0x1C, 0x60, 0x37, 0x1C, 0x60, 0x37, 0x1C, 0x60, 
   0x37, 0x1C, 0x61, 0x38, 0x1D, 0x61, 0x38, 0x1D, 0x61, 0x38, 0x1D, 0x61, 0x38, 0x1D, 0x60, 0x37, 
   0x1C, 0x60, 0x37, 0x1C, 0x60, 0x37, 0x1C, 0x60, 0x39, 0x1D, 0x60, 0x39, 0x1D, 0x60, 0x39, 0x1D, 
   0x5F, 0x38, 0x1C, 0x60, 0x39, 0x1D, 0x63, 0x3C, 0x20, 0x62, 0x3B, 0x20, 0x61, 0x39, 0x20, 0x63, 
   0x3B, 0x22, 0x63, 0x3B, 0x22, 0x63, 0x3B, 0x22, 0x63, 0x3B, 0x22, 0x63, 0x3B, 0x22, 0x63, 0x3B, 
   0x22, 0x63, 0x3B, 0x22, 0x63, 0x3B, 0x22, 0x62, 0x3A, 0x21, 0x64, 0x3C, 0x23, 0x63, 0x3B, 0x22, 
   0x63, 0x3A, 0x1F, 0x64, 0x3B, 0x1E, 0x62, 0x39, 0x1E, 0x62, 0x3A, 0x21, 0x5E, 0x37, 0x1F, 0x5B, 
   0x35, 0x1D, 0x5F, 0x39, 0x21, 0x65, 0x40, 0x2A, 0x6C, 0x47, 0x31, 0x66, 0x41, 0x2B, 0x62, 0x3D, 
   0x27, 0x63, 0x3E, 0x28, 0x65, 0x40, 0x2A, 0x66, 0x42, 0x2B, 0x66, 0x44, 0x2C, 0x69, 0x47, 0x2F, 
   0x65, 0x43, 0x2B, 0x60, 0x3E, 0x26, 0x64, 0x42, 0x2A, 0x66, 0x45, 0x2D, 0x65, 0x46, 0x2F, 0x5F, 
   0x40, 0x28, 0x5D, 0x3C, 0x24, 0x5F, 0x3D, 0x24, 0x5F, 0x3D, 0x20, 0x5D, 0x3A, 0x1E, 0x64, 0x3E, 
   0x21, 0x64, 0x3B, 0x1E, 0x60, 0x38, 0x1B, 0x60, 0x38, 0x1B, 0x60, 0x38, 0x1B, 0x5F, 0x37, 0x1A, 
   0x5E, 0x36, 0x19, 0x60, 0x36, 0x19, 0x60, 0x36, 0x19, 0x60, 0x36, 0x19, 0x60, 0x36, 0x19, 0x5F, 
   0x35, 0x18, 0x5F, 0x35, 0x18, 0x5F, 0x36, 0x17, 0x5F, 0x36, 0x16, 0x5F, 0x36, 0x16, 0x5F, 0x36, 
   0x16, 0x5F, 0x36, 0x16, 0x5F, 0x36, 0x16, 0x5F, 0x36, 0x16, 0x5C, 0x34, 0x17, 0x5C, 0x34, 0x17, 
   0x5C, 0x34, 0x17, 0x5D, 0x35, 0x18, 0x5D, 0x35, 0x18, 0x5D, 0x35, 0x18, 0x5E, 0x36, 0x18, 0x5E, 
   0x37, 0x17, 0x5E, 0x37, 0x17, 0x5E, 0x37, 0x17, 0x5D, 0x36, 0x16, 0x5D, 0x36, 0x16, 0x5D, 0x36, 
   0x16, 0x5F, 0x36, 0x16, 0x5F, 0x36, 0x16, 0x5F, 0x36, 0x16, 0x5F, 0x36, 0x16, 0x5E, 0x35, 0x15, 
   0x5E, 0x35, 0x15, 0x5E, 0x35, 0x15, 0x5E, 0x35, 0x15, 0x5E, 0x35, 0x15, 0x5E, 0x35, 0x15, 0x5F, 
   0x36, 0x16, 0x5F, 0x36, 0x16, 0x5F, 0x36, 0x16, 0x5F, 0x36, 0x16, 0x5F, 0x36, 0x16, 0x5F, 0x36, 
   0x16, 0x5F, 0x36, 0x16, 0x5F, 0x36, 0x16, 0x5F, 0x36, 0x16, 0x5F, 0x36, 0x16, 0x5F, 0x36, 0x16, 
   0x5F, 0x36, 0x16, 0x5F, 0x36, 0x16, 0x5F, 0x36, 0x16, 0x5F, 0x36, 0x16, 0x5F, 0x36, 0x16, 0x5F, 
   0x36, 0x16, 0x5F, 0x36, 0x16, 0x5F, 0x36, 0x16, 0x5F, 0x36, 0x16, 0x5F, 0x36, 0x16, 0x5F, 0x36, 
   0x16, 0x5F, 0x36, 0x16, 0x5F, 0x36, 0x16, 0x5F, 0x36, 0x16, 0x5F, 0x36, 0x16, 0x5F, 0x36, 0x16, 
   0x5F, 0x36, 0x16, 0x5F, 0x36, 0x16, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 
   0x37, 0x17, 0x5F, 0x36, 0x16, 0x5F, 0x36, 0x16, 0x5F, 0x36, 0x16, 0x60, 0x37, 0x17, 0x60, 0x37, 
   0x17, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 
   0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 
   0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x61, 0x38, 0x18, 0x61, 0x38, 
   0x18, 0x61, 0x38, 0x18, 0x61, 0x38, 0x18, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 
   0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 
   0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x61, 0x38, 0x18, 0x61, 0x38, 
   0x18, 0x61, 0x38, 0x18, 0x61, 0x38, 0x18, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 0x60, 0x37, 0x17, 
   0x62, 0x36, 0x17, 0x62, 0x36, 0x17, 0x62, 0x36, 0x17, 0x63, 0x37, 0x18, 0x63, 0x37, 0x18, 0x63, 
   0x37, 0x18, 0x63, 0x37, 0x18, 0x62, 0x36, 0x17, 0x62, 0x36, 0x17, 0x63, 0x37, 0x18, 0x63, 0x37, 
   0x18, 0x63, 0x37, 0x18, 0x63, 0x37, 0x18, 0x62, 0x36, 0x17, 0x62, 0x36, 0x17, 0x62, 0x36, 0x17, 
   0x63, 0x37, 0x18, 0x63, 0x37, 0x18, 0x63, 0x37, 0x18, 0x63, 0x37, 0x17, 0x62, 0x37, 0x16, 0x62, 
   0x37, 0x16, 0x62, 0x37, 0x16, 0x62, 0x37, 0x16, 0x62, 0x37, 0x16, 0x62, 0x37, 0x16, 0x62, 0x37, 
   0x16, 0x62, 0x37, 0x16, 0x62, 0x37, 0x16, 0x62, 0x37, 0x16, 0x62, 0x37, 0x16, 0x62, 0x37, 0x16, 
   0x62, 0x37, 0x17, 0x62, 0x36, 0x17, 0x00, 0x00, 
};

static RESOURCEDATA g_rd_backgrnd(TEXT(MODULE_STRING), TEXT("backgrnd.bmp"), g_backgrnd, sizeof(g_backgrnd));

extern "C" LPVOID PREPEND_MODULE(_backgrnd) = (LPVOID)&g_rd_backgrnd;
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\test\directx\d3d\func\alphabnt\media\texture.bmp.cpp ===
/*******************************************************************************

Copyright (c) 2000 Microsoft Corporation.  All rights reserved.

File Name:

    texture.bmp.cpp

Description

    Data file for the resource texture.bmp.

*******************************************************************************/

#include "d3dlocus.h"

static BYTE g_texture[] = {

   0x42, 0x4D, 0x38, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x00, 0x28, 0x00, 
   0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x01, 0x00, 0x18, 0x00, 0x00, 0x00, 
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x12, 0x0B, 0x00, 0x00, 0x12, 0x0B, 0x00, 0x00, 0x00, 0x00, 
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF1, 0xF3, 0xFC, 0xE6, 
   0xE9, 0xFA, 0xDB, 0xE0, 0xF7, 0xCC, 0xD4, 0xF5, 0xBA, 0xC3, 0xF1, 0xBB, 0xC5, 0xF2, 0xBB, 0xC5, 
   0xF2, 0xBB, 0xC5, 0xF2, 0xBB, 0xC4, 0xF2, 0xBC, 0xC5, 0xF2, 0xCF, 0xD6, 0xF5, 0xD9, 0xDE, 0xF7, 
   0xE3, 0xE7, 0xF9, 0xEA, 0xED, 0xFB, 0xF3, 0xF5, 0xFD, 0xFD, 0xFD, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xEF, 0xF1, 0xFC, 
   0xD6, 0xDC, 0xF7, 0xA7, 0xB3, 0xEE, 0x80, 0x91, 0xE6, 0x5D, 0x74, 0xDF, 0x3B, 0x57, 0xD9, 0x21, 
   0x40, 0xD2, 0x19, 0x39, 0xD1, 0x14, 0x36, 0xD1, 0x0F, 0x31, 0xCF, 0x0F, 0x31, 0xCF, 0x0F, 0x31, 
   0xCF, 0x0F, 0x31, 0xCF, 0x0F, 0x31, 0xCF, 0x0F, 0x32, 0xCF, 0x15, 0x37, 0xD0, 0x18, 0x39, 0xD1, 
   0x1D, 0x3C, 0xD2, 0x2B, 0x4A, 0xD5, 0x40, 0x5B, 0xD9, 0x54, 0x6D, 0xDD, 0x70, 0x84, 0xE3, 0xA7, 
   0xB2, 0xED, 0xDD, 0xE2, 0xF8, 0xFE, 0xFE, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xF6, 0xF7, 0xFD, 0xD3, 0xD9, 0xF6, 0x99, 0xA7, 0xEB, 0x65, 0x7A, 0xE0, 0x31, 0x4E, 0xD7, 
   0x16, 0x36, 0xD1, 0x08, 0x2B, 0xCE, 0x00, 0x24, 0xCC, 0x02, 0x27, 0xCD, 0x08, 0x2B, 0xCE, 0x0B, 
   0x2E, 0xCF, 0x0D, 0x2F, 0xCF, 0x0E, 0x30, 0xCF, 0x0F, 0x32, 0xCF, 0x0F, 0x31, 0xCF, 0x0F, 0x31, 
   0xCF, 0x0F, 0x31, 0xCF, 0x0F, 0x31, 0xCF, 0x0F, 0x31, 0xCF, 0x0D, 0x30, 0xCF, 0x0D, 0x2F, 0xCF, 
   0x0C, 0x2F, 0xCF, 0x09, 0x2D, 0xCE, 0x07, 0x2B, 0xCE, 0x04, 0x28, 0xCD, 0x00, 0x24, 0xCC, 0x07, 
   0x2B, 0xCD, 0x1C, 0x3B, 0xD1, 0x4F, 0x67, 0xDC, 0x94, 0xA2, 0xE9, 0xDA, 0xDF, 0xF7, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF3, 0xF5, 0xFD, 0xBE, 0xC7, 0xF3, 0x7C, 0x8E, 
   0xE5, 0x41, 0x5B, 0xD9, 0x16, 0x38, 0xD1, 0x05, 0x29, 0xCE, 0x01, 0x25, 0xCC, 0x08, 0x2C, 0xCE, 
   0x0D, 0x30, 0xCF, 0x11, 0x33, 0xD0, 0x13, 0x35, 0xD0, 0x13, 0x35, 0xD0, 0x13, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x13, 0x34, 0xD0, 0x13, 0x35, 0xD0, 0x13, 0x35, 0xD0, 0x11, 
   0x33, 0xD0, 0x0C, 0x2F, 0xCF, 0x03, 0x27, 0xCD, 0x03, 0x27, 0xCD, 0x1B, 0x3D, 0xD2, 0x5B, 0x72, 
   0xDE, 0xB2, 0xBD, 0xF0, 0xF9, 0xF9, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 
   0xFE, 0xFF, 0xC3, 0xCC, 0xF4, 0x75, 0x89, 0xE3, 0x38, 0x53, 0xD7, 0x11, 0x33, 0xD0, 0x03, 0x27, 
   0xCD, 0x08, 0x2B, 0xCE, 0x0E, 0x30, 0xCF, 0x11, 0x34, 0xD0, 0x13, 0x35, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x13, 0x35, 0xD0, 0x11, 0x34, 0xD0, 0x0D, 0x30, 0xCF, 0x04, 0x28, 
   0xCD, 0x0B, 0x2E, 0xCF, 0x41, 0x5C, 0xDA, 0xA1, 0xAE, 0xED, 0xF1, 0xF3, 0xFC, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF8, 0xF9, 0xFE, 0xB3, 0xBE, 0xF0, 0x50, 
   0x69, 0xDC, 0x11, 0x33, 0xD0, 0x02, 0x27, 0xCD, 0x0A, 0x2D, 0xCE, 0x0F, 0x32, 0xCF, 0x12, 0x34, 
   0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x10, 0x32, 0xD0, 0x07, 0x2B, 0xCE, 0x07, 0x2A, 0xCE, 0x38, 0x54, 0xD7, 0x9C, 0xAA, 0xEC, 
   0xF2, 0xF5, 0xFD, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xF7, 0xF8, 0xFD, 0xA7, 0xB4, 0xEE, 0x41, 0x5C, 0xDA, 0x08, 0x2B, 0xCE, 0x03, 
   0x28, 0xCD, 0x0E, 0x31, 0xCF, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x12, 0x34, 0xD0, 0x13, 0x34, 0xD0, 0x11, 0x33, 0xD0, 0x07, 0x2B, 0xCE, 0x03, 0x26, 0xCD, 
   0x39, 0x54, 0xD8, 0xAE, 0xB9, 0xEF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xB3, 0xBF, 0xF0, 0x3D, 0x58, 0xD8, 0x04, 0x28, 0xCD, 0x04, 0x28, 0xCE, 0x10, 0x32, 0xCF, 0x13, 
   0x35, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x13, 0x35, 0xD0, 0x11, 0x33, 0xD0, 
   0x05, 0x29, 0xCD, 0x08, 0x2A, 0xCE, 0x5A, 0x71, 0xDF, 0xD2, 0xD8, 0xF6, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xEB, 0xEE, 0xFB, 0x70, 0x84, 0xE2, 
   0x0B, 0x2E, 0xCF, 0x04, 0x28, 0xCD, 0x11, 0x33, 0xD0, 0x13, 0x35, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x13, 0x35, 0xD0, 0x12, 0x34, 0xD0, 0x11, 0x33, 0xD0, 0x0E, 0x31, 0xCF, 0x0D, 
   0x2F, 0xCF, 0x0B, 0x2E, 0xCF, 0x0A, 0x2D, 0xCE, 0x08, 0x2B, 0xCE, 0x08, 0x2C, 0xCE, 0x06, 0x2A, 
   0xCE, 0x05, 0x29, 0xCE, 0x08, 0x2B, 0xCE, 0x08, 0x2B, 0xCE, 0x09, 0x2D, 0xCE, 0x0B, 0x2E, 0xCF, 
   0x0D, 0x30, 0xCF, 0x10, 0x32, 0xD0, 0x12, 0x34, 0xD0, 0x13, 0x35, 0xD0, 0x13, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x13, 0x35, 0xD0, 0x10, 0x32, 0xCF, 0x02, 0x26, 0xCD, 0x1C, 0x3C, 0xD2, 0x93, 0xA3, 0xEA, 0xFA, 
   0xFB, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xCB, 0xD3, 0xF5, 0x39, 0x56, 0xD8, 0x03, 0x27, 0xCC, 
   0x0F, 0x32, 0xCF, 0x13, 0x35, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x13, 0x35, 0xD0, 0x11, 0x33, 0xD0, 0x0D, 0x30, 0xCF, 
   0x05, 0x29, 0xCE, 0x01, 0x25, 0xCC, 0x02, 0x25, 0xCC, 0x09, 0x2C, 0xCE, 0x10, 0x33, 0xD0, 0x17, 
   0x38, 0xD1, 0x1E, 0x3B, 0xD2, 0x2A, 0x48, 0xD5, 0x39, 0x56, 0xD8, 0x36, 0x53, 0xD7, 0x48, 0x63, 
   0xDA, 0x54, 0x6D, 0xDD, 0x3C, 0x58, 0xD8, 0x38, 0x55, 0xD7, 0x2C, 0x4A, 0xD5, 0x1E, 0x3C, 0xD2, 
   0x15, 0x36, 0xD1, 0x0B, 0x2E, 0xCF, 0x02, 0x26, 0xCD, 0x00, 0x25, 0xCC, 0x08, 0x2B, 0xCE, 0x0E, 
   0x31, 0xCF, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x35, 0xD0, 0x0C, 0x2E, 0xCF, 0x04, 0x29, 0xCD, 0x4D, 
   0x67, 0xDC, 0xD1, 0xD7, 0xF6, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xA3, 0xB0, 0xED, 0x18, 0x39, 0xD1, 0x05, 0x29, 0xCD, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x10, 0x32, 0xD0, 0x0C, 0x2E, 0xCF, 0x03, 0x27, 0xCD, 0x06, 0x2A, 0xCD, 0x19, 0x39, 0xD1, 
   0x44, 0x5E, 0xDA, 0x6B, 0x7F, 0xE1, 0x88, 0x97, 0xE7, 0xA7, 0xB3, 0xED, 0xC5, 0xCD, 0xF4, 0xD7, 
   0xDD, 0xF7, 0xE5, 0xE8, 0xFA, 0xEB, 0xEE, 0xFB, 0xF2, 0xF4, 0xFC, 0xF0, 0xF3, 0xFC, 0xF8, 0xF9, 
   0xFD, 0xFD, 0xFD, 0xFE, 0xF3, 0xF5, 0xFD, 0xF1, 0xF3, 0xFC, 0xED, 0xEF, 0xFB, 0xE4, 0xE7, 0xF9, 
   0xD2, 0xD9, 0xF6, 0xB1, 0xBD, 0xEF, 0x8C, 0x9C, 0xE8, 0x69, 0x7E, 0xE1, 0x35, 0x52, 0xD7, 0x11, 
   0x33, 0xD0, 0x02, 0x27, 0xCD, 0x09, 0x2C, 0xCE, 0x11, 0x33, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x11, 0x33, 0xD0, 0x04, 
   0x28, 0xCD, 0x18, 0x39, 0xD1, 0x91, 0xA0, 0xE9, 0xFC, 0xFD, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFB, 0xFC, 
   0xFF, 0x81, 0x93, 0xE6, 0x09, 0x2C, 0xCE, 0x09, 0x2D, 0xCE, 0x13, 0x35, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x11, 0x33, 0xD0, 0x0C, 0x2F, 0xCF, 0x04, 0x28, 
   0xCD, 0x0B, 0x2D, 0xCE, 0x26, 0x45, 0xD4, 0x60, 0x76, 0xDF, 0x9F, 0xAC, 0xEC, 0xDA, 0xDF, 0xF7, 
   0xF8, 0xF9, 0xFD, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF1, 0xF3, 0xFC, 0xCA, 
   0xD1, 0xF5, 0x84, 0x95, 0xE7, 0x36, 0x53, 0xD7, 0x08, 0x2B, 0xCE, 0x06, 0x2A, 0xCE, 0x10, 0x32, 
   0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x13, 
   0x34, 0xD0, 0x0B, 0x2E, 0xCE, 0x02, 0x26, 0xCD, 0x56, 0x6F, 0xDE, 0xE6, 0xE9, 0xFA, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF3, 0xF6, 0xFD, 0x66, 0x7C, 
   0xE1, 0x02, 0x26, 0xCD, 0x0D, 0x30, 0xCF, 0x13, 0x35, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x13, 
   0x35, 0xD0, 0x11, 0x33, 0xD0, 0x07, 0x2A, 0xCE, 0x06, 0x2A, 0xCE, 0x24, 0x43, 0xD4, 0x65, 0x7B, 
   0xE0, 0xAA, 0xB7, 0xEE, 0xE6, 0xE9, 0xFA, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xEE, 0xF1, 0xFC, 0xA5, 0xB2, 0xED, 0x46, 0x62, 0xDA, 0x0C, 0x2F, 
   0xCF, 0x04, 0x28, 0xCD, 0x0F, 0x31, 0xCF, 0x13, 0x35, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x13, 0x35, 0xD0, 0x10, 0x33, 0xD0, 0x00, 0x24, 0xCC, 0x39, 0x56, 0xD7, 0xDC, 0xE1, 
   0xF8, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF1, 0xF3, 0xFC, 0x5D, 0x74, 0xDF, 0x02, 0x26, 
   0xCD, 0x10, 0x33, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x13, 0x35, 0xD0, 0x11, 0x33, 0xD0, 0x05, 
   0x29, 0xCD, 0x04, 0x29, 0xCD, 0x3C, 0x58, 0xD8, 0x97, 0xA6, 0xEB, 0xE2, 0xE6, 0xF9, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFB, 0xFC, 0xFE, 0xB6, 0xC1, 
   0xF1, 0x53, 0x6C, 0xDD, 0x0F, 0x31, 0xCF, 0x02, 0x26, 0xCD, 0x0E, 0x31, 0xCF, 0x13, 0x35, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x04, 0x28, 0xCE, 0x2F, 0x4D, 
   0xD6, 0xD1, 0xD8, 0xF6, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF6, 0xF7, 0xFD, 0x5D, 0x74, 0xDF, 0x00, 0x24, 0xCC, 0x11, 0x33, 
   0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x35, 0xD0, 0x09, 0x2D, 0xCE, 0x02, 0x27, 0xCD, 0x3B, 
   0x57, 0xD8, 0xA2, 0xB0, 0xEC, 0xF5, 0xF6, 0xFD, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xC3, 0xCC, 0xF3, 0x5C, 0x74, 0xDF, 0x0E, 0x30, 0xCF, 0x05, 0x29, 0xCD, 
   0x11, 0x33, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x05, 0x2A, 
   0xCD, 0x24, 0x44, 0xD4, 0xC7, 0xCF, 0xF4, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xF5, 0xF7, 0xFD, 0x5B, 0x72, 0xDF, 0x01, 0x25, 0xCD, 0x11, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x10, 0x32, 0xD0, 0x03, 0x28, 0xCD, 0x24, 0x44, 0xD4, 0x97, 0xA6, 0xEB, 0xF4, 
   0xF5, 0xFD, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xC1, 0xCA, 0xF3, 0x45, 0x5F, 0xDA, 
   0x04, 0x28, 0xCD, 0x0D, 0x2F, 0xCF, 0x13, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x13, 0x35, 
   0xD0, 0x07, 0x2A, 0xCE, 0x1E, 0x3E, 0xD2, 0xC8, 0xD0, 0xF4, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0x6D, 0x82, 0xE2, 0x00, 0x24, 0xCC, 0x11, 0x33, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x13, 0x35, 0xD0, 
   0x0B, 0x2E, 0xCF, 0x0A, 0x2E, 0xCE, 0x66, 0x7C, 0xE1, 0xDD, 0xE2, 0xF8, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF5, 0xF6, 0xFD, 
   0x89, 0x9A, 0xE8, 0x17, 0x38, 0xD1, 0x06, 0x2A, 0xCE, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x13, 0x34, 0xD0, 0x05, 0x28, 0xCD, 0x27, 0x46, 0xD4, 0xDA, 0xDF, 0xF7, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x9A, 
   0xA8, 0xEB, 0x07, 0x2B, 0xCE, 0x10, 0x32, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x13, 0x35, 0xD0, 0x05, 0x29, 0xCD, 
   0x19, 0x3A, 0xD1, 0xA2, 0xAF, 0xEC, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xC8, 0xD0, 0xF4, 0x36, 0x53, 0xD7, 0x00, 0x24, 0xCC, 0x0F, 0x31, 0xCF, 0x13, 
   0x35, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x12, 0x34, 0xD0, 0x13, 0x35, 0xD0, 0x03, 0x28, 0xCD, 0x3C, 0x58, 0xD8, 0xED, 0xF0, 0xFB, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xB4, 0xBF, 0xF0, 0x0E, 
   0x30, 0xCF, 0x0D, 0x30, 0xCF, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x33, 0xD0, 0x01, 0x25, 0xCD, 0x34, 0x51, 0xD7, 
   0xCD, 0xD4, 0xF5, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xE8, 0xEC, 0xFA, 0x66, 0x7C, 0xE0, 0x07, 0x2A, 0xCE, 0x09, 
   0x2C, 0xCE, 0x13, 0x35, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x02, 0x26, 0xCD, 0x67, 0x7D, 0xE1, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xD5, 0xDB, 0xF7, 0x1F, 0x3E, 0xD3, 0x08, 
   0x2B, 0xCE, 0x13, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x12, 0x34, 0xD0, 0x11, 0x34, 0xD0, 0x03, 0x27, 0xCD, 0x4B, 0x65, 0xDB, 0xE6, 0xE9, 0xFA, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xAA, 0xB5, 0xEE, 0x21, 
   0x41, 0xD3, 0x06, 0x2A, 0xCE, 0x13, 0x35, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x10, 0x32, 0xCF, 0x05, 0x29, 0xCD, 
   0x99, 0xA7, 0xEB, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF3, 0xF5, 0xFD, 0x40, 0x5C, 0xD9, 0x03, 0x27, 0xCD, 0x13, 
   0x35, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x12, 0x34, 0xD0, 0x03, 0x27, 0xCD, 0x54, 0x6C, 0xDC, 0xF0, 0xF3, 0xFC, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xD2, 
   0xD9, 0xF6, 0x2D, 0x4A, 0xD6, 0x05, 0x29, 0xCE, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x0B, 0x2F, 0xCF, 
   0x17, 0x39, 0xD2, 0xD2, 0xD8, 0xF6, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7D, 0x90, 0xE5, 0x02, 0x26, 0xCD, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x03, 0x27, 0xCD, 0x4C, 0x65, 0xDB, 0xEC, 0xEF, 0xFB, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xF7, 0xF8, 0xFD, 0xE4, 0xE7, 0xFA, 0xC2, 0xCB, 0xF3, 0xA7, 0xB4, 0xEE, 0x91, 
   0xA0, 0xE9, 0x87, 0x98, 0xE7, 0x74, 0x87, 0xE3, 0x6E, 0x82, 0xE2, 0x7E, 0x90, 0xE6, 0x90, 0xA0, 
   0xEA, 0xB4, 0xBF, 0xF0, 0xD8, 0xDE, 0xF7, 0xED, 0xF0, 0xFC, 0xF9, 0xF9, 0xFE, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xD6, 0xDB, 0xF7, 0x2E, 0x4C, 0xD6, 0x07, 0x2B, 0xCE, 0x13, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x03, 0x28, 0xCD, 0x52, 0x6B, 0xDD, 0xFA, 0xFB, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xCC, 0xD3, 0xF5, 0x11, 0x33, 0xD0, 0x0E, 0x31, 0xCF, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x13, 0x34, 0xD0, 0x06, 0x2A, 
   0xCE, 0x2D, 0x4A, 0xD5, 0xE4, 0xE7, 0xFA, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xE3, 0xE7, 0xF9, 0xA6, 0xB2, 0xED, 
   0x70, 0x84, 0xE3, 0x40, 0x5C, 0xD9, 0x20, 0x40, 0xD3, 0x14, 0x36, 0xD0, 0x0C, 0x2F, 0xCF, 0x04, 
   0x28, 0xCD, 0x02, 0x26, 0xCD, 0x04, 0x28, 0xCD, 0x05, 0x29, 0xCD, 0x02, 0x27, 0xCD, 0x03, 0x28, 
   0xCD, 0x10, 0x33, 0xD0, 0x1B, 0x3B, 0xD2, 0x29, 0x47, 0xD5, 0x47, 0x62, 0xDA, 0x6A, 0x80, 0xE2, 
   0x97, 0xA6, 0xEA, 0xDA, 0xDF, 0xF8, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xD6, 0xDC, 0xF7, 0x24, 0x44, 0xD4, 0x09, 0x2C, 0xCE, 0x12, 0x34, 
   0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x10, 0x33, 0xCF, 0x05, 0x29, 0xCD, 0xA3, 0xB0, 0xED, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0x5B, 0x73, 0xDE, 0x04, 0x28, 0xCD, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x0B, 0x2E, 0xCF, 0x17, 0x38, 
   0xD1, 0xC9, 0xD1, 0xF5, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xCA, 0xD1, 0xF4, 0x6C, 0x81, 0xE2, 0x21, 0x41, 0xD3, 0x08, 0x2C, 0xCE, 
   0x02, 0x26, 0xCD, 0x09, 0x2C, 0xCE, 0x0D, 0x30, 0xCF, 0x0F, 0x31, 0xCF, 0x10, 0x32, 0xD0, 0x11, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x10, 0x32, 0xD0, 0x0E, 0x30, 0xCF, 0x0C, 0x2E, 0xCF, 0x08, 0x2C, 0xCE, 0x02, 0x27, 0xCD, 
   0x05, 0x29, 0xCD, 0x1C, 0x3D, 0xD2, 0x59, 0x71, 0xDE, 0xA7, 0xB3, 0xED, 0xEA, 0xEC, 0xFB, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xAF, 0xBB, 0xEF, 0x0A, 0x2E, 0xCE, 0x0F, 0x32, 
   0xCF, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x07, 0x2B, 0xCE, 0x32, 0x4F, 0xD6, 0xF1, 0xF3, 0xFC, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xC1, 0xC9, 0xF2, 0x0D, 0x2F, 0xCF, 0x0F, 0x31, 0xCF, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x10, 0x33, 0xD0, 0x08, 0x2C, 0xCE, 0x9D, 0xAB, 
   0xEC, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xD6, 0xDC, 
   0xF7, 0x5F, 0x75, 0xDF, 0x10, 0x32, 0xCF, 0x01, 0x25, 0xCD, 0x0B, 0x2E, 0xCF, 0x11, 0x33, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x13, 0x34, 0xD0, 
   0x11, 0x33, 0xD0, 0x0C, 0x2F, 0xCF, 0x03, 0x26, 0xCD, 0x05, 0x28, 0xCD, 0x2A, 0x47, 0xD5, 0x84, 
   0x95, 0xE7, 0xE1, 0xE5, 0xF9, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x6D, 0x81, 0xE2, 0x02, 0x26, 
   0xCD, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x02, 0x26, 0xCD, 0x90, 0x9F, 0xE9, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0xFE, 0xFF, 
   0x51, 0x6A, 0xDD, 0x03, 0x28, 0xCD, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x04, 0x28, 0xCD, 0x5A, 0x72, 0xDE, 0xFE, 0xFE, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFC, 0xFD, 0xFE, 0x92, 0xA2, 0xE9, 0x1C, 0x3C, 
   0xD2, 0x00, 0x24, 0xCD, 0x0E, 0x30, 0xCF, 0x13, 0x35, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x13, 0x35, 0xD0, 0x11, 0x33, 0xD0, 0x08, 0x2C, 0xCE, 0x01, 
   0x25, 0xCD, 0x23, 0x43, 0xD3, 0x85, 0x96, 0xE7, 0xEA, 0xED, 0xFB, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xE7, 0xEB, 0xFA, 0x2B, 0x49, 
   0xD5, 0x08, 0x2C, 0xCE, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x09, 0x2C, 0xCE, 0x30, 0x4D, 0xD6, 0xF1, 0xF3, 0xFC, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xBF, 0xC8, 0xF3, 
   0x0C, 0x2F, 0xCF, 0x0F, 0x32, 0xCF, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x0C, 0x2F, 0xCF, 0x1C, 0x3C, 0xD2, 0xD9, 0xDF, 0xF8, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xE2, 0xE6, 0xF9, 0x58, 0x70, 0xDE, 0x05, 0x29, 0xCE, 0x0B, 0x2E, 
   0xCF, 0x13, 0x35, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x0A, 0x2E, 0xCF, 0x03, 0x27, 0xCD, 0x2E, 0x4E, 0xD5, 0xA7, 0xB5, 0xEE, 0xFE, 0xFE, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xAC, 0xB7, 
   0xEE, 0x07, 0x2B, 0xCE, 0x10, 0x32, 0xCF, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x11, 0x34, 0xD0, 0x07, 0x2A, 0xCE, 0xA6, 0xB3, 0xEE, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFC, 0xFD, 0xFE, 0x52, 0x6B, 0xDD, 
   0x04, 0x27, 0xCD, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x01, 0x26, 0xCD, 0x87, 0x98, 0xE7, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xCA, 0xD2, 0xF5, 0x32, 0x4F, 0xD6, 0x03, 0x28, 0xCD, 0x11, 0x33, 0xD0, 0x12, 0x34, 
   0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x09, 0x2C, 0xCE, 0x09, 0x2C, 0xCE, 0x57, 0x6F, 
   0xDE, 0xD4, 0xDA, 0xF7, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0x60, 0x77, 0xE0, 0x04, 0x28, 0xCD, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x07, 0x2A, 0xCD, 0x4B, 0x65, 0xDC, 0xFC, 
   0xFC, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xC4, 0xCD, 0xF3, 0x0D, 0x2F, 0xCE, 
   0x0F, 0x32, 0xCF, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x09, 0x2C, 0xCE, 0x2E, 0x4C, 0xD6, 0xED, 0xF0, 0xFB, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xB9, 
   0xC3, 0xF1, 0x1A, 0x3A, 0xD2, 0x05, 0x29, 0xCD, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x11, 0x33, 0xD0, 0x0D, 0x30, 0xCF, 0x09, 0x2C, 0xCE, 0x06, 
   0x29, 0xCE, 0x03, 0x27, 0xCD, 0x02, 0x26, 0xCD, 0x02, 0x26, 0xCD, 0x03, 0x28, 0xCD, 0x06, 0x2A, 
   0xCE, 0x09, 0x2C, 0xCE, 0x0D, 0x2F, 0xCF, 0x10, 0x32, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x13, 0x34, 0xD0, 0x10, 0x32, 0xCF, 0x02, 0x26, 
   0xCD, 0x1A, 0x39, 0xD2, 0x98, 0xA6, 0xEA, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xD8, 0xDE, 0xF7, 0x19, 0x3A, 0xD2, 0x0E, 0x31, 0xCF, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x0F, 0x32, 0xCF, 0x11, 0x33, 0xD0, 0xCC, 
   0xD3, 0xF5, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x6F, 0x83, 0xE2, 0x03, 0x27, 0xCD, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x11, 
   0x33, 0xD0, 0x06, 0x29, 0xCD, 0x9A, 0xA9, 0xEB, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xB5, 0xC0, 0xF0, 0x14, 
   0x35, 0xD0, 0x07, 0x2A, 0xCE, 0x13, 0x35, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x13, 0x34, 0xD0, 
   0x10, 0x32, 0xD0, 0x07, 0x2A, 0xCE, 0x08, 0x2C, 0xCE, 0x1E, 0x3E, 0xD2, 0x3D, 0x59, 0xD8, 0x5C, 
   0x73, 0xDE, 0x71, 0x85, 0xE3, 0x77, 0x8A, 0xE5, 0x7A, 0x8E, 0xE5, 0x6F, 0x83, 0xE2, 0x58, 0x6F, 
   0xDE, 0x3E, 0x5A, 0xD9, 0x20, 0x40, 0xD3, 0x0C, 0x2E, 0xCF, 0x03, 0x27, 0xCD, 0x0A, 0x2D, 0xCF, 
   0x10, 0x32, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x13, 0x35, 
   0xD0, 0x0A, 0x2D, 0xCE, 0x02, 0x26, 0xCD, 0x74, 0x87, 0xE4, 0xFB, 0xFB, 0xFE, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0x60, 0x76, 0xDF, 0x05, 0x29, 0xCD, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x03, 0x27, 0xCD, 0x82, 
   0x94, 0xE7, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xEC, 0xEE, 0xFB, 0x2A, 0x48, 0xD5, 0x0B, 0x2E, 0xCF, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x09, 
   0x2C, 0xCE, 0x2E, 0x4C, 0xD6, 0xF0, 0xF2, 0xFC, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xC9, 0xD1, 0xF5, 0x1C, 0x3C, 0xD2, 0x08, 
   0x2B, 0xCE, 0x13, 0x35, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x13, 0x35, 0xD0, 0x0F, 0x32, 0xCF, 0x04, 0x27, 0xCD, 
   0x0D, 0x2F, 0xCF, 0x44, 0x5E, 0xDA, 0x9D, 0xAB, 0xEB, 0xDC, 0xE1, 0xF8, 0xF6, 0xF7, 0xFD, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0xFE, 
   0xFF, 0xF6, 0xF7, 0xFD, 0xDF, 0xE3, 0xF9, 0xAB, 0xB7, 0xEF, 0x75, 0x89, 0xE4, 0x36, 0x54, 0xD8, 
   0x0A, 0x2E, 0xCF, 0x04, 0x28, 0xCD, 0x0F, 0x31, 0xCF, 0x13, 0x35, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x13, 0x35, 0xD0, 0x0F, 0x31, 0xCF, 0x03, 0x26, 0xCD, 0x68, 0x7D, 0xE1, 0xF7, 0xF8, 0xFD, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xB2, 0xBD, 0xF0, 0x0A, 0x2D, 0xCE, 0x11, 0x33, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x08, 0x2C, 0xCE, 0x3F, 
   0x5B, 0xD9, 0xFC, 0xFC, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xA6, 0xB3, 0xED, 0x07, 0x2B, 0xCE, 0x11, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x02, 
   0x26, 0xCD, 0x86, 0x98, 0xE7, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xED, 0xEF, 0xFB, 0x36, 0x52, 0xD7, 0x07, 0x2A, 0xCE, 0x13, 
   0x35, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x04, 0x29, 0xCD, 0x0C, 0x2F, 0xCF, 0x5B, 0x72, 0xDE, 
   0xBC, 0xC5, 0xF2, 0xFA, 0xFB, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF2, 0xF5, 0xFC, 
   0xB4, 0xBF, 0xF0, 0x51, 0x6A, 0xDD, 0x0C, 0x2E, 0xCF, 0x01, 0x26, 0xCC, 0x0E, 0x30, 0xCF, 0x13, 
   0x35, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x11, 0x33, 0xD0, 0x02, 0x27, 0xCD, 0x6C, 0x81, 0xE2, 
   0xFC, 0xFC, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xF0, 0xF2, 0xFC, 0x2F, 0x4D, 0xD6, 0x0B, 0x2E, 0xCE, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x0E, 0x31, 0xCF, 0x16, 
   0x38, 0xD1, 0xCF, 0xD6, 0xF6, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0xFE, 0xFF, 0x54, 0x6D, 0xDD, 0x06, 0x29, 0xCD, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x0C, 0x2F, 0xCE, 0x25, 
   0x45, 0xD4, 0xE3, 0xE7, 0xF9, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x71, 0x86, 0xE4, 0x01, 0x25, 0xCD, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x0F, 0x32, 0xCF, 0x01, 0x26, 0xCD, 0x3E, 0x5A, 0xD9, 0xBC, 0xC6, 0xF2, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFE, 0xFF, 0xFF, 0xBF, 0xC8, 0xF2, 0x5C, 0x72, 0xDF, 0x12, 0x33, 0xD0, 0x02, 
   0x26, 0xCD, 0x0E, 0x31, 0xCF, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x10, 0x32, 0xD0, 0x01, 0x26, 0xCD, 
   0x83, 0x95, 0xE6, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x92, 0xE6, 0x04, 0x28, 0xCD, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x03, 
   0x27, 0xCD, 0x98, 0xA7, 0xEB, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xDA, 0xDF, 0xF7, 0x1A, 0x3B, 0xD1, 0x0E, 0x31, 0xCF, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x04, 0x28, 0xCD, 0x7D, 
   0x90, 0xE5, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xC6, 0xCE, 0xF4, 0x0E, 0x30, 0xCF, 0x0E, 0x30, 0xCF, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x0D, 0x30, 
   0xCF, 0x0A, 0x2C, 0xCE, 0x75, 0x89, 0xE4, 0xF1, 0xF3, 0xFC, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xCA, 0xD2, 0xF5, 0x68, 
   0x7E, 0xE1, 0x11, 0x33, 0xCF, 0x09, 0x2C, 0xCE, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x0D, 0x30, 0xCF, 
   0x0B, 0x2F, 0xCF, 0xC2, 0xCB, 0xF3, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xCE, 0xD6, 0xF6, 0x12, 0x34, 0xD0, 0x0F, 0x32, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x03, 
   0x28, 0xCD, 0x73, 0x87, 0xE3, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0x9C, 0xAA, 0xEB, 0x05, 0x29, 0xCD, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x10, 0x32, 0xD0, 0x12, 0x34, 0xD0, 0xCD, 
   0xD5, 0xF5, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFE, 0xFE, 0xFF, 0x52, 0x6B, 0xDD, 0x03, 0x26, 0xCD, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x0E, 0x30, 0xCF, 0x0C, 0x2F, 
   0xCF, 0x95, 0xA5, 0xEA, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xBB, 0xC6, 0xF2, 0x2F, 0x4D, 0xD6, 0x05, 0x29, 0xCE, 0x13, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x13, 0x34, 0xD0, 
   0x04, 0x28, 0xCD, 0x48, 0x62, 0xDB, 0xF8, 0xF9, 0xFD, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF7, 0xF8, 0xFE, 0x3E, 0x5A, 0xD9, 0x08, 0x2B, 0xCD, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x07, 
   0x2A, 0xCE, 0x4D, 0x67, 0xDC, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0x55, 0x6D, 0xDE, 0x05, 0x29, 0xCD, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x08, 0x2B, 0xCD, 0x41, 0x5B, 0xD9, 0xF9, 
   0xFA, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xBA, 0xC4, 0xF1, 0x0B, 0x2E, 0xCE, 0x10, 0x32, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x11, 0x33, 0xD0, 0x04, 0x27, 0xCD, 0x8B, 0x9D, 
   0xE8, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xDE, 0xE3, 0xF8, 0x36, 0x53, 0xD7, 0x01, 0x26, 0xCD, 0x13, 0x35, 
   0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x10, 0x33, 0xD0, 0x09, 0x2C, 0xCE, 0xB8, 0xC2, 0xF1, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x72, 0x86, 0xE3, 0x04, 0x28, 0xCD, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x08, 
   0x2B, 0xCE, 0x37, 0x54, 0xD7, 0xFB, 0xFB, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xE4, 0xE8, 0xFA, 0x22, 0x42, 0xD3, 0x0C, 0x2F, 0xCF, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x04, 0x27, 0xCD, 0x7E, 0x90, 0xE6, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFA, 0xFB, 0xFE, 
   0x48, 0x63, 0xDA, 0x05, 0x29, 0xCD, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x13, 0x35, 0xD0, 0x00, 0x25, 0xCC, 0x67, 0x7C, 0xE0, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xE0, 0xE4, 0xF9, 0x38, 0x54, 0xD8, 0x05, 0x29, 
   0xCD, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x04, 0x28, 0xCD, 0x5D, 0x74, 0xDF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x99, 0xA8, 0xEB, 0x05, 0x28, 0xCD, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x0A, 
   0x2E, 0xCF, 0x2C, 0x4A, 0xD5, 0xEB, 0xED, 0xFB, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xA7, 0xB4, 0xEE, 0x06, 0x29, 0xCE, 0x11, 0x33, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x11, 0x33, 0xD0, 0x0A, 0x2C, 0xCE, 0xBD, 0xC6, 0xF2, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xC3, 0xCC, 0xF3, 
   0x0C, 0x2F, 0xCF, 0x10, 0x32, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x06, 0x2A, 0xCE, 0x39, 0x56, 0xD8, 0xEE, 0xF1, 0xFC, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xDE, 0xE2, 0xF8, 0x28, 0x46, 
   0xD4, 0x0A, 0x2E, 0xCE, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x0E, 0x30, 0xCF, 0x1C, 0x3C, 0xD2, 0xDD, 0xE2, 0xF8, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xA9, 0xB5, 0xED, 0x05, 0x29, 0xCE, 
   0x11, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x0D, 
   0x30, 0xCF, 0x1E, 0x3F, 0xD2, 0xD6, 0xDC, 0xF7, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0x65, 0x7B, 0xE0, 0x03, 0x27, 0xCD, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x0B, 0x2D, 0xCF, 0x28, 0x47, 0xD5, 0xE9, 0xEC, 0xFA, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x70, 0x85, 0xE2, 
   0x04, 0x28, 0xCD, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x0F, 0x31, 0xCF, 0x12, 0x35, 0xD0, 0xC5, 0xCD, 0xF3, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xA7, 0xB3, 
   0xED, 0x0A, 0x2D, 0xCF, 0x11, 0x33, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x11, 0x34, 0xD0, 0x06, 0x2A, 0xCD, 0xA0, 0xAD, 0xEC, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xB1, 0xBC, 0xEF, 0x06, 0x2A, 0xCE, 
   0x11, 0x33, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x0F, 
   0x31, 0xCF, 0x13, 0x35, 0xD0, 0xC6, 0xCF, 0xF4, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFA, 0xFB, 
   0xFE, 0x38, 0x54, 0xD8, 0x08, 0x2B, 0xCE, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x05, 0x28, 0xCE, 0x51, 0x6A, 0xDD, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF0, 0xF3, 0xFC, 0x2E, 0x4C, 0xD6, 
   0x0B, 0x2E, 0xCE, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x03, 0x28, 0xCD, 0x6B, 0x80, 0xE2, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xEC, 0xEF, 
   0xFB, 0x25, 0x45, 0xD4, 0x0D, 0x30, 0xCF, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x03, 0x27, 0xCD, 0x73, 0x87, 0xE3, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xBD, 0xC6, 0xF2, 0x0B, 0x2C, 0xCE, 
   0x11, 0x33, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x10, 
   0x33, 0xD0, 0x0A, 0x2D, 0xCF, 0xB9, 0xC3, 0xF1, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xE0, 0xE4, 
   0xF9, 0x23, 0x42, 0xD4, 0x0C, 0x2F, 0xCF, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x03, 0x27, 0xCD, 0x8A, 0x9B, 0xE8, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xBF, 0xC8, 0xF2, 0x0E, 0x30, 0xD0, 
   0x10, 0x33, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x0E, 
   0x31, 0xCF, 0x17, 0x39, 0xD1, 0xD6, 0xDC, 0xF7, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xE8, 0xEB, 0xFA, 0xC9, 0xD1, 0xF5, 0xA3, 0xB1, 0xED, 0x86, 0x98, 
   0xE7, 0x77, 0x8B, 0xE4, 0x74, 0x88, 0xE3, 0x87, 0x98, 0xE8, 0x9F, 0xAD, 0xEC, 0xC4, 0xCC, 0xF3, 
   0xF1, 0xF3, 0xFC, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0xFE, 
   0xFF, 0x53, 0x6B, 0xDD, 0x07, 0x2A, 0xCE, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x07, 0x2A, 0xCE, 0x55, 0x6D, 0xDD, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xC9, 0xD1, 0xF4, 0x13, 0x35, 0xD0, 
   0x0F, 0x31, 0xCF, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x11, 
   0x34, 0xD0, 0x05, 0x28, 0xCD, 0xB0, 0xBB, 0xEF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xBC, 0xC5, 
   0xF2, 0x0B, 0x2D, 0xCE, 0x11, 0x33, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x10, 0x33, 0xD0, 0x0B, 0x2D, 0xCE, 0xBB, 0xC4, 0xF1, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x87, 0x99, 0xE7, 0x04, 0x27, 0xCD, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x04, 
   0x28, 0xCE, 0x65, 0x7B, 0xE0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xDE, 0xE3, 0xF8, 0x94, 
   0xA3, 0xEA, 0x54, 0x6D, 0xDD, 0x26, 0x44, 0xD3, 0x13, 0x34, 0xD0, 0x09, 0x2D, 0xCE, 0x01, 0x26, 
   0xCC, 0x01, 0x25, 0xCC, 0x01, 0x25, 0xCC, 0x01, 0x26, 0xCD, 0x08, 0x2C, 0xCE, 0x10, 0x32, 0xCF, 
   0x33, 0x4F, 0xD6, 0xA6, 0xB2, 0xED, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0x7B, 0x8D, 0xE5, 0x03, 0x27, 0xCD, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x09, 0x2D, 0xCE, 0x40, 0x5D, 0xD9, 0xFB, 0xFB, 0xFE, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xBC, 0xC5, 0xF2, 0x0A, 0x2C, 0xCE, 
   0x11, 0x33, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x11, 
   0x33, 0xD0, 0x06, 0x29, 0xCD, 0xB1, 0xBC, 0xEF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x8A, 0x9B, 
   0xE7, 0x03, 0x27, 0xCD, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x0C, 0x2F, 0xCF, 0x1F, 0x3F, 0xD2, 0xDB, 0xE0, 0xF8, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x52, 0x6B, 0xDC, 0x07, 0x2A, 0xCE, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x10, 0x32, 0xCF, 0x0E, 
   0x30, 0xCF, 0xC4, 0xCC, 0xF3, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x91, 0xA1, 0xE9, 0x1F, 0x3D, 0xD2, 0x01, 
   0x25, 0xCC, 0x02, 0x26, 0xCD, 0x0B, 0x2E, 0xCE, 0x0E, 0x30, 0xCF, 0x11, 0x32, 0xD0, 0x12, 0x34, 
   0xD0, 0x13, 0x35, 0xD0, 0x13, 0x35, 0xD0, 0x12, 0x34, 0xD0, 0x11, 0x33, 0xD0, 0x0F, 0x31, 0xCF, 
   0x04, 0x28, 0xCD, 0x07, 0x2A, 0xCE, 0xBB, 0xC5, 0xF1, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0x9E, 0xAC, 0xEC, 0x08, 0x2B, 0xCE, 0x11, 0x33, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x0B, 0x2F, 0xCF, 0x2B, 0x4A, 0xD5, 0xF4, 0xF6, 0xFD, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xB8, 0xC2, 0xF1, 0x08, 0x2A, 0xCE, 
   0x11, 0x33, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x11, 
   0x33, 0xD0, 0x06, 0x29, 0xCD, 0xB1, 0xBC, 0xEF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x52, 0x6B, 
   0xDD, 0x05, 0x28, 0xCE, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x08, 0x2C, 0xCE, 0x34, 0x51, 0xD7, 0xF7, 0xF8, 0xFD, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF0, 0xF2, 0xFC, 0x2A, 0x48, 0xD5, 0x0B, 0x2E, 0xCF, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x07, 0x2A, 0xCE, 0x47, 
   0x61, 0xDA, 0xF9, 0xFA, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFB, 0xFC, 0xFE, 0x74, 0x88, 0xE3, 0x01, 0x26, 0xCD, 0x0A, 0x2C, 0xCE, 0x12, 
   0x34, 0xD0, 0x13, 0x35, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x13, 0x35, 0xD0, 0x02, 0x27, 0xCD, 0x63, 0x7A, 0xE0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xAC, 0xB7, 0xEE, 0x0A, 0x2D, 0xCF, 0x11, 0x33, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x0D, 0x2F, 0xCF, 0x22, 0x42, 0xD3, 0xEB, 0xEE, 0xFB, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xA3, 0xB0, 0xED, 0x05, 0x29, 0xCE, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x11, 
   0x33, 0xD0, 0x06, 0x29, 0xCD, 0xB0, 0xBB, 0xEF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xEC, 0xEF, 0xFB, 0x2D, 0x4C, 
   0xD6, 0x0B, 0x2E, 0xCF, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x04, 0x29, 0xCD, 0x62, 0x79, 0xE0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xCC, 0xD4, 0xF5, 0x16, 0x38, 0xD1, 0x0E, 0x31, 0xCF, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x04, 0x28, 0xCD, 0x90, 
   0xA0, 0xE9, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFA, 0xFB, 0xFE, 0x6E, 0x83, 0xE2, 0x02, 0x27, 0xCD, 0x0F, 0x32, 0xD0, 0x13, 0x35, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x0A, 0x2D, 0xCE, 0x35, 0x52, 0xD7, 0xF9, 0xFA, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xA9, 0xB5, 0xEE, 0x0A, 0x2D, 0xCF, 0x11, 0x33, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x0D, 0x30, 0xCF, 0x1D, 0x3D, 0xD2, 0xDC, 0xE1, 0xF8, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x82, 0x94, 0xE6, 0x04, 0x29, 0xCD, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x11, 
   0x33, 0xD0, 0x07, 0x2A, 0xCE, 0xB3, 0xBE, 0xF0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xC8, 0xD1, 0xF5, 0x0E, 0x30, 
   0xCF, 0x11, 0x33, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x04, 0x28, 0xCD, 0x9B, 0xAA, 0xEB, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x9B, 0xAA, 0xEC, 0x05, 0x28, 0xCD, 0x12, 0x33, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x11, 0x33, 0xD0, 0x0A, 0x2D, 0xCF, 0xBE, 
   0xC7, 0xF2, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0xFF, 0xFF, 
   0x76, 0x8A, 0xE4, 0x04, 0x28, 0xCE, 0x10, 0x32, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x0A, 0x2D, 0xCE, 0x29, 0x48, 0xD4, 0xF7, 0xF8, 0xFD, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xA9, 0xB5, 0xEE, 0x0A, 0x2D, 0xCF, 0x11, 0x33, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x0D, 0x30, 0xCF, 0x1D, 0x3D, 0xD2, 0xDC, 0xE1, 0xF8, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x64, 0x79, 0xE1, 0x04, 0x27, 0xCD, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x0F, 
   0x31, 0xCF, 0x13, 0x35, 0xD0, 0xC6, 0xCE, 0xF4, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xA0, 0xAE, 0xEC, 0x07, 0x2A, 
   0xCE, 0x11, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x0F, 0x31, 0xCF, 0x14, 0x35, 0xD0, 0xC5, 0xCD, 0xF3, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x5C, 0x74, 0xDF, 0x04, 0x28, 0xCD, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x0C, 0x2F, 0xCF, 0x22, 0x42, 0xD3, 0xE0, 
   0xE4, 0xF9, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xA8, 0xB4, 0xEE, 
   0x04, 0x27, 0xCD, 0x0F, 0x31, 0xCF, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x13, 0x34, 0xD0, 0x03, 0x27, 0xCD, 0x55, 0x6E, 0xDD, 0xFD, 0xFD, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xA8, 0xB4, 0xEE, 0x0A, 0x2D, 0xCF, 0x11, 0x33, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x0D, 0x30, 0xCF, 0x1D, 0x3D, 0xD2, 0xDC, 0xE1, 0xF8, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x54, 0x6B, 0xDD, 0x04, 0x28, 0xCD, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x0C, 
   0x2F, 0xCF, 0x20, 0x40, 0xD2, 0xDA, 0xDF, 0xF7, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x77, 0x8A, 0xE4, 0x03, 0x27, 
   0xCD, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x0B, 0x2F, 0xCF, 0x26, 0x45, 0xD4, 0xEB, 0xEE, 0xFC, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xF8, 0xF9, 0xFE, 0x35, 0x52, 0xD7, 0x08, 0x2C, 0xCE, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x07, 0x2B, 0xCE, 0x3F, 0x5B, 0xD9, 0xFC, 
   0xFD, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF1, 0xF3, 0xFC, 0x34, 0x51, 0xD7, 
   0x07, 0x2B, 0xCE, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x0D, 0x2F, 0xCF, 0x08, 0x2B, 0xCE, 0x06, 0x2A, 
   0xCE, 0x05, 0x28, 0xCD, 0x04, 0x28, 0xCD, 0x04, 0x28, 0xCD, 0x04, 0x28, 0xCD, 0x06, 0x2A, 0xCE, 
   0x02, 0x26, 0xCD, 0x12, 0x33, 0xD0, 0xC3, 0xCB, 0xF3, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xB1, 0xBC, 0xEF, 0x0B, 0x2E, 0xCF, 0x10, 0x33, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x0D, 0x30, 0xCF, 0x1C, 0x3D, 0xD2, 0xDB, 0xE0, 0xF8, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x49, 0x63, 0xDB, 0x06, 0x2A, 0xCE, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x0A, 
   0x2E, 0xCF, 0x2D, 0x4B, 0xD5, 0xEC, 0xEF, 0xFB, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x5F, 0x75, 0xDF, 0x04, 0x28, 
   0xCD, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x0A, 0x2C, 0xCF, 0x3A, 0x56, 0xD8, 0xFA, 0xFB, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xE3, 0xE6, 0xFA, 0x26, 0x45, 0xD4, 0x0B, 0x2E, 0xCF, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x04, 0x29, 0xCE, 0x6A, 0x80, 0xE1, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x9A, 0xA9, 0xEB, 0x04, 0x28, 0xCD, 
   0x11, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x13, 
   0x35, 0xD0, 0x0F, 0x31, 0xCF, 0x04, 0x28, 0xCD, 0x1F, 0x3F, 0xD3, 0x44, 0x5F, 0xDA, 0x53, 0x6C, 
   0xDD, 0x67, 0x7C, 0xE1, 0x6D, 0x82, 0xE1, 0x6C, 0x81, 0xE1, 0x69, 0x7F, 0xE1, 0x51, 0x6B, 0xDC, 
   0x52, 0x6B, 0xDD, 0xB0, 0xBB, 0xF0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xC1, 0xCA, 0xF3, 0x0E, 0x30, 0xCF, 0x10, 0x33, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x0D, 0x30, 0xCF, 0x1F, 0x3F, 0xD2, 0xE1, 0xE6, 0xF9, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF9, 0xFA, 0xFE, 0x41, 0x5C, 0xDA, 0x07, 0x2B, 0xCE, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x08, 
   0x2B, 0xCE, 0x38, 0x54, 0xD8, 0xFA, 0xFB, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x56, 0x6E, 0xDD, 0x06, 0x2A, 
   0xCE, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x09, 0x2C, 0xCE, 0x46, 0x61, 0xDA, 0xFC, 0xFD, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xCA, 0xD2, 0xF5, 0x15, 0x37, 0xD1, 0x0E, 0x31, 0xCF, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x03, 0x27, 0xCD, 0x91, 0xA0, 0xE9, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF8, 0xF9, 0xFE, 0x3D, 0x59, 0xD8, 0x06, 0x2A, 0xCD, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x0F, 
   0x32, 0xCF, 0x0B, 0x2D, 0xCF, 0x77, 0x8A, 0xE4, 0xDE, 0xE2, 0xF9, 0xF8, 0xFA, 0xFE, 0xFC, 0xFC, 
   0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFB, 0xFC, 0xFE, 
   0xFE, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xAC, 0xB8, 0xEF, 0x0B, 0x2E, 0xCF, 0x11, 0x33, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x0C, 0x2F, 0xCF, 0x25, 0x45, 0xD4, 0xF1, 0xF4, 0xFC, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xED, 0xEF, 0xFB, 0x33, 0x50, 0xD6, 0x0A, 0x2D, 0xCE, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x07, 
   0x2A, 0xCE, 0x51, 0x6A, 0xDD, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFA, 0xFB, 0xFE, 0x47, 0x62, 0xDA, 0x08, 0x2C, 
   0xCE, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x06, 0x2A, 0xCE, 0x5A, 0x72, 0xDE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xB2, 0xBD, 0xEF, 0x07, 0x2A, 0xCD, 0x11, 0x33, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x05, 0x29, 0xCD, 0xAB, 0xB6, 0xEE, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xC1, 0xCA, 0xF3, 0x0C, 0x2E, 0xCF, 0x10, 0x33, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x03, 
   0x28, 0xCD, 0x7C, 0x8F, 0xE6, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0x97, 0xA6, 0xEB, 0x07, 0x2A, 0xCE, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x0A, 0x2D, 0xCE, 0x3A, 0x56, 0xD8, 0xF8, 0xFA, 0xFE, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xDE, 0xE3, 0xF9, 0x20, 0x40, 0xD3, 0x0D, 0x2F, 0xCF, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x04, 
   0x28, 0xCD, 0x71, 0x85, 0xE3, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF4, 0xF5, 0xFD, 0x3A, 0x56, 0xD8, 0x0A, 0x2D, 
   0xCF, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x06, 0x2A, 0xCD, 0x5D, 0x74, 0xDF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0x94, 0xA3, 0xEA, 0x04, 0x28, 0xCD, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x0F, 0x31, 0xCF, 0x12, 0x34, 0xD0, 0xC2, 0xCA, 0xF3, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x82, 0x95, 0xE6, 0x03, 0x27, 0xCD, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x09, 0x2D, 0xCE, 0x37, 
   0x53, 0xD7, 0xF4, 0xF5, 0xFD, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0x6B, 0x80, 0xE2, 0x04, 0x28, 0xCD, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x07, 0x2B, 0xCE, 0x52, 0x6A, 0xDD, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xC9, 0xD1, 0xF4, 0x0E, 0x30, 0xCF, 0x11, 0x32, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x02, 
   0x26, 0xCD, 0x91, 0xA1, 0xEA, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xE6, 0xE9, 0xFA, 0x23, 0x42, 0xD3, 0x0D, 0x30, 
   0xCF, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x04, 0x28, 0xCD, 0x70, 0x85, 0xE2, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0x82, 0x94, 0xE6, 0x04, 0x28, 0xCD, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x0E, 0x30, 0xCF, 0x1A, 0x3B, 0xD2, 0xD2, 0xD8, 0xF6, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x56, 0x6E, 0xDD, 0x05, 0x28, 0xCD, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x05, 0x28, 0xCD, 0x90, 
   0xA0, 0xE9, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF7, 0xF8, 
   0xFD, 0x39, 0x55, 0xD7, 0x0A, 0x2D, 0xCE, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x03, 0x27, 0xCD, 0x73, 0x87, 0xE3, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xA3, 0xB0, 0xED, 0x08, 0x2B, 0xCE, 0x11, 0x33, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x11, 0x33, 0xD0, 0x08, 
   0x2C, 0xCE, 0xAC, 0xB8, 0xEF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xF9, 0xFA, 0xFE, 0xEC, 0xEE, 0xFB, 0xF3, 0xF5, 0xFD, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xDF, 0xE3, 0xF8, 0x1A, 0x3A, 0xD2, 0x0F, 0x31, 
   0xCF, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x04, 0x28, 0xCD, 0x70, 0x85, 0xE2, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0x84, 0x95, 0xE6, 0x04, 0x28, 0xCD, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x0C, 0x2F, 0xCF, 0x23, 0x43, 0xD3, 0xE3, 0xE6, 0xF9, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xF7, 0xF8, 0xFD, 0x3E, 0x5A, 0xD9, 0x08, 0x2C, 0xCE, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x0E, 0x31, 0xCF, 0x18, 0x39, 0xD1, 0xD7, 
   0xDD, 0xF7, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xD4, 0xDB, 
   0xF6, 0x16, 0x38, 0xD1, 0x0F, 0x31, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x11, 0x33, 0xD0, 0x06, 0x2A, 0xCD, 0x97, 0xA6, 0xEA, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x73, 0x87, 0xE3, 0x04, 0x28, 0xCD, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x0F, 0x31, 0xCF, 0x16, 
   0x38, 0xD0, 0xC8, 0xD0, 0xF4, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF3, 0xF5, 0xFD, 0x8F, 
   0x9F, 0xE9, 0x46, 0x60, 0xDA, 0x26, 0x45, 0xD4, 0x35, 0x52, 0xD7, 0x8F, 0xA0, 0xE9, 0xFD, 0xFD, 
   0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xE4, 0xE8, 0xFA, 0x1C, 0x3D, 0xD2, 0x0E, 0x31, 
   0xCF, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x06, 0x29, 0xCD, 0x5C, 0x73, 0xDE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0x84, 0x95, 0xE6, 0x04, 0x28, 0xCD, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x0C, 0x2F, 0xCF, 0x25, 0x45, 0xD4, 0xE8, 0xEB, 0xFA, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xE7, 0xEB, 0xFA, 0x2A, 0x48, 0xD5, 0x0C, 0x2E, 0xCF, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x09, 0x2C, 0xCE, 0x44, 0x5E, 0xDA, 0xFD, 
   0xFD, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x8D, 0x9E, 
   0xE9, 0x04, 0x28, 0xCD, 0x11, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x10, 0x32, 0xD0, 0x0F, 0x32, 0xCF, 0xC5, 0xCD, 0xF3, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFC, 0xFC, 0xFF, 0x4C, 0x65, 0xDB, 0x07, 0x2B, 0xCE, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x0C, 0x2F, 0xCF, 0x25, 
   0x44, 0xD4, 0xEA, 0xED, 0xFB, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xEB, 0xEE, 0xFB, 0x4A, 0x64, 0xDB, 0x00, 
   0x25, 0xCC, 0x07, 0x2A, 0xCE, 0x0C, 0x2F, 0xCF, 0x07, 0x2B, 0xCE, 0x00, 0x25, 0xCC, 0xA8, 0xB4, 
   0xEE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xE4, 0xE8, 0xFA, 0x1C, 0x3D, 0xD2, 0x0E, 0x31, 
   0xCF, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x06, 0x2A, 0xCD, 0x5A, 0x72, 0xDF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0x83, 0x94, 0xE6, 0x04, 0x28, 0xCD, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x0C, 0x2F, 0xCF, 0x25, 0x44, 0xD4, 0xE7, 0xEA, 0xFA, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xE5, 0xE9, 0xFA, 0x26, 0x45, 0xD4, 0x0C, 0x2F, 0xCF, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x04, 0x28, 0xCE, 0x6B, 0x81, 0xE1, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFA, 0xFB, 0xFE, 0x40, 0x5B, 
   0xD9, 0x08, 0x2B, 0xCE, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x0C, 0x2F, 0xCF, 0x2A, 0x49, 0xD5, 0xED, 0xEF, 0xFB, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xE6, 0xE9, 0xFA, 0x22, 0x42, 0xD4, 0x0E, 0x30, 0xCF, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x09, 0x2C, 0xCE, 0x41, 
   0x5C, 0xDA, 0xFD, 0xFD, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0xFF, 0xFF, 0x66, 0x7C, 0xE1, 0x00, 0x22, 0xCC, 0x11, 
   0x33, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x05, 0x28, 0xCD, 0x4E, 0x68, 
   0xDC, 0xFC, 0xFC, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xE4, 0xE8, 0xFA, 0x1C, 0x3D, 0xD2, 0x0E, 0x31, 
   0xCF, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x06, 0x2A, 0xCD, 0x5B, 0x73, 0xDF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0x89, 0x99, 0xE7, 0x04, 0x28, 0xCD, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x0C, 0x2F, 0xCF, 0x26, 0x45, 0xD4, 0xE8, 0xEB, 0xFA, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xE5, 0xE9, 0xFA, 0x26, 0x45, 0xD4, 0x0C, 0x2F, 0xCF, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x05, 0x29, 0xCE, 0x68, 0x7D, 0xE1, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xC3, 0xCB, 0xF3, 0x0E, 0x30, 
   0xCF, 0x10, 0x32, 0xCF, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x05, 0x29, 0xCD, 0x5A, 0x72, 0xDE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xBA, 0xC4, 0xF1, 0x0D, 0x30, 0xCF, 0x11, 0x33, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x04, 0x28, 0xCD, 0x6B, 
   0x81, 0xE2, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xD2, 0xD8, 0xF6, 0x13, 0x35, 0xD0, 0x0E, 0x31, 0xCF, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x0C, 0x2F, 0xCF, 0x29, 0x48, 
   0xD5, 0xEC, 0xEF, 0xFB, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xE4, 0xE8, 0xF9, 0x1C, 0x3C, 0xD2, 0x0E, 0x31, 
   0xCF, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x06, 0x2A, 0xCD, 0x5B, 0x73, 0xDF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0x9D, 0xAB, 0xEC, 0x04, 0x28, 0xCD, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x0C, 0x2F, 0xCF, 0x21, 0x41, 0xD3, 0xDF, 0xE3, 0xF9, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xEF, 0xF1, 0xFC, 0x31, 0x4F, 0xD6, 0x0A, 0x2E, 0xCF, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x09, 0x2C, 0xCE, 0x42, 0x5C, 0xD9, 0xFD, 
   0xFD, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x64, 0x7A, 0xE0, 0x03, 0x27, 
   0xCD, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x04, 0x28, 0xCE, 0x99, 0xA8, 0xEB, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0x89, 0x9A, 0xE8, 0x04, 0x28, 0xCD, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x04, 0x28, 0xCD, 0x93, 
   0xA2, 0xEA, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x8F, 0xA0, 0xE8, 0x04, 0x28, 0xCD, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x0E, 0x31, 0xCF, 0x1C, 0x3D, 
   0xD2, 0xE4, 0xE8, 0xFA, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xEC, 0xEF, 0xFB, 0x2B, 0x4A, 0xD5, 0x0C, 0x2F, 
   0xCF, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x06, 0x2A, 0xCD, 0x5B, 0x73, 0xDF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xA7, 0xB3, 0xEE, 0x04, 0x27, 0xCD, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x0E, 0x31, 0xCF, 0x18, 0x39, 0xD1, 0xCE, 0xD5, 0xF5, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x54, 0x6C, 0xDD, 0x05, 0x29, 0xCD, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x0F, 0x32, 0xD0, 0x12, 0x34, 0xD0, 0xCA, 
   0xD1, 0xF4, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xBA, 0xC4, 0xF1, 0x0F, 0x32, 0xD0, 0x0F, 0x31, 
   0xCF, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x0D, 0x30, 0xCF, 0x19, 0x3A, 0xD2, 0xD9, 0xDF, 0xF8, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0x56, 0x6E, 0xDD, 0x06, 0x2A, 0xCE, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x10, 0x32, 0xD0, 0x0E, 0x31, 0xCF, 0xB7, 
   0xC1, 0xF0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x5A, 0x72, 0xDE, 0x05, 0x29, 0xCD, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x0E, 0x31, 0xCF, 0x1A, 0x3B, 
   0xD2, 0xE3, 0xE7, 0xF9, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xEF, 0xF2, 0xFC, 0x32, 0x4F, 0xD7, 0x0B, 0x2E, 
   0xCF, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x06, 0x2A, 0xCD, 0x5C, 0x74, 0xDF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xB7, 0xC1, 0xF1, 0x09, 0x2B, 0xCE, 0x11, 0x33, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x11, 0x33, 0xD0, 0x0A, 0x2D, 0xCF, 0xB4, 0xBF, 0xF0, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x88, 0x99, 0xE8, 0x04, 0x28, 0xCD, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x04, 0x28, 0xCD, 0x60, 
   0x77, 0xE0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xD1, 0xD8, 0xF6, 0x26, 0x45, 0xD3, 0x08, 0x2C, 0xCE, 0x13, 0x35, 
   0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x04, 0x28, 0xCE, 0x55, 0x6E, 0xDD, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xEC, 0xEE, 0xFB, 0x26, 0x45, 0xD4, 0x0C, 0x2F, 0xCF, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x0F, 0x31, 0xCF, 0x19, 0x3A, 0xD1, 0xDB, 
   0xE0, 0xF8, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xF4, 0xF5, 0xFD, 0x2F, 0x4C, 0xD6, 0x0B, 0x2E, 0xCF, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x0E, 0x30, 0xCF, 0x21, 0x41, 
   0xD3, 0xE7, 0xEA, 0xFA, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF6, 0xF8, 0xFE, 0x3E, 0x5A, 0xD9, 0x09, 0x2D, 
   0xCE, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x07, 0x2A, 0xCE, 0x57, 0x70, 0xDE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xCB, 0xD3, 0xF5, 0x16, 0x38, 0xD1, 0x0E, 0x31, 0xCF, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x02, 0x26, 0xCD, 0x98, 0xA7, 0xEB, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xBA, 0xC4, 0xF1, 0x09, 0x2B, 0xCE, 0x11, 0x33, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x0F, 0x32, 0xCF, 0x0B, 
   0x2D, 0xCF, 0xB8, 0xC2, 0xF1, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xC4, 0xCD, 0xF3, 0x26, 0x45, 0xD4, 0x06, 0x2A, 0xCD, 0x13, 0x35, 0xD0, 0x12, 0x34, 
   0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x11, 0x33, 0xD0, 
   0x06, 0x2A, 0xCE, 0xAB, 0xB7, 0xEE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xB9, 0xC3, 0xF1, 0x0D, 0x2F, 0xCF, 0x10, 0x33, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x0B, 0x2E, 0xCF, 0x2F, 0x4D, 0xD5, 0xF1, 
   0xF3, 0xFC, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xD2, 0xD8, 0xF6, 0x18, 0x3A, 0xD1, 0x0E, 0x31, 0xCF, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x08, 0x2C, 0xCE, 0x44, 0x5F, 
   0xDA, 0xF9, 0xFA, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x58, 0x70, 0xDE, 0x05, 0x29, 
   0xCD, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x09, 0x2C, 0xCE, 0x43, 0x5E, 0xD9, 0xFC, 0xFD, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xE2, 0xE5, 0xF9, 0x25, 0x45, 0xD4, 0x0B, 0x2E, 0xCF, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x04, 0x28, 0xCD, 0x68, 0x7D, 0xE1, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xE5, 0xE9, 0xFA, 0x24, 0x44, 0xD4, 0x0B, 0x2E, 0xCF, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x07, 
   0x2B, 0xCE, 0x2F, 0x4D, 0xD6, 0xE7, 0xEB, 0xFA, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFC, 0xFD, 0xFF, 0x98, 
   0xA7, 0xEA, 0x19, 0x3A, 0xD2, 0x08, 0x2B, 0xCE, 0x13, 0x35, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x08, 0x2B, 0xCE, 
   0x2E, 0x4D, 0xD6, 0xEF, 0xF1, 0xFC, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0x85, 0x96, 0xE7, 0x03, 0x27, 0xCD, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x06, 0x2A, 0xCD, 0x50, 0x69, 0xDC, 0xFD, 
   0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xAC, 0xB8, 0xEF, 0x08, 0x2B, 0xCE, 0x11, 0x33, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x03, 0x27, 0xCD, 0x68, 0x7D, 
   0xE1, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7A, 0x8E, 0xE5, 0x04, 0x28, 
   0xCD, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x0B, 0x2E, 0xCF, 0x2C, 0x4B, 0xD5, 0xF5, 0xF6, 0xFD, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xF8, 0xF9, 0xFE, 0x35, 0x52, 0xD7, 0x08, 0x2C, 0xCE, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x08, 0x2C, 0xCE, 0x35, 0x51, 0xD7, 0xF6, 
   0xF7, 0xFD, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x63, 0x7A, 0xE0, 0x02, 0x26, 0xCD, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x05, 0x29, 0xCE, 0x4E, 0x67, 0xDC, 0xE8, 0xEC, 0xFB, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xCA, 0xD2, 0xF5, 0x53, 0x6B, 0xDD, 0x07, 
   0x2A, 0xCD, 0x0C, 0x2F, 0xCF, 0x13, 0x35, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x11, 0x33, 0xD0, 0x02, 0x26, 0xCD, 
   0x9C, 0xAB, 0xEC, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 
   0xFF, 0x48, 0x62, 0xDB, 0x07, 0x2A, 0xCD, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x04, 0x28, 0xCD, 0x7F, 0x92, 0xE6, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0x7B, 0x8D, 0xE5, 0x03, 0x27, 0xCD, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x06, 0x29, 0xCD, 0x94, 0xA3, 
   0xEA, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xB2, 0xBD, 0xF0, 0x08, 0x2B, 
   0xCE, 0x11, 0x33, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x0D, 0x2F, 0xCF, 0x1E, 0x3F, 0xD2, 0xDC, 0xE0, 0xF8, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x5C, 0x73, 0xDF, 0x05, 0x29, 0xCD, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x10, 0x32, 0xCF, 0x0E, 0x30, 0xCF, 0xC2, 
   0xCA, 0xF3, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xC4, 0xCC, 0xF3, 0x0D, 0x30, 0xCF, 
   0x0F, 0x31, 0xCF, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x04, 0x28, 0xCD, 0x39, 0x55, 0xD8, 0xB8, 0xC1, 0xF1, 0xF8, 0xF9, 
   0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF3, 0xF4, 0xFC, 
   0xD4, 0xDA, 0xF6, 0x9A, 0xA9, 0xEB, 0x5A, 0x71, 0xDE, 0x14, 0x36, 0xD0, 0x05, 0x28, 0xCD, 0x10, 
   0x32, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x02, 0x26, 0xCD, 0x50, 0x68, 0xDC, 
   0xFA, 0xFA, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xDF, 0xE3, 
   0xF8, 0x1E, 0x3E, 0xD2, 0x0C, 0x2F, 0xCF, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x11, 0x33, 0xD0, 0x0A, 0x2E, 0xCE, 0xB9, 0xC4, 0xF1, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFA, 0xFA, 0xFE, 0x3B, 0x57, 0xD8, 0x08, 0x2B, 0xCD, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x11, 0x33, 0xD0, 0x0B, 0x2E, 0xCE, 0xC1, 0xCA, 
   0xF3, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xDF, 0xE3, 0xF8, 0x1F, 0x3F, 
   0xD3, 0x0D, 0x30, 0xCF, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x10, 0x32, 0xD0, 0x10, 0x32, 0xCF, 0xBD, 0xC6, 0xF2, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x8A, 0x9B, 0xE8, 0x02, 0x26, 0xCD, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x02, 0x26, 0xCD, 0x70, 
   0x85, 0xE3, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0xFE, 0xFF, 0x58, 0x70, 0xDD, 
   0x04, 0x27, 0xCD, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x06, 0x2A, 0xCE, 0x0B, 0x2D, 0xCE, 0x45, 0x60, 
   0xDA, 0x80, 0x90, 0xE6, 0x9B, 0xA9, 0xEB, 0x88, 0x97, 0xE7, 0x66, 0x7C, 0xE1, 0x3A, 0x56, 0xD8, 
   0x16, 0x36, 0xD1, 0x03, 0x27, 0xCD, 0x02, 0x26, 0xCD, 0x0E, 0x30, 0xCF, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x12, 0x34, 0xD0, 0x13, 0x34, 0xD0, 0x08, 0x2C, 0xCE, 0x27, 0x46, 0xD4, 0xDE, 0xE2, 0xF8, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xA2, 0xB0, 
   0xED, 0x05, 0x29, 0xCD, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x0D, 0x2F, 0xCF, 0x23, 0x42, 0xD3, 0xE3, 0xE7, 0xFA, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xCB, 0xD3, 0xF4, 0x12, 0x34, 0xD0, 0x0F, 0x31, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x0D, 0x30, 0xCF, 0x20, 0x41, 0xD3, 0xE0, 0xE5, 
   0xF9, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFA, 0xFA, 0xFD, 0x40, 0x5C, 
   0xD9, 0x07, 0x2B, 0xCE, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x04, 0x28, 0xCD, 0x9F, 0xAD, 0xEC, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xB5, 0xBF, 0xF1, 0x0C, 0x2E, 0xCF, 0x10, 0x33, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x0B, 0x2E, 0xCE, 0x27, 
   0x46, 0xD4, 0xE9, 0xEC, 0xFB, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xCF, 0xD7, 0xF6, 
   0x14, 0x36, 0xD0, 0x0C, 0x2E, 0xCF, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x13, 0x35, 0xD0, 0x0F, 0x32, 0xCF, 0x06, 0x2A, 
   0xCE, 0x01, 0x24, 0xCC, 0x06, 0x29, 0xCD, 0x01, 0x25, 0xCC, 0x02, 0x26, 0xCD, 0x07, 0x2B, 0xCE, 
   0x0D, 0x30, 0xCF, 0x12, 0x34, 0xD0, 0x13, 0x35, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x13, 0x35, 0xD0, 0x09, 0x2D, 0xCE, 0x1A, 0x3B, 0xD2, 0xC2, 0xCB, 0xF3, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0xFE, 0xFF, 0x50, 0x6A, 
   0xDD, 0x05, 0x29, 0xCD, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x06, 0x2A, 0xCE, 0x46, 0x61, 0xDA, 0xFD, 0xFD, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0x7E, 0x90, 0xE5, 0x03, 0x27, 0xCD, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x07, 0x2A, 0xCE, 0x40, 0x5B, 0xD9, 0xFA, 0xFB, 
   0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x55, 0x6C, 
   0xDD, 0x04, 0x28, 0xCD, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x04, 0x28, 0xCD, 0x7B, 0x8E, 0xE5, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xE8, 0xEC, 0xFB, 0x22, 0x42, 0xD3, 0x0C, 0x2F, 0xCF, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x05, 
   0x29, 0xCD, 0x97, 0xA6, 0xEA, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0x8F, 0x9F, 0xE9, 0x04, 0x28, 0xCD, 0x10, 0x32, 0xCF, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x13, 0x34, 
   0xD0, 0x12, 0x35, 0xD0, 0x11, 0x33, 0xD0, 0x12, 0x34, 0xD0, 0x13, 0x35, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x13, 0x35, 
   0xD0, 0x07, 0x2A, 0xCE, 0x0D, 0x30, 0xCF, 0xAC, 0xB8, 0xEF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xCA, 0xD2, 0xF4, 0x11, 0x33, 
   0xD0, 0x0F, 0x31, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x03, 0x27, 0xCD, 0x75, 0x89, 0xE3, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF4, 0xF6, 0xFD, 
   0x37, 0x54, 0xD8, 0x08, 0x2B, 0xCD, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x04, 0x28, 0xCD, 0x62, 0x78, 0xE0, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x78, 0x8C, 
   0xE5, 0x03, 0x27, 0xCD, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x07, 0x2A, 0xCD, 0x48, 0x62, 0xDB, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x5D, 0x75, 0xDF, 0x04, 0x28, 0xCD, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x0A, 
   0x2D, 0xCE, 0x32, 0x4E, 0xD7, 0xF1, 0xF3, 0xFD, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0x7A, 0x8D, 0xE5, 0x00, 0x24, 0xCC, 0x10, 0x32, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x13, 0x34, 0xD0, 0x10, 0x33, 0xD0, 0x01, 0x25, 
   0xCD, 0x1D, 0x3D, 0xD2, 0xB0, 0xBC, 0xEF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x63, 0x79, 0xE0, 0x04, 0x28, 
   0xCD, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x10, 0x33, 0xD0, 0x0B, 0x2E, 0xCE, 0xBD, 0xC7, 0xF2, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xCB, 0xD3, 0xF4, 
   0x0F, 0x31, 0xCF, 0x10, 0x32, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x04, 0x28, 0xCD, 0x8C, 0x9C, 0xE8, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xB6, 0xC1, 
   0xF1, 0x09, 0x2C, 0xCE, 0x11, 0x33, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x0B, 0x2D, 0xCF, 0x2A, 0x48, 0xD4, 0xEC, 0xEF, 0xFB, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xBB, 0xC4, 0xF1, 0x0C, 0x30, 0xCF, 
   0x10, 0x33, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x04, 0x28, 0xCD, 0x8D, 0x9D, 0xE9, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFC, 0xFC, 0xFE, 0x70, 0x85, 0xE3, 0x03, 0x27, 0xCD, 0x0F, 0x31, 0xCF, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x11, 0x33, 0xD0, 0x09, 0x2D, 0xCE, 0x06, 0x2B, 0xCE, 0x4F, 0x69, 
   0xDC, 0xD5, 0xDB, 0xF7, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xBC, 0xC6, 0xF1, 0x0D, 0x2F, 0xCF, 0x10, 0x32, 
   0xCF, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x08, 0x2B, 0xCD, 0x39, 0x56, 0xD8, 0xF6, 0xF8, 0xFD, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x93, 0xA2, 0xE9, 
   0x04, 0x28, 0xCD, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x11, 0x34, 0xD0, 0x07, 0x29, 0xCE, 0xB0, 0xBB, 0xEF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xED, 0xF0, 
   0xFC, 0x2C, 0x4A, 0xD5, 0x0A, 0x2D, 0xCF, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x0F, 0x32, 0xD0, 0x10, 0x33, 0xD0, 0xC5, 0xCD, 0xF4, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFB, 0xFB, 0xFE, 0x45, 0x60, 0xDB, 
   0x07, 0x2B, 0xCE, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x0B, 0x2E, 0xCE, 0x22, 0x42, 0xD3, 0xE2, 0xE7, 0xF9, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0xFF, 0xFF, 0x7D, 0x90, 0xE6, 0x06, 0x2A, 0xCE, 0x0A, 
   0x2D, 0xCE, 0x13, 0x35, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x0F, 
   0x31, 0xCF, 0x07, 0x2A, 0xCE, 0x06, 0x29, 0xCE, 0x31, 0x4F, 0xD6, 0xA0, 0xAE, 0xEC, 0xFB, 0xFC, 
   0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF5, 0xF6, 0xFD, 0x3E, 0x59, 0xD8, 0x06, 0x2A, 0xCE, 0x12, 0x34, 
   0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x02, 0x26, 0xCD, 0x8C, 0x9D, 0xE8, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x56, 0x6E, 0xDD, 
   0x05, 0x28, 0xCD, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x0E, 0x31, 0xCF, 0x17, 0x38, 0xD1, 0xD1, 0xD7, 0xF6, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0x67, 0x7D, 0xE1, 0x03, 0x27, 0xCD, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x03, 0x27, 0xCD, 0x80, 0x92, 0xE6, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x99, 0xA7, 0xEB, 
   0x04, 0x28, 0xCD, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x03, 0x27, 0xCD, 0x68, 0x7D, 0xE1, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x9B, 0xA9, 0xEB, 0x1D, 
   0x3D, 0xD2, 0x01, 0x25, 0xCC, 0x0B, 0x2E, 0xCF, 0x10, 0x33, 0xD0, 0x13, 0x35, 0xD0, 0x13, 0x35, 
   0xD0, 0x13, 0x35, 0xD0, 0x13, 0x35, 0xD0, 0x13, 0x35, 0xD0, 0x13, 0x35, 0xD0, 0x13, 0x35, 0xD0, 
   0x11, 0x33, 0xD0, 0x0F, 0x32, 0xCF, 0x0C, 0x2F, 0xCF, 0x07, 0x2B, 0xCE, 0x01, 0x26, 0xCD, 0x0F, 
   0x32, 0xCF, 0x45, 0x60, 0xDA, 0x9D, 0xAB, 0xEC, 0xED, 0xEF, 0xFC, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x89, 0x9A, 0xE8, 0x04, 0x28, 0xCD, 0x12, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x0D, 0x30, 0xCF, 0x1A, 0x3B, 0xD1, 0xDB, 0xE0, 0xF8, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xEB, 0xEE, 0xFB, 0x2A, 0x48, 0xD5, 
   0x0C, 0x2F, 0xCF, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x09, 0x2C, 0xCF, 0x31, 0x4E, 0xD6, 0xF3, 0xF5, 0xFD, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xA6, 0xB3, 0xED, 0x05, 0x28, 0xCE, 0x11, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x08, 0x2C, 0xCE, 0x33, 0x50, 0xD7, 0xF3, 0xF5, 0xFD, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xE9, 0xEC, 0xFA, 
   0x25, 0x45, 0xD4, 0x0A, 0x2D, 0xCE, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x10, 0x32, 0xCF, 0x09, 0x2D, 0xCE, 0xB0, 0xBB, 0xEF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xD5, 
   0xDB, 0xF7, 0x64, 0x7A, 0xE0, 0x1E, 0x3C, 0xD2, 0x07, 0x2B, 0xCE, 0x00, 0x23, 0xCC, 0x00, 0x24, 
   0xCC, 0x03, 0x27, 0xCD, 0x04, 0x28, 0xCD, 0x03, 0x28, 0xCD, 0x00, 0x25, 0xCC, 0x00, 0x22, 0xCC, 
   0x04, 0x28, 0xCD, 0x0D, 0x30, 0xCE, 0x18, 0x38, 0xD0, 0x37, 0x54, 0xD7, 0x73, 0x87, 0xE3, 0xC4, 
   0xCC, 0xF3, 0xFB, 0xFC, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xC4, 0xCD, 0xF3, 0x13, 0x35, 0xD0, 0x0D, 0x30, 0xCF, 0x12, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x03, 0x28, 0xCD, 0x5F, 0x76, 0xDF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xBE, 0xC6, 0xF2, 0x0D, 0x30, 0xCF, 
   0x11, 0x33, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x04, 0x28, 0xCD, 0x5B, 0x72, 0xDE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xE5, 0xE9, 0xFA, 0x25, 0x45, 0xD4, 0x0C, 0x2F, 0xCE, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x11, 0x34, 0xD0, 0x06, 0x2A, 0xCE, 0xA9, 0xB5, 0xEE, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0x8F, 0x9E, 0xE9, 0x02, 0x26, 0xCD, 0x12, 0x33, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x07, 0x2B, 0xCE, 0x31, 0x4E, 0xD6, 0xED, 0xF0, 
   0xFB, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xDF, 0xE3, 0xF8, 0xAA, 0xB6, 0xEE, 0x7E, 0x8F, 0xE5, 0x6B, 0x7F, 
   0xE1, 0x57, 0x6F, 0xDD, 0x52, 0x6B, 0xDD, 0x55, 0x6D, 0xDE, 0x6A, 0x7F, 0xE1, 0x7D, 0x8E, 0xE5, 
   0x97, 0xA6, 0xEB, 0xBA, 0xC3, 0xF1, 0xDA, 0xDF, 0xF7, 0xF2, 0xF4, 0xFC, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xE8, 
   0xEB, 0xFA, 0x31, 0x4F, 0xD7, 0x06, 0x2A, 0xCD, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x10, 0x32, 0xCF, 
   0x0E, 0x30, 0xCF, 0xC3, 0xCC, 0xF3, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7D, 0x90, 0xE5, 0x04, 0x28, 0xCD, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x04, 0x28, 0xCD, 0xA1, 0xAE, 0xEC, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0x6A, 0x80, 0xE1, 0x03, 0x28, 0xCD, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x06, 0x2A, 0xCD, 0x46, 0x61, 0xDB, 0xFA, 
   0xFB, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xF6, 0xF7, 0xFD, 0x42, 0x5E, 0xDA, 0x05, 0x29, 0xCE, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x01, 0x25, 0xCC, 0x7E, 0x90, 
   0xE5, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFD, 0xFD, 0xFE, 0xFE, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFB, 0xFC, 0xFE, 0x5B, 
   0x72, 0xDE, 0x00, 0x25, 0xCD, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x06, 0x2A, 0xCE, 
   0x50, 0x69, 0xDC, 0xFD, 0xFD, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF6, 0xF7, 0xFD, 0x37, 0x53, 0xD7, 0x0A, 0x2D, 0xCE, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x0C, 0x2F, 0xCE, 0x23, 0x42, 0xD3, 0xE6, 0xE9, 0xFA, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xAE, 0xBA, 0xEF, 0x09, 0x2C, 0xCF, 0x11, 0x33, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x10, 0x33, 0xD0, 0x0C, 0x2F, 0xCF, 0xBE, 
   0xC7, 0xF2, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xC0, 0xC9, 0xF2, 0x0E, 0x30, 0xCF, 0x0F, 0x31, 0xCF, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x0E, 0x30, 0xCF, 0x16, 0x37, 
   0xD0, 0xC7, 0xCF, 0xF4, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x81, 0x94, 0xE6, 0x05, 
   0x28, 0xCD, 0x11, 0x33, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x0F, 0x31, 0xCF, 0x10, 0x33, 0xD0, 
   0xC4, 0xCD, 0xF3, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xBA, 0xC3, 0xF1, 0x0C, 0x2E, 0xCF, 0x10, 0x32, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x03, 0x27, 0xCD, 0x6C, 0x81, 0xE2, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xE9, 0xEC, 0xFB, 0x25, 0x44, 0xD4, 0x0C, 0x2F, 0xCF, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x05, 0x29, 0xCD, 0x5F, 
   0x76, 0xDF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x68, 0x7E, 0xE1, 0x01, 0x25, 0xCD, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x08, 0x2B, 
   0xCE, 0x35, 0x52, 0xD7, 0xDA, 0xE0, 0xF8, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x90, 0xA0, 0xE9, 0x0B, 0x2E, 0xCF, 0x0E, 
   0x31, 0xCF, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x13, 0x34, 0xD0, 0x01, 0x25, 0xCD, 0x64, 0x7A, 0xE0, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x59, 0x71, 0xDE, 0x05, 0x28, 0xCD, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x10, 
   0x32, 0xCF, 0x0E, 0x30, 0xCF, 0xC3, 0xCB, 0xF3, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x64, 0x7A, 0xE0, 0x04, 0x28, 0xCD, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x0F, 0x31, 0xCF, 0x15, 
   0x37, 0xD1, 0xD1, 0xD8, 0xF6, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xE0, 0xE5, 0xF9, 0x23, 0x43, 0xD3, 0x09, 0x2D, 0xCE, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x05, 0x29, 0xCE, 0x31, 0x4E, 0xD6, 0xCC, 0xD4, 0xF5, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFE, 0xFE, 0xFF, 0x81, 0x93, 0xE5, 0x08, 0x2B, 0xCE, 0x0E, 0x30, 0xCF, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x0A, 0x2D, 0xCE, 0x21, 0x40, 0xD3, 0xDF, 0xE4, 0xF9, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xBD, 0xC7, 0xF2, 0x0D, 0x2F, 0xCF, 0x0F, 0x32, 0xCF, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x07, 
   0x2A, 0xCD, 0x4B, 0x64, 0xDC, 0xFB, 0xFB, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xBB, 0xC4, 0xF1, 0x0A, 0x2D, 0xCE, 0x10, 0x33, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x01, 
   0x26, 0xCD, 0x75, 0x89, 0xE3, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xB0, 0xBC, 0xF0, 0x0C, 0x2F, 0xCF, 0x0F, 
   0x31, 0xCF, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x13, 0x35, 0xD0, 0x06, 0x29, 0xCE, 0x1A, 0x3B, 0xD1, 0xA0, 0xAE, 0xEC, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xF0, 0xF2, 0xFC, 0x64, 0x7A, 0xE0, 0x01, 0x25, 0xCC, 0x0F, 0x31, 0xCF, 0x13, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x12, 0x34, 0xD0, 0x10, 0x33, 0xCF, 0x04, 0x28, 0xCD, 0xA0, 0xAD, 0xEC, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xF9, 0xFA, 0xFE, 0x45, 0x60, 0xDA, 0x04, 0x28, 0xCD, 0x13, 0x35, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x11, 0x33, 0xD0, 0x08, 
   0x2C, 0xCE, 0xAD, 0xB9, 0xEF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF9, 0xFA, 0xFE, 0x48, 0x62, 0xDB, 0x06, 0x2A, 0xCE, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x0B, 
   0x2E, 0xCE, 0x26, 0x45, 0xD4, 0xE9, 0xEC, 0xFB, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7C, 0x8F, 0xE5, 0x03, 
   0x26, 0xCD, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x12, 0x34, 0xD0, 0x13, 0x35, 0xD0, 0x0A, 0x2D, 0xCE, 0x05, 0x29, 0xCD, 0x5C, 0x73, 0xDF, 
   0xE0, 0xE4, 0xF9, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xD3, 0xD9, 0xF6, 
   0x40, 0x5B, 0xD9, 0x00, 0x25, 0xCD, 0x10, 0x32, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x12, 0x34, 0xD0, 0x01, 0x25, 0xCD, 0x60, 0x77, 0xDF, 0xFD, 0xFE, 0xFE, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xAE, 0xB9, 0xEF, 0x06, 0x2A, 0xCD, 0x11, 0x33, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x08, 0x2C, 0xCE, 0x38, 
   0x55, 0xD8, 0xF6, 0xF7, 0xFD, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xAC, 0xB8, 0xEF, 0x06, 0x2B, 0xCE, 
   0x11, 0x33, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x04, 0x28, 0xCD, 0x8C, 0x9C, 0xE8, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF3, 0xF4, 0xFD, 0x40, 
   0x5B, 0xD9, 0x04, 0x27, 0xCD, 0x13, 0x35, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x13, 0x35, 0xD0, 0x10, 0x32, 0xD0, 0x03, 0x27, 0xCD, 
   0x2A, 0x49, 0xD5, 0xA9, 0xB6, 0xEE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFB, 0xFC, 0xFE, 0x99, 0xA7, 0xEB, 0x20, 0x40, 0xD3, 
   0x05, 0x29, 0xCD, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x13, 0x35, 
   0xD0, 0x02, 0x26, 0xCD, 0x38, 0x54, 0xD7, 0xEA, 0xED, 0xFB, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF4, 0xF6, 
   0xFD, 0x40, 0x5B, 0xD9, 0x07, 0x2B, 0xCE, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x04, 0x28, 0xCD, 0x9D, 
   0xAB, 0xEC, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF5, 0xF6, 0xFD, 0x36, 0x53, 0xD7, 
   0x08, 0x2B, 0xCE, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x0A, 0x2D, 0xCE, 0x27, 0x46, 0xD4, 0xE9, 0xEC, 0xFB, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xD4, 
   0xDA, 0xF6, 0x1C, 0x3D, 0xD2, 0x07, 0x2A, 0xCE, 0x13, 0x35, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x09, 0x2C, 0xCF, 0x08, 0x2C, 0xCE, 0x5F, 0x76, 0xDF, 0xD8, 0xDD, 0xF7, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xC8, 0xD0, 0xF4, 0x4E, 0x67, 0xDC, 0x07, 0x2B, 0xCE, 0x0B, 0x2E, 0xCF, 
   0x13, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x13, 0x35, 0xD0, 0x03, 0x27, 
   0xCD, 0x28, 0x47, 0xD4, 0xD2, 0xD8, 0xF6, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x94, 0xA3, 
   0xEA, 0x04, 0x28, 0xCD, 0x11, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x09, 0x2C, 0xCE, 0x2D, 0x4B, 0xD5, 0xF0, 
   0xF2, 0xFC, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x97, 0xA6, 0xEB, 
   0x03, 0x27, 0xCD, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x13, 0x34, 0xD0, 0x02, 0x26, 0xCC, 0x80, 0x92, 0xE6, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xB9, 0xC3, 0xF1, 0x15, 0x36, 0xD0, 0x08, 0x2B, 0xCE, 0x12, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x10, 0x32, 0xCF, 0x03, 0x27, 0xCD, 0x1E, 0x3E, 0xD2, 0x78, 0x8B, 0xE4, 0xD5, 
   0xDB, 0xF7, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xCD, 0xD4, 
   0xF5, 0x68, 0x7D, 0xE1, 0x14, 0x35, 0xD0, 0x03, 0x27, 0xCD, 0x11, 0x33, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x03, 0x27, 0xCD, 0x2E, 0x4C, 
   0xD6, 0xD4, 0xDA, 0xF6, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xDB, 0xE0, 0xF8, 0x1F, 0x3F, 
   0xD3, 0x0C, 0x2E, 0xCF, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x02, 0x26, 0xCD, 0x93, 0xA3, 0xEA, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xEB, 0xEF, 0xFC, 
   0x2A, 0x48, 0xD4, 0x0A, 0x2D, 0xCE, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x0C, 0x2F, 0xCF, 0x1A, 0x3C, 0xD2, 0xD5, 0xDB, 0xF7, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xBC, 0xC6, 0xF2, 0x22, 0x41, 0xD3, 0x06, 0x2A, 0xCE, 0x13, 0x34, 
   0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x0B, 0x2E, 0xCF, 0x00, 0x24, 0xCC, 0x18, 
   0x38, 0xD1, 0x61, 0x77, 0xDF, 0xAF, 0xBB, 0xEF, 0xE5, 0xE9, 0xFA, 0xFD, 0xFD, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFD, 0xFD, 0xFF, 0xE2, 0xE6, 0xF9, 0xA6, 0xB2, 0xED, 0x5B, 0x71, 0xDE, 0x13, 0x34, 
   0xD0, 0x01, 0x26, 0xCC, 0x0D, 0x30, 0xCF, 0x13, 0x35, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x03, 0x27, 0xCD, 0x3D, 0x5A, 0xD9, 0xDF, 0xE4, 
   0xF9, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0xFE, 0xFF, 0x59, 0x71, 0xDE, 0x02, 0x26, 
   0xCD, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x0A, 0x2C, 0xCE, 0x2E, 0x4C, 0xD5, 0xED, 0xEF, 0xFC, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0x84, 0x96, 0xE6, 0x02, 0x27, 0xCD, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x04, 0x28, 0xCD, 0x56, 0x6E, 0xDD, 0xFD, 0xFD, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xD1, 0xD7, 0xF6, 0x31, 0x4F, 0xD6, 0x01, 0x25, 
   0xCD, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x0D, 
   0x2F, 0xCF, 0x03, 0x27, 0xCD, 0x0A, 0x2E, 0xCE, 0x23, 0x43, 0xD4, 0x51, 0x6A, 0xDC, 0x80, 0x92, 
   0xE6, 0xAD, 0xB9, 0xEF, 0xD0, 0xD7, 0xF6, 0xE0, 0xE4, 0xF9, 0xED, 0xEF, 0xFB, 0xF4, 0xF6, 0xFD, 
   0xF4, 0xF6, 0xFD, 0xF4, 0xF6, 0xFD, 0xEE, 0xF0, 0xFB, 0xDF, 0xE3, 0xF9, 0xB7, 0xC2, 0xF1, 0x83, 
   0x95, 0xE6, 0x4F, 0x68, 0xDC, 0x21, 0x41, 0xD3, 0x08, 0x2B, 0xCD, 0x03, 0x27, 0xCD, 0x0E, 0x31, 
   0xCF, 0x13, 0x35, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x13, 
   0x34, 0xD0, 0x10, 0x33, 0xD0, 0x01, 0x26, 0xCD, 0x49, 0x63, 0xDB, 0xE4, 0xE8, 0xFA, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xA9, 0xB5, 0xEE, 0x08, 0x2B, 0xCE, 0x10, 0x32, 
   0xCF, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x03, 0x28, 0xCD, 0x91, 0xA1, 0xE9, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xE5, 0xE9, 0xFA, 0x26, 0x45, 0xD4, 0x0B, 0x2E, 0xCE, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x11, 0x33, 0xD0, 0x07, 0x2B, 0xCE, 0x9C, 0xAA, 
   0xEB, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xE0, 0xE5, 0xF9, 0x48, 0x63, 
   0xDB, 0x00, 0x24, 0xCC, 0x0E, 0x30, 0xCF, 0x13, 0x35, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x13, 0x34, 0xD0, 0x10, 0x33, 0xD0, 0x0C, 0x2F, 0xCF, 0x07, 0x2A, 0xCE, 0x02, 0x27, 
   0xCD, 0x0E, 0x30, 0xD0, 0x1B, 0x3B, 0xD2, 0x1F, 0x40, 0xD2, 0x29, 0x47, 0xD4, 0x3F, 0x5A, 0xD8, 
   0x3F, 0x5A, 0xD8, 0x3E, 0x5A, 0xD8, 0x2C, 0x49, 0xD5, 0x1F, 0x3F, 0xD3, 0x11, 0x33, 0xD0, 0x04, 
   0x28, 0xCD, 0x07, 0x2A, 0xCE, 0x0D, 0x2F, 0xCF, 0x11, 0x33, 0xD0, 0x13, 0x35, 0xD0, 0x12, 0x34, 
   0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x13, 0x35, 0xD0, 0x0D, 
   0x30, 0xCF, 0x01, 0x25, 0xCD, 0x61, 0x77, 0xDF, 0xEE, 0xF1, 0xFC, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xE1, 0xE6, 0xF9, 0x27, 0x46, 0xD4, 0x09, 0x2C, 0xCE, 0x12, 0x34, 
   0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x0A, 0x2D, 0xCE, 0x2C, 0x4B, 0xD6, 0xEC, 0xEE, 0xFB, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0x8A, 0x9B, 0xE8, 0x03, 0x27, 0xCD, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x0B, 0x2E, 0xCF, 0x18, 0x3A, 
   0xD1, 0xCB, 0xD2, 0xF4, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF4, 0xF6, 
   0xFD, 0x79, 0x8C, 0xE4, 0x0A, 0x2D, 0xCF, 0x07, 0x2B, 0xCD, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x10, 0x32, 0xD0, 0x0E, 0x30, 0xCF, 0x0D, 0x2F, 0xCF, 0x0C, 0x2E, 0xCF, 0x09, 0x2C, 0xCE, 
   0x09, 0x2C, 0xCE, 0x09, 0x2C, 0xCE, 0x0B, 0x2E, 0xCF, 0x0D, 0x2F, 0xCF, 0x0F, 0x32, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x06, 0x2A, 0xCD, 0x0D, 
   0x30, 0xCF, 0x88, 0x99, 0xE8, 0xFC, 0xFC, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFE, 0xFE, 0xFF, 0x5A, 0x73, 0xDE, 0x02, 0x27, 0xCD, 0x12, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x04, 0x28, 0xCD, 0x99, 0xA8, 0xEB, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xF0, 0xF2, 0xFC, 0x30, 0x4E, 0xD6, 0x09, 0x2C, 0xCE, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x13, 0x34, 0xD0, 0x05, 0x29, 
   0xCD, 0x32, 0x4F, 0xD6, 0xE9, 0xEC, 0xFB, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xB6, 0xC0, 0xF0, 0x32, 0x50, 0xD6, 0x03, 0x27, 0xCD, 0x0E, 0x30, 0xCF, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x0E, 0x31, 0xD0, 0x03, 0x27, 0xCD, 0x35, 0x52, 0xD7, 0xBA, 
   0xC4, 0xF1, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0x99, 0xA9, 0xEB, 0x04, 0x28, 0xCD, 0x10, 0x33, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x07, 0x2B, 0xCE, 0x3B, 0x56, 0xD7, 0xF4, 0xF5, 0xFD, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xA9, 0xB5, 0xEE, 0x08, 0x2B, 0xCE, 0x10, 0x33, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x13, 0x34, 
   0xD0, 0x02, 0x26, 0xCD, 0x55, 0x6D, 0xDD, 0xFA, 0xFA, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xE9, 0xEC, 0xFA, 0x73, 0x87, 0xE3, 0x0F, 0x32, 0xCF, 
   0x06, 0x29, 0xCE, 0x11, 0x33, 0xD0, 0x13, 0x35, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x13, 0x35, 0xD0, 
   0x0F, 0x31, 0xCF, 0x05, 0x29, 0xCD, 0x0C, 0x2F, 0xCF, 0x6F, 0x84, 0xE2, 0xEB, 0xED, 0xFB, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xD2, 
   0xD9, 0xF6, 0x1A, 0x3C, 0xD2, 0x0B, 0x2E, 0xCF, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x10, 0x33, 0xD0, 
   0x08, 0x2C, 0xCE, 0xB0, 0xBC, 0xEF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0xFE, 0xFF, 0x58, 0x70, 0xDE, 0x01, 0x26, 0xCD, 0x13, 
   0x35, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x11, 0x33, 0xD0, 0x04, 0x28, 0xCD, 0x7E, 0x91, 0xE6, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xC3, 0xCC, 0xF3, 
   0x49, 0x63, 0xDB, 0x03, 0x27, 0xCD, 0x07, 0x2A, 0xCE, 0x12, 0x34, 0xD0, 0x13, 0x35, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x13, 0x34, 0xD0, 0x13, 0x35, 0xD0, 0x0F, 0x32, 0xCF, 0x08, 0x2B, 0xCE, 0x00, 0x24, 0xCC, 
   0x0D, 0x2E, 0xCF, 0x48, 0x61, 0xDA, 0xBB, 0xC5, 0xF2, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF5, 0xF7, 0xFD, 0x48, 
   0x62, 0xDB, 0x06, 0x2A, 0xCE, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x02, 0x27, 0xCD, 
   0x55, 0x6E, 0xDD, 0xFE, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xDD, 0xE2, 0xF8, 0x22, 0x42, 0xD3, 0x09, 
   0x2B, 0xCE, 0x13, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x12, 0x34, 0xD0, 0x0F, 0x31, 0xCF, 0x07, 0x2B, 0xCE, 0x90, 0xA1, 0xE9, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xF9, 0xFA, 0xFE, 0x9C, 0xAB, 0xEC, 0x32, 0x4F, 0xD6, 0x02, 0x26, 0xCD, 0x08, 0x2B, 0xCE, 0x11, 
   0x33, 0xD0, 0x13, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x10, 0x32, 0xCF, 0x0D, 0x2F, 
   0xCF, 0x07, 0x2B, 0xCE, 0x00, 0x24, 0xCD, 0x0C, 0x2F, 0xCF, 0x33, 0x50, 0xD6, 0x72, 0x86, 0xE3, 
   0xBE, 0xC7, 0xF2, 0xFA, 0xFB, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x92, 0xE6, 0x04, 
   0x28, 0xCE, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x0B, 0x2F, 0xCF, 0x19, 0x39, 0xD2, 
   0xD6, 0xDB, 0xF7, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xB1, 0xBC, 0xEF, 0x0B, 
   0x2E, 0xCF, 0x0E, 0x31, 0xCF, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x0E, 0x31, 0xCF, 0x06, 0x2A, 0xCD, 0x88, 0x99, 0xE7, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xEF, 0xF1, 0xFC, 0x95, 0xA4, 0xEA, 0x30, 0x4E, 0xD6, 0x07, 
   0x2A, 0xCE, 0x05, 0x29, 0xCE, 0x0D, 0x30, 0xCF, 0x10, 0x33, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x10, 0x32, 0xD0, 0x0E, 
   0x30, 0xCF, 0x0B, 0x2E, 0xCF, 0x05, 0x28, 0xCD, 0x02, 0x27, 0xCC, 0x0C, 0x2F, 0xCE, 0x18, 0x39, 
   0xD1, 0x3C, 0x58, 0xD8, 0x77, 0x89, 0xE4, 0xBB, 0xC5, 0xF1, 0xF1, 0xF3, 0xFC, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xB0, 0xBC, 0xEF, 0x0B, 0x2E, 0xCE, 0x0E, 
   0x31, 0xCF, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x11, 0x33, 0xD0, 0x02, 0x27, 0xCD, 0x8F, 0x9F, 0xE9, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7B, 
   0x8D, 0xE5, 0x04, 0x27, 0xCD, 0x11, 0x33, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x13, 0x35, 0xD0, 0x0E, 0x30, 0xCF, 0x03, 0x28, 0xCD, 
   0x7E, 0x91, 0xE5, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xEE, 0xF1, 0xFC, 0xA5, 
   0xB2, 0xED, 0x52, 0x6A, 0xDD, 0x1C, 0x3D, 0xD2, 0x0A, 0x2D, 0xCE, 0x03, 0x27, 0xCD, 0x06, 0x2A, 
   0xCE, 0x07, 0x2B, 0xCE, 0x07, 0x2B, 0xCE, 0x07, 0x2B, 0xCE, 0x07, 0x2B, 0xCE, 0x07, 0x2B, 0xCE, 
   0x07, 0x2B, 0xCE, 0x05, 0x29, 0xCD, 0x03, 0x28, 0xCD, 0x05, 0x29, 0xCD, 0x0E, 0x31, 0xD0, 0x1A, 
   0x3A, 0xD2, 0x34, 0x51, 0xD7, 0x60, 0x77, 0xE0, 0x83, 0x95, 0xE6, 0xAC, 0xB8, 0xEE, 0xD8, 0xDE, 
   0xF7, 0xF5, 0xF6, 0xFD, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xD7, 0xDD, 0xF7, 0x1E, 0x3E, 0xD2, 0x09, 0x2C, 0xCE, 0x13, 
   0x35, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x06, 0x2A, 0xCE, 0x44, 0x5F, 0xDA, 0xF6, 0xF8, 0xFD, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF6, 
   0xF7, 0xFD, 0x50, 0x69, 0xDC, 0x03, 0x27, 0xCD, 0x13, 0x35, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x13, 0x35, 0xD0, 0x0E, 0x31, 0xCF, 
   0x04, 0x28, 0xCD, 0x71, 0x85, 0xE3, 0xF8, 0xF9, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xDD, 0xE2, 0xF8, 0xA6, 0xB3, 0xEE, 0x7B, 0x8D, 0xE5, 0x5B, 0x72, 
   0xDF, 0x54, 0x6D, 0xDD, 0x55, 0x6D, 0xDE, 0x55, 0x6D, 0xDE, 0x55, 0x6D, 0xDE, 0x55, 0x6D, 0xDE, 
   0x56, 0x6E, 0xDE, 0x6B, 0x80, 0xE2, 0x75, 0x89, 0xE4, 0x8F, 0xA0, 0xE9, 0xB0, 0xBB, 0xF0, 0xD7, 
   0xDD, 0xF7, 0xF2, 0xF4, 0xFC, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xE1, 0xE6, 0xF9, 0x38, 0x55, 0xD8, 0x05, 0x29, 0xCD, 0x13, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x12, 0x34, 0xD0, 0x0E, 0x30, 0xCF, 0x11, 0x34, 0xD0, 0xC8, 0xD0, 0xF4, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xDF, 0xE4, 0xF8, 0x25, 0x44, 0xD4, 0x06, 0x29, 0xCD, 0x13, 0x35, 0xD0, 0x12, 0x34, 
   0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x10, 0x32, 0xD0, 0x04, 0x28, 0xCD, 0x5C, 0x73, 0xDF, 0xEA, 0xED, 0xFB, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0xFE, 
   0xFF, 0xFB, 0xFC, 0xFE, 0xFC, 0xFC, 0xFE, 0xFC, 0xFC, 0xFE, 0xFC, 0xFC, 0xFE, 0xFB, 0xFC, 0xFE, 
   0xFC, 0xFC, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xE1, 0xE6, 0xF9, 0x3C, 0x58, 0xD8, 0x04, 0x28, 0xCD, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x12, 0x34, 0xD0, 0x02, 0x26, 0xCD, 0x7A, 0x8E, 0xE5, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xC4, 0xCC, 0xF3, 0x17, 0x38, 0xD1, 0x07, 0x2A, 0xCE, 0x13, 0x34, 
   0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x11, 0x33, 0xD0, 0x01, 0x26, 0xCD, 0x3A, 0x57, 0xD8, 0xD4, 0xDA, 0xF6, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xD7, 0xDC, 0xF7, 
   0x32, 0x50, 0xD6, 0x04, 0x28, 0xCD, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x13, 0x35, 
   0xD0, 0x05, 0x29, 0xCD, 0x37, 0x53, 0xD7, 0xEF, 0xF1, 0xFC, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xB6, 0xC0, 0xF0, 0x19, 0x3A, 0xD2, 0x06, 0x29, 
   0xCE, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x03, 0x27, 0xCD, 0x1E, 0x3E, 0xD3, 0xB1, 
   0xBC, 0xF0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xC4, 0xCC, 0xF3, 0x28, 0x46, 0xD4, 
   0x03, 0x27, 0xCD, 0x13, 0x35, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x0A, 0x2D, 
   0xCF, 0x19, 0x3A, 0xD1, 0xCB, 0xD3, 0xF5, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xCB, 0xD3, 0xF5, 0x34, 0x51, 
   0xD7, 0x03, 0x27, 0xCE, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x13, 0x35, 0xD0, 0x09, 0x2C, 0xCE, 0x0C, 
   0x2F, 0xCF, 0x80, 0x92, 0xE6, 0xF7, 0xF8, 0xFD, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xA3, 0xB0, 0xEC, 0x17, 0x39, 0xD1, 0x06, 0x2A, 0xCE, 
   0x13, 0x35, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x0E, 0x30, 0xCF, 0x09, 0x2C, 
   0xCF, 0xA2, 0xB0, 0xED, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xE5, 0xE9, 
   0xFA, 0x51, 0x69, 0xDC, 0x01, 0x26, 0xCD, 0x11, 0x33, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x13, 0x35, 0xD0, 0x0E, 
   0x31, 0xCF, 0x06, 0x29, 0xCD, 0x4C, 0x65, 0xDC, 0xD0, 0xD6, 0xF6, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xDE, 0xE3, 0xF9, 0x6C, 0x82, 0xE2, 0x0C, 0x2F, 0xCF, 0x0B, 0x2E, 0xCE, 0x13, 0x35, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x0F, 0x31, 0xD0, 0x03, 0x27, 0xCD, 0x88, 0x98, 
   0xE8, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xF4, 0xF5, 0xFC, 0x5C, 0x73, 0xDE, 0x00, 0x23, 0xCC, 0x11, 0x33, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x11, 0x33, 0xD0, 0x05, 0x28, 0xCE, 0x18, 0x39, 0xD1, 0x88, 0x99, 0xE7, 0xF3, 0xF5, 
   0xFD, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xED, 0xF0, 0xFB, 0x91, 0xA2, 
   0xE9, 0x25, 0x44, 0xD4, 0x03, 0x27, 0xCD, 0x0F, 0x32, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x10, 0x32, 0xD0, 0x02, 0x26, 0xCC, 0x73, 0x88, 0xE4, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xF4, 0xF5, 0xFD, 0x63, 0x7A, 0xE0, 0x00, 0x25, 0xCD, 0x0D, 0x2F, 0xCF, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x13, 0x34, 0xD0, 0x0C, 0x2F, 0xCF, 0x00, 0x26, 0xCD, 0x3C, 0x58, 
   0xD9, 0xB7, 0xC1, 0xF1, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xE9, 0xEC, 0xFB, 0x93, 0xA3, 0xEA, 0x31, 0x4F, 0xD6, 0x03, 0x26, 
   0xCC, 0x09, 0x2D, 0xCE, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x13, 
   0x34, 0xD0, 0x0E, 0x31, 0xCF, 0x02, 0x26, 0xCD, 0x78, 0x8B, 0xE3, 0xFC, 0xFC, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFA, 0xFA, 0xFE, 0x7D, 0x8F, 0xE5, 0x13, 0x35, 0xD0, 
   0x08, 0x2B, 0xCE, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x13, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x04, 0x28, 
   0xCD, 0x0B, 0x2E, 0xCE, 0x63, 0x79, 0xE0, 0xD4, 0xDA, 0xF7, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xD8, 
   0xDE, 0xF7, 0x83, 0x94, 0xE6, 0x2B, 0x49, 0xD5, 0x03, 0x27, 0xCD, 0x07, 0x2B, 0xCE, 0x12, 0x34, 
   0xD0, 0x13, 0x35, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x13, 0x34, 0xD0, 0x09, 
   0x2C, 0xCE, 0x0B, 0x2E, 0xCF, 0x86, 0x97, 0xE7, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xC3, 0xCC, 0xF3, 
   0x31, 0x4F, 0xD6, 0x00, 0x24, 0xCC, 0x0F, 0x31, 0xCF, 0x13, 0x35, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x13, 0x35, 
   0xD0, 0x0F, 0x31, 0xCF, 0x02, 0x26, 0xCD, 0x1C, 0x3C, 0xD1, 0x7D, 0x8F, 0xE6, 0xDE, 0xE3, 0xF8, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xE7, 0xEB, 0xFB, 0xAA, 0xB6, 0xEE, 0x61, 0x78, 0xDF, 0x1C, 
   0x3E, 0xD2, 0x03, 0x27, 0xCD, 0x09, 0x2D, 0xCE, 0x11, 0x34, 0xD0, 0x13, 0x35, 0xD0, 0x12, 0x34, 
   0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x13, 0x35, 0xD0, 0x11, 0x33, 0xD0, 0x02, 0x26, 0xCD, 0x20, 
   0x3F, 0xD3, 0xA8, 0xB5, 0xEE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xE5, 0xE9, 0xFA, 0x64, 0x7A, 0xE0, 0x09, 0x2C, 0xCE, 0x05, 0x29, 0xCD, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x0D, 0x2F, 0xCF, 0x03, 0x27, 0xCD, 0x26, 0x44, 0xD3, 
   0x7C, 0x8F, 0xE5, 0xD6, 0xDC, 0xF7, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF4, 0xF5, 0xFD, 0xD8, 0xDD, 0xF7, 
   0xA0, 0xAE, 0xEC, 0x64, 0x7B, 0xE1, 0x28, 0x47, 0xD4, 0x0A, 0x2D, 0xCE, 0x04, 0x28, 0xCD, 0x0D, 
   0x30, 0xCF, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x13, 0x35, 0xD0, 0x0B, 0x2E, 0xCF, 0x02, 0x26, 0xCD, 0x4D, 0x66, 0xDC, 0xD6, 
   0xDB, 0xF7, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xB3, 0xBD, 0xF0, 0x34, 0x51, 0xD7, 0x03, 0x27, 0xCD, 0x0F, 
   0x31, 0xCF, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x0B, 0x2D, 0xCE, 
   0x02, 0x27, 0xCD, 0x1A, 0x3A, 0xD2, 0x5C, 0x72, 0xDE, 0x9C, 0xA9, 0xEC, 0xD3, 0xD9, 0xF7, 0xEF, 
   0xF1, 0xFC, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF8, 0xF9, 0xFE, 0xE8, 0xEB, 0xFB, 0xD2, 0xD8, 
   0xF6, 0xB1, 0xBB, 0xEF, 0x8F, 0x9E, 0xE9, 0x6A, 0x7F, 0xE1, 0x3D, 0x59, 0xD8, 0x18, 0x39, 0xD1, 
   0x06, 0x2A, 0xCD, 0x03, 0x27, 0xCD, 0x0B, 0x2E, 0xCF, 0x11, 0x32, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x10, 0x32, 0xD0, 0x02, 0x27, 0xCD, 0x19, 0x3A, 0xD1, 0x93, 0xA2, 0xEA, 0xFA, 0xFA, 0xFE, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xEC, 0xEF, 0xFB, 0x78, 0x8B, 0xE5, 0x0D, 
   0x30, 0xCF, 0x08, 0x2B, 0xCE, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x0D, 0x2F, 0xCF, 0x02, 0x26, 0xCC, 0x05, 0x29, 0xCE, 0x15, 0x35, 0xD1, 0x30, 
   0x4C, 0xD6, 0x59, 0x71, 0xDE, 0x82, 0x93, 0xE6, 0xAE, 0xBA, 0xEF, 0xDD, 0xE2, 0xF8, 0xEC, 0xEE, 
   0xFB, 0xF2, 0xF4, 0xFD, 0xF8, 0xF9, 0xFE, 0xFC, 0xFC, 0xFF, 0xFC, 0xFC, 0xFF, 0xF6, 0xF8, 0xFD, 
   0xF2, 0xF3, 0xFC, 0xEC, 0xEF, 0xFB, 0xDF, 0xE4, 0xF9, 0xD0, 0xD6, 0xF6, 0xBC, 0xC5, 0xF2, 0xA4, 
   0xB1, 0xEE, 0x89, 0x99, 0xE7, 0x6A, 0x80, 0xE2, 0x45, 0x60, 0xDA, 0x25, 0x43, 0xD3, 0x14, 0x35, 
   0xD1, 0x0B, 0x2E, 0xCF, 0x03, 0x26, 0xCD, 0x01, 0x25, 0xCC, 0x07, 0x2A, 0xCE, 0x0D, 0x30, 0xCF, 
   0x11, 0x33, 0xD0, 0x13, 0x35, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x08, 0x2C, 0xCE, 
   0x09, 0x2D, 0xCF, 0x5A, 0x71, 0xDE, 0xD3, 0xD9, 0xF6, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xAF, 
   0xBA, 0xEF, 0x2F, 0x4D, 0xD6, 0x03, 0x27, 0xCD, 0x09, 0x2D, 0xCE, 0x12, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x13, 0x35, 0xD0, 0x11, 0x34, 0xD0, 0x0D, 0x30, 0xCF, 0x09, 
   0x2C, 0xCE, 0x04, 0x27, 0xCD, 0x01, 0x25, 0xCC, 0x0C, 0x2F, 0xCF, 0x1B, 0x3B, 0xD1, 0x26, 0x45, 
   0xD4, 0x39, 0x56, 0xD8, 0x4A, 0x63, 0xDB, 0x55, 0x6C, 0xDD, 0x55, 0x6D, 0xDE, 0x45, 0x60, 0xDA, 
   0x38, 0x55, 0xD7, 0x26, 0x46, 0xD4, 0x1C, 0x3C, 0xD2, 0x17, 0x38, 0xD1, 0x10, 0x33, 0xD0, 0x0A, 
   0x2D, 0xCF, 0x02, 0x26, 0xCC, 0x02, 0x26, 0xCD, 0x07, 0x2A, 0xCE, 0x0B, 0x2E, 0xCE, 0x0D, 0x30, 
   0xCF, 0x10, 0x32, 0xD0, 0x12, 0x34, 0xD0, 0x13, 0x35, 0xD0, 0x13, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x0A, 0x2D, 0xCF, 0x01, 0x25, 0xCD, 0x36, 0x53, 0xD7, 
   0xAC, 0xB8, 0xEF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xEA, 0xED, 0xFB, 0x8F, 0x9F, 0xE9, 0x27, 0x45, 0xD4, 0x01, 0x25, 0xCC, 0x0B, 0x2F, 
   0xCF, 0x13, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x13, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x10, 0x32, 0xD0, 0x0D, 0x30, 0xCF, 0x0C, 0x2F, 
   0xCF, 0x09, 0x2D, 0xCE, 0x08, 0x2B, 0xCE, 0x07, 0x2A, 0xCE, 0x07, 0x2A, 0xCE, 0x08, 0x2C, 0xCE, 
   0x0A, 0x2D, 0xCE, 0x0C, 0x2F, 0xCF, 0x0D, 0x30, 0xCF, 0x0E, 0x31, 0xCF, 0x0F, 0x32, 0xCF, 0x11, 
   0x33, 0xD0, 0x12, 0x34, 0xD0, 0x13, 0x35, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x13, 0x35, 0xD0, 0x12, 0x34, 
   0xD0, 0x0A, 0x2D, 0xCE, 0x00, 0x24, 0xCC, 0x22, 0x42, 0xD3, 0x81, 0x94, 0xE6, 0xEB, 0xEE, 0xFB, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xE4, 0xE8, 0xFA, 0x78, 0x8B, 0xE4, 0x1A, 0x39, 
   0xD1, 0x01, 0x25, 0xCD, 0x0B, 0x2E, 0xCF, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x0F, 0x31, 0xCF, 0x06, 0x2A, 0xCE, 0x01, 0x26, 
   0xCD, 0x22, 0x41, 0xD3, 0x79, 0x8C, 0xE4, 0xE0, 0xE4, 0xF9, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xD8, 0xDD, 
   0xF7, 0x76, 0x8A, 0xE4, 0x1F, 0x3F, 0xD3, 0x03, 0x27, 0xCD, 0x0B, 0x2E, 0xCF, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x0F, 
   0x32, 0xCF, 0x09, 0x2C, 0xCE, 0x04, 0x28, 0xCD, 0x12, 0x34, 0xD0, 0x3F, 0x5A, 0xD9, 0x8D, 0x9D, 
   0xE8, 0xE2, 0xE6, 0xF9, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xDA, 0xDF, 0xF8, 0x7E, 0x91, 0xE6, 0x26, 0x44, 0xD4, 0x04, 0x28, 0xCD, 
   0x09, 0x2C, 0xCE, 0x0F, 0x32, 0xCF, 0x12, 0x34, 0xD0, 0x13, 0x35, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x13, 0x35, 0xD0, 0x11, 0x34, 0xD0, 0x0E, 0x30, 0xCF, 0x08, 0x2B, 0xCE, 0x03, 0x27, 0xCD, 0x11, 
   0x34, 0xD0, 0x3C, 0x58, 0xD8, 0x81, 0x93, 0xE6, 0xC8, 0xD0, 0xF4, 0xF7, 0xF8, 0xFD, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xE1, 0xE5, 0xF9, 0x88, 0x99, 0xE7, 
   0x33, 0x51, 0xD7, 0x0D, 0x30, 0xCF, 0x01, 0x25, 0xCC, 0x05, 0x29, 0xCD, 0x0B, 0x2E, 0xCF, 0x0F, 
   0x32, 0xCF, 0x12, 0x34, 0xD0, 0x13, 0x35, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 
   0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 
   0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x13, 0x34, 
   0xD0, 0x13, 0x35, 0xD0, 0x12, 0x34, 0xD0, 0x0F, 0x32, 0xCF, 0x0C, 0x2F, 0xCF, 0x07, 0x2B, 0xCE, 
   0x01, 0x25, 0xCC, 0x04, 0x27, 0xCD, 0x15, 0x36, 0xD0, 0x3E, 0x59, 0xD8, 0x7E, 0x91, 0xE5, 0xC3, 
   0xCB, 0xF3, 0xF5, 0xF7, 0xFD, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xF0, 0xF2, 0xFC, 0xBD, 0xC7, 0xF2, 0x81, 0x92, 0xE5, 0x4B, 0x66, 0xDB, 0x21, 0x3F, 0xD2, 0x0C, 
   0x2F, 0xCF, 0x01, 0x26, 0xCD, 0x04, 0x28, 0xCD, 0x09, 0x2C, 0xCE, 0x0D, 0x2F, 0xCF, 0x0F, 0x31, 
   0xCF, 0x11, 0x33, 0xD0, 0x13, 0x35, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 
   0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x12, 0x34, 0xD0, 0x10, 0x33, 0xD0, 0x10, 0x32, 0xD0, 0x0E, 
   0x31, 0xCF, 0x0D, 0x30, 0xCF, 0x0C, 0x2F, 0xCF, 0x0B, 0x2E, 0xCF, 0x08, 0x2B, 0xCE, 0x04, 0x29, 
   0xCD, 0x01, 0x25, 0xCD, 0x01, 0x24, 0xCC, 0x0D, 0x30, 0xCF, 0x1D, 0x3B, 0xD2, 0x3C, 0x58, 0xD9, 
   0x66, 0x7B, 0xE1, 0x96, 0xA4, 0xEA, 0xD0, 0xD7, 0xF5, 0xF5, 0xF6, 0xFD, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFC, 0xFC, 0xFE, 0xE4, 0xE8, 0xFA, 0xBC, 
   0xC5, 0xF2, 0x7B, 0x8E, 0xE5, 0x4E, 0x68, 0xDC, 0x30, 0x4E, 0xD6, 0x1A, 0x3A, 0xD1, 0x0F, 0x32, 
   0xCF, 0x05, 0x29, 0xCD, 0x00, 0x24, 0xCC, 0x00, 0x25, 0xCC, 0x00, 0x25, 0xCC, 0x00, 0x25, 0xCC, 
   0x00, 0x25, 0xCC, 0x00, 0x25, 0xCC, 0x03, 0x27, 0xCD, 0x08, 0x2B, 0xCE, 0x0C, 0x2F, 0xCF, 0x12, 
   0x34, 0xD0, 0x17, 0x39, 0xD1, 0x1C, 0x3C, 0xD1, 0x24, 0x42, 0xD3, 0x38, 0x54, 0xD8, 0x51, 0x6A, 
   0xDC, 0x6D, 0x81, 0xE2, 0x8A, 0x9A, 0xE8, 0xB9, 0xC3, 0xF1, 0xE0, 0xE4, 0xF9, 0xF4, 0xF6, 0xFD, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFB, 0xFC, 0xFE, 0xED, 0xF0, 0xFC, 0xDC, 0xE1, 0xF8, 0xBC, 0xC6, 
   0xF1, 0x96, 0xA5, 0xEA, 0x82, 0x94, 0xE6, 0x84, 0x96, 0xE7, 0x84, 0x96, 0xE7, 0x84, 0x96, 0xE7, 
   0x84, 0x96, 0xE7, 0x82, 0x95, 0xE7, 0x8E, 0x9D, 0xE9, 0x9F, 0xAD, 0xEC, 0xB0, 0xBC, 0xEF, 0xC5, 
   0xCE, 0xF4, 0xD7, 0xDD, 0xF7, 0xE2, 0xE6, 0xF9, 0xE7, 0xEA, 0xFA, 0xF0, 0xF2, 0xFC, 0xFB, 0xFC, 
   0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 
};

static RESOURCEDATA g_rd_texture(TEXT(MODULE_STRING), TEXT("texture.bmp"), g_texture, sizeof(g_texture));

extern "C" LPVOID PREPEND_MODULE(_texture) = (LPVOID)&g_rd_texture;
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\test\directx\d3d\func\ball\ball.h ===
/*******************************************************************************

Copyright (c) 2000 Microsoft Corporation.  All rights reserved.

File Name:

    ball.h

*******************************************************************************/

#ifndef __Ball_h__
#define __Ball_h__

struct D3DVERTEXB1
{
    D3DVALUE    x, y, z;
    D3DVALUE    k1;
    D3DVALUE    nx, ny, nz;
    D3DVALUE    tu, tv;
};

struct D3DVERTEXB2
{
    D3DVALUE    x, y, z;
    D3DVALUE    k1, k2;
    D3DVALUE    nx, ny, nz;
    D3DVALUE    tu, tv;
};

struct D3DVERTEXB3
{
    D3DVALUE    x, y, z;
    D3DVALUE    k1, k2, k3;
    D3DVALUE    nx, ny, nz;
    D3DVALUE    tu, tv;
};

const int D3DFVF_VERTEXB1 = D3DFVF_XYZB1 | D3DFVF_NORMAL | D3DFVF_TEX1; 
const int D3DFVF_VERTEXB2 = D3DFVF_XYZB2 | D3DFVF_NORMAL | D3DFVF_TEX1; 
const int D3DFVF_VERTEXB3 = D3DFVF_XYZB3 | D3DFVF_NORMAL | D3DFVF_TEX1; 

class Ball : public CD3DTest
{
public:
    Ball();
    ~Ball();

	virtual UINT TestInitialize(void);
	virtual bool ExecuteTest(UINT);
	virtual void SceneRefresh(void);
	virtual bool ProcessFrame(void);
    virtual void TestCompleted(void);
    virtual bool TestTerminate(void);

	virtual bool SetDefaultMatrices(void);
	virtual bool SetDefaultMaterials(void);
	virtual bool SetDefaultLightStates(void);
	virtual bool SetDefaultRenderStates(void);
	virtual bool SetDefaultLights(void);

private:
//	CMaterial*		m_pMaterial;
//	CLight*			m_pLight;
	CTexture8*		m_pChainTexture;
	CTexture8*		m_pLogoTexture;
	CTexture8*		m_pWallTexture;

    D3DVERTEXB1*    m_pSphereVerticesB1;
    DWORD           m_dwSphereVertices;
    WORD*           m_pSphereIndices;
    DWORD           m_dwSphereIndices;

    D3DVERTEXB1*    m_pBoxVerticesB1;
    D3DVERTEXB2*    m_pBoxVerticesB2;
    D3DVERTEXB3*    m_pBoxVerticesB3;
    DWORD           m_dwBoxVertices;

    D3DVERTEXB1*    m_pVerticesB1;
    D3DVERTEXB2*    m_pVerticesB2;
    D3DVERTEXB3*    m_pVerticesB3;

    D3DTLVERTEX*    m_pWallVertices;

    DWORD           m_dwTranslations;
    DWORD           m_dwMatrixModes;
    DWORD           m_dwRasterModes;
    DWORD           m_dwTotalTests;
    
    DWORD           m_dwCurrentTestNumber;
    DWORD           m_dwCurrentTranslation;
    DWORD           m_dwCurrentMatrixMode;
    DWORD           m_dwCurrentRasterMode;
    DWORD           m_dwNumFailed;

    D3DMATRIX       GenerateSphereModelMatrix(DWORD dwFrame, DWORD nMatrix);
    D3DMATRIX       GenerateBoxModelMatrix(DWORD dwFrame, DWORD nMatrix);

};

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\test\directx\d3d\func\ball\default.cpp ===
#include "..\..\inc\d3dlocus.h"
#include "..\..\inc\dxlegacy.h"
#include "..\..\inc\cd3dtest.h"
#include "..\..\inc\3dmath.h"
#include "ball.h"

bool Ball::SetDefaultMatrices(void) {
    D3DMATRIX           Matrix;
    // We need to be far from scane to receive correct specular highlights
	D3DVECTOR           from = cD3DVECTOR(0.0f, 0.0f, 1.0f); 
    D3DVECTOR	        at = cD3DVECTOR(0.0f, 0.0f, 0.0f);
    D3DVECTOR	        up = cD3DVECTOR(0.0f, 1.0f, 0.0f);
    float				fWidth = 100.f;
	float				fHeight = 100.f;
	float               fZn = 0.1f;
	float               fZf = 2.f;

    
	// Projection matrix
	Matrix = OrthoMatrix(2.f, 2.f, fZn, fZf);
//	Matrix = OrthoMatrix(2.f, 2.f * ((float)m_pDisplay->GetHeight() / (float)m_pDisplay->GetWidth()), fZn, fZf);
//	Matrix = OrthoMatrix(2.f * ((float)m_pDisplay->GetWidth() / (float)m_pDisplay->GetHeight()), 2.f, fZn, fZf);
//	m_mProjectionMatrix = ProjectionMatrix(pi/4, 1.f, fZn, fZf);
	if (!SetTransform(D3DTRANSFORMSTATE_PROJECTION,&Matrix))
		return false;

    Matrix = IdentityMatrix();
    if (!SetTransform(D3DTRANSFORMSTATE_WORLD,&Matrix))
        return false;

	Matrix = ViewMatrix(from, at, up);
    if (!SetTransform(D3DTRANSFORMSTATE_VIEW,&Matrix))
        return false;

    return true;
}

bool Ball::SetDefaultMaterials(void) {
    D3DMATERIAL8         Material;
    HRESULT              hr;

    ZeroMemory(&Material,sizeof(D3DMATERIAL8));
    Material.Diffuse.r  = 1.0f;
    Material.Diffuse.g  = 1.0f;
    Material.Diffuse.b  = 1.0f;
    Material.Diffuse.a  = 1.0f;

    Material.Ambient.r  = 1.0f;
    Material.Ambient.g  = 1.0f;
    Material.Ambient.b  = 1.0f;
    Material.Ambient.a  = 1.0f;

    Material.Specular.r = 1.0f;
    Material.Specular.g = 1.0f;
    Material.Specular.b = 1.0f;
    Material.Specular.a = 1.0f;

    Material.Emissive.r = 0.0f;
    Material.Emissive.g = 0.0f;
    Material.Emissive.b = 0.0f;
    Material.Emissive.a = 0.0f;

    Material.Power      = 20.0f;

    hr = m_pDevice->SetMaterial(&Material);
    return (hr == D3D_OK);
}


bool Ball::SetDefaultLights(void) {
    D3DLIGHT8   Light;
	D3DVECTOR	vLightPos = cD3DVECTOR(0.f, 0.f, 500.f);
	D3DVECTOR	vLightDir = cD3DVECTOR(0.f, -0.707f, -0.707f);
    HRESULT     hr;

	ZeroMemory(&Light,sizeof(D3DLIGHT8));

	Light.Type              = D3DLIGHT_DIRECTIONAL;
	Light.Diffuse.r		    = 0.7f;
	Light.Diffuse.g		    = 0.7f;
	Light.Diffuse.b		    = 0.7f;
	Light.Diffuse.a		    = 1.0f;
	Light.Specular.r		= 0.0f;
	Light.Specular.g		= 0.0f;
	Light.Specular.b		= 1.0f;
	Light.Specular.a		= 1.0f;
	Light.Position		    = vLightPos;
	Light.Direction	    	= vLightDir;
	Light.Range             = D3DLIGHT_RANGE_MAX;
	Light.Attenuation0      = 0.f;
	Light.Attenuation1      = 0.f;
	Light.Attenuation2      = 0.f;
    Light.Theta			    = pi/50;
    Light.Phi				= pi/20;

    hr = m_pDevice->SetLight(0, &Light);
    if (FAILED(hr)) {
        return false;
    }

    hr = m_pDevice->LightEnable(0, TRUE);
	
	return (hr == D3D_OK);
}


bool Ball::SetDefaultLightStates(void) {
	SetRenderState(D3DRENDERSTATE_AMBIENT,RGB_MAKE(90,90,90));
	SetRenderState(D3DRENDERSTATE_LOCALVIEWER,(DWORD)TRUE);
#ifndef UNDER_XBOX
	SetRenderState(D3DRENDERSTATE_CLIPPING, (DWORD)TRUE);
#endif // !UNDER_XBOX
    return true;
}


bool Ball::SetDefaultRenderStates(void) {
#ifndef UNDER_XBOX
	SetRenderState(D3DRENDERSTATE_LASTPIXEL, (DWORD)TRUE);
#endif // !UNDER_XBOX
	SetRenderState(D3DRENDERSTATE_ALPHABLENDENABLE, (DWORD)FALSE);
	SetRenderState(D3DRENDERSTATE_SRCBLEND, (DWORD)D3DBLEND_SRCALPHA);
	SetRenderState(D3DRENDERSTATE_DESTBLEND, (DWORD)D3DBLEND_ZERO);
	SetRenderState(D3DRENDERSTATE_LIGHTING, (DWORD)TRUE);
	SetRenderState(D3DRENDERSTATE_NORMALIZENORMALS, (DWORD)TRUE);
	SetTextureStageState(0, D3DTSS_ADDRESSU, (DWORD)D3DTADDRESS_MIRROR);
	SetTextureStageState(0, D3DTSS_ADDRESSV, (DWORD)D3DTADDRESS_MIRROR);
    if (KeySet("WIREFRAME"))
        SetRenderState(D3DRENDERSTATE_FILLMODE, (DWORD)D3DFILL_WIREFRAME);
	return true;
}
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\test\directx\d3d\func\ball\modulex.h ===
#define PREPEND_MODULE(Suffix) ball##Suffix
#define MODULE_STRING "ball"
#pragma comment(linker, "/include:_ball_ExhibitScene@8")
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\test\directx\d3d\func\alphpal1\media\texture8.bmp.cpp ===
/*******************************************************************************

Copyright (c) 2000 Microsoft Corporation.  All rights reserved.

File Name:

    texture8.bmp.cpp

Description

    Data file for the resource texture8.bmp.

*******************************************************************************/

#include "d3dlocus.h"

static BYTE g_texture8[] = {

   0x42, 0x4D, 0x38, 0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x04, 0x00, 0x00, 0x28, 0x00, 
   0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x01, 0x00, 0x08, 0x00, 0x00, 0x00, 
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x12, 0x0B, 0x00, 0x00, 0x12, 0x0B, 0x00, 0x00, 0x00, 0x00, 
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0x5A, 0x5A, 0x5A, 0x00, 0x63, 0x63, 
   0x63, 0x00, 0x8C, 0x8C, 0x8C, 0x00, 0x9C, 0x9C, 0x9C, 0x00, 0xAD, 0xAD, 0xAD, 0x00, 0xB5, 0xB5, 
   0xB5, 0x00, 0xC6, 0xC6, 0xC6, 0x00, 0xD6, 0xD6, 0xD6, 0x00, 0xD6, 0xD6, 0xDE, 0x00, 0xA5, 0xA5, 
   0xAD, 0x00, 0xAD, 0xAD, 0xB5, 0x00, 0xBD, 0xBD, 0xC6, 0x00, 0x8C, 0x8C, 0x94, 0x00, 0x7B, 0x7B, 
   0x84, 0x00, 0x73, 0x73, 0x84, 0x00, 0x52, 0x52, 0x63, 0x00, 0x73, 0x73, 0xCE, 0x00, 0x39, 0x39, 
   0x6B, 0x00, 0x73, 0x73, 0xF7, 0x00, 0x4A, 0x4A, 0xB5, 0x00, 0x31, 0x31, 0x84, 0x00, 0x42, 0x42, 
   0xC6, 0x00, 0x52, 0x52, 0xF7, 0x00, 0x42, 0x42, 0xDE, 0x00, 0x31, 0x31, 0xC6, 0x00, 0x31, 0x31, 
   0xD6, 0x00, 0x29, 0x29, 0xDE, 0x00, 0x21, 0x21, 0xB5, 0x00, 0x21, 0x21, 0xC6, 0x00, 0x18, 0x18, 
   0x94, 0x00, 0x21, 0x21, 0xE7, 0x00, 0x18, 0x18, 0xDE, 0x00, 0x18, 0x18, 0xF7, 0x00, 0x10, 0x10, 
   0xBD, 0x00, 0x10, 0x10, 0xFF, 0x00, 0x08, 0x08, 0xF7, 0x00, 0x08, 0x08, 0xFF, 0x00, 0x00, 0x00, 
   0xFF, 0x00, 0x18, 0x21, 0xDE, 0x00, 0x08, 0x10, 0x94, 0x00, 0x31, 0x39, 0x9C, 0x00, 0x29, 0x31, 
   0x7B, 0x00, 0x63, 0x6B, 0xA5, 0x00, 0x39, 0x42, 0x84, 0x00, 0x94, 0x9C, 0xC6, 0x00, 0x31, 0x42, 
   0x7B, 0x00, 0x42, 0x4A, 0x63, 0x00, 0x6B, 0x73, 0x84, 0x00, 0x4A, 0x52, 0x63, 0x00, 0x73, 0x7B, 
   0x84, 0x00, 0x52, 0x5A, 0x63, 0x00, 0x63, 0x73, 0x84, 0x00, 0x31, 0x39, 0x42, 0x00, 0x84, 0x8C, 
   0x94, 0x00, 0x6B, 0x73, 0x7B, 0x00, 0x63, 0x6B, 0x73, 0x00, 0x4A, 0x52, 0x5A, 0x00, 0x42, 0x4A, 
   0x52, 0x00, 0x73, 0x84, 0x94, 0x00, 0x7B, 0x94, 0xAD, 0x00, 0x4A, 0x63, 0x7B, 0x00, 0x9C, 0xA5, 
   0xAD, 0x00, 0x5A, 0x63, 0x6B, 0x00, 0x39, 0x42, 0x4A, 0x00, 0x63, 0x7B, 0x8C, 0x00, 0x5A, 0x73, 
   0x84, 0x00, 0x6B, 0x84, 0x94, 0x00, 0x52, 0x6B, 0x7B, 0x00, 0x4A, 0x5A, 0x63, 0x00, 0x6B, 0x8C, 
   0x9C, 0x00, 0x5A, 0x7B, 0x8C, 0x00, 0x39, 0x4A, 0x52, 0x00, 0x6B, 0x84, 0x8C, 0x00, 0x52, 0x6B, 
   0x73, 0x00, 0x73, 0x7B, 0x7B, 0x00, 0x7B, 0x84, 0x84, 0x00, 0x63, 0x6B, 0x6B, 0x00, 0x42, 0x4A, 
   0x4A, 0x00, 0x73, 0x84, 0x84, 0x00, 0x6B, 0x7B, 0x7B, 0x00, 0x39, 0x42, 0x42, 0x00, 0x52, 0x63, 
   0x63, 0x00, 0x42, 0x52, 0x52, 0x00, 0x39, 0x4A, 0x42, 0x00, 0x31, 0x39, 0x31, 0x00, 0x73, 0x73, 
   0x6B, 0x00, 0x39, 0x39, 0x31, 0x00, 0x31, 0x31, 0x29, 0x00, 0x42, 0x31, 0x18, 0x00, 0x8C, 0x84, 
   0x7B, 0x00, 0x4A, 0x42, 0x39, 0x00, 0x39, 0x31, 0x29, 0x00, 0x31, 0x29, 0x21, 0x00, 0x4A, 0x39, 
   0x29, 0x00, 0x18, 0x10, 0x08, 0x00, 0x42, 0x39, 0x31, 0x00, 0x84, 0x5A, 0x39, 0x00, 0x7B, 0x52, 
   0x31, 0x00, 0x63, 0x39, 0x18, 0x00, 0x5A, 0x31, 0x10, 0x00, 0x5A, 0x39, 0x21, 0x00, 0x63, 0x4A, 
   0x39, 0x00, 0x63, 0x31, 0x10, 0x00, 0x6B, 0x52, 0x42, 0x00, 0x6B, 0x42, 0x29, 0x00, 0x52, 0x42, 
   0x39, 0x00, 0x31, 0x21, 0x18, 0x00, 0x63, 0x39, 0x21, 0x00, 0x5A, 0x4A, 0x42, 0x00, 0x94, 0x73, 
   0x63, 0x00, 0x6B, 0x4A, 0x39, 0x00, 0x73, 0x42, 0x29, 0x00, 0x6B, 0x39, 0x21, 0x00, 0x84, 0x73, 
   0x6B, 0x00, 0x6B, 0x5A, 0x52, 0x00, 0x63, 0x52, 0x4A, 0x00, 0x4A, 0x39, 0x31, 0x00, 0x42, 0x31, 
   0x29, 0x00, 0x21, 0x10, 0x08, 0x00, 0x94, 0x6B, 0x5A, 0x00, 0x8C, 0x63, 0x52, 0x00, 0x84, 0x5A, 
   0x4A, 0x00, 0x9C, 0x84, 0x7B, 0x00, 0x9C, 0x6B, 0x5A, 0x00, 0xE7, 0xCE, 0xC6, 0x00, 0xA5, 0x8C, 
   0x84, 0x00, 0x84, 0x6B, 0x63, 0x00, 0x6B, 0x52, 0x4A, 0x00, 0x84, 0x52, 0x42, 0x00, 0xE7, 0xC6, 
   0xBD, 0x00, 0xC6, 0xA5, 0x9C, 0x00, 0xA5, 0x84, 0x7B, 0x00, 0x84, 0x63, 0x5A, 0x00, 0x63, 0x42, 
   0x39, 0x00, 0xEF, 0xCE, 0xC6, 0x00, 0xDE, 0xBD, 0xB5, 0x00, 0xCE, 0xAD, 0xA5, 0x00, 0xBD, 0x9C, 
   0x94, 0x00, 0xB5, 0x94, 0x8C, 0x00, 0xCE, 0xA5, 0x9C, 0x00, 0x9C, 0x7B, 0x73, 0x00, 0x6B, 0x4A, 
   0x42, 0x00, 0xDE, 0xB5, 0xAD, 0x00, 0xC6, 0x9C, 0x94, 0x00, 0xB5, 0x8C, 0x84, 0x00, 0xA5, 0x7B, 
   0x73, 0x00, 0xEF, 0xE7, 0xE7, 0x00, 0xF7, 0xEF, 0xEF, 0x00, 0xFF, 0xF7, 0xF7, 0x00, 0xCE, 0xC6, 
   0xC6, 0x00, 0xD6, 0xCE, 0xCE, 0x00, 0xAD, 0xA5, 0xA5, 0x00, 0xB5, 0xAD, 0xAD, 0x00, 0x94, 0x8C, 
   0x8C, 0x00, 0x9C, 0x94, 0x94, 0x00, 0xA5, 0x9C, 0x9C, 0x00, 0x8C, 0x84, 0x84, 0x00, 0xF7, 0xE7, 
   0xE7, 0x00, 0xFF, 0xEF, 0xEF, 0x00, 0x84, 0x7B, 0x7B, 0x00, 0xDE, 0xCE, 0xCE, 0x00, 0xEF, 0xDE, 
   0xDE, 0x00, 0xC6, 0xB5, 0xB5, 0x00, 0xF7, 0xDE, 0xDE, 0x00, 0xEF, 0xD6, 0xD6, 0x00, 0xBD, 0xA5, 
   0xA5, 0x00, 0xC6, 0xAD, 0xAD, 0x00, 0xF7, 0xD6, 0xD6, 0x00, 0x73, 0x63, 0x63, 0x00, 0xAD, 0x94, 
   0x94, 0x00, 0xE7, 0xC6, 0xC6, 0x00, 0xA5, 0x8C, 0x8C, 0x00, 0xD6, 0xB5, 0xB5, 0x00, 0xCE, 0xAD, 
   0xAD, 0x00, 0x94, 0x7B, 0x7B, 0x00, 0xBD, 0x9C, 0x9C, 0x00, 0x5A, 0x4A, 0x4A, 0x00, 0xDE, 0xB5, 
   0xB5, 0x00, 0x29, 0x21, 0x21, 0x00, 0x18, 0x10, 0x10, 0x00, 0x29, 0x18, 0x18, 0x00, 0x18, 0x08, 
   0x08, 0x00, 0xEF, 0xD6, 0xDE, 0x00, 0xF7, 0xE7, 0xEF, 0x00, 0xBD, 0xAD, 0xB5, 0x00, 0xCE, 0xBD, 
   0xC6, 0x00, 0xD6, 0xB5, 0xCE, 0x00, 0xC6, 0x9C, 0xBD, 0x00, 0x8C, 0x63, 0x84, 0x00, 0xCE, 0xC6, 
   0xCE, 0x00, 0xDE, 0xD6, 0xDE, 0x00, 0xC6, 0xBD, 0xC6, 0x00, 0x9C, 0x94, 0x9C, 0x00, 0x84, 0x7B, 
   0x84, 0x00, 0xE7, 0xD6, 0xE7, 0x00, 0x63, 0x5A, 0x63, 0x00, 0xB5, 0x9C, 0xB5, 0x00, 0x63, 0x42, 
   0x63, 0x00, 0x5A, 0x31, 0x6B, 0x00, 0xC6, 0xB5, 0xCE, 0x00, 0xBD, 0xA5, 0xCE, 0x00, 0xB5, 0x94, 
   0xCE, 0x00, 0x9C, 0x8C, 0xAD, 0x00, 0x63, 0x42, 0x8C, 0x00, 0xAD, 0x94, 0xCE, 0x00, 0xCE, 0xBD, 
   0xE7, 0x00, 0xBD, 0xA5, 0xDE, 0x00, 0x4A, 0x29, 0x7B, 0x00, 0xD6, 0xCE, 0xE7, 0x00, 0x5A, 0x4A, 
   0x7B, 0x00, 0x42, 0x21, 0x8C, 0x00, 0x5A, 0x42, 0x9C, 0x00, 0xBD, 0xAD, 0xEF, 0x00, 0x84, 0x7B, 
   0xA5, 0x00, 0x63, 0x52, 0x9C, 0x00, 0x52, 0x42, 0x8C, 0x00, 0x6B, 0x63, 0x8C, 0x00, 0xB5, 0xA5, 
   0xF7, 0x00, 0x94, 0x84, 0xD6, 0x00, 0x39, 0x21, 0x9C, 0x00, 0x63, 0x52, 0xAD, 0x00, 0x4A, 0x42, 
   0x73, 0x00, 0x31, 0x18, 0xB5, 0x00, 0x7B, 0x6B, 0xDE, 0x00, 0x7B, 0x6B, 0xEF, 0x00, 0x39, 0x29, 
   0xAD, 0x00, 0x31, 0x21, 0xA5, 0x00, 0xA5, 0x9C, 0xF7, 0x00, 0x7B, 0x73, 0xC6, 0x00, 0x5A, 0x52, 
   0x9C, 0x00, 0x6B, 0x5A, 0xEF, 0x00, 0x31, 0x29, 0x7B, 0x00, 0x39, 0x29, 0xBD, 0x00, 0x29, 0x18, 
   0xAD, 0x00, 0x9C, 0x94, 0xEF, 0x00, 0x94, 0x8C, 0xEF, 0x00, 0x84, 0x7B, 0xEF, 0x00, 0x63, 0x5A, 
   0xC6, 0x00, 0x42, 0x39, 0xAD, 0x00, 0x31, 0x21, 0xD6, 0x00, 0x8C, 0x84, 0xF7, 0x00, 0x63, 0x5A, 
   0xDE, 0x00, 0x63, 0x5A, 0xE7, 0x00, 0x52, 0x4A, 0xD6, 0x00, 0x52, 0x4A, 0xEF, 0x00, 0x39, 0x31, 
   0xA5, 0x00, 0x42, 0x39, 0xEF, 0x00, 0x42, 0x39, 0xF7, 0x00, 0x31, 0x29, 0xC6, 0x00, 0x39, 0x31, 
   0xEF, 0x00, 0x39, 0x31, 0xF7, 0x00, 0x29, 0x21, 0xFF, 0x00, 0x10, 0x08, 0xD6, 0x00, 0x10, 0x08, 
   0xE7, 0x00, 0x00, 0x00, 0x00, 0x00, 0xAD, 0xAD, 0xAD, 0xAD, 0xAD, 0x88, 0x88, 0xAD, 0xAE, 0xAD, 
   0xAD, 0x88, 0x88, 0xAD, 0xAE, 0xAD, 0xAD, 0x88, 0xAD, 0x88, 0xAD, 0x88, 0x88, 0xAD, 0x88, 0x88, 
   0x88, 0xAD, 0x88, 0x87, 0xAB, 0x7D, 0x82, 0x96, 0x82, 0x88, 0xAD, 0xA3, 0x89, 0xAD, 0xAD, 0xAE, 
   0xA7, 0xAA, 0xB0, 0x83, 0x82, 0xA5, 0xAD, 0xB0, 0xB0, 0x83, 0x82, 0x4B, 0x45, 0x3C, 0xBF, 0xA4, 
   0x97, 0x41, 0x48, 0x45, 0x06, 0x94, 0x9F, 0xA4, 0xA2, 0xA5, 0xA3, 0x3F, 0x06, 0xB9, 0x33, 0x51, 
   0x4E, 0x4E, 0x40, 0x35, 0x54, 0x55, 0x40, 0x47, 0x46, 0x4A, 0x40, 0x51, 0x3A, 0x4A, 0x45, 0x4A, 
   0x47, 0x47, 0x46, 0x3D, 0x40, 0x04, 0xA2, 0xA1, 0x9E, 0xA4, 0x9E, 0x95, 0x05, 0x48, 0x48, 0x3E, 
   0x04, 0x38, 0x48, 0x45, 0x42, 0x4A, 0x34, 0x44, 0x42, 0x45, 0x02, 0x74, 0x66, 0x6F, 0x66, 0x8E, 
   0x8E, 0x66, 0x66, 0x66, 0x8E, 0x66, 0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0xAB, 0xAB, 0xAB, 0x88, 
   0xAB, 0x88, 0x88, 0x88, 0xAD, 0xAD, 0xAD, 0xAD, 0x88, 0xAD, 0xAD, 0xAD, 0xAD, 0xAD, 0x89, 0xAD, 
   0x8F, 0xAD, 0xAD, 0xAD, 0x7D, 0xA5, 0x7D, 0xAD, 0x88, 0xAD, 0xAE, 0x89, 0xAE, 0x83, 0xAD, 0xAE, 
   0x89, 0x72, 0xAF, 0xAD, 0xAE, 0xAD, 0x7D, 0xAE, 0xB0, 0xB0, 0xA7, 0xC2, 0x33, 0x0B, 0x9E, 0x9F, 
   0x0D, 0x48, 0x35, 0x0B, 0x95, 0x9E, 0x9E, 0xA5, 0x7D, 0x87, 0x9B, 0x38, 0x93, 0x0A, 0x4E, 0x51, 
   0x51, 0x40, 0x4E, 0x40, 0x48, 0x55, 0x53, 0x43, 0x41, 0x39, 0x4E, 0x4E, 0x48, 0x45, 0x4A, 0x42, 
   0x47, 0x47, 0x47, 0x53, 0x51, 0x98, 0xA2, 0xA4, 0x9E, 0x93, 0x9E, 0xA5, 0x38, 0x48, 0x3B, 0xBF, 
   0x03, 0x36, 0x45, 0x50, 0x42, 0x34, 0x49, 0x4A, 0x52, 0x3F, 0x74, 0x66, 0x66, 0x68, 0x66, 0x66, 
   0x68, 0x8E, 0x66, 0x66, 0x66, 0x66, 0x82, 0x88, 0x82, 0x88, 0x88, 0x88, 0x88, 0xAB, 0xAB, 0xAB, 
   0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0xB2, 0x88, 0xAD, 0xAD, 0xAD, 0xAD, 0xAD, 0x8C, 0xAD, 
   0xAD, 0xAD, 0x8F, 0xAE, 0xAD, 0xA5, 0xA5, 0x7D, 0xAD, 0xAD, 0x83, 0xB0, 0xA6, 0x8A, 0xB0, 0x83, 
   0xAC, 0x7F, 0x8A, 0xAE, 0xB2, 0xB0, 0xAD, 0x82, 0xAF, 0xAC, 0x9A, 0x3F, 0x4B, 0xC3, 0xA4, 0xA2, 
   0x34, 0x45, 0x36, 0x93, 0x9E, 0xA4, 0xA4, 0xA8, 0xA5, 0xB9, 0x01, 0x0D, 0x4C, 0xB3, 0x35, 0x51, 
   0x51, 0x4E, 0x40, 0x40, 0x40, 0x40, 0x42, 0x3C, 0x42, 0x40, 0x3A, 0x53, 0x40, 0x52, 0x49, 0x42, 
   0x47, 0x46, 0x4A, 0x55, 0x02, 0x99, 0x9E, 0xA4, 0x9E, 0x9E, 0x9F, 0xB9, 0x40, 0x3D, 0x3B, 0x03, 
   0x9C, 0x0C, 0x4A, 0x42, 0x38, 0x34, 0x44, 0x4D, 0x01, 0x6D, 0x66, 0x8E, 0x8E, 0x66, 0x8E, 0x8E, 
   0x66, 0x66, 0x8E, 0x66, 0x8E, 0x66, 0x82, 0x88, 0x82, 0x88, 0xAB, 0x88, 0xAB, 0x88, 0x88, 0xAB, 
   0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0xAD, 0xAD, 0xAD, 0xAD, 0x88, 0xAD, 0xAD, 0xAD, 
   0xAD, 0x89, 0x89, 0xAD, 0xA7, 0xA7, 0x7D, 0xA5, 0xAD, 0xA7, 0x8A, 0xAA, 0x84, 0x7B, 0x84, 0x8A, 
   0x7E, 0x7B, 0x84, 0x83, 0xAE, 0xB2, 0xAE, 0x82, 0xA7, 0x9A, 0x10, 0x51, 0x96, 0x9E, 0xA4, 0x98, 
   0x33, 0x36, 0xBF, 0x9F, 0xA5, 0xA2, 0x9F, 0x96, 0x9A, 0x38, 0x10, 0x53, 0xB3, 0x55, 0x55, 0x55, 
   0x48, 0x53, 0x54, 0x40, 0x55, 0x2F, 0x43, 0x43, 0x48, 0x40, 0x53, 0x53, 0x40, 0x4A, 0x34, 0x42, 
   0x42, 0x46, 0x45, 0x02, 0xA6, 0xA4, 0xA4, 0x9E, 0x9E, 0x9E, 0x9F, 0x9A, 0x48, 0x43, 0xC1, 0x07, 
   0x08, 0x4C, 0x42, 0x39, 0x4A, 0xC1, 0x52, 0x4D, 0x74, 0x66, 0x74, 0x6F, 0x74, 0x6F, 0x8E, 0x66, 
   0x66, 0x8E, 0x66, 0x66, 0x66, 0x66, 0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0xAB, 0x88, 0x88, 
   0x88, 0xB2, 0xAB, 0xAB, 0x82, 0xAB, 0xAB, 0xAB, 0x82, 0x82, 0xAD, 0xAD, 0xAD, 0xAD, 0xAD, 0x89, 
   0x89, 0x83, 0xAA, 0x83, 0x89, 0x8A, 0x82, 0x87, 0xAE, 0xA7, 0xB0, 0x8B, 0x7B, 0xAF, 0x98, 0xB0, 
   0x8A, 0x7B, 0x7B, 0x8A, 0x89, 0xAE, 0x82, 0xAD, 0x99, 0xA0, 0x02, 0x0B, 0x94, 0x9D, 0x4D, 0x39, 
   0x41, 0x0B, 0xA4, 0xA5, 0xA5, 0xA2, 0x98, 0x4E, 0x51, 0x4E, 0x48, 0xB3, 0x55, 0x55, 0x57, 0x40, 
   0x53, 0x3A, 0x48, 0x40, 0x55, 0x48, 0x42, 0x44, 0x35, 0x3A, 0x48, 0x35, 0x39, 0x44, 0x42, 0x3D, 
   0x42, 0x42, 0xC1, 0xAD, 0xA8, 0xA4, 0xA2, 0xA5, 0xA4, 0xA4, 0x9F, 0x4D, 0x52, 0x04, 0xA3, 0x7E, 
   0x74, 0x10, 0x3F, 0x39, 0x02, 0xA0, 0x02, 0xA9, 0x66, 0x6F, 0x66, 0x66, 0x66, 0x66, 0x66, 0x8E, 
   0x68, 0x66, 0x8E, 0x66, 0x8E, 0x66, 0x88, 0xAD, 0x88, 0xAB, 0x88, 0x88, 0x88, 0xAB, 0x88, 0x88, 
   0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0x82, 0x88, 0xAD, 0x87, 0x87, 0x82, 0xAD, 0xAD, 0xAD, 0xAD, 
   0xAD, 0x83, 0x8B, 0x83, 0x98, 0x8A, 0xA7, 0xBA, 0x7D, 0xAB, 0x83, 0x9B, 0x5A, 0xB1, 0x74, 0x5A, 
   0x5A, 0xA9, 0x7E, 0x83, 0xAE, 0xAD, 0x82, 0xA6, 0xA9, 0x01, 0x9B, 0xB9, 0x9D, 0x51, 0x01, 0x44, 
   0x41, 0x06, 0xA8, 0xA8, 0xC3, 0x56, 0x58, 0x51, 0x4E, 0x4E, 0x51, 0x35, 0x55, 0x4E, 0x38, 0x40, 
   0x48, 0x48, 0x35, 0x4E, 0x10, 0x53, 0x43, 0x52, 0x55, 0x40, 0x35, 0x40, 0x34, 0x34, 0x42, 0x42, 
   0x47, 0x41, 0xA3, 0x87, 0xA8, 0x9E, 0xA4, 0xA5, 0xA8, 0xB9, 0x03, 0x52, 0x3F, 0x73, 0x74, 0x6A, 
   0x66, 0x66, 0x66, 0x74, 0x74, 0xB1, 0x66, 0x66, 0x6F, 0x74, 0x8E, 0x66, 0x8E, 0x8E, 0x66, 0x8E, 
   0x8E, 0x66, 0x66, 0x66, 0x66, 0x8E, 0x88, 0x82, 0x82, 0x82, 0x88, 0x82, 0xAD, 0x88, 0xAB, 0x87, 
   0xAB, 0x87, 0x7D, 0x7D, 0xAB, 0xAB, 0x88, 0xAD, 0xAD, 0x88, 0xAB, 0xA8, 0x87, 0x88, 0xAD, 0xAD, 
   0xAE, 0xA7, 0x83, 0x8A, 0x7E, 0xAA, 0xAA, 0xAA, 0x99, 0xA5, 0xAB, 0xA0, 0x5B, 0x3F, 0x4D, 0x3A, 
   0x4D, 0x51, 0x4E, 0x56, 0x9B, 0x9A, 0x5A, 0xB1, 0x4E, 0x3F, 0x33, 0x51, 0x51, 0x36, 0x32, 0x53, 
   0x31, 0x04, 0xA1, 0xA1, 0x0E, 0xB3, 0x10, 0x39, 0x4D, 0x39, 0x55, 0x58, 0xB3, 0xC2, 0x01, 0x40, 
   0x45, 0x40, 0x40, 0x0C, 0xA1, 0x3F, 0x41, 0x40, 0x51, 0x40, 0x48, 0x34, 0x50, 0x42, 0x42, 0x42, 
   0x42, 0x0D, 0xAB, 0xAB, 0xA5, 0xA2, 0xA5, 0xA5, 0xA7, 0xB1, 0x55, 0x33, 0xC4, 0x66, 0x8E, 0x8E, 
   0x66, 0x8E, 0x6F, 0x6F, 0x6F, 0x8E, 0x74, 0x66, 0x66, 0x6F, 0x66, 0x8E, 0x66, 0x66, 0x68, 0x66, 
   0x68, 0x66, 0x8E, 0x66, 0x8E, 0x66, 0x88, 0x88, 0xAD, 0x88, 0x88, 0x88, 0x88, 0x88, 0xAB, 0xAB, 
   0xAB, 0xA1, 0x7D, 0x87, 0x7D, 0xAB, 0xA1, 0x82, 0xAD, 0xAE, 0xAD, 0x88, 0xAB, 0x82, 0x88, 0x89, 
   0x83, 0x83, 0xB0, 0x83, 0xA7, 0xA7, 0x83, 0x98, 0xAF, 0x9B, 0xA3, 0x9B, 0x33, 0x10, 0x56, 0x4C, 
   0x01, 0x3F, 0x38, 0x37, 0x0F, 0x0D, 0x0D, 0x3F, 0xC2, 0x3F, 0x3A, 0x39, 0x4B, 0x01, 0xB3, 0x45, 
   0x0E, 0xBE, 0xB9, 0x98, 0xA0, 0x9B, 0xA1, 0xB9, 0xA7, 0x73, 0x58, 0xB3, 0x4D, 0x08, 0x5B, 0x4E, 
   0x3A, 0x48, 0x33, 0x93, 0xA3, 0x3A, 0x42, 0x35, 0x54, 0x55, 0x31, 0x3B, 0x42, 0x42, 0x44, 0x41, 
   0x34, 0xBA, 0x82, 0x82, 0xA5, 0xA5, 0xA5, 0x7D, 0x5A, 0x51, 0x39, 0xB1, 0x74, 0x6F, 0x68, 0x8E, 
   0x6F, 0x68, 0x66, 0x74, 0x66, 0x8E, 0x6F, 0x6F, 0x68, 0x8E, 0x66, 0x68, 0x68, 0x8E, 0x66, 0x66, 
   0x8E, 0x66, 0x66, 0x66, 0x66, 0x66, 0x82, 0x82, 0x82, 0x88, 0x88, 0xAD, 0x88, 0x88, 0x88, 0x88, 
   0x82, 0x82, 0xAB, 0xA1, 0xAB, 0x82, 0xAB, 0x7D, 0x7D, 0xAD, 0xAD, 0xAE, 0x89, 0xAD, 0xA7, 0x83, 
   0x83, 0x83, 0x8A, 0xAF, 0xAC, 0xB0, 0xB0, 0xAA, 0x9D, 0x9A, 0x0E, 0xA0, 0xB9, 0xC5, 0x9A, 0xA0, 
   0x0E, 0x56, 0x0E, 0xC2, 0x4F, 0x32, 0x0E, 0xC2, 0x0D, 0x0E, 0x33, 0x31, 0x34, 0x15, 0x1C, 0x1A, 
   0x1B, 0xFC, 0x24, 0x25, 0x25, 0x23, 0x23, 0xFC, 0xFB, 0x1D, 0x28, 0x29, 0xD1, 0x93, 0xAA, 0x01, 
   0x53, 0x3A, 0x04, 0x95, 0x05, 0x45, 0x4A, 0x35, 0x35, 0x48, 0x49, 0x41, 0x42, 0x42, 0x42, 0x3D, 
   0xC1, 0xAD, 0xAD, 0x7D, 0xA5, 0x7D, 0x7D, 0xA2, 0xAB, 0x0E, 0x4E, 0x74, 0x6F, 0x68, 0x66, 0x68, 
   0x74, 0x66, 0x6F, 0x8E, 0x68, 0x6F, 0x74, 0x8E, 0x66, 0x68, 0x66, 0x66, 0x8E, 0x66, 0x8E, 0x66, 
   0x66, 0x8E, 0x66, 0x66, 0x8E, 0x66, 0x88, 0x88, 0x88, 0x88, 0x88, 0xAD, 0xAD, 0xAD, 0xAD, 0xAD, 
   0xAD, 0x88, 0xAD, 0x88, 0xAD, 0xAD, 0xAD, 0xA7, 0xAE, 0xAE, 0x8A, 0xB0, 0x8A, 0xA7, 0x8A, 0x8B, 
   0xAD, 0x88, 0xAD, 0x9B, 0x73, 0x02, 0xAC, 0x9C, 0x99, 0x05, 0xC1, 0x98, 0xA3, 0xAD, 0xA6, 0xA3, 
   0x98, 0x4D, 0x38, 0x4C, 0xC2, 0x0A, 0xC0, 0x3E, 0x36, 0x2B, 0x16, 0x1F, 0x26, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x25, 0xFB, 0xE1, 0xD9, 
   0x4E, 0x52, 0xA2, 0x93, 0x4B, 0x30, 0x48, 0x48, 0x53, 0x3F, 0x49, 0x44, 0x34, 0x42, 0x47, 0x0E, 
   0xA7, 0xB2, 0xAB, 0x7D, 0xA5, 0xA5, 0xA4, 0xA1, 0x37, 0xC4, 0x74, 0x68, 0x6F, 0x8E, 0x66, 0x66, 
   0x6F, 0x74, 0x6F, 0x68, 0x66, 0x8E, 0x8E, 0x8E, 0x68, 0x8E, 0x8E, 0x66, 0x66, 0x68, 0x66, 0x8E, 
   0x66, 0x66, 0x8E, 0x66, 0x66, 0x66, 0xAE, 0xAD, 0xAD, 0xAD, 0xAD, 0x88, 0x88, 0x82, 0x82, 0xAD, 
   0xAD, 0xA7, 0xB0, 0xAE, 0x88, 0x82, 0xAE, 0xA3, 0xA8, 0x82, 0xA6, 0xAF, 0xAF, 0x7E, 0xA7, 0x7E, 
   0x98, 0xB9, 0x9B, 0x9A, 0xA0, 0x02, 0xC4, 0x02, 0x3F, 0x38, 0x9A, 0x9C, 0xA6, 0xA7, 0x98, 0xA0, 
   0xC4, 0x3A, 0x40, 0x4E, 0x37, 0x0B, 0x0D, 0x29, 0x1F, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 
   0x22, 0x2B, 0x9F, 0x93, 0x36, 0x34, 0x55, 0x39, 0x45, 0x30, 0x4A, 0x42, 0x47, 0x42, 0x4F, 0xA7, 
   0x82, 0xA8, 0x88, 0xA3, 0xAB, 0x7D, 0xA2, 0x50, 0x01, 0x74, 0x68, 0x65, 0x6A, 0x8E, 0x66, 0x8E, 
   0x66, 0x8E, 0x8E, 0x66, 0x8E, 0x68, 0x66, 0x68, 0x66, 0x68, 0x66, 0x66, 0x8E, 0x66, 0x8E, 0x66, 
   0x66, 0x8E, 0x66, 0x66, 0x66, 0x66, 0x82, 0x82, 0x7D, 0x7D, 0x87, 0xA5, 0xA5, 0xA5, 0xA5, 0xA5, 
   0xA5, 0xAD, 0xAC, 0xAC, 0xBA, 0xA1, 0xA1, 0xA4, 0xA4, 0xA5, 0xA5, 0x82, 0x9A, 0x01, 0x4D, 0x39, 
   0x4E, 0x39, 0x3A, 0x36, 0x4C, 0x3F, 0x4E, 0x01, 0x0E, 0x06, 0xBA, 0xA7, 0xA7, 0x89, 0xA3, 0xBA, 
   0xC4, 0x4E, 0x40, 0x2F, 0x48, 0x2A, 0xFD, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0x17, 0xD1, 0x0B, 0x48, 0x53, 0x3F, 0x45, 0x49, 0x45, 0x42, 0x44, 0x47, 0x0D, 0xB0, 
   0x82, 0xA5, 0xA7, 0xB9, 0x03, 0x9A, 0xA0, 0x01, 0x68, 0x74, 0x66, 0x6A, 0x66, 0x66, 0x8E, 0x66, 
   0x66, 0x8E, 0x66, 0x66, 0x66, 0x66, 0x8E, 0x66, 0x8E, 0x66, 0x8E, 0x66, 0x66, 0x8E, 0x8E, 0x66, 
   0x8E, 0x66, 0x66, 0x66, 0x66, 0x8E, 0xA5, 0xA5, 0xA8, 0xA5, 0xA5, 0xA8, 0xA5, 0xA5, 0xA5, 0xA5, 
   0xA8, 0xA4, 0xA5, 0x7D, 0xA2, 0xA2, 0xA2, 0xA4, 0xA5, 0xA8, 0xA4, 0xA4, 0xBF, 0x0A, 0x01, 0x33, 
   0x52, 0x4F, 0x30, 0x10, 0x45, 0xC1, 0x9C, 0xC2, 0x9A, 0x9A, 0x9B, 0xAA, 0x98, 0xA6, 0xA7, 0x97, 
   0x06, 0x50, 0x53, 0x48, 0x1C, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x23, 0x14, 0x53, 0x34, 0x45, 0x42, 0x34, 0x34, 0x4A, 0x47, 0x04, 0xA6, 0xAD, 
   0x7D, 0xAD, 0xC1, 0x56, 0x37, 0x3F, 0xB1, 0x8E, 0x6D, 0x6D, 0x66, 0x66, 0x8E, 0x66, 0x66, 0x8E, 
   0x8E, 0x66, 0x68, 0x66, 0x8E, 0x66, 0x66, 0x8E, 0x66, 0x8E, 0x66, 0x8E, 0x66, 0x66, 0x66, 0x66, 
   0x66, 0x8E, 0x66, 0x8E, 0x66, 0x66, 0xA5, 0xA2, 0xA8, 0xA5, 0xA5, 0xA2, 0xA5, 0xA2, 0xA5, 0xA5, 
   0xA8, 0xA5, 0xA2, 0xA5, 0xA5, 0xA5, 0xA2, 0xA2, 0x9F, 0x93, 0x08, 0x3E, 0x52, 0x38, 0x4C, 0x0A, 
   0x4F, 0x0D, 0x02, 0x3F, 0x10, 0x56, 0x56, 0xC4, 0x56, 0x56, 0xB1, 0xC4, 0x73, 0x73, 0x02, 0x01, 
   0x3A, 0x34, 0x2E, 0xFE, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x1C, 0x4A, 0x53, 0x41, 0x49, 0x49, 0x34, 0x34, 0x56, 0xAF, 0xAC, 
   0x9D, 0x56, 0x56, 0x4B, 0x02, 0x74, 0x66, 0x74, 0x5E, 0x76, 0x86, 0x66, 0x66, 0x8E, 0x66, 0x66, 
   0x66, 0x68, 0x8E, 0x68, 0x66, 0x8E, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 
   0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0xA5, 0xA5, 0xA5, 0xA4, 0xA5, 0xA8, 0xA5, 0xA8, 0xA8, 0xA4, 
   0xA2, 0xA2, 0xA2, 0xA4, 0xA2, 0xA2, 0xA5, 0x9E, 0x0C, 0x4B, 0x38, 0x53, 0x53, 0x45, 0x0D, 0x06, 
   0x0D, 0x08, 0x9C, 0x0C, 0x97, 0x96, 0xA3, 0xBA, 0x9E, 0x9E, 0xA5, 0x97, 0x98, 0x03, 0x38, 0x9A, 
   0x06, 0x11, 0x24, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x1D, 0x42, 0x43, 0x43, 0x44, 0x30, 0x4D, 0x66, 0x66, 0x6D, 
   0x6D, 0xA9, 0xA9, 0x6D, 0x66, 0x68, 0x68, 0x74, 0x6A, 0x86, 0x66, 0x66, 0x8E, 0x66, 0x66, 0x8E, 
   0x66, 0x8E, 0x68, 0x66, 0x8E, 0x6F, 0x66, 0x6F, 0x66, 0x6F, 0x66, 0x8E, 0x66, 0x6F, 0x66, 0x6F, 
   0x66, 0x68, 0x66, 0x8E, 0x8E, 0x66, 0xA2, 0xA2, 0xA2, 0xA5, 0xA5, 0xA4, 0xA8, 0xA2, 0xA4, 0xA4, 
   0xA2, 0xA4, 0xA4, 0xA4, 0xA4, 0xA4, 0x94, 0x0A, 0x45, 0x4A, 0x52, 0x48, 0x39, 0x39, 0x0A, 0x36, 
   0x4D, 0x03, 0x0E, 0x94, 0x95, 0x9C, 0x0E, 0x96, 0xA4, 0xA4, 0x9E, 0x94, 0x9F, 0x9F, 0x94, 0x94, 
   0xE4, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x1B, 0x46, 0x49, 0x46, 0x37, 0x6D, 0x68, 0x80, 0x68, 
   0x80, 0x74, 0x75, 0x6A, 0x6F, 0x68, 0x66, 0x66, 0x8E, 0x8E, 0x6F, 0x8E, 0x6F, 0x6F, 0x6F, 0x68, 
   0x66, 0x68, 0x8E, 0x6F, 0x6F, 0x66, 0x86, 0x8E, 0x8E, 0x6F, 0x8E, 0x6F, 0x6F, 0x6F, 0x66, 0x66, 
   0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0xA5, 0xA2, 0xA8, 0xA2, 0xA5, 0xA5, 0xA2, 0xA8, 0xA4, 0xA4, 
   0xA4, 0xA4, 0xA2, 0xA4, 0xA4, 0x9E, 0xB9, 0x02, 0x38, 0x4A, 0x52, 0x39, 0x3F, 0x33, 0x38, 0x40, 
   0x04, 0x0C, 0x0D, 0x04, 0x05, 0x51, 0x53, 0x9A, 0xA2, 0x9F, 0xA4, 0xA4, 0x9E, 0xA4, 0xA4, 0xDA, 
   0x25, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x1A, 0x34, 0x4F, 0x74, 0x80, 0x81, 0x6A, 0x6D, 
   0x68, 0x68, 0x86, 0x74, 0x6F, 0x5E, 0x86, 0x66, 0x66, 0x66, 0x8E, 0x6F, 0x8E, 0x68, 0x8E, 0x68, 
   0x68, 0x68, 0x6F, 0x8E, 0x6F, 0x66, 0x66, 0x6F, 0x66, 0x6F, 0x66, 0x6F, 0x8E, 0x66, 0x68, 0x6F, 
   0x66, 0x6F, 0x8E, 0x8E, 0x8E, 0x68, 0xA2, 0xA4, 0xA2, 0xA4, 0xA2, 0xA5, 0xA4, 0xA2, 0xA2, 0xA2, 
   0xA4, 0xA4, 0xA4, 0xA4, 0x93, 0xA5, 0x98, 0x9B, 0xA3, 0x33, 0x45, 0x33, 0x3F, 0x0D, 0x04, 0x4D, 
   0x33, 0x33, 0x53, 0x39, 0x33, 0x53, 0x53, 0x3F, 0x93, 0x9F, 0x9F, 0xA4, 0x9E, 0x9E, 0xD1, 0x23, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x14, 0xA9, 0x80, 0x80, 0x80, 0x6A, 0x6A, 
   0x86, 0x8E, 0x6A, 0x75, 0x75, 0x65, 0x6A, 0x86, 0x6F, 0x66, 0x6F, 0x8E, 0x8E, 0x68, 0x8E, 0x6F, 
   0x8E, 0x68, 0x6F, 0x68, 0x6F, 0x6F, 0x6F, 0x6F, 0x68, 0x6F, 0x8E, 0x66, 0x6F, 0x6F, 0x66, 0x6F, 
   0x74, 0x66, 0x66, 0x66, 0x66, 0x8E, 0xA4, 0xA4, 0xA4, 0xA4, 0xA4, 0xA4, 0xA2, 0xA4, 0xA4, 0xA4, 
   0xA4, 0x9E, 0xA4, 0xA2, 0xA2, 0xA5, 0x97, 0x98, 0x96, 0x36, 0x53, 0x3F, 0x04, 0xBF, 0x36, 0x39, 
   0x39, 0x32, 0x38, 0x53, 0x39, 0x40, 0x39, 0x04, 0x94, 0x9F, 0x9E, 0x9E, 0xA4, 0x9E, 0xFB, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x25, 0xBD, 0x6E, 0x73, 0x5B, 0x5B, 0x75, 
   0x75, 0x6A, 0x5C, 0x5D, 0x76, 0x66, 0x6A, 0x6F, 0x66, 0x6F, 0x6F, 0x8E, 0x68, 0x8E, 0x68, 0x68, 
   0x68, 0x68, 0x66, 0x6F, 0x68, 0x6F, 0x66, 0x6F, 0x66, 0x6F, 0x66, 0x6F, 0x66, 0x8E, 0x6F, 0x74, 
   0x6F, 0x68, 0x6F, 0x68, 0x66, 0x68, 0xA4, 0xA8, 0xA4, 0xA4, 0xA4, 0xA2, 0xA4, 0xA2, 0xA4, 0x9E, 
   0xA4, 0xA4, 0xA4, 0xA2, 0xA5, 0xA8, 0xA8, 0xA2, 0x98, 0x4B, 0x3A, 0x4B, 0xC0, 0x02, 0x39, 0x53, 
   0x4A, 0x0E, 0x52, 0x39, 0x53, 0x40, 0x52, 0xC8, 0x95, 0x94, 0x9E, 0xA4, 0xA4, 0xF1, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x25, 0x25, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x1B, 0x8D, 0x6D, 0x6A, 0x75, 0x5E, 
   0x6D, 0x60, 0x5D, 0x6B, 0x75, 0x86, 0x86, 0x66, 0x6F, 0x68, 0x8E, 0x68, 0x68, 0x8E, 0x68, 0x8E, 
   0x8E, 0x66, 0x86, 0x6F, 0x66, 0x6F, 0x6F, 0x66, 0x6F, 0x6F, 0x8E, 0x66, 0x6F, 0x8E, 0x66, 0x6F, 
   0x6F, 0x66, 0x68, 0x66, 0x8E, 0x6F, 0xA4, 0xA4, 0xA5, 0xA2, 0xA4, 0xA4, 0xA2, 0xA4, 0xA4, 0xA4, 
   0xA4, 0x9E, 0xA4, 0xA8, 0xA5, 0xA4, 0xA5, 0x9A, 0x39, 0x51, 0x33, 0x36, 0x37, 0x0D, 0x3F, 0x52, 
   0x4A, 0x3F, 0x33, 0x01, 0x40, 0x3A, 0x37, 0x93, 0x9F, 0x9E, 0x9E, 0xA2, 0xBF, 0x23, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 
   0xF5, 0xEC, 0xCE, 0xC3, 0x93, 0xD1, 0xE6, 0x1E, 0xFD, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0xD7, 0x72, 0x6E, 0x73, 0x80, 
   0x6A, 0x58, 0x58, 0x59, 0x86, 0x66, 0x66, 0x6F, 0x8E, 0x8E, 0x68, 0x8E, 0x68, 0x68, 0x68, 0x6F, 
   0x6A, 0x65, 0x66, 0x8E, 0x6F, 0x6F, 0x6F, 0x6F, 0x8E, 0x66, 0x6F, 0x6F, 0x66, 0x6F, 0x8E, 0x66, 
   0x74, 0x6F, 0x66, 0x68, 0x66, 0x68, 0xA4, 0xA4, 0xA4, 0xA2, 0xA2, 0xA4, 0xA4, 0xA4, 0xA4, 0xA4, 
   0xA4, 0xA4, 0xA2, 0xA8, 0x9F, 0x97, 0x0E, 0x56, 0xC2, 0x33, 0x39, 0x39, 0x49, 0x07, 0x4F, 0x45, 
   0x45, 0x38, 0xC2, 0x02, 0x4E, 0x39, 0x0D, 0x95, 0x95, 0x9F, 0xA2, 0xA5, 0xE1, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x17, 0xCE, 
   0xA2, 0x9E, 0x9E, 0x9E, 0x9E, 0x9F, 0x95, 0xA3, 0x98, 0xE5, 0x21, 0x26, 0x26, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x20, 0x8B, 0x7E, 0x7F, 0x74, 
   0x57, 0x58, 0x60, 0x6A, 0x5E, 0x86, 0x6F, 0x6F, 0x8E, 0x68, 0x8E, 0x8E, 0x68, 0x8E, 0x68, 0x86, 
   0x66, 0x6D, 0x66, 0x68, 0x6F, 0x6F, 0x68, 0x75, 0x5E, 0x66, 0x66, 0x6F, 0x68, 0x6F, 0x8E, 0x6F, 
   0x68, 0x8E, 0x6F, 0x68, 0x6F, 0x6F, 0xA4, 0x9E, 0x9E, 0xA4, 0xA4, 0xA4, 0xA4, 0xA4, 0x9E, 0xA4, 
   0x9F, 0xA4, 0xA4, 0x9F, 0x07, 0x01, 0x4D, 0x39, 0x4E, 0x51, 0x4C, 0x0D, 0x30, 0x38, 0x4A, 0x45, 
   0x3F, 0x33, 0x33, 0x01, 0x37, 0x53, 0xBE, 0x95, 0x07, 0xB9, 0x9E, 0x97, 0x21, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x13, 0x9F, 0x9E, 
   0x9E, 0x9E, 0x9E, 0x9F, 0x9E, 0x9F, 0xA4, 0xA4, 0x9F, 0x9E, 0xBF, 0xF8, 0x26, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0xCD, 0x8B, 0x80, 0x60, 
   0xB3, 0x60, 0x75, 0x75, 0x65, 0x6A, 0x6F, 0x68, 0x8E, 0x68, 0x68, 0x68, 0x68, 0x81, 0x8E, 0x68, 
   0x68, 0x66, 0x6D, 0x6F, 0x68, 0x8E, 0x66, 0x76, 0x59, 0x66, 0x6F, 0x6F, 0x6F, 0x8E, 0x6F, 0x68, 
   0x6F, 0x66, 0x68, 0x66, 0x8E, 0x74, 0x9E, 0xA4, 0xA4, 0xA2, 0xA4, 0x9E, 0xA4, 0x9E, 0xA4, 0x9E, 
   0xA4, 0xA5, 0x97, 0x04, 0x39, 0x39, 0x04, 0x4B, 0x10, 0x51, 0x4D, 0xBF, 0x4C, 0x32, 0x45, 0x45, 
   0x33, 0x30, 0x53, 0x39, 0x3A, 0x3F, 0x94, 0xA2, 0x3F, 0x3F, 0x03, 0xE5, 0x26, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0xED, 0x9E, 0x9E, 0x9E, 
   0x9E, 0x94, 0x94, 0x9E, 0x93, 0x9F, 0xA5, 0xA8, 0xA8, 0xA8, 0xA8, 0xC3, 0xFB, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0xE7, 0xAF, 0x6D, 0x73, 
   0x72, 0x72, 0x66, 0x66, 0x6A, 0x6F, 0x68, 0x8E, 0x68, 0x68, 0x68, 0x68, 0x68, 0x68, 0x68, 0x68, 
   0x80, 0x66, 0x6B, 0x6A, 0x6F, 0x68, 0x66, 0x59, 0x5E, 0x6A, 0x6F, 0x6F, 0x68, 0x68, 0x8E, 0x59, 
   0x6D, 0x68, 0x66, 0x66, 0x68, 0x6F, 0xA4, 0xA4, 0xA4, 0x9E, 0xA4, 0xA4, 0xA4, 0xA4, 0xA2, 0x9F, 
   0xA2, 0x7D, 0xA9, 0x55, 0x54, 0x39, 0x33, 0xB1, 0x10, 0x5B, 0x33, 0x9A, 0x06, 0x4D, 0x52, 0x45, 
   0x3F, 0x04, 0x33, 0x53, 0x48, 0x0E, 0x95, 0x36, 0x53, 0x33, 0x3F, 0xF5, 0x26, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x17, 0x94, 0x9E, 0x9E, 0x9E, 
   0x94, 0x94, 0x93, 0x93, 0x94, 0x9E, 0xA5, 0xA5, 0xA2, 0xA4, 0xA2, 0xA2, 0x09, 0x23, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x21, 0x74, 0x4E, 0x56, 
   0x7E, 0xB0, 0x84, 0x80, 0x8E, 0x68, 0x68, 0x68, 0x81, 0x80, 0x68, 0x68, 0x80, 0x68, 0x80, 0x68, 
   0x7A, 0x5E, 0x6B, 0x5D, 0x6F, 0x6F, 0x66, 0x5E, 0x66, 0x6F, 0x68, 0x6F, 0x68, 0x68, 0x66, 0x6B, 
   0x6B, 0x65, 0x6F, 0x66, 0x6F, 0x66, 0x9E, 0xA4, 0xA4, 0xA4, 0x9E, 0x9E, 0xA4, 0x9E, 0x93, 0x97, 
   0x82, 0x9B, 0x10, 0x4D, 0x40, 0x4E, 0x4E, 0x51, 0x51, 0x39, 0x0A, 0x01, 0x05, 0xA2, 0x0D, 0x4E, 
   0x4D, 0x32, 0x33, 0x40, 0x4E, 0x3E, 0x95, 0x01, 0x33, 0x53, 0x04, 0xFC, 0x26, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x23, 0xBF, 0x9E, 0x94, 0x9E, 0x94, 
   0xBF, 0x97, 0x04, 0x94, 0x9E, 0xA2, 0xA4, 0xA4, 0xA4, 0xA4, 0xA4, 0xA2, 0xA4, 0xED, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0xDE, 0x57, 0x0E, 
   0xAD, 0x88, 0x8D, 0x80, 0x68, 0x68, 0x80, 0x68, 0x68, 0x80, 0x81, 0x68, 0x68, 0x66, 0x68, 0x80, 
   0x80, 0x5E, 0x76, 0x6B, 0x6D, 0x6F, 0x66, 0x66, 0x66, 0x6F, 0x8E, 0x6F, 0x68, 0x80, 0x66, 0x6B, 
   0x77, 0x5E, 0x6F, 0x66, 0x6F, 0x6F, 0xA4, 0xA4, 0x9E, 0x9E, 0xA4, 0xA4, 0xA4, 0x9E, 0x04, 0xA0, 
   0x56, 0x33, 0x01, 0xA0, 0x4E, 0x39, 0x4E, 0x51, 0x51, 0x4E, 0x0D, 0x04, 0x99, 0x9F, 0xA2, 0xB9, 
   0x4D, 0x02, 0x01, 0x10, 0x33, 0xBE, 0xB9, 0x99, 0x08, 0x37, 0x2D, 0x26, 0x26, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x13, 0x94, 0x94, 0x9F, 0x00, 0x9B, 
   0x9C, 0xB9, 0x05, 0x9F, 0x9E, 0xA4, 0xA4, 0xA4, 0xA2, 0xA4, 0xA2, 0xA2, 0xA4, 0xBF, 0x23, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0xEE, 0x5A, 0xA3, 
   0xAD, 0x8B, 0x85, 0x68, 0x68, 0x80, 0x68, 0x68, 0x80, 0x68, 0x80, 0x80, 0x68, 0x6F, 0x68, 0x80, 
   0x80, 0x66, 0x75, 0x75, 0x6A, 0x6F, 0x6F, 0x6F, 0x74, 0x6F, 0x6F, 0x68, 0x66, 0x8E, 0x6D, 0x5D, 
   0x59, 0x66, 0x66, 0x66, 0x6F, 0x66, 0x9E, 0x9E, 0x9E, 0xA4, 0x9E, 0x9E, 0x9F, 0x07, 0x51, 0x51, 
   0x39, 0x4C, 0xA0, 0x10, 0x39, 0x39, 0x39, 0x4E, 0x4E, 0x4E, 0x39, 0x3E, 0x94, 0x94, 0xBE, 0x07, 
   0x37, 0x0E, 0x03, 0x51, 0x37, 0x93, 0xBF, 0xBF, 0x0B, 0x38, 0xED, 0x26, 0x26, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0xD1, 0xBF, 0x93, 0x94, 0xBE, 0xA0, 
   0xBF, 0x97, 0x93, 0x9E, 0x9F, 0xA4, 0xA4, 0xA4, 0xA4, 0xA4, 0xA5, 0xA4, 0xA4, 0xA4, 0x17, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0xE7, 0xA8, 0xAE, 
   0xAA, 0x85, 0x80, 0x80, 0x81, 0x80, 0x81, 0x80, 0x81, 0x80, 0x68, 0x68, 0x80, 0x68, 0x68, 0x81, 
   0x68, 0x8E, 0x6F, 0x66, 0x8E, 0x8E, 0x8E, 0x6A, 0x65, 0x66, 0x68, 0x68, 0x75, 0x6B, 0x5E, 0x6A, 
   0x66, 0x86, 0x6F, 0x6F, 0x66, 0x6F, 0x9E, 0xA4, 0x9E, 0x9E, 0xA4, 0xA4, 0x9E, 0x9C, 0x39, 0x4E, 
   0x33, 0x39, 0x04, 0x9C, 0x4E, 0x40, 0x39, 0x10, 0x3A, 0x39, 0x39, 0x38, 0x0D, 0x4C, 0x39, 0x39, 
   0x4E, 0x0B, 0x4D, 0x33, 0x05, 0xC3, 0x4C, 0x52, 0x4E, 0x3E, 0x14, 0x26, 0x26, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0xFB, 0xA2, 0x06, 0x0A, 0xA0, 0xA1, 0xBF, 
   0x9E, 0x94, 0x9F, 0x9F, 0x9E, 0xA4, 0xA4, 0xA4, 0xA4, 0xA4, 0xA2, 0xA4, 0x9E, 0xA4, 0xEC, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0xF7, 0x82, 0x8C, 
   0x8D, 0x7A, 0x68, 0x68, 0x80, 0x80, 0x80, 0x68, 0x80, 0x68, 0x66, 0x68, 0x81, 0x68, 0x80, 0x8E, 
   0x68, 0x68, 0x8E, 0x8E, 0x6F, 0x68, 0x6F, 0x5E, 0x86, 0x68, 0x68, 0x80, 0x59, 0x59, 0x6A, 0x66, 
   0x6F, 0x86, 0x86, 0x66, 0x6F, 0x66, 0xA4, 0x9F, 0xA4, 0x9E, 0xA4, 0x9F, 0x96, 0x02, 0x51, 0x4D, 
   0x3F, 0x39, 0x4D, 0xA3, 0x56, 0xB1, 0x4E, 0x10, 0x3F, 0x52, 0x39, 0x4B, 0x53, 0x42, 0x39, 0x4C, 
   0x0E, 0x0D, 0x4D, 0x4B, 0x36, 0x0A, 0x53, 0x39, 0x33, 0x50, 0x1C, 0x26, 0x26, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x13, 0xBF, 0xA2, 0x01, 0x9C, 0x9F, 0x94, 
   0x9F, 0x97, 0x07, 0x9F, 0x9E, 0x9E, 0xA4, 0xA4, 0xA4, 0xA4, 0xA4, 0x9E, 0xA4, 0xA4, 0xCE, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0xFC, 0xB2, 0x8B, 
   0x92, 0x73, 0x80, 0x80, 0x7A, 0x80, 0x7A, 0x80, 0x80, 0x68, 0x68, 0x68, 0x80, 0x68, 0x68, 0x68, 
   0x8E, 0x68, 0x8E, 0x8E, 0x68, 0x8E, 0x6F, 0x6F, 0x8E, 0x68, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 
   0x66, 0x66, 0x66, 0x6F, 0x66, 0x6F, 0x9E, 0xA4, 0x9E, 0xA4, 0x9E, 0x9E, 0x4C, 0x39, 0xB1, 0xC4, 
   0x56, 0x06, 0x99, 0xAA, 0x98, 0x8A, 0x56, 0x33, 0x4D, 0x38, 0x3F, 0x33, 0x4E, 0x45, 0x52, 0x0C, 
   0x4C, 0x3E, 0x0D, 0x52, 0x33, 0x3F, 0x52, 0x52, 0x33, 0x53, 0x1C, 0x26, 0x26, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0xF1, 0xA2, 0x99, 0x9B, 0x94, 0x94, 0x94, 
   0x00, 0x98, 0x0C, 0x9F, 0xA2, 0xA2, 0x9E, 0x9F, 0xA4, 0x9E, 0x9E, 0xA4, 0x9E, 0xA4, 0xC3, 0x23, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x21, 0x82, 0xAE, 
   0x8A, 0x84, 0x6E, 0x7A, 0x73, 0x80, 0x80, 0x80, 0x81, 0x80, 0x81, 0x68, 0x68, 0x68, 0x68, 0x8E, 
   0x68, 0x8E, 0x68, 0x68, 0x8E, 0x68, 0x68, 0x8E, 0x68, 0x66, 0x6A, 0x66, 0x86, 0x6F, 0x66, 0x86, 
   0x66, 0x66, 0x66, 0x66, 0x6F, 0x66, 0x9F, 0x9E, 0x9E, 0x9F, 0xA4, 0xA4, 0x4C, 0x33, 0x02, 0x56, 
   0xAB, 0xA5, 0x7D, 0x88, 0xAD, 0x82, 0x82, 0xC2, 0x39, 0x39, 0x50, 0x3F, 0x3A, 0x52, 0x52, 0x33, 
   0x51, 0x0D, 0x4F, 0x52, 0x52, 0x39, 0x53, 0x45, 0x52, 0x39, 0x1D, 0x26, 0x26, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0xE4, 0xA2, 0x99, 0xA1, 0x95, 0x93, 0x95, 
   0xB9, 0x4B, 0x99, 0x07, 0x9C, 0x07, 0x9F, 0x9E, 0x95, 0x9C, 0x9A, 0xA2, 0x9E, 0xA4, 0x93, 0x21, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x25, 0x87, 0x87, 
   0x87, 0xB2, 0x89, 0x8B, 0x92, 0x85, 0x80, 0x80, 0x80, 0x80, 0x68, 0x68, 0x68, 0x68, 0x8E, 0x68, 
   0x8E, 0x68, 0x68, 0x8E, 0x68, 0x6F, 0x68, 0x68, 0x68, 0x5E, 0x59, 0x5E, 0x86, 0x86, 0x86, 0x66, 
   0x66, 0x6F, 0x66, 0x6F, 0x6F, 0x66, 0x9E, 0xA4, 0xA4, 0x9E, 0x9F, 0xA3, 0x4E, 0x4E, 0x4E, 0x9B, 
   0xA8, 0xA8, 0xA8, 0x87, 0x82, 0xA8, 0x9F, 0x9C, 0x10, 0x38, 0x38, 0x04, 0x4D, 0x3A, 0x3F, 0x39, 
   0x37, 0x0D, 0x52, 0x50, 0x40, 0x53, 0x39, 0x39, 0x3F, 0x52, 0x1D, 0x26, 0x26, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0xDA, 0xA2, 0xA1, 0x94, 0xA2, 0xC0, 0x0A, 
   0xB1, 0x33, 0xA0, 0x0C, 0xC2, 0xA2, 0x9E, 0x9E, 0x96, 0x4E, 0x9D, 0x9F, 0x9E, 0xA4, 0x9E, 0xFC, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x25, 0x87, 0x87, 
   0x87, 0x82, 0x87, 0xB2, 0x89, 0x8B, 0x92, 0x85, 0x7A, 0x81, 0x68, 0x68, 0x80, 0x68, 0x68, 0x68, 
   0x68, 0x68, 0x8E, 0x68, 0x68, 0x8E, 0x68, 0x68, 0x66, 0x75, 0x5E, 0x6A, 0x66, 0x66, 0x66, 0x66, 
   0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0xA4, 0x9F, 0x9F, 0xA4, 0x9F, 0x9D, 0x55, 0x51, 0x51, 0xC2, 
   0x0C, 0x9C, 0xA1, 0x87, 0x82, 0xA5, 0xA8, 0x96, 0x4D, 0xC2, 0x4C, 0x10, 0x3F, 0x10, 0x3F, 0x38, 
   0x06, 0x4D, 0x4C, 0x0C, 0x0D, 0x4F, 0x4F, 0x56, 0x36, 0x38, 0x1D, 0x26, 0x26, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0xD5, 0xA2, 0xA2, 0x9F, 0x0A, 0x4D, 0x01, 
   0xA0, 0x10, 0x10, 0x0E, 0x06, 0x94, 0x9E, 0xA5, 0x4D, 0x33, 0xA2, 0x9E, 0x9E, 0xB8, 0xB8, 0xFC, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x25, 0x87, 0xAB, 
   0x82, 0x87, 0x82, 0x87, 0x87, 0x88, 0x8F, 0x90, 0x84, 0x7F, 0x85, 0x68, 0x68, 0x68, 0x68, 0x68, 
   0x68, 0x68, 0x68, 0x8E, 0x68, 0x68, 0x68, 0x8E, 0x8E, 0x6F, 0x66, 0x6F, 0x66, 0x66, 0x66, 0x66, 
   0x66, 0x6F, 0x66, 0x66, 0x66, 0x66, 0x9F, 0x9E, 0xA4, 0xA4, 0xA5, 0x5A, 0x6D, 0x55, 0x10, 0x51, 
   0x53, 0x53, 0x36, 0xBA, 0xA1, 0x87, 0xA8, 0xA8, 0x04, 0x36, 0x4C, 0x35, 0x39, 0x52, 0x4A, 0x38, 
   0x98, 0x03, 0x05, 0x4B, 0x38, 0x4B, 0xC1, 0x07, 0x3E, 0x45, 0x1E, 0x26, 0x26, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0xE4, 0x9F, 0x9F, 0x9E, 0x9A, 0x9D, 0x9D, 
   0xA0, 0x01, 0x57, 0x4D, 0x97, 0xB9, 0xA1, 0x9C, 0x9D, 0x06, 0x95, 0x9F, 0xC0, 0x96, 0x9C, 0x21, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x21, 0x87, 0xAB, 
   0x7D, 0x87, 0x82, 0x87, 0x82, 0x82, 0x82, 0x82, 0xAD, 0x90, 0x92, 0x85, 0x68, 0x68, 0x68, 0x68, 
   0x68, 0x68, 0x68, 0x68, 0x8E, 0x8E, 0x66, 0x6F, 0x66, 0x66, 0x8E, 0x66, 0x66, 0x6F, 0x66, 0x66, 
   0x6F, 0x6F, 0x66, 0x6F, 0x66, 0x8E, 0x93, 0x9E, 0xA4, 0x9F, 0xA7, 0x56, 0x02, 0x39, 0x10, 0x4D, 
   0x33, 0x33, 0x38, 0x3F, 0xC1, 0xAB, 0xA8, 0xA8, 0x9B, 0x39, 0x52, 0x52, 0x39, 0x45, 0x4A, 0x4C, 
   0x39, 0xBE, 0x0A, 0x54, 0x39, 0x4D, 0x06, 0x07, 0x38, 0x39, 0xEE, 0x26, 0x26, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0xF1, 0xA2, 0x9F, 0x96, 0xB9, 0xBF, 0x9A, 
   0x9D, 0x98, 0xC4, 0xA0, 0x97, 0xB9, 0x9D, 0xA1, 0x93, 0xBF, 0xB9, 0xBA, 0x9C, 0x96, 0x06, 0x25, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0xFB, 0x87, 0x82, 
   0xAB, 0x82, 0x82, 0x87, 0x87, 0x87, 0xA5, 0x7D, 0x88, 0x8C, 0x84, 0x78, 0x80, 0x68, 0x68, 0x68, 
   0x68, 0x6F, 0x68, 0x6F, 0x6F, 0x6F, 0x6F, 0x6F, 0x66, 0x6F, 0x6F, 0x6F, 0x6F, 0x8E, 0x6F, 0x8E, 
   0x6F, 0x6F, 0x66, 0x6F, 0x8E, 0x80, 0x99, 0x9F, 0xA4, 0xA4, 0x9D, 0x5B, 0x51, 0x51, 0x3F, 0x06, 
   0x10, 0x4E, 0x33, 0x4A, 0x3F, 0xB9, 0x87, 0xA8, 0x99, 0x02, 0x02, 0x52, 0x39, 0x52, 0x45, 0x10, 
   0x39, 0x93, 0x9A, 0x3F, 0x01, 0x0A, 0x08, 0x03, 0x52, 0x37, 0xD5, 0x26, 0x26, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0xF3, 0xA2, 0xA4, 0xA5, 0x95, 0x93, 0x7D, 
   0xAC, 0xB1, 0x56, 0xBF, 0x95, 0xA2, 0xBF, 0x9F, 0x9E, 0xC4, 0x9D, 0x96, 0xBA, 0x96, 0xD5, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0xF5, 0x87, 0x82, 
   0x82, 0x87, 0x7D, 0x7D, 0x87, 0x7D, 0xAC, 0x5A, 0xA7, 0x91, 0x6E, 0x80, 0x68, 0x68, 0x68, 0x68, 
   0x6F, 0x8E, 0x68, 0x8E, 0x68, 0x68, 0x68, 0x66, 0x6F, 0x66, 0x6F, 0x8E, 0x8E, 0x68, 0x68, 0x68, 
   0x68, 0x8E, 0x68, 0x6A, 0x5E, 0x59, 0xA6, 0x9F, 0xA8, 0x97, 0x39, 0x51, 0x55, 0x4E, 0x56, 0x4E, 
   0x4E, 0x39, 0x45, 0x52, 0x3F, 0x04, 0xBA, 0xAB, 0x7D, 0xA3, 0x0E, 0x39, 0x53, 0x4A, 0x50, 0xC2, 
   0x98, 0x95, 0x96, 0x06, 0x4B, 0xBF, 0xA1, 0x04, 0x33, 0x9A, 0xB8, 0x23, 0x26, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0xFC, 0x9E, 0xA4, 0x9F, 0xA1, 0xA5, 0x7D, 
   0x96, 0x9C, 0x97, 0x9F, 0xA5, 0x96, 0x9E, 0x95, 0xA3, 0x02, 0x06, 0x9B, 0x98, 0xA2, 0xED, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0xE0, 0x87, 0x88, 
   0xAD, 0xA5, 0x82, 0x82, 0x83, 0x8A, 0x6A, 0x6D, 0x6D, 0x85, 0x85, 0x68, 0x68, 0x66, 0x86, 0x68, 
   0x68, 0x6F, 0x68, 0x68, 0x6F, 0x6F, 0x6F, 0x6F, 0x6F, 0x8E, 0x8E, 0x68, 0x68, 0x68, 0x81, 0x68, 
   0x68, 0x66, 0x5D, 0xB5, 0xB5, 0x77, 0xA1, 0x9F, 0x9F, 0xAF, 0x55, 0x40, 0x40, 0x40, 0x39, 0x51, 
   0x4E, 0x45, 0x33, 0x38, 0x3F, 0x33, 0x03, 0x87, 0x88, 0xA5, 0xB9, 0x9B, 0x53, 0x45, 0x38, 0xBA, 
   0x93, 0xBE, 0x06, 0xBF, 0x9B, 0x94, 0xA2, 0x0E, 0x51, 0xBA, 0x9F, 0x17, 0x26, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0xD5, 0x9E, 0x9E, 0xA1, 0xA5, 0x96, 
   0xA5, 0x9F, 0x95, 0x9E, 0xA3, 0x97, 0x9F, 0x97, 0x9D, 0xC0, 0x9A, 0x5A, 0xA2, 0xA5, 0xFB, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0xCD, 0xAB, 0xB0, 
   0xAE, 0x87, 0xAB, 0xAE, 0xB0, 0xAE, 0xB0, 0xAF, 0x56, 0x78, 0x68, 0x80, 0x81, 0x8E, 0x86, 0x6F, 
   0x6F, 0x68, 0x68, 0x6F, 0x68, 0x6F, 0x6F, 0x6F, 0x68, 0x68, 0x68, 0x68, 0x68, 0x81, 0x80, 0x68, 
   0x68, 0x76, 0x6B, 0x5C, 0xB5, 0x5D, 0xBE, 0xBF, 0xB9, 0x4C, 0x57, 0x53, 0x4E, 0x55, 0x4E, 0x4E, 
   0x4E, 0x10, 0x33, 0x38, 0x45, 0x39, 0x01, 0x99, 0xAE, 0xC5, 0xAB, 0xA0, 0x33, 0x45, 0x3F, 0xB9, 
   0x0A, 0x0D, 0x04, 0x38, 0x4D, 0x94, 0x93, 0x9B, 0x4C, 0x95, 0x9F, 0xEC, 0x26, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x17, 0x9E, 0xA4, 0x9E, 0x9E, 0x9E, 
   0x9F, 0x94, 0x96, 0xBA, 0xA4, 0x9F, 0xA2, 0xAC, 0x99, 0xBF, 0xA1, 0x9E, 0xA5, 0xCF, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x21, 0x82, 0x82, 0xB2, 
   0x87, 0x87, 0x89, 0x9C, 0xAD, 0xBA, 0xAD, 0xAD, 0x8C, 0x8D, 0x68, 0x68, 0x68, 0x68, 0x68, 0x68, 
   0x8E, 0x6F, 0x8E, 0x8E, 0x6F, 0x68, 0x68, 0x68, 0x68, 0x68, 0x68, 0x80, 0x68, 0x80, 0x80, 0x7A, 
   0x6D, 0x76, 0xB5, 0x6B, 0x6B, 0x6B, 0x3F, 0x3F, 0x5B, 0x02, 0x39, 0x3A, 0x4E, 0x51, 0x4E, 0x4E, 
   0x39, 0x52, 0x39, 0x45, 0x39, 0x39, 0x39, 0x39, 0x04, 0xA5, 0x87, 0x99, 0x4D, 0x45, 0xC1, 0xBF, 
   0xC2, 0xC1, 0x4B, 0x4E, 0x03, 0x00, 0x06, 0x54, 0x0C, 0x9F, 0x9F, 0xBF, 0x23, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0xD5, 0x9E, 0xA4, 0xA4, 0x9E, 
   0xA2, 0x9C, 0x56, 0x96, 0x9F, 0xA4, 0x7D, 0x96, 0xA2, 0xA4, 0xA8, 0xA5, 0xA8, 0xF8, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0xE7, 0xAB, 0x88, 0x82, 
   0x82, 0x82, 0xB0, 0xB0, 0x9A, 0xA9, 0x7E, 0xA8, 0x8F, 0x91, 0x85, 0x68, 0x6F, 0x8E, 0x68, 0x6F, 
   0x68, 0x68, 0x68, 0x6F, 0x68, 0x8E, 0x68, 0x68, 0x68, 0x80, 0x68, 0x80, 0x80, 0x7A, 0x73, 0x80, 
   0x74, 0x75, 0x5D, 0xB5, 0x5D, 0x6B, 0x4E, 0x39, 0x10, 0x51, 0x35, 0x3A, 0x57, 0x4E, 0x39, 0x4E, 
   0x4E, 0x33, 0x53, 0x45, 0x45, 0x52, 0x39, 0x48, 0x3F, 0x9C, 0x97, 0x98, 0x32, 0x4A, 0x03, 0x0E, 
   0x4D, 0x4B, 0x39, 0x33, 0x08, 0x94, 0x01, 0x03, 0x94, 0x9F, 0x9E, 0x9E, 0xE7, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0xFC, 0xC3, 0xA2, 0xA2, 0xA2, 
   0x7D, 0x9C, 0x08, 0x9E, 0x9F, 0x9E, 0x96, 0x96, 0xA4, 0x9F, 0xA5, 0xA5, 0xE0, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x25, 0xBC, 0x82, 0x82, 0x82, 
   0x82, 0x88, 0x83, 0xAF, 0x56, 0x9A, 0xA2, 0xA8, 0x87, 0x8C, 0x92, 0x80, 0x6F, 0x68, 0x68, 0x68, 
   0x68, 0x68, 0x68, 0x68, 0x68, 0x68, 0x81, 0x68, 0x68, 0x7A, 0x80, 0x80, 0x6A, 0x6A, 0x86, 0x73, 
   0x6A, 0x75, 0x57, 0x5C, 0x5D, 0x5D, 0x31, 0x39, 0x39, 0x4E, 0x51, 0x4E, 0x4E, 0x39, 0x10, 0xB1, 
   0x39, 0x4E, 0x3A, 0x33, 0x4A, 0x3F, 0x4E, 0x53, 0x4A, 0x39, 0x02, 0xC2, 0xC2, 0x33, 0x38, 0x4E, 
   0x10, 0x0E, 0x9B, 0x36, 0x08, 0x97, 0x56, 0x93, 0x9F, 0x9E, 0x9E, 0x9F, 0xD1, 0x25, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x18, 0x7D, 0xA4, 0xA4, 
   0xA4, 0x96, 0xA3, 0xA2, 0xA1, 0xA2, 0xBE, 0x9E, 0x9E, 0xA8, 0xA5, 0xDB, 0x26, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0xF5, 0x82, 0x82, 0x82, 0x82, 
   0x82, 0x82, 0x88, 0x87, 0x7D, 0xA5, 0xA2, 0xA5, 0xA8, 0x8F, 0x91, 0x85, 0x68, 0x68, 0x68, 0x68, 
   0x81, 0x68, 0x68, 0x68, 0x68, 0x80, 0x80, 0x80, 0x8E, 0x75, 0x8E, 0x73, 0x76, 0xB5, 0xB5, 0x5D, 
   0xB1, 0x5C, 0x60, 0xB1, 0x58, 0xB5, 0x52, 0x3F, 0x33, 0x39, 0x51, 0x33, 0x4E, 0x5B, 0x4E, 0x4E, 
   0x3A, 0x53, 0x39, 0x4A, 0x34, 0x42, 0x39, 0x53, 0x52, 0x30, 0x3E, 0x37, 0x03, 0x3F, 0x3A, 0x01, 
   0x4D, 0x96, 0xBF, 0x9B, 0x08, 0xBA, 0xA3, 0x9E, 0x9E, 0x9F, 0xA5, 0x93, 0x9F, 0x13, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x17, 0xB7, 0xA4, 
   0xAE, 0x99, 0x96, 0xB9, 0xA7, 0x07, 0xC1, 0xC3, 0xA4, 0xC3, 0xE1, 0x26, 0x26, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x23, 0xC8, 0x82, 0x87, 0x82, 0x82, 
   0x82, 0x82, 0x87, 0xA5, 0xA5, 0xA5, 0xA4, 0xA8, 0xA5, 0x87, 0x8F, 0x92, 0x7A, 0x80, 0x7A, 0x81, 
   0x68, 0x68, 0x80, 0x6F, 0x8E, 0x6D, 0x75, 0x59, 0x5D, 0x77, 0x6B, 0x6D, 0x5C, 0x5B, 0x76, 0x60, 
   0x74, 0x76, 0x75, 0x75, 0x5B, 0x5D, 0x3F, 0x0D, 0x4C, 0x56, 0x39, 0x33, 0x51, 0x51, 0x4E, 0x4E, 
   0x40, 0x53, 0x45, 0x33, 0x42, 0x52, 0x33, 0x33, 0x31, 0x04, 0x04, 0x39, 0x04, 0x4B, 0x56, 0x0A, 
   0xC1, 0x93, 0xBE, 0xC2, 0x98, 0xC0, 0x9F, 0x9E, 0x94, 0x96, 0xB9, 0x93, 0x9E, 0xC3, 0x1F, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0xFC, 0xF1, 
   0xC5, 0xA5, 0x97, 0xA1, 0xC3, 0x56, 0x0A, 0x93, 0xEB, 0xFB, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0xE0, 0x82, 0x82, 0x87, 0xAB, 0x82, 
   0xAB, 0x87, 0x87, 0xA8, 0xA5, 0xA5, 0xA4, 0xA8, 0xA8, 0xA8, 0x88, 0x90, 0x7F, 0x7A, 0x73, 0x73, 
   0x80, 0x68, 0x6D, 0x5D, 0x6B, 0x6B, 0xB5, 0xB5, 0x5D, 0xB5, 0x77, 0x5D, 0xB5, 0x77, 0xB5, 0x6B, 
   0x6A, 0x73, 0x73, 0x80, 0x6D, 0x5E, 0x4A, 0x56, 0x52, 0x39, 0x4D, 0x4B, 0x39, 0x4E, 0x4E, 0x4E, 
   0x4E, 0x45, 0x45, 0x33, 0x01, 0x33, 0x52, 0x52, 0x33, 0x0D, 0x36, 0x4D, 0xC1, 0x04, 0x97, 0x07, 
   0x0E, 0x94, 0x03, 0x03, 0x56, 0xA1, 0x9F, 0x94, 0x97, 0x56, 0x07, 0x9F, 0x9E, 0x9F, 0xD5, 0x25, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 
   0x25, 0xFA, 0xF5, 0x13, 0xF2, 0x19, 0xF8, 0x23, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x17, 0x87, 0x87, 0x87, 0x87, 0xAB, 0x87, 
   0x82, 0x7D, 0xA8, 0xA8, 0xA8, 0xA4, 0xA8, 0xA8, 0xA8, 0xA8, 0x89, 0x84, 0x85, 0x80, 0x66, 0x75, 
   0x6A, 0x76, 0x5D, 0x5D, 0xB5, 0xB3, 0xB4, 0xB5, 0x5D, 0x77, 0x77, 0x77, 0x77, 0x77, 0x77, 0x77, 
   0xFF, 0x6D, 0x85, 0x66, 0x68, 0x73, 0x49, 0x4D, 0x40, 0x39, 0x3F, 0x38, 0x01, 0x01, 0x4D, 0x4E, 
   0xB1, 0x39, 0x45, 0x4D, 0x06, 0x4D, 0x33, 0x52, 0x38, 0x09, 0x04, 0x48, 0x3F, 0x96, 0x93, 0x4B, 
   0x37, 0x0C, 0x56, 0x9B, 0x0E, 0x9F, 0x93, 0x93, 0x04, 0x9A, 0xA2, 0x9E, 0x9E, 0xA4, 0xA4, 0xEB, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0xFB, 0xA1, 0x87, 0x87, 0x87, 0x87, 0x87, 0x87, 
   0x7D, 0x87, 0xA8, 0xA8, 0xA8, 0xA5, 0xA8, 0xA8, 0x8A, 0x6E, 0x80, 0x73, 0x8E, 0x5B, 0x60, 0x58, 
   0xB5, 0xB5, 0x6B, 0x5D, 0x6B, 0x5D, 0x77, 0x5C, 0xB5, 0x77, 0x6B, 0x77, 0x77, 0xB6, 0xB5, 0x5D, 
   0x5B, 0x5C, 0x6A, 0xA9, 0x73, 0x73, 0x38, 0xB1, 0x6D, 0x01, 0xC4, 0xB1, 0x35, 0x10, 0xB1, 0x39, 
   0x33, 0x10, 0x06, 0x08, 0xC2, 0x10, 0x3F, 0x34, 0x32, 0xC2, 0x53, 0x40, 0x9B, 0x00, 0xBF, 0xC2, 
   0x4B, 0x02, 0x99, 0x9B, 0xBF, 0xA2, 0xA2, 0xA5, 0x96, 0xA2, 0x9F, 0x9E, 0x9E, 0xA4, 0xA4, 0x9E, 
   0xEC, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x1B, 0xAB, 0x87, 0x87, 0x87, 0x87, 0x87, 0x7D, 0x7D, 
   0x87, 0xA8, 0xA8, 0xA5, 0xA8, 0xA8, 0x82, 0x8B, 0x80, 0x80, 0x7A, 0x80, 0x6A, 0x5B, 0x60, 0x58, 
   0x77, 0xB3, 0x5C, 0x5D, 0x5D, 0x6B, 0x77, 0x5D, 0x77, 0xB5, 0xB5, 0x76, 0x77, 0xB5, 0x6B, 0x5D, 
   0x60, 0x5C, 0xB5, 0x74, 0x74, 0x75, 0x0A, 0xA7, 0x7B, 0xB9, 0xAD, 0xAC, 0x4E, 0x4E, 0x9A, 0x4B, 
   0x53, 0x3F, 0x06, 0x4D, 0x55, 0x0E, 0x37, 0x3F, 0x3E, 0x52, 0x39, 0x39, 0x04, 0xBE, 0x0B, 0x3F, 
   0x0E, 0x06, 0x93, 0xA2, 0x93, 0xA5, 0x7D, 0xA2, 0x9E, 0x9F, 0x9E, 0x9F, 0xA4, 0x9E, 0x9E, 0xA4, 
   0xA4, 0xDA, 0x23, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0xF3, 0xAB, 0x87, 0xA8, 0xA8, 0x87, 0x87, 0x87, 0x87, 0x87, 
   0xA8, 0xA8, 0xA8, 0xA8, 0x88, 0x84, 0x73, 0x74, 0x74, 0x73, 0x73, 0xA9, 0xB1, 0x60, 0x57, 0x5D, 
   0xB5, 0x77, 0x5D, 0x5C, 0x5D, 0xB5, 0x77, 0x77, 0x77, 0xB5, 0xB5, 0x6A, 0x60, 0x60, 0x5C, 0x75, 
   0x76, 0x5B, 0x5B, 0x6B, 0x60, 0x5C, 0x56, 0x9B, 0x02, 0xAA, 0x96, 0x5A, 0x02, 0x01, 0x06, 0x9A, 
   0x52, 0x38, 0x33, 0x39, 0x51, 0x05, 0x08, 0x0D, 0x36, 0x53, 0x39, 0x4C, 0x3F, 0x4C, 0xC2, 0x37, 
   0x33, 0xB9, 0x9F, 0x9F, 0x9F, 0x9E, 0xA5, 0x9F, 0x9F, 0x94, 0x9E, 0x9E, 0x9E, 0x9E, 0xA4, 0x9E, 
   0xA4, 0xA4, 0xCE, 0xF8, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x21, 0xDB, 0x87, 0xA5, 0xA5, 0x87, 0x87, 0x82, 0x87, 0x87, 0xA5, 0xA8, 
   0xA5, 0x87, 0x82, 0xB0, 0x73, 0x8E, 0x6D, 0x6D, 0x57, 0x57, 0x60, 0x73, 0x6A, 0x57, 0x57, 0x5D, 
   0xB5, 0xB5, 0xB3, 0x5B, 0x5D, 0x5D, 0xB5, 0x77, 0x5C, 0x5C, 0xB5, 0xB5, 0x77, 0x6B, 0x6B, 0x5C, 
   0x5D, 0x5C, 0x5C, 0x5D, 0x5B, 0x6A, 0xB3, 0x39, 0x4E, 0x01, 0x01, 0x51, 0x39, 0x56, 0x9B, 0x56, 
   0x3F, 0x0D, 0x04, 0x52, 0x0C, 0x93, 0x03, 0x33, 0x52, 0x53, 0x38, 0x50, 0x39, 0x39, 0x40, 0x4D, 
   0x03, 0x94, 0x9F, 0x9E, 0x9E, 0x9E, 0x9E, 0x05, 0x97, 0x94, 0x9F, 0x9E, 0x9E, 0x9E, 0x9E, 0x9E, 
   0xA4, 0x9F, 0x7D, 0x96, 0xEB, 0x21, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0x25, 0xE7, 0xBA, 0x82, 0x7D, 0x87, 0x87, 0x87, 0x82, 0x82, 0x88, 0x89, 0x87, 0x87, 
   0x87, 0x82, 0x72, 0x68, 0x7A, 0x6D, 0x5C, 0x57, 0x60, 0xB1, 0x5B, 0x57, 0x60, 0x60, 0x60, 0x57, 
   0x5C, 0x5C, 0x5D, 0x60, 0x60, 0x5D, 0xB5, 0xB5, 0x5C, 0x5C, 0x5D, 0xB5, 0xB5, 0x5D, 0x5D, 0x5D, 
   0x5C, 0x5C, 0x5D, 0x5C, 0x6D, 0x75, 0x73, 0x33, 0xC4, 0x73, 0x10, 0x5B, 0x10, 0x10, 0x4E, 0x01, 
   0xC2, 0xC2, 0x3F, 0x60, 0xC8, 0x9D, 0x39, 0x37, 0x33, 0x3F, 0x4B, 0x33, 0x33, 0x33, 0x38, 0x0E, 
   0xA2, 0x9F, 0x9F, 0x9E, 0xA4, 0x9F, 0x0A, 0x4B, 0x08, 0xA2, 0x9E, 0x94, 0x9F, 0xA5, 0xA1, 0xA2, 
   0x9E, 0x9F, 0xA5, 0xA4, 0xA4, 0x7D, 0xF1, 0x21, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 
   0x25, 0xE7, 0xA1, 0x87, 0x82, 0xAB, 0x87, 0xA5, 0x87, 0x87, 0x82, 0x82, 0x88, 0x82, 0x7D, 0x82, 
   0x87, 0x89, 0x85, 0x80, 0xA9, 0x73, 0x6D, 0x60, 0x57, 0x60, 0x5B, 0x57, 0x51, 0x5B, 0x57, 0x60, 
   0x5C, 0x60, 0x58, 0x58, 0x76, 0x5C, 0x58, 0x5C, 0x5D, 0x60, 0xB3, 0x5D, 0x60, 0x5C, 0x5D, 0x60, 
   0x6A, 0x60, 0x58, 0x5C, 0x76, 0x75, 0x7D, 0xA6, 0x56, 0xB0, 0xA7, 0x6E, 0x83, 0xA7, 0x03, 0x38, 
   0x9B, 0x51, 0x51, 0x39, 0x02, 0x10, 0x38, 0x4D, 0x52, 0x38, 0xB9, 0x99, 0x4D, 0xC4, 0x05, 0x93, 
   0x95, 0x9E, 0xA2, 0xA4, 0xA4, 0x95, 0x9B, 0x06, 0x9F, 0x9E, 0x9E, 0x9E, 0x9F, 0x99, 0x9C, 0x9E, 
   0xA2, 0xA4, 0x9E, 0xA8, 0xA5, 0xCE, 0xE7, 0x25, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 
   0x26, 0xF5, 0xC9, 0x87, 0x87, 0x87, 0x87, 0x87, 0x82, 0x82, 0x82, 0x88, 0xAE, 0x82, 0x8F, 0x82, 
   0xA8, 0x90, 0x7A, 0x85, 0x66, 0x73, 0x74, 0x02, 0x4E, 0x57, 0xB1, 0xB1, 0x60, 0x5B, 0x5B, 0x57, 
   0x57, 0xB1, 0x58, 0x58, 0x57, 0x5C, 0x5D, 0x5D, 0x57, 0x6A, 0x5B, 0x5B, 0x5C, 0x5C, 0x5D, 0x60, 
   0x60, 0x75, 0x5B, 0x5B, 0x58, 0x6A, 0x88, 0x88, 0xAD, 0x83, 0x89, 0x89, 0xAE, 0xA4, 0x97, 0x02, 
   0x0A, 0x3F, 0x53, 0x3A, 0x38, 0x97, 0x3E, 0x4D, 0x04, 0x38, 0xA3, 0x9A, 0xC2, 0x51, 0x99, 0xA5, 
   0x07, 0xA1, 0x9F, 0x93, 0x93, 0x97, 0x06, 0x94, 0x93, 0x93, 0x9E, 0x9E, 0xA4, 0x97, 0x97, 0x93, 
   0xA4, 0xA4, 0xA5, 0xC3, 0xE7, 0x25, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0xF3, 0x88, 0x82, 0x87, 0x82, 0x82, 0x8F, 0x88, 0xB2, 0x88, 0x82, 0x82, 0xAD, 
   0x8D, 0x79, 0x85, 0x7F, 0x7F, 0x73, 0x74, 0xB1, 0x5B, 0xB1, 0x5B, 0x5B, 0x5C, 0x57, 0x5B, 0xB1, 
   0x58, 0xB1, 0xB1, 0x60, 0x58, 0x5C, 0x58, 0x5D, 0x5D, 0x58, 0x60, 0x6A, 0x5B, 0x5D, 0x5D, 0xB3, 
   0x60, 0x5B, 0xB1, 0x5B, 0x77, 0x59, 0xA8, 0x82, 0xAD, 0x89, 0x89, 0x89, 0x82, 0x82, 0xAA, 0xB9, 
   0x3F, 0x53, 0x3A, 0x4E, 0x9C, 0x00, 0x05, 0x06, 0xBE, 0x4D, 0xA7, 0xBA, 0xBE, 0x4B, 0x93, 0xBF, 
   0x96, 0xA4, 0x9F, 0xA1, 0x05, 0xB9, 0x9F, 0x9E, 0x96, 0xA2, 0x9E, 0xA4, 0xA4, 0xA4, 0x9F, 0xA8, 
   0xA8, 0xA8, 0xCF, 0xFC, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0xFC, 0xC9, 0x82, 0x82, 0x88, 0x8F, 0x8F, 0x8F, 0x88, 0xAE, 0xAD, 0xAA, 
   0x68, 0xA9, 0x85, 0x85, 0x6E, 0x6E, 0xA9, 0x6D, 0x6D, 0x57, 0x5B, 0x60, 0x5B, 0x60, 0x5B, 0xA9, 
   0x73, 0x60, 0x74, 0x5B, 0x57, 0x60, 0x5B, 0x60, 0x5C, 0x5D, 0x5D, 0x6A, 0x80, 0x76, 0x57, 0x5D, 
   0x76, 0x59, 0xB1, 0x5E, 0xB5, 0x6A, 0x87, 0x82, 0xAD, 0x89, 0x89, 0x8F, 0x82, 0x82, 0xA4, 0xC0, 
   0x01, 0x4E, 0x56, 0x04, 0x08, 0x05, 0x04, 0xBE, 0x0D, 0x37, 0x96, 0x95, 0x96, 0xB9, 0x9F, 0xA2, 
   0x9E, 0x9E, 0x9F, 0x08, 0x0D, 0x08, 0x00, 0x07, 0xA3, 0x9E, 0xA8, 0xA4, 0xA4, 0xA4, 0xA4, 0xA8, 
   0xA8, 0xEB, 0x25, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x23, 0xCD, 0x88, 0x87, 0x88, 0x88, 0x91, 0x85, 0x85, 0x85, 0x85, 
   0x7A, 0x85, 0x85, 0x85, 0x6E, 0x72, 0x72, 0x68, 0x6A, 0xB1, 0x5B, 0x5B, 0x73, 0xB1, 0x01, 0x73, 
   0x02, 0x6D, 0xA9, 0x6D, 0x58, 0x60, 0xB1, 0x6A, 0x75, 0x60, 0x5B, 0x6A, 0x5D, 0x5E, 0x75, 0x75, 
   0x5C, 0x5E, 0x6A, 0x6D, 0x5E, 0x80, 0x87, 0x82, 0xAD, 0x8F, 0xAD, 0x88, 0x87, 0x87, 0xA3, 0x72, 
   0x3A, 0x0E, 0xBF, 0x04, 0x45, 0x48, 0x52, 0x4D, 0x3F, 0x50, 0x99, 0xA3, 0x10, 0xA1, 0x9E, 0xA4, 
   0xA4, 0x9F, 0x9E, 0x9C, 0x0E, 0x06, 0x06, 0x06, 0xA1, 0x9F, 0xBA, 0x96, 0x9E, 0xA5, 0x7D, 0xA8, 
   0xDB, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x24, 0xCA, 0x83, 0x7B, 0x7B, 0x6E, 0x85, 0x85, 0x80, 0xA9, 
   0x85, 0x85, 0x85, 0x56, 0xB1, 0x74, 0x7F, 0x72, 0x74, 0xB1, 0xB1, 0xB1, 0x5B, 0x57, 0x51, 0x5B, 
   0x7E, 0x85, 0xA9, 0x5B, 0x60, 0x60, 0x58, 0x60, 0x60, 0x5D, 0x60, 0x6A, 0x6A, 0x6A, 0x80, 0x6D, 
   0x86, 0x6A, 0x6D, 0x6A, 0x65, 0x80, 0xAB, 0x82, 0x88, 0x8F, 0x8F, 0x87, 0x87, 0x82, 0x7D, 0x96, 
   0x03, 0x06, 0x04, 0x3A, 0x48, 0x45, 0x2F, 0x48, 0x45, 0x3F, 0x10, 0x57, 0x02, 0x9E, 0xA4, 0xA4, 
   0x9E, 0x7D, 0x98, 0x0E, 0x0B, 0x9B, 0x0B, 0xB9, 0xA5, 0xA5, 0xA1, 0xA5, 0xAB, 0x8A, 0x83, 0xC9, 
   0x25, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 
   0x23, 0xF8, 0xE7, 0xE7, 0xE1, 0xF3, 0xFA, 0x25, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x23, 0x73, 0x6D, 0x74, 0x73, 0x74, 0x6A, 0x76, 0x74, 
   0x85, 0x85, 0x74, 0xB1, 0xB1, 0x5B, 0x73, 0x7F, 0x6D, 0x5B, 0x5B, 0x5B, 0x5B, 0x60, 0x4E, 0x01, 
   0xA7, 0x80, 0x85, 0xB1, 0x60, 0x60, 0x57, 0x5B, 0x5C, 0x5C, 0x76, 0x5B, 0x73, 0x6D, 0x6D, 0x6D, 
   0x6D, 0x6A, 0x68, 0x68, 0x68, 0x74, 0x87, 0x82, 0x8F, 0x8F, 0x88, 0x87, 0xA5, 0xA8, 0xA8, 0xA1, 
   0x05, 0x4B, 0x53, 0x53, 0x45, 0x52, 0x53, 0x53, 0x45, 0x39, 0x35, 0x55, 0xBA, 0x9F, 0xA4, 0xA4, 
   0xA4, 0xC0, 0x98, 0xC2, 0x3E, 0x9A, 0xA1, 0xA5, 0xA5, 0xA1, 0xA4, 0xC5, 0xA9, 0x8B, 0x8A, 0xFB, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x21, 0xED, 
   0xC8, 0xAD, 0x7D, 0xA5, 0x87, 0x87, 0x87, 0xBA, 0xE0, 0x23, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x1D, 0x6D, 0x76, 0x6D, 0xB1, 0x6D, 0x76, 0x74, 
   0x85, 0x74, 0x5B, 0x01, 0x73, 0xA9, 0x73, 0x73, 0xA9, 0x85, 0x6D, 0x5B, 0x5B, 0x56, 0xA7, 0xB0, 
   0xAD, 0x78, 0x80, 0x74, 0x5B, 0x57, 0x5B, 0x6A, 0x74, 0x74, 0x73, 0x6A, 0x75, 0x6D, 0x75, 0x6D, 
   0x6A, 0x75, 0x74, 0x80, 0x6A, 0x59, 0xA5, 0x88, 0xAD, 0xAD, 0x88, 0x87, 0xA5, 0xA8, 0xA4, 0x03, 
   0x33, 0x4D, 0x45, 0x53, 0x52, 0x45, 0x53, 0x52, 0x45, 0x55, 0xB3, 0x56, 0x9F, 0xA4, 0xA4, 0xA4, 
   0xA5, 0xA5, 0xB9, 0x0A, 0x9D, 0xA1, 0xA5, 0xA5, 0xAC, 0x98, 0x82, 0xA7, 0xA6, 0xA3, 0xE0, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0xFA, 0x03, 0xAE, 
   0xAE, 0xA6, 0xAB, 0xAE, 0x88, 0xAB, 0x82, 0x82, 0x82, 0xBC, 0xFA, 0x26, 0x26, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0xE8, 0x6A, 0x01, 0x5B, 0x01, 0x60, 0x66, 
   0xA9, 0x6D, 0x6D, 0xB1, 0x72, 0x72, 0x73, 0x6A, 0xB1, 0xA9, 0x72, 0xAF, 0x99, 0x88, 0x88, 0xB2, 
   0x8C, 0x8D, 0x73, 0xA9, 0x72, 0xA9, 0xB1, 0x9D, 0x7E, 0x73, 0x7F, 0x73, 0x6D, 0x6D, 0x76, 0x75, 
   0x76, 0x6B, 0x75, 0x6A, 0x5D, 0x74, 0x82, 0x82, 0xAD, 0x89, 0x82, 0x87, 0x87, 0x9F, 0x0C, 0x55, 
   0x45, 0x45, 0x40, 0x39, 0x4A, 0x39, 0x53, 0x39, 0x53, 0x55, 0x9D, 0xA5, 0xA4, 0xA4, 0xA8, 0xA4, 
   0x9E, 0x96, 0x9C, 0x98, 0x96, 0xA5, 0xA5, 0x82, 0xA7, 0xB2, 0x87, 0x87, 0x87, 0xBC, 0x21, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0xFA, 0xC5, 0x87, 0xA3, 
   0x83, 0xAD, 0x87, 0x82, 0x88, 0x88, 0x82, 0x8F, 0x88, 0xAE, 0xB0, 0xFA, 0x26, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x20, 0x10, 0xB1, 0x6A, 0xB1, 0x6D, 0x74, 
   0x6A, 0x5B, 0x33, 0xB1, 0x51, 0x7F, 0xA9, 0x60, 0xC4, 0x5A, 0x84, 0x8C, 0xAB, 0xAE, 0x8C, 0x8C, 
   0x91, 0x8D, 0x72, 0x6E, 0x84, 0x7B, 0x73, 0x73, 0x72, 0x6A, 0xA9, 0x85, 0x66, 0x74, 0x75, 0x75, 
   0x5B, 0x5D, 0x5C, 0x59, 0x6A, 0x80, 0xAB, 0xAD, 0x83, 0x83, 0x8F, 0xA8, 0xA5, 0xA2, 0x02, 0x53, 
   0x53, 0x3F, 0x34, 0x45, 0x39, 0x3F, 0x10, 0x39, 0x55, 0x0E, 0x9F, 0x9E, 0xA2, 0xA8, 0xA4, 0x9E, 
   0x7D, 0xA6, 0x96, 0xA5, 0xA1, 0xAB, 0x82, 0x87, 0x87, 0x87, 0x82, 0x87, 0x87, 0xE5, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x23, 0xCB, 0xB0, 0xAE, 0x82, 
   0xAB, 0x82, 0x87, 0x87, 0x82, 0x82, 0x8F, 0x8F, 0x7E, 0x7F, 0xAA, 0xBC, 0x23, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x2C, 0xB1, 0x5A, 0x5C, 0x6D, 0x74, 
   0x5B, 0xB1, 0x01, 0xB1, 0x72, 0x9D, 0x8B, 0x73, 0x72, 0xA9, 0xAA, 0x91, 0x7E, 0x7E, 0x83, 0x8B, 
   0x7E, 0x80, 0x73, 0x6E, 0x84, 0x72, 0x56, 0x5A, 0xAF, 0x73, 0x85, 0x84, 0x73, 0x68, 0x68, 0x6A, 
   0x66, 0x5E, 0x6A, 0x74, 0x68, 0x66, 0x87, 0x82, 0xB0, 0x8A, 0x89, 0x87, 0xA8, 0xC0, 0x35, 0x39, 
   0x33, 0x31, 0x53, 0x3A, 0x37, 0x36, 0x37, 0x4E, 0x01, 0xA4, 0xA4, 0xA5, 0xA8, 0xA4, 0xA5, 0x96, 
   0xAB, 0xA2, 0xA5, 0xAD, 0xBA, 0x82, 0x82, 0xAD, 0x88, 0x8F, 0x89, 0xAD, 0xAE, 0xF7, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0xF4, 0xAC, 0x98, 0x8A, 0xAA, 
   0xA7, 0x88, 0x89, 0x83, 0x89, 0x89, 0xAD, 0xAD, 0x8B, 0x7B, 0x6E, 0xAC, 0x16, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x1C, 0x9B, 0x9C, 0xB1, 0x6D, 0x5B, 
   0xB1, 0x5B, 0x4E, 0x73, 0x56, 0xA9, 0x56, 0x7B, 0x8B, 0xAA, 0x89, 0x84, 0x73, 0x74, 0x5A, 0x8B, 
   0x8B, 0xAF, 0x7B, 0x84, 0x92, 0x8E, 0x6A, 0x02, 0x7F, 0x7B, 0x7E, 0x90, 0x92, 0x6E, 0xA9, 0x68, 
   0x6F, 0x6D, 0x6F, 0x6D, 0x5E, 0x6D, 0x7D, 0x7D, 0xA7, 0xAA, 0xB0, 0xAD, 0x9E, 0xAA, 0x55, 0x2F, 
   0x4A, 0x53, 0x3A, 0x45, 0x53, 0x33, 0x50, 0x51, 0xB9, 0x9F, 0xA8, 0xA8, 0xA8, 0xA5, 0x82, 0x7D, 
   0x7D, 0x7D, 0x87, 0x7D, 0xA1, 0xA4, 0xA5, 0x7D, 0x7D, 0xA1, 0x7D, 0xA1, 0xC0, 0x25, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0xD6, 0xA2, 0x9E, 0x9E, 0x9F, 
   0x98, 0x8D, 0x8B, 0x84, 0x7F, 0xAF, 0x8B, 0x90, 0x8B, 0x8A, 0xAA, 0x85, 0xD2, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0xFE, 0x01, 0xA9, 0x6D, 0xA9, 0x01, 
   0xB1, 0x5B, 0x5B, 0x56, 0xA0, 0x02, 0x10, 0x7E, 0xB0, 0xA7, 0xAC, 0x7E, 0xB0, 0x5A, 0x7E, 0x8A, 
   0x8C, 0x8A, 0xAC, 0x84, 0x84, 0x8D, 0x73, 0x7E, 0x7E, 0x8D, 0x8B, 0x8C, 0x91, 0x92, 0x78, 0x73, 
   0x80, 0x68, 0x6A, 0x5E, 0x66, 0x68, 0x5A, 0x9C, 0xAB, 0x83, 0x8B, 0x8B, 0xA4, 0x9D, 0x55, 0x53, 
   0x39, 0x39, 0x53, 0x39, 0x3F, 0x33, 0x0E, 0x07, 0xA8, 0xA5, 0x87, 0xA8, 0xA8, 0xA5, 0xA5, 0xA5, 
   0xA1, 0x7D, 0x9F, 0x9F, 0x9E, 0xA4, 0xA4, 0x9E, 0x9F, 0x9F, 0x9F, 0x9F, 0xDA, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0xFE, 0xC1, 0x97, 0x9F, 0x93, 0xBF, 
   0xA1, 0x96, 0xAA, 0xAC, 0x7F, 0x74, 0x72, 0x8A, 0x8B, 0x8B, 0x7B, 0xAA, 0x72, 0x21, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x12, 0x5B, 0x5B, 0x56, 0x73, 
   0x72, 0xA9, 0xA9, 0x02, 0x5B, 0x9D, 0xB1, 0x5A, 0x7B, 0xA9, 0x6D, 0xAA, 0xA3, 0xAC, 0xAA, 0x83, 
   0x8A, 0x85, 0x7F, 0x85, 0x6E, 0x92, 0x7F, 0xAF, 0x7B, 0x84, 0x90, 0x8C, 0x8C, 0x8B, 0x8D, 0x78, 
   0x7A, 0x80, 0x68, 0x68, 0x86, 0x6A, 0x39, 0x5B, 0x9B, 0x9D, 0x5B, 0x60, 0x56, 0x02, 0x5B, 0x39, 
   0x45, 0x2F, 0x53, 0x52, 0x4C, 0x56, 0x96, 0xA8, 0xA8, 0xA8, 0xA5, 0xA5, 0x7D, 0xA5, 0x7D, 0x7D, 
   0xA4, 0x9F, 0xA4, 0x9E, 0xA4, 0x9E, 0x9E, 0x9E, 0x9E, 0x9F, 0xA4, 0x94, 0xF1, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x1B, 0x56, 0x97, 0x9C, 0xA6, 0x9C, 
   0x96, 0xA3, 0x9A, 0x7E, 0x96, 0x9A, 0xA9, 0x8A, 0x91, 0x8A, 0x7B, 0x72, 0x8B, 0xF7, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x15, 0xC4, 0x5B, 0x0E, 0xA9, 
   0x56, 0xA9, 0xAA, 0x7F, 0x9A, 0x72, 0x56, 0xA6, 0x5A, 0xAA, 0x8B, 0xB0, 0x72, 0x72, 0x7E, 0x88, 
   0x7E, 0xA9, 0x56, 0x6E, 0xA9, 0x73, 0x85, 0x73, 0x85, 0x84, 0x83, 0xAD, 0x8C, 0x91, 0x92, 0x8D, 
   0x79, 0x80, 0x7A, 0x80, 0x68, 0x86, 0x3F, 0x33, 0xB1, 0x10, 0x55, 0x40, 0x55, 0x56, 0x0E, 0x4E, 
   0x33, 0x53, 0x53, 0x48, 0x33, 0xA3, 0xA8, 0xA8, 0xA8, 0x87, 0xA5, 0xA5, 0xA8, 0xA1, 0xA1, 0x9F, 
   0xA2, 0xB9, 0xA5, 0xA4, 0xA4, 0xA8, 0xA4, 0x9E, 0xA2, 0x93, 0x95, 0xA1, 0x16, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x18, 0xB9, 0xAA, 0x73, 0x98, 0xAA, 
   0xA7, 0x5A, 0x9D, 0x7D, 0xA4, 0x9E, 0x7D, 0xBA, 0xAF, 0x72, 0xA9, 0xAF, 0xAA, 0x18, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0xF6, 0xC4, 0xB1, 0x56, 0xB1, 
   0xB9, 0xAC, 0x98, 0x9D, 0xA7, 0xB0, 0xAE, 0x89, 0xAA, 0xAA, 0xAE, 0x87, 0x89, 0x8A, 0xB2, 0x90, 
   0x85, 0x7E, 0xAF, 0x80, 0x73, 0x56, 0x80, 0x73, 0x72, 0xAF, 0x6E, 0xB0, 0x90, 0x91, 0x91, 0x92, 
   0x6E, 0x85, 0x68, 0x6F, 0x8E, 0x6A, 0x4D, 0x39, 0x56, 0x56, 0x60, 0x56, 0x72, 0x99, 0x9C, 0x40, 
   0x53, 0x45, 0x39, 0x01, 0xB9, 0xA8, 0xA5, 0xA5, 0x87, 0xA5, 0xA5, 0xA8, 0xA5, 0xA1, 0x9E, 0x9F, 
   0x9C, 0x9C, 0x9F, 0xA4, 0xA4, 0x9F, 0x9F, 0xB9, 0x9C, 0xA2, 0x9A, 0x39, 0x1C, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x18, 0x95, 0x96, 0xAC, 0x9C, 0xA7, 
   0xA3, 0xAC, 0xBF, 0x9F, 0x9E, 0x9F, 0xA5, 0x9E, 0x99, 0x73, 0x56, 0xA9, 0xAA, 0xF9, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x14, 0x6A, 0x72, 0x9B, 0x7E, 
   0x7E, 0x9D, 0x72, 0x01, 0x72, 0x8A, 0x82, 0xB0, 0x7B, 0xAC, 0x88, 0x88, 0x89, 0xB2, 0x8F, 0x8A, 
   0x8B, 0x83, 0x7E, 0x80, 0x73, 0x56, 0x7F, 0xAF, 0xAE, 0x7E, 0x6A, 0x5A, 0xAC, 0x7E, 0x8D, 0x92, 
   0xAA, 0x78, 0x80, 0x86, 0x86, 0x65, 0x4E, 0x51, 0x56, 0x9B, 0x9D, 0x04, 0x7D, 0x7D, 0xB9, 0x40, 
   0x39, 0x53, 0x33, 0x7D, 0xA8, 0xA5, 0x7D, 0x87, 0xA5, 0xA8, 0x96, 0xB9, 0x07, 0xBF, 0x9F, 0x97, 
   0xB9, 0x94, 0xA4, 0xA4, 0x9E, 0xA2, 0xA5, 0x9D, 0x07, 0x0E, 0x5B, 0xB1, 0x1D, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0xF7, 0x97, 0x9C, 0xAA, 0xAD, 0xAD, 
   0x82, 0x9F, 0x9E, 0x9E, 0x9E, 0x7D, 0x96, 0xA7, 0xA5, 0xAF, 0xB1, 0x02, 0x56, 0x1D, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0xEF, 0x72, 0x9B, 0xB0, 0xA6, 
   0x83, 0xBD, 0x4D, 0xA0, 0x02, 0x9B, 0xAC, 0x72, 0x56, 0x5A, 0x72, 0x7E, 0xAE, 0x83, 0x8A, 0xAF, 
   0x83, 0x8B, 0x72, 0x7F, 0x72, 0x7E, 0x8A, 0x8F, 0x89, 0x90, 0x7B, 0x72, 0xB1, 0x73, 0xA9, 0x7E, 
   0x7F, 0x80, 0x7F, 0x80, 0x6F, 0x6F, 0x4E, 0x39, 0x51, 0x9D, 0xA0, 0x6D, 0x9A, 0xA1, 0x73, 0x55, 
   0x40, 0x5B, 0xBA, 0xA4, 0xA8, 0x87, 0xA5, 0xA8, 0xA5, 0xA1, 0xAD, 0x9A, 0x99, 0xC0, 0xC0, 0x9C, 
   0xA2, 0xA4, 0x9F, 0xA4, 0xA2, 0xA3, 0x7D, 0x94, 0x4C, 0x54, 0x39, 0x01, 0x1D, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x1F, 0x0E, 0xAA, 0xA1, 0xA4, 0xA2, 
   0x9F, 0x9F, 0x9E, 0x9E, 0xA5, 0x96, 0xA1, 0xB9, 0xAE, 0x9A, 0x73, 0x73, 0x73, 0x20, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0xE2, 0xA9, 0x56, 0x73, 0xAC, 
   0x88, 0x83, 0xAC, 0xAC, 0xAD, 0x82, 0xAC, 0x8A, 0xAE, 0xAD, 0x7B, 0x56, 0x72, 0x5A, 0xAC, 0xAF, 
   0x7E, 0x8E, 0x80, 0x5A, 0xAC, 0xAE, 0x8F, 0x88, 0x88, 0x89, 0x90, 0x7F, 0x6D, 0x74, 0x72, 0x72, 
   0x6A, 0xAF, 0x7B, 0x6D, 0x5E, 0x86, 0x52, 0x52, 0x39, 0xA0, 0x9C, 0x4E, 0x04, 0xA5, 0xAC, 0x03, 
   0x4D, 0x96, 0xA4, 0xA8, 0xA5, 0xA5, 0xA8, 0xA1, 0x98, 0x8A, 0xA3, 0xA1, 0x93, 0x98, 0x9D, 0xC0, 
   0x06, 0xC0, 0xA1, 0x9E, 0x99, 0xA3, 0xBF, 0x9B, 0x4E, 0x5B, 0x33, 0x3F, 0x1C, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x0D, 0xA1, 0xA4, 0xA8, 0xA4, 
   0x9F, 0x7D, 0xA5, 0x9F, 0xA3, 0x7B, 0xAC, 0x8B, 0x84, 0x72, 0x8D, 0x6E, 0xC6, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0xEE, 0x5A, 0xA9, 0x99, 0x82, 
   0x82, 0x82, 0xAE, 0xAA, 0x89, 0x89, 0xB2, 0xB2, 0x89, 0x7E, 0x7F, 0x9B, 0x72, 0x72, 0xB0, 0xB0, 
   0x7E, 0x72, 0x0E, 0x5A, 0x91, 0x8C, 0x89, 0xAE, 0xB0, 0x7E, 0x91, 0xAF, 0x72, 0x84, 0x89, 0x5A, 
   0x7F, 0x0E, 0xA9, 0x7F, 0x7F, 0x68, 0x39, 0x39, 0x4D, 0x9A, 0x56, 0x39, 0x4B, 0xC2, 0x98, 0x89, 
   0x7D, 0xA4, 0xA8, 0xA5, 0x97, 0x87, 0xA1, 0x99, 0x9A, 0x98, 0xA2, 0x94, 0x08, 0x9B, 0x05, 0xC0, 
   0x97, 0x98, 0xB9, 0xA2, 0xBA, 0xA5, 0xB9, 0x5B, 0x5B, 0x10, 0x02, 0x01, 0x29, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x13, 0xA4, 0xA4, 0xA4, 0x9F, 
   0x9E, 0xA3, 0xC5, 0x98, 0x7B, 0x56, 0x98, 0x6E, 0x92, 0x92, 0x6E, 0x92, 0xEF, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0xE6, 0x72, 0xAA, 0x82, 0x88, 
   0x82, 0x82, 0xAE, 0xAE, 0x8F, 0x89, 0xAE, 0x89, 0xAE, 0x8A, 0xB0, 0xAA, 0xAD, 0x88, 0x8F, 0x83, 
   0x83, 0x8B, 0x6E, 0x7B, 0x8A, 0x83, 0x7E, 0xA9, 0x5B, 0xA9, 0xAF, 0x56, 0x8A, 0x8F, 0x8F, 0xAE, 
   0xA0, 0x56, 0xA0, 0xA7, 0x82, 0x89, 0x36, 0x3E, 0x37, 0x03, 0xB1, 0x55, 0x40, 0x4D, 0xA6, 0xA1, 
   0xA4, 0xA8, 0xA4, 0xA5, 0x96, 0x97, 0xAA, 0xB9, 0x97, 0x97, 0x94, 0x98, 0xC2, 0x99, 0x04, 0x9B, 
   0x05, 0x9D, 0x9E, 0x98, 0x96, 0x07, 0x01, 0x4E, 0x33, 0x52, 0x52, 0x01, 0x2C, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x23, 0xBF, 0xA4, 0x9E, 0x9E, 
   0x7D, 0x9A, 0x56, 0x72, 0xA9, 0x72, 0x92, 0x92, 0x7C, 0x7C, 0x6E, 0x8D, 0xFE, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x25, 0xCB, 0x98, 0xB0, 0xA7, 0xB2, 
   0xB2, 0x8F, 0x8F, 0xB2, 0xAD, 0xAA, 0x7E, 0x7E, 0x7E, 0xAD, 0x88, 0x82, 0xB2, 0x8F, 0x8F, 0x8F, 
   0x8F, 0x89, 0x8B, 0x8B, 0x8A, 0x8D, 0x80, 0x02, 0x60, 0x7E, 0x72, 0x5B, 0x5A, 0xAA, 0xA7, 0x8B, 
   0x56, 0xC1, 0xA5, 0xA4, 0xA5, 0x88, 0x39, 0x37, 0x33, 0xB9, 0x56, 0xB1, 0x51, 0x56, 0x7D, 0xA8, 
   0xA8, 0xA8, 0xA8, 0xA5, 0x9C, 0x96, 0x96, 0xA3, 0x99, 0x96, 0xB9, 0x33, 0x9C, 0x0A, 0x4D, 0xC0, 
   0x01, 0x98, 0xA1, 0x56, 0x9C, 0x33, 0x5B, 0x33, 0x01, 0x01, 0x01, 0x39, 0x31, 0x24, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0xF8, 0xA2, 0xA4, 0xA4, 
   0x7D, 0x7B, 0x72, 0x7E, 0x6E, 0x6E, 0x7C, 0x7C, 0x7C, 0x7C, 0x7C, 0xF0, 0x26, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x21, 0x8B, 0xAC, 0xB0, 0xAA, 0x89, 
   0x8F, 0xAE, 0x89, 0x8F, 0x8F, 0xB0, 0x8B, 0x8A, 0x8B, 0x89, 0x89, 0xAD, 0x8F, 0x89, 0x89, 0x8C, 
   0x8C, 0x89, 0x8C, 0x89, 0x90, 0x7E, 0x72, 0x72, 0x5A, 0xA3, 0xB0, 0x7F, 0xA6, 0x88, 0x83, 0x72, 
   0x9A, 0xB9, 0x9C, 0xA9, 0x73, 0x6A, 0x38, 0x52, 0x01, 0xAB, 0x5A, 0xAF, 0xB9, 0xA1, 0x9F, 0xA5, 
   0xA5, 0x96, 0x96, 0x96, 0xA2, 0xA2, 0x98, 0xC0, 0x98, 0x96, 0x01, 0x39, 0x04, 0x56, 0x0D, 0x03, 
   0x0E, 0x9E, 0x99, 0xA0, 0x01, 0x5B, 0x01, 0x33, 0x33, 0x33, 0x33, 0x39, 0x01, 0x20, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x17, 0xC3, 0xA3, 
   0xA6, 0x7E, 0x7B, 0x78, 0x6E, 0x7C, 0x7C, 0x7C, 0x7C, 0x6E, 0xE9, 0x26, 0x26, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x18, 0x7B, 0xAA, 0xAC, 0x8A, 0x8A, 
   0x8A, 0x89, 0x8C, 0x89, 0x8F, 0x8C, 0x8F, 0x8F, 0x89, 0x89, 0x89, 0xAD, 0x8F, 0x89, 0x8C, 0x89, 
   0x90, 0x89, 0x89, 0x89, 0x89, 0x8B, 0x7B, 0x5A, 0xAF, 0xAC, 0xA9, 0x9B, 0xAD, 0xAD, 0x7B, 0x02, 
   0x60, 0x60, 0x5C, 0x5D, 0x5D, 0x5C, 0x34, 0x39, 0x4D, 0x96, 0x8A, 0xAD, 0x9F, 0x9F, 0xA4, 0xA2, 
   0xAB, 0xA5, 0xA3, 0xB9, 0x07, 0x9B, 0x96, 0xA1, 0x98, 0x9D, 0x01, 0x04, 0x0E, 0xC2, 0x04, 0x02, 
   0x97, 0x96, 0x56, 0x01, 0x60, 0x33, 0x33, 0x4E, 0x4E, 0x39, 0x39, 0x10, 0x33, 0x29, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x21, 0xDD, 
   0x7B, 0x84, 0x92, 0x7C, 0x7C, 0x7C, 0x7C, 0x79, 0xCC, 0x20, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0xD8, 0x72, 0xAF, 0x6E, 0x84, 0x84, 
   0x8D, 0x8B, 0x83, 0x88, 0x7E, 0x8A, 0xA7, 0x8F, 0xAD, 0x83, 0x8A, 0xA7, 0x83, 0x8B, 0xAE, 0x89, 
   0x8C, 0xAD, 0x88, 0x88, 0x8F, 0x83, 0xB0, 0x72, 0xA0, 0x9B, 0xAF, 0xC4, 0x4D, 0x5B, 0x5C, 0x5D, 
   0x58, 0x60, 0x57, 0x76, 0x5D, 0x5D, 0x4A, 0x39, 0x9C, 0xA5, 0x7D, 0xA8, 0x9F, 0xA4, 0xC0, 0x97, 
   0x93, 0x99, 0xBF, 0x03, 0x3F, 0x4B, 0xA2, 0x9F, 0x96, 0x02, 0x06, 0x4C, 0x02, 0x3E, 0xC2, 0x38, 
   0x96, 0x73, 0x57, 0x5B, 0x4E, 0x56, 0x33, 0xB1, 0x4E, 0x10, 0x10, 0x4E, 0x10, 0x31, 0x24, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 
   0xFE, 0xE9, 0xEF, 0xD4, 0xCC, 0xF6, 0xE9, 0xFE, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0xFE, 0x74, 0x7F, 0xAF, 0xAC, 0x72, 0xAF, 
   0x7B, 0x7B, 0xAC, 0x72, 0x7F, 0xB0, 0x8A, 0xAC, 0x6E, 0x8A, 0x8A, 0x8A, 0xAC, 0xAF, 0x8A, 0xA7, 
   0x89, 0xA7, 0xA7, 0xA3, 0xA7, 0xAA, 0x5A, 0x56, 0x56, 0x73, 0x60, 0x5C, 0x5C, 0x5C, 0x5D, 0x5D, 
   0x76, 0x76, 0x5C, 0x5C, 0x5C, 0x6B, 0x56, 0x98, 0xA2, 0xA4, 0xA8, 0x9E, 0x7D, 0x9A, 0x9C, 0x99, 
   0x9B, 0x98, 0x9C, 0x4D, 0x3F, 0x03, 0x99, 0x95, 0x9D, 0x0A, 0x9C, 0x02, 0x4B, 0x4D, 0x01, 0x5A, 
   0x0E, 0x5B, 0xB1, 0x4E, 0x02, 0x01, 0x10, 0x10, 0x4E, 0x4E, 0x39, 0x39, 0x33, 0x01, 0x1C, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0xDD, 0x73, 0x02, 0xAF, 0xA6, 0xB0, 0xAF, 
   0x8A, 0xAA, 0x8B, 0x9D, 0xA9, 0xAC, 0xB0, 0xAE, 0x89, 0xAD, 0xA7, 0x8A, 0xA6, 0xAD, 0xAB, 0x96, 
   0xA6, 0xAA, 0x73, 0x6A, 0x6D, 0x6D, 0x6A, 0x5C, 0x5C, 0x5D, 0x5C, 0x76, 0x5C, 0x5D, 0x5D, 0x5D, 
   0x5D, 0x76, 0x5C, 0x5D, 0x76, 0x5D, 0x98, 0xA4, 0xA8, 0xA4, 0xA4, 0x96, 0x99, 0x05, 0x9B, 0x9D, 
   0x04, 0xB9, 0x56, 0x37, 0x36, 0x03, 0x96, 0xA5, 0xA0, 0x06, 0x33, 0x4B, 0x37, 0x52, 0x02, 0x0E, 
   0x6D, 0xB1, 0xB1, 0xB1, 0x4D, 0x01, 0x4E, 0x5B, 0x4E, 0x39, 0x33, 0x39, 0x10, 0x10, 0x2F, 0x24, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0xFD, 0xBD, 0x8D, 0x7E, 0x9B, 0x8D, 0xB0, 0xAE, 
   0xA6, 0xAA, 0x8B, 0xB0, 0x8A, 0xA6, 0x8A, 0x83, 0xB2, 0x8A, 0x7B, 0xB0, 0x82, 0xA4, 0x7D, 0x8A, 
   0x74, 0x75, 0x5B, 0x75, 0x6D, 0x5B, 0x60, 0x60, 0x5C, 0x5C, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 0x5D, 
   0x76, 0x60, 0x5C, 0x5D, 0x5C, 0x5D, 0xA5, 0xA8, 0xA4, 0xA8, 0xA2, 0x05, 0x0A, 0x56, 0x04, 0xBF, 
   0x0B, 0x01, 0x4D, 0x05, 0x0C, 0xA3, 0xBF, 0xB9, 0xC2, 0x02, 0x33, 0x56, 0x3F, 0x01, 0x56, 0xA3, 
   0xA9, 0x73, 0x01, 0x6D, 0x4E, 0x5B, 0x4E, 0x51, 0x4E, 0x39, 0x10, 0x39, 0x39, 0x4E, 0x56, 0xE5, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x25, 0xC6, 0x81, 0x80, 0x8D, 0x6E, 0x8E, 0xA9, 0xAC, 
   0xAE, 0x82, 0x88, 0xAE, 0xB2, 0xB2, 0xB2, 0xB2, 0x87, 0x82, 0xB0, 0xAE, 0xA7, 0xAF, 0x73, 0x5C, 
   0x60, 0x75, 0x66, 0x80, 0x80, 0x75, 0x76, 0x6A, 0x5C, 0x5C, 0x5D, 0x5D, 0x5D, 0x59, 0x5D, 0x5D, 
   0x60, 0x60, 0x60, 0x5D, 0x5D, 0x5D, 0xA4, 0xA4, 0xA5, 0xA3, 0x98, 0xC2, 0x3F, 0x37, 0x97, 0x9C, 
   0x3F, 0x33, 0x56, 0xBA, 0x97, 0x93, 0xA2, 0x9A, 0x02, 0x3F, 0x02, 0x4B, 0x01, 0x10, 0x9B, 0xA1, 
   0x7E, 0x73, 0xB1, 0x51, 0x5B, 0x4E, 0x5B, 0x4E, 0x5B, 0x33, 0x39, 0x39, 0x3A, 0x56, 0x98, 0x96, 
   0xF5, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x25, 0xD3, 0x62, 0x62, 0x62, 0x62, 0x62, 0x62, 0x62, 0x62, 
   0x79, 0x7C, 0x92, 0x91, 0x91, 0x8B, 0x90, 0x90, 0x84, 0x72, 0xA9, 0x6A, 0x6A, 0x6A, 0x5E, 0x60, 
   0x76, 0x6A, 0x80, 0x80, 0x73, 0x75, 0x76, 0x75, 0x5C, 0x76, 0x5D, 0x5C, 0x76, 0x5D, 0x5D, 0x5D, 
   0x60, 0x5C, 0x60, 0x5D, 0x5C, 0x5D, 0xA4, 0xA4, 0x99, 0x01, 0x4D, 0x52, 0x4D, 0x37, 0x0E, 0x02, 
   0x37, 0x3F, 0xC1, 0xB9, 0x97, 0x94, 0xA5, 0xA0, 0x01, 0x33, 0x52, 0x3F, 0xB1, 0xA0, 0x9F, 0x9A, 
   0xA0, 0x9D, 0x56, 0x6D, 0x5B, 0x5B, 0x5B, 0x4E, 0x51, 0x4E, 0x39, 0x4E, 0x01, 0xBA, 0x96, 0xA7, 
   0xC2, 0x20, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0xDF, 0x62, 0x62, 0x62, 0x62, 0x62, 0x62, 0x62, 0x62, 0x62, 
   0x62, 0x62, 0x62, 0x62, 0x62, 0x62, 0x62, 0x61, 0x81, 0x69, 0x6A, 0x6A, 0x65, 0x6D, 0x75, 0x5E, 
   0x75, 0x60, 0x6D, 0x5B, 0x6D, 0x6D, 0x76, 0x75, 0x76, 0x5D, 0x76, 0x5D, 0x5C, 0x5D, 0x5D, 0x5C, 
   0x60, 0x60, 0x60, 0x5D, 0x5C, 0x5D, 0xA8, 0x7D, 0x03, 0x0A, 0x9D, 0x52, 0x56, 0x02, 0x4D, 0x4C, 
   0x4C, 0x0E, 0x9B, 0x98, 0xB9, 0x9B, 0xA1, 0x88, 0x9B, 0x3F, 0x4B, 0x02, 0xC4, 0x07, 0xBF, 0xA9, 
   0x02, 0xB1, 0x5A, 0x9A, 0xA9, 0x51, 0x39, 0xB1, 0x5B, 0x10, 0x56, 0x02, 0x9B, 0xA2, 0xAA, 0x56, 
   0xC2, 0x9A, 0xFA, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0xDF, 0x62, 0x62, 0x62, 0x62, 0x70, 0x62, 0x62, 0x62, 0x62, 0x62, 
   0x62, 0x62, 0x62, 0x62, 0x62, 0x70, 0x62, 0x62, 0x62, 0x81, 0x81, 0x6F, 0x5E, 0x75, 0x86, 0x6A, 
   0x75, 0x60, 0x76, 0x76, 0x60, 0x5B, 0x76, 0x6A, 0x6A, 0x5C, 0x59, 0x5D, 0x5C, 0x6B, 0x5D, 0x5C, 
   0x76, 0x76, 0x60, 0x60, 0x5C, 0x6B, 0xA4, 0xA8, 0x9C, 0x9B, 0x01, 0x33, 0x0E, 0x4D, 0x4B, 0x4C, 
   0x56, 0x0E, 0x0C, 0xA1, 0x9B, 0xA0, 0x93, 0xA8, 0x98, 0x33, 0x9D, 0x9A, 0x04, 0x93, 0x9D, 0xA9, 
   0x73, 0x5B, 0x02, 0x5A, 0x73, 0x5B, 0x4D, 0x02, 0x9D, 0x72, 0x4D, 0x9C, 0x97, 0x5A, 0x02, 0x9A, 
   0xA3, 0xB9, 0xA6, 0xF0, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0xDC, 0x62, 0x62, 0x62, 0x62, 0x70, 0x62, 0x62, 0x62, 0x62, 0x62, 0x70, 
   0x62, 0x62, 0x62, 0x62, 0x62, 0x62, 0x62, 0x62, 0x62, 0x62, 0x62, 0x81, 0x6F, 0x5E, 0x75, 0x86, 
   0x75, 0x75, 0x76, 0x75, 0x60, 0x60, 0x75, 0x75, 0x75, 0x75, 0x5C, 0x5D, 0x5C, 0x76, 0x5D, 0x5D, 
   0x76, 0x5C, 0x60, 0x5C, 0x5C, 0x5C, 0x96, 0xA1, 0x03, 0x9D, 0x0E, 0xC2, 0x38, 0x01, 0x39, 0x38, 
   0x4C, 0xA5, 0x97, 0x9A, 0x9C, 0x9B, 0x03, 0x9A, 0xA9, 0x01, 0x99, 0xB9, 0x98, 0x9B, 0x4E, 0x98, 
   0x56, 0x6D, 0xB1, 0x02, 0x60, 0xB1, 0x56, 0x9A, 0x9D, 0x98, 0xAC, 0x97, 0x9A, 0x74, 0x02, 0x9C, 
   0x98, 0x8A, 0x7C, 0x7A, 0xDC, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0xFE, 0xD0, 0x62, 0x70, 0x62, 0x70, 0x62, 0x70, 0x62, 0x70, 0x62, 0x70, 0x62, 0x62, 
   0x62, 0x62, 0x62, 0x70, 0x62, 0x70, 0x62, 0x70, 0x62, 0x62, 0x62, 0x62, 0x61, 0x81, 0x65, 0x5E, 
   0x75, 0x6D, 0x5E, 0x76, 0x5E, 0x75, 0x75, 0x76, 0x75, 0x6A, 0x76, 0x5C, 0x5C, 0x60, 0x5D, 0x5D, 
   0x60, 0x5C, 0x5C, 0x60, 0x5C, 0x5C, 0xAC, 0xA6, 0x56, 0x07, 0x0A, 0x4D, 0xC2, 0x03, 0x4B, 0x04, 
   0x97, 0x07, 0xA3, 0x03, 0x98, 0x56, 0xB1, 0x56, 0xBA, 0xB9, 0xA1, 0x0A, 0x02, 0x02, 0x5B, 0xA3, 
   0xA0, 0x56, 0x72, 0xA6, 0x9B, 0x60, 0x73, 0xC4, 0x56, 0x0E, 0xA7, 0xBA, 0xA9, 0x02, 0x36, 0x9C, 
   0xAE, 0x92, 0x61, 0x61, 0x61, 0xC6, 0x1D, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 
   0x26, 0xDF, 0x6F, 0x62, 0x70, 0x62, 0x62, 0x70, 0x62, 0x62, 0x70, 0x62, 0x70, 0x62, 0x70, 0x62, 
   0x70, 0x70, 0x62, 0x62, 0x70, 0x62, 0x62, 0x70, 0x62, 0x70, 0x62, 0x70, 0x62, 0x62, 0x62, 0x65, 
   0x5E, 0x6A, 0x75, 0x5E, 0x6A, 0x75, 0x6A, 0x6A, 0x60, 0x76, 0x76, 0x5D, 0x76, 0x5E, 0x5D, 0x5D, 
   0x5C, 0x5C, 0x5C, 0x57, 0x60, 0x5C, 0x98, 0xAE, 0x01, 0x9B, 0x9B, 0x52, 0x4C, 0x0A, 0x06, 0x9A, 
   0x99, 0xBA, 0x96, 0xA5, 0x9A, 0x56, 0x0E, 0xB9, 0x96, 0xA5, 0xA2, 0x10, 0x02, 0x0E, 0x5B, 0x02, 
   0x6A, 0x60, 0xA9, 0xB9, 0x73, 0x6D, 0x02, 0xA9, 0x73, 0x99, 0xA1, 0xAF, 0xB1, 0xC4, 0x9A, 0x5A, 
   0x6E, 0x81, 0x81, 0x61, 0x81, 0x81, 0x61, 0xC7, 0xEA, 0x24, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x24, 0xDC, 
   0xC6, 0x70, 0x70, 0x62, 0x62, 0x70, 0x62, 0x62, 0x62, 0x70, 0x62, 0x70, 0x62, 0x62, 0x62, 0x70, 
   0x62, 0x62, 0x70, 0x70, 0x70, 0x62, 0x70, 0x62, 0x70, 0x70, 0x62, 0x70, 0x62, 0x62, 0x62, 0x62, 
   0x5E, 0x5E, 0x66, 0x6A, 0x6D, 0x75, 0x75, 0x5B, 0x76, 0x5B, 0x76, 0x76, 0x5C, 0x76, 0x5C, 0x5D, 
   0x76, 0x60, 0x5C, 0x58, 0x76, 0x76, 0x82, 0x96, 0x5A, 0xBA, 0x9B, 0x45, 0x39, 0x3F, 0x01, 0xC2, 
   0x07, 0x96, 0x9F, 0xAA, 0x9B, 0xB0, 0xA2, 0x96, 0xBA, 0x9E, 0x05, 0x4E, 0x9A, 0x56, 0xB1, 0x57, 
   0x60, 0x57, 0x5B, 0x5B, 0x60, 0x60, 0xB1, 0x03, 0x9D, 0x96, 0xA6, 0x56, 0x73, 0x02, 0x56, 0x78, 
   0x81, 0x61, 0x81, 0x61, 0x61, 0x62, 0x62, 0x62, 0x62, 0x80, 0xD0, 0xDF, 0xFE, 0x25, 0x26, 0x26, 
   0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x26, 0x24, 0xFD, 0xDC, 0xC7, 0x70, 0x62, 
   0x70, 0x62, 0x62, 0x62, 0x70, 0x62, 0x62, 0x70, 0x62, 0x70, 0x62, 0x70, 0x62, 0x70, 0x70, 0x70, 
   0x62, 0x70, 0x70, 0x62, 0x62, 0x62, 0x70, 0x70, 0x70, 0x62, 0x70, 0x70, 0x62, 0x70, 0x70, 0x62, 
   0x62, 0x69, 0x5E, 0x5E, 0x76, 0x5B, 0x60, 0x75, 0x75, 0x5B, 0x60, 0x5D, 0x76, 0x76, 0x5D, 0x6B, 
   0x5C, 0x57, 0x57, 0x5D, 0x5D, 0x5C, 0xA4, 0x9B, 0x4B, 0xB9, 0xB9, 0x01, 0x33, 0x56, 0xC2, 0x96, 
   0x9B, 0x9E, 0xA2, 0xAD, 0xA1, 0x9F, 0xA2, 0x9A, 0x5A, 0x99, 0x9B, 0x4C, 0x9D, 0x3A, 0x57, 0x57, 
   0x60, 0x60, 0x33, 0x5B, 0x60, 0x5B, 0x73, 0x9B, 0xAB, 0xBA, 0xA9, 0xB1, 0x02, 0xAF, 0x7E, 0x81, 
   0x79, 0x81, 0x61, 0x81, 0x62, 0x61, 0x62, 0x61, 0x62, 0x62, 0x62, 0x61, 0x62, 0x73, 0xC7, 0xD0, 
   0xDC, 0xDC, 0xEA, 0xDF, 0xDF, 0xDF, 0xDC, 0xD3, 0xD0, 0xC7, 0x8E, 0x70, 0x62, 0x70, 0x62, 0x70, 
   0x62, 0x70, 0x70, 0x70, 0x62, 0x70, 0x62, 0x70, 0x62, 0x70, 0x62, 0x70, 0x62, 0x70, 0x62, 0x70, 
   0x70, 0x62, 0x70, 0x70, 0x70, 0x70, 0x70, 0x62, 0x70, 0x70, 0x70, 0x62, 0x70, 0x62, 0x70, 0x62, 
   0x70, 0x62, 0x70, 0x5E, 0x76, 0x5B, 0x6A, 0x6A, 0x60, 0x60, 0x60, 0x5B, 0x60, 0x76, 0x75, 0x5D, 
   0x5C, 0x5C, 0x5C, 0x5C, 0x5D, 0x5D, 0x9F, 0x56, 0x39, 0x9D, 0x56, 0x33, 0xA0, 0x98, 0xA2, 0xB9, 
   0x96, 0x9C, 0x96, 0x9E, 0x9E, 0x96, 0x56, 0x5B, 0x02, 0x0E, 0x4B, 0x9B, 0x56, 0x5B, 0x57, 0x60, 
   0x6A, 0x6A, 0x56, 0x01, 0x76, 0xA0, 0x99, 0xAC, 0x96, 0x7B, 0x56, 0x56, 0xA9, 0xAA, 0x6E, 0x7A, 
   0x81, 0x81, 0x81, 0x81, 0x61, 0x81, 0x62, 0x62, 0x62, 0x62, 0x62, 0x62, 0x62, 0x62, 0x62, 0x62, 
   0x62, 0x62, 0x62, 0x70, 0x62, 0x70, 0x62, 0x70, 0x70, 0x62, 0x70, 0x62, 0x70, 0x62, 0x62, 0x70, 
   0x62, 0x62, 0x62, 0x62, 0x70, 0x62, 0x70, 0x62, 0x70, 0x62, 0x70, 0x62, 0x70, 0x62, 0x70, 0x62, 
   0x62, 0x70, 0x62, 0x70, 0x62, 0x62, 0x70, 0x70, 0x62, 0x70, 0x70, 0x70, 0x70, 0x70, 0x62, 0x70, 
   0x62, 0x70, 0x62, 0x81, 0x5E, 0x76, 0x5B, 0x5B, 0x60, 0x60, 0x57, 0x6A, 0x6A, 0x60, 0x75, 0x5C, 
   0x5C, 0x60, 0x58, 0x5C, 0x6B, 0x5C, 0x7D, 0xA7, 0x9A, 0x33, 0xC4, 0x9A, 0xBA, 0x7D, 0xA4, 0xA1, 
   0x97, 0x7D, 0x9E, 0xA1, 0x9B, 0x5B, 0x51, 0x10, 0x02, 0x4D, 0xC2, 0x0E, 0x9A, 0x5B, 0xB1, 0x9D, 
   0x9B, 0x72, 0x56, 0xA9, 0xB1, 0x9B, 0xC2, 0x98, 0xAA, 0x73, 0xB1, 0xC4, 0x7B, 0x92, 0x78, 0x79, 
   0x79, 0x7A, 0x7A, 0x81, 0x81, 0x81, 0x81, 0x62, 0x81, 0x62, 0x62, 0x62, 0x62, 0x62, 0x62, 0x62, 
   0x62, 0x70, 0x62, 0x62, 0x70, 0x62, 0x70, 0x62, 0x62, 0x70, 0x62, 0x70, 0x62, 0x70, 0x70, 0x62, 
   0x70, 0x70, 0x70, 0x70, 0x62, 0x70, 0x62, 0x70, 0x62, 0x70, 0x62, 0x70, 0x62, 0x70, 0x62, 0x70, 
   0x70, 0x70, 0x62, 0x70, 0x70, 0x70, 0x70, 0x62, 0x70, 0x70, 0x62, 0x70, 0x62, 0x70, 0x70, 0x62, 
   0x70, 0x62, 0x70, 0x62, 0x81, 0x5E, 0x60, 0x76, 0x5B, 0x57, 0x60, 0x5B, 0x5B, 0x75, 0x75, 0x75, 
   0x60, 0x76, 0x76, 0x60, 0x5D, 0x6A, 0x88, 0xB9, 0xA5, 0x9C, 0x9B, 0xA1, 0xA4, 0xA2, 0xBA, 0xAD, 
   0x7D, 0xA7, 0x7E, 0x56, 0x4E, 0x39, 0x39, 0x33, 0x02, 0x3F, 0xC2, 0x03, 0xAA, 0xAF, 0x74, 0x02, 
   0x5A, 0xAF, 0x6A, 0xB1, 0x56, 0x98, 0x7E, 0x9D, 0xA9, 0x7F, 0x56, 0x5A, 0x6E, 0x6E, 0x78, 0x79, 
   0x79, 0x7A, 0x7A, 0x7A, 0x81, 0x81, 0x81, 0x61, 0x62, 0x62, 0x61, 0x61, 0x62, 0x62, 0x62, 0x6F, 
   0x62, 0x62, 0x62, 0x70, 0x62, 0x62, 0x70, 0x62, 0x70, 0x70, 0x62, 0x70, 0x70, 0x70, 0x62, 0x62, 
   0x70, 0x62, 0x70, 0x62, 0x70, 0x70, 0x70, 0x62, 0x70, 0x62, 0x70, 0x70, 0x70, 0x62, 0x70, 0x70, 
   0x70, 0x70, 0x70, 0x70, 0x62, 0x70, 0x62, 0x70, 0x70, 0x62, 0x70, 0x70, 0x70, 0x70, 0x62, 0x70, 
   0x70, 0x70, 0x62, 0x70, 0x62, 0x70, 0x5E, 0x60, 0x60, 0x5B, 0x5C, 0x60, 0x5B, 0x6A, 0x6A, 0x75, 
   0x76, 0x75, 0x76, 0x76, 0x5C, 0x76, 0xC0, 0x73, 0xA7, 0x7D, 0x7D, 0xA5, 0xA1, 0x98, 0xA6, 0x72, 
   0x80, 0x6F, 0x86, 0x74, 0x01, 0x4E, 0x4E, 0x01, 0x4B, 0x56, 0x56, 0x98, 0xA3, 0xA9, 0x5B, 0x60, 
   0x6A, 0x60, 0xB1, 0xAF, 0xB0, 0xA7, 0x98, 0x72, 0x56, 0xA0, 0x73, 0x5A, 0xAF, 0x6E, 0x79, 0x78, 
   0x79, 0x79, 0x79, 0x7A, 0x7A, 0x81, 0x81, 0x61, 0x81, 0x61, 0x8E, 0x62, 0x61, 0x62, 0x62, 0x70, 
   0x62, 0x62, 0x70, 0x62, 0x70, 0x70, 0x62, 0x70, 0x62, 0x62, 0x70, 0x62, 0x70, 0x62, 0x70, 0x70, 
   0x70, 0x70, 0x70, 0x70, 0x62, 0x70, 0x62, 0x70, 0x62, 0x70, 0x62, 0x70, 0x62, 0x70, 0x62, 0x70, 
   0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x62, 0x70, 0x70, 0x62, 0x62, 0x62, 0x70, 0x70, 0x70, 
   0x62, 0x70, 0x70, 0x62, 0x70, 0x62, 0x69, 0x5E, 0x76, 0x58, 0x57, 0x5B, 0x60, 0x6A, 0x6A, 0x75, 
   0x5C, 0x6D, 0x6D, 0x76, 0x59, 0x6B, 0x9C, 0x39, 0x9C, 0x96, 0xAD, 0xA1, 0x9C, 0x5A, 0x85, 0x6F, 
   0x70, 0x62, 0x6F, 0x6F, 0x73, 0xB1, 0x10, 0x3F, 0x0E, 0x4B, 0x39, 0x5A, 0x56, 0x5C, 0x72, 0x74, 
   0x5B, 0x60, 0x56, 0x9B, 0xBA, 0x88, 0x7E, 0x85, 0x56, 0x73, 0x73, 0x7F, 0x6E, 0x78, 0x78, 0x78, 
   0x78, 0x79, 0x79, 0x7A, 0x81, 0x7A, 0x81, 0x81, 0x62, 0x81, 0x61, 0x61, 0x8E, 0x62, 0x62, 0x62, 
   0x70, 0x62, 0x62, 0x62, 0x62, 0x70, 0x62, 0x70, 0x70, 0x70, 0x62, 0x70, 0x62, 0x62, 0x62, 0x70, 
   0x62, 0x70, 0x62, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 
   0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x62, 0x70, 0x70, 0x70, 0x70, 0x62, 0x70, 0x62, 
   0x70, 0x62, 0x70, 0x70, 0x62, 0x70, 0x62, 0x6C, 0x76, 0x5C, 0x57, 0x76, 0x57, 0x5B, 0x76, 0x76, 
   0x5C, 0x75, 0x80, 0x6D, 0x5E, 0x6A, 0x9B, 0xB1, 0x7E, 0x7F, 0xA9, 0xAF, 0x7E, 0xA9, 0x6F, 0x62, 
   0x62, 0x62, 0x6F, 0x70, 0x70, 0x80, 0x74, 0x3A, 0x02, 0x02, 0x39, 0x01, 0xB1, 0x5B, 0x56, 0x60, 
   0x60, 0xB1, 0x56, 0x98, 0xA7, 0x89, 0xAA, 0x5A, 0xA9, 0x73, 0x72, 0x72, 0x78, 0x78, 0x78, 0x79, 
   0x79, 0x79, 0x79, 0x7A, 0x7A, 0x81, 0x81, 0x81, 0x81, 0x61, 0x81, 0x8E, 0x61, 0x62, 0x62, 0x62, 
   0x62, 0x62, 0x62, 0x70, 0x62, 0x62, 0x70, 0x62, 0x70, 0x62, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 
   0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 
   0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 
   0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x62, 0x62, 0x5E, 0x5C, 0x5D, 0x5D, 0x60, 0x60, 0x76, 0x76, 
   0x76, 0x5D, 0x6D, 0x73, 0x66, 0x6A, 0x86, 0x73, 0x68, 0x6F, 0x6F, 0x6F, 0x6F, 0x70, 0x6F, 0x70, 
   0x6F, 0x62, 0x70, 0x62, 0x6F, 0x70, 0x66, 0x6D, 0xA0, 0x7F, 0x80, 0x80, 0x80, 0x74, 0x02, 0x5B, 
   0x73, 0xA0, 0xA9, 0x7B, 0x89, 0x8A, 0xAC, 0x7E, 0x72, 0x6E, 0x6E, 0x6E, 0x6E, 0x78, 0x78, 0x79, 
   0x79, 0x79, 0x79, 0x81, 0x7A, 0x81, 0x81, 0x81, 0x81, 0x6F, 0x81, 0x62, 0x61, 0x61, 0x62, 0x62, 
   0x62, 0x62, 0x70, 0x70, 0x62, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 
   0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 
   0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 
   0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x71, 0x60, 0x58, 0x5C, 0x60, 0x60, 0x60, 0x76, 
   0x76, 0x5D, 0x75, 0x76, 0x66, 0x6A, 0x6F, 0x6F, 0x6F, 0x70, 0x6F, 0x6F, 0x62, 0x70, 0x6F, 0x62, 
   0x70, 0x6F, 0x62, 0x70, 0x62, 0x70, 0x6F, 0x62, 0x70, 0x6F, 0x6F, 0x81, 0x81, 0xA9, 0x85, 0x56, 
   0xA0, 0x02, 0x72, 0xA7, 0x83, 0x8B, 0x8A, 0x7B, 0x92, 0x92, 0x92, 0x6E, 0x6E, 0x78, 0x78, 0x79, 
   0x79, 0x79, 0x79, 0x79, 0x7A, 0x7A, 0x7A, 0x62, 0x81, 0x62, 0x61, 0x61, 0x8E, 0x62, 0x62, 0x62, 
   0x70, 0x62, 0x70, 0x62, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 
   0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 
   0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x71, 0x70, 
   0x71, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x65, 0x5C, 0x5C, 0x75, 0x5B, 0x60, 0x58, 
   0x57, 0x5C, 0x5C, 0x60, 0x76, 0x6A, 0x62, 0x6F, 0x62, 0x70, 0x62, 0x70, 0x6F, 0x62, 0x62, 0x70, 
   0x6F, 0x62, 0x70, 0x6F, 0x70, 0x70, 0x70, 0x6F, 0x6F, 0x70, 0x69, 0x62, 0x6F, 0x81, 0x80, 0x72, 
   0x72, 0xA9, 0x7E, 0xAD, 0x84, 0x7B, 0x84, 0x84, 0x92, 0x92, 0x92, 0x8D, 0x6E, 0x6E, 0x79, 0x79, 
   0x79, 0x79, 0x79, 0x79, 0x7A, 0x81, 0x81, 0x68, 0x81, 0x62, 0x8E, 0x62, 0x62, 0x62, 0x62, 0x70, 
   0x62, 0x70, 0x62, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x71, 0x70, 0x71, 0x70, 
   0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 
   0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 
   0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x63, 0x6B, 0x5C, 0x6A, 0x74, 0x75, 0x5C, 
   0x57, 0x5C, 0x5C, 0x58, 0x5C, 0x5D, 0x6F, 0x62, 0x70, 0x62, 0x6F, 0x70, 0x62, 0x69, 0x70, 0x62, 
   0x6F, 0x70, 0x62, 0x70, 0x70, 0x6F, 0x70, 0x70, 0x70, 0x62, 0x6F, 0x62, 0x6F, 0x6F, 0x81, 0x7A, 
   0x7F, 0x72, 0xAA, 0x8B, 0x72, 0x72, 0x84, 0x91, 0x92, 0x91, 0x92, 0x92, 0x6E, 0x6E, 0x79, 0x79, 
   0x7A, 0x7A, 0x7A, 0x7A, 0x81, 0x81, 0x81, 0x81, 0x81, 0x62, 0x62, 0x62, 0x62, 0x62, 0x62, 0x70, 
   0x62, 0x70, 0x62, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x71, 0x70, 0x70, 0x70, 0x70, 0x70, 
   0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 
   0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 
   0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x65, 0x76, 0x59, 0x6A, 0x75, 0x75, 
   0x5E, 0x75, 0x5C, 0x57, 0x57, 0x6B, 0x70, 0x6F, 0x6F, 0x6F, 0x6F, 0x6F, 0x70, 0x6F, 0x62, 0x6F, 
   0x70, 0x62, 0x69, 0x69, 0x69, 0x69, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x6F, 0x6F, 0x62, 0x8E, 
   0x7A, 0x79, 0x7B, 0x7B, 0x72, 0x8D, 0x84, 0x92, 0x92, 0x6E, 0x6E, 0x92, 0x6E, 0x78, 0x79, 0x79, 
   0x7A, 0x7A, 0x7A, 0x81, 0x80, 0x81, 0x81, 0x81, 0x62, 0x62, 0x62, 0x62, 0x62, 0x70, 0x70, 0x70, 
   0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x71, 0x70, 0x70, 0x70, 0x70, 0x70, 0x71, 0x70, 0x71, 0x70, 
   0x70, 0x70, 0x70, 0x71, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x71, 0x70, 0x70, 0x70, 
   0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 
   0x70, 0x70, 0x71, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x71, 0x62, 0x70, 0x68, 0x6F, 
   0x68, 0x7A, 0x75, 0x5D, 0x5C, 0x5D, 0x70, 0x70, 0x6F, 0x70, 0x62, 0x70, 0x70, 0x70, 0x70, 0x70, 
   0x69, 0x70, 0x6F, 0x70, 0x6F, 0x70, 0x69, 0x69, 0x70, 0x69, 0x6F, 0x70, 0x70, 0x70, 0x6F, 0x62, 
   0x68, 0x7A, 0x78, 0x7F, 0x92, 0x84, 0x8D, 0x92, 0x8D, 0x8D, 0x8D, 0x6E, 0x78, 0x78, 0x79, 0x7A, 
   0x7A, 0x7A, 0x81, 0x81, 0x62, 0x81, 0x6F, 0x61, 0x81, 0x62, 0x62, 0x62, 0x70, 0x62, 0x62, 0x70, 
   0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x71, 0x70, 0x71, 0x70, 0x70, 0x70, 0x70, 0x71, 
   0x70, 0x71, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x71, 0x70, 
   0x70, 0x71, 0x70, 0x70, 0x70, 0x70, 0x71, 0x70, 0x70, 0x71, 0x70, 0x70, 0x71, 0x70, 0x70, 0x71, 
   0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x62, 0x62, 0x62, 0x61, 
   0x81, 0x7A, 0x8E, 0x5D, 0x5D, 0x5D, 0x6F, 0x62, 0x70, 0x6F, 0x70, 0x6F, 0x70, 0x6F, 0x70, 0x6F, 
   0x70, 0x70, 0x70, 0x69, 0x70, 0x6F, 0x70, 0x69, 0x69, 0x70, 0x69, 0x69, 0x70, 0x70, 0x70, 0x62, 
   0x6F, 0x68, 0x85, 0x79, 0x6E, 0x8D, 0x8D, 0x8D, 0x6E, 0x6E, 0x6E, 0x6E, 0x78, 0x79, 0x85, 0x7A, 
   0x7A, 0x81, 0x81, 0x81, 0x68, 0x81, 0x81, 0x81, 0x62, 0x6F, 0x62, 0x6F, 0x62, 0x70, 0x70, 0x70, 
   0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x71, 0x70, 0x70, 0x71, 0x70, 0x71, 0x70, 0x71, 0x70, 0x70, 
   0x70, 0x70, 0x71, 0x70, 0x71, 0x70, 0x71, 0x71, 0x70, 0x71, 0x71, 0x70, 0x71, 0x71, 0x70, 0x71, 
   0x70, 0x70, 0x71, 0x70, 0x71, 0x70, 0x70, 0x71, 0x71, 0x70, 0x71, 0x70, 0x70, 0x71, 0x70, 0x70, 
   0x71, 0x70, 0x71, 0x70, 0x71, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x62, 0x6F, 
   0x62, 0x61, 0x7A, 0x6A, 0x5D, 0x6B, 0x70, 0x70, 0x6F, 0x70, 0x69, 0x70, 0x69, 0x70, 0x69, 0x70, 
   0x69, 0x6F, 0x69, 0x69, 0x69, 0x70, 0x69, 0x69, 0x69, 0x69, 0x69, 0x70, 0x6F, 0x70, 0x6F, 0x70, 
   0x6F, 0x62, 0x7A, 0x85, 0x79, 0x78, 0x78, 0x78, 0x78, 0x78, 0x78, 0x85, 0x85, 0x7A, 0x81, 0x7A, 
   0x81, 0x81, 0x81, 0x62, 0x81, 0x62, 0x81, 0x6F, 0x61, 0x62, 0x62, 0x70, 0x70, 0x62, 0x70, 0x70, 
   0x69, 0x70, 0x69, 0x70, 0x70, 0x71, 0x70, 0x71, 0x70, 0x71, 0x71, 0x70, 0x71, 0x70, 0x71, 0x71, 
   0x71, 0x71, 0x70, 0x71, 0x70, 0x71, 0x70, 0x70, 0x71, 0x70, 0x71, 0x71, 0x70, 0x70, 0x70, 0x70, 
   0x71, 0x70, 0x70, 0x71, 0x71, 0x70, 0x71, 0x70, 0x70, 0x70, 0x70, 0x70, 0x71, 0x70, 0x71, 0x70, 
   0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x71, 0x70, 0x70, 0x70, 0x71, 0x70, 0x70, 0x70, 0x70, 
   0x62, 0x6F, 0x81, 0x81, 0x6B, 0x5D, 0x70, 0x6F, 0x70, 0x6F, 0x70, 0x6F, 0x69, 0x6F, 0x69, 0x6F, 
   0x69, 0x70, 0x69, 0x69, 0x69, 0x69, 0x69, 0x69, 0x69, 0x69, 0x69, 0x69, 0x69, 0x70, 0x70, 0x70, 
   0x70, 0x6F, 0x6F, 0x7A, 0x7A, 0x85, 0x85, 0x78, 0x85, 0x78, 0x85, 0x7A, 0x7A, 0x81, 0x81, 0x68, 
   0x62, 0x62, 0x62, 0x68, 0x62, 0x6F, 0x62, 0x70, 0x70, 0x6F, 0x62, 0x70, 0x62, 0x70, 0x70, 0x70, 
   0x70, 0x70, 0x70, 0x70, 0x69, 0x70, 0x70, 0x70, 0x70, 0x71, 0x70, 0x71, 0x70, 0x71, 0x70, 0x70, 
   0x71, 0x70, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x70, 0x71, 0x70, 0x71, 0x70, 0x71, 0x71, 
   0x70, 0x70, 0x71, 0x71, 0x70, 0x71, 0x70, 0x71, 0x70, 0x71, 0x70, 0x71, 0x70, 0x71, 0x70, 0x70, 
   0x71, 0x71, 0x70, 0x71, 0x70, 0x71, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 
   0x70, 0x62, 0x62, 0x81, 0x6F, 0x5E, 0x69, 0x70, 0x69, 0x69, 0x69, 0x70, 0x69, 0x70, 0x69, 0x70, 
   0x69, 0x69, 0x6C, 0x69, 0x71, 0x69, 0x69, 0x69, 0x69, 0x69, 0x69, 0x69, 0x69, 0x69, 0x70, 0x69, 
   0x70, 0x70, 0x70, 0x62, 0x68, 0x81, 0x7A, 0x7A, 0x79, 0x7A, 0x7A, 0x7A, 0x81, 0x81, 0x62, 0x62, 
   0x6F, 0x6F, 0x70, 0x62, 0x70, 0x70, 0x6F, 0x62, 0x62, 0x70, 0x62, 0x70, 0x69, 0x70, 0x70, 0x69, 
   0x70, 0x71, 0x70, 0x71, 0x70, 0x70, 0x71, 0x69, 0x71, 0x71, 0x71, 0x70, 0x71, 0x70, 0x71, 0x71, 
   0x71, 0x71, 0x71, 0x70, 0x71, 0x70, 0x71, 0x70, 0x71, 0x71, 0x71, 0x71, 0x70, 0x71, 0x71, 0x70, 
   0x71, 0x71, 0x70, 0x71, 0x71, 0x71, 0x71, 0x70, 0x71, 0x70, 0x71, 0x70, 0x71, 0x70, 0x71, 0x71, 
   0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x71, 0x70, 0x70, 0x70, 0x71, 0x70, 0x70, 0x70, 0x70, 0x70, 
   0x70, 0x62, 0x70, 0x62, 0x81, 0x8E, 0x69, 0x6F, 0x70, 0x6F, 0x69, 0x6F, 0x69, 0x69, 0x69, 0x69, 
   0x69, 0x69, 0x69, 0x71, 0x69, 0x69, 0x71, 0x69, 0x71, 0x69, 0x69, 0x71, 0x69, 0x69, 0x69, 0x69, 
   0x69, 0x70, 0x6F, 0x70, 0x6F, 0x6F, 0x61, 0x6F, 0x6F, 0x68, 0x81, 0x62, 0x68, 0x6F, 0x70, 0x70, 
   0x62, 0x70, 0x6F, 0x62, 0x62, 0x69, 0x62, 0x70, 0x70, 0x70, 0x70, 0x69, 0x70, 0x71, 0x70, 0x70, 
   0x70, 0x70, 0x70, 0x70, 0x71, 0x70, 0x70, 0x71, 0x70, 0x69, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 
   0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x70, 0x71, 0x70, 0x71, 0x71, 0x70, 0x71, 0x71, 
   0x70, 0x71, 0x70, 0x71, 0x70, 0x70, 0x71, 0x71, 0x70, 0x71, 0x70, 0x71, 0x70, 0x71, 0x70, 0x71, 
   0x71, 0x71, 0x71, 0x71, 0x70, 0x71, 0x70, 0x71, 0x71, 0x70, 0x70, 0x70, 0x71, 0x70, 0x70, 0x70, 
   0x70, 0x62, 0x70, 0x62, 0x62, 0x81, 0x69, 0x69, 0x69, 0x69, 0x70, 0x69, 0x69, 0x69, 0x69, 0x69, 
   0x69, 0x69, 0x69, 0x69, 0x71, 0x71, 0x69, 0x6C, 0x69, 0x71, 0x69, 0x69, 0x69, 0x71, 0x69, 0x69, 
   0x69, 0x69, 0x69, 0x70, 0x6F, 0x70, 0x70, 0x6F, 0x62, 0x6F, 0x70, 0x70, 0x62, 0x70, 0x62, 0x6F, 
   0x70, 0x70, 0x69, 0x70, 0x70, 0x69, 0x69, 0x70, 0x69, 0x70, 0x69, 0x70, 0x69, 0x70, 0x69, 0x70, 
   0x71, 0x71, 0x71, 0x71, 0x70, 0x70, 0x69, 0x70, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 
   0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 
   0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x70, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 
   0x70, 0x70, 0x70, 0x70, 0x71, 0x70, 0x70, 0x71, 0x70, 0x71, 0x70, 0x71, 0x70, 0x70, 0x71, 0x70, 
   0x70, 0x70, 0x70, 0x70, 0x62, 0x62, 0x69, 0x69, 0x69, 0x6F, 0x69, 0x69, 0x69, 0x69, 0x69, 0x69, 
   0x69, 0x71, 0x69, 0x71, 0x71, 0x71, 0x6C, 0x71, 0x71, 0x71, 0x6C, 0x71, 0x69, 0x71, 0x69, 0x69, 
   0x69, 0x69, 0x69, 0x69, 0x69, 0x69, 0x69, 0x69, 0x69, 0x69, 0x69, 0x6F, 0x69, 0x70, 0x70, 0x70, 
   0x70, 0x6F, 0x69, 0x70, 0x70, 0x69, 0x70, 0x70, 0x70, 0x70, 0x70, 0x69, 0x70, 0x71, 0x71, 0x71, 
   0x69, 0x71, 0x71, 0x69, 0x70, 0x69, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 
   0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 
   0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x70, 
   0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x70, 0x71, 0x70, 0x71, 0x70, 0x71, 0x70, 
   0x70, 0x70, 0x70, 0x70, 0x70, 0x62, 0x69, 0x69, 0x69, 0x69, 0x69, 0x69, 0x69, 0x69, 0x69, 0x6C, 
   0x69, 0x69, 0x6C, 0x71, 0x66, 0x71, 0x6C, 0x71, 0x66, 0x69, 0x69, 0x69, 0x69, 0x69, 0x69, 0x69, 
   0x69, 0x69, 0x69, 0x69, 0x69, 0x69, 0x69, 0x69, 0x71, 0x69, 0x69, 0x69, 0x69, 0x69, 0x6F, 0x69, 
   0x6F, 0x70, 0x69, 0x70, 0x69, 0x69, 0x69, 0x70, 0x69, 0x69, 0x69, 0x71, 0x69, 0x69, 0x69, 0x71, 
   0x69, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 
   0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 
   0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 
   0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 
   0x70, 0x71, 0x70, 0x71, 0x70, 0x70, 0x69, 0x69, 0x69, 0x69, 0x69, 0x69, 0x69, 0x69, 0x69, 0x69, 
   0x6C, 0x69, 0x69, 0x71, 0x71, 0x69, 0x69, 0x71, 0x71, 0x6C, 0x71, 0x6C, 0x71, 0x6C, 0x71, 0x71, 
   0x71, 0x69, 0x69, 0x69, 0x71, 0x69, 0x69, 0x69, 0x69, 0x69, 0x69, 0x69, 0x69, 0x69, 0x70, 0x70, 
   0x70, 0x69, 0x6F, 0x69, 0x69, 0x69, 0x69, 0x69, 0x70, 0x69, 0x70, 0x69, 0x71, 0x71, 0x69, 0x71, 
   0x69, 0x71, 0x71, 0x69, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 
   0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 
   0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 
   0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 
   0x71, 0x71, 0x71, 0x71, 0x71, 0x70, 0x69, 0x69, 0x69, 0x69, 0x69, 0x69, 0x69, 0x69, 0x69, 0x71, 
   0x69, 0x69, 0x6C, 0x69, 0x69, 0x71, 0x6C, 0x6C, 0x6C, 0x69, 0x6C, 0x71, 0x69, 0x71, 0x6C, 0x69, 
   0x69, 0x69, 0x69, 0x71, 0x69, 0x69, 0x69, 0x69, 0x69, 0x71, 0x69, 0x71, 0x69, 0x69, 0x70, 0x69, 
   0x70, 0x69, 0x70, 0x69, 0x6F, 0x6F, 0x69, 0x70, 0x69, 0x71, 0x69, 0x69, 0x69, 0x69, 0x71, 0x69, 
   0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x63, 
   0x71, 0x63, 0x71, 0x63, 0x71, 0x63, 0x71, 0x67, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x67, 
   0x71, 0x63, 0x71, 0x63, 0x71, 0x71, 0x63, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 
   0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 
   0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x69, 0x69, 0x69, 0x69, 0x69, 0x69, 0x69, 0x69, 0x6C, 0x69, 
   0x69, 0x6C, 0x69, 0x71, 0x6C, 0x6C, 0x6C, 0x71, 0x71, 0x71, 0x71, 0x69, 0x71, 0x6C, 0x69, 0x71, 
   0x71, 0x71, 0x71, 0x69, 0x69, 0x71, 0x69, 0x69, 0x69, 0x69, 0x69, 0x69, 0x69, 0x69, 0x69, 0x69, 
   0x69, 0x6F, 0x69, 0x6F, 0x62, 0x70, 0x70, 0x69, 0x71, 0x69, 0x69, 0x71, 0x71, 0x71, 0x71, 0x69, 
   0x71, 0x6C, 0x71, 0x71, 0x71, 0x71, 0x71, 0x63, 0x71, 0x71, 0x71, 0x63, 0x71, 0x71, 0x71, 0x71, 
   0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x63, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 
   0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 
   0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 
   0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x69, 0x69, 0x69, 0x69, 0x69, 0x6C, 0x69, 0x69, 0x69, 0x6C, 
   0x69, 0x69, 0x6C, 0x69, 0x71, 0x71, 0x6C, 0x6C, 0x6C, 0x6C, 0x6C, 0x6C, 0x6C, 0x71, 0x6C, 0x69, 
   0x71, 0x66, 0x71, 0x69, 0x69, 0x69, 0x71, 0x69, 0x69, 0x71, 0x69, 0x69, 0x69, 0x69, 0x69, 0x69, 
   0x62, 0x70, 0x70, 0x70, 0x6F, 0x70, 0x69, 0x70, 0x69, 0x71, 0x69, 0x69, 0x71, 0x69, 0x71, 0x71, 
   0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x63, 0x71, 0x71, 0x63, 
   0x71, 0x71, 0x63, 0x71, 0x63, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x67, 0x71, 0x71, 0x63, 
   0x71, 0x63, 0x71, 0x63, 0x71, 0x71, 0x63, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 
   0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 
   0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x69, 0x69, 0x69, 0x69, 0x69, 0x69, 0x6C, 0x69, 0x69, 0x69, 
   0x71, 0x69, 0x6C, 0x69, 0x6C, 0x69, 0x6C, 0x71, 0x6C, 0x71, 0x71, 0x71, 0x6C, 0x71, 0x6C, 0x71, 
   0x69, 0x71, 0x71, 0x71, 0x71, 0x69, 0x69, 0x71, 0x69, 0x69, 0x69, 0x69, 0x69, 0x69, 0x6F, 0x70, 
   0x6F, 0x62, 0x69, 0x70, 0x6F, 0x62, 0x69, 0x69, 0x69, 0x69, 0x71, 0x71, 0x71, 0x71, 0x69, 0x71, 
   0x69, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x63, 0x71, 0x71, 0x71, 0x71, 0x71, 0x63, 0x71, 0x71, 
   0x63, 0x71, 0x71, 0x71, 0x71, 0x63, 0x63, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 
   0x71, 0x71, 0x71, 0x71, 0x63, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 
   0x71, 0x71, 0x67, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 
   0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x69, 0x69, 0x69, 0x6C, 0x69, 0x6C, 0x69, 0x69, 0x6C, 0x69, 
   0x6C, 0x6C, 0x69, 0x6C, 0x71, 0x6C, 0x71, 0x6C, 0x6C, 0x6C, 0x6C, 0x6C, 0x71, 0x6C, 0x6C, 0x71, 
   0x6C, 0x6C, 0x69, 0x69, 0x66, 0x71, 0x6C, 0x69, 0x71, 0x71, 0x69, 0x69, 0x69, 0x69, 0x70, 0x6F, 
   0x6F, 0x70, 0x6F, 0x6F, 0x6F, 0x70, 0x69, 0x71, 0x69, 0x69, 0x71, 0x69, 0x71, 0x69, 0x71, 0x6C, 
   0x71, 0x71, 0x71, 0x6C, 0x71, 0x71, 0x63, 0x71, 0x71, 0x63, 0x71, 0x63, 0x71, 0x71, 0x71, 0x63, 
   0x71, 0x63, 0x71, 0x63, 0x71, 0x71, 0x63, 0x63, 0x71, 0x63, 0x71, 0x63, 0x63, 0x63, 0x71, 0x63, 
   0x71, 0x63, 0x71, 0x63, 0x71, 0x71, 0x63, 0x71, 0x63, 0x71, 0x63, 0x71, 0x71, 0x67, 0x71, 0x63, 
   0x71, 0x71, 0x71, 0x71, 0x67, 0x71, 0x63, 0x71, 0x63, 0x71, 0x67, 0x71, 0x71, 0x71, 0x71, 0x71, 
   0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x69, 0x6C, 0x69, 0x69, 0x69, 0x69, 0x69, 0x6C, 0x69, 0x6C, 
   0x6C, 0x69, 0x6C, 0x6C, 0x6C, 0x6C, 0x6C, 0x6C, 0x6C, 0x71, 0x6C, 0x6C, 0x6C, 0x6C, 0x71, 0x6C, 
   0x6C, 0x71, 0x71, 0x6C, 0x71, 0x71, 0x71, 0x71, 0x6C, 0x69, 0x69, 0x69, 0x69, 0x69, 0x6F, 0x6F, 
   0x6F, 0x62, 0x6F, 0x70, 0x62, 0x81, 0x6F, 0x69, 0x69, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 
   0x69, 0x6C, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x63, 0x71, 0x71, 0x63, 0x71, 0x71, 0x63, 0x71, 
   0x63, 0x71, 0x63, 0x63, 0x71, 0x63, 0x63, 0x71, 0x63, 0x63, 0x71, 0x71, 0x63, 0x71, 0x63, 0x63, 
   0x71, 0x63, 0x71, 0x71, 0x71, 0x63, 0x71, 0x71, 0x71, 0x67, 0x63, 0x71, 0x63, 0x71, 0x71, 0x63, 
   0x67, 0x63, 0x71, 0x63, 0x71, 0x71, 0x71, 0x67, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x67, 0x71, 
   0x67, 0x71, 0x71, 0x71, 0x71, 0x71, 0x69, 0x69, 0x6C, 0x69, 0x6C, 0x69, 0x6C, 0x69, 0x6C, 0x69, 
   0x6C, 0x6C, 0x6C, 0x69, 0x69, 0x69, 0x6C, 0x71, 0x6C, 0x6C, 0x71, 0x6C, 0x71, 0x6C, 0x6C, 0x6C, 
   0x71, 0x71, 0x6C, 0x71, 0x6C, 0x71, 0x66, 0x71, 0x69, 0x6C, 0x69, 0x69, 0x69, 0x69, 0x70, 0x62, 
   0x6F, 0x6F, 0x70, 0x70, 0x6F, 0x62, 0x62, 0x69, 0x71, 0x71, 0x71, 0x71, 0x6C, 0x71, 0x6C, 0x71, 
   0x71, 0x71, 0x6C, 0x6C, 0x63, 0x71, 0x63, 0x71, 0x71, 0x63, 0x63, 0x71, 0x63, 0x71, 0x71, 0x63, 
   0x71, 0x63, 0x71, 0x71, 0x63, 0x71, 0x63, 0x63, 0x71, 0x71, 0x63, 0x63, 0x63, 0x71, 0x71, 0x63, 
   0x71, 0x63, 0x63, 0x63, 0x63, 0x71, 0x63, 0x63, 0x63, 0x71, 0x63, 0x63, 0x71, 0x63, 0x63, 0x71, 
   0x71, 0x71, 0x67, 0x71, 0x71, 0x63, 0x71, 0x71, 0x71, 0x63, 0x71, 0x67, 0x71, 0x71, 0x71, 0x71, 
   0x71, 0x71, 0x71, 0x71, 0x67, 0x71, 0x69, 0x69, 0x69, 0x69, 0x6C, 0x6C, 0x69, 0x6C, 0x69, 0x6C, 
   0x69, 0x6C, 0x6C, 0x6C, 0x6C, 0x71, 0x6C, 0x6C, 0x6C, 0x6C, 0x6C, 0x6C, 0x6C, 0x6C, 0x6C, 0x6C, 
   0x6C, 0x6C, 0x6C, 0x6C, 0x6C, 0x71, 0x71, 0x6C, 0x69, 0x71, 0x69, 0x69, 0x69, 0x6F, 0x62, 0x68, 
   0x61, 0x69, 0x6F, 0x6F, 0x70, 0x6F, 0x70, 0x71, 0x71, 0x66, 0x71, 0x71, 0x71, 0x6C, 0x71, 0x6C, 
   0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x63, 0x71, 0x63, 0x71, 0x63, 0x71, 0x63, 0x71, 0x63, 
   0x71, 0x71, 0x63, 0x71, 0x63, 0x71, 0x63, 0x71, 0x63, 0x71, 0x63, 0x71, 0x63, 0x71, 0x63, 0x71, 
   0x63, 0x71, 0x63, 0x71, 0x71, 0x63, 0x71, 0x63, 0x71, 0x63, 0x71, 0x63, 0x63, 0x71, 0x63, 0x63, 
   0x63, 0x71, 0x71, 0x63, 0x67, 0x71, 0x63, 0x63, 0x71, 0x63, 0x67, 0x71, 0x67, 0x71, 0x67, 0x71, 
   0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x69, 0x69, 0x65, 0x69, 0x69, 0x69, 0x6C, 0x6C, 0x69, 0x6C, 
   0x6C, 0x6C, 0x6C, 0x69, 0x6C, 0x6C, 0x6C, 0x6C, 0x6C, 0x6C, 0x6C, 0x6C, 0x6C, 0x6C, 0x6C, 0x6C, 
   0x6C, 0x6C, 0x63, 0x6C, 0x6C, 0x6C, 0x6C, 0x6C, 0x71, 0x6C, 0x69, 0x69, 0x69, 0x69, 0x70, 0x6F, 
   0x61, 0x6F, 0x70, 0x70, 0x6F, 0x6F, 0x70, 0x6F, 0x71, 0x6C, 0x71, 0x6C, 0x71, 0x71, 0x71, 0x71, 
   0x6C, 0x71, 0x71, 0x6C, 0x6C, 0x63, 0x63, 0x63, 0x6C, 0x63, 0x63, 0x6C, 0x63, 0x6C, 0x63, 0x63, 
   0x63, 0x6C, 0x63, 0x63, 0x63, 0x63, 0x63, 0x6C, 0x63, 0x63, 0x6C, 0x63, 0x63, 0x6C, 0x63, 0x63, 
   0x6C, 0x63, 0x6C, 0x63, 0x63, 0x71, 0x63, 0x71, 0x63, 0x63, 0x63, 0x63, 0x71, 0x63, 0x71, 0x71, 
   0x71, 0x63, 0x63, 0x71, 0x71, 0x63, 0x63, 0x71, 0x67, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 
   0x63, 0x71, 0x63, 0x71, 0x67, 0x71, 0x69, 0x65, 0x69, 0x69, 0x65, 0x6C, 0x6C, 0x69, 0x69, 0x6C, 
   0x6C, 0x69, 0x69, 0x6C, 0x6C, 0x6C, 0x6C, 0x6C, 0x6C, 0x63, 0x6C, 0x6C, 0x6C, 0x63, 0x6C, 0x6C, 
   0x63, 0x6C, 0x6C, 0x6C, 0x6C, 0x6C, 0x71, 0x69, 0x69, 0x69, 0x69, 0x69, 0x69, 0x69, 0x69, 0x68, 
   0x6F, 0x70, 0x6F, 0x69, 0x69, 0x62, 0x69, 0x69, 0x69, 0x69, 0x6C, 0x71, 0x69, 0x6C, 0x6C, 0x63, 
   0x6C, 0x63, 0x71, 0x6C, 0x71, 0x63, 0x6C, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x6C, 
   0x63, 0x63, 0x63, 0x6C, 0x63, 0x6C, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 
   0x63, 0x63, 0x63, 0x63, 0x6C, 0x71, 0x63, 0x71, 0x63, 0x63, 0x6C, 0x63, 0x71, 0x63, 0x63, 0x63, 
   0x63, 0x63, 0x71, 0x63, 0x63, 0x63, 0x71, 0x63, 0x71, 0x67, 0x63, 0x63, 0x63, 0x71, 0x63, 0x63, 
   0x71, 0x63, 0x71, 0x63, 0x71, 0x63, 0x69, 0x66, 0x65, 0x6C, 0x69, 0x6C, 0x6C, 0x69, 0x6C, 0x69, 
   0x6C, 0x6C, 0x6C, 0x6C, 0x6C, 0x6C, 0x6C, 0x63, 0x6C, 0x6C, 0x63, 0x6C, 0x63, 0x6C, 0x63, 0x6C, 
   0x6C, 0x63, 0x63, 0x6C, 0x6C, 0x6C, 0x6C, 0x6C, 0x69, 0x6C, 0x69, 0x69, 0x69, 0x69, 0x6F, 0x61, 
   0x6F, 0x6F, 0x70, 0x69, 0x6F, 0x70, 0x69, 0x69, 0x6C, 0x69, 0x69, 0x6C, 0x71, 0x6C, 0x63, 0x6C, 
   0x63, 0x71, 0x63, 0x6C, 0x63, 0x6C, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 
   0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 
   0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x71, 0x63, 
   0x71, 0x63, 0x63, 0x63, 0x71, 0x63, 0x63, 0x63, 0x63, 0x71, 0x63, 0x71, 0x63, 0x63, 0x63, 0x71, 
   0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x65, 0x65, 0x69, 0x65, 0x65, 0x65, 0x69, 0x65, 0x69, 0x6C, 
   0x6C, 0x6C, 0x6C, 0x6C, 0x6C, 0x6C, 0x6C, 0x6C, 0x63, 0x65, 0x63, 0x63, 0x6C, 0x63, 0x6C, 0x63, 
   0x6C, 0x6C, 0x63, 0x63, 0x6C, 0x6C, 0x71, 0x6C, 0x69, 0x6C, 0x6C, 0x6C, 0x69, 0x69, 0x6F, 0x68, 
   0x6F, 0x6F, 0x6F, 0x6F, 0x69, 0x6F, 0x69, 0x69, 0x6C, 0x6C, 0x71, 0x6C, 0x6C, 0x63, 0x6C, 0x63, 
   0x6C, 0x63, 0x6C, 0x63, 0x6C, 0x6C, 0x6C, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 
   0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 
   0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 
   0x63, 0x71, 0x63, 0x63, 0x63, 0x71, 0x63, 0x71, 0x63, 0x63, 0x63, 0x63, 0x63, 0x71, 0x63, 0x63, 
   0x71, 0x67, 0x71, 0x63, 0x71, 0x63, 0x69, 0x69, 0x65, 0x69, 0x69, 0x69, 0x6C, 0x69, 0x6C, 0x69, 
   0x6C, 0x69, 0x6C, 0x6C, 0x6C, 0x6C, 0x6C, 0x63, 0x65, 0x63, 0x63, 0x65, 0x63, 0x6C, 0x63, 0x6C, 
   0x63, 0x65, 0x63, 0x6C, 0x6C, 0x6C, 0x6C, 0x69, 0x6C, 0x69, 0x69, 0x69, 0x6C, 0x69, 0x6F, 0x62, 
   0x6F, 0x6F, 0x6F, 0x6F, 0x69, 0x69, 0x69, 0x69, 0x6C, 0x71, 0x6C, 0x6C, 0x6C, 0x6C, 0x63, 0x6C, 
   0x63, 0x6C, 0x6C, 0x6C, 0x6C, 0x63, 0x6C, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 
   0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 
   0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 
   0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x71, 0x63, 0x71, 0x63, 0x63, 0x63, 0x63, 
   0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x69, 0x65, 0x65, 0x69, 0x69, 0x65, 0x69, 0x65, 0x69, 0x65, 
   0x69, 0x6C, 0x65, 0x6C, 0x6C, 0x6C, 0x6C, 0x6C, 0x63, 0x6C, 0x65, 0x63, 0x63, 0x6C, 0x6C, 0x65, 
   0x63, 0x63, 0x63, 0x6C, 0x63, 0x6C, 0x71, 0x6C, 0x69, 0x69, 0x6C, 0x6C, 0x6C, 0x69, 0x65, 0x86, 
   0x6F, 0x68, 0x6F, 0x69, 0x69, 0x6F, 0x71, 0x69, 0x69, 0x6C, 0x6C, 0x6C, 0x6C, 0x63, 0x63, 0x63, 
   0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x65, 0x63, 0x63, 0x63, 0x63, 0x63, 
   0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 
   0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 
   0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 
   0x71, 0x63, 0x63, 0x63, 0x63, 0x63, 0x65, 0x69, 0x69, 0x6C, 0x69, 0x6C, 0x6C, 0x69, 0x69, 0x69, 
   0x6C, 0x69, 0x6C, 0x6C, 0x6C, 0x6C, 0x6C, 0x6C, 0x65, 0x6C, 0x63, 0x65, 0x63, 0x63, 0x6C, 0x63, 
   0x65, 0x63, 0x65, 0x63, 0x65, 0x6C, 0x6C, 0x6C, 0x6C, 0x6C, 0x69, 0x69, 0x6C, 0x6C, 0x6C, 0x6F, 
   0x68, 0x7A, 0x6F, 0x66, 0x6C, 0x6C, 0x66, 0x69, 0x71, 0x69, 0x6C, 0x63, 0x6C, 0x6C, 0x63, 0x63, 
   0x63, 0x63, 0x63, 0x63, 0x6C, 0x63, 0x65, 0x63, 0x64, 0x67, 0x63, 0x63, 0x67, 0x63, 0x63, 0x63, 
   0x67, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x67, 
   0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x65, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 
   0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x67, 
   0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x65, 0x65, 0x65, 0x69, 0x6C, 0x69, 0x65, 0x6C, 0x6C, 0x69, 
   0x6C, 0x6C, 0x6C, 0x6C, 0x6C, 0x6C, 0x6C, 0x63, 0x63, 0x65, 0x63, 0x63, 0x65, 0x6C, 0x6C, 0x63, 
   0x6C, 0x6C, 0x63, 0x6C, 0x63, 0x6C, 0x6C, 0x6C, 0x6C, 0x6C, 0x6C, 0x6C, 0x69, 0x6C, 0x69, 0x6F, 
   0x81, 0x6F, 0x6F, 0x69, 0x66, 0x66, 0x69, 0x66, 0x69, 0x71, 0x6C, 0x6C, 0x63, 0x63, 0x6C, 0x64, 
   0x63, 0x64, 0x63, 0x63, 0x64, 0x63, 0x65, 0x63, 0x65, 0x65, 0x67, 0x65, 0x63, 0x67, 0x65, 0x67, 
   0x65, 0x63, 0x63, 0x64, 0x63, 0x64, 0x63, 0x64, 0x63, 0x64, 0x63, 0x63, 0x67, 0x63, 0x63, 0x65, 
   0x63, 0x63, 0x63, 0x67, 0x63, 0x63, 0x63, 0x67, 0x63, 0x63, 0x67, 0x63, 0x63, 0x63, 0x63, 0x63, 
   0x63, 0x63, 0x63, 0x63, 0x67, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 
   0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x6C, 0x69, 0x65, 0x65, 0x6C, 0x65, 0x6C, 0x6C, 0x6C, 0x6C, 
   0x65, 0x6C, 0x6C, 0x6C, 0x6C, 0x6C, 0x6C, 0x65, 0x65, 0x6C, 0x63, 0x65, 0x63, 0x6C, 0x64, 0x6C, 
   0x63, 0x65, 0x6C, 0x63, 0x65, 0x6C, 0x6C, 0x6C, 0x6C, 0x6C, 0x6C, 0x6C, 0x6C, 0x6C, 0x6C, 0x69, 
   0x6F, 0x6F, 0x86, 0x6F, 0x69, 0x69, 0x65, 0x66, 0x69, 0x66, 0x63, 0x63, 0x65, 0x64, 0x63, 0x63, 
   0x63, 0x63, 0x63, 0x64, 0x65, 0x63, 0x64, 0x63, 0x64, 0x67, 0x65, 0x67, 0x67, 0x65, 0x67, 0x63, 
   0x63, 0x63, 0x64, 0x63, 0x64, 0x63, 0x64, 0x63, 0x64, 0x63, 0x63, 0x63, 0x63, 0x65, 0x67, 0x63, 
   0x63, 0x65, 0x67, 0x65, 0x67, 0x65, 0x67, 0x65, 0x63, 0x63, 0x65, 0x63, 0x63, 0x65, 0x67, 0x63, 
   0x64, 0x63, 0x65, 0x67, 0x65, 0x67, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 
   0x63, 0x63, 0x63, 0x63, 0x63, 0x63, 0x65, 0x65, 0x65, 0x6C, 0x6C, 0x6C, 0x6C, 0x6C, 0x65, 0x6C, 
   0x6C, 0x6C, 0x6C, 0x6C, 0x6C, 0x6C, 0x6C, 0x65, 0x65, 0x6C, 0x63, 0x65, 0x63, 0x64, 0x63, 0x63, 
   0x6C, 0x63, 0x63, 0x63, 0x6C, 0x63, 0x6C, 0x6C, 0x6C, 0x6C, 0x6C, 0x6C, 0x6C, 0x6C, 0x6C, 0x65, 
   0x6C, 0x69, 0x6C, 0x69, 0x6F, 0x6C, 0x69, 0x69, 0x65, 0x6C, 0x63, 0x63, 0x65, 0x63, 0x63, 0x63, 
   0x64, 0x63, 0x64, 0x63, 0x64, 0x64, 0x64, 0x65, 0x67, 0x65, 0x64, 0x67, 0x65, 0x67, 0x64, 0x63, 
   0x64, 0x63, 0x64, 0x63, 0x64, 0x63, 0x64, 0x63, 0x64, 0x63, 0x64, 0x63, 0x64, 0x63, 0x67, 0x63, 
   0x64, 0x63, 0x67, 0x63, 0x63, 0x67, 0x63, 0x63, 0x67, 0x63, 0x63, 0x63, 0x67, 0x63, 0x63, 0x67, 
   0x63, 0x63, 0x63, 0x63, 0x67, 0x63, 0x63, 0x63, 0x67, 0x63, 0x63, 0x67, 0x63, 0x63, 0x67, 0x63, 
   0x67, 0x63, 0x67, 0x63, 0x67, 0x63, 0x00, 0x00, 
};

static RESOURCEDATA g_rd_texture8(TEXT(MODULE_STRING), TEXT("texture8.bmp"), g_texture8, sizeof(g_texture8));

extern "C" LPVOID PREPEND_MODULE(_texture8) = (LPVOID)&g_rd_texture8;
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\test\directx\d3d\func\ball\dll\include.cpp ===
#include "dll\main.cpp"
=== C:/Users/treeman/Desktop/windows nt source code\xbox\xbox_leak_may_2020\xbox trunk\xbox\private\test\directx\d3d\func\ball\ball.cpp ===
/*******************************************************************************

Copyright (c) 2000 Microsoft Corporation.  All rights reserved.

File Name:

    ball.cpp

*******************************************************************************/

#include "d3dlocus.h"
#include "cd3dtest.h"
#include "3dmath.h"
#include "cshapes.h"
#include "ball.h"

struct MATRIXMODE
{
    D3DTRANSFORMSTATETYPE   dwFirstMatrix;
    D3DTRANSFORMSTATETYPE   dwSecondMatrix;
    DWORD                   dwVertexType;
    DWORD                   dwMatrixMode;
    LPSTR                   pszModeName;
};

MATRIXMODE  m_pBallMode[] = 
{
    { D3DTRANSFORMSTATE_WORLD,  D3DTRANSFORMSTATE_WORLD1, D3DFVF_VERTEXB1, D3DVBLEND_1WEIGHT,  "1,2"},
    { D3DTRANSFORMSTATE_WORLD,  D3DTRANSFORMSTATE_WORLD2, D3DFVF_VERTEXB2, D3DVBLEND_2WEIGHTS, "1,3"},
    { D3DTRANSFORMSTATE_WORLD,  D3DTRANSFORMSTATE_WORLD3, D3DFVF_VERTEXB3, D3DVBLEND_3WEIGHTS, "1,4"},
    { D3DTRANSFORMSTATE_WORLD1, D3DTRANSFORMSTATE_WORLD2, D3DFVF_VERTEXB2, D3DVBLEND_2WEIGHTS, "2,3"},
    { D3DTRANSFORMSTATE_WORLD1, D3DTRANSFORMSTATE_WORLD3, D3DFVF_VERTEXB3, D3DVBLEND_3WEIGHTS, "2,4"},
    { D3DTRANSFORMSTATE_WORLD2, D3DTRANSFORMSTATE_WORLD3, D3DFVF_VERTEXB3, D3DVBLEND_3WEIGHTS, "3,4"}
};

//******************************************************************************
//
// Function:
//
//     ValidateDisplay
//
// Description:
//
//     Evaluate the given display information in order to determine whether or
//     not the display is capable of rendering the scene.  If not, the given 
//     display will not be included in the display list.
//
// Arguments:
//
//     CDirect3D8* pd3d                 - Pointer to the Direct3D object
//
//     D3DCAPS8* pd3dcaps               - Capabilities of the device
//
//     D3DDISPLAYMODE*                  - Display mode into which the device
//                                        will be placed
//
// Return Value:
//
//     TRUE if the scene can be rendered using the given display, FALSE if
//     it cannot.
//
//******************************************************************************
extern "C" BOOL PREPEND_MODULE(_ValidateDisplay)(CDirect3D8* pd3d, D3DCAPS8* pd3dcaps, D3DDISPLAYMODE* pd3ddm) {

    // Check vertex blending support
    return (!(pd3dcaps->MaxVertexBlendMatrices == 0 ||
            pd3dcaps->MaxVertexBlendMatrices == 1 ||
            pd3dcaps->MaxActiveLights == 0 ||
            !(pd3dcaps->VertexProcessingCaps & D3DVTXPCAPS_DIRECTIONALLIGHTS)));
}

//******************************************************************************
//
// Function:
//
//     ExhibitScene
//
// Description:
//
//     Create the scene, pump messages, process user input,
//     update the scene, render the scene, and release the scene when finished.
//
// Arguments:
//
//     CDisplay* pDisplay           - Pointer to the Display object
//
//     int* pnExitCode              - Optional pointer to an integer that will
//                                    be set to the exit value contained in the 
//                                    wParam parameter of the WM_QUIT message 
//                                    (if received)
//
// Return Value:
//
//     TRUE if the display remains functional on exit, FALSE otherwise.
//
//******************************************************************************
extern "C" BOOL PREPEND_MODULE(_ExhibitScene)(CDisplay* pDisplay, int* pnExitCode) {

    Ball*    pBall;
    BOOL     bRet;

    // Verify that the display has been initialized
    if (!pDisplay) {
        return FALSE;
    }

#ifdef UNDER_XBOX
    if (!(GetStartupContext() & TSTART_STRESS)) {
        pDisplay->ReleaseDevice();
        pDisplay->GetDirect3D8()->SetPushBufferSize(786432, 32768);
        pDisplay->CreateDevice();
    }
#endif

    // Create the scene
    pBall = new Ball();
    if (!pBall) {
        return FALSE;
    }

    // Initialize the scene
    if (!pBall->Create(pDisplay)) {
        pBall->Release();
        return FALSE;
    }

    bRet = pBall->Exhibit(pnExitCode);

    // Clean up the scene
    pBall->Release();

#ifdef UNDER_XBOX
    if (!(GetStartupContext() & TSTART_STRESS)) {
        pDisplay->ReleaseDevice();
        pDisplay->GetDirect3D8()->SetPushBufferSize(524288, 32768);
        pDisplay->CreateDevice();
    }
#endif

    return bRet;
}

Ball::Ball()
{
//    m_pMaterial = NULL;
//    m_pLight = NULL;
    m_pChainTexture = NULL;
    m_pLogoTexture = NULL;
    m_pWallTexture = NULL;

    m_pSphereVerticesB1 = NULL;
    m_dwSphereVertices = 0;
    m_pSphereIndices = NULL;
    m_dwSphereIndices = 0;

    m_pBoxVerticesB1 = NULL;
    m_pBoxVerticesB2 = NULL;
    m_pBoxVerticesB3 = NULL;
    m_dwBoxVertices = 0;

    m_pVerticesB1 = NULL;
    m_pVerticesB2 = NULL;
    m_pVerticesB3 = NULL;

    m_pWallVertices = NULL;

    
    m_dwTranslations = 100;
    m_dwMatrixModes = 6;
    m_dwRasterModes = 3;
    m_dwTotalTests = m_dwRasterModes * m_dwMatrixModes * m_dwTranslations;
    
    m_dwCurrentTestNumber = 0;
    m_dwCurrentTranslation = 0;
    m_dwCurrentMatrixMode = 0;
    m_dwCurrentRasterMode = 0;
    m_dwNumFailed = 0;

	m_szTestName = TEXT("Ball");
	m_szCommandKey = TEXT("ball");
}

Ball::~Ball()
{
//    RELEASE(m_pMaterial);
//    RELEASE(m_pLight);
    ReleaseTexture(m_pChainTexture);
    ReleaseTexture(m_pLogoTexture);
    ReleaseTexture(m_pWallTexture);

    if (m_pSphereVerticesB1)
    {
        delete [] m_pSphereVerticesB1;
        m_pSphereVerticesB1 = 0;
    }
    m_dwSphereVertices = 0;
    if (m_pSphereIndices)
    {
        delete [] m_pSphereIndices;
        m_pSphereIndices = 0;
    }
    m_dwSphereIndices = 0;

    if (m_pBoxVerticesB1)
    {
        delete [] m_pBoxVerticesB1;
        m_pBoxVerticesB1 = 0;
    }
    if (m_pBoxVerticesB2)
    {
        delete [] m_pBoxVerticesB2;
        m_pBoxVerticesB2 = 0;
    }
    if (m_pBoxVerticesB3)
    {
        delete [] m_pBoxVerticesB3;
        m_pBoxVerticesB3 = 0;
    }
    m_dwBoxVertices = 0;

    if (m_pVerticesB1)
    {
        delete [] m_pVerticesB1;
        m_pVerticesB1 = 0;
    }
    if (m_pVerticesB2)
    {
        delete [] m_pVerticesB2;
        m_pVerticesB2 = 0;
    }
    if (m_pVerticesB3)
    {
        delete [] m_pVerticesB3;
        m_pVerticesB3 = 0;
    }

    if (m_pWallVertices)
    {
        delete [] m_pWallVertices;
        m_pWallVertices = 0;
    }
}


UINT Ball::TestInitialize(void)
{
//    CImageLoader    Loader;
    CShapes*		pShape = NULL;
//    CImageData*		pImage;
    int             i;

    SetTestRange(1, m_dwTotalTests);

    // Check for D3D version
//    if (m_dwVersion < 0x0700)
//    {   
//        WriteToLog("Ball: Test requires DX7 or later.\n");
//        return D3DTESTINIT_SKIPALL;
//    }
    
    // Check vertex blending support
    if (m_d3dcaps.MaxVertexBlendMatrices == 0)
    {
        WriteToLog("Ball: Device does not support vertex blending.\n");
        return D3DTESTINIT_SKIPALL;
    }
    
    if (m_d3dcaps.MaxVertexBlendMatrices == 1)
    {
        WriteToLog("Ball: Device exports 1 in wMaxVertexBlendMatrices.\n");
        return D3DTESTINIT_ABORT;
    }
    
    // Check for lighting caps
    if (m_d3dcaps.MaxActiveLights == 0)
    {
        WriteToLog("Ball: Device does not support lighting\n");
        return D3DTESTINIT_SKIPALL;
    }

    // Check the device supports directional lights
    if (!(m_d3dcaps.VertexProcessingCaps & D3DVTXPCAPS_DIRECTIONALLIGHTS))
    {
        WriteToLog("Ball: Device does not support directional lights\n");
        return D3DTESTINIT_SKIPALL;
    }

#ifdef UNDER_XBOX
    if (GetStartupContext() & TSTART_STRESS) {
        SetAPI(RP_DIPVB);
    }
#endif

    // Initialize sphere vertices
    pShape = new CShapes;
    if (NULL == pShape)
        return D3DTESTINIT_ABORT;
    if (!pShape->NewShape(CS_SPHERE)) {
        return D3DTESTINIT_ABORT;
    }

    m_dwSphereVertices = pShape->m_nVertices;
    m_pSphereVerticesB1 = new D3DVERTEXB1 [m_dwSphereVertices];
    if (NULL == m_pSphereVerticesB1)
        return D3DTESTINIT_ABORT;
    for (i = 0; i < (int)m_dwSphereVertices; i++)
    {
        m_pSphereVerticesB1[i].x = pShape->m_pVertices[i].x;
        m_pSphereVerticesB1[i].y = pShape->m_pVertices[i].y;
        m_pSphereVerticesB1[i].z = pShape->m_pVertices[i].z;
        m_pSphereVerticesB1[i].nx = pShape->m_pVertices[i].nx;
        m_pSphereVerticesB1[i].ny = pShape->m_pVertices[i].ny;
        m_pSphereVerticesB1[i].nz = pShape->m_pVertices[i].nz;
        m_pSphereVerticesB1[i].tu = pShape->m_pVertices[i].tu;
        m_pSphereVerticesB1[i].tv = pShape->m_pVertices[i].tv;
        m_pSphereVerticesB1[i].k1 = (float)sqrt(m_pSphereVerticesB1[i].y + 0.5f);
    }
    m_dwSphereIndices = pShape->m_nIndices;
    m_pSphereIndices = new WORD [m_dwSphereIndices];
    if (NULL == m_pSphereIndices)
        return D3DTESTINIT_ABORT;
    for (i = 0; i < (int)m_dwSphereIndices; i++)
        m_pSphereIndices[i] = pShape->m_pIndices[i];
    delete pShape;

    // Intialize temporary vertex arrays
    m_pVerticesB1 = new D3DVERTEXB1 [m_dwSphereVertices];
    if (NULL == m_pVerticesB1)
        return D3DTESTINIT_ABORT;
    m_pVerticesB2 = new D3DVERTEXB2 [m_dwSphereVertices];
    if (NULL == m_pVerticesB2)
        return D3DTESTINIT_ABORT;
    m_pVerticesB3 = new D3DVERTEXB3 [m_dwSphereVertices];
    if (NULL == m_pVerticesB3)
        return D3DTESTINIT_ABORT;

    // Initialize box vertices
    float   fMinX = -0.5f;
    float   fMaxX =  0.5f;
    int     iSegments = 50;
    float   fStepX = (fMaxX - fMinX) / iSegments;

    m_dwBoxVertices = 2*iSegments + 2;
    m_pBoxVerticesB1 = new D3DVERTEXB1 [m_dwBoxVertices];
    if (NULL == m_pBoxVerticesB1)
        return D3DTESTINIT_ABORT;
    for (i = 0; i < (iSegments + 1); i++)
    {
        // First vertex
        m_pBoxVerticesB1[2*i].x = fMinX + fStepX*i;
        m_pBoxVerticesB1[2*i].y = 0.5f;
        m_pBoxVerticesB1[2*i].z = 0.f;
        m_pBoxVerticesB1[2*i].nx = 0.f;
        m_pBoxVerticesB1[2*i].ny = 0.f;
        m_pBoxVerticesB1[2*i].nz = -1.f;
        m_pBoxVerticesB1[2*i].tu = 2.f * fStepX*i / (fMaxX - fMinX);
        m_pBoxVerticesB1[2*i].tv = 0.f;
        
        if (m_pBoxVerticesB1[2*i].x < -0.1f)
            m_pBoxVerticesB1[2*i].k1 = (float)sqrt((m_pBoxVerticesB1[2*i].x + 0.5f)*2.5f);
        else if (m_pBoxVerticesB1[2*i].x < 0.1f)
            m_pBoxVerticesB1[2*i].k1 = 1.f;
        else
            m_pBoxVerticesB1[2*i].k1 = (float)sqrt((0.5f - m_pBoxVerticesB1[2*i].x)*2.5f);

        // Second vertex
        m_pBoxVerticesB1[2*i+1].x = fMinX + fStepX*i;
        m_pBoxVerticesB1[2*i+1].y = -0.5f;
        m_pBoxVerticesB1[2*i+1].z = 0.f;
        m_pBoxVerticesB1[2*i+1].nx = 0.f;
        m_pBoxVerticesB1[2*i+1].ny = 0.f;
        m_pBoxVerticesB1[2*i+1].nz = -1.f;
        m_pBoxVerticesB1[2*i+1].tu = 2.f * fStepX*i / (fMaxX - fMinX);
        m_pBoxVerticesB1[2*i+1].tv = 1.f;
        
        m_pBoxVerticesB1[2*i+1].k1 = 0.f;
    }

    // Initialize wall vertices
    m_pWallVertices = new D3DTLVERTEX [4];
    if (NULL == m_pWallVertices)
        return D3DTESTINIT_ABORT;
    for (i = 0; i < 4; i++)
    {
        m_pWallVertices[i].sx = 0.f;
        m_pWallVertices[i].sy = 0.f;
        m_pWallVertices[i].sz = 0.99f;
        m_pWallVertices[i].rhw = 1.f;
        m_pWallVertices[i].color = RGBA_MAKE(255, 255, 255, 255);
        m_pWallVertices[i].dcSpecular = 0;
        m_pWallVertices[i].tu = 0.f;
        m_pWallVertices[i].tv = 0.f;
    }
    m_pWallVertices[0].sy = m_pWallVertices[3].sy = (float)m_pDisplay->GetHeight();
    m_pWallVertices[2].sx = m_pWallVertices[3].sx = (float)m_pDisplay->GetWidth();
    m_pWallVertices[2].tu = m_pWallVertices[3].tu = 1.f;
    m_pWallVertices[1].tv = m_pWallVertices[2].tv = 1.f;

    // Intialize textures
    // Chain
//    pImage = Loader.Load(CIL_BMP,"chain.bmp");
//    m_pChainTexture = CreateTexture(256,256,NUL