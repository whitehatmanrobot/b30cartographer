Manager *****************************\
*                                                                           *
* Module: GRNV20.C                                                          *
*   The graphics chip dependent routines are kept here.                     *
*                                                                           *
*****************************************************************************
*                                                                           *
* History:                                                                  *
*                                                                           *
\***************************************************************************/

#include <nv_ref.h>
#include <nv20_ref.h>
#include <nvrm.h>
#include <nv20_hal.h>
#include <heap.h>
#include "nvhw.h"
#include "nvhalcpp.h"

// forwards
RM_STATUS nvHalGrControl_NV20(VOID *);
RM_STATUS nvHalGrAlloc_NV20(VOID *);
RM_STATUS nvHalGrFree_NV20(VOID *);
RM_STATUS nvHalGrGetExceptionData_NV20(VOID *);
RM_STATUS nvHalGrService_NV20(VOID *);
RM_STATUS nvHalGrGetNotifyData_NV20(VOID *);
RM_STATUS nvHalGrSetObjectContext_NV20(VOID *);

// statics
static RM_STATUS _nvHalGrInitObjectContext_NV20(PHALHWINFO, U032, U032);
static RM_STATUS _nvHalGrInit3d_NV20(PHALHWINFO, U032);
static RM_STATUS _nvHalGrDestroy3d_NV20(PHALHWINFO, U032);

// externs
extern RM_STATUS nvHalGrClassSoftwareMethod_NV20(PHALHWINFO, PGREXCEPTIONDATA);

extern RM_STATUS nvHalGrLoadChannelContext_NV20(PHALHWINFO, U032);
extern RM_STATUS nvHalGrUnloadChannelContext_NV20(PHALHWINFO, U032);

//
// Macro for mirroring PFB reg values into texture cache via RDI.
//
#define RDI_REG_WR32(select, addr, data)    \
    {                                       \
        REG_WR32(NV_PGRAPH_RDI_INDEX,       \
                 DRF_NUM(_PGRAPH, _RDI_INDEX, _SELECT, select) |    \
                 DRF_NUM(_PGRAPH, _RDI_INDEX, _ADDRESS, addr));     \
        REG_WR32(NV_PGRAPH_RDI_DATA, data);                         \
    }

//
// nvHalGrControl
//
RM_STATUS
nvHalGrControl_NV20(VOID *arg)
{
    PGRCONTROLARG_000 pGrControlArg = (PGRCONTROLARG_000)arg;
    PHALHWINFO pHalHwInfo = pGrControlArg->pHalHwInfo;
    PGRHALINFO pGrHalInfo;
    PGRHALINFO_NV20 pGrHalPvtInfo;
    U032 i;

    DBG_PRINT_STRING(DEBUGLEVEL_TRACEINFO, "NVRM: nvHalGrControl_NV20\r\n");

    // ASSERTIONS

    //
    // Verify interface revision.
    //
    if (pGrControlArg->id != GR_CONTROL_000)
        return (RM_ERR_VERSION_MISMATCH);

    pHalHwInfo = pGrControlArg->pHalHwInfo;
    pGrHalInfo = pHalHwInfo->pGrHalInfo;
    pGrHalPvtInfo = (PGRHALINFO_NV20)pHalHwInfo->pGrHalPvtInfo;
    
    switch (pGrControlArg->cmd)
    {
        case GR_CONTROL_INIT:
            //
            // Initialize graphics debug values.
            //

            // all DEBUG0 bits are RESET bits in NV20
            pGrHalPvtInfo->Debug0 = 0x0;

            pGrHalPvtInfo->Debug1 = (U032)
                DRF_DEF(_PGRAPH, _DEBUG_1, _VOLATILE_RESET,   _INIT) |
                DRF_DEF(_PGRAPH, _DEBUG_1, _VTX_PTE,          _INIT) |
                DRF_DEF(_PGRAPH, _DEBUG_1, _VTX_CACHE,        _INIT) |
                DRF_DEF(_PGRAPH, _DEBUG_1, _VTX_FILE,         _INIT) |
                DRF_DEF(_PGRAPH, _DEBUG_1, _DRAWDIR_AUTO,     _INIT) |
                DRF_DEF(_PGRAPH, _DEBUG_1, _DRAWDIR_Y,        _INIT) |
                DRF_DEF(_PGRAPH, _DEBUG_1, _INSTANCE,         _INIT) |
                DRF_DEF(_PGRAPH, _DEBUG_1, _CTX,              _INIT);

            pGrHalPvtInfo->Debug2 = (U032)
                DRF_DEF(_PGRAPH, _DEBUG_2, _PREROP_PITCH_CHECK_2D, _INIT) |
                DRF_DEF(_PGRAPH, _DEBUG_2, _PREROP_PITCH_CHECK_BLT, _INIT) |
                DRF_DEF(_PGRAPH, _DEBUG_2, _PREROP_PITCH_CHECK_CELS, _INIT) |
                DRF_DEF(_PGRAPH, _DEBUG_2, _PREROP_PITCH_CHECK_3D, _INIT) |
                DRF_DEF(_PGRAPH, _DEBUG_2, _PREROP_LIMIT_CHECK,    _INIT) |
                DRF_DEF(_PGRAPH, _DEBUG_2, _PREROP_OVRFLW_CHECK,   _INIT) |
                DRF_DEF(_PGRAPH, _DEBUG_2, _PREROP_MEMSIZE_CHECK,  _INIT) |
                DRF_DEF(_PGRAPH, _DEBUG_2, _PREROP_SWIZZLE_CHECK,  _INIT) |
                DRF_DEF(_PGRAPH, _DEBUG_2, _PREROP_TILEVIOL,       _INIT) |
                DRF_DEF(_PGRAPH, _DEBUG_2, _PREROP_ENDIAN_CHECK,   _INIT) |
                DRF_DEF(_PGRAPH, _DEBUG_2, _PREROP_LIMIT_INT,      _INIT) |
                DRF_DEF(_PGRAPH, _DEBUG_2, _PREROP_OVRFLW_INT,     _INIT) |
                DRF_DEF(_PGRAPH, _DEBUG_2, _PREROP_PASS_VIOL,      _INIT) |
                DRF_DEF(_PGRAPH, _DEBUG_2, _PREROP_PITCHWRAP,      _INIT) |
                DRF_DEF(_PGRAPH, _DEBUG_2, _PREROP_DITHER_3D,      _INIT) |
                DRF_DEF(_PGRAPH, _DEBUG_2, _PREROP_DITHER_2D,      _INIT) |
                DRF_DEF(_PGRAPH, _DEBUG_2, _PREROP_SWALLOW_REQS,   _INIT) |
                DRF_DEF(_PGRAPH, _DEBUG_2, _PREROP_SBFILTER,       _INIT) |
                DRF_DEF(_PGRAPH, _DEBUG_2, _PREROP_FASTCLEAR,      _INIT) |
                DRF_DEF(_PGRAPH, _DEBUG_2, _PREROP_FLUSH_HOLDOFF,  _INIT) |
                DRF_DEF(_PGRAPH, _DEBUG_2, _PREROP_TILEBIT_UPDATE, _INIT);

            pGrHalPvtInfo->Debug3 = (U032)
                DRF_DEF(_PGRAPH, _DEBUG_3, _FLUSHING,              _INIT) |
                DRF_DEF(_PGRAPH, _DEBUG_3, _HW_CONTEXT_SWITCH,     _INIT) |
                DRF_DEF(_PGRAPH, _DEBUG_3, _FD_CHECK,              _INIT) |
                DRF_DEF(_PGRAPH, _DEBUG_3, _FAST_DATA_STRTCH,      _INIT) |
                DRF_DEF(_PGRAPH, _DEBUG_3, _FAST_3D_SHADOW_DATA,   _INIT) |
                DRF_DEF(_PGRAPH, _DEBUG_3, _CHECK_64BYTE_ALIGN,    _INIT) |
                DRF_DEF(_PGRAPH, _DEBUG_3, _SINGLE_STEP,           _INIT) |
                DRF_DEF(_PGRAPH, _DEBUG_3, _RDI_IDLE_WAIT,         _INIT) |
                DRF_DEF(_PGRAPH, _DEBUG_3, _IDLE_FILTER,           _ENABLED) |
                DRF_DEF(_PGRAPH, _DEBUG_3, _SYNCHRONIZE,           _INIT) |
                DRF_DEF(_PGRAPH, _DEBUG_3, _OBJECT_RELOAD,         _INIT) |
                DRF_DEF(_PGRAPH, _DEBUG_3, _PM_TRIGGER,            _INIT) |
                DRF_DEF(_PGRAPH, _DEBUG_3, _ALTARCH,               _INIT) |
                DRF_DEF(_PGRAPH, _DEBUG_3, _SINGLE_CYCLE_LOAD,     _INIT) |
                DRF_DEF(_PGRAPH, _DEBUG_3, _BILINEAR_3D,           _INIT) |
                DRF_DEF(_PGRAPH, _DEBUG_3, _VOLATILE_RESET,        _INIT) |
                DRF_DEF(_PGRAPH, _DEBUG_3, _DATA_CHECK,            _INIT) |
                DRF_DEF(_PGRAPH, _DEBUG_3, _DATA_CHECK_FAIL,       _INIT) |
                DRF_DEF(_PGRAPH, _DEBUG_3, _FORMAT_CHECK,          _INIT) |
                DRF_DEF(_PGRAPH, _DEBUG_3, _DMA_CHECK,             _INIT) |
                DRF_DEF(_PGRAPH, _DEBUG_3, _STATE_CHECK,           _INIT) |
                DRF_DEF(_PGRAPH, _DEBUG_3, _KELVIN_HWFLIP,         _INIT) |
                DRF_DEF(_PGRAPH, _DEBUG_3, _FAST_3D_RESTORE,       _INIT) |
                DRF_DEF(_PGRAPH, _DEBUG_3, _STATE3D_CHECK,         _INIT) |
                DRF_DEF(_PGRAPH, _DEBUG_3, _XFMODE_COALESCE,       _INIT) |
                DRF_DEF(_PGRAPH, _DEBUG_3, _CTX_METHODS,           _INIT) |
                DRF_DEF(_PGRAPH, _DEBUG_3, _OP_METHODS,            _INIT) |
                DRF_DEF(_PGRAPH, _DEBUG_3, _IGNORE_PATCHVALID,     _INIT);

            // all DEBUG_[4,5] bits are SPARES currently
            pGrHalPvtInfo->Debug4 = 0x0;
            pGrHalPvtInfo->Debug5 =
                DRF_DEF(_PGRAPH, _DEBUG_5, _ZCULL_REQ_FULL_CVG,    _INIT) |
                DRF_DEF(_PGRAPH, _DEBUG_5, _ZCULL_PUNT_FB_BUSY,    _INIT) |
                DRF_DEF(_PGRAPH, _DEBUG_5, _ZCULL_PUNT_S_ON_Z,     _INIT) |
                DRF_DEF(_PGRAPH, _DEBUG_5, _ZCULL_RETURN_COMP,     _INIT);

            pGrHalPvtInfo->Debug6 = (U032)
                DRF_DEF(_PGRAPH, _DEBUG_6, _ROP_SEP_ZC_READS,      _INIT) |
                DRF_DEF(_PGRAPH, _DEBUG_6, _ROP_DITHER_3D,         _INIT) |
                DRF_DEF(_PGRAPH, _DEBUG_6, _ROP_DITHER_2D,         _INIT) |
                DRF_DEF(_PGRAPH, _DEBUG_6, _ROP_EARLY_ZABORT,      _INIT) |
                DRF_DEF(_PGRAPH, _DEBUG_6, _ROP_PASS_ROPFLUSH,     _INIT) |
                DRF_DEF(_PGRAPH, _DEBUG_6, _ROP_CBUF_DRAIN,        _INIT) |
                DRF_DEF(_PGRAPH, _DEBUG_6, _ROP_CBUF_HIGHWATER,    _INIT) |
                DRF_DEF(_PGRAPH, _DEBUG_6, _ROP_CBUF_HIGHWATER2,   _INIT) |
                DRF_DEF(_PGRAPH, _DEBUG_6, _ROP_COALESCE_3D,       _INIT) |
                DRF_DEF(_PGRAPH, _DEBUG_6, _ROP_COALESCE_2D,       _INIT) |
                DRF_DEF(_PGRAPH, _DEBUG_6, _ROP_FIXED_ADRS,        _INIT) |
                DRF_DEF(_PGRAPH, _DEBUG_6, _ROP_FAST_KEEP_DST,     _INIT) |
                DRF_DEF(_PGRAPH, _DEBUG_6, _ROP_FORCE_CREAD,       _INIT) |
                DRF_DEF(_PGRAPH, _DEBUG_6, _ROP_ALLOW_3D_SKIP_READ, _INIT) |
                DRF_DEF(_PGRAPH, _DEBUG_6, _ROP_ZCMP_ALWAYS_READ,  _INIT) |
                DRF_DEF(_PGRAPH, _DEBUG_6, _ROP_ZCOMPRESS_EN,      _INIT) |
                DRF_DEF(_PGRAPH, _DEBUG_6, _ROP_BURST_CREADS,      _INIT) |
                DRF_DEF(_PGRAPH, _DEBUG_6, _ROP_BURST_CWRITES,     _INIT) |
                DRF_DEF(_PGRAPH, _DEBUG_6, _ROP_AUTO_INIT,         _INIT) |
                DRF_DEF(_PGRAPH, _DEBUG_6, _ROP_HASH_TEST1,        _INIT) |
                DRF_DEF(_PGRAPH, _DEBUG_6, _ROP_INTERLOCK,         _INIT) |
                DRF_DEF(_PGRAPH, _DEBUG_6, _ROP_ZREAD,             _INIT) |
                DRF_DEF(_PGRAPH, _DEBUG_6, _ROP_ZCULL_DATA,        _INIT) |
                DRF_DEF(_PGRAPH, _DEBUG_6, _ROP_CROP_SWALLOW,      _INIT) |
                DRF_DEF(_PGRAPH, _DEBUG_6, _SPARE_BIT31,           _INIT);

            pGrHalPvtInfo->Debug7 = (U032)
                DRF_DEF(_PGRAPH, _DEBUG_7, _ROP_INIT_ZRD_TMSTAMP,  _INIT) |
                DRF_DEF(_PGRAPH, _DEBUG_7, _ROP_ZCULL_NO_STALE,    _INIT) |
                DRF_DEF(_PGRAPH, _DEBUG_7, _ROP_ZROP_INTERLOCK,    _INIT) |
                DRF_DEF(_PGRAPH, _DEBUG_7, _ROP_ZWR_FORCE_VISIBLE, _INIT) |
                DRF_DEF(_PGRAPH, _DEBUG_7, _ROP_ZWR_PURGE_PER_PKT, _INIT) |
                DRF_DEF(_PGRAPH, _DEBUG_7, _ROP_ZWR_FORCE_NO_16BYTE_WR, _INIT) |
                DRF_DEF(_PGRAPH, _DEBUG_7, _ROP_ZWR_FORCE_FSTCLR_EXPAND, _INIT) |
                DRF_DEF(_PGRAPH, _DEBUG_7, _ROP_ZWR_FORCE_NO_RMW_DISABLE, _INIT) |
                DRF_DEF(_PGRAPH, _DEBUG_7, _ROP_ZWR_INHIBIT_COMPRESS, _INIT) |
                DRF_DEF(_PGRAPH, _DEBUG_7, _ROP_ZWR_CMPR_FULL_BE_ONLY, _INIT) |
                DRF_DEF(_PGRAPH, _DEBUG_7, _ROP_ZWR_ALWAYS_WR_STENCIL, _INIT) |
                DRF_DEF(_PGRAPH, _DEBUG_7, _ROP_ZWR_INHIBIT_SKIP_WR_EQ, _INIT) |
                DRF_DEF(_PGRAPH, _DEBUG_7, _ROP_ZWR_SELECTPM,      _INIT) |
                DRF_DEF(_PGRAPH, _DEBUG_7, _ROP_ZWR_EXTRA1,        _INIT) |
                DRF_DEF(_PGRAPH, _DEBUG_7, _ROP_ZWR_EXTRA2,        _INIT) |
                DRF_DEF(_PGRAPH, _DEBUG_7, _ROP_ZWR_EXTRA3,        _INIT) |
                DRF_DEF(_PGRAPH, _DEBUG_7, _ROP_CROP_SELECTPM,     _INIT) |
                DRF_DEF(_PGRAPH, _DEBUG_7, _ROP_ZWR_EXTRA4,        _INIT) |
                DRF_DEF(_PGRAPH, _DEBUG_7, _ROP_ZRD_HASH_TAGS,     _INIT) |
                DRF_DEF(_PGRAPH, _DEBUG_7, _ROP_CROP_BLIT_HASH,    _INIT);

            pGrHalPvtInfo->Debug8 = (U032)
                DRF_DEF(_PGRAPH, _DEBUG_8, _SHADER_FIFO_WATERMARK, _INIT) |
                DRF_DEF(_PGRAPH, _DEBUG_8, _COMBINER_NEG_TEXTURE,  _INIT);

            pGrHalPvtInfo->Debug9 = (U032)
                DRF_DEF(_PGRAPH, _DEBUG_9, _BEGIN_PATCH0_CHECK, _ENABLE) | 
                DRF_DEF(_PGRAPH, _DEBUG_9, _BEGIN_PATCH1_CHECK, _ENABLE) | 
                DRF_DEF(_PGRAPH, _DEBUG_9, _BEGIN_PATCH2_CHECK, _ENABLE) | 
                DRF_DEF(_PGRAPH, _DEBUG_9, _BEGIN_PATCH3_CHECK, _ENABLE) | 
                DRF_DEF(_PGRAPH, _DEBUG_9, _END_PATCH_CHECK, _ENABLE) | 
                DRF_DEF(_PGRAPH, _DEBUG_9, _BEGIN_END_SWATCH_CHECK, _ENABLE) | 
                DRF_DEF(_PGRAPH, _DEBUG_9, _BEGIN_END_CURVE_CHECK, _DISABLE) | 
                DRF_DEF(_PGRAPH, _DEBUG_9, _CURVE_COEFF_CHECK, _ENABLE) | 
                DRF_DEF(_PGRAPH, _DEBUG_9, _BEGIN_TRANS0_CHECK, _ENABLE) | 
                DRF_DEF(_PGRAPH, _DEBUG_9, _BEGIN_TRANS1_CHECK, _ENABLE) | 
                DRF_DEF(_PGRAPH, _DEBUG_9, _BEGIN_TRANS2_CHECK, _ENABLE) | 
                DRF_DEF(_PGRAPH, _DEBUG_9, _END_TRANSITION_CHECK, _ENABLE);

            //
            // Have to use hybrid context switch mode to work around
            // FD bug...we'll do this here so it's easier to control
            // on future chips where we'll hopefully be able to
            // employ full hw context switching.
            //
            pGrHalPvtInfo->Debug3 &= ~(U032)DRF_DEF(_PGRAPH, _DEBUG_3, _HW_CONTEXT_SWITCH, _ENABLED);

            //
            // Separate color and Z reads on SDR memory configurations
            // (i.e. same dram bank).
            //
            if (REG_RD_DRF(_PBUS, _FBIO_RAM, _TYPE) == NV_PBUS_FBIO_RAM_TYPE_SDR)
                pGrHalPvtInfo->Debug6 |= DRF_DEF(_PGRAPH, _DEBUG_6, _ROP_SEP_ZC_READS, _ENABLED);
            else
                pGrHalPvtInfo->Debug6 |= DRF_DEF(_PGRAPH, _DEBUG_6, _ROP_SEP_ZC_READS, _DISABLED);

            //
            // Initialize graphics channel context table register.
            //
            pGrHalPvtInfo->CtxTableBase = pHalHwInfo->grInstMem;
            REG_WR_DRF_NUM(_PGRAPH, _CHANNEL_CTX_TABLE, _INST, pHalHwInfo->grInstMem);
            for (i = 0; i < NUM_FIFOS_NV20; i++)
                INST_WR32(pGrHalPvtInfo->CtxTableBase, i*4, 0);

            //
            // Init channel id to invalid.
            //
            pGrHalPvtInfo->currentChID = NUM_FIFOS_NV20;

            //
            // Per Luke Chang...
            //
            // Fix 2D im_class (scaled class) zpipe overflow
            // bug by shortening the rbuffer in tcache by 9 entries
            //
            RDI_REG_WR32(NV_IGRAPH_TC_TPA_INDEX_SELECT,
                         NV_IGRAPH_TC_TPA_RBFRDEPTH_INDEX_ADDRESS,
                         0x30);
            RDI_REG_WR32(NV_IGRAPH_TC_TPB_INDEX_SELECT,
                         NV_IGRAPH_TC_TPA_RBFRDEPTH_INDEX_ADDRESS,
                         0x30);
            break;
        case GR_CONTROL_LOAD:
        {
            U032 misc;

            //
            // To reset graphics on nv20, we can't use
            // DEBUG_0, because the _CACHE_STATE bit will
            // cause a hang in the tcache.
            //
            // Instead, we use the PMC register.
            //
            FLD_WR_DRF_DEF(_PMC, _ENABLE, _PGRAPH, _DISABLED);
            FLD_WR_DRF_DEF(_PMC, _ENABLE, _PGRAPH, _ENABLED);

            //
            // Restore DEBUG registers.
            //
            REG_WR32(NV_PGRAPH_DEBUG_0, pGrHalPvtInfo->Debug0);
            REG_WR32(NV_PGRAPH_DEBUG_1, pGrHalPvtInfo->Debug1);
            REG_WR32(NV_PGRAPH_DEBUG_2, pGrHalPvtInfo->Debug2);
            REG_WR32(NV_PGRAPH_DEBUG_3, pGrHalPvtInfo->Debug3);
            REG_WR32(NV_PGRAPH_DEBUG_4, pGrHalPvtInfo->Debug4);
            REG_WR32(NV_PGRAPH_DEBUG_5, pGrHalPvtInfo->Debug5);
            REG_WR32(NV_PGRAPH_DEBUG_6, pGrHalPvtInfo->Debug6);
            REG_WR32(NV_PGRAPH_DEBUG_7, pGrHalPvtInfo->Debug7);
            REG_WR32(NV_PGRAPH_DEBUG_8, pGrHalPvtInfo->Debug8);
            REG_WR32(NV_PGRAPH_DEBUG_9, pGrHalPvtInfo->Debug9);

            //
            // Per Luke Chang...
            //
            // Fix 2D im_class (scaled class) zpipe overflow
            // bug by shortening the rbuffer in tcache by 9 entries
            //
            RDI_REG_WR32(NV_IGRAPH_TC_TPA_INDEX_SELECT,
                         NV_IGRAPH_TC_TPA_RBFRDEPTH_INDEX_ADDRESS,
                         0x30);
            RDI_REG_WR32(NV_IGRAPH_TC_TPB_INDEX_SELECT,
                         NV_IGRAPH_TC_TPA_RBFRDEPTH_INDEX_ADDRESS,
                         0x30);

            //
            // Restore context buffer base address.
            //
            REG_WR_DRF_NUM(_PGRAPH, _CHANNEL_CTX_TABLE, _INST, pHalHwInfo->grInstMem);

            // 
            // PGRAPH_TILE values will be reset after a PGRAPH_DEBUG_0_STATE_RESET.
            // Unfortunately, it may have had values we wanted (e.g. from stateFb),
            // so after a DEBUG_0_STATE_RESET, restore the PGRAPH values from PFB.
            //
            HAL_GR_IDLE(pGrControlArg->pHalHwInfo);

            for (i = 0; i < NV_PFB_TILE__SIZE_1; i++)
            {
                misc = REG_RD32(NV_PFB_TLIMIT(i));
                REG_WR32(NV_PGRAPH_TLIMIT(i), misc);
                RDI_REG_WR32(NV_IGRAPH_TC_MINTFCDEBUG_SELECT,
                             NV_IGRAPH_TC_MINTFCDEBUG_TLIMIT_ADDRESS(i),
                             misc);
                
                misc = REG_RD32(NV_PFB_TSIZE(i));
                REG_WR32(NV_PGRAPH_TSIZE(i), misc);
                RDI_REG_WR32(NV_IGRAPH_TC_MINTFCDEBUG_SELECT,
                             NV_IGRAPH_TC_MINTFCDEBUG_TPITCH_ADDRESS(i),
                             misc);

                misc = REG_RD32(NV_PFB_TILE(i));
                REG_WR32(NV_PGRAPH_TILE(i), REG_RD32(NV_PFB_TILE(i)));
                RDI_REG_WR32(NV_IGRAPH_TC_MINTFCDEBUG_SELECT,
                             NV_IGRAPH_TC_MINTFCDEBUG_TILE_ADDRESS(i),
                             misc);

#ifdef DEBUG
                // these registers need to agree
                if (REG_RD32(NV_PFB_TILE(i)) != REG_RD32(NV_PGRAPH_TILE(i)))
                    DBG_BREAKPOINT();
                if (REG_RD32(NV_PFB_TLIMIT(i)) != REG_RD32(NV_PGRAPH_TLIMIT(i)))
                    DBG_BREAKPOINT();
                if (REG_RD32(NV_PFB_TSIZE(i)) != REG_RD32(NV_PGRAPH_TSIZE(i)))
                    DBG_BREAKPOINT();
#endif
            }

            //
            // Restore zcompression table from fb engine.
            //
            for (i = 0; i < NV_PFB_ZCOMP__SIZE_1; i++)
            {
                misc = REG_RD32(NV_PFB_ZCOMP(i));
                REG_WR32(NV_PGRAPH_ZCOMP(i), misc);
                RDI_REG_WR32(NV_IGRAPH_TC_MINTFCDEBUG_SELECT,
                             NV_IGRAPH_TC_MINTFCDEBUG_ZCOMP_ADDRESS(i),
                             misc);
            }
            misc = REG_RD32(NV_PFB_ZCOMP_OFFSET);
            REG_WR32(NV_PGRAPH_ZCOMP_OFFSET, misc);
            RDI_REG_WR32(NV_IGRAPH_TC_MINTFCDEBUG_SELECT,
                         NV_IGRAPH_TC_MINTFCDEBUG_ZOFFSET_ADDRESS,
                         misc);

            //
            // Restore framebuffer config registers from fb engine.
            //
            misc = REG_RD32(NV_PFB_CFG0);
            REG_WR32(NV_PGRAPH_FBCFG0, misc);
            RDI_REG_WR32(NV_IGRAPH_TC_MINTFCDEBUG_SELECT,
                         NV_IGRAPH_TC_MINTFCDEBUG_CFG0_ADDRESS,
                         misc);

            misc = REG_RD32(NV_PFB_CFG1);
            REG_WR32(NV_PGRAPH_FBCFG1, misc);
            RDI_REG_WR32(NV_IGRAPH_TC_MINTFCDEBUG_SELECT,
                         NV_IGRAPH_TC_MINTFCDEBUG_CFG1_ADDRESS,
                         misc);

            REG_WR32(NV_PGRAPH_CTX_SWITCH1,  0x00000000);
            REG_WR32(NV_PGRAPH_CTX_SWITCH2,  0x00000000);
            REG_WR32(NV_PGRAPH_CTX_SWITCH3,  0x00000000);
            REG_WR32(NV_PGRAPH_CTX_SWITCH4,  0x00000000);
            REG_WR32(NV_PGRAPH_CTX_CONTROL,
                     DRF_DEF(_PGRAPH, _CTX_CONTROL, _MINIMUM_TIME, _33US)
                     | DRF_DEF(_PGRAPH, _CTX_CONTROL, _TIME,         _EXPIRED)
                     | DRF_DEF(_PGRAPH, _CTX_CONTROL, _CHID,         _INVALID)
                     | DRF_DEF(_PGRAPH, _CTX_CONTROL, _SWITCHING,    _IDLE)
                     | DRF_DEF(_PGRAPH, _CTX_CONTROL, _DEVICE,       _ENABLED));
            REG_WR_DRF_DEF(_PGRAPH, _FFINTFC_ST2, _CHID_STATUS, _VALID);

            //
            // Reload current graphics context.
            //
            (void) nvHalGrLoadChannelContext_NV20(pHalHwInfo, pGrHalPvtInfo->currentChID);
            break;
        }
        case GR_CONTROL_UNLOAD:
        {
            //
            // Force an unload of the current channel.
            //
            (void) nvHalGrLoadChannelContext_NV20(pHalHwInfo, NUM_FIFOS_NV20);
            break;
        }
        case GR_CONTROL_DESTROY:
        case GR_CONTROL_UPDATE:
            break;
        default:
            return (RM_ERR_BAD_ARGUMENT);
    }

    return (RM_OK);
}

//
// nvHalGrAlloc
//
RM_STATUS
nvHalGrAlloc_NV20(VOID *arg)
{
    PGRALLOCARG_000 pGrAllocArg = (PGRALLOCARG_000)arg;
    PHALHWINFO pHalHwInfo = pGrAllocArg->pHalHwInfo;
    PGRHALINFO pGrHalInfo;
    PGRHALINFO_NV20 pGrHalPvtInfo;

    DBG_PRINT_STRING(DEBUGLEVEL_TRACEINFO, "NVRM: nvHalGrAlloc_NV20\r\n");

    //
    // Verify interface revision.
    //
    if (pGrAllocArg->id != GR_ALLOC_000)
        return (RM_ERR_VERSION_MISMATCH);

    pHalHwInfo = pGrAllocArg->pHalHwInfo;
    pGrHalInfo = pHalHwInfo->pGrHalInfo;
    pGrHalPvtInfo = (PGRHALINFO_NV20)pHalHwInfo->pGrHalPvtInfo;

    //
    // If we've got a 3d object, keep note of it.
    //
    if ((pGrAllocArg->classNum == NV10_CELSIUS_PRIMITIVE) ||
        (pGrAllocArg->classNum == NV15_CELSIUS_PRIMITIVE) ||
        (pGrAllocArg->classNum == NV11_CELSIUS_PRIMITIVE) ||
        (pGrAllocArg->classNum == NV20_KELVIN_PRIMITIVE))
    {
        //
        // Check that a current 3D object hasn't already been created.
        //
        if (pGrHalPvtInfo->currentObjects3d[pGrAllocArg->chid] != 0) {
            DBG_PRINT_STRING_VALUE(DEBUGLEVEL_ERRORS, "NVRM: 3d state in use by instance ", pGrHalPvtInfo->currentObjects3d[pGrAllocArg->chid]);
            return (RM_ERR_ILLEGAL_OBJECT);
        }
        // ASSERT(pGrChannel->CurrentObject3d == 0)

        pGrHalPvtInfo->currentObjects3d[pGrAllocArg->chid] = pGrAllocArg->instance;

        pGrHalInfo->has3dObject |= (0x1 << pGrAllocArg->chid);

        _nvHalGrInit3d_NV20(pHalHwInfo, pGrAllocArg->chid);
    }

    //
    // Initialize generic object context.
    //
    _nvHalGrInitObjectContext_NV20(pHalHwInfo, pGrAllocArg->instance, pGrAllocArg->classNum);

    return (RM_OK);
}

//
// nvHalGrFree
//
RM_STATUS
nvHalGrFree_NV20(VOID *arg)
{
    PGRFREEARG_000 pGrFreeArg = (PGRFREEARG_000)arg;
    PHALHWINFO pHalHwInfo;
    PGRHALINFO pGrHalInfo;
    PGRHALINFO_NV20 pGrHalPvtInfo;
    U032 i;

    //
    // Verify interface revision.
    //
    if (pGrFreeArg->id != GR_FREE_000)
        return (RM_ERR_VERSION_MISMATCH);

    pHalHwInfo = pGrFreeArg->pHalHwInfo;
    pGrHalInfo = pHalHwInfo->pGrHalInfo;
    pGrHalPvtInfo = (PGRHALINFO_NV20)pHalHwInfo->pGrHalPvtInfo;

    //
    // Clear 3d current object pointer if necessary.
    //
    if (pGrFreeArg->instance == pGrHalPvtInfo->currentObjects3d[pGrFreeArg->chid])
    {
        // we could ASSERT that this is a 3d object here as well
        pGrHalPvtInfo->currentObjects3d[pGrFreeArg->chid] = 0;

        // clear the Celsius bit (either never had one or it was just freed)
        pGrHalInfo->has3dObject &= ~(0x1 << pGrFreeArg->chid);
    }

    //
    // Zero out the object context for good measure.
    //
    for (i = 0; i < 4; i++)
    {
        INST_WR32(pGrFreeArg->instance, i, 0);
    }

    return (RM_OK);
}

//
// nvHalGrGetExceptionData
//
// Retrieve graphics engine exception data.
//
RM_STATUS
nvHalGrGetExceptionData_NV20(VOID *arg)
{
    PGRGETEXCEPTIONDATAARG_000 pGrGetExceptionDataArg = (PGRGETEXCEPTIONDATAARG_000)arg;
    PHALHWINFO pHalHwInfo = pGrGetExceptionDataArg->pHalHwInfo;
    PGREXCEPTIONDATA pGrExceptionData;

    //
    // Verify interface revision.
    //
    if (pGrGetExceptionDataArg->id != GR_GET_EXCEPTION_DATA_000)
        return (RM_ERR_VERSION_MISMATCH);

    pHalHwInfo = pGrGetExceptionDataArg->pHalHwInfo;
    pGrExceptionData = pGrGetExceptionDataArg->pExceptionData;

    //
    // Fill in exception data.
    //
    pGrExceptionData->Offset = REG_RD32(NV_PGRAPH_TRAPPED_ADDR);
    pGrExceptionData->ChID = DRF_VAL(_PGRAPH, _TRAPPED_ADDR, _CHID, pGrExceptionData->Offset);
    pGrExceptionData->NotifyInstance = REG_RD_DRF(_PGRAPH, _CTX_SWITCH2, _NOTIFY_INSTANCE);
    pGrExceptionData->classNum = REG_RD_DRF(_PGRAPH, _CTX_SWITCH1, _GRCLASS);
    pGrExceptionData->Data = REG_RD32(NV_PGRAPH_TRAPPED_DATA_LOW); 
    pGrExceptionData->Instance = REG_RD32(NV_PGRAPH_CTX_SWITCH4);
    pGrExceptionData->Offset &= (DRF_MASK(NV_PGRAPH_TRAPPED_ADDR_MTHD) << DRF_SHIFT(NV_PGRAPH_TRAPPED_ADDR_MTHD));
    pGrExceptionData->Nsource = REG_RD32(NV_PGRAPH_NSOURCE);
    pGrExceptionData->MethodStatus = RM_OK;

    return (RM_OK);
}

//
// nvHalGrService
//
// Handle selected graphics object exceptions.
//
RM_STATUS
nvHalGrService_NV20(VOID *arg)
{
    PGRSERVICEARG_000 pGrServiceArg = (PGRSERVICEARG_000)arg;
    PHALHWINFO pHalHwInfo = pGrServiceArg->pHalHwInfo;
    PGRHALINFO_NV20 pGrHalPvtInfo;
    PGREXCEPTIONDATA pGrExceptionData;

    //
    // Verify interface revision.
    //
    if (pGrServiceArg->id != GR_SERVICE_000)
        return (RM_ERR_VERSION_MISMATCH);

    pHalHwInfo = pGrServiceArg->pHalHwInfo;
    pGrExceptionData = pGrServiceArg->pExceptionData;
    pGrHalPvtInfo = (PGRHALINFO_NV20)pHalHwInfo->pGrHalPvtInfo;

    //
    // Make sure object is valid.
    //
    //if (pGrExceptionData->instance == 0)
    //    return (NV_HAL_ERROR_INVALID_STATE);

    //
    // Handle any exceptions...
    //
    if (pGrServiceArg->intr & DRF_DEF(_PGRAPH, _INTR, _CONTEXT_SWITCH, _PENDING))
    {
        //
        // Reset condition.
        //
        REG_WR_DRF_DEF(_PGRAPH, _INTR, _CONTEXT_SWITCH, _RESET);

        //
        // Wait for idle
        //
        GR_DONE();
    
        //
        // Graphics channel switch.
        //
        DBG_PRINT_STRING(DEBUGLEVEL_TRACEINFO, "NVRM: Graphics context switch exception.\n\r");
        DBG_PRINT_STRING_VALUE(DEBUGLEVEL_TRACEINFO, "NVRM: Previous graphics channel:",pGrHalPvtInfo->currentChID);
        DBG_PRINT_STRING_VALUE(DEBUGLEVEL_TRACEINFO, "NVRM: New graphics channel:", pGrExceptionData->ChID);

        (void) nvHalGrLoadChannelContext_NV20(pHalHwInfo, pGrExceptionData->ChID);
    }

    //
    // Handle methods in software.
    //
    if (pGrServiceArg->intr & DRF_DEF(_PGRAPH, _INTR, _MISSING_HW, _PENDING))
    {
        if (nvHalGrClassSoftwareMethod_NV20(pHalHwInfo, pGrExceptionData) == RM_OK)
        {
            // Reset condition.
            REG_WR_DRF_DEF(_PGRAPH, _INTR, _MISSING_HW, _RESET);
        }
    }

    if ((pGrServiceArg->intr & DRF_DEF(_PGRAPH, _INTR, _NOTIFY, _PENDING)) ||
        (pGrServiceArg->intr & DRF_DEF(_PGRAPH, _INTR, _ERROR, _PENDING)))
    {
        if (pGrExceptionData->Nsource & DRF_DEF(_PGRAPH, _NSOURCE, _ILLEGAL_MTHD, _PENDING))
        {
            if (nvHalGrClassSoftwareMethod_NV20(pHalHwInfo, pGrExceptionData) == RM_OK)
            {
                // Reset condition.
                if (pGrServiceArg->intr & DRF_DEF(_PGRAPH, _INTR, _NOTIFY, _PENDING))
                    REG_WR_DRF_DEF(_PGRAPH, _INTR, _NOTIFY, _RESET);
                else
                    REG_WR_DRF_DEF(_PGRAPH, _INTR, _ERROR, _RESET);
            }
        }
    }

    return (RM_OK);
}

//
// nvHalGrNotifyData
//
// Fill in notify data (trigger status and action).
//
RM_STATUS
nvHalGrGetNotifyData_NV20(VOID *arg)
{
    PGRGETNOTIFYDATAARG_000 pGrGetNotifyDataArg = (PGRGETNOTIFYDATAARG_000)arg;
    PHALHWINFO pHalHwInfo = pGrGetNotifyDataArg->pHalHwInfo;
    PGRNOTIFYDATA pGrNotifyData;

    DBG_PRINT_STRING(DEBUGLEVEL_TRACEINFO, "NVRM: nvHalGrGetNotifyData_NV20\r\n");

    //
    // Verify interface revision.
    //
    if (pGrGetNotifyDataArg->id != GR_GET_NOTIFY_DATA_000)
        return (RM_ERR_VERSION_MISMATCH);

    pHalHwInfo = pGrGetNotifyDataArg->pHalHwInfo;
    pGrNotifyData = pGrGetNotifyDataArg->pGrNotifyData;

    if (REG_RD32(NV_PGRAPH_NOTIFY) &
        (DRF_DEF(_PGRAPH, _NOTIFY, _REQ, _PENDING) |
         DRF_DEF(_PGRAPH, _NOTIFY, _STYLE, _WRITE_THEN_AWAKEN)))
    {
        pGrNotifyData->trigger = TRUE;
        pGrNotifyData->action =  REG_RD_DRF(_PGRAPH, _NOTIFY, _STYLE);
        // clear the notify condition
        FLD_WR_DRF_DEF(_PGRAPH, _NOTIFY, _REQ, _NOT_PENDING);
    } else {
        pGrNotifyData->trigger = FALSE;
        pGrNotifyData->action = 0;
    }

    return (RM_OK);
}

//
// nvHalGrSetObjectContext
//
// Update various graphics object context bits.
// On NV20, these bits are managed by hardware so this
// routine does some error checking and returns.
//
RM_STATUS
nvHalGrSetObjectContext_NV20(VOID *arg)
{
    PGRSETOBJECTCONTEXTARG_000 pGrSetObjectContextArg = (PGRSETOBJECTCONTEXTARG_000)arg;
    PHALHWINFO pHalHwInfo = pGrSetObjectContextArg->pHalHwInfo;
    U032 context, instance;
    U032 fifo;
    U032 i;

    DBG_PRINT_STRING(DEBUGLEVEL_TRACEINFO, "NVRM: nvHalGrSetObjectContext_NV20\r\n");

    //
    // Verify interface revision.
    //
    if (pGrSetObjectContextArg->id != GR_SET_OBJECT_CONTEXT_000)
        return (RM_ERR_VERSION_MISMATCH);

    //
    // Verify chid.
    //
    if (pGrSetObjectContextArg->chid > NUM_FIFOS_NV20)
        return (RM_ERR_BAD_ARGUMENT);

    //
    // Verify instance (what else can we do here without
    // keeping track of all objects that pass through the
    // nvHalGrAlloc interface down in the HAL?).
    //
    if (pGrSetObjectContextArg->instance == 0)
        return (RM_ERR_BAD_ARGUMENT);

    pHalHwInfo = pGrSetObjectContextArg->pHalHwInfo;
    instance = pGrSetObjectContextArg->instance;
    
    //
    // Fetch current context.
    //
    context = INST_RD32(instance, SF_OFFSET(NV_PRAMIN_CONTEXT_0));

    //
    // Make necessary adjustments.
    //
    context &= pGrSetObjectContextArg->andMask;
    context |= pGrSetObjectContextArg->orMask;

    //
    // Write it back out                   
    //
    INST_WR32(instance, SF_OFFSET(NV_PRAMIN_CONTEXT_0), context);
        
    //
    // Now we need to update the hardware context if appropriate.
    //
    if (pGrSetObjectContextArg->chid == REG_RD_DRF(_PGRAPH, _CTX_USER, _CHID))
    {
        //
        // First disable the graphics fifo so we can get to the context rams
        //
        fifo = REG_RD32(NV_PGRAPH_FIFO);
        REG_WR_DRF_DEF(_PGRAPH, _FIFO, _ACCESS, _DISABLED);
            
        //
        // Walk to subchannels and see if we find a match; update when we do
        //
        for (i = 0 ; i < 8 ; i++)
        {            
            if (REG_RD32(NV_PGRAPH_CTX_CACHE4(i)) == instance)
            {   
                //
                // Get the current settings
                //
                context = REG_RD32(NV_PGRAPH_CTX_CACHE1(i));

                //
                // Make necessary adjustments.
                //
                context &= pGrSetObjectContextArg->andMask;
                context |= pGrSetObjectContextArg->orMask;

                //
                // Write it back out                   
                //
                REG_WR32(NV_PGRAPH_CTX_CACHE1(i), context);
            }
        }                                    
                             
        //
        // See if the currently active subchannel also needs updating
        //
        if (REG_RD_DRF(_PGRAPH, _CTX_SWITCH4, _USER_INSTANCE) == instance)
        {   
            //
            // Get the current settings
            //
            context = REG_RD32(NV_PGRAPH_CTX_SWITCH1);

            //
            // Make necessary adjustments.
            //
            context &= pGrSetObjectContextArg->andMask;
            context |= pGrSetObjectContextArg->orMask;

            //
            // Write it back out                   
            //
            REG_WR32(NV_PGRAPH_CTX_SWITCH1, context);
        }
            
        //
        // Restore the fifo state
        //
        REG_WR32(NV_PGRAPH_FIFO, fifo);
        
    }    
    return (RM_OK);
}

static RM_STATUS
_nvHalGrInitObjectContext_NV20(
    PHALHWINFO  pHalHwInfo,
    U032        instance,
    U032        classNum
)
{
    U032 ctx1, ctx2, ctx3;

    // default _CTX_SWITCH1 value
    ctx1 = DRF_NUM(_PGRAPH, _CTX_SWITCH1, _GRCLASS, classNum)
        | DRF_DEF(_PGRAPH, _CTX_SWITCH1, _PATCH_CONFIG, _SRCCOPY_AND)
        | DRF_DEF(_PGRAPH, _CTX_SWITCH1, _PATCH_STATUS, _INVALID);    

    // turn on big endian for this class if supported and we're in big endian mode
    if (pHalHwInfo->pMcHalInfo->EndianControl & MC_ENDIAN_CONTROL_CHIP_BIG_ENDIAN)
        ctx1 |= DRF_DEF(_PGRAPH, _CTX_SWITCH1, _ENDIAN_MODE, _BIG);

    // default _CTX_SWITCH2 value
    ctx2 = DRF_DEF(_PGRAPH, _CTX_SWITCH2, _MONO_FORMAT, _INVALID)
        | DRF_DEF(_PGRAPH, _CTX_SWITCH2, _COLOR_FORMAT, _INVALID)
        | DRF_DEF(_PGRAPH, _CTX_SWITCH2, _NOTIFY_INSTANCE, _INVALID);

    // default _CTX_SWITCH3 value
    ctx3 = DRF_DEF(_PGRAPH, _CTX_SWITCH3, _DMA_INSTANCE_0, _INVALID)
        | DRF_DEF(_PGRAPH, _CTX_SWITCH3, _DMA_INSTANCE_1, _INVALID);

    switch (classNum)
    {
        case NV01_CONTEXT_BETA:
        case NV01_CONTEXT_CLIP_RECTANGLE:
        case NV01_IMAGE_BLIT:
        case NV03_CONTEXT_ROP:
        case NV04_CONTEXT_SURFACES_2D:
        case NV03_DX3_TEXTURED_TRIANGLE:
        case NV04_CONTEXT_SURFACE_SWIZZLED:
        case NV04_CONTEXT_SURFACES_3D:
        case NV03_CONTEXT_SURFACE_2D_DESTINATION:
        case NV03_CONTEXT_SURFACE_2D_SOURCE:
        case NV03_CONTEXT_SURFACE_3D_COLOR:
        case NV03_CONTEXT_SURFACE_3D_DEPTH:
        case NV04_IMAGE_BLIT:
        case NV04_CONTEXT_BETA:
        case NV10_CONTEXT_SURFACES_2D:
        case NV10_CONTEXT_SURFACES_3D:
        case NV15_CONTEXT_SURFACE_SWIZZLED:
        case NV15_IMAGE_BLIT:
            // defaults are fine
            break;
        case NV20_IMAGE_BLIT:
            ctx1 |= DRF_DEF(_PGRAPH, _CTX_SWITCH1, _CLASS_TYPE, _PERFORMANCE);
            break;
        case NV01_CONTEXT_COLOR_KEY:
            ctx2 = DRF_DEF(_PGRAPH, _CTX_SWITCH2, _MONO_FORMAT, _INVALID)
                | DRF_DEF(_PGRAPH, _CTX_SWITCH2, _COLOR_FORMAT, _LE_X16A8Y8)
                | DRF_DEF(_PGRAPH, _CTX_SWITCH2, _NOTIFY_INSTANCE, _INVALID);
            break;
        case NV01_CONTEXT_PATTERN:
        case NV04_CONTEXT_PATTERN:
            ctx2 = DRF_DEF(_PGRAPH, _CTX_SWITCH2, _MONO_FORMAT, _CGA6_M1)
                | DRF_DEF(_PGRAPH, _CTX_SWITCH2, _COLOR_FORMAT, _LE_X16A8Y8)
                | DRF_DEF(_PGRAPH, _CTX_SWITCH2, _NOTIFY_INSTANCE, _INVALID);
            break;
        case NV01_RENDER_SOLID_LIN:
        case NV01_RENDER_SOLID_TRIANGLE:
            ctx2 = DRF_DEF(_PGRAPH, _CTX_SWITCH2, _MONO_FORMAT, _INVALID)
                | DRF_DEF(_PGRAPH, _CTX_SWITCH2, _COLOR_FORMAT, _LE_X24Y8)
                | DRF_DEF(_PGRAPH, _CTX_SWITCH2, _NOTIFY_INSTANCE, _INVALID);
            break;
        case NV01_IMAGE_FROM_CPU:
        case NV03_STRETCHED_IMAGE_FROM_CPU:
            ctx2 = DRF_DEF(_PGRAPH, _CTX_SWITCH2, _MONO_FORMAT, _INVALID)
                | DRF_DEF(_PGRAPH, _CTX_SWITCH2, _COLOR_FORMAT, _LE_Y8)
                | DRF_DEF(_PGRAPH, _CTX_SWITCH2, _NOTIFY_INSTANCE, _INVALID);
            break;
        case NV1_NULL:
            //
            // The NULL object is really a pseudo-dma object, so it needs a valid
            // limit value and should also have the PAGE_TABLE_PRESENT bit set.
            //
            ctx1 |= SF_DEF(_DMA, _PAGE_TABLE, _PRESENT);
            ctx2 = 0xffffffff;
            //INST_WR32(instance, SF_OFFSET(NV_PRAMIN_CONTEXT_1), 0xFFFFFFFF);
            //FLD_WR_ISF_DEF(instance, _DMA, _PAGE_TABLE, _PRESENT);
            break;
        case NV03_SCALED_IMAGE_FROM_MEMORY:
        case NV04_SCALED_IMAGE_FROM_MEMORY:
        case NV10_SCALED_IMAGE_FROM_MEMORY:
            ctx2 = DRF_DEF(_PGRAPH, _CTX_SWITCH2, _MONO_FORMAT, _INVALID)
                | DRF_DEF(_PGRAPH, _CTX_SWITCH2, _COLOR_FORMAT, _LE_A1R5G5B5)
                | DRF_DEF(_PGRAPH, _CTX_SWITCH2, _NOTIFY_INSTANCE, _INVALID);
            break;
        case NV11_SCALED_IMAGE_FROM_MEMORY:
            ctx1 |= DRF_DEF(_PGRAPH, _CTX_SWITCH1, _CLASS_TYPE, _PERFORMANCE);
            ctx2 = DRF_DEF(_PGRAPH, _CTX_SWITCH2, _MONO_FORMAT, _INVALID)
                | DRF_DEF(_PGRAPH, _CTX_SWITCH2, _COLOR_FORMAT, _LE_A1R5G5B5)
                | DRF_DEF(_PGRAPH, _CTX_SWITCH2, _NOTIFY_INSTANCE, _INVALID);
            break;
        case NV04_DVD_SUBPICTURE:
        case NV10_DVD_SUBPICTURE:
            //
            // DVD class is patchless, so it is always considered valid.  HW doesn't
            // use this bit, but let's set it anyway to be consistent with other
            // objects
            //
            ctx1 |= DRF_DEF(_PGRAPH, _CTX_SWITCH1, _PATCH_STATUS, _VALID);
            break;
        case NV03_MEMORY_TO_MEMORY_FORMAT:
            // Note that this object is always considered patch valid
            ctx1 |= DRF_DEF(_PGRAPH, _CTX_SWITCH1, _PATCH_STATUS, _VALID);
            break;
        case NV04_GDI_RECTANGLE_TEXT:
            ctx2 = DRF_DEF(_PGRAPH, _CTX_SWITCH2, _MONO_FORMAT, _CGA6_M1)
                | DRF_DEF(_PGRAPH, _CTX_SWITCH2, _COLOR_FORMAT, _LE_X16R5G6B5)
                | DRF_DEF(_PGRAPH, _CTX_SWITCH2, _NOTIFY_INSTANCE, _INVALID);
            break;
        case NV03_GDI_RECTANGLE_TEXT:
            ctx2 = DRF_DEF(_PGRAPH, _CTX_SWITCH2, _MONO_FORMAT, _CGA6_M1)
                | DRF_DEF(_PGRAPH, _CTX_SWITCH2, _COLOR_FORMAT, _LE_X24Y8)
                | DRF_DEF(_PGRAPH, _CTX_SWITCH2, _NOTIFY_INSTANCE, _INVALID);
            break;
        case NV04_CONTEXT_COLOR_KEY:
            ctx2 = DRF_DEF(_PGRAPH, _CTX_SWITCH2, _MONO_FORMAT, _INVALID)
                | DRF_DEF(_PGRAPH, _CTX_SWITCH2, _COLOR_FORMAT, _LE_A16R5G6B5)
                | DRF_DEF(_PGRAPH, _CTX_SWITCH2, _NOTIFY_INSTANCE, _INVALID);
            break;
        case NV04_RENDER_SOLID_LIN:
        case NV04_RENDER_SOLID_TRIANGLE:
            ctx2 = DRF_DEF(_PGRAPH, _CTX_SWITCH2, _MONO_FORMAT, _INVALID)
                | DRF_DEF(_PGRAPH, _CTX_SWITCH2, _COLOR_FORMAT, _LE_X16R5G6B5)
                | DRF_DEF(_PGRAPH, _CTX_SWITCH2, _NOTIFY_INSTANCE, _INVALID);
            break;
        case NV04_INDEXED_IMAGE_FROM_CPU:
        case NV04_IMAGE_FROM_CPU:
        case NV04_STRETCHED_IMAGE_FROM_CPU:
        case NV10_IMAGE_FROM_CPU:
            ctx2 = DRF_DEF(_PGRAPH, _CTX_SWITCH2, _MONO_FORMAT, _INVALID)
                | DRF_DEF(_PGRAPH, _CTX_SWITCH2, _COLOR_FORMAT, _LE_R5G6B5)
                | DRF_DEF(_PGRAPH, _CTX_SWITCH2, _NOTIFY_INSTANCE, _INVALID);
            break;
        case NV05_SCALED_IMAGE_FROM_MEMORY:
            ctx2 = DRF_DEF(_PGRAPH, _CTX_SWITCH2, _MONO_FORMAT, _INVALID)
                | DRF_DEF(_PGRAPH, _CTX_SWITCH2, _COLOR_FORMAT, _LE_A1R5G5B5)
                | DRF_DEF(_PGRAPH, _CTX_SWITCH2, _NOTIFY_INSTANCE, _INVALID);
            break;
        case NV05_INDEXED_IMAGE_FROM_CPU:
        case NV05_IMAGE_FROM_CPU:
        case NV05_STRETCHED_IMAGE_FROM_CPU:
            ctx2 = DRF_DEF(_PGRAPH, _CTX_SWITCH2, _MONO_FORMAT, _INVALID)
                | DRF_DEF(_PGRAPH, _CTX_SWITCH2, _COLOR_FORMAT, _LE_R5G6B5)
                | DRF_DEF(_PGRAPH, _CTX_SWITCH2, _NOTIFY_INSTANCE, _INVALID);
            break;
        case NV11_CELSIUS_PRIMITIVE:
            //
            // The above DRF_NUM macro on GRCLASS has already masked this class
            // number to an 8bit value, we just need to set the PERFORMANCE bit.
            //
            ctx1 |= DRF_DEF(_PGRAPH, _CTX_SWITCH1, _CLASS_TYPE, _PERFORMANCE);
        case NV10_CELSIUS_PRIMITIVE:
        case NV15_CELSIUS_PRIMITIVE:
        case NV20_KELVIN_PRIMITIVE:
            ctx2 = DRF_DEF(_PGRAPH, _CTX_SWITCH2, _MONO_FORMAT, _INVALID)
                | DRF_DEF(_PGRAPH, _CTX_SWITCH2, _COLOR_FORMAT, _LE_R5G6B5)
                | DRF_DEF(_PGRAPH, _CTX_SWITCH2, _NOTIFY_INSTANCE, _INVALID);
            break;
        case NV10_TEXTURE_FROM_CPU:
            // TEXTURE_FROM_CPU is similar to the IMAGE_FROM_CPU classes, but with
            // only a subset of the methods, so we'll need to make sure things are
            // initialized in a way that makes sense for this class.
            ctx1 |= DRF_DEF(_PGRAPH, _CTX_SWITCH1, _PATCH_CONFIG, _SRCCOPY)
                | DRF_DEF(_PGRAPH, _CTX_SWITCH1, _DITHER_MODE, _TRUNCATE);    
            ctx2 = DRF_DEF(_PGRAPH, _CTX_SWITCH2, _MONO_FORMAT, _INVALID)
                | DRF_DEF(_PGRAPH, _CTX_SWITCH2, _COLOR_FORMAT, _LE_R5G6B5)
                | DRF_DEF(_PGRAPH, _CTX_SWITCH2, _NOTIFY_INSTANCE, _INVALID);

            break;
        default:
            // assume defaults are cool
            break;
    }


    //
    // Write out the values.
    //
    DBG_PRINT_STRING_VALUE(DEBUGLEVEL_TRACEINFO, "NVRM: instance data for classNum ", classNum);
    DBG_PRINT_STRING_VALUE(DEBUGLEVEL_TRACEINFO, "      instance offset ", instance);
    DBG_PRINT_STRING_VALUE(DEBUGLEVEL_TRACEINFO, "      ctx1 ", ctx1);
    DBG_PRINT_STRING_VALUE(DEBUGLEVEL_TRACEINFO, "      ctx2 ", ctx2);
    DBG_PRINT_STRING_VALUE(DEBUGLEVEL_TRACEINFO, "      ctx3 ", ctx3);

    INST_WR32(instance, SF_OFFSET(NV_PRAMIN_CONTEXT_0), ctx1);
    INST_WR32(instance, SF_OFFSET(NV_PRAMIN_CONTEXT_1), ctx2);
    INST_WR32(instance, SF_OFFSET(NV_PRAMIN_CONTEXT_2), ctx3);
    //
    // Be sure to clear this dword clear to keep the graphics method
    // trapped disabled.
    //
    INST_WR32(instance, SF_OFFSET(NV_PRAMIN_CONTEXT_3), 0);

    return (RM_OK);
}

#if 0
//
// Given a pipe address and ChID return the corresponding pipe context save
// area in the channel context in instance memory.
//
static U032 *
grInitPipeContextAddr(
    PGRAPHICSCHANNEL_NV20 pGrChan,
    U032 base
)
{
    U032 index;

    if (base >= XL_XFREG_BASE && base < (XL_XFREG_BASE + (XL_XFREG_COUNT*4)))
    {
        index = (base - XL_XFREG_BASE) / sizeof (U032);
        return &pGrChan->grCtxPipe.XlXfReg[index];
    }
    if (base >= XL_XFCTX_BASE && base < (XL_XFCTX_BASE + (XL_XFCTX_COUNT*4)))
    {
        index = (base - XL_XFCTX_BASE) / sizeof (U032);
        return &pGrChan->grCtxPipe.XlXfCtx[index];
    }
    if (base >= XL_LTCTX_BASE && base < (XL_LTCTX_BASE + (XL_LTCTX_COUNT*4)))
    {
        index = (base - XL_LTCTX_BASE) / sizeof (U032);
        return &pGrChan->grCtxPipe.XlLtCtx[index];
    }
    if (base >= XL_LTC0_BASE && base < (XL_LTC0_BASE + (XL_LTC0_COUNT*4)))
    {
        index = (base - XL_LTC0_BASE) / sizeof (U032);
        return &pGrChan->grCtxPipe.XlLtc[index];
    }
    if (base >= XL_LTC1_BASE && base < (XL_LTC1_BASE + (XL_LTC1_COUNT*4)))
    {
        index = (base - XL_LTC1_BASE) / sizeof (U032);
        return &pGrChan->grCtxPipe.XlLtc[index + XL_LTC0_COUNT];
    }
    if (base >= XL_LTC2_BASE && base < (XL_LTC2_BASE + (XL_LTC2_COUNT*4)))
    {
        index = (base - XL_LTC2_BASE) / sizeof (U032);
        return &pGrChan->grCtxPipe.XlLtc[index + XL_LTC0_COUNT + XL_LTC1_COUNT];
    }
    if (base >= XL_LTC3_BASE && base < (XL_LTC3_BASE + (XL_LTC3_COUNT*4)))
    {
        index = (base - XL_LTC3_BASE) / sizeof (U032);
        return &pGrChan->grCtxPipe.XlLtc[index + XL_LTC0_COUNT + XL_LTC1_COUNT + XL_LTC2_COUNT];
    }

    return NULL;        // error
}

#define grInitPipeContextData(data)     *pipectx++ = data;
#endif

//
// Initialize 3d state in the specified channel.
// Note that both Celsius/Kelvin classes are initialized in the same
// manner.
//
// If we transition to supporting multiple 3d objects per channel,
// then this will need to be reworked.  We'll have to allocate the
// 3d context buffers with the 3d object and not with the channel.
//
// XXXscottl - Should we take steps to ensure we don't context switch
//             to this channel while we're in here?
//             Also, what if the specified channel is the current chid?
//
// See /hw/nv20/diag/common/commonIniLib.c for more info.
//
static RM_STATUS
_nvHalGrInit3d_NV20(
    PHALHWINFO  pHalHwInfo,
    U032        ChID
)
{
    PGRHALINFO_NV20 pGrHalPvtInfo = (PGRHALINFO_NV20)pHalHwInfo->pGrHalPvtInfo;
    U032 grCtxBuffer;
    U032 offset;
    U032 ctxUser;
    U032 cheopsCtxOffset, zoserCtxOffset;
    U032 zoserC0Offset, zoserC1Offset;
    U032 i, dmaPush;

    grCtxBuffer = pGrHalPvtInfo->CtxTable[ChID];

    DBG_PRINT_STRING_VALUE(DEBUGLEVEL_ERRORS, "NVRM: initializing 3d state: chid ", ChID);
    DBG_PRINT_STRING_VALUE(DEBUGLEVEL_ERRORS, "      buffer offset ", grCtxBuffer);
    DBG_PRINT_STRING_VALUE(DEBUGLEVEL_ERRORS, "      buffer size ", sizeof (GRAPHICSCHANNEL_NV20));
   
    //
    // If this is the current channel, then we need to flush the
    // current context out to instance memory where the following
    // initialization will occur.
    //
    if (pGrHalPvtInfo->currentChID == ChID)
    {
        DBG_PRINT_STRING_VALUE(DEBUGLEVEL_ERRORS, "NVRM: unload current chid ", ChID);

        // Empty FIFO and runout.
        while ((REG_RD_DRF(_PFIFO, _CACHE1_STATUS, _LOW_MARK) != NV_PFIFO_CACHE1_STATUS_LOW_MARK_EMPTY) ||
               (REG_RD_DRF(_PFIFO, _RUNOUT_STATUS, _LOW_MARK) != NV_PFIFO_RUNOUT_STATUS_LOW_MARK_EMPTY) ||
               (REG_RD_DRF(_PFIFO, _CACHE1_DMA_PUSH, _STATE) == NV_PFIFO_CACHE1_DMA_PUSH_STATE_BUSY))
        {
            // Make sure we process any fifo interrupts
            HALRMSERVICEINTR(pHalHwInfo, FIFO_ENGINE_TAG);

            // Check if GE needs servicing.
            if (REG_RD32(NV_PGRAPH_INTR))
                HALRMSERVICEINTR(pHalHwInfo, GR_ENGINE_TAG);

            // Check if vblank needs servicing.
            if (REG_RD32(NV_PMC_INTR_0) & DRF_DEF(_PMC, _INTR_0, _PCRTC, _PENDING))
                HALRMSERVICEINTR(pHalHwInfo, DAC_ENGINE_TAG);
        }

        // Disable the dma pusher
        dmaPush = REG_RD32(NV_PFIFO_CACHE1_DMA_PUSH);
        REG_WR_DRF_DEF(_PFIFO, _CACHE1_DMA_PUSH, _ACCESS, _DISABLED);

        // Wait until the DMA pusher is idle
        while (REG_RD_DRF(_PFIFO, _CACHE1_DMA_PUSH, _STATE) == NV_PFIFO_CACHE1_DMA_PUSH_STATE_BUSY)
            ;
    
        // Now, wait until graphics is idle
        HAL_GR_IDLE(pHalHwInfo);

        (void) nvHalGrUnloadChannelContext_NV20(pHalHwInfo, ChID);
    }

    //
    // Initialize 3d channel state.
    // Start by setting 3D present bit in CTX_USER
    // (offset 0 in ctx buffer).
    //
    ctxUser = INST_RD32(grCtxBuffer, 0);
    ctxUser |= DRF_DEF(_PGRAPH, _CTX_USER, _CHANNEL_3D, _TRUE);
    INST_WR32(grCtxBuffer, 0, ctxUser);
    
    // Offset starts after state common to 2d and 3d.
    offset = sizeof (GRCTXCMN_NV20)/4;

    INST_WR32(grCtxBuffer, offset++<<2, 0xffff0000);   //Antialiasing
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //Blend
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //BlendColor
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //BorderColor0
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //BorderColor1
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //BorderColor2
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //BorderColor3
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //BumpMat00_1
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //BumpMat00_2
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //BumpMat00_3
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //BumpMat01_1
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //BumpMat01_2
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //BumpMat01_3
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //BumpMat10_1
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //BumpMat10_2
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //BumpMat10_3
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //BumpMat11_1
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //BumpMat11_2
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //BumpMat11_3
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //BumpOffset1
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //BumpOffset2
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //BumpOffset3
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //BumpScale1
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //BumpScale2
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //BumpScale3
    INST_WR32(grCtxBuffer, offset++<<2, 0x0fff0000);   //ClearRectX
    INST_WR32(grCtxBuffer, offset++<<2, 0x0fff0000);   //ClearRectY
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //ColorClearValue
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //ColorKeyColor0
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //ColorKeyColor1
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //ColorKeyColor2
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //ColorKeyColor3
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //CombineFactor0_0
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //CombineFactor0_1
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //CombineFactor0_2
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //CombineFactor0_3
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //CombineFactor0_4
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //CombineFactor0_5
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //CombineFactor0_6
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //CombineFactor0_7
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //CombineFactor1_0
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //CombineFactor1_1
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //CombineFactor1_2
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //CombineFactor1_3
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //CombineFactor1_4
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //CombineFactor1_5
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //CombineFactor1_6
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //CombineFactor1_7
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //CombineAlphaI0
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //CombineAlphaI1
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //CombineAlphaI2
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //CombineAlphaI3
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //CombineAlphaI4
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //CombineAlphaI5
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //CombineAlphaI6
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //CombineAlphaI7
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //CombineAlphaO0
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //CombineAlphaO1
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //CombineAlphaO2
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //CombineAlphaO3
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //CombineAlphaO4
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //CombineAlphaO5
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //CombineAlphaO6
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //CombineAlphaO7
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //CombineColorI0
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //CombineColorI1
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //CombineColorI2
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //CombineColorI3
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //CombineColorI4
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //CombineColorI5
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //CombineColorI6
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //CombineColorI7
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //CombineColorO0
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //CombineColorO1
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //CombineColorO2
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //CombineColorO3
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //CombineColorO4
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //CombineColorO5
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //CombineColorO6
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //CombineColorO7
    INST_WR32(grCtxBuffer, offset++<<2, 0x101);        //CombineCtl
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //CombineSpecFog0
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //CombineSpecFog1
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //Control0
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //Control1
    INST_WR32(grCtxBuffer, offset++<<2, 0x111);        //Control2
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //Control3
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //FogColor
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //FogParam0
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //FogParam1
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //PointSize
    INST_WR32(grCtxBuffer, offset++<<2, 0x44400000);   //SetupRaster
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //ShaderClipMode
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //ShaderCtl
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //ShaderProg
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //SemaphoreOffset
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //ShadowCtl
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //ShadowZslopeThreshold
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //SpecFogFactor0
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //SpecFogFactor1
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //SurfaceClipX
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //SurfaceClipY
    INST_WR32(grCtxBuffer, offset++<<2, 0x30303);      //TexAddress0
    INST_WR32(grCtxBuffer, offset++<<2, 0x30303);      //TexAddress1
    INST_WR32(grCtxBuffer, offset++<<2, 0x30303);      //TexAddress2
    INST_WR32(grCtxBuffer, offset++<<2, 0x30303);      //TexAddress3
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //TexControl0_0
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //TexControl0_1
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //TexControl0_2
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //TexControl0_3
    INST_WR32(grCtxBuffer, offset++<<2, 0x80000);      //TexControl1_0
    INST_WR32(grCtxBuffer, offset++<<2, 0x80000);      //TexControl1_1
    INST_WR32(grCtxBuffer, offset++<<2, 0x80000);      //TexControl1_2
    INST_WR32(grCtxBuffer, offset++<<2, 0x80000);      //TexControl1_3
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //TexControl2_0
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //TexControl2_1
    INST_WR32(grCtxBuffer, offset++<<2, 0x01012000);   //TexFilter0
    INST_WR32(grCtxBuffer, offset++<<2, 0x01012000);   //TexFilter1
    INST_WR32(grCtxBuffer, offset++<<2, 0x01012000);   //TexFilter2
    INST_WR32(grCtxBuffer, offset++<<2, 0x01012000);   //TexFilter3
    INST_WR32(grCtxBuffer, offset++<<2, 0x105b8);      //TexFormat0
    INST_WR32(grCtxBuffer, offset++<<2, 0x105b8);      //TexFormat1
    INST_WR32(grCtxBuffer, offset++<<2, 0x105b8);      //TexFormat2
    INST_WR32(grCtxBuffer, offset++<<2, 0x105b8);      //TexFormat3
    INST_WR32(grCtxBuffer, offset++<<2, 0x00080008);   //TexImageRect0
    INST_WR32(grCtxBuffer, offset++<<2, 0x00080008);   //TexImageRect1
    INST_WR32(grCtxBuffer, offset++<<2, 0x00080008);   //TexImageRect2
    INST_WR32(grCtxBuffer, offset++<<2, 0x00080008);   //TexImageRect3

    INST_WR32(grCtxBuffer, offset++<<2, 0);            //TexOffset0
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //TexOffset1
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //TexOffset2
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //TexOffset3
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //TexPalette0
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //TexPalette1
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //TexPalette2
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //TexPalette3

    for (i = 0; i < 8; i++)
        INST_WR32(grCtxBuffer, offset++<<2, 0x07ff0000);    //WindowClipX

    for (i = 0; i < 8; i++)
        INST_WR32(grCtxBuffer, offset++<<2, 0x07ff0000);    //WindowClipY

    INST_WR32(grCtxBuffer, offset++<<2, 0);            //ZCompressOcclude
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //ZStencilClearValue
    INST_WR32(grCtxBuffer, offset++<<2, 0x4b7fffff);   //ZClipMax
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //ZClipMin
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //ContextDmaA
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //ContextDmaB
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //ContextDmaVtxA
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //ContextDmaVtxB
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //ZOffsetBias
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //ZOffsetFactor
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //Eyevec0
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //Eyevec1
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //Eyevec2
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //Shadow
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //FdData
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //FdSwatch
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //FdExtras
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //Emission0
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //Emission1
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //Emission2
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //SceneAmb0
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //SceneAmb1
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //SceneAmb2
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //ContextDmaGetState
    INST_WR32(grCtxBuffer, offset++<<2, 0x1);          //BeginPatch0
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //BeginPatch1
    INST_WR32(grCtxBuffer, offset++<<2, 0x4000);       //BeginPatch2
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //BeginPatch3
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //BeginCurve
    INST_WR32(grCtxBuffer, offset++<<2, 0x1);          //BeginTrans0
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //BeginTrans1
    INST_WR32(grCtxBuffer, offset++<<2, 0x00040000);   //Csv0_D
    INST_WR32(grCtxBuffer, offset++<<2, 0x00010000);   //Csv0_C
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //Csv1_B
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //Csv1_A
    INST_WR32(grCtxBuffer, offset++<<2, 0);            //CheopsOffset

    DBG_PRINT_STRING_VALUE(DEBUGLEVEL_ERRORS, "      pipe offset ", offset);

    for (i = 0; i < IDX_FMT_COUNT; i++)
        INST_WR32(grCtxBuffer, offset++<<2, 0);         //IDX_FMT
    for (i = 0; i < CAS0_COUNT; i++)
        INST_WR32(grCtxBuffer, offset++<<2, 0);         //CAS0
    for (i = 0; i < CAS1_COUNT; i++)
        INST_WR32(grCtxBuffer, offset++<<2, 0);         //CAS1
    for (i = 0; i < CAS2_COUNT; i++)
        INST_WR32(grCtxBuffer, offset++<<2, 0);         //CAS2
    for (i = 0; i < ASSM_STATE_COUNT; i++)
        INST_WR32(grCtxBuffer, offset++<<2, 0);         //ASSM_STATE
    for (i = 0; i < IDX_CACHE0_COUNT; i++)
        INST_WR32(grCtxBuffer, offset++<<2, 0);         //IDX_CACHE0
    for (i = 0; i < IDX_CACHE1_COUNT; i++)
        INST_WR32(grCtxBuffer, offset++<<2, 0);         //IDX_CACHE1
    for (i = 0; i < IDX_CACHE2_COUNT; i++)
        INST_WR32(grCtxBuffer, offset++<<2, 0);         //IDX_CACHE2
    for (i = 0; i < IDX_CACHE3_COUNT; i++)
        INST_WR32(grCtxBuffer, offset++<<2, 0);         //IDX_CACHE3
    for (i = 0; i < VTX_FILE0_COUNT; i++)
        INST_WR32(grCtxBuffer, offset++<<2, 0);         //VTX_FILE0
    for (i = 0; i < VTX_FILE1_COUNT; i++)
        INST_WR32(grCtxBuffer, offset++<<2, 0);         //VTX_FILE1
    for (i = 0; i < XL_P_COUNT; i+=4)
    {
        INST_WR32(grCtxBuffer, offset++<<2, 0x10700ff9); //XL_P
        INST_WR32(grCtxBuffer, offset++<<2, 0x0436086c);
        INST_WR32(grCtxBuffer, offset++<<2, 0x000c001b);
        INST_WR32(grCtxBuffer, offset++<<2, 0x00000000);
    }
    cheopsCtxOffset = offset;
    for (i = 0; i < XL_XFCTX_COUNT; i++)
        INST_WR32(grCtxBuffer, offset++<<2, 0);         //XL_XFCTX
    zoserCtxOffset = offset;
    for (i = 0; i < XL_LTCTX_COUNT; i++)
        INST_WR32(grCtxBuffer, offset++<<2, 0);         //XL_LTCTX
    zoserC0Offset = offset;
    for (i = 0; i < XL_LTC0_COUNT; i++)
        INST_WR32(grCtxBuffer, offset++<<2, 0);         //XL_LTC0
    zoserC1Offset = offset;
    for (i = 0; i < XL_LTC1_COUNT; i++)
        INST_WR32(grCtxBuffer, offset++<<2, 0);         //XL_LTC1
    for (i = 0; i < XL_LTC2_COUNT; i++)
        INST_WR32(grCtxBuffer, offset++<<2, 0);         //XL_LTC2
    for (i = 0; i < XL_LTC3_COUNT; i++)
        INST_WR32(grCtxBuffer, offset++<<2, 0);         //XL_LTC3
    for (i = 0; i < XL_VAB_COUNT; i++)
        INST_WR32(grCtxBuffer, offset++<<2, 0);         //XL_VAB
    for (i = 0; i < CRSTR_STIPP_COUNT; i++)
        INST_WR32(grCtxBuffer, offset++<<2, 0);         //CRSTR_STIPP
    for (i = 0; i < FD_CTRL_COUNT; i++)
        INST_WR32(grCtxBuffer, offset++<<2, 0);         //FD_CTRL
    for (i = 0; i < ROP_REGS_COUNT; i++)
        INST_WR32(grCtxBuffer, offset++<<2, 0);         //ROP_REGS

    DBG_PRINT_STRING_VALUE(DEBUGLEVEL_ERRORS, "      end pipe offset ", offset);

    // CHEOP_CTX, eye pos
    offset = cheopsCtxOffset + (NV_IGRAPH_XF_XFCTX_EYEP<<2);
    INST_WR32(grCtxBuffer, offset++<<2, 0x3f800000);
    INST_WR32(grCtxBuffer, offset++<<2, 0x00000000);
    INST_WR32(grCtxBuffer, offset++<<2, 0x00000000);
    INST_WR32(grCtxBuffer, offset++<<2, 0x00000000);

    // CHEOP_CTX_CONST0
    offset = cheopsCtxOffset + (NV_IGRAPH_XF_XFCTX_CONS0<<2);
    INST_WR32(grCtxBuffer, offset++<<2, 0x40000000);
    INST_WR32(grCtxBuffer, offset++<<2, 0x3f800000);
    INST_WR32(grCtxBuffer, offset++<<2, 0x3f000000);
    INST_WR32(grCtxBuffer, offset++<<2, 0x00000000);

    // CHEOP_CTX_CONST1
    offset = cheopsCtxOffset + (NV_IGRAPH_XF_XFCTX_CONS1<<2);
    INST_WR32(grCtxBuffer, offset++<<2, 0x40000000);
    INST_WR32(grCtxBuffer, offset++<<2, 0x3f800000);
    INST_WR32(grCtxBuffer, offset++<<2, 0x00000000);
    INST_WR32(grCtxBuffer, offset++<<2, 0xbf800000);

    // CHEOP_CTX_CONST2
    offset = cheopsCtxOffset + (NV_IGRAPH_XF_XFCTX_CONS2<<2);
    INST_WR32(grCtxBuffer, offset++<<2, 0x00000000);
    INST_WR32(grCtxBuffer, offset++<<2, 0xbf800000);
    INST_WR32(grCtxBuffer, offset++<<2, 0x00000000);
    INST_WR32(grCtxBuffer, offset++<<2, 0x00000000);

    // CHEOP_CTX, fog plane
    offset = cheopsCtxOffset + (NV_IGRAPH_XF_XFCTX_FOG<<2);
    INST_WR32(grCtxBuffer, offset++<<2, 0x00000000);
    INST_WR32(grCtxBuffer, offset++<<2, 0x3f800000);
    INST_WR32(grCtxBuffer, offset++<<2, 0x00000000);
    INST_WR32(grCtxBuffer, offset++<<2, 0x00000000);

    // CHEOP_CTX_CONST3
    offset = cheopsCtxOffset + (NV_IGRAPH_XF_XFCTX_CONS3<<2);
    INST_WR32(grCtxBuffer, offset++<<2, 0x00000000);
    INST_WR32(grCtxBuffer, offset++<<2, 0x00000000);
    INST_WR32(grCtxBuffer, offset++<<2, 0x00000000);
    INST_WR32(grCtxBuffer, offset++<<2, 0x00000000);

    // ZOSER_CTX_ZERO
    offset = zoserCtxOffset + (NV_IGRAPH_XF_LTCTX_ZERO<<2);
    INST_WR32(grCtxBuffer, offset++<<2, 0x00000000);
    INST_WR32(grCtxBuffer, offset++<<2, 0x00000000);
    INST_WR32(grCtxBuffer, offset++<<2, 0x00000000);
    INST_WR32(grCtxBuffer, offset++<<2, 0x00000000);

    // ZOSER_EYE_DIR (22bit words) -- see Simon Moy about this
    offset = zoserCtxOffset + (NV_IGRAPH_XF_LTCTX_EYED<<2);
    INST_WR32(grCtxBuffer, offset++<<2, 0x00000000);
    INST_WR32(grCtxBuffer, offset++<<2, 0x00000000);
    INST_WR32(grCtxBuffer, offset++<<2, 0x3f800000>>10);
    INST_WR32(grCtxBuffer, offset++<<2, 0x00000000);

    // ZOSER_FRONT_AMBIENT1
    offset = zoserCtxOffset + (NV_IGRAPH_XF_LTCTX_FR_AMB<<2);
    INST_WR32(grCtxBuffer, offset++<<2, 0x00000000);
    INST_WR32(grCtxBuffer, offset++<<2, 0x00000000);
    INST_WR32(grCtxBuffer, offset++<<2, 0x00000000);
    INST_WR32(grCtxBuffer, offset++<<2, 0x00000000);

    // ZOSER_FRONT_AMBIENT2
    offset = zoserCtxOffset + (NV_IGRAPH_XF_LTCTX_CM_COL<<2);
    INST_WR32(grCtxBuffer, offset++<<2, 0x00000000);
    INST_WR32(grCtxBuffer, offset++<<2, 0x00000000);
    INST_WR32(grCtxBuffer, offset++<<2, 0x00000000);
    INST_WR32(grCtxBuffer, offset++<<2, 0x00000000);

    // ZOSER_EYE_DIR (22bit words) -- see Simon Moy about this
    offset = zoserCtxOffset + (NV_IGRAPH_XF_LTCTX_FOGLIN<<2);
    INST_WR32(grCtxBuffer, offset++<<2, 0x00000000);
    INST_WR32(grCtxBuffer, offset++<<2, 0x3f800000>>20);
    INST_WR32(grCtxBuffer, offset++<<2, 0x00000000);
    INST_WR32(grCtxBuffer, offset++<<2, 0x00000000);

    // ZOSER_C0 (22bit word) -- see Simon Moy about this
    offset = zoserC0Offset + (NV_IGRAPH_XF_LTC0_MONE);
    INST_WR32(grCtxBuffer, offset<<2, 0xbf800000>>10);

    // LIGHT0 range (22bit word) -- see Simon Moy about this
    offset = zoserC1Offset + (NV_IGRAPH_XF_LTC1_r0);
    INST_WR32(grCtxBuffer, offset<<2, 0x7149f2ca>>10);

    // LIGHT1 range (22bit word) -- see Simon Moy about this
    offset = zoserC1Offset + (NV_IGRAPH_XF_LTC1_r1);
    INST_WR32(grCtxBuffer, offset<<2, 0x7149f2ca>>10);

    // LIGHT2 range (22bit word) -- see Simon Moy about this
    offset = zoserC1Offset + (NV_IGRAPH_XF_LTC1_r2);
    INST_WR32(grCtxBuffer, offset<<2, 0x7149f2ca>>10);

    // LIGHT3 range (22bit word) -- see Simon Moy about this
    offset = zoserC1Offset + (NV_IGRAPH_XF_LTC1_r3);
    INST_WR32(grCtxBuffer, offset<<2, 0x7149f2ca>>10);

    // LIGHT4 range (22bit word) -- see Simon Moy about this
    offset = zoserC1Offset + (NV_IGRAPH_XF_LTC1_r4);
    INST_WR32(grCtxBuffer, offset<<2, 0x7149f2ca>>10);

    // LIGHT5 range (22bit word) -- see Simon Moy about this
    offset = zoserC1Offset + (NV_IGRAPH_XF_LTC1_r5);
    INST_WR32(grCtxBuffer, offset<<2, 0x7149f2ca>>10);

    // LIGHT6 range (22bit word) -- see Simon Moy about this
    offset = zoserC1Offset + (NV_IGRAPH_XF_LTC1_r6);
    INST_WR32(grCtxBuffer, offset<<2, 0x7149f2ca>>10);

    // LIGHT7 range (22bit word) -- see Simon Moy about this
    offset = zoserC1Offset + (NV_IGRAPH_XF_LTC1_r7);
    INST_WR32(grCtxBuffer, offset<<2, 0x7149f2ca>>10);

    DBG_PRINT_STRING_VALUE(DEBUGLEVEL_ERRORS, "      last offset ", offset);

#ifdef NOTYET
    //
    // Enable the texture cache performance counters.
    // Should this be on by default?
    //
    FLD_WR_DRF_DEF(_PGRAPH, _DEBUG_1, _CACHE_COUNTERS, _ENABLED);
#endif

    if (pGrHalPvtInfo->currentChID == ChID)
    {
        DBG_PRINT_STRING_VALUE(DEBUGLEVEL_ERRORS, "NVRM: reload current chid ", ChID);

        (void) nvHalGrLoadChannelContext_NV20(pHalHwInfo, ChID);

        // Restore the dma pusher state
        REG_WR32(NV_PFIFO_CACHE1_DMA_PUSH, dmaPush);
    }

    return (RM_OK);
}


//
// Destroy 3d state in specified channel.
//
static RM_STATUS
_nvHalGrDestroy3d_NV20
(
    PHALHWINFO  pHalHwInfo,
    U032        ChID
)
{
    PGRHALINFO_NV20 pGrHalPvtInfo = (PGRHALINFO_NV20)pHalHwInfo->pGrHalPvtInfo;
    U032 grCtxBuffer;
    U032 ctxUser, fifo;

    grCtxBuffer = pGrHalPvtInfo->CtxTable[ChID];

    DBG_PRINT_STRING_VALUE(DEBUGLEVEL_ERRORS, "NVRM: initializing 3d state: chid ", ChID);
    DBG_PRINT_STRING_VALUE(DEBUGLEVEL_ERRORS, "      buffer offset ", grCtxBuffer);

    //
    // Clear 3d present bit in channel.
    //
    if (ChID == REG_RD_DRF(_PGRAPH, _CTX_USER, _CHID))
    {
        //
        // First disable the graphics fifo so we can get to the context rams
        //
        fifo = REG_RD32(NV_PGRAPH_FIFO);
        REG_WR_DRF_DEF(_PGRAPH, _FIFO, _ACCESS, _DISABLED);

        FLD_WR_DRF_DEF(_PGRAPH, _CTX_USER, _CHANNEL_3D, _FALSE);

        //
        // Restore the fifo state
        //
        REG_WR32(NV_PGRAPH_FIFO, fifo);
    }
    else
    {
        ctxUser = INST_RD32(grCtxBuffer, 0);
        ctxUser &= ~DRF_DEF(_PGRAPH, _CTX_USER, _CHANNEL_3D, _TRUE);
        INST_WR32(grCtxBuffer, 0, ctxUser);    
    }

    return (RM_OK);
}
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Microsoft Xbox (1.00.4400) [April 2002] [src]\private\ntos\video\nvx\drivers\resman\kernel\gr\nv4\grnv04.c ===
/***************************************************************************\
|*                                                                           *|
|*        Copyright (c) 1993-2000 NVIDIA, Corp.  All rights reserved.        *|
|*                                                                           *|
|*     NOTICE TO USER:   The source code  is copyrighted under  U.S. and     *|
|*     international laws.   NVIDIA, Corp. of Sunnyvale, California owns     *|
|*     the copyright  and as design patents  pending  on the design  and     *|
|*     interface  of the NV chips.   Users and possessors of this source     *|
|*     code are hereby granted  a nonexclusive,  royalty-free  copyright     *|
|*     and  design  patent license  to use this code  in individual  and     *|
|*     commercial software.                                                  *|
|*                                                                           *|
|*     Any use of this source code must include,  in the user documenta-     *|
|*     tion and  internal comments to the code,  notices to the end user     *|
|*     as follows:                                                           *|
|*                                                                           *|
|*     Copyright (c) 1993-2000  NVIDIA, Corp.    NVIDIA  design  patents     *|
|*     pending in the U.S. and foreign countries.                            *|
|*                                                                           *|
|*     NVIDIA, CORP.  MAKES  NO REPRESENTATION ABOUT  THE SUITABILITY OF     *|
|*     THIS SOURCE CODE FOR ANY PURPOSE.  IT IS PROVIDED "AS IS" WITHOUT     *|
|*     EXPRESS OR IMPLIED WARRANTY OF ANY KIND.  NVIDIA, CORP. DISCLAIMS     *|
|*     ALL WARRANTIES  WITH REGARD  TO THIS SOURCE CODE,  INCLUDING  ALL     *|
|*     IMPLIED   WARRANTIES  OF  MERCHANTABILITY  AND   FITNESS   FOR  A     *|
|*     PARTICULAR  PURPOSE.   IN NO EVENT SHALL NVIDIA, CORP.  BE LIABLE     *|
|*     FOR ANY SPECIAL, INDIRECT, INCIDENTAL,  OR CONSEQUENTIAL DAMAGES,     *|
|*     OR ANY DAMAGES  WHATSOEVER  RESULTING  FROM LOSS OF USE,  DATA OR     *|
|*     PROFITS,  WHETHER IN AN ACTION  OF CONTRACT,  NEGLIGENCE OR OTHER     *|
|*     TORTIOUS ACTION, ARISING OUT  OF OR IN CONNECTION WITH THE USE OR     *|
|*     PERFORMANCE OF THIS SOURCE CODE.                                      *|
|*                                                                           *|
 \***************************************************************************/

/**************************** Graphics Manager *****************************\
*                                                                           *
* Module: GRNV04.C                                                          *
*   The graphics chip dependent HAL GR routines are kept here.              *
*                                                                           *
*****************************************************************************
*                                                                           *
* History:                                                                  *
*                                                                           *
\***************************************************************************/

#include <nv_ref.h>
#include <nv4_ref.h>
#include <nvrm.h>
#include <nv4_hal.h>
#include "nvhw.h"
#include "nvhalcpp.h"

// forwards
RM_STATUS nvHalGrControl_NV04(VOID *);
RM_STATUS nvHalGrAlloc_NV04(VOID *);
RM_STATUS nvHalGrFree_NV04(VOID *);
RM_STATUS nvHalGrGetExceptionData_NV04(VOID *);
RM_STATUS nvHalGrService_NV04(VOID *);
RM_STATUS nvHalGrGetNotifyData_NV04(VOID *);
RM_STATUS nvHalGrSetObjectContext_NV04(VOID *);
RM_STATUS nvHalGrLoadOverride_NV04(VOID *);

// statics
static RM_STATUS _nvHalGrInitInstance_NV04(PHALHWINFO, U032, U032);
static RM_STATUS _nvHalGrSetContextColorKeyWar_NV04(PHALHWINFO, PGREXCEPTIONDATA);

// externs
extern RM_STATUS nvHalGrClassSoftwareMethod_NV04(PHALHWINFO, PGREXCEPTIONDATA);
extern RM_STATUS nvHalGrLoadChannelContext_NV04(PHALHWINFO, U032);
extern RM_STATUS nvHalGrUnloadChannelContext_NV04(PHALHWINFO, U032);

//
// nvHalGrControl
//
RM_STATUS
nvHalGrControl_NV04(VOID *arg)
{
    PGRCONTROLARG_000 pGrControlArg = (PGRCONTROLARG_000)arg;
    PHALHWINFO pHalHwInfo;
    PGRHALINFO pGrHalInfo;
    PGRHALINFO_NV04 pGrHalPvtInfo;
    U032 i;

    //
    // Verify interface revision.
    //
    if (pGrControlArg->id != GR_CONTROL_000)
        return (RM_ERR_VERSION_MISMATCH);

    pHalHwInfo = pGrControlArg->pHalHwInfo;
    pGrHalInfo = pHalHwInfo->pGrHalInfo;
    pGrHalPvtInfo = (PGRHALINFO_NV04)pHalHwInfo->pGrHalPvtInfo;

    switch (pGrControlArg->cmd)
    {
        case GR_CONTROL_INIT:
            //
            // Some of these bits will be dynamically modified.
            //
            switch (REG_RD_DRF(_PMC, _BOOT_0, _MAJOR_REVISION))
            {
                case NV4_REV_A_00:
                    pGrHalPvtInfo->Debug0 = DRF_DEF(_PGRAPH, _DEBUG_0, _LIMIT_CHECK,     _ENABLED)
                        | DRF_DEF(_PGRAPH, _DEBUG_0, _LIMIT_INT,       _DISABLED)
                        | DRF_DEF(_PGRAPH, _DEBUG_0, _OVRFLW_INT,      _DISABLED)
                        | DRF_DEF(_PGRAPH, _DEBUG_0, _WRITE_ONLY_ROPS_2D, _ENABLED)
                        | DRF_DEF(_PGRAPH, _DEBUG_0, _WRITE_ONLY_ROPS_3D, _ENABLED)
                        | DRF_DEF(_PGRAPH, _DEBUG_0, _DRAWDIR_AUTO,    _DISABLED)
                        | DRF_DEF(_PGRAPH, _DEBUG_0, _DRAWDIR_Y,       _INCR)
                        | DRF_DEF(_PGRAPH, _DEBUG_0, _ALPHA_ABORT,     _ENABLED)
                        | DRF_DEF(_PGRAPH, _DEBUG_0, _MINUSD5,         _ENABLED)
                        | DRF_DEF(_PGRAPH, _DEBUG_0, _BLIT_DST_LIMIT,  _ENABLED);
        
                    pGrHalPvtInfo->Debug1 = DRF_DEF(_PGRAPH, _DEBUG_1, _VOLATILE_RESET,  _NOT_LAST)
                        | DRF_DEF(_PGRAPH, _DEBUG_1, _DMA_ACTIVITY,    _IGNORE) 
                        | DRF_DEF(_PGRAPH, _DEBUG_1, _PATCH_INV,       _ENABLED)
                        | DRF_DEF(_PGRAPH, _DEBUG_1, _TRI_OPTS,        _ENABLED)
                        | DRF_DEF(_PGRAPH, _DEBUG_1, _TRICLIP_OPTS,    _DISABLED)
                        | DRF_DEF(_PGRAPH, _DEBUG_1, _INSTANCE,        _ENABLED)
                        | DRF_DEF(_PGRAPH, _DEBUG_1, _CTX,             _ENABLED)
                        | DRF_DEF(_PGRAPH, _DEBUG_1, _CACHE,           _IGNORE)
                        | DRF_DEF(_PGRAPH, _DEBUG_1, _CACHE_MODE,      _ENABLED)
                        | DRF_DEF(_PGRAPH, _DEBUG_1, _ZCLAMP,          _ENABLED)
                        | DRF_DEF(_PGRAPH, _DEBUG_1, _UCLAMP,          _ENABLED)
                        | DRF_DEF(_PGRAPH, _DEBUG_1, _RCLAMP,          _ENABLED);

                    pGrHalPvtInfo->Debug2 = DRF_DEF(_PGRAPH, _DEBUG_2,  _PINGPONG,        _ENABLED)
                        | DRF_DEF(_PGRAPH, _DEBUG_2, _ZBUF_SEQ,        _AUTO)
                        | DRF_DEF(_PGRAPH, _DEBUG_2, _FAST_VERTEX_LOAD, _ENABLED)
                        | DRF_DEF(_PGRAPH, _DEBUG_2, _BILINEAR_3D,     _ENABLED)
                        | DRF_DEF(_PGRAPH, _DEBUG_2, _ANISOTROPIC_3D,  _ENABLED)
                        | DRF_DEF(_PGRAPH, _DEBUG_2, _FOG_3D,          _ENABLED)
                        | DRF_DEF(_PGRAPH, _DEBUG_2, _SPECULAR_3D,     _ENABLED)
                        | DRF_DEF(_PGRAPH, _DEBUG_2, _ALPHA_3D,        _ENABLED)
                        | DRF_DEF(_PGRAPH, _DEBUG_2, _COELESCE_D3D,    _ENABLED)
                        | DRF_DEF(_PGRAPH, _DEBUG_2, _COELESCE_2D,     _ENABLED)
                        | DRF_DEF(_PGRAPH, _DEBUG_2, _BLIT_MULTILINE,  _ENABLED)
                        | DRF_DEF(_PGRAPH, _DEBUG_2, _VOLATILE_RESET,  _ENABLED)
                        | DRF_DEF(_PGRAPH, _DEBUG_2, _SPARE1,          _ENABLED)
                        | DRF_DEF(_PGRAPH, _DEBUG_2, _SPARE2,          _ENABLED)
                        | DRF_DEF(_PGRAPH, _DEBUG_2, _SPARE3,          _ENABLED);

                    pGrHalPvtInfo->Debug3 = DRF_DEF(_PGRAPH, _DEBUG_3, _CULLING,         _ENABLED)
                        | DRF_DEF(_PGRAPH, _DEBUG_3, _CULLING_TYPE,    _DX3)
                        | DRF_DEF(_PGRAPH, _DEBUG_3, _FAST_DATA_STRTCH, _ENABLED)
                        | DRF_DEF(_PGRAPH, _DEBUG_3, _FAST_DATA_D3D,   _ENABLED)
                        | DRF_DEF(_PGRAPH, _DEBUG_3, _ZFLUSH,          _IGNORE)
                        | DRF_DEF(_PGRAPH, _DEBUG_3, _AUTOZFLUSH_PTZ,  _ENABLED)
                        | DRF_DEF(_PGRAPH, _DEBUG_3, _AUTOZFLUSH_D3D,  _ENABLED)
                        | DRF_DEF(_PGRAPH, _DEBUG_3, _POSTDITHER_2D,   _ENABLED)
                        | DRF_DEF(_PGRAPH, _DEBUG_3, _POSTDITHER_3D,   _ENABLED)
                        | DRF_DEF(_PGRAPH, _DEBUG_3, _PREDITHER_2D,    _ENABLED)
                        | DRF_DEF(_PGRAPH, _DEBUG_3, _PREDITHER_2D,    _DISABLED)
                        | DRF_DEF(_PGRAPH, _DEBUG_3, _PREDITHER_3D,    _ENABLED)
                        | DRF_DEF(_PGRAPH, _DEBUG_3, _SLOT_CONFLICT_PTZ, _ENABLED)
                        | DRF_DEF(_PGRAPH, _DEBUG_3, _SLOT_CONFLICT_D3D, _ENABLED)
                        | DRF_DEF(_PGRAPH, _DEBUG_3, _EARLYZ_ABORT,    _ENABLED)
                        | DRF_DEF(_PGRAPH, _DEBUG_3, _FORCE_CREAD,     _DISABLED)
                        | DRF_DEF(_PGRAPH, _DEBUG_3, _FORCE_ZREAD,     _DISABLED)
                        | DRF_DEF(_PGRAPH, _DEBUG_3, _FORMAT_CHECK,    _ENABLED)
                        | DRF_DEF(_PGRAPH, _DEBUG_3, _TRIEND_FLUSH,    _DISABLED)
                        | DRF_DEF(_PGRAPH, _DEBUG_3, _DMA_CHECK,       _ENABLED)
                        | DRF_DEF(_PGRAPH, _DEBUG_3, _DATA_CHECK,      _ENABLED)
                        | DRF_DEF(_PGRAPH, _DEBUG_3, _DATA_CHECK_FAIL, _DISABLED)
                        | DRF_DEF(_PGRAPH, _DEBUG_3, _RAMREADBACK,     _DISABLED)
                        | DRF_DEF(_PGRAPH, _DEBUG_3, _STATE_CHECK,     _ENABLED);
                    break;
            }

            if (IsNV5orBetter_NV04(pHalHwInfo->pMcHalInfo)) {
                pGrHalPvtInfo->Debug1 |= DRF_DEF(_PGRAPH, _DEBUG_1, _BIDIR_DRAIN,         _DISABLED)
                    | DRF_DEF(_PGRAPH, _DEBUG_1, _EARLY_POST,          _ENABLED)
                    | DRF_DEF(_PGRAPH, _DEBUG_1, _FIXED_ADRS,          _DISABLED)
                    | DRF_DEF(_PGRAPH, _DEBUG_1, _ALT_RW_SEQ,          _DISABLED)
                    | DRF_DEF(_PGRAPH, _DEBUG_1, _DITHER_RANGE_ADJ_2D, _ENABLED)
                    | DRF_DEF(_PGRAPH, _DEBUG_1, _DITHER_RANGE_ADJ_3D, _ENABLED)
                    | DRF_DEF(_PGRAPH, _DEBUG_1, _DX6_2PIXMODE,        _ENABLED);

                /* Uncomment this after the hardware is fixed.
                   pDev->Graphics.Debug1 |= DRF_DEF(_PGRAPH, _DEBUG_1, _ALOM_BURST,          _ENABLED);
                   */

                pGrHalPvtInfo->Debug2 |= DRF_DEF(_PGRAPH, _DEBUG_2, _MCLK_RECTS,        _ENABLED);

                //
                // Disable HONOR_SRCFMT.  Note this is overloaded from PINGPONG in NV4
                //
                pGrHalPvtInfo->Debug2 &= ~DRF_DEF(_PGRAPH, _DEBUG_2, _HONOR_SRCFMT,      _ENABLED);

                pGrHalPvtInfo->Debug3 |= DRF_DEF(_PGRAPH, _DEBUG_3, _EXCLUDE_ROP_IN_IDLE, _ENABLED);

                // Enable setContext, SetOpetaion, and setClip methods in hardware.
                pGrHalPvtInfo->Debug3 |= DRF_DEF(_PGRAPH, _DEBUG_3, _PREDITHER_2D,        _ENABLED)
                    | DRF_DEF(_PGRAPH, _DEBUG_3, _CLIP_METHODS,        _ENABLED)
                    | DRF_DEF(_PGRAPH, _DEBUG_3, _CONTEXT_METHODS,     _ENABLED)
                    | DRF_DEF(_PGRAPH, _DEBUG_3, _OPERATION_METHOD,    _ENABLED)
                    | DRF_DEF(_PGRAPH, _DEBUG_3, _IGNORE_PATCHVALID,   _ENABLED);
                /* Uncomment this after the hardware is fixed.
                   // Enable fast image_from_memory.
                   pGrHalInfo->Debug3 |= DRF_DEF(_PGRAPH, _DEBUG_3, _FAST_DATA_IMAGE, _ENABLED);
                   */
            }

            //
            // We're now context switching PGRAPH_DEBUG_3, in order to support SetColorConversion
            // for NV4_INDEXED_IMAGE (NV5_INDEXED_IMAGE has a real method/context state). Load the
            // grTable version of Debug3 with what we've figured out above.
            //
            for (i = 0; i < NUM_FIFOS_NV04; i++)
            {
                pGrHalPvtInfo->grChannels[i].Debug3 = pGrHalPvtInfo->Debug3;
            }

            //
            // Set default channel to unused chid
            //
            pGrHalPvtInfo->currentChID = INVALID_CHID;
            break;
        case GR_CONTROL_LOAD:
            REG_WR_DRF_DEF(_PGRAPH, _DEBUG_1, _VOLATILE_RESET, _LAST);
            REG_WR_DRF_DEF(_PGRAPH, _DEBUG_0, _STATE, _RESET);
            FLD_WR_DRF_DEF(_PGRAPH, _DEBUG_1, _DMA_ACTIVITY, _CANCEL);

            //
            // Load debug overrides.
            //            
            REG_WR32(NV_PGRAPH_DEBUG_0, pGrHalPvtInfo->Debug0);
            REG_WR32(NV_PGRAPH_DEBUG_1, pGrHalPvtInfo->Debug1);
            REG_WR32(NV_PGRAPH_DEBUG_2, pGrHalPvtInfo->Debug2);
            REG_WR32(NV_PGRAPH_DEBUG_3, pGrHalPvtInfo->Debug3);

            REG_WR32(NV_PGRAPH_CTX_SWITCH1,  0x00000000);
            REG_WR32(NV_PGRAPH_CTX_SWITCH2,  0x00000000);
            REG_WR32(NV_PGRAPH_CTX_SWITCH3,  0x00000000);
            REG_WR32(NV_PGRAPH_CTX_SWITCH4,  0x00000000);
            REG_WR32(NV_PGRAPH_CTX_CONTROL,
                     DRF_DEF(_PGRAPH, _CTX_CONTROL, _MINIMUM_TIME, _33US)
                     | DRF_DEF(_PGRAPH, _CTX_CONTROL, _TIME,         _EXPIRED)
                     | DRF_DEF(_PGRAPH, _CTX_CONTROL, _CHID,         _INVALID)
                     | DRF_DEF(_PGRAPH, _CTX_CONTROL, _SWITCHING,    _IDLE)
                     | DRF_DEF(_PGRAPH, _CTX_CONTROL, _DEVICE,       _ENABLED));
            REG_WR_DRF_DEF(_PGRAPH, _FFINTFC_ST2, _CHID_STATUS, _VALID);

            //
            // Reload current graphics context.
            //
            (void) nvHalGrLoadChannelContext_NV04(pHalHwInfo, pGrHalPvtInfo->currentChID);
            break;
        case GR_CONTROL_UNLOAD:
            //
            // Pull out current graphics state.
            //
            (void) nvHalGrLoadChannelContext_NV04(pHalHwInfo, INVALID_CHID);

            REG_WR32(NV_PGRAPH_CTX_CONTROL,
                     DRF_DEF(_PGRAPH, _CTX_CONTROL, _MINIMUM_TIME, _33US)
                     | DRF_DEF(_PGRAPH, _CTX_CONTROL, _TIME,         _EXPIRED)
                     | DRF_DEF(_PGRAPH, _CTX_CONTROL, _CHID,         _INVALID)
                     | DRF_DEF(_PGRAPH, _CTX_CONTROL, _SWITCHING,    _IDLE)
                     | DRF_DEF(_PGRAPH, _CTX_CONTROL, _DEVICE,       _ENABLED));
            break;
        case GR_CONTROL_DESTROY:
        case GR_CONTROL_UPDATE:
            break;
        default:
            return (RM_ERR_BAD_ARGUMENT);
    }
    return (RM_OK);
}


//
// nvHalGrAlloc
//
RM_STATUS
nvHalGrAlloc_NV04(VOID *arg)
{
    PGRALLOCARG_000 pGrAllocArg = (PGRALLOCARG_000)arg;

    //
    // Verify interface revision.
    //
    if (pGrAllocArg->id != GR_ALLOC_000)
        return (RM_ERR_VERSION_MISMATCH);

    //
    // Initialize instance memory.
    //
    _nvHalGrInitInstance_NV04(pGrAllocArg->pHalHwInfo, pGrAllocArg->instance, pGrAllocArg->classNum);

    return (RM_OK);
}

//
// nvHalGrFree
//
RM_STATUS
nvHalGrFree_NV04(VOID *arg)
{
    PGRFREEARG_000 pGrFreeArg = (PGRFREEARG_000)arg;
    PHALHWINFO pHalHwInfo;
    PGRHALINFO pGrHalInfo;
    PGRHALINFO_NV04 pGrHalPvtInfo;
    PGRAPHICSCHANNEL_NV04 pGrChannel;
#ifdef NOTYET
    U032 classNum;
#endif
    U032 i;

    //
    // Verify interface revision.
    //
    if (pGrFreeArg->id != GR_FREE_000)
        return (RM_ERR_VERSION_MISMATCH);

    if (pGrFreeArg->chid > NUM_FIFOS_NV04)
        return (RM_ERR_BAD_ARGUMENT);

    pHalHwInfo = pGrFreeArg->pHalHwInfo;
    pGrHalInfo = pHalHwInfo->pGrHalInfo;
    pGrHalPvtInfo = (PGRHALINFO_NV04)pHalHwInfo->pGrHalPvtInfo;
    pGrChannel = &pGrHalPvtInfo->grChannels[pGrFreeArg->chid];

#ifdef NOTYET
    //
    // Get class out of instance memory.
    //
    classNum = DRF_VAL(_PGRAPH, _CTX_SWITCH1, _GRCLASS, INST_RD32(pGrFreeArg->instance, SF_OFFSET(NV_PRAMIN_CONTEXT_0)));
#endif

    //
    // Zero the out the object context for good measure.
    //
    for (i = 0; i < 3; i++)
    {
        INST_WR32(pGrFreeArg->instance, i, 0);
    }

    return (RM_OK);
}

//
// nvHalGrGetExceptionData
//
// Retrieve graphics engine exception data.
//
RM_STATUS
nvHalGrGetExceptionData_NV04(VOID *arg)
{
    PGRGETEXCEPTIONDATAARG_000 pGrGetExceptionDataArg = (PGRGETEXCEPTIONDATAARG_000)arg;
    PHALHWINFO pHalHwInfo;
    PGREXCEPTIONDATA pGrExceptionData;

    //
    // Verify interface revision.
    //
    if (pGrGetExceptionDataArg->id != GR_GET_EXCEPTION_DATA_000)
        return (RM_ERR_VERSION_MISMATCH);

    pHalHwInfo = pGrGetExceptionDataArg->pHalHwInfo;
    pGrExceptionData = pGrGetExceptionDataArg->pExceptionData;

    //
    // Fill in exception data.
    //
    pGrExceptionData->Offset = REG_RD32(NV_PGRAPH_TRAPPED_ADDR);
    pGrExceptionData->ChID = DRF_VAL(_PGRAPH, _TRAPPED_ADDR, _CHID, pGrExceptionData->Offset);
    pGrExceptionData->NotifyInstance = REG_RD_DRF(_PGRAPH, _CTX_SWITCH2,
                                        _NOTIFY_INSTANCE);
    pGrExceptionData->classNum = REG_RD_DRF(_PGRAPH, _CTX_SWITCH1, _GRCLASS);
    pGrExceptionData->Data = REG_RD32(NV_PGRAPH_TRAPPED_DATA);
    pGrExceptionData->Instance = REG_RD32(NV_PGRAPH_CTX_SWITCH4);
    pGrExceptionData->Offset &= (DRF_MASK(NV_PGRAPH_TRAPPED_ADDR_MTHD) << DRF_SHIFT(NV_PGRAPH_TRAPPED_ADDR_MTHD));
    pGrExceptionData->Nsource = REG_RD32(NV_PGRAPH_NSOURCE);
    pGrExceptionData->MethodStatus = RM_OK;

    return (RM_OK);
}

//
// nvHalGrService
//
// Handle selected graphics object exceptions.
//
RM_STATUS
nvHalGrService_NV04(VOID *arg)
{
    PGRSERVICEARG_000 pGrServiceArg = (PGRSERVICEARG_000)arg;
    PHALHWINFO pHalHwInfo;
    PGRHALINFO_NV04 pGrHalPvtInfo;
    PGREXCEPTIONDATA pGrExceptionData;
    U032 i;

    //
    // Verify interface revision.
    //
    if (pGrServiceArg->id != GR_SERVICE_000)
        return (RM_ERR_VERSION_MISMATCH);

    pHalHwInfo = pGrServiceArg->pHalHwInfo;
    pGrExceptionData = pGrServiceArg->pExceptionData;
    pGrHalPvtInfo = (PGRHALINFO_NV04)pHalHwInfo->pGrHalPvtInfo;

    //
    // Handle any exceptions...
    //
    if (pGrServiceArg->intr & DRF_DEF(_PGRAPH, _INTR, _CONTEXT_SWITCH, _PENDING))
    {
        //
        // Reset condition.
        //
        REG_WR_DRF_DEF(_PGRAPH, _INTR, _CONTEXT_SWITCH, _RESET);

        if (IsNV4_NV04(pHalHwInfo->pMcHalInfo))
        {
            //*****  workaround for NV4 MP DMA channel change HW bug -- jsw...
            // According to Rick I. this bug was fixed both for nv5/nv10
            PFIFOHALINFO_NV04 pFifoHalInfo;
            U032 currentCh, get, put, pushPending;
            BOOL isDma, isInUse;

            pFifoHalInfo = (PFIFOHALINFO_NV04)pHalHwInfo->pFifoHalInfo;
            // determine current channel
            currentCh = REG_RD_DRF(_PFIFO, _CACHE1_PUSH1, _CHID); 

            // analyze all DMA channels other than the current channel that are in use 
            for (i = 0; i < NUM_FIFOS_NV04; i++)
            {
                isDma = REG_RD32(NV_PFIFO_MODE) & (1 << i);
                isInUse = pFifoHalInfo->InUse & (1 << i);
                if (isInUse && isDma && i != currentCh)
                {
                    // look for a channel where (put != get) yet is not flagged as pending
                    put = REG_RD32(0x714000 + i * 32);
                    get = REG_RD32(0x714000 + i * 32 + 4);
                    pushPending = REG_RD32(NV_PFIFO_DMA);
                    if (put != get && !(pushPending & (1 << i)))
                    {
                        pushPending |= (1 << i);
                        REG_WR32(NV_PFIFO_DMA, pushPending);
                    }
                }
            }
        }
        //***** ...jsw

        //
        // Wait for idle
        //
        GR_DONE();
    
        //
        // Graphics channel switch.
        //
        DBG_PRINT_STRING(DEBUGLEVEL_TRACEINFO, "NVRM: Graphics context switch exception.\n\r");
        DBG_PRINT_STRING_VALUE(DEBUGLEVEL_TRACEINFO, "NVRM: Previous graphics channel:", pGrHalPvtInfo->currentChID);
        DBG_PRINT_STRING_VALUE(DEBUGLEVEL_TRACEINFO, "NVRM: New graphics channel:", pGrExceptionData->ChID);

        (void) nvHalGrLoadChannelContext_NV04(pHalHwInfo, pGrExceptionData->ChID);
    }

    //
    // Handle methods in software.
    //
    if (pGrServiceArg->intr & DRF_DEF(_PGRAPH, _INTR, _MISSING_HW, _PENDING))
    {
        if (nvHalGrClassSoftwareMethod_NV04(pHalHwInfo, pGrExceptionData) == RM_OK)
        {
            // Reset condition.
            REG_WR_DRF_DEF(_PGRAPH, _INTR, _MISSING_HW, _RESET);
        }   
    }

    if (pGrServiceArg->intr & DRF_DEF(_PGRAPH, _INTR, _NOTIFY, _PENDING))
    {
        if (pGrExceptionData->Nsource & DRF_DEF(_PGRAPH, _NSOURCE, _ILLEGAL_MTHD, _PENDING))
        {
            if (nvHalGrClassSoftwareMethod_NV04(pHalHwInfo, pGrExceptionData) == RM_OK)
            {
                // Reset condition.
                REG_WR_DRF_DEF(_PGRAPH, _INTR, _NOTIFY, _RESET);
            }
        }

        //
        // Handle context color key workaround if necessary.
        //
        if (pGrExceptionData->Nsource & DRF_DEF(_PGRAPH, _NSOURCE, _DATA_ERROR, _PENDING))
        {
            if (_nvHalGrSetContextColorKeyWar_NV04(pHalHwInfo, pGrExceptionData) == RM_OK)
            {
                // Reset condition.
                REG_WR_DRF_DEF(_PGRAPH, _INTR, _NOTIFY, _RESET);
            }
        }
    }

    return (RM_OK);
}

RM_STATUS
nvHalGrGetNotifyData_NV04(VOID *arg)
{
    PGRGETNOTIFYDATAARG_000 pGrGetNotifyDataArg = (PGRGETNOTIFYDATAARG_000)arg;
    PHALHWINFO pHalHwInfo;
    PGRNOTIFYDATA pGrNotifyData;

    //
    // Verify interface revision.
    //
    if (pGrGetNotifyDataArg->id != GR_GET_NOTIFY_DATA_000)
        return (RM_ERR_VERSION_MISMATCH);

    pHalHwInfo = pGrGetNotifyDataArg->pHalHwInfo;
    pGrNotifyData = pGrGetNotifyDataArg->pGrNotifyData;

    if (REG_RD32(NV_PGRAPH_NOTIFY) &
        (DRF_DEF(_PGRAPH, _NOTIFY, _REQ, _PENDING) |
         DRF_DEF(_PGRAPH, _NOTIFY, _STYLE, _WRITE_THEN_AWAKEN)))
    {
        pGrNotifyData->trigger = TRUE;
        pGrNotifyData->action =  REG_RD_DRF(_PGRAPH, _NOTIFY, _STYLE);
        // clear the notify condition
        FLD_WR_DRF_DEF(_PGRAPH, _NOTIFY, _REQ, _NOT_PENDING);
    } else {
        pGrNotifyData->trigger = FALSE;
        pGrNotifyData->action = 0;
    }

    return (RM_OK);
}

RM_STATUS
nvHalGrSetObjectContext_NV04(VOID *arg)
{
    PGRSETOBJECTCONTEXTARG_000 pGrSetObjectContextArg = (PGRSETOBJECTCONTEXTARG_000)arg;
    PHALHWINFO pHalHwInfo;
    U032 context, instance;
    U032 fifo;
    U032 i;

    //
    // Verify interface revision.
    //
    if (pGrSetObjectContextArg->id != GR_SET_OBJECT_CONTEXT_000)
        return (RM_ERR_VERSION_MISMATCH);

    //
    // Verify chid.
    //
    if (pGrSetObjectContextArg->chid > NUM_FIFOS_NV04)
        return (RM_ERR_BAD_ARGUMENT);

    //
    // Verify instance (what else can we do here without
    // keeping track of all objects that pass through the
    // nvHalGrAlloc interface down in the HAL?).
    //
    if (pGrSetObjectContextArg->instance == 0)
        return (RM_ERR_BAD_ARGUMENT);

    pHalHwInfo = pGrSetObjectContextArg->pHalHwInfo;
    instance = pGrSetObjectContextArg->instance;
    
    //
    // Fetch current context.
    //
    context = INST_RD32(instance, SF_OFFSET(NV_PRAMIN_CONTEXT_0));

    //
    // The context surface valid bit is managed by sw on nv4, so
    // be sure it's clear when updating object context.
    //
    // Bits 31:29 in NV_PGRAPH_DEBUG_3 indicate if SetContext is being
    // handled by hardware.
    //
    if (IsNV5orBetter_NV04(pHalHwInfo->pMcHalInfo) && REG_RD32(NV_PGRAPH_DEBUG_3) & 0xe0000000)
    {
        // Context_Surface is managed by SW.
        context &= ~(DRF_DEF(_PGRAPH, _CTX_SWITCH1, _CONTEXT_SURFACE, _VALID));
    }

    //
    // Make necessary adjustments.
    //
    context &= pGrSetObjectContextArg->andMask;
    context |= pGrSetObjectContextArg->orMask;

    //
    // Write it back out                   
    //
    INST_WR32(instance, SF_OFFSET(NV_PRAMIN_CONTEXT_0), context);
        
    //
    // Now we need to update the hardware context if appropriate.
    //
    if (pGrSetObjectContextArg->chid == REG_RD_DRF(_PGRAPH, _CTX_USER, _CHID))
    {
        //
        // First disable the graphics fifo so we can get to the context rams
        //
        fifo = REG_RD32(NV_PGRAPH_FIFO);
        REG_WR_DRF_DEF(_PGRAPH, _FIFO, _ACCESS, _DISABLED);
            
        //
        // Walk to subchannels and see if we find a match; update when we do
        //
        for (i = 0 ; i < 8 ; i++)
        {            
            if (REG_RD32(NV_PGRAPH_CTX_CACHE4(i)) == instance)
            {   
                //
                // Get the current settings
                //
                context = REG_RD32(NV_PGRAPH_CTX_CACHE1(i));

                //
                // The context surface valid bit is managed by sw on nv4, so
                // be sure it's clear when updating object context.
                //
                // Bits 31:29 in NV_PGRAPH_DEBUG_3 indicate if SetContext is being
                // handled by hardware.
                //
                if (IsNV5orBetter_NV04(pHalHwInfo->pMcHalInfo) && REG_RD32(NV_PGRAPH_DEBUG_3) & 0xe0000000)
                {
                    // Context_Surface is managed by SW.
                    context &= ~(DRF_DEF(_PGRAPH, _CTX_SWITCH1, _CONTEXT_SURFACE, _VALID));
                }

                //
                // Make necessary adjustments.
                //
                context &= pGrSetObjectContextArg->andMask;
                context |= pGrSetObjectContextArg->orMask;

                //
                // Write it back out                   
                //
                REG_WR32(NV_PGRAPH_CTX_CACHE1(i), context);
            }
        }                                    
                             
        //
        // See if the currently active subchannel also needs updating
        //
        if (REG_RD_DRF(_PGRAPH, _CTX_SWITCH4, _USER_INSTANCE) == instance)
        {   
            //
            // Get the current settings
            //
            context = REG_RD32(NV_PGRAPH_CTX_SWITCH1);

            //
            // The context surface valid bit is managed by sw on nv4, so
            // be sure it's clear when updating object context.
            //
            // Bits 31:29 in NV_PGRAPH_DEBUG_3 indicate if SetContext is being
            // handled by hardware.
            //
            if (IsNV5orBetter_NV04(pHalHwInfo->pMcHalInfo) && REG_RD32(NV_PGRAPH_DEBUG_3) & 0xe0000000)
            {
                // Context_Surface is managed by SW.
                context &= ~(DRF_DEF(_PGRAPH, _CTX_SWITCH1, _CONTEXT_SURFACE, _VALID));
            }

            //
            // Make necessary adjustments.
            //
            context &= pGrSetObjectContextArg->andMask;
            context |= pGrSetObjectContextArg->orMask;

            //
            // Write it back out                   
            //
            REG_WR32(NV_PGRAPH_CTX_SWITCH1, context);
        }
            
        //
        // Restore the fifo state
        //
        REG_WR32(NV_PGRAPH_FIFO, fifo);
        
    }    
    return (RM_OK);
}

RM_STATUS
nvHalGrLoadOverride_NV04(VOID *arg)
{
    PGRLOADOVERRIDEARG_000 pGrLoadOverrideArg = (PGRLOADOVERRIDEARG_000)arg;
    PHALHWINFO pHalHwInfo;
    PGRHALINFO_NV04 pGrHalPvtInfo;

    //
    // Verify interface revision.
    //
    if (pGrLoadOverrideArg->id != GR_LOAD_OVERRIDE_000)
        return (RM_ERR_VERSION_MISMATCH);

    pHalHwInfo = pGrLoadOverrideArg->pHalHwInfo;
    pGrHalPvtInfo = (PGRHALINFO_NV04)pHalHwInfo->pGrHalPvtInfo;

    switch (pGrLoadOverrideArg->cmd)
    {
        case GR_LOAD_OVERRIDE_DEBUG0:
            pGrHalPvtInfo->Debug0 = pGrLoadOverrideArg->value;
            break;
        case GR_LOAD_OVERRIDE_DEBUG1:
            pGrHalPvtInfo->Debug1 = pGrLoadOverrideArg->value;
            break;
        case GR_LOAD_OVERRIDE_DEBUG2:
            pGrHalPvtInfo->Debug2 = pGrLoadOverrideArg->value;
            break;
        case GR_LOAD_OVERRIDE_DEBUG3:
            pGrHalPvtInfo->Debug3 = pGrLoadOverrideArg->value;
            break;
        default:
            return (RM_ERR_BAD_ARGUMENT);
    }

    return (RM_OK);
}

//
// nvHalGrSetContextColorKeyWar
//
// This routine implements the workaround for the nv5 context color
// key bug.  On nv5, the NV01_CONTEXT_COLOR_KEY class is not accepted
// by classes with the SetContextColorKey method (a _DATA_ERROR
// exception is raised).
//
// If that's the case here, we munge the PGREXCEPTIONDATA structure
// to make it look like a legal method, and allow the resource manager
// to field it accordingly.
//
static RM_STATUS
_nvHalGrSetContextColorKeyWar_NV04(PHALHWINFO pHalHwInfo, PGREXCEPTIONDATA pGrExceptionData)
{
    U032 grClass;

    //
    // This WAR applies to NV5.
    //
    if (!(IsNV5orBetter_NV04(pHalHwInfo->pMcHalInfo) && REG_RD32(NV_PGRAPH_DEBUG_3) & 0xe0000000) ||
        pGrExceptionData->Instance == 0)
    {
        //
        // This isn't really an error, but by returning RM_ERROR
        // we're going to avoid clearing the pending interrupt
        // condition.
        //
        return RM_ERROR;
    }

    //
    // First determine if this is a class that requires this war.
    // The following classes supported on NV5 accept a
    // SetContextColorKey argument=NV01_CONTEXT_COLOR_KEY:
    //  NV01_IMAGE_BLIT
    //  NV01_IMAGE_FROM_CPU
    //  NV03_STRETCHED_IMAGE_FROM_CPU
    //
    if (((pGrExceptionData->classNum != NV01_IMAGE_BLIT) ||
         (pGrExceptionData->Offset != NV01F_SET_CONTEXT_COLOR_KEY)) &&
        ((pGrExceptionData->classNum != NV01_IMAGE_FROM_CPU) ||
         (pGrExceptionData->Offset != NV021_SET_CONTEXT_COLOR_KEY)) &&
        ((pGrExceptionData->classNum != NV03_STRETCHED_IMAGE_FROM_CPU) ||
         (pGrExceptionData->Offset != NV036_SET_CONTEXT_COLOR_KEY)))
    {
        return RM_ERROR;
    }

    //
    // Now check to see if Data is the instance pointer to an
    // NV01_CONTEXT_COLOR_KEY object.
    //
    grClass = INST_RD32(pGrExceptionData->Data, SF_OFFSET(NV_PRAMIN_CONTEXT_0)) & DRF_MASK(NV_PGRAPH_CTX_SWITCH1_GRCLASS);
    if (grClass == NV01_CONTEXT_COLOR_KEY)
    {
        //
        // Mark the NotifySource as an _ILLEGAL_METHOD, which will cause
        // the RM to handle it in software (which will turn on the
        // CHROMA_ENABLE bit and refresh the PATCH_STATUS bit).
        //
        pGrExceptionData->Nsource &= ~DRF_DEF(_PGRAPH, _NSOURCE, _DATA_ERROR, _PENDING);
        pGrExceptionData->Nsource |= DRF_DEF(_PGRAPH, _NSOURCE, _ILLEGAL_MTHD, _PENDING);
        return RM_OK;
    }

    return RM_ERROR;
} 

static RM_STATUS
_nvHalGrInitInstance_NV04(
    PHALHWINFO  pHalHwInfo,
    U032        instance,
    U032        classNum
)
{
    U032 ctx1, ctx2, ctx3;

    // default _CTX_SWITCH1 value
    ctx1 = DRF_NUM(_PGRAPH, _CTX_SWITCH1, _GRCLASS, classNum)
        | DRF_DEF(_PGRAPH, _CTX_SWITCH1, _PATCH_CONFIG, _SRCCOPY_AND)
        | DRF_DEF(_PGRAPH, _CTX_SWITCH1, _PATCH_STATUS, _INVALID);    

    // default _CTX_SWITCH2 value
    ctx2 = DRF_DEF(_PGRAPH, _CTX_SWITCH2, _MONO_FORMAT, _INVALID)
        | DRF_DEF(_PGRAPH, _CTX_SWITCH2, _COLOR_FORMAT, _INVALID)
        | DRF_DEF(_PGRAPH, _CTX_SWITCH2, _NOTIFY_INSTANCE, _INVALID);

    // default _CTX_SWITCH3 value
    ctx3 = DRF_DEF(_PGRAPH, _CTX_SWITCH3, _DMA_INSTANCE_0, _INVALID)
        | DRF_DEF(_PGRAPH, _CTX_SWITCH3, _DMA_INSTANCE_1, _INVALID);

    switch (classNum)
    {
        case NV01_CONTEXT_BETA:
        case NV01_CONTEXT_CLIP_RECTANGLE:
        case NV01_IMAGE_BLIT:
        case NV03_CONTEXT_ROP:
        case NV04_CONTEXT_SURFACES_2D:
        case NV03_DX3_TEXTURED_TRIANGLE:
        case NV04_CONTEXT_SURFACE_SWIZZLED:
        case NV04_CONTEXT_SURFACES_3D:
        case NV03_CONTEXT_SURFACE_2D_DESTINATION:
        case NV03_CONTEXT_SURFACE_2D_SOURCE:
        case NV03_CONTEXT_SURFACE_3D_COLOR:
        case NV03_CONTEXT_SURFACE_3D_DEPTH:
        case NV04_IMAGE_BLIT:
        case NV04_CONTEXT_BETA:
            // defaults are fine
            break;
        case NV01_CONTEXT_COLOR_KEY:
            ctx2 = DRF_DEF(_PGRAPH, _CTX_SWITCH2, _MONO_FORMAT, _INVALID)
                | DRF_DEF(_PGRAPH, _CTX_SWITCH2, _COLOR_FORMAT, _LE_X16A8Y8)
                | DRF_DEF(_PGRAPH, _CTX_SWITCH2, _NOTIFY_INSTANCE, _INVALID);
            break;
        case NV01_CONTEXT_PATTERN:
        case NV04_CONTEXT_PATTERN:
            ctx2 = DRF_DEF(_PGRAPH, _CTX_SWITCH2, _MONO_FORMAT, _CGA6_M1)
                | DRF_DEF(_PGRAPH, _CTX_SWITCH2, _COLOR_FORMAT, _LE_X16A8Y8)
                | DRF_DEF(_PGRAPH, _CTX_SWITCH2, _NOTIFY_INSTANCE, _INVALID);
            break;
        case NV01_RENDER_SOLID_LIN:
        case NV01_RENDER_SOLID_TRIANGLE:
        case NV01_RENDER_SOLID_RECTANGLE:
            ctx2 = DRF_DEF(_PGRAPH, _CTX_SWITCH2, _MONO_FORMAT, _INVALID)
                | DRF_DEF(_PGRAPH, _CTX_SWITCH2, _COLOR_FORMAT, _LE_X24Y8)
                | DRF_DEF(_PGRAPH, _CTX_SWITCH2, _NOTIFY_INSTANCE, _INVALID);
            break;
        case NV01_IMAGE_FROM_CPU:
        case NV03_STRETCHED_IMAGE_FROM_CPU:
            ctx2 = DRF_DEF(_PGRAPH, _CTX_SWITCH2, _MONO_FORMAT, _INVALID)
                | DRF_DEF(_PGRAPH, _CTX_SWITCH2, _COLOR_FORMAT, _LE_Y8)
                | DRF_DEF(_PGRAPH, _CTX_SWITCH2, _NOTIFY_INSTANCE, _INVALID);
            break;
        case NV1_NULL:
            //
            // The NULL object is really a pseudo-dma object, so it needs a valid
            // limit value and should also have the PAGE_TABLE_PRESENT bit set.
            //
            ctx1 |= SF_DEF(_DMA, _PAGE_TABLE, _PRESENT);
            ctx2 = 0xffffffff;
            //INST_WR32(instance, SF_OFFSET(NV_PRAMIN_CONTEXT_1), 0xFFFFFFFF);
            //FLD_WR_ISF_DEF(instance, _DMA, _PAGE_TABLE, _PRESENT);
            break;
        case NV03_SCALED_IMAGE_FROM_MEMORY:
        case NV04_SCALED_IMAGE_FROM_MEMORY:
            ctx2 = DRF_DEF(_PGRAPH, _CTX_SWITCH2, _MONO_FORMAT, _INVALID)
                | DRF_DEF(_PGRAPH, _CTX_SWITCH2, _COLOR_FORMAT, _LE_A1R5G5B5)
                | DRF_DEF(_PGRAPH, _CTX_SWITCH2, _NOTIFY_INSTANCE, _INVALID);
            break;
        case NV04_DVD_SUBPICTURE:
            //
            // DVD class is patchless, so it is always considered valid.  HW doesn't
            // use this bit, but let's set it anyway to be consistent with other
            // objects
            //
            ctx1 |= DRF_DEF(_PGRAPH, _CTX_SWITCH1, _PATCH_STATUS, _VALID);
            break;
        case NV03_MEMORY_TO_MEMORY_FORMAT:
            // Note that this object is always considered patch valid
            ctx1 |= DRF_DEF(_PGRAPH, _CTX_SWITCH1, _PATCH_STATUS, _VALID);
            break;
        case NV04_GDI_RECTANGLE_TEXT:
            ctx2 = DRF_DEF(_PGRAPH, _CTX_SWITCH2, _MONO_FORMAT, _CGA6_M1)
                | DRF_DEF(_PGRAPH, _CTX_SWITCH2, _COLOR_FORMAT, _LE_X16R5G6B5)
                | DRF_DEF(_PGRAPH, _CTX_SWITCH2, _NOTIFY_INSTANCE, _INVALID);
            break;
        case NV03_GDI_RECTANGLE_TEXT:
            ctx2 = DRF_DEF(_PGRAPH, _CTX_SWITCH2, _MONO_FORMAT, _CGA6_M1)
                | DRF_DEF(_PGRAPH, _CTX_SWITCH2, _COLOR_FORMAT, _LE_X24Y8)
                | DRF_DEF(_PGRAPH, _CTX_SWITCH2, _NOTIFY_INSTANCE, _INVALID);
            break;
        case NV04_DX5_TEXTURED_TRIANGLE:
            //
            // DX5 class is patchless, so it is always considered valid.  HW doesn't
            // use this bit, but let's set it anyway to be consistent with other
            // objects
            //
            ctx1 |= DRF_DEF(_PGRAPH, _CTX_SWITCH1, _PATCH_STATUS, _VALID);
            break;
        case NV04_DX6_MULTI_TEXTURE_TRIANGLE:
            //
            // DX6 class is patchless, so it is always considered valid.  HW doesn't
            // use this bit, but let's set it anyway to be consistent with other
            // objects
            //
            ctx1 |= DRF_DEF(_PGRAPH, _CTX_SWITCH1, _PATCH_STATUS, _VALID);
            break;
        case NV04_CONTEXT_COLOR_KEY:
            ctx2 = DRF_DEF(_PGRAPH, _CTX_SWITCH2, _MONO_FORMAT, _INVALID)
                | DRF_DEF(_PGRAPH, _CTX_SWITCH2, _COLOR_FORMAT, _LE_A16R5G6B5)
                | DRF_DEF(_PGRAPH, _CTX_SWITCH2, _NOTIFY_INSTANCE, _INVALID);
            break;
        case NV04_RENDER_SOLID_LIN:
        case NV04_RENDER_SOLID_TRIANGLE:
        case NV04_RENDER_SOLID_RECTANGLE:
            ctx2 = DRF_DEF(_PGRAPH, _CTX_SWITCH2, _MONO_FORMAT, _INVALID)
                | DRF_DEF(_PGRAPH, _CTX_SWITCH2, _COLOR_FORMAT, _LE_X16R5G6B5)
                | DRF_DEF(_PGRAPH, _CTX_SWITCH2, _NOTIFY_INSTANCE, _INVALID);
            break;
        case NV04_INDEXED_IMAGE_FROM_CPU:
        case NV04_IMAGE_FROM_CPU:
        case NV04_STRETCHED_IMAGE_FROM_CPU:
            ctx2 = DRF_DEF(_PGRAPH, _CTX_SWITCH2, _MONO_FORMAT, _INVALID)
                | DRF_DEF(_PGRAPH, _CTX_SWITCH2, _COLOR_FORMAT, _LE_R5G6B5)
                | DRF_DEF(_PGRAPH, _CTX_SWITCH2, _NOTIFY_INSTANCE, _INVALID);
            break;
        case NV05_SCALED_IMAGE_FROM_MEMORY:
            //
            // NOTE: Eventhough we are creating an object of class NV5_SCALED_IMAGE_FROM_CPU,
            //       we have to tell the hardware we are creating the NV4 object. The hardware
            //       does not know the new object class. The only difference between the NV5 and NV4
            //       objects is a new method to set the dithering that is valid for an NV5 object.
            //       The hardware will generate an illegal method interrupt for that method and is 
            //       handled by the RM.
            //
            ctx1 = DRF_NUM(_PGRAPH, _CTX_SWITCH1, _GRCLASS, NV04_SCALED_IMAGE_FROM_MEMORY)
                | DRF_DEF(_PGRAPH, _CTX_SWITCH1, _PATCH_CONFIG, _SRCCOPY_AND)
                | DRF_DEF(_PGRAPH, _CTX_SWITCH1, _PATCH_STATUS, _INVALID);    

            ctx2 = DRF_DEF(_PGRAPH, _CTX_SWITCH2, _MONO_FORMAT, _INVALID)
                | DRF_DEF(_PGRAPH, _CTX_SWITCH2, _COLOR_FORMAT, _LE_A1R5G5B5)
                | DRF_DEF(_PGRAPH, _CTX_SWITCH2, _NOTIFY_INSTANCE, _INVALID);
            break;
        case NV05_INDEXED_IMAGE_FROM_CPU:
            //
            // NOTE: Eventhough we are creating an object of class NV05_INDEXED_IMAGE_FROM_CPU,
            //       we have to tell the hardware we are creating the NV4 object. The hardware
            //       does not know the new object class. The only difference between the NV5 and NV4
            //       objects is a new method to set the dithering that is valid for an NV5 object.
            //       The hardware will generate an illegal method interrupt for that method and is 
            //       handled by the RM.
            //
            ctx1 = DRF_NUM(_PGRAPH, _CTX_SWITCH1, _GRCLASS, NV04_INDEXED_IMAGE_FROM_CPU)
                | DRF_DEF(_PGRAPH, _CTX_SWITCH1, _PATCH_CONFIG, _SRCCOPY_AND)
                | DRF_DEF(_PGRAPH, _CTX_SWITCH1, _PATCH_STATUS, _INVALID);

            ctx2 = DRF_DEF(_PGRAPH, _CTX_SWITCH2, _MONO_FORMAT, _INVALID)
                | DRF_DEF(_PGRAPH, _CTX_SWITCH2, _COLOR_FORMAT, _LE_R5G6B5)
                | DRF_DEF(_PGRAPH, _CTX_SWITCH2, _NOTIFY_INSTANCE, _INVALID);
            break;
        case NV05_IMAGE_FROM_CPU:
            //
            // NOTE: Eventhough we are creating an object of class NV05_IMAGE_FROM_CPU,
            //       we have to tell the hardware we are creating the NV4 object. The hardware
            //       does not know the new object class. The only difference between the NV5 and NV4
            //       objects is a new method to set the dithering that is valid for an NV5 object.
            //       The hardware will generate an illegal method interrupt for that method and is 
            //       handled by the RM.
            //
            ctx1 = DRF_NUM(_PGRAPH, _CTX_SWITCH1, _GRCLASS, NV04_IMAGE_FROM_CPU)
                | DRF_DEF(_PGRAPH, _CTX_SWITCH1, _PATCH_CONFIG, _SRCCOPY_AND)
                | DRF_DEF(_PGRAPH, _CTX_SWITCH1, _PATCH_STATUS, _INVALID);
            ctx2 = DRF_DEF(_PGRAPH, _CTX_SWITCH2, _MONO_FORMAT, _INVALID)
                | DRF_DEF(_PGRAPH, _CTX_SWITCH2, _COLOR_FORMAT, _LE_R5G6B5)
                | DRF_DEF(_PGRAPH, _CTX_SWITCH2, _NOTIFY_INSTANCE, _INVALID);
            break;
        case NV05_STRETCHED_IMAGE_FROM_CPU:
            //
            // NOTE: Eventhough we are creating an object of class NV05_STRETCHED_IMAGE_FROM_CPU,
            //       we have to tell the hardware we are creating the NV4 object. The hardware
            //       does not know the new object class. The only difference between the NV5 and NV4
            //       objects is a new method to set the dithering that is valid for an NV5 object.
            //       The hardware will generate an illegal method interrupt for that method and is 
            //       handled by the RM.
            //
            ctx1 = DRF_NUM(_PGRAPH, _CTX_SWITCH1, _GRCLASS, NV04_STRETCHED_IMAGE_FROM_CPU)
                | DRF_DEF(_PGRAPH, _CTX_SWITCH1, _PATCH_CONFIG, _SRCCOPY_AND)
                | DRF_DEF(_PGRAPH, _CTX_SWITCH1, _PATCH_STATUS, _INVALID);
            ctx2 = DRF_DEF(_PGRAPH, _CTX_SWITCH2, _MONO_FORMAT, _INVALID)
                | DRF_DEF(_PGRAPH, _CTX_SWITCH2, _COLOR_FORMAT, _LE_R5G6B5)
                | DRF_DEF(_PGRAPH, _CTX_SWITCH2, _NOTIFY_INSTANCE, _INVALID);
            break;
        default:
            return (RM_ERR_CREATE_BAD_CLASS);
    }

    //
    // Write out the values.
    //
    DBG_PRINT_STRING_VALUE(DEBUGLEVEL_TRACEINFO, "NVRM: instance data for classNum ", classNum);
    DBG_PRINT_STRING_VALUE(DEBUGLEVEL_TRACEINFO, "      instance offset ", instance);
    DBG_PRINT_STRING_VALUE(DEBUGLEVEL_TRACEINFO, "      ctx1 ", ctx1);
    DBG_PRINT_STRING_VALUE(DEBUGLEVEL_TRACEINFO, "      ctx2 ", ctx2);
    DBG_PRINT_STRING_VALUE(DEBUGLEVEL_TRACEINFO, "      ctx3 ", ctx3);

    INST_WR32(instance, SF_OFFSET(NV_PRAMIN_CONTEXT_0), ctx1);
    INST_WR32(instance, SF_OFFSET(NV_PRAMIN_CONTEXT_1), ctx2);
    INST_WR32(instance, SF_OFFSET(NV_PRAMIN_CONTEXT_2), ctx3);

    return (RM_OK);
}
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Microsoft Xbox (1.00.4400) [April 2002] [src]\private\ntos\video\nvx\drivers\resman\kernel\gr\nv4\grmdnv04.c ===
/***************************************************************************\
|*                                                                           *|
|*        Copyright (c) 1993-2000 NVIDIA, Corp.  All rights reserved.        *|
|*                                                                           *|
|*     NOTICE TO USER:   The source code  is copyrighted under  U.S. and     *|
|*     international laws.   NVIDIA, Corp. of Sunnyvale, California owns     *|
|*     the copyright  and as design patents  pending  on the design  and     *|
|*     interface  of the NV chips.   Users and possessors of this source     *|
|*     code are hereby granted  a nonexclusive,  royalty-free  copyright     *|
|*     and  design  patent license  to use this code  in individual  and     *|
|*     commercial software.                                                  *|
|*                                                                           *|
|*     Any use of this source code must include,  in the user documenta-     *|
|*     tion and  internal comments to the code,  notices to the end user     *|
|*     as follows:                                                           *|
|*                                                                           *|
|*     Copyright (c) 1993-2000  NVIDIA, Corp.    NVIDIA  design  patents     *|
|*     pending in the U.S. and foreign countries.                            *|
|*                                                                           *|
|*     NVIDIA, CORP.  MAKES  NO REPRESENTATION ABOUT  THE SUITABILITY OF     *|
|*     THIS SOURCE CODE FOR ANY PURPOSE.  IT IS PROVIDED "AS IS" WITHOUT     *|
|*     EXPRESS OR IMPLIED WARRANTY OF ANY KIND.  NVIDIA, CORP. DISCLAIMS     *|
|*     ALL WARRANTIES  WITH REGARD  TO THIS SOURCE CODE,  INCLUDING  ALL     *|
|*     IMPLIED   WARRANTIES  OF  MERCHANTABILITY  AND   FITNESS   FOR  A     *|
|*     PARTICULAR  PURPOSE.   IN NO EVENT SHALL NVIDIA, CORP.  BE LIABLE     *|
|*     FOR ANY SPECIAL, INDIRECT, INCIDENTAL,  OR CONSEQUENTIAL DAMAGES,     *|
|*     OR ANY DAMAGES  WHATSOEVER  RESULTING  FROM LOSS OF USE,  DATA OR     *|
|*     PROFITS,  WHETHER IN AN ACTION  OF CONTRACT,  NEGLIGENCE OR OTHER     *|
|*     TORTIOUS ACTION, ARISING OUT  OF OR IN CONNECTION WITH THE USE OR     *|
|*     PERFORMANCE OF THIS SOURCE CODE.                                      *|
|*                                                                           *|
 \***************************************************************************/

/**************************** Graphics Manager *****************************\
*                                                                           *
* Module: GRMDNV04.C                                                        *
*   The graphics chip dependent HAL GR method routines are kept here.       *
*                                                                           *
*****************************************************************************
*                                                                           *
* History:                                                                  *
*                                                                           *
\***************************************************************************/

#include <nv_ref.h>
#include <nv4_ref.h>
#include <nvrm.h>
#include <nv4_hal.h>
#include "nvhw.h"
#include "nvhalcpp.h"

//
// First level method handler.
//
RM_STATUS nvHalGrClassSoftwareMethod_NV04(PHALHWINFO, PGREXCEPTIONDATA);

//
// NV4_CONTEXT_SURFACES_ARGB_ZS methods handled in the HAL.
//
static RM_STATUS _nvHalClass053SetClipHorizontal(PHALHWINFO, PGREXCEPTIONDATA);
static RM_STATUS _nvHalClass053SetClipVertical(PHALHWINFO, PGREXCEPTIONDATA);

HALGRMETHOD Nv4ContextSurfacesArgbZsHalMethods[] =
{
    {_nvHalClass053SetClipHorizontal,           0x02f8, 0x02fb},
    {_nvHalClass053SetClipVertical,             0x02fc, 0x02ff},
};

//
// NV4_INDEXED_IMAGE_FROM_CPU methods handled in the HAL.
//
static RM_STATUS _nvHalClass060SetColorConversion(PHALHWINFO, PGREXCEPTIONDATA);

HALGRMETHOD Nv4IndexedImageFromCpuHalMethods[] =
{
    {_nvHalClass060SetColorConversion,           0x03e0, 0x03e3}
};

//
// HAL graphics method table.
//
HALGRMETHODS nvHalGrMethods_NV04[] =
{
    { NV4_CONTEXT_SURFACES_ARGB_ZS,     Nv4ContextSurfacesArgbZsHalMethods,
                                        sizeof (Nv4ContextSurfacesArgbZsHalMethods) / sizeof (HALGRMETHOD) },

    { NV4_INDEXED_IMAGE_FROM_CPU,       Nv4IndexedImageFromCpuHalMethods,
                                        sizeof (Nv4IndexedImageFromCpuHalMethods) / sizeof (HALGRMETHOD) },
};

#define NUM_HALGRMETHODS                sizeof (nvHalGrMethods_NV04) / sizeof(HALGRMETHODS)


RM_STATUS
nvHalGrClassSoftwareMethod_NV04(PHALHWINFO pHalHwInfo, PGREXCEPTIONDATA pGrExceptionData)
{
    RM_STATUS status = RM_OK;
    U032 i, j;
    PHWREG nvAddr;

    nvAddr = pHalHwInfo->nvBaseAddr;
    for (i = 0; i < NUM_HALGRMETHODS; i++)
    {
        //
        // Find out if this class has any HAL methods.
        //
        if (nvHalGrMethods_NV04[i].classNum == pGrExceptionData->classNum)
        {
            //
            // See if this particular method is a HAL method.
            //
            for (j = 0; j < nvHalGrMethods_NV04[i].methodMax; j++)
            {
                if ((pGrExceptionData->Offset >= nvHalGrMethods_NV04[i].pMethods[j].Low) &&
                    (pGrExceptionData->Offset < nvHalGrMethods_NV04[i].pMethods[j].High))
                {
                    //
                    // Idle graphics.
                    //
                    GR_DONE();

                    //
                    // Route the method.
                    //
                    pGrExceptionData->MethodStatus = nvHalGrMethods_NV04[i].pMethods[j].Proc(pHalHwInfo, pGrExceptionData);
                    return (RM_OK);
                }
            }
        }
    }

    //
    // HAL didn't service this method.
    // This isn't really an error, since the RM may still want
    // to do something.
    //
    return (RM_ERROR);
}

static RM_STATUS
_nvHalClass053SetClipHorizontal(PHALHWINFO pHalHwInfo, PGREXCEPTIONDATA pGrExceptionData)
{
    PHWREG nvAddr;
    U032 savedContext;
    
    DBG_PRINT_STRING(DEBUGLEVEL_TRACEINFO, "NVRM: nvHalClass053SetClipHorizontal\r\n");

    nvAddr = pHalHwInfo->nvBaseAddr;

    //
    // ERROR CHECKING??
    //
    
    //
    // HW HACK!!  NV4 contains internal error checking that limits the clip origin to zero
    // if the current object is the 3D_SURFACE.  We need to temporarily remove the current
    // context object, put in a dummy value, then place the original back.  Yuck.
    //
    savedContext = REG_RD32(NV_PGRAPH_CTX_SWITCH1);
    REG_WR32(NV_PGRAPH_CTX_SWITCH1, 0x0100004A);

    //
    // Force this X clip information into the hardware.  Note that MIN must be written
    // before MAX.
    //
    REG_WR32(NV_PGRAPH_ABS_UCLIP_XMIN, pGrExceptionData->Data & 0x7FFF);
    REG_WR32(NV_PGRAPH_ABS_UCLIP_XMAX, ((pGrExceptionData->Data >> 16) & 0x7FFF) + (pGrExceptionData->Data & 0x7FFF));
    
    //
    // KJK: Need to update the valid bits here as well.
    //
    
    //
    // HW HACK!! Now put back the original context for this subchannel
    //
    REG_WR32(NV_PGRAPH_CTX_SWITCH1, savedContext);
    
    return (RM_OK);
}

static RM_STATUS
_nvHalClass053SetClipVertical(PHALHWINFO pHalHwInfo, PGREXCEPTIONDATA pGrExceptionData)

{
    PHWREG nvAddr;
    U032 savedContext;

    DBG_PRINT_STRING(DEBUGLEVEL_TRACEINFO, "NVRM: nvHalClass053SetClipVertical\r\n");    

    nvAddr = pHalHwInfo->nvBaseAddr;

    //
    // ERROR CHECKING??
    //
    
    //
    // HW HACK!!  NV4 contains internal error checking that limits the clip origin to zero
    // if the current object is the 3D_SURFACE.  We need to temporarily remove the current
    // context object, put in a dummy value, then place the original back.  Yuck.
    //
    savedContext = REG_RD32(NV_PGRAPH_CTX_SWITCH1);
    REG_WR32(NV_PGRAPH_CTX_SWITCH1, 0x0100004A);
    
    //
    // Force this Y clip information into the hardware.  Note that MIN must be written
    // before MAX.
    //
    REG_WR32(NV_PGRAPH_ABS_UCLIP_YMIN, pGrExceptionData->Data & 0x7FFF);
    REG_WR32(NV_PGRAPH_ABS_UCLIP_YMAX, ((pGrExceptionData->Data >> 16) & 0x7FFF) + (pGrExceptionData->Data & 0x7FFF));    
    
    //
    // KJK: Need to update the valid bits here as well.
    //
    
    //
    // HW HACK!! Now put back the original context for this subchannel
    //
    REG_WR32(NV_PGRAPH_CTX_SWITCH1, savedContext);
    
    return (RM_OK);
}

static RM_STATUS
_nvHalClass060SetColorConversion(PHALHWINFO pHalHwInfo, PGREXCEPTIONDATA pGrExceptionData)

{
    PGRHALINFO_NV04 pGrHalPvtInfo;
    PGRAPHICSCHANNEL_NV04 pGrChannel;
    PHWREG nvAddr;

    DBG_PRINT_STRING(DEBUGLEVEL_TRACEINFO, "NVRM: nvHalClass060SetColorConversion\r\n");    

    pGrHalPvtInfo = (PGRHALINFO_NV04)pHalHwInfo->pGrHalPvtInfo;
    pGrChannel = &pGrHalPvtInfo->grChannels[pGrExceptionData->ChID];
    nvAddr = pHalHwInfo->nvBaseAddr;

    //
    // Set the dither mode.
    //
    // Since this comes in as a synchronous graphics exception, we can
    // assume we own the channel and can change the dither mode.
    //
    // The resource manager will handle error checking, so all we're
    // concerned with here is updating the hardware.
    // 
    switch (pGrExceptionData->Data)
    {
        case NV064_SET_COLOR_CONVERSION_DITHER:
            pGrChannel->Debug3 |= DRF_DEF(_PGRAPH, _DEBUG_3, _POSTDITHER_2D, _ENABLED);
            FLD_WR_DRF_DEF(_PGRAPH, _DEBUG_3, _POSTDITHER_2D, _ENABLED);
            break;
        case NV064_SET_COLOR_CONVERSION_TRUNCATE:
            pGrChannel->Debug3 &= ~DRF_MASK(NV_PGRAPH_DEBUG_3_POSTDITHER_2D);
            FLD_WR_DRF_DEF(_PGRAPH, _DEBUG_3, _POSTDITHER_2D, _DISABLED);
            break;
        default:
            //
            // Data invalid.
            // Resource manager will catch this error and handle it
            // appropriately.
            //
            break;
    }
    
    return (RM_OK);
}
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Microsoft Xbox (1.00.4400) [April 2002] [src]\private\ntos\video\nvx\drivers\resman\kernel\hal\nv\halinit.c ===
/***************************************************************************\
|*                                                                           *|
|*        Copyright (c) 1993-2000 NVIDIA, Corp.  All rights reserved.        *|
|*                                                                           *|
|*     NOTICE TO USER:   The source code  is copyrighted under  U.S. and     *|
|*     international laws.   NVIDIA, Corp. of Sunnyvale, California owns     *|
|*     the copyright  and as design patents  pending  on the design  and     *|
|*     interface  of the NV chips.   Users and possessors of this source     *|
|*     code are hereby granted  a nonexclusive,  royalty-free  copyright     *|
|*     and  design  patent license  to use this code  in individual  and     *|
|*     commercial software.                                                  *|
|*                                                                           *|
|*     Any use of this source code must include,  in the user documenta-     *|
|*     tion and  internal comments to the code,  notices to the end user     *|
|*     as follows:                                                           *|
|*                                                                           *|
|*     Copyright (c) 1993-2000  NVIDIA, Corp.    NVIDIA  design  patents     *|
|*     pending in the U.S. and foreign countries.                            *|
|*                                                                           *|
|*     NVIDIA, CORP.  MAKES  NO REPRESENTATION ABOUT  THE SUITABILITY OF     *|
|*     THIS SOURCE CODE FOR ANY PURPOSE.  IT IS PROVIDED "AS IS" WITHOUT     *|
|*     EXPRESS OR IMPLIED WARRANTY OF ANY KIND.  NVIDIA, CORP. DISCLAIMS     *|
|*     ALL WARRANTIES  WITH REGARD  TO THIS SOURCE CODE,  INCLUDING  ALL     *|
|*     IMPLIED   WARRANTIES  OF  MERCHANTABILITY  AND   FITNESS   FOR  A     *|
|*     PARTICULAR  PURPOSE.   IN NO EVENT SHALL NVIDIA, CORP.  BE LIABLE     *|
|*     FOR ANY SPECIAL, INDIRECT, INCIDENTAL,  OR CONSEQUENTIAL DAMAGES,     *|
|*     OR ANY DAMAGES  WHATSOEVER  RESULTING  FROM LOSS OF USE,  DATA OR     *|
|*     PROFITS,  WHETHER IN AN ACTION  OF CONTRACT,  NEGLIGENCE OR OTHER     *|
|*     TORTIOUS ACTION, ARISING OUT  OF OR IN CONNECTION WITH THE USE OR     *|
|*     PERFORMANCE OF THIS SOURCE CODE.                                      *|
|*                                                                           *|
 \***************************************************************************/

/********************** HAL Initialization/Destruction *********************\
*                                                                           *
* Module: halinit.c                                                         *
*                                                                           *
* This source module contains the HAL initialize and tear-down code.        *
*                                                                           *
*****************************************************************************
*                                                                           *
* History:                                                                  *
*                                                                           *
\***************************************************************************/

#include <nv_ref.h>
#include <nvrm.h>
#include <class.h>
#include <fb.h>
#include <nvhal.h>
#include "nvhw.h"

// statics
static RM_STATUS allocHalEngineMem(PHWINFO);
RM_STATUS allocHalEngineInstMem(PHWINFO);
RM_STATUS freeHalEngineInstMem(PHWINFO);

//
// initHal
//
// It all starts here.  Id the chip represented by pDev and
// wire up the correct hal data/code. Generate the class database
// and allocate any engine-specific resources (e.g. instance memory).
//
RM_STATUS
initHal(PHWINFO pDev)
{
	PRMINFO pRmInfo = (PRMINFO) pDev->pRmInfo;

    U032 pmcBoot0;
    RM_STATUS status;
    PHALHWINFO pHalHwInfo = &pDev->halHwInfo;

    //
    // Hook up chip-dependent data.
    //
    pmcBoot0 = REG_RD32(NV_PMC_BOOT_0);

#ifdef DEBUG
    //
    // This check will catch the case where we haven't yet mapped the regs.
    //
    if (pmcBoot0 == 0xffffffff)
    {
        DBG_PRINT_STRING(DEBUGLEVEL_ERRORS, "NVRM: registers not mapped in initHal\n\r!");
        DBG_BREAKPOINT();
        return RM_ERROR;
    }
#endif

    //
    // Check for nv4 and family using the old-style PMC_BOOT_0 format.
    // Check for nv10 and beyond using new-style format.
    //
    if (DRF_VAL(_PMC, _BOOT_0, _ARCHITECTURE, pmcBoot0) == NV_PMC_BOOT_0_ARCHITECTURE_NV4)
    {
        U032 impl = REG_RD_DRF(_PMC, _BOOT_0, _MASK_REVISION);  // implementation

        DBG_PRINT_STRING(DEBUGLEVEL_TRACEINFO, "NVRM: hooking up NV4 HAL\n");
        pDev->pHalFuncs = (PHALFUNCS)&NV04_HalFuncs_000;
        pDev->engineDB.pEngineDescriptors = NV04_EngineDescriptors;
        pDev->engineDB.numEngineDescriptors = NV04_NumEngineDescs;
        if (impl == MC_IMPLEMENTATION_NV04) {
            pDev->classDB.pClassDescriptors = NV04_ClassDescriptors;
            pDev->classDB.numClassDescriptors = NV04_NumClassDescs;
        } else {
            pDev->classDB.pClassDescriptors = NV05_ClassDescriptors;
            pDev->classDB.numClassDescriptors = NV05_NumClassDescs;
        }
    }
    else if (MC_GET_ARCHITECTURE(pmcBoot0) == MC_ARCHITECTURE_NV10)
    {
        DBG_PRINT_STRING(DEBUGLEVEL_TRACEINFO, "NVRM: hooking up NV10 HAL\n");
        pDev->pHalFuncs = (PHALFUNCS)&NV10_HalFuncs_000;
        pDev->engineDB.pEngineDescriptors = NV10_EngineDescriptors;
        pDev->engineDB.numEngineDescriptors = NV10_NumEngineDescs;
        if (MC_GET_IMPLEMENTATION(pmcBoot0) == MC_IMPLEMENTATION_NV10) {
            pDev->classDB.pClassDescriptors =   NV10_ClassDescriptors;
            pDev->classDB.numClassDescriptors = NV10_NumClassDescs;
        } else if (MC_GET_IMPLEMENTATION(pmcBoot0) == MC_IMPLEMENTATION_NV15) {
            pDev->classDB.pClassDescriptors =   NV15_ClassDescriptors;
            pDev->classDB.numClassDescriptors = NV15_NumClassDescs;
        } else if (MC_GET_IMPLEMENTATION(pmcBoot0) == MC_IMPLEMENTATION_NV11) {
            pDev->classDB.pClassDescriptors =   NV11_ClassDescriptors;
            pDev->classDB.numClassDescriptors = NV11_NumClassDescs;
        }
    }
    else if (MC_GET_ARCHITECTURE(pmcBoot0) == MC_ARCHITECTURE_NV20)
    {
        DBG_PRINT_STRING(DEBUGLEVEL_TRACEINFO, "NVRM: hooking up NV20 HAL\n");
        pDev->pHalFuncs = (PHALFUNCS)&NV20_HalFuncs_000;
        pDev->engineDB.pEngineDescriptors = NV20_EngineDescriptors;
        pDev->engineDB.numEngineDescriptors = NV20_NumEngineDescs;
        pDev->classDB.pClassDescriptors = NV20_ClassDescriptors;
        pDev->classDB.numClassDescriptors = NV20_NumClassDescs;
    }
    else
    {
        DBG_PRINT_STRING_VALUE(DEBUGLEVEL_ERRORS, "NVRM: unknown architecture in pmcboot0", pmcBoot0);
        DBG_BREAKPOINT();
        return RM_ERROR;
    }

    //
    // Allocate space for HAL private areas (ENGMALLOC_TYPE_PRIVATE buffers).
    //
    status = allocHalEngineMem(pDev);

    //
    // Initialize mapped device/fb addresses.  Note that on some
    // platforms (i.e. nt), we'll be asked to setup the HAL before
    // the framebuffer is mapped.  The initHalMappings call can be
    // used to handle such cases (see below).
    //
    pHalHwInfo->nvBaseAddr = pDev->DBnvAddr;
    pHalHwInfo->fbBaseAddr = pDev->DBfbAddr;

    //
    // Setup up RM services table pointer.
    //
    pHalHwInfo->pHalRmFuncs = (PHALRMFUNCS)&HalRmFuncs_000;

    //
    // Save off (opaque) device identifier.
    //
    pHalHwInfo->pDeviceId = (VOID_PTR)pDev;

    //
    // Initialize HAL info pointers.
    //
    pHalHwInfo->pProcessorHalInfo = &pRmInfo->Processor.HalInfo;
    pHalHwInfo->pMcHalInfo = &pDev->Chip.HalInfo;
    pHalHwInfo->pPramHalInfo = &pDev->Pram.HalInfo;
    pHalHwInfo->pFifoHalInfo = &pDev->Fifo.HalInfo;
    pHalHwInfo->pFbHalInfo = &pDev->Framebuffer.HalInfo;
    pHalHwInfo->pGrHalInfo = &pDev->Graphics.HalInfo;
    pHalHwInfo->pDacHalInfo = &pDev->Dac.HalInfo;
    pHalHwInfo->pDmaHalInfo = &pDev->Dma.HalInfo;
    pHalHwInfo->pVideoHalInfo = &pDev->Video.HalInfo;
    pHalHwInfo->pMpHalInfo = &pDev->MediaPort.HalInfo;

    //
    // Now create class database.
    //
    status = classBuildDB(&pDev->engineDB, &pDev->classDB);
    if (status != RM_OK)
    {   
        DBG_PRINT_STRING_VALUE(DEBUGLEVEL_ERRORS, "NVRM: classBuildDB failure ", status);
        osFreeMem((VOID *)pDev->pHalEngineMem);
        pDev->pHalEngineMem = 0;
    }
    return (status);
}

RM_STATUS
destroyHal(PHWINFO pDev)
{
    classDestroyDB(&pDev->classDB);
    freeHalEngineInstMem(pDev);
    osFreeMem((VOID *)pDev->pHalEngineMem);

    return (RM_OK);
}

//
// initHalMappings
//
// This routine moves the mapped register/framebuffer addresses into
// into the HwInfo struct (pDev) into the HalHwInfo struct.
//
RM_STATUS
initHalMappings(PHWINFO pDev)
{
    //
    // Initialize mapped device/fb addresses.
    //
    DBG_PRINT_STRING_PTR(DEBUGLEVEL_TRACEINFO, "NVRM: initHal: nvAddr ", pDev->DBnvAddr);
    DBG_PRINT_STRING_PTR(DEBUGLEVEL_TRACEINFO, "NVRM: initHal: fbAddr ", pDev->DBfbAddr);

    pDev->halHwInfo.nvBaseAddr = pDev->DBnvAddr;
    pDev->halHwInfo.fbBaseAddr = pDev->DBfbAddr;
    
    return (RM_OK);
}

//
// allocHalEngineMem
//
// Setup HAL engine private data areas using info from
// engine descriptor table.
//
static RM_STATUS
allocHalEngineMem(PHWINFO pDev)
{
    U008 *pHalData;
    RM_STATUS status;
    U032 i, tag, size;
    PHALHWINFO pHalHwInfo = &pDev->halHwInfo;
    PENGINEDB pEngineDB  = &pDev->engineDB;

    //
    // Start by scanning engine descriptor table for number of ENGMALLOC
    // instructions.
    //
    size = 0; pHalData = NULL;
    for (i = 0; i < pEngineDB->numEngineDescriptors; i++)
    {
        if ((ENGDECL_FIELD(pEngineDB->pEngineDescriptors[i], _OPCODE) != ENGMALLOC_INSTR) ||
            (ENGMALLOC_FIELD(pEngineDB->pEngineDescriptors[i], _TYPE) != ENGMALLOC_TYPE_PRIVATE))
            continue;

        // Value is in dwords, so adjust to get bytes
        // In addition, align to a pointer boundary to avoid unaligned
        // reference faults on the IA64.

        size += NV_ALIGN_UP((ENGMALLOC_FIELD(pEngineDB->pEngineDescriptors[i], _SIZE) * 4), sizeof(void *));
    }
    if (size == 0)
        return (RM_OK);

    status = osAllocMem((VOID *)&pHalData, size);
    if (status)
        return (status);

    DBG_PRINT_STRING_PTR(DEBUGLEVEL_TRACEINFO, "NVRM: HAL private area base ", pHalData);
    DBG_PRINT_STRING_VALUE(DEBUGLEVEL_TRACEINFO, "NVRM: total HAL private area size ", size);

    //
    // Clear this memory out.
    //
    for (i = 0; i < size; i++)
    {
        pHalData[i] = 0;
    }

    //
    // Wire up engine-specific private info pointers.
    //
    pDev->pHalEngineMem = (VOID_PTR)pHalData;
    for (i = 0; i < pEngineDB->numEngineDescriptors; i++)
    {
        if ((ENGDECL_FIELD(pEngineDB->pEngineDescriptors[i], _OPCODE) != ENGMALLOC_INSTR) ||
            (ENGMALLOC_FIELD(pEngineDB->pEngineDescriptors[i], _TYPE) != ENGMALLOC_TYPE_PRIVATE))
            continue;

        tag = ENGMALLOC_FIELD(pEngineDB->pEngineDescriptors[i], _TAG);
        size = NV_ALIGN_UP((ENGMALLOC_FIELD(pEngineDB->pEngineDescriptors[i], _SIZE) * 4), sizeof(void *));

        DBG_PRINT_STRING_VALUE(DEBUGLEVEL_TRACEINFO, "NVRM: engine tag ", tag);
        DBG_PRINT_STRING_VALUE(DEBUGLEVEL_TRACEINFO, "NVRM: engine pvt size ", size);
        DBG_PRINT_STRING_PTR(DEBUGLEVEL_TRACEINFO, "NVRM: engine pvt base ", pHalData);

        switch (tag)
        {
            case MC_ENGINE_TAG:
                pHalHwInfo->pMcHalPvtInfo = (VOID_PTR)pHalData;
                break;
            case FB_ENGINE_TAG:
                pHalHwInfo->pFbHalPvtInfo = (VOID_PTR)pHalData;
                break;
            case DAC_ENGINE_TAG:
                pHalHwInfo->pDacHalPvtInfo = (VOID_PTR)pHalData;
                break;
#if 0
            case TMR_ENGINE_TAG:
                pHalHwInfo->pTmrHalPvtInfo = (VOID_PTR)pHalData;
                break;
#endif
            case DMA_ENGINE_TAG:
                pHalHwInfo->pDmaHalPvtInfo = (VOID_PTR)pHalData;
                break;
            case GR_ENGINE_TAG:
                pHalHwInfo->pGrHalPvtInfo = (VOID_PTR)pHalData;
                break;
            case FIFO_ENGINE_TAG:
                pHalHwInfo->pFifoHalPvtInfo = (VOID_PTR)pHalData;
                break;
            case MP_ENGINE_TAG:
                pHalHwInfo->pMpHalPvtInfo = (VOID_PTR)pHalData;
                break;
            case VIDEO_ENGINE_TAG:
                pHalHwInfo->pVideoHalPvtInfo = (VOID_PTR)pHalData;
                break;
            default:
                DBG_PRINT_STRING_VALUE(DEBUGLEVEL_ERRORS, "NVRM: unknown engine tag ", tag);
                break;
        }
        pHalData += size;
    }

    return (RM_OK);
}

//
// allocHalEngineInstMem
//
// Setup HAL engine instance memory areas using info from
// engine descriptor table.
//
RM_STATUS
allocHalEngineInstMem(PHWINFO pDev)
{
    RM_STATUS status;
    U032 i, tag, size, align;
    PHALHWINFO pHalHwInfo = &pDev->halHwInfo;
    PENGINEDB pEngineDB = &pDev->engineDB;
    U032 instance = 0;

    //
    // Start by scanning engine descriptor table for number of ENGINSTMALLOC
    // instructions.
    //
    for (i = 0; i < pEngineDB->numEngineDescriptors; i++)
    {
        if (ENGDECL_FIELD(pEngineDB->pEngineDescriptors[i], _OPCODE) != ENGINSTMALLOC_INSTR)
            continue;

        //
        // Get size/alignment (specified in paragraphs).
        //
        tag = ENGINSTMALLOC_FIELD(pEngineDB->pEngineDescriptors[i], _TAG);
        size = ENGINSTMALLOC_FIELD(pEngineDB->pEngineDescriptors[i], _SIZE);
        align = ENGINSTMALLOC_FIELD(pEngineDB->pEngineDescriptors[i], _ALIGN);
        if (align == 0)
            align = 1;
#ifdef DEBUG
        if (size == 0)
        {
            DBG_PRINT_STRING_VALUE(DEBUGLEVEL_ERRORS, "NVRM: ENGINSTMALLOC has zero size!", tag);
            DBG_BREAKPOINT();
            continue;
        }
#endif

        if (align == 1)
            status = fbAllocInstMem(pDev, &instance, size);
        else
            status = fbAllocInstMemAlign(pDev, &instance, size, align);

        DBG_PRINT_STRING_VALUE(DEBUGLEVEL_TRACEINFO, "NVRM: engine tag ", tag);
        DBG_PRINT_STRING_VALUE(DEBUGLEVEL_TRACEINFO, "NVRM: instance size ", size);
        DBG_PRINT_STRING_VALUE(DEBUGLEVEL_TRACEINFO, "NVRM: instance align ", align);

        //
        // Save instance offset in corresponding engine state.
        // 
        switch (tag)
        {
            case MC_ENGINE_TAG:
                pHalHwInfo->mcInstMem = instance;
                break;
            case FB_ENGINE_TAG:
                pHalHwInfo->fbInstMem = instance;
                break;
            case DAC_ENGINE_TAG:
                pHalHwInfo->dacInstMem = instance;
                break;
#if 0
            case TMR_ENGINE_TAG:
                pHalHwInfo->tmrInstMem = instance;
                break;
#endif
            case DMA_ENGINE_TAG:
                pHalHwInfo->dmaInstMem = instance;
                break;
            case GR_ENGINE_TAG:
                pHalHwInfo->grInstMem = instance;
                break;
            case FIFO_ENGINE_TAG:
                pHalHwInfo->fifoInstMem = instance;
                break;
            case MP_ENGINE_TAG:
                pHalHwInfo->mpInstMem = instance;
                break;
            case VIDEO_ENGINE_TAG:
                pHalHwInfo->videoInstMem = instance;
                break;
            default:
                DBG_PRINT_STRING_VALUE(DEBUGLEVEL_ERRORS, "NVRM: unknown engine tag ", tag);
                break;
        }
    }

    return (RM_OK);
}

//
// freeHalEngineInstMem
//
// Release HAL engine instance memory areas using info from
// engine descriptor table.  This routine really isn't needed
// because the only time it's called is when the device is
// being "destroyed".
//
RM_STATUS
freeHalEngineInstMem(PHWINFO pDev)
{
    U032 i, tag, size;
    PHALHWINFO pHalHwInfo = &pDev->halHwInfo;
    PENGINEDB pEngineDB = &pDev->engineDB;

    //
    // Start by scanning engine descriptor table for number of ENGINSTMALLOC
    // instructions.
    //
    for (i = 0; i < pEngineDB->numEngineDescriptors; i++)
    {
        if (ENGDECL_FIELD(pEngineDB->pEngineDescriptors[i], _OPCODE) != ENGINSTMALLOC_INSTR)
            continue;

        //
        // Get size/alignment (specified in paragraphs).
        //
        tag = ENGINSTMALLOC_FIELD(pEngineDB->pEngineDescriptors[i], _TAG);
        size = ENGINSTMALLOC_FIELD(pEngineDB->pEngineDescriptors[i], _SIZE);
        
        //
        // Save instance offset in corresponding engine state.
        // 
        switch (tag)
        {
            case MC_ENGINE_TAG:
                if (pHalHwInfo->mcInstMem)
                    fbFreeInstMem(pDev, pHalHwInfo->mcInstMem, size);
                break;
            case FB_ENGINE_TAG:
                if (pHalHwInfo->fbInstMem)
                    fbFreeInstMem(pDev, pHalHwInfo->fbInstMem, size);
                break;
            case DAC_ENGINE_TAG:
                if (pHalHwInfo->dacInstMem)
                    fbFreeInstMem(pDev, pHalHwInfo->dacInstMem, size);
                break;
#if 0
            case TMR_ENGINE_TAG:
                if (pHalHwInfo->tmrInstMem)
                    fbFreeInstMem(pDev, pHalHwInfo->tmrInstMem, size);
                break;
#endif
            case DMA_ENGINE_TAG:
                if (pHalHwInfo->dmaInstMem)
                    fbFreeInstMem(pDev, pHalHwInfo->dmaInstMem, size);
                break;
            case GR_ENGINE_TAG:
                if (pHalHwInfo->grInstMem)
                    fbFreeInstMem(pDev, pHalHwInfo->grInstMem, size);
                break;
            case FIFO_ENGINE_TAG:
                if (pHalHwInfo->fifoInstMem)
                    fbFreeInstMem(pDev, pHalHwInfo->fifoInstMem, size);
                break;
            case MP_ENGINE_TAG:
                if (pHalHwInfo->mpInstMem)
                    fbFreeInstMem(pDev, pHalHwInfo->mpInstMem, size);
                break;
            case VIDEO_ENGINE_TAG:
                if (pHalHwInfo->videoInstMem)
                    fbFreeInstMem(pDev, pHalHwInfo->videoInstMem, size);
                break;
            default:
                DBG_PRINT_STRING_VALUE(DEBUGLEVEL_ERRORS, "NVRM: unknown engine tag ", tag);
                break;
        }
    }

    return (RM_OK);
}
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Microsoft Xbox (1.00.4400) [April 2002] [src]\private\ntos\video\nvx\drivers\resman\kernel\hal\nv\haleng.c ===
/***************************************************************************\
|*                                                                           *|
|*        Copyright (c) 1993-2000 NVIDIA, Corp.  All rights reserved.        *|
|*                                                                           *|
|*     NOTICE TO USER:   The source code  is copyrighted under  U.S. and     *|
|*     international laws.   NVIDIA, Corp. of Sunnyvale, California owns     *|
|*     the copyright  and as design patents  pending  on the design  and     *|
|*     interface  of the NV chips.   Users and possessors of this source     *|
|*     code are hereby granted  a nonexclusive,  royalty-free  copyright     *|
|*     and  design  patent license  to use this code  in individual  and     *|
|*     commercial software.                                                  *|
|*                                                                           *|
|*     Any use of this source code must include,  in the user documenta-     *|
|*     tion and  internal comments to the code,  notices to the end user     *|
|*     as follows:                                                           *|
|*                                                                           *|
|*     Copyright (c) 1993-2000  NVIDIA, Corp.    NVIDIA  design  patents     *|
|*     pending in the U.S. and foreign countries.                            *|
|*                                                                           *|
|*     NVIDIA, CORP.  MAKES  NO REPRESENTATION ABOUT  THE SUITABILITY OF     *|
|*     THIS SOURCE CODE FOR ANY PURPOSE.  IT IS PROVIDED "AS IS" WITHOUT     *|
|*     EXPRESS OR IMPLIED WARRANTY OF ANY KIND.  NVIDIA, CORP. DISCLAIMS     *|
|*     ALL WARRANTIES  WITH REGARD  TO THIS SOURCE CODE,  INCLUDING  ALL     *|
|*     IMPLIED   WARRANTIES  OF  MERCHANTABILITY  AND   FITNESS   FOR  A     *|
|*     PARTICULAR  PURPOSE.   IN NO EVENT SHALL NVIDIA, CORP.  BE LIABLE     *|
|*     FOR ANY SPECIAL, INDIRECT, INCIDENTAL,  OR CONSEQUENTIAL DAMAGES,     *|
|*     OR ANY DAMAGES  WHATSOEVER  RESULTING  FROM LOSS OF USE,  DATA OR     *|
|*     PROFITS,  WHETHER IN AN ACTION  OF CONTRACT,  NEGLIGENCE OR OTHER     *|
|*     TORTIOUS ACTION, ARISING OUT  OF OR IN CONNECTION WITH THE USE OR     *|
|*     PERFORMANCE OF THIS SOURCE CODE.                                      *|
|*                                                                           *|
 \***************************************************************************/

/************************** HAL Engine Manager *****************************\
*                                                                           *
* Module: haleng.c                                                          *
*   The HAL engine services are in this module.                             *
*                                                                           *
*****************************************************************************
*                                                                           *
* History:                                                                  *
*                                                                           *
\***************************************************************************/

#include <nv_ref.h>
#include <nvrm.h>
#include <class.h>
#include <gr.h>
#include <nvhal.h>
#include "nvhw.h"

//
// Default per-engine method lists.
//
METHOD tmrDefaultMethods[] =
{
    {mthdNoOperation,               0x0100, 0x0103},
    {mthdSetNotify,                 0x0104, 0x0107},
    {tmrStopTransfer,               0x0108, 0x010b},
    {mthdSetNotifyCtxDma,           0x0180, 0x0183},
    {mthdSetAlarmTime,              0x0300, 0x0307},
    {mthdSetAlarmNotify,            0x030c, 0x030f}
};

extern RM_STATUS grHWMethod(PHWINFO, POBJECT, PMETHOD, U032, U032);

METHOD grDefaultMethods[] =
{
    {grHWMethod,                    0x0100, 0x1fff},
};

//
// EngineInfos[]
//
// This table contains the per-engine stuff needed for
// class object operations such as create, destroy, and method
// handling.
//
ENGINEINFO EngineInfos[] =
{
    { MC_ENGINE_TAG, NULL, 0, NULL, NULL },

    { FB_ENGINE_TAG, NULL, 0, NULL, NULL },

    { DMA_ENGINE_TAG, NULL, 0, dmaCreate, dmaDelete },

    { FIFO_ENGINE_TAG, 0, NULL, NULL, },

    { TMR_ENGINE_TAG,
      tmrDefaultMethods, sizeof (tmrDefaultMethods) / sizeof (METHOD),
      tmrCreateTimer, tmrDeleteTimer },

    { GR_ENGINE_TAG,
      grDefaultMethods, sizeof (grDefaultMethods) / sizeof (METHOD),
      grCreateObj, grDestroyObj },

    { DAC_ENGINE_TAG, 
      NULL, 0,
      dacCreateObj, dacDestroyObj },

    { MP_ENGINE_TAG,
      NULL, 0,
      mpCreateObj, mpDestroyObj },

    { VIDEO_ENGINE_TAG,
      NULL, 0,
      videoCreateObj, videoDestroyObj },

    // NV_CLASS pseudo engine
    { CLASS_PSEUDO_ENGINE_TAG,
      NULL, 0,
      nopCreate, classDeleteWellKnownObjects },

    { NO_ENGINE, NULL, 0, NULL, NULL },
};

#define NUM_ENGINEINFOS         (sizeof (EngineInfos) / sizeof (ENGINEINFO))

U032 nvClassEngineDescriptor = MKENGDECL(CLASS_PSEUDO_ENGINE_TAG, 0, 0);
U032 nvNoEngineDescriptor = MKENGDECL(NO_ENGINE, 0, 0);

//
// engineGetInfo
//
// Given an engine tag, return pointers to the corresponding
// ENGINEINFO and ENGINEDESCRIPTOR data.
//
RM_STATUS
engineGetInfo(PENGINEDB pEngineDB, U032 engineTag, PENGINEINFO *pEngineInfo, PENGINEDESCRIPTOR *pEngineDecl)
{
    U032 i;

    for (i = 0; i < NUM_ENGINEINFOS; i++)
    {
        if (EngineInfos[i].Tag == engineTag)
        {
            *pEngineInfo = &EngineInfos[i];
            break;
        }
    }

    if (i == NUM_ENGINEINFOS)
    {
        if (engineTag == NO_ENGINE)
            *pEngineInfo = 0;
        else
        {
            *pEngineInfo = 0; *pEngineDecl = 0;
            return RM_ERROR;
        }
    }

    for (i = 0; i < pEngineDB->numEngineDescriptors; i++)
    {
        if ((ENGDECL_FIELD(pEngineDB->pEngineDescriptors[i], _OPCODE) == ENGDECL_INSTR) &&
            (engineTag == ENGDECL_FIELD(pEngineDB->pEngineDescriptors[i], _TAG)))
        {
            *pEngineDecl = &pEngineDB->pEngineDescriptors[i];
            return RM_OK;
        }
    }

    //
    // Special case the NV_CLASS engine (used to create the
    // master classes in the fifo db for method-driven object
    // instantiation).
    //
    if (engineTag == CLASS_PSEUDO_ENGINE_TAG)
    {
        *pEngineDecl = &nvClassEngineDescriptor;
        return RM_OK;
    }

    //
    // Special case classes that bypass the engine info stuff
    // entirely (e.g. NV01_MEMOR_LOCAL_USER).  These classes are
    // typically instantiated by separate API calls (i.e. !RmAllocObject).
    if (engineTag == NO_ENGINE)
    {
        *pEngineDecl = &nvNoEngineDescriptor;
        return RM_OK;
    }


    *pEngineDecl = 0x0;
    return RM_ERROR;
}

//
// engineGetBufferSize
//
// This routine walks through the engine descriptor table to
// find a descriptor for the specified engine/type that lets
// us know how much (if any) "scratch" memory the resource
// manager should allocate/free.
//
U032
engineGetBufferSize(PENGINEDB pEngineDB, U032 tag, U032 type)
{
    U032 i;

    for (i = 0; i < pEngineDB->numEngineDescriptors; i++)
    {
        if ((ENGDECL_FIELD(pEngineDB->pEngineDescriptors[i], _OPCODE) == ENGMALLOC_INSTR) &&
            (ENGMALLOC_FIELD(pEngineDB->pEngineDescriptors[i], _TAG) == tag) &&
            (ENGMALLOC_FIELD(pEngineDB->pEngineDescriptors[i], _TYPE) == type))
        {
            return (ENGMALLOC_FIELD(pEngineDB->pEngineDescriptors[i], _SIZE) * 4);
        }
    }

    return (0);
}

//
// engineGetInstMemSize
// 
// This routine walks through the engine descriptor table to
// find a descriptor for the specified engine that lets us 
// know how much (if any) instance memory the resource 
// manager should allocate/free.
//
U032
engineGetInstMemSize(PENGINEDB pEngineDB, U032 tag)
{
    U032 i;

    for (i = 0; i < pEngineDB->numEngineDescriptors; i++)
    {
        if ((ENGDECL_FIELD(pEngineDB->pEngineDescriptors[i], _OPCODE) == ENGINSTMALLOC_INSTR) &&
            (ENGINSTMALLOC_FIELD(pEngineDB->pEngineDescriptors[i], _TAG) == tag))
        {
            return (ENGINSTMALLOC_FIELD(pEngineDB->pEngineDescriptors[i], _SIZE) * 4);
        }
    }

    return (0);
}
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Microsoft Xbox (1.00.4400) [April 2002] [src]\private\ntos\video\nvx\drivers\resman\kernel\hal\nv\halrm.c ===
/***************************************************************************\
|*                                                                           *|
|*        Copyright (c) 1993-2000 NVIDIA, Corp.  All rights reserved.        *|
|*                                                                           *|
|*     NOTICE TO USER:   The source code  is copyrighted under  U.S. and     *|
|*     international laws.   NVIDIA, Corp. of Sunnyvale, California owns     *|
|*     the copyright  and as design patents  pending  on the design  and     *|
|*     interface  of the NV chips.   Users and possessors of this source     *|
|*     code are hereby granted  a nonexclusive,  royalty-free  copyright     *|
|*     and  design  patent license  to use this code  in individual  and     *|
|*     commercial software.                                                  *|
|*                                                                           *|
|*     Any use of this source code must include,  in the user documenta-     *|
|*     tion and  internal comments to the code,  notices to the end user     *|
|*     as follows:                                                           *|
|*                                                                           *|
|*     Copyright (c) 1993-2000  NVIDIA, Corp.    NVIDIA  design  patents     *|
|*     pending in the U.S. and foreign countries.                            *|
|*                                                                           *|
|*     NVIDIA, CORP.  MAKES  NO REPRESENTATION ABOUT  THE SUITABILITY OF     *|
|*     THIS SOURCE CODE FOR ANY PURPOSE.  IT IS PROVIDED "AS IS" WITHOUT     *|
|*     EXPRESS OR IMPLIED WARRANTY OF ANY KIND.  NVIDIA, CORP. DISCLAIMS     *|
|*     ALL WARRANTIES  WITH REGARD  TO THIS SOURCE CODE,  INCLUDING  ALL     *|
|*     IMPLIED   WARRANTIES  OF  MERCHANTABILITY  AND   FITNESS   FOR  A     *|
|*     PARTICULAR  PURPOSE.   IN NO EVENT SHALL NVIDIA, CORP.  BE LIABLE     *|
|*     FOR ANY SPECIAL, INDIRECT, INCIDENTAL,  OR CONSEQUENTIAL DAMAGES,     *|
|*     OR ANY DAMAGES  WHATSOEVER  RESULTING  FROM LOSS OF USE,  DATA OR     *|
|*     PROFITS,  WHETHER IN AN ACTION  OF CONTRACT,  NEGLIGENCE OR OTHER     *|
|*     TORTIOUS ACTION, ARISING OUT  OF OR IN CONNECTION WITH THE USE OR     *|
|*     PERFORMANCE OF THIS SOURCE CODE.                                      *|
|*                                                                           *|
 \***************************************************************************/

/************************** HAL/RM Interfaces ******************************\
*                                                                           *
* Module: halrm.c                                                           *
*   The Resource Manager service routines for the HAL are in this module.   *
*                                                                           *
*****************************************************************************
*                                                                           *
* History:                                                                  *
*                                                                           *
\***************************************************************************/

//
// halrm.c
//
// RM service entry points needed by HAL.
//

#include <nv_ref.h>
#include <nvrm.h>
#include <nvhal.h>
#include "nvhw.h"
#include <i2c.h>


//
// nvHalRmPrintString
//
//
VOID nvHalRmPrintString(VOID *pDeviceId, U032 debugLevel, char* str)
{
   	PHWINFO pDev = (PHWINFO)pDeviceId;
	DBG_PRINT_STRING(debugLevel, str);
}

//
// nvHalRmPrintValue
//
//
VOID nvHalRmPrintValue(VOID *pDeviceId, U032 debugLevel, U032 value)
{
   	PHWINFO pDev = (PHWINFO)pDeviceId;
  	DBG_PRINT_VALUE(debugLevel, value);
}

//
// nvHalRmPrintStringValue
//
//
VOID nvHalRmPrintStringValue(VOID *pDeviceId, U032 debugLevel, char* str, U032 value)
{
  	PHWINFO pDev = (PHWINFO)pDeviceId;
    DBG_PRINT_STRING_VALUE(debugLevel, str, value);
}

//
// nvHalRmPrintStringPtr
//
//
VOID nvHalRmPrintStringPtr(VOID *pDeviceId, U032 debugLevel, char* str, VOID* value)
{
   	PHWINFO pDev = (PHWINFO)pDeviceId;
	DBG_PRINT_STRING_PTR(debugLevel, str, value);
}

//
// nvHalRmPrintStringVal64
//
//
VOID nvHalRmPrintStringVal64(VOID *pDeviceId, U032 debugLevel, char* str, U064 value)
{
   	PHWINFO pDev = (PHWINFO)pDeviceId;
    DBG_PRINT_STRING_VAL64(debugLevel, str, value);
}

//
// nvHalRmRegWr08
//
//
VOID nvHalRmRegWr08(VOID *pDeviceId, U032 offset, U008 value)
{
	PHWINFO pDev = (PHWINFO)pDeviceId;
	REG_WR08(offset, value);
}

//
// nvHalRmRegRd08
//
//
U008 nvHalRmRegRd08(VOID *pDeviceId, U032 offset)
{
	PHWINFO pDev = (PHWINFO)pDeviceId;
	return (REG_RD08(offset));
}

//
// nvHalRmRegWr32
//
//
VOID nvHalRmRegWr32(VOID *pDeviceId, U032 offset, U032 value)
{
	PHWINFO pDev = (PHWINFO)pDeviceId;
	REG_WR32(offset, value);
}

//
// nvHalRmRegRd32
//
//
U032 nvHalRmRegRd32(VOID *pDeviceId, U032 offset)
{
	PHWINFO pDev = (PHWINFO)pDeviceId;
	return (REG_RD32(offset));
}

//
// nvHalRmBreakPoint
//
//
VOID nvHalRmBreakPoint(VOID *pDeviceId)
{
   	PHWINFO pDev = (PHWINFO)pDeviceId;
	DBG_BREAKPOINT();
}

//
// nvHalRmDelay
//
//
RM_STATUS nvHalRmDelay(VOID *pDeviceId, U032 milliSeconds)
{
    PHWINFO pDev = (PHWINFO)pDeviceId;
	return (osDelay(milliSeconds));
}

//
// nvHalRmServiceIntr
//
// Service a pending condition on the specified engine on the
// specified device.
//
RM_STATUS
nvHalRmServiceIntr(VOID *pDeviceId, U032 engineTag)
{
    PHWINFO pDev = (PHWINFO)pDeviceId;

    switch (engineTag)
    {
        case MC_ENGINE_TAG:
            (void) mcService(pDev);
            break;
        case GR_ENGINE_TAG:
            (void) grService(pDev);
            break;
        case FIFO_ENGINE_TAG:
            (void) fifoService(pDev);
            break;
        case DAC_ENGINE_TAG:
            (void) VBlank(pDev);
            break;
        default:
            break;
    };
    return (RM_OK);
}

//
// nvHalRmI2cRead
//
// Issue i2c bus read request on behalf of the HAL.
//
RM_STATUS nvHalRmI2cRead(VOID *pDeviceId, U032 portID, U008 ChipAdr, U016 AdrLen, U008 *Adr, U016 DataLen, U008 *Data)
{
    PHWINFO pDev = (PHWINFO)pDeviceId;
    U032    Head =0; // for now, always use head 0
    return (i2cRead(pDev, Head, portID, ChipAdr, AdrLen, Adr, DataLen, Data));
}

//
// nvHalRmI2cWrite
//
// Issue i2c bus write request on behalf of the HAL.
//
RM_STATUS nvHalRmI2cWrite(VOID *pDeviceId, U032 portID, U008 ChipAdr, U016 AdrLen, U008 *Adr, U016 DataLen, U008 *Data)
{
    PHWINFO pDev = (PHWINFO)pDeviceId;
    U032    Head =0; // for now, always use head 0

    return (i2cWrite(pDev, Head, portID, ChipAdr, AdrLen, Adr, DataLen, Data));
}

//
// RM/HAL services table.
//
HALRMFUNCS_000 HalRmFuncs_000 =
{
    // interrupt service entry point
    nvHalRmServiceIntr,

    // debug print routines
    nvHalRmPrintString,
    nvHalRmPrintValue,
    nvHalRmPrintStringValue,
    nvHalRmPrintStringPtr,
    nvHalRmPrintStringVal64,

    // register io entry points
    nvHalRmRegWr08,
    nvHalRmRegRd08,

    nvHalRmRegWr32,
    nvHalRmRegRd32,

    nvHalRmBreakPoint,
    nvHalRmDelay,

    nvHalRmI2cRead,
    nvHalRmI2cWrite,
};
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Microsoft Xbox (1.00.4400) [April 2002] [src]\private\ntos\video\nvx\drivers\resman\kernel\inc\all_incs.h ===
#ifndef _ALL_INCS_H
#define _ALL_INCS_H

#include "nv32.h"
//#include "nvhw.h"
//#include "nvrmwin.h"
//#include "class.h"
//#include "gr.h"
//#include "dma.h"
//#include "modular.h"
//#include "mp.h"
//#include "tmr.h"
//#include "fifo.h"
//#include "au.h"
//#include "vnvrmd.h"
//#include "oswin.h"
#include "nvtypes.h"
#include "nv_ref.h"
#include "nvromdat.h"
#include "class.h"
// #include "nv1a_ref.h"
// #include "nv1b_ref.h"
// #include "nv1c_ref.h"
// #include "nv2_ref.h"
// #include "nv3_ref.h"

//#include "nvhw.h"

#include "fifo.h"
#include "gr.h"
#include "modular.h"
#include "control.h"
#include "cursor.h"
#include "dac.h"
#include "dma.h"
#include "dmapush.h"
#include "fb.h"
#include "mc.h"
#include "mp.h"
#include "vid.h"
//#include "nvrm.h"
#include "os.h"
#include "state.h"
#include "tmr.h"
#include "tv.h"
#include "vblank.h"
#include "vga.h"
#include "btree.h"

#ifndef LEGACY_ARCH
#include "client.h"
#endif

#ifdef NEWWIN31
#include "client.h"
#endif

#include "arb_fifo.h"

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Microsoft Xbox (1.00.4400) [April 2002] [src]\private\ntos\video\nvx\drivers\resman\kernel\hal\nv\halwrap.c ===
/***************************************************************************\
|*                                                                           *|
|*        Copyright (c) 1993-2000 NVIDIA, Corp.  All rights reserved.        *|
|*                                                                           *|
|*     NOTICE TO USER:   The source code  is copyrighted under  U.S. and     *|
|*     international laws.   NVIDIA, Corp. of Sunnyvale, California owns     *|
|*     the copyright  and as design patents  pending  on the design  and     *|
|*     interface  of the NV chips.   Users and possessors of this source     *|
|*     code are hereby granted  a nonexclusive,  royalty-free  copyright     *|
|*     and  design  patent license  to use this code  in individual  and     *|
|*     commercial software.                                                  *|
|*                                                                           *|
|*     Any use of this source code must include,  in the user documenta-     *|
|*     tion and  internal comments to the code,  notices to the end user     *|
|*     as follows:                                                           *|
|*                                                                           *|
|*     Copyright (c) 1993-2000  NVIDIA, Corp.    NVIDIA  design  patents     *|
|*     pending in the U.S. and foreign countries.                            *|
|*                                                                           *|
|*     NVIDIA, CORP.  MAKES  NO REPRESENTATION ABOUT  THE SUITABILITY OF     *|
|*     THIS SOURCE CODE FOR ANY PURPOSE.  IT IS PROVIDED "AS IS" WITHOUT     *|
|*     EXPRESS OR IMPLIED WARRANTY OF ANY KIND.  NVIDIA, CORP. DISCLAIMS     *|
|*     ALL WARRANTIES  WITH REGARD  TO THIS SOURCE CODE,  INCLUDING  ALL     *|
|*     IMPLIED   WARRANTIES  OF  MERCHANTABILITY  AND   FITNESS   FOR  A     *|
|*     PARTICULAR  PURPOSE.   IN NO EVENT SHALL NVIDIA, CORP.  BE LIABLE     *|
|*     FOR ANY SPECIAL, INDIRECT, INCIDENTAL,  OR CONSEQUENTIAL DAMAGES,     *|
|*     OR ANY DAMAGES  WHATSOEVER  RESULTING  FROM LOSS OF USE,  DATA OR     *|
|*     PROFITS,  WHETHER IN AN ACTION  OF CONTRACT,  NEGLIGENCE OR OTHER     *|
|*     TORTIOUS ACTION, ARISING OUT  OF OR IN CONNECTION WITH THE USE OR     *|
|*     PERFORMANCE OF THIS SOURCE CODE.                                      *|
|*                                                                           *|
 \***************************************************************************/

/************************* HAL Interface Wrappers **************************\
*                                                                           *
* Module: halwrap.c                                                         *
*                                                                           *
* This source module contains wrappers around the HAL interfaces that       *
* are useful for packaging up arguments into the proper revision-specific   *
* data structure.                                                           *
*                                                                           *
*****************************************************************************
*                                                                           *
* History:                                                                  *
*                                                                           *
\***************************************************************************/

#include <nvrm.h>

#undef  nvAddr
#undef  ChipBugs
#define ChipBugs pHalHwInfo->pMcHalInfo->ChipBugs

//-------------------------------------------------------------------
// MC interface wrappers
//-------------------------------------------------------------------
RM_STATUS
nvHalMcControl(PHWINFO pDev, U032 cmd)
{
    MCCONTROLARG_000 mcControlArg;

    mcControlArg.id = MC_CONTROL_000;
    mcControlArg.cmd = cmd;
    mcControlArg.pHalHwInfo = &pDev->halHwInfo;

    return (HALFUNC_000(_nvHalMcControl)((VOID *)&mcControlArg));
}

RM_STATUS
nvHalMcPower(PHWINFO pDev, U032 newLevel, U032 oldLevel)
{
    MCPOWERARG_000 mcPowerArg;

    DBG_PRINT_STRING_VALUE(DEBUGLEVEL_TRACEINFO, "NVRM: nvHalMcPower oldLevel ", oldLevel);
    DBG_PRINT_STRING_VALUE(DEBUGLEVEL_TRACEINFO, "NVRM: nvHalMcPower newLevel ", newLevel);

    mcPowerArg.id = MC_POWER_000;
    mcPowerArg.newLevel = newLevel;
    mcPowerArg.oldLevel = oldLevel;
    mcPowerArg.pHalHwInfo = &pDev->halHwInfo;

    return (HALFUNC_000(_nvHalMcPower)((VOID *)&mcPowerArg));
}

//-------------------------------------------------------------------
// Fifo interface wrappers
//-------------------------------------------------------------------
RM_STATUS
nvHalFifoControl(PHWINFO pDev, U032 cmd)
{
    FIFOCONTROLARG_000 fifoControlArg;

    fifoControlArg.id = FIFO_CONTROL_000;
    fifoControlArg.cmd = cmd;
    fifoControlArg.pHalHwInfo = &pDev->halHwInfo;

    return (HALFUNC_000(_nvHalFifoControl)((VOID *)&fifoControlArg));
}

RM_STATUS
nvHalFifoAllocPio(PHWINFO pDev, U032 chid, U032 instance)
{
    FIFOALLOCPIOARG_000 fifoAllocArg;

    fifoAllocArg.id = FIFO_ALLOC_PIO_000;
    fifoAllocArg.chid = chid;
    fifoAllocArg.instance = instance;
    fifoAllocArg.pHalHwInfo = &pDev->halHwInfo;

    return (HALFUNC_000(_nvHalFifoAllocPio)((VOID *)&fifoAllocArg));
}

RM_STATUS
nvHalFifoAllocDma(PHWINFO pDev, U032 chid, U032 instance, U032 dmaInstance, U032 fetchTrigger, U032 fetchSize, U032 fetchRequests)
{
    FIFOALLOCDMAARG_000 fifoAllocArg;

    fifoAllocArg.id = FIFO_ALLOC_DMA_000;
    fifoAllocArg.chid = chid;
    fifoAllocArg.instance = instance;
    fifoAllocArg.dmaInstance = dmaInstance;
    fifoAllocArg.fetchTrigger = fetchTrigger;
    fifoAllocArg.fetchSize = fetchSize;
    fifoAllocArg.fetchRequests = fetchRequests;
    fifoAllocArg.pHalHwInfo = &pDev->halHwInfo;

    return (HALFUNC_000(_nvHalFifoAllocDma)((VOID *)&fifoAllocArg));
}

RM_STATUS
nvHalFifoFree(PHWINFO pDev, U032 chid, U032 instance)
{
    FIFOFREEARG_000 fifoFreeArg;

    DBG_PRINT_STRING_VALUE(DEBUGLEVEL_TRACEINFO, "nvHalFifoFree: chid ", chid);

    fifoFreeArg.id = FIFO_FREE_000;
    fifoFreeArg.chid = chid;
    fifoFreeArg.instance = instance;
    fifoFreeArg.pHalHwInfo = &pDev->halHwInfo;

    return (HALFUNC_000(_nvHalFifoFree)((VOID *)&fifoFreeArg));
}

RM_STATUS
nvHalFifoGetExceptionData(PHWINFO pDev, PFIFOEXCEPTIONDATA pFifoExceptionData)
{
    FIFOGETEXCEPTIONDATAARG_000 fifoGetExceptionDataArg;

    fifoGetExceptionDataArg.id = FIFO_GET_EXCEPTION_DATA_000;
    fifoGetExceptionDataArg.pExceptionData = pFifoExceptionData;
    fifoGetExceptionDataArg.pHalHwInfo = &pDev->halHwInfo;
    
    return (HALFUNC_000(_nvHalFifoGetExceptionData)((VOID *)&fifoGetExceptionDataArg));
}

RM_STATUS
nvHalFifoService(PHWINFO pDev, U032 intr, PFIFOEXCEPTIONDATA pFifoExceptionData)
{
    FIFOSERVICEARG_000 fifoServiceArg;

    fifoServiceArg.id = FIFO_SERVICE_000;
    fifoServiceArg.intr = intr;
    fifoServiceArg.pExceptionData = pFifoExceptionData;
    fifoServiceArg.pHalHwInfo = &pDev->halHwInfo;
    
    return (HALFUNC_000(_nvHalFifoService)((VOID *)&fifoServiceArg));
}

RM_STATUS
nvHalFifoAccess(PHWINFO pDev, U032 cmd, PFIFOACCESSINFO pFifoAccessInfo)
{
    FIFOACCESSARG_000 fifoAccessArg;

    fifoAccessArg.id = FIFO_ACCESS_000;
    fifoAccessArg.cmd = cmd;
    fifoAccessArg.pAccessInfo = pFifoAccessInfo;
    fifoAccessArg.pHalHwInfo = &pDev->halHwInfo;

    return (HALFUNC_000(_nvHalFifoAccess)((VOID *)&fifoAccessArg));
}

RM_STATUS
nvHalFifoHashAdd(PHWINFO pDev, U032 entry, U032 handle, U032 chid, U032 instance, U032 engine)
{
    FIFOHASHADDARG_000 fifoHashAddArg;

    fifoHashAddArg.id = FIFO_HASH_ADD_000;
    fifoHashAddArg.entry = entry;
    fifoHashAddArg.handle = handle;
    fifoHashAddArg.chid = chid;
    fifoHashAddArg.instance = instance;
    fifoHashAddArg.engine = engine;
    fifoHashAddArg.pHalHwInfo = &pDev->halHwInfo;

    return (HALFUNC_000(_nvHalFifoHashAdd)((VOID *)&fifoHashAddArg));
}

RM_STATUS
nvHalFifoHashDelete(PHWINFO pDev, U032 entry)
{
    FIFOHASHDELETEARG_000 fifoHashDeleteArg;

    fifoHashDeleteArg.id = FIFO_HASH_DELETE_000;
    fifoHashDeleteArg.entry = entry;
    fifoHashDeleteArg.pHalHwInfo = &pDev->halHwInfo;

    return (HALFUNC_000(_nvHalFifoHashDelete)((VOID *)&fifoHashDeleteArg));
}

RM_STATUS
nvHalFifoHashFunc(PHWINFO pDev, U032 handle, U032 chid, U032 *result)
{
    FIFOHASHFUNCARG_000 fifoHashFuncArg;
    RM_STATUS status;

    fifoHashFuncArg.id = FIFO_HASH_FUNC_000;
    fifoHashFuncArg.handle = handle;
    fifoHashFuncArg.chid = chid;
    fifoHashFuncArg.pHalHwInfo = &pDev->halHwInfo;

    status = HALFUNC_000(_nvHalFifoHashFunc)((VOID *)&fifoHashFuncArg);
    *result = fifoHashFuncArg.result;

    return (status);
}

RM_STATUS
nvHalFifoHashSearch(PHWINFO pDev, U032 handle, U032 chid, U032 *result)
{
    FIFOHASHSEARCHARG_000 fifoHashSearchArg;
    RM_STATUS status;

    fifoHashSearchArg.id = FIFO_HASH_SEARCH_000;
    fifoHashSearchArg.handle = handle;
    fifoHashSearchArg.chid = chid;
    fifoHashSearchArg.pHalHwInfo = &pDev->halHwInfo;

    status = HALFUNC_000(_nvHalFifoHashSearch)((VOID *)&fifoHashSearchArg);
    *result = fifoHashSearchArg.result;

    return (status);
}

//-------------------------------------------------------------------
// Fb interface wrappers
//-------------------------------------------------------------------
RM_STATUS
nvHalFbControl(PHWINFO pDev, U032 cmd)
{
    FBCONTROLARG_000 fbControlArg;

    DBG_PRINT_STRING_VALUE(DEBUGLEVEL_TRACEINFO, "NVRM: nvHalFbControl cmd ", cmd);

    fbControlArg.id = FB_CONTROL_000;
    fbControlArg.cmd = cmd;
    fbControlArg.pHalHwInfo = &pDev->halHwInfo;

    return (HALFUNC_000(_nvHalFbControl)((VOID *)&fbControlArg));
}

RM_STATUS
nvHalFbAlloc(PHWINFO pDev, PFBALLOCINFO pFbAllocInfo)
{
    FBALLOCARG_000 fbAllocArg;

    DBG_PRINT_STRING_VALUE(DEBUGLEVEL_TRACEINFO, "NVRM: nvHalFbAlloc type ", pFbAllocInfo->type);
    DBG_PRINT_STRING_VALUE(DEBUGLEVEL_TRACEINFO, "                   height ", pFbAllocInfo->height);
    DBG_PRINT_STRING_VALUE(DEBUGLEVEL_TRACEINFO, "                   pitch ", pFbAllocInfo->pitch);
    DBG_PRINT_STRING_VALUE(DEBUGLEVEL_TRACEINFO, "                   size ", pFbAllocInfo->size);

    fbAllocArg.id = FB_ALLOC_000;
    if (pDev->Framebuffer.NoAdjustedPitch) {
        if (pFbAllocInfo->height <= 600)
            fbAllocArg.flags = FB_ALLOC_NO_PITCH_ADJUST;
        else
            fbAllocArg.flags = 0;
    } else
        fbAllocArg.flags = 0;
    fbAllocArg.pAllocInfo = pFbAllocInfo;
    fbAllocArg.pHalHwInfo = &pDev->halHwInfo;

    return (HALFUNC_000(_nvHalFbAlloc)((VOID *)&fbAllocArg));
}

RM_STATUS
nvHalFbFree(PHWINFO pDev, U032 hwResId)
{
    FBFREEARG_000 fbFreeArg;

    DBG_PRINT_STRING_VALUE(DEBUGLEVEL_TRACEINFO, "NVRM: nvHalFbFree hwresid ", hwResId);

    fbFreeArg.id = FB_FREE_000;
    fbFreeArg.hwResId = hwResId;
    fbFreeArg.pHalHwInfo = &pDev->halHwInfo;

    return (HALFUNC_000(_nvHalFbFree)((VOID *)&fbFreeArg));
}

RM_STATUS
nvHalFbSetAllocParameters(PHWINFO pDev, PFBALLOCINFO pFbAllocInfo)
{
    FBSETALLOCPARAMSARG_000 fbSetAllocParamsArg;

    fbSetAllocParamsArg.id = FB_SET_ALLOC_PARAMS_000;
    fbSetAllocParamsArg.pAllocInfo = pFbAllocInfo;
    fbSetAllocParamsArg.pHalHwInfo = &pDev->halHwInfo;

    return (HALFUNC_000(_nvHalFbSetAllocParameters)((VOID *)&fbSetAllocParamsArg));
}

RM_STATUS
nvHalFbGetSurfacePitch(PHWINFO pDev, U032 width, U032 bpp, U032 *pitch)
{
    FBGETSURFACEPITCHARG_000 fbGetSurfacePitchArg;
    RM_STATUS status;

    fbGetSurfacePitchArg.id = FB_GET_SURFACE_PITCH_000;
    if (pDev->Framebuffer.NoAdjustedPitch) {
        if (width <= 800)
            fbGetSurfacePitchArg.flags = FB_GET_SURFACE_PITCH_NO_ADJUST;
        else
            fbGetSurfacePitchArg.flags = 0;
    } else
        fbGetSurfacePitchArg.flags = 0;
    fbGetSurfacePitchArg.width = width;
    fbGetSurfacePitchArg.bpp = bpp;
    fbGetSurfacePitchArg.pHalHwInfo = &pDev->halHwInfo;

    status = HALFUNC_000(_nvHalFbGetSurfacePitch)((VOID *)&fbGetSurfacePitchArg);
    *pitch = fbGetSurfacePitchArg.pitch;

    return (status);
}

RM_STATUS
nvHalFbGetSurfaceDimensions(PHWINFO pDev, U032 width, U032 height, U032 bpp, U032 *pitch, U032 *size)
{
    FBGETSURFACEDIMENSIONSARG_000 fbGetSurfaceDimensionsArg;
    RM_STATUS status;

    fbGetSurfaceDimensionsArg.id = FB_GET_SURFACE_DIMENSIONS_000;
    if (pDev->Framebuffer.NoAdjustedPitch) {
        if (width <= 800)
            fbGetSurfaceDimensionsArg.flags = FB_GET_SURFACE_PITCH_NO_ADJUST;
        else
            fbGetSurfaceDimensionsArg.flags = 0;
    } else
        fbGetSurfaceDimensionsArg.flags = 0;
    fbGetSurfaceDimensionsArg.width = width;
    fbGetSurfaceDimensionsArg.height = height;
    fbGetSurfaceDimensionsArg.bpp = bpp;
    fbGetSurfaceDimensionsArg.pHalHwInfo = &pDev->halHwInfo;

    status = HALFUNC_000(_nvHalFbGetSurfaceDimensions)((VOID *)&fbGetSurfaceDimensionsArg);
    *pitch = fbGetSurfaceDimensionsArg.pitch;
    *size  = fbGetSurfaceDimensionsArg.size;

    return (status);
}

RM_STATUS
nvHalFbLoadOverride(PHWINFO pDev, U032 cmd, U032 value)
{
    FBLOADOVERRIDEARG_000 fbLoadOverrideArg;

    fbLoadOverrideArg.id = FB_LOAD_OVERRIDE_000;
    fbLoadOverrideArg.cmd = cmd;
    fbLoadOverrideArg.value = value;
    fbLoadOverrideArg.pHalHwInfo = &pDev->halHwInfo;

    return (HALFUNC_000(_nvHalFbLoadOverride)((VOID *)&fbLoadOverrideArg));
}

//-------------------------------------------------------------------
// Gr interface wrappers
//-------------------------------------------------------------------
RM_STATUS
nvHalGrControl(PHWINFO pDev, U032 cmd)
{
    GRCONTROLARG_000 grControlArg;

    grControlArg.id = GR_CONTROL_000;
    grControlArg.cmd = cmd;
    grControlArg.pHalHwInfo = &pDev->halHwInfo;

    return (HALFUNC_000(_nvHalGrControl)((VOID *)&grControlArg));
}

RM_STATUS
nvHalGrAlloc(PHWINFO pDev, U032 chid, U032 instance, U032 classNum)
{
    GRALLOCARG_000 grAllocArg;

    DBG_PRINT_STRING_VALUE(DEBUGLEVEL_TRACEINFO, "NVRM: nvHalGrAlloc chid ", chid);
    DBG_PRINT_STRING_VALUE(DEBUGLEVEL_TRACEINFO, "NVRM:              instance ", instance);
    DBG_PRINT_STRING_VALUE(DEBUGLEVEL_TRACEINFO, "NVRM:              classNum ", classNum);

    grAllocArg.id = GR_ALLOC_000;
    grAllocArg.classNum = classNum;
    grAllocArg.instance = instance;
    grAllocArg.chid = chid; 
    grAllocArg.pHalHwInfo = &pDev->halHwInfo;

    return (HALFUNC_000(_nvHalGrAlloc)((VOID *)&grAllocArg));
}

RM_STATUS
nvHalGrFree(PHWINFO pDev, U032 chid, U032 instance)
{
    GRFREEARG_000 grFreeArg;

    DBG_PRINT_STRING_VALUE(DEBUGLEVEL_TRACEINFO, "NVRM: nvHalGrFree instance ", instance);
    DBG_PRINT_STRING_VALUE(DEBUGLEVEL_TRACEINFO, "NVRM: nvHalGrFree chid ", chid);

    grFreeArg.id = GR_FREE_000;
    grFreeArg.chid = chid;
    grFreeArg.instance = instance;
    grFreeArg.pHalHwInfo = &pDev->halHwInfo;

    return (HALFUNC_000(_nvHalGrFree)((VOID *)&grFreeArg));
}

RM_STATUS
nvHalGrGetExceptionData(PHWINFO pDev, PGREXCEPTIONDATA pGrExceptionData)
{
    GRGETEXCEPTIONDATAARG_000 grGetExceptionDataArg;

    grGetExceptionDataArg.id = GR_GET_EXCEPTION_DATA_000;
    grGetExceptionDataArg.pExceptionData = pGrExceptionData;
    grGetExceptionDataArg.pHalHwInfo = &pDev->halHwInfo;

    return (HALFUNC_000(_nvHalGrGetExceptionData)((VOID *)&grGetExceptionDataArg));
}

RM_STATUS
nvHalGrService(PHWINFO pDev, U032 intr, PGREXCEPTIONDATA pGrExceptionData)
{
    GRSERVICEARG_000 grServiceArg;

    grServiceArg.id = GR_SERVICE_000;
    grServiceArg.intr = intr;
    grServiceArg.pExceptionData = pGrExceptionData;
    grServiceArg.pHalHwInfo = &pDev->halHwInfo;

    return (HALFUNC_000(_nvHalGrService)((VOID *)&grServiceArg));
}

RM_STATUS
nvHalGrGetNotifyData(PHWINFO pDev, PGRNOTIFYDATA pGrNotifyData)
{
    GRGETNOTIFYDATAARG_000 grGetNotifyDataArg;

    grGetNotifyDataArg.id = GR_GET_NOTIFY_DATA_000;
    grGetNotifyDataArg.pGrNotifyData = pGrNotifyData;
    grGetNotifyDataArg.pHalHwInfo = &pDev->halHwInfo;

    return (HALFUNC_000(_nvHalGrGetNotifyData)((VOID *)&grGetNotifyDataArg));
}

RM_STATUS
nvHalGrSetObjectContext(PHWINFO pDev, U032 andMask, U032 orMask, U032 chid, U032 instance)
{
    GRSETOBJECTCONTEXTARG_000 grSetObjectContextArg;

    grSetObjectContextArg.id = GR_SET_OBJECT_CONTEXT_000;
    grSetObjectContextArg.andMask = andMask;
    grSetObjectContextArg.orMask = orMask;
    grSetObjectContextArg.instance = instance;
    grSetObjectContextArg.chid = chid;
    grSetObjectContextArg.pHalHwInfo = &pDev->halHwInfo;

    return (HALFUNC_000(_nvHalGrSetObjectContext)((VOID *)&grSetObjectContextArg));
}

RM_STATUS
nvHalGrLoadOverride(PHWINFO pDev, U032 cmd, U032 value)
{
    GRLOADOVERRIDEARG_000 grLoadOverrideArg;

    grLoadOverrideArg.id = GR_LOAD_OVERRIDE_000;
    grLoadOverrideArg.cmd = cmd;
    grLoadOverrideArg.value = value;
    grLoadOverrideArg.pHalHwInfo = &pDev->halHwInfo;

    return (HALFUNC_000(_nvHalGrLoadOverride)((VOID *)&grLoadOverrideArg));
}

//-------------------------------------------------------------------
// Dma interface wrappers
//-------------------------------------------------------------------
RM_STATUS
nvHalDmaControl(PHWINFO pDev, U032 cmd)
{
    DMACONTROLARG_000 dmaControlArg;

    DBG_PRINT_STRING_VALUE(DEBUGLEVEL_TRACEINFO, "NVRM: nvHalDmaControl cmd ", cmd);

    dmaControlArg.id = DMA_CONTROL_000;
    dmaControlArg.cmd = cmd;
    dmaControlArg.pHalHwInfo = &pDev->halHwInfo;

    return (HALFUNC_000(_nvHalDmaControl)((VOID *)&dmaControlArg));

}

RM_STATUS
nvHalDmaAlloc(PHWINFO pDev, PDMAHALOBJINFO pDmaHalObjInfo)
{
    DMAALLOCARG_000 dmaAllocArg;
    
    dmaAllocArg.id = DMA_ALLOC_000;
    dmaAllocArg.pHalObjInfo = pDmaHalObjInfo;
    dmaAllocArg.pHalHwInfo = &pDev->halHwInfo;

    return (HALFUNC_000(_nvHalDmaAlloc)((VOID *)&dmaAllocArg));
}

RM_STATUS
nvHalDmaFree(PHWINFO pDev, PDMAHALOBJINFO pDmaHalObjInfo)
{
    DMAFREEARG_000 dmaFreeArg;
    
    dmaFreeArg.id = DMA_FREE_000;
    dmaFreeArg.pHalObjInfo = pDmaHalObjInfo;
    dmaFreeArg.pHalHwInfo = &pDev->halHwInfo;

    return (HALFUNC_000(_nvHalDmaFree)((VOID *)&dmaFreeArg));
}

RM_STATUS
nvHalDmaGetInstSize(PHWINFO pDev, PDMAHALOBJINFO pDmaHalObjInfo)
{
    DMAGETINSTSIZEARG_000 dmaGetInstSizeArg;
    
    dmaGetInstSizeArg.id = DMA_GET_INSTSIZE_000;
    dmaGetInstSizeArg.pHalObjInfo = pDmaHalObjInfo;
    dmaGetInstSizeArg.pHalHwInfo = &pDev->halHwInfo;

    return (HALFUNC_000(_nvHalDmaGetInstSize)((VOID *)&dmaGetInstSizeArg));
}

//-------------------------------------------------------------------
// Dac interface wrappers
//-------------------------------------------------------------------
RM_STATUS
nvHalDacControl(PHWINFO pDev, U032 cmd)
{
    DACCONTROLARG_000 dacControlArg;

    DBG_PRINT_STRING_VALUE(DEBUGLEVEL_TRACEINFO, "NVRM: nvHalDacControl cmd ", cmd);

    dacControlArg.id = DAC_CONTROL_000;
    dacControlArg.cmd = cmd;
    dacControlArg.pHalHwInfo = &pDev->halHwInfo;

    return (HALFUNC_000(_nvHalDacControl)((VOID *)&dacControlArg));
}

RM_STATUS
nvHalDacAlloc(PHWINFO pDev, U032 chid, U032 instance, U032 classNum, VOID *pHalObj)
{
    DACALLOCARG_000 dacAllocArg;

    DBG_PRINT_STRING_VALUE(DEBUGLEVEL_TRACEINFO, "nvHalDacAlloc: classNum ", classNum);

    dacAllocArg.id = DAC_ALLOC_000;
    dacAllocArg.chid = chid;
    dacAllocArg.instance = instance;
    dacAllocArg.classNum = classNum;
    dacAllocArg.pHalObjInfo = pHalObj;
    dacAllocArg.pHalHwInfo = &pDev->halHwInfo;

    return (HALFUNC_000(_nvHalDacAlloc)((VOID *)&dacAllocArg));
}

RM_STATUS
nvHalDacFree(PHWINFO pDev, U032 chid, U032 instance, U032 classNum, VOID *pHalObj)
{
    DACFREEARG_000 dacFreeArg;

    DBG_PRINT_STRING_VALUE(DEBUGLEVEL_TRACEINFO, "nvHalDacFree: classNum ", classNum);

    dacFreeArg.id = DAC_FREE_000;
    dacFreeArg.chid = chid;
    dacFreeArg.instance = instance;
    dacFreeArg.classNum = classNum;
    dacFreeArg.pHalObjInfo = pHalObj;
    dacFreeArg.pHalHwInfo = &pDev->halHwInfo;

    return (HALFUNC_000(_nvHalDacFree)((VOID *)&dacFreeArg));
}

RM_STATUS
nvHalDacSetStartAddr(PHWINFO pDev, U032 startAddr, VOID *pHalObj)
{
    DACSETSTARTADDRARG_000 dacSetStartAddrArg;

    dacSetStartAddrArg.id = DAC_SET_START_ADDR_000;
    dacSetStartAddrArg.startAddr = startAddr;
    dacSetStartAddrArg.pHalObjInfo = pHalObj;
    dacSetStartAddrArg.pHalHwInfo = &pDev->halHwInfo;

    return (HALFUNC_000(_nvHalDacSetStartAddr)((VOID *)&dacSetStartAddrArg));
}

RM_STATUS
nvHalDacProgramMClk(PHWINFO pDev)
{
    DACPROGRAMMCLKARG_000   dacProgramMClkArg;

    dacProgramMClkArg.id = DAC_PROGRAMMCLK_000;
    dacProgramMClkArg.pHalHwInfo = &pDev->halHwInfo;

    return (HALFUNC_000(_nvHalDacProgramMClk)((VOID *)&dacProgramMClkArg));
}

RM_STATUS
nvHalDacProgramNVClk(PHWINFO pDev)
{
    DACPROGRAMNVCLKARG_000  dacProgramNVClkArg;

    dacProgramNVClkArg.id = DAC_PROGRAMNVCLK_000;
    dacProgramNVClkArg.pHalHwInfo = &pDev->halHwInfo;

    return (HALFUNC_000(_nvHalDacProgramNVClk)((VOID *)&dacProgramNVClkArg));
}

RM_STATUS
nvHalDacProgramPClk(PHWINFO pDev, U032 PixelClock, VOID *pHalObj)
{
    DACPROGRAMPCLKARG_000   dacProgramPClkArg;

    dacProgramPClkArg.id = DAC_PROGRAMPCLK_000;
    dacProgramPClkArg.pHalHwInfo = &pDev->halHwInfo;
    dacProgramPClkArg.pHalObjInfo = pHalObj;
    dacProgramPClkArg.PixelClock = PixelClock;

    return (HALFUNC_000(_nvHalDacProgramPClk)((VOID *)&dacProgramPClkArg));
}

RM_STATUS
nvHalDacProgramCursorImage(PHWINFO pDev, U032 startAddr, U032 asi,
                           U032 width, U032 height, U032 colorFormat, VOID *pHalObj)
{
    DACPROGRAMCURSORARG_000     dacProgramCursorImgArg;
    
    dacProgramCursorImgArg.id = DAC_PROGRAMCURSOR_000;
    dacProgramCursorImgArg.pHalHwInfo = &pDev->halHwInfo;
    dacProgramCursorImgArg.pHalObjInfo = pHalObj;
    dacProgramCursorImgArg.startAddr = startAddr;
    dacProgramCursorImgArg.asi = asi;
    dacProgramCursorImgArg.width = width;
    dacProgramCursorImgArg.height = height;
    dacProgramCursorImgArg.colorFormat = colorFormat;

    return (HALFUNC_000(_nvHalDacProgramCursorImage)((VOID *)&dacProgramCursorImgArg));
}

RM_STATUS
nvHalDacGetRasterPosition(PHWINFO pDev, U016 *result, VOID *pHalObj)
{
    DACRASTERPOSARG_000    dacRasterPosArg;
    RM_STATUS status;

    dacRasterPosArg.id = DAC_RASTERPOS_000;
    dacRasterPosArg.pHalHwInfo = &pDev->halHwInfo;
    dacRasterPosArg.pHalObjInfo = pHalObj;

    // fills in dacRasterPosArg.result
    status = HALFUNC_000(_nvHalDacGetRasterPosition)((VOID *)&dacRasterPosArg);

    *result = dacRasterPosArg.result;

    return status;
}

RM_STATUS
nvHalDacValidateArbSettings(PHWINFO pDev, U032 bpp, U032 video_enabled, U032 mport_enabled, U032 vclk, U032 *result)
{
    DACVALIDATEARBSETTINGSARG_000   dacValidateArbSettingsArg;
    RM_STATUS status;

    dacValidateArbSettingsArg.id = DAC_VALIDATEARBSETTINGS_000;
    dacValidateArbSettingsArg.pHalHwInfo = &pDev->halHwInfo;
    dacValidateArbSettingsArg.bpp = bpp;
    dacValidateArbSettingsArg.video_enabled = video_enabled;
    dacValidateArbSettingsArg.mport_enabled = mport_enabled;
    dacValidateArbSettingsArg.vclk = vclk;

    // fills in dacValidateArbSettingsArg.result
    status = HALFUNC_000(_nvHalDacValidateArbSettings)((VOID *)&dacValidateArbSettingsArg);

    *result = dacValidateArbSettingsArg.result;

    return status;
}

RM_STATUS
nvHalDacUpdateArbSettings(PHWINFO pDev, VOID *pHalObj)
{
    DACUPDATEARBSETTINGSARG_000     dacUpdateArbSettingsArg;
    
    dacUpdateArbSettingsArg.id = DAC_UPDATEARBSETTINGS_000;
    dacUpdateArbSettingsArg.pHalHwInfo = &pDev->halHwInfo;
    dacUpdateArbSettingsArg.pHalObjInfo = pHalObj;

    return (HALFUNC_000(_nvHalDacUpdateArbSettings)((VOID *)&dacUpdateArbSettingsArg));
}

//-------------------------------------------------------------------
// Mediaport interface wrappers
//-------------------------------------------------------------------
RM_STATUS
nvHalMpControl(PHWINFO pDev, U032 cmd)
{
    MPCONTROLARG_000 mpControlArg;

    mpControlArg.id = MP_CONTROL_000;
    mpControlArg.cmd = cmd;
    mpControlArg.pHalHwInfo = &pDev->halHwInfo;

    return (HALFUNC_000(_nvHalMpControl)((VOID *)&mpControlArg));
}

RM_STATUS
nvHalMpAlloc(PHWINFO pDev, U032 chid, U032 instance, U032 classNum, VOID *pHalObj)
{
    MPALLOCARG_000 mpAllocArg;

    mpAllocArg.id = MP_ALLOC_000;
    mpAllocArg.chid = chid;
    mpAllocArg.instance = instance;
    mpAllocArg.classNum = classNum;
    mpAllocArg.pHalObjInfo = pHalObj;
    mpAllocArg.pHalHwInfo = &pDev->halHwInfo;

    return (HALFUNC_000(_nvHalMpAlloc)((VOID *)&mpAllocArg));
}

RM_STATUS
nvHalMpFree(PHWINFO pDev, U032 chid, U032 instance, U032 classNum, VOID *pHalObj)
{
    MPFREEARG_000 mpFreeArg;

    mpFreeArg.id = MP_FREE_000;
    mpFreeArg.chid = chid;
    mpFreeArg.instance = instance;
    mpFreeArg.classNum = classNum;
    mpFreeArg.pHalObjInfo = pHalObj;
    mpFreeArg.pHalHwInfo = &pDev->halHwInfo;

    return (HALFUNC_000(_nvHalMpFree)((VOID *)&mpFreeArg));
}

RM_STATUS
nvHalMpMethod(PHWINFO pDev, U032 classNum, VOID *pHalObj, U032 offset, U032 data, U032 *mthdStatus)
{
    MPMETHODARG_000 mpMethodArg;
    RM_STATUS status;

    mpMethodArg.id = MP_METHOD_000;
    mpMethodArg.classNum = classNum;
    mpMethodArg.pHalObjInfo = pHalObj;
    mpMethodArg.offset = offset;
    mpMethodArg.data = data;
    mpMethodArg.pHalHwInfo = &pDev->halHwInfo;

    status = HALFUNC_000(_nvHalMpMethod)((VOID *)&mpMethodArg);

    if (mthdStatus)
        *mthdStatus = mpMethodArg.mthdStatus;

    return status;
}

RM_STATUS
nvHalMpGetEventStatus(PHWINFO pDev, U032 classNum, VOID *pHalObj, U032 *pEventsPending, V032 *pIntrStatus)
{
    RM_STATUS status;
    MPGETEVENTSTATUSARG_000 mpGetEventStatusArg;

    mpGetEventStatusArg.id = MP_GET_EVENT_STATUS_000;
    mpGetEventStatusArg.classNum = classNum;
    mpGetEventStatusArg.pHalObjInfo = pHalObj;
    mpGetEventStatusArg.events = *pEventsPending;
    mpGetEventStatusArg.pHalHwInfo = &pDev->halHwInfo;

    status = HALFUNC_000(_nvHalMpGetEventStatus)((VOID *)&mpGetEventStatusArg);
    *pEventsPending = mpGetEventStatusArg.events;
    *pIntrStatus = mpGetEventStatusArg.intrStatus;

    return status;
}

RM_STATUS
nvHalMpServiceEvent(PHWINFO pDev, U032 classNum, VOID *pHalObj, U032 eventPending, V032 *pIntrStatus)
{
    RM_STATUS status;
    MPSERVICEEVENTARG_000 mpServiceEventArg;

    mpServiceEventArg.id = MP_SERVICE_EVENT_000;
    mpServiceEventArg.classNum = classNum;
    mpServiceEventArg.pHalObjInfo = pHalObj;
    mpServiceEventArg.event = eventPending;
    mpServiceEventArg.intrStatus = *pIntrStatus;
    mpServiceEventArg.pHalHwInfo = &pDev->halHwInfo;

    status = HALFUNC_000(_nvHalMpServiceEvent)((VOID *)&mpServiceEventArg);
    *pIntrStatus = mpServiceEventArg.intrStatus;

    return status;
}

//-------------------------------------------------------------------
// Video interface wrappers
//-------------------------------------------------------------------
RM_STATUS
nvHalVideoControl(PHWINFO pDev, U032 cmd)
{
    VIDEOCONTROLARG_000 videoControlArg;

    videoControlArg.id = VIDEO_CONTROL_000;
    videoControlArg.cmd = cmd;
    videoControlArg.pHalHwInfo = &pDev->halHwInfo;

    return (HALFUNC_000(_nvHalVideoControl)((VOID *)&videoControlArg));
}

RM_STATUS
nvHalVideoAlloc(PHWINFO pDev, U032 chid, U032 instance, U032 classNum, VOID *pHalObj)
{
    VIDEOALLOCARG_000 videoAllocArg;

    videoAllocArg.id = VIDEO_ALLOC_000;
    videoAllocArg.chid = chid;
    videoAllocArg.instance = instance;
    videoAllocArg.classNum = classNum;
    videoAllocArg.pHalObjInfo = pHalObj;
    videoAllocArg.pHalHwInfo = &pDev->halHwInfo;

    return (HALFUNC_000(_nvHalVideoAlloc)((VOID *)&videoAllocArg));
}

RM_STATUS
nvHalVideoFree(PHWINFO pDev, U032 chid, U032 instance, U032 classNum, VOID *pHalObj)
{
    VIDEOFREEARG_000 videoFreeArg;

    videoFreeArg.id = VIDEO_FREE_000;
    videoFreeArg.chid = chid;
    videoFreeArg.instance = instance;
    videoFreeArg.classNum = classNum;
    videoFreeArg.pHalObjInfo = pHalObj;
    videoFreeArg.pHalHwInfo = &pDev->halHwInfo;

    return (HALFUNC_000(_nvHalVideoFree)((VOID *)&videoFreeArg));
}

RM_STATUS
nvHalVideoMethod(PHWINFO pDev, U032 classNum, VOID *pHalObj, U032 offset, U032 data, U032 *mthdStatus)
{
    VIDEOMETHODARG_000 videoMethodArg;
    RM_STATUS status;

    videoMethodArg.id = VIDEO_METHOD_000;
    videoMethodArg.classNum = classNum;
    videoMethodArg.pHalObjInfo = pHalObj;
    videoMethodArg.offset = offset;
    videoMethodArg.data = data;
    videoMethodArg.pHalHwInfo = &pDev->halHwInfo;

    status = HALFUNC_000(_nvHalVideoMethod)((VOID *)&videoMethodArg);
    if (mthdStatus)
        *mthdStatus = videoMethodArg.mthdStatus;
    
    return (status);
}

RM_STATUS
nvHalVideoGetEventStatus(PHWINFO pDev, U032 classNum, VOID *pHalObj, U032 *pEvents, V032 *pIntrStatus)
{
    RM_STATUS status;
    VIDEOGETEVENTSTATUSARG_000 videoGetEventStatusArg;

    videoGetEventStatusArg.id = VIDEO_GET_EVENT_STATUS_000;
    videoGetEventStatusArg.classNum = classNum;
    videoGetEventStatusArg.pHalObjInfo = pHalObj;
    videoGetEventStatusArg.events = 0;
    videoGetEventStatusArg.pHalHwInfo = &pDev->halHwInfo;

    status = HALFUNC_000(_nvHalVideoGetEventStatus)((VOID *)&videoGetEventStatusArg);
    *pEvents = videoGetEventStatusArg.events;
    *pIntrStatus = videoGetEventStatusArg.intrStatus;

    return status;
}

RM_STATUS
nvHalVideoServiceEvent(PHWINFO pDev, U032 classNum, VOID *pHalObj, U032 events, V032 *pIntrStatus)
{
    RM_STATUS status;
    VIDEOSERVICEEVENTARG_000 videoServiceEventArg;

    videoServiceEventArg.id = VIDEO_SERVICE_EVENT_000;
    videoServiceEventArg.classNum = classNum;
    videoServiceEventArg.pHalObjInfo = pHalObj;
    videoServiceEventArg.events = events;
    videoServiceEventArg.intrStatus = *pIntrStatus;
    videoServiceEventArg.pHalHwInfo = &pDev->halHwInfo;

    status = HALFUNC_000(_nvHalVideoServiceEvent)((VOID *)&videoServiceEventArg);
    *pIntrStatus = videoServiceEventArg.intrStatus;

    return status;
}
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Microsoft Xbox (1.00.4400) [April 2002] [src]\private\ntos\video\nvx\drivers\resman\kernel\hal\nv20\halnv20.c ===
/***************************************************************************\
|*                                                                           *|
|*        Copyright (c) 1993-2000 NVIDIA, Corp.  All rights reserved.        *|
|*                                                                           *|
|*     NOTICE TO USER:   The source code  is copyrighted under  U.S. and     *|
|*     international laws.   NVIDIA, Corp. of Sunnyvale, California owns     *|
|*     the copyright  and as design patents  pending  on the design  and     *|
|*     interface  of the NV chips.   Users and possessors of this source     *|
|*     code are hereby granted  a nonexclusive,  royalty-free  copyright     *|
|*     and  design  patent license  to use this code  in individual  and     *|
|*     commercial software.                                                  *|
|*                                                                           *|
|*     Any use of this source code must include,  in the user documenta-     *|
|*     tion and  internal comments to the code,  notices to the end user     *|
|*     as follows:                                                           *|
|*                                                                           *|
|*     Copyright (c) 1993-2000  NVIDIA, Corp.    NVIDIA  design  patents     *|
|*     pending in the U.S. and foreign countries.                            *|
|*                                                                           *|
|*     NVIDIA, CORP.  MAKES  NO REPRESENTATION ABOUT  THE SUITABILITY OF     *|
|*     THIS SOURCE CODE FOR ANY PURPOSE.  IT IS PROVIDED "AS IS" WITHOUT     *|
|*     EXPRESS OR IMPLIED WARRANTY OF ANY KIND.  NVIDIA, CORP. DISCLAIMS     *|
|*     ALL WARRANTIES  WITH REGARD  TO THIS SOURCE CODE,  INCLUDING  ALL     *|
|*     IMPLIED   WARRANTIES  OF  MERCHANTABILITY  AND   FITNESS   FOR  A     *|
|*     PARTICULAR  PURPOSE.   IN NO EVENT SHALL NVIDIA, CORP.  BE LIABLE     *|
|*     FOR ANY SPECIAL, INDIRECT, INCIDENTAL,  OR CONSEQUENTIAL DAMAGES,     *|
|*     OR ANY DAMAGES  WHATSOEVER  RESULTING  FROM LOSS OF USE,  DATA OR     *|
|*     PROFITS,  WHETHER IN AN ACTION  OF CONTRACT,  NEGLIGENCE OR OTHER     *|
|*     TORTIOUS ACTION, ARISING OUT  OF OR IN CONNECTION WITH THE USE OR     *|
|*     PERFORMANCE OF THIS SOURCE CODE.                                      *|
|*                                                                           *|
 \***************************************************************************/

/******************************** HAL Data *********************************\
*                                                                           *
* Module: HALNV20.C                                                         *
*   The chip dependent HAL data is kept here.                               *
*                                                                           *
*****************************************************************************
*                                                                           *
* History:                                                                  *
*                                                                           *
\***************************************************************************/

#include <nv_ref.h>
#include <nvrm.h>
#include <nv20_ref.h>
#include <nv20_hal.h>
#include <nv20_gr.h>
#include "nvhw.h"

//-----------------------------------------------------------------------
// NV20 HAL engine descriptor table.
//-----------------------------------------------------------------------

//
// Engine default per-object instance memory sizes (16byte units).
//
#define GR_OBJINSTSZ                    0x1

ENGINEDESCRIPTOR NV20_EngineDescriptors[] =
{
    //
    // master controller
    //
    MKENGDECL(MC_ENGINE_TAG, 0, 0),
    MKENGMALLOC(MC_ENGINE_TAG, ENGMALLOC_TYPE_PRIVATE, sizeof (MCHALINFO_NV20)/4),

    //
    // frame buffer
    //
    MKENGDECL(FB_ENGINE_TAG, 0, 0),
    MKENGMALLOC(FB_ENGINE_TAG, ENGMALLOC_TYPE_PRIVATE, sizeof (FBHALINFO_NV20)/4),

    //
    // dac
    //
    MKENGDECL(DAC_ENGINE_TAG, NV_RAMHT_ENGINE_SW, 0),

    //
    // timer
    //
    MKENGDECL(TMR_ENGINE_TAG, NV_RAMHT_ENGINE_SW, 0),

    //
    // dma -- the size of a DMA object is setup via nvHalDmaAlloc
    //
    MKENGDECL(DMA_ENGINE_TAG, NV_RAMHT_ENGINE_SW, 0),

    //
    // graphics
    //
    MKENGDECL(GR_ENGINE_TAG, NV_RAMHT_ENGINE_GRAPHICS, GR_OBJINSTSZ),
    MKENGMALLOC(GR_ENGINE_TAG, ENGMALLOC_TYPE_PRIVATE, sizeof (GRHALINFO_NV20)/4),
    // channel_ctx_table is 32 channels * 4bytes
    MKENGINSTMALLOC(GR_ENGINE_TAG, 1, (32 * 4)/16),

    //
    // fifo
    //
    MKENGDECL(FIFO_ENGINE_TAG, 0, 0),
    MKENGMALLOC(FIFO_ENGINE_TAG, ENGMALLOC_TYPE_PRIVATE, sizeof (FIFOHALINFO_NV20)/4),

    //
    // mediaport
    //
    MKENGDECL(MP_ENGINE_TAG, NV_RAMHT_ENGINE_SW, 0),
    MKENGMALLOC(MP_ENGINE_TAG, ENGMALLOC_TYPE_PRIVATE, sizeof (MPHALINFO_NV20)/4),

    //
    // video
    //
    MKENGDECL(VIDEO_ENGINE_TAG, NV_RAMHT_ENGINE_SW, 0)
};

U032 NV20_NumEngineDescs = (sizeof (NV20_EngineDescriptors) / sizeof (ENGINEDESCRIPTOR));

//-----------------------------------------------------------------------
// NV20 HAL class descriptor table.
//-----------------------------------------------------------------------

//
// The base classes supported for all NV20 Architectures
//
#define NV20_ARCHITECTURE_CLASS_DESCRIPTORS                                                         \
    /* fifo engine classes */                                                                       \
    MKCLASSDECL(FIFO_ENGINE_TAG, 0, NV03_CHANNEL_PIO),                                              \
    MKCLASSINSTMALLOC(1, (NV20_GR_CONTEXT_SIZE/16)),                                                \
    MKCLASSDECL(FIFO_ENGINE_TAG, 0, NV03_CHANNEL_DMA),                                              \
    MKCLASSINSTMALLOC(1, (NV20_GR_CONTEXT_SIZE/16)),                                                \
    MKCLASSDECL(FIFO_ENGINE_TAG, 0, NV04_CHANNEL_PIO),                                              \
    MKCLASSINSTMALLOC(1, (NV20_GR_CONTEXT_SIZE/16)),                                                \
    MKCLASSDECL(FIFO_ENGINE_TAG, 0, NV04_CHANNEL_DMA),                                              \
    MKCLASSINSTMALLOC(1, (NV20_GR_CONTEXT_SIZE/16)),                                                \
    MKCLASSDECL(FIFO_ENGINE_TAG, 0, NV10_CHANNEL_DMA),                                              \
    MKCLASSINSTMALLOC(1, (NV20_GR_CONTEXT_SIZE/16)),                                                \
    MKCLASSDECL(FIFO_ENGINE_TAG, 0, NV20_CHANNEL_DMA),                                              \
    MKCLASSINSTMALLOC(1, (NV20_GR_CONTEXT_SIZE/16)),                                                \
                                                                                                    \
    /* graphics engine classes */                                                                   \
    MKCLASSDECL(GR_ENGINE_TAG, GR_LOCK_CONTEXT_BETA_SOLID, NV01_CONTEXT_BETA),                      \
    MKCLASSDECL(GR_ENGINE_TAG, GR_LOCK_CONTEXT_COLOR_KEY, NV01_CONTEXT_COLOR_KEY),                  \
    MKCLASSDECL(GR_ENGINE_TAG, GR_LOCK_CONTEXT_PATTERN, NV01_CONTEXT_PATTERN),                      \
    MKCLASSDECL(GR_ENGINE_TAG, GR_LOCK_CONTEXT_CLIP, NV01_CONTEXT_CLIP_RECTANGLE),                  \
    MKCLASSDECL(GR_ENGINE_TAG, NO_LOCK, NV01_RENDER_SOLID_LIN),                                     \
    MKCLASSDECL(GR_ENGINE_TAG, NO_LOCK, NV01_RENDER_SOLID_TRIANGLE),                                \
    MKCLASSDECL(GR_ENGINE_TAG, NO_LOCK, NV01_IMAGE_BLIT),                                           \
    MKCLASSDECL(GR_ENGINE_TAG, NO_LOCK, NV01_IMAGE_FROM_CPU),                                       \
    MKCLASSDECL(GR_ENGINE_TAG, NO_LOCK, NV1_NULL),                                                  \
                                                                                                    \
    MKCLASSDECL(GR_ENGINE_TAG, NO_LOCK, NV03_STRETCHED_IMAGE_FROM_CPU),                             \
    MKCLASSDECL(GR_ENGINE_TAG, NO_LOCK, NV03_SCALED_IMAGE_FROM_MEMORY),                             \
    MKCLASSDECL(GR_ENGINE_TAG, NO_LOCK, NV03_MEMORY_TO_MEMORY_FORMAT),                              \
    MKCLASSDECL(GR_ENGINE_TAG, GR_LOCK_CONTEXT_ROP, NV03_CONTEXT_ROP),                              \
    MKCLASSDECL(GR_ENGINE_TAG, NO_LOCK, NV03_GDI_RECTANGLE_TEXT),                                   \
    MKCLASSDECL(GR_ENGINE_TAG, GR_LOCK_CONTEXT_SURFACES_2D, NV03_CONTEXT_SURFACE_2D_DESTINATION),   \
    MKCLASSDECL(GR_ENGINE_TAG, GR_LOCK_CONTEXT_SURFACES_2D, NV03_CONTEXT_SURFACE_2D_SOURCE),        \
    MKCLASSDECL(GR_ENGINE_TAG, GR_LOCK_CONTEXT_SURFACES_3D, NV03_CONTEXT_SURFACE_3D_DEPTH),         \
    MKCLASSDECL(GR_ENGINE_TAG, GR_LOCK_CONTEXT_SURFACES_3D, NV03_CONTEXT_SURFACE_3D_COLOR),         \
                                                                                                    \
    MKCLASSDECL(GR_ENGINE_TAG, GR_LOCK_DVD, NV04_DVD_SUBPICTURE),                                   \
    MKCLASSDECL(GR_ENGINE_TAG, GR_LOCK_CONTEXT_SURFACES_2D, NV04_CONTEXT_SURFACES_2D),              \
    MKCLASSDECL(GR_ENGINE_TAG, GR_LOCK_CONTEXT_PATTERN, NV04_CONTEXT_PATTERN),                      \
    MKCLASSDECL(GR_ENGINE_TAG, NO_LOCK, NV04_GDI_RECTANGLE_TEXT),                                   \
    MKCLASSDECL(GR_ENGINE_TAG, GR_LOCK_CONTEXT_SURFACES_SWIZZLED, NV04_CONTEXT_SURFACE_SWIZZLED),   \
                                                                                                    \
    MKCLASSDECL(GR_ENGINE_TAG, GR_LOCK_CONTEXT_COLOR_KEY, NV04_CONTEXT_COLOR_KEY),                  \
    MKCLASSDECL(GR_ENGINE_TAG, NO_LOCK, NV04_RENDER_SOLID_LIN),                                     \
    MKCLASSDECL(GR_ENGINE_TAG, NO_LOCK, NV04_RENDER_SOLID_TRIANGLE),                                \
    MKCLASSDECL(GR_ENGINE_TAG, NO_LOCK, NV04_IMAGE_BLIT),                                           \
    MKCLASSDECL(GR_ENGINE_TAG, NO_LOCK, NV04_IMAGE_FROM_CPU),                                       \
    MKCLASSDECL(GR_ENGINE_TAG, GR_LOCK_CONTEXT_BETA, NV04_CONTEXT_BETA),                            \
    MKCLASSDECL(GR_ENGINE_TAG, NO_LOCK, NV04_STRETCHED_IMAGE_FROM_CPU),                             \
    MKCLASSDECL(GR_ENGINE_TAG, NO_LOCK, NV04_SCALED_IMAGE_FROM_MEMORY),                             \
                                                                                                    \
    MKCLASSDECL(GR_ENGINE_TAG, NO_LOCK, NV05_SCALED_IMAGE_FROM_MEMORY),                             \
    MKCLASSDECL(GR_ENGINE_TAG, NO_LOCK, NV05_INDEXED_IMAGE_FROM_CPU),                               \
    MKCLASSDECL(GR_ENGINE_TAG, NO_LOCK, NV05_IMAGE_FROM_CPU),                                       \
    MKCLASSDECL(GR_ENGINE_TAG, NO_LOCK, NV05_STRETCHED_IMAGE_FROM_CPU),                             \
                                                                                                    \
    MKCLASSDECL(GR_ENGINE_TAG, NO_LOCK, NV10_CELSIUS_PRIMITIVE),                                    \
    MKCLASSDECL(GR_ENGINE_TAG, GR_LOCK_CONTEXT_SURFACES_2D, NV10_CONTEXT_SURFACES_2D),              \
    MKCLASSDECL(GR_ENGINE_TAG, NO_LOCK, NV10_TEXTURE_FROM_CPU),                                     \
    MKCLASSDECL(GR_ENGINE_TAG, GR_LOCK_DVD, NV10_DVD_SUBPICTURE),                                   \
    MKCLASSDECL(GR_ENGINE_TAG, NO_LOCK, NV10_SCALED_IMAGE_FROM_MEMORY),                             \
    MKCLASSDECL(GR_ENGINE_TAG, NO_LOCK, NV10_IMAGE_FROM_CPU),                                       \
                                                                                                    \
    MKCLASSDECL(GR_ENGINE_TAG, NO_LOCK, NV11_CELSIUS_PRIMITIVE),                                    \
    MKCLASSDECL(GR_ENGINE_TAG, NO_LOCK, NV11_SCALED_IMAGE_FROM_MEMORY),                             \
                                                                                                    \
    MKCLASSDECL(GR_ENGINE_TAG, NO_LOCK, NV15_CELSIUS_PRIMITIVE),                                    \
    MKCLASSDECL(GR_ENGINE_TAG, GR_LOCK_CONTEXT_SURFACES_SWIZZLED, NV15_CONTEXT_SURFACE_SWIZZLED),   \
    MKCLASSDECL(GR_ENGINE_TAG, NO_LOCK, NV15_IMAGE_BLIT),                                           \
                                                                                                    \
    MKCLASSDECL(GR_ENGINE_TAG, NO_LOCK, NV20_IMAGE_BLIT),                                           \
    MKCLASSDECL(GR_ENGINE_TAG, NO_LOCK, NV20_KELVIN_PRIMITIVE),                                     \
    MKCLASSINSTMALLOC(NV20_KELVIN_CONTEXT_ALIGN/16, NV20_KELVIN_CONTEXT_SIZE/16),                   \
                                                                                                    \
    /* dac engine classes */                                                                        \
    MKCLASSDECL(DAC_ENGINE_TAG, 0, NV04_VIDEO_LUT_CURSOR_DAC),                                      \
    MKCLASSDECL(DAC_ENGINE_TAG, 0, NV05_VIDEO_LUT_CURSOR_DAC),                                      \
    MKCLASSDECL(DAC_ENGINE_TAG, 0, NV10_VIDEO_LUT_CURSOR_DAC),                                      \
    MKCLASSDECL(DAC_ENGINE_TAG, 0, NV15_VIDEO_LUT_CURSOR_DAC),                                      \
                                                                                                    \
    /* mediaport engine classes */                                                                  \
    MKCLASSDECL(MP_ENGINE_TAG, MP_LOCK_DECODER, NV03_EXTERNAL_VIDEO_DECODER),                       \
    MKCLASSDECL(MP_ENGINE_TAG, MP_LOCK_DECOMPRESSOR, NV03_EXTERNAL_VIDEO_DECOMPRESSOR),             \
    MKCLASSDECL(MP_ENGINE_TAG, NO_LOCK, NV01_EXTERNAL_PARALLEL_BUS),                                \
    MKCLASSDECL(MP_ENGINE_TAG, NO_LOCK, NV03_EXTERNAL_MONITOR_BUS),                                 \
    MKCLASSDECL(MP_ENGINE_TAG, NO_LOCK, NV04_EXTERNAL_SERIAL_BUS),                                  \
                                                                                                    \
    /* video engine classes */                                                                      \
    MKCLASSDECL(VIDEO_ENGINE_TAG, NO_LOCK, NV04_VIDEO_OVERLAY),                                     \
    MKCLASSDECL(VIDEO_ENGINE_TAG, NO_LOCK, NV10_VIDEO_OVERLAY),

CLASSDESCRIPTOR NV20_ClassDescriptors[] =
{
    NV20_ARCHITECTURE_CLASS_DESCRIPTORS
};

U032 NV20_NumClassDescs = (sizeof (NV20_ClassDescriptors) / sizeof (CLASSDESCRIPTOR));

//-----------------------------------------------------------------------
// NV20 HAL function table layout.
//-----------------------------------------------------------------------

//
// temporary stub routine
// 
RM_STATUS nvHalStub_NV20(VOID *arg) { return RM_ERROR; }

// mc interfaces
extern RM_STATUS nvHalMcControl_NV20(VOID *);
extern RM_STATUS nvHalMcPower_NV20(VOID *);

// fifo interfaces
extern RM_STATUS nvHalFifoControl_NV20(VOID *);
extern RM_STATUS nvHalFifoAllocPio_NV20(VOID *);
extern RM_STATUS nvHalFifoAllocDma_NV20(VOID *);
extern RM_STATUS nvHalFifoFree_NV20(VOID *);
extern RM_STATUS nvHalFifoGetExceptionData_NV20(VOID *);
extern RM_STATUS nvHalFifoService_NV20(VOID *);
extern RM_STATUS nvHalFifoAccess_NV20(VOID *);
extern RM_STATUS nvHalFifoHashAdd_NV20(VOID *);
extern RM_STATUS nvHalFifoHashDelete_NV20(VOID *);
extern RM_STATUS nvHalFifoHashFunc_NV20(VOID *);
extern RM_STATUS nvHalFifoHashSearch_NV20(VOID *);

// framebuffer interfaces
extern RM_STATUS nvHalFbControl_NV20(VOID *);
extern RM_STATUS nvHalFbAlloc_NV20(VOID *);
extern RM_STATUS nvHalFbFree_NV20(VOID *);
extern RM_STATUS nvHalFbSetAllocParameters_NV20(VOID *);
extern RM_STATUS nvHalFbGetSurfacePitch_NV20(VOID *);
extern RM_STATUS nvHalFbGetSurfaceDimensions_NV20(VOID *);
extern RM_STATUS nvHalFbLoadOverride_NV20(VOID *);

// graphics interfaces
extern RM_STATUS nvHalGrControl_NV20(VOID *);
extern RM_STATUS nvHalGrAlloc_NV20(VOID *);
extern RM_STATUS nvHalGrFree_NV20(VOID *);
extern RM_STATUS nvHalGrGetExceptionData_NV20(VOID *);
extern RM_STATUS nvHalGrService_NV20(VOID *);
extern RM_STATUS nvHalGrGetNotifyData_NV20(VOID *);
extern RM_STATUS nvHalGrSetObjectContext_NV20(VOID *);
#define nvHalGrLoadOverride_NV20 nvHalStub_NV20

// dma interfaces
extern RM_STATUS nvHalDmaControl_NV20(VOID *);
extern RM_STATUS nvHalDmaAlloc_NV20(VOID *);
extern RM_STATUS nvHalDmaFree_NV20(VOID *);
extern RM_STATUS nvHalDmaGetInstSize_NV20(VOID *);

// dac interfaces
extern RM_STATUS nvHalDacControl_NV20(VOID *);
extern RM_STATUS nvHalDacAlloc_NV20(VOID *);
extern RM_STATUS nvHalDacFree_NV20(VOID *);
extern RM_STATUS nvHalDacSetStartAddr_NV20(VOID *);
extern RM_STATUS nvHalDacProgramMClk_NV20(VOID *);
extern RM_STATUS nvHalDacProgramNVClk_NV20(VOID *);
extern RM_STATUS nvHalDacProgramPClk_NV20(VOID *);
extern RM_STATUS nvHalDacProgramCursorImage_NV20(VOID *);
extern RM_STATUS nvHalDacGetRasterPosition_NV20(VOID *);
extern RM_STATUS nvHalDacValidateArbSettings_NV20(VOID *arg);
extern RM_STATUS nvHalDacUpdateArbSettings_NV20(VOID *arg);

// mediaport interfaces
extern RM_STATUS nvHalMpControl_NV20(VOID *);
extern RM_STATUS nvHalMpAlloc_NV20(VOID *);
extern RM_STATUS nvHalMpFree_NV20(VOID *);
extern RM_STATUS nvHalMpMethod_NV20(VOID *);
extern RM_STATUS nvHalMpGetEventStatus_NV20(VOID *);
extern RM_STATUS nvHalMpServiceEvent_NV20(VOID *);

// mediaport interfaces
extern RM_STATUS nvHalVideoControl_NV20(VOID *);
extern RM_STATUS nvHalVideoAlloc_NV20(VOID *);
extern RM_STATUS nvHalVideoFree_NV20(VOID *);
extern RM_STATUS nvHalVideoMethod_NV20(VOID *);
extern RM_STATUS nvHalVideoGetEventStatus_NV20(VOID *);
extern RM_STATUS nvHalVideoServiceEvent_NV20(VOID *);

HALFUNCS_000 NV20_HalFuncs_000 =
{
    // mc interfaces
    nvHalMcControl_NV20,
    nvHalMcPower_NV20,

    // fifo interfaces
    nvHalFifoControl_NV20,
    nvHalFifoAllocPio_NV20,
    nvHalFifoAllocDma_NV20,
    nvHalFifoFree_NV20,
    nvHalFifoGetExceptionData_NV20,
    nvHalFifoService_NV20,
    nvHalFifoAccess_NV20,
    nvHalFifoHashAdd_NV20,
    nvHalFifoHashDelete_NV20,
    nvHalFifoHashFunc_NV20,
    nvHalFifoHashSearch_NV20,

    // framebuffer interfaces
    nvHalFbControl_NV20,
    nvHalFbAlloc_NV20,
    nvHalFbFree_NV20,
    nvHalFbSetAllocParameters_NV20,
    nvHalFbGetSurfacePitch_NV20,
    nvHalFbGetSurfaceDimensions_NV20,
    nvHalFbLoadOverride_NV20,

    // graphics interfaces
    nvHalGrControl_NV20,
    nvHalGrAlloc_NV20,
    nvHalGrFree_NV20,
    nvHalGrGetExceptionData_NV20,
    nvHalGrService_NV20,
    nvHalGrGetNotifyData_NV20,
    nvHalGrSetObjectContext_NV20,
    nvHalGrLoadOverride_NV20,

    // dma interface
    nvHalDmaControl_NV20,
    nvHalDmaAlloc_NV20,
    nvHalDmaFree_NV20,
    nvHalDmaGetInstSize_NV20,

    // dac interfaces
    nvHalDacControl_NV20,
    nvHalDacAlloc_NV20,
    nvHalDacFree_NV20,
    nvHalDacSetStartAddr_NV20,
    nvHalDacProgramMClk_NV20,
    nvHalDacProgramNVClk_NV20,
    nvHalDacProgramPClk_NV20,
    nvHalDacProgramCursorImage_NV20,
    nvHalDacGetRasterPosition_NV20,
    nvHalDacValidateArbSettings_NV20,
    nvHalDacUpdateArbSettings_NV20,

    // mp interfaces
    nvHalMpControl_NV20,
    nvHalMpAlloc_NV20,
    nvHalMpFree_NV20,
    nvHalMpMethod_NV20,
    nvHalMpGetEventStatus_NV20,
    nvHalMpServiceEvent_NV20,

    // mp interfaces
    nvHalVideoControl_NV20,
    nvHalVideoAlloc_NV20,
    nvHalVideoFree_NV20,
    nvHalVideoMethod_NV20,
    nvHalVideoGetEventStatus_NV20,
    nvHalVideoServiceEvent_NV20
};
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Microsoft Xbox (1.00.4400) [April 2002] [src]\private\ntos\video\nvx\drivers\resman\kernel\hal\nv10\halnv10.c ===
/***************************************************************************\
|*                                                                           *|
|*        Copyright (c) 1993-2000 NVIDIA, Corp.  All rights reserved.        *|
|*                                                                           *|
|*     NOTICE TO USER:   The source code  is copyrighted under  U.S. and     *|
|*     international laws.   NVIDIA, Corp. of Sunnyvale, California owns     *|
|*     the copyright  and as design patents  pending  on the design  and     *|
|*     interface  of the NV chips.   Users and possessors of this source     *|
|*     code are hereby granted  a nonexclusive,  royalty-free  copyright     *|
|*     and  design  patent license  to use this code  in individual  and     *|
|*     commercial software.                                                  *|
|*                                                                           *|
|*     Any use of this source code must include,  in the user documenta-     *|
|*     tion and  internal comments to the code,  notices to the end user     *|
|*     as follows:                                                           *|
|*                                                                           *|
|*     Copyright (c) 1993-2000  NVIDIA, Corp.    NVIDIA  design  patents     *|
|*     pending in the U.S. and foreign countries.                            *|
|*                                                                           *|
|*     NVIDIA, CORP.  MAKES  NO REPRESENTATION ABOUT  THE SUITABILITY OF     *|
|*     THIS SOURCE CODE FOR ANY PURPOSE.  IT IS PROVIDED "AS IS" WITHOUT     *|
|*     EXPRESS OR IMPLIED WARRANTY OF ANY KIND.  NVIDIA, CORP. DISCLAIMS     *|
|*     ALL WARRANTIES  WITH REGARD  TO THIS SOURCE CODE,  INCLUDING  ALL     *|
|*     IMPLIED   WARRANTIES  OF  MERCHANTABILITY  AND   FITNESS   FOR  A     *|
|*     PARTICULAR  PURPOSE.   IN NO EVENT SHALL NVIDIA, CORP.  BE LIABLE     *|
|*     FOR ANY SPECIAL, INDIRECT, INCIDENTAL,  OR CONSEQUENTIAL DAMAGES,     *|
|*     OR ANY DAMAGES  WHATSOEVER  RESULTING  FROM LOSS OF USE,  DATA OR     *|
|*     PROFITS,  WHETHER IN AN ACTION  OF CONTRACT,  NEGLIGENCE OR OTHER     *|
|*     TORTIOUS ACTION, ARISING OUT  OF OR IN CONNECTION WITH THE USE OR     *|
|*     PERFORMANCE OF THIS SOURCE CODE.                                      *|
|*                                                                           *|
 \***************************************************************************/

/******************************** HAL Data *********************************\
*                                                                           *
* Module: HALNV10.C                                                         *
*   The chip dependent HAL data is kept here.                               *
*                                                                           *
*****************************************************************************
*                                                                           *
* History:                                                                  *
*                                                                           *
\***************************************************************************/

#include <nv_ref.h>
#include <nvrm.h>
#include <nv10_ref.h>
#include <nv10_hal.h>
#include "nvhw.h"

//-----------------------------------------------------------------------
// NV10 HAL engine descriptor table.
//-----------------------------------------------------------------------

//
// Engine default per-object instance memory sizes (16byte units).
//
#define GR_OBJINSTSZ                    0x1

ENGINEDESCRIPTOR NV10_EngineDescriptors[] =
{
    MKENGDECL(MC_ENGINE_TAG, 0, 0),
    MKENGMALLOC(MC_ENGINE_TAG, ENGMALLOC_TYPE_PRIVATE, sizeof (MCHALINFO_NV10)/4),

    MKENGDECL(FB_ENGINE_TAG, 0, 0),
    MKENGMALLOC(FB_ENGINE_TAG, ENGMALLOC_TYPE_PRIVATE, sizeof (FBHALINFO_NV10)/4),

    MKENGDECL(DAC_ENGINE_TAG, NV_RAMHT_ENGINE_SW, 0),

    MKENGDECL(TMR_ENGINE_TAG, NV_RAMHT_ENGINE_SW, 0),

    // dma object size is determined by separate HAL call
    MKENGDECL(DMA_ENGINE_TAG, NV_RAMHT_ENGINE_SW, 0),

    MKENGDECL(GR_ENGINE_TAG, NV_RAMHT_ENGINE_GRAPHICS, GR_OBJINSTSZ),
    MKENGMALLOC(GR_ENGINE_TAG, ENGMALLOC_TYPE_PRIVATE, sizeof (GRHALINFO_NV10)/4),

    MKENGDECL(FIFO_ENGINE_TAG, 0, 0),
    MKENGMALLOC(FIFO_ENGINE_TAG, ENGMALLOC_TYPE_PRIVATE, sizeof (FIFOHALINFO_NV10)/4),

    MKENGDECL(MP_ENGINE_TAG, NV_RAMHT_ENGINE_SW, 0),
    MKENGMALLOC(MP_ENGINE_TAG, ENGMALLOC_TYPE_PRIVATE, sizeof (MPHALINFO_NV10)/4),

    MKENGDECL(VIDEO_ENGINE_TAG, NV_RAMHT_ENGINE_SW, 0)
};

U032 NV10_NumEngineDescs = (sizeof (NV10_EngineDescriptors) / sizeof (ENGINEDESCRIPTOR));

//-----------------------------------------------------------------------
// NV10 HAL class descriptor table.
//-----------------------------------------------------------------------

//
// The base classes supported for all NV10 Architectures
// 
#define NV10_ARCHITECTURE_CLASS_DESCRIPTORS                                                         \
    /* fifo engine classes */                                                                       \
    MKCLASSDECL(FIFO_ENGINE_TAG, 0, NV03_CHANNEL_PIO),                                              \
    MKCLASSDECL(FIFO_ENGINE_TAG, 0, NV03_CHANNEL_DMA),                                              \
    MKCLASSDECL(FIFO_ENGINE_TAG, 0, NV04_CHANNEL_PIO),                                              \
    MKCLASSDECL(FIFO_ENGINE_TAG, 0, NV04_CHANNEL_DMA),                                              \
    MKCLASSDECL(FIFO_ENGINE_TAG, 0, NV10_CHANNEL_DMA),                                              \
                                                                                                    \
    /* graphics engine classes */                                                                   \
    MKCLASSDECL(GR_ENGINE_TAG, GR_LOCK_CONTEXT_BETA_SOLID, NV01_BETA_SOLID),                        \
    MKCLASSDECL(GR_ENGINE_TAG, GR_LOCK_CONTEXT_COLOR_KEY, NV01_IMAGE_SOLID),                        \
    MKCLASSDECL(GR_ENGINE_TAG, GR_LOCK_CONTEXT_PATTERN, NV01_IMAGE_PATTERN),                        \
    MKCLASSDECL(GR_ENGINE_TAG, GR_LOCK_CONTEXT_CLIP, NV1_IMAGE_BLACK_RECTANGLE),                    \
    MKCLASSDECL(GR_ENGINE_TAG, NO_LOCK, NV1_RENDER_SOLID_LIN),                                      \
    MKCLASSDECL(GR_ENGINE_TAG, NO_LOCK, NV1_RENDER_SOLID_TRIANGLE),                                 \
    MKCLASSDECL(GR_ENGINE_TAG, NO_LOCK, NV1_RENDER_SOLID_RECTANGLE),                                \
    MKCLASSDECL(GR_ENGINE_TAG, NO_LOCK, NV1_IMAGE_BLIT),                                            \
    MKCLASSDECL(GR_ENGINE_TAG, NO_LOCK, NV1_IMAGE_FROM_CPU),                                        \
    MKCLASSDECL(GR_ENGINE_TAG, NO_LOCK, NV1_NULL),                                                  \
    MKCLASSDECL(GR_ENGINE_TAG, NO_LOCK, NV3_STRETCHED_IMAGE_FROM_CPU),                              \
    MKCLASSDECL(GR_ENGINE_TAG, NO_LOCK, NV3_SCALED_IMAGE_FROM_MEMORY),                              \
    MKCLASSDECL(GR_ENGINE_TAG, NO_LOCK, NV3_MEMORY_TO_MEMORY_FORMAT),                               \
    MKCLASSDECL(GR_ENGINE_TAG, GR_LOCK_CONTEXT_ROP, NV3_CONTEXT_ROP),                               \
    MKCLASSDECL(GR_ENGINE_TAG, NO_LOCK, NV3_DX3_TEXTURED_TRIANGLE),                                 \
    MKCLASSDECL(GR_ENGINE_TAG, NO_LOCK, NV3_GDI_RECTANGLE_TEXT),                                    \
    MKCLASSDECL(GR_ENGINE_TAG, GR_LOCK_CONTEXT_SURFACES_2D, NV03_CONTEXT_SURFACE_2D_DESTINATION),   \
    MKCLASSDECL(GR_ENGINE_TAG, GR_LOCK_CONTEXT_SURFACES_2D, NV03_CONTEXT_SURFACE_2D_SOURCE),        \
    MKCLASSDECL(GR_ENGINE_TAG, GR_LOCK_CONTEXT_SURFACES_3D, NV03_CONTEXT_SURFACE_3D_DEPTH),         \
    MKCLASSDECL(GR_ENGINE_TAG, GR_LOCK_CONTEXT_SURFACES_3D, NV03_CONTEXT_SURFACE_3D_COLOR),         \
    MKCLASSDECL(GR_ENGINE_TAG, GR_LOCK_DVD, NV4_DVD_SUBPICTURE),                                    \
    MKCLASSDECL(GR_ENGINE_TAG, GR_LOCK_CONTEXT_SURFACES_2D, NV4_CONTEXT_SURFACES_2D),               \
    MKCLASSDECL(GR_ENGINE_TAG, GR_LOCK_CONTEXT_PATTERN, NV4_CONTEXT_PATTERN),                       \
    MKCLASSDECL(GR_ENGINE_TAG, NO_LOCK, NV4_GDI_RECTANGLE_TEXT),                                    \
    MKCLASSDECL(GR_ENGINE_TAG, GR_LOCK_CONTEXT_SURFACES_SWIZZLED, NV4_CONTEXT_SURFACE_SWIZZLED),    \
    MKCLASSDECL(GR_ENGINE_TAG, GR_LOCK_CONTEXT_SURFACES_3D, NV4_CONTEXT_SURFACES_ARGB_ZS),          \
    MKCLASSDECL(GR_ENGINE_TAG, NO_LOCK, NV10_CELSIUS_PRIMITIVE),                                    \
    MKCLASSDECL(GR_ENGINE_TAG, GR_LOCK_CONTEXT_COLOR_KEY, NV4_CONTEXT_COLOR_KEY),                   \
    MKCLASSDECL(GR_ENGINE_TAG, NO_LOCK, NV4_RENDER_SOLID_LIN),                                      \
    MKCLASSDECL(GR_ENGINE_TAG, NO_LOCK, NV4_RENDER_SOLID_TRIANGLE),                                 \
    MKCLASSDECL(GR_ENGINE_TAG, NO_LOCK, NV4_RENDER_SOLID_RECTANGLE),                                \
    MKCLASSDECL(GR_ENGINE_TAG, NO_LOCK, NV4_IMAGE_BLIT),                                            \
    MKCLASSDECL(GR_ENGINE_TAG, NO_LOCK, NV4_IMAGE_FROM_CPU),                                        \
    MKCLASSDECL(GR_ENGINE_TAG, NO_LOCK, NV05_SCALED_IMAGE_FROM_MEMORY),                             \
    MKCLASSDECL(GR_ENGINE_TAG, NO_LOCK, NV05_INDEXED_IMAGE_FROM_CPU),                               \
    MKCLASSDECL(GR_ENGINE_TAG, NO_LOCK, NV05_IMAGE_FROM_CPU),                                       \
    MKCLASSDECL(GR_ENGINE_TAG, NO_LOCK, NV05_STRETCHED_IMAGE_FROM_CPU),                             \
    MKCLASSDECL(GR_ENGINE_TAG, GR_LOCK_CONTEXT_BETA, NV4_CONTEXT_BETA),                             \
    MKCLASSDECL(GR_ENGINE_TAG, NO_LOCK, NV4_STRETCHED_IMAGE_FROM_CPU),                              \
    MKCLASSDECL(GR_ENGINE_TAG, NO_LOCK, NV4_SCALED_IMAGE_FROM_MEMORY),                              \
    MKCLASSDECL(GR_ENGINE_TAG, GR_LOCK_CONTEXT_SURFACES_2D, NV10_CONTEXT_SURFACES_2D),              \
    MKCLASSDECL(GR_ENGINE_TAG, NO_LOCK, NV10_TEXTURE_FROM_CPU),                                     \
    MKCLASSDECL(GR_ENGINE_TAG, GR_LOCK_DVD, NV10_DVD_SUBPICTURE),                                   \
    MKCLASSDECL(GR_ENGINE_TAG, NO_LOCK, NV10_SCALED_IMAGE_FROM_MEMORY),                             \
    MKCLASSDECL(GR_ENGINE_TAG, NO_LOCK, NV10_IMAGE_FROM_CPU),                                       \
    MKCLASSDECL(GR_ENGINE_TAG, GR_LOCK_CONTEXT_SURFACES_3D, NV10_CONTEXT_SURFACES_3D),              \
    MKCLASSDECL(GR_ENGINE_TAG, NO_LOCK, NV10_DX5_TEXTURED_TRIANGLE),                                \
    MKCLASSDECL(GR_ENGINE_TAG, NO_LOCK, NV10_DX6_MULTI_TEXTURE_TRIANGLE),                           \
                                                                                                    \
    /* dac engine classes */                                                                        \
    MKCLASSDECL(DAC_ENGINE_TAG, 0, NV04_VIDEO_LUT_CURSOR_DAC),                                      \
    MKCLASSDECL(DAC_ENGINE_TAG, 0, NV05_VIDEO_LUT_CURSOR_DAC),                                      \
    MKCLASSDECL(DAC_ENGINE_TAG, 0, NV10_VIDEO_LUT_CURSOR_DAC),                                      \
                                                                                                    \
    /* mediaport engine classes */                                                                  \
    MKCLASSDECL(MP_ENGINE_TAG, MP_LOCK_DECODER, NV03_EXTERNAL_VIDEO_DECODER),                       \
    MKCLASSDECL(MP_ENGINE_TAG, MP_LOCK_DECOMPRESSOR, NV03_EXTERNAL_VIDEO_DECOMPRESSOR),             \
    MKCLASSDECL(MP_ENGINE_TAG, NO_LOCK, NV01_EXTERNAL_PARALLEL_BUS),                                \
    MKCLASSDECL(MP_ENGINE_TAG, NO_LOCK, NV03_EXTERNAL_MONITOR_BUS),                                 \
    MKCLASSDECL(MP_ENGINE_TAG, NO_LOCK, NV04_EXTERNAL_SERIAL_BUS),                                  \
                                                                                                    \
    /* video engine classes */                                                                      \
    MKCLASSDECL(VIDEO_ENGINE_TAG, NO_LOCK, NV04_VIDEO_OVERLAY),                                     \
    MKCLASSDECL(VIDEO_ENGINE_TAG, NO_LOCK, NV10_VIDEO_OVERLAY),

//
// The classes supported on NV10
//
CLASSDESCRIPTOR NV10_ClassDescriptors[] =
{
    NV10_ARCHITECTURE_CLASS_DESCRIPTORS
};

U032 NV10_NumClassDescs = (sizeof (NV10_ClassDescriptors) / sizeof (CLASSDESCRIPTOR));

//
// The classes supported on NV15
// 
#define NV15_IMPLEMENTATION_CLASS_DESCRIPTORS                                                       \
    /* graphics engine classes */                                                                   \
    MKCLASSDECL(GR_ENGINE_TAG, NO_LOCK, NV15_CELSIUS_PRIMITIVE),                                    \
    MKCLASSDECL(GR_ENGINE_TAG, NO_LOCK, NV15_IMAGE_BLIT),                                           \
                                                                                                    \
    /* dac engine classes */                                                                        \
    MKCLASSDECL(DAC_ENGINE_TAG, 0, NV15_VIDEO_LUT_CURSOR_DAC),                                      \

CLASSDESCRIPTOR NV15_ClassDescriptors[] =
{
    NV10_ARCHITECTURE_CLASS_DESCRIPTORS
    NV15_IMPLEMENTATION_CLASS_DESCRIPTORS
};

U032 NV15_NumClassDescs = (sizeof (NV15_ClassDescriptors) / sizeof (CLASSDESCRIPTOR));

//
// The classes supported on NV11
// 
#define NV11_IMPLEMENTATION_CLASS_DESCRIPTORS                                                       \
    /* graphics engine classes */                                                                   \
    MKCLASSDECL(GR_ENGINE_TAG, NO_LOCK, NV11_CELSIUS_PRIMITIVE),                                    \
    MKCLASSDECL(GR_ENGINE_TAG, NO_LOCK, NV11_SCALED_IMAGE_FROM_MEMORY),

CLASSDESCRIPTOR NV11_ClassDescriptors[] =
{
    NV10_ARCHITECTURE_CLASS_DESCRIPTORS
    NV15_IMPLEMENTATION_CLASS_DESCRIPTORS
    NV11_IMPLEMENTATION_CLASS_DESCRIPTORS
};

U032 NV11_NumClassDescs = (sizeof (NV11_ClassDescriptors) / sizeof (CLASSDESCRIPTOR));

//-----------------------------------------------------------------------
// NV10 HAL function table layout.
//-----------------------------------------------------------------------

// mc interfaces
extern RM_STATUS nvHalMcControl_NV10(VOID *);
extern RM_STATUS nvHalMcPower_NV10(VOID *);

// fifo interfaces
extern RM_STATUS nvHalFifoControl_NV10(VOID *);
extern RM_STATUS nvHalFifoAllocPio_NV10(VOID *);
extern RM_STATUS nvHalFifoAllocDma_NV10(VOID *);
extern RM_STATUS nvHalFifoFree_NV10(VOID *);
extern RM_STATUS nvHalFifoGetExceptionData_NV10(VOID *);
extern RM_STATUS nvHalFifoService_NV10(VOID *);
extern RM_STATUS nvHalFifoAccess_NV10(VOID *);
extern RM_STATUS nvHalFifoHashAdd_NV10(VOID *);
extern RM_STATUS nvHalFifoHashDelete_NV10(VOID *);
extern RM_STATUS nvHalFifoHashFunc_NV10(VOID *);
extern RM_STATUS nvHalFifoHashSearch_NV10(VOID *);

// framebuffer interfaces
extern RM_STATUS nvHalFbControl_NV10(VOID *);
extern RM_STATUS nvHalFbAlloc_NV10(VOID *);
extern RM_STATUS nvHalFbFree_NV10(VOID *);
extern RM_STATUS nvHalFbSetAllocParameters_NV10(VOID *);
extern RM_STATUS nvHalFbGetSurfacePitch_NV10(VOID *);
extern RM_STATUS nvHalFbGetSurfaceDimensions_NV10(VOID *);
extern RM_STATUS nvHalFbLoadOverride_NV10(VOID *);

// graphics interfaces
extern RM_STATUS nvHalGrControl_NV10(VOID *);
extern RM_STATUS nvHalGrAlloc_NV10(VOID *);
extern RM_STATUS nvHalGrFree_NV10(VOID *);
extern RM_STATUS nvHalGrGetExceptionData_NV10(VOID *);
extern RM_STATUS nvHalGrService_NV10(VOID *);
extern RM_STATUS nvHalGrGetNotifyData_NV10(VOID *);
extern RM_STATUS nvHalGrSetObjectContext_NV10(VOID *);
extern RM_STATUS nvHalGrLoadOverride_NV10(VOID *);

// dma interfaces
extern RM_STATUS nvHalDmaControl_NV10(VOID *);
extern RM_STATUS nvHalDmaAlloc_NV10(VOID *);
extern RM_STATUS nvHalDmaFree_NV10(VOID *);
extern RM_STATUS nvHalDmaGetInstSize_NV10(VOID *);

// dac interfaces
extern RM_STATUS nvHalDacControl_NV10(VOID *);
extern RM_STATUS nvHalDacAlloc_NV10(VOID *);
extern RM_STATUS nvHalDacFree_NV10(VOID *);
extern RM_STATUS nvHalDacSetStartAddr_NV10(VOID *);
extern RM_STATUS nvHalDacProgramMClk_NV10(VOID *);
extern RM_STATUS nvHalDacProgramNVClk_NV10(VOID *);
extern RM_STATUS nvHalDacProgramPClk_NV10(VOID *);
extern RM_STATUS nvHalDacProgramCursorImage_NV10(VOID *);
extern RM_STATUS nvHalDacGetRasterPosition_NV10(VOID *);
extern RM_STATUS nvHalDacValidateArbSettings_NV10(VOID *arg);
extern RM_STATUS nvHalDacUpdateArbSettings_NV10(VOID *arg);


// mediaport interfaces
extern RM_STATUS nvHalMpControl_NV10(VOID *);
extern RM_STATUS nvHalMpAlloc_NV10(VOID *);
extern RM_STATUS nvHalMpFree_NV10(VOID *);
extern RM_STATUS nvHalMpMethod_NV10(VOID *);
extern RM_STATUS nvHalMpGetEventStatus_NV10(VOID *);
extern RM_STATUS nvHalMpServiceEvent_NV10(VOID *);

// mediaport interfaces
extern RM_STATUS nvHalVideoControl_NV10(VOID *);
extern RM_STATUS nvHalVideoAlloc_NV10(VOID *);
extern RM_STATUS nvHalVideoFree_NV10(VOID *);
extern RM_STATUS nvHalVideoMethod_NV10(VOID *);
extern RM_STATUS nvHalVideoGetEventStatus_NV10(VOID *);
extern RM_STATUS nvHalVideoServiceEvent_NV10(VOID *);

HALFUNCS_000 NV10_HalFuncs_000 =
{
    // mc interfaces
    nvHalMcControl_NV10,
    nvHalMcPower_NV10,

    // fifo interfaces
    nvHalFifoControl_NV10,
    nvHalFifoAllocPio_NV10,
    nvHalFifoAllocDma_NV10,
    nvHalFifoFree_NV10,
    nvHalFifoGetExceptionData_NV10,
    nvHalFifoService_NV10,
    nvHalFifoAccess_NV10,
    nvHalFifoHashAdd_NV10,
    nvHalFifoHashDelete_NV10,
    nvHalFifoHashFunc_NV10,
    nvHalFifoHashSearch_NV10,

    // framebuffer interfaces
    nvHalFbControl_NV10,
    nvHalFbAlloc_NV10,
    nvHalFbFree_NV10,
    nvHalFbSetAllocParameters_NV10,
    nvHalFbGetSurfacePitch_NV10,
    nvHalFbGetSurfaceDimensions_NV10,
    nvHalFbLoadOverride_NV10,

    // graphics interfaces
    nvHalGrControl_NV10,
    nvHalGrAlloc_NV10,
    nvHalGrFree_NV10,
    nvHalGrGetExceptionData_NV10,
    nvHalGrService_NV10,
    nvHalGrGetNotifyData_NV10,
    nvHalGrSetObjectContext_NV10,
    nvHalGrLoadOverride_NV10,

    // dma interface
    nvHalDmaControl_NV10,
    nvHalDmaAlloc_NV10,
    nvHalDmaFree_NV10,
    nvHalDmaGetInstSize_NV10,

    // dac interfaces
    nvHalDacControl_NV10,
    nvHalDacAlloc_NV10,
    nvHalDacFree_NV10,
    nvHalDacSetStartAddr_NV10,
    nvHalDacProgramMClk_NV10,
    nvHalDacProgramNVClk_NV10,
    nvHalDacProgramPClk_NV10,
    nvHalDacProgramCursorImage_NV10,
    nvHalDacGetRasterPosition_NV10,
    nvHalDacValidateArbSettings_NV10,
    nvHalDacUpdateArbSettings_NV10,

    // mp interfaces
    nvHalMpControl_NV10,
    nvHalMpAlloc_NV10,
    nvHalMpFree_NV10,
    nvHalMpMethod_NV10,
    nvHalMpGetEventStatus_NV10,
    nvHalMpServiceEvent_NV10,

    // mp interfaces
    nvHalVideoControl_NV10,
    nvHalVideoAlloc_NV10,
    nvHalVideoFree_NV10,
    nvHalVideoMethod_NV10,
    nvHalVideoGetEventStatus_NV10,
    nvHalVideoServiceEvent_NV10
};
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Microsoft Xbox (1.00.4400) [April 2002] [src]\private\ntos\video\nvx\drivers\resman\kernel\inc\btree.h ===
#ifndef _BTREE_H_
#define _BTREE_H_
//
// (C) Copyright NVIDIA Corporation Inc., 1995,1996. All rights reserved.
//
/*********************** Balanced Tree data structure **********************\
*                                                                           *
* Module: BTREE.H                                                           *
*       API to BTREE routines.                                              *
*                                                                           *
*****************************************************************************
*                                                                           *
* History:                                                                  *
*       David Schmenk (dschmenk)    01/21/95 - broke into seperate file.    *
*                                                                           *
\***************************************************************************/

//
// BTREE structure.
//
typedef struct _def_node
{
    U032              Value;
    VOID             *Data;
    U032              LeftCount;
    U032              RightCount;
    struct _def_node *LeftBranch;
    struct _def_node *RightBranch;
} NODE, *PNODE;

//---------------------------------------------------------------------------
//
//  Function prototypes.
//
//---------------------------------------------------------------------------

RM_STATUS btreeInsertBranch(PNODE, PNODE);
RM_STATUS btreeInsert(PNODE, PNODE *);
RM_STATUS btreeDelete(U032, PNODE *);
RM_STATUS btreeSearch(U032, PNODE *, PNODE);
RM_STATUS btreeEnumStart(U032, PNODE *, PNODE);
RM_STATUS btreeEnumNext(PNODE *, PNODE);
RM_STATUS btreeBalanceBranch(PNODE *);
RM_STATUS btreeBalance(PNODE *);

#endif // _BTREE_H_
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Microsoft Xbox (1.00.4400) [April 2002] [src]\private\ntos\video\nvx\drivers\resman\kernel\hal\nv4\halnv04.c ===
/***************************************************************************\
|*                                                                           *|
|*        Copyright (c) 1993-2000 NVIDIA, Corp.  All rights reserved.        *|
|*                                                                           *|
|*     NOTICE TO USER:   The source code  is copyrighted under  U.S. and     *|
|*     international laws.   NVIDIA, Corp. of Sunnyvale, California owns     *|
|*     the copyright  and as design patents  pending  on the design  and     *|
|*     interface  of the NV chips.   Users and possessors of this source     *|
|*     code are hereby granted  a nonexclusive,  royalty-free  copyright     *|
|*     and  design  patent license  to use this code  in individual  and     *|
|*     commercial software.                                                  *|
|*                                                                           *|
|*     Any use of this source code must include,  in the user documenta-     *|
|*     tion and  internal comments to the code,  notices to the end user     *|
|*     as follows:                                                           *|
|*                                                                           *|
|*     Copyright (c) 1993-2000  NVIDIA, Corp.    NVIDIA  design  patents     *|
|*     pending in the U.S. and foreign countries.                            *|
|*                                                                           *|
|*     NVIDIA, CORP.  MAKES  NO REPRESENTATION ABOUT  THE SUITABILITY OF     *|
|*     THIS SOURCE CODE FOR ANY PURPOSE.  IT IS PROVIDED "AS IS" WITHOUT     *|
|*     EXPRESS OR IMPLIED WARRANTY OF ANY KIND.  NVIDIA, CORP. DISCLAIMS     *|
|*     ALL WARRANTIES  WITH REGARD  TO THIS SOURCE CODE,  INCLUDING  ALL     *|
|*     IMPLIED   WARRANTIES  OF  MERCHANTABILITY  AND   FITNESS   FOR  A     *|
|*     PARTICULAR  PURPOSE.   IN NO EVENT SHALL NVIDIA, CORP.  BE LIABLE     *|
|*     FOR ANY SPECIAL, INDIRECT, INCIDENTAL,  OR CONSEQUENTIAL DAMAGES,     *|
|*     OR ANY DAMAGES  WHATSOEVER  RESULTING  FROM LOSS OF USE,  DATA OR     *|
|*     PROFITS,  WHETHER IN AN ACTION  OF CONTRACT,  NEGLIGENCE OR OTHER     *|
|*     TORTIOUS ACTION, ARISING OUT  OF OR IN CONNECTION WITH THE USE OR     *|
|*     PERFORMANCE OF THIS SOURCE CODE.                                      *|
|*                                                                           *|
 \***************************************************************************/

/******************************** HAL Data *********************************\
*                                                                           *
* Module: HALNV04.C                                                         *
*   The chip dependent HAL data is kept here.                               *
*                                                                           *
*****************************************************************************
*                                                                           *
* History:                                                                  *
*                                                                           *
\***************************************************************************/
#include <nv_ref.h>
#include <nv4_ref.h>
#include <nvrm.h>
#include <nv4_hal.h>
#include "nvhw.h"

//-----------------------------------------------------------------------
// NV4 HAL engine descriptor table.
//-----------------------------------------------------------------------

//
// Engine default per-object instance memory sizes (16byte units).
//
#define GR_OBJINSTSZ                    0x1

ENGINEDESCRIPTOR NV04_EngineDescriptors[] =
{
    MKENGDECL(MC_ENGINE_TAG, 0, 0),
    MKENGMALLOC(MC_ENGINE_TAG, ENGMALLOC_TYPE_PRIVATE, sizeof (MCHALINFO_NV04)/4),

    MKENGDECL(FB_ENGINE_TAG, 0, 0),
    MKENGMALLOC(FB_ENGINE_TAG, ENGMALLOC_TYPE_PRIVATE, (0x20000 + BIOS_IMAGE_PAD + sizeof (FBHALINFO_NV04))/4),

    MKENGDECL(DAC_ENGINE_TAG, NV_RAMHT_ENGINE_SW, 0),

    MKENGDECL(TMR_ENGINE_TAG, NV_RAMHT_ENGINE_SW, 0),

    // dma object size is determined by separate HAL call
    MKENGDECL(DMA_ENGINE_TAG, NV_RAMHT_ENGINE_SW, 0),

    MKENGDECL(GR_ENGINE_TAG, NV_RAMHT_ENGINE_GRAPHICS, GR_OBJINSTSZ),
    MKENGMALLOC(GR_ENGINE_TAG, ENGMALLOC_TYPE_PRIVATE, sizeof (GRHALINFO_NV04)/4),

    MKENGDECL(FIFO_ENGINE_TAG, 0, 0),
    MKENGMALLOC(FIFO_ENGINE_TAG, ENGMALLOC_TYPE_PRIVATE, sizeof (FIFOHALINFO_NV04)/4),

    MKENGDECL(MP_ENGINE_TAG, NV_RAMHT_ENGINE_SW, 0),
    MKENGMALLOC(MP_ENGINE_TAG, ENGMALLOC_TYPE_PRIVATE, sizeof (MPHALINFO_NV04)/4),

    MKENGDECL(VIDEO_ENGINE_TAG, NV_RAMHT_ENGINE_SW, 0),
};

U032 NV04_NumEngineDescs = (sizeof (NV04_EngineDescriptors) / sizeof (ENGINEDESCRIPTOR));

//-----------------------------------------------------------------------
// NV04 HAL class descriptor table.
//-----------------------------------------------------------------------

//
// The base classes supported for all NV4 Architectures
// 
#define NV4_ARCHITECTURE_CLASS_DESCRIPTORS                                                              \
    /* fifo engine classes */                                                                           \
    MKCLASSDECL(FIFO_ENGINE_TAG, 0, NV03_CHANNEL_PIO),                                                  \
    MKCLASSDECL(FIFO_ENGINE_TAG, 0, NV03_CHANNEL_DMA),                                                  \
    MKCLASSDECL(FIFO_ENGINE_TAG, 0, NV04_CHANNEL_PIO),                                                  \
    MKCLASSDECL(FIFO_ENGINE_TAG, 0, NV04_CHANNEL_DMA),                                                  \
                                                                                                        \
    /* graphics engine classes */                                                                       \
    MKCLASSDECL(GR_ENGINE_TAG, GR_LOCK_CONTEXT_BETA_SOLID, NV01_CONTEXT_BETA),                          \
    MKCLASSDECL(GR_ENGINE_TAG, GR_LOCK_CONTEXT_COLOR_KEY, NV01_CONTEXT_COLOR_KEY),                      \
    MKCLASSDECL(GR_ENGINE_TAG, GR_LOCK_CONTEXT_PATTERN, NV01_CONTEXT_PATTERN),                          \
    MKCLASSDECL(GR_ENGINE_TAG, GR_LOCK_CONTEXT_CLIP, NV01_CONTEXT_CLIP_RECTANGLE),                      \
    MKCLASSDECL(GR_ENGINE_TAG, NO_LOCK, NV01_RENDER_SOLID_LIN),                                         \
    MKCLASSDECL(GR_ENGINE_TAG, NO_LOCK, NV01_RENDER_SOLID_TRIANGLE),                                    \
    MKCLASSDECL(GR_ENGINE_TAG, NO_LOCK, NV01_RENDER_SOLID_RECTANGLE),                                   \
    MKCLASSDECL(GR_ENGINE_TAG, NO_LOCK, NV01_IMAGE_BLIT),                                               \
    MKCLASSDECL(GR_ENGINE_TAG, NO_LOCK, NV01_IMAGE_FROM_CPU),                                           \
    MKCLASSDECL(GR_ENGINE_TAG, NO_LOCK, NV01_NULL),                                                     \
    MKCLASSDECL(GR_ENGINE_TAG, NO_LOCK, NV03_STRETCHED_IMAGE_FROM_CPU),                                 \
    MKCLASSDECL(GR_ENGINE_TAG, NO_LOCK, NV03_SCALED_IMAGE_FROM_MEMORY),                                 \
    MKCLASSDECL(GR_ENGINE_TAG, NO_LOCK, NV03_MEMORY_TO_MEMORY_FORMAT),                                  \
    MKCLASSDECL(GR_ENGINE_TAG, GR_LOCK_CONTEXT_ROP, NV03_CONTEXT_ROP),                                  \
    MKCLASSDECL(GR_ENGINE_TAG, NO_LOCK, NV03_DX3_TEXTURED_TRIANGLE),                                    \
    MKCLASSDECL(GR_ENGINE_TAG, NO_LOCK, NV03_GDI_RECTANGLE_TEXT),                                       \
    MKCLASSDECL(GR_ENGINE_TAG, GR_LOCK_CONTEXT_SURFACES_2D, NV03_CONTEXT_SURFACE_2D_DESTINATION),       \
    MKCLASSDECL(GR_ENGINE_TAG, GR_LOCK_CONTEXT_SURFACES_2D, NV03_CONTEXT_SURFACE_2D_SOURCE),            \
    MKCLASSDECL(GR_ENGINE_TAG, GR_LOCK_CONTEXT_SURFACES_3D, NV03_CONTEXT_SURFACE_3D_DEPTH),             \
    MKCLASSDECL(GR_ENGINE_TAG, GR_LOCK_CONTEXT_SURFACES_3D, NV03_CONTEXT_SURFACE_3D_COLOR),            \
    MKCLASSDECL(GR_ENGINE_TAG, GR_LOCK_DVD, NV04_DVD_SUBPICTURE),                                       \
    MKCLASSDECL(GR_ENGINE_TAG, GR_LOCK_CONTEXT_SURFACES_2D, NV04_CONTEXT_SURFACES_2D),                  \
    MKCLASSDECL(GR_ENGINE_TAG, GR_LOCK_CONTEXT_PATTERN, NV04_CONTEXT_PATTERN),                          \
    MKCLASSDECL(GR_ENGINE_TAG, NO_LOCK, NV04_GDI_RECTANGLE_TEXT),                                       \
    MKCLASSDECL(GR_ENGINE_TAG, GR_LOCK_CONTEXT_SURFACES_SWIZZLED, NV04_CONTEXT_SURFACE_SWIZZLED),       \
    MKCLASSDECL(GR_ENGINE_TAG, GR_LOCK_CONTEXT_SURFACES_3D, NV04_CONTEXT_SURFACES_3D),                  \
    MKCLASSDECL(GR_ENGINE_TAG, NO_LOCK, NV04_DX5_TEXTURED_TRIANGLE),                                    \
    MKCLASSDECL(GR_ENGINE_TAG, NO_LOCK, NV04_DX6_MULTI_TEXTURE_TRIANGLE),                               \
    MKCLASSDECL(GR_ENGINE_TAG, GR_LOCK_CONTEXT_COLOR_KEY, NV04_CONTEXT_COLOR_KEY),                      \
    MKCLASSDECL(GR_ENGINE_TAG, NO_LOCK, NV04_RENDER_SOLID_LIN),                                         \
    MKCLASSDECL(GR_ENGINE_TAG, NO_LOCK, NV04_RENDER_SOLID_TRIANGLE),                                    \
    MKCLASSDECL(GR_ENGINE_TAG, NO_LOCK, NV04_RENDER_SOLID_RECTANGLE),                                   \
    MKCLASSDECL(GR_ENGINE_TAG, NO_LOCK, NV04_IMAGE_BLIT),                                               \
    MKCLASSDECL(GR_ENGINE_TAG, NO_LOCK, NV04_INDEXED_IMAGE_FROM_CPU),                                   \
    MKCLASSDECL(GR_ENGINE_TAG, NO_LOCK, NV04_IMAGE_FROM_CPU),                                           \
    MKCLASSDECL(GR_ENGINE_TAG, GR_LOCK_CONTEXT_BETA, NV04_CONTEXT_BETA),                                \
    MKCLASSDECL(GR_ENGINE_TAG, NO_LOCK, NV04_STRETCHED_IMAGE_FROM_CPU),                                 \
    MKCLASSDECL(GR_ENGINE_TAG, NO_LOCK, NV04_SCALED_IMAGE_FROM_MEMORY),                                 \
                                                                                                        \
    /* dac engine classes */                                                                            \
    MKCLASSDECL(DAC_ENGINE_TAG, NO_LOCK, NV04_VIDEO_LUT_CURSOR_DAC),                                    \
                                                                                                        \
    /* mediaport engine classes */                                                                      \
    MKCLASSDECL(MP_ENGINE_TAG, MP_LOCK_DECODER, NV03_EXTERNAL_VIDEO_DECODER),                           \
    MKCLASSDECL(MP_ENGINE_TAG, MP_LOCK_DECOMPRESSOR, NV03_EXTERNAL_VIDEO_DECOMPRESSOR),                 \
    MKCLASSDECL(MP_ENGINE_TAG, NO_LOCK, NV01_EXTERNAL_PARALLEL_BUS),                                    \
    MKCLASSDECL(MP_ENGINE_TAG, NO_LOCK, NV03_EXTERNAL_MONITOR_BUS),                                     \
    MKCLASSDECL(MP_ENGINE_TAG, NO_LOCK, NV04_EXTERNAL_SERIAL_BUS),                                      \
                                                                                                        \
    /* video engine classes */                                                                          \
    MKCLASSDECL(VIDEO_ENGINE_TAG, NO_LOCK, NV04_VIDEO_OVERLAY),

//
// The classes supported on NV4
//
CLASSDESCRIPTOR NV04_ClassDescriptors[] =
{
    NV4_ARCHITECTURE_CLASS_DESCRIPTORS
};

U032 NV04_NumClassDescs = (sizeof (NV04_ClassDescriptors) / sizeof (CLASSDESCRIPTOR));

//
// The classes supported on NV5
// 
#define NV5_IMPLEMENTATION_CLASS_DESCRIPTORS                                                            \
    /* graphics engine classes */                                                                       \
    MKCLASSDECL(GR_ENGINE_TAG, NO_LOCK, NV05_SCALED_IMAGE_FROM_MEMORY),                                 \
    MKCLASSDECL(GR_ENGINE_TAG, NO_LOCK, NV05_INDEXED_IMAGE_FROM_CPU),                                   \
    MKCLASSDECL(GR_ENGINE_TAG, NO_LOCK, NV05_IMAGE_FROM_CPU),                                           \
    MKCLASSDECL(GR_ENGINE_TAG, NO_LOCK, NV05_STRETCHED_IMAGE_FROM_CPU),                                 \
                                                                                                        \
    /* dac engine classes */                                                                            \
    MKCLASSDECL(DAC_ENGINE_TAG, NO_LOCK, NV05_VIDEO_LUT_CURSOR_DAC),

CLASSDESCRIPTOR NV05_ClassDescriptors[] =
{
    NV4_ARCHITECTURE_CLASS_DESCRIPTORS
    NV5_IMPLEMENTATION_CLASS_DESCRIPTORS
};

U032 NV05_NumClassDescs = (sizeof (NV05_ClassDescriptors) / sizeof (CLASSDESCRIPTOR));

//-----------------------------------------------------------------------
// NV4 HAL function table layout.
//-----------------------------------------------------------------------

// mc interfaces
RM_STATUS nvHalMcControl_NV04(VOID *);
RM_STATUS nvHalMcPower_NV04(VOID *);

// fifo interfaces
extern RM_STATUS nvHalFifoControl_NV04(VOID *);
extern RM_STATUS nvHalFifoAllocPio_NV04(VOID *);
extern RM_STATUS nvHalFifoAllocDma_NV04(VOID *);
extern RM_STATUS nvHalFifoFree_NV04(VOID *);
extern RM_STATUS nvHalFifoGetExceptionData_NV04(VOID *);
extern RM_STATUS nvHalFifoService_NV04(VOID *);
extern RM_STATUS nvHalFifoAccess_NV04(VOID *);
extern RM_STATUS nvHalFifoHashAdd_NV04(VOID *);
extern RM_STATUS nvHalFifoHashDelete_NV04(VOID *);
extern RM_STATUS nvHalFifoHashFunc_NV04(VOID *);
extern RM_STATUS nvHalFifoHashSearch_NV04(VOID *);

// framebuffer interfaces
extern RM_STATUS nvHalFbControl_NV04(VOID *);
extern RM_STATUS nvHalFbAlloc_NV04(VOID *);
extern RM_STATUS nvHalFbFree_NV04(VOID *);
extern RM_STATUS nvHalFbSetAllocParameters_NV04(VOID *);
extern RM_STATUS nvHalFbGetSurfacePitch_NV04(VOID *);
extern RM_STATUS nvHalFbGetSurfaceDimensions_NV04(VOID *);
extern RM_STATUS nvHalFbLoadOverride_NV04(VOID *);

// graphics interfaces
extern RM_STATUS nvHalGrControl_NV04(VOID *);
extern RM_STATUS nvHalGrAlloc_NV04(VOID *);
extern RM_STATUS nvHalGrFree_NV04(VOID *);
extern RM_STATUS nvHalGrGetExceptionData_NV04(VOID *);
extern RM_STATUS nvHalGrService_NV04(VOID *);
extern RM_STATUS nvHalGrGetNotifyData_NV04(VOID *);
extern RM_STATUS nvHalGrSetObjectContext_NV04(VOID *);
extern RM_STATUS nvHalGrLoadOverride_NV04(VOID *);

// dma interfaces
extern RM_STATUS nvHalDmaControl_NV04(VOID *);
extern RM_STATUS nvHalDmaAlloc_NV04(VOID *);
extern RM_STATUS nvHalDmaFree_NV04(VOID *);
extern RM_STATUS nvHalDmaGetInstSize_NV04(VOID *);

// dac interfaces
extern RM_STATUS nvHalDacControl_NV04(VOID *);
extern RM_STATUS nvHalDacAlloc_NV04(VOID *);
extern RM_STATUS nvHalDacFree_NV04(VOID *);
extern RM_STATUS nvHalDacSetStartAddr_NV04(VOID *);
extern RM_STATUS nvHalDacProgramMClk_NV04(VOID *);
extern RM_STATUS nvHalDacProgramNVClk_NV04(VOID *);
extern RM_STATUS nvHalDacProgramPClk_NV04(VOID *);
extern RM_STATUS nvHalDacProgramCursorImage_NV04(VOID *);
extern RM_STATUS nvHalDacGetRasterPosition_NV04(VOID *);
extern RM_STATUS nvHalDacValidateArbSettings_NV04(VOID *arg);
extern RM_STATUS nvHalDacUpdateArbSettings_NV04(VOID *arg);


// mediaport interfaces
extern RM_STATUS nvHalMpControl_NV04(VOID *);
extern RM_STATUS nvHalMpAlloc_NV04(VOID *);
extern RM_STATUS nvHalMpFree_NV04(VOID *);
extern RM_STATUS nvHalMpMethod_NV04(VOID *);
extern RM_STATUS nvHalMpGetEventStatus_NV04(VOID *);
extern RM_STATUS nvHalMpServiceEvent_NV04(VOID *);

// video interfaces
extern RM_STATUS nvHalVideoControl_NV04(VOID *);
extern RM_STATUS nvHalVideoAlloc_NV04(VOID *);
extern RM_STATUS nvHalVideoFree_NV04(VOID *);
extern RM_STATUS nvHalVideoMethod_NV04(VOID *);
extern RM_STATUS nvHalVideoGetEventStatus_NV04(VOID *);
extern RM_STATUS nvHalVideoServiceEvent_NV04(VOID *);

HALFUNCS_000 NV04_HalFuncs_000 =
{
    // mc interfaces
    nvHalMcControl_NV04,
    nvHalMcPower_NV04,

    // fifo interfaces
    nvHalFifoControl_NV04,
    nvHalFifoAllocPio_NV04,
    nvHalFifoAllocDma_NV04,
    nvHalFifoFree_NV04,
    nvHalFifoGetExceptionData_NV04,
    nvHalFifoService_NV04,
    nvHalFifoAccess_NV04,
    nvHalFifoHashAdd_NV04,
    nvHalFifoHashDelete_NV04,
    nvHalFifoHashFunc_NV04,
    nvHalFifoHashSearch_NV04,

    // framebuffer interfaces
    nvHalFbControl_NV04,
    nvHalFbAlloc_NV04,
    nvHalFbFree_NV04,
    nvHalFbSetAllocParameters_NV04,
    nvHalFbGetSurfacePitch_NV04,
    nvHalFbGetSurfaceDimensions_NV04,
    nvHalFbLoadOverride_NV04,

    // graphics interfaces
    nvHalGrControl_NV04,
    nvHalGrAlloc_NV04,
    nvHalGrFree_NV04,
    nvHalGrGetExceptionData_NV04,
    nvHalGrService_NV04,
    nvHalGrGetNotifyData_NV04,
    nvHalGrSetObjectContext_NV04,
    nvHalGrLoadOverride_NV04,

    // dma interface
    nvHalDmaControl_NV04,
    nvHalDmaAlloc_NV04,
    nvHalDmaFree_NV04,
    nvHalDmaGetInstSize_NV04,

    // dac interfaces
    nvHalDacControl_NV04,
    nvHalDacAlloc_NV04,
    nvHalDacFree_NV04,
    nvHalDacSetStartAddr_NV04,
    nvHalDacProgramMClk_NV04,
    nvHalDacProgramNVClk_NV04,
    nvHalDacProgramPClk_NV04,
    nvHalDacProgramCursorImage_NV04,
    nvHalDacGetRasterPosition_NV04,
    nvHalDacValidateArbSettings_NV04,
    nvHalDacUpdateArbSettings_NV04,

    // mp interfaces
    nvHalMpControl_NV04,
    nvHalMpAlloc_NV04,
    nvHalMpFree_NV04,
    nvHalMpMethod_NV04,
    nvHalMpGetEventStatus_NV04,
    nvHalMpServiceEvent_NV04,

    // video interfaces
    nvHalVideoControl_NV04,
    nvHalVideoAlloc_NV04,
    nvHalVideoFree_NV04,
    nvHalVideoMethod_NV04,
    nvHalVideoGetEventStatus_NV04,
    nvHalVideoServiceEvent_NV04
};
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Microsoft Xbox (1.00.4400) [April 2002] [src]\private\ntos\video\nvx\drivers\resman\kernel\inc\Ahal.h ===
#if !defined _AHALH_
#define _AHALH_

#if defined __cplusplus
extern "C"
{
#endif

// can be max 255
#define MAX_CLIENTS		            8

typedef struct
{
    PISRCALLBACK	pFn;
    INTR_MASK		Mask;
    VOID			*pContext;
} MCP1_CLIENT_INFO, *PMCP1_CLIENT_INFO;


RM_STATUS InitAudioHal(U008 uRevID, HWINFO_COMMON_FIELDS *pDev);
VOID DestroyAudioHal(HWINFO_COMMON_FIELDS *pDev);

RM_STATUS AllocDevice(HWINFO_COMMON_FIELDS *pDev);
RM_STATUS FreeDevice(HWINFO_COMMON_FIELDS *pDev);

RM_STATUS DeviceAddClient(HWINFO_COMMON_FIELDS *pDev, VOID *pParam, U008 *pClientRef);
RM_STATUS DeviceRemoveClient(HWINFO_COMMON_FIELDS *pDev, U008 uClientRef);

RM_STATUS AllocContextDma(HWINFO_COMMON_FIELDS *pDev, VOID *pParam);
RM_STATUS FreeContextDma(HWINFO_COMMON_FIELDS *pDev, VOID *pParam);

RM_STATUS AllocObject(HWINFO_COMMON_FIELDS *pDev, VOID *pParam);
RM_STATUS FreeObject(HWINFO_COMMON_FIELDS *pDev, VOID *pParam);

RM_STATUS InterruptService(HWINFO_COMMON_FIELDS *pDev);

#if defined __cplusplus
};
#endif

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Microsoft Xbox (1.00.4400) [April 2002] [src]\private\ntos\video\nvx\drivers\resman\kernel\inc\control.h ===
#ifndef _CONTROL_H_
#define _CONTROL_H_
/**************************** Graphics Manager *****************************\
*                                                                           *
* Module: CONTROL.H                                                         *
*       Control method implementation.                                      *
*                                                                           *
*****************************************************************************
*                                                                           *
* History:                                                                  *
*       Bruce Thompson (brucet)    02/22/96 - wrote it.                     *
*                                                                           *
\***************************************************************************/

//---------------------------------------------------------------------------
//
//  Defines.
//
//---------------------------------------------------------------------------

//---------------------------------------------------------------------------
//
// Miscellaneous structure definitions.
//
//---------------------------------------------------------------------------

//---------------------------------------------------------------------------
//
//  Control object defines.
//
//---------------------------------------------------------------------------
typedef struct _def_ctrlmethod CTRLMETHOD, *PCTRLMETHOD;
typedef struct _def_ctrlclass  CTRLCLASS,  *PCTRLCLASS;

// Control method structure
typedef RM_STATUS (*CTRLMETHODPROC)(PHWINFO, U032, U032, PCTRLMETHOD, U032, U032);
struct _def_ctrlmethod
{
    CTRLMETHODPROC Proc;
    U032           Low;
    U032           High;
};

// Control class structure
struct _def_ctrlclass
{
    PCTRLMETHOD Method;
    U032        MethodMax;
};

// The class which defines the NV control area
extern CTRLCLASS NvControlClass;

//---------------------------------------------------------------------------
//
//  Function prototypes.
//
//---------------------------------------------------------------------------
RM_STATUS mthdSetObject(PHWINFO, U032, U032, PCTRLMETHOD, U032, U032);

#ifdef OBSOLETE_FUNCTIONS
RM_STATUS mthdSetStallNotifier(PHWINFO, U032, U032, PCTRLMETHOD, U032, U032);
RM_STATUS mthdStallChannel(PHWINFO, U032, U032, PCTRLMETHOD, U032, U032);
RM_STATUS mthdPush(PHWINFO, U032, U032, PCTRLMETHOD, U032, U032);
RM_STATUS mthdPop(PHWINFO, U032, U032, PCTRLMETHOD, U032, U032);
RM_STATUS mthdPasswd(PHWINFO, U032, U032, PCTRLMETHOD, U032, U032);
RM_STATUS mthdDmaPusher(PHWINFO, U032, U032, PCTRLMETHOD, U032, U032);
#endif

#endif // _CONTROL_H_
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Microsoft Xbox (1.00.4400) [April 2002] [src]\private\ntos\video\nvx\drivers\resman\kernel\inc\clinklist.h ===
#if !defined _CLINKLISTH_
#define _CLINKLISTH_

// C++ class that can be used as a base class by objects that
// are links in a linked list

class CLinkList
{
public:
    CLinkList() { m_pNext = m_pPrev = NULL; }

public:
    virtual VOID Add(CLinkList **ppHead)
    {
        m_pPrev = NULL;
        m_pNext = *ppHead;

        if (*ppHead)
            (*ppHead)->SetPrev(this);

        *ppHead = this;
    }

    virtual VOID Remove(CLinkList **ppHead)
    {
        if (m_pPrev)
            m_pPrev->SetNext(m_pNext);

        if (m_pNext)
            m_pNext->SetPrev(m_pPrev);
    
        if (*ppHead == this)
            *ppHead = m_pNext;
    }
    
    virtual BOOL Exists(CLinkList *pElem)
    {
        CLinkList *pTemp = this;

        while (pTemp)
        {
            if (pTemp == pElem)
                return TRUE;

            pTemp = pTemp->GetNext();
        }
        
        return FALSE;
    }

    CLinkList *GetNext() { return m_pNext; }
    CLinkList *GetPrev() { return m_pPrev; }

    virtual VOID SetNext(CLinkList *pNext) { m_pNext = pNext; }
    virtual VOID SetPrev(CLinkList *pPrev) { m_pPrev = pPrev; }

private:
    CLinkList *m_pNext;
    CLinkList *m_pPrev;
};

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Microsoft Xbox (1.00.4400) [April 2002] [src]\private\ntos\video\nvx\drivers\resman\kernel\inc\arb_fifo.h ===
/***************************************************************************\
|*                                                                           *|
|*        Copyright (c) 1993-1997 NVIDIA, Corp.  All rights reserved.        *|
|*                                                                           *|
|*     NOTICE TO USER:   The source code  is copyrighted under  U.S. and     *|
|*     international laws.   NVIDIA, Corp. of Sunnyvale, California owns     *|
|*     the copyright  and as design patents  pending  on the design  and     *|
|*     interface  of the NV chips.   Users and possessors of this source     *|
|*     code are hereby granted  a nonexclusive,  royalty-free  copyright     *|
|*     and  design  patent license  to use this code  in individual  and     *|
|*     commercial software.                                                  *|
|*                                                                           *|
|*     Any use of this source code must include,  in the user documenta-     *|
|*     tion and  internal comments to the code,  notices to the end user     *|
|*     as follows:                                                           *|
|*                                                                           *|
|*     Copyright (c) 1993-1997  NVIDIA, Corp.    NVIDIA  design  patents     *|
|*     pending in the U.S. and foreign countries.                            *|
|*                                                                           *|
|*     NVIDIA, CORP.  MAKES  NO REPRESENTATION ABOUT  THE SUITABILITY OF     *|
|*     THIS SOURCE CODE FOR ANY PURPOSE.  IT IS PROVIDED "AS IS" WITHOUT     *|
|*     EXPRESS OR IMPLIED WARRANTY OF ANY KIND.  NVIDIA, CORP. DISCLAIMS     *|
|*     ALL WARRANTIES  WITH REGARD  TO THIS SOURCE CODE,  INCLUDING  ALL     *|
|*     IMPLIED   WARRANTIES  OF  MERCHANTABILITY  AND   FITNESS   FOR  A     *|
|*     PARTICULAR  PURPOSE.   IN NO EVENT SHALL NVIDIA, CORP.  BE LIABLE     *|
|*     FOR ANY SPECIAL, INDIRECT, INCIDENTAL,  OR CONSEQUENTIAL DAMAGES,     *|
|*     OR ANY DAMAGES  WHATSOEVER  RESULTING  FROM LOSS OF USE,  DATA OR     *|
|*     PROFITS,  WHETHER IN AN ACTION  OF CONTRACT,  NEGLIGENCE OR OTHER     *|
|*     TORTIOUS ACTION, ARISING OUT  OF OR IN CONNECTION WITH THE USE OR     *|
|*     PERFORMANCE OF THIS SOURCE CODE.                                      *|
|*                                                                           *|
 \***************************************************************************/

/******************************** ARB Structures ****************************\
*                                                                           *
* Module: ARB_FIFO.H                                                        *
*                                                                           *
*****************************************************************************
*                                                                           *
* History:                                                                  *
*                                                                           *
\***************************************************************************/
#ifndef _ARB_FIFO_H
#define _ARB_FIFO_H

#define DEFAULT_GR_LWM 100
#define DEFAULT_VID_LWM 100
#define DEFAULT_GR_BURST_SIZE 256
#define DEFAULT_VID_BURST_SIZE 128


typedef struct {

  U032 crtc1_lwm;    // GR LWM
  U032 crtc2_lwm;    // GR LWM (NV11)
  U032 video_lwm;    // Video LWM

  U032 crtc1_burst_size;
  U032 crtc2_burst_size;
  U032 video_burst_size;

  U032 valid;  // good values

} fifo_info;

typedef struct {
  U032 hres;     //horizontal resolution, for head 1, in pixels
  U032 htotal;   //Total number of horizontal pixels, including blanking and sync pixels.
                //Used to calculate horizontal line period from PClk.
  U032 vres;     //vertical resolution, for head 1, in lines
  U032 refresh;  //refresh rate for head 1, in Hz

  //Same values, but for head 2:
  U032 hres2;
  U032 htotal2;
  U032 vres2;
  U032 refresh2;

  U032 pclk_khz;
  U032 pclk2_khz;
  U032 mclk_khz;
  U032 nvclk_khz;
  U032 memory_width;   //FBI width, in bits (e.g., 256)
  U032 memory_type;    //0=sdr, 1=ddr

  U032 h2_owns_vs;     //1 = scaler is displaying on head 2.  0 = scaler is displaying on head 1.
  U032 video_source_hres; //number of pixels/texels/samples in the video source horizontally, and
  U032 video_source_vres; //vertically.

//  U032  memory_width;
//  char memory_type;
  //8, 16 or 32 bits per pixel
  U032 pix_bpp;        //color depth on head 1
  U032 pix_bpp_h2;     //color depth on head 2
  //(scaler is always 16 bpp)
//  char pix_bpp;

  //Are these engines in use?  1=yes, 0=no.
  char enable_h1;     //First head
  char enable_h2;     //Second head
  char enable_video;
  char enable_mp;
  U032  ram_config;

  //No longer used (NV11)
  char mem_page_miss;
  char mem_latency; //cas_latency
  char gr_during_vid;
  char mem_aligned;
} sim_state;


//    new NV11
typedef struct {
  U032 hres;
  U032 vres;
  U032 depth;
  U032 refresh;
} screen_t;

typedef struct {
  U032 lwm;
  U032 lwm_min;
  U032 size;
} fifo_params;
  
typedef enum { CRTC_MODE_OLD, CRTC_MODE_NEW } crtc_mode;

typedef struct {
  U032 enable;
  U032 hres;
  U032 vres;
  U032 depth;
  U032 refresh;
  U032 pclk;         //in MHz
  U032 pclk_period;  //in ps (no longer ns!!!)
  U032 hclk_period;  //in ns
  U032 drain_rate;
  crtc_mode mode;
  U032 burst_size;
  U032 min_burst_size;
  U032 max_burst_size;
  U032 cursor_burst_size;
  U032 request_delay;
  fifo_params fifo;
} crtc_t;

typedef struct {
  U032 enable;
  U032 source_hres;
  U032 source_vres;
  U032 depth;
  U032 window_hres;
  U032 window_vres;
  U032 hscale; //now in 1000x units?
  U032 vscale;
  U032 burst_size;
  U032 min_burst_size;
  U032 max_burst_size;
  U032 request_delay;
  U032 drain_rate;
  fifo_params fifo;
  U032 h2_owns_vs;
  U032 max_fifo_size;
  U032 pclk_period;//now in ps, not ns
} scaler_t;

typedef enum { round_robin, rtr_interleave, rtr_interrupt, rtr_priority } arb_type;

typedef struct {
  U032 mclk;
  U032 mclk_period; //now in ps, no longer ns
  U032 partitions;
  U032 ddr;
  U032 data_rate;
  U032 page_fault_penalty;
  U032 page_fault_width;
  U032 refresh_penalty;
  U032 arbitration_latency;
  arb_type arbiter;
  U032 pipeline_latency;
  U032 stall_cycles;
  U032 cmdq_depth_rw;
  U032 cmdq_depth_cmd;
  U032 command_latency;
  U032 interrupt_rate;
} mem_t;

typedef struct {
  U032 burst_size;
  U032 request_delay_mclks;
  U032 request_delay;
  U032 latency;
} rtr_t;


#define VIDEO       0
#define GRAPHICS    1
#define MPORT       2
#define ENGINE      3


#define GFIFO_SIZE      320     /* Graphics Fifo Sizes */
#define GFIFO_SIZE_128  256     /* Graphics Fifo Sizes */
#define MFIFO_SIZE      120     /* MP  Fifo Sizes */
#define VFIFO_SIZE      256     /* Video Fifo Sizes */

#define    ABS(a)    (a>0?a:-a)

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Microsoft Xbox (1.00.4400) [April 2002] [src]\private\ntos\video\nvx\drivers\resman\kernel\inc\cursor.h ===
#ifndef _CURSOR_H_
#define _CURSOR_H_
//
// (C) Copyright NVIDIA Corporation Inc., 1997. All rights reserved.
//
/******************************* Cursor Module ******************************\
*                                                                           *
* Module: cursor.h                                                          *
*       cursor image and DAC support routines.                              *                                      *
*                                                                           *
*****************************************************************************
*                                                                           *
* History:                                                                  *
*       Jim Putnam (putnam)    12/05/97 - genesis                           *
*                                                                           *
\***************************************************************************/

//---------------------------------------------------------------------------
//
//  Function prototypes for the cursor class.
//
//---------------------------------------------------------------------------

RM_STATUS cursLutDacCreate(PCLASSOBJECT, POBJECT *);
RM_STATUS cursLutDacDestroy(PCLASSOBJECT);
RM_STATUS cursLutDacSetNotifyCtxDma(POBJECT, PMETHOD, U032, U032);
RM_STATUS cursLutDacSetNotify(POBJECT, PMETHOD, U032, U032);

RM_STATUS cursLutNtscCreate(PCLASSOBJECT, POBJECT *);
RM_STATUS cursLutNtscDestroy(PCLASSOBJECT);
RM_STATUS cursLutNtscSetNotifyCtxDma(POBJECT, PMETHOD, U032, U032);
RM_STATUS cursLutNtscSetNotify(POBJECT, PMETHOD, U032, U032);

RM_STATUS cursLutOvlDacCreate(PCLASSOBJECT, POBJECT *);
RM_STATUS cursLutOvlDacDestroy(PCLASSOBJECT);
RM_STATUS cursLutOvlDacSetNotifyCtxDma(POBJECT, PMETHOD, U032, U032);
RM_STATUS cursLutOvlDacSetNotify(POBJECT, PMETHOD, U032, U032);

#endif // _CURSOR_H
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Microsoft Xbox (1.00.4400) [April 2002] [src]\private\ntos\video\nvx\drivers\resman\kernel\inc\AudioHw.h ===
#if !defined _AUDIODEF_H_
#define _AUDIODEF_H_

#pragma pack (push, _store_)
#pragma pack (1)

#include <nvtypes.h>

#define VOLU32		U032 volatile
#define VOLU16		U016 volatile
#define VOLU8		U08 volatile

// interrupt registers
typedef union
{
	struct
	{	
		VOLU32 General		: 1;
		VOLU32 DeltaWarning : 1;
		VOLU32 RetriggerEvent : 1;		/* not in INTERRUPT_ENABLE  */
		VOLU32 DeltaPanic	: 1;
		VOLU32 FETrap		: 1;
		VOLU32 FENotify		: 1;
		VOLU32 FEVoice		: 1;
		VOLU32 FEMethodOverFlow : 1;
		VOLU32 GPMailbox	: 1;
		VOLU32 GPNotify		: 1;
		VOLU32 EPMailbox	: 1;
		VOLU32 EPNotify		: 1;
		VOLU32				: 21;
	};
	
	VOLU32 uValue;
} R_INTR;

// front end
typedef union
{
	struct
	{	
		VOLU32 NotifyISO	: 1;
		VOLU32 ReadISO		: 1;
		VOLU32 WriteISO		: 1;
		VOLU32 TrapOnNotifier : 1;
		VOLU32 Lock			: 1;
		VOLU32 Mode			: 3;
		VOLU32 TrapReason	: 4;
        VOLU32 PIOClass     : 1;
        VOLU32 EnableLock   : 1;
		VOLU32 MethodOrigin : 1;
		VOLU32 ValidSESSL   : 1;
		VOLU32 ValidSESGE   : 1;
		VOLU32 ValidGPSGE   : 1;
		VOLU32				: 14;
	};
	
	VOLU32 uValue;
} R_FE_CONTROL;

// setup engine
typedef union
{
	struct
	{	
		VOLU32 ReadISO		: 1;
		VOLU32 WriteISO		: 1;
		VOLU32 SampleReadISO : 1;
		VOLU32 GSCUpdate	: 2;
		VOLU32 DeltaWarn	: 1;
		VOLU32 Retriggered	: 1;
		VOLU32 DeltaPanic	: 1;
		VOLU32				: 24;
	};
	
	VOLU32 uValue;
} R_SE_CONTROL;

typedef union
{
	struct
	{	
		VOLU32 Global   : 1;
		VOLU32 DSP      : 1;
		VOLU32 NMI      : 1;
		VOLU32 Abort   	: 1;
		VOLU32          : 28;
	};
	
	VOLU32 uValue;
} R_GP_RESET;

typedef union
{
	struct
	{	
		VOLU32 Start		: 1;
		VOLU32 Ready		: 1;
		VOLU32 ReqIOC       : 1;
		VOLU32 ReqEOL   	: 1;
		VOLU32 ReqErr	    : 1;
		VOLU32				: 27;
	};
	
	VOLU32 uValue;
} R_GPDMA_CONFIG;

typedef union
{
	struct
	{	
		VOLU32 Idle         : 1;
		VOLU32 Stopped      : 1;
		VOLU32 EnableStop   : 1;
		VOLU32 IntrNotify   : 1;
		VOLU32				: 28;
	};
	
	VOLU32 uValue;
} R_GP_CONTROL;

typedef struct
{
    VOLU32  uAddr;

    union
    {
        struct
        {
            VOLU32 Length   : 16;
            VOLU32 ContSize : 2;
            VOLU32 Samples  : 5;
            VOLU32 Stereo   : 1;
            VOLU32 Owner    : 1;
            VOLU32          : 6;
            VOLU32 Intr     : 1;
        };

        VOLU32 uValue;
    }Control;

} MCP1_PRD;

// word format for DSP commands

typedef union
{
    struct
    {
        U032 nextCommand    : 14;
        U032 EOL            : 1;
        U032                : 17;
    } field;

    U032 uValue;
} WORD0;

typedef union
{
    struct
    {
        U032 interleave     : 1;
        U032 dspToSys       : 1;
        U032 IOC            : 2;
        U032 smOffWrBack    : 1;
        U032 smBufId        : 4;
        U032 iso            : 1;
        U032 smDataFormat   : 3;
        U032                : 1;
        U032 increment      : 11;
        U032                : 7;
    } field;

    U032 uValue;
} WORD1;

typedef union
{
    struct
    {
        U032 count0     : 4;
        U032 count1     : 10;
        U032            : 18;
    } field;

    U032 uValue;
} WORD2;

typedef union
{
    struct
    {
        U032 dspStart   : 14;
        U032 nul        : 1;
        U032            : 17;
    } field;

    U032 uValue;
} WORD3;

typedef union
{
    struct
    {
        U032 smOffset   : 24;
        U032            : 8;
    } field;

    U032 uValue;
} WORD4;

typedef union
{
    struct
    {
        U032 smBaseAddr : 24;
        U032            : 8;
    } field;

    U032 uValue;
} WORD5;

typedef union
{
    struct
    {
        U032 smSizeMinus1   : 24;
        U032                : 8;
    } field;

    U032 uValue;
} WORD6;

typedef struct
{
    WORD0 w0;
    WORD1 w1;
    WORD2 w2;
    WORD3 w3;
} DSP_CONTROL;

#define INCR(x,limit)		(((x) < ((limit)-1))?((x)++):0)
#define DECR(x,limit)		((x)?((x)--):((limit)-1))

#define APU_INVALID_METHOD		0xFFFF

typedef struct _memdesc
{
	void	*pLinAddr;
	void	*pPhysAddr;
	U032	Size;
} MEM_DESC, *PMEM_DESC;


typedef struct 
{
	U032	GSCNT;
	U032	CurrentOffset;
	U032	Zero;
	U008	Res0;
	U008	SamplesAvailable;       // not in sync
	U008	EnvelopeActive;         // not in sync
	U008	Status;
} NV1BA0NOTIFICATION, *PNV1BA0NOTIFICATION;

#define LOW16(x)								(U016)(0x0000ffff & (U032)(x))
#define LOW08(x)								(U008)(0x000000ff & (U032)(x))

#define MIN(x,y)								(((x)<(y))?(x):(y))
#define MAX(x,y)								(((x)>(y))?(x):(y))

// codec defines
#define ACI_OFFSET                              0x100
#define MIXER_OFFSET                            0x000

// revision IDs of the hardware
#define REV_MCP1								0xA1

// sizes of various HW structures (in bytes)
// #define SIZEOF_PRD                              8
// #define SIZEOF_VOICE                            128
#define SIZEOF_TARGET_HRTF                      64
#define SIZEOF_CURRENT_HRTF                     96

// all EP methods are in NV_PAPU_NV1BA0 + PIO_EP_OFFSET
#define PIO_EP_OFFSET                           0x8000

// all debug methods are in NV_PAPU_NV1BA0 + PIO_DEBUG_OFFSET
#define PIO_DEBUG_OFFSET                        0x4000

#pragma pack (pop, _store_)

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Microsoft Xbox (1.00.4400) [April 2002] [src]\private\ntos\video\nvx\drivers\resman\kernel\inc\dmapush.h ===
#ifndef _DMAPUSH_H_
#define _DMAPUSH_H_
/**************************** DMA Pusher *****************************\
*                                                                           *
* Module: DMAPUSH.H                                                         *
*       Control method implementation.                                      *
*                                                                           *
*****************************************************************************
*                                                                           *
* History:                                                                  *
*       Bruce Thompson (brucet)    02/22/96 - wrote it.                     *
*                                                                           *
\***************************************************************************/

#include "dma.h"

//---------------------------------------------------------------------------
//
//  Defines.
//
//---------------------------------------------------------------------------

//---------------------------------------------------------------------------
//
// Miscellaneous structure definitions.
//
//---------------------------------------------------------------------------

//---------------------------------------------------------------------------
//
//  Control object defines.
//
//---------------------------------------------------------------------------
typedef struct _def_dmapush_object  DMAPUSHER,  *PDMAPUSHER;

// The object which represents the state of the DMA pusher
struct _def_dmapush_object
{
    BUFFEROBJECT    BufferObject;
	U032            CurrentBuffer;
	U032            AddressSpace;
	U032            TlbPtBase;
	U032            Offset;
};

//---------------------------------------------------------------------------
//
//  Function prototypes.
//
//---------------------------------------------------------------------------

// Allocate and init new DMA pusher object
RM_STATUS dmaCreateDmaPusher
(
    PDMAPUSHER *DmaPushObject,    // Ptr to object to initialize
	U032       ChID               // Channel this object will be used on
);

// Delete a DMA pusher object
RM_STATUS dmaDeleteDmaPusher
(
    PDMAPUSHER DmaPushObject      // Ptr to object to delete
);

// Start a DMA pusher transfer
RM_STATUS dmaPushStartXfer
(
    PBUFFEROBJECT BuffObject,     // The buffer object to use
    U032          BuffNum         // The buffer to start transfer on
);

// Start/Continue a DMA pusher transfer
RM_STATUS dmaPushXfer
(
   PBUFFER  pBuffer               // The buffer used for transfer
);

// Set the DMA pusher Dma specification object
RM_STATUS mthdSetPushBufferCtxDma
(
    POBJECT Object,               // Ptr to DMA push object for this channel
    PMETHOD Method,               // Ptr to method structure
    U032    Offset,               // Method offset
    V032    Data                  // Method data
);

// Set the DMA pusher notify Dma specification object
RM_STATUS mthdSetPushBufferNotifyCtxDma
(
    POBJECT Object,               // Ptr to DMA push object for this channel
    PMETHOD Method,               // Ptr to method structure
    U032    Offset,               // Method offset
    V032    Data                  // Method data
);

// Set the start offset for this DMA push operation
RM_STATUS mthdSetPushBufferStart
(
    POBJECT Object,               // Ptr to DMA push object for this channel
    PMETHOD Method,               // Ptr to method structure
    U032    Offset,               // Method offset
    V032    Data                  // Method data
);

// Set the length for this DMA push operation
RM_STATUS mthdSetPushBufferLength
(
    POBJECT Object,               // Ptr to DMA push object for this channel
    PMETHOD Method,               // Ptr to method structure
    U032    Offset,               // Method offset
    V032    Data                  // Method data
);

// Start the DMA push operation
RM_STATUS mthdSetPushBufferNotify
(
    POBJECT Object,               // Ptr to DMA push object for this channel
    PMETHOD Method,               // Ptr to method structure
    U032    Offset,               // Method offset
    V032    Data                  // Method data
);


#endif // _DMAPUSH_H_
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Microsoft Xbox (1.00.4400) [April 2002] [src]\private\ntos\video\nvx\drivers\resman\kernel\inc\event.h ===
#ifndef _EVENT_H_
#define _EVENT_H_
 /***************************************************************************\
|*                                                                           *|
|*       Copyright 1993-1998 NVIDIA, Corporation.  All rights reserved.      *|
|*                                                                           *|
|*     NOTICE TO USER:   The source code  is copyrighted under  U.S. and     *|
|*     international laws.  Users and possessors of this source code are     *|
|*     hereby granted a nonexclusive,  royalty-free copyright license to     *|
|*     use this code in individual and commercial software.                  *|
|*                                                                           *|
|*     Any use of this source code must include,  in the user documenta-     *|
|*     tion and  internal comments to the code,  notices to the end user     *|
|*     as follows:                                                           *|
|*                                                                           *|
|*       Copyright 1993-1998 NVIDIA, Corporation.  All rights reserved.      *|
|*                                                                           *|
|*     NVIDIA, CORPORATION MAKES NO REPRESENTATION ABOUT THE SUITABILITY     *|
|*     OF  THIS SOURCE  CODE  FOR ANY PURPOSE.  IT IS  PROVIDED  "AS IS"     *|
|*     WITHOUT EXPRESS OR IMPLIED WARRANTY OF ANY KIND.  NVIDIA, CORPOR-     *|
|*     ATION DISCLAIMS ALL WARRANTIES  WITH REGARD  TO THIS SOURCE CODE,     *|
|*     INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY, NONINFRINGE-     *|
|*     MENT,  AND FITNESS  FOR A PARTICULAR PURPOSE.   IN NO EVENT SHALL     *|
|*     NVIDIA, CORPORATION  BE LIABLE FOR ANY SPECIAL,  INDIRECT,  INCI-     *|
|*     DENTAL, OR CONSEQUENTIAL DAMAGES,  OR ANY DAMAGES  WHATSOEVER RE-     *|
|*     SULTING FROM LOSS OF USE,  DATA OR PROFITS,  WHETHER IN AN ACTION     *|
|*     OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,  ARISING OUT OF     *|
|*     OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOURCE CODE.     *|
|*                                                                           *|
|*     U.S. Government  End  Users.   This source code  is a "commercial     *|
|*     item,"  as that  term is  defined at  48 C.F.R. 2.101 (OCT 1995),     *|
|*     consisting  of "commercial  computer  software"  and  "commercial     *|
|*     computer  software  documentation,"  as such  terms  are  used in     *|
|*     48 C.F.R. 12.212 (SEPT 1995)  and is provided to the U.S. Govern-     *|
|*     ment only as  a commercial end item.   Consistent with  48 C.F.R.     *|
|*     12.212 and  48 C.F.R. 227.7202-1 through  227.7202-4 (JUNE 1995),     *|
|*     all U.S. Government End Users  acquire the source code  with only     *|
|*     those rights set forth herein.                                        *|
|*                                                                           *|
 \***************************************************************************/
/********************************* DMA Manager *****************************\
*                                                                           *
* Module: EVENT.H                                                           *
*       Event object/engine management.                                     *
*                                                                           *
*****************************************************************************
*                                                                           *
* History:                                                                  *
*                                                                           *
\***************************************************************************/


RM_STATUS eventSetObjectEventNotify(POBJECT, U032, U032, U032, U064);
RM_STATUS eventSetEventNotify(PHWINFO, U032, U032, U032, U032, U064);
RM_STATUS eventRemoveObjectEventNotify(POBJECT, U032);

#endif // _DMA_H_
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Microsoft Xbox (1.00.4400) [April 2002] [src]\private\ntos\video\nvx\drivers\resman\kernel\heap\nv\heap.c ===
/***************************************************************************\
|*                                                                           *|
|*        Copyright (c) 1993-2000 NVIDIA, Corp.  All rights reserved.        *|
|*                                                                           *|
|*     NOTICE TO USER:   The source code  is copyrighted under  U.S. and     *|
|*     international laws.   NVIDIA, Corp. of Sunnyvale, California owns     *|
|*     the copyright  and as design patents  pending  on the design  and     *|
|*     interface  of the NV chips.   Users and possessors of this source     *|
|*     code are hereby granted  a nonexclusive,  royalty-free  copyright     *|
|*     and  design  patent license  to use this code  in individual  and     *|
|*     commercial software.                                                  *|
|*                                                                           *|
|*     Any use of this source code must include,  in the user documenta-     *|
|*     tion and  internal comments to the code,  notices to the end user     *|
|*     as follows:                                                           *|
|*                                                                           *|
|*     Copyright (c) 1993-2000  NVIDIA, Corp.    NVIDIA  design  patents     *|
|*     pending in the U.S. and foreign countries.                            *|
|*                                                                           *|
|*     NVIDIA, CORP.  MAKES  NO REPRESENTATION ABOUT  THE SUITABILITY OF     *|
|*     THIS SOURCE CODE FOR ANY PURPOSE.  IT IS PROVIDED "AS IS" WITHOUT     *|
|*     EXPRESS OR IMPLIED WARRANTY OF ANY KIND.  NVIDIA, CORP. DISCLAIMS     *|
|*     ALL WARRANTIES  WITH REGARD  TO THIS SOURCE CODE,  INCLUDING  ALL     *|
|*     IMPLIED   WARRANTIES  OF  MERCHANTABILITY  AND   FITNESS   FOR  A     *|
|*     PARTICULAR  PURPOSE.   IN NO EVENT SHALL NVIDIA, CORP.  BE LIABLE     *|
|*     FOR ANY SPECIAL, INDIRECT, INCIDENTAL,  OR CONSEQUENTIAL DAMAGES,     *|
|*     OR ANY DAMAGES  WHATSOEVER  RESULTING  FROM LOSS OF USE,  DATA OR     *|
|*     PROFITS,  WHETHER IN AN ACTION  OF CONTRACT,  NEGLIGENCE OR OTHER     *|
|*     TORTIOUS ACTION, ARISING OUT  OF OR IN CONNECTION WITH THE USE OR     *|
|*     PERFORMANCE OF THIS SOURCE CODE.                                      *|
|*                                                                           *|
 \***************************************************************************/

/***************************** Balanced Tree *******************************\
*                                                                           *
* Module: HEAP.C                                                            *
*   A generic library for heap management is provided.                      *
*                                                                           *
*****************************************************************************
*                                                                           *
* History:                                                                  *
*       David Schmenk (dschmenk)    05/19/98 - wrote it.                    *
*                                                                           *
\***************************************************************************/
#include <nvrm.h>
#include <class.h>
#include <heap.h>
#include <os.h>
#include <rmfail.h>
#include <smp.h>

//
// Globals.
//
static U032 memTypeFlags[13] =
{
    MEM_FLAG_IMAGE,
    MEM_FLAG_DEPTH      | MEM_GROW_DOWN,
    MEM_FLAG_TEXTURE,
    MEM_FLAG_OVERLAY,
    MEM_FLAG_FONT,
    MEM_FLAG_CURSOR     | MEM_GROW_DOWN,
    MEM_FLAG_DMA        | MEM_GROW_DOWN,
    MEM_FLAG_INSTANCE   | MEM_GROW_DOWN,
    MEM_FLAG_PRIMARY,
    MEM_FLAG_IMAGE_TILED,
    MEM_FLAG_DEPTH_COMPR16  | MEM_GROW_DOWN,
    MEM_FLAG_DEPTH_COMPR32  | MEM_GROW_DOWN,
    0
};

//
// Statics.
//
static RM_STATUS heapFbFree(PHWINFO, U032);

#ifdef DEBUG
/****************************************************************************/
/*                                                                          */
/*                             DEBUG support!                               */
/*                                                                          */
/****************************************************************************/
U032 dbgDumpHeap = 0;
#define HEAP_VALIDATE(h)    {heapValidate(h);if(dbgDumpHeap)heapDump(h);}

void heapDump
(
    PHEAP heap
)
{
    U032      i;
    U032      free;
    PMEMBLOCK block;

    if (!heap) return;
    DBG_PRINT_STRING_VALUE(DEBUGLEVEL_TRACEINFO,"Heap dump.  Size = ", heap->total);
    DBG_PRINT_STRING_VALUE(DEBUGLEVEL_TRACEINFO,"            Free = ", heap->free);
    DBG_PRINT_STRING(DEBUGLEVEL_TRACEINFO,"=================================================================\r\n");
    for (i = 0; i < heap->numBanks; i++)
    {
        DBG_PRINT_STRING_VALUE(DEBUGLEVEL_TRACEINFO,"Bank: ", i);
        DBG_PRINT_STRING_VALUE(DEBUGLEVEL_TRACEINFO,"\tType flags = ", heap->Bank[i].flags);
        DBG_PRINT_STRING_VALUE(DEBUGLEVEL_TRACEINFO,"\tOffset     = ", heap->Bank[i].offset);
        DBG_PRINT_STRING_VALUE(DEBUGLEVEL_TRACEINFO,"\tSize       = ", heap->Bank[i].size);
    }
    DBG_PRINT_STRING(DEBUGLEVEL_TRACEINFO,"Block List Forward:\r\n");
    block = heap->pBlockList;
    do
    {
        if (block->owner == FREE_BLOCK)
            DBG_PRINT_STRING(DEBUGLEVEL_TRACEINFO,"\tOwner = FREE\r\n");
        else
        {
            DBG_PRINT_STRING_VALUE(DEBUGLEVEL_TRACEINFO,"\tOwner = ", block->owner);
            DBG_PRINT_STRING_VALUE(DEBUGLEVEL_TRACEINFO,"\tType  = ", block->u0.type);
            DBG_PRINT_STRING_VALUE(DEBUGLEVEL_TRACEINFO,"\tHwres = ", block->u1.hwres);
        }
        DBG_PRINT_STRING_VALUE(DEBUGLEVEL_TRACEINFO,"\t\tBegin = ", block->begin);
        DBG_PRINT_STRING_VALUE(DEBUGLEVEL_TRACEINFO,"\t\tEnd   = ", block->end);
        block = block->next;
    } while (block != heap->pBlockList);
    DBG_PRINT_STRING(DEBUGLEVEL_TRACEINFO,"Block List Reverse:\r\n");
    block = heap->pBlockList;
    do
    {
        block = block->prev;
        if (block->owner == FREE_BLOCK)
            DBG_PRINT_STRING(DEBUGLEVEL_TRACEINFO,"\tOwner = FREE\r\n");
        else
        {
            DBG_PRINT_STRING_VALUE(DEBUGLEVEL_TRACEINFO,"\tOwner = ", block->owner);
            DBG_PRINT_STRING_VALUE(DEBUGLEVEL_TRACEINFO,"\tType  = ", block->u0.type);
            DBG_PRINT_STRING_VALUE(DEBUGLEVEL_TRACEINFO,"\tHwres  = ", block->u1.hwres);
        }
        DBG_PRINT_STRING_VALUE(DEBUGLEVEL_TRACEINFO,"\t\tBegin = ", block->begin);
        DBG_PRINT_STRING_VALUE(DEBUGLEVEL_TRACEINFO,"\t\tEnd   = ", block->end);
    } while (block != heap->pBlockList);
    DBG_PRINT_STRING(DEBUGLEVEL_TRACEINFO,"FREE Block List Forward:\r\n");
    free  = 0;
    if ((block = heap->pFreeBlockList))
        do
        {
            DBG_PRINT_STRING(DEBUGLEVEL_TRACEINFO,"\tOwner = FREE\r\n");
            DBG_PRINT_STRING_VALUE(DEBUGLEVEL_TRACEINFO,"\t\tBegin = ", block->begin);
            DBG_PRINT_STRING_VALUE(DEBUGLEVEL_TRACEINFO,"\t\tEnd   = ", block->end);
            free += block->end - block->begin + 1;
            block = block->u1.nextFree;
        } while (block != heap->pFreeBlockList);
    DBG_PRINT_STRING_VALUE(DEBUGLEVEL_TRACEINFO,"\tCalculated free count = ", free);
    DBG_PRINT_STRING(DEBUGLEVEL_TRACEINFO,"FREE Block List Reverse:\r\n");
    free  = 0;
    if ((block = heap->pFreeBlockList))
        do
        {
            block = block->u0.prevFree;
            DBG_PRINT_STRING(DEBUGLEVEL_TRACEINFO,"\tOwner = FREE\r\n");
            DBG_PRINT_STRING_VALUE(DEBUGLEVEL_TRACEINFO,"\t\tBegin = ", block->begin);
            DBG_PRINT_STRING_VALUE(DEBUGLEVEL_TRACEINFO,"\t\tEnd   = ", block->end);
            free += block->end - block->begin + 1;
        } while (block != heap->pFreeBlockList);
    DBG_PRINT_STRING_VALUE(DEBUGLEVEL_TRACEINFO,"\tCalculated free count = ", free);
}

void heapValidate
(
    PHEAP heap
)
{
    PMEMBLOCK block, blockFree;
    U032      free, used;

    if (!heap) return;
    /*
     * Scan the blocks and check for consistency.
     */
    free      = 0;
    used      = 0;
    block     = heap->pBlockList;
    blockFree = heap->pFreeBlockList;
    do
    {
        if (block->owner == FREE_BLOCK)
        {
            if (!blockFree)
            {
                DBG_PRINT_STRING(DEBUGLEVEL_ERRORS,"Validate: Invalid free list with free blocks found.\r\n");
                heapDump(heap);
                DBG_BREAKPOINT();
            }
            free += block->end - block->begin + 1;
            if (block != blockFree)
            {
                DBG_PRINT_STRING(DEBUGLEVEL_ERRORS,"Validate: Free list not consistent with block list.\r\n");
                heapDump(heap);
                DBG_BREAKPOINT();
            }
            blockFree = blockFree->u1.nextFree;
        }
        else
            used += block->end - block->begin + 1;
        if (block->next != heap->pBlockList)
        {
            if (block->end != block->next->begin - 1)
            {
                DBG_PRINT_STRING_VALUE(DEBUGLEVEL_ERRORS,"Validate: Hole between blocks at offset = ", block->end);
                heapDump(heap);
                DBG_BREAKPOINT();
            }
        }
        else
        {
            if (block->end != heap->total - 1)
            {
                DBG_PRINT_STRING(DEBUGLEVEL_ERRORS,"Validate: Last block doesn't end at top.\r\n");
                heapDump(heap);
                DBG_BREAKPOINT();
            }
            if (block->next->begin != 0)
            {
                DBG_PRINT_STRING(DEBUGLEVEL_ERRORS,"Validate: First block doesn't start at bottom.\r\n");
                heapDump(heap);
                DBG_BREAKPOINT();
            }
        }
        if (block->end < block->begin)
        {
            DBG_PRINT_STRING_VALUE(DEBUGLEVEL_ERRORS,"Validate: Invalid block begin = ", block->begin);
            DBG_PRINT_STRING_VALUE(DEBUGLEVEL_ERRORS,"                        end   = ", block->end);
            heapDump(heap);
            DBG_BREAKPOINT();
        }
        block = block->next;
    } while (block != heap->pBlockList);
    if (free != heap->free)
    {
        DBG_PRINT_STRING(DEBUGLEVEL_ERRORS,"Validate: Calculated free count not consistent with heap free count.\r\n");
        heapDump(heap);
        DBG_BREAKPOINT();
    }
    if ((used + free) > heap->total)
    {
        DBG_PRINT_STRING(DEBUGLEVEL_ERRORS,"Validate: Calculated used count not consistent with heap size.\r\n");
        heapDump(heap);
        DBG_BREAKPOINT();
    }
}
#else
#define HEAP_VALIDATE(h)
#endif // DEBUG

//
// Create a unique memhandle by incrementing the handle, and if it's about
// to overflow into the upper 2 bytes, reset it back to 0.
//
#define UNIQUE_MEMHANDLE()      \
        heap->memHandle = ((heap->memHandle + 1) % 0x10000) ? (heap->memHandle + 1) : 0xcafe0000


/****************************************************************************/
/*                                                                          */
/*                             Heap Manager                                 */
/*                                                                          */
/****************************************************************************/
//
// Create a heap.
//
RM_STATUS heapCreate
(
	PHWINFO pDev,
    U008   *pMem,
    U032   size,
    U032   numBanks,
    PHEAP  *heap
)
{
    PMEMBLOCK block;
    U032      sizeBank, i;

    //
    // Simply create a free heap with the indicated number of banks.
    //
    DBG_PRINT_STRING(DEBUGLEVEL_TRACEINFO, "NVRM: Heap Manager: HEAP ABOUT TO BE CREATED.\r\n");

    if (!numBanks) numBanks = 1;
    if (osAllocMem((VOID **)heap, sizeof(HEAP) + (numBanks - 1)*sizeof(MEMBANK)) == RM_OK)
    {
        (*heap)->base  = pMem;
        (*heap)->total = size;
        (*heap)->free  = size;
        if (osAllocMem((VOID **)&block, sizeof(MEMBLOCK)) != RM_OK)
        {
            osFreeMem((VOID *)*heap);
            return (RM_ERR_NO_FREE_MEM);
        }
        block->owner    = FREE_BLOCK;
        block->begin    = 0;
        block->align    = 0;
        block->end      = size - 1;
        block->u0.prevFree = block;
        block->u1.nextFree = block;
        block->next     = block;
        block->prev     = block;
        //
        // Fill in the heap bank info.
        //
        (*heap)->pBlockList     = block;
        (*heap)->pFreeBlockList = block;
        (*heap)->numBanks       = numBanks;
        (*heap)->memHandle      = 0xcafe0000;

        //We may modify the memory property table, so we make a per-device copy.
        for (i = 0; i < 11; i++) {
            (*heap)->memTypeFlags[i] = memTypeFlags[i];
        }

        sizeBank                = pDev->Framebuffer.HalInfo.RamSize / numBanks;
        for (i = 0; i < numBanks; i++)
        {
            (*heap)->Bank[i].offset = i * sizeBank;
            (*heap)->Bank[i].size   = sizeBank;
            (*heap)->Bank[i].flags  = 0;
        }

        (*heap)->Bank[0].flags             = (*heap)->memTypeFlags[MEM_TYPE_PRIMARY];
        (*heap)->Bank[numBanks - 1].flags  = (*heap)->memTypeFlags[MEM_TYPE_INSTANCE]
                                          |  (*heap)->memTypeFlags[MEM_TYPE_CURSOR]
                                          |  (*heap)->memTypeFlags[MEM_TYPE_DEPTH]
                                          |  (*heap)->memTypeFlags[MEM_TYPE_DEPTH_COMPR16]
                                          |  (*heap)->memTypeFlags[MEM_TYPE_DEPTH_COMPR32]
                                          |  (*heap)->memTypeFlags[MEM_TYPE_DMA];
        if (numBanks > 1)
        {
            if (numBanks > 2)
            {
                if (IsNV10orBetter(pDev) && (pDev->Framebuffer.HalInfo.RamType == BUFFER_DDRAM))
                {
                    /*
                     * With DDR, there's a penalty for switching external banks, so we'll try to keep
                     * important allocations (IMAGE/DEPTH) in the same external bank. The layout will be
                     *
                     *  bank0:          PRIMARY/IMAGE
                     *  bank1:          DEPTH
                     *  bank2:          IMAGE
                     *  bank3:          IMAGE and everything else
                     *
                     * Note, we'll set MEM_GROW_DOWN on any non-IMAGE/DEPTH buffers, so these start at the
                     * end of memory growing toward the middle leaving as big a block as possible unfragmented
                     * for IMAGE/DEPTH buffer allocs to grow into.
                     *
                     * Also, change IMAGE buffers to grow down and DEPTH buffers grow up. This fixes 2
                     * problems when an IMAGE/DEPTH buffer doesn't fit in their internal bank:
                     *
                     *  . in 10x7x32 triple buffered, when the 3rd IMAGE buffer doesn't fit in bank0,
                     *      we won't put it in with the DEPTH buffer in bank1 ... growing down will cause
                     *      it to be in bank2 or bank3.
                     *
                     *  . in 16x12x32 double buffered, when the DEPTH buffer doesn't fit in bank1, the 2nd
                     *      heapAlloc loop will place it as close as possible to the PRIMARY surface buffer.
                     *      The means it'll mostly fit in the first external bank, so we switch external banks
                     *      only 1/2 the time when flipping. In frontbuffer rendering we'll switch banks only
                     *      for the portion that's above 8MB.
                     */

                    (*heap)->memTypeFlags[MEM_TYPE_TEXTURE]  |= MEM_GROW_DOWN;
                    (*heap)->memTypeFlags[MEM_TYPE_OVERLAY]  |= MEM_GROW_DOWN;
                    (*heap)->memTypeFlags[MEM_TYPE_FONT]     |= MEM_GROW_DOWN;

                    (*heap)->memTypeFlags[MEM_TYPE_IMAGE]        |= MEM_GROW_DOWN;
                    (*heap)->memTypeFlags[MEM_TYPE_IMAGE_TILED]  |= MEM_GROW_DOWN;
                    (*heap)->memTypeFlags[MEM_TYPE_DEPTH]        &= ~MEM_GROW_DOWN;
                    (*heap)->memTypeFlags[MEM_TYPE_DEPTH_COMPR16]   &= ~MEM_GROW_DOWN;
                    (*heap)->memTypeFlags[MEM_TYPE_DEPTH_COMPR32]   &= ~MEM_GROW_DOWN;

                    (*heap)->Bank[0].flags             |= MEM_FLAG_IMAGE
                                                       |  MEM_FLAG_IMAGE_TILED;
                    (*heap)->Bank[1].flags             |= (*heap)->memTypeFlags[MEM_TYPE_DEPTH]
                                                       | (*heap)->memTypeFlags[MEM_TYPE_DEPTH_COMPR16]
                                                       | (*heap)->memTypeFlags[MEM_TYPE_DEPTH_COMPR32];

                    (*heap)->Bank[numBanks - 1].flags  |= (*heap)->memTypeFlags[MEM_TYPE_TEXTURE]
                                                       |  (*heap)->memTypeFlags[MEM_TYPE_OVERLAY]
                                                       |  (*heap)->memTypeFlags[MEM_TYPE_FONT];
                    (*heap)->Bank[numBanks - 1].flags  &= ~(MEM_FLAG_DEPTH
                                                       | MEM_FLAG_DEPTH_COMPR16
                                                       | MEM_FLAG_DEPTH_COMPR32);  // may not be necessary
                }
                else
                {
                    (*heap)->Bank[1].flags            |= (*heap)->memTypeFlags[MEM_TYPE_IMAGE];
                    (*heap)->Bank[numBanks - 2].flags |= (*heap)->memTypeFlags[MEM_TYPE_OVERLAY]
                                                      |  (*heap)->memTypeFlags[MEM_TYPE_TEXTURE];
                }
            }
            else
            {
                (*heap)->Bank[0].flags            |= (*heap)->memTypeFlags[MEM_TYPE_IMAGE]
                                                  |  (*heap)->memTypeFlags[MEM_TYPE_IMAGE_TILED];
                (*heap)->Bank[1].flags            |= (*heap)->memTypeFlags[MEM_TYPE_TEXTURE]
                                                  |  (*heap)->memTypeFlags[MEM_TYPE_OVERLAY]
                                                  |  (*heap)->memTypeFlags[MEM_TYPE_FONT];
            }
        }
        else
        {
            (*heap)->Bank[0].flags             = (*heap)->memTypeFlags[MEM_TYPE_TEXTURE]
                                              |  (*heap)->memTypeFlags[MEM_TYPE_IMAGE]
                                              |  (*heap)->memTypeFlags[MEM_TYPE_IMAGE_TILED]
                                              |  (*heap)->memTypeFlags[MEM_TYPE_OVERLAY]
                                              |  (*heap)->memTypeFlags[MEM_TYPE_FONT];
        }
    }
    return (RM_OK);
}

RM_STATUS heapDestroy
(
	PHWINFO pDev,
    PHEAP heap
)
{
    PMEMBLOCK block, blockFirst, blockNext;
    BOOL headptr_updated;

    DBG_PRINT_STRING(DEBUGLEVEL_TRACEINFO, "NVRM: Heap Manager: HEAP ABOUT TO BE DESTROYED.\r\n");

    if ((!heap)) return (RM_ERROR);


    // we need to figure out what is preventing the w2k display driver from getting a primary surface allocation
    //  at offset zero after a mode switch -  added by C. Moidel
#ifdef DEBUG
    heapDump(heap);
#endif

    //
    // Free all allocated blocks, but preserving non-NVRM primary surfaces.
    // If the head of our list changes, restart the search, since our terminating
    // block pointer may not be in the list anymore.
    //
    do {
        block = blockFirst = heap->pBlockList;
        headptr_updated = FALSE;

        do {
            blockNext = block->next;

            if ((block->owner != FREE_BLOCK) &&
                ((block->u0.type != MEM_TYPE_PRIMARY) || (block->owner == 'NVRM'))) {

                blockFree(pDev, heap, block);

                // restart scanning the list, if the heap->pBlockList changed
                if (blockFirst != heap->pBlockList) {
                    headptr_updated = TRUE;
                    break;
                }
            }
            block = blockNext;

        } while (block != heap->pBlockList);

    } while (headptr_updated);

    //
    // Free the heap structure, if we freed everything
    // (the first block represents the entire free space of the heap).
    //
    if ((heap->pBlockList->begin == 0) &&
        (heap->pBlockList->end == heap->total - 1)) {
#if 0
        //
        // This is now a callable function and so, we can't assume we'll get
        // a chance to recreate it ... so don't free the one free block at the
        // head of the block list or the heap struct itself.
        //

        osFreeMem((VOID *)heap->pBlockList);
        osFreeMem((VOID *)heap);
        pDev->Framebuffer.HeapHandle = NULL;
#endif
    }

    return (RM_OK);
}

RM_STATUS heapAlloc
(
	PHWINFO pDev,
    PHEAP heap,
    U032  owner,
    U032 *size,
    U032  type,
    U032  height,
    U032 *pitch,
    U032 *offset
)
{
    U032      alignment, i, typeFlags, headNum;
    U032      bankLo, bankHi, freeLo, freeHi, allocLo, allocAl, allocHi;
    PMEMBLOCK blockFirstFree, blockFree, blockNew, blockSplit;
    PFBALLOCINFO pFbAllocInfo;
    FBALLOCINFO localFbAllocInfo;
    RM_STATUS status;
    BOOL ignoreBankPlacement = FALSE;

    if ((!heap)) return (RM_ERROR);
    *offset = 0;

    // no-op failure for now
    RM_FAILURE_HEAP(1, offset = offset);

    //
    // Check for valid size.
    //
    if (*size == 0) return (RM_ERROR);

    //
    // If this is a new primary surface alloc (and it's not us), we'll want to
    // free up the primary surface we allocated. Doing a heapPurge should be fine,
    // since we've made no other allocations. Make sure this is done before the
    // free check below.
    //
    if (((type & MEM_TYPE_MASK) == MEM_TYPE_PRIMARY) && (owner != 'NVRM'))
    {
        heapPurge(pDev, heap, 'NVRM');
    }

    //
    // First check for enough memory to satisfy this request.
    //
    if (heap->free < *size) return (RM_ERR_NO_FREE_MEM);

    //
    // Check if IGNORE_BANK_PLACEMENT_FLAG was passed in with the type to
    // ignore placing this allocation in a particular bank. This means we
    // default to the second loop where we choose first fit.
    //
    if (type & MEM_TYPE_IGNORE_BANK_PLACEMENT_FLAG)
        ignoreBankPlacement = TRUE;

    // Set default type flags (includes type and MEM_GROW dir)
    typeFlags = heap->memTypeFlags[type & MEM_TYPE_MASK];

    //
    // Check if FORCE_MEM_GROWS_UP or FORCE_MEM_GROWS_DOWN was passed in
    // to override the MEM_GROWS direction for this allocation.
    //
    if (type & MEM_TYPE_FORCE_MEM_GROWS_UP_FLAG)
        typeFlags = (typeFlags & ~MEM_GROW_MASK) | MEM_GROW_UP;
    if (type & MEM_TYPE_FORCE_MEM_GROWS_DOWN_FLAG)
        typeFlags = (typeFlags & ~MEM_GROW_MASK) | MEM_GROW_DOWN;

    // extract head number from the type argument
    headNum = (type & MEM_TYPE_HEAD_MASK) >> MEM_TYPE_HEAD_SHIFT;

    // Mask off any flags passed in with the type
    type &= MEM_TYPE_MASK;

    //
    // Force type into known values.
    //
    if (type > MEM_TYPE_MAX) type = 0;

    if (type == MEM_TYPE_PRIMARY) {
        pFbAllocInfo = &(pDev->Framebuffer.HalInfo.PrimaryFbAllocInfo[headNum]);
    } else {
        pFbAllocInfo = &localFbAllocInfo;
    }

    //
    // Request any chip-specific resources for memory of this
    // type (e.g. tiles). This call may adjust size, pitch and
    // alignment as necessary.
    //
    pFbAllocInfo->type = type;
    pFbAllocInfo->hwResId = 0;
    pFbAllocInfo->height = height;
    pFbAllocInfo->pitch = (pitch) ? (*pitch) : 0;
    pFbAllocInfo->size = *size;
    pFbAllocInfo->align = 0;

#if 0
    //
    // If we're in VGA mode, set pitch to 0 to ensure the HAL
    // doesn't do anything squirrely (i.e. allocate and use
    // tile resources).
    //
    if (pDev->Vga.Enabled)
        pFbAllocInfo->pitch = 0;
#endif

    //
    // Call into HAL to reserve any hardware resources for
    // the specified memory type.  We'll ignore any
    // insufficient resources errors for now.
    //
    status = nvHalFbAlloc(pDev, pFbAllocInfo);
    if (status != RM_OK && status != RM_ERR_INSUFFICIENT_RESOURCES)
    {
        // probably means we passed in a bogus type
        DBG_PRINT_STRING(DEBUGLEVEL_ERRORS, "NVRM: nvHalFbAlloc failure!\n");
        return (RM_ERROR);
    }

    //
    // Refresh search parameters.
    //
    *size = pFbAllocInfo->size;
    if (pitch)
        *pitch = pFbAllocInfo->pitch;
    alignment = pFbAllocInfo->align;

    //
    // Find the best bank to start looking in for this type.
    //
    for (i = 0; (i < heap->numBanks) && (ignoreBankPlacement == FALSE); i++)
    {
        if ((heap->Bank[i].flags & typeFlags) & ~MEM_GROW_DOWN)
        {
            bankLo    = heap->Bank[i].offset;
            bankHi    = heap->Bank[i].offset + heap->Bank[i].size - 1;
            if (!(blockFirstFree = heap->pFreeBlockList))
            {
                heapFbFree(pDev, pFbAllocInfo->hwResId);
                return (RM_ERR_NO_FREE_MEM);
            }
            if (heap->Bank[i].flags & MEM_GROW_DOWN)
            {
                //
                // Search top down for the first free block in this range.
                //
                do
                {
                    blockFirstFree = blockFirstFree->u0.prevFree;
                } while ((blockFirstFree != heap->pFreeBlockList) && (blockFirstFree->begin > bankHi));
            }
            else
            {
                //
                // Search bottom up for the first free block in this range.
                //
                while (blockFirstFree->end < bankLo)
                    if ((blockFirstFree = blockFirstFree->u1.nextFree) == heap->pFreeBlockList) break;
            }
            //
            //  Start scanning for a free block.  Continue through all memory until
            // something (hopefully) is found.
            //
            blockFree = blockFirstFree;
            do
            {
                if ((blockFree->begin <= bankHi) && (blockFree->end >= bankLo))
                {
                    //
                    // Found some overlap. Check if it is big enough.
                    //
                    freeLo = (bankLo < blockFree->begin) ? blockFree->begin : bankLo;
                    freeHi = (bankHi > blockFree->end)   ? blockFree->end   : bankHi;
                    if (heap->Bank[i].flags & MEM_GROW_DOWN)
                    {
                        //
                        // Allocate from the top of the memory block.
                        //
                        allocLo = (freeHi - *size + 1) & ~alignment;
                        allocAl = allocLo;
                        allocHi = freeHi;
                    }
                    else
                    {
                        //
                        // Allocate from the bottom of the memory block.
                        //
                        allocLo = freeLo;
                        allocAl = (freeLo + alignment) & ~alignment;
                        allocHi = allocAl + *size - 1;
                    }
                    //
                    // Check for wrap-around.
                    //
                    if (allocLo > allocHi)
                        continue;
                    if ((allocLo == blockFree->begin) && (allocHi == blockFree->end))
                    {
                        //
                        // Wow, exact match so replace free block.
                        // Remove from free list.
                        //
                        blockFree->u1.nextFree->u0.prevFree = blockFree->u0.prevFree;
                        blockFree->u0.prevFree->u1.nextFree = blockFree->u1.nextFree;
                        if (heap->pFreeBlockList == blockFree)
                        {
                            //
                            // This could be the last free block.
                            //
                            if (blockFree->u1.nextFree == blockFree)
                                heap->pFreeBlockList = 0;
                            else
                                heap->pFreeBlockList = blockFree->u1.nextFree;
                        }
                        //
                        // Set owner/type values here.  Don't move because some fields are unions.
                        //
                        blockFree->owner   = owner;
                        blockFree->mhandle = UNIQUE_MEMHANDLE();
                        blockFree->u0.type = type;
                        blockFree->u1.hwres = pFbAllocInfo->hwResId;
                        blockFree->align   = allocAl;
                        //
                        // Reduce free amount by allocated block size.
                        //
                        heap->free -= blockFree->end - blockFree->begin + 1;
                        *offset     = blockFree->align;
                        pFbAllocInfo->offset = *offset;
                        //pFbAllocInfo->size = *size - 1;
                        if (type == MEM_TYPE_PRIMARY)
                        {
                            pDev->Framebuffer.PrimarySurfaceAlloced = 0x1;
                            pDev->Framebuffer.HalInfo.Start[headNum] = *offset;
                        }
                        heapFbSetAllocParameters(pDev, pFbAllocInfo);
                        HEAP_VALIDATE(heap);
                        return (RM_OK);
                    }
                    else if ((allocLo >= freeLo) && (allocHi <= freeHi))
                    {
                        //
                        // Budah-boom, found a match.
                        //
                        if (osAllocMem((VOID **)&blockNew, sizeof(MEMBLOCK)) != RM_OK)
                        {
                            heapFbFree(pDev, pFbAllocInfo->hwResId);
                            return (RM_ERR_NO_FREE_MEM);
                        }
                        blockNew->owner   = owner;
                        blockNew->mhandle = UNIQUE_MEMHANDLE();
                        blockNew->u0.type = type;
                        blockNew->u1.hwres = pFbAllocInfo->hwResId;
                        blockNew->begin   = allocLo;
                        blockNew->align   = allocAl;
                        blockNew->end     = allocHi;
                        if ((blockFree->begin < blockNew->begin) && (blockFree->end > blockNew->end))
                        {
                            //
                            // Split free block in two.
                            //
                            if (osAllocMem((VOID **)&blockSplit, sizeof(MEMBLOCK)) != RM_OK)
                            {
                                heapFbFree(pDev, pFbAllocInfo->hwResId);
                                osFreeMem((VOID *)blockNew);
                                return (RM_ERR_NO_FREE_MEM);
                            }
                            blockSplit->owner = FREE_BLOCK;
                            blockSplit->begin = blockNew->end + 1;
                            blockSplit->align = blockSplit->begin;
                            blockSplit->end   = blockFree->end;
                            blockFree->end    = blockNew->begin - 1;
                            //
                            // Insert free split block into free list.
                            //
                            blockSplit->u1.nextFree = blockFree->u1.nextFree;
                            blockSplit->u0.prevFree = blockFree;
                            blockSplit->u1.nextFree->u0.prevFree = blockSplit;
                            blockFree->u1.nextFree = blockSplit;
                            //
                            //  Insert new and split blocks into block list.
                            //
                            blockNew->next   = blockSplit;
                            blockNew->prev   = blockFree;
                            blockSplit->next = blockFree->next;
                            blockSplit->prev = blockNew;
                            blockFree->next  = blockNew;
                            blockSplit->next->prev = blockSplit;
                        }
                        else if (blockFree->end == blockNew->end)
                        {
                            //
                            // New block inserted after free block.
                            //
                            blockFree->end = blockNew->begin - 1;
                            blockNew->next = blockFree->next;
                            blockNew->prev = blockFree;
                            blockFree->next->prev = blockNew;
                            blockFree->next = blockNew;
                        }
                        else if (blockFree->begin == blockNew->begin)
                        {
                            //
                            // New block inserted before free block.
                            //
                            blockFree->begin = blockNew->end + 1;
                            blockFree->align = blockFree->begin;
                            blockNew->next   = blockFree;
                            blockNew->prev   = blockFree->prev;
                            blockFree->prev->next = blockNew;
                            blockFree->prev = blockNew;
                            if (heap->pBlockList == blockFree)
                                heap->pBlockList  = blockNew;
                        }
                        else
                        {
                            heapFbFree(pDev, pFbAllocInfo->hwResId);
                            osFreeMem((VOID *)blockNew);
                            HEAP_VALIDATE(heap);
                            return (RM_ERR_NO_FREE_MEM);
                        }
                        //
                        // Reduce free amount by allocated block size.
                        //
                        heap->free -= blockNew->end - blockNew->begin + 1;
                        *offset     = blockNew->align;
                        pFbAllocInfo->offset = *offset;
                        //pFbAllocInfo->size = *size - 1;
                        if (type == MEM_TYPE_PRIMARY)
                        {
                            pDev->Framebuffer.PrimarySurfaceAlloced = 0x1;
                            pDev->Framebuffer.HalInfo.Start[headNum] = *offset;
                        }
                        heapFbSetAllocParameters(pDev, pFbAllocInfo);
                        HEAP_VALIDATE(heap);
                        return (RM_OK);
                    }
                }
                blockFree = blockFree->u0.prevFree;
            } while (blockFree != blockFirstFree);
        }
    }

    //
    // Bummer, no nice bank blocks were found.  Try again, only look for anything.
    //
    if (!(blockFirstFree = heap->pFreeBlockList))
    {
        heapFbFree(pDev, pFbAllocInfo->hwResId);
        return (RM_ERR_NO_FREE_MEM);
    }

    //
    // When scanning upwards, start at the bottom - 1 so the following loop looks symetrical.
    //
    if (!(typeFlags & MEM_GROW_DOWN))
        blockFirstFree = blockFirstFree->u0.prevFree;
    blockFree = blockFirstFree;
    do
    {
        if (typeFlags & MEM_GROW_DOWN)
        {
            //
            // Allocate from the top of the memory block.
            //
            blockFree = blockFree->u0.prevFree;
            allocLo   = (blockFree->end - *size + 1) & ~alignment;
            allocAl   = allocLo;
            allocHi   = blockFree->end;
        }
        else
        {
            //
            // Allocate from the bottom of the memory block.
            //
            blockFree = blockFree->u1.nextFree;
            allocLo   = blockFree->begin;
            allocAl   = (blockFree->begin + alignment) & ~alignment;
            allocHi   = allocAl + *size - 1;
        }
        //
        // Check for wrap-around.
        //
        if (allocLo > allocHi)
            continue;
        if ((allocLo == blockFree->begin) && (allocHi == blockFree->end))
        {
            //
            // Wow, exact match so replace free block.
            // Remove from free list.
            //
            blockFree->u1.nextFree->u0.prevFree = blockFree->u0.prevFree;
            blockFree->u0.prevFree->u1.nextFree = blockFree->u1.nextFree;
            if (heap->pFreeBlockList == blockFree)
            {
                //
                // This could be the last free block.
                //
                if (blockFree->u1.nextFree == blockFree)
                    heap->pFreeBlockList = 0;
                else
                    heap->pFreeBlockList = blockFree->u1.nextFree;
            }
            blockFree->owner   = owner;
            blockFree->mhandle = UNIQUE_MEMHANDLE();
            blockFree->u0.type = type;
            blockFree->u1.hwres  = pFbAllocInfo->hwResId;
            blockFree->align   = allocAl;
            //
            // Reduce free amount by allocated block size.
            //
            heap->free -= blockFree->end - blockFree->begin + 1;
            *offset     = blockFree->align;
            pFbAllocInfo->offset = *offset;
            //pFbAllocInfo->size = *size - 1;
            if (type == MEM_TYPE_PRIMARY)
            {
                pDev->Framebuffer.PrimarySurfaceAlloced = 0x1;
                pDev->Framebuffer.HalInfo.Start[headNum] = *offset;
            }
            heapFbSetAllocParameters(pDev, pFbAllocInfo);
            HEAP_VALIDATE(heap);
            return (RM_OK);
        }
        else if ((allocLo >= blockFree->begin) && (allocHi <= blockFree->end))
        {
            //
            // Found a fit.
            //
            if (osAllocMem((VOID **)&blockNew, sizeof(MEMBLOCK)) != RM_OK)
            {
                heapFbFree(pDev, pFbAllocInfo->hwResId);
                return (RM_ERR_NO_FREE_MEM);
            }
            blockNew->owner   = owner;
            blockNew->mhandle = UNIQUE_MEMHANDLE();
            blockNew->u0.type = type;
            blockNew->u1.hwres = pFbAllocInfo->hwResId;
            blockNew->begin   = allocLo;
            blockNew->align   = allocAl;
            blockNew->end     = allocHi;
            if (blockFree->end == blockNew->end)
            {
                //
                // New block inserted after free block.
                //
                blockFree->end = blockNew->begin - 1;
                blockNew->next = blockFree->next;
                blockNew->prev = blockFree;
                blockFree->next->prev = blockNew;
                blockFree->next       = blockNew;
            }
            else if (blockFree->begin == blockNew->begin)
            {
                //
                // New block inserted before free block.
                //
                blockFree->begin = blockNew->end + 1;
                blockFree->align = blockFree->begin;
                blockNew->next   = blockFree;
                blockNew->prev   = blockFree->prev;
                blockFree->prev->next = blockNew;
                blockFree->prev       = blockNew;
                if (heap->pBlockList == blockFree)
                    heap->pBlockList  = blockNew;
            }
            else
            {
                heapFbFree(pDev, pFbAllocInfo->hwResId);
                osFreeMem((VOID *)blockNew);
                HEAP_VALIDATE(heap);
                return (RM_ERR_NO_FREE_MEM);
            }
            //
            // Reduce free amount by allocated block size.
            //
            heap->free -= blockNew->end - blockNew->begin + 1;
            *offset     = blockNew->align;
            pFbAllocInfo->offset = *offset;
            //pFbAllocInfo->size = *size - 1;
            if (type == MEM_TYPE_PRIMARY)
            {
                pDev->Framebuffer.PrimarySurfaceAlloced = 0x1;
                pDev->Framebuffer.HalInfo.Start[headNum] = *offset;
            }
            heapFbSetAllocParameters(pDev, pFbAllocInfo);
            HEAP_VALIDATE(heap);
            return (RM_OK);
        }
    } while (blockFree != blockFirstFree);
    //
    // Sorry Charlie, out of memory.  Could in theory try to compact mem and try again. Later.
    //
    heapFbFree(pDev, pFbAllocInfo->hwResId);
    HEAP_VALIDATE(heap);
    return (RM_ERR_NO_FREE_MEM);
}

RM_STATUS blockFree
(
	PHWINFO   pDev,
    PHEAP     heap,
    PMEMBLOCK block
)
{
    PMEMBLOCK blockTmp;

    //
    // Check for valid owner.
    //
    if (block->owner == FREE_BLOCK) return (RM_ERROR);
    //
    // Update free count.
    //
    heap->free += block->end - block->begin + 1;
    //
    // Release any tiling HW resources that might've been in use
    //
    heapFbFree(pDev, block->u1.hwres);

    // Has the primary surface gone away?
    if (block->u0.type == MEM_TYPE_PRIMARY)
        pDev->Framebuffer.PrimarySurfaceAlloced = 0x0;

    //
    //
    // Can this merge with any surrounding free blocks?
    //
    if ((block->prev->owner == FREE_BLOCK) && (block != heap->pBlockList))
    {
        //
        // Merge with previous block.
        //
        block->prev->next = block->next;
        block->next->prev = block->prev;
        block->prev->end  = block->end;
        blockTmp = block;
        block    = block->prev;
        osFreeMem((VOID *)blockTmp);
    }
    if ((block->next->owner == FREE_BLOCK) && (block->next != heap->pBlockList))
    {
        //
        // Merge with next block.
        //
        block->prev->next    = block->next;
        block->next->prev    = block->prev;
        block->next->begin   = block->begin;
        if (heap->pBlockList == block)
            heap->pBlockList  = block->next;
        if (block->owner == FREE_BLOCK)
        {
            if (heap->pFreeBlockList == block)
                heap->pFreeBlockList  = block->u1.nextFree;
            block->u1.nextFree->u0.prevFree = block->u0.prevFree;
            block->u0.prevFree->u1.nextFree = block->u1.nextFree;
        }
        blockTmp = block;
        block    = block->next;
        osFreeMem((VOID *)blockTmp);
    }
    if (block->owner != FREE_BLOCK)
    {
        //
        // Nothing was merged.  Add to free list.
        //
        if (!(blockTmp = heap->pFreeBlockList))
        {
            heap->pFreeBlockList = block;
            block->u1.nextFree      = block;
            block->u0.prevFree      = block;
        }
        else
        {
            if (blockTmp->begin > block->begin)
                //
                // Insert into beginning of free list.
                //
                heap->pFreeBlockList = block;
            else if (blockTmp->u0.prevFree->begin > block->begin)
                //
                // Insert into free list.
                //
                do
                {
                    blockTmp = blockTmp->u1.nextFree;
                } while (blockTmp->begin < block->begin);
                /*
            else
                 * Insert at end of list.
                 */
            block->u1.nextFree = blockTmp;
            block->u0.prevFree = blockTmp->u0.prevFree;
            block->u0.prevFree->u1.nextFree = block;
            blockTmp->u0.prevFree        = block;
        }
    }
    block->owner   = FREE_BLOCK;
    block->mhandle = 0x0;
    block->align   = block->begin;
    HEAP_VALIDATE(heap);
    return (RM_OK);
}

RM_STATUS heapFree
(
	PHWINFO pDev,
    PHEAP heap,
    U032  owner,
    U032  offsetAlign,
    U032  *memHandle
)
{
    PMEMBLOCK block;

    if ((!heap)) return (RM_ERROR);
    if (owner == FREE_BLOCK) return (RM_ERROR);
    //
    // This requires a search through the heap of this memory block.
    // Try and be somewhat intelligent about it.
    //
    block = heap->pBlockList;
    if (offsetAlign > heap->total / 2)
        //
        // Search backward.
        //
        do
        {
            block = block->prev;
            if ((block->align == offsetAlign) && (block->owner == owner))
            {
                //
                // Found it.  Free it. Return the associated memory handle.
                //
                *memHandle = block->mhandle;
                return (blockFree(pDev, heap, block));
            }
        } while ((block != heap->pBlockList) && (block->align > offsetAlign));
    else
        //
        // Search forward.
        //
        do
        {
            if ((block->align == offsetAlign) && (block->owner == owner))
            {
                //
                // Found it.  Free it. Return the associated memory handle.
                //
                *memHandle = block->mhandle;
                return (blockFree(pDev, heap, block));
            }
            block = block->next;
        } while ((block != heap->pBlockList) && (block->align <= offsetAlign));
    HEAP_VALIDATE(heap);
    return (RM_ERROR);
}

RM_STATUS heapPurge
(
	PHWINFO pDev,
    PHEAP heap,
    U032  owner
)
{
    PMEMBLOCK block, blockNext;

    if ((!heap)) return (RM_ERROR);
    //
    // Scan for all the blocks belonging by this owner.
    //
    block = heap->pBlockList;
    do
    {
        blockNext = block->next;
        if (block->owner == owner)
            blockFree(pDev, heap, block);
        block = blockNext;
    } while (block->next != heap->pBlockList);
    //
    // Check the last one.
    //
    if (block->owner == owner)
        blockFree(pDev, heap, block);
    HEAP_VALIDATE(heap);
    return (RM_OK);
}

RM_STATUS heapCompact
(
    PHEAP heap
)
{
    if ((!heap)) return (RM_ERROR);
    //
    // Not implemented.
    //
    HEAP_VALIDATE(heap);
    return (RM_OK);
}

RM_STATUS heapGetSize
(
    PHEAP heap,
    U032 *size
)
{
    if ((!heap)) return (RM_ERROR);
    *size = heap->total;
    HEAP_VALIDATE(heap);
    return (RM_OK);
}

RM_STATUS heapGetFree
(
    PHEAP heap,
    U032 *free
)
{
    if ((!heap)) return (RM_ERROR);
    *free = heap->free;
    HEAP_VALIDATE(heap);
    return (RM_OK);
}

RM_STATUS heapGetBase
(
    PHEAP  heap,
    U008 **base
)
{
    if ((!heap)) return (RM_ERROR);
    *base = heap->base;
    HEAP_VALIDATE(heap);
    return (RM_OK);
}

RM_STATUS heapGetMaxFree
(
    PHEAP heap,
    U032 *maxOffset,
    U032 *maxFree
)
{
    PMEMBLOCK blockFirstFree, blockFree;
    U032 freeBlockSize;

    *maxFree = 0;
    if ((!heap)) return (RM_ERROR);

    if (!(blockFirstFree = heap->pFreeBlockList))
        // There are no free blocks. Max free is already set to 0
        return (RM_OK);

    // Walk the free block list.
    blockFree = blockFirstFree;
    do {
        freeBlockSize = blockFree->end - blockFree->begin + 1;
        if (freeBlockSize > *maxFree)
        {
            *maxOffset = blockFree->begin;
            *maxFree = freeBlockSize;
        }
        blockFree = blockFree->u1.nextFree;
    } while (blockFree != blockFirstFree);

    return (RM_OK);
}

RM_STATUS heapInfo
(
    PHEAP heap,
    U032 *bytesFree,
    U032 *bytesTotal,
    VOID** base,
    U032 *largestOffset,      // largest free blocks offset
    U032 *largestFree         // largest free blocks size
)
{
    RM_STATUS status;

    if ((!heap)) return (RM_ERROR);

    *bytesFree  = heap->free;
    *bytesTotal = heap->total;
    *base  = heap->base;
    status = heapGetMaxFree(heap, largestOffset, largestFree);
    HEAP_VALIDATE(heap);
    return status;
}

RM_STATUS heapInfoFreeBlocks
(
    PHEAP heap,
    U032 *bytesFree,
    U032 *bytesTotal,
    U032  freeOffset1,
    U032  freeOffset2,
    U032  *largestFree
)
{
    PMEMBLOCK blockArg1, blockArg2, blockArgRM; 
    PMEMBLOCK pLocalFreeBlockList = NULL;
    PMEMBLOCK block = NULL, blockFree;
    PMEMBLOCK mergedBlock = NULL, mergedBlock1 = NULL, mergedBlock2 = NULL;
    U032 freeBlockSize;
    BOOL mergedArg1, mergedArg2, mergedArgRM;
    RM_STATUS status = RM_OK;

    if ((!heap)) return (RM_ERROR);

    RM_ASSERT(heap->pBlockList->begin == 0);

    // Find where the block pointers are for the offset arguments
    block = heap->pBlockList;
    blockArg1 = blockArg2 = blockArgRM = NULL;
    do {
        if (block->align == freeOffset1) {
            blockArg1 = block;
            if (blockArg1->owner == FREE_BLOCK)
                return RM_ERROR;    // can't be an already free block
        } else if (block->align == freeOffset2) {
            blockArg2 = block;
            if (blockArg2->owner == FREE_BLOCK)
                return RM_ERROR;    // can't be an already free block
        } else if (!blockArgRM && block->owner == 'NVRM' &&
                   (block->u0.type = MEM_TYPE_PRIMARY)) {
            blockArgRM = block;     // checking only 1 RM primary surface
        }
        block = block->next;
    } while (block != heap->pBlockList);

    // Check if we found the block for offset1
    if ((freeOffset1 != (U032)-1) && (blockArg1 == NULL))
        return RM_ERROR;

    // Check if we found the block for offset2
    if ((freeOffset2 != (U032)-1) && (blockArg2 == NULL))
        return RM_ERROR;

    //
    // Handle the special case where both freeOffsets map to adjacent blocks.
    // Create a combined blockArg that describes both blocks (clearing the other
    // blockArg pointer). This doesn't disturb the active freelist block ptrs.
    //
    if (blockArg1 && blockArg2) {
        if (((blockArg1->next == blockArg2) && (blockArg2 != heap->pBlockList)) ||
            ((blockArg2->next == blockArg1) && (blockArg1 != heap->pBlockList))) {

            // Create a combined block for both blockArgs
            if (osAllocMem((VOID **)&mergedBlock, sizeof(MEMBLOCK)) != RM_OK) {
                status = RM_ERR_NO_FREE_MEM;
                goto Done;
            }

            // Copy the merged values
            if (blockArg1->next == blockArg2) {
                mergedBlock->begin = blockArg1->begin;
                mergedBlock->prev  = blockArg1->prev;
                mergedBlock->end   = blockArg2->end;
                mergedBlock->next  = blockArg2->next;
            } else {
                mergedBlock->begin = blockArg2->begin;
                mergedBlock->prev  = blockArg2->prev;
                mergedBlock->end   = blockArg1->end;
                mergedBlock->next  = blockArg1->next;
            }

            // Now, we're down to one less block to check
            blockArg1 = mergedBlock;
            blockArg2 = NULL;
        }
    }
    if (blockArg1 && blockArgRM) {
        if (((blockArg1->next == blockArgRM) && (blockArgRM != heap->pBlockList)) ||
            ((blockArgRM->next == blockArg1) && (blockArg1 != heap->pBlockList))) {

            // Create a combined block for both blockArgs
            if (osAllocMem((VOID **)&mergedBlock1, sizeof(MEMBLOCK)) != RM_OK) {
                status = RM_ERR_NO_FREE_MEM;
                goto Done;
            }

            // Copy the merged values
            if (blockArg1->next == blockArgRM) {
                mergedBlock1->begin = blockArg1->begin;
                mergedBlock1->prev  = blockArg1->prev;
                mergedBlock1->end   = blockArgRM->end;
                mergedBlock1->next  = blockArgRM->next;
            } else {
                mergedBlock1->begin = blockArgRM->begin;
                mergedBlock1->prev  = blockArgRM->prev;
                mergedBlock1->end   = blockArg1->end;
                mergedBlock1->next  = blockArg1->next;
            }

            // Now, we're down to one less block to check
            blockArg1 = mergedBlock1;
            blockArgRM = NULL;
        }
    }
    if (blockArgRM && blockArg2) {
        if (((blockArgRM->next == blockArg2) && (blockArg2 != heap->pBlockList)) ||
            ((blockArg2->next == blockArgRM) && (blockArgRM != heap->pBlockList))) {

            // Create a combined block for both blockArgs
            if (osAllocMem((VOID **)&mergedBlock2, sizeof(MEMBLOCK)) != RM_OK) {
                status = RM_ERR_NO_FREE_MEM;
                goto Done;
            }

            // Copy the merged values
            if (blockArgRM->next == blockArg2) {
                mergedBlock2->begin = blockArgRM->begin;
                mergedBlock2->prev  = blockArgRM->prev;
                mergedBlock2->end   = blockArg2->end;
                mergedBlock2->next  = blockArg2->next;
            } else {
                mergedBlock2->begin = blockArg2->begin;
                mergedBlock2->prev  = blockArg2->prev;
                mergedBlock2->end   = blockArgRM->end;
                mergedBlock2->next  = blockArgRM->next;
            }

            // Now, we're down to a single blockArg to check
            blockArgRM = mergedBlock2;
            blockArg2 = NULL;
        }
    }

    mergedArg1 = mergedArg2 = mergedArgRM = FALSE;

    //
    // Setup our freelist by duplicating the real heap->pBlockFreeList. We'll
    // also coalesce the blockArgs with surrounding free blocks as we go.
    //
    if (heap->pFreeBlockList) {
        blockFree = heap->pFreeBlockList;
        do {
            // Create a copy of this free block
            status = osAllocMem((VOID **)&block, sizeof(MEMBLOCK));
            if (status != RM_OK)
                goto Done;    // failed to dup, so cleanup and return

            // Copy the blockFree's initial values
            block->begin    = blockFree->begin;
            block->end      = blockFree->end;

            // 
            // Check if free block precedes blockArg1, blockArg2 or blockArgRM
            //
            // N.B., comparing (blockArg->begin != 0x0) should be equivalent to
            // checking for (blockArg != heap->pBlockList), both are trying to
            // determine if we're at the beginning of the list.
            //
            if (blockArg1 && ((blockArg1->prev == blockFree) && blockArg1->begin)) {
                mergedArg1 = TRUE;
                block->end = blockArg1->end;
            }
            if (blockArg2 && ((blockArg2->prev == blockFree) && blockArg2->begin)) {
                mergedArg2 = TRUE;
                block->end = blockArg2->end;
            }
            if (blockArgRM && ((blockArgRM->prev == blockFree) && blockArgRM->begin)) {
                mergedArgRM = TRUE;
                block->end = blockArgRM->end;        // include a RM primary surface
            }

            // 
            // Check if free block succeeds blockArg1, blockArg2 or blockArgRM
            //
            if (blockArg1 &&
                ((blockArg1->next == blockFree) && (blockFree != heap->pBlockList))) {
                //
                // If a free block also preceded blockArg, then we want to concatenate
                // the two free blocks and can free up the dup block we already allocated
                //
                if (pLocalFreeBlockList &&
                    ((pLocalFreeBlockList->u0.prevFree->end+1) == blockFree->begin)) {
                    pLocalFreeBlockList->u0.prevFree->end = block->end;
                    osFreeMem((VOID *)block);
                    block = NULL;
                } else
                    block->begin = blockArg1->begin;
                mergedArg1 = TRUE;
            }
            if (blockArg2 &&
                ((blockArg2->next == blockFree) && (blockFree != heap->pBlockList))) {
                //
                // If a free block also preceded blockArg, then we want to concatenate
                // the two free blocks and can free up the dup block we already allocated
                //
                if (pLocalFreeBlockList &&
                    ((pLocalFreeBlockList->u0.prevFree->end+1) == blockFree->begin)) {
                    pLocalFreeBlockList->u0.prevFree->end = block->end;
                    osFreeMem((VOID *)block);
                    block = NULL;
                } else
                    block->begin = blockArg2->begin;
                mergedArg2 = TRUE;
            }
            if (blockArgRM &&
                ((blockArgRM->next == blockFree) && (blockFree != heap->pBlockList))) {
                //
                // If a free block also preceded blockArgRM, then we want to concatenate
                // the two free blocks and can free up the dup block we already allocated
                // 
                if (pLocalFreeBlockList &&
                    ((pLocalFreeBlockList->u0.prevFree->end+1) == blockFree->begin)) {
                    pLocalFreeBlockList->u0.prevFree->end = block->end;
                    osFreeMem((VOID *)block);
                    block = NULL;
                } else 
                    block->begin = blockArgRM->begin;
                mergedArgRM = TRUE;
            }

            // Add this block to our list of free blocks
            if (block) {
                if (pLocalFreeBlockList == NULL) {
                    block->u0.prevFree  = block;
                    block->u1.nextFree  = block;
                    pLocalFreeBlockList = block;
                } else {
                    block->u0.prevFree  = pLocalFreeBlockList->u0.prevFree;
                    block->u1.nextFree  = pLocalFreeBlockList;
                    pLocalFreeBlockList->u0.prevFree->u1.nextFree = block;
                    pLocalFreeBlockList->u0.prevFree = block;
                }
            }

            blockFree = blockFree->u1.nextFree;
        } while (blockFree != heap->pFreeBlockList);
    }

    //
    // At this point, we have a built up a pLocalFreeBlockList, that has
    // taken into account any blocks that we can consider freed. Now, find
    // the largest contiguous block that would be availble.
    //
    *bytesFree  = *largestFree = 0;
    *bytesTotal = heap->total;

    blockFree = pLocalFreeBlockList;
    if (blockFree) {
        // Walk the free block list.
        do {
            freeBlockSize = blockFree->end - blockFree->begin + 1;
            *bytesFree += freeBlockSize;
            if (freeBlockSize > *largestFree)
                *largestFree = freeBlockSize;
            blockFree = blockFree->u1.nextFree;
        } while (blockFree != pLocalFreeBlockList);
    }

    //
    // Since the blockArgs weren't added to the pLocalFreeBlockList, if
    // there was no coalescing that occurred, the blockArgs may hold the
    // largest free block (and are added into the total free amount).
    //
    if (blockArg1 && (mergedArg1 == FALSE)) {
        freeBlockSize = blockArg1->end - blockArg1->begin + 1;
        *bytesFree += freeBlockSize;
        if (freeBlockSize > *largestFree)
            *largestFree = freeBlockSize;
    }
    if (blockArg2 && (mergedArg2 == FALSE)) {
        freeBlockSize = blockArg2->end - blockArg2->begin + 1;
        *bytesFree += freeBlockSize;
        if (freeBlockSize > *largestFree)
            *largestFree = freeBlockSize;
    }
    if (blockArgRM && (mergedArgRM == FALSE)) {
        freeBlockSize = blockArgRM->end - blockArgRM->begin + 1;
        *bytesFree += freeBlockSize;
        if (freeBlockSize > *largestFree)
            *largestFree = freeBlockSize;
    }

Done:
    // Free up whatever is on our pLocalFreeBlockList
    blockFree = pLocalFreeBlockList;
    if (blockFree) {
        do {
            block = blockFree->u1.nextFree;
            osFreeMem((VOID *)blockFree);
            blockFree = block;
        } while (blockFree != pLocalFreeBlockList);
    }
    // Free up the mergedBlock, if one was created
    if (mergedBlock)
        osFreeMem((VOID *)mergedBlock);
    if (mergedBlock1)
        osFreeMem((VOID *)mergedBlock1);
    if (mergedBlock2)
        osFreeMem((VOID *)mergedBlock2);

    HEAP_VALIDATE(heap);
    return status;
}

//
// These routines may need to be mutexed if there are hardware
// resources involved.
//
RM_STATUS heapFbSetAllocParameters
(
    PHWINFO pDev,
    PFBALLOCINFO pFbAllocInfo
)
{
    RM_STATUS status;

    //
    // If we're in VGA mode, do not set tiling parameters until after we've
    // done a modeset into an accelerated mode to prevent from corrupting
    // the VGA splash screen on win9x (see fbstate.c for when this
    // happens).
    //
    if (pDev->Vga.Enabled && (pFbAllocInfo->type == MEM_TYPE_PRIMARY) && (pFbAllocInfo->hwResId != 0))
        return (RM_OK);

    if (pFbAllocInfo->hwResId)
        osEnterCriticalCode(pDev);

    status = nvHalFbSetAllocParameters(pDev, pFbAllocInfo);

    if (pFbAllocInfo->hwResId)
        osExitCriticalCode(pDev);

    return status;
}

static RM_STATUS heapFbFree
(
	PHWINFO pDev,
    U032 hwResId
)
{
    U032 i;
    RM_STATUS status;

    if (hwResId)
        osEnterCriticalCode(pDev);

    status = nvHalFbFree(pDev, hwResId);

    // Also, reset PrimaryFbAllocInfo if the hwResID matches
    if (hwResId) {
        for (i = 0; i < MAX_CRTCS; i++) {
            if (pDev->Framebuffer.HalInfo.PrimaryFbAllocInfo[i].hwResId == hwResId)
                pDev->Framebuffer.HalInfo.PrimaryFbAllocInfo[i].hwResId = 0;
        }
    }

    if (hwResId)
        osExitCriticalCode(pDev);

    return status;
}
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Microsoft Xbox (1.00.4400) [April 2002] [src]\private\ntos\video\nvx\drivers\resman\kernel\inc\bios.h ===
/***************************************************************************\
|*                                                                           *|
|*        Copyright (c) 1993-1999 NVIDIA, Corp.  All rights reserved.        *|
|*                                                                           *|
|*     NOTICE TO USER:   The source code  is copyrighted under  U.S. and     *|
|*     international laws.   NVIDIA, Corp. of Sunnyvale, California owns     *|
|*     the copyright  and as design patents  pending  on the design  and     *|
|*     interface  of the NV chips.   Users and possessors of this source     *|
|*     code are hereby granted  a nonexclusive,  royalty-free  copyright     *|
|*     and  design  patent license  to use this code  in individual  and     *|
|*     commercial software.                                                  *|
|*                                                                           *|
|*     Any use of this source code must include,  in the user documenta-     *|
|*     tion and  internal comments to the code,  notices to the end user     *|
|*     as follows:                                                           *|
|*                                                                           *|
|*     Copyright (c) 1993-1997  NVIDIA, Corp.    NVIDIA  design  patents     *|
|*     pending in the U.S. and foreign countries.                            *|
|*                                                                           *|
|*     NVIDIA, CORP.  MAKES  NO REPRESENTATION ABOUT  THE SUITABILITY OF     *|
|*     THIS SOURCE CODE FOR ANY PURPOSE.  IT IS PROVIDED "AS IS" WITHOUT     *|
|*     EXPRESS OR IMPLIED WARRANTY OF ANY KIND.  NVIDIA, CORP. DISCLAIMS     *|
|*     ALL WARRANTIES  WITH REGARD  TO THIS SOURCE CODE,  INCLUDING  ALL     *|
|*     IMPLIED   WARRANTIES  OF  MERCHANTABILITY  AND   FITNESS   FOR  A     *|
|*     PARTICULAR  PURPOSE.   IN NO EVENT SHALL NVIDIA, CORP.  BE LIABLE     *|
|*     FOR ANY SPECIAL, INDIRECT, INCIDENTAL,  OR CONSEQUENTIAL DAMAGES,     *|
|*     OR ANY DAMAGES  WHATSOEVER  RESULTING  FROM LOSS OF USE,  DATA OR     *|
|*     PROFITS,  WHETHER IN AN ACTION  OF CONTRACT,  NEGLIGENCE OR OTHER     *|
|*     TORTIOUS ACTION, ARISING OUT  OF OR IN CONNECTION WITH THE USE OR     *|
|*     PERFORMANCE OF THIS SOURCE CODE.                                      *|
|*                                                                           *|
 \***************************************************************************/

/**************************************************************************************************************
*
*   Header: bios.h
*
*   Description:
*       Definitions of BIOS structures.
*
*   Revision History:
*       Original -- 9/99 Jeff Westerinen
*
**************************************************************************************************************/

// We convert the bios data structures before they are used.  They are read from bios,
//   then each field is expanded into a 32 bit field into host byte order.
//   Each data structure has a format string below that describes its packed
//   layout in the rom.
//
// The format string looks like:
//
//    count defaults to 1
//    item is one of
//          b  (byte)
//          w  2 byte word
//          d  4 byte word
//
//  Eg: "1b3d"
//
//   means 1 byte field followed by 3 dword (32 bit) fields
//

#define bios_U008  U032
#define bios_U016  U032
#define bios_U032  U032
#define bios_S008  S032

// definition from nvidia.inc
#define EOL                     0xff    // end of list
#define INIT_PLL_REG            'p'     // Write a PLL value into the DAC (obsolete)
#define INIT_PLL                'y'     // Write an NV3 PLL value based on crystal
#define INIT_NV_REG             'n'     // Write an NV Register with mask
#define INIT_ZM_REG             'z'     // NV Register with 0 mask
#define INIT_ZM_WREG            'w'     // NV word Register with 0 mask
#define INIT_DAC_REG            'd'     // Write to a DAC register (obsolete)
#define INIT_TIME               't'     // Delay
#define INIT_IO                 'i'     // Write an IO value
#define INIT_INDEX_IO           'x'     // Write an indexed IO value
#define INIT_MEM_RESTRICT       'm'     // Memory restrict
#define INIT_STRAP_RESTRICT     's'     // Strap restrict
#define INIT_RESUME             'r'     // Resume operations
#define INIT_CONFIGURE_MEM      'f'     // Configure memory
#define INIT_CONFIGURE_CLK      'g'     // Configure clocks
#define INIT_CONFIGURE_PREINIT  'h'     // Configure RAM Type specifiers, etc
#define INIT_COMPUTE_MEM        'c'     // Compute memory size
#define INIT_RESET              'e'     // Reset chip
#define INIT_DONE               'q'     // Quit script

// new opocdes for BIP/3
#define INIT_ZM_IO              'a'     // Write an IO value with 0 mask
#define INIT_ZM_INDEX_IO        'b'     // Write an indexed IO value with 0 mask
#define INIT_EOS                'l'     // End of current script
#define INIT_SUB                'k'     // Execute another script as a subroutine
#define INIT_JUMP               'j'     // Jump to another script
#define INIT_MACRO              'o'     // Execute macro
#define INIT_CONDITION          'u'     // Restruct until INIT_RESUME based on condition
#define INIT_IO_CONDITION       'v'     // Restrict until INIT_RESUME based on I/O condition being true
#define INIT_IO_FLAG_CONDITION  '9'     // Restrict until INIT_RESUME based on I/O condition being true
#define INIT_RESTRICT_PROG      '1'     // Program a register from a value array based on another register
#define INIT_IO_RESTRICT_PROG   '2'     // Program a register from a value array based on an I/O port
#define INIT_REPEAT             '3'     // Repeat block N times up until INIT_END_REPEAT
#define INIT_END_REPEAT         '6'     // End repeat block
#define INIT_IO_RESTRICT_PLL    '4'     // Program a PLL clock from a value array based on an I/O port
#define INIT_COPY               '7'     // Copy a portion of a NV register to a IO register
#define INIT_NOT                '8'     // Invert the current condition status
#define INIT_FUNCTION           '5'     // Execute generic function !!!
#define INIT_INDEX_ADDRESS_LATCHED      'I' // Program a block of registers that are accessed via an index register
#define SCRIPT_TERMINATE        0x00    // End of sequential script indexes

// definitions from biosequ.inc
#define CRTC_INDEX_MONO             0x03B4
#define CRTC_INDEX_COLOR            0x03D4
#define ATC_INDEX                   0x03C0
#define SEQ_INDEX                   0x03C4
#define GDC_INDEX                   0x03CE

#define CRYSTAL_FREQ143KHZ          14318              // 14318 kHz
#define CRYSTAL_FREQ135KHZ          13500              // 13500 kHz

#define MAX_BIOS_SCAN               1024

// Hotkey bit definitions -- for test purposes.

// These bit definitions refer to CRTC register 4A, aka NV_CIO_CRE_SCRATCH5__INDEX.
#define NV_MOBILE_FLAG_DISPLAY_MASK     0x04    //SSF3
#define NV_MOBILE_FLAG_SCALE_MASK       0x10    //SSF5

// These bit definitions refer to CRTC register 4B, aka NV_CIO_CRE_SCRATCH6__INDEX.
#define NV_DRIVER_HANDLES_HOTKEYS       0x80    //SOS8
#define NV_IS_MOBILE_BIOS               0x40    //SOS7

// These bit definitions refer to CRTC register 4C, aka NV_CIO_CRE_SCRATCH7__INDEX.
#define NV_MOBILE_DISPLAY_LCD_MASK      0x01
#define NV_MOBILE_DISPLAY_CRT_MASK      0x02
#define NV_MOBILE_DISPLAY_TV_MASK       0x04
#define NV_MOBILE_DISPLAY_DFP_MASK      0x08

#define NV_MOBILE_DISPLAY_SCALE_MASK    0x80

#define NV_MOBILE_DISPLAY_EVENTS_MASK   (NV_MOBILE_DISPLAY_LCD_MASK | NV_MOBILE_DISPLAY_CRT_MASK \
                                        | NV_MOBILE_DISPLAY_TV_MASK | NV_MOBILE_DISPLAY_DFP_MASK \
                                        | NV_MOBILE_DISPLAY_SCALE_MASK)
///


#pragma pack(1)

// BMP information structure
#define CTRL_BLK_ID                 0x564e7fff
#define BIOS_ROM_CODE_SIZE          0x10000
#define BMP_INIT_CODE_SIZE_MAX      8192
#define BMP_INIT_TABLE_VER_0        0
#define BMP_INIT_TABLE_VER_1        1
#define BMP_INIT_TABLE_VER_2        2
#define BMP_INIT_TABLE_VER_3        3
#define BMP_INIT_TABLE_VER_4        4
#define BMP_INIT_TABLE_VER_5        5
#define BMP_INIT_TABLE_VER_6        6
#define BMP_INIT_TABLE_VER_UNDEF    0xffffffff
#define BMP_INIT_TABLE_SUBVER_0x10  0x10


#define BMP_CONTROL_BLOCK_FMT "w3b3b"

typedef struct
{
    bios_U016 CTL_ID;                    // ID Marker (0x7FFF)
    bios_U008 CTL_Header[3];             // ID Header ("NV\0")
    bios_U008 CTL_Version;               // Control Block Version
    bios_U008 CTL_Flags;                 // Control Block Subversion
    bios_U008 CTL_Checksum;              // Checksum byte for Control Block
} BMP_Control_Block, *PBMP_Control_Block;


#define BMP_INIT1_FMT BMP_CONTROL_BLOCK_FMT "2b1d" "3w" "2w" "5w" "5w"
typedef struct
{
    BMP_Control_Block bmpCtrlBlk;        // BMP control block

    bios_U008 BIOS_Checksum;             // Checksum byte for BIOS
    bios_U008 BIOS_Features;             // BIOS Feature Byte (bitfields)
    bios_U032 BIOS_Version;              // BIOS Version in BCD (Major/Minor/Sub)
                            
    bios_U016 BMP_GenInitTable;          // Pointer to the General Initialization Table.
    bios_U016 BMP_ExtraInitTable;        // Pointer to Extra Initialization Table
    bios_U016 BMP_SizeInitTable;         // Max size of Initialization Table.

    bios_U016 szSignonMsg;               // Offset to signon string
    bios_U016 BMP_SizeSignonMsg;         // Current length of signon message
                           
    bios_U016 BMP_Fonts;                 // Pointer to pointers to fonts
    bios_U016 BMP_FontSize;              // Size of memory available for all fonts
    bios_U016 BMP_InitSavePtr;           // Pointer to initial save pointer area
    bios_U016 BMP_Functionality;         // Pointer to functionality table for Function 1Bh
    bios_U016 BMP_TblClockMNP;           // MNP parameters for clocks

    bios_U016 BMP_OEMString;             // OEM String to identify grahpics controller chip or product family (20)
    bios_U016 BMP_OEMVendorName;         // Name of the vendor that produced the display controller board product (35)
    bios_U016 BMP_OEMProductName;        // Product name of the controller board (35)
    bios_U016 BMP_OEMProductRev;         // Revision of manufacturing level of the display controller board (30)
    bios_U016 BMP_FifoTable;             // Pointer to DAC/CRTC fifo settings table

} BMP_Struc_Rev1, *PBMP_Struc_Rev1;


#define BMP_INIT2_FMT BMP_CONTROL_BLOCK_FMT "2b2d" "3w" "2w" "5w" "5w"
typedef struct
{
    BMP_Control_Block bmpCtrlBlk;        // BMP control block

    bios_U008 BIOS_Checksum;             // Checksum byte for BIOS
    bios_U008 BIOS_Features;             // BIOS Feature Byte (bitfields)
    bios_U032 BIOS_Version;              // BIOS Version in BCD (Major/Minor/Sub)
    bios_U032 BIOS_DriverInfo;           // BIOS Version in BCD (Major/Minor/Sub)
                            
    bios_U016 BMP_GenInitTable;          // Pointer to the General Initialization Table.
    bios_U016 BMP_ExtraInitTable;        // Pointer to Extra Initialization Table
    bios_U016 BMP_SizeInitTable;         // Max size of Initialization Table.

    bios_U016 szSignonMsg;               // Offset to signon string
    bios_U016 BMP_SizeSignonMsg;         // Current length of signon message
                           
    bios_U016 BMP_Fonts;                 // Pointer to pointers to fonts
    bios_U016 BMP_FontSize;              // Size of memory available for all fonts
    bios_U016 BMP_InitSavePtr;           // Pointer to initial save pointer area
    bios_U016 BMP_Functionality;         // Pointer to functionality table for Function 1Bh
    bios_U016 BMP_TblClockMNP;           // MNP parameters for clocks

    bios_U016 BMP_OEMString;             // OEM String to identify grahpics controller chip or product family (20)
    bios_U016 BMP_OEMVendorName;         // Name of the vendor that produced the display controller board product (35)
    bios_U016 BMP_OEMProductName;        // Product name of the controller board (35)
    bios_U016 BMP_OEMProductRev;         // Revision of manufacturing level of the display controller board (30)
    bios_U016 BMP_FifoTable;             // Pointer to DAC/CRTC fifo settings table

} BMP_Struc_Rev2, *PBMP_Struc_Rev2;



#define BMP_INIT3_FMT BMP_CONTROL_BLOCK_FMT "2b2d" "6w" "2w" "5w" "5w"

typedef struct
{
    BMP_Control_Block bmpCtrlBlk;   // BMP control block

    bios_U008 BIOS_Checksum;             // Checksum byte for BIOS
    bios_U008 BIOS_Features;             // BIOS Feature Byte (bitfields)
    bios_U032 BIOS_Version;              // BIOS Version in BCD (Major/Minor/Sub)
    bios_U032 BIOS_DriverInfo;           // BIOS Version in BCD (Major/Minor/Sub)
                            
    bios_U016 BMP_GenInitTable;          // Offset to the General Initialization Table.
    bios_U016 BMP_ExtraInitTable;        // Offset to Extra Initialization Table.
    bios_U016 BMP_SizeInitTable;         // Max size of Initialization Table.
    bios_U016 BMP_MemInitTable;          // Offset to the Memory Initialization Table.
    bios_U016 BMP_SDRSequenceTable;      // Offset to the SDR Sequence Table.
    bios_U016 BMP_DDRSequenceTable;      // Offset to the DDR Sequence Table.

    bios_U016 szSignonMsg;               // Offset to signon string
    bios_U016 BMP_SizeSignonMsg;         // Current length of signon message
                           
    bios_U016 BMP_Fonts;                 // Pointer to pointers to fonts
    bios_U016 BMP_FontSize;              // Size of memory available for all fonts
    bios_U016 BMP_InitSavePtr;           // Pointer to initial save pointer area
    bios_U016 BMP_Functionality;         // Pointer to functionality table for Function 1Bh
    bios_U016 BMP_TblClockMNP;           // MNP parameters for clocks

    bios_U016 BMP_OEMString;             // OEM String to identify grahpics controller chip or product family (20)
    bios_U016 BMP_OEMVendorName;         // Name of the vendor that produced the display controller board product (35)
    bios_U016 BMP_OEMProductName;        // Product name of the controller board (35)
    bios_U016 BMP_OEMProductRev;         // Revision of manufacturing level of the display controller board (30)
    bios_U016 BMP_FifoTable;             // Pointer to DAC/CRTC fifo settings table

} BMP_Struc_Rev3, *PBMP_Struc_Rev3;


#define BMP_INIT4_FMT BMP_CONTROL_BLOCK_FMT "2b2d" "6w" "2w" "5w" "5w" "4b2w"

typedef struct
{
    BMP_Control_Block bmpCtrlBlk;        // BMP control block

    bios_U008 BIOS_Checksum;             // Checksum byte for BIOS
    bios_U008 BIOS_Features;             // BIOS Feature Byte (bitfields)
    bios_U032 BIOS_Version;              // BIOS Version in BCD (Major/Minor/Sub)
    bios_U032 BIOS_DriverInfo;           // BIOS Version in BCD (Major/Minor/Sub)
                            
    bios_U016 BMP_GenInitTable;          // Offset to the General Initialization Table.
    bios_U016 BMP_ExtraInitTable;        // Offset to Extra Initialization Table.
    bios_U016 BMP_SizeInitTable;         // Max size of Initialization Table.
    bios_U016 BMP_MemInitTable;          // Offset to the Memory Initialization Table.
    bios_U016 BMP_SDRSequenceTable;      // Offset to the SDR Sequence Table.
    bios_U016 BMP_DDRSequenceTable;      // Offset to the DDR Sequence Table.

    bios_U016 szSignonMsg;               // Offset to signon string
    bios_U016 BMP_SizeSignonMsg;         // Current length of signon message
                           
    bios_U016 BMP_Fonts;                 // Pointer to pointers to fonts
    bios_U016 BMP_FontSize;              // Size of memory available for all fonts
    bios_U016 BMP_InitSavePtr;           // Pointer to initial save pointer area
    bios_U016 BMP_Functionality;         // Pointer to functionality table for Function 1Bh
    bios_U016 BMP_TblClockMNP;           // MNP parameters for clocks

    bios_U016 BMP_OEMString;             // OEM String to identify grahpics controller chip or product family (20)
    bios_U016 BMP_OEMVendorName;         // Name of the vendor that produced the display controller board product (35)
    bios_U016 BMP_OEMProductName;        // Product name of the controller board (35)
    bios_U016 BMP_OEMProductRev;         // Revision of manufacturing level of the display controller board (30)
    bios_U016 BMP_FifoTable;             // Pointer to DAC/CRTC fifo settings table

    bios_U008 BMP_CRTI2CPort;            // Default I2C port for CRT
    bios_U008 BMP_TVI2CPort;             // Default I2C port for TV
    bios_U008 BMP_DFPI2CPort;            // Default I2C port for DFP
    bios_U008 BMP_RsvdI2CPort;           // Reserved for future expansion
    bios_U016 BMP_I2CPort0IO;            // Read/Write reg for I2C Port 0
    bios_U016 BMP_I2CPort1IO;            // Read/Write reg for I2C Port 1

} BMP_Struc_Rev4, *PBMP_Struc_Rev4;


#define BMP_INIT5_FMT BMP_CONTROL_BLOCK_FMT "2b2d" "6w" "2w" "5w" "5w" "4b2w" "1b2w"

typedef struct
{
    BMP_Control_Block bmpCtrlBlk;   // BMP control block

    bios_U008 BIOS_Checksum;             // Checksum byte for BIOS
    bios_U008 BIOS_Features;             // BIOS Feature Byte (bitfields)
    bios_U032 BIOS_Version;              // BIOS Version in BCD (Major/Minor/Sub)
    bios_U032 BIOS_DriverInfo;           // BIOS Version in BCD (Major/Minor/Sub)
                            
    bios_U016 BMP_GenInitTable;          // Offset to the General Initialization Table.
    bios_U016 BMP_ExtraInitTable;        // Offset to Extra Initialization Table.
    bios_U016 BMP_SizeInitTable;         // Max size of Initialization Table.
    bios_U016 BMP_MemInitTable;          // Offset to the Memory Initialization Table.
    bios_U016 BMP_SDRSequenceTable;      // Offset to the SDR Sequence Table.
    bios_U016 BMP_DDRSequenceTable;      // Offset to the DDR Sequence Table.

    bios_U016 szSignonMsg;               // Offset to signon string
    bios_U016 BMP_SizeSignonMsg;         // Current length of signon message
                           
    bios_U016 BMP_Fonts;                 // Pointer to pointers to fonts
    bios_U016 BMP_FontSize;              // Size of memory available for all fonts
    bios_U016 BMP_InitSavePtr;           // Pointer to initial save pointer area
    bios_U016 BMP_Functionality;         // Pointer to functionality table for Function 1Bh
    bios_U016 BMP_TblClockMNP;           // MNP parameters for clocks

    bios_U016 BMP_OEMString;             // OEM String to identify grahpics controller chip or product family (20)
    bios_U016 BMP_OEMVendorName;         // Name of the vendor that produced the display controller board product (35)
    bios_U016 BMP_OEMProductName;        // Product name of the controller board (35)
    bios_U016 BMP_OEMProductRev;         // Revision of manufacturing level of the display controller board (30)
    bios_U016 BMP_FifoTable;             // Pointer to DAC/CRTC fifo settings table

    bios_U008 BMP_CRTI2CPort;            // Default I2C port for CRT
    bios_U008 BMP_TVI2CPort;             // Default I2C port for TV
    bios_U008 BMP_DFPI2CPort;            // Default I2C port for DFP
    bios_U008 BMP_RsvdI2CPort;           // Reserved for future expansion
    bios_U016 BMP_I2CPort0IO;            // Read/Write reg for I2C Port 0
    bios_U016 BMP_I2CPort1IO;            // Read/Write reg for I2C Port 1

    bios_U008 BMP_OEMRevision;           // OEM Version Number (00 = Generic)
    bios_U016 BMP_LCDEDID;               // Pointer to LCD_EDID
    bios_U016 BMP_FPParams;              // Pointer to FP_Params
    
} BMP_Struc_Rev5, *PBMP_Struc_Rev5;

#define BMP_INIT5_0x10_FMT BMP_CONTROL_BLOCK_FMT "2b2d" "6w" "2w" "5w" "5w" "4b2w" "1b2w" "2d" "7w"
typedef struct
{
    BMP_Control_Block bmpCtrlBlk;       // BMP control block

    bios_U008 BIOS_Checksum;            // Checksum byte for BIOS
    bios_U008 BIOS_Features;            // BIOS Feature Byte (bitfields)
    bios_U032 BIOS_Version;             // BIOS Version in BCD (Major/Minor/Sub)
    bios_U032 BIOS_DriverInfo;          // BIOS Version in BCD (Major/Minor/Sub)
                            
    bios_U016 BMP_GenInitTable;         // Offset to the General Initialization Table.
    bios_U016 BMP_ExtraInitTable;       // Offset to Extra Initialization Table.
    bios_U016 BMP_SizeInitTable;        // Max size of Initialization Table.
    bios_U016 BMP_MemInitTable;         // Offset to the Memory Initialization Table.
    bios_U016 BMP_SDRSequenceTable;     // Offset to the SDR Sequence Table.
    bios_U016 BMP_DDRSequenceTable;     // Offset to the DDR Sequence Table.

    bios_U016 szSignonMsg;              // Offset to signon string
    bios_U016 BMP_SizeSignonMsg;        // Current length of signon message
                           
    bios_U016 BMP_Fonts;                // Pointer to pointers to fonts
    bios_U016 BMP_FontSize;             // Size of memory available for all fonts
    bios_U016 BMP_InitSavePtr;          // Pointer to initial save pointer area
    bios_U016 BMP_Functionality;        // Pointer to functionality table for Function 1Bh
    bios_U016 BMP_TblClockMNP;          // MNP parameters for clocks

    bios_U016 BMP_OEMString;            // OEM String to identify grahpics controller chip or product family (20)
    bios_U016 BMP_OEMVendorName;        // Name of the vendor that produced the display controller board product (35)
    bios_U016 BMP_OEMProductName;       // Product name of the controller board (35)
    bios_U016 BMP_OEMProductRev;        // Revision of manufacturing level of the display controller board (30)
    bios_U016 BMP_FifoTable;            // Pointer to DAC/CRTC fifo settings table

    bios_U008 BMP_CRTI2CPort;           // Default I2C port for CRT
    bios_U008 BMP_TVI2CPort;            // Default I2C port for TV
    bios_U008 BMP_DFPI2CPort;           // Default I2C port for DFP
    bios_U008 BMP_RsvdI2CPort;          // Reserved for future expansion
    bios_U016 BMP_I2CPort0IO;           // Read/Write reg for I2C Port 0
    bios_U016 BMP_I2CPort1IO;           // Read/Write reg for I2C Port 1

    bios_U008 BMP_OEMRevision;          // OEM Version Number (00 = Generic)
    bios_U016 BMP_LCDEDID;              // Pointer to LCD_EDID
    bios_U016 BMP_FPParams;             // Pointer to FP_Params
    
    bios_U032 BMP_FmaxVco;              // Maximum internal PLL frequency
    bios_U032 BMP_FminVco;              // Minimum internal PLL frequency

    bios_U016 BMP_InitScriptTablePtr;       // Init script table pointer
    bios_U016 BMP_MacroIndexTablePtr;       // Macro index table pointer
    bios_U016 BMP_MacroTablePtr;            // Macro table pointer
    bios_U016 BMP_ConditionTablePtr;        // Condition table pointer
    bios_U016 BMP_IOConditionTablePtr;      // IO Condition table pointer
    bios_U016 BMP_IOFlagConditionTablePtr;  // IO Flag Condition table pointer
    bios_U016 BMP_InitFunctionTablePtr;     // Init function table pointer

} BMP_Struc_Rev5_0x10, *PBMP_Struc_Rev5_0x10;


#define BMP_INIT5_0x11_FMT BMP_CONTROL_BLOCK_FMT "2b2d" "6w" "2w" "5w" "5w" "4b2w" "1b2w" "2d" "7w" "8w" "1w"
typedef struct
{
    BMP_Control_Block bmpCtrlBlk;       // BMP control block

    bios_U008 BIOS_Checksum;            // Checksum byte for BIOS
    bios_U008 BIOS_Features;            // BIOS Feature Byte (bitfields)
    bios_U032 BIOS_Version;             // BIOS Version in BCD (Major/Minor/Sub)
    bios_U032 BIOS_DriverInfo;          // BIOS Version in BCD (Major/Minor/Sub)
                            
    bios_U016 BMP_GenInitTable;         // Offset to the General Initialization Table.
    bios_U016 BMP_ExtraInitTable;       // Offset to Extra Initialization Table.
    bios_U016 BMP_SizeInitTable;        // Max size of Initialization Table.
    bios_U016 BMP_MemInitTable;         // Offset to the Memory Initialization Table.
    bios_U016 BMP_SDRSequenceTable;     // Offset to the SDR Sequence Table.
    bios_U016 BMP_DDRSequenceTable;     // Offset to the DDR Sequence Table.

    bios_U016 szSignonMsg;              // Offset to signon string
    bios_U016 BMP_SizeSignonMsg;        // Current length of signon message
                           
    bios_U016 BMP_Fonts;                // Pointer to pointers to fonts
    bios_U016 BMP_FontSize;             // Size of memory available for all fonts
    bios_U016 BMP_InitSavePtr;          // Pointer to initial save pointer area
    bios_U016 BMP_Functionality;        // Pointer to functionality table for Function 1Bh
    bios_U016 BMP_TblClockMNP;          // MNP parameters for clocks

    bios_U016 BMP_OEMString;            // OEM String to identify grahpics controller chip or product family (20)
    bios_U016 BMP_OEMVendorName;        // Name of the vendor that produced the display controller board product (35)
    bios_U016 BMP_OEMProductName;       // Product name of the controller board (35)
    bios_U016 BMP_OEMProductRev;        // Revision of manufacturing level of the display controller board (30)
    bios_U016 BMP_FifoTable;            // Pointer to DAC/CRTC fifo settings table

    bios_U008 BMP_CRTI2CPort;           // Default I2C port for CRT
    bios_U008 BMP_TVI2CPort;            // Default I2C port for TV
    bios_U008 BMP_DFPI2CPort;           // Default I2C port for DFP
    bios_U008 BMP_RsvdI2CPort;          // Reserved for future expansion
    bios_U016 BMP_I2CPort0IO;           // Read/Write reg for I2C Port 0
    bios_U016 BMP_I2CPort1IO;           // Read/Write reg for I2C Port 1

    bios_U008 BMP_OEMRevision;          // OEM Version Number (00 = Generic)
    bios_U016 BMP_LCDEDID;              // Pointer to LCD_EDID
    bios_U016 BMP_FPParams;             // Pointer to FP_Params
    
    bios_U032 BMP_FmaxVco;              // Maximum internal PLL frequency
    bios_U032 BMP_FminVco;              // Minimum internal PLL frequency

    bios_U016 BMP_InitScriptTablePtr;       // Init script table pointer
    bios_U016 BMP_MacroIndexTablePtr;       // Macro index table pointer
    bios_U016 BMP_MacroTablePtr;            // Macro table pointer
    bios_U016 BMP_ConditionTablePtr;        // Condition table pointer
    bios_U016 BMP_IOConditionTablePtr;      // IO Condition table pointer
    bios_U016 BMP_IOFlagConditionTablePtr;  // IO Flag Condition table pointer
    bios_U016 BMP_InitFunctionTablePtr;     // Init function table pointer

    bios_U016 BMP_TMDSSingleAPtr;           // TMDS single link A table
    bios_U016 BMP_TMDSSingleBPtr;           // TMDS single link B table
    bios_U016 BMP_TMDSDualPtr;              // TMDS dual link table
    bios_U016 BMP_LVDSSingleAPtr;           // LVDS single link A table
    bios_U016 BMP_LVDSSingleBPtr;           // LVDS single link B table
    bios_U016 BMP_LVDSDualPtr;              // LVDS dual link table
    bios_U016 BMP_OffSingleAPtr;            // LVDS dual link table
    bios_U016 BMP_OffSingleBPtr;            // LVDS dual link table

    bios_U016 BMP_FPTablePtr;               // Pointer to internal LCD tables

} BMP_Struc_Rev5_0x11, *PBMP_Struc_Rev5_0x11;

// init code instruction formats

#define INIT_FMT1_FMT "1b3d"
typedef struct
{
    bios_U008 opcode;
    bios_U032 operand1;
    bios_U032 operand2;
    bios_U032 operand3;

} BMP_FORMAT_1;


#define INIT_FMT2_FMT  "1b2d"
typedef struct
{
    bios_U008 opcode;
    bios_U032 operand1;
    bios_U032 operand2;
} BMP_FORMAT_2;


#define INIT_FMT3_FMT "1b1d1w"
typedef struct
{
    bios_U008 opcode;
    bios_U032 operand1;
    bios_U016 operand2;
} BMP_FORMAT_3;


#define INIT_FMT4_FMT "1b1w"
typedef struct
{
    bios_U008 opcode;
    bios_U016 operand1;
} BMP_FORMAT_4;

#define INIT_FMT5_FMT "1b1w3b"
typedef struct
{
    bios_U008 opcode;
    bios_U016 operand1;
    bios_U008 operand2;
    bios_U008 operand3;
    bios_U008 operand4;
} BMP_FORMAT_5;


#define INIT_FMT6_FMT "3b"
typedef struct
{
    bios_U008 opcode;
    bios_U008 operand1;
    bios_U008 operand2;
} BMP_FORMAT_6;


#define INIT_FMT7_FMT "1b"
typedef struct
{
    bios_U008 opcode;
} BMP_FORMAT_7;


#define INIT_FMT8_FMT "2b"
typedef struct
{
    bios_U008 opcode;
    bios_U008 operand1;
} BMP_FORMAT_8;


#define INIT_FMT9_FMT "1b1w2b"
typedef struct
{
    bios_U008 opcode;
    bios_U016 operand1;
    bios_U008 operand2;
    bios_U008 operand3;
} BMP_FORMAT_9;

#define INIT_FMT10_FMT "1b1w1b"
typedef struct
{
    bios_U008 opcode;
    bios_U016 operand1;
    bios_U008 operand2;
} BMP_FORMAT_10;

#define INIT_FMT11_FMT "1b1d2b1w2b"
typedef struct
{
    bios_U008 opcode;
    bios_U032 operand1;
    bios_S008 operand2;
    bios_U008 operand3;
    bios_U016 operand4;
    bios_U008 operand5;
    bios_U008 operand6;
} BMP_FORMAT_11;

#define INIT_FMT12_FMT "1b2d2bd"
typedef struct
{
    bios_U008 opcode;
    bios_U032 operand1;
    bios_U032 operand2;
    bios_U008 operand3;
    bios_U008 operand4;
    bios_U032 operand5;
    // instruction followed by a U032 array
} BMP_FORMAT_12;

#define INIT_FMT13_FMT "1b1w4bd"
typedef struct
{
    bios_U008 opcode;
    bios_U016 operand1;
    bios_U008 operand2;
    bios_U008 operand3;
    bios_U008 operand4;
    bios_U008 operand5;
    bios_U032 operand6;
    // instruction followed by a U032 array
} BMP_FORMAT_13;

#define INIT_FMT14_FMT "1b1w5b1d"
typedef struct
{
    bios_U008 opcode;
    bios_U016 operand1;
    bios_U008 operand2;
    bios_U008 operand3;
    bios_U008 operand4;
    bios_U008 operand5;
    bios_U008 operand6;
    bios_U032 operand7;
    // instruction followed by a U016 array
} BMP_FORMAT_14;

#define INIT_FMT15_FMT "1b4d1b"
typedef struct
{
    bios_U008 opcode;
    bios_U032 operand1;
    bios_U032 operand2;
    bios_U032 operand3;
    bios_U032 operand4;
    bios_U008 operand5;
    // instruction followed by a U008 array
} BMP_FORMAT_15;


// biggest simple BMP item should be no bigger than this..
#define BMP_MAX_PADDED_SIZE 256


// memory initialization structs

#define MEM_INIT_STRAP_MAX          0xf        // the *max* value, so can have 16
#define MEM_INIT_SEQ_TABLE_MAX      32
#define SDR                         0
#define DDR                         1
#define MEM_INIT_END_OF_SEQUENCE    0xffffffff
#define SPECIAL_32                  0x00000001 // Mask for SPECIAL_32 bit 
#define SCRAMBLE_RAM                0x00000080 // Mask for scrambling the RAM
#define NV_PFB_CONFIG_0_SCRAMBLE    29:29 /* RWIVF */

/* SDR and DDR Sequence Table definitions */
#define MEM_SEQ_FMT "32d"


typedef struct
{
    bios_U032 PFB_BOOT_0_value;
    bios_U032 PFB_CONFIG_1_value;

} bmpMemInitData;

// NV10 memory init structure
/*
    _Flags          dw      ?               ; Bit0: 0 = SDR, 1 = DDR
    _MClk_PLL       dw      ?
    _NVClk_PLL      dw      ?
    _refctrl1       dd      NV_PFB_REFCTRL_VALID_0  ; NV_PFB_REFCTRL
    _cfg            dd      ?               ; NV_PFB_CFG
    _timing0        dd      ?               ; NV_PFB_TIMING0
    _timing1        dd      ?               ; NV_PFB_TIMING1
    _timing2        dd      ?               ; NV_PFB_TIMING2
    _ctrim4         dd      0
    _pin            dd      NV_PFB_PIN_CKE_NORMAL OR NV_PFB_PIN_DQM_NORMAL
    _emrs           dd      ?               ; NV_PFB_EMRS
    _mrs1           dd      ?               ; NV_PFB_MRS
    _mrs2           dd      ?               ; NV_PFB_MRS
    _refctrl2       dd      NV_PFB_REFCTRL_VALID_1  ; NV_PFB_REFCTRL
    _expand1        dd      0
    _expand2        dd      0
*/


#define MEM_INIT_VALS_NV10_FMT           "3w13d"
typedef struct
{
    bios_U016 Flags;         // Bit0: 0 = SDR, 1 = DDR
    bios_U016 MClk_PLL;
    bios_U016 NVClk_PLL;
    bios_U032 data[13];

} MEM_INIT_VALS_NV10;

// NV15 memory init structure
/*
    _Flags          dw      ?               ; Bit0: 0 = SDR, 1 = DDR
    _MClk_PLL       dw      ?
    _NVClk_PLL      dw      ?
    _pbus_debug_0   dd      ?
    _refctrl1       dd      NV_PFB_REFCTRL_VALID_0  ; NV_PFB_REFCTRL
    _cfg            dd      ?               ; NV_PFB_CFG
    _timing0        dd      ?               ; NV_PFB_TIMING0
    _timing1        dd      ?               ; NV_PFB_TIMING1
    _timing2        dd      ?               ; NV_PFB_TIMING2
    _ctrim4         dd      06530110h
    _ctrim5         dd      0777FFF0h
    _pin            dd      NV_PFB_PIN_CKE_NORMAL OR NV_PFB_PIN_DQM_NORMAL
    _emrs           dd      ?               ; NV_PFB_EMRS
    _mrs1           dd      ?               ; NV_PFB_MRS
    _mrs2           dd      ?               ; NV_PFB_MRS
    _refctrl2       dd      NV_PFB_REFCTRL_VALID_1  ; NV_PFB_REFCTRL
    _expand1        dd      0FFFFFFFFh
    _expand2        dd      0FFFFFFFFh
*/


#define MEM_INIT_VALS_NV15_FMT           "3w15d"
typedef struct
{
    bios_U016 Flags;         // Bit0: 0 = SDR, 1 = DDR
    bios_U016 MClk_PLL;
    bios_U016 NVClk_PLL;
    bios_U032 data[15];
} MEM_INIT_VALS_NV15;

// generic memory init types
typedef MEM_INIT_VALS_NV10 MEM_INIT_TABLE_NV10[MEM_INIT_STRAP_MAX + 1];
typedef MEM_INIT_VALS_NV15 MEM_INIT_TABLE_NV15[MEM_INIT_STRAP_MAX + 1];

#define MEM_INIT_VALS_MAX_BYTE_SIZE 80

#define BMP_I2C_FMT "2d" "4b" "2w"
typedef struct
{
    bios_U032 Reserved1;
    bios_U032 Reserved2;

    bios_U008 CRTI2CPort;
    bios_U008 TVI2CPort;
    bios_U008 DFPI2CPort;
    bios_U008 Reserved3;

    bios_U016 I2CPort0IO;
    bios_U016 I2CPort1IO;

} BIOSI2CTable, *PBIOSI2CTable;

// BMP script

// script table
typedef bios_U016 SCRIPT_TABLE_ENTRY;

// Macro Index Table Entry structure
#define MACRO_INDEX_ENTRY_FMT  "bb"
typedef struct
{
    bios_U008 macroIndex;
    bios_U008 macroCount;
} MACRO_INDEX_ENTRY;

// Macro Table Entry structure
#define MACRO_ENTRY_FMT  "dd"
typedef struct
{
    bios_U032 macroAddress;
    bios_U032 macroValue;
} MACRO_ENTRY;

// Condition Table Entry structure
#define CONDITION_ENTRY_FMT "3d"
typedef struct
{
    bios_U032 condAddress;
    bios_U032 condMask;
    bios_U032 condCompare;
} CONDITION_ENTRY;

// I/O Condition Table Entry structure
#define NO_CONDITION 0xff
#define IO_CONDITION_ENTRY_FMT "wbbb"
typedef struct
{
    bios_U016 iocondPort;
    bios_U008 iocondIndex;
    bios_U008 iocondMask;
    bios_U008 iocondCompare;
} IO_CONDITION_ENTRY;

// I/O Flag Condition Table Entry structure
#define IO_FLAG_CONDITION_ENTRY_FMT         "wbbbwbb"
typedef struct
{
    bios_U016 iofcondPort;
    bios_U008 iofcondIndex;
    bios_U008 iofcondMask;
    bios_U008 iofcondShift;
    bios_U016 iofcondFlagArray;
    bios_U008 iofcondFlagMask;
    bios_U008 iofcondFlagCompare;
} IO_FLAG_CONDITION_ENTRY;

// Function Table Entry structure
#define FUNCTION_ENTRY_FMT "w"
typedef bios_U016 FUNCTION_TABLE_ENTRY;

#define TMDS_MODE_FORMAT        "1w1b"
typedef struct
{
    bios_U016 tmdsmFreq;
    bios_U008 tmdsmScript;
} TMDS_MODE_ENTRY;


#define DEV_HEAD_FMT "1b1b1w"
typedef struct
{
    bios_U008 version;
    bios_U008 blocks;
    bios_U016 i2c_port_list;
} DEV_HEAD, *PDEV_HEAD;


#define DEV_REC_STRUC_FMT "1d1w1d"
typedef struct
{
    bios_U032 dev_type;
    bios_U016 data_ptr;
    bios_U032 data_rsvr;
} DEV_REC_STRUC, *PDEV_REC_STRUC;

#define DEV_REC_UNUSED_DEV      0xFFFFFFFF

/*
DEV_REC    RECORD  rec_rsvd:4=0, \
                   dbus:3=0, \
                   location:4=0, \
                   head:3=0, \
                   i2c:4=0, \
                   format:6=0, \
                   subtype:4=0, \
                   dtype:4=0
*/

// DEV_REC { X, X, DEV_REC_LOCATION_BOARD=1, Head, X, X, X, DEV_REC_TYPE_CRT=0}                            
// mask:  0000 000 1111 111 0000 000000 0000 1111
// value: 0000 000 0001 hhh 0000 000000 0000 0000

#define DEV_REC_CRT_DEV_MASK    0x01FC000F
#define DEV_REC_CRT_DEV_EXTERNAL_DAC 0x00200000
#define DEV_REC_HEAD_SHIFT      18

#pragma pack()

RM_STATUS BiosReadBytes            (PHWINFO, U008[], U032 offset, U032 size);
RM_STATUS BiosCalculateSizes       (const char *, U032 *, U032 *);
RM_STATUS BiosUnpackLittleEndianStructure(U008 *packedLEData, U032 *unpackedData, const char *format, U032 *numfields, U032 *unpacked_bytes);
RM_STATUS BiosReadStructure        (PHWINFO, void *, U032, U032*, const char *);
RM_STATUS BiosReadArray            (PHWINFO, void *, U032, U032, U032*, const char *);
U008 BiosRead8                     (PHWINFO, U032);
U016 BiosRead16                    (PHWINFO, U032);
U032 BiosRead32                    (PHWINFO, U032);
RM_STATUS BiosFindString           (PHWINFO, U008 string[], U032*, U032 string_size);
RM_STATUS BiosGetMaxExternalPCLKFreq(PHWINFO, U032 head, U032* freq);
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Microsoft Xbox (1.00.4400) [April 2002] [src]\private\ntos\video\nvx\drivers\resman\kernel\inc\fifo.h ===
#ifndef _FIFO_H_
#define _FIFO_H_

 /***************************************************************************\
|*                                                                           *|
|*        Copyright (c) 1993-2000 NVIDIA, Corp.  All rights reserved.        *|
|*                                                                           *|
|*     NOTICE TO USER:   The source code  is copyrighted under  U.S. and     *|
|*     international laws.   NVIDIA, Corp. of Sunnyvale, California owns     *|
|*     the copyright  and as design patents  pending  on the design  and     *|
|*     interface  of the NV chips.   Users and possessors of this source     *|
|*     code are hereby granted  a nonexclusive,  royalty-free  copyright     *|
|*     and  design  patent license  to use this code  in individual  and     *|
|*     commercial software.                                                  *|
|*                                                                           *|
|*     Any use of this source code must include,  in the user documenta-     *|
|*     tion and  internal comments to the code,  notices to the end user     *|
|*     as follows:                                                           *|
|*                                                                           *|
|*     Copyright (c) 1993-2000  NVIDIA, Corp.    NVIDIA  design  patents     *|
|*     pending in the U.S. and foreign countries.                            *|
|*                                                                           *|
|*     NVIDIA, CORP.  MAKES  NO REPRESENTATION ABOUT  THE SUITABILITY OF     *|
|*     THIS SOURCE CODE FOR ANY PURPOSE.  IT IS PROVIDED "AS IS" WITHOUT     *|
|*     EXPRESS OR IMPLIED WARRANTY OF ANY KIND.  NVIDIA, CORP. DISCLAIMS     *|
|*     ALL WARRANTIES  WITH REGARD  TO THIS SOURCE CODE,  INCLUDING  ALL     *|
|*     IMPLIED   WARRANTIES  OF  MERCHANTABILITY  AND   FITNESS   FOR  A     *|
|*     PARTICULAR  PURPOSE.   IN NO EVENT SHALL NVIDIA, CORP.  BE LIABLE     *|
|*     FOR ANY SPECIAL, INDIRECT, INCIDENTAL,  OR CONSEQUENTIAL DAMAGES,     *|
|*     OR ANY DAMAGES  WHATSOEVER  RESULTING  FROM LOSS OF USE,  DATA OR     *|
|*     PROFITS,  WHETHER IN AN ACTION  OF CONTRACT,  NEGLIGENCE OR OTHER     *|
|*     TORTIOUS ACTION, ARISING OUT  OF OR IN CONNECTION WITH THE USE OR     *|
|*     PERFORMANCE OF THIS SOURCE CODE.                                      *|
|*                                                                           *|
 \***************************************************************************/

/****************************** FIFO Manager *******************************\
*                                                                           *
* Module: FIFO.H                                                            *
*       FIFO assignment and hardware management.                            *
*                                                                           *
*****************************************************************************
*                                                                           *
* History:                                                                  *
*                                                                           *
\***************************************************************************/

// Required include files
#include "dmapush.h"

//---------------------------------------------------------------------------
//
//  Macros.
//
//---------------------------------------------------------------------------

#define NUM_SUBCHANNELS     8
#define FIFO_STACK_DEPTH    16

//
// Hash table function.
//
//KJK #define FIFO_HASH(h,c)  ((((h)^((h)>>8)^((h)>>16)^((h)>>24))&0xFF)^((c)&0x7F))
#define FIFO_HASH(h,c)  (((h>>0)&0x7FF)^((h>>11)&0x7FF)^((h>>22)&0x7FF)^((c<<7)&0x7FF))
#define HASH_DEPTH      pDev->Pram.HalInfo.HashDepth
//KJK #define HASH_ENTRY(h,d) ((h)*HASH_DEPTH+(d))
#define HASH_ENTRY(h,d) ((h)+(d))
//
// Gray code translation macros.  Gray code is used by the FIFO runout
// GET and PUT pointers because of the asynchronous boundary.
//
extern U032 fifoGrayToBinTable[];
extern U032 fifoBinToGrayTable[];
#define BIN_TO_GRAY(bb)     fifoIntToGrayTable[(bb)>>2]
#define GRAY_TO_BIN(gg)     fifoGrayToIntTable[(gg)>>2]

//---------------------------------------------------------------------------
//
//  Chip Engines known to FIFO
//
//---------------------------------------------------------------------------

#define ENGINE_SW           0
#define ENGINE_GRAPHICS     1

//---------------------------------------------------------------------------
//
//  Structures and types.
//
//---------------------------------------------------------------------------

//
// FIFO structure.
//
typedef struct _def_fifo
{
    BOOL    InUse;
    U032    ChID;
    U032    CacheDepth;
//    U032    ObjectStackTop[NUM_SUBCHANNELS];
//    POBJECT ObjectStack[NUM_SUBCHANNELS][FIFO_STACK_DEPTH];
    POBJECT SubchannelContext[NUM_SUBCHANNELS];
    U032    ObjectCount;
    PNODE   ObjectTree;
    PDMAPUSHER DmaPushObject;  // Object representing the state of the dma
						       // pusher for this channel
    PDMAOBJECT StallNotifier;
    BOOL       IsStalledPendingVblank;
    U032       Put;
    POBJECT    LastIllegalMthdObject;
    U032       ClassAllocLocks;
    U032       Instance;       // Additional channel context instmem
    U032       InstanceSize;   // Amount of instmem
} FIFO, *PFIFO;


//---------------------------------------------------------------------------
//
//  Function prototypes.
//
//---------------------------------------------------------------------------

RM_STATUS initFifo(PHWINFO);
RM_STATUS fifoAlloc(PHWINFO, U032, U032 *);
RM_STATUS fifoAllocDma(PHWINFO, U032, U032 *, PDMAOBJECT);
RM_STATUS fifoFree(PHWINFO, U032);
RM_STATUS fifoResetChannelState(PHWINFO, U032);
RM_STATUS fifoSoftwareMethod(PHWINFO, PFIFOEXCEPTIONDATA);
RM_STATUS fifoHashEntry(PHWINFO, POBJECT, U032, U032 *);
RM_STATUS fifoAddHashEntry(PHWINFO, POBJECT, U032, U032);
RM_STATUS fifoDelHashEntry(PHWINFO, POBJECT, U032);
RM_STATUS fifoAddObject(PHWINFO, POBJECT);
RM_STATUS fifoDelObject(PHWINFO, POBJECT);
RM_STATUS fifoSearchObject(PHWINFO, U032, U032, POBJECT *);
RM_STATUS fifoUpdateContext(POBJECT, U032, U032);
RM_STATUS fifoUpdateObjectInstance(PHWINFO, POBJECT, U032, U032);
RM_STATUS fifoDeleteObjectInstance(PHWINFO, POBJECT, U032);
RM_STATUS fifoDeleteSubchannelContextEntry(PHWINFO, POBJECT);
V032      fifoService(PHWINFO);

#ifdef DEBUG
#define MAX_FIFOLOG_LENGTH	1024
extern U032 findex;
extern U032 fifolog[];

// fifolog format looks like:
//	31:28	= unique file number
//	27:4	= file line number
//	1:0	= fifo state bits (bit1 = puller, bit0 = reassign)
#define FIFOLOG(fn, fa, fb)					\
	fifolog[findex] = ((fn << 28) | (__LINE__ << 4) |	\
				((fa & 0x1) ? 1 : 0) << 1 |	\
				((fb & 0x1) ? 1 : 0));		\
	if (++findex == MAX_FIFOLOG_LENGTH)			\
		findex = 0
#else
#define FIFOLOG(fn, fa, fb)
#endif // DEBUG

#endif // _FIFO_H_
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Microsoft Xbox (1.00.4400) [April 2002] [src]\private\ntos\video\nvx\drivers\resman\kernel\inc\dac.h ===
#ifndef _DAC_H_
#define _DAC_H_
 /***************************************************************************\
|*                                                                           *|
|*        Copyright (c) 1993-2000 NVIDIA, Corp.  All rights reserved.        *|
|*                                                                           *|
|*     NOTICE TO USER:   The source code  is copyrighted under  U.S. and     *|
|*     international laws.   NVIDIA, Corp. of Sunnyvale, California owns     *|
|*     the copyright  and as design patents  pending  on the design  and     *|
|*     interface  of the NV chips.   Users and possessors of this source     *|
|*     code are hereby granted  a nonexclusive,  royalty-free  copyright     *|
|*     and  design  patent license  to use this code  in individual  and     *|
|*     commercial software.                                                  *|
|*                                                                           *|
|*     Any use of this source code must include,  in the user documenta-     *|
|*     tion and  internal comments to the code,  notices to the end user     *|
|*     as follows:                                                           *|
|*                                                                           *|
|*     Copyright (c) 1993-2000  NVIDIA, Corp.    NVIDIA  design  patents     *|
|*     pending in the U.S. and foreign countries.                            *|
|*                                                                           *|
|*     NVIDIA, CORP.  MAKES  NO REPRESENTATION ABOUT  THE SUITABILITY OF     *|
|*     THIS SOURCE CODE FOR ANY PURPOSE.  IT IS PROVIDED "AS IS" WITHOUT     *|
|*     EXPRESS OR IMPLIED WARRANTY OF ANY KIND.  NVIDIA, CORP. DISCLAIMS     *|
|*     ALL WARRANTIES  WITH REGARD  TO THIS SOURCE CODE,  INCLUDING  ALL     *|
|*     IMPLIED   WARRANTIES  OF  MERCHANTABILITY  AND   FITNESS   FOR  A     *|
|*     PARTICULAR  PURPOSE.   IN NO EVENT SHALL NVIDIA, CORP.  BE LIABLE     *|
|*     FOR ANY SPECIAL, INDIRECT, INCIDENTAL,  OR CONSEQUENTIAL DAMAGES,     *|
|*     OR ANY DAMAGES  WHATSOEVER  RESULTING  FROM LOSS OF USE,  DATA OR     *|
|*     PROFITS,  WHETHER IN AN ACTION  OF CONTRACT,  NEGLIGENCE OR OTHER     *|
|*     TORTIOUS ACTION, ARISING OUT  OF OR IN CONNECTION WITH THE USE OR     *|
|*     PERFORMANCE OF THIS SOURCE CODE.                                      *|
|*                                                                           *|
 \***************************************************************************/
/********************************* DAC Module ******************************\
*                                                                           *
* Module: DAC.H                                                             *
*       DAC support routines.                                               *
*                                                                           *
\***************************************************************************/

#include <nvmisc.h>                 // pick up I2C structures

#include <nvcm.h>                   // ick ick ick ick

//
// Microport access macros.
//
#ifdef SOLARIS

// 3-6-96 With updated model simulation requires DAC initialization, so
//        we place back the DAC macros.
/*
#define DAC_WR08(rr,dd) 
#define DAC_INDEX_WR08(ii,dd) 
#define DAC_RD08(rr) \
    (REG_RD32(rr)&0xFF)
#define DAC_INDEX_RD08(ii,dd) \
    DAC_WR08(SGS_DAC_UPORT_INDEX_LO,(ii));   \
    DAC_WR08(SGS_DAC_UPORT_INDEX_HI,(ii)>>8);\
    (dd)=DAC_RD08(SGS_DAC_UPORT_INDEX_DATA)
*/

// Origional DAC Macros for RM.
#define DAC_WR08(rr,dd) \
    REG_WR32((rr),(dd)&0xFF)
#define DAC_INDEX_WR08(ii,dd) \
    DAC_WR08(SGS_DAC_UPORT_INDEX_LO,(ii));   \
    DAC_WR08(SGS_DAC_UPORT_INDEX_HI,(ii)>>8);\
    DAC_WR08(SGS_DAC_UPORT_INDEX_DATA,(dd))
#define DAC_RD08(rr) \
    (REG_RD32(rr)&0xFF)
#define DAC_INDEX_RD08(ii,dd) \
    DAC_WR08(SGS_DAC_UPORT_INDEX_LO,(ii));   \
    DAC_WR08(SGS_DAC_UPORT_INDEX_HI,(ii)>>8);\
    (dd)=DAC_RD08(SGS_DAC_UPORT_INDEX_DATA)


#else   // ifdef SOLARIS
#if 0
#define DAC_WR08(rr,dd) \
    REG_WR32((rr),(dd)&0xFF)
#endif
#define DAC_INDEX_WR08(ii,dd) \
    DAC_WR08(SGS_DAC_UPORT_INDEX_LO,(ii));   \
    DAC_WR08(SGS_DAC_UPORT_INDEX_HI,(ii)>>8);\
    DAC_WR08(SGS_DAC_UPORT_INDEX_DATA,(dd))
#if 0
#define DAC_RD08(rr) \
    (REG_RD32(rr)&0xFF)
#endif
#define DAC_INDEX_RD08(ii,dd) \
    DAC_WR08(SGS_DAC_UPORT_INDEX_LO,(ii));   \
    DAC_WR08(SGS_DAC_UPORT_INDEX_HI,(ii)>>8);\
    (dd)=DAC_RD08(SGS_DAC_UPORT_INDEX_DATA)
#endif // ifdef SOLARIS


/* XXX temporary until they appear in nv_def.h */
#define NV_CIO_CRE_DDC0_STATUS__INDEX                     0x00000036
#define NV_CIO_CRE_DDC0_WR__INDEX                         0x00000037

#define CRTC2   1

// These macros access the DAC (including PCRTC) for either of two heads
#define DAC_REG_WR08(a,d,h)         \
        REG_WR08(a + CurDacAdr(h), d)

#define DAC_REG_WR32(a,d,h)         \
        REG_WR32(a + CurDacAdr(h), d) 

#define DAC_REG_RD08(a,h)           \
        REG_RD08(a + CurDacAdr(h)) 

#define DAC_REG_RD32(a,h)           \
        REG_RD32(a + CurDacAdr(h)) 

// We need special versions of these macros for HAL use...
#define HAL_DAC_REG_WR32(a,d,o)         \
        REG_WR32(a + o, d) 

#define HAL_DAC_REG_RD32(a,o)           \
        REG_RD32(a + o) 

#define DAC_FLD_WR_DRF_DEF(d,r,f,c,h) \
        REG_WR32(NV##d##r + CurDacAdr(h),(REG_RD32(NV##d##r + CurDacAdr(h))&~(DRF_MASK(NV##d##r##f)<<DRF_SHIFT(NV##d##r##f)))|DRF_DEF(d,r,f,c))

// HAL Version
#define HAL_DAC_FLD_WR_DRF_DEF(d,r,f,c,o) \
        REG_WR32(NV##d##r + o,(REG_RD32(NV##d##r + o)&~(DRF_MASK(NV##d##r##f)<<DRF_SHIFT(NV##d##r##f)))|DRF_DEF(d,r,f,c))

#define DAC_FLD_WR_DRF_NUM(d,r,f,n,h) \
        REG_WR32(NV##d##r + CurDacAdr(h),(REG_RD32(NV##d##r + CurDacAdr(h))&~(DRF_MASK(NV##d##r##f)<<DRF_SHIFT(NV##d##r##f)))|DRF_NUM(d,r,f,n)) 

#define DAC_REG_WR_DRF_DEF(d,r,f,c,h) \
        REG_WR32(NV ## d ## r + CurDacAdr(h), DRF_DEF(d,r,f,c))

#define DAC_REG_RD_DRF(d,r,f,h) \
    ((REG_RD32(NV##d##r + CurDacAdr(h))>>DRF_SHIFT(NV ## d ## r ## f))&DRF_MASK(NV ## d ## r ## f))

// HAL Version
#define HAL_DAC_REG_RD_DRF(d,r,f,o) \
    ((REG_RD32(NV##d##r + o)>>DRF_SHIFT(NV ## d ## r ## f))&DRF_MASK(NV ## d ## r ## f))

//---------------------------------------------------------------------------
// Standard VGA Mode Table Structure
typedef struct _seq_ 
{   
    U008 ClockMode; 
    U008 MapMask; 
    U008 FontAddr; 
    U008 MemMode;
} SEQ;      
     
typedef struct  _crtc_
{
    U008   HTotal;
    U008   HDispEnd;
    U008   HBlankS;
    U008   HBlankE;
    U008   HSyncS;
    U008   HSyncE;
    U008   VTotal;
    U008   Overflow;
    U008   PresetRowScan;
    U008   CellHeight;
    U008   CursorS;
    U008   CursorE;
    U008   RegenSHigh;
    U008   RegenSLow;
    U008   CursorPosHigh;
    U008   CursorPosLow;
    U008   VSyncS;
    U008   VSyncE;
    U008   VDispE;
    U008   RowOffset;
    U008   ULineRow;
    U008   VBlankS;
    U008   VBlandE;
    U008   Mode;
    U008   LineCompare;
} CRTC;

typedef struct  _gr_
{
    U008   SetReset;
    U008   EnableSetReset;
    U008   ColorCmp;
    U008   ROP;
    U008   ReadMap;
    U008   Mode;
    U008   Misc;
    U008   CDC;
    U008   BitMask;
} GR;   
    
// Standard VGA Mode Table format.
typedef struct _vga_mode_
{
    U008   columns;
    U008   rows;
    U008   char_height;
    U016  RegenLenght;
    SEQ     seq_regs;              // SR1-4
    U008   PT_Misc;               // Misc Register
    CRTC    crtc_regs;             // CR0-18
    U008   PT_ATC[20];            // Attribute Controller
    GR      gr_regs;               // GR0-8
} VGATBL;                      

//  TVformat types
#define NTSC    0
#define PAL     1
//  TV encoders
#define NO_ENCODER 0
#define BROOKTREE  1
#define CHRONTEL   2
#define BROOKTREE_ID    0x8A
#define CHRONTEL_ID     0xEA

#define ERR_I2C_MODE    1
#define ERR_I2C_COMM    2
#define ERR_I2C_UNKNOWN 3
// Timing parameters, defined by CRTC containing low order bits
#define H_TOTAL         0
#define H_DISPLAY_END   1
#define H_BLANK_START   2
#define H_BLANK_END     3
#define H_RETRACE_START 4
#define H_RETRACE_END   5
#define V_TOTAL         6
#define V_DISPLAY_END   0x12
#define V_RETRACE_START 0x10
#define V_RETRACE_END   0x11
#define V_BLANK_START   0x15
#define V_BLANK_END     0x16

// Adjustments for TV
typedef struct
{
    U032    hRes;
    U032    vRes;
    U008    SR01;
    U008    CR00;
    U008    CR04;
    U008    CR06;
    U008    CR07;
    U008    CR08;
    U008    CR10;
    U008    CR12;
    U008    CR28;
    U008   *encoderString;
} TV_ADJUST;      

//typedef struct _I2C_string_struct_
typedef struct 
{
    U008    Dev;
    U008    reg0x00;
    U008    data0x00;
    U008    reg0x07;
    U008    data0x07;
    U008    reg0x0A;
    U008    data0x0A;
    U008    reg0x0B;
    U008    data0x0B;
    U008    reg0x13;
    U008    data0x13;
    U008    data0x14;
    U008    data0x15;
    U008    terminator;
} CH_string, *PCH_string;
    
    
//  Brooktree values -- 1 byte device ID, 6 bytes centering info, 33 bytes resolution info
typedef struct 
{
    U008    Dev;
    U008    btc1;
    U008    btc2;
    U008    btc3;
    U008    btc4;
    U008    btc5;
    U008    btc6;
    U008    bt1;
    U008    bt2;
    U008    bt3;
    U008    bt4;
    U008    bt5;
    U008    bt6;
    U008    bt7;
    U008    bt8;
    U008    bt9;
    U008    bt10;
    U008    bt11;
    U008    bt12;
    U008    bt13;
    U008    bt14;
    U008    bt15;
    U008    bt16;
    U008    bt17;
    U008    bt18;
    U008    bt19;
    U008    bt20;
    U008    bt21;
    U008    bt22;
    U008    bt23;
    U008    bt24;
    U008    bt25;
    U008    bt26;
    U008    bt27;
    U008    bt28;
    U008    bt29;
    U008    bt30;
    U008    bt31;
    U008    bt32;
    U008    bt33;
    U008    termination;
} BT_string, *PBT_string;

// DAC Flat Panel Timing struture
// Corresponds to HW regs which must be programmed for flat panel.
typedef struct DacFlatPanelTimings
{
    U032    PixClk;
    U032    HActive;
    U032    HDispEnd;
    U032    HValidStart;
    U032    HValidEnd;
    U032    HSyncStart;
    U032    HSyncEnd;
    U032    HTotal;
    U032    VActive;
    U032    VDispEnd;
    U032    VValidStart;
    U032    VValidEnd;
    U032    VSyncStart;
    U032    VSyncEnd;
    U032    VTotal;
    U032    Flags;
} DACFPTIMING, * PDACFPTIMING;

#define NV10_VSCALAR_TV_ADJUST  0x00010004  // adjustment for video overlay on TV

//
// Monitor position state.  Set during modeset and returned
// to clients via cfg get interfaces.
//
typedef struct _dac_monitor_position {
    U032 Hbs;
    U032 Hbe;
    U032 Vbs;
    U032 Vbe;
    U032 Hrs;
    U032 Hre;
    U032 Vrs;
    U032 Vre;
} DACMONITORPOSITION, *PDACMONITORPOSITION;

//
// Per-CRTC information.
// There is one of these structures for each possible CRTC in
// the system.
//
typedef struct _dac_crtc_info
{
    // Number of VIDEO_LUT_CURSOR_DAC objects allocated for this head
    U032 RefCount;

    VOID_PTR pVidLutCurDac; //Head-specific pointer, null if head is disabled.

#define DAC_CRTCINFO_VBLANK_ENABLED         0x0001
    U032 StateFlags;
    U032 UpdateFlags;

    // Panning/Buffer Flip data (used across LUT_CURSOR_DAC objects)
    U032 CurrentPanOffset;
    U032 CurrentImageOffset;

    // Display info
    U032 CurrentDisplay;
    U032 DisplayChanged;
    U032 CurrentVsyncState;
    U032 CurrentHsyncState;
    BOOL SyncStateIsSaved;
    U032 CurrentPowerState;

    // VBlank data
    BOOL IsVBlank;
    U032 VBlankToggle;
    U032 VBlankCounter;
    VOID_PTR VBlankCallbackList;

    // NvSysMoveCursor data
    S032 CursorPosX;
    S032 CursorPosY;

    // NvSysSetCursorImage data
    U032 CursorWidth;
    U032 CursorHeight;
    U032 CursorOffset;
    U032 CursorColorFormat;

    // NvSysSetCursor data
    U008 CursorImagePlane[2][32 * sizeof(U032)];
    U032 CursorType;

    // NvSysUpdateImageFormat data
    U032 ImageOffset;
    U032 ImageFormat;
    U032 ChID;
    U032 ObjectHandle;

    // Monitor position data
    DACMONITORPOSITION MonitorPosition;

    // EDID data
    U008 EdidVersion;
    U008 EdidDisplayType;
    U008 EDID[256];

} DACCRTCINFO, *PDACCRTCINFO;

// defines for the BIOS Display Config Block
#define DCB_PTR_OFFSET          0x0036      // from VGA BIOS base

// following offset are relative to the DCB base
#define DCB_REVISION_OFFSET     0x0000
#define DCB_SIZE_128B_OFFSET    0x0001      // size is in 128 bytes block
#define DCB_ICB_OFFSET          0x0002      // I2C ports configuration block
#define DCB_DEV_DESC_OFFSET     0x0004

#define DCB_FIRST_REVISION      0x13        // revision in BCD format
                                            // 1st revision that supports DCB
#define DCB_BLOCK_SIZE          128

// each device descriptor consists of 2 32-bit words and a short pointer,
// the first 32-bit word is the device type record, the second one is the data record.

// TYPE field definitions
#define DCB_DEV_REC_TYPE_CRT                    0x0
#define DCB_DEV_REC_TYPE_TV                     0x1
#define DCB_DEV_REC_TYPE_DD_SLINK               0x2
#define DCB_DEV_REC_TYPE_DD_DLINK               0x3
#define DCB_DEV_REC_TYPE_EOL                    0xf     // End of list
#define DCB_DEV_REC_TYPE_UNUSED                 0xf

// SUBTYPE field definitions
#define DCB_DEV_REC_SUBTYPE_UNUSED              0xf

// CRT subtypes
#define DCB_DEV_REC_SUBTYPE_CRT_DAC_INTERNAL    0x0
#define DCB_DEV_REC_SUBTYPE_CRT_DAC_FAIRCHILD   0x1
#define DCB_DEV_REC_SUBTYPE_CRT_UNUSED          DCB_DEV_REC_SUBTYPE_UNUSED

// TV subtypes
#define DCB_DEV_REC_SUBTYPE_TV_BROOKTREE        0x0
#define DCB_DEV_REC_SUBTYPE_TV_CHRONTEL         0x1
#define DCB_DEV_REC_SUBTYPE_TV_PHILIPS          0x2
#define DCB_DEV_REC_SUBTYPE_TV_UNUSED           DCB_DEV_REC_SUBTYPE_UNUSED

// digital display subtypes
#define DCB_DEV_REC_SUBTYPE_DD_TMDS             0x0
#define DCB_DEV_REC_SUBTYPE_DD_LVDS             0x1
#define DCB_DEV_REC_SUBTYPE_DD_UNUSED           DCB_DEV_REC_SUBTYPE_UNUSED

// FORMAT field definitions
#define DCB_DEV_REC_FMT_UNUSED                  0x3f

// CRT format definitions
#define DCB_DEV_REC_FMT_CRT_UNUSED              DCB_DEV_REC_FMT_UNUSED

// TV format definitions
#define DCB_DEV_REC_FMT_TV_NTSC_M               0x00
#define DCB_DEV_REC_FMT_TV_NTSC_J               0x01
#define DCB_DEV_REC_FMT_TV_PAL_M                0x02
#define DCB_DEV_REC_FMT_TV_PAL_BDGHI            0x03
#define DCB_DEV_REC_FMT_TV_PAL_N                0x04
#define DCB_DEV_REC_FMT_TV_PAL_NC               0x05
#define DCB_DEV_REC_FMT_TV_SECAM                0x06
#define DCB_DEV_REC_FMT_TV_STRAPS               0x0f
#define DCB_DEV_REC_FMT_TV_UNUSED               DCB_DEV_REC_FMT_UNUSED

// DFP format definitions
#define DCB_DEV_REC_FMT_DD_FIXED_00             0x00
#define DCB_DEV_REC_FMT_DD_FIXED_01             0x01
#define DCB_DEV_REC_FMT_DD_FIXED_02             0x02
#define DCB_DEV_REC_FMT_DD_FIXED_03             0x03
#define DCB_DEV_REC_FMT_DD_FIXED_04             0x04
#define DCB_DEV_REC_FMT_DD_FIXED_05             0x05
#define DCB_DEV_REC_FMT_DD_FIXED_06             0x06
#define DCB_DEV_REC_FMT_DD_FIXED_07             0x07
#define DCB_DEV_REC_FORMAT_DD_DDC               0x10
#define DCB_DEV_REC_FMT_DD_STRAPS               0x1f
#define DCB_DEV_REC_FMT_DD_UNUSED               DCB_DEV_REC_FMT_UNUSED

// I2C_PORT field definitions
#define DCB_DEV_REC_LOGICAL_PORT_0              0x0
#define DCB_DEV_REC_LOGICAL_PORT_1              0x1
#define DCB_DEV_REC_LOGICAL_PORT_2              0x2
#define DCB_DEV_REC_LOGICAL_PORT_UNUSED         0xf

// HEAD field definitions
#define DCB_DEV_REC_HEAD_A                      0x0
#define DCB_DEV_REC_HEAD_B                      0x1
#define DCB_DEV_REC_HEAD_UNUSED                 0x7

// LOCATION field definitions
#define DCB_DEV_REC_LOCATION_CHIP               0x0
#define DCB_DEV_REC_LOCATION_BOARD              0x1
#define DCB_DEV_REC_LOCATION_UNUSED             0xf

// BUS field definitions
#define DCB_DEV_REC_BUS_0                       0x0
#define DCB_DEV_REC_BUS_1                       0x1
#define DCB_DEV_REC_BUS_2                       0x2
#define DCB_DEV_REC_BUS_3                       0x3
#define DCB_DEV_REC_BUS_4                       0x4
#define DCB_DEV_REC_BUS_5                       0x5
#define DCB_DEV_REC_BUS_6                       0x6
#define DCB_DEV_REC_BUS_UNUSED                  0x7

// RSVD field definitions
#define DCB_DEV_REC_RSVD_UNUSED                 0xf

#define DCB_MAX_NUM_DEVDESCS    16      // max # of device descriptors and I2C
#define DCB_MAX_NUM_I2C_RECORDS 16      // records supported by current DCB

typedef struct {
    union {
        struct {
            U032    Type        :4;     // CRT, TV, DD
            U032    Subtype     :4;
            U032    Fmt         :6;
            U032    IdxToICB    :4;     // index into I2C Config Block
            U032    Head        :3;
            U032    Location    :4;     // chip, board
            U032    Bus         :3;
            U032    Rsvd        :4;
        } DevRec;

        U032 DevRec_U032;
    } DCBDevRec;

    U016    DataPtr;

    union {
        U032    DataReserved;
        U008    DataByte;
        U016    DataWord;
        U032    DataDword;
    } DCBDevData;

    // this var tells device type and unit by the lone set bit
    U032    DevTypeUnit;    // bits 0..7 map to CRT0..CRT7
                            // bits 8..15 map to TV0..TV7
                            // bits 16..23 map to DD0..DD7
} DACDCBDEVDESC, *PDACDCBDEVDESC;

// shortcuts for accessing DCB device descriptor field
#define DCBRecType        DCBDevRec.DevRec.Type
#define DCBRecSubtype     DCBDevRec.DevRec.Subtype
#define DCBRecFmt         DCBDevRec.DevRec.Fmt
#define DCBRecIdxToICB    DCBDevRec.DevRec.IdxToICB
#define DCBRecHead        DCBDevRec.DevRec.Head
#define DCBRecLocation    DCBDevRec.DevRec.Location
#define DCBRecBus         DCBDevRec.DevRec.Bus

#define I2C_PHYSICAL_PORT_A_STATUS         0x3E        // CR3E
#define I2C_PHYSICAL_PORT_A_DATA           0x3F        // CR3F
#define I2C_PHYSICAL_PORT_B_STATUS         0x36        // CR36
#define I2C_PHYSICAL_PORT_B_DATA           0x37        // CR37
#define I2C_PHYSICAL_PORT_C_STATUS         0x50        // CR50
#define I2C_PHYSICAL_PORT_C_DATA           0x51        // CR51
#define I2C_PHYSICAL_PORT_UNUSED           0xFF        // Unused I2C Port

#define I2C_PORT_UNUSED                    0xFF        // Port is not used

// i2c_access field - Access methods for I2C Port
#define I2C_PORT_ACCESS_UNUSED             0x03        // No access method defined
#define I2C_PORT_ACCESS_CRTC_INDEXED       0x00        // Indexed IO at 3x4/3x5
#define I2C_PORT_ACCESS_DIRECT_IO          0x01        // Direct IO (not indexed)

// i2c_rsvd field
#define I2C_PORT_RSVD_UNUSED               0x3F        // Unused
                                    
#define I2C_PORT_IOPORT_HI_UNUSED          0xFF        // Unused


typedef struct {
    U008    WritePort;
    U008    ReadPort;
    U016    IoPortHi    :8;
    U016    I2cAccess   :2;
    U016    Reserved    :6;

} DACDCBI2CRECORD, *pDACDCBI2CRECORD;

//
//  Function prototypes for Video DAC.
//
//---------------------------------------------------------------------------

RM_STATUS initDac(PHWINFO);
RM_STATUS dacCreateObj(VOID *, PCLASSOBJECT, U032, POBJECT *, VOID*);
RM_STATUS dacDestroyObj(VOID *, POBJECT);
RM_STATUS dacSetDpmLevel(PHWINFO);
RM_STATUS dacLoadReg(U032, U032, U032);
RM_STATUS dacLoadWidthDepth(PHWINFO, U032);
RM_STATUS dacCalcPLL(PHWINFO);
U032      dacCalcMNP(PHWINFO, U032, U032, U032 *, U032 *, U032 *);
RM_STATUS dacLoadPClkVClkRatio(VOID);
RM_STATUS dacCalcPClkVClkRatio(VOID);
RM_STATUS dacGetDisplayInfo(PHWINFO, U032, U032 *, U032 *, U032 *, U032 *);
RM_STATUS dacProgramPClk(PHWINFO, U032, U032);
RM_STATUS dacProgramMClk(PHWINFO);
RM_STATUS dacProgramNVClk(PHWINFO);
RM_STATUS dacVBlank(PHWINFO);
RM_STATUS dacUpdateEmulatedCursor(VOID);
RM_STATUS dacHideEmulatedCursor(VOID);
VOID      dacEnableCursor(PHWINFO, U032);
VOID      dacDisableCursor(PHWINFO, U032);
VOID      dacEnableDac(PHWINFO, U032);
VOID      dacDisableDac(PHWINFO, U032);
VOID      dacDisableImage(PHWINFO, U032);
VOID      dacEnableImage(PHWINFO, U032);
VOID      dacDisableTV(PHWINFO, U032);
VOID      dacEnableTV(PHWINFO, U032);
RM_STATUS dacProgramCursorImage(PHWINFO, U032, U032, U032, U032, U032);
RM_STATUS dacProgramCursorPosition(PHWINFO, U032, U032, U032);
RM_STATUS dacProgramVideoStart(PHWINFO, U032, U032, U032);
RM_STATUS dacProgramLUT(PHWINFO, U032, U032*, U032);
RM_STATUS dacProgramScanRegion(PHWINFO, U032, U032, U032, U032);
RM_STATUS dacSetMonitorPosition(PHWINFO, U032, U032, U032, U032, U032);
VOID      dacGetMonitorDefaultPosition(PHWINFO, U032, U032 *, U032 *, U032 *, 
                                       U032 *, U032 *, U032 *, U032 *, U032 *);
VOID      dacSaveMonitorDefaultPosition(PHWINFO, U032);
VOID      dacGetDefaultTVPosition(PHWINFO, U032, U032, U008, U032 *);
VOID      dacSetTVPosition(PHWINFO, U032, U032 *);
RM_STATUS dacWriteDesktopPositionToRegistry(PHWINFO, U032, BOOL, U008 *, U032);
RM_STATUS dacReadDesktopPositionFromRegistry(PHWINFO, U032, BOOL, U008 *, U032 *);
RM_STATUS dacReadTVDesktopPositionFromRegistry(PHWINFO, U032, U008 *, U032 *);
RM_STATUS dacReadTVOutFromRegistry(PHWINFO, U032, U032 *);
RM_STATUS dacWriteTVOutToRegistry(PHWINFO, U032, U032);
RM_STATUS dacGetBiosDefaultTVType(PHWINFO, U032 *);

BOOL       dacMonitorConnectStatus(PHWINFO, U032);
RM_STATUS  dacGetFlatPanelInfo(PHWINFO, U032, U032 *, U032 *, U032 *, BOOL *, BOOL *, BOOL);
RM_STATUS  dacSetFlatPanelMode(PHWINFO, U032, PVIDEO_LUT_CURSOR_DAC_OBJECT, U032, BOOL);
U032       dacGetFlatPanelConfig(PHWINFO, U032);
BOOL       dacFlatPanelConnectStatus(PHWINFO pDev, U032);
RM_STATUS  dacGetSyncState(PHWINFO, U032 Head, U032 *pHsync, U032 *pVsync);
RM_STATUS  dacSetSyncState(PHWINFO, U032 Head, U032 Hsync, U032 Vsync);
RM_STATUS  dacGetFlatPanelBrightness(PHWINFO, U032 Head, U032 * Brightness, BOOL * ControllerIsOn);
RM_STATUS  dacSetFlatPanelBrightness(PHWINFO, U032 Head, U032   Brightness, U032 Frequency, U032 MaxPercent, U032 MinPercent,BOOL ControllerIsOn);

//housekeeping PWM functions, reduces large spread of reg-rds to 3 closely spaced spots
void dacZeroPWMController(PHWINFO);
void dacSetPWMController(PHWINFO);
void dacGetPWMController(PHWINFO);

//an abstraction of flat panel operations
BOOL dacIsFlatPanelOn(PHWINFO pDev,U032 Head);

//some directly associated routines for adjusting brightness
U032 GetTicksForFrequency(U032 Frequency);
U032 GetAbsoluteDifference(U032 value_a,U032 value_b);
U032 GetRequiredTickCount(U032 Frequency,U032 MaxPercent,U032 MinPercent,U032 BaseMultiplier);
U032 GetPortionOfTotalSizeBasedOnPercentage(U032 TotalSize,U032 Percentage);
//U032 GetPercentageofTotalSize(U032 TotalSize,U032 Portion);
//U032 DetermineMultiplierForCurrentPeriod(PHWINFO pDev,U032 ClockTicksTotal,U032 DutyCycle);
U032 DetermineFrequencyFromTickCount(U032 NumTicks);

U032       dacGetCRTC(PHWINFO, U032, U032); 
VOID       dacSetCRTC(PHWINFO, U032, U032, U032);
RM_STATUS  dacGetCRTCTiming(PHWINFO, U032, NV_CFGEX_CRTC_TIMING_PARAMS *);
RM_STATUS  dacSetCRTCTiming(PHWINFO, U032, NV_CFGEX_CRTC_TIMING_PARAMS *);
RM_STATUS  dacSetMode(PHWINFO, U032);
RM_STATUS  dacSetModeMulti(PHWINFO, PVIDEO_LUT_CURSOR_DAC_OBJECT);
RM_STATUS  dacSetupTVEncoder(PHWINFO, U032);
RM_STATUS  dacAdjustCRTCForTV(PHWINFO, U032);
RM_STATUS  dacAdjustCRTCForFlatPanel(PHWINFO, U032, PVIDEO_LUT_CURSOR_DAC_OBJECT);

U032       dacGetBiosDisplayType(PHWINFO, U032);
BOOL       dacIsPAL(VOID);
U008       ReadCRTCLock(PHWINFO, U032);

RM_STATUS  dacGetMonitorInfo(PHWINFO, U032, U032*);
VOID       dacSetCursorBlink(PHWINFO, U032, U008);
VOID       dacSetFan(PHWINFO, U008);
RM_STATUS  dacGetColorSaturationBoost(PHWINFO, U032, U008*);
RM_STATUS  dacSetColorSaturationBoost(PHWINFO, U032, U008);
BOOL       dacTVConnectStatus(PHWINFO, U032);
U008       dacTVReadModifyWrite(PHWINFO, U032, U008, U008, U008);
//RM_STATUS  IsMonitorDDC(PHWINFO, U032, U032, U008 *);
RM_STATUS dacReadBIOSI2CSettings(PHWINFO pDev);
VOID dacDetectEncoder(PHWINFO, U032);
BOOL dacVGAConnectStatus(PHWINFO, U032);
RM_STATUS  dacPowerOnMobilePanel(PHWINFO, U032);
RM_STATUS  dacPowerOffMobilePanel(PHWINFO, U032);
// EXPER:
BOOL dacIsNV5orBetter(PHWINFO pDev);
RM_STATUS i2cAccess(PHWINFO, U032, NVRM_I2C_ACCESS_CONTROL *);
VOID RestoreLock(PHWINFO, U032, U008);
VOID SeqWr(PHWINFO, U032, U008, U008);
U008 SeqRd(PHWINFO, U032, U008);
VOID EnableSeq(PHWINFO, U032);
U008 UnlockCRTC();
VOID RestoreCRTC(U008);
VOID AssocDDC(PHWINFO, U032);
VOID AssocTV(PHWINFO, U032);
VOID AssocVideoScalar(PHWINFO, U032);
VOID EnableHead(PHWINFO, U032);
VOID EnableMobileHotkeyHandling(PHWINFO pDev);
VOID DisableMobileHotkeyHandling(PHWINFO pDev);
V032 dacService(PHWINFO);
RM_STATUS dacParseDCBFromBIOS(PHWINFO);
VOID dacDevicesConnectStatus(PHWINFO, U032 *);
RM_STATUS dacFindDevicesConfiguration(PHWINFO, U032, U032 *, U032, U032);
void RmProperClockPdivProgrammer(PHWINFO pDev,U032 ClockAddress,U032 NewValue);

#endif // _DAC_H_
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Microsoft Xbox (1.00.4400) [April 2002] [src]\private\ntos\video\nvx\drivers\resman\kernel\inc\devinit.h ===
/***************************************************************************\
|*                                                                           *|
|*        Copyright (c) 1993-1999 NVIDIA, Corp.  All rights reserved.        *|
|*                                                                           *|
|*     NOTICE TO USER:   The source code  is copyrighted under  U.S. and     *|
|*     international laws.   NVIDIA, Corp. of Sunnyvale, California owns     *|
|*     the copyright  and as design patents  pending  on the design  and     *|
|*     interface  of the NV chips.   Users and possessors of this source     *|
|*     code are hereby granted  a nonexclusive,  royalty-free  copyright     *|
|*     and  design  patent license  to use this code  in individual  and     *|
|*     commercial software.                                                  *|
|*                                                                           *|
|*     Any use of this source code must include,  in the user documenta-     *|
|*     tion and  internal comments to the code,  notices to the end user     *|
|*     as follows:                                                           *|
|*                                                                           *|
|*     Copyright (c) 1993-1997  NVIDIA, Corp.    NVIDIA  design  patents     *|
|*     pending in the U.S. and foreign countries.                            *|
|*                                                                           *|
|*     NVIDIA, CORP.  MAKES  NO REPRESENTATION ABOUT  THE SUITABILITY OF     *|
|*     THIS SOURCE CODE FOR ANY PURPOSE.  IT IS PROVIDED "AS IS" WITHOUT     *|
|*     EXPRESS OR IMPLIED WARRANTY OF ANY KIND.  NVIDIA, CORP. DISCLAIMS     *|
|*     ALL WARRANTIES  WITH REGARD  TO THIS SOURCE CODE,  INCLUDING  ALL     *|
|*     IMPLIED   WARRANTIES  OF  MERCHANTABILITY  AND   FITNESS   FOR  A     *|
|*     PARTICULAR  PURPOSE.   IN NO EVENT SHALL NVIDIA, CORP.  BE LIABLE     *|
|*     FOR ANY SPECIAL, INDIRECT, INCIDENTAL,  OR CONSEQUENTIAL DAMAGES,     *|
|*     OR ANY DAMAGES  WHATSOEVER  RESULTING  FROM LOSS OF USE,  DATA OR     *|
|*     PROFITS,  WHETHER IN AN ACTION  OF CONTRACT,  NEGLIGENCE OR OTHER     *|
|*     TORTIOUS ACTION, ARISING OUT  OF OR IN CONNECTION WITH THE USE OR     *|
|*     PERFORMANCE OF THIS SOURCE CODE.                                      *|
|*                                                                           *|
 \***************************************************************************/

/**************************************************************************************************************
*
*   Header: devinit.h
*
*   Description:
*       Definitions for devinit.h.
*
*   Revision History:
*       Original -- 2/99 Jeff Westerinen
*
**************************************************************************************************************/

#include <bios.h>

// init table definitions
extern U032 Nv04_bmp_GenInitTbl[];
extern U032 Nv05_bmp_GenInitTbl[];
extern U032 Nv05Pro_bmp_GenInitTbl[];
extern bmpMemInitData Nv05_bmp_MemInitTbl[];

extern U032 Nv10_SDR_Sequence_Table[];
extern U032 Nv10_DDR_Sequence_Table[];
extern MEM_INIT_TABLE_NV10 Nv10_bmp_MemInitTbl;
extern U032 Nv10_bmp_GenInitTbl[];

// video RAM type enumerations
enum 
{
    DEVINIT_NORAM, 
    DEVINIT_SDRAM, 
    DEVINIT_SGRAM
};

// internal TMDS types
enum
{
    TMDSIT_TMDS_SINGLE_A,
    TMDSIT_TMDS_SINGLE_B,
    TMDSIT_TMDS_DUAL,
    TMDSIT_LVDS_SINGLE_A,
    TMDSIT_LVDS_SINGLE_B,
    TMDSIT_LVDS_DUAL,
    TMDSIT_OFF_SINGLE_A,
    TMDSIT_OFF_SINGLE_B
};

// table to hold copy of our devinit tables
typedef struct {
    U032 memInitTable[(MEM_INIT_STRAP_MAX+1) * (MEM_INIT_VALS_MAX_BYTE_SIZE / 4)];
    U032 SDRSeqTable[MEM_INIT_SEQ_TABLE_MAX];
    U032 DDRSeqTable[MEM_INIT_SEQ_TABLE_MAX];
    U032 *genInitCode;
    U008 *genInitData;
    U032 *extraInitCode;
    U008 *extraInitData;
 } devinit_tables_t;

#define DEVINIT_STACK_MAX 20
typedef struct
{
    U032 body[DEVINIT_STACK_MAX];
    U032 sp;
} DEVINIT_STACK, *PDEVINIT_STACK;

// tables from bios we extract (and convert) up front
typedef struct {
        MACRO_INDEX_ENTRY       macroIndexTable[256];
        MACRO_ENTRY             macroTable[256];
        CONDITION_ENTRY         conditionTable[256]; 
        IO_CONDITION_ENTRY      ioConditionTable[256];
        IO_FLAG_CONDITION_ENTRY ioFlagConditionTable[256];
        FUNCTION_TABLE_ENTRY    functionTable[256];
} BIOS_BIP3_TABLES;

typedef struct
{
    BOOL                    conditionFlag;
    DEVINIT_STACK           loopStack;
    BOOL                    doJump;
    U032                    jumpIndex;

    // offsets with the bios
    U032                    scriptTableOffset;
    U032                    macroIndexTableOffset;
    U032                    macroTableOffset;
    U032                    conditionTableOffset;
    U032                    ioConditionTableOffset;
    U032                    ioFlagConditionTableOffset;
    U032                    functionTableOffset;
    U032                    TMDSSingleAOffset;
    U032                    TMDSSingleBOffset;
    U032                    TMDSDualOffset;
    U032                    LVDSSingleAOffset;
    U032                    LVDSSingleBOffset;
    U032                    LVDSDualOffset;
    U032                    OffSingleAOffset;
    U032                    OffSingleBOffset;

    BIOS_BIP3_TABLES       *tables;

} EXECUTION_CONTEXT, *PEXECUTION_CONTEXT;


// prototypes
RM_STATUS   DevinitInitializeDevice     (PHWINFO, PHWREG, BOOL*);
RM_STATUS   DevinitProcessStaticTables  (PHWINFO);
RM_STATUS   DevinitProcessBip2          (PHWINFO, U032, BMP_Control_Block, BOOL*);
RM_STATUS   DevinitGetBMPControlBlock   (PHWINFO, BMP_Control_Block *, U032 *);
RM_STATUS   DevinitGetInitTableInfo     (PHWINFO, U032, PBMP_Control_Block, U032*, U032*, U032*, U032*, U032*, U032*);
RM_STATUS   DevinitInitDataToCode       (U032[], U008[]);
RM_STATUS   InitNV                      (PHWINFO, U032[], VOID*, U032[], U032[]);
U008        DevinitFetchByte            (U032[], U032*);
U016        DevinitFetchWord            (U032[], U032*);
U032        DevinitFetchDword           (U032[], U032*);
RM_STATUS   DevinitProcessBip3          (PHWINFO);
RM_STATUS   DevinitProcessBip3InternalTMDS (PHWINFO,U032,U032);
RM_STATUS   DevinitProcessBip3InternalTMDSTable (PHWINFO, PEXECUTION_CONTEXT, U032, U032);
RM_STATUS   DevinitGetBIP3TableOffsets  (PHWINFO, PEXECUTION_CONTEXT);
RM_STATUS   DevinitReadBIP3Tables       (PHWINFO, PEXECUTION_CONTEXT);
VOID        DevinitCleanupBIP3Tables    (PHWINFO, PEXECUTION_CONTEXT);
RM_STATUS   DevinitInterpretBIP3Script  (PHWINFO, PEXECUTION_CONTEXT, U032);
U008        DevinitFetchInstruction     (PHWINFO, U032, VOID*, U032*, U032*);
RM_STATUS   DevinitGetMinMaxVCOValues   (PHWINFO, U032*, U032*);
RM_STATUS   init_NV                     (PHWINFO, U032, U032, U032, BOOL);
RM_STATUS   init_PLL_Values             (PHWINFO, U032, U032, BOOL);
RM_STATUS   init_TIME_Delay             (PHWINFO, U032);
RM_STATUS   init_IO_Write               (PHWINFO, U016, U008, U008, BOOL);
RM_STATUS   init_INDEX_IO_Write         (PHWINFO, U032, U032, U032, U032, BOOL);
RM_STATUS   init_MEM_RESTRICT_SCRIPT    (PHWINFO, U032, U032, BOOL*);
RM_STATUS   init_STRAP_RESTRICT_SCRIPT  (PHWINFO, U032, U032, BOOL*);
RM_STATUS   init_CONFIGURE_Clocks       (PHWINFO, VOID*);
RM_STATUS   init_CONFIGURE_Memory       (PHWINFO, VOID*, U032[], U032[]);
RM_STATUS   init_CONFIGURE_PreInit      (PHWINFO);
RM_STATUS   init_COMPUTE_Memory         (PHWINFO);
RM_STATUS   init_Reset_Chip             (PHWINFO, U032, U032, U032);
RM_STATUS   init_IO                     (PHWINFO, U032, U032, U032, BOOL);
RM_STATUS   init_Condition              (PHWINFO, PEXECUTION_CONTEXT, U032, BOOL*);
RM_STATUS   init_IoCondition            (PHWINFO, PEXECUTION_CONTEXT, U032, BOOL*);
RM_STATUS   init_IoFlagCondition        (PHWINFO, PEXECUTION_CONTEXT, U032, BOOL*);
RM_STATUS   init_RestrictProg           (PHWINFO, PEXECUTION_CONTEXT, U032, U032, U032, U032, U032, U032, BOOL);
RM_STATUS   init_IoRestrictProg         (PHWINFO, PEXECUTION_CONTEXT, U032, U032, U032, U032, U032, U032, U032, BOOL);
RM_STATUS   init_IoRestrictPll          (PHWINFO, PEXECUTION_CONTEXT, U032, U032, U032, U032, U032, U032, U032, U032, BOOL);
RM_STATUS   init_IndexAddressLatched    (PHWINFO, U032, U032 ,U032, U032, U032, U032, BOOL);
RM_STATUS   init_Sub                    (PHWINFO, PEXECUTION_CONTEXT, U032, BOOL);
RM_STATUS   init_Macro                  (PHWINFO, PEXECUTION_CONTEXT, U032, BOOL);
RM_STATUS   init_ZM_IO                  (PHWINFO, U032, U032, BOOL);
RM_STATUS   init_Copy                   (PHWINFO, PEXECUTION_CONTEXT, U032, S008, U032, U032, U032, U032, BOOL);
RM_STATUS   init_Repeat                 (PHWINFO, PEXECUTION_CONTEXT, U032, U032);
RM_STATUS   init_EndRepeat              (PHWINFO, PEXECUTION_CONTEXT, U032*);
RM_STATUS   init_Function               (PHWINFO, PEXECUTION_CONTEXT, U032);
VOID        DevinitMeminitFormat        (PHWINFO, char **, int *);
RM_STATUS   DevinitReadPort             (PHWINFO, U032, U032, U008*);
RM_STATUS   DevinitWritePort            (PHWINFO, U032, U032, U032);
RM_STATUS   DevinitPortToPrivReg        (U032, U032*);
VOID        DevinitStackPush            (PDEVINIT_STACK,  U032);
U032        DevinitStackPop             (PDEVINIT_STACK);
U032        DevinitStackTop             (PDEVINIT_STACK);
RM_STATUS   DevinitShadowBios           (PHWINFO, PHWREG);
RM_STATUS   Nv04MemResizeMemory         (PHWINFO);
RM_STATUS   Nv04MemResizeSdram          (PHWINFO);
RM_STATUS   Nv04MemResizeSgram          (PHWINFO);
VOID        Nv04MemLatchMemConfig       (PHWINFO);
RM_STATUS   Nv05MemResizeMemory         (PHWINFO);
VOID        Nv05MemLatchMemConfig       (PHWINFO);
RM_STATUS   Nv10MemConfigureClocks      (PHWINFO, MEM_INIT_TABLE_NV10);
RM_STATUS   Nv10MemConfigureMemory      (PHWINFO, MEM_INIT_TABLE_NV10, U032[], U032[]);
RM_STATUS   Nv10MemChipPreInit          (PHWINFO);
RM_STATUS   Nv10MemComputeMemory        (PHWINFO);
RM_STATUS   Nv15MemConfigureClocks      (PHWINFO, MEM_INIT_TABLE_NV15);
RM_STATUS   Nv15MemConfigureMemory      (PHWINFO, MEM_INIT_TABLE_NV15, U032[], U032[]);
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Microsoft Xbox (1.00.4400) [April 2002] [src]\private\ntos\video\nvx\drivers\resman\kernel\inc\edid.h ===
/***************************************************************************\
|*                                                                           *|
|*        Copyright (c) 1993-1997 NVIDIA, Corp.  All rights reserved.        *|
|*                                                                           *|
|*     NOTICE TO USER:   The source code  is copyrighted under  U.S. and     *|
|*     international laws.   NVIDIA, Corp. of Sunnyvale, California owns     *|
|*     the copyright  and as design patents  pending  on the design  and     *|
|*     interface  of the NV chips.   Users and possessors of this source     *|
|*     code are hereby granted  a nonexclusive,  royalty-free  copyright     *|
|*     and  design  patent license  to use this code  in individual  and     *|
|*     commercial software.                                                  *|
|*                                                                           *|
|*     Any use of this source code must include,  in the user documenta-     *|
|*     tion and  internal comments to the code,  notices to the end user     *|
|*     as follows:                                                           *|
|*                                                                           *|
|*     Copyright (c) 1993-1997  NVIDIA, Corp.    NVIDIA  design  patents     *|
|*     pending in the U.S. and foreign countries.                            *|
|*                                                                           *|
|*     NVIDIA, CORP.  MAKES  NO REPRESENTATION ABOUT  THE SUITABILITY OF     *|
|*     THIS SOURCE CODE FOR ANY PURPOSE.  IT IS PROVIDED "AS IS" WITHOUT     *|
|*     EXPRESS OR IMPLIED WARRANTY OF ANY KIND.  NVIDIA, CORP. DISCLAIMS     *|
|*     ALL WARRANTIES  WITH REGARD  TO THIS SOURCE CODE,  INCLUDING  ALL     *|
|*     IMPLIED   WARRANTIES  OF  MERCHANTABILITY  AND   FITNESS   FOR  A     *|
|*     PARTICULAR  PURPOSE.   IN NO EVENT SHALL NVIDIA, CORP.  BE LIABLE     *|
|*     FOR ANY SPECIAL, INDIRECT, INCIDENTAL,  OR CONSEQUENTIAL DAMAGES,     *|
|*     OR ANY DAMAGES  WHATSOEVER  RESULTING  FROM LOSS OF USE,  DATA OR     *|
|*     PROFITS,  WHETHER IN AN ACTION  OF CONTRACT,  NEGLIGENCE OR OTHER     *|
|*     TORTIOUS ACTION, ARISING OUT  OF OR IN CONNECTION WITH THE USE OR     *|
|*     PERFORMANCE OF THIS SOURCE CODE.                                      *|
|*                                                                           *|
 \***************************************************************************/

/***************************** EDID includes *******************************\
*                                                                           *
* Module: EDID.H                                                            *
*   This module contains structure and prototype definitions used in the    *
*   EDID utility functions.                                                 *
*                                                                           *
*****************************************************************************
*                                                                           *
* History:                                                                  *
*                                                                           *
\***************************************************************************/
#ifndef _EDID_H_
#define _EDID_H_

RM_STATUS StopDDC1(PHWINFO, U032, U032);
RM_STATUS IsMonitorDDC(PHWINFO, U032, U032, U008 *);
RM_STATUS edidReadDevEDID(PHWINFO, U032, U008 *);
BOOL edidLogicalEDIDIsValid(U008 **, U032 *, U032 *);
RM_STATUS EDIDRead(PHWINFO, U032, U032);
RM_STATUS EDIDGetMaxRefreshRate(PHWINFO, U032, U032, U032 *);
RM_STATUS EDIDIsMonitorGTF (PHWINFO, BOOL *);
RM_STATUS ReadVDIF(PHWINFO, U032, U032, U008 *, U008, U008);
RM_STATUS EDIDCopy(PHWINFO, U008 *, U032 *, U032);
RM_STATUS ParseEDID2(PHWINFO, U032);
RM_STATUS ParseEDID12(PHWINFO, U032);
RM_STATUS ParseEDID11(PHWINFO, U032);
RM_STATUS fpParseEDID(PHWINFO, U032);
U032 edidParseDetailedTimingBlock(PHWINFO, U008, PDACFPTIMING, U032);
U032 edidParseDetailed1(PHWINFO, U008, PDACFPTIMING, U032);
U032 edidParseDetailed2(PHWINFO, U008, PDACFPTIMING, U032);
U032 edidGetVersion(PHWINFO, U032);
BOOL edidIsAnalogDisplay(PHWINFO, U032); 
BOOL edidIsDigitalDisplay(PHWINFO, U032); 
RM_STATUS EDIDDetect(PHWINFO, U032, U032);
RM_STATUS edidConstructMobileInfo(PHWINFO, U032, U008 *);
U032 getI2CPort(PHWINFO, U032, U032 );
U032 edidGetDDCCaps(PHWINFO);

#define DDC_RETRIES     3
#define NUM_DET_TIM		4

// DDC device address
#define DDC_CRT_ADR1 0x50
#define DDC_CRT_ADR2 0x51
#define DDC_CRT_ADR3 0x53

// EDID versions
#define EDID_VERSION_10	0x10
#define EDID_VERSION_11	0x11
#define EDID_VERSION_12	0x12
#define EDID_VERSION_13	0x13
#define EDID_VERSION_20	0x20
#define EDID_VERSION_14	0x14    // non-existant, but we should work if this gets added

// Flags byte, sync polarities (bits 2,1)
#define VSYNC_POS	1<<2
#define VSYNC_NEG	0
#define HSYNC_POS	1<<1
#define HSYNC_NEG	0

// EDID Version 1 header defines.
#define EDID_V1_SIZE 128
#define EDID_V1_VENDOR_ID_INDEX 0x08
#define EDID_V1_VERSION_NUMBER_INDEX  0x12
#define EDID_V1_REVISION_NUMBER_INDEX 0x13
#define EDID_V1_VIDEO_INPUT_DEF_INDEX 0x14
#define EDID_V1_FEATURE_SUPPORT_INDEX        0x18
#define EDID_V1_ESTABLISHED_TIMING_1_INDEX   0x23
#define EDID_V1_ESTABLISHED_TIMING_2_INDEX   0x24
#define EDID_V1_ESTABLISHED_TIMING_3_INDEX   0x25
#define EDID_V1_STANDARD_TIMING_1_INDEX      0x26
#define EDID_V1_NUM_STANDARD_TIMINGS        0x36-0x26
#define EDID_ESTABLISHED_TIMING_640x480_ANY 0x38
#define EDID_ESTABLISHED_TIMING_640x480_60  0x20
#define EDID_ESTABLISHED_TIMING_640x480_67  0x10
#define EDID_ESTABLISHED_TIMING_640x480_72  0x08
#define EDID_ESTABLISHED_TIMING_640x480_75  0x04
#define EDID_ESTABLISHED_TIMING_800x600_ANY 0xC0
#define EDID_ESTABLISHED_TIMING_800x600_56  0x02
#define EDID_ESTABLISHED_TIMING_800x600_60  0x01
#define EDID_ESTABLISHED_TIMING_800x600_72  0x80
#define EDID_ESTABLISHED_TIMING_800x600_75  0x40
#define EDID_ESTABLISHED_TIMING_1024x768_ANY 0x1E
#define EDID_ESTABLISHED_TIMING_1024x768_87  0x10
#define EDID_ESTABLISHED_TIMING_1024x768_60  0x08
#define EDID_ESTABLISHED_TIMING_1024x768_70  0x04
#define EDID_ESTABLISHED_TIMING_1024x768_75  0x02
#define EDID_ESTABLISHED_TIMING_1280x1024_75  0x01

// Standard timings start at bytes index 0x26. Each standard timing is 2 bytes.
// There are 8 standard timings entries.
#define EDID_V1_STANDARD_TIMINGS_START_INDEX 0x26

// Detailed timing section start at index 0x36. Each entry is 18 bytes.
// There are 4 detailed timing entries.
#define EDID_V1_DETAILED_TIMINGS_START_INDEX 0x36
#define EDID_V1_DETAILED_TIMINGS_SIZE 18


// EDID Version 2 header defines.
#define EDID_V2_SIZE 256
#define EDID_V2_VERSION_NUMBER_INDEX  0x0
#define EDID_V2_DISPLAY_TECHNOLOGY_INDEX 0x4f
#define DISPLAY_TECHNOLOGY_TYPE_MASK  0xf0
#define EDID_V2_GTF_SUPPORT_INDEX     0x7d
#define EDID_V2_TIMING_MAP1_INDEX     0x7e  // map of timing info
#define EDID_V2_TIMING_MAP2_INDEX     0x7f
#define EDID_V2_TIMING_SECTION_START_INDEX 0x80  // offset 80: start of timing info
#define EDID_V2_LUM_TABLE_EXIST		  0x20	// map bit 5
#define TRIPLE_LUM_ENTRIES			  0x80	// offset 80 bit 7: lum table white (x1) or RGB (x3)
#define NUM_LUM_ENTRIES				  0x1f	// size of lum table (x1 or x3)
#define	EDID_V2_FREQ_RANGES			  0x1c
#define EDID_V2_FREQ_RANGE_SHIFT	  0x02
#define EDID_V2_DETAILED_RANGE_LIMITS 0x03
#define EDID_V2_TIMING_CODES		  0xf8
#define EDID_V2_TIMING_CODES_SHIFT	  0x03
#define EDID_V2_DETAILED_TIMINGS	  0x07
#endif // _EDID_H_
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Microsoft Xbox (1.00.4400) [April 2002] [src]\private\ntos\video\nvx\drivers\resman\kernel\inc\class.h ===
#ifndef _CLASS_H_
#define _CLASS_H_
 /***************************************************************************\
|*                                                                           *|
|*       Copyright 1993-2000 NVIDIA, Corporation.  All rights reserved.      *|
|*                                                                           *|
|*     NOTICE TO USER:   The source code  is copyrighted under  U.S. and     *|
|*     international laws.  Users and possessors of this source code are     *|
|*     hereby granted a nonexclusive,  royalty-free copyright license to     *|
|*     use this code in individual and commercial software.                  *|
|*                                                                           *|
|*     Any use of this source code must include,  in the user documenta-     *|
|*     tion and  internal comments to the code,  notices to the end user     *|
|*     as follows:                                                           *|
|*                                                                           *|
|*       Copyright 1993-2000 NVIDIA, Corporation.  All rights reserved.      *|
|*                                                                           *|
|*     NVIDIA, CORPORATION MAKES NO REPRESENTATION ABOUT THE SUITABILITY     *|
|*     OF  THIS SOURCE  CODE  FOR ANY PURPOSE.  IT IS  PROVIDED  "AS IS"     *|
|*     WITHOUT EXPRESS OR IMPLIED WARRANTY OF ANY KIND.  NVIDIA, CORPOR-     *|
|*     ATION DISCLAIMS ALL WARRANTIES  WITH REGARD  TO THIS SOURCE CODE,     *|
|*     INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY, NONINFRINGE-     *|
|*     MENT,  AND FITNESS  FOR A PARTICULAR PURPOSE.   IN NO EVENT SHALL     *|
|*     NVIDIA, CORPORATION  BE LIABLE FOR ANY SPECIAL,  INDIRECT,  INCI-     *|
|*     DENTAL, OR CONSEQUENTIAL DAMAGES,  OR ANY DAMAGES  WHATSOEVER RE-     *|
|*     SULTING FROM LOSS OF USE,  DATA OR PROFITS,  WHETHER IN AN ACTION     *|
|*     OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,  ARISING OUT OF     *|
|*     OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOURCE CODE.     *|
|*                                                                           *|
|*     U.S. Government  End  Users.   This source code  is a "commercial     *|
|*     item,"  as that  term is  defined at  48 C.F.R. 2.101 (OCT 1995),     *|
|*     consisting  of "commercial  computer  software"  and  "commercial     *|
|*     computer  software  documentation,"  as such  terms  are  used in     *|
|*     48 C.F.R. 12.212 (SEPT 1995)  and is provided to the U.S. Govern-     *|
|*     ment only as  a commercial end item.   Consistent with  48 C.F.R.     *|
|*     12.212 and  48 C.F.R. 227.7202-1 through  227.7202-4 (JUNE 1995),     *|
|*     all U.S. Government End Users  acquire the source code  with only     *|
|*     those rights set forth herein.                                        *|
|*                                                                           *|
 \***************************************************************************/
/****************************** Object Manager *****************************\
*                                                                           *
* Module: CLASS.H                                                           *
*       User Object management.                                             *
*                                                                           *
*****************************************************************************
*                                                                           *
* History:                                                                  *
*                                                                           *
\***************************************************************************/

//---------------------------------------------------------------------------
//
//  Includes.
//
//---------------------------------------------------------------------------

#ifndef _BTREE_H_
#include <btree.h>
#endif // _BTREE_H_

//---------------------------------------------------------------------------
//
//  Defines.
//
//---------------------------------------------------------------------------

#define RESERVED_NAMES                  4096
#define MAX_OS_NAME_LENGTH              80

//---------------------------------------------------------------------------
//
//  Types and structures.
//
//---------------------------------------------------------------------------

//
// Forward declarations of structures.
//
typedef struct _def_method METHOD, *PMETHOD;
typedef struct _def_object OBJECT, *POBJECT;
typedef struct _def_class  CLASS,  *PCLASS;

//
// Methods.
//
typedef RM_STATUS (*METHODPROC)(PHWINFO, POBJECT, PMETHOD, U032, V032);
struct _def_method
{
    METHODPROC Proc;
    U032       Low;
    U032       High;
};

//
// Objects.
//
typedef struct _def_class_object        CLASSOBJECT, *PCLASSOBJECT;
typedef struct _def_dma_object          DMAOBJECT,   *PDMAOBJECT;
typedef struct _def_patch_object        PATCHOBJECT, *PPATCHOBJECT;
typedef struct _def_context_time_object TIMEOBJECT,  *PTIMEOBJECT;
typedef struct _def_event_notification  EVENTNOTIFICATION, *PEVENTNOTIFICATION;
typedef struct _def_engine_info         ENGINEINFO, *PENGINEINFO;
  
struct _def_object
{
    U032                Name;
    U032                ChID;
    PCLASS              Class;
    U032                Subchannel;
    NODE                Node;
    POBJECT             Next;
    PDMAOBJECT          NotifyXlate;
    U032                NotifyAction;
    U032                NotifyTrigger;
    PEVENTNOTIFICATION  NotifyEvent;
    PCLASS              ThisClass;   //KJK I don't like this!!
};
//
// Patch structure.
//
struct _def_patch_object
{
    OBJECT  Base;
    POBJECT Destination;
    POBJECT Source;
};
//
// NV_CLASS structure and create/destroy function prototypes.
//
typedef RM_STATUS (*CREATEOBJECTPROC)(PHWINFO, PCLASSOBJECT, U032, POBJECT *);
typedef RM_STATUS (*DELETEOBJECTPROC)(PHWINFO, POBJECT);

struct _def_class_create
{
    U032                Class;
    CREATEOBJECTPROC    Function;
};

//
// Classes.
//
typedef struct _def_class_methods
{
    U032                Type;
    PMETHOD             Method;
    U032                MethodMax;
} CLASSMETHODS, *PCLASSMETHODS;

struct _def_class
{
    U032                Type;
    PMETHOD             Method;
    U032                MethodMax;
    //U032                StateSize;
    PCLASSDESCRIPTOR    ClassDecl;
    PCLASSDESCRIPTOR    ClassInstMalloc;
    PENGINEDESCRIPTOR   EngineDecl;
    PENGINEINFO         EngineInfo;
};

struct _def_class_object
{
    OBJECT     Base;
};

//===========================================================================
//
//                                Class Defines.
//
//===========================================================================

#define NV_CONTEXT_DMA_TO_MEM               3
#define NV_NULL_OBJECT                      0

//---------------------------------------------------------------------------
//
//  Method prototypes.
//
//---------------------------------------------------------------------------

RM_STATUS mthdNoOperation(PHWINFO, POBJECT, PMETHOD, U032, U032);

RM_STATUS mthdValidate(PHWINFO, POBJECT, PMETHOD, U032, V032);
RM_STATUS mthdSetNotifyCtxDma(PHWINFO, POBJECT, PMETHOD, U032, V032);
RM_STATUS mthdSetNotify(PHWINFO, POBJECT, PMETHOD, U032, V032);
RM_STATUS mthdCreateLegacy(PHWINFO, POBJECT, PMETHOD, U032, V032);
RM_STATUS mthdCreate(PHWINFO, POBJECT, PMETHOD, U032, V032, VOID*);
RM_STATUS mthdDestroy(PHWINFO, POBJECT, PMETHOD, U032, V032);
RM_STATUS mthdSetNameCtxDma(PHWINFO, POBJECT, PMETHOD, U032, V032);
RM_STATUS mthdSetNameStart(PHWINFO, POBJECT, PMETHOD, U032, V032);
RM_STATUS mthdSetNameLength(PHWINFO, POBJECT, PMETHOD, U032, V032);
RM_STATUS mthdSetEnumerateCtxDma(PHWINFO, POBJECT, PMETHOD, U032, V032);
RM_STATUS mthdSetEnumerateStart(PHWINFO, POBJECT, PMETHOD, U032, V032);
RM_STATUS mthdSetEnumerateLength(PHWINFO, POBJECT, PMETHOD, U032, V032);
RM_STATUS mthdEnumerate(PHWINFO, POBJECT, PMETHOD, U032, V032);
RM_STATUS mthdSetDmaSpecifier(PHWINFO, POBJECT, PMETHOD, U032, V032);
RM_STATUS mthdSetTime(PHWINFO, POBJECT, PMETHOD, U032, V032);
RM_STATUS mthdSetAlarmTime(PHWINFO, POBJECT, PMETHOD, U032, V032);
RM_STATUS mthdSetAlarmTimeRelative(PHWINFO, POBJECT, PMETHOD, U032, V032);
RM_STATUS mthdSetAlarmNotifyCtxDma(PHWINFO, POBJECT, PMETHOD, U032, V032);
RM_STATUS mthdSetAlarmNotify(PHWINFO, POBJECT, PMETHOD, U032, V032);
RM_STATUS mthdTmrStopTransfer(PHWINFO, POBJECT, PMETHOD, U032, V032);
RM_STATUS mthdSetCtxDma(PHWINFO, POBJECT, PMETHOD, U032, V032);
RM_STATUS mthdGetChipToken(PHWINFO, POBJECT, PMETHOD, U032, V032);
RM_STATUS mthdSetOrdinal(PHWINFO, POBJECT, PMETHOD, U032, V032);
RM_STATUS mthdSetSwitchNotifyCtxDma(PHWINFO, POBJECT, PMETHOD, U032, V032);
RM_STATUS mthdSetSwitchNotify(PHWINFO, POBJECT, PMETHOD, U032, V032);
RM_STATUS mthdSetGamePortOutput(PHWINFO, POBJECT, PMETHOD, U032, V032);
RM_STATUS mthdSetGamePortInput(PHWINFO, POBJECT, PMETHOD, U032, V032);
RM_STATUS mthdSetGamePortFormat(PHWINFO, POBJECT, PMETHOD, U032, V032);
RM_STATUS mthdSetStartTime(PHWINFO, POBJECT, PMETHOD, U032, V032);
RM_STATUS mthdSetStartCtxTime(PHWINFO, POBJECT, PMETHOD, U032, V032);
RM_STATUS mthdSetSampleRate(PHWINFO, POBJECT, PMETHOD, U032, V032);
RM_STATUS mthdSetNumberChannels(PHWINFO, POBJECT, PMETHOD, U032, V032);
RM_STATUS mthdSetBufferCtxDma(PHWINFO, POBJECT, PMETHOD, U032, V032);
RM_STATUS mthdSetBufferNotifyCtxDma(PHWINFO, POBJECT, PMETHOD, U032, V032);
RM_STATUS mthdSetBufferStart(PHWINFO, POBJECT, PMETHOD, U032, V032);
RM_STATUS mthdSetBufferLength(PHWINFO, POBJECT, PMETHOD, U032, V032);
RM_STATUS mthdSetBufferNotify(PHWINFO, POBJECT, PMETHOD, U032, V032);
RM_STATUS mthdSetBufferNotifyCount(PHWINFO, POBJECT, PMETHOD, U032, V032);
RM_STATUS mthdSetBufferPosNotifyCtxDma(PHWINFO, POBJECT, PMETHOD, U032, V032);
RM_STATUS mthdSetBufferPosNotify(PHWINFO, POBJECT, PMETHOD, U032, V032);
RM_STATUS mthdSetBufferInCtxDma(PHWINFO, POBJECT, PMETHOD, U032, V032);
RM_STATUS mthdSetBufferOutCtxDma(PHWINFO, POBJECT, PMETHOD, U032, V032);
RM_STATUS mthdSetBufferInStart(PHWINFO, POBJECT, PMETHOD, U032, V032);
RM_STATUS mthdSetBufferOutStart(PHWINFO, POBJECT, PMETHOD, U032, V032);
RM_STATUS mthdSetBufferMemNotifyCtxDma(PHWINFO, POBJECT, PMETHOD, U032, V032);
RM_STATUS mthdSetBufferMemLength(PHWINFO, POBJECT, PMETHOD, U032, V032);
RM_STATUS mthdSetBufferMemNotify(PHWINFO, POBJECT, PMETHOD, U032, V032);
RM_STATUS mthdSetVideoInput(PHWINFO, POBJECT, PMETHOD, U032, V032);
RM_STATUS mthdSetVideoOutput(PHWINFO, POBJECT, PMETHOD, U032, V032);
RM_STATUS mthdSetCtxOrdinal(PHWINFO, POBJECT, PMETHOD, U032, V032);
RM_STATUS mthdSetColormapCtxDma(PHWINFO, POBJECT, PMETHOD, U032, V032);
RM_STATUS mthdSetColormapFormat(PHWINFO, POBJECT, PMETHOD, U032, V032);
RM_STATUS mthdSetColormapStart(PHWINFO, POBJECT, PMETHOD, U032, V032);
RM_STATUS mthdSetColormapLength(PHWINFO, POBJECT, PMETHOD, U032, V032);
RM_STATUS mthdColormapDirtyStart(PHWINFO, POBJECT, PMETHOD, U032, V032);
RM_STATUS mthdColormapDirtyLength(PHWINFO, POBJECT, PMETHOD, U032, V032);
RM_STATUS mthdSetImageOutput(PHWINFO, POBJECT, PMETHOD, U032, V032);
RM_STATUS mthdSetImageInput(PHWINFO, POBJECT, PMETHOD, U032, V032);
RM_STATUS mthdSetBetaInput(PHWINFO, POBJECT, PMETHOD, U032, V032);
RM_STATUS mthdSetBetaOutput(PHWINFO, POBJECT, PMETHOD, U032, V032);
RM_STATUS mthdSetRopInput(PHWINFO, POBJECT, PMETHOD, U032, V032);
RM_STATUS mthdSetRopOutput(PHWINFO, POBJECT, PMETHOD, U032, V032);
RM_STATUS mthdSetColorFormat(PHWINFO, POBJECT, PMETHOD, U032, V032);
RM_STATUS mthdSetMonochromeFormat(PHWINFO, POBJECT, PMETHOD, U032, V032);
RM_STATUS mthdSetGraphicsCtxDma(PHWINFO, POBJECT, PMETHOD, U032, V032);
RM_STATUS mthdSetAudioInput(PHWINFO, POBJECT, PMETHOD, U032, V032);
RM_STATUS mthdSetAudioFormat(PHWINFO, POBJECT, PMETHOD, U032, V032);
RM_STATUS mthdSetSampleRateAdjust(PHWINFO, POBJECT, PMETHOD, U032, V032);
RM_STATUS mthdSetStopLoopingCtxTime(PHWINFO, POBJECT, PMETHOD, U032, V032);
RM_STATUS mthdSetPortamento(PHWINFO, POBJECT, PMETHOD, U032, V032);
RM_STATUS mthdSetVibratoDepth(PHWINFO, POBJECT, PMETHOD, U032, V032);
RM_STATUS mthdSetVibratoFrequency(PHWINFO, POBJECT, PMETHOD, U032, V032);
RM_STATUS mthdSetVibratoAttackCtxTime(PHWINFO, POBJECT, PMETHOD, U032, V032);
RM_STATUS mthdSetVibratoAttack(PHWINFO, POBJECT, PMETHOD, U032, V032);
RM_STATUS mthdSetDiscardPriority(PHWINFO, POBJECT, PMETHOD, U032, V032);
RM_STATUS mthdSetBufferLoopStart(PHWINFO, POBJECT, PMETHOD, U032, V032);
RM_STATUS mthdSetBufferLoopLength(PHWINFO, POBJECT, PMETHOD, U032, V032);
RM_STATUS mthdSetAudioOutput(PHWINFO, POBJECT, PMETHOD, U032, V032);
RM_STATUS mthdSetOutputGain(PHWINFO, POBJECT, PMETHOD, U032, V032);
RM_STATUS mthdSetInputGain(PHWINFO, POBJECT, PMETHOD, U032, V032);
RM_STATUS mthdSetAttack(PHWINFO, POBJECT, PMETHOD, U032, V032);
RM_STATUS mthdSetDecay(PHWINFO, POBJECT, PMETHOD, U032, V032);
RM_STATUS mthdSetSustain(PHWINFO, POBJECT, PMETHOD, U032, V032);
RM_STATUS mthdSetRelease(PHWINFO, POBJECT, PMETHOD, U032, V032);
RM_STATUS mthdSetAttackCtxTime(PHWINFO, POBJECT, PMETHOD, U032, V032);
RM_STATUS mthdSetReleaseCtxTime(PHWINFO, POBJECT, PMETHOD, U032, V032);
RM_STATUS mthdSetSustainLevel(PHWINFO, POBJECT, PMETHOD, U032, V032);
RM_STATUS mthdSetTremoloDepth(PHWINFO, POBJECT, PMETHOD, U032, V032);
RM_STATUS mthdSetTremoloAttackCtxTime(PHWINFO, POBJECT, PMETHOD, U032, V032);
RM_STATUS mthdSetTremoloAttack(PHWINFO, POBJECT, PMETHOD, U032, V032);
RM_STATUS mthdSetTremoloFrequency(PHWINFO, POBJECT, PMETHOD, U032, V032);

//
// Method aliases to common method procedure.
//
RM_STATUS mthdStaticImage(PHWINFO, POBJECT, PMETHOD, U032, V032);
RM_STATUS mthdRender(PHWINFO, POBJECT, PMETHOD, U032, V032);
RM_STATUS mthdRenderBeta(PHWINFO, POBJECT, PMETHOD, U032, V032);
RM_STATUS mthdRender3d(PHWINFO, POBJECT, PMETHOD, U032, V032);
RM_STATUS mthdImageToMem(PHWINFO, POBJECT, PMETHOD, U032, V032);
RM_STATUS mthdDmaRender(PHWINFO, POBJECT, PMETHOD, U032, V032);
RM_STATUS mthdImageBlit(PHWINFO, POBJECT, PMETHOD, U032, V032);
RM_STATUS mthdGrSetNotify(PHWINFO, POBJECT, PMETHOD, U032, V032);
RM_STATUS mthdGrSetNotifyCtxDma(PHWINFO, POBJECT, PMETHOD, U032, V032);
#define mthdSetBeta         mthdStaticImage
#define mthdSetRop          mthdStaticImage
#define mthdSetColor        mthdStaticImage
#define mthdSetPatternShape mthdStaticImage
#define mthdSetColor0       mthdStaticImage
#define mthdSetColor1       mthdStaticImage
#define mthdSetPattern      mthdStaticImage
#define mthdSetRectangle    mthdStaticImage
#define mthdColor           mthdRender
#define mthdPoint           mthdRender
#define mthdPoint32         mthdRender
#define mthdColorPoint      mthdRender
#define mthdLine            mthdRender
#define mthdLine32          mthdRender
#define mthdPolyLine        mthdRender
#define mthdPolyLine32      mthdRender
#define mthdColorPolyLine   mthdRender
#define mthdLin             mthdRender
#define mthdLin32           mthdRender
#define mthdPolyLin         mthdRender
#define mthdPolyLin32       mthdRender
#define mthdColorPolyLin    mthdRender
#define mthdTriangle        mthdRender
#define mthdTriangle32      mthdRender
#define mthdTrimesh         mthdRender
#define mthdTrimesh32       mthdRender
#define mthdColorTriangle   mthdRender
#define mthdColorTrimesh    mthdRender
#define mthdRectangle       mthdRender
#define mthdControlPointIn  mthdRender
#define mthdControlPointOut mthdRender
#define mthdControlPointOutFP mthdRender
#define mthdSize            mthdRender
#define mthdImagePitch      mthdRender
#define mthdImageStart      mthdRender
#define mthdSizeIn          mthdRender
#define mthdColor0          mthdRender
#define mthdColor1          mthdRender
#define mthdMonochrome      mthdRender
#define mthdSubdivideIn     mthdRender
#define mthdColorBeta       mthdRenderBeta
#define mthdControlBetaOut  mthdRenderBeta
#define mthdSubdivideInBeta mthdRenderBeta
#define mthdFilterBeta      mthdRenderBeta
#define mthdControlPointOutBeta mthdRenderBeta
#define mthdControlPointOutFPBeta mthdRenderBeta
#define mthdBlitPointIn     mthdImageBlit
#define mthdBlitPointOut    mthdImageBlit
#define mthdBlitSize        mthdImageBlit
#define mthdImageToMemPoint mthdImageToMem
#define mthdImageToMemSize  mthdImageToMem
#define mthdImageToMemPitch mthdImageToMem
#define mthdImageToMemStart mthdImageToMem
#define mthdGraphicsFromMemPoint mthdDmaRender
#define mthdGraphicsFromMemSize  mthdDmaRender
#define mthdGraphicsFromMemPitch mthdDmaRender
#define mthdGraphicsFromMemStart mthdDmaRender
#define mthdGraphicsFromMemSize  mthdDmaRender

//---------------------------------------------------------------------------
//
//  Class object prototypes.
//
//---------------------------------------------------------------------------
RM_STATUS classCreateWellKnownObjects(PHWINFO, U032);
RM_STATUS classDeleteWellKnownObjects(VOID*, POBJECT);
RM_STATUS classInitCommonObject(POBJECT, PCLASSOBJECT, U032);
RM_STATUS classCreate(VOID*, PCLASSOBJECT, U032, POBJECT *, VOID*);
RM_STATUS classDestroy(VOID*, POBJECT);
RM_STATUS nopCreate(VOID*, PCLASSOBJECT, U032, POBJECT *, VOID*);
RM_STATUS nopDestroy(VOID*, POBJECT);
RM_STATUS classSoftwareMethod(PHWINFO, POBJECT, U032, V032);
RM_STATUS classDirectSoftwareMethod(PHWINFO, POBJECT, U032, V032);

// JJV - Moved this structure from class66.c and class63.c
typedef struct _def_surface_attributes
{
  
  U032 StartAddress;
  U032 Type;		// tells you whether this is an interleaved surface or other
  U032 Pitch;
  U032 Length;
  U032 FittedSize;  // not used for overlay
  
} SURFACEATTRIBUTES, * PSURFACEATTRIBUTES ;

// JJV - Moved these defines from class66.c
// defined digitisers

#define PHILIPS_DEVICE_110 		0
#define PHILIPS_DEVICE_111A		1
#define ITT_VPX3225D_A1			0x20
#define ITT_VPX3225D_C3			0x23
#define SAMSUNG_DEVICE_127 		0xF0

#define ST_NTSC			0x0
#define ST_PAL			0x10
#define ST_UNDECODED	0xFFFFFFFF

#define IS_FLIP_FOR_OVERLAY_SURFACE_0 			0x10
#define IS_FLIP_FOR_OVERLAY_SURFACE_1 			0x20

#define NV_VCTM_IMAGE_FORMAT_NEXT_FIELD_EVEN	0x0
#define NV_VCTM_IMAGE_FORMAT_NEXT_FIELD_ODD		0x80000000
#define NV_VCTM_IMAGE_FORMAT_COLOR_LE_Y8V8Y8U8	0x00020001

#define NV_VCTM_VBI_FORMAT_NEXT_FIELD_EVEN		0x0
#define NV_VCTM_VBI_FORMAT_NEXT_FIELD_ODD		0x80000000
#define NV_VCTM_VBI_FORMAT_COLOR_LE_Y8_P4		0x01010000

//---------------------------------------------------------------------------
//
//  Engine structures and prototypes.
//
//---------------------------------------------------------------------------

//
// Engine info structure.
//
typedef RM_STATUS (*ENGINECREATEOBJECT)(VOID*, PCLASSOBJECT, U032, POBJECT *, VOID*);
typedef RM_STATUS (*ENGINEDELETEOBJECT)(VOID*, POBJECT);

struct _def_engine_info
{
    U032 Tag;                           // cross-ref with rom data tables
    PMETHOD Methods;                    // default methods
    U032 MethodMax;                     // default method max
    ENGINECREATEOBJECT CreateObject;
    ENGINEDELETEOBJECT DestroyObject;
};

typedef struct _def_engine_db
{
    PENGINEINFO         pEngineInfos;
    PENGINEDESCRIPTOR   pEngineDescriptors;
    U032                numEngineDescriptors;
} ENGINEDB, *PENGINEDB;

// kernel/hal/haleng.c
RM_STATUS engineGetInfo(PENGINEDB, U032, PENGINEINFO *, PENGINEDESCRIPTOR *);
U032 engineGetBufferSize(PENGINEDB, U032, U032);

//---------------------------------------------------------------------------
//
//  Class database structure.
//
//  This state is pulled from the HAL tables.
//
//---------------------------------------------------------------------------

typedef struct _def_class_db
{
    PCLASS              pClasses;
    U032                numClasses;
    PCLASSDESCRIPTOR    pClassDescriptors;
    U032                numClassDescriptors;
} CLASSDB, *PCLASSDB;

RM_STATUS classBuildDB(PENGINEDB, PCLASSDB);
RM_STATUS classDestroyDB(PCLASSDB);
RM_STATUS classGetClass(PCLASSDB, U032, PCLASS *);

#endif // _CLASS_H_
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Microsoft Xbox (1.00.4400) [April 2002] [src]\private\ntos\video\nvx\drivers\resman\kernel\inc\fb.h ===
#ifndef _FB_H_
#define _FB_H_
//
// (C) Copyright NVIDIA Corporation Inc., 1995,1996. All rights reserved.
//
/**************************** Frambuffer Module ******** *******************\
*                                                                           *
* Module: FB.H                                                              *
*       Frambuffer routines for allocation and deallocation of off-screen   *
* memory.                                                                   *
*                                                                           *
*****************************************************************************
*                                                                           *
* History:                                                                  *
*       David Schmenk (dschmenk)    10/29/94 - rewrote it.                  *
*                                                                           *
\***************************************************************************/

//
// Amount of instance space to set aside for a BIOS image
//
#define BIOS_IMAGE_PAD  0x10000      // 64k

//---------------------------------------------------------------------------
//
//  Function prototypes for Frambuffer.
//
//---------------------------------------------------------------------------

RM_STATUS initFb(PHWINFO);
RM_STATUS fbInitializeInstMemBitMap(PHWINFO);
RM_STATUS fbAllocInstMem(PHWINFO, U032 *, U032);
RM_STATUS fbFreeInstMem(PHWINFO, U032, U032);
RM_STATUS fbAllocInstMemAlign(PHWINFO, U032 *, U032, U032);
RM_STATUS fbFreeInstMemAlign(U032, U032, U032);
V032      fbService(PHWINFO);

RM_STATUS fbUpdateStartAddress(PHWINFO, U032);
RM_STATUS fbGetScanline(U032 *);
RM_STATUS fbCheckConfig(PHWINFO);

#endif // _FB_H_
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Microsoft Xbox (1.00.4400) [April 2002] [src]\private\ntos\video\nvx\drivers\resman\kernel\inc\mp.h ===
#ifndef _MP_H_
#define _MP_H_
//
// (C) Copyright NVIDIA Corporation Inc., 1995-2000. All rights reserved.
//
/****************************** MediaPort Control ***************************\
*                                                                           *
* Module: MP.H                                                              *
*       Mediaport Includes.                                                 *
*                                                                           *
*****************************************************************************
*                                                                           *
* History:                                                                  *
*                                                                           *
\***************************************************************************/

//---------------------------------------------------------------------------
//
//  Structures.
//
//---------------------------------------------------------------------------

//
// MediaPort context tree structure
//
typedef struct _def_mediaport_context
{ 
    U032                     Hwregs[50];
    PVIDEODECODEROBJECT      CurrentDecoder;
    PVIDEODECOMPRESSOROBJECT CurrentDecompressor;
} MEDIAPORTCONTEXT, * PMEDIAPORTCONTEXT;

//---------------------------------------------------------------------------
//
//  Macros.
//
//---------------------------------------------------------------------------

//---------------------------------------------------------------------------
//
//  Function prototypes.
//
//---------------------------------------------------------------------------
RM_STATUS mpCreateObj(VOID*, PCLASSOBJECT, U032, POBJECT *, VOID*);
RM_STATUS mpDestroyObj(VOID*, POBJECT);
RM_STATUS initMp(PHWINFO);
V032      mpService(PHWINFO);
RM_STATUS stateMp(PHWINFO, U032);

#endif // _MP_H_
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Microsoft Xbox (1.00.4400) [April 2002] [src]\private\ntos\video\nvx\drivers\resman\kernel\inc\gr.h ===
#ifndef _GR_H_
#define _GR_H_
 /***************************************************************************\
|*                                                                           *|
|*        Copyright (c) 1993-2000 NVIDIA, Corp.  All rights reserved.        *|
|*                                                                           *|
|*     NOTICE TO USER:   The source code  is copyrighted under  U.S. and     *|
|*     international laws.   NVIDIA, Corp. of Sunnyvale, California owns     *|
|*     the copyright  and as design patents  pending  on the design  and     *|
|*     interface  of the NV chips.   Users and possessors of this source     *|
|*     code are hereby granted  a nonexclusive,  royalty-free  copyright     *|
|*     and  design  patent license  to use this code  in individual  and     *|
|*     commercial software.                                                  *|
|*                                                                           *|
|*     Any use of this source code must include,  in the user documenta-     *|
|*     tion and  internal comments to the code,  notices to the end user     *|
|*     as follows:                                                           *|
|*                                                                           *|
|*     Copyright (c) 1993-2000  NVIDIA, Corp.    NVIDIA  design  patents     *|
|*     pending in the U.S. and foreign countries.                            *|
|*                                                                           *|
|*     NVIDIA, CORP.  MAKES  NO REPRESENTATION ABOUT  THE SUITABILITY OF     *|
|*     THIS SOURCE CODE FOR ANY PURPOSE.  IT IS PROVIDED "AS IS" WITHOUT     *|
|*     EXPRESS OR IMPLIED WARRANTY OF ANY KIND.  NVIDIA, CORP. DISCLAIMS     *|
|*     ALL WARRANTIES  WITH REGARD  TO THIS SOURCE CODE,  INCLUDING  ALL     *|
|*     IMPLIED   WARRANTIES  OF  MERCHANTABILITY  AND   FITNESS   FOR  A     *|
|*     PARTICULAR  PURPOSE.   IN NO EVENT SHALL NVIDIA, CORP.  BE LIABLE     *|
|*     FOR ANY SPECIAL, INDIRECT, INCIDENTAL,  OR CONSEQUENTIAL DAMAGES,     *|
|*     OR ANY DAMAGES  WHATSOEVER  RESULTING  FROM LOSS OF USE,  DATA OR     *|
|*     PROFITS,  WHETHER IN AN ACTION  OF CONTRACT,  NEGLIGENCE OR OTHER     *|
|*     TORTIOUS ACTION, ARISING OUT  OF OR IN CONNECTION WITH THE USE OR     *|
|*     PERFORMANCE OF THIS SOURCE CODE.                                      *|
|*                                                                           *|
 \***************************************************************************/
/**************************** Graphics Manager *****************************\
*                                                                           *
* Module: GR.H                                                              *
*       Graphics engine management.                                         *
*                                                                           *
*****************************************************************************
*                                                                           *
* History:                                                                  *
*                                                                           *
\***************************************************************************/
//
// Include balanced tree defines.
//
#ifndef _BTREE_H_
#include <btree.h>
#endif // _BTREE_H_
#ifndef _VBLANK_H_
#include <vblank.h>
#endif // _VBLANK_H_

//---------------------------------------------------------------------------
//
//  Defines.
//
//---------------------------------------------------------------------------

#define INVALID_COLOR_FORMAT    0xFFFFFFFF
#define INVALID_MONO_FORMAT     0xFFFFFFFF
#define INVALID_CHID            0xFFFFFFFF
#define INVALID_BUFFER          0xFFFFFFFF
#define BOTH_BUFFERS            3
#define BUFFER(b)               BIT(b)
#define PACK_XY(x,y)            ((((y)&0xFFFF)<<16)|((x)&0xFFFF))
#define PACK_WH(x,y)            ((((h)&0xFFFF)<<16)|((w)&0xFFFF))
#define MAX_GRPATCH_FANOUT      56
#define MAX_GRPATCH_INPUT       56
// If we are using a window manager, then we will allow complex canvas shapes
// If we are not, we will just support the CLIP REGIONS allowed in hardware
#ifdef USE_GUI
#define MAX_CLIP_REGIONS        16
#else
#define MAX_CLIP_REGIONS        2
#endif

#define NUM_GRAPHICS_DEVICES    0x1C
#define FIRST_RENDERING_DEVICE  0x07
#define GR_RAM_SIZE             32
#define ZFOG_RAM_SIZE           16

#define GR_DEVICE_INDEX(d)      ((((d)>>16)&0x7F)-0x41)
#define GR_IDLE()               while ((volatile U032)REG_RD32(NV_PGRAPH_STATUS)) {         \
                                    V032 pmc;                                               \
                                    pmc = REG_RD32(NV_PMC_INTR_0);                          \
                                    if (pmc & DRF_DEF(_PMC, _INTR_0, _PGRAPH, _PENDING)) {  \
                                        grService(pDev);                                    \
                                    }                                                       \
                                    if (pmc & DRF_DEF(_PMC, _INTR_0, _PCRTC, _PENDING)) {   \
                                        VBlank(pDev);                                       \
                                    }                                                       \
                                }
#define GR_DONE()				while ((volatile U032)REG_RD32(NV_PGRAPH_STATUS))   \
                                        ;
								   
#define GR_SAVE_STATE(misc)                                                         \
{                                                                                   \
        misc = REG_RD32(NV_PGRAPH_FIFO);                                            \
        REG_WR32(NV_PGRAPH_FIFO, DRF_DEF(_PGRAPH, _FIFO, _ACCESS, _DISABLED));      \
}

#define GR_RESTORE_STATE(misc)                                                      \
{                                                                                   \
        REG_WR32(NV_PGRAPH_FIFO, misc);                                             \
}

#define GR_ASSERT_CHID(chid)    (!(REG_RD32(NV_PGRAPH_INTR_0) & DRF_DEF(_PGRAPH, _INTR_0, _CONTEXT_SWITCH, _PENDING)) && (REG_RD_DRF(_PGRAPH, _CTX_USER, _CHID) == (chid)))

#define NV3_GR_OPERATIONS   3
#define NV4_GR_OPERATIONS   6

#define NV_SRCCOPY          NV_PGRAPH_CTX_SWITCH1_PATCH_CONFIG_SRCCOPY     
#define NV_SRCCOPY_AND      NV_PGRAPH_CTX_SWITCH1_PATCH_CONFIG_SRCCOPY_AND
#define NV_ROP_AND          NV_PGRAPH_CTX_SWITCH1_PATCH_CONFIG_ROP_AND    
#define NV_BLEND_AND        NV_PGRAPH_CTX_SWITCH1_PATCH_CONFIG_BLEND_AND  
#define NV_BLEND_PREMULT    NV_PGRAPH_CTX_SWITCH1_PATCH_CONFIG_BLEND_PRE  
#define NV_SRCCOPY_PREMULT  NV_PGRAPH_CTX_SWITCH1_PATCH_CONFIG_SRCCOPY_PRE

//---------------------------------------------------------------------------
//
// Miscellaneous structure definitions.
//
//---------------------------------------------------------------------------

#define REGION_UPDATE_CANVAS    0x00000001
#define REGION_UPDATE_CLIP      0x00000002
#define REGION_UPDATE_DISABLE   0x00000003
typedef struct _def_canvas_region
{
    U032 hwnd;
    S032 CanvasLeft;
    S032 CanvasRight;
    S032 CanvasTop;
    S032 CanvasBottom;
    U032 ClipCount;
    S032 ClipLeft[MAX_CLIP_REGIONS];
    S032 ClipRight[MAX_CLIP_REGIONS];
    S032 ClipTop[MAX_CLIP_REGIONS];
    S032 ClipBottom[MAX_CLIP_REGIONS];
    U032 ClipInOut[MAX_CLIP_REGIONS];
    U032 UpdateFlags;
} CANVASREGION, * PCANVASREGION;

//---------------------------------------------------------------------------
//
//  Graphics class defines.
//
//---------------------------------------------------------------------------

typedef struct _def_ordinal_object   ORDINALOBJECT,  *PORDINALOBJECT;
typedef struct _def_video_patchcord  VIDEOPATCHCORD, *PVIDEOPATCHCORD;
typedef struct _def_image_patchcord  IMAGEPATCHCORD, *PIMAGEPATCHCORD;
typedef struct _def_beta_patchcord   BETAPATCHCORD,  *PBETAPATCHCORD;
typedef struct _def_rop_patchcord    ROPPATCHCORD,   *PROPPATCHCORD;
typedef struct _def_image_in_mem_object IMAGEINMEMOBJECT, *PIMAGEINMEMOBJECT;
typedef struct _def_canvas
{
    NODE Node;
    U032 CanvasID;
    U032 UsageCount;
    U032 BufferToggle;
    U032 xyMin;
    U032 xyMax;
    U032 ClipCount;
    U032 ClipMisc;
    U032 xyClipMin[MAX_CLIP_REGIONS];
    U032 xyClipMax[MAX_CLIP_REGIONS];
    U032 InOutClip[MAX_CLIP_REGIONS];
    U032 CplxClipCount;
    U032 xyCplxClipMin[2];
    U032 xyCplxClipMax[2];
} CANVAS, *PCANVAS;

// Common fields between most graphics object structures.
typedef struct _def_common_object COMMONOBJECT, *PCOMMONOBJECT;
struct _def_common_object
{
    OBJECT      Base;
    U032        Valid;
    U032        NotifyPending;
    U032        Instance;
    PDMAOBJECT  NotifyObject;
    PDMAOBJECT  Dma0Object;
    PDMAOBJECT  Dma1Object;
    PCOMMONOBJECT Next;
};

// Macros to get to the common fields
#define CBase            Common.Base
#define CValid           Common.Valid
#define CNotifyPending   Common.NotifyPending
#define CInstance        Common.Instance
#define CNext            Common.Next
typedef struct _def_video_object
{
    OBJECT          Base;
    PVIDEOPATCHCORD VideoOutput;
    PVIDEOPATCHCORD VideoInput[MAX_GRPATCH_INPUT];
} VIDEOOBJECT, *PVIDEOOBJECT;
struct _def_video_patchcord
{
    COMMONOBJECT    Common;
    //OBJECT       Base;
    U032         FanOut;
    PVIDEOOBJECT Source;
    PVIDEOOBJECT Destination[MAX_GRPATCH_FANOUT];
};
typedef struct _def_video_switch_object
{
    OBJECT          Base;
    PVIDEOPATCHCORD VideoOutput;
    PVIDEOPATCHCORD VideoInput[2];
    VBLANKNOTIFY    VBlankNotify[2];
    PORDINALOBJECT  Ordinal;
    PCANVAS         Canvas;
} VIDEOSWITCHOBJECT, *PVIDEOSWITCHOBJECT;
struct _def_ordinal_object
{
    OBJECT             Base;
    U032               Value;
    PVIDEOSWITCHOBJECT Switch[MAX_GRPATCH_FANOUT];
    U032               FanOut;
};
typedef struct _def_video_sink
{
    COMMONOBJECT    Common;
    //OBJECT          Base;
    PDMAOBJECT      NameXlate;
    PVIDEOPATCHCORD VideoInput[MAX_GRPATCH_INPUT];
} VIDEOSINKOBJECT, *PVIDEOSINKOBJECT;
typedef struct _def_video_colormap_object
{
    COMMONOBJECT    Common;
    //OBJECT          Base;
    PVIDEOPATCHCORD VideoOutput;
    PVIDEOPATCHCORD VideoInput;
    U032            ColorFormat;
    PDMAOBJECT      Xlate;
    U032            Start;
    U032            Length;
    U032            DirtyStart;
    U032            DirtyLength;
    U032            ColorMap[256];
} VIDEOCOLORMAPOBJECT, *PVIDEOCOLORMAPOBJECT;
typedef struct _def_video_scaler_object
{
    COMMONOBJECT            Common;
    VIDEOSCALERHALOBJECT    HalObject;
} VIDEOSCALEROBJECT,     *PVIDEOSCALEROBJECT;
typedef struct _def_video_colorkey_object
{
    COMMONOBJECT            Common;
    VIDEOCOLORKEYHALOBJECT  HalObject;
#if 0
    U032                ColorFormat;
    U032                Color;      
    U032                xClipMin;   
    U032                xClipMax;   
    U032                yClipMin;   
    U032                yClipMax;   
#endif
} VIDEOCOLORKEYOBJECT,   *PVIDEOCOLORKEYOBJECT;
//
// Pixel source/destination objects.
//
typedef struct _def_render_common      RENDERCOMMON,     *PRENDERCOMMON;
typedef struct _def_render_common_object RENDERCOMMONOBJECT, *PRENDERCOMMONOBJECT;

//
// Graphics patch context representation
//
// This is a "snapshot" of the graphics context as it
// relates to a given patch.
//
typedef struct _def_patch_context
{
    U032                 VideoConfig;
    PVIDEOCOLORMAPOBJECT ColorMap0;
    PVIDEOCOLORMAPOBJECT ColorMap1;
    PVIDEOSCALEROBJECT   VideoScaler;		
    PVIDEOCOLORKEYOBJECT VideoColorKey;
    PCOMMONOBJECT        ColorKey;
    PCOMMONOBJECT        Pattern;
    PCOMMONOBJECT        Clip;
    PCOMMONOBJECT        Rop;
    PCOMMONOBJECT        Beta1;
    PCOMMONOBJECT        Beta4;
    PCOMMONOBJECT        Surface;
    PCOMMONOBJECT        SurfaceSource;
    PCOMMONOBJECT        SurfaceZeta;
    U032                 Operation;
} PATCHCONTEXT, *PPATCHCONTEXT;

// Common field within the various render objects
struct _def_render_common
{
    PATCHCONTEXT    PatchContext;
    PDMAOBJECT      Xlate;
};

// Macros to get to the common fields
//#define RCPatch            RenderCommon.Patch
#define RCPatchContext     RenderCommon.PatchContext
#define RCXlate            RenderCommon.Xlate

// Common structure to be used as template structure for various render objects
struct _def_render_common_object
{
	COMMONOBJECT    Common;
	RENDERCOMMON    RenderCommon;
};

/* typedef */ struct _def_image_in_mem_object
{
	COMMONOBJECT    Common;
	RENDERCOMMON    RenderCommon;
    PIMAGEPATCHCORD ImageOutput;
    PIMAGEPATCHCORD ImageInput[MAX_GRPATCH_INPUT];
    PDMAOBJECT      NameXlate;
    PCANVAS         Canvas;
    U032            Offset;
    U032            Pitch;
    U032            Buffer;
};

//---------------------------------------------------------------------------
//
//  Function prototypes.
//
//---------------------------------------------------------------------------
RM_STATUS grCreateObj(VOID*, PCLASSOBJECT, U032, POBJECT *, VOID*);
RM_STATUS grDestroyObj(VOID*, POBJECT);
VOID      grInitCommon(PCOMMONOBJECT, U032);
VOID      grInitRenderCommon(PRENDERCOMMON);
RM_STATUS grNotifyComplete(VOID);
RM_STATUS grValidateVideoPatchcord(PVIDEOPATCHCORD, PPATCHCONTEXT, U032);
RM_STATUS grInvalidateVideoPatchcord(PVIDEOPATCHCORD);
RM_STATUS grUnloadCurrentChannelContext(PHWINFO);
RM_STATUS grLoadChannelContext(PHWINFO, U032);
RM_STATUS grContextInstanceToObject(PHWINFO, U032, U032, POBJECT *);
RM_STATUS grWaitVBlank(PHWINFO, PVBLANKNOTIFY, U032);
RM_STATUS grCancelVBlank(PHWINFO, PVBLANKNOTIFY);
RM_STATUS grVBlank(PHWINFO);
V032      grService(PHWINFO);
V032      grDmaService(VOID);
RM_STATUS grVideoSwitchComplete(PHWINFO, POBJECT, U032, V032, RM_STATUS);
RM_STATUS grUpdateObjectInstance(PHWINFO, PCOMMONOBJECT);
RM_STATUS grDeleteObjectInstance(PHWINFO, PCOMMONOBJECT);
BOOL      grIsSetContextInHardware(PHWINFO);
#endif // _GR_H_
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Microsoft Xbox (1.00.4400) [April 2002] [src]\private\ntos\video\nvx\drivers\resman\kernel\inc\dma.h ===
#ifndef _DMA_H_
#define _DMA_H_
 /***************************************************************************\
|*                                                                           *|
|*       Copyright 1993-2000 NVIDIA, Corporation.  All rights reserved.      *|
|*                                                                           *|
|*     NOTICE TO USER:   The source code  is copyrighted under  U.S. and     *|
|*     international laws.  Users and possessors of this source code are     *|
|*     hereby granted a nonexclusive,  royalty-free copyright license to     *|
|*     use this code in individual and commercial software.                  *|
|*                                                                           *|
|*     Any use of this source code must include,  in the user documenta-     *|
|*     tion and  internal comments to the code,  notices to the end user     *|
|*     as follows:                                                           *|
|*                                                                           *|
|*       Copyright 1993-2000 NVIDIA, Corporation.  All rights reserved.      *|
|*                                                                           *|
|*     NVIDIA, CORPORATION MAKES NO REPRESENTATION ABOUT THE SUITABILITY     *|
|*     OF  THIS SOURCE  CODE  FOR ANY PURPOSE.  IT IS  PROVIDED  "AS IS"     *|
|*     WITHOUT EXPRESS OR IMPLIED WARRANTY OF ANY KIND.  NVIDIA, CORPOR-     *|
|*     ATION DISCLAIMS ALL WARRANTIES  WITH REGARD  TO THIS SOURCE CODE,     *|
|*     INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY, NONINFRINGE-     *|
|*     MENT,  AND FITNESS  FOR A PARTICULAR PURPOSE.   IN NO EVENT SHALL     *|
|*     NVIDIA, CORPORATION  BE LIABLE FOR ANY SPECIAL,  INDIRECT,  INCI-     *|
|*     DENTAL, OR CONSEQUENTIAL DAMAGES,  OR ANY DAMAGES  WHATSOEVER RE-     *|
|*     SULTING FROM LOSS OF USE,  DATA OR PROFITS,  WHETHER IN AN ACTION     *|
|*     OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,  ARISING OUT OF     *|
|*     OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOURCE CODE.     *|
|*                                                                           *|
|*     U.S. Government  End  Users.   This source code  is a "commercial     *|
|*     item,"  as that  term is  defined at  48 C.F.R. 2.101 (OCT 1995),     *|
|*     consisting  of "commercial  computer  software"  and  "commercial     *|
|*     computer  software  documentation,"  as such  terms  are  used in     *|
|*     48 C.F.R. 12.212 (SEPT 1995)  and is provided to the U.S. Govern-     *|
|*     ment only as  a commercial end item.   Consistent with  48 C.F.R.     *|
|*     12.212 and  48 C.F.R. 227.7202-1 through  227.7202-4 (JUNE 1995),     *|
|*     all U.S. Government End Users  acquire the source code  with only     *|
|*     those rights set forth herein.                                        *|
|*                                                                           *|
 \***************************************************************************/
/********************************* DMA Manager *****************************\
*                                                                           *
* Module: DMA.H                                                             *
*       DMA object/engine management.                                       *
*                                                                           *
*****************************************************************************
*                                                                           *
* History:                                                                  *
*                                                                           *
\***************************************************************************/

//
// Include graphics object defines.
//
#ifndef _GR_H_
#include <gr.h>
#endif // _GR_H_

//---------------------------------------------------------------------------
//
//  Memory page defines.
//
//  These correspond to the granularity understood by the hardware
//  for address mapping; the system page size can be larger.
// 
//---------------------------------------------------------------------------

#define RM_PAGE_SIZE    4096
#define RM_PAGE_MASK    0x0FFF
#define RM_PAGE_SHIFT   12

#define PTE_CACHE_SIZE  64

//---------------------------------------------------------------------------
//
//  DMA object states.
//
//---------------------------------------------------------------------------

#define DMA_SET_DESC_0  0x00000001
#define DMA_SET_DESC_1  0x00000002
#define DMA_SET_DESC_2  0x00000004
#define DMA_RELOAD      0x80000000

//---------------------------------------------------------------------------
//
//  Buffer states.
//
//---------------------------------------------------------------------------

#define BUFFER_IDLE     0
#define BUFFER_BUSY     1
#define BUFFER_NOTIFY_PENDING 2

//---------------------------------------------------------------------------
//
//  NV PTE state
//
//---------------------------------------------------------------------------
typedef U032       NV_PTE_STATE;
// Definition of state bit fields
#define PTE_STATE_PRESENT	0x00000001
                                 // Bit which indicates whether or not there
                                 // is a PTE currently allocated.

//---------------------------------------------------------------------------
//
//  DMA class defines.
//
//---------------------------------------------------------------------------

typedef struct _def_dma_user_object DMAUSEROBJECT, *PDMAUSEROBJECT;
/* typedef */ struct _def_dma_user_object
{
    PCOMMONOBJECT  UserObject;
    PDMAUSEROBJECT Next;
};
 
struct _def_dma_object
{
    OBJECT Base;
    U032   State;
    U032   Valid;
    U032   DescSelector;
    VOID*  DescAddr;
    VOID*  DescOffset;
    U032   DescLimit;
    U032   LockCount;
    VOID*  LockHandle;
    DMAHALOBJINFO HalInfo;
    U032   NotifyActionHandle;     // An OS specific handle to be used for
	                               // notification action if this DMA object
								   // is used for notification.

    U032   ClientHandle;           // The global DmaList keeps DMA objects
                                   // across clients, so save the client
                                   // handle to differentiate the same ID
                                   // used between multiple clients.
    struct _def_dma_object *Next;
};

//#define GETDMA_ADDRSPACE(dma)       (dma->HalInfo.AddressSpace)
//#define GETDMAHALINFO(dma,f)        (dma->HalInfo.f)

// _def_client_dma_info is a subset of the _def_dma_object structure.
// A list of this structure is used to iterate over all the context DMAs
// allocated in this client.
typedef struct _def_client_dma_info* PCLI_DMA_INFO;
typedef struct _def_client_dma_info
{
	U032   				Handle;
	U032				Client;
	U032				Class;
	U032				Flags;
	U032				Access;
	U032				Physicality;
	U032				Locked;
	U032				Coherency;
    //OBJECT 			Base;
    //U032   			State;
    U032   				Valid;
    //U032   			Instance;
    //U032   			UseCount;
    //U032   			XferCount;
    //PDMAUSEROBJECT 	Users;
    U032   				DescSelector;	// selector for hobbled OSs (always 0 for NT)
    VOID*   			DescOffset;		// buffer address from the client (flat address for NT)
    U032   				DescLimit;		// buffer length - 1
    VOID*  				DescAddr;		// actual DMA buffer address
    VOID*  				BufferBase;
    U032   				BufferSize;
    //U032   				LockCount;
    VOID*  				LockHandle;
    //NV_PTE_STATE   	PteState;
    U032   				PteCount;
    //U032   				PteOffset;
    U032   				PteAdjust;		// offset into the current DMA page
    U032   				PteLimit;		// buffer size rounded to DMA page
    U032*				PteArray;
	//U032*				CurPte;
    //U032   			PteCache[PTE_CACHE_SIZE];
    //U032   			NotifyActionHandle;
	NV_ADDRESS_SPACE	AddressSpace;
    struct _def_client_dma_info* Next;
    struct _def_client_dma_info* Prev;

} CLI_DMA_INFO;

//---------------------------------------------------------------------------
//
//  DMA instance structure.
//
//---------------------------------------------------------------------------

typedef struct _def_dma_instance
{
   U016 Adjust;
   U016 Present;
   U032 Limit;
   U032 AddressPresentAccess[1];
} DMAINSTANCE, *PDMAINSTANCE;

//---------------------------------------------------------------------------
//
//  Notification buffer structure.
//
//---------------------------------------------------------------------------

typedef struct _def_notification_buffer
{
    U032 TimeLo;
    U032 TimeHi;
    V032 OtherInfo32;
    V016 OtherInfo16;
    V016 Status;
} NOTIFICATION, *PNOTIFICATION;


//---------------------------------------------------------------------------
//
//  Event Notification structure.
//
//---------------------------------------------------------------------------

struct _def_event_notification
{
	U032                Handle;       // This handle is not currently used
    U032                NotifyIndex;
    U032                NotifyType;
    U064                Data;
    PEVENTNOTIFICATION  Next;   
};

//---------------------------------------------------------------------------
//
//  Dual buffer structure and object.
//
//---------------------------------------------------------------------------

//
// Buffer structure.
//
typedef struct _def_buffer
{
    PDMAOBJECT         Xlate;
    PDMAOBJECT         NotifyXlate;
    PDMAOBJECT         PosXlate;
	U032               NotifyMethod;      // The method to be used on notification
	                                      // of completion of this buffer.
    U032               NotifyAction;
    U032               NotifyCount;
    U032               NotifyCurrentCount;
    U032               Start;
    U032               Length;
    U032               State;
    U032               Pitch;
    U032               Width;
} BUFFER, *PBUFFER;
typedef struct _def_buffer_object BUFFEROBJECT, *PBUFFEROBJECT;
//
// Buffer specific routine to change sample rate.
//
typedef RM_STATUS (*SAMPLEPROC)(PBUFFEROBJECT);
//
// Time sampled information.
//
typedef struct _def_sample
{
    U032       NumChannels;
    U032       Format;
    U032       Size;
    U032       Rate;
    U032       RateAdjust;
    SAMPLEPROC RateUpdate;
} SAMPLEINFO, *PSAMPLEINFO;
//
// Buffer specific routine to start and complete transferring buffer data.
//
typedef RM_STATUS (*BUFFERSTARTPROC)(PHWINFO, PBUFFEROBJECT, U032);
typedef RM_STATUS (*BUFFERPOSPROC)(PHWINFO, PBUFFEROBJECT, U032, U032 *);
typedef RM_STATUS (*BUFFERENDPROC)(PHWINFO, PBUFFEROBJECT, U032, V032, RM_STATUS);
//
// Generic buffer object.
//
struct _def_buffer_object
{
    OBJECT          Base;
    U032            Valid;
    SAMPLEINFO      Sample;
    BUFFERSTARTPROC BufferXfer;
    BUFFERPOSPROC   BufferPos;
    BUFFERENDPROC   BufferComplete;
    BUFFER          Buffer[2];
};

// Definitions of generic buffer object substructures
#define BBase           BufferObj.Base
#define BValid          BufferObj.Valid
#define BSample         BufferObj.Sample
#define BBufferXfer     BufferObj.BufferXfer
#define BBufferPos      BufferObj.BufferPos
#define BBufferComplete BufferObj.BufferComplete
#define BBuffer         BufferObj.Buffer

// Memory to memory object definitions
// The memory to memory object is the same as the buffer object
typedef struct _def_buffer_object MEMTOMEMOBJECT, *PMEMTOMEMOBJECT;

// Buffer 0 in the memory to memory object is used for the from
// memory description.
#define MEM_TO_MEM_IN_BUFFER	0
// Buffer 1 in the memory to memory object is used for the to
// memory description.
#define MEM_TO_MEM_OUT_BUFFER	1

//---------------------------------------------------------------------------
//
//  NULL DMA Descriptor.
//
//---------------------------------------------------------------------------

extern U032 dmaNullInstance;

//---------------------------------------------------------------------------
//
//  Function prototypes.
//
//---------------------------------------------------------------------------
RM_STATUS dmaCreateObj(PHWINFO, PCLASSOBJECT, U032, POBJECT *);
RM_STATUS dmaDestroyObj(PHWINFO, POBJECT);
RM_STATUS dmaCreate(VOID*, PCLASSOBJECT, U032, POBJECT *, VOID*);
RM_STATUS dmaDelete(VOID*, POBJECT);
RM_STATUS dmaContextInstanceToObject(PHWINFO, U032, U032, PDMAOBJECT *);
RM_STATUS dmaValidateObjectName(PHWINFO, U032, V032, PDMAOBJECT *);
RM_STATUS dmaFindContext(PHWINFO, U032, U032, PDMAOBJECT *);
RM_STATUS dmaValidateXlate(PDMAOBJECT, U032, U032);
RM_STATUS dmaGetMappedAddress(PHWINFO, PDMAOBJECT, U032, U032, VOID **);
RM_STATUS dmaAllocInstance(PHWINFO, PDMAOBJECT);
RM_STATUS dmaFreeInstance(PHWINFO, PDMAOBJECT);
RM_STATUS dmaAttach(PDMAOBJECT);
RM_STATUS dmaDetach(PDMAOBJECT);
RM_STATUS dmaBeginXfer(PDMAOBJECT, PCOMMONOBJECT);
RM_STATUS dmaEndXfer(PDMAOBJECT, PCOMMONOBJECT);
RM_STATUS dmaAllocate(PHWINFO, PDMAOBJECT);
RM_STATUS dmaDeallocate(PHWINFO, PDMAOBJECT);
RM_STATUS dmaSetBufferCtxDma(PHWINFO, PBUFFEROBJECT, PBUFFER, U032, V032);
RM_STATUS dmaSetBufferStart(PBUFFEROBJECT, PBUFFER, U032, V032);
RM_STATUS dmaSetBufferLength(PBUFFEROBJECT, PBUFFER, U032, V032);
RM_STATUS dmaSetBufferPitch(PBUFFEROBJECT, PBUFFER, U032, U032);
RM_STATUS notifySetBufferNotifyCtxDma(PHWINFO, PBUFFEROBJECT, PBUFFER, U032, V032);
RM_STATUS notifySetBufferNotify(PHWINFO, PBUFFEROBJECT, U032, U032, V032);
RM_STATUS notifyDefaultError(PHWINFO, POBJECT, U032, V032, U032, RM_STATUS);
RM_STATUS notifyMethodComplete(PHWINFO, POBJECT, U032, V032, RM_STATUS);
RM_STATUS notifyBufferHWComplete(PHWINFO, POBJECT, U032, V032, U032, RM_STATUS);
RM_STATUS notifyBufferComplete(PHWINFO, PBUFFEROBJECT, U032, V032, RM_STATUS);
RM_STATUS notifyFillNotifier(PHWINFO, PDMAOBJECT, V032, V016, RM_STATUS);
RM_STATUS notifyFillNotifierArray(PHWINFO, PDMAOBJECT, V032, V016, RM_STATUS, U032);
V032      dmaService(VOID);

RM_STATUS dmaRegisterToDevice(PHWINFO, PCLI_DMA_INFO, PDMAOBJECT *);
RM_STATUS dmaUnregisterFromDevice(PHWINFO, PDMAOBJECT);
RM_STATUS dmaBindToChannel(PHWINFO, PDMAOBJECT, U032);
RM_STATUS dmaUnbindFromChannel(PHWINFO, PDMAOBJECT, U032);

#endif // _DMA_H_
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Microsoft Xbox (1.00.4400) [April 2002] [src]\private\ntos\video\nvx\drivers\resman\kernel\inc\heap.h ===
#ifndef _HEAP_H_
#define _HEAP_H_
//
// (C) Copyright NVIDIA Corporation Inc., 1995-2000. All rights reserved.
//
/*********************** Heap manager data structures **********************\
*                                                                           *
* Module: HEAP.H                                                            *
*   Heap manager for allocating memory based on usage and                   *
*   memory configuration.                                                   *
*                                                                           *
*****************************************************************************
*                                                                           *
* History:                                                                  *
*       David Schmenk (dschmenk)    05/19/98 - wrote it.                    *
*                                                                           *
\***************************************************************************/

typedef struct
{
    U032 offset;
    U032 size;
    U032 flags;
} MEMBANK, *PMEMBANK;

typedef struct def_block
{
    U032 owner;
    U032 mhandle;
    U032 begin;
    U032 align;
    U032 end;
    union
    {
        U032              type;
        struct def_block *prevFree;
    } u0;
    union
    {
        U032              hwres;
        struct def_block *nextFree;
    } u1;
    struct def_block *prev;
    struct def_block *next;
} MEMBLOCK, *PMEMBLOCK;

typedef struct
{
    U008     *base;
    U032      total;
    U032      free;
    MEMBLOCK *pBlockList;
    MEMBLOCK *pFreeBlockList;
    U032      numBanks;
    U032      memHandle;
    U032      memTypeFlags[11];
    MEMBANK   Bank[1];
} HEAP, *PHEAP;
//
// Handy heap macros.
//
//#define BLOCK_OFFSET(bp)        ((bp)->offset+(bp)->align)
//#define BLOCK_ADDRESS(hp,bp)    ((hp)->base+(bp)->offset+(bp)->align)
//
// Pre-defined no-owner ID - i.e. free.
//
#define FREE_BLOCK              0xFFFFFFFF
//
// Types of memory to allocate.
//
#ifndef BIT
#define BIT(b)                  (1<<(b))
#endif
#define MEM_GROW_UP             0x00000000
#define MEM_GROW_DOWN           0x80000000
#define MEM_GROW_MASK           0x80000000
#define MEM_TYPE_IMAGE          0
#define MEM_TYPE_DEPTH          1
#define MEM_TYPE_TEXTURE        2
#define MEM_TYPE_OVERLAY        3
#define MEM_TYPE_FONT           4
#define MEM_TYPE_CURSOR         5
#define MEM_TYPE_DMA            6
#define MEM_TYPE_INSTANCE       7
#define MEM_TYPE_PRIMARY        8
#define MEM_TYPE_IMAGE_TILED    9
#define MEM_TYPE_DEPTH_COMPR16  10
#define MEM_TYPE_DEPTH_COMPR32  11
#define MEM_TYPE_MAX            11
#define MEM_TYPE_MASK                       0x0000FFFF
#define MEM_TYPE_IGNORE_BANK_PLACEMENT_FLAG 0x00010000
#define MEM_TYPE_FORCE_MEM_GROWS_UP_FLAG    0x00020000
#define MEM_TYPE_FORCE_MEM_GROWS_DOWN_FLAG  0x00040000
#define MEM_FLAG_IMAGE          BIT(MEM_TYPE_IMAGE)
#define MEM_FLAG_DEPTH          BIT(MEM_TYPE_DEPTH)
#define MEM_FLAG_TEXTURE        BIT(MEM_TYPE_TEXTURE)
#define MEM_FLAG_OVERLAY        BIT(MEM_TYPE_OVERLAY)
#define MEM_FLAG_FONT           BIT(MEM_TYPE_FONT)
#define MEM_FLAG_CURSOR         BIT(MEM_TYPE_CURSOR)
#define MEM_FLAG_DMA            BIT(MEM_TYPE_DMA)
#define MEM_FLAG_INSTANCE       BIT(MEM_TYPE_INSTANCE)
#define MEM_FLAG_PRIMARY        BIT(MEM_TYPE_PRIMARY)
#define MEM_FLAG_IMAGE_TILED    BIT(MEM_TYPE_IMAGE_TILED)
#define MEM_FLAG_DEPTH_COMPR16  BIT(MEM_TYPE_DEPTH_COMPR16)
#define MEM_FLAG_DEPTH_COMPR32  BIT(MEM_TYPE_DEPTH_COMPR32)
#define MEM_TYPE_HEAD_MASK      0x80000000
#define MEM_TYPE_HEAD_SHIFT     31

// bits kept in MEMBLOCK->type indicating if/which HW tile range was allocated
#define MEM_TYPE_TILE_RANGE_SHIFT(i) (1 << (24+(i)))
#define MEM_TYPE_TILE_RANGE_MASK     0xFF000000

//---------------------------------------------------------------------------
//
//  Function prototypes.
//
//---------------------------------------------------------------------------

RM_STATUS heapCreate(PHWINFO, U008 *, U032, U032, PHEAP *);
RM_STATUS heapDestroy(PHWINFO, PHEAP);
RM_STATUS heapAlloc(PHWINFO, PHEAP, U032, U032 *, U032, U032, U032 *, U032 *);
RM_STATUS heapFbSetAllocParameters(PHWINFO, PFBALLOCINFO);
RM_STATUS blockFree(PHWINFO, PHEAP, PMEMBLOCK);
RM_STATUS heapFree(PHWINFO, PHEAP, U032, U032, U032 *);
RM_STATUS heapPurge(PHWINFO, PHEAP, U032);
RM_STATUS heapInfo(PHEAP, U032 *, U032 *, VOID**, U032 *, U032 *);
RM_STATUS heapInfoFreeBlocks(PHEAP, U032 *, U032 *, U032, U032, U032 *);
RM_STATUS heapCompact(PHEAP);
RM_STATUS heapGetSize(PHEAP, U032 *);
RM_STATUS heapGetFree(PHEAP, U032 *);
RM_STATUS heapGetMaxFree(PHEAP, U032 *, U032 *);
RM_STATUS heapGetBase(PHEAP, U008 **);

#endif // _HEAP_H_
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Microsoft Xbox (1.00.4400) [April 2002] [src]\private\ntos\video\nvx\drivers\resman\kernel\inc\nvarm.h ===
#if !defined _NVARMH_
#define _NVARMH_

// define to make sure nvrm.h does not include all headers
#if !defined RM_HEADERS_MINIMAL
#define RM_HEADERS_MINIMAL
#endif

#include <nvrm.h>

#define MAX_AUDIO_INSTANCE          16

typedef struct _def_hw_audio_common_ *PHWINFO_COMMON_FIELDS;

typedef union _audioRef
{
    struct
    {
        U032    type    : 16;   // device type
        U032    revID   : 8;    // device instance
        U032    client  : 8;    // unique client ID
    } field;
    
    U032 uValue;
} AUDIO_REF, *PAUDIO_REF;


typedef struct _def_hw_audio_common_
{
    // this structure uniquely identifies a piece of hardware
    // successive calls to allocating the devref just increment
    // the instance counter
    
    U032            uDevType;           // type of device
    U008            uRevisionID;        // revision ID of the device
    U008            uInstanceCounter;   // num of clients using the device
    U032            pDeviceBase;        // PCI mem base
    
    union
    {
        // for NT and WDM
        struct
        {
            VOID    *pInterrupt;
            VOID    *pDeviceObject;     // PDO.. not FDO
        } OsNT;
        
        // for Win9X VxD
        struct
        {
            U032    irqNum;
            U032    irqHandle;
        }Os9X;
    }field;
    
    VOID    *pHalContext;
    
} HWINFO_COMMON_FIELDS;

#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Microsoft Xbox (1.00.4400) [April 2002] [src]\private\ntos\video\nvx\drivers\resman\kernel\inc\mc.h ===
#ifndef _MC_H_
#define _MC_H_
 /***************************************************************************\
|*                                                                           *|
|*        Copyright (c) 1993-2000 NVIDIA, Corp.  All rights reserved.        *|
|*                                                                           *|
|*     NOTICE TO USER:   The source code  is copyrighted under  U.S. and     *|
|*     international laws.   NVIDIA, Corp. of Sunnyvale, California owns     *|
|*     the copyright  and as design patents  pending  on the design  and     *|
|*     interface  of the NV chips.   Users and possessors of this source     *|
|*     code are hereby granted  a nonexclusive,  royalty-free  copyright     *|
|*     and  design  patent license  to use this code  in individual  and     *|
|*     commercial software.                                                  *|
|*                                                                           *|
|*     Any use of this source code must include,  in the user documenta-     *|
|*     tion and  internal comments to the code,  notices to the end user     *|
|*     as follows:                                                           *|
|*                                                                           *|
|*     Copyright (c) 1993-2000  NVIDIA, Corp.    NVIDIA  design  patents     *|
|*     pending in the U.S. and foreign countries.                            *|
|*                                                                           *|
|*     NVIDIA, CORP.  MAKES  NO REPRESENTATION ABOUT  THE SUITABILITY OF     *|
|*     THIS SOURCE CODE FOR ANY PURPOSE.  IT IS PROVIDED "AS IS" WITHOUT     *|
|*     EXPRESS OR IMPLIED WARRANTY OF ANY KIND.  NVIDIA, CORP. DISCLAIMS     *|
|*     ALL WARRANTIES  WITH REGARD  TO THIS SOURCE CODE,  INCLUDING  ALL     *|
|*     IMPLIED   WARRANTIES  OF  MERCHANTABILITY  AND   FITNESS   FOR  A     *|
|*     PARTICULAR  PURPOSE.   IN NO EVENT SHALL NVIDIA, CORP.  BE LIABLE     *|
|*     FOR ANY SPECIAL, INDIRECT, INCIDENTAL,  OR CONSEQUENTIAL DAMAGES,     *|
|*     OR ANY DAMAGES  WHATSOEVER  RESULTING  FROM LOSS OF USE,  DATA OR     *|
|*     PROFITS,  WHETHER IN AN ACTION  OF CONTRACT,  NEGLIGENCE OR OTHER     *|
|*     TORTIOUS ACTION, ARISING OUT  OF OR IN CONNECTION WITH THE USE OR     *|
|*     PERFORMANCE OF THIS SOURCE CODE.                                      *|
|*                                                                           *|
 \***************************************************************************/
/****************************** Master Control *****************************\
*                                                                           *
* Module: MC.H                                                              *
*       Master Exception dispatcher.                                         *
*                                                                           *
*****************************************************************************
*                                                                           *
* History:                                                                  *
*                                                                           *
\***************************************************************************/

//---------------------------------------------------------------------------
//
//  Macros.
//
//---------------------------------------------------------------------------

//
// Since the hardware ref manuals don't give us macros to decode
// the PMC_BOOT_0 register, we provide a few here.
//
#define MC_GET_MASKREVISION(b0)         (b0 & 0x000000FF)
#define MC_GET_REVISION(b0)             ((b0 & 0x000F0000) >> 16)
#define MC_GET_IMPLEMENTATION(b0)       ((b0 & 0x00F00000) >> 20)
#define MC_GET_ARCHITECTURE(b0)         ((b0 & 0xFF000000) >> 20)

//
// Architecture constants.
//
#define MC_ARCHITECTURE_NV04            0x04
#define MC_ARCHITECTURE_NV10            0x10
#define MC_ARCHITECTURE_NV20            0x20

//
// Implementation constants.
// These must be unique within a single architecture.
//
#define MC_IMPLEMENTATION_NV04          0x00
#define MC_IMPLEMENTATION_NV05          0x01
#define MC_IMPLEMENTATION_NV0A          0x02
#define MC_IMPLEMENTATION_NV10          0x00
#define MC_IMPLEMENTATION_NV11          0x01
#define MC_IMPLEMENTATION_NV15          0x05
#define MC_IMPLEMENTATION_NV20          0x00

//
// MaskRevision constants.
//
#define MC_MASK_REVISION_A1             0xA1
#define MC_MASK_REVISION_A2             0xA2
#define MC_MASK_REVISION_A3             0xA3
#define MC_MASK_REVISION_A6             0xA6
#define MC_MASK_REVISION_B1             0xB1
#define MC_MASK_REVISION_B2             0xB2

//
// Revision constants.
// 
#define MC_REVISION_0                   0x00
#define MC_REVISION_1                   0x01
#define MC_REVISION_2                   0x02
#define MC_REVISION_3                   0x03

// Return from D3 ACPI state requires a delay before strap register is stable
#define D0_DELAY_RETRIES    10

//---------------------------------------------------------------------------
//
//  Chip ID objects.
//
//---------------------------------------------------------------------------

typedef struct _def_chip_id_object
{
    OBJECT     Base;
    PDMAOBJECT ChipTokenXlate;
} CHIPIDOBJECT, *PCHIPIDOBJECT;

//---------------------------------------------------------------------------
//
//  Function prototypes.
//
//---------------------------------------------------------------------------

RM_STATUS initMc(PHWINFO);
VOID      mcService(PHWINFO);
RM_STATUS mcPowerStateTrigger(PHWINFO);
RM_STATUS chpCreateChipID(PCLASSOBJECT, U032, POBJECT *);
RM_STATUS chpDeleteChipID(POBJECT);
RM_STATUS mcPowerState(PHWINFO, U032);
BOOL IsNV4(PHWINFO);
BOOL IsNV5(PHWINFO);
BOOL IsNV0A(PHWINFO);
BOOL IsNV10(PHWINFO);
BOOL IsNV11(PHWINFO);
BOOL IsNV15(PHWINFO);
BOOL IsNV20(PHWINFO);

BOOL IsNV5orBetter(PHWINFO);
BOOL IsNV10orBetter(PHWINFO);
BOOL IsNV10MaskRevA03orBetter(PHWINFO);
BOOL IsNV15orBetter(PHWINFO);
BOOL IsNV15MaskRevA01(PHWINFO);
BOOL IsNV15MaskRevA02(PHWINFO);
BOOL IsNV15MaskRevA03(PHWINFO);
BOOL IsNV11orBetter(PHWINFO);
BOOL IsNV20orBetter(PHWINFO);

RM_STATUS mcSetBiosRevision(PHWINFO);

#endif // _MC_H_
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Microsoft Xbox (1.00.4400) [April 2002] [src]\private\ntos\video\nvx\drivers\resman\kernel\inc\modular.h ===
/***************************************************************************\
|*                                                                           *|
|*        Copyright (c) 1993-2000 NVIDIA, Corp.  All rights reserved.        *|
|*                                                                           *|
|*     NOTICE TO USER:   The source code  is copyrighted under  U.S. and     *|
|*     international laws.   NVIDIA, Corp. of Sunnyvale, California owns     *|
|*     the copyright  and as design patents  pending  on the design  and     *|
|*     interface  of the NV chips.   Users and possessors of this source     *|
|*     code are hereby granted  a nonexclusive,  royalty-free  copyright     *|
|*     and  design  patent license  to use this code  in individual  and     *|
|*     commercial software.                                                  *|
|*                                                                           *|
|*     Any use of this source code must include,  in the user documenta-     *|
|*     tion and  internal comments to the code,  notices to the end user     *|
|*     as follows:                                                           *|
|*                                                                           *|
|*     Copyright (c) 1993-2000  NVIDIA, Corp.    NVIDIA  design  patents     *|
|*     pending in the U.S. and foreign countries.                            *|
|*                                                                           *|
|*     NVIDIA, CORP.  MAKES  NO REPRESENTATION ABOUT  THE SUITABILITY OF     *|
|*     THIS SOURCE CODE FOR ANY PURPOSE.  IT IS PROVIDED "AS IS" WITHOUT     *|
|*     EXPRESS OR IMPLIED WARRANTY OF ANY KIND.  NVIDIA, CORP. DISCLAIMS     *|
|*     ALL WARRANTIES  WITH REGARD  TO THIS SOURCE CODE,  INCLUDING  ALL     *|
|*     IMPLIED   WARRANTIES  OF  MERCHANTABILITY  AND   FITNESS   FOR  A     *|
|*     PARTICULAR  PURPOSE.   IN NO EVENT SHALL NVIDIA, CORP.  BE LIABLE     *|
|*     FOR ANY SPECIAL, INDIRECT, INCIDENTAL,  OR CONSEQUENTIAL DAMAGES,     *|
|*     OR ANY DAMAGES  WHATSOEVER  RESULTING  FROM LOSS OF USE,  DATA OR     *|
|*     PROFITS,  WHETHER IN AN ACTION  OF CONTRACT,  NEGLIGENCE OR OTHER     *|
|*     TORTIOUS ACTION, ARISING OUT  OF OR IN CONNECTION WITH THE USE OR     *|
|*     PERFORMANCE OF THIS SOURCE CODE.                                      *|
|*                                                                           *|
 \***************************************************************************/

/***************************** Modular includes *****************************\
*                                                                           *
* Module: MODULAR.H                                                         *
*   This module contains structure and prototype definitions used in the    *
*   modular class architechure.                                             *
*                                                                           *
*****************************************************************************
*                                                                           *
* History:                                                                  *
*                                                                           *
\***************************************************************************/
#ifndef _MODULAR_H_
#define _MODULAR_H_

#include <gr.h>

//
// Define modular class structures.
//
typedef struct _def_video_from_mem_object    VIDEOFROMMEMOBJECT,    *PVIDEOFROMMEMOBJECT;
typedef struct _def_video_decoder_object     VIDEODECODEROBJECT,    *PVIDEODECODEROBJECT;
typedef struct _def_video_decompressor_object VIDEODECOMPRESSOROBJECT, *PVIDEODECOMPRESSOROBJECT;
typedef struct _def_parallel_bus_object      PARALLELBUSOBJECT,     *PPARALLELBUSOBJECT;
typedef struct _def_monitor_bus_object       MONITORBUSOBJECT,      *PMONITORBUSOBJECT;
typedef struct _def_serial_bus_object        SERIALBUSOBJECT,       *PSERIALBUSOBJECT;
typedef struct _def_video_overlay_object     VIDEO_OVERLAY_OBJECT,  *PVIDEO_OVERLAY_OBJECT;

// Define function pointers
typedef V032     (*POVERLAYSERVICEPROC)(PHWINFO, POBJECT);

//
// CLASS 63 NV_VIDEO_FROM_MEMORY
//
struct _def_video_from_mem_object
{
    BUFFEROBJECT            BufferObj;      // ALWAYS keep this first!!!!
    COMMONOBJECT            Common;
    //
    // State in this structure is shared between the HAL and RM.
    //
    VIDEOFROMMEMHALOBJECT   HalObject;
    VBLANKNOTIFY            VBlankNotify[2];
    U032                    BufferToggle;
    U032                    InitState;
};

//
// VIDEO_LUT_CURSOR_DAC class object.
//
typedef struct _def_video_lut_cursor_dac_object
{
    COMMONOBJECT                     Common;

    //
    // This state is shared between the RM and the HAL.
    //
    VIDEO_LUT_CURSOR_DAC_HAL_OBJECT  HalObject;

    //
    // This state is (currently) RM only.
    //
    struct {
        PDMAOBJECT  SemaphoreCtxDma;
        U032        Offset;
        U032        *ReleaseAddr;
        U032        ReleaseValue;
        U032        ReleaseTrigger;
        VBLANKCALLBACK ReleaseCallback;
    } Semaphore;

    struct {
        PDMAOBJECT   ImageCtxDma;
        U032         Offset;                       // Byte offset (from ImageContextDma) of top left pixel
        U032         Pitch;                        
        U032         NotifyAction;                   
        U032         NotifyTrigger;
        S016         DeltaX;
        S016         DeltaY;
        U032         MultiSync;
        VBLANKCALLBACK ImageCallback;
    }                                Image[2];
    struct {
        PDMAOBJECT     LUTCtxDma;
        U032           Offset;                       // Byte offset (from LUTContextDma)
        U032           NotifyAction;                   
        U032           NotifyTrigger;
        VBLANKCALLBACK LUTCallback;
    }                                LUT[2];
    struct {
        PDMAOBJECT     CursorCtxDma;
        U032           Offset;                       // Byte offset (from CursorContextDma) of top left pixel
        U032           Width;
        U032           Height;
        U032           ColorFormat;
        U032           NotifyAction;                   
        U032           NotifyTrigger;
        VBLANKCALLBACK CursorImageCallback;
    }                                CursorImage[2];
    U032                             CursorPoint;     // y_x
    U032                             ScanRegion;      // U015_U016 stop_start 
    U032                             Polarity;        // polarity bit (blit in/out of range)
    struct {
#if 0
        U032       VisibleImageWidth;    
        U032       VisibleImageHeight;   
        U032       HorizontalBlankStart;
        U032       HorizontalBlankWidth;
        U032       HorizontalSyncStart;
        U032       HorizontalSyncWidth;
        U032       VerticalBlankStart; 
        U032       VerticalBlankHeight; 
        U032       VerticalSyncStart; 
        U032       VerticalSyncHeight; 
        U032       TotalWidth; 
        U032       TotalHeight;     
        U032       PixelClock;
        U032       ColorFormat;                  
        U032       PixelDepth;
        struct {
            unsigned int DoubleScanMode         : 1;
            unsigned int InterlacedMode         : 1;
            unsigned int HorizontalSyncPolarity : 1;
            unsigned int VerticalSyncPolarity   : 1;
            unsigned int unusedBits1            : 12;
            unsigned int unusedBits2            : 16;
        }          Format;
#endif
        U032       NotifyAction;                   
        U032       NotifyTrigger;
    }                                Dac[2];
    U032    DisplayType;                                // may be CRT, TV, DFP
    U032    TVStandard;                                 // variations of NTSC and PAL
    U032    RefreshRate;
} VIDEO_LUT_CURSOR_DAC_OBJECT, *PVIDEO_LUT_CURSOR_DAC_OBJECT;

//
// CLASS 047 VIDEO_OVERLAY
//
/* typedef */ struct _def_video_overlay_object
{
    COMMONOBJECT                    Common;
    //
    // State in this structure is shared between the HAL and RM.
    //
    U032                            InitState;
    VIDEO_OVERLAY_HAL_OBJECT        HalObject;
    //
    // This per-buffer state is RM only.
    //
    struct {
        PDMAOBJECT                  OverlayCtxDma;
        U032                        NotifyAction;                   
        VBLANKCALLBACK              OverlayCallback;
    } Overlay[2];
};

//
// CLASS 04D NV_EXTERNAL_VIDEO_DECODER
//
struct _def_video_decoder_object
{
    COMMONOBJECT    Common;
    VIDEODECODERHALOBJECT   HalObject;
    PDMAOBJECT      ContextDmaImage[2];
    PDMAOBJECT      ContextDmaVbi[2];
    U032            LastEventProcessed;
    U032            LastVbiBufferProcessed;
    U032            LastImageBufferProcessed;
};

//
// CLASS 04E NV_EXTERNAL_VIDEO_DECOMPRESSOR
//
struct _def_video_decompressor_object
{
    COMMONOBJECT    Common;
    VIDEODECOMPRESSORHALOBJECT  HalObject;
    PDMAOBJECT      ContextDmaData[2];
    PDMAOBJECT      ContextDmaImage[2];
};

//
// CLASS 04F NV_EXTERNAL_PARALLEL_BUS
//
struct _def_parallel_bus_object
{
    COMMONOBJECT    Common;
    PARALLELBUSHALOBJECT    HalObject;
    U032            BusType;
    U032            InterruptNotifyPending;
};
//
// CLASS 050 NV_EXTERNAL_MONITOR_BUS
//
struct _def_monitor_bus_object
{
    COMMONOBJECT    Common;
    U032            BusType;
    struct {
        U016        DataSize;
        U016        AddressSize;
        U032        Address;
        U032        Data;
    } Write;
    struct {
        U016        DataSize;
        U016        AddressSize;
        U032        Address;
        U032        Notify;
    } Read;
    U032            InterruptNotifyPending;
};

//
// CLASS 051 NV_EXTERNAL_SERIAL_BUS
//
struct _def_serial_bus_object
{
    COMMONOBJECT    Common;
    U032            BusType;
    struct {
        U016        DataSize;
        U016        AddressSize;
        U032        Address;
        U032        Data;
    } Write;
    struct {
        U016        DataSize;
        U016        AddressSize;
        U032        Address;
        U032        Notify;
    } Read;
    U032            DefaultPortID;
    U032            InterruptNotifyPending;
};

//
// NVDE Object
//
#define NVDE_MAX_EVENTS                             32

#define NVDE_FLAG_PGRAPH_FIFO_ACCESS_ENABLED        4
#define NVDE_FLAG_CACHES_REASSIGN_ENABLED           2
#define NVDE_FLAG_CACHE1_PULL0_ACCESS_ENABLED       1

typedef struct _dev_nvde_event
{
    U032 code;
    U032 flags;
    U032 param[6];
} NVDEEVENT, *PNVDEEVENT;

typedef struct _def_nvde_object
{
    COMMONOBJECT Common;    // see gr.h
    U064 EventHandle;       // passed in as part of the alloc routine
    U032 EventClass;

    U032      EventBufferCount;
    NVDEEVENT EventBuffer[NVDE_MAX_EVENTS];
} NVDEOBJECT, *PNVDEOBJECT;

RM_STATUS NvdeAlloc(U032, VOID *);
RM_STATUS NvdeFree(U032, U032);
V032      NvdeAppendEventForDebugger (PNVDEOBJECT,U032,U032,U032,U032,U032,U032,U032,U032);

//
// Define modular class function prototypes.
//

//
// NV04_VIDEO_LUT_CURSOR_DAC
//
RM_STATUS class046SetNotify(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class046StopImage(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class046StopLUT(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class046StopCursorImage(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class046StopDAC(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class046SetNotifyCtxDma(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class046SetImageCtxDma(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class046SetLUTCtxDma(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class046SetCursorCtxDma(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class046SetPanOffset(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class046GetOffset(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class046SetImageValues(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class046SetLUTValues(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class046SetCursorImageValues(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class046SetCursorPoint(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class046SetDACValues(PHWINFO, POBJECT, PMETHOD, U032, U032);

//
// NV04_VIDEO_OVERLAY
//
RM_STATUS class047SetNotify(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class047StopOverlay(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class047SetNotifyCtxDma(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class047SetOverlayCtxDma(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class047GetOffset(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class047SetOverlayValues(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class047SetOverlayPointOutNow(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class047StopOverlayNow(PHWINFO, POBJECT, U032, V032, RM_STATUS);

//
// NV05_VIDEO_LUT_CURSOR_DAC
//
RM_STATUS class049SetNotify(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class049StopImage(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class049StopLUT(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class049StopCursorImage(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class049StopDAC(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class049SetNotifyCtxDma(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class049SetImageCtxDma(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class049SetLUTCtxDma(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class049SetCursorCtxDma(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class049SetPanOffset(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class049GetOffset(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class049SetImageValues(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class049SetLUTValues(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class049SetCursorImageValues(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class049SetCursorPoint(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class049SetDACValues(PHWINFO, POBJECT, PMETHOD, U032, U032);

//
// NV_VIDEO_FROM_MEMORY
//
RM_STATUS class63SetNotifyCtxDma(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class63SetNotify(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class63StopTransfer(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class63SetVideoOutput(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class63SetImageCtxDma(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class63ImageScan(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class63GetOffsetNotify(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class63VBlank(PHWINFO);

//
// NV_VIDEO_SCALER
//
RM_STATUS class64SetNotifyCtxDma(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class64SetNotify(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class64SetVideoOutput(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class64SetVideoInput(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class64SetDeltaDuDx(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class64SetDeltaDvDy(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class64SetPoint(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class64LoadContext(PHWINFO, PVIDEOSCALEROBJECT);

//
// NV_VIDEO_COLOR_KEY
//
RM_STATUS class65SetNotifyCtxDma(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class65SetNotify(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class65SetVideoOutput(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class65SetVideoInput(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class65SetColorFormat(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class65SetColorKey(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class65SetPoint(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class65SetSize(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class65LoadContext(PHWINFO, PVIDEOCOLORKEYOBJECT);
//
// NV_VIDEO_CAPTURE_TO_MEMORY
//
RM_STATUS class66SetNotifyCtxDma(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class66SetNotify(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class66StopTransfer(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class66SetVideoInput(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class66SetImageCtxDma(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class66SetImageNotifyCtxDma(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class66ImageCapture(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class66SetVbiCtxDma(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class66SetVbiNotifyCtxDma(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class66VbiCapture(PHWINFO, POBJECT, PMETHOD, U032, U032);

//
// NV10_VIDEO_LUT_CURSOR_DAC
//
RM_STATUS class067SetNotify(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class067StopImage(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class067StopLUT(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class067StopCursorImage(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class067StopDAC(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class067SetNotifyCtxDma(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class067SetImageCtxDma(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class067SetLUTCtxDma(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class067SetCursorCtxDma(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class067SetPanOffset(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class067GetOffset(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class067SetImageValues(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class067SetLUTValues(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class067SetCursorImageValues(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class067SetCursorPoint(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class067SetDACValues(PHWINFO, POBJECT, PMETHOD, U032, U032);

//
// NV15_VIDEO_LUT_CURSOR_DAC
//
RM_STATUS class07CSetNotify(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class07CStopImage(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class07CStopLUT(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class07CStopCursorImage(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class07CStopDAC(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class07CSetNotifyCtxDma(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class07CSetImageCtxDma(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class07CSetLUTCtxDma(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class07CSetCursorCtxDma(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class07CSetSemaphoreCtxDma(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class07CSetSemaphoreOffset(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class07CSetSemaphoreRelease(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class07CSetPanOffset(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class07CSetOffsetRange(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class07CGetOffset(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class07CSetImageValues(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class07CSetLUTValues(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class07CSetCursorImageValues(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class07CSetCursorPoint(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class07CSetDACValues(PHWINFO, POBJECT, PMETHOD, U032, U032);

//
// NV_VIDEO_SOURCE
//
RM_STATUS class74SetNotifyCtxDma(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class74SetNotify(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class74SetVideoOutput(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS osValidateVideoSource( char *, U032 , U032 );


//
// NV_CONTEXT_DMA_IN_MEMORY
//
RM_STATUS class61SetNotifyCtxDma(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class61SetNotify(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class61SetDmaSpecifier(PHWINFO, POBJECT, PMETHOD, U032, U032);


//////////////////////////////////////////////////////////////////////////////
// 
// CLASS012 - NV1_BETA_SOLID
//
// Method aliases
#define class012Notify              grHWMethod
#define class012SetContextDmaNotifies grHWMethod
#define class012SetBeta             grHWMethod

//////////////////////////////////////////////////////////////////////////////
// 
// CLASS017 - NV1_IMAGE_SOLID
//
// Method aliases
#define class017Notify              grHWMethod
#define class017SetContextDmaNotifies grHWMethod
#define class017SetColorFormat      grHWMethod
#define class017SetColor            grHWMethod

//////////////////////////////////////////////////////////////////////////////
// 
// CLASS018 - NV1_IMAGE_PATTERN
//
// Method aliases
#define class018Notify              grHWMethod
#define class018SetContextDmaNotifies grHWMethod
#define class018SetColorFormat      grHWMethod
#define class018SetMonochromeFormat grHWMethod
#define class018SetPatternShape     grHWMethod
#define class018SetColor0           grHWMethod
#define class018SetColor1           grHWMethod
#define class018SetPattern          grHWMethod

//////////////////////////////////////////////////////////////////////////////
// 
// CLASS019 - NV1_IMAGE_BLACK_RECTANGLE
//
// Method aliases
#define class019Notify              grHWMethod
#define class019SetContextDmaNotifies grHWMethod
#define class019SetRectangle        grHWMethod

//////////////////////////////////////////////////////////////////////////////
// 
// CLASS01C - NV1_RENDER_SOLID_LIN
//
RM_STATUS class01CSetContextClip(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class01CSetContextPattern(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class01CSetContextRop(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class01CSetContextBeta1(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class01CSetContextSurface(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class01CSetOperation(PHWINFO, POBJECT, PMETHOD, U032, U032);
// Method aliases
#define class01CNotify              grHWMethod
#define class01CSetContextDmaNotifies grHWMethod
#define class01CSetColorFormat      grHWMethod
#define class01CColor               grHWMethod
#define class01CLin                 grHWMethod
#define class01CLin32               grHWMethod
#define class01CPolyLin             grHWMethod
#define class01CPolyLin32           grHWMethod
#define class01CColorPolyLin        grHWMethod

//////////////////////////////////////////////////////////////////////////////
// 
// CLASS01D - NV1_RENDER_SOLID_TRIANGLE
//
RM_STATUS class01DSetContextClip(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class01DSetContextPattern(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class01DSetContextRop(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class01DSetContextBeta1(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class01DSetContextSurface(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class01DSetOperation(PHWINFO, POBJECT, PMETHOD, U032, U032);
// Method aliases
#define class01DNotify              grHWMethod
#define class01DSetContextDmaNotifies grHWMethod
#define class01DSetColorFormat      grHWMethod
#define class01DColor               grHWMethod
#define class01DTriangle            grHWMethod
#define class01DTriangle32          grHWMethod
#define class01DTrimesh             grHWMethod
#define class01DTrimesh32           grHWMethod
#define class01DColorTriangle       grHWMethod
#define class01DColorTrimesh        grHWMethod

//////////////////////////////////////////////////////////////////////////////
// 
// CLASS01E - NV1_RENDER_SOLID_RECTANGLE
//
RM_STATUS class01ESetContextClip(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class01ESetContextPattern(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class01ESetContextRop(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class01ESetContextBeta1(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class01ESetContextSurface(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class01ESetOperation(PHWINFO, POBJECT, PMETHOD, U032, U032);
// Method aliases
#define class01ENotify              grHWMethod
#define class01ESetContextDmaNotifies grHWMethod
#define class01ESetColorFormat      grHWMethod
#define class01EColor               grHWMethod
#define class01ERectangle           grHWMethod

//////////////////////////////////////////////////////////////////////////////
// 
// CLASS01F - NV1_IMAGE_BLIT
//
RM_STATUS class01FSetContextColorKey(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class01FSetContextClip(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class01FSetContextPattern(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class01FSetContextRop(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class01FSetContextBeta1(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class01FSetContextSurfaceSource(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class01FSetContextSurface(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class01FSetOperation(PHWINFO, POBJECT, PMETHOD, U032, U032);
// Method aliases
#define class01FNotify              grHWMethod
#define class01FSetContextDmaNotifies grHWMethod
#define class01FPointIn             grHWMethod
#define class01FPointOut            grHWMethod
#define class01FSize                grHWMethod

//////////////////////////////////////////////////////////////////////////////
// 
// CLASS021 - NV1_IMAGE_FROM_CPU
//
RM_STATUS class021SetContextColorKey(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class021SetContextClip(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class021SetContextPattern(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class021SetContextRop(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class021SetContextBeta1(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class021SetContextSurface(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class021SetOperation(PHWINFO, POBJECT, PMETHOD, U032, U032);
// Method aliases
#define class021Notify              grHWMethod
#define class021SetContextDmaNotifies grHWMethod
#define class021SetColorFormat      grHWMethod
#define class021Point               grHWMethod
#define class021Size                grHWMethod
#define class021SizeIn              grHWMethod
#define class021Color               grHWMethod

//////////////////////////////////////////////////////////////////////////////
// 
// CLASS030 - NV1_NULL
//

//////////////////////////////////////////////////////////////////////////////
// 
// CLASS036 - NV3_STRETCHED_IMAGE_FROM_CPU
//
RM_STATUS class036SetContextColorKey(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class036SetContextPattern(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class036SetContextRop(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class036SetContextBeta1(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class036SetContextSurface(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class036SetOperation(PHWINFO, POBJECT, PMETHOD, U032, U032);
// Method aliases
#define class036Notify              grHWMethod
#define class036SetContextDmaNotifies grHWMethod
#define class036SetColorFormat      grHWMethod
#define class036SizeIn              grHWMethod
#define class036DeltaDxDu           grHWMethod
#define class036DeltaDyDv           grHWMethod
#define class036Clip                grHWMethod
#define class036Point12d4           grHWMethod
#define class036Color               grHWMethod

//////////////////////////////////////////////////////////////////////////////
// 
// CLASS037 - NV3_SCALED_IMAGE_FROM_MEM
//
RM_STATUS class037SetContextPattern(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class037SetContextRop(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class037SetContextBeta1(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class037SetContextSurface(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class037SetOperation(PHWINFO, POBJECT, PMETHOD, U032, U032);
// Method aliases
#define class037Notify              grHWMethod
#define class037SetContextDmaNotifies grHWMethod
#define class037SetContextDmaImage  grHWMethod
#define class037SetColorFormat      grHWMethod
#define class037Clip                grHWMethod
#define class037RectangleOut        grHWMethod
#define class037DeltaDuDx           grHWMethod
#define class037DeltaDvDy           grHWMethod
#define class037ImageIn             grHWMethod

//////////////////////////////////////////////////////////////////////////////
// 
// CLASS039 - NV3_MEMORY_TO_MEMORY_FORMAT
//
// Method aliases
#define class039Notify              grHWMethod
#define class039SetContextDmaNotifies grHWMethod
#define class039SetContextDmaBufferIn grHWMethod
#define class039SetContextDmaBufferOut grHWMethod
#define class039BufferTransfer      grHWMethod

//////////////////////////////////////////////////////////////////////////////
// 
// CLASS048 - NV3_DX3_TEXTURED_TRIANGLE
//
RM_STATUS class048SetContextClip(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class048SetContextSurfaceColor(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class048SetContextSurfaceZeta(PHWINFO, POBJECT, PMETHOD, U032, U032);
// Method aliases
#define class048Notify              grHWMethod
#define class048SetContextDmaNotifies grHWMethod
#define class048SetTextureCtxDma    grHWMethod
#define class048TextureOffset       grHWMethod
#define class048TextureFormat       grHWMethod
#define class048Filter              grHWMethod
#define class048FogColor            grHWMethod
#define class048ControlOut0         grHWMethod
#define class048ControlOut1         grHWMethod
#define class048ControlPoint        grHWMethod

//////////////////////////////////////////////////////////////////////////////
// 
// CLASS04B - NV3_GDI_RECTANGLE_TEXT
//
RM_STATUS class04BSetContextPattern(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class04BSetContextRop(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class04BSetContextBeta1(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class04BSetContextSurface(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class04BSetOperation(PHWINFO, POBJECT, PMETHOD, U032, U032);
// Method aliases
#define class04BNotify              grHWMethod
#define class04BSetContextDmaNotifies grHWMethod
#define class04BSetColorFormat      grHWMethod
#define class04BSetMonochromeFormat grHWMethod
#define class04BColor1A             grHWMethod
#define class04BUnclippedRectangle  grHWMethod
#define class04BClipB               grHWMethod
#define class04BColor1B             grHWMethod
#define class04BClippedRectangle    grHWMethod
#define class04BClipC               grHWMethod
#define class04BColor1C             grHWMethod
#define class04BSizeC               grHWMethod
#define class04BPointC              grHWMethod
#define class04BMonochromeColor1C   grHWMethod
#define class04BClipD               grHWMethod
#define class04BColor1D             grHWMethod
#define class04BSizeInD             grHWMethod
#define class04BSizeOutD            grHWMethod
#define class04BPointD              grHWMethod
#define class04BMonochromeColor1D   grHWMethod
#define class04BClipE               grHWMethod
#define class04BColor0E             grHWMethod
#define class04BColor1E             grHWMethod
#define class04BSizeInE             grHWMethod
#define class04BSizeOutE            grHWMethod
#define class04BPointE              grHWMethod
#define class04BMonochromeColor01E  grHWMethod

//////////////////////////////////////////////////////////////////////////////
// 
// CLASS04D - NV3_EXTERNAL_VIDEO_DECODER
//
RM_STATUS class04DNotify(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class04DStopTransferVbi(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class04DStopTransferImage(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class04DSetContextDmaNotifies(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class04DSetContextDmaImage(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class04DSetContextDmaVbi(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class04DSetImageConfig(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class04DSetImageStartLine(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class04DSetImage(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class04DGetImageOffsetNotify(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class04DSetVbi(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class04DGetVbiOffsetNotify(PHWINFO, POBJECT, PMETHOD, U032, U032);

RM_STATUS class04DService(PHWINFO);

//////////////////////////////////////////////////////////////////////////////
// 
// CLASS04E - NV3_EXTERNAL_VIDEO_DECOMPRESSOR
//
RM_STATUS class04ENotify(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class04EStopTransfer(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class04ESetContextDmaNotifies(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class04ESetContextDmaData(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class04ESetContextDmaImage(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class04EReadData(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class04EWriteImage(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class04EService(PHWINFO);

//////////////////////////////////////////////////////////////////////////////
// 
// CLASS04F - NV3_EXTERNAL_PARALLEL_BUS
//
RM_STATUS class04FNotify(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class04FStopTransfer(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class04FSetContextDmaNotifies(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class04FWrite(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class04FRead(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class04FSetInterruptNotify(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class04FService(PHWINFO);

//////////////////////////////////////////////////////////////////////////////
// 
// CLASS050 - NV3_EXTERNAL_MONITOR_BUS
//
RM_STATUS class050Create(PHWINFO, PCLASSOBJECT, U032, POBJECT *);
RM_STATUS class050Destroy(PHWINFO, POBJECT);
RM_STATUS class050Notify(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class050StopTransfer(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class050SetContextDmaNotifies(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class050Write(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class050Read(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class050SetInterruptNotify(PHWINFO, POBJECT, PMETHOD, U032, U032);

//////////////////////////////////////////////////////////////////////////////
// 
// CLASS051 - NV3_EXTERNAL_SERIAL_BUS
//
RM_STATUS class051Create(PHWINFO, PCLASSOBJECT, U032, POBJECT *);
RM_STATUS class051Destroy(PHWINFO, POBJECT);
RM_STATUS class051Notify(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class051StopTransfer(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class051SetContextDmaNotifies(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class051Write(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class051Read(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class051SetInterruptNotify(PHWINFO, POBJECT, PMETHOD, U032, U032);

//////////////////////////////////////////////////////////////////////////////
// 
// CLASS058 - NV3_CONTEXT_SURFACE_0
//
// Method aliases
#define class058Notify              grHWMethod
#define class058SetContextDmaNotifies grHWMethod
#define class058SetContextDmaImage  grHWMethod
#define class058SetColorFormat      grHWMethod
#define class058SetImagePitch       grHWMethod
#define class058SetImageOffset      grHWMethod

//////////////////////////////////////////////////////////////////////////////
// 
// CLASS059 - NV3_CONTEXT_SURFACE_1
//
// Method aliases
#define class059Notify              grHWMethod
#define class059SetContextDmaNotifies grHWMethod
#define class059SetContextDmaImage  grHWMethod
#define class059SetColorFormat      grHWMethod
#define class059SetImagePitch       grHWMethod
#define class059SetImageOffset      grHWMethod

//////////////////////////////////////////////////////////////////////////////
// 
// CLASS05A - NV3_CONTEXT_SURFACE_2
//
// Method aliases
#define class05ANotify              grHWMethod
#define class05ASetContextDmaNotifies grHWMethod
#define class05ASetContextDmaImage  grHWMethod
#define class05ASetColorFormat      grHWMethod
#define class05ASetImagePitch       grHWMethod
#define class05ASetImageOffset      grHWMethod

//////////////////////////////////////////////////////////////////////////////
// 
// CLASS05B - NV3_CONTEXT_SURFACE_3
//
// Method aliases
#define class05BNotify              grHWMethod
#define class05BSetContextDmaNotifies grHWMethod
#define class05BSetContextDmaImage  grHWMethod
#define class05BSetColorFormat      grHWMethod
#define class05BSetImagePitch       grHWMethod
#define class05BSetImageOffset      grHWMethod

//////////////////////////////////////////////////////////////////////////////
// 
// CLASS043 - NV3_CONTEXT_ROP
//
// Method aliases
#define class043Notify              grHWMethod
#define class043SetContextDmaNotifies grHWMethod
#define class043SetRop5             grHWMethod

//////////////////////////////////////////////////////////////////////////////
// 
// CLASS038 - NV4_DVD_SUBPICTURE
//
// Method aliases
#define class038Notify              grHWMethod
#define class038SetContextDmaNotifies grHWMethod
#define class038SetContextDmaOverlay grHWMethod
#define class038SetContextDmaImageIn grHWMethod
#define class038SetContextDmaImageOut grHWMethod
#define class038ImageOutPoint       grHWMethod
#define class038ImageOutSize        grHWMethod
#define class038ImageOutFormat      grHWMethod
#define class038ImageOutOffset      grHWMethod
#define class038ImageInDeltaDuDx    grHWMethod
#define class038ImageInDeltaDvDy    grHWMethod
#define class038ImageInSize         grHWMethod
#define class038ImageInFormat       grHWMethod
#define class038ImageInOffset       grHWMethod
#define class038ImageInPoint        grHWMethod
#define class038OverlayDeltaDuDx    grHWMethod
#define class038OverlayDeltaDvDy    grHWMethod
#define class038OverlaySize         grHWMethod
#define class038OverlayFormat       grHWMethod
#define class038OverlayOffset       grHWMethod
#define class038OverlayPoint        grHWMethod

//////////////////////////////////////////////////////////////////////////////
// 
// CLASS042 - NV4_CONTEXT_SURFACES_2D
//
// Method aliases
#define class042Notify              grHWMethod
#define class042SetContextDmaNotifies grHWMethod
#define class042SetContextDmaSource grHWMethod
#define class042SetContextDmaDestin grHWMethod
#define class042SetColorFormat      grHWMethod
#define class042SetPitch            grHWMethod
#define class042SetOffsetSource     grHWMethod
#define class042SetOffsetDestin     grHWMethod

//////////////////////////////////////////////////////////////////////////////
// 
// CLASS044 - NV4_CONTEXT_PATTERN_METHODS
//
// Method aliases
#define class044Notify              grHWMethod
#define class044SetContextDmaNotifies grHWMethod
#define class044SetColorFormat      grHWMethod
#define class044SetMonochromeFormat grHWMethod
#define class044SetMonochromeShape  grHWMethod
#define class044SetPatternSelect    grHWMethod
#define class044SetMonochromeColor  grHWMethod
#define class044SetMonochromePattern grHWMethod
#define class044SetPatternY8        grHWMethod
#define class044SetPatternR5G6B5    grHWMethod
#define class044SetPatternX8R8G8B8  grHWMethod

//////////////////////////////////////////////////////////////////////////////
// 
// CLASS04A - NV4_GDI_RECTANGLE_TEXT
//
RM_STATUS class04ASetContextPattern(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class04ASetContextRop(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class04ASetContextBeta1(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class04ASetContextBeta4(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class04ASetContextSurface(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class04ASetOperation(PHWINFO, POBJECT, PMETHOD, U032, U032);
// Method aliases
#define class04ANotify              grHWMethod
#define class04ASetContextDmaNotifies grHWMethod
#define class04ASetContextFonts     grHWMethod
#define class04ASetColorFormat      grHWMethod    
#define class04ASetMonochromeFormat grHWMethod
#define class04AColor1A             grHWMethod
#define class04AUnclippedRectangle  grHWMethod
#define class04AClipB               grHWMethod
#define class04AColor1B             grHWMethod
#define class04AClippedRectangle    grHWMethod
#define class04AClipC               grHWMethod
#define class04AColor1C             grHWMethod
#define class04ASizeC               grHWMethod
#define class04APointC              grHWMethod
#define class04AMonochromeColor1C   grHWMethod
#define class04AClipE               grHWMethod
#define class04AColor0E             grHWMethod
#define class04AColor1E             grHWMethod
#define class04ASizeInE             grHWMethod
#define class04ASizeOutE            grHWMethod
#define class04APointE              grHWMethod
#define class04AMonochromeColor01E  grHWMethod
#define class04AFontF               grHWMethod
#define class04AClipF               grHWMethod
#define class04AColor1F             grHWMethod
#define class04ACharacterColor1F    grHWMethod
#define class04AFontG               grHWMethod
#define class04AClipG               grHWMethod
#define class04AColor1G             grHWMethod
#define class04ACharacterColor1G    grHWMethod

//////////////////////////////////////////////////////////////////////////////
// 
// CLASS052 - NV4_CONTEXT_SURFACE_SWIZZLED
//
// Method aliases
#define class052Notify              grHWMethod
#define class052SetContextDmaNotifies grHWMethod
#define class052SetContextDmaImage  grHWMethod
#define class052SetFormat           grHWMethod
#define class052SetOffset           grHWMethod

//////////////////////////////////////////////////////////////////////////////
// 
// CLASS053 - NV4_CONTEXT_SURFACES_ARGB_ZS
//
RM_STATUS class053SetClipHorizontal(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class053SetClipVertical(PHWINFO, POBJECT, PMETHOD, U032, U032);
// Method aliases
#define class053Notify              grHWMethod
#define class053SetContextDmaNotifies grHWMethod
#define class053SetContextDmaColor  grHWMethod
#define class053SetContextDmaZeta   grHWMethod
#define class053SetFormat           grHWMethod
#define class053SetClipSize         grHWMethod
#define class053SetPitch            grHWMethod
#define class053SetOffsetColor      grHWMethod
#define class053SetOffsetZeta       grHWMethod

//////////////////////////////////////////////////////////////////////////////
// 
// CLASS054 - NV4_DX5_TEXTURED_TRIANGLE
//
// Method aliases
#define class054Notify              grHWMethod
#define class054SetContextDmaNotifies grHWMethod
#define class054SetContextDmaA      grHWMethod
#define class054SetContextDmaB      grHWMethod
#define class054SetContextSurface   grHWMethod
#define class054ColorKey            grHWMethod
#define class054Offset              grHWMethod
#define class054Format              grHWMethod
#define class054Filter              grHWMethod
#define class054Blend               grHWMethod
#define class054Control             grHWMethod
#define class054FogColor            grHWMethod
#define class054Tlvertex            grHWMethod
#define class054DrawPrimitive       grHWMethod

//////////////////////////////////////////////////////////////////////////////
// 
// CLASS055 - NV4_DX6_MULTI_TEXTURE_TRIANGLE
//
// Method aliases
#define class055Notify              grHWMethod
#define class055SetContextDmaNotifies grHWMethod
#define class055SetContextDmaA      grHWMethod
#define class055SetContextDmaB      grHWMethod
#define class055SetContextSurface   grHWMethod
#define class055Offset              grHWMethod
#define class055Format              grHWMethod
#define class055Filter              grHWMethod
#define class055Combine0Alpha       grHWMethod
#define class055Combine0Color       grHWMethod
#define class055Combine1Alpha       grHWMethod
#define class055Combine1Color       grHWMethod
#define class055CombineFactor       grHWMethod
#define class055Blend               grHWMethod
#define class055Control             grHWMethod
#define class055FogColor            grHWMethod
#define class055Tlmtvertex          grHWMethod
#define class055DrawPrimitive       grHWMethod

//////////////////////////////////////////////////////////////////////////////
// 
// CLASS056 - NV10_CELSIUS_PRIMITIVE
//
RM_STATUS class056GetState(PHWINFO, POBJECT, PMETHOD, U032, U032);
// Method aliases
#define class056Notify              grHWMethod
#define class056SetWarningEnable    grHWMethod
#define class056WaitForIdle         grHWMethod
#define class056PMTrigger           grHWMethod
#define class056SetContextDmaNotifies grHWMethod
#define class056SetContextDmaA      grHWMethod
#define class056SetContextDmaB      grHWMethod
#define class056SetContextDmaVertex grHWMethod
#define class056SetContextDmaState  grHWMethod
#define class056SetContextDmaColor  grHWMethod
#define class056SetContextDmaZeta   grHWMethod
#define class056MethodCatcher       grHWMethod
#define class056InlineArray         grHWMethod
#define class056DebugInit           grHWMethod

//////////////////////////////////////////////////////////////////////////////
// 
// CLASS057 - NV4_CONTEXT_COLOR_KEY
//
// Method aliases
#define class057Notify              grHWMethod
#define class057SetContextDmaNotifies grHWMethod
#define class057SetColorFormat      grHWMethod
#define class057SetColor            grHWMethod

//////////////////////////////////////////////////////////////////////////////
// 
// CLASS05C - NV4_RENDER_SOLID_LIN
//
RM_STATUS class05CSetContextClip(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class05CSetContextPattern(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class05CSetContextRop(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class05CSetContextBeta1(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class05CSetContextBeta4(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class05CSetContextSurface(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class05CSetOperation(PHWINFO, POBJECT, PMETHOD, U032, U032);
// Method aliases
#define class05CNotify              grHWMethod
#define class05CSetContextDmaNotifies grHWMethod
#define class05CSetColorFormat      grHWMethod
#define class05CColor               grHWMethod
#define class05CLin                 grHWMethod
#define class05CLin32               grHWMethod
#define class05CPolyLin             grHWMethod
#define class05CPolyLin32           grHWMethod
#define class05CColorPolyLin        grHWMethod

//////////////////////////////////////////////////////////////////////////////
// 
// CLASS05D - NV4_RENDER_SOLID_TRIANGLE
//
RM_STATUS class05DSetContextClip(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class05DSetContextPattern(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class05DSetContextRop(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class05DSetContextBeta1(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class05DSetContextBeta4(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class05DSetContextSurface(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class05DSetOperation(PHWINFO, POBJECT, PMETHOD, U032, U032);
// Method aliases
#define class05DNotify              grHWMethod
#define class05DSetContextDmaNotifies grHWMethod
#define class05DSetColorFormat      grHWMethod
#define class05DColor               grHWMethod
#define class05DTriangle            grHWMethod
#define class05DTriangle32          grHWMethod
#define class05DTrimesh             grHWMethod
#define class05DTrimesh32           grHWMethod
#define class05DColorTriangle       grHWMethod
#define class05DColorTrimesh        grHWMethod

//////////////////////////////////////////////////////////////////////////////
// 
// CLASS05E - NV4_RENDER_SOLID_RECTANGLE
//
RM_STATUS class05ESetContextClip(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class05ESetContextPattern(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class05ESetContextRop(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class05ESetContextBeta1(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class05ESetContextBeta4(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class05ESetContextSurface(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class05ESetOperation(PHWINFO, POBJECT, PMETHOD, U032, U032);
// Method aliases
#define class05ENotify              grHWMethod
#define class05ESetContextDmaNotifies grHWMethod
#define class05ESetColorFormat      grHWMethod
#define class05EColor               grHWMethod
#define class05ERectangle           grHWMethod

//////////////////////////////////////////////////////////////////////////////
// 
// CLASS05F - NV4_IMAGE_BLIT
//
RM_STATUS class05FSetContextColorKey(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class05FSetContextClip(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class05FSetContextPattern(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class05FSetContextRop(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class05FSetContextBeta1(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class05FSetContextBeta4(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class05FSetContextSurfaces2d(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class05FSetOperation(PHWINFO, POBJECT, PMETHOD, U032, U032);
// Method aliases
#define class05FNotify              grHWMethod
#define class05FSetContextDmaNotifies grHWMethod
#define class05FControlPointIn      grHWMethod
#define class05FControlPointOut     grHWMethod
#define class05FSize                grHWMethod

//////////////////////////////////////////////////////////////////////////////
// 
// CLASS060 - NV4_INDEXED_IMAGE_FROM_CPU
//
RM_STATUS class060SetContextColorKey(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class060SetContextClip(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class060SetContextPattern(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class060SetContextRop(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class060SetContextBeta1(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class060SetContextBeta4(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class060SetContextSurface(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class060SetOperation(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class060SetColorConversion(PHWINFO, POBJECT, PMETHOD, U032, U032);
// Method aliases
#define class060Notify              grHWMethod
#define class060SetContextDmaNotifies grHWMethod
#define class060SetContextDmaLut    grHWMethod
#define class060SetColorFormat      grHWMethod
#define class060IndexFormat         grHWMethod
#define class060Point               grHWMethod
#define class060SizeOut             grHWMethod
#define class060SizeIn              grHWMethod
#define class060LutOffset           grHWMethod
#define class060Indices             grHWMethod

//////////////////////////////////////////////////////////////////////////////
// 
// CLASS061 - NV4_IMAGE_FROM_CPU
//
RM_STATUS class061SetContextColorKey(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class061SetContextClip(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class061SetContextPattern(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class061SetContextRop(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class061SetContextBeta1(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class061SetContextBeta4(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class061SetContextSurface(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class061SetOperation(PHWINFO, POBJECT, PMETHOD, U032, U032);
// Method aliases
#define class061Notify              grHWMethod
#define class061SetContextDmaNotifies grHWMethod
#define class061SetColorFormat      grHWMethod
#define class061Point               grHWMethod
#define class061SizeOut             grHWMethod
#define class061SizeIn              grHWMethod
#define class061Color               grHWMethod

//////////////////////////////////////////////////////////////////////////////
// 
// CLASS062 - NV10_CONTEXT_SURFACES_2D
//
// Method aliases
#define class062Notify              grHWMethod
#define class062SetContextDmaNotifies grHWMethod
#define class062SetContextDmaSource grHWMethod
#define class062SetContextDmaDestin grHWMethod
#define class062SetColorFormat      grHWMethod
#define class062SetPitch            grHWMethod
#define class062SetOffsetSource     grHWMethod
#define class062SetOffsetDestin     grHWMethod

//////////////////////////////////////////////////////////////////////////////
//
// CLASS063 - NV05_SCALED_IMAGE_FROM_MEMORY
//
RM_STATUS class063SetContextColorKey(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class063SetContextPattern(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class063SetContextRop(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class063SetContextBeta1(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class063SetContextBeta4(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class063SetContextSurface(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class063SetOperation(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class063SetColorConversion(PHWINFO, POBJECT, PMETHOD, U032, U032);
// Method aliases
#define class063Notify              grHWMethod
#define class063SetContextDmaNotifies grHWMethod
#define class063SetContextDmaImage  grHWMethod
#define class063SetColorFormat      grHWMethod
#define class063Clip                grHWMethod
#define class063RectangleOut        grHWMethod
#define class063DeltaDuDx           grHWMethod
#define class063DeltaDvDy           grHWMethod
#define class063ImageIn             grHWMethod

//////////////////////////////////////////////////////////////////////////////
// 
// CLASS064 - NV05_INDEXED_IMAGE_FROM_CPU
//
RM_STATUS class064SetContextColorKey(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class064SetContextClip(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class064SetContextPattern(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class064SetContextRop(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class064SetContextBeta1(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class064SetContextBeta4(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class064SetContextSurface(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class064SetOperation(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class064SetColorConversion(PHWINFO, POBJECT, PMETHOD, U032, U032);
// Method aliases
#define class064Notify              grHWMethod
#define class064SetContextDmaNotifies grHWMethod
#define class064SetContextDmaLut    grHWMethod
#define class064SetColorFormat      grHWMethod
#define class064IndexFormat         grHWMethod
#define class064Point               grHWMethod
#define class064SizeOut             grHWMethod
#define class064SizeIn              grHWMethod
#define class064LutOffset           grHWMethod
#define class064Indices             grHWMethod

//////////////////////////////////////////////////////////////////////////////
// 
// CLASS065 - NV5_IMAGE_FROM_CPU
//
RM_STATUS class065SetContextColorKey(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class065SetContextClip(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class065SetContextPattern(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class065SetContextRop(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class065SetContextBeta1(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class065SetContextBeta4(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class065SetContextSurface(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class065SetOperation(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class065SetColorConversion(PHWINFO, POBJECT, PMETHOD, U032, U032);
// Method aliases
#define class065Notify              grHWMethod
#define class065SetContextDmaNotifies grHWMethod
#define class065SetColorFormat      grHWMethod
#define class065Point               grHWMethod
#define class065SizeOut             grHWMethod
#define class065SizeIn              grHWMethod
#define class065Color               grHWMethod

//////////////////////////////////////////////////////////////////////////////
//
// CLASS066 - NV05_STRETCHED_IMAGE_FROM_CPU
//
RM_STATUS class066SetContextColorKey(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class066SetContextPattern(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class066SetContextRop(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class066SetContextBeta1(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class066SetContextBeta4(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class066SetContextSurface(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class066SetColorConversion(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class066SetOperation(PHWINFO, POBJECT, PMETHOD, U032, U032);
// Method aliases
#define class066Notify              grHWMethod
#define class066SetContextDmaNotifies grHWMethod
#define class066SetColorFormat      grHWMethod
#define class066SizeIn              grHWMethod
#define class066DeltaDxDu           grHWMethod
#define class066DeltaDyDv           grHWMethod
#define class066Clip                grHWMethod
#define class066Point12d4           grHWMethod
#define class066Color               grHWMethod

//////////////////////////////////////////////////////////////////////////////
//
// CLASS072 - NV4_CONTEXT_BETA
//
// Method aliases
#define class072Notify              grHWMethod
#define class072SetContextDmaNotifies grHWMethod
#define class072SetBetaFactor       grHWMethod

//////////////////////////////////////////////////////////////////////////////
//
// CLASS076 - NV4_STRETCHED_IMAGE_FROM_CPU
//
RM_STATUS class076SetContextColorKey(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class076SetContextPattern(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class076SetContextRop(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class076SetContextBeta1(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class076SetContextBeta4(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class076SetContextSurface(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class076SetOperation(PHWINFO, POBJECT, PMETHOD, U032, U032);
// Method aliases
#define class076Notify              grHWMethod
#define class076SetContextDmaNotifies grHWMethod
#define class076SetColorFormat      grHWMethod
#define class076SizeIn              grHWMethod
#define class076DeltaDxDu           grHWMethod
#define class076DeltaDyDv           grHWMethod
#define class076Clip                grHWMethod
#define class076Point12d4           grHWMethod
#define class076Color               grHWMethod

//////////////////////////////////////////////////////////////////////////////
//
// CLASS077 - NV4_SCALED_IMAGE_FROM_MEMORY
//
RM_STATUS class077SetContextColorKey(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class077SetContextPattern(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class077SetContextRop(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class077SetContextBeta1(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class077SetContextBeta4(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class077SetContextSurface(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class077SetOperation(PHWINFO, POBJECT, PMETHOD, U032, U032);
// Method aliases
#define class077Notify              grHWMethod
#define class077SetContextDmaNotifies grHWMethod
#define class077SetContextDmaImage  grHWMethod
#define class077SetColorFormat      grHWMethod
#define class077Clip                grHWMethod
#define class077RectangleOut        grHWMethod
#define class077DeltaDuDx           grHWMethod
#define class077DeltaDvDy           grHWMethod
#define class077ImageIn             grHWMethod

//////////////////////////////////////////////////////////////////////////////
//
// CLASS07A - NV10_VIDEO_OVERLAY
//
RM_STATUS class07ACreate(PHWINFO, PCLASSOBJECT, U032, POBJECT *);
RM_STATUS class07ADestroy(PHWINFO, POBJECT);
RM_STATUS class07ASetNotify(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class07AStopOverlay(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class07ASetNotifyCtxDma(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class07ASetOverlayCtxDma(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class07AGetOffset(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class07ASetOverlayValues(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class07ASetOverlayPointOutNow(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class07ASetOverlayLuminanceNow(PHWINFO, POBJECT, PMETHOD, U032, U032);
RM_STATUS class07ASetOverlayChrominanceNow(PHWINFO, POBJECT, PMETHOD, U032, U032);

//////////////////////////////////////////////////////////////////////////////
// 
// CLASS07B - NV10_TEXTURE_FROM_CPU
//
// Method aliases
#define class07BNotify                grHWMethod
#define class07BSetContextDmaNotifies grHWMethod
#define class07BSetContextSurface     grHWMethod
#define class07BSetColorFormat        grHWMethod
#define class07BPoint                 grHWMethod
#define class07BSize                  grHWMethod
#define class07BClipHorizontal        grHWMethod
#define class07BClipVertical          grHWMethod
#define class07BColor                 grHWMethod

//////////////////////////////////////////////////////////////////////////////
// 
// CLASS088 - NV10_DVD_SUBPICTURE
//
RM_STATUS grHWMethod(PHWINFO, POBJECT, PMETHOD, U032, U032);
// Method aliases
#define class088Notify              grHWMethod
#define class088SetContextDmaNotifies grHWMethod
#define class088SetContextDmaOverlay grHWMethod
#define class088SetContextDmaImageIn grHWMethod
#define class088SetContextDmaImageOut grHWMethod
#define class088ImageOutPoint       grHWMethod
#define class088ImageOutSize        grHWMethod
#define class088ImageOutFormat      grHWMethod
#define class088ImageOutOffset      grHWMethod
#define class088ImageInDeltaDuDx    grHWMethod
#define class088ImageInDeltaDvDy    grHWMethod
#define class088ImageInSize         grHWMethod
#define class088ImageInFormat       grHWMethod
#define class088ImageInOffset       grHWMethod
#define class088ImageInPoint        grHWMethod
#define class088OverlayDeltaDuDx    grHWMethod
#define class088OverlayDeltaDvDy    grHWMethod
#define class088OverlaySize         grHWMethod
#define class088OverlayFormat       grHWMethod
#define class088OverlayOffset       grHWMethod
#define class088OverlayPoint        grHWMethod

//////////////////////////////////////////////////////////////////////////////
//
// CLASS089 - NV10_SCALED_IMAGE_FROM_MEMORY
//
// Method aliases
#define class089Notify              grHWMethod
#define class089SetContextDmaNotifies grHWMethod
#define class089SetContextDmaImage  grHWMethod
#define class089SetContextPattern   grHWMethod
#define class089SetContextRop       grHWMethod
#define class089SetContextBeta1     grHWMethod
#define class089SetContextBeta4     grHWMethod
#define class089SetContextSurface   grHWMethod
#define class089SetColorConversion  grHWMethod
#define class089SetColorFormat      grHWMethod
#define class089SetOperation        grHWMethod
#define class089Clip                grHWMethod
#define class089RectangleOut        grHWMethod
#define class089DeltaDuDx           grHWMethod
#define class089DeltaDvDy           grHWMethod
#define class089ImageIn             grHWMethod

//////////////////////////////////////////////////////////////////////////////
// 
// CLASS08A - NV10_IMAGE_FROM_CPU
//

// Method aliases
#define class08ANotify              grHWMethod
#define class08ASetContextDmaNotifies grHWMethod
#define class08ASetContextColorKey  grHWMethod
#define class08ASetContextClip      grHWMethod
#define class08ASetContextPattern   grHWMethod
#define class08ASetContextRop       grHWMethod
#define class08ASetContextBeta1     grHWMethod
#define class08ASetContextBeta4     grHWMethod
#define class08ASetContextSurface   grHWMethod
#define class08ASetColorConversion  grHWMethod
#define class08ASetOperation        grHWMethod
#define class08ASetColorFormat      grHWMethod
#define class08ASetColorFormat      grHWMethod
#define class08APoint               grHWMethod
#define class08ASizeOut             grHWMethod
#define class08ASizeIn              grHWMethod
#define class08AColor               grHWMethod

//////////////////////////////////////////////////////////////////////////////
// 
// CLASS093 - NV10_CONTEXT_SURFACES_3D
//
// Method aliases
#define class093Notify              grHWMethod
#define class093SetContextDmaNotifies grHWMethod
#define class093SetContextDmaColor  grHWMethod
#define class093SetContextDmaZeta   grHWMethod
#define class093SetFormat           grHWMethod
#define class093SetClipSize         grHWMethod
#define class093SetPitch            grHWMethod
#define class093SetClipHorizontal   grHWMethod
#define class093SetClipVertical     grHWMethod
#define class093SetOffsetColor      grHWMethod
#define class093SetOffsetZeta       grHWMethod

//////////////////////////////////////////////////////////////////////////////
// 
// CLASS094 - NV10_DX5_TEXTURED_TRIANGLE
//
// Method aliases
#define class094Notify              grHWMethod
#define class094SetContextDmaNotifies grHWMethod
#define class094SetContextDmaA      grHWMethod
#define class094SetContextDmaB      grHWMethod
#define class094SetContextSurface   grHWMethod
#define class094ColorKey            grHWMethod
#define class094Offset              grHWMethod
#define class094Format              grHWMethod
#define class094Filter              grHWMethod
#define class094Blend               grHWMethod
#define class094Control             grHWMethod
#define class094FogColor            grHWMethod
#define class094Tlvertex            grHWMethod
#define class094DrawPrimitive       grHWMethod

//////////////////////////////////////////////////////////////////////////////
// 
// CLASS095 - NV10_DX6_MULTI_TEXTURE_TRIANGLE
//
// Method aliases
#define class095Notify              grHWMethod
#define class095SetContextDmaNotifies grHWMethod
#define class095SetContextDmaA      grHWMethod
#define class095SetContextDmaB      grHWMethod
#define class095SetContextSurface   grHWMethod
#define class095Offset              grHWMethod
#define class095Format              grHWMethod
#define class095Filter              grHWMethod
#define class095Combine0Alpha       grHWMethod
#define class095Combine0Color       grHWMethod
#define class095Combine1Alpha       grHWMethod
#define class095Combine1Color       grHWMethod
#define class095CombineFactor       grHWMethod
#define class095Blend               grHWMethod
#define class095Control             grHWMethod
#define class095FogColor            grHWMethod
#define class095Tlmtvertex          grHWMethod
#define class095DrawPrimitive       grHWMethod

//////////////////////////////////////////////////////////////////////////////
// 
// CLASS096 - NV15_CELSIUS_PRIMITIVE / NV11_CELSIUS_PRIMITIVE
//
RM_STATUS class096GetState(PHWINFO, POBJECT, PMETHOD, U032, U032);

// Method aliases
#define class096Notify                grHWMethod
#define class096SetWarningEnable      grHWMethod
#define class096WaitForIdle           grHWMethod
#define class096SyncSetRead           grHWMethod
#define class096SyncSetWrite          grHWMethod
#define class096SyncSetModulo         grHWMethod
#define class096SyncIncrementWrite    grHWMethod
#define class096SyncStall             grHWMethod
#define class096PMTrigger             grHWMethod
#define class096SetContextDmaNotifies grHWMethod
#define class096SetContextDmaA        grHWMethod
#define class096SetContextDmaB        grHWMethod
#define class096SetContextDmaVertex   grHWMethod
#define class096SetContextDmaState    grHWMethod
#define class096SetContextDmaColor    grHWMethod
#define class096SetContextDmaZeta     grHWMethod
#define class096MethodCatcher         grHWMethod
#define class096InlineArray           grHWMethod
#define class096DebugInit             grHWMethod

//////////////////////////////////////////////////////////////////////////////
// 
// CLASS09F - NV15_IMAGE_BLIT
//
// Method aliases
#define class09FNotify                  grHWMethod
#define class09FSyncSetRead             grHWMethod
#define class09FSyncSetWrite            grHWMethod
#define class09FSyncSetModulo           grHWMethod
#define class09FSyncIncrementWrite      grHWMethod
#define class09FSyncStall               grHWMethod
#define class09FSyncIncrementReadRange  grHWMethod
#define class09FSetContextDmaNotifies   grHWMethod
#define class09FSetContextColorKey      grHWMethod
#define class09FSetContextClip          grHWMethod
#define class09FSetContextPattern       grHWMethod
#define class09FSetContextRop           grHWMethod
#define class09FSetContextBeta1         grHWMethod
#define class09FSetContextBeta4         grHWMethod
#define class09FSetContextSurfaces2d    grHWMethod
#define class09FSetOperation            grHWMethod
#define class09FControlPointIn          grHWMethod
#define class09FControlPointOut         grHWMethod
#define class09FSize                    grHWMethod

#endif // _MODULAR_H_
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Microsoft Xbox (1.00.4400) [April 2002] [src]\private\ntos\video\nvx\drivers\resman\kernel\inc\i2c.h ===
/***************************************************************************\
|*                                                                           *|
|*        Copyright (c) 1993-1997 NVIDIA, Corp.  All rights reserved.        *|
|*                                                                           *|
|*     NOTICE TO USER:   The source code  is copyrighted under  U.S. and     *|
|*     international laws.   NVIDIA, Corp. of Sunnyvale, California owns     *|
|*     the copyright  and as design patents  pending  on the design  and     *|
|*     interface  of the NV chips.   Users and possessors of this source     *|
|*     code are hereby granted  a nonexclusive,  royalty-free  copyright     *|
|*     and  design  patent license  to use this code  in individual  and     *|
|*     commercial software.                                                  *|
|*                                                                           *|
|*     Any use of this source code must include,  in the user documenta-     *|
|*     tion and  internal comments to the code,  notices to the end user     *|
|*     as follows:                                                           *|
|*                                                                           *|
|*     Copyright (c) 1993-1997  NVIDIA, Corp.    NVIDIA  design  patents     *|
|*     pending in the U.S. and foreign countries.                            *|
|*                                                                           *|
|*     NVIDIA, CORP.  MAKES  NO REPRESENTATION ABOUT  THE SUITABILITY OF     *|
|*     THIS SOURCE CODE FOR ANY PURPOSE.  IT IS PROVIDED "AS IS" WITHOUT     *|
|*     EXPRESS OR IMPLIED WARRANTY OF ANY KIND.  NVIDIA, CORP. DISCLAIMS     *|
|*     ALL WARRANTIES  WITH REGARD  TO THIS SOURCE CODE,  INCLUDING  ALL     *|
|*     IMPLIED   WARRANTIES  OF  MERCHANTABILITY  AND   FITNESS   FOR  A     *|
|*     PARTICULAR  PURPOSE.   IN NO EVENT SHALL NVIDIA, CORP.  BE LIABLE     *|
|*     FOR ANY SPECIAL, INDIRECT, INCIDENTAL,  OR CONSEQUENTIAL DAMAGES,     *|
|*     OR ANY DAMAGES  WHATSOEVER  RESULTING  FROM LOSS OF USE,  DATA OR     *|
|*     PROFITS,  WHETHER IN AN ACTION  OF CONTRACT,  NEGLIGENCE OR OTHER     *|
|*     TORTIOUS ACTION, ARISING OUT  OF OR IN CONNECTION WITH THE USE OR     *|
|*     PERFORMANCE OF THIS SOURCE CODE.                                      *|
|*                                                                           *|
 \***************************************************************************/

/***************************** I2C includes ********************************\
*                                                                           *
* Module: I2C.H                                                             *
*   This module contains structure and prototype definitions used in the    *
*   I2C interface routines.                                                 *
*                                                                           *
*****************************************************************************
*                                                                           *
* History:                                                                  *
*                                                                           *
\***************************************************************************/
#ifndef _I2C_H_
#define _I2C_H_

#define	NV_I2C_PORT_PRIMARY	    0
#define	NV_I2C_PORT_SECONDARY   1
#define	NV_I2C_PORT_TERTIARY    2

// This is the number of times we try sending out an I2C addresss byte without
// getting an acknowledge back before giving up.
#define I2C_ADDRESS_RETRIES     8

RM_STATUS i2cRead(PHWINFO, U032, U032, U008, U016, U008 *, U016, U008 *);
RM_STATUS i2cWrite(PHWINFO, U032, U032, U008, U016, U008 *, U016, U008 *);
RM_STATUS i2cSend(PHWINFO, U032, U032, U008, U016, U008 *, U016 , U008 *, U032);

RM_STATUS i2cRead_ALT(PHWINFO, U032, U032, U008, U016, U008 *, U016, U008 *);
RM_STATUS i2cWrite_ALT(PHWINFO, U032, U032, U008, U016, U008 *, U016, U008 *);

RM_STATUS i2cRead_ALT2(PHWINFO, U032, U032, U008, U016, U008 *, U016, U008 *);

//
// lower level routines
//
VOID i2cInit(PHWINFO, U032, U032 );
U008 i2cSendByte(PHWINFO, U032, U032, U008);
RM_STATUS i2cReceiveByte(PHWINFO, U032, U032, U008 *, U008);
VOID i2cStart(PHWINFO, U032, U032 );
VOID i2cStop(PHWINFO, U032, U032 );

U008 i2cHardwareInit(PHWINFO, U032, U032);
VOID ResetSCLLine(PHWINFO, U032, U032);
VOID SetSCLLine(PHWINFO, U032, U032);
VOID ResetSDALine(PHWINFO, U032, U032);
VOID SetSDALine(PHWINFO, U032, U032);
VOID ReadSDA(PHWINFO, U032, U032, U008 *);
VOID ReadSCL(PHWINFO, U032, U032, U008 *);
#endif // _I2C_H_
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Microsoft Xbox (1.00.4400) [April 2002] [src]\private\ntos\video\nvx\drivers\resman\kernel\inc\mvision.h ===
/***************************************************************************\
|*                                                                           *|
|*        Copyright (c) 1993-1997 NVIDIA, Corp.  All rights reserved.        *|
|*                                                                           *|
|*     NOTICE TO USER:   The source code  is copyrighted under  U.S. and     *|
|*     international laws.   NVIDIA, Corp. of Sunnyvale, California owns     *|
|*     the copyright  and as design patents  pending  on the design  and     *|
|*     interface  of the NV chips.   Users and possessors of this source     *|
|*     code are hereby granted  a nonexclusive,  royalty-free  copyright     *|
|*     and  design  patent license  to use this code  in individual  and     *|
|*     commercial software.                                                  *|
|*                                                                           *|
|*     Any use of this source code must include,  in the user documenta-     *|
|*     tion and  internal comments to the code,  notices to the end user     *|
|*     as follows:                                                           *|
|*                                                                           *|
|*     Copyright (c) 1993-1997  NVIDIA, Corp.    NVIDIA  design  patents     *|
|*     pending in the U.S. and foreign countries.                            *|
|*                                                                           *|
|*     NVIDIA, CORP.  MAKES  NO REPRESENTATION ABOUT  THE SUITABILITY OF     *|
|*     THIS SOURCE CODE FOR ANY PURPOSE.  IT IS PROVIDED "AS IS" WITHOUT     *|
|*     EXPRESS OR IMPLIED WARRANTY OF ANY KIND.  NVIDIA, CORP. DISCLAIMS     *|
|*     ALL WARRANTIES  WITH REGARD  TO THIS SOURCE CODE,  INCLUDING  ALL     *|
|*     IMPLIED   WARRANTIES  OF  MERCHANTABILITY  AND   FITNESS   FOR  A     *|
|*     PARTICULAR  PURPOSE.   IN NO EVENT SHALL NVIDIA, CORP.  BE LIABLE     *|
|*     FOR ANY SPECIAL, INDIRECT, INCIDENTAL,  OR CONSEQUENTIAL DAMAGES,     *|
|*     OR ANY DAMAGES  WHATSOEVER  RESULTING  FROM LOSS OF USE,  DATA OR     *|
|*     PROFITS,  WHETHER IN AN ACTION  OF CONTRACT,  NEGLIGENCE OR OTHER     *|
|*     TORTIOUS ACTION, ARISING OUT  OF OR IN CONNECTION WITH THE USE OR     *|
|*     PERFORMANCE OF THIS SOURCE CODE.                                      *|
|*                                                                           *|
 \***************************************************************************/

/***************************** Macrovision includes ********************************\
*                                                                           *
* Module: MVISION.H                                                             *
*   This module contains structure and prototype definitions used in the    *
*   Macrovision routines.                                                 *
*                                                                           *
*****************************************************************************
*                                                                           *
* History:                                                                  *
*                                                                           *
\***************************************************************************/
#ifndef _MVISION_H_
#define _MVISION_H_

 
typedef struct
{
    U032    devAddr;        // device's I2C address
    U032    mode;           // Macrovision mode
    U032    port;           // I2C port (primary or secondary)
    U032    encoderType;    // Brooktree 868, Chrontel 7003, etc...
    U032    tvStandard;     // NTSC or PAL flavors
    U032    resx;
    U032    resy;
    U032    status;         // return status
} RM_MACROVISION_CONTROL;

 
RM_STATUS SetMacrovisionMode( PHWINFO, U032, RM_MACROVISION_CONTROL*);

#endif // _MVISION_H_
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Microsoft Xbox (1.00.4400) [April 2002] [src]\private\ntos\video\nvx\drivers\resman\kernel\inc\nvhal.h ===
#ifndef _NVHAL_H_
#define _NVHAL_H_

 /***************************************************************************\
|*                                                                           *|
|*        Copyright (c) 1993-2000 NVIDIA, Corp.  All rights reserved.        *|
|*                                                                           *|
|*     NOTICE TO USER:   The source code  is copyrighted under  U.S. and     *|
|*     international laws.   NVIDIA, Corp. of Sunnyvale, California owns     *|
|*     the copyright  and as design patents  pending  on the design  and     *|
|*     interface  of the NV chips.   Users and possessors of this source     *|
|*     code are hereby granted  a nonexclusive,  royalty-free  copyright     *|
|*     and  design  patent license  to use this code  in individual  and     *|
|*     commercial software.                                                  *|
|*                                                                           *|
|*     Any use of this source code must include,  in the user documenta-     *|
|*     tion and  internal comments to the code,  notices to the end user     *|
|*     as follows:                                                           *|
|*                                                                           *|
|*     Copyright (c) 1993-2000  NVIDIA, Corp.    NVIDIA  design  patents     *|
|*     pending in the U.S. and foreign countries.                            *|
|*                                                                           *|
|*     NVIDIA, CORP.  MAKES  NO REPRESENTATION ABOUT  THE SUITABILITY OF     *|
|*     THIS SOURCE CODE FOR ANY PURPOSE.  IT IS PROVIDED "AS IS" WITHOUT     *|
|*     EXPRESS OR IMPLIED WARRANTY OF ANY KIND.  NVIDIA, CORP. DISCLAIMS     *|
|*     ALL WARRANTIES  WITH REGARD  TO THIS SOURCE CODE,  INCLUDING  ALL     *|
|*     IMPLIED   WARRANTIES  OF  MERCHANTABILITY  AND   FITNESS   FOR  A     *|
|*     PARTICULAR  PURPOSE.   IN NO EVENT SHALL NVIDIA, CORP.  BE LIABLE     *|
|*     FOR ANY SPECIAL, INDIRECT, INCIDENTAL,  OR CONSEQUENTIAL DAMAGES,     *|
|*     OR ANY DAMAGES  WHATSOEVER  RESULTING  FROM LOSS OF USE,  DATA OR     *|
|*     PROFITS,  WHETHER IN AN ACTION  OF CONTRACT,  NEGLIGENCE OR OTHER     *|
|*     TORTIOUS ACTION, ARISING OUT  OF OR IN CONNECTION WITH THE USE OR     *|
|*     PERFORMANCE OF THIS SOURCE CODE.                                      *|
|*                                                                           *|
 \***************************************************************************/

/************************ NV HAL Defines and Structures ********************\
*                                                                           *
* Module: nvhal.h                                                           *
*       HAL interface defines and structures.                               *
*                                                                           *
*****************************************************************************
*                                                                           *
* History:                                                                  *
*                                                                           *
\***************************************************************************/

//
// HAL Interface Id:
//
//  31      27                              11                     0
//  .-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
//  | 4 bits| 16 bits                       | 12 bits               |
//  .-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
//   Engine  Function number         Function revision
//
// Engine tag: unique engine tag
// Function number: unique interface number
// Function revision: specific revision of interface
//
typedef U032    NV_HAL_ID;

#define MKHALID(eng,func,rev)           (eng << 28 | func << 12 | rev)

//
// Engine tags to be used by both RM/HAL to reference specific engines.
//
// These values are used in the engine descriptor table (see nvromdat.h>
// as well as in the class descriptor table.
//
// WARNING: There are exactly 4 bits for the engine tags.
//
#define MC_ENGINE_TAG                   0x1
#define FB_ENGINE_TAG                   0x2
#define DAC_ENGINE_TAG                  0x3
#define TMR_ENGINE_TAG                  0x4
#define DMA_ENGINE_TAG                  0x5
#define GR_ENGINE_TAG                   0x6
#define FIFO_ENGINE_TAG                 0x7
#define MP_ENGINE_TAG                   0x8
#define VIDEO_ENGINE_TAG                0x9

//
// These are "special" tags for classes that don't need true
// engine handling.
//

// This tag is for the NV_CLASS "pseudo" class.
#define CLASS_PSEUDO_ENGINE_TAG         0xe
// This tag is for the memory classes etc.
#define NO_ENGINE                       0xf

//
// Forwards.
//
typedef struct _def_hal_hw_info HALHWINFO, *PHALHWINFO;
typedef struct _def_hal_rm_funcs_000 HALRMFUNCS_000, *PHALRMFUNCS_000;
typedef VOID *PHALRMFUNCS;

//--------------------------------------------------------------------
// Processor info
//--------------------------------------------------------------------
typedef struct _def_processor_hal_info
{
    U032 FrontSideBusFreq;
    U032 SystemMemoryFreq;
} PROCESSORHALINFO, *PPROCESSORHALINFO;

//--------------------------------------------------------------------
// Mc
//--------------------------------------------------------------------

// Current HAL mc interface revision ids.
#define MC_CONTROL_000                  MKHALID(MC_ENGINE_TAG,0x0001,0)
#define MC_POWER_000                    MKHALID(MC_ENGINE_TAG,0x0002,0)

typedef struct _def_mc_hal_info
{   
    U032 Implementation;
    U032 Revision;
    U032 Subrevision;
    U032 Architecture;
    U032 Manufacturer;
    U032 MaskRevision;
    U032 CrystalFreq;
    U032 PCIDeviceID;
    U032 PCISubDeviceID;
    U032 EndianControl;
	U032 ChipBugs;
} MCHALINFO, *PMCHALINFO;

#define MCHALINFO(nvinfo,a)             (nvinfo->Chip.HalInfo.a)

// Endian control records current endian-ness of the NV chip as
// well as how we were compiled (big or little endian).  We need
// to know this information early in the init process.

#define MC_ENDIAN_CONTROL_CHIP_BIG_ENDIAN         BIT(0)
#define MC_ENDIAN_CONTROL_CODE_BIG_ENDIAN         BIT(1)
#define MC_ENDIAN_CONTROL_ALL_BIG_ENDIAN          BIT(2)  // bit0 & bit1
#define MC_ENDIAN_CONTROL_SWAP_REQUIRED           BIT(3)  // bit0 ^ bit1

// Chip bugs that are tracked in MCHALINFO.ChipBugs
// If bit is set, that bug is an issue for this device

#define ChipBugs       MCHALINFO(pDev, ChipBugs)

#define MC_BUG_NV11_BIG_ENDIAN_PCI_CONFIG_READS   BIT(0)

//
// MC_CONTROL parameters.
//
typedef struct _def_mc_control_arg_000
{
    NV_HAL_ID id;                       // MC_CONTROL_000
    U032 cmd;
    PHALHWINFO pHalHwInfo;
} MCCONTROLARG_000, *PMCCONTROLARG_000;

// MC_CONTROL commands.
#define MC_CONTROL_UPDATE               1
#define MC_CONTROL_LOAD                 2
#define MC_CONTROL_UNLOAD               3
#define MC_CONTROL_DESTROY              4
#define MC_CONTROL_INIT                 5
#define MC_CONTROL_SETREVISION          6

//
// MC_POWER parameters.
//
typedef struct _def_mc_power_arg_000
{
    NV_HAL_ID id;
    U032 newLevel;
    U032 oldLevel;
    PHALHWINFO pHalHwInfo;
} MCPOWERARG_000, *PMCPOWERARG_000;

// Power management states.
#define MC_POWER_LEVEL_0                0
#define MC_POWER_LEVEL_1                1
#define MC_POWER_LEVEL_2                2
#define MC_POWER_LEVEL_3                3
#define MC_POWER_LEVEL_4                4

//
// HAL wrappers.
//
RM_STATUS nvHalMcControl(PHWINFO, U032);
RM_STATUS nvHalMcPower(PHWINFO, U032, U032);

//--------------------------------------------------------------------
// Pram
//--------------------------------------------------------------------
typedef struct _def_pram_hal_info
{
    U032 InstPadSize;
    U032 TotalInstSize;
    U032 CurrentSize;
    U032 HashDepth;
    U032 HashSearch;
    U032 PraminOffset;
} PRAMHALINFO, *PPRAMHALINFO;

//--------------------------------------------------------------------
// Fifo
//--------------------------------------------------------------------

// Current HAL fifo interface revision ids.
#define FIFO_CONTROL_000                MKHALID(FIFO_ENGINE_TAG,0x0001,0x0)
#define FIFO_ALLOC_PIO_000              MKHALID(FIFO_ENGINE_TAG,0x0002,0x0)
#define FIFO_ALLOC_DMA_000              MKHALID(FIFO_ENGINE_TAG,0x0003,0x0)
#define FIFO_FREE_000                   MKHALID(FIFO_ENGINE_TAG,0x0004,0x0)
#define FIFO_GET_EXCEPTION_DATA_000     MKHALID(FIFO_ENGINE_TAG,0x0005,0x0)
#define FIFO_SERVICE_000                MKHALID(FIFO_ENGINE_TAG,0x0006,0x0)
#define FIFO_ACCESS_000                 MKHALID(FIFO_ENGINE_TAG,0x0007,0x0)
#define FIFO_HASH_ADD_000               MKHALID(FIFO_ENGINE_TAG,0x0008,0x0)
#define FIFO_HASH_DELETE_000            MKHALID(FIFO_ENGINE_TAG,0x0009,0x0)
#define FIFO_HASH_FUNC_000              MKHALID(FIFO_ENGINE_TAG,0x000a,0x0)
#define FIFO_HASH_SEARCH_000            MKHALID(FIFO_ENGINE_TAG,0x000b,0x0)

// Fifo HAL state info structure.
typedef struct _def_fifo_hal_info
{
    U032 IntrEn0;                       // interrupt enable mask
    U032 AllocateCount;
    U032 Count;                         // total available fifos
    U032 ContextSize;                   // per-fifo context size
    U032 RetryCount;
    U032 UserBase;                      // offset of user channel area
} FIFOHALINFO, *PFIFOHALINFO;

#define FIFOHALINFO(nvinfo,a)            (nvinfo->Fifo.StateInfo.a)

//
// FIFO_CONTROL_000 parameters.
//
typedef struct _def_fifo_control_arg_000
{
    NV_HAL_ID id;                       // FIFO_CONTROL_000
    U032 cmd;
    PHALHWINFO pHalHwInfo;
} FIFOCONTROLARG_000, *PFIFOCONTROLARG_000;

// FIFO_CONTROL commands.
#define FIFO_CONTROL_UPDATE             1
#define FIFO_CONTROL_LOAD               2
#define FIFO_CONTROL_UNLOAD             3
#define FIFO_CONTROL_DESTROY            4
#define FIFO_CONTROL_INIT               5

//
// FIFO_ALLOC_PIO_000 parameters.
//
typedef struct _def_fifo_alloc_pio_arg_000 {
    NV_HAL_ID id;
    U032 chid;
    U032 instance;
    PHALHWINFO pHalHwInfo;
} FIFOALLOCPIOARG_000, *PFIFOALLOCPIOARG_000;

//
// FIFO_ALLOC_DMA_000 parameters.
//
typedef struct _def_fifo_alloc_dma_arg_000
{
    NV_HAL_ID id;
    U032 chid;
    U032 instance;
    U032 dmaInstance;
    U032 fetchTrigger;
    U032 fetchSize;
    U032 fetchRequests;
    PHALHWINFO pHalHwInfo;
} FIFOALLOCDMAARG_000, *PFIFOALLOCDMAARG_000;

//
// FIFO_FREE_000 parameters.
//
typedef struct _def_fifo_free_arg_000
{
    NV_HAL_ID id;
    U032 chid;
    U032 instance;
    PHALHWINFO pHalHwInfo;
} FIFOFREEARG_000, *PFIFOFREEARG_000;

//
// FIFO_ACCESS_000 parameters.
//

typedef struct _def_fifo_access_info
{
    U032 FifoReassign;
    U032 FifoPush;
    U032 FifoPull;
} FIFOACCESSINFO, *PFIFOACCESSINFO;

typedef struct _def_fifo_access_arg_000
{
    NV_HAL_ID id;
    U032 cmd;
    PFIFOACCESSINFO pAccessInfo;
    PHALHWINFO pHalHwInfo;
} FIFOACCESSARG_000, *PFIFOACCESSARG_000;

// FIFO_ACCESS commands.
#define FIFO_ACCESS_DISABLE             0x0
#define FIFO_ACCESS_ENABLE              0x1

//
// FIFO_GET_EXCEPTION_DATA_000 parameters.
//
typedef struct _def_fifo_exception_data
{
    U032 Reason;
    U032 ChID;
    U032 GetPtr;
    U032 SubChannel;
    U032 Method;
    U032 Data;
} FIFOEXCEPTIONDATA, *PFIFOEXCEPTIONDATA;

typedef struct _def_fifo_get_exception_data_arg_000
{
    NV_HAL_ID id;
    PFIFOEXCEPTIONDATA pExceptionData;
    PHALHWINFO pHalHwInfo;
} FIFOGETEXCEPTIONDATAARG_000, *PFIFOGETEXCEPTIONDATAARG_000;

//
// FIFO_SERVICE_000 parameters.
//
typedef struct _def_fifo_service_arg_000
{
    NV_HAL_ID id;
    U032 intr;
    PFIFOEXCEPTIONDATA pExceptionData;
    PHALHWINFO pHalHwInfo;
} FIFOSERVICEARG_000, *PFIFOSERVICEARG_000;

//
// FIFO_HASH_ADD_000 parameters.
//
typedef struct _def_fifo_hash_add_arg_000
{
    NV_HAL_ID id;
    U032 entry;
    U032 handle;
    U032 chid;
    U032 instance;
    U032 engine;
    PHALHWINFO pHalHwInfo;
} FIFOHASHADDARG_000, *PFIFOHASHADDARG_000;

//
// FIFO_HASH_DELETE_000 parameters.
//
typedef struct _def_fifo_hash_delete_arg_000
{
    NV_HAL_ID id;
    U032 entry;
    PHALHWINFO pHalHwInfo;
} FIFOHASHDELETEARG_000, *PFIFOHASHDELETEARG_000;

//
// FIFO_HASH_FUNC_000 parameters.
//
typedef struct _def_fifo_hash_func_arg_000
{
    NV_HAL_ID id;
    U032 handle;
    U032 chid;
    U032 result;
    PHALHWINFO pHalHwInfo;
} FIFOHASHFUNCARG_000, *PFIFOHASHFUNCARG_000;

//
// FIFO_HASH_FUNC_000 parameters.
//
typedef struct _def_fifo_hash_search_arg_000
{
    NV_HAL_ID id;
    U032 handle;
    U032 chid;
    U032 result;
    PHALHWINFO pHalHwInfo;
} FIFOHASHSEARCHARG_000, *PFIFOHASHSEARCHARG_000;

// FIFO HAL wrappers.
RM_STATUS nvHalFifoControl(PHWINFO, U032);
RM_STATUS nvHalFifoAllocPio(PHWINFO, U032, U032);
RM_STATUS nvHalFifoAllocDma(PHWINFO, U032, U032, U032, U032, U032, U032);
RM_STATUS nvHalFifoFree(PHWINFO, U032, U032);
RM_STATUS nvHalFifoGetExceptionData(PHWINFO, PFIFOEXCEPTIONDATA);
RM_STATUS nvHalFifoService(PHWINFO, U032, PFIFOEXCEPTIONDATA);
RM_STATUS nvHalFifoAccess(PHWINFO, U032, PFIFOACCESSINFO);
RM_STATUS nvHalFifoHashAdd(PHWINFO, U032, U032, U032, U032, U032);
RM_STATUS nvHalFifoHashDelete(PHWINFO, U032);
RM_STATUS nvHalFifoHashFunc(PHWINFO, U032, U032, U032 *);
RM_STATUS nvHalFifoHashSearch(PHWINFO, U032, U032, U032 *);

//--------------------------------------------------------------------
// Framebuffer
//--------------------------------------------------------------------

// Current HAL gr interface revision ids.
#define FB_CONTROL_000                  MKHALID(FB_ENGINE_TAG,0x0001,0x0)
#define FB_SET_ALLOC_PARAMS_000         MKHALID(FB_ENGINE_TAG,0x0002,0x0)
#define FB_ALLOC_000                    MKHALID(FB_ENGINE_TAG,0x0003,0x0)
#define FB_FREE_000                     MKHALID(FB_ENGINE_TAG,0x0004,0x0)
#define FB_GET_SURFACE_PITCH_000        MKHALID(FB_ENGINE_TAG,0x0005,0x0)
#define FB_LOAD_OVERRIDE_000            MKHALID(FB_ENGINE_TAG,0x0006,0x0)
#define FB_GET_SURFACE_DIMENSIONS_000   MKHALID(FB_ENGINE_TAG,0x0007,0x0)

//
// Moving forward, nv chips will support fb sizes that are no longer
// powers of 2 (i.e. the external banks have different sizes).
//
#define MAX_EXTBANKS                    2

typedef struct _def_fb_extbank_hal_info
{
    U032 size;                          // size of bank
    U032 intBanks;                      // number of bank addressing bits
} FBEXTBANKHALINFO, *PFBEXTBANKHALINFO;

// FB allocation resources structure.
typedef struct _def_fb_alloc_info
{
    U032 type;
    U032 hwResId;
    U032 height;
    U032 pitch;    
    U032 size;
    U032 align;
    U032 offset;
    //U032 limit;
} FBALLOCINFO, *PFBALLOCINFO;

typedef struct _def_fb_hal_info
{   
    U032 RamSizeMb;                     // combined size of all extbanks (Mb)
    U032 RamSize;                       // combined size of all extbanks
    U032 RamType;                       // sdram vs ddr
    U032 ExtBankCount;                  // number of external banks
    U032 BankCount;                     // number of internal banks
    U032 Depth;
    U032 HorizDisplayWidth;
    U032 VertDisplayWidth;
    U032 RefreshRate;
    U032 Start[2];
    U032 Limit[2];
    FBEXTBANKHALINFO ExtBankInfo[MAX_EXTBANKS];
    FBALLOCINFO PrimaryFbAllocInfo[2];  // This should be MAX_CRTCS
} FBHALINFO, *PFBHALINFO;

//
// Use the following for display types.
//
#define DISPLAY_TYPE_MONITOR            0
#define DISPLAY_TYPE_TV                 1
#define DISPLAY_TYPE_DUALSURFACE        2
#define DISPLAY_TYPE_FLAT_PANEL         3
#define DISPLAY_TYPE_NONE             (~0)

//
// Use the following for monitor types.
//
#define MONITOR_TYPE_VGA                0
#define MONITOR_TYPE_NTSC               2
#define MONITOR_TYPE_PAL                3
#define MONITOR_TYPE_FLAT_PANEL         4

#define FBHALINFO(nvinfo,a)              (nvinfo->Framebuffer.HalInfo.a)

//
// FB_CONTROL_000 parameters.
//
typedef struct _def_fb_control_arg_000
{
    NV_HAL_ID id;
    U032 cmd;
    PHALHWINFO pHalHwInfo;
} FBCONTROLARG_000, *PFBCONTROLARG_000;

// FB_CONTROL commands.
#define FB_CONTROL_UPDATE               1
#define FB_CONTROL_LOAD                 2
#define FB_CONTROL_UNLOAD               3
#define FB_CONTROL_DESTROY              4
#define FB_CONTROL_INIT                 5
#define FB_CONTROL_INSTWR_DISABLE       6
#define FB_CONTROL_INSTWR_ENABLE        7
#define FB_CONTROL_TILING_DISABLE       8
#define FB_CONTROL_TILING_ENABLE        9
#define FB_CONTROL_TILING_CONFIGURE     10

//
// FB_SET_ALLOC_PARAMS_000 parameters.
//
typedef struct _def_fb_set_alloc_params_arg_000
{
    NV_HAL_ID id;
    PFBALLOCINFO pAllocInfo;
    PHALHWINFO pHalHwInfo;
} FBSETALLOCPARAMSARG_000, *PFBSETALLOCPARAMSARG_000;

//
// FB_ALLOC_000 parameters.
//
typedef struct _def_fb_alloc_arg_000
{
    NV_HAL_ID id;
    U032 flags;
    PFBALLOCINFO pAllocInfo;
    PHALHWINFO pHalHwInfo;
} FBALLOCARG_000, *PFBALLOCARG_000;

//
// Flags.
//
#define FB_ALLOC_NO_PITCH_ADJUST                0x01

//
// FB_FREE_000 parameters.
//
typedef struct _def_fb_free_arg_000
{
    NV_HAL_ID id;
    U032 hwResId;
    PHALHWINFO pHalHwInfo;
} FBFREEARG_000, *PFBFREEARG_000;

//
// FB_GET_SURFACE_PITCH_000 parameters.
//
typedef struct _def_fb_get_surface_pitch_arg_000
{
    NV_HAL_ID id;
    U032 flags;
    U032 width;
    U032 bpp;
    U032 pitch;
    PHALHWINFO pHalHwInfo;
} FBGETSURFACEPITCHARG_000, *PFBGETSURFACEPITCHARG_000;

//
// FB_GET_SURFACE_DIMENSIONS_000 parameters.
//
typedef struct _def_fb_get_surface_dimensions_arg_000
{
    NV_HAL_ID id;
    U032 flags;
    U032 width;
    U032 height;
    U032 bpp;
    U032 pitch;
    U032 size;
    PHALHWINFO pHalHwInfo;
} FBGETSURFACEDIMENSIONSARG_000, *PFBGETSURFACEDIMENSIONSARG_000;

//
// Flags.
//
#define FB_GET_SURFACE_PITCH_NO_ADJUST          0x01

//
// FB_LOAD_OVERRIDE_000 parameters.
//
typedef struct _def_fb_load_override_arg_000
{
    NV_HAL_ID id;
    U032 cmd;
    U032 value;
    PHALHWINFO pHalHwInfo;
} FBLOADOVERRIDEARG_000, *PFBLOADOVERRIDEARG_000;

// FB_LOAD_OVERRIDE commands.
#define FB_LOAD_OVERRIDE_MEMORY         1
#define FB_LOAD_OVERRIDE_RTL            2

// FB HAL wrappers.
RM_STATUS nvHalFbControl(PHWINFO, U032);
RM_STATUS nvHalFbAlloc(PHWINFO, PFBALLOCINFO);
RM_STATUS nvHalFbFree(PHWINFO, U032);
RM_STATUS nvHalFbSetAllocParameters(PHWINFO, PFBALLOCINFO);
RM_STATUS nvHalFbGetSurfacePitch(PHWINFO, U032, U032, U032 *);
RM_STATUS nvHalFbGetSurfaceDimensions(PHWINFO, U032, U032, U032, U032 *, U032 *);
RM_STATUS nvHalFbLoadOverride(PHWINFO, U032, U032);

//--------------------------------------------------------------------
// Graphics
//--------------------------------------------------------------------

// Graphics engine state info structure.
typedef struct _def_gr_hal_info
{
    U032 CurrentChID;
#if MAX_FIFOS <= 32
    U032 has3dObject;       // bitmask of chIDs containing 3d objs
#endif
} GRHALINFO, *PGRHALINFO;

#define GRHALINFO(nvinfo,a)             (nvinfo.Graphics.HalInfo.a)

// Current HAL gr interface revision ids.
#define GR_CONTROL_000                  MKHALID(GR_ENGINE_TAG,0x0001,0x0)
#define GR_ALLOC_000                    MKHALID(GR_ENGINE_TAG,0x0002,0x0)
#define GR_FREE_000                     MKHALID(GR_ENGINE_TAG,0x0003,0x0)
#define GR_GET_EXCEPTION_DATA_000       MKHALID(GR_ENGINE_TAG,0x0004,0x0)
#define GR_SERVICE_000                  MKHALID(GR_ENGINE_TAG,0x0005,0x0)
#define GR_GET_NOTIFY_DATA_000          MKHALID(GR_ENGINE_TAG,0x0006,0x0)
#define GR_SET_OBJECT_CONTEXT_000       MKHALID(GR_ENGINE_TAG,0x0007,0x0)
#define GR_LOAD_OVERRIDE_000            MKHALID(GR_ENGINE_TAG,0x0008,0x0)

//
// GR_CONTROL_000 parameters.
//
typedef struct _def_gr_control_arg_000
{
    NV_HAL_ID id;
    U032 cmd;
    PHALHWINFO pHalHwInfo;
} GRCONTROLARG_000, *PGRCONTROLARG_000;

// GR_CONTROL commands.
#define GR_CONTROL_UPDATE               1
#define GR_CONTROL_LOAD                 2
#define GR_CONTROL_UNLOAD               3
#define GR_CONTROL_DESTROY              4
#define GR_CONTROL_INIT                 5

//
// GR_ALLOC_000 parameters.
//
typedef struct _def_gr_alloc_arg_000
{
    NV_HAL_ID id;
    U032 classNum;
    U032 instance;
    U032 chid;
    PHALHWINFO pHalHwInfo;
} GRALLOCARG_000, *PGRALLOCARG_000;

//
// GR_FREE_000 parameters.
//
typedef struct _def_gr_free_arg_000
{
    NV_HAL_ID id;
    U032 instance;
    U032 chid;
    PHALHWINFO pHalHwInfo;
} GRFREEARG_000, *PGRFREEARG_000;

//
// Graphics engine exception data.
//
typedef struct _def_gr_exception_data
{
    U032 classNum;
    U032 NotifyInstance;
    U032 Nsource;
    U032 Instance;
    U032 Offset;
    U032 Data;
    U032 ChID;
    U032 MethodStatus;
} GREXCEPTIONDATA, *PGREXCEPTIONDATA;

//
// GR_GET_EXCEPTION_DATA_000 parameters.
//
typedef struct _def_gr_get_exception_data_arg_000
{
    NV_HAL_ID id;
    PGREXCEPTIONDATA pExceptionData;
    PHALHWINFO pHalHwInfo;
} GRGETEXCEPTIONDATAARG_000, *PGRGETEXCEPTIONDATAARG_000;

//
// The following is used to setup object method handling in the
// HAL.
//
typedef RM_STATUS (*HALGRMETHODPROC)(PHALHWINFO, PGREXCEPTIONDATA);

typedef struct _def_hal_gr_method
{
    HALGRMETHODPROC Proc;
    U032 Low;
    U032 High;    
} HALGRMETHOD, *PHALGRMETHOD;

typedef struct _def_hal_gr_methods
{
    U032 classNum;
    PHALGRMETHOD pMethods;
    U032 methodMax;
} HALGRMETHODS, *PHALGRMETHODS;

//
// GR_SERVICE_000 parameters.
//
typedef struct _def_gr_service_arg_000
{
    NV_HAL_ID id;
    U032 intr;
    PGREXCEPTIONDATA pExceptionData;
    PHALHWINFO pHalHwInfo;
} GRSERVICEARG_000, *PGRSERVICEARG_000;

//
// GR_GET_NOTIFY_DATA_000 parameters.
//
typedef struct _def_gr_notify_data
{
    U032 trigger;
    U032 action;
} GRNOTIFYDATA, *PGRNOTIFYDATA;

typedef struct _def_gr_get_notify_data_arg_000
{
    NV_HAL_ID id;
    PGRNOTIFYDATA pGrNotifyData;
    PHALHWINFO pHalHwInfo;
} GRGETNOTIFYDATAARG_000, *PGRGETNOTIFYDATAARG_000;

//
// GR_SET_OBJECT_CONTEXT_000 parameters.
//
typedef struct _def_gr_set_object_context_arg_000
{
    NV_HAL_ID id;
    U032 andMask;
    U032 orMask;
    U032 instance;
    U032 chid;
    PHALHWINFO pHalHwInfo;
} GRSETOBJECTCONTEXTARG_000, *PGRSETOBJECTCONTEXTARG_000;

//
// GR_LOAD_OVERRIDE_000 parameters.
//
typedef struct _def_gr_load_override_arg_000
{
    NV_HAL_ID id;
    U032 cmd;
    U032 value;
    PHALHWINFO pHalHwInfo;
} GRLOADOVERRIDEARG_000, *PGRLOADOVERRIDEARG_000;

// GR_LOAD_OVERRIDE commands.
#define GR_LOAD_OVERRIDE_DEBUG0         1
#define GR_LOAD_OVERRIDE_DEBUG1         2
#define GR_LOAD_OVERRIDE_DEBUG2         3
#define GR_LOAD_OVERRIDE_DEBUG3         4
#define GR_LOAD_OVERRIDE_SWATHCTL       5

#define SWATH_CONTROL_VALID_BIT         (1 << 31)

// HAL wrappers.
RM_STATUS nvHalGrControl(PHWINFO, U032);
RM_STATUS nvHalGrAlloc(PHWINFO, U032, U032, U032);
RM_STATUS nvHalGrFree(PHWINFO, U032, U032);
RM_STATUS nvHalGrGetExceptionData(PHWINFO, PGREXCEPTIONDATA);
RM_STATUS nvHalGrService(PHWINFO, U032, PGREXCEPTIONDATA);
RM_STATUS nvHalGrGetNotifyData(PHWINFO, PGRNOTIFYDATA);
RM_STATUS nvHalGrSetObjectContext(PHWINFO, U032, U032, U032, U032);
RM_STATUS nvHalGrLoadOverride(PHWINFO, U032, U032);

//--------------------------------------------------------------------
// Dma
//--------------------------------------------------------------------

// Current HAL dma interface revision ids.
#define DMA_CONTROL_000                 MKHALID(DMA_ENGINE_TAG,0x0001,0x0)
#define DMA_ALLOC_000                   MKHALID(DMA_ENGINE_TAG,0x0002,0x0)
#define DMA_FREE_000                    MKHALID(DMA_ENGINE_TAG,0x0003,0x0)
#define DMA_GET_INSTSIZE_000            MKHALID(DMA_ENGINE_TAG,0x0004,0x0)

typedef struct _def_dma_hal_obj_info DMAHALOBJINFO, *PDMAHALOBJINFO;

//
// DMA engine state info.
//
// We need to use a U032 here to ensure pointer size argreement
// across 16 and 32 bit land.
// 
typedef struct _def_dma_hal_info
{
    VOID_PTR pDmaHalObjInfos;     // pointer to list of dma context objects
} DMAHALINFO, *PDMAHALINFO;

//
// DMA_CONTROL_000 parameters.
//
typedef struct _def_dma_control_arg_000
{
    NV_HAL_ID id;
    U032 cmd;
    PHALHWINFO pHalHwInfo;
} DMACONTROLARG_000, *PDMACONTROLARG_000;

// DMA_CONTROL commands.
#define DMA_CONTROL_UPDATE              1
#define DMA_CONTROL_LOAD                2
#define DMA_CONTROL_UNLOAD              3
#define DMA_CONTROL_DESTROY             4
#define DMA_CONTROL_INIT                5

// Context dma address space identifiers.
typedef U032       NV_ADDRESS_SPACE;
#define ADDR_UNKNOWN 0              // Address space is unknown
#define ADDR_SYSMEM  1              // System memory (PCI)
#define ADDR_FBMEM   2              // Frame buffer memory space
#define ADDR_AGPMEM  3              // AGP memory space

struct _def_dma_hal_obj_info
{
    U032 classNum;                  // Class number
    U032 Flags;                     // API flags (coherency, access, etc)
    VOID_PTR BufferBase;            // Base address of client buffer
    U032 BufferSize;                // Size of client buffer
    U032 Instance;                  // Pointer to instance memory context
    U032 NumUnits;                  // Size of instance memory
    U032 PteCount;                  // Number of pages in dma context
    U032 PteAdjust;                 // Offset within first page
    U032 PteLimit;                  // Length of dma context
    U032 *PteArray;                 // Page data
    U032 MemoryClass;               // Class number of underlying memory
    NV_ADDRESS_SPACE AddressSpace;  // Address space of context
    PDMAHALOBJINFO Next;            // Next in list
};

//
// DMA_ALLOC_000 parameters.
//
typedef struct _def_dma_alloc_arg_000
{
    NV_HAL_ID id;
    PDMAHALOBJINFO pHalObjInfo;
    PHALHWINFO pHalHwInfo;
} DMAALLOCARG_000, *PDMAALLOCARG_000;

//
// DMA_FREE_000 parameters.
//
typedef struct _def_dma_free_arg_000
{
    NV_HAL_ID id;
    PDMAHALOBJINFO pHalObjInfo;
    PHALHWINFO pHalHwInfo;
} DMAFREEARG_000, *PDMAFREEARG_000;

//
// DMA_GETINSTSIZE_000 parameters.
//
typedef struct _def_dma_getinstsize_arg_000
{
    NV_HAL_ID id;
    PDMAHALOBJINFO pHalObjInfo;
    PHALHWINFO pHalHwInfo;
} DMAGETINSTSIZEARG_000, *PDMAGETINSTSIZEARG_000;

RM_STATUS nvHalDmaControl(PHWINFO, U032);
RM_STATUS nvHalDmaAlloc(PHWINFO, PDMAHALOBJINFO);
RM_STATUS nvHalDmaFree(PHWINFO, PDMAHALOBJINFO);
RM_STATUS nvHalDmaGetInstSize(PHWINFO, PDMAHALOBJINFO);

//--------------------------------------------------------------------
// Dac
//--------------------------------------------------------------------

// Current HAL dac interface revision ids.
#define DAC_CONTROL_000                 MKHALID(DAC_ENGINE_TAG,0x0001,0x0)
#define DAC_ALLOC_000                   MKHALID(DAC_ENGINE_TAG,0x0002,0x0)
#define DAC_FREE_000                    MKHALID(DAC_ENGINE_TAG,0x0003,0x0)
#define DAC_SET_START_ADDR_000          MKHALID(DAC_ENGINE_TAG,0x0004,0x0)
#define DAC_PROGRAMMCLK_000             MKHALID(DAC_ENGINE_TAG,0x0005,0x0)
#define DAC_PROGRAMNVCLK_000            MKHALID(DAC_ENGINE_TAG,0x0006,0x0)
#define DAC_PROGRAMPCLK_000             MKHALID(DAC_ENGINE_TAG,0x0007,0x0)
#define DAC_PROGRAMCURSOR_000           MKHALID(DAC_ENGINE_TAG,0x0008,0x0)
#define DAC_RASTERPOS_000               MKHALID(DAC_ENGINE_TAG,0x0009,0x0)
#define DAC_VALIDATEARBSETTINGS_000     MKHALID(DAC_ENGINE_TAG,0x000a,0x0)
#define DAC_UPDATEARBSETTINGS_000       MKHALID(DAC_ENGINE_TAG,0x000b,0x0)

//
// HAL VIDEO_LUT_CURSOR_DAC object.
//
typedef struct _def_video_lut_cursor_dac_hal_object
{
    U032 Head;

    struct {
        U032       VisibleImageWidth;    
        U032       VisibleImageHeight;   
        U032       HorizontalBlankStart;
        U032       HorizontalBlankWidth;
        U032       HorizontalSyncStart;
        U032       HorizontalSyncWidth;
        U032       VerticalBlankStart; 
        U032       VerticalBlankHeight; 
        U032       VerticalSyncStart; 
        U032       VerticalSyncHeight; 
        U032       TotalWidth; 
        U032       TotalHeight;     
        U032       PixelClock;
        U032       ColorFormat;                  
        U032       PixelDepth;
        struct {
            unsigned int DoubleScanMode         : 1;
            unsigned int InterlacedMode         : 1;
            unsigned int HorizontalSyncPolarity : 1;
            unsigned int VerticalSyncPolarity   : 1;
            unsigned int unusedBits1            : 12;
            unsigned int unusedBits2            : 16;
        } Format;
    }  Dac[2];

} VIDEO_LUT_CURSOR_DAC_HAL_OBJECT, *PVIDEO_LUT_CURSOR_DAC_HAL_OBJECT;

// This constant defines the maximum number of crtcs on any
// chip supported by this HAL revision.  An increase in this
// value means a new revision of the DAC section of the HAL.
//
#define MAX_CRTCS                       2

//
// There are MAX_CRTCS of these structures.
//
typedef struct _def_dac_crtc_hal_info
{
    #define DISPLAYTYPEBIT(d)   (1 << d)

    U032 DisplayType;
    U032 MonitorType;
    U032 DisplayTypesAllowed;
    U032 PCLKLimit8bpp;
    U032 PCLKLimit16bpp;
    U032 PCLKLimit32bpp;
    U032 RegOffset;
 
    PVIDEO_LUT_CURSOR_DAC_HAL_OBJECT pVidLutCurDac;

} DACCRTCHALINFO, *PDACCRTCHALINFO;

typedef struct _def_dac_hal_info
{
    U032 InputWidth;
    U032 Depth;
    U032 MClk;
    U032 VClk;
    U032 NVClk;
    U032 MPllM;
    U032 MPllN;
    U032 MPllO;
    U032 MPllP;
    U032 VPllM;
    U032 VPllN;
    U032 VPllO;
    U032 VPllP;
    U032 NVPllM;
    U032 NVPllN;
    U032 NVPllO;
    U032 NVPllP;
    U032 NumCrtcs;
    U032 Head2RegOwner;                 // cr44 shadow; toggled for CXXXXX IOs
    U032 InitialBootHead;
    U032 Enable256Burst;
    U032 PixelClock;
    DACCRTCHALINFO CrtcInfo[MAX_CRTCS];
} DACHALINFO, *PDACHALINFO;

// Until an EnableHead is called, the Head2RegOwner is unknown
#define HEAD2_OWNER_UNKNOWN    0xFFFFFFFF

//
// Use these for convenient access to HAL data from within RM (i.e.
// these require a pDev).
//
#define DACHALINFO(nvinfo,a)            (nvinfo->Dac.HalInfo.a)
#define GETCRTCHALINFO(nvinfo,c,a)      (nvinfo->Dac.HalInfo.CrtcInfo[c].a)

#define GETDISPLAYTYPE(nvinfo, c)		(nvinfo->Dac.HalInfo.CrtcInfo[c].DisplayType)
#define SETDISPLAYTYPE(nvinfo, c, v)	(nvinfo->Dac.HalInfo.CrtcInfo[c].DisplayType = v)

#define GETMONITORTYPE(nvinfo, c)		(nvinfo->Dac.HalInfo.CrtcInfo[c].MonitorType)
#define SETMONITORTYPE(nvinfo, c, v)	(nvinfo->Dac.HalInfo.CrtcInfo[c].MonitorType = v)

// HAL versions
#define HAL_GETDISPLAYTYPE(c)		    (pDacHalInfo->CrtcInfo[c].DisplayType)

//
// DAC_CONTROL_000 parameters.
//
typedef struct _def_dac_control_arg_000
{
    NV_HAL_ID id;
    U032 cmd;
    PHALHWINFO pHalHwInfo;
} DACCONTROLARG_000, *PDACCONTROLARG_000;

// DAC_CONTROL commands.
#define DAC_CONTROL_UPDATE              1
#define DAC_CONTROL_LOAD                2
#define DAC_CONTROL_UNLOAD              3
#define DAC_CONTROL_DESTROY             4
#define DAC_CONTROL_INIT                5

//
// Get head assignment for VIDEO_LUT_CURSOR_DAC_OBJECT.
//
#define DACGETHEAD(p)                   (p->HalObject.Head)

//
// DAC_ALLOC_000 parameters.
//
typedef struct _def_dac_alloc_arg_000
{
    NV_HAL_ID id;
    U032 classNum;
    U032 instance;
    U032 chid;
    VOID *pHalObjInfo;
    PHALHWINFO pHalHwInfo;
} DACALLOCARG_000, *PDACALLOCARG_000;

//
// DAC_FREE_000 parameters.
//
typedef struct _def_dac_free_arg_000
{
    NV_HAL_ID id;
    U032 classNum;
    U032 instance;
    U032 chid;
    VOID *pHalObjInfo;
    PHALHWINFO pHalHwInfo;
} DACFREEARG_000, *PDACFREEARG_000;

//
// DAC_SET_START_ADDR_000 parameters.
//
typedef struct _def_dac_set_start_addr_arg_000
{
    NV_HAL_ID id;
    U032 startAddr;
    VOID *pHalObjInfo;
    PHALHWINFO pHalHwInfo;
} DACSETSTARTADDRARG_000, *PDACSETSTARTADDRARG_000;

//
// DAC_PROGRAMMCLK_000
//
typedef struct _def_dac_program_mclk_000
{
    NV_HAL_ID id;
    PHALHWINFO pHalHwInfo;
} DACPROGRAMMCLKARG_000, *PDACPROGRAMMCLKARG_000;

//
// DAC_PROGRAMNVCLK_000
//
typedef struct _def_dac_program_nvclk_000
{
    NV_HAL_ID id;
    PHALHWINFO pHalHwInfo;
} DACPROGRAMNVCLKARG_000, *PDACPROGRAMNVCLKARG_000;

//
// DAC_PROGRAMPCLK_000
//
typedef struct _def_dac_program_pclk_000
{
    NV_HAL_ID id;
    PHALHWINFO pHalHwInfo;
    VOID    *pHalObjInfo;
    U032 PixelClock;
} DACPROGRAMPCLKARG_000, *PDACPROGRAMPCLKARG_000;

//
// DAC_PROGRAMCURSOR_000
//
typedef struct _def_dac_program_curosor_arg_000
{
    NV_HAL_ID id;
    PHALHWINFO pHalHwInfo;
    VOID    *pHalObjInfo;
    U032    startAddr; 
    U032    asi;          // Address space indicator: 0=Instance Mem, 1=Frame buffer
    U032    width; 
    U032    height; 
    U032    colorFormat;
} DACPROGRAMCURSORARG_000, *PDACPROGRAMCURSORARG_000;

#define DAC_ASI_INSTMEM 0
#define DAC_ASI_FRAMEBUFFER 1

//
// DAC_RASTERPOS_000
//
typedef struct _def_dac_raster_pos_arg_000
{
    NV_HAL_ID   id;
    PHALHWINFO  pHalHwInfo;
    VOID        *pHalObjInfo;
    U016        result;
} DACRASTERPOSARG_000, *PDACRASTERPOSARG_000;


//
// DAC_VALIDATEARBSETTINGS_000
//
typedef struct _def_dac_validate_arb_settings_arg_000
{
    NV_HAL_ID   id;
    PHALHWINFO  pHalHwInfo;
    U032        result;
    U032        bpp;
    U032        video_enabled;
    U032        mport_enabled;
    U032        vclk;
} DACVALIDATEARBSETTINGSARG_000, *PDACVALIDATEARBSETTINGSARG_000;

//
// DAC_UPDATEARBSETTINGS_000
//
typedef struct _def_dac_update_arb_settings_000
{
    NV_HAL_ID   id;
    PHALHWINFO  pHalHwInfo;
    VOID        *pHalObjInfo;
} DACUPDATEARBSETTINGSARG_000, *PDACUPDATEARBSETTINGSARG_000;


RM_STATUS nvHalDacControl(PHWINFO, U032);
RM_STATUS nvHalDacAlloc(PHWINFO, U032, U032, U032, VOID *);
RM_STATUS nvHalDacFree(PHWINFO, U032, U032, U032, VOID *);
RM_STATUS nvHalDacSetStartAddr(PHWINFO, U032, VOID *);
RM_STATUS nvHalDacProgramMClk(PHWINFO);
RM_STATUS nvHalDacProgramNVClk(PHWINFO);
RM_STATUS nvHalDacProgramPClk(PHWINFO, U032, VOID *);
RM_STATUS nvHalDacProgramCursorImage(PHWINFO, U032, U032, U032, U032, U032, VOID *);
RM_STATUS nvHalDacGetRasterPosition(PHWINFO, U016 *, VOID *);
RM_STATUS nvHalDacValidateArbSettings(PHWINFO, U032, U032, U032, U032, U032*);
RM_STATUS nvHalDacUpdateArbSettings(PHWINFO, VOID *);


//--------------------------------------------------------------------
// Mediaport
//--------------------------------------------------------------------

// Current HAL mediaport interface revision ids.
#define MP_CONTROL_000                  MKHALID(MP_ENGINE_TAG,0x0001,0x0)
#define MP_ALLOC_000                    MKHALID(MP_ENGINE_TAG,0x0002,0x0)
#define MP_FREE_000                     MKHALID(MP_ENGINE_TAG,0x0003,0x0)
#define MP_METHOD_000                   MKHALID(MP_ENGINE_TAG,0x0004,0x0)
#define MP_GET_EVENT_STATUS_000         MKHALID(MP_ENGINE_TAG,0x0005,0x0)
#define MP_SERVICE_EVENT_000            MKHALID(MP_ENGINE_TAG,0x0006,0x0)

//
// The data in this structure is shared by both the RM and HAL.
//
typedef struct _def_mp_hal_info
{
    U032 Enabled;
    U032 DetectEnable;
    U032 ImageBufferNumber;
    U032 MPCPresent;
    U032 MPCDeviceAddr;
} MPHALINFO, *PMPHALINFO;

//
// MP_CONTROL_000 parameters.
//
typedef struct _def_mp_control_arg_000
{
    NV_HAL_ID id;
    U032 cmd;
    PHALHWINFO pHalHwInfo;
} MPCONTROLARG_000, *PMPCONTROLARG_000;

// MP_CONTROL commands.
#define MP_CONTROL_UPDATE               1
#define MP_CONTROL_LOAD                 2
#define MP_CONTROL_UNLOAD               3
#define MP_CONTROL_DESTROY              4
#define MP_CONTROL_INIT                 5

//
// HAL NV_EXTERNAL_VIDEO_DECODER object.
//
typedef struct _def_video_decoder_hal_object
{
    U032    ImageDataWidth;
    U032    Task;
    U032    NullData;
    U032    NullValue;
    U032    ImageStartLine;
    struct {
        U032    FirstLine;         
        U032    Height;           
        U032    Offset;
        U032    Pitch;
        U032    Field;
        U032    Notify;
        U032    GetOffsetData;
        PDMAHALOBJINFO   CtxDma; 
    } SetVbi[2];
    struct {
        U032    WidthIn;         
        U032    HeightIn;
        U032    WidthOut;
        U032    HeightOut;
        U032    Offset;           
        U032    Pitch;
        U032    Field;
        U032    Notify;
        U032    GetOffsetData;
        U032    Info32;
        PDMAHALOBJINFO   CtxDma;
    } SetImage[2];
    U032    lastWidthIn;
    U032    lastWidthOut;
    U032    lastHeightIn;
    U032    lastHeightOut;
    U032    lastImageStartLine;  
    U032    lastImageConfig;
} VIDEODECODERHALOBJECT, *PVIDEODECODERHALOBJECT;

#define EVENT_PROCESSED_VBI 0
#define EVENT_PROCESSED_IMAGE 1

//
// HAL NV_EXTERNAL_VIDEO_DECOMPRESSOR object.
//
typedef struct _def_video_decompressor_hal_object
{
    struct {
        U032    Offset;         
        U032    Size;           
        U032    Notify;
        PDMAHALOBJINFO   CtxDma;
    } ReadData[2];
    struct {
        U032    Offset;         
        U032    Size;           
        U032    FormatIn;
        U032    FormatOut;
        U032    Notify;
        PDMAHALOBJINFO   CtxDma;
    } WriteImage[2];
} VIDEODECOMPRESSORHALOBJECT, *PVIDEODECOMPRESSORHALOBJECT;

//
// HAL NV_EXTERNAL_PARALLEL_BUS object.
//
typedef struct _def_parallel_bus_hal_object
{
    U032    BusType;
    struct {
        U016    DataSize;
        U016    AddressSize;
        U032    Address;
        U032    Data;
    } Write;
    struct {
        U016    DataSize;
        U016    AddressSize;
        U032    Address;
        U032    Notify;
        U032    ReadData;
    } Read;
} PARALLELBUSHALOBJECT, *PPARALLELBUSHALOBJECT;

//
// MP_ALLOC_000 parameters.
//
typedef struct _def_mp_alloc_arg_000
{
    NV_HAL_ID id;
    U032 classNum;
    U032 instance;
    U032 chid;
    VOID *pHalObjInfo;
    PHALHWINFO pHalHwInfo;
} MPALLOCARG_000, *PMPALLOCARG_000;

//
// MP_FREE_000 parameters.
//
typedef struct _def_mp_free_arg_000
{
    NV_HAL_ID id;
    U032 classNum;
    U032 instance;
    U032 chid;
    VOID *pHalObjInfo;
    PHALHWINFO pHalHwInfo;
} MPFREEARG_000, *PMPFREEARG_000;

//
// MP_METHOD_000 parameters.
//
typedef struct _def_mp_method_arg_000
{
    NV_HAL_ID id;
    U032 classNum;
    VOID *pHalObjInfo;
    U032 offset;
    U032 data;
    U032 mthdStatus;
    PHALHWINFO pHalHwInfo;
} MPMETHODARG_000, *PMPMETHODARG_000;

//
// MP_GET_EVENT_STATUS_000 parameters.
//
typedef struct _def_mp_get_event_status_arg_000
{
    NV_HAL_ID id;
    U032 classNum;
    VOID *pHalObjInfo;
    U032 events;
    V032 intrStatus;
    PHALHWINFO pHalHwInfo;
} MPGETEVENTSTATUSARG_000, *PMPGETEVENTSTATUSARG_000;

//
// The events field holds a class-dependent bit mask
// specifying which "event" is to be processed.  For the decoder
// class, an event is a vbi or image buffer completion.  For the
// parallel bus class, it's an interrupt notify completion.

//
// The class04d decoder class uses 4 bits (1:0 for vbi, 3:2 for image).
//
#define CLASS04D_VBI_EVENTS_BASE            0
#define CLASS04D_IMAGE_EVENTS_BASE          2
#define CLASS04D_VBI_EVENT(n)               (1 << (CLASS04D_VBI_EVENTS_BASE+n))
#define CLASS04D_IMAGE_EVENT(n)             (1 << (CLASS04D_IMAGE_EVENTS_BASE+n))

//
// The class04e decompressor class uses 6 bits.
//
#define CLASS04E_VIDEO_EVENTS_BASE          0
#define CLASS04E_AUDIO_EVENTS_BASE          2
#define CLASS04E_IMAGE_EVENTS_BASE          4
#define CLASS04E_VIDEO_EVENT(n)             (1 << (CLASS04E_VIDEO_EVENTS_BASE+n))
#define CLASS04E_AUDIO_EVENT(n)             (1 << (CLASS04E_AUDIO_EVENTS_BASE+n))
#define CLASS04E_IMAGE_EVENT(n)             (1 << (CLASS04E_IMAGE_EVENTS_BASE+n))

//
// The parallel bus class uses a single event constant.
//
#define CLASS04F_PBUS_EVENT                 1

//
// MP_SERVICE_EVENT_000 parameters.
//
typedef struct _def_mp_service_event_arg_000
{
    NV_HAL_ID id;
    U032 classNum;
    VOID *pHalObjInfo;
    U032 event;
    V032 intrStatus;
    PHALHWINFO pHalHwInfo;
} MPSERVICEEVENTARG_000, *PMPSERVICEEVENTARG_000;

RM_STATUS nvHalMpControl(PHWINFO, U032);
RM_STATUS nvHalMpAlloc(PHWINFO, U032, U032, U032, VOID *);
RM_STATUS nvHalMpFree(PHWINFO, U032, U032, U032, VOID *);
RM_STATUS nvHalMpMethod(PHWINFO, U032, VOID *, U032, U032, U032 *);
RM_STATUS nvHalMpGetEventStatus(PHWINFO, U032, VOID *, U032 *, V032 *);
RM_STATUS nvHalMpServiceEvent(PHWINFO, U032, VOID *, U032, V032 *);

//--------------------------------------------------------------------
// Video
//--------------------------------------------------------------------

// Current HAL video interface revision ids.
#define VIDEO_CONTROL_000               MKHALID(VIDEO_ENGINE_TAG,0x0001,0x0)
#define VIDEO_ALLOC_000                 MKHALID(VIDEO_ENGINE_TAG,0x0002,0x0)
#define VIDEO_FREE_000                  MKHALID(VIDEO_ENGINE_TAG,0x0003,0x0)
#define VIDEO_METHOD_000                MKHALID(VIDEO_ENGINE_TAG,0x0004,0x0)
#define VIDEO_GET_EVENT_STATUS_000      MKHALID(VIDEO_ENGINE_TAG,0x0005,0x0)
#define VIDEO_SERVICE_EVENT_000         MKHALID(VIDEO_ENGINE_TAG,0x0006,0x0)

//
// The data in this structure is shared by both the RM and HAL.
//
typedef struct _def_video_hal_info
{
    U032 Head;
    U032 UpdateFlags;
    U032 FinishFlags;
    U032 Enabled;
    U032 ColorKeyEnabled;
    U032 ScaleFactor;       // 12.20
    U032 VideoStart;
    U032 VideoSize;
    U032 VideoScaleX;       // nv10's scale factors are 20/21 bits long
    U032 VideoScaleY;       // and need to be kept in separate dwords
    U032 VideoColorFormat;
    U032 VideoColor;
    U032 OverlayMaxDownscale_768;
    U032 OverlayMaxDownscale_1280;
    U032 OverlayMaxDownscale_1920;
    U032 CustomizationCode;
    VOID_PTR ActiveVideoOverlayObject;
} VIDEOHALINFO, *PVIDEOHALINFO;

//
// VIDEO_CONTROL_000 parameters.
//
typedef struct _def_video_control_arg_000
{
    NV_HAL_ID id;
    U032 cmd;
    PHALHWINFO pHalHwInfo;
} VIDEOCONTROLARG_000, *PVIDEOCONTROLARG_000;

// VIDEO_CONTROL commands.
#define VIDEO_CONTROL_UPDATE            1
#define VIDEO_CONTROL_LOAD              2
#define VIDEO_CONTROL_UNLOAD            3
#define VIDEO_CONTROL_DESTROY           4
#define VIDEO_CONTROL_INIT              5
#define VIDEO_CONTROL_ENABLE            6
#define VIDEO_CONTROL_DISABLE           7

//
// Video buffer kick off interface.
//
typedef RM_STATUS (*PVIDEOKICKOFFPROC)(PHALHWINFO, VOID *, U032);

//
// Video engine defines.
//
#define MAX_OVERLAY_BUFFERS             2

#define OVERLAY_BUFFER_IDLE             0
#define OVERLAY_BUFFER_BUSY             1
#define OVERLAY_BUFFER_NOTIFY_PENDING   2
#define OVERLAY_BUFFER_STOP_PENDING     3

//
// HAL NV_VIDEO_FROM_MEMORY object.
//
typedef struct _def_video_from_mem_hal_object
{
    PVIDEOKICKOFFPROC KickOffProc;
    U032 InitState;
    U032 Format;
    struct {
        U032 State;
        U032 Start;
        U032 Pitch;
        U032 Length;
        U032 Width;
        U032 VideoStart;
        U032 VideoSize;
        U032 VideoScaleX;
        U032 VideoScaleY;
        U032 VideoColorFormat;
        U032 VideoColor;
        PDMAHALOBJINFO bufferCtxDma;
    } Buffer[MAX_OVERLAY_BUFFERS];
} VIDEOFROMMEMHALOBJECT, *PVIDEOFROMMEMHALOBJECT;

//
// HAL NV_VIDEO_SCALER object.
//
typedef struct _def_video_scaler_hal_object
{
    V032 DeltaDuDx;
    V032 DeltaDvDy;
    V032 xStart;   
    V032 yStart;   
} VIDEOSCALERHALOBJECT, *PVIDEOSCALERHALOBJECT;

//
// HAL NV_VIDEO_COLOR_KEY object.
//
typedef struct _def_video_colorkey_hal_object
{
    U032 ColorFormat;
    U032 Color;
    U032 xClipMin;
    U032 xClipMax;
    U032 yClipMin;
    U032 yClipMax; 
} VIDEOCOLORKEYHALOBJECT, *PVIDEOCOLORKEYHALOBJECT;

//
// HAL video overlay object for use by classes:
//   NV04_VIDEO_OVERLAY
//   NV10_VIDEO_OVERLAY
//

typedef struct _def_video_overlay_hal_object
{
    PVIDEOKICKOFFPROC KickOffProc;
	U032 PvideoBufferCopy;
	U032 PvideoStopActive;
    struct {
        PDMAHALOBJINFO OverlayCtxDma;
		U032 ColorKey;
		U032 Luminance;
		U032 Chrominance;
        U032 Offset;                       
        U016 SizeIn_width;
        U016 SizeIn_height;
        U016 SizeOut_width;
        U016 SizeOut_height;
        U016 PointIn_s;
        U016 PointIn_t;
        U016 PointOut_x;
        U016 PointOut_y;
        U032 OverlayStart;
        U032 DsDx;
        U032 DtDy;
        U032 ScaleFactor;
        U032 WindowStart; 
        U032 WindowSize;
        U032 Pitch;                        
        U032 OverlayFormat;
        U032 DisplayWhen;
        U032 State;
		U016 FormatPitch;
		U016 FormatColor;
		U016 FormatDisplay;
		U016 FormatMatrix;
    } Overlay[MAX_OVERLAY_BUFFERS];
} VIDEO_OVERLAY_HAL_OBJECT, *PVIDEO_OVERLAY_HAL_OBJECT;

#define OVERLAY_BUFFER_IS_IDLE(obj,buffer) (obj->Overlay[buffer].State == OVERLAY_BUFFER_IDLE)

//
// VIDEO_ALLOC_000 parameters.
//
typedef struct _def_video_alloc_arg_000
{
    NV_HAL_ID id;
    U032 classNum;
    U032 instance;
    U032 chid;
    VOID *pHalObjInfo;
    PHALHWINFO pHalHwInfo;
} VIDEOALLOCARG_000, *PVIDEOALLOCARG_000;

//
// VIDEO_FREE_000 parameters.
//
typedef struct _def_video_free_arg_000
{
    NV_HAL_ID id;
    U032 classNum;
    U032 instance;
    U032 chid;
    VOID *pHalObjInfo;
    PHALHWINFO pHalHwInfo;
} VIDEOFREEARG_000, *PVIDEOFREEARG_000;

//
// VIDEO_METHOD_000 parameters.
//
typedef struct _def_video_method_arg_000
{
    NV_HAL_ID id;
    U032 classNum;
    VOID *pHalObjInfo;
    U032 offset;
    U032 data;
    U032 mthdStatus;
    PHALHWINFO pHalHwInfo;
} VIDEOMETHODARG_000, *PVIDEOMETHODARG_000;

//
// VIDEO_GET_EVENT_STATUS_000 parameters.
//
typedef struct _def_video_get_event_status_arg_000
{
    NV_HAL_ID id;
    U032 classNum;
    VOID *pHalObjInfo;
    U032 events;
    V032 intrStatus;
    PHALHWINFO pHalHwInfo;
} VIDEOGETEVENTSTATUSARG_000, *PVIDEOGETEVENTSTATUSARG_000;

//
// VIDEO_SERVICE_EVENT_000 parameters.
//
typedef struct _def_video_service_event_arg_000
{
    NV_HAL_ID id;
    U032 classNum;
    VOID *pHalObjInfo;
    U032 events;
    V032 intrStatus;
    PHALHWINFO pHalHwInfo;
} VIDEOSERVICEEVENTARG_000, *PVIDEOSERVICEEVENTARG_000;

RM_STATUS nvHalVideoControl(PHWINFO, U032);
RM_STATUS nvHalVideoAlloc(PHWINFO, U032, U032, U032, VOID *);
RM_STATUS nvHalVideoFree(PHWINFO, U032, U032, U032, VOID *);
RM_STATUS nvHalVideoMethod(PHWINFO, U032, VOID *, U032, U032, U032 *);
RM_STATUS nvHalVideoGetEventStatus(PHWINFO, U032, VOID *, U032 *, V032 *);
RM_STATUS nvHalVideoServiceEvent(PHWINFO, U032, VOID *, U032, V032 *);

//--------------------------------------------------------------------
// HAL device data.
//--------------------------------------------------------------------

//
// Each engine in the chip has the following state (setup by the RM):
//
//  - HalInfo       = Pointer to state held in pDev (shared between RM and HAL)
//  - HalPvtInfo    = Pointer to malloc'd system memory for engine state that
//                    is "private" to the HAL
//  - MallocBuffer  = Pointer to temporary malloced buffer for engine state
//                    transitions (e.g. save areas for STATE_LOAD calls)
//  - InstMem       = Offset into instance memory for engine state needed
//                    by hardware
//
// The amount of space (if any) to setup for these fields is determined
// by the contents of the chip-specific engine descriptor table (see
// kernel/inc/nvromdat.h).
//
struct _def_hal_hw_info
{
    PHWREG nvBaseAddr;                  // pointer to mapped registers
    PHWREG fbBaseAddr;                  // pointer to mapped framebuffer

    PHALRMFUNCS pHalRmFuncs;            // pointer to rm services table
    VOID_PTR pDeviceId;                 // pDev reference handle

    PPROCESSORHALINFO pProcessorHalInfo;
    PPRAMHALINFO pPramHalInfo;

    PMCHALINFO pMcHalInfo;
    VOID_PTR pMcHalPvtInfo;
    VOID_PTR pMcMallocBuffer;
    U032 mcInstMem;

    PFIFOHALINFO pFifoHalInfo;
    VOID_PTR pFifoHalPvtInfo;
    VOID_PTR pFifoMallocBuffer;
    U032 fifoInstMem;

    PFBHALINFO pFbHalInfo;
    VOID_PTR pFbHalPvtInfo;
    VOID_PTR pFbMallocBuffer;
    U032 fbInstMem;

    PGRHALINFO pGrHalInfo;
    VOID_PTR pGrHalPvtInfo;
    VOID_PTR pGrMallocBuffer;
    U032 grInstMem;

    PDMAHALINFO pDmaHalInfo;
    VOID_PTR pDmaHalPvtInfo;
    VOID_PTR pDmaMallocBuffer;
    U032 dmaInstMem;

    PDACHALINFO pDacHalInfo; 
    VOID_PTR pDacHalPvtInfo;
    VOID_PTR pDacMallocBuffer;
    U032 dacInstMem;

    PMPHALINFO pMpHalInfo;
    VOID_PTR pMpHalPvtInfo;
    VOID_PTR pMpMallocBuffer;
    U032 mpInstMem;

    PVIDEOHALINFO pVideoHalInfo;
    VOID_PTR pVideoHalPvtInfo;
    VOID_PTR pVideoMallocBuffer;
    U032 videoInstMem;
};

//--------------------------------------------------------------------
// HAL function table.
// The format of this table is ROM revision dependent.
//--------------------------------------------------------------------
typedef struct _def_halfuncs_000
{
    // mc interfaces
    RM_STATUS (*_nvHalMcControl)(VOID *);
    RM_STATUS (*_nvHalMcPower)(VOID *);

    // fifo interfaces
    RM_STATUS (*_nvHalFifoControl)(VOID *);
    RM_STATUS (*_nvHalFifoAllocPio)(VOID *);
    RM_STATUS (*_nvHalFifoAllocDma)(VOID *);
    RM_STATUS (*_nvHalFifoFree)(VOID *);
    RM_STATUS (*_nvHalFifoGetExceptionData)(VOID *);
    RM_STATUS (*_nvHalFifoService)(VOID *);
    RM_STATUS (*_nvHalFifoAccess)(VOID *);
    RM_STATUS (*_nvHalFifoHashAdd)(VOID *);
    RM_STATUS (*_nvHalFifoHashDelete)(VOID *);
    RM_STATUS (*_nvHalFifoHashFunc)(VOID *);
    RM_STATUS (*_nvHalFifoHashSearch)(VOID *);

    // framebuffer interfaces
    RM_STATUS (*_nvHalFbControl)(VOID *);
    RM_STATUS (*_nvHalFbAlloc)(VOID *);
    RM_STATUS (*_nvHalFbFree)(VOID *);
    RM_STATUS (*_nvHalFbSetAllocParameters)(VOID *);
    RM_STATUS (*_nvHalFbGetSurfacePitch)(VOID *);
    RM_STATUS (*_nvHalFbGetSurfaceDimensions)(VOID *);
    RM_STATUS (*_nvHalFbLoadOverride)(VOID *);

    // graphics interfaces
    RM_STATUS (*_nvHalGrControl)(VOID *);
    RM_STATUS (*_nvHalGrAlloc)(VOID *);
    RM_STATUS (*_nvHalGrFree)(VOID *);
    RM_STATUS (*_nvHalGrGetExceptionData)(VOID *);
    RM_STATUS (*_nvHalGrService)(VOID *);
    RM_STATUS (*_nvHalGrGetNotifyData)(VOID *);
    RM_STATUS (*_nvHalGrSetObjectContext)(VOID *);
    RM_STATUS (*_nvHalGrLoadOverride)(VOID *);

    // dma interfaces
    RM_STATUS (*_nvHalDmaControl)(VOID *);
    RM_STATUS (*_nvHalDmaAlloc)(VOID *);
    RM_STATUS (*_nvHalDmaFree)(VOID *);
    RM_STATUS (*_nvHalDmaGetInstSize)(VOID *);

    // dac interfaces
    RM_STATUS (*_nvHalDacControl)(VOID *);
    RM_STATUS (*_nvHalDacAlloc)(VOID *);
    RM_STATUS (*_nvHalDacFree)(VOID *);
    RM_STATUS (*_nvHalDacSetStartAddr)(VOID *);
    RM_STATUS (*_nvHalDacProgramMClk)(VOID *);
    RM_STATUS (*_nvHalDacProgramNVClk)(VOID *);
    RM_STATUS (*_nvHalDacProgramPClk)(VOID *);
    RM_STATUS (*_nvHalDacProgramCursorImage)(VOID *);
    RM_STATUS (*_nvHalDacGetRasterPosition)(VOID *);
    RM_STATUS (*_nvHalDacValidateArbSettings)(VOID *);
    RM_STATUS (*_nvHalDacUpdateArbSettings)(VOID *);

    // media port interfaces
    RM_STATUS (*_nvHalMpControl)(VOID *);
    RM_STATUS (*_nvHalMpAlloc)(VOID *);
    RM_STATUS (*_nvHalMpFree)(VOID *);
    RM_STATUS (*_nvHalMpMethod)(VOID *);
    RM_STATUS (*_nvHalMpGetEventStatus)(VOID *);
    RM_STATUS (*_nvHalMpServiceEvent)(VOID *);

    // video interfaces
    RM_STATUS (*_nvHalVideoControl)(VOID *);
    RM_STATUS (*_nvHalVideoAlloc)(VOID *);
    RM_STATUS (*_nvHalVideoFree)(VOID *);
    RM_STATUS (*_nvHalVideoMethod)(VOID *);
    RM_STATUS (*_nvHalVideoGetEventStatus)(VOID *);
    RM_STATUS (*_nvHalVideoServiceEvent)(VOID *);
} HALFUNCS_000, *PHALFUNCS_000;

typedef VOID *PHALFUNCS;

#define HALFUNC_000(i)                  (*((PHALFUNCS_000)pDev->pHalFuncs)->i)

extern HALFUNCS_000 NV04_HalFuncs_000;
extern HALFUNCS_000 NV10_HalFuncs_000;
extern HALFUNCS_000 NV20_HalFuncs_000;

//--------------------------------------------------------------------
// RM entry points for use by HAL.
//--------------------------------------------------------------------

struct _def_hal_rm_funcs_000
{
    // interrupt service request interface
    //   engine, phalhwinfo
    RM_STATUS (*_nvHalRmServiceIntr)(VOID *, U032);

    // debug print routines
    VOID (*_nvHalRmPrintString) (VOID *, U032, char*);
    VOID (*_nvHalRmPrintValue) (VOID *, U032, U032);
    VOID (*_nvHalRmPrintStringValue) (VOID *, U032, char*, U032);
    VOID (*_nvHalRmPrintStringPtr) (VOID *, U032, char*, VOID*);
    VOID (*_nvHalRmPrintStringVal64) (VOID *, U032, char*, U064);

    // register i/o interfaces
    VOID (*_nvHalRmRegWr08) (VOID *, U032, U008);
    U008 (*_nvHalRmRegRd08) (VOID *, U032);

    //   *address = value
    VOID (*_nvHalRmRegWr32) (VOID *, U032, U032);
    //   value = *address
    U032 (*_nvHalRmRegRd32) (VOID *, U032);

    VOID (*_nvHalRmBreakPoint) (VOID *);
    RM_STATUS (*_nvHalRmDelay) (VOID *, U032);

    // i2c read/write interfaces
    RM_STATUS (*_nvHalRmI2cRead) (VOID *, U032, U008, U016, U008 *, U016, U008 *);
    RM_STATUS (*_nvHalRmI2cWrite) (VOID *, U032, U008, U016, U008 *, U016, U008 *);
};

// from kernel/hal/halrm.c
extern HALRMFUNCS_000 HalRmFuncs_000;

// 
// RM service macros.
// 

#define HALRMSERVICEINTR(p,e)   (*((PHALRMFUNCS_000)((PHALHWINFO)p)->pHalRmFuncs)->_nvHalRmServiceIntr)((PHALHWINFO)p->pDeviceId,e)

#define HAL_GR_IDLE(p) \
    while ((volatile U032)REG_RD32(NV_PGRAPH_STATUS))  {         \
        V032 pmc;                                                \
        pmc = REG_RD32(NV_PMC_INTR_0);                           \
        if (pmc & DRF_DEF(_PMC, _INTR_0, _PGRAPH, _PENDING)) {   \
            (void)HALRMSERVICEINTR((PHALHWINFO)p,GR_ENGINE_TAG); \
        }                                                        \
        if (pmc & DRF_DEF(_PMC, _INTR_0, _PCRTC, _PENDING)) {    \
            (void)HALRMSERVICEINTR((PHALHWINFO)p,DAC_ENGINE_TAG);\
        }                                                        \
    }

//
// RM ic2 read/write macros.
//
#define HALRMI2CREAD(p,id,chipadr,adrlen,addr,datalen,data) \
    (*((PHALRMFUNCS_000)((PHALHWINFO)p)->pHalRmFuncs)->_nvHalRmI2cRead)((PHALHWINFO)p->pDeviceId,id,chipadr,adrlen,addr,datalen,data)
#define HALRMI2CWRITE(p,id,chipadr,adrlen,addr,datalen,data) \
    (*((PHALRMFUNCS_000)((PHALHWINFO)p)->pHalRmFuncs)->_nvHalRmI2cWrite)((PHALHWINFO)p->pDeviceId,id,chipadr,adrlen,addr,datalen,data)

//--------------------------------------------------------------------
// RM routines.
//--------------------------------------------------------------------

// kernel/hal/halinit.c
RM_STATUS initHal(PHWINFO);
RM_STATUS initHalMappings(PHWINFO);
RM_STATUS destroyHal(PHWINFO);
RM_STATUS allocHalEngineInstMem(PHWINFO);
RM_STATUS freeHalEngineInstMem(PHWINFO);

#endif // _NVHAL_H_
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Microsoft Xbox (1.00.4400) [April 2002] [src]\private\ntos\video\nvx\drivers\resman\kernel\inc\nvromdat.h ===
#ifndef _NVROMDAT_H_
#define _NVROMDAT_H_

 /***************************************************************************\
|*                                                                           *|
|*        Copyright (c) 1993-2000 NVIDIA, Corp.  All rights reserved.        *|
|*                                                                           *|
|*     NOTICE TO USER:   The source code  is copyrighted under  U.S. and     *|
|*     international laws.   NVIDIA, Corp. of Sunnyvale, California owns     *|
|*     the copyright  and as design patents  pending  on the design  and     *|
|*     interface  of the NV chips.   Users and possessors of this source     *|
|*     code are hereby granted  a nonexclusive,  royalty-free  copyright     *|
|*     and  design  patent license  to use this code  in individual  and     *|
|*     commercial software.                                                  *|
|*                                                                           *|
|*     Any use of this source code must include,  in the user documenta-     *|
|*     tion and  internal comments to the code,  notices to the end user     *|
|*     as follows:                                                           *|
|*                                                                           *|
|*     Copyright (c) 1993-2000  NVIDIA, Corp.    NVIDIA  design  patents     *|
|*     pending in the U.S. and foreign countries.                            *|
|*                                                                           *|
|*     NVIDIA, CORP.  MAKES  NO REPRESENTATION ABOUT  THE SUITABILITY OF     *|
|*     THIS SOURCE CODE FOR ANY PURPOSE.  IT IS PROVIDED "AS IS" WITHOUT     *|
|*     EXPRESS OR IMPLIED WARRANTY OF ANY KIND.  NVIDIA, CORP. DISCLAIMS     *|
|*     ALL WARRANTIES  WITH REGARD  TO THIS SOURCE CODE,  INCLUDING  ALL     *|
|*     IMPLIED   WARRANTIES  OF  MERCHANTABILITY  AND   FITNESS   FOR  A     *|
|*     PARTICULAR  PURPOSE.   IN NO EVENT SHALL NVIDIA, CORP.  BE LIABLE     *|
|*     FOR ANY SPECIAL, INDIRECT, INCIDENTAL,  OR CONSEQUENTIAL DAMAGES,     *|
|*     OR ANY DAMAGES  WHATSOEVER  RESULTING  FROM LOSS OF USE,  DATA OR     *|
|*     PROFITS,  WHETHER IN AN ACTION  OF CONTRACT,  NEGLIGENCE OR OTHER     *|
|*     TORTIOUS ACTION, ARISING OUT  OF OR IN CONNECTION WITH THE USE OR     *|
|*     PERFORMANCE OF THIS SOURCE CODE.                                      *|
|*                                                                           *|
 \***************************************************************************/

/************************ NV ROM Defines and Structures ********************\
*                                                                           *
* Module: nvromdat.h                                                        *
*       NV RM/HAL ROM data table formats.                                   *
*                                                                           *
*****************************************************************************
*                                                                           *
* History:                                                                  *
*                                                                           *
\***************************************************************************/

//
// Describes format of data tables found in ROM.
//
// Currently two such tables:  engine descriptors and class descriptors.
//

#include <nvhal.h>

//
// Engine descriptor instruction opcodes (4 bits wide).
//
#define ENGDECL_INSTR                   0x0
#define ENGMALLOC_INSTR                 0x1
#define ENGINSTMALLOC_INSTR             0x2

//
// Engine declaration instruction
//
// There is one engine descriptor instruction for each engine in the
// chip:
//
//  31      27      25      21                                       0 
//  .-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
//  | 4 bits| 4 bits| 4 bits| 20 bits                                 |
//  .-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
//   Opcode  Tag     Hash     Obj inst size
//
// Opcode: ENGDECL_INSTR
// Tag:
//   Unique engine tag.  Used by class headers.
// Hash:
//   NV_RAMHT_ENGINE bits (if any) for objects managed by engine.
// Object instance size:
//   Default instmem size (in paragraphs) to alloc for objects managed
//   by engine.  This value can be increased for a given class using the
//   CLASSINSTMALLOC_INSTR (see below).
//

typedef U032 ENGINEDESCRIPTOR, *PENGINEDESCRIPTOR;

#define ENGDECL_OBJINSTSZ               19:0
#define ENGDECL_OBJRAMHT                23:20
#define ENGDECL_TAG                     27:24
#define ENGDECL_OPCODE                  31:28

#define MKENGDECL(tag,ht,osz) \
    (ENGDECL_INSTR << SF_SHIFT(ENGDECL_OPCODE) | \
     tag << SF_SHIFT(ENGDECL_TAG) | \
     ht << SF_SHIFT(ENGDECL_OBJRAMHT) | \
     osz << SF_SHIFT(ENGDECL_OBJINSTSZ))

// WARNING: these macros depend on <nvrm.h>
#define ENGDECL_FIELD(desc,field)       (((U032)desc >> SF_SHIFT(ENGDECL ## field)) & SF_MASK(ENGDECL ## field))

//
// Engine malloc instruction
//
// The engine malloc instruction is used to describe system memory
// requirements for the engine.
//
//  31      27      23      21      17                               0 
//  .-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
//  | 4 bits| 4 bits| 4 bits| 20 bits                                 |
//  .-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
//   Opcode  Tag     Type    Size
//
// Opcode: ENGMALLOC_OPCODE
// Tag: 
//   Unique engine tag.
// Type:
//   Describes purpose of memory, indicating when
//   memory should be allocated/freed.
// Size:
//   Amount of memory (in dwords).
//

#define ENGMALLOC_SIZE                  19:0
#define ENGMALLOC_TYPE                  23:20
#define ENGMALLOC_TAG                   27:24
#define ENGMALLOC_OPCODE                31:28

#define MKENGMALLOC(tag,type,sz) \
    (ENGMALLOC_INSTR << SF_SHIFT(ENGMALLOC_OPCODE) | \
     tag << SF_SHIFT(ENGMALLOC_TAG) | \
     type << SF_SHIFT(ENGMALLOC_TYPE) | \
     sz << SF_SHIFT(ENGMALLOC_SIZE))

// WARNING: these macros depend on <nvrm.h>
#define ENGMALLOC_FIELD(desc,field)    (((U032)desc >> SF_SHIFT(ENGMALLOC ## field)) & SF_MASK(ENGMALLOC ## field))

//
// Engine malloc types:
//   TYPE_PRIVATE
//     Buffer should be allocated/freed when resman starts up
//     and shuts down.  Used for chip-dependent private state.
//   TYPE_INIT
//     Buffer should be allocated/freed across call to INIT
//     engine.
//   TYPE_DESTROY
//     Buffer should be allocated/freed across call to DESTROY
//     engine.
//
#define ENGMALLOC_TYPE_PRIVATE          0x0
#define ENGMALLOC_TYPE_INIT             0x1
#define ENGMALLOC_TYPE_DESTROY          0x2

//
// Engine instmem alloc instruction
//
// The engine instmem alloc instruction is used to describe instance
// memory requirements for the engine.  Up to one megabyte of instance
// memory can be requested with this instruction (supporting up to a
// 4K alignment).
//
//  31      27      23              15                               0 
//  .-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
//  | 4 bits| 4 bits| 8 bits        | 16 bits                         |
//  .-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
//    Opcode  Tag     Align            Size
//
// Opcode: ENGINSTMALLOC_OPCODE
// Tag: 
//   Unique engine tag.
// Align:
//   Alignment requirements of allocation (in paragraphs).
//   A value of 0 indicates the default alignment (1 paragraph).
// Size:
//   Amount of memory (in paragraphs).
//
#define ENGINSTMALLOC_SIZE              15:0
#define ENGINSTMALLOC_ALIGN             23:16
#define ENGINSTMALLOC_TAG               27:24
#define ENGINSTMALLOC_OPCODE            31:28

#define MKENGINSTMALLOC(tag,align,sz) \
    (ENGINSTMALLOC_INSTR << SF_SHIFT(ENGINSTMALLOC_OPCODE) | \
     tag << SF_SHIFT(ENGINSTMALLOC_TAG) | \
     align << SF_SHIFT(ENGINSTMALLOC_ALIGN) | \
     sz << SF_SHIFT(ENGINSTMALLOC_SIZE))

// WARNING: these macros depend on <nvrm.h>
#define ENGINSTMALLOC_FIELD(desc,field)    (((U032)desc >> SF_SHIFT(ENGINSTMALLOC ## field)) & SF_MASK(ENGINSTMALLOC ## field))

//
// Class descriptor instruction opcodes (4 bits wide).
//
#define CLASSDECL_INSTR                 0x0
#define CLASSINSTMALLOC_INSTR           0x1

//
// Class declaration instruction
//
//  31      27      21   21          15                               0 
//  .-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
//  |4 bits |4 bits | 8 bits        | 16 bits                         |
//  .-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
//   Opcode  Tag     Lock            Class number
// 
// Opcode: CLASSDECL_INSTR
// Tag: engine tag
// Lock: allocation restriction
// Class number: class number
//

typedef U032 CLASSDESCRIPTOR, *PCLASSDESCRIPTOR;

#define CLASSDECL_CLASS                 15:0
#define CLASSDECL_LOCK                  23:16
#define CLASSDECL_TAG                   27:24
#define CLASSDECL_OPCODE                31:28

#define MKCLASSDECL(tag,lock,class) \
    (CLASSDECL_INSTR << SF_SHIFT(CLASSDECL_OPCODE) | \
     tag << SF_SHIFT(CLASSDECL_TAG) | \
     lock << SF_SHIFT(CLASSDECL_LOCK) | \
     class << SF_SHIFT(CLASSDECL_CLASS))

// WARNING: these macros depend on <nvrm.h>
#define CLASSDECL_FIELD(desc,field)     (((U032)desc >> SF_SHIFT(CLASSDECL ## field)) & SF_MASK(CLASSDECL ## field))

//
// No allocation restrictions for the class.
//
#define NO_LOCK                         0xff

//
// Class instance memory alloc instruction
//
//  31      27              19                                       0 
//  .-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
//  | 4 bits| 8 bits        | 20 bits                                 |
//  .-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
//   Opcode  Alignment       Size
//
// Opcode: CLASSINSTMALLOC_INSTR
// Alignment:
//   Instance memory alignment (in paragraphs).  A value of 0 indicates
//   the default alignment (1 paragraph).
// Size:
//   Additional instance space (in paragraphs) for objects of this class
//   to the amount specified in ENGDESC_OBJINSTSZ field.
//

#define CLASSINSTMALLOC_SIZE            19:0
#define CLASSINSTMALLOC_ALIGN           27:20
#define CLASSINSTMALLOC_OPCODE          31:28

#define MKCLASSINSTMALLOC(align,size) \
    (CLASSINSTMALLOC_INSTR << SF_SHIFT(CLASSINSTMALLOC_OPCODE) | \
     align << SF_SHIFT(CLASSINSTMALLOC_ALIGN) | \
     size << SF_SHIFT(CLASSINSTMALLOC_SIZE))

// WARNING: these macros depend on <nvrm.h>
#define CLASSINSTMALLOC_FIELD(desc,field)  (((U032)desc >> SF_SHIFT(CLASSINSTMALLOC ## field)) & SF_MASK(CLASSINSTMALLOC ## field))

//
// Graphics engine (per channel) allocation locks.
//
#define GR_LOCK_CONTEXT_BETA_SOLID          0x00
#define GR_LOCK_CONTEXT_BETA                0x01
#define GR_LOCK_CONTEXT_COLOR_KEY           0x02
#define GR_LOCK_CONTEXT_PATTERN             0x03
#define GR_LOCK_CONTEXT_CLIP                0x04
#define GR_LOCK_CONTEXT_ROP                 0x05
#define GR_LOCK_DVD                         0x06
#define GR_LOCK_CONTEXT_SURFACES_2D         0x07
#define GR_LOCK_CONTEXT_SURFACES_3D         0x08
#define GR_LOCK_CONTEXT_SURFACES_SWIZZLED   0x09
#define GR_LOCK_3D                          0x0a

//
// MediaPort engine (per device) allocation locks.
//
#define MP_LOCK_DECODER                     0x00    
#define MP_LOCK_DECOMPRESSOR                0x01

//
// Video engine (per device) allocation locks.
//

//
// HAL initialization data.
//
extern CLASSDESCRIPTOR NV04_ClassDescriptors[];
extern U032 NV04_NumClassDescs;
extern CLASSDESCRIPTOR NV05_ClassDescriptors[];
extern U032 NV05_NumClassDescs;
extern ENGINEDESCRIPTOR NV04_EngineDescriptors[];
extern U032 NV04_NumEngineDescs;

extern CLASSDESCRIPTOR NV10_ClassDescriptors[];
extern U032 NV10_NumClassDescs;
extern CLASSDESCRIPTOR NV15_ClassDescriptors[];
extern U032 NV15_NumClassDescs;
extern CLASSDESCRIPTOR NV11_ClassDescriptors[];
extern U032 NV11_NumClassDescs;
extern ENGINEDESCRIPTOR NV10_EngineDescriptors[];
extern U032 NV10_NumEngineDescs;

extern CLASSDESCRIPTOR NV20_ClassDescriptors[];
extern U032 NV20_NumClassDescs;
extern ENGINEDESCRIPTOR NV20_EngineDescriptors[];
extern U032 NV20_NumEngineDescs;

#endif // _NVROMDAT_H_
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Microsoft Xbox (1.00.4400) [April 2002] [src]\private\ntos\video\nvx\drivers\resman\kernel\inc\nvrm.h ===
#ifndef _NVRM_H_
#define _NVRM_H_

 /***************************************************************************\
|*                                                                           *|
|*        Copyright (c) 1993-2000 NVIDIA, Corp.  All rights reserved.        *|
|*                                                                           *|
|*     NOTICE TO USER:   The source code  is copyrighted under  U.S. and     *|
|*     international laws.   NVIDIA, Corp. of Sunnyvale, California owns     *|
|*     the copyright  and as design patents  pending  on the design  and     *|
|*     interface  of the NV chips.   Users and possessors of this source     *|
|*     code are hereby granted  a nonexclusive,  royalty-free  copyright     *|
|*     and  design  patent license  to use this code  in individual  and     *|
|*     commercial software.                                                  *|
|*                                                                           *|
|*     Any use of this source code must include,  in the user documenta-     *|
|*     tion and  internal comments to the code,  notices to the end user     *|
|*     as follows:                                                           *|
|*                                                                           *|
|*     Copyright (c) 1993-2000  NVIDIA, Corp.    NVIDIA  design  patents     *|
|*     pending in the U.S. and foreign countries.                            *|
|*                                                                           *|
|*     NVIDIA, CORP.  MAKES  NO REPRESENTATION ABOUT  THE SUITABILITY OF     *|
|*     THIS SOURCE CODE FOR ANY PURPOSE.  IT IS PROVIDED "AS IS" WITHOUT     *|
|*     EXPRESS OR IMPLIED WARRANTY OF ANY KIND.  NVIDIA, CORP. DISCLAIMS     *|
|*     ALL WARRANTIES  WITH REGARD  TO THIS SOURCE CODE,  INCLUDING  ALL     *|
|*     IMPLIED   WARRANTIES  OF  MERCHANTABILITY  AND   FITNESS   FOR  A     *|
|*     PARTICULAR  PURPOSE.   IN NO EVENT SHALL NVIDIA, CORP.  BE LIABLE     *|
|*     FOR ANY SPECIAL, INDIRECT, INCIDENTAL,  OR CONSEQUENTIAL DAMAGES,     *|
|*     OR ANY DAMAGES  WHATSOEVER  RESULTING  FROM LOSS OF USE,  DATA OR     *|
|*     PROFITS,  WHETHER IN AN ACTION  OF CONTRACT,  NEGLIGENCE OR OTHER     *|
|*     TORTIOUS ACTION, ARISING OUT  OF OR IN CONNECTION WITH THE USE OR     *|
|*     PERFORMANCE OF THIS SOURCE CODE.                                      *|
|*                                                                           *|
 \***************************************************************************/

/**************** Resource Manager Defines and Structures ******************\
*                                                                           *
* Module: NVRM.H                                                            *
*       Resource Manager defines and structures used throughout the code.   *
*                                                                           *
*****************************************************************************
*                                                                           *
* History:                                                                  *
*                                                                           *
\***************************************************************************/

//---------------------------------------------------------------------------
//
//  Version number of files built using this header file.
//
//  The format of this is 0x00010206, where
//   - 0x0001 is the chip architecture
//   -   0x02 is the software release
//   -   0x06 is the minor revision
//
//---------------------------------------------------------------------------

#define NVRM_VERSION    0x00030200

//---------------------------------------------------------------------------
//  define some inline assembly instructions

#ifdef __WATCOMC__

void my_sti();
#pragma aux my_sti = \
    "pushf" \
    "sti";

void my_cli();
#pragma aux my_cli =  \
    "popf";

#else   // if not Watcom, its the Microsoft compiler

#define my_sti \
    _asm    pushf   \
    _asm    sti
#define my_cli \
    __asm   popf

#endif  // _WATCOMC_

//---------------------------------------------------------------------------
//
//  NVidia data types.
//
//---------------------------------------------------------------------------

#include <nvtypes.h>

//
// Fixed point math types and macros.
//
typedef signed long     S016d016;
typedef unsigned long   U016d016;
typedef signed long     S008d024;
typedef unsigned long   U008d024;
typedef signed long     S012d020;
typedef unsigned long   U012d020;

#define FIX16_POINT             16
#define FIX16_SCALE             ((U032)1<<FIX16_POINT)
#define FIX16_INT_MASK          ((U032)~0<<FIX16_POINT)
#define FIX16_FRAC_MASK         (~FIX16_INT_MASK)
#define FIX16_INT(f)            ((f)>>FIX16_POINT)
#define FIX16_FRAC(f)           ((f)&FIX16_FRAC_MASK)
#define INT_FIX16(f)            ((f)<<FIX16_POINT)
#define FIX16(i)                (S016d016)((i)*FIX16_SCALE))
#define FIX16_MUL(f1,f2)        ((FIX16_INT(f1)*FIX16_INT(f2)<<FIX16_POINT)     \
                                +(FIX16_INT(f1)*FIX16_FRAC(f2))                 \
                                +(FIX16_FRAC(f1)*FIX16_INT(f2))                 \
                                +(FIX16_FRAC(f1)*FIX16_FRAC(f2)>>FIX16_POINT))
#define FIX16_DIV(f1,f2)        (((f1)<<(FIX16_POINT/2))/((f2)>>(FIX16_POINT/2)))
#define FIX16_DIVI(f1,f2)       ((f1)/((f2)>>(FIX16_POINT)))
#define FIX16_IDIV(f1,f2)       (((f1)<<(FIX16_POINT))/(f2))
#define FIX24_POINT             24
#define FIX24_SCALE             ((U032)1<<FIX24_POINT)
#define FIX24_INT_MASK          ((U032)~0<<FIX24_POINT)
#define FIX24_FRAC_MASK         (~FIX24_INT_MASK)
#define FIX24_TO_INT(f)         ((f)>>FIX24_POINT)
#define FIX24(i)                ((S008d024)((i)*FIX24_SCALE))
#define FIX24_MUL(f1,f2)        (((f1)>>(FIX24_POINT/2))*((f2)>>(FIX24_POINT/2)))
#define FIX24_DIV(f1,f2)        (((f1)<<(FIX24_POINT/2))/((f2)>>(FIX24_POINT/2)))
#define FIX24_DIVI(f1,f2)       ((f1)/((f2)>>(FIX24_POINT)))
#define FIX24_IDIV(f1,f2)       (((f1)<<(FIX24_POINT))/(f2))

//---------------------------------------------------------------------------
//
//  Common types.
//
//---------------------------------------------------------------------------

#ifndef VOID
#define VOID            void
#endif
#ifndef BOOL
#define BOOL            S032
#endif
#ifndef TRUE
#define TRUE            !0L
#endif
#ifndef FALSE
#define FALSE           0L
#endif
#ifndef NULL
#define NULL            0L
#endif
    
//---------------------------------------------------------------------------
//
//  Error codes.
//
//---------------------------------------------------------------------------

//
// External codes.
//
#define NV_ERROR_1                      0x0100
#define NV_TYPE_CONFLICT                (0x01|NV_ERROR_1)
#define NV_OUT_OF_RANGE                 (0x02|NV_ERROR_1)
#define NV_NO_CONNECTION                (0x03|NV_ERROR_1)
#define NV_NO_SUCH_OBJECT               (0x04|NV_ERROR_1)
#define NV_NAME_IN_USE                  (0x05|NV_ERROR_1)
#define NV_OUT_OF_RESOURCES             (0x06|NV_ERROR_1)
#define NV_TRANSLATION_VIOLATION        (0x07|NV_ERROR_1)
#define NV_PROTECTION_VIOLATION         (0x08|NV_ERROR_1)
#define NV_BUFFER_BUSY                  (0x09|NV_ERROR_1)
#define NV_ILLEGAL_ACCESS               (0x0A|NV_ERROR_1)
#define NV_BAD_COLORMAP_FORMAT          (0x0B|NV_ERROR_1)
#define NV_BAD_COLOR_FORMAT             (0x0C|NV_ERROR_1)
#define NV_BAD_MONOCHROME_FORMAT        (0x0D|NV_ERROR_1)
#define NV_BAD_PATTERN_SHAPE            (0x0E|NV_ERROR_1)
#define NV_BAD_SUBDIVIDE                (0x0F|NV_ERROR_1)
#define NV_NO_CURRENT_POINT             (0x10|NV_ERROR_1)
#define NV_BAD_AUDIO_FORMAT             (0x11|NV_ERROR_1)
#define NV_NO_DMA_TRANSLATION           (0x12|NV_ERROR_1)
#define NV_INCOMPLETE_METHOD            (0x13|NV_ERROR_1)
#define NV_RESERVED_ADDRESS             (0x14|NV_ERROR_1)
#define NV_UNIMPLEMENTED_PATCH          (0x15|NV_ERROR_1)
#define NV_OS_NAME_ERROR                (0x16|NV_ERROR_1)
#define NV_INCOMPLETE_PATCH             (0x17|NV_ERROR_1)
#define NV_BUFFERGAP_ERROR              (0x18|NV_ERROR_1)
#define NV_FIFO_OVERFLOW                (0x19|NV_ERROR_1)
//
// Internal codes.
//
typedef U032 RM_STATUS;
#define NUM_RM_ERRORS                   22
#define RM_OK                           0x00000000
#define RM_ERROR                        0xFFFFFFFF
#define RM_WARN_NULL_OBJECT             (0x10000000|RM_OK)
#define RM_WARN_AUDIO_DISABLED          (0x20000000|RM_OK)
#define RM_WARN_GRAPHICS_DISABLED       (0x30000000|RM_OK)
#define RM_ERR_NO_FREE_MEM              (0x01000000|NV_OUT_OF_RESOURCES)
#define RM_ERR_MEM_NOT_FREED            (0x01010000|NV_OUT_OF_RESOURCES)
#define RM_ERR_PAGE_TABLE_NOT_AVAIL     (0x01020000|NV_OUT_OF_RESOURCES)
#define RM_ERR_NO_FREE_FIFOS            (0x02000000|NV_OUT_OF_RESOURCES)
#define RM_ERR_CANT_CREATE_CLASS_OBJS   (0x02010000|NV_OUT_OF_RESOURCES)
#define RM_ERR_BAD_OBJECT               (0x03000000|NV_NO_SUCH_OBJECT)
#define RM_ERR_INSERT_DUPLICATE_NAME    (0x03010000|NV_NAME_IN_USE)
#define RM_ERR_OBJECT_NOT_FOUND         (0x03020000|NV_NO_SUCH_OBJECT)
#define RM_ERR_CREATE_BAD_CLASS         (0x04000000|NV_NO_SUCH_OBJECT)
#define RM_ERR_DELETE_BAD_CLASS         (0x04010000|NV_NO_SUCH_OBJECT)
#define RM_ERR_FIFO_RUNOUT_OVERFLOW     (0x05000000|NV_FIFO_OVERFLOW)
#define RM_ERR_FIFO_BAD_ACCESS          (0x05010000|NV_RESERVED_ADDRESS)
#define RM_ERR_FIFO_OVERFLOW            (0x05020000|NV_FIFO_OVERFLOW)
#define RM_ERR_METHOD_ORDER             (0x06000000|NV_INCOMPLETE_METHOD)
#define RM_ERR_METHOD_COUNT             (0x06010000|NV_INCOMPLETE_METHOD)
#define RM_ERR_ILLEGAL_OBJECT           (0x06020000|NV_TYPE_CONFLICT)
#define RM_ERR_DMA_IN_USE               (0x07000000|NV_BUFFER_BUSY)
#define RM_ERR_BAD_DMA_SPECIFIER        (0x07010000|NV_TRANSLATION_VIOLATION)
#define RM_ERR_INVALID_XLATE            (0x07020000|NV_TRANSLATION_VIOLATION)
#define RM_ERR_INVALID_START_LENGTH     (0x07030000|NV_PROTECTION_VIOLATION)
#define RM_ERR_DMA_MEM_NOT_LOCKED       (0x07040000|NV_OUT_OF_RESOURCES)
#define RM_ERR_DMA_MEM_NOT_UNLOCKED     (0x07050000|NV_OUT_OF_RESOURCES)
#define RM_ERR_NOTIFY_IN_USE            (0x07060000|NV_BUFFER_BUSY)
#define RM_ERR_ILLEGAL_ADDRESS          (0x08000000|NV_ILLEGAL_ACCESS)
#define RM_ERR_BAD_ADDRESS              (0x08010000|NV_PROTECTION_VIOLATION)
#define RM_ERR_INVALID_COLOR_FORMAT     (0x09000000|NV_BAD_COLOR_FORMAT)
#define RM_ERR_INVALID_MONO_FORMAT      (0x09010000|NV_BAD_MONOCHROME_FORMAT)
#define RM_ERR_INVALID_AUDIO_FORMAT     (0x09020000|NV_BAD_AUDIO_FORMAT)
#define RM_ERR_INVALID_GAMEPORT_FORMAT  (0x09030000|NV_BAD_AUDIO_FORMAT)
#define RM_ERR_OBJECT_TYPE_MISMATCH     (0x0A000000|NV_TYPE_CONFLICT)
#define RM_ERR_NO_FREE_AUDIO_INSTANCES  (0x0B000000|NV_OUT_OF_RESOURCES)
#define RM_ERR_CODEC_INPUT_IN_USE       (0x0B010000|NV_OUT_OF_RESOURCES)
#define RM_ERR_AUDIO_DISABLED           (0x0B020000|NV_OUT_OF_RESOURCES)
#define RM_ERR_INCOMPLETE_PATCH         (0x0C000000|NV_INCOMPLETE_PATCH)
#define RM_ERR_INVALID_PATCH            (0x0C010000|NV_UNIMPLEMENTED_PATCH)
#define RM_ERR_PATCH_TOO_COMPLEX        (0x0C020000|NV_UNIMPLEMENTED_PATCH)
#define RM_ERR_MAX_PATCH_FANOUT         (0x0C030000|NV_UNIMPLEMENTED_PATCH)
#define RM_ERR_DEVICE_DISCONNECTED      (0x0C040000|NV_NO_CONNECTION)
#define RM_ERR_BUFFER_GAP               (0x0D000000|NV_BUFFER_GAP)
#define RM_ERR_INVALID_OS_NAME          (0x0E000000|NV_OS_NAME_ERROR)
#define RM_ERR_ILLEGAL_ACTION           (0x0E010000|NV_OS_NAME_ERROR)
// The DMA direction specified for the DMA object is not allowed in the
// specified address space.
#define RM_ERR_ILLEGAL_DIRECTION        (0x0E020000|NV_OS_NAME_ERROR)
#define RM_ERR_OUT_OF_TIMER_CALLBACKS   (0x0F000000|NV_OUT_OF_RESOURCES)

// Errors returned from the arch calls.
#define NV_ERROR_2                      0x0200
#define RM_ERR_OPERATING_SYSTEM         (0x00000001|NV_ERROR_2)
#define RM_ERR_BAD_OBJECT_PARENT        (0x00000002|NV_ERROR_2)
#define RM_ERR_BAD_OBJECT_HANDLE        (0x00000003|NV_ERROR_2)
#define RM_ERR_OBJECT_IN_USE            (0x00000004|NV_ERROR_2)
#define RM_ERR_OBJECT_HAS_CHILDERN      (0x00000005|NV_ERROR_2)
#define RM_ERR_BAD_CLASS                (0x00000006|NV_ERROR_2)
#define RM_ERR_INSUFFICIENT_RESOURCES   (0x00000007|NV_ERROR_2)
#define RM_ERR_BAD_FLAGS                (0x00000008|NV_ERROR_2)
#define RM_ERR_BAD_BASE                 (0x00000009|NV_ERROR_2)
#define RM_ERR_BAD_LIMIT                (0x0000000A|NV_ERROR_2)
#define RM_ERR_PROTECTION_FAULT         (0x0000000B|NV_ERROR_2)
#define RM_ERR_MULTIPLE_MEMORY_TYPES    (0x0000000C|NV_ERROR_2)
#define RM_ERR_BAD_OBJECT_ERROR         (0x0000000D|NV_ERROR_2)
#define RM_ERR_BAD_OBJECT_BUFFER        (0x0000000E|NV_ERROR_2)
#define RM_ERR_BAD_OFFSET               (0x0000000F|NV_ERROR_2)
#define RM_ERR_BAD_CLIENT               (0x00000010|NV_ERROR_2)

// Errors returned from HAL calls.
#define NV_ERROR_3                      (0x0400)
#define RM_ERR_VERSION_MISMATCH         (0x00000001|NV_ERROR_3)
#define RM_ERR_BAD_ARGUMENT             (0x00000002|NV_ERROR_3)
#define RM_ERR_INVALID_STATE            (0x00000003|NV_ERROR_3)

//
// RM_ASSERT macro
//
#ifdef DEBUG
#define RM_ASSERT(cond)                                                     \
    if ((cond) == 0x0)                                                      \
    {                                                                       \
        DBG_PRINT_STRING(DEBUGLEVEL_ERRORS, "NVRM: assertion FAILED!\n");   \
        DBG_PRINT_STRING(DEBUGLEVEL_ERRORS, __FILE__);                      \
        DBG_PRINT_STRING(DEBUGLEVEL_ERRORS, ": line ");                     \
        DBG_PRINT_VALUE(DEBUGLEVEL_ERRORS, (int)__LINE__);                  \
        DBG_PRINT_STRING(DEBUGLEVEL_ERRORS, "\n");                          \
        DBG_BREAKPOINT();                                                   \
    }
#else
#define RM_ASSERT(cond)
#endif

//
// Power of 2 alignment.
//    (Will give unexpected results if 'a' is not a power of 2.)
//

#define NV_ALIGN_DOWN(v, gran) ((v) & ~((gran) - 1))
#define NV_ALIGN_UP(v, gran)   (((v) + ((gran) - 1)) & ~((gran)-1))

#define NV_ALIGN_PTR_DOWN(p, gran) ((void *) NV_ALIGN_DOWN(((NV_UINTPTR_T)p), (gran)))
#define NV_ALIGN_PTR_UP(p, gran)   ((void *) NV_ALIGN_UP(((NV_UINTPTR_T)p), (gran)))

#define NV_PAGE_ALIGN_DOWN(value) NV_ALIGN_DOWN((value), RM_PAGE_SIZE)
#define NV_PAGE_ALIGN_UP(value)   NV_ALIGN_UP((value), RM_PAGE_SIZE)

//
// NV Reference Manual register access definitions.
//
#define BIT(b)                  (1<<(b))
#define DEVICE_BASE(d)          (0?d)
#define DEVICE_EXTENT(d)        (1?d)
#define DRF_SHIFT(drf)          ((0?drf) % 32)
#define DRF_MASK(drf)           (0xFFFFFFFF>>(31-((1?drf) % 32)+((0?drf) % 32)))
#define DRF_DEF(d,r,f,c)        ((NV ## d ## r ## f ## c)<<DRF_SHIFT(NV ## d ## r ## f))
#define DRF_NUM(d,r,f,n)        (((n)&DRF_MASK(NV ## d ## r ## f))<<DRF_SHIFT(NV ## d ## r ## f))
#define DRF_VAL(d,r,f,v)        (((v)>>DRF_SHIFT(NV ## d ## r ## f))&DRF_MASK(NV ## d ## r ## f))
#define REG_WR_DRF_NUM(d,r,f,n) REG_WR32(NV ## d ## r, DRF_NUM(d,r,f,n))
#define REG_WR_DRF_DEF(d,r,f,c) REG_WR32(NV ## d ## r, DRF_DEF(d,r,f,c))
#define FLD_WR_DRF_NUM(d,r,f,n) REG_WR32(NV##d##r,(REG_RD32(NV##d##r)&~(DRF_MASK(NV##d##r##f)<<DRF_SHIFT(NV##d##r##f)))|DRF_NUM(d,r,f,n))
#define FLD_WR_DRF_DEF(d,r,f,c) REG_WR32(NV##d##r,(REG_RD32(NV##d##r)&~(DRF_MASK(NV##d##r##f)<<DRF_SHIFT(NV##d##r##f)))|DRF_DEF(d,r,f,c))
#define REG_RD_DRF(d,r,f)       (((REG_RD32(NV ## d ## r))>>DRF_SHIFT(NV ## d ## r ## f))&DRF_MASK(NV ## d ## r ## f))
//
// NV Reference Manual instance memory structure access definitions.
//
#define INST_WR32(i,o,d)        REG_WR32((pDev->Pram.HalInfo.PraminOffset+((i)<<4)+(o)),(d))
#define INST_RD32(i,o)          REG_RD32((pDev->Pram.HalInfo.PraminOffset+((i)<<4)+(o)))
#define SF_OFFSET(sf)           (((0?sf)/32)<<2)
#define SF_SHIFT(sf)            ((0?sf)&31)
#undef  SF_MASK
#define SF_MASK(sf)             (0xFFFFFFFF>>(31-(1?sf)+(0?sf)))
#define SF_DEF(s,f,c)           ((NV ## s ## f ## c)<<SF_SHIFT(NV ## s ## f))
#define SF_NUM(s,f,n)           (((n)&SF_MASK(NV ## s ## f))<<SF_SHIFT(NV ## s ## f))
#define SF_VAL(s,f,v)           (((v)>>SF_SHIFT(NV ## s ## f))&SF_MASK(NV ## s ## f))
#define RAM_WR_ISF_NUM(i,s,f,n) INST_WR32(i,SF_OFFSET(NV ## s ## f),SF_NUM(s,f,n))
#define RAM_WR_ISF_DEF(i,s,f,c) INST_WR32(i,SF_OFFSET(NV ## s ## f),SF_DEF(s,f,c))
#define FLD_WR_ISF_NUM(i,s,f,n) INST_WR32(i,SF_OFFSET(NV##s##f),(INST_RD32(i,SF_OFFSET(NV##s##f))&~(SF_MASK(NV##s##f)<<SF_SHIFT(NV##s##f)))|SF_NUM(s,f,n))
#define FLD_WR_ISF_DEF(i,s,f,c) INST_WR32(i,SF_OFFSET(NV##s##f),(INST_RD32(i,SF_OFFSET(NV##s##f))&~(SF_MASK(NV##s##f)<<SF_SHIFT(NV##s##f)))|SF_DEF(s,f,c))
#define RAM_RD_ISF(i,s,f)       (((INST_RD32(i,SF_OFFSET(NV ## s ## f)))>>SF_SHIFT(NV ## s ## f))&SF_MASK(NV ## s ## f))
//
// EEPROM access macros.
//
#define EEPROM_INDEX_RD08(ii, dd)   \
    {REG_WR32(NV_PEEPROM_CONTROL,DRF_NUM(_PEEPROM,_CONTROL,_ADDRESS,(ii))|DRF_DEF(_PEEPROM,_CONTROL,_COMMAND,_READ));\
    osDelay(1);\
    (dd)=REG_RD32(NV_PEEPROM_CONTROL)&0xFF;}
//
// DevInfo update/finish flags.
//
#define UPDATE_HWINFO_AUDIO_VOLUME             BIT(0)
#define FINISH_HWINFO_AUDIO_VOLUME             BIT(0)
#define UPDATE_HWINFO_AUDIO_NEAR_MARK          BIT(1)
#define FINISH_HWINFO_AUDIO_NEAR_MARK          BIT(1)
#define UPDATE_HWINFO_AUDIO_BLOCK_LENGTH       BIT(2)
#define FINISH_HWINFO_AUDIO_BLOCK_LENGTH       BIT(2)
#define UPDATE_HWINFO_DAC_CURSOR_POS           BIT(0)
#define FINISH_HWINFO_DAC_CURSOR_POS           BIT(0)
#define UPDATE_HWINFO_DAC_CURSOR_IMAGE         BIT(1)
#define FINISH_HWINFO_DAC_CURSOR_IMAGE         BIT(1)
#define UPDATE_HWINFO_DAC_CURSOR_COLOR         BIT(2)
#define FINISH_HWINFO_DAC_CURSOR_COLOR         BIT(2)
#define UPDATE_HWINFO_DAC_COLORMAP             BIT(3)
#define FINISH_HWINFO_DAC_COLORMAP             BIT(3)
#define UPDATE_HWINFO_DAC_CURSOR_ENABLE        BIT(4)
#define FINISH_HWINFO_DAC_CURSOR_ENABLE        BIT(4)
#define UPDATE_HWINFO_DAC_CURSOR_DISABLE       BIT(5)
#define FINISH_HWINFO_DAC_CURSOR_DISABLE       BIT(5)
#define UPDATE_HWINFO_DAC_CURSOR_TYPE          BIT(6)
#define FINISH_HWINFO_DAC_CURSOR_TYPE          BIT(6)
#define UPDATE_HWINFO_DAC_CURSOR_IMAGE_DELAYED BIT(7)
#define FINISH_HWINFO_DAC_CURSOR_IMAGE_DELAYED BIT(7)
#define UPDATE_HWINFO_DAC_DPML                 BIT(8)
#define FINISH_HWINFO_DAC_DPML                 BIT(8)
#define UPDATE_HWINFO_DAC_APLL                 BIT(9)
#define FINISH_HWINFO_DAC_APLL                 BIT(9)
#define UPDATE_HWINFO_DAC_VPLL                 BIT(10)
#define FINISH_HWINFO_DAC_VPLL                 BIT(10)
#define UPDATE_HWINFO_DAC_MPLL                 BIT(11)
#define FINISH_HWINFO_DAC_MPLL                 BIT(11)
#define UPDATE_HWINFO_DAC_CURSOR_IMAGE_NEW     BIT(12)
#define FINISH_HWINFO_DAC_CURSOR_IMAGE_NEW     BIT(12)
#define UPDATE_HWINFO_DAC_NVPLL                BIT(13)
#define FINISH_HWINFO_DAC_NVPLL                BIT(13)
#define UPDATE_HWINFO_DAC_IMAGE_OFFSET_FORMAT  BIT(14)
#define FINISH_HWINFO_DAC_IMAGE_OFFSET_FORMAT  BIT(14)
#define UPDATE_HWINFO_CODEC_FREQUENCY          BIT(0)
#define FINISH_HWINFO_CODEC_FREQUENCY          BIT(0)
#define UPDATE_HWINFO_CODEC_SOURCE             BIT(1)
#define FINISH_HWINFO_CODEC_SOURCE             BIT(1)
#define UPDATE_HWINFO_CODEC_GAIN               BIT(2)
#define FINISH_HWINFO_CODEC_GAIN               BIT(2)
#define UPDATE_HWINFO_CODEC_PIN_CONTROL        BIT(3)
#define FINISH_HWINFO_CODEC_PIN_CONTROL        BIT(3)
#define UPDATE_HWINFO_BUFFER_FLIP              BIT(0)
#define FINISH_HWINFO_BUFFER_FLIP              BIT(0)
#define UPDATE_HWINFO_BUFFER_PARAMS            BIT(8)
#define FINISH_HWINFO_BUFFER_PARAMS            BIT(8)
#define UPDATE_HWINFO_DISPLAY_PARAMS           BIT(9)
#define FINISH_HWINFO_DISPLAY_PARAMS           BIT(9)
#define UPDATE_HWINFO_REFRESH_PARAMS           BIT(10)
#define FINISH_HWINFO_REFRESH_PARAMS           BIT(10)
#define UPDATE_HWINFO_GAMEPORT                 BIT(0)
#define FINISH_HWINFO_GAMEPORT                 BIT(0)
#define UPDATE_HWINFO_GAMEPORT_START_COUNT     BIT(1)
#define FINISH_HWINFO_GAMEPORT_START_COUNT     BIT(1)
#define UPDATE_HWINFO_GAMEPORT_GET_POSITION    BIT(2)
#define FINISH_HWINFO_GAMEPORT_GET_POSITION    BIT(2)
#define UPDATE_HWINFO_FIFO_LIE                 BIT(0)
#define FINISH_HWINFO_FIFO_LIE                 BIT(0)
#define FINISH_HWINFO_VGA_FIXUP                BIT(0)
#define UPDATE_HWINFO_DGP_3D_ENABLE            BIT(0)
#define FINISH_HWINFO_DGP_3D_ENABLE            BIT(0)
#define UPDATE_HWINFO_VIDEO_ENABLE             BIT(0)
#define FINISH_HWINFO_VIDEO_ENABLE             BIT(0)
#define UPDATE_HWINFO_VIDEO_START              BIT(1)
#define FINISH_HWINFO_VIDEO_START              BIT(1)
#define UPDATE_HWINFO_VIDEO_SIZE               BIT(2)
#define FINISH_HWINFO_VIDEO_SIZE               BIT(2)
#define UPDATE_HWINFO_VIDEO_SCALE              BIT(3)
#define FINISH_HWINFO_VIDEO_SCALE              BIT(3)
#define UPDATE_HWINFO_VIDEO_COLORKEY           BIT(4)
#define FINISH_HWINFO_VIDEO_COLORKEY           BIT(4)
//
// Notification otherInfo defines.
//
#define NOTIFY_INFO16_BUFFER_CHAIN_GAP  1
#define NOTIFY_INFO16_BUFFER_YANK       2
#define NOTIFY_INFO16_BUFFER_LOOP       3

//---------------------------------------------------------------------------
//
// 32 bit debug marker values.
//
//---------------------------------------------------------------------------

// Solaris machines are byte reversed from Intel machines
#ifdef SOLARIS
#define NV_MARKER1 (U032)(('N' << 24) | ('V' << 16) | ('R' << 8) | 'M')
#define NV_MARKER2 (U032)(('M' << 24) | ('R' << 16) | ('V' << 8) | 'N')
#else
#define NV_MARKER1 (U032)(('M' << 24) | ('R' << 16) | ('V' << 8) | 'N')
#define NV_MARKER2 (U032)(('N' << 24) | ('V' << 16) | ('R' << 8) | 'M')
#endif

//---------------------------------------------------------------------------
//
// DevInfo state values.
//
//---------------------------------------------------------------------------

//
// BUS type.
//
#define BUS_PCI                         1
#define BUS_VL                          2
#define BUS_NIRV                        3
#define BUS_AGP                         4
//
// AGP defines
//
#define AGP_APERTURE_SIZE               0x2000000       // 32 MB
#define MAP_WRITECOMBINE                0x2
//
// Define the various NV chip revision ID's
//
#define NV4_REV_A_00                    0x00
#define NV4_REV_B_00                    0x10
//
// Framebuffer values.
//
#define BUFFER_DRAM                     0
#define BUFFER_SGRAM                    1
#define BUFFER_SDRAM                    2
#define BUFFER_DDRAM                    3
#define BUFFER_CRUSH_UMA                4

#define BUFFER_DRAM_EDO                 0
#define BUFFER_DRAM_FPM                 1

#define BUFFER_HSYNC_NEGATIVE           1
#define BUFFER_HSYNC_POSITIVE           0
#define BUFFER_VSYNC_NEGATIVE           1
#define BUFFER_VSYNC_POSITIVE           0
#define BUFFER_CSYNC_DISABLED           0
#define BUFFER_CSYNC_ENABLED            1
// Offscreen Instance Memory size.
//
#define NV_PRAM_MIN_SIZE_INSTANCE_MEM  0x1000   // 4KB

//
// DAC values.
//
#define DAC_CURSOR_DISABLED             0
#define DAC_CURSOR_THREE_COLOR          1
#define DAC_CURSOR_TWO_COLOR_XOR        2
#define DAC_CURSOR_TWO_COLOR            3
#define DAC_CURSOR_FULL_COLOR_XOR       4
#define DAC_CURSOR_FULL_COLOR           5
#define DAC_CURSOR_TYPE_NEW             6

#define DAC_CURSOR_CACHE_ENTRY          0x80000000
#define DAC_CURSOR_CACHE_DISPLAY        0x40000000

#define MAX_CACHED_CURSORS              5


//
// Video modes.
//
// (keep these around until all rm's os sections are updated)
//
#define NUM_VIDEO_DEPTHS                3
#define VIDEO_DEPTH_8BPP                8
#define VIDEO_DEPTH_15BPP               15
#define VIDEO_DEPTH_30BPP               30
#define NUM_RESOLUTIONS                 16
#define RESOLUTION_576X432              0
#define RESOLUTION_640X400              1
#define RESOLUTION_640X480              2
#define RESOLUTION_800X600              3
#define RESOLUTION_1024X768             4
#define RESOLUTION_1152X864             5
#define RESOLUTION_1280X1024            6
#define RESOLUTION_1600X1200            7
#define RESOLUTION_320X200              8
#define RESOLUTION_320X240              9
#define RESOLUTION_512X384              10
#define RESOLUTION_640X240              11
#define RESOLUTION_400X300              12
#define RESOLUTION_480X360              13
#define RESOLUTION_960X720              14
#define RESOLUTION_320X400              15
//
// Monitor types
//
#define NV_MONITOR_VGA                  0
#define NV_MONITOR_NTSC                 2
#define NV_MONITOR_PAL                  3

//
// Display Types
//
#define MONITOR                         0
#define TV                              1
#define DUALSURFACE                     2
#define MONITOR_FLAT_PANEL              3

//Queue depth for mobile hotkey events. Should be comfortably more than needed.
#define NV_HOTKEY_EVENT_QUEUE_SIZE      16

// 
// Customer coding (bitmasks used to enable/disable functionality)
//
#define CUSTOMER_GENERIC                0x00000000
#define CUSTOMER_CANOPUS                0x00000001
#define CUSTOMER_CANOPUS_TOSHIBA        0x00000002
#define CUSTOMER_CREATIVE               0x00000004
#define CUSTOMER_ASUS                   0x00000008       

//
// Gamport Info Analog Data Array values.
//
#define NV_GPORT_X_AXIS                 0
#define NV_GPORT_Y_AXIS                 1
#define NV_GPORT_Z_AXIS                 2
#define NV_GPORT_PEDALS                 3
#define NV_GPORT_PEDALS_1               3
#define NV_GPORT_PEDALS_2               4
#define NV_GPORT_THROTTLE               5
#define NV_GPORT_THROTTLE_1             5
#define NV_GPORT_THROTTLE_2             6
//
// Gamport source values.
//
#define GPORT_INPUT_NULL                0x0000
#define GPORT_INPUT_POT                 0x0100
#define GPORT_INPUT_JOYSTICK            0x0200
#define GPORT_INPUT_PEDALS              0x0300
#define GPORT_INPUT_THROTTLE            0x0400
#define GPORT_INPUT_PAD                 0x0500
#define GPORT_INPUT_YOKE                0x0600
#define GPORT_INPUT_POTA                0x0700
#define GPORT_INPUT_GUN                 0x0800
#define GPORT_INPUT_INVALID             0xFF00
#define GPORT_INPUT_SOURCE_MASK         0xFF00
//
// Gamport source port values.
//
#define GPORT_INPUT_PORT_PLAYER1        0
#define GPORT_INPUT_PORT_PLAYER2        1
#define GPORT_INPUT_PORT_PLAYER3        2
#define GPORT_INPUT_PORT_PLAYER4        3
#define GPORT_INPUT_PORT_PLAYER5        4
#define GPORT_INPUT_PORT_PLAYER6        5
#define GPORT_INPUT_PORT_PLAYER7        6
#define GPORT_INPUT_PORT_PLAYER8        7
#define GPORT_INPUT_PORT_PLAYER9        8
#define GPORT_INPUT_PORT_PLAYER10       9
#define GPORT_INPUT_PORT_PLAYER11       10
#define GPORT_INPUT_PORT_PLAYER12       11
#define GPORT_INPUT_PORT_POT            12
#define GPORT_INPUT_PORT_MAX            12
#define GPORT_INPUT_PORT_MASK           0x00FF
//
// Gameport source channel values. 
//
#define GPORT_INPUT_BUTTONS             BIT(0)
#define GPORT_INPUT_X_AXIS              BIT(1)
#define GPORT_INPUT_Y_AXIS              BIT(2)
#define GPORT_INPUT_Z_AXIS              BIT(3)
#define GPORT_INPUT_X_POS               BIT(4)
#define GPORT_INPUT_Y_POS               BIT(5)

//---------------------------------------------------------------------------
//
//  Max number of FIFO channels used.
//
//---------------------------------------------------------------------------

// currently only initClientInfo() uses MAX_FIFOS instead of NUM_FIFOS, since
// NUM_FIFOS may be different per device (e.g. nv4 vs. nv10). Also, the client
// database alloc occurs before an nvInfo has been allocated.
#define MAX_FIFOS                       32

//---------------------------------------------------------------------------
//
//  Data structures.
//
//---------------------------------------------------------------------------
//
// Device register access array.
//
typedef union _def_HwReg
{
    volatile V008 Reg008[1];
    volatile V016 Reg016[1];
    volatile V032 Reg032[1];
} HWREG, * PHWREG;

//
// A hardware fifo hash table entry.
//
typedef struct _def_HashTableEntry
{
    V032 ht_ObjectHandle;
    V032 ht_Context;
} HASH_TABLE_ENTRY;
         
//
// Device state and configuration information.
//
typedef struct _def_hw_info *PHWINFO;

#ifndef RM_HEADERS_MINIMAL

//
// setting RM_HEADERS_MINIMAL causes rest of file to be excluded so that
//    we don't pull in all the other include files.   Used by
//    unix version for os-interface files (so we can minimize
//    shipped include files)
//

#include "all_incs.h"

#include <nvhal.h>
#include <nvromdat.h>
#include <nvRmStereo.h>


// A software hash table entry
typedef struct _def_sw_hashTableEntry
{
    POBJECT Object;
    U032    ChID;
} SW_HASH_TABLE_ENTRY, *PSW_HASH_TABLE_ENTRY;

// System info structure
typedef struct _def_rm_info
{
    struct _def_processor_info
    {
        U032 Size;
        char ID[32];
        U032 Type;
        U032 Clock;
        PROCESSORHALINFO HalInfo;
    } Processor;

	struct _def_agp_info
	{
        struct _def_agp_nb_addr {
            U008   bus;
            U008   device;
            U008   func;
            U008   valid;
        } NBAddr;                   // bus, device, func of the NB
		U032 AGPCapPtr;             // offset of the AGP capptr in the NB
		U032 AGPPhysStart;
		VOID_PTR AGPLinearStart;
		U032 AGPHeapFree;
		VOID_PTR AGPGartBase;
		VOID_PTR AGPGartBitmap;
		U032 AGPLimit;
		U032 AGPFWEnable;
		U032 AGPFullSpeedFW;
		U032 AGPChipset;			// AGP chipset enum (NT4 AGP support)
		VOID_PTR AGPChipsetMapping; // mapping to AGP registers (NT4 AGP support)
	} AGP;

    struct _def_debugger_info
    {
        U032 Handle;                // handle of currently registered DE client
        POBJECT object;             // object data structure
    } Debugger;

} RMINFO, *PRMINFO;

typedef struct _def_hw_info
{
    struct _def_chip_info
    {
        U032 Size;
        char ID[32];
        U032 IntrEn0;
        U032 Bus;
        U032 BiosRevision;
        U032 BiosOEMRevision;
        U032 BiosRMDword;
        U032 ReqAGPRate;
#ifdef RM_STATS
        U032 ServiceCount;
        U032 ServiceTimeLo;
        U032 ServiceTimeHi;
        U032 ExceptionTimeLo;
        U032 ExceptionTimeHi;
        U032 osStartInterrupt;
#endif
        MCHALINFO HalInfo;
    } Chip;
    struct _def_mapping_info
    {
        U032 Size;
        char ID[32];
        U032 PhysAddr;
        U032 PhysFbAddr;
        U032 IntLine;
        U032 IntPin;
        U032 UpdateFlags;
        U032 FinishFlags;
        U032 nvPhys;						//***
        U032 fbPhys;						//***
        U032 nvIRQ;							//***
        // NOTE: fbLength is the size of the memory window.
        // IT DOES NOT REFLECT THE AMOUNT OF MEMORY ACTUALLY ON THE BOARD.
        // Use Framebuffer.RamSize for that.
        U032 fbLength;
        U032 nvBusDeviceFunc;
        U032 ChipID;						//***
		U032 hpicIRQ;						//***  WIN9X ONLY
        U032 hDev;							//***  WIN9X ONLY
		U032 doIOToFlushCache;				// A non zero in this field indicates that an IO needs to be done to 
											// ensure all the caches are flushed. This is currently set if we
											// detect an ALI1541 chipset or a RegistryEntry exists. This info
											// is returned in rmConfigGet.
    } Mapping;
    struct _def_pram_info
    {
        U032 Size;
        char ID[32];
        U032 FreeInstSize;
        U032 FreeInstBase;
        U032 FreeInstMax;
        U032 PrivBase;						// throw this out!
        U032 UpdateFlags;
        U032 FinishFlags;
        PRAMHALINFO HalInfo;
    } Pram;        
    struct _def_fifo_info
    {
        U032 Size;
        char ID[32];
#ifdef RM_STATS
        U032 ServiceCount;
#endif
        U032 UpdateFlags;
        U032 FinishFlags;
        FIFOHALINFO HalInfo;
    } Fifo;
    struct _def_master_info
    {
        U032 Size;
        char ID[32];
        U032 UpdateFlags;
        U032 FinishFlags;
        U032 Enable;
        U032 PciNv19;   // Not Master, but there is no Config
    } Master;
    struct _def_dma_info
    {
        U032 Size;
        char ID[32];
#ifdef LEGACY_ARCH    
        U032 DmaInMemEmptyInstance;
        U032 DmaToMemEmptyInstance;
        U032 DmaFromMemEmptyInstance;
#endif // LEGACY_ARCH
        DMAHALINFO HalInfo;
    } Dma;
    struct _def_framebuffer_info
    {
        U032 Size;
        char ID[32];
        // I think these can go too
        U032 DpmLevel;
        U032 Resolution;
        U032 RefreshRateType;
        U032 HorizFrontPorch;
        U032 HorizSyncWidth;
        U032 HorizBackPorch;
        U032 VertFrontPorch;
        U032 VertSyncWidth;
        U032 VertBackPorch;
        U032 HSyncPolarity;
        U032 VSyncPolarity;
        U032 CSync;
        U032 Count;
#ifdef RM_STATS
        U032 ServiceCount;
#endif
        U032 Current;
        U032 FlipUsageCount;
        U032 FlipTo;
        U032 FlipFrom;
        U032 UpdateFlags;
        U032 FinishFlags;
        U032 FilterEnable;
        U032 Underscan_x;
        U032 Underscan_y;
        U032 Scale_x;               
        U032 Scale_y;
        VOID_PTR HeapHandle;
        U032 CursorAdjust;
        U032 NoAdjustedPitch;
        U032 PrimarySurfaceAlloced;
        U032 ConfigPageHeight;  // for LEGACY_ARCH
        FBHALINFO HalInfo;
    } Framebuffer;
    struct _def_graphics_info
    {
        U032 Size;
        char ID[32];
        U032 Debug0;
        U032 Debug1;
        U032 Debug2;
        U032 Debug3;
        U032 Debug4;
        U032 CurrentChID;
        U032 Enabled;
#ifdef RM_STATS
        U032 ServiceCount;
#endif
        U032 UpdateFlags;
        U032 FinishFlags;
        U032 Capabilities;
        VOID_PTR ClassLocks;					// ptr to lock table
        GRHALINFO HalInfo;
    } Graphics;
    struct _def_video_info
    {
        U032 Size;
        char ID[32];
        U032 OverlayAllowed;
        U032 CurrentChID;
#ifdef RM_STATS
        U032 ServiceCount;
#endif
        U032 dwHasInited;   
        U032 class63VBlankCount[2];
        U032 FlipOnHsync;
        U032 ClassLocks;
        VIDEOHALINFO HalInfo;
    } Video;
    struct _def_mediaport_info
    {
        U032 Size;
        char ID[32];
#ifdef RM_STATS
        U032 ServiceCount;
#endif
        U032 ImageBufferNumber;
        VOID_PTR ImageCallback;
        VOID_PTR CurrentDecoder;
        VOID_PTR CurrentDecompressor;
        VOID_PTR CurrentParallelBusObj;
        U032 ClassLocks;
        MPHALINFO HalInfo;
    } MediaPort;
    struct _def_dac_info
    {
        U032 Size;
        char ID[32];
        U032 DpmLevel;
#ifdef RM_STATS
        U032 ServiceCount;
#endif
        U032 DisplayChanged;
        U032 CurrentDisplay;
        U032 DisplayPitch;
        U032 EncoderType;
        U032 EncoderID;
        U032 TVCursorMin;
        U032 TVCursorMax;
#if 0
        U032 TVformat;					   // NTSC or Pal
#endif
        U032 TVStandard;                   // NTSC or PAL
        U032 TVoutput;                     // SVideo/Composite/Autoselect
        U032 DesktopState;                 // multimon/clone/single
#define NV_DAC_DESKTOP_STATE_DEFAULT       0x0
#define NV_DAC_DESKTOP_STATE_MULTI         0x1
        U032 CursorColor1;
        U032 CursorColor2;
        U032 CursorColor3;
        U016 CursorColorImage[32][32];
        U032 Palette[272];
        U032 Gamma[272];
        U032 UpdateFlags;
        U032 CursorImageInstance;
        U016 CursorImageCache[32][32][MAX_CACHED_CURSORS]; // 32x32 words
        U032 CursorImageCacheInstance[MAX_CACHED_CURSORS];
        U032 CursorAddress[MAX_CACHED_CURSORS];
        U032 CursorMaskCRC[MAX_CACHED_CURSORS];
        U008 SavedCursor[(32/8)*32 + 32*32];
        U032 CursorCached;
        U032 CursorCacheCount;
        U032 CursorCacheEntry;
        U008 flickertoggle;                //***
        U008 CursorBitDepth; 
        U008 I2cIniFlag;
        U008 dummy2;                       //Pads for the previous byte ***
        U032 filterCountdown;              //***
        U032 CursorCacheEnable;
        U032 CRTPortID;
        U032 CRT2PortID;
        U032 TVOutPortID;
        U032 DFPPortID;                    // I2C Port to use for digital flat panel as primary
        U032 DFP2PortID;                   // I2C Port to use for DFP 2 of 2
        U032 I2CPrimaryWriteIndex;         // CRTC Index of primary I2C write port
        U032 I2CPrimaryStatusIndex;        // CRTC Index of primary I2C status port
        U032 I2CSecondaryWriteIndex;       // CRTC Index of secondary I2C write port    
        U032 I2CSecondaryStatusIndex;      // CRTC Index of secondary I2C status port    
        U032 I2CTertiaryWriteIndex;        // CRTC Index of tertiary I2C write port    
        U032 I2CTertiaryStatusIndex;       // CRTC Index of tertiary I2C status port    
        U032 HorizontalVisible;
        U032 HorizontalBlankStart;
        U032 HorizontalRetraceStart;
        U032 HorizontalRetraceEnd;
        U032 HorizontalBlankEnd;
        U032 HorizontalTotal;
        U032 VerticalVisible;
        U032 VerticalBlankStart;
        U032 VerticalRetraceStart;
        U032 VerticalRetraceEnd;
        U032 VerticalBlankEnd;
        U032 VerticalTotal;
        U032 PixelDepth;
        U032 RefreshRate;
        U032 HorizontalSyncPolarity;
        U032 VerticalSyncPolarity;
        U032 DoubleScannedMode;
        U032 fpPixClk;
        U032 fpHActive;
        U032 fpHDispEnd;
        U032 fpHValidEnd;
        U032 fpHSyncStart;
        U032 fpHSyncEnd;
        U032 fpHValidStart;
        U032 fpHTotal;
        U032 fpVActive;
        U032 fpVDispEnd;
        U032 fpVValidEnd;
        U032 fpVSyncStart;
        U032 fpVSyncEnd;
        U032 fpVValidStart;
        U032 fpVTotal;
        U032 fpNative;
        U032 fpHMax;
        U032 fpVMax;
        U032 fpFlags;
        U032 fpRelativeBrightness;	//current setting of the FP brightness
        U032 fpPWMRegisterContents; //used by PM to shut off backlight and properly restore backlight
        U032 PClkVClkRatio; // for legacy
        U032 FminVco;
        U032 FmaxVco;
        U032 MultiSyncCounter;
        DACCRTCINFO CrtcInfo[MAX_CRTCS];
        DACHALINFO HalInfo;
        DACDCBDEVDESC DCBDesc[DCB_MAX_NUM_DEVDESCS];
        DACDCBI2CRECORD DCBI2c[DCB_MAX_NUM_I2C_RECORDS];
#define DAC_CRT_OFFSET_IN_MAP       0       // bits 0..7 map to CRT0..CRT7
#define DAC_TV_OFFSET_IN_MAP        8       // bits 8..15 map to TV0..TV7
#define DAC_DD_OFFSET_IN_MAP        16      // bits 16..23 map to DD0..DD7
        U032 DevicesBitMap;
        U032 BootDevicesBitMap;
        U032 DevicesNoCheck;
    } Dac;

#ifdef LEGACY_ARCH    
    struct _def_dgp_chip_info
    {
        U032 Size;
        char ID[32];
        U032 Chip;
        U032 Enable3D;
        U032 Scale;
        U032 HorizDelay;
        U032 HorizOffset;
        U032 HorizScale;
        U032 VertOffset;
        U032 VertScale;
        U032 UpdateFlags;
        U032 FinishFlags;
    } Dgp;
#endif // LEGACY_ARCH

    struct _def_timer_info
    {
        U032 Size;
        char ID[32];
        U032 Denominator;
        U032 Numerator;
#ifdef RM_STATS
        U032 ServiceCount;
#endif
        U032 UpdateFlags;
        U032 FinishFlags;
        U032 tmrSave[2];          //***
    } Timer;
    struct _def_vga_info
    {
        U032 Size;
        char ID[32];
        U032 Enabled;
        U032 DOSBox;
#ifdef NV_VGA
        U032 GlobalEnable;
        U032 RomVersion;
        U032 RomFixupCode;
        U032 UpdateFlags;
        U032 FinishFlags;
#endif // NV_VGA
    } Vga;
    struct _def_classes_info
    {
        U032 Size;
        char ID[32];
        U032 UpdateFlags;
        U032 FinishFlags;
    } Classes;
#ifdef RM_STATS
    struct _def_stat_info
    {
        U032 Size;
        char ID[32];
        U032 AudioExceptionCount;
        U032 FifoExceptionCount;
        U032 FramebufferExceptionCount;
        U032 GraphicsExceptionCount;
        U032 TimerExceptionCount;
        U032 TotalExceptionCount;
        U032 IntTimeLo;
        U032 IntTimeHi;
        U032 ExecTimeLo;
        U032 ExecTimeHi;
        U032 MemAlloced;
        U032 MemLocked;
        U032 UpdateLo;
        U032 UpdateHi;
    } Statistics;
#endif
    struct _def_power_info
    {
        U032 State;
        U032 strapInfo;
        U032 coeff_select;
        U032 nvpll;
        U032 mpll;
        U032 vpll;
        U032 PbusDebug1;
        U032 PbusDebug3;
        U032 MobileOperation;
        U032 PostNVCLK;
        U032 IdleNVCLK;
        U032 PostMCLK;
        U032 IdleMCLK;
        // Chip-dependent power data moved to MC section.
    } Power;
    struct _def_registry_info
    {
        U032 Size;
        char ID[32];
        char DBstrDevNodeDisplay[128];
        char DBstrDevNodeDisplayNumber[128];
    } Registry;

    struct _def_hotkey_info
    {
//        U032 reg4CShadow;
        BOOL enabled;
        U032 queueHead;
        U032 queueTail;
        struct _def_hotkey_queue
        {
            U032 event;
            U032 status;
        } Queue[NV_HOTKEY_EVENT_QUEUE_SIZE];
    } HotKeys;

    U016				  filler1;
    U008				  filler2;

    // NOTE: This filler above fixed a really strange problem. We don't know why it
    // fixed the problem. Without this filler, phantom drive letters would appear!
    // See bug # 19981209-132200. We also don't know how a misalignment here causes
    // the registry to go bad.

    U008                DeviceDisabled;
    PSW_HASH_TABLE_ENTRY DBhashTable;                 //***
    U008                *DBfbInstBitmap;              //***
    PHWREG              DBnvAddr;                     //***
    PHWREG              DBromAddr;                    //***
    PHWREG              DBbiosAddr;                   //***
    PHWREG              DBfbAddr;                     //***
    PHWREG              DBagpAddr;                    //***
    PHWREG              DBimAddr;                     //***                               
    PFIFO               DBfifoTable;                  //***
    PDMAOBJECT          DBDmaList;                    //***
    PDMAOBJECT          DBVidDmaObject;               //***
    PVBLANKNOTIFY       DBgrVBlankList[2];            //***
    PTIMERCALLBACK      DBtmrCallbackList;            //***
    PTIMERCALLBACK      DBtmrCallbackFreeList;        //***
    PTIMERCALLBACK      DBtmrCallbackTable;           //***
    PVBLANKNOTIFY       DBclass63VBlankList[2];
    POVERLAYSERVICEPROC pOverlayServiceHandler;
    POBJECT             DBpHardwareObject;
    U032                (*DBdisplayModeHook)(U032);
    SURFACEATTRIBUTES   DBOverlaySurfaceAttribs[20];
    SURFACEATTRIBUTES   DBImageSurfaceAttribs[20];
    U032                *fb_save;
    PVIDEOCOLORMAPOBJECT colormapObjectToNotify;

    ENGINEDB            engineDB;                   // HAL-derived engine info
    CLASSDB             classDB;                    // HAL-derived class info

#if 0
    PCLASS              pClasses;
    U032                numClasses;
    PENGINEINFO         pEngineInfos;

    PCLASSDESCRIPTOR    pClassDescriptors;
    U032                numClassDescriptors;
    PENGINEDESCRIPTOR   pEngineDescriptors;
    U032                numEngineDescriptors;
#endif

    HALHWINFO           halHwInfo;
    VOID_PTR            pHalEngineMem;
    PHALFUNCS           pHalFuncs;

    U008               *EDIDBuffer;
    U032                I2CAcquired;

    U032                DBdevInstance;
    U032                biosOffset;                   // has bios been relocated within rom?

    VOID_PTR			  pRmInfo;						// pointer to our system information (RMINFO NvRmInfo)
    VOID_PTR			  pOsHwInfo;					// pointer to our OS dependant information

    // Can't move this to WINNTHWINFO currently because of a hack in state.c
#ifdef NTRM
    VOID*				  DBmpDeviceExtension;			// miniport device extension
#endif

    // These will be moved to the MACOS9HWINFO
#ifdef MACOS
    BOOL                DBrmInitialized;              // per device init flag
    VOID*               DBmpDeviceExtension;          // os's device extension
#endif

#ifdef STEREO_SUPPORT
    //Stereo stuff
    LPNV_CFG_STEREO_PARAMS	pStereoParams;
#endif //STEREO_SUPPORT

} HWINFO;

// This macro will produce a divide by 0 error at compile time if the sizeof HWINFO
// struct is not a multiple of 4. However, it does not help if some sub struct of
// HWINFO is not aligned properly.
#define ASSERT_NVINFO_SIZE if (1/((sizeof(HWINFO) % 4) ? 0 : 1))

#ifndef JV
#ifndef LEGACY_ARCH
#define MAX_INSTANCE 8
#define TEST_DEVICE_NUM 0
#else
#define MAX_INSTANCE 1
#endif
extern  U032   ClientInstance;
extern  PHWINFO NvDBPtr_Table[MAX_INSTANCE];
extern	RMINFO	NvRmInfo;
#endif // JV

// nv10 needs 2 dwords, but nv4 only needs one, so we'll rename one of the
// fields to be the nv4 define
#define VideoScale                   VideoScaleX
#define Buff0VideoScale              Buff0VideoScaleX
#define Buff1VideoScale              Buff1VideoScaleX
#define nvAddr                       pDev->DBnvAddr 
#define romAddr                      pDev->DBromAddr
#define biosAddr                     pDev->DBbiosAddr
#define fbAddr                       pDev->DBfbAddr 
#define CurDacAdr(Head)              GETCRTCHALINFO(pDev,Head,RegOffset)
#define NUM_FIFOS                    pDev->Fifo.HalInfo.Count
#define devInstance                  pDev->DBdevInstance

// Things that were moved from nvarch.h
#define NV10_CHIP_ARCHITECTURE          0x10

// HW description
// TO DO: change this to DEVICE_EXTENT of instance memory so that we will ALWAYS map enuff memory
#define NV_DEVICE_SIZE                   0x740000		// 7M of regs + 256K of instance mem (first 64K is BIOS)
#define INSTANCE_MEMORY_BASE             (pDev->Mapping.PhysAddr + pDev->Pram.HalInfo.PraminOffset)
#define INSTANCE_MEMORY_PHYSICAL_BASE(d) ((d)->Mapping.PhysAddr + pDev->Pram.HalInfo.PraminOffset)
#define INSTANCE_MEMORY_LOGICAL_BASE(d)  ((U008*)(d)->DBnvAddr + pDev->Pram.HalInfo.PraminOffset)
#define INSTANCE_MEMORY_SIZE             0x40000        // 256K
#define ROM_SIZE                         0x8000
#define CHANNEL_LENGTH                   0x10000        // 64K
#define INT_A                            0x01
#define FIFO_USER_BASE(d)                (d->Fifo.HalInfo.UserBase)

#endif // RM_HEADERS_MINIMAL
#endif // _NVRM_H_
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Microsoft Xbox (1.00.4400) [April 2002] [src]\private\ntos\video\nvx\drivers\resman\kernel\inc\state.h ===
#ifndef _STATE_H_
#define _STATE_H_
//
// (C) Copyright NVIDIA Corporation Inc., 1995-2000. All rights reserved.
//
/***************************** HW State Routines ***************************\
*                                                                           *
* Module: STATE.H                                                           *
*       Hardware State is managed in this module.                           *
*                                                                           *
*****************************************************************************
*                                                                           *
* History:                                                                  *
*       David Schmenk (dschmenk)     1/06/95 - wrote it.                    *
*                                                                           *
\***************************************************************************/

//---------------------------------------------------------------------------
//
//  State transition message defines.
//
//---------------------------------------------------------------------------

#define STATE_UPDATE        1
#define STATE_LOAD          2
#define STATE_UNLOAD        3
#define STATE_DESTROY       4
#define STATE_INIT          5

//---------------------------------------------------------------------------
//
//  Real mode state transitions.
//
//---------------------------------------------------------------------------

RM_STATUS stateRModeInit(U032);
RM_STATUS stateRModeSave(U032);
RM_STATUS stateRModeRestore(U032);

//---------------------------------------------------------------------------
//
//  Nv device state transitions.
//
//---------------------------------------------------------------------------

RM_STATUS stateNv(PHWINFO, U032);
RM_STATUS stateAu(PHWINFO, U032);
RM_STATUS stateCodec(PHWINFO, U032);
RM_STATUS stateDac(PHWINFO, U032);
RM_STATUS stateDma(PHWINFO, U032);
RM_STATUS stateFb(PHWINFO, U032);
RM_STATUS stateFifo(PHWINFO, U032);
RM_STATUS stateGr(PHWINFO, U032);
RM_STATUS stateGp(PHWINFO, U032);
RM_STATUS stateMc(PHWINFO, U032);
RM_STATUS stateRMode(U032);
RM_STATUS stateTmr(PHWINFO, U032);
RM_STATUS stateVideo(PHWINFO, U032);
RM_STATUS stateSetMode(PHWINFO);
RM_STATUS stateSetMode_DacClassStyle(PHWINFO);
RM_STATUS stateSetModeMultiHead(PHWINFO, PVIDEO_LUT_CURSOR_DAC_OBJECT);

//---------------------------------------------------------------------------
//
//  Nv device state information.
//
//---------------------------------------------------------------------------

RM_STATUS stateConfigGet(PHWINFO, U032, U032*);
RM_STATUS stateConfigSet(PHWINFO, U032, U032, U032*);

#define CONFIG_GETEX_OK        0
#define CONFIG_GETEX_BAD_READ  1 // matches NVOS_CGE_STATUS_ERROR_OPERATING_SYSTEM
#define CONFIG_GETEX_BAD_INDEX 4 // matches NVOS_CGE_STATUS_ERROR_BAD_INDEX
#define CONFIG_GETEX_BAD_PARAM 6 // matches NVOS_CGE_STATUS_ERROR_BAD_PARAM_STRUCT
#define CONFIG_SETEX_OK        0
#define CONFIG_SETEX_BAD_WRITE 1 // matches NVOS_CGE_STATUS_ERROR_OPERATING_SYSTEM
#define CONFIG_SETEX_BAD_INDEX 4 // matches NVOS_CSE_STATUS_ERROR_BAD_INDEX
#define CONFIG_SETEX_BAD_PARAM 6 // matches NVOS_CSE_STATUS_ERROR_BAD_PARAM_STRUCT

RM_STATUS stateConfigGetEx(PHWINFO, U032, VOID *, U032);
RM_STATUS stateConfigSetEx(PHWINFO, U032, VOID *, U032);

//
// Global extern.
//
//extern HWINFO nvInfo;

#if (_WIN32_WINNT >= 0x0500)
extern U032 GetCurrentDPMSState(VOID *);
#endif


#endif // _STATE_H_
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Microsoft Xbox (1.00.4400) [April 2002] [src]\private\ntos\video\nvx\drivers\resman\kernel\inc\nvhalcpp.h ===
/***************************************************************************\
|*                                                                           *|
|*        Copyright (c) 1993-2000 NVIDIA, Corp.  All rights reserved.        *|
|*                                                                           *|
|*     NOTICE TO USER:   The source code  is copyrighted under  U.S. and     *|
|*     international laws.   NVIDIA, Corp. of Sunnyvale, California owns     *|
|*     the copyright  and as design patents  pending  on the design  and     *|
|*     interface  of the NV chips.   Users and possessors of this source     *|
|*     code are hereby granted  a nonexclusive,  royalty-free  copyright     *|
|*     and  design  patent license  to use this code  in individual  and     *|
|*     commercial software.                                                  *|
|*                                                                           *|
|*     Any use of this source code must include,  in the user documenta-     *|
|*     tion and  internal comments to the code,  notices to the end user     *|
|*     as follows:                                                           *|
|*                                                                           *|
|*     Copyright (c) 1993-2000  NVIDIA, Corp.    NVIDIA  design  patents     *|
|*     pending in the U.S. and foreign countries.                            *|
|*                                                                           *|
|*     NVIDIA, CORP.  MAKES  NO REPRESENTATION ABOUT  THE SUITABILITY OF     *|
|*     THIS SOURCE CODE FOR ANY PURPOSE.  IT IS PROVIDED "AS IS" WITHOUT     *|
|*     EXPRESS OR IMPLIED WARRANTY OF ANY KIND.  NVIDIA, CORP. DISCLAIMS     *|
|*     ALL WARRANTIES  WITH REGARD  TO THIS SOURCE CODE,  INCLUDING  ALL     *|
|*     IMPLIED   WARRANTIES  OF  MERCHANTABILITY  AND   FITNESS   FOR  A     *|
|*     PARTICULAR  PURPOSE.   IN NO EVENT SHALL NVIDIA, CORP.  BE LIABLE     *|
|*     FOR ANY SPECIAL, INDIRECT, INCIDENTAL,  OR CONSEQUENTIAL DAMAGES,     *|
|*     OR ANY DAMAGES  WHATSOEVER  RESULTING  FROM LOSS OF USE,  DATA OR     *|
|*     PROFITS,  WHETHER IN AN ACTION  OF CONTRACT,  NEGLIGENCE OR OTHER     *|
|*     TORTIOUS ACTION, ARISING OUT  OF OR IN CONNECTION WITH THE USE OR     *|
|*     PERFORMANCE OF THIS SOURCE CODE.                                      *|
|*                                                                           *|
 \***************************************************************************/

/************************** HAL/RM Interfaces ******************************\
*                                                                           *
* Module: nvhalcpp.h                                                        *
*   This include file contains any macro redefinitions required within the  *
*   HAL code to allow sharing of cpp directives between the RM and the HAL. *
*****************************************************************************
*                                                                           *
* History:                                                                  *
*                                                                           *
\***************************************************************************/

#undef nvAddr
#undef ChipBugs
#define ChipBugs  pHalHwInfo->pMcHalInfo->ChipBugs

#ifdef DEBUG

#undef  DBG_PRINT_STRING
#define DBG_PRINT_STRING(d,s) (*((PHALRMFUNCS_000)((PHALHWINFO) pHalHwInfo)->pHalRmFuncs)->_nvHalRmPrintString)((PHALHWINFO) pHalHwInfo->pDeviceId, d, s)  

#undef  DBG_PRINT_VALUE
#define DBG_PRINT_VALUE(d,v) (*((PHALRMFUNCS_000)((PHALHWINFO) pHalHwInfo)->pHalRmFuncs)->_nvHalRmPrintValue)((PHALHWINFO) pHalHwInfo->pDeviceId, d, v) 

#undef  DBG_PRINT_STRING_VALUE
#define DBG_PRINT_STRING_VALUE(d,s,v) (*((PHALRMFUNCS_000)((PHALHWINFO) pHalHwInfo)->pHalRmFuncs)->_nvHalRmPrintStringValue)((PHALHWINFO) pHalHwInfo->pDeviceId, d, s, v) 

#undef  DBG_PRINT_STRING_PTR
#define DBG_PRINT_STRING_PTR(d,s,v) (*((PHALRMFUNCS_000)((PHALHWINFO) pHalHwInfo)->pHalRmFuncs)->_nvHalRmPrintStringPtr)((PHALHWINFO) pHalHwInfo->pDeviceId, d, s, (VOID*) v) 

#undef  DBG_PRINT_STRING_VAL64
#define DBG_PRINT_STRING_VAL64(d,s,v) (*((PHALRMFUNCS_000)((PHALHWINFO) pHalHwInfo)->pHalRmFuncs)->_nvHalRmPrintStringVal64)((PHALHWINFO) pHalHwInfo->pDeviceId, d, s, v) 

#undef  DBG_BREAKPOINT
#define DBG_BREAKPOINT() (*((PHALRMFUNCS_000)((PHALHWINFO) pHalHwInfo)->pHalRmFuncs)->_nvHalRmBreakPoint)((PHALHWINFO) pHalHwInfo->pDeviceId) 

#else // DEBUG

#undef  DBG_PRINT_STRING
#define DBG_PRINT_STRING(d,s) ((void)0)

#undef  DBG_PRINT_VALUE
#define DBG_PRINT_VALUE(d,v) ((void)0)

#undef  DBG_PRINT_STRING_VALUE
#define DBG_PRINT_STRING_VALUE(d,s,v) ((void)0)

#undef  DBG_PRINT_STRING_PTR
#define DBG_PRINT_STRING_PTR(d,s,v) ((void)0)

#undef  DBG_PRINT_STRING_VAL64
#define DBG_PRINT_STRING_VAL64(d,s,v) ((void)0)

#undef  DBG_BREAKPOINT
#define DBG_BREAKPOINT() ((void)0)

#endif // DEBUG

#undef REG_WR08
#undef REG_RD08
#define REG_WR08(o,v)   (*((PHALRMFUNCS_000)((PHALHWINFO) pHalHwInfo)->pHalRmFuncs)->_nvHalRmRegWr08)((PHALHWINFO) pHalHwInfo->pDeviceId, o, (U008) v)
#define REG_RD08(o)		(*((PHALRMFUNCS_000)((PHALHWINFO) pHalHwInfo)->pHalRmFuncs)->_nvHalRmRegRd08)((PHALHWINFO) pHalHwInfo->pDeviceId, o)

#undef REG_WR32
#undef REG_RD32
#define REG_WR32(o,v)   (*((PHALRMFUNCS_000)((PHALHWINFO) pHalHwInfo)->pHalRmFuncs)->_nvHalRmRegWr32)((PHALHWINFO) pHalHwInfo->pDeviceId, o, v)
#define REG_RD32(o)		(*((PHALRMFUNCS_000)((PHALHWINFO) pHalHwInfo)->pHalRmFuncs)->_nvHalRmRegRd32)((PHALHWINFO) pHalHwInfo->pDeviceId, o)

#undef osDelay
#define osDelay(m)      (*((PHALRMFUNCS_000)((PHALHWINFO) pHalHwInfo)->pHalRmFuncs)->_nvHalRmDelay)((PHALHWINFO) pHalHwInfo->pDeviceId, m)

#undef INST_RD32
#define INST_RD32(i,o)      REG_RD32((pHalHwInfo->pPramHalInfo->PraminOffset+((i)<<4)+(o)))

#undef INST_WR32
#define INST_WR32(i,o,d)    REG_WR32((pHalHwInfo->pPramHalInfo->PraminOffset+((i)<<4)+(o)),(d))
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Microsoft Xbox (1.00.4400) [April 2002] [src]\private\ntos\video\nvx\drivers\resman\kernel\inc\tmr.h ===
#ifndef _TMR_H_
#define _TMR_H_
//
// (C) Copyright NVIDIA Corporation Inc., 1995-2000. All rights reserved.
//
/****************************** Timer Module *******************************\
*                                                                           *
* Module: TMR.H                                                             *
*       Timer functions.                                                    *
*                                                                           *
*****************************************************************************
*                                                                           *
* History:                                                                  *
*       David Schmenk (dschmenk)    01/24/95 - rewrote it.                  *
*                                                                           *
\***************************************************************************/

//---------------------------------------------------------------------------
//
//  Defines.
//
//---------------------------------------------------------------------------

#define NUM_TIMERCALLBACKS              32
typedef RM_STATUS (*TIMEPROC)(PHWINFO, POBJECT);

//---------------------------------------------------------------------------
//
//  Time objects.
//
//---------------------------------------------------------------------------

struct _def_context_time_object
{
    OBJECT   Base;
    U032     TimeLo;
    U032     TimeHi;
    TIMEPROC TimeProc;
    POBJECT  TimeChange;
};
typedef struct _def_timer_object
{
    COMMONOBJECT    Common;
//    PDMAOBJECT NotifyXlate;
//    U032       NotifyAction;
    U032            State;
    U032            AlarmLo;
    U032            AlarmHi;
} TIMEROBJECT, *PTIMEROBJECT;

//---------------------------------------------------------------------------
//
//  Timer callbacks.
//
//---------------------------------------------------------------------------

typedef struct _def_timer_callback
{
    TIMEPROC Callback;
    POBJECT  Object;
    U032     TimeLo;
    U032     TimeHi;
    struct   _def_timer_callback *Next;
} TIMERCALLBACK, *PTIMERCALLBACK;

//---------------------------------------------------------------------------
//
//  Function prototypes.
//
//---------------------------------------------------------------------------

RM_STATUS initTmr(PHWINFO);
RM_STATUS tmrCreateTimer(VOID*, PCLASSOBJECT, U032, POBJECT *, VOID*);
RM_STATUS tmrDeleteTimer(VOID*, POBJECT);
RM_STATUS tmrAlarmNotify(PHWINFO, POBJECT);
RM_STATUS tmrStatTimer(PHWINFO, POBJECT);
RM_STATUS tmrGetCurrentTime(PHWINFO, U032 *, U032 *);
RM_STATUS tmrDelay(PHWINFO, U032);
RM_STATUS tmrScheduleCallbackAbs(PHWINFO, TIMEPROC, POBJECT, U032, U032);
RM_STATUS tmrScheduleCallbackRel(PHWINFO, TIMEPROC, POBJECT, U032, U032);
RM_STATUS tmrCancelCallback(PHWINFO, POBJECT);
RM_STATUS tmrStopTransfer(PHWINFO, POBJECT, PMETHOD, U032, V032);
V032      tmrService(PHWINFO);
#endif // _TMR_H_
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Microsoft Xbox (1.00.4400) [April 2002] [src]\private\ntos\video\nvx\drivers\resman\kernel\inc\vblank.h ===
#ifndef _VBLANK_H_
#define _VBLANK_H_
//
// (C) Copyright NVIDIA Corporation Inc., 1995,1996. All rights reserved.
//
/***************************** VBlank Module *******************************\
*                                                                           *
* Module: VBLANK.H                                                          *
*       VBlank notification structures.  VBlank is used as a scheduling     *
*   mechanism for events that are closely tied to the video refresh rate.   *
*                                                                           *
*****************************************************************************
*                                                                           *
* History:                                                                  *
*       David Schmenk (dschmenk)    02/25/95 - rewrote it.                  *
*                                                                           *
\***************************************************************************/

//---------------------------------------------------------------------------
//
//  Defines.
//
//---------------------------------------------------------------------------

typedef RM_STATUS (*VBLANKPROC)(PHWINFO, POBJECT, U032, V032, RM_STATUS);
typedef RM_STATUS (*VBLANKCALLBACKPROC)(PHWINFO, POBJECT, U032, U032, RM_STATUS);
//---------------------------------------------------------------------------
//
//  Time objects.
//
//---------------------------------------------------------------------------

typedef struct _def_vblank_notify
{
    VBLANKPROC Proc;
    POBJECT    Object;
    PDMAOBJECT Xlate;
    U032       Pending;
    U032       Action;
    V032       Param1;
    V032       Param2;
    RM_STATUS  Status;
    struct _def_vblank_notify *Next;
} VBLANKNOTIFY, *PVBLANKNOTIFY;

#define CALLBACK_FLAG_SPECIFIED_VBLANK_COUNT        0x00000001
#define CALLBACK_FLAG_COMPLETE_ON_OBJECT_CLEANUP    0x00000002

typedef struct _def_vblank_callback
{
    VBLANKCALLBACKPROC Proc;
    POBJECT            Object;
    U032               Param1;
    U032               Param2;
    U032               VBlankCount;
    U032               Flags;
    RM_STATUS          Status;
    struct _def_vblank_callback *Next;
} VBLANKCALLBACK, *PVBLANKCALLBACK;
//---------------------------------------------------------------------------
//
//  Function prototypes.
//
//---------------------------------------------------------------------------

VOID VBlank(PHWINFO);
VOID VBlankAddCallback(PHWINFO, U032, PVBLANKCALLBACK);
VOID VBlankDeleteCallback(PHWINFO, U032, PVBLANKCALLBACK);
U032 VBlankPending(PHWINFO);

#define NV4_TV_DAC_SHIFT    0x00010004
								// due to a bug in NV4 HW, the cursor and video scalar are shifted,
                                // so we add an adjustment to the position
#ifdef  DAC_HACK
VOID FixupPcJoystick(VOID);
#endif  // DAC_HACK

#endif // _VBLANK_H_
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Microsoft Xbox (1.00.4400) [April 2002] [src]\private\ntos\video\nvx\drivers\resman\kernel\inc\vid.h ===
#ifndef _VID_H_
#define _VID_H_
//
// (C) Copyright NVIDIA Corporation Inc., 1995-2000. All rights reserved.
//
/****************************** Video Control ******************************\
*                                                                           *
* Module: VID.H                                                             *
*       Video Includes.                                                     *
*                                                                           *
*****************************************************************************
*                                                                           *
* History:                                                                  *
*                                                                           *
\***************************************************************************/

//---------------------------------------------------------------------------
//
//  Structures.
//
//---------------------------------------------------------------------------

//---------------------------------------------------------------------------
//
//  Macros.
//
//---------------------------------------------------------------------------

//---------------------------------------------------------------------------
//
//  Function prototypes.
//
//---------------------------------------------------------------------------

// video.c
V032 videoService(PHWINFO);

// videobj.c
RM_STATUS videoCreateObj(VOID*, PCLASSOBJECT, U032, POBJECT *, VOID*);
RM_STATUS videoDestroyObj(VOID*, POBJECT);
V032 videoFromMemService(PHWINFO, POBJECT);
V032 videoOverlayService(PHWINFO, POBJECT);
VOID videoUpdateWindowStart(PHWINFO, S016, S016);

#endif // _VID_H_
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Microsoft Xbox (1.00.4400) [April 2002] [src]\private\ntos\video\nvx\drivers\resman\kernel\inc\nv_uep.h ===
#ifndef __NV_EAP_H__
#define __NV_EAP_H__

// software methods for the EP...
#define NV1BAE_PIO_SET_OUTBUF_BA(i)                             (0x00000000+(i)*8) /* -W-4A */
#define NV1BAE_PIO_SET_OUTBUF_BA__SIZE_1                        4 /* */ 
#define NV1BAE_PIO_SET_OUTBUF_BA_ADDRESS                        23:0 /* -W-UF */
#define NV1BAE_PIO_SET_OUTBUF_LEN(i)                            (0x00000004+(i)*8) /* -W-4A */
#define NV1BAE_PIO_SET_OUTBUF_LEN__SIZE_1                       4 /* */ 
#define NV1BAE_PIO_SET_OUTBUF_LEN_VALUE                         23:0 /* -W-UF */
#define NV1BAE_PIO_SET_CURRENT_OUTBUF_SGE                       0x00000800 /* -W-4R */
#define NV1BAE_PIO_SET_CURRENT_OUTBUF_SGE_HANDLE                31:0 /* -W-VF */
#define NV1BAE_PIO_SET_CURRENT_BUFFER_SGE_CONTEXT_DMA           0x00000804 /* -W-4R */
#define NV1BAE_PIO_SET_CURRENT_BUFFER_SGE_CONTEXT_DMA_HANDLE    31:0 /* -W-VF */
#define NV1BAE_PIO_SET_CURRENT_OUTBUF_SGE_OFFSET                0x00000808 /* -W-4R */
#define NV1BAE_PIO_SET_CURRENT_OUTBUF_SGE_OFFSET_PARAMETER      31:12 /* -W-VF */
#define NV1BAE_PIO_SET_STATE                                    0x0000080C
#define NV1BAE_PIO_SET_STATE_VALUE                              0:0
#define NV1BAE_PIO_SET_STATE_OFF                                0x00
#define NV1BAE_PIO_SET_STATE_ON                                 0x01
#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Microsoft Xbox (1.00.4400) [April 2002] [src]\private\ntos\video\nvx\drivers\resman\kernel\inc\nv_ref.h ===
//
// (C) Copyright NVIDIA Corporation Inc., 1995,1996. All rights reserved.
//
/***************************************************************************\
*                                                                           *
*               Hardware Reference Manual extracted defines.                *
*                                                                           *
\***************************************************************************/
#ifndef _NV_REF_H_
#define _NV_REF_H_

//
// VGA hardware is supported on NV3/NV4/NV10
//
#define NV_VGA  1

#ifdef NV3_HW
//
// VGA hardware is supported on NV3
//
#include <nv3_ref.h>
#define NV_PFIFO_CACHE1_SIZE                                  32
#define BUG_BM_OFF()
#define BUG_BM_ON()

#else
//
// These registers can be accessed by chip-independent code as
// well as chip-dependent code.
//

/* NVidia Corporation */ 
/* basis: nv4 manuals 
built on Tue Nov 17 04:01:20 PST 1998*/

#ifndef _NV_REG_H_
#define _NV_REG_H_

#ifdef DEBUG
/*
 * These macros are here strictly for debugging purposes.
 * For the real definitions to be used in the code, refer to
 * the chip-specific headers.
 */
#define NV_PGRAPH_DMA_A_XLATE_INST                       0x00401040 /* RW-4R */
#define NV_PGRAPH_DMA_A_CONTROL                          0x00401044 /* RW-4R */
#define NV_PGRAPH_DMA_A_LIMIT                            0x00401048 /* RW-4R */
#define NV_PGRAPH_DMA_A_TLB_PTE                          0x0040104C /* RW-4R */
#define NV_PGRAPH_DMA_A_TLB_TAG                          0x00401050 /* RW-4R */
#define NV_PGRAPH_DMA_A_ADJ_OFFSET                       0x00401054 /* RW-4R */
#define NV_PGRAPH_DMA_A_OFFSET                           0x00401058 /* RW-4R */
#define NV_PGRAPH_DMA_A_SIZE                             0x0040105C /* RW-4R */
#define NV_PGRAPH_DMA_A_Y_SIZE                           0x00401060 /* RW-4R */

#define NV_PGRAPH_DMA_B_XLATE_INST                       0x00401080 /* RW-4R */
#define NV_PGRAPH_DMA_B_CONTROL                          0x00401084 /* RW-4R */
#define NV_PGRAPH_DMA_B_LIMIT                            0x00401088 /* RW-4R */
#define NV_PGRAPH_DMA_B_TLB_PTE                          0x0040108C /* RW-4R */
#define NV_PGRAPH_DMA_B_TLB_TAG                          0x00401090 /* RW-4R */
#define NV_PGRAPH_DMA_B_ADJ_OFFSET                       0x00401094 /* RW-4R */
#define NV_PGRAPH_DMA_B_OFFSET                           0x00401098 /* RW-4R */
#define NV_PGRAPH_DMA_B_SIZE                             0x0040109C /* RW-4R */
#define NV_PGRAPH_DMA_B_Y_SIZE                           0x004010A0 /* RW-4R */
#endif

/* dev_bus.ref */
/*
 * This macro is used in the NvDeviceBaseGet 16bit call.
 */
#define NV_SPACE                              0x01FFFFFF:0x00000000 /* RW--D */
/* dev_bus.ref */
#define NV_CONFIG                             0x000000FF:0x00000000 /* RW--D */
#define NV_CONFIG_PCI_NV_0                               0x00000000 /* R--4R */
#define NV_CONFIG_PCI_NV_0__ALIAS_1                NV_PBUS_PCI_NV_0 /*       */
#define NV_CONFIG_PCI_NV_0_DEVICE_ID                          31:16 /* R--UF */
#define NV_CONFIG_PCI_NV_0_DEVICE_ID_NV01_A              0x00000009 /* ----V */
#define NV_CONFIG_PCI_NV_0_DEVICE_ID_NV01_B_B02_B03_C01  0x00000008 /* ----V */
#define NV_CONFIG_PCI_NV_0_DEVICE_ID_NV02_A01            0x00000010 /* ----V */
#define NV_CONFIG_PCI_NV_0_DEVICE_ID_NV03_NOACPI         0x00000018 /* ----V */
#define NV_CONFIG_PCI_NV_0_DEVICE_ID_NV03_ACPI           0x00000019 /* ----V */
#define NV_CONFIG_PCI_NV_0_DEVICE_ID_NV04                0x00000020 /* ----V */
#define NV_CONFIG_PCI_NV_0_DEVICE_ID_NV05_DEVID0         0x00000028 /* ----V */
#define NV_CONFIG_PCI_NV_0_DEVICE_ID_NV05_DEVID1         0x00000029 /* ----V */
#define NV_CONFIG_PCI_NV_0_DEVICE_ID_NV05_DEVID2         0x0000002A /* ----V */
#define NV_CONFIG_PCI_NV_0_DEVICE_ID_NV05_DEVID3         0x0000002B /* ----V */
#define NV_CONFIG_PCI_NV_0_DEVICE_ID_NV06_DEVID0         0x0000002C /* ----V */
#define NV_CONFIG_PCI_NV_0_DEVICE_ID_NV06_DEVID1         0x0000002D /* ----V */
#define NV_CONFIG_PCI_NV_0_DEVICE_ID_NV06_DEVID2         0x0000002E /* ----V */
#define NV_CONFIG_PCI_NV_0_DEVICE_ID_NV06_DEVID3         0x0000002F /* ----V */
#define NV_CONFIG_PCI_NV_0_DEVICE_ID_NV0A_DEVID0         0x000000A0 /* ----V */
#define NV_CONFIG_PCI_NV_0_DEVICE_ID_NV0A_DEVID1         0x000000A1 /* ----V */
#define NV_CONFIG_PCI_NV_0_DEVICE_ID_NV0A_DEVID2         0x000000A2 /* ----V */
#define NV_CONFIG_PCI_NV_0_DEVICE_ID_NV0A_DEVID3         0x000000A3 /* ----V */
#define NV_CONFIG_PCI_NV_0_DEVICE_ID_NV10_DEVID0         0x00000100 /* C---V */
#define NV_CONFIG_PCI_NV_0_DEVICE_ID_NV10_DEVID1         0x00000101 /* C---V */
#define NV_CONFIG_PCI_NV_0_DEVICE_ID_NV10_DEVID2         0x00000102 /* C---V */
#define NV_CONFIG_PCI_NV_0_DEVICE_ID_NV10_DEVID3         0x00000103 /* C---V */
#define NV_CONFIG_PCI_NV_0_DEVICE_ID_NV11_DEVID0         0x00000110 /* C---V */
#define NV_CONFIG_PCI_NV_0_DEVICE_ID_NV11_DEVID1         0x00000111 /* C---V */
#define NV_CONFIG_PCI_NV_0_DEVICE_ID_NV11_DEVID2         0x00000112 /* C---V */
#define NV_CONFIG_PCI_NV_0_DEVICE_ID_NV11_DEVID3         0x00000113 /* C---V */
#define NV_CONFIG_PCI_NV_0_DEVICE_ID_NV15_DEVID0         0x00000150 /* C---V */
#define NV_CONFIG_PCI_NV_0_DEVICE_ID_NV15_DEVID1         0x00000151 /* C---V */
#define NV_CONFIG_PCI_NV_0_DEVICE_ID_NV15_DEVID2         0x00000152 /* C---V */
#define NV_CONFIG_PCI_NV_0_DEVICE_ID_NV15_DEVID3         0x00000153 /* C---V */
#define NV_CONFIG_PCI_NV_0_DEVICE_ID_NV20_DEVID0         0x00000200 /* C---V */
#define NV_CONFIG_PCI_NV_0_DEVICE_ID_NV20_DEVID1         0x00000201 /* C---V */
#define NV_CONFIG_PCI_NV_0_DEVICE_ID_NV20_DEVID2         0x00000202 /* C---V */
#define NV_CONFIG_PCI_NV_0_DEVICE_ID_NV20_DEVID3         0x00000203 /* C---V */
#define NV_CONFIG_PCI_NV_1                               0x00000004 /* RW-4R */
#define NV_CONFIG_PCI_NV_1__ALIAS_1                NV_PBUS_PCI_NV_1 /*       */
#define NV_CONFIG_PCI_NV_2                               0x00000008 /* R--4R */
#define NV_CONFIG_PCI_NV_2__ALIAS_1                NV_PBUS_PCI_NV_2 /*       */
#define NV_CONFIG_PCI_NV_3                               0x0000000C /* RW-4R */
#define NV_CONFIG_PCI_NV_3__ALIAS_1                NV_PBUS_PCI_NV_3 /*       */
#define NV_CONFIG_PCI_NV_4                               0x00000010 /* RW-4R */
#define NV_CONFIG_PCI_NV_4__ALIAS_1                NV_PBUS_PCI_NV_4 /*       */
#define NV_CONFIG_PCI_NV_5                               0x00000014 /* RW-4R */
#define NV_CONFIG_PCI_NV_5__ALIAS_1                NV_PBUS_PCI_NV_5 /*       */
#define NV_CONFIG_PCI_NV_6                               0x00000018 /* RW-4R */
#define NV_CONFIG_PCI_NV_6__ALIAS_1                NV_PBUS_PCI_NV_6 /*       */
#define NV_CONFIG_PCI_NV_7(i)                    (0x0000001C+(i)*4) /* R--4A */
#define NV_CONFIG_PCI_NV_7__SIZE_1                                4 /*       */
#define NV_CONFIG_PCI_NV_7__ALIAS_1                NV_PBUS_PCI_NV_7 /*       */
#define NV_CONFIG_PCI_NV_11                              0x0000002C /* R--4R */
#define NV_CONFIG_PCI_NV_11__ALIAS_1              NV_PBUS_PCI_NV_11 /*       */
#define NV_CONFIG_PCI_NV_12                              0x00000030 /* RW-4R */
#define NV_CONFIG_PCI_NV_12__ALIAS_1              NV_PBUS_PCI_NV_12 /*       */
#define NV_CONFIG_PCI_NV_13                              0x00000034 /* RW-4R */
#define NV_CONFIG_PCI_NV_13__ALIAS_1              NV_PBUS_PCI_NV_13 /*       */
#define NV_CONFIG_PCI_NV_14                              0x00000038 /* R--4R */
#define NV_CONFIG_PCI_NV_14__ALIAS_1              NV_PBUS_PCI_NV_14 /*       */
#define NV_CONFIG_PCI_NV_15                              0x0000003C /* RW-4R */
#define NV_CONFIG_PCI_NV_15__ALIAS_1              NV_PBUS_PCI_NV_15 /*       */
#define NV_CONFIG_PCI_NV_16                              0x00000040 /* RW-4R */
#define NV_CONFIG_PCI_NV_16__ALIAS_1              NV_PBUS_PCI_NV_16 /*       */
#define NV_CONFIG_PCI_NV_17                              0x00000044 /* RW-4R */
#define NV_CONFIG_PCI_NV_17__ALIAS_1              NV_PBUS_PCI_NV_17 /*       */
#define NV_CONFIG_PCI_NV_18                              0x00000048 /* RW-4R */
#define NV_CONFIG_PCI_NV_18__ALIAS_1              NV_PBUS_PCI_NV_18 /*       */
#define NV_CONFIG_PCI_NV_19                              0x0000004C /* RW-4R */
#define NV_CONFIG_PCI_NV_19__ALIAS_1              NV_PBUS_PCI_NV_19 /*       */
#define NV_CONFIG_PCI_NV_20                              0x00000050 /* RW-4R */
#define NV_CONFIG_PCI_NV_20__ALIAS_1              NV_PBUS_PCI_NV_20 /*       */
#define NV_CONFIG_PCI_NV_21                              0x00000054 /* RW-4R */
#define NV_CONFIG_PCI_NV_21__ALIAS_1              NV_PBUS_PCI_NV_21 /*       */
#define NV_CONFIG_PCI_NV_22                              0x00000058 /* RW-4R */
#define NV_CONFIG_PCI_NV_22__ALIAS_1              NV_PBUS_PCI_NV_22 /*       */
#define NV_CONFIG_PCI_NV_23                              0x0000005C /* RW-4R */
#define NV_CONFIG_PCI_NV_23__ALIAS_1              NV_PBUS_PCI_NV_23 /*       */
#define NV_CONFIG_PCI_NV_24                              0x00000060 /* RW-4R */
#define NV_CONFIG_PCI_NV_24__ALIAS_1              NV_PBUS_PCI_NV_24 /*       */
#define NV_CONFIG_PCI_NV_25                              0x00000064 /* RW-4R */
#define NV_CONFIG_PCI_NV_25__ALIAS_1              NV_PBUS_PCI_NV_25 /*       */
#define NV_CONFIG_PCI_NV_26(i)                   (0x00000068+(i)*4) /* R--4A */
#define NV_CONFIG_PCI_NV_26__SIZE_1                              38 /*       */
#define NV_CONFIG_PCI_NV_26__ALIAS_1              NV_PBUS_PCI_NV_25 /*       */
/* dev_dac.ref */
#define NV_PRAMDAC                            0x00680FFF:0x00680300 /* RW--D */
#define NV_PRAMDAC_CU_START_POS                          0x00680300 /* RW-4R */
#define NV_PRAMDAC_CU_START_POS_X                              11:0 /* RWXSF */
#define NV_PRAMDAC_CU_START_POS_Y                             27:16 /* RWXSF */
#define NV_PRAMDAC_CURSOR_CNTRL                          0x00680320 /* RWI4R */
#define NV_PRAMDAC_CURSOR_CNTRL_ADDRESS                         3:0 /* RW--F */
#define NV_PRAMDAC_CURSOR_CNTRL_RAM                             8:8 /* -W--F */
#define NV_PRAMDAC_CURSOR_CNTRL_RAM_RD                          9:9 /* R---F */
#define NV_PRAMDAC_CURSOR_CNTR_TESTMODE                       16:16 /* -W--F */
#define NV_PRAMDAC_CURSOR_CNTR_TESTMODE_RD                    17:17 /* R---F */
#define NV_PRAMDAC_CURSOR_CNTR_TESTMODE_ENABLE                    1 /* RW--V */
#define NV_PRAMDAC_CURSOR_CNTR_TESTMODE_DISABLE                   0 /* RW--V */
#define NV_PRAMDAC_CURSOR_DATA_31_0                      0x00680324 /* RWI4R */
#define NV_PRAMDAC_CURSOR_DATA_31_0_VAL                        31:0 /* RW--F */
#define NV_PRAMDAC_CURSOR_DATA_63_32                     0x00680328 /* RWI4R */
#define NV_PRAMDAC_CURSOR_DATA_63_32_VAL                       31:0 /* RW--F */
#define NV_PRAMDAC_CURSOR_DATA_95_64                     0x0068032C /* RWI4R */
#define NV_PRAMDAC_CURSOR_DATA_95_64_VAL                       31:0 /* RW--F */
#define NV_PRAMDAC_CURSOR_DATA_127_96                    0x00680330 /* RWI4R */
#define NV_PRAMDAC_CURSOR_DATA_127_96_VAL                      31:0 /* RW--F */
#define NV_PRAMDAC_NVPLL_COEFF                           0x00680500 /* RW-4R */
#define NV_PRAMDAC_NVPLL_COEFF_MDIV                             7:0 /* RWIUF */
#define NV_PRAMDAC_NVPLL_COEFF_NDIV                            15:8 /* RWIUF */
#define NV_PRAMDAC_NVPLL_COEFF_PDIV                           18:16 /* RWIVF */
#define NV_PRAMDAC_MPLL_COEFF                            0x00680504 /* RW-4R */
#define NV_PRAMDAC_MPLL_COEFF_MDIV                              7:0 /* RWIUF */
#define NV_PRAMDAC_MPLL_COEFF_NDIV                             15:8 /* RWIUF */
#define NV_PRAMDAC_MPLL_COEFF_PDIV                            18:16 /* RWIVF */
#define NV_PRAMDAC_VPLL_COEFF                            0x00680508 /* RW-4R */
#define NV_PRAMDAC_VPLL_COEFF_MDIV                              7:0 /* RWIUF */
#define NV_PRAMDAC_VPLL_COEFF_NDIV                             15:8 /* RWIUF */
#define NV_PRAMDAC_VPLL_COEFF_PDIV                            18:16 /* RWIVF */
#define NV_PRAMDAC_PLL_COEFF_SELECT                      0x0068050C /* RW-4R */
#define NV_PRAMDAC_PLL_COEFF_SELECT_VPLL_SOURCE                 0:0 /* RWIVF */
#define NV_PRAMDAC_PLL_COEFF_SELECT_VPLL_SOURCE_XTAL     0x00000000 /* RWI-V */
#define NV_PRAMDAC_PLL_COEFF_SELECT_VPLL_SOURCE_VIP      0x00000001 /* RW--V */
#define NV_PRAMDAC_PLL_COEFF_SELECT_SOURCE                     10:8 /* RWIVF */
#define NV_PRAMDAC_PLL_COEFF_SELECT_SOURCE_DEFAULT       0x00000000 /* RWI-V */
#define NV_PRAMDAC_PLL_COEFF_SELECT_SOURCE_PROG_MPLL     0x00000001 /* RW--V */
#define NV_PRAMDAC_PLL_COEFF_SELECT_SOURCE_PROG_VPLL     0x00000002 /* RW--V */
#define NV_PRAMDAC_PLL_COEFF_SELECT_SOURCE_PROG_NVPLL    0x00000004 /* RW--V */
#define NV_PRAMDAC_PLL_COEFF_SELECT_SOURCE_PROG_ALL      0x00000007 /* RW--V */
#define NV_PRAMDAC_PLL_COEFF_SELECT_MSOURCE                     8:8 /* RWIVF */
#define NV_PRAMDAC_PLL_COEFF_SELECT_MSOURCE_DEFAULT      0x00000000 /* RWI-V */
#define NV_PRAMDAC_PLL_COEFF_SELECT_MSOURCE_PROG         0x00000001 /* RW--V */
#define NV_PRAMDAC_PLL_COEFF_SELECT_V1SOURCE                    9:9 /* RWIVF */
#define NV_PRAMDAC_PLL_COEFF_SELECT_V1SOURCE_DEFAULT     0x00000000 /* RWI-V */
#define NV_PRAMDAC_PLL_COEFF_SELECT_V1SOURCE_PROG        0x00000001 /* RW--V */
#define NV_PRAMDAC_PLL_COEFF_SELECT_NVSOURCE                  10:10 /* RWIVF */
#define NV_PRAMDAC_PLL_COEFF_SELECT_NVSOURCE_DEFAULT     0x00000000 /* RWI-V */
#define NV_PRAMDAC_PLL_COEFF_SELECT_NVSOURCE_PROG        0x00000001 /* RW--V */
#define NV_PRAMDAC_PLL_COEFF_SELECT_V2SOURCE                  11:11 /* RWIVF */
#define NV_PRAMDAC_PLL_COEFF_SELECT_V2SOURCE_DEFAULT     0x00000000 /* RWI-V */
#define NV_PRAMDAC_PLL_COEFF_SELECT_V2SOURCE_PROG        0x00000001 /* RW--V */
#define NV_PRAMDAC_PLL_COEFF_SELECT_VS_PCLK_TV                17:16 /* RWIVF */
#define NV_PRAMDAC_PLL_COEFF_SELECT_VS_PCLK_TV_NONE      0x00000000 /* RWI-V */
#define NV_PRAMDAC_PLL_COEFF_SELECT_VS_PCLK_TV_VSCLK     0x00000001 /* RW--V */
#define NV_PRAMDAC_PLL_COEFF_SELECT_VS_PCLK_TV_PCLK      0x00000002 /* RW--V */
#define NV_PRAMDAC_PLL_COEFF_SELECT_VS_PCLK_TV_BOTH      0x00000003 /* RW--V */
#define NV_PRAMDAC_PLL_COEFF_SELECT_VS_PCLK2_TV               19:18 /* RWIVF */
#define NV_PRAMDAC_PLL_COEFF_SELECT_VS_PCLK2_TV_NONE     0x00000000 /* RWI-V */
#define NV_PRAMDAC_PLL_COEFF_SELECT_VS_PCLK2_TV_VSCLK    0x00000001 /* RW--V */
#define NV_PRAMDAC_PLL_COEFF_SELECT_VS_PCLK2_TV_PCLK     0x00000002 /* RW--V */
#define NV_PRAMDAC_PLL_COEFF_SELECT_VS_PCLK2_TV_BOTH     0x00000003 /* RW--V */
#define NV_PRAMDAC_PLL_COEFF_SELECT_TVCLK_SOURCE              20:20 /* RWIVF */
#define NV_PRAMDAC_PLL_COEFF_SELECT_TVCLK_SOURCE_EXT     0x00000000 /* RWI-V */
#define NV_PRAMDAC_PLL_COEFF_SELECT_TVCLK_SOURCE_VIP     0x00000001 /* RW--V */
#define NV_PRAMDAC_PLL_COEFF_SELECT_TVCLK_RATIO               24:24 /* RWIVF */
#define NV_PRAMDAC_PLL_COEFF_SELECT_TVCLK_RATIO_DB1      0x00000000 /* RWI-V */
#define NV_PRAMDAC_PLL_COEFF_SELECT_TVCLK_RATIO_DB2      0x00000001 /* RW--V */
#define NV_PRAMDAC_PLL_COEFF_SELECT_VCLK_RATIO                28:28 /* RWIVF */
#define NV_PRAMDAC_PLL_COEFF_SELECT_VCLK_RATIO_DB1       0x00000000 /* RWI-V */
#define NV_PRAMDAC_PLL_COEFF_SELECT_VCLK_RATIO_DB2       0x00000001 /* RW--V */
#define NV_PRAMDAC_PLL_COEFF_SELECT_VCLK2_RATIO               29:29 /* RWIVF */
#define NV_PRAMDAC_PLL_COEFF_SELECT_VCLK2_RATIO_DB1      0x00000000 /* RWI-V */
#define NV_PRAMDAC_PLL_COEFF_SELECT_VCLK2_RATIO_DB2      0x00000001 /* RW--V */
#define NV_PRAMDAC_PLL_SETUP_CONTROL                     0x00680510 /* RW-4R */
#define NV_PRAMDAC_PLL_SETUP_CONTROL_VALUE                     10:0 /* RWIVF */
#define NV_PRAMDAC_PLL_SETUP_CONTROL_VAL                 0x0000044E /* RWI-V */
/*
 * NV_PRAMDAC_PLL_SETUP_PWRDWN is chip-dependent
 */
#define NV_PRAMDAC_PLL_TEST_COUNTER                      0x00680514 /* RW-4R */
#define NV_PRAMDAC_PLL_TEST_COUNTER_NOOFIPCLKS                  9:0 /* -WIVF */
#define NV_PRAMDAC_PLL_TEST_COUNTER_VALUE                      15:0 /* R--VF */
#define NV_PRAMDAC_PLL_TEST_COUNTER_ENABLE                    16:16 /* RWIVF */
#define NV_PRAMDAC_PLL_TEST_COUNTER_ENABLE_DEASSERTED    0x00000000 /* RWI-V */
#define NV_PRAMDAC_PLL_TEST_COUNTER_ENABLE_ASSERTED      0x00000001 /* RW--V */
#define NV_PRAMDAC_PLL_TEST_COUNTER_RESET                     20:20 /* RWIVF */
#define NV_PRAMDAC_PLL_TEST_COUNTER_RESET_DEASSERTED     0x00000000 /* RWI-V */
#define NV_PRAMDAC_PLL_TEST_COUNTER_RESET_ASSERTED       0x00000001 /* RW--V */
#define NV_PRAMDAC_PLL_TEST_COUNTER_SOURCE_VCLK2         0x00000004 /* RW--V */
#define NV_PRAMDAC_PLL_TEST_COUNTER_SOURCE_MCLK          0x00000002 /* RWI-V */
#define NV_PRAMDAC_PLL_TEST_COUNTER_SOURCE_VCLK          0x00000001 /* RW--V */
#define NV_PRAMDAC_PLL_TEST_COUNTER_SOURCE_NVCLK         0x00000000 /* RW--V */
#define NV_PRAMDAC_PLL_TEST_COUNTER_VPLL2_LOCK                27:27 /* R--VF */
#define NV_PRAMDAC_PLL_TEST_COUNTER_VPLL2_NOTLOCKED      0x00000000 /* R---V */
#define NV_PRAMDAC_PLL_TEST_COUNTER_VPLL2_LOCKED         0x00000001 /* R---V */
#define NV_PRAMDAC_PLL_TEST_COUNTER_PDIV_RST                  28:28 /* RWIVF */
#define NV_PRAMDAC_PLL_TEST_COUNTER_PDIVRST_DEASSERTED   0x00000000 /* RWI-V */
#define NV_PRAMDAC_PLL_TEST_COUNTER_PDIVRST_ASSERTED     0x00000001 /* RW--V */
#define NV_PRAMDAC_PLL_TEST_COUNTER_NVPLL_LOCK                29:29 /* R--VF */
#define NV_PRAMDAC_PLL_TEST_COUNTER_NVPLL_NOTLOCKED      0x00000000 /* R---V */
#define NV_PRAMDAC_PLL_TEST_COUNTER_NVPLL_LOCKED         0x00000001 /* R---V */
#define NV_PRAMDAC_PLL_TEST_COUNTER_MPLL_LOCK                 30:30 /* R--VF */
#define NV_PRAMDAC_PLL_TEST_COUNTER_MPLL_NOTLOCKED       0x00000000 /* R---V */
#define NV_PRAMDAC_PLL_TEST_COUNTER_MPLL_LOCKED          0x00000001 /* R---V */
#define NV_PRAMDAC_PLL_TEST_COUNTER_VPLL_LOCK                 31:31 /* R--VF */
#define NV_PRAMDAC_PLL_TEST_COUNTER_VPLL_NOTLOCKED       0x00000000 /* R---V */
#define NV_PRAMDAC_PLL_TEST_COUNTER_VPLL_LOCKED          0x00000001 /* R---V */
#define NV_PRAMDAC_PALETTE_TEST                          0x00680518 /* RW-4R */
#define NV_PRAMDAC_PALETTE_TEST_BLUE_DATA                       7:0 /* R--VF */
#define NV_PRAMDAC_PALETTE_TEST_GREEN_DATA                     15:8 /* R--VF */
#define NV_PRAMDAC_PALETTE_TEST_RED_DATA                      23:16 /* R--VF */
#define NV_PRAMDAC_PALETTE_TEST_MODE                          24:24 /* RWIVF */
#define NV_PRAMDAC_PALETTE_TEST_MODE_8BIT                0x00000000 /* RWI-V */
#define NV_PRAMDAC_PALETTE_TEST_MODE_24BIT               0x00000001 /* RW--V */
#define NV_PRAMDAC_PALETTE_TEST_ADDRINC                       28:28 /* RWIVF */
#define NV_PRAMDAC_PALETTE_TEST_ADDRINC_READWRITE        0x00000000 /* RWI-V */
#define NV_PRAMDAC_PALETTE_TEST_ADDRINC_WRITEONLY        0x00000001 /* RW--V */
#define NV_PRAMDAC_VPLL2_COEFF                           0x00680520 /* RW-4R */
#define NV_PRAMDAC_VPLL2_COEFF_MDIV                             7:0 /* RWIUF */
#define NV_PRAMDAC_VPLL2_COEFF_NDIV                            15:8 /* RWIUF */
#define NV_PRAMDAC_VPLL2_COEFF_PDIV                           18:16 /* RWIVF */
#define NV_PRAMDAC_SEL_CLK                               0x00680524 /* RW-4R */
#define NV_PRAMDAC_SEL_CLK_SPREAD_SPECTRUM_NVPLL                0:0 /* RWIVF */
#define NV_PRAMDAC_SEL_CLK_SPREAD_SPECTRUM_NVPLL_OFF     0x00000000 /* RWI-V */
#define NV_PRAMDAC_SEL_CLK_SPREAD_SPECTRUM_NVPLL_ON      0x00000001 /* RW--V */
#define NV_PRAMDAC_SEL_CLK_SPREAD_SPECTRUM_MPLL                 2:2 /* RWIVF */
#define NV_PRAMDAC_SEL_CLK_SPREAD_SPECTRUM_MPLL_OFF      0x00000000 /* RWI-V */
#define NV_PRAMDAC_SEL_CLK_SPREAD_SPECTRUM_MPLL_ON       0x00000001 /* RW--V */
#define NV_PRAMDAC_SEL_CLK_SPREAD_SPECTRUM_VPLL1                4:4 /* RWIVF */
#define NV_PRAMDAC_SEL_CLK_SPREAD_SPECTRUM_VPLL1_OFF     0x00000000 /* RWI-V */
#define NV_PRAMDAC_SEL_CLK_SPREAD_SPECTRUM_VPLL1_ON      0x00000001 /* RW--V */
#define NV_PRAMDAC_SEL_CLK_SPREAD_SPECTRUM_VPLL2                6:6 /* RWIVF */
#define NV_PRAMDAC_SEL_CLK_SPREAD_SPECTRUM_VPLL2_OFF     0x00000000 /* RWI-V */
#define NV_PRAMDAC_SEL_CLK_SPREAD_SPECTRUM_VPLL2_ON      0x00000001 /* RW--V */
#define NV_PRAMDAC_SEL_CLK_IFPCLK1                            16:16 /* RWIVF */
#define NV_PRAMDAC_SEL_CLK_IFPCLK1_SEL_FPCLK1            0x00000000 /* RWI-V */
#define NV_PRAMDAC_SEL_CLK_IFPCLK1_SEL_FPCLK2            0x00000001 /* RW--V */
#define NV_PRAMDAC_SEL_CLK_IFPCLK2                            18:18 /* RWIVF */
#define NV_PRAMDAC_SEL_CLK_IFPCLK2_SEL_FPCLK1            0x00000000 /* RWI-V */
#define NV_PRAMDAC_SEL_CLK_IFPCLK2_SEL_FPCLK2            0x00000001 /* RW--V */
#define NV_PRAMDAC_PLL_COMPAT                            0x00680528 /* RW-4R */
#define NV_PRAMDAC_PLL_COMPAT_NVPLL_DET_MODE                    1:0 /* RWIVF */
#define NV_PRAMDAC_PLL_COMPAT_NVPLL_DET_MODE_MULTOFF     0x00000000 /* RWI-V */
#define NV_PRAMDAC_PLL_COMPAT_NVPLL_DET_MODE_AUTO        0x00000002 /* RW--V */
#define NV_PRAMDAC_PLL_COMPAT_NVPLL_DET_MODE_MULTON      0x00000003 /* RW--V */
#define NV_PRAMDAC_PLL_COMPAT_NVPLL_DET_STAT                    3:3 /* R--VF */
#define NV_PRAMDAC_PLL_COMPAT_NVPLL_DET_STAT_OFF         0x00000000 /* R---V */
#define NV_PRAMDAC_PLL_COMPAT_NVPLL_DET_STAT_ON          0x00000001 /* R---V */
#define NV_PRAMDAC_PLL_COMPAT_MPLL_DET_MODE                     5:4 /* RWIVF */
#define NV_PRAMDAC_PLL_COMPAT_MPLL_DET_MODE_MULTOFF      0x00000000 /* RWI-V */
#define NV_PRAMDAC_PLL_COMPAT_MPLL_DET_MODE_AUTO         0x00000002 /* RW--V */
#define NV_PRAMDAC_PLL_COMPAT_MPLL_DET_MODE_MULTON       0x00000003 /* RW--V */
#define NV_PRAMDAC_PLL_COMPAT_MPLL_DET_STAT                     7:7 /* R--VF */
#define NV_PRAMDAC_PLL_COMPAT_MPLL_DET_STAT_OFF          0x00000000 /* R---V */
#define NV_PRAMDAC_PLL_COMPAT_MPLL_DET_STAT_ON           0x00000001 /* R---V */
#define NV_PRAMDAC_PLL_COMPAT_VPLL_DET_MODE                     9:8 /* RWIVF */
#define NV_PRAMDAC_PLL_COMPAT_VPLL_DET_MODE_MULTOFF      0x00000000 /* RWI-V */
#define NV_PRAMDAC_PLL_COMPAT_VPLL_DET_MODE_AUTO         0x00000002 /* RW--V */
#define NV_PRAMDAC_PLL_COMPAT_VPLL_DET_MODE_MULTON       0x00000003 /* RW--V */
#define NV_PRAMDAC_PLL_COMPAT_VPLL_DET_STAT                   11:11 /* R--VF */
#define NV_PRAMDAC_PLL_COMPAT_VPLL_DET_STAT_OFF          0x00000000 /* R---V */
#define NV_PRAMDAC_PLL_COMPAT_VPLL_DET_STAT_ON           0x00000001 /* R---V */
#define NV_PRAMDAC_PLL_COMPAT_VPLL2_DET_MODE                  13:12 /* RWIVF */
#define NV_PRAMDAC_PLL_COMPAT_VPLL2_DET_MODE_MULTOFF     0x00000000 /* RWI-V */
#define NV_PRAMDAC_PLL_COMPAT_VPLL2_DET_MODE_AUTO        0x00000002 /* RW--V */
#define NV_PRAMDAC_PLL_COMPAT_VPLL2_DET_MODE_MULTON      0x00000003 /* RW--V */
#define NV_PRAMDAC_PLL_COMPAT_VPLL2_DET_STAT                  15:15 /* R--VF */
#define NV_PRAMDAC_PLL_COMPAT_VPLL2_DET_STAT_OFF         0x00000000 /* R---V */
#define NV_PRAMDAC_PLL_COMPAT_VPLL2_DET_STAT_ON          0x00000001 /* R---V */
#define NV_PRAMDAC_PLL_COMPAT_MPDIV_XOR                       26:24 /* RWIVF */
#define NV_PRAMDAC_PLL_COMPAT_MPDIV_XOR_DISABLED         0x00000000 /* RWI-V */
#define NV_PRAMDAC_GENERAL_CONTROL                       0x00680600 /* RW-4R */
#define NV_PRAMDAC_GENERAL_CONTROL_PIXMIX32_BIT                 0:0 /* RWIVF */
#define NV_PRAMDAC_GENERAL_CONTROL_PIXMIX32_BIT_24       0x00000001 /* RWI-V */
#define NV_PRAMDAC_GENERAL_CONTROL_PIXMIX32_BIT_31       0x00000000 /* RW--V */
#define NV_PRAMDAC_GENERAL_CONTROL_PIXMIX                       5:4 /* RWIVF */
#define NV_PRAMDAC_GENERAL_CONTROL_PIXMIX_OFF            0x00000000 /* RWI-V */
#define NV_PRAMDAC_GENERAL_CONTROL_PIXMIX_POS            0x00000001 /* RW--V */
#define NV_PRAMDAC_GENERAL_CONTROL_PIXMIX_NEG            0x00000002 /* RW--V */
#define NV_PRAMDAC_GENERAL_CONTROL_PIXMIX_ON             0x00000003 /* RW--V */
#define NV_PRAMDAC_GENERAL_CONTROL_VGA_STATE                    8:8 /* RWIVF */
#define NV_PRAMDAC_GENERAL_CONTROL_VGA_STATE_NOTSEL      0x00000000 /* RWI-V */
#define NV_PRAMDAC_GENERAL_CONTROL_VGA_STATE_SEL         0x00000001 /* RW--V */
#define NV_PRAMDAC_GENERAL_CONTROL_ALT_MODE                   12:12 /* RWIVF */
#define NV_PRAMDAC_GENERAL_CONTROL_ALT_MODE_NOTSEL       0x00000000 /* RWI-V */
#define NV_PRAMDAC_GENERAL_CONTROL_ALT_MODE_SEL          0x00000001 /* RW--V */
#define NV_PRAMDAC_GENERAL_CONTROL_ALT_MODE_15           0x00000000 /* RWI-V */
#define NV_PRAMDAC_GENERAL_CONTROL_ALT_MODE_16           0x00000001 /* RW--V */
#define NV_PRAMDAC_GENERAL_CONTROL_ALT_MODE_24           0x00000000 /* RWI-V */
#define NV_PRAMDAC_GENERAL_CONTROL_ALT_MODE_30           0x00000001 /* RW--V */
#define NV_PRAMDAC_GENERAL_CONTROL_BLK_PEDSTL                 16:16 /* RWIVF */
#define NV_PRAMDAC_GENERAL_CONTROL_BLK_PEDSTL_OFF        0x00000000 /* RWI-V */
#define NV_PRAMDAC_GENERAL_CONTROL_BLK_PEDSTL_ON         0x00000001 /* RW--V */
#define NV_PRAMDAC_GENERAL_CONTROL_TERMINATION                17:17 /* RWIVF */
#define NV_PRAMDAC_GENERAL_CONTROL_TERMINATION_37OHM     0x00000000 /* RWI-V */
#define NV_PRAMDAC_GENERAL_CONTROL_TERMINATION_75OHM     0x00000001 /* RW--V */
#define NV_PRAMDAC_GENERAL_CONTROL_BPC                        20:20 /* RWIVF */
#define NV_PRAMDAC_GENERAL_CONTROL_BPC_6BITS             0x00000000 /* RWI-V */
#define NV_PRAMDAC_GENERAL_CONTROL_BPC_8BITS             0x00000001 /* RW--V */
#define NV_PRAMDAC_GENERAL_CONTROL_LUT                        21:21 /* RWIVF */
#define NV_PRAMDAC_GENERAL_CONTROL_LUT_8BITS             0x00000000 /* RWI-V */
#define NV_PRAMDAC_GENERAL_CONTROL_LUT_10BITS            0x00000001 /* RW--V */
#define NV_PRAMDAC_GENERAL_CONTROL_DAC_SLEEP                  24:24 /* RWIVF */
#define NV_PRAMDAC_GENERAL_CONTROL_DAC_SLEEP_DIS         0x00000000 /* RWI-V */
#define NV_PRAMDAC_GENERAL_CONTROL_DAC_SLEEP_EN          0x00000001 /* RW--V */
#define NV_PRAMDAC_GENERAL_CONTROL_PALETTE_CLK                28:28 /* RWIVF */
#define NV_PRAMDAC_GENERAL_CONTROL_PALETTE_CLK_EN        0x00000000 /* RWI-V */
#define NV_PRAMDAC_GENERAL_CONTROL_PALETTE_CLK_DIS       0x00000001 /* RW--V */
#define NV_PRAMDAC_GENERAL_CONTROL_PIPE                       29:29 /* RWIVF */
#define NV_PRAMDAC_GENERAL_CONTROL_PIPE_SHORT            0x00000000 /* RWI-V */
#define NV_PRAMDAC_GENERAL_CONTROL_PIPE_LONG             0x00000001 /* RW--V */
#define NV_PRAMDAC_GENERAL_CONTROL_CUR_32B_ROP                30:30 /* RWIVF */
#define NV_PRAMDAC_GENERAL_CONTROL_CUR_32B_ROP_DISABLE   0x00000000 /* RWI-V */
#define NV_PRAMDAC_GENERAL_CONTROL_CUR_32B_ROP_ENABLE    0x00000001 /* RW--V */
#define NV_PRAMDAC_PALETTE_RECOVERY                      0x00680604 /* R--4R */
#define NV_PRAMDAC_PALETTE_RECOVERY_ACTIVE_ADDRESS              7:0 /* R--UF */
#define NV_PRAMDAC_PALETTE_RECOVERY_RGB_POINTER                10:8 /* R--VF */
#define NV_PRAMDAC_PALETTE_RECOVERY_RGB_POINTER_RED      0x00000001 /* R---V */
#define NV_PRAMDAC_PALETTE_RECOVERY_RGB_POINTER_GREEN    0x00000002 /* R---V */
#define NV_PRAMDAC_PALETTE_RECOVERY_RGB_POINTER_BLUE     0x00000004 /* R---V */
#define NV_PRAMDAC_PALETTE_RECOVERY_DAC_STATE                 13:12 /* R--VF */
#define NV_PRAMDAC_PALETTE_RECOVERY_DAC_STATE_WRITE      0x00000000 /* R---V */
#define NV_PRAMDAC_PALETTE_RECOVERY_DAC_STATE_READ       0x00000003 /* R---V */
#define NV_PRAMDAC_PALETTE_RECOVERY_RED_DATA                  23:16 /* R--VF */
#define NV_PRAMDAC_PALETTE_RECOVERY_GREEN_DATA                31:24 /* R--VF */
#define NV_PRAMDAC_TEST_CONTROL                          0x00680608 /* RW-4R */
#define NV_PRAMDAC_TEST_CONTROL_CRC_RESET                       0:0 /* RWIVF */
#define NV_PRAMDAC_TEST_CONTROL_CRC_RESET_DEASSERTED     0x00000000 /* RWI-V */
#define NV_PRAMDAC_TEST_CONTROL_CRC_RESET_ASSERTED       0x00000001 /* RW--V */
#define NV_PRAMDAC_TEST_CONTROL_CRC_ENABLE                      4:4 /* RWIVF */
#define NV_PRAMDAC_TEST_CONTROL_CRC_ENABLE_DEASSERTED    0x00000000 /* RWI-V */
#define NV_PRAMDAC_TEST_CONTROL_CRC_ENABLE_ASSERTED      0x00000001 /* RW--V */
#define NV_PRAMDAC_TEST_CONTROL_CRC_CHANNEL                     9:8 /* RWIVF */
#define NV_PRAMDAC_TEST_CONTROL_CRC_CHANNEL_BLUE         0x00000000 /* RWI-V */
#define NV_PRAMDAC_TEST_CONTROL_CRC_CHANNEL_GREEN        0x00000001 /* RW--V */
#define NV_PRAMDAC_TEST_CONTROL_CRC_CHANNEL_RED          0x00000002 /* RW--V */
#define NV_PRAMDAC_TEST_CONTROL_CRC_CAPTURE                   10:10 /* RWIVF */
#define NV_PRAMDAC_TEST_CONTROL_CRC_CAPTURE_ALWAYS       0x00000000 /* RWI-V */
#define NV_PRAMDAC_TEST_CONTROL_CRC_CAPTURE_ONE          0x00000001 /* RW--V */
#define NV_PRAMDAC_TEST_CONTROL_TP_INS_EN                     12:12 /* RWIVF */
#define NV_PRAMDAC_TEST_CONTROL_TP_INS_EN_DEASSERTED     0x00000000 /* RWI-V */
#define NV_PRAMDAC_TEST_CONTROL_TP_INS_EN_ASSERTED       0x00000001 /* RW--V */
#define NV_PRAMDAC_TEST_CONTROL_PWRDWN_DAC                    16:16 /* RWIVF */
#define NV_PRAMDAC_TEST_CONTROL_PWRDWN_DAC_ON            0x00000000 /* RWI-V */
#define NV_PRAMDAC_TEST_CONTROL_PWRDWN_DAC_OFF           0x00000001 /* RW--V */
#define NV_PRAMDAC_TEST_CONTROL_DACTM                         20:20 /* RWIVF */
#define NV_PRAMDAC_TEST_CONTROL_DACTM_NORMAL             0x00000000 /* RWI-V */
#define NV_PRAMDAC_TEST_CONTROL_DACTM_TEST               0x00000001 /* RW--V */
#define NV_PRAMDAC_TEST_CONTROL_TPATH1                        24:24 /* RWIVF */
#define NV_PRAMDAC_TEST_CONTROL_TPATH1_CLEAR             0x00000000 /* RWI-V */
#define NV_PRAMDAC_TEST_CONTROL_TPATH1_SET               0x00000001 /* RW--V */
#define NV_PRAMDAC_TEST_CONTROL_TPATH31                       25:25 /* RWIVF */
#define NV_PRAMDAC_TEST_CONTROL_TPATH31_CLEAR            0x00000000 /* RWI-V */
#define NV_PRAMDAC_TEST_CONTROL_TPATH31_SET              0x00000001 /* RW--V */
#define NV_PRAMDAC_TEST_CONTROL_SENSEB                        28:28 /* R--VF */
#define NV_PRAMDAC_TEST_CONTROL_SENSEB_SOMELO            0x00000000 /* R---V */
#define NV_PRAMDAC_TEST_CONTROL_SENSEB_ALLHI             0x00000001 /* R---V */
#define NV_PRAMDAC_CHECKSUM                              0x0068060C /* R--4R */
#define NV_PRAMDAC_CHECKSUM_STATUS                            24:24 /* R--VF */
#define NV_PRAMDAC_CHECKSUM_STATUS_CAPTURED              0x00000001 /* R---V */
#define NV_PRAMDAC_CHECKSUM_STATUS_WAITING               0x00000000 /* R---V */
#define NV_PRAMDAC_CHECKSUM_VALUE                              23:0 /* R--VF */
#define NV_PRAMDAC_TESTPOINT_DATA                        0x00680610 /* -W-4R */
#define NV_PRAMDAC_TESTPOINT_DATA_RED                           9:0 /* -W-VF */
#define NV_PRAMDAC_TESTPOINT_DATA_GREEN                       19:10 /* -W-VF */
#define NV_PRAMDAC_TESTPOINT_DATA_BLUE                        29:20 /* -W-VF */
#define NV_PRAMDAC_TESTPOINT_DATA_BLACK                       30:30 /* -W-VF */
#define NV_PRAMDAC_TESTPOINT_DATA_NOTBLANK                    31:31 /* -W-VF */
#define NV_PRAMDAC_PALETTE_LUT_INDEX                     0x00680620 /* RW-4R */
#define NV_PRAMDAC_PALETTE_LUT_INDEX_ADDR                       7:0 /* RW-VF */
#define NV_PRAMDAC_PALETTE_LUT_INDEX_ADDRINC                  12:12 /* RWIVF */
#define NV_PRAMDAC_PALETTE_LUT_INDEX_ADDRINC_ENABLE      0x00000000 /* RWI-V */
#define NV_PRAMDAC_PALETTE_LUT_INDEX_ADDRINC_DISABLE     0x00000001 /* RW--V */
#define NV_PRAMDAC_PALETTE_LUT_DATA                      0x00680624 /* RW-4R */
#define NV_PRAMDAC_PALETTE_LUT_DATA_BLUE                        9:0 /* RW-VF */
#define NV_PRAMDAC_PALETTE_LUT_DATA_GREEN                     19:10 /* RW-VF */
#define NV_PRAMDAC_PALETTE_LUT_DATA_RED                       29:20 /* RW-VF */
#define NV_PRAMDAC_TV_SETUP                              0x00680700 /* RW-4R */
#define NV_PRAMDAC_TV_SETUP_DEV_TYPE                            1:0 /* RWIVF */
#define NV_PRAMDAC_TV_SETUP_DEV_TYPE_SLAVE               0x00000000 /* RWI-V */
#define NV_PRAMDAC_TV_SETUP_DEV_TYPE_MASTER              0x00000001 /* RW--V */
#define NV_PRAMDAC_TV_SETUP_DEV_TYPE_SLAVE_ALT           0x00000002 /* RW--V */
#define NV_PRAMDAC_TV_SETUP_DEV_TYPE_MASTER_ALT          0x00000003 /* RW--V */
#define NV_PRAMDAC_TV_SETUP_VS_PIXFMT                           6:4 /* RWIVF */
#define NV_PRAMDAC_TV_SETUP_VS_PIXFMT_555                0x00000000 /* RWI-V */
#define NV_PRAMDAC_TV_SETUP_VS_PIXFMT_565                0x00000001 /* RW--V */
#define NV_PRAMDAC_TV_SETUP_VS_PIXFMT_888                0x00000002 /* RW--V */
#define NV_PRAMDAC_TV_SETUP_VS_PIXFMT_101010             0x00000003 /* RW--V */
#define NV_PRAMDAC_TV_SETUP_VS_PIXFMT_YUV                0x00000004 /* RW--V */
#define NV_PRAMDAC_TV_SETUP_DATA_SRC                            9:8 /* RWIVF */
#define NV_PRAMDAC_TV_SETUP_DATA_SRC_COMP                0x00000000 /* RWI-V */
#define NV_PRAMDAC_TV_SETUP_DATA_SRC_SCALER              0x00000001 /* RW--V */
#define NV_PRAMDAC_TV_SETUP_DATA_SRC_VIP                 0x00000002 /* RW--V */
#define NV_PRAMDAC_TV_SETUP_DATA_SRC_NONE                0x00000003 /* RW--V */
#define NV_PRAMDAC_TV_SETUP_COMP_SRC                          12:12 /* RWIVF */
#define NV_PRAMDAC_TV_SETUP_COMP_SRC_SCALER              0x00000000 /* RWI-V */
#define NV_PRAMDAC_TV_SETUP_COMP_SRC_NO_SCALER           0x00000001 /* RW--V */
#define NV_PRAMDAC_TV_SETUP_SYNC_POL                          17:16 /* RWIVF */
#define NV_PRAMDAC_TV_SETUP_SYNC_POL_NEG_NONE            0x00000000 /* RWI-V */
#define NV_PRAMDAC_TV_SETUP_SYNC_POL_NEG_HSYNC           0x00000001 /* RW--V */
#define NV_PRAMDAC_TV_SETUP_SYNC_POL_NEG_VSYNC           0x00000002 /* RW--V */
#define NV_PRAMDAC_TV_SETUP_SYNC_POL_NEG_BOTH            0x00000003 /* RW--V */
#define NV_PRAMDAC_TV_SETUP_VIP_VSYNC                         20:20 /* RWIVF */
#define NV_PRAMDAC_TV_SETUP_VIP_VSYNC_LEAD               0x00000000 /* RWI-V */
#define NV_PRAMDAC_TV_SETUP_VIP_VSYNC_TRAIL              0x00000001 /* RW--V */
#define NV_PRAMDAC_TV_SETUP_VIP_DATAPOS                       24:24 /* RWIVF */
#define NV_PRAMDAC_TV_SETUP_VIP_DATAPOS_7_0              0x00000000 /* RWI-V */
#define NV_PRAMDAC_TV_SETUP_VIP_DATAPOS_11_4             0x00000001 /* RW--V */
#define NV_PRAMDAC_TV_SETUP_VIP_FIELD                         28:28 /* RWIVF */
#define NV_PRAMDAC_TV_SETUP_VIP_FIELD_0                  0x00000000 /* RWI-V */
#define NV_PRAMDAC_TV_SETUP_VIP_FIELD_1                  0x00000001 /* RW--V */
#define NV_PRAMDAC_TV_VBLANK_START                       0x00680704 /* RW-4R */
#define NV_PRAMDAC_TV_VBLANK_START_VAL                         10:0 /* RWIVF */
#define NV_PRAMDAC_TV_VBLANK_END                         0x00680708 /* RW-4R */
#define NV_PRAMDAC_TV_VBLANK_END_VAL                           10:0 /* RWIVF */
#define NV_PRAMDAC_TV_HBLANK_START                       0x0068070C /* RW-4R */
#define NV_PRAMDAC_TV_HBLANK_START_VAL                         10:0 /* RWIVF */
#define NV_PRAMDAC_TV_HBLANK_END                         0x00680710 /* RW-4R */
#define NV_PRAMDAC_TV_HBLANK_END_VAL                           10:0 /* RWIVF */
#define NV_PRAMDAC_BLANK_COLOR                           0x00680714 /* RW-4R */
#define NV_PRAMDAC_BLANK_COLOR_VAL                             23:0 /* RWIVF */
#define NV_PRAMDAC_TV_CHECKSUM                           0x00680718 /* RW-4R */
#define NV_PRAMDAC_TV_CHECKSUM_VAL                             23:0 /* R--VF */
#define NV_PRAMDAC_TV_CHECKSUM_STATUS                         24:24 /* R--VF */
#define NV_PRAMDAC_TV_CHECKSUM_STATUS_CAPTURED           0x00000001 /* R---V */
#define NV_PRAMDAC_TV_CHECKSUM_STATUS_WAITING            0x00000000 /* R---V */
#define NV_PRAMDAC_TV_VSYNC                                   28:28 /* R--VF */
#define NV_PRAMDAC_TV_VSYNC_ACTIVE                       0x00000000 /* R---V */
#define NV_PRAMDAC_TV_VSYNC_LOW                          0x00000000 /* R---V */
#define NV_PRAMDAC_TV_VSYNC_INACTIVE                     0x00000001 /* R---V */
#define NV_PRAMDAC_TV_VSYNC_HIGH                         0x00000001 /* R---V */
#define NV_PRAMDAC_TV_TEST_CONTROL                       0x0068071c /* RW-4R */
#define NV_PRAMDAC_TV_TEST_CONTROL_CRC_RESET                    0:0 /* RWIVF */
#define NV_PRAMDAC_TV_TEST_CONTROL_CRC_RESET_DEASSERTED  0x00000000 /* RWI-V */
#define NV_PRAMDAC_TV_TEST_CONTROL_CRC_RESET_ASSERTED    0x00000001 /* RW--V */
#define NV_PRAMDAC_TV_TEST_CONTROL_CRC_ENABLE                   4:4 /* RWIVF */
#define NV_PRAMDAC_TV_TEST_CONTROL_CRC_ENABLE_DEASSERTED 0x00000000 /* RWI-V */
#define NV_PRAMDAC_TV_TEST_CONTROL_CRC_ENABLE_ASSERTED   0x00000001 /* RW--V */
#define NV_PRAMDAC_TV_TEST_CONTROL_CRC_CHANNEL                  9:8 /* RWIVF */
#define NV_PRAMDAC_TV_TEST_CONTROL_CRC_CHANNEL_7_0       0x00000000 /* RWI-V */
#define NV_PRAMDAC_TV_TEST_CONTROL_CRC_CHANNEL_15_8      0x00000001 /* RW--V */
#define NV_PRAMDAC_TV_TEST_CONTROL_CRC_CHANNEL_23_16     0x00000002 /* RW--V */
#define NV_PRAMDAC_TV_TEST_CONTROL_CRC_CAPTURE                10:10 /* RWIVF */
#define NV_PRAMDAC_TV_TEST_CONTROL_CRC_CAPTURE_ALWAYS    0x00000000 /* RWI-V */
#define NV_PRAMDAC_TV_TEST_CONTROL_CRC_CAPTURE_ONE       0x00000001 /* RW--V */
#define NV_PRAMDAC_TV_VTOTAL                             0x00680720 /* RW-4R */
#define NV_PRAMDAC_TV_VTOTAL_VAL                               10:0 /* RWIVF */
#define NV_PRAMDAC_TV_VSYNC_START                        0x00680724 /* RW-4R */
#define NV_PRAMDAC_TV_VSYNC_START_VAL                          10:0 /* RWIVF */
#define NV_PRAMDAC_TV_VSYNC_END                          0x00680728 /* RW-4R */
#define NV_PRAMDAC_TV_VSYNC_END_VAL                            10:0 /* RWIVF */
#define NV_PRAMDAC_TV_HTOTAL                             0x0068072C /* RW-4R */
#define NV_PRAMDAC_TV_HTOTAL_VAL                               10:0 /* RWIVF */
#define NV_PRAMDAC_TV_HSYNC_START                        0x00680730 /* RW-4R */
#define NV_PRAMDAC_TV_HSYNC_START_VAL                          10:0 /* RWIVF */
#define NV_PRAMDAC_TV_HSYNC_END                          0x00680734 /* RW-4R */
#define NV_PRAMDAC_TV_HSYNC_END_VAL                            10:0 /* RWIVF */
#define NV_PRAMDAC_FP_VDISPLAY_END                       0x00680800 /* RW-4R */
#define NV_PRAMDAC_FP_VDISPLAY_END_VAL                         15:0 /* RWIVF */
#define NV_PRAMDAC_FP_VTOTAL                             0x00680804 /* RW-4R */
#define NV_PRAMDAC_FP_VTOTAL_VAL                               15:0 /* RWIVF */
#define NV_PRAMDAC_FP_VCRTC                              0x00680808 /* RW-4R */
#define NV_PRAMDAC_FP_VCRTC_VAL                                15:0 /* RWIVF */
#define NV_PRAMDAC_FP_VSYNC_START                        0x0068080c /* RW-4R */
#define NV_PRAMDAC_FP_VSYNC_START_VAL                          15:0 /* RWIVF */
#define NV_PRAMDAC_FP_VSYNC_END                          0x00680810 /* RW-4R */
#define NV_PRAMDAC_FP_VSYNC_END_VAL                            15:0 /* RWIVF */
#define NV_PRAMDAC_FP_VVALID_START                       0x00680814 /* RW-4R */
#define NV_PRAMDAC_FP_VVALID_START_VAL                         15:0 /* RWIVF */
#define NV_PRAMDAC_FP_VVALID_END                         0x00680818 /* RW-4R */
#define NV_PRAMDAC_FP_VVALID_END_VAL                           15:0 /* RWIVF */
#define NV_PRAMDAC_FP_HDISPLAY_END                       0x00680820 /* RW-4R */
#define NV_PRAMDAC_FP_HDISPLAY_END_VAL                         15:0 /* RWIVF */
#define NV_PRAMDAC_FP_HTOTAL                             0x00680824 /* RW-4R */
#define NV_PRAMDAC_FP_HTOTAL_VAL                               15:0 /* RWIVF */
#define NV_PRAMDAC_FP_HCRTC                              0x00680828 /* RW-4R */
#define NV_PRAMDAC_FP_HCRTC_VAL                                15:0 /* RWIVF */
#define NV_PRAMDAC_FP_HSYNC_START                        0x0068082c /* RW-4R */
#define NV_PRAMDAC_FP_HSYNC_START_VAL                          15:0 /* RWIVF */
#define NV_PRAMDAC_FP_HSYNC_END                          0x00680830 /* RW-4R */
#define NV_PRAMDAC_FP_HSYNC_END_VAL                            15:0 /* RWIVF */
#define NV_PRAMDAC_FP_HVALID_START                       0x00680834 /* RW-4R */
#define NV_PRAMDAC_FP_HVALID_START_VAL                         15:0 /* RWIVF */
#define NV_PRAMDAC_FP_HVALID_END                         0x00680838 /* RW-4R */
#define NV_PRAMDAC_FP_HVALID_END_VAL                           15:0 /* RWIVF */
#define NV_PRAMDAC_FP_CHECKSUM                           0x00680840 /* RW-4R */
#define NV_PRAMDAC_FP_CHECKSUM_VAL                             23:0 /* R--VF */
#define NV_PRAMDAC_FP_CHECKSUM_STATUS                         24:24 /* R--VF */
#define NV_PRAMDAC_FP_CHECKSUM_STATUS_CAPTURED           0x00000001 /* R---V */
#define NV_PRAMDAC_FP_CHECKSUM_STATUS_WAITING            0x00000000 /* R---V */
#define NV_PRAMDAC_FP_VSYNC                                   28:28 /* R--VF */
#define NV_PRAMDAC_FP_VSYNC_LOW                          0x00000000 /* R---V */
#define NV_PRAMDAC_FP_VSYNC_HIGH                         0x00000001 /* R---V */
#define NV_PRAMDAC_FP_TEST_CONTROL                       0x00680844 /* RW-4R */
#define NV_PRAMDAC_FP_TEST_CONTROL_CRC_RESET                    0:0 /* RWIVF */
#define NV_PRAMDAC_FP_TEST_CONTROL_CRC_RESET_DEASSERTED  0x00000000 /* RWI-V */
#define NV_PRAMDAC_FP_TEST_CONTROL_CRC_RESET_ASSERTED    0x00000001 /* RW--V */
#define NV_PRAMDAC_FP_TEST_CONTROL_CRC_ENABLE                   4:4 /* RWIVF */
#define NV_PRAMDAC_FP_TEST_CONTROL_CRC_ENABLE_DEASSERTED 0x00000000 /* RWI-V */
#define NV_PRAMDAC_FP_TEST_CONTROL_CRC_ENABLE_ASSERTED   0x00000001 /* RW--V */
#define NV_PRAMDAC_FP_TEST_CONTROL_CRC_CHANNEL                  9:8 /* RWIVF */
#define NV_PRAMDAC_FP_TEST_CONTROL_CRC_CHANNEL_7_0       0x00000000 /* RWI-V */
#define NV_PRAMDAC_FP_TEST_CONTROL_CRC_CHANNEL_15_8      0x00000001 /* RW--V */
#define NV_PRAMDAC_FP_TEST_CONTROL_CRC_CHANNEL_23_16     0x00000002 /* RW--V */
#define NV_PRAMDAC_FP_TEST_CONTROL_CRC_CAPTURE                10:10 /* RWIVF */
#define NV_PRAMDAC_FP_TEST_CONTROL_CRC_CAPTURE_ALWAYS    0x00000000 /* RWI-V */
#define NV_PRAMDAC_FP_TEST_CONTROL_CRC_CAPTURE_ONE       0x00000001 /* RW--V */
#define NV_PRAMDAC_FP_TEST_CONTROL_TMDS                       16:16 /* R---F */
#define NV_PRAMDAC_FP_TEST_CONTROL_TMDS_INTERNAL         0x00000000 /* R---V */
#define NV_PRAMDAC_FP_TEST_CONTROL_TMDS_EXTERNAL         0x00000001 /* R---V */
#define NV_PRAMDAC_FP_TG_CONTROL                         0x00680848 /* RW-4R */
#define NV_PRAMDAC_FP_TG_CONTROL_VSYNC                          1:0 /* RWIVF */
#define NV_PRAMDAC_FP_TG_CONTROL_VSYNC_NEG               0x00000000 /* RW--V */
#define NV_PRAMDAC_FP_TG_CONTROL_VSYNC_POS               0x00000001 /* RWI-V */
#define NV_PRAMDAC_FP_TG_CONTROL_VSYNC_DISABLE           0x00000002 /* RW--V */
#define NV_PRAMDAC_FP_TG_CONTROL_VSYNC_RSVD              0x00000003 /* RW--V */
#define NV_PRAMDAC_FP_TG_CONTROL_HSYNC                          5:4 /* RWIVF */
#define NV_PRAMDAC_FP_TG_CONTROL_HSYNC_NEG               0x00000000 /* RW--V */
#define NV_PRAMDAC_FP_TG_CONTROL_HSYNC_POS               0x00000001 /* RWI-V */
#define NV_PRAMDAC_FP_TG_CONTROL_HSYNC_DISABLE           0x00000002 /* RW--V */
#define NV_PRAMDAC_FP_TG_CONTROL_HSYNC_RSVD              0x00000003 /* RWI-V */
#define NV_PRAMDAC_FP_TG_CONTROL_MODE                           9:8 /* RWIVF */
#define NV_PRAMDAC_FP_TG_CONTROL_MODE_SCALE              0x00000000 /* RWI-V */
#define NV_PRAMDAC_FP_TG_CONTROL_MODE_CENTER             0x00000001 /* RW--V */
#define NV_PRAMDAC_FP_TG_CONTROL_MODE_NATIVE             0x00000002 /* RW--V */
#define NV_PRAMDAC_FP_TG_CONTROL_CENTER                       13:12 /* RWIVF */
#define NV_PRAMDAC_FP_TG_CONTROL_CENTER_NONE             0x00000000 /* RWI-V */
#define NV_PRAMDAC_FP_TG_CONTROL_CENTER_HORIZ            0x00000001 /* RW--V */
#define NV_PRAMDAC_FP_TG_CONTROL_CENTER_VERT             0x00000002 /* RW--V */
#define NV_PRAMDAC_FP_TG_CONTROL_CENTER_BOTH             0x00000003 /* RW--V */
#define NV_PRAMDAC_FP_TG_CONTROL_NATIVE                       17:16 /* RWIVF */
#define NV_PRAMDAC_FP_TG_CONTROL_NATIVE_NONE             0x00000000 /* RWI-V */
#define NV_PRAMDAC_FP_TG_CONTROL_NATIVE_HORIZ            0x00000001 /* RW--V */
#define NV_PRAMDAC_FP_TG_CONTROL_NATIVE_VERT             0x00000002 /* RW--V */
#define NV_PRAMDAC_FP_TG_CONTROL_NATIVE_BOTH             0x00000003 /* RW--V */
#define NV_PRAMDAC_FP_TG_CONTROL_READ                         20:20 /* RWIVF */
#define NV_PRAMDAC_FP_TG_CONTROL_READ_ACTUAL             0x00000000 /* RWI-V */
#define NV_PRAMDAC_FP_TG_CONTROL_READ_PROG               0x00000001 /* RW--V */
#define NV_PRAMDAC_FP_TG_CONTROL_WIDTH                        24:24 /* RWIVF */
#define NV_PRAMDAC_FP_TG_CONTROL_WIDTH_24                0x00000000 /* RWI-V */
#define NV_PRAMDAC_FP_TG_CONTROL_WIDTH_12                0x00000001 /* RW--V */
#define NV_PRAMDAC_FP_TG_CONTROL_DISPEN                       29:28 /* RWIVF */
#define NV_PRAMDAC_FP_TG_CONTROL_DISPEN_NEG              0x00000000 /* RW--V */
#define NV_PRAMDAC_FP_TG_CONTROL_DISPEN_POS              0x00000001 /* RWI-V */
#define NV_PRAMDAC_FP_TG_CONTROL_DISPEN_DISABLE          0x00000002 /* RW--V */
#define NV_PRAMDAC_FP_TG_CONTROL_DISPEN_RSVD             0x00000003 /* RWI-V */
#define NV_PRAMDAC_FP_TG_CONTROL_FPCLK_RATIO                  31:31 /* RWIVF */
#define NV_PRAMDAC_FP_TG_CONTROL_FPCLK_RATIO_DB1         0x00000000 /* RWI-V */
#define NV_PRAMDAC_FP_TG_CONTROL_FPCLK_RATIO_DB2         0x00000001 /* RWI-V */
#define NV_PRAMDAC_FP_DEBUG_0                            0x00680880 /* RW-4R */
#define NV_PRAMDAC_FP_DEBUG_0_XSCALE                            0:0 /* RWIVF */
#define NV_PRAMDAC_FP_DEBUG_0_XSCALE_DISABLE             0x00000000 /* RW--V */
#define NV_PRAMDAC_FP_DEBUG_0_XSCALE_ENABLE              0x00000001 /* RWI-V */
#define NV_PRAMDAC_FP_DEBUG_0_YSCALE                            4:4 /* RWIVF */
#define NV_PRAMDAC_FP_DEBUG_0_YSCALE_DISABLE             0x00000000 /* RW--V */
#define NV_PRAMDAC_FP_DEBUG_0_YSCALE_ENABLE              0x00000001 /* RWI-V */
#define NV_PRAMDAC_FP_DEBUG_0_XINTERP                           8:8 /* RWIVF */
#define NV_PRAMDAC_FP_DEBUG_0_XINTERP_TRUNCATE           0x00000000 /* RW--V */
#define NV_PRAMDAC_FP_DEBUG_0_XINTERP_BILINEAR           0x00000001 /* RWI-V */
#define NV_PRAMDAC_FP_DEBUG_0_YINTERP                         12:12 /* RWIVF */
#define NV_PRAMDAC_FP_DEBUG_0_YINTERP_TRUNCATE           0x00000000 /* RW--V */
#define NV_PRAMDAC_FP_DEBUG_0_YINTERP_BILINEAR           0x00000001 /* RWI-V */
#define NV_PRAMDAC_FP_DEBUG_0_VCNTR                           17:16 /* RWIVF */
#define NV_PRAMDAC_FP_DEBUG_0_TEST_NONE                  0x00000000 /* RWI-V */
#define NV_PRAMDAC_FP_DEBUG_0_TEST_VCNTR                 0x00000001 /* RW--V */
#define NV_PRAMDAC_FP_DEBUG_0_TEST_NEWPIX                0x00000002 /* RWI-V */
#define NV_PRAMDAC_FP_DEBUG_0_TEST_BOTH                  0x00000003 /* RW--V */
#define NV_PRAMDAC_FP_DEBUG_0_XWEIGHT                         20:20 /* RWIVF */
#define NV_PRAMDAC_FP_DEBUG_0_XWEIGHT_TRUNCATE           0x00000000 /* RW--V */
#define NV_PRAMDAC_FP_DEBUG_0_XWEIGHT_ROUND              0x00000001 /* RWI-V */
#define NV_PRAMDAC_FP_DEBUG_0_YWEIGHT                         24:24 /* RWIVF */
#define NV_PRAMDAC_FP_DEBUG_0_YWEIGHT_TRUNCATE           0x00000000 /* RW--V */
#define NV_PRAMDAC_FP_DEBUG_0_YWEIGHT_ROUND              0x00000001 /* RWI-V */
#define NV_PRAMDAC_FP_DEBUG_0_PWRDOWN                         29:28 /* RWIVF */
#define NV_PRAMDAC_FP_DEBUG_0_PWRDOWN_NONE               0x00000000 /* RW--V */
#define NV_PRAMDAC_FP_DEBUG_0_PWRDOWN_FPCLK              0x00000001 /* RWI-V */
#define NV_PRAMDAC_FP_DEBUG_0_PWRDOWN_TMDS               0x00000002 /* RW--V */
#define NV_PRAMDAC_FP_DEBUG_0_PWRDOWN_BOTH               0x00000003 /* RW--V */
#define NV_PRAMDAC_FP_DEBUG_1                            0x00680884 /* RW-4R */
#define NV_PRAMDAC_FP_DEBUG_1_XSCALE_VALUE                     11:0 /* RWIVF */
#define NV_PRAMDAC_FP_DEBUG_1_XSCALE_VALUE_ZERO          0x00000000 /* RWI-V */
#define NV_PRAMDAC_FP_DEBUG_1_XSCALE_TESTMODE                 12:12 /* RWIVF */
#define NV_PRAMDAC_FP_DEBUG_1_XSCALE_TESTMODE_DISABLE    0x00000000 /* RWI-V */
#define NV_PRAMDAC_FP_DEBUG_1_XSCALE_TESTMODE_ENABLE     0x00000001 /* RW--V */
#define NV_PRAMDAC_FP_DEBUG_1_YSCALE_VALUE                    27:16 /* RWIVF */
#define NV_PRAMDAC_FP_DEBUG_1_YSCALE_VALUE_ZERO          0x00000000 /* RWI-V */
#define NV_PRAMDAC_FP_DEBUG_1_YSCALE_TESTMODE                 28:28 /* RWIVF */
#define NV_PRAMDAC_FP_DEBUG_1_YSCALE_TESTMODE_DISABLE    0x00000000 /* RWI-V */
#define NV_PRAMDAC_FP_DEBUG_1_YSCALE_TESTMODE_ENABLE     0x00000001 /* RW--V */
#define NV_PRAMDAC_FP_DEBUG_2                            0x00680888 /* RW-4R */
#define NV_PRAMDAC_FP_DEBUG_2_HTOTAL_VALUE                     11:0 /* RWIVF */
#define NV_PRAMDAC_FP_DEBUG_2_HTOTAL_TESTMODE                 12:12 /* RWIVF */
#define NV_PRAMDAC_FP_DEBUG_2_HTOTAL_TESTMODE_DISABLE    0x00000000 /* RWI-V */
#define NV_PRAMDAC_FP_DEBUG_2_HTOTAL_TESTMODE_ENABLE     0x00000001 /* RW--V */
#define NV_PRAMDAC_FP_DEBUG_2_VTOTAL_VALUE                    27:16 /* RWIVF */
#define NV_PRAMDAC_FP_DEBUG_2_VTOTAL_TESTMODE                 28:28 /* RWIVF */
#define NV_PRAMDAC_FP_DEBUG_2_VTOTAL_TESTMODE_DISABLE    0x00000000 /* RWI-V */
#define NV_PRAMDAC_FP_DEBUG_2_VTOTAL_TESTMODE_ENABLE     0x00000001 /* RW--V */
#define NV_PRAMDAC_FP_DEBUG_3                            0x0068088c /* R--4R */
#define NV_PRAMDAC_FP_DEBUG_3_XSTEPSIZE                        12:0 /* R--VF */
#define NV_PRAMDAC_FP_DEBUG_3_YSTEPSIZE                       28:16 /* R--VF */
#define NV_PRAMDAC_FP_RAM_CONTROL                        0x006808A0 /* RW-4R */
#define NV_PRAMDAC_FP_RAM_CONTROL_ADDRESS                       8:0 /* RW-VF */
#define NV_PRAMDAC_FP_RAM_CONTROL_TESTMODE                    16:16 /* RWIVF */
#define NV_PRAMDAC_FP_RAM_CONTROL_TESTMODE_DISABLE       0x00000000 /* RWI-V */
#define NV_PRAMDAC_FP_RAM_CONTROL_TESTMODE_ENABLE        0x00000001 /* RW--V */
#define NV_PRAMDAC_FP_RAM_DATA_0                         0x006808A4 /* RWI4R */
#define NV_PRAMDAC_FP_RAM_DATA_0_VAL                           31:0 /* RW--F */
#define NV_PRAMDAC_FP_RAM_DATA_1                         0x006808A8 /* RWI4R */
#define NV_PRAMDAC_FP_RAM_DATA_1_VAL                           31:0 /* RW--F */
#define NV_PRAMDAC_FP_RAM_DATA_2                         0x006808AC /* RWI4R */
#define NV_PRAMDAC_FP_RAM_DATA_2_VAL                            7:0 /* RW--F */
#define NV_PRAMDAC_FP_TMDS_CONTROL                       0x006808B0 /* RW-4R */
#define NV_PRAMDAC_FP_TMDS_CONTROL_ADDRESS                      7:0 /* RW-VF */
#define NV_PRAMDAC_FP_TMDS_CONTROL_WRITE                      16:16 /* RWIVF */
#define NV_PRAMDAC_FP_TMDS_CONTROL_WRITE_DISABLE         0x00000001 /* RWI-V */
#define NV_PRAMDAC_FP_TMDS_CONTROL_WRITE_ENABLE          0x00000000 /* RW--V */
#define NV_PRAMDAC_FP_TMDS_DATA                          0x006808B4 /* RW-4R */
#define NV_PRAMDAC_FP_TMDS_DATA_DATA                            7:0 /* RW-VF */
#define NV_PRAMDAC_MCHIP_GENERAL_CONTROL                 0x00680900 /* RW-4R */
#define NV_PRAMDAC_MCHIP_GENERAL_CONTROL_DISP                   1:0 /* RW-VF */
#define NV_PRAMDAC_MCHIP_GENERAL_CONTROL_DISP_NEVER      0x00000000 /* RWI-V */
#define NV_PRAMDAC_MCHIP_GENERAL_CONTROL_DISP_ODD        0x00000001 /* RW--V */
#define NV_PRAMDAC_MCHIP_GENERAL_CONTROL_DISP_EVEN       0x00000002 /* RW--V */
#define NV_PRAMDAC_MCHIP_GENERAL_CONTROL_DISP_ALWAYS     0x00000003 /* RW--V */
#define NV_PRAMDAC_MCHIP_GENERAL_CONTROL_PROG                   4:4 /* RW-VF */
#define NV_PRAMDAC_MCHIP_GENERAL_CONTROL_PROG_DISABLE    0x00000000 /* RWI-V */
#define NV_PRAMDAC_MCHIP_GENERAL_CONTROL_PROG_ENABLE     0x00000001 /* RW--V */
#define NV_PRAMDAC_MCHIP_VDISPLAY_FIELD                  0x00680904 /* RW-4R */
#define NV_PRAMDAC_MCHIP_VDISPLAY_FIELD_START                  11:0 /* RW-VF */
#define NV_PRAMDAC_MCHIP_VDISPLAY_FIELD_END                   27:16 /* RW-VF */
#define NV_PRAMDAC_INDIR_TMDS_PLL0                             0x00 /* RW-1R */
#define NV_PRAMDAC_INDIR_TMDS_PLL0_SEL10UA                      0:0 /* RWIVF */
#define NV_PRAMDAC_INDIR_TMDS_PLL0_SEL10UA_RESET                0x1 /* RWI-V */
#define NV_PRAMDAC_INDIR_TMDS_PLL0_SEL50UA                      1:1 /* RWIVF */
#define NV_PRAMDAC_INDIR_TMDS_PLL0_SEL50UA_RESET                0x0 /* RWI-V */
#define NV_PRAMDAC_INDIR_TMDS_PLL0_SEL100UA                     2:2 /* RWIVF */
#define NV_PRAMDAC_INDIR_TMDS_PLL0_SEL100UA_RESET               0x0 /* RWI-V */
#define NV_PRAMDAC_INDIR_TMDS_PLL0_FILSEL                       5:3 /* RWIVF */
#define NV_PRAMDAC_INDIR_TMDS_PLL0_FILSEL_RESET                 0x0 /* RWI-V */
#define NV_PRAMDAC_INDIR_TMDS_PLL0_CONF                         7:6 /* RWIVF */
#define NV_PRAMDAC_INDIR_TMDS_PLL0_CONF_RESET                   0x0 /* RWI-V */
#define NV_PRAMDAC_INDIR_TMDS_PLL1                             0x01 /* RW-1R */
#define NV_PRAMDAC_INDIR_TMDS_PLL1_RSEL                         2:0 /* RWIVF */
#define NV_PRAMDAC_INDIR_TMDS_PLL1_RSEL_RESET                   0x7 /* RWI-V */
#define NV_PRAMDAC_INDIR_TMDS_PLL1_CSEL                         4:3 /* RWIVF */
#define NV_PRAMDAC_INDIR_TMDS_PLL1_CSEL_RESET                   0x3 /* RWI-V */
#define NV_PRAMDAC_INDIR_TMDS_PLL1_IOCTRL1                      5:5 /* RWIVF */
#define NV_PRAMDAC_INDIR_TMDS_PLL1_IOCTRL1_RESET                0x0 /* RWI-V */
#define NV_PRAMDAC_INDIR_TMDS_PLL1_DIVBY10                      6:6 /* RWIVF */
#define NV_PRAMDAC_INDIR_TMDS_PLL1_DIVBY10_RESET                0x1 /* RWI-V */
#define NV_PRAMDAC_INDIR_TMDS_PLL1_IRSEL                        7:7 /* RWIVF */
#define NV_PRAMDAC_INDIR_TMDS_PLL1_IRSEL_RESET                  0x1 /* RWI-V */
#define NV_PRAMDAC_INDIR_TMDS_PLL2                             0x02 /* RW-1R */
#define NV_PRAMDAC_INDIR_TMDS_PLL2_DIVBY1                       0:0 /* RWIVF */
#define NV_PRAMDAC_INDIR_TMDS_PLL2_DIVBY1_RESET                 0x0 /* RWI-V */
#define NV_PRAMDAC_INDIR_TMDS_PLL2_DIVBY7                       1:1 /* RWIVF */
#define NV_PRAMDAC_INDIR_TMDS_PLL2_DIVBY7_RESET                 0x0 /* RWI-V */
#define NV_PRAMDAC_INDIR_TMDS_PLL2_ALTCLK                       2:2 /* RWIVF */
#define NV_PRAMDAC_INDIR_TMDS_PLL2_ALTCLK_RESET                 0x0 /* RWI-V */
#define NV_PRAMDAC_INDIR_TMDS_PLL2_AUX                          7:3 /* RWIVF */
#define NV_PRAMDAC_INDIR_TMDS_PLL2_AUX_RESET                    0x0 /* RWI-V */
#define NV_PRAMDAC_INDIR_TMDS_IDLY                             0x03 /* RW-1R */
#define NV_PRAMDAC_INDIR_TMDS_IDLY_IDEL                         3:0 /* RWIVF */
#define NV_PRAMDAC_INDIR_TMDS_IDLY_IDEL_RESET                   0x0 /* RWI-V */
#define NV_PRAMDAC_INDIR_TMDS_IDLY_CDEL                         7:4 /* RWIVF */
#define NV_PRAMDAC_INDIR_TMDS_IDLY_CDEL_RESET                   0x3 /* RWI-V */
#define NV_PRAMDAC_INDIR_TMDS_MODE                             0x04 /* RW-1R */
#define NV_PRAMDAC_INDIR_TMDS_MODE_LVDSMODE                     0:0 /* RWIVF */
#define NV_PRAMDAC_INDIR_TMDS_MODE_LVDSMODE_RESET               0x0 /* RWI-V */
#define NV_PRAMDAC_INDIR_TMDS_MODE_DUALMODE                     1:1 /* RWIVF */
#define NV_PRAMDAC_INDIR_TMDS_MODE_DUALMODE_RESET               0x0 /* RWI-V */
#define NV_PRAMDAC_INDIR_TMDS_MODE_DINSEL                       3:2 /* RWIVF */
#define NV_PRAMDAC_INDIR_TMDS_MODE_DINSEL_RESET                 0x0 /* RWI-V */
#define NV_PRAMDAC_INDIR_TMDS_MODE_DINSEL_DINRISE               0x0 /* RW--V */
#define NV_PRAMDAC_INDIR_TMDS_MODE_DINSEL_DINFALL               0x1 /* RW--V */
#define NV_PRAMDAC_INDIR_TMDS_MODE_DINSEL_DALTRISE              0x2 /* RW--V */
#define NV_PRAMDAC_INDIR_TMDS_MODE_DINSEL_DALTFALL              0x3 /* RW--V */
#define NV_PRAMDAC_INDIR_TMDS_MODE_LINKACT                      7:7 /* RWIVF */
#define NV_PRAMDAC_INDIR_TMDS_MODE_LINKACT_RESET                0x1 /* RWI-V */
#define NV_PRAMDAC_INDIR_TMDS_LVDS                             0x05 /* RW-1R */
#define NV_PRAMDAC_INDIR_TMDS_LVDS_MODESWAPCTL                  0:0 /* RWIVF */
#define NV_PRAMDAC_INDIR_TMDS_LVDS_MODESWAPCTL_RESET            0x0 /* RWI-V */
#define NV_PRAMDAC_INDIR_TMDS_LVDS_MODEHS                       1:1 /* RWIVF */
#define NV_PRAMDAC_INDIR_TMDS_LVDS_MODEHS_RESET                 0x1 /* RWI-V */
#define NV_PRAMDAC_INDIR_TMDS_LVDS_MODEVS                       2:2 /* RWIVF */
#define NV_PRAMDAC_INDIR_TMDS_LVDS_MODEVS_RESET                 0x1 /* RWI-V */
#define NV_PRAMDAC_INDIR_TMDS_LVDS_MODEDEN                      3:3 /* RWIVF */
#define NV_PRAMDAC_INDIR_TMDS_LVDS_MODEDEN_RESET                0x1 /* RWI-V */
#define NV_PRAMDAC_INDIR_TMDS_LVDS_MODEBALANCED                 4:4 /* RWIVF */
#define NV_PRAMDAC_INDIR_TMDS_LVDS_MODEBALANCED_RESET           0x0 /* RWI-V */
#define NV_PRAMDAC_INDIR_TMDS_LVDS_MODE24B                      5:5 /* RWIVF */
#define NV_PRAMDAC_INDIR_TMDS_LVDS_MODE24B_RESET                0x1 /* RWI-V */
#define NV_PRAMDAC_INDIR_TMDS_LVDS_MODEUPPER                    6:6 /* RWIVF */
#define NV_PRAMDAC_INDIR_TMDS_LVDS_MODEUPPER_RESET              0x1 /* RWI-V */
#define NV_PRAMDAC_INDIR_TMDS_TRIG0                            0x06 /* RW-1R */
#define NV_PRAMDAC_INDIR_TMDS_TRIG0_VAL                         7:0 /* RWIVF */
#define NV_PRAMDAC_INDIR_TMDS_TRIG0_VAL_RESET                  0x00 /* RWI-V */
#define NV_PRAMDAC_INDIR_TMDS_TRIG1                            0x07 /* RW-1R */
#define NV_PRAMDAC_INDIR_TMDS_TRIG1_VAL                         7:0 /* RWIVF */
#define NV_PRAMDAC_INDIR_TMDS_TRIG1_VAL_RESET                  0x00 /* RWI-V */
#define NV_PRAMDAC_INDIR_TMDS_TRIG2                            0x08 /* RW-1R */
#define NV_PRAMDAC_INDIR_TMDS_TRIG2_VAL                         7:0 /* RWIVF */
#define NV_PRAMDAC_INDIR_TMDS_TRIG2_VAL_RESET                  0x00 /* RWI-V */
#define NV_PRAMDAC_INDIR_TMDS_VCRC0                            0x09 /* R--1R */
#define NV_PRAMDAC_INDIR_TMDS_VCRC0_VAL                         7:0 /* R--VF */
#define NV_PRAMDAC_INDIR_TMDS_VCRC1                            0x0a /* R--1R */
#define NV_PRAMDAC_INDIR_TMDS_VCRC1_VAL                         7:0 /* R--VF */
#define NV_PRAMDAC_INDIR_TMDS_VCRC2                            0x0b /* R--1R */
#define NV_PRAMDAC_INDIR_TMDS_VCRC2_VAL                         7:0 /* R--VF */
#define NV_PRAMDAC_INDIR_TMDS_VCRC3                            0x0c /* R--1R */
#define NV_PRAMDAC_INDIR_TMDS_VCRC3_VAL                         7:0 /* R--VF */
#define NV_PRAMDAC_INDIR_TMDS_VCRC4                            0x0d /* R--1R */
#define NV_PRAMDAC_INDIR_TMDS_VCRC4_VAL                         7:0 /* R--VF */
#define NV_PRAMDAC_INDIR_TMDS_VCRC5                            0x0e /* R--1R */
#define NV_PRAMDAC_INDIR_TMDS_VCRC5_VAL                         7:0 /* R--VF */
#define NV_PRAMDAC_INDIR_TMDS_IDATA0                           0x0f /* R--1R */
#define NV_PRAMDAC_INDIR_TMDS_IDATA0_VAL                        7:0 /* R--VF */
#define NV_PRAMDAC_INDIR_TMDS_IDATA1                           0x10 /* R--1R */
#define NV_PRAMDAC_INDIR_TMDS_IDATA1_VAL                        7:0 /* R--VF */
#define NV_PRAMDAC_INDIR_TMDS_IDATA2                           0x11 /* R--1R */
#define NV_PRAMDAC_INDIR_TMDS_IDATA2_VAL                        7:0 /* R--VF */
#define NV_PRAMDAC_INDIR_TMDS_IDATA3                           0x12 /* R--1R */
#define NV_PRAMDAC_INDIR_TMDS_IDATA3_VAL                        7:0 /* R--VF */
#define NV_PRAMDAC_INDIR_TMDS_EDATA0                           0x13 /* R--1R */
#define NV_PRAMDAC_INDIR_TMDS_EDATA0_VAL                        7:0 /* R--VF */
#define NV_PRAMDAC_INDIR_TMDS_EDATA1                           0x14 /* R--1R */
#define NV_PRAMDAC_INDIR_TMDS_EDATA1_VAL                        7:0 /* R--VF */
#define NV_PRAMDAC_INDIR_TMDS_EDATA2                           0x15 /* R--1R */
#define NV_PRAMDAC_INDIR_TMDS_EDATA2_VAL                        7:0 /* R--VF */
#define NV_PRAMDAC_INDIR_TMDS_EDATA3                           0x16 /* R--1R */
#define NV_PRAMDAC_INDIR_TMDS_EDATA3_VAL                        7:0 /* R--VF */
#define NV_PRAMDAC_INDIR_TMDS_EDATA4                           0x17 /* R--1R */
#define NV_PRAMDAC_INDIR_TMDS_EDATA4_VAL                        7:0 /* R--VF */
#define NV_PRAMDAC_INDIR_TMDS_CNTL0                            0x18 /* R--1R */
#define NV_PRAMDAC_INDIR_TMDS_CNTL0_VAL                         7:0 /* R--VF */
#define NV_PRAMDAC_INDIR_TMDS_CNTH0                            0x19 /* R--1R */
#define NV_PRAMDAC_INDIR_TMDS_CNTH0_VAL                         7:0 /* R--VF */
#define NV_PRAMDAC_INDIR_TMDS_CNTL1                            0x1a /* R--1R */
#define NV_PRAMDAC_INDIR_TMDS_CNTL1_VAL                         7:0 /* R--VF */
#define NV_PRAMDAC_INDIR_TMDS_CNTH1                            0x1b /* R--1R */
#define NV_PRAMDAC_INDIR_TMDS_CNTH1_VAL                         7:0 /* R--VF */
#define NV_PRAMDAC_INDIR_TMDS_CNTL2                            0x1c /* R--1R */
#define NV_PRAMDAC_INDIR_TMDS_CNTL2_VAL                         7:0 /* R--VF */
#define NV_PRAMDAC_INDIR_TMDS_CNTH2                            0x1d /* R--1R */
#define NV_PRAMDAC_INDIR_TMDS_CNTH2_VAL                         7:0 /* R--VF */
#define NV_PRAMDAC_INDIR_TMDS_DISPAR0                          0x1e /* R--1R */
#define NV_PRAMDAC_INDIR_TMDS_DISPAR0_THISPAR                   3:0 /* R--VF */
#define NV_PRAMDAC_INDIR_TMDS_DISPAR0_RUNPAR                    7:4 /* R--VF */
#define NV_PRAMDAC_INDIR_TMDS_DISPAR1                          0x1f /* R--1R */
#define NV_PRAMDAC_INDIR_TMDS_DISPAR1_THISPAR                   3:0 /* R--VF */
#define NV_PRAMDAC_INDIR_TMDS_DISPAR1_RUNPAR                    7:4 /* R--VF */
#define NV_PRAMDAC_INDIR_TMDS_DISPAR2                          0x20 /* R--1R */
#define NV_PRAMDAC_INDIR_TMDS_DISPAR2_THISPAR                   3:0 /* R--VF */
#define NV_PRAMDAC_INDIR_TMDS_DISPAR2_RUNPAR                    7:4 /* R--VF */
#define NV_PRAMDAC_INDIR_TMDS_DISPAR3                          0x21 /* R--1R */
#define NV_PRAMDAC_INDIR_TMDS_DISPAR3_THISPAR                   3:0 /* R--VF */
#define NV_PRAMDAC_INDIR_TMDS_DISPAR3_RUNPAR                    7:4 /* R--VF */
#define NV_PRAMDAC_INDIR_TMDS_DISPARCK                         0x22 /* R--1R */
#define NV_PRAMDAC_INDIR_TMDS_DISPARCK_THISPAR                  3:0 /* R--VF */
#define NV_PRAMDAC_INDIR_TMDS_DISPARCK_RUNPAR                   7:4 /* R--VF */
#define NV_PRAMDAC_INDIR_TMDS_CCRC0                            0x23 /* R--1R */
#define NV_PRAMDAC_INDIR_TMDS_CCRC0_VAL                         7:0 /* R--VF */
#define NV_PRAMDAC_INDIR_TMDS_CCRC1                            0x24 /* R--1R */
#define NV_PRAMDAC_INDIR_TMDS_CCRC1_VAL                         7:0 /* R--VF */
#define NV_PRAMDAC_INDIR_TMDS_CCRC2                            0x25 /* R--1R */
#define NV_PRAMDAC_INDIR_TMDS_CCRC2_VAL                         7:0 /* R--VF */
#define NV_PRAMDAC_INDIR_TMDS_CCRC3                            0x26 /* R--1R */
#define NV_PRAMDAC_INDIR_TMDS_CCRC3_VAL                         7:0 /* R--VF */
#define NV_PRAMDAC_INDIR_TMDS_CCRC4                            0x27 /* R--1R */
#define NV_PRAMDAC_INDIR_TMDS_CCRC4_VAL                         7:0 /* R--VF */
#define NV_PRAMDAC_INDIR_TMDS_CCRC5                            0x28 /* R--1R */
#define NV_PRAMDAC_INDIR_TMDS_CCRC5_VAL                         7:0 /* R--VF */
 // nv20-specific
#define NV_PRAMDAC_INDIR_TMDS_ROTCK                            0x29 /* RW-1R */
#define NV_PRAMDAC_INDIR_TMDS_ROTCK_ROTVAL                      3:0 /* RWIVF */
#define NV_PRAMDAC_INDIR_TMDS_ROTCK_RSEL_RESET                  0x0 /* RWI-V */
#define NV_PRAMDAC_INDIR_TMDS_FE_PLL0                          0x30 /* RW-1R */
#define NV_PRAMDAC_INDIR_TMDS_FE_PLL0_ICHPMP                    3:0 /* RWIVF */
#define NV_PRAMDAC_INDIR_TMDS_FE_PLL0_ICHPMP_RESET              0x0 /* RWI-V */
#define NV_PRAMDAC_INDIR_TMDS_FE_PLL0_FILSEL                    6:4 /* RWIVF */
#define NV_PRAMDAC_INDIR_TMDS_FE_PLL0_FILSEL_RESET              0x0 /* RWI-V */
#define NV_PRAMDAC_INDIR_TMDS_FE_PLL0_ICLKSEL                   7:7 /* RWIVF */
#define NV_PRAMDAC_INDIR_TMDS_FE_PLL0_ICLKSEL_RESET             0x0 /* RWI-V */
#define NV_PRAMDAC_INDIR_TMDS_FE_PLL1                          0x31 /* RW-1R */
#define NV_PRAMDAC_INDIR_TMDS_FE_PLL1_CSEL                      1:0 /* RWIVF */
#define NV_PRAMDAC_INDIR_TMDS_FE_PLL1_CSEL_RESET                0x0 /* RWI-V */
#define NV_PRAMDAC_INDIR_TMDS_FE_PLL1_RSEL                      5:2 /* RWIVF */
#define NV_PRAMDAC_INDIR_TMDS_FE_PLL1_RSEL_RESET                0x0 /* RWI-V */
#define NV_PRAMDAC_INDIR_TMDS_FE_PLL1_FBACK_SEL                 6:6 /* RWIVF */
#define NV_PRAMDAC_INDIR_TMDS_FE_PLL1_FBACK_SEL_RESET           0x0 /* RWI-V */
#define NV_PRAMDAC_INDIR_TMDS_FE_PLL1_SEL1UA                    7:7 /* RWIVF */
#define NV_PRAMDAC_INDIR_TMDS_FE_PLL1_SEL1UA_RESET              0x0 /* RWI-V */
#define NV_PRAMDAC_INDIR_TMDS_FE_PLL2                          0x32 /* RW-1R */
#define NV_PRAMDAC_INDIR_TMDS_FE_PLL2_AUX                       7:0 /* RWIVF */
#define NV_PRAMDAC_INDIR_TMDS_FE_PLL2_AUX_RESET                 0x0 /* RWI-V */
#define NV_PRAMDAC_INDIR_TMDS_DEBUG_CTL                        0x3a /* RW-1R */
#define NV_PRAMDAC_INDIR_TMDS_DEBUG_CTL_TEST_DATA               0:0 /* RWIVF */
#define NV_PRAMDAC_INDIR_TMDS_DEBUG_CTL_TEST_DATA_DISABLE       0x0 /* RWI-V */
#define NV_PRAMDAC_INDIR_TMDS_DEBUG_CTL_TEST_DATA_ENABLE        0x1 /* RW--V */
#define NV_PRAMDAC_INDIR_TMDS_DEBUG_CTL_SYNC_LOAD_EN            7:7 /* RWIVF */
#define NV_PRAMDAC_INDIR_TMDS_DEBUG_CTL_SYNC_LOAD_EN_OFF        0x0 /* RWI-V */
#define NV_PRAMDAC_INDIR_TMDS_DEBUG_CTL_SYNC_LOAD_EN_ON         0x1 /* RW--V */
#define NV_PRAMDAC_INDIR_TMDS_DEBUG_DATA0                      0x3b /* RW-1R */
#define NV_PRAMDAC_INDIR_TMDS_DEBUG_DATA0_VAL                   7:0 /* RWIVF */
#define NV_PRAMDAC_INDIR_TMDS_DEBUG_DATA0_VAL_RESET             0x0 /* RWI-V */
#define NV_PRAMDAC_INDIR_TMDS_DEBUG_DATA1                      0x3c /* RW-1R */
#define NV_PRAMDAC_INDIR_TMDS_DEBUG_DATA1_VAL                   7:0 /* RWIVF */
#define NV_PRAMDAC_INDIR_TMDS_DEBUG_DATA1_VAL_RESET             0x0 /* RWI-V */
#define NV_PRAMDAC_INDIR_TMDS_DEBUG_DATA2                      0x3d /* RW-1R */
#define NV_PRAMDAC_INDIR_TMDS_DEBUG_DATA2_VAL                   7:0 /* RWIVF */
#define NV_PRAMDAC_INDIR_TMDS_DEBUG_DATA2_VAL_RESET             0x0 /* RWI-V */
#define NV_PRAMDAC_INDIR_TMDS_DEBUG_DATA3                      0x3e /* RW-1R */
#define NV_PRAMDAC_INDIR_TMDS_DEBUG_DATA3_VAL                   7:0 /* RWIVF */
#define NV_PRAMDAC_INDIR_TMDS_DEBUG_DATA3_VAL_RESET             0x0 /* RWI-V */
#define NV_PRAMDAC_INDIR_TMDS_DEBUG_DATA4                      0x3f /* RW-1R */
#define NV_PRAMDAC_INDIR_TMDS_DEBUG_DATA4_VAL                   7:0 /* RWIVF */
#define NV_PRAMDAC_INDIR_TMDS_DEBUG_DATA4_VAL_RESET             0x0 /* RWI-V */
/* dev_dac.ref */
#define NV_USER_DAC                           0x00681FFF:0x00681200 /* RW--D */
#define NV_USER_DAC_PIXEL_MASK                           0x006813C6 /* RWI1R */
#define NV_USER_DAC_PIXEL_MASK_VALUE                            7:0 /* RWIVF */
#define NV_USER_DAC_PIXEL_MASK_MASK                      0x000000FF /* RWI-V */
#define NV_USER_DAC_READ_MODE_ADDRESS                    0x006813C7 /* RW-1R */
#define NV_USER_DAC_READ_MODE_ADDRESS_VALUE                     7:0 /* RW-VF */
#define NV_USER_DAC_READ_MODE_ADDRESS_WO_VALUE                  7:0 /* -W-VF */
#define NV_USER_DAC_READ_MODE_ADDRESS_RW_STATE                  1:0 /* R--VF */
#define NV_USER_DAC_READ_MODE_ADDRESS_RW_STATE_WRITE     0x00000000 /* R---V */
#define NV_USER_DAC_READ_MODE_ADDRESS_RW_STATE_READ      0x00000003 /* R---V */
#define NV_USER_DAC_WRITE_MODE_ADDRESS                   0x006813C8 /* RW-1R */
#define NV_USER_DAC_WRITE_MODE_ADDRESS_VALUE                    7:0 /* RW-VF */
#define NV_USER_DAC_PALETTE_DATA                         0x006813C9 /* RW-1R */
#define NV_USER_DAC_PALETTE_DATA_VALUE                          7:0 /* RW-VF */
/* dev_dac.ref */
#define NV_PDAC                               0x00680FFF:0x00680000 /* RW--D */
/* dev_dac.ref */
#define NV_PRMDIO                             0x00681FFF:0x00681000 /* RW--D */
/* dev_master.ref */
#define NV_PMC                                0x00000FFF:0x00000000 /* RW--D */
#define NV_PMC_BOOT_0                                    0x00000000 /* R--4R */
#define NV_PMC_BOOT_0_ID                                       31:0 /* R--VF */
#define NV_PMC_BOOT_0_ID_NV01_A                          0x00010100 /* ----V */
#define NV_PMC_BOOT_0_ID_NV01_B                          0x00010101 /* ----V */
#define NV_PMC_BOOT_0_ID_NV01_B02                        0x00010102 /* ----V */
#define NV_PMC_BOOT_0_ID_NV01_B03                        0x00010103 /* ----V */
#define NV_PMC_BOOT_0_ID_NV01_C01                        0x00010104 /* ----V */
#define NV_PMC_BOOT_0_ID_NV02_A01                        0x10020400 /* ----V */
#define NV_PMC_BOOT_0_ID_NV03_A01                        0x00030100 /* ----V */
#define NV_PMC_BOOT_0_ID_NV03_B01                        0x00030110 /* ----V */
#define NV_PMC_BOOT_0_ID_NV03T_A01                       0x20030120 /* ----V */
#define NV_PMC_BOOT_0_ID_NV03T_A02                       0x20030121 /* ----V */
#define NV_PMC_BOOT_0_ID_NV03T_A03_A04                   0x20030122 /* ----V */
#define NV_PMC_BOOT_0_ID_NV04_A01_A02_A03                0x20004000 /* ----V */
#define NV_PMC_BOOT_0_ID_NV04_A04                        0x20034001 /* ----V */
#define NV_PMC_BOOT_0_ID_NV04_A05                        0x20044001 /* ----V */
#define NV_PMC_BOOT_0_ID_NV05_NV06_A01                   0x20104000 /* ----V */
#define NV_PMC_BOOT_0_ID_NV05_NV06_A02                   0x20114000 /* ----V */
#define NV_PMC_BOOT_0_ID_NV05_NV06_A03                   0x20124000 /* ----V */
#define NV_PMC_BOOT_0_ID_NV05_NV06_B01                   0x20204000 /* ----V */
#define NV_PMC_BOOT_0_ID_NV05_NV06_B02                   0x20214000 /* ----V */
#define NV_PMC_BOOT_0_ID_NV05_NV06_B03                   0x20224000 /* ----V */
#define NV_PMC_BOOT_0_ID_NV0A_A01                        0x20204000 /* ----V */
#define NV_PMC_BOOT_0_ID_NV0A_A02                        0x20214000 /* ----V */
#define NV_PMC_BOOT_0_ID_NV0A_B01                        0x20224000 /* ----V */
#define NV_PMC_BOOT_0_ID_NV10_A1_DEVID0                  0x010000A1 /* C---V */
#define NV_PMC_BOOT_0_ID_NV10_A1_DEVID1                  0x010100A1 /* C---V */
#define NV_PMC_BOOT_0_ID_NV10_A1_DEVID2                  0x010200A1 /* C---V */
#define NV_PMC_BOOT_0_ID_NV10_A1_DEVID3                  0x010300A1 /* C---V */
#define NV_PMC_BOOT_0_ID_NV10_A2_DEVID0                  0x010000A2 /* ----V */
#define NV_PMC_BOOT_0_ID_NV10_A2_DEVID1                  0x010100A2 /* ----V */
#define NV_PMC_BOOT_0_ID_NV10_A2_DEVID2                  0x010200A2 /* ----V */
#define NV_PMC_BOOT_0_ID_NV10_A2_DEVID3                  0x010300A2 /* ----V */
#define NV_PMC_BOOT_0_ID_NV10_A3_DEVID0                  0x010000A3 /* ----V */
#define NV_PMC_BOOT_0_ID_NV10_A3_DEVID1                  0x010100A3 /* ----V */
#define NV_PMC_BOOT_0_ID_NV10_A3_DEVID2                  0x010200A3 /* ----V */
#define NV_PMC_BOOT_0_ID_NV10_A3_DEVID3                  0x010300A3 /* ----V */
#define NV_PMC_BOOT_0_ID_NV10_B1_DEVID0                  0x010000B1 /* ----V */
#define NV_PMC_BOOT_0_ID_NV10_B1_DEVID1                  0x010100B1 /* ----V */
#define NV_PMC_BOOT_0_ID_NV10_B1_DEVID2                  0x010200B1 /* ----V */
#define NV_PMC_BOOT_0_ID_NV10_B1_DEVID3                  0x010300B1 /* ----V */
#define NV_PMC_BOOT_0_ID_NV10_B2_DEVID0                  0x010000B2 /* ----V */
#define NV_PMC_BOOT_0_ID_NV10_B2_DEVID1                  0x010100B2 /* ----V */
#define NV_PMC_BOOT_0_ID_NV10_B2_DEVID2                  0x010200B2 /* ----V */
#define NV_PMC_BOOT_0_ID_NV10_B2_DEVID3                  0x010300B2 /* ----V */
#define NV_PMC_BOOT_0_ID_NV15_A1_DEVID0                  0x015000A1 /* C---V */
#define NV_PMC_BOOT_0_ID_NV15_A1_DEVID1                  0x015100A1 /* C---V */
#define NV_PMC_BOOT_0_ID_NV15_A1_DEVID2                  0x015200A1 /* C---V */
#define NV_PMC_BOOT_0_ID_NV15_A1_DEVID3                  0x015300A1 /* C---V */
#define NV_PMC_BOOT_0_ID_NV15_A2_DEVID0                  0x015000A2 /* ----V */
#define NV_PMC_BOOT_0_ID_NV15_A2_DEVID1                  0x015100A2 /* ----V */
#define NV_PMC_BOOT_0_ID_NV15_A2_DEVID2                  0x015200A2 /* ----V */
#define NV_PMC_BOOT_0_ID_NV15_A2_DEVID3                  0x015300A2 /* ----V */
#define NV_PMC_BOOT_0_ID_NV15_B1_DEVID0                  0x015000B1 /* ----V */
#define NV_PMC_BOOT_0_ID_NV15_B1_DEVID1                  0x015100B1 /* ----V */
#define NV_PMC_BOOT_0_ID_NV15_B1_DEVID2                  0x015200B1 /* ----V */
#define NV_PMC_BOOT_0_ID_NV15_B1_DEVID3                  0x015300B1 /* ----V */
#define NV_PMC_BOOT_0_ID_NV15_B2_DEVID0                  0x015000B2 /* ----V */
#define NV_PMC_BOOT_0_ID_NV15_B2_DEVID1                  0x015100B2 /* ----V */
#define NV_PMC_BOOT_0_ID_NV15_B2_DEVID2                  0x015200B2 /* ----V */
#define NV_PMC_BOOT_0_ID_NV15_B2_DEVID3                  0x015300B2 /* ----V */
#define NV_PMC_BOOT_0_ID_NV20_A1_DEVID0                  0x020000A1 /* C---V */
#define NV_PMC_BOOT_0_ID_NV20_A1_DEVID1                  0x020100A1 /* C---V */
#define NV_PMC_BOOT_0_ID_NV20_A1_DEVID2                  0x020200A1 /* C---V */
#define NV_PMC_BOOT_0_ID_NV20_A1_DEVID3                  0x020300A1 /* C---V */
#define NV_PMC_BOOT_0_ID_NV20_A2_DEVID0                  0x020000A2 /* ----V */
#define NV_PMC_BOOT_0_ID_NV20_A2_DEVID1                  0x020100A2 /* ----V */
#define NV_PMC_BOOT_0_ID_NV20_A2_DEVID2                  0x020200A2 /* ----V */
#define NV_PMC_BOOT_0_ID_NV20_A2_DEVID3                  0x020300A2 /* ----V */
#define NV_PMC_BOOT_0_ID_NV20_B1_DEVID0                  0x020000B1 /* ----V */
#define NV_PMC_BOOT_0_ID_NV20_B1_DEVID1                  0x020100B1 /* ----V */
#define NV_PMC_BOOT_0_ID_NV20_B1_DEVID2                  0x020200B1 /* ----V */
#define NV_PMC_BOOT_0_ID_NV20_B1_DEVID3                  0x020300B1 /* ----V */
#define NV_PMC_BOOT_0_ID_NV20_B2_DEVID0                  0x020000B2 /* ----V */
#define NV_PMC_BOOT_0_ID_NV20_B2_DEVID1                  0x020100B2 /* ----V */
#define NV_PMC_BOOT_0_ID_NV20_B2_DEVID2                  0x020200B2 /* ----V */
#define NV_PMC_BOOT_0_ID_NV20_B2_DEVID3                  0x020300B2 /* ----V */
#define NV_PMC_BOOT_0_MINOR_REVISION                            3:0 /* C--VF */
#define NV_PMC_BOOT_0_MINOR_REVISION_0                   0x00000000 /* C---V */
#define NV_PMC_BOOT_0_MAJOR_REVISION                            7:4 /* C--VF */
#define NV_PMC_BOOT_0_MAJOR_REVISION_A                   0x00000000 /* C---V */
#define NV_PMC_BOOT_0_MAJOR_REVISION_B                   0x00000001 /* ----V */
#define NV_PMC_BOOT_0_IMPLEMENTATION                           11:8 /* C--VF */
#define NV_PMC_BOOT_0_IMPLEMENTATION_NV4_0               0x00000000 /* C---V */
#define NV_PMC_BOOT_0_ARCHITECTURE                            15:12 /* C--VF */
#define NV_PMC_BOOT_0_ARCHITECTURE_NV0                   0x00000000 /* ----V */
#define NV_PMC_BOOT_0_ARCHITECTURE_NV1                   0x00000001 /* ----V */
#define NV_PMC_BOOT_0_ARCHITECTURE_NV2                   0x00000002 /* ----V */
#define NV_PMC_BOOT_0_ARCHITECTURE_NV3                   0x00000003 /* ----V */
#define NV_PMC_BOOT_0_ARCHITECTURE_NV4                   0x00000004 /* ----V */
#define NV_PMC_BOOT_0_ARCHITECTURE_NV10                  0x00000010 /* ----V */
#define NV_PMC_BOOT_0_ARCHITECTURE_NV20                  0x00000020 /* C---V */
#define NV_PMC_BOOT_0_FIB_REVISION                            19:16 /* C--VF */
#define NV_PMC_BOOT_0_FIB_REVISION_0                     0x00000000 /* C---V */
#define NV_PMC_BOOT_0_MASK_REVISION                           23:20 /* C--VF */
#define NV_PMC_BOOT_0_MASK_REVISION_A                    0x00000000 /* C---V */
#define NV_PMC_BOOT_0_MASK_REVISION_B                    0x00000001 /* ----V */
#define NV_PMC_BOOT_0_MASK_REVISION_C                    0x00000002 /* ----V */
#define NV_PMC_BOOT_0_MANUFACTURER                            27:24 /* C--UF */
#define NV_PMC_BOOT_0_MANUFACTURER_NVIDIA                0x00000000 /* C---V */
#define NV_PMC_BOOT_0_FOUNDRY                                 31:28 /* C--VF */
#define NV_PMC_BOOT_0_FOUNDRY_SGS                        0x00000000 /* ----V */
#define NV_PMC_BOOT_0_FOUNDRY_HELIOS                     0x00000001 /* ----V */
#define NV_PMC_BOOT_0_FOUNDRY_TSMC                       0x00000002 /* C---V */
#define NV_PMC_BOOT_1                                    0x00000004 /* R--4R */
#define NV_PMC_BOOT_1_ENDIAN00                                  0:0 /* R--VF */
#define NV_PMC_BOOT_1_ENDIAN00_LITTLE                    0x00000000 /* R-I-V */
#define NV_PMC_BOOT_1_ENDIAN00_BIG                       0x00000001 /* R---V */
#define NV_PMC_BOOT_1_ENDIAN24                                24:24 /* RW-VF */
#define NV_PMC_BOOT_1_ENDIAN24_LITTLE                    0x00000000 /* RWI-V */
#define NV_PMC_BOOT_1_ENDIAN24_BIG                       0x00000001 /* RW--V */
#define NV_PMC_INTR_0                                    0x00000100 /* RW-4R */
#define NV_PMC_INTR_0_MD                                        0:0 /* R--VF */
#define NV_PMC_INTR_0_MD_NOT_PENDING                     0x00000000 /* R---V */
#define NV_PMC_INTR_0_MD_PENDING                         0x00000001 /* R---V */
#define NV_PMC_INTR_0_PMEDIA                                    4:4 /* R--VF */
#define NV_PMC_INTR_0_PMEDIA_NOT_PENDING                 0x00000000 /* R---V */
#define NV_PMC_INTR_0_PMEDIA_PENDING                     0x00000001 /* R---V */
#define NV_PMC_INTR_0_PFIFO                                     8:8 /* R--VF */
#define NV_PMC_INTR_0_PFIFO_NOT_PENDING                  0x00000000 /* R---V */
#define NV_PMC_INTR_0_PFIFO_PENDING                      0x00000001 /* R---V */
#define NV_PMC_INTR_0_REMAPPER                                  9:9 /* R--VF */
#define NV_PMC_INTR_0_REMAPPER_NOT_PENDING               0x00000000 /* R---V */
#define NV_PMC_INTR_0_REMAPPER_PENDING                   0x00000001 /* R---V */
#define NV_PMC_INTR_0_PGRAPH                                  12:12 /* R--VF */
#define NV_PMC_INTR_0_PGRAPH_NOT_PENDING                 0x00000000 /* R---V */
#define NV_PMC_INTR_0_PGRAPH_PENDING                     0x00000001 /* R---V */
#define NV_PMC_INTR_0_PVIDEO                                  16:16 /* R--VF */
#define NV_PMC_INTR_0_PVIDEO_NOT_PENDING                 0x00000000 /* R---V */
#define NV_PMC_INTR_0_PVIDEO_PENDING                     0x00000001 /* R---V */
#define NV_PMC_INTR_0_PTIMER                                  20:20 /* R--VF */
#define NV_PMC_INTR_0_PTIMER_NOT_PENDING                 0x00000000 /* R---V */
#define NV_PMC_INTR_0_PTIMER_PENDING                     0x00000001 /* R---V */
#define NV_PMC_INTR_0_PCRTC                                   24:24 /* R--VF */
#define NV_PMC_INTR_0_PCRTC_NOT_PENDING                  0x00000000 /* R---V */
#define NV_PMC_INTR_0_PCRTC_PENDING                      0x00000001 /* R---V */
#define NV_PMC_INTR_0_PCRTC2                                  25:25 /* R--VF */
#define NV_PMC_INTR_0_PCRTC2_NOT_PENDING                 0x00000000 /* R---V */
#define NV_PMC_INTR_0_PCRTC2_PENDING                     0x00000001 /* R---V */
#define NV_PMC_INTR_0_PBUS                                    28:28 /* R--VF */
#define NV_PMC_INTR_0_PBUS_NOT_PENDING                   0x00000000 /* R---V */
#define NV_PMC_INTR_0_PBUS_PENDING                       0x00000001 /* R---V */
#define NV_PMC_INTR_0_SOFTWARE                                31:31 /* RWIVF */
#define NV_PMC_INTR_0_SOFTWARE_NOT_PENDING               0x00000000 /* RWI-V */
#define NV_PMC_INTR_0_SOFTWARE_PENDING                   0x00000001 /* RW--V */
#define NV_PMC_INTR_EN_0                                 0x00000140 /* RW-4R */
#define NV_PMC_INTR_EN_0_INTA                                   1:0 /* RWIVF */
#define NV_PMC_INTR_EN_0_INTA_DISABLED                   0x00000000 /* RWI-V */
#define NV_PMC_INTR_EN_0_INTA_HARDWARE                   0x00000001 /* RW--V */
#define NV_PMC_INTR_EN_0_INTA_SOFTWARE                   0x00000002 /* RW--V */
#define NV_PMC_INTR_READ_0                               0x00000160 /* R--4R */
#define NV_PMC_INTR_READ_0_INTA                                 0:0 /* R--VF */
#define NV_PMC_INTR_READ_0_INTA_LOW                      0x00000000 /* R---V */
#define NV_PMC_INTR_READ_0_INTA_HIGH                     0x00000001 /* R---V */
#define NV_PMC_ENABLE                                    0x00000200 /* RW-4R */
#define NV_PMC_ENABLE_BUF_RESET                                 0:0 /* RWIVF */
#define NV_PMC_ENABLE_BUF_RESET_DISABLE                  0x00000000 /* RWI-V */
#define NV_PMC_ENABLE_BUF_RESET_ENABLE                   0x00000001 /* RW--V */
#define NV_PMC_ENABLE_MD_RESET                                  1:1 /* RWIVF */
#define NV_PMC_ENABLE_MD_RESET_DISABLE                   0x00000000 /* RWI-V */
#define NV_PMC_ENABLE_MD_RESET_ENABLE                    0x00000001 /* RW--V */
#define NV_PMC_ENABLE_PMEDIA                                    4:4 /* RWIVF */
#define NV_PMC_ENABLE_PMEDIA_DISABLED                    0x00000000 /* RWI-V */
#define NV_PMC_ENABLE_PMEDIA_ENABLED                     0x00000001 /* RW--V */
#define NV_PMC_ENABLE_PFIFO                                     8:8 /* RWIVF */
#define NV_PMC_ENABLE_PFIFO_DISABLED                     0x00000000 /* RWI-V */
#define NV_PMC_ENABLE_PFIFO_ENABLED                      0x00000001 /* RW--V */
#define NV_PMC_ENABLE_PGRAPH                                  12:12 /* RWIVF */
#define NV_PMC_ENABLE_PGRAPH_DISABLED                    0x00000000 /* RWI-V */
#define NV_PMC_ENABLE_PGRAPH_ENABLED                     0x00000001 /* RW--V */
#define NV_PMC_ENABLE_PPMI                                    16:16 /* RWIVF */
#define NV_PMC_ENABLE_PPMI_DISABLED                      0x00000000 /* RWI-V */
#define NV_PMC_ENABLE_PPMI_ENABLED                       0x00000001 /* RW--V */
#define NV_PMC_ENABLE_PFB                                     20:20 /* RWIVF */
#define NV_PMC_ENABLE_PFB_DISABLED                       0x00000000 /* RW--V */
#define NV_PMC_ENABLE_PFB_ENABLED                        0x00000001 /* RWI-V */
#define NV_PMC_ENABLE_PCRTC                                   24:24 /* RWIVF */
#define NV_PMC_ENABLE_PCRTC_DISABLED                     0x00000000 /* RW--V */
#define NV_PMC_ENABLE_PCRTC_ENABLED                      0x00000001 /* RWI-V */
#define NV_PMC_ENABLE_PCRTC2                                  25:25 /* RWIVF */
#define NV_PMC_ENABLE_PCRTC2_DISABLED                    0x00000000 /* RW--V */
#define NV_PMC_ENABLE_PCRTC2_ENABLED                     0x00000001 /* RWI-V */
#define NV_PMC_ENABLE_PVIDEO                                  28:28 /* RWIVF */
#define NV_PMC_ENABLE_PVIDEO_DISABLED                    0x00000000 /* RWI-V */
#define NV_PMC_ENABLE_PVIDEO_ENABLED                     0x00000001 /* RW--V */
#define NV_PMC_FRAME_PROTECT_MIN                         0x00000300 /* RW-4R */
#define NV_PMC_FRAME_PROTECT_MIN_VAL                           28:0 /* RWIVF */
#define NV_PMC_FRAME_PROTECT_MIN_VAL0                    0x00000000 /* RWI-V */
#define NV_PMC_FRAME_PROTECT_EN                               31:31 /* RWIVF */
#define NV_PMC_FRAME_PROTECT_DISABLED                    0x00000000 /* RWI-V */
#define NV_PMC_FRAME_PROTECT_ENABLED                     0x00000001 /* RWI-V */
#define NV_PMC_FRAME_PROTECT_MAX                         0x00000304 /* RW-4R */
#define NV_PMC_FRAME_PROTECT_MAX_VAL                           28:0 /* RWIVF */
#define NV_PMC_FRAME_PROTECT_MAX_VAL0                    0x00000000 /* RWI-V */
/* dev_bus.ref */
#define NV_PBUS                               0x00001FFF:0x00001000 /* RW--D */
#define NV_PBUS_DEBUG_1                                  0x00001084 /* RW-4R */
/* NV_PBUS_DEBUG_1_PCIM_THROTTLE is used in osapi.c for APM */
#define NV_PBUS_DEBUG_1_PCIM_THROTTLE                           0:0 /* RWIVF */
#define NV_PBUS_DEBUG_1_PCIM_THROTTLE_DISABLED           0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_1_PCIM_THROTTLE_ENABLED            0x00000001 /* RWI-V */
/*  NV_PBUS_DEBUG_1_PCIS_WRITE is tweaked by win9x osinit.c */
#define NV_PBUS_DEBUG_1_PCIS_WRITE                              5:5 /* RWIVF */
#define NV_PBUS_DEBUG_1_PCIS_WRITE_0_CYCLE               0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_1_PCIS_WRITE_1_CYCLE               0x00000001 /* RWI-V */
/*  NV_PBUS_DEBUG_1_OPENGL is used in mcstate.c */
#define NV_PBUS_DEBUG_1_OPENGL                                16:16 /* R--VF */
#define NV_PBUS_DEBUG_1_OPENGL_OFF                       0x00000000 /* R---V */
#define NV_PBUS_DEBUG_1_OPENGL_ON                        0x00000001 /* R---V */
#define NV_PBUS_DEBUG_1_AGPFW_ADIS                            21:21 /* RWIVF */
#define NV_PBUS_DEBUG_1_AGPFW_ADIS_ENABLED               0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_1_AGPFW_ADIS_DISABLED              0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_1_IDDQ                                  22:22
#define NV_PBUS_DEBUG_1_IDDQ_ZERO                        0x00000000
#define NV_PBUS_DEBUG_1_IDDQ_ONE                         0x00000001
#define NV_PBUS_DEBUG_1_AGPSTOPCLK                            24:24
#define NV_PBUS_DEBUG_1_AGPSTOPCLK_DISABLED              0x00000000
#define NV_PBUS_DEBUG_1_AGPSTOPCLK_ENABLED               0x00000001
#define NV_PBUS_DEBUG_1_PLL_STOPCLK                           27:27
#define NV_PBUS_DEBUG_1_PLL_STOPCLK_DISABLE              0x00000000
#define NV_PBUS_DEBUG_1_PLL_STOPCLK_ENABLE               0x00000001
#define NV_PBUS_DEBUG_1_DISP_MIRROR                           28:28 /* RWIVF */
#define NV_PBUS_DEBUG_1_DISP_MIRROR_DISABLE              0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_1_DISP_MIRROR_ENABLE               0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_1_CORE_SLOWDWN                          30:29 /* RWIVF */
#define NV_PBUS_DEBUG_1_CORE_SLOWDWN_DISABLE             0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_1_CORE_SLOWDWN_ENABLE              0x00000001 /* RWI-V */
/*  NV_PBUS_DEBUG_2_AGP_VREF is used in nvagp.c */
#define NV_PBUS_DEBUG_2                                  0x00001088 /* RW-4R */
#define NV_PBUS_DEBUG_2_AGP_VREF                                0:0 /* RWIVF */
#define NV_PBUS_DEBUG_2_AGP_VREF_DISABLED                0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_2_AGP_VREF_ENABLED                 0x00000001 /* RW--V */
/* NV_PBUS_DEBUG_3_AGP_4X_NVCLK is used in osapi.c for APM */
#define NV_PBUS_DEBUG_3                                  0x0000108C /* RW-4R */
#define NV_PBUS_DEBUG_3_AGP_4X_NVCLK                            7:4 /* RWIVF */
#define NV_PBUS_PCI_NV_0                                 0x00001800 /* R--4R */
#define NV_PBUS_PCI_NV_0__ALIAS_1                NV_CONFIG_PCI_NV_0 /*       */
#define NV_PBUS_PCI_NV_0_VENDOR_ID                             15:0 /* C--UF */
#define NV_PBUS_PCI_NV_0_VENDOR_ID_NVIDIA_SGS            0x000012D2 /* ----V */
#define NV_PBUS_PCI_NV_0_VENDOR_ID_NVIDIA                0x000010DE /* C---V */
#define NV_PBUS_PCI_NV_0_DEVICE_ID_FUNC                       18:16 /* C--UF */
#define NV_PBUS_PCI_NV_0_DEVICE_ID_FUNC_VGA              0x00000000 /* C---V */
#define NV_PBUS_PCI_NV_0_DEVICE_ID_FUNC_ALT1             0x00000001 /* C---V */
#define NV_PBUS_PCI_NV_0_DEVICE_ID_FUNC_ALT2             0x00000002 /* C---V */
#define NV_PBUS_PCI_NV_0_DEVICE_ID_FUNC_ALT3             0x00000003 /* C---V */
#define NV_PBUS_PCI_NV_0_DEVICE_ID_FUNC_LC0              0x00000004 /* C---V */
#define NV_PBUS_PCI_NV_0_DEVICE_ID_FUNC_LC1              0x00000005 /* C---V */
#define NV_PBUS_PCI_NV_0_DEVICE_ID_FUNC_LC2              0x00000006 /* C---V */
#define NV_PBUS_PCI_NV_0_DEVICE_ID_FUNC_LC3              0x00000007 /* C---V */
#define NV_PBUS_PCI_NV_0_DEVICE_ID_CHIP                       31:19 /* C--UF */
#define NV_PBUS_PCI_NV_0_DEVICE_ID_CHIP_NV0              0x00000000 /* ----V */
#define NV_PBUS_PCI_NV_0_DEVICE_ID_CHIP_NV1              0x00000001 /* ----V */
#define NV_PBUS_PCI_NV_0_DEVICE_ID_CHIP_NV2              0x00000002 /* ----V */
#define NV_PBUS_PCI_NV_0_DEVICE_ID_CHIP_NV3              0x00000003 /* ----V */
#define NV_PBUS_PCI_NV_0_DEVICE_ID_CHIP_NV4              0x00000004 /* ----V */
#define NV_PBUS_PCI_NV_0_DEVICE_ID_CHIP_NV5              0x00000005 /* ----V */
#define NV_PBUS_PCI_NV_0_DEVICE_ID_CHIP_NV10             0x00000010 /* ----V */
#define NV_PBUS_PCI_NV_0_DEVICE_ID_CHIP_NV20             0x00000020 /* C---V */
#define NV_PBUS_PCI_NV_1                                 0x00001804 /* RW-4R */
#define NV_PBUS_PCI_NV_1__ALIAS_1                NV_CONFIG_PCI_NV_1 /*       */
#define NV_PBUS_PCI_NV_1_IO_SPACE                               0:0 /* RWIVF */
#define NV_PBUS_PCI_NV_1_IO_SPACE_DISABLED               0x00000000 /* RWI-V */
#define NV_PBUS_PCI_NV_1_IO_SPACE_ENABLED                0x00000001 /* RW--V */
#define NV_PBUS_PCI_NV_1_MEMORY_SPACE                           1:1 /* RWIVF */
#define NV_PBUS_PCI_NV_1_MEMORY_SPACE_DISABLED           0x00000000 /* RWI-V */
#define NV_PBUS_PCI_NV_1_MEMORY_SPACE_ENABLED            0x00000001 /* RW--V */
#define NV_PBUS_PCI_NV_1_BUS_MASTER                             2:2 /* RWIVF */
#define NV_PBUS_PCI_NV_1_BUS_MASTER_DISABLED             0x00000000 /* RWI-V */
#define NV_PBUS_PCI_NV_1_BUS_MASTER_ENABLED              0x00000001 /* RW--V */
#define NV_PBUS_PCI_NV_1_WRITE_AND_INVAL                        4:4 /* C--VF */
#define NV_PBUS_PCI_NV_1_WRITE_AND_INVAL_DISABLED        0x00000000 /* C---V */
#define NV_PBUS_PCI_NV_1_WRITE_AND_INVAL_ENABLED         0x00000001 /* ----V */
#define NV_PBUS_PCI_NV_1_PALETTE_SNOOP                          5:5 /* RWIVF */
#define NV_PBUS_PCI_NV_1_PALETTE_SNOOP_DISABLED          0x00000000 /* RWI-V */
#define NV_PBUS_PCI_NV_1_PALETTE_SNOOP_ENABLED           0x00000001 /* RW--V */
#define NV_PBUS_PCI_NV_1_CAPLIST                              20:20 /* C--VF */
#define NV_PBUS_PCI_NV_1_CAPLIST_NOT_PRESENT             0x00000000 /* ----V */
#define NV_PBUS_PCI_NV_1_CAPLIST_PRESENT                 0x00000001 /* C---V */
#define NV_PBUS_PCI_NV_1_66MHZ                                21:21 /* C--VF */
#define NV_PBUS_PCI_NV_1_66MHZ_INCAPABLE                 0x00000000 /* ----V */
#define NV_PBUS_PCI_NV_1_66MHZ_CAPABLE                   0x00000001 /* C---V */
#define NV_PBUS_PCI_NV_1_FAST_BACK2BACK                       23:23 /* C--VF */
#define NV_PBUS_PCI_NV_1_FAST_BACK2BACK_INCAPABLE        0x00000000 /* ----V */
#define NV_PBUS_PCI_NV_1_FAST_BACK2BACK_CAPABLE          0x00000001 /* C---V */
#define NV_PBUS_PCI_NV_1_DEVSEL_TIMING                        26:25 /* C--VF */
#define NV_PBUS_PCI_NV_1_DEVSEL_TIMING_FAST              0x00000000 /* ----V */
#define NV_PBUS_PCI_NV_1_DEVSEL_TIMING_MEDIUM            0x00000001 /* C---V */
#define NV_PBUS_PCI_NV_1_DEVSEL_TIMING_SLOW              0x00000002 /* ----V */
#define NV_PBUS_PCI_NV_1_SIGNALED_TARGET                      27:27 /* RWIVF */
#define NV_PBUS_PCI_NV_1_SIGNALED_TARGET_NO_ABORT        0x00000000 /* R-I-V */
#define NV_PBUS_PCI_NV_1_SIGNALED_TARGET_ABORT           0x00000001 /* R---V */
#define NV_PBUS_PCI_NV_1_SIGNALED_TARGET_CLEAR           0x00000001 /* -W--V */
#define NV_PBUS_PCI_NV_1_RECEIVED_TARGET                      28:28 /* RWIVF */
#define NV_PBUS_PCI_NV_1_RECEIVED_TARGET_NO_ABORT        0x00000000 /* R-I-V */
#define NV_PBUS_PCI_NV_1_RECEIVED_TARGET_ABORT           0x00000001 /* R---V */
#define NV_PBUS_PCI_NV_1_RECEIVED_TARGET_CLEAR           0x00000001 /* -W--V */
#define NV_PBUS_PCI_NV_1_RECEIVED_MASTER                      29:29 /* RWIVF */
#define NV_PBUS_PCI_NV_1_RECEIVED_MASTER_NO_ABORT        0x00000000 /* R-I-V */
#define NV_PBUS_PCI_NV_1_RECEIVED_MASTER_ABORT           0x00000001 /* R---V */
#define NV_PBUS_PCI_NV_1_RECEIVED_MASTER_CLEAR           0x00000001 /* -W--V */
#define NV_PBUS_PCI_NV_2                                 0x00001808 /* R--4R */
#define NV_PBUS_PCI_NV_2__ALIAS_1                NV_CONFIG_PCI_NV_2 /*       */
#define NV_PBUS_PCI_NV_2_REVISION_ID                            7:0 /* C--UF */
#define NV_PBUS_PCI_NV_2_CLASS_CODE                            31:8 /* C--VF */
#define NV_PBUS_PCI_NV_2_CLASS_CODE_VGA                  0x00030000 /* C---V */
#define NV_PBUS_PCI_NV_2_CLASS_CODE_MULTIMEDIA           0x00048000 /* ----V */
#define NV_PBUS_PCI_NV_3                                 0x0000180C /* RW-4R */
#define NV_PBUS_PCI_NV_3__ALIAS_1                NV_CONFIG_PCI_NV_3 /*       */
#define NV_PBUS_PCI_NV_3_LATENCY_TIMER                        15:11 /* RWIUF */
#define NV_PBUS_PCI_NV_3_LATENCY_TIMER_0_CLOCKS          0x00000000 /* RWI-V */
#define NV_PBUS_PCI_NV_3_LATENCY_TIMER_8_CLOCKS          0x00000001 /* RW--V */
#define NV_PBUS_PCI_NV_3_LATENCY_TIMER_240_CLOCKS        0x0000001E /* RW--V */
#define NV_PBUS_PCI_NV_3_LATENCY_TIMER_248_CLOCKS        0x0000001F /* RW--V */
#define NV_PBUS_PCI_NV_3_HEADER_TYPE                          23:16 /* C--VF */
#define NV_PBUS_PCI_NV_3_HEADER_TYPE_SINGLEFUNC          0x00000000 /* C---V */
#define NV_PBUS_PCI_NV_3_HEADER_TYPE_MULTIFUNC           0x00000080 /* ----V */
#define NV_PBUS_PCI_NV_4                                 0x00001810 /* RW-4R */
#define NV_PBUS_PCI_NV_4__ALIAS_1                NV_CONFIG_PCI_NV_4 /*       */
#define NV_PBUS_PCI_NV_4_SPACE_TYPE                             0:0 /* C--VF */
#define NV_PBUS_PCI_NV_4_SPACE_TYPE_MEMORY               0x00000000 /* C---V */
#define NV_PBUS_PCI_NV_4_SPACE_TYPE_IO                   0x00000001 /* ----V */
#define NV_PBUS_PCI_NV_4_ADDRESS_TYPE                           2:1 /* C--VF */
#define NV_PBUS_PCI_NV_4_ADDRESS_TYPE_32_BIT             0x00000000 /* C---V */
#define NV_PBUS_PCI_NV_4_ADDRESS_TYPE_20_BIT             0x00000001 /* ----V */
#define NV_PBUS_PCI_NV_4_ADDRESS_TYPE_64_BIT             0x00000002 /* ----V */
#define NV_PBUS_PCI_NV_4_PREFETCHABLE                           3:3 /* C--VF */
#define NV_PBUS_PCI_NV_4_PREFETCHABLE_NOT                0x00000000 /* C---V */
#define NV_PBUS_PCI_NV_4_PREFETCHABLE_MERGABLE           0x00000001 /* ----V */
#define NV_PBUS_PCI_NV_4_BASE_ADDRESS                         31:24 /* RWXUF */
#define NV_PBUS_PCI_NV_5                                 0x00001814 /* RW-4R */
#define NV_PBUS_PCI_NV_5__ALIAS_1                NV_CONFIG_PCI_NV_5 /*       */
#define NV_PBUS_PCI_NV_5_SPACE_TYPE                             0:0 /* C--VF */
#define NV_PBUS_PCI_NV_5_SPACE_TYPE_MEMORY               0x00000000 /* C---V */
#define NV_PBUS_PCI_NV_5_SPACE_TYPE_IO                   0x00000001 /* ----V */
#define NV_PBUS_PCI_NV_5_ADDRESS_TYPE                           2:1 /* C--VF */
#define NV_PBUS_PCI_NV_5_ADDRESS_TYPE_32_BIT             0x00000000 /* C---V */
#define NV_PBUS_PCI_NV_5_ADDRESS_TYPE_20_BIT             0x00000001 /* ----V */
#define NV_PBUS_PCI_NV_5_ADDRESS_TYPE_64_BIT             0x00000002 /* ----V */
#define NV_PBUS_PCI_NV_5_PREFETCHABLE                           3:3 /* C--VF */
#define NV_PBUS_PCI_NV_5_PREFETCHABLE_NOT                0x00000000 /* ----V */
#define NV_PBUS_PCI_NV_5_PREFETCHABLE_MERGABLE           0x00000001 /* C---V */
#define NV_PBUS_PCI_NV_6                                 0x00001818 /* RW-4R */
#define NV_PBUS_PCI_NV_6__ALIAS_1                NV_CONFIG_PCI_NV_6 /*       */
#define NV_PBUS_PCI_NV_6_SPACE_TYPE                             0:0 /* C--VF */
#define NV_PBUS_PCI_NV_6_SPACE_TYPE_MEMORY               0x00000000 /* C---V */
#define NV_PBUS_PCI_NV_6_SPACE_TYPE_IO                   0x00000001 /* ----V */
#define NV_PBUS_PCI_NV_6_ADDRESS_TYPE                           2:1 /* C--VF */
#define NV_PBUS_PCI_NV_6_ADDRESS_TYPE_32_BIT             0x00000000 /* C---V */
#define NV_PBUS_PCI_NV_6_ADDRESS_TYPE_20_BIT             0x00000001 /* ----V */
#define NV_PBUS_PCI_NV_6_ADDRESS_TYPE_64_BIT             0x00000002 /* ----V */
#define NV_PBUS_PCI_NV_6_PREFETCHABLE                           3:3 /* C--VF */
#define NV_PBUS_PCI_NV_6_PREFETCHABLE_NOT                0x00000000 /* ----V */
#define NV_PBUS_PCI_NV_6_PREFETCHABLE_MERGABLE           0x00000001 /* C---V */
#define NV_PBUS_PCI_NV_6_BASE_ADDRESS                         31:19 /* RWXUF */
#define NV_PBUS_PCI_NV_7(i)                      (0x0000181C+(i)*4) /* R--4A */
#define NV_PBUS_PCI_NV_7__SIZE_1                                  4 /*       */
#define NV_PBUS_PCI_NV_7__ALIAS_1                NV_CONFIG_PCI_NV_7 /*       */
#define NV_PBUS_PCI_NV_7_RESERVED                              31:0 /* C--VF */
#define NV_PBUS_PCI_NV_7_RESERVED_0                      0x00000000 /* C---V */
#define NV_PBUS_PCI_NV_11                                0x0000182C /* R--4R */
#define NV_PBUS_PCI_NV_11__ALIAS_1              NV_CONFIG_PCI_NV_11 /*       */
#define NV_PBUS_PCI_NV_11_SUBSYSTEM_VENDOR_ID                  15:0 /* R--UF */
#define NV_PBUS_PCI_NV_11_SUBSYSTEM_VENDOR_ID_NONE       0x00000000 /* R---V */
#define NV_PBUS_PCI_NV_11_SUBSYSTEM_ID                        31:16 /* R--UF */
#define NV_PBUS_PCI_NV_11_SUBSYSTEM_ID_NONE              0x00000000 /* R---V */
#define NV_PBUS_PCI_NV_11_SUBSYSTEM_ID_TNT2PRO           0x0000001f
#define NV_PBUS_PCI_NV_12                                0x00001830 /* RW-4R */
#define NV_PBUS_PCI_NV_12__ALIAS_1              NV_CONFIG_PCI_NV_12 /*       */
#define NV_PBUS_PCI_NV_12_ROM_DECODE                            0:0 /* RWIVF */
#define NV_PBUS_PCI_NV_12_ROM_DECODE_DISABLED            0x00000000 /* RWI-V */
#define NV_PBUS_PCI_NV_12_ROM_DECODE_ENABLED             0x00000001 /* RW--V */
#define NV_PBUS_PCI_NV_12_ROM_BASE                            31:16 /* RWXUF */
#define NV_PBUS_PCI_NV_13                                0x00001834 /* RW-4R */
#define NV_PBUS_PCI_NV_13__ALIAS_1              NV_CONFIG_PCI_NV_13 /*       */
#define NV_PBUS_PCI_NV_13_CAP_PTR                               7:0 /* C--VF */
#define NV_PBUS_PCI_NV_13_CAP_PTR_AGP                    0x00000044 /* ----V */
#define NV_PBUS_PCI_NV_13_CAP_PTR_POWER_MGMT             0x00000060 /* C---V */
#define NV_PBUS_PCI_NV_14                                0x00001838 /* R--4R */
#define NV_PBUS_PCI_NV_14__ALIAS_1              NV_CONFIG_PCI_NV_14 /*       */
#define NV_PBUS_PCI_NV_14_RESERVED                             31:0 /* C--VF */
#define NV_PBUS_PCI_NV_14_RESERVED_0                     0x00000000 /* C---V */
#define NV_PBUS_PCI_NV_15                                0x0000183C /* RW-4R */
#define NV_PBUS_PCI_NV_15__ALIAS_1              NV_CONFIG_PCI_NV_15 /*       */
#define NV_PBUS_PCI_NV_15_INTR_LINE                             7:0 /* RWIVF */
#define NV_PBUS_PCI_NV_15_INTR_LINE_IRQ0                 0x00000000 /* RWI-V */
#define NV_PBUS_PCI_NV_15_INTR_LINE_IRQ1                 0x00000001 /* RW--V */
#define NV_PBUS_PCI_NV_15_INTR_LINE_IRQ15                0x0000000F /* RW--V */
#define NV_PBUS_PCI_NV_15_INTR_LINE_UNKNOWN              0x000000FF /* RW--V */
#define NV_PBUS_PCI_NV_15_INTR_PIN                             15:8 /* C--VF */
#define NV_PBUS_PCI_NV_15_INTR_PIN_INTA                  0x00000001 /* C---V */
#define NV_PBUS_PCI_NV_15_MIN_GNT                             23:16 /* C--VF */
#define NV_PBUS_PCI_NV_15_MIN_GNT_NO_REQUIREMENTS        0x00000000 /* ----V */
#define NV_PBUS_PCI_NV_15_MIN_GNT_750NS                  0x00000003 /* ----V */
#define NV_PBUS_PCI_NV_15_MIN_GNT_1250NS                 0x00000005 /* C---V */
#define NV_PBUS_PCI_NV_15_MAX_LAT                             31:24 /* C--VF */
#define NV_PBUS_PCI_NV_15_MAX_LAT_NO_REQUIREMENTS        0x00000000 /* ----V */
#define NV_PBUS_PCI_NV_15_MAX_LAT_250NS                  0x00000001 /* C---V */
#define NV_PBUS_PCI_NV_16                                0x00001840 /* RW-4R */
#define NV_PBUS_PCI_NV_16__ALIAS_1              NV_CONFIG_PCI_NV_16 /*       */
#define NV_PBUS_PCI_NV_16_SUBSYSTEM_VENDOR_ID                  15:0 /* RW-VF */
#define NV_PBUS_PCI_NV_16_SUBSYSTEM_VENDOR_ID_NONE       0x00000000 /* R---V */
#define NV_PBUS_PCI_NV_16_SUBSYSTEM_ID                        31:16 /* RW-VF */
#define NV_PBUS_PCI_NV_16_SUBSYSTEM_ID_NONE              0x00000000 /* R---V */
#define NV_PBUS_PCI_NV_17                                0x00001844 /* RW-4R */
#define NV_PBUS_PCI_NV_17__ALIAS_1              NV_CONFIG_PCI_NV_17 /*       */
#define NV_PBUS_PCI_NV_17_AGP_REV_MAJOR                       23:20 /* C--VF */
#define NV_PBUS_PCI_NV_17_AGP_REV_MAJOR_2                0x00000002 /* C---V */
#define NV_PBUS_PCI_NV_17_AGP_REV_MINOR                       19:16 /* C--VF */
#define NV_PBUS_PCI_NV_17_AGP_REV_MINOR_0                0x00000000 /* C---V */
#define NV_PBUS_PCI_NV_17_NEXT_PTR                             15:8 /* C--VF */
#define NV_PBUS_PCI_NV_17_NEXT_PTR_NULL                  0x00000000 /* C---V */
#define NV_PBUS_PCI_NV_17_CAP_ID                                7:0 /* C--VF */
#define NV_PBUS_PCI_NV_17_CAP_ID_AGP                     0x00000002 /* C---V */
#define NV_PBUS_PCI_NV_18                                0x00001848 /* RW-4R */
#define NV_PBUS_PCI_NV_18__ALIAS_1              NV_CONFIG_PCI_NV_18 /*       */
#define NV_PBUS_PCI_NV_18_AGP_STATUS_RQ                       31:24 /* C--VF */
#define NV_PBUS_PCI_NV_18_AGP_STATUS_RQ_16               0x0000000F /* C---V */
#define NV_PBUS_PCI_NV_18_AGP_STATUS_RQ_32               0x0000001F /* C---V */
#define NV_PBUS_PCI_NV_18_AGP_STATUS_SBA                        9:9 /* R--VF */
#define NV_PBUS_PCI_NV_18_AGP_STATUS_SBA_NONE            0x00000000 /* R---V */
#define NV_PBUS_PCI_NV_18_AGP_STATUS_SBA_CAPABLE         0x00000001 /* R---V */
#define NV_PBUS_PCI_NV_18_AGP_STATUS_FW                         4:4 /* R--VF */
#define NV_PBUS_PCI_NV_18_AGP_STATUS_FW_NONE             0x00000000 /* R---V */
#define NV_PBUS_PCI_NV_18_AGP_STATUS_FW_CAPABLE          0x00000001 /* R---V */
#define NV_PBUS_PCI_NV_18_AGP_STATUS_RATE                       2:0 /* R--VF */
#define NV_PBUS_PCI_NV_18_AGP_STATUS_RATE_1X             0x00000001 /* R---V */
#define NV_PBUS_PCI_NV_18_AGP_STATUS_RATE_2X             0x00000002 /* ----V */
#define NV_PBUS_PCI_NV_18_AGP_STATUS_RATE_1X_AND_2X      0x00000003 /* R---V */
#define NV_PBUS_PCI_NV_18_AGP_STATUS_RATE_4X             0x00000004 /* R---V */
#define NV_PBUS_PCI_NV_18_AGP_STATUS_RATE_1X_2X_4X       0x00000007 /* R---V */
#define NV_PBUS_PCI_NV_19                                0x0000184C /* RW-4R */
#define NV_PBUS_PCI_NV_19__ALIAS_1              NV_CONFIG_PCI_NV_19 /*       */
#define NV_PBUS_PCI_NV_19_AGP_COMMAND_RQ_DEPTH                28:24 /* RWIVF */
#define NV_PBUS_PCI_NV_19_AGP_COMMAND_RQ_DEPTH_0         0x00000000 /* RWI-V */
#define NV_PBUS_PCI_NV_19_AGP_COMMAND_SBA_ENABLE                9:9 /* RWIVF */
#define NV_PBUS_PCI_NV_19_AGP_COMMAND_SBA_ENABLE_OFF     0x00000000 /* RWI-V */
#define NV_PBUS_PCI_NV_19_AGP_COMMAND_SBA_ENABLE_ON      0x00000001 /* RW--V */
#define NV_PBUS_PCI_NV_19_AGP_COMMAND_AGP_ENABLE                8:8 /* RWIVF */
#define NV_PBUS_PCI_NV_19_AGP_COMMAND_AGP_ENABLE_OFF     0x00000000 /* RWI-V */
#define NV_PBUS_PCI_NV_19_AGP_COMMAND_AGP_ENABLE_ON      0x00000001 /* RW--V */
#define NV_PBUS_PCI_NV_19_AGP_COMMAND_FW_ENABLE                 4:4 /* RWIVF */
#define NV_PBUS_PCI_NV_19_AGP_COMMAND_FW_ENABLE_OFF      0x00000000 /* RWI-V */
#define NV_PBUS_PCI_NV_19_AGP_COMMAND_FW_ENABLE_ON       0x00000001 /* RW--V */
#define NV_PBUS_PCI_NV_19_AGP_COMMAND_DATA_RATE                 2:0 /* RWIVF */
#define NV_PBUS_PCI_NV_19_AGP_COMMAND_DATA_RATE_OFF      0x00000000 /* RWI-V */
#define NV_PBUS_PCI_NV_19_AGP_COMMAND_DATA_RATE_1X       0x00000001 /* RW--V */
#define NV_PBUS_PCI_NV_19_AGP_COMMAND_DATA_RATE_2X       0x00000002 /* RW--V */
#define NV_PBUS_PCI_NV_19_AGP_COMMAND_DATA_RATE_4X       0x00000004 /* RW--V */
#define NV_PBUS_PCI_NV_20                                0x00001850 /* RW-4R */
#define NV_PBUS_PCI_NV_20__ALIAS_1              NV_CONFIG_PCI_NV_20 /*       */
#define NV_PBUS_PCI_NV_20_ROM_SHADOW                            0:0 /* RWIVF */
#define NV_PBUS_PCI_NV_20_ROM_SHADOW_DISABLED            0x00000000 /* RWI-V */
#define NV_PBUS_PCI_NV_20_ROM_SHADOW_ENABLED             0x00000001 /* RW--V */
#define NV_PBUS_PCI_NV_21                                0x00001854 /* RW-4R */
#define NV_PBUS_PCI_NV_21__ALIAS_1              NV_CONFIG_PCI_NV_21 /*       */
#define NV_PBUS_PCI_NV_21_VGA                                   0:0 /* RWIVF */
#define NV_PBUS_PCI_NV_21_VGA_DISABLED                   0x00000000 /* RW--V */
#define NV_PBUS_PCI_NV_21_VGA_ENABLED                    0x00000001 /* RWI-V */
#define NV_PBUS_PCI_NV_22                                0x00001858 /* RW-4R */
#define NV_PBUS_PCI_NV_22__ALIAS_1              NV_CONFIG_PCI_NV_22 /*       */
#define NV_PBUS_PCI_NV_22_SCRATCH                              23:0 /* RWIVF */
#define NV_PBUS_PCI_NV_22_SCRATCH_DEFAULT                0x0023D6CE /* RWI-V */
#define NV_PBUS_PCI_NV_23                                0x0000185C /* RW-4R */
#define NV_PBUS_PCI_NV_23__ALIAS_1              NV_CONFIG_PCI_NV_23 /*       */
#define NV_PBUS_PCI_NV_23_DT_TIMEOUT                            3:0 /* RWIVF */
#define NV_PBUS_PCI_NV_23_DT_TIMEOUT_16                  0x0000000F /* RWI-V */
#define NV_PBUS_PCI_NV_24                                0x00001860 /* RW-4R */
#define NV_PBUS_PCI_NV_24__ALIAS_1              NV_CONFIG_PCI_NV_24 /*       */
#define NV_PBUS_PCI_NV_24_PME_D3_COLD                         31:31 /* C--VF */
#define NV_PBUS_PCI_NV_24_PME_D3_COLD_SUPPORTED          0x00000001 /* ---VV */
#define NV_PBUS_PCI_NV_24_PME_D3_COLD_NOT_SUPPORTED      0x00000000 /* C--VV */
#define NV_PBUS_PCI_NV_24_PME_D3_HOT                          30:30 /* C--VF */
#define NV_PBUS_PCI_NV_24_PME_D3_HOT_SUPPORTED           0x00000001 /* ---VV */
#define NV_PBUS_PCI_NV_24_PME_D3_HOT_NOT_SUPPORTED       0x00000000 /* C--VV */
#define NV_PBUS_PCI_NV_24_PME_D2                              29:29 /* C--VF */
#define NV_PBUS_PCI_NV_24_PME_D2_SUPPORTED               0x00000001 /* ---VV */
#define NV_PBUS_PCI_NV_24_PME_D2_NOT_SUPPORTED           0x00000000 /* C--VV */
#define NV_PBUS_PCI_NV_24_PME_D1                              28:28 /* C--VF */
#define NV_PBUS_PCI_NV_24_PME_D1_SUPPORTED               0x00000001 /* ---VV */
#define NV_PBUS_PCI_NV_24_PME_D1_NOT_SUPPORTED           0x00000000 /* C--VV */
#define NV_PBUS_PCI_NV_24_PME_D0                              27:27 /* C--VF */
#define NV_PBUS_PCI_NV_24_PME_D0_SUPPORTED               0x00000001 /* ---VV */
#define NV_PBUS_PCI_NV_24_PME_D0_NOT_SUPPORTED           0x00000000 /* C--VV */
#define NV_PBUS_PCI_NV_24_D2                                  26:26 /* C--VF */
#define NV_PBUS_PCI_NV_24_D2_SUPPORTED                   0x00000001 /* ---VV */
#define NV_PBUS_PCI_NV_24_D2_NOT_SUPPORTED               0x00000000 /* C--VV */
#define NV_PBUS_PCI_NV_24_D1                                  25:25 /* C--VF */
#define NV_PBUS_PCI_NV_24_D1_SUPPORTED                   0x00000001 /* ---VV */
#define NV_PBUS_PCI_NV_24_D1_NOT_SUPPORTED               0x00000000 /* C--VV */
#define NV_PBUS_PCI_NV_24_DSI                                 21:21 /* C--VF */
#define NV_PBUS_PCI_NV_24_DSI_NOT_REQUIRED               0x00000000 /* C--VV */
#define NV_PBUS_PCI_NV_24_PME_CLOCK                           19:19 /* C--VV */
#define NV_PBUS_PCI_NV_24_PME_CLOCK_NOT_REQUIRED         0x00000000 /* C--VV */
#define NV_PBUS_PCI_NV_24_VERSION                             18:16 /* C--VV */
#define NV_PBUS_PCI_NV_24_VERSION_1                      0x00000001 /* ---VV */
#define NV_PBUS_PCI_NV_24_VERSION_2                      0x00000002 /* C--VV */
#define NV_PBUS_PCI_NV_24_NEXT_PTR                             15:8 /* R--VF */
#define NV_PBUS_PCI_NV_24_NEXT_PTR_NULL                  0x00000000 /* ----V */
#define NV_PBUS_PCI_NV_24_NEXT_PTR_AGP                   0x00000044 /* ----V */
#define NV_PBUS_PCI_NV_24_CAP_ID                                7:0 /* C--VF */
#define NV_PBUS_PCI_NV_24_CAP_ID_POWER_MGMT              0x00000001 /* C---V */
#define NV_PBUS_PCI_NV_25                                0x00001864 /* RW-4R */
#define NV_PBUS_PCI_NV_25__ALIAS_1              NV_CONFIG_PCI_NV_25 /*       */
#define NV_PBUS_PCI_NV_25_POWER_STATE                           1:0 /* RWIVF */
#define NV_PBUS_PCI_NV_25_POWER_STATE_D3_HOT             0x00000003 /* RW-VV */
#define NV_PBUS_PCI_NV_25_POWER_STATE_D2                 0x00000002 /* RW-VV */
#define NV_PBUS_PCI_NV_25_POWER_STATE_D1                 0x00000001 /* RW-VV */
#define NV_PBUS_PCI_NV_25_POWER_STATE_D0                 0x00000000 /* RWIVV */
#define NV_PBUS_PCI_NV_26(i)                     (0x00001868+(i)*4) /* R--4A */
#define NV_PBUS_PCI_NV_26__SIZE_1                                38 /*       */
#define NV_PBUS_PCI_NV_26__ALIAS_1              NV_CONFIG_PCI_NV_25 /*       */
#define NV_PBUS_PCI_NV_26_RESERVED                             31:0 /* C--VF */
#define NV_PBUS_PCI_NV_26_RESERVED_0                     0x00000000 /* C---V */
#define NV_PBUS_PWM                                      0x000010F0 /* RW-4R */
#define NV_PBUS_PWM_EN                                        31:31 /* RWIVF */
#define NV_PBUS_PWM_EN_DISABLED                          0x00000000 /* RWI-V */
#define NV_PBUS_PWM_EN_ENABLED                           0x00000001 /* RW--V */
#define NV_PBUS_PWM_HI                                        30:16 /* RWIVF */
#define NV_PBUS_PWM_HI_ZERO                              0x00000000 /* RWI-V */
#define NV_PBUS_PWM_PERIOD                                     14:0 /* RWIVF */
#define NV_PBUS_PWM_MAX_PERIOD                           0x0000EFFF /* RWI-V */
/* dev_fifo.ref */
#define NV_PFIFO                              0x00003FFF:0x00002000 /* RW--D */
#define NV_PFIFO_DEBUG_0                                 0x00002080 /* R--4R */
#define NV_PFIFO_DEBUG_0_CACHE_ERROR0                           0:0 /* R-XVF */
#define NV_PFIFO_DEBUG_0_CACHE_ERROR0_NOT_PENDING        0x00000000 /* R---V */
#define NV_PFIFO_DEBUG_0_CACHE_ERROR0_PENDING            0x00000001 /* R---V */
#define NV_PFIFO_DEBUG_0_CACHE_ERROR1                           4:4 /* R-XVF */
#define NV_PFIFO_DEBUG_0_CACHE_ERROR1_NOT_PENDING        0x00000000 /* R---V */
#define NV_PFIFO_DEBUG_0_CACHE_ERROR1_PENDING            0x00000001 /* R---V */
#define NV_PFIFO_INTR_0                                  0x00002100 /* RW-4R */
#define NV_PFIFO_INTR_0_CACHE_ERROR                             0:0 /* RWXVF */
#define NV_PFIFO_INTR_0_CACHE_ERROR_NOT_PENDING          0x00000000 /* R---V */
#define NV_PFIFO_INTR_0_CACHE_ERROR_PENDING              0x00000001 /* R---V */
#define NV_PFIFO_INTR_0_CACHE_ERROR_RESET                0x00000001 /* -W--V */
#define NV_PFIFO_INTR_0_RUNOUT                                  4:4 /* RWXVF */
#define NV_PFIFO_INTR_0_RUNOUT_NOT_PENDING               0x00000000 /* R---V */
#define NV_PFIFO_INTR_0_RUNOUT_PENDING                   0x00000001 /* R---V */
#define NV_PFIFO_INTR_0_RUNOUT_RESET                     0x00000001 /* -W--V */
#define NV_PFIFO_INTR_0_RUNOUT_OVERFLOW                         8:8 /* RWXVF */
#define NV_PFIFO_INTR_0_RUNOUT_OVERFLOW_NOT_PENDING      0x00000000 /* R---V */
#define NV_PFIFO_INTR_0_RUNOUT_OVERFLOW_PENDING          0x00000001 /* R---V */
#define NV_PFIFO_INTR_0_RUNOUT_OVERFLOW_RESET            0x00000001 /* -W--V */
#define NV_PFIFO_INTR_0_DMA_PUSHER                            12:12 /* RWXVF */
#define NV_PFIFO_INTR_0_DMA_PUSHER_NOT_PENDING           0x00000000 /* R---V */
#define NV_PFIFO_INTR_0_DMA_PUSHER_PENDING               0x00000001 /* R---V */
#define NV_PFIFO_INTR_0_DMA_PUSHER_RESET                 0x00000001 /* -W--V */
#define NV_PFIFO_INTR_0_DMA_PT                                16:16 /* RWXVF */
#define NV_PFIFO_INTR_0_DMA_PT_NOT_PENDING               0x00000000 /* R---V */
#define NV_PFIFO_INTR_0_DMA_PT_PENDING                   0x00000001 /* R---V */
#define NV_PFIFO_INTR_0_DMA_PT_RESET                     0x00000001 /* -W--V */
#define NV_PFIFO_INTR_0_SEMAPHORE                             20:20 /* RWXVF */
#define NV_PFIFO_INTR_0_SEMAPHORE_NOT_PENDING            0x00000000 /* R---V */
#define NV_PFIFO_INTR_0_SEMAPHORE_PENDING                0x00000001 /* R---V */
#define NV_PFIFO_INTR_0_SEMAPHORE_RESET                  0x00000001 /* -W--V */
#define NV_PFIFO_INTR_0_ACQUIRE_TIMEOUT                       24:24 /* RWXVF */
#define NV_PFIFO_INTR_0_ACQUIRE_TIMEOUT_NOT_PENDING      0x00000000 /* R---V */
#define NV_PFIFO_INTR_0_ACQUIRE_TIMEOUT_PENDING          0x00000001 /* R---V */
#define NV_PFIFO_INTR_0_ACQUIRE_TIMEOUT_RESET            0x00000001 /* -W--V */
#define NV_PFIFO_INTR_EN_0                               0x00002140 /* RW-4R */
#define NV_PFIFO_INTR_EN_0_CACHE_ERROR                          0:0 /* RWIVF */
#define NV_PFIFO_INTR_EN_0_CACHE_ERROR_DISABLED          0x00000000 /* RWI-V */
#define NV_PFIFO_INTR_EN_0_CACHE_ERROR_ENABLED           0x00000001 /* RW--V */
#define NV_PFIFO_INTR_EN_0_RUNOUT                               4:4 /* RWIVF */
#define NV_PFIFO_INTR_EN_0_RUNOUT_DISABLED               0x00000000 /* RWI-V */
#define NV_PFIFO_INTR_EN_0_RUNOUT_ENABLED                0x00000001 /* RW--V */
#define NV_PFIFO_INTR_EN_0_RUNOUT_OVERFLOW                      8:8 /* RWIVF */
#define NV_PFIFO_INTR_EN_0_RUNOUT_OVERFLOW_DISABLED      0x00000000 /* RWI-V */
#define NV_PFIFO_INTR_EN_0_RUNOUT_OVERFLOW_ENABLED       0x00000001 /* RW--V */
#define NV_PFIFO_INTR_EN_0_DMA_PUSHER                         12:12 /* RWIVF */
#define NV_PFIFO_INTR_EN_0_DMA_PUSHER_DISABLED           0x00000000 /* RWI-V */
#define NV_PFIFO_INTR_EN_0_DMA_PUSHER_ENABLED            0x00000001 /* RW--V */
#define NV_PFIFO_INTR_EN_0_DMA_PT                             16:16 /* RWIVF */
#define NV_PFIFO_INTR_EN_0_DMA_PT_DISABLED               0x00000000 /* RWI-V */
#define NV_PFIFO_INTR_EN_0_DMA_PT_ENABLED                0x00000001 /* RW--V */
#define NV_PFIFO_INTR_EN_0_SEMAPHORE                          20:20 /* RWIVF */
#define NV_PFIFO_INTR_EN_0_SEMAPHORE_DISABLED            0x00000000 /* RWI-V */
#define NV_PFIFO_INTR_EN_0_SEMAPHORE_ENABLED             0x00000001 /* RW--V */
#define NV_PFIFO_INTR_EN_0_ACQUIRE_TIMEOUT                    24:24 /* RWIVF */
#define NV_PFIFO_INTR_EN_0_ACQUIRE_TIMEOUT_DISABLED      0x00000000 /* RWI-V */
#define NV_PFIFO_INTR_EN_0_ACQUIRE_TIMEOUT_ENABLED       0x00000001 /* RW--V */
#define NV_PFIFO_CACHES                                  0x00002500 /* RW-4R */
#define NV_PFIFO_CACHES_REASSIGN                                0:0 /* RWIVF */
#define NV_PFIFO_CACHES_REASSIGN_DISABLED                0x00000000 /* RWI-V */
#define NV_PFIFO_CACHES_REASSIGN_ENABLED                 0x00000001 /* RW--V */
#define NV_PFIFO_CACHES_DMA_SUSPEND                             4:4 /* R--VF */
#define NV_PFIFO_CACHES_DMA_SUSPEND_IDLE                 0x00000000 /* R---V */
#define NV_PFIFO_CACHES_DMA_SUSPEND_BUSY                 0x00000001 /* R---V */
#define NV_PFIFO_CACHE0_PUSH0                            0x00003000 /* RW-4R */
#define NV_PFIFO_CACHE0_PUSH0_ACCESS                            0:0 /* RWIVF */
#define NV_PFIFO_CACHE0_PUSH0_ACCESS_DISABLED            0x00000000 /* RWI-V */
#define NV_PFIFO_CACHE0_PUSH0_ACCESS_ENABLED             0x00000001 /* RW--V */
#define NV_PFIFO_CACHE1_PUSH0                            0x00003200 /* RW-4R */
#define NV_PFIFO_CACHE1_PUSH0_ACCESS                            0:0 /* RWIVF */
#define NV_PFIFO_CACHE1_PUSH0_ACCESS_DISABLED            0x00000000 /* RWI-V */
#define NV_PFIFO_CACHE1_PUSH0_ACCESS_ENABLED             0x00000001 /* RW--V */
#define NV_PFIFO_CACHE0_PUSH1                            0x00003004 /* RW-4R */
#define NV_PFIFO_CACHE0_PUSH1_CHID                              4:0 /* RWXUF */
#define NV_PFIFO_CACHE1_PUSH1                            0x00003204 /* RW-4R */
#define NV_PFIFO_CACHE1_PUSH1_CHID                              4:0 /* RWXUF */
#define NV_PFIFO_CACHE1_PUSH1_MODE                              8:8 /* RWIVF */
#define NV_PFIFO_CACHE1_PUSH1_MODE_PIO                   0x00000000 /* RWI-V */
#define NV_PFIFO_CACHE1_PUSH1_MODE_DMA                   0x00000001 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_PUSH                         0x00003220 /* RW-4R */
#define NV_PFIFO_CACHE1_DMA_PUSH_ACCESS                         0:0 /* RWIVF */
#define NV_PFIFO_CACHE1_DMA_PUSH_ACCESS_DISABLED         0x00000000 /* RWI-V */
#define NV_PFIFO_CACHE1_DMA_PUSH_ACCESS_ENABLED          0x00000001 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_PUSH_STATE                          4:4 /* R--VF */
#define NV_PFIFO_CACHE1_DMA_PUSH_STATE_IDLE              0x00000000 /* R---V */
#define NV_PFIFO_CACHE1_DMA_PUSH_STATE_BUSY              0x00000001 /* R---V */
#define NV_PFIFO_CACHE1_DMA_PUSH_BUFFER                         8:8 /* R--VF */
#define NV_PFIFO_CACHE1_DMA_PUSH_BUFFER_NOT_EMPTY        0x00000000 /* R---V */
#define NV_PFIFO_CACHE1_DMA_PUSH_BUFFER_EMPTY            0x00000001 /* R---V */
#define NV_PFIFO_CACHE1_DMA_PUSH_STATUS                       12:12 /* RWIVF */
#define NV_PFIFO_CACHE1_DMA_PUSH_STATUS_RUNNING          0x00000000 /* RWI-V */
#define NV_PFIFO_CACHE1_DMA_PUSH_STATUS_SUSPENDED        0x00000001 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_PUSH_ACQUIRE                      16:16 /* RWIVF */
#define NV_PFIFO_CACHE1_DMA_PUSH_ACQUIRE_NOT_PENDING     0x00000000 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_PUSH_ACQUIRE_PENDING         0x00000001 /* RWI-V */
#define NV_PFIFO_CACHE1_DMA_PUT                          0x00003240 /* RW-4R */
#define NV_PFIFO_CACHE1_DMA_GET                          0x00003244 /* RW-4R */
#define NV_PFIFO_CACHE1_DMA_STATE                        0x00003228 /* RW-4R */
#define NV_PFIFO_CACHE0_PULL0                            0x00003050 /* RW-4R */
#define NV_PFIFO_CACHE0_PULL0_ACCESS                            0:0 /* RWIVF */
#define NV_PFIFO_CACHE0_PULL0_ACCESS_DISABLED            0x00000000 /* RWI-V */
#define NV_PFIFO_CACHE0_PULL0_ACCESS_ENABLED             0x00000001 /* RW--V */
#define NV_PFIFO_CACHE0_PULL0_HASH                              4:4 /* R-XVF */
#define NV_PFIFO_CACHE0_PULL0_HASH_SUCCEEDED             0x00000000 /* R---V */
#define NV_PFIFO_CACHE0_PULL0_HASH_FAILED                0x00000001 /* R---V */
#define NV_PFIFO_CACHE0_PULL0_DEVICE                            8:8 /* R-XVF */
#define NV_PFIFO_CACHE0_PULL0_DEVICE_HARDWARE            0x00000000 /* R---V */
#define NV_PFIFO_CACHE0_PULL0_DEVICE_SOFTWARE            0x00000001 /* R---V */
#define NV_PFIFO_CACHE0_PULL0_HASH_STATE                      12:12 /* R-XVF */
#define NV_PFIFO_CACHE0_PULL0_HASH_STATE_IDLE            0x00000000 /* R---V */
#define NV_PFIFO_CACHE0_PULL0_HASH_STATE_BUSY            0x00000001 /* R---V */
#define NV_PFIFO_CACHE1_PULL0                            0x00003250 /* RW-4R */
#define NV_PFIFO_CACHE1_PULL0_ACCESS                            0:0 /* RWIVF */
#define NV_PFIFO_CACHE1_PULL0_ACCESS_DISABLED            0x00000000 /* RWI-V */
#define NV_PFIFO_CACHE1_PULL0_ACCESS_ENABLED             0x00000001 /* RW--V */
#define NV_PFIFO_CACHE1_PULL0_HASH                              4:4 /* R-XVF */
#define NV_PFIFO_CACHE1_PULL0_HASH_SUCCEEDED             0x00000000 /* R---V */
#define NV_PFIFO_CACHE1_PULL0_HASH_FAILED                0x00000001 /* R---V */
#define NV_PFIFO_CACHE1_PULL0_DEVICE                            8:8 /* R-XVF */
#define NV_PFIFO_CACHE1_PULL0_DEVICE_HARDWARE            0x00000000 /* R---V */
#define NV_PFIFO_CACHE1_PULL0_DEVICE_SOFTWARE            0x00000001 /* R---V */
#define NV_PFIFO_CACHE1_PULL0_HASH_STATE                      12:12 /* R-XVF */
#define NV_PFIFO_CACHE1_PULL0_HASH_STATE_IDLE            0x00000000 /* R---V */
#define NV_PFIFO_CACHE1_PULL0_HASH_STATE_BUSY            0x00000001 /* R---V */
#define NV_PFIFO_CACHE1_PULL0_ACQUIRE_STATE                   16:16 /* R-XVF */
#define NV_PFIFO_CACHE1_PULL0_ACQUIRE_STATE_IDLE         0x00000000 /* R---V */
#define NV_PFIFO_CACHE1_PULL0_ACQUIRE_STATE_BUSY         0x00000001 /* R---V */
#define NV_PFIFO_CACHE1_PULL0_SEMAPHORE                       21:20 /* R-XVF */
#define NV_PFIFO_CACHE1_PULL0_SEMAPHORE_NO_ERROR         0x00000000 /* R---V */
#define NV_PFIFO_CACHE1_PULL0_SEMAPHORE_BAD_ARG          0x00000001 /* R---V */
#define NV_PFIFO_CACHE1_PULL0_SEMAPHORE_INV_STATE        0x00000002 /* R---V */
#define NV_PFIFO_CACHE0_PULL1                            0x00003054 /* RW-4R */
#define NV_PFIFO_CACHE0_PULL1_ENGINE                            1:0 /* RWXUF */
#define NV_PFIFO_CACHE0_PULL1_ENGINE_SW                  0x00000000 /* RW--V */
#define NV_PFIFO_CACHE0_PULL1_ENGINE_GRAPHICS            0x00000001 /* RW--V */
#define NV_PFIFO_CACHE0_PULL1_ENGINE_DVD                 0x00000002 /* RW--V */
#define NV_PFIFO_CACHE1_PULL1                            0x00003254 /* RW-4R */
#define NV_PFIFO_CACHE1_PULL1_ENGINE                            1:0 /* RWXUF */
#define NV_PFIFO_CACHE1_PULL1_ENGINE_SW                  0x00000000 /* RW--V */
#define NV_PFIFO_CACHE1_PULL1_ENGINE_GRAPHICS            0x00000001 /* RW--V */
#define NV_PFIFO_CACHE1_PULL1_ENGINE_DVD                 0x00000002 /* RW--V */
#define NV_PFIFO_CACHE1_PULL1_ACQUIRE                           4:4 /* RWXVF */
#define NV_PFIFO_CACHE1_PULL1_ACQUIRE_INACTIVE           0x00000000 /* RW--V */
#define NV_PFIFO_CACHE1_PULL1_ACQUIRE_ACTIVE             0x00000001 /* RW--V */
#define NV_PFIFO_CACHE1_PULL1_SEM_TARGET_NODE                 17:16 /* RWXUF */
#define NV_PFIFO_CACHE1_PULL1_SEM_TARGET_NODE_NVM        0x00000000 /* RW--V */
#define NV_PFIFO_CACHE1_PULL1_SEM_TARGET_NODE_PCI        0x00000002 /* RW--V */
#define NV_PFIFO_CACHE1_PULL1_SEM_TARGET_NODE_AGP        0x00000003 /* RW--V */
#define NV_PFIFO_CACHE0_HASH                             0x00003058 /* RW-4R */
#define NV_PFIFO_CACHE0_HASH_INSTANCE                          15:0 /* RWXUF */
#define NV_PFIFO_CACHE0_HASH_VALID                            16:16 /* RWXVF */
#define NV_PFIFO_CACHE1_HASH                             0x00003258 /* RW-4R */
#define NV_PFIFO_CACHE1_HASH_INSTANCE                          15:0 /* RWXUF */
#define NV_PFIFO_CACHE1_HASH_VALID                            16:16 /* RWXVF */
#define NV_PFIFO_CACHE1_ACQUIRE_0                        0x00003260 /* RW-4R */
#define NV_PFIFO_CACHE1_ACQUIRE_0_TIMEOUT                      30:0 /* RWXUF */
#define NV_PFIFO_CACHE1_ACQUIRE_1                        0x00003264 /* RW-4R */
#define NV_PFIFO_CACHE1_ACQUIRE_1_TIMESTAMP                    31:0 /* RWXUF */
#define NV_PFIFO_CACHE1_ACQUIRE_2                        0x00003268 /* RW-4R */
#define NV_PFIFO_CACHE1_ACQUIRE_2_VALUE                        31:0 /* RWXUF */
#define NV_PFIFO_CACHE1_SEMAPHORE                        0x0000326C /* RW-4R */
#define NV_PFIFO_CACHE1_SEMAPHORE_CTXDMA                        0:0 /* RWXVF */
#define NV_PFIFO_CACHE1_SEMAPHORE_CTXDMA_INVALID         0x00000000 /* RW--V */
#define NV_PFIFO_CACHE1_SEMAPHORE_CTXDMA_VALID           0x00000001 /* RW--V */
#define NV_PFIFO_CACHE1_SEMAPHORE_OFFSET                       11:2 /* RWXUF */
#define NV_PFIFO_CACHE1_SEMAPHORE_PAGE_ADDRESS                31:12 /* RWXUF */
#define NV_PFIFO_CACHE0_STATUS                           0x00003014 /* R--4R */
#define NV_PFIFO_CACHE0_STATUS_LOW_MARK                         4:4 /* R--VF */
#define NV_PFIFO_CACHE0_STATUS_LOW_MARK_NOT_EMPTY        0x00000000 /* R---V */
#define NV_PFIFO_CACHE0_STATUS_LOW_MARK_EMPTY            0x00000001 /* R---V */
#define NV_PFIFO_CACHE0_STATUS_HIGH_MARK                        8:8 /* R--VF */
#define NV_PFIFO_CACHE0_STATUS_HIGH_MARK_NOT_FULL        0x00000000 /* R---V */
#define NV_PFIFO_CACHE0_STATUS_HIGH_MARK_FULL            0x00000001 /* R---V */
#define NV_PFIFO_CACHE1_STATUS                           0x00003214 /* R--4R */
#define NV_PFIFO_CACHE1_STATUS_LOW_MARK                         4:4 /* R--VF */
#define NV_PFIFO_CACHE1_STATUS_LOW_MARK_NOT_EMPTY        0x00000000 /* R---V */
#define NV_PFIFO_CACHE1_STATUS_LOW_MARK_EMPTY            0x00000001 /* R---V */
#define NV_PFIFO_CACHE1_STATUS_HIGH_MARK                        8:8 /* R--VF */
#define NV_PFIFO_CACHE1_STATUS_HIGH_MARK_NOT_FULL        0x00000000 /* R---V */
#define NV_PFIFO_CACHE1_STATUS_HIGH_MARK_FULL            0x00000001 /* R---V */
#define NV_PFIFO_CACHE1_STATUS1                          0x00003218 /* R--4R */
#define NV_PFIFO_CACHE1_STATUS1_RANOUT                          0:0 /* R-XVF */
#define NV_PFIFO_CACHE1_STATUS1_RANOUT_FALSE             0x00000000 /* R---V */
#define NV_PFIFO_CACHE1_STATUS1_RANOUT_TRUE              0x00000001 /* R---V */
#define NV_PFIFO_CACHE0_PUT                              0x00003010 /* RW-4R */
#define NV_PFIFO_CACHE0_PUT_ADDRESS                             2:2 /* RWXUF */
#define NV_PFIFO_CACHE1_PUT                              0x00003210 /* RW-4R */
#define NV_PFIFO_CACHE1_PUT_ADDRESS                             9:2 /* RWXUF */
#define NV_PFIFO_CACHE0_GET                              0x00003070 /* RW-4R */
#define NV_PFIFO_CACHE0_GET_ADDRESS                             2:2 /* RWXUF */
#define NV_PFIFO_CACHE1_GET                              0x00003270 /* RW-4R */
#define NV_PFIFO_CACHE1_GET_ADDRESS                             9:2 /* RWXUF */
#define NV_PFIFO_CACHE0_ENGINE                           0x00003080 /* RW-4R */
#define NV_PFIFO_CACHE0_ENGINE_0                                1:0 /* RWXUF */
#define NV_PFIFO_CACHE0_ENGINE_0_SW                      0x00000000 /* RW--V */
#define NV_PFIFO_CACHE0_ENGINE_0_GRAPHICS                0x00000001 /* RW--V */
#define NV_PFIFO_CACHE0_ENGINE_0_DVD                     0x00000002 /* RW--V */
#define NV_PFIFO_CACHE0_ENGINE_1                                5:4 /* RWXUF */
#define NV_PFIFO_CACHE0_ENGINE_1_SW                      0x00000000 /* RW--V */
#define NV_PFIFO_CACHE0_ENGINE_1_GRAPHICS                0x00000001 /* RW--V */
#define NV_PFIFO_CACHE0_ENGINE_1_DVD                     0x00000002 /* RW--V */
#define NV_PFIFO_CACHE0_ENGINE_2                                9:8 /* RWXUF */
#define NV_PFIFO_CACHE0_ENGINE_2_SW                      0x00000000 /* RW--V */
#define NV_PFIFO_CACHE0_ENGINE_2_GRAPHICS                0x00000001 /* RW--V */
#define NV_PFIFO_CACHE0_ENGINE_2_DVD                     0x00000002 /* RW--V */
#define NV_PFIFO_CACHE0_ENGINE_3                              13:12 /* RWXUF */
#define NV_PFIFO_CACHE0_ENGINE_3_SW                      0x00000000 /* RW--V */
#define NV_PFIFO_CACHE0_ENGINE_3_GRAPHICS                0x00000001 /* RW--V */
#define NV_PFIFO_CACHE0_ENGINE_3_DVD                     0x00000002 /* RW--V */
#define NV_PFIFO_CACHE0_ENGINE_4                              17:16 /* RWXUF */
#define NV_PFIFO_CACHE0_ENGINE_4_SW                      0x00000000 /* RW--V */
#define NV_PFIFO_CACHE0_ENGINE_4_GRAPHICS                0x00000001 /* RW--V */
#define NV_PFIFO_CACHE0_ENGINE_4_DVD                     0x00000002 /* RW--V */
#define NV_PFIFO_CACHE0_ENGINE_5                              21:20 /* RWXUF */
#define NV_PFIFO_CACHE0_ENGINE_5_SW                      0x00000000 /* RW--V */
#define NV_PFIFO_CACHE0_ENGINE_5_GRAPHICS                0x00000001 /* RW--V */
#define NV_PFIFO_CACHE0_ENGINE_5_DVD                     0x00000002 /* RW--V */
#define NV_PFIFO_CACHE0_ENGINE_6                              25:24 /* RWXUF */
#define NV_PFIFO_CACHE0_ENGINE_6_SW                      0x00000000 /* RW--V */
#define NV_PFIFO_CACHE0_ENGINE_6_GRAPHICS                0x00000001 /* RW--V */
#define NV_PFIFO_CACHE0_ENGINE_6_DVD                     0x00000002 /* RW--V */
#define NV_PFIFO_CACHE0_ENGINE_7                              29:28 /* RWXUF */
#define NV_PFIFO_CACHE0_ENGINE_7_SW                      0x00000000 /* RW--V */
#define NV_PFIFO_CACHE0_ENGINE_7_GRAPHICS                0x00000001 /* RW--V */
#define NV_PFIFO_CACHE0_ENGINE_7_DVD                     0x00000002 /* RW--V */
#define NV_PFIFO_CACHE1_ENGINE                           0x00003280 /* RW-4R */
#define NV_PFIFO_CACHE1_ENGINE_0                                1:0 /* RWXUF */
#define NV_PFIFO_CACHE1_ENGINE_0_SW                      0x00000000 /* RW--V */
#define NV_PFIFO_CACHE1_ENGINE_0_GRAPHICS                0x00000001 /* RW--V */
#define NV_PFIFO_CACHE1_ENGINE_0_DVD                     0x00000002 /* RW--V */
#define NV_PFIFO_CACHE1_ENGINE_1                                5:4 /* RWXUF */
#define NV_PFIFO_CACHE1_ENGINE_1_SW                      0x00000000 /* RW--V */
#define NV_PFIFO_CACHE1_ENGINE_1_GRAPHICS                0x00000001 /* RW--V */
#define NV_PFIFO_CACHE1_ENGINE_1_DVD                     0x00000002 /* RW--V */
#define NV_PFIFO_CACHE1_ENGINE_2                                9:8 /* RWXUF */
#define NV_PFIFO_CACHE1_ENGINE_2_SW                      0x00000000 /* RW--V */
#define NV_PFIFO_CACHE1_ENGINE_2_GRAPHICS                0x00000001 /* RW--V */
#define NV_PFIFO_CACHE1_ENGINE_2_DVD                     0x00000002 /* RW--V */
#define NV_PFIFO_CACHE1_ENGINE_3                              13:12 /* RWXUF */
#define NV_PFIFO_CACHE1_ENGINE_3_SW                      0x00000000 /* RW--V */
#define NV_PFIFO_CACHE1_ENGINE_3_GRAPHICS                0x00000001 /* RW--V */
#define NV_PFIFO_CACHE1_ENGINE_3_DVD                     0x00000002 /* RW--V */
#define NV_PFIFO_CACHE1_ENGINE_4                              17:16 /* RWXUF */
#define NV_PFIFO_CACHE1_ENGINE_4_SW                      0x00000000 /* RW--V */
#define NV_PFIFO_CACHE1_ENGINE_4_GRAPHICS                0x00000001 /* RW--V */
#define NV_PFIFO_CACHE1_ENGINE_4_DVD                     0x00000002 /* RW--V */
#define NV_PFIFO_CACHE1_ENGINE_5                              21:20 /* RWXUF */
#define NV_PFIFO_CACHE1_ENGINE_5_SW                      0x00000000 /* RW--V */
#define NV_PFIFO_CACHE1_ENGINE_5_GRAPHICS                0x00000001 /* RW--V */
#define NV_PFIFO_CACHE1_ENGINE_5_DVD                     0x00000002 /* RW--V */
#define NV_PFIFO_CACHE1_ENGINE_6                              25:24 /* RWXUF */
#define NV_PFIFO_CACHE1_ENGINE_6_SW                      0x00000000 /* RW--V */
#define NV_PFIFO_CACHE1_ENGINE_6_GRAPHICS                0x00000001 /* RW--V */
#define NV_PFIFO_CACHE1_ENGINE_6_DVD                     0x00000002 /* RW--V */
#define NV_PFIFO_CACHE1_ENGINE_7                              29:28 /* RWXUF */
#define NV_PFIFO_CACHE1_ENGINE_7_SW                      0x00000000 /* RW--V */
#define NV_PFIFO_CACHE1_ENGINE_7_GRAPHICS                0x00000001 /* RW--V */
#define NV_PFIFO_CACHE1_ENGINE_7_DVD                     0x00000002 /* RW--V */
#define NV_PFIFO_CACHE0_METHOD(i)                (0x00003100+(i)*8) /* RW-4A */
#define NV_PFIFO_CACHE0_METHOD__SIZE_1                            1 /*       */
#define NV_PFIFO_CACHE0_METHOD_ADDRESS                         12:2 /* RWXUF */
#define NV_PFIFO_CACHE0_METHOD_SUBCHANNEL                     15:13 /* RWXUF */
#define NV_PFIFO_CACHE1_METHOD(i)                (0x00003800+(i)*8) /* RW-4A */
#define NV_PFIFO_CACHE1_METHOD__SIZE_1                          128 /*       */
#define NV_PFIFO_CACHE1_METHOD_TYPE                             0:0 /* RWXUF */
#define NV_PFIFO_CACHE1_METHOD_ADDRESS                         12:2 /* RWXUF */
#define NV_PFIFO_CACHE1_METHOD_SUBCHANNEL                     15:13 /* RWXUF */
#define NV_PFIFO_CACHE1_METHOD_ALIAS(i)          (0x00003C00+(i)*8) /* RW-4A */
#define NV_PFIFO_CACHE1_METHOD_ALIAS__SIZE_1                    128 /*       */
#define NV_PFIFO_CACHE0_DATA(i)                  (0x00003104+(i)*8) /* RW-4A */
#define NV_PFIFO_CACHE0_DATA__SIZE_1                              1 /*       */
#define NV_PFIFO_CACHE0_DATA_VALUE                             31:0 /* RWXVF */
#define NV_PFIFO_CACHE1_DATA(i)                  (0x00003804+(i)*8) /* RW-4A */
#define NV_PFIFO_CACHE1_DATA__SIZE_1                            128 /*       */
#define NV_PFIFO_CACHE1_DATA_VALUE                             31:0 /* RWXVF */
#define NV_PFIFO_CACHE1_DATA_ALIAS(i)            (0x00003C04+(i)*8) /* RW-4A */
#define NV_PFIFO_CACHE1_DATA_ALIAS__SIZE_1                      128 /*       */
/* dev_graphics.ref */
#define NV_PGRAPH                             0x00401FFF:0x00400000 /* RW--D */
#define NV_PGRAPH_INTR                                   0x00400100 /* RW-4R */
#define NV_PGRAPH_INTR_NOTIFY                                   0:0 /* RWIVF */
#define NV_PGRAPH_INTR_NOTIFY_NOT_PENDING                0x00000000 /* R-I-V */
#define NV_PGRAPH_INTR_NOTIFY_PENDING                    0x00000001 /* R---V */
#define NV_PGRAPH_INTR_NOTIFY_RESET                      0x00000001 /* -W--C */
#define NV_PGRAPH_INTR_MISSING_HW                               4:4 /* RWIVF */
#define NV_PGRAPH_INTR_MISSING_HW_NOT_PENDING            0x00000000 /* R-I-V */
#define NV_PGRAPH_INTR_MISSING_HW_PENDING                0x00000001 /* R---V */
#define NV_PGRAPH_INTR_MISSING_HW_RESET                  0x00000001 /* -W--C */
/*  bits [7:6] are nv20 only */
#define NV_PGRAPH_INTR_TLB_PRESENT_DMA_R                        6:6 /* RWIVF */
#define NV_PGRAPH_INTR_TLB_PRESENT_DMA_R_NOT_PENDING     0x00000000 /* R-I-V */
#define NV_PGRAPH_INTR_TLB_PRESENT_DMA_R_PENDING         0x00000001 /* R---V */
#define NV_PGRAPH_INTR_TLB_PRESENT_DMA_R_RESET           0x00000001 /* -W--C */
#define NV_PGRAPH_INTR_TLB_PRESENT_DMA_W                        7:7 /* RWIVF */
#define NV_PGRAPH_INTR_TLB_PRESENT_DMA_W_NOT_PENDING     0x00000000 /* R-I-V */
#define NV_PGRAPH_INTR_TLB_PRESENT_DMA_W_PENDING         0x00000001 /* R---V */
#define NV_PGRAPH_INTR_TLB_PRESENT_DMA_W_RESET           0x00000001 /* -W--C */
/*  TEX_{A,B} are nv20 only */
#define NV_PGRAPH_INTR_TLB_PRESENT_A                            8:8 /* RWIVF */
#define NV_PGRAPH_INTR_TLB_PRESENT_A_NOT_PENDING         0x00000000 /* R-I-V */
#define NV_PGRAPH_INTR_TLB_PRESENT_A_PENDING             0x00000001 /* R---V */
#define NV_PGRAPH_INTR_TLB_PRESENT_A_RESET               0x00000001 /* -W--C */
#define NV_PGRAPH_INTR_TLB_PRESENT_TEX_A                        8:8 /* RWIVF */
#define NV_PGRAPH_INTR_TLB_PRESENT_TEX_A_NOT_PENDING     0x00000000 /* R-I-V */
#define NV_PGRAPH_INTR_TLB_PRESENT_TEX_A_PENDING         0x00000001 /* R---V */
#define NV_PGRAPH_INTR_TLB_PRESENT_TEX_A_RESET           0x00000001 /* -W--C */
#define NV_PGRAPH_INTR_TLB_PRESENT_B                            9:9 /* RWIVF */
#define NV_PGRAPH_INTR_TLB_PRESENT_B_NOT_PENDING         0x00000000 /* R-I-V */
#define NV_PGRAPH_INTR_TLB_PRESENT_B_PENDING             0x00000001 /* R---V */
#define NV_PGRAPH_INTR_TLB_PRESENT_B_RESET               0x00000001 /* -W--C */
#define NV_PGRAPH_INTR_TLB_PRESENT_TEX_B                        9:9 /* RWIVF */
#define NV_PGRAPH_INTR_TLB_PRESENT_TEX_B_NOT_PENDING     0x00000000 /* R-I-V */
#define NV_PGRAPH_INTR_TLB_PRESENT_TEX_B_PENDING         0x00000001 /* R---V */
#define NV_PGRAPH_INTR_TLB_PRESENT_TEX_B_RESET           0x00000001 /* -W--C */
#define NV_PGRAPH_INTR_TLB_PRESENT_VTX                        10:10 /* RWIVF */
#define NV_PGRAPH_INTR_TLB_PRESENT_VTX_NOT_PENDING       0x00000000 /* R-I-V */
#define NV_PGRAPH_INTR_TLB_PRESENT_VTX_PENDING           0x00000001 /* R---V */
#define NV_PGRAPH_INTR_TLB_PRESENT_VTX_RESET             0x00000001 /* -W--C */
#define NV_PGRAPH_INTR_CONTEXT_SWITCH                         12:12 /* RWIVF */
#define NV_PGRAPH_INTR_CONTEXT_SWITCH_NOT_PENDING        0x00000000 /* R-I-V */
#define NV_PGRAPH_INTR_CONTEXT_SWITCH_PENDING            0x00000001 /* R---V */
#define NV_PGRAPH_INTR_CONTEXT_SWITCH_RESET              0x00000001 /* -W--C */
#define NV_PGRAPH_INTR_STATE3D                                13:13 /* RWIVF */
#define NV_PGRAPH_INTR_STATE3D_NOT_PENDING               0x00000000 /* R-I-V */
#define NV_PGRAPH_INTR_STATE3D_PENDING                   0x00000001 /* R---V */
#define NV_PGRAPH_INTR_STATE3D_RESET                     0x00000001 /* -W--C */
#define NV_PGRAPH_INTR_BUFFER_NOTIFY                          16:16 /* RWIVF */
#define NV_PGRAPH_INTR_BUFFER_NOTIFY_NOT_PENDING         0x00000000 /* R-I-V */
#define NV_PGRAPH_INTR_BUFFER_NOTIFY_PENDING             0x00000001 /* R---V */
#define NV_PGRAPH_INTR_BUFFER_NOTIFY_RESET               0x00000001 /* -W--C */
#define NV_PGRAPH_INTR_ERROR                                  20:20 /* RWIVF */
#define NV_PGRAPH_INTR_ERROR_NOT_PENDING                 0x00000000 /* R-I-V */
#define NV_PGRAPH_INTR_ERROR_PENDING                     0x00000001 /* R---V */
#define NV_PGRAPH_INTR_ERROR_RESET                       0x00000001 /* -W--C */
#define NV_PGRAPH_INTR_SINGLE_STEP                            24:24 /* RWIVF */
#define NV_PGRAPH_INTR_SINGLE_STEP_NOT_PENDING           0x00000000 /* R-I-V */
#define NV_PGRAPH_INTR_SINGLE_STEP_PENDING               0x00000001 /* R---V */
#define NV_PGRAPH_INTR_SINGLE_STEP_RESET                 0x00000001 /* -W--C */
#define NV_PGRAPH_NSOURCE                                0x00400108 /* R--4R */
#define NV_PGRAPH_NSOURCE_NOTIFICATION                          0:0 /* R-IVF */
#define NV_PGRAPH_NSOURCE_NOTIFICATION_NOT_PENDING       0x00000000 /* R-I-V */
#define NV_PGRAPH_NSOURCE_NOTIFICATION_PENDING           0x00000001 /* R---V */
#define NV_PGRAPH_NSOURCE_DATA_ERROR                            1:1 /* R-IVF */
#define NV_PGRAPH_NSOURCE_DATA_ERROR_NOT_PENDING         0x00000000 /* R-I-V */
#define NV_PGRAPH_NSOURCE_DATA_ERROR_PENDING             0x00000001 /* R---V */
#define NV_PGRAPH_NSOURCE_PROTECTION_ERROR                      2:2 /* R-IVF */
#define NV_PGRAPH_NSOURCE_PROTECTION_ERROR_NOT_PENDING   0x00000000 /* R-I-V */
#define NV_PGRAPH_NSOURCE_PROTECTION_ERROR_PENDING       0x00000001 /* R---V */
#define NV_PGRAPH_NSOURCE_RANGE_EXCEPTION                       3:3 /* R-IVF */
#define NV_PGRAPH_NSOURCE_RANGE_EXCEPTION_NOT_PENDING    0x00000000 /* R-I-V */
#define NV_PGRAPH_NSOURCE_RANGE_EXCEPTION_PENDING        0x00000001 /* R---V */
#define NV_PGRAPH_NSOURCE_LIMIT_COLOR                           4:4 /* R-IVF */
#define NV_PGRAPH_NSOURCE_LIMIT_COLOR_NOT_PENDING        0x00000000 /* R-I-V */
#define NV_PGRAPH_NSOURCE_LIMIT_COLOR_PENDING            0x00000001 /* R---V */
#define NV_PGRAPH_NSOURCE_LIMIT_ZETA                            5:5 /* R-IVF */
#define NV_PGRAPH_NSOURCE_LIMIT_ZETA_NOT_PENDING         0x00000000 /* R-I-V */
#define NV_PGRAPH_NSOURCE_LIMIT_ZETA_PENDING             0x00000001 /* R---V */
#define NV_PGRAPH_NSOURCE_ILLEGAL_MTHD                          6:6 /* R-IVF */
#define NV_PGRAPH_NSOURCE_ILLEGAL_MTHD_NOT_PENDING       0x00000000 /* R-I-V */
#define NV_PGRAPH_NSOURCE_ILLEGAL_MTHD_PENDING           0x00000001 /* R---V */
#define NV_PGRAPH_NSOURCE_DMA_R_PROTECTION                      7:7 /* R-IVF */
#define NV_PGRAPH_NSOURCE_DMA_R_PROTECTION_NOT_PENDING   0x00000000 /* R-I-V */
#define NV_PGRAPH_NSOURCE_DMA_R_PROTECTION_PENDING       0x00000001 /* R---V */
#define NV_PGRAPH_NSOURCE_DMA_W_PROTECTION                      8:8 /* R-IVF */
#define NV_PGRAPH_NSOURCE_DMA_W_PROTECTION_NOT_PENDING   0x00000000 /* R-I-V */
#define NV_PGRAPH_NSOURCE_DMA_W_PROTECTION_PENDING       0x00000001 /* R---V */
#define NV_PGRAPH_NSOURCE_FORMAT_EXCEPTION                      9:9 /* R-IVF */
#define NV_PGRAPH_NSOURCE_FORMAT_EXCEPTION_NOT_PENDING   0x00000000 /* R-I-V */
#define NV_PGRAPH_NSOURCE_FORMAT_EXCEPTION_PENDING       0x00000001 /* R---V */
#define NV_PGRAPH_NSOURCE_PATCH_EXCEPTION                     10:10 /* R-IVF */
#define NV_PGRAPH_NSOURCE_PATCH_EXCEPTION_NOT_PENDING    0x00000000 /* R-I-V */
#define NV_PGRAPH_NSOURCE_PATCH_EXCEPTION_PENDING        0x00000001 /* R---V */
#define NV_PGRAPH_NSOURCE_STATE_INVALID                       11:11 /* R-IVF */
#define NV_PGRAPH_NSOURCE_STATE_INVALID_NOT_PENDING      0x00000000 /* R-I-V */
#define NV_PGRAPH_NSOURCE_STATE_INVALID_PENDING          0x00000001 /* R---V */
#define NV_PGRAPH_NSOURCE_DOUBLE_NOTIFY                       12:12 /* R-IVF */
#define NV_PGRAPH_NSOURCE_DOUBLE_NOTIFY_NOT_PENDING      0x00000000 /* R-I-V */
#define NV_PGRAPH_NSOURCE_DOUBLE_NOTIFY_PENDING          0x00000001 /* R---V */
#define NV_PGRAPH_NSOURCE_NOTIFY_IN_USE                       13:13 /* R-IVF */
#define NV_PGRAPH_NSOURCE_NOTIFY_IN_USE_NOT_PENDING      0x00000000 /* R-I-V */
#define NV_PGRAPH_NSOURCE_NOTIFY_IN_USE_PENDING          0x00000001 /* R---V */
#define NV_PGRAPH_NSOURCE_METHOD_CNT                          14:14 /* R-IVF */
#define NV_PGRAPH_NSOURCE_METHOD_CNT_NOT_PENDING         0x00000000 /* R-I-V */
#define NV_PGRAPH_NSOURCE_METHOD_CNT_PENDING             0x00000001 /* R---V */
#define NV_PGRAPH_NSOURCE_BFR_NOTIFICATION                    15:15 /* R-IVF */
#define NV_PGRAPH_NSOURCE_BFR_NOTIFICATION_NOT_PENDING   0x00000000 /* R-I-V */
#define NV_PGRAPH_NSOURCE_BFR_NOTIFICATION_PENDING       0x00000001 /* R---V */
#define NV_PGRAPH_NSOURCE_DMA_VTX_PROTECTION                  16:16 /* R-IVF */
#define NV_PGRAPH_NSOURCE_DMA_VTX_PROTECTION_NOT_PENDING 0x00000000 /* R-I-V */
#define NV_PGRAPH_NSOURCE_DMA_VTX_PROTECTION_PENDING     0x00000001 /* R---V */
/*  NV_PGRAPH_NSOURCE_DMA_WIDTH_A is nv4/nv10 only */
#define NV_PGRAPH_NSOURCE_DMA_WIDTH_A                         17:17 /* R-IVF */
#define NV_PGRAPH_NSOURCE_DMA_WIDTH_A_NOT_PENDING        0x00000000 /* R-I-V */
#define NV_PGRAPH_NSOURCE_DMA_WIDTH_A_PENDING            0x00000001 /* R---V */
/*  NV_PGRAPH_NSOURCE_IDX_INLINE_REUSE is nv20-only */
#define NV_PGRAPH_NSOURCE_IDX_INLINE_REUSE                    17:17 /* R-IVF */
#define NV_PGRAPH_NSOURCE_IDX_INLINE_REUSE_NOT_PENDING   0x00000000 /* R-I-V */
#define NV_PGRAPH_NSOURCE_IDX_INLINE_REUSE_PENDING       0x00000001 /* R---V */
/*  NV_PGRAPH_NSOURCE_DMA_WIDTH_B is nv4/nv10 only */
#define NV_PGRAPH_NSOURCE_DMA_WIDTH_B                         18:18 /* R-IVF */
#define NV_PGRAPH_NSOURCE_DMA_WIDTH_B_NOT_PENDING        0x00000000 /* R-I-V */
#define NV_PGRAPH_NSOURCE_DMA_WIDTH_B_PENDING            0x00000001 /* R---V */
/*  NV_PGRAPH_NSOURCE_INVALID_OPERATION is nv20-only */
#define NV_PGRAPH_NSOURCE_INVALID_OPERATION                   18:18 /* R-IVF */
#define NV_PGRAPH_NSOURCE_INVALID_OPERATION_NOT_PENDING  0x00000000 /* R-I-V */
#define NV_PGRAPH_NSOURCE_INVALID_OPERATION_PENDING      0x00000001 /* R---V */
/*  NV_PGRAPH_NSOURCE_FD_INVALID is nv20-only */
#define NV_PGRAPH_NSOURCE_FD_INVALID_OP                       19:19 /* R-IVF */
#define NV_PGRAPH_NSOURCE_FD_INVALID_OP_NOT_PENDING      0x00000000 /* R-I-V */
#define NV_PGRAPH_NSOURCE_FD_INVALID_OP_PENDING          0x00000001 /* R---V */
/*  NV_PGRAPH_NSOURCE_INVALID_OPERATION is nv20-only */
#define NV_PGRAPH_NSOURCE_FD_ERROR_CODE                       21:20 /* R-IVF */
#define NV_PGRAPH_NSOURCE_FD_ERROR_CODE_0                0x00000000 /* R-I-V */
#define NV_PGRAPH_NSOURCE_FD_ERROR_CODE_1                0x00000001 /* R---V */
#define NV_PGRAPH_NSOURCE_FD_ERROR_CODE_2                0x00000002 /* R---V */
#define NV_PGRAPH_NSOURCE_FD_ERROR_CODE_3                0x00000003 /* R---V */
/*  NV_PGRAPH_NSOURCE_TEX_A_PROTECTION is nv20-only */
#define NV_PGRAPH_NSOURCE_TEX_A_PROTECTION                    22:22 /* R-IVF */
#define NV_PGRAPH_NSOURCE_TEX_A_PROTECTION_NOT_PENDING   0x00000000 /* R-I-V */
#define NV_PGRAPH_NSOURCE_TEX_A_PROTECTION_PENDING       0x00000001 /* R---V */
/*  NV_PGRAPH_NSOURCE_TEX_B_PROTECTION is nv20-only */
#define NV_PGRAPH_NSOURCE_TEX_B_PROTECTION                    23:23 /* R-IVF */
#define NV_PGRAPH_NSOURCE_TEX_B_PROTECTION_NOT_PENDING   0x00000000 /* R-I-V */
#define NV_PGRAPH_NSOURCE_TEX_B_PROTECTION_PENDING       0x00000001 /* R---V */
#define NV_PGRAPH_INTR_EN                                0x00400140 /* RW-4R */
#define NV_PGRAPH_INTR_EN_NOTIFY                                0:0 /* RWIVF */
#define NV_PGRAPH_INTR_EN_NOTIFY_DISABLED                0x00000000 /* RWI-V */
#define NV_PGRAPH_INTR_EN_NOTIFY_ENABLED                 0x00000001 /* RW--V */
#define NV_PGRAPH_INTR_EN_MISSING_HW                            4:4 /* RWIVF */
#define NV_PGRAPH_INTR_EN_MISSING_HW_DISABLED            0x00000000 /* RWI-V */
#define NV_PGRAPH_INTR_EN_MISSING_HW_ENABLED             0x00000001 /* RW--V */
#define NV_PGRAPH_INTR_EN_TLB_PRESENT_DMA_R                     6:6 /* RWIVF */
#define NV_PGRAPH_INTR_EN_TLB_PRESENT_DMA_R_DISABLED     0x00000000 /* RWI-V */
#define NV_PGRAPH_INTR_EN_TLB_PRESENT_DMA_R_ENABLED      0x00000001 /* RW--V */
#define NV_PGRAPH_INTR_EN_TLB_PRESENT_DMA_W                     7:7 /* RWIVF */
#define NV_PGRAPH_INTR_EN_TLB_PRESENT_DMA_W_DISABLED     0x00000000 /* RWI-V */
#define NV_PGRAPH_INTR_EN_TLB_PRESENT_DMA_W_ENABLED      0x00000001 /* RW--V */
#define NV_PGRAPH_INTR_EN_TLB_PRESENT_A                         8:8 /* RWIVF */
#define NV_PGRAPH_INTR_EN_TLB_PRESENT_A_DISABLED         0x00000000 /* RWI-V */
#define NV_PGRAPH_INTR_EN_TLB_PRESENT_A_ENABLED          0x00000001 /* RW--V */
#define NV_PGRAPH_INTR_EN_TLB_PRESENT_TEX_A                     8:8 /* RWIVF */
#define NV_PGRAPH_INTR_EN_TLB_PRESENT_TEX_A_DISABLED     0x00000000 /* RWI-V */
#define NV_PGRAPH_INTR_EN_TLB_PRESENT_TEX_A_ENABLED      0x00000001 /* RW--V */
#define NV_PGRAPH_INTR_EN_TLB_PRESENT_B                         9:9 /* RWIVF */
#define NV_PGRAPH_INTR_EN_TLB_PRESENT_B_DISABLED         0x00000000 /* RWI-V */
#define NV_PGRAPH_INTR_EN_TLB_PRESENT_B_ENABLED          0x00000001 /* RW--V */
#define NV_PGRAPH_INTR_EN_TLB_PRESENT_TEX_B                     9:9 /* RWIVF */
#define NV_PGRAPH_INTR_EN_TLB_PRESENT_TEX_B_DISABLED     0x00000000 /* RWI-V */
#define NV_PGRAPH_INTR_EN_TLB_PRESENT_TEX_B_ENABLED      0x00000001 /* RW--V */
#define NV_PGRAPH_INTR_EN_TLB_PRESENT_VTX                     10:10 /* RWIVF */
#define NV_PGRAPH_INTR_EN_TLB_PRESENT_VTX_DISABLED       0x00000000 /* RWI-V */
#define NV_PGRAPH_INTR_EN_TLB_PRESENT_VTX_ENABLED        0x00000001 /* RW--V */
#define NV_PGRAPH_INTR_EN_CONTEXT_SWITCH                      12:12 /* RWIVF */
#define NV_PGRAPH_INTR_EN_CONTEXT_SWITCH_DISABLED        0x00000000 /* RWI-V */
#define NV_PGRAPH_INTR_EN_CONTEXT_SWITCH_ENABLED         0x00000001 /* RW--V */
#define NV_PGRAPH_INTR_EN_STATE3D                             13:13 /* RWIVF */
#define NV_PGRAPH_INTR_EN_STATE3D_DISABLED               0x00000000 /* RWI-V */
#define NV_PGRAPH_INTR_EN_STATE3D_ENABLED                0x00000001 /* RW--V */
#define NV_PGRAPH_INTR_EN_BUFFER_NOTIFY                       16:16 /* RWIVF */
#define NV_PGRAPH_INTR_EN_BUFFER_NOTIFY_DISABLED         0x00000000 /* RWI-V */
#define NV_PGRAPH_INTR_EN_BUFFER_NOTIFY_ENABLED          0x00000001 /* RW--V */
#define NV_PGRAPH_INTR_EN_ERROR                               20:20 /* RWIVF */
#define NV_PGRAPH_INTR_EN_ERROR_DISABLED                 0x00000000 /* RWI-V */
#define NV_PGRAPH_INTR_EN_ERROR_ENABLED                  0x00000001 /* RW--V */
#define NV_PGRAPH_INTR_EN_SINGLE_STEP                         24:24 /* RWIVF */
#define NV_PGRAPH_INTR_EN_SINGLE_STEP_DISABLED           0x00000000 /* RWI-V */
#define NV_PGRAPH_INTR_EN_SINGLE_STEP_ENABLED            0x00000001 /* RW--V */
/*  NV_PGRAPH_CTX_SWITCH1 needs to be available for nv4 gr object validation */
#define NV_PGRAPH_CTX_SWITCH1_GRCLASS                           7:0 /* RWXVF */
#define NV_PGRAPH_CTX_SWITCH1_CHROMA_KEY                      12:12 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH1_CHROMA_KEY_DISABLE         0x00000000 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_CHROMA_KEY_ENABLE          0x00000001 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_USER_CLIP                       13:13 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH1_USER_CLIP_DISABLE          0x00000000 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_USER_CLIP_ENABLE           0x00000001 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_SWIZZLE                         14:14 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH1_SWIZZLE_DISABLE            0x00000000 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_SWIZZLE_ENABLE             0x00000001 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_PATCH_CONFIG                    17:15 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH1_PATCH_CONFIG_SRCCOPY_AND   0x00000000 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_PATCH_CONFIG_ROP_AND       0x00000001 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_PATCH_CONFIG_BLEND_AND     0x00000002 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_PATCH_CONFIG_SRCCOPY       0x00000003 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_PATCH_CONFIG_SRCCOPY_PRE   0x00000004 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_PATCH_CONFIG_BLEND_PRE     0x00000005 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_SYNCHRONIZE                     18:18 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH1_SYNCHRONIZE_DISABLE        0x00000000 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_SYNCHRONIZE_ENABLE         0x00000001 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_ENDIAN_MODE                     19:19 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH1_ENDIAN_MODE_LITTLE         0x00000000 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_ENDIAN_MODE_BIG            0x00000001 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_DITHER_MODE                     21:20 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH1_DITHER_MODE_COMPATIBILITY  0x00000000 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_DITHER_MODE_DITHER         0x00000001 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_DITHER_MODE_TRUNCATE       0x00000002 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_DITHER_MODE_MS             0x00000003 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_CLASS_TYPE                      22:22 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH1_CLASS_TYPE_COMPATIBILITY   0x00000000 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_CLASS_TYPE_PERFORMANCE     0x00000001 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_SINGLE_STEP                     23:23 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH1_SINGLE_STEP_DISABLED       0x00000000 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_SINGLE_STEP_ENABLED        0x00000001 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_PATCH_STATUS                    24:24 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH1_PATCH_STATUS_INVALID       0x00000000 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_PATCH_STATUS_VALID         0x00000001 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_CONTEXT_SURFACE                 25:25 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH1_CONTEXT_SURFACE_INVALID    0x00000000 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_CONTEXT_SURFACE_VALID      0x00000001 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_CONTEXT_SURFACE0                25:25 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH1_CONTEXT_SURFACE0_INVALID   0x00000000 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_CONTEXT_SURFACE0_VALID     0x00000001 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_CONTEXT_SURFACE1                26:26 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH1_CONTEXT_SURFACE1_INVALID   0x00000000 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_CONTEXT_SURFACE1_VALID     0x00000001 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_CONTEXT_PATTERN                 27:27 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH1_CONTEXT_PATTERN_INVALID    0x00000000 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_CONTEXT_PATTERN_VALID      0x00000001 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_CONTEXT_ROP                     28:28 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH1_CONTEXT_ROP_INVALID        0x00000000 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_CONTEXT_ROP_VALID          0x00000001 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_CONTEXT_BETA1                   29:29 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH1_CONTEXT_BETA1_INVALID      0x00000000 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_CONTEXT_BETA1_VALID        0x00000001 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_CONTEXT_BETA4                   30:30 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH1_CONTEXT_BETA4_INVALID      0x00000000 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_CONTEXT_BETA4_VALID        0x00000001 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_VOLATILE_RESET                  31:31 /* CWIVF */
#define NV_PGRAPH_CTX_SWITCH1_VOLATILE_RESET_IGNORE      0x00000000 /* CWI-V */
#define NV_PGRAPH_CTX_SWITCH1_VOLATILE_RESET_ENABLED     0x00000001 /* -W--T */
/*  NV_PGRAPH_STATUS needed for GR_IDLE()/GR_DONE() macros */
#define NV_PGRAPH_STATUS                                 0x00400700 /* R--4R */
/*  NV_PGRAPH_INCREMENT is needed by NV15_VIDEO_LUT_CURSOR_DAC class */
/*   this needs to be moved back to nv10_ref.h as soon as we HALify the dac */
#define NV_PGRAPH_INCREMENT                              0x0040071C /* RW-4R */
#define NV_PGRAPH_INCREMENT_READ_BLIT                           0:0 /* CWIVF */
#define NV_PGRAPH_INCREMENT_READ_BLIT_IGNORE             0x00000000 /* CWI-V */
#define NV_PGRAPH_INCREMENT_READ_BLIT_TRIGGER            0x00000001 /* -W--T */
#define NV_PGRAPH_INCREMENT_READ_3D                             1:1 /* CWIVF */
#define NV_PGRAPH_INCREMENT_READ_3D_IGNORE               0x00000000 /* CWI-V */
#define NV_PGRAPH_INCREMENT_READ_3D_TRIGGER              0x00000001 /* -W--T */
#define NV_PGRAPH_FIFO                                   0x00400720 /* RW-4R */
#define NV_PGRAPH_FIFO_ACCESS                                   0:0 /* RWIVF */
#define NV_PGRAPH_FIFO_ACCESS_DISABLED                   0x00000000 /* RW--V */
#define NV_PGRAPH_FIFO_ACCESS_ENABLED                    0x00000001 /* RWI-V */
/* dev_vga.ref */
#define NV_PRMCIO                             0x00601FFF:0x00601000 /* RW--D */
#define NV_PRMCIO_INP0                                   0x006013c2 /* R--1R */
#define NV_PRMCIO_INP0__MONO                             0x006013ba /* R--1R */
#define NV_PRMCIO_INP0__COLOR                            0x006013da /* R--1R */
#define NV_PRMCIO_INP0__READ_MONO                        0x006013ca /* R--1R */
#define NV_PRMCIO_INP0__WRITE_MONO                       0x006013ba /* -W-1R */
#define NV_PRMCIO_INP0__WRITE_COLOR                      0x006013da /* -W-1R */
#define NV_PRMCIO_ARX                                    0x006013c0 /* RW-1R */
#define NV_PRMCIO_AR_PALETTE__WRITE                      0x006013c0 /* -W-1R */
#define NV_PRMCIO_AR_PALETTE__READ                       0x006013c1 /* R--1R */
#define NV_PRMCIO_AR_MODE__WRITE                         0x006013c0 /* -W-1R */
#define NV_PRMCIO_AR_MODE__READ                          0x006013c1 /* R--1R */
#define NV_PRMCIO_AR_MODE_INDEX                          0x00000010 /*       */
#define NV_PRMCIO_AR_OSCAN__WRITE                        0x006013c0 /* -W-1R */
#define NV_PRMCIO_AR_OSCAN__READ                         0x006013c1 /* R--1R */
#define NV_PRMCIO_AR_OSCAN_INDEX                         0x00000011 /*       */
#define NV_PRMCIO_AR_PLANE__WRITE                        0x006013c0 /* -W-1R */
#define NV_PRMCIO_AR_PLANE__READ                         0x006013c1 /* R--1R */
#define NV_PRMCIO_AR_PLANE_INDEX                         0x00000012 /*       */
#define NV_PRMCIO_AR_HPP__WRITE                          0x006013c0 /* -W-1R */
#define NV_PRMCIO_AR_HPP__READ                           0x006013c1 /* R--1R */
#define NV_PRMCIO_AR_HPP_INDEX                           0x00000013 /*       */
#define NV_PRMCIO_AR_CSEL__WRITE                         0x006013c0 /* -W-1R */
#define NV_PRMCIO_AR_CSEL__READ                          0x006013c1 /* R--1R */
#define NV_PRMCIO_AR_CSEL_INDEX                          0x00000014 /*       */
#define NV_PRMCIO_CRX__MONO                              0x006013b4 /* RW-1R */
#define NV_PRMCIO_CRX__COLOR                             0x006013d4 /* RW-1R */
#define NV_PRMCIO_CR__MONO                               0x006013b5 /* RW-1R */
#define NV_PRMCIO_CR__COLOR                              0x006013d5 /* RW-1R */
#define NV_PRMCIO_CRE__MONO                              0x006013b5 /* RW-1R */
#define NV_PRMCIO_CRE__COLOR                             0x006013d5 /* RW-1R */
/* dev_vga.ref */
#define NV_PCRTC_INTR_0                                  0x00600100 /* RWI4R */
#define NV_PCRTC_INTR_0_VBLANK                                  0:0 /* RWI-F */
#define NV_PCRTC_INTR_0_VBLANK_NOT_PENDING               0x00000000 /* R-I-V */
#define NV_PCRTC_INTR_0_VBLANK_PENDING                   0x00000001 /* R---V */
#define NV_PCRTC_INTR_0_VBLANK_RESET                     0x00000001 /* -W--V */
#define NV_PCRTC_INTR_EN_0                               0x00600140 /* RWI4R */
#define NV_PCRTC_INTR_EN_0_VBLANK                               0:0 /* RWIVF */
#define NV_PCRTC_INTR_EN_0_VBLANK_DISABLED               0x00000000 /* RWI-V */
#define NV_PCRTC_INTR_EN_0_VBLANK_ENABLED                0x00000001 /* RW--V */
#define NV_PCRTC_START                                   0x00600800 /* RWI4R */
/*  use the larger nv10 define (nv4 should just read/write 0's) */
#define NV_PCRTC_START_ADDRESS                                 26:2 /* RWI-F */
#define NV_PCRTC_CONFIG                                  0x00600804 /* RWI4R */
/*  use the larger nv10 define (nv4 should just read/write 0's) */
#define NV_PCRTC_CONFIG_START_ADDRESS                           2:0 /* RWI-F */
#define NV_PCRTC_CONFIG_START_ADDRESS_VGA                0x00000000 /* RWI-V */
#define NV_PCRTC_CONFIG_START_ADDRESS_NON_VGA            0x00000001 /* RW--V */
#define NV_PCRTC_CONFIG_START_ADDRESS_HSYNC_NV10         0x00000002 /* RW--V */
#define NV_PCRTC_CONFIG_START_ADDRESS_HSYNC_NV5          0x00000004 /* RW--V */
#define NV_PCRTC_CONFIG_ENDIAN                                31:31 /* RWI-F */
#define NV_PCRTC_CONFIG_ENDIAN_LITTLE                    0x00000000 /* RWI-V */
#define NV_PCRTC_CONFIG_ENDIAN_BIG                       0x00000001 /* RWI-V */
#define NV_PCRTC_RASTER                                  0x00600808 /* R-I4R */
#define NV_PCRTC_RASTER_POSITION                               10:0 /* R---F */
#define NV_PCRTC_RASTER_SA_LOAD                               13:12 /* R---F */
#define NV_PCRTC_RASTER_SA_LOAD_DISPLAY                  0x00000000 /* R---V */
#define NV_PCRTC_RASTER_SA_LOAD_BEFORE                   0x00000001 /* R---V */
#define NV_PCRTC_RASTER_SA_LOAD_AFTER                    0x00000002 /* R---V */
#define NV_PCRTC_RASTER_VERT_BLANK                            16:16 /* R---F */
#define NV_PCRTC_RASTER_VERT_BLANK_ACTIVE                0x00000001 /* R---V */
#define NV_PCRTC_RASTER_VERT_BLANK_INACTIVE              0x00000000 /* R---V */
#define NV_PCRTC_RASTER_FIELD                                 20:20 /* R---F */
#define NV_PCRTC_RASTER_FIELD_EVEN                       0x00000000 /* R---V */
#define NV_PCRTC_RASTER_FIELD_ODD                        0x00000001 /* R---V */
#define NV_PCRTC_RASTER_STEREO                                24:24 /* R---F */
#define NV_PCRTC_RASTER_STEREO_LEFT                      0x00000000 /* R---V */
#define NV_PCRTC_RASTER_STEREO_RIGHT                     0x00000001 /* R---V */
#define NV_PCRTC_RASTER_START                            0x00600830 /* RWI4R */
#define NV_PCRTC_RASTER_START_VAL                              15:0 /* RW--F */
#define NV_PCRTC_RASTER_START_POL                             31:31 /* RW--F */
#define NV_PCRTC_RASTER_START_POL_IN_RANGE               0x00000000 /* RWI-V */
#define NV_PCRTC_RASTER_START_POL_OUT_RANGE              0x00000001 /* RW--V */
 /* nv11-only */
#define NV_PCRTC_GPIO_EXT                                0x0060081C /* RWI4R */
#define NV_PCRTC_GPIO_EXT_2_OUTPUT                              0:0 /* RWI-F */
#define NV_PCRTC_GPIO_EXT_2_OUTPUT_0                     0x00000000 /* RWI-V */
#define NV_PCRTC_GPIO_EXT_2_ENABLE                              1:1 /* R---F */
#define NV_PCRTC_GPIO_EXT_2_ENABLE_DISABLE               0x00000001 /* RWI-V */
#define NV_PCRTC_GPIO_EXT_2_ENABLE_ENABLE                0x00000000 /* RW--V */
#define NV_PCRTC_GPIO_EXT_2_INPUT                               2:2 /* R---F */
#define NV_PCRTC_GPIO_EXT_3_OUTPUT                              4:4 /* RWI-F */
#define NV_PCRTC_GPIO_EXT_3_OUTPUT_0                     0x00000000 /* RWI-V */
#define NV_PCRTC_GPIO_EXT_3_ENABLE                              5:5 /* R---F */
#define NV_PCRTC_GPIO_EXT_3_ENABLE_DISABLE               0x00000001 /* RWI-V */
#define NV_PCRTC_GPIO_EXT_3_ENABLE_ENABLE                0x00000000 /* RW--V */
#define NV_PCRTC_GPIO_EXT_3_INPUT                               6:6 /* R---F */
#define NV_PCRTC_GPIO_EXT_4_OUTPUT                              8:8 /* RWI-F */
#define NV_PCRTC_GPIO_EXT_4_OUTPUT_0                     0x00000000 /* RWI-V */
#define NV_PCRTC_GPIO_EXT_4_ENABLE                              9:9 /* R---F */
#define NV_PCRTC_GPIO_EXT_4_ENABLE_DISABLE               0x00000001 /* RWI-V */
#define NV_PCRTC_GPIO_EXT_4_ENABLE_ENABLE                0x00000000 /* RW--V */
#define NV_PCRTC_GPIO_EXT_4_INPUT                             10:10 /* R---F */
#define NV_PCRTC_GPIO_EXT_5_OUTPUT                            12:12 /* RWI-F */
#define NV_PCRTC_GPIO_EXT_5_OUTPUT_0                     0x00000000 /* RWI-V */
#define NV_PCRTC_GPIO_EXT_5_ENABLE                            13:13 /* R---F */
#define NV_PCRTC_GPIO_EXT_5_ENABLE_DISABLE               0x00000001 /* RWI-V */
#define NV_PCRTC_GPIO_EXT_5_ENABLE_ENABLE                0x00000000 /* RW--V */
#define NV_PCRTC_GPIO_EXT_5_INPUT                             14:14 /* R---F */
 /* nv20-only */
#define NV_PCRTC_RASTER_POL                                   31:31 /* RW--F */
#define NV_PCRTC_RASTER_POL_IN_RANGE                              0 /* RWI-V */
#define NV_PCRTC_RASTER_POL_OUT_RANGE                             1 /* RW--V */
#define NV_PCRTC_RASTER_STOP                             0x00600834 /* RWI4R */
#define NV_PCRTC_RASTER_STOP_VAL                               15:0 /* RW--F */
#define NV_PCRTC_ENGINE_CTRL                             0x00600860 /* RWI4R */
#define NV_PCRTC_ENGINE_CTRL_GPIO                               0:0 /* RW--F */
#define NV_PCRTC_ENGINE_CTRL_GPIO_DEFAULT                0x00000000 /* RWI-F */
#define NV_PCRTC_ENGINE_CTRL_GPIO_ENABLE                 0x00000001 /* RW--F */
#define NV_PCRTC_ENGINE_CTRL_I2C                                4:4 /* RW--F */
#define NV_PCRTC_ENGINE_CTRL_I2C_DEFAULT                 0x00000000 /* RWI-F */
#define NV_PCRTC_ENGINE_CTRL_I2C_ENABLE                  0x00000001 /* RW--F */
#define NV_PCRTC_ENGINE_CTRL_TV                                 8:8 /* RW--F */
#define NV_PCRTC_ENGINE_CTRL_TV_DEFAULT                  0x00000000 /* RWI-F */
#define NV_PCRTC_ENGINE_CTRL_TV_ENABLE                   0x00000001 /* RW--F */
#define NV_PCRTC_ENGINE_CTRL_VS                               12:12 /* RW--F */
#define NV_PCRTC_ENGINE_CTRL_VS_DEFAULT                  0x00000000 /* RWI-F */
#define NV_PCRTC_ENGINE_CTRL_VS_ENABLE                   0x00000001 /* RW--F */
/* dev_vga.ref */
#define NV_CIO                                          0x3DF:0x3B0 /* ----D */
#define NV_CIO_INP0                                      0x000003c2 /* R--1R */
#define NV_CIO_INP0__MONO                                0x000003ba /* R--1R */
#define NV_CIO_INP0__COLOR                               0x000003da /* R--1R */
#define NV_CIO_INP0__READ_MONO                           0x000003ca /* R--1R */
#define NV_CIO_INP0__WRITE_MONO                          0x000003ba /* -W-1R */
#define NV_CIO_INP0__WRITE_COLOR                         0x000003da /* -W-1R */
#define NV_CIO_ARX                                       0x000003c0 /* RW-1R */
#define NV_CIO_AR_PALETTE__WRITE                         0x000003c0 /* -W-1R */
#define NV_CIO_AR_PALETTE__READ                          0x000003c1 /* R--1R */
#define NV_CIO_AR_MODE__WRITE                            0x000003c0 /* -W-1R */
#define NV_CIO_AR_MODE__READ                             0x000003c1 /* R--1R */
#define NV_CIO_AR_MODE_INDEX                             0x00000010 /*       */
#define NV_CIO_AR_OSCAN__WRITE                           0x000003c0 /* -W-1R */
#define NV_CIO_AR_OSCAN__READ                            0x000003c1 /* R--1R */
#define NV_CIO_AR_OSCAN_INDEX                            0x00000011 /*       */
#define NV_CIO_AR_PLANE__WRITE                           0x000003c0 /* -W-1R */
#define NV_CIO_AR_PLANE__READ                            0x000003c1 /* R--1R */
#define NV_CIO_AR_PLANE_INDEX                            0x00000012 /*       */
#define NV_CIO_AR_HPP__WRITE                             0x000003c0 /* -W-1R */
#define NV_CIO_AR_HPP__READ                              0x000003c1 /* R--1R */
#define NV_CIO_AR_HPP_INDEX                              0x00000013 /*       */
#define NV_CIO_AR_CSEL__WRITE                            0x000003c0 /* -W-1R */
#define NV_CIO_AR_CSEL__READ                             0x000003c1 /* R--1R */
#define NV_CIO_AR_CSEL_INDEX                             0x00000014 /*       */
#define NV_CIO_CRX__MONO                                 0x000003b4 /* RW-1R */
#define NV_CIO_CRX__COLOR                                0x000003d4 /* RW-1R */
#define NV_CIO_CR__MONO                                  0x000003b5 /* RW-1R */
#define NV_CIO_CR__COLOR                                 0x000003d5 /* RW-1R */
#define NV_CIO_CR_HDT_INDEX                              0x00000000 /*       */
#define NV_CIO_CR_HDE_INDEX                              0x00000001 /*       */
#define NV_CIO_CR_HBS_INDEX                              0x00000002 /*       */
#define NV_CIO_CR_HBE_INDEX                              0x00000003 /*       */
#define NV_CIO_CR_HBE_4_0                                       4:0 /* RW--F */
#define NV_CIO_CR_HRS_INDEX                              0x00000004 /*       */
#define NV_CIO_CR_HRE_INDEX                              0x00000005 /*       */
#define NV_CIO_CR_HRE_HBE_5                                     7:7 /* RW--F */
#define NV_CIO_CR_HRE_4_0                                       4:0 /* RW--F */
#define NV_CIO_CR_VDT_INDEX                              0x00000006 /*       */
#define NV_CIO_CR_OVL_INDEX                              0x00000007 /*       */
#define NV_CIO_CR_OVL_VDE_8                                     1:1 /* RW--F */
#define NV_CIO_CR_OVL_VDE_9                                     6:6 /* RW--F */
#define NV_CIO_CR_OVL_VDT_8                                     0:0 /* RW--F */
#define NV_CIO_CR_OVL_VDT_9                                     5:5 /* RW--F */
#define NV_CIO_CR_OVL_VBS_8                                     3:3 /* RW--F */
#define NV_CIO_CR_OVL_VRS_8                                     2:2 /* RW--F */
#define NV_CIO_CR_OVL_VRS_9                                     7:7 /* RW--F */
#define NV_CIO_CR_RSAL_INDEX                             0x00000008 /*       */
#define NV_CIO_CR_RSAL_PANNING                                  6:5 /* RW--F */
#define NV_CIO_CR_CELL_HT_INDEX                          0x00000009 /*       */
#define NV_CIO_CR_CELL_HT_SCANDBL                               7:7 /* RW--F */
#define NV_CIO_CR_CELL_HT_VBS_9                                 5:5 /* RW--F */
#define NV_CIO_CR_CURS_ST_INDEX                          0x0000000A /*       */
#define NV_CIO_CR_CURS_END_INDEX                         0x0000000B /*       */
#define NV_CIO_CR_SA_HI_INDEX                            0x0000000C /*       */
#define NV_CIO_CR_SA_LO_INDEX                            0x0000000D /*       */
#define NV_CIO_CR_TCOFF_HI_INDEX                         0x0000000E /*       */
#define NV_CIO_CR_TCOFF_LO_INDEX                         0x0000000F /*       */
#define NV_CIO_CR_VRS_INDEX                              0x00000010 /*       */
#define NV_CIO_CR_VRE_INDEX                              0x00000011 /*       */
#define NV_CIO_CR_VRE_3_0                                       3:0 /* RW--F */
#define NV_CIO_CR_VDE_INDEX                              0x00000012 /*       */
#define NV_CIO_CR_OFFSET_INDEX                           0x00000013 /*       */
#define NV_CIO_CR_ULINE_INDEX                            0x00000014 /*       */
#define NV_CIO_CR_VBS_INDEX                              0x00000015 /*       */
#define NV_CIO_CR_VBE_INDEX                              0x00000016 /*       */
#define NV_CIO_CR_MODE_INDEX                             0x00000017 /*       */
#define NV_CIO_CR_LCOMP_INDEX                            0x00000018 /*       */
#define NV_CIO_CR_GDATA_INDEX                            0x00000022 /*       */
#define NV_CIO_CR_ARFF_INDEX                             0x00000024 /*       */
#define NV_CIO_CR_ARX_INDEX                              0x00000026 /*       */
#define NV_CIO_CRE__MONO                                 0x000003b5 /* RW-1R */
#define NV_CIO_CRE__COLOR                                0x000003d5 /* RW-1R */
#define NV_CIO_CRE_RPC0_INDEX                            0x00000019 /*       */
#define NV_CIO_CRE_RPC0_START                                   4:0 /* RW--F */
#define NV_CIO_CRE_RPC0_OFFSET_10_8                             7:5 /* RW--F */
#define NV_CIO_CRE_RPC1_INDEX                            0x0000001A /*       */
#define NV_CIO_CRE_RPC1_LARGE                                   2:2 /* RW--F */
#define NV_CIO_CRE_FF_INDEX                              0x0000001B /*       */
#define NV_CIO_CRE_FF_BURST                                     2:0 /* RW--F */
#define NV_CIO_CRE_FF_BURST_8                            0x00000000 /* RW--V */
#define NV_CIO_CRE_FF_BURST_32                           0x00000001 /* RW--V */
#define NV_CIO_CRE_FF_BURST_64                           0x00000002 /* RW--V */
#define NV_CIO_CRE_FF_BURST_128                          0x00000003 /* RW--V */
#define NV_CIO_CRE_FF_BURST_256                          0x00000004 /* RW--V */
#define NV_CIO_CRE_FF_BURST_512                          0x00000005 /* RW--V */
#define NV_CIO_CRE_ENH_INDEX                             0x0000001C /*       */
#define NV_CIO_CRE_PAGE0_INDEX                           0x0000001D /*       */
#define NV_CIO_CRE_PAGE1_INDEX                           0x0000001E /*       */
#define NV_CIO_SR_LOCK_INDEX                             0x0000001F /*       */
#define NV_CIO_SR_UNLOCK_RW_VALUE                        0x00000057 /*       */
#define NV_CIO_SR_UNLOCK_RO_VALUE                        0x00000075 /*       */
#define NV_CIO_SR_LOCK_VALUE                             0x00000099 /*       */
#define NV_SR_UNLOCK_RW_VALUE                            0x00000057 /*       */
#define NV_SR_UNLOCK_RO_VALUE                            0x00000075 /*       */
#define NV_SR_LOCK_VALUE                                 0x00000099 /*       */
#define NV_CIO_CRE_FFLWM__INDEX                          0x00000020 /*       */
#define NV_CIO_CRE_FABID_INDEX                           0x00000025 /*       */
#define NV_CIO_CRE_LSR_INDEX                             0x00000025 /*       */
#define NV_CIO_CRE_LSR_SA_26                                    6:6 /* RW--F */
#define NV_CIO_CRE_LSR_VDE_10                                   1:1 /* RW--F */
#define NV_CIO_CRE_LSR_VDT_10                                   0:0 /* RW--F */
#define NV_CIO_CRE_LSR_HBE_6                                    4:4 /* RW--F */
#define NV_CIO_CRE_LSR_VBS_10                                   3:3 /* RW--F */
#define NV_CIO_CRE_LSR_VRS_10                                   2:2 /* RW--F */
#define NV_CIO_CRE_CHIP_ID_INDEX                         0x00000027 /*       */
#define NV_CIO_CRE_PIXEL_INDEX                           0x00000028 /*       */
#define NV_CIO_CRE_PIXEL_TV_ADJ                                 5:3 /* RW--F */
#define NV_CIO_CRE_PIXEL_FORMAT                                 1:0 /* RW--F */
#define NV_CIO_CRE_PIXEL_FORMAT_VGA                      0x00000000 /* RW--V */
#define NV_CIO_CRE_PIXEL_FORMAT_8BPP                     0x00000001 /* RW--V */
#define NV_CIO_CRE_PIXEL_FORMAT_16BPP                    0x00000002 /* RW--V */
#define NV_CIO_CRE_PIXEL_FORMAT_32BPP                    0x00000003 /* RW--V */
#define NV_CIO_CRE_PAGE_OVFL__INDEX                      0x00000029 /*       */
#define NV_CIO_CRE_OSCOL__INDEX                          0x0000002A /*       */
#define NV_CIO_CRE_SCRATCH0__INDEX                       0x0000002B /*       */
#define NV_CIO_CRE_SCRATCH1__INDEX                       0x0000002C /*       */
#define NV_CIO_CRE_HEB__INDEX                            0x0000002D /*       */
#define NV_CIO_CRE_HEB_SA_25                                    7:7 /* RW--F */
#define NV_CIO_CRE_HEB_SA_24                                    6:6 /* RW--F */
#define NV_CIO_CRE_HEB_SA_23                                    5:5 /* RW--F */
#define NV_CIO_CRE_HEB_ILC_8                                    4:4 /* RW--F */
#define NV_CIO_CRE_HEB_HRS_8                                    3:3 /* RW--F */
#define NV_CIO_CRE_HEB_HBS_8                                    2:2 /* RW--F */
#define NV_CIO_CRE_HEB_HDE_8                                    1:1 /* RW--F */
#define NV_CIO_CRE_HEB_HDT_8                                    0:0 /* RW--F */
#define NV_CIO_CRE_HCUR_ADDR2_INDEX                      0x0000002f /*       */
#define NV_CIO_CRE_HCUR_ADDR2_ADR                               2:0 /* RW--F */
#define NV_CIO_CRE_HCUR_ADDR0_INDEX                      0x00000030 /*       */
#define NV_CIO_CRE_HCUR_ASI                                     7:7 /* RW--F */
#define NV_CIO_CRE_HCUR_ASI_FRAMEBUFFER                  0x00000001
#define NV_CIO_CRE_HCUR_ASI_INSTMEM                      0x00000000
#define NV_CIO_CRE_HCUR_ADDR0_ADR                               6:0 /* RW--F */
#define NV_CIO_CRE_HCUR_ADDR1_INDEX                      0x00000031 /*       */
#define NV_CIO_CRE_HCUR_ADDR1_ADR                               7:2 /* RW--F */
#define NV_CIO_CRE_HCUR_ADDR1_CUR_DBL                           1:1 /* RW--F */
#define NV_CIO_CRE_HCUR_ADDR1_ENABLE                            0:0 /* RW--F */
#define NV_CIO_CRE_VID_END0__INDEX                       0x00000032 /*       */
#define NV_CIO_CRE_LCD__INDEX                            0x00000033 /*       */
#define NV_CIO_CRE_LCD_LCD_SELECT                               0:0 /* RW--F */
#define NV_CIO_CRE_LCD_VPLL_VCO                                 6:6 /* RW--F */
#define NV_CIO_CRE_LCD_STEREO_ENABLE                            7:7 /* RW--F */
#define NV_CIO_CRE_RMA__INDEX                            0x00000038 /*       */
#define NV_CIO_CRE_ILACE__INDEX                          0x00000039 /*       */
#define NV_CIO_CRE_SCRATCH2__INDEX                       0x0000003A /*       */
#define NV_CIO_CRE_SCRATCH3__INDEX                       0x0000003B /*       */
#define NV_CIO_CRE_SCRATCH4__INDEX                       0x0000003C /*       */
#define NV_CIO_CRE_TREG__INDEX                           0x0000003D /*       */
#define NV_CIO_CRE_TREG_HCNT                                    6:6 /* RW--F */
#define NV_CIO_CRE_TREG_VCNT                                    4:4 /* RW--F */
#define NV_CIO_CRE_TREG_SHADOW                                  0:0 /* RW--F */
#define NV_CIO_CRE_TREG_HCNT_INDEX                       0x00000000 /*       */
#define NV_CIO_CRE_TREG_VCNTA_INDEX                      0x00000006 /*       */
#define NV_CIO_CRE_TREG_VCNTB_INDEX                      0x00000007 /*       */
#define NV_CIO_CRE_DDC_STATUS__INDEX                     0x0000003E /*       */
#define NV_CIO_CRE_DDC_WR__INDEX                         0x0000003F /*       */
#define NV_CIO_CRE_PCI_TO__INDEX                         0x00000040 /*       */
#define NV_CIO_CRE_PCI_TO_DELAY                                 7:0 /* -W--F */
 /* these are nv20-only */
#define NV_CIO_CRE_EBR_INDEX                             0x00000041 /*       */
#define NV_CIO_CRE_EBR_VBS_11                                   6:6 /* RW--F */
#define NV_CIO_CRE_EBR_VRS_11                                   4:4 /* RW--F */
#define NV_CIO_CRE_EBR_VDE_11                                   2:2 /* RW--F */
#define NV_CIO_CRE_EBR_VDT_11                                   0:0 /* RW--F */
#define NV_CIO_CRE_USA_INDEX                             0x00000042 /*       */
#define NV_CIO_CRE_USA_SA__31                                   3:3 /* RW--F */
#define NV_CIO_CRE_USA_SA__30                                   2:2 /* RW--F */
#define NV_CIO_CRE_USA_SA__29                                   1:1 /* RW--F */
#define NV_CIO_CRE_USA_SA__28                                   0:0 /* RW--F */
#define NV_CIO_CRE_MBI                                   0x00000043 /*       */
#define NV_CIO_CRE_MBI_EN                                       0:0 /* RW--F */
#define NV_CIO_CRE_MBI_EN_ENABLE                         0x00000001 /* RW--V */
#define NV_CIO_CRE_MBI_EN_DISABLE                        0x00000000 /* RW--V */
#define NV_CIO_CRE_H2OWNS                                0x00000044 /*       */
#define NV_CIO_CRE_H2OWNS_VGA                                   0:0 /* RW--F */
#define NV_CIO_CRE_H2OWNS_VGA_DEFAULT                    0x00000000 /* RWI-V */
#define NV_CIO_CRE_H2OWNS_VGA_DISABLE                    0x00000000 /* RW--V */
#define NV_CIO_CRE_H2OWNS_VGA_ENABLE                     0x00000001 /* RW--V */
#define NV_CIO_CRE_H2OWNS_DAC                                   1:1 /* RW--F */
#define NV_CIO_CRE_H2OWNS_DAC_DEFAULT                    0x00000000 /* RWI-V */
#define NV_CIO_CRE_H2OWNS_DAC_DISABLE                    0x00000000 /* RW--V */
#define NV_CIO_CRE_H2OWNS_DAC_ENABLE                     0x00000001 /* RW--V */
#define NV_CIO_CRE_H2OWNS_MIRROR                                2:2 /* RW--F */
#define NV_CIO_CRE_H2OWNS_MIRROR_DEFAULT                 0x00000000 /* RWI-V */
#define NV_CIO_CRE_H2OWNS_MIRROR_DISABLE                 0x00000000 /* RW--V */
#define NV_CIO_CRE_H2OWNS_MIRROR_ENABLE                  0x00000001 /* RW--V */
#define NV_CIO_CRE_CSB                                   0x00000045 /*       */
#define NV_CIO_CRE_CSB_VAL                                      1:0 /* RW--F */
#define NV_CIO_CRE_CSB_VAL_NONE                          0x00000000 /* RW--V */
#define NV_CIO_CRE_CSB_VAL_3BY16                         0x00000001 /* RW--V */
#define NV_CIO_CRE_CSB_VAL_3BY08                         0x00000002 /* RW--V */
#define NV_CIO_CRE_CSB_VAL_3BY04                         0x00000003 /* RW--V */
#define NV_CIO_CRE_RCR                                   0x00000046 /*       */
#define NV_CIO_CRE_RCR_RNDM_REQ                                 1:0 /* RW--F */
#define NV_CIO_CRE_RCR_RNDM_REQ_NONE                     0x00000000 /* RW--V */
#define NV_CIO_CRE_RCR_RNDM_REQ_08                       0x00000001 /* RW--V */
#define NV_CIO_CRE_RCR_RNDM_REQ_16                       0x00000002 /* RW--V */
#define NV_CIO_CRE_RCR_RNDM_REQ_32                       0x00000003 /* RW--V */
#define NV_CIO_CRE_RCR_ENDIAN                                   7:7 /* RW--F */
#define NV_CIO_CRE_RCR_ENDIAN_LITTLE                     0x00000000 /* RW--V */
#define NV_CIO_CRE_RCR_ENDIAN_BIG                        0x00000001 /* RW--V */
#define NV_CIO_CRE_FFLWM_MSB_INDEX                       0x00000047 /*       */
#define NV_CIO_CRE_FFLWM_MSB_LWM                                0:0 /* RW--F */
#define NV_CIO_CRE_EXT_PIXEL_INDEX                       0x00000048 /*       */
#define NV_CIO_CRE_EXT_PIXEL_FORMAT                             0:0 /* RW--F */
#define NV_CIO_CRE_EXT_PIXEL_FORMAT_RGB                  0x00000000 /* RWI-V */
#define NV_CIO_CRE_EXT_PIXEL_FORMAT_YUV                  0x00000001 /* RW--V */
#define NV_CIO_CRE_EXT_PIXEL_YUV_FMT                            1:1 /* RW--F */
#define NV_CIO_CRE_EXT_PIXEL_YUV_FMT_YVYU                0x00000000 /* RWI-V */
#define NV_CIO_CRE_EXT_PIXEL_YUV_FMT_VYUY                0x00000001 /* RW--V */
#define NV_CIO_CRE_ENGINE_CTRL                           0x00000049 /*       */
#define NV_CIO_CRE_ENGINE_CTRL_GPIO                             0:0 /* RW--F */
#define NV_CIO_CRE_ENGINE_CTRL_GPIO_DEFAULT              0x00000000 /* RWI-V */
#define NV_CIO_CRE_ENGINE_CTRL_GPIO_ENABLE               0x00000001 /* RW--V */
#define NV_CIO_CRE_ENGINE_CTRL_I2C                              2:2 /* RW--F */
#define NV_CIO_CRE_ENGINE_CTRL_I2C_DEFAULT               0x00000000 /* RWI-V */
#define NV_CIO_CRE_ENGINE_CTRL_I2C_ENABLE                0x00000001 /* RW--V */
#define NV_CIO_CRE_ENGINE_CTRL_TV                               4:4 /* RW--F */
#define NV_CIO_CRE_ENGINE_CTRL_TV_DEFAULT                0x00000000 /* RWI-V */
#define NV_CIO_CRE_ENGINE_CTRL_TV_ENABLE                 0x00000001 /* RW--V */
#define NV_CIO_CRE_ENGINE_CTRL_VS                               6:6 /* RW--F */
#define NV_CIO_CRE_ENGINE_CTRL_VS_DEFAULT                0x00000000 /* RWI-V */
#define NV_CIO_CRE_ENGINE_CTRL_VS_ENABLE                 0x00000001 /* RW--V */
#define NV_CIO_CRE_SCRATCH5__INDEX                       0x0000004A /*       */
#define NV_CIO_CRE_SCRATCH6__INDEX                       0x0000004B /*       */
#define NV_CIO_CRE_SCRATCH7__INDEX                       0x0000004C /*       */
#define NV_CIO_GPIO23_INDEX                              0x0000004D /*       */
#define NV_CIO_GPIO45_INDEX                              0x0000004E /*       */
#define NV_CIO_CRE_DDC2_STATUS__INDEX                    0x00000050 /*       */
#define NV_CIO_CRE_DDC2_WR__INDEX                        0x00000051 /*       */
#define NV_CIO_CRE_TVOUT_LATENCY                         0x00000052 /*       */
/* dev_vga.ref */
#define NV_VIO_MBEN                                      0x00000094 /* RW-1R */
#define NV_VIO_ADDEN                                     0x000046e8 /* RW-1R */
#define NV_VIO_VSE1                                      0x00000102 /* RW-1R */
#define NV_VIO_VSE2                                      0x000003c3 /* RW-1R */
#define NV_VIO_MISC__READ                                0x000003cc /* R--1R */
#define NV_VIO_MISC__WRITE                               0x000003c2 /* -W-1R */
#define NV_VIO_SRX                                       0x000003c4 /* RW-1R */
#define NV_VIO_SR_RESET                                  0x000003c5 /* RW-1R */
#define NV_VIO_SR_RESET_INDEX                            0x00000000 /*     V */
#define NV_VIO_SR_CLOCK                                  0x000003c5 /* RW-1R */
#define NV_VIO_SR_CLOCK_INDEX                            0x00000001 /*     V */
#define NV_VIO_SR_PLANE_MASK                             0x000003c5 /* RW-1R */
#define NV_VIO_SR_PLANE_MASK_INDEX                       0x00000002 /*     V */
#define NV_VIO_SR_CHAR_MAP                               0x000003c5 /* RW-1R */
#define NV_VIO_SR_CHAR_MAP_INDEX                         0x00000003 /*       */
#define NV_VIO_SR_MEM_MODE                               0x000003c5 /* RW-1R */
#define NV_VIO_SR_MEM_MODE_INDEX                         0x00000004 /*       */
#define NV_VIO_GRX                                       0x000003ce /* RW-1R */
#define NV_VIO_GX_SR                                     0x000003cf /* RW-1R */
#define NV_VIO_GX_SR_INDEX                               0x00000000 /*       */
#define NV_VIO_GX_SREN                                   0x000003cf /* RW-1R */
#define NV_VIO_GX_SREN_INDEX                             0x00000001 /*       */
#define NV_VIO_GX_CCOMP                                  0x000003cf /* RW-1R */
#define NV_VIO_GX_CCOMP_INDEX                            0x00000002 /*       */
#define NV_VIO_GX_ROP                                    0x000003cf /* RW-1R */
#define NV_VIO_GX_ROP_INDEX                              0x00000003 /*       */
#define NV_VIO_GX_READ_MAP                               0x000003cf /* RW-1R */
#define NV_VIO_GX_READ_MAP_INDEX                         0x00000004 /*       */
#define NV_VIO_GX_MODE                                   0x000003cf /* RW-1R */
#define NV_VIO_GX_MODE_INDEX                             0x00000005 /*       */
#define NV_VIO_GX_MISC                                   0x000003cf /* RW-1R */
#define NV_VIO_GX_MISC_INDEX                             0x00000006 /*       */
#define NV_VIO_GX_DONT_CARE                              0x000003cf /* RW-1R */
#define NV_VIO_GX_DONT_CARE_INDEX                        0x00000007 /*       */
#define NV_VIO_GX_BIT_MASK                               0x000003cf /* RW-1R */
#define NV_VIO_GX_BIT_MASK_INDEX                         0x00000008 /*       */
/* dev_vga.ref */
#define NV_PRMVIO                             0x000C7FFF:0x000C0000 /* RW--D */
#define NV_PRMVIO_MBEN                                   0x000C0094 /* RW-1R */
#define NV_PRMVIO_ADDEN                                  0x000C46e8 /* RW-1R */
#define NV_PRMVIO_VSE1                                   0x000C0102 /* RW-1R */
#define NV_PRMVIO_VSE2                                   0x000C03c3 /* RW-1R */
#define NV_PRMVIO_MISC__READ                             0x000C03cc /* R--1R */
#define NV_PRMVIO_MISC__WRITE                            0x000C03c2 /* -W-1R */
#define NV_PRMVIO_SRX                                    0x000C03c4 /* RW-1R */
#define NV_PRMVIO_SR_RESET                               0x000C03c5 /* RW-1R */
#define NV_PRMVIO_SR_RESET_INDEX                         0x00000000 /*     V */
#define NV_PRMVIO_SR_CLOCK                               0x000C03c5 /* RW-1R */
#define NV_PRMVIO_SR_CLOCK_INDEX                         0x00000001 /*     V */
#define NV_PRMVIO_SR_PLANE_MASK                          0x000C03c5 /* RW-1R */
#define NV_PRMVIO_SR_PLANE_MASK_INDEX                    0x00000002 /*     V */
#define NV_PRMVIO_SR_CHAR_MAP                            0x000C03c5 /* RW-1R */
#define NV_PRMVIO_SR_CHAR_MAP_INDEX                      0x00000003 /*       */
#define NV_PRMVIO_SR_MEM_MODE                            0x000C03c5 /* RW-1R */
#define NV_PRMVIO_SR_MEM_MODE_INDEX                      0x00000004 /*       */
#define NV_PRMVIO_GRX                                    0x000C03ce /* RW-1R */
#define NV_PRMVIO_GX_SR                                  0x000C03cf /* RW-1R */
#define NV_PRMVIO_GX_SR_INDEX                            0x00000000 /*       */
#define NV_PRMVIO_GX_SREN                                0x000C03cf /* RW-1R */
#define NV_PRMVIO_GX_SREN_INDEX                          0x00000001 /*       */
#define NV_PRMVIO_GX_CCOMP                               0x000C03cf /* RW-1R */
#define NV_PRMVIO_GX_CCOMP_INDEX                         0x00000002 /*       */
#define NV_PRMVIO_GX_ROP                                 0x000C03cf /* RW-1R */
#define NV_PRMVIO_GX_ROP_INDEX                           0x00000003 /*       */
#define NV_PRMVIO_GX_READ_MAP                            0x000C03cf /* RW-1R */
#define NV_PRMVIO_GX_READ_MAP_INDEX                      0x00000004 /*       */
#define NV_PRMVIO_GX_MODE                                0x000C03cf /* RW-1R */
#define NV_PRMVIO_GX_MODE_INDEX                          0x00000005 /*       */
#define NV_PRMVIO_GX_MISC                                0x000C03cf /* RW-1R */
#define NV_PRMVIO_GX_MISC_INDEX                          0x00000006 /*       */
#define NV_PRMVIO_GX_DONT_CARE                           0x000C03cf /* RW-1R */
#define NV_PRMVIO_GX_DONT_CARE_INDEX                     0x00000007 /*       */
#define NV_PRMVIO_GX_BIT_MASK                            0x000C03cf /* RW-1R */
#define NV_PRMVIO_GX_BIT_MASK_INDEX                      0x00000008 /*       */
/* dev_vga.ref */
#define NV_PRMVGA                             0x000BFFFF:0x000A0000 /* RW--D */
/* dev_framebuffer.ref */
/* dev_fb.ref */
#define NV_PFB                                0x00100FFF:0x00100000 /* RW--D */
/*  needed by dma/dma.c:dmaDeallocate() */
#define NV_PRAMIN_CTX_1_NOTIFY_INSTANCE                       31:16 /* RWXUF */
#define NV_PRAMIN_CTX_2_DMA_0_INSTANCE                         15:0 /* RWXUF */
#define NV_PRAMIN_CTX_2_DMA_1_INSTANCE                        31:16 /* RWXUF */
/*  needed by osapi.c/fbstate.c/mcstate.c/dac.c */
#define NV_PRAMIN_DATA032(i)                     (0x00700000+(i)*4) /* RW-4A */
#define NV_PRAMIN_DATA016(i)         (0x00700000+((i)/3)*4+((i)%3)) /* RW-2A */
#define NV_PRAMIN_DATA008(i)                       (0x00700000+(i)) /* RW-1A */
/*  needed by gr/gr.c:grDeleteObjectInstance() */
#define NV_PRAMIN_CONTEXT_0                   ( 0*32+31):( 0*32+ 0) /*       */
#define NV_PRAMIN_CONTEXT_1                   ( 1*32+31):( 1*32+ 0) /*       */
#define NV_PRAMIN_CONTEXT_2                   ( 2*32+31):( 2*32+ 0) /*       */
/* dev_ext_devices.ref */
#define NV_PEXTDEV                            0x00101FFF:0x00101000 /* RW--D */
#define NV_PEXTDEV_BOOT_0                                0x00101000 /* R--4R */
#define NV_PEXTDEV_BOOT_0_STRAP_PCI_AD                          0:0 /* R-XVF */
#define NV_PEXTDEV_BOOT_0_STRAP_PCI_AD_REVERSED          0x00000000 /* R---V */
#define NV_PEXTDEV_BOOT_0_STRAP_PCI_AD_NORMAL            0x00000001 /* R---V */
#define NV_PEXTDEV_BOOT_0_STRAP_SUB_VENDOR                      1:1 /* R-XVF */
#define NV_PEXTDEV_BOOT_0_STRAP_SUB_VENDOR_NO_BIOS       0x00000000 /* R---V */
#define NV_PEXTDEV_BOOT_0_STRAP_SUB_VENDOR_BIOS          0x00000001 /* R---V */
#define NV_PEXTDEV_BOOT_0_STRAP_RAMCFG                          5:2 /* R-XVF */
#define NV_PEXTDEV_BOOT_0_STRAP_CRYSTAL                         6:6 /* R-XVF */
#define NV_PEXTDEV_BOOT_0_STRAP_CRYSTAL_13500K           0x00000000 /* R---V */
#define NV_PEXTDEV_BOOT_0_STRAP_CRYSTAL_14318180         0x00000001 /* R---V */
#define NV_PEXTDEV_BOOT_0_STRAP_TVMODE                          8:7 /* R-XVF */
#define NV_PEXTDEV_BOOT_0_STRAP_TVMODE_SECAM             0x00000000 /* R---V */
#define NV_PEXTDEV_BOOT_0_STRAP_TVMODE_NTSC              0x00000001 /* R---V */
#define NV_PEXTDEV_BOOT_0_STRAP_TVMODE_PAL               0x00000002 /* R---V */
#define NV_PEXTDEV_BOOT_0_STRAP_TVMODE_DISABLED          0x00000003 /* R---V */
#define NV_PEXTDEV_BOOT_0_STRAP_AGP_4X                          9:9 /* R-XVF */
#define NV_PEXTDEV_BOOT_0_STRAP_AGP_4X_ENABLED           0x00000000 /* R---V */
#define NV_PEXTDEV_BOOT_0_STRAP_AGP_4X_DISABLED          0x00000001 /* R---V */
#define NV_PEXTDEV_BOOT_0_STRAP_AGP_SBA                       10:10 /* R-XVF */
#define NV_PEXTDEV_BOOT_0_STRAP_AGP_SBA_ENABLED          0x00000000 /* R---V */
#define NV_PEXTDEV_BOOT_0_STRAP_AGP_SBA_DISABLED         0x00000001 /* R---V */
#define NV_PEXTDEV_BOOT_0_STRAP_AGP_FASTWR                    11:11 /* R-XVF */
#define NV_PEXTDEV_BOOT_0_STRAP_AGP_FASTWR_ENABLED       0x00000000 /* R---V */
#define NV_PEXTDEV_BOOT_0_STRAP_AGP_FASTWR_DISABLED      0x00000001 /* R---V */
#define NV_PEXTDEV_BOOT_0_STRAP_PCI_DEVID                     13:12 /* R-XVF */
#define NV_PEXTDEV_BOOT_0_STRAP_PCI_DEVID_0              0x00000000 /* R---V */
#define NV_PEXTDEV_BOOT_0_STRAP_PCI_DEVID_1              0x00000001 /* R---V */
#define NV_PEXTDEV_BOOT_0_STRAP_PCI_DEVID_2              0x00000002 /* R---V */
#define NV_PEXTDEV_BOOT_0_STRAP_PCI_DEVID_3              0x00000003 /* R---V */
#define NV_PEXTDEV_BOOT_0_STRAP_BUS_TYPE                      14:14 /* R-XVF */
#define NV_PEXTDEV_BOOT_0_STRAP_BUS_TYPE_PCI             0x00000000 /* R---V */
#define NV_PEXTDEV_BOOT_0_STRAP_BUS_TYPE_AGP             0x00000001 /* R---V */
#define NV_PEXTDEV_BOOT_0_STRAP_FP_IFACE                      15:15 /* R-XVF */
#define NV_PEXTDEV_BOOT_0_STRAP_FP_IFACE_24BIT           0x00000000 /* R---V */
#define NV_PEXTDEV_BOOT_0_STRAP_FP_IFACE_12BIT           0x00000001 /* R---V */
#define NV_PEXTDEV_BOOT_0_STRAP_FB                            17:16 /* R-XVF */
#define NV_PEXTDEV_BOOT_0_STRAP_FB_64M                   0x00000000 /* R---V */
#define NV_PEXTDEV_BOOT_0_STRAP_FB_128M                  0x00000001 /* R---V */
#define NV_PEXTDEV_BOOT_0_STRAP_FB_256M                  0x00000002 /* R---V */
#define NV_PEXTDEV_BOOT_0_STRAP_FB_512M                  0x00000003 /* R---V */
#define NV_PEXTDEV_BOOT_0_STRAP_BR                            18:18 /* R-XVF */
#define NV_PEXTDEV_BOOT_0_STRAP_BR_DISABLED              0x00000000 /* R---V */
#define NV_PEXTDEV_BOOT_0_STRAP_BR_ENABLED               0x00000001 /* R---V */
#define NV_PEXTDEV_BOOT_0_STRAP_BR_REG_128M                   19:19 /* R-XVF */
#define NV_PEXTDEV_BOOT_0_STRAP_BR_REG_128M_ENABLED      0x00000000 /* R---V */
#define NV_PEXTDEV_BOOT_0_STRAP_BR_REG_128M_DISABLED     0x00000001 /* R---V */
#define NV_PEXTDEV_BOOT_0_STRAP_BR_AGP_DEV                    20:20 /* R-XVF */
#define NV_PEXTDEV_BOOT_0_STRAP_BR_AGP_DEV_DISABLED      0x00000000 /* R---V */
#define NV_PEXTDEV_BOOT_0_STRAP_BR_AGP_DEV_ENABLED       0x00000001 /* R---V */
#define NV_PEXTDEV_BOOT_0_STRAP_BR_IO_DEV                     21:21 /* R-XVF */
#define NV_PEXTDEV_BOOT_0_STRAP_BR_IO_DEV_DISABLED       0x00000000 /* R---V */
#define NV_PEXTDEV_BOOT_0_STRAP_BR_IO_DEV_ENABLED        0x00000001 /* R---V */
#define NV_PEXTDEV_BOOT_0_STRAP_USER_MOBILE                   21:16 /* R-XVF */
#define NV_PEXTDEV_BOOT_0_STRAP_USER                          30:22 /* R-XVF */
#define NV_PEXTDEV_BOOT_0_STRAP_OVERWRITE                     31:31 /* RWIVF */
#define NV_PEXTDEV_BOOT_0_STRAP_OVERWRITE_DISABLED       0x00000000 /* RWI-V */
#define NV_PEXTDEV_BOOT_0_STRAP_OVERWRITE_ENABLED        0x00000001 /* RW--V */
#define NV_PEXTDEV_NEW_BOOT_0                            0x00101000 /* RW-4R */
#define NV_PEXTDEV_NEW_BOOT_0_STRAP_VALUE                      30:0 /* RWIVF */
#define NV_PEXTDEV_NEW_BOOT_0_STRAP_OVERWRITE                 31:31 /* RWIVF */
#define NV_PEXTDEV_NEW_BOOT_0_STRAP_OVERWRITE_DISABLED   0x00000000 /* RWI-V */
#define NV_PEXTDEV_NEW_BOOT_0_STRAP_OVERWRITE_ENABLED    0x00000001 /* RW--V */
/* dev_ext_devices.ref */
/*  needed by win9x/vxd/osinit.c */
#define NV_PROM                               0x0030FFFF:0x00300000 /* RW--D */
#define NV_PROM_DATA(i)                            (0x00300000+(i)) /* RW-1A */
#define NV_PROM_DATA__SIZE_1                                  65536 /*       */
#define NV_PROM_DATA_VALUE                                      7:0 /* RW-VF */
/* dev_misc.ref */
#define NV_USER_ADR_CHID                                      22:16 /*       */
#define NV_USER_ADR_SUBCHID                                   15:13 /*       */
#define NV_USER_ADR_METHOD                                     12:0 /*       */
#define NV_USER_DEVICE                                        22:16 /*       */
/* dev_timer.ref */
#define NV_PTIMER                             0x00009FFF:0x00009000 /* RW--D */
#define NV_PTIMER_INTR_0                                 0x00009100 /* RW-4R */
#define NV_PTIMER_INTR_0_ALARM                                  0:0 /* RWXVF */
#define NV_PTIMER_INTR_0_ALARM_NOT_PENDING               0x00000000 /* R---V */
#define NV_PTIMER_INTR_0_ALARM_PENDING                   0x00000001 /* R---V */
#define NV_PTIMER_INTR_0_ALARM_RESET                     0x00000001 /* -W--V */
#define NV_PTIMER_INTR_EN_0                              0x00009140 /* RW-4R */
#define NV_PTIMER_INTR_EN_0_ALARM                               0:0 /* RWIVF */
#define NV_PTIMER_INTR_EN_0_ALARM_DISABLED               0x00000000 /* RWI-V */
#define NV_PTIMER_INTR_EN_0_ALARM_ENABLED                0x00000001 /* RW--V */
#define NV_PTIMER_NUMERATOR                              0x00009200 /* RW-4R */
#define NV_PTIMER_NUMERATOR_VALUE                              15:0 /* RWIUF */
#define NV_PTIMER_NUMERATOR_VALUE_0                      0x00000000 /* RWI-V */
#define NV_PTIMER_DENOMINATOR                            0x00009210 /* RW-4R */
#define NV_PTIMER_DENOMINATOR_VALUE                            15:0 /* RWIUF */
#define NV_PTIMER_DENOMINATOR_VALUE_0                    0x00000000 /* RWI-V */
#define NV_PTIMER_TIME_0                                 0x00009400 /* RW-4R */
#define NV_PTIMER_TIME_0_NSEC                                  31:5 /* RWXUF */
#define NV_PTIMER_TIME_1                                 0x00009410 /* RW-4R */
#define NV_PTIMER_TIME_1_NSEC                                  28:0 /* RWXUF */
#define NV_PTIMER_ALARM_0                                0x00009420 /* RW-4R */
#define NV_PTIMER_ALARM_0_NSEC                                 31:5 /* RWXUF */

#endif /* _NV_REG_H_ */

#endif /* NV3_HW */

#endif // _NV_REF_H_
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Microsoft Xbox (1.00.4400) [April 2002] [src]\private\ntos\video\nvx\drivers\resman\kernel\inc\nv_papu.h ===
/*  FILE: nv_papu.h
 *  CREATED: Tue Oct  3 12:55:57 2000
 *
 *  Copyright (c) 2000, by NVIDIA CORP
 *  All Rights Reserved.
 */

 /*** DO NOT EDIT, THIS FILE GENERATED FROM ..\..\..\manuals\dev_apu.ref ***/


#ifndef __NV_PAPU_H__
#define __NV_PAPU_H__


/***********************************************/
/* Macros and constants                        */
/***********************************************/

#ifndef REF_VAL
#define DRF_SHIFT(drf)    ((0?drf)                            % 32)
#define DRF_MASK(drf)     (0xFFFFFFFF>>(31-((1?drf)                            % 32)+((0?drf)                            % 32)))
#define REF_VAL(drf,v)    (((v)>>DRF_SHIFT(drf))&DRF_MASK(drf))
#define REF_NUM(drf,n)    (((n)&DRF_MASK(drf))<<DRF_SHIFT(drf))
#endif /* !REF_VAL */

/***********************************************/
/*    #defines from the manuals                */
/***********************************************/

#define NV_PAVS                                            0x0000007F:0x00000000 /* RW--D */
#define NV_PAVS_SIZE                                       0x00000080 /* RW--V */
#define NV_PAVS_SIZE_LG2                                   0x7 /* RW--V */
#define NV_PAVS_VOICE_CFG_00                               0x00000000 /* */ 
#define NV_PAVS_VOICE_CFG_VBIN                             0x00000000 /* -W-4R */
#define NV_PAVS_VOICE_CFG_VBIN_V0BIN                       4:0 /* -W-UF */
#define NV_PAVS_VOICE_CFG_VBIN_V1BIN                       9:5 /* -W-UF */
#define NV_PAVS_VOICE_CFG_VBIN_V2BIN                       14:10 /* -W-UF */
#define NV_PAVS_VOICE_CFG_VBIN_V3BIN                       20:16 /* -W-UF */
#define NV_PAVS_VOICE_CFG_VBIN_V4BIN                       25:21 /* -W-UF */
#define NV_PAVS_VOICE_CFG_VBIN_V5BIN                       30:26 /* -W-UF */
#define NV_PAVS_VOICE_CFG_FMT                              0x00000004 /* -W-4R */
#define NV_PAVS_VOICE_CFG_FMT_V6BIN                        4:0 /* -W-UF */
#define NV_PAVS_VOICE_CFG_FMT_V7BIN                        9:5 /* -W-UF */
#define NV_PAVS_VOICE_CFG_FMT_V6PHASE                      10:10 /* -W-VF */
#define NV_PAVS_VOICE_CFG_FMT_V6PHASE_POSITIVE             0x00 /* -W--V */
#define NV_PAVS_VOICE_CFG_FMT_V6PHASE_NEGATIVE             0x01 /* -W--V */
#define NV_PAVS_VOICE_CFG_FMT_V7PHASE                      11:11 /* -W-VF */
#define NV_PAVS_VOICE_CFG_FMT_V7PHASE_POSITIVE             0x00 /* -W--V */
#define NV_PAVS_VOICE_CFG_FMT_V7PHASE_NEGATIVE             0x01 /* -W--V */
#define NV_PAVS_VOICE_CFG_FMT_GAIN                         12:12 /* -W-VF */
#define NV_PAVS_VOICE_CFG_FMT_GAIN_X1                      0x00 /* -W--V */
#define NV_PAVS_VOICE_CFG_FMT_GAIN_X2                      0x01 /* -W--V */
#define NV_PAVS_VOICE_CFG_FMT_HEADROOM                     15:13 /* -W-VF */
#define NV_PAVS_VOICE_CFG_FMT_HEADROOM_SRC0_FLT0           0x00 /* -W--V */
#define NV_PAVS_VOICE_CFG_FMT_HEADROOM_SRC1_FLT0           0x04 /* -W--V */
#define NV_PAVS_VOICE_CFG_FMT_HEADROOM_SRC1_FLT1           0x05 /* -W--V */
#define NV_PAVS_VOICE_CFG_FMT_HEADROOM_SRC1_FLT2           0x06 /* -W--V */
#define NV_PAVS_VOICE_CFG_FMT_HEADROOM_SRC1_FLT3           0x07 /* -W--V */
#define NV_PAVS_VOICE_CFG_FMT_SAMPLES_PER_BLOCK            20:16 /* -W-UF */
#define NV_PAVS_VOICE_CFG_FMT_MULTIPASS_BIN__ALIAS__       20:16 /* -W-UF */
#define NV_PAVS_VOICE_CFG_FMT_MULTIPASS                    21:21 /* -W-VF */
#define NV_PAVS_VOICE_CFG_FMT_MULTIPASS_OFF                0x00 /* -W--V */
#define NV_PAVS_VOICE_CFG_FMT_MULTIPASS_ON                 0x01 /* -W--V */
#define NV_PAVS_VOICE_CFG_FMT_LINKED_VOICE                 22:22 /* -W-VF */
#define NV_PAVS_VOICE_CFG_FMT_LINKED_VOICE_OFF             0x00 /* -W--V */
#define NV_PAVS_VOICE_CFG_FMT_LINKED_VOICE_ON              0x01 /* -W--V */
#define NV_PAVS_VOICE_CFG_FMT_PERSIST                      23:23 /* -W-VF */
#define NV_PAVS_VOICE_CFG_FMT_PERSIST_OFF                  0x00 /* -W--V */
#define NV_PAVS_VOICE_CFG_FMT_PERSIST_ON                   0x01 /* -W--V */
#define NV_PAVS_VOICE_CFG_FMT_DATA_TYPE                    24:24 /* -W-VF */
#define NV_PAVS_VOICE_CFG_FMT_DATA_TYPE_BUFFER             0x00 /* -W--V */
#define NV_PAVS_VOICE_CFG_FMT_DATA_TYPE_STREAM             0x01 /* -W--V */
#define NV_PAVS_VOICE_CFG_FMT_LOOP                         25:25 /* -W-VF */
#define NV_PAVS_VOICE_CFG_FMT_LOOP_OFF                     0x00 /* -W--V */
#define NV_PAVS_VOICE_CFG_FMT_LOOP_ON                      0x01 /* -W--V */
#define NV_PAVS_VOICE_CFG_FMT_CLEAR_MIX                    26:26 /* -W-VF */
#define NV_PAVS_VOICE_CFG_FMT_CLEAR_MIX_FALSE              0x00 /* -W--V */
#define NV_PAVS_VOICE_CFG_FMT_CLEAR_MIX_TRUE               0x01 /* -W--V */
#define NV_PAVS_VOICE_CFG_FMT_STEREO                       27:27 /* -W-VF */
#define NV_PAVS_VOICE_CFG_FMT_STEREO_DISABLE               0x00 /* -W--V */
#define NV_PAVS_VOICE_CFG_FMT_STEREO_ENABLE                0x01 /* -W--V */
#define NV_PAVS_VOICE_CFG_FMT_SAMPLE_SIZE                  29:28 /* -W-VF */
#define NV_PAVS_VOICE_CFG_FMT_SAMPLE_SIZE_U8               0x00 /* -W--V */
#define NV_PAVS_VOICE_CFG_FMT_SAMPLE_SIZE_S16              0x01 /* -W--V */
#define NV_PAVS_VOICE_CFG_FMT_SAMPLE_SIZE_S24              0x02 /* -W--V */
#define NV_PAVS_VOICE_CFG_FMT_SAMPLE_SIZE_S32              0x03 /* -W--V */
#define NV_PAVS_VOICE_CFG_FMT_CONTAINER_SIZE               31:30 /* -W-VF */
#define NV_PAVS_VOICE_CFG_FMT_CONTAINER_SIZE_B8            0x00 /* -W--V */
#define NV_PAVS_VOICE_CFG_FMT_CONTAINER_SIZE_B16           0x01 /* -W--V */
#define NV_PAVS_VOICE_CFG_FMT_CONTAINER_SIZE_B32           0x03 /* -W--V */
#define NV_PAVS_VOICE_CFG_ENV0                             0x00000008 /* -W-4R */
#define NV_PAVS_VOICE_CFG_ENV0_EA_ATTACKRATE               11:0 /* -W-UF */
#define NV_PAVS_VOICE_CFG_ENV0_EA_DELAYTIME                23:12 /* -W-UF */
#define NV_PAVS_VOICE_CFG_ENV0_EF_PITCHSCALE               31:24 /* -W-UF */
#define NV_PAVS_VOICE_CFG_ENVA                             0x0000000C /* -W-4R */
#define NV_PAVS_VOICE_CFG_ENVA_EA_DECAYRATE                11:0 /* -W-UF */
#define NV_PAVS_VOICE_CFG_ENVA_EA_HOLDTIME                 23:12 /* -W-UF */
#define NV_PAVS_VOICE_CFG_ENVA_EA_SUSTAINLEVEL             31:24 /* -W-UF */
#define NV_PAVS_VOICE_CFG_ENV1                             0x00000010 /* -W-4R */
#define NV_PAVS_VOICE_CFG_ENV1_EF_ATTACKRATE               11:0 /* -W-UF */
#define NV_PAVS_VOICE_CFG_ENV1_EF_DELAYTIME                23:12 /* -W-UF */
#define NV_PAVS_VOICE_CFG_ENV1_EF_FCSCALE                  31:24 /* -W-UF */
#define NV_PAVS_VOICE_CFG_ENVF                             0x00000014 /* -W-4R */
#define NV_PAVS_VOICE_CFG_ENVF_EF_DECAYRATE                11:0 /* -W-UF */
#define NV_PAVS_VOICE_CFG_ENVF_EF_HOLDTIME                 23:12 /* -W-UF */
#define NV_PAVS_VOICE_CFG_ENVF_EF_SUSTAINLEVEL             31:24 /* -W-UF */
#define NV_PAVS_VOICE_CFG_MISC                             0x00000018 /* -W-4R */
#define NV_PAVS_VOICE_CFG_MISC_EF_RELEASERATE              11:0 /* -W-UF */
#define NV_PAVS_VOICE_CFG_MISC_LFOA_DELAYMODE              14:14 /* -W-VF */
#define NV_PAVS_VOICE_CFG_MISC_LFOA_DELAYMODE_NORMAL       0x00 /* -W--V */
#define NV_PAVS_VOICE_CFG_MISC_LFOA_DELAYMODE_DELAY        0x01 /* -W--V */
#define NV_PAVS_VOICE_CFG_MISC_LFOF_DELAYMODE              15:15 /* -W-VF */
#define NV_PAVS_VOICE_CFG_MISC_LFOF_DELAYMODE_NORMAL       0x00 /* -W--V */
#define NV_PAVS_VOICE_CFG_MISC_LFOF_DELAYMODE_DELAY        0x01 /* -W--V */
#define NV_PAVS_VOICE_CFG_MISC_FMODE                       17:16 /* -W-VF */
#define NV_PAVS_VOICE_CFG_MISC_FMODE_BYPASS                0x00 /* -W--V */
#define NV_PAVS_VOICE_CFG_MISC_FMODE_STEREO_DLS2           0x01 /* -W--V */
#define NV_PAVS_VOICE_CFG_MISC_FMODE_STEREO_P_EQ           0x02 /* -W--V */
#define NV_PAVS_VOICE_CFG_MISC_FMODE_MONO_DLS2             0x01 /* -W--V */
#define NV_PAVS_VOICE_CFG_MISC_FMODE_MONO_P_EQ             0x02 /* -W--V */
#define NV_PAVS_VOICE_CFG_MISC_FMODE_MONO_DLS2_P_EQ        0x03 /* -W--V */
#define NV_PAVS_VOICE_CFG_MISC_FMODE_THREED_DLS2_I3DL2     0x01 /* -W--V */
#define NV_PAVS_VOICE_CFG_MISC_FMODE_THREED_P_EQ_I3DL2     0x02 /* -W--V */
#define NV_PAVS_VOICE_CFG_MISC_FMODE_THREED_I3DL2          0x03 /* -W--V */
#define NV_PAVS_VOICE_CFG_MISC_BPQ                         20:18 /* -W-UF */
#define NV_PAVS_VOICE_CFG_MISC_NOTIFY_INTERRUPT            23:23 /* -W-VF */
#define NV_PAVS_VOICE_CFG_MISC_NOTIFY_INTERRUPT_DISABLE    0x00 /* -W--V */
#define NV_PAVS_VOICE_CFG_MISC_NOTIFY_INTERRUPT_ENABLE     0x01 /* -W--V */
#define NV_PAVS_VOICE_CFG_MISC_V_GSCNT                     31:24 /* -W-UF */
#define NV_PAVS_VOICE_CFG_HRTF_TARGET                      0x0000001C /* -W-4R */
#define NV_PAVS_VOICE_CFG_HRTF_TARGET_HANDLE               15:0 /* -W-UF */
#define NV_PAVS_VOICE_CUR_PSL_START                        0x00000020 /* -W-4R */
#define NV_PAVS_VOICE_CUR_PSL_START_BA                     23:0 /* -W-UF */
#define NV_PAVS_VOICE_CUR_PSL_START_SSLA_COUNT             7:0 /* -W-UF */
#define NV_PAVS_VOICE_CUR_PSL_START_SSLA_BASE              23:8 /* -W-UF */
#define NV_PAVS_VOICE_CUR_PSL_START_PS_7_0                 31:24 /* -W-UF */
#define NV_PAVS_VOICE_CUR_PSH_SAMPLE                       0x00000024 /* -W-4R */
#define NV_PAVS_VOICE_CUR_PSH_SAMPLE_LBO                   23:0 /* -W-UF */
#define NV_PAVS_VOICE_CUR_PSH_SAMPLE_CSI                   7:0 /* -W-UF */
#define NV_PAVS_VOICE_CUR_PSH_SAMPLE_CSSL                  23:8 /* -W-UF */
#define NV_PAVS_VOICE_CUR_PSH_SAMPLE_PS_15_8               31:24 /* -W-UF */
#define NV_PAVS_VOICE_CUR_VOLA                             0x00000028 /* -W-4R */
#define NV_PAVS_VOICE_CUR_VOLA_VOLUME6_B3_0                3:0 /* -W-UF */
#define NV_PAVS_VOICE_CUR_VOLA_VOLUME0                     15:4 /* -W-UF */
#define NV_PAVS_VOICE_CUR_VOLA_VOLUME7_B3_0                19:16 /* -W-UF */
#define NV_PAVS_VOICE_CUR_VOLA_VOLUME1                     31:20 /* -W-UF */
#define NV_PAVS_VOICE_CUR_VOLB                             0x0000002C /* -W-4R */
#define NV_PAVS_VOICE_CUR_VOLB_VOLUME6_B7_4                3:0 /* -W-UF */
#define NV_PAVS_VOICE_CUR_VOLB_VOLUME2                     15:4 /* -W-UF */
#define NV_PAVS_VOICE_CUR_VOLB_VOLUME7_B7_4                19:16 /* -W-UF */
#define NV_PAVS_VOICE_CUR_VOLB_VOLUME3                     31:20 /* -W-UF */
#define NV_PAVS_VOICE_CUR_VOLC                             0x00000030 /* -W-4R */
#define NV_PAVS_VOICE_CUR_VOLC_VOLUME6_B11_8               3:0 /* -W-UF */
#define NV_PAVS_VOICE_CUR_VOLC_VOLUME4                     15:4 /* -W-UF */
#define NV_PAVS_VOICE_CUR_VOLC_VOLUME7_B11_8               19:16 /* -W-UF */
#define NV_PAVS_VOICE_CUR_VOLC_VOLUME5                     31:20 /* -W-UF */
#define NV_PAVS_VOICE_CUR_ECNT                             0x00000034 /* -W-4R */
#define NV_PAVS_VOICE_CUR_ECNT_EACOUNT                     15:0 /* -W-UF */
#define NV_PAVS_VOICE_CUR_ECNT_EFCOUNT                     31:16 /* -W-UF */
#define NV_PAVS_VOICE_CUR_PRD                              0x00000038 /* -W-4R */
#define NV_PAVS_VOICE_CUR_PRD_ADDRESS                      31:0 /* -W-UF */
#define NV_PAVS_VOICE_CUR_FCA                              0x0000003C /* -W-4R */
#define NV_PAVS_VOICE_CUR_FCA_FC0                          15:0 /* -W-UF */
#define NV_PAVS_VOICE_CUR_FCA_FC1                          31:16 /* -W-UF */
#define NV_PAVS_VOICE_CUR_FCB                              0x00000040 /* -W-4R */
#define NV_PAVS_VOICE_CUR_FCB_FC2                          15:0 /* -W-UF */
#define NV_PAVS_VOICE_CUR_FCB_FC3                          31:16 /* -W-UF */
#define NV_PAVS_VOICE_CUR_FSA                              0x00000044 /* -W-4R */
#define NV_PAVS_VOICE_CUR_FSA_FS0                          23:0 /* -W-UF */
#define NV_PAVS_VOICE_CUR_FSA_FS3_B7_0                     31:24 /* -W-UF */
#define NV_PAVS_VOICE_CUR_FSB                              0x00000048 /* -W-4R */
#define NV_PAVS_VOICE_CUR_FSB_FS1                          23:0 /* -W-UF */
#define NV_PAVS_VOICE_CUR_FSB_FS3_B15_8                    31:24 /* -W-UF */
#define NV_PAVS_VOICE_CUR_FSC                              0x0000004C /* -W-4R */
#define NV_PAVS_VOICE_CUR_FSC_FS2                          23:0 /* -W-UF */
#define NV_PAVS_VOICE_CUR_FSC_FS3_B23_16                   31:24 /* -W-UF */
#define NV_PAVS_VOICE_PAR_LFO                              0x00000050 /* -W-4R */
#define NV_PAVS_VOICE_PAR_LFO_LFOALVL                      14:0 /* -W-UF */
#define NV_PAVS_VOICE_PAR_LFO_LFOADR                       15:15 /* -W-UF */
#define NV_PAVS_VOICE_PAR_LFO_LFOFLVL                      30:16 /* -W-UF */
#define NV_PAVS_VOICE_PAR_LFO_LFOFDR                       31:31 /* -W-UF */
#define NV_PAVS_VOICE_PAR_STATE                            0x00000054 /* -W-4R */
#define NV_PAVS_VOICE_PAR_STATE_FRACTION                   15:0 /* -W-UF */
#define NV_PAVS_VOICE_PAR_STATE_LFOA_DELAYMODE             16:16 /* -W-VF */
#define NV_PAVS_VOICE_PAR_STATE_LFOA_DELAYMODE_NORMAL      0x00 /* -W--V */
#define NV_PAVS_VOICE_PAR_STATE_LFOA_DELAYMODE_DELAY       0x01 /* -W--V */
#define NV_PAVS_VOICE_PAR_STATE_LFOF_DELAYMODE             17:17 /* -W-VF */
#define NV_PAVS_VOICE_PAR_STATE_LFOF_DELAYMODE_NORMAL      0x00 /* -W--V */
#define NV_PAVS_VOICE_PAR_STATE_LFOF_DELAYMODE_DELAY       0x01 /* -W--V */
#define NV_PAVS_VOICE_PAR_STATE_PAUSED                     18:18 /* -W-VF */
#define NV_PAVS_VOICE_PAR_STATE_PAUSED_NO                  0x00 /* -W--V */
#define NV_PAVS_VOICE_PAR_STATE_PAUSED_YES                 0x01 /* -W--V */
#define NV_PAVS_VOICE_PAR_STATE_SSL_INDICATOR              19:19 /* -W-VF */
#define NV_PAVS_VOICE_PAR_STATE_SSL_INDICATOR_A            0x00 /* -W--V */
#define NV_PAVS_VOICE_PAR_STATE_SSL_INDICATOR_B            0x01 /* -W--V */
#define NV_PAVS_VOICE_PAR_STATE_NEW_VOICE                  20:20 /* -W-VF */
#define NV_PAVS_VOICE_PAR_STATE_NEW_VOICE_NO               0x00 /* -W--V */
#define NV_PAVS_VOICE_PAR_STATE_NEW_VOICE_YES              0x01 /* -W--V */
#define NV_PAVS_VOICE_PAR_STATE_ACTIVE_VOICE               21:21 /* -W-VF */
#define NV_PAVS_VOICE_PAR_STATE_ACTIVE_VOICE_NO            0x00 /* -W--V */
#define NV_PAVS_VOICE_PAR_STATE_ACTIVE_VOICE_YES           0x01 /* -W--V */
#define NV_PAVS_VOICE_PAR_STATE_VOICE_START                22:22 /* -W-VF */
#define NV_PAVS_VOICE_PAR_STATE_VOICE_START_LOOPED         0x00 /* -W--V */
#define NV_PAVS_VOICE_PAR_STATE_VOICE_START_FIRSTPASS      0x01 /* -W--V */
#define NV_PAVS_VOICE_PAR_STATE_PRD_VALID                  23:23 /* -W-VF */
#define NV_PAVS_VOICE_PAR_STATE_PRD_VALID_NO               0x00 /* -W--V */
#define NV_PAVS_VOICE_PAR_STATE_PRD_VALID_YES              0x01 /* -W--V */
#define NV_PAVS_VOICE_PAR_STATE_EFCUR                      27:24 /* -W-VF */
#define NV_PAVS_VOICE_PAR_STATE_EFCUR_OFF                  0x00 /* -W--V */
#define NV_PAVS_VOICE_PAR_STATE_EFCUR_DELAY                0x01 /* -W--V */
#define NV_PAVS_VOICE_PAR_STATE_EFCUR_ATTACK               0x02 /* -W--V */
#define NV_PAVS_VOICE_PAR_STATE_EFCUR_HOLD                 0x03 /* -W--V */
#define NV_PAVS_VOICE_PAR_STATE_EFCUR_DECAY                0x04 /* -W--V */
#define NV_PAVS_VOICE_PAR_STATE_EFCUR_SUSTAIN              0x05 /* -W--V */
#define NV_PAVS_VOICE_PAR_STATE_EFCUR_RELEASE              0x06 /* -W--V */
#define NV_PAVS_VOICE_PAR_STATE_EFCUR_FORCE_RELEASE        0x07 /* -W--V */
#define NV_PAVS_VOICE_PAR_STATE_EACUR                      31:28 /* -W-VF */
#define NV_PAVS_VOICE_PAR_STATE_EACUR_OFF                  0x00 /* -W--V */
#define NV_PAVS_VOICE_PAR_STATE_EACUR_DELAY                0x01 /* -W--V */
#define NV_PAVS_VOICE_PAR_STATE_EACUR_ATTACK               0x02 /* -W--V */
#define NV_PAVS_VOICE_PAR_STATE_EACUR_HOLD                 0x03 /* -W--V */
#define NV_PAVS_VOICE_PAR_STATE_EACUR_DECAY                0x04 /* -W--V */
#define NV_PAVS_VOICE_PAR_STATE_EACUR_SUSTAIN              0x05 /* -W--V */
#define NV_PAVS_VOICE_PAR_STATE_EACUR_RELEASE              0x06 /* -W--V */
#define NV_PAVS_VOICE_PAR_STATE_EACUR_FORCE_RELEASE        0x07 /* -W--V */
#define NV_PAVS_VOICE_PAR_OFFSET                           0x00000058 /* -W-4R */
#define NV_PAVS_VOICE_PAR_OFFSET_CBO                       23:0 /* -W-UF */
#define NV_PAVS_VOICE_PAR_OFFSET_CSO                       23:0 /* -W-UF */
#define NV_PAVS_VOICE_PAR_OFFSET_EALVL                     31:24 /* -W-UF */
#define NV_PAVS_VOICE_PAR_NEXT                             0x0000005C /* -W-4R */
#define NV_PAVS_VOICE_PAR_NEXT_SSLB_COUNT                  7:0 /* -W-UF */
#define NV_PAVS_VOICE_PAR_NEXT_SSLB_BASE                   23:8 /* -W-UF */
#define NV_PAVS_VOICE_PAR_NEXT_EBO                         23:0 /* -W-UF */
#define NV_PAVS_VOICE_PAR_NEXT_EFLVL                       31:24 /* -W-UF */
#define NV_PAVS_VOICE_TAR_VOLA                             0x00000060 /* -W-4R */
#define NV_PAVS_VOICE_TAR_VOLA_VOLUME6_B3_0                3:0 /* -W-UF */
#define NV_PAVS_VOICE_TAR_VOLA_VOLUME0                     15:4 /* -W-UF */
#define NV_PAVS_VOICE_TAR_VOLA_VOLUME7_B3_0                19:16 /* -W-UF */
#define NV_PAVS_VOICE_TAR_VOLA_VOLUME1                     31:20 /* -W-UF */
#define NV_PAVS_VOICE_TAR_VOLB                             0x00000064 /* -W-4R */
#define NV_PAVS_VOICE_TAR_VOLB_VOLUME6_B7_4                3:0 /* -W-UF */
#define NV_PAVS_VOICE_TAR_VOLB_VOLUME2                     15:4 /* -W-UF */
#define NV_PAVS_VOICE_TAR_VOLB_VOLUME7_B7_4                19:16 /* -W-UF */
#define NV_PAVS_VOICE_TAR_VOLB_VOLUME3                     31:20 /* -W-UF */
#define NV_PAVS_VOICE_TAR_VOLC                             0x00000068 /* -W-4R */
#define NV_PAVS_VOICE_TAR_VOLC_VOLUME6_B11_8               3:0 /* -W-UF */
#define NV_PAVS_VOICE_TAR_VOLC_VOLUME4                     15:4 /* -W-UF */
#define NV_PAVS_VOICE_TAR_VOLC_VOLUME7_B11_8               19:16 /* -W-UF */
#define NV_PAVS_VOICE_TAR_VOLC_VOLUME5                     31:20 /* -W-UF */
#define NV_PAVS_VOICE_TAR_LFO_ENV                          0x0000006C /* -W-4R */
#define NV_PAVS_VOICE_TAR_LFO_ENV_EA_RELEASERATE           11:0 /* -W-UF */
#define NV_PAVS_VOICE_TAR_LFO_ENV_LFOADLT                  21:12 /* -W-UF */
#define NV_PAVS_VOICE_TAR_LFO_ENV_LFOFDLT                  31:22 /* -W-UF */
#define NV_PAVS_VOICE_TAR_LFO_MOD                          0x00000070 /* -W-4R */
#define NV_PAVS_VOICE_TAR_LFO_MOD_LFOAAM                   7:0 /* -W-UF */
#define NV_PAVS_VOICE_TAR_LFO_MOD_LFOAFM                   15:8 /* -W-UF */
#define NV_PAVS_VOICE_TAR_LFO_MOD_LFOAFC                   23:16 /* -W-UF */
#define NV_PAVS_VOICE_TAR_LFO_MOD_LFOFFM                   31:24 /* -W-UF */
#define NV_PAVS_VOICE_TAR_FCA                              0x00000074 /* -W-4R */
#define NV_PAVS_VOICE_TAR_FCA_FC0                          15:0 /* -W-UF */
#define NV_PAVS_VOICE_TAR_FCA_FC1                          31:16 /* -W-UF */
#define NV_PAVS_VOICE_TAR_FCB                              0x00000078 /* -W-4R */
#define NV_PAVS_VOICE_TAR_FCB_FC2                          15:0 /* -W-UF */
#define NV_PAVS_VOICE_TAR_FCB_FC3                          31:16 /* -W-UF */
#define NV_PAVS_VOICE_TAR_PITCH_LINK                       0x0000007c /* -W-4R */
#define NV_PAVS_VOICE_TAR_PITCH_LINK_NEXT_VOICE_HANDLE     15:0 /* -W-UF */
#define NV_PAVS_VOICE_TAR_PITCH_LINK_PITCH                 31:16 /* -W-UF */
#define NV_PAHRTFC                                         0x0000035F:0x00000300 /* RW--D */
#define NV_PAHRTFC_SIZE                                    0x00000080 /* RW--V */
#define NV_PAHRTFC_SIZE_LG2                                0x7 /* RW--V */
#define NV_PAHRTFC_HRIR12A(i)                              (0x00000300+(i)*12) /* -W-4A */
#define NV_PAHRTFC_HRIR12A__SIZE_1                         7 /* */ 
#define NV_PAHRTFC_HRIR12A_LEFT0                           11:0 /* -W-UF */
#define NV_PAHRTFC_HRIR12A_RIGHT0                          23:12 /* -W-UF */
#define NV_PAHRTFC_HRIR12A_LEFT1_B7_0                      31:24 /* -W-UF */
#define NV_PAHRTFC_HRIR12B(i)                              (0x00000304+(i)*12) /* -W-4A */
#define NV_PAHRTFC_HRIR12B__SIZE_1                         7 /* */ 
#define NV_PAHRTFC_HRIR12B_LEFT2                           11:0 /* -W-UF */
#define NV_PAHRTFC_HRIR12B_RIGHT2                          23:12 /* -W-UF */
#define NV_PAHRTFC_HRIR12B_RIGHT1_B11_8                    27:24 /* -W-UF */
#define NV_PAHRTFC_HRIR12B_LEFT1_B11_8                     31:28 /* -W-UF */
#define NV_PAHRTFC_HRIR12C(i)                              (0x00000308+(i)*12) /* -W-4A */
#define NV_PAHRTFC_HRIR12C__SIZE_1                         7 /* */ 
#define NV_PAHRTFC_HRIR12C_LEFT3                           11:0 /* -W-UF */
#define NV_PAHRTFC_HRIR12C_RIGHT3                          23:12 /* -W-UF */
#define NV_PAHRTFC_HRIR12C_RIGHT1_B7_0                     31:24 /* -W-UF */
#define NV_PAHRTFC_HRIR12D                                 0x00000354 /* -W-4R */
#define NV_PAHRTFC_HRIR12D_LEFT28                          11:0 /* -W-UF */
#define NV_PAHRTFC_HRIR12D_RIGHT28                         23:12 /* -W-UF */
#define NV_PAHRTFC_HRIR12D_LEFT29_B7_0                     31:24 /* -W-UF */
#define NV_PAHRTFC_HRIR12E                                 0x00000358 /* -W-4R */
#define NV_PAHRTFC_HRIR12E_LEFT30                          11:0 /* -W-UF */
#define NV_PAHRTFC_HRIR12E_RIGHT30                         23:12 /* -W-UF */
#define NV_PAHRTFC_HRIR12E_RIGHT29_B11_8                   27:24 /* -W-UF */
#define NV_PAHRTFC_HRIR12E_LEFT29_B11_8                    31:28 /* -W-UF */
#define NV_PAHRTFC_HRIR12X                                 0x0000035C /* -W-4R */
#define NV_PAHRTFC_HRIR12X_ITD                             15:0 /* -W-UF */
#define NV_PAHRTFC_HRIR12X_RIGHT29_B7_0                    31:24 /* -W-UF */
#define NV_PAHRTFT                                         0x000003AF:0x00000380 /* RW--D */
#define NV_PAHRTFT_SIZE                                    0x00000040 /* RW--V */
#define NV_PAHRTFT_SIZE_LG2                                0x6 /* RW--V */
#define NV_PAHRTFT_HRIR8A(i)                               (0x00000380+(i)*4) /* -W-4A */
#define NV_PAHRTFT_HRIR8A__SIZE_1                          15 /* */ 
#define NV_PAHRTFT_HRIR8A_LEFT0                            7:0 /* -W-UF */
#define NV_PAHRTFT_HRIR8A_RIGHT0                           15:8 /* -W-UF */
#define NV_PAHRTFT_HRIR8A_LEFT1                            23:16 /* -W-UF */
#define NV_PAHRTFT_HRIR8A_RIGHT1                           31:24 /* -W-UF */
#define NV_PAHRTFT_HRIR8X                                  0x000003BC /* -W-4R */
#define NV_PAHRTFT_HRIR8X_LEFT30                           7:0 /* -W-UF */
#define NV_PAHRTFT_HRIR8X_RIGHT30                          15:8 /* -W-UF */
#define NV_PAHRTFT_HRIR8X_ITD                              31:16 /* -W-UF */
#define NV_PSSL                                            0x00001FFF:0x00001000 /* RW--D */
#define NV_PSSL_SIZE                                       0x00001000 /* RW--V */
#define NV_PSSL_SIZE_LG2                                   0xc /* RW--V */
#define NV_PSSL_PRD_ADDRESS(i)                             (0x00001000+(i)*8) /* -W-4A */
#define NV_PSSL_PRD_ADDRESS__SIZE_1                        512 /* */ 
#define NV_PSSL_PRD_ADDRESS_PARAMETER                      31:0 /* -W-UF */
#define NV_PSSL_PRD_CONTROL(i)                             (0x00001004+(i)*8) /* -W-4A */
#define NV_PSSL_PRD_CONTROL__SIZE_1                        512 /* */ 
#define NV_PSSL_PRD_CONTROL_LENGTH                         15:0 /* -W-UF */
#define NV_PSSL_PRD_CONTROL_CONTAINER_SIZE                 17:16 /* -W-VF */
#define NV_PSSL_PRD_CONTROL_CONTAINER_SIZE_B8              0x00 /* -W--V */
#define NV_PSSL_PRD_CONTROL_CONTAINER_SIZE_B16             0x01 /* -W--V */
#define NV_PSSL_PRD_CONTROL_CONTAINER_SIZE_B32             0x03 /* -W--V */
#define NV_PSSL_PRD_CONTROL_SAMPLES_PER_BLOCK              22:18 /* -W-UF */
#define NV_PSSL_PRD_CONTROL_STEREO                         23:23 /* -W-VF */
#define NV_PSSL_PRD_CONTROL_STEREO_NOTOK                   0x00 /* -W--V */
#define NV_PSSL_PRD_CONTROL_STEREO_OK                      0x01 /* -W--V */
#define NV_PSSL_PRD_CONTROL_OWN                            24:24 /* -W-VF */
#define NV_PSSL_PRD_CONTROL_OWN_HW                         0x00 /* -W--V */
#define NV_PSSL_PRD_CONTROL_OWN_NOT_HW                     0x01 /* -W--V */
#define NV_PSSL_PRD_CONTROL_IOC                            31:31 /* -W-VF */
#define NV_PSSL_PRD_CONTROL_IOC_DISABLE                    0x00 /* -W--V */
#define NV_PSSL_PRD_CONTROL_IOC_ENABLE                     0x01 /* -W--V */
#define NV_PSGE_SIZE                                       0x00000008 /* RW--V */
#define NV_PSGE_SIZE_LG2                                   0x3 /* RW--V */
#define NV_PAPU_BITS                                       18:0 /* RW--F */
#define NV_PAPU_W                                          19 /* RW--V */
#define NV_PAPU_SAVED_BITS                                 18:2 /* RW--F */
#define NV_PAPU_SAVED_W                                    17 /* RW--V */
#define NV_PAPU_SUBSPACE_BITS                              18:16 /* RW--F */
#define NV_PAPU_SUBSPACE_PRIV                              0x00000000 /* RW--V */
#define NV_PAPU_SUBSPACE_NV1BA0                            0x00000002 /* RW--V */
#define NV_PAPU_SUBSPACE_GP                                0x00000003 /* RW--V */
#define NV_PAPU_SUBSPACE_NV1BXX                            0x00000004 /* RW--V */
#define NV_PAPU_SUBSPACE_EP                                0x00000005 /* RW--V */
#define NV_PAPU_PRIV_BITS                                  15:0 /* RW--F */
#define NV_PAPU_PRIV_SAVED_BITS                            15:2 /* RW--F */
#define NV_PAPU_PRIV_SAVED_W                               14 /* RW--V */
#define NV_PAPU_PRIV_SUBUNIT_BITS                          15:12 /* RW--F */
#define NV_PAPU_PRIV_SUBUNIT_CFG                           0x00000000 /* RW--V */
#define NV_PAPU_PRIV_SUBUNIT_FE                            0x00000001 /* RW--V */
#define NV_PAPU_PRIV_SUBUNIT_SE                            0x00000002 /* RW--V */
#define NV_PAPU_PRIV_SUBUNIT_SE_GP                         0x00000003 /* RW--V */
#define NV_PAPU_PRIV_SUBUNIT_SE_EP                         0x00000004 /* RW--V */
#define NV_PAPU_NV1BA0_BITS                                15:0 /* RW--F */
#define NV_PAPU                                            0x0007FFFF:0x00000000 /* RW--D */
#define NV_PAPU_PRIV                                       0x0000FFFF:0x00000000 /* RW--M */
#define NV_PAPU_NV1BA0                                     0x0002FFFF:0x00020000 /* RW--C */
#define NV_PAPU_GP                                         0x0003FFFF:0x00030000 /* RW--M */
#define NV_PAPU_NV1BXX                                     0x0004FFFF:0x00040000 /* RW--C */
#define NV_PAPU_EP                                         0x0005FFFF:0x00050000 /* RW--M */
#define NV_PAPU_ISTS                                       0x00001000 /* RW-4R */
#define NV_PAPU_ISTS_GINTSTS                               0:0 /* R--VF */
#define NV_PAPU_ISTS_GINTSTS_NO_INTR                       0x00000000 /* R-I-V */
#define NV_PAPU_ISTS_GINTSTS_INTR                          0x00000001 /* R---V */
#define NV_PAPU_ISTS_DWINTSTS                              1:1 /* RW-VF */
#define NV_PAPU_ISTS_DWINTSTS_NO_INTR                      0x00000000 /* R-I-V */
#define NV_PAPU_ISTS_DWINTSTS_INTR                         0x00000001 /* R---V */
#define NV_PAPU_ISTS_DWINTSTS_CLR                          0x00000001 /* -W--C */
#define NV_PAPU_ISTS_RTWSTS                                2:2 /* R--VF */
#define NV_PAPU_ISTS_RTWSTS_NO_INTR                        0x00000000 /* R-I-V */
#define NV_PAPU_ISTS_RTWSTS_INTR                           0x00000001 /* R---V */
#define NV_PAPU_ISTS_DPINTSTS                              3:3 /* RW-VF */
#define NV_PAPU_ISTS_DPINTSTS_NO_INTR                      0x00000000 /* R-I-V */
#define NV_PAPU_ISTS_DPINTSTS_INTR                         0x00000001 /* R---V */
#define NV_PAPU_ISTS_DPINTSTS_CLR                          0x00000001 /* -W--C */
#define NV_PAPU_ISTS_FETINTSTS                             4:4 /* RW-VF */
#define NV_PAPU_ISTS_FETINTSTS_NO_INTR                     0x00000000 /* R-I-V */
#define NV_PAPU_ISTS_FETINTSTS_INTR                        0x00000001 /* R---V */
#define NV_PAPU_ISTS_FETINTSTS_CLR                         0x00000001 /* -W--C */
#define NV_PAPU_ISTS_FENINTSTS                             5:5 /* RW-VF */
#define NV_PAPU_ISTS_FENINTSTS_NO_INTR                     0x00000000 /* R-I-V */
#define NV_PAPU_ISTS_FENINTSTS_INTR                        0x00000001 /* R---V */
#define NV_PAPU_ISTS_FENINTSTS_CLR                         0x00000001 /* -W--C */
#define NV_PAPU_ISTS_FEVINTSTS                             6:6 /* RW-VF */
#define NV_PAPU_ISTS_FEVINTSTS_NO_INTR                     0x00000000 /* R-I-V */
#define NV_PAPU_ISTS_FEVINTSTS_INTR                        0x00000001 /* R---V */
#define NV_PAPU_ISTS_FEVINTSTS_CLR                         0x00000001 /* -W--C */
#define NV_PAPU_ISTS_FEOINTSTS                             7:7 /* RW-VF */
#define NV_PAPU_ISTS_FEOINTSTS_NO_INTR                     0x00000000 /* R-I-V */
#define NV_PAPU_ISTS_FEOINTSTS_INTR                        0x00000001 /* R---V */
#define NV_PAPU_ISTS_FEOINTSTS_CLR                         0x00000001 /* -W--C */
#define NV_PAPU_ISTS_GPMINTSTS                             8:8 /* RW-VF */
#define NV_PAPU_ISTS_GPMINTSTS_NO_INTR                     0x00000000 /* R-I-V */
#define NV_PAPU_ISTS_GPMINTSTS_INTR                        0x00000001 /* R---V */
#define NV_PAPU_ISTS_GPMINTSTS_CLR                         0x00000001 /* -W--C */
#define NV_PAPU_ISTS_GPNINTSTS                             9:9 /* RW-VF */
#define NV_PAPU_ISTS_GPNINTSTS_NO_INTR                     0x00000000 /* R-I-V */
#define NV_PAPU_ISTS_GPNINTSTS_INTR                        0x00000001 /* R---V */
#define NV_PAPU_ISTS_GPNINTSTS_CLR                         0x00000001 /* -W--C */
#define NV_PAPU_ISTS_EPMINTSTS                             10:10 /* RW-VF */
#define NV_PAPU_ISTS_EPMINTSTS_NO_INTR                     0x00000000 /* R-I-V */
#define NV_PAPU_ISTS_EPMINTSTS_INTR                        0x00000001 /* R---V */
#define NV_PAPU_ISTS_EPMINTSTS_CLR                         0x00000001 /* -W--C */
#define NV_PAPU_ISTS_EPNINTSTS                             11:11 /* RW-VF */
#define NV_PAPU_ISTS_EPNINTSTS_NO_INTR                     0x00000000 /* R-I-V */
#define NV_PAPU_ISTS_EPNINTSTS_INTR                        0x00000001 /* R---V */
#define NV_PAPU_ISTS_EPNINTSTS_CLR                         0x00000001 /* -W--C */
#define NV_PAPU_ISTS_BITS                                  11:0 /* RW-VF */
#define NV_PAPU_ISTS_MOD_BITS                              11:1 /* RW-VF */
#define NV_PAPU_ISTS_MOD_UPPER_BITS                        11:3 /* RW-VF */
#define NV_PAPU_ISTS_MOD_LOWER_BITS                        1:1 /* RW-VF */
#define NV_PAPU_IEN                                        0x00001004 /* RW-4R */
#define NV_PAPU_IEN_GINTEN                                 0:0 /* R--VF */
#define NV_PAPU_IEN_GINTEN_DISABLED                        0x00000000 /* RWI-V */
#define NV_PAPU_IEN_GINTEN_ENABLED                         0x00000001 /* RW--V */
#define NV_PAPU_IEN_DWINTEN                                1:1 /* RW-VF */
#define NV_PAPU_IEN_DWINTEN_DISABLED                       0x00000000 /* RWI-V */
#define NV_PAPU_IEN_DWINTEN_ENABLED                        0x00000001 /* RW--V */
#define NV_PAPU_IEN_DPINTEN                                3:3 /* RW-VF */
#define NV_PAPU_IEN_DPINTEN_DISABLED                       0x00000000 /* RWI-V */
#define NV_PAPU_IEN_DPINTEN_ENABLED                        0x00000001 /* RW--V */
#define NV_PAPU_IEN_FETINTEN                               4:4 /* RW-VF */
#define NV_PAPU_IEN_FETINTEN_DISABLED                      0x00000000 /* RWI-V */
#define NV_PAPU_IEN_FETINTEN_ENABLED                       0x00000001 /* RW--V */
#define NV_PAPU_IEN_FENINTEN                               5:5 /* RW-VF */
#define NV_PAPU_IEN_FENINTEN_DISABLED                      0x00000000 /* RWI-V */
#define NV_PAPU_IEN_FENINTEN_ENABLED                       0x00000001 /* RW--V */
#define NV_PAPU_IEN_FEVINTEN                               6:6 /* RW-VF */
#define NV_PAPU_IEN_FEVINTEN_DISABLED                      0x00000000 /* RWI-V */
#define NV_PAPU_IEN_FEVINTEN_ENABLED                       0x00000001 /* RW--V */
#define NV_PAPU_IEN_FEOINTEN                               7:7 /* RW-VF */
#define NV_PAPU_IEN_FEOINTEN_DISABLED                      0x00000000 /* RWI-V */
#define NV_PAPU_IEN_FEOINTEN_ENABLED                       0x00000001 /* RW--V */
#define NV_PAPU_IEN_GPMINTEN                               8:8 /* RW-VF */
#define NV_PAPU_IEN_GPMINTEN_DISABLED                      0x00000000 /* RWI-V */
#define NV_PAPU_IEN_GPMINTEN_ENABLED                       0x00000001 /* RW--V */
#define NV_PAPU_IEN_GPNINTEN                               9:9 /* RW-VF */
#define NV_PAPU_IEN_GPNINTEN_DISABLED                      0x00000000 /* RWI-V */
#define NV_PAPU_IEN_GPNINTEN_ENABLED                       0x00000001 /* RW--V */
#define NV_PAPU_IEN_EPMINTEN                               10:10 /* RW-VF */
#define NV_PAPU_IEN_EPMINTEN_DISABLED                      0x00000000 /* RWI-V */
#define NV_PAPU_IEN_EPMINTEN_ENABLED                       0x00000001 /* RW--V */
#define NV_PAPU_IEN_EPNINTEN                               11:11 /* RW-VF */
#define NV_PAPU_IEN_EPNINTEN_DISABLED                      0x00000000 /* RWI-V */
#define NV_PAPU_IEN_EPNINTEN_ENABLED                       0x00000001 /* RW--V */
#define NV_PAPU_IEN_BITS                                   11:0 /* RW-VF */
#define NV_PAPU_IEN_SETTABLE_MASK                          0x00000ffb /* RW--V */
#define NV_PAPU_ISET                                       0x00001008 /* -W-4R */
#define NV_PAPU_ISET_DWINTSET                              1:1 /* -W-VF */
#define NV_PAPU_ISET_DWINTSET_NO_INTR                      0x00000000 /* -W--V */
#define NV_PAPU_ISET_DWINTSET_INTR                         0x00000001 /* -W--V */
#define NV_PAPU_ISET_DPINTSET                              3:3 /* -W-VF */
#define NV_PAPU_ISET_DPINTSET_NO_INTR                      0x00000000 /* -W--V */
#define NV_PAPU_ISET_DPINTSET_INTR                         0x00000001 /* -W--V */
#define NV_PAPU_ISET_FETINTSET                             4:4 /* -W-VF */
#define NV_PAPU_ISET_FETINTSET_NO_INTR                     0x00000000 /* -W--V */
#define NV_PAPU_ISET_FETINTSET_INTR                        0x00000001 /* -W--V */
#define NV_PAPU_ISET_FENINTSET                             5:5 /* -W-VF */
#define NV_PAPU_ISET_FENINTSET_NO_INTR                     0x00000000 /* -W--V */
#define NV_PAPU_ISET_FENINTSET_INTR                        0x00000001 /* -W--V */
#define NV_PAPU_ISET_FEVINTSET                             6:6 /* -W-VF */
#define NV_PAPU_ISET_FEVINTSET_NO_INTR                     0x00000000 /* -W--V */
#define NV_PAPU_ISET_FEVINTSET_INTR                        0x00000001 /* -W--V */
#define NV_PAPU_ISET_FEOINTSET                             7:7 /* -W-VF */
#define NV_PAPU_ISET_FEOINTSET_NO_INTR                     0x00000000 /* -W--V */
#define NV_PAPU_ISET_FEOINTSET_INTR                        0x00000001 /* -W--V */
#define NV_PAPU_ISET_GPMINTSET                             8:8 /* -W-VF */
#define NV_PAPU_ISET_GPMINTSET_NO_INTR                     0x00000000 /* -W--V */
#define NV_PAPU_ISET_GPMINTSET_INTR                        0x00000001 /* -W--V */
#define NV_PAPU_ISET_GPNINTSET                             9:9 /* -W-VF */
#define NV_PAPU_ISET_GPNINTSET_NO_INTR                     0x00000000 /* -W--V */
#define NV_PAPU_ISET_GPNINTSET_INTR                        0x00000001 /* -W--V */
#define NV_PAPU_ISET_EPMINTSET                             10:10 /* -W-VF */
#define NV_PAPU_ISET_EPMINTSET_NO_INTR                     0x00000000 /* -W--V */
#define NV_PAPU_ISET_EPMINTSET_INTR                        0x00000001 /* -W--V */
#define NV_PAPU_ISET_EPNINTSET                             11:11 /* -W-VF */
#define NV_PAPU_ISET_EPNINTSET_NO_INTR                     0x00000000 /* -W--V */
#define NV_PAPU_ISET_EPNINTSET_INTR                        0x00000001 /* -W--V */
#define NV_PAPU_ISET_BITS                                  11:1 /* RW-VF */
#define NV_PAPU_PRIV_FEMAJ_BITS                            11:8 /* RW--F */
#define NV_PAPU_PRIV_FEMAJ_INTR                            0x00000000 /* RW--V */
#define NV_PAPU_PRIV_FEMAJ_METH                            0x00000001 /* RW--V */
#define NV_PAPU_PRIV_FEMAJ_PERF                            0x00000002 /* RW--V */
#define NV_PAPU_PRIV_FEMAJ_INTERNAL                        0x00000003 /* RW--V */
#define NV_PAPU_PRIV_FEMAJ_UMETHFIFO                       0x00000004 /* RW--V */
#define NV_PAPU_PRIV_FEMIN_BITS                            7:0 /* RW--F */
#define NV_PAPU_FECTL                                      0x00001100 /* RW-4R */
#define NV_PAPU_FECTL_FENTYP                               0:0 /* RW-VF */
#define NV_PAPU_FECTL_FENTYP_NON_ISO                       0x00000000 /* RWI-V */
#define NV_PAPU_FECTL_FENTYP_ISO                           0x00000001 /* RW--V */
#define NV_PAPU_FECTL_FEMRTYP                              1:1 /* RW-VF */
#define NV_PAPU_FECTL_FEMRTYP_NON_ISO                      0x00000000 /* RWI-V */
#define NV_PAPU_FECTL_FEMRTYP_ISO                          0x00000001 /* RW--V */
#define NV_PAPU_FECTL_FEMWTYP                              2:2 /* RW-VF */
#define NV_PAPU_FECTL_FEMWTYP_NON_ISO                      0x00000000 /* RWI-V */
#define NV_PAPU_FECTL_FEMWTYP_ISO                          0x00000001 /* RW--V */
#define NV_PAPU_FECTL_FENINT                               3:3 /* RW-VF */
#define NV_PAPU_FECTL_FENINT_DISABLED                      0x00000000 /* RWI-V */
#define NV_PAPU_FECTL_FENINT_ENABLED                       0x00000001 /* RW--V */
#define NV_PAPU_FECTL_FEPRIVLOCK                           4:4 /* RW-VF */
#define NV_PAPU_FECTL_FEPRIVLOCK_UNLOCKED                  0x00000000 /* RWI-V */
#define NV_PAPU_FECTL_FEPRIVLOCK_LOCKED                    0x00000001 /* RW--V */
#define NV_PAPU_FECTL_FEMETHMODE                           7:5 /* RW-VF */
#define NV_PAPU_FECTL_FEMETHMODE_FREE_RUNNING              0x00000000 /* RWI-V */
#define NV_PAPU_FECTL_FEMETHMODE_HALTED                    0x00000004 /* RW--V */
#define NV_PAPU_FECTL_FEMETHMODE_TRAPPED                   0x00000007 /* RW--V */
#define NV_PAPU_FECTL_FETRAPREASON                         11:8 /* RW-VF */
#define NV_PAPU_FECTL_FETRAPREASON_NONE                    0x00000000 /* RW--V */
#define NV_PAPU_FECTL_FETRAPREASON_NOT_IMPLEMENTED         0x00000001 /* RW--V */
#define NV_PAPU_FECTL_FETRAPREASON_METHOD_UNKNOWN          0x00000002 /* RW--V */
#define NV_PAPU_FECTL_FETRAPREASON_BAD_ARGUMENT            0x00000003 /* RW--V */
#define NV_PAPU_FECTL_FETRAPREASON_CURRENT_NOT_SET         0x00000004 /* RW--V */
#define NV_PAPU_FECTL_FETRAPREASON_ANTECEDENT_NOT_SET      0x00000005 /* RW--V */
#define NV_PAPU_FECTL_FETRAPREASON_VOICE_ACTIVE            0x00000006 /* RW--V */
#define NV_PAPU_FECTL_FETRAPREASON_NOT_DATA_TYPE_BUFFER    0x00000007 /* RW--V */
#define NV_PAPU_FECTL_FETRAPREASON_BAD_LIST_POINTER        0x00000008 /* RW--V */
#define NV_PAPU_FECTL_FETRAPREASON_CURRENT_VOICE_NOT_3D    0x00000009 /* RW--V */
#define NV_PAPU_FECTL_FETRAPREASON_CTXPA_INVALID           0x0000000a /* RW--V */
#define NV_PAPU_FECTL_FETRAPREASON_REQUESTED               0x0000000f /* RW--V */
#define NV_PAPU_FECTL_FEPIOCLASS                           12:12 /* RW-VF */
#define NV_PAPU_FECTL_FEPIOCLASS_NON_ISO                   0x00000000 /* RWI-V */
#define NV_PAPU_FECTL_FEPIOCLASS_ISO                       0x00000001 /* RW--V */
#define NV_PAPU_FECTL_FEMETH_PRIVLOCK                      13:13 /* RW-VF */
#define NV_PAPU_FECTL_FEMETH_PRIVLOCK_NOT_DISABLED         0x00000000 /* RWI-V */
#define NV_PAPU_FECTL_FEMETH_PRIVLOCK_DISABLED             0x00000001 /* RW--V */
#define NV_PAPU_FECTL_FEMETHORIGIN                         14:14 /* R--VF */
#define NV_PAPU_FECTL_FEMETHORIGIN_USER                    0x00000000 /* R---V */
#define NV_PAPU_FECTL_FEMETHORIGIN_INTERNAL                0x00000001 /* R---V */
#define NV_PAPU_FECTL_FESESSLCTXPA_VALID                   15:15 /* R---V */
#define NV_PAPU_FECTL_FESESSLCTXPA_VALID_NO                0x00000000 /* R-I-V */
#define NV_PAPU_FECTL_FESESSLCTXPA_VALID_YES               0x00000001 /* R---V */
#define NV_PAPU_FECTL_FESESGECTXPA_VALID                   16:16 /* R---V */
#define NV_PAPU_FECTL_FESESGECTXPA_VALID_NO                0x00000000 /* R-I-V */
#define NV_PAPU_FECTL_FESESGECTXPA_VALID_YES               0x00000001 /* R---V */
#define NV_PAPU_FECTL_FEGPSGECTXPA_VALID                   17:17 /* R---V */
#define NV_PAPU_FECTL_FEGPSGECTXPA_VALID_NO                0x00000000 /* R-I-V */
#define NV_PAPU_FECTL_FEGPSGECTXPA_VALID_YES               0x00000001 /* R---V */
#define NV_PAPU_FECTL_BITS                                 17:0 /* RW-VF */
#define NV_PAPU_FECTL_WR_BITS                              13:0 /* RW-VF */
#define NV_PAPU_FEMAXV                                     0x00001104 /* RW-4R */
#define NV_PAPU_FEMAXV_VALUE                               15:0 /* RWXUF */
#define NV_PAPU_FEMAXV_INIT                                0x00000000 /* RWI-V */
#define NV_PAPU_FEMAXV_BITS                                15:0 /* RW-VF */
#define NV_PAPU_FEMAXTV                                    0x00001108 /* RW-4R */
#define NV_PAPU_FEMAXTV_VALUE                              15:0 /* RWXUF */
#define NV_PAPU_FEMAXTV_INIT                               0x00000000 /* RWI-V */
#define NV_PAPU_FEMAXTV_BITS                               15:0 /* RW-VF */
#define NV_PAPU_FEAMAXV                                    0x0000110c /* R--4R */
#define NV_PAPU_FEAMAXV_VALUE                              15:0 /* R-XUF */
#define NV_PAPU_FEAMAXV_UNLIMITED                          0x0000ffff /* R---V */
#define NV_PAPU_FEAMAXV_BITS                               15:0 /* R--VF */
#define NV_PAPU_FECV                                       0x00001110 /* RW-4R */
#define NV_PAPU_FECV_VALUE                                 15:0 /* RWXUF */
#define NV_PAPU_FECV_VALUE_NULL                            0x0000ffff /* RWI-V */
#define NV_PAPU_FECV_BITS                                  15:0 /* RW-VF */
#define NV_PAPU_FECVDT                                     0x00001114 /* RW-4R */
#define NV_PAPU_FECVDT_DATA_TYPE                           1:0 /* RWXUF */
#define NV_PAPU_FECVDT_DATA_TYPE_BUFFER                    0x00000000 /* RW--V */
#define NV_PAPU_FECVDT_DATA_TYPE_STREAM                    0x00000001 /* RW--V */
#define NV_PAPU_FECVDT_DATA_TYPE_UNCACHED                  0x00000002 /* RWI-V */
#define NV_PAPU_FECVDT_CONTAINER_SIZE                      3:2 /* RWXUF */
#define NV_PAPU_FECVDT_CONTAINER_SIZE_B8                   0x00000000 /* RWI-V */
#define NV_PAPU_FECVDT_CONTAINER_SIZE_B16                  0x00000001 /* RW--V */
#define NV_PAPU_FECVDT_CONTAINER_SIZE_B32                  0x00000003 /* RW--V */
#define NV_PAPU_FECVDT_BITS                                3:0 /* RW-VF */
#define NV_PAPU_FEAV                                       0x00001118 /* RW-4R */
#define NV_PAPU_FEAV_VALUE                                 15:0 /* RWXUF */
#define NV_PAPU_FEAV_VALUE_NULL                            0x0000ffff /* RWI-V */
#define NV_PAPU_FEAV_LST                                   17:16 /* RWXUF */
#define NV_PAPU_FEAV_LST_INHERIT                           0x00000000 /* RWI-V */
#define NV_PAPU_FEAV_LST_2D_TOP                            0x00000001 /* RW--V */
#define NV_PAPU_FEAV_LST_3D_TOP                            0x00000002 /* RW--V */
#define NV_PAPU_FEAV_LST_MP_TOP                            0x00000003 /* RW--V */
#define NV_PAPU_FEAV_BITS                                  17:0 /* RW-VF */
#define NV_PAPU_FEMAXHT                                    0x0000111c /* RW-4R */
#define NV_PAPU_FEMAXHT_VALUE                              15:0 /* RWXUF */
#define NV_PAPU_FEMAXHT_INIT                               0x00000000 /* RWI-V */
#define NV_PAPU_FEMAXHT_BITS                               15:0 /* RW-VF */
#define NV_PAPU_FECHT                                      0x00001120 /* RW-4R */
#define NV_PAPU_FECHT_VALUE                                15:0 /* RWXUF */
#define NV_PAPU_FECHT_VALUE_NULL                           0x0000ffff /* RWI-V */
#define NV_PAPU_FECHT_BITS                                 15:0 /* RW-VF */
#define NV_PAPU_FEMAXSESSL                                 0x00001124 /* RW-4R */
#define NV_PAPU_FEMAXSESSL_VALUE                           15:0 /* RWXUF */
#define NV_PAPU_FEMAXSESSL_INIT                            0x00000000 /* RWI-V */
#define NV_PAPU_FEMAXSESSL_BITS                            15:0 /* RW-VF */
#define NV_PAPU_FECSESSL                                   0x00001128 /* RW-4R */
#define NV_PAPU_FECSESSL_VALUE                             15:0 /* RWXUF */
#define NV_PAPU_FECSESSL_VALUE_NULL                        0x0000ffff /* RWI-V */
#define NV_PAPU_FECSESSL_BITS                              15:0 /* RW-VF */
#define NV_PAPU_FESESSLCTXPA                               0x0000112c /* RW-4R */
#define NV_PAPU_FESESSLCTXPA_VALUE                         31:12 /* RWXUF */
#define NV_PAPU_FESESSLCTXPA_BITS                          31:0 /* RW-VF */
#define NV_PAPU_FESESSLMAXOFF                              0x00001130 /* RW-4R */
#define NV_PAPU_FESESSLMAXOFF_VALUE                        31:12 /* RWXUF */
#define NV_PAPU_FESESSLMAXOFF_BITS                         31:0 /* RW-VF */
#define NV_PAPU_FESESSLPENDOFF                             0x00001134 /* RW-4R */
#define NV_PAPU_FESESSLPENDOFF_VALID                       0:0 /* RWXUF */
#define NV_PAPU_FESESSLPENDOFF_VALID_NO                    0x00000000 /* RWI-V */
#define NV_PAPU_FESESSLPENDOFF_VALID_YES                   0x00000001 /* RW--V */
#define NV_PAPU_FESESSLPENDOFF_OFFSET                      31:12 /* RWXUF */
#define NV_PAPU_FESESSLPENDOFF_BITS                        31:0 /* RW-VF */
#define NV_PAPU_FEMAXSESGE                                 0x00001138 /* RW-4R */
#define NV_PAPU_FEMAXSESGE_VALUE                           15:0 /* RWXUF */
#define NV_PAPU_FEMAXSESGE_INIT                            0x00000000 /* RWI-V */
#define NV_PAPU_FEMAXSESGE_BITS                            15:0 /* RW-VF */
#define NV_PAPU_FECSESGE                                   0x0000113c /* RW-4R */
#define NV_PAPU_FECSESGE_VALUE                             15:0 /* RWXUF */
#define NV_PAPU_FECSESGE_VALUE_NULL                        0x0000ffff /* RWI-V */
#define NV_PAPU_FECSESGE_BITS                              15:0 /* RW-VF */
#define NV_PAPU_FESESGECTXPA                               0x00001140 /* RW-4R */
#define NV_PAPU_FESESGECTXPA_VALUE                         31:12 /* RWXUF */
#define NV_PAPU_FESESGECTXPA_BITS                          31:0 /* RW-VF */
#define NV_PAPU_FESESGEMAXOFF                              0x00001144 /* RW-4R */
#define NV_PAPU_FESESGEMAXOFF_VALUE                        31:12 /* RWXUF */
#define NV_PAPU_FESESGEMAXOFF_BITS                         31:0 /* RW-VF */
#define NV_PAPU_FEMAXGPSGE                                 0x00001148 /* RW-4R */
#define NV_PAPU_FEMAXGPSGE_VALUE                           15:0 /* RWXUF */
#define NV_PAPU_FEMAXGPSGE_INIT                            0x00000000 /* RWI-V */
#define NV_PAPU_FEMAXGPSGE_BITS                            15:0 /* RW-VF */
#define NV_PAPU_FECGPSGE                                   0x0000114c /* RW-4R */
#define NV_PAPU_FECGPSGE_VALUE                             15:0 /* RWXUF */
#define NV_PAPU_FECGPSGE_VALUE_NULL                        0x0000ffff /* RWI-V */
#define NV_PAPU_FECGPSGE_BITS                              15:0 /* RW-VF */
#define NV_PAPU_FEGPSGECTXPA                               0x00001150 /* RW-4R */
#define NV_PAPU_FEGPSGECTXPA_VALUE                         31:12 /* RWXUF */
#define NV_PAPU_FEGPSGECTXPA_BITS                          31:0 /* RW-VF */
#define NV_PAPU_FEGPSGEMAXOFF                              0x00001154 /* RW-4R */
#define NV_PAPU_FEGPSGEMAXOFF_VALUE                        31:12 /* RWXUF */
#define NV_PAPU_FEGPSGEMAXOFF_BITS                         31:0 /* RW-VF */
#define NV_PAPU_FEMAXMB                                    0x00001158 /* RW-4R */
#define NV_PAPU_FEMAXMB_VALUE                              5:0 /* RWXUF */
#define NV_PAPU_FEMAXMB_BITS                               5:0 /* RW-VF */
#define NV_PAPU_FENADDR                                    0x0000115c /* RW-4R */
#define NV_PAPU_FENADDR_VALUE                              31:0 /* RWXUF */
#define NV_PAPU_FENADDR_BITS                               31:0 /* RW-VF */
#define NV_PAPU_AVGBW                                      0x00001200 /* R--4R */
#define NV_PAPU_AVGBW_VALUE                                20:0 /* R-XUF */
#define NV_PAPU_AVGBW_BITS                                 20:0 /* R--VF */
#define NV_PAPU_WCBW                                       0x00001204 /* RW-4R */
#define NV_PAPU_WCBW_VALUE                                 20:0 /* RWXUF */
#define NV_PAPU_WCBW_BITS                                  20:0 /* RW-VF */
#define NV_PAPU_CURBW                                      0x00001208 /* R--4R */
#define NV_PAPU_CURBW_VALUE                                20:0 /* R-XUF */
#define NV_PAPU_CURBW_BITS                                 20:0 /* R--VF */
#define NV_PAPU_CNTBW                                      0x0000120c /* R--4R */
#define NV_PAPU_CNTBW_VALUE                                19:0 /* R-XUF */
#define NV_PAPU_CNTBW_BITS                                 19:0 /* R--VF */
#define NV_PAPU_AVGLAT                                     0x00001210 /* R--4R */
#define NV_PAPU_AVGLAT_VALUE                               13:0 /* R-XUF */
#define NV_PAPU_AVGLAT_BITS                                13:0 /* R--VF */
#define NV_PAPU_WCLAT                                      0x00001214 /* RW-4R */
#define NV_PAPU_WCLAT_VALUE                                13:0 /* RWXUF */
#define NV_PAPU_WCLAT_BITS                                 13:0 /* RW-VF */
#define NV_PAPU_CURLAT                                     0x00001218 /* R--4R */
#define NV_PAPU_CURLAT_VALUE                               23:0 /* R-XUF */
#define NV_PAPU_CURLAT_BITS                                23:0 /* R--VF */
#define NV_PAPU_CURLAT_AVGLAT_BITS                         23:10 /* R--VF */
#define NV_PAPU_CNTLAT                                     0x0000121c /* R--4R */
#define NV_PAPU_CNTLAT_VALUE                               9:0 /* R-XUF */
#define NV_PAPU_CNTLAT_VALUE_MAX                           0x000003FF /* R---V */
#define NV_PAPU_CNTLAT_BITS                                9:0 /* R--VF */
#define NV_PAPU_FEDECMETH                                  0x00001300 /* R--4R */
#define NV_PAPU_FEDECMETH_METH                             15:0 /* R-XUF */
#define NV_PAPU_FEDECMETH_PHASE                            23:16 /* R-XUF */
#define NV_PAPU_FEDECMETH_PHASE_LAST                       24:24 /* R-XUF */
#define NV_PAPU_FEDECMETH_PHASE_LAST_FALSE                 0x00000000 /* R-I-V */
#define NV_PAPU_FEDECMETH_PHASE_LAST_TRUE                  0x00000001 /* R---V */
#define NV_PAPU_FEDECMETH_VALID                            25:25 /* R-XUF */
#define NV_PAPU_FEDECMETH_VALID_FALSE                      0x00000000 /* R-I-V */
#define NV_PAPU_FEDECMETH_VALID_TRUE                       0x00000001 /* R---V */
#define NV_PAPU_FEDECMETH_BITS                             25:0 /* R--VF */
#define NV_PAPU_FEDECPARAM                                 0x00001304 /* R--4R */
#define NV_PAPU_FEDECPARAM_VALUE                           31:0 /* R-XUF */
#define NV_PAPU_FEDECPARAM_BITS                            31:0 /* RW-VF */
#define NV_PAPU_FEDECIMMED                                 0x00001308 /* R--4R */
#define NV_PAPU_FEDECIMMED_VALUE                           31:0 /* R-XUF */
#define NV_PAPU_FEDECIMMED_BITS                            31:0 /* R--VF */
#define NV_PAPU_FESCRATCH                                  0x0000130c /* RW-4R */
#define NV_PAPU_FESCRATCH_VALUE                            31:0 /* RWXUF */
#define NV_PAPU_FESCRATCH_BITS                             31:0 /* RW-VF */
#define NV_PAPU_FESCRATCH2                                 0x00001310 /* RW-4R */
#define NV_PAPU_FESCRATCH2_VALUE                           31:0 /* RWXUF */
#define NV_PAPU_FESCRATCH2_BITS                            31:0 /* RW-VF */
#define NV_PAPU_FESCRATCH3                                 0x00001314 /* RW-4R */
#define NV_PAPU_FESCRATCH3_VALUE                           31:0 /* RWXUF */
#define NV_PAPU_FESCRATCH3_BITS                            31:0 /* RW-VF */
#define NV_PAPU_FESCRATCH4                                 0x00001318 /* RW-4R */
#define NV_PAPU_FESCRATCH4_VALUE                           31:0 /* RWXUF */
#define NV_PAPU_FESCRATCH4_BITS                            31:0 /* RW-VF */
#define NV_PAPU_FEMEMADDR                                  0x00001324 /* RW-4R */
#define NV_PAPU_FEMEMADDR_VALUE                            31:0 /* RWXUF */
#define NV_PAPU_FEMEMADDR_BITS                             31:0 /* RW-VF */
#define NV_PAPU_FEMEMSZ                                    0x00001328 /* RW-4R */
#define NV_PAPU_FEMEMSZ_VALUE                              5:0 /* RWXUF */
#define NV_PAPU_FEMEMSZ_BITS                               5:0 /* RW-VF */
#define NV_PAPU_FEMEMISO                                   0x0000132c /* RW-4R */
#define NV_PAPU_FEMEMISO_WR                                0:0 /* RWXUF */
#define NV_PAPU_FEMEMISO_WR_NON_ISO                        0x00000000 /* RWI-V */
#define NV_PAPU_FEMEMISO_WR_ISO                            0x00000001 /* RW--V */
#define NV_PAPU_FEMEMISO_RD                                1:1 /* RWXUF */
#define NV_PAPU_FEMEMISO_RD_NON_ISO                        0x00000000 /* RWI-V */
#define NV_PAPU_FEMEMISO_RD_ISO                            0x00000001 /* RW--V */
#define NV_PAPU_FEMEMISO_BITS                              1:0 /* RW-VF */
#define NV_PAPU_FEMEMWE                                    0x00001330 /* RW-4R */
#define NV_PAPU_FEMEMWE_VALUE                              3:0 /* RWXUF */
#define NV_PAPU_FEMEMWE_VALUE_ALL                          0x0000000f /* RWI-V */
#define NV_PAPU_FEMEMWE_BITS                               3:0 /* RW-VF */
#define NV_PAPU_FEMEMDATA                                  0x00001334 /* RW-4R */
#define NV_PAPU_FEMEMDATA_VALUE                            31:0 /* RWXUF */
#define NV_PAPU_FEMEMDATA_BITS                             31:0 /* RW-VF */
#define NV_PAPU_FESEIDLELINKS                              0x00001338 /* R--4R */
#define NV_PAPU_FESEIDLELINKS_PREV                         15:0 /* R-XUF */
#define NV_PAPU_FESEIDLELINKS_PREV_NULL                    0x0000ffff /* R---V */
#define NV_PAPU_FESEIDLELINKS_NEXT                         31:16 /* R-XUF */
#define NV_PAPU_FESEIDLELINKS_NEXT_NULL                    0x0000ffff /* R---V */
#define NV_PAPU_FESEIDLELINKS_BITS                         31:0 /* R--VF */
#define NV_PAPU_FESENOTIFY                                 0x0000133c /* R--4R */
#define NV_PAPU_FESENOTIFY_VOICE                           15:0 /* R-XUF */
#define NV_PAPU_FESENOTIFY_SSLA_COMPLETE                   16:16 /* R-XUF */
#define NV_PAPU_FESENOTIFY_SSLA_COMPLETE_NO                0x00000000 /* R---V */
#define NV_PAPU_FESENOTIFY_SSLA_COMPLETE_YES               0x00000001 /* R---V */
#define NV_PAPU_FESENOTIFY_SSLB_COMPLETE                   17:17 /* R-XUF */
#define NV_PAPU_FESENOTIFY_SSLB_COMPLETE_NO                0x00000000 /* R---V */
#define NV_PAPU_FESENOTIFY_SSLB_COMPLETE_YES               0x00000001 /* R---V */
#define NV_PAPU_FESENOTIFY_ENVELOPE_ACTIVE                 18:18 /* R-XUF */
#define NV_PAPU_FESENOTIFY_ENVELOPE_ACTIVE_NO              0x00000000 /* R---V */
#define NV_PAPU_FESENOTIFY_ENVELOPE_ACTIVE_YES             0x00000001 /* R---V */
#define NV_PAPU_FESENOTIFY_SAMPLES_ACTIVE                  19:19 /* R-XUF */
#define NV_PAPU_FESENOTIFY_SAMPLES_ACTIVE_NO               0x00000000 /* R---V */
#define NV_PAPU_FESENOTIFY_SAMPLES_ACTIVE_YES              0x00000001 /* R---V */
#define NV_PAPU_FESENOTIFY_INTERRUPT_ENABLE                20:20 /* R-XUF */
#define NV_PAPU_FESENOTIFY_INTERRUPT_ENABLE_NO             0x00000000 /* R---V */
#define NV_PAPU_FESENOTIFY_INTERRUPT_ENABLE_YES            0x00000001 /* R---V */
#define NV_PAPU_FESENOTIFY_BITS                            20:0 /* R--VF */
#define NV_PAPU_FEUFIFOCTL                                 0x00001340 /* RW-4R */
#define NV_PAPU_FEUFIFOCTL_COUNT                           5:0 /* RWXUF */
#define NV_PAPU_FEUFIFOCTL_HEAD                            12:8 /* RWXUF */
#define NV_PAPU_FEUFIFOCTL_HEAD_LSB                        8:8 /* RWXUF */
#define NV_PAPU_FEUFIFOCTL_TAIL                            20:16 /* RWXUF */
#define NV_PAPU_FEUFIFOCTL_BITS                            20:0 /* RW-VF */
#define NV_PAPU_FEUFIFOMETH(i)                             (0x00001400+(i)*8) /* -W-4A */
#define NV_PAPU_FEUFIFOMETH__SIZE_1                        32 /* */ 
#define NV_PAPU_FEUFIFOMETH_VALUE                          31:0 /* RWI-V */
#define NV_PAPU_FEUFIFOMETH_BITS                           31:0 /* RW-VF */
#define NV_PAPU_FEUFIFOMETH_ADDR_BITS                      7:0 /* */ 
#define NV_PAPU_FEUFIFOMETH_ADDR_SAVED_BITS                7:2 /* */ 
#define NV_PAPU_FEUFIFOPARAM(i)                            (0x00001404+(i)*8) /* -W-4A */
#define NV_PAPU_FEUFIFOPARAM__SIZE_1                       32 /* */ 
#define NV_PAPU_FEUFIFOPARAM_VALUE                         31:0 /* RWI-V */
#define NV_PAPU_FEUFIFOPARAM_BITS                          31:0 /* RW-VF */
#define NV_PAPU_FETFORCE0                                  0x00001500 /* RW-4R */
#define NV_PAPU_FETFORCE0_NOP                              0:0 /* RWXUF */
#define NV_PAPU_FETFORCE0_SYNCHRONIZE                      1:1 /* RWXUF */
#define NV_PAPU_FETFORCE0_SET_TIME                         2:2 /* RWXUF */
#define NV_PAPU_FETFORCE0_SET_MODE                         3:3 /* RWXUF */
#define NV_PAPU_FETFORCE0_SET_CURRENT_VOICE                4:4 /* RWXUF */
#define NV_PAPU_FETFORCE0_SET_ANTECEDENT_VOICE             5:5 /* RWXUF */
#define NV_PAPU_FETFORCE0_VOICE_ON                         6:6 /* RWXUF */
#define NV_PAPU_FETFORCE0_VOICE_OFF                        7:7 /* RWXUF */
#define NV_PAPU_FETFORCE0_VOICE_RELEASE                    8:8 /* RWXUF */
#define NV_PAPU_FETFORCE0_VOICE_PAUSE                      9:9 /* RWXUF */
#define NV_PAPU_FETFORCE0_GET_VOICE_POSITION               10:10 /* RWXUF */
#define NV_PAPU_FETFORCE0_SET_SUBMIX_HEADROOM              11:11 /* RWXUF */
#define NV_PAPU_FETFORCE0_SET_HRTF_SUBMIXES                12:12 /* RWXUF */
#define NV_PAPU_FETFORCE0_SET_HRTF_HEADROOM                13:13 /* RWXUF */
#define NV_PAPU_FETFORCE0_SET_VOLUME_TRACKING              14:14 /* RWXUF */
#define NV_PAPU_FETFORCE0_SET_PITCH_TRACKING               15:15 /* RWXUF */
#define NV_PAPU_FETFORCE0_SET_HRTF_TRACKING                16:16 /* RWXUF */
#define NV_PAPU_FETFORCE0_SET_ITD_TRACKING                 17:17 /* RWXUF */
#define NV_PAPU_FETFORCE0_SET_FILTER_TRACKING              18:18 /* RWXUF */
#define NV_PAPU_FETFORCE0_VOICE_LOCK                       19:19 /* RWXUF */
#define NV_PAPU_FETFORCE0_SET_VOICE_CFG_VBIN               20:20 /* RWXUF */
#define NV_PAPU_FETFORCE0_SET_VOICE_CFG_FMT                21:21 /* RWXUF */
#define NV_PAPU_FETFORCE0_SET_VOICE_CFG_OTHER              22:22 /* RWXUF */
#define NV_PAPU_FETFORCE0_SET_VOICE_TAR_HRTF               23:23 /* RWXUF */
#define NV_PAPU_FETFORCE0_SET_VOICE_PAR_LFODLY             24:24 /* RWXUF */
#define NV_PAPU_FETFORCE0_SET_VOICE_SSL                    25:25 /* RWXUF */
#define NV_PAPU_FETFORCE0_SET_VOICE_CFG_BUF                26:26 /* RWXUF */
#define NV_PAPU_FETFORCE0_SET_VOICE_TAR_VOL                27:27 /* RWXUF */
#define NV_PAPU_FETFORCE0_SET_VOICE_LFO                    28:28 /* RWXUF */
#define NV_PAPU_FETFORCE0_SET_VOICE_TAR_FC                 29:29 /* RWXUF */
#define NV_PAPU_FETFORCE0_SET_VOICE_TAR_PITCH              30:30 /* RWXUF */
#define NV_PAPU_FETFORCE0_BITS                             30:0 /* RW-VF */
#define NV_PAPU_FETFORCE1                                  0x00001504 /* RW-4R */
#define NV_PAPU_FETFORCE1_SET_CURRENT_HRTF_ENTRY           0:0 /* RWXUF */
#define NV_PAPU_FETFORCE1_SET_HRIR                         1:1 /* RWXUF */
#define NV_PAPU_FETFORCE1_SET_HRIR_X                       2:2 /* RWXUF */
#define NV_PAPU_FETFORCE1_SET_CURRENT_SSL_CONTEXT_DMA      3:3 /* RWXUF */
#define NV_PAPU_FETFORCE1_SET_CURRENT_SSL                  4:4 /* RWXUF */
#define NV_PAPU_FETFORCE1_SET_SSL_SEGMENT_OFFSET           5:5 /* RWXUF */
#define NV_PAPU_FETFORCE1_SET_SSL_SEGMENT_LENGTH           6:6 /* RWXUF */
#define NV_PAPU_FETFORCE1_SET_CURRENT_INBUF_SGE_CONTEXT_DMA 7:7 /* RWXUF */
#define NV_PAPU_FETFORCE1_SET_CURRENT_INBUF_SGE            8:8 /* RWXUF */
#define NV_PAPU_FETFORCE1_SET_CURRENT_INBUF_SGE_OFFSET     9:9 /* RWXUF */
#define NV_PAPU_FETFORCE1_SET_CURRENT_BUFFER_SGE_CONTEXT_DMA 10:10 /* RWXUF */
#define NV_PAPU_FETFORCE1_SET_CURRENT_OUTBUF_SGE           11:11 /* RWXUF */
#define NV_PAPU_FETFORCE1_SET_OUTBUF_BA                    12:12 /* RWXUF */
#define NV_PAPU_FETFORCE1_SET_OUTBUF_LEN                   13:13 /* RWXUF */
#define NV_PAPU_FETFORCE1_SET_CURRENT_OUTBUF_SGE_OFFSET    14:14 /* RWXUF */
#define NV_PAPU_FETFORCE1_SE2FE_IDLE_VOICE                 15:15 /* RWXUF */
#define NV_PAPU_FETFORCE1_SE2FE_NOTIFY                     16:16 /* RWXUF */
#define NV_PAPU_FETFORCE1_SE2FE_RTINTR                     17:17 /* RWXUF */
#define NV_PAPU_FETFORCE1_UNKNOWN                          18:18 /* RWXUF */
#define NV_PAPU_FETFORCE1_BITS                             18:0 /* RW-VF */
#define NV_PAPU_FETIGNORE0                                 0x00001508 /* RW-4R */
#define NV_PAPU_FETIGNORE0_NOP                             0:0 /* RWXUF */
#define NV_PAPU_FETIGNORE0_SYNCHRONIZE                     1:1 /* RWXUF */
#define NV_PAPU_FETIGNORE0_SET_TIME                        2:2 /* RWXUF */
#define NV_PAPU_FETIGNORE0_SET_MODE                        3:3 /* RWXUF */
#define NV_PAPU_FETIGNORE0_SET_CURRENT_VOICE               4:4 /* RWXUF */
#define NV_PAPU_FETIGNORE0_SET_ANTECEDENT_VOICE            5:5 /* RWXUF */
#define NV_PAPU_FETIGNORE0_VOICE_ON                        6:6 /* RWXUF */
#define NV_PAPU_FETIGNORE0_VOICE_OFF                       7:7 /* RWXUF */
#define NV_PAPU_FETIGNORE0_VOICE_RELEASE                   8:8 /* RWXUF */
#define NV_PAPU_FETIGNORE0_VOICE_PAUSE                     9:9 /* RWXUF */
#define NV_PAPU_FETIGNORE0_GET_VOICE_POSITION              10:10 /* RWXUF */
#define NV_PAPU_FETIGNORE0_SET_SUBMIX_HEADROOM             11:11 /* RWXUF */
#define NV_PAPU_FETIGNORE0_SET_HRTF_SUBMIXES               12:12 /* RWXUF */
#define NV_PAPU_FETIGNORE0_SET_HRTF_HEADROOM               13:13 /* RWXUF */
#define NV_PAPU_FETIGNORE0_SET_VOLUME_TRACKING             14:14 /* RWXUF */
#define NV_PAPU_FETIGNORE0_SET_PITCH_TRACKING              15:15 /* RWXUF */
#define NV_PAPU_FETIGNORE0_SET_HRTF_TRACKING               16:16 /* RWXUF */
#define NV_PAPU_FETIGNORE0_SET_ITD_TRACKING                17:17 /* RWXUF */
#define NV_PAPU_FETIGNORE0_SET_FILTER_TRACKING             18:18 /* RWXUF */
#define NV_PAPU_FETIGNORE0_VOICE_LOCK                      19:19 /* RWXUF */
#define NV_PAPU_FETIGNORE0_SET_VOICE_CFG_VBIN              20:20 /* RWXUF */
#define NV_PAPU_FETIGNORE0_SET_VOICE_CFG_FMT               21:21 /* RWXUF */
#define NV_PAPU_FETIGNORE0_SET_VOICE_CFG_OTHER             22:22 /* RWXUF */
#define NV_PAPU_FETIGNORE0_SET_VOICE_TAR_HRTF              23:23 /* RWXUF */
#define NV_PAPU_FETIGNORE0_SET_VOICE_PAR_LFODLY            24:24 /* RWXUF */
#define NV_PAPU_FETIGNORE0_SET_VOICE_SSL                   25:25 /* RWXUF */
#define NV_PAPU_FETIGNORE0_SET_VOICE_CFG_BUF               26:26 /* RWXUF */
#define NV_PAPU_FETIGNORE0_SET_VOICE_TAR_VOL               27:27 /* RWXUF */
#define NV_PAPU_FETIGNORE0_SET_VOICE_LFO                   28:28 /* RWXUF */
#define NV_PAPU_FETIGNORE0_SET_VOICE_TAR_FC                29:29 /* RWXUF */
#define NV_PAPU_FETIGNORE0_SET_VOICE_TAR_PITCH             30:30 /* RWXUF */
#define NV_PAPU_FETIGNORE0_BITS                            30:0 /* RW-VF */
#define NV_PAPU_FETIGNORE1                                 0x0000150c /* RW-4R */
#define NV_PAPU_FETIGNORE1_SET_CURRENT_HRTF_ENTRY          0:0 /* RWXUF */
#define NV_PAPU_FETIGNORE1_SET_HRIR                        1:1 /* RWXUF */
#define NV_PAPU_FETIGNORE1_SET_HRIR_X                      2:2 /* RWXUF */
#define NV_PAPU_FETIGNORE1_SET_CURRENT_SSL_CONTEXT_DMA     3:3 /* RWXUF */
#define NV_PAPU_FETIGNORE1_SET_CURRENT_SSL                 4:4 /* RWXUF */
#define NV_PAPU_FETIGNORE1_SET_SSL_SEGMENT_OFFSET          5:5 /* RWXUF */
#define NV_PAPU_FETIGNORE1_SET_SSL_SEGMENT_LENGTH          6:6 /* RWXUF */
#define NV_PAPU_FETIGNORE1_SET_CURRENT_INBUF_SGE_CONTEXT_DMA 7:7 /* RWXUF */
#define NV_PAPU_FETIGNORE1_SET_CURRENT_INBUF_SGE           8:8 /* RWXUF */
#define NV_PAPU_FETIGNORE1_SET_CURRENT_INBUF_SGE_OFFSET    9:9 /* RWXUF */
#define NV_PAPU_FETIGNORE1_SET_CURRENT_BUFFER_SGE_CONTEXT_DMA 10:10 /* RWXUF */
#define NV_PAPU_FETIGNORE1_SET_CURRENT_OUTBUF_SGE          11:11 /* RWXUF */
#define NV_PAPU_FETIGNORE1_SET_OUTBUF_BA                   12:12 /* RWXUF */
#define NV_PAPU_FETIGNORE1_SET_OUTBUF_LEN                  13:13 /* RWXUF */
#define NV_PAPU_FETIGNORE1_SET_CURRENT_OUTBUF_SGE_OFFSET   14:14 /* RWXUF */
#define NV_PAPU_FETIGNORE1_UNKNOWN                         18:18 /* RWXUF */
#define NV_PAPU_FETIGNORE1_TRAPREASON_NOT_IMPLEMENTED      22:22 /* RWXUF */
#define NV_PAPU_FETIGNORE1_TRAPREASON_METHOD_UNKNOWN       23:23 /* RWXUF */
#define NV_PAPU_FETIGNORE1_TRAPREASON_BAD_ARGUMENT         24:24 /* RWXUF */
#define NV_PAPU_FETIGNORE1_TRAPREASON_CURRENT_NOT_SET      25:25 /* RWXUF */
#define NV_PAPU_FETIGNORE1_TRAPREASON_ANTECEDENT_NOT_SET   26:26 /* RWXUF */
#define NV_PAPU_FETIGNORE1_TRAPREASON_VOICE_ACTIVE         27:27 /* RWXUF */
#define NV_PAPU_FETIGNORE1_TRAPREASON_NOT_DATA_TYPE_BUFFER 28:28 /* RWXUF */
#define NV_PAPU_FETIGNORE1_TRAPREASON_BAD_LIST_POINTER     29:29 /* RWXUF */
#define NV_PAPU_FETIGNORE1_TRAPREASON_CURRENT_VOICE_NOT_3D 30:30 /* RWXUF */
#define NV_PAPU_FETIGNORE1_TRAPREASON_CTXPA_INVALID        31:31 /* RWXUF */
#define NV_PAPU_FETIGNORE1_BITS                            31:0 /* RW-VF */
#define NV_PAPU_SECTL                                      0x00002000 /* RW-4R */
#define NV_PAPU_SECTL_SEPRTYP                              0:0 /* RW-VF */
#define NV_PAPU_SECTL_SEPRTYP_NON_ISO                      0x00000000 /* RWI-V */
#define NV_PAPU_SECTL_SEPRTYP_ISO                          0x00000001 /* RW--V */
#define NV_PAPU_SECTL_SEPWTYP                              1:1 /* RW-VF */
#define NV_PAPU_SECTL_SEPWTYP_NON_ISO                      0x00000000 /* RWI-V */
#define NV_PAPU_SECTL_SEPWTYP_ISO                          0x00000001 /* RW--V */
#define NV_PAPU_SECTL_SESRTYP                              2:2 /* RW-VF */
#define NV_PAPU_SECTL_SESRTYP_NON_ISO                      0x00000000 /* RWI-V */
#define NV_PAPU_SECTL_SESRTYP_ISO                          0x00000001 /* RW--V */
#define NV_PAPU_SECTL_XCNTMODE                             4:3 /* RW-VF */
#define NV_PAPU_SECTL_XCNTMODE_OFF                         0x00000000 /* RWI-V */
#define NV_PAPU_SECTL_XCNTMODE_AC_SYNC                     0x00000001 /* RW--V */
#define NV_PAPU_SECTL_XCNTMODE_SW                          0x00000002 /* RW--V */
#define NV_PAPU_SECTL_XCNTMODE_FREE_RUNNING                0x00000003 /* RW--V */
#define NV_PAPU_SECTL_DWINT                                5:5 /* RW-VF */
#define NV_PAPU_SECTL_DWINT_DISABLED                       0x00000000 /* RWI-V */
#define NV_PAPU_SECTL_DWINT_ENABLED                        0x00000001 /* RW--V */
#define NV_PAPU_SECTL_RTWARN                               6:6 /* RW-VF */
#define NV_PAPU_SECTL_RTWARN_DISABLED                      0x00000000 /* RWI-V */
#define NV_PAPU_SECTL_RTWARN_ENABLED                       0x00000001 /* RW--V */
#define NV_PAPU_SECTL_DPINT                                7:7 /* RW-VF */
#define NV_PAPU_SECTL_DPINT_DISABLED                       0x00000000 /* RWI-V */
#define NV_PAPU_SECTL_DPINT_ENABLED                        0x00000001 /* RW--V */
#define NV_PAPU_STID                                       0x00002004 /* R--4R */
#define NV_PAPU_STID_SESTART                               0:0 /* R--VF */
#define NV_PAPU_STID_SESTART_NOT_STARTING                  0x00000000 /* R-I-V */
#define NV_PAPU_STID_SESTART_STARTING                      0x00000001 /* R---V */
#define NV_PAPU_STID_SEIDLE                                1:1 /* R--VF */
#define NV_PAPU_STID_SEIDLE_IDLE                           0x00000001 /* R-I-V */
#define NV_PAPU_STID_SEIDLE_NOT_IDLE                       0x00000000 /* R---V */
#define NV_PAPU_STID_VPSTART                               2:2 /* R--VF */
#define NV_PAPU_STID_VPSTART_NOT_STARTING                  0x00000000 /* R-I-V */
#define NV_PAPU_STID_VPSTART_STARTING                      0x00000001 /* R---V */
#define NV_PAPU_STID_VPIDLE                                3:3 /* R--VF */
#define NV_PAPU_STID_VPIDLE_IDLE                           0x00000001 /* R-I-V */
#define NV_PAPU_STID_VPIDLE_NOT_IDLE                       0x00000000 /* R---V */
#define NV_PAPU_STID_GPSTART                               4:4 /* R--VF */
#define NV_PAPU_STID_GPSTART_NOT_STARTING                  0x00000000 /* R-I-V */
#define NV_PAPU_STID_GPSTART_STARTING                      0x00000001 /* R---V */
#define NV_PAPU_STID_GPIDLE                                5:5 /* R--VF */
#define NV_PAPU_STID_GPIDLE_IDLE                           0x00000001 /* R-I-V */
#define NV_PAPU_STID_GPIDLE_NOT_IDLE                       0x00000000 /* R---V */
#define NV_PAPU_STID_EPSTART                               6:6 /* R--VF */
#define NV_PAPU_STID_EPSTART_NOT_STARTING                  0x00000000 /* R-I-V */
#define NV_PAPU_STID_EPSTART_STARTING                      0x00000001 /* R---V */
#define NV_PAPU_STID_EPIDLE                                7:7 /* R--VF */
#define NV_PAPU_STID_EPIDLE_IDLE                           0x00000001 /* R-I-V */
#define NV_PAPU_STID_EPIDLE_NOT_IDLE                       0x00000000 /* R---V */
#define NV_PAPU_IGSCNT                                     0x00002008 /* RW-4R */
#define NV_PAPU_IGSCNT_VALUE                               31:0 /* RWXUF */
#define NV_PAPU_IGSCNT_INIT                                0x00000000 /* RWI-V */
#define NV_PAPU_XGSCNT                                     0x0000200C /* RW-4R */
#define NV_PAPU_XGSCNT_VALUE                               31:0 /* RWXUF */
#define NV_PAPU_XGSCNT_INIT                                0xFFFFFFFF /* RWI-V */
#define NV_PAPU_DGSCNT                                     0x00002010 /* RW-4R */
#define NV_PAPU_DGSCNT_VALUE                               31:0 /* RWXUF */
#define NV_PAPU_DGSCNT_INIT                                0x00000000 /* RWI-V */
#define NV_PAPU_WGSCNT                                     0x00002014 /* RW-4R */
#define NV_PAPU_WGSCNT_VALUE                               31:0 /* RWXUF */
#define NV_PAPU_WGSCNT_INIT                                0x00000000 /* RWI-V */
#define NV_PAPU_RGSCNT                                     0x00002018 /* RW-4R */
#define NV_PAPU_RGSCNT_VALUE                               31:0 /* RWXUF */
#define NV_PAPU_RGSCNT_INIT                                0x00000000 /* RWI-V */
#define NV_PAPU_PGSCNT                                     0x0000201C /* RW-4R */
#define NV_PAPU_PGSCNT_VALUE                               31:0 /* RWXUF */
#define NV_PAPU_PGSCNT_INIT                                0x00000000 /* RWI-V */
#define NV_PAPU_EGSCNT                                     0x00002020 /* RW-4R */
#define NV_PAPU_EGSCNT_VALUE                               31:0 /* RWXUF */
#define NV_PAPU_EGSCNT_INIT                                0x00000000 /* RWI-V */
#define NV_PAPU_DEGSCNT                                    0x00002024 /* RW-4R */
#define NV_PAPU_DEGSCNT_VALUE                              31:0 /* RWXUF */
#define NV_PAPU_DEGSCNT_INIT                               0x00000000 /* RWI-V */
#define NV_PAPU_ECNTSTP                                    0x00002028 /* RW-4R */
#define NV_PAPU_ECNTSTP_VALUE                              15:0 /* RWXUF */
#define NV_PAPU_VPVADDR                                    0x0000202C /* RW-4R */
#define NV_PAPU_VPVADDR_VALUE                              31:14 /* RWXUF */
#define NV_PAPU_VPSGEADDR                                  0x00002030 /* RW-4R */
#define NV_PAPU_VPSGEADDR_VALUE                            31:14 /* RWXUF */
#define NV_PAPU_VPSSLADDR                                  0x00002034 /* RW-4R */
#define NV_PAPU_VPSSLADDR_VALUE                            31:14 /* RWXUF */
#define NV_PAPU_VPHTADDR                                   0x00002038 /* RW-4R */
#define NV_PAPU_VPHTADDR_VALUE                             31:14 /* RWXUF */
#define NV_PAPU_VPHCADDR                                   0x0000203C /* RW-4R */
#define NV_PAPU_VPHCADDR_VALUE                             31:14 /* RWXUF */
#define NV_PAPU_GPSADDR                                    0x00002040 /* RW-4R */
#define NV_PAPU_GPSADDR_VALUE                              31:14 /* RWXUF */
#define NV_PAPU_GPFADDR                                    0x00002044 /* RW-4R */
#define NV_PAPU_GPFADDR_VALUE                              31:14 /* RWXUF */
#define NV_PAPU_EPSADDR                                    0x00002048 /* RW-4R */
#define NV_PAPU_EPSADDR_VALUE                              31:14 /* RWXUF */
#define NV_PAPU_EPFADDR                                    0x0000204C /* RW-4R */
#define NV_PAPU_EPFADDR_VALUE                              31:14 /* RWXUF */
#define NV_PAPU_VLOCK                                      0x00002050 /* RW-4R */
#define NV_PAPU_VLOCK_VOICE                                15:0 /* RW-VF */
#define NV_PAPU_VLOCK_REQ                                  16:16 /* RW-VF */
#define NV_PAPU_VLOCK_REQ_LOCK                             0x00000001 /* RW--V */
#define NV_PAPU_VLOCK_REQ_UNLOCK                           0x00000000 /* RWI-V */
#define NV_PAPU_VLOCK_STATUS                               17:17 /* RW-VF */
#define NV_PAPU_VLOCK_STATUS_NOT_IN_PROGRESS               0x00000000 /* RW--V */
#define NV_PAPU_VLOCK_STATUS_IN_PROGRESS                   0x00000001 /* RWI-V */
#define NV_PAPU_TVL2D                                      0x00002054 /* RW-4R */
#define NV_PAPU_TVL2D_VALUE                                15:0 /* RWXUF */
#define NV_PAPU_TVL2D_VALUE_NULL                           0x0000ffff /* RWI-V */
#define NV_PAPU_CVL2D                                      0x00002058 /* RW-4R */
#define NV_PAPU_CVL2D_VALUE                                15:0 /* RWXUF */
#define NV_PAPU_CVL2D_VALUE_NULL                           0x0000ffff /* RWI-V */
#define NV_PAPU_NVL2D                                      0x0000205C /* RW-4R */
#define NV_PAPU_NVL2D_VALUE                                15:0 /* RWXUF */
#define NV_PAPU_NVL2D_VALUE_NULL                           0x0000ffff /* RWI-V */
#define NV_PAPU_TVL3D                                      0x00002060 /* RW-4R */
#define NV_PAPU_TVL3D_VALUE                                15:0 /* RWXUF */
#define NV_PAPU_TVL3D_VALUE_NULL                           0x0000ffff /* RWI-V */
#define NV_PAPU_CVL3D                                      0x00002064 /* RW-4R */
#define NV_PAPU_CVL3D_VALUE                                15:0 /* RWXUF */
#define NV_PAPU_CVL3D_VALUE_NULL                           0x0000ffff /* RWI-V */
#define NV_PAPU_NVL3D                                      0x00002068 /* RW-4R */
#define NV_PAPU_NVL3D_VALUE                                15:0 /* RWXUF */
#define NV_PAPU_NVL3D_VALUE_NULL                           0x0000ffff /* RWI-V */
#define NV_PAPU_TVLMP                                      0x0000206C /* RW-4R */
#define NV_PAPU_TVLMP_VALUE                                15:0 /* RWXUF */
#define NV_PAPU_TVLMP_VALUE_NULL                           0x0000ffff /* RWI-V */
#define NV_PAPU_CVLMP                                      0x00002070 /* RW-4R */
#define NV_PAPU_CVLMP_VALUE                                15:0 /* RWXUF */
#define NV_PAPU_CVLMP_VALUE_NULL                           0x0000ffff /* RWI-V */
#define NV_PAPU_NVLMP                                      0x00002074 /* RW-4R */
#define NV_PAPU_NVLMP_VALUE                                15:0 /* RWXUF */
#define NV_PAPU_NVLMP_VALUE_NULL                           0x0000ffff /* RWI-V */
#define NV_PAPU_ALPHAV                                     0x00002078 /* RW-4R */
#define NV_PAPU_ALPHAV_VALUE                               11:0 /* RWXUF */
#define NV_PAPU_ALPHAP                                     0x0000207C /* RW-4R */
#define NV_PAPU_ALPHAP_VALUE                               11:0 /* RWXUF */
#define NV_PAPU_ALPHAF                                     0x00002080 /* RW-4R */
#define NV_PAPU_ALPHAF_VALUE                               11:0 /* RWXUF */
#define NV_PAPU_ALPHAI                                     0x00002084 /* RW-4R */
#define NV_PAPU_ALPHAI_VALUE                               11:0 /* RWXUF */
#define NV_PAPU_ALPHAH                                     0x00002088 /* RW-4R */
#define NV_PAPU_ALPHAH_VALUE                               11:0 /* RWXUF */
#define NV_PAPU_MIXHRA                                     0x0000208C /* RW-4R */
#define NV_PAPU_MIXHRA_MHR0                                2:0 /* RWXUF */
#define NV_PAPU_MIXHRA_MHR0_INIT                           0x00000000 /* RWI-V */
#define NV_PAPU_MIXHRA_MHR1                                10:8 /* RWXUF */
#define NV_PAPU_MIXHRA_MHR1_INIT                           0x00000000 /* RWI-V */
#define NV_PAPU_MIXHRA_MHR2                                18:16 /* RWXUF */
#define NV_PAPU_MIXHRA_MHR2_INIT                           0x00000000 /* RWI-V */
#define NV_PAPU_MIXHRA_MHR3                                26:24 /* RWXUF */
#define NV_PAPU_MIXHRA_MHR3_INIT                           0x00000000 /* RWI-V */
#define NV_PAPU_MIXHRB                                     0x00002090 /* RW-4R */
#define NV_PAPU_MIXHRB_MHR4                                2:0 /* RWXUF */
#define NV_PAPU_MIXHRB_MHR4_INIT                           0x00000000 /* RWI-V */
#define NV_PAPU_MIXHRB_MHR5                                10:8 /* RWXUF */
#define NV_PAPU_MIXHRB_MHR5_INIT                           0x00000000 /* RWI-V */
#define NV_PAPU_MIXHRB_MHR6                                18:16 /* RWXUF */
#define NV_PAPU_MIXHRB_MHR6_INIT                           0x00000000 /* RWI-V */
#define NV_PAPU_MIXHRB_MHR7                                26:24 /* RWXUF */
#define NV_PAPU_MIXHRB_MHR7_INIT                           0x00000000 /* RWI-V */
#define NV_PAPU_MIXHRC                                     0x00002094 /* RW-4R */
#define NV_PAPU_MIXHRC_MHR8                                2:0 /* RWXUF */
#define NV_PAPU_MIXHRC_MHR8_INIT                           0x00000000 /* RWI-V */
#define NV_PAPU_MIXHRC_MHR9                                10:8 /* RWXUF */
#define NV_PAPU_MIXHRC_MHR9_INIT                           0x00000000 /* RWI-V */
#define NV_PAPU_MIXHRC_MHR10                               18:16 /* RWXUF */
#define NV_PAPU_MIXHRC_MHR10_INIT                          0x00000000 /* RWI-V */
#define NV_PAPU_MIXHRC_MHR11                               26:24 /* RWXUF */
#define NV_PAPU_MIXHRC_MHR11_INIT                          0x00000000 /* RWI-V */
#define NV_PAPU_MIXHRD                                     0x00002098 /* RW-4R */
#define NV_PAPU_MIXHRD_MHR12                               2:0 /* RWXUF */
#define NV_PAPU_MIXHRD_MHR12_INIT                          0x00000000 /* RWI-V */
#define NV_PAPU_MIXHRD_MHR13                               10:8 /* RWXUF */
#define NV_PAPU_MIXHRD_MHR13_INIT                          0x00000000 /* RWI-V */
#define NV_PAPU_MIXHRD_MHR14                               18:16 /* RWXUF */
#define NV_PAPU_MIXHRD_MHR14_INIT                          0x00000000 /* RWI-V */
#define NV_PAPU_MIXHRD_MHR15                               26:24 /* RWXUF */
#define NV_PAPU_MIXHRD_MHR15_INIT                          0x00000000 /* RWI-V */
#define NV_PAPU_MIXHRE                                     0x0000209C /* RW-4R */
#define NV_PAPU_MIXHRE_MHR16                               2:0 /* RWXUF */
#define NV_PAPU_MIXHRE_MHR16_INIT                          0x00000000 /* RWI-V */
#define NV_PAPU_MIXHRE_MHR17                               10:8 /* RWXUF */
#define NV_PAPU_MIXHRE_MHR17_INIT                          0x00000000 /* RWI-V */
#define NV_PAPU_MIXHRE_MHR18                               18:16 /* RWXUF */
#define NV_PAPU_MIXHRE_MHR18_INIT                          0x00000000 /* RWI-V */
#define NV_PAPU_MIXHRE_MHR19                               26:24 /* RWXUF */
#define NV_PAPU_MIXHRF                                     0x000020A0 /* RW-4R */
#define NV_PAPU_MIXHRF_MHR19_INIT                          0x00000000 /* RWI-V */
#define NV_PAPU_MIXHRF_MHR20                               2:0 /* RWXUF */
#define NV_PAPU_MIXHRF_MHR20_INIT                          0x00000000 /* RWI-V */
#define NV_PAPU_MIXHRF_MHR21                               10:8 /* RWXUF */
#define NV_PAPU_MIXHRF_MHR21_INIT                          0x00000000 /* RWI-V */
#define NV_PAPU_MIXHRF_MHR22                               18:16 /* RWXUF */
#define NV_PAPU_MIXHRF_MHR22_INIT                          0x00000000 /* RWI-V */
#define NV_PAPU_MIXHRF_MHR23                               26:24 /* RWXUF */
#define NV_PAPU_MIXHRF_MHR23_INIT                          0x00000000 /* RWI-V */
#define NV_PAPU_MIXHRG                                     0x000020A4 /* RW-4R */
#define NV_PAPU_MIXHRG_MHR24                               2:0 /* RWXUF */
#define NV_PAPU_MIXHRG_MHR24_INIT                          0x00000000 /* RWI-V */
#define NV_PAPU_MIXHRG_MHR25                               10:8 /* RWXUF */
#define NV_PAPU_MIXHRG_MHR25_INIT                          0x00000000 /* RWI-V */
#define NV_PAPU_MIXHRG_MHR26                               18:16 /* RWXUF */
#define NV_PAPU_MIXHRG_MHR26_INIT                          0x00000000 /* RWI-V */
#define NV_PAPU_MIXHRG_MHR27                               26:24 /* RWXUF */
#define NV_PAPU_MIXHRG_MHR27_INIT                          0x00000000 /* RWI-V */
#define NV_PAPU_MIXHRH                                     0x000020A8 /* RW-4R */
#define NV_PAPU_MIXHRH_MHR28                               2:0 /* RWXUF */
#define NV_PAPU_MIXHRH_MHR28_INIT                          0x00000000 /* RWI-V */
#define NV_PAPU_MIXHRH_MHR29                               10:8 /* RWXUF */
#define NV_PAPU_MIXHRH_MHR29_INIT                          0x00000000 /* RWI-V */
#define NV_PAPU_MIXHRH_MHR30                               18:16 /* RWXUF */
#define NV_PAPU_MIXHRH_MHR30_INIT                          0x00000000 /* RWI-V */
#define NV_PAPU_MIXHRH_MHR31                               26:24 /* RWXUF */
#define NV_PAPU_MIXHRH_MHR31_INIT                          0x00000000 /* RWI-V */
#define NV_PAPU_MIX3D                                      0x000020AC /* RW-4R */
#define NV_PAPU_MIX3D_SMX3DFL                              4:0 /* RWXUF */
#define NV_PAPU_MIX3D_SMX3DFL_INIT                         0x00000000 /* RWI-V */
#define NV_PAPU_MIX3D_SMX3DFR                              12:8 /* RWXUF */
#define NV_PAPU_MIX3D_SMX3DFR_INIT                         0x00000000 /* RWI-V */
#define NV_PAPU_MIX3D_SMX3DRL                              20:16 /* RWXUF */
#define NV_PAPU_MIX3D_SMX3DRL_INIT                         0x00000000 /* RWI-V */
#define NV_PAPU_MIX3D_SMX3DRR                              28:24 /* RWXUF */
#define NV_PAPU_MIX3D_SMX3DRR_INIT                         0x00000000 /* RWI-V */
#define NV_PAPU_TDHR                                       0x000020B0 /* RW-4R */
#define NV_PAPU_TDHR_TDHR                                  2:0 /* RWXUF */
#define NV_PAPU_TDHR_TDHR_INIT                             0x00000000 /* RWI-V */
#define NV_PAPU_AVGSESTI                                   0x000020B4 /* RW-4R */
#define NV_PAPU_AVGSESTI_VALUE                             31:0 /* RWXUF */
#define NV_PAPU_WCSESTI                                    0x000020B8 /* RW-4R */
#define NV_PAPU_WCSESTI_VALUE                              31:0 /* RWXUF */
#define NV_PAPU_CURSESTI                                   0x000020BC /* RW-4R */
#define NV_PAPU_CURSESTI_VALUE                             31:0 /* RWXUF */
#define NV_PAPU_CNTSESTI                                   0x000020C0 /* RW-4R */
#define NV_PAPU_CNTSESTI_VALUE                             7:0 /* RWXUF */
#define NV_PAPU_AVGGPSTI                                   0x000020C4 /* RW-4R */
#define NV_PAPU_AVGGPSTI_VALUE                             31:0 /* RWXUF */
#define NV_PAPU_WCGPSTI                                    0x000020C8 /* RW-4R */
#define NV_PAPU_WCGPSTI_VALUE                              31:0 /* RWXUF */
#define NV_PAPU_CURGPSTI                                   0x000020CC /* RW-4R */
#define NV_PAPU_CURGPSTI_VALUE                             31:0 /* RWXUF */
#define NV_PAPU_CNTGPSTI                                   0x000020D0 /* RW-4R */
#define NV_PAPU_CNTGPSTI_VALUE                             7:0 /* RWXUF */
#define NV_PAPU_GPSMAXSGE                                  0x000020D4 /* RW-4R */
#define NV_PAPU_GPSMAXSGE_VALUE                            15:0 /* RWXUF */
#define NV_PAPU_GPSMAXSGE_INIT                             0x00000000 /* RWI-V */
#define NV_PAPU_GPSMAXSGE_BITS                             15:0 /* RW-VF */
#define NV_PAPU_GPFMAXSGE                                  0x000020D8 /* RW-4R */
#define NV_PAPU_GPFMAXSGE_VALUE                            15:0 /* RWXUF */
#define NV_PAPU_GPFMAXSGE_INIT                             0x00000000 /* RWI-V */
#define NV_PAPU_GPFMAXSGE_BITS                             15:0 /* RW-VF */
#define NV_PAPU_EPSMAXSGE                                  0x000020DC /* RW-4R */
#define NV_PAPU_EPSMAXSGE_VALUE                            15:0 /* RWXUF */
#define NV_PAPU_EPSMAXSGE_INIT                             0x00000000 /* RWI-V */
#define NV_PAPU_EPSMAXSGE_BITS                             15:0 /* RW-VF */
#define NV_PAPU_EPFMAXSGE                                  0x000020E0 /* RW-4R */
#define NV_PAPU_EPFMAXSGE_VALUE                            15:0 /* RWXUF */
#define NV_PAPU_EPFMAXSGE_INIT                             0x00000000 /* RWI-V */
#define NV_PAPU_EPFMAXSGE_BITS                             15:0 /* RW-VF */
#define NV_PAPU_GPNADDR                                    0x00003004 /* RW-4R */
#define NV_PAPU_GPNADDR_VALUE                              31:12 /* RWXUF */
#define NV_PAPU_GPCADDR                                    0x00003014 /* RW-4R */
#define NV_PAPU_GPCADDR_VALUE                              31:12 /* RWXUF */
#define NV_PAPU_GPOFBASE0                                  0x00003024 /* RW-4R */
#define NV_PAPU_GPOFBASE0_VALUE                            23:8 /* RWXUF */
#define NV_PAPU_GPOFBASE1                                  0x00003034 /* RW-4R */
#define NV_PAPU_GPOFBASE1_VALUE                            23:8 /* RWXUF */
#define NV_PAPU_GPOFBASE2                                  0x00003044 /* RW-4R */
#define NV_PAPU_GPOFBASE2_VALUE                            23:8 /* RWXUF */
#define NV_PAPU_GPOFBASE3                                  0x00003054 /* RW-4R */
#define NV_PAPU_GPOFBASE3_VALUE                            23:8 /* RWXUF */
#define NV_PAPU_GPOFEND0                                   0x00003028 /* RW-4R */
#define NV_PAPU_GPOFEND0_VALUE                             23:8 /* RWXUF */
#define NV_PAPU_GPOFEND1                                   0x00003038 /* RW-4R */
#define NV_PAPU_GPOFEND1_VALUE                             23:8 /* RWXUF */
#define NV_PAPU_GPOFEND2                                   0x00003048 /* RW-4R */
#define NV_PAPU_GPOFEND2_VALUE                             23:8 /* RWXUF */
#define NV_PAPU_GPOFEND3                                   0x00003058 /* RW-4R */
#define NV_PAPU_GPOFEND3_VALUE                             23:8 /* RWXUF */
#define NV_PAPU_GPOFCUR0                                   0x0000302C /* RW-4R */
#define NV_PAPU_GPOFCUR0_VALUE                             23:2 /* RWXUF */
#define NV_PAPU_GPOFCUR1                                   0x0000303C /* RW-4R */
#define NV_PAPU_GPOFCUR1_VALUE                             23:2 /* RWXUF */
#define NV_PAPU_GPOFCUR2                                   0x0000304C /* RW-4R */
#define NV_PAPU_GPOFCUR2_VALUE                             23:2 /* RWXUF */
#define NV_PAPU_GPOFCUR3                                   0x0000305C /* RW-4R */
#define NV_PAPU_GPOFCUR3_VALUE                             23:2 /* RWXUF */
#define NV_PAPU_GPIFBASE0                                  0x00003064 /* RW-4R */
#define NV_PAPU_GPIFBASE0_VALUE                            23:8 /* RWXUF */
#define NV_PAPU_GPIFBASE1                                  0x00003074 /* RW-4R */
#define NV_PAPU_GPIFBASE1_VALUE                            23:8 /* RWXUF */
#define NV_PAPU_GPIFEND0                                   0x00003068 /* RW-4R */
#define NV_PAPU_GPIFEND0_VALUE                             23:8 /* RWXUF */
#define NV_PAPU_GPIFEND1                                   0x00003078 /* RW-4R */
#define NV_PAPU_GPIFEND1_VALUE                             23:8 /* RWXUF */
#define NV_PAPU_GPIFCUR0                                   0x0000306C /* RW-4R */
#define NV_PAPU_GPIFCUR0_VALUE                             23:2 /* RWXUF */
#define NV_PAPU_GPIFCUR1                                   0x0000307C /* RW-4R */
#define NV_PAPU_GPIFCUR1_VALUE                             23:2 /* RWXUF */
#define NV_PAPU_EPNADDR                                    0x00004004 /* RW-4R */
#define NV_PAPU_EPNADDR_VALUE                              31:12 /* RWXUF */
#define NV_PAPU_EPCADDR                                    0x00004014 /* RW-4R */
#define NV_PAPU_EPCADDR_VALUE                              31:12 /* RWXUF */
#define NV_PAPU_EPOFBASE0                                  0x00004024 /* RW-4R */
#define NV_PAPU_EPOFBASE0_VALUE                            23:8 /* RWXUF */
#define NV_PAPU_EPOFBASE1                                  0x00004034 /* RW-4R */
#define NV_PAPU_EPOFBASE1_VALUE                            23:8 /* RWXUF */
#define NV_PAPU_EPOFBASE2                                  0x00004044 /* RW-4R */
#define NV_PAPU_EPOFBASE2_VALUE                            23:8 /* RWXUF */
#define NV_PAPU_EPOFBASE3                                  0x00004054 /* RW-4R */
#define NV_PAPU_EPOFBASE3_VALUE                            23:8 /* RWXUF */
#define NV_PAPU_EPOFEND0                                   0x00004028 /* RW-4R */
#define NV_PAPU_EPOFEND0_VALUE                             23:8 /* RWXUF */
#define NV_PAPU_EPOFEND1                                   0x00004038 /* RW-4R */
#define NV_PAPU_EPOFEND1_VALUE                             23:8 /* RWXUF */
#define NV_PAPU_EPOFEND2                                   0x00004048 /* RW-4R */
#define NV_PAPU_EPOFEND2_VALUE                             23:8 /* RWXUF */
#define NV_PAPU_EPOFEND3                                   0x00004058 /* RW-4R */
#define NV_PAPU_EPOFEND3_VALUE                             23:8 /* RWXUF */
#define NV_PAPU_EPOFCUR0                                   0x0000402C /* RW-4R */
#define NV_PAPU_EPOFCUR0_VALUE                             23:2 /* RWXUF */
#define NV_PAPU_EPOFCUR1                                   0x0000403C /* RW-4R */
#define NV_PAPU_EPOFCUR1_VALUE                             23:2 /* RWXUF */
#define NV_PAPU_EPOFCUR2                                   0x0000404C /* RW-4R */
#define NV_PAPU_EPOFCUR2_VALUE                             23:2 /* RWXUF */
#define NV_PAPU_EPOFCUR3                                   0x0000405C /* RW-4R */
#define NV_PAPU_EPOFCUR3_VALUE                             23:2 /* RWXUF */
#define NV_PAPU_EPIFBASE0                                  0x00004064 /* RW-4R */
#define NV_PAPU_EPIFBASE0_VALUE                            23:8 /* RWXUF */
#define NV_PAPU_EPIFBASE1                                  0x00004074 /* RW-4R */
#define NV_PAPU_EPIFBASE1_VALUE                            23:8 /* RWXUF */
#define NV_PAPU_EPIFEND0                                   0x00004068 /* RW-4R */
#define NV_PAPU_EPIFEND0_VALUE                             23:8 /* RWXUF */
#define NV_PAPU_EPIFEND1                                   0x00004078 /* RW-4R */
#define NV_PAPU_EPIFEND1_VALUE                             23:8 /* RWXUF */
#define NV_PAPU_EPIFCUR0                                   0x0000406C /* RW-4R */
#define NV_PAPU_EPIFCUR0_VALUE                             23:2 /* RWXUF */
#define NV_PAPU_EPIFCUR1                                   0x0000407C /* RW-4R */
#define NV_PAPU_EPIFCUR1_VALUE                             23:2 /* RWXUF */
#define NV_PAPU_GPXMEM(i)                                  (0x30000+4*(i)) /* RW--M */
#define NV_PAPU_GPXMEM__SIZE_1                             0x1000 /* */ 
#define NV_PAPU_GPMIXBUF(i)                                (0x35000+4*(i)) /* R---M */
#define NV_PAPU_GPMIXBUF__SIZE_1                           0x0400 /* */ 
#define NV_PAPU_GPYMEM(i)                                  (0x36000+4*(i)) /* RW--M */
#define NV_PAPU_GPYMEM__SIZE_1                             0x0800 /* */ 
#define NV_PAPU_GPPMEM(i)                                  (0x3A000+4*(i)) /* RW--M */
#define NV_PAPU_GPPMEM__SIZE_1                             0x1000 /* */ 
#define NV_PAPU_GPRST                                      0x0003FFFC /* RW-4R */
#define NV_PAPU_GPRST_GPRST                                0:0 /* RW-VF */
#define NV_PAPU_GPRST_GPRST_DISABLED                       0x00000001 /* RWI-V */
#define NV_PAPU_GPRST_GPRST_ENABLED                        0x00000000 /* RW--V */
#define NV_PAPU_GPRST_GPDSPRST                             1:1 /* RW-VF */
#define NV_PAPU_GPRST_GPDSPRST_DISABLED                    0x00000001 /* RWI-V */
#define NV_PAPU_GPRST_GPDSPRST_ENABLED                     0x00000000 /* RW--V */
#define NV_PAPU_GPRST_GPNMI                                2:2 /* RW-VF */
#define NV_PAPU_GPRST_GPNMI_DISABLED                       0x00000000 /* RWI-V */
#define NV_PAPU_GPRST_GPNMI_ENABLED                        0x00000001 /* RW--V */
#define NV_PAPU_GPRST_GPABORT                              3:3 /* RW-VF */
#define NV_PAPU_GPRST_GPABORT_DISABLED                     0x00000000 /* RWI-V */
#define NV_PAPU_GPRST_GPABORT_ENABLED                      0x00000001 /* RW--V */
#define NV_PAPU_GPCTLG                                     0x0003FF28 /* RW-4R */
#define NV_PAPU_GPCTLG_GPSTYP                              0:0 /* RW-VF */
#define NV_PAPU_GPCTLG_GPSTYP_NON_ISO                      0x00000000 /* RWI-V */
#define NV_PAPU_GPCTLG_GPSTYP_ISO                          0x00000001 /* RW--V */
#define NV_PAPU_GPCTLOUT                                   0x0003FF20 /* RW-4R */
#define NV_PAPU_GPCTLOUT_GD0FMT                            1:0 /* RW-VF */
#define NV_PAPU_GPCTLOUT_GD0FMT_MONO                       0x00000000 /* RWI-V */
#define NV_PAPU_GPCTLOUT_GD0FMT_STEREO                     0x00000001 /* RW--V */
#define NV_PAPU_GPCTLOUT_GD0FMT_QUAD                       0x00000002 /* RW--V */
#define NV_PAPU_GPCTLOUT_GD0FMT_HEX                        0x00000003 /* RW--V */
#define NV_PAPU_GPCTLOUT_GP0TYP                            2:2 /* RW-VF */
#define NV_PAPU_GPCTLOUT_GP0TYP_NON_ISO                    0x00000000 /* RWI-V */
#define NV_PAPU_GPCTLOUT_GP0TYP_ISO                        0x00000001 /* RW--V */
#define NV_PAPU_GPCTLOUT_GD0SIZ                            4:3 /* RW-VF */
#define NV_PAPU_GPCTLOUT_GD0SIZ_8                          0x00000000 /* RWI-V */
#define NV_PAPU_GPCTLOUT_GD0SIZ_16                         0x00000001 /* RW--V */
#define NV_PAPU_GPCTLOUT_GD0SIZ_32                         0x00000002 /* RW--V */
#define NV_PAPU_GPCTLOUT_GD1FMT                            6:5 /* RW-VF */
#define NV_PAPU_GPCTLOUT_GD1FMT_MONO                       0x00000000 /* RWI-V */
#define NV_PAPU_GPCTLOUT_GD1FMT_STEREO                     0x00000001 /* RW--V */
#define NV_PAPU_GPCTLOUT_GD1FMT_QUAD                       0x00000002 /* RW--V */
#define NV_PAPU_GPCTLOUT_GD1FMT_HEX                        0x00000003 /* RW--V */
#define NV_PAPU_GPCTLOUT_GP1TYP                            7:7 /* RW-VF */
#define NV_PAPU_GPCTLOUT_GP1TYP_NON_ISO                    0x00000000 /* RWI-V */
#define NV_PAPU_GPCTLOUT_GP1TYP_ISO                        0x00000001 /* RW--V */
#define NV_PAPU_GPCTLOUT_GD1SIZ                            9:8 /* RW-VF */
#define NV_PAPU_GPCTLOUT_GD1SIZ_8                          0x00000000 /* RWI-V */
#define NV_PAPU_GPCTLOUT_GD1SIZ_16                         0x00000001 /* RW--V */
#define NV_PAPU_GPCTLOUT_GD1SIZ_32                         0x00000002 /* RW--V */
#define NV_PAPU_GPCTLOUT_GD2FMT                            11:10 /* RW-VF */
#define NV_PAPU_GPCTLOUT_GD2FMT_MONO                       0x00000000 /* RWI-V */
#define NV_PAPU_GPCTLOUT_GD2FMT_STEREO                     0x00000001 /* RW--V */
#define NV_PAPU_GPCTLOUT_GD2FMT_QUAD                       0x00000002 /* RW--V */
#define NV_PAPU_GPCTLOUT_GD2FMT_HEX                        0x00000003 /* RW--V */
#define NV_PAPU_GPCTLOUT_GP2TYP                            12:12 /* RW-VF */
#define NV_PAPU_GPCTLOUT_GP2TYP_NON_ISO                    0x00000000 /* RWI-V */
#define NV_PAPU_GPCTLOUT_GP2TYP_ISO                        0x00000001 /* RW--V */
#define NV_PAPU_GPCTLOUT_GD2SIZ                            14:13 /* RW-VF */
#define NV_PAPU_GPCTLOUT_GD2SIZ_8                          0x00000000 /* RWI-V */
#define NV_PAPU_GPCTLOUT_GD2SIZ_16                         0x00000001 /* RW--V */
#define NV_PAPU_GPCTLOUT_GD2SIZ_32                         0x00000002 /* RW--V */
#define NV_PAPU_GPCTLOUT_GD3FMT                            16:15 /* RW-VF */
#define NV_PAPU_GPCTLOUT_GD3FMT_MONO                       0x00000000 /* RWI-V */
#define NV_PAPU_GPCTLOUT_GD3FMT_STEREO                     0x00000001 /* RW--V */
#define NV_PAPU_GPCTLOUT_GD3FMT_QUAD                       0x00000002 /* RW--V */
#define NV_PAPU_GPCTLOUT_GD3FMT_HEX                        0x00000003 /* RW--V */
#define NV_PAPU_GPCTLOUT_GP3TYP                            17:17 /* RW-VF */
#define NV_PAPU_GPCTLOUT_GP3TYP_NON_ISO                    0x00000000 /* RWI-V */
#define NV_PAPU_GPCTLOUT_GP3TYP_ISO                        0x00000001 /* RW--V */
#define NV_PAPU_GPCTLOUT_GD3SIZ                            19:18 /* RW-VF */
#define NV_PAPU_GPCTLOUT_GD3SIZ_8                          0x00000000 /* RWI-V */
#define NV_PAPU_GPCTLOUT_GD3SIZ_16                         0x00000001 /* RW--V */
#define NV_PAPU_GPCTLOUT_GD3SIZ_32                         0x00000002 /* RW--V */
#define NV_PAPU_GPCTLIN                                    0x0003FF24 /* RW-4R */
#define NV_PAPU_GPCTLIN_GDI0FMT                            1:0 /* RW-VF */
#define NV_PAPU_GPCTLIN_GDI0FMT_MONO                       0x00000000 /* RWI-V */
#define NV_PAPU_GPCTLIN_GDI0FMT_STEREO                     0x00000001 /* RW--V */
#define NV_PAPU_GPCTLIN_GDI0FMT_QUAD                       0x00000002 /* RW--V */
#define NV_PAPU_GPCTLIN_GDI0FMT_HEX                        0x00000003 /* RW--V */
#define NV_PAPU_GPCTLIN_GPI0TYP                            2:2 /* RW-VF */
#define NV_PAPU_GPCTLIN_GPI0TYP_NON_ISO                    0x00000000 /* RWI-V */
#define NV_PAPU_GPCTLIN_GPI0TYP_ISO                        0x00000001 /* RW--V */
#define NV_PAPU_GPCTLIN_GDI0SIZ                            4:3 /* RW-VF */
#define NV_PAPU_GPCTLIN_GDI0SIZ_8                          0x00000000 /* RWI-V */
#define NV_PAPU_GPCTLIN_GDI0SIZ_16                         0x00000001 /* RW--V */
#define NV_PAPU_GPCTLIN_GDI0SIZ_32                         0x00000002 /* RW--V */
#define NV_PAPU_GPCTLIN_GDI1FMT                            6:5 /* RW-VF */
#define NV_PAPU_GPCTLIN_GDI1FMT_MONO                       0x00000000 /* RWI-V */
#define NV_PAPU_GPCTLIN_GDI1FMT_STEREO                     0x00000001 /* RW--V */
#define NV_PAPU_GPCTLIN_GDI1FMT_QUAD                       0x00000002 /* RW--V */
#define NV_PAPU_GPCTLIN_GDI1FMT_HEX                        0x00000003 /* RW--V */
#define NV_PAPU_GPCTLIN_GPI1TYP                            7:7 /* RW-VF */
#define NV_PAPU_GPCTLIN_GPI1TYP_NON_ISO                    0x00000000 /* RWI-V */
#define NV_PAPU_GPCTLIN_GPI1TYP_ISO                        0x00000001 /* RW--V */
#define NV_PAPU_GPCTLIN_GDI1SIZ                            9:8 /* RW-VF */
#define NV_PAPU_GPCTLIN_GDI1SIZ_8                          0x00000000 /* RWI-V */
#define NV_PAPU_GPCTLIN_GDI1SIZ_16                         0x00000001 /* RW--V */
#define NV_PAPU_GPCTLIN_GDI1SIZ_32                         0x00000002 /* RW--V */
#define NV_PAPU_GPMBO                                      0x0003FF08 /* RW-4R */
#define NV_PAPU_GPMBO_VALUE                                15:0 /* RWXUF */
#define NV_PAPU_GPMBI                                      0x0003FF0C /* RW-4R */
#define NV_PAPU_GPMBI_VALUE                                15:0 /* RWXUF */
#define NV_PAPU_GPGET                                      0x0003FF00 /* RW-4R */
#define NV_PAPU_GPGET_VALUE                                11:2 /* RWXUF */
#define NV_PAPU_GPPUT                                      0x0003FF04 /* RW-4R */
#define NV_PAPU_GPPUT_VALUE                                11:2 /* RWXUF */
#define NV_PAPU_GPIDRDY                                    0x0003FF10 /* RW-4R */
#define NV_PAPU_GPIDRDY_GPSETIDLE                          0:0 /* RW-VF */
#define NV_PAPU_GPIDRDY_GPSETIDLE_NOT_SET                  0x00000000 /* RWI-V */
#define NV_PAPU_GPIDRDY_GPSETIDLE_SET                      0x00000001 /* -W--V */
#define NV_PAPU_GPIDRDY_GPSTOPPED                          1:1 /* RW-VF */
#define NV_PAPU_GPIDRDY_GPSTOPPED_NOT_SET                  0x00000000 /* RWI-V */
#define NV_PAPU_GPIDRDY_GPSTOPPED_SET                      0x00000001 /* -W--V */
#define NV_PAPU_GPIDRDY_GPSTOP_ENABLE                      2:2 /* RW-VF */
#define NV_PAPU_GPIDRDY_GPSTOP_NOT_ENABLED                 0x00000000 /* RWI-V */
#define NV_PAPU_GPIDRDY_GPSTOP_ENABLED                     0x00000001 /* -W--V */
#define NV_PAPU_GPIDRDY_GPSETNINT                          3:3 /* RW-VF */
#define NV_PAPU_GPIDRDY_GPSETNINT_NOT_SET                  0x00000000 /* RWI-V */
#define NV_PAPU_GPIDRDY_GPSETNINT_SET                      0x00000001 /* RW--V */
#define NV_PAPU_GPT0CFG                                    0x0003FEC0 /* RW-4R */
#define NV_PAPU_GPT0CFG_GPT0RUN                            0:0 /* RW-VF */
#define NV_PAPU_GPT0CFG_GPT0RUN_IDLE                       0x00000000 /* RWI-V */
#define NV_PAPU_GPT0CFG_GPT0RUN_RUN                        0x00000001 /* RW--V */
#define NV_PAPU_GPT0CFG_GPT0DSTP                           1:1 /* RW-VF */
#define NV_PAPU_GPT0CFG_GPT0DSTP_RUN                       0x00000000 /* RWI-V */
#define NV_PAPU_GPT0CFG_GPT0DSTP_HOLD                      0x00000001 /* RW--V */
#define NV_PAPU_GPT1CFG                                    0x0003FED0 /* RW-4R */
#define NV_PAPU_GPT1CFG_GPT1RUN                            0:0 /* RW-VF */
#define NV_PAPU_GPT1CFG_GPT1RUN_IDLE                       0x00000000 /* RWI-V */
#define NV_PAPU_GPT1CFG_GPT1RUN_RUN                        0x00000001 /* RW--V */
#define NV_PAPU_GPT1CFG_GPT1DSTP                           1:1 /* RW-VF */
#define NV_PAPU_GPT1CFG_GPT1DSTP_RUN                       0x00000000 /* RWI-V */
#define NV_PAPU_GPT1CFG_GPT1DSTP_HOLD                      0x00000001 /* RW--V */
#define NV_PAPU_GPT0CTL                                    0x0003FEC4 /* RW-4R */
#define NV_PAPU_GPT0CTL_GPT0ACT                            1:0 /* RW-VF */
#define NV_PAPU_GPT0CTL_GPT0ACT_NOP                        0x00000000 /* RWI-V */
#define NV_PAPU_GPT0CTL_GPT0ACT_STZERO                     0x00000001 /* RW--V */
#define NV_PAPU_GPT0CTL_GPT0ACT_STCUR                      0x00000002 /* RW--V */
#define NV_PAPU_GPT0CTL_GPT0ACT_STOP                       0x00000003 /* RW--V */
#define NV_PAPU_GPT0CTL_GPT0ST                             2:2 /* RW-VF */
#define NV_PAPU_GPT0CTL_GPT0ST_STOP                        0x00000000 /* RWI-V */
#define NV_PAPU_GPT0CTL_GPT0ST_RUN                         0x00000001 /* RW--V */
#define NV_PAPU_GPT1CTL                                    0x0003FED4 /* RW-4R */
#define NV_PAPU_GPT1CTL_GPT1ACT                            1:0 /* RW-VF */
#define NV_PAPU_GPT1CTL_GPT1ACT_NOP                        0x00000000 /* RWI-V */
#define NV_PAPU_GPT1CTL_GPT1ACT_STZERO                     0x00000001 /* RW--V */
#define NV_PAPU_GPT1CTL_GPT1ACT_STCUR                      0x00000002 /* RW--V */
#define NV_PAPU_GPT1CTL_GPT1ACT_STOP                       0x00000003 /* RW--V */
#define NV_PAPU_GPT1CTL_GPT1ST                             2:2 /* RW-VF */
#define NV_PAPU_GPT1CTL_GPT1ST_STOP                        0x00000000 /* RWI-V */
#define NV_PAPU_GPT1CTL_GPT1ST_RUN                         0x00000001 /* RW--V */
#define NV_PAPU_GPT0TCNT                                   0x0003FEC8 /* RW-4R */
#define NV_PAPU_GPT0TCNT_VALUE                             23:0 /* RWXUF */
#define NV_PAPU_GPT1TCNT                                   0x0003FED8 /* RW-4R */
#define NV_PAPU_GPT1TCNT_VALUE                             23:0 /* RWXUF */
#define NV_PAPU_GPT0CCNT                                   0x0003FECC /* RW-4R */
#define NV_PAPU_GPT0CCNT_VALUE                             23:0 /* RWXUF */
#define NV_PAPU_GPT1CCNT                                   0x0003FEDC /* RW-4R */
#define NV_PAPU_GPT1CCNT_VALUE                             23:0 /* RWXUF */
#define NV_PAPU_GPISTS                                     0x0003FF14 /* RW-4R */
#define NV_PAPU_GPISTS_GPSTRTSTS                           0:0 /* RW-VF */
#define NV_PAPU_GPISTS_GPSTRTSTS_NO_INTR                   0x00000000 /* R-I-V */
#define NV_PAPU_GPISTS_GPSTRTSTS_INTR                      0x00000001 /* R---V */
#define NV_PAPU_GPISTS_GPSTRTSTS_CLR                       0x00000001 /* -W--C */
#define NV_PAPU_GPISTS_GPABRTSTS                           1:1 /* RW-VF */
#define NV_PAPU_GPISTS_GPABRTSTS_NO_INTR                   0x00000000 /* R-I-V */
#define NV_PAPU_GPISTS_GPABRTSTS_INTR                      0x00000001 /* R---V */
#define NV_PAPU_GPISTS_GPABRTSTS_CLR                       0x00000001 /* -W--C */
#define NV_PAPU_GPISTS_GPPUTSTS                            2:2 /* RW-VF */
#define NV_PAPU_GPISTS_GPPUTSTS_NO_INTR                    0x00000000 /* R-I-V */
#define NV_PAPU_GPISTS_GPPUTSTS_INTR                       0x00000001 /* R---V */
#define NV_PAPU_GPISTS_GPPUTSTS_CLR                        0x00000001 /* -W--C */
#define NV_PAPU_GPISTS_GPMBISTS                            3:3 /* RW-VF */
#define NV_PAPU_GPISTS_GPMBISTS_NO_INTR                    0x00000000 /* R-I-V */
#define NV_PAPU_GPISTS_GPMBISTS_INTR                       0x00000001 /* R---V */
#define NV_PAPU_GPISTS_GPMBISTS_CLR                        0x00000001 /* -W--C */
#define NV_PAPU_GPISTS_GPD1STS                             4:4 /* R--VF */
#define NV_PAPU_GPISTS_GPD1STS_NO_INTR                     0x00000000 /* R-I-V */
#define NV_PAPU_GPISTS_GPD1STS_INTR                        0x00000001 /* R---V */
#define NV_PAPU_GPISTS_GPD1STS_CLR                         0x00000001 /* -W--C */
#define NV_PAPU_GPISTS_GPD2STS                             5:5 /* RW-VF */
#define NV_PAPU_GPISTS_GPD2STS_NO_INTR                     0x00000000 /* R-I-V */
#define NV_PAPU_GPISTS_GPD2STS_INTR                        0x00000001 /* R---V */
#define NV_PAPU_GPISTS_GPD2STS_CLR                         0x00000001 /* -W--C */
#define NV_PAPU_GPISTS_GPD3STS                             6:6 /* RW-VF */
#define NV_PAPU_GPISTS_GPD3STS_NO_INTR                     0x00000000 /* R-I-V */
#define NV_PAPU_GPISTS_GPD3STS_INTR                        0x00000001 /* R---V */
#define NV_PAPU_GPISTS_GPD3STS_CLR                         0x00000001 /* -W--C */
#define NV_PAPU_GPISTS_GPDEOLSTS                           7:7 /* RW-VF */
#define NV_PAPU_GPISTS_GPDEOLSTS_NO_INTR                   0x00000000 /* R-I-V */
#define NV_PAPU_GPISTS_GPDEOLSTS_INTR                      0x00000001 /* R---V */
#define NV_PAPU_GPISTS_GPDEOLSTS_CLR                       0x00000001 /* -W--C */
#define NV_PAPU_GPISTS_GPT0STS                             8:8 /* RW-VF */
#define NV_PAPU_GPISTS_GPT0STS_NO_INTR                     0x00000000 /* R-I-V */
#define NV_PAPU_GPISTS_GPT0STS_INTR                        0x00000001 /* R---V */
#define NV_PAPU_GPISTS_GPT0STS_CLR                         0x00000001 /* -W--C */
#define NV_PAPU_GPISTS_GPT1STS                             9:9 /* RW-VF */
#define NV_PAPU_GPISTS_GPT1STS_NO_INTR                     0x00000000 /* R-I-V */
#define NV_PAPU_GPISTS_GPT1STS_INTR                        0x00000001 /* R---V */
#define NV_PAPU_GPISTS_GPT1STS_CLR                         0x00000001 /* -W--C */
#define NV_PAPU_GPISTS_GPDERRSTS                           10:10 /* RW-VF */
#define NV_PAPU_GPISTS_GPDERRSTS_NO_INTR                   0x00000000 /* R-I-V */
#define NV_PAPU_GPISTS_GPDERRSTS_INTR                      0x00000001 /* R---V */
#define NV_PAPU_GPISTS_GPDERRSTS_CLR                       0x00000001 /* -W--C */
#define NV_PAPU_GPHDRV(i)                                  (0x0003FE40+(i)*4) /* R--4A */
#define NV_PAPU_GPHDRV__SIZE_1                             32 /* */ 
#define NV_PAPU_GPHDRV_MHR                                 2:0 /* R--UF */
#define NV_PAPU_GPHDRV_VLD                                 3:3 /* R--UF */
#define NV_PAPU_GPHDRV_VLD_INVALID                         0x00000000 /* R-I-V */
#define NV_PAPU_GPHDRV_VLD_VALID                           0x00000001 /* R---V */
#define NV_PAPU_GPGSCNT                                    0x0003FF18 /* R--4R */
#define NV_PAPU_GPGSCNT_GSCNT                              23:0 /* R--UF */
#define NV_PAPU_GPDCFG                                     0x0003FF5C /* RW-4R */
#define NV_PAPU_GPDCFG_GPDASTRT                            0:0 /* RW-VF */
#define NV_PAPU_GPDCFG_GPDASTRT_DISABLED                   0x00000000 /* RWI-V */
#define NV_PAPU_GPDCFG_GPDASTRT_ENABLED                    0x00000001 /* RW--V */
#define NV_PAPU_GPDCFG_GPDARDY                             1:1 /* RW-VF */
#define NV_PAPU_GPDCFG_GPDARDY_DISABLED                    0x00000000 /* RWI-V */
#define NV_PAPU_GPDCFG_GPDARDY_ENABLED                     0x00000001 /* RW--V */
#define NV_PAPU_GPDCFG_GPDIOCR                             2:2 /* RW-VF */
#define NV_PAPU_GPDCFG_GPDIOCR_DISABLED                    0x00000000 /* RWI-V */
#define NV_PAPU_GPDCFG_GPDIOCR_ENABLED                     0x00000001 /* RW--V */
#define NV_PAPU_GPDCFG_GPDEOLR                             3:3 /* RW-VF */
#define NV_PAPU_GPDCFG_GPDEOLR_DISABLED                    0x00000000 /* RWI-V */
#define NV_PAPU_GPDCFG_GPDEOLR_ENABLED                     0x00000001 /* RW--V */
#define NV_PAPU_GPDCFG_GPDERRR                             4:4 /* RW-VF */
#define NV_PAPU_GPDCFG_GPDERRR_DISABLED                    0x00000000 /* RWI-V */
#define NV_PAPU_GPDCFG_GPDERRR_ENABLED                     0x00000001 /* RW--V */
#define NV_PAPU_GPDCTL                                     0x0003FF58 /* RW-4R */
#define NV_PAPU_GPDCTL_GPDACT                              2:0 /* RW-VF */
#define NV_PAPU_GPDCTL_GPDACT_NOP                          0x00000000 /* RWI-V */
#define NV_PAPU_GPDCTL_GPDACT_START                        0x00000001 /* -W--V */
#define NV_PAPU_GPDCTL_GPDACT_STOP                         0x00000002 /* -W--V */
#define NV_PAPU_GPDCTL_GPDACT_FREEZE                       0x00000003 /* -W--V */
#define NV_PAPU_GPDCTL_GPDACT_UNFREEZE                     0x00000004 /* -W--V */
#define NV_PAPU_GPDCTL_GPDACT_ABORT                        0x00000005 /* -W--V */
#define NV_PAPU_GPDCTL_GPDFRZ                              3:3 /* R--VF */
#define NV_PAPU_GPDCTL_GPDFRZ_NOT_FROZE                    0x00000000 /* R-I-V */
#define NV_PAPU_GPDCTL_GPDFRZ_FROZE                        0x00000001 /* R---V */
#define NV_PAPU_GPDCTL_GPDRUN                              4:4 /* R--VF */
#define NV_PAPU_GPDCTL_GPDRUN_NOT_RUN                      0x00000000 /* R-I-V */
#define NV_PAPU_GPDCTL_GPDRUN_RUNNING                      0x00000001 /* R---V */
#define NV_PAPU_GPDCTL_GPDSTP                              5:5 /* R--VF */
#define NV_PAPU_GPDCTL_GPDSTP_NOT_STOP                     0x00000000 /* R-I-V */
#define NV_PAPU_GPDCTL_GPDFRZ_STOPPED                      0x00000001 /* R---V */
#define NV_PAPU_GPDSPT                                     0x0003FF54 /* RW-4R */
#define NV_PAPU_GPDSPT_GPDSBPT                             13:0 /* RW-VF */
#define NV_PAPU_GPDSPT_GPDSBPT_INIT                        0x00000000 /* RWI-V */
#define NV_PAPU_GPDSPT_GPDEOL                              14:14 /* RW-VF */
#define NV_PAPU_GPDSPT_GPDEOL_NOT_EOL                      0x00000000 /* RWI-V */
#define NV_PAPU_GPDSPT_GPDEOL_EOL                          0x00000001 /* RW--V */
#define NV_PAPU_GPNSPT                                     0x0003FF50 /* RW-4R */
#define NV_PAPU_GPNSPT_GPNSBPT                             13:0 /* RW-VF */
#define NV_PAPU_GPNSPT_GPNSBPT_INIT                        0x00000000 /* RWI-V */
#define NV_PAPU_GPNSPT_GPNEOL                              14:14 /* RW-VF */
#define NV_PAPU_GPNSPT_GPNEOL_NOT_EOL                      0x00000000 /* RWI-V */
#define NV_PAPU_GPNSPT_GPNEOL_EOL                          0x00000001 /* RW--V */
#define NV_PAPU_GPDBASE(i)                                 (0x0003FF30+(i)*8) /* RW-4A */
#define NV_PAPU_GPDBASE__SIZE_1                            4 /* */ 
#define NV_PAPU_GPDBASE_BASE                               23:0 /* R--UF */
#define NV_PAPU_GPDSIZE(i)                                 (0x0003FF34+(i)*8) /* RW-4A */
#define NV_PAPU_GPDSIZE__SIZE_1                            4 /* */ 
#define NV_PAPU_GPDSIZE_SIZE                               23:0 /* R--UF */
#define NV_PAPU_GPDDEBUG                                   0x0003FF2C /* R--4R */
#define NV_PAPU_GPDDEBUG_PBADBLK                           13:0 /* R--VF */
#define NV_PAPU_GPDDEBUG_ILLSMBUFID                        14:14 /* R--VF */
#define NV_PAPU_GPDDEBUG_ILLSMBUFID_NOT_ILL                0x00000000 /* R---V */
#define NV_PAPU_GPDDEBUG_ILLSMBUFID_ILL                    0x00000001 /* R---V */
#define NV_PAPU_GPDDEBUG_ILLSMDATAFMT                      15:15 /* R--VF */
#define NV_PAPU_GPDDEBUG_ILLSMDATAFMT_NOT_ILL              0x00000000 /* R---V */
#define NV_PAPU_GPDDEBUG_ILLSMDATAFMT_ILL                  0x00000001 /* R---V */
#define NV_PAPU_GPDDEBUG_ILLCOUNT                          16:16 /* R--VF */
#define NV_PAPU_GPDDEBUG_ILLCOUNT_NOT_ILL                  0x00000000 /* R---V */
#define NV_PAPU_GPDDEBUG_ILLCOUNT_ILL                      0x00000001 /* R---V */
#define NV_PAPU_EPXMEM(i)                                  (0x50000+4*(i)) /* RW--M */
#define NV_PAPU_EPXMEM__SIZE_1                             0x0C00 /* */ 
#define NV_PAPU_EPYMEM(i)                                  (0x56000+4*(i)) /* RW--M */
#define NV_PAPU_EPYMEM__SIZE_1                             0x0100 /* */ 
#define NV_PAPU_EPPMEM(i)                                  (0x5A000+4*(i)) /* RW--M */
#define NV_PAPU_EPPMEM__SIZE_1                             0x1000 /* */ 
#define NV_PAPU_EPRST                                      0x0005FFFC /* RW-4R */
#define NV_PAPU_EPRST_EPRST                                0:0 /* RW-VF */
#define NV_PAPU_EPRST_EPRST_DISABLED                       0x00000001 /* RWI-V */
#define NV_PAPU_EPRST_EPRST_ENABLED                        0x00000000 /* RW--V */
#define NV_PAPU_EPRST_EPDSPRST                             1:1 /* RW-VF */
#define NV_PAPU_EPRST_EPDSPRST_DISABLED                    0x00000001 /* RWI-V */
#define NV_PAPU_EPRST_EPDSPRST_ENABLED                     0x00000000 /* RW--V */
#define NV_PAPU_EPRST_EPNMI                                2:2 /* RW-VF */
#define NV_PAPU_EPRST_EPNMI_DISABLED                       0x00000001 /* RWI-V */
#define NV_PAPU_EPRST_EPNMI_ENABLED                        0x00000000 /* RW--V */
#define NV_PAPU_EPRST_EPABORT                              3:3 /* RW-VF */
#define NV_PAPU_EPRST_EPABORT_DISABLED                     0x00000001 /* RWI-V */
#define NV_PAPU_EPRST_EPABORT_ENABLED                      0x00000000 /* RW--V */
#define NV_PAPU_EPCTLG                                     0x0005FF28 /* RW-4R */
#define NV_PAPU_EPCTLG_EPSTYP                              0:0 /* RW-VF */
#define NV_PAPU_EPCTLG_EPSTYP_NON_ISO                      0x00000000 /* RWI-V */
#define NV_PAPU_EPCTLG_EPSTYP_ISO                          0x00000001 /* RW--V */
#define NV_PAPU_EPCTLOUT                                   0x0005FF20 /* RW-4R */
#define NV_PAPU_EPCTLOUT_ED0FMT                            1:0 /* RW-VF */
#define NV_PAPU_EPCTLOUT_ED0FMT_MONO                       0x00000000 /* RWI-V */
#define NV_PAPU_EPCTLOUT_ED0FMT_STEREO                     0x00000001 /* RW--V */
#define NV_PAPU_EPCTLOUT_ED0FMT_QUAD                       0x00000002 /* RW--V */
#define NV_PAPU_EPCTLOUT_ED0FMT_HEX                        0x00000003 /* RW--V */
#define NV_PAPU_EPCTLOUT_EP0TYP                            2:2 /* RW-VF */
#define NV_PAPU_EPCTLOUT_EP0TYP_NON_ISO                    0x00000000 /* RWI-V */
#define NV_PAPU_EPCTLOUT_EP0TYP_ISO                        0x00000001 /* RW--V */
#define NV_PAPU_EPCTLOUT_ED0SIZ                            4:3 /* RW-VF */
#define NV_PAPU_EPCTLOUT_ED0SIZ_8                          0x00000000 /* RWI-V */
#define NV_PAPU_EPCTLOUT_ED0SIZ_16                         0x00000001 /* RW--V */
#define NV_PAPU_EPCTLOUT_ED0SIZ_32                         0x00000002 /* RW--V */
#define NV_PAPU_EPCTLOUT_ED1FMT                            6:5 /* RW-VF */
#define NV_PAPU_EPCTLOUT_ED1FMT_MONO                       0x00000000 /* RWI-V */
#define NV_PAPU_EPCTLOUT_ED1FMT_STEREO                     0x00000001 /* RW--V */
#define NV_PAPU_EPCTLOUT_ED1FMT_QUAD                       0x00000002 /* RW--V */
#define NV_PAPU_EPCTLOUT_ED1FMT_HEX                        0x00000003 /* RW--V */
#define NV_PAPU_EPCTLOUT_EP1TYP                            7:7 /* RW-VF */
#define NV_PAPU_EPCTLOUT_EP1TYP_NON_ISO                    0x00000000 /* RWI-V */
#define NV_PAPU_EPCTLOUT_EP1TYP_ISO                        0x00000001 /* RW--V */
#define NV_PAPU_EPCTLOUT_ED1SIZ                            9:8 /* RW-VF */
#define NV_PAPU_EPCTLOUT_ED1SIZ_8                          0x00000000 /* RWI-V */
#define NV_PAPU_EPCTLOUT_ED1SIZ_16                         0x00000001 /* RW--V */
#define NV_PAPU_EPCTLOUT_ED1SIZ_32                         0x00000002 /* RW--V */
#define NV_PAPU_EPCTLOUT_ED2FMT                            11:10 /* RW-VF */
#define NV_PAPU_EPCTLOUT_ED2FMT_MONO                       0x00000000 /* RWI-V */
#define NV_PAPU_EPCTLOUT_ED2FMT_STEREO                     0x00000001 /* RW--V */
#define NV_PAPU_EPCTLOUT_ED2FMT_QUAD                       0x00000002 /* RW--V */
#define NV_PAPU_EPCTLOUT_ED2FMT_HEX                        0x00000003 /* RW--V */
#define NV_PAPU_EPCTLOUT_EP2TYP                            12:12 /* RW-VF */
#define NV_PAPU_EPCTLOUT_EP2TYP_NON_ISO                    0x00000000 /* RWI-V */
#define NV_PAPU_EPCTLOUT_EP2TYP_ISO                        0x00000001 /* RW--V */
#define NV_PAPU_EPCTLOUT_ED2SIZ                            14:13 /* RW-VF */
#define NV_PAPU_EPCTLOUT_ED2SIZ_8                          0x00000000 /* RWI-V */
#define NV_PAPU_EPCTLOUT_ED2SIZ_16                         0x00000001 /* RW--V */
#define NV_PAPU_EPCTLOUT_ED2SIZ_32                         0x00000002 /* RW--V */
#define NV_PAPU_EPCTLOUT_ED3FMT                            16:15 /* RW-VF */
#define NV_PAPU_EPCTLOUT_ED3FMT_MONO                       0x00000000 /* RWI-V */
#define NV_PAPU_EPCTLOUT_ED3FMT_STEREO                     0x00000001 /* RW--V */
#define NV_PAPU_EPCTLOUT_ED3FMT_QUAD                       0x00000002 /* RW--V */
#define NV_PAPU_EPCTLOUT_ED3FMT_HEX                        0x00000003 /* RW--V */
#define NV_PAPU_EPCTLOUT_EP3TYP                            17:17 /* RW-VF */
#define NV_PAPU_EPCTLOUT_EP3TYP_NON_ISO                    0x00000000 /* RWI-V */
#define NV_PAPU_EPCTLOUT_EP3TYP_ISO                        0x00000001 /* RW--V */
#define NV_PAPU_EPCTLOUT_ED3SIZ                            19:18 /* RW-VF */
#define NV_PAPU_EPCTLOUT_ED3SIZ_8                          0x00000000 /* RWI-V */
#define NV_PAPU_EPCTLOUT_ED3SIZ_16                         0x00000001 /* RW--V */
#define NV_PAPU_EPCTLOUT_ED3SIZ_32                         0x00000002 /* RW--V */
#define NV_PAPU_EPCTLIN                                    0x0005FF24 /* RW-4R */
#define NV_PAPU_EPCTLIN_EDI0FMT                            1:0 /* RW-VF */
#define NV_PAPU_EPCTLIN_EDI0FMT_MONO                       0x00000000 /* RWI-V */
#define NV_PAPU_EPCTLIN_EDI0FMT_STEREO                     0x00000001 /* RW--V */
#define NV_PAPU_EPCTLIN_EDI0FMT_QUAD                       0x00000002 /* RW--V */
#define NV_PAPU_EPCTLIN_EDI0FMT_HEX                        0x00000003 /* RW--V */
#define NV_PAPU_EPCTLIN_EPI0TYP                            2:2 /* RW-VF */
#define NV_PAPU_EPCTLIN_EPI0TYP_NON_ISO                    0x00000000 /* RWI-V */
#define NV_PAPU_EPCTLIN_EPI0TYP_ISO                        0x00000001 /* RW--V */
#define NV_PAPU_EPCTLIN_EDI0SIZ                            4:3 /* RW-VF */
#define NV_PAPU_EPCTLIN_EDI0SIZ_8                          0x00000000 /* RWI-V */
#define NV_PAPU_EPCTLIN_EDI0SIZ_16                         0x00000001 /* RW--V */
#define NV_PAPU_EPCTLIN_EDI0SIZ_32                         0x00000002 /* RW--V */
#define NV_PAPU_EPCTLIN_EDI1FMT                            6:5 /* RW-VF */
#define NV_PAPU_EPCTLIN_EDI1FMT_MONO                       0x00000000 /* RWI-V */
#define NV_PAPU_EPCTLIN_EDI1FMT_STEREO                     0x00000001 /* RW--V */
#define NV_PAPU_EPCTLIN_EDI1FMT_QUAD                       0x00000002 /* RW--V */
#define NV_PAPU_EPCTLIN_EDI1FMT_HEX                        0x00000003 /* RW--V */
#define NV_PAPU_EPCTLIN_EPI1TYP                            7:7 /* RW-VF */
#define NV_PAPU_EPCTLIN_EPI1TYP_NON_ISO                    0x00000000 /* RWI-V */
#define NV_PAPU_EPCTLIN_EPI1TYP_ISO                        0x00000001 /* RW--V */
#define NV_PAPU_EPCTLIN_EDI1SIZ                            9:8 /* RW-VF */
#define NV_PAPU_EPCTLIN_EDI1SIZ_8                          0x00000000 /* RWI-V */
#define NV_PAPU_EPCTLIN_EDI1SIZ_16                         0x00000001 /* RW--V */
#define NV_PAPU_EPCTLIN_EDI1SIZ_32                         0x00000002 /* RW--V */
#define NV_PAPU_EPMBO                                      0x0005FF08 /* RW-4R */
#define NV_PAPU_EPMBO_VALUE                                15:0 /* RWXUF */
#define NV_PAPU_EPMBI                                      0x0005FF0C /* RW-4R */
#define NV_PAPU_EPMBI_VALUE                                15:0 /* RWXUF */
#define NV_PAPU_EPGET                                      0x0005FF00 /* RW-4R */
#define NV_PAPU_EPGET_VALUE                                11:2 /* RWXUF */
#define NV_PAPU_EPPUT                                      0x0005FF04 /* RW-4R */
#define NV_PAPU_EPPUT_VALUE                                11:2 /* RWXUF */
#define NV_PAPU_EPIDRDY                                    0x0005FF10 /* RW-4R */
#define NV_PAPU_EPIDRDY_EPSETIDLE                          0:0 /* RW-VF */
#define NV_PAPU_EPIDRDY_EPSETIDLE_NOT_SET                  0x00000000 /* RWI-V */
#define NV_PAPU_EPIDRDY_EPSETIDLE_SET                      0x00000001 /* -W--V */
#define NV_PAPU_EPIDRDY_EPSTOPPED                          1:1 /* RW-VF */
#define NV_PAPU_EPIDRDY_EPSTOPPED_NOT_SET                  0x00000000 /* RWI-V */
#define NV_PAPU_EPIDRDY_EPSTOPPED_SET                      0x00000001 /* -W--V */
#define NV_PAPU_EPIDRDY_EPSTOP_ENABLE                      2:2 /* RW-VF */
#define NV_PAPU_EPIDRDY_EPSTOP_NOT_ENABLED                 0x00000000 /* RWI-V */
#define NV_PAPU_EPIDRDY_EPSTOP_ENABLED                     0x00000001 /* -W--V */
#define NV_PAPU_EPIDRDY_EPSETNINT                          3:3 /* RW-VF */
#define NV_PAPU_EPIDRDY_EPSETNINT_NOT_SET                  0x00000000 /* RWI-V */
#define NV_PAPU_EPIDRDY_EPSETNINT_SET                      0x00000001 /* RW--V */
#define NV_PAPU_EPT0CFG                                    0x0005FEC0 /* RW-4R */
#define NV_PAPU_EPT0CFG_EPT0RUN                            0:0 /* RW-VF */
#define NV_PAPU_EPT0CFG_EPT0RUN_IDLE                       0x00000000 /* RWI-V */
#define NV_PAPU_EPT0CFG_EPT0RUN_RUN                        0x00000001 /* RW--V */
#define NV_PAPU_EPT0CFG_EPT0DSTP                           1:1 /* RW-VF */
#define NV_PAPU_EPT0CFG_EPT0DSTP_RUN                       0x00000000 /* RWI-V */
#define NV_PAPU_EPT0CFG_EPT0DSTP_HOLD                      0x00000001 /* RW--V */
#define NV_PAPU_EPT1CFG                                    0x0005FED0 /* RW-4R */
#define NV_PAPU_EPT1CFG_EPT1RUN                            0:0 /* RW-VF */
#define NV_PAPU_EPT1CFG_EPT1RUN_IDLE                       0x00000000 /* RWI-V */
#define NV_PAPU_EPT1CFG_EPT1RUN_RUN                        0x00000001 /* RW--V */
#define NV_PAPU_EPT1CFG_EPT1DSTP                           1:1 /* RW-VF */
#define NV_PAPU_EPT1CFG_EPT1DSTP_RUN                       0x00000000 /* RWI-V */
#define NV_PAPU_EPT1CFG_EPT1DSTP_HOLD                      0x00000001 /* RW--V */
#define NV_PAPU_EPT0CTL                                    0x0005FEC4 /* RW-4R */
#define NV_PAPU_EPT0CTL_EPT0ACT                            1:0 /* RW-VF */
#define NV_PAPU_EPT0CTL_EPT0ACT_NOP                        0x00000000 /* RWI-V */
#define NV_PAPU_EPT0CTL_EPT0ACT_STZERO                     0x00000001 /* RW--V */
#define NV_PAPU_EPT0CTL_EPT0ACT_STCUR                      0x00000002 /* RW--V */
#define NV_PAPU_EPT0CTL_EPT0ACT_STOP                       0x00000003 /* RW--V */
#define NV_PAPU_EPT0CTL_EPT0ST                             2:2 /* RW-VF */
#define NV_PAPU_EPT0CTL_EPT0ST_STOP                        0x00000000 /* RWI-V */
#define NV_PAPU_EPT0CTL_EPT0ST_RUN                         0x00000001 /* RW--V */
#define NV_PAPU_EPT1CTL                                    0x0005FED4 /* RW-4R */
#define NV_PAPU_EPT1CTL_EPT1ACT                            1:0 /* RW-VF */
#define NV_PAPU_EPT1CTL_EPT1ACT_NOP                        0x00000000 /* RWI-V */
#define NV_PAPU_EPT1CTL_EPT1ACT_STZERO                     0x00000001 /* RW--V */
#define NV_PAPU_EPT1CTL_EPT1ACT_STCUR                      0x00000002 /* RW--V */
#define NV_PAPU_EPT1CTL_EPT1ACT_STOP                       0x00000003 /* RW--V */
#define NV_PAPU_EPT1CTL_EPT1ST                             2:2 /* RW-VF */
#define NV_PAPU_EPT1CTL_EPT1ST_STOP                        0x00000000 /* RWI-V */
#define NV_PAPU_EPT1CTL_EPT1ST_RUN                         0x00000001 /* RW--V */
#define NV_PAPU_EPT0TCNT                                   0x0005FEC8 /* RW-4R */
#define NV_PAPU_EPT0TCNT_VALUE                             23:0 /* RWXUF */
#define NV_PAPU_EPT1TCNT                                   0x0005FED8 /* RW-4R */
#define NV_PAPU_EPT1TCNT_VALUE                             23:0 /* RWXUF */
#define NV_PAPU_EPT0CCNT                                   0x0005FECC /* RW-4R */
#define NV_PAPU_EPT0CCNT_VALUE                             23:0 /* RWXUF */
#define NV_PAPU_EPT1CCNT                                   0x0005FEDC /* RW-4R */
#define NV_PAPU_EPT1CCNT_VALUE                             23:0 /* RWXUF */
#define NV_PAPU_EPISTS                                     0x0005FF14 /* RW-4R */
#define NV_PAPU_EPISTS_EPSTRTSTS                           0:0 /* RW-VF */
#define NV_PAPU_EPISTS_EPSTRTSTS_NO_INTR                   0x00000000 /* R-I-V */
#define NV_PAPU_EPISTS_EPSTRTSTS_INTR                      0x00000001 /* R---V */
#define NV_PAPU_EPISTS_EPSTRTSTS_CLR                       0x00000001 /* -W--C */
#define NV_PAPU_EPISTS_EPABRTSTS                           1:1 /* RW-VF */
#define NV_PAPU_EPISTS_EPABRTSTS_NO_INTR                   0x00000000 /* R-I-V */
#define NV_PAPU_EPISTS_EPABRTSTS_INTR                      0x00000001 /* R---V */
#define NV_PAPU_EPISTS_EPABRTSTS_CLR                       0x00000001 /* -W--C */
#define NV_PAPU_EPISTS_EPPUTSTS                            2:2 /* RW-VF */
#define NV_PAPU_EPISTS_EPPUTSTS_NO_INTR                    0x00000000 /* R-I-V */
#define NV_PAPU_EPISTS_EPPUTSTS_INTR                       0x00000001 /* R---V */
#define NV_PAPU_EPISTS_EPPUTSTS_CLR                        0x00000001 /* -W--C */
#define NV_PAPU_EPISTS_EPMBISTS                            3:3 /* RW-VF */
#define NV_PAPU_EPISTS_EPMBISTS_NO_INTR                    0x00000000 /* R-I-V */
#define NV_PAPU_EPISTS_EPMBISTS_INTR                       0x00000001 /* R---V */
#define NV_PAPU_EPISTS_EPMBISTS_CLR                        0x00000001 /* -W--C */
#define NV_PAPU_EPISTS_EPD1STS                             4:4 /* R--VF */
#define NV_PAPU_EPISTS_EPD1STS_NO_INTR                     0x00000000 /* R-I-V */
#define NV_PAPU_EPISTS_EPD1STS_INTR                        0x00000001 /* R---V */
#define NV_PAPU_EPISTS_EPD1STS_CLR                         0x00000001 /* -W--C */
#define NV_PAPU_EPISTS_EPD2STS                             5:5 /* RW-VF */
#define NV_PAPU_EPISTS_EPD2STS_NO_INTR                     0x00000000 /* R-I-V */
#define NV_PAPU_EPISTS_EPD2STS_INTR                        0x00000001 /* R---V */
#define NV_PAPU_EPISTS_EPD2STS_CLR                         0x00000001 /* -W--C */
#define NV_PAPU_EPISTS_EPD3STS                             6:6 /* RW-VF */
#define NV_PAPU_EPISTS_EPD3STS_NO_INTR                     0x00000000 /* R-I-V */
#define NV_PAPU_EPISTS_EPD3STS_INTR                        0x00000001 /* R---V */
#define NV_PAPU_EPISTS_EPD3STS_CLR                         0x00000001 /* -W--C */
#define NV_PAPU_EPISTS_EPDEOLSTS                           7:7 /* RW-VF */
#define NV_PAPU_EPISTS_EPDEOLSTS_NO_INTR                   0x00000000 /* R-I-V */
#define NV_PAPU_EPISTS_EPDEOLSTS_INTR                      0x00000001 /* R---V */
#define NV_PAPU_EPISTS_EPDEOLSTS_CLR                       0x00000001 /* -W--C */
#define NV_PAPU_EPISTS_EPT0STS                             8:8 /* RW-VF */
#define NV_PAPU_EPISTS_EPT0STS_NO_INTR                     0x00000000 /* R-I-V */
#define NV_PAPU_EPISTS_EPT0STS_INTR                        0x00000001 /* R---V */
#define NV_PAPU_EPISTS_EPT0STS_CLR                         0x00000001 /* -W--C */
#define NV_PAPU_EPISTS_EPT1STS                             9:9 /* RW-VF */
#define NV_PAPU_EPISTS_EPT1STS_NO_INTR                     0x00000000 /* R-I-V */
#define NV_PAPU_EPISTS_EPT1STS_INTR                        0x00000001 /* R---V */
#define NV_PAPU_EPISTS_EPT1STS_CLR                         0x00000001 /* -W--C */
#define NV_PAPU_EPISTS_EPDERRSTS                           10:10 /* RW-VF */
#define NV_PAPU_EPISTS_EPDERRSTS_NO_INTR                   0x00000000 /* R-I-V */
#define NV_PAPU_EPISTS_EPDERRSTS_INTR                      0x00000001 /* R---V */
#define NV_PAPU_EPISTS_EPDERRSTS_CLR                       0x00000001 /* -W--C */
#define NV_PAPU_EPGSCNT                                    0x0005FF18 /* R--4R */
#define NV_PAPU_EPGSCNT_GSCNT                              23:0 /* R--UF */
#define NV_PAPU_EPDCFG                                     0x0005FF5C /* RW-4R */
#define NV_PAPU_EPDCFG_EPDASTRT                            0:0 /* RW-VF */
#define NV_PAPU_EPDCFG_EPDASTRT_DISABLED                   0x00000000 /* RWI-V */
#define NV_PAPU_EPDCFG_EPDASTRT_ENABLED                    0x00000001 /* RW--V */
#define NV_PAPU_EPDCFG_EPDARDY                             1:1 /* RW-VF */
#define NV_PAPU_EPDCFG_EPDARDY_DISABLED                    0x00000000 /* RWI-V */
#define NV_PAPU_EPDCFG_EPDARDY_ENABLED                     0x00000001 /* RW--V */
#define NV_PAPU_EPDCFG_EPDIOCR                             2:2 /* RW-VF */
#define NV_PAPU_EPDCFG_EPDIOCR_DISABLED                    0x00000000 /* RWI-V */
#define NV_PAPU_EPDCFG_EPDIOCR_ENABLED                     0x00000001 /* RW--V */
#define NV_PAPU_EPDCFG_EPDEOLR                             3:3 /* RW-VF */
#define NV_PAPU_EPDCFG_EPDEOLR_DISABLED                    0x00000000 /* RWI-V */
#define NV_PAPU_EPDCFG_EPDEOLR_ENABLED                     0x00000001 /* RW--V */
#define NV_PAPU_EPDCFG_EPDERRR                             4:4 /* RW-VF */
#define NV_PAPU_EPDCFG_EPDERRR_DISABLED                    0x00000000 /* RWI-V */
#define NV_PAPU_EPDCFG_EPDERRR_ENABLED                     0x00000001 /* RW--V */
#define NV_PAPU_EPDCTL                                     0x0005FF58 /* RW-4R */
#define NV_PAPU_EPDCTL_EPDACT                              2:0 /* RW-VF */
#define NV_PAPU_EPDCTL_EPDACT_NOP                          0x00000000 /* RWI-V */
#define NV_PAPU_EPDCFG_EPDACT_START                        0x00000001 /* -W--V */
#define NV_PAPU_EPDCFG_EPDACT_STOP                         0x00000002 /* -W--V */
#define NV_PAPU_EPDCFG_EPDACT_FREEZE                       0x00000003 /* -W--V */
#define NV_PAPU_EPDCFG_EPDACT_UNFREEZE                     0x00000004 /* -W--V */
#define NV_PAPU_EPDCFG_EPDACT_ABORT                        0x00000005 /* -W--V */
#define NV_PAPU_EPDCTL_EPDFRZ                              3:3 /* R--VF */
#define NV_PAPU_EPDCFG_EPDFRZ_NOT_FROZE                    0x00000000 /* R-I-V */
#define NV_PAPU_EPDCFG_EPDFRZ_FROZE                        0x00000001 /* R---V */
#define NV_PAPU_EPDCTL_EPDRUN                              4:4 /* R--VF */
#define NV_PAPU_EPDCFG_EPDRUN_NOT_RUN                      0x00000000 /* R-I-V */
#define NV_PAPU_EPDCFG_EPDRUN_RUNNING                      0x00000001 /* R---V */
#define NV_PAPU_EPDCTL_EPDSTP                              5:5 /* R--VF */
#define NV_PAPU_EPDCFG_EPDSTP_NOT_STOP                     0x00000000 /* R-I-V */
#define NV_PAPU_EPDCFG_EPDFRZ_STOPPED                      0x00000001 /* R---V */
#define NV_PAPU_EPDSPT                                     0x0005FF54 /* RW-4R */
#define NV_PAPU_EPDSPT_EPDSBPT                             13:0 /* RW-VF */
#define NV_PAPU_EPDSPT_EPDSBPT_INIT                        0x00000000 /* RWI-V */
#define NV_PAPU_EPDSPT_EPDEOL                              14:14 /* RW-VF */
#define NV_PAPU_EPDSPT_EPDEOL_NOT_EOL                      0x00000000 /* RWI-V */
#define NV_PAPU_EPDSPT_EPDEOL_EOL                          0x00000001 /* RW--V */
#define NV_PAPU_EPNSPT                                     0x0005FF50 /* RW-4R */
#define NV_PAPU_EPNSPT_EPNSBPT                             13:0 /* RW-VF */
#define NV_PAPU_EPNSPT_EPNSBPT_INIT                        0x00000000 /* RWI-V */
#define NV_PAPU_EPNSPT_EPNEOL                              14:14 /* RW-VF */
#define NV_PAPU_EPNSPT_EPNEOL_NOT_EOL                      0x00000000 /* RWI-V */
#define NV_PAPU_EPNSPT_EPNEOL_EOL                          0x00000001 /* RW--V */
#define NV_PAPU_EPDBASE(i)                                 (0x0005FF30+(i)*8) /* RW-4A */
#define NV_PAPU_EPDBASE__SIZE_1                            4 /* */ 
#define NV_PAPU_EPDBASE_BASE                               23:0 /* R--UF */
#define NV_PAPU_EPDSIZE(i)                                 (0x0005FF34+(i)*8) /* RW-4A */
#define NV_PAPU_EPDSIZE__SIZE_1                            4 /* */ 
#define NV_PAPU_EPDSIZE_SIZE                               23:0 /* R--UF */
#define NV_PAPU_EPDDEBUG                                   0x0005FF2C /* R--4R */
#define NV_PAPU_EPDDEBUG_PBADBLK                           13:0 /* R--VF */
#define NV_PAPU_EPDDEBUG_ILLSMBUFID                        14:14 /* R--VF */
#define NV_PAPU_EPDDEBUG_ILLSMBUFID_NOT_ILL                0x00000000 /* R---V */
#define NV_PAPU_EPDDEBUG_ILLSMBUFID_ILL                    0x00000001 /* R---V */
#define NV_PAPU_EPDDEBUG_ILLSMDATAFMT                      15:15 /* R--VF */
#define NV_PAPU_EPDDEBUG_ILLSMDATAFMT_NOT_ILL              0x00000000 /* R---V */
#define NV_PAPU_EPDDEBUG_ILLSMDATAFMT_ILL                  0x00000001 /* R---V */
#define NV_PAPU_EPDDEBUG_ILLCOUNT                          16:16 /* R--VF */
#define NV_PAPU_EPDDEBUG_ILLCOUNT_NOT_ILL                  0x00000000 /* R---V */
#define NV_PAPU_EPDDEBUG_ILLCOUNT_ILL                      0x00000001 /* R---V */

#endif /* __NV_PAPU_H__ */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Microsoft Xbox (1.00.4400) [April 2002] [src]\private\ntos\video\nvx\drivers\resman\kernel\inc\smp.h ===
/******************************************************************************
*
*	Module: smp.h
*
*	Description:
*		This file contains macros that replace calls to functions containing 
*	critical code with calls to SMP-safe wrappers for the functions.  It is
*	only meant to be included in those modules that contain calls to these
*	functions, and not the modules that define these functions.
*
*	THE INFORMATION CONTAINED HEREIN IS PROPRIETARY AND CONFIDENTIAL TO
*	NVIDIA, CORPORATION.  USE, REPRODUCTION OR DISCLOSURE TO ANY THIRD PARTY
*	IS SUBJECT TO WRITTEN PRE-APPROVAL BY NVIDIA, CORPORATION.
*
******************************************************************************/

#if defined(NTRM) && !defined(UNIX) && !defined(MACOS)

#if (_WIN32_WINNT < 0x0500)

// replacement macros for SMP-safe wrapper functions
#define fifoUpdateObjectInstance(a, b, c, d) smpFifoUpdateObjectInstance(a, b, c, d)
#define fifoDeleteObjectInstance(a, b, c) smpFifoDeleteObjectInstance(a, b, c)
#define fifoResetChannelState(a, b) smpFifoResetChannelState(a, b)
#define fifoDeleteSubchannelContextEntry(a, b) smpFifoDeleteSubchannelContextEntry(a, b)
#define nvHalFbSetAllocParameters(a, b) smpNvHalFbSetAllocParameters(a, b)
#define nvHalFbFree(a, b) smpNvHalFbFree(a, b)
#define VBlankDeleteCallback(a, b, c) smpVBlankDeleteCallback(a, b, c)
#define classDirectSoftwareMethod(a, b, c, d) smpClassDirectSoftwareMethod(a, b, c, d)

// SMP-safe wrapper function prototypes
RM_STATUS smpFifoUpdateObjectInstance
(
	PHWINFO pDev,
	POBJECT Object,
	U032    ChID,
	U032    Instance
);
RM_STATUS smpFifoDeleteObjectInstance
(
	PHWINFO pDev,
	POBJECT Object,
	U032    ChID
);
RM_STATUS smpFifoResetChannelState
(
	PHWINFO pDev,
	U032    ChID
);
RM_STATUS smpFifoDeleteSubchannelContextEntry
(
    PHWINFO pDev,
    POBJECT Object
);
RM_STATUS smpNvHalFbSetAllocParameters
(
	PHWINFO pDev,
    PFBALLOCINFO pFbAllocInfo
);
RM_STATUS smpNvHalFbFree
(
	PHWINFO pDev,
    U032 hwResId
);
VOID smpVBlankDeleteCallback
(
	PHWINFO pDev,
    U032 Head,
    PVBLANKCALLBACK Callback
);
RM_STATUS smpClassDirectSoftwareMethod
(
    PHWINFO pDev,
    POBJECT Object,
    U032    Offset,
    V032    Data
);

#endif // (_WIN32_WINNT < 0x0500)
#endif
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Microsoft Xbox (1.00.4400) [April 2002] [src]\private\ntos\video\nvx\drivers\resman\kernel\inc\tv.h ===
#ifndef _TV_H_
#define _TV_H_
//
// (C) Copyright NVIDIA Corporation Inc., 1995,1996. All rights reserved.
//
/***************************************************************************\
*                                                                           *
* Module: TV.H                                                              *
*       The TV flicker filter constants are defined in this module.         *
*                                                                           *
*****************************************************************************
*/

//---------------------------------------------------------------------------
//
//  Defines.
//
//---------------------------------------------------------------------------

#define	MY_SCALED_IMAGE_CTX	0x97100200
#define	X_RES	(640)		// source x
#define	Y_RES	(480)		// source y
//#define DST_X_RES (640)		// destination x
//#define DST_Y_RES (480)		// destination y
#define DST_X_RES (620)		// destination x
#define DST_Y_RES (420)		// destination y

#define I2C_AUTOINC 0x40    //OR this in to a register to set auto-increment mode.

// TV mode numbers
#define TV_MODE_320x200 0
#define TV_MODE_320x240 1
#define TV_MODE_320x400 2
#define TV_MODE_400x300 3
#define TV_MODE_480x360 4
#define TV_MODE_512x384 5
#define TV_MODE_640x400 6
#define TV_MODE_640x480 7  
#define TV_MODE_800x600 8
#define TV_MODE_DVD     9   // in NTSC this is 720x480, for PAL this is 704x576 or 720x576
#define TV_MODE_1024x768 10


// Brooktree register defs
// Reg CE = output modes. DAC A = bits 0,1, DAC B = 2,3, etc.
// Mode 0: Composite
// Mode 1: Luma delayed composite, Luma, Chroma, Delayed Luma (composite on S-Video connector)
// Mode 2: S-video (component YUV and delayed LUMA)
// Mode 3: RGB
// We use modes 0, 1, and 2
#define BT_OUT_MUX			0xce	// register #
#define BT_OUT_MUX_A_COMP	0		// values
#define BT_OUT_MUX_A_ALL	1
#define BT_OUT_MUX_A_SVID	2
#define BT_OUT_MUX_B_COMP	0
#define BT_OUT_MUX_B_ALL	1<<2
#define BT_OUT_MUX_B_SVID	2<<2
#define BT_OUT_MUX_C_COMP	0
#define BT_OUT_MUX_C_ALL	1<<4
#define BT_OUT_MUX_C_SVID	2<<4

// Brooktree registers
#define BT_HS0   0x6E
#define BT_HS1   0x70
#define BT_CA0   0xCA
#define BT_CA1   0xCC
#define BT_VAL   0x96
#define BT_FF0   0xC8
#define BT_FF1   0x34
#define BT_FF2   0x36

// Monitor Connection Status
#define BT_MONSTAT			0xe0
#define BT_MONSTAT_A		0x80
#define BT_MONSTAT_B		0x40
#define BT_MONSTAT_C		0x20

// DAC enable/check status reg
#define BT_DAC_CTL          0xBA
#define BT_DAC_OFF          0x10    
#define BT_DAC_ON           0x00    // normal setting
#define BT_CHK_STAT         0x40
#define BT_CHK_OFF          0x00
#define BT_CONFIG           0xB8

// Chrontel registers
#define CH_FF	0x29	// 5:4 = chroma, 3:2 = text, 1:0 = luma	
#define CH_BL   0x7f	// 7:0, 90 < x < 208
#define CH_CE	0x03	// 2:0

// Init regs struct
typedef struct
{
	U008	subaddr;	// register address of 1st register in this string
	U008	reg0xC4;
	U008	reg0xC6;
	U008	reg0xC8;
	U008	reg0xCA;
	U008	reg0xCC;
	U008	reg0xCE;
} BT_INIT_REGS;

// Modeset regs 
typedef struct
{
	U008	subaddr;	// register address of 1st register in this string
	U008	reg0x76;
	U008	reg0x78;
	U008	reg0x7A;
	U008	reg0x7C;
	U008	reg0x7E;
	U008	reg0x80;	// HBLANKO
	U008	reg0x82;	// VBLANKO
	U008	reg0x84;
	U008	reg0x86;
	U008	reg0x88;
	U008	reg0x8A;
	U008	reg0x8C;
	U008	reg0x8E;
	U008	reg0x90;
	U008	reg0x92;	// VBLANKI
	U008	reg0x94;
	U008	reg0x96;
	U008	reg0x98;	// VSCALE
	U008	reg0x9A;	// HBLANKO
	U008	reg0x9C;
	U008	reg0x9E;
	U008	reg0xA0;
	U008	reg0xA2;
	U008	reg0xA4;
	U008	reg0xA6;
	U008	reg0xA8;
	U008	reg0xAA;
	U008	reg0xAC;
	U008	reg0xAE;
	U008	reg0xB0;
	U008	reg0xB2;
	U008	reg0xB4;
	U008	reg0xB6;
} BT_MODE_REGS;

//	Position regs
typedef struct
{
	U008	reg0x6E;
	U008	reg0x70;
	U008	reg0x72;
	U008	reg0x74;
} BT_POS_REGS;

//	Chrontel encoder mode set struct
typedef struct
{
	U008	reg0x00;
	U008	reg0x07;
	U008	reg0x0a;
	U008	reg0x0b;
	U008	reg0x13;
	U008	reg0x14;
	U008	reg0x15;
} CH_MODE_REGS;

// Chrontel mode registers - bit 7 should always be set
#define CH_REG_00   0x00 | 0x80
#define CH_REG_01   0x01 | 0x80
#define CH_REG_03   0x03 | 0x80
#define CH_REG_04   0x04 | 0x80
#define CH_REG_06   0x06 | 0x80
#define CH_REG_07   0x07 | 0x80
#define CH_REG_08   0x08 | 0x80
#define CH_REG_09   0x09 | 0x80
#define CH_REG_0A   0x0A | 0x80
#define CH_REG_0B   0x0B | 0x80
#define CH_REG_0D   0x0D | 0x80
#define CH_REG_0E   0x0E | 0x80
#define CH_REG_10   0x10 | 0x80
#define CH_REG_11   0x11 | 0x80
#define CH_REG_13   0x13 | 0x80
#define CH_REG_18   0x18 | 0x80
#define CH_REG_19   0x19 | 0x80
#define CH_REG_1A   0x1A | 0x80
#define CH_REG_1B   0x1B | 0x80
#define CH_REG_1C   0x1C | 0x80
#define CH_REG_1D   0x1D | 0x80
#define CH_REG_1E   0x1E | 0x80
#define CH_REG_1F   0x1F | 0x80
#define CH_REG_21   0x21 | 0x80
#define CH_REG_3D   0x3D | 0x80

// DAC PM control
#define CH_ON       0x0B
#define CH_OFF      0x09

// TV standard specified in reg 0 bits 4:3
#define CH_NTSC_M   0x00
#define CH_NTSC_J   0x18
#define CH_PAL_M    0x10
#define CH_PAL_OTHER 0x08
// NTSC-J wants different blackness level
// Range is 0x5A - 0xD0. Default is 7F.
// Recommended:  NTSC-M & PAL-M 7F, NTSC-J 0x64, PAL 0x69
#define CH_BL_J     0x64
#define CH_BL_M     0x7f
#define CH_REG_06_DEF 0x10  // MCP set: latch data on positive edge
#define CH_CFR      0x80
#define CH_GAIN     0xBF    // mask gain bit
#define CH_GAIN_NTSC 0x00   // NTSC-M & PAL-M
#define CH_GAIN_PAL 0x40    // PAL & NTSC-J

#define PH_CHIP_ID  0x1C
#define PH_STDCTL   0x61
#define PH_DAC_POWER 0x40
#define PH_DAC_OFF  0x40
#define PH_DAC_ON   0x00

#endif // _TV_H#
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Microsoft Xbox (1.00.4400) [April 2002] [src]\private\ntos\video\nvx\drivers\resman\kernel\inc\nv_uap.h ===
/*  FILE: nv_uap.h
 *  CREATED: Thu Sep 21 11:40:53 2000
 *
 *  Copyright (c) 2000, by NVIDIA CORP
 *  All Rights Reserved.
 */

 /*** DO NOT EDIT, THIS FILE GENERATED FROM ..\..\..\manuals\usr_audio_proc.ref ***/


#ifndef __NV_UAP_H__
#define __NV_UAP_H__


/***********************************************/
/* Macros and constants                        */
/***********************************************/

#ifndef REF_VAL
#define DRF_SHIFT(drf)    ((0?drf)                            % 32)
#define DRF_MASK(drf)     (0xFFFFFFFF>>(31-((1?drf)                            % 32)+((0?drf)                            % 32)))
#define REF_VAL(drf,v)    (((v)>>DRF_SHIFT(drf))&DRF_MASK(drf))
#define REF_NUM(drf,n)    (((n)&DRF_MASK(drf))<<DRF_SHIFT(drf))
#endif /* !REF_VAL */

/***********************************************/
/*    #defines from the manuals                */
/***********************************************/

#define NV1BA0_PIO_FREE                                    0x00000010 /* R--4R */
#define NV1BA0_PIO_FREE_COUNT                              11:2 /* R-X4F */
#define NV1BA0_PIO_FREE_COUNT_FIFO_FULL                    0x00 /* R---V */
#define NV1BA0_PIO_INFO                                    0x00000014 /* R--4R */
#define NV1BA0_PIO_INFO_PIO                                0:0 /* R-X4F */
#define NV1BA0_PIO_INFO_PIO_EMPTY_AND_IDLE                 0x00 /* R---V */
#define NV1BA0_PIO_INFO_PIO_BUSY                           0x01 /* R---V */
#define NV1BA0_PIO_INFO_DMA                                1:1 /* R-X4F */
#define NV1BA0_PIO_INFO_DMA_EMPTY_AND_IDLE                 0x00 /* R---V */
#define NV1BA0_PIO_INFO_DMA_BUSY                           0x01 /* R---V */
#define NV1BA0_CHANNEL_DMA_PUT                             0x00000040 /* -W-4R */
#define NV1BA0_CHANNEL_DMA_PUT_OFFSET                      11:2 /* -WXUF */
#define NV1BA0_CHANNEL_DMA_GET                             0x00000044 /* R--4R */
#define NV1BA0_CHANNEL_DMA_GET_OFFSET                      11:2 /* R-X4F */
#define NV1BA0_PIO_NOP                                     0x00000100 /* -W-4R */
#define NV1BA0_PIO_NOP_PARAMETER                           31:0 /* -W-VF */
#define NV1BA0_PIO_NOTIFICATION_STATUS_DONE_SUCCESS        0x00000001 /* -W--V */
#define NV1BA0_PIO_SYNCHRONIZE                             0x00000104 /* -W-4R */
#define NV1BA0_PIO_SYNCHRONIZE_PARAMETER                   31:0 /* -W-VF */
#define NV1BA0_PIO_SYNCHRONIZE_PARAMETER_NO_OPERATION      0x00000000 /* -W--V */
#define NV1BA0_PIO_SYNCHRONIZE_PARAMETER_WAIT_FOR_IDLE     0x00000001 /* -W--V */
#define NV1BA0_PIO_SYNCHRONIZE_PARAMETER_WAIT_FOR_IDLE_WRITE_PE_NOTIFY 0x00000002 /* -W--V */
#define NV1BA0_PIO_SYNCHRONIZE_PARAMETER_WAIT_FOR_IDLE_WRITE_PE_NOTIFY_AWAKEN 0x00000003 /* -W--V */
#define NV1BA0_PIO_SET_TIME                                0x00000108 /* -W-4R */
#define NV1BA0_PIO_SET_TIME_VALUE                          31:0 /* -W-UF */
#define NV1BA0_PIO_SET_MODE                                0x0000010C /* -W-4R */
#define NV1BA0_PIO_SET_MODE_PARAMETER                      31:0 /* -W-VF */
#define NV1BA0_PIO_SET_MODE_PARAMETER_OFF                  0x00000000 /* -W--V */
#define NV1BA0_PIO_SET_MODE_PARAMETER_RUN                  0x00000001 /* -W--V */
#define NV1BA0_PIO_SET_ANTECEDENT_VOICE                    0x00000120 /* -W-4R */
#define NV1BA0_PIO_SET_ANTECEDENT_VOICE_HANDLE             15:0 /* -W-VF */
#define NV1BA0_PIO_SET_ANTECEDENT_VOICE_HANDLE_NULL        0xFFFF /* -W--V */
#define NV1BA0_PIO_SET_ANTECEDENT_VOICE_LIST               17:16 /* -W-VF */
#define NV1BA0_PIO_SET_ANTECEDENT_VOICE_LIST_INHERIT       0x00 /* -W--V */
#define NV1BA0_PIO_SET_ANTECEDENT_VOICE_LIST_2D_TOP        0x01 /* -W--V */
#define NV1BA0_PIO_SET_ANTECEDENT_VOICE_LIST_3D_TOP        0x02 /* -W--V */
#define NV1BA0_PIO_SET_ANTECEDENT_VOICE_LIST_MP_TOP        0x03 /* -W--V */
#define NV1BA0_PIO_VOICE_ON                                0x00000124 /* -W-4R */
#define NV1BA0_PIO_VOICE_ON_HANDLE                         15:0 /* -W-VF */
#define NV1BA0_PIO_VOICE_ON_ENVF                           27:24 /* -W-VF */
#define NV1BA0_PIO_VOICE_ON_ENVF_DISABLE                   0x00 /* -W--V */
#define NV1BA0_PIO_VOICE_ON_ENVF_DELAY                     0x01 /* -W--V */
#define NV1BA0_PIO_VOICE_ON_ENVF_ATTACK                    0x02 /* -W--V */
#define NV1BA0_PIO_VOICE_ON_ENVF_HOLD                      0x03 /* -W--V */
#define NV1BA0_PIO_VOICE_ON_ENVA                           31:28 /* -W-VF */
#define NV1BA0_PIO_VOICE_ON_ENVA_DISABLE                   0x00 /* -W--V */
#define NV1BA0_PIO_VOICE_ON_ENVA_DELAY                     0x01 /* -W--V */
#define NV1BA0_PIO_VOICE_ON_ENVA_ATTACK                    0x02 /* -W--V */
#define NV1BA0_PIO_VOICE_ON_ENVA_HOLD                      0x03 /* -W--V */
#define NV1BA0_PIO_VOICE_OFF                               0x00000128 /* -W-4R */
#define NV1BA0_PIO_VOICE_OFF_HANDLE                        15:0 /* -W-VF */
#define NV1BA0_PIO_VOICE_RELEASE                           0x0000012C /* -W-4R */
#define NV1BA0_PIO_VOICE_RELEASE_HANDLE                    15:0 /* -W-VF */
#define NV1BA0_PIO_GET_VOICE_POSITION                      0x00000130 /* -W-4R */
#define NV1BA0_PIO_GET_VOICE_POSITION_HANDLE               15:0 /* -W-VF */
#define NV1BA0_PIO_VOICE_PAUSE                             0x00000140 /* -W-4R */
#define NV1BA0_PIO_VOICE_PAUSE_HANDLE                      15:0 /* -W-VF */
#define NV1BA0_PIO_VOICE_PAUSE_ACTION                      18:18 /* -W-VF */
#define NV1BA0_PIO_VOICE_PAUSE_ACTION_RESUME               0x00 /* -W--V */
#define NV1BA0_PIO_VOICE_PAUSE_ACTION_STOP                 0x01 /* -W--V */
#define NV1BA0_PIO_SET_CONTEXT_DMA_NOTIFY                  0x00000180 /* -W-4R */
#define NV1BA0_PIO_SET_CONTEXT_DMA_NOTIFY_HANDLE           31:0 /* -W-VF */
#define NV1BA0_PIO_SET_SUBMIX_HEADROOM(i)                  (0x00000200+(i)*4) /* -W-4A */
#define NV1BA0_PIO_SET_SUBMIX_HEADROOM__SIZE_1             32 /* */ 
#define NV1BA0_PIO_SET_SUBMIX_HEADROOM_AMOUNT              2:0 /* -W-VF */
#define NV1BA0_PIO_SET_SUBMIX_HEADROOM_AMOUNT_ZEROBITS     0x00 /* -W--V */
#define NV1BA0_PIO_SET_SUBMIX_HEADROOM_AMOUNT_ONEBIT       0x01 /* -W--V */
#define NV1BA0_PIO_SET_SUBMIX_HEADROOM_AMOUNT_TWOBITS      0x02 /* -W--V */
#define NV1BA0_PIO_SET_SUBMIX_HEADROOM_AMOUNT_THREEBITS    0x03 /* -W--V */
#define NV1BA0_PIO_SET_SUBMIX_HEADROOM_AMOUNT_FOURBITS     0x04 /* -W--V */
#define NV1BA0_PIO_SET_SUBMIX_HEADROOM_AMOUNT_FIVEBITS     0x05 /* -W--V */
#define NV1BA0_PIO_SET_SUBMIX_HEADROOM_AMOUNT_SIXBITS      0x06 /* -W--V */
#define NV1BA0_PIO_SET_SUBMIX_HEADROOM_AMOUNT_SEVENBITS    0x07 /* -W--V */
#define NV1BA0_PIO_SET_HRTF_HEADROOM                       0x00000280 /* -W-4R */
#define NV1BA0_PIO_SET_HRTF_HEADROOM_AMOUNT                2:0 /* -W-VF */
#define NV1BA0_PIO_SET_HRTF_HEADROOM_AMOUNT_ZEROBITS       0x00 /* -W--V */
#define NV1BA0_PIO_SET_HRTF_HEADROOM_AMOUNT_ONEBIT         0x01 /* -W--V */
#define NV1BA0_PIO_SET_HRTF_HEADROOM_AMOUNT_TWOBITS        0x02 /* -W--V */
#define NV1BA0_PIO_SET_HRTF_HEADROOM_AMOUNT_THREEBITS      0x03 /* -W--V */
#define NV1BA0_PIO_SET_HRTF_HEADROOM_AMOUNT_FOURBITS       0x04 /* -W--V */
#define NV1BA0_PIO_SET_HRTF_HEADROOM_AMOUNT_FIVEBITS       0x05 /* -W--V */
#define NV1BA0_PIO_SET_HRTF_HEADROOM_AMOUNT_SIXBITS        0x06 /* -W--V */
#define NV1BA0_PIO_SET_HRTF_HEADROOM_AMOUNT_SEVENBITS      0x07 /* -W--V */
#define NV1BA0_PIO_SET_HRTF_SUBMIX(i)                      (0x00000290+(i)*4) /* -W-4A */
#define NV1BA0_PIO_SET_HRTF_SUBMIX__SIZE_1                 4 /* */ 
#define NV1BA0_PIO_SET_HRTF_SUBMIX_BIN                     4:0 /* -W-UF */
#define NV1BA0_PIO_SET_HRTF_SUBMIXES                       0x000002C0 /* -W-4R */
#define NV1BA0_PIO_SET_HRTF_SUBMIXES_BIN0                  4:0 /* -W-UF */
#define NV1BA0_PIO_SET_HRTF_SUBMIXES_BIN1                  12:8 /* -W-UF */
#define NV1BA0_PIO_SET_HRTF_SUBMIXES_BIN2                  20:16 /* -W-UF */
#define NV1BA0_PIO_SET_HRTF_SUBMIXES_BIN3                  28:24 /* -W-UF */
#define NV1BA0_PIO_SET_VOLUME_TRACKING                     0x000002A0 /* -W-4R */
#define NV1BA0_PIO_SET_VOLUME_TRACKING_PARAMETER           11:0 /* -W-UF */
#define NV1BA0_PIO_SET_PITCH_TRACKING                      0x000002A4 /* -W-4R */
#define NV1BA0_PIO_SET_PITCH_TRACKING_PARAMETER            11:0 /* -W-UF */
#define NV1BA0_PIO_SET_HRTF_TRACKING                       0x000002A8 /* -W-4R */
#define NV1BA0_PIO_SET_HRTF_TRACKING_PARAMETER             11:0 /* -W-UF */
#define NV1BA0_PIO_SET_ITD_TRACKING                        0x000002AC /* -W-4R */
#define NV1BA0_PIO_SET_ITD_TRACKING_PARAMETER              11:0 /* -W-UF */
#define NV1BA0_PIO_SET_FILTER_TRACKING                     0x000002B0 /* -W-4R */
#define NV1BA0_PIO_SET_FILTER_TRACKING_PARAMETER           11:0 /* -W-UF */
#define NV1BA0_PIO_SET_CURRENT_VOICE                       0x000002F8 /* -W-4R */
#define NV1BA0_PIO_SET_CURRENT_VOICE_HANDLE                15:0 /* -W-VF */
#define NV1BA0_PIO_VOICE_LOCK                              0x000002FC /* -W-4R */
#define NV1BA0_PIO_VOICE_LOCK_PARAMETER                    7:0 /* -W-VF */
#define NV1BA0_PIO_VOICE_LOCK_PARAMETER_OFF                0x00000000 /* -W--V */
#define NV1BA0_PIO_VOICE_LOCK_PARAMETER_ON                 0x00000001 /* -W--V */
#define NV1BA0_PIO_SET_VOICE_CFG_VBIN                      0x00000300 /* -W-4R */
#define NV1BA0_PIO_SET_VOICE_CFG_VBIN_V0BIN                4:0 /* -W-UF */
#define NV1BA0_PIO_SET_VOICE_CFG_VBIN_V1BIN                9:5 /* -W-UF */
#define NV1BA0_PIO_SET_VOICE_CFG_VBIN_V2BIN                14:10 /* -W-UF */
#define NV1BA0_PIO_SET_VOICE_CFG_VBIN_V3BIN                20:16 /* -W-UF */
#define NV1BA0_PIO_SET_VOICE_CFG_VBIN_V4BIN                25:21 /* -W-UF */
#define NV1BA0_PIO_SET_VOICE_CFG_VBIN_V5BIN                30:26 /* -W-UF */
#define NV1BA0_PIO_SET_VOICE_CFG_FMT                       0x00000304 /* -W-4R */
#define NV1BA0_PIO_SET_VOICE_CFG_FMT_V6BIN                 4:0 /* -W-UF */
#define NV1BA0_PIO_SET_VOICE_CFG_FMT_V7BIN                 9:5 /* -W-UF */
#define NV1BA0_PIO_SET_VOICE_CFG_FMT_V6PHASE               10:10 /* -W-VF */
#define NV1BA0_PIO_SET_VOICE_CFG_FMT_V6PHASE_POSITIVE      0x00 /* -W--V */
#define NV1BA0_PIO_SET_VOICE_CFG_FMT_V6PHASE_NEGATIVE      0x01 /* -W--V */
#define NV1BA0_PIO_SET_VOICE_CFG_FMT_V7PHASE               11:11 /* -W-VF */
#define NV1BA0_PIO_SET_VOICE_CFG_FMT_V7PHASE_POSITIVE      0x00 /* -W--V */
#define NV1BA0_PIO_SET_VOICE_CFG_FMT_V7PHASE_NEGATIVE      0x01 /* -W--V */
#define NV1BA0_PIO_SET_VOICE_CFG_FMT_GAIN                  12:12 /* -W-VF */
#define NV1BA0_PIO_SET_VOICE_CFG_FMT_GAIN_X1               0x00 /* -W--V */
#define NV1BA0_PIO_SET_VOICE_CFG_FMT_GAIN_X2               0x01 /* -W--V */
#define NV1BA0_PIO_SET_VOICE_CFG_FMT_HEADROOM              15:13 /* -W-VF */
#define NV1BA0_PIO_SET_VOICE_CFG_FMT_HEADROOM_SRC0_FLT0    0x00 /* -W--V */
#define NV1BA0_PIO_SET_VOICE_CFG_FMT_HEADROOM_SRC0_FLT1    0x01 /* -W--V */
#define NV1BA0_PIO_SET_VOICE_CFG_FMT_HEADROOM_SRC0_FLT2    0x02 /* -W--V */
#define NV1BA0_PIO_SET_VOICE_CFG_FMT_HEADROOM_SRC0_FLT3    0x03 /* -W--V */
#define NV1BA0_PIO_SET_VOICE_CFG_FMT_HEADROOM_SRC1_FLT0    0x04 /* -W--V */
#define NV1BA0_PIO_SET_VOICE_CFG_FMT_HEADROOM_SRC1_FLT1    0x05 /* -W--V */
#define NV1BA0_PIO_SET_VOICE_CFG_FMT_HEADROOM_SRC1_FLT2    0x06 /* -W--V */
#define NV1BA0_PIO_SET_VOICE_CFG_FMT_HEADROOM_SRC1_FLT3    0x07 /* -W--V */
#define NV1BA0_PIO_SET_VOICE_CFG_FMT_HEADROOM_MULTIPASS0   0x00 /* -W--V */
#define NV1BA0_PIO_SET_VOICE_CFG_FMT_HEADROOM_MULTIPASS1   0x01 /* -W--V */
#define NV1BA0_PIO_SET_VOICE_CFG_FMT_HEADROOM_MULTIPASS2   0x02 /* -W--V */
#define NV1BA0_PIO_SET_VOICE_CFG_FMT_HEADROOM_MULTIPASS3   0x03 /* -W--V */
#define NV1BA0_PIO_SET_VOICE_CFG_FMT_HEADROOM_MULTIPASS4   0x04 /* -W--V */
#define NV1BA0_PIO_SET_VOICE_CFG_FMT_HEADROOM_MULTIPASS5   0x05 /* -W--V */
#define NV1BA0_PIO_SET_VOICE_CFG_FMT_HEADROOM_MULTIPASS6   0x06 /* -W--V */
#define NV1BA0_PIO_SET_VOICE_CFG_FMT_HEADROOM_MULTIPASS7   0x07 /* -W--V */
#define NV1BA0_PIO_SET_VOICE_CFG_FMT_SAMPLES_PER_BLOCK     20:16 /* -W-UF */
#define NV1BA0_PIO_SET_VOICE_CFG_FMT_MULTIPASS_BIN__ALIAS__ 20:16 /* -W-UF */
#define NV1BA0_PIO_SET_VOICE_CFG_FMT_MULTIPASS             21:21 /* -W-VF */
#define NV1BA0_PIO_SET_VOICE_CFG_FMT_MULTIPASS_OFF         0x00 /* -W--V */
#define NV1BA0_PIO_SET_VOICE_CFG_FMT_MULTIPASS_ON          0x01 /* -W--V */
#define NV1BA0_PIO_SET_VOICE_CFG_FMT_LINKED_VOICE          22:22 /* -W-VF */
#define NV1BA0_PIO_SET_VOICE_CFG_FMT_LINKED_VOICE_OFF      0x00 /* -W--V */
#define NV1BA0_PIO_SET_VOICE_CFG_FMT_LINKED_VOICE_ON       0x01 /* -W--V */
#define NV1BA0_PIO_SET_VOICE_CFG_FMT_PERSIST               23:23 /* -W-VF */
#define NV1BA0_PIO_SET_VOICE_CFG_FMT_PERSIST_OFF           0x00 /* -W--V */
#define NV1BA0_PIO_SET_VOICE_CFG_FMT_PERSIST_ON            0x01 /* -W--V */
#define NV1BA0_PIO_SET_VOICE_CFG_FMT_DATA_TYPE             24:24 /* -W-VF */
#define NV1BA0_PIO_SET_VOICE_CFG_FMT_DATA_TYPE_BUFFER      0x00 /* -W--V */
#define NV1BA0_PIO_SET_VOICE_CFG_FMT_DATA_TYPE_STREAM      0x01 /* -W--V */
#define NV1BA0_PIO_SET_VOICE_CFG_FMT_LOOP                  25:25 /* -W-VF */
#define NV1BA0_PIO_SET_VOICE_CFG_FMT_LOOP_OFF              0x00 /* -W--V */
#define NV1BA0_PIO_SET_VOICE_CFG_FMT_LOOP_ON               0x01 /* -W--V */
#define NV1BA0_PIO_SET_VOICE_CFG_FMT_CLEAR_MIX             26:26 /* -W-VF */
#define NV1BA0_PIO_SET_VOICE_CFG_FMT_CLEAR_MIX_FALSE       0x00 /* -W--V */
#define NV1BA0_PIO_SET_VOICE_CFG_FMT_CLEAR_MIX_TRUE        0x01 /* -W--V */
#define NV1BA0_PIO_SET_VOICE_CFG_FMT_STEREO                27:27 /* -W-VF */
#define NV1BA0_PIO_SET_VOICE_CFG_FMT_STEREO_DISABLE        0x00 /* -W--V */
#define NV1BA0_PIO_SET_VOICE_CFG_FMT_STEREO_ENABLE         0x01 /* -W--V */
#define NV1BA0_PIO_SET_VOICE_CFG_FMT_SAMPLE_SIZE           29:28 /* -W-VF */
#define NV1BA0_PIO_SET_VOICE_CFG_FMT_SAMPLE_SIZE_U8        0x00 /* -W--V */
#define NV1BA0_PIO_SET_VOICE_CFG_FMT_SAMPLE_SIZE_S16       0x01 /* -W--V */
#define NV1BA0_PIO_SET_VOICE_CFG_FMT_SAMPLE_SIZE_S24       0x02 /* -W--V */
#define NV1BA0_PIO_SET_VOICE_CFG_FMT_SAMPLE_SIZE_S32       0x03 /* -W--V */
#define NV1BA0_PIO_SET_VOICE_CFG_FMT_CONTAINER_SIZE        31:30 /* -W-VF */
#define NV1BA0_PIO_SET_VOICE_CFG_FMT_CONTAINER_SIZE_B8     0x00 /* -W--V */
#define NV1BA0_PIO_SET_VOICE_CFG_FMT_CONTAINER_SIZE_B16    0x01 /* -W--V */
#define NV1BA0_PIO_SET_VOICE_CFG_FMT_CONTAINER_SIZE_B32    0x03 /* -W--V */
#define NV1BA0_PIO_SET_VOICE_CFG_ENV0                      0x00000308 /* -W-4R */
#define NV1BA0_PIO_SET_VOICE_CFG_ENV0_EA_ATTACKRATE        11:0 /* -W-UF */
#define NV1BA0_PIO_SET_VOICE_CFG_ENV0_EA_DELAYTIME         23:12 /* -W-UF */
#define NV1BA0_PIO_SET_VOICE_CFG_ENV0_EF_PITCHSCALE        31:24 /* -W-UF */
#define NV1BA0_PIO_SET_VOICE_CFG_ENVA                      0x0000030C /* -W-4R */
#define NV1BA0_PIO_SET_VOICE_CFG_ENVA_EA_DECAYRATE         11:0 /* -W-UF */
#define NV1BA0_PIO_SET_VOICE_CFG_ENVA_EA_HOLDTIME          23:12 /* -W-UF */
#define NV1BA0_PIO_SET_VOICE_CFG_ENVA_EA_SUSTAINLEVEL      31:24 /* -W-UF */
#define NV1BA0_PIO_SET_VOICE_CFG_ENV1                      0x00000310 /* -W-4R */
#define NV1BA0_PIO_SET_VOICE_CFG_ENV1_EF_ATTACKRATE        11:0 /* -W-UF */
#define NV1BA0_PIO_SET_VOICE_CFG_ENV1_EF_DELAYTIME         23:12 /* -W-UF */
#define NV1BA0_PIO_SET_VOICE_CFG_ENV1_EF_FCSCALE           31:24 /* -W-UF */
#define NV1BA0_PIO_SET_VOICE_CFG_ENVF                      0x00000314 /* -W-4R */
#define NV1BA0_PIO_SET_VOICE_CFG_ENVF_EF_DECAYRATE         11:0 /* -W-UF */
#define NV1BA0_PIO_SET_VOICE_CFG_ENVF_EF_HOLDTIME          23:12 /* -W-UF */
#define NV1BA0_PIO_SET_VOICE_CFG_ENVF_EF_SUSTAINLEVEL      31:24 /* -W-UF */
#define NV1BA0_PIO_SET_VOICE_CFG_MISC                      0x00000318 /* -W-4R */
#define NV1BA0_PIO_SET_VOICE_CFG_MISC_EF_RELEASERATE       11:0 /* -W-UF */
#define NV1BA0_PIO_SET_VOICE_CFG_MISC_LFOA_DELAYMODE       14:14 /* -W-VF */
#define NV1BA0_PIO_SET_VOICE_CFG_MISC_LFOA_DELAYMODE_NORMAL 0x00 /* -W--V */
#define NV1BA0_PIO_SET_VOICE_CFG_MISC_LFOA_DELAYMODE_DELAY 0x01 /* -W--V */
#define NV1BA0_PIO_SET_VOICE_CFG_MISC_LFOF_DELAYMODE       15:15 /* -W-VF */
#define NV1BA0_PIO_SET_VOICE_CFG_MISC_LFOF_DELAYMODE_NORMAL 0x00 /* -W--V */
#define NV1BA0_PIO_SET_VOICE_CFG_MISC_LFOF_DELAYMODE_DELAY 0x01 /* -W--V */
#define NV1BA0_PIO_SET_VOICE_CFG_MISC_FMODE                17:16 /* -W-VF */
#define NV1BA0_PIO_SET_VOICE_CFG_MISC_FMODE_BYPASS         0x00 /* -W--V */
#define NV1BA0_PIO_SET_VOICE_CFG_MISC_FMODE_STEREO_DLS2    0x01 /* -W--V */
#define NV1BA0_PIO_SET_VOICE_CFG_MISC_FMODE_STEREO_P_EQ    0x02 /* -W--V */
#define NV1BA0_PIO_SET_VOICE_CFG_MISC_FMODE_STEREO_BYPASS  0x03 /* -W--V */
#define NV1BA0_PIO_SET_VOICE_CFG_MISC_FMODE_MONO_DLS2      0x01 /* -W--V */
#define NV1BA0_PIO_SET_VOICE_CFG_MISC_FMODE_MONO_P_EQ      0x02 /* -W--V */
#define NV1BA0_PIO_SET_VOICE_CFG_MISC_FMODE_MONO_DLS2_P_EQ 0x03 /* -W--V */
#define NV1BA0_PIO_SET_VOICE_CFG_MISC_FMODE_THREED_DLS2_I3DL2 0x01 /* -W--V */
#define NV1BA0_PIO_SET_VOICE_CFG_MISC_FMODE_THREED_P_EQ_I3DL2 0x02 /* -W--V */
#define NV1BA0_PIO_SET_VOICE_CFG_MISC_FMODE_THREED_I3DL2   0x03 /* -W--V */
#define NV1BA0_PIO_SET_VOICE_CFG_MISC_BPQ                  20:18 /* -W-UF */
#define NV1BA0_PIO_SET_VOICE_CFG_MISC_NOTIFY_INTERRUPT     23:23 /* -W-VF */
#define NV1BA0_PIO_SET_VOICE_CFG_MISC_NOTIFY_INTERRUPT_DISABLE 0x00 /* -W--V */
#define NV1BA0_PIO_SET_VOICE_CFG_MISC_NOTIFY_INTERRUPT_ENABLE 0x01 /* -W--V */
#define NV1BA0_PIO_SET_VOICE_CFG_MISC_V_GSCNT              31:24 /* -W-UF */
#define NV1BA0_PIO_SET_VOICE_TAR_HRTF                      0x0000031C /* -W-4R */
#define NV1BA0_PIO_SET_VOICE_TAR_HRTF_HANDLE               15:0 /* -W-UF */
#define NV1BA0_PIO_SET_VOICE_PAR_LFODLY                    0x00000350 /* -W-4R */
#define NV1BA0_PIO_SET_VOICE_PAR_LFODLY_LFOADLY            14:0 /* -W-UF */
#define NV1BA0_PIO_SET_VOICE_PAR_LFODLY_LFOADR             15:15 /* -W-UF */
#define NV1BA0_PIO_SET_VOICE_PAR_LFODLY_LFOFDLY            30:16 /* -W-UF */
#define NV1BA0_PIO_SET_VOICE_PAR_LFODLY_LFOFDR             31:31 /* -W-UF */
#define NV1BA0_PIO_SET_VOICE_SSL_A                         0x00000320 /* -W-4R */
#define NV1BA0_PIO_SET_VOICE_SSL_A_COUNT                   7:0 /* -W-UF */
#define NV1BA0_PIO_SET_VOICE_SSL_A_BASE                    23:8 /* -W-UF */
#define NV1BA0_PIO_SET_VOICE_SSL_B                         0x0000035C /* -W-4R */
#define NV1BA0_PIO_SET_VOICE_SSL_B_COUNT                   7:0 /* -W-UF */
#define NV1BA0_PIO_SET_VOICE_SSL_B_BASE                    23:8 /* -W-UF */
#define NV1BA0_PIO_SET_VOICE_CFG_BUF_BASE                  0x000003A0 /* -W-4R */
#define NV1BA0_PIO_SET_VOICE_CFG_BUF_BASE_OFFSET           23:0 /* -W-UF */
#define NV1BA0_PIO_SET_VOICE_CFG_BUF_LBO                   0x000003A4 /* -W-4R */
#define NV1BA0_PIO_SET_VOICE_CFG_BUF_LBO_OFFSET            23:0 /* -W-UF */
#define NV1BA0_PIO_SET_VOICE_BUF_CBOFRAC                   0x000003D4 /* -W-4R */
#define NV1BA0_PIO_SET_VOICE_BUF_CBOFRAC_FRACTION          15:0 /* -W-UF */
#define NV1BA0_PIO_SET_VOICE_BUF_CBO                       0x000003D8 /* -W-4R */
#define NV1BA0_PIO_SET_VOICE_BUF_CBO_OFFSET                23:0 /* -W-UF */
#define NV1BA0_PIO_SET_VOICE_CFG_BUF_EBO                   0x000003DC /* -W-4R */
#define NV1BA0_PIO_SET_VOICE_CFG_BUF_EBO_OFFSET            23:0 /* -W-UF */
#define NV1BA0_PIO_SET_VOICE_TAR_VOLA                      0x00000360 /* -W-4R */
#define NV1BA0_PIO_SET_VOICE_TAR_VOLA_VOLUME6_B3_0         3:0 /* -W-UF */
#define NV1BA0_PIO_SET_VOICE_TAR_VOLA_VOLUME0              15:4 /* -W-UF */
#define NV1BA0_PIO_SET_VOICE_TAR_VOLA_VOLUME7_B3_0         19:16 /* -W-UF */
#define NV1BA0_PIO_SET_VOICE_TAR_VOLA_VOLUME1              31:20 /* -W-UF */
#define NV1BA0_PIO_SET_VOICE_TAR_VOLB                      0x00000364 /* -W-4R */
#define NV1BA0_PIO_SET_VOICE_TAR_VOLB_VOLUME6_B7_4         3:0 /* -W-UF */
#define NV1BA0_PIO_SET_VOICE_TAR_VOLB_VOLUME2              15:4 /* -W-UF */
#define NV1BA0_PIO_SET_VOICE_TAR_VOLB_VOLUME7_B7_4         19:16 /* -W-UF */
#define NV1BA0_PIO_SET_VOICE_TAR_VOLB_VOLUME3              31:20 /* -W-UF */
#define NV1BA0_PIO_SET_VOICE_TAR_VOLC                      0x00000368 /* -W-4R */
#define NV1BA0_PIO_SET_VOICE_TAR_VOLC_VOLUME6_B11_8        3:0 /* -W-UF */
#define NV1BA0_PIO_SET_VOICE_TAR_VOLC_VOLUME4              15:4 /* -W-UF */
#define NV1BA0_PIO_SET_VOICE_TAR_VOLC_VOLUME7_B11_8        19:16 /* -W-UF */
#define NV1BA0_PIO_SET_VOICE_TAR_VOLC_VOLUME5              31:20 /* -W-UF */
#define NV1BA0_PIO_SET_VOICE_LFO_ENV                       0x0000036C /* -W-4R */
#define NV1BA0_PIO_SET_VOICE_LFO_ENV_EA_RELEASERATE        11:0 /* -W-UF */
#define NV1BA0_PIO_SET_VOICE_LFO_ENV_LFOADLT               21:12 /* -W-UF */
#define NV1BA0_PIO_SET_VOICE_LFO_ENV_LFOFDLT               31:22 /* -W-UF */
#define NV1BA0_PIO_SET_VOICE_LFO_MOD                       0x00000370 /* -W-4R */
#define NV1BA0_PIO_SET_VOICE_LFO_MOD_LFOAAM                7:0 /* -W-UF */
#define NV1BA0_PIO_SET_VOICE_LFO_MOD_LFOAFM                15:8 /* -W-UF */
#define NV1BA0_PIO_SET_VOICE_LFO_MOD_LFOAFC                23:16 /* -W-UF */
#define NV1BA0_PIO_SET_VOICE_LFO_MOD_LFOFFM                31:24 /* -W-UF */
#define NV1BA0_PIO_SET_VOICE_TAR_FCA                       0x00000374 /* -W-4R */
#define NV1BA0_PIO_SET_VOICE_TAR_FCA_FC0                   15:0 /* -W-UF */
#define NV1BA0_PIO_SET_VOICE_TAR_FCA_FC1                   31:16 /* -W-UF */
#define NV1BA0_PIO_SET_VOICE_TAR_FCB                       0x00000378 /* -W-4R */
#define NV1BA0_PIO_SET_VOICE_TAR_FCB_FC2                   15:0 /* -W-UF */
#define NV1BA0_PIO_SET_VOICE_TAR_FCB_FC3                   31:16 /* -W-UF */
#define NV1BA0_PIO_SET_VOICE_TAR_PITCH                     0x0000037c /* -W-4R */
#define NV1BA0_PIO_SET_VOICE_TAR_PITCH_STEP                31:16 /* -W-UF */
#define NV1BA0_PIO_SET_VOICE_TAR_PITCH_STEP_SMAX           0x00001fff /* -W--V */
#define NV1BA0_PIO_SET_CURRENT_HRTF_ENTRY                  0x00000160 /* -W-4R */
#define NV1BA0_PIO_SET_CURRENT_HRTF_ENTRY_HANDLE           15:0 /* -W-VF */
#define NV1BA0_PIO_SET_HRIR(i)                             (0x00000400+(i)*4) /* -W-4A */
#define NV1BA0_PIO_SET_HRIR__SIZE_1                        15 /* */ 
#define NV1BA0_PIO_SET_HRIR_LEFT0                          7:0 /* -W-VF */
#define NV1BA0_PIO_SET_HRIR_RIGHT0                         15:8 /* -W-VF */
#define NV1BA0_PIO_SET_HRIR_LEFT1                          23:16 /* -W-VF */
#define NV1BA0_PIO_SET_HRIR_RIGHT1                         31:24 /* -W-VF */
#define NV1BA0_PIO_SET_HRIR_X                              0x0000043C /* -W-4R */
#define NV1BA0_PIO_SET_HRIR_X_LEFT30                       7:0 /* -W-VF */
#define NV1BA0_PIO_SET_HRIR_X_RIGHT30                      15:8 /* -W-VF */
#define NV1BA0_PIO_SET_HRIR_X_ITD                          31:16 /* -W-SF */
#define NV1BA0_PIO_SET_HRIR_X_ITD_SMIN                     0x0000ac01 /* RW--V */
#define NV1BA0_PIO_SET_HRIR_X_ITD_SMAX                     0x000053ff /* RW--V */
#define NV1BA0_PIO_SET_CURRENT_SSL_CONTEXT_DMA             0x0000018C /* -W-4R */
#define NV1BA0_PIO_SET_CURRENT_SSL_CONTEXT_DMA_HANDLE      31:0 /* -W-VF */
#define NV1BA0_PIO_SET_CURRENT_SSL                         0x00000190 /* -W-4R */
#define NV1BA0_PIO_SET_CURRENT_SSL_BASE_PAGE               21:6 /* -W-VF */
#define NV1BA0_PIO_SET_SSL_SEGMENT_OFFSET(i)               (0x00000600+(i)*8) /* -W-4A */
#define NV1BA0_PIO_SET_SSL_SEGMENT_OFFSET__SIZE_1          64 /* */ 
#define NV1BA0_PIO_SET_SSL_SEGMENT_OFFSET_PARAMETER        31:0 /* -W-VF */
#define NV1BA0_PIO_SET_SSL_SEGMENT_LENGTH(i)               (0x00000604+(i)*8) /* -W-4A */
#define NV1BA0_PIO_SET_SSL_SEGMENT_LENGTH__SIZE_1          64 /* */ 
#define NV1BA0_PIO_SET_SSL_SEGMENT_LENGTH_PARAMETER        15:0 /* -W-UF */
#define NV1BA0_PIO_SET_SSL_SEGMENT_LENGTH_CONTAINER_SIZE   17:16 /* -W-VF */
#define NV1BA0_PIO_SET_SSL_SEGMENT_LENGTH_CONTAINER_SIZE_B8 0x00 /* -W--V */
#define NV1BA0_PIO_SET_SSL_SEGMENT_LENGTH_CONTAINER_SIZE_B16 0x01 /* -W--V */
#define NV1BA0_PIO_SET_SSL_SEGMENT_LENGTH_CONTAINER_SIZE_B32 0x03 /* -W--V */
#define NV1BA0_PIO_SET_SSL_SEGMENT_LENGTH_SAMPLES_PER_BLOCK 22:18 /* -W-UF */
#define NV1BA0_PIO_SET_SSL_SEGMENT_LENGTH_STEREO           23:23 /* -W-VF */
#define NV1BA0_PIO_SET_SSL_SEGMENT_LENGTH_STEREO_NOTOK     0x00 /* -W--V */
#define NV1BA0_PIO_SET_SSL_SEGMENT_LENGTH_STEREO_OK        0x01 /* -W--V */
#define NV1BA0_PIO_SET_CURRENT_INBUF_SGE_CONTEXT_DMA       0x00000800 /* -W-4R */
#define NV1BA0_PIO_SET_CURRENT_INBUF_SGE_CONTEXT_DMA_HANDLE 31:0 /* -W-VF */
#define NV1BA0_PIO_SET_CURRENT_INBUF_SGE                   0x00000804 /* -W-4R */
#define NV1BA0_PIO_SET_CURRENT_INBUF_SGE_HANDLE            31:0 /* -W-VF */
#define NV1BA0_PIO_SET_CURRENT_INBUF_SGE_OFFSET            0x00000808 /* -W-4R */
#define NV1BA0_PIO_SET_CURRENT_INBUF_SGE_OFFSET_PARAMETER  31:12 /* -W-VF */
#define NV1BA0_PIO_SET_OUTBUF_BA(i)                        (0x00001000+(i)*8) /* -W-4A */
#define NV1BA0_PIO_SET_OUTBUF_BA__SIZE_1                   4 /* */ 
#define NV1BA0_PIO_SET_OUTBUF_BA_ADDRESS                   23:0 /* -W-UF */
#define NV1BA0_PIO_SET_OUTBUF_LEN(i)                       (0x00001004+(i)*8) /* -W-4A */
#define NV1BA0_PIO_SET_OUTBUF_LEN__SIZE_1                  4 /* */ 
#define NV1BA0_PIO_SET_OUTBUF_LEN_VALUE                    23:0 /* -W-UF */
#define NV1BA0_PIO_SET_CURRENT_OUTBUF_SGE                  0x00001800 /* -W-4R */
#define NV1BA0_PIO_SET_CURRENT_OUTBUF_SGE_HANDLE           31:0 /* -W-VF */
#define NV1BA0_PIO_SET_CURRENT_BUFFER_SGE_CONTEXT_DMA      0x00001804 /* -W-4R */
#define NV1BA0_PIO_SET_CURRENT_BUFFER_SGE_CONTEXT_DMA_HANDLE 31:0 /* -W-VF */
#define NV1BA0_PIO_SET_CURRENT_OUTBUF_SGE_OFFSET           0x00001808 /* -W-4R */
#define NV1BA0_PIO_SET_CURRENT_OUTBUF_SGE_OFFSET_PARAMETER 31:12 /* -W-VF */
#define NV1BA0_DMA_NOP                                     0x00000100 /* -W-4R */
#define NV1BA0_DMA_NOP_PARAMETER                           31:0 /* -W-VF */

#endif /* __NV_UAP_H__ */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Microsoft Xbox (1.00.4400) [April 2002] [src]\private\ntos\video\nvx\drivers\resman\kernel\inc\vga.h ===
#ifndef _NVVGA_H_
#define _NVVGA_H_
 /***************************************************************************\
|*                                                                           *|
|*        Copyright (c) 1993-1997 NVIDIA, Corp.  All rights reserved.        *|
|*                                                                           *|
|*     NOTICE TO USER:   The source code  is copyrighted under  U.S. and     *|
|*     international laws.   NVIDIA, Corp. of Sunnyvale, California owns     *|
|*     the copyright  and as design patents  pending  on the design  and     *|
|*     interface  of the NV chips.   Users and possessors of this source     *|
|*     code are hereby granted  a nonexclusive,  royalty-free  copyright     *|
|*     and  design  patent license  to use this code  in individual  and     *|
|*     commercial software.                                                  *|
|*                                                                           *|
|*     Any use of this source code must include,  in the user documenta-     *|
|*     tion and  internal comments to the code,  notices to the end user     *|
|*     as follows:                                                           *|
|*                                                                           *|
|*     Copyright (c) 1993-1997  NVIDIA, Corp.    NVIDIA  design  patents     *|
|*     pending in the U.S. and foreign countries.                            *|
|*                                                                           *|
|*     NVIDIA, CORP.  MAKES  NO REPRESENTATION ABOUT  THE SUITABILITY OF     *|
|*     THIS SOURCE CODE FOR ANY PURPOSE.  IT IS PROVIDED "AS IS" WITHOUT     *|
|*     EXPRESS OR IMPLIED WARRANTY OF ANY KIND.  NVIDIA, CORP. DISCLAIMS     *|
|*     ALL WARRANTIES  WITH REGARD  TO THIS SOURCE CODE,  INCLUDING  ALL     *|
|*     IMPLIED   WARRANTIES  OF  MERCHANTABILITY  AND   FITNESS   FOR  A     *|
|*     PARTICULAR  PURPOSE.   IN NO EVENT SHALL NVIDIA, CORP.  BE LIABLE     *|
|*     FOR ANY SPECIAL, INDIRECT, INCIDENTAL,  OR CONSEQUENTIAL DAMAGES,     *|
|*     OR ANY DAMAGES  WHATSOEVER  RESULTING  FROM LOSS OF USE,  DATA OR     *|
|*     PROFITS,  WHETHER IN AN ACTION  OF CONTRACT,  NEGLIGENCE OR OTHER     *|
|*     TORTIOUS ACTION, ARISING OUT  OF OR IN CONNECTION WITH THE USE OR     *|
|*     PERFORMANCE OF THIS SOURCE CODE.                                      *|
|*                                                                           *|
 \***************************************************************************/

/**************** Resource Manager Defines and Structures ******************\
*                                                                           *
* Module: VGA.H                                                             *
*       Resource Manager VGA defines and structures used throughout.        *
*                                                                           *
*****************************************************************************
*                                                                           *
* History:                                                                  *
*                                                                           *
\***************************************************************************/

//
// CRTC Access Macros
//
// Access CRTC indexed pairs
#define CRTC_WRITE(i,d)   {REG_WR08(NV_PRMCIO_CRX__COLOR, (i) & 0x7F);\
                        REG_WR08(NV_PRMCIO_CR__COLOR, (d));}
#define CRTC_READ(i,d)   {REG_WR08(NV_PRMCIO_CRX__COLOR, (i) & 0x7F);\
                        (d) = REG_RD08(NV_PRMCIO_CR__COLOR);}

// For dual head devices, CRTC2 is accessed at CRTC1 address + 0x2000
// i.e. CRTC1 = 0x6013D4, CRTC2 = 0x6033D4
// These macros can replace CRTC_RD/CRTC_WR.
#define CRTC_WR(i,d,h)  {REG_WR08(NV_PRMCIO_CRX__COLOR + CurDacAdr(h), i);\
                        REG_WR08(NV_PRMCIO_CR__COLOR + CurDacAdr(h), d);}

#define CRTC_RD(i,d,h)  {REG_WR08(NV_PRMCIO_CRX__COLOR + CurDacAdr(h), i);\
                        (d) = REG_RD08(NV_PRMCIO_CR__COLOR + CurDacAdr(h));}

// We need special versions of these macros for HAL use...
#define HAL_CRTC_WR(i,d,a)  {REG_WR08(NV_PRMCIO_CRX__COLOR + a, i);\
                             REG_WR08(NV_PRMCIO_CR__COLOR + a, d);}

#define HAL_CRTC_RD(i,d,a)  {REG_WR08(NV_PRMCIO_CRX__COLOR + a, i);\
                             (d) = REG_RD08(NV_PRMCIO_CR__COLOR + a);}

// Access Attribute Controller indexed register pair 
#define ATR_WR(i,d,h)    {REG_WR08(NV_PRMCIO_ARX + CurDacAdr(h), i);\
                        REG_WR08(NV_PRMCIO_AR_PALETTE__WRITE + CurDacAdr(h), d);}

#define ATR_RD(i,d,h)    {REG_WR08(NV_PRMCIO_ARX + CurDacAdr, (i) & 0x7F);\
                        (d) = REG_RD08(NV_PRMCIO_AR__PALETTE_READ + CurDacAdr(h));}

// Mono CRTC Access
#define CRTC_WRM(i,d)   {REG_WR08(NV_PRMCIO_CRX__MONO, (i) & 0x7F);\
                        REG_WR08(NV_PRMCIO_CR__MONO, (d));}
#define CRTC_RDM(i,d)   {REG_WR08(NV_PRMCIO_CRX__MONO, (i) & 0x7F);\
                        (d) = REG_RD08(NV_PRMCIO_CR__MONO);}

#endif // _NVVGA_H_

// Bit definitions
#define BITS0_7   0xff
#define BITS0_4   0x1f
#define BITS0_3   0x0f
#define BIT2      0x04
#define BIT3      0x08
#define BIT4      0x10
#define BIT5      0x20
#define BIT6      0x40
#define BIT7      0x80
#define BIT8      0x100
#define BIT9      0x200
#define BIT10     0x400
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Microsoft Xbox (1.00.4400) [April 2002] [src]\private\ntos\video\nvx\drivers\resman\kernel\inc\nv4\nv4_gr.h ===
#ifndef _NV4_GR_H_
#define _NV4_GR_H_
 /***************************************************************************\
|*                                                                           *|
|*        Copyright (c) 1993-1997 NVIDIA, Corp.  All rights reserved.        *|
|*                                                                           *|
|*     NOTICE TO USER:   The source code  is copyrighted under  U.S. and     *|
|*     international laws.   NVIDIA, Corp. of Sunnyvale, California owns     *|
|*     the copyright  and as design patents  pending  on the design  and     *|
|*     interface  of the NV chips.   Users and possessors of this source     *|
|*     code are hereby granted  a nonexclusive,  royalty-free  copyright     *|
|*     and  design  patent license  to use this code  in individual  and     *|
|*     commercial software.                                                  *|
|*                                                                           *|
|*     Any use of this source code must include,  in the user documenta-     *|
|*     tion and  internal comments to the code,  notices to the end user     *|
|*     as follows:                                                           *|
|*                                                                           *|
|*     Copyright (c) 1993-1997  NVIDIA, Corp.    NVIDIA  design  patents     *|
|*     pending in the U.S. and foreign countries.                            *|
|*                                                                           *|
|*     NVIDIA, CORP.  MAKES  NO REPRESENTATION ABOUT  THE SUITABILITY OF     *|
|*     THIS SOURCE CODE FOR ANY PURPOSE.  IT IS PROVIDED "AS IS" WITHOUT     *|
|*     EXPRESS OR IMPLIED WARRANTY OF ANY KIND.  NVIDIA, CORP. DISCLAIMS     *|
|*     ALL WARRANTIES  WITH REGARD  TO THIS SOURCE CODE,  INCLUDING  ALL     *|
|*     IMPLIED   WARRANTIES  OF  MERCHANTABILITY  AND   FITNESS   FOR  A     *|
|*     PARTICULAR  PURPOSE.   IN NO EVENT SHALL NVIDIA, CORP.  BE LIABLE     *|
|*     FOR ANY SPECIAL, INDIRECT, INCIDENTAL,  OR CONSEQUENTIAL DAMAGES,     *|
|*     OR ANY DAMAGES  WHATSOEVER  RESULTING  FROM LOSS OF USE,  DATA OR     *|
|*     PROFITS,  WHETHER IN AN ACTION  OF CONTRACT,  NEGLIGENCE OR OTHER     *|
|*     TORTIOUS ACTION, ARISING OUT  OF OR IN CONNECTION WITH THE USE OR     *|
|*     PERFORMANCE OF THIS SOURCE CODE.                                      *|
|*                                                                           *|
 \***************************************************************************/
/**************************** Graphics Manager *****************************\
*                                                                           *
* Module: NV4_GR.H                                                          *
*       Graphics engine management.                                         *
*                                                                           *
*****************************************************************************
*                                                                           *
* History:                                                                  *
*                                                                           *
\***************************************************************************/

//---------------------------------------------------------------------------
//
//  Defines.
//
//---------------------------------------------------------------------------

typedef struct _def_graphics_patch_nv4   GRAPHICSPATCH_NV4,  *PGRAPHICSPATCH_NV4;

//---------------------------------------------------------------------------
//
//  Patch database.
//
// This is all the information related to a given patch, which may contain
// multiple patch contexts.
//
//---------------------------------------------------------------------------

struct _def_graphics_patch_nv4
{
    //PGRAPHICSPATCH      Next;
    U032                BufferOffset[6];
    U032                BufferBase[6];
    U032                BufferLimit[6];
    U032                BufferPitch[5];
    U032                Surface;
    U032                State;
    U032                BufferSwizzle[2];
    U032                BufferPixel;
    U032                Notify;
    U032                PatternColor0;
    U032                PatternColor1;
    U032                PatternColorRam[64];
    U032                Pattern[2];
    U032                PatternShape;
    U032                MonoColor0;
    U032                Rop3;
    U032                Chroma;
    U032                BetaAnd;
    U032                BetaPremult;
    U032                Control0;
    U032                Control1;
    U032                Control2;
    U032                Blend;
    U032                StoredFmt;
    U032                SourceColor;
    U032                AbsXRam[32];
    U032                AbsYRam[32];
    U032                AbsUClipXMin;
    U032                AbsUClipXMax;
    U032                AbsUClipYMin;
    U032                AbsUClipYMax;
    U032                AbsUClipAXMin;
    U032                AbsUClipAXMax;
    U032                AbsUClipAYMin;
    U032                AbsUClipAYMax;
    U032                AbsIClipXMax;
    U032                AbsIClipYMax;
    U032                XYLogicMisc0;
    U032                XYLogicMisc1;
    U032                XYLogicMisc2;
    U032                XYLogicMisc3;
    U032                ClipX0;
    U032                ClipX1;
    U032                ClipY0;
    U032                ClipY1;
    U032                URam[16];
    U032                VRam[16];
    U032                MRam[16];
    U032                Combine0Alpha;
    U032                Combine0Color;
    U032                Combine1Alpha;
    U032                Combine1Color;
    U032                Format0;
    U032                Format1;
    U032                Filter0;
    U032                Filter1;
    U032                D3D_XY;
    U032                D3D_U0;
    U032                D3D_V0;
    U032                D3D_U1;
    U032                D3D_V1;
    U032                D3D_ZETA;
    U032                D3D_RGB;
    U032                D3D_S;
    U032                D3D_M;
    U032                Passthru0;
    U032                Passthru1;
    U032                Passthru2;
    U032                DVDColorFormat;
    U032                ScaledFormat;
    U032                Misc24_0;
    U032                Misc24_1;
    U032                Misc24_2;
    U032                XMisc;
    U032                YMisc;
    U032                Valid1;
    U032                Valid2;
};

#endif // _NV4_GR_H_
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Microsoft Xbox (1.00.4400) [April 2002] [src]\private\ntos\video\nvx\drivers\resman\kernel\inc\nv10\nv10_gr.h ===
#ifndef _NV10_GR_H_
#define _NV10_GR_H_
 /***************************************************************************\
|*                                                                           *|
|*        Copyright (c) 1993-1997 NVIDIA, Corp.  All rights reserved.        *|
|*                                                                           *|
|*     NOTICE TO USER:   The source code  is copyrighted under  U.S. and     *|
|*     international laws.   NVIDIA, Corp. of Sunnyvale, California owns     *|
|*     the copyright  and as design patents  pending  on the design  and     *|
|*     interface  of the NV chips.   Users and possessors of this source     *|
|*     code are hereby granted  a nonexclusive,  royalty-free  copyright     *|
|*     and  design  patent license  to use this code  in individual  and     *|
|*     commercial software.                                                  *|
|*                                                                           *|
|*     Any use of this source code must include,  in the user documenta-     *|
|*     tion and  internal comments to the code,  notices to the end user     *|
|*     as follows:                                                           *|
|*                                                                           *|
|*     Copyright (c) 1993-1997  NVIDIA, Corp.    NVIDIA  design  patents     *|
|*     pending in the U.S. and foreign countries.                            *|
|*                                                                           *|
|*     NVIDIA, CORP.  MAKES  NO REPRESENTATION ABOUT  THE SUITABILITY OF     *|
|*     THIS SOURCE CODE FOR ANY PURPOSE.  IT IS PROVIDED "AS IS" WITHOUT     *|
|*     EXPRESS OR IMPLIED WARRANTY OF ANY KIND.  NVIDIA, CORP. DISCLAIMS     *|
|*     ALL WARRANTIES  WITH REGARD  TO THIS SOURCE CODE,  INCLUDING  ALL     *|
|*     IMPLIED   WARRANTIES  OF  MERCHANTABILITY  AND   FITNESS   FOR  A     *|
|*     PARTICULAR  PURPOSE.   IN NO EVENT SHALL NVIDIA, CORP.  BE LIABLE     *|
|*     FOR ANY SPECIAL, INDIRECT, INCIDENTAL,  OR CONSEQUENTIAL DAMAGES,     *|
|*     OR ANY DAMAGES  WHATSOEVER  RESULTING  FROM LOSS OF USE,  DATA OR     *|
|*     PROFITS,  WHETHER IN AN ACTION  OF CONTRACT,  NEGLIGENCE OR OTHER     *|
|*     TORTIOUS ACTION, ARISING OUT  OF OR IN CONNECTION WITH THE USE OR     *|
|*     PERFORMANCE OF THIS SOURCE CODE.                                      *|
|*                                                                           *|
 \***************************************************************************/
/**************************** Graphics Manager *****************************\
*                                                                           *
* Module: NV10_GR.H                                                         *
*       Graphics engine management.                                         *
*                                                                           *
*****************************************************************************
*                                                                           *
* History:                                                                  *
*                                                                           *
\***************************************************************************/

//---------------------------------------------------------------------------
//
//  Defines.
//
//---------------------------------------------------------------------------

typedef struct _def_prim_assm_state         PRIM_ASSM_STATE,     *PPRIM_ASSM_STATE;
typedef struct _def_graphics_pipe           GRAPHICSPIPE,        *PGRAPHICSPIPE;
typedef struct _def_graphics_patch_nv10     GRAPHICSPATCH_NV10,  *PGRAPHICSPATCH_NV10;

//---------------------------------------------------------------------------
//
//  Patch database.
//
// This is all the information related to a given patch, which may contain
// multiple patch contexts.
//
//---------------------------------------------------------------------------

#define PIPE_FORMAT_BASE	0x00000000	// 8x base,format registers
#define PIPE_PRIM_BASE		0x00000040	// primType, edgeFlag, context
#define PIPE_ASSM_BASE		0x00000200	// primitive assembly vertices
#define PIPE_FILE_BASE		0x00000800	// vertex file vertices
#define PIPE_VAB_BASE		0x00004400	// VAB in XF engine
#define PIPE_CHEOPS_BASE	0x00006400	// XF cheops state
#define PIPE_ZOSER_BASE		0x00006800	// XF zozer state
#define PIPE_ZOSER_C0_BASE	0x00006c00	// XF zozer C0 state
#define PIPE_ZOSER_C1_BASE	0x00007000	// XF zozer C1 state
#define PIPE_ZOSER_C2_BASE	0x00007400	// XF zozer C2 state
#define PIPE_ZOSER_C3_BASE	0x00007800	// XF zozer C3 state

#define PRIM_ASSM_COUNT			(3*16)
#define VERTEX_FILE_COUNT		(16*16)
#define XF_VAB_COUNT			(8*4)
#define XF_CHEOPS_COUNT			(59*4)
#define XF_ZOSER_COUNT			(47*4)
#define XF_ZOSER_C0_COUNT		(3*4)
#define XF_ZOSER_C1_COUNT		(19*4)
#define XF_ZOSER_C2_COUNT		(12*4)
#define XF_ZOSER_C3_COUNT		(12*4)
#define INDEX_DMA_PRIM_COUNT		4
#define INDEX_DMA_FORMAT_COUNT		16

struct _def_prim_assm_state
{
    U032                IndexDmaPrim[INDEX_DMA_PRIM_COUNT];
    U032                PrimAssm[PRIM_ASSM_COUNT];
};

struct _def_graphics_pipe
{
    U032                PrimAssm[PRIM_ASSM_COUNT];
    U032                VertexFile[VERTEX_FILE_COUNT];
    U032                XF_VAB[XF_VAB_COUNT];
    U032                XF_CHEOPS[XF_CHEOPS_COUNT];
    U032                XF_ZOSER[XF_ZOSER_COUNT];
    U032                XF_ZOSER_C0[XF_ZOSER_C0_COUNT];
    U032                XF_ZOSER_C1[XF_ZOSER_C1_COUNT];
    U032                XF_ZOSER_C2[XF_ZOSER_C2_COUNT];
    U032                XF_ZOSER_C3[XF_ZOSER_C3_COUNT];
    U032                IndexDmaPrim[INDEX_DMA_PRIM_COUNT];
    U032                IndexDmaFormat[INDEX_DMA_FORMAT_COUNT];
};

struct _def_graphics_patch_nv10
{
    U032                ValidContext;
    U032                BufferOffset[6];
    U032                BufferBase[6];
    U032                BufferLimit[6];
    U032                BufferPitch[5];
    U032                Surface;
    U032                State;
    U032                BufferSwizzle[2];
    U032                BufferPixel;
    U032                Notify;
    U032                PatternColor0;
    U032                PatternColor1;
    U032                PatternColorRam[64];
    U032                Pattern[2];
    U032                PatternShape;
    U032                MonoColor0;
    U032                Rop3;
    U032                Chroma;
    U032                BetaAnd;
    U032                BetaPremult;
    U032                Control0;
    U032                Control1;
    U032                Control2;
    U032                Control3;
    U032                Blend;
    U032                BlendColor;
    U032                SetupRaster;
    U032                FogColor;
    U032                ColorKeyColor0;
    U032                ColorKeyColor1;
    U032                PointSize;
    U032                ZOffsetFactor;
    U032                ZOffsetBias;
    U032                ZClipMin;
    U032                ZClipMax;
    U032                WinClipHorz[8];
    U032                WinClipVert[8];
    U032                XFMode[2];
    U032                GlobalState0;
    U032                GlobalState1;
    U032                StoredFmt;
    U032                SourceColor;
    U032                AbsXRam[32];
    U032                AbsYRam[32];
    U032                AbsUClipXMin;
    U032                AbsUClipXMax;
    U032                AbsUClipYMin;
    U032                AbsUClipYMax;
    U032                AbsUClip3DXMin;
    U032                AbsUClip3DXMax;
    U032                AbsUClip3DYMin;
    U032                AbsUClip3DYMax;
    U032                AbsUClipAXMin;
    U032                AbsUClipAXMax;
    U032                AbsUClipAYMin;
    U032                AbsUClipAYMax;
    U032                AbsIClipXMax;
    U032                AbsIClipYMax;
    U032                XYLogicMisc0;
    U032                XYLogicMisc1;
    U032                XYLogicMisc2;
    U032                XYLogicMisc3;
    U032                ClipX0;
    U032                ClipX1;
    U032                ClipY0;
    U032                ClipY1;
    U032                Combine0AlphaICW;
    U032                Combine0ColorICW;
    U032                Combine1AlphaICW;
    U032                Combine1ColorICW;
    U032                Combine0Factor;
    U032                Combine1Factor;
    U032                Combine0AlphaOCW;
    U032                Combine0ColorOCW;
    U032                Combine1AlphaOCW;
    U032                Combine1ColorOCW;
    U032                CombineSpecFogCW0;
    U032                CombineSpecFogCW1;
    U032                TextureOffset0;
    U032                TextureOffset1;
    U032                TexturePalette0;
    U032                TexturePalette1;
    U032                TexControl0_0;
    U032                TexControl0_1;
    U032                TexControl1_0;
    U032                TexControl1_1;
    U032                TexControl2_0;
    U032                TexControl2_1;
    U032                TexFormat0;
    U032                TexFormat1;
    U032                ImageRect0;
    U032                ImageRect1;
    U032                Filter0;
    U032                Filter1;
    U032                Passthru0;
    U032                Passthru1;
    U032                Passthru2;
    U032                DimxTexture;
    U032                WdimxTexture;
    U032                DVDColorFormat;
    U032                ScaledFormat;
    U032                Misc24_0;
    U032                Misc24_1;
    U032                Misc24_2;
    U032                XMisc;
    U032                YMisc;
    U032                Valid1;
    U032                Valid2;
    GRAPHICSPIPE        CurrentPipe;
};

#endif // _NV10_GR_H_
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Microsoft Xbox (1.00.4400) [April 2002] [src]\private\ntos\video\nvx\drivers\resman\kernel\inc\nv20\nv20_hal.h ===
#ifndef _NV20_HAL_H_
#define _NV20_HAL_H_
 /***************************************************************************\
|*                                                                           *|
|*        Copyright (c) 1993-2000 NVIDIA, Corp.  All rights reserved.        *|
|*                                                                           *|
|*     NOTICE TO USER:   The source code  is copyrighted under  U.S. and     *|
|*     international laws.   NVIDIA, Corp. of Sunnyvale, California owns     *|
|*     the copyright  and as design patents  pending  on the design  and     *|
|*     interface  of the NV chips.   Users and possessors of this source     *|
|*     code are hereby granted  a nonexclusive,  royalty-free  copyright     *|
|*     and  design  patent license  to use this code  in individual  and     *|
|*     commercial software.                                                  *|
|*                                                                           *|
|*     Any use of this source code must include,  in the user documenta-     *|
|*     tion and  internal comments to the code,  notices to the end user     *|
|*     as follows:                                                           *|
|*                                                                           *|
|*     Copyright (c) 1993-2000  NVIDIA, Corp.    NVIDIA  design  patents     *|
|*     pending in the U.S. and foreign countries.                            *|
|*                                                                           *|
|*     NVIDIA, CORP.  MAKES  NO REPRESENTATION ABOUT  THE SUITABILITY OF     *|
|*     THIS SOURCE CODE FOR ANY PURPOSE.  IT IS PROVIDED "AS IS" WITHOUT     *|
|*     EXPRESS OR IMPLIED WARRANTY OF ANY KIND.  NVIDIA, CORP. DISCLAIMS     *|
|*     ALL WARRANTIES  WITH REGARD  TO THIS SOURCE CODE,  INCLUDING  ALL     *|
|*     IMPLIED   WARRANTIES  OF  MERCHANTABILITY  AND   FITNESS   FOR  A     *|
|*     PARTICULAR  PURPOSE.   IN NO EVENT SHALL NVIDIA, CORP.  BE LIABLE     *|
|*     FOR ANY SPECIAL, INDIRECT, INCIDENTAL,  OR CONSEQUENTIAL DAMAGES,     *|
|*     OR ANY DAMAGES  WHATSOEVER  RESULTING  FROM LOSS OF USE,  DATA OR     *|
|*     PROFITS,  WHETHER IN AN ACTION  OF CONTRACT,  NEGLIGENCE OR OTHER     *|
|*     TORTIOUS ACTION, ARISING OUT  OF OR IN CONNECTION WITH THE USE OR     *|
|*     PERFORMANCE OF THIS SOURCE CODE.                                      *|
|*                                                                           *|
 \***************************************************************************/

/************************ NV20 HAL Defines and Structures ******************\
*                                                                           *
* Module: nv20_hal.h                                                        *
*       HAL interface defines and structures.                               *
*                                                                           *
*****************************************************************************
*                                                                           *
* History:                                                                  *
*                                                                           *
\***************************************************************************/

#include <nv20/nv20_gr.h>

//--------------------------------------------------------------------
// Mc
//--------------------------------------------------------------------

typedef struct _tile_values_nv20 {
    U032 tile;                      // base and valid bit
    U032 tlimit;                    // limit of tile range
    U032 tsize;                     // tile pitch value
} NV20_TILE_VALUES;

typedef struct _zcomp_values_nv20 {
    U032    zcomp;
} NV20_ZCOMP_VALUES;

typedef struct _def_mc_hal_power_info_nv20
{
    U032 PbusDebug1;
    U032 PfbTiming2;
    U032 PfbCfg0;
    U032 PfbCfg1;
    U032 PfbCstatus;
    U032 PfbRefCtrl;
    U032 PfbMrs;
    U032 PfbEmrs;
    U032 PfbRef;
    U032 PfifoRamHt;
    U032 PfifoRamFc;
    U032 PfifoRamRo;
    NV20_TILE_VALUES TilingValues[NV_PFB_TILE__SIZE_1];
    NV20_ZCOMP_VALUES ZcompValues[NV_PFB_ZCOMP__SIZE_1];
    U032 ZcompOffset;
    U032 SaveCrtcConfig[2];
    U032 PcrtcRasterStart;
    U032 PcrtcRasterStop;    
    //mac vals
    U032 PvideoIntrEn;
    U032 PvideoBuffer;
    U032 PvideoStop;
    U032 PvideoBase0;
    U032 PvideoBase1;
    U032 PvideoLimit0;
    U032 PvideoLimit1;
    U032 PvideoLuminance0;
    U032 PvideoLuminance1;
    U032 PvideoChrominance0;
    U032 PvideoChrominance1;
    U032 PvideoOffset0;
    U032 PvideoOffset1;
    U032 PvideoSizeIn0;
    U032 PvideoSizeIn1;
    U032 PvideoPointIn0;
    U032 PvideoPointIn1;
    U032 PvideoDsDx0;
    U032 PvideoDsDx1;
    U032 PvideoDtDy0;
    U032 PvideoDtDy1;
    U032 PvideoPointOut0;
    U032 PvideoPointOut1;
    U032 PvideoSizeOut0;
    U032 PvideoSizeOut1;
    U032 PvideoFormat0;
    U032 PvideoFormat1;
    U032 PvideoColorKey;
} MCHALPOWERINFO_NV20, *PMCHALPOWERINFO_NV20;

typedef struct _def_mc_hal_info_nv20
{
    U032 SavePmc;
    U032 SaveIntrEn0;
    MCHALPOWERINFO_NV20 PowerInfo;
} MCHALINFO_NV20, *PMCHALINFO_NV20;

// chip id functions
BOOL IsNV20_NV20(PMCHALINFO);

//--------------------------------------------------------------------
// Fifo
//--------------------------------------------------------------------

//
// 32 channels * 64 bytes each for fifo context area 1
// 32 channels * 16 bytes each for fifo context area 2
//
#define NUM_FIFOS_NV20          32
#define FC1_SIZE_NV20           64
#define FC2_SIZE_NV20           16

typedef struct _def_fifo_hal_info_nv20 {
    U032 Mode;
    U032 InUse;
} FIFOHALINFO_NV20, *PFIFOHALINFO_NV20;

//--------------------------------------------------------------------
// Framebuffer
//--------------------------------------------------------------------

//
// Each ZTAG bit maps to one 64byte tile per partition.
// So if there's 4 partitions, then each bit represents
// 256bytes of allocated fb space.
//
#define MAX_ZTAG_BITS               0x8000

typedef struct _def_fb_hal_zcomp_state_nv20
{
    U032 offset;                            // offset into ztag pool
    U032 size;                              // number of ztag bits
} FBHALZCOMPSTATE_NV20, *PFBHALZCOMPSTATE_NV20;

typedef struct _def_fb_hal_info_nv20
{
    U032 hashTableAddr;
    U032 hashTableSize;
    U032 fifoContextAddr1;          
    U032 fifoContextSize1;
    U032 fifoContextAddr2;
    U032 fifoContextSize2;
    U032 fifoRunoutAddr;
    U032 fifoRunoutSize;
    U032 fifoRunoutMask;
    U032 fbSave[2];
    U032 partitions;
    U032 usedTiles;                         // bitmask of used HW tile ranges
    FBHALZCOMPSTATE_NV20 zCompState[NV_PFB_ZCOMP__SIZE_1];
    U008 zTagPool[MAX_ZTAG_BITS/8];         // ztag bitmap
} FBHALINFO_NV20, *PFBHALINFO_NV20;

//--------------------------------------------------------------------
// Graphics
//--------------------------------------------------------------------

typedef struct _def_graphics_hal_info_nv20
{
    U032 Debug0;                    // NV_PGRAPH_DEBUG_0
    U032 Debug1;                    // NV_PGRAPH_DEBUG_1
    U032 Debug2;                    // NV_PGRAPH_DEBUG_2
    U032 Debug3;                    // NV_PGRAPH_DEBUG_3
    U032 Debug4;                    // NV_PGRAPH_DEBUG_4
    U032 Debug5;                    // NV_PGRAPH_DEBUG_5
    U032 Debug6;                    // NV_PGRAPH_DEBUG_6
    U032 Debug7;                    // NV_PGRAPH_DEBUG_7
    U032 Debug8;                    // NV_PGRAPH_DEBUG_8
    U032 Debug9;                    // NV_PGRAPH_DEBUG_9
    U032 currentChID;
    U032 CtxTable[NUM_FIFOS_NV20];  // graphics channel context table entries
    U032 CtxTableBase;              // base instance offset of table
    U032 currentObjects3d[NUM_FIFOS_NV20];
    NvGraphicsState grSnapShots[NUM_FIFOS_NV20];

#ifdef NV20_SW_CTX_SWITCH
    GRAPHICSCHANNEL_NV20    SwCtxTable[NUM_FIFOS_NV20];
#endif // NV20_SW_CTX_SWITCH
} GRHALINFO_NV20, *PGRHALINFO_NV20;

//--------------------------------------------------------------------
// MediaPort
//--------------------------------------------------------------------

typedef struct _def_mp_hal_info_nv20
{
    U032 VIPSlavePresent;
} MPHALINFO_NV20, *PMPHALINFO_NV20;

// c04dnv20.c interfaces
extern RM_STATUS class04DMethod_NV20(PMPMETHODARG_000);
extern RM_STATUS class04DGetEventStatus_NV20(PMPGETEVENTSTATUSARG_000);
extern RM_STATUS class04DServiceEvent_NV20(PMPSERVICEEVENTARG_000);

// c04env20.c interfaces
extern RM_STATUS class04EMethod_NV20(PMPMETHODARG_000);
extern RM_STATUS class04EGetEventStatus_NV20(PMPGETEVENTSTATUSARG_000);
extern RM_STATUS class04EServiceEvent_NV20(PMPSERVICEEVENTARG_000);

// c04fnv20.c interfaces
extern RM_STATUS class04FMethod_NV20(PMPMETHODARG_000);
extern RM_STATUS class04FGetEventStatus_NV20(PMPGETEVENTSTATUSARG_000);
extern RM_STATUS class04FServiceEvent_NV20(PMPSERVICEEVENTARG_000);

//--------------------------------------------------------------------
// Video
//--------------------------------------------------------------------

// vidnv20.c interfaces
extern RM_STATUS videoInit_NV20(PHALHWINFO, U032);
extern U016 videoConvertScaleFactor_NV20(S012d020);
extern BOOL videoHwOwnsBuffer_NV20(PHALHWINFO, U032, PVIDEO_OVERLAY_HAL_OBJECT);
extern VOID videoAdjustScalarForTV_NV20(PHALHWINFO, U032);
extern VOID videoKickOffOverlay_NV20(PHALHWINFO, PVIDEO_OVERLAY_HAL_OBJECT, U032);
extern VOID videoStopOverlay_NV20(PHALHWINFO, PVIDEO_OVERLAY_HAL_OBJECT, U032);

// c047nv10.c interfaces
extern RM_STATUS class047Method_NV20(PVIDEOMETHODARG_000);

// c07anv10.c interfaces
extern RM_STATUS class07aMethod_NV20(PVIDEOMETHODARG_000);

// c63nv10.c interfaces
extern RM_STATUS class63Method_NV20(PVIDEOMETHODARG_000);
extern RM_STATUS class63InitXfer_NV20(PHALHWINFO, VOID *, U032);
extern VOID class63DualSurfaceDesktop_NV20(PHALHWINFO, U032);

// c64nv10.c interfaces
extern RM_STATUS class64Method_NV20(PVIDEOMETHODARG_000);

// c65nv10.c interfaces
extern RM_STATUS class65Method_NV20(PVIDEOMETHODARG_000);


//--------------------------------------------------------------------
// Dac
//--------------------------------------------------------------------
typedef struct _def_dac_hal_info_nv20
{
    U032 foo;
} DACHALINFO_NV20, *PDACHALINFO_NV20;

#endif // _NV20_HAL_H_
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Microsoft Xbox (1.00.4400) [April 2002] [src]\private\ntos\video\nvx\drivers\resman\kernel\inc\nv20\nv20_gr.h ===
#ifndef _NV20_GR_H_
#define _NV20_GR_H_

 /***************************************************************************\
|*                                                                           *|
|*        Copyright (c) 1993-2000 NVIDIA, Corp.  All rights reserved.        *|
|*                                                                           *|
|*     NOTICE TO USER:   The source code  is copyrighted under  U.S. and     *|
|*     international laws.   NVIDIA, Corp. of Sunnyvale, California owns     *|
|*     the copyright  and as design patents  pending  on the design  and     *|
|*     interface  of the NV chips.   Users and possessors of this source     *|
|*     code are hereby granted  a nonexclusive,  royalty-free  copyright     *|
|*     and  design  patent license  to use this code  in individual  and     *|
|*     commercial software.                                                  *|
|*                                                                           *|
|*     Any use of this source code must include,  in the user documenta-     *|
|*     tion and  internal comments to the code,  notices to the end user     *|
|*     as follows:                                                           *|
|*                                                                           *|
|*     Copyright (c) 1993-2000  NVIDIA, Corp.    NVIDIA  design  patents     *|
|*     pending in the U.S. and foreign countries.                            *|
|*                                                                           *|
|*     NVIDIA, CORP.  MAKES  NO REPRESENTATION ABOUT  THE SUITABILITY OF     *|
|*     THIS SOURCE CODE FOR ANY PURPOSE.  IT IS PROVIDED "AS IS" WITHOUT     *|
|*     EXPRESS OR IMPLIED WARRANTY OF ANY KIND.  NVIDIA, CORP. DISCLAIMS     *|
|*     ALL WARRANTIES  WITH REGARD  TO THIS SOURCE CODE,  INCLUDING  ALL     *|
|*     IMPLIED   WARRANTIES  OF  MERCHANTABILITY  AND   FITNESS   FOR  A     *|
|*     PARTICULAR  PURPOSE.   IN NO EVENT SHALL NVIDIA, CORP.  BE LIABLE     *|
|*     FOR ANY SPECIAL, INDIRECT, INCIDENTAL,  OR CONSEQUENTIAL DAMAGES,     *|
|*     OR ANY DAMAGES  WHATSOEVER  RESULTING  FROM LOSS OF USE,  DATA OR     *|
|*     PROFITS,  WHETHER IN AN ACTION  OF CONTRACT,  NEGLIGENCE OR OTHER     *|
|*     TORTIOUS ACTION, ARISING OUT  OF OR IN CONNECTION WITH THE USE OR     *|
|*     PERFORMANCE OF THIS SOURCE CODE.                                      *|
|*                                                                           *|
 \***************************************************************************/
/**************************** Graphics Manager *****************************\
*                                                                           *
* Module: NV20_GR.H                                                         *
*       Graphics engine management.                                         *
*                                                                           *
*****************************************************************************
*                                                                           *
* History:                                                                  *
*                                                                           *
\***************************************************************************/

//---------------------------------------------------------------------------
//
//  Defines.
//
//---------------------------------------------------------------------------
// #define NV20_SW_CTX_SWITCH

//
// On nv20, the graphics channel context is partitioned into 2d and 3d
// state sets.  These data structures help the RM encapsulate what regs
// go where.
//
typedef struct _def_prim_assm_state_nv20    PRIM_ASSM_STATE_NV20, *PPRIM_ASSM_STATE_NV20;
typedef struct _def_grctxpipe_nv20          GRCTXPIPE_NV20, *PGRCTXPIPE_NV20;
typedef struct _def_grctxcmn_nv20           GRCTXCMN_NV20, *PGRCTXCMN_NV20;
typedef struct _def_grctx3d_nv20            GRCTX3D_NV20, *PGRCTX3D_NV20;
typedef struct _def_graphics_channel_nv20   GRAPHICSCHANNEL_NV20, *PGRAPHICSCHANNEL_NV20;

//
// Context switching is done in hardware in nv20, so all we
// need to do is reserve space for both 2d/3d state at fifo
// alloc time.  The following macros are used in the hal class
// descriptor table.
//
//#define NV20_GR_2D_CONTEXT_SIZE             (4 * 207)
//#define NV20_GR_3D_CONTEXT_SIZE             (4 * 3457)
//#define NV20_GR_CONTEXT_SIZE                (NV20_GR_2D_CONTEXT_SIZE + NV20_GR_3D_CONTEXT_SIZE)
#define NV20_GR_CONTEXT_SIZE                (sizeof (GRAPHICSCHANNEL_NV20))

//
// The Kelvin class on nv20 requires an additional 200 words
// of "parking" (instance) space with a default alignment of 16.
//
#define NV20_KELVIN_CONTEXT_SIZE            (4 * 200)
#define NV20_KELVIN_CONTEXT_ALIGN           (16)

//---------------------------------------------------------------------------
//
//  Graphics channel context.
//
//---------------------------------------------------------------------------

//
// The format of the graphics channel context is derived
// from /hw/nv20/docs/context_switching.doc.
//

//
// RDI ram selects (pulled from nv20 diags).
//
#define RDI_RAMSEL_IDX_FMT         0x00000026
#define RDI_RAMSEL_CAS0            0x0000002c
#define RDI_RAMSEL_CAS1            0x0000002d
#define RDI_RAMSEL_CAS2            0x0000002e
#define RDI_RAMSEL_ASSM_STATE      0x0000002f
#define RDI_RAMSEL_IDX_CACHE0      0x00000020
#define RDI_RAMSEL_IDX_CACHE1      0x00000021
#define RDI_RAMSEL_IDX_CACHE2      0x00000022
#define RDI_RAMSEL_IDX_CACHE3      0x00000023
#define RDI_RAMSEL_VTX_FILE0       0x00000028
#define RDI_RAMSEL_VTX_FILE1       0x00000029
#define RDI_RAMSEL_XL_P            0x00000010
#define RDI_RAMSEL_XL_VAB          0x00000015
#define RDI_RAMSEL_XL_XFREG        0x0000001a
#define RDI_RAMSEL_XL_XFCTX        0x00000017
#define RDI_RAMSEL_XL_LTCTX        0x00000018
#define RDI_RAMSEL_XL_LTC          0x00000019
#define RDI_RAMSEL_CRSTR_STIPP     0x00000045
#define RDI_RAMSEL_FD_CTRL         0x0000003d
#define RDI_RAMSEL_ROP_REGS        0x00000050

#define RDI_ADDR_ZERO              0x00000000

//
// Pipe state.
//
#define XL_VAB_BASE         NV_IGRAPH_XF2PIPE(NV_IGRAPH_XF_CMD_VAB,0)
#define XL_XFCTX_BASE       NV_IGRAPH_XF2PIPE(NV_IGRAPH_XF_CMD_XFCTX,0)
#define XL_LTCTX_BASE       NV_IGRAPH_XF2PIPE(NV_IGRAPH_XF_CMD_LTCTX,0)
#define XL_LTC0_BASE        NV_IGRAPH_XF2PIPE(NV_IGRAPH_XF_CMD_LTC0,0)
#define XL_LTC1_BASE        NV_IGRAPH_XF2PIPE(NV_IGRAPH_XF_CMD_LTC1,0)
#define XL_LTC2_BASE        NV_IGRAPH_XF2PIPE(NV_IGRAPH_XF_CMD_LTC2,0)
#define XL_LTC3_BASE        NV_IGRAPH_XF2PIPE(NV_IGRAPH_XF_CMD_LTC3,0)

#define IDX_FMT_COUNT       (16+16+3)       // Vertex Array Regs+State
#define CAS0_COUNT		    (6*4+5)         // Primitive Assembly Vtx0
#define CAS1_COUNT          (6*4+5)         // Primitive Assembly Vtx1
#define CAS2_COUNT          (6*4+5)         // Primitive Assembly Vtx2
#define ASSM_STATE_COUNT    (2)             // Primitive Assembly State
#define IDX_CACHE0_COUNT    (32*4)          // FD Coefficients (EvenLeft)
#define IDX_CACHE1_COUNT    (32*4)          // FD Coefficients (OddLeft)
#define IDX_CACHE2_COUNT    (32*4)          // FD Coefficients (EvenRight)
#define IDX_CACHE3_COUNT    (32*4)          // FD Coefficients (OddRight)
#define VTX_FILE0_COUNT		(48*4)          // Vertex File0
#define VTX_FILE1_COUNT		(144*4)         // Vertex File1
#define XL_P_COUNT          (136*4)         // Cheops Program
#define XL_XFCTX_COUNT      (192*4)         // Cheops Context
#define XL_LTCTX_COUNT      (74*4)          // Zoser Context
#define XL_LTC0_COUNT       (4)             // Zoser Context 0
#define XL_LTC1_COUNT       (20)            // Zoser Context 1
#define XL_LTC2_COUNT       (15)            // Zoser Context 2
#define XL_LTC3_COUNT       (14)            // Zoser Context 3
#define XL_LTC_COUNT        (XL_LTC0_COUNT+XL_LTC1_COUNT+XL_LTC2_COUNT+XL_LTC3_COUNT)
#define XL_VAB_COUNT        (17*4)          // VAB
#define CRSTR_STIPP_COUNT   (32)            // RSTR stipple
#define FD_CTRL_COUNT       (15)            // FD
#define ROP_REGS_COUNT      (1)             // ROP Regs

struct _def_grctxpipe_nv20
{
    U032 IdxFmt[IDX_FMT_COUNT];
    U032 Cas0[CAS0_COUNT];
    U032 Cas1[CAS1_COUNT];
    U032 Cas2[CAS2_COUNT];
    U032 AssmState[ASSM_STATE_COUNT];
    U032 IdxCache0[IDX_CACHE0_COUNT];
    U032 IdxCache1[IDX_CACHE1_COUNT];
    U032 IdxCache2[IDX_CACHE2_COUNT];
    U032 IdxCache3[IDX_CACHE3_COUNT];
    U032 VtxFile0[VTX_FILE0_COUNT];
    U032 VtxFile1[VTX_FILE1_COUNT];
    U032 XlP[XL_P_COUNT];
    U032 XlXfCtx[XL_XFCTX_COUNT];
    U032 XlLtCtx[XL_LTCTX_COUNT];
    U032 XlLtc[XL_LTC_COUNT];
    U032 XlVab[XL_VAB_COUNT];
    U032 CrstrStipp[CRSTR_STIPP_COUNT];
    U032 FdCtrl[FD_CTRL_COUNT];
    U032 RopRegs[ROP_REGS_COUNT];
    U032 Pad[4];
};

//
// Because graphics channel context switching is done in hw
// on nv20, we aren't in control of the format of this data
// structure (be careful!).
//

//
// This structure represents the channel context state
// that is either 2d-only or shared between 2d/3d.
//
struct _def_grctxcmn_nv20
{
    U032 ContextUser;
    U032 ContextSwitch1;
    U032 ContextSwitch2;
    U032 ContextSwitch3;
    U032 ContextSwitch4;
    U032 ContextSwitch5;
    U032 ContextCache1[8];
    U032 ContextCache2[8];
    U032 ContextCache3[8];
    U032 ContextCache4[8];
    U032 ContextCache5[8];

    U032 MonoColor0;
    U032 BufferSwizzle2;
    U032 BufferSwizzle5;
    U032 BufferOffset[6];
    U032 BufferBase[6];
    U032 BufferPitch[5];
    U032 BufferLimit[6];
    U032 Chroma;
    U032 Surface;
    U032 State;
    U032 Notify;
    U032 BufferPixel;
    U032 DmaPitch;
    U032 DvdColorFmt;
    U032 ScaledFormat;
    U032 PatternColor0;
    U032 PatternColor1;
    U032 Pattern[2];
    U032 PatternShape;
    U032 PattColorRam[64];
    U032 Rop3;
    U032 BetaAnd;
    U032 BetaPreMult;
    U032 StoredFmt;
    U032 AbsXRam[10];
    U032 AbsYRam[10];
    U032 AbsUClipXMin;
    U032 AbsUClipXMax;
    U032 AbsUClipYMin;
    U032 AbsUClipYMax;
    U032 AbsUClipAXMin;
    U032 AbsUClipAXMax;
    U032 AbsUClipAYMin;
    U032 AbsUClipAYMax;
    U032 SourceColor;
    U032 Misc24_0;
    U032 XYLogicMisc0;
    U032 XYLogicMisc1;
    U032 XYLogicMisc2;
    U032 XYLogicMisc3;
    U032 ClipX0;
    U032 ClipX1;
    U032 ClipY0;
    U032 ClipY1;
    U032 AbsIClipYMax;
    U032 AbsIClipXMax;
    U032 Passthru0;
    U032 Passthru1;
    U032 Passthru2;
    U032 DimxTexture;
    U032 WdimxTexture;
    U032 DmaStart0;
    U032 DmaStart1;
    U032 DmaLength;
    U032 DmaMisc;
    U032 Misc24_1;
    U032 Misc24_2;
    U032 XMisc;
    U032 YMisc;
    U032 Valid1;
};

//
// This structure represents 3d channel context state.
//
struct _def_grctx3d_nv20
{
    U032 AntiAliasing;
    U032 Blend;
    U032 BlendColor;
    U032 BorderColor0;
    U032 BorderColor1;
    U032 BorderColor2;
    U032 BorderColor3;
    U032 BumpMat00_1;
    U032 BumpMat00_2;
    U032 BumpMat00_3;
    U032 BumpMat01_1;
    U032 BumpMat01_2;
    U032 BumpMat01_3;
    U032 BumpMat10_1;
    U032 BumpMat10_2;
    U032 BumpMat10_3;
    U032 BumpMat11_1;
    U032 BumpMat11_2;
    U032 BumpMat11_3;
    U032 BumpOffset1;
    U032 BumpOffset2;
    U032 BumpOffset3;
    U032 BumpScale1;
    U032 BumpScale2;
    U032 BumpScale3;
    U032 ClearRectX;
    U032 ClearRectY;
    U032 ColorClearValue;
    U032 ColorKeyColor0;
    U032 ColorKeyColor1;
    U032 ColorKeyColor2;
    U032 ColorKeyColor3;
    U032 CombineFactor0_0;
    U032 CombineFactor0_1;
    U032 CombineFactor0_2;
    U032 CombineFactor0_3;
    U032 CombineFactor0_4;
    U032 CombineFactor0_5;
    U032 CombineFactor0_6;
    U032 CombineFactor0_7;
    U032 CombineFactor1_0;
    U032 CombineFactor1_1;
    U032 CombineFactor1_2;
    U032 CombineFactor1_3;
    U032 CombineFactor1_4;
    U032 CombineFactor1_5;
    U032 CombineFactor1_6;
    U032 CombineFactor1_7;
    U032 CombineAlphaI0;
    U032 CombineAlphaI1;
    U032 CombineAlphaI2;
    U032 CombineAlphaI3;
    U032 CombineAlphaI4;
    U032 CombineAlphaI5;
    U032 CombineAlphaI6;
    U032 CombineAlphaI7;
    U032 CombineAlphaO0;
    U032 CombineAlphaO1;
    U032 CombineAlphaO2;
    U032 CombineAlphaO3;
    U032 CombineAlphaO4;
    U032 CombineAlphaO5;
    U032 CombineAlphaO6;
    U032 CombineAlphaO7;
    U032 CombineColorI0;
    U032 CombineColorI1;
    U032 CombineColorI2;
    U032 CombineColorI3;
    U032 CombineColorI4;
    U032 CombineColorI5;
    U032 CombineColorI6;
    U032 CombineColorI7;
    U032 CombineColorO0;
    U032 CombineColorO1;
    U032 CombineColorO2;
    U032 CombineColorO3;
    U032 CombineColorO4;
    U032 CombineColorO5;
    U032 CombineColorO6;
    U032 CombineColorO7;
    U032 CombineCtl;
    U032 CombineSpecFog0;
    U032 CombineSpecFog1;
    U032 Control0;
    U032 Control1;
    U032 Control2;
    U032 Control3;
    U032 FogColor;
    U032 FogParam0;
    U032 FogParam1;
    U032 PointSize;
    U032 SetupRaster;
    U032 ShaderClipMode;
    U032 ShaderCtl;
    U032 ShaderProg;
    U032 SemaphoreOffset;
    U032 ShadowCtl;
    U032 ShadowZSlopeThreshold;
    U032 SpecFogFactor0;
    U032 SpecFogFactor1;
    U032 SurfaceClipX;
    U032 SurfaceClipY;
    U032 TexAddress0;
    U032 TexAddress1;
    U032 TexAddress2;
    U032 TexAddress3;
    U032 TexCtl0_0;
    U032 TexCtl0_1;
    U032 TexCtl0_2;
    U032 TexCtl0_3;
    U032 TexCtl1_0;
    U032 TexCtl1_1;
    U032 TexCtl1_2;
    U032 TexCtl1_3;
    U032 TexCtl2_0;
    U032 TexCtl2_1;
    U032 TexFilter0;
    U032 TexFilter1;
    U032 TexFilter2;
    U032 TexFilter3;
    U032 TexFormat0;
    U032 TexFormat1;
    U032 TexFormat2;
    U032 TexFormat3;
    U032 TexImageRect0;
    U032 TexImageRect1;
    U032 TexImageRect2;
    U032 TexImageRect3;
    U032 TexOffset0;
    U032 TexOffset1;
    U032 TexOffset2;
    U032 TexOffset3;
    U032 TexPallete0;
    U032 TexPallete1;
    U032 TexPallete2;
    U032 TexPallete3;
    U032 WindowClipX[8];
    U032 WindowClipY[8];
    U032 ZCompressOcclude;
    U032 ZStencilClearValue;
    U032 ZClipMax;
    U032 ZClipMin;
    U032 ContextDmaA;
    U032 ContextDmaB;
    U032 ContextDmaVtxA;
    U032 ContextDmaVtxB;
    U032 ZOffsetBias;
    U032 ZOffsetFactor;
    U032 Eyevec0;
    U032 Eyevec1;
    U032 Eyevec2;
    U032 Shadow;
    U032 FdData;
    U032 FdSwatch;
    U032 FdExtras;
    U032 Emission0;
    U032 Emission1;
    U032 Emission2;
    U032 SceneAmb0;
    U032 SceneAmb1;
    U032 SceneAmb2;
    U032 ContextDmaGetState;
    U032 BeginPatch0;
    U032 BeginPatch1;
    U032 BeginPatch2;
    U032 BeginPatch3;
    U032 BeginCurve;
    U032 BeginTrans0;
    U032 BeginTrans1;
    U032 Csv0_D;
    U032 Csv0_C;
    U032 Csv1_A;
    U032 Csv1_B;
    U032 CheopsOffset;
};

struct _def_graphics_channel_nv20
{
    GRCTXCMN_NV20   grCtxCmn;
    GRCTX3D_NV20    grCtx3d;
    GRCTXPIPE_NV20  grCtxPipe;
};

#endif // _NV20_GR_H_
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Microsoft Xbox (1.00.4400) [April 2002] [src]\private\ntos\video\nvx\drivers\resman\kernel\inc\nv10\nv10_ref.h ===
//
// (C) Copyright NVIDIA Corporation Inc., 1995,1996. All rights reserved.
//
/***************************************************************************\
*                                                                           *
*               NV10 Hardware Reference Manual extracted defines.           *
*                                                                           *
\***************************************************************************/
#ifndef _NV10_REF_H_
#define _NV10_REF_H_

//
// These registers are to be accessed only by nv10-specific code.
//

/* dev_bus.ref */
#define NV_MSPACE                             0x07FFFFFF:0x00000000 /* RW--D */
/* dev_bus.ref */
#define NV_RSPACE                             0x00FFFFFF:0x00000000 /* RW--D */
/* dev_bus.ref */
#define NV_PBUS_DEBUG_0                                  0x00001080 /* RW-4R */
#define NV_PBUS_DEBUG_0_FBIO_SCLK_DELAY                         3:0 /* RWIUF */
#define NV_PBUS_DEBUG_0_FBIO_SCLK_DELAY_8                0x00000008 /* RWI-V */
#define NV_PBUS_DEBUG_0_FBIO_SCLK_PC                            4:4 /* RWIVF */
#define NV_PBUS_DEBUG_0_FBIO_SCLK_PC_NORMAL              0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_0_FBIO_SCLK_PC_OVERRIDE            0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_0_FBIO_FBCLK_DELAY                       11:8 /* RWIUF */
#define NV_PBUS_DEBUG_0_FBIO_FBCLK_DELAY_4               0x00000004 /* RWI-V */
#define NV_PBUS_DEBUG_0_FBIO_FBCLK_DELAY_8               0x00000008 /* RW--V */
#define NV_PBUS_DEBUG_0_FBIO_FBCLK_PC                         12:12 /* RWIVF */
#define NV_PBUS_DEBUG_0_FBIO_FBCLK_PC_NORMAL             0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_0_FBIO_FBCLK_PC_OVERRIDE           0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_0_FBIO_ACLK_DELAY                       19:16 /* RWIUF */
#define NV_PBUS_DEBUG_0_FBIO_ACLK_DELAY_8                0x00000008 /* RW--V */
#define NV_PBUS_DEBUG_0_FBIO_ACLK_DELAY_10               0x0000000A /* RWI-V */
#define NV_PBUS_DEBUG_0_FBIO_ACLK_PC                          20:20 /* RWIVF */
#define NV_PBUS_DEBUG_0_FBIO_ACLK_PC_NORMAL              0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_0_FBIO_ACLK_PC_OVERRIDE            0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_0_FBIO_RCLK_DELAY                       27:24 /* RWIUF */
#define NV_PBUS_DEBUG_0_FBIO_RCLK_DELAY_8                0x00000008 /* RW--V */
#define NV_PBUS_DEBUG_0_FBIO_RCLK_DELAY_14               0x0000000E /* RWI-V */
#define NV_PBUS_DEBUG_0_FBIO_RCLK_PC                          28:28 /* RWIVF */
#define NV_PBUS_DEBUG_0_FBIO_RCLK_PC_NORMAL              0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_0_FBIO_RCLK_PC_OVERRIDE            0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_1                                  0x00001084 /* RW-4R */
#define NV_PBUS_DEBUG_1_PCIM_THROTTLE                           0:0 /* RWIVF */
#define NV_PBUS_DEBUG_1_PCIM_THROTTLE_DISABLED           0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_1_PCIM_THROTTLE_ENABLED            0x00000001 /* RWI-V */
#define NV_PBUS_DEBUG_1_PCIM_CMD                                1:1 /* RWIVF */
#define NV_PBUS_DEBUG_1_PCIM_CMD_SIZE_BASED              0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_1_PCIM_CMD_MRL_ONLY                0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_1_HASH_DECODE                             2:2 /* RWIVF */
#define NV_PBUS_DEBUG_1_HASH_DECODE_1FF                  0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_1_HASH_DECODE_2FF                  0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_1_AGPM_CMD                                4:3 /* RWIVF */
#define NV_PBUS_DEBUG_1_AGPM_CMD_HP_ON_1ST               0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_1_AGPM_CMD_LP_ONLY                 0x00000001 /* RWI-V */
#define NV_PBUS_DEBUG_1_AGPM_CMD_HP_ONLY                 0x00000002 /* RW--V */
/* NV_PBUS_DEBUG_1_PCIS_WRITE is shared (see nv_ref.h) */
#define NV_PBUS_DEBUG_1_PCIS_2_1                                6:6 /* RWIVF */
#define NV_PBUS_DEBUG_1_PCIS_2_1_DISABLED                0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_1_PCIS_2_1_ENABLED                 0x00000001 /* RWI-V */
#define NV_PBUS_DEBUG_1_PCIS_RETRY                              7:7 /* RWIVF */
#define NV_PBUS_DEBUG_1_PCIS_RETRY_DISABLED              0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_1_PCIS_RETRY_ENABLED               0x00000001 /* RWI-V */
#define NV_PBUS_DEBUG_1_SPARE0                                  7:7 /* RWIVF */
#define NV_PBUS_DEBUG_1_SPARE0_ZERO                      0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_1_SPARE0_ONE                       0x00000001 /* RWI-V */
#define NV_PBUS_DEBUG_1_PCIS_RD_BURST                           8:8 /* RWIVF */
#define NV_PBUS_DEBUG_1_PCIS_RD_BURST_DISABLED           0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_1_PCIS_RD_BURST_ENABLED            0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_1_PCIS_WR_BURST                           9:9 /* RWIVF */
#define NV_PBUS_DEBUG_1_PCIS_WR_BURST_DISABLED           0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_1_PCIS_WR_BURST_ENABLED            0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_1_PCIS_EARLY_RTY                        10:10 /* RWIVF */
#define NV_PBUS_DEBUG_1_PCIS_EARLY_RTY_DISABLED          0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_1_PCIS_EARLY_RTY_ENABLED           0x00000001 /* RWI-V */
#define NV_PBUS_DEBUG_1_PCIS_CPUQ                             12:12 /* RWIVF */
#define NV_PBUS_DEBUG_1_PCIS_CPUQ_DISABLED               0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_1_PCIS_CPUQ_ENABLED                0x00000001 /* RWI-V */
#define NV_PBUS_DEBUG_1_DPSH_DECODE                           13:13 /* RWIVF */
#define NV_PBUS_DEBUG_1_DPSH_DECODE_NV4                  0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_1_DPSH_DECODE_NV3                  0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_1_SPARE1                                14:14 /* RWIVF */
#define NV_PBUS_DEBUG_1_SPARE1_ZERO                      0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_1_SPARE1_ONE                       0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_1_FBI_DIFFERENTIAL                      14:14 /* RWIVF */
#define NV_PBUS_DEBUG_1_FBI_DIFFERENTIAL_ENABLED         0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_1_FBI_DIFFERENTIAL_DISABLED        0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_1_SPARE2                                15:15 /* RWIVF */
#define NV_PBUS_DEBUG_1_SPARE2_ZERO                      0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_1_SPARE2_ONE                       0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_1_AGPFW_DWOD                            15:15 /* RWIVF */
#define NV_PBUS_DEBUG_1_AGPFW_DWOD_DISABLED              0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_1_AGPFW_DWOD_ENABLED               0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_1_SPARE3                                16:16 /* RWIVF */
#define NV_PBUS_DEBUG_1_SPARE3_ZERO                      0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_1_SPARE3_ONE                       0x00000001 /* RW--V */
/* NV_PBUS_DEBUG_1_OPENGL is shared (see nv_ref.h) */
#define NV_PBUS_DEBUG_1_SPARE4                                17:17 /* RWIVF */
#define NV_PBUS_DEBUG_1_SPARE4_ZERO                      0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_1_SPARE4_ONE                       0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_1_ACQUIRE_TIMEOUT                       18:18 /* RWIVF */
#define NV_PBUS_DEBUG_1_ACQUIRE_TIMEOUT_DISABLED         0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_1_ACQUIRE_TIMEOUT_ENABLED          0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_1_SPARE5                                18:18 /* RWIVF */
#define NV_PBUS_DEBUG_1_SPARE5_ZERO                      0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_1_SPARE5_ONE                       0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_1_SPARE6                                19:19 /* RWIVF */
#define NV_PBUS_DEBUG_1_SPARE6_ZERO                      0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_1_SPARE6_ONE                       0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_1_SPARE7                                20:20 /* RWIVF */
#define NV_PBUS_DEBUG_1_SPARE7_ZERO                      0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_1_SPARE7_ONE                       0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_1_SPARE8                                21:21 /* RWIVF */
#define NV_PBUS_DEBUG_1_SPARE8_ZERO                      0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_1_SPARE8_ONE                       0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_1_SPARE9                                22:22 /* RWIVF */
#define NV_PBUS_DEBUG_1_SPARE9_ZERO                      0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_1_SPARE9_ONE                       0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_1_SPARE10                               23:23 /* RWIVF */
#define NV_PBUS_DEBUG_1_SPARE10_ZERO                     0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_1_SPARE10_ONE                      0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_2                                  0x00001088 /* RW-4R */
#define NV_PBUS_DEBUG_2_AGP_DIFFERENTIAL                        0:0 /* RWIVF */
#define NV_PBUS_DEBUG_2_AGP_DIFFERENTIAL_DISABLED        0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_2_AGP_DIFFERENTIAL_ENABLED         0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_2_AGP_VREF                                0:0 /* RWIVF */
#define NV_PBUS_DEBUG_2_AGP_VREF_DISABLED                0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_2_AGP_VREF_ENABLED                 0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_2_AGP_SB_STB_DELAY                        9:4 /* RWIUF */
#define NV_PBUS_DEBUG_2_AGP_SB_STB_DELAY_34              0x00000022 /* RWI-V */
#define NV_PBUS_DEBUG_2_AGP_SB_STB_PC                         12:12 /* RWIVF */
#define NV_PBUS_DEBUG_2_AGP_SB_STB_PC_NORMAL             0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_2_AGP_SB_STB_PC_OVERRIDE           0x00000001 /* RW0-V */
#define NV_PBUS_DEBUG_3                                  0x0000108C /* RW-4R */
#define NV_PBUS_DEBUG_3_AGP_MAX_SIZE                            1:0 /* RWIVF */
#define NV_PBUS_DEBUG_3_AGP_MAX_SIZE_UNLIMITED           0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_3_AGP_MAX_SIZE_32_BYTES            0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_3_AGP_MAX_SIZE_64_BYTES            0x00000002 /* RW--V */
#define NV_PBUS_DEBUG_3_AGP_4X_NVCLK                            7:4 /* RWIVF */
#define NV_PBUS_DEBUG_3_AGP_4X_NVCLK_ABOVE_66MHZ         0x00000005 /* RW--V */
#define NV_PBUS_DEBUG_3_AGP_4X_NVCLK_ABOVE_73MHZ         0x00000006 /* RW--V */
#define NV_PBUS_DEBUG_3_AGP_4X_NVCLK_ABOVE_80MHZ         0x00000007 /* RW--V */
#define NV_PBUS_DEBUG_3_AGP_4X_NVCLK_ABOVE_87MHZ         0x00000008 /* RW--V */
#define NV_PBUS_DEBUG_3_AGP_4X_NVCLK_ABOVE_94MHZ         0x00000009 /* RW--V */
#define NV_PBUS_DEBUG_3_AGP_4X_NVCLK_ABOVE_100MHZ        0x0000000A /* RWI-V */
#define NV_PBUS_DEBUG_3_AGP_4X_NVCLK_ABOVE_106MHZ        0x0000000B /* RW--V */
#define NV_PBUS_DEBUG_3_AGP_4X_NVCLK_ABOVE_113MHZ        0x0000000C /* RW--V */
#define NV_PBUS_DEBUG_3_AGP_4X_NVCLK_ABOVE_120MHZ        0x0000000D /* RW--V */
#define NV_PBUS_DEBUG_3_AGP_4X_NVCLK_ABOVE_126MHZ        0x0000000E /* RW--V */
#define NV_PBUS_DEBUG_3_AGP_4X_NVCLK_ABOVE_133MHZ        0x0000000F /* RW--V */
#define NV_PBUS_DEBUG_CTL                                0x00001090 /* RW-4R */
#define NV_PBUS_DEBUG_CTL_MODE                                  0:0 /* RWIVF */
#define NV_PBUS_DEBUG_CTL_MODE_DISABLED                  0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTL_MODE_ENABLED                   0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_CTL_READ_SELECT                           4:4 /* RWIVF */
#define NV_PBUS_DEBUG_CTL_READ_SELECT_0                  0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTL_READ_SELECT_1                  0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_READ                               0x00001094 /* R--4R */
#define NV_PBUS_DEBUG_READ_DATA                                31:0 /* R-XUF */
#define NV_PBUS_DEBUG_HOST                               0x0000109C /* RW-4R */
#define NV_PBUS_DEBUG_HOST_SEL                                  2:0 /* RWXUF */
#define NV_PBUS_DEBUG_SEL_0                              0x000010A0 /* RW-4R */
#define NV_PBUS_DEBUG_SEL_0_X                                   2:0 /* RWXUF */
#define NV_PBUS_DEBUG_SEL_1                              0x000010A4 /* RW-4R */
#define NV_PBUS_DEBUG_SEL_1_X                                   2:0 /* RWXUF */
#define NV_PBUS_DEBUG_SEL_2                              0x000010A8 /* RW-4R */
#define NV_PBUS_DEBUG_SEL_2_X                                   2:0 /* RWXUF */
#define NV_PBUS_DEBUG_SEL_3                              0x000010AC /* RW-4R */
#define NV_PBUS_DEBUG_SEL_3_X                                   2:0 /* RWXUF */
#define NV_PBUS_DEBUG_CTRIM_0                            0x000010B0 /* RW-4R */
#define NV_PBUS_DEBUG_CTRIM_0_NV_NE_DELAY                       3:0 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_0_NV_NE_DELAY_8              0x00000003 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_0_NV_SE_DELAY                       7:4 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_0_NV_SE_DELAY_8              0x00000002 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_0_NV_NW_DELAY                      11:8 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_0_NV_NW_DELAY_8              0x00000002 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_0_NV_SW_DELAY                     15:12 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_0_NV_SW_DELAY_8              0x00000005 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_0_M_NW_DELAY                      19:16 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_0_M_NW_DELAY_8               0x00000001 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_0_M_SW_DELAY                      23:20 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_0_M_SW_DELAY_8               0x00000001 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_0_U_NW_DELAY                      27:24 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_0_U_NW_DELAY_8               0x00000002 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_0_U_SW_DELAY                      31:28 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_0_U_SW_DELAY_8               0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_0_NV_NE_TRIM                        3:0 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_0_NV_NE_TRIM_8               0x00000003 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_0_NV_NE_TRIM_INIT            0x00000003 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_0_NV_SE_TRIM                        7:4 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_0_NV_SE_TRIM_8               0x00000002 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_0_NV_SE_TRIM_INIT            0x00000002 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_0_NV_NW_TRIM                       11:8 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_0_NV_NW_TRIM_8               0x00000002 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_0_NV_NW_TRIM_INIT            0x00000002 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_0_NV_SW_TRIM                      15:12 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_0_NV_SW_TRIM_8               0x00000005 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_0_NV_SW_TRIM_INIT            0x00000005 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_0_M_NW_TRIM                       19:16 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_0_M_NW_TRIM_8                0x00000001 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_0_M_NW_TRIM_INIT             0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_0_M_SW_TRIM                       23:20 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_0_M_SW_TRIM_8                0x00000001 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_0_M_SW_TRIM_INIT             0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_0_NV_NC_TRIM                      27:24 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_0_NV_NC_TRIM_8               0x00000002 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_0_NV_NC_TRIM_INIT            0x00000003 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_0_NV_SC_TRIM                      31:28 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_0_NV_SC_TRIM_8               0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_0_NV_SC_TRIM_INIT            0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_1                            0x000010B4 /* RW-4R */
#define NV_PBUS_DEBUG_CTRIM_1_C0_DELAY                          3:0 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_1_C0_DELAY_0                 0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_1_C1_DELAY                          7:4 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_1_C1_DELAY_0                 0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_1_C2_DELAY                         11:8 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_1_C2_DELAY_0                 0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_1_C3_DELAY                        15:12 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_1_C3_DELAY_0                 0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_1_C4_DELAY                        19:16 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_1_C4_DELAY_0                 0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_1_C5_DELAY                        23:20 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_1_C5_DELAY_0                 0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_1_C6_DELAY                        27:24 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_1_C6_DELAY_0                 0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_1_C7_DELAY                        31:28 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_1_C7_DELAY_0                 0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_1_M_SHAPE                           3:0 /* RWISF */
#define NV_PBUS_DEBUG_CTRIM_1_M_SHAPE_0                  0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_1_M_SHAPE_INIT               0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_1_N_SHAPE                           7:4 /* RWISF */
#define NV_PBUS_DEBUG_CTRIM_1_N_SHAPE_0                  0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_1_N_SHAPE_INIT               0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_1_P_SHAPE                          11:8 /* RWISF */
#define NV_PBUS_DEBUG_CTRIM_1_P_SHAPE_0                  0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_1_P_SHAPE_INIT               0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_1_PV1_SHAPE                        11:8 /* RWISF */
#define NV_PBUS_DEBUG_CTRIM_1_PV1_SHAPE_0                0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_1_PV1_SHAPE_INIT             0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_1_SPARE0                          15:12 /* RWISF */
#define NV_PBUS_DEBUG_CTRIM_1_SPARE0_0                   0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_1_SPARE0_INIT                0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_1_PV2_SHAPE                       15:12 /* RWISF */
#define NV_PBUS_DEBUG_CTRIM_1_PV2_SHAPE_0                0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_1_PV2_SHAPE_INIT             0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_1_FP_SHAPE                        19:16 /* RWISF */
#define NV_PBUS_DEBUG_CTRIM_1_FP_SHAPE_0                 0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_1_FP_SHAPE_INIT              0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_1_FP1_SHAPE                       19:16 /* RWISF */
#define NV_PBUS_DEBUG_CTRIM_1_FP1_SHAPE_0                0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_1_FP1_SHAPE_INIT             0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_1_FPDP_SHAPE                      23:20 /* RWISF */
#define NV_PBUS_DEBUG_CTRIM_1_FPDP_SHAPE_0               0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_1_FPDP_SHAPE_INIT            0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_1_FPIO_SHAPE                      27:24 /* RWISF */
#define NV_PBUS_DEBUG_CTRIM_1_FPIO_SHAPE_0               0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_1_FPIO_SHAPE_INIT            0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_1_SPARE1                          31:28 /* RWISF */
#define NV_PBUS_DEBUG_CTRIM_1_SPARE1_0                   0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_1_SPARE1_INIT                0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_1_FPION_SHAPE                     31:28 /* RWISF */
#define NV_PBUS_DEBUG_CTRIM_1_FPION_SHAPE_0              0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_1_FPION_SHAPE_INIT           0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_2                            0x000010B8 /* RW-4R */
#define NV_PBUS_DEBUG_CTRIM_2_C0_DELAY                          3:0 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_2_C0_DELAY_0                 0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_2_C1_DELAY                          7:4 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_2_C1_DELAY_0                 0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_2_C2_DELAY                         11:8 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_2_C2_DELAY_0                 0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_2_C3_DELAY                        15:12 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_2_C3_DELAY_0                 0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_2_C4_DELAY                        19:16 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_2_C4_DELAY_0                 0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_2_C5_DELAY                        23:20 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_2_C5_DELAY_0                 0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_2_C6_DELAY                        27:24 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_2_C6_DELAY_0                 0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_2_C7_DELAY                        31:28 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_2_C7_DELAY_0                 0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_2_M2I_0_SHAPE                       3:0 /* RWISF */
#define NV_PBUS_DEBUG_CTRIM_2_M2I_0_SHAPE_0              0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_2_M2I_0_SHAPE_INIT           0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_2_M2I_1_SHAPE                       7:4 /* RWISF */
#define NV_PBUS_DEBUG_CTRIM_2_M2I_1_SHAPE_0              0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_2_M2I_1_SHAPE_INIT           0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_2_M2I_2_SHAPE                      11:8 /* RWISF */
#define NV_PBUS_DEBUG_CTRIM_2_M2I_2_SHAPE_0              0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_2_M2I_2_SHAPE_INIT           0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_2_M2I_3_SHAPE                     15:12 /* RWISF */
#define NV_PBUS_DEBUG_CTRIM_2_M2I_3_SHAPE_0              0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_2_M2I_3_SHAPE_INIT           0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_2_M2O_0_SHAPE                     19:16 /* RWISF */
#define NV_PBUS_DEBUG_CTRIM_2_M2O_0_SHAPE_0              0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_2_M2O_0_SHAPE_INIT           0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_2_M2O_1_SHAPE                     23:20 /* RWISF */
#define NV_PBUS_DEBUG_CTRIM_2_M2O_1_SHAPE_0              0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_2_M2O_1_SHAPE_INIT           0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_2_M2O_2_SHAPE                     27:24 /* RWISF */
#define NV_PBUS_DEBUG_CTRIM_2_M2O_2_SHAPE_0              0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_2_M2O_2_SHAPE_INIT           0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_2_M2O_3_SHAPE                     31:28 /* RWISF */
#define NV_PBUS_DEBUG_CTRIM_2_M2O_3_SHAPE_0              0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_2_M2O_3_SHAPE_INIT           0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_3                            0x000010BC /* RW-4R */
#define NV_PBUS_DEBUG_CTRIM_3_C0_DELAY                          3:0 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_3_C0_DELAY_8                 0x00000003 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_3_C1_DELAY                          7:4 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_3_C1_DELAY_8                 0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_3_C2_DELAY                         11:8 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_3_C2_DELAY_8                 0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_3_C3_DELAY                        15:12 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_3_C3_DELAY_8                 0x00000003 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_3_C4_DELAY                        19:16 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_3_C4_DELAY_8                 0x00000002 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_3_C5_DELAY                        23:20 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_3_C5_DELAY_8                 0x00000002 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_3_C6_DELAY                        27:24 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_3_C6_DELAY_F                 0x0000000f /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_3_C7_DELAY                        31:28 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_3_C7_DELAY_F                 0x0000000f /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_3_CCIR_CLK_OUT_TRIM                 3:0 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_3_CCIR_CLK_OUT_TRIM_8        0x00000003 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_3_CCIR_CLK_OUT_TRIM_INIT     0x00000003 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_3_PCLK_TRIM                         7:4 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_3_PCLK_TRIM_8                0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_3_PCLK_TRIM_INIT             0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_3_PCLK1_TRIM                        7:4 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_3_PCLK1_TRIM_8               0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_3_PCLK1_TRIM_INIT            0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_3_VCLK_TRIM                        11:8 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_3_VCLK_TRIM_8                0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_3_VCLK_TRIM_INIT             0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_3_VCLK1_TRIM                       11:8 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_3_VCLK1_TRIM_8               0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_3_VCLK1_TRIM_INIT            0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_3_VSCLK_TRIM                      15:12 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_3_VSCLK_TRIM_8               0x00000003 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_3_VSCLK_TRIM_INIT            0x00000003 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_3_FPCLK_TRIM                      19:16 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_3_FPCLK_TRIM_8               0x00000002 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_3_FPCLK_TRIM_INIT            0x00000002 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_3_PCLK2_TRIM                      19:16 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_3_PCLK2_TRIM_8               0x00000002 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_3_PCLK2_TRIM_INIT            0x00000002 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_3_FPDPCLK_TRIM                    23:20 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_3_FPDPCLK_TRIM_8             0x00000002 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_3_FPDPCLK_TRIM_INIT          0x00000002 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_3_VCLK2_TRIM                      23:20 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_3_VCLK2_TRIM_8               0x00000002 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_3_VCLK2_TRIM_INIT            0x00000002 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_3_BYPASS_NVCLK                    24:24 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_3_BYPASS_NVCLK_ENABLE        0x00000001 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_3_BYPASS_NVCLK_EN_INIT       0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_3_BYPASS_MCLK                     25:25 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_3_BYPASS_MCLK_ENABLE         0x00000001 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_3_BYPASS_MCLK_EN_INIT        0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_3_BYPASS_CLK4X                    26:26 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_3_BYPASS_CLK4X_ENABLE        0x00000001 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_3_BYPASS_CLK4X_EN_INIT       0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_3_BYPASS_CCIR_O                   27:27 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_3_BYPASS_CCIR_O_ENABLE       0x00000001 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_3_BYPASS_CCIR_O_EN_INIT      0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_3_BYPASS_VIP_HCLK                 28:28 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_3_BYPASS_VIP_HCLK_ENABLE     0x00000001 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_3_BYPASS_VIP_HCLK_EN_INIT    0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_3_BYPASS_VCLK2                    29:29 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_3_BYPASS_VCLK2_ENABLE        0x00000001 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_3_BYPASS_VCLK2_EN_INIT       0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_3_BYPASS_PCLK                     30:30 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_3_BYPASS_PCLK_ENABLE         0x00000001 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_3_BYPASS_PCLK_EN_INIT        0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_3_BYPASS_CCIR2                    31:31 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_3_BYPASS_CCIR2_ENABLE        0x00000001 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_3_BYPASS_CCIR2_EN_INIT       0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_4                            0x000010C4 /* RW-4R */
#define NV_PBUS_DEBUG_CTRIM_4_C0_DELAY                          3:0 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_4_C0_DELAY_8                 0x00000002 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_4_C1_DELAY                          7:4 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_4_C1_DELAY_8                 0x00000002 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_4_C2_DELAY                         11:8 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_4_C2_DELAY_8                 0x00000003 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_4_C3_DELAY                        15:12 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_4_C3_DELAY_8                 0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_4_C4_DELAY                        19:16 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_4_C4_DELAY_8                 0x0000000C /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_4_C5_DELAY                        23:20 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_4_C5_DELAY_8                 0x0000000B /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_4_C6_DELAY                        27:24 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_4_C6_DELAY_8                 0x0000000D /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_4_C7_DELAY                        31:28 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_4_C7_DELAY_8                 0x0000000A /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_4_M2I_0_TRIM                        3:0 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_4_M2I_0_TRIM_8               0x00000002 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_4_M2I_0_TRIM_INIT            0x00000003 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_4_M2I_1_TRIM                        7:4 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_4_M2I_1_TRIM_8               0x00000002 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_4_M2I_1_TRIM_INIT            0x00000003 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_4_M2I_2_TRIM                       11:8 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_4_M2I_2_TRIM_8               0x00000003 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_4_M2I_2_TRIM_INIT            0x00000004 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_4_M2I_3_TRIM                      15:12 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_4_M2I_3_TRIM_8               0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_4_M2I_3_TRIM_INIT            0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_4_M2O_0_TRIM                      19:16 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_4_M2O_0_TRIM_8               0x0000000C /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_4_M2O_0_TRIM_INIT            0x0000000B /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_4_M2O_1_TRIM                      23:20 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_4_M2O_1_TRIM_8               0x0000000B /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_4_M2O_1_TRIM_INIT            0x0000000A /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_4_M2O_2_TRIM                      27:24 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_4_M2O_2_TRIM_8               0x0000000D /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_4_M2O_2_TRIM_INIT            0x0000000C /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_4_M2O_3_TRIM                      31:28 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_4_M2O_3_TRIM_8               0x0000000A /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_4_M2O_3_TRIM_INIT            0x00000009 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_5                            0x000010C8 /* RW-4R */
#define NV_PBUS_DEBUG_CTRIM_5_C0_DELAY                          3:0 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_5_C0_DELAY_8                 0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_5_C1_DELAY                          7:4 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_5_C1_DELAY_8                 0x00000008 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_5_C2_DELAY                         11:8 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_5_C2_DELAY_8                 0x00000008 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_5_C3_DELAY                        15:12 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_5_C3_DELAY_8                 0x00000008 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_5_C4_DELAY                        19:16 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_5_C4_DELAY_0                 0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_5_C5_DELAY                        23:20 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_5_C5_DELAY_0                 0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_5_C6_DELAY                        27:24 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_5_C6_DELAY_0                 0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_5_C7_DELAY                        31:28 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_5_C7_DELAY_0                 0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_5_FPIOCLK_TRIM                      3:0 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_5_FPIOCLK_TRIM_8             0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_5_FPIOCLK_TRIM_INIT          0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_5_SPARE0                            7:4 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_5_SPARE0_8                   0x00000008 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_5_SPARE0_INIT                0x00000008 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_5_FPIONCLK_TRIM                     7:4 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_5_FPIONCLK_TRIM_8            0x00000008 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_5_FPIONCLK_TRIM_INIT         0x00000008 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_5_SPARE1                           11:8 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_5_SPARE1_8                   0x00000008 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_5_SPARE1_INIT                0x00000008 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_5_FPDPCLK_TRIM                     11:8 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_5_FPDPCLK_TRIM_8             0x00000008 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_5_FPDPCLK_TRIM_INIT          0x00000008 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_5_SPARE2                          15:12 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_5_SPARE2_8                   0x00000008 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_5_SPARE2_INIT                0x00000008 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_5_FPCLK1_TRIM                     15:12 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_5_FPCLK1_TRIM_8              0x00000008 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_5_FPCLK1_TRIM_INIT           0x00000008 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_5_SPARE3                          19:16 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_5_SPARE3_0                   0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_5_SPARE3_INIT                0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_5_FPCLK2_TRIM                     19:16 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_5_FPCLK2_TRIM_0              0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_5_FPCLK2_TRIM_INIT           0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_5_SPARE4                          23:20 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_5_SPARE4_0                   0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_5_SPARE4_INIT                0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_5_IFPCLK1_TRIM                    23:20 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_5_IFPCLK1_TRIM_0             0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_5_IFPCLK1_TRIM_INIT          0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_5_SPARE5                          27:24 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_5_SPARE5_0                   0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_5_SPARE5_INIT                0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_5_IFPCLK2_TRIM                    27:24 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_5_IFPCLK2_TRIM_0             0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_5_IFPCLK2_TRIM_INIT          0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_5_M_DELAY                         31:28 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_5_M_DELAY_0                  0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_5_M_DELAY_INIT               0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_6                            0x000010CC /* RW-4R */
#define NV_PBUS_DEBUG_CTRIM_6_C0_DELAY                          3:0 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_6_C0_DELAY_0                 0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_6_C1_DELAY                          7:4 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_6_C1_DELAY_0                 0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_6_C2_DELAY                         11:8 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_6_C2_DELAY_0                 0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_6_C3_DELAY                        15:12 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_6_C3_DELAY_0                 0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_6_C4_DELAY                        19:16 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_6_C4_DELAY_0                 0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_6_C5_DELAY                        23:20 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_6_C5_DELAY_0                 0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_6_C6_DELAY                        27:24 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_6_C6_DELAY_0                 0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_6_C7_DELAY                        31:28 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_6_C7_DELAY_0                 0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_6_FBIO_M2I_0_DELAY                  3:0 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_6_FBIO_M2I_0_DELAY_0         0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_6_FBIO_M2I_0_DELAY_INIT      0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_6_FBIO_M2I_1_DELAY                  7:4 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_6_FBIO_M2I_1_DELAY_0         0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_6_FBIO_M2I_1_DELAY_INIT      0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_6_FBIO_M2I_2_DELAY                 11:8 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_6_FBIO_M2I_2_DELAY_0         0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_6_FBIO_M2I_2_DELAY_INIT      0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_6_FBIO_M2I_3_DELAY                15:12 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_6_FBIO_M2I_3_DELAY_0         0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_6_FBIO_M2I_3_DELAY_INIT      0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_6_FBIO_M2O_0_DELAY                19:16 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_6_FBIO_M2O_0_DELAY_0         0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_6_FBIO_M2O_0_DELAY_INIT      0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_6_FBIO_M2O_1_DELAY                23:20 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_6_FBIO_M2O_1_DELAY_0         0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_6_FBIO_M2O_1_DELAY_INIT      0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_6_FBIO_M2O_2_DELAY                27:24 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_6_FBIO_M2O_2_DELAY_0         0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_6_FBIO_M2O_2_DELAY_INIT      0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_6_FBIO_M2O_3_DELAY                31:28 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_6_FBIO_M2O_3_DELAY_0         0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_6_FBIO_M2O_3_DELAY_INIT      0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_AGPPLL                             0x000010C0 /* RW-4R */
#define NV_PBUS_DEBUG_AGPPLL_COEFF_MDIV                         7:0 /* RWIUF */
#define NV_PBUS_DEBUG_AGPPLL_COEFF_MDIV_1                0x00000001 /* RWI-V */
#define NV_PBUS_DEBUG_AGPPLL_COEFF_NDIV                        15:8 /* RWIUF */
#define NV_PBUS_DEBUG_AGPPLL_COEFF_NDIV_4                0x00000004 /* RWI-V */
#define NV_PBUS_DEBUG_AGPPLL_SETUP                            24:16 /* RWIUF */
#define NV_PBUS_DEBUG_AGPPLL_SETUP_DEFAULT               0x0000011C /* RWI-V */
#define NV_PBUS_DEBUG_AGPPLL_PWRDWN                           28:28 /* RWIVF */
#define NV_PBUS_DEBUG_AGPPLL_PWRDWN_ON                   0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_AGPPLL_PWRDWN_OFF                  0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_AGPPLL_STATUS                           31:31 /* R--VF */
#define NV_PBUS_DEBUG_AGPPLL_STATUS_NOTLOCKED            0x00000000 /* R---V */
#define NV_PBUS_DEBUG_AGPPLL_STATUS_LOCKED               0x00000001 /* R---V */
#define NV_PBUS_DEBUG_PORT                               0x000010D0 /* RW-4R */
#define NV_PBUS_DEBUG_PORT_MODE                                 0:0 /* RWIVF */
#define NV_PBUS_DEBUG_PORT_MODE_NORMAL                   0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_PORT_MODE_AGP4X                    0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_7                            0x000010D4 /* RW-4R */
#define NV_PBUS_DEBUG_CTRIM_7_CCDP_TRIM                         3:0 /* RWISF */
#define NV_PBUS_DEBUG_CTRIM_7_CCDP_TRIM_0                0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_7_CCDP_TRIM_INIT             0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_7_CCDP_SHAPE                        7:4 /* RWISF */
#define NV_PBUS_DEBUG_CTRIM_7_CCDP_SHAPE_0               0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_7_CCDP_SHAPE_INIT            0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_7_CCIO_SHAPE                       11:8 /* RWISF */
#define NV_PBUS_DEBUG_CTRIM_7_CCIO_SHAPE_0               0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_7_CCIO_SHAPE_INIT            0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_7_FP2_SHAPE                       15:12 /* RWISF */
#define NV_PBUS_DEBUG_CTRIM_7_FP2_SHAPE_0                0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_7_FP2_SHAPE_INIT             0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_7_IFP1_SHAPE                      19:16 /* RWISF */
#define NV_PBUS_DEBUG_CTRIM_7_IFP1_SHAPE_0               0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_7_IFP1_SHAPE_INIT            0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_7_IFP2_SHAPE                      23:20 /* RWISF */
#define NV_PBUS_DEBUG_CTRIM_7_IFP2_SHAPE_0               0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_7_IFP2_SHAPE_INIT            0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_7_SPARE0                          27:24 /* RWISF */
#define NV_PBUS_DEBUG_CTRIM_7_SPARE0_0                   0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_7_SPARE0_INIT                0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_7_FBIO_MCLK_DIV2SDR               26:26 /* RWISF */
#define NV_PBUS_DEBUG_CTRIM_7_FBIO_MCLK_DIV2SDR_DISABLED 0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_7_FBIO_MCLK_DIV2SDR_ENABLED  0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_7_FBIO_MCLK_DIV2SDR_INIT     0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_7_SPARE1                          31:28 /* RWISF */
#define NV_PBUS_DEBUG_CTRIM_7_SPARE1_0                   0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_7_SPARE1_INIT                0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_8                            0x000010D8 /* RW-4R */
#define NV_PBUS_DEBUG_CTRIM_8_DQSOB_0_TRIM                      3:0 /* RWISF */
#define NV_PBUS_DEBUG_CTRIM_8_DQSOB_0_0                  0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_8_DQSOB_0_INIT               0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_8_DQSOB_1                           7:4 /* RWISF */
#define NV_PBUS_DEBUG_CTRIM_8_DQSOB_1_0                  0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_8_DQSOB_1_INIT               0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_8_DQSOB_2                          11:8 /* RWISF */
#define NV_PBUS_DEBUG_CTRIM_8_DQSOB_2_0                  0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_8_DQSOB_2_INIT               0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_8_DQSOB_3                         15:12 /* RWISF */
#define NV_PBUS_DEBUG_CTRIM_8_DQSOB_3_0                  0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_8_DQSOB_3_INIT               0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_8_DQSOB_4                         19:16 /* RWISF */
#define NV_PBUS_DEBUG_CTRIM_8_DQSOB_4_0                  0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_8_DQSOB_4_INIT               0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_8_DQSOB_5                         23:20 /* RWISF */
#define NV_PBUS_DEBUG_CTRIM_8_DQSOB_5_0                  0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_8_DQSOB_5_INIT               0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_8_DQSOB_6                         27:24 /* RWISF */
#define NV_PBUS_DEBUG_CTRIM_8_DQSOB_6_0                  0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_8_DQSOB_6_INIT               0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_8_DQSOB_7                         31:28 /* RWISF */
#define NV_PBUS_DEBUG_CTRIM_8_DQSOB_7_0                  0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_8_DQSOB_7_INIT               0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_9                            0x000010DC /* RW-4R */
#define NV_PBUS_DEBUG_CTRIM_9_NV_P8_TRIM                        3:0 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_9_NV_P8_TRIM_8               0x00000008 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_9_NV_P9_TRIM                        7:4 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_9_NV_P9_TRIM_8               0x00000008 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_9_M_P0_TRIM                        11:8 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_9_M_P0_TRIM_8                0x00000008 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_9_M_P1_TRIM                       15:12 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_9_M_P1_TRIM_8                0x00000008 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_9_M_P2_TRIM                       19:16 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_9_M_P2_TRIM_8                0x00000008 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_9_M_P3_TRIM                       23:20 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_9_M_P3_TRIM_8                0x00000008 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_9_M_P4_TRIM                       27:24 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_9_M_P4_TRIM_8                0x00000008 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_9_M_P5_TRIM                       31:28 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_9_M_P5_TRIM_8                0x00000008 /* RWI-V */
#define NV_PBUS_DEBUG_PRIV_ASRC                          0x000010E0 /* RW-4R */
#define NV_PBUS_DEBUG_PRIV_ASRC_0__ALIAS_1  NV_PBUS_DEBUG_PRIV_ASRC /*       */
#define NV_PBUS_DEBUG_PRIV_ASRC_EAST_SEL                      31:31 /* RWIVF */
#define NV_PBUS_DEBUG_PRIV_ASRC_EAST_NORMAL              0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_PRIV_ASRC_EAST_OVERIDE             0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_PRIV_ASRC_EAST_VALUE                    30:24 /* RWIVF */
#define NV_PBUS_DEBUG_PRIV_ASRC_EAST_VALUE_0             0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_PRIV_ASRC_SOUTH_SEL                     23:23 /* RWIVF */
#define NV_PBUS_DEBUG_PRIV_ASRC_SOUTH_NORMAL             0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_PRIV_ASRC_SOUTH_OVERIDE            0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_PRIV_ASRC_SOUTH_VALUE                   22:16 /* RWIVF */
#define NV_PBUS_DEBUG_PRIV_ASRC_SOUTH_VALUE_0            0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_PRIV_ASRC_WEST_SEL                      15:15 /* RWIVF */
#define NV_PBUS_DEBUG_PRIV_ASRC_WEST_NORMAL              0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_PRIV_ASRC_WEST_OVERIDE             0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_PRIV_ASRC_WEST_VALUE                     14:8 /* RWIVF */
#define NV_PBUS_DEBUG_PRIV_ASRC_WEST_VALUE_0             0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_PRIV_ASRC_NORTH_SEL                       7:7 /* RWIVF */
#define NV_PBUS_DEBUG_PRIV_ASRC_NORTH_NORMAL             0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_PRIV_ASRC_NORTH_OVERIDE            0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_PRIV_ASRC_NORTH_VALUE                     6:0 /* RWIVF */
#define NV_PBUS_DEBUG_PRIV_ASRC_NORTH_VALUE_0            0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_PRIV_ASRC_1                        0x000010E4 /* RW-4R */
#define NV_PBUS_DEBUG_PRIV_ASRC_1_BK_0_SEL                    31:31 /* RWIVF */
#define NV_PBUS_DEBUG_PRIV_ASRC_1_BK_0_NORMAL            0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_PRIV_ASRC_1_BK_0_OVERIDE           0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_PRIV_ASRC_1_BK_0_VALUE                  30:24 /* RWIVF */
#define NV_PBUS_DEBUG_PRIV_ASRC_1_BK_0_VALUE_0           0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_PRIV_ASRC_1_BK_1_SEL                    23:23 /* RWIVF */
#define NV_PBUS_DEBUG_PRIV_ASRC_1_BK_1_NORMAL            0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_PRIV_ASRC_1_BK_1_OVERIDE           0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_PRIV_ASRC_1_BK_1_VALUE                  22:16 /* RWIVF */
#define NV_PBUS_DEBUG_PRIV_ASRC_1_BK_1_VALUE_0           0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_PRIV_ASRC_1_BK_2_SEL                    15:15 /* RWIVF */
#define NV_PBUS_DEBUG_PRIV_ASRC_1_BK_2_NORMAL            0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_PRIV_ASRC_1_BK_2_OVERIDE           0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_PRIV_ASRC_1_BK_2_VALUE                   14:8 /* RWIVF */
#define NV_PBUS_DEBUG_PRIV_ASRC_1_BK_2_VALUE_0           0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_PRIV_ASRC_1_BK_3_SEL                      7:7 /* RWIVF */
#define NV_PBUS_DEBUG_PRIV_ASRC_1_BK_3_NORMAL            0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_PRIV_ASRC_1_BK_3_OVERIDE           0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_PRIV_ASRC_1_BK_3_VALUE                    6:0 /* RWIVF */
#define NV_PBUS_DEBUG_PRIV_ASRC_1_BK_3_VALUE_0           0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_DUALHEAD_CTL                       0x000010F0 /* RW-4R */
#define NV_PBUS_DEBUG_DUALHEAD_CTL_BLAH                        31:0 /* RWIUF */
#define NV_PBUS_DEBUG_DUALHEAD_CTL_BLAH_0                0x00000000 /* RWI-V */
#define NV_PBUS_INTR_0                                   0x00001100 /* RW-4R */
#define NV_PBUS_INTR_0_PCI_BUS_ERROR                            0:0 /* RWXVF */
#define NV_PBUS_INTR_0_PCI_BUS_ERROR_NOT_PENDING         0x00000000 /* R---V */
#define NV_PBUS_INTR_0_PCI_BUS_ERROR_PENDING             0x00000001 /* R---V */
#define NV_PBUS_INTR_0_PCI_BUS_ERROR_RESET               0x00000001 /* -W--V */
#define NV_PBUS_INTR_0_HOTPLUG                                  4:4 /* RWXVF */
#define NV_PBUS_INTR_0_HOTPLUG_NOT_PENDING               0x00000000 /* R---V */
#define NV_PBUS_INTR_0_HOTPLUG_PENDING                   0x00000001 /* R---V */
#define NV_PBUS_INTR_0_HOTPLUG_RESET                     0x00000001 /* -W--V */
#define NV_PBUS_INTR_EN_0                                0x00001140 /* RWI4R */
#define NV_PBUS_INTR_EN_0_PCI_BUS_ERROR                         0:0 /* RWIVF */
#define NV_PBUS_INTR_EN_0_PCI_BUS_ERROR_DISABLED         0x00000000 /* RWI-V */
#define NV_PBUS_INTR_EN_0_PCI_BUS_ERROR_ENABLED          0x00000001 /* RW--V */
#define NV_PBUS_INTR_EN_0_HOTPLUG                               4:4 /* RWIVF */
#define NV_PBUS_INTR_EN_0_HOTPLUG_DISABLED               0x00000000 /* RWI-V */
#define NV_PBUS_INTR_EN_0_HOTPLUG_ENABLED                0x00000001 /* RW--V */
#define NV_PBUS_ROM_CONFIG                               0x00001200 /* RWI4R */
#define NV_PBUS_ROM_CONFIG_TW1                                  5:0 /* RWIVF */
#define NV_PBUS_ROM_CONFIG_TW1_DEFAULT                   0x0000000F /* RWI-V */
#define NV_PBUS_ROM_CONFIG_TW0                                  7:6 /* RWIVF */
#define NV_PBUS_ROM_CONFIG_TW0_DEFAULT                   0x00000003 /* RWI-V */


#define NV_PBUS_PCI_NV_2_REVISION_ID_A01                 0x00000000 /* C---V */
#define NV_PBUS_PCI_NV_2_REVISION_ID_B01                 0x00000010 /* ----V */
#define NV_PBUS_PCI_NV_5_BASE_ADDRESS                         31:27 /* RWXUF */
#define NV_PBUS_PCI_NV_17_AGP_REV_MAJOR_1                0x00000001 /* C---V */
/* dev_bus.ref */
/* dev_bus.ref */
/* dev_bus.ref */
#define NV_PRMIO_RMA_ID                                  0x00007100 /* R--4R */
#define NV_PRMIO_RMA_ID_CODE                                   31:0 /* C--UF */
#define NV_PRMIO_RMA_ID_CODE_VALID                       0x2B16D065 /* C---V */
#define NV_PRMIO_RMA_PTR                                 0x00007104 /* RW-4R */
#define NV_PRMIO_RMA_PTR_SPACE                                31:31 /* RWIVF */
#define NV_PRMIO_RMA_PTR_SPACE_REGISTER                  0x00000000 /* RWI-V */
#define NV_PRMIO_RMA_PTR_SPACE_MEMORY                    0x00000001 /* RW--V */
#define NV_PRMIO_RMA_PTR_ADDRESS                               26:2 /* RWIUF */
#define NV_PRMIO_RMA_PTR_ADDRESS_0                       0x00000000 /* RWI-V */
#define NV_PRMIO_RMA_DATA                                0x00007108 /* RW-4R */
#define NV_PRMIO_RMA_DATA_PORT                                 31:0 /* RWXUF */
#define NV_PRMIO_RMA_DATA32                              0x0000710C /* RW-4R */
#define NV_PRMIO_RMA_DATA32_BYTE2                             23:16 /* RWXUF */
#define NV_PRMIO_RMA_DATA32_BYTE1                              15:8 /* RWXUF */
#define NV_PRMIO_RMA_DATA32_BYTE0                               7:0 /* RWXUF */
/* dev_bus.ref */
#define NV_EXPROM                             0x0000FFFF:0x00000000 /* R---D */
#define NV_EXPROM_BIOS_ROM008(i)                   (0x00000000+(i)) /* RW-1A */
#define NV_EXPROM_BIOS_ROM008__SIZE_1                         65536 /*       */
#define NV_EXPROM_BIOS_ROM008_VALUE                             7:0 /* RW-VF */
#define NV_EXPROM_BIOS_ROM016(i)                 (0x00000000+(i)*2) /* RW-2A */
#define NV_EXPROM_BIOS_ROM016__SIZE_1                         32768 /*       */
#define NV_EXPROM_BIOS_ROM016_VALUE                            15:0 /* RW-VF */
#define NV_EXPROM_BIOS_ROM032(i)                 (0x00000000+(i)*4) /* RW-4A */
#define NV_EXPROM_BIOS_ROM032__SIZE_1                         16384 /*       */
#define NV_EXPROM_BIOS_ROM032_VALUE                            31:0 /* RW-VF */
/* dev_bus.ref */
#define NV_MEMORY                             0xFFFFFFFF:0x00000000 /* RW--D */
/* dev_bus.ref */
#define NV_IO                                 0xFFFFFFFF:0x00000000 /* RW--D */
/* dev_dac.ref */
#define NV_PRAMDAC_PLL_SETUP_CONTROL_PWRDWN                   14:12 /* RWIVF */
#define NV_PRAMDAC_PLL_SETUP_CONTROL_PWRDWN_ON           0x00000000 /* RWI-V */
#define NV_PRAMDAC_PLL_SETUP_CONTROL_PWRDWN_MPLL         0x00000001 /* RWI-V */
#define NV_PRAMDAC_PLL_SETUP_CONTROL_PWRDWN_VPLL         0x00000002 /* RWI-V */
#define NV_PRAMDAC_PLL_SETUP_CONTROL_PWRDWN_NVPLL        0x00000004 /* RWI-V */
#define NV_PRAMDAC_PLL_SETUP_CONTROL_PWRDWN_OFF          0x00000007 /* RW--V */
#define NV_PRAMDAC_PLL_TEST_COUNTER_SOURCE                    25:24 /* RWIVF */
/* dev_fifo.ref */
#define NV_PFIFO_DELAY_0                                 0x00002040 /* RW-4R */
#define NV_PFIFO_DELAY_0_WAIT_RETRY                             9:0 /* RWIUF */
#define NV_PFIFO_DELAY_0_WAIT_RETRY_0                    0x00000000 /* RWI-V */
#define NV_PFIFO_DMA_TIMESLICE                           0x00002044 /* RW-4R */
#define NV_PFIFO_DMA_TIMESLICE_SELECT                          16:0 /* RWIUF */
#define NV_PFIFO_DMA_TIMESLICE_SELECT_1                  0x00000000 /* RWI-V */
#define NV_PFIFO_DMA_TIMESLICE_SELECT_16K                0x00003fff /* RW--V */
#define NV_PFIFO_DMA_TIMESLICE_SELECT_32K                0x00007fff /* RW--V */
#define NV_PFIFO_DMA_TIMESLICE_SELECT_64K                0x0000ffff /* RW--V */
#define NV_PFIFO_DMA_TIMESLICE_SELECT_128K               0x0001ffff /* RW--V */
#define NV_PFIFO_DMA_TIMESLICE_TIMEOUT                        24:24 /* RWIUF */
#define NV_PFIFO_DMA_TIMESLICE_TIMEOUT_DISABLED          0x00000000 /* RW--V */
#define NV_PFIFO_DMA_TIMESLICE_TIMEOUT_ENABLED           0x00000001 /* RWI-V */
#define NV_PFIFO_PIO_TIMESLICE                           0x00002048 /* RW-4R */
#define NV_PFIFO_PIO_TIMESLICE_SELECT                          16:0 /* RWIUF */
#define NV_PFIFO_PIO_TIMESLICE_SELECT_1                  0x00000000 /* RWI-V */
#define NV_PFIFO_PIO_TIMESLICE_SELECT_16K                0x00003fff /* RW--V */
#define NV_PFIFO_PIO_TIMESLICE_SELECT_32K                0x00007fff /* RW--V */
#define NV_PFIFO_PIO_TIMESLICE_SELECT_64K                0x0000ffff /* RW--V */
#define NV_PFIFO_PIO_TIMESLICE_SELECT_128K               0x0001ffff /* RW--V */
#define NV_PFIFO_PIO_TIMESLICE_TIMEOUT                        24:24 /* RWIUF */
#define NV_PFIFO_PIO_TIMESLICE_TIMEOUT_DISABLED          0x00000000 /* RW--V */
#define NV_PFIFO_PIO_TIMESLICE_TIMEOUT_ENABLED           0x00000001 /* RWI-V */
#define NV_PFIFO_TIMESLICE                               0x0000204C /* RW-4R */
#define NV_PFIFO_TIMESLICE_TIMER                               17:0 /* RWIUF */
#define NV_PFIFO_TIMESLICE_TIMER_EXPIRED                 0x0003FFFF /* RWI-V */
#define NV_PFIFO_NEXT_CHANNEL                            0x00002050 /* RW-4R */
#define NV_PFIFO_NEXT_CHANNEL_CHID                              4:0 /* RWXUF */
#define NV_PFIFO_NEXT_CHANNEL_MODE                              8:8 /* RWXVF */
#define NV_PFIFO_NEXT_CHANNEL_MODE_PIO                   0x00000000 /* RW--V */
#define NV_PFIFO_NEXT_CHANNEL_MODE_DMA                   0x00000001 /* RW--V */
#define NV_PFIFO_NEXT_CHANNEL_SWITCH                          12:12 /* RWIVF */
#define NV_PFIFO_NEXT_CHANNEL_SWITCH_NOT_PENDING         0x00000000 /* RWI-V */
#define NV_PFIFO_NEXT_CHANNEL_SWITCH_PENDING             0x00000001 /* RW--V */
#define NV_PFIFO_DELAY_1                                 0x00002054 /* RW-4R */
#define NV_PFIFO_DELAY_1_ACQUIRE_WAIT                           9:0 /* RWIUF */
#define NV_PFIFO_DELAY_1_ACQUIRE_WAIT_2                  0x00000002 /* RWI-V */
#define NV_PFIFO_RAMHT                                   0x00002210 /* RW-4R */
#define NV_PFIFO_RAMHT_BASE_ADDRESS                             8:4 /* RWIUF */
#define NV_PFIFO_RAMHT_BASE_ADDRESS_10000                0x00000010 /* RWI-V */
#define NV_PFIFO_RAMHT_SIZE                                   17:16 /* RWIUF */
#define NV_PFIFO_RAMHT_SIZE_4K                           0x00000000 /* RWI-V */
#define NV_PFIFO_RAMHT_SIZE_8K                           0x00000001 /* RW--V */
#define NV_PFIFO_RAMHT_SIZE_16K                          0x00000002 /* RW--V */
#define NV_PFIFO_RAMHT_SIZE_32K                          0x00000003 /* RW--V */
#define NV_PFIFO_RAMHT_SEARCH                                 25:24 /* RWIUF */
#define NV_PFIFO_RAMHT_SEARCH_16                         0x00000000 /* RWI-V */
#define NV_PFIFO_RAMHT_SEARCH_32                         0x00000001 /* RW--V */
#define NV_PFIFO_RAMHT_SEARCH_64                         0x00000002 /* RW--V */
#define NV_PFIFO_RAMHT_SEARCH_128                        0x00000003 /* RW--V */
#define NV_PFIFO_RAMFC                                   0x00002214 /* RW-4R */
#define NV_PFIFO_RAMFC_BASE_ADDRESS                             8:2 /* RWIUF */
#define NV_PFIFO_RAMFC_BASE_ADDRESS_11000                0x00000044 /* RWI-V */
#define NV_PFIFO_RAMFC_SIZE                                   16:16 /* RWIVF */
#define NV_PFIFO_RAMFC_SIZE_1K                           0x00000000 /* RWI-V */
#define NV_PFIFO_RAMFC_SIZE_2K                           0x00000001 /* RW--V */
#define NV_PFIFO_RAMFC_BASE_ADDRESS2                          23:17 /* RWIUF */
#define NV_PFIFO_RAMFC_BASE_ADDRESS_11400                0x00000045 /* RWI-V */
#define NV_PFIFO_RAMRO                                   0x00002218 /* RW-4R */
#define NV_PFIFO_RAMRO_BASE_ADDRESS                             8:1 /* RWIUF */
#define NV_PFIFO_RAMRO_BASE_ADDRESS_11200                0x00000089 /* RWI-V */
#define NV_PFIFO_RAMRO_BASE_ADDRESS_11400                0x0000008A /* RWI-V */
#define NV_PFIFO_RAMRO_BASE_ADDRESS_11500                0x0000008B /* RWI-V */
#define NV_PFIFO_RAMRO_BASE_ADDRESS_11800                0x0000008C /* RW--V */
#define NV_PFIFO_RAMRO_BASE_ADDRESS_12000                0x00000090 /* RW--V */
#define NV_PFIFO_RAMRO_SIZE                                   16:16 /* RWIVF */
#define NV_PFIFO_RAMRO_SIZE_512                          0x00000000 /* RWI-V */
#define NV_PFIFO_RAMRO_SIZE_8K                           0x00000001 /* RW--V */
#define NV_PFIFO_MODE                                    0x00002504 /* RW-4R */
#define NV_PFIFO_MODE_CHANNEL_0                                 0:0 /* RWIVF */
#define NV_PFIFO_MODE_CHANNEL_0_PIO                      0x00000000 /* RWI-V */
#define NV_PFIFO_MODE_CHANNEL_0_DMA                      0x00000001 /* RW--V */
#define NV_PFIFO_MODE_CHANNEL_1                                 1:1 /* RWIVF */
#define NV_PFIFO_MODE_CHANNEL_1_PIO                      0x00000000 /* RWI-V */
#define NV_PFIFO_MODE_CHANNEL_1_DMA                      0x00000001 /* RW--V */
#define NV_PFIFO_MODE_CHANNEL_2                                 2:2 /* RWIVF */
#define NV_PFIFO_MODE_CHANNEL_2_PIO                      0x00000000 /* RWI-V */
#define NV_PFIFO_MODE_CHANNEL_2_DMA                      0x00000001 /* RW--V */
#define NV_PFIFO_MODE_CHANNEL_3                                 3:3 /* RWIVF */
#define NV_PFIFO_MODE_CHANNEL_3_PIO                      0x00000000 /* RWI-V */
#define NV_PFIFO_MODE_CHANNEL_3_DMA                      0x00000001 /* RW--V */
#define NV_PFIFO_MODE_CHANNEL_4                                 4:4 /* RWIVF */
#define NV_PFIFO_MODE_CHANNEL_4_PIO                      0x00000000 /* RWI-V */
#define NV_PFIFO_MODE_CHANNEL_4_DMA                      0x00000001 /* RW--V */
#define NV_PFIFO_MODE_CHANNEL_5                                 5:5 /* RWIVF */
#define NV_PFIFO_MODE_CHANNEL_5_PIO                      0x00000000 /* RWI-V */
#define NV_PFIFO_MODE_CHANNEL_5_DMA                      0x00000001 /* RW--V */
#define NV_PFIFO_MODE_CHANNEL_6                                 6:6 /* RWIVF */
#define NV_PFIFO_MODE_CHANNEL_6_PIO                      0x00000000 /* RWI-V */
#define NV_PFIFO_MODE_CHANNEL_6_DMA                      0x00000001 /* RW--V */
#define NV_PFIFO_MODE_CHANNEL_7                                 7:7 /* RWIVF */
#define NV_PFIFO_MODE_CHANNEL_7_PIO                      0x00000000 /* RWI-V */
#define NV_PFIFO_MODE_CHANNEL_7_DMA                      0x00000001 /* RW--V */
#define NV_PFIFO_MODE_CHANNEL_8                                 8:8 /* RWIVF */
#define NV_PFIFO_MODE_CHANNEL_8_PIO                      0x00000000 /* RWI-V */
#define NV_PFIFO_MODE_CHANNEL_8_DMA                      0x00000001 /* RW--V */
#define NV_PFIFO_MODE_CHANNEL_9                                 9:9 /* RWIVF */
#define NV_PFIFO_MODE_CHANNEL_9_PIO                      0x00000000 /* RWI-V */
#define NV_PFIFO_MODE_CHANNEL_9_DMA                      0x00000001 /* RW--V */
#define NV_PFIFO_MODE_CHANNEL_10                              10:10 /* RWIVF */
#define NV_PFIFO_MODE_CHANNEL_10_PIO                     0x00000000 /* RWI-V */
#define NV_PFIFO_MODE_CHANNEL_10_DMA                     0x00000001 /* RW--V */
#define NV_PFIFO_MODE_CHANNEL_11                              11:11 /* RWIVF */
#define NV_PFIFO_MODE_CHANNEL_11_PIO                     0x00000000 /* RWI-V */
#define NV_PFIFO_MODE_CHANNEL_11_DMA                     0x00000001 /* RW--V */
#define NV_PFIFO_MODE_CHANNEL_12                              12:12 /* RWIVF */
#define NV_PFIFO_MODE_CHANNEL_12_PIO                     0x00000000 /* RWI-V */
#define NV_PFIFO_MODE_CHANNEL_12_DMA                     0x00000001 /* RW--V */
#define NV_PFIFO_MODE_CHANNEL_13                              13:13 /* RWIVF */
#define NV_PFIFO_MODE_CHANNEL_13_PIO                     0x00000000 /* RWI-V */
#define NV_PFIFO_MODE_CHANNEL_13_DMA                     0x00000001 /* RW--V */
#define NV_PFIFO_MODE_CHANNEL_14                              14:14 /* RWIVF */
#define NV_PFIFO_MODE_CHANNEL_14_PIO                     0x00000000 /* RWI-V */
#define NV_PFIFO_MODE_CHANNEL_14_DMA                     0x00000001 /* RW--V */
#define NV_PFIFO_MODE_CHANNEL_15                              15:15 /* RWIVF */
#define NV_PFIFO_MODE_CHANNEL_15_PIO                     0x00000000 /* RWI-V */
#define NV_PFIFO_MODE_CHANNEL_15_DMA                     0x00000001 /* RW--V */
#define NV_PFIFO_MODE_CHANNEL_16                              16:16 /* RWIVF */
#define NV_PFIFO_MODE_CHANNEL_16_PIO                     0x00000000 /* RWI-V */
#define NV_PFIFO_MODE_CHANNEL_16_DMA                     0x00000001 /* RW--V */
#define NV_PFIFO_MODE_CHANNEL_17                              17:17 /* RWIVF */
#define NV_PFIFO_MODE_CHANNEL_17_PIO                     0x00000000 /* RWI-V */
#define NV_PFIFO_MODE_CHANNEL_17_DMA                     0x00000001 /* RW--V */
#define NV_PFIFO_MODE_CHANNEL_18                              18:18 /* RWIVF */
#define NV_PFIFO_MODE_CHANNEL_18_PIO                     0x00000000 /* RWI-V */
#define NV_PFIFO_MODE_CHANNEL_18_DMA                     0x00000001 /* RW--V */
#define NV_PFIFO_MODE_CHANNEL_19                              19:19 /* RWIVF */
#define NV_PFIFO_MODE_CHANNEL_19_PIO                     0x00000000 /* RWI-V */
#define NV_PFIFO_MODE_CHANNEL_19_DMA                     0x00000001 /* RW--V */
#define NV_PFIFO_MODE_CHANNEL_20                              20:20 /* RWIVF */
#define NV_PFIFO_MODE_CHANNEL_20_PIO                     0x00000000 /* RWI-V */
#define NV_PFIFO_MODE_CHANNEL_20_DMA                     0x00000001 /* RW--V */
#define NV_PFIFO_MODE_CHANNEL_21                              21:21 /* RWIVF */
#define NV_PFIFO_MODE_CHANNEL_21_PIO                     0x00000000 /* RWI-V */
#define NV_PFIFO_MODE_CHANNEL_21_DMA                     0x00000001 /* RW--V */
#define NV_PFIFO_MODE_CHANNEL_22                              22:22 /* RWIVF */
#define NV_PFIFO_MODE_CHANNEL_22_PIO                     0x00000000 /* RWI-V */
#define NV_PFIFO_MODE_CHANNEL_22_DMA                     0x00000001 /* RW--V */
#define NV_PFIFO_MODE_CHANNEL_23                              23:23 /* RWIVF */
#define NV_PFIFO_MODE_CHANNEL_23_PIO                     0x00000000 /* RWI-V */
#define NV_PFIFO_MODE_CHANNEL_23_DMA                     0x00000001 /* RW--V */
#define NV_PFIFO_MODE_CHANNEL_24                              24:24 /* RWIVF */
#define NV_PFIFO_MODE_CHANNEL_24_PIO                     0x00000000 /* RWI-V */
#define NV_PFIFO_MODE_CHANNEL_24_DMA                     0x00000001 /* RW--V */
#define NV_PFIFO_MODE_CHANNEL_25                              25:25 /* RWIVF */
#define NV_PFIFO_MODE_CHANNEL_25_PIO                     0x00000000 /* RWI-V */
#define NV_PFIFO_MODE_CHANNEL_25_DMA                     0x00000001 /* RW--V */
#define NV_PFIFO_MODE_CHANNEL_26                              26:26 /* RWIVF */
#define NV_PFIFO_MODE_CHANNEL_26_PIO                     0x00000000 /* RWI-V */
#define NV_PFIFO_MODE_CHANNEL_26_DMA                     0x00000001 /* RW--V */
#define NV_PFIFO_MODE_CHANNEL_27                              27:27 /* RWIVF */
#define NV_PFIFO_MODE_CHANNEL_27_PIO                     0x00000000 /* RWI-V */
#define NV_PFIFO_MODE_CHANNEL_27_DMA                     0x00000001 /* RW--V */
#define NV_PFIFO_MODE_CHANNEL_28                              28:28 /* RWIVF */
#define NV_PFIFO_MODE_CHANNEL_28_PIO                     0x00000000 /* RWI-V */
#define NV_PFIFO_MODE_CHANNEL_28_DMA                     0x00000001 /* RW--V */
#define NV_PFIFO_MODE_CHANNEL_29                              29:29 /* RWIVF */
#define NV_PFIFO_MODE_CHANNEL_29_PIO                     0x00000000 /* RWI-V */
#define NV_PFIFO_MODE_CHANNEL_29_DMA                     0x00000001 /* RW--V */
#define NV_PFIFO_MODE_CHANNEL_30                              30:30 /* RWIVF */
#define NV_PFIFO_MODE_CHANNEL_30_PIO                     0x00000000 /* RWI-V */
#define NV_PFIFO_MODE_CHANNEL_30_DMA                     0x00000001 /* RW--V */
#define NV_PFIFO_MODE_CHANNEL_31                              31:31 /* RWIVF */
#define NV_PFIFO_MODE_CHANNEL_31_PIO                     0x00000000 /* RWI-V */
#define NV_PFIFO_MODE_CHANNEL_31_DMA                     0x00000001 /* RW--V */
#define NV_PFIFO_DMA                                     0x00002508 /* RW-4R */
#define NV_PFIFO_DMA_CHANNEL_0                                  0:0 /* RWIVF */
#define NV_PFIFO_DMA_CHANNEL_0_NOT_PENDING               0x00000000 /* RWI-V */
#define NV_PFIFO_DMA_CHANNEL_0_PENDING                   0x00000001 /* RW--V */
#define NV_PFIFO_DMA_CHANNEL_1                                  1:1 /* RWIVF */
#define NV_PFIFO_DMA_CHANNEL_1_NOT_PENDING               0x00000000 /* RWI-V */
#define NV_PFIFO_DMA_CHANNEL_1_PENDING                   0x00000001 /* RW--V */
#define NV_PFIFO_DMA_CHANNEL_2                                  2:2 /* RWIVF */
#define NV_PFIFO_DMA_CHANNEL_2_NOT_PENDING               0x00000000 /* RWI-V */
#define NV_PFIFO_DMA_CHANNEL_2_PENDING                   0x00000001 /* RW--V */
#define NV_PFIFO_DMA_CHANNEL_3                                  3:3 /* RWIVF */
#define NV_PFIFO_DMA_CHANNEL_3_NOT_PENDING               0x00000000 /* RWI-V */
#define NV_PFIFO_DMA_CHANNEL_3_PENDING                   0x00000001 /* RW--V */
#define NV_PFIFO_DMA_CHANNEL_4                                  4:4 /* RWIVF */
#define NV_PFIFO_DMA_CHANNEL_4_NOT_PENDING               0x00000000 /* RWI-V */
#define NV_PFIFO_DMA_CHANNEL_4_PENDING                   0x00000001 /* RW--V */
#define NV_PFIFO_DMA_CHANNEL_5                                  5:5 /* RWIVF */
#define NV_PFIFO_DMA_CHANNEL_5_NOT_PENDING               0x00000000 /* RWI-V */
#define NV_PFIFO_DMA_CHANNEL_5_PENDING                   0x00000001 /* RW--V */
#define NV_PFIFO_DMA_CHANNEL_6                                  6:6 /* RWIVF */
#define NV_PFIFO_DMA_CHANNEL_6_NOT_PENDING               0x00000000 /* RWI-V */
#define NV_PFIFO_DMA_CHANNEL_6_PENDING                   0x00000001 /* RW--V */
#define NV_PFIFO_DMA_CHANNEL_7                                  7:7 /* RWIVF */
#define NV_PFIFO_DMA_CHANNEL_7_NOT_PENDING               0x00000000 /* RWI-V */
#define NV_PFIFO_DMA_CHANNEL_7_PENDING                   0x00000001 /* RW--V */
#define NV_PFIFO_DMA_CHANNEL_8                                  8:8 /* RWIVF */
#define NV_PFIFO_DMA_CHANNEL_8_NOT_PENDING               0x00000000 /* RWI-V */
#define NV_PFIFO_DMA_CHANNEL_8_PENDING                   0x00000001 /* RW--V */
#define NV_PFIFO_DMA_CHANNEL_9                                  9:9 /* RWIVF */
#define NV_PFIFO_DMA_CHANNEL_9_NOT_PENDING               0x00000000 /* RWI-V */
#define NV_PFIFO_DMA_CHANNEL_9_PENDING                   0x00000001 /* RW--V */
#define NV_PFIFO_DMA_CHANNEL_10                               10:10 /* RWIVF */
#define NV_PFIFO_DMA_CHANNEL_10_NOT_PENDING              0x00000000 /* RWI-V */
#define NV_PFIFO_DMA_CHANNEL_10_PENDING                  0x00000001 /* RW--V */
#define NV_PFIFO_DMA_CHANNEL_11                               11:11 /* RWIVF */
#define NV_PFIFO_DMA_CHANNEL_11_NOT_PENDING              0x00000000 /* RWI-V */
#define NV_PFIFO_DMA_CHANNEL_11_PENDING                  0x00000001 /* RW--V */
#define NV_PFIFO_DMA_CHANNEL_12                               12:12 /* RWIVF */
#define NV_PFIFO_DMA_CHANNEL_12_NOT_PENDING              0x00000000 /* RWI-V */
#define NV_PFIFO_DMA_CHANNEL_12_PENDING                  0x00000001 /* RW--V */
#define NV_PFIFO_DMA_CHANNEL_13                               13:13 /* RWIVF */
#define NV_PFIFO_DMA_CHANNEL_13_NOT_PENDING              0x00000000 /* RWI-V */
#define NV_PFIFO_DMA_CHANNEL_13_PENDING                  0x00000001 /* RW--V */
#define NV_PFIFO_DMA_CHANNEL_14                               14:14 /* RWIVF */
#define NV_PFIFO_DMA_CHANNEL_14_NOT_PENDING              0x00000000 /* RWI-V */
#define NV_PFIFO_DMA_CHANNEL_14_PENDING                  0x00000001 /* RW--V */
#define NV_PFIFO_DMA_CHANNEL_15                               15:15 /* RWIVF */
#define NV_PFIFO_DMA_CHANNEL_15_NOT_PENDING              0x00000000 /* RWI-V */
#define NV_PFIFO_DMA_CHANNEL_15_PENDING                  0x00000001 /* RW--V */
#define NV_PFIFO_DMA_CHANNEL_16                               16:16 /* RWIVF */
#define NV_PFIFO_DMA_CHANNEL_16_NOT_PENDING              0x00000000 /* RWI-V */
#define NV_PFIFO_DMA_CHANNEL_16_PENDING                  0x00000001 /* RW--V */
#define NV_PFIFO_DMA_CHANNEL_17                               17:17 /* RWIVF */
#define NV_PFIFO_DMA_CHANNEL_17_NOT_PENDING              0x00000000 /* RWI-V */
#define NV_PFIFO_DMA_CHANNEL_17_PENDING                  0x00000001 /* RW--V */
#define NV_PFIFO_DMA_CHANNEL_18                               18:18 /* RWIVF */
#define NV_PFIFO_DMA_CHANNEL_18_NOT_PENDING              0x00000000 /* RWI-V */
#define NV_PFIFO_DMA_CHANNEL_18_PENDING                  0x00000001 /* RW--V */
#define NV_PFIFO_DMA_CHANNEL_19                               19:19 /* RWIVF */
#define NV_PFIFO_DMA_CHANNEL_19_NOT_PENDING              0x00000000 /* RWI-V */
#define NV_PFIFO_DMA_CHANNEL_19_PENDING                  0x00000001 /* RW--V */
#define NV_PFIFO_DMA_CHANNEL_20                               20:20 /* RWIVF */
#define NV_PFIFO_DMA_CHANNEL_20_NOT_PENDING              0x00000000 /* RWI-V */
#define NV_PFIFO_DMA_CHANNEL_20_PENDING                  0x00000001 /* RW--V */
#define NV_PFIFO_DMA_CHANNEL_21                               21:21 /* RWIVF */
#define NV_PFIFO_DMA_CHANNEL_21_NOT_PENDING              0x00000000 /* RWI-V */
#define NV_PFIFO_DMA_CHANNEL_21_PENDING                  0x00000001 /* RW--V */
#define NV_PFIFO_DMA_CHANNEL_22                               22:22 /* RWIVF */
#define NV_PFIFO_DMA_CHANNEL_22_NOT_PENDING              0x00000000 /* RWI-V */
#define NV_PFIFO_DMA_CHANNEL_22_PENDING                  0x00000001 /* RW--V */
#define NV_PFIFO_DMA_CHANNEL_23                               23:23 /* RWIVF */
#define NV_PFIFO_DMA_CHANNEL_23_NOT_PENDING              0x00000000 /* RWI-V */
#define NV_PFIFO_DMA_CHANNEL_23_PENDING                  0x00000001 /* RW--V */
#define NV_PFIFO_DMA_CHANNEL_24                               24:24 /* RWIVF */
#define NV_PFIFO_DMA_CHANNEL_24_NOT_PENDING              0x00000000 /* RWI-V */
#define NV_PFIFO_DMA_CHANNEL_24_PENDING                  0x00000001 /* RW--V */
#define NV_PFIFO_DMA_CHANNEL_25                               25:25 /* RWIVF */
#define NV_PFIFO_DMA_CHANNEL_25_NOT_PENDING              0x00000000 /* RWI-V */
#define NV_PFIFO_DMA_CHANNEL_25_PENDING                  0x00000001 /* RW--V */
#define NV_PFIFO_DMA_CHANNEL_26                               26:26 /* RWIVF */
#define NV_PFIFO_DMA_CHANNEL_26_NOT_PENDING              0x00000000 /* RWI-V */
#define NV_PFIFO_DMA_CHANNEL_26_PENDING                  0x00000001 /* RW--V */
#define NV_PFIFO_DMA_CHANNEL_27                               27:27 /* RWIVF */
#define NV_PFIFO_DMA_CHANNEL_27_NOT_PENDING              0x00000000 /* RWI-V */
#define NV_PFIFO_DMA_CHANNEL_27_PENDING                  0x00000001 /* RW--V */
#define NV_PFIFO_DMA_CHANNEL_28                               28:28 /* RWIVF */
#define NV_PFIFO_DMA_CHANNEL_28_NOT_PENDING              0x00000000 /* RWI-V */
#define NV_PFIFO_DMA_CHANNEL_28_PENDING                  0x00000001 /* RW--V */
#define NV_PFIFO_DMA_CHANNEL_29                               29:29 /* RWIVF */
#define NV_PFIFO_DMA_CHANNEL_29_NOT_PENDING              0x00000000 /* RWI-V */
#define NV_PFIFO_DMA_CHANNEL_29_PENDING                  0x00000001 /* RW--V */
#define NV_PFIFO_DMA_CHANNEL_30                               30:30 /* RWIVF */
#define NV_PFIFO_DMA_CHANNEL_30_NOT_PENDING              0x00000000 /* RWI-V */
#define NV_PFIFO_DMA_CHANNEL_30_PENDING                  0x00000001 /* RW--V */
#define NV_PFIFO_DMA_CHANNEL_31                               31:31 /* RWIVF */
#define NV_PFIFO_DMA_CHANNEL_31_NOT_PENDING              0x00000000 /* RWI-V */
#define NV_PFIFO_DMA_CHANNEL_31_PENDING                  0x00000001 /* RW--V */
#define NV_PFIFO_SIZE                                    0x0000250C /* RW-4R */
#define NV_PFIFO_SIZE_CHANNEL_0                                 0:0 /* RWIVF */
#define NV_PFIFO_SIZE_CHANNEL_0_124_BYTES                0x00000000 /* RWI-V */
#define NV_PFIFO_SIZE_CHANNEL_0_512_BYTES                0x00000001 /* RW--V */
#define NV_PFIFO_SIZE_CHANNEL_1                                 1:1 /* RWIVF */
#define NV_PFIFO_SIZE_CHANNEL_1_124_BYTES                0x00000000 /* RWI-V */
#define NV_PFIFO_SIZE_CHANNEL_1_512_BYTES                0x00000001 /* RW--V */
#define NV_PFIFO_SIZE_CHANNEL_2                                 2:2 /* RWIVF */
#define NV_PFIFO_SIZE_CHANNEL_2_124_BYTES                0x00000000 /* RWI-V */
#define NV_PFIFO_SIZE_CHANNEL_2_512_BYTES                0x00000001 /* RW--V */
#define NV_PFIFO_SIZE_CHANNEL_3                                 3:3 /* RWIVF */
#define NV_PFIFO_SIZE_CHANNEL_3_124_BYTES                0x00000000 /* RWI-V */
#define NV_PFIFO_SIZE_CHANNEL_3_512_BYTES                0x00000001 /* RW--V */
#define NV_PFIFO_SIZE_CHANNEL_4                                 4:4 /* RWIVF */
#define NV_PFIFO_SIZE_CHANNEL_4_124_BYTES                0x00000000 /* RWI-V */
#define NV_PFIFO_SIZE_CHANNEL_4_512_BYTES                0x00000001 /* RW--V */
#define NV_PFIFO_SIZE_CHANNEL_5                                 5:5 /* RWIVF */
#define NV_PFIFO_SIZE_CHANNEL_5_124_BYTES                0x00000000 /* RWI-V */
#define NV_PFIFO_SIZE_CHANNEL_5_512_BYTES                0x00000001 /* RW--V */
#define NV_PFIFO_SIZE_CHANNEL_6                                 6:6 /* RWIVF */
#define NV_PFIFO_SIZE_CHANNEL_6_124_BYTES                0x00000000 /* RWI-V */
#define NV_PFIFO_SIZE_CHANNEL_6_512_BYTES                0x00000001 /* RW--V */
#define NV_PFIFO_SIZE_CHANNEL_7                                 7:7 /* RWIVF */
#define NV_PFIFO_SIZE_CHANNEL_7_124_BYTES                0x00000000 /* RWI-V */
#define NV_PFIFO_SIZE_CHANNEL_7_512_BYTES                0x00000001 /* RW--V */
#define NV_PFIFO_SIZE_CHANNEL_8                                 8:8 /* RWIVF */
#define NV_PFIFO_SIZE_CHANNEL_8_124_BYTES                0x00000000 /* RWI-V */
#define NV_PFIFO_SIZE_CHANNEL_8_512_BYTES                0x00000001 /* RW--V */
#define NV_PFIFO_SIZE_CHANNEL_9                                 9:9 /* RWIVF */
#define NV_PFIFO_SIZE_CHANNEL_9_124_BYTES                0x00000000 /* RWI-V */
#define NV_PFIFO_SIZE_CHANNEL_9_512_BYTES                0x00000001 /* RW--V */
#define NV_PFIFO_SIZE_CHANNEL_10                              10:10 /* RWIVF */
#define NV_PFIFO_SIZE_CHANNEL_10_124_BYTES               0x00000000 /* RWI-V */
#define NV_PFIFO_SIZE_CHANNEL_10_512_BYTES               0x00000001 /* RW--V */
#define NV_PFIFO_SIZE_CHANNEL_11                              11:11 /* RWIVF */
#define NV_PFIFO_SIZE_CHANNEL_11_124_BYTES               0x00000000 /* RWI-V */
#define NV_PFIFO_SIZE_CHANNEL_11_512_BYTES               0x00000001 /* RW--V */
#define NV_PFIFO_SIZE_CHANNEL_12                              12:12 /* RWIVF */
#define NV_PFIFO_SIZE_CHANNEL_12_124_BYTES               0x00000000 /* RWI-V */
#define NV_PFIFO_SIZE_CHANNEL_12_512_BYTES               0x00000001 /* RW--V */
#define NV_PFIFO_SIZE_CHANNEL_13                              13:13 /* RWIVF */
#define NV_PFIFO_SIZE_CHANNEL_13_124_BYTES               0x00000000 /* RWI-V */
#define NV_PFIFO_SIZE_CHANNEL_13_512_BYTES               0x00000001 /* RW--V */
#define NV_PFIFO_SIZE_CHANNEL_14                              14:14 /* RWIVF */
#define NV_PFIFO_SIZE_CHANNEL_14_124_BYTES               0x00000000 /* RWI-V */
#define NV_PFIFO_SIZE_CHANNEL_14_512_BYTES               0x00000001 /* RW--V */
#define NV_PFIFO_SIZE_CHANNEL_15                              15:15 /* RWIVF */
#define NV_PFIFO_SIZE_CHANNEL_15_124_BYTES               0x00000000 /* RWI-V */
#define NV_PFIFO_SIZE_CHANNEL_15_512_BYTES               0x00000001 /* RW--V */
#define NV_PFIFO_SIZE_CHANNEL_16                              16:16 /* RWIVF */
#define NV_PFIFO_SIZE_CHANNEL_16_124_BYTES               0x00000000 /* RWI-V */
#define NV_PFIFO_SIZE_CHANNEL_16_512_BYTES               0x00000001 /* RW--V */
#define NV_PFIFO_SIZE_CHANNEL_17                              17:17 /* RWIVF */
#define NV_PFIFO_SIZE_CHANNEL_17_124_BYTES               0x00000000 /* RWI-V */
#define NV_PFIFO_SIZE_CHANNEL_17_512_BYTES               0x00000001 /* RW--V */
#define NV_PFIFO_SIZE_CHANNEL_18                              18:18 /* RWIVF */
#define NV_PFIFO_SIZE_CHANNEL_18_124_BYTES               0x00000000 /* RWI-V */
#define NV_PFIFO_SIZE_CHANNEL_18_512_BYTES               0x00000001 /* RW--V */
#define NV_PFIFO_SIZE_CHANNEL_19                              19:19 /* RWIVF */
#define NV_PFIFO_SIZE_CHANNEL_19_124_BYTES               0x00000000 /* RWI-V */
#define NV_PFIFO_SIZE_CHANNEL_19_512_BYTES               0x00000001 /* RW--V */
#define NV_PFIFO_SIZE_CHANNEL_20                              20:20 /* RWIVF */
#define NV_PFIFO_SIZE_CHANNEL_20_124_BYTES               0x00000000 /* RWI-V */
#define NV_PFIFO_SIZE_CHANNEL_20_512_BYTES               0x00000001 /* RW--V */
#define NV_PFIFO_SIZE_CHANNEL_21                              21:21 /* RWIVF */
#define NV_PFIFO_SIZE_CHANNEL_21_124_BYTES               0x00000000 /* RWI-V */
#define NV_PFIFO_SIZE_CHANNEL_21_512_BYTES               0x00000001 /* RW--V */
#define NV_PFIFO_SIZE_CHANNEL_22                              22:22 /* RWIVF */
#define NV_PFIFO_SIZE_CHANNEL_22_124_BYTES               0x00000000 /* RWI-V */
#define NV_PFIFO_SIZE_CHANNEL_22_512_BYTES               0x00000001 /* RW--V */
#define NV_PFIFO_SIZE_CHANNEL_23                              23:23 /* RWIVF */
#define NV_PFIFO_SIZE_CHANNEL_23_124_BYTES               0x00000000 /* RWI-V */
#define NV_PFIFO_SIZE_CHANNEL_23_512_BYTES               0x00000001 /* RW--V */
#define NV_PFIFO_SIZE_CHANNEL_24                              24:24 /* RWIVF */
#define NV_PFIFO_SIZE_CHANNEL_24_124_BYTES               0x00000000 /* RWI-V */
#define NV_PFIFO_SIZE_CHANNEL_24_512_BYTES               0x00000001 /* RW--V */
#define NV_PFIFO_SIZE_CHANNEL_25                              25:25 /* RWIVF */
#define NV_PFIFO_SIZE_CHANNEL_25_124_BYTES               0x00000000 /* RWI-V */
#define NV_PFIFO_SIZE_CHANNEL_25_512_BYTES               0x00000001 /* RW--V */
#define NV_PFIFO_SIZE_CHANNEL_26                              26:26 /* RWIVF */
#define NV_PFIFO_SIZE_CHANNEL_26_124_BYTES               0x00000000 /* RWI-V */
#define NV_PFIFO_SIZE_CHANNEL_26_512_BYTES               0x00000001 /* RW--V */
#define NV_PFIFO_SIZE_CHANNEL_27                              27:27 /* RWIVF */
#define NV_PFIFO_SIZE_CHANNEL_27_124_BYTES               0x00000000 /* RWI-V */
#define NV_PFIFO_SIZE_CHANNEL_27_512_BYTES               0x00000001 /* RW--V */
#define NV_PFIFO_SIZE_CHANNEL_28                              28:28 /* RWIVF */
#define NV_PFIFO_SIZE_CHANNEL_28_124_BYTES               0x00000000 /* RWI-V */
#define NV_PFIFO_SIZE_CHANNEL_28_512_BYTES               0x00000001 /* RW--V */
#define NV_PFIFO_SIZE_CHANNEL_29                              29:29 /* RWIVF */
#define NV_PFIFO_SIZE_CHANNEL_29_124_BYTES               0x00000000 /* RWI-V */
#define NV_PFIFO_SIZE_CHANNEL_29_512_BYTES               0x00000001 /* RW--V */
#define NV_PFIFO_SIZE_CHANNEL_30                              30:30 /* RWIVF */
#define NV_PFIFO_SIZE_CHANNEL_30_124_BYTES               0x00000000 /* RWI-V */
#define NV_PFIFO_SIZE_CHANNEL_30_512_BYTES               0x00000001 /* RW--V */
#define NV_PFIFO_SIZE_CHANNEL_31                              31:31 /* RWIVF */
#define NV_PFIFO_SIZE_CHANNEL_31_124_BYTES               0x00000000 /* RWI-V */
#define NV_PFIFO_SIZE_CHANNEL_31_512_BYTES               0x00000001 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH                        0x00003224 /* RW-4R */
#define NV_PFIFO_CACHE1_DMA_FETCH_TRIG                          7:3 /* RWIUF */
#define NV_PFIFO_CACHE1_DMA_FETCH_TRIG_8_BYTES           0x00000000 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_TRIG_16_BYTES          0x00000001 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_TRIG_24_BYTES          0x00000002 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_TRIG_32_BYTES          0x00000003 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_TRIG_40_BYTES          0x00000004 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_TRIG_48_BYTES          0x00000005 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_TRIG_56_BYTES          0x00000006 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_TRIG_64_BYTES          0x00000007 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_TRIG_72_BYTES          0x00000008 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_TRIG_80_BYTES          0x00000009 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_TRIG_88_BYTES          0x0000000A /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_TRIG_96_BYTES          0x0000000B /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_TRIG_104_BYTES         0x0000000C /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_TRIG_112_BYTES         0x0000000D /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_TRIG_120_BYTES         0x0000000E /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_TRIG_128_BYTES         0x0000000F /* RWI-V */
#define NV_PFIFO_CACHE1_DMA_FETCH_TRIG_136_BYTES         0x00000010 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_TRIG_144_BYTES         0x00000011 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_TRIG_152_BYTES         0x00000012 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_TRIG_160_BYTES         0x00000013 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_TRIG_168_BYTES         0x00000014 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_TRIG_176_BYTES         0x00000015 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_TRIG_184_BYTES         0x00000016 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_TRIG_192_BYTES         0x00000017 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_TRIG_200_BYTES         0x00000018 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_TRIG_208_BYTES         0x00000019 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_TRIG_216_BYTES         0x0000001A /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_TRIG_224_BYTES         0x0000001B /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_TRIG_232_BYTES         0x0000001C /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_TRIG_240_BYTES         0x0000001D /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_TRIG_248_BYTES         0x0000001E /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_TRIG_256_BYTES         0x0000001F /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_SIZE                        15:13 /* RWIUF */
#define NV_PFIFO_CACHE1_DMA_FETCH_SIZE_32_BYTES          0x00000000 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_SIZE_64_BYTES          0x00000001 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_SIZE_96_BYTES          0x00000002 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_SIZE_128_BYTES         0x00000003 /* RWI-V */
#define NV_PFIFO_CACHE1_DMA_FETCH_SIZE_160_BYTES         0x00000004 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_SIZE_192_BYTES         0x00000005 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_SIZE_224_BYTES         0x00000006 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_SIZE_256_BYTES         0x00000007 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_MAX_REQS                    20:16 /* RWIUF */
#define NV_PFIFO_CACHE1_DMA_FETCH_MAX_REQS_0             0x00000000 /* RWI-V */
#define NV_PFIFO_CACHE1_DMA_FETCH_MAX_REQS_1             0x00000001 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_MAX_REQS_2             0x00000002 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_MAX_REQS_3             0x00000003 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_MAX_REQS_4             0x00000004 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_MAX_REQS_5             0x00000005 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_MAX_REQS_6             0x00000006 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_MAX_REQS_7             0x00000007 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_MAX_REQS_8             0x00000008 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_MAX_REQS_9             0x00000009 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_MAX_REQS_10            0x0000000A /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_MAX_REQS_11            0x0000000B /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_MAX_REQS_12            0x0000000C /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_MAX_REQS_13            0x0000000D /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_MAX_REQS_14            0x0000000E /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_MAX_REQS_15            0x0000000F /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_ENDIAN                      31:31 /* RWIUF */
#define NV_PFIFO_CACHE1_DMA_FETCH_ENDIAN_LITTLE          0x00000000 /* RWI-V */
#define NV_PFIFO_CACHE1_DMA_FETCH_ENDIAN_BIG             0x00000001 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_PUT_OFFSET                         28:2 /* RWXUF */
#define NV_PFIFO_CACHE1_DMA_GET_OFFSET                         28:2 /* RWXUF */
#define NV_PFIFO_CACHE1_REF                              0x00003248 /* RW-4R */
#define NV_PFIFO_CACHE1_REF_CNT                                31:0 /* RWXUF */
#define NV_PFIFO_CACHE1_DMA_DCOUNT                       0x000032A0 /* RW-4R */
#define NV_PFIFO_CACHE1_DMA_DCOUNT_VALUE                       12:2 /* RWXUF */
#define NV_PFIFO_CACHE1_DMA_GET_JMP_SHADOW               0x000032A4 /* RW-4R */
#define NV_PFIFO_CACHE1_DMA_GET_JMP_SHADOW_OFFSET              28:2 /* RWXUF */
#define NV_PFIFO_CACHE1_DMA_RSVD_SHADOW                  0x000032A8 /* RW-4R */
#define NV_PFIFO_CACHE1_DMA_RSVD_SHADOW_CMD                    31:0 /* RWXUF */
#define NV_PFIFO_CACHE1_DMA_STATE_METHOD_TYPE                   0:0 /* RWXUF */
#define NV_PFIFO_CACHE1_DMA_STATE_METHOD_TYPE_INC        0x00000000 /* RWI-V */
#define NV_PFIFO_CACHE1_DMA_STATE_METHOD_TYPE_NON_INC    0x00000001 /* RWI-V */
#define NV_PFIFO_CACHE1_DMA_STATE_METHOD                       12:2 /* RWXUF */
#define NV_PFIFO_CACHE1_DMA_STATE_SUBCHANNEL                  15:13 /* RWXUF */
#define NV_PFIFO_CACHE1_DMA_STATE_METHOD_COUNT                28:18 /* RWIUF */
#define NV_PFIFO_CACHE1_DMA_STATE_METHOD_COUNT_0         0x00000000 /* RWI-V */
#define NV_PFIFO_CACHE1_DMA_STATE_ERROR                       31:30 /* RWXUF */
#define NV_PFIFO_CACHE1_DMA_STATE_ERROR_NONE             0x00000000 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_STATE_ERROR_NON_CACHE        0x00000001 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_STATE_ERROR_RESERVED_CMD     0x00000002 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_STATE_ERROR_PROTECTION       0x00000003 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_INSTANCE                     0x0000322C /* RW-4R */
#define NV_PFIFO_CACHE1_DMA_INSTANCE_ADDRESS                   15:0 /* RWXUF */
#define NV_PFIFO_CACHE1_DMA_CTL                          0x00003230 /* RW-4R */
#define NV_PFIFO_CACHE1_DMA_CTL_ADJUST                         11:2 /* RWXUF */
#define NV_PFIFO_CACHE1_DMA_CTL_PAGE_TABLE                    12:12 /* RWXUF */
#define NV_PFIFO_CACHE1_DMA_CTL_PAGE_TABLE_NOT_PRESENT   0x00000000 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_CTL_PAGE_TABLE_PRESENT       0x00000001 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_CTL_PAGE_ENTRY                    13:13 /* RWXUF */
#define NV_PFIFO_CACHE1_DMA_CTL_PAGE_ENTRY_NOT_LINEAR    0x00000000 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_CTL_PAGE_ENTRY_LINEAR        0x00000001 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_CTL_TARGET_NODE                   17:16 /* RWXUF */
#define NV_PFIFO_CACHE1_DMA_CTL_TARGET_NODE_NVM          0x00000000 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_CTL_TARGET_NODE_PCI          0x00000002 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_CTL_TARGET_NODE_AGP          0x00000003 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_CTL_AT_INFO                       31:31 /* RWIUF */
#define NV_PFIFO_CACHE1_DMA_CTL_AT_INFO_INVALID          0x00000000 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_CTL_AT_INFO_VALID            0x00000001 /* RWI-V */
#define NV_PFIFO_CACHE1_DMA_LIMIT                        0x00003234 /* RW-4R */
#define NV_PFIFO_CACHE1_DMA_LIMIT_OFFSET                       28:2 /* RWXUF */
#define NV_PFIFO_CACHE1_DMA_TLB_TAG                      0x00003238 /* RW-4R */
#define NV_PFIFO_CACHE1_DMA_TLB_TAG_ADDRESS                   28:12 /* RWXUF */
#define NV_PFIFO_CACHE1_DMA_TLB_TAG_STATE                       0:0 /* RWIUF */
#define NV_PFIFO_CACHE1_DMA_TLB_TAG_STATE_INVALID        0x00000000 /* RWI-V */
#define NV_PFIFO_CACHE1_DMA_TLB_TAG_STATE_VALID          0x00000001 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_TLB_PTE                      0x0000323C /* RW-4R */
#define NV_PFIFO_CACHE1_DMA_TLB_PTE_FRAME_ADDRESS             31:12 /* RWXUF */
#define NV_PFIFO_DEVICE(i)                       (0x00002800+(i)*4) /* R--4A */
#define NV_PFIFO_DEVICE__SIZE_1                                 128 /*       */
#define NV_PFIFO_DEVICE_CHID                                    4:0 /* R--UF */
#define NV_PFIFO_DEVICE_SWITCH                                24:24 /* R--VF */
#define NV_PFIFO_DEVICE_SWITCH_UNAVAILABLE               0x00000000 /* R---V */
#define NV_PFIFO_DEVICE_SWITCH_AVAILABLE                 0x00000001 /* R---V */
#define NV_PFIFO_RUNOUT_STATUS                           0x00002400 /* R--4R */
#define NV_PFIFO_RUNOUT_STATUS_RANOUT                           0:0 /* R--VF */
#define NV_PFIFO_RUNOUT_STATUS_RANOUT_FALSE              0x00000000 /* R---V */
#define NV_PFIFO_RUNOUT_STATUS_RANOUT_TRUE               0x00000001 /* R---V */
#define NV_PFIFO_RUNOUT_STATUS_LOW_MARK                         4:4 /* R--VF */
#define NV_PFIFO_RUNOUT_STATUS_LOW_MARK_NOT_EMPTY        0x00000000 /* R---V */
#define NV_PFIFO_RUNOUT_STATUS_LOW_MARK_EMPTY            0x00000001 /* R---V */
#define NV_PFIFO_RUNOUT_STATUS_HIGH_MARK                        8:8 /* R--VF */
#define NV_PFIFO_RUNOUT_STATUS_HIGH_MARK_NOT_FULL        0x00000000 /* R---V */
#define NV_PFIFO_RUNOUT_STATUS_HIGH_MARK_FULL            0x00000001 /* R---V */
#define NV_PFIFO_RUNOUT_PUT                              0x00002410 /* RW-4R */
#define NV_PFIFO_RUNOUT_PUT_ADDRESS                            12:3 /* RWXUF */
#define NV_PFIFO_RUNOUT_PUT_ADDRESS__SIZE_0                     8:3 /* RWXUF */
#define NV_PFIFO_RUNOUT_PUT_ADDRESS__SIZE_1                    12:3 /* RWXUF */
#define NV_PFIFO_RUNOUT_GET                              0x00002420 /* RW-4R */
#define NV_PFIFO_RUNOUT_GET_ADDRESS                            13:3 /* RWXUF */
/* dev_ram.ref */
#define NV_PNVM                               0x0FFFFFFF:0x08000000 /* RW--M */
#define NV_PNVM_DATA032(i)                       (0x08000000+(i)*4) /* RW-4A */
#define NV_PNVM_DATA032__SIZE_1                            33554432 /*       */
#define NV_PNVM_DATA032_VALUE                                  31:0 /* RWXVF */
#define NV_PNVM_DATA016(i)           (0x08000000+((i)/3)*4+((i)%3)) /* RW-2A */
#define NV_PNVM_DATA016__SIZE_1                           67108864  /*       */
#define NV_PNVM_DATA016_VALUE                                  15:0 /* RWXVF */
#define NV_PNVM_DATA008(i)                         (0x08000000+(i)) /* RW-1A */
#define NV_PNVM_DATA008__SIZE_1                           134217728 /*       */
#define NV_PNVM_DATA008_VALUE                                   7:0 /* RWXVF */
/* dev_ram.ref */
#define NV_PRAMIN                             0x007FFFFF:0x00700000 /* RW--M */
#define NV_PRAMIN_CONTEXT_0                   ( 0*32+31):( 0*32+ 0) /*       */
#define NV_PRAMIN_CONTEXT_1                   ( 1*32+31):( 1*32+ 0) /*       */
#define NV_PRAMIN_CONTEXT_2                   ( 2*32+31):( 2*32+ 0) /*       */
#define NV_PRAMIN_CONTEXT_3                   ( 3*32+31):( 3*32+ 0) /*       */
#define NV_PRAMIN_RAMHT_0                     0x00710FFF:0x00710000 /* RW--M */
#define NV_PRAMIN_RAMFC_0                     0x007113FF:0x00711000 /* RW--M */
#define NV_PRAMIN_RAMRO_0                     0x007115FF:0x00711400 /* RW--M */
#define NV_PRAMIN_CTX_0(i)                    (0x00700000 + (i)*16) /* RW--M */
#define NV_PRAMIN_CTX_0__SIZE_1                             0x10000 /*       */
#define NV_PRAMIN_CTX_0_NVCLASS                                11:0 /* RWXUF */
#define NV_PRAMIN_CTX_0_NVCLASS_NV_ROOT                  0x00000000 /* RWD-V */
#define NV_PRAMIN_CTX_0_NVCLASS_012                      0x00000012 /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_017                      0x00000017 /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_018                      0x00000018 /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_019                      0x00000019 /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_01C                      0x0000001C /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_01D                      0x0000001D /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_01E                      0x0000001E /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_01F                      0x0000001F /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_021                      0x00000021 /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_030                      0x00000030 /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_036                      0x00000036 /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_037                      0x00000037 /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_038                      0x00000038 /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_039                      0x00000039 /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_042                      0x00000042 /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_043                      0x00000043 /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_044                      0x00000044 /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_048                      0x00000048 /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_04A                      0x0000004A /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_04B                      0x0000004B /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_052                      0x00000052 /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_053                      0x00000053 /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_054                      0x00000054 /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_055                      0x00000055 /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_057                      0x00000057 /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_058                      0x00000058 /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_059                      0x00000059 /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_05A                      0x0000005A /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_05B                      0x0000005B /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_05C                      0x0000005C /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_05E                      0x0000005E /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_05F                      0x0000005F /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_060                      0x00000060 /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_061                      0x00000061 /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_064                      0x00000064 /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_065                      0x00000065 /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_066                      0x00000066 /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_067                      0x00000067 /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_072                      0x00000072 /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_076                      0x00000076 /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_077                      0x00000077 /* RWC-V */
#define NV_PRAMIN_CTX_0_CHROMA_KEY                            12:12 /* RWXUF */
#define NV_PRAMIN_CTX_0_CHROMA_KEY_DISABLE               0x00000000 /* RWD-V */
#define NV_PRAMIN_CTX_0_CHROMA_KEY_ENABLE                0x00000001 /* RW--V */
#define NV_PRAMIN_CTX_0_USER_CLIP                             13:13 /* RWXUF */
#define NV_PRAMIN_CTX_0_USER_CLIP_DISABLE                0x00000000 /* RWD-V */
#define NV_PRAMIN_CTX_0_USER_CLIP_ENABLE                 0x00000001 /* RW--V */
#define NV_PRAMIN_CTX_0_SWIZZLE                               14:14 /* RWXUF */
#define NV_PRAMIN_CTX_0_SWIZZLE_DISABLE                  0x00000000 /* RWD-V */
#define NV_PRAMIN_CTX_0_SWIZZLE_ENABLE                   0x00000001 /* RW--V */
#define NV_PRAMIN_CTX_0_PATCH_CONFIG                          17:15 /* RWXUF */
#define NV_PRAMIN_CTX_0_PATCH_CONFIG_SRCCOPY_AND         0x00000000 /* RWD-V */
#define NV_PRAMIN_CTX_0_PATCH_CONFIG_ROP_AND             0x00000001 /* RW--V */
#define NV_PRAMIN_CTX_0_PATCH_CONFIG_BLEND_AND           0x00000002 /* RW--V */
#define NV_PRAMIN_CTX_0_PATCH_CONFIG_SRCCOPY             0x00000003 /* RW--V */
#define NV_PRAMIN_CTX_0_PATCH_CONFIG_SRCCOPY_PRE         0x00000004 /* RW--V */
#define NV_PRAMIN_CTX_0_PATCH_CONFIG_BLEND_PRE           0x00000005 /* RW--V */
#define NV_PRAMIN_CTX_0_DITHER_MODE                           21:20 /* RWXUF */
#define NV_PRAMIN_CTX_0_DITHER_MODE_COMPATIBILITY        0x00000000 /* RWD-V */
#define NV_PRAMIN_CTX_0_DITHER_MODE_DITHER               0x00000001 /* RW--V */
#define NV_PRAMIN_CTX_0_DITHER_MODE_TRUNCATE             0x00000002 /* RW--V */
#define NV_PRAMIN_CTX_0_DITHER_MODE_SUBTRACT_TRUNCATE    0x00000003 /* RW--V */
#define NV_PRAMIN_CTX_0_SINGLE_STEP                           23:23 /* RWXUF */
#define NV_PRAMIN_CTX_0_SINGLE_STEP_DISABLE              0x00000000 /* RWD-V */
#define NV_PRAMIN_CTX_0_SINGLE_STEP_ENABLE               0x00000001 /* RW--V */
#define NV_PRAMIN_CTX_0_PATCH_STATUS                          24:24 /* RWXUF */
#define NV_PRAMIN_CTX_0_PATCH_STATUS_INVALID             0x00000000 /* RWD-V */
#define NV_PRAMIN_CTX_0_PATCH_STATUS_VALID               0x00000001 /* RW--V */
#define NV_PRAMIN_CTX_0_CONTEXT_SURFACE                       25:25 /* RWXUF */
#define NV_PRAMIN_CTX_0_CONTEXT_SURFACE_INVALID          0x00000000 /* RW--V */
#define NV_PRAMIN_CTX_0_CONTEXT_SURFACE_VALID            0x00000001 /* RW--V */
#define NV_PRAMIN_CTX_0_CONTEXT_SURFACE0                      25:25 /* RWXUF */
#define NV_PRAMIN_CTX_0_CONTEXT_SURFACE0_INVALID         0x00000000 /* RWD-V */
#define NV_PRAMIN_CTX_0_CONTEXT_SURFACE0_VALID           0x00000001 /* RW--V */
#define NV_PRAMIN_CTX_0_CONTEXT_SURFACE1                      26:26 /* RWXUF */
#define NV_PRAMIN_CTX_0_CONTEXT_SURFACE1_INVALID         0x00000000 /* RWD-V */
#define NV_PRAMIN_CTX_0_CONTEXT_SURFACE1_VALID           0x00000001 /* RW--V */
#define NV_PRAMIN_CTX_0_CONTEXT_PATTERN                       27:27 /* RWXUF */
#define NV_PRAMIN_CTX_0_CONTEXT_PATTERN_INVALID          0x00000000 /* RWD-V */
#define NV_PRAMIN_CTX_0_CONTEXT_PATTERN_VALID            0x00000001 /* RW--V */
#define NV_PRAMIN_CTX_0_CONTEXT_ROP                           28:28 /* RWXUF */
#define NV_PRAMIN_CTX_0_CONTEXT_ROP_INVALID              0x00000000 /* RWD-V */
#define NV_PRAMIN_CTX_0_CONTEXT_ROP_VALID                0x00000001 /* RW--V */
#define NV_PRAMIN_CTX_0_CONTEXT_BETA1                         29:29 /* RWXUF */
#define NV_PRAMIN_CTX_0_CONTEXT_BETA1_INVALID            0x00000000 /* RWD-V */
#define NV_PRAMIN_CTX_0_CONTEXT_BETA1_VALID              0x00000001 /* RW--V */
#define NV_PRAMIN_CTX_0_CONTEXT_BETA4                         30:30 /* RWXUF */
#define NV_PRAMIN_CTX_0_CONTEXT_BETA4_INVALID            0x00000000 /* RWD-V */
#define NV_PRAMIN_CTX_0_CONTEXT_BETA4_VALID              0x00000001 /* RW--V */
#define NV_PRAMIN_CTX_1(i)                    (0x00700004 + (i)*16) /* RW--M */
#define NV_PRAMIN_CTX_1__SIZE_1                             0x10000 /*       */
#define NV_PRAMIN_CTX_1_MONO_FORMAT                             7:0 /* RWXUF */
#define NV_PRAMIN_CTX_1_MONO_FORMAT_INVALID                    0x00 /* RWD-V */
#define NV_PRAMIN_CTX_1_MONO_FORMAT_CGA6_M1                    0x01 /* RW--V */
#define NV_PRAMIN_CTX_1_MONO_FORMAT_LE_M1                      0x02 /* RW--V */
#define NV_PRAMIN_CTX_1_MONO_FORMAT_018                        0x01 /* RWC-V */
#define NV_PRAMIN_CTX_1_MONO_FORMAT_044                        0x01 /* RWC-V */
#define NV_PRAMIN_CTX_1_MONO_FORMAT_04A                        0x01 /* RWC-V */
#define NV_PRAMIN_CTX_1_MONO_FORMAT_04B                        0x01 /* RWC-V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT                           15:8 /* RWXUF */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_INVALID                   0x00 /* RWD-V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_LE_Y8                     0x01 /* RW--V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_LE_X16A8Y8                0x02 /* RW--V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_LE_X24Y8                  0x03 /* RW--V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_LE_A1R5G5B5               0x06 /* RW--V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_LE_X1R5G5B5               0x07 /* RW--V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_LE_X16A1R5G5B5            0x08 /* RW--V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_LE_X17R5G5B5              0x09 /* RW--V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_LE_R5G6B5                 0x0A /* RW--V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_LE_A16R5G6B5              0x0B /* RW--V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_LE_X16R5G6B5              0x0C /* RW--V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_LE_A8R8G8B8               0x0D /* RW--V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_LE_X8R8G8B8               0x0E /* RW--V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_LE_Y16                    0x0F /* RW--V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_LE_A16Y16                 0x10 /* RW--V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_LE_X16Y16                 0x11 /* RW--V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_LE_V8YB8U8YA8             0x12 /* RW--V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_LE_YB8V8YA8U8             0x13 /* RW--V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_LE_Y32                    0x14 /* RW--V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_017                 0x00000002 /* RWC-V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_018                 0x00000002 /* RWC-V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_01C                 0x00000003 /* RWC-V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_01D                 0x00000003 /* RWC-V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_01E                 0x00000003 /* RWC-V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_021                 0x00000001 /* RWC-V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_036                 0x00000001 /* RWC-V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_037                 0x00000006 /* RWC-V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_044                 0x0000000B /* RWC-V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_04A                 0x0000000C /* RWC-V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_04B                 0x00000003 /* RWC-V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_057                 0x0000000B /* RWC-V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_05C                 0x0000000C /* RWC-V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_05D                 0x0000000C /* RWC-V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_05E                 0x0000000C /* RWC-V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_060                 0x0000000A /* RWC-V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_061                 0x0000000A /* RWC-V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_076                 0x0000000A /* RWC-V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_077                 0x00000006 /* RWC-V */
#define NV_PRAMIN_CTX_1_NOTIFY_INSTANCE                       31:16 /* RWXUF */
#define NV_PRAMIN_CTX_1_NOTIFY_INSTANCE_INVALID              0x0000 /* RWD-V */
#define NV_PRAMIN_CTX_2(i)                    (0x00700008 + (i)*16) /* RW--M */
#define NV_PRAMIN_CTX_2__SIZE_1                             0x10000 /*       */
#define NV_PRAMIN_CTX_2_DMA_0_INSTANCE                         15:0 /* RWXUF */
#define NV_PRAMIN_CTX_2_DMA_0_INSTANCE_INVALID               0x0000 /* RWD-V */
#define NV_PRAMIN_CTX_2_DMA_1_INSTANCE                        31:16 /* RWXUF */
#define NV_PRAMIN_CTX_2_DMA_1_INSTANCE_INVALID               0x0000 /* RWD-V */
#define NV_PRAMIN_CTX_3(i)                    (0x0070000C + (i)*16) /* RW--M */
#define NV_PRAMIN_CTX_3__SIZE_1                             0x10000 /*       */
#define NV_PRAMIN_CTX_3_METHOD_TRAPS                           31:0 /* RWXUF */
#define NV_PRAMIN_CTX_3_METHOD_TRAPS_DISABLED            0x00000000 /* RWD-V */
#define NV_PRAMIN_DATA032(i)                     (0x00700000+(i)*4) /* RW-4A */
#define NV_PRAMIN_DATA032__SIZE_1                            524288 /*       */
#define NV_PRAMIN_DATA032_VALUE                                31:0 /* RWXVF */
#define NV_PRAMIN_DATA016(i)         (0x00700000+((i)/3)*4+((i)%3)) /* RW-2A */
#define NV_PRAMIN_DATA016__SIZE_1                           1572864 /*       */
#define NV_PRAMIN_DATA016_VALUE                                15:0 /* RWXVF */
#define NV_PRAMIN_DATA008(i)                       (0x00700000+(i)) /* RW-1A */
#define NV_PRAMIN_DATA008__SIZE_1                           2097152 /*       */
#define NV_PRAMIN_DATA008_VALUE                                 7:0 /* RWXVF */
/* dev_ram.ref */
#define NV_FIFO_DMA_OPCODE                    ( 0*32+31):( 0*32+29) /* RWXUF */
#define NV_FIFO_DMA_OPCODE_METHOD                        0x00000000 /* ----V */
#define NV_FIFO_DMA_OPCODE_JUMP                          0x00000001 /* ----V */
#define NV_FIFO_DMA_OPCODE_NONINC_METHOD                 0x00000002 /* ----V */
#define NV_FIFO_DMA_METHOD_COUNT              ( 0*32+28):( 0*32+18) /* RWXUF */
#define NV_FIFO_DMA_METHOD_SUBCHANNEL         ( 0*32+15):( 0*32+13) /* RWXUF */
#define NV_FIFO_DMA_METHOD_ADDRESS            ( 0*32+12):( 0*32+ 2) /* RWXUF */
#define NV_FIFO_DMA_DATA                      ( 1*32+31):( 1*32+ 0) /* RWXUF */
#define NV_FIFO_DMA_JUMP_OFFSET                                28:2 /* RWXUF */
/* dev_ram.ref */
#define NV_PRAM                               0x00006FFF:0x00006000 /* RW--D */
/* dev_fifo.ref */
#define NV_USER                               0x00FFFFFF:0x00800000 /* RW--D */
#define NV_USER_OBJECT(i,j)     (0x00800000+(i)*0x10000+(j)*0x2000) /* -W-4A */
#define NV_USER_OBJECT__SIZE_1                                   32 /*       */
#define NV_USER_OBJECT__SIZE_2                                    8 /*       */
#define NV_USER_OBJECT_HANDLE                                  31:0 /* -W-VF */
#define NV_USER_FREE016(i,j)        (0x00800010+(i)*65536+(j)*8192) /* R--2A */
#define NV_USER_FREE016__SIZE_1                                  32 /*       */
#define NV_USER_FREE016__SIZE_2                                   8 /*       */
#define NV_USER_FREE016_COUNT_LO                                1:0 /* C--UF */
#define NV_USER_FREE016_COUNT_LO_0                       0x00000000 /* C---V */
#define NV_USER_FREE016_COUNT                                   9:2 /* R--UF */
#define NV_USER_FREE016_COUNT_HI                              15:10 /* C--UF */
#define NV_USER_FREE016_COUNT_HI_0                       0x00000000 /* C---V */
#define NV_USER_FREE032(i,j)        (0x00800010+(i)*65536+(j)*8192) /* R--4A */
#define NV_USER_FREE032__SIZE_1                                  32 /*       */
#define NV_USER_FREE032__SIZE_2                                   8 /*       */
#define NV_USER_FREE032_COUNT_LO                                1:0 /* C--UF */
#define NV_USER_FREE032_COUNT_LO_0                       0x00000000 /* C---V */
#define NV_USER_FREE032_COUNT                                   9:2 /* R--UF */
#define NV_USER_FREE032_COUNT_HI                              31:10 /* C--UF */
#define NV_USER_FREE032_COUNT_HI_0                       0x00000000 /* C---V */
#define NV_USER_ZERO016(i,j,k) (0x0800012+(i)*65536+(j)*8192+(k)*2) /* R--2A */
#define NV_USER_ZERO016__SIZE_1                                  32 /*       */
#define NV_USER_ZERO016__SIZE_2                                   8 /*       */
#define NV_USER_ZERO016__SIZE_3                                   7 /*       */
#define NV_USER_ZERO016_COUNT                                  15:0 /* C--UF */
#define NV_USER_ZERO016_COUNT_0                          0x00000000 /* C---V */
#define NV_USER_ZERO032(i,j,k) (0x0800014+(i)*65536+(j)*8192+(k)*4) /* R--4A */
#define NV_USER_ZERO032__SIZE_1                                  32 /*       */
#define NV_USER_ZERO032__SIZE_2                                   8 /*       */
#define NV_USER_ZERO032__SIZE_3                                   3 /*       */
#define NV_USER_ZERO032_COUNT                                  31:0 /* C--UF */
#define NV_USER_ZERO032_COUNT_0                          0x00000000 /* C---V */
#define NV_USER_DMA_PUT(i,j)    (0x00800040+(i)*0x10000+(j)*0x2000) /* -W-4A */
#define NV_USER_DMA_PUT__SIZE_1                                  32 /*       */
#define NV_USER_DMA_PUT__SIZE_2                                   8 /*       */
#define NV_USER_DMA_PUT_OFFSET                                 28:2 /* -WXUF */
#define NV_USER_DMA_GET(i,j)    (0x00800044+(i)*0x10000+(j)*0x2000) /* R--4A */
#define NV_USER_DMA_GET__SIZE_1                                  32 /*       */
#define NV_USER_DMA_GET__SIZE_2                                   8 /*       */
#define NV_USER_DMA_GET_OFFSET                                 28:2 /* R-XUF */
#define NV_USER_REF(i,j)        (0x00800048+(i)*0x10000+(j)*0x2000) /* R--4A */
#define NV_USER_REF__SIZE_1                                      32 /*       */
#define NV_USER_REF__SIZE_2                                       8 /*       */
#define NV_USER_REF_CNT                                        31:0 /* R-XUF */
/* dev_vga.ref */
#define NV_CIO_CRE_FFLWM_LWM                                    7:0 /* RW--F */
#define NV_CIO_GPIO0__INDEX                              0x00000034 /*       */
#define NV_CIO_GPIO1__INDEX                              0x00000035 /*       */
#define NV_CIO_CRE_DDC0_STATUS__INDEX                    0x00000036 /*       */
#define NV_CIO_CRE_DDC0_WR__INDEX                        0x00000037 /*       */
/* dev_graphics.ref */
#define NV_PGRAPH_DEBUG_0                                0x00400080 /* RW-4R */
#define NV_PGRAPH_DEBUG_0_STATE                                 0:0 /* CWIVF */
#define NV_PGRAPH_DEBUG_0_STATE_NORMAL                   0x00000000 /* CWI-V */
#define NV_PGRAPH_DEBUG_0_STATE_RESET                    0x00000001 /* -W--T */
#define NV_PGRAPH_DEBUG_0_FE_2D_STATE                           1:1 /* RWIVF */
#define NV_PGRAPH_DEBUG_0_FE_2D_STATE_NORMAL             0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_0_FE_2D_STATE_RESET              0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_0_FE_3D_STATE                           2:2 /* RWIVF */
#define NV_PGRAPH_DEBUG_0_FE_3D_STATE_NORMAL             0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_0_FE_3D_STATE_RESET              0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_0_CACHE_STATE                           3:3 /* RWIVF */
#define NV_PGRAPH_DEBUG_0_CACHE_STATE_NORMAL             0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_0_CACHE_STATE_RESET              0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_0_PREROP_STATE                          4:4 /* RWIVF */
#define NV_PGRAPH_DEBUG_0_PREROP_STATE_NORMAL            0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_0_PREROP_STATE_RESET             0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_0_ROP_STATE                             5:5 /* RWIVF */
#define NV_PGRAPH_DEBUG_0_ROP_STATE_NORMAL               0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_0_ROP_STATE_RESET                0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_0_RSTR_3D_STATE                         6:6 /* RWIVF */
#define NV_PGRAPH_DEBUG_0_RSTR_3D_STATE_NORMAL           0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_0_RSTR_3D_STATE_RESET            0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_0_LIGHT_STATE                           7:7 /* RWIVF */
#define NV_PGRAPH_DEBUG_0_LIGHT_STATE_NORMAL             0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_0_LIGHT_STATE_RESET              0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_0_DMA_STATE                             8:8 /* RWIVF */
#define NV_PGRAPH_DEBUG_0_DMA_STATE_NORMAL               0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_0_DMA_STATE_RESET                0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_0_RSTR_2D_STATE                         9:9 /* RWIVF */
#define NV_PGRAPH_DEBUG_0_RSTR_2D_STATE_NORMAL           0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_0_RSTR_2D_STATE_RESET            0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_0_SETUP_STATE                         10:10 /* RWIVF */
#define NV_PGRAPH_DEBUG_0_SETUP_STATE_NORMAL             0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_0_SETUP_STATE_RESET              0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_0_TEXMATH_STATE                       11:11 /* RWIVF */
#define NV_PGRAPH_DEBUG_0_TEXMATH_STATE_NORMAL           0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_0_TEXMATH_STATE_RESET            0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_0_CFIFO_STATE                         12:12 /* RWIVF */
#define NV_PGRAPH_DEBUG_0_CFIFO_STATE_NORMAL             0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_0_CFIFO_STATE_RESET              0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_0_PIPE_STATE                          13:13 /* RWIVF */
#define NV_PGRAPH_DEBUG_0_PIPE_STATE_NORMAL              0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_0_PIPE_STATE_RESET               0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_0_COLOR_STATE                         14:14 /* RWIVF */
#define NV_PGRAPH_DEBUG_0_COLOR_STATE_NORMAL             0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_0_COLOR_STATE_RESET              0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_0_XF_STATE                            15:15 /* RWIVF */
#define NV_PGRAPH_DEBUG_0_XF_STATE_NORMAL                0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_0_XF_STATE_RESET                 0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_0_IDX_STATE                           16:16 /* RWIVF */
#define NV_PGRAPH_DEBUG_0_IDX_STATE_NORMAL               0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_0_IDX_STATE_RESET                0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_0_VTX_STATE                           17:17 /* RWIVF */
#define NV_PGRAPH_DEBUG_0_VTX_STATE_NORMAL               0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_0_VTX_STATE_RESET                0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_1                                0x00400084 /* RW-4R */
#define NV_PGRAPH_DEBUG_1_VOLATILE_RESET                        0:0 /* RWIVF */
#define NV_PGRAPH_DEBUG_1_VOLATILE_RESET_NOT_LAST        0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_1_VOLATILE_RESET_LAST            0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_1_VOLATILE_RESET_INIT            0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_1_DMA_ACTIVITY                          4:4 /* CWIVF */
#define NV_PGRAPH_DEBUG_1_DMA_ACTIVITY_IGNORE            0x00000000 /* CWI-V */
#define NV_PGRAPH_DEBUG_1_DMA_ACTIVITY_CANCEL            0x00000001 /* -W--T */
#define NV_PGRAPH_DEBUG_1_VTX_PTE                               8:8 /* RWIVF */
#define NV_PGRAPH_DEBUG_1_VTX_PTE_DISABLED               0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_1_VTX_PTE_ENABLED                0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_1_VTX_PTE_INIT                   0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_1_VTX_CACHE                             9:9 /* RWIVF */
#define NV_PGRAPH_DEBUG_1_VTX_CACHE_DISABLED             0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_1_VTX_CACHE_ENABLED              0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_1_VTX_CACHE_INIT                 0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_1_VTX_FILE                            10:10 /* RWIVF */
#define NV_PGRAPH_DEBUG_1_VTX_FILE_DISABLED              0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_1_VTX_FILE_ENABLED               0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_1_VTX_FILE_INIT                  0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_1_XF_ASYNC                            12:12 /* RWIVF */
#define NV_PGRAPH_DEBUG_1_XF_ASYNC_DISABLED              0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_1_XF_ASYNC_ENABLED               0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_1_LT_ASYNC                            13:13 /* RWIVF */
#define NV_PGRAPH_DEBUG_1_LT_ASYNC_DISABLED              0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_1_LT_ASYNC_ENABLED               0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_1_DRAWDIR_AUTO                        14:14 /* RWIVF */
#define NV_PGRAPH_DEBUG_1_DRAWDIR_AUTO_DISABLED          0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_1_DRAWDIR_AUTO_ENABLED           0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_1_DRAWDIR_AUTO_INIT              0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_1_DRAWDIR_Y                           15:15 /* RWIVF */
#define NV_PGRAPH_DEBUG_1_DRAWDIR_Y_DECR                 0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_1_DRAWDIR_Y_INCR                 0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_1_DRAWDIR_Y_INIT                 0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_1_INSTANCE                            16:16 /* RWIVF */
#define NV_PGRAPH_DEBUG_1_INSTANCE_DISABLED              0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_1_INSTANCE_ENABLED               0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_1_INSTANCE_INIT                  0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_1_CTX                                 20:20 /* RWIVF */
#define NV_PGRAPH_DEBUG_1_CTX_DISABLED                   0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_1_CTX_ENABLED                    0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_1_CTX_INIT                       0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_1_BIG_ENDIAN_FB                       21:21 /* RWIVF */
#define NV_PGRAPH_DEBUG_1_BIG_ENDIAN_FB_FOLLOW_OBJECT    0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_1_BIG_ENDIAN_FB_TRUE             0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_1_BIG_ENDIAN_FB_INIT             0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_1_BIG_ENDIAN_DMA                      22:22 /* RWIVF */
#define NV_PGRAPH_DEBUG_1_BIG_ENDIAN_DMA_FOLLOW_OBJECT   0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_1_BIG_ENDIAN_DMA_TRUE            0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_1_BIG_ENDIAN_DMA_INIT            0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_1_CACHE                               24:24 /* CWIVF */
#define NV_PGRAPH_DEBUG_1_CACHE_IGNORE                   0x00000000 /* CWI-V */
#define NV_PGRAPH_DEBUG_1_CACHE_INVALIDATE               0x00000001 /* -W--T */
#define NV_PGRAPH_DEBUG_1_CACHE_COUNTERS                      25:25 /* RWIVF */
#define NV_PGRAPH_DEBUG_1_CACHE_COUNTERS_DISABLED        0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_1_CACHE_COUNTERS_ENABLED         0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_1_CACHE_NO_COALESCE                   26:26 /* RWIVF */
#define NV_PGRAPH_DEBUG_1_CACHE_NO_COALESC_DISABLED      0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_1_CACHE_NO_COALESC_ENABLED       0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_1_CACHE_FORCE_MISS                    27:27 /* RWIVF */
#define NV_PGRAPH_DEBUG_1_CACHE_FORCE_MISS_DISABLED      0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_1_CACHE_FORCE_MISS_ENABLED       0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_1_CACHE_FORCE_HIT                     28:28 /* RWIVF */
#define NV_PGRAPH_DEBUG_1_CACHE_FORCE_HIT_DISABLED       0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_1_CACHE_FORCE_HIT_ENABLED        0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_1_TEXTURE_BYPASS                      29:29 /* RWIVF */
#define NV_PGRAPH_DEBUG_1_TEXTURE_BYPASS_DISABLED        0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_1_TEXTURE_BYPASS_ENABLED         0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_1_TEXTURE_CHECKERBOARD                30:30 /* RWIVF */
#define NV_PGRAPH_DEBUG_1_TEXTURE_CHECKERBOARD_DISABLED  0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_1_TEXTURE_CHECKERBOARD_ENABLED   0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_1_SMART_PALETTE_LOAD                  31:31 /* RWIVF */
#define NV_PGRAPH_DEBUG_1_SMART_PALETTE_LOAD_DISABLED    0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_1_SMART_PALETTE_LOAD_ENABLED     0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_2                                0x00400088 /* RW-4R */
#define NV_PGRAPH_DEBUG_2_PREROP_LIMIT_CHECK                    0:0 /* RWIVF */
#define NV_PGRAPH_DEBUG_2_PREROP_LIMIT_CHECK_DISABLED    0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_2_PREROP_LIMIT_CHECK_ENABLED     0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_2_PREROP_LIMIT_CHECK_INIT        0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_2_PREROP_LIMIT_INT                      1:1 /* RWIVF */
#define NV_PGRAPH_DEBUG_2_PREROP_LIMIT_INT_DISABLED      0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_2_PREROP_LIMIT_INT_ENABLED       0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_2_PREROP_LIMIT_INT_INIT          0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_2_PREROP_OVRFLW_INT                     2:2 /* RWIVF */
#define NV_PGRAPH_DEBUG_2_PREROP_OVRFLW_INT_DISABLED     0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_2_PREROP_OVRFLW_INT_ENABLED      0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_2_PREROP_OVRFLW_INT_INIT         0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_2_PREROP_COALESCE_3D                    3:3 /* RWIVF */
#define NV_PGRAPH_DEBUG_2_PREROP_COALESCE_3D_DISABLED    0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_2_PREROP_COALESCE_3D_ENABLED     0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_2_PREROP_COALESCE_3D_INIT        0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_2_PREROP_COALESCE_2D                    4:4 /* RWIVF */
#define NV_PGRAPH_DEBUG_2_PREROP_COALESCE_2D_DISABLED    0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_2_PREROP_COALESCE_2D_ENABLED     0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_2_PREROP_COALESCE_2D_INIT        0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_2_PREROP_TRIEND_FLUSH                   5:5 /* RWIVF */
#define NV_PGRAPH_DEBUG_2_PREROP_TRIEND_FLUSH_DISABLED   0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_2_PREROP_TRIEND_FLUSH_ENABLED    0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_2_PREROP_TRIEND_FLUSH_INIT       0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_2_PREROP_DITHER_3D                      6:6 /* RWIVF */
#define NV_PGRAPH_DEBUG_2_PREROP_DITHER_3D_DISABLED      0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_2_PREROP_DITHER_3D_ENABLED       0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_2_PREROP_DITHER_3D_INIT          0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_2_PREROP_DITHER_2D                      7:7 /* RWIVF */
#define NV_PGRAPH_DEBUG_2_PREROP_DITHER_2D_DISABLED      0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_2_PREROP_DITHER_2D_ENABLED       0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_2_PREROP_DITHER_2D_INIT          0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_2_PREROP_TILE3D2HIGH                    9:8 /* RWIVF */
#define NV_PGRAPH_DEBUG_2_PREROP_TILE3D2HIGH_DISABLED    0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_2_PREROP_TILE3D2HIGH_AUTO1       0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_2_PREROP_TILE3D2HIGH_AUTO2       0x00000002 /* RW--V */
#define NV_PGRAPH_DEBUG_2_PREROP_TILE3D2HIGH_ENABLED     0x00000003 /* RW--V */
#define NV_PGRAPH_DEBUG_2_PREROP_TILE3D2HIGH_INIT        0x00000002 /* RW--V */
#define NV_PGRAPH_DEBUG_2_PREROP_SWALLOW_REQS                 10:10 /* RWIVF */
#define NV_PGRAPH_DEBUG_2_PREROP_SWALLOW_REQS_DISABLED   0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_2_PREROP_SWALLOW_REQS_ENABLED    0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_2_PREROP_SWALLOW_REQS_INIT       0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_2_PREROP_ALPHA_ABORT                  11:11 /* RWIVF */
#define NV_PGRAPH_DEBUG_2_PREROP_ALPHA_ABORT_DISABLED    0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_2_PREROP_ALPHA_ABORT_ENABLED     0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_2_PREROP_ALPHA_ABORT_INIT        0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_2_PREROP_FIXED_ADRS                   12:12 /* RWIVF */
#define NV_PGRAPH_DEBUG_2_PREROP_FIXED_ADRS_DISABLED     0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_2_PREROP_FIXED_ADRS_ENABLED      0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_2_PREROP_FIXED_ADRS_INIT         0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_2_PREROP_DITHER_RANGE                 13:13 /* RWIVF */
#define NV_PGRAPH_DEBUG_2_PREROP_DITHER_RANGE_DISABLED   0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_2_PREROP_DITHER_RANGE_ENABLED    0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_2_PREROP_DITHER_RANGE_INIT       0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_2_PREROP_PITCH_CHECK_2D               14:14 /* RWIVF */
#define NV_PGRAPH_DEBUG_2_PREROP_PITCH_CHECK_2D_DISABLED 0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_2_PREROP_PITCH_CHECK_2D_ENABLED  0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_2_PREROP_PITCH_CHECK_2D_INIT     0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_2_PREROP_PITCH_CHECK_3D               15:15 /* RWIVF */
#define NV_PGRAPH_DEBUG_2_PREROP_PITCH_CHECK_3D_DISABLED 0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_2_PREROP_PITCH_CHECK_3D_ENABLED  0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_2_PREROP_PITCH_CHECK_3D_INIT     0x00000000 /* RW--V */
// NV10/NV15
#define NV_PGRAPH_DEBUG_2_ROP_SPARE1                          16:16 /* RWIVF */
#define NV_PGRAPH_DEBUG_2_ROP_SPARE1_DISABLED            0x00000000 /* RWI-V */
// NV11
#define NV_PGRAPH_DEBUG_2_ROP_NV11_OPTS                       16:16 /* RWIVF */
#define NV_PGRAPH_DEBUG_2_ROP_NV11_OPTS_DISABLED         0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_2_ROP_NV11_OPTS_ENABLED          0x00000001 /* RWI-V */
#define NV_PGRAPH_DEBUG_2_ROP_NV11_OPTS_INIT             0x00000001 /* RWI-V */
#define NV_PGRAPH_DEBUG_2_ROP_TILEVIOL                        17:17 /* RWIVF */
#define NV_PGRAPH_DEBUG_2_ROP_TILEVIOL_DISABLED          0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_2_ROP_TILEVIOL_ENABLED           0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_2_ROP_TILEVIOL_INIT              0x00000000 /* RW0-V */
#define NV_PGRAPH_DEBUG_2_ROP_SEP_ZC_READS                    18:18 /* RWIVF */
#define NV_PGRAPH_DEBUG_2_ROP_SEP_ZC_READS_DISABLED      0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_2_ROP_SEP_ZC_READS_ENABLED       0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_2_ROP_SEP_ZC_READS_INIT          0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_2_ROP_DITHER_3D                       19:19 /* RWIVF */
#define NV_PGRAPH_DEBUG_2_ROP_DITHER_3D_DISABLED         0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_2_ROP_DITHER_3D_ENABLED          0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_2_ROP_DITHER_3D_INIT             0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_2_ROP_DITHER_2D                       20:20 /* RWIVF */
#define NV_PGRAPH_DEBUG_2_ROP_DITHER_2D_DISABLED         0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_2_ROP_DITHER_2D_ENABLED          0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_2_ROP_DITHER_2D_INIT             0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_2_ROP_EARLY_ZABORT                    21:21 /* RWIVF */
#define NV_PGRAPH_DEBUG_2_ROP_EARLY_ZABORT_DISABLED      0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_2_ROP_EARLY_ZABORT_ENABLED       0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_2_ROP_EARLY_ZABORT_INIT          0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_2_ROP_BLIT_MULTILINE                  22:22 /* RWIVF */
#define NV_PGRAPH_DEBUG_2_ROP_BLIT_MULTILINE_DISABLED    0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_2_ROP_BLIT_MULTILINE_ENABLED     0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_2_ROP_BLIT_MULTILINE_INIT        0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_2_ROP_BLIT_DST_LIMIT                  23:23 /* RWIVF */
#define NV_PGRAPH_DEBUG_2_ROP_BLIT_DST_LIMIT_DISABLED    0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_2_ROP_BLIT_DST_LIMIT_ENABLED     0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_2_ROP_BLIT_DST_LIMIT_INIT        0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_2_ROP_SDR_FAST_BLEND                  24:24 /* RWIVF */
#define NV_PGRAPH_DEBUG_2_ROP_SDR_FAST_BLEND_DISABLED    0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_2_ROP_SDR_FAST_BLEND_ENABLED     0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_2_ROP_SDR_FAST_BLEND_INIT        0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_2_ROP_2D_FAST_CONV                    25:25 /* RWIVF */
#define NV_PGRAPH_DEBUG_2_ROP_2D_FAST_CONV_DISABLED      0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_2_ROP_2D_FAST_CONV_ENABLED       0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_2_ROP_2D_FAST_CONV_INIT          0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_2_ROP_HPREQ                           26:26 /* RWIVF */
#define NV_PGRAPH_DEBUG_2_ROP_HPREQ_DISABLED             0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_2_ROP_HPREQ_ENABLED              0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_2_ROP_HPREQ_INIT                 0x00000001 /* RW--V */
// NV10/NV15
#define NV_PGRAPH_DEBUG_2_ROP_BITBUCKET                       27:27 /* RWIVF */
#define NV_PGRAPH_DEBUG_2_ROP_BITBUCKET_DISABLED         0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_2_ROP_BITBUCKET_ENABLED          0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_2_ROP_BITBUCKET_INIT             0x00000000 /* RW--V */
// NV11
#define NV_PGRAPH_DEBUG_2_ROP_ALLOW_ZCMIX                     27:27 /* RWIVF */
#define NV_PGRAPH_DEBUG_2_ROP_ALLOW_ZCMIX_DISABLED       0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_2_ROP_ALLOW_ZCMIX_ENABLED        0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_2_ROP_ALLOW_ZCMIX_INIT           0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_2_ROP_FIXED_ADRS                      28:28 /* RWIVF */
#define NV_PGRAPH_DEBUG_2_ROP_FIXED_ADRS_DISABLED        0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_2_ROP_FIXED_ADRS_ENABLED         0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_2_ROP_FIXED_ADRS_INIT            0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_2_ROP_FAST_KEEP_DST                   29:29 /* RWIVF */
#define NV_PGRAPH_DEBUG_2_ROP_FAST_KEEP_DST_DISABLED     0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_2_ROP_FAST_KEEP_DST_ENABLED      0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_2_ROP_FAST_KEEP_DST_INIT         0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_2_ROP_FORCE_CREAD                     30:30 /* RWIVF */
#define NV_PGRAPH_DEBUG_2_ROP_FORCE_CREAD_DISABLED       0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_2_ROP_FORCE_CREAD_ENABLED        0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_2_ROP_FORCE_CREAD_INIT           0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_2_ROP_FORCE_ZREAD                     31:31 /* RWIVF */
#define NV_PGRAPH_DEBUG_2_ROP_FORCE_ZREAD_DISABLED       0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_2_ROP_FORCE_ZREAD_ENABLED        0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_2_ROP_FORCE_ZREAD_INIT           0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_2_ROP_FAST_SYNC                       24:24 /* RWIVF */
#define NV_PGRAPH_DEBUG_2_ROP_FAST_SYNC_INIT             0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3                                0x0040008C /* RW-4R */
#define NV_PGRAPH_DEBUG_3_FAST_DATA_STRTCH                      4:4 /* RWIVF */
#define NV_PGRAPH_DEBUG_3_FAST_DATA_STRTCH_DISABLED      0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_3_FAST_DATA_STRTCH_ENABLED       0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3_FAST_DATA_STRTCH_INIT          0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3_FAST_3D_SHADOW_DATA                   5:5 /* RWIVF */
#define NV_PGRAPH_DEBUG_3_FAST_3D_SHADOW_DATA_DISABLED   0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_3_FAST_3D_SHADOW_DATA_ENABLED    0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3_FAST_3D_SHADOW_DATA_INIT       0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3_FAST_DMA_READ                         6:6 /* RWIVF */
#define NV_PGRAPH_DEBUG_3_FAST_DMA_READ_DISABLED         0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_3_FAST_DMA_READ_ENABLED          0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3_FAST_DMA_READ_INIT             0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_3_ZFLUSH                                7:7 /* CWIVF */
#define NV_PGRAPH_DEBUG_3_ZFLUSH_IGNORE                  0x00000000 /* CWI-V */
#define NV_PGRAPH_DEBUG_3_ZFLUSH_ACTIVATE                0x00000001 /* -W--T */
#define NV_PGRAPH_DEBUG_3_IDLE_FILTER                         10:10 /* RWIVF */
#define NV_PGRAPH_DEBUG_3_IDLE_FILTER_DISABLED           0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_3_IDLE_FILTER_ENABLED            0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3_IDLE_FILTER_INIT               0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_3_INHIBIT_IMCLASS_BLOCK               11:11 /* RWIVF */
#define NV_PGRAPH_DEBUG_3_INHIBIT_IMCLASS_BLOCK_DISABLED 0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_3_INHIBIT_IMCLASS_BLOCK_ENABLED  0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3_INHIBIT_IMCLASS_BLOCK_INIT     0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_3_SYNCHRONIZE                         12:12 /* RWIVF */
#define NV_PGRAPH_DEBUG_3_SYNCHRONIZE_DISABLED           0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_3_SYNCHRONIZE_ENABLED            0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3_SYNCHRONIZE_INIT               0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_3_D3D_STATE3D                         13:13 /* RWIVF */
#define NV_PGRAPH_DEBUG_3_D3D_STATE3D_DISABLED           0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_3_D3D_STATE3D_ENABLED            0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3_D3D_STATE3D_INIT               0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_3_OBJECT_RELOAD                       14:14 /* RWIVF */
#define NV_PGRAPH_DEBUG_3_OBJECT_RELOAD_DISABLED         0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_3_OBJECT_RELOAD_ENABLED          0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3_OBJECT_RELOAD_INIT             0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_3_PM_TRIGGER                          15:15 /* RWIVF */
#define NV_PGRAPH_DEBUG_3_PM_TRIGGER_DISABLED            0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_3_PM_TRIGGER_ENABLED             0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3_PM_TRIGGER_INIT                0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_3_ALTARCH                             16:16 /* RWIVF */
#define NV_PGRAPH_DEBUG_3_ALTARCH_DISABLED               0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_3_ALTARCH_ENABLED                0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3_ALTARCH_INIT                   0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_3_SINGLE_CYCLE_LOAD                   17:17 /* RWIVF */
#define NV_PGRAPH_DEBUG_3_SINGLE_CYCLE_LOAD_DISABLED     0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_3_SINGLE_CYCLE_LOAD_ENABLED      0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3_SINGLE_CYCLE_LOAD_INIT         0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3_BILINEAR_3D                         18:18 /* RWIVF */
#define NV_PGRAPH_DEBUG_3_BILINEAR_3D_DISABLED           0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_3_BILINEAR_3D_ENABLED            0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3_BILINEAR_3D_INIT               0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3_VOLATILE_RESET                      19:19 /* RWIVF */
#define NV_PGRAPH_DEBUG_3_VOLATILE_RESET_DISABLED        0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_3_VOLATILE_RESET_ENABLED         0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3_VOLATILE_RESET_INIT            0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3_DATA_CHECK                          20:20 /* RWIVF */
#define NV_PGRAPH_DEBUG_3_DATA_CHECK_DISABLED            0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_3_DATA_CHECK_ENABLED             0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3_DATA_CHECK_INIT                0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3_DATA_CHECK_FAIL                     21:21 /* RWIVF */
#define NV_PGRAPH_DEBUG_3_DATA_CHECK_FAIL_DISABLED       0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_3_DATA_CHECK_FAIL_ENABLED        0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3_DATA_CHECK_FAIL_INIT           0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_3_FORMAT_CHECK                        22:22 /* RWIVF */
#define NV_PGRAPH_DEBUG_3_FORMAT_CHECK_DISABLED          0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_3_FORMAT_CHECK_ENABLED           0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3_FORMAT_CHECK_INIT              0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3_DMA_CHECK                           23:23 /* RWIVF */
#define NV_PGRAPH_DEBUG_3_DMA_CHECK_DISABLED             0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_3_DMA_CHECK_ENABLED              0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3_DMA_CHECK_INIT                 0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3_STATE_CHECK                         24:24 /* RWIVF */
#define NV_PGRAPH_DEBUG_3_STATE_CHECK_DISABLED           0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_3_STATE_CHECK_ENABLED            0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3_STATE_CHECK_INIT               0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3_IMAGE_64BIT                         25:25 /* RWIVF */
#define NV_PGRAPH_DEBUG_3_IMAGE_64BIT_DISABLED           0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_3_IMAGE_64BIT_ENABLED            0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3_IMAGE_64BIT_INIT               0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_3_CELSIUS_64BIT                       26:26 /* RWIVF */
#define NV_PGRAPH_DEBUG_3_CELSIUS_64BIT_DISABLED         0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_3_CELSIUS_64BIT_ENABLED          0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3_CELSIUS_64BIT_INIT             0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3_STATE3D_CHECK                       27:27 /* RWIVF */
#define NV_PGRAPH_DEBUG_3_STATE3D_CHECK_DISABLED         0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_3_STATE3D_CHECK_ENABLED          0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3_STATE3D_CHECK_INIT             0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_3_XFMODE_COALESCE                     28:28 /* RWIVF */
#define NV_PGRAPH_DEBUG_3_XFMODE_COALESCE_DISABLED       0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_3_XFMODE_COALESCE_ENABLED        0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3_XFMODE_COALESCE_INIT           0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3_CTX_METHODS                         29:29 /* RWIVF */
#define NV_PGRAPH_DEBUG_3_CTX_METHODS_DISABLED           0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_3_CTX_METHODS_ENABLED            0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3_CTX_METHODS_INIT               0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3_OP_METHODS                          30:30 /* RWIVF */
#define NV_PGRAPH_DEBUG_3_OP_METHODS_DISABLED            0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_3_OP_METHODS_ENABLED             0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3_OP_METHODS_INIT                0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3_IGNORE_PATCHVALID                   31:31 /* RWIVF */
#define NV_PGRAPH_DEBUG_3_IGNORE_PATCHVALID_DISABLED     0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_3_IGNORE_PATCHVALID_ENABLED      0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3_IGNORE_PATCHVALID_INIT         0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_4                                0x00400090 /* RW-4R */
#define NV_PGRAPH_DEBUG_4_COLOR_SPARE1                          0:0 /* RWIVF */
#define NV_PGRAPH_DEBUG_4_COLOR_SPARE1_DISABLED          0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_4_COLOR_SPARE1_ENABLED           0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_4_COLOR_SPARE2                          1:1 /* RWIVF */
#define NV_PGRAPH_DEBUG_4_COLOR_SPARE2_DISABLE           0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_4_COLOR_SPARE2_ENABLED           0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_4_PIPE_SPARE1                           2:2 /* RWIVF */
#define NV_PGRAPH_DEBUG_4_PIPE_SPARE1_DISABLED           0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_4_PIPE_SPARE1_ENABLED            0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_4_PIPE_SPARE2                           3:3 /* RWIVF */
#define NV_PGRAPH_DEBUG_4_PIPE_SPARE2_DISABLE            0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_4_PIPE_SPARE2_ENABLED            0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_4_RSTR2D_SPARE1                         4:4 /* RWIVF */
#define NV_PGRAPH_DEBUG_4_RSTR2D_SPARE1_DISABLED         0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_4_RSTR2D_SPARE1_ENABLED          0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_4_RSTR2D_SPARE2                         5:5 /* RWIVF */
#define NV_PGRAPH_DEBUG_4_RSTR2D_SPARE2_DISABLE          0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_4_RSTR2D_SPARE2_ENABLED          0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_4_RSTR3D_SPARE1                         6:6 /* RWIVF */
#define NV_PGRAPH_DEBUG_4_RSTR3D_SPARE1_DISABLED         0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_4_RSTR3D_SPARE1_ENABLED          0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_4_RSTR3D_SPARE2                         7:7 /* RWIVF */
#define NV_PGRAPH_DEBUG_4_RSTR3D_SPARE2_DISABLE          0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_4_RSTR3D_SPARE2_ENABLED          0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_4_TEX_SPARE1                            8:8 /* RWIVF */
#define NV_PGRAPH_DEBUG_4_TEX_SPARE1_DISABLED            0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_4_TEX_SPARE1_ENABLED             0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_4_TEX_SPARE2                            9:9 /* RWIVF */
#define NV_PGRAPH_DEBUG_4_TEX_SPARE2_DISABLE             0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_4_TEX_SPARE2_ENABLED             0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_4_TEXMATH_SPARE1                      10:10 /* RWIVF */
#define NV_PGRAPH_DEBUG_4_TEXMATH_SPARE1_DISABLED        0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_4_TEXMATH_SPARE1_ENABLED         0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_4_TEXMATH_SPARE2                      11:11 /* RWIVF */
#define NV_PGRAPH_DEBUG_4_TEXMATH_SPARE2_DISABLE         0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_4_TEXMATH_SPARE2_ENABLED         0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_4_LIT_SPARE1                          12:12 /* RWIVF */
#define NV_PGRAPH_DEBUG_4_LIT_SPARE1_DISABLED            0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_4_LIT_SPARE1_ENABLED             0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_4_LIT_SPARE2                          13:13 /* RWIVF */
#define NV_PGRAPH_DEBUG_4_LIT_SPARE2_DISABLE             0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_4_LIT_SPARE2_ENABLED             0x00000001 /* RW--V */
// NV15 defines
#define NV_PGRAPH_DEBUG_4_SWATHCONTROL                        15:14 /* RWIVF */
#define NV_PGRAPH_DEBUG_4_SWATHCONTROL_MUL2              0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_4_SWATHCONTROL_MUL1P5            0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_4_SWATHCONTROL_MUL1              0x00000002 /* RW--V */
#define NV_PGRAPH_DEBUG_4_SWATHCONTROL_DISABLED          0x00000003 /* RW--V */
// NV10 defines
#define NV_PGRAPH_DEBUG_4_SETUP_SPARE1                        14:14 /* RWIVF */
#define NV_PGRAPH_DEBUG_4_SETUP_SPARE1_DISABLED          0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_4_SETUP_SPARE1_ENABLED           0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_4_SETUP_SPARE2                        15:15 /* RWIVF */
#define NV_PGRAPH_DEBUG_4_SETUP_SPARE2_DISABLE           0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_4_SETUP_SPARE2_ENABLED           0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_4_XF_SPARE1                           16:16 /* RWIVF */
#define NV_PGRAPH_DEBUG_4_XF_SPARE1_DISABLED             0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_4_XF_SPARE1_ENABLED              0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_4_XF_SPARE2                           17:17 /* RWIVF */
#define NV_PGRAPH_DEBUG_4_XF_SPARE2_DISABLE              0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_4_XF_SPARE2_ENABLED              0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_4_CFFIFO_SPARE1                       18:18 /* RWIVF */
#define NV_PGRAPH_DEBUG_4_CFFIFO_SPARE1_DISABLED         0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_4_CFFIFO_SPARE1_ENABLED          0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_4_CFFIFO_SPARE2                       19:19 /* RWIVF */
#define NV_PGRAPH_DEBUG_4_CFFIFO_SPARE2_DISABLE          0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_4_CFFIFO_SPARE2_ENABLED          0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_4_IDX_SPARE1                          20:20 /* RWIVF */
#define NV_PGRAPH_DEBUG_4_IDX_SPARE1_DISABLED            0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_4_IDX_SPARE1_ENABLED             0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_4_IDX_SPARE2                          21:21 /* RWIVF */
#define NV_PGRAPH_DEBUG_4_IDX_SPARE2_DISABLE             0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_4_IDX_SPARE2_ENABLED             0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_4_ASSM_SPARE1                         22:22 /* RWIVF */
#define NV_PGRAPH_DEBUG_4_ASSM_SPARE1_DISABLED           0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_4_ASSM_SPARE1_ENABLED            0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_4_ASSM_SPARE2                         23:23 /* RWIVF */
#define NV_PGRAPH_DEBUG_4_ASSM_SPARE2_DISABLE            0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_4_ASSM_SPARE2_ENABLED            0x00000001 /* RW--V */
#define NV_PGRAPH_NSTATUS                                0x00400104 /* RW-4R */
#define NV_PGRAPH_NSTATUS_STATE_IN_USE                        23:23 /* RWIVF */
#define NV_PGRAPH_NSTATUS_STATE_IN_USE_NOT_PENDING       0x00000000 /* RWI-V */
#define NV_PGRAPH_NSTATUS_STATE_IN_USE_PENDING           0x00000001 /* RW--V */
#define NV_PGRAPH_NSTATUS_INVALID_STATE                       24:24 /* RWIVF */
#define NV_PGRAPH_NSTATUS_INVALID_STATE_NOT_PENDING      0x00000000 /* RWI-V */
#define NV_PGRAPH_NSTATUS_INVALID_STATE_PENDING          0x00000001 /* RW--V */
#define NV_PGRAPH_NSTATUS_BAD_ARGUMENT                        25:25 /* RWIVF */
#define NV_PGRAPH_NSTATUS_BAD_ARGUMENT_NOT_PENDING       0x00000000 /* RWI-V */
#define NV_PGRAPH_NSTATUS_BAD_ARGUMENT_PENDING           0x00000001 /* RW--V */
#define NV_PGRAPH_NSTATUS_PROTECTION_FAULT                    26:26 /* RWIVF */
#define NV_PGRAPH_NSTATUS_PROTECTION_FAULT_NOT_PENDING   0x00000000 /* RWI-V */
#define NV_PGRAPH_NSTATUS_PROTECTION_FAULT_PENDING       0x00000001 /* RW--V */
#define NV_PGRAPH_CTX_CONTROL                            0x00400144 /* RW-4R */
#define NV_PGRAPH_CTX_CONTROL_MINIMUM_TIME                      1:0 /* RWIVF */
#define NV_PGRAPH_CTX_CONTROL_MINIMUM_TIME_33US          0x00000000 /* RWI-V */
#define NV_PGRAPH_CTX_CONTROL_MINIMUM_TIME_262US         0x00000001 /* RW--V */
#define NV_PGRAPH_CTX_CONTROL_MINIMUM_TIME_2MS           0x00000002 /* RW--V */
#define NV_PGRAPH_CTX_CONTROL_MINIMUM_TIME_17MS          0x00000003 /* RW--V */
#define NV_PGRAPH_CTX_CONTROL_TIME                              8:8 /* RWIVF */
#define NV_PGRAPH_CTX_CONTROL_TIME_EXPIRED               0x00000000 /* RWI-V */
#define NV_PGRAPH_CTX_CONTROL_TIME_NOT_EXPIRED           0x00000001 /* RW--V */
#define NV_PGRAPH_CTX_CONTROL_CHID                            16:16 /* RWIVF */
#define NV_PGRAPH_CTX_CONTROL_CHID_INVALID               0x00000000 /* RWI-V */
#define NV_PGRAPH_CTX_CONTROL_CHID_VALID                 0x00000001 /* RW--V */
#define NV_PGRAPH_CTX_CONTROL_CHANGE                          20:20 /* R--VF */
#define NV_PGRAPH_CTX_CONTROL_CHANGE_UNAVAILABLE         0x00000000 /* R---V */
#define NV_PGRAPH_CTX_CONTROL_CHANGE_AVAILABLE           0x00000001 /* R---V */
#define NV_PGRAPH_CTX_CONTROL_SWITCHING                       24:24 /* RWIVF */
#define NV_PGRAPH_CTX_CONTROL_SWITCHING_IDLE             0x00000000 /* RWI-V */
#define NV_PGRAPH_CTX_CONTROL_SWITCHING_BUSY             0x00000001 /* RW--V */
#define NV_PGRAPH_CTX_CONTROL_DEVICE                          28:28 /* RWIVF */
#define NV_PGRAPH_CTX_CONTROL_DEVICE_DISABLED            0x00000000 /* RWI-V */
#define NV_PGRAPH_CTX_CONTROL_DEVICE_ENABLED             0x00000001 /* RW--V */
#define NV_PGRAPH_CTX_USER                               0x00400148 /* RW-4R */
#define NV_PGRAPH_CTX_USER_SUBCH                              15:13 /* RWIVF */
#define NV_PGRAPH_CTX_USER_SUBCH_0                       0x00000000 /* RWI-V */
#define NV_PGRAPH_CTX_USER_CHID                               28:24 /* RWIVF */
#define NV_PGRAPH_CTX_USER_CHID_0                        0x00000000 /* RWI-V */
#define NV_PGRAPH_CTX_USER_SINGLE_STEP                        31:31 /* RWIVF */
#define NV_PGRAPH_CTX_USER_SINGLE_STEP_DISABLED          0x00000000 /* RWI-V */
#define NV_PGRAPH_CTX_USER_SINGLE_STEP_ENABLED           0x00000001 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1                            0x0040014C /* RW-4R */
#define NV_PGRAPH_CTX_SWITCH2                            0x00400150 /* RW-4R */
#define NV_PGRAPH_CTX_SWITCH2_MONO_FORMAT                       1:0 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH2_MONO_FORMAT_INVALID              0x00 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_MONO_FORMAT_CGA6_M1              0x01 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_MONO_FORMAT_LE_M1                0x02 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT                     13:8 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_INVALID             0x00 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_Y8               0x01 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_X16A8Y8          0x02 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_X24Y8            0x03 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_A1R5G5B5         0x06 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_X1R5G5B5         0x07 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_X16A1R5G5B5      0x08 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_X17R5G5B5        0x09 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_R5G6B5           0x0A /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_A16R5G6B5        0x0B /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_X16R5G6B5        0x0C /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_A8R8G8B8         0x0D /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_X8R8G8B8         0x0E /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_Y16              0x0F /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_A16Y16           0x10 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_X16Y16           0x11 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_V8YB8U8YA8       0x12 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_YB8V8YA8U8       0x13 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_Y32              0x14 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_AY8              0x15 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_EYB8ECR8EYA8ECB8 0x16 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_ECR8EYB8ECB8EYA8 0x17 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_NOTIFY_INSTANCE                 31:16 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH2_NOTIFY_INSTANCE_INVALID        0x0000 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH3                            0x00400154 /* RW-4R */
#define NV_PGRAPH_CTX_SWITCH3_DMA_INSTANCE_0                   15:0 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH3_DMA_INSTANCE_0_INVALID         0x0000 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH3_DMA_INSTANCE_1                  31:16 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH3_DMA_INSTANCE_1_INVALID         0x0000 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH4                            0x00400158 /* RW-4R */
#define NV_PGRAPH_CTX_SWITCH4_USER_INSTANCE                    15:0 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH4_USER_INSTANCE_INVALID          0x0000 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH5                            0x0040015C /* RW-4R */
#define NV_PGRAPH_CTX_SWITCH5_TRAP_BITS                        31:0 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH5_TRAP_BITS_DISABLED             0x0000 /* RW--V */
#define NV_PGRAPH_CTX_CACHE1(i)                  (0x00400160+(i)*4) /* RW-4A */
#define NV_PGRAPH_CTX_CACHE1__SIZE_1                              8 /*       */
#define NV_PGRAPH_CTX_CACHE1_GRCLASS                            7:0 /* RWXVF */
#define NV_PGRAPH_CTX_CACHE1_CHROMA_KEY                       12:12 /* RWXVF */
#define NV_PGRAPH_CTX_CACHE1_USER_CLIP                        13:13 /* RWXVF */
#define NV_PGRAPH_CTX_CACHE1_SWIZZLE                          14:14 /* RWXVF */
#define NV_PGRAPH_CTX_CACHE1_PATCH_CONFIG                     17:15 /* RWXVF */
#define NV_PGRAPH_CTX_CACHE1_SYNCHRONIZE                      18:18 /* RWXVF */
#define NV_PGRAPH_CTX_CACHE1_ENDIAN_MODE                      19:19 /* RWXVF */
#define NV_PGRAPH_CTX_CACHE1_DITHER_MODE                      21:20 /* RWXVF */
#define NV_PGRAPH_CTX_CACHE1_CLASS_TYPE                       22:22 /* RWXVF */
#define NV_PGRAPH_CTX_CACHE1_SINGLE_STEP                      23:23 /* RWXVF */
#define NV_PGRAPH_CTX_CACHE1_PATCH_STATUS                     24:24 /* RWXVF */
#define NV_PGRAPH_CTX_CACHE1_CONTEXT_SURFACE                  25:25 /* RWXVF */
#define NV_PGRAPH_CTX_CACHE1_CONTEXT_SURFACE0                 25:25 /* RWXVF */
#define NV_PGRAPH_CTX_CACHE1_CONTEXT_SURFACE1                 26:26 /* RWXVF */
#define NV_PGRAPH_CTX_CACHE1_CONTEXT_PATTERN                  27:27 /* RWXVF */
#define NV_PGRAPH_CTX_CACHE1_CONTEXT_ROP                      28:28 /* RWXVF */
#define NV_PGRAPH_CTX_CACHE1_CONTEXT_BETA1                    29:29 /* RWXVF */
#define NV_PGRAPH_CTX_CACHE1_CONTEXT_BETA4                    30:30 /* RWXVF */
#define NV_PGRAPH_CTX_CACHE2(i)                  (0x00400180+(i)*4) /* RW-4A */
#define NV_PGRAPH_CTX_CACHE2__SIZE_1                              8 /*       */
#define NV_PGRAPH_CTX_CACHE2_MONO_FORMAT                        1:0 /* RWXVF */
#define NV_PGRAPH_CTX_CACHE2_COLOR_FORMAT                      13:8 /* RWXVF */
#define NV_PGRAPH_CTX_CACHE2_NOTIFY_INSTANCE                  31:16 /* RWXVF */
#define NV_PGRAPH_CTX_CACHE3(i)                  (0x004001a0+(i)*4) /* RW-4A */
#define NV_PGRAPH_CTX_CACHE3__SIZE_1                              8 /*       */
#define NV_PGRAPH_CTX_CACHE3_DMA_INSTANCE_0                    15:0 /* RWXVF */
#define NV_PGRAPH_CTX_CACHE3_DMA_INSTANCE_1                   31:16 /* RWXVF */
#define NV_PGRAPH_CTX_CACHE4(i)                  (0x004001c0+(i)*4) /* RW-4A */
#define NV_PGRAPH_CTX_CACHE4__SIZE_1                              8 /*       */
#define NV_PGRAPH_CTX_CACHE4_USER_INSTANCE                     15:0 /* RWXVF */
#define NV_PGRAPH_CTX_CACHE5(i)                  (0x004001e0+(i)*4) /* RW-4A */
#define NV_PGRAPH_CTX_CACHE5__SIZE_1                              8 /*       */
#define NV_PGRAPH_CTX_CACHE5_TRAP_BITS                         31:0 /* RWXVF */
#define NV_PGRAPH_FFINTFC_FIFO_0(i)              (0x00400730+(i)*4) /* RW-4A */
#define NV_PGRAPH_FFINTFC_FIFO_0__SIZE_1                          4 /*       */
#define NV_PGRAPH_FFINTFC_FIFO_0_MTHD                          12:2 /* RWXVF */
#define NV_PGRAPH_FFINTFC_FIFO_0_MTHD_CTX_SWITCH         0x00000000 /* RW--V */
#define NV_PGRAPH_FFINTFC_FIFO_0_SUBCH                        18:16 /* RWXVF */
#define NV_PGRAPH_FFINTFC_FIFO_0_SUBCH_0                 0x00000000 /* RW--V */
#define NV_PGRAPH_FFINTFC_FIFO_0_SUBCH_1                 0x00000001 /* RW--V */
#define NV_PGRAPH_FFINTFC_FIFO_0_SUBCH_2                 0x00000002 /* RW--V */
#define NV_PGRAPH_FFINTFC_FIFO_0_SUBCH_3                 0x00000003 /* RW--V */
#define NV_PGRAPH_FFINTFC_FIFO_0_SUBCH_4                 0x00000004 /* RW--V */
#define NV_PGRAPH_FFINTFC_FIFO_0_SUBCH_5                 0x00000005 /* RW--V */
#define NV_PGRAPH_FFINTFC_FIFO_0_SUBCH_6                 0x00000006 /* RW--V */
#define NV_PGRAPH_FFINTFC_FIFO_0_SUBCH_7                 0x00000007 /* RW--V */
#define NV_PGRAPH_FFINTFC_FIFO_0_TAG                          24:24 /* RWXVF */
#define NV_PGRAPH_FFINTFC_FIFO_0_TAG_MTHD                0x00000000 /* RW--V */
#define NV_PGRAPH_FFINTFC_FIFO_0_TAG_CHSW                0x00000001 /* RW--V */
#define NV_PGRAPH_FFINTFC_FIFO_0_DATAHIGH                     20:20 /* RWXVF */
#define NV_PGRAPH_FFINTFC_FIFO_0_DATAHIGH_INVALID        0x00000000 /* RW--V */
#define NV_PGRAPH_FFINTFC_FIFO_0_DATAHIGH_VALID          0x00000001 /* RW--V */
#define NV_PGRAPH_FFINTFC_FIFO_1(i)              (0x00400740+(i)*4) /* RW-4A */
#define NV_PGRAPH_FFINTFC_FIFO_1__SIZE_1                          4 /*       */
#define NV_PGRAPH_FFINTFC_FIFO_1_ARGUMENT                      31:0 /* RWXVF */
#define NV_PGRAPH_FFINTFC_FIFO_2(i)              (0x00400750+(i)*4) /* RW-4A */
#define NV_PGRAPH_FFINTFC_FIFO_2__SIZE_1                          4 /*       */
#define NV_PGRAPH_FFINTFC_FIFO_2_ARGUMENT                      31:0 /* RWXVF */
#define NV_PGRAPH_FFINTFC_FIFO_PTR                       0x00400760 /* RW-4R */
#define NV_PGRAPH_FFINTFC_FIFO_PTR_WRITE                        2:0 /* RWIVF */
#define NV_PGRAPH_FFINTFC_FIFO_PTR_WRITE_0               0x00000000 /* RWI-V */
#define NV_PGRAPH_FFINTFC_FIFO_PTR_READ                         6:4 /* RWIVF */
#define NV_PGRAPH_FFINTFC_FIFO_PTR_READ_0                0x00000000 /* RWI-V */
#define NV_PGRAPH_FFINTFC_ST2                            0x00400764 /* RW-4R */
#define NV_PGRAPH_FFINTFC_ST2_STATUS                          26:26 /* RWIVF */
#define NV_PGRAPH_FFINTFC_ST2_STATUS_INVALID             0x00000000 /* RWI-V */
#define NV_PGRAPH_FFINTFC_ST2_STATUS_VALID               0x00000001 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_MTHD                             12:2 /* RWIVF */
#define NV_PGRAPH_FFINTFC_ST2_MTHD_CTX_SWITCH            0x00000000 /* RWI-V */
#define NV_PGRAPH_FFINTFC_ST2_SUBCH                           18:16 /* RWIVF */
#define NV_PGRAPH_FFINTFC_ST2_SUBCH_0                    0x00000000 /* RWI-V */
#define NV_PGRAPH_FFINTFC_ST2_SUBCH_1                    0x00000001 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_SUBCH_2                    0x00000002 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_SUBCH_3                    0x00000003 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_SUBCH_4                    0x00000004 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_SUBCH_5                    0x00000005 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_SUBCH_6                    0x00000006 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_SUBCH_7                    0x00000007 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID                            24:20 /* RWIVF */
#define NV_PGRAPH_FFINTFC_ST2_CHID_0                     0x00000000 /* RWI-V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_1                     0x00000001 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_2                     0x00000002 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_3                     0x00000003 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_4                     0x00000004 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_5                     0x00000005 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_6                     0x00000006 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_7                     0x00000007 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_8                     0x00000008 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_9                     0x00000009 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_10                    0x0000000A /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_11                    0x0000000B /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_12                    0x0000000C /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_13                    0x0000000D /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_14                    0x0000000E /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_15                    0x0000000F /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_16                    0x00000010 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_17                    0x00000011 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_18                    0x00000012 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_19                    0x00000013 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_20                    0x00000014 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_21                    0x00000015 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_22                    0x00000016 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_23                    0x00000017 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_24                    0x00000018 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_25                    0x00000019 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_26                    0x0000001A /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_27                    0x0000001B /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_28                    0x0000001C /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_29                    0x0000001D /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_30                    0x0000001E /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_31                    0x0000001F /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_DATAHIGH                        25:25 /* RWIVF */
#define NV_PGRAPH_FFINTFC_ST2_DATAHIGH_INVALID           0x00000000 /* RWI-V */
#define NV_PGRAPH_FFINTFC_ST2_DATAHIGH_VALID             0x00000001 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_STATUS                     27:27 /* RWIVF */
#define NV_PGRAPH_FFINTFC_ST2_CHID_STATUS_INVALID        0x00000000 /* RWI-V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_STATUS_VALID          0x00000001 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHSWITCH                        28:28 /* RWIVF */
#define NV_PGRAPH_FFINTFC_ST2_CHSWITCH_CLEAR             0x00000000 /* RWI-V */
#define NV_PGRAPH_FFINTFC_ST2_CHSWITCH_SET               0x00000001 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_FIFOHOLD                        29:29 /* RWIVF */
#define NV_PGRAPH_FFINTFC_ST2_FIFOHOLD_CLEAR             0x00000000 /* RWI-V */
#define NV_PGRAPH_FFINTFC_ST2_FIFOHOLD_SET               0x00000001 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_DL                         0x00400768 /* RW-4R */
#define NV_PGRAPH_FFINTFC_ST2_DL_ARGUMENT                      31:0 /* RWIVF */
#define NV_PGRAPH_FFINTFC_ST2_DL_ARGUMENT_0              0x00000000 /* RWI-V */
#define NV_PGRAPH_FFINTFC_ST2_DH                         0x0040076c /* RW-4R */
#define NV_PGRAPH_FFINTFC_ST2_DH_ARGUMENT                      31:0 /* RWIVF */
#define NV_PGRAPH_FFINTFC_ST2_DH_ARGUMENT_0              0x00000000 /* RWI-V */
#define NV_PGRAPH_STATUS_STATE                                  0:0 /* R-IVF */
#define NV_PGRAPH_STATUS_STATE_IDLE                      0x00000000 /* R-I-V */
#define NV_PGRAPH_STATUS_STATE_BUSY                      0x00000001 /* R---V */
#define NV_PGRAPH_STATUS_WAITCRTC                               2:2 /* R-IVF */
#define NV_PGRAPH_STATUS_WAITCRTC_IDLE                   0x00000000 /* R-I-V */
#define NV_PGRAPH_STATUS_WAITCRTC_BUSY                   0x00000001 /* R---V */
#define NV_PGRAPH_STATUS_FE_3D                                  3:3 /* R-IVF */
#define NV_PGRAPH_STATUS_FE_3D_IDLE                      0x00000000 /* R-I-V */
#define NV_PGRAPH_STATUS_FE_3D_BUSY                      0x00000001 /* R---V */
#define NV_PGRAPH_STATUS_FE_2D                                  4:4 /* R-IVF */
#define NV_PGRAPH_STATUS_FE_2D_IDLE                      0x00000000 /* R-I-V */
#define NV_PGRAPH_STATUS_FE_2D_BUSY                      0x00000001 /* R---V */
#define NV_PGRAPH_STATUS_XY_LOGIC                               5:5 /* R-IVF */
#define NV_PGRAPH_STATUS_XY_LOGIC_IDLE                   0x00000000 /* R-I-V */
#define NV_PGRAPH_STATUS_XY_LOGIC_BUSY                   0x00000001 /* R---V */
#define NV_PGRAPH_STATUS_RASTERIZER_3D                          6:6 /* R-IVF */
#define NV_PGRAPH_STATUS_RASTERIZER_3D_IDLE              0x00000000 /* R-I-V */
#define NV_PGRAPH_STATUS_RASTERIZER_3D_BUSY              0x00000001 /* R---V */
#define NV_PGRAPH_STATUS_RASTERIZER_2D                          7:7 /* R-IVF */
#define NV_PGRAPH_STATUS_RASTERIZER_2D_IDLE              0x00000000 /* R-I-V */
#define NV_PGRAPH_STATUS_RASTERIZER_2D_BUSY              0x00000001 /* R---V */
#define NV_PGRAPH_STATUS_IDX                                    8:8 /* R-IVF */
#define NV_PGRAPH_STATUS_IDX_IDLE                        0x00000000 /* R-I-V */
#define NV_PGRAPH_STATUS_IDX_BUSY                        0x00000001 /* R---V */
#define NV_PGRAPH_STATUS_XF                                     9:9 /* R-IVF */
#define NV_PGRAPH_STATUS_XF_IDLE                         0x00000000 /* R-I-V */
#define NV_PGRAPH_STATUS_XF_BUSY                         0x00000001 /* R---V */
#define NV_PGRAPH_STATUS_VTX                                  10:10 /* R-IVF */
#define NV_PGRAPH_STATUS_VTX_IDLE                        0x00000000 /* R-I-V */
#define NV_PGRAPH_STATUS_VTX_BUSY                        0x00000001 /* R---V */
#define NV_PGRAPH_STATUS_COLOR                                11:11 /* R-IVF */
#define NV_PGRAPH_STATUS_COLOR_IDLE                      0x00000000 /* R-I-V */
#define NV_PGRAPH_STATUS_COLOR_BUSY                      0x00000001 /* R---V */
#define NV_PGRAPH_STATUS_PORT_NOTIFY                          12:12 /* R-IVF */
#define NV_PGRAPH_STATUS_PORT_NOTIFY_IDLE                0x00000000 /* R-I-V */
#define NV_PGRAPH_STATUS_PORT_NOTIFY_BUSY                0x00000001 /* R---V */
#define NV_PGRAPH_STATUS_PORT_DMA                             16:16 /* R-IVF */
#define NV_PGRAPH_STATUS_PORT_DMA_IDLE                   0x00000000 /* R-I-V */
#define NV_PGRAPH_STATUS_PORT_DMA_BUSY                   0x00000001 /* R---V */
#define NV_PGRAPH_STATUS_DMA_ENGINE                           17:17 /* R-IVF */
#define NV_PGRAPH_STATUS_DMA_ENGINE_IDLE                 0x00000000 /* R-I-V */
#define NV_PGRAPH_STATUS_DMA_ENGINE_BUSY                 0x00000001 /* R---V */
#define NV_PGRAPH_STATUS_DMA_NOTIFY                           20:20 /* R-IVF */
#define NV_PGRAPH_STATUS_DMA_NOTIFY_IDLE                 0x00000000 /* R-I-V */
#define NV_PGRAPH_STATUS_DMA_NOTIFY_BUSY                 0x00000001 /* R---V */
#define NV_PGRAPH_STATUS_DMA_BUFFER_NOTIFY                    21:21 /* R-IVF */
#define NV_PGRAPH_STATUS_DMA_BUFFER_NOTIFY_IDLE          0x00000000 /* R-I-V */
#define NV_PGRAPH_STATUS_DMA_BUFFER_NOTIFY_BUSY          0x00000001 /* R---V */
#define NV_PGRAPH_STATUS_DMA_WARNING_NOTIFY                   22:22 /* R-IVF */
#define NV_PGRAPH_STATUS_DMA_WARNING_NOTIFY_IDLE         0x00000000 /* R-I-V */
#define NV_PGRAPH_STATUS_DMA_WARNING_NOTIFY_BUSY         0x00000001 /* R---V */
#define NV_PGRAPH_STATUS_PIPE                                 23:23 /* R-IVF */
#define NV_PGRAPH_STATUS_PIPE_IDLE                       0x00000000 /* R-I-V */
#define NV_PGRAPH_STATUS_PIPE_BUSY                       0x00000001 /* R---V */
#define NV_PGRAPH_STATUS_TEXMATH                              24:24 /* R-IVF */
#define NV_PGRAPH_STATUS_TEXMATH_IDLE                    0x00000000 /* R-I-V */
#define NV_PGRAPH_STATUS_TEXMATH_BUSY                    0x00000001 /* R---V */
#define NV_PGRAPH_STATUS_SETUP                                25:25 /* R-IVF */
#define NV_PGRAPH_STATUS_SETUP_IDLE                      0x00000000 /* R-I-V */
#define NV_PGRAPH_STATUS_SETUP_BUSY                      0x00000001 /* R---V */
#define NV_PGRAPH_STATUS_CACHE                                26:26 /* R-IVF */
#define NV_PGRAPH_STATUS_CACHE_IDLE                      0x00000000 /* R-I-V */
#define NV_PGRAPH_STATUS_CACHE_BUSY                      0x00000001 /* R---V */
#define NV_PGRAPH_STATUS_LIGHTING                             27:27 /* R-IVF */
#define NV_PGRAPH_STATUS_LIGHTING_IDLE                   0x00000000 /* R-I-V */
#define NV_PGRAPH_STATUS_LIGHTING_BUSY                   0x00000001 /* R---V */
#define NV_PGRAPH_STATUS_PREROP                               28:28 /* R-IVF */
#define NV_PGRAPH_STATUS_PREROP_IDLE                     0x00000000 /* R-I-V */
#define NV_PGRAPH_STATUS_PREROP_BUSY                     0x00000001 /* R---V */
#define NV_PGRAPH_STATUS_ROP                                  29:29 /* R-IVF */
#define NV_PGRAPH_STATUS_ROP_IDLE                        0x00000000 /* R-I-V */
#define NV_PGRAPH_STATUS_ROP_BUSY                        0x00000001 /* R---V */
#define NV_PGRAPH_STATUS_PORT_USER                            30:30 /* R-IVF */
#define NV_PGRAPH_STATUS_PORT_USER_IDLE                  0x00000000 /* R-I-V */
#define NV_PGRAPH_STATUS_PORT_USER_BUSY                  0x00000001 /* R---V */
#define NV_PGRAPH_STATUS_PORT_FB                              31:31 /* R-IVF */
#define NV_PGRAPH_STATUS_PORT_FB_IDLE                    0x00000000 /* R-I-V */
#define NV_PGRAPH_STATUS_PORT_FB_BUSY                    0x00000001 /* R---V */
#define NV_PGRAPH_TRAPPED_ADDR                           0x00400704 /* R--4R */
#define NV_PGRAPH_TRAPPED_ADDR_MTHD                            12:2 /* R-XUF */
#define NV_PGRAPH_TRAPPED_ADDR_SUBCH                          18:16 /* R-XUF */
#define NV_PGRAPH_TRAPPED_ADDR_CHID                           24:20 /* R-XUF */
#define NV_PGRAPH_TRAPPED_ADDR_DHV                            28:28 /* R-XUF */
#define NV_PGRAPH_TRAPPED_DATA_LOW                       0x00400708 /* R--4R */
#define NV_PGRAPH_TRAPPED_DATA_LOW_VALUE                       31:0 /* R-XVF */
#define NV_PGRAPH_TRAPPED_DATA_HIGH                      0x0040070C /* R--4R */
#define NV_PGRAPH_TRAPPED_DATA_HIGH_VALUE                      31:0 /* R-XVF */
#define NV_PGRAPH_SURFACE                                0x00400710 /* RW-4R */
#define NV_PGRAPH_SURFACE_TYPE                                  1:0 /* RWIVF */
#define NV_PGRAPH_SURFACE_TYPE_INVALID                   0x00000000 /* RWI-V */
#define NV_PGRAPH_SURFACE_TYPE_NON_SWIZZLE               0x00000001 /* RW--V */
#define NV_PGRAPH_SURFACE_TYPE_SWIZZLE                   0x00000002 /* RW--V */
#define NV_PGRAPH_SURFACE_TYPE_0053                      0x00000001 /* RWC-V */
#define NV_PGRAPH_SURFACE_TYPE_0093                      0x00000001 /* RWC-V */
#define NV_PGRAPH_SURFACE_TYPE_1193                      0x00000001 /* RWC-V */
#define NV_PGRAPH_SURFACE_Z16_OVERRIDE                          4:4 /* RWIVF */
#define NV_PGRAPH_SURFACE_Z16_OVERRIDE_FALSE             0x00000000 /* RWI-V */
#define NV_PGRAPH_SURFACE_Z16_OVERRIDE_TRUE              0x00000001 /* RW--V */
#define NV_PGRAPH_SURFACE_Z16_OVERRIDE_0053              0x00000000 /* RWC-V */
#define NV_PGRAPH_SURFACE_Z16_OVERRIDE_0093              0x00000000 /* RWC-V */
#define NV_PGRAPH_SURFACE_Z16_OVERRIDE_1193              0x00000000 /* RWC-V */
#define NV_PGRAPH_SURFACE_WRITE_BLIT                           10:8 /* RWIVF */
#define NV_PGRAPH_SURFACE_WRITE_BLIT_0                   0x00000000 /* RWI-V */
#define NV_PGRAPH_SURFACE_WRITE_BLIT_009F                0x00000000 /* RWC-V */
#define NV_PGRAPH_SURFACE_READ_BLIT                           14:12 /* RWIVF */
#define NV_PGRAPH_SURFACE_READ_BLIT_0                    0x00000000 /* RWI-V */
#define NV_PGRAPH_SURFACE_READ_BLIT_009F                 0x00000000 /* RWC-V */
#define NV_PGRAPH_SURFACE_MODULO_BLIT                         18:16 /* RWIVF */
#define NV_PGRAPH_SURFACE_MODULO_BLIT_0                  0x00000000 /* RWI-V */
#define NV_PGRAPH_SURFACE_MODULO_BLIT_009F               0x00000001 /* RWC-V */
#define NV_PGRAPH_SURFACE_WRITE_3D                            22:20 /* RWIVF */
#define NV_PGRAPH_SURFACE_WRITE_3D_0                     0x00000000 /* RWI-V */
#define NV_PGRAPH_SURFACE_WRITE_3D_0096                  0x00000000 /* RWC-V */
#define NV_PGRAPH_SURFACE_READ_3D                             26:24 /* RWIVF */
#define NV_PGRAPH_SURFACE_READ_3D_0                      0x00000000 /* RWI-V */
#define NV_PGRAPH_SURFACE_READ_3D_0096                   0x00000000 /* RWC-V */
#define NV_PGRAPH_SURFACE_MODULO_3D                           30:28 /* RWIVF */
#define NV_PGRAPH_SURFACE_MODULO_3D_0                    0x00000000 /* RWI-V */
#define NV_PGRAPH_SURFACE_MODULO_3D_0096                 0x00000001 /* RWC-V */
/* NV_PGRAPH_INCREMENT is needed by dac code */
#ifdef NOTYET
#define NV_PGRAPH_INCREMENT                              0x0040071C /* RW-4R */
#define NV_PGRAPH_INCREMENT_READ_BLIT                           0:0 /* CWIVF */
#define NV_PGRAPH_INCREMENT_READ_BLIT_IGNORE             0x00000000 /* CWI-V */
#define NV_PGRAPH_INCREMENT_READ_BLIT_TRIGGER            0x00000001 /* -W--T */
#define NV_PGRAPH_INCREMENT_READ_3D                             1:1 /* CWIVF */
#define NV_PGRAPH_INCREMENT_READ_3D_IGNORE               0x00000000 /* CWI-V */
#define NV_PGRAPH_INCREMENT_READ_3D_TRIGGER              0x00000001 /* -W--T */
#endif
#define NV_PGRAPH_NOTIFY                                 0x00400718 /* RW-4R */
#define NV_PGRAPH_NOTIFY_BUFFER_REQ                             0:0 /* RWIVF */
#define NV_PGRAPH_NOTIFY_BUFFER_REQ_NOT_PENDING          0x00000000 /* RWI-V */
#define NV_PGRAPH_NOTIFY_BUFFER_REQ_PENDING              0x00000001 /* RW--V */
#define NV_PGRAPH_NOTIFY_BUFFER_STYLE                           8:8 /* RWIVF */
#define NV_PGRAPH_NOTIFY_BUFFER_STYLE_WRITE_ONLY         0x00000000 /* RWI-V */
#define NV_PGRAPH_NOTIFY_BUFFER_STYLE_WRITE_THEN_AWAKEN  0x00000001 /* RW--V */
#define NV_PGRAPH_NOTIFY_REQ                                  16:16 /* RWIVF */
#define NV_PGRAPH_NOTIFY_REQ_NOT_PENDING                 0x00000000 /* RWI-V */
#define NV_PGRAPH_NOTIFY_REQ_PENDING                     0x00000001 /* RW--V */
#define NV_PGRAPH_NOTIFY_STYLE                                20:20 /* RWIVF */
#define NV_PGRAPH_NOTIFY_STYLE_WRITE_ONLY                0x00000000 /* RWI-V */
#define NV_PGRAPH_NOTIFY_STYLE_WRITE_THEN_AWAKEN         0x00000001 /* RW--V */
#define NV_PGRAPH_NOTIFY_WARNING_REQ                          24:24 /* RWIVF */
#define NV_PGRAPH_NOTIFY_WARNING_REQ_NOT_PENDING         0x00000000 /* RWI-V */
#define NV_PGRAPH_NOTIFY_WARNING_REQ_PENDING             0x00000001 /* RW--V */
#define NV_PGRAPH_NOTIFY_WARNING_STYLE                        25:25 /* RWIVF */
#define NV_PGRAPH_NOTIFY_WARNING_STYLE_WRITE_ONLY        0x00000000 /* RWI-V */
#define NV_PGRAPH_NOTIFY_WARNING_STYLE_WRITE_THEN_AWAKEN 0x00000001 /* RW--V */
#define NV_PGRAPH_NOTIFY_WARNING_STATUS                       30:28 /* RWIVF */
#define NV_PGRAPH_NOTIFY_WARNING_STATUS_NO_WARNING       0x00000000 /* RWI-V */
#define NV_PGRAPH_NOTIFY_WARNING_STATUS_INVALID_ENUM     0x00000001 /* RW--V */
#define NV_PGRAPH_NOTIFY_WARNING_STATUS_INVALID_VALUE    0x00000002 /* RW--V */
#define NV_PGRAPH_NOTIFY_WARNING_STATUS_INVALID_OP       0x00000004 /* RW--V */
#define NV_PGRAPH_BOFFSET(i)                     (0x00400640+(i)*4) /* RW-4A */
#define NV_PGRAPH_BOFFSET__SIZE_1                                 6 /*       */
#define NV_PGRAPH_BOFFSET_LINADRS                              26:0 /* RWIUF */
#define NV_PGRAPH_BOFFSET_LINADRS_0                      0x00000000 /* RWI-V */
#define NV_PGRAPH_BOFFSET0                               0x00400640 /* RW-4R */
#define NV_PGRAPH_BOFFSET0__ALIAS_1            NV_PGRAPH_BOFFSET(0) /*       */
#define NV_PGRAPH_BOFFSET0_LINADRS                             26:0 /* RWIUF */
#define NV_PGRAPH_BOFFSET0_LINADRS_0                     0x00000000 /* RWI-V */
#define NV_PGRAPH_BOFFSET0_LINADRS_042                   0x00000000 /* RWC-V */
#define NV_PGRAPH_BOFFSET0_LINADRS_058                   0x00000000 /* RWC-V */
#define NV_PGRAPH_BOFFSET1                               0x00400644 /* RW-4R */
#define NV_PGRAPH_BOFFSET1__ALIAS_1            NV_PGRAPH_BOFFSET(1) /*       */
#define NV_PGRAPH_BOFFSET1_LINADRS                             26:0 /* RWIUF */
#define NV_PGRAPH_BOFFSET1_LINADRS_0                     0x00000000 /* RWI-V */
#define NV_PGRAPH_BOFFSET1_LINADRS_042                   0x00000000 /* RWC-V */
#define NV_PGRAPH_BOFFSET1_LINADRS_059                   0x00000000 /* RWC-V */
#define NV_PGRAPH_BOFFSET2                               0x00400648 /* RW-4R */
#define NV_PGRAPH_BOFFSET2__ALIAS_1            NV_PGRAPH_BOFFSET(2) /*       */
#define NV_PGRAPH_BOFFSET2_LINADRS                             26:0 /* RWIUF */
#define NV_PGRAPH_BOFFSET2_LINADRS_0                     0x00000000 /* RWI-V */
#define NV_PGRAPH_BOFFSET2_LINADRS_053                   0x00000000 /* RWC-V */
#define NV_PGRAPH_BOFFSET2_LINADRS_05A                   0x00000000 /* RWC-V */
#define NV_PGRAPH_BOFFSET3                               0x0040064C /* RW-4R */
#define NV_PGRAPH_BOFFSET3__ALIAS_1            NV_PGRAPH_BOFFSET(3) /*       */
#define NV_PGRAPH_BOFFSET3_LINADRS                             26:0 /* RWIUF */
#define NV_PGRAPH_BOFFSET3_LINADRS_0                     0x00000000 /* RWI-V */
#define NV_PGRAPH_BOFFSET3_LINADRS_053                   0x00000000 /* RWC-V */
#define NV_PGRAPH_BOFFSET3_LINADRS_05B                   0x00000000 /* RWC-V */
#define NV_PGRAPH_BOFFSET4                               0x00400650 /* RW-4R */
#define NV_PGRAPH_BOFFSET4__ALIAS_1            NV_PGRAPH_BOFFSET(4) /*       */
#define NV_PGRAPH_BOFFSET4_LINADRS                             26:0 /* RWIUF */
#define NV_PGRAPH_BOFFSET4_LINADRS_0                     0x00000000 /* RWI-V */
#define NV_PGRAPH_BOFFSET5                               0x00400654 /* RW-4R */
#define NV_PGRAPH_BOFFSET5__ALIAS_1            NV_PGRAPH_BOFFSET(5) /*       */
#define NV_PGRAPH_BOFFSET5_LINADRS                             26:0 /* RWIUF */
#define NV_PGRAPH_BOFFSET5_LINADRS_0                     0x00000000 /* RWI-V */
#define NV_PGRAPH_BOFFSET5_LINADRS_052                   0x00000000 /* RWC-V */
#define NV_PGRAPH_BBASE(i)                       (0x00400658+(i)*4) /* RW-4A */
#define NV_PGRAPH_BBASE__SIZE_1                                   6 /*       */
#define NV_PGRAPH_BBASE_LINADRS                                26:0 /* RWIUF */
#define NV_PGRAPH_BBASE_LINADRS_0                        0x00000000 /* RWI-V */
#define NV_PGRAPH_BBASE0                                 0x00400658 /* RW-4R */
#define NV_PGRAPH_BBASE0__ALIAS_1                NV_PGRAPH_BBASE(0) /*       */
#define NV_PGRAPH_BBASE0_LINADRS                               26:0 /* RWIUF */
#define NV_PGRAPH_BBASE0_LINADRS_0                       0x00000000 /* RWI-V */
#define NV_PGRAPH_BBASE1                                 0x0040065c /* RW-4R */
#define NV_PGRAPH_BBASE1__ALIAS_1                NV_PGRAPH_BBASE(1) /*       */
#define NV_PGRAPH_BBASE1_LINADRS                               26:0 /* RWIUF */
#define NV_PGRAPH_BBASE1_LINADRS_0                       0x00000000 /* RWI-V */
#define NV_PGRAPH_BBASE2                                 0x00400660 /* RW-4R */
#define NV_PGRAPH_BBASE2__ALIAS_1                NV_PGRAPH_BBASE(2) /*       */
#define NV_PGRAPH_BBASE2_LINADRS                               26:0 /* RWIUF */
#define NV_PGRAPH_BBASE2_LINADRS_0                       0x00000000 /* RWI-V */
#define NV_PGRAPH_BBASE3                                 0x00400664 /* RW-4R */
#define NV_PGRAPH_BBASE3__ALIAS_1                NV_PGRAPH_BBASE(3) /*       */
#define NV_PGRAPH_BBASE3_LINADRS                               26:0 /* RWIUF */
#define NV_PGRAPH_BBASE3_LINADRS_0                       0x00000000 /* RWI-V */
#define NV_PGRAPH_BBASE4                                 0x00400668 /* RW-4R */
#define NV_PGRAPH_BBASE4__ALIAS_1                NV_PGRAPH_BBASE(4) /*       */
#define NV_PGRAPH_BBASE4_LINADRS                               26:0 /* RWIUF */
#define NV_PGRAPH_BBASE4_LINADRS_0                       0x00000000 /* RWI-V */
#define NV_PGRAPH_BBASE5                                 0x0040066C /* RW-4R */
#define NV_PGRAPH_BBASE5__ALIAS_1                NV_PGRAPH_BBASE(5) /*       */
#define NV_PGRAPH_BBASE5_LINADRS                               26:0 /* RWIUF */
#define NV_PGRAPH_BBASE5_LINADRS_0                       0x00000000 /* RWI-V */
#define NV_PGRAPH_BPITCH(i)                      (0x00400670+(i)*4) /* RW-4A */
#define NV_PGRAPH_BPITCH__SIZE_1                                  5 /*       */
#define NV_PGRAPH_BPITCH_VALUE                                 15:0 /* RWIUF */
#define NV_PGRAPH_BPITCH_VALUE_0                         0x00000000 /* RWI-V */
#define NV_PGRAPH_BPITCH0                                0x00400670 /* RW-4R */
#define NV_PGRAPH_BPITCH0__ALIAS_1              NV_PGRAPH_BPITCH(0) /*       */
#define NV_PGRAPH_BPITCH0_VALUE                                15:0 /* RWIUF */
#define NV_PGRAPH_BPITCH0_VALUE_0                        0x00000000 /* RWI-V */
#define NV_PGRAPH_BPITCH0_VALUE_042                      0x00000020 /* RWC-V */
#define NV_PGRAPH_BPITCH0_VALUE_058                      0x00000010 /* RWC-V */
#define NV_PGRAPH_BPITCH1                                0x00400674 /* RW-4R */
#define NV_PGRAPH_BPITCH1__ALIAS_1              NV_PGRAPH_BPITCH(1) /*       */
#define NV_PGRAPH_BPITCH1_VALUE                                15:0 /* RWIUF */
#define NV_PGRAPH_BPITCH1_VALUE_0                        0x00000000 /* RWI-V */
#define NV_PGRAPH_BPITCH1_VALUE_042                      0x00000020 /* RWC-V */
#define NV_PGRAPH_BPITCH1_VALUE_059                      0x00000010 /* RWC-V */
#define NV_PGRAPH_BPITCH2                                0x00400678 /* RW-4R */
#define NV_PGRAPH_BPITCH2__ALIAS_1              NV_PGRAPH_BPITCH(2) /*       */
#define NV_PGRAPH_BPITCH2_VALUE                                15:0 /* RWIUF */
#define NV_PGRAPH_BPITCH2_VALUE_0                        0x00000000 /* RWI-V */
#define NV_PGRAPH_BPITCH2_VALUE_053                      0x00000020 /* RWC-V */
#define NV_PGRAPH_BPITCH2_VALUE_05A                      0x00000010 /* RWC-V */
#define NV_PGRAPH_BPITCH3                                0x0040067C /* RW-4R */
#define NV_PGRAPH_BPITCH3__ALIAS_1              NV_PGRAPH_BPITCH(3) /*       */
#define NV_PGRAPH_BPITCH3_VALUE                                15:0 /* RWIUF */
#define NV_PGRAPH_BPITCH3_VALUE_0                        0x00000000 /* RWI-V */
#define NV_PGRAPH_BPITCH3_VALUE_053                      0x00000020 /* RWC-V */
#define NV_PGRAPH_BPITCH3_VALUE_05B                      0x00000010 /* RWC-V */
#define NV_PGRAPH_BPITCH4                                0x00400680 /* RW-4R */
#define NV_PGRAPH_BPITCH4__ALIAS_1              NV_PGRAPH_BPITCH(4) /*       */
#define NV_PGRAPH_BPITCH4_VALUE                                15:0 /* RWIUF */
#define NV_PGRAPH_BPITCH4_VALUE_0                        0x00000000 /* RWI-V */
#define NV_PGRAPH_BLIMIT(i)                      (0x00400684+(i)*4) /* RW-4A */
#define NV_PGRAPH_BLIMIT__SIZE_1                                  6 /*       */
#define NV_PGRAPH_BLIMIT_VALUE                                 26:0 /* RWXUF */
#define NV_PGRAPH_BLIMIT_TYPE                                 31:31 /* RWIVF */
#define NV_PGRAPH_BLIMIT_TYPE_IN_MEMORY                  0x00000000 /* RW--V */
#define NV_PGRAPH_BLIMIT_TYPE_NULL                       0x00000001 /* RWI-V */
#define NV_PGRAPH_BLIMIT0                                0x00400684 /* RW-4R */
#define NV_PGRAPH_BLIMIT0__ALIAS_1              NV_PGRAPH_BLIMIT(0) /*       */
#define NV_PGRAPH_BLIMIT0_VALUE                                26:0 /* RWXUF */
#define NV_PGRAPH_BLIMIT0_TYPE                                31:31 /* RWIVF */
#define NV_PGRAPH_BLIMIT0_TYPE_IN_MEMORY                 0x00000000 /* RW--V */
#define NV_PGRAPH_BLIMIT0_TYPE_NULL                      0x00000001 /* RWI-V */
#define NV_PGRAPH_BLIMIT1                                0x00400688 /* RW-4R */
#define NV_PGRAPH_BLIMIT1__ALIAS_1              NV_PGRAPH_BLIMIT(1) /*       */
#define NV_PGRAPH_BLIMIT1_VALUE                                26:0 /* RWXUF */
#define NV_PGRAPH_BLIMIT1_TYPE                                31:31 /* RWIVF */
#define NV_PGRAPH_BLIMIT1_TYPE_IN_MEMORY                 0x00000000 /* RW--V */
#define NV_PGRAPH_BLIMIT1_TYPE_NULL                      0x00000001 /* RWI-V */
#define NV_PGRAPH_BLIMIT2                                0x0040068c /* RW-4R */
#define NV_PGRAPH_BLIMIT2__ALIAS_1              NV_PGRAPH_BLIMIT(2) /*       */
#define NV_PGRAPH_BLIMIT2_VALUE                                26:0 /* RWXUF */
#define NV_PGRAPH_BLIMIT2_TYPE                                31:31 /* RWIVF */
#define NV_PGRAPH_BLIMIT2_TYPE_IN_MEMORY                 0x00000000 /* RW--V */
#define NV_PGRAPH_BLIMIT2_TYPE_NULL                      0x00000001 /* RWI-V */
#define NV_PGRAPH_BLIMIT3                                0x00400690 /* RW-4R */
#define NV_PGRAPH_BLIMIT3__ALIAS_1              NV_PGRAPH_BLIMIT(3) /*       */
#define NV_PGRAPH_BLIMIT3_VALUE                                26:0 /* RWXUF */
#define NV_PGRAPH_BLIMIT3_TYPE                                31:31 /* RWIVF */
#define NV_PGRAPH_BLIMIT3_TYPE_IN_MEMORY                 0x00000000 /* RW--V */
#define NV_PGRAPH_BLIMIT3_TYPE_NULL                      0x00000001 /* RWI-V */
#define NV_PGRAPH_BLIMIT4                                0x00400694 /* RW-4R */
#define NV_PGRAPH_BLIMIT4__ALIAS_1              NV_PGRAPH_BLIMIT(4) /*       */
#define NV_PGRAPH_BLIMIT4_VALUE                                26:0 /* RWXUF */
#define NV_PGRAPH_BLIMIT4_TYPE                                31:31 /* RWIVF */
#define NV_PGRAPH_BLIMIT4_TYPE_IN_MEMORY                 0x00000000 /* RW--V */
#define NV_PGRAPH_BLIMIT4_TYPE_NULL                      0x00000001 /* RWI-V */
#define NV_PGRAPH_BLIMIT5                                0x00400698 /* RW-4R */
#define NV_PGRAPH_BLIMIT5__ALIAS_1              NV_PGRAPH_BLIMIT(5) /*       */
#define NV_PGRAPH_BLIMIT5_VALUE                                26:0 /* RWXUF */
#define NV_PGRAPH_BLIMIT5_TYPE                                31:31 /* RWIVF */
#define NV_PGRAPH_BLIMIT5_TYPE_IN_MEMORY                 0x00000000 /* RW--V */
#define NV_PGRAPH_BLIMIT5_TYPE_NULL                      0x00000001 /* RWI-V */
#define NV_PGRAPH_BSWIZZLE2                              0x0040069c /* RW-4R */
#define NV_PGRAPH_BSWIZZLE2_WIDTH                             19:16 /* RWIUF */
#define NV_PGRAPH_BSWIZZLE2_WIDTH_0                      0x00000000 /* RWI-V */
#define NV_PGRAPH_BSWIZZLE2_WIDTH_MAX                    0x0000000b /* RW--V */
#define NV_PGRAPH_BSWIZZLE2_WIDTH_053                    0x00000000 /* RWC-V */
#define NV_PGRAPH_BSWIZZLE2_HEIGHT                            27:24 /* RWIUF */
#define NV_PGRAPH_BSWIZZLE2_HEIGHT_0                     0x00000000 /* RWI-V */
#define NV_PGRAPH_BSWIZZLE2_HEIGHT_MAX                   0x0000000b /* RW--V */
#define NV_PGRAPH_BSWIZZLE2_HEIGHT_053                   0x00000000 /* RWC-V */
#define NV_PGRAPH_BSWIZZLE5                              0x004006a0 /* RW-4R */
#define NV_PGRAPH_BSWIZZLE5_WIDTH                             19:16 /* RWIUF */
#define NV_PGRAPH_BSWIZZLE5_WIDTH_0                      0x00000000 /* RWI-V */
#define NV_PGRAPH_BSWIZZLE5_WIDTH_052                    0x00000000 /* RWC-V */
#define NV_PGRAPH_BSWIZZLE5_HEIGHT                            27:24 /* RWIUF */
#define NV_PGRAPH_BSWIZZLE5_HEIGHT_0                     0x00000000 /* RWI-V */
#define NV_PGRAPH_BSWIZZLE5_HEIGHT_052                   0x00000000 /* RWC-V */
#define NV_PGRAPH_TILE(i)                       (0x00400b00+(i)*16) /* RW-4A */
#define NV_PGRAPH_TILE__SIZE_1                                    8 /*       */
#define NV_PGRAPH_TILE_ADR                                    26:14 /* RW-UF */
#define NV_PGRAPH_TILE_REGION                                 31:31 /* RWIVF */
#define NV_PGRAPH_TLIMIT(i)                     (0x00400b04+(i)*16) /* RW-4A */
#define NV_PGRAPH_TLIMIT__SIZE_1                                  8 /*       */
#define NV_PGRAPH_TLIMIT_ADR                                  26:14 /* RW-UF */
#define NV_PGRAPH_TSIZE(i)                      (0x00400b08+(i)*16) /* RW-4A */
#define NV_PGRAPH_TSIZE__SIZE_1                                   8 /*       */
#define NV_PGRAPH_TSIZE_PITCH                                  15:8 /* RW-UF */
#define NV_PGRAPH_TSTATUS(i)                    (0x00400b0c+(i)*16) /* R--4A */
#define NV_PGRAPH_TSTATUS__SIZE_1                                 8 /*       */
#define NV_PGRAPH_TSTATUS_PRIME                                 1:0 /* R--VF */
#define NV_PGRAPH_TSTATUS_FACTOR                                6:4 /* R--VF */
#define NV_PGRAPH_TSTATUS_REGION                              31:31 /* R-I-F */
#define NV_PGRAPH_BPIXEL                                 0x00400724 /* RW-4R */
#define NV_PGRAPH_BPIXEL_DEPTH0                                 3:0 /* RWIVF */
#define NV_PGRAPH_BPIXEL_DEPTH0_INVALID                  0x00000000 /* RWI-V */
#define NV_PGRAPH_BPIXEL_DEPTH0_Y8                       0x00000001 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH0_X1R5G5B5_Z1R5G5B5        0x00000002 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH0_X1R5G5B5_O1R5G5B5        0x00000003 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH0_A1R5G5B5                 0x00000004 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH0_R5G6B5                   0x00000005 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH0_Y16                      0x00000006 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH0_X8R8G8B8_Z8R8G8B8        0x00000007 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH0_X8R8G8B8_O1Z7R8G8B8      0x00000008 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH0_X1A7R8G8B8_Z1A7R8G8B8    0x00000009 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH0_X1A7R8G8B8_O1A7R8G8B8    0x0000000a /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH0_X8R8G8B8_O8R8G8B8        0x0000000b /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH0_A8R8G8B8                 0x0000000c /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH0_Y32                      0x0000000d /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH0_V8YB8U8YA8               0x0000000e /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH0_YB8V8YA8U8               0x0000000f /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH0_042                      0x00000001 /* RWC-V */
#define NV_PGRAPH_BPIXEL_DEPTH0_058                      0x00000001 /* RWC-V */
#define NV_PGRAPH_BPIXEL_DEPTH1                                 7:4 /* RWIVF */
#define NV_PGRAPH_BPIXEL_DEPTH1_INVALID                  0x00000000 /* RWI-V */
#define NV_PGRAPH_BPIXEL_DEPTH1_Y8                       0x00000001 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH1_X1R5G5B5_Z1R5G5B5        0x00000002 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH1_X1R5G5B5_O1R5G5B5        0x00000003 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH1_A1R5G5B5                 0x00000004 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH1_R5G6B5                   0x00000005 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH1_Y16                      0x00000006 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH1_X8R8G8B8_Z8R8G8B8        0x00000007 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH1_X8R8G8B8_O1Z7R8G8B8      0x00000008 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH1_X1A7R8G8B8_Z1A7R8G8B8    0x00000009 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH1_X1A7R8G8B8_O1A7R8G8B8    0x0000000a /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH1_X8R8G8B8_O8R8G8B8        0x0000000b /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH1_A8R8G8B8                 0x0000000c /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH1_Y32                      0x0000000d /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH1_V8YB8U8YA8               0x0000000e /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH1_YB8V8YA8U8               0x0000000f /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH1_059                      0x00000001 /* RWC-V */
#define NV_PGRAPH_BPIXEL_DEPTH2                                11:8 /* RWIVF */
#define NV_PGRAPH_BPIXEL_DEPTH2_INVALID                  0x00000000 /* RWI-V */
#define NV_PGRAPH_BPIXEL_DEPTH2_Y8                       0x00000001 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH2_X1R5G5B5_Z1R5G5B5        0x00000002 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH2_X1R5G5B5_O1R5G5B5        0x00000003 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH2_A1R5G5B5                 0x00000004 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH2_R5G6B5                   0x00000005 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH2_Y16                      0x00000006 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH2_X8R8G8B8_Z8R8G8B8        0x00000007 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH2_X8R8G8B8_O1Z7R8G8B8      0x00000008 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH2_X1A7R8G8B8_Z1A7R8G8B8    0x00000009 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH2_X1A7R8G8B8_O1A7R8G8B8    0x0000000a /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH2_X8R8G8B8_O8R8G8B8        0x0000000b /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH2_A8R8G8B8                 0x0000000c /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH2_Y32                      0x0000000d /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH2_V8YB8U8YA8               0x0000000e /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH2_YB8V8YA8U8               0x0000000f /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH2_053                      0x00000002 /* RWC-V */
#define NV_PGRAPH_BPIXEL_DEPTH2_05A                      0x00000002 /* RWC-V */
#define NV_PGRAPH_BPIXEL_DEPTH3                               15:12 /* RWIVF */
#define NV_PGRAPH_BPIXEL_DEPTH3_INVALID                  0x00000000 /* RWI-V */
#define NV_PGRAPH_BPIXEL_DEPTH3_Y8                       0x00000001 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH3_X1R5G5B5_Z1R5G5B5        0x00000002 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH3_X1R5G5B5_O1R5G5B5        0x00000003 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH3_A1R5G5B5                 0x00000004 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH3_R5G6B5                   0x00000005 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH3_Y16                      0x00000006 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH3_X8R8G8B8_Z8R8G8B8        0x00000007 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH3_X8R8G8B8_O1Z7R8G8B8      0x00000008 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH3_X1A7R8G8B8_Z1A7R8G8B8    0x00000009 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH3_X1A7R8G8B8_O1A7R8G8B8    0x0000000a /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH3_X8R8G8B8_O8R8G8B8        0x0000000b /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH3_A8R8G8B8                 0x0000000c /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH3_Y32                      0x0000000d /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH3_V8YB8U8YA8               0x0000000e /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH3_YB8V8YA8U8               0x0000000f /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH3_05B                      0x00000002 /* RWC-V */
#define NV_PGRAPH_BPIXEL_DEPTH4                               19:16 /* RWIVF */
#define NV_PGRAPH_BPIXEL_DEPTH4_INVALID                  0x00000000 /* RWI-V */
#define NV_PGRAPH_BPIXEL_DEPTH4_Y8                       0x00000001 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH4_X1R5G5B5_Z1R5G5B5        0x00000002 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH4_X1R5G5B5_O1R5G5B5        0x00000003 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH4_A1R5G5B5                 0x00000004 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH4_R5G6B5                   0x00000005 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH4_Y16                      0x00000006 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH4_X8R8G8B8_Z8R8G8B8        0x00000007 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH4_X8R8G8B8_O1Z7R8G8B8      0x00000008 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH4_X1A7R8G8B8_Z1A7R8G8B8    0x00000009 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH4_X1A7R8G8B8_O1A7R8G8B8    0x0000000a /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH4_X8R8G8B8_O8R8G8B8        0x0000000b /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH4_A8R8G8B8                 0x0000000c /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH4_Y32                      0x0000000d /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH4_V8YB8U8YA8               0x0000000e /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH4_YB8V8YA8U8               0x0000000f /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH5                               23:20 /* RWIVF */
#define NV_PGRAPH_BPIXEL_DEPTH5_INVALID                  0x00000000 /* RWI-V */
#define NV_PGRAPH_BPIXEL_DEPTH5_Y8                       0x00000001 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH5_X1R5G5B5_Z1R5G5B5        0x00000002 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH5_X1R5G5B5_O1R5G5B5        0x00000003 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH5_A1R5G5B5                 0x00000004 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH5_R5G6B5                   0x00000005 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH5_Y16                      0x00000006 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH5_X8R8G8B8_Z8R8G8B8        0x00000007 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH5_X8R8G8B8_O1Z7R8G8B8      0x00000008 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH5_X1A7R8G8B8_Z1A7R8G8B8    0x00000009 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH5_X1A7R8G8B8_O1A7R8G8B8    0x0000000a /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH5_X8R8G8B8_O8R8G8B8        0x0000000b /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH5_A8R8G8B8                 0x0000000c /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH5_Y32                      0x0000000d /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH5_V8YB8U8YA8               0x0000000e /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH5_YB8V8YA8U8               0x0000000f /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH5_052                      0x00000001 /* RWC-V */
#define NV_PGRAPH_LIMIT_VIOL_PIX                         0x00400610 /* RW-4R */
#define NV_PGRAPH_LIMIT_VIOL_PIX_ADRS                          26:0 /* RWIVF */
#define NV_PGRAPH_LIMIT_VIOL_PIX_ADRS_0                  0x00000000 /* RWI-V */
#define NV_PGRAPH_LIMIT_VIOL_PIX_BTILED                       27:27 /* RWIVF */
#define NV_PGRAPH_LIMIT_VIOL_PIX_BTILED_NO_VIOL          0x00000000 /* RWI-V */
#define NV_PGRAPH_LIMIT_VIOL_PIX_BTILED_VIOL             0x00000001 /* RW--V */
#define NV_PGRAPH_LIMIT_VIOL_PIX_BPITCH                       28:28 /* RWIVF */
#define NV_PGRAPH_LIMIT_VIOL_PIX_BPITCH_NO_VIOL          0x00000000 /* RWI-V */
#define NV_PGRAPH_LIMIT_VIOL_PIX_BPITCH_VIOL             0x00000001 /* RW--V */
#define NV_PGRAPH_LIMIT_VIOL_PIX_BLIT                         29:29 /* RWIVF */
#define NV_PGRAPH_LIMIT_VIOL_PIX_BLIT_NO_VIOL            0x00000000 /* RWI-V */
#define NV_PGRAPH_LIMIT_VIOL_PIX_BLIT_VIOL               0x00000001 /* RW--V */
#define NV_PGRAPH_LIMIT_VIOL_PIX_LIMIT                        30:30 /* RWIVF */
#define NV_PGRAPH_LIMIT_VIOL_PIX_LIMIT_NO_VIOL           0x00000000 /* RWI-V */
#define NV_PGRAPH_LIMIT_VIOL_PIX_LIMIT_VIOL              0x00000001 /* RW--V */
#define NV_PGRAPH_LIMIT_VIOL_PIX_OVRFLW                       31:31 /* RWIVF */
#define NV_PGRAPH_LIMIT_VIOL_PIX_OVRFLW_NO_VIOL          0x00000000 /* RWI-V */
#define NV_PGRAPH_LIMIT_VIOL_PIX_OVRFLW_VIOL             0x00000001 /* RW--V */
#define NV_PGRAPH_LIMIT_VIOL_Z                           0x00400614 /* RW-4R */
#define NV_PGRAPH_LIMIT_VIOL_Z_ADRS                            26:0 /* RWIVF */
#define NV_PGRAPH_LIMIT_VIOL_Z_ADRS_0                    0x00000000 /* RWI-V */
#define NV_PGRAPH_LIMIT_VIOL_Z_LIMIT                          30:30 /* RWIVF */
#define NV_PGRAPH_LIMIT_VIOL_Z_LIMIT_NO_VIOL             0x00000000 /* RWI-V */
#define NV_PGRAPH_LIMIT_VIOL_Z_LIMIT_VIOL                0x00000001 /* RW--V */
#define NV_PGRAPH_LIMIT_VIOL_Z_OVRFLW                         31:31 /* RWIVF */
#define NV_PGRAPH_LIMIT_VIOL_Z_OVRFLW_NO_VIOL            0x00000000 /* RWI-V */
#define NV_PGRAPH_LIMIT_VIOL_Z_OVRFLW_VIOL               0x00000001 /* RW--V */
#define NV_PGRAPH_STATE                                  0x00400714 /* RW-4R */
#define NV_PGRAPH_STATE_BUFFER_0                                0:0 /* RWIVF */
#define NV_PGRAPH_STATE_BUFFER_0_INVALID                 0x00000000 /* RWI-V */
#define NV_PGRAPH_STATE_BUFFER_0_VALID                   0x00000001 /* RW--V */
#define NV_PGRAPH_STATE_BUFFER_0_042                     0x00000000 /* RWC-V */
#define NV_PGRAPH_STATE_BUFFER_0_058                     0x00000000 /* RWC-V */
#define NV_PGRAPH_STATE_BUFFER_1                                1:1 /* RWIVF */
#define NV_PGRAPH_STATE_BUFFER_1_INVALID                 0x00000000 /* RWI-V */
#define NV_PGRAPH_STATE_BUFFER_1_VALID                   0x00000001 /* RW--V */
#define NV_PGRAPH_STATE_BUFFER_1_042                     0x00000000 /* RWC-V */
#define NV_PGRAPH_STATE_BUFFER_1_059                     0x00000000 /* RWC-V */
#define NV_PGRAPH_STATE_BUFFER_2                                2:2 /* RWIVF */
#define NV_PGRAPH_STATE_BUFFER_2_INVALID                 0x00000000 /* RWI-V */
#define NV_PGRAPH_STATE_BUFFER_2_VALID                   0x00000001 /* RW--V */
#define NV_PGRAPH_STATE_BUFFER_2_053                     0x00000000 /* RWC-V */
#define NV_PGRAPH_STATE_BUFFER_2_05A                     0x00000000 /* RWC-V */
#define NV_PGRAPH_STATE_BUFFER_3                                3:3 /* RWIVF */
#define NV_PGRAPH_STATE_BUFFER_3_INVALID                 0x00000000 /* RWI-V */
#define NV_PGRAPH_STATE_BUFFER_3_VALID                   0x00000001 /* RW--V */
#define NV_PGRAPH_STATE_BUFFER_3_053                     0x00000000 /* RWC-V */
#define NV_PGRAPH_STATE_BUFFER_3_05B                     0x00000000 /* RWC-V */
#define NV_PGRAPH_STATE_BUFFER_4                                4:4 /* RWIVF */
#define NV_PGRAPH_STATE_BUFFER_4_INVALID                 0x00000000 /* RWI-V */
#define NV_PGRAPH_STATE_BUFFER_4_VALID                   0x00000001 /* RW--V */
#define NV_PGRAPH_STATE_BUFFER_4_038                     0x00000000 /* RWC-V */
#define NV_PGRAPH_STATE_BUFFER_5                                5:5 /* RWIVF */
#define NV_PGRAPH_STATE_BUFFER_5_INVALID                 0x00000000 /* RWI-V */
#define NV_PGRAPH_STATE_BUFFER_5_VALID                   0x00000001 /* RW--V */
#define NV_PGRAPH_STATE_BUFFER_5_052                     0x00000000 /* RWC-V */
#define NV_PGRAPH_STATE_PITCH_0                                 8:8 /* RWIVF */
#define NV_PGRAPH_STATE_PITCH_0_INVALID                  0x00000000 /* RWI-V */
#define NV_PGRAPH_STATE_PITCH_0_VALID                    0x00000001 /* RW--V */
#define NV_PGRAPH_STATE_PITCH_0_042                      0x00000001 /* RWC-V */
#define NV_PGRAPH_STATE_PITCH_0_058                      0x00000001 /* RWC-V */
#define NV_PGRAPH_STATE_PITCH_1                                 9:9 /* RWIVF */
#define NV_PGRAPH_STATE_PITCH_1_INVALID                  0x00000000 /* RWI-V */
#define NV_PGRAPH_STATE_PITCH_1_VALID                    0x00000001 /* RW--V */
#define NV_PGRAPH_STATE_PITCH_1_042                      0x00000001 /* RWC-V */
#define NV_PGRAPH_STATE_PITCH_1_059                      0x00000001 /* RWC-V */
#define NV_PGRAPH_STATE_PITCH_2                               10:10 /* RWIVF */
#define NV_PGRAPH_STATE_PITCH_2_INVALID                  0x00000000 /* RWI-V */
#define NV_PGRAPH_STATE_PITCH_2_VALID                    0x00000001 /* RW--V */
#define NV_PGRAPH_STATE_PITCH_2_053                      0x00000001 /* RWC-V */
#define NV_PGRAPH_STATE_PITCH_2_05A                      0x00000001 /* RWC-V */
#define NV_PGRAPH_STATE_PITCH_3                               11:11 /* RWIVF */
#define NV_PGRAPH_STATE_PITCH_3_INVALID                  0x00000000 /* RWI-V */
#define NV_PGRAPH_STATE_PITCH_3_VALID                    0x00000001 /* RW--V */
#define NV_PGRAPH_STATE_PITCH_3_053                      0x00000001 /* RWC-V */
#define NV_PGRAPH_STATE_PITCH_3_05B                      0x00000001 /* RWC-V */
#define NV_PGRAPH_STATE_PITCH_4                               12:12 /* RWIVF */
#define NV_PGRAPH_STATE_PITCH_4_INVALID                  0x00000000 /* RWI-V */
#define NV_PGRAPH_STATE_PITCH_4_VALID                    0x00000001 /* RW--V */
#define NV_PGRAPH_STATE_CHROMA_COLOR                          16:16 /* RWIVF */
#define NV_PGRAPH_STATE_CHROMA_COLOR_INVALID             0x00000000 /* RWI-V */
#define NV_PGRAPH_STATE_CHROMA_COLOR_VALID               0x00000001 /* RW--V */
#define NV_PGRAPH_STATE_CHROMA_COLOR_057                 0x00000001 /* RWC-V */
#define NV_PGRAPH_STATE_CHROMA_COLORFMT                       17:17 /* RWIVF */
#define NV_PGRAPH_STATE_CHROMA_COLORFMT_INVALID          0x00000000 /* RWI-V */
#define NV_PGRAPH_STATE_CHROMA_COLORFMT_VALID            0x00000001 /* RW--V */
#define NV_PGRAPH_STATE_CHROMA_COLORFMT_017              0x00000001 /* RWC-V */
#define NV_PGRAPH_STATE_CPATTERN_COLORFMT                     20:20 /* RWIVF */
#define NV_PGRAPH_STATE_CPATTERN_COLORFMT_INVALID        0x00000000 /* RWI-V */
#define NV_PGRAPH_STATE_CPATTERN_COLORFMT_VALID          0x00000001 /* RW--V */
#define NV_PGRAPH_STATE_CPATTERN_COLORFMT_044            0x00000001 /* RWC-V */
#define NV_PGRAPH_STATE_CPATTERN_MONOFMT                      21:21 /* RWIVF */
#define NV_PGRAPH_STATE_CPATTERN_MONOFMT_INVALID         0x00000000 /* RWI-V */
#define NV_PGRAPH_STATE_CPATTERN_MONOFMT_VALID           0x00000001 /* RW--V */
#define NV_PGRAPH_STATE_CPATTERN_MONOFMT_044             0x00000001 /* RWC-V */
#define NV_PGRAPH_STATE_CPATTERN_SELECT                       22:22 /* RWIVF */
#define NV_PGRAPH_STATE_CPATTERN_SELECT_INVALID          0x00000000 /* RWI-V */
#define NV_PGRAPH_STATE_CPATTERN_SELECT_VALID            0x00000001 /* RW--V */
#define NV_PGRAPH_STATE_CPATTERN_SELECT_044              0x00000001 /* RWC-V */
#define NV_PGRAPH_STATE_PATTERN_COLOR0                        24:24 /* RWIVF */
#define NV_PGRAPH_STATE_PATTERN_COLOR0_INVALID           0x00000000 /* RWI-V */
#define NV_PGRAPH_STATE_PATTERN_COLOR0_VALID             0x00000001 /* RW--V */
#define NV_PGRAPH_STATE_PATTERN_COLOR0_018               0x00000001 /* RWC-V */
#define NV_PGRAPH_STATE_PATTERN_COLOR1                        25:25 /* RWIVF */
#define NV_PGRAPH_STATE_PATTERN_COLOR1_INVALID           0x00000000 /* RWI-V */
#define NV_PGRAPH_STATE_PATTERN_COLOR1_VALID             0x00000001 /* RW--V */
#define NV_PGRAPH_STATE_PATTERN_COLOR1_018               0x00000001 /* RWC-V */
#define NV_PGRAPH_STATE_PATTERN_PATT0                         26:26 /* RWIVF */
#define NV_PGRAPH_STATE_PATTERN_PATT0_INVALID            0x00000000 /* RWI-V */
#define NV_PGRAPH_STATE_PATTERN_PATT0_VALID              0x00000001 /* RW--V */
#define NV_PGRAPH_STATE_PATTERN_PATT0_018                0x00000001 /* RWC-V */
#define NV_PGRAPH_STATE_PATTERN_PATT1                         27:27 /* RWIVF */
#define NV_PGRAPH_STATE_PATTERN_PATT1_INVALID            0x00000000 /* RWI-V */
#define NV_PGRAPH_STATE_PATTERN_PATT1_VALID              0x00000001 /* RW--V */
#define NV_PGRAPH_STATE_PATTERN_PATT1_018                0x00000001 /* RWC-V */
#define NV_PGRAPH_CACHE_INDEX                            0x00400728 /* RW-4R */
#define NV_PGRAPH_CACHE_INDEX_ADRS                             11:2 /* RWIVF */
#define NV_PGRAPH_CACHE_INDEX_ADRS_0                     0x00000000 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_ADRS_1024                  0x00000400 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_ADRS_TEXTURE_RAM_0         0x00000000 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_ADRS_TEXTURE_RAM_1K        0x00000400 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_ADRS_PALETTE_RAM_0         0x00000000 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_ADRS_PALETTE_RAM_512       0x00000200 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_ADRS_MISS_DATA_RAM_0       0x00000000 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_ADRS_MISS_DATA_RAM_32      0x00000020 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_ADRS_RLATENCY_RAM_0        0x00000000 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_ADRS_RLATENCY_RAM_384      0x00000180 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_ADRS_FLATENCY_RAM_0        0x00000000 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_ADRS_FLATENCY_RAM_448      0x000001C0 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_OP                              19:16 /* RWIVF */
#define NV_PGRAPH_CACHE_INDEX_OP_WR_CACHE                0x00000000 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_OP_RD_CACHE                0x00000001 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_OP_RD_INDEX                0x00000002 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_OP_NOP                     0x00000000 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_OP_TEXTURE_RAM             0x00000001 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_OP_PALETTE_RAM             0x00000002 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_OP_MISS_DATA_RAM           0x00000003 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_OP_RLATENCY_RAM            0x00000004 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_OP_FLATENCY_RAM            0x00000005 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_TEX_PIPE                        15:15 /* RWIVF */
#define NV_PGRAPH_CACHE_INDEX_TEX_PIPE_0                 0x00000000 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_TEX_PIPE_1                 0x00000001 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_RDSEL                           29:24 /* RWIVF */
#define NV_PGRAPH_CACHE_INDEX_RDSEL_NOP                  0x00000000 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_RDSEL_INDEX_REG            0x00000001 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_RDSEL_TIME_CNT             0x00000020 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_RDSEL_CACHE_IDLE_CNT       0x00000021 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_RDSEL_TP0_PIX_CNT          0x00000022 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_RDSEL_TP0_MISS_CNT         0x00000023 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_RDSEL_TP0_COAL_STALL_CNT   0x00000024 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_RDSEL_TP0_REPL_STALL_CNT   0x00000025 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_RDSEL_TP0_MP_Q_STALL_CNT   0x00000026 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_RDSEL_TP0_TEX2MA_STALL_CNT 0x00000027 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_RDSEL_LIT2TEX_STALL_CNT    0x00000028 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_RDSEL_RBFR_FULL_STALL_CNT  0x00000029 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_RDSEL_TP1_PIX_CNT          0x0000002A /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_RDSEL_TP1_MISS_CNT         0x0000002B /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_RDSEL_TP1_COAL_STALL_CNT   0x0000002C /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_RDSEL_TP1_REPL_STALL_CNT   0x0000002D /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_RDSEL_TP1_MP_Q_STALL_CNT   0x0000002E /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_RDSEL_TP1_TEX2MA_STALL_CNT 0x0000002F /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_RDSEL_TEX2LIT_REGLD_CNT    0x00000030 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_RDSEL_C2DMA_TAKEN_CNT      0x00000031 /* RW--V */
#define NV_PGRAPH_CACHE_RAM                              0x0040072c /* RW-4R */
#define NV_PGRAPH_CACHE_RAM_VALUE                              31:0 /* RWXVF */
#define NV_PGRAPH_DMA_PITCH                              0x00400770 /* RW-4R */
#define NV_PGRAPH_DMA_PITCH_S0                                 15:0 /* RWXSF */
#define NV_PGRAPH_DMA_PITCH_S1                                31:16 /* RWXSF */
#define NV_PGRAPH_DVD_COLORFMT                           0x00400774 /* RW-4R */
#define NV_PGRAPH_DVD_COLORFMT_IMAGE                            5:0 /* RWNVF */
#define NV_PGRAPH_DVD_COLORFMT_IMAGE_FORMAT_INVALID            0x00 /* RWN-V */
#define NV_PGRAPH_DVD_COLORFMT_IMAGE_FORMAT_LE_V8YB8U8YA8      0x12 /* RW--V */
#define NV_PGRAPH_DVD_COLORFMT_IMAGE_FORMAT_LE_YB8V8YA8U8      0x13 /* RW--V */
#define NV_PGRAPH_DVD_COLORFMT_OVLY                             9:8 /* RWNVF */
#define NV_PGRAPH_DVD_COLORFMT_OVLY_FORMAT_INVALID             0x00 /* RWN-V */
#define NV_PGRAPH_DVD_COLORFMT_OVLY_FORMAT_LE_A8CR8CB8Y8       0x01 /* RW--V */
#define NV_PGRAPH_DVD_COLORFMT_OVLY_FORMAT_LE_A4CR6YB6A4CB6YA6 0x02 /* RW--V */
#define NV_PGRAPH_DVD_COLORFMT_OVLY_FORMAT_TRANSPARENT         0x03 /* RW--V */
#define NV_PGRAPH_SCALED_FORMAT                          0x00400778 /* RW-4R */
#define NV_PGRAPH_SCALED_FORMAT_ORIGIN                        17:16 /* RWIVF */
#define NV_PGRAPH_SCALED_FORMAT_ORIGIN_INVALID           0x00000000 /* RWI-V */
#define NV_PGRAPH_SCALED_FORMAT_ORIGIN_CENTER            0x00000001 /* RW--V */
#define NV_PGRAPH_SCALED_FORMAT_ORIGIN_CORNER            0x00000002 /* RW--V */
#define NV_PGRAPH_SCALED_FORMAT_INTERPOLATOR                  24:24 /* RWIVF */
#define NV_PGRAPH_SCALED_FORMAT_INTERPOLATOR_ZOH         0x00000000 /* RWI-V */
#define NV_PGRAPH_SCALED_FORMAT_INTERPOLATOR_FOH         0x00000001 /* RW--V */
#define NV_PGRAPH_STATE3D                                0x0040077C /* RW-4R */
#define NV_PGRAPH_STATE3D_CELSIUS_TAG_ID                       15:0 /* RWIVF */
#define NV_PGRAPH_STATE3D_CELSIUS_TAG_ID_0               0x00000000 /* RWI-V */
#define NV_PGRAPH_STATE3D_CELSIUS_TAG_VALID                   24:24 /* RWIVF */
#define NV_PGRAPH_STATE3D_CELSIUS_TAG_VALID_FALSE        0x00000000 /* RWI-V */
#define NV_PGRAPH_STATE3D_CELSIUS_TAG_VALID_TRUE         0x00000001 /* RW--V */
#define NV_PGRAPH_STATE3D_DX3_INITIALIZED                     28:28 /* RWIVF */
#define NV_PGRAPH_STATE3D_DX3_INITIALIZED_FALSE          0x00000000 /* RWI-V */
#define NV_PGRAPH_STATE3D_DX3_INITIALIZED_TRUE           0x00000001 /* RWI-V */
#define NV_PGRAPH_STATE3D_DX5_INITIALIZED                     29:29 /* RWIVF */
#define NV_PGRAPH_STATE3D_DX5_INITIALIZED_FALSE          0x00000000 /* RWI-V */
#define NV_PGRAPH_STATE3D_DX5_INITIALIZED_TRUE           0x00000001 /* RWI-V */
#define NV_PGRAPH_STATE3D_DX6_INITIALIZED                     30:30 /* RWIVF */
#define NV_PGRAPH_STATE3D_DX6_INITIALIZED_FALSE          0x00000000 /* RWI-V */
#define NV_PGRAPH_STATE3D_DX6_INITIALIZED_TRUE           0x00000001 /* RWI-V */
#define NV_PGRAPH_PIPE_INDEX                             0x00400780 /* RW-4R */
#define NV_PGRAPH_PIPE_INDEX_ADDRESS                            6:0 /* RWIVF */
#define NV_PGRAPH_PIPE_INDEX_ADDRESS_0                   0x00000000 /* RW--V */
#define NV_PGRAPH_PIPE_INDEX_OP                                10:8 /* RWIVF */
#define NV_PGRAPH_PIPE_INDEX_OP_ZPIPE_NOP                0x00000000 /* RW--V */
#define NV_PGRAPH_PIPE_INDEX_OP_ZPIPE_Z0                 0x00000001 /* RW--V */
#define NV_PGRAPH_PIPE_INDEX_OP_ZPIPE_Z1                 0x00000002 /* RW--V */
#define NV_PGRAPH_PIPE_INDEX_OP_ZPIPE_Z2                 0x00000003 /* RW--V */
#define NV_PGRAPH_PIPE_INDEX_OP_ZPIPE_Z3                 0x00000004 /* RW--V */
#define NV_PGRAPH_PIPE_INDEX_OP_CVGPIPE                  0x00000005 /* RW--V */
#define NV_PGRAPH_PIPE_INDEX_OP_XYPIPE                   0x00000006 /* RW--V */
#define NV_PGRAPH_PIPE_RAM                               0x00400784 /* RW-4R */
#define NV_PGRAPH_PIPE_RAM_VALUE                               31:0 /* RWXVF */
#define NV_PGRAPH_PIPE_RAM_VALUE_Z                             23:0 /* RWXVF */
#define NV_PGRAPH_PIPE_RAM_VALUE_XY                            23:0 /* RWXVF */
#define NV_PGRAPH_PIPE_RAM_VALUE_CVG                           15:0 /* RWXVF */
#define NV_PGRAPH_PATT_COLOR0                            0x00400800 /* RW-4R */
#define NV_PGRAPH_PATT_COLOR0_VALUE                            31:0 /* RWXUF */
#define NV_PGRAPH_PATT_COLOR0_VALUE_018                  0x00000000 /* RWC-V */
#define NV_PGRAPH_PATT_COLOR0_VALUE_044                  0x00000000 /* RWC-V */
#define NV_PGRAPH_PATT_COLOR1                            0x00400804 /* RW-4R */
#define NV_PGRAPH_PATT_COLOR1_VALUE                            31:0 /* RWXUF */
#define NV_PGRAPH_PATT_COLOR1_VALUE_018                  0x00000000 /* RWC-V */
#define NV_PGRAPH_PATT_COLOR1_VALUE_044                  0x00000000 /* RWC-V */
#define NV_PGRAPH_PATT_COLORRAM(i)               (0x00400900+(i)*4) /* R--4A */
#define NV_PGRAPH_PATT_COLORRAM__SIZE_1                          64 /*       */
#define NV_PGRAPH_PATT_COLORRAM_VALUE                          23:0 /* R--UF */
#define NV_PGRAPH_PATT_COLORRAM_VALUE_044                0x00000000 /* R-C-V */
#define NV_PGRAPH_PATTERN(i)                     (0x00400808+(i)*4) /* RW-4A */
#define NV_PGRAPH_PATTERN__SIZE_1                                 2 /*       */
#define NV_PGRAPH_PATTERN_BITMAP                               31:0 /* RWXVF */
#define NV_PGRAPH_PATTERN_BITMAP_018                     0x00000000 /* RWC-V */
#define NV_PGRAPH_PATTERN_BITMAP_044                     0x00000000 /* RWC-V */
#define NV_PGRAPH_PATTERN_SHAPE                          0x00400810 /* RW-4R */
#define NV_PGRAPH_PATTERN_SHAPE_VALUE                           1:0 /* RWXVF */
#define NV_PGRAPH_PATTERN_SHAPE_VALUE_8X_8Y              0x00000000 /* RW--V */
#define NV_PGRAPH_PATTERN_SHAPE_VALUE_64X_1Y             0x00000001 /* RW--V */
#define NV_PGRAPH_PATTERN_SHAPE_VALUE_1X_64Y             0x00000002 /* RW--V */
#define NV_PGRAPH_PATTERN_SHAPE_VALUE_018                0x00000000 /* RWC-V */
#define NV_PGRAPH_PATTERN_SHAPE_VALUE_044                0x00000000 /* RWC-V */
#define NV_PGRAPH_PATTERN_SHAPE_SELECT                          4:4 /* RWXVF */
#define NV_PGRAPH_PATTERN_SHAPE_SELECT_2COLOR            0x00000000 /* RW--V */
#define NV_PGRAPH_PATTERN_SHAPE_SELECT_FULLCOLOR         0x00000001 /* RW--V */
#define NV_PGRAPH_PATTERN_SHAPE_SELECT_044               0x00000000 /* RWC-V */
#define NV_PGRAPH_MONO_COLOR0                            0x00400600 /* RW-4R */
#define NV_PGRAPH_MONO_COLOR0_VALUE                            31:0 /* RWXUF */
#define NV_PGRAPH_ROP3                                   0x00400604 /* RW-4R */
#define NV_PGRAPH_ROP3_VALUE                                    7:0 /* RWXVF */
#define NV_PGRAPH_ROP3_VALUE_043                         0x00000000 /* RWC-V */
#define NV_PGRAPH_CHROMA                                 0x00400814 /* RW-4R */
#define NV_PGRAPH_CHROMA_VALUE                                 31:0 /* RWXUF */
#define NV_PGRAPH_CHROMA_VALUE_017                       0x00000000 /* RWC-V */
#define NV_PGRAPH_CHROMA_VALUE_057                       0x00000000 /* RWC-V */
#define NV_PGRAPH_BETA_AND                               0x00400608 /* RW-4R */
#define NV_PGRAPH_BETA_AND_VALUE_FRACTION                     30:23 /* RWXUF */
#define NV_PGRAPH_BETA_AND_VALUE_FRACTION_012            0x00000000 /* RWC-V */
#define NV_PGRAPH_BETA_PREMULT                           0x0040060c /* RW-4R */
#define NV_PGRAPH_BETA_PREMULT_VALUE                           31:0 /* RWXUF */
#define NV_PGRAPH_BETA_PREMULT_VALUE_072                 0x00000000 /* RWC-V */
#define NV_PGRAPH_DPRAM_INDEX                            0x00400828 /* RW-4R */
#define NV_PGRAPH_DPRAM_INDEX_ADRS                              9:0 /* RWIVF */
#define NV_PGRAPH_DPRAM_INDEX_ADRS_0                     0x00000000 /* RWI-V */
#define NV_PGRAPH_DPRAM_INDEX_SELECT                          19:16 /* RWIVF */
#define NV_PGRAPH_DPRAM_INDEX_SELECT_ADRS                0x00000000 /* RWI-V */
#define NV_PGRAPH_DPRAM_INDEX_SELECT_ADRS_0              0x00000000 /* RWI-V */
#define NV_PGRAPH_DPRAM_INDEX_SELECT_ADRS_1              0x00000001 /* RW--V */
#define NV_PGRAPH_DPRAM_INDEX_SELECT_IDATA               0x00000001 /* RW--V */
#define NV_PGRAPH_DPRAM_INDEX_SELECT_ALPHA               0x00000002 /* RW--V */
#define NV_PGRAPH_DPRAM_INDEX_SELECT_DATA_0              0x00000002 /* RW--V */
#define NV_PGRAPH_DPRAM_INDEX_SELECT_IWE                 0x00000003 /* RW--V */
#define NV_PGRAPH_DPRAM_INDEX_SELECT_DATA_1              0x00000003 /* RW--V */
#define NV_PGRAPH_DPRAM_INDEX_SELECT_XY                  0x00000004 /* RW--V */
#define NV_PGRAPH_DPRAM_INDEX_SELECT_WE_0                0x00000004 /* RW--V */
#define NV_PGRAPH_DPRAM_INDEX_SELECT_ODATA               0x00000005 /* RW--V */
#define NV_PGRAPH_DPRAM_INDEX_SELECT_WE_1                0x00000005 /* RW--V */
#define NV_PGRAPH_DPRAM_INDEX_SELECT_OWE                 0x00000006 /* RW--V */
#define NV_PGRAPH_DPRAM_INDEX_SELECT_ALPHA_0             0x00000006 /* RW--V */
#define NV_PGRAPH_DPRAM_INDEX_SELECT_SCOMP               0x00000007 /* RW--V */
#define NV_PGRAPH_DPRAM_INDEX_SELECT_ALPHA_1             0x00000007 /* RW--V */
#define NV_PGRAPH_DPRAM_INDEX_SELECT_PWD                 0x00000008 /* RW--V */
#define NV_PGRAPH_DPRAM_DATA                             0x0040082c /* RW-4R */
#define NV_PGRAPH_DPRAM_DATA_VALUE                             31:0 /* RWXVF */
#define NV_PGRAPH_DPRAM_ADRS_0                           0x0040082c /* RW-4R */
#define NV_PGRAPH_DPRAM_ADRS_0__ALIAS_1        NV_PGRAPH_DPRAM_DATA /*       */
#define NV_PGRAPH_DPRAM_ADRS_0_VALUE                           19:0 /* RWXVF */
#define NV_PGRAPH_DPRAM_ADRS_1                           0x0040082c /* RW-4R */
#define NV_PGRAPH_DPRAM_ADRS_1__ALIAS_1        NV_PGRAPH_DPRAM_DATA /*       */
#define NV_PGRAPH_DPRAM_ADRS_1_VALUE                           19:0 /* RWXVF */
#define NV_PGRAPH_DPRAM_DATA_0                           0x0040082c /* RW-4R */
#define NV_PGRAPH_DPRAM_DATA_0__ALIAS_1        NV_PGRAPH_DPRAM_DATA /*       */
#define NV_PGRAPH_DPRAM_DATA_0_VALUE                           31:0 /* RWXVF */
#define NV_PGRAPH_DPRAM_DATA_1                           0x0040082c /* RW-4R */
#define NV_PGRAPH_DPRAM_DATA_1__ALIAS_1        NV_PGRAPH_DPRAM_DATA /*       */
#define NV_PGRAPH_DPRAM_DATA_1_VALUE                           31:0 /* RWXVF */
#define NV_PGRAPH_DPRAM_WE_0                             0x0040082c /* RW-4R */
#define NV_PGRAPH_DPRAM_WE_0__ALIAS_1          NV_PGRAPH_DPRAM_DATA /*       */
#define NV_PGRAPH_DPRAM_WE_0_VALUE                             23:0 /* RWXVF */
#define NV_PGRAPH_DPRAM_WE_1                             0x0040082c /* RW-4R */
#define NV_PGRAPH_DPRAM_WE_1__ALIAS_1          NV_PGRAPH_DPRAM_DATA /*       */
#define NV_PGRAPH_DPRAM_WE_1_VALUE                             23:0 /* RWXVF */
#define NV_PGRAPH_DPRAM_ALPHA_0                          0x0040082c /* RW-4R */
#define NV_PGRAPH_DPRAM_ALPHA_0__ALIAS_1       NV_PGRAPH_DPRAM_DATA /*       */
#define NV_PGRAPH_DPRAM_ALPHA_0_VALUE                          31:0 /* RWXVF */
#define NV_PGRAPH_DPRAM_ALPHA_1                          0x0040082c /* RW-4R */
#define NV_PGRAPH_DPRAM_ALPHA_1__ALIAS_1       NV_PGRAPH_DPRAM_DATA /*       */
#define NV_PGRAPH_DPRAM_ALPHA_1_VALUE                          31:0 /* RWXVF */
#define NV_PGRAPH_STORED_FMT                             0x00400830 /* RW-4R */
#define NV_PGRAPH_STORED_FMT_MONO0                              5:0 /* RWXVF */
#define NV_PGRAPH_STORED_FMT_MONO0_04A                   0x0000000C /* RWC-V */
#define NV_PGRAPH_STORED_FMT_PATT0                             13:8 /* RWXVF */
#define NV_PGRAPH_STORED_FMT_PATT0_044                   0x0000000B /* RWC-V */
#define NV_PGRAPH_STORED_FMT_PATT1                            21:16 /* RWXVF */
#define NV_PGRAPH_STORED_FMT_PATT1_044                   0x0000000B /* RWC-V */
#define NV_PGRAPH_STORED_FMT_CHROMA                           29:24 /* RWXVF */
#define NV_PGRAPH_STORED_FMT_CHROMA_057                  0x0000000B /* RWC-V */
#define NV_PGRAPH_FORMATS                                0x00400618 /* RW-4R */
#define NV_PGRAPH_FORMATS_ROP                                   2:0 /* R-XVF */
#define NV_PGRAPH_FORMATS_ROP_Y8                         0x00000000 /* -W--V */
#define NV_PGRAPH_FORMATS_ROP_RGB15                      0x00000001 /* -W--V */
#define NV_PGRAPH_FORMATS_ROP_RGB16                      0x00000002 /* -W--V */
#define NV_PGRAPH_FORMATS_ROP_Y16                        0x00000003 /* -W--V */
#define NV_PGRAPH_FORMATS_ROP_INVALID                    0x00000004 /* -W--V */
#define NV_PGRAPH_FORMATS_ROP_RGB24                      0x00000005 /* -W--V */
#define NV_PGRAPH_FORMATS_ROP_RGB30                      0x00000006 /* -W--V */
#define NV_PGRAPH_FORMATS_ROP_Y32                        0x00000007 /* -W--V */
#define NV_PGRAPH_FORMATS_SRC                                   9:4 /* R-XVF */
#define NV_PGRAPH_FORMATS_SRC_INVALID                    0x00000000 /* RW--V */
#define NV_PGRAPH_FORMATS_SRC_LE_Y8                      0x00000001 /* RW--V */
#define NV_PGRAPH_FORMATS_SRC_LE_X16A8Y8                 0x00000002 /* RW--V */
#define NV_PGRAPH_FORMATS_SRC_LE_X24Y8                   0x00000003 /* RW--V */
#define NV_PGRAPH_FORMATS_SRC_LE_A1R5G5B5                0x00000006 /* RW--V */
#define NV_PGRAPH_FORMATS_SRC_LE_X1R5G5B5                0x00000007 /* RW--V */
#define NV_PGRAPH_FORMATS_SRC_LE_X16A1R5G5B5             0x00000008 /* RW--V */
#define NV_PGRAPH_FORMATS_SRC_LE_X17R5G5B5               0x00000009 /* RW--V */
#define NV_PGRAPH_FORMATS_SRC_LE_R5G6B5                  0x0000000A /* RW--V */
#define NV_PGRAPH_FORMATS_SRC_LE_A16R5G6B5               0x0000000B /* RW--V */
#define NV_PGRAPH_FORMATS_SRC_LE_X16R5G6B5               0x0000000C /* RW--V */
#define NV_PGRAPH_FORMATS_SRC_LE_A8R8G8B8                0x0000000D /* RW--V */
#define NV_PGRAPH_FORMATS_SRC_LE_X8R8G8B8                0x0000000E /* RW--V */
#define NV_PGRAPH_FORMATS_SRC_LE_Y16                     0x0000000F /* RW--V */
#define NV_PGRAPH_FORMATS_SRC_LE_A16Y16                  0x00000010 /* RW--V */
#define NV_PGRAPH_FORMATS_SRC_LE_X16Y16                  0x00000011 /* RW--V */
#define NV_PGRAPH_FORMATS_SRC_LE_V8YB8U8YA8              0x00000012 /* RW--V */
#define NV_PGRAPH_FORMATS_SRC_LE_YB8V8YA8U8              0x00000013 /* RW--V */
#define NV_PGRAPH_FORMATS_SRC_LE_Y32                     0x00000014 /* RW--V */
#define NV_PGRAPH_FORMATS_FB                                  15:12 /* R-XVF */
#define NV_PGRAPH_FORMATS_FB_INVALID                     0x00000000 /* RWI-V */
#define NV_PGRAPH_FORMATS_FB_Y8                          0x00000001 /* RW--V */
#define NV_PGRAPH_FORMATS_FB_X1R5G5B5_Z1R5G5B5           0x00000002 /* RW--V */
#define NV_PGRAPH_FORMATS_FB_X1R5G5B5_O1R5G5B5           0x00000003 /* RW--V */
#define NV_PGRAPH_FORMATS_FB_A1R5G5B5                    0x00000004 /* RW--V */
#define NV_PGRAPH_FORMATS_FB_R5G6B5                      0x00000005 /* RW--V */
#define NV_PGRAPH_FORMATS_FB_Y16                         0x00000006 /* RW--V */
#define NV_PGRAPH_FORMATS_FB_X8R8G8B8_Z8R8G8B8           0x00000007 /* RW--V */
#define NV_PGRAPH_FORMATS_FB_X8R8G8B8_O1Z7R8G8B8         0x00000008 /* RW--V */
#define NV_PGRAPH_FORMATS_FB_X1A7R8G8B8_Z1A7R8G8B8       0x00000009 /* RW--V */
#define NV_PGRAPH_FORMATS_FB_X1A7R8G8B8_O1A7R8G8B8       0x0000000a /* RW--V */
#define NV_PGRAPH_FORMATS_FB_X8R8G8B8_O8R8G8B8           0x0000000b /* RW--V */
#define NV_PGRAPH_FORMATS_FB_A8R8G8B8                    0x0000000c /* RW--V */
#define NV_PGRAPH_FORMATS_FB_Y32                         0x0000000d /* RW--V */
#define NV_PGRAPH_FORMATS_FB_V8YB8U8YA8                  0x0000000e /* RW--V */
#define NV_PGRAPH_FORMATS_FB_YB8V8YA8U8                  0x0000000f /* RW--V */
#define NV_PGRAPH_ABS_X_RAM(i)                   (0x00400400+(i)*4) /* RW-4A */
#define NV_PGRAPH_ABS_X_RAM__SIZE_1                              10 /*       */
#define NV_PGRAPH_ABS_X_RAM_VALUE                              31:0 /* RWXUF */
#define NV_PGRAPH_X_RAM_BPORT(i)                 (0x00400c00+(i)*4) /* R--4A */
#define NV_PGRAPH_X_RAM_BPORT__SIZE_1                            10 /*       */
#define NV_PGRAPH_X_RAM_BPORT_VALUE                            31:0 /* R--UF */
#define NV_PGRAPH_ABS_Y_RAM(i)                   (0x00400480+(i)*4) /* RW-4A */
#define NV_PGRAPH_ABS_Y_RAM__SIZE_1                              10 /*       */
#define NV_PGRAPH_ABS_Y_RAM_VALUE                              31:0 /* RWXUF */
#define NV_PGRAPH_Y_RAM_BPORT(i)                 (0x00400c80+(i)*4) /* R--4A */
#define NV_PGRAPH_Y_RAM_BPORT__SIZE_1                            10 /*       */
#define NV_PGRAPH_Y_RAM_BPORT_VALUE                            31:0 /* R--UF */
#define NV_PGRAPH_XY_LOGIC_MISC0                         0x00400514 /* RW-4R */
#define NV_PGRAPH_XY_LOGIC_MISC0_COUNTER                       17:0 /* RWBUF */
#define NV_PGRAPH_XY_LOGIC_MISC0_COUNTER_0               0x00000000 /* RWB-V */
#define NV_PGRAPH_XY_LOGIC_MISC0_DIMENSION                    20:20 /* RWVVF */
#define NV_PGRAPH_XY_LOGIC_MISC0_DIMENSION_NONZERO       0x00000000 /* RWV-V */
#define NV_PGRAPH_XY_LOGIC_MISC0_DIMENSION_ZERO          0x00000001 /* RW--V */
#define NV_PGRAPH_XY_LOGIC_MISC0_IMAGE_DATA_64                24:24 /* RWVVF */
#define NV_PGRAPH_XY_LOGIC_MISC0_IMAGE_DATA_64_FALSE     0x00000000 /* RWV-V */
#define NV_PGRAPH_XY_LOGIC_MISC0_IMAGE_DATA_64_TRUE      0x00000001 /* RW--V */
#define NV_PGRAPH_XY_LOGIC_MISC0_INDEX                        31:28 /* RWBUF */
#define NV_PGRAPH_XY_LOGIC_MISC0_INDEX_0                 0x00000000 /* RWB-V */
#define NV_PGRAPH_XY_LOGIC_MISC1                         0x00400518 /* RW-4R */
#define NV_PGRAPH_XY_LOGIC_MISC1_INITIAL                        0:0 /* RWNVF */
#define NV_PGRAPH_XY_LOGIC_MISC1_INITIAL_NEEDED          0x00000000 /* RWN-V */
#define NV_PGRAPH_XY_LOGIC_MISC1_INITIAL_DONE            0x00000001 /* RW--V */
#define NV_PGRAPH_XY_LOGIC_MISC1_XTRACLIPX                      4:4 /* RWIVF */
#define NV_PGRAPH_XY_LOGIC_MISC1_XTRACLIPX_NOTNULL       0x00000000 /* RWI-V */
#define NV_PGRAPH_XY_LOGIC_MISC1_XTRACLIPX_NULL          0x00000001 /* RW--V */
#define NV_PGRAPH_XY_LOGIC_MISC1_XTRACLIPY                      5:5 /* RWIVF */
#define NV_PGRAPH_XY_LOGIC_MISC1_XTRACLIPY_NOTNULL       0x00000000 /* RWI-V */
#define NV_PGRAPH_XY_LOGIC_MISC1_XTRACLIPY_NULL          0x00000001 /* RW--V */
#define NV_PGRAPH_XY_LOGIC_MISC1_SEL_XIMAX                    12:12 /* RWIVF */
#define NV_PGRAPH_XY_LOGIC_MISC1_SEL_XIMAX_UUMAX         0x00000000 /* RWI-V */
#define NV_PGRAPH_XY_LOGIC_MISC1_SEL_XIMAX_IMAGEMAX      0x00000001 /* RW--V */
#define NV_PGRAPH_XY_LOGIC_MISC1_SEL_YIMAX                    16:16 /* RWIVF */
#define NV_PGRAPH_XY_LOGIC_MISC1_SEL_YIMAX_UUMAX         0x00000000 /* RWI-V */
#define NV_PGRAPH_XY_LOGIC_MISC1_SEL_YIMAX_IMAGEMAX      0x00000001 /* RW--V */
#define NV_PGRAPH_XY_LOGIC_MISC1_SEL_XXTRA                    20:20 /* RWIVF */
#define NV_PGRAPH_XY_LOGIC_MISC1_SEL_XXTRA_CLIPMAX       0x00000000 /* RWI-V */
#define NV_PGRAPH_XY_LOGIC_MISC1_SEL_XXTRA_IMAGEMAX      0x00000001 /* RW--V */
#define NV_PGRAPH_XY_LOGIC_MISC2                         0x0040051C /* RW-4R */
#define NV_PGRAPH_XY_LOGIC_MISC2_HANDOFF                        0:0 /* RWIVF */
#define NV_PGRAPH_XY_LOGIC_MISC2_HANDOFF_DISABLE         0x00000000 /* RWI-V */
#define NV_PGRAPH_XY_LOGIC_MISC2_HANDOFF_ENABLE          0x00000001 /* RW--V */
#define NV_PGRAPH_XY_LOGIC_MISC2_XTRACLIPX                      4:4 /* RWIVF */
#define NV_PGRAPH_XY_LOGIC_MISC2_XTRACLIPX_NOTNULL       0x00000000 /* RWI-V */
#define NV_PGRAPH_XY_LOGIC_MISC2_XTRACLIPX_NULL          0x00000001 /* RW--V */
#define NV_PGRAPH_XY_LOGIC_MISC2_XTRACLIPY                      5:5 /* RWIVF */
#define NV_PGRAPH_XY_LOGIC_MISC2_XTRACLIPY_NOTNULL       0x00000000 /* RWI-V */
#define NV_PGRAPH_XY_LOGIC_MISC2_XTRACLIPY_NULL          0x00000001 /* RW--V */
#define NV_PGRAPH_XY_LOGIC_MISC2_SEL_XIMAX                    12:12 /* RWIVF */
#define NV_PGRAPH_XY_LOGIC_MISC2_SEL_XIMAX_UCMAX         0x00000000 /* RWI-V */
#define NV_PGRAPH_XY_LOGIC_MISC2_SEL_XIMAX_IMAGEMAX      0x00000001 /* RW--V */
#define NV_PGRAPH_XY_LOGIC_MISC2_SEL_YIMAX                    16:16 /* RWIVF */
#define NV_PGRAPH_XY_LOGIC_MISC2_SEL_YIMAX_UCMAX         0x00000000 /* RWI-V */
#define NV_PGRAPH_XY_LOGIC_MISC2_SEL_YIMAX_IMAGEMAX      0x00000001 /* RW--V */
#define NV_PGRAPH_XY_LOGIC_MISC2_SEL_XXTRA                    20:20 /* RWIVF */
#define NV_PGRAPH_XY_LOGIC_MISC2_SEL_XXTRA_CLIPMAX       0x00000000 /* RWI-V */
#define NV_PGRAPH_XY_LOGIC_MISC2_SEL_XXTRA_IMAGEMAX      0x00000001 /* RW--V */
#define NV_PGRAPH_XY_LOGIC_MISC3                         0x00400520 /* RW-4R */
#define NV_PGRAPH_XY_LOGIC_MISC3_WDIMY_EQ_0                     0:0 /* RWXVF */
#define NV_PGRAPH_XY_LOGIC_MISC3_WDIMY_EQ_0_NULL         0x00000000 /* RW--V */
#define NV_PGRAPH_XY_LOGIC_MISC3_WDIMY_EQ_0_TRUE         0x00000001 /* RW--V */
#define NV_PGRAPH_XY_LOGIC_MISC3_RELOAD_WDIMY                   4:4 /* RWXVF */
#define NV_PGRAPH_XY_LOGIC_MISC3_RELOAD_WDIMY_NULL       0x00000000 /* RW--V */
#define NV_PGRAPH_XY_LOGIC_MISC3_RELOAD_WDIMY_TRUE       0x00000001 /* RW--V */
#define NV_PGRAPH_XY_LOGIC_MISC3_RELOAD_WX                      8:8 /* RWIVF */
#define NV_PGRAPH_XY_LOGIC_MISC3_RELOAD_WX_NULL          0x00000000 /* RWI-V */
#define NV_PGRAPH_XY_LOGIC_MISC3_RELOAD_WX_TRUE          0x00000001 /* RW--V */
#define NV_PGRAPH_XY_LOGIC_MISC3_TEXT_ALG                     12:12 /* RWIVF */
#define NV_PGRAPH_XY_LOGIC_MISC3_TEXT_ALG_NULL           0x00000000 /* RWI-V */
#define NV_PGRAPH_XY_LOGIC_MISC3_TEXT_ALG_TRUE           0x00000001 /* RW--V */
#define NV_PGRAPH_XY_LOGIC_MISC3_TEXT_DIMX                    22:16 /* RWXUF */
#define NV_PGRAPH_XY_LOGIC_MISC3_TEXT_DIMX_0             0x00000000 /* RW--V */
#define NV_PGRAPH_XY_LOGIC_MISC3_TEXT_WDIMX                   30:24 /* RWXUF */
#define NV_PGRAPH_XY_LOGIC_MISC3_TEXT_WDIMX_0            0x00000000 /* RW--V */
#define NV_PGRAPH_X_MISC                                 0x00400500 /* RW-4R */
#define NV_PGRAPH_X_MISC_BIT33_0                                0:0 /* RWNVF */
#define NV_PGRAPH_X_MISC_BIT33_0_0                       0x00000000 /* RWN-V */
#define NV_PGRAPH_X_MISC_BIT33_1                                1:1 /* RWNVF */
#define NV_PGRAPH_X_MISC_BIT33_1_0                       0x00000000 /* RWN-V */
#define NV_PGRAPH_X_MISC_BIT33_2                                2:2 /* RWNVF */
#define NV_PGRAPH_X_MISC_BIT33_2_0                       0x00000000 /* RWN-V */
#define NV_PGRAPH_X_MISC_BIT33_3                                3:3 /* RWNVF */
#define NV_PGRAPH_X_MISC_BIT33_3_0                       0x00000000 /* RWN-V */
#define NV_PGRAPH_X_MISC_RANGE_0                                4:4 /* RWNVF */
#define NV_PGRAPH_X_MISC_RANGE_0_0                       0x00000000 /* RWN-V */
#define NV_PGRAPH_X_MISC_RANGE_1                                5:5 /* RWNVF */
#define NV_PGRAPH_X_MISC_RANGE_1_0                       0x00000000 /* RWN-V */
#define NV_PGRAPH_X_MISC_RANGE_2                                6:6 /* RWNVF */
#define NV_PGRAPH_X_MISC_RANGE_2_0                       0x00000000 /* RWN-V */
#define NV_PGRAPH_X_MISC_RANGE_3                                7:7 /* RWNVF */
#define NV_PGRAPH_X_MISC_RANGE_3_0                       0x00000000 /* RWN-V */
#define NV_PGRAPH_X_MISC_ADDER_OUTPUT                         29:28 /* RWXVF */
#define NV_PGRAPH_X_MISC_ADDER_OUTPUT_EQ_0               0x00000000 /* RW--V */
#define NV_PGRAPH_X_MISC_ADDER_OUTPUT_LT_0               0x00000001 /* RW--V */
#define NV_PGRAPH_X_MISC_ADDER_OUTPUT_GT_0               0x00000002 /* RW--V */
#define NV_PGRAPH_Y_MISC                                 0x00400504 /* RW-4R */
#define NV_PGRAPH_Y_MISC_BIT33_0                                0:0 /* RWNVF */
#define NV_PGRAPH_Y_MISC_BIT33_0_0                       0x00000000 /* RWN-V */
#define NV_PGRAPH_Y_MISC_BIT33_1                                1:1 /* RWNVF */
#define NV_PGRAPH_Y_MISC_BIT33_1_0                       0x00000000 /* RWN-V */
#define NV_PGRAPH_Y_MISC_BIT33_2                                2:2 /* RWNVF */
#define NV_PGRAPH_Y_MISC_BIT33_2_0                       0x00000000 /* RWN-V */
#define NV_PGRAPH_Y_MISC_BIT33_3                                3:3 /* RWNVF */
#define NV_PGRAPH_Y_MISC_BIT33_3_0                       0x00000000 /* RWN-V */
#define NV_PGRAPH_Y_MISC_RANGE_0                                4:4 /* RWNVF */
#define NV_PGRAPH_Y_MISC_RANGE_0_0                       0x00000000 /* RWN-V */
#define NV_PGRAPH_Y_MISC_RANGE_1                                5:5 /* RWNVF */
#define NV_PGRAPH_Y_MISC_RANGE_1_0                       0x00000000 /* RWN-V */
#define NV_PGRAPH_Y_MISC_RANGE_2                                6:6 /* RWNVF */
#define NV_PGRAPH_Y_MISC_RANGE_2_0                       0x00000000 /* RWN-V */
#define NV_PGRAPH_Y_MISC_RANGE_3                                7:7 /* RWNVF */
#define NV_PGRAPH_Y_MISC_RANGE_3_0                       0x00000000 /* RWN-V */
#define NV_PGRAPH_Y_MISC_ADDER_OUTPUT                         29:28 /* RWXVF */
#define NV_PGRAPH_Y_MISC_ADDER_OUTPUT_EQ_0               0x00000000 /* RW--V */
#define NV_PGRAPH_Y_MISC_ADDER_OUTPUT_LT_0               0x00000001 /* RW--V */
#define NV_PGRAPH_Y_MISC_ADDER_OUTPUT_GT_0               0x00000002 /* RW--V */
#define NV_PGRAPH_ABS_UCLIP_XMIN                         0x0040053C /* RW-4R */
#define NV_PGRAPH_ABS_UCLIP_XMIN_VALUE                         15:0 /* RWXSF */
#define NV_PGRAPH_ABS_UCLIP_XMIN_VALUE_019               0x00000000 /* RWC-V */
#define NV_PGRAPH_ABS_UCLIP_XMIN_VALUE_053               0x00000000 /* RWC-V */
#define NV_PGRAPH_ABS_UCLIP_XMAX                         0x00400544 /* RW-4R */
#define NV_PGRAPH_ABS_UCLIP_XMAX_VALUE                         17:0 /* RWXSF */
#define NV_PGRAPH_ABS_UCLIP_XMAX_VALUE_019               0x00000000 /* RWC-V */
#define NV_PGRAPH_ABS_UCLIP_XMAX_VALUE_053               0x00000000 /* RWC-V */
#define NV_PGRAPH_ABS_UCLIP_YMIN                         0x00400540 /* RW-4R */
#define NV_PGRAPH_ABS_UCLIP_YMIN_VALUE                         15:0 /* RWXSF */
#define NV_PGRAPH_ABS_UCLIP_YMIN_VALUE_019               0x00000000 /* RWC-V */
#define NV_PGRAPH_ABS_UCLIP_YMIN_VALUE_053               0x00000000 /* RWC-V */
#define NV_PGRAPH_ABS_UCLIP_YMAX                         0x00400548 /* RW-4R */
#define NV_PGRAPH_ABS_UCLIP_YMAX_VALUE                         17:0 /* RWXSF */
#define NV_PGRAPH_ABS_UCLIP_YMAX_VALUE_019               0x00000000 /* RWC-V */
#define NV_PGRAPH_ABS_UCLIP_YMAX_VALUE_053               0x00000000 /* RWC-V */
#define NV_PGRAPH_ABS_UCLIP3D_XMIN                       0x00400550 /* RW-4R */
#define NV_PGRAPH_ABS_UCLIP3D_XMIN_VALUE                       15:0 /* RWXSF */
#define NV_PGRAPH_ABS_UCLIP3D_XMAX                       0x00400558 /* RW-4R */
#define NV_PGRAPH_ABS_UCLIP3D_XMAX_VALUE                       17:0 /* RWXSF */
#define NV_PGRAPH_ABS_UCLIP3D_YMIN                       0x00400554 /* RW-4R */
#define NV_PGRAPH_ABS_UCLIP3D_YMIN_VALUE                       15:0 /* RWXSF */
#define NV_PGRAPH_ABS_UCLIP3D_YMAX                       0x0040055C /* RW-4R */
#define NV_PGRAPH_ABS_UCLIP3D_YMAX_VALUE                       17:0 /* RWXSF */
#define NV_PGRAPH_ABS_UCLIPA_XMIN                        0x00400560 /* RW-4R */
#define NV_PGRAPH_ABS_UCLIPA_XMIN_VALUE                        15:0 /* RWXSF */
#define NV_PGRAPH_ABS_UCLIPA_XMAX                        0x00400568 /* RW-4R */
#define NV_PGRAPH_ABS_UCLIPA_XMAX_VALUE                        17:0 /* RWXSF */
#define NV_PGRAPH_ABS_UCLIPA_YMIN                        0x00400564 /* RW-4R */
#define NV_PGRAPH_ABS_UCLIPA_YMIN_VALUE                        15:0 /* RWXSF */
#define NV_PGRAPH_ABS_UCLIPA_YMAX                        0x0040056C /* RW-4R */
#define NV_PGRAPH_ABS_UCLIPA_YMAX_VALUE                        17:0 /* RWXSF */
#define NV_PGRAPH_SOURCE_COLOR                           0x0040050C /* RW-4R */
#define NV_PGRAPH_SOURCE_COLOR_VALUE                           31:0 /* RWNVF */
#define NV_PGRAPH_SOURCE_COLOR_VALUE_0                   0x00000000 /* RWN-V */
#define NV_PGRAPH_VALID1                                 0x00400508 /* RW-4R */
#define NV_PGRAPH_VALID1_VLD                                   22:0 /* RWNVF */
#define NV_PGRAPH_VALID1_VLD_0                           0x00000000 /* RWN-V */
#define NV_PGRAPH_VALID1_VLD_NOCLIP                       (0x1<<19) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_SRCCOLOR                     (0x1<<16) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTMOVE                      (0x1<<21) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTX01                        (0x3<<0) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTX02                        (0x7<<0) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTX03                        (0xf<<0) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTXCHAIN01                   (0x3<<4) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTXCHAIN02                   (0x7<<4) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTXCHAIN03                   (0xf<<4) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTY01                        (0x3<<8) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTY02                        (0x7<<8) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTY03                        (0xf<<8) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTYCHAIN01                  (0x3<<12) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTYCHAIN02                  (0x7<<12) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTYCHAIN03                  (0xf<<12) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_X_OFFSET                      (0x1<<0) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_XCHAIN_OFFSET                 (0x1<<4) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_Y_OFFSET                      (0x1<<8) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_YCHAIN_OFFSET                (0x1<<12) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTCOLOR0                    (0x1<<17) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTCOLOR1                    (0x1<<18) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTCLIP                      (0x1<<20) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTFONT                      (0x1<<22) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTOFFSET                    (0x1<<22) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTBPITCH                     (0x1<<2) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTBOFFSET                    (0x1<<3) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTDUDX                       (0x1<<4) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTDVDY                       (0x1<<5) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTPOINT                      (0x1<<8) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTSIZE                       (0x1<<9) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTPITCH                     (0x1<<10) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTSTART                     (0x1<<11) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTDUDX2                     (0x1<<12) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTDVDY2                     (0x1<<13) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTPOINT2                    (0x1<<14) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTSIZE2                     (0x1<<15) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTPITCH2                    (0x1<<16) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTSTART2                    (0x1<<17) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTOFFSIN                     (0x1<<0) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTOFFSOUT                    (0x1<<1) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTPITCHIN                    (0x1<<2) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTPITCHOUT                   (0x1<<3) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTLENGTH                     (0x1<<4) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTCOUNT                      (0x1<<5) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTFORMAT                     (0x1<<6) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTNOTIFY                     (0x1<<7) /* RW--V */
#define NV_PGRAPH_VALID1_CLIP_MIN                             28:28 /* RWIVF */
#define NV_PGRAPH_VALID1_CLIP_MIN_NO_ERROR               0x00000000 /* RWI-V */
#define NV_PGRAPH_VALID1_CLIP_MIN_ONLY                   0x00000001 /* RW--V */
#define NV_PGRAPH_VALID1_CLIP_MIN_019                    0x00000000 /* RWC-V */
#define NV_PGRAPH_VALID1_CLIP_MIN_053                    0x00000000 /* RWC-V */
#define NV_PGRAPH_VALID1_CLIPA_MIN                            29:29 /* RWIVF */
#define NV_PGRAPH_VALID1_CLIPA_MIN_NO_ERROR              0x00000000 /* RWI-V */
#define NV_PGRAPH_VALID1_CLIPA_MIN_ONLY                  0x00000001 /* RW--V */
#define NV_PGRAPH_VALID1_CLIP_MAX                             30:30 /* RWIVF */
#define NV_PGRAPH_VALID1_CLIP_MAX_NO_ERROR               0x00000000 /* RWI-V */
#define NV_PGRAPH_VALID1_CLIP_MAX_ONLY                   0x00000001 /* RW--V */
#define NV_PGRAPH_VALID1_CLIP_MAX_019                    0x00000000 /* RWC-V */
#define NV_PGRAPH_VALID1_CLIP_MAX_053                    0x00000000 /* RWC-V */
#define NV_PGRAPH_VALID1_CLIPA_MAX                            31:31 /* RWIVF */
#define NV_PGRAPH_VALID1_CLIPA_MAX_NO_ERROR              0x00000000 /* RWI-V */
#define NV_PGRAPH_VALID1_CLIPA_MAX_ONLY                  0x00000001 /* RW--V */
#define NV_PGRAPH_VALID2                                 0x00400578 /* RW-4R */
#define NV_PGRAPH_VALID2_VLD2                                  28:0 /* RWNVF */
#define NV_PGRAPH_VALID2_VLD2_0                          0x00000000 /* RWN-V */
#define NV_PGRAPH_VALID2_VLD2_GOT3D_COMBINE0A               (1<<28) /* RW--V */
#define NV_PGRAPH_VALID2_VLD2_GOT3D_COMBINE0C               (1<<27) /* RW--V */
#define NV_PGRAPH_VALID2_VLD2_GOT3D_COMBINE1A               (1<<26) /* RW--V */
#define NV_PGRAPH_VALID2_VLD2_GOT3D_COMBINE1C               (1<<25) /* RW--V */
#define NV_PGRAPH_VALID2_VLD2_GOT3D_COMBFACTOR              (1<<24) /* RW--V */
#define NV_PGRAPH_VALID2_VLD2_GOT3D_FILTER1                 (1<<23) /* RW--V */
#define NV_PGRAPH_VALID2_VLD2_GOT3D_OFFSET1                 (1<<22) /* RW--V */
#define NV_PGRAPH_VALID2_VLD2_GOT3D_FORMAT1                 (1<<21) /* RW--V */
#define NV_PGRAPH_VALID2_VLD2_GOT3D_BLEND                   (1<<20) /* RW--V */
#define NV_PGRAPH_VALID2_VLD2_GOT3D_CONTROL2                (1<<19) /* RW--V */
#define NV_PGRAPH_VALID2_VLD2_GOT3D_CONTROL1                (1<<18) /* RW--V */
#define NV_PGRAPH_VALID2_VLD2_GOT3D_CONTROL0                (1<<17) /* RW--V */
#define NV_PGRAPH_VALID2_VLD2_GOT3D_FILTER0                 (1<<16) /* RW--V */
#define NV_PGRAPH_VALID2_VLD2_GOT3D_FORMAT0                 (1<<15) /* RW--V */
#define NV_PGRAPH_VALID2_VLD2_GOT3D_OFFSET0                 (1<<14) /* RW--V */
#define NV_PGRAPH_VALID2_VLD2_GOT3D_FOGCOLOR                (1<<13) /* RW--V */
#define NV_PGRAPH_VALID2_VLD2_GOT3D_COLORKEY                (1<<12) /* RW--V */
#define NV_PGRAPH_VALID2_VLD2_GOT3D_V1                       (1<<9) /* RW--V */
#define NV_PGRAPH_VALID2_VLD2_GOT3D_U1                       (1<<8) /* RW--V */
#define NV_PGRAPH_VALID2_VLD2_GOT3D_V0                       (1<<7) /* RW--V */
#define NV_PGRAPH_VALID2_VLD2_GOT3D_U0                       (1<<6) /* RW--V */
#define NV_PGRAPH_VALID2_VLD2_GOT3D_X                        (1<<5) /* RW--V */
#define NV_PGRAPH_VALID2_VLD2_GOT3D_Y                        (1<<4) /* RW--V */
#define NV_PGRAPH_VALID2_VLD2_GOT3D_ZETA                     (1<<3) /* RW--V */
#define NV_PGRAPH_VALID2_VLD2_GOT3D_M                        (1<<2) /* RW--V */
#define NV_PGRAPH_VALID2_VLD2_GOT3D_COLOR                    (1<<1) /* RW--V */
#define NV_PGRAPH_VALID2_VLD2_GOT3D_SPECULAR                 (1<<0) /* RW--V */
#define NV_PGRAPH_VALID2_VLD2_DX3FULLVERTEX               (0x7f<<0) /* RW--V */
#define NV_PGRAPH_VALID2_VLD2_DX5FULLVERTEX               (0x7f<<0) /* RW--V */
#define NV_PGRAPH_VALID2_VLD2_DX6FULLVERTEX              (0x1ff<<0) /* RW--V */
#define NV_PGRAPH_VALID2_VLD2_DX3FULLSTATE               (0x3f<<13) /* RW--V */
#define NV_PGRAPH_VALID2_VLD2_DX5FULLSTATE              (0x1ff<<12) /* RW--V */
#define NV_PGRAPH_VALID2_VLD2_DX6FULLSTATE             (0xffff<<13) /* RW--V */
#define NV_PGRAPH_VALID2_CLIP3D_MIN                           30:30 /* RWIVF */
#define NV_PGRAPH_VALID2_CLIP3D_MIN_NO_ERROR             0x00000000 /* RWI-V */
#define NV_PGRAPH_VALID2_CLIP3D_MIN_ONLY                 0x00000001 /* RW--V */
#define NV_PGRAPH_VALID2_CLIP3D_MAX                           31:31 /* RWIVF */
#define NV_PGRAPH_VALID2_CLIP3D_MAX_NO_ERROR             0x00000000 /* RWI-V */
#define NV_PGRAPH_VALID2_CLIP3D_MAX_ONLY                 0x00000001 /* RW--V */
#define NV_PGRAPH_ABS_ICLIP_XMAX                         0x00400534 /* RW-4R */
#define NV_PGRAPH_ABS_ICLIP_XMAX_VALUE                         17:0 /* RWXSF */
#define NV_PGRAPH_ABS_ICLIP_YMAX                         0x00400538 /* RW-4R */
#define NV_PGRAPH_ABS_ICLIP_YMAX_VALUE                         17:0 /* RWXSF */
#define NV_PGRAPH_CLIPX_0                                0x00400524 /* RW-4R */
#define NV_PGRAPH_CLIPX_0_CLIP0_MIN                             1:0 /* RWNVF */
#define NV_PGRAPH_CLIPX_0_CLIP0_MIN_GT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPX_0_CLIP0_MIN_LT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPX_0_CLIP0_MIN_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPX_0_CLIP0_MAX                             3:2 /* RWNVF */
#define NV_PGRAPH_CLIPX_0_CLIP0_MAX_LT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPX_0_CLIP0_MAX_GT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPX_0_CLIP0_MAX_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPX_0_CLIP1_MIN                             5:4 /* RWNVF */
#define NV_PGRAPH_CLIPX_0_CLIP1_MIN_GT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPX_0_CLIP1_MIN_LT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPX_0_CLIP1_MIN_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPX_0_CLIP1_MAX                             7:6 /* RWNVF */
#define NV_PGRAPH_CLIPX_0_CLIP1_MAX_LT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPX_0_CLIP1_MAX_GT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPX_0_CLIP1_MAX_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPX_0_CLIP2_MIN                             9:8 /* RWNVF */
#define NV_PGRAPH_CLIPX_0_CLIP2_MIN_GT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPX_0_CLIP2_MIN_LT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPX_0_CLIP2_MIN_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPX_0_CLIP2_MAX                           11:10 /* RWNVF */
#define NV_PGRAPH_CLIPX_0_CLIP2_MAX_LT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPX_0_CLIP2_MAX_GT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPX_0_CLIP2_MAX_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPX_0_CLIP3_MIN                           13:12 /* RWNVF */
#define NV_PGRAPH_CLIPX_0_CLIP3_MIN_GT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPX_0_CLIP3_MIN_LT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPX_0_CLIP3_MIN_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPX_0_CLIP3_MAX                           15:14 /* RWNVF */
#define NV_PGRAPH_CLIPX_0_CLIP3_MAX_LT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPX_0_CLIP3_MAX_GT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPX_0_CLIP3_MAX_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPX_0_CLIP4_MIN                           17:16 /* RWNVF */
#define NV_PGRAPH_CLIPX_0_CLIP4_MIN_GT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPX_0_CLIP4_MIN_LT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPX_0_CLIP4_MIN_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPX_0_CLIP4_MAX                           19:18 /* RWNVF */
#define NV_PGRAPH_CLIPX_0_CLIP4_MAX_LT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPX_0_CLIP4_MAX_GT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPX_0_CLIP4_MAX_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPX_0_CLIP5_MIN                           21:20 /* RWNVF */
#define NV_PGRAPH_CLIPX_0_CLIP5_MIN_GT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPX_0_CLIP5_MIN_LT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPX_0_CLIP5_MIN_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPX_0_CLIP5_MAX                           23:22 /* RWNVF */
#define NV_PGRAPH_CLIPX_0_CLIP5_MAX_LT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPX_0_CLIP5_MAX_GT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPX_0_CLIP5_MAX_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPX_0_CLIP6_MIN                           25:24 /* RWNVF */
#define NV_PGRAPH_CLIPX_0_CLIP6_MIN_GT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPX_0_CLIP6_MIN_LT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPX_0_CLIP6_MIN_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPX_0_CLIP6_MAX                           27:26 /* RWNVF */
#define NV_PGRAPH_CLIPX_0_CLIP6_MAX_LT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPX_0_CLIP6_MAX_GT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPX_0_CLIP6_MAX_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPX_0_CLIP7_MIN                           29:28 /* RWNVF */
#define NV_PGRAPH_CLIPX_0_CLIP7_MIN_GT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPX_0_CLIP7_MIN_LT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPX_0_CLIP7_MIN_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPX_0_CLIP7_MAX                           31:30 /* RWNVF */
#define NV_PGRAPH_CLIPX_0_CLIP7_MAX_LT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPX_0_CLIP7_MAX_GT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPX_0_CLIP7_MAX_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPX_1                                0x00400528 /* RW-4R */
#define NV_PGRAPH_CLIPX_1_CLIP8_MIN                             1:0 /* RWNVF */
#define NV_PGRAPH_CLIPX_1_CLIP8_MIN_GT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPX_1_CLIP8_MIN_LT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPX_1_CLIP8_MIN_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPX_1_CLIP8_MAX                             3:2 /* RWNVF */
#define NV_PGRAPH_CLIPX_1_CLIP8_MAX_LT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPX_1_CLIP8_MAX_GT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPX_1_CLIP8_MAX_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPX_1_CLIP9_MIN                             5:4 /* RWNVF */
#define NV_PGRAPH_CLIPX_1_CLIP9_MIN_GT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPX_1_CLIP9_MIN_LT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPX_1_CLIP9_MIN_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPX_1_CLIP9_MAX                             7:6 /* RWNVF */
#define NV_PGRAPH_CLIPX_1_CLIP9_MAX_LT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPX_1_CLIP9_MAX_GT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPX_1_CLIP9_MAX_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPX_1_CLIP10_MIN                            9:8 /* RWNVF */
#define NV_PGRAPH_CLIPX_1_CLIP10_MIN_GT                  0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPX_1_CLIP10_MIN_LT                  0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPX_1_CLIP10_MIN_EQ                  0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPX_1_CLIP10_MAX                          11:10 /* RWNVF */
#define NV_PGRAPH_CLIPX_1_CLIP10_MAX_LT                  0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPX_1_CLIP10_MAX_GT                  0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPX_1_CLIP10_MAX_EQ                  0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPX_1_CLIP11_MIN                          13:12 /* RWNVF */
#define NV_PGRAPH_CLIPX_1_CLIP11_MIN_GT                  0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPX_1_CLIP11_MIN_LT                  0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPX_1_CLIP11MIN_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPX_1_CLIP11_MAX                          15:14 /* RWNVF */
#define NV_PGRAPH_CLIPX_1_CLIP11_MAX_LT                  0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPX_1_CLIP11_MAX_GT                  0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPX_1_CLIP11_MAX_EQ                  0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPX_1_CLIP12_MIN                          17:16 /* RWNVF */
#define NV_PGRAPH_CLIPX_1_CLIP12_MIN_GT                  0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPX_1_CLIP12_MIN_LT                  0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPX_1_CLIP12_MIN_EQ                  0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPX_1_CLIP12_MAX                          19:18 /* RWNVF */
#define NV_PGRAPH_CLIPX_1_CLIP12_MAX_LT                  0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPX_1_CLIP12_MAX_GT                  0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPX_1_CLIP12_MAX_EQ                  0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPX_1_CLIP13_MIN                          21:20 /* RWNVF */
#define NV_PGRAPH_CLIPX_1_CLIP13_MIN_GT                  0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPX_1_CLIP13_MIN_LT                  0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPX_1_CLIP13_MIN_EQ                  0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPX_1_CLIP13_MAX                          23:22 /* RWNVF */
#define NV_PGRAPH_CLIPX_1_CLIP13_MAX_LT                  0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPX_1_CLIP13_MAX_GT                  0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPX_1_CLIP13_MAX_EQ                  0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPX_1_CLIP14_MIN                          25:24 /* RWNVF */
#define NV_PGRAPH_CLIPX_1_CLIP14_MIN_GT                  0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPX_1_CLIP14_MIN_LT                  0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPX_1_CLIP14_MIN_EQ                  0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPX_1_CLIP14_MAX                          27:26 /* RWNVF */
#define NV_PGRAPH_CLIPX_1_CLIP14_MAX_LT                  0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPX_1_CLIP14_MAX_GT                  0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPX_1_CLIP14_MAX_EQ                  0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPX_1_CLIP15_MIN                          29:28 /* RWNVF */
#define NV_PGRAPH_CLIPX_1_CLIP15_MIN_GT                  0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPX_1_CLIP15_MIN_LT                  0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPX_1_CLIP15_MIN_EQ                  0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPX_1_CLIP15_MAX                          31:30 /* RWNVF */
#define NV_PGRAPH_CLIPX_1_CLIP15_MAX_LT                  0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPX_1_CLIP15_MAX_GT                  0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPX_1_CLIP15_MAX_EQ                  0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPY_0                                0x0040052c /* RW-4R */
#define NV_PGRAPH_CLIPY_0_CLIP0_MIN                             1:0 /* RWNVF */
#define NV_PGRAPH_CLIPY_0_CLIP0_MIN_GT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPY_0_CLIP0_MIN_LT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPY_0_CLIP0_MIN_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPY_0_CLIP0_MAX                             3:2 /* RWNVF */
#define NV_PGRAPH_CLIPY_0_CLIP0_MAX_LT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPY_0_CLIP0_MAX_GT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPY_0_CLIP0_MAX_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPY_0_CLIP1_MIN                             5:4 /* RWNVF */
#define NV_PGRAPH_CLIPY_0_CLIP1_MIN_GT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPY_0_CLIP1_MIN_LT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPY_0_CLIP1_MIN_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPY_0_CLIP1_MAX                             7:6 /* RWNVF */
#define NV_PGRAPH_CLIPY_0_CLIP1_MAX_LT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPY_0_CLIP1_MAX_GT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPY_0_CLIP1_MAX_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPY_0_CLIP2_MIN                             9:8 /* RWNVF */
#define NV_PGRAPH_CLIPY_0_CLIP2_MIN_GT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPY_0_CLIP2_MIN_LT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPY_0_CLIP2_MIN_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPY_0_CLIP2_MAX                           11:10 /* RWNVF */
#define NV_PGRAPH_CLIPY_0_CLIP2_MAX_LT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPY_0_CLIP2_MAX_GT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPY_0_CLIP2_MAX_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPY_0_CLIP3_MIN                           13:12 /* RWNVF */
#define NV_PGRAPH_CLIPY_0_CLIP3_MIN_GT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPY_0_CLIP3_MIN_LT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPY_0_CLIP3_MIN_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPY_0_CLIP3_MAX                           15:14 /* RWNVF */
#define NV_PGRAPH_CLIPY_0_CLIP3_MAX_LT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPY_0_CLIP3_MAX_GT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPY_0_CLIP3_MAX_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPY_0_CLIP4_MIN                           17:16 /* RWNVF */
#define NV_PGRAPH_CLIPY_0_CLIP4_MIN_GT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPY_0_CLIP4_MIN_LT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPY_0_CLIP4_MIN_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPY_0_CLIP4_MAX                           19:18 /* RWNVF */
#define NV_PGRAPH_CLIPY_0_CLIP4_MAX_LT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPY_0_CLIP4_MAX_GT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPY_0_CLIP4_MAX_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPY_0_CLIP5_MIN                           21:20 /* RWNVF */
#define NV_PGRAPH_CLIPY_0_CLIP5_MIN_GT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPY_0_CLIP5_MIN_LT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPY_0_CLIP5_MIN_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPY_0_CLIP5_MAX                           23:22 /* RWNVF */
#define NV_PGRAPH_CLIPY_0_CLIP5_MAX_LT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPY_0_CLIP5_MAX_GT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPY_0_CLIP5_MAX_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPY_0_CLIP6_MIN                           25:24 /* RWNVF */
#define NV_PGRAPH_CLIPY_0_CLIP6_MIN_GT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPY_0_CLIP6_MIN_LT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPY_0_CLIP6_MIN_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPY_0_CLIP6_MAX                           27:26 /* RWNVF */
#define NV_PGRAPH_CLIPY_0_CLIP6_MAX_LT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPY_0_CLIP6_MAX_GT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPY_0_CLIP6_MAX_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPY_0_CLIP7_MIN                           29:28 /* RWNVF */
#define NV_PGRAPH_CLIPY_0_CLIP7_MIN_GT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPY_0_CLIP7_MIN_LT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPY_0_CLIP7_MIN_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPY_0_CLIP7_MAX                           31:30 /* RWNVF */
#define NV_PGRAPH_CLIPY_0_CLIP7_MAX_LT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPY_0_CLIP7_MAX_GT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPY_0_CLIP7_MAX_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPY_1                                0x00400530 /* RW-4R */
#define NV_PGRAPH_CLIPY_1_CLIP8_MIN                             1:0 /* RWNVF */
#define NV_PGRAPH_CLIPY_1_CLIP8_MIN_GT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPY_1_CLIP8_MIN_LT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPY_1_CLIP8_MIN_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPY_1_CLIP8_MAX                             3:2 /* RWNVF */
#define NV_PGRAPH_CLIPY_1_CLIP8_MAX_LT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPY_1_CLIP8_MAX_GT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPY_1_CLIP8_MAX_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPY_1_CLIP9_MIN                             5:4 /* RWNVF */
#define NV_PGRAPH_CLIPY_1_CLIP9_MIN_GT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPY_1_CLIP9_MIN_LT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPY_1_CLIP9_MIN_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPY_1_CLIP9_MAX                             7:6 /* RWNVF */
#define NV_PGRAPH_CLIPY_1_CLIP9_MAX_LT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPY_1_CLIP9_MAX_GT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPY_1_CLIP9_MAX_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPY_1_CLIP10_MIN                            9:8 /* RWNVF */
#define NV_PGRAPH_CLIPY_1_CLIP10_MIN_GT                  0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPY_1_CLIP10_MIN_LT                  0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPY_1_CLIP10_MIN_EQ                  0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPY_1_CLIP10_MAX                          11:10 /* RWNVF */
#define NV_PGRAPH_CLIPY_1_CLIP10_MAX_LT                  0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPY_1_CLIP10_MAX_GT                  0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPY_1_CLIP10_MAX_EQ                  0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPY_1_CLIP11_MIN                          13:12 /* RWNVF */
#define NV_PGRAPH_CLIPY_1_CLIP11_MIN_GT                  0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPY_1_CLIP11_MIN_LT                  0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPY_1_CLIP11MIN_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPY_1_CLIP11_MAX                          15:14 /* RWNVF */
#define NV_PGRAPH_CLIPY_1_CLIP11_MAX_LT                  0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPY_1_CLIP11_MAX_GT                  0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPY_1_CLIP11_MAX_EQ                  0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPY_1_CLIP12_MIN                          17:16 /* RWNVF */
#define NV_PGRAPH_CLIPY_1_CLIP12_MIN_GT                  0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPY_1_CLIP12_MIN_LT                  0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPY_1_CLIP12_MIN_EQ                  0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPY_1_CLIP12_MAX                          19:18 /* RWNVF */
#define NV_PGRAPH_CLIPY_1_CLIP12_MAX_LT                  0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPY_1_CLIP12_MAX_GT                  0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPY_1_CLIP12_MAX_EQ                  0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPY_1_CLIP13_MIN                          21:20 /* RWNVF */
#define NV_PGRAPH_CLIPY_1_CLIP13_MIN_GT                  0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPY_1_CLIP13_MIN_LT                  0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPY_1_CLIP13_MIN_EQ                  0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPY_1_CLIP13_MAX                          23:22 /* RWNVF */
#define NV_PGRAPH_CLIPY_1_CLIP13_MAX_LT                  0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPY_1_CLIP13_MAX_GT                  0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPY_1_CLIP13_MAX_EQ                  0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPY_1_CLIP14_MIN                          25:24 /* RWNVF */
#define NV_PGRAPH_CLIPY_1_CLIP14_MIN_GT                  0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPY_1_CLIP14_MIN_LT                  0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPY_1_CLIP14_MIN_EQ                  0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPY_1_CLIP14_MAX                          27:26 /* RWNVF */
#define NV_PGRAPH_CLIPY_1_CLIP14_MAX_LT                  0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPY_1_CLIP14_MAX_GT                  0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPY_1_CLIP14_MAX_EQ                  0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPY_1_CLIP15_MIN                          29:28 /* RWNVF */
#define NV_PGRAPH_CLIPY_1_CLIP15_MIN_GT                  0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPY_1_CLIP15_MIN_LT                  0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPY_1_CLIP15_MIN_EQ                  0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPY_1_CLIP15_MAX                          31:30 /* RWNVF */
#define NV_PGRAPH_CLIPY_1_CLIP15_MAX_LT                  0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPY_1_CLIP15_MAX_GT                  0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPY_1_CLIP15_MAX_EQ                  0x00000002 /* RW--V */
#define NV_PGRAPH_MISC24_0                               0x00400510 /* RW-4R */
#define NV_PGRAPH_MISC24_0_VALUE                               23:0 /* RWXUF */
#define NV_PGRAPH_MISC24_1                               0x00400570 /* RW-4R */
#define NV_PGRAPH_MISC24_1_VALUE                               23:0 /* RWXUF */
#define NV_PGRAPH_MISC24_2                               0x00400574 /* RW-4R */
#define NV_PGRAPH_MISC24_2_VALUE                               23:0 /* RWXUF */
#define NV_PGRAPH_PASSTHRU_0                             0x0040057C /* RW-4R */
#define NV_PGRAPH_PASSTHRU_0_VALUE                             31:0 /* RWXUF */
#define NV_PGRAPH_PASSTHRU_1                             0x00400580 /* RW-4R */
#define NV_PGRAPH_PASSTHRU_1_VALUE                             31:0 /* RWXUF */
#define NV_PGRAPH_PASSTHRU_2                             0x00400584 /* RW-4R */
#define NV_PGRAPH_PASSTHRU_2_VALUE                             31:0 /* RWXUF */
#define NV_PGRAPH_DIMX_TEXTURE                           0x00400588 /* RW-4R */
#define NV_PGRAPH_DIMX_TEXTURE_VALUE                           15:0 /* RWXUF */
#define NV_PGRAPH_WDIMX_TEXTURE                          0x0040058c /* RW-4R */
#define NV_PGRAPH_WDIMX_TEXTURE_VALUE                          16:0 /* RWXSF */
#define NV_PGRAPH_U_RAM(i)                       (0x00400d00+(i)*4) /* RW-4A */
#define NV_PGRAPH_U_RAM__SIZE_1                                  16 /*       */
#define NV_PGRAPH_U_RAM_VALUE                                  31:6 /* RWXFF */
#define NV_PGRAPH_V_RAM(i)                       (0x00400d40+(i)*4) /* RW-4A */
#define NV_PGRAPH_V_RAM__SIZE_1                                  16 /*       */
#define NV_PGRAPH_V_RAM_VALUE                                  31:6 /* RWXFF */
#define NV_PGRAPH_M_RAM(i)                       (0x00400d80+(i)*4) /* RW-4A */
#define NV_PGRAPH_M_RAM__SIZE_1                                  16 /*       */
#define NV_PGRAPH_M_RAM_VALUE                                  31:6 /* RWXFF */
#define NV_PGRAPH_D3D_XY                                 0x004005c0 /* RW-4R */
#define NV_PGRAPH_D3D_XY_X_VALUE                               15:0 /* RWXSF */
#define NV_PGRAPH_D3D_XY_Y_VALUE                              31:16 /* RWXSF */
#define NV_PGRAPH_D3D_U0                                 0x004005c4 /* RW-4R */
#define NV_PGRAPH_D3D_U0_VALUE                                 31:6 /* RWXFF */
#define NV_PGRAPH_D3D_V0                                 0x004005c8 /* RW-4R */
#define NV_PGRAPH_D3D_V0_VALUE                                 31:6 /* RWXFF */
#define NV_PGRAPH_D3D_U1                                 0x004005cc /* RW-4R */
#define NV_PGRAPH_D3D_U1_VALUE                                 31:6 /* RWXFF */
#define NV_PGRAPH_D3D_V1                                 0x004005d0 /* RW-4R */
#define NV_PGRAPH_D3D_V1_VALUE                                 31:6 /* RWXFF */
#define NV_PGRAPH_D3D_ZETA                               0x004005d4 /* RW-4R */
#define NV_PGRAPH_D3D_ZETA_VALUE                               31:0 /* RWXFF */
#define NV_PGRAPH_D3D_RGB                                0x004005d8 /* RW-4R */
#define NV_PGRAPH_D3D_RGB_VALUE                                31:0 /* RWXUF */
#define NV_PGRAPH_D3D_S                                  0x004005dc /* RW-4R */
#define NV_PGRAPH_D3D_S_VALUE                                  31:0 /* RWXUF */
#define NV_PGRAPH_D3D_M                                  0x004005e0 /* RW-4R */
#define NV_PGRAPH_D3D_M_VALUE                                  31:6 /* RWXFF */
#define NV_PGRAPH_FORMAT0                                0x004005A8 /* RW-4R */
#define NV_PGRAPH_FORMAT0_CONTEXT_DMA                           1:1 /* RWXVF */
#define NV_PGRAPH_FORMAT0_CONTEXT_DMA_A                  0x00000000 /* RW--V */
#define NV_PGRAPH_FORMAT0_CONTEXT_DMA_B                  0x00000001 /* RW--V */
#define NV_PGRAPH_FORMAT0_COLORKEYENABLE                        2:2 /* RWXVF */
#define NV_PGRAPH_FORMAT0_COLORKEYENABLE_FALSE           0x00000000 /* RW--V */
#define NV_PGRAPH_FORMAT0_COLORKEYENABLE_TRUE            0x00000001 /* RW--V */
#define NV_PGRAPH_FORMAT0_ORIGIN_ZOH                            5:5 /* RWXVF */
#define NV_PGRAPH_FORMAT0_ORIGIN_ZOH_CENTER              0x00000000 /* RW--V */
#define NV_PGRAPH_FORMAT0_ORIGIN_ZOH_CORNER              0x00000001 /* RW--V */
#define NV_PGRAPH_FORMAT0_ORIGIN_FOH                            7:7 /* RWXVF */
#define NV_PGRAPH_FORMAT0_ORIGIN_FOH_CENTER              0x00000000 /* RW--V */
#define NV_PGRAPH_FORMAT0_ORIGIN_FOH_CORNER              0x00000001 /* RW--V */
#define NV_PGRAPH_FORMAT0_COLOR                                10:8 /* RWXVF */
#define NV_PGRAPH_FORMAT0_COLOR_LE_Y8                    0x00000000 /* RW--V */
#define NV_PGRAPH_FORMAT0_COLOR_LE_AY8                   0x00000001 /* RW--V */
#define NV_PGRAPH_FORMAT0_COLOR_LE_A1R5G5B5              0x00000002 /* RW--V */
#define NV_PGRAPH_FORMAT0_COLOR_LE_X1R5G5B5              0x00000003 /* RW--V */
#define NV_PGRAPH_FORMAT0_COLOR_LE_A4R4G4B4              0x00000004 /* RW--V */
#define NV_PGRAPH_FORMAT0_COLOR_LE_R5G6B5                0x00000005 /* RW--V */
#define NV_PGRAPH_FORMAT0_COLOR_LE_A8R8G8B8              0x00000006 /* RW--V */
#define NV_PGRAPH_FORMAT0_COLOR_LE_X8R8G8B8              0x00000007 /* RW--V */
#define NV_PGRAPH_FORMAT0_MIPMAP_LEVELS                       15:12 /* RWXVF */
#define NV_PGRAPH_FORMAT0_MIPMAP_LEVELS_INVALID          0x00000000 /* RW--V */
#define NV_PGRAPH_FORMAT0_MIPMAP_LEVELS_1                0x00000001 /* RW--V */
#define NV_PGRAPH_FORMAT0_MIPMAP_LEVELS_2                0x00000002 /* RW--V */
#define NV_PGRAPH_FORMAT0_MIPMAP_LEVELS_3                0x00000003 /* RW--V */
#define NV_PGRAPH_FORMAT0_MIPMAP_LEVELS_4                0x00000004 /* RW--V */
#define NV_PGRAPH_FORMAT0_MIPMAP_LEVELS_5                0x00000005 /* RW--V */
#define NV_PGRAPH_FORMAT0_MIPMAP_LEVELS_6                0x00000006 /* RW--V */
#define NV_PGRAPH_FORMAT0_MIPMAP_LEVELS_7                0x00000007 /* RW--V */
#define NV_PGRAPH_FORMAT0_MIPMAP_LEVELS_8                0x00000008 /* RW--V */
#define NV_PGRAPH_FORMAT0_MIPMAP_LEVELS_9                0x00000009 /* RW--V */
#define NV_PGRAPH_FORMAT0_MIPMAP_LEVELS_10               0x0000000A /* RW--V */
#define NV_PGRAPH_FORMAT0_MIPMAP_LEVELS_11               0x0000000B /* RW--V */
#define NV_PGRAPH_FORMAT0_MIPMAP_LEVELS_12               0x0000000C /* RW--V */
#define NV_PGRAPH_FORMAT0_MIPMAP_LEVELS_13               0x0000000D /* RW--V */
#define NV_PGRAPH_FORMAT0_MIPMAP_LEVELS_14               0x0000000E /* RW--V */
#define NV_PGRAPH_FORMAT0_MIPMAP_LEVELS_15               0x0000000F /* RW--V */
#define NV_PGRAPH_FORMAT0_BASE_SIZE_U                         19:16 /* RWXVF */
#define NV_PGRAPH_FORMAT0_BASE_SIZE_U_1                  0x00000000 /* RW--V */
#define NV_PGRAPH_FORMAT0_BASE_SIZE_U_2                  0x00000001 /* RW--V */
#define NV_PGRAPH_FORMAT0_BASE_SIZE_U_4                  0x00000002 /* RW--V */
#define NV_PGRAPH_FORMAT0_BASE_SIZE_U_8                  0x00000003 /* RW--V */
#define NV_PGRAPH_FORMAT0_BASE_SIZE_U_16                 0x00000004 /* RW--V */
#define NV_PGRAPH_FORMAT0_BASE_SIZE_U_32                 0x00000005 /* RW--V */
#define NV_PGRAPH_FORMAT0_BASE_SIZE_U_64                 0x00000006 /* RW--V */
#define NV_PGRAPH_FORMAT0_BASE_SIZE_U_128                0x00000007 /* RW--V */
#define NV_PGRAPH_FORMAT0_BASE_SIZE_U_256                0x00000008 /* RW--V */
#define NV_PGRAPH_FORMAT0_BASE_SIZE_U_512                0x00000009 /* RW--V */
#define NV_PGRAPH_FORMAT0_BASE_SIZE_U_1024               0x0000000A /* RW--V */
#define NV_PGRAPH_FORMAT0_BASE_SIZE_U_2048               0x0000000B /* RW--V */
#define NV_PGRAPH_FORMAT0_BASE_SIZE_V                         23:20 /* RWXVF */
#define NV_PGRAPH_FORMAT0_BASE_SIZE_V_1                  0x00000000 /* RW--V */
#define NV_PGRAPH_FORMAT0_BASE_SIZE_V_2                  0x00000001 /* RW--V */
#define NV_PGRAPH_FORMAT0_BASE_SIZE_V_4                  0x00000002 /* RW--V */
#define NV_PGRAPH_FORMAT0_BASE_SIZE_V_8                  0x00000003 /* RW--V */
#define NV_PGRAPH_FORMAT0_BASE_SIZE_V_16                 0x00000004 /* RW--V */
#define NV_PGRAPH_FORMAT0_BASE_SIZE_V_32                 0x00000005 /* RW--V */
#define NV_PGRAPH_FORMAT0_BASE_SIZE_V_64                 0x00000006 /* RW--V */
#define NV_PGRAPH_FORMAT0_BASE_SIZE_V_128                0x00000007 /* RW--V */
#define NV_PGRAPH_FORMAT0_BASE_SIZE_V_256                0x00000008 /* RW--V */
#define NV_PGRAPH_FORMAT0_BASE_SIZE_V_512                0x00000009 /* RW--V */
#define NV_PGRAPH_FORMAT0_BASE_SIZE_V_1024               0x0000000A /* RW--V */
#define NV_PGRAPH_FORMAT0_BASE_SIZE_V_2048               0x0000000B /* RW--V */
#define NV_PGRAPH_FORMAT0_TEXTUREADDRESSU                     26:24 /* RWXVF */
#define NV_PGRAPH_FORMAT0_TEXTUREADDRESSU_WRAP           0x00000001 /* RW--V */
#define NV_PGRAPH_FORMAT0_TEXTUREADDRESSU_MIRROR         0x00000002 /* RW--V */
#define NV_PGRAPH_FORMAT0_TEXTUREADDRESSU_CLAMP          0x00000003 /* RW--V */
#define NV_PGRAPH_FORMAT0_TEXTUREADDRESSU_BORDER         0x00000004 /* RW--V */
#define NV_PGRAPH_FORMAT0_WRAPU                               27:27 /* RWXVF */
#define NV_PGRAPH_FORMAT0_WRAPU_FALSE                    0x00000000 /* RW--V */
#define NV_PGRAPH_FORMAT0_WRAPU_TRUE                     0x00000001 /* RW--V */
#define NV_PGRAPH_FORMAT0_TEXTUREADDRESSV                     30:28 /* RWXVF */
#define NV_PGRAPH_FORMAT0_TEXTUREADDRESSV_WRAP           0x00000001 /* RW--V */
#define NV_PGRAPH_FORMAT0_TEXTUREADDRESSV_MIRROR         0x00000002 /* RW--V */
#define NV_PGRAPH_FORMAT0_TEXTUREADDRESSV_CLAMP          0x00000003 /* RW--V */
#define NV_PGRAPH_FORMAT0_TEXTUREADDRESSV_BORDER         0x00000004 /* RW--V */
#define NV_PGRAPH_FORMAT0_WRAPV                               31:31 /* RWXVF */
#define NV_PGRAPH_FORMAT0_WRAPV_FALSE                    0x00000000 /* RW--V */
#define NV_PGRAPH_FORMAT0_WRAPV_TRUE                     0x00000001 /* RW--V */
#define NV_PGRAPH_FORMAT1                                0x004005AC /* RW-4R */
#define NV_PGRAPH_FORMAT1_CONTEXT_DMA                           1:1 /* RWXVF */
#define NV_PGRAPH_FORMAT1_CONTEXT_DMA_A                  0x00000000 /* RW--V */
#define NV_PGRAPH_FORMAT1_CONTEXT_DMA_B                  0x00000001 /* RW--V */
#define NV_PGRAPH_FORMAT1_COLORKEYENABLE                        2:2 /* RWXVF */
#define NV_PGRAPH_FORMAT1_COLORKEYENABLE_FALSE           0x00000000 /* RW--V */
#define NV_PGRAPH_FORMAT1_COLORKEYENABLE_TRUE            0x00000001 /* RW--V */
#define NV_PGRAPH_FORMAT1_ORIGIN_ZOH                            5:5 /* RWXVF */
#define NV_PGRAPH_FORMAT1_ORIGIN_ZOH_CENTER              0x00000000 /* RW--V */
#define NV_PGRAPH_FORMAT1_ORIGIN_ZOH_CORNER              0x00000001 /* RW--V */
#define NV_PGRAPH_FORMAT1_ORIGIN_FOH                            7:7 /* RWXVF */
#define NV_PGRAPH_FORMAT1_ORIGIN_FOH_CENTER              0x00000000 /* RW--V */
#define NV_PGRAPH_FORMAT1_ORIGIN_FOH_CORNER              0x00000001 /* RW--V */
#define NV_PGRAPH_FORMAT1_COLOR                                10:8 /* RWXVF */
#define NV_PGRAPH_FORMAT1_COLOR_LE_Y8                    0x00000000 /* RW--V */
#define NV_PGRAPH_FORMAT1_COLOR_LE_AY8                   0x00000001 /* RW--V */
#define NV_PGRAPH_FORMAT1_COLOR_LE_A1R5G5B5              0x00000002 /* RW--V */
#define NV_PGRAPH_FORMAT1_COLOR_LE_X1R5G5B5              0x00000003 /* RW--V */
#define NV_PGRAPH_FORMAT1_COLOR_LE_A4R4G4B4              0x00000004 /* RW--V */
#define NV_PGRAPH_FORMAT1_COLOR_LE_R5G6B5                0x00000005 /* RW--V */
#define NV_PGRAPH_FORMAT1_COLOR_LE_A8R8G8B8              0x00000006 /* RW--V */
#define NV_PGRAPH_FORMAT1_COLOR_LE_X8R8G8B8              0x00000007 /* RW--V */
#define NV_PGRAPH_FORMAT1_MIPMAP_LEVELS                       15:12 /* RWXVF */
#define NV_PGRAPH_FORMAT1_MIPMAP_LEVELS_INVALID          0x00000000 /* RW--V */
#define NV_PGRAPH_FORMAT1_MIPMAP_LEVELS_1                0x00000001 /* RW--V */
#define NV_PGRAPH_FORMAT1_MIPMAP_LEVELS_2                0x00000002 /* RW--V */
#define NV_PGRAPH_FORMAT1_MIPMAP_LEVELS_3                0x00000003 /* RW--V */
#define NV_PGRAPH_FORMAT1_MIPMAP_LEVELS_4                0x00000004 /* RW--V */
#define NV_PGRAPH_FORMAT1_MIPMAP_LEVELS_5                0x00000005 /* RW--V */
#define NV_PGRAPH_FORMAT1_MIPMAP_LEVELS_6                0x00000006 /* RW--V */
#define NV_PGRAPH_FORMAT1_MIPMAP_LEVELS_7                0x00000007 /* RW--V */
#define NV_PGRAPH_FORMAT1_MIPMAP_LEVELS_8                0x00000008 /* RW--V */
#define NV_PGRAPH_FORMAT1_MIPMAP_LEVELS_9                0x00000009 /* RW--V */
#define NV_PGRAPH_FORMAT1_MIPMAP_LEVELS_10               0x0000000A /* RW--V */
#define NV_PGRAPH_FORMAT1_MIPMAP_LEVELS_11               0x0000000B /* RW--V */
#define NV_PGRAPH_FORMAT1_MIPMAP_LEVELS_12               0x0000000C /* RW--V */
#define NV_PGRAPH_FORMAT1_MIPMAP_LEVELS_13               0x0000000D /* RW--V */
#define NV_PGRAPH_FORMAT1_MIPMAP_LEVELS_14               0x0000000E /* RW--V */
#define NV_PGRAPH_FORMAT1_MIPMAP_LEVELS_15               0x0000000F /* RW--V */
#define NV_PGRAPH_FORMAT1_BASE_SIZE_U                         19:16 /* RWXVF */
#define NV_PGRAPH_FORMAT1_BASE_SIZE_U_1                  0x00000000 /* RW--V */
#define NV_PGRAPH_FORMAT1_BASE_SIZE_U_2                  0x00000001 /* RW--V */
#define NV_PGRAPH_FORMAT1_BASE_SIZE_U_4                  0x00000002 /* RW--V */
#define NV_PGRAPH_FORMAT1_BASE_SIZE_U_8                  0x00000003 /* RW--V */
#define NV_PGRAPH_FORMAT1_BASE_SIZE_U_16                 0x00000004 /* RW--V */
#define NV_PGRAPH_FORMAT1_BASE_SIZE_U_32                 0x00000005 /* RW--V */
#define NV_PGRAPH_FORMAT1_BASE_SIZE_U_64                 0x00000006 /* RW--V */
#define NV_PGRAPH_FORMAT1_BASE_SIZE_U_128                0x00000007 /* RW--V */
#define NV_PGRAPH_FORMAT1_BASE_SIZE_U_256                0x00000008 /* RW--V */
#define NV_PGRAPH_FORMAT1_BASE_SIZE_U_512                0x00000009 /* RW--V */
#define NV_PGRAPH_FORMAT1_BASE_SIZE_U_1024               0x0000000A /* RW--V */
#define NV_PGRAPH_FORMAT1_BASE_SIZE_U_2048               0x0000000B /* RW--V */
#define NV_PGRAPH_FORMAT1_BASE_SIZE_V                         23:20 /* RWXVF */
#define NV_PGRAPH_FORMAT1_BASE_SIZE_V_1                  0x00000000 /* RW--V */
#define NV_PGRAPH_FORMAT1_BASE_SIZE_V_2                  0x00000001 /* RW--V */
#define NV_PGRAPH_FORMAT1_BASE_SIZE_V_4                  0x00000002 /* RW--V */
#define NV_PGRAPH_FORMAT1_BASE_SIZE_V_8                  0x00000003 /* RW--V */
#define NV_PGRAPH_FORMAT1_BASE_SIZE_V_16                 0x00000004 /* RW--V */
#define NV_PGRAPH_FORMAT1_BASE_SIZE_V_32                 0x00000005 /* RW--V */
#define NV_PGRAPH_FORMAT1_BASE_SIZE_V_64                 0x00000006 /* RW--V */
#define NV_PGRAPH_FORMAT1_BASE_SIZE_V_128                0x00000007 /* RW--V */
#define NV_PGRAPH_FORMAT1_BASE_SIZE_V_256                0x00000008 /* RW--V */
#define NV_PGRAPH_FORMAT1_BASE_SIZE_V_512                0x00000009 /* RW--V */
#define NV_PGRAPH_FORMAT1_BASE_SIZE_V_1024               0x0000000A /* RW--V */
#define NV_PGRAPH_FORMAT1_BASE_SIZE_V_2048               0x0000000B /* RW--V */
#define NV_PGRAPH_FORMAT1_TEXTUREADDRESSU                     26:24 /* RWXVF */
#define NV_PGRAPH_FORMAT1_TEXTUREADDRESSU_WRAP           0x00000001 /* RW--V */
#define NV_PGRAPH_FORMAT1_TEXTUREADDRESSU_MIRROR         0x00000002 /* RW--V */
#define NV_PGRAPH_FORMAT1_TEXTUREADDRESSU_CLAMP          0x00000003 /* RW--V */
#define NV_PGRAPH_FORMAT1_TEXTUREADDRESSU_BORDER         0x00000004 /* RW--V */
#define NV_PGRAPH_FORMAT1_WRAPU                               27:27 /* RWXVF */
#define NV_PGRAPH_FORMAT1_WRAPU_FALSE                    0x00000000 /* RW--V */
#define NV_PGRAPH_FORMAT1_WRAPU_TRUE                     0x00000001 /* RW--V */
#define NV_PGRAPH_FORMAT1_TEXTUREADDRESSV                     30:28 /* RWXVF */
#define NV_PGRAPH_FORMAT1_TEXTUREADDRESSV_WRAP           0x00000001 /* RW--V */
#define NV_PGRAPH_FORMAT1_TEXTUREADDRESSV_MIRROR         0x00000002 /* RW--V */
#define NV_PGRAPH_FORMAT1_TEXTUREADDRESSV_CLAMP          0x00000003 /* RW--V */
#define NV_PGRAPH_FORMAT1_TEXTUREADDRESSV_BORDER         0x00000004 /* RW--V */
#define NV_PGRAPH_FORMAT1_WRAPV                               31:31 /* RWXVF */
#define NV_PGRAPH_FORMAT1_WRAPV_FALSE                    0x00000000 /* RW--V */
#define NV_PGRAPH_FORMAT1_WRAPV_TRUE                     0x00000001 /* RW--V */
#define NV_PGRAPH_BUNDLE_BASE                            0x00400E00 /* RW-4R */
#define NV_PGRAPH_TEXTUREOFFSET0                         0x00400E00 /* RW-4R */
#define NV_PGRAPH_TEXTUREOFFSET0_BUNDLE                  0x00000000 /* ----B */
#define NV_PGRAPH_TEXTUREOFFSET0_VALUE                         31:0 /* RWXUF */
#define NV_PGRAPH_TEXTUREOFFSET1                         0x00400E04 /* RW-4R */
#define NV_PGRAPH_TEXTUREOFFSET1_BUNDLE                  0x00000001 /* ----B */
#define NV_PGRAPH_TEXTUREOFFSET1_VALUE                         31:0 /* RWXUF */
#define NV_PGRAPH_TEXTUREPALETTE0                        0x00400E08 /* RW-4R */
#define NV_PGRAPH_TEXTUREPALETTE0_BUNDLE                 0x00000002 /* ----B */
#define NV_PGRAPH_TEXTUREPALETTE0_CONTEXT_DMA                   0:0 /* RWXVF */
#define NV_PGRAPH_TEXTUREPALETTE0_CONTEXT_DMA_A          0x00000000 /* RW--V */
#define NV_PGRAPH_TEXTUREPALETTE0_CONTEXT_DMA_B          0x00000001 /* RW--V */
#define NV_PGRAPH_TEXTUREPALETTE0_OFFSET                       31:6 /* RWXUF */
#define NV_PGRAPH_TEXTUREPALETTE1                        0x00400E0C /* RW-4R */
#define NV_PGRAPH_TEXTUREPALETTE1_BUNDLE                 0x00000003 /* ----B */
#define NV_PGRAPH_TEXTUREPALETTE1_CONTEXT_DMA                   0:0 /* RWXVF */
#define NV_PGRAPH_TEXTUREPALETTE1_CONTEXT_DMA_A          0x00000000 /* RW--V */
#define NV_PGRAPH_TEXTUREPALETTE1_CONTEXT_DMA_B          0x00000001 /* RW--V */
#define NV_PGRAPH_TEXTUREPALETTE1_OFFSET                       31:6 /* RWXUF */
#define NV_PGRAPH_TEXFORMAT0                             0x00400E10 /* RW-4R */
#define NV_PGRAPH_TEXFORMAT0_BUNDLE                      0x00000004 /* ----B */
#define NV_PGRAPH_TEXFORMAT0_CONTEXT_DMA                        1:1 /* RWXVF */
#define NV_PGRAPH_TEXFORMAT0_CONTEXT_DMA_A               0x00000000 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_CONTEXT_DMA_B               0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_CUBEMAPENABLE                      2:2 /* RWXVF */
#define NV_PGRAPH_TEXFORMAT0_CUBEMAPENABLE_OFF           0x00000000 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_CUBEMAPENABLE_ON            0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_ORIGIN_ZOH                         4:4 /* RWXVF */
#define NV_PGRAPH_TEXFORMAT0_ORIGIN_ZOH_CENTER           0x00000000 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_ORIGIN_ZOH_CORNER           0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_ORIGIN_FOH                         6:6 /* RWXVF */
#define NV_PGRAPH_TEXFORMAT0_ORIGIN_FOH_CENTER           0x00000000 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_ORIGIN_FOH_CORNER           0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_COLOR                             11:7 /* RWXVF */
#define NV_PGRAPH_TEXFORMAT0_COLOR_LE_Y8                 0x00000000 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_COLOR_LE_AY8                0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_COLOR_LE_A1R5G5B5           0x00000002 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_COLOR_LE_X1R5G5B5           0x00000003 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_COLOR_LE_A4R4G4B4           0x00000004 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_COLOR_LE_R5G6B5             0x00000005 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_COLOR_LE_A8R8G8B8           0x00000006 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_COLOR_LE_X8R8G8B8           0x00000007 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_COLOR_LE_I8_A1R5G5B5        0x00000008 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_COLOR_LE_I8_R5G6B5          0x00000009 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_COLOR_LE_I8_A4R4G4B4        0x0000000A /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_COLOR_LE_I8_A8R8G8B8        0x0000000B /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_COLOR_LE_DXT1_A1R5G5B5      0x0000000C /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_COLOR_LE_DXT23_A8R8G8B8     0x0000000E /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_COLOR_LE_DXT45_A8R8G8B8     0x0000000F /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_COLOR_LE_IMAGE_A1R5G5B5     0x00000010 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_COLOR_LE_IMAGE_R5G6B5       0x00000011 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_COLOR_LE_IMAGE_A8R8G8B8     0x00000012 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_COLOR_LE_IMAGE_Y8           0x00000013 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_COLOR_LE_IMAGE_SY8          0x00000014 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_COLOR_LE_IMAGE_X7SY9        0x00000015 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_COLOR_LE_IMAGE_R8B8         0x00000016 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_COLOR_LE_IMAGE_G8B8         0x00000017 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_COLOR_LE_IMAGE_SG8SB8       0x00000018 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_MIPMAP_LEVELS                    15:12 /* RWXVF */
#define NV_PGRAPH_TEXFORMAT0_MIPMAP_LEVELS_INVALID       0x00000000 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_MIPMAP_LEVELS_1             0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_MIPMAP_LEVELS_2             0x00000002 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_MIPMAP_LEVELS_3             0x00000003 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_MIPMAP_LEVELS_4             0x00000004 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_MIPMAP_LEVELS_5             0x00000005 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_MIPMAP_LEVELS_6             0x00000006 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_MIPMAP_LEVELS_7             0x00000007 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_MIPMAP_LEVELS_8             0x00000008 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_MIPMAP_LEVELS_9             0x00000009 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_MIPMAP_LEVELS_10            0x0000000A /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_MIPMAP_LEVELS_11            0x0000000B /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_MIPMAP_LEVELS_12            0x0000000C /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_BASE_SIZE_U                      19:16 /* RWXVF */
#define NV_PGRAPH_TEXFORMAT0_BASE_SIZE_U_1               0x00000000 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_BASE_SIZE_U_2               0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_BASE_SIZE_U_4               0x00000002 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_BASE_SIZE_U_8               0x00000003 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_BASE_SIZE_U_16              0x00000004 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_BASE_SIZE_U_32              0x00000005 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_BASE_SIZE_U_64              0x00000006 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_BASE_SIZE_U_128             0x00000007 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_BASE_SIZE_U_256             0x00000008 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_BASE_SIZE_U_512             0x00000009 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_BASE_SIZE_U_1024            0x0000000A /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_BASE_SIZE_U_2048            0x0000000B /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_BASE_SIZE_V                      23:20 /* RWXVF */
#define NV_PGRAPH_TEXFORMAT0_BASE_SIZE_V_1               0x00000000 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_BASE_SIZE_V_2               0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_BASE_SIZE_V_4               0x00000002 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_BASE_SIZE_V_8               0x00000003 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_BASE_SIZE_V_16              0x00000004 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_BASE_SIZE_V_32              0x00000005 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_BASE_SIZE_V_64              0x00000006 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_BASE_SIZE_V_128             0x00000007 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_BASE_SIZE_V_256             0x00000008 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_BASE_SIZE_V_512             0x00000009 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_BASE_SIZE_V_1024            0x0000000A /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_BASE_SIZE_V_2048            0x0000000B /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_TEXTUREADDRESSU                  26:24 /* RWXVF */
#define NV_PGRAPH_TEXFORMAT0_TEXTUREADDRESSU_WRAP        0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_TEXTUREADDRESSU_MIRROR      0x00000002 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_TEXTUREADDRESSU_CLAMP       0x00000003 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_TEXTUREADDRESSU_BORDER      0x00000004 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_WRAPU                            27:27 /* RWXVF */
#define NV_PGRAPH_TEXFORMAT0_WRAPU_FALSE                 0x00000000 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_WRAPU_TRUE                  0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_TEXTUREADDRESSV                  30:28 /* RWXVF */
#define NV_PGRAPH_TEXFORMAT0_TEXTUREADDRESSV_WRAP        0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_TEXTUREADDRESSV_MIRROR      0x00000002 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_TEXTUREADDRESSV_CLAMP       0x00000003 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_TEXTUREADDRESSV_BORDER      0x00000004 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_WRAPV                            31:31 /* RWXVF */
#define NV_PGRAPH_TEXFORMAT0_WRAPV_FALSE                 0x00000000 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_WRAPV_TRUE                  0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1                             0x00400E14 /* RW-4R */
#define NV_PGRAPH_TEXFORMAT1_BUNDLE                      0x00000005 /* ----B */
#define NV_PGRAPH_TEXFORMAT1_CONTEXT_DMA                        1:1 /* RWXVF */
#define NV_PGRAPH_TEXFORMAT1_CONTEXT_DMA_A               0x00000000 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_CONTEXT_DMA_B               0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_CUBEMAPENABLE                      2:2 /* RWXVF */
#define NV_PGRAPH_TEXFORMAT1_CUBEMAPENABLE_OFF           0x00000000 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_CUBEMAPENABLE_ON            0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_ORIGIN_ZOH                         4:4 /* RWXVF */
#define NV_PGRAPH_TEXFORMAT1_ORIGIN_ZOH_CENTER           0x00000000 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_ORIGIN_ZOH_CORNER           0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_ORIGIN_FOH                         6:6 /* RWXVF */
#define NV_PGRAPH_TEXFORMAT1_ORIGIN_FOH_CENTER           0x00000000 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_ORIGIN_FOH_CORNER           0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_COLOR                             11:7 /* RWXVF */
#define NV_PGRAPH_TEXFORMAT1_COLOR_LE_Y8                 0x00000000 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_COLOR_LE_AY8                0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_COLOR_LE_A1R5G5B5           0x00000002 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_COLOR_LE_X1R5G5B5           0x00000003 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_COLOR_LE_A4R4G4B4           0x00000004 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_COLOR_LE_R5G6B5             0x00000005 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_COLOR_LE_A8R8G8B8           0x00000006 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_COLOR_LE_X8R8G8B8           0x00000007 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_COLOR_LE_I8_A1R5G5B5        0x00000008 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_COLOR_LE_I8_R5G6B5          0x00000009 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_COLOR_LE_I8_A4R4G4B4        0x0000000A /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_COLOR_LE_I8_A8R8G8B8        0x0000000B /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_COLOR_LE_DXT1_A1R5G5B5      0x0000000C /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_COLOR_LE_DXT23_A8R8G8B8     0x0000000E /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_COLOR_LE_DXT45_A8R8G8B8     0x0000000F /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_COLOR_LE_IMAGE_A1R5G5B5     0x00000010 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_COLOR_LE_IMAGE_R5G6B5       0x00000011 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_COLOR_LE_IMAGE_A8R8G8B8     0x00000012 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_COLOR_LE_IMAGE_Y8           0x00000013 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_COLOR_LE_IMAGE_SY8          0x00000014 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_COLOR_LE_IMAGE_X7SY9        0x00000015 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_COLOR_LE_IMAGE_R8B8         0x00000016 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_COLOR_LE_IMAGE_G8B8         0x00000017 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_COLOR_LE_IMAGE_SG8SB8       0x00000018 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_MIPMAP_LEVELS                    15:12 /* RWXVF */
#define NV_PGRAPH_TEXFORMAT1_MIPMAP_LEVELS_INVALID       0x00000000 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_MIPMAP_LEVELS_1             0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_MIPMAP_LEVELS_2             0x00000002 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_MIPMAP_LEVELS_3             0x00000003 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_MIPMAP_LEVELS_4             0x00000004 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_MIPMAP_LEVELS_5             0x00000005 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_MIPMAP_LEVELS_6             0x00000006 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_MIPMAP_LEVELS_7             0x00000007 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_MIPMAP_LEVELS_8             0x00000008 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_MIPMAP_LEVELS_9             0x00000009 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_MIPMAP_LEVELS_10            0x0000000A /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_MIPMAP_LEVELS_11            0x0000000B /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_MIPMAP_LEVELS_12            0x0000000C /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_MIPMAP_LEVELS_13            0x0000000D /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_MIPMAP_LEVELS_14            0x0000000E /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_MIPMAP_LEVELS_15            0x0000000F /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_BASE_SIZE_U                      19:16 /* RWXVF */
#define NV_PGRAPH_TEXFORMAT1_BASE_SIZE_U_1               0x00000000 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_BASE_SIZE_U_2               0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_BASE_SIZE_U_4               0x00000002 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_BASE_SIZE_U_8               0x00000003 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_BASE_SIZE_U_16              0x00000004 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_BASE_SIZE_U_32              0x00000005 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_BASE_SIZE_U_64              0x00000006 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_BASE_SIZE_U_128             0x00000007 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_BASE_SIZE_U_256             0x00000008 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_BASE_SIZE_U_512             0x00000009 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_BASE_SIZE_U_1024            0x0000000A /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_BASE_SIZE_U_2048            0x0000000B /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_BASE_SIZE_V                      23:20 /* RWXVF */
#define NV_PGRAPH_TEXFORMAT1_BASE_SIZE_V_1               0x00000000 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_BASE_SIZE_V_2               0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_BASE_SIZE_V_4               0x00000002 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_BASE_SIZE_V_8               0x00000003 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_BASE_SIZE_V_16              0x00000004 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_BASE_SIZE_V_32              0x00000005 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_BASE_SIZE_V_64              0x00000006 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_BASE_SIZE_V_128             0x00000007 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_BASE_SIZE_V_256             0x00000008 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_BASE_SIZE_V_512             0x00000009 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_BASE_SIZE_V_1024            0x0000000A /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_BASE_SIZE_V_2048            0x0000000B /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_TEXTUREADDRESSU                  26:24 /* RWXVF */
#define NV_PGRAPH_TEXFORMAT1_TEXTUREADDRESSU_WRAP        0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_TEXTUREADDRESSU_MIRROR      0x00000002 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_TEXTUREADDRESSU_CLAMP       0x00000003 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_TEXTUREADDRESSU_BORDER      0x00000004 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_WRAPU                            27:27 /* RWXVF */
#define NV_PGRAPH_TEXFORMAT1_WRAPU_FALSE                 0x00000000 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_WRAPU_TRUE                  0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_TEXTUREADDRESSV                  30:28 /* RWXVF */
#define NV_PGRAPH_TEXFORMAT1_TEXTUREADDRESSV_WRAP        0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_TEXTUREADDRESSV_MIRROR      0x00000002 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_TEXTUREADDRESSV_CLAMP       0x00000003 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_TEXTUREADDRESSV_BORDER      0x00000004 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_WRAPV                            31:31 /* RWXVF */
#define NV_PGRAPH_TEXFORMAT1_WRAPV_FALSE                 0x00000000 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_WRAPV_TRUE                  0x00000001 /* RW--V */
#define NV_PGRAPH_TEXCONTROL0_0                          0x00400E18 /* RW-4R */
#define NV_PGRAPH_TEXCONTROL0_0_BUNDLE                   0x00000006 /* ----B */
#define NV_PGRAPH_TEXCONTROL0_0_COLORKEY_OP                     1:0 /* RWXVF */
#define NV_PGRAPH_TEXCONTROL0_0_COLORKEY_OP_DISABLE      0x00000000 /* RW--V */
#define NV_PGRAPH_TEXCONTROL0_0_COLORKEY_OP_CHANGE_ALPHA 0x00000001 /* RW--V */
#define NV_PGRAPH_TEXCONTROL0_0_COLORKEY_OP_CHANGE_ALL   0x00000002 /* RW--V */
#define NV_PGRAPH_TEXCONTROL0_0_COLORKEY_OP_MATCH_KILL   0x00000003 /* RW--V */
#define NV_PGRAPH_TEXCONTROL0_0_ALPHAKILLENABLE                 2:2 /* RWXVF */
#define NV_PGRAPH_TEXCONTROL0_0_ALPHAKILLENABLE_FALSE    0x00000000 /* RW--V */
#define NV_PGRAPH_TEXCONTROL0_0_ALPHAKILLENABLE_TRUE     0x00000001 /* RW--V */
#define NV_PGRAPH_TEXCONTROL0_0_FIELDENABLE                     3:3 /* RWXVF */
#define NV_PGRAPH_TEXCONTROL0_0_FIELDENABLE_FALSE        0x00000000 /* RW--V */
#define NV_PGRAPH_TEXCONTROL0_0_FIELDENABLE_TRUE         0x00000001 /* RW--V */
#define NV_PGRAPH_TEXCONTROL0_0_LOGMAXANISO                     5:4 /* RWXVF */
#define NV_PGRAPH_TEXCONTROL0_0_LOGMAXANISO_1            0x00000000 /* RW--V */
#define NV_PGRAPH_TEXCONTROL0_0_LOGMAXANISO_2            0x00000001 /* RW--V */
#define NV_PGRAPH_TEXCONTROL0_0_MAXLODCLAMP                    17:6 /* RWXSF */
#define NV_PGRAPH_TEXCONTROL0_0_MINLODCLAMP                   29:18 /* RWXSF */
#define NV_PGRAPH_TEXCONTROL0_0_ENABLE                        30:30 /* RWXVF */
#define NV_PGRAPH_TEXCONTROL0_0_ENABLE_FALSE             0x00000000 /* RW--V */
#define NV_PGRAPH_TEXCONTROL0_0_ENABLE_TRUE              0x00000001 /* RW--V */
#define NV_PGRAPH_TEXCONTROL0_1                          0x00400E1C /* RW-4R */
#define NV_PGRAPH_TEXCONTROL0_1_BUNDLE                   0x00000007 /* ----B */
#define NV_PGRAPH_TEXCONTROL0_1_COLORKEY_OP                     1:0 /* RWXVF */
#define NV_PGRAPH_TEXCONTROL0_1_COLORKEY_OP_DISABLE      0x00000000 /* RW--V */
#define NV_PGRAPH_TEXCONTROL0_1_COLORKEY_OP_CHANGE_ALPHA 0x00000001 /* RW--V */
#define NV_PGRAPH_TEXCONTROL0_1_COLORKEY_OP_CHANGE_ALL   0x00000002 /* RW--V */
#define NV_PGRAPH_TEXCONTROL0_1_COLORKEY_OP_MATCH_KILL   0x00000003 /* RW--V */
#define NV_PGRAPH_TEXCONTROL0_1_ALPHAKILLENABLE                 2:2 /* RWXVF */
#define NV_PGRAPH_TEXCONTROL0_1_ALPHAKILLENABLE_FALSE    0x00000000 /* RW--V */
#define NV_PGRAPH_TEXCONTROL0_1_ALPHAKILLENABLE_TRUE     0x00000001 /* RW--V */
#define NV_PGRAPH_TEXCONTROL0_1_FIELDENABLE                     3:3 /* RWXVF */
#define NV_PGRAPH_TEXCONTROL0_1_FIELDENABLE_FALSE        0x00000000 /* RW--V */
#define NV_PGRAPH_TEXCONTROL0_1_FIELDENABLE_TRUE         0x00000001 /* RW--V */
#define NV_PGRAPH_TEXCONTROL0_1_LOGMAXANISO                     5:4 /* RWXVF */
#define NV_PGRAPH_TEXCONTROL0_1_LOGMAXANISO_1            0x00000000 /* RW--V */
#define NV_PGRAPH_TEXCONTROL0_1_LOGMAXANISO_2            0x00000001 /* RW--V */
#define NV_PGRAPH_TEXCONTROL0_1_MAXLODCLAMP                    17:6 /* RWXSF */
#define NV_PGRAPH_TEXCONTROL0_1_MINLODCLAMP                   29:18 /* RWXSF */
#define NV_PGRAPH_TEXCONTROL0_1_ENABLE                        30:30 /* RWXVF */
#define NV_PGRAPH_TEXCONTROL0_1_ENABLE_FALSE             0x00000000 /* RW--V */
#define NV_PGRAPH_TEXCONTROL0_1_ENABLE_TRUE              0x00000001 /* RW--V */
#define NV_PGRAPH_TEXCONTROL1_0                          0x00400E20 /* RW-4R */
#define NV_PGRAPH_TEXCONTROL1_0_BUNDLE                   0x00000008 /* ----B */
#define NV_PGRAPH_TEXCONTROL1_0_IMAGEPITCH                    31:16 /* RWXUF */
#define NV_PGRAPH_TEXCONTROL1_1                          0x00400E24 /* RW-4R */
#define NV_PGRAPH_TEXCONTROL1_1_BUNDLE                   0x00000009 /* ----B */
#define NV_PGRAPH_TEXCONTROL1_1_IMAGEPITCH                    31:16 /* RWXUF */
#define NV_PGRAPH_TEXCONTROL2_0                          0x00400E28 /* RW-4R */
#define NV_PGRAPH_TEXCONTROL2_0_BUNDLE                   0x0000000A /* ----B */
#define NV_PGRAPH_TEXCONTROL2_0_PERTURB_DU                     11:0 /* RWXVF */
#define NV_PGRAPH_TEXCONTROL2_0_PERTURB_DV                    23:12 /* RWXUF */
#define NV_PGRAPH_TEXCONTROL2_0_IMAGE_LODF                    31:24 /* RWXUF */
#define NV_PGRAPH_TEXCONTROL2_1                          0x00400E2C /* RW-4R */
#define NV_PGRAPH_TEXCONTROL2_1_BUNDLE                   0x0000000B /* ----B */
#define NV_PGRAPH_TEXCONTROL2_1_PERTURB_DU                     11:0 /* RWXVF */
#define NV_PGRAPH_TEXCONTROL2_1_PERTURB_DV                    23:12 /* RWXUF */
#define NV_PGRAPH_TEXCONTROL2_1_IMAGE_LODF                    31:24 /* RWXUF */
#define NV_PGRAPH_IMAGERECT0                             0x00400E30 /* RW-4R */
#define NV_PGRAPH_IMAGERECT0_BUNDLE                      0x0000000C /* ----B */
#define NV_PGRAPH_IMAGERECT0_HEIGHT                            10:0 /* RWXUF */
#define NV_PGRAPH_IMAGERECT0_WIDTH                            26:16 /* RWXUF */
#define NV_PGRAPH_IMAGERECT1                             0x00400E34 /* RW-4R */
#define NV_PGRAPH_IMAGERECT1_BUNDLE                      0x0000000D /* ----B */
#define NV_PGRAPH_IMAGERECT1_HEIGHT                            10:0 /* RWXUF */
#define NV_PGRAPH_IMAGERECT1_WIDTH                            26:16 /* RWXUF */
#define NV_PGRAPH_FILTER0                                0x00400E38 /* RW-4R */
#define NV_PGRAPH_FILTER0_BUNDLE                         0x0000000E /* ----B */
#define NV_PGRAPH_FILTER0_KERNEL_SIZE_X                         4:1 /* RWXUF */
#define NV_PGRAPH_FILTER0_KERNEL_SIZE_Y                        12:9 /* RWXUF */
#define NV_PGRAPH_FILTER0_MIPMAPLODBIAS                        12:0 /* RWXSF */
#define NV_PGRAPH_FILTER0_MIPMAP_DITHER_ENABLE                15:15 /* RWXVF */
#define NV_PGRAPH_FILTER0_MIPMAP_DITHER_ENABLE_FALSE     0x00000000 /* RW--V */
#define NV_PGRAPH_FILTER0_MIPMAP_DITHER_ENABLE_TRUE      0x00000001 /* RW--V */
#define NV_PGRAPH_FILTER0_TEXTUREMIN                          26:24 /* RWXVF */
#define NV_PGRAPH_FILTER0_TEXTUREMIN_NEAREST             0x00000001 /* RW--V */
#define NV_PGRAPH_FILTER0_TEXTUREMIN_LINEAR              0x00000002 /* RW--V */
#define NV_PGRAPH_FILTER0_TEXTUREMIN_MIPNEAREST          0x00000003 /* RW--V */
#define NV_PGRAPH_FILTER0_TEXTUREMIN_MIPLINEAR           0x00000004 /* RW--V */
#define NV_PGRAPH_FILTER0_TEXTUREMIN_LINEARMIPNEAREST    0x00000005 /* RW--V */
#define NV_PGRAPH_FILTER0_TEXTUREMIN_LINEARMIPLINEAR     0x00000006 /* RW--V */
#define NV_PGRAPH_FILTER0_ANISOTROPIC_MIN_ENABLE              27:27 /* RWXVF */
#define NV_PGRAPH_FILTER0_ANISOTROPIC_MIN_ENABLE_FALSE   0x00000000 /* RW--V */
#define NV_PGRAPH_FILTER0_ANISOTROPIC_MIN_ENABLE_TRUE    0x00000001 /* RW--V */
#define NV_PGRAPH_FILTER0_TEXTUREMAG                          30:28 /* RWXVF */
#define NV_PGRAPH_FILTER0_TEXTUREMAG_NEAREST             0x00000001 /* RW--V */
#define NV_PGRAPH_FILTER0_TEXTUREMAG_LINEAR              0x00000002 /* RW--V */
#define NV_PGRAPH_FILTER0_TEXTUREMAG_MIPNEAREST          0x00000003 /* RW--V */
#define NV_PGRAPH_FILTER0_TEXTUREMAG_MIPLINEAR           0x00000004 /* RW--V */
#define NV_PGRAPH_FILTER0_TEXTUREMAG_LINEARMIPNEAREST    0x00000005 /* RW--V */
#define NV_PGRAPH_FILTER0_TEXTUREMAG_LINEARMIPLINEAR     0x00000006 /* RW--V */
#define NV_PGRAPH_FILTER0_ANISOTROPIC_MAG_ENABLE              31:31 /* RWXVF */
#define NV_PGRAPH_FILTER0_ANISOTROPIC_MAG_ENABLE_FALSE   0x00000000 /* RW--V */
#define NV_PGRAPH_FILTER0_ANISOTROPIC_MAG_ENABLE_TRUE    0x00000001 /* RW--V */
#define NV_PGRAPH_FILTER1                                0x00400E3C /* RW-4R */
#define NV_PGRAPH_FILTER1_BUNDLE                         0x0000000F /* ----B */
#define NV_PGRAPH_FILTER1_KERNEL_SIZE_X                         4:1 /* RWXUF */
#define NV_PGRAPH_FILTER1_KERNEL_SIZE_Y                        12:9 /* RWXUF */
#define NV_PGRAPH_FILTER1_MIPMAPLODBIAS                        12:0 /* RWXSF */
#define NV_PGRAPH_FILTER1_MIPMAP_DITHER_ENABLE                15:15 /* RWXVF */
#define NV_PGRAPH_FILTER1_MIPMAP_DITHER_ENABLE_FALSE     0x00000000 /* RW--V */
#define NV_PGRAPH_FILTER1_MIPMAP_DITHER_ENABLE_TRUE      0x00000001 /* RW--V */
#define NV_PGRAPH_FILTER1_TEXTUREMIN                          26:24 /* RWXVF */
#define NV_PGRAPH_FILTER1_TEXTUREMIN_NEAREST             0x00000001 /* RW--V */
#define NV_PGRAPH_FILTER1_TEXTUREMIN_LINEAR              0x00000002 /* RW--V */
#define NV_PGRAPH_FILTER1_TEXTUREMIN_MIPNEAREST          0x00000003 /* RW--V */
#define NV_PGRAPH_FILTER1_TEXTUREMIN_MIPLINEAR           0x00000004 /* RW--V */
#define NV_PGRAPH_FILTER1_TEXTUREMIN_LINEARMIPNEAREST    0x00000005 /* RW--V */
#define NV_PGRAPH_FILTER1_TEXTUREMIN_LINEARMIPLINEAR     0x00000006 /* RW--V */
#define NV_PGRAPH_FILTER1_ANISOTROPIC_MIN_ENABLE              27:27 /* RWXVF */
#define NV_PGRAPH_FILTER1_ANISOTROPIC_MIN_ENABLE_FALSE   0x00000000 /* RW--V */
#define NV_PGRAPH_FILTER1_ANISOTROPIC_MIN_ENABLE_TRUE    0x00000001 /* RW--V */
#define NV_PGRAPH_FILTER1_TEXTUREMAG                          30:28 /* RWXVF */
#define NV_PGRAPH_FILTER1_TEXTUREMAG_NEAREST             0x00000001 /* RW--V */
#define NV_PGRAPH_FILTER1_TEXTUREMAG_LINEAR              0x00000002 /* RW--V */
#define NV_PGRAPH_FILTER1_TEXTUREMAG_MIPNEAREST          0x00000003 /* RW--V */
#define NV_PGRAPH_FILTER1_TEXTUREMAG_MIPLINEAR           0x00000004 /* RW--V */
#define NV_PGRAPH_FILTER1_TEXTUREMAG_LINEARMIPNEAREST    0x00000005 /* RW--V */
#define NV_PGRAPH_FILTER1_TEXTUREMAG_LINEARMIPLINEAR     0x00000006 /* RW--V */
#define NV_PGRAPH_FILTER1_ANISOTROPIC_MAG_ENABLE              31:31 /* RWXVF */
#define NV_PGRAPH_FILTER1_ANISOTROPIC_MAG_ENABLE_FALSE   0x00000000 /* RW--V */
#define NV_PGRAPH_FILTER1_ANISOTROPIC_MAG_ENABLE_TRUE    0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW                       0x00400E40 /* RW-4R */
#define NV_PGRAPH_COMBINE0ALPHAICW_BUNDLE                0x00000010 /* ----B */
#define NV_PGRAPH_COMBINE0ALPHAICW_D_SOURCE                     3:0 /* RWXVF */
#define NV_PGRAPH_COMBINE0ALPHAICW_D_SOURCE_R0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_D_SOURCE_R1           0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_D_SOURCE_R2           0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_D_SOURCE_R3           0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_D_SOURCE_R4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_D_SOURCE_R5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_D_SOURCE_R8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_D_SOURCE_R9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_D_SOURCE_RC           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_D_SOURCE_RD           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_D_ALPHA                      4:4 /* RWXVF */
#define NV_PGRAPH_COMBINE0ALPHAICW_D_ALPHA_FROMBLUE      0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_D_ALPHA_FROMALPHA     0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_D_MAP                        7:5 /* RWXVF */
#define NV_PGRAPH_COMBINE0ALPHAICW_D_MAP_UNSIGNED_IDENT  0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_D_MAP_UNSIGNED_INVERT 0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_D_MAP_EXPAND_NORMAL   0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_D_MAP_EXPAND_NEGATE   0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_D_MAP_HALFBIAS_NORMAL 0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_D_MAP_HALFBIAS_NEGATE 0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_D_MAP_SIGNED_IDENTITY 0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_D_MAP_SIGNED_NEGATE   0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_C_SOURCE                    11:8 /* RWXVF */
#define NV_PGRAPH_COMBINE0ALPHAICW_C_SOURCE_R0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_C_SOURCE_R1           0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_C_SOURCE_R2           0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_C_SOURCE_R3           0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_C_SOURCE_R4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_C_SOURCE_R5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_C_SOURCE_R8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_C_SOURCE_R9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_C_SOURCE_RC           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_C_SOURCE_RD           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_C_ALPHA                    12:12 /* RWXVF */
#define NV_PGRAPH_COMBINE0ALPHAICW_C_ALPHA_FROMBLUE      0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_C_ALPHA_FROMALPHA     0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_C_MAP                      15:13 /* RWXVF */
#define NV_PGRAPH_COMBINE0ALPHAICW_C_MAP_UNSIGNED_IDENT  0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_C_MAP_UNSIGNED_INVERT 0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_C_MAP_EXPAND_NORMAL   0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_C_MAP_EXPAND_NEGATE   0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_C_MAP_HALFBIAS_NORMAL 0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_C_MAP_HALFBIAS_NEGATE 0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_C_MAP_SIGNED_IDENTITY 0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_C_MAP_SIGNED_NEGATE   0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_B_SOURCE                   19:16 /* RWXVF */
#define NV_PGRAPH_COMBINE0ALPHAICW_B_SOURCE_R0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_B_SOURCE_R1           0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_B_SOURCE_R2           0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_B_SOURCE_R3           0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_B_SOURCE_R4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_B_SOURCE_R5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_B_SOURCE_R8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_B_SOURCE_R9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_B_SOURCE_RC           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_B_SOURCE_RD           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_B_ALPHA                    20:20 /* RWXVF */
#define NV_PGRAPH_COMBINE0ALPHAICW_B_ALPHA_FROMBLUE      0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_B_ALPHA_FROMALPHA     0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_B_MAP                      23:21 /* RWXVF */
#define NV_PGRAPH_COMBINE0ALPHAICW_B_MAP_UNSIGNED_IDENT  0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_B_MAP_UNSIGNED_INVERT 0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_B_MAP_EXPAND_NORMAL   0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_B_MAP_EXPAND_NEGATE   0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_B_MAP_HALFBIAS_NORMAL 0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_B_MAP_HALFBIAS_NEGATE 0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_B_MAP_SIGNED_IDENTITY 0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_B_MAP_SIGNED_NEGATE   0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_A_SOURCE                   27:24 /* RWXVF */
#define NV_PGRAPH_COMBINE0ALPHAICW_A_SOURCE_R0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_A_SOURCE_R1           0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_A_SOURCE_R2           0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_A_SOURCE_R3           0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_A_SOURCE_R4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_A_SOURCE_R5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_A_SOURCE_R8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_A_SOURCE_R9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_A_SOURCE_RC           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_A_SOURCE_RD           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_A_ALPHA                    28:28 /* RWXVF */
#define NV_PGRAPH_COMBINE0ALPHAICW_A_ALPHA_FROMBLUE      0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_A_ALPHA_FROMALPHA     0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_A_MAP                      31:29 /* RWXVF */
#define NV_PGRAPH_COMBINE0ALPHAICW_A_MAP_UNSIGNED_IDENT  0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_A_MAP_UNSIGNED_INVERT 0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_A_MAP_EXPAND_NORMAL   0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_A_MAP_EXPAND_NEGATE   0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_A_MAP_HALFBIAS_NORMAL 0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_A_MAP_HALFBIAS_NEGATE 0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_A_MAP_SIGNED_IDENTITY 0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_A_MAP_SIGNED_NEGATE   0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW                       0x00400E44 /* RW-4R */
#define NV_PGRAPH_COMBINE1ALPHAICW_BUNDLE                0x00000011 /* ----B */
#define NV_PGRAPH_COMBINE1ALPHAICW_D_SOURCE                     3:0 /* RWXVF */
#define NV_PGRAPH_COMBINE1ALPHAICW_D_SOURCE_R0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_D_SOURCE_R1           0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_D_SOURCE_R2           0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_D_SOURCE_R3           0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_D_SOURCE_R4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_D_SOURCE_R5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_D_SOURCE_R8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_D_SOURCE_R9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_D_SOURCE_RC           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_D_SOURCE_RD           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_D_ALPHA                      4:4 /* RWXVF */
#define NV_PGRAPH_COMBINE1ALPHAICW_D_ALPHA_FROMBLUE      0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_D_ALPHA_FROMALPHA     0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_D_MAP                        7:5 /* RWXVF */
#define NV_PGRAPH_COMBINE1ALPHAICW_D_MAP_UNSIGNED_IDENT  0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_D_MAP_UNSIGNED_INVERT 0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_D_MAP_EXPAND_NORMAL   0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_D_MAP_EXPAND_NEGATE   0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_D_MAP_HALFBIAS_NORMAL 0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_D_MAP_HALFBIAS_NEGATE 0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_D_MAP_SIGNED_IDENTITY 0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_D_MAP_SIGNED_NEGATE   0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_C_SOURCE                    11:8 /* RWXVF */
#define NV_PGRAPH_COMBINE1ALPHAICW_C_SOURCE_R0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_C_SOURCE_R1           0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_C_SOURCE_R2           0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_C_SOURCE_R3           0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_C_SOURCE_R4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_C_SOURCE_R5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_C_SOURCE_R8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_C_SOURCE_R9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_C_SOURCE_RC           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_C_SOURCE_RD           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_C_ALPHA                    12:12 /* RWXVF */
#define NV_PGRAPH_COMBINE1ALPHAICW_C_ALPHA_FROMBLUE      0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_C_ALPHA_FROMALPHA     0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_C_MAP                      15:13 /* RWXVF */
#define NV_PGRAPH_COMBINE1ALPHAICW_C_MAP_UNSIGNED_IDENT  0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_C_MAP_UNSIGNED_INVERT 0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_C_MAP_EXPAND_NORMAL   0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_C_MAP_EXPAND_NEGATE   0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_C_MAP_HALFBIAS_NORMAL 0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_C_MAP_HALFBIAS_NEGATE 0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_C_MAP_SIGNED_IDENTITY 0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_C_MAP_SIGNED_NEGATE   0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_B_SOURCE                   19:16 /* RWXVF */
#define NV_PGRAPH_COMBINE1ALPHAICW_B_SOURCE_R0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_B_SOURCE_R1           0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_B_SOURCE_R2           0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_B_SOURCE_R3           0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_B_SOURCE_R4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_B_SOURCE_R5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_B_SOURCE_R8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_B_SOURCE_R9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_B_SOURCE_RC           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_B_SOURCE_RD           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_B_ALPHA                    20:20 /* RWXVF */
#define NV_PGRAPH_COMBINE1ALPHAICW_B_ALPHA_FROMBLUE      0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_B_ALPHA_FROMALPHA     0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_B_MAP                      23:21 /* RWXVF */
#define NV_PGRAPH_COMBINE1ALPHAICW_B_MAP_UNSIGNED_IDENT  0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_B_MAP_UNSIGNED_INVERT 0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_B_MAP_EXPAND_NORMAL   0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_B_MAP_EXPAND_NEGATE   0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_B_MAP_HALFBIAS_NORMAL 0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_B_MAP_HALFBIAS_NEGATE 0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_B_MAP_SIGNED_IDENTITY 0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_B_MAP_SIGNED_NEGATE   0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_A_SOURCE                   27:24 /* RWXVF */
#define NV_PGRAPH_COMBINE1ALPHAICW_A_SOURCE_R0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_A_SOURCE_R1           0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_A_SOURCE_R2           0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_A_SOURCE_R3           0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_A_SOURCE_R4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_A_SOURCE_R5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_A_SOURCE_R8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_A_SOURCE_R9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_A_SOURCE_RC           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_A_SOURCE_RD           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_A_ALPHA                    28:28 /* RWXVF */
#define NV_PGRAPH_COMBINE1ALPHAICW_A_ALPHA_FROMBLUE      0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_A_ALPHA_FROMALPHA     0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_A_MAP                      31:29 /* RWXVF */
#define NV_PGRAPH_COMBINE1ALPHAICW_A_MAP_UNSIGNED_IDENT  0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_A_MAP_UNSIGNED_INVERT 0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_A_MAP_EXPAND_NORMAL   0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_A_MAP_EXPAND_NEGATE   0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_A_MAP_HALFBIAS_NORMAL 0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_A_MAP_HALFBIAS_NEGATE 0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_A_MAP_SIGNED_IDENTITY 0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_A_MAP_SIGNED_NEGATE   0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW                       0x00400E48 /* RW-4R */
#define NV_PGRAPH_COMBINE0COLORICW_BUNDLE                0x00000012 /* ----B */
#define NV_PGRAPH_COMBINE0COLORICW_D_SOURCE                     3:0 /* RWXVF */
#define NV_PGRAPH_COMBINE0COLORICW_D_SOURCE_R0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_D_SOURCE_R1           0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_D_SOURCE_R2           0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_D_SOURCE_R3           0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_D_SOURCE_R4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_D_SOURCE_R5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_D_SOURCE_R8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_D_SOURCE_R9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_D_SOURCE_RC           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_D_SOURCE_RD           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_D_ALPHA                      4:4 /* RWXVF */
#define NV_PGRAPH_COMBINE0COLORICW_D_ALPHA_FALSE         0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_D_ALPHA_TRUE          0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_D_MAP                        7:5 /* RWXVF */
#define NV_PGRAPH_COMBINE0COLORICW_D_MAP_UNSIGNED_IDENT  0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_D_MAP_UNSIGNED_INVERT 0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_D_MAP_EXPAND_NORMAL   0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_D_MAP_EXPAND_NEGATE   0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_D_MAP_HALFBIAS_NORMAL 0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_D_MAP_HALFBIAS_NEGATE 0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_D_MAP_SIGNED_IDENTITY 0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_D_MAP_SIGNED_NEGATE   0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_C_SOURCE                    11:8 /* RWXVF */
#define NV_PGRAPH_COMBINE0COLORICW_C_SOURCE_R0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_C_SOURCE_R1           0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_C_SOURCE_R2           0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_C_SOURCE_R3           0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_C_SOURCE_R4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_C_SOURCE_R5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_C_SOURCE_R8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_C_SOURCE_R9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_C_SOURCE_RC           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_C_SOURCE_RD           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_C_ALPHA                    12:12 /* RWXVF */
#define NV_PGRAPH_COMBINE0COLORICW_C_ALPHA_FALSE         0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_C_ALPHA_TRUE          0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_C_MAP                      15:13 /* RWXVF */
#define NV_PGRAPH_COMBINE0COLORICW_C_MAP_UNSIGNED_IDENT  0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_C_MAP_UNSIGNED_INVERT 0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_C_MAP_EXPAND_NORMAL   0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_C_MAP_EXPAND_NEGATE   0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_C_MAP_HALFBIAS_NORMAL 0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_C_MAP_HALFBIAS_NEGATE 0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_C_MAP_SIGNED_IDENTITY 0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_C_MAP_SIGNED_NEGATE   0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_B_SOURCE                   19:16 /* RWXVF */
#define NV_PGRAPH_COMBINE0COLORICW_B_SOURCE_R0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_B_SOURCE_R1           0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_B_SOURCE_R2           0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_B_SOURCE_R3           0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_B_SOURCE_R4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_B_SOURCE_R5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_B_SOURCE_R8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_B_SOURCE_R9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_B_SOURCE_RC           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_B_SOURCE_RD           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_B_ALPHA                    20:20 /* RWXVF */
#define NV_PGRAPH_COMBINE0COLORICW_B_ALPHA_FALSE         0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_B_ALPHA_TRUE          0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_B_MAP                      23:21 /* RWXVF */
#define NV_PGRAPH_COMBINE0COLORICW_B_MAP_UNSIGNED_IDENT  0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_B_MAP_UNSIGNED_INVERT 0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_B_MAP_EXPAND_NORMAL   0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_B_MAP_EXPAND_NEGATE   0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_B_MAP_HALFBIAS_NORMAL 0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_B_MAP_HALFBIAS_NEGATE 0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_B_MAP_SIGNED_IDENTITY 0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_B_MAP_SIGNED_NEGATE   0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_A_SOURCE                   27:24 /* RWXVF */
#define NV_PGRAPH_COMBINE0COLORICW_A_SOURCE_R0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_A_SOURCE_R1           0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_A_SOURCE_R2           0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_A_SOURCE_R3           0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_A_SOURCE_R4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_A_SOURCE_R5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_A_SOURCE_R8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_A_SOURCE_R9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_A_SOURCE_RC           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_A_SOURCE_RD           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_A_ALPHA                    28:28 /* RWXVF */
#define NV_PGRAPH_COMBINE0COLORICW_A_ALPHA_FALSE         0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_A_ALPHA_TRUE          0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_A_MAP                      31:29 /* RWXVF */
#define NV_PGRAPH_COMBINE0COLORICW_A_MAP_UNSIGNED_IDENT  0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_A_MAP_UNSIGNED_INVERT 0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_A_MAP_EXPAND_NORMAL   0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_A_MAP_EXPAND_NEGATE   0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_A_MAP_HALFBIAS_NORMAL 0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_A_MAP_HALFBIAS_NEGATE 0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_A_MAP_SIGNED_IDENTITY 0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_A_MAP_SIGNED_NEGATE   0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW                       0x00400E4C /* RW-4R */
#define NV_PGRAPH_COMBINE1COLORICW_BUNDLE                0x00000013 /* ----B */
#define NV_PGRAPH_COMBINE1COLORICW_D_SOURCE                     3:0 /* RWXVF */
#define NV_PGRAPH_COMBINE1COLORICW_D_SOURCE_R0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_D_SOURCE_R1           0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_D_SOURCE_R2           0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_D_SOURCE_R3           0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_D_SOURCE_R4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_D_SOURCE_R5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_D_SOURCE_R8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_D_SOURCE_R9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_D_SOURCE_RC           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_D_SOURCE_RD           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_D_ALPHA                      4:4 /* RWXVF */
#define NV_PGRAPH_COMBINE1COLORICW_D_ALPHA_FALSE         0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_D_ALPHA_TRUE          0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_D_MAP                        7:5 /* RWXVF */
#define NV_PGRAPH_COMBINE1COLORICW_D_MAP_UNSIGNED_IDENT  0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_D_MAP_UNSIGNED_INVERT 0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_D_MAP_EXPAND_NORMAL   0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_D_MAP_EXPAND_NEGATE   0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_D_MAP_HALFBIAS_NORMAL 0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_D_MAP_HALFBIAS_NEGATE 0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_D_MAP_SIGNED_IDENTITY 0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_D_MAP_SIGNED_NEGATE   0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_C_SOURCE                    11:8 /* RWXVF */
#define NV_PGRAPH_COMBINE1COLORICW_C_SOURCE_R0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_C_SOURCE_R1           0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_C_SOURCE_R2           0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_C_SOURCE_R3           0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_C_SOURCE_R4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_C_SOURCE_R5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_C_SOURCE_R8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_C_SOURCE_R9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_C_SOURCE_RC           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_C_SOURCE_RD           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_C_ALPHA                    12:12 /* RWXVF */
#define NV_PGRAPH_COMBINE1COLORICW_C_ALPHA_FALSE         0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_C_ALPHA_TRUE          0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_C_MAP                      15:13 /* RWXVF */
#define NV_PGRAPH_COMBINE1COLORICW_C_MAP_UNSIGNED_IDENT  0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_C_MAP_UNSIGNED_INVERT 0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_C_MAP_EXPAND_NORMAL   0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_C_MAP_EXPAND_NEGATE   0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_C_MAP_HALFBIAS_NORMAL 0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_C_MAP_HALFBIAS_NEGATE 0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_C_MAP_SIGNED_IDENTITY 0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_C_MAP_SIGNED_NEGATE   0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_B_SOURCE                   19:16 /* RWXVF */
#define NV_PGRAPH_COMBINE1COLORICW_B_SOURCE_R0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_B_SOURCE_R1           0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_B_SOURCE_R2           0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_B_SOURCE_R3           0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_B_SOURCE_R4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_B_SOURCE_R5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_B_SOURCE_R8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_B_SOURCE_R9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_B_SOURCE_RC           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_B_SOURCE_RD           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_B_ALPHA                    20:20 /* RWXVF */
#define NV_PGRAPH_COMBINE1COLORICW_B_ALPHA_FALSE         0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_B_ALPHA_TRUE          0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_B_MAP                      23:21 /* RWXVF */
#define NV_PGRAPH_COMBINE1COLORICW_B_MAP_UNSIGNED_IDENT  0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_B_MAP_UNSIGNED_INVERT 0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_B_MAP_EXPAND_NORMAL   0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_B_MAP_EXPAND_NEGATE   0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_B_MAP_HALFBIAS_NORMAL 0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_B_MAP_HALFBIAS_NEGATE 0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_B_MAP_SIGNED_IDENTITY 0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_B_MAP_SIGNED_NEGATE   0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_A_SOURCE                   27:24 /* RWXVF */
#define NV_PGRAPH_COMBINE1COLORICW_A_SOURCE_R0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_A_SOURCE_R1           0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_A_SOURCE_R2           0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_A_SOURCE_R3           0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_A_SOURCE_R4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_A_SOURCE_R5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_A_SOURCE_R8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_A_SOURCE_R9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_A_SOURCE_RC           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_A_SOURCE_RD           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_A_ALPHA                    28:28 /* RWXVF */
#define NV_PGRAPH_COMBINE1COLORICW_A_ALPHA_FALSE         0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_A_ALPHA_TRUE          0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_A_MAP                      31:29 /* RWXVF */
#define NV_PGRAPH_COMBINE1COLORICW_A_MAP_UNSIGNED_IDENT  0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_A_MAP_UNSIGNED_INVERT 0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_A_MAP_EXPAND_NORMAL   0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_A_MAP_EXPAND_NEGATE   0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_A_MAP_HALFBIAS_NORMAL 0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_A_MAP_HALFBIAS_NEGATE 0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_A_MAP_SIGNED_IDENTITY 0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_A_MAP_SIGNED_NEGATE   0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINE0FACTOR                         0x00400E50 /* RW-4R */
#define NV_PGRAPH_COMBINE0FACTOR_BUNDLE                  0x00000014 /* ----B */
#define NV_PGRAPH_COMBINE0FACTOR_BLUE                           7:0 /* RWXUF */
#define NV_PGRAPH_COMBINE0FACTOR_GREEN                         15:8 /* RWXUF */
#define NV_PGRAPH_COMBINE0FACTOR_RED                          23:16 /* RWXUF */
#define NV_PGRAPH_COMBINE0FACTOR_ALPHA                        31:24 /* RWXUF */
#define NV_PGRAPH_COMBINE1FACTOR                         0x00400E54 /* RW-4R */
#define NV_PGRAPH_COMBINE1FACTOR_BUNDLE                  0x00000015 /* ----B */
#define NV_PGRAPH_COMBINE1FACTOR_BLUE                           7:0 /* RWXUF */
#define NV_PGRAPH_COMBINE1FACTOR_GREEN                         15:8 /* RWXUF */
#define NV_PGRAPH_COMBINE1FACTOR_RED                          23:16 /* RWXUF */
#define NV_PGRAPH_COMBINE1FACTOR_ALPHA                        31:24 /* RWXUF */
#define NV_PGRAPH_COMBINE0ALPHAOCW                       0x00400E58 /* RW-4R */
#define NV_PGRAPH_COMBINE0ALPHAOCW_BUNDLE                0x00000016 /* ----B */
#define NV_PGRAPH_COMBINE0ALPHAOCW_CD_DST                       3:0 /* RWXVF */
#define NV_PGRAPH_COMBINE0ALPHAOCW_CD_DST_R0             0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAOCW_CD_DST_R4             0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAOCW_CD_DST_R5             0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAOCW_CD_DST_R8             0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAOCW_CD_DST_R9             0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAOCW_CD_DST_RC             0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAOCW_CD_DST_RD             0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAOCW_AB_DST                       7:4 /* RWXVF */
#define NV_PGRAPH_COMBINE0ALPHAOCW_AB_DST_R0             0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAOCW_AB_DST_R4             0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAOCW_AB_DST_R5             0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAOCW_AB_DST_R8             0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAOCW_AB_DST_R9             0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAOCW_AB_DST_RC             0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAOCW_AB_DST_RD             0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAOCW_SUM_DST                     11:8 /* RWXVF */
#define NV_PGRAPH_COMBINE0ALPHAOCW_SUM_DST_R0            0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAOCW_SUM_DST_R4            0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAOCW_SUM_DST_R5            0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAOCW_SUM_DST_R8            0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAOCW_SUM_DST_R9            0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAOCW_SUM_DST_RC            0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAOCW_SUM_DST_RD            0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAOCW_MUX_ENABLE                 14:14 /* RWXVF */
#define NV_PGRAPH_COMBINE0ALPHAOCW_MUX_ENABLE_FALSE      0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAOCW_MUX_ENABLE_TRUE       0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAOCW_OPERATION                  17:15 /* RWXVF */
#define NV_PGRAPH_COMBINE0ALPHAOCW_OPERATION_NOSHIFT     0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAOCW_OPERATION_BIAS        0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAOCW_OPERATION_LEFT1       0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAOCW_OPERATION_LEFT1_BIAS  0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAOCW_OPERATION_LEFT2       0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAOCW_OPERATION_RIGHT1      0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAOCW                       0x00400E5C /* RW-4R */
#define NV_PGRAPH_COMBINE1ALPHAOCW_BUNDLE                0x00000017 /* ----B */
#define NV_PGRAPH_COMBINE1ALPHAOCW_CD_DST                       3:0 /* RWXVF */
#define NV_PGRAPH_COMBINE1ALPHAOCW_CD_DST_R0             0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAOCW_CD_DST_R4             0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAOCW_CD_DST_R5             0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAOCW_CD_DST_R8             0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAOCW_CD_DST_R9             0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAOCW_CD_DST_RC             0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAOCW_CD_DST_RD             0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAOCW_AB_DST                       7:4 /* RWXVF */
#define NV_PGRAPH_COMBINE1ALPHAOCW_AB_DST_R0             0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAOCW_AB_DST_R4             0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAOCW_AB_DST_R5             0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAOCW_AB_DST_R8             0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAOCW_AB_DST_R9             0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAOCW_AB_DST_RC             0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAOCW_AB_DST_RD             0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAOCW_SUM_DST                     11:8 /* RWXVF */
#define NV_PGRAPH_COMBINE1ALPHAOCW_SUM_DST_R0            0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAOCW_SUM_DST_R4            0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAOCW_SUM_DST_R5            0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAOCW_SUM_DST_R8            0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAOCW_SUM_DST_R9            0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAOCW_SUM_DST_RC            0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAOCW_SUM_DST_RD            0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAOCW_MUX_ENABLE                 14:14 /* RWXVF */
#define NV_PGRAPH_COMBINE1ALPHAOCW_MUX_ENABLE_FALSE      0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAOCW_MUX_ENABLE_TRUE       0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAOCW_OPERATION                  17:15 /* RWXVF */
#define NV_PGRAPH_COMBINE1ALPHAOCW_OPERATION_NOSHIFT     0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAOCW_OPERATION_BIAS        0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAOCW_OPERATION_LEFT1       0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAOCW_OPERATION_LEFT1_BIAS  0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAOCW_OPERATION_LEFT2       0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAOCW_OPERATION_RIGHT1      0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHA                          0x00400590 /* RW-4R */
#define NV_PGRAPH_COMBINE0ALPHA_INVERSE_0                       0:0 /* RWXVF */
#define NV_PGRAPH_COMBINE0ALPHA_INVERSE_0_NORMAL         0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHA_INVERSE_0_INVERSE        0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHA_ARGUMENT_0                      4:2 /* RWXVF */
#define NV_PGRAPH_COMBINE0ALPHA_ARGUMENT_0_ZERO          0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHA_ARGUMENT_0_FACTOR        0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHA_ARGUMENT_0_DIFFUSE       0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHA_ARGUMENT_0_INPUT         0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHA_ARGUMENT_0_TEXTURE0      0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHA_ARGUMENT_0_TEXTURE1      0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHA_ARGUMENT_0_TEXTURELOD    0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHA_INVERSE_1                       8:8 /* RWXVF */
#define NV_PGRAPH_COMBINE0ALPHA_INVERSE_1_NORMAL         0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHA_INVERSE_1_INVERSE        0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHA_ARGUMENT_1                    12:10 /* RWXVF */
#define NV_PGRAPH_COMBINE0ALPHA_ARGUMENT_1_ZERO          0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHA_ARGUMENT_1_FACTOR        0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHA_ARGUMENT_1_DIFFUSE       0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHA_ARGUMENT_1_INPUT         0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHA_ARGUMENT_1_TEXTURE0      0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHA_ARGUMENT_1_TEXTURE1      0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHA_ARGUMENT_1_TEXTURELOD    0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHA_INVERSE_2                     16:16 /* RWXVF */
#define NV_PGRAPH_COMBINE0ALPHA_INVERSE_2_NORMAL         0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHA_INVERSE_2_INVERSE        0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHA_ARGUMENT_2                    20:18 /* RWXVF */
#define NV_PGRAPH_COMBINE0ALPHA_ARGUMENT_2_ZERO          0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHA_ARGUMENT_2_FACTOR        0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHA_ARGUMENT_2_DIFFUSE       0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHA_ARGUMENT_2_INPUT         0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHA_ARGUMENT_2_TEXTURE0      0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHA_ARGUMENT_2_TEXTURE1      0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHA_ARGUMENT_2_TEXTURELOD    0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHA_INVERSE_3                     24:24 /* RWXVF */
#define NV_PGRAPH_COMBINE0ALPHA_INVERSE_3_NORMAL         0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHA_INVERSE_3_INVERSE        0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHA_ARGUMENT_3                    28:26 /* RWXVF */
#define NV_PGRAPH_COMBINE0ALPHA_ARGUMENT_3_ZERO          0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHA_ARGUMENT_3_FACTOR        0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHA_ARGUMENT_3_DIFFUSE       0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHA_ARGUMENT_3_INPUT         0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHA_ARGUMENT_3_TEXTURE0      0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHA_ARGUMENT_3_TEXTURE1      0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHA_ARGUMENT_3_TEXTURELOD    0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHA_OPERATION                     31:29 /* RWXVF */
#define NV_PGRAPH_COMBINE0ALPHA_OPERATION_ADD            0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHA_OPERATION_ADD2           0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHA_OPERATION_ADD4           0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHA_OPERATION_ADDSIGNED      0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHA_OPERATION_MUX            0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHA_OPERATION_ADDCOMPLEMENT  0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHA_OPERATION_ADDSIGNED2     0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOR                          0x00400594 /* RW-4R */
#define NV_PGRAPH_COMBINE0COLOR_INVERSE_0                       0:0 /* RWXVF */
#define NV_PGRAPH_COMBINE0COLOR_INVERSE_0_NORMAL         0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOR_INVERSE_0_INVERSE        0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOR_ALPHA_0                         1:1 /* RWXVF */
#define NV_PGRAPH_COMBINE0COLOR_ALPHA_0_COLOR            0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOR_ALPHA_0_ALPHA            0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOR_ARGUMENT_0                      4:2 /* RWXVF */
#define NV_PGRAPH_COMBINE0COLOR_ARGUMENT_0_ZERO          0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOR_ARGUMENT_0_FACTOR        0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOR_ARGUMENT_0_DIFFUSE       0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOR_ARGUMENT_0_INPUT         0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOR_ARGUMENT_0_TEXTURE0      0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOR_ARGUMENT_0_TEXTURE1      0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOR_ARGUMENT_0_TEXTURELOD    0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOR_INVERSE_1                       8:8 /* RWXVF */
#define NV_PGRAPH_COMBINE0COLOR_INVERSE_1_NORMAL         0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOR_INVERSE_1_INVERSE        0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOR_ALPHA_1                         9:9 /* RWXVF */
#define NV_PGRAPH_COMBINE0COLOR_ALPHA_1_COLOR            0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOR_ALPHA_1_ALPHA            0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOR_ARGUMENT_1                    12:10 /* RWXVF */
#define NV_PGRAPH_COMBINE0COLOR_ARGUMENT_1_ZERO          0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOR_ARGUMENT_1_FACTOR        0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOR_ARGUMENT_1_DIFFUSE       0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOR_ARGUMENT_1_INPUT         0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOR_ARGUMENT_1_TEXTURE0      0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOR_ARGUMENT_1_TEXTURE1      0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOR_ARGUMENT_1_TEXTURELOD    0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOR_INVERSE_2                     16:16 /* RWXVF */
#define NV_PGRAPH_COMBINE0COLOR_INVERSE_2_NORMAL         0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOR_INVERSE_2_INVERSE        0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOR_ALPHA_2                       17:17 /* RWXVF */
#define NV_PGRAPH_COMBINE0COLOR_ALPHA_2_COLOR            0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOR_ALPHA_2_ALPHA            0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOR_ARGUMENT_2                    20:18 /* RWXVF */
#define NV_PGRAPH_COMBINE0COLOR_ARGUMENT_2_ZERO          0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOR_ARGUMENT_2_FACTOR        0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOR_ARGUMENT_2_DIFFUSE       0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOR_ARGUMENT_2_INPUT         0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOR_ARGUMENT_2_TEXTURE0      0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOR_ARGUMENT_2_TEXTURE1      0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOR_ARGUMENT_2_TEXTURELOD    0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOR_INVERSE_3                     24:24 /* RWXVF */
#define NV_PGRAPH_COMBINE0COLOR_INVERSE_3_NORMAL         0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOR_INVERSE_3_INVERSE        0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOR_ALPHA_3                       25:25 /* RWXVF */
#define NV_PGRAPH_COMBINE0COLOR_ALPHA_3_COLOR            0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOR_ALPHA_3_ALPHA            0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOR_ARGUMENT_3                    28:26 /* RWXVF */
#define NV_PGRAPH_COMBINE0COLOR_ARGUMENT_3_ZERO          0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOR_ARGUMENT_3_FACTOR        0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOR_ARGUMENT_3_DIFFUSE       0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOR_ARGUMENT_3_INPUT         0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOR_ARGUMENT_3_TEXTURE0      0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOR_ARGUMENT_3_TEXTURE1      0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOR_ARGUMENT_3_TEXTURELOD    0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOR_OPERATION                     31:29 /* RWXVF */
#define NV_PGRAPH_COMBINE0COLOR_OPERATION_ADD            0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOR_OPERATION_ADD2           0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOR_OPERATION_ADD4           0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOR_OPERATION_ADDSIGNED      0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOR_OPERATION_MUX            0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOR_OPERATION_ADDCOMPLEMENT  0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOR_OPERATION_ADDSIGNED2     0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHA                          0x00400598 /* RW-4R */
#define NV_PGRAPH_COMBINE1ALPHA_INVERSE_0                       0:0 /* RWXVF */
#define NV_PGRAPH_COMBINE1ALPHA_INVERSE_0_NORMAL         0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHA_INVERSE_0_INVERSE        0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHA_ARGUMENT_0                      4:2 /* RWXVF */
#define NV_PGRAPH_COMBINE1ALPHA_ARGUMENT_0_ZERO          0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHA_ARGUMENT_0_FACTOR        0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHA_ARGUMENT_0_DIFFUSE       0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHA_ARGUMENT_0_INPUT         0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHA_ARGUMENT_0_TEXTURE0      0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHA_ARGUMENT_0_TEXTURE1      0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHA_INVERSE_1                       8:8 /* RWXVF */
#define NV_PGRAPH_COMBINE1ALPHA_INVERSE_1_NORMAL         0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHA_INVERSE_1_INVERSE        0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHA_ARGUMENT_1                    12:10 /* RWXVF */
#define NV_PGRAPH_COMBINE1ALPHA_ARGUMENT_1_ZERO          0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHA_ARGUMENT_1_FACTOR        0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHA_ARGUMENT_1_DIFFUSE       0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHA_ARGUMENT_1_INPUT         0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHA_ARGUMENT_1_TEXTURE0      0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHA_ARGUMENT_1_TEXTURE1      0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHA_INVERSE_2                     16:16 /* RWXVF */
#define NV_PGRAPH_COMBINE1ALPHA_INVERSE_2_NORMAL         0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHA_INVERSE_2_INVERSE        0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHA_ARGUMENT_2                    20:18 /* RWXVF */
#define NV_PGRAPH_COMBINE1ALPHA_ARGUMENT_2_ZERO          0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHA_ARGUMENT_2_FACTOR        0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHA_ARGUMENT_2_DIFFUSE       0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHA_ARGUMENT_2_INPUT         0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHA_ARGUMENT_2_TEXTURE0      0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHA_ARGUMENT_2_TEXTURE1      0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHA_INVERSE_3                     24:24 /* RWXVF */
#define NV_PGRAPH_COMBINE1ALPHA_INVERSE_3_NORMAL         0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHA_INVERSE_3_INVERSE        0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHA_ARGUMENT_3                    28:26 /* RWXVF */
#define NV_PGRAPH_COMBINE1ALPHA_ARGUMENT_3_ZERO          0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHA_ARGUMENT_3_FACTOR        0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHA_ARGUMENT_3_DIFFUSE       0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHA_ARGUMENT_3_INPUT         0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHA_ARGUMENT_3_TEXTURE0      0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHA_ARGUMENT_3_TEXTURE1      0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHA_OPERATION                     31:29 /* RWXVF */
#define NV_PGRAPH_COMBINE1ALPHA_OPERATION_ADD            0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHA_OPERATION_ADD2           0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHA_OPERATION_ADD4           0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHA_OPERATION_ADDSIGNED      0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHA_OPERATION_MUX            0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHA_OPERATION_ADDCOMPLEMENT  0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHA_OPERATION_ADDSIGNED2     0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOR                          0x0040059C /* RW-4R */
#define NV_PGRAPH_COMBINE1COLOR_INVERSE_0                       0:0 /* RWXVF */
#define NV_PGRAPH_COMBINE1COLOR_INVERSE_0_NORMAL         0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOR_INVERSE_0_INVERSE        0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOR_ALPHA_0                         1:1 /* RWXVF */
#define NV_PGRAPH_COMBINE1COLOR_ALPHA_0_COLOR            0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOR_ALPHA_0_ALPHA            0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOR_ARGUMENT_0                      4:2 /* RWXVF */
#define NV_PGRAPH_COMBINE1COLOR_ARGUMENT_0_ZERO          0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOR_ARGUMENT_0_FACTOR        0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOR_ARGUMENT_0_DIFFUSE       0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOR_ARGUMENT_0_INPUT         0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOR_ARGUMENT_0_TEXTURE0      0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOR_ARGUMENT_0_TEXTURE1      0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOR_INVERSE_1                       8:8 /* RWXVF */
#define NV_PGRAPH_COMBINE1COLOR_INVERSE_1_NORMAL         0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOR_INVERSE_1_INVERSE        0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOR_ALPHA_1                         9:9 /* RWXVF */
#define NV_PGRAPH_COMBINE1COLOR_ALPHA_1_COLOR            0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOR_ALPHA_1_ALPHA            0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOR_ARGUMENT_1                    12:10 /* RWXVF */
#define NV_PGRAPH_COMBINE1COLOR_ARGUMENT_1_ZERO          0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOR_ARGUMENT_1_FACTOR        0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOR_ARGUMENT_1_DIFFUSE       0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOR_ARGUMENT_1_INPUT         0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOR_ARGUMENT_1_TEXTURE0      0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOR_ARGUMENT_1_TEXTURE1      0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOR_INVERSE_2                     16:16 /* RWXVF */
#define NV_PGRAPH_COMBINE1COLOR_INVERSE_2_NORMAL         0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOR_INVERSE_2_INVERSE        0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOR_ALPHA_2                       17:17 /* RWXVF */
#define NV_PGRAPH_COMBINE1COLOR_ALPHA_2_COLOR            0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOR_ALPHA_2_ALPHA            0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOR_ARGUMENT_2                    20:18 /* RWXVF */
#define NV_PGRAPH_COMBINE1COLOR_ARGUMENT_2_ZERO          0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOR_ARGUMENT_2_FACTOR        0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOR_ARGUMENT_2_DIFFUSE       0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOR_ARGUMENT_2_INPUT         0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOR_ARGUMENT_2_TEXTURE0      0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOR_ARGUMENT_2_TEXTURE1      0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOR_INVERSE_3                     24:24 /* RWXVF */
#define NV_PGRAPH_COMBINE1COLOR_INVERSE_3_NORMAL         0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOR_INVERSE_3_INVERSE        0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOR_ALPHA_3                       25:25 /* RWXVF */
#define NV_PGRAPH_COMBINE1COLOR_ALPHA_3_COLOR            0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOR_ALPHA_3_ALPHA            0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOR_ARGUMENT_3                    28:26 /* RWXVF */
#define NV_PGRAPH_COMBINE1COLOR_ARGUMENT_3_ZERO          0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOR_ARGUMENT_3_FACTOR        0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOR_ARGUMENT_3_DIFFUSE       0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOR_ARGUMENT_3_INPUT         0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOR_ARGUMENT_3_TEXTURE0      0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOR_ARGUMENT_3_TEXTURE1      0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOR_OPERATION                     31:29 /* RWXVF */
#define NV_PGRAPH_COMBINE1COLOR_OPERATION_ADD            0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOR_OPERATION_ADD2           0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOR_OPERATION_ADD4           0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOR_OPERATION_ADDSIGNED      0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOR_OPERATION_MUX            0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOR_OPERATION_ADDCOMPLEMENT  0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOR_OPERATION_ADDSIGNED2     0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOROCW                       0x00400E60 /* RW-4R */
#define NV_PGRAPH_COMBINE0COLOROCW_BUNDLE                0x00000018 /* ----B */
#define NV_PGRAPH_COMBINE0COLOROCW_CD_DST                       3:0 /* RWXVF */
#define NV_PGRAPH_COMBINE0COLOROCW_CD_DST_R0             0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOROCW_CD_DST_R4             0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOROCW_CD_DST_R5             0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOROCW_CD_DST_R8             0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOROCW_CD_DST_R9             0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOROCW_CD_DST_RC             0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINE0COLOROCW_CD_DST_RD             0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINE0COLOROCW_AB_DST                       7:4 /* RWXVF */
#define NV_PGRAPH_COMBINE0COLOROCW_AB_DST_R0             0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOROCW_AB_DST_R4             0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOROCW_AB_DST_R5             0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOROCW_AB_DST_R8             0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOROCW_AB_DST_R9             0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOROCW_AB_DST_RC             0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINE0COLOROCW_AB_DST_RD             0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINE0COLOROCW_SUM_DST                     11:8 /* RWXVF */
#define NV_PGRAPH_COMBINE0COLOROCW_SUM_DST_R0            0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOROCW_SUM_DST_R4            0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOROCW_SUM_DST_R5            0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOROCW_SUM_DST_R8            0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOROCW_SUM_DST_R9            0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOROCW_SUM_DST_RC            0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINE0COLOROCW_SUM_DST_RD            0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINE0COLOROCW_CD_DOT_ENABLE              12:12 /* RWXVF */
#define NV_PGRAPH_COMBINE0COLOROCW_CD_DOT_ENABLE_FALSE   0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOROCW_CD_DOT_ENABLE_TRUE    0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOROCW_AB_DOT_ENABLE              13:13 /* RWXVF */
#define NV_PGRAPH_COMBINE0COLOROCW_AB_DOT_ENABLE_FALSE   0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOROCW_AB_DOT_ENABLE_TRUE    0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOROCW_MUX_ENABLE                 14:14 /* RWXVF */
#define NV_PGRAPH_COMBINE0COLOROCW_MUX_ENABLE_FALSE      0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOROCW_MUX_ENABLE_TRUE       0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOROCW_OPERATION                  17:15 /* RWXVF */
#define NV_PGRAPH_COMBINE0COLOROCW_OPERATION_NOSHIFT     0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOROCW_OPERATION_BIAS        0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOROCW_OPERATION_LEFT1       0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOROCW_OPERATION_LEFT1_BIAS  0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOROCW_OPERATION_LEFT2       0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOROCW_OPERATION_RIGHT1      0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOROCW                       0x00400E64 /* RW-4R */
#define NV_PGRAPH_COMBINE1COLOROCW_BUNDLE                0x00000019 /* ----B */
#define NV_PGRAPH_COMBINE1COLOROCW_CD_DST                       3:0 /* RWXVF */
#define NV_PGRAPH_COMBINE1COLOROCW_CD_DST_R0             0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOROCW_CD_DST_R4             0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOROCW_CD_DST_R5             0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOROCW_CD_DST_R8             0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOROCW_CD_DST_R9             0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOROCW_CD_DST_RC             0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINE1COLOROCW_CD_DST_RD             0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINE1COLOROCW_AB_DST                       7:4 /* RWXVF */
#define NV_PGRAPH_COMBINE1COLOROCW_AB_DST_R0             0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOROCW_AB_DST_R4             0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOROCW_AB_DST_R5             0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOROCW_AB_DST_R8             0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOROCW_AB_DST_R9             0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOROCW_AB_DST_RC             0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINE1COLOROCW_AB_DST_RD             0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINE1COLOROCW_SUM_DST                     11:8 /* RWXVF */
#define NV_PGRAPH_COMBINE1COLOROCW_SUM_DST_R0            0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOROCW_SUM_DST_R4            0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOROCW_SUM_DST_R5            0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOROCW_SUM_DST_R8            0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOROCW_SUM_DST_R9            0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOROCW_SUM_DST_RC            0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINE1COLOROCW_SUM_DST_RD            0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINE1COLOROCW_CD_DOT_ENABLE              12:12 /* RWXVF */
#define NV_PGRAPH_COMBINE1COLOROCW_CD_DOT_ENABLE_FALSE   0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOROCW_CD_DOT_ENABLE_TRUE    0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOROCW_AB_DOT_ENABLE              13:13 /* RWXVF */
#define NV_PGRAPH_COMBINE1COLOROCW_AB_DOT_ENABLE_FALSE   0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOROCW_AB_DOT_ENABLE_TRUE    0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOROCW_MUX_ENABLE                 14:14 /* RWXVF */
#define NV_PGRAPH_COMBINE1COLOROCW_MUX_ENABLE_FALSE      0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOROCW_MUX_ENABLE_TRUE       0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOROCW_OPERATION                  17:15 /* RWXVF */
#define NV_PGRAPH_COMBINE1COLOROCW_OPERATION_NOSHIFT     0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOROCW_OPERATION_BIAS        0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOROCW_OPERATION_LEFT1       0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOROCW_OPERATION_LEFT1_BIAS  0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOROCW_OPERATION_LEFT2       0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOROCW_OPERATION_RIGHT1      0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOROCW_MUX_SELECT                 27:27 /* RWXVF */
#define NV_PGRAPH_COMBINE1COLOROCW_MUX_SELECT_LSB        0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOROCW_MUX_SELECT_MSB        0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOROCW_ITERATION_COUNT            29:28 /* RWXVF */
#define NV_PGRAPH_COMBINE1COLOROCW_ITERATION_COUNT_ONE   0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOROCW_ITERATION_COUNT_TWO   0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0                      0x00400E68 /* RW-4R */
#define NV_PGRAPH_COMBINESPECFOGCW0_BUNDLE               0x0000001A /* ----B */
#define NV_PGRAPH_COMBINESPECFOGCW0_D_SOURCE                    3:0 /* RWXVF */
#define NV_PGRAPH_COMBINESPECFOGCW0_D_SOURCE_R0          0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_D_SOURCE_R1          0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_D_SOURCE_R2          0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_D_SOURCE_R3          0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_D_SOURCE_R4          0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_D_SOURCE_R5          0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_D_SOURCE_R8          0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_D_SOURCE_R9          0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_D_SOURCE_RC          0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_D_SOURCE_RD          0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_D_SOURCE_RE          0x0000000E /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_D_SOURCE_RF          0x0000000F /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_D_ALPHA                     4:4 /* RWXVF */
#define NV_PGRAPH_COMBINESPECFOGCW0_D_ALPHA_FALSE        0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_D_ALPHA_TRUE         0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_D_INVERSE                   5:5 /* RWXVF */
#define NV_PGRAPH_COMBINESPECFOGCW0_D_INVERSE_FALSE      0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_D_INVERSE_TRUE       0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_C_SOURCE                   11:8 /* RWXVF */
#define NV_PGRAPH_COMBINESPECFOGCW0_C_SOURCE_R0          0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_C_SOURCE_R1          0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_C_SOURCE_R2          0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_C_SOURCE_R3          0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_C_SOURCE_R4          0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_C_SOURCE_R5          0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_C_SOURCE_R8          0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_C_SOURCE_R9          0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_C_SOURCE_RC          0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_C_SOURCE_RD          0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_C_SOURCE_RE          0x0000000E /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_C_SOURCE_RF          0x0000000F /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_C_ALPHA                   12:12 /* RWXVF */
#define NV_PGRAPH_COMBINESPECFOGCW0_C_ALPHA_FALSE        0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_C_ALPHA_TRUE         0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_C_INVERSE                 13:13 /* RWXVF */
#define NV_PGRAPH_COMBINESPECFOGCW0_C_INVERSE_FALSE      0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_C_INVERSE_TRUE       0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_B_SOURCE                  19:16 /* RWXVF */
#define NV_PGRAPH_COMBINESPECFOGCW0_B_SOURCE_R0          0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_B_SOURCE_R1          0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_B_SOURCE_R2          0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_B_SOURCE_R3          0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_B_SOURCE_R4          0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_B_SOURCE_R5          0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_B_SOURCE_R8          0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_B_SOURCE_R9          0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_B_SOURCE_RC          0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_B_SOURCE_RD          0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_B_SOURCE_RE          0x0000000E /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_B_SOURCE_RF          0x0000000F /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_B_ALPHA                   20:20 /* RWXVF */
#define NV_PGRAPH_COMBINESPECFOGCW0_B_ALPHA_FALSE        0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_B_ALPHA_TRUE         0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_B_INVERSE                 21:21 /* RWXVF */
#define NV_PGRAPH_COMBINESPECFOGCW0_B_INVERSE_FALSE      0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_B_INVERSE_TRUE       0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_A_SOURCE                  27:24 /* RWXVF */
#define NV_PGRAPH_COMBINESPECFOGCW0_A_SOURCE_R0          0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_A_SOURCE_R1          0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_A_SOURCE_R2          0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_A_SOURCE_R3          0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_A_SOURCE_R4          0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_A_SOURCE_R5          0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_A_SOURCE_R8          0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_A_SOURCE_R9          0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_A_SOURCE_RC          0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_A_SOURCE_RD          0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_A_SOURCE_RE          0x0000000E /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_A_SOURCE_RF          0x0000000F /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_A_ALPHA                   28:28 /* RWXVF */
#define NV_PGRAPH_COMBINESPECFOGCW0_A_ALPHA_FALSE        0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_A_ALPHA_TRUE         0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_A_INVERSE                 29:29 /* RWXVF */
#define NV_PGRAPH_COMBINESPECFOGCW0_A_INVERSE_FALSE      0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_A_INVERSE_TRUE       0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW1                      0x00400E6C /* RW-4R */
#define NV_PGRAPH_COMBINESPECFOGCW1_BUNDLE               0x0000001B /* ----B */
#define NV_PGRAPH_COMBINESPECFOGCW1_ADDINV_R12                  5:5 /* RWXVF */
#define NV_PGRAPH_COMBINESPECFOGCW1_ADDINV_R12_FALSE     0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW1_ADDINV_R12_TRUE      0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW1_ADDINV_R5                   6:6 /* RWXVF */
#define NV_PGRAPH_COMBINESPECFOGCW1_ADDINV_R5_FALSE      0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW1_ADDINV_R5_TRUE       0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW1_SPECCLAMP                   7:7 /* RWXVF */
#define NV_PGRAPH_COMBINESPECFOGCW1_SPECCLAMP_FALSE      0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW1_SPECCLAMP_TRUE       0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW1_G_SOURCE                   11:8 /* RWXVF */
#define NV_PGRAPH_COMBINESPECFOGCW1_G_SOURCE_R0          0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW1_G_SOURCE_R1          0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW1_G_SOURCE_R2          0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW1_G_SOURCE_R3          0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW1_G_SOURCE_R4          0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW1_G_SOURCE_R5          0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW1_G_SOURCE_R8          0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW1_G_SOURCE_R9          0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW1_G_SOURCE_RC          0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW1_G_SOURCE_RD          0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW1_G_ALPHA                   12:12 /* RWXVF */
#define NV_PGRAPH_COMBINESPECFOGCW1_G_ALPHA_FALSE        0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW1_G_ALPHA_TRUE         0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW1_G_INVERSE                 13:13 /* RWXVF */
#define NV_PGRAPH_COMBINESPECFOGCW1_G_INVERSE_FALSE      0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW1_G_INVERSE_TRUE       0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW1_F_SOURCE                  19:16 /* RWXVF */
#define NV_PGRAPH_COMBINESPECFOGCW1_F_SOURCE_R0          0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW1_F_SOURCE_R1          0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW1_F_SOURCE_R2          0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW1_F_SOURCE_R3          0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW1_F_SOURCE_R4          0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW1_F_SOURCE_R5          0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW1_F_SOURCE_R8          0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW1_F_SOURCE_R9          0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW1_F_SOURCE_RC          0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW1_F_SOURCE_RD          0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW1_F_ALPHA                   20:20 /* RWXVF */
#define NV_PGRAPH_COMBINESPECFOGCW1_F_ALPHA_FALSE        0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW1_F_ALPHA_TRUE         0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW1_F_INVERSE                 21:21 /* RWXVF */
#define NV_PGRAPH_COMBINESPECFOGCW1_F_INVERSE_FALSE      0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW1_F_INVERSE_TRUE       0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW1_E_SOURCE                  27:24 /* RWXVF */
#define NV_PGRAPH_COMBINESPECFOGCW1_E_SOURCE_R0          0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW1_E_SOURCE_R1          0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW1_E_SOURCE_R2          0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW1_E_SOURCE_R3          0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW1_E_SOURCE_R4          0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW1_E_SOURCE_R5          0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW1_E_SOURCE_R8          0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW1_E_SOURCE_R9          0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW1_E_SOURCE_RC          0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW1_E_SOURCE_RD          0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW1_E_ALPHA                   28:28 /* RWXVF */
#define NV_PGRAPH_COMBINESPECFOGCW1_E_ALPHA_FALSE        0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW1_E_ALPHA_TRUE         0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW1_E_INVERSE                 29:29 /* RWXVF */
#define NV_PGRAPH_COMBINESPECFOGCW1_E_INVERSE_FALSE      0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW1_E_INVERSE_TRUE       0x00000001 /* RW--V */
#define NV_PGRAPH_CONTROL0                               0x00400E70 /* RW-4R */
#define NV_PGRAPH_CONTROL0_BUNDLE                        0x0000001C /* ----B */
#define NV_PGRAPH_CONTROL0_ALPHAREF                             7:0 /* RWXUF */
#define NV_PGRAPH_CONTROL0_ALPHAFUNC                           11:8 /* RWXVF */
#define NV_PGRAPH_CONTROL0_ALPHAFUNC_NEVER               0x00000000 /* RW--V */
#define NV_PGRAPH_CONTROL0_ALPHAFUNC_LESS                0x00000001 /* RW--V */
#define NV_PGRAPH_CONTROL0_ALPHAFUNC_EQUAL               0x00000002 /* RW--V */
#define NV_PGRAPH_CONTROL0_ALPHAFUNC_LESSEQUAL           0x00000003 /* RW--V */
#define NV_PGRAPH_CONTROL0_ALPHAFUNC_GREATER             0x00000004 /* RW--V */
#define NV_PGRAPH_CONTROL0_ALPHAFUNC_NOTEQUAL            0x00000005 /* RW--V */
#define NV_PGRAPH_CONTROL0_ALPHAFUNC_GREATEREQUAL        0x00000006 /* RW--V */
#define NV_PGRAPH_CONTROL0_ALPHAFUNC_ALWAYS              0x00000007 /* RW--V */
#define NV_PGRAPH_CONTROL0_ALPHATESTENABLE                    12:12 /* RWXVF */
#define NV_PGRAPH_CONTROL0_ALPHATESTENABLE_FALSE         0x00000000 /* RW--V */
#define NV_PGRAPH_CONTROL0_ALPHATESTENABLE_TRUE          0x00000001 /* RW--V */
#define NV_PGRAPH_CONTROL0_ORIGIN                             13:13 /* RWXVF */
#define NV_PGRAPH_CONTROL0_ORIGIN_CENTER                 0x00000000 /* RW--V */
#define NV_PGRAPH_CONTROL0_ORIGIN_CORNER                 0x00000001 /* RW--V */
#define NV_PGRAPH_CONTROL0_ZENABLE                            14:14 /* RWXVF */
#define NV_PGRAPH_CONTROL0_ZENABLE_FALSE                 0x00000000 /* RW--V */
#define NV_PGRAPH_CONTROL0_ZENABLE_TRUE                  0x00000001 /* RW--V */
#define NV_PGRAPH_CONTROL0_ZFUNC                              19:16 /* RWXVF */
#define NV_PGRAPH_CONTROL0_ZFUNC_NEVER                   0x00000000 /* RW--V */
#define NV_PGRAPH_CONTROL0_ZFUNC_LESS                    0x00000001 /* RW--V */
#define NV_PGRAPH_CONTROL0_ZFUNC_EQUAL                   0x00000002 /* RW--V */
#define NV_PGRAPH_CONTROL0_ZFUNC_LESSEQUAL               0x00000003 /* RW--V */
#define NV_PGRAPH_CONTROL0_ZFUNC_GREATER                 0x00000004 /* RW--V */
#define NV_PGRAPH_CONTROL0_ZFUNC_NOTEQUAL                0x00000005 /* RW--V */
#define NV_PGRAPH_CONTROL0_ZFUNC_GREATEREQUAL            0x00000006 /* RW--V */
#define NV_PGRAPH_CONTROL0_ZFUNC_ALWAYS                  0x00000007 /* RW--V */
#define NV_PGRAPH_CONTROL0_CULLMODE                           21:20 /* RWXVF */
#define NV_PGRAPH_CONTROL0_CULLMODE_NONE                 0x00000001 /* RW--V */
#define NV_PGRAPH_CONTROL0_CULLMODE_CW                   0x00000002 /* RW--V */
#define NV_PGRAPH_CONTROL0_CULLMODE_CCW                  0x00000003 /* RW--V */
#define NV_PGRAPH_CONTROL0_DITHERENABLE                       22:22 /* RWXVF */
#define NV_PGRAPH_CONTROL0_DITHERENABLE_FALSE            0x00000000 /* RW--V */
#define NV_PGRAPH_CONTROL0_DITHERENABLE_TRUE             0x00000001 /* RW--V */
#define NV_PGRAPH_CONTROL0_Z_PERSPECTIVE_ENABLE               23:23 /* RWXVF */
#define NV_PGRAPH_CONTROL0_Z_PERSPECTIVE_ENABLE_FALSE    0x00000000 /* RW--V */
#define NV_PGRAPH_CONTROL0_Z_PERSPECTIVE_ENABLE_TRUE     0x00000001 /* RW--V */
#define NV_PGRAPH_CONTROL0_ZWRITEENABLE                       24:24 /* RWXVF */
#define NV_PGRAPH_CONTROL0_ZWRITEENABLE_FALSE            0x00000000 /* RW--V */
#define NV_PGRAPH_CONTROL0_ZWRITEENABLE_TRUE             0x00000001 /* RW--V */
#define NV_PGRAPH_CONTROL0_STENCIL_WRITE_ENABLE               25:25 /* RWXVF */
#define NV_PGRAPH_CONTROL0_STENCIL_WRITE_ENABLE_FALSE    0x00000000 /* RW--V */
#define NV_PGRAPH_CONTROL0_STENCIL_WRITE_ENABLE_TRUE     0x00000001 /* RW--V */
#define NV_PGRAPH_CONTROL0_ALPHA_WRITE_ENABLE                 26:26 /* RWXVF */
#define NV_PGRAPH_CONTROL0_ALPHA_WRITE_ENABLE_FALSE      0x00000000 /* RW--V */
#define NV_PGRAPH_CONTROL0_ALPHA_WRITE_ENABLE_TRUE       0x00000001 /* RW--V */
#define NV_PGRAPH_CONTROL0_RED_WRITE_ENABLE                   27:27 /* RWXVF */
#define NV_PGRAPH_CONTROL0_RED_WRITE_ENABLE_FALSE        0x00000000 /* RW--V */
#define NV_PGRAPH_CONTROL0_RED_WRITE_ENABLE_TRUE         0x00000001 /* RW--V */
#define NV_PGRAPH_CONTROL0_GREEN_WRITE_ENABLE                 28:28 /* RWXVF */
#define NV_PGRAPH_CONTROL0_GREEN_WRITE_ENABLE_FALSE      0x00000000 /* RW--V */
#define NV_PGRAPH_CONTROL0_GREEN_WRITE_ENABLE_TRUE       0x00000001 /* RW--V */
#define NV_PGRAPH_CONTROL0_BLUE_WRITE_ENABLE                  29:29 /* RWXVF */
#define NV_PGRAPH_CONTROL0_BLUE_WRITE_ENABLE_FALSE       0x00000000 /* RW--V */
#define NV_PGRAPH_CONTROL0_BLUE_WRITE_ENABLE_TRUE        0x00000001 /* RW--V */
#define NV_PGRAPH_CONTROL0_Z_FORMAT                           31:30 /* RWXVF */
#define NV_PGRAPH_CONTROL0_Z_FORMAT_FIXED                0x00000001 /* RW--V */
#define NV_PGRAPH_CONTROL0_Z_FORMAT_FLOAT                0x00000002 /* RW--V */
#define NV_PGRAPH_CONTROL1                               0x00400E74 /* RW-4R */
#define NV_PGRAPH_CONTROL1_BUNDLE                        0x0000001D /* ----B */
#define NV_PGRAPH_CONTROL1_STENCIL_TEST_ENABLE                  0:0 /* RWXVF */
#define NV_PGRAPH_CONTROL1_STENCIL_TEST_ENABLE_FALSE     0x00000000 /* RW--V */
#define NV_PGRAPH_CONTROL1_STENCIL_TEST_ENABLE_TRUE      0x00000001 /* RW--V */
#define NV_PGRAPH_CONTROL1_STENCIL_FUNC                         7:4 /* RWXVF */
#define NV_PGRAPH_CONTROL1_STENCIL_FUNC_NEVER            0x00000000 /* RW--V */
#define NV_PGRAPH_CONTROL1_STENCIL_FUNC_LESS             0x00000001 /* RW--V */
#define NV_PGRAPH_CONTROL1_STENCIL_FUNC_EQUAL            0x00000002 /* RW--V */
#define NV_PGRAPH_CONTROL1_STENCIL_FUNC_LESSEQUAL        0x00000003 /* RW--V */
#define NV_PGRAPH_CONTROL1_STENCIL_FUNC_GREATER          0x00000004 /* RW--V */
#define NV_PGRAPH_CONTROL1_STENCIL_FUNC_NOTEQUAL         0x00000005 /* RW--V */
#define NV_PGRAPH_CONTROL1_STENCIL_FUNC_GREATEREQUAL     0x00000006 /* RW--V */
#define NV_PGRAPH_CONTROL1_STENCIL_FUNC_ALWAYS           0x00000007 /* RW--V */
#define NV_PGRAPH_CONTROL1_STENCIL_REF                         15:8 /* RWXUF */
#define NV_PGRAPH_CONTROL1_STENCIL_MASK_READ                  23:16 /* RWXUF */
#define NV_PGRAPH_CONTROL1_STENCIL_MASK_WRITE                 31:24 /* RWXUF */
#define NV_PGRAPH_CONTROL2                               0x00400E78 /* RW-4R */
#define NV_PGRAPH_CONTROL2_BUNDLE                        0x0000001E /* ----B */
#define NV_PGRAPH_CONTROL2_STENCIL_OP_FAIL                      3:0 /* RWXVF */
#define NV_PGRAPH_CONTROL2_STENCIL_OP_FAIL_KEEP          0x00000001 /* RW--V */
#define NV_PGRAPH_CONTROL2_STENCIL_OP_FAIL_ZERO          0x00000002 /* RW--V */
#define NV_PGRAPH_CONTROL2_STENCIL_OP_FAIL_REPLACE       0x00000003 /* RW--V */
#define NV_PGRAPH_CONTROL2_STENCIL_OP_FAIL_INCRSAT       0x00000004 /* RW--V */
#define NV_PGRAPH_CONTROL2_STENCIL_OP_FAIL_DECRSAT       0x00000005 /* RW--V */
#define NV_PGRAPH_CONTROL2_STENCIL_OP_FAIL_INVERT        0x00000006 /* RW--V */
#define NV_PGRAPH_CONTROL2_STENCIL_OP_FAIL_INCR          0x00000007 /* RW--V */
#define NV_PGRAPH_CONTROL2_STENCIL_OP_FAIL_DECR          0x00000008 /* RW--V */
#define NV_PGRAPH_CONTROL2_STENCIL_OP_ZFAIL                     7:4 /* RWXVF */
#define NV_PGRAPH_CONTROL2_STENCIL_OP_ZFAIL_KEEP         0x00000001 /* RW--V */
#define NV_PGRAPH_CONTROL2_STENCIL_OP_ZFAIL_ZERO         0x00000002 /* RW--V */
#define NV_PGRAPH_CONTROL2_STENCIL_OP_ZFAIL_REPLACE      0x00000003 /* RW--V */
#define NV_PGRAPH_CONTROL2_STENCIL_OP_ZFAIL_INCRSAT      0x00000004 /* RW--V */
#define NV_PGRAPH_CONTROL2_STENCIL_OP_ZFAIL_DECRSAT      0x00000005 /* RW--V */
#define NV_PGRAPH_CONTROL2_STENCIL_OP_ZFAIL_INVERT       0x00000006 /* RW--V */
#define NV_PGRAPH_CONTROL2_STENCIL_OP_ZFAIL_INCR         0x00000007 /* RW--V */
#define NV_PGRAPH_CONTROL2_STENCIL_OP_ZFAIL_DECR         0x00000008 /* RW--V */
#define NV_PGRAPH_CONTROL2_STENCIL_OP_ZPASS                    11:8 /* RWXVF */
#define NV_PGRAPH_CONTROL2_STENCIL_OP_ZPASS_KEEP         0x00000001 /* RW--V */
#define NV_PGRAPH_CONTROL2_STENCIL_OP_ZPASS_ZERO         0x00000002 /* RW--V */
#define NV_PGRAPH_CONTROL2_STENCIL_OP_ZPASS_REPLACE      0x00000003 /* RW--V */
#define NV_PGRAPH_CONTROL2_STENCIL_OP_ZPASS_INCRSAT      0x00000004 /* RW--V */
#define NV_PGRAPH_CONTROL2_STENCIL_OP_ZPASS_DECRSAT      0x00000005 /* RW--V */
#define NV_PGRAPH_CONTROL2_STENCIL_OP_ZPASS_INVERT       0x00000006 /* RW--V */
#define NV_PGRAPH_CONTROL2_STENCIL_OP_ZPASS_INCR         0x00000007 /* RW--V */
#define NV_PGRAPH_CONTROL2_STENCIL_OP_ZPASS_DECR         0x00000008 /* RW--V */
#define NV_PGRAPH_CONTROL3                               0x00400E7C /* RW-4R */
#define NV_PGRAPH_CONTROL3_BUNDLE                        0x0000001F /* ----B */
#define NV_PGRAPH_CONTROL3_FLATSHADE_OP                         0:0 /* RWXVF */
#define NV_PGRAPH_CONTROL3_FLATSHADE_OP_LASTVTX          0x00000000 /* RW--V */
#define NV_PGRAPH_CONTROL3_FLATSHADE_OP_FIRSTVTX         0x00000001 /* RW--V */
#define NV_PGRAPH_CONTROL3_PREMULTALPHA                         2:2 /* RWXVF */
#define NV_PGRAPH_CONTROL3_PREMULTALPHA_FALSE            0x00000000 /* RW--V */
#define NV_PGRAPH_CONTROL3_PREMULTALPHA_TRUE             0x00000001 /* RW--V */
#define NV_PGRAPH_CONTROL3_TEXTUREMAPBLEND                      4:4 /* RWXVF */
#define NV_PGRAPH_CONTROL3_SPECULARENABLE                       5:5 /* RWXVF */
#define NV_PGRAPH_CONTROL3_SPECULARENABLE_FALSE          0x00000000 /* RW--V */
#define NV_PGRAPH_CONTROL3_SPECULARENABLE_TRUE           0x00000001 /* RW--V */
#define NV_PGRAPH_CONTROL3_TEXTUREPERSPECTIVE                   6:6 /* RWXVF */
#define NV_PGRAPH_CONTROL3_TEXTUREPERSPECTIVE_FALSE      0x00000000 /* RW--V */
#define NV_PGRAPH_CONTROL3_TEXTUREPERSPECTIVE_TRUE       0x00000001 /* RW--V */
#define NV_PGRAPH_CONTROL3_SHADEMODE                            7:7 /* RWXVF */
#define NV_PGRAPH_CONTROL3_SHADEMODE_FLAT                0x00000000 /* RW--V */
#define NV_PGRAPH_CONTROL3_SHADEMODE_GOURAUD             0x00000001 /* RW--V */
#define NV_PGRAPH_CONTROL3_FOGENABLE                            8:8 /* RWXVF */
#define NV_PGRAPH_CONTROL3_FOGENABLE_FALSE               0x00000000 /* RW--V */
#define NV_PGRAPH_CONTROL3_FOGENABLE_TRUE                0x00000001 /* RW--V */
#define NV_PGRAPH_CONTROL3_POINT_PARAMS_EN                      9:9 /* RWXVF */
#define NV_PGRAPH_CONTROL3_POINT_PARAMS_EN_FALSE         0x00000000 /* RW--V */
#define NV_PGRAPH_CONTROL3_POINT_PARAMS_EN_TRUE          0x00000001 /* RW--V */
#define NV_PGRAPH_CONTROL3_W_BUFFER_SELECT                    13:10 /* RWXVF */
#define NV_PGRAPH_CONTROL3_W_BUFFER_SELECT_0             0x00000000 /* RW--V */
#define NV_PGRAPH_CONTROL3_W_BUFFER_SELECT_1             0x00000001 /* RW--V */
#define NV_PGRAPH_BLEND                                  0x00400E80 /* RW-4R */
#define NV_PGRAPH_BLEND_BUNDLE                           0x00000020 /* ----B */
#define NV_PGRAPH_BLEND_BLENDEQUATION                           2:0 /* RWXVF */
#define NV_PGRAPH_BLEND_BLENDEQUATION_SUBTRACT           0x00000000 /* RW--V */
#define NV_PGRAPH_BLEND_BLENDEQUATION_REVSUBTRACT        0x00000001 /* RW--V */
#define NV_PGRAPH_BLEND_BLENDEQUATION_ADD                0x00000002 /* RW--V */
#define NV_PGRAPH_BLEND_BLENDEQUATION_MIN                0x00000003 /* RW--V */
#define NV_PGRAPH_BLEND_BLENDEQUATION_MAX                0x00000004 /* RW--V */
#define NV_PGRAPH_BLEND_TEXTUREMAPBLEND                         3:0 /* -WXVF */
#define NV_PGRAPH_BLEND_TEXTUREMAPBLEND_DECAL            0x00000001 /* -W--V */
#define NV_PGRAPH_BLEND_TEXTUREMAPBLEND_MODULATE         0x00000002 /* -W--V */
#define NV_PGRAPH_BLEND_TEXTUREMAPBLEND_DECALALPHA       0x00000003 /* -W--V */
#define NV_PGRAPH_BLEND_TEXTUREMAPBLEND_MODULATEALPHA    0x00000004 /* -W--V */
#define NV_PGRAPH_BLEND_TEXTUREMAPBLEND_DECALMASK        0x00000005 /* -W--V */
#define NV_PGRAPH_BLEND_TEXTUREMAPBLEND_MODULATEMASK     0x00000006 /* -W--V */
#define NV_PGRAPH_BLEND_TEXTUREMAPBLEND_COPY             0x00000007 /* -W--V */
#define NV_PGRAPH_BLEND_TEXTUREMAPBLEND_ADD              0x00000008 /* -W--V */
#define NV_PGRAPH_BLEND_MASK_BIT                                5:4 /* -WXVF */
#define NV_PGRAPH_BLEND_MASK_BIT_LSB                     0x00000001 /* -W--V */
#define NV_PGRAPH_BLEND_MASK_BIT_MSB                     0x00000002 /* -W--V */
#define NV_PGRAPH_BLEND_SHADEMODE                               7:6 /* -WXVF */
#define NV_PGRAPH_BLEND_SHADEMODE_FLAT                   0x00000001 /* -W--V */
#define NV_PGRAPH_BLEND_SHADEMODE_GOURAUD                0x00000002 /* -W--V */
#define NV_PGRAPH_BLEND_SHADEMODE_PHONG                  0x00000003 /* -W--V */
#define NV_PGRAPH_BLEND_TEXTUREPERSPECTIVE                      8:8 /* -WXVF */
#define NV_PGRAPH_BLEND_TEXTUREPERSPECTIVE_FALSE         0x00000000 /* -W--V */
#define NV_PGRAPH_BLEND_TEXTUREPERSPECTIVE_TRUE          0x00000001 /* -W--V */
#define NV_PGRAPH_BLEND_SPECULARENABLE                        12:12 /* -WXVF */
#define NV_PGRAPH_BLEND_SPECULARENABLE_FALSE             0x00000000 /* -W--V */
#define NV_PGRAPH_BLEND_SPECULARENABLE_TRUE              0x00000001 /* -W--V */
#define NV_PGRAPH_BLEND_FOGENABLE                             16:16 /* -WXVF */
#define NV_PGRAPH_BLEND_FOGENABLE_FALSE                  0x00000000 /* -W--V */
#define NV_PGRAPH_BLEND_FOGENABLE_TRUE                   0x00000001 /* -W--V */
#define NV_PGRAPH_BLEND_ALPHABLENDENABLE                        3:3 /* RWXVF */
#define NV_PGRAPH_BLEND_ALPHABLENDENABLE_FALSE           0x00000000 /* RW--V */
#define NV_PGRAPH_BLEND_ALPHABLENDENABLE_TRUE            0x00000001 /* RW--V */
#define NV_PGRAPH_BLEND_SRCBLEND                                7:4 /* RWXVF */
#define NV_PGRAPH_BLEND_SRCBLEND_INVCONSTCOLOR           0x0000000D /* RW--V */
#define NV_PGRAPH_BLEND_SRCBLEND_CONSTALPHA              0x0000000E /* RW--V */
#define NV_PGRAPH_BLEND_SRCBLEND_INVCONSTALPHA           0x0000000F /* RW--V */
#define NV_PGRAPH_BLEND_SRCBLEND_ZERO                    0x00000000 /* RW--V */
#define NV_PGRAPH_BLEND_SRCBLEND_ONE                     0x00000001 /* RW--V */
#define NV_PGRAPH_BLEND_SRCBLEND_SRCCOLOR                0x00000002 /* RW--V */
#define NV_PGRAPH_BLEND_SRCBLEND_INVSRCCOLOR             0x00000003 /* RW--V */
#define NV_PGRAPH_BLEND_SRCBLEND_SRCALPHA                0x00000004 /* RW--V */
#define NV_PGRAPH_BLEND_SRCBLEND_INVSRCALPHA             0x00000005 /* RW--V */
#define NV_PGRAPH_BLEND_SRCBLEND_DESTALPHA               0x00000006 /* RW--V */
#define NV_PGRAPH_BLEND_SRCBLEND_INVDESTALPHA            0x00000007 /* RW--V */
#define NV_PGRAPH_BLEND_SRCBLEND_DESTCOLOR               0x00000008 /* RW--V */
#define NV_PGRAPH_BLEND_SRCBLEND_INVDESTCOLOR            0x00000009 /* RW--V */
#define NV_PGRAPH_BLEND_SRCBLEND_SRCALPHASAT             0x0000000A /* RW--V */
#define NV_PGRAPH_BLEND_SRCBLEND_INVSRCALPHASAT          0x0000000B /* RW--V */
#define NV_PGRAPH_BLEND_SRCBLEND_CONSTCOLOR              0x0000000C /* RW--V */
#define NV_PGRAPH_BLEND_SRCBLEND_BETA                    0x0000000C /* RW--V */
#define NV_PGRAPH_BLEND_DESTBLEND                              11:8 /* RWXVF */
#define NV_PGRAPH_BLEND_DESTBLEND_ZERO                   0x00000000 /* RW--V */
#define NV_PGRAPH_BLEND_DESTBLEND_ONE                    0x00000001 /* RW--V */
#define NV_PGRAPH_BLEND_DESTBLEND_SRCCOLOR               0x00000002 /* RW--V */
#define NV_PGRAPH_BLEND_DESTBLEND_INVSRCCOLOR            0x00000003 /* RW--V */
#define NV_PGRAPH_BLEND_DESTBLEND_SRCALPHA               0x00000004 /* RW--V */
#define NV_PGRAPH_BLEND_DESTBLEND_INVSRCALPHA            0x00000005 /* RW--V */
#define NV_PGRAPH_BLEND_DESTBLEND_DESTALPHA              0x00000006 /* RW--V */
#define NV_PGRAPH_BLEND_DESTBLEND_INVDESTALPHA           0x00000007 /* RW--V */
#define NV_PGRAPH_BLEND_DESTBLEND_DESTCOLOR              0x00000008 /* RW--V */
#define NV_PGRAPH_BLEND_DESTBLEND_INVDESTCOLOR           0x00000009 /* RW--V */
#define NV_PGRAPH_BLEND_DESTBLEND_SRCALPHASAT            0x0000000A /* RW--V */
#define NV_PGRAPH_BLEND_DESTBLEND_INVSRCALPHASAT         0x0000000B /* RW--V */
#define NV_PGRAPH_BLEND_DESTBLEND_CONSTCOLOR             0x0000000C /* RW--V */
#define NV_PGRAPH_BLEND_DESTBLEND_INVCONSTCOLOR          0x0000000D /* RW--V */
#define NV_PGRAPH_BLEND_DESTBLEND_CONSTALPHA             0x0000000E /* RW--V */
#define NV_PGRAPH_BLEND_DESTBLEND_INVCONSTALPHA          0x0000000F /* RW--V */
#define NV_PGRAPH_BLENDCOLOR                             0x00400E84 /* RW-4R */
#define NV_PGRAPH_BLENDCOLOR_BUNDLE                      0x00000021 /* ----B */
#define NV_PGRAPH_BLENDCOLOR_BLUE                               7:0 /* RWXVF */
#define NV_PGRAPH_BLENDCOLOR_GREEN                             15:8 /* RWXVF */
#define NV_PGRAPH_BLENDCOLOR_RED                              23:16 /* RWXVF */
#define NV_PGRAPH_BLENDCOLOR_ALPHA                            31:24 /* RWXVF */
#define NV_PGRAPH_SETUPRASTER                            0x00400E88 /* RW-4R */
#define NV_PGRAPH_SETUPRASTER_BUNDLE                     0x00000022 /* ----B */
#define NV_PGRAPH_SETUPRASTER_FRONTFACEMODE                     1:0 /* RWXVF */
#define NV_PGRAPH_SETUPRASTER_FRONTFACEMODE_FILL         0x00000000 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_FRONTFACEMODE_POINT        0x00000001 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_FRONTFACEMODE_LINE         0x00000002 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_BACKFACEMODE                      3:2 /* RWXVF */
#define NV_PGRAPH_SETUPRASTER_BACKFACEMODE_FILL          0x00000000 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_BACKFACEMODE_POINT         0x00000001 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_BACKFACEMODE_LINE          0x00000002 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_POFFSETPOINTENABLE                6:6 /* RWXVF */
#define NV_PGRAPH_SETUPRASTER_POFFSETPOINTENABLE_FALSE   0x00000000 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_POFFSETPOINTENABLE_TRUE    0x00000001 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_POFFSETLINEENABLE                 7:7 /* RWXVF */
#define NV_PGRAPH_SETUPRASTER_POFFSETLINEENABLE_FALSE    0x00000000 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_POFFSETLINEENABLE_TRUE     0x00000001 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_POFFSETFILLENABLE                 8:8 /* RWXVF */
#define NV_PGRAPH_SETUPRASTER_POFFSETFILLENABLE_FALSE    0x00000000 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_POFFSETFILLENABLE_TRUE     0x00000001 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_POINTSMOOTHENABLE                 9:9 /* RWXVF */
#define NV_PGRAPH_SETUPRASTER_POINTSMOOTHENABLE_FALSE    0x00000000 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_POINTSMOOTHENABLE_TRUE     0x00000001 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_LINESMOOTHENABLE                10:10 /* RWXVF */
#define NV_PGRAPH_SETUPRASTER_LINESMOOTHENABLE_FALSE     0x00000000 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_LINESMOOTHENABLE_TRUE      0x00000001 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_POLYSMOOTHENABLE                11:11 /* RWXVF */
#define NV_PGRAPH_SETUPRASTER_POLYSMOOTHENABLE_FALSE     0x00000000 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_POLYSMOOTHENABLE_TRUE      0x00000001 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_LINEWIDTH                       20:12 /* RWXVF */
#define NV_PGRAPH_SETUPRASTER_CULLCONTROL                     22:21 /* RWXVF */
#define NV_PGRAPH_SETUPRASTER_CULLCONTROL_CULLNON        0x00000000 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_CULLCONTROL_CULLFRONTFACE  0x00000001 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_CULLCONTROL_CULLBACKFACE   0x00000002 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_CULLCONTROL_CULLALL        0x00000003 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_FRONTFACE                       23:23 /* RWXVF */
#define NV_PGRAPH_SETUPRASTER_FRONTFACE_CW_FRONT         0x00000000 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_FRONTFACE_CCW_FRONT        0x00000001 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_SWATHWIDTH                      27:26 /* R-XVF */
#define NV_PGRAPH_SETUPRASTER_SWATHWIDTH_8               0x00000000 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_SWATHWIDTH_16              0x00000001 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_SWATHWIDTH_32              0x00000002 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_SWATHWIDTH_64              0x00000003 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_CULLENABLE                      28:28 /* RWXVF */
#define NV_PGRAPH_SETUPRASTER_CULLENABLE_FALSE           0x00000000 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_CULLENABLE_TRUE            0x00000001 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_Z_FORMAT                        29:29 /* RWXVF */
#define NV_PGRAPH_SETUPRASTER_Z_FORMAT_FIXED             0x00000000 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_Z_FORMAT_FLOAT             0x00000001 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_ZCLIPENABLE                     31:30 /* RWXVF */
#define NV_PGRAPH_SETUPRASTER_ZCLIPENABLE_NONE           0x00000000 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_ZCLIPENABLE_MIN_ONLY       0x00000001 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_ZCLIPENABLE_MAX_ONLY       0x00000002 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_ZCLIPENABLE_MIN_AND_MAX    0x00000003 /* RW--V */
#define NV_PGRAPH_FOGCOLOR                               0x00400E8C /* RW-4R */
#define NV_PGRAPH_FOGCOLOR_BUNDLE                        0x00000023 /* ----B */
#define NV_PGRAPH_FOGCOLOR_BLUE                                 7:0 /* RWXVF */
#define NV_PGRAPH_FOGCOLOR_GREEN                               15:8 /* RWXVF */
#define NV_PGRAPH_FOGCOLOR_RED                                23:16 /* RWXVF */
#define NV_PGRAPH_FOGCOLOR_ALPHA                              31:24 /* RWXVF */
#define NV_PGRAPH_ZOFFSETFACTOR                          0x00400E90 /* RW-4R */
#define NV_PGRAPH_ZOFFSETFACTOR_BUNDLE                   0x00000024 /* ----B */
#define NV_PGRAPH_ZOFFSETFACTOR_VALUE                          31:0 /* RWXFF */
#define NV_PGRAPH_ZOFFSETBIAS                            0x00400E94 /* RW-4R */
#define NV_PGRAPH_ZOFFSETBIAS_BUNDLE                     0x00000025 /* ----B */
#define NV_PGRAPH_ZOFFSETBIAS_VALUE                            31:0 /* RWXFF */
#define NV_PGRAPH_ZCLIPMIN                               0x00400E98 /* RW-4R */
#define NV_PGRAPH_ZCLIPMIN_BUNDLE                        0x00000026 /* ----B */
#define NV_PGRAPH_ZCLIPMIN_VALUE                               31:0 /* RWXFF */
#define NV_PGRAPH_ZCLIPMAX                               0x00400E9C /* RW-4R */
#define NV_PGRAPH_ZCLIPMAX_BUNDLE                        0x00000027 /* ----B */
#define NV_PGRAPH_ZCLIPMAX_VALUE                               31:0 /* RWXFF */
#define NV_PGRAPH_COLORKEYCOLOR0                         0x00400EA0 /* RW-4R */
#define NV_PGRAPH_COLORKEYCOLOR0_BUNDLE                  0x00000028 /* ----B */
#define NV_PGRAPH_COLORKEYCOLOR0_VALUE                         31:0 /* RWXVF */
#define NV_PGRAPH_COLORKEYCOLOR1                         0x00400EA4 /* RW-4R */
#define NV_PGRAPH_COLORKEYCOLOR1_BUNDLE                  0x00000029 /* ----B */
#define NV_PGRAPH_COLORKEYCOLOR1_VALUE                         31:0 /* RWXVF */
#define NV_PGRAPH_POINTSIZE                              0x00400EA8 /* RW-4R */
#define NV_PGRAPH_POINTSIZE_BUNDLE                       0x0000002A /* ----B */
#define NV_PGRAPH_POINTSIZE_VALUE                               8:0 /* RWXVF */
#define NV_PGRAPH_WINDOWCLIP_HORIZONTAL(i)       (0x00400F00+(i)*4) /* RW-4A */
#define NV_PGRAPH_WINDOWCLIP_HORIZONTAL__SIZE_1                   8 /*       */
#define NV_PGRAPH_WINDOWCLIP_HORIZONTAL_MIN                    11:0 /* RWXSF */
#define NV_PGRAPH_WINDOWCLIP_HORIZONTAL_MAX                   27:16 /* RWXSF */
#define NV_PGRAPH_WINDOWCLIP_VERTICAL(i)         (0x00400F20+(i)*4) /* RW-4A */
#define NV_PGRAPH_WINDOWCLIP_VERTICAL__SIZE_1                     8 /*       */
#define NV_PGRAPH_WINDOWCLIP_VERTICAL_MIN                      11:0 /* RWXSF */
#define NV_PGRAPH_WINDOWCLIP_VERTICAL_MAX                     27:16 /* RWXSF */
#define NV_PGRAPH_XFMODE0                                0x00400F40 /* RW-4R */
#define NV_PGRAPH_XFMODE0_T0_EN                                 0:0 /* RWXVF */
#define NV_PGRAPH_XFMODE0_T0_EN_OFF                      0x00000000 /* RW--V */
#define NV_PGRAPH_XFMODE0_T0_EN_ON                       0x00000001 /* RW--V */
#define NV_PGRAPH_XFMODE0_T0_MODE                               1:1 /* RWXVF */
#define NV_PGRAPH_XFMODE0_T0_MODE_PASS                   0x00000000 /* RW--V */
#define NV_PGRAPH_XFMODE0_T0_MODE_TRANSFORM              0x00000001 /* RW--V */
#define NV_PGRAPH_XFMODE0_T0_DIV                                2:2 /* RWXVF */
#define NV_PGRAPH_XFMODE0_T0_DIV_OFF                     0x00000000 /* RW--V */
#define NV_PGRAPH_XFMODE0_T0_DIV_ON                      0x00000001 /* RW--V */
#define NV_PGRAPH_XFMODE0_T0_S                                  5:3 /* RWXVF */
#define NV_PGRAPH_XFMODE0_T0_S_PASS                      0x00000000 /* RW--V */
#define NV_PGRAPH_XFMODE0_T0_S_EYE                       0x00000001 /* RW--V */
#define NV_PGRAPH_XFMODE0_T0_S_OBJECT                    0x00000002 /* RW--V */
#define NV_PGRAPH_XFMODE0_T0_S_SPHERE                    0x00000003 /* RW--V */
#define NV_PGRAPH_XFMODE0_T0_S_NORMAL                    0x00000004 /* RW--V */
#define NV_PGRAPH_XFMODE0_T0_S_REFLECTION                0x00000005 /* RW--V */
#define NV_PGRAPH_XFMODE0_T0_S_EMBOSS                    0x00000006 /* RW--V */
#define NV_PGRAPH_XFMODE0_T0_T                                  8:6 /* RWXVF */
#define NV_PGRAPH_XFMODE0_T0_T_PASS                      0x00000000 /* RW--V */
#define NV_PGRAPH_XFMODE0_T0_T_EYE                       0x00000001 /* RW--V */
#define NV_PGRAPH_XFMODE0_T0_T_OBJECT                    0x00000002 /* RW--V */
#define NV_PGRAPH_XFMODE0_T0_T_SPHERE                    0x00000003 /* RW--V */
#define NV_PGRAPH_XFMODE0_T0_T_NORMAL                    0x00000004 /* RW--V */
#define NV_PGRAPH_XFMODE0_T0_T_REFLECTION                0x00000005 /* RW--V */
#define NV_PGRAPH_XFMODE0_T0_T_EMBOSS                    0x00000006 /* RW--V */
#define NV_PGRAPH_XFMODE0_T0_U                                 11:9 /* RWXVF */
#define NV_PGRAPH_XFMODE0_T0_U_PASS                      0x00000000 /* RW--V */
#define NV_PGRAPH_XFMODE0_T0_U_EYE                       0x00000001 /* RW--V */
#define NV_PGRAPH_XFMODE0_T0_U_OBJECT                    0x00000002 /* RW--V */
#define NV_PGRAPH_XFMODE0_T0_U_NORMAL                    0x00000004 /* RW--V */
#define NV_PGRAPH_XFMODE0_T0_U_REFLECTION                0x00000005 /* RW--V */
#define NV_PGRAPH_XFMODE0_T0_U_EMBOSS                    0x00000006 /* RW--V */
#define NV_PGRAPH_XFMODE0_T0_Q                                13:12 /* RWXVF */
#define NV_PGRAPH_XFMODE0_T0_Q_PASS                      0x00000000 /* RW--V */
#define NV_PGRAPH_XFMODE0_T0_Q_EYE                       0x00000001 /* RW--V */
#define NV_PGRAPH_XFMODE0_T0_Q_OBJECT                    0x00000002 /* RW--V */
#define NV_PGRAPH_XFMODE0_T1_EN                               14:14 /* RWXVF */
#define NV_PGRAPH_XFMODE0_T1_EN_OFF                      0x00000000 /* RW--V */
#define NV_PGRAPH_XFMODE0_T1_EN_ON                       0x00000001 /* RW--V */
#define NV_PGRAPH_XFMODE0_T1_MODE                             15:15 /* RWXVF */
#define NV_PGRAPH_XFMODE0_T1_MODE_PASS                   0x00000000 /* RW--V */
#define NV_PGRAPH_XFMODE0_T1_MODE_TRANSFORM              0x00000001 /* RW--V */
#define NV_PGRAPH_XFMODE0_T1_DIV                              16:16 /* RWXVF */
#define NV_PGRAPH_XFMODE0_T1_DIV_OFF                     0x00000000 /* RW--V */
#define NV_PGRAPH_XFMODE0_T1_DIV_ON                      0x00000001 /* RW--V */
#define NV_PGRAPH_XFMODE0_T1_S                                19:17 /* RWXVF */
#define NV_PGRAPH_XFMODE0_T1_S_PASS                      0x00000000 /* RW--V */
#define NV_PGRAPH_XFMODE0_T1_S_EYE                       0x00000001 /* RW--V */
#define NV_PGRAPH_XFMODE0_T1_S_OBJECT                    0x00000002 /* RW--V */
#define NV_PGRAPH_XFMODE0_T1_S_SPHERE                    0x00000003 /* RW--V */
#define NV_PGRAPH_XFMODE0_T1_S_NORMAL                    0x00000004 /* RW--V */
#define NV_PGRAPH_XFMODE0_T1_S_REFLECTION                0x00000005 /* RW--V */
#define NV_PGRAPH_XFMODE0_T1_S_EMBOSS                    0x00000006 /* RW--V */
#define NV_PGRAPH_XFMODE0_T1_T                                22:20 /* RWXVF */
#define NV_PGRAPH_XFMODE0_T1_T_PASS                      0x00000000 /* RW--V */
#define NV_PGRAPH_XFMODE0_T1_T_EYE                       0x00000001 /* RW--V */
#define NV_PGRAPH_XFMODE0_T1_T_OBJECT                    0x00000002 /* RW--V */
#define NV_PGRAPH_XFMODE0_T1_T_SPHERE                    0x00000003 /* RW--V */
#define NV_PGRAPH_XFMODE0_T1_T_NORMAL                    0x00000004 /* RW--V */
#define NV_PGRAPH_XFMODE0_T1_T_REFLECTION                0x00000005 /* RW--V */
#define NV_PGRAPH_XFMODE0_T1_T_EMBOSS                    0x00000006 /* RW--V */
#define NV_PGRAPH_XFMODE0_T1_U                                25:23 /* RWXVF */
#define NV_PGRAPH_XFMODE0_T1_U_PASS                      0x00000000 /* RW--V */
#define NV_PGRAPH_XFMODE0_T1_U_EYE                       0x00000001 /* RW--V */
#define NV_PGRAPH_XFMODE0_T1_U_OBJECT                    0x00000002 /* RW--V */
#define NV_PGRAPH_XFMODE0_T1_U_NORMAL                    0x00000004 /* RW--V */
#define NV_PGRAPH_XFMODE0_T1_U_REFLECTION                0x00000005 /* RW--V */
#define NV_PGRAPH_XFMODE0_T1_U_EMBOSS                    0x00000006 /* RW--V */
#define NV_PGRAPH_XFMODE0_T1_Q                                27:26 /* RWXVF */
#define NV_PGRAPH_XFMODE0_T1_Q_PASS                      0x00000000 /* RW--V */
#define NV_PGRAPH_XFMODE0_T1_Q_EYE                       0x00000001 /* RW--V */
#define NV_PGRAPH_XFMODE0_T1_Q_OBJECT                    0x00000002 /* RW--V */
#define NV_PGRAPH_XFMODE0_EYETYPE                             28:28 /* RWXVF */
#define NV_PGRAPH_XFMODE0_EYETYPE_INFINITE               0x00000000 /* RW--V */
#define NV_PGRAPH_XFMODE0_EYETYPE_LOCAL                  0x00000001 /* RW--V */
#define NV_PGRAPH_XFMODE0_LIGHTING                            29:29 /* RWXVF */
#define NV_PGRAPH_XFMODE0_LIGHTING_OFF                   0x00000000 /* RW--V */
#define NV_PGRAPH_XFMODE0_LIGHTING_ON                    0x00000001 /* RW--V */
#define NV_PGRAPH_XFMODE0_NORMAL                              30:30 /* RWXVF */
#define NV_PGRAPH_XFMODE0_NORMAL_OFF                     0x00000000 /* RW--V */
#define NV_PGRAPH_XFMODE0_NORMAL_ON                      0x00000001 /* RW--V */
#define NV_PGRAPH_XFMODE0_FOG                                 31:31 /* RWXVF */
#define NV_PGRAPH_XFMODE0_FOG_OFF                        0x00000000 /* RW--V */
#define NV_PGRAPH_XFMODE0_FOG_ON                         0x00000001 /* RW--V */
#define NV_PGRAPH_XFMODE1                                0x00400F44 /* RW-4R */
#define NV_PGRAPH_XFMODE1_LIGHT0                                1:0 /* RWXVF */
#define NV_PGRAPH_XFMODE1_LIGHT0_OFF                     0x00000000 /* RW--V */
#define NV_PGRAPH_XFMODE1_LIGHT0_INFINITE                0x00000001 /* RW--V */
#define NV_PGRAPH_XFMODE1_LIGHT0_LOCAL                   0x00000002 /* RW--V */
#define NV_PGRAPH_XFMODE1_LIGHT0_SPOT                    0x00000003 /* RW--V */
#define NV_PGRAPH_XFMODE1_LIGHT1                                3:2 /* RWXVF */
#define NV_PGRAPH_XFMODE1_LIGHT1_OFF                     0x00000000 /* RW--V */
#define NV_PGRAPH_XFMODE1_LIGHT1_INFINITE                0x00000001 /* RW--V */
#define NV_PGRAPH_XFMODE1_LIGHT1_LOCAL                   0x00000002 /* RW--V */
#define NV_PGRAPH_XFMODE1_LIGHT1_SPOT                    0x00000003 /* RW--V */
#define NV_PGRAPH_XFMODE1_LIGHT2                                5:4 /* RWXVF */
#define NV_PGRAPH_XFMODE1_LIGHT2_OFF                     0x00000000 /* RW--V */
#define NV_PGRAPH_XFMODE1_LIGHT2_INFINITE                0x00000001 /* RW--V */
#define NV_PGRAPH_XFMODE1_LIGHT2_LOCAL                   0x00000002 /* RW--V */
#define NV_PGRAPH_XFMODE1_LIGHT2_SPOT                    0x00000003 /* RW--V */
#define NV_PGRAPH_XFMODE1_LIGHT3                                7:6 /* RWXVF */
#define NV_PGRAPH_XFMODE1_LIGHT3_OFF                     0x00000000 /* RW--V */
#define NV_PGRAPH_XFMODE1_LIGHT3_INFINITE                0x00000001 /* RW--V */
#define NV_PGRAPH_XFMODE1_LIGHT3_LOCAL                   0x00000002 /* RW--V */
#define NV_PGRAPH_XFMODE1_LIGHT3_SPOT                    0x00000003 /* RW--V */
#define NV_PGRAPH_XFMODE1_LIGHT4                                9:8 /* RWXVF */
#define NV_PGRAPH_XFMODE1_LIGHT4_OFF                     0x00000000 /* RW--V */
#define NV_PGRAPH_XFMODE1_LIGHT4_INFINITE                0x00000001 /* RW--V */
#define NV_PGRAPH_XFMODE1_LIGHT4_LOCAL                   0x00000002 /* RW--V */
#define NV_PGRAPH_XFMODE1_LIGHT4_SPOT                    0x00000003 /* RW--V */
#define NV_PGRAPH_XFMODE1_LIGHT5                              11:10 /* RWXVF */
#define NV_PGRAPH_XFMODE1_LIGHT5_OFF                     0x00000000 /* RW--V */
#define NV_PGRAPH_XFMODE1_LIGHT5_INFINITE                0x00000001 /* RW--V */
#define NV_PGRAPH_XFMODE1_LIGHT5_LOCAL                   0x00000002 /* RW--V */
#define NV_PGRAPH_XFMODE1_LIGHT5_SPOT                    0x00000003 /* RW--V */
#define NV_PGRAPH_XFMODE1_LIGHT6                              13:12 /* RWXVF */
#define NV_PGRAPH_XFMODE1_LIGHT6_OFF                     0x00000000 /* RW--V */
#define NV_PGRAPH_XFMODE1_LIGHT6_INFINITE                0x00000001 /* RW--V */
#define NV_PGRAPH_XFMODE1_LIGHT6_LOCAL                   0x00000002 /* RW--V */
#define NV_PGRAPH_XFMODE1_LIGHT6_SPOT                    0x00000003 /* RW--V */
#define NV_PGRAPH_XFMODE1_LIGHT7                              15:14 /* RWXVF */
#define NV_PGRAPH_XFMODE1_LIGHT7_OFF                     0x00000000 /* RW--V */
#define NV_PGRAPH_XFMODE1_LIGHT7_INFINITE                0x00000001 /* RW--V */
#define NV_PGRAPH_XFMODE1_LIGHT7_LOCAL                   0x00000002 /* RW--V */
#define NV_PGRAPH_XFMODE1_LIGHT7_SPOT                    0x00000003 /* RW--V */
#define NV_PGRAPH_XFMODE1_FOGGEN                              17:16 /* RWXVF */
#define NV_PGRAPH_XFMODE1_FOGGEN_OFF                     0x00000000 /* RW--V */
#define NV_PGRAPH_XFMODE1_FOGGEN_RADIAL                  0x00000001 /* RW--V */
#define NV_PGRAPH_XFMODE1_FOGGEN_PLANE                   0x00000002 /* RW--V */
#define NV_PGRAPH_XFMODE1_FOGGEN_ABS_PLANAR              0x00000003 /* RW--V */
#define NV_PGRAPH_XFMODE1_LAT                                 18:18 /* RWXVF */
#define NV_PGRAPH_XFMODE1_LAT_OFF                        0x00000000 /* RW--V */
#define NV_PGRAPH_XFMODE1_LAT_ON                         0x00000001 /* RW--V */
#define NV_PGRAPH_XFMODE1_COLOR1I                             19:19 /* RWXVF */
#define NV_PGRAPH_XFMODE1_COLOR1I_OFF                    0x00000000 /* RW--V */
#define NV_PGRAPH_XFMODE1_COLOR1I_PASS                   0x00000001 /* RW--V */
#define NV_PGRAPH_XFMODE1_COLOR1O                             20:20 /* RWXVF */
#define NV_PGRAPH_XFMODE1_COLOR1O_OFF                    0x00000000 /* RW--V */
#define NV_PGRAPH_XFMODE1_COLOR1O_PASS                   0x00000001 /* RW--V */
#define NV_PGRAPH_XFMODE1_COLOR_MATERIAL                      24:21 /* RWXVF */
#define NV_PGRAPH_XFMODE1_COLOR_MATERIAL_DISABLED        0x00000000 /* RW--V */
#define NV_PGRAPH_XFMODE1_COLOR_MATERIAL_EMISSION        0x00000001 /* RW--V */
#define NV_PGRAPH_XFMODE1_COLOR_MATERIAL_AMBIENT         0x00000002 /* RW--V */
#define NV_PGRAPH_XFMODE1_COLOR_MATERIAL_DIFFUSE         0x00000004 /* RW--V */
#define NV_PGRAPH_XFMODE1_COLOR_MATERIAL_AMBIENT_DIFFUSE 0x00000006 /* RW--V */
#define NV_PGRAPH_XFMODE1_COLOR_MATERIAL_SPECULAR        0x00000008 /* RW--V */
#define NV_PGRAPH_XFMODE1_POINT_PARAM                         25:25 /* RWXVF */
#define NV_PGRAPH_XFMODE1_POINT_PARAM_OFF                0x00000000 /* RW--V */
#define NV_PGRAPH_XFMODE1_POINT_PARAM_ON                 0x00000001 /* RW--V */
#define NV_PGRAPH_XFMODE1_RESERVED                            26:26 /* RWXVF */
#define NV_PGRAPH_XFMODE1_RESERVED_0                     0x00000000 /* RW--V */
#define NV_PGRAPH_XFMODE1_SKIN_EN                             27:27 /* RWXVF */
#define NV_PGRAPH_XFMODE1_SKIN_EN_OFF                    0x00000000 /* RW--V */
#define NV_PGRAPH_XFMODE1_SKIN_EN_ON                     0x00000001 /* RW--V */
#define NV_PGRAPH_XFMODE1_PASS                                28:28 /* RWXVF */
#define NV_PGRAPH_XFMODE1_PASS_FULLOPERATION             0x00000000 /* RW--V */
#define NV_PGRAPH_XFMODE1_PASS_PASSTHROUGH               0x00000001 /* RW--V */
#define NV_PGRAPH_XFMODE1_HALFOFFSET                          29:29 /* RWXVF */
#define NV_PGRAPH_XFMODE1_HALFOFFSET_OFF                 0x00000000 /* RW--V */
#define NV_PGRAPH_XFMODE1_HALFOFFSET_ON                  0x00000001 /* RW--V */
#define NV_PGRAPH_GLOBALSTATE0                           0x00400F48 /* RW-4R */
#define NV_PGRAPH_GLOBALSTATE0_FOGMODE                          2:0 /* RWXVF */
#define NV_PGRAPH_GLOBALSTATE0_FOGMODE_LINEAR            0x00000000 /* RW--V */
#define NV_PGRAPH_GLOBALSTATE0_FOGMODE_EXP               0x00000001 /* RW--V */
#define NV_PGRAPH_GLOBALSTATE0_FOGMODE_EXP2              0x00000003 /* RW--V */
#define NV_PGRAPH_GLOBALSTATE0_FOGMODE_EXP_ABS           0x00000005 /* RW--V */
#define NV_PGRAPH_GLOBALSTATE0_FOGMODE_EXP2_ABS          0x00000007 /* RW--V */
#define NV_PGRAPH_GLOBALSTATE0_WINDOW_CLIPMODE                  4:4 /* RWXVF */
#define NV_PGRAPH_GLOBALSTATE0_WINDOW_CLIPMODE_INCLUSIVE 0x00000000 /* RW--V */
#define NV_PGRAPH_GLOBALSTATE0_WINDOW_CLIPMODE_EXCLUSIVE 0x00000001 /* RW--V */
#define NV_PGRAPH_GLOBALSTATE0_WITHIN_BEGINEND                  8:8 /* RWXVF */
#define NV_PGRAPH_GLOBALSTATE0_WITHIN_BEGINEND_FALSE     0x00000000 /* RW--V */
#define NV_PGRAPH_GLOBALSTATE0_WITHIN_BEGINEND_TRUE      0x00000001 /* RW--V */
#define NV_PGRAPH_GLOBALSTATE0_COMB0ALPHA_SINGLETEX           16:16 /* RWXVF */
#define NV_PGRAPH_GLOBALSTATE0_COMB0ALPHA_SINGLETEX_TRUE 0x00000001 /* RW--V */
#define NV_PGRAPH_GLOBALSTATE0_COMB0COLOR_SINGLETEX           17:17 /* RWXVF */
#define NV_PGRAPH_GLOBALSTATE0_COMB0COLOR_SINGLETEX_TRUE 0x00000001 /* RW--V */
#define NV_PGRAPH_GLOBALSTATE0_COMB1ALPHA_BYPASS              18:18 /* RWXVF */
#define NV_PGRAPH_GLOBALSTATE0_COMB1ALPHA_BYPASS_FALSE   0x00000000 /* RW--V */
#define NV_PGRAPH_GLOBALSTATE0_COMB1ALPHA_BYPASS_TRUE    0x00000001 /* RW--V */
#define NV_PGRAPH_GLOBALSTATE0_COMB1COLOR_BYPASS              19:19 /* RWXVF */
#define NV_PGRAPH_GLOBALSTATE0_COMB1COLOR_BYPASS_FALSE   0x00000000 /* RW--V */
#define NV_PGRAPH_GLOBALSTATE0_COMB1COLOR_BYPASS_TRUE    0x00000001 /* RW--V */
#define NV_PGRAPH_GLOBALSTATE0_COMB0ALPHA_ADDCMP              20:20 /* RWXVF */
#define NV_PGRAPH_GLOBALSTATE0_COMB0ALPHA_ADDCMP_FALSE   0x00000000 /* RW--V */
#define NV_PGRAPH_GLOBALSTATE0_COMB0ALPHA_ADDCMP_TRUE    0x00000001 /* RW--V */
#define NV_PGRAPH_GLOBALSTATE0_COMB0COLOR_ADDCMP              21:21 /* RWXVF */
#define NV_PGRAPH_GLOBALSTATE0_COMB0COLOR_ADDCMP_FALSE   0x00000000 /* RW--V */
#define NV_PGRAPH_GLOBALSTATE0_COMB0COLOR_ADDCMP_TRUE    0x00000001 /* RW--V */
#define NV_PGRAPH_GLOBALSTATE0_COMB1ALPHA_ADDCMP              22:22 /* RWXVF */
#define NV_PGRAPH_GLOBALSTATE0_COMB1ALPHA_ADDCMP_FALSE   0x00000000 /* RW--V */
#define NV_PGRAPH_GLOBALSTATE0_COMB1ALPHA_ADDCMP_TRUE    0x00000001 /* RW--V */
#define NV_PGRAPH_GLOBALSTATE0_COMB1COLOR_ADDCMP              23:23 /* RWXVF */
#define NV_PGRAPH_GLOBALSTATE0_COMB1COLOR_ADDCMP_FALSE   0x00000000 /* RW--V */
#define NV_PGRAPH_GLOBALSTATE0_COMB1COLOR_ADDCMP_TRUE    0x00000001 /* RW--V */
#define NV_PGRAPH_GLOBALSTATE0_Z_SETUP                        26:24 /* RWXVF */
#define NV_PGRAPH_GLOBALSTATE0_Z_SETUP_Z16ZFIXEDZBUFFER  0x00000000 /* RW--V */
#define NV_PGRAPH_GLOBALSTATE0_Z_SETUP_Z16ZFIXEDWBUFFER  0x00000001 /* RW--V */
#define NV_PGRAPH_GLOBALSTATE0_Z_SETUP_Z16ZFLOATZBUFFER  0x00000002 /* RW--V */
#define NV_PGRAPH_GLOBALSTATE0_Z_SETUP_Z16ZFLOATWBUFFER  0x00000003 /* RW--V */
#define NV_PGRAPH_GLOBALSTATE0_Z_SETUP_Z24ZFIXEDZBUFFER  0x00000004 /* RW--V */
#define NV_PGRAPH_GLOBALSTATE0_Z_SETUP_Z24ZFIXEDWBUFFER  0x00000005 /* RW--V */
#define NV_PGRAPH_GLOBALSTATE0_Z_SETUP_Z24ZFLOATZBUFFER  0x00000006 /* RW--V */
#define NV_PGRAPH_GLOBALSTATE0_Z_SETUP_Z24ZFLOATWBUFFER  0x00000007 /* RW--V */
#define NV_PGRAPH_GLOBALSTATE0_Z_INITIALIZED                  28:28 /* RWXVF */
#define NV_PGRAPH_GLOBALSTATE0_Z_INITIALIZED_FALSE       0x00000000 /* RW--V */
#define NV_PGRAPH_GLOBALSTATE0_Z_INITIALIZED_TRUE        0x00000001 /* RW--V */
#define NV_PGRAPH_GLOBALSTATE1                           0x00400F4C /* RW-4R */
#define NV_PGRAPH_GLOBALSTATE1_DMA_INSTANCE_2                  15:0 /* RWXUF */
#define NV_PGRAPH_GLOBALSTATE1_DMA_INSTANCE_2_INVALID        0x0000 /* RW--V */
#define NV_PGRAPH_GLOBALSTATE1_DMA_INSTANCE_3                 31:16 /* RWXUF */
#define NV_PGRAPH_GLOBALSTATE1_DMA_INSTANCE_3_INVALID        0x0000 /* RW--V */
#define NV_PGRAPH_PIPE_ADDRESS                           0x00400F50 /* RW-4R */
#define NV_PGRAPH_PIPE_ADDRESS_VALUE                           14:2 /* RWXVF */
#define NV_PGRAPH_PIPE_DATA                              0x00400F54 /* RW-4R */
#define NV_PGRAPH_PIPE_DATA_VALUE                              31:0 /* RWXVF */
#define NV_PGRAPH_DMA_START_0                            0x00401000 /* RW-4R */
#define NV_PGRAPH_DMA_START_0_VALUE                            31:0 /* RWXUF */
#define NV_PGRAPH_DMA_START_1                            0x00401004 /* RW-4R */
#define NV_PGRAPH_DMA_START_1_VALUE                            31:0 /* RWXUF */
#define NV_PGRAPH_DMA_LENGTH                             0x00401008 /* RW-4R */
#define NV_PGRAPH_DMA_LENGTH_VALUE                             21:0 /* RWXUF */
#define NV_PGRAPH_DMA_MISC                               0x0040100C /* RW-4R */
#define NV_PGRAPH_DMA_MISC_COUNT                               15:0 /* RWXUF */
#define NV_PGRAPH_DMA_MISC_FMT_SRC                            18:16 /* RWXVF */
#define NV_PGRAPH_DMA_MISC_FMT_DST                            22:20 /* RWXVF */
#define NV_PGRAPH_DMA_DATA_0                             0x00401020 /* RW-4R */
#define NV_PGRAPH_DMA_DATA_0_VALUE                             31:0 /* RWXUF */
#define NV_PGRAPH_DMA_DATA_1                             0x00401024 /* RW-4R */
#define NV_PGRAPH_DMA_DATA_1_VALUE                             31:0 /* RWXUF */
#define NV_PGRAPH_DMA_RM                                 0x00401030 /* RW-4R */
#define NV_PGRAPH_DMA_RM_ASSIST_A                               0:0 /* RWIVF */
#define NV_PGRAPH_DMA_RM_ASSIST_A_NOT_PENDING            0x00000000 /* R-I-V */
#define NV_PGRAPH_DMA_RM_ASSIST_A_PENDING                0x00000001 /* R---V */
#define NV_PGRAPH_DMA_RM_ASSIST_A_RESET                  0x00000001 /* -W--C */
#define NV_PGRAPH_DMA_RM_ASSIST_B                               1:1 /* RWIVF */
#define NV_PGRAPH_DMA_RM_ASSIST_B_NOT_PENDING            0x00000000 /* R-I-V */
#define NV_PGRAPH_DMA_RM_ASSIST_B_PENDING                0x00000001 /* R---V */
#define NV_PGRAPH_DMA_RM_ASSIST_B_RESET                  0x00000001 /* -W--C */
#define NV_PGRAPH_DMA_RM_WRITE_REQ                              4:4 /* CWIVF */
#define NV_PGRAPH_DMA_RM_WRITE_REQ_NOT_PENDING           0x00000000 /* CWI-V */
#define NV_PGRAPH_DMA_RM_WRITE_REQ_PENDING               0x00000001 /* -W--T */
#define NV_PGRAPH_DMA_A_XLATE_INST                       0x00401040 /* RW-4R */
#define NV_PGRAPH_DMA_A_XLATE_INST_VALUE                       15:0 /* RWXUF */
#define NV_PGRAPH_DMA_A_CONTROL                          0x00401044 /* RW-4R */
#define NV_PGRAPH_DMA_A_CONTROL_PAGE_TABLE                    12:12 /* RWIVF */
#define NV_PGRAPH_DMA_A_CONTROL_PAGE_TABLE_NOT_PRESENT   0x00000000 /* RWI-V */
#define NV_PGRAPH_DMA_A_CONTROL_PAGE_TABLE_PRESENT       0x00000001 /* RW--V */
#define NV_PGRAPH_DMA_A_CONTROL_PAGE_ENTRY                    13:13 /* RWXVF */
#define NV_PGRAPH_DMA_A_CONTROL_PAGE_ENTRY_NOT_LINEAR    0x00000000 /* RW--V */
#define NV_PGRAPH_DMA_A_CONTROL_PAGE_ENTRY_LINEAR        0x00000001 /* RW--V */
#define NV_PGRAPH_DMA_A_CONTROL_TARGET_NODE                   17:16 /* RWXUF */
#define NV_PGRAPH_DMA_A_CONTROL_TARGET_NODE_NVM          0x00000000 /* RW--V */
#define NV_PGRAPH_DMA_A_CONTROL_TARGET_NODE_PCI          0x00000002 /* RW--V */
#define NV_PGRAPH_DMA_A_CONTROL_TARGET_NODE_AGP          0x00000003 /* RW--V */
#define NV_PGRAPH_DMA_A_CONTROL_ADJUST                        31:20 /* RWXUF */
#define NV_PGRAPH_DMA_A_LIMIT                            0x00401048 /* RW-4R */
#define NV_PGRAPH_DMA_A_LIMIT_OFFSET                           31:0 /* RWXUF */
#define NV_PGRAPH_DMA_A_TLB_PTE                          0x0040104C /* RW-4R */
#define NV_PGRAPH_DMA_A_TLB_PTE_ACCESS                          1:1 /* RWXVF */
#define NV_PGRAPH_DMA_A_TLB_PTE_ACCESS_READ_ONLY         0x00000000 /* RW--V */
#define NV_PGRAPH_DMA_A_TLB_PTE_ACCESS_READ_WRITE        0x00000001 /* RW--V */
#define NV_PGRAPH_DMA_A_TLB_PTE_FRAME_ADDRESS                 31:12 /* RWXUF */
#define NV_PGRAPH_DMA_A_TLB_TAG                          0x00401050 /* RW-4R */
#define NV_PGRAPH_DMA_A_TLB_TAG_ADDRESS                       31:12 /* RWXUF */
#define NV_PGRAPH_DMA_A_ADJ_OFFSET                       0x00401054 /* RW-4R */
#define NV_PGRAPH_DMA_A_ADJ_OFFSET_VALUE                       31:0 /* RWXUF */
#define NV_PGRAPH_DMA_A_OFFSET                           0x00401058 /* RW-4R */
#define NV_PGRAPH_DMA_A_OFFSET_VALUE                           31:0 /* RWXUF */
#define NV_PGRAPH_DMA_A_SIZE                             0x0040105C /* RW-4R */
#define NV_PGRAPH_DMA_A_SIZE_VALUE                             24:0 /* RWXUF */
#define NV_PGRAPH_DMA_A_Y_SIZE                           0x00401060 /* RW-4R */
#define NV_PGRAPH_DMA_A_Y_SIZE_VALUE                           10:0 /* RWXUF */
#define NV_PGRAPH_DMA_B_XLATE_INST                       0x00401080 /* RW-4R */
#define NV_PGRAPH_DMA_B_XLATE_INST_VALUE                       15:0 /* RWXUF */
#define NV_PGRAPH_DMA_B_CONTROL                          0x00401084 /* RW-4R */
#define NV_PGRAPH_DMA_B_CONTROL_PAGE_TABLE                    12:12 /* RWIVF */
#define NV_PGRAPH_DMA_B_CONTROL_PAGE_TABLE_NOT_PRESENT   0x00000000 /* RWI-V */
#define NV_PGRAPH_DMA_B_CONTROL_PAGE_TABLE_PRESENT       0x00000001 /* RW--V */
#define NV_PGRAPH_DMA_B_CONTROL_PAGE_ENTRY                    13:13 /* RWXVF */
#define NV_PGRAPH_DMA_B_CONTROL_PAGE_ENTRY_NOT_LINEAR    0x00000000 /* RW--V */
#define NV_PGRAPH_DMA_B_CONTROL_PAGE_ENTRY_LINEAR        0x00000001 /* RW--V */
#define NV_PGRAPH_DMA_B_CONTROL_TARGET_NODE                   17:16 /* RWXUF */
#define NV_PGRAPH_DMA_B_CONTROL_TARGET_NODE_NVM          0x00000000 /* RW--V */
#define NV_PGRAPH_DMA_B_CONTROL_TARGET_NODE_PCI          0x00000002 /* RW--V */
#define NV_PGRAPH_DMA_B_CONTROL_TARGET_NODE_AGP          0x00000003 /* RW--V */
#define NV_PGRAPH_DMA_B_CONTROL_ADJUST                        31:20 /* RWXUF */
#define NV_PGRAPH_DMA_B_LIMIT                            0x00401088 /* RW-4R */
#define NV_PGRAPH_DMA_B_LIMIT_OFFSET                           31:0 /* RWXUF */
#define NV_PGRAPH_DMA_B_TLB_PTE                          0x0040108C /* RW-4R */
#define NV_PGRAPH_DMA_B_TLB_PTE_ACCESS                          1:1 /* RWXVF */
#define NV_PGRAPH_DMA_B_TLB_PTE_ACCESS_READ_ONLY         0x00000000 /* RW--V */
#define NV_PGRAPH_DMA_B_TLB_PTE_ACCESS_READ_WRITE        0x00000001 /* RW--V */
#define NV_PGRAPH_DMA_B_TLB_PTE_FRAME_ADDRESS                 31:12 /* RWXUF */
#define NV_PGRAPH_DMA_B_TLB_TAG                          0x00401090 /* RW-4R */
#define NV_PGRAPH_DMA_B_TLB_TAG_ADDRESS                       31:12 /* RWXUF */
#define NV_PGRAPH_DMA_B_ADJ_OFFSET                       0x00401094 /* RW-4R */
#define NV_PGRAPH_DMA_B_ADJ_OFFSET_VALUE                       31:0 /* RWXUF */
#define NV_PGRAPH_DMA_B_OFFSET                           0x00401098 /* RW-4R */
#define NV_PGRAPH_DMA_B_OFFSET_VALUE                           31:0 /* RWXUF */
#define NV_PGRAPH_DMA_B_SIZE                             0x0040109C /* RW-4R */
#define NV_PGRAPH_DMA_B_SIZE_VALUE                             24:0 /* RWXUF */
#define NV_PGRAPH_DMA_B_Y_SIZE                           0x004010A0 /* RW-4R */
#define NV_PGRAPH_DMA_B_Y_SIZE_VALUE                           10:0 /* RWXUF */
#define NV_PGRAPH_CONTROL_OUT_INTERPOLATOR                      1:0 /* -WIUF */
#define NV_PGRAPH_CONTROL_OUT_INTERPOLATOR_ZOH_MS        0x00000000 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_INTERPOLATOR_ZOH           0x00000001 /* -WIUV */
#define NV_PGRAPH_CONTROL_OUT_INTERPOLATOR_FOH           0x00000002 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_WRAP_U                            5:4 /* -WIUF */
#define NV_PGRAPH_CONTROL_OUT_WRAP_U_CYLINDRICAL         0x00000000 /* -WIUV */
#define NV_PGRAPH_CONTROL_OUT_WRAP_U_WRAP                0x00000001 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_WRAP_U_MIRROR              0x00000002 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_WRAP_U_CLAMP               0x00000003 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_WRAP_V                            7:6 /* -WIUF */
#define NV_PGRAPH_CONTROL_OUT_WRAP_V_CYLINDRICAL         0x00000000 /* -WIUV */
#define NV_PGRAPH_CONTROL_OUT_WRAP_V_WRAP                0x00000001 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_WRAP_V_MIRROR              0x00000002 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_WRAP_V_CLAMP               0x00000003 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_COLOR_FORMAT                      8:8 /* -WIUF */
#define NV_PGRAPH_CONTROL_OUT_COLOR_FORMAT_LE_X8R8G8B8   0x00000000 /* -WIUV */
#define NV_PGRAPH_CONTROL_OUT_COLOR_FORMAT_LE_A8R8G8B8   0x00000001 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_SRCCOLOR                        11:10 /* -W-UF */
#define NV_PGRAPH_CONTROL_OUT_SRCCOLOR_NORMAL            0x00000000 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_SRCCOLOR_COLOR_INVERSE     0x00000001 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_SRCCOLOR_ALPHA_INVERSE     0x00000002 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_SRCCOLOR_ALPHA_ONE         0x00000003 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_CULLING                         13:12 /* -WIUF */
#define NV_PGRAPH_CONTROL_OUT_CULLING_ILLEGAL            0x00000000 /* -WIUV */
#define NV_PGRAPH_CONTROL_OUT_CULLING_NONE               0x00000001 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_CULLING_COUNTERCLOCKWISE   0x00000002 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_CULLING_CLOCKWISE          0x00000003 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_ZBUFFER                         15:15 /* -WIUF */
#define NV_PGRAPH_CONTROL_OUT_ZBUFFER_SCREEN             0x00000000 /* -WIUV */
#define NV_PGRAPH_CONTROL_OUT_ZBUFFER_LINEAR             0x00000001 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_ZETA_COMPARE                    19:16 /* -WIUF */
#define NV_PGRAPH_CONTROL_OUT_ZETA_COMPARE_ILLEGAL       0x00000000 /* -WIUV */
#define NV_PGRAPH_CONTROL_OUT_ZETA_COMPARE_FALSE         0x00000001 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_ZETA_COMPARE_LT            0x00000002 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_ZETA_COMPARE_EQ            0x00000003 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_ZETA_COMPARE_LE            0x00000004 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_ZETA_COMPARE_GT            0x00000005 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_ZETA_COMPARE_NE            0x00000006 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_ZETA_COMPARE_GE            0x00000007 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_ZETA_COMPARE_TRUE          0x00000008 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_ZETA_WRITE                      22:20 /* -WIUF */
#define NV_PGRAPH_CONTROL_OUT_ZETA_WRITE_NEVER           0x00000000 /* -WIUV */
#define NV_PGRAPH_CONTROL_OUT_ZETA_WRITE_ALPHA           0x00000001 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_ZETA_WRITE_ALPHA_ZETA      0x00000002 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_ZETA_WRITE_ZETA            0x00000003 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_ZETA_WRITE_ALWAYS          0x00000004 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_COLOR_WRITE                     26:24 /* -WIUF */
#define NV_PGRAPH_CONTROL_OUT_COLOR_WRITE_NEVER          0x00000000 /* -WIUV */
#define NV_PGRAPH_CONTROL_OUT_COLOR_WRITE_ALPHA          0x00000001 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_COLOR_WRITE_ALPHA_ZETA     0x00000002 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_COLOR_WRITE_ZETA           0x00000003 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_ROP                             28:28 /* -WIUF */
#define NV_PGRAPH_CONTROL_OUT_ROP_BLEND_AND              0x00000000 /* -WIUV */
#define NV_PGRAPH_CONTROL_OUT_ROP_ADD_WITH_SATURATION    0x00000001 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_BLEND_BETA                      29:29 /* -W-UF */
#define NV_PGRAPH_CONTROL_OUT_BLEND_BETA_SRCALPHA        0x00000000 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_BLEND_BETA_DESTCOLOR       0x00000001 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_BLEND_INPUT0                    30:30 /* -W-UF */
#define NV_PGRAPH_CONTROL_OUT_BLEND_INPUT0_DESTCOLOR     0x00000000 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_BLEND_INPUT0_ZERO          0x00000001 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_BLEND_INPUT1                    31:31 /* -W-UF */
#define NV_PGRAPH_CONTROL_OUT_BLEND_INPUT1_SRCCOLOR      0x00000000 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_BLEND_INPUT1_ZERO          0x00000001 /* -W-UV */
#define NV_PGRAPH_ALPHACNTRL_ALPHA_KEY                          7:0 /* RWXUF */
#define NV_PGRAPH_ALPHACNTRL_ALPHA_COMPARE                     11:8 /* RWXVF */
#define NV_PGRAPH_ALPHACNTRL_ALPHA_COMPARE_ILLEGAL       0x00000000 /* RW--V */
#define NV_PGRAPH_ALPHACNTRL_ALPHA_COMPARE_FALSE         0x00000001 /* RW--V */
#define NV_PGRAPH_ALPHACNTRL_ALPHA_COMPARE_LT            0x00000002 /* RW--V */
#define NV_PGRAPH_ALPHACNTRL_ALPHA_COMPARE_EQ            0x00000003 /* RW--V */
#define NV_PGRAPH_ALPHACNTRL_ALPHA_COMPARE_LE            0x00000004 /* RW--V */
#define NV_PGRAPH_ALPHACNTRL_ALPHA_COMPARE_GT            0x00000005 /* RW--V */
#define NV_PGRAPH_ALPHACNTRL_ALPHA_COMPARE_NE            0x00000006 /* RW--V */
#define NV_PGRAPH_ALPHACNTRL_ALPHA_COMPARE_GE            0x00000007 /* RW--V */
#define NV_PGRAPH_ALPHACNTRL_ALPHA_COMPARE_TRUE          0x00000008 /* RW--V */
/* dev_video.ref */
#define NV_PVIDEO                             0x00008FFF:0x00008000 /* RW--D */
#define NV_PVIDEO_DEBUG_0                                0x00008080 /* RW-4R */
#define NV_PVIDEO_DEBUG_0_HLF_RATE_ROW_RD                       0:0 /* RWIVF */
#define NV_PVIDEO_DEBUG_0_HLF_RATE_ROW_RD_DISABLED       0x00000000 /* RWI-V */
#define NV_PVIDEO_DEBUG_0_HLF_RATE_ROW_RD_ENABLED        0x00000001 /* RW--V */
#define NV_PVIDEO_DEBUG_0_LIMIT_CHECK                           4:4 /* RWIVF */
#define NV_PVIDEO_DEBUG_0_LIMIT_CHECK_DISABLED           0x00000000 /* RW--V */
#define NV_PVIDEO_DEBUG_0_LIMIT_CHECK_ENABLED            0x00000001 /* RWI-V */
#define NV_PVIDEO_DEBUG_0_HUE_FOLD                              8:8 /* RWIVF */
#define NV_PVIDEO_DEBUG_0_HUE_FOLD_DISABLED              0x00000000 /* RWI-V */
#define NV_PVIDEO_DEBUG_0_HUE_FOLD_ENABLED               0x00000001 /* RW--V */
#define NV_PVIDEO_DEBUG_1                                0x00008084 /* RW-4R */
#define NV_PVIDEO_DEBUG_1_REQ_DELAY                            10:0 /* RWIVF */
#define NV_PVIDEO_DEBUG_1_REQ_DELAY_DEFAULT              0x00000064 /* RWI-V */
#define NV_PVIDEO_DEBUG_2                                0x00008088 /* RW-4R */
#define NV_PVIDEO_DEBUG_2_BURST1                               10:5 /* RWIVF */
#define NV_PVIDEO_DEBUG_2_BURST1_DEFAULT                 0x00000008 /* RWI-V */
#define NV_PVIDEO_DEBUG_2_BURST2                              26:21 /* RWIVF */
#define NV_PVIDEO_DEBUG_2_BURST2_DEFAULT                 0x00000010 /* RWI-V */
#define NV_PVIDEO_DEBUG_3                                0x0000808c /* RW-4R */
#define NV_PVIDEO_DEBUG_3_WATER_MARK1                          10:4 /* RWIVF */
#define NV_PVIDEO_DEBUG_3_WATER_MARK1_DEFAULT            0x0000004b /* RWI-V */
#define NV_PVIDEO_DEBUG_3_WATER_MARK2                         26:20 /* RWIVF */
#define NV_PVIDEO_DEBUG_3_WATER_MARK2_DEFAULT            0x0000003b /* RWI-V */
#define NV_PVIDEO_DEBUG_4                                0x00008090 /* RW-4R */
#define NV_PVIDEO_DEBUG_4_V_COEFF_B                            23:5 /* RWIVF */
#define NV_PVIDEO_DEBUG_4_V_COEFF_B_DEFAULT              0x0000b505 /* RWI-V */
#define NV_PVIDEO_DEBUG_4_V_COEFF_B_ALWAYS               0x00000000 /* RW--V */
#define NV_PVIDEO_DEBUG_4_V_COEFF_B_NEVER                0x0007ffff /* RW--V */
#define NV_PVIDEO_DEBUG_5                                0x00008094 /* RW-4R */
#define NV_PVIDEO_DEBUG_5_H_L_COEFF_D                          21:4 /* RWIVF */
#define NV_PVIDEO_DEBUG_5_H_L_COEFF_D_DEFAULT            0x00018816 /* RWI-V */
#define NV_PVIDEO_DEBUG_5_H_L_COEFF_D_ALWAYS             0x00000000 /* RW--V */
#define NV_PVIDEO_DEBUG_5_H_L_COEFF_D_NEVER              0x0003ffff /* RW--V */
#define NV_PVIDEO_DEBUG_6                                0x00008098 /* RW-4R */
#define NV_PVIDEO_DEBUG_6_H_L_COEFF_C                          21:4 /* RWIVF */
#define NV_PVIDEO_DEBUG_6_H_L_COEFF_C_DEFAULT            0x00012c73 /* RWI-V */
#define NV_PVIDEO_DEBUG_6_H_L_COEFF_C_ALWAYS             0x00000000 /* RW--V */
#define NV_PVIDEO_DEBUG_6_H_L_COEFF_C_NEVER              0x0003ffff /* RW--V */
#define NV_PVIDEO_DEBUG_7                                0x0000809c /* RW-4R */
#define NV_PVIDEO_DEBUG_7_H_L_COEFF_B                          21:4 /* RWIVF */
#define NV_PVIDEO_DEBUG_7_H_L_COEFF_B_DEFAULT            0x00000000 /* RWI-V */
#define NV_PVIDEO_DEBUG_7_H_L_COEFF_B_ALWAYS             0x00000000 /* RW--V */
#define NV_PVIDEO_DEBUG_7_H_L_COEFF_B_NEVER              0x0003ffff /* RW--V */
#define NV_PVIDEO_DEBUG_8                                0x000080a0 /* RW-4R */
#define NV_PVIDEO_DEBUG_8_PIPE_FILL                            10:4 /* RWIVF */
#define NV_PVIDEO_DEBUG_8_PIPE_FILL_DEFAULT              0x0000000b /* RWI-V */
#define NV_PVIDEO_DEBUG_9                                0x000080a4 /* RW-4R */
#define NV_PVIDEO_DEBUG_9_FIFO_A_UNDERFLOW                      0:0 /* RWIVF */
#define NV_PVIDEO_DEBUG_9_FIFO_A_UNDERFLOW_FALSE         0x00000000 /* R-I-V */
#define NV_PVIDEO_DEBUG_9_FIFO_A_UNDERFLOW_TRUE          0x00000001 /* R---V */
#define NV_PVIDEO_DEBUG_9_FIFO_A_UNDERFLOW_RESET         0x00000001 /* -W--C */
#define NV_PVIDEO_DEBUG_9_FIFO_A_OVERFLOW                       4:4 /* RWIVF */
#define NV_PVIDEO_DEBUG_9_FIFO_A_OVERFLOW_FALSE          0x00000000 /* R-I-V */
#define NV_PVIDEO_DEBUG_9_FIFO_A_OVERFLOW_TRUE           0x00000001 /* R---V */
#define NV_PVIDEO_DEBUG_9_FIFO_A_OVERFLOW_RESET          0x00000001 /* -W--C */
#define NV_PVIDEO_DEBUG_9_FIFO_B_UNDERFLOW                      8:8 /* RWIVF */
#define NV_PVIDEO_DEBUG_9_FIFO_B_UNDERFLOW_FALSE         0x00000000 /* R-I-V */
#define NV_PVIDEO_DEBUG_9_FIFO_B_UNDERFLOW_TRUE          0x00000001 /* R---V */
#define NV_PVIDEO_DEBUG_9_FIFO_B_UNDERFLOW_RESET         0x00000001 /* -W--C */
#define NV_PVIDEO_DEBUG_9_FIFO_B_OVERFLOW                     12:12 /* RWIVF */
#define NV_PVIDEO_DEBUG_9_FIFO_B_OVERFLOW_FALSE          0x00000000 /* R-I-V */
#define NV_PVIDEO_DEBUG_9_FIFO_B_OVERFLOW_TRUE           0x00000001 /* R---V */
#define NV_PVIDEO_DEBUG_9_FIFO_B_OVERFLOW_RESET          0x00000001 /* -W--C */
#define NV_PVIDEO_DEBUG_10                               0x000080a8 /* R--4R */
#define NV_PVIDEO_DEBUG_10_SCREEN_LINE                         12:0 /* R-XVF */
#define NV_PVIDEO_DEBUG_10_SCREEN_LINE_FIRST             0x00000000 /* R---V */
#define NV_PVIDEO_DEBUG_10_SCAN_COUNT                         20:16 /* R-XVF */
#define NV_PVIDEO_DEBUG_10_SCAN_COUNT_FIRST              0x00000000 /* R---V */
#define NV_PVIDEO_DEBUG_10_SCAN_COUNT_OVERFLOW           0x00000010 /* R---V */
#define NV_PVIDEO_DEBUG_10_SCANNING                           25:24 /* R-XVF */
#define NV_PVIDEO_DEBUG_10_SCANNING_NEITHER              0x00000000 /* R---V */
#define NV_PVIDEO_DEBUG_10_SCANNING_BUFFER_0             0x00000002 /* R---V */
#define NV_PVIDEO_DEBUG_10_SCANNING_BUFFER_1             0x00000003 /* R---V */
#define NV_PVIDEO_INTR                                   0x00008100 /* RW-4R */
#define NV_PVIDEO_INTR_BUFFER_0                                 0:0 /* RWIVF */
#define NV_PVIDEO_INTR_BUFFER_0_NOT_PENDING              0x00000000 /* R-I-V */
#define NV_PVIDEO_INTR_BUFFER_0_PENDING                  0x00000001 /* R---V */
#define NV_PVIDEO_INTR_BUFFER_0_RESET                    0x00000001 /* -W--C */
#define NV_PVIDEO_INTR_BUFFER_1                                 4:4 /* RWIVF */
#define NV_PVIDEO_INTR_BUFFER_1_NOT_PENDING              0x00000000 /* R-I-V */
#define NV_PVIDEO_INTR_BUFFER_1_PENDING                  0x00000001 /* R---V */
#define NV_PVIDEO_INTR_BUFFER_1_RESET                    0x00000001 /* -W--C */
#define NV_PVIDEO_INTR_REASON                            0x00008104 /* R--4R */
#define NV_PVIDEO_INTR_REASON_BUFFER_0                          0:0 /* R-IVF */
#define NV_PVIDEO_INTR_REASON_BUFFER_0_NOTIFICATION      0x00000000 /* R-I-V */
#define NV_PVIDEO_INTR_REASON_BUFFER_0_PROTECTION_FAULT  0x00000001 /* R---V */
#define NV_PVIDEO_INTR_REASON_BUFFER_1                          4:4 /* R-IVF */
#define NV_PVIDEO_INTR_REASON_BUFFER_1_NOTIFICATION      0x00000000 /* R-I-V */
#define NV_PVIDEO_INTR_REASON_BUFFER_1_PROTECTION_FAULT  0x00000001 /* R---V */
#define NV_PVIDEO_INTR_EN                                0x00008140 /* RW-4R */
#define NV_PVIDEO_INTR_EN_BUFFER_0                              0:0 /* RWIVF */
#define NV_PVIDEO_INTR_EN_BUFFER_0_DISABLED              0x00000000 /* RWI-V */
#define NV_PVIDEO_INTR_EN_BUFFER_0_ENABLED               0x00000001 /* RW--V */
#define NV_PVIDEO_INTR_EN_BUFFER_1                              4:4 /* RWIVF */
#define NV_PVIDEO_INTR_EN_BUFFER_1_DISABLED              0x00000000 /* RWI-V */
#define NV_PVIDEO_INTR_EN_BUFFER_1_ENABLED               0x00000001 /* RW--V */
#define NV_PVIDEO_BUFFER                                 0x00008700 /* RW-4R */
#define NV_PVIDEO_BUFFER_0_USE                                  0:0 /* RWIVF */
#define NV_PVIDEO_BUFFER_0_USE_NOT_PENDING               0x00000000 /* R-I-V */
#define NV_PVIDEO_BUFFER_0_USE_PENDING                   0x00000001 /* R---V */
#define NV_PVIDEO_BUFFER_0_USE_SET                       0x00000001 /* -W--S */
#define NV_PVIDEO_BUFFER_1_USE                                  4:4 /* RWIVF */
#define NV_PVIDEO_BUFFER_1_USE_NOT_PENDING               0x00000000 /* R-I-V */
#define NV_PVIDEO_BUFFER_1_USE_PENDING                   0x00000001 /* R---V */
#define NV_PVIDEO_BUFFER_1_USE_SET                       0x00000001 /* -W--S */
#define NV_PVIDEO_STOP                                   0x00008704 /* RW-4R */
#define NV_PVIDEO_STOP_OVERLAY                                  0:0 /* RWIVF */
#define NV_PVIDEO_STOP_OVERLAY_INACTIVE                  0x00000000 /* RWI-V */
#define NV_PVIDEO_STOP_OVERLAY_ACTIVE                    0x00000001 /* RW--V */
#define NV_PVIDEO_STOP_METHOD                                   4:4 /* RWIVF */
#define NV_PVIDEO_STOP_METHOD_IMMEDIATELY                0x00000000 /* RW--V */
#define NV_PVIDEO_STOP_METHOD_NORMALLY                   0x00000001 /* RWI-V */
#define NV_PVIDEO_BASE(i)                        (0x00008900+(i)*4) /* RW-4A */
#define NV_PVIDEO_BASE__SIZE_1                                    2 /*       */
#define NV_PVIDEO_BASE_VALUE                                   26:6 /* RWXVF */
#define NV_PVIDEO_LIMIT(i)                       (0x00008908+(i)*4) /* RW-4A */
#define NV_PVIDEO_LIMIT__SIZE_1                                   2 /*       */
#define NV_PVIDEO_LIMIT_VALUE                                  26:6 /* RWXVF */
#define NV_PVIDEO_LIMIT_VALUE_MAX                        0x001fffff /* RW--V */
#define NV_PVIDEO_LUMINANCE(i)                   (0x00008910+(i)*4) /* RW-4A */
#define NV_PVIDEO_LUMINANCE__SIZE_1                               2 /*       */
#define NV_PVIDEO_LUMINANCE_CONTRAST                           12:3 /* RWXVF */
#define NV_PVIDEO_LUMINANCE_CONTRAST_47                  0x00000200 /* RWC-V */
#define NV_PVIDEO_LUMINANCE_CONTRAST_83                  0x00000200 /* RWC-V */
#define NV_PVIDEO_LUMINANCE_CONTRAST_UNITY               0x00000200 /* RW--V */
#define NV_PVIDEO_LUMINANCE_BRIGHTNESS                        25:16 /* RWXVF */
#define NV_PVIDEO_LUMINANCE_BRIGHTNESS_47                0x00000000 /* RWC-V */
#define NV_PVIDEO_LUMINANCE_BRIGHTNESS_83                0x00000000 /* RWC-V */
#define NV_PVIDEO_LUMINANCE_BRIGHTNESS_UNITY             0x00000000 /* RW--V */
#define NV_PVIDEO_CHROMINANCE(i)                 (0x00008918+(i)*4) /* RW-4A */
#define NV_PVIDEO_CHROMINANCE__SIZE_1                             2 /*       */
#define NV_PVIDEO_CHROMINANCE_SAT_COS                          13:2 /* RWXVF */
#define NV_PVIDEO_CHROMINANCE_SAT_COS_47                 0x00000400 /* RWC-V */
#define NV_PVIDEO_CHROMINANCE_SAT_COS_83                 0x00000400 /* RWC-V */
#define NV_PVIDEO_CHROMINANCE_SAT_COS_UNITY              0x00000400 /* RW--V */
#define NV_PVIDEO_CHROMINANCE_SAT_SIN                         29:18 /* RWXVF */
#define NV_PVIDEO_CHROMINANCE_SAT_SIN_47                 0x00000000 /* RWC-V */
#define NV_PVIDEO_CHROMINANCE_SAT_SIN_83                 0x00000000 /* RWC-V */
#define NV_PVIDEO_CHROMINANCE_SAT_SIN_UNITY              0x00000000 /* RW--V */
#define NV_PVIDEO_OFFSET(i)                      (0x00008920+(i)*4) /* RW-4A */
#define NV_PVIDEO_OFFSET__SIZE_1                                  2 /*       */
#define NV_PVIDEO_OFFSET_VALUE                                 31:6 /* RWXVF */
#define NV_PVIDEO_OFFSET_VALUE_47                        0x00000000 /* RWC-V */
#define NV_PVIDEO_OFFSET_VALUE_83                        0x00000000 /* RWC-V */
#define NV_PVIDEO_OFFSET_VALUE_ZERO                      0x00000000 /* RW--V */
#define NV_PVIDEO_SIZE_IN(i)                     (0x00008928+(i)*4) /* RW-4A */
#define NV_PVIDEO_SIZE_IN__SIZE_1                                 2 /*       */
#define NV_PVIDEO_SIZE_IN_WIDTH                                10:1 /* RWXVF */
#define NV_PVIDEO_SIZE_IN_WIDTH_47                       0x00000001 /* RWC-V */
#define NV_PVIDEO_SIZE_IN_WIDTH_83                       0x00000001 /* RWC-V */
#define NV_PVIDEO_SIZE_IN_HEIGHT                              26:16 /* RWXVF */
#define NV_PVIDEO_SIZE_IN_HEIGHT_47                      0x00000002 /* RWC-V */
#define NV_PVIDEO_SIZE_IN_HEIGHT_83                      0x00000002 /* RWC-V */
#define NV_PVIDEO_POINT_IN(i)                    (0x00008930+(i)*4) /* RW-4A */
#define NV_PVIDEO_POINT_IN__SIZE_1                                2 /*       */
#define NV_PVIDEO_POINT_IN_S                                   14:0 /* RWXVF */
#define NV_PVIDEO_POINT_IN_S_47                          0x00000000 /* RWC-V */
#define NV_PVIDEO_POINT_IN_S_83                          0x00000000 /* RWC-V */
#define NV_PVIDEO_POINT_IN_S_ORIGIN                      0x00000000 /* RW--V */
#define NV_PVIDEO_POINT_IN_T                                  31:17 /* RWXVF */
#define NV_PVIDEO_POINT_IN_T_47                          0x00000000 /* RWC-V */
#define NV_PVIDEO_POINT_IN_T_83                          0x00000000 /* RWC-V */
#define NV_PVIDEO_POINT_IN_T_ORIGIN                      0x00000000 /* RW--V */
#define NV_PVIDEO_DS_DX(i)                       (0x00008938+(i)*4) /* RW-4A */
#define NV_PVIDEO_DS_DX__SIZE_1                                   2 /*       */
#define NV_PVIDEO_DS_DX_RATIO                                  23:3 /* RWXVF */
#define NV_PVIDEO_DS_DX_RATIO_47                         0x00000000 /* RWC-V */
#define NV_PVIDEO_DS_DX_RATIO_83                         0x00000000 /* RWC-V */
#define NV_PVIDEO_DS_DX_RATIO_UNITY                      0x00020000 /* RW--V */
#define NV_PVIDEO_DT_DY(i)                       (0x00008940+(i)*4) /* RW-4A */
#define NV_PVIDEO_DT_DY__SIZE_1                                   2 /*       */
#define NV_PVIDEO_DT_DY_RATIO                                  23:4 /* RWXVF */
#define NV_PVIDEO_DT_DY_RATIO_47                         0x00000000 /* RWC-V */
#define NV_PVIDEO_DT_DY_RATIO_83                         0x00000000 /* RWC-V */
#define NV_PVIDEO_DT_DY_RATIO_UNITY                      0x00010000 /* RW--V */
#define NV_PVIDEO_POINT_OUT(i)                   (0x00008948+(i)*4) /* RW-4A */
#define NV_PVIDEO_POINT_OUT__SIZE_1                               2 /*       */
#define NV_PVIDEO_POINT_OUT_X                                  11:0 /* RWXVF */
#define NV_PVIDEO_POINT_OUT_X_47                         0x00000000 /* RWC-V */
#define NV_PVIDEO_POINT_OUT_X_83                         0x00000000 /* RWC-V */
#define NV_PVIDEO_POINT_OUT_X_ORIGIN                     0x00000000 /* RW--V */
#define NV_PVIDEO_POINT_OUT_Y                                 27:16 /* RWXVF */
#define NV_PVIDEO_POINT_OUT_Y_47                         0x00000000 /* RWC-V */
#define NV_PVIDEO_POINT_OUT_Y_83                         0x00000000 /* RWC-V */
#define NV_PVIDEO_POINT_OUT_Y_ORIGIN                     0x00000000 /* RW--V */
#define NV_PVIDEO_SIZE_OUT(i)                    (0x00008950+(i)*4) /* RW-4A */
#define NV_PVIDEO_SIZE_OUT__SIZE_1                                2 /*       */
#define NV_PVIDEO_SIZE_OUT_WIDTH                               11:0 /* RWXVF */
#define NV_PVIDEO_SIZE_OUT_WIDTH_47                      0x00000000 /* RWC-V */
#define NV_PVIDEO_SIZE_OUT_WIDTH_83                      0x00000000 /* RWC-V */
#define NV_PVIDEO_SIZE_OUT_HEIGHT                             27:16 /* RWXVF */
#define NV_PVIDEO_SIZE_OUT_HEIGHT_47                     0x00000000 /* RWC-V */
#define NV_PVIDEO_SIZE_OUT_HEIGHT_83                     0x00000000 /* RWC-V */
#define NV_PVIDEO_FORMAT(i)                      (0x00008958+(i)*4) /* RW-4A */
#define NV_PVIDEO_FORMAT__SIZE_1                                  2 /*       */
#define NV_PVIDEO_FORMAT_PITCH                                 12:6 /* RWXVF */
#define NV_PVIDEO_FORMAT_PITCH_47                        0x00000000 /* RWC-V */
#define NV_PVIDEO_FORMAT_PITCH_83                        0x00000000 /* RWC-V */
#define NV_PVIDEO_FORMAT_COLOR                                16:16 /* RWXVF */
#define NV_PVIDEO_FORMAT_COLOR_47                        0x00000000 /* RWC-V */
#define NV_PVIDEO_FORMAT_COLOR_83                        0x00000000 /* RWC-V */
#define NV_PVIDEO_FORMAT_COLOR_LE_YB8CR8YA8CB8           0x00000000 /* RW--V */
#define NV_PVIDEO_FORMAT_COLOR_LE_CR8YB8CB8YA8           0x00000001 /* RW--V */
#define NV_PVIDEO_FORMAT_DISPLAY                              20:20 /* RWXVF */
#define NV_PVIDEO_FORMAT_DISPLAY_47                      0x00000000 /* RWC-V */
#define NV_PVIDEO_FORMAT_DISPLAY_83                      0x00000000 /* RWC-V */
#define NV_PVIDEO_FORMAT_DISPLAY_ALWAYS                  0x00000000 /* RW--V */
#define NV_PVIDEO_FORMAT_DISPLAY_COLOR_KEY_EQUAL         0x00000001 /* RW--V */
#define NV_PVIDEO_FORMAT_MATRIX                               24:24 /* RWXVF */
#define NV_PVIDEO_FORMAT_MATRIX_ITURBT601                0x00000000 /* RW--V */
#define NV_PVIDEO_FORMAT_MATRIX_ITURBT709                0x00000001 /* RW--V */
#define NV_PVIDEO_COLOR_KEY                              0x00008b00 /* RW-4R */
#define NV_PVIDEO_COLOR_KEY_VALUE                              31:0 /* RWXVF */
#define NV_PVIDEO_COLOR_KEY_VALUE_47                     0x00000000 /* RWC-V */
#define NV_PVIDEO_COLOR_KEY_VALUE_83                     0x00000000 /* RWC-V */
#define NV_PVIDEO_COLOR_KEY_VALUE_DONT_CARE              0x00000000 /* RW--V */
#define NV_PVIDEO_TEST                                   0x00008d00 /* RW-4R */
#define NV_PVIDEO_TEST_MODE                                     0:0 /* RWIVF */
#define NV_PVIDEO_TEST_MODE_DISABLE                      0x00000000 /* RWI-V */
#define NV_PVIDEO_TEST_MODE_ENABLE                       0x00000001 /* RW--V */
#define NV_PVIDEO_TEST_ADDRESS                                 14:8 /* RWXVF */
#define NV_PVIDEO_TST_WRITE(i)                   (0x00008d10+(i)*4) /* -W-4A */
#define NV_PVIDEO_TST_WRITE__SIZE_1                              12 /*       */
#define NV_PVIDEO_TST_WRITE_VALUE                              31:0 /* -WXVF */
#define NV_PVIDEO_TST_READ(i)                    (0x00008d40+(i)*4) /* R--4A */
#define NV_PVIDEO_TST_READ__SIZE_1                               12 /*       */
#define NV_PVIDEO_TST_READ_VALUE                               31:0 /* R-XVF */
/* dev_media.ref */
#define NV_PME                                0x00200FFF:0x00200000 /* RW--D */
#define NV_PME_INTR_0                                    0x00200100 /* RWI4R */
#define NV_PME_INTR_0_TASKA_NOTIFY                              0:0 /* RWIVF */
#define NV_PME_INTR_0_TASKA_NOTIFY_NOT_PENDING           0x00000000 /* R-I-V */
#define NV_PME_INTR_0_TASKA_NOTIFY_PENDING               0x00000001 /* R---V */
#define NV_PME_INTR_0_TASKA_NOTIFY_RESET                 0x00000001 /* -W--V */
#define NV_PME_INTR_0_TASKB_NOTIFY                              4:4 /* RWIVF */
#define NV_PME_INTR_0_TASKB_NOTIFY_NOT_PENDING           0x00000000 /* R-I-V */
#define NV_PME_INTR_0_TASKB_NOTIFY_PENDING               0x00000001 /* R---V */
#define NV_PME_INTR_0_TASKB_NOTIFY_RESET                 0x00000001 /* -W--V */
#define NV_PME_INTR_0_ANC_NOTIFY                                8:8 /* RWIVF */
#define NV_PME_INTR_0_ANC_NOTIFY_NOT_PENDING             0x00000000 /* R-I-V */
#define NV_PME_INTR_0_ANC_NOTIFY_PENDING                 0x00000001 /* R---V */
#define NV_PME_INTR_0_ANC_NOTIFY_RESET                   0x00000001 /* -W--V */
#define NV_PME_INTR_0_FOUT_NOTIFY                             12:12 /* RWIVF */
#define NV_PME_INTR_0_FOUT_NOTIFY_NOT_PENDING            0x00000000 /* R-I-V */
#define NV_PME_INTR_0_FOUT_NOTIFY_PENDING                0x00000001 /* R---V */
#define NV_PME_INTR_0_FOUT_NOTIFY_RESET                  0x00000001 /* -W--V */
#define NV_PME_INTR_0_FIN_NOTIFY                              16:16 /* RWIVF */
#define NV_PME_INTR_0_FIN_NOTIFY_NOT_PENDING             0x00000000 /* R-I-V */
#define NV_PME_INTR_0_FIN_NOTIFY_PENDING                 0x00000001 /* R---V */
#define NV_PME_INTR_0_FIN_NOTIFY_RESET                   0x00000001 /* -W--V */
#define NV_PME_INTR_0_FOUTTIMEOUT_NOTIFY                      20:20 /* RWIVF */
#define NV_PME_INTR_0_FOUTTIMEOUT_NOTIFY_NOT_PENDING     0x00000000 /* R-I-V */
#define NV_PME_INTR_0_FOUTTIMEOUT_NOTIFY_PENDING         0x00000001 /* R---V */
#define NV_PME_INTR_0_FOUTTIMEOUT_NOTIFY_RESET           0x00000001 /* -W--V */
#define NV_PME_INTR_0_FINTIMEOUT_NOTIFY                       24:24 /* RWIVF */
#define NV_PME_INTR_0_FINTIMEOUT_NOTIFY_NOT_PENDING      0x00000000 /* R-I-V */
#define NV_PME_INTR_0_FINTIMEOUT_NOTIFY_PENDING          0x00000001 /* R---V */
#define NV_PME_INTR_0_FINTIMEOUT_NOTIFY_RESET            0x00000001 /* -W--V */
#define NV_PME_INTR_0_REGTIMEOUT_NOTIFY                       28:28 /* RWIVF */
#define NV_PME_INTR_0_REGTIMEOUT_NOTIFY_NOT_PENDING      0x00000000 /* R-I-V */
#define NV_PME_INTR_0_REGTIMEOUT_NOTIFY_PENDING          0x00000001 /* R---V */
#define NV_PME_INTR_0_REGTIMEOUT_NOTIFY_RESET            0x00000001 /* -W--V */
#define NV_PME_INTR_EN_0                                 0x00200140 /* RWI4R */
#define NV_PME_INTR_EN_0_TASKA_NOTIFY                           0:0 /* RWIVF */
#define NV_PME_INTR_EN_0_TASKA_NOTIFY_DISABLED           0x00000000 /* RWI-V */
#define NV_PME_INTR_EN_0_TASKA_NOTIFY_ENABLED            0x00000001 /* RW--V */
#define NV_PME_INTR_EN_0_TASKB_NOTIFY                           4:4 /* RWIVF */
#define NV_PME_INTR_EN_0_TASKB_NOTIFY_DISABLED           0x00000000 /* RWI-V */
#define NV_PME_INTR_EN_0_TASKB_NOTIFY_ENABLED            0x00000001 /* RW--V */
#define NV_PME_INTR_EN_0_ANC_NOTIFY                             8:8 /* RWIVF */
#define NV_PME_INTR_EN_0_ANC_NOTIFY_DISABLED             0x00000000 /* RWI-V */
#define NV_PME_INTR_EN_0_ANC_NOTIFY_ENABLED              0x00000001 /* RW--V */
#define NV_PME_INTR_EN_0_FOUT_NOTIFY                          12:12 /* RWIVF */
#define NV_PME_INTR_EN_0_FOUT_NOTIFY_DISABLED            0x00000000 /* RWI-V */
#define NV_PME_INTR_EN_0_FOUT_NOTIFY_ENABLED             0x00000001 /* RW--V */
#define NV_PME_INTR_EN_0_FIN_NOTIFY                           16:16 /* RWIVF */
#define NV_PME_INTR_EN_0_FIN_NOTIFY_DISABLED             0x00000000 /* RWI-V */
#define NV_PME_INTR_EN_0_FIN_NOTIFY_ENABLED              0x00000001 /* RW--V */
#define NV_PME_INTR_EN_0_FOUTTIMEOUT_NOTIFY                   20:20 /* RWIVF */
#define NV_PME_INTR_EN_0_FOUTTIMEOUT_NOTIFY_DISABLED     0x00000000 /* RWI-V */
#define NV_PME_INTR_EN_0_FOUTTIMEOUT_NOTIFY_ENABLED      0x00000001 /* RW--V */
#define NV_PME_INTR_EN_0_FINTIMEOUT_NOTIFY                    24:24 /* RWIVF */
#define NV_PME_INTR_EN_0_FINTIMEOUT_NOTIFY_DISABLED      0x00000000 /* RWI-V */
#define NV_PME_INTR_EN_0_FINTIMEOUT_NOTIFY_ENABLED       0x00000001 /* RW--V */
#define NV_PME_INTR_EN_0_REGTIMEOUT_NOTIFY                    28:28 /* RWIVF */
#define NV_PME_INTR_EN_0_REGTIMEOUT_NOTIFY_DISABLED      0x00000000 /* RWI-V */
#define NV_PME_INTR_EN_0_REGTIMEOUT_NOTIFY_ENABLED       0x00000001 /* RW--V */
#define NV_PME_HOST_CONFIG                               0x00200200 /* RWI4R */
#define NV_PME_HOST_CONFIG_FIFOMAXTX                            5:0 /* RWIVF */
#define NV_PME_HOST_CONFIG_CLOCK_SELECT                         7:7 /* RWIVF */
#define NV_PME_HOST_CONFIG_CLOCK_SELECT_PCI_DIV_2        0x00000000 /* RW--V */
#define NV_PME_HOST_CONFIG_CLOCK_SELECT_PCI              0x00000001 /* RW--V */
#define NV_PME_HOST_CONFIG_TIMEOUT                             11:8 /* RWIVF */
#define NV_PME_HOST_CONFIG_SLAVE_NOTDETECTED                  16:16 /* RWIVF */
#define NV_PME_HOST_CONFIG_SLAVE_NOTDETECTED_FALSE       0x00000000 /* R---V */
#define NV_PME_HOST_CONFIG_SLAVE_NOTDETECTED_TRUE        0x00000001 /* R---V */
#define NV_PME_HOST_CONFIG_SLAVE_DETECTED                     20:20 /* RWIVF */
#define NV_PME_HOST_CONFIG_SLAVE_DETECTED_FALSE          0x00000000 /* R---V */
#define NV_PME_HOST_CONFIG_SLAVE_DETECTED_TRUE           0x00000001 /* R---V */
#define NV_PME_HOST_CONFIG_FOUT_SYSMEM                        24:24 /* RWIVF */
#define NV_PME_HOST_CONFIG_FOUT_SYSMEM_DISABLED          0x00000000 /* RW--V */
#define NV_PME_HOST_CONFIG_FOUT_SYSMEM_ENABLED           0x00000001 /* RW--V */
#define NV_PME_HOST_CONFIG_FIN_SYSMEM                         25:25 /* RWIVF */
#define NV_PME_HOST_CONFIG_FIN_SYSMEM_DISABLED           0x00000000 /* RW--V */
#define NV_PME_HOST_CONFIG_FIN_SYSMEM_ENABLED            0x00000001 /* RW--V */
#define NV_PME_HOST_CONFIG_FOUT_PAUSE                         26:26 /* RWIVF */
#define NV_PME_HOST_CONFIG_FOUT_PAUSE_DISABLED           0x00000000 /* RW--V */
#define NV_PME_HOST_CONFIG_FOUT_PAUSE_ENABLED            0x00000001 /* RW--V */
#define NV_PME_HOST_CONFIG_FIN_PAUSE                          27:27 /* RWIVF */
#define NV_PME_HOST_CONFIG_FIN_PAUSE_DISABLED            0x00000000 /* RW--V */
#define NV_PME_HOST_CONFIG_FIN_PAUSE_ENABLED             0x00000001 /* RW--V */
#define NV_PME_HOST_CONFIG_FIN_VIP_HOST_4X                    28:28 /* RWIVF */
#define NV_PME_HOST_CONFIG_FIN_VIP_HOST_4X_DISABLED      0x00000000 /* RW--V */
#define NV_PME_HOST_CONFIG_FIN_VIP_HOST_4X_ENABLED       0x00000001 /* RW--V */
#define NV_PME_HOST_CONFIG_FOUT_VIP_HOST_4X                   29:29 /* RWIVF */
#define NV_PME_HOST_CONFIG_FOUT_VIP_HOST_4X_DISABLED     0x00000000 /* RW--V */
#define NV_PME_HOST_CONFIG_FOUT_VIP_HOST_4X_ENABLED      0x00000001 /* RW--V */
#define NV_PME_HOST_CONFIG_FIN                                30:30 /* RWIVF */
#define NV_PME_HOST_CONFIG_FIN_DISABLED                  0x00000000 /* RW--V */
#define NV_PME_HOST_CONFIG_FIN_ENABLED                   0x00000001 /* RW--V */
#define NV_PME_HOST_CONFIG_FOUT                               31:31 /* RWIVF */
#define NV_PME_HOST_CONFIG_FOUT_DISABLED                 0x00000000 /* RW--V */
#define NV_PME_HOST_CONFIG_FOUT_ENABLED                  0x00000001 /* RW--V */
#define NV_PME_FOUT_ADDR                                 0x00200204 /* RWI4R */
#define NV_PME_FOUT_ADDR_FIFO                                   3:0 /* RWIVF */
#define NV_PME_FOUT_ADDR_DEVICE                                 9:8 /* RWIVF */
#define NV_PME_FIN_ADDR                                  0x00200208 /* RWI4R */
#define NV_PME_FIN_ADDR_FIFO                                    3:0 /* RWIVF */
#define NV_PME_FIN_ADDR_DEVICE                                  9:8 /* RWIVF */
#define NV_PME_656_CONFIG                                0x00200400 /* RWI4R */
#define NV_PME_656_CONFIG_TASKA_ENABLE                          0:0 /* RWXUF */
#define NV_PME_656_CONFIG_TASKB_ENABLE                          4:4 /* RWXUF */
#define NV_PME_656_CONFIG_TASKA_ONLY                            6:6 /* RWXUF */
#define NV_PME_656_CONFIG_TASKA_ONLY_DISABLED            0x00000000 /* RW--V */
#define NV_PME_656_CONFIG_TASKA_ONLY_ENABLED             0x00000001 /* RW--V */
#define NV_PME_656_CONFIG_ANC_MODE                              9:8 /* RWXUF */
#define NV_PME_656_CONFIG_ANC_MODE_DISABLED              0x00000000 /* RW--V */
#define NV_PME_656_CONFIG_ANC_MODE_VBI1                  0x00000001 /* RW--V */
#define NV_PME_656_CONFIG_ANC_MODE_VBI2                  0x00000002 /* RW--V */
#define NV_PME_656_CONFIG_ANC_MODE_ANC                   0x00000003 /* RW--V */
#define NV_PME_656_CONFIG_ANC_TASKB                           10:10 /* RWXUF */
#define NV_PME_656_CONFIG_ANC_TASKB_DISABLED             0x00000000 /* RW--V */
#define NV_PME_656_CONFIG_ANC_TASKB_ENABLED              0x00000001 /* RW--V */
#define NV_PME_656_CONFIG_ANC_TASKB_END                       11:11 /* RWXUF */
#define NV_PME_656_CONFIG_ANC_TASKB_END_DISABLED         0x00000000 /* RW--V */
#define NV_PME_656_CONFIG_ANC_TASKB_END_ENABLED          0x00000001 /* RW--V */
#define NV_PME_656_CONFIG_VBI_VERT                            12:12 /* RWXUF */
#define NV_PME_656_CONFIG_VBI_VERT_DISABLED              0x00000000 /* RW--V */
#define NV_PME_656_CONFIG_VBI_VERT_ENABLED               0x00000001 /* RW--V */
#define NV_PME_656_CONFIG_ANC_HNOTV                           16:16 /* RWXUF */
#define NV_PME_656_CONFIG_ANC_HNOTV_DISABLED             0x00000000 /* RW--V */
#define NV_PME_656_CONFIG_ANC_HNOTV_ENABLED              0x00000001 /* RW--V */
#define NV_PME_656_CONFIG_ANC_NOTHV                           17:17 /* RWXUF */
#define NV_PME_656_CONFIG_ANC_NOTHV_DISABLED             0x00000000 /* RW--V */
#define NV_PME_656_CONFIG_ANC_NOTHV_ENABLED              0x00000001 /* RW--V */
#define NV_PME_656_CONFIG_ANC_NOTHNOTV                        18:18 /* RWXUF */
#define NV_PME_656_CONFIG_ANC_NOTHNOTV_DISABLED          0x00000000 /* RW--V */
#define NV_PME_656_CONFIG_ANC_NOTHNOTV_ENABLED           0x00000001 /* RW--V */
#define NV_PME_656_CONFIG_ANC_HV                              19:19 /* RWXUF */
#define NV_PME_656_CONFIG_ANC_HV_DISABLED                0x00000000 /* RW--V */
#define NV_PME_656_CONFIG_ANC_HV_ENABLED                 0x00000001 /* RW--V */
#define NV_PME_656_CONFIG_ANC_IGNORE_PITCH                    20:20 /* RWXUF */
#define NV_PME_656_CONFIG_ANC_IGNORE_PITCH_DISABLED      0x00000000 /* RW--V */
#define NV_PME_656_CONFIG_ANC_IGNORE_PITCH_ENABLED       0x00000001 /* RW--V */
#define NV_PME_656_CONFIG_VIDEO                               31:31 /* RWIVF */
#define NV_PME_656_CONFIG_VIDEO_8_BIT                    0x00000000 /* RW--V */
#define NV_PME_656_CONFIG_VIDEO_16_BIT                   0x00000001 /* RW--V */
#define NV_PME_NULL_DATA                                 0x00200404 /* RWI4R */
#define NV_PME_NULL_DATA_COMPARE                                0:0 /* RWIVF */
#define NV_PME_NULL_DATA_COMPARE_DISABLED                0x00000000 /* RWI-V */
#define NV_PME_NULL_DATA_COMPARE_ENABLED                 0x00000001 /* RW--V */
#define NV_PME_NULL_DATA_LINE_DETECT                            4:4 /* RWIVF */
#define NV_PME_NULL_DATA_LINE_DETECT_DISABLED            0x00000000 /* RWI-V */
#define NV_PME_NULL_DATA_LINE_DETECT_ENABLED             0x00000001 /* RW--V */
#define NV_PME_NULL_DATA_BYTE                                 31:24 /* RWXVF */
#define NV_PME_VIPREG_NBYTES                             0x00200300 /* RW-4R */
#define NV_PME_VIPREG_ADDR                               0x00200304 /* RW-4R */
#define NV_PME_VIPREG_ADDR_LA                                   7:0 /* RW-VF */
#define NV_PME_VIPREG_ADDR_UA                                  15:8 /* RW-VF */
#define NV_PME_VIPREG_DATA                               0x00200308 /* RW-4R */
#define NV_PME_VIPREG_DATA_BITS                                31:0 /* RW_VF */
#define NV_PME_VIPREG_CTRL                               0x0020030c /* RW-4R */
#define NV_PME_VIPREG_CTRL_READ                                 0:0 /* RWIVF */
#define NV_PME_VIPREG_CTRL_READ_NOT_PENDING              0x00000000 /* RWI-V */
#define NV_PME_VIPREG_CTRL_READ_PENDING                  0x00000001 /* R---V */
#define NV_PME_VIPREG_CTRL_READ_START                    0x00000001 /* -WI-V */
#define NV_PME_VIPREG_CTRL_WRITE                                8:8 /* RWIVF */
#define NV_PME_VIPREG_CTRL_WRITE_NOT_PENDING             0x00000000 /* RWI-V */
#define NV_PME_VIPREG_CTRL_WRITE_PENDING                 0x00000001 /* R---V */
#define NV_PME_VIPREG_CTRL_WRITE_START                   0x00000001 /* -WI-V */
#define NV_PME_FOUT_BUFF0_START                          0x00200340 /* RWI4R */
#define NV_PME_FOUT_BUFF0_START_ADDRESS                        31:4 /* RWXUF */
#define NV_PME_FOUT_BUFF1_START                          0x00200344 /* RWI4R */
#define NV_PME_FOUT_BUFF1_START_ADDRESS                        31:4 /* RWXUF */
#define NV_PME_FOUT_BUFF0_LENGTH                         0x00200348 /* RWI4R */
#define NV_PME_FOUT_BUFF0_LENGTH_BITS                          23:4 /* RWXUF */
#define NV_PME_FOUT_BUFF1_LENGTH                         0x0020034c /* RWI4R */
#define NV_PME_FOUT_BUFF1_LENGTH_BITS                          23:4 /* RWXUF */
#define NV_PME_FOUT_ME_STATE                             0x00200350 /* RW-4R */
#define NV_PME_FOUT_ME_STATE_BUFF0_INTR_NOTIFY                  0:0 /* RWIVF */
#define NV_PME_FOUT_ME_STATE_BUFF1_INTR_NOTIFY                  4:4 /* RWXVF */
#define NV_PME_FOUT_ME_STATE_BUFF0_IN_USE                       8:8 /* RWXVF */
#define NV_PME_FOUT_ME_STATE_BUFF1_IN_USE                     12:12 /* RWXVF */
#define NV_PME_FOUT_ME_STATE_CURRENT_BUFFER                   16:16 /* RWXVF */
#define NV_PME_FOUT_ME_STATE_CURRENT_BUFFER_0            0x00000000 /* RW--V */
#define NV_PME_FOUT_ME_STATE_CURRENT_BUFFER_1            0x00000001 /* RW--V */
#define NV_PME_FOUT_SU_STATE                             0x00200354 /* RW-4R */
#define NV_PME_FOUT_SU_STATE_BUFF0_IN_USE                     16:16 /* RWXVF */
#define NV_PME_FOUT_SU_STATE_BUFF1_IN_USE                     20:20 /* RWXVF */
#define NV_PME_FOUT_RM_STATE                             0x00200358 /* RW-4R */
#define NV_PME_FOUT_RM_STATE_BUFF0_INTR_NOTIFY                  0:0 /* RWXVF */
#define NV_PME_FOUT_RM_STATE_BUFF1_INTR_NOTIFY                  4:4 /* RWXVF */
#define NV_PME_FOUT_CURRENT                              0x0020035c /* R-I4R */
#define NV_PME_FOUT_CURRENT_POS                                31:0 /* R-XUF */
#define NV_PME_FIN_BUFF0_START                           0x00200380 /* RWI4R */
#define NV_PME_FIN_BUFF0_START_ADDRESS                         31:4 /* RWXUF */
#define NV_PME_FIN_BUFF1_START                           0x00200384 /* RWI4R */
#define NV_PME_FIN_BUFF1_START_ADDRESS                         31:4 /* RWXUF */
#define NV_PME_FIN_BUFF0_LENGTH                          0x00200388 /* RWI4R */
#define NV_PME_FIN_BUFF0_LENGTH_BITS                           23:4 /* RWXUF */
#define NV_PME_FIN_BUFF1_LENGTH                          0x0020038c /* RWI4R */
#define NV_PME_FIN_BUFF1_LENGTH_BITS                           23:4 /* RWXUF */
#define NV_PME_FIN_ME_STATE                              0x00200390 /* RW-4R */
#define NV_PME_FIN_ME_STATE_BUFF0_INTR_NOTIFY                   0:0 /* RWIVF */
#define NV_PME_FIN_ME_STATE_BUFF1_INTR_NOTIFY                   4:4 /* RWXVF */
#define NV_PME_FIN_ME_STATE_BUFF0_IN_USE                        8:8 /* RWXVF */
#define NV_PME_FIN_ME_STATE_BUFF1_IN_USE                      12:12 /* RWXVF */
#define NV_PME_FIN_ME_STATE_CURRENT_BUFFER                    16:16 /* RWXVF */
#define NV_PME_FIN_ME_STATE_CURRENT_BUFFER_0             0x00000000 /* RW--V */
#define NV_PME_FIN_ME_STATE_CURRENT_BUFFER_1             0x00000001 /* RW--V */
#define NV_PME_FIN_SU_STATE                              0x00200394 /* RW-4R */
#define NV_PME_FIN_SU_STATE_BUFF0_IN_USE                      16:16 /* RWXVF */
#define NV_PME_FIN_SU_STATE_BUFF1_IN_USE                      20:20 /* RWXVF */
#define NV_PME_FIN_RM_STATE                              0x00200398 /* RW-4R */
#define NV_PME_FIN_RM_STATE_BUFF0_INTR_NOTIFY                   0:0 /* RWXVF */
#define NV_PME_FIN_RM_STATE_BUFF1_INTR_NOTIFY                   4:4 /* RWXVF */
#define NV_PME_FIN_CURRENT                               0x0020039c /* R-I4R */
#define NV_PME_FIN_CURRENT_POS                                 31:0 /* R-XUF */
#define NV_PME_VBI_REGION                                0x00200408 /* RWI4R */
#define NV_PME_VBI_REGION_START_LINE                            4:0 /* RWX-F */
#define NV_PME_VBI_REGION_NUM_LINES                           20:16 /* RWX-F */
#define NV_PME_ANC_BUFF0_START                           0x00200410 /* RWI4R */
#define NV_PME_ANC_BUFF0_START_ADDRESS                         26:4 /* RWXUF */
#define NV_PME_ANC_BUFF1_START                           0x00200414 /* RWI4R */
#define NV_PME_ANC_BUFF1_START_ADDRESS                         26:4 /* RWXUF */
#define NV_PME_ANC_BUFF0_PITCH                           0x00200418 /* RWI4R */
#define NV_PME_ANC_BUFF0_PITCH_VALUE                           13:4 /* RWXUF */
#define NV_PME_ANC_BUFF1_PITCH                           0x0020041c /* RWI4R */
#define NV_PME_ANC_BUFF1_PITCH_VALUE                           13:4 /* RWXUF */
#define NV_PME_ANC_BUFF0_LENGTH                          0x00200420 /* RWI4R */
#define NV_PME_ANC_BUFF0_LENGTH_VALUE                          19:4 /* RWXUF */
#define NV_PME_ANC_BUFF1_LENGTH                          0x00200424 /* RWI4R */
#define NV_PME_ANC_BUFF1_LENGTH_VALUE                          19:4 /* RWXUF */
#define NV_PME_ANC_ME_STATE                              0x00200428 /* RW-4R */
#define NV_PME_ANC_ME_STATE_BUFF0_INTR_NOTIFY                   0:0 /* RWXVF */
#define NV_PME_ANC_ME_STATE_BUFF1_INTR_NOTIFY                   4:4 /* RWXVF */
#define NV_PME_ANC_ME_STATE_BUFF0_ERROR_CODE                   10:8 /* RWXVF */
#define NV_PME_ANC_ME_STATE_BUFF1_ERROR_CODE                  14:12 /* RWXVF */
#define NV_PME_ANC_ME_STATE_BUFF0_IN_USE                      16:16 /* RWXVF */
#define NV_PME_ANC_ME_STATE_BUFF1_IN_USE                      20:20 /* RWXVF */
#define NV_PME_ANC_ME_STATE_CURRENT_BUFFER                    24:24 /* RWXVF */
#define NV_PME_ANC_ME_STATE_CURRENT_BUFFER_0             0x00000000 /* RW--V */
#define NV_PME_ANC_ME_STATE_CURRENT_BUFFER_1             0x00000001 /* RW--V */
#define NV_PME_ANC_SU_STATE                              0x0020042c /* RW-4R */
#define NV_PME_ANC_SU_STATE_BUFF0_FIELD                         8:8 /* RWXVF */
#define NV_PME_ANC_SU_STATE_BUFF1_FIELD                       12:12 /* RWXVF */
#define NV_PME_ANC_SU_STATE_BUFF0_IN_USE                      16:16 /* RWXVF */
#define NV_PME_ANC_SU_STATE_BUFF1_IN_USE                      20:20 /* RWXVF */
#define NV_PME_ANC_RM_STATE                              0x00200430 /* RW-4R */
#define NV_PME_ANC_RM_STATE_BUFF0_INTR_NOTIFY                   0:0 /* RWXVF */
#define NV_PME_ANC_RM_STATE_BUFF1_INTR_NOTIFY                   4:4 /* RWXVF */
#define NV_PME_ANC_CURRENT                               0x00200434 /* R--4R */
#define NV_PME_ANC_CURRENT_POS                                 27:0 /* R-XVF */
#define NV_PME_TASKA_BUFF0_START                         0x00200440 /* RWI4R */
#define NV_PME_TASKA_BUFF0_START_ADDRESS                       26:4 /* RWXUF */
#define NV_PME_TASKA_BUFF1_START                         0x00200444 /* RWI4R */
#define NV_PME_TASKA_BUFF1_START_ADDRESS                       26:4 /* RWXUF */
#define NV_PME_TASKA_BUFF0_PITCH                         0x00200448 /* RWI4R */
#define NV_PME_TASKA_BUFF0_PITCH_VALUE                         13:4 /* RWXUF */
#define NV_PME_TASKA_BUFF1_PITCH                         0x0020044c /* RWI4R */
#define NV_PME_TASKA_BUFF1_PITCH_VALUE                         13:4 /* RWXUF */
#define NV_PME_TASKA_BUFF0_LENGTH                        0x00200450 /* RWI4R */
#define NV_PME_TASKA_BUFF0_LENGTH_VALUE                        23:4 /* RWXUF */
#define NV_PME_TASKA_BUFF1_LENGTH                        0x00200454 /* RWI4R */
#define NV_PME_TASKA_BUFF1_LENGTH_VALUE                        23:4 /* RWXUF */
#define NV_PME_TASKA_LINE_LENGTH                         0x002004f0 /* RWI4R */
#define NV_PME_TASKA_LINE_LENGTH_VALUE                         13:2 /* RWXUF */
#define NV_PME_TASKA_ME_STATE                            0x00200458 /* RW-4R */
#define NV_PME_TASKA_ME_STATE_BUFF0_INTR_NOTIFY                 0:0 /* RWXVF */
#define NV_PME_TASKA_ME_STATE_BUFF1_INTR_NOTIFY                 4:4 /* RWXVF */
#define NV_PME_TASKA_ME_STATE_RP_FLAGS_BUFF0                    8:5 /* RW--F */
#define NV_PME_TASKA_ME_STATE_BUFF0_ERROR_CODE                 11:9 /* RWXVF */
#define NV_PME_TASKA_ME_STATE_BUFF1_ERROR_CODE                14:12 /* RWXVF */
#define NV_PME_TASKA_ME_STATE_BUFF0_IN_USE                    16:16 /* RWXVF */
#define NV_PME_TASKA_ME_STATE_BUFF1_IN_USE                    20:20 /* RWXVF */
#define NV_PME_TASKA_ME_STATE_CURRENT_BUFFER                  24:24 /* RWXVF */
#define NV_PME_TASKA_ME_STATE_CURRENT_BUFFER_0           0x00000000 /* RW--V */
#define NV_PME_TASKA_ME_STATE_CURRENT_BUFFER_1           0x00000001 /* RW--V */
#define NV_PME_TASKA_ME_STATE_RP_FLAGS_BUFF1                  28:25 /* RW--F */
#define NV_PME_TASKA_SU_STATE                            0x0020045c /* RW-4R */
#define NV_PME_TASKA_SU_STATE_BUFF0_FIELD                       8:8 /* RWXVF */
#define NV_PME_TASKA_SU_STATE_BUFF1_FIELD                     12:12 /* RWXVF */
#define NV_PME_TASKA_SU_STATE_BUFF0_IN_USE                    16:16 /* RWXVF */
#define NV_PME_TASKA_SU_STATE_BUFF1_IN_USE                    20:20 /* RWXVF */
#define NV_PME_TASKA_RM_STATE                            0x00200460 /* RW-4R */
#define NV_PME_TASKA_RM_STATE_BUFF0_INTR_NOTIFY                 0:0 /* RWXVF */
#define NV_PME_TASKA_RM_STATE_BUFF1_INTR_NOTIFY                 4:4 /* RWXVF */
#define NV_PME_TASKA_Y_CROP                              0x00200464 /* RW-4R */
#define NV_PME_TASKA_Y_CROP_STARTLINE                           8:0 /* RWXVF */
#define NV_PME_TASKA_Y_SCALE                             0x00200468 /* RW-4R */
#define NV_PME_TASKA_Y_SCALE_INCR                              10:0 /* RWXVF */
#define NV_PME_TASKA_X_SCALE                             0x0020046c /* RW-4R */
#define NV_PME_TASKA_X_SCALE_INCR                              27:0 /* RWXVF */
#define NV_PME_TASKA_X_SCALE_FILTER                           31:31 /* RWXVF */
#define NV_PME_TASKA_X_SCALE_FILTER_DISABLE              0x00000000 /* RWI-V */
#define NV_PME_TASKA_X_SCALE_FILTER_ENABLE               0x00000001 /* RW--V */
#define NV_PME_TASKB_BUFF0_START                         0x00200470 /* RWI4R */
#define NV_PME_TASKB_BUFF0_START_ADDRESS                       26:4 /* RWXUF */
#define NV_PME_TASKB_BUFF1_START                         0x00200474 /* RWI4R */
#define NV_PME_TASKB_BUFF1_START_ADDRESS                       26:4 /* RWXUF */
#define NV_PME_TASKB_BUFF0_PITCH                         0x00200478 /* RWI4R */
#define NV_PME_TASKB_BUFF0_PITCH_VALUE                         13:4 /* RWXUF */
#define NV_PME_TASKB_BUFF1_PITCH                         0x0020047c /* RWI4R */
#define NV_PME_TASKB_BUFF1_PITCH_VALUE                         13:4 /* RWXUF */
#define NV_PME_TASKB_BUFF0_LENGTH                        0x00200480 /* RWI4R */
#define NV_PME_TASKB_BUFF0_LENGTH_VALUE                        23:4 /* RWXUF */
#define NV_PME_TASKB_BUFF1_LENGTH                        0x00200484 /* RWI4R */
#define NV_PME_TASKB_BUFF1_LENGTH_VALUE                        23:4 /* RWXUF */
#define NV_PME_TASKB_LINE_LENGTH                         0x002004f4 /* RWI4R */
#define NV_PME_TASKB_LINE_LENGTH_VALUE                         13:2 /* RWXUF */
#define NV_PME_TASKB_ME_STATE                            0x00200488 /* RW-4R */
#define NV_PME_TASKB_ME_STATE_BUFF0_INTR_NOTIFY                 0:0 /* RWXVF */
#define NV_PME_TASKB_ME_STATE_BUFF1_INTR_NOTIFY                 4:4 /* RWXVF */
#define NV_PME_TASKB_ME_STATE_RP_FLAGS_BUFF0                    8:5 /* RW--F */
#define NV_PME_TASKB_ME_STATE_BUFF0_ERROR_CODE                 11:9 /* RWXVF */
#define NV_PME_TASKB_ME_STATE_BUFF1_ERROR_CODE                14:12 /* RWXVF */
#define NV_PME_TASKB_ME_STATE_BUFF0_IN_USE                    16:16 /* RWXVF */
#define NV_PME_TASKB_ME_STATE_BUFF1_IN_USE                    20:20 /* RWXVF */
#define NV_PME_TASKB_ME_STATE_CURRENT_BUFFER                  24:24 /* RWXVF */
#define NV_PME_TASKB_ME_STATE_CURRENT_BUFFER_0           0x00000000 /* RW--V */
#define NV_PME_TASKB_ME_STATE_CURRENT_BUFFER_1           0x00000001 /* RW--V */
#define NV_PME_TASKB_ME_STATE_RP_FLAGS_BUFF1                  28:25 /* R---F */
#define NV_PME_TASKB_SU_STATE                            0x0020048c /* RW-4R */
#define NV_PME_TASKB_SU_STATE_BUFF0_FIELD                       8:8 /* RWXVF */
#define NV_PME_TASKB_SU_STATE_BUFF1_FIELD                     12:12 /* RWXVF */
#define NV_PME_TASKB_SU_STATE_BUFF0_IN_USE                    16:16 /* RWXVF */
#define NV_PME_TASKB_SU_STATE_BUFF1_IN_USE                    20:20 /* RWXVF */
#define NV_PME_TASKB_RM_STATE                            0x00200490 /* RW-4R */
#define NV_PME_TASKB_RM_STATE_BUFF0_INTR_NOTIFY                 0:0 /* RWXVF */
#define NV_PME_TASKB_RM_STATE_BUFF1_INTR_NOTIFY                 4:4 /* RWXVF */
#define NV_PME_TASKB_Y_CROP                              0x00200494 /* RW-4R */
#define NV_PME_TASKB_Y_CROP_STARTLINE                           8:0 /* RWXVF */
#define NV_PME_TASKB_Y_SCALE                             0x00200498 /* RW-4R */
#define NV_PME_TASKB_Y_SCALE_INCR                              10:0 /* RWXVF */
#define NV_PME_TASKB_X_SCALE                             0x0020049c /* RW-4R */
#define NV_PME_TASKB_X_SCALE_INCR                              27:0 /* RWXVF */
#define NV_PME_TASKB_X_SCALE_FILTER                           31:31 /* RWXVF */
#define NV_PME_TASKB_X_SCALE_FILTER_DISABLE              0x00000000 /* RWI-V */
#define NV_PME_TASKB_X_SCALE_FILTER_ENABLE               0x00000001 /* RW--V */
#define NV_PME_TASK_CURRENT                              0x002004a0 /* RW-4R */
#define NV_PME_TASK_CURRENT_POS                                27:0 /* RWXVF */
#define NV_PME_TASK_CURRENT_TASK                              31:31 /* RWXVF */
#define NV_PME_HORIZ_WGHTS_A(i)                  (0x002004b0+(i)*4) /* -W-4A */
#define NV_PME_HORIZ_WGHTS_A__SIZE_1                              8 /*       */
#define NV_PME_HORIZ_WGHTS_A_0                                  7:0 /* -WXVF */
#define NV_PME_HORIZ_WGHTS_A_1                                 15:8 /* -WXVF */
#define NV_PME_HORIZ_WGHTS_A_2                                24:16 /* -WXVF */
#define NV_PME_HORIZ_WGHTS_B(i)                  (0x002004d0+(i)*4) /* -W-4A */
#define NV_PME_HORIZ_WGHTS_B__SIZE_1                              8 /*       */
#define NV_PME_HORIZ_WGHTS_B_3                                  7:0 /* -WXVF */
#define NV_PME_HORIZ_WGHTS_B_4                                 15:8 /* -WXVF */
/* dev_ext_devices.ref */
#define NV_PDAC                               0x00680FFF:0x00680000 /* RW--D */
#define NV_PDAC_DATA(i)                          (0x00680000+(i)*4) /* RW-4A */
#define NV_PDAC_DATA__SIZE_1                                     16 /*       */
#define NV_PDAC_DATA_VALUE                                      7:0 /* RW-VF */
/* dev_ext_devices.ref */
/* dev_ext_devices.ref */
/* dev_fb.ref */
#define NV_PFB_DEBUG_0                                   0x00100080 /* RW-4R */
#define NV_PFB_DEBUG_0_CLM1                                     0:0 /* RWIVF */
#define NV_PFB_DEBUG_0_CLM1_DISABLED                     0x00000000 /* RWI-V */
#define NV_PFB_DEBUG_0_CLM1_ENABLED                      0x00000001 /* RW--V */
#define NV_PFB_CFG                                       0x00100200 /* RW-4R */
#define NV_PFB_CFG_TYPE                                         0:0 /* RWIVF */
#define NV_PFB_CFG_TYPE_SDR                              0x00000000 /* RWI-V */
#define NV_PFB_CFG_TYPE_DDR                              0x00000001 /* RW--V */
#define NV_PFB_CFG_BUS                                          4:4 /* RWIVF */
#define NV_PFB_CFG_BUS_64                                0x00000000 /* RWI-V */
#define NV_PFB_CFG_BUS_128                               0x00000001 /* RW--V */
#define NV_PFB_CFG_RAM                                          8:8 /* RWIVF */
#define NV_PFB_CFG_RAM_8                                 0x00000000 /* RWI-V */
#define NV_PFB_CFG_RAM_32                                0x00000001 /* RW--V */
#define NV_PFB_CFG_EXTBANK                                    12:12 /* RWIVF */
#define NV_PFB_CFG_EXTBANK_0                             0x00000000 /* RWI-V */
#define NV_PFB_CFG_EXTBANK_1                             0x00000001 /* RW--V */
#define NV_PFB_CFG_BANK                                       16:16 /* RWI-F */
#define NV_PFB_CFG_BANK_1                                0x00000000 /* RWI-V */
#define NV_PFB_CFG_BANK_2                                0x00000001 /* RW--V */
#define NV_PFB_CFG_ROW                                        23:20 /* RWI-F */
#define NV_PFB_CFG_ROW_9                                 0x00000009 /* RWI-V */
#define NV_PFB_CFG_ROW_10                                0x0000000A /* RW--V */
#define NV_PFB_CFG_ROW_11                                0x0000000B /* RW--V */
#define NV_PFB_CFG_ROW_12                                0x0000000C /* RW--V */
#define NV_PFB_CFG_COL                                        24:24 /* RWIVF */
#define NV_PFB_CFG_COL_8                                 0x00000000 /* RWI-V */
#define NV_PFB_CFG_COL_9                                 0x00000001 /* RW--V */
#define NV_PFB_CFG_COLU                                       27:25 /* C-IVF */
#define NV_PFB_CFG_COLU_4                                0x00000004 /* C-I-V */
#define NV_PFB_CFG_DQS                                        28:28 /* RWIVF */
#define NV_PFB_CFG_DQS_NORMAL                            0x00000000 /* RWI-V */
#define NV_PFB_CFG_DQS_EARLY                             0x00000001 /* RW--V */
#define NV_PFB_CSTATUS                                   0x0010020C /* R--4R */
#define NV_PFB_CSTATUS_RAMAMOUNT                              27:20 /* R--VF */
#define NV_PFB_CSTATUS_RAMAMOUNT_2M                      0x00000002 /* R---V */
#define NV_PFB_CSTATUS_RAMAMOUNT_4M                      0x00000004 /* R---V */
#define NV_PFB_CSTATUS_RAMAMOUNT_8M                      0x00000008 /* R---V */
#define NV_PFB_CSTATUS_RAMAMOUNT_16M                     0x00000010 /* R---V */
#define NV_PFB_CSTATUS_RAMAMOUNT_32M                     0x00000020 /* R---V */
#define NV_PFB_CSTATUS_RAMAMOUNT_64M                     0x00000040 /* R---V */
#define NV_PFB_CSTATUS_RAMAMOUNT_128M                    0x00000080 /* R---V */
#define NV_PFB_REFCTRL                                   0x00100210 /* RW-4R */
#define NV_PFB_REFCTRL_PUT                                      4:0 /* RWI-F */
#define NV_PFB_REFCTRL_PUT_0                             0x00000000 /* RWI-V */
#define NV_PFB_REFCTRL_GET                                     12:8 /* RWI-F */
#define NV_PFB_REFCTRL_GET_0                             0x00000000 /* RWI-V */
#define NV_PFB_REFCTRL_VALID                                  31:31 /* RWI-F */
#define NV_PFB_REFCTRL_VALID_0                           0x00000000 /* RWI-V */
#define NV_PFB_REFCTRL_VALID_1                           0x00000001 /* RW--V */
#define NV_PFB_NVM                                       0x00100214 /* RW-4R */
#define NV_PFB_NVM_MODE                                         0:0 /* RWIVF */
#define NV_PFB_NVM_MODE_DISABLE                          0x00000000 /* RWI-V */
#define NV_PFB_NVM_MODE_ENABLE                           0x00000001 /* RW--V */
#define NV_PFB_NVM_LIMIT                                        7:4 /* RW-VF */
#define NV_PFB_NVM_LIMIT_64K                             0x00000000 /* RW--V */
#define NV_PFB_NVM_LIMIT_128K                            0x00000001 /* RW--V */
#define NV_PFB_NVM_LIMIT_192K                            0x00000002 /* RW--V */
#define NV_PFB_NVM_LIMIT_256K                            0x00000003 /* RW--V */
#define NV_PFB_NVM_LIMIT_320K                            0x00000004 /* RW--V */
#define NV_PFB_NVM_LIMIT_384K                            0x00000005 /* RW--V */
#define NV_PFB_NVM_LIMIT_448K                            0x00000006 /* RW--V */
#define NV_PFB_NVM_LIMIT_512K                            0x00000007 /* RW--V */
#define NV_PFB_NVM_LIMIT_576K                            0x00000008 /* RW--V */
#define NV_PFB_NVM_LIMIT_640K                            0x00000009 /* RW--V */
#define NV_PFB_NVM_LIMIT_704K                            0x0000000A /* RW--V */
#define NV_PFB_NVM_LIMIT_768K                            0x0000000B /* RW--V */
#define NV_PFB_NVM_LIMIT_832K                            0x0000000C /* RW--V */
#define NV_PFB_NVM_LIMIT_896K                            0x0000000D /* RW--V */
#define NV_PFB_NVM_LIMIT_960K                            0x0000000E /* RW--V */
#define NV_PFB_NVM_LIMIT_1024K                           0x0000000F /* RW--V */
#define NV_PFB_PIN                                       0x00100218 /* RW-4R */
#define NV_PFB_PIN_CKE                                          0:0 /* RWI-F */
#define NV_PFB_PIN_CKE_POWERDOWN                         0x00000000 /* RWI-V */
#define NV_PFB_PIN_CKE_NORMAL                            0x00000001 /* RW--V */
#define NV_PFB_PIN_DQM                                          4:4 /* RWI-F */
#define NV_PFB_PIN_DQM_NORMAL                            0x00000000 /* RW--V */
#define NV_PFB_PIN_DQM_INACTIVE                          0x00000001 /* RWI-V */
#define NV_PFB_PAD                                       0x0010021C /* RW-4R */
#define NV_PFB_PAD_CKE                                          0:0 /* RWI-F */
#define NV_PFB_PAD_CKE_TRISTATE                          0x00000000 /* RWI-V */
#define NV_PFB_PAD_CKE_NORMAL                            0x00000001 /* RW--V */
#define NV_PFB_TIMING0                                   0x00100220 /* RW-4R */
#define NV_PFB_TIMING0_RC                                       4:0 /* RWIVF */
#define NV_PFB_TIMING0_RC_31                             0x0000001F /* RWI-V */
#define NV_PFB_TIMING0_RFC                                     12:8 /* RWIVF */
#define NV_PFB_TIMING0_RFC_31                            0x0000001F /* RWI-V */
#define NV_PFB_TIMING0_RAS                                    20:16 /* RWIVF */
#define NV_PFB_TIMING0_RAS_31                            0x0000001F /* RWI-V */
#define NV_PFB_TIMING0_RCD                                    27:24 /* RWIVF */
#define NV_PFB_TIMING0_RCD_15                            0x0000000F /* RWI-V */
#define NV_PFB_TIMING0_RP                                     31:28 /* RWIVF */
#define NV_PFB_TIMING0_RP_15                             0x0000000F /* RWI-V */
#define NV_PFB_TIMING1                                   0x00100224 /* RW-4R */
#define NV_PFB_TIMING1_R2W                                      6:4 /* RWIVF */
#define NV_PFB_TIMING1_R2W_7                             0x00000007 /* RWI-V */
#define NV_PFB_TIMING1_R2P                                     10:8 /* RWIVF */
#define NV_PFB_TIMING1_R2P_7                             0x00000007 /* RWI-V */
#define NV_PFB_TIMING1_REXT                                   13:12 /* RWIVF */
#define NV_PFB_TIMING1_REXT_1                            0x00000001 /* RW--V */
#define NV_PFB_TIMING1_REXT_2                            0x00000002 /* RWI-V */
#define NV_PFB_TIMING1_W2R                                    18:16 /* RWIVF */
#define NV_PFB_TIMING1_W2R_7                             0x00000007 /* RWI-V */
#define NV_PFB_TIMING1_W2P                                    22:20 /* RWIVF */
#define NV_PFB_TIMING1_W2P_7                             0x00000007 /* RWI-V */
#define NV_PFB_TIMING1_RRD                                    26:24 /* RWIVF */
#define NV_PFB_TIMING1_RRD_7                             0x00000007 /* RWI-V */
#define NV_PFB_TIMING2                                   0x00100228 /* RW-4R */
#define NV_PFB_TIMING2_REFRESH                                 15:5 /* RW-VF */
#define NV_PFB_TIMING2_REFRESH_0                         0x00000000 /* RWI-V */
#define NV_PFB_TIMING2_REFRESH_LO                               4:0 /* C-IVF */
#define NV_PFB_TIMING2_REFRESH_LO_1F                     0x0000001F /* C-I-V */
#define NV_PFB_TILE(i)                          (0x00100240+(i)*16) /* RW-4A */
#define NV_PFB_TILE__SIZE_1                                       8 /*       */
#define NV_PFB_TILE_ADR                                       26:14 /* RW-UF */
#define NV_PFB_TILE_REGION                                    31:31 /* RWIVF */
#define NV_PFB_TILE_REGION_INVALID                       0x00000000 /* RWI-V */
#define NV_PFB_TILE_REGION_VALID                         0x00000001 /* RW--V */
#define NV_PFB_TLIMIT(i)                        (0x00100244+(i)*16) /* RW-4A */
#define NV_PFB_TLIMIT__SIZE_1                                     8 /*       */
#define NV_PFB_TLIMIT_ADR                                     26:14 /* RW-UF */
#define NV_PFB_TLIMIT_ADR_LO                                   13:0 /* C-IVF */
#define NV_PFB_TLIMIT_ADR_LO_3FFF                       0x000003FFF /* C-I-V */
#define NV_PFB_TSIZE(i)                         (0x00100248+(i)*16) /* RW-4A */
#define NV_PFB_TSIZE__SIZE_1                                      8 /*       */
#define NV_PFB_TSIZE_PITCH                                     15:8 /* RW-UF */
#define NV_PFB_TSIZE_PITCH_0200                          0x00000002 /* RW--V */
#define NV_PFB_TSIZE_PITCH_0400                          0x00000004 /* RW--V */
#define NV_PFB_TSIZE_PITCH_0600                          0x00000006 /* RW--V */
#define NV_PFB_TSIZE_PITCH_0800                          0x00000008 /* RW--V */
#define NV_PFB_TSIZE_PITCH_0A00                          0x0000000A /* RW--V */
#define NV_PFB_TSIZE_PITCH_0C00                          0x0000000C /* RW--V */
#define NV_PFB_TSIZE_PITCH_0E00                          0x0000000E /* RW--V */
#define NV_PFB_TSIZE_PITCH_1000                          0x00000010 /* RW--V */
#define NV_PFB_TSIZE_PITCH_1400                          0x00000014 /* RW--V */
#define NV_PFB_TSIZE_PITCH_1800                          0x00000018 /* RW--V */
#define NV_PFB_TSIZE_PITCH_1C00                          0x0000001C /* RW--V */
#define NV_PFB_TSIZE_PITCH_2000                          0x00000020 /* RW--V */
#define NV_PFB_TSIZE_PITCH_2800                          0x00000028 /* RW--V */
#define NV_PFB_TSIZE_PITCH_3000                          0x00000030 /* RW--V */
#define NV_PFB_TSIZE_PITCH_3800                          0x00000038 /* RW--V */
#define NV_PFB_TSIZE_PITCH_4000                          0x00000040 /* RW--V */
#define NV_PFB_TSIZE_PITCH_5000                          0x00000050 /* RW--V */
#define NV_PFB_TSIZE_PITCH_6000                          0x00000060 /* RW--V */
#define NV_PFB_TSIZE_PITCH_7000                          0x00000070 /* RW--V */
#define NV_PFB_TSIZE_PITCH_8000                          0x00000080 /* RW--V */
#define NV_PFB_TSIZE_PITCH_A000                          0x000000A0 /* RW--V */
#define NV_PFB_TSIZE_PITCH_C000                          0x000000C0 /* RW--V */
#define NV_PFB_TSIZE_PITCH_E000                          0x000000E0 /* RW--V */
#define NV_PFB_TSTATUS(i)                       (0x0010024C+(i)*16) /* R--4A */
#define NV_PFB_TSTATUS__SIZE_1                                    8 /*       */
#define NV_PFB_TSTATUS_PRIME                                    1:0 /* R--VF */
#define NV_PFB_TSTATUS_PRIME_1                           0x00000000 /* R---V */
#define NV_PFB_TSTATUS_PRIME_3                           0x00000001 /* R---V */
#define NV_PFB_TSTATUS_PRIME_5                           0x00000002 /* R---V */
#define NV_PFB_TSTATUS_PRIME_7                           0x00000003 /* R---V */
#define NV_PFB_TSTATUS_FACTOR                                   6:4 /* R--VF */
#define NV_PFB_TSTATUS_FACTOR_1                          0x00000000 /* R---V */
#define NV_PFB_TSTATUS_FACTOR_2                          0x00000001 /* R---V */
#define NV_PFB_TSTATUS_FACTOR_4                          0x00000002 /* R---V */
#define NV_PFB_TSTATUS_FACTOR_8                          0x00000003 /* R---V */
#define NV_PFB_TSTATUS_FACTOR_16                         0x00000004 /* R---V */
#define NV_PFB_TSTATUS_FACTOR_32                         0x00000005 /* R---V */
#define NV_PFB_TSTATUS_FACTOR_64                         0x00000006 /* R---V */
#define NV_PFB_TSTATUS_FACTOR_128                        0x00000007 /* R---V */
#define NV_PFB_TSTATUS_REGION                                 31:31 /* R-I-F */
#define NV_PFB_TSTATUS_REGION_INVALID                    0x00000000 /* R-I-V */
#define NV_PFB_TSTATUS_REGION_VALID                      0x00000001 /* R---V */
#define NV_PFB_MRS                                       0x001002C0 /* RW-4R */
#define NV_PFB_MRS_CL                                           4:4 /* RWIVF */
#define NV_PFB_MRS_CL_2                                  0x00000000 /* RW--V */
#define NV_PFB_MRS_CL_3                                  0x00000001 /* RWI-V */
#define NV_PFB_MRS_CLU                                          6:5 /* C-IVF */
#define NV_PFB_MRS_CLU_1                                 0x00000001 /* C-I-V */
#define NV_PFB_MRS_DLL                                          8:8 /* RWI-F */
#define NV_PFB_MRS_DLL_NORMAL                            0x00000000 /* RWI-V */
#define NV_PFB_MRS_DLL_RESET                             0x00000001 /* RW--V */
#define NV_PFB_EMRS                                      0x001002C4 /* RW-4R */
#define NV_PFB_EMRS_DLL                                         0:0 /* RWI-F */
#define NV_PFB_EMRS_DLL_ENABLE                           0x00000000 /* RW--V */
#define NV_PFB_EMRS_DLL_DISABLE                          0x00000001 /* RWI-V */
#define NV_PFB_REF                                       0x001002D0 /* -W-4R */
#define NV_PFB_REF_CMD                                          0:0 /* -W--F */
#define NV_PFB_REF_CMD_REFRESH                           0x00000001 /* -W--V */
#define NV_PFB_PRE                                       0x001002D4 /* -W-4R */
#define NV_PFB_PRE_CMD                                          0:0 /* -W--F */
#define NV_PFB_PRE_CMD_PRECHARGE                         0x00000001 /* -W--V */
#define NV_PFB_SELF_REF                                  0x001002d8
#define NV_PFB_SELF_REF_CMD                                     0:0
#define NV_PFB_SELF_REF_CMD_ENABLED                      0x00000001
#define NV_PFB_STRAP                                     0x00101000 /* R--4R */
#define NV_PFB_STRAP_PCI_AD                                     0:0 /* R-XVF */
#define NV_PFB_STRAP_PCI_AD_REVERSED                     0x00000000 /* R---V */
#define NV_PFB_STRAP_PCI_AD_NORMAL                       0x00000001 /* R---V */
#define NV_PFB_STRAP_SUB_VENDOR                                 1:1 /* R-XVF */
#define NV_PFB_STRAP_SUB_VENDOR_NO_BIOS                  0x00000000 /* R---V */
#define NV_PFB_STRAP_SUB_VENDOR_BIOS                     0x00000001 /* R---V */
#define NV_PFB_STRAP_RAMCFG                                     5:2 /* R-XVF */
#define NV_PFB_STRAP_CRYSTAL                                    6:6 /* R-XVF */
#define NV_PFB_STRAP_CRYSTAL_13500K                      0x00000000 /* R---V */
#define NV_PFB_STRAP_CRYSTAL_14318180                    0x00000001 /* R---V */
#define NV_PFB_STRAP_TVMODE                                     8:7 /* R-XVF */
#define NV_PFB_STRAP_TVMODE_SECAM                        0x00000000 /* R---V */
#define NV_PFB_STRAP_TVMODE_NTSC                         0x00000001 /* R---V */
#define NV_PFB_STRAP_TVMODE_PAL                          0x00000002 /* R---V */
#define NV_PFB_STRAP_TVMODE_DISABLED                     0x00000003 /* R---V */
#define NV_PFB_STRAP_AGP_4X                                     9:9 /* R-XVF */
#define NV_PFB_STRAP_AGP_4X_ENABLED                      0x00000000 /* R---V */
#define NV_PFB_STRAP_AGP_4X_DISABLED                     0x00000001 /* R---V */
#define NV_PFB_STRAP_AGP_SBA                                  10:10 /* R-XVF */
#define NV_PFB_STRAP_AGP_SBA_ENABLED                     0x00000000 /* R---V */
#define NV_PFB_STRAP_AGP_SBA_DISABLED                    0x00000001 /* R---V */
#define NV_PFB_STRAP_AGP_FASTWR                               11:11 /* R-XVF */
#define NV_PFB_STRAP_AGP_FASTWR_ENABLED                  0x00000000 /* R---V */
#define NV_PFB_STRAP_AGP_FASTWR_DISABLED                 0x00000001 /* R---V */
#define NV_PFB_STRAP_PCI_DEVID                                13:12 /* R-XVF */
#define NV_PFB_STRAP_PCI_DEVID_20                        0x00000000 /* R---V */
#define NV_PFB_STRAP_PCI_DEVID_21                        0x00000001 /* R---V */
#define NV_PFB_STRAP_PCI_DEVID_22                        0x00000002 /* R---V */
#define NV_PFB_STRAP_PCI_DEVID_23                        0x00000003 /* R---V */
#define NV_PFB_STRAP_FB32MB                                   14:14 /* R-XVF */
#define NV_PFB_STRAP_FB32MB_DISABLED                     0x00000000 /* R---V */
#define NV_PFB_STRAP_FB32MB_ENABLED                      0x00000001 /* R---V */
#define NV_PFB_STRAP_FP_IFACE                                 15:15 /* R-XVF */
#define NV_PFB_STRAP_FP_IFACE_24BIT                      0x00000000 /* R---V */
#define NV_PFB_STRAP_FP_IFACE_12BIT                      0x00000001 /* R---V */
#define NV_PFB_STRAP_OVERWRITE                                31:31 /* R-IVF */
#define NV_PFB_STRAP_OVERWRITE_DISABLED                  0x00000000 /* R-I-V */
#define NV_PFB_STRAP_OVERWRITE_ENABLED                   0x00000001 /* R---V */
#define NV_PFB_NEW_STRAP                                 0x00101000 /* RW-4R */
#define NV_PFB_NEW_STRAP_VALUE                                 15:0 /* RW-VF */
#define NV_PFB_NEW_STRAP_OVERWRITE                            31:31 /* RWIVF */
#define NV_PFB_NEW_STRAP_OVERWRITE_DISABLED              0x00000000 /* RWI-V */
#define NV_PFB_NEW_STRAP_OVERWRITE_ENABLED               0x00000001 /* RW--V */
/* dev_vga.ref */
#define NV_PCRTC_CURSOR                                  0x0060080c /* RWI4R */
#define NV_PCRTC_CURSOR_ADDRESS                                26:0 /* RW--F */
#define NV_PCRTC_CURSOR_CONFIG                           0x00600810 /* RWI4R */
#define NV_PCRTC_CURSOR_CONFIG_ENABLE                           0:0 /* RW--F */
#define NV_PCRTC_CURSOR_CONFIG_ENABLE_ENABLE             0x00000001 /* RW--V */
#define NV_PCRTC_CURSOR_CONFIG_ENABLE_DISABLE            0x00000000 /* RWI-V */
#define NV_PCRTC_CURSOR_CONFIG_SCAN_DOUBLE                      4:4 /* RW--F */
#define NV_PCRTC_CURSOR_CONFIG_SCAN_DOUBLE_ENABLE        0x00000001 /* RW--V */
#define NV_PCRTC_CURSOR_CONFIG_SCAN_DOUBLE_DISABLE       0x00000000 /* RWI-V */
#define NV_PCRTC_CURSOR_CONFIG_ADDRESS_SPACE                    8:8 /* RW--F */
#define NV_PCRTC_CURSOR_CONFIG_ADDRESS_SPACE_PNVM        0x00000001 /* RW--V */
#define NV_PCRTC_CURSOR_CONFIG_ADDRESS_SPACE_PINST       0x00000000 /* RWI-V */
#define NV_PCRTC_CURSOR_CONFIG_CUR_BPP                        12:12 /* RW--F */
#define NV_PCRTC_CURSOR_CONFIG_CUR_BPP_16                0x00000000 /* RWI-V */
#define NV_PCRTC_CURSOR_CONFIG_CUR_BPP_32                0x00000001 /* RW--V */
#define NV_PCRTC_CURSOR_CONFIG_CUR_PIXELS                     16:16 /* RW--F */
#define NV_PCRTC_CURSOR_CONFIG_CUR_PIXELS_32             0x00000000 /* RWI-V */
#define NV_PCRTC_CURSOR_CONFIG_CUR_PIXELS_64             0x00000001 /* RW--V */
#define NV_PCRTC_CURSOR_CONFIG_CUR_LINES                      27:20 /* RW--F */
#define NV_PCRTC_CURSOR_CONFIG_CUR_LINES_32              0x00000020 /* RWI-V */
#define NV_PCRTC_CURSOR_CONFIG_CUR_LINES_64              0x00000040 /* RW--V */
#define NV_PCRTC_CURSOR_CONFIG_CUR_BLEND                      28:28 /* RW--F */
#define NV_PCRTC_CURSOR_CONFIG_CUR_BLEND_ROP             0x00000000 /* RWI-V */
#define NV_PCRTC_CURSOR_CONFIG_CUR_BLEND_ALPHA           0x00000001 /* RW--V */
#define NV_PCRTC_VIP_RASTER                              0x00600814 /* R-I4R */
#define NV_PCRTC_VIP_RASTER_POSITION                           10:0 /* R---F */
#define NV_PCRTC_GPIO                                    0x00600818 /* RWI4R */
#define NV_PCRTC_GPIO_0_OUTPUT                                  0:0 /* RWI-F */
#define NV_PCRTC_GPIO_0_OUTPUT_0                         0x00000000 /* RWI-V */
#define NV_PCRTC_GPIO_0_ENABLE                                  4:4 /* R---F */
#define NV_PCRTC_GPIO_0_ENABLE_DISABLE                   0x00000001 /* RWI-V */
#define NV_PCRTC_GPIO_0_ENABLE_ENABLE                    0x00000000 /* RW--V */
#define NV_PCRTC_GPIO_0_INPUT                                   8:8 /* R---F */
#define NV_PCRTC_GPIO_1_OUTPUT                                16:16 /* RWI-F */
#define NV_PCRTC_GPIO_1_OUTPUT_0                         0x00000000 /* RWI-V */
#define NV_PCRTC_GPIO_1_ENABLE                                20:20 /* R---F */
#define NV_PCRTC_GPIO_1_ENABLE_DISABLE                   0x00000001 /* RWI-V */
#define NV_PCRTC_GPIO_1_ENABLE_ENABLE                    0x00000000 /* RW--V */
#define NV_PCRTC_GPIO_1_INPUT                                 24:24 /* R---F */
#define NV_PCRTC_FIFO_CNTRL                              0x00600820 /* RWI4R */
#define NV_PCRTC_FIFO_CNTRL_ADDRESS                             5:0 /* RW--F */
#define NV_PCRTC_FIFO_CNTRL_RAM                                 9:8 /* RW--F */
#define NV_PCRTC_FIFO_CNTR_TESTMODE                           16:16 /* RW--F */
#define NV_PCRTC_FIFO_CNTR_TESTMODE_ENABLE                        1 /* RW--V */
#define NV_PCRTC_FIFO_CNTR_TESTMODE_DISABLE                       0 /* RW--V */
#define NV_PCRTC_FIFO_DATA                               0x00600824 /* RWI4R */
#define NV_PCRTC_FIFO_DATA_VAL                                 31:0 /* RW--F */
/* dev_pm.ref */
#define NV_PPM                                0x0000AFFF:0x0000A000 /* RW--D */
#define NV_PPM_NV_TRIG0_SEL                              0x0000A400 /* RW-4R */
#define NV_PPM_NV_TRIG0_SEL_SEL0                                7:0 /* RWXUF */
#define NV_PPM_NV_TRIG0_SEL_SEL1                               15:8 /* RWXUF */
#define NV_PPM_NV_TRIG0_SEL_SEL2                              23:16 /* RWXUF */
#define NV_PPM_NV_TRIG0_SEL_SEL3                              31:24 /* RWXUF */
#define NV_PPM_NV_TRIG0_OP                               0x0000A404 /* RW-4R */
#define NV_PPM_NV_TRIG0_OP_FUNC                                15:0 /* RWXUF */
#define NV_PPM_NV_TRIG0_OP_DSEL0                              16:16 /* RWXUF */
#define NV_PPM_NV_TRIG0_OP_DSEL1                              17:17 /* RWXUF */
#define NV_PPM_NV_TRIG1_SEL                              0x0000A408 /* RW-4R */
#define NV_PPM_NV_TRIG1_SEL_SEL0                                7:0 /* RWXUF */
#define NV_PPM_NV_TRIG1_SEL_SEL1                               15:8 /* RWXUF */
#define NV_PPM_NV_TRIG1_SEL_SEL2                              23:16 /* RWXUF */
#define NV_PPM_NV_TRIG1_SEL_SEL3                              31:24 /* RWXUF */
#define NV_PPM_NV_TRIG1_OP                               0x0000A40C /* RW-4R */
#define NV_PPM_NV_TRIG1_OP_FUNC                                15:0 /* RWXUF */
#define NV_PPM_NV_TRIG1_OP_DSEL0                              16:16 /* RWXUF */
#define NV_PPM_NV_TRIG1_OP_DSEL1                              17:17 /* RWXUF */
#define NV_PPM_NV_EVENT_SEL                              0x0000A410 /* RW-4R */
#define NV_PPM_NV_EVENT_SEL_SEL0                                7:0 /* RWXUF */
#define NV_PPM_NV_EVENT_SEL_SEL1                               15:8 /* RWXUF */
#define NV_PPM_NV_EVENT_SEL_SEL2                              23:16 /* RWXUF */
#define NV_PPM_NV_EVENT_SEL_SEL3                              31:24 /* RWXUF */
#define NV_PPM_NV_EVENT_OP                               0x0000A414 /* RW-4R */
#define NV_PPM_NV_EVENT_OP_FUNC                                15:0 /* RWXUF */
#define NV_PPM_NV_EVENT_OP_DSEL0                              16:16 /* RWXUF */
#define NV_PPM_NV_EVENT_OP_DSEL1                              17:17 /* RWXUF */
#define NV_PPM_NV_SAMPLE_SEL                             0x0000A418 /* RW-4R */
#define NV_PPM_NV_SAMPLE_SEL_SEL0                               7:0 /* RWXUF */
#define NV_PPM_NV_SAMPLE_SEL_SEL1                              15:8 /* RWXUF */
#define NV_PPM_NV_SAMPLE_SEL_SEL2                             23:16 /* RWXUF */
#define NV_PPM_NV_SAMPLE_SEL_SEL3                             31:24 /* RWXUF */
#define NV_PPM_NV_SAMPLE_OP                              0x0000A41C /* RW-4R */
#define NV_PPM_NV_SAMPLE_OP_FUNC                               15:0 /* RWXUF */
#define NV_PPM_NV_SAMPLE_OP_DSEL0                             16:16 /* RWXUF */
#define NV_PPM_NV_SAMPLE_OP_DSEL1                             17:17 /* RWXUF */
#define NV_PPM_NV_SETFLAG_SEL                            0x0000A420 /* RW-4R */
#define NV_PPM_NV_SETFLAG_SEL_SEL0                              7:0 /* RWXUF */
#define NV_PPM_NV_SETFLAG_SEL_SEL1                             15:8 /* RWXUF */
#define NV_PPM_NV_SETFLAG_SEL_SEL2                            23:16 /* RWXUF */
#define NV_PPM_NV_SETFLAG_SEL_SEL3                            31:24 /* RWXUF */
#define NV_PPM_NV_SETFLAG_OP                             0x0000A424 /* RW-4R */
#define NV_PPM_NV_SETFLAG_OP_FUNC                              15:0 /* RWXUF */
#define NV_PPM_NV_SETFLAG_OP_DSEL0                            16:16 /* RWXUF */
#define NV_PPM_NV_SETFLAG_OP_DSEL1                            17:17 /* RWXUF */
#define NV_PPM_NV_CLRFLAG_SEL                            0x0000A428 /* RW-4R */
#define NV_PPM_NV_CLRFLAG_SEL_SEL0                              7:0 /* RWXUF */
#define NV_PPM_NV_CLRFLAG_SEL_SEL1                             15:8 /* RWXUF */
#define NV_PPM_NV_CLRFLAG_SEL_SEL2                            23:16 /* RWXUF */
#define NV_PPM_NV_CLRFLAG_SEL_SEL3                            31:24 /* RWXUF */
#define NV_PPM_NV_CLRFLAG_OP                             0x0000A42C /* RW-4R */
#define NV_PPM_NV_CLRFLAG_OP_FUNC                              15:0 /* RWXUF */
#define NV_PPM_NV_CLRFLAG_OP_DSEL0                            16:16 /* RWXUF */
#define NV_PPM_NV_CLRFLAG_OP_DSEL1                            17:17 /* RWXUF */
#define NV_PPM_NV_ELAPSED_0                              0x0000A600 /* RR-4R */
#define NV_PPM_NV_ELAPSED_0_VAL                                31:0 /* RR-UF */
#define NV_PPM_NV_ELAPSED_1                              0x0000A604 /* RR-4R */
#define NV_PPM_NV_ELAPSED_1_VAL                                 7:0 /* RR-UF */
#define NV_PPM_NV_CYCLECNT_0                             0x0000A608 /* RR-4R */
#define NV_PPM_NV_CYCLECNT_0_VAL                               31:0 /* RR-UF */
#define NV_PPM_NV_CYCLECNT_1                             0x0000A60C /* RR-4R */
#define NV_PPM_NV_CYCLECNT_1_VAL                                7:0 /* RR-UF */
#define NV_PPM_NV_EVENTCNT_0                             0x0000A610 /* RR-4R */
#define NV_PPM_NV_EVENTCNT_0_VAL                               31:0 /* RR-UF */
#define NV_PPM_NV_EVENTCNT_1                             0x0000A614 /* RR-4R */
#define NV_PPM_NV_EVENTCNT_1_VAL                                7:0 /* RR-UF */
#define NV_PPM_NV_THRESHCNT_0                            0x0000A618 /* RR-4R */
#define NV_PPM_NV_THRESHCNT_0_VAL                              31:0 /* RR-UF */
#define NV_PPM_NV_THRESHCNT_1                            0x0000A61C /* RR-4R */
#define NV_PPM_NV_THRESHCNT_1_VAL                               7:0 /* RR-UF */
#define NV_PPM_NV_TRIGGERCNT                             0x0000A620 /* RW-4R */
#define NV_PPM_NV_TRIGGERCNT_VAL                               31:0 /* RWXUF */
#define NV_PPM_NV_SAMPLECNT                              0x0000A624 /* RW-4R */
#define NV_PPM_NV_SAMPLECNT_VAL                                31:0 /* RWXUF */
#define NV_PPM_NV_THRESHOLD_0                            0x0000A628 /* RW-4R */
#define NV_PPM_NV_THRESHOLD_0_VAL                              31:0 /* RWXUF */
#define NV_PPM_NV_THRESHOLD_1                            0x0000A62C /* RW-4R */
#define NV_PPM_NV_THRESHOLD_1_VAL                               7:0 /* RWXUF */
#define NV_PPM_NV_WATCH0                                 0x0000A430 /* RR-4R */
#define NV_PPM_NV_WATCH0_GR_XF2PM_XF_IDLE                      0: 0 /* RR-UF */
#define NV_PPM_NV_WATCH0_GR_XF2PM_XF2VTX_DATA_VALID            1: 1 /* RR-UF */
#define NV_PPM_NV_WATCH0_GR_XF2PM_XF2IDX_BUSY                  2: 2 /* RR-UF */
#define NV_PPM_NV_WATCH0_GR_VTX2PM_VTXPRIMIDLE                 3: 3 /* RR-UF */
#define NV_PPM_NV_WATCH0_GR_VTX2PM_VTX2STP_PRIMVALID           4: 4 /* RR-UF */
#define NV_PPM_NV_WATCH0_GR_VTX2PM_VTX2IDX_BUSY                5: 5 /* RR-UF */
#define NV_PPM_NV_WATCH0_GR_VTX2PM_VTX2COL_VALID               6: 6 /* RR-UF */
#define NV_PPM_NV_WATCH0_GR_TEX2PM_TP1_REPLACER_STALL          7: 7 /* RR-UF */
#define NV_PPM_NV_WATCH0_GR_TEX2PM_TP1_MP_QUEUE_STALL          8: 8 /* RR-UF */
#define NV_PPM_NV_WATCH0_GR_TEX2PM_TP1_COALESCER_STALL         9: 9 /* RR-UF */
#define NV_PPM_NV_WATCH0_GR_TEX2PM_TP0_REPLACER_STALL         10:10 /* RR-UF */
#define NV_PPM_NV_WATCH0_GR_TEX2PM_TP0_MP_QUEUE_STALL         11:11 /* RR-UF */
#define NV_PPM_NV_WATCH0_GR_TEX2PM_TP0_COALESCER_STALL        12:12 /* RR-UF */
#define NV_PPM_NV_WATCH0_GR_TEX2PM_TEX2MATH_TP1_BUSY          13:13 /* RR-UF */
#define NV_PPM_NV_WATCH0_GR_TEX2PM_TEX2MATH_TP0_BUSY          14:14 /* RR-UF */
#define NV_PPM_NV_WATCH0_GR_TEX2PM_TEX2LIT_REQ                15:15 /* RR-UF */
#define NV_PPM_NV_WATCH0_GR_TEX2PM_TEX2LIT_REGLD              16:16 /* RR-UF */
#define NV_PPM_NV_WATCH0_GR_TEX2PM_SNAP_PULSE                 17:17 /* RR-UF */
#define NV_PPM_NV_WATCH0_GR_TEX2PM_RBFR_FULL_STALL            18:18 /* RR-UF */
#define NV_PPM_NV_WATCH0_GR_TEX2PM_CACHE_IDLE                 19:19 /* RR-UF */
#define NV_PPM_NV_WATCH0_GR_TEX2PM_C2DMA_DV                   20:20 /* RR-UF */
#define NV_PPM_NV_WATCH0_GR_STP2PM_VTX_OFFSCREEN              21:21 /* RR-UF */
#define NV_PPM_NV_WATCH0_GR_STP2PM_STP_IDLE                   22:22 /* RR-UF */
#define NV_PPM_NV_WATCH0_GR_STP2PM_STP2VTX_BUSY               23:23 /* RR-UF */
#define NV_PPM_NV_WATCH0_GR_STP2PM_STP2RSTR_VALID             24:24 /* RR-UF */
#define NV_PPM_NV_WATCH0_GR_STP2PM_STP2RSTR_DO_SWATHS         25:25 /* RR-UF */
#define NV_PPM_NV_WATCH0_GR_STP2PM_STP2CLP_VALID              26:26 /* RR-UF */
#define NV_PPM_NV_WATCH0_GR_STP2PM_START_PRIM                 27:27 /* RR-UF */
#define NV_PPM_NV_WATCH0_GR_STP2PM_POLYMODE                   28:28 /* RR-UF */
#define NV_PPM_NV_WATCH0_GR_STP2PM_DUAL_TEXTURE               29:29 /* RR-UF */
#define NV_PPM_NV_WATCH0_GR_STP2PM_DO_POINT                   30:30 /* RR-UF */
#define NV_PPM_NV_WATCH0_GR_STP2PM_DO_LINE                    31:31 /* RR-UF */
#define NV_PPM_NV_WATCH1                                 0x0000A434 /* RR-4R */
#define NV_PPM_NV_WATCH1_GR_STP2PM_CYL_WRAP                    0: 0 /* RR-UF */
#define NV_PPM_NV_WATCH1_GR_STP2PM_CULL_SMALL                  1: 1 /* RR-UF */
#define NV_PPM_NV_WATCH1_GR_STP2PM_CULL_NEAR                   2: 2 /* RR-UF */
#define NV_PPM_NV_WATCH1_GR_STP2PM_CULL_FRONT                  3: 3 /* RR-UF */
#define NV_PPM_NV_WATCH1_GR_STP2PM_CULL_FAR                    4: 4 /* RR-UF */
#define NV_PPM_NV_WATCH1_GR_STP2PM_CULL_ENA                    5: 5 /* RR-UF */
#define NV_PPM_NV_WATCH1_GR_STP2PM_CULL_BBOX                   6: 6 /* RR-UF */
#define NV_PPM_NV_WATCH1_GR_STP2PM_CULL_BACK                   7: 7 /* RR-UF */
#define NV_PPM_NV_WATCH1_GR_RSTR2PM_SEARCH_MODE                8: 8 /* RR-UF */
#define NV_PPM_NV_WATCH1_GR_RSTR2PM_RSTR_EOPRIM                9: 9 /* RR-UF */
#define NV_PPM_NV_WATCH1_GR_RSTR2PM_RSTR2PIPE_XY_VALID        10:10 /* RR-UF */
#define NV_PPM_NV_WATCH1_GR_RSTR2PM_RSTR2PIPE_EOPOLY          11:11 /* RR-UF */
#define NV_PPM_NV_WATCH1_GR_RSTR2PM_RSTR2MATH_NEWLINE         12:12 /* RR-UF */
#define NV_PPM_NV_WATCH1_GR_RSTR2PM_RSTR2MATH_ABC_VALID       13:13 /* RR-UF */
#define NV_PPM_NV_WATCH1_GR_RSTR2PM_PIXCNT_0                  14:14 /* RR-UF */
#define NV_PPM_NV_WATCH1_GR_RSTR2PM_PIXCNT_1                  15:15 /* RR-UF */
#define NV_PPM_NV_WATCH1_GR_RSTR2PM_PIXCNT_2                  16:16 /* RR-UF */
#define NV_PPM_NV_WATCH1_GR_RSTR2PM_FINE_STALL                17:17 /* RR-UF */
#define NV_PPM_NV_WATCH1_GR_RSTR2PM_FINE_IDLE                 18:18 /* RR-UF */
#define NV_PPM_NV_WATCH1_GR_RSTR2PM_FINE_EDGE_EVAL            19:19 /* RR-UF */
#define NV_PPM_NV_WATCH1_GR_RSTR2PM_FINE_ALIASED              20:20 /* RR-UF */
#define NV_PPM_NV_WATCH1_GR_RSTR2PM_COARSE_VALID              21:21 /* RR-UF */
#define NV_PPM_NV_WATCH1_GR_RSTR2PM_COARSE_STALL              22:22 /* RR-UF */
#define NV_PPM_NV_WATCH1_GR_RSTR2PM_COARSE_IDLE               23:23 /* RR-UF */
#define NV_PPM_NV_WATCH1_GR_ROP2PM_ZWRITE                     24:24 /* RR-UF */
#define NV_PPM_NV_WATCH1_GR_ROP2PM_ZPARTIAL                   25:25 /* RR-UF */
#define NV_PPM_NV_WATCH1_GR_ROP2PM_WAITMEMWR                  26:26 /* RR-UF */
#define NV_PPM_NV_WATCH1_GR_ROP2PM_WAITMEMRD                  27:27 /* RR-UF */
#define NV_PPM_NV_WATCH1_GR_ROP2PM_WAIT_BUF                   28:28 /* RR-UF */
#define NV_PPM_NV_WATCH1_GR_ROP2PM_ROP_IDLE                   29:29 /* RR-UF */
#define NV_PPM_NV_WATCH1_GR_ROP2PM_ROP2FB_REQ                 30:30 /* RR-UF */
#define NV_PPM_NV_WATCH1_GR_ROP2PM_ROP2FB_RD                  31:31 /* RR-UF */
#define NV_PPM_NV_WATCH2                                 0x0000A438 /* RR-4R */
#define NV_PPM_NV_WATCH2_GR_ROP2PM_ROP2FB_ALOM                 0: 0 /* RR-UF */
#define NV_PPM_NV_WATCH2_GR_ROP2PM_CWRITE                      1: 1 /* RR-UF */
#define NV_PPM_NV_WATCH2_GR_R2D2PM_PRE_OUTPUT_BUSY             2: 2 /* RR-UF */
#define NV_PPM_NV_WATCH2_GR_R2D2PM_R2D2MATH_IM_NEWLINE         3: 3 /* RR-UF */
#define NV_PPM_NV_WATCH2_GR_R2D2PM_RSTR2D_IDLE                 4: 4 /* RR-UF */
#define NV_PPM_NV_WATCH2_GR_R2D2PM_R2D2FE_RSTR2D_BUSY          5: 5 /* RR-UF */
#define NV_PPM_NV_WATCH2_GR_R2D2PM_MATH_CACHE_BUSY             6: 6 /* RR-UF */
#define NV_PPM_NV_WATCH2_GR_R2D2PM_R2D2PRE_OUTPUT_REQ          7: 7 /* RR-UF */
#define NV_PPM_NV_WATCH2_GR_R2D2PM_R2D2PRE_OUTPUT_NOP          8: 8 /* RR-UF */
#define NV_PPM_NV_WATCH2_GR_R2D2PM_R2D2MATH_IM_RIGHT_DV        9: 9 /* RR-UF */
#define NV_PPM_NV_WATCH2_GR_R2D2PM_R2D2MATH_IM_LEFT_DV        10:10 /* RR-UF */
#define NV_PPM_NV_WATCH2_GR_R2D2PM_FE_REQ                     11:11 /* RR-UF */
#define NV_PPM_NV_WATCH2_GR_PRE2PM_PREROP_IDLE                12:12 /* RR-UF */
#define NV_PPM_NV_WATCH2_GR_PRE2PM_PRE2ROP_ROP_REQ            13:13 /* RR-UF */
#define NV_PPM_NV_WATCH2_GR_PRE2PM_PRE2ROP_POSTING_BUFFER     14:14 /* RR-UF */
#define NV_PPM_NV_WATCH2_GR_PRE2PM_PRE2R2D_OUTPUT_BUSY        15:15 /* RR-UF */
#define NV_PPM_NV_WATCH2_GR_PRE2PM_PRE2PIPE_BUSY              16:16 /* RR-UF */
#define NV_PPM_NV_WATCH2_GR_PRE2PM_PRE2LIT_BUSY               17:17 /* RR-UF */
#define NV_PPM_NV_WATCH2_GR_PRE2PM_COALESCE                   18:18 /* RR-UF */
#define NV_PPM_NV_WATCH2_GR_PRE2PM_ALL3D_REQ                  19:19 /* RR-UF */
#define NV_PPM_NV_WATCH2_GR_PIPE2PM_PIPE_XY_RDY               20:20 /* RR-UF */
#define NV_PPM_NV_WATCH2_GR_PIPE2PM_PIPE_IDLE                 21:21 /* RR-UF */
#define NV_PPM_NV_WATCH2_GR_MATH2PM_MATH2TEX_TP1_REQ          22:22 /* RR-UF */
#define NV_PPM_NV_WATCH2_GR_MATH2PM_MATH2TEX_TP0_REQ          23:23 /* RR-UF */
#define NV_PPM_NV_WATCH2_GR_MATH2PM_MATH2TEX_MAGNIFY          24:24 /* RR-UF */
#define NV_PPM_NV_WATCH2_GR_MATH2PM_MATH2TEX_ANISO_SAMPLE     25:25 /* RR-UF */
#define NV_PPM_NV_WATCH2_GR_MATH2PM_MATH2RSTR_RDY             26:26 /* RR-UF */
#define NV_PPM_NV_WATCH2_GR_MATH2PM_MATH2RSTR_ABC_RDY         27:27 /* RR-UF */
#define NV_PPM_NV_WATCH2_GR_LIT2PM_RECIRC_CYCLE               28:28 /* RR-UF */
#define NV_PPM_NV_WATCH2_GR_LIT2PM_LIT2TEX_BUSY               29:29 /* RR-UF */
#define NV_PPM_NV_WATCH2_GR_LIT2PM_LIT2PRE_REQ                30:30 /* RR-UF */
#define NV_PPM_NV_WATCH2_GR_LIT2PM_LIT2COL_BUSY               31:31 /* RR-UF */
#define NV_PPM_NV_WATCH3                                 0x0000A43C /* RR-4R */
#define NV_PPM_NV_WATCH3_GR_IDX2PM_THREADSTALLED               0: 0 /* RR-UF */
#define NV_PPM_NV_WATCH3_GR_IDX2PM_PTEBUSY                     1: 1 /* RR-UF */
#define NV_PPM_NV_WATCH3_GR_IDX2PM_INTALIGN                    2: 2 /* RR-UF */
#define NV_PPM_NV_WATCH3_GR_IDX2PM_IDXFRONTIDLE                3: 3 /* RR-UF */
#define NV_PPM_NV_WATCH3_GR_IDX2PM_IDX2XF_VALID_0              4: 4 /* RR-UF */
#define NV_PPM_NV_WATCH3_GR_IDX2PM_IDX2XF_VALID_1              5: 5 /* RR-UF */
#define NV_PPM_NV_WATCH3_GR_IDX2PM_IDX2VTX_VALID               6: 6 /* RR-UF */
#define NV_PPM_NV_WATCH3_GR_IDX2PM_IDX2PMI_VALID               7: 7 /* RR-UF */
#define NV_PPM_NV_WATCH3_GR_IDX2PM_IDX2FBI_VALID               8: 8 /* RR-UF */
#define NV_PPM_NV_WATCH3_GR_IDX2PM_IDX2DEC_BUSY                9: 9 /* RR-UF */
#define NV_PPM_NV_WATCH3_GR_IDX2PM_COMPOVFL                   10:10 /* RR-UF */
#define NV_PPM_NV_WATCH3_GR_IDX2PM_CACHETHRASH                11:11 /* RR-UF */
#define NV_PPM_NV_WATCH3_GR_FF2PM_FF_GR_RDY                   12:12 /* RR-UF */
#define NV_PPM_NV_WATCH3_GR_FF2PM_FF_GR_B2B                   13:13 /* RR-UF */
#define NV_PPM_NV_WATCH3_GR_FE2PM_NVINTR_GR                   14:14 /* RR-UF */
#define NV_PPM_NV_WATCH3_GR_FE2PM_WAIT_GR_IDLE                15:15 /* RR-UF */
#define NV_PPM_NV_WATCH3_GR_FE2PM_NOP                         16:16 /* RR-UF */
#define NV_PPM_NV_WATCH3_GR_FE2PM_GR_SWITCH                   17:17 /* RR-UF */
#define NV_PPM_NV_WATCH3_GR_FE2PM_GR_IDLE                     18:18 /* RR-UF */
#define NV_PPM_NV_WATCH3_GR_FE2PM_FBI_REQ_BURST               19:19 /* RR-UF */
#define NV_PPM_NV_WATCH3_GR_FE2PM_FBI_REQ                     20:20 /* RR-UF */
#define NV_PPM_NV_WATCH3_GR_FE2PM_FBI_RD                      21:21 /* RR-UF */
#define NV_PPM_NV_WATCH3_GR_FE2PM_FBI_INST                    22:22 /* RR-UF */
#define NV_PPM_NV_WATCH3_GR_FE2PM_CACHE_INVALIDATE            23:23 /* RR-UF */
#define NV_PPM_NV_WATCH3_GR_FBI2PM_FBI2IDX_BUSY               24:24 /* RR-UF */
#define NV_PPM_NV_WATCH3_GR_DMA2PM_DMA2C_DV                   25:25 /* RR-UF */
#define NV_PPM_NV_WATCH3_GR_DMA2PM_DMA2C_ASTALL               26:26 /* RR-UF */
#define NV_PPM_NV_WATCH3_GR_DEC2PM_DEC2IDX_VALID_0            27:27 /* RR-UF */
#define NV_PPM_NV_WATCH3_GR_DEC2PM_DEC2IDX_VALID_1            28:28 /* RR-UF */
#define NV_PPM_NV_WATCH3_GR_COL2PM_SPECULAR_RECIRC            29:29 /* RR-UF */
#define NV_PPM_NV_WATCH3_GR_COL2PM_COLOR_IDLE                 30:30 /* RR-UF */
#define NV_PPM_NV_WATCH3_GR_COL2PM_COL2XYPIPE_BUSY            31:31 /* RR-UF */
#define NV_PPM_NV_WATCH4                                 0x0000A630 /* RR-4R */
#define NV_PPM_NV_WATCH4_GR_COL2PM_COL2VTX_BUSY                0: 0 /* RR-UF */
#define NV_PPM_NV_WATCH4_GR_COL2PM_COL2LIT_REQ                 1: 1 /* RR-UF */
#define NV_PPM_NV_WATCH4_GR_COL2PM_COL2FCOMB_REQ               2: 2 /* RR-UF */
#define NV_PPM_NV_WATCH4_GR_COL2PM_COL2CLP_BUSY                3: 3 /* RR-UF */
#define NV_PPM_NV_WATCH4_GR_CLP2PM_CLP2STP_BUSY                4: 4 /* RR-UF */
#define NV_PPM_NV_WATCH4_TOP_PMI2PM_PMI2IDX_VALID              5: 5 /* RR-UF */
#define NV_PPM_NV_WATCH4_TOP_PMI2PM_PMI2IDX_BUSY               6: 6 /* RR-UF */
#define NV_PPM_NV_WATCH4_TOP_HOST2PM_TIMER_262US               7: 7 /* RR-UF */
#define NV_PPM_NV_WATCH4_TOP_HOST2PM_FF_GR_MDV                 8: 8 /* RR-UF */
#define NV_PPM_NV_WATCH4_TOP_HOST2PM_FF_DHV                    9: 9 /* RR-UF */
#define NV_PPM_NV_WATCH4_TOP_HOST2PM_FF_CHSW                  10:10 /* RR-UF */
#define NV_PPM_NV_WATCH4_TOP_FBI2PM_X_DLY                     11:11 /* RR-UF */
#define NV_PPM_NV_WATCH4_TOP_FBI2PM_S_DLY                     12:12 /* RR-UF */
#define NV_PPM_NV_WATCH4_TOP_FBI2PM_R2W_DLY                   13:13 /* RR-UF */
#define NV_PPM_NV_WATCH4_TOP_FBI2PM_H_DLY                     14:14 /* RR-UF */
#define NV_PPM_NV_WATCH4_TOP_FB2PM_FB2ROP_BUSY                15:15 /* RR-UF */
#define NV_PPM_NV_WATCH4_TOP_FBI2PM_D_DLY                     16:16 /* RR-UF */
#define NV_PPM_NV_WATCH4_TOP_FBI2PM_BC                        17:17 /* RR-UF */
#define NV_PPM_NV_WATCH4_TOP_CRTC2PM_CRTC2DAC_VSYNC2DAC       18:18 /* RR-UF */
#define NV_PPM_CONTROL                                   0x0000A73C /* RW-4R */
#define NV_PPM_CONTROL_OUT_SEL                                  0:0 /* RWXUF */
#define NV_PPM_CONTROL_OUT_SEL_PM                        0x00000000 /* RWI-V */
#define NV_PPM_CONTROL_OUT_SEL_FBIDEBUG                  0x00000001 /* RWI-V */
#define NV_PPM_CONTROL_DRIVE_OUT                                1:1 /* RWXUF */
#define NV_PPM_CONTROL_DRIVE_OUT_NORMAL                  0x00000000 /* RWI-V */
#define NV_PPM_CONTROL_DRIVE_OUT_OBSERVE                 0x00000001 /* RWI-V */
#define NV_PPM_CONTROL_NV_ADDTOEVENT                            2:2 /* RWXUF */
#define NV_PPM_CONTROL_NV_ADDTOEVENT_INCR                0x00000000 /* RWI-V */
#define NV_PPM_CONTROL_NV_ADDTOEVENT_ADDTRIG1            0x00000001 /* RWI-V */
#define NV_PPM_CONTROL_NV_STATE                                 4:3 /* RRIUF */
#define NV_PPM_CONTROL_STATE_IDLE                        0x00000000 /* RWI-V */
#define NV_PPM_CONTROL_STATE_WAIT_TRIG0                  0x00000001 /* RWI-V */
#define NV_PPM_CONTROL_STATE_WAIT_TRIG1                  0x00000002 /* RWI-V */
#define NV_PPM_CONTROL_STATE_CAPTURE                     0x00000003 /* RWI-V */
/* dev_ram.ref */
#define NV_RAMHT__SIZE_0                      0x00000FFF:0x00000000 /* RW--M */
#define NV_RAMHT__SIZE_1                      0x00001FFF:0x00000000 /* RW--M */
#define NV_RAMHT__SIZE_2                      0x00003FFF:0x00000000 /* RW--M */
#define NV_RAMHT__SIZE_3                      0x00007FFF:0x00000000 /* RW--M */
#define NV_RAMHT_HANDLE                       ( 0*32+31):( 0*32+ 0) /* RWXVF */
#define NV_RAMHT_INSTANCE                     ( 1*32+15):( 1*32+ 0) /* RWXUF */
#define NV_RAMHT_ENGINE                       ( 1*32+17):( 1*32+16) /* RWXVF */
#define NV_RAMHT_ENGINE_SW                               0x00000000 /* RW--V */
#define NV_RAMHT_ENGINE_GRAPHICS                         0x00000001 /* RW--V */
#define NV_RAMHT_ENGINE_DVD                              0x00000002 /* RW--V */
#define NV_RAMHT_CHID                         ( 1*32+28):( 1*32+24) /* RWXUF */
#define NV_RAMHT_STATUS                       ( 1*32+31):( 1*32+31) /* RWXUF */
#define NV_RAMHT_STATUS_INVALID                          0x00000000 /* RW--V */
#define NV_RAMHT_STATUS_VALID                            0x00000001 /* RW--V */
/* dev_ram.ref */
#define NV_RAMRO__SIZE_0                      0x000001FF:0x00000000 /* RW--M */
#define NV_RAMRO__SIZE_1                      0x00001FFF:0x00000000 /* RW--M */
#define NV_RAMRO_METHOD                       ( 0*32+12):( 0*32+ 0) /* RWXUF */
#define NV_RAMRO_SUBCHANNEL                   ( 0*32+15):( 0*32+13) /* RWXUF */
#define NV_RAMRO_CHID                         ( 0*32+22):( 0*32+16) /* RWXUF */
#define NV_RAMRO_TYPE                         ( 0*32+23):( 0*32+23) /* RWXVF */
#define NV_RAMRO_TYPE_WRITE                              0x00000000 /* RW--V */
#define NV_RAMRO_TYPE_READ                               0x00000001 /* RW--V */
#define NV_RAMRO_BYTE_ENABLES                 ( 0*32+27):( 0*32+24) /* RWXVF */
#define NV_RAMRO_REASON                       ( 0*32+31):( 0*32+28) /* RWXVF */
#define NV_RAMRO_REASON_ILLEGAL_ACCESS                   0x00000000 /* RW--V */
#define NV_RAMRO_REASON_NO_CACHE_AVAILABLE               0x00000001 /* RW--V */
#define NV_RAMRO_REASON_CACHE_RAN_OUT                    0x00000002 /* RW--V */
#define NV_RAMRO_REASON_FREE_COUNT_OVERRUN               0x00000003 /* RW--V */
#define NV_RAMRO_REASON_CAUGHT_LYING                     0x00000004 /* RW--V */
#define NV_RAMRO_REASON_RESERVED_ACCESS                  0x00000005 /* RW--V */
#define NV_RAMRO_DATA                         ( 1*32+31):( 1*32+ 0) /* RWXVF */
/* dev_ram.ref */
#define NV_RAMFC__SIZE_0                      0x000003FF:0x00000000 /* RW--M */
#define NV_RAMFC_DMA_PUT                      ( 0*32+28):( 0*32+ 2) /* RWXUF */
#define NV_RAMFC_DMA_GET                      ( 1*32+28):( 1*32+ 2) /* RWXUF */
#define NV_RAMFC_REF_CNT                      ( 2*32+31):( 2*32+ 0) /* RWXUF */
#define NV_RAMFC_DMA_INST                     ( 3*32+15):( 3*32+ 0) /* RWXUF */
#define NV_RAMFC_DMA_COUNT                    ( 3*32+28):( 3*32+18) /* RWXUF */
#define NV_RAMFC_DMA_METHOD                   ( 4*32+12):( 4*32+ 2) /* RWXUF */
#define NV_RAMFC_DMA_SUBCHANNEL               ( 4*32+15):( 4*32+13) /* RWXUF */
#define NV_RAMFC_DMA_METHOD_COUNT             ( 4*32+28):( 4*32+18) /* RWXUF */
#define NV_RAMFC_DMA_METHOD_TYPE              ( 4*32+ 0):( 4*32+ 0) /* RWXUF */
#define NV_RAMFC_DMA_FETCH_TRIG               ( 5*32+ 7):( 5*32+ 3) /* RWXUF */
#define NV_RAMFC_DMA_FETCH_SIZE               ( 5*32+15):( 5*32+13) /* RWXUF */
#define NV_RAMFC_DMA_FETCH_MAX_REQS           ( 5*32+20):( 5*32+16) /* RWXUF */
#define NV_RAMFC_ENGINE_SUB_0                 ( 6*32+ 1):( 6*32+ 0) /* RWXUF */
#define NV_RAMFC_ENGINE_SUB_1                 ( 6*32+ 5):( 6*32+ 4) /* RWXUF */
#define NV_RAMFC_ENGINE_SUB_2                 ( 6*32+ 9):( 6*32+ 8) /* RWXUF */
#define NV_RAMFC_ENGINE_SUB_3                 ( 6*32+13):( 6*32+12) /* RWXUF */
#define NV_RAMFC_ENGINE_SUB_4                 ( 6*32+17):( 6*32+16) /* RWXUF */
#define NV_RAMFC_ENGINE_SUB_5                 ( 6*32+21):( 6*32+20) /* RWXUF */
#define NV_RAMFC_ENGINE_SUB_6                 ( 6*32+25):( 6*32+24) /* RWXUF */
#define NV_RAMFC_ENGINE_SUB_7                 ( 6*32+29):( 6*32+28) /* RWXUF */
#define NV_RAMFC_ENGINE_SW                               0x00000000 /* RW--V */
#define NV_RAMFC_ENGINE_GRAPHICS                         0x00000001 /* RW--V */
#define NV_RAMFC_ENGINE_DVD                              0x00000002 /* RW--V */
#define NV_RAMFC_PULL1_ENGINE                 ( 7*32+ 1):( 7*32+ 0) /* RWXUF */
#define NV_RAMFC_PULL1_ENGINE_SW                         0x00000000 /* RW--V */
#define NV_RAMFC_PULL1_ENGINE_GRAPHICS                   0x00000001 /* RW--V */
#define NV_RAMFC_PULL1_ENGINE_DVD                        0x00000002 /* RW--V *//* dev_ram.ref */
/* dev_ram.ref */
/* dev_ram.ref */
#define NV_RAMDVD_CTX_TABLE                   (63*32+31):( 0*32+ 0) /* RWXUF */
#define NV_RAMDVD_CTX_TABLE_OBJECT(c,s) (((c)*4+((s)/2))*32+((s)%2)*16+15):(((c)*4+((s)/2))*32+((s)%2)*16) /* RWXUF */
#define NV_RAMDVD_CTX_TABLE_OBJECT_0_0        ( 0*32+15):( 0*32+ 0) /* RWXUF */
#define NV_RAMDVD_CTX_TABLE_OBJECT_0_1        ( 0*32+31):( 0*32+16) /* RWXUF */
#define NV_RAMDVD_CTX_TABLE_OBJECT_0_2        ( 1*32+15):( 1*32+ 0) /* RWXUF */
#define NV_RAMDVD_CTX_TABLE_OBJECT_0_3        ( 1*32+31):( 1*32+16) /* RWXUF */
#define NV_RAMDVD_CTX_TABLE_OBJECT_0_4        ( 2*32+15):( 2*32+ 0) /* RWXUF */
#define NV_RAMDVD_CTX_TABLE_OBJECT_0_5        ( 2*32+31):( 2*32+16) /* RWXUF */
#define NV_RAMDVD_CTX_TABLE_OBJECT_0_6        ( 3*32+15):( 3*32+ 0) /* RWXUF */
#define NV_RAMDVD_CTX_TABLE_OBJECT_0_7        ( 3*32+31):( 3*32+16) /* RWXUF */
#define NV_RAMDVD_CTX_TABLE_OBJECT_15_0       (60*32+15):(60*32+ 0) /* RWXUF */
#define NV_RAMDVD_CTX_TABLE_OBJECT_15_1       (60*32+31):(60*32+16) /* RWXUF */
#define NV_RAMDVD_CTX_TABLE_OBJECT_15_2       (61*32+15):(61*32+ 0) /* RWXUF */
#define NV_RAMDVD_CTX_TABLE_OBJECT_15_3       (61*32+31):(61*32+16) /* RWXUF */
#define NV_RAMDVD_CTX_TABLE_OBJECT_15_4       (62*32+15):(62*32+ 0) /* RWXUF */
#define NV_RAMDVD_CTX_TABLE_OBJECT_15_5       (62*32+31):(62*32+16) /* RWXUF */
#define NV_RAMDVD_CTX_TABLE_OBJECT_15_6       (63*32+15):(63*32+ 0) /* RWXUF */
#define NV_RAMDVD_CTX_TABLE_OBJECT_15_7       (63*32+31):(63*32+16) /* RWXUF */
/* dev_ram.ref */
/* dev_ram.ref */
#define NV_DMA_CLASS                          ( 0*32+11):( 0*32+ 0) /* RWXUF */
#define NV_DMA_PAGE_TABLE                     ( 0*32+12):( 0*32+12) /* RWXVF */
#define NV_DMA_PAGE_TABLE_NOT_PRESENT                    0x00000000 /* RW--V */
#define NV_DMA_PAGE_TABLE_PRESENT                        0x00000001 /* RW--V */
#define NV_DMA_PAGE_ENTRY                     ( 0*32+13):( 0*32+13) /* RWXVF */
#define NV_DMA_PAGE_ENTRY_NOT_LINEAR                     0x00000000 /* RW--V */
#define NV_DMA_PAGE_ENTRY_LINEAR                         0x00000001 /* RW--V */
#define NV_DMA_FLAGS_ACCESS                   ( 0*32+15):( 0*32+14) /* RWXVF */
#define NV_DMA_FLAGS_ACCESS_READ_WRITE                   0x00000000 /* RW--V */
#define NV_DMA_FLAGS_ACCESS_READ_ONLY                    0x00000001 /* RW--V */
#define NV_DMA_FLAGS_ACCESS_WRITE_ONLY                   0x00000002 /* RW--V */
#define NV_DMA_TARGET_NODE                    ( 0*32+17):( 0*32+16) /* RWXVF */
#define NV_DMA_TARGET_NODE_NVM                           0x00000000 /* RW--V */
#define NV_DMA_TARGET_NODE_NVM_TILED                     0x00000001 /* RW--V */
#define NV_DMA_TARGET_NODE_PCI                           0x00000002 /* RW--V */
#define NV_DMA_TARGET_NODE_AGP                           0x00000003 /* RW--V */
#define NV_DMA_ADJUST                         ( 0*32+31):( 0*32+20) /* RWXUF */
#define NV_DMA_LIMIT                          ( 1*32+31):( 1*32+ 0) /* RWXUF */
#define NV_DMA_ACCESS                         ( 2*32+ 1):( 2*32+ 1) /* RWXVF */
#define NV_DMA_ACCESS_READ_ONLY                          0x00000000 /* RW--V */
#define NV_DMA_ACCESS_READ_AND_WRITE                     0x00000001 /* RW--V */
#define NV_DMA_FRAME_ADDRESS                  ( 2*32+31):( 2*32+12) /* RWXUF */
/* dev_ram.ref */
#define NV_SUBCHAN_CTX_SWITCH                 ( 0*32+31):( 0*32+ 0) /* RWXUF */
#define NV_SUBCHAN_DMA_INSTANCE               ( 1*32+15):( 1*32+ 0) /* RWXUF */
#define NV_SUBCHAN_NOTIFY_INSTANCE            ( 1*32+31):( 1*32+16) /* RWXUF */
#define NV_SUBCHAN_MEMFMT_INSTANCE            ( 2*32+15):( 2*32+ 0) /* RWXUF */
#define NV_SUBCHAN_MEMFMT_LINEAR              ( 2*32+16):( 2*32+16) /* RWXUF */
#define NV_SUBCHAN_MEMFMT_LINEAR_OUT                     0x00000000 /* RW--V */
#define NV_SUBCHAN_MEMFMT_LINEAR_IN                      0x00000001 /* RW--V */
#ifdef DEFUNCT
/* dev_realmode.ref */
#define NV_IO_MPU_401_DATA                               0x00000330 /* R--1R */
#define NV_IO_MPU_401_DATA__ALIAS_1                      0x00000300 /* R--1R */
#define NV_IO_MPU_401_DATA__ALIAS_2                      0x00000230 /* R--1R */
#define NV_IO_MPU_401_DATA_VALUE                                7:0 /* R--VF */
#define NV_IO_MPU_401_DATA_ACK                           0x000000FE /* R---V */
#define NV_IO_MPU_401_STATUS                             0x00000331 /* R--1R */
#define NV_IO_MPU_401_STATUS__ALIAS_1                    0x00000301 /* R--1R */
#define NV_IO_MPU_401_STATUS__ALIAS_2                    0x00000231 /* R--1R */
#define NV_IO_MPU_401_STATUS_DATA                               5:0 /* R--VF */
#define NV_IO_MPU_401_STATUS_WRITE                              6:6 /* R--VF */
#define NV_IO_MPU_401_STATUS_WRITE_EMPTY                 0x00000000 /* R---V */
#define NV_IO_MPU_401_STATUS_WRITE_FULL                  0x00000001 /* R---V */
#define NV_IO_MPU_401_STATUS_READ                               7:7 /* R--VF */
#define NV_IO_MPU_401_STATUS_READ_FULL                   0x00000000 /* R---V */
#define NV_IO_MPU_401_STATUS_READ_EMPTY                  0x00000001 /* R---V */
#define NV_IO_MPU_401_COM                                0x00000331 /* -W-1R */
#define NV_IO_MPU_401_COM__ALIAS_1                       0x00000301 /* -W-1R */
#define NV_IO_MPU_401_COM__ALIAS_2                       0x00000231 /* -W-1R */
#define NV_IO_MPU_401_COM_UART_MODE                             7:0 /* -WIVF */
#define NV_IO_MPU_401_COM_UART_MODE_COMPLEX              0x000000ff /* -WI-V */
#define NV_IO_MPU_401_COM_UART_MODE_SIMPLE               0x0000003f /* -W--V */
/* dev_realmode.ref */
#define NV_PRM                                0x00005FFF:0x00004000 /* RW--D */
#define NV_PRM_INTR_0                                    0x00004100 /* RW-4R */
#define NV_PRM_INTR_0_TRACE_MPU401                              0:0 /* RWXVF */
#define NV_PRM_INTR_0_TRACE_MPU401_NOT_PENDING           0x00000000 /* R---V */
#define NV_PRM_INTR_0_TRACE_MPU401_PENDING               0x00000001 /* R---V */
#define NV_PRM_INTR_0_TRACE_MPU401_RESET                 0x00000001 /* -W--V */
#define NV_PRM_INTR_0_TRACE_FM                                  4:4 /* RWXVF */
#define NV_PRM_INTR_0_TRACE_FM_NOT_PENDING               0x00000000 /* R---V */
#define NV_PRM_INTR_0_TRACE_FM_PENDING                   0x00000001 /* R---V */
#define NV_PRM_INTR_0_TRACE_FM_RESET                     0x00000001 /* -W--V */
#define NV_PRM_INTR_0_TRACE_SB_DIGITAL                          8:8 /* RWXVF */
#define NV_PRM_INTR_0_TRACE_SB_DIGITAL_NOT_PENDING       0x00000000 /* R---V */
#define NV_PRM_INTR_0_TRACE_SB_DIGITAL_PENDING           0x00000001 /* R---V */
#define NV_PRM_INTR_0_TRACE_SB_DIGITAL_RESET             0x00000001 /* -W--V */
#define NV_PRM_INTR_0_TRACE_SB_MIXER                          12:12 /* RWXVF */
#define NV_PRM_INTR_0_TRACE_SB_MIXER_NOT_PENDING         0x00000000 /* R---V */
#define NV_PRM_INTR_0_TRACE_SB_MIXER_PENDING             0x00000001 /* R---V */
#define NV_PRM_INTR_0_TRACE_SB_MIXER_RESET               0x00000001 /* -W--V */
#define NV_PRM_INTR_0_TRACE_OVERFLOW                          16:16 /* RWXVF */
#define NV_PRM_INTR_0_TRACE_OVERFLOW_NOT_PENDING         0x00000000 /* R---V */
#define NV_PRM_INTR_0_TRACE_OVERFLOW_PENDING             0x00000001 /* R---V */
#define NV_PRM_INTR_0_TRACE_OVERFLOW_RESET               0x00000001 /* -W--V */
#define NV_PRM_INTR_EN_0                                 0x00004140 /* RW-4R */
#define NV_PRM_INTR_EN_0_TRACE_MPU401                           0:0 /* RWIVF */
#define NV_PRM_INTR_EN_0_TRACE_MPU401_DISABLED           0x00000000 /* RWI-V */
#define NV_PRM_INTR_EN_0_TRACE_MPU401_ENABLED            0x00000001 /* RW--V */
#define NV_PRM_INTR_EN_0_TRACE_FM                               4:4 /* RWIVF */
#define NV_PRM_INTR_EN_0_TRACE_FM_DISABLED               0x00000000 /* RWI-V */
#define NV_PRM_INTR_EN_0_TRACE_FM_ENABLED                0x00000001 /* RW--V */
#define NV_PRM_INTR_EN_0_TRACE_SB_DIGITAL                       8:8 /* RWIVF */
#define NV_PRM_INTR_EN_0_TRACE_SB_DIGITAL_DISABLED       0x00000000 /* RWI-V */
#define NV_PRM_INTR_EN_0_TRACE_SB_DIGITAL_ENABLED        0x00000001 /* RW--V */
#define NV_PRM_INTR_EN_0_TRACE_SB_MIXER                       12:12 /* RWIVF */
#define NV_PRM_INTR_EN_0_TRACE_SB_MIXER_DISABLED         0x00000000 /* RWI-V */
#define NV_PRM_INTR_EN_0_TRACE_SB_MIXER_ENABLED          0x00000001 /* RW--V */
#define NV_PRM_INTR_EN_0_TRACE_OVERFLOW                       16:16 /* RWIVF */
#define NV_PRM_INTR_EN_0_TRACE_OVERFLOW_DISABLED         0x00000000 /* RWI-V */
#define NV_PRM_INTR_EN_0_TRACE_OVERFLOW_ENABLED          0x00000001 /* RW--V */
#define NV_PRM_RAMRM                                     0x00004200 /* RW-4R */
#define NV_PRM_RAMRM_BASE_ADDRESS                             15:12 /* RWXVF */
#define NV_PRM_RAMRM_BASE_ADDRESS_2000                   0x00002000 /* RWI-V */
#define NV_PRM_TRACE                                     0x00004300 /* RW-4R */
#define NV_PRM_TRACE_IO_CAPTURE                                 1:0 /* RWIVF */
#define NV_PRM_TRACE_IO_CAPTURE_DISABLED                 0x00000000 /* RWI-V */
#define NV_PRM_TRACE_IO_CAPTURE_WRITES                   0x00000001 /* RW--V */
#define NV_PRM_TRACE_IO_CAPTURE_READS                    0x00000002 /* RW--V */
#define NV_PRM_TRACE_IO_CAPTURE_READS_WRITES             0x00000003 /* RW--V */
#define NV_PRM_TRACE_IO_WRITE                                   4:4 /* RWXVF */
#define NV_PRM_TRACE_IO_WRITE_NONE                       0x00000000 /* R---V */
#define NV_PRM_TRACE_IO_WRITE_OCCURED                    0x00000001 /* R---V */
#define NV_PRM_TRACE_IO_WRITE_RESET                      0x00000001 /* -W--V */
#define NV_PRM_TRACE_IO_READ                                    5:5 /* RWXVF */
#define NV_PRM_TRACE_IO_READ_NONE                        0x00000000 /* R---V */
#define NV_PRM_TRACE_IO_READ_OCCURED                     0x00000001 /* R---V */
#define NV_PRM_TRACE_IO_READ_RESET                       0x00000001 /* -W--V */
#define NV_PRM_TRACE_INDEX                               0x00004310 /* RW-4R */
#define NV_PRM_TRACE_INDEX_ADDRESS                              9:0 /* RWXUF */
#define NV_PRM_TRACE_INDEX_ADDRESS_0                     0x00000000 /* RW--V */
#define NV_PRM_IGNORE_0                                  0x00004320 /* RW-4R */
#define NV_PRM_IGNORE_0_MPU401                                  1:0 /* RWXVF */
#define NV_PRM_IGNORE_0_MPU401_DISABLED                  0x00000000 /* RW--V */
#define NV_PRM_IGNORE_0_MPU401_WRITES                    0x00000001 /* RW--V */
#define NV_PRM_IGNORE_0_MPU401_READS                     0x00000002 /* RW--V */
#define NV_PRM_IGNORE_0_MPU401_READS_WRITES              0x00000003 /* RW--V */
#define NV_PRM_IGNORE_0_FM                                      5:4 /* RWXVF */
#define NV_PRM_IGNORE_0_FM_DISABLED                      0x00000000 /* RW--V */
#define NV_PRM_IGNORE_0_FM_WRITES                        0x00000001 /* RW--V */
#define NV_PRM_IGNORE_0_FM_READS                         0x00000002 /* RW--V */
#define NV_PRM_IGNORE_0_FM_READS_WRITES                  0x00000003 /* RW--V */
#define NV_PRM_IGNORE_0_SB_DIGITAL                              9:8 /* RWXVF */
#define NV_PRM_IGNORE_0_SB_DIGITAL_DISABLED              0x00000000 /* RW--V */
#define NV_PRM_IGNORE_0_SB_DIGITAL_WRITES                0x00000001 /* RW--V */
#define NV_PRM_IGNORE_0_SB_DIGITAL_READS                 0x00000002 /* RW--V */
#define NV_PRM_IGNORE_0_SB_DIGITAL_READS_WRITES          0x00000003 /* RW--V */
#define NV_PRM_IGNORE_0_SB_MIXER                              13:12 /* RWXVF */
#define NV_PRM_IGNORE_0_SB_MIXER_DISABLED                0x00000000 /* RW--V */
#define NV_PRM_IGNORE_0_SB_MIXER_WRITES                  0x00000001 /* RW--V */
#define NV_PRM_IGNORE_0_SB_MIXER_READS                   0x00000002 /* RW--V */
#define NV_PRM_IGNORE_0_SB_MIXER_READS_WRITES            0x00000003 /* RW--V */
/* dev_realmode.ref */
#define NV_PRMIO                              0x00007FFF:0x00007000 /* RW--D */
/* dev_realmode.ref */
/* dev_realmode.ref */
#define NV_TRACE                              0x0000FFFF:0x00000000 /* RW--M */
#define NV_TRACE_DATA                         ( 0*32+ 7):( 0*32+ 0) /* RWXVF */
#define NV_TRACE_ACCESS                       ( 0*32+14):( 0*32+14) /* RWXVF */
#define NV_TRACE_ACCESS_WRITE                            0x00000000 /* RW--V */
#define NV_TRACE_ACCESS_READ                             0x00000001 /* RW--V */
#define NV_TRACE_TYPE                         ( 0*32+15):( 0*32+15) /* RWXVF */
#define NV_TRACE_TYPE_IO                                 0x00000000 /* RW--V */
#define NV_TRACE_TYPE_MEMORY                             0x00000001 /* RW--V */
#define NV_TRACE_ADDRESS                      ( 0*32+31):( 0*32+16) /* RWXUF */
#endif

#endif // _NV10_REF_H_
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Microsoft Xbox (1.00.4400) [April 2002] [src]\private\ntos\video\nvx\drivers\resman\kernel\inc\nv4\nv4_hal.h ===
#ifndef _NV4_HAL_H_
#define _NV4_HAL_H_
 /***************************************************************************\
|*                                                                           *|
|*        Copyright (c) 1993-2000 NVIDIA, Corp.  All rights reserved.        *|
|*                                                                           *|
|*     NOTICE TO USER:   The source code  is copyrighted under  U.S. and     *|
|*     international laws.   NVIDIA, Corp. of Sunnyvale, California owns     *|
|*     the copyright  and as design patents  pending  on the design  and     *|
|*     interface  of the NV chips.   Users and possessors of this source     *|
|*     code are hereby granted  a nonexclusive,  royalty-free  copyright     *|
|*     and  design  patent license  to use this code  in individual  and     *|
|*     commercial software.                                                  *|
|*                                                                           *|
|*     Any use of this source code must include,  in the user documenta-     *|
|*     tion and  internal comments to the code,  notices to the end user     *|
|*     as follows:                                                           *|
|*                                                                           *|
|*     Copyright (c) 1993-2000  NVIDIA, Corp.    NVIDIA  design  patents     *|
|*     pending in the U.S. and foreign countries.                            *|
|*                                                                           *|
|*     NVIDIA, CORP.  MAKES  NO REPRESENTATION ABOUT  THE SUITABILITY OF     *|
|*     THIS SOURCE CODE FOR ANY PURPOSE.  IT IS PROVIDED "AS IS" WITHOUT     *|
|*     EXPRESS OR IMPLIED WARRANTY OF ANY KIND.  NVIDIA, CORP. DISCLAIMS     *|
|*     ALL WARRANTIES  WITH REGARD  TO THIS SOURCE CODE,  INCLUDING  ALL     *|
|*     IMPLIED   WARRANTIES  OF  MERCHANTABILITY  AND   FITNESS   FOR  A     *|
|*     PARTICULAR  PURPOSE.   IN NO EVENT SHALL NVIDIA, CORP.  BE LIABLE     *|
|*     FOR ANY SPECIAL, INDIRECT, INCIDENTAL,  OR CONSEQUENTIAL DAMAGES,     *|
|*     OR ANY DAMAGES  WHATSOEVER  RESULTING  FROM LOSS OF USE,  DATA OR     *|
|*     PROFITS,  WHETHER IN AN ACTION  OF CONTRACT,  NEGLIGENCE OR OTHER     *|
|*     TORTIOUS ACTION, ARISING OUT  OF OR IN CONNECTION WITH THE USE OR     *|
|*     PERFORMANCE OF THIS SOURCE CODE.                                      *|
|*                                                                           *|
 \***************************************************************************/

/************************ NV4 HAL Defines and Structures *******************\
*                                                                           *
* Module: nv4_hal.h                                                         *
*       HAL interface defines and structures.                               *
*                                                                           *
*****************************************************************************
*                                                                           *
* History:                                                                  *
*                                                                           *
\***************************************************************************/

#include <nv4_gr.h>

//--------------------------------------------------------------------
// Mc
//--------------------------------------------------------------------

//
// *All* chip-dependent power state is stored here regardless
// of the engine to which it belongs.
//
typedef struct _def_mc_hal_power_info_nv04
{
    U032 PfbDebug0;
    U032 PfbBoot0;
    U032 PfbConfig0;
    U032 PfbConfig1;
    U032 PfifoRamHt;
    U032 PfifoRamFc;
    U032 PfifoRamRo;
} MCHALPOWERINFO_NV04, *PMCHALPOWERINFO_NV04;

typedef struct _def_mc_hal_info_nv04
{
    U032 SavePmc;
    U032 SaveIntrEn0;
    MCHALPOWERINFO_NV04 PowerInfo;
} MCHALINFO_NV04, *PMCHALINFO_NV04;

// chip id functions
BOOL IsNV4_NV04(PMCHALINFO);
BOOL IsNV5_NV04(PMCHALINFO);
BOOL IsNV0A_NV04(PMCHALINFO);
BOOL IsNV5orBetter_NV04(PMCHALINFO);

//--------------------------------------------------------------------
// Fifo
//--------------------------------------------------------------------

//
// 32 channels * 32 bytes each
//
#define NUM_FIFOS_NV04      16
#define FC_SIZE_NV04        32

typedef struct _def_fifo_hal_info_nv04 {
    U032 Mode;
    U032 InUse;
} FIFOHALINFO_NV04, *PFIFOHALINFO_NV04;

//--------------------------------------------------------------------
// Framebuffer
//--------------------------------------------------------------------

typedef struct _def_fb_hal_info_nv04
{
    U032 hashTableAddr;
    U032 hashTableSize;
    U032 fifoContextAddr;
    U032 fifoContextSize;
    U032 fifoRunoutAddr;
    U032 fifoRunoutSize;
    U032 fifoRunoutMask;
    U032 fbSave[2];
    U032 tilingDisabled;
    VOID *bufferBase;
} FBHALINFO_NV04, *PFBHALINFO_NV04;

//--------------------------------------------------------------------
// Graphics
//--------------------------------------------------------------------

//
// Graphics channel context switch data.
// 
typedef struct _def_graphics_channel_nv04
{
    //PCOMMONOBJECT       NotifyObject;
    U032                Notify;
    GRAPHICSPATCH_NV4   CurrentPatch;
    U032                Debug3;      // postdither_2d control
    U032                Exceptions;
    U032                ContextSwitch1;
    U032                ContextSwitch2;
    U032                ContextSwitch3;
    U032                ContextSwitch4;
    U032                ContextSwitch5;
    U032                ContextCache1[8];
    U032                ContextCache2[8];
    U032                ContextCache3[8];
    U032                ContextCache4[8];
    U032                ContextCache5[8];
#ifdef KJK
    PCOMMONOBJECT       CurrentObjects[8];
#endif
    U032                ContextUser;
    U032                DmaStart0;
    U032                DmaStart1;
    U032                DmaLength;
    U032                DmaMisc;
    U032                DmaPitch;
} GRAPHICSCHANNEL_NV04, *PGRAPHICSCHANNEL_NV04;

typedef struct _def_graphics_hal_info_nv04
{
    U032 Debug0;
    U032 Debug1;
    U032 Debug2;
    U032 Debug3;
    U032 currentChID;
    GRAPHICSCHANNEL_NV04 grChannels[NUM_FIFOS_NV04];
} GRHALINFO_NV04, *PGRHALINFO_NV04;

//--------------------------------------------------------------------
// Dac
//--------------------------------------------------------------------
typedef struct _def_dac_hal_info_nv04
{
    U032 foo;
} DACHALINFO_NV04, *PDACHALINFO_NV04;

//--------------------------------------------------------------------
// MediaPort
//--------------------------------------------------------------------

typedef struct _def_mp_hal_info_nv04
{
    VOID *CurrentDecompressor;
} MPHALINFO_NV04, *PMPHALINFO_NV04;

// c04dnv04.c interfaces
extern RM_STATUS class04DMethod_NV04(PMPMETHODARG_000);
extern RM_STATUS class04DGetEventStatus_NV04(PMPGETEVENTSTATUSARG_000);
extern RM_STATUS class04DServiceEvent_NV04(PMPSERVICEEVENTARG_000);

// c04env04.c interfaces
extern RM_STATUS class04EMethod_NV04(PMPMETHODARG_000);
extern RM_STATUS class04EGetEventStatus_NV04(PMPGETEVENTSTATUSARG_000);
extern RM_STATUS class04EServiceEvent_NV04(PMPSERVICEEVENTARG_000);

// c04fnv04.c interfaces
extern RM_STATUS class04FMethod_NV04(PMPMETHODARG_000);
extern RM_STATUS class04FGetEventStatus_NV04(PMPGETEVENTSTATUSARG_000);
extern RM_STATUS class04FServiceEvent_NV04(PMPSERVICEEVENTARG_000);

//--------------------------------------------------------------------
// Video
//--------------------------------------------------------------------

// vidnv04.c interfaces
extern RM_STATUS videoInit_NV04(PHALHWINFO, U032);
extern U016 videoConvertScaleFactor_NV04(S012d020);

// c047nv04.c interfaces
extern RM_STATUS class047Method_NV04(PVIDEOMETHODARG_000);
extern RM_STATUS class047InitXfer_NV04(PHALHWINFO, VOID *, U032);
extern RM_STATUS class047GetEventStatus_NV04(PVIDEOGETEVENTSTATUSARG_000);
extern RM_STATUS class047ServiceEvent_NV04(PVIDEOSERVICEEVENTARG_000);

// c63nv04.c interfaces
extern RM_STATUS class63Method_NV04(PVIDEOMETHODARG_000);
extern RM_STATUS class63InitXfer_NV04(PHALHWINFO, VOID *, U032);
extern VOID class63DualSurfaceDesktop_NV04(PHALHWINFO, U032);
extern RM_STATUS class63GetEventStatus_NV04(PVIDEOGETEVENTSTATUSARG_000);
extern RM_STATUS class63ServiceEvent_NV04(PVIDEOSERVICEEVENTARG_000);

// c64nv04.c interfaces
extern RM_STATUS class64Method_NV04(PVIDEOMETHODARG_000);

// c65nv04.c interfaces
extern RM_STATUS class65Method_NV04(PVIDEOMETHODARG_000);

#endif // _NV4_HAL_H_
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Microsoft Xbox (1.00.4400) [April 2002] [src]\private\ntos\video\nvx\drivers\resman\kernel\inc\nv10\nv10_hal.h ===
#ifndef _NV10_HAL_H_
#define _NV10_HAL_H_
 /***************************************************************************\
|*                                                                           *|
|*        Copyright (c) 1993-2000 NVIDIA, Corp.  All rights reserved.        *|
|*                                                                           *|
|*     NOTICE TO USER:   The source code  is copyrighted under  U.S. and     *|
|*     international laws.   NVIDIA, Corp. of Sunnyvale, California owns     *|
|*     the copyright  and as design patents  pending  on the design  and     *|
|*     interface  of the NV chips.   Users and possessors of this source     *|
|*     code are hereby granted  a nonexclusive,  royalty-free  copyright     *|
|*     and  design  patent license  to use this code  in individual  and     *|
|*     commercial software.                                                  *|
|*                                                                           *|
|*     Any use of this source code must include,  in the user documenta-     *|
|*     tion and  internal comments to the code,  notices to the end user     *|
|*     as follows:                                                           *|
|*                                                                           *|
|*     Copyright (c) 1993-2000  NVIDIA, Corp.    NVIDIA  design  patents     *|
|*     pending in the U.S. and foreign countries.                            *|
|*                                                                           *|
|*     NVIDIA, CORP.  MAKES  NO REPRESENTATION ABOUT  THE SUITABILITY OF     *|
|*     THIS SOURCE CODE FOR ANY PURPOSE.  IT IS PROVIDED "AS IS" WITHOUT     *|
|*     EXPRESS OR IMPLIED WARRANTY OF ANY KIND.  NVIDIA, CORP. DISCLAIMS     *|
|*     ALL WARRANTIES  WITH REGARD  TO THIS SOURCE CODE,  INCLUDING  ALL     *|
|*     IMPLIED   WARRANTIES  OF  MERCHANTABILITY  AND   FITNESS   FOR  A     *|
|*     PARTICULAR  PURPOSE.   IN NO EVENT SHALL NVIDIA, CORP.  BE LIABLE     *|
|*     FOR ANY SPECIAL, INDIRECT, INCIDENTAL,  OR CONSEQUENTIAL DAMAGES,     *|
|*     OR ANY DAMAGES  WHATSOEVER  RESULTING  FROM LOSS OF USE,  DATA OR     *|
|*     PROFITS,  WHETHER IN AN ACTION  OF CONTRACT,  NEGLIGENCE OR OTHER     *|
|*     TORTIOUS ACTION, ARISING OUT  OF OR IN CONNECTION WITH THE USE OR     *|
|*     PERFORMANCE OF THIS SOURCE CODE.                                      *|
|*                                                                           *|
 \***************************************************************************/

/************************ NV10 HAL Defines and Structures ******************\
*                                                                           *
* Module: nv10_hal.h                                                        *
*       HAL interface defines and structures.                               *
*                                                                           *
*****************************************************************************
*                                                                           *
* History:                                                                  *
*                                                                           *
\***************************************************************************/

#include <nv10_gr.h>

//--------------------------------------------------------------------
// Mc
//--------------------------------------------------------------------

typedef struct _tile_values_nv10 {
    U032    tile;                   // base and valid bit
    U032    tlimit;                 // limit of tile range
    U032    tsize;                  // tile pitch value
} NV10_TILE_VALUES;

typedef struct _def_mc_hal_power_info_nv10
{
    U032 PbusDebug1;
    U032 PfbTiming2;
    U032 PfbBoot0;
    U032 PfbConfig0;
    U032 PfbConfig1;
    U032 PfbMrs;
    U032 PfbEmrs;
    U032 PfbRef;
    U032 PfifoRamHt;
    U032 PfifoRamFc;
    U032 PfifoRamRo;
    NV10_TILE_VALUES TilingValues[NV_PFB_TILE__SIZE_1];
    U032 SaveCrtcConfig[2];
    U032 PcrtcRasterStart;
    U032 PcrtcRasterStop;
    //mac vals - 8/25/2000 - dpearce
    U032 PvideoIntrEn;
    U032 PvideoBuffer;
    U032 PvideoStop;
    U032 PvideoBase0;
    U032 PvideoBase1;
    U032 PvideoLimit0;
    U032 PvideoLimit1;
    U032 PvideoLuminance0;
    U032 PvideoLuminance1;
    U032 PvideoChrominance0;
    U032 PvideoChrominance1;
    U032 PvideoOffset0;
    U032 PvideoOffset1;
    U032 PvideoSizeIn0;
    U032 PvideoSizeIn1;
    U032 PvideoPointIn0;
    U032 PvideoPointIn1;
    U032 PvideoDsDx0;
    U032 PvideoDsDx1;
    U032 PvideoDtDy0;
    U032 PvideoDtDy1;
    U032 PvideoPointOut0;
    U032 PvideoPointOut1;
    U032 PvideoSizeOut0;
    U032 PvideoSizeOut1;
    U032 PvideoFormat0;
    U032 PvideoFormat1;
    U032 PvideoColorKey;
} MCHALPOWERINFO_NV10, *PMCHALPOWERINFO_NV10;

typedef struct _def_mc_hal_info_nv10
{
    U032 SavePmc;
    U032 SaveIntrEn0;
    MCHALPOWERINFO_NV10 PowerInfo;
} MCHALINFO_NV10, *PMCHALINFO_NV10;

// chip id functions
BOOL IsNV10_NV10(PMCHALINFO);
BOOL IsNV15_NV10(PMCHALINFO);
BOOL IsNV10MaskRevA02orBetter_NV10(PMCHALINFO);
BOOL IsNV10orBetter_NV10(PMCHALINFO);
BOOL IsNV15orBetter_NV10(PMCHALINFO);
BOOL IsNV11orBetter_NV10(PMCHALINFO);
BOOL IsNV11_NV10(PMCHALINFO);

//--------------------------------------------------------------------
// Fifo
//--------------------------------------------------------------------

//
// 32 channels * 32 bytes each
//
#define NUM_FIFOS_NV10          32
#define FC_SIZE_NV10            32

typedef struct _def_fifo_hal_info_nv10 {
    U032 Mode;
    U032 InUse;
} FIFOHALINFO_NV10, *PFIFOHALINFO_NV10;

//--------------------------------------------------------------------
// Framebuffer
//--------------------------------------------------------------------
typedef struct _def_fb_hal_info_nv10
{
    U032 hashTableAddr;
    U032 hashTableSize;
    U032 fifoContextAddr;
    U032 fifoContextSize;
    U032 fifoRunoutAddr;
    U032 fifoRunoutSize;
    U032 fifoRunoutMask;
    U032 fbSave[1];
    U032 usedTiles;                 // bitmask of used HW tile ranges
} FBHALINFO_NV10, *PFBHALINFO_NV10;

//--------------------------------------------------------------------
// Graphics
//--------------------------------------------------------------------
typedef struct _def_graphics_channel_nv10
{
    //PCOMMONOBJECT       NotifyObject;
    U032                Notify;
    GRAPHICSPATCH_NV10  CurrentPatch;
    //U032                Debug3;      // postdither_2d control
    U032                Exceptions;
    U032                ContextSwitch1;
    U032                ContextSwitch2;
    U032                ContextSwitch3;
    U032                ContextSwitch4;
    U032                ContextSwitch5;
    U032                ContextCache1[8];
    U032                ContextCache2[8];
    U032                ContextCache3[8];
    U032                ContextCache4[8];
    U032                ContextCache5[8];
    U032                ContextUser;
    U032                DmaStart0;
    U032                DmaStart1;
    U032                DmaLength;
    U032                DmaMisc;
    U032                DmaPitch;
} GRAPHICSCHANNEL_NV10, *PGRAPHICSCHANNEL_NV10;

typedef struct _def_graphics_hal_info_nv10
{
    U032 Debug0;                // overrides
    U032 Debug1;
    U032 Debug2;
    U032 Debug3;
    U032 Debug4;
    U032 SwathControl;

    U032 currentChID;
    GRAPHICSCHANNEL_NV10    grChannels[NUM_FIFOS_NV10];
    NvGraphicsState         grSnapShots[NUM_FIFOS_NV10];
    U032                    currentObjects3d[NUM_FIFOS_NV10];
} GRHALINFO_NV10, *PGRHALINFO_NV10;

//--------------------------------------------------------------------
// MediaPort
//--------------------------------------------------------------------

typedef struct _def_mp_hal_info_nv10
{
    U032 VIPSlavePresent;
} MPHALINFO_NV10, *PMPHALINFO_NV10;

// c04dnv10.c interfaces
extern RM_STATUS class04DMethod_NV10(PMPMETHODARG_000);
extern RM_STATUS class04DGetEventStatus_NV10(PMPGETEVENTSTATUSARG_000);
extern RM_STATUS class04DServiceEvent_NV10(PMPSERVICEEVENTARG_000);

// c04env10.c interfaces
extern RM_STATUS class04EMethod_NV10(PMPMETHODARG_000);
extern RM_STATUS class04EGetEventStatus_NV10(PMPGETEVENTSTATUSARG_000);
extern RM_STATUS class04EServiceEvent_NV10(PMPSERVICEEVENTARG_000);

// c04fnv10.c interfaces
extern RM_STATUS class04FMethod_NV10(PMPMETHODARG_000);
extern RM_STATUS class04FGetEventStatus_NV10(PMPGETEVENTSTATUSARG_000);
extern RM_STATUS class04FServiceEvent_NV10(PMPSERVICEEVENTARG_000);

//--------------------------------------------------------------------
// Video
//--------------------------------------------------------------------

// vidnv10.c interfaces
extern RM_STATUS videoInit_NV10(PHALHWINFO, U032);
extern U016 videoConvertScaleFactor_NV10(S012d020);
extern BOOL videoHwOwnsBuffer_NV10(PHALHWINFO, U032, PVIDEO_OVERLAY_HAL_OBJECT);
extern VOID videoAdjustScalarForTV_NV10(PHALHWINFO, U032);
extern VOID videoKickOffOverlay_NV10(PHALHWINFO, PVIDEO_OVERLAY_HAL_OBJECT, U032);
extern VOID videoStopOverlay_NV10(PHALHWINFO, PVIDEO_OVERLAY_HAL_OBJECT, U032);

// c047nv10.c interfaces
extern RM_STATUS class047Method_NV10(PVIDEOMETHODARG_000);

// c07anv10.c interfaces
extern RM_STATUS class07aMethod_NV10(PVIDEOMETHODARG_000);

// c63nv10.c interfaces
extern RM_STATUS class63Method_NV10(PVIDEOMETHODARG_000);
extern RM_STATUS class63InitXfer_NV10(PHALHWINFO, VOID *, U032);
extern VOID class63DualSurfaceDesktop_NV10(PHALHWINFO, U032);

// c64nv10.c interfaces
extern RM_STATUS class64Method_NV10(PVIDEOMETHODARG_000);

// c65nv10.c interfaces
extern RM_STATUS class65Method_NV10(PVIDEOMETHODARG_000);


//--------------------------------------------------------------------
// Dac
//--------------------------------------------------------------------
typedef struct _def_dac_hal_info_nv10
{
    U032 foo;
} DACHALINFO_NV10, *PDACHALINFO_NV10;

#endif // _NV10_HAL_H_
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Microsoft Xbox (1.00.4400) [April 2002] [src]\private\ntos\video\nvx\drivers\resman\kernel\inc\nv20\nv20_ref.h ===
//
// (C) Copyright NVIDIA Corporation Inc., 2000. All rights reserved.
//
/***************************************************************************\
*                                                                           *
*               NV20 Hardware Reference Manual extracted defines.           *
*                                                                           *
\***************************************************************************/
#ifndef _NV20_REF_H_
#define _NV20_REF_H_

//
// These registers are to be accessed only by nv20-specific code.
//

/* dev_bus.ref */
#define NV_TSPACE                             0x0007FFFF:0x00000000 /* RW--D */
/* dev_bus.ref */
#define NV_MSPACE                             0x1FFFFFFF:0x00000000 /* RW--D */
/* dev_bus.ref */
#define NV_RSPACE                             0x00FFFFFF:0x00000000 /* RW--D */
/* dev_bus.ref */
#define NV_PBUS_DEBUG_0                                  0x00001080 /* RW-4R */
#define NV_PBUS_DEBUG_0_FBIO_SCLK_DELAY                         3:0 /* RWIUF */
#define NV_PBUS_DEBUG_0_FBIO_SCLK_DELAY_8                0x00000008 /* RWI-V */
#define NV_PBUS_DEBUG_0_FBIO_SCLK_PC                            4:4 /* RWIVF */
#define NV_PBUS_DEBUG_0_FBIO_SCLK_PC_NORMAL              0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_0_FBIO_SCLK_PC_OVERRIDE            0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_0_FBIO_FBCLK_DELAY                       11:8 /* RWIUF */
#define NV_PBUS_DEBUG_0_FBIO_FBCLK_DELAY_4               0x00000004 /* RWI-V */
#define NV_PBUS_DEBUG_0_FBIO_FBCLK_DELAY_8               0x00000008 /* RW--V */
#define NV_PBUS_DEBUG_0_FBIO_FBCLK_PC                         12:12 /* RWIVF */
#define NV_PBUS_DEBUG_0_FBIO_FBCLK_PC_NORMAL             0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_0_FBIO_FBCLK_PC_OVERRIDE           0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_0_FBIO_ACLK_DELAY                       19:16 /* RWIUF */
#define NV_PBUS_DEBUG_0_FBIO_ACLK_DELAY_8                0x00000008 /* RW--V */
#define NV_PBUS_DEBUG_0_FBIO_ACLK_DELAY_10               0x0000000A /* RWI-V */
#define NV_PBUS_DEBUG_0_FBIO_ACLK_PC                          20:20 /* RWIVF */
#define NV_PBUS_DEBUG_0_FBIO_ACLK_PC_NORMAL              0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_0_FBIO_ACLK_PC_OVERRIDE            0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_0_FBIO_RCLK_DELAY                       27:24 /* RWIUF */
#define NV_PBUS_DEBUG_0_FBIO_RCLK_DELAY_8                0x00000008 /* RW--V */
#define NV_PBUS_DEBUG_0_FBIO_RCLK_DELAY_14               0x0000000E /* RWI-V */
#define NV_PBUS_DEBUG_0_FBIO_RCLK_PC                          28:28 /* RWIVF */
#define NV_PBUS_DEBUG_0_FBIO_RCLK_PC_NORMAL              0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_0_FBIO_RCLK_PC_OVERRIDE            0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_1                                  0x00001084 /* RW-4R */
#define NV_PBUS_DEBUG_1_PCIM_THROTTLE                           0:0 /* RWIVF */
#define NV_PBUS_DEBUG_1_PCIM_THROTTLE_DISABLED           0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_1_PCIM_THROTTLE_ENABLED            0x00000001 /* RWI-V */
#define NV_PBUS_DEBUG_1_PCIM_CMD                                1:1 /* RWIVF */
#define NV_PBUS_DEBUG_1_PCIM_CMD_SIZE_BASED              0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_1_PCIM_CMD_MRL_ONLY                0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_1_HASH_DECODE                             2:2 /* RWIVF */
#define NV_PBUS_DEBUG_1_HASH_DECODE_1FF                  0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_1_HASH_DECODE_2FF                  0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_1_AGPM_CMD                                4:3 /* RWIVF */
#define NV_PBUS_DEBUG_1_AGPM_CMD_HP_ON_1ST               0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_1_AGPM_CMD_LP_ONLY                 0x00000001 /* RWI-V */
#define NV_PBUS_DEBUG_1_AGPM_CMD_HP_ONLY                 0x00000002 /* RW--V */
#define NV_PBUS_DEBUG_1_PCIS_WRITE                              5:5 /* RWIVF */
#define NV_PBUS_DEBUG_1_PCIS_WRITE_0_CYCLE               0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_1_PCIS_WRITE_1_CYCLE               0x00000001 /* RWI-V */
#define NV_PBUS_DEBUG_1_PCIS_2_1                                6:6 /* RWIVF */
#define NV_PBUS_DEBUG_1_PCIS_2_1_DISABLED                0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_1_PCIS_2_1_ENABLED                 0x00000001 /* RWI-V */
#define NV_PBUS_DEBUG_1_RETRY                                   7:7 /* RWIVF */
#define NV_PBUS_DEBUG_1_RETRY_DISABLED                   0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_1_RETRY_ENABLED                    0x00000001 /* RWI-V */
#define NV_PBUS_DEBUG_1_PCIS_RD_BURST                           8:8 /* RWIVF */
#define NV_PBUS_DEBUG_1_PCIS_RD_BURST_DISABLED           0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_1_PCIS_RD_BURST_ENABLED            0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_1_PCIS_WR_BURST                           9:9 /* RWIVF */
#define NV_PBUS_DEBUG_1_PCIS_WR_BURST_DISABLED           0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_1_PCIS_WR_BURST_ENABLED            0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_1_PCIS_EARLY_RTY                        10:10 /* RWIVF */
#define NV_PBUS_DEBUG_1_PCIS_EARLY_RTY_DISABLED          0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_1_PCIS_EARLY_RTY_ENABLED           0x00000001 /* RWI-V */
#define NV_PBUS_DEBUG_1_PCIS_CPUQ                             12:12 /* RWIVF */
#define NV_PBUS_DEBUG_1_PCIS_CPUQ_DISABLED               0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_1_PCIS_CPUQ_ENABLED                0x00000001 /* RWI-V */
#define NV_PBUS_DEBUG_1_DPSH_DECODE                           13:13 /* RWIVF */
#define NV_PBUS_DEBUG_1_DPSH_DECODE_NV4                  0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_1_DPSH_DECODE_NV3                  0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_1_FBI_DIFFERENTIAL                      14:14 /* RWIVF */
#define NV_PBUS_DEBUG_1_FBI_DIFFERENTIAL_ENABLED         0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_1_FBI_DIFFERENTIAL_DISABLED        0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_1_AGPFW_DWOD                            15:15 /* RWIVF */
#define NV_PBUS_DEBUG_1_AGPFW_DWOD_DISABLED              0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_1_AGPFW_DWOD_ENABLED               0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_1_SPARE2                                17:17 /* RWIVF */
#define NV_PBUS_DEBUG_1_SPARE2_ZERO                      0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_1_SPARE2_ONE                       0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_1_ACQUIRE_TIMEOUT                       18:18 /* RWIVF */
#define NV_PBUS_DEBUG_1_ACQUIRE_TIMEOUT_DISABLED         0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_1_ACQUIRE_TIMEOUT_ENABLED          0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_1_SPARE4                                19:19 /* RWIVF */
#define NV_PBUS_DEBUG_1_SPARE4_ZERO                      0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_1_SPARE4_ONE                       0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_1_SPARE5                                20:20 /* RWIVF */
#define NV_PBUS_DEBUG_1_SPARE5_ZERO                      0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_1_SPARE5_ONE                       0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_1_AGPFW_ADIS                            21:21 /* RWIVF */
#define NV_PBUS_DEBUG_1_AGPFW_ADIS_ENABLED               0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_1_AGPFW_ADIS_DISABLED              0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_1_SPARE9                                22:22 /* RWIVF */
#define NV_PBUS_DEBUG_1_SPARE9_ZERO                      0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_1_SPARE9_ONE                       0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_1_SPARE10                               23:23 /* RWIVF */
#define NV_PBUS_DEBUG_1_SPARE10_ZERO                     0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_1_SPARE10_ONE                      0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_1_AGP_DIN_SEL_SRC                       25:25 /* RWIVF */
#define NV_PBUS_DEBUG_1_AGP_DIN_SEL_SRC_HOST             0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_1_AGP_DIN_SEL_SRC_ADSTB            0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_1_PLL_PWRDWN                            26:26 /* RWIVF */
#define NV_PBUS_DEBUG_1_PLL_PWRDWN_DISABLE               0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_1_PLL_PWRDWN_ENABLE                0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_1_PLL_STOPCLK                           27:27 /* RWIVF */
#define NV_PBUS_DEBUG_1_PLL_STOPCLK_DISABLE              0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_1_PLL_STOPCLK_ENABLE               0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_1_CORE_SLOWDWN                          30:29 /* RWIVF */
#define NV_PBUS_DEBUG_1_CORE_SLOWDWN_DISABLE             0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_1_CORE_SLOWDWN_ENABLE              0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_2                                  0x00001088 /* RW-4R */
#define NV_PBUS_DEBUG_2_AGP_VREF                                0:0 /* RWIVF */
#define NV_PBUS_DEBUG_2_AGP_VREF_DISABLED                0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_2_AGP_VREF_ENABLED                 0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_2_AGP_SB_STB_DELAY                        9:4 /* RWIUF */
#define NV_PBUS_DEBUG_2_AGP_SB_STB_DELAY_34              0x00000022 /* RWI-V */
#define NV_PBUS_DEBUG_2_AGP_AD_STB_DSE                        12:12 /* RWIVF */
#define NV_PBUS_DEBUG_2_AGP_AD_STB_DSE_OFF               0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_2_AGP_AD_STB_DSE_ON                0x00000001 /* RW0-V */
#define NV_PBUS_DEBUG_2_SAGP_VREF                             16:16 /* RWIVF */
#define NV_PBUS_DEBUG_2_SAGP_VREF_DISABLED               0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_2_SAGP_VREF_ENABLED                0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_2_SDSP_VREF                             20:20 /* RWIVF */
#define NV_PBUS_DEBUG_2_SDSP_VREF_DISABLED               0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_2_SDSP_VREF_ENABLED                0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_3                                  0x0000108C /* RW-4R */
#define NV_PBUS_DEBUG_3_AGP_MAX_SIZE                            1:0 /* RWIVF */
#define NV_PBUS_DEBUG_3_AGP_MAX_SIZE_UNLIMITED           0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_3_AGP_MAX_SIZE_32_BYTES            0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_3_AGP_MAX_SIZE_64_BYTES            0x00000002 /* RW--V */
#define NV_PBUS_DEBUG_3_AGP_4X_NVCLK                            7:4 /* RWIVF */
#define NV_PBUS_DEBUG_3_AGP_4X_NVCLK_ABOVE_66MHZ         0x00000005 /* RW--V */
#define NV_PBUS_DEBUG_3_AGP_4X_NVCLK_ABOVE_73MHZ         0x00000006 /* RW--V */
#define NV_PBUS_DEBUG_3_AGP_4X_NVCLK_ABOVE_80MHZ         0x00000007 /* RW--V */
#define NV_PBUS_DEBUG_3_AGP_4X_NVCLK_ABOVE_87MHZ         0x00000008 /* RW--V */
#define NV_PBUS_DEBUG_3_AGP_4X_NVCLK_ABOVE_94MHZ         0x00000009 /* RW--V */
#define NV_PBUS_DEBUG_3_AGP_4X_NVCLK_ABOVE_100MHZ        0x0000000A /* RWI-V */
#define NV_PBUS_DEBUG_3_AGP_4X_NVCLK_ABOVE_106MHZ        0x0000000B /* RW--V */
#define NV_PBUS_DEBUG_3_AGP_4X_NVCLK_ABOVE_113MHZ        0x0000000C /* RW--V */
#define NV_PBUS_DEBUG_3_AGP_4X_NVCLK_ABOVE_120MHZ        0x0000000D /* RW--V */
#define NV_PBUS_DEBUG_3_AGP_4X_NVCLK_ABOVE_126MHZ        0x0000000E /* RW--V */
#define NV_PBUS_DEBUG_3_AGP_4X_NVCLK_ABOVE_133MHZ        0x0000000F /* RW--V */
#define NV_PBUS_DEBUG_CTL                                0x00001090 /* RW-4R */
#define NV_PBUS_DEBUG_CTL_MODE                                  0:0 /* RWIVF */
#define NV_PBUS_DEBUG_CTL_MODE_DISABLED                  0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTL_MODE_ENABLED                   0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_CTL_READ_SELECT                           4:4 /* RWIVF */
#define NV_PBUS_DEBUG_CTL_READ_SELECT_0                  0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTL_READ_SELECT_1                  0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_READ                               0x00001094 /* R--4R */
#define NV_PBUS_DEBUG_READ_DATA                                31:0 /* R-XUF */
#define NV_PBUS_DEBUG_HOST                               0x0000109C /* RW-4R */
#define NV_PBUS_DEBUG_HOST_SEL                                  2:0 /* RWXUF */
#define NV_PBUS_DEBUG_SEL_0                              0x000010A0 /* RW-4R */
#define NV_PBUS_DEBUG_SEL_0_X                                   2:0 /* RWXUF */
#define NV_PBUS_DEBUG_SEL_1                              0x000010A4 /* RW-4R */
#define NV_PBUS_DEBUG_SEL_1_X                                   2:0 /* RWXUF */
#define NV_PBUS_DEBUG_SEL_2                              0x000010A8 /* RW-4R */
#define NV_PBUS_DEBUG_SEL_2_X                                   2:0 /* RWXUF */
#define NV_PBUS_DEBUG_SEL_3                              0x000010AC /* RW-4R */
#define NV_PBUS_DEBUG_SEL_3_X                                   2:0 /* RWXUF */
#define NV_PBUS_DEBUG_CTRIM_0                            0x000010B0 /* RW-4R */
#define NV_PBUS_DEBUG_CTRIM_0_NV_NE_DELAY                       3:0 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_0_NV_NE_DELAY_8              0x00000008 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_0_NV_SE_DELAY                       7:4 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_0_NV_SE_DELAY_8              0x00000008 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_0_NV_NW_DELAY                      11:8 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_0_NV_NW_DELAY_8              0x00000008 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_0_NV_SW_DELAY                     15:12 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_0_NV_SW_DELAY_8              0x00000008 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_0_M_NW_DELAY                      19:16 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_0_M_NW_DELAY_8               0x00000008 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_0_M_SW_DELAY                      23:20 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_0_M_SW_DELAY_8               0x00000008 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_0_U_NW_DELAY                      27:24 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_0_U_NW_DELAY_8               0x00000008 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_0_U_SW_DELAY                      31:28 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_0_U_SW_DELAY_8               0x00000008 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_0_NV_NW_TRIM                        3:0 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_0_NV_NW_TRIM_8               0x00000008 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_0_NV_FE_TRIM                        7:4 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_0_NV_FE_TRIM_8               0x00000008 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_0_NV_CA_TRIM                       11:8 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_0_NV_CA_TRIM_8               0x00000008 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_0_NV_CS_TRIM                      15:12 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_0_NV_CS_TRIM_8               0x00000008 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_0_NV_SH_TRIM                      19:16 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_0_NV_SH_TRIM_8               0x00000008 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_0_NV_SP_TRIM                      23:20 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_0_NV_SP_TRIM_8               0x00000008 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_0_NV_FB_TRIM                      27:24 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_0_NV_FB_TRIM_8               0x00000008 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_0_SPARE_0                         31:28 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_0_SPARE_0_8                  0x00000008 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_1                            0x000010B4 /* RW-4R */
#define NV_PBUS_DEBUG_CTRIM_1_C0_DELAY                          3:0 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_1_C0_DELAY_0                 0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_1_C1_DELAY                          7:4 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_1_C1_DELAY_0                 0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_1_C2_DELAY                         11:8 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_1_C2_DELAY_0                 0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_1_C3_DELAY                        15:12 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_1_C3_DELAY_0                 0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_1_C4_DELAY                        19:16 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_1_C4_DELAY_0                 0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_1_C5_DELAY                        23:20 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_1_C5_DELAY_0                 0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_1_C6_DELAY                        27:24 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_1_C6_DELAY_0                 0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_1_C7_DELAY                        31:28 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_1_C7_DELAY_0                 0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_1_M_SHAPE                           3:0 /* RWISF */
#define NV_PBUS_DEBUG_CTRIM_1_M_SHAPE_0                  0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_1_M_SHAPE_INIT               0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_1_N_SHAPE                           7:4 /* RWISF */
#define NV_PBUS_DEBUG_CTRIM_1_N_SHAPE_0                  0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_1_N_SHAPE_INIT               0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_1_PV1_SHAPE                        11:8 /* RWISF */
#define NV_PBUS_DEBUG_CTRIM_1_PV1_SHAPE_0                0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_1_PV1_SHAPE_INIT             0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_1_PV2_SHAPE                       15:12 /* RWISF */
#define NV_PBUS_DEBUG_CTRIM_1_PV2_SHAPE_0                0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_1_PV2_SHAPE_INIT             0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_1_FP1_SHAPE                       19:16 /* RWISF */
#define NV_PBUS_DEBUG_CTRIM_1_FP1_SHAPE_0                0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_1_FP1_SHAPE_INIT             0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_1_FPDP_SHAPE                      23:20 /* RWISF */
#define NV_PBUS_DEBUG_CTRIM_1_FPDP_SHAPE_0               0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_1_FPDP_SHAPE_INIT            0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_1_FPIO_SHAPE                      27:24 /* RWISF */
#define NV_PBUS_DEBUG_CTRIM_1_FPIO_SHAPE_0               0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_1_FPIO_SHAPE_INIT            0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_1_FPION_SHAPE                     31:28 /* RWISF */
#define NV_PBUS_DEBUG_CTRIM_1_FPION_SHAPE_0              0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_1_FPION_SHAPE_INIT           0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_2                            0x000010B8 /* RW-4R */
#define NV_PBUS_DEBUG_CTRIM_2_C0_DELAY                          3:0 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_2_C0_DELAY_0                 0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_2_C1_DELAY                          7:4 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_2_C1_DELAY_0                 0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_2_C2_DELAY                         11:8 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_2_C2_DELAY_0                 0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_2_C3_DELAY                        15:12 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_2_C3_DELAY_0                 0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_2_C4_DELAY                        19:16 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_2_C4_DELAY_0                 0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_2_C5_DELAY                        23:20 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_2_C5_DELAY_0                 0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_2_C6_DELAY                        27:24 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_2_C6_DELAY_0                 0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_2_C7_DELAY                        31:28 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_2_C7_DELAY_0                 0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_2_M2I_0_SHAPE                       3:0 /* RWISF */
#define NV_PBUS_DEBUG_CTRIM_2_M2I_0_SHAPE_0              0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_2_M2I_0_SHAPE_INIT           0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_2_M2I_1_SHAPE                       7:4 /* RWISF */
#define NV_PBUS_DEBUG_CTRIM_2_M2I_1_SHAPE_0              0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_2_M2I_1_SHAPE_INIT           0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_2_M2I_2_SHAPE                      11:8 /* RWISF */
#define NV_PBUS_DEBUG_CTRIM_2_M2I_2_SHAPE_0              0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_2_M2I_2_SHAPE_INIT           0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_2_M2I_3_SHAPE                     15:12 /* RWISF */
#define NV_PBUS_DEBUG_CTRIM_2_M2I_3_SHAPE_0              0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_2_M2I_3_SHAPE_INIT           0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_2_M2O_0_SHAPE                     19:16 /* RWISF */
#define NV_PBUS_DEBUG_CTRIM_2_M2O_0_SHAPE_0              0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_2_M2O_0_SHAPE_INIT           0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_2_M2O_1_SHAPE                     23:20 /* RWISF */
#define NV_PBUS_DEBUG_CTRIM_2_M2O_1_SHAPE_0              0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_2_M2O_1_SHAPE_INIT           0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_2_M2O_2_SHAPE                     27:24 /* RWISF */
#define NV_PBUS_DEBUG_CTRIM_2_M2O_2_SHAPE_0              0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_2_M2O_2_SHAPE_INIT           0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_2_M2O_3_SHAPE                     31:28 /* RWISF */
#define NV_PBUS_DEBUG_CTRIM_2_M2O_3_SHAPE_0              0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_2_M2O_3_SHAPE_INIT           0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_3                            0x000010BC /* RW-4R */
#define NV_PBUS_DEBUG_CTRIM_3_C0_DELAY                          3:0 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_3_C0_DELAY_8                 0x00000003 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_3_C1_DELAY                          7:4 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_3_C1_DELAY_8                 0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_3_C2_DELAY                         11:8 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_3_C2_DELAY_8                 0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_3_C3_DELAY                        15:12 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_3_C3_DELAY_8                 0x00000003 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_3_C4_DELAY                        19:16 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_3_C4_DELAY_8                 0x00000002 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_3_C5_DELAY                        23:20 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_3_C5_DELAY_8                 0x00000002 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_3_C6_DELAY                        27:24 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_3_C6_DELAY_F                 0x0000000f /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_3_C7_DELAY                        31:28 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_3_C7_DELAY_F                 0x0000000f /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_3_CCIR_CLK_OUT_TRIM                 3:0 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_3_CCIR_CLK_OUT_TRIM_8        0x00000003 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_3_CCIR_CLK_OUT_TRIM_INIT     0x00000003 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_3_PCLK1_TRIM                        7:4 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_3_PCLK1_TRIM_8               0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_3_PCLK1_TRIM_INIT            0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_3_VCLK1_TRIM                       11:8 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_3_VCLK1_TRIM_8               0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_3_VCLK1_TRIM_INIT            0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_3_VSCLK_TRIM                      15:12 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_3_VSCLK_TRIM_8               0x00000003 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_3_VSCLK_TRIM_INIT            0x00000003 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_3_PCLK2_TRIM                      19:16 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_3_PCLK2_TRIM_8               0x00000002 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_3_PCLK2_TRIM_INIT            0x00000002 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_3_VCLK2_TRIM                      23:20 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_3_VCLK2_TRIM_8               0x00000002 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_3_VCLK2_TRIM_INIT            0x00000002 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_3_BYPASS_NVCLK                    24:24 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_3_BYPASS_NVCLK_ENABLE        0x00000001 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_3_BYPASS_NVCLK_EN_INIT       0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_3_BYPASS_MCLK                     25:25 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_3_BYPASS_MCLK_ENABLE         0x00000001 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_3_BYPASS_MCLK_EN_INIT        0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_3_BYPASS_CLK4X                    26:26 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_3_BYPASS_CLK4X_ENABLE        0x00000001 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_3_BYPASS_CLK4X_EN_INIT       0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_3_BYPASS_CCIR_O                   27:27 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_3_BYPASS_CCIR_O_ENABLE       0x00000001 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_3_BYPASS_CCIR_O_EN_INIT      0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_3_BYPASS_VIP_HCLK                 28:28 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_3_BYPASS_VIP_HCLK_ENABLE     0x00000001 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_3_BYPASS_VIP_HCLK_EN_INIT    0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_3_BYPASS_VCLK2                    29:29 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_3_BYPASS_VCLK2_ENABLE        0x00000001 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_3_BYPASS_VCLK2_EN_INIT       0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_3_BYPASS_PCLK                     30:30 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_3_BYPASS_PCLK_ENABLE         0x00000001 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_3_BYPASS_PCLK_EN_INIT        0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_3_BYPASS_CCIR2                    31:31 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_3_BYPASS_CCIR2_ENABLE        0x00000001 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_3_BYPASS_CCIR2_EN_INIT       0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_4                            0x000010C4 /* RW-4R */
#define NV_PBUS_DEBUG_CTRIM_4_C0_DELAY                          3:0 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_4_C0_DELAY_8                 0x00000002 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_4_C1_DELAY                          7:4 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_4_C1_DELAY_8                 0x00000002 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_4_C2_DELAY                         11:8 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_4_C2_DELAY_8                 0x00000003 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_4_C3_DELAY                        15:12 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_4_C3_DELAY_8                 0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_4_C4_DELAY                        19:16 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_4_C4_DELAY_8                 0x0000000C /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_4_C5_DELAY                        23:20 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_4_C5_DELAY_8                 0x0000000B /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_4_C6_DELAY                        27:24 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_4_C6_DELAY_8                 0x0000000D /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_4_C7_DELAY                        31:28 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_4_C7_DELAY_8                 0x0000000A /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_4_M2I_0_TRIM                        3:0 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_4_M2I_0_TRIM_8               0x00000002 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_4_M2I_0_TRIM_INIT            0x00000003 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_4_M2I_1_TRIM                        7:4 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_4_M2I_1_TRIM_8               0x00000002 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_4_M2I_1_TRIM_INIT            0x00000003 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_4_M2I_2_TRIM                       11:8 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_4_M2I_2_TRIM_8               0x00000003 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_4_M2I_2_TRIM_INIT            0x00000004 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_4_M2I_3_TRIM                      15:12 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_4_M2I_3_TRIM_8               0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_4_M2I_3_TRIM_INIT            0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_4_M2O_0_TRIM                      19:16 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_4_M2O_0_TRIM_8               0x0000000C /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_4_M2O_0_TRIM_INIT            0x0000000B /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_4_M2O_1_TRIM                      23:20 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_4_M2O_1_TRIM_8               0x0000000B /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_4_M2O_1_TRIM_INIT            0x0000000A /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_4_M2O_2_TRIM                      27:24 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_4_M2O_2_TRIM_8               0x0000000D /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_4_M2O_2_TRIM_INIT            0x0000000C /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_4_M2O_3_TRIM                      31:28 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_4_M2O_3_TRIM_8               0x0000000A /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_4_M2O_3_TRIM_INIT            0x00000009 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_5                            0x000010C8 /* RW-4R */
#define NV_PBUS_DEBUG_CTRIM_5_C0_DELAY                          3:0 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_5_C0_DELAY_8                 0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_5_C1_DELAY                          7:4 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_5_C1_DELAY_8                 0x00000008 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_5_C2_DELAY                         11:8 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_5_C2_DELAY_8                 0x00000008 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_5_C3_DELAY                        15:12 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_5_C3_DELAY_8                 0x00000008 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_5_C4_DELAY                        19:16 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_5_C4_DELAY_0                 0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_5_C5_DELAY                        23:20 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_5_C5_DELAY_0                 0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_5_C6_DELAY                        27:24 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_5_C6_DELAY_0                 0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_5_C7_DELAY                        31:28 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_5_C7_DELAY_0                 0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_5_FPIOCLK_TRIM                      3:0 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_5_FPIOCLK_TRIM_8             0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_5_FPIOCLK_TRIM_INIT          0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_5_FPIONCLK_TRIM                     7:4 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_5_FPIONCLK_TRIM_8            0x00000008 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_5_FPIONCLK_TRIM_INIT         0x00000008 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_5_FPDPCLK_TRIM                     11:8 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_5_FPDPCLK_TRIM_8             0x00000008 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_5_FPDPCLK_TRIM_INIT          0x00000008 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_5_FPCLK1_TRIM                     15:12 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_5_FPCLK1_TRIM_8              0x00000008 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_5_FPCLK1_TRIM_INIT           0x00000008 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_5_FPCLK2_TRIM                     19:16 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_5_FPCLK2_TRIM_0              0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_5_FPCLK2_TRIM_INIT           0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_5_IFPCLK1_TRIM                    23:20 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_5_IFPCLK1_TRIM_0             0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_5_IFPCLK1_TRIM_INIT          0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_5_IFPCLK2_TRIM                    27:24 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_5_IFPCLK2_TRIM_0             0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_5_IFPCLK2_TRIM_INIT          0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_5_M_DELAY                         31:28 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_5_M_DELAY_0                  0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_5_M_DELAY_INIT               0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_6                            0x000010CC /* RW-4R */
#define NV_PBUS_DEBUG_CTRIM_6_C0_DELAY                          3:0 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_6_C0_DELAY_0                 0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_6_C1_DELAY                          7:4 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_6_C1_DELAY_0                 0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_6_C2_DELAY                         11:8 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_6_C2_DELAY_0                 0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_6_C3_DELAY                        15:12 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_6_C3_DELAY_0                 0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_6_C4_DELAY                        19:16 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_6_C4_DELAY_0                 0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_6_C5_DELAY                        23:20 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_6_C5_DELAY_0                 0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_6_C6_DELAY                        27:24 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_6_C6_DELAY_0                 0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_6_C7_DELAY                        31:28 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_6_C7_DELAY_0                 0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_6_FBIO_M2I_0_DELAY                  3:0 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_6_FBIO_M2I_0_DELAY_0         0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_6_FBIO_M2I_0_DELAY_INIT      0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_6_FBIO_M2I_1_DELAY                  7:4 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_6_FBIO_M2I_1_DELAY_0         0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_6_FBIO_M2I_1_DELAY_INIT      0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_6_FBIO_M2I_2_DELAY                 11:8 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_6_FBIO_M2I_2_DELAY_0         0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_6_FBIO_M2I_2_DELAY_INIT      0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_6_FBIO_M2I_3_DELAY                15:12 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_6_FBIO_M2I_3_DELAY_0         0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_6_FBIO_M2I_3_DELAY_INIT      0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_6_FBIO_M2O_0_DELAY                19:16 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_6_FBIO_M2O_0_DELAY_0         0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_6_FBIO_M2O_0_DELAY_INIT      0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_6_FBIO_M2O_1_DELAY                23:20 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_6_FBIO_M2O_1_DELAY_0         0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_6_FBIO_M2O_1_DELAY_INIT      0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_6_FBIO_M2O_2_DELAY                27:24 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_6_FBIO_M2O_2_DELAY_0         0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_6_FBIO_M2O_2_DELAY_INIT      0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_6_FBIO_M2O_3_DELAY                31:28 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_6_FBIO_M2O_3_DELAY_0         0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_6_FBIO_M2O_3_DELAY_INIT      0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_AGPPLL                             0x000010C0 /* RW-4R */
#define NV_PBUS_DEBUG_AGPPLL_COEFF_MDIV                         7:0 /* RWIUF */
#define NV_PBUS_DEBUG_AGPPLL_COEFF_MDIV_1                0x00000001 /* RWI-V */
#define NV_PBUS_DEBUG_AGPPLL_COEFF_NDIV                        15:8 /* RWIUF */
#define NV_PBUS_DEBUG_AGPPLL_COEFF_NDIV_4                0x00000004 /* RWI-V */
#define NV_PBUS_DEBUG_AGPPLL_SETUP                            24:16 /* RWIUF */
#define NV_PBUS_DEBUG_AGPPLL_SETUP_DEFAULT               0x0000011C /* RWI-V */
#define NV_PBUS_DEBUG_AGPPLL_PWRDWN                           28:28 /* RWIVF */
#define NV_PBUS_DEBUG_AGPPLL_PWRDWN_ON                   0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_AGPPLL_PWRDWN_OFF                  0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_AGPPLL_STATUS                           31:31 /* R--VF */
#define NV_PBUS_DEBUG_AGPPLL_STATUS_NOTLOCKED            0x00000000 /* R---V */
#define NV_PBUS_DEBUG_AGPPLL_STATUS_LOCKED               0x00000001 /* R---V */
#define NV_PBUS_DEBUG_PORT                               0x000010D0 /* RW-4R */
#define NV_PBUS_DEBUG_PORT_MODE                                 0:0 /* RWIVF */
#define NV_PBUS_DEBUG_PORT_MODE_NORMAL                   0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_PORT_MODE_AGP4X                    0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_7                            0x000010D4 /* RW-4R */
#define NV_PBUS_DEBUG_CTRIM_7_CCDP_TRIM                         3:0 /* RWISF */
#define NV_PBUS_DEBUG_CTRIM_7_CCDP_TRIM_0                0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_7_CCDP_TRIM_INIT             0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_7_CCDP_SHAPE                        7:4 /* RWISF */
#define NV_PBUS_DEBUG_CTRIM_7_CCDP_SHAPE_0               0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_7_CCDP_SHAPE_INIT            0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_7_CCIO_SHAPE                       11:8 /* RWISF */
#define NV_PBUS_DEBUG_CTRIM_7_CCIO_SHAPE_0               0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_7_CCIO_SHAPE_INIT            0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_7_FP2_SHAPE                       15:12 /* RWISF */
#define NV_PBUS_DEBUG_CTRIM_7_FP2_SHAPE_0                0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_7_FP2_SHAPE_INIT             0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_7_IFP1_SHAPE                      19:16 /* RWISF */
#define NV_PBUS_DEBUG_CTRIM_7_IFP1_SHAPE_0               0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_7_IFP1_SHAPE_INIT            0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_7_IFP2_SHAPE                      23:20 /* RWISF */
#define NV_PBUS_DEBUG_CTRIM_7_IFP2_SHAPE_0               0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_7_IFP2_SHAPE_INIT            0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_7_PCLK1_DP_TRIM                   27:24 /* RWISF */
#define NV_PBUS_DEBUG_CTRIM_7_PCLK1_DP_TRIM_0            0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_7_PCLK1_DP_TRIM_INIT         0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_7_PCLK1_DP_SHAPE                  31:28 /* RWISF */
#define NV_PBUS_DEBUG_CTRIM_7_PCLK1_DP_SHAPE_0           0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_7_PCLK1_DP_SHAPE_INIT        0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_8                            0x000010D8 /* RW-4R */
#define NV_PBUS_DEBUG_CTRIM_8_DQSOB_0_TRIM                      3:0 /* RWISF */
#define NV_PBUS_DEBUG_CTRIM_8_DQSOB_0_0                  0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_8_DQSOB_0_INIT               0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_8_DQSOB_1                           7:4 /* RWISF */
#define NV_PBUS_DEBUG_CTRIM_8_DQSOB_1_0                  0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_8_DQSOB_1_INIT               0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_8_DQSOB_2                          11:8 /* RWISF */
#define NV_PBUS_DEBUG_CTRIM_8_DQSOB_2_0                  0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_8_DQSOB_2_INIT               0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_8_DQSOB_3                         15:12 /* RWISF */
#define NV_PBUS_DEBUG_CTRIM_8_DQSOB_3_0                  0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_8_DQSOB_3_INIT               0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_8_DQSOB_4                         19:16 /* RWISF */
#define NV_PBUS_DEBUG_CTRIM_8_DQSOB_4_0                  0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_8_DQSOB_4_INIT               0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_8_DQSOB_5                         23:20 /* RWISF */
#define NV_PBUS_DEBUG_CTRIM_8_DQSOB_5_0                  0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_8_DQSOB_5_INIT               0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_8_DQSOB_6                         27:24 /* RWISF */
#define NV_PBUS_DEBUG_CTRIM_8_DQSOB_6_0                  0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_8_DQSOB_6_INIT               0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_8_DQSOB_7                         31:28 /* RWISF */
#define NV_PBUS_DEBUG_CTRIM_8_DQSOB_7_0                  0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_8_DQSOB_7_INIT               0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_9                            0x000010DC /* RW-4R */
#define NV_PBUS_DEBUG_CTRIM_9_NV_PA0_TRIM                       3:0 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_9_NV_PA0_TRIM_8              0x00000008 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_9_NV_PA1_TRIM                       7:4 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_9_NV_PA1_TRIM_8              0x00000008 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_9_NV_PA2_TRIM                      11:8 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_9_NV_PA2_TRIM_8              0x00000008 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_9_NV_PA3_TRIM                     15:12 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_9_NV_PA3_TRIM_8              0x00000008 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_9_SPARE_0                         19:16 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_9_SPARE_0_INIT               0x00000008 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_9_SPARE_1                         23:20 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_9_SPARE_1_INIT               0x00000008 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_9_SPARE_2                         27:24 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_9_SPARE_2_INIT               0x00000008 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_9_SPARE_3                         31:28 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_9_SPARE_3_INIT               0x00000008 /* RWI-V */
#define NV_PBUS_DEBUG_PRIV_ASRC                          0x000010E0 /* RW-4R */
#define NV_PBUS_DEBUG_PRIV_ASRC_0__ALIAS_1  NV_PBUS_DEBUG_PRIV_ASRC /*       */
#define NV_PBUS_DEBUG_PRIV_ASRC_EAST_SEL                      31:31 /* RWIVF */
#define NV_PBUS_DEBUG_PRIV_ASRC_EAST_NORMAL              0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_PRIV_ASRC_EAST_OVERIDE             0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_PRIV_ASRC_EAST_VALUE                    30:24 /* RWIVF */
#define NV_PBUS_DEBUG_PRIV_ASRC_EAST_VALUE_0             0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_PRIV_ASRC_SOUTH_SEL                     23:23 /* RWIVF */
#define NV_PBUS_DEBUG_PRIV_ASRC_SOUTH_NORMAL             0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_PRIV_ASRC_SOUTH_OVERIDE            0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_PRIV_ASRC_SOUTH_VALUE                   22:16 /* RWIVF */
#define NV_PBUS_DEBUG_PRIV_ASRC_SOUTH_VALUE_0            0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_PRIV_ASRC_WEST_SEL                      15:15 /* RWIVF */
#define NV_PBUS_DEBUG_PRIV_ASRC_WEST_NORMAL              0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_PRIV_ASRC_WEST_OVERIDE             0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_PRIV_ASRC_WEST_VALUE                     14:8 /* RWIVF */
#define NV_PBUS_DEBUG_PRIV_ASRC_WEST_VALUE_0             0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_PRIV_ASRC_NORTH_SEL                       7:7 /* RWIVF */
#define NV_PBUS_DEBUG_PRIV_ASRC_NORTH_NORMAL             0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_PRIV_ASRC_NORTH_OVERIDE            0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_PRIV_ASRC_NORTH_VALUE                     6:0 /* RWIVF */
#define NV_PBUS_DEBUG_PRIV_ASRC_NORTH_VALUE_0            0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_PRIV_ASRC_1                        0x000010E4 /* RW-4R */
#define NV_PBUS_DEBUG_PRIV_ASRC_1_BK_0_SEL                    31:31 /* RWIVF */
#define NV_PBUS_DEBUG_PRIV_ASRC_1_BK_0_NORMAL            0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_PRIV_ASRC_1_BK_0_OVERIDE           0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_PRIV_ASRC_1_BK_0_VALUE                  30:24 /* RWIVF */
#define NV_PBUS_DEBUG_PRIV_ASRC_1_BK_0_VALUE_0           0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_PRIV_ASRC_1_BK_1_SEL                    23:23 /* RWIVF */
#define NV_PBUS_DEBUG_PRIV_ASRC_1_BK_1_NORMAL            0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_PRIV_ASRC_1_BK_1_OVERIDE           0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_PRIV_ASRC_1_BK_1_VALUE                  22:16 /* RWIVF */
#define NV_PBUS_DEBUG_PRIV_ASRC_1_BK_1_VALUE_0           0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_PRIV_ASRC_1_BK_2_SEL                    15:15 /* RWIVF */
#define NV_PBUS_DEBUG_PRIV_ASRC_1_BK_2_NORMAL            0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_PRIV_ASRC_1_BK_2_OVERIDE           0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_PRIV_ASRC_1_BK_2_VALUE                   14:8 /* RWIVF */
#define NV_PBUS_DEBUG_PRIV_ASRC_1_BK_2_VALUE_0           0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_PRIV_ASRC_1_BK_3_SEL                      7:7 /* RWIVF */
#define NV_PBUS_DEBUG_PRIV_ASRC_1_BK_3_NORMAL            0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_PRIV_ASRC_1_BK_3_OVERIDE           0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_PRIV_ASRC_1_BK_3_VALUE                    6:0 /* RWIVF */
#define NV_PBUS_DEBUG_PRIV_ASRC_1_BK_3_VALUE_0           0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_10                           0x000010E8 /* RW-4R */
#define NV_PBUS_DEBUG_CTRIM_10_M_NW_TRIM                        3:0 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_10_M_NW_TRIM_8               0x00000008 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_10_M_FB_TRIM                        7:4 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_10_M_FB_TRIM_8               0x00000008 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_10_M_PA0_TRIM                      11:8 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_10_M_PA0_TRIM_8              0x00000008 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_10_M_PA1_TRIM                     15:12 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_10_M_PA1_TRIM_8              0x00000008 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_10_M_PA2_TRIM                     19:16 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_10_M_PA2_TRIM_8              0x00000008 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_10_M_PA3_TRIM                     23:20 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_10_M_PA3_TRIM_8              0x00000008 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_10_SPARE_0                        27:24 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_10_SPARE_0_INIT              0x00000008 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_10_SPARE_1                        31:28 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_10_SPARE_1_INIT              0x00000008 /* RWI-V */
#define NV_PBUS_DEBUG_DUALHEAD_CTL                       0x000010F0 /* RW-4R */
#define NV_PBUS_DEBUG_DUALHEAD_CTL_BLAH                        31:0 /* RWIUF */
#define NV_PBUS_DEBUG_DUALHEAD_CTL_BLAH_0                0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_RDIBIST_CTL                        0x000010F4 /* RW-4R */
#define NV_PBUS_DEBUG_RDIBIST_CTL_RAM_FIRST                    10:0 /* RWXVF */
#define NV_PBUS_DEBUG_RDIBIST_CTL_RAM_FIRST_0            0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_RDIBIST_CTL_TEST                        15:15 /* RWIVF */
#define NV_PBUS_DEBUG_RDIBIST_CTL_TEST_GO                0x00000001 /* -W--V */
#define NV_PBUS_DEBUG_RDIBIST_CTL_TEST_RUNNING           0x00000001 /* R---V */
#define NV_PBUS_DEBUG_RDIBIST_CTL_TEST_DONE              0x00000000 /* R-I-V */
#define NV_PBUS_DEBUG_RDIBIST_CTL_RAM_LAST                    26:16 /* RWXVF */
#define NV_PBUS_DEBUG_RDIBIST_CTL_RAM_LAST_7FF           0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_RDIBIST_INDEX                      0x000010F8 /* RW-4R */
#define NV_PBUS_DEBUG_RDIBIST_INDEX_ADDR                        4:0 /* RWXVF */
#define NV_PBUS_DEBUG_RDIBIST_INDEX_ADDR_0               0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_RDIBIST_INDEX_PASS_31_0            0x00000000 /*       */
#define NV_PBUS_DEBUG_RDIBIST_INDEX_PASS_63_32           0x00000001 /*       */
#define NV_PBUS_DEBUG_RDIBIST_INDEX_PASS_95_64           0x00000002 /*       */
#define NV_PBUS_DEBUG_RDIBIST_INDEX_PASS_127_96          0x00000003 /*       */
#define NV_PBUS_DEBUG_RDIBIST_INDEX_PASS_159_128         0x00000004 /*       */
#define NV_PBUS_DEBUG_RDIBIST_INDEX_PASS_191_160         0x00000005 /*       */
#define NV_PBUS_DEBUG_RDIBIST_INDEX_PASS_223_192         0x00000006 /*       */
#define NV_PBUS_DEBUG_RDIBIST_INDEX_PASS_255_224         0x00000007 /*       */
#define NV_PBUS_DEBUG_RDIBIST_INDEX_PASS_287_256         0x00000008 /*       */
#define NV_PBUS_DEBUG_RDIBIST_INDEX_FAIL_RAM             0x00000009 /*       */
#define NV_PBUS_DEBUG_RDIBIST_INDEX_FAIL_DWORD           0x0000000A /*       */
#define NV_PBUS_DEBUG_RDIBIST_DATA                       0x000010FC /* RW-4R */
#define NV_PBUS_DEBUG_RDIBIST_DATA_VALUE                       31:0 /* RWXVF */
#define NV_PBUS_INTR_0                                   0x00001100 /* RW-4R */
#define NV_PBUS_INTR_0_PCI_BUS_ERROR                            0:0 /* RWXVF */
#define NV_PBUS_INTR_0_PCI_BUS_ERROR_NOT_PENDING         0x00000000 /* R---V */
#define NV_PBUS_INTR_0_PCI_BUS_ERROR_PENDING             0x00000001 /* R---V */
#define NV_PBUS_INTR_0_PCI_BUS_ERROR_RESET               0x00000001 /* -W--V */
#define NV_PBUS_INTR_0_HOTPLUG                                  4:4 /* RWXVF */
#define NV_PBUS_INTR_0_HOTPLUG_NOT_PENDING               0x00000000 /* R---V */
#define NV_PBUS_INTR_0_HOTPLUG_PENDING                   0x00000001 /* R---V */
#define NV_PBUS_INTR_0_HOTPLUG_RESET                     0x00000001 /* -W--V */
#define NV_PBUS_INTR_EN_0                                0x00001140 /* RWI4R */
#define NV_PBUS_INTR_EN_0_PCI_BUS_ERROR                         0:0 /* RWIVF */
#define NV_PBUS_INTR_EN_0_PCI_BUS_ERROR_DISABLED         0x00000000 /* RWI-V */
#define NV_PBUS_INTR_EN_0_PCI_BUS_ERROR_ENABLED          0x00000001 /* RW--V */
#define NV_PBUS_INTR_EN_0_HOTPLUG                               4:4 /* RWIVF */
#define NV_PBUS_INTR_EN_0_HOTPLUG_DISABLED               0x00000000 /* RWI-V */
#define NV_PBUS_INTR_EN_0_HOTPLUG_ENABLED                0x00000001 /* RW--V */
#define NV_PBUS_ROM_CONFIG                               0x00001200 /* RWI4R */
#define NV_PBUS_ROM_CONFIG_TW1                                  5:0 /* RWIVF */
#define NV_PBUS_ROM_CONFIG_TW1_DEFAULT                   0x0000000F /* RWI-V */
#define NV_PBUS_ROM_CONFIG_TW0                                  7:6 /* RWIVF */
#define NV_PBUS_ROM_CONFIG_TW0_DEFAULT                   0x00000003 /* RWI-V */
#define NV_PBUS_FBIO_CFG                                 0x00001210 /* RW-4R */
#define NV_PBUS_FBIO_CFG_ADR_EDGE                               0:0 /* RWIVF */
#define NV_PBUS_FBIO_CFG_ADR_EDGE_QUARTER                0x00000000 /* RWI-V */
#define NV_PBUS_FBIO_CFG_ADR_EDGE_HALF                   0x00000001 /* RW--V */
#define NV_PBUS_FBIO_CFG_CLK_EDGE                               4:4 /* RWIVF */
#define NV_PBUS_FBIO_CFG_CLK_EDGE_NORMAL                 0x00000000 /* RWI-V */
#define NV_PBUS_FBIO_CFG_CLK_EDGE_EARLY                  0x00000001 /* RW--V */
#define NV_PBUS_FBIO_CFG_DQS_EDGE                               8:8 /* RWIVF */
#define NV_PBUS_FBIO_CFG_DQS_EDGE_NORMAL                 0x00000000 /* RWI-V */
#define NV_PBUS_FBIO_CFG_DQS_EDGE_EARLY                  0x00000001 /* RW--V */
#define NV_PBUS_FBIO_CFG_WRITE_DATA                           12:12 /* RWIVF */
#define NV_PBUS_FBIO_CFG_WRITE_DATA_STROBED              0x00000000 /* RWI-V */
#define NV_PBUS_FBIO_CFG_WRITE_DATA_CLOCKED              0x00000001 /* RW--V */
#define NV_PBUS_FBIO_CFG_QUSE                                 17:16 /* RWIVF */
#define NV_PBUS_FBIO_CFG_QUSE_NORMAL                     0x00000000 /* RWI-V */
#define NV_PBUS_FBIO_CFG_QUSE_ALWAYS                     0x00000001 /* RW--V */
#define NV_PBUS_FBIO_CFG_QUSE_HOLD                       0x00000002 /* RW--V */
#define NV_PBUS_FBIO_CFG_QUSE_RESERVED                   0x00000003 /* RW--V */
#define NV_PBUS_FBIO_CFG_RESERVED0                            20:20 /* RWIVF */
#define NV_PBUS_FBIO_CFG_RESERVED0_0                     0x00000000 /* RWI-V */
#define NV_PBUS_FBIO_CFG_RESERVED0_1                     0x00000001 /* RW--V */
#define NV_PBUS_FBIO_CFG_DQSEN                                25:24 /* RWIVF */
#define NV_PBUS_FBIO_CFG_DQSEN_NORMAL                    0x00000000 /* RWI-V */
#define NV_PBUS_FBIO_CFG_DQSEN_HOLD                      0x00000001 /* RW--V */
#define NV_PBUS_FBIO_CFG_DQSEN_PULL                      0x00000002 /* RW--V */
#define NV_PBUS_FBIO_CFG_DQSEN_EXTENDED                  0x00000003 /* RW--V */
#define NV_PBUS_FBIO_CFG_DEN                                  27:26 /* RWIVF */
#define NV_PBUS_FBIO_CFG_DEN_NORMAL                      0x00000000 /* RWI-V */
#define NV_PBUS_FBIO_CFG_DEN_HOLD                        0x00000001 /* RW--V */
#define NV_PBUS_FBIO_CFG_DEN_EARLY                       0x00000002 /* RW--V */
#define NV_PBUS_FBIO_CFG_DEN_EXTENDED                    0x00000003 /* RW--V */
#define NV_PBUS_FBIO_CFG_RESERVED1                            28:28 /* RWIVF */
#define NV_PBUS_FBIO_CFG_RESERVED1_0                     0x00000000 /* RWI-V */
#define NV_PBUS_FBIO_CFG_RESERVED1_1                     0x00000001 /* RW--V */
#define NV_PBUS_FBIO_DLY                                 0x00001214 /* RW-4R */
#define NV_PBUS_FBIO_DLY_DATAIB_A                               2:0 /* RWIUF */
#define NV_PBUS_FBIO_DLY_DATAIB_A_NONE                   0x00000000 /* RWI-V */
#define NV_PBUS_FBIO_DLY_DATAIB_A_FULL                   0x00000007 /* RW--V */
#define NV_PBUS_FBIO_DLY_DQSCK_A                                4:3 /* RWIUF */
#define NV_PBUS_FBIO_DLY_DQSCK_A_NONE                    0x00000000 /* RWI-V */
#define NV_PBUS_FBIO_DLY_DQSCK_A_FULL                    0x00000003 /* RW--V */
#define NV_PBUS_FBIO_DLY_DQSIB_A                                7:5 /* RWIUF */
#define NV_PBUS_FBIO_DLY_DQSIB_A_NONE                    0x00000000 /* RW--V */
#define NV_PBUS_FBIO_DLY_DQSIB_A_FULL                    0x00000007 /* RWI-V */
#define NV_PBUS_FBIO_DLY_DATAIB_B                              10:8 /* RWIUF */
#define NV_PBUS_FBIO_DLY_DATAIB_B_NONE                   0x00000000 /* RWI-V */
#define NV_PBUS_FBIO_DLY_DATAIB_B_FULL                   0x00000007 /* RW--V */
#define NV_PBUS_FBIO_DLY_DQSCK_B                              12:11 /* RWIUF */
#define NV_PBUS_FBIO_DLY_DQSCK_B_NONE                    0x00000000 /* RWI-V */
#define NV_PBUS_FBIO_DLY_DQSCK_B_FULL                    0x00000003 /* RW--V */
#define NV_PBUS_FBIO_DLY_DQSIB_B                              15:13 /* RWIUF */
#define NV_PBUS_FBIO_DLY_DQSIB_B_NONE                    0x00000000 /* RW--V */
#define NV_PBUS_FBIO_DLY_DQSIB_B_FULL                    0x00000007 /* RWI-V */
#define NV_PBUS_FBIO_DLY_DATAIB_C                             18:16 /* RWIUF */
#define NV_PBUS_FBIO_DLY_DATAIB_C_NONE                   0x00000000 /* RWI-V */
#define NV_PBUS_FBIO_DLY_DATAIB_C_FULL                   0x00000007 /* RW--V */
#define NV_PBUS_FBIO_DLY_DQSCK_C                              20:19 /* RWIUF */
#define NV_PBUS_FBIO_DLY_DQSCK_C_NONE                    0x00000000 /* RWI-V */
#define NV_PBUS_FBIO_DLY_DQSCK_C_FULL                    0x00000003 /* RW--V */
#define NV_PBUS_FBIO_DLY_DQSIB_C                              23:21 /* RWIUF */
#define NV_PBUS_FBIO_DLY_DQSIB_C_NONE                    0x00000000 /* RW--V */
#define NV_PBUS_FBIO_DLY_DQSIB_C_FULL                    0x00000007 /* RWI-V */
#define NV_PBUS_FBIO_DLY_DATAIB_D                             26:24 /* RWIUF */ 
#define NV_PBUS_FBIO_DLY_DATAIB_D_NONE                   0x00000000 /* RWI-V */
#define NV_PBUS_FBIO_DLY_DATAIB_D_FULL                   0x00000007 /* RW--V */
#define NV_PBUS_FBIO_DLY_DQSCK_D                              28:27 /* RWIUF */
#define NV_PBUS_FBIO_DLY_DQSCK_D_NONE                    0x00000000 /* RWI-V */
#define NV_PBUS_FBIO_DLY_DQSCK_D_FULL                    0x00000003 /* RW--V */
#define NV_PBUS_FBIO_DLY_DQSIB_D                              31:29 /* RWIUF */
#define NV_PBUS_FBIO_DLY_DQSIB_D_NONE                    0x00000000 /* RW--V */
#define NV_PBUS_FBIO_DLY_DQSIB_D_FULL                    0x00000007 /* RWI-V */
#define NV_PBUS_FBIO_RAM                                 0x00001218 /* RW-4R */
#define NV_PBUS_FBIO_RAM_DQS_SIZE                               0:0 /* RWIVF */
#define NV_PBUS_FBIO_RAM_DQS_SIZE_32                     0x00000000 /* RWI-V */
#define NV_PBUS_FBIO_RAM_DQS_SIZE_8                      0x00000001 /* RW--V */
#define NV_PBUS_FBIO_RAM_TYPE                                   8:8 /* RWIUF */
#define NV_PBUS_FBIO_RAM_TYPE_DDR                        0x00000000 /* RWI-V */
#define NV_PBUS_FBIO_RAM_TYPE_SDR                        0x00000001 /* RW--V */
#define NV_PBUS_FBIO_RAM_VREF                                 16:16 /* RWIUF */
#define NV_PBUS_FBIO_RAM_VREF_DISABLED                   0x00000000 /* RWI-V */
#define NV_PBUS_FBIO_RAM_VREF_ENABLED                    0x00000001 /* RW--V */
#define NV_PBUS_FBIO_RAM_RESERVED0                            24:24 /* RWIUF */
#define NV_PBUS_FBIO_RAM_RESERVED0_0                     0x00000000 /* RWI-V */
#define NV_PBUS_FBIO_RAM_RESERVED0_1                     0x00000001 /* RW--V */
#define NV_PBUS_FBIO_CALCNT                              0x0000121C /* RW-4R */
#define NV_PBUS_FBIO_CALCNT_COUNT                              31:0 /* RW-SF */
#define NV_PBUS_FBIO_CALCNT_OVERFLOW                          31:31 /* RW-VF */
#define NV_PBUS_FBIO_CALEN                               0x00001220 /* RW-4R */
#define NV_PBUS_FBIO_CALEN_VCC_A                                0:0 /* RWIVF */
#define NV_PBUS_FBIO_CALEN_VCC_A_OFF                     0x00000000 /* RWI-V */
#define NV_PBUS_FBIO_CALEN_VCC_A_ON                      0x00000001 /* RWI-V */
#define NV_PBUS_FBIO_CALEN_VCC_B                                1:1 /* RWIVF */
#define NV_PBUS_FBIO_CALEN_VCC_B_OFF                     0x00000000 /* RWI-V */
#define NV_PBUS_FBIO_CALEN_VCC_B_ON                      0x00000001 /* RW--V */
#define NV_PBUS_FBIO_CALEN_VCC_C                                2:2 /* RWIVF */
#define NV_PBUS_FBIO_CALEN_VCC_C_OFF                     0x00000000 /* RWI-V */
#define NV_PBUS_FBIO_CALEN_VCC_C_ON                      0x00000001 /* RW--V */
#define NV_PBUS_FBIO_CALEN_VCC_D                                3:3 /* RWIVF */
#define NV_PBUS_FBIO_CALEN_VCC_D_OFF                     0x00000000 /* RWI-V */
#define NV_PBUS_FBIO_CALEN_VCC_D_ON                      0x00000001 /* RW--V */
#define NV_PBUS_FBIO_CALEN_VCCQ_A                               8:8 /* RWIVF */
#define NV_PBUS_FBIO_CALEN_VCCQ_A_OFF                    0x00000000 /* RWI-V */
#define NV_PBUS_FBIO_CALEN_VCCQ_A_ON                     0x00000001 /* RW--V */
#define NV_PBUS_FBIO_CALEN_VCCQ_B                               9:9 /* RWIVF */
#define NV_PBUS_FBIO_CALEN_VCCQ_B_OFF                    0x00000000 /* RWI-V */
#define NV_PBUS_FBIO_CALEN_VCCQ_B_ON                     0x00000001 /* RW--V */
#define NV_PBUS_FBIO_CALEN_VCCQ_C                             10:10 /* RWIVF */
#define NV_PBUS_FBIO_CALEN_VCCQ_C_OFF                    0x00000000 /* RWI-V */
#define NV_PBUS_FBIO_CALEN_VCCQ_C_ON                     0x00000001 /* RW--V */
#define NV_PBUS_FBIO_CALEN_VCCQ_D                             11:11 /* RWIVF */
#define NV_PBUS_FBIO_CALEN_VCCQ_D_OFF                    0x00000000 /* RWI-V */
#define NV_PBUS_FBIO_CALEN_VCCQ_D_ON                     0x00000001 /* RW--V */
#define NV_PBUS_FBIO_CALEN_PN_A                               16:16 /* RWIVF */
#define NV_PBUS_FBIO_CALEN_PN_A_OFF                      0x00000000 /* RWI-V */
#define NV_PBUS_FBIO_CALEN_PN_A_ON                       0x00000001 /* RW--V */
#define NV_PBUS_FBIO_CALEN_PN_B                               17:17 /* RWIVF */
#define NV_PBUS_FBIO_CALEN_PN_B_OFF                      0x00000000 /* RWI-V */
#define NV_PBUS_FBIO_CALEN_PN_B_ON                       0x00000001 /* RW--V */
#define NV_PBUS_FBIO_CALEN_PN_C                               18:18 /* RWIVF */
#define NV_PBUS_FBIO_CALEN_PN_C_OFF                      0x00000000 /* RWI-V */
#define NV_PBUS_FBIO_CALEN_PN_C_ON                       0x00000001 /* RW--V */
#define NV_PBUS_FBIO_CALEN_PN_D                               19:19 /* RWIVF */
#define NV_PBUS_FBIO_CALEN_PN_D_OFF                      0x00000000 /* RWI-V */
#define NV_PBUS_FBIO_CALEN_PN_D_ON                       0x00000001 /* RW--V */
#define NV_PBUS_FBIO_CALPN                               0x00001224 /* R--4R */
#define NV_PBUS_FBIO_CALPN_A                                    4:0 /* R--VF */
#define NV_PBUS_FBIO_CALPN_B                                   12:8 /* R--VF */
#define NV_PBUS_FBIO_CALPN_C                                  20:16 /* R--VF */
#define NV_PBUS_FBIO_CALPN_D                                  28:24 /* R--VF */
#define NV_PBUS_FBIO_CALSEL                              0x00001228 /* RW-4R */
#define NV_PBUS_FBIO_CALSEL_SOURCE                              3:0 /* RW-VF */
#define NV_PBUS_FBIO_CALSEL_SOURCE_VCC_A                 0x00000000 /* RW--V */
#define NV_PBUS_FBIO_CALSEL_SOURCE_VCC_B                 0x00000001 /* RW--V */
#define NV_PBUS_FBIO_CALSEL_SOURCE_VCC_C                 0x00000002 /* RW--V */
#define NV_PBUS_FBIO_CALSEL_SOURCE_VCC_D                 0x00000003 /* RW--V */
#define NV_PBUS_FBIO_CALSEL_SOURCE_VCCQ_A                0x00000004 /* RW--V */
#define NV_PBUS_FBIO_CALSEL_SOURCE_VCCQ_B                0x00000005 /* RW--V */
#define NV_PBUS_FBIO_CALSEL_SOURCE_VCCQ_C                0x00000006 /* RW--V */
#define NV_PBUS_FBIO_CALSEL_SOURCE_VCCQ_D                0x00000007 /* RW--V */
#define NV_PBUS_FBIO_CALSEL_SOURCE_RESERVED0             0x00000008 /* RW--V */
#define NV_PBUS_FBIO_CALSEL_SOURCE_RESERVED1             0x00000009 /* RW--V */
#define NV_PBUS_FBIO_CALSEL_SOURCE_RESERVED2             0x0000000A /* RW--V */
#define NV_PBUS_FBIO_CALSEL_SOURCE_RESERVED3             0x0000000B /* RW--V */
#define NV_PBUS_FBIO_CALSEL_SOURCE_RESERVED4             0x0000000C /* RW--V */
#define NV_PBUS_FBIO_CALSEL_SOURCE_RESERVED5             0x0000000D /* RW--V */
#define NV_PBUS_FBIO_CALSEL_SOURCE_PCI                   0x0000000E /* RW--V */
#define NV_PBUS_FBIO_CALSEL_SOURCE_CORE                  0x0000000F /* RW--V */
#define NV_PBUS_FBIO_CALSEL_REF_SEL                             8:8 /* RWIVF */
#define NV_PBUS_FBIO_CALSEL_REF_SEL_XTAL                 0x00000000 /* RWI-V */
#define NV_PBUS_FBIO_CALSEL_REF_SEL_PCICLK               0x00000001 /* RW--V */
#define NV_PBUS_FBIO_CALSEL_REF_DIV                           19:16 /* RW-UF */
#define NV_PBUS_FBIO_CALSEL_REF_DIV_0                    0x00000000 /* RW--V */
#define NV_PBUS_FBIO_CALSEL_REF_DIV_4                    0x00000004 /* RW--V */
#define NV_PBUS_FBIO_CALSEL_REF_DIV_16                   0x0000000F /* RW--V */
#define NV_PBUS_FBIO_ADRDRV                              0x0000122C /* RW-4R */
#define NV_PBUS_FBIO_ADRDRV_A_FALL                              3:0 /* RWIUF */
#define NV_PBUS_FBIO_ADRDRV_A_FALL_INIT                  0x0000000A /* RWIUV */
#define NV_PBUS_FBIO_ADRDRV_A_RISE                              7:4 /* RWIUF */
#define NV_PBUS_FBIO_ADRDRV_A_RISE_INIT                  0x0000000A /* RWIUV */
#define NV_PBUS_FBIO_ADRDRV_B_FALL                             11:8 /* RWIUF */
#define NV_PBUS_FBIO_ADRDRV_B_FALL_INIT                  0x0000000A /* RWIUV */
#define NV_PBUS_FBIO_ADRDRV_B_RISE                            15:12 /* RWIUF */
#define NV_PBUS_FBIO_ADRDRV_B_RISE_INIT                  0x0000000A /* RWIUV */
#define NV_PBUS_FBIO_ADRDRV_C_FALL                            19:16 /* RWIUF */
#define NV_PBUS_FBIO_ADRDRV_C_FALL_INIT                  0x0000000A /* RWIUV */
#define NV_PBUS_FBIO_ADRDRV_C_RISE                            23:20 /* RWIUF */
#define NV_PBUS_FBIO_ADRDRV_C_RISE_INIT                  0x0000000A /* RWIUV */
#define NV_PBUS_FBIO_ADRDRV_D_FALL                            27:24 /* RWIUF */
#define NV_PBUS_FBIO_ADRDRV_D_FALL_INIT                  0x0000000A /* RWIUV */
#define NV_PBUS_FBIO_ADRDRV_D_RISE                            31:28 /* RWIUF */
#define NV_PBUS_FBIO_ADRDRV_D_RISE_INIT                  0x0000000A /* RWIUV */
#define NV_PBUS_FBIO_CLKDRV                              0x00001230 /* RW-4R */
#define NV_PBUS_FBIO_CLKDRV_A_FALL                              3:0 /* RWIUF */
#define NV_PBUS_FBIO_CLKDRV_A_FALL_INIT                  0x0000000A /* RWIUV */
#define NV_PBUS_FBIO_CLKDRV_A_RISE                              7:4 /* RWIUF */
#define NV_PBUS_FBIO_CLKDRV_A_RISE_INIT                  0x0000000A /* RWIUV */
#define NV_PBUS_FBIO_CLKDRV_B_FALL                             11:8 /* RWIUF */
#define NV_PBUS_FBIO_CLKDRV_B_FALL_INIT                  0x0000000A /* RWIUV */
#define NV_PBUS_FBIO_CLKDRV_B_RISE                            15:12 /* RWIUF */
#define NV_PBUS_FBIO_CLKDRV_B_RISE_INIT                  0x0000000A /* RWIUV */
#define NV_PBUS_FBIO_CLKDRV_C_FALL                            19:16 /* RWIUF */
#define NV_PBUS_FBIO_CLKDRV_C_FALL_INIT                  0x0000000A /* RWIUV */
#define NV_PBUS_FBIO_CLKDRV_C_RISE                            23:20 /* RWIUF */
#define NV_PBUS_FBIO_CLKDRV_C_RISE_INIT                  0x0000000A /* RWIUV */
#define NV_PBUS_FBIO_CLKDRV_D_FALL                            27:24 /* RWIUF */
#define NV_PBUS_FBIO_CLKDRV_D_FALL_INIT                  0x0000000A /* RWIUV */
#define NV_PBUS_FBIO_CLKDRV_D_RISE                            31:28 /* RWIUF */
#define NV_PBUS_FBIO_CLKDRV_D_RISE_INIT                  0x0000000A /* RWIUV */
#define NV_PBUS_FBIO_DATDRV                              0x00001234 /* RW-4R */
#define NV_PBUS_FBIO_DATDRV_A_FALL                              3:0 /* RWIUF */
#define NV_PBUS_FBIO_DATDRV_A_FALL_INIT                  0x0000000A /* RWIUV */
#define NV_PBUS_FBIO_DATDRV_A_RISE                              7:4 /* RWIUF */
#define NV_PBUS_FBIO_DATDRV_A_RISE_INIT                  0x0000000A /* RWIUV */
#define NV_PBUS_FBIO_DATDRV_B_FALL                             11:8 /* RWIUF */
#define NV_PBUS_FBIO_DATDRV_B_FALL_INIT                  0x0000000A /* RWIUV */
#define NV_PBUS_FBIO_DATDRV_B_RISE                            15:12 /* RWIUF */
#define NV_PBUS_FBIO_DATDRV_B_RISE_INIT                  0x0000000A /* RWIUV */
#define NV_PBUS_FBIO_DATDRV_C_FALL                            19:16 /* RWIUF */
#define NV_PBUS_FBIO_DATDRV_C_FALL_INIT                  0x0000000A /* RWIUV */
#define NV_PBUS_FBIO_DATDRV_C_RISE                            23:20 /* RWIUF */
#define NV_PBUS_FBIO_DATDRV_C_RISE_INIT                  0x0000000A /* RWIUV */
#define NV_PBUS_FBIO_DATDRV_D_FALL                            27:24 /* RWIUF */
#define NV_PBUS_FBIO_DATDRV_D_FALL_INIT                  0x0000000A /* RWIUV */
#define NV_PBUS_FBIO_DATDRV_D_RISE                            31:28 /* RWIUF */
#define NV_PBUS_FBIO_DATDRV_D_RISE_INIT                  0x0000000A /* RWIUV */
#define NV_PBUS_FBIO_DQSDRV                              0x00001238 /* RW-4R */
#define NV_PBUS_FBIO_DQSDRV_A_FALL                              3:0 /* RWIUF */
#define NV_PBUS_FBIO_DQSDRV_A_FALL_INIT                  0x0000000A /* RWIUV */
#define NV_PBUS_FBIO_DQSDRV_A_RISE                              7:4 /* RWIUF */
#define NV_PBUS_FBIO_DQSDRV_A_RISE_INIT                  0x0000000A /* RWIUV */
#define NV_PBUS_FBIO_DQSDRV_B_FALL                             11:8 /* RWIUF */
#define NV_PBUS_FBIO_DQSDRV_B_FALL_INIT                  0x0000000A /* RWIUV */
#define NV_PBUS_FBIO_DQSDRV_B_RISE                            15:12 /* RWIUF */
#define NV_PBUS_FBIO_DQSDRV_B_RISE_INIT                  0x0000000A /* RWIUV */
#define NV_PBUS_FBIO_DQSDRV_C_FALL                            19:16 /* RWIUF */
#define NV_PBUS_FBIO_DQSDRV_C_FALL_INIT                  0x0000000A /* RWIUV */
#define NV_PBUS_FBIO_DQSDRV_C_RISE                            23:20 /* RWIUF */
#define NV_PBUS_FBIO_DQSDRV_C_RISE_INIT                  0x0000000A /* RWIUV */
#define NV_PBUS_FBIO_DQSDRV_D_FALL                            27:24 /* RWIUF */
#define NV_PBUS_FBIO_DQSDRV_D_FALL_INIT                  0x0000000A /* RWIUV */
#define NV_PBUS_FBIO_DQSDRV_D_RISE                            31:28 /* RWIUF */
#define NV_PBUS_FBIO_DQSDRV_D_RISE_INIT                  0x0000000A /* RWIUV */
#define NV_PBUS_FBIO_ADRSLW                              0x0000123C /* RW-4R */
#define NV_PBUS_FBIO_ADRSLW_A_FALL                              3:0 /* RWIUF */
#define NV_PBUS_FBIO_ADRSLW_A_FALL_INIT                  0x00000001 /* RWIUV */
#define NV_PBUS_FBIO_ADRSLW_A_RISE                              7:4 /* RWIUF */
#define NV_PBUS_FBIO_ADRSLW_A_RISE_INIT                  0x00000001 /* RWIUV */
#define NV_PBUS_FBIO_ADRSLW_B_FALL                             11:8 /* RWIUF */
#define NV_PBUS_FBIO_ADRSLW_B_FALL_INIT                  0x00000001 /* RWIUV */
#define NV_PBUS_FBIO_ADRSLW_B_RISE                            15:12 /* RWIUF */
#define NV_PBUS_FBIO_ADRSLW_B_RISE_INIT                  0x00000001 /* RWIUV */
#define NV_PBUS_FBIO_ADRSLW_C_FALL                            19:16 /* RWIUF */
#define NV_PBUS_FBIO_ADRSLW_C_FALL_INIT                  0x00000001 /* RWIUV */
#define NV_PBUS_FBIO_ADRSLW_C_RISE                            23:20 /* RWIUF */
#define NV_PBUS_FBIO_ADRSLW_C_RISE_INIT                  0x00000001 /* RWIUV */
#define NV_PBUS_FBIO_ADRSLW_D_FALL                            27:24 /* RWIUF */
#define NV_PBUS_FBIO_ADRSLW_D_FALL_INIT                  0x00000001 /* RWIUV */
#define NV_PBUS_FBIO_ADRSLW_D_RISE                            31:28 /* RWIUF */
#define NV_PBUS_FBIO_ADRSLW_D_RISE_INIT                  0x00000001 /* RWIUV */
#define NV_PBUS_FBIO_CLKSLW                              0x00001240 /* RW-4R */
#define NV_PBUS_FBIO_CLKSLW_A_FALL                              3:0 /* RWIUF */
#define NV_PBUS_FBIO_CLKSLW_A_FALL_INIT                  0x00000001 /* RWIUV */
#define NV_PBUS_FBIO_CLKSLW_A_RISE                              7:4 /* RWIUF */
#define NV_PBUS_FBIO_CLKSLW_A_RISE_INIT                  0x00000001 /* RWIUV */
#define NV_PBUS_FBIO_CLKSLW_B_FALL                             11:8 /* RWIUF */
#define NV_PBUS_FBIO_CLKSLW_B_FALL_INIT                  0x00000001 /* RWIUV */
#define NV_PBUS_FBIO_CLKSLW_B_RISE                            15:12 /* RWIUF */
#define NV_PBUS_FBIO_CLKSLW_B_RISE_INIT                  0x00000001 /* RWIUV */
#define NV_PBUS_FBIO_CLKSLW_C_FALL                            19:16 /* RWIUF */
#define NV_PBUS_FBIO_CLKSLW_C_FALL_INIT                  0x00000001 /* RWIUV */
#define NV_PBUS_FBIO_CLKSLW_C_RISE                            23:20 /* RWIUF */
#define NV_PBUS_FBIO_CLKSLW_C_RISE_INIT                  0x00000001 /* RWIUV */
#define NV_PBUS_FBIO_CLKSLW_D_FALL                            27:24 /* RWIUF */
#define NV_PBUS_FBIO_CLKSLW_D_FALL_INIT                  0x00000001 /* RWIUV */
#define NV_PBUS_FBIO_CLKSLW_D_RISE                            31:28 /* RWIUF */
#define NV_PBUS_FBIO_CLKSLW_D_RISE_INIT                  0x00000001 /* RWIUV */
#define NV_PBUS_FBIO_DATSLW                              0x00001244 /* RW-4R */
#define NV_PBUS_FBIO_DATSLW_A_FALL                              3:0 /* RWIUF */
#define NV_PBUS_FBIO_DATSLW_A_FALL_INIT                  0x00000001 /* RWIUV */
#define NV_PBUS_FBIO_DATSLW_A_RISE                              7:4 /* RWIUF */
#define NV_PBUS_FBIO_DATSLW_A_RISE_INIT                  0x00000001 /* RWIUV */
#define NV_PBUS_FBIO_DATSLW_B_FALL                             11:8 /* RWIUF */
#define NV_PBUS_FBIO_DATSLW_B_FALL_INIT                  0x00000001 /* RWIUV */
#define NV_PBUS_FBIO_DATSLW_B_RISE                            15:12 /* RWIUF */
#define NV_PBUS_FBIO_DATSLW_B_RISE_INIT                  0x00000001 /* RWIUV */
#define NV_PBUS_FBIO_DATSLW_C_FALL                            19:16 /* RWIUF */
#define NV_PBUS_FBIO_DATSLW_C_FALL_INIT                  0x00000001 /* RWIUV */
#define NV_PBUS_FBIO_DATSLW_C_RISE                            23:20 /* RWIUF */
#define NV_PBUS_FBIO_DATSLW_C_RISE_INIT                  0x00000001 /* RWIUV */
#define NV_PBUS_FBIO_DATSLW_D_FALL                            27:24 /* RWIUF */
#define NV_PBUS_FBIO_DATSLW_D_FALL_INIT                  0x00000001 /* RWIUV */
#define NV_PBUS_FBIO_DATSLW_D_RISE                            31:28 /* RWIUF */
#define NV_PBUS_FBIO_DATSLW_D_RISE_INIT                  0x00000001 /* RWIUV */
#define NV_PBUS_FBIO_DQSSLW                              0x00001248 /* RW-4R */
#define NV_PBUS_FBIO_DQSSLW_A_FALL                              3:0 /* RWIUF */
#define NV_PBUS_FBIO_DQSSLW_A_FALL_INIT                  0x00000001 /* RWIUV */
#define NV_PBUS_FBIO_DQSSLW_A_RISE                              7:4 /* RWIUF */
#define NV_PBUS_FBIO_DQSSLW_A_RISE_INIT                  0x00000001 /* RWIUV */
#define NV_PBUS_FBIO_DQSSLW_B_FALL                             11:8 /* RWIUF */
#define NV_PBUS_FBIO_DQSSLW_B_FALL_INIT                  0x00000001 /* RWIUV */
#define NV_PBUS_FBIO_DQSSLW_B_RISE                            15:12 /* RWIUF */
#define NV_PBUS_FBIO_DQSSLW_B_RISE_INIT                  0x00000001 /* RWIUV */
#define NV_PBUS_FBIO_DQSSLW_C_FALL                            19:16 /* RWIUF */
#define NV_PBUS_FBIO_DQSSLW_C_FALL_INIT                  0x00000001 /* RWIUV */
#define NV_PBUS_FBIO_DQSSLW_C_RISE                            23:20 /* RWIUF */
#define NV_PBUS_FBIO_DQSSLW_C_RISE_INIT                  0x00000001 /* RWIUV */
#define NV_PBUS_FBIO_DQSSLW_D_FALL                            27:24 /* RWIUF */
#define NV_PBUS_FBIO_DQSSLW_D_FALL_INIT                  0x00000001 /* RWIUV */
#define NV_PBUS_FBIO_DQSSLW_D_RISE                            31:28 /* RWIUF */
#define NV_PBUS_FBIO_DQSSLW_D_RISE_INIT                  0x00000001 /* RWIUV */
#define NV_PBUS_DISPIO_PADCTL                            0x0000124C /* RW-4R */
#define NV_PBUS_DISPIO_PADCTL_DATSLW_FALL                       3:0 /* RWIUF */
#define NV_PBUS_DISPIO_PADCTL_DATSLW_FALL_INIT           0x00000001 /* RWIUV */
#define NV_PBUS_DISPIO_PADCTL_DATSLW_RISE                       7:4 /* RWIUF */
#define NV_PBUS_DISPIO_PADCTL_DATSLW_RISE_INIT           0x00000001 /* RWIUV */
#define NV_PBUS_DISPIO_PADCTL_DATDRV_FALL                      11:8 /* RWIUF */
#define NV_PBUS_DISPIO_PADCTL_DATDRV_FALL_INIT           0x0000000A /* RWIUV */
#define NV_PBUS_DISPIO_PADCTL_DATDRV_RISE                     15:12 /* RWIUF */
#define NV_PBUS_DISPIO_PADCTL_DATDRV_RISE_INIT           0x0000000A /* RWIUV */
#define NV_PBUS_DISPIO_PADCTL_STBSLW_FALL                     19:16 /* RWIUF */
#define NV_PBUS_DISPIO_PADCTL_STBSLW_FALL_INIT           0x00000001 /* RWIUV */
#define NV_PBUS_DISPIO_PADCTL_STBSLW_RISE                     23:20 /* RWIUF */
#define NV_PBUS_DISPIO_PADCTL_STBSLW_RISE_INIT           0x00000001 /* RWIUV */
#define NV_PBUS_DISPIO_PADCTL_STBDRV_FALL                     27:24 /* RWIUF */
#define NV_PBUS_DISPIO_PADCTL_STBDRV_FALL_INIT           0x0000000A /* RWIUV */
#define NV_PBUS_DISPIO_PADCTL_STBDRV_RISE                     31:28 /* RWIUF */
#define NV_PBUS_DISPIO_PADCTL_STBDRV_RISE_INIT           0x0000000A /* RWIUV */

#define NV_PBUS_PCI_NV_2_REVISION_ID_A01                 0x000000A1 /* C---V */
#define NV_PBUS_PCI_NV_2_REVISION_ID_B01                 0x000000B1 /* ----V */
#define NV_PBUS_PCI_NV_5_BASE_ADDRESS                         31:24 /* RWXUF */
#define NV_PBUS_PCI_NV_17_AGP_REV_MAJOR_1                0x00000002 /* C---V */

/* dev_bus.ref */
/* dev_bus.ref */
/* dev_bus.ref */
#define NV_PRMIO_RMA_ID                                  0x00007100 /* R--4R */
#define NV_PRMIO_RMA_ID_CODE                                   31:0 /* C--UF */
#define NV_PRMIO_RMA_ID_CODE_VALID                       0x2B16D065 /* C---V */
#define NV_PRMIO_RMA_PTR                                 0x00007104 /* RW-4R */
#define NV_PRMIO_RMA_PTR_SPACE                                31:31 /* RWIVF */
#define NV_PRMIO_RMA_PTR_SPACE_REGISTER                  0x00000000 /* RWI-V */
#define NV_PRMIO_RMA_PTR_SPACE_MEMORY                    0x00000001 /* RW--V */
#define NV_PRMIO_RMA_PTR_ADDRESS                               28:2 /* RWIUF */
#define NV_PRMIO_RMA_PTR_ADDRESS_0                       0x00000000 /* RWI-V */
#define NV_PRMIO_RMA_DATA                                0x00007108 /* RW-4R */
#define NV_PRMIO_RMA_DATA_PORT                                 31:0 /* RWXUF */
#define NV_PRMIO_RMA_DATA32                              0x0000710C /* RW-4R */
#define NV_PRMIO_RMA_DATA32_BYTE2                             23:16 /* RWXUF */
#define NV_PRMIO_RMA_DATA32_BYTE1                              15:8 /* RWXUF */
#define NV_PRMIO_RMA_DATA32_BYTE0                               7:0 /* RWXUF */
/* dev_bus.ref */
#define NV_EXPROM                             0x0000FFFF:0x00000000 /* R---D */
#define NV_EXPROM_BIOS_ROM008(i)                   (0x00000000+(i)) /* RW-1A */
#define NV_EXPROM_BIOS_ROM008__SIZE_1                         65536 /*       */
#define NV_EXPROM_BIOS_ROM008_VALUE                             7:0 /* RW-VF */
#define NV_EXPROM_BIOS_ROM016(i)                 (0x00000000+(i)*2) /* RW-2A */
#define NV_EXPROM_BIOS_ROM016__SIZE_1                         32768 /*       */
#define NV_EXPROM_BIOS_ROM016_VALUE                            15:0 /* RW-VF */
#define NV_EXPROM_BIOS_ROM032(i)                 (0x00000000+(i)*4) /* RW-4A */
#define NV_EXPROM_BIOS_ROM032__SIZE_1                         16384 /*       */
#define NV_EXPROM_BIOS_ROM032_VALUE                            31:0 /* RW-VF */
/* dev_bus.ref */
#define NV_MEMORY                             0xFFFFFFFF:0x00000000 /* RW--D */
/* dev_bus.ref */
#define NV_IO                                 0xFFFFFFFF:0x00000000 /* RW--D */
/* dev_dac.ref */
#define NV_PRAMDAC_PLL_SETUP_CONTROL_PWRDWN                   15:12 /* RWIVF */
#define NV_PRAMDAC_PLL_SETUP_CONTROL_PWRDWN_ON           0x00000000 /* RWI-V */
#define NV_PRAMDAC_PLL_SETUP_CONTROL_PWRDWN_MPLL         0x00000001 /* RWI-V */
#define NV_PRAMDAC_PLL_SETUP_CONTROL_PWRDWN_VPLL         0x00000002 /* RWI-V */
#define NV_PRAMDAC_PLL_SETUP_CONTROL_PWRDWN_NVPLL        0x00000004 /* RWI-V */
#define NV_PRAMDAC_PLL_SETUP_CONTROL_PWRDWN_VPLL2        0x00000008 /* RWI-V */
#define NV_PRAMDAC_PLL_SETUP_CONTROL_PWRDWN_OFF          0x0000000f /* RW--V */
#define NV_PRAMDAC_PLL_TEST_COUNTER_SOURCE                    26:24 /* RWIVF */
/* dev_fifo.ref */
#define NV_PFIFO_DELAY_0                                 0x00002040 /* RW-4R */
#define NV_PFIFO_DELAY_0_WAIT_RETRY                             9:0 /* RWIUF */
#define NV_PFIFO_DELAY_0_WAIT_RETRY_0                    0x00000000 /* RWI-V */
#define NV_PFIFO_DMA_TIMESLICE                           0x00002044 /* RW-4R */
#define NV_PFIFO_DMA_TIMESLICE_SELECT                          16:0 /* RWIUF */
#define NV_PFIFO_DMA_TIMESLICE_SELECT_1                  0x00000000 /* RWI-V */
#define NV_PFIFO_DMA_TIMESLICE_SELECT_16K                0x00003fff /* RW--V */
#define NV_PFIFO_DMA_TIMESLICE_SELECT_32K                0x00007fff /* RW--V */
#define NV_PFIFO_DMA_TIMESLICE_SELECT_64K                0x0000ffff /* RW--V */
#define NV_PFIFO_DMA_TIMESLICE_SELECT_128K               0x0001ffff /* RW--V */
#define NV_PFIFO_DMA_TIMESLICE_TIMEOUT                        24:24 /* RWIUF */
#define NV_PFIFO_DMA_TIMESLICE_TIMEOUT_DISABLED          0x00000000 /* RW--V */
#define NV_PFIFO_DMA_TIMESLICE_TIMEOUT_ENABLED           0x00000001 /* RWI-V */
#define NV_PFIFO_PIO_TIMESLICE                           0x00002048 /* RW-4R */
#define NV_PFIFO_PIO_TIMESLICE_SELECT                          16:0 /* RWIUF */
#define NV_PFIFO_PIO_TIMESLICE_SELECT_1                  0x00000000 /* RWI-V */
#define NV_PFIFO_PIO_TIMESLICE_SELECT_16K                0x00003fff /* RW--V */
#define NV_PFIFO_PIO_TIMESLICE_SELECT_32K                0x00007fff /* RW--V */
#define NV_PFIFO_PIO_TIMESLICE_SELECT_64K                0x0000ffff /* RW--V */
#define NV_PFIFO_PIO_TIMESLICE_SELECT_128K               0x0001ffff /* RW--V */
#define NV_PFIFO_PIO_TIMESLICE_TIMEOUT                        24:24 /* RWIUF */
#define NV_PFIFO_PIO_TIMESLICE_TIMEOUT_DISABLED          0x00000000 /* RW--V */
#define NV_PFIFO_PIO_TIMESLICE_TIMEOUT_ENABLED           0x00000001 /* RWI-V */
#define NV_PFIFO_TIMESLICE                               0x0000204C /* RW-4R */
#define NV_PFIFO_TIMESLICE_TIMER                               17:0 /* RWIUF */
#define NV_PFIFO_TIMESLICE_TIMER_EXPIRED                 0x0003FFFF /* RWI-V */
#define NV_PFIFO_NEXT_CHANNEL                            0x00002050 /* RW-4R */
#define NV_PFIFO_NEXT_CHANNEL_CHID                              4:0 /* RWXUF */
#define NV_PFIFO_NEXT_CHANNEL_MODE                              8:8 /* RWXVF */
#define NV_PFIFO_NEXT_CHANNEL_MODE_PIO                   0x00000000 /* RW--V */
#define NV_PFIFO_NEXT_CHANNEL_MODE_DMA                   0x00000001 /* RW--V */
#define NV_PFIFO_NEXT_CHANNEL_SWITCH                          12:12 /* RWIVF */
#define NV_PFIFO_NEXT_CHANNEL_SWITCH_NOT_PENDING         0x00000000 /* RWI-V */
#define NV_PFIFO_NEXT_CHANNEL_SWITCH_PENDING             0x00000001 /* RW--V */
#define NV_PFIFO_RAMHT                                   0x00002210 /* RW-4R */
#define NV_PFIFO_RAMHT_BASE_ADDRESS                             8:4 /* RWIUF */
#define NV_PFIFO_RAMHT_BASE_ADDRESS_10000                0x00000010 /* RWI-V */
#define NV_PFIFO_RAMHT_SIZE                                   17:16 /* RWIUF */
#define NV_PFIFO_RAMHT_SIZE_4K                           0x00000000 /* RWI-V */
#define NV_PFIFO_RAMHT_SIZE_8K                           0x00000001 /* RW--V */
#define NV_PFIFO_RAMHT_SIZE_16K                          0x00000002 /* RW--V */
#define NV_PFIFO_RAMHT_SIZE_32K                          0x00000003 /* RW--V */
#define NV_PFIFO_RAMHT_SEARCH                                 25:24 /* RWIUF */
#define NV_PFIFO_RAMHT_SEARCH_16                         0x00000000 /* RWI-V */
#define NV_PFIFO_RAMHT_SEARCH_32                         0x00000001 /* RW--V */
#define NV_PFIFO_RAMHT_SEARCH_64                         0x00000002 /* RW--V */
#define NV_PFIFO_RAMHT_SEARCH_128                        0x00000003 /* RW--V */
#define NV_PFIFO_RAMFC                                   0x00002214 /* RW-4R */
#define NV_PFIFO_RAMFC_BASE_ADDRESS                             8:2 /* RWIUF */
#define NV_PFIFO_RAMFC_BASE_ADDRESS_11000                0x00000044 /* RWI-V */
#define NV_PFIFO_RAMFC_SIZE                                   16:16 /* RWIVF */
#define NV_PFIFO_RAMFC_SIZE_1K                           0x00000000 /* RWI-V */
#define NV_PFIFO_RAMFC_SIZE_2K                           0x00000001 /* RW--V */
#define NV_PFIFO_RAMFC_BASE_ADDRESS2                          23:17 /* RWIUF */
#define NV_PFIFO_RAMFC_BASE_ADDRESS_11400                0x00000045 /* RWI-V */
#define NV_PFIFO_RAMRO                                   0x00002218 /* RW-4R */
#define NV_PFIFO_RAMRO_BASE_ADDRESS                             8:1 /* RWIUF */
#define NV_PFIFO_RAMRO_BASE_ADDRESS_11200                0x00000089 /* RWI-V */
#define NV_PFIFO_RAMRO_BASE_ADDRESS_11400                0x0000008A /* RWI-V */
#define NV_PFIFO_RAMRO_BASE_ADDRESS_11500                0x0000008B /* RWI-V */
#define NV_PFIFO_RAMRO_BASE_ADDRESS_11800                0x0000008C /* RW--V */
#define NV_PFIFO_RAMRO_BASE_ADDRESS_12000                0x00000090 /* RW--V */
#define NV_PFIFO_RAMRO_SIZE                                   16:16 /* RWIVF */
#define NV_PFIFO_RAMRO_SIZE_512                          0x00000000 /* RWI-V */
#define NV_PFIFO_RAMRO_SIZE_8K                           0x00000001 /* RW--V */
#define NV_PFIFO_MODE                                    0x00002504 /* RW-4R */
#define NV_PFIFO_MODE_CHANNEL_0                                 0:0 /* RWIVF */
#define NV_PFIFO_MODE_CHANNEL_0_PIO                      0x00000000 /* RWI-V */
#define NV_PFIFO_MODE_CHANNEL_0_DMA                      0x00000001 /* RW--V */
#define NV_PFIFO_MODE_CHANNEL_1                                 1:1 /* RWIVF */
#define NV_PFIFO_MODE_CHANNEL_1_PIO                      0x00000000 /* RWI-V */
#define NV_PFIFO_MODE_CHANNEL_1_DMA                      0x00000001 /* RW--V */
#define NV_PFIFO_MODE_CHANNEL_2                                 2:2 /* RWIVF */
#define NV_PFIFO_MODE_CHANNEL_2_PIO                      0x00000000 /* RWI-V */
#define NV_PFIFO_MODE_CHANNEL_2_DMA                      0x00000001 /* RW--V */
#define NV_PFIFO_MODE_CHANNEL_3                                 3:3 /* RWIVF */
#define NV_PFIFO_MODE_CHANNEL_3_PIO                      0x00000000 /* RWI-V */
#define NV_PFIFO_MODE_CHANNEL_3_DMA                      0x00000001 /* RW--V */
#define NV_PFIFO_MODE_CHANNEL_4                                 4:4 /* RWIVF */
#define NV_PFIFO_MODE_CHANNEL_4_PIO                      0x00000000 /* RWI-V */
#define NV_PFIFO_MODE_CHANNEL_4_DMA                      0x00000001 /* RW--V */
#define NV_PFIFO_MODE_CHANNEL_5                                 5:5 /* RWIVF */
#define NV_PFIFO_MODE_CHANNEL_5_PIO                      0x00000000 /* RWI-V */
#define NV_PFIFO_MODE_CHANNEL_5_DMA                      0x00000001 /* RW--V */
#define NV_PFIFO_MODE_CHANNEL_6                                 6:6 /* RWIVF */
#define NV_PFIFO_MODE_CHANNEL_6_PIO                      0x00000000 /* RWI-V */
#define NV_PFIFO_MODE_CHANNEL_6_DMA                      0x00000001 /* RW--V */
#define NV_PFIFO_MODE_CHANNEL_7                                 7:7 /* RWIVF */
#define NV_PFIFO_MODE_CHANNEL_7_PIO                      0x00000000 /* RWI-V */
#define NV_PFIFO_MODE_CHANNEL_7_DMA                      0x00000001 /* RW--V */
#define NV_PFIFO_MODE_CHANNEL_8                                 8:8 /* RWIVF */
#define NV_PFIFO_MODE_CHANNEL_8_PIO                      0x00000000 /* RWI-V */
#define NV_PFIFO_MODE_CHANNEL_8_DMA                      0x00000001 /* RW--V */
#define NV_PFIFO_MODE_CHANNEL_9                                 9:9 /* RWIVF */
#define NV_PFIFO_MODE_CHANNEL_9_PIO                      0x00000000 /* RWI-V */
#define NV_PFIFO_MODE_CHANNEL_9_DMA                      0x00000001 /* RW--V */
#define NV_PFIFO_MODE_CHANNEL_10                              10:10 /* RWIVF */
#define NV_PFIFO_MODE_CHANNEL_10_PIO                     0x00000000 /* RWI-V */
#define NV_PFIFO_MODE_CHANNEL_10_DMA                     0x00000001 /* RW--V */
#define NV_PFIFO_MODE_CHANNEL_11                              11:11 /* RWIVF */
#define NV_PFIFO_MODE_CHANNEL_11_PIO                     0x00000000 /* RWI-V */
#define NV_PFIFO_MODE_CHANNEL_11_DMA                     0x00000001 /* RW--V */
#define NV_PFIFO_MODE_CHANNEL_12                              12:12 /* RWIVF */
#define NV_PFIFO_MODE_CHANNEL_12_PIO                     0x00000000 /* RWI-V */
#define NV_PFIFO_MODE_CHANNEL_12_DMA                     0x00000001 /* RW--V */
#define NV_PFIFO_MODE_CHANNEL_13                              13:13 /* RWIVF */
#define NV_PFIFO_MODE_CHANNEL_13_PIO                     0x00000000 /* RWI-V */
#define NV_PFIFO_MODE_CHANNEL_13_DMA                     0x00000001 /* RW--V */
#define NV_PFIFO_MODE_CHANNEL_14                              14:14 /* RWIVF */
#define NV_PFIFO_MODE_CHANNEL_14_PIO                     0x00000000 /* RWI-V */
#define NV_PFIFO_MODE_CHANNEL_14_DMA                     0x00000001 /* RW--V */
#define NV_PFIFO_MODE_CHANNEL_15                              15:15 /* RWIVF */
#define NV_PFIFO_MODE_CHANNEL_15_PIO                     0x00000000 /* RWI-V */
#define NV_PFIFO_MODE_CHANNEL_15_DMA                     0x00000001 /* RW--V */
#define NV_PFIFO_MODE_CHANNEL_16                              16:16 /* RWIVF */
#define NV_PFIFO_MODE_CHANNEL_16_PIO                     0x00000000 /* RWI-V */
#define NV_PFIFO_MODE_CHANNEL_16_DMA                     0x00000001 /* RW--V */
#define NV_PFIFO_MODE_CHANNEL_17                              17:17 /* RWIVF */
#define NV_PFIFO_MODE_CHANNEL_17_PIO                     0x00000000 /* RWI-V */
#define NV_PFIFO_MODE_CHANNEL_17_DMA                     0x00000001 /* RW--V */
#define NV_PFIFO_MODE_CHANNEL_18                              18:18 /* RWIVF */
#define NV_PFIFO_MODE_CHANNEL_18_PIO                     0x00000000 /* RWI-V */
#define NV_PFIFO_MODE_CHANNEL_18_DMA                     0x00000001 /* RW--V */
#define NV_PFIFO_MODE_CHANNEL_19                              19:19 /* RWIVF */
#define NV_PFIFO_MODE_CHANNEL_19_PIO                     0x00000000 /* RWI-V */
#define NV_PFIFO_MODE_CHANNEL_19_DMA                     0x00000001 /* RW--V */
#define NV_PFIFO_MODE_CHANNEL_20                              20:20 /* RWIVF */
#define NV_PFIFO_MODE_CHANNEL_20_PIO                     0x00000000 /* RWI-V */
#define NV_PFIFO_MODE_CHANNEL_20_DMA                     0x00000001 /* RW--V */
#define NV_PFIFO_MODE_CHANNEL_21                              21:21 /* RWIVF */
#define NV_PFIFO_MODE_CHANNEL_21_PIO                     0x00000000 /* RWI-V */
#define NV_PFIFO_MODE_CHANNEL_21_DMA                     0x00000001 /* RW--V */
#define NV_PFIFO_MODE_CHANNEL_22                              22:22 /* RWIVF */
#define NV_PFIFO_MODE_CHANNEL_22_PIO                     0x00000000 /* RWI-V */
#define NV_PFIFO_MODE_CHANNEL_22_DMA                     0x00000001 /* RW--V */
#define NV_PFIFO_MODE_CHANNEL_23                              23:23 /* RWIVF */
#define NV_PFIFO_MODE_CHANNEL_23_PIO                     0x00000000 /* RWI-V */
#define NV_PFIFO_MODE_CHANNEL_23_DMA                     0x00000001 /* RW--V */
#define NV_PFIFO_MODE_CHANNEL_24                              24:24 /* RWIVF */
#define NV_PFIFO_MODE_CHANNEL_24_PIO                     0x00000000 /* RWI-V */
#define NV_PFIFO_MODE_CHANNEL_24_DMA                     0x00000001 /* RW--V */
#define NV_PFIFO_MODE_CHANNEL_25                              25:25 /* RWIVF */
#define NV_PFIFO_MODE_CHANNEL_25_PIO                     0x00000000 /* RWI-V */
#define NV_PFIFO_MODE_CHANNEL_25_DMA                     0x00000001 /* RW--V */
#define NV_PFIFO_MODE_CHANNEL_26                              26:26 /* RWIVF */
#define NV_PFIFO_MODE_CHANNEL_26_PIO                     0x00000000 /* RWI-V */
#define NV_PFIFO_MODE_CHANNEL_26_DMA                     0x00000001 /* RW--V */
#define NV_PFIFO_MODE_CHANNEL_27                              27:27 /* RWIVF */
#define NV_PFIFO_MODE_CHANNEL_27_PIO                     0x00000000 /* RWI-V */
#define NV_PFIFO_MODE_CHANNEL_27_DMA                     0x00000001 /* RW--V */
#define NV_PFIFO_MODE_CHANNEL_28                              28:28 /* RWIVF */
#define NV_PFIFO_MODE_CHANNEL_28_PIO                     0x00000000 /* RWI-V */
#define NV_PFIFO_MODE_CHANNEL_28_DMA                     0x00000001 /* RW--V */
#define NV_PFIFO_MODE_CHANNEL_29                              29:29 /* RWIVF */
#define NV_PFIFO_MODE_CHANNEL_29_PIO                     0x00000000 /* RWI-V */
#define NV_PFIFO_MODE_CHANNEL_29_DMA                     0x00000001 /* RW--V */
#define NV_PFIFO_MODE_CHANNEL_30                              30:30 /* RWIVF */
#define NV_PFIFO_MODE_CHANNEL_30_PIO                     0x00000000 /* RWI-V */
#define NV_PFIFO_MODE_CHANNEL_30_DMA                     0x00000001 /* RW--V */
#define NV_PFIFO_MODE_CHANNEL_31                              31:31 /* RWIVF */
#define NV_PFIFO_MODE_CHANNEL_31_PIO                     0x00000000 /* RWI-V */
#define NV_PFIFO_MODE_CHANNEL_31_DMA                     0x00000001 /* RW--V */
#define NV_PFIFO_DMA                                     0x00002508 /* RW-4R */
#define NV_PFIFO_DMA_CHANNEL_0                                  0:0 /* RWIVF */
#define NV_PFIFO_DMA_CHANNEL_0_NOT_PENDING               0x00000000 /* RWI-V */
#define NV_PFIFO_DMA_CHANNEL_0_PENDING                   0x00000001 /* RW--V */
#define NV_PFIFO_DMA_CHANNEL_1                                  1:1 /* RWIVF */
#define NV_PFIFO_DMA_CHANNEL_1_NOT_PENDING               0x00000000 /* RWI-V */
#define NV_PFIFO_DMA_CHANNEL_1_PENDING                   0x00000001 /* RW--V */
#define NV_PFIFO_DMA_CHANNEL_2                                  2:2 /* RWIVF */
#define NV_PFIFO_DMA_CHANNEL_2_NOT_PENDING               0x00000000 /* RWI-V */
#define NV_PFIFO_DMA_CHANNEL_2_PENDING                   0x00000001 /* RW--V */
#define NV_PFIFO_DMA_CHANNEL_3                                  3:3 /* RWIVF */
#define NV_PFIFO_DMA_CHANNEL_3_NOT_PENDING               0x00000000 /* RWI-V */
#define NV_PFIFO_DMA_CHANNEL_3_PENDING                   0x00000001 /* RW--V */
#define NV_PFIFO_DMA_CHANNEL_4                                  4:4 /* RWIVF */
#define NV_PFIFO_DMA_CHANNEL_4_NOT_PENDING               0x00000000 /* RWI-V */
#define NV_PFIFO_DMA_CHANNEL_4_PENDING                   0x00000001 /* RW--V */
#define NV_PFIFO_DMA_CHANNEL_5                                  5:5 /* RWIVF */
#define NV_PFIFO_DMA_CHANNEL_5_NOT_PENDING               0x00000000 /* RWI-V */
#define NV_PFIFO_DMA_CHANNEL_5_PENDING                   0x00000001 /* RW--V */
#define NV_PFIFO_DMA_CHANNEL_6                                  6:6 /* RWIVF */
#define NV_PFIFO_DMA_CHANNEL_6_NOT_PENDING               0x00000000 /* RWI-V */
#define NV_PFIFO_DMA_CHANNEL_6_PENDING                   0x00000001 /* RW--V */
#define NV_PFIFO_DMA_CHANNEL_7                                  7:7 /* RWIVF */
#define NV_PFIFO_DMA_CHANNEL_7_NOT_PENDING               0x00000000 /* RWI-V */
#define NV_PFIFO_DMA_CHANNEL_7_PENDING                   0x00000001 /* RW--V */
#define NV_PFIFO_DMA_CHANNEL_8                                  8:8 /* RWIVF */
#define NV_PFIFO_DMA_CHANNEL_8_NOT_PENDING               0x00000000 /* RWI-V */
#define NV_PFIFO_DMA_CHANNEL_8_PENDING                   0x00000001 /* RW--V */
#define NV_PFIFO_DMA_CHANNEL_9                                  9:9 /* RWIVF */
#define NV_PFIFO_DMA_CHANNEL_9_NOT_PENDING               0x00000000 /* RWI-V */
#define NV_PFIFO_DMA_CHANNEL_9_PENDING                   0x00000001 /* RW--V */
#define NV_PFIFO_DMA_CHANNEL_10                               10:10 /* RWIVF */
#define NV_PFIFO_DMA_CHANNEL_10_NOT_PENDING              0x00000000 /* RWI-V */
#define NV_PFIFO_DMA_CHANNEL_10_PENDING                  0x00000001 /* RW--V */
#define NV_PFIFO_DMA_CHANNEL_11                               11:11 /* RWIVF */
#define NV_PFIFO_DMA_CHANNEL_11_NOT_PENDING              0x00000000 /* RWI-V */
#define NV_PFIFO_DMA_CHANNEL_11_PENDING                  0x00000001 /* RW--V */
#define NV_PFIFO_DMA_CHANNEL_12                               12:12 /* RWIVF */
#define NV_PFIFO_DMA_CHANNEL_12_NOT_PENDING              0x00000000 /* RWI-V */
#define NV_PFIFO_DMA_CHANNEL_12_PENDING                  0x00000001 /* RW--V */
#define NV_PFIFO_DMA_CHANNEL_13                               13:13 /* RWIVF */
#define NV_PFIFO_DMA_CHANNEL_13_NOT_PENDING              0x00000000 /* RWI-V */
#define NV_PFIFO_DMA_CHANNEL_13_PENDING                  0x00000001 /* RW--V */
#define NV_PFIFO_DMA_CHANNEL_14                               14:14 /* RWIVF */
#define NV_PFIFO_DMA_CHANNEL_14_NOT_PENDING              0x00000000 /* RWI-V */
#define NV_PFIFO_DMA_CHANNEL_14_PENDING                  0x00000001 /* RW--V */
#define NV_PFIFO_DMA_CHANNEL_15                               15:15 /* RWIVF */
#define NV_PFIFO_DMA_CHANNEL_15_NOT_PENDING              0x00000000 /* RWI-V */
#define NV_PFIFO_DMA_CHANNEL_15_PENDING                  0x00000001 /* RW--V */
#define NV_PFIFO_DMA_CHANNEL_16                               16:16 /* RWIVF */
#define NV_PFIFO_DMA_CHANNEL_16_NOT_PENDING              0x00000000 /* RWI-V */
#define NV_PFIFO_DMA_CHANNEL_16_PENDING                  0x00000001 /* RW--V */
#define NV_PFIFO_DMA_CHANNEL_17                               17:17 /* RWIVF */
#define NV_PFIFO_DMA_CHANNEL_17_NOT_PENDING              0x00000000 /* RWI-V */
#define NV_PFIFO_DMA_CHANNEL_17_PENDING                  0x00000001 /* RW--V */
#define NV_PFIFO_DMA_CHANNEL_18                               18:18 /* RWIVF */
#define NV_PFIFO_DMA_CHANNEL_18_NOT_PENDING              0x00000000 /* RWI-V */
#define NV_PFIFO_DMA_CHANNEL_18_PENDING                  0x00000001 /* RW--V */
#define NV_PFIFO_DMA_CHANNEL_19                               19:19 /* RWIVF */
#define NV_PFIFO_DMA_CHANNEL_19_NOT_PENDING              0x00000000 /* RWI-V */
#define NV_PFIFO_DMA_CHANNEL_19_PENDING                  0x00000001 /* RW--V */
#define NV_PFIFO_DMA_CHANNEL_20                               20:20 /* RWIVF */
#define NV_PFIFO_DMA_CHANNEL_20_NOT_PENDING              0x00000000 /* RWI-V */
#define NV_PFIFO_DMA_CHANNEL_20_PENDING                  0x00000001 /* RW--V */
#define NV_PFIFO_DMA_CHANNEL_21                               21:21 /* RWIVF */
#define NV_PFIFO_DMA_CHANNEL_21_NOT_PENDING              0x00000000 /* RWI-V */
#define NV_PFIFO_DMA_CHANNEL_21_PENDING                  0x00000001 /* RW--V */
#define NV_PFIFO_DMA_CHANNEL_22                               22:22 /* RWIVF */
#define NV_PFIFO_DMA_CHANNEL_22_NOT_PENDING              0x00000000 /* RWI-V */
#define NV_PFIFO_DMA_CHANNEL_22_PENDING                  0x00000001 /* RW--V */
#define NV_PFIFO_DMA_CHANNEL_23                               23:23 /* RWIVF */
#define NV_PFIFO_DMA_CHANNEL_23_NOT_PENDING              0x00000000 /* RWI-V */
#define NV_PFIFO_DMA_CHANNEL_23_PENDING                  0x00000001 /* RW--V */
#define NV_PFIFO_DMA_CHANNEL_24                               24:24 /* RWIVF */
#define NV_PFIFO_DMA_CHANNEL_24_NOT_PENDING              0x00000000 /* RWI-V */
#define NV_PFIFO_DMA_CHANNEL_24_PENDING                  0x00000001 /* RW--V */
#define NV_PFIFO_DMA_CHANNEL_25                               25:25 /* RWIVF */
#define NV_PFIFO_DMA_CHANNEL_25_NOT_PENDING              0x00000000 /* RWI-V */
#define NV_PFIFO_DMA_CHANNEL_25_PENDING                  0x00000001 /* RW--V */
#define NV_PFIFO_DMA_CHANNEL_26                               26:26 /* RWIVF */
#define NV_PFIFO_DMA_CHANNEL_26_NOT_PENDING              0x00000000 /* RWI-V */
#define NV_PFIFO_DMA_CHANNEL_26_PENDING                  0x00000001 /* RW--V */
#define NV_PFIFO_DMA_CHANNEL_27                               27:27 /* RWIVF */
#define NV_PFIFO_DMA_CHANNEL_27_NOT_PENDING              0x00000000 /* RWI-V */
#define NV_PFIFO_DMA_CHANNEL_27_PENDING                  0x00000001 /* RW--V */
#define NV_PFIFO_DMA_CHANNEL_28                               28:28 /* RWIVF */
#define NV_PFIFO_DMA_CHANNEL_28_NOT_PENDING              0x00000000 /* RWI-V */
#define NV_PFIFO_DMA_CHANNEL_28_PENDING                  0x00000001 /* RW--V */
#define NV_PFIFO_DMA_CHANNEL_29                               29:29 /* RWIVF */
#define NV_PFIFO_DMA_CHANNEL_29_NOT_PENDING              0x00000000 /* RWI-V */
#define NV_PFIFO_DMA_CHANNEL_29_PENDING                  0x00000001 /* RW--V */
#define NV_PFIFO_DMA_CHANNEL_30                               30:30 /* RWIVF */
#define NV_PFIFO_DMA_CHANNEL_30_NOT_PENDING              0x00000000 /* RWI-V */
#define NV_PFIFO_DMA_CHANNEL_30_PENDING                  0x00000001 /* RW--V */
#define NV_PFIFO_DMA_CHANNEL_31                               31:31 /* RWIVF */
#define NV_PFIFO_DMA_CHANNEL_31_NOT_PENDING              0x00000000 /* RWI-V */
#define NV_PFIFO_DMA_CHANNEL_31_PENDING                  0x00000001 /* RW--V */
#define NV_PFIFO_SIZE                                    0x0000250C /* RW-4R */
#define NV_PFIFO_SIZE_CHANNEL_0                                 0:0 /* RWIVF */
#define NV_PFIFO_SIZE_CHANNEL_0_124_BYTES                0x00000000 /* RWI-V */
#define NV_PFIFO_SIZE_CHANNEL_0_512_BYTES                0x00000001 /* RW--V */
#define NV_PFIFO_SIZE_CHANNEL_1                                 1:1 /* RWIVF */
#define NV_PFIFO_SIZE_CHANNEL_1_124_BYTES                0x00000000 /* RWI-V */
#define NV_PFIFO_SIZE_CHANNEL_1_512_BYTES                0x00000001 /* RW--V */
#define NV_PFIFO_SIZE_CHANNEL_2                                 2:2 /* RWIVF */
#define NV_PFIFO_SIZE_CHANNEL_2_124_BYTES                0x00000000 /* RWI-V */
#define NV_PFIFO_SIZE_CHANNEL_2_512_BYTES                0x00000001 /* RW--V */
#define NV_PFIFO_SIZE_CHANNEL_3                                 3:3 /* RWIVF */
#define NV_PFIFO_SIZE_CHANNEL_3_124_BYTES                0x00000000 /* RWI-V */
#define NV_PFIFO_SIZE_CHANNEL_3_512_BYTES                0x00000001 /* RW--V */
#define NV_PFIFO_SIZE_CHANNEL_4                                 4:4 /* RWIVF */
#define NV_PFIFO_SIZE_CHANNEL_4_124_BYTES                0x00000000 /* RWI-V */
#define NV_PFIFO_SIZE_CHANNEL_4_512_BYTES                0x00000001 /* RW--V */
#define NV_PFIFO_SIZE_CHANNEL_5                                 5:5 /* RWIVF */
#define NV_PFIFO_SIZE_CHANNEL_5_124_BYTES                0x00000000 /* RWI-V */
#define NV_PFIFO_SIZE_CHANNEL_5_512_BYTES                0x00000001 /* RW--V */
#define NV_PFIFO_SIZE_CHANNEL_6                                 6:6 /* RWIVF */
#define NV_PFIFO_SIZE_CHANNEL_6_124_BYTES                0x00000000 /* RWI-V */
#define NV_PFIFO_SIZE_CHANNEL_6_512_BYTES                0x00000001 /* RW--V */
#define NV_PFIFO_SIZE_CHANNEL_7                                 7:7 /* RWIVF */
#define NV_PFIFO_SIZE_CHANNEL_7_124_BYTES                0x00000000 /* RWI-V */
#define NV_PFIFO_SIZE_CHANNEL_7_512_BYTES                0x00000001 /* RW--V */
#define NV_PFIFO_SIZE_CHANNEL_8                                 8:8 /* RWIVF */
#define NV_PFIFO_SIZE_CHANNEL_8_124_BYTES                0x00000000 /* RWI-V */
#define NV_PFIFO_SIZE_CHANNEL_8_512_BYTES                0x00000001 /* RW--V */
#define NV_PFIFO_SIZE_CHANNEL_9                                 9:9 /* RWIVF */
#define NV_PFIFO_SIZE_CHANNEL_9_124_BYTES                0x00000000 /* RWI-V */
#define NV_PFIFO_SIZE_CHANNEL_9_512_BYTES                0x00000001 /* RW--V */
#define NV_PFIFO_SIZE_CHANNEL_10                              10:10 /* RWIVF */
#define NV_PFIFO_SIZE_CHANNEL_10_124_BYTES               0x00000000 /* RWI-V */
#define NV_PFIFO_SIZE_CHANNEL_10_512_BYTES               0x00000001 /* RW--V */
#define NV_PFIFO_SIZE_CHANNEL_11                              11:11 /* RWIVF */
#define NV_PFIFO_SIZE_CHANNEL_11_124_BYTES               0x00000000 /* RWI-V */
#define NV_PFIFO_SIZE_CHANNEL_11_512_BYTES               0x00000001 /* RW--V */
#define NV_PFIFO_SIZE_CHANNEL_12                              12:12 /* RWIVF */
#define NV_PFIFO_SIZE_CHANNEL_12_124_BYTES               0x00000000 /* RWI-V */
#define NV_PFIFO_SIZE_CHANNEL_12_512_BYTES               0x00000001 /* RW--V */
#define NV_PFIFO_SIZE_CHANNEL_13                              13:13 /* RWIVF */
#define NV_PFIFO_SIZE_CHANNEL_13_124_BYTES               0x00000000 /* RWI-V */
#define NV_PFIFO_SIZE_CHANNEL_13_512_BYTES               0x00000001 /* RW--V */
#define NV_PFIFO_SIZE_CHANNEL_14                              14:14 /* RWIVF */
#define NV_PFIFO_SIZE_CHANNEL_14_124_BYTES               0x00000000 /* RWI-V */
#define NV_PFIFO_SIZE_CHANNEL_14_512_BYTES               0x00000001 /* RW--V */
#define NV_PFIFO_SIZE_CHANNEL_15                              15:15 /* RWIVF */
#define NV_PFIFO_SIZE_CHANNEL_15_124_BYTES               0x00000000 /* RWI-V */
#define NV_PFIFO_SIZE_CHANNEL_15_512_BYTES               0x00000001 /* RW--V */
#define NV_PFIFO_SIZE_CHANNEL_16                              16:16 /* RWIVF */
#define NV_PFIFO_SIZE_CHANNEL_16_124_BYTES               0x00000000 /* RWI-V */
#define NV_PFIFO_SIZE_CHANNEL_16_512_BYTES               0x00000001 /* RW--V */
#define NV_PFIFO_SIZE_CHANNEL_17                              17:17 /* RWIVF */
#define NV_PFIFO_SIZE_CHANNEL_17_124_BYTES               0x00000000 /* RWI-V */
#define NV_PFIFO_SIZE_CHANNEL_17_512_BYTES               0x00000001 /* RW--V */
#define NV_PFIFO_SIZE_CHANNEL_18                              18:18 /* RWIVF */
#define NV_PFIFO_SIZE_CHANNEL_18_124_BYTES               0x00000000 /* RWI-V */
#define NV_PFIFO_SIZE_CHANNEL_18_512_BYTES               0x00000001 /* RW--V */
#define NV_PFIFO_SIZE_CHANNEL_19                              19:19 /* RWIVF */
#define NV_PFIFO_SIZE_CHANNEL_19_124_BYTES               0x00000000 /* RWI-V */
#define NV_PFIFO_SIZE_CHANNEL_19_512_BYTES               0x00000001 /* RW--V */
#define NV_PFIFO_SIZE_CHANNEL_20                              20:20 /* RWIVF */
#define NV_PFIFO_SIZE_CHANNEL_20_124_BYTES               0x00000000 /* RWI-V */
#define NV_PFIFO_SIZE_CHANNEL_20_512_BYTES               0x00000001 /* RW--V */
#define NV_PFIFO_SIZE_CHANNEL_21                              21:21 /* RWIVF */
#define NV_PFIFO_SIZE_CHANNEL_21_124_BYTES               0x00000000 /* RWI-V */
#define NV_PFIFO_SIZE_CHANNEL_21_512_BYTES               0x00000001 /* RW--V */
#define NV_PFIFO_SIZE_CHANNEL_22                              22:22 /* RWIVF */
#define NV_PFIFO_SIZE_CHANNEL_22_124_BYTES               0x00000000 /* RWI-V */
#define NV_PFIFO_SIZE_CHANNEL_22_512_BYTES               0x00000001 /* RW--V */
#define NV_PFIFO_SIZE_CHANNEL_23                              23:23 /* RWIVF */
#define NV_PFIFO_SIZE_CHANNEL_23_124_BYTES               0x00000000 /* RWI-V */
#define NV_PFIFO_SIZE_CHANNEL_23_512_BYTES               0x00000001 /* RW--V */
#define NV_PFIFO_SIZE_CHANNEL_24                              24:24 /* RWIVF */
#define NV_PFIFO_SIZE_CHANNEL_24_124_BYTES               0x00000000 /* RWI-V */
#define NV_PFIFO_SIZE_CHANNEL_24_512_BYTES               0x00000001 /* RW--V */
#define NV_PFIFO_SIZE_CHANNEL_25                              25:25 /* RWIVF */
#define NV_PFIFO_SIZE_CHANNEL_25_124_BYTES               0x00000000 /* RWI-V */
#define NV_PFIFO_SIZE_CHANNEL_25_512_BYTES               0x00000001 /* RW--V */
#define NV_PFIFO_SIZE_CHANNEL_26                              26:26 /* RWIVF */
#define NV_PFIFO_SIZE_CHANNEL_26_124_BYTES               0x00000000 /* RWI-V */
#define NV_PFIFO_SIZE_CHANNEL_26_512_BYTES               0x00000001 /* RW--V */
#define NV_PFIFO_SIZE_CHANNEL_27                              27:27 /* RWIVF */
#define NV_PFIFO_SIZE_CHANNEL_27_124_BYTES               0x00000000 /* RWI-V */
#define NV_PFIFO_SIZE_CHANNEL_27_512_BYTES               0x00000001 /* RW--V */
#define NV_PFIFO_SIZE_CHANNEL_28                              28:28 /* RWIVF */
#define NV_PFIFO_SIZE_CHANNEL_28_124_BYTES               0x00000000 /* RWI-V */
#define NV_PFIFO_SIZE_CHANNEL_28_512_BYTES               0x00000001 /* RW--V */
#define NV_PFIFO_SIZE_CHANNEL_29                              29:29 /* RWIVF */
#define NV_PFIFO_SIZE_CHANNEL_29_124_BYTES               0x00000000 /* RWI-V */
#define NV_PFIFO_SIZE_CHANNEL_29_512_BYTES               0x00000001 /* RW--V */
#define NV_PFIFO_SIZE_CHANNEL_30                              30:30 /* RWIVF */
#define NV_PFIFO_SIZE_CHANNEL_30_124_BYTES               0x00000000 /* RWI-V */
#define NV_PFIFO_SIZE_CHANNEL_30_512_BYTES               0x00000001 /* RW--V */
#define NV_PFIFO_SIZE_CHANNEL_31                              31:31 /* RWIVF */
#define NV_PFIFO_SIZE_CHANNEL_31_124_BYTES               0x00000000 /* RWI-V */
#define NV_PFIFO_SIZE_CHANNEL_31_512_BYTES               0x00000001 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH                        0x00003224 /* RW-4R */
#define NV_PFIFO_CACHE1_DMA_FETCH_TRIG                          7:3 /* RWIUF */
#define NV_PFIFO_CACHE1_DMA_FETCH_TRIG_8_BYTES           0x00000000 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_TRIG_16_BYTES          0x00000001 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_TRIG_24_BYTES          0x00000002 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_TRIG_32_BYTES          0x00000003 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_TRIG_40_BYTES          0x00000004 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_TRIG_48_BYTES          0x00000005 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_TRIG_56_BYTES          0x00000006 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_TRIG_64_BYTES          0x00000007 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_TRIG_72_BYTES          0x00000008 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_TRIG_80_BYTES          0x00000009 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_TRIG_88_BYTES          0x0000000A /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_TRIG_96_BYTES          0x0000000B /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_TRIG_104_BYTES         0x0000000C /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_TRIG_112_BYTES         0x0000000D /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_TRIG_120_BYTES         0x0000000E /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_TRIG_128_BYTES         0x0000000F /* RWI-V */
#define NV_PFIFO_CACHE1_DMA_FETCH_TRIG_136_BYTES         0x00000010 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_TRIG_144_BYTES         0x00000011 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_TRIG_152_BYTES         0x00000012 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_TRIG_160_BYTES         0x00000013 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_TRIG_168_BYTES         0x00000014 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_TRIG_176_BYTES         0x00000015 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_TRIG_184_BYTES         0x00000016 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_TRIG_192_BYTES         0x00000017 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_TRIG_200_BYTES         0x00000018 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_TRIG_208_BYTES         0x00000019 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_TRIG_216_BYTES         0x0000001A /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_TRIG_224_BYTES         0x0000001B /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_TRIG_232_BYTES         0x0000001C /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_TRIG_240_BYTES         0x0000001D /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_TRIG_248_BYTES         0x0000001E /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_TRIG_256_BYTES         0x0000001F /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_SIZE                        15:13 /* RWIUF */
#define NV_PFIFO_CACHE1_DMA_FETCH_SIZE_32_BYTES          0x00000000 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_SIZE_64_BYTES          0x00000001 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_SIZE_96_BYTES          0x00000002 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_SIZE_128_BYTES         0x00000003 /* RWI-V */
#define NV_PFIFO_CACHE1_DMA_FETCH_SIZE_160_BYTES         0x00000004 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_SIZE_192_BYTES         0x00000005 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_SIZE_224_BYTES         0x00000006 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_SIZE_256_BYTES         0x00000007 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_MAX_REQS                    20:16 /* RWIUF */
#define NV_PFIFO_CACHE1_DMA_FETCH_MAX_REQS_0             0x00000000 /* RWI-V */
#define NV_PFIFO_CACHE1_DMA_FETCH_MAX_REQS_1             0x00000001 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_MAX_REQS_2             0x00000002 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_MAX_REQS_3             0x00000003 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_MAX_REQS_4             0x00000004 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_MAX_REQS_5             0x00000005 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_MAX_REQS_6             0x00000006 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_MAX_REQS_7             0x00000007 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_MAX_REQS_8             0x00000008 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_MAX_REQS_9             0x00000009 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_MAX_REQS_10            0x0000000A /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_MAX_REQS_11            0x0000000B /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_MAX_REQS_12            0x0000000C /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_MAX_REQS_13            0x0000000D /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_MAX_REQS_14            0x0000000E /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_MAX_REQS_15            0x0000000F /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_ENDIAN                      31:31 /* RWIUF */
#define NV_PFIFO_CACHE1_DMA_FETCH_ENDIAN_LITTLE          0x00000000 /* RWI-V */
#define NV_PFIFO_CACHE1_DMA_FETCH_ENDIAN_BIG             0x00000001 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_PUT_OFFSET                         31:2 /* RWXUF */
#define NV_PFIFO_CACHE1_DMA_GET_OFFSET                         31:2 /* RWXUF */
#define NV_PFIFO_CACHE1_REF                              0x00003248 /* RW-4R */
#define NV_PFIFO_CACHE1_REF_CNT                                31:0 /* RWXUF */
#define NV_PFIFO_CACHE1_DMA_SUBROUTINE                   0x0000324C /* RW-4R */
#define NV_PFIFO_CACHE1_DMA_SUBROUTINE_RETURN_OFFSET           31:2 /* RWXUF */
#define NV_PFIFO_CACHE1_DMA_SUBROUTINE_STATE                    0:0 /* RWXVF */
#define NV_PFIFO_CACHE1_DMA_SUBROUTINE_STATE_INACTIVE    0x00000000 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_SUBROUTINE_STATE_ACTIVE      0x00000001 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_DCOUNT                       0x000032A0 /* RW-4R */
#define NV_PFIFO_CACHE1_DMA_DCOUNT_VALUE                       12:2 /* RWXUF */
#define NV_PFIFO_CACHE1_DMA_GET_JMP_SHADOW               0x000032A4 /* RW-4R */
#define NV_PFIFO_CACHE1_DMA_GET_JMP_SHADOW_OFFSET              31:2 /* RWXUF */
#define NV_PFIFO_CACHE1_DMA_RSVD_SHADOW                  0x000032A8 /* RW-4R */
#define NV_PFIFO_CACHE1_DMA_RSVD_SHADOW_CMD                    31:0 /* RWXUF */
#define NV_PFIFO_CACHE1_SUBCH_01_INST                    0x000032B0 /* RW-4R */
#define NV_PFIFO_CACHE1_SUBCH_0_INST_VALUE                     15:0 /* RWXUF */
#define NV_PFIFO_CACHE1_SUBCH_1_INST_VALUE                    31:16 /* RWXUF */
#define NV_PFIFO_CACHE1_SUBCH_23_INST                    0x000032B4 /* RW-4R */
#define NV_PFIFO_CACHE1_SUBCH_2_INST_VALUE                     15:0 /* RWXUF */
#define NV_PFIFO_CACHE1_SUBCH_3_INST_VALUE                    31:16 /* RWXUF */
#define NV_PFIFO_CACHE1_SUBCH_45_INST                    0x000032B8 /* RW-4R */
#define NV_PFIFO_CACHE1_SUBCH_4_INST_VALUE                     15:0 /* RWXUF */
#define NV_PFIFO_CACHE1_SUBCH_5_INST_VALUE                    31:16 /* RWXUF */
#define NV_PFIFO_CACHE1_SUBCH_67_INST                    0x000032BC /* RW-4R */
#define NV_PFIFO_CACHE1_SUBCH_6_INST_VALUE                     15:0 /* RWXUF */
#define NV_PFIFO_CACHE1_SUBCH_7_INST_VALUE                    31:16 /* RWXUF */
#define NV_PFIFO_CACHE0_SUBCH_INST                       0x000032C0 /* RW-4R */
#define NV_PFIFO_CACHE0_SUBCH_INST_VALUE                       15:0 /* RWXUF */
#define NV_PFIFO_CACHE1_DMA_STATE_METHOD_TYPE                   0:0 /* RWXUF */
#define NV_PFIFO_CACHE1_DMA_STATE_METHOD_TYPE_INC        0x00000000 /* RWI-V */
#define NV_PFIFO_CACHE1_DMA_STATE_METHOD_TYPE_NON_INC    0x00000001 /* RWI-V */
#define NV_PFIFO_CACHE1_DMA_STATE_METHOD                       12:2 /* RWXUF */
#define NV_PFIFO_CACHE1_DMA_STATE_SUBCHANNEL                  15:13 /* RWXUF */
#define NV_PFIFO_CACHE1_DMA_STATE_METHOD_COUNT                28:18 /* RWIUF */
#define NV_PFIFO_CACHE1_DMA_STATE_METHOD_COUNT_0         0x00000000 /* RWI-V */
#define NV_PFIFO_CACHE1_DMA_STATE_ERROR                       31:29 /* RWXUF */
#define NV_PFIFO_CACHE1_DMA_STATE_ERROR_NONE             0x00000000 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_STATE_ERROR_CALL             0x00000001 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_STATE_ERROR_NON_CACHE        0x00000002 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_STATE_ERROR_RETURN           0x00000003 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_STATE_ERROR_RESERVED_CMD     0x00000004 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_STATE_ERROR_PROTECTION       0x00000006 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_INSTANCE                     0x0000322C /* RW-4R */
#define NV_PFIFO_CACHE1_DMA_INSTANCE_ADDRESS                   15:0 /* RWXUF */
#define NV_PFIFO_CACHE1_DMA_CTL                          0x00003230 /* RW-4R */
#define NV_PFIFO_CACHE1_DMA_CTL_ADJUST                         11:2 /* RWXUF */
#define NV_PFIFO_CACHE1_DMA_CTL_PAGE_TABLE                    12:12 /* RWXUF */
#define NV_PFIFO_CACHE1_DMA_CTL_PAGE_TABLE_NOT_PRESENT   0x00000000 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_CTL_PAGE_TABLE_PRESENT       0x00000001 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_CTL_PAGE_ENTRY                    13:13 /* RWXUF */
#define NV_PFIFO_CACHE1_DMA_CTL_PAGE_ENTRY_NOT_LINEAR    0x00000000 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_CTL_PAGE_ENTRY_LINEAR        0x00000001 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_CTL_TARGET_NODE                   17:16 /* RWXUF */
#define NV_PFIFO_CACHE1_DMA_CTL_TARGET_NODE_NVM          0x00000000 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_CTL_TARGET_NODE_PCI          0x00000002 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_CTL_TARGET_NODE_AGP          0x00000003 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_CTL_AT_INFO                       31:31 /* RWIUF */
#define NV_PFIFO_CACHE1_DMA_CTL_AT_INFO_INVALID          0x00000000 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_CTL_AT_INFO_VALID            0x00000001 /* RWI-V */
#define NV_PFIFO_CACHE1_DMA_LIMIT                        0x00003234 /* RW-4R */
#define NV_PFIFO_CACHE1_DMA_LIMIT_OFFSET                       31:2 /* RWXUF */
#define NV_PFIFO_CACHE1_DMA_TLB_TAG                      0x00003238 /* RW-4R */
#define NV_PFIFO_CACHE1_DMA_TLB_TAG_ADDRESS                   31:12 /* RWXUF */
#define NV_PFIFO_CACHE1_DMA_TLB_TAG_STATE                       0:0 /* RWIUF */
#define NV_PFIFO_CACHE1_DMA_TLB_TAG_STATE_INVALID        0x00000000 /* RWI-V */
#define NV_PFIFO_CACHE1_DMA_TLB_TAG_STATE_VALID          0x00000001 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_TLB_PTE                      0x0000323C /* RW-4R */
#define NV_PFIFO_CACHE1_DMA_TLB_PTE_FRAME_ADDRESS             31:12 /* RWXUF */
#define NV_PFIFO_DEVICE(i)                       (0x00002800+(i)*4) /* R--4A */
#define NV_PFIFO_DEVICE__SIZE_1                                 128 /*       */
#define NV_PFIFO_DEVICE_CHID                                    4:0 /* R--UF */
#define NV_PFIFO_DEVICE_SWITCH                                24:24 /* R--VF */
#define NV_PFIFO_DEVICE_SWITCH_UNAVAILABLE               0x00000000 /* R---V */
#define NV_PFIFO_DEVICE_SWITCH_AVAILABLE                 0x00000001 /* R---V */
#define NV_PFIFO_RUNOUT_STATUS                           0x00002400 /* R--4R */
#define NV_PFIFO_RUNOUT_STATUS_RANOUT                           0:0 /* R--VF */
#define NV_PFIFO_RUNOUT_STATUS_RANOUT_FALSE              0x00000000 /* R---V */
#define NV_PFIFO_RUNOUT_STATUS_RANOUT_TRUE               0x00000001 /* R---V */
#define NV_PFIFO_RUNOUT_STATUS_LOW_MARK                         4:4 /* R--VF */
#define NV_PFIFO_RUNOUT_STATUS_LOW_MARK_NOT_EMPTY        0x00000000 /* R---V */
#define NV_PFIFO_RUNOUT_STATUS_LOW_MARK_EMPTY            0x00000001 /* R---V */
#define NV_PFIFO_RUNOUT_STATUS_HIGH_MARK                        8:8 /* R--VF */
#define NV_PFIFO_RUNOUT_STATUS_HIGH_MARK_NOT_FULL        0x00000000 /* R---V */
#define NV_PFIFO_RUNOUT_STATUS_HIGH_MARK_FULL            0x00000001 /* R---V */
#define NV_PFIFO_RUNOUT_PUT                              0x00002410 /* RW-4R */
#define NV_PFIFO_RUNOUT_PUT_ADDRESS                            12:3 /* RWXUF */
#define NV_PFIFO_RUNOUT_PUT_ADDRESS__SIZE_0                     8:3 /* RWXUF */
#define NV_PFIFO_RUNOUT_PUT_ADDRESS__SIZE_1                    12:3 /* RWXUF */
#define NV_PFIFO_RUNOUT_GET                              0x00002420 /* RW-4R */
#define NV_PFIFO_RUNOUT_GET_ADDRESS                            13:3 /* RWXUF */
/* dev_tremapper.ref */
#define NV_UREMAP                                0x00FFFFFF:0x00C00000 /* RW--D */
#define NV_UREMAP_FORMAT(i)              ((i)*0x10000 + 0x00C00000) /* RW-4R */
#define NV_UREMAP_FORMAT__SIZE                                    2 /*       */
#define NV_UREMAP_FORMAT_BPP                                    3:0 /* RWIVF */
#define NV_UREMAP_FORMAT_BPP_8                           0x00000000 /* RWI-V */
#define NV_UREMAP_FORMAT_BPP_16                          0x00000001 /* RW--V */
#define NV_UREMAP_FORMAT_BPP_32                          0x00000002 /* RW--V */
#define NV_UREMAP_FORMAT_BPP_64                          0x00000003 /* RW--V */
#define NV_UREMAP_FORMAT_BPP_128                         0x00000004 /* RW--V */
#define NV_UREMAP_FORMAT_WIDTH                                  7:4 /* RWIVF */
#define NV_UREMAP_FORMAT_WIDTH_1                         0x00000000 /* RWI-V */
#define NV_UREMAP_FORMAT_WIDTH_2                         0x00000001 /* RW--V */
#define NV_UREMAP_FORMAT_WIDTH_4                         0x00000002 /* RW--V */
#define NV_UREMAP_FORMAT_WIDTH_8                         0x00000003 /* RW--V */
#define NV_UREMAP_FORMAT_WIDTH_16                        0x00000004 /* RW--V */
#define NV_UREMAP_FORMAT_WIDTH_32                        0x00000005 /* RW--V */
#define NV_UREMAP_FORMAT_WIDTH_64                        0x00000006 /* RW--V */
#define NV_UREMAP_FORMAT_WIDTH_128                       0x00000007 /* RW--V */
#define NV_UREMAP_FORMAT_WIDTH_256                       0x00000008 /* RW--V */
#define NV_UREMAP_FORMAT_HEIGHT                                11:8 /* RWIVF */
#define NV_UREMAP_FORMAT_HEIGHT_1                        0x00000000 /* RWI-V */
#define NV_UREMAP_FORMAT_HEIGHT_2                        0x00000001 /* RW--V */
#define NV_UREMAP_FORMAT_HEIGHT_4                        0x00000002 /* RW--V */
#define NV_UREMAP_FORMAT_HEIGHT_8                        0x00000003 /* RW--V */
#define NV_UREMAP_FORMAT_HEIGHT_16                       0x00000004 /* RW--V */
#define NV_UREMAP_FORMAT_HEIGHT_32                       0x00000005 /* RW--V */
#define NV_UREMAP_FORMAT_HEIGHT_64                       0x00000006 /* RW--V */
#define NV_UREMAP_FORMAT_HEIGHT_128                      0x00000007 /* RW--V */
#define NV_UREMAP_FORMAT_HEIGHT_256                      0x00000008 /* RW--V */
#define NV_UREMAP_FORMAT_DEPTH                                15:12 /* RWIVF */
#define NV_UREMAP_FORMAT_DEPTH_1                         0x00000000 /* RWI-V */
#define NV_UREMAP_FORMAT_DEPTH_2                         0x00000001 /* RW--V */
#define NV_UREMAP_FORMAT_DEPTH_4                         0x00000002 /* RW--V */
#define NV_UREMAP_FORMAT_DEPTH_8                         0x00000003 /* RW--V */
#define NV_UREMAP_FORMAT_DEPTH_16                        0x00000004 /* RW--V */
#define NV_UREMAP_FORMAT_DEPTH_32                        0x00000005 /* RW--V */
#define NV_UREMAP_FORMAT_DEPTH_64                        0x00000006 /* RW--V */
#define NV_UREMAP_FORMAT_DEPTH_128                       0x00000007 /* RW--V */
#define NV_UREMAP_FORMAT_DEPTH_256                       0x00000008 /* RW--V */
#define NV_UREMAP_OFFSET(i)              ((i)*0x10000 + 0x00C00004) /* RW-4R */
#define NV_UREMAP_OFFSET__SIZE                                    2 /*       */
#define NV_UREMAP_OFFSET_ADR                                   32:0 /* RWIVF */
#define NV_UREMAP_OFFSET_ADR_0                           0x00000000 /* RWI-V */
/* dev_tremapper.ref */
#define NV_PREMAP                             0x006E1FFF:0x006E0000 /* RW--D */
#define NV_PREMAP_BASE(i)                   ((i)*0x10 + 0x006e0000) /* RW-4R */
#define NV_PREMAP_BASE__SIZE                                      2 /*       */
#define NV_PREMAP_ENDIAN                                        0:0 /* RWIVF */
#define NV_PREMAP_ENDIAN_LE                              0x00000000 /* RWI-V */
#define NV_PREMAP_ENDIAN_BE                              0x00000001 /* RWI-V */
#define NV_PREMAP_BASE_ADR                                     28:6 /* RWIVF */
#define NV_PREMAP_BASE_ADR_0                             0x00000000 /* RWI-V */
#define NV_PREMAP_LIMIT(i)                  ((i)*0x10 + 0x006e0004) /* RW-4R */
#define NV_PREMAP_LIMIT__SIZE                                     2 /*       */
#define NV_PREMAP_LIMIT_ADR                                    28:6 /* RWIVF */
#define NV_PREMAP_LIMIT_ADR_0                            0x00000000 /* RWI-V */
#define NV_PREMAP_CONTROL                                0x006e0100 /* RW-4R */
#define NV_PREMAP_CONTROL_ALLOC_STATUS                          1:0 /* RW-VF */
#define NV_PREMAP_CONTROL_NOT_ALLOCATED                  0x00000000 /* RWI-V */
#define NV_PREMAP_CONTROL_ALLOCATE_CTX0                  0x00000001 /* RW--V */
#define NV_PREMAP_CONTROL_ALLOCATE_CTX1                  0x00000002 /* RW--V */
#define NV_PREMAP_CONTROL_DIRTY                               31:31 /* -W-VF */
#define NV_PREMAP_CONTROL_DIRTY_RESET                    0x00000000 /* -W--V */
#define NV_PREMAP_CONTROL_DIRTY_SET                      0x00000001 /* -W--V */
#define NV_PREMAP_INTR                                   0x006e0300 /* RW-4R */
#define NV_PREMAP_INTR_FORMAT_ERROR                             0:0 /* RWXVF */
#define NV_PREMAP_INTR_FORMAT_ERROR_NOT_PENDING          0x00000000 /* R---V */
#define NV_PREMAP_INTR_FORMAT_ERROR_PENDING              0x00000001 /* R---V */
#define NV_PREMAP_INTR_FORMAT_ERROR_RESET                0x00000001 /* -W--V */
#define NV_PREMAP_INTR_EN_0                              0x006e0304 /* RW-4R */
#define NV_PREMAP_INTR_EN_0_FORMAT_ERROR                        0:0 /* RWIVF */
#define NV_PREMAP_INTR_EN_0_FORMAT_ERROR_DISABLED        0x00000000 /* RWI-V */
#define NV_PREMAP_INTR_EN_0_FORMAT_ERROR_ENABLED         0x00000001 /* RW--V */
#define NV_PREMAP_BUFFER(i)                   ((i)*4 + 0x00000800)) /* RW-4R */
#define NV_PREMAP_BUFFER__SIZE                                  512 /*       */
#define NV_PREMAP_BUFFER_BYTE0                                  8:0 /* RW--V */
#define NV_PREMAP_BUFFER_BYTE1                                24:16 /* RW--V */
#define NV_PREMAP_PFORMAT(i)               ((i)*0x10 + 0x006e0200)) /* RW-4R */
#define NV_PREMAP_PFORMAT__SIZE                                   2 /*       */
#define NV_PREMAP_PFORMAT_ADR                                  15:0 /* RWIVF */
#define NV_PREMAP_PFORMAT_ADR_0                          0x00000000 /* RWI-V */
#define NV_PREMAP_POFFSET(i)               ((i)*0x10 + 0x006e0204)) /* RW-4R */
#define NV_PREMAP_POFFSET__SIZE                                   2 /*       */
#define NV_PREMAP_POFFSET_ADR                                  31:0 /* RWIVF */
#define NV_PREMAP_POFFSET_ADR_0                          0x00000000 /* RWI-V */
#define NV_PREMAP_DBG_CONTROL                            0x006e0400 /* RW-4R */
#define NV_PREMAP_DBG_CONTROL_FLUSH                             0:0 /* -W-VF */
#define NV_PREMAP_DBG_CONTROL_FLUSH_REMAP                0x00000001 /* -W--V */
#define NV_PREMAP_DBG_RAM_DIAG                                  4:4 /* RW-VF */
#define NV_PREMAP_DBG_RAM_DIAG_DISABLED                  0x00000000 /* RWI-V */
#define NV_PREMAP_DBG_RAM_DIAG_ENABLED                   0x00000001 /* RW--V */
#define NV_PREMAP_DBG_CONTEXT                                   8:8 /* R---F */
#define NV_PREMAP_DBG_CONTEXT_0                          0x00000000 /* R-I-V */
#define NV_PREMAP_DBG_CONTEXT_1                          0x00000001 /* R---V */
#define NV_PREMAP_DBG_DIRTY_STATE                             12:12 /* R---F */
#define NV_PREMAP_DBG_NOT_DIRTY                          0x00000000 /* R-I-V */
#define NV_PREMAP_DBG_DIRTY                              0x00000001 /* R---V */
/* dev_tremapper.ref */
#define NV_BREMAP_BUFFER32(i,j)                 (i*0x10000) + (j*4) /* RW-4A */
#define NV_BREMAP_BUFFER32__SIZE_1                                2 /*       */
#define NV_BREMAP_BUFFER32__SIZE_2                              128 /*       */
#define NV_BREMAP_BUFFER32_VALUE                               31:0 /* RW--V */
#define NV_BREMAP_BUFFER16(i,j)           ((i*0x10000)+(j/2)+(j%2)) /* RW-2A */
#define NV_BREMAP_BUFFER16__SIZE_1                                2 /*       */
#define NV_BREMAP_BUFFER16__SIZE_2                              256 /*       */
#define NV_BREMAP_BUFFER16_VALUE                               15:0 /* RW--V */
#define NV_BREMAP_BUFFER8(i,j)       ((i*0x10000) + j + 0x00000000) /* RW-1A */
#define NV_BREMAP_BUFFER8__SIZE_1                                 2 /*       */
#define NV_BREMAP_BUFFER8_SIZE_2                                512 /*       */
#define NV_BREMAP_BUFFER8_VALUE                                 7:0 /* RW--V */
/* dev_host_diag.ref */
#define NV_HOST_DIAG                          0x00005FFF:0x00005000 /* RW--D */
#define NV_HOST_DIAG_C1SYNCM_DATA(i)           (0x00005000 +(i)* 8) /* RW-4R */
#define NV_HOST_DIAG_C1SYNCM_DATA__SIZE_1                         4 /*       */
#define NV_HOST_DIAG_C1SYNCM_DATA_VALUE                        13:0 /* RWXUF */
#define NV_HOST_DIAG_C1SYNCD_DATA(i)           (0x00005004 +(i)* 8) /* RW-4R */
#define NV_HOST_DIAG_C1SYNCD_DATA__SIZE_1                         4 /*       */
#define NV_HOST_DIAG_C1SYNCD_DATA_VALUE                        31:0 /* RWXUF */
#define NV_HOST_DIAG_CPUQA_DATA(i)            (0x00005400 +(i)* 64) /* RW-4R */
#define NV_HOST_DIAG_CPUQA_DATA__SIZE_1                         16  /*       */
#define NV_HOST_DIAG_CPUQA_DATA_VALUE                         28:0  /* RWXUF */
#define NV_HOST_DIAG_CPUQD0L_DATA(i)          (0x00005408 +(i)* 64) /* RW-4R */
#define NV_HOST_DIAG_CPUQD0L_DATA__SIZE_1                        16 /*       */
#define NV_HOST_DIAG_CPUQD0L_DATA_VALUE                        31:0 /* RWXUF */
#define NV_HOST_DIAG_CPUQD1L_DATA(i)          (0x00005410 +(i)* 64) /* RW-4R */
#define NV_HOST_DIAG_CPUQD1L_DATA__SIZE_1                        16 /*       */
#define NV_HOST_DIAG_CPUQD1L_DATA_VALUE                        31:0 /* RWXUF */
#define NV_HOST_DIAG_CPUQD2L_DATA(i)          (0x00005418 +(i)* 64) /* RW-4R */
#define NV_HOST_DIAG_CPUQD2L_DATA__SIZE_1                        16 /*       */
#define NV_HOST_DIAG_CPUQD2L_DATA_VALUE                        31:0 /* RWXUF */
#define NV_HOST_DIAG_CPUQD3L_DATA(i)          (0x00005420 +(i)* 64) /* RW-4R */
#define NV_HOST_DIAG_CPUQD3L_DATA__SIZE_1                        16 /*       */
#define NV_HOST_DIAG_CPUQD3L_DATA_VALUE                        31:0 /* RWXUF */
#define NV_HOST_DIAG_CPUQD0H_DATA(i)          (0x0000540c +(i)* 64) /* RW-4R */
#define NV_HOST_DIAG_CPUQD0H_DATA__SIZE_1                        16 /*       */
#define NV_HOST_DIAG_CPUQD0H_DATA_VALUE                         3:0 /* RWXUF */
#define NV_HOST_DIAG_CPUQD1H_DATA(i)          (0x00005414 +(i)* 64) /* RW-4R */
#define NV_HOST_DIAG_CPUQD1H_DATA__SIZE_1                        16 /*       */
#define NV_HOST_DIAG_CPUQD1H_DATA_VALUE                         3:0 /* RWXUF */
#define NV_HOST_DIAG_CPUQD2H_DATA(i)          (0x0000541c +(i)* 64) /* RW-4R */
#define NV_HOST_DIAG_CPUQD2H_DATA__SIZE_1                        16 /*       */
#define NV_HOST_DIAG_CPUQD2H_DATA_VALUE                         3:0 /* RWXUF */
#define NV_HOST_DIAG_CPUQD3H_DATA(i)          (0x00005424 +(i)* 64) /* RW-4R */
#define NV_HOST_DIAG_CPUQD3H_DATA__SIZE_1                        16 /*       */
#define NV_HOST_DIAG_CPUQD3H_DATA_VALUE                         3:0 /* RWXUF */
#define NV_HOST_DIAG_AQL_DATA(i)               (0x00005100 +(i)* 8) /* RW-4R */
#define NV_HOST_DIAG_AQL_DATA__SIZE_1                             4 /*       */
#define NV_HOST_DIAG_AQL_DATA_VALUE                            31:0 /* RWXUF */
#define NV_HOST_DIAG_AQH_DATA(i)               (0x00005104 +(i)* 8) /* RW-4R */
#define NV_HOST_DIAG_AQH_DATA__SIZE_1                             4 /*       */
#define NV_HOST_DIAG_AQH_DATA_VALUE                            19:0 /* RWXUF */
#define NV_HOST_DIAG_WDQL_DATA(i)              (0x00005200 +(i)* 8) /* RW-4R */
#define NV_HOST_DIAG_WDQL_DATA__SIZE_1                            8 /*       */
#define NV_HOST_DIAG_WDQL_DATA_VALUE                           31:0 /* RWXUF */
#define NV_HOST_DIAG_WDQH_DATA(i)              (0x00005204 +(i)* 8) /* RW-4R */
#define NV_HOST_DIAG_WDQH_DATA__SIZE_1                            8 /*       */
#define NV_HOST_DIAG_WDQH_DATA_VALUE                            3:0 /* RWXUF */
#define NV_HOST_DIAG_DSPQ_DATA(i)              (0x00005300 +(i)* 4) /* RW-4R */
#define NV_HOST_DIAG_DSPQ_DATA__SIZE_1                           32 /*       */
#define NV_HOST_DIAG_DSPQ_DATA_VALUE                           18:0 /* RWXUF */
#define NV_HOST_DIAG_RDQ0_DATA(i)             (0x00005800 +(i)* 32) /* RW-4R */
#define NV_HOST_DIAG_RDQ0_DATA__SIZE_1                           16 /*       */
#define NV_HOST_DIAG_RDQ0_DATA_VALUE                           31:0 /* RWXUF */
#define NV_HOST_DIAG_RDQ1L_DATA(i)            (0x00005804 +(i)* 32) /* RW-4R */
#define NV_HOST_DIAG_RDQ1L_DATA__SIZE_1                          16 /*       */
#define NV_HOST_DIAG_RDQ1L_DATA_VALUE                          31:0 /* RWXUF */
#define NV_HOST_DIAG_RDQ1H_DATA(i)            (0x00005808 +(i)* 32) /* RW-4R */
#define NV_HOST_DIAG_RDQ1H_DATA__SIZE_1                          16 /*       */
#define NV_HOST_DIAG_RDQ1H_DATA_VALUE                          15:0 /* RWXUF */
#define NV_HOST_DIAG_RDQ2_DATA(i)             (0x00005810 +(i)* 32) /* RW-4R */
#define NV_HOST_DIAG_RDQ2_DATA__SIZE_1                           16 /*       */
#define NV_HOST_DIAG_RDQ2_DATA_VALUE                           31:0 /* RWXUF */
#define NV_HOST_DIAG_RDQ3L_DATA(i)            (0x00005814 +(i)* 32) /* RW-4R */
#define NV_HOST_DIAG_RDQ3L_DATA__SIZE_1                          16 /*       */
#define NV_HOST_DIAG_RDQ3L_DATA_VALUE                          31:0 /* RWXUF */
#define NV_HOST_DIAG_RDQ3H_DATA(i)            (0x00005818 +(i)* 32) /* RW-4R */
#define NV_HOST_DIAG_RDQ3H_DATA__SIZE_1                          16 /*       */
#define NV_HOST_DIAG_RDQ3H_DATA_VALUE                          15:0 /* RWXUF */
#define NV_HOST_DIAG_CTL                                 0x00005F00 /* RW-4R */
#define NV_HOST_DIAG_RAM_RDWR                                   0:0 /* RWIUF */
#define NV_HOST_DIAG_RAM_RDWR_OFF                               0x0 /* RWI-V */
#define NV_HOST_DIAG_RAM_RDWR_ON                                0x1 /* RW--V */
#define NV_HOST_DIAG_RP1_SEL                                    1:1 /* RWIUF */
#define NV_HOST_DIAG_RP1_OFF                                    0x0 /* RWI-V */
#define NV_HOST_DIAG_RP1_ON                                     0x1 /* RW--V */
#define NV_HOST_DIAG_FWB0L_DATA(i)            (0x00005A00 +(i)* 32) /* RW-4R */
#define NV_HOST_DIAG_FWB0L_DATA__SIZE_1                          16 /*       */
#define NV_HOST_DIAG_FWB0L_DATA_VALUE                          31:0 /* RWXUF */
#define NV_HOST_DIAG_FWB1L_DATA(i)            (0x00005A08 +(i)* 32) /* RW-4R */
#define NV_HOST_DIAG_FWB1L_DATA__SIZE_1                          16 /*       */
#define NV_HOST_DIAG_FWB1L_DATA_VALUE                          31:0 /* RWXUF */
#define NV_HOST_DIAG_FWB2L_DATA(i)            (0x00005A10 +(i)* 32) /* RW-4R */
#define NV_HOST_DIAG_FWB2L_DATA__SIZE_1                          16 /*       */
#define NV_HOST_DIAG_FWB2L_DATA_VALUE                          31:0 /* RWXUF */
#define NV_HOST_DIAG_FWB3L_DATA(i)            (0x00005A18 +(i)* 32) /* RW-4R */
#define NV_HOST_DIAG_FWB3L_DATA__SIZE_1                          16 /*       */
#define NV_HOST_DIAG_FWB3L_DATA_VALUE                          31:0 /* RWXUF */
#define NV_HOST_DIAG_FWB0H_DATA(i)            (0x00005A04 +(i)* 32) /* RW-4R */
#define NV_HOST_DIAG_FWB0H_DATA__SIZE_1                          16 /*       */
#define NV_HOST_DIAG_FWB0H_DATA_VALUE                          31:0 /* RWXUF */
#define NV_HOST_DIAG_FWB1H_DATA(i)            (0x00005A0c +(i)* 32) /* RW-4R */
#define NV_HOST_DIAG_FWB1H_DATA__SIZE_1                          16 /*       */
#define NV_HOST_DIAG_FWB1H_DATA_VALUE                          31:0 /* RWXUF */
#define NV_HOST_DIAG_FWB2H_DATA(i)            (0x00005A14 +(i)* 32) /* RW-4R */
#define NV_HOST_DIAG_FWB2H_DATA__SIZE_1                          16 /*       */
#define NV_HOST_DIAG_FWB2H_DATA_VALUE                          31:0 /* RWXUF */
#define NV_HOST_DIAG_FWB3H_DATA(i)            (0x00005A1c +(i)* 32) /* RW-4R */
#define NV_HOST_DIAG_FWB3H_DATA__SIZE_1                          16 /*       */
#define NV_HOST_DIAG_FWB3H_DATA_VALUE                          31:0 /* RWXUF */
#define NV_HOST_DIAG_FWAQ_DATA(i)              (0x00005c00 +(i)* 4) /* RW-4R */
#define NV_HOST_DIAG_FWAQ_DATA__SIZE_1                           4  /*       */
#define NV_HOST_DIAG_FWAQ_DATA_VALUE                          28:0  /* RWXUF */
/* dev_ram.ref */
/* dev_fifo.ref */
#define NV_USER_OBJECT__SIZE_1                                   32 /*       */
#define NV_USER_FREE016__SIZE_1                                  32 /*       */
#define NV_USER_FREE032__SIZE_1                                  32 /*       */
#define NV_USER_ZERO016__SIZE_1                                  32 /*       */
#define NV_USER_ZERO032__SIZE_1                                  32 /*       */
#define NV_USER_DMA_PUT_OFFSET                                 31:2 /* -WXUF */
#define NV_USER_DMA_GET_OFFSET                                 31:2 /* R-XUF */
/* dev_graphics.ref */
#define NV_PGRAPH_DEBUG_0                                0x00400080 /* RW-4R */
#define NV_PGRAPH_DEBUG_0_STATE                                 0:0 /* RWIVF */
#define NV_PGRAPH_DEBUG_0_STATE_NORMAL                   0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_0_STATE_RESET                    0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_0_FE_2D_STATE                           1:1 /* RWIVF */
#define NV_PGRAPH_DEBUG_0_FE_2D_STATE_NORMAL             0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_0_FE_2D_STATE_RESET              0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_0_FE_3D_STATE                           2:2 /* RWIVF */
#define NV_PGRAPH_DEBUG_0_FE_3D_STATE_NORMAL             0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_0_FE_3D_STATE_RESET              0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_0_CACHE_STATE                           3:3 /* RWIVF */
#define NV_PGRAPH_DEBUG_0_CACHE_STATE_NORMAL             0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_0_CACHE_STATE_RESET              0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_0_PREROP_STATE                          4:4 /* RWIVF */
#define NV_PGRAPH_DEBUG_0_PREROP_STATE_NORMAL            0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_0_PREROP_STATE_RESET             0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_0_ROP_STATE                             5:5 /* RWIVF */
#define NV_PGRAPH_DEBUG_0_ROP_STATE_NORMAL               0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_0_ROP_STATE_RESET                0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_0_FINE_RSTR_STATE                       6:6 /* RWIVF */
#define NV_PGRAPH_DEBUG_0_FINE_RSTR_STATE_NORMAL         0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_0_FINE_RSTR_STATE_RESET          0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_0_COARSE_RSTR_STATE                     7:7 /* RWIVF */
#define NV_PGRAPH_DEBUG_0_COARSE_RSTR_STATE_NORMAL       0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_0_COARSE_RSTR_STATE_RESET        0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_0_DMA_STATE                             8:8 /* RWIVF */
#define NV_PGRAPH_DEBUG_0_DMA_STATE_NORMAL               0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_0_DMA_STATE_RESET                0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_0_RSTR_2D_STATE                         9:9 /* RWIVF */
#define NV_PGRAPH_DEBUG_0_RSTR_2D_STATE_NORMAL           0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_0_RSTR_2D_STATE_RESET            0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_0_SETUP_STATE                         10:10 /* RWIVF */
#define NV_PGRAPH_DEBUG_0_SETUP_STATE_NORMAL             0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_0_SETUP_STATE_RESET              0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_0_ZCULL_STATE                         11:11 /* RWIVF */
#define NV_PGRAPH_DEBUG_0_ZCULL_STATE_NORMAL             0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_0_ZCULL_STATE_RESET              0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_0_SHD_STATE                           13:13 /* RWIVF */
#define NV_PGRAPH_DEBUG_0_SHD_STATE_NORMAL               0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_0_SHD_STATE_RESET                0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_0_SHDBE_STATE                         14:14 /* RWIVF */
#define NV_PGRAPH_DEBUG_0_SHDBE_STATE_NORMAL             0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_0_SHDBE_STATE_RESET              0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_0_XF_STATE                            15:15 /* RWIVF */
#define NV_PGRAPH_DEBUG_0_XF_STATE_NORMAL                0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_0_XF_STATE_RESET                 0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_0_IDX_STATE                           16:16 /* RWIVF */
#define NV_PGRAPH_DEBUG_0_IDX_STATE_NORMAL               0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_0_IDX_STATE_RESET                0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_0_VTX_STATE                           17:17 /* RWIVF */
#define NV_PGRAPH_DEBUG_0_VTX_STATE_NORMAL               0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_0_VTX_STATE_RESET                0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_0_CAS_STATE                           18:18 /* RWIVF */
#define NV_PGRAPH_DEBUG_0_CAS_STATE_NORMAL               0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_0_CAS_STATE_RESET                0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_0_FD_STATE                            19:19 /* RWIVF */
#define NV_PGRAPH_DEBUG_0_FD_STATE_NORMAL                0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_0_FD_STATE_RESET                 0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_0_CMB_STATE                           20:20 /* RWIVF */
#define NV_PGRAPH_DEBUG_0_CMB_STATE_NORMAL               0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_0_CMB_STATE_RESET                0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_0_CBUF_STATE                          21:21 /* RWIVF */
#define NV_PGRAPH_DEBUG_0_CBUF_STATE_NORMAL              0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_0_CBUF_STATE_RESET               0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_0_ZRD_STATE                           22:22 /* RWIVF */
#define NV_PGRAPH_DEBUG_0_ZRD_STATE_NORMAL               0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_0_ZRD_STATE_RESET                0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_0_ZWR_STATE                           23:23 /* RWIVF */
#define NV_PGRAPH_DEBUG_0_ZWR_STATE_NORMAL               0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_0_ZWR_STATE_RESET                0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_0_XBAR_STATE                          24:24 /* RWIVF */
#define NV_PGRAPH_DEBUG_0_XBAR_STATE_NORMAL              0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_0_XBAR_STATE_RESET               0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_0_CROP_STATE                          25:25 /* RWIVF */
#define NV_PGRAPH_DEBUG_0_CROP_STATE_NORMAL              0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_0_CROP_STATE_RESET               0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_1                                0x00400084 /* RW-4R */
#define NV_PGRAPH_DEBUG_1_VOLATILE_RESET                        0:0 /* RWIVF */
#define NV_PGRAPH_DEBUG_1_VOLATILE_RESET_NOT_LAST        0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_1_VOLATILE_RESET_LAST            0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_1_VOLATILE_RESET_INIT            0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_1_DMA_ACTIVITY                          4:4 /* CWIVF */
#define NV_PGRAPH_DEBUG_1_DMA_ACTIVITY_IGNORE            0x00000000 /* CWI-V */
#define NV_PGRAPH_DEBUG_1_DMA_ACTIVITY_CANCEL            0x00000001 /* -W--T */
#define NV_PGRAPH_DEBUG_1_PM                                    5:5 /* CWIVF */
#define NV_PGRAPH_DEBUG_1_PM_IGNORE                      0x00000000 /* CWI-V */
#define NV_PGRAPH_DEBUG_1_PM_TRIGGER                     0x00000001 /* -W--T */
#define NV_PGRAPH_DEBUG_1_MS_ENUMS                              6:6 /* RWIVF */
#define NV_PGRAPH_DEBUG_1_MS_ENUMS_DISABLED              0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_1_MS_ENUMS_ENABLED               0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_1_MS_ENUMS_INIT                  0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_1_GL_ENUMS                              7:7 /* RWIVF */
#define NV_PGRAPH_DEBUG_1_GL_ENUMS_DISABLED              0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_1_GL_ENUMS_ENABLED               0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_1_GL_ENUMS_INIT                  0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_1_VTX_PTE                               8:8 /* RWIVF */
#define NV_PGRAPH_DEBUG_1_VTX_PTE_DISABLED               0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_1_VTX_PTE_ENABLED                0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_1_VTX_PTE_INIT                   0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_1_VTX_CACHE                             9:9 /* RWIVF */
#define NV_PGRAPH_DEBUG_1_VTX_CACHE_DISABLED             0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_1_VTX_CACHE_ENABLED              0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_1_VTX_CACHE_INIT                 0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_1_VTX_FILE                            10:10 /* RWIVF */
#define NV_PGRAPH_DEBUG_1_VTX_FILE_DISABLED              0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_1_VTX_FILE_ENABLED               0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_1_VTX_FILE_INIT                  0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_1_XF_ASYNC                            12:12 /* RWIVF */
#define NV_PGRAPH_DEBUG_1_XF_ASYNC_DISABLED              0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_1_XF_ASYNC_ENABLED               0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_1_LT_ASYNC                            13:13 /* RWIVF */
#define NV_PGRAPH_DEBUG_1_LT_ASYNC_DISABLED              0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_1_LT_ASYNC_ENABLED               0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_1_DRAWDIR_AUTO                        14:14 /* RWIVF */
#define NV_PGRAPH_DEBUG_1_DRAWDIR_AUTO_DISABLED          0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_1_DRAWDIR_AUTO_ENABLED           0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_1_DRAWDIR_AUTO_INIT              0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_1_DRAWDIR_Y                           15:15 /* RWIVF */
#define NV_PGRAPH_DEBUG_1_DRAWDIR_Y_DECR                 0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_1_DRAWDIR_Y_INCR                 0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_1_DRAWDIR_Y_INIT                 0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_1_INSTANCE                            16:16 /* RWIVF */
#define NV_PGRAPH_DEBUG_1_INSTANCE_DISABLED              0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_1_INSTANCE_ENABLED               0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_1_INSTANCE_INIT                  0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_1_CTX                                 20:20 /* RWIVF */
#define NV_PGRAPH_DEBUG_1_CTX_DISABLED                   0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_1_CTX_ENABLED                    0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_1_CTX_INIT                       0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_1_CACHE                               24:24 /* CWIVF */
#define NV_PGRAPH_DEBUG_1_CACHE_IGNORE                   0x00000000 /* CWI-V */
#define NV_PGRAPH_DEBUG_1_CACHE_INVALIDATE               0x00000001 /* -W--T */
#define NV_PGRAPH_DEBUG_2                                0x00400880 /* RW-4R */
#define NV_PGRAPH_DEBUG_2_PREROP_PITCH_CHECK_2D                   0:0 /* RWIVF */
#define NV_PGRAPH_DEBUG_2_PREROP_PITCH_CHECK_2D_DISABLED   0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_2_PREROP_PITCH_CHECK_2D_ENABLED    0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_2_PREROP_PITCH_CHECK_2D_INIT       0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_2_PREROP_PITCH_CHECK_BLT                  1:1 /* RWIVF */
#define NV_PGRAPH_DEBUG_2_PREROP_PITCH_CHECK_BLT_DISABLED  0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_2_PREROP_PITCH_CHECK_BLT_ENABLED   0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_2_PREROP_PITCH_CHECK_BLT_INIT      0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_2_PREROP_PITCH_CHECK_CELS                 2:2 /* RWIVF */
#define NV_PGRAPH_DEBUG_2_PREROP_PITCH_CHECK_CELS_DISABLED 0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_2_PREROP_PITCH_CHECK_CELS_ENABLED  0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_2_PREROP_PITCH_CHECK_CELS_INIT     0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_2_PREROP_PITCH_CHECK_3D                   3:3 /* RWIVF */
#define NV_PGRAPH_DEBUG_2_PREROP_PITCH_CHECK_3D_DISABLED   0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_2_PREROP_PITCH_CHECK_3D_ENABLED    0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_2_PREROP_PITCH_CHECK_3D_INIT       0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_2_PREROP_LIMIT_CHECK                    4:4 /* RWIVF */
#define NV_PGRAPH_DEBUG_2_PREROP_LIMIT_CHECK_DISABLED    0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_2_PREROP_LIMIT_CHECK_ENABLED     0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_2_PREROP_LIMIT_CHECK_INIT        0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_2_PREROP_OVRFLW_CHECK                   5:5 /* RWIVF */
#define NV_PGRAPH_DEBUG_2_PREROP_OVRFLW_CHECK_DISABLED   0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_2_PREROP_OVRFLW_CHECK_ENABLED    0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_2_PREROP_OVRFLW_CHECK_INIT       0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_2_PREROP_MEMSIZE_CHECK                  6:6 /* RWIVF */
#define NV_PGRAPH_DEBUG_2_PREROP_MEMSIZE_CHECK_DISABLED  0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_2_PREROP_MEMSIZE_CHECK_ENABLED   0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_2_PREROP_MEMSIZE_CHECK_INIT      0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_2_PREROP_SWIZZLE_CHECK                  7:7 /* RWIVF */
#define NV_PGRAPH_DEBUG_2_PREROP_SWIZZLE_CHECK_DISABLED  0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_2_PREROP_SWIZZLE_CHECK_ENABLED   0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_2_PREROP_SWIZZLE_CHECK_INIT      0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_2_PREROP_TILEVIOL                       8:8 /* RWIVF */
#define NV_PGRAPH_DEBUG_2_PREROP_TILEVIOL_DISABLED       0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_2_PREROP_TILEVIOL_ENABLED        0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_2_PREROP_TILEVIOL_INIT           0x00000001 /* RW0-V */
#define NV_PGRAPH_DEBUG_2_PREROP_ENDIAN_CHECK                   9:9 /* RWIVF */
#define NV_PGRAPH_DEBUG_2_PREROP_ENDIAN_CHECK_DISABLED   0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_2_PREROP_ENDIAN_CHECK_ENABLED    0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_2_PREROP_ENDIAN_CHECK_INIT       0x00000001 /* RW0-V */
#define NV_PGRAPH_DEBUG_2_PREROP_LIMIT_INT                    10:10 /* RWIVF */
#define NV_PGRAPH_DEBUG_2_PREROP_LIMIT_INT_DISABLED      0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_2_PREROP_LIMIT_INT_ENABLED       0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_2_PREROP_LIMIT_INT_INIT          0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_2_PREROP_OVRFLW_INT                   11:11 /* RWIVF */
#define NV_PGRAPH_DEBUG_2_PREROP_OVRFLW_INT_DISABLED     0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_2_PREROP_OVRFLW_INT_ENABLED      0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_2_PREROP_OVRFLW_INT_INIT         0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_2_PREROP_PASS_VIOL                    12:12 /* RWIVF */
#define NV_PGRAPH_DEBUG_2_PREROP_PASS_VIOL_DISABLED      0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_2_PREROP_PASS_VIOL_ENABLED       0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_2_PREROP_PASS_VIOL_INIT          0x00000000 /* RW0-V */
#define NV_PGRAPH_DEBUG_2_PREROP_PITCHWRAP                    13:13 /* RWIVF */
#define NV_PGRAPH_DEBUG_2_PREROP_PITCHWRAP_DISABLED      0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_2_PREROP_PITCHWRAP_ENABLED       0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_2_PREROP_PITCHWRAP_INIT          0x00000000 /* RW0-V */
#define NV_PGRAPH_DEBUG_2_PREROP_DITHER_3D                    14:14 /* RWIVF */
#define NV_PGRAPH_DEBUG_2_PREROP_DITHER_3D_DISABLED      0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_2_PREROP_DITHER_3D_ENABLED       0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_2_PREROP_DITHER_3D_INIT          0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_2_PREROP_DITHER_2D                    15:15 /* RWIVF */
#define NV_PGRAPH_DEBUG_2_PREROP_DITHER_2D_DISABLED      0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_2_PREROP_DITHER_2D_ENABLED       0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_2_PREROP_DITHER_2D_INIT          0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_2_PREROP_SWALLOW_REQS                 16:16 /* RWIVF */
#define NV_PGRAPH_DEBUG_2_PREROP_SWALLOW_REQS_DISABLED   0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_2_PREROP_SWALLOW_REQS_ENABLED    0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_2_PREROP_SWALLOW_REQS_INIT       0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_2_PREROP_SBFILTER                     17:17 /* RWIVF */
#define NV_PGRAPH_DEBUG_2_PREROP_SBFILTER_ENABLE         0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_2_PREROP_SBFILTER_DISABLE        0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_2_PREROP_SBFILTER_INIT           0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_2_PREROP_FASTCLEAR                    18:18 /* RWIVF */
#define NV_PGRAPH_DEBUG_2_PREROP_FASTCLEAR_ENABLE        0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_2_PREROP_FASTCLEAR_DISABLE       0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_2_PREROP_FASTCLEAR_INIT          0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_2_PREROP_FLUSH_HOLDOFF                19:19 /* RWIVF */
#define NV_PGRAPH_DEBUG_2_PREROP_FLUSH_HOLDOFF_DISABLE   0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_2_PREROP_FLUSH_HOLDOFF_ENABLE    0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_2_PREROP_FLUSH_HOLDOFF_INIT      0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_2_PREROP_TILEBIT_UPDATE               20:20 /* RWIVF */
#define NV_PGRAPH_DEBUG_2_PREROP_TILEBIT_UPDATE_AUTO     0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_2_PREROP_TILEBIT_UPDATE_MANUAL   0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_2_PREROP_TILEBIT_UPDATE_INIT     0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_2_PREROP_SPARE                        31:21 /* RWIVF */
#define NV_PGRAPH_DEBUG_2_PREROP_SPARE_DISABLED          0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_3                                0x0040008C /* RW-4R */
#define NV_PGRAPH_DEBUG_3_FLUSHING                              0:0 /* RWIVF */
#define NV_PGRAPH_DEBUG_3_FLUSHING_DISABLED              0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_3_FLUSHING_ENABLED               0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3_FLUSHING_INIT                  0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3_ZCULLFLUSH                            1:1 /* CWIVF */
#define NV_PGRAPH_DEBUG_3_ZCULLFLUSH_IGNORE              0x00000000 /* CWI-V */
#define NV_PGRAPH_DEBUG_3_ZCULLFLUSH_ACTIVATE            0x00000001 /* -W--T */
#define NV_PGRAPH_DEBUG_3_HW_CONTEXT_SWITCH                     2:2 /* RWIVF */
#define NV_PGRAPH_DEBUG_3_HW_CONTEXT_SWITCH_DISABLED     0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_3_HW_CONTEXT_SWITCH_ENABLED      0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3_HW_CONTEXT_SWITCH_INIT         0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3_FD_CHECK                              3:3 /* RWIVF */
#define NV_PGRAPH_DEBUG_3_FD_CHECK_DISABLED              0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_3_FD_CHECK_ENABLED               0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3_FD_CHECK_INIT                  0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3_FAST_DATA_STRTCH                      4:4 /* RWIVF */
#define NV_PGRAPH_DEBUG_3_FAST_DATA_STRTCH_DISABLED      0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_3_FAST_DATA_STRTCH_ENABLED       0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3_FAST_DATA_STRTCH_INIT          0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3_FAST_3D_SHADOW_DATA                   5:5 /* RWIVF */
#define NV_PGRAPH_DEBUG_3_FAST_3D_SHADOW_DATA_DISABLED   0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_3_FAST_3D_SHADOW_DATA_ENABLED    0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3_FAST_3D_SHADOW_DATA_INIT       0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3_CHECK_64BYTE_ALIGN                    6:6 /* RWIVF */
#define NV_PGRAPH_DEBUG_3_CHECK_64BYTE_ALIGN_DISABLED    0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_3_CHECK_64BYTE_ALIGN_ENABLED     0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3_CHECK_64BYTE_ALIGN_INIT        0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3_ZFLUSH                                7:7 /* CWIVF */
#define NV_PGRAPH_DEBUG_3_ZFLUSH_IGNORE                  0x00000000 /* CWI-V */
#define NV_PGRAPH_DEBUG_3_ZFLUSH_ACTIVATE                0x00000001 /* -W--T */
#define NV_PGRAPH_DEBUG_3_SINGLE_STEP                           8:8 /* RWIVF */
#define NV_PGRAPH_DEBUG_3_SINGLE_STEP_DISABLED           0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_3_SINGLE_STEP_ENABLED            0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3_SINGLE_STEP_INIT               0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_3_RDI_IDLE_WAIT                         9:9 /* RWIVF */
#define NV_PGRAPH_DEBUG_3_RDI_IDLE_WAIT_DISABLED         0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_3_RDI_IDLE_WAIT_ENABLED          0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3_RDI_IDLE_WAIT_INIT             0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_3_IDLE_FILTER                         10:10 /* RWIVF */
#define NV_PGRAPH_DEBUG_3_IDLE_FILTER_DISABLED           0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_3_IDLE_FILTER_ENABLED            0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3_IDLE_FILTER_INIT               0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_3_SYNCHRONIZE                         12:12 /* RWIVF */
#define NV_PGRAPH_DEBUG_3_SYNCHRONIZE_DISABLED           0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_3_SYNCHRONIZE_ENABLED            0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3_SYNCHRONIZE_INIT               0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_3_OBJECT_RELOAD                       14:14 /* RWIVF */
#define NV_PGRAPH_DEBUG_3_OBJECT_RELOAD_DISABLED         0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_3_OBJECT_RELOAD_ENABLED          0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3_OBJECT_RELOAD_INIT             0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_3_PM_TRIGGER                          15:15 /* RWIVF */
#define NV_PGRAPH_DEBUG_3_PM_TRIGGER_DISABLED            0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_3_PM_TRIGGER_ENABLED             0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3_PM_TRIGGER_INIT                0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_3_ALTARCH                             16:16 /* RWIVF */
#define NV_PGRAPH_DEBUG_3_ALTARCH_DISABLED               0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_3_ALTARCH_ENABLED                0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3_ALTARCH_INIT                   0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_3_SINGLE_CYCLE_LOAD                   17:17 /* RWIVF */
#define NV_PGRAPH_DEBUG_3_SINGLE_CYCLE_LOAD_DISABLED     0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_3_SINGLE_CYCLE_LOAD_ENABLED      0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3_SINGLE_CYCLE_LOAD_INIT         0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3_BILINEAR_3D                         18:18 /* RWIVF */
#define NV_PGRAPH_DEBUG_3_BILINEAR_3D_DISABLED           0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_3_BILINEAR_3D_ENABLED            0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3_BILINEAR_3D_INIT               0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3_VOLATILE_RESET                      19:19 /* RWIVF */
#define NV_PGRAPH_DEBUG_3_VOLATILE_RESET_DISABLED        0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_3_VOLATILE_RESET_ENABLED         0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3_VOLATILE_RESET_INIT            0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3_DATA_CHECK                          20:20 /* RWIVF */
#define NV_PGRAPH_DEBUG_3_DATA_CHECK_DISABLED            0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_3_DATA_CHECK_ENABLED             0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3_DATA_CHECK_INIT                0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3_DATA_CHECK_FAIL                     21:21 /* RWIVF */
#define NV_PGRAPH_DEBUG_3_DATA_CHECK_FAIL_DISABLED       0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_3_DATA_CHECK_FAIL_ENABLED        0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3_DATA_CHECK_FAIL_INIT           0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_3_FORMAT_CHECK                        22:22 /* RWIVF */
#define NV_PGRAPH_DEBUG_3_FORMAT_CHECK_DISABLED          0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_3_FORMAT_CHECK_ENABLED           0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3_FORMAT_CHECK_INIT              0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3_DMA_CHECK                           23:23 /* RWIVF */
#define NV_PGRAPH_DEBUG_3_DMA_CHECK_DISABLED             0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_3_DMA_CHECK_ENABLED              0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3_DMA_CHECK_INIT                 0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3_STATE_CHECK                         24:24 /* RWIVF */
#define NV_PGRAPH_DEBUG_3_STATE_CHECK_DISABLED           0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_3_STATE_CHECK_ENABLED            0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3_STATE_CHECK_INIT               0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3_KELVIN_HWFLIP                       25:25 /* RWIVF */
#define NV_PGRAPH_DEBUG_3_KELVIN_HWFLIP_DISABLED         0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_3_KELVIN_HWFLIP_ENABLED          0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3_KELVIN_HWFLIP_INIT             0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3_FAST_3D_RESTORE                     26:26 /* RWIVF */
#define NV_PGRAPH_DEBUG_3_FAST_3D_RESTORE_DISABLED       0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_3_FAST_3D_RESTORE_ENABLED        0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3_FAST_3D_RESTORE_INIT           0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_3_STATE3D_CHECK                       27:27 /* RWIVF */
#define NV_PGRAPH_DEBUG_3_STATE3D_CHECK_DISABLED         0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_3_STATE3D_CHECK_ENABLED          0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3_STATE3D_CHECK_INIT             0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_3_XFMODE_COALESCE                     28:28 /* RWIVF */
#define NV_PGRAPH_DEBUG_3_XFMODE_COALESCE_DISABLED       0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_3_XFMODE_COALESCE_ENABLED        0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3_XFMODE_COALESCE_INIT           0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3_CTX_METHODS                         29:29 /* RWIVF */
#define NV_PGRAPH_DEBUG_3_CTX_METHODS_DISABLED           0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_3_CTX_METHODS_ENABLED            0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3_CTX_METHODS_INIT               0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3_OP_METHODS                          30:30 /* RWIVF */
#define NV_PGRAPH_DEBUG_3_OP_METHODS_DISABLED            0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_3_OP_METHODS_ENABLED             0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3_OP_METHODS_INIT                0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3_IGNORE_PATCHVALID                   31:31 /* RWIVF */
#define NV_PGRAPH_DEBUG_3_IGNORE_PATCHVALID_DISABLED     0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_3_IGNORE_PATCHVALID_ENABLED      0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3_IGNORE_PATCHVALID_INIT         0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_4                                0x00400090 /* RW-4R */
#define NV_PGRAPH_DEBUG_4_FD_SPARE1                             0:0 /* RWIVF */
#define NV_PGRAPH_DEBUG_4_FD_SPARE1_DISABLED             0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_4_FD_SPARE1_ENABLED              0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_4_FD_SPARE2                             1:1 /* RWIVF */
#define NV_PGRAPH_DEBUG_4_FD_SPARE2_DISABLE              0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_4_FD_SPARE2_ENABLED              0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_4_COARSE_RSTR_SPARE1                    2:2 /* RWIVF */
#define NV_PGRAPH_DEBUG_4_COARSE_RSTR_SPARE1_DISABLED    0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_4_COARSE_RSTR_SPARE1_ENABLED     0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_4_COARSE_RSTR_SPARE2                    3:3 /* RWIVF */
#define NV_PGRAPH_DEBUG_4_COARSE_RSTR_SPARE2_DISABLE     0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_4_COARSE_RSTR_SPARE2_ENABLED     0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_4_RSTR2D_SPARE1                         4:4 /* RWIVF */
#define NV_PGRAPH_DEBUG_4_RSTR2D_SPARE1_DISABLED         0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_4_RSTR2D_SPARE1_ENABLED          0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_4_RSTR2D_SPARE2                         5:5 /* RWIVF */
#define NV_PGRAPH_DEBUG_4_RSTR2D_SPARE2_DISABLE          0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_4_RSTR2D_SPARE2_ENABLED          0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_4_FINE_RSTR_SPARE1                      6:6 /* RWIVF */
#define NV_PGRAPH_DEBUG_4_FINE_RSTR_SPARE1_DISABLED      0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_4_FINE_RSTR_SPARE1_ENABLED       0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_4_FINE_RSTR_SPARE2                      7:7 /* RWIVF */
#define NV_PGRAPH_DEBUG_4_FINE_RSTR_SPARE2_DISABLE       0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_4_FINE_RSTR_SPARE2_ENABLED       0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_4_TEX_SPARE1                            8:8 /* RWIVF */
#define NV_PGRAPH_DEBUG_4_TEX_SPARE1_DISABLED            0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_4_TEX_SPARE1_ENABLED             0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_4_TEX_SPARE2                            9:9 /* RWIVF */
#define NV_PGRAPH_DEBUG_4_TEX_SPARE2_DISABLE             0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_4_TEX_SPARE2_ENABLED             0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_4_COMB_SPARE1                         12:12 /* RWIVF */
#define NV_PGRAPH_DEBUG_4_COMB_SPARE1_DISABLED           0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_4_COMB_SPARE1_ENABLED            0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_4_COMB_SPARE2                         13:13 /* RWIVF */
#define NV_PGRAPH_DEBUG_4_COMB_SPARE2_DISABLE            0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_4_COMB_SPARE2_ENABLED            0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_4_SETUP_SPARE1                        14:14 /* RWIVF */
#define NV_PGRAPH_DEBUG_4_SETUP_SPARE1_DISABLED          0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_4_SETUP_SPARE1_ENABLED           0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_4_SETUP_SPARE2                        15:15 /* RWIVF */
#define NV_PGRAPH_DEBUG_4_SETUP_SPARE2_DISABLE           0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_4_SETUP_SPARE2_ENABLED           0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_4_XF_SPARE1                           16:16 /* RWIVF */
#define NV_PGRAPH_DEBUG_4_XF_SPARE1_DISABLED             0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_4_XF_SPARE1_ENABLED              0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_4_XF_SPARE2                           17:17 /* RWIVF */
#define NV_PGRAPH_DEBUG_4_XF_SPARE2_DISABLE              0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_4_XF_SPARE2_ENABLED              0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_4_SETUP_SPARE3                        18:18 /* RWIVF */
#define NV_PGRAPH_DEBUG_4_SETUP_SPARE3_DISABLED          0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_4_SETUP_SPARE3_ENABLED           0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_4_SETUP_SPARE4                        19:19 /* RWIVF */
#define NV_PGRAPH_DEBUG_4_SETUP_SPARE4_DISABLE           0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_4_SETUP_SPARE4_ENABLED           0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_4_IDX_SPARE1                          20:20 /* RWIVF */
#define NV_PGRAPH_DEBUG_4_IDX_SPARE1_DISABLED            0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_4_IDX_SPARE1_ENABLED             0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_4_IDX_SPARE2                          21:21 /* RWIVF */
#define NV_PGRAPH_DEBUG_4_IDX_SPARE2_DISABLE             0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_4_IDX_SPARE2_ENABLED             0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_4_VTX_SPARE1                          22:22 /* RWIVF */
#define NV_PGRAPH_DEBUG_4_VTX_SPARE1_DISABLED            0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_4_VTX_SPARE1_ENABLED             0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_4_VTX_SPARE2                          23:23 /* RWIVF */
#define NV_PGRAPH_DEBUG_4_VTX_SPARE2_DISABLE             0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_4_VTX_SPARE2_ENABLED             0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_4_CAS_SPARE1                          24:24 /* RWIVF */
#define NV_PGRAPH_DEBUG_4_CAS_SPARE1_DISABLED            0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_4_CAS_SPARE1_ENABLED             0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_4_CAS_SPARE2                          25:25 /* RWIVF */
#define NV_PGRAPH_DEBUG_4_CAS_SPARE2_DISABLE             0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_4_CAS_SPARE2_ENABLED             0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_4_SHD_SPARE1                          26:26 /* RWIVF */
#define NV_PGRAPH_DEBUG_4_SHD_SPARE1_DISABLED            0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_4_SHD_SPARE1_ENABLED             0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_4_SHD_SPARE2                          27:27 /* RWIVF */
#define NV_PGRAPH_DEBUG_4_SHD_SPARE2_DISABLE             0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_4_SHD_SPARE2_ENABLED             0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_4_SHDBE_SPARE1                        28:28 /* RWIVF */
#define NV_PGRAPH_DEBUG_4_SHDBE_SPARE1_DISABLED          0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_4_SHDBE_SPARE1_ENABLED           0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_4_SHDBE_SPARE2                        29:29 /* RWIVF */
#define NV_PGRAPH_DEBUG_4_SHDBE_SPARE2_DISABLE           0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_4_SHDBE_SPARE2_ENABLED           0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_4_DISABLE_H0                          30:30 /* RWIVF */
#define NV_PGRAPH_DEBUG_4_DISABLE_H0_FALSE               0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_4_DISABLE_H0_TRUE                0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_4_DISABLE_H1                          31:31 /* RWIVF */
#define NV_PGRAPH_DEBUG_4_DISABLE_H1_FALSE               0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_4_DISABLE_H1_TRUE                0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_5                                0x00400094 /* RW-4R */
#define NV_PGRAPH_DEBUG_5_ZCULL_REQ_FULL_CVG                    0:0 /* RWIVF */
#define NV_PGRAPH_DEBUG_5_ZCULL_REQ_FULL_CVG_DISABLED    0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_5_ZCULL_REQ_FULL_CVG_ENABLED     0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_5_ZCULL_REQ_FULL_CVG_INIT        0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_5_ZCULL_PUNT_FB_BUSY                    1:1 /* RWIVF */
#define NV_PGRAPH_DEBUG_5_ZCULL_PUNT_FB_BUSY_DISABLED    0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_5_ZCULL_PUNT_FB_BUSY_ENABLED     0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_5_ZCULL_PUNT_FB_BUSY_INIT        0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_5_ZCULL_PUNT_S_ON_Z                     2:2 /* RWIVF */
#define NV_PGRAPH_DEBUG_5_ZCULL_PUNT_S_ON_Z_DISABLED     0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_5_ZCULL_PUNT_S_ON_Z_ENABLED      0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_5_ZCULL_PUNT_S_ON_Z_INIT         0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_5_ZCULL_RETURN_COMP                     3:3 /* RWIVF */
#define NV_PGRAPH_DEBUG_5_ZCULL_RETURN_COMP_DISABLED     0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_5_ZCULL_RETURN_COMP_ENABLED      0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_5_ZCULL_RETURN_COMP_INIT         0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_5_ZCULL_SPARE4                          4:4 /* RWIVF */
#define NV_PGRAPH_DEBUG_5_ZCULL_SPARE4_DISABLED          0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_5_ZCULL_SPARE4_ENABLED           0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_5_ZCULL_SPARE5                          5:5 /* RWIVF */
#define NV_PGRAPH_DEBUG_5_ZCULL_SPARE5_DISABLED          0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_5_ZCULL_SPARE5_ENABLED           0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_5_ZCULL_SPARE6                          6:6 /* RWIVF */
#define NV_PGRAPH_DEBUG_5_ZCULL_SPARE6_DISABLED          0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_5_ZCULL_SPARE6_ENABLED           0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_5_ZCULL_SPARE7                          7:7 /* RWIVF */
#define NV_PGRAPH_DEBUG_5_ZCULL_SPARE7_DISABLED          0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_5_ZCULL_SPARE7_ENABLED           0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_6                                0x00400b80 /* RW-4R */
#define NV_PGRAPH_DEBUG_6_ROP_SEP_ZC_READS                      0:0 /* RWIVF */
#define NV_PGRAPH_DEBUG_6_ROP_SEP_ZC_READS_DISABLED      0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_6_ROP_SEP_ZC_READS_ENABLED       0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_6_ROP_SEP_ZC_READS_INIT          0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_6_ROP_DITHER_3D                         1:1 /* RWIVF */
#define NV_PGRAPH_DEBUG_6_ROP_DITHER_3D_DISABLED         0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_6_ROP_DITHER_3D_ENABLED          0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_6_ROP_DITHER_3D_INIT             0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_6_ROP_DITHER_2D                         2:2 /* RWIVF */
#define NV_PGRAPH_DEBUG_6_ROP_DITHER_2D_DISABLED         0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_6_ROP_DITHER_2D_ENABLED          0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_6_ROP_DITHER_2D_INIT             0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_6_ROP_EARLY_ZABORT                      3:3 /* RWIVF */
#define NV_PGRAPH_DEBUG_6_ROP_EARLY_ZABORT_DISABLED      0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_6_ROP_EARLY_ZABORT_ENABLED       0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_6_ROP_EARLY_ZABORT_INIT          0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_6_ROP_PASS_ROPFLUSH                     4:4 /* RWIVF */
#define NV_PGRAPH_DEBUG_6_ROP_PASS_ROPFLUSH_DISABLED     0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_6_ROP_PASS_ROPFLUSH_ENABLED      0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_6_ROP_PASS_ROPFLUSH_INIT         0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_6_ROP_CBUF_DRAIN                        5:5 /* RWIVF */
#define NV_PGRAPH_DEBUG_6_ROP_CBUF_DRAIN_DISABLED        0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_6_ROP_CBUF_DRAIN_ENABLED         0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_6_ROP_CBUF_DRAIN_INIT            0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_6_ROP_CBUF_HIGHWATER                    9:6 /* RWIVF */
#define NV_PGRAPH_DEBUG_6_ROP_CBUF_HIGHWATER_0           0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_6_ROP_CBUF_HIGHWATER_INIT        0x00000004 /* RW--V */
#define NV_PGRAPH_DEBUG_6_ROP_CBUF_HIGHWATER_FULL        0x00000008 /* RW--V */
#define NV_PGRAPH_DEBUG_6_ROP_CBUF_HIGHWATER2                 13:10 /* RWIVF */
#define NV_PGRAPH_DEBUG_6_ROP_CBUF_HIGHWATER2_0          0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_6_ROP_CBUF_HIGHWATER2_INIT       0x00000004 /* RW--V */
#define NV_PGRAPH_DEBUG_6_ROP_CBUF_HIGHWATER2_FULL       0x00000008 /* RW--V */
#define NV_PGRAPH_DEBUG_6_ROP_COALESCE_3D                     14:14 /* RWIVF */
#define NV_PGRAPH_DEBUG_6_ROP_COALESCE_3D_DISABLED       0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_6_ROP_COALESCE_3D_ENABLED        0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_6_ROP_COALESCE_3D_INIT           0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_6_ROP_COALESCE_2D                     15:15 /* RWIVF */
#define NV_PGRAPH_DEBUG_6_ROP_COALESCE_2D_DISABLED       0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_6_ROP_COALESCE_2D_ENABLED        0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_6_ROP_COALESCE_2D_INIT           0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_6_ROP_FIXED_ADRS                      16:16 /* RWIVF */
#define NV_PGRAPH_DEBUG_6_ROP_FIXED_ADRS_DISABLED        0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_6_ROP_FIXED_ADRS_ENABLED         0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_6_ROP_FIXED_ADRS_INIT            0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_6_ROP_FAST_KEEP_DST                   17:17 /* RWIVF */
#define NV_PGRAPH_DEBUG_6_ROP_FAST_KEEP_DST_DISABLED     0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_6_ROP_FAST_KEEP_DST_ENABLED      0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_6_ROP_FAST_KEEP_DST_INIT         0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_6_ROP_FORCE_CREAD                     18:18 /* RWIVF */
#define NV_PGRAPH_DEBUG_6_ROP_FORCE_CREAD_DISABLED       0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_6_ROP_FORCE_CREAD_ENABLED        0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_6_ROP_FORCE_CREAD_INIT           0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_6_ROP_ALLOW_3D_SKIP_READ               19:19 /* RWIVF */
#define NV_PGRAPH_DEBUG_6_ROP_ALLOW_3D_SKIP_READ_ENABLED  0x00000001 /* RWI-V */
#define NV_PGRAPH_DEBUG_6_ROP_ALLOW_3D_SKIP_READ_DISABLED 0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_6_ROP_ALLOW_3D_SKIP_READ_INIT     0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_6_ROP_ZCMP_ALWAYS_READ                20:20 /* RWIVF */
#define NV_PGRAPH_DEBUG_6_ROP_ZCMP_ALWAYS_READ_ENABLED   0x00000001 /* RWI-V */
#define NV_PGRAPH_DEBUG_6_ROP_ZCMP_ALWAYS_READ_DISABLED  0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_6_ROP_ZCMP_ALWAYS_READ_INIT      0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_6_ROP_ZCOMPRESS_EN                    21:21 /* RWIVF */
#define NV_PGRAPH_DEBUG_6_ROP_ZCOMPRESS_EN_DISABLED      0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_6_ROP_ZCOMPRESS_EN_ENABLED       0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_6_ROP_ZCOMPRESS_EN_INIT          0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_6_ROP_BURST_CREADS                    22:22 /* RWIVF */
#define NV_PGRAPH_DEBUG_6_ROP_BURST_CREADS_DISABLED      0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_6_ROP_BURST_CREADS_ENABLED       0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_6_ROP_BURST_CREADS_INIT          0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_6_ROP_BURST_CWRITES                   23:23 /* RWIVF */
#define NV_PGRAPH_DEBUG_6_ROP_BURST_CWRITES_DISABLED     0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_6_ROP_BURST_CWRITES_ENABLED      0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_6_ROP_BURST_CWRITES_INIT         0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_6_ROP_AUTO_INIT                       24:24 /* RWIVF */
#define NV_PGRAPH_DEBUG_6_ROP_AUTO_INIT_DISABLED         0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_6_ROP_AUTO_INIT_ENABLED          0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_6_ROP_AUTO_INIT_INIT             0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_6_ROP_HASH_TEST1                      25:25 /* RWIVF */
#define NV_PGRAPH_DEBUG_6_ROP_HASH_TEST1_DISABLED        0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_6_ROP_HASH_TEST1_ENABLED         0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_6_ROP_HASH_TEST1_INIT            0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_6_ROP_INTERLOCK                       26:26 /* RWIVF */
#define NV_PGRAPH_DEBUG_6_ROP_INTERLOCK_DISABLED         0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_6_ROP_INTERLOCK_ENABLED          0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_6_ROP_INTERLOCK_INIT             0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_6_ROP_ZREAD                           28:27 /* RWIVF */
#define NV_PGRAPH_DEBUG_6_ROP_ZREAD_NORMAL               0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_6_ROP_ZREAD_FORCE_ZREAD          0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_6_ROP_ZREAD_FORCE_NO_ZREAD       0x00000002 /* RW--V */
#define NV_PGRAPH_DEBUG_6_ROP_ZREAD_INIT                 0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_6_ROP_ZCULL_DATA                      29:29 /* RWIVF */
#define NV_PGRAPH_DEBUG_6_ROP_ZCULL_DATA_USE             0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_6_ROP_ZCULL_DATA_DISCARD         0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_6_ROP_ZCULL_DATA_INIT            0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_6_ROP_CROP_SWALLOW                    30:30 /* RWIVF */
#define NV_PGRAPH_DEBUG_6_ROP_CROP_SWALLOW_DISABLED      0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_6_ROP_CROP_SWALLOW_ENABLED       0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_6_ROP_CROP_SWALLOW_INIT          0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_6_SPARE_BIT31                         31:31 /* RWIVF */
#define NV_PGRAPH_DEBUG_6_SPARE_BIT31_DISABLED           0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_6_SPARE_BIT31_ENABLED            0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_6_SPARE_BIT31_INIT               0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_6_BITS                                 31:0 /* RWIUF */
#define NV_PGRAPH_DEBUG_6_BITS_DISABLED                  0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_7                                0x00400b84 /* RW-4R */
#define NV_PGRAPH_DEBUG_7_ROP_INIT_ZRD_TMSTAMP                  0:0 /* RWIVF */
#define NV_PGRAPH_DEBUG_7_ROP_INIT_ZRD_TMSTAMP_DEFAULT   0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_7_ROP_INIT_ZRD_TMSTAMP_INIT      0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_7_ROP_ZCULL_NO_STALE                    1:1 /* RWIVF */
#define NV_PGRAPH_DEBUG_7_ROP_ZCULL_NO_STALE_ENABLE      0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_7_ROP_ZCULL_NO_STALE_DISABLE     0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_7_ROP_ZCULL_NO_STALE_INIT        0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_7_ROP_ZROP_INTERLOCK                    2:2 /* RWIVF */
#define NV_PGRAPH_DEBUG_7_ROP_ZROP_INTERLOCK_ENABLE      0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_7_ROP_ZROP_INTERLOCK_DISABLE     0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_7_ROP_ZROP_INTERLOCK_INIT        0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_FORCE_VISIBLE                 3:3 /* RWIVF */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_FORCE_VISIBLE_ENABLE   0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_FORCE_VISIBLE_DISABLE  0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_FORCE_VISIBLE_INIT     0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_PURGE_PER_PKT                       4:4 /* RWIVF */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_PURGE_PER_PKT_ENABLE         0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_PURGE_PER_PKT_DISABLE        0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_PURGE_PER_PKT_INIT           0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_FORCE_NO_16BYTE_WR                  5:5 /* RWIVF */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_FORCE_NO_16BYTE_WR_ENABLE    0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_FORCE_NO_16BYTE_WR_DISABLE   0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_FORCE_NO_16BYTE_WR_INIT      0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_FORCE_FSTCLR_EXPAND                 6:6 /* RWIVF */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_FORCE_FSTCLR_EXPAND_ENABLE   0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_FORCE_FSTCLR_EXPAND_DISABLE  0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_FORCE_FSTCLR_EXPAND_INIT     0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_FORCE_NO_RMW_DISABLE                7:7 /* RWIVF */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_FORCE_NO_RMW_DISABLE_ENABLE  0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_FORCE_NO_RMW_DISABLE_DISABLE 0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_FORCE_NO_RMW_DISABLE_INIT    0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_INHIBIT_COMPRESS                    8:8 /* RWIVF */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_INHIBIT_COMPRESS_ENABLE      0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_INHIBIT_COMPRESS_DISABLE     0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_INHIBIT_COMPRESS_INIT        0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_CMPR_FULL_BE_ONLY                   9:9 /* RWIVF */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_CMPR_FULL_BE_ONLY_ENABLE     0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_CMPR_FULL_BE_ONLY_DISABLE    0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_CMPR_FULL_BE_ONLY_INIT       0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_ALWAYS_WR_STENCIL                 10:10 /* RWIVF */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_ALWAYS_WR_STENCIL_ENABLE     0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_ALWAYS_WR_STENCIL_DISABLE    0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_ALWAYS_WR_STENCIL_INIT       0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_INHIBIT_SKIP_WR_EQ                11:11 /* RWIVF */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_INHIBIT_SKIP_WR_EQ_ENABLE    0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_INHIBIT_SKIP_WR_EQ_DISABLE   0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_INHIBIT_SKIP_WR_EQ_INIT      0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_SELECTPM                          13:12 /* RWIVF */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_SELECTPM_NORMAL              0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_SELECTPM_PKTRF_STALL         0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_SELECTPM_CMPR_STALL          0x00000002 /* RW--V */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_SELECTPM_TAGREL_STALL        0x00000003 /* RW--V */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_SELECTPM_INIT                0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_EXTRA1                            14:14 /* RWIVF */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_EXTRA1_ENABLE                0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_EXTRA1_DISABLE               0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_EXTRA1_INIT                  0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_EXTRA2                            15:15 /* RWIVF */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_EXTRA2_ENABLE                0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_EXTRA2_DISABLE               0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_EXTRA2_INIT                  0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_EXTRA3                            16:16 /* RWIVF */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_EXTRA3_ENABLE                0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_EXTRA3_DISABLE               0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_EXTRA3_INIT                  0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_7_ROP_CROP_SELECTPM                         18:17 /* RWIVF */
#define NV_PGRAPH_DEBUG_7_ROP_CROP_SELECTPM_GRP3               0x00000002 /* RW--V */
#define NV_PGRAPH_DEBUG_7_ROP_CROP_SELECTPM_GRP2               0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_7_ROP_CROP_SELECTPM_GRP1               0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_7_ROP_CROP_SELECTPM_INIT               0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_EXTRA4                            19:19 /* RWIVF */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_EXTRA4_ENABLE                0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_EXTRA4_DISABLE               0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_EXTRA4_INIT                  0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_7_ROP_ZRD_HASH_TAGS                         24:20 /* RWIVF */
#define NV_PGRAPH_DEBUG_7_ROP_ZRD_HASH_TAGS_01                 0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_7_ROP_ZRD_HASH_TAGS_INIT               0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_7_ROP_CROP_BLIT_HASH                        25:25 /* RWIVF */
#define NV_PGRAPH_DEBUG_7_ROP_CROP_BLIT_HASH_ENABLE            0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_7_ROP_CROP_BLIT_HASH_DISABLE           0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_7_ROP_CROP_BLIT_HASH_INIT              0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_7_ROP_ZROP_RAISE_PRI                        26:26 /* RWIVF */
#define NV_PGRAPH_DEBUG_7_ROP_ZROP_RAISE_PRI_ENABLE            0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_7_ROP_ZROP_RAISE_PRI_DISABLE           0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_7_ROP_ZROP_RAISE_PRI_INIT              0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_7_ROP_ZRD_EXTRA0                            27:27 /* RWIVF */
#define NV_PGRAPH_DEBUG_7_ROP_ZRD_EXTRA0_ENABLE                0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_7_ROP_ZRD_EXTRA0_DISABLE               0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_7_ROP_ZRD_EXTRA0_INIT                  0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_7_ROP_ZRD_EXTRA1                            28:28 /* RWIVF */
#define NV_PGRAPH_DEBUG_7_ROP_ZRD_EXTRA1_ENABLE                0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_7_ROP_ZRD_EXTRA1_DISABLE               0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_7_ROP_ZRD_EXTRA1_INIT                  0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_7_ROP_CROP_RAISE_PRI                        29:29 /* RWIVF */
#define NV_PGRAPH_DEBUG_7_ROP_CROP_RAISE_PRI_ENABLE            0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_7_ROP_CROP_RAISE_PRI_DISABLE           0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_7_ROP_CROP_RAISE_PRI_INIT              0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_7_SPARE                                     31:30 /* RWIUF */
#define NV_PGRAPH_DEBUG_7_BITS                                       31:0 /* RWIUF */
#define NV_PGRAPH_DEBUG_7_BITS_DISABLED                        0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_8                                0x00400098 /* RW-4R */
#define NV_PGRAPH_DEBUG_8_SHADER_FIFO_WATERMARK                 9:0 /* RWIVF */
#define NV_PGRAPH_DEBUG_8_SHADER_FIFO_WATERMARK_64       0x00000040 /* RWI-V */
#define NV_PGRAPH_DEBUG_8_SHADER_FIFO_WATERMARK_INIT     0x00000040 /* RW--V */
#define NV_PGRAPH_DEBUG_8_SHADER_FIFOP1_WATERMARK             19:10 /* RWIVF */
#define NV_PGRAPH_DEBUG_8_SHADER_FIFOP1_WATERMARK_0      0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_8_SHADER_FIFOP1_WATERMARK_INIT   0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_8_SHADER_FIFO_DEBUG                   20:20 /* RWIVF */
#define NV_PGRAPH_DEBUG_8_SHADER_FIFO_DEBUG_DISABLE      0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_8_SHADER_FIFO_DEBUG_ENABLE       0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_8_SHADER_FIFO_DEBUG_INIT         0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_8_SHADER_FIFOP1_DEBUG                 21:21 /* RWIVF */
#define NV_PGRAPH_DEBUG_8_SHADER_FIFOP1_DEBUG_DISABLE    0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_8_SHADER_FIFOP1_DEBUG_ENABLE     0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_8_SHADER_FIFOP1_DEBUG_INIT       0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_8_SHADER_FOG_LINE_CLAMP               30:30 /* RWIVF */
#define NV_PGRAPH_DEBUG_8_SHADER_FOG_LINE_CLAMP_DISABLE  0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_8_SHADER_FOG_LINE_CLAMP_ENABLE   0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_8_SHADER_FOG_LINE_CLAMP_INIT     0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_8_COMBINER_NEG_TEXTURE                31:31 /* RWIVF */
#define NV_PGRAPH_DEBUG_8_COMBINER_NEG_TEXTURE_ENABLE    0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_8_COMBINER_NEG_TEXTURE_DISABLE   0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_8_COMBINER_NEG_TEXTURE_INIT      0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_8_SHADER_SPARE                        31:10 /* RWIVF */
#define NV_PGRAPH_DEBUG_8_SHADER_SPARE_DISABLED          0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_9                                0x0040009C /* RW-4R */
#define NV_PGRAPH_DEBUG_9_BEGIN_PATCH0_CHECK                    0:0 /* RWIVF */
#define NV_PGRAPH_DEBUG_9_BEGIN_PATCH0_CHECK_ENABLE      0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_9_BEGIN_PATCH0_CHECK_DISABLE     0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_9_BEGIN_PATCH0_CHECK_INIT        0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_9_BEGIN_PATCH1_CHECK                    1:1 /* RWIVF */
#define NV_PGRAPH_DEBUG_9_BEGIN_PATCH1_CHECK_ENABLE      0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_9_BEGIN_PATCH1_CHECK_DISABLE     0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_9_BEGIN_PATCH1_CHECK_INIT        0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_9_BEGIN_PATCH2_CHECK                    2:2 /* RWIVF */
#define NV_PGRAPH_DEBUG_9_BEGIN_PATCH2_CHECK_ENABLE      0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_9_BEGIN_PATCH2_CHECK_DISABLE     0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_9_BEGIN_PATCH2_CHECK_INIT        0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_9_BEGIN_PATCH3_CHECK                    3:3 /* RWIVF */
#define NV_PGRAPH_DEBUG_9_BEGIN_PATCH3_CHECK_ENABLE      0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_9_BEGIN_PATCH3_CHECK_DISABLE     0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_9_BEGIN_PATCH3_CHECK_INIT        0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_9_END_PATCH_CHECK                       4:4 /* RWIVF */
#define NV_PGRAPH_DEBUG_9_END_PATCH_CHECK_ENABLE         0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_9_END_PATCH_CHECK_DISABLE        0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_9_END_PATCH_CHECK_INIT           0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_9_BEGIN_END_SWATCH_CHECK                5:5 /* RWIVF */
#define NV_PGRAPH_DEBUG_9_BEGIN_END_SWATCH_CHECK_ENABLE  0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_9_BEGIN_END_SWATCH_CHECK_DISABLE 0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_9_BEGIN_END_SWATCH_CHECK_INIT    0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_9_BEGIN_END_CURVE_CHECK                 6:6 /* RWIVF */
#define NV_PGRAPH_DEBUG_9_BEGIN_END_CURVE_CHECK_ENABLE   0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_9_BEGIN_END_CURVE_CHECK_DISABLE  0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_9_BEGIN_END_CURVE_CHECK_INIT     0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_9_CURVE_COEFF_CHECK                     7:7 /* RWIVF */
#define NV_PGRAPH_DEBUG_9_CURVE_COEFF_CHECK_ENABLE       0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_9_CURVE_COEFF_CHECK_DISABLE      0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_9_CURVE_COEFF_CHECK_INIT         0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_9_BEGIN_TRANS0_CHECK                    8:8 /* RWIVF */
#define NV_PGRAPH_DEBUG_9_BEGIN_TRANS0_CHECK_ENABLE      0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_9_BEGIN_TRANS0_CHECK_DISABLE     0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_9_BEGIN_TRANS0_CHECK_INIT        0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_9_BEGIN_TRANS1_CHECK                    9:9 /* RWIVF */
#define NV_PGRAPH_DEBUG_9_BEGIN_TRANS1_CHECK_ENABLE      0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_9_BEGIN_TRANS1_CHECK_DISABLE     0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_9_BEGIN_TRANS1_CHECK_INIT        0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_9_BEGIN_TRANS2_CHECK                  10:10 /* RWIVF */
#define NV_PGRAPH_DEBUG_9_BEGIN_TRANS2_CHECK_ENABLE      0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_9_BEGIN_TRANS2_CHECK_DISABLE     0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_9_BEGIN_TRANS2_CHECK_INIT        0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_9_END_TRANSITION_CHECK                11:11 /* RWIVF */
#define NV_PGRAPH_DEBUG_9_END_TRANSITION_CHECK_ENABLE    0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_9_END_TRANSITION_CHECK_DISABLE   0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_9_END_TRANSITION_CHECK_INIT      0x00000000 /* RW--V */
#define NV_PGRAPH_NSTATUS                                0x00400104 /* RW-4R */
#define NV_PGRAPH_NSTATUS_STATE_IN_USE                        23:23 /* RWIVF */
#define NV_PGRAPH_NSTATUS_STATE_IN_USE_NOT_PENDING       0x00000000 /* RWI-V */
#define NV_PGRAPH_NSTATUS_STATE_IN_USE_PENDING           0x00000001 /* RW--V */
#define NV_PGRAPH_NSTATUS_INVALID_STATE                       24:24 /* RWIVF */
#define NV_PGRAPH_NSTATUS_INVALID_STATE_NOT_PENDING      0x00000000 /* RWI-V */
#define NV_PGRAPH_NSTATUS_INVALID_STATE_PENDING          0x00000001 /* RW--V */
#define NV_PGRAPH_NSTATUS_BAD_ARGUMENT                        25:25 /* RWIVF */
#define NV_PGRAPH_NSTATUS_BAD_ARGUMENT_NOT_PENDING       0x00000000 /* RWI-V */
#define NV_PGRAPH_NSTATUS_BAD_ARGUMENT_PENDING           0x00000001 /* RW--V */
#define NV_PGRAPH_NSTATUS_PROTECTION_FAULT                    26:26 /* RWIVF */
#define NV_PGRAPH_NSTATUS_PROTECTION_FAULT_NOT_PENDING   0x00000000 /* RWI-V */
#define NV_PGRAPH_NSTATUS_PROTECTION_FAULT_PENDING       0x00000001 /* RW--V */
#define NV_PGRAPH_CTX_CONTROL                            0x00400144 /* RW-4R */
#define NV_PGRAPH_CTX_CONTROL_MINIMUM_TIME                      1:0 /* RWIVF */
#define NV_PGRAPH_CTX_CONTROL_MINIMUM_TIME_33US          0x00000000 /* RWI-V */
#define NV_PGRAPH_CTX_CONTROL_MINIMUM_TIME_262US         0x00000001 /* RW--V */
#define NV_PGRAPH_CTX_CONTROL_MINIMUM_TIME_2MS           0x00000002 /* RW--V */
#define NV_PGRAPH_CTX_CONTROL_MINIMUM_TIME_17MS          0x00000003 /* RW--V */
#define NV_PGRAPH_CTX_CONTROL_TIME                              8:8 /* RWIVF */
#define NV_PGRAPH_CTX_CONTROL_TIME_EXPIRED               0x00000000 /* RWI-V */
#define NV_PGRAPH_CTX_CONTROL_TIME_NOT_EXPIRED           0x00000001 /* RW--V */
#define NV_PGRAPH_CTX_CONTROL_CHID                            16:16 /* RWIVF */
#define NV_PGRAPH_CTX_CONTROL_CHID_INVALID               0x00000000 /* RWI-V */
#define NV_PGRAPH_CTX_CONTROL_CHID_VALID                 0x00000001 /* RW--V */
#define NV_PGRAPH_CTX_CONTROL_CHANGE                          20:20 /* R--VF */
#define NV_PGRAPH_CTX_CONTROL_CHANGE_UNAVAILABLE         0x00000000 /* R---V */
#define NV_PGRAPH_CTX_CONTROL_CHANGE_AVAILABLE           0x00000001 /* R---V */
#define NV_PGRAPH_CTX_CONTROL_SWITCHING                       24:24 /* RWIVF */
#define NV_PGRAPH_CTX_CONTROL_SWITCHING_IDLE             0x00000000 /* RWI-V */
#define NV_PGRAPH_CTX_CONTROL_SWITCHING_BUSY             0x00000001 /* RW--V */
#define NV_PGRAPH_CTX_CONTROL_DEVICE                          28:28 /* RWIVF */
#define NV_PGRAPH_CTX_CONTROL_DEVICE_DISABLED            0x00000000 /* RWI-V */
#define NV_PGRAPH_CTX_CONTROL_DEVICE_ENABLED             0x00000001 /* RW--V */
#define NV_PGRAPH_CTX_USER                               0x00400148 /* RW-4R */
#define NV_PGRAPH_CTX_USER_CHANNEL_3D                           0:0 /* RWIVF */
#define NV_PGRAPH_CTX_USER_CHANNEL_3D_FALSE              0x00000000 /* RWI-V */
#define NV_PGRAPH_CTX_USER_CHANNEL_3D_TRUE               0x00000001 /* RWI-V */
#define NV_PGRAPH_CTX_USER_CHANNEL_3D_VALID                     4:4 /* RWIVF */
#define NV_PGRAPH_CTX_USER_CHANNEL_3D_VALID_FALSE        0x00000000 /* RWI-V */
#define NV_PGRAPH_CTX_USER_CHANNEL_3D_VALID_TRUE         0x00000001 /* RWI-V */
#define NV_PGRAPH_CTX_USER_CHANNEL_3D_ID                       12:8 /* RWIVF */
#define NV_PGRAPH_CTX_USER_CHANNEL_3D_ID_0               0x00000000 /* RWI-V */
#define NV_PGRAPH_CTX_USER_SUBCH                              15:13 /* RWIVF */
#define NV_PGRAPH_CTX_USER_SUBCH_0                       0x00000000 /* RWI-V */
#define NV_PGRAPH_CTX_USER_CHID                               28:24 /* RWIVF */
#define NV_PGRAPH_CTX_USER_CHID_0                        0x00000000 /* RWI-V */
#define NV_PGRAPH_CTX_USER_SINGLE_STEP                        31:31 /* RWIVF */
#define NV_PGRAPH_CTX_USER_SINGLE_STEP_DISABLED          0x00000000 /* RWI-V */
#define NV_PGRAPH_CTX_USER_SINGLE_STEP_ENABLED           0x00000001 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1                            0x0040014C /* RW-4R */
#define NV_PGRAPH_CTX_SWITCH1_GRCLASS                           7:0 /* RWXVF */
#define NV_PGRAPH_CTX_SWITCH1_CHROMA_KEY                      12:12 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH1_CHROMA_KEY_DISABLE         0x00000000 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_CHROMA_KEY_ENABLE          0x00000001 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_USER_CLIP                       13:13 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH1_USER_CLIP_DISABLE          0x00000000 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_USER_CLIP_ENABLE           0x00000001 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_SWIZZLE                         14:14 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH1_SWIZZLE_DISABLE            0x00000000 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_SWIZZLE_ENABLE             0x00000001 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_PATCH_CONFIG                    17:15 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH1_PATCH_CONFIG_SRCCOPY_AND   0x00000000 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_PATCH_CONFIG_ROP_AND       0x00000001 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_PATCH_CONFIG_BLEND_AND     0x00000002 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_PATCH_CONFIG_SRCCOPY       0x00000003 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_PATCH_CONFIG_SRCCOPY_PRE   0x00000004 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_PATCH_CONFIG_BLEND_PRE     0x00000005 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_SYNCHRONIZE                     18:18 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH1_SYNCHRONIZE_DISABLE        0x00000000 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_SYNCHRONIZE_ENABLE         0x00000001 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_ENDIAN_MODE                     19:19 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH1_ENDIAN_MODE_LITTLE         0x00000000 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_ENDIAN_MODE_BIG            0x00000001 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_DITHER_MODE                     21:20 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH1_DITHER_MODE_COMPATIBILITY  0x00000000 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_DITHER_MODE_DITHER         0x00000001 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_DITHER_MODE_TRUNCATE       0x00000002 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_DITHER_MODE_MS             0x00000003 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_CLASS_TYPE                      22:22 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH1_CLASS_TYPE_COMPATIBILITY   0x00000000 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_CLASS_TYPE_PERFORMANCE     0x00000001 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_SINGLE_STEP                     23:23 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH1_SINGLE_STEP_DISABLED       0x00000000 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_SINGLE_STEP_ENABLED        0x00000001 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_PATCH_STATUS                    24:24 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH1_PATCH_STATUS_INVALID       0x00000000 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_PATCH_STATUS_VALID         0x00000001 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_CONTEXT_SURFACE0                25:25 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH1_CONTEXT_SURFACE0_INVALID   0x00000000 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_CONTEXT_SURFACE0_VALID     0x00000001 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_CONTEXT_SURFACE1                26:26 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH1_CONTEXT_SURFACE1_INVALID   0x00000000 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_CONTEXT_SURFACE1_VALID     0x00000001 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_CONTEXT_PATTERN                 27:27 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH1_CONTEXT_PATTERN_INVALID    0x00000000 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_CONTEXT_PATTERN_VALID      0x00000001 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_CONTEXT_ROP                     28:28 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH1_CONTEXT_ROP_INVALID        0x00000000 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_CONTEXT_ROP_VALID          0x00000001 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_CONTEXT_BETA1                   29:29 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH1_CONTEXT_BETA1_INVALID      0x00000000 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_CONTEXT_BETA1_VALID        0x00000001 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_CONTEXT_BETA4                   30:30 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH1_CONTEXT_BETA4_INVALID      0x00000000 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_CONTEXT_BETA4_VALID        0x00000001 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_VOLATILE_RESET                  31:31 /* CWIVF */
#define NV_PGRAPH_CTX_SWITCH1_VOLATILE_RESET_IGNORE      0x00000000 /* CWI-V */
#define NV_PGRAPH_CTX_SWITCH1_VOLATILE_RESET_ENABLED     0x00000001 /* -W--T */
#define NV_PGRAPH_CTX_SWITCH2                            0x00400150 /* RW-4R */
#define NV_PGRAPH_CTX_SWITCH2_MONO_FORMAT                       1:0 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH2_MONO_FORMAT_INVALID              0x00 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_MONO_FORMAT_CGA6_M1              0x01 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_MONO_FORMAT_LE_M1                0x02 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT                     13:8 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_INVALID             0x00 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_Y8               0x01 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_X16A8Y8          0x02 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_X24Y8            0x03 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_A1R5G5B5         0x06 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_X1R5G5B5         0x07 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_X16A1R5G5B5      0x08 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_X17R5G5B5        0x09 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_R5G6B5           0x0A /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_A16R5G6B5        0x0B /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_X16R5G6B5        0x0C /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_A8R8G8B8         0x0D /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_X8R8G8B8         0x0E /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_Y16              0x0F /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_A16Y16           0x10 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_X16Y16           0x11 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_V8YB8U8YA8       0x12 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_YB8V8YA8U8       0x13 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_Y32              0x14 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_AY8              0x15 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_EYB8ECR8EYA8ECB8 0x16 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_ECR8EYB8ECB8EYA8 0x17 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_NOTIFY_INSTANCE                 31:16 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH2_NOTIFY_INSTANCE_INVALID        0x0000 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH3                            0x00400154 /* RW-4R */
#define NV_PGRAPH_CTX_SWITCH3_DMA_INSTANCE_0                   15:0 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH3_DMA_INSTANCE_0_INVALID         0x0000 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH3_DMA_INSTANCE_1                  31:16 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH3_DMA_INSTANCE_1_INVALID         0x0000 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH4                            0x00400158 /* RW-4R */
#define NV_PGRAPH_CTX_SWITCH4_USER_INSTANCE                    15:0 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH4_USER_INSTANCE_INVALID          0x0000 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH5                            0x0040015C /* RW-4R */
#define NV_PGRAPH_CTX_SWITCH5_TRAP_BITS                        31:0 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH5_TRAP_BITS_DISABLED             0x0000 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1                            0x0040014C /* RW-4R */
#define NV_PGRAPH_CTX_SWITCH1_GRCLASS                           7:0 /* RWXVF */
#define NV_PGRAPH_CTX_SWITCH1_CHROMA_KEY                      12:12 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH1_CHROMA_KEY_DISABLE         0x00000000 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_CHROMA_KEY_ENABLE          0x00000001 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_USER_CLIP                       13:13 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH1_USER_CLIP_DISABLE          0x00000000 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_USER_CLIP_ENABLE           0x00000001 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_SWIZZLE                         14:14 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH1_SWIZZLE_DISABLE            0x00000000 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_SWIZZLE_ENABLE             0x00000001 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_PATCH_CONFIG                    17:15 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH1_PATCH_CONFIG_SRCCOPY_AND   0x00000000 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_PATCH_CONFIG_ROP_AND       0x00000001 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_PATCH_CONFIG_BLEND_AND     0x00000002 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_PATCH_CONFIG_SRCCOPY       0x00000003 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_PATCH_CONFIG_SRCCOPY_PRE   0x00000004 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_PATCH_CONFIG_BLEND_PRE     0x00000005 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_SYNCHRONIZE                     18:18 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH1_SYNCHRONIZE_DISABLE        0x00000000 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_SYNCHRONIZE_ENABLE         0x00000001 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_ENDIAN_MODE                     19:19 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH1_ENDIAN_MODE_LITTLE         0x00000000 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_ENDIAN_MODE_BIG            0x00000001 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_DITHER_MODE                     21:20 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH1_DITHER_MODE_COMPATIBILITY  0x00000000 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_DITHER_MODE_DITHER         0x00000001 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_DITHER_MODE_TRUNCATE       0x00000002 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_DITHER_MODE_MS             0x00000003 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_CLASS_TYPE                      22:22 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH1_CLASS_TYPE_COMPATIBILITY   0x00000000 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_CLASS_TYPE_PERFORMANCE     0x00000001 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_SINGLE_STEP                     23:23 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH1_SINGLE_STEP_DISABLED       0x00000000 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_SINGLE_STEP_ENABLED        0x00000001 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_PATCH_STATUS                    24:24 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH1_PATCH_STATUS_INVALID       0x00000000 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_PATCH_STATUS_VALID         0x00000001 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_CONTEXT_SURFACE0                25:25 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH1_CONTEXT_SURFACE0_INVALID   0x00000000 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_CONTEXT_SURFACE0_VALID     0x00000001 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_CONTEXT_SURFACE1                26:26 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH1_CONTEXT_SURFACE1_INVALID   0x00000000 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_CONTEXT_SURFACE1_VALID     0x00000001 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_CONTEXT_PATTERN                 27:27 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH1_CONTEXT_PATTERN_INVALID    0x00000000 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_CONTEXT_PATTERN_VALID      0x00000001 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_CONTEXT_ROP                     28:28 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH1_CONTEXT_ROP_INVALID        0x00000000 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_CONTEXT_ROP_VALID          0x00000001 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_CONTEXT_BETA1                   29:29 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH1_CONTEXT_BETA1_INVALID      0x00000000 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_CONTEXT_BETA1_VALID        0x00000001 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_CONTEXT_BETA4                   30:30 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH1_CONTEXT_BETA4_INVALID      0x00000000 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_CONTEXT_BETA4_VALID        0x00000001 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_VOLATILE_RESET                  31:31 /* CWIVF */
#define NV_PGRAPH_CTX_SWITCH1_VOLATILE_RESET_IGNORE      0x00000000 /* CWI-V */
#define NV_PGRAPH_CTX_SWITCH1_VOLATILE_RESET_ENABLED     0x00000001 /* -W--T */
#define NV_PGRAPH_CTX_SWITCH2                            0x00400150 /* RW-4R */
#define NV_PGRAPH_CTX_SWITCH2_MONO_FORMAT                       1:0 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH2_MONO_FORMAT_INVALID              0x00 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_MONO_FORMAT_CGA6_M1              0x01 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_MONO_FORMAT_LE_M1                0x02 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT                     13:8 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_INVALID             0x00 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_Y8               0x01 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_X16A8Y8          0x02 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_X24Y8            0x03 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_A1R5G5B5         0x06 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_X1R5G5B5         0x07 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_X16A1R5G5B5      0x08 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_X17R5G5B5        0x09 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_R5G6B5           0x0A /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_A16R5G6B5        0x0B /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_X16R5G6B5        0x0C /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_A8R8G8B8         0x0D /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_X8R8G8B8         0x0E /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_Y16              0x0F /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_A16Y16           0x10 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_X16Y16           0x11 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_V8YB8U8YA8       0x12 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_YB8V8YA8U8       0x13 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_Y32              0x14 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_AY8              0x15 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_EYB8ECR8EYA8ECB8 0x16 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_ECR8EYB8ECB8EYA8 0x17 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_NOTIFY_INSTANCE                 31:16 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH2_NOTIFY_INSTANCE_INVALID        0x0000 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH3                            0x00400154 /* RW-4R */
#define NV_PGRAPH_CTX_SWITCH3_DMA_INSTANCE_0                   15:0 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH3_DMA_INSTANCE_0_INVALID         0x0000 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH3_DMA_INSTANCE_1                  31:16 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH3_DMA_INSTANCE_1_INVALID         0x0000 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH4                            0x00400158 /* RW-4R */
#define NV_PGRAPH_CTX_SWITCH4_USER_INSTANCE                    15:0 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH4_USER_INSTANCE_INVALID          0x0000 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH5                            0x0040015C /* RW-4R */
#define NV_PGRAPH_CTX_SWITCH5_TRAP_BITS                        31:0 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH5_TRAP_BITS_DISABLED             0x0000 /* RW--V */
#define NV_PGRAPH_CTX_CACHE1(i)                  (0x00400160+(i)*4) /* RW-4A */
#define NV_PGRAPH_CTX_CACHE1__SIZE_1                              8 /*       */
#define NV_PGRAPH_CTX_CACHE1_GRCLASS                            7:0 /* RWXVF */
#define NV_PGRAPH_CTX_CACHE1_CHROMA_KEY                       12:12 /* RWXVF */
#define NV_PGRAPH_CTX_CACHE1_USER_CLIP                        13:13 /* RWXVF */
#define NV_PGRAPH_CTX_CACHE1_SWIZZLE                          14:14 /* RWXVF */
#define NV_PGRAPH_CTX_CACHE1_PATCH_CONFIG                     17:15 /* RWXVF */
#define NV_PGRAPH_CTX_CACHE1_SYNCHRONIZE                      18:18 /* RWXUF */
#define NV_PGRAPH_CTX_CACHE1_ENDIAN_MODE                      19:19 /* RWXUF */
#define NV_PGRAPH_CTX_CACHE1_DITHER_MODE                      21:20 /* RWXVF */
#define NV_PGRAPH_CTX_CACHE1_CLASS_TYPE                       22:22 /* RWXVF */
#define NV_PGRAPH_CTX_CACHE1_SINGLE_STEP                      23:23 /* RWXVF */
#define NV_PGRAPH_CTX_CACHE1_PATCH_STATUS                     24:24 /* RWXVF */
#define NV_PGRAPH_CTX_CACHE1_CONTEXT_SURFACE0                 25:25 /* RWXVF */
#define NV_PGRAPH_CTX_CACHE1_CONTEXT_SURFACE1                 26:26 /* RWXVF */
#define NV_PGRAPH_CTX_CACHE1_CONTEXT_PATTERN                  27:27 /* RWXVF */
#define NV_PGRAPH_CTX_CACHE1_CONTEXT_ROP                      28:28 /* RWXVF */
#define NV_PGRAPH_CTX_CACHE1_CONTEXT_BETA1                    29:29 /* RWXVF */
#define NV_PGRAPH_CTX_CACHE1_CONTEXT_BETA4                    30:30 /* RWXVF */
#define NV_PGRAPH_CTX_CACHE2(i)                  (0x00400180+(i)*4) /* RW-4A */
#define NV_PGRAPH_CTX_CACHE2__SIZE_1                              8 /*       */
#define NV_PGRAPH_CTX_CACHE2_MONO_FORMAT                        1:0 /* RWXVF */
#define NV_PGRAPH_CTX_CACHE2_COLOR_FORMAT                      13:8 /* RWXVF */
#define NV_PGRAPH_CTX_CACHE2_NOTIFY_INSTANCE                  31:16 /* RWXVF */
#define NV_PGRAPH_CTX_CACHE3(i)                  (0x004001a0+(i)*4) /* RW-4A */
#define NV_PGRAPH_CTX_CACHE3__SIZE_1                              8 /*       */
#define NV_PGRAPH_CTX_CACHE3_DMA_INSTANCE_0                    15:0 /* RWXVF */
#define NV_PGRAPH_CTX_CACHE3_DMA_INSTANCE_1                   31:16 /* RWXVF */
#define NV_PGRAPH_CTX_CACHE4(i)                  (0x004001c0+(i)*4) /* RW-4A */
#define NV_PGRAPH_CTX_CACHE4__SIZE_1                              8 /*       */
#define NV_PGRAPH_CTX_CACHE4_USER_INSTANCE                     15:0 /* RWXVF */
#define NV_PGRAPH_CTX_CACHE5(i)                  (0x004001e0+(i)*4) /* RW-4A */
#define NV_PGRAPH_CTX_CACHE5__SIZE_1                              8 /*       */
#define NV_PGRAPH_CTX_CACHE5_TRAP_BITS                         31:0 /* RWXVF */
#define NV_PGRAPH_FFINTFC_FIFO_0(i)              (0x004007a0+(i)*4) /* RW-4A */
#define NV_PGRAPH_FFINTFC_FIFO_0__SIZE_1                          8 /*       */
#define NV_PGRAPH_FFINTFC_FIFO_0_MTHD                          12:2 /* RWXVF */
#define NV_PGRAPH_FFINTFC_FIFO_0_MTHD_CTX_SWITCH         0x00000000 /* RW--V */
#define NV_PGRAPH_FFINTFC_FIFO_0_SUBCH                        18:16 /* RWXVF */
#define NV_PGRAPH_FFINTFC_FIFO_0_SUBCH_0                 0x00000000 /* RW--V */
#define NV_PGRAPH_FFINTFC_FIFO_0_SUBCH_1                 0x00000001 /* RW--V */
#define NV_PGRAPH_FFINTFC_FIFO_0_SUBCH_2                 0x00000002 /* RW--V */
#define NV_PGRAPH_FFINTFC_FIFO_0_SUBCH_3                 0x00000003 /* RW--V */
#define NV_PGRAPH_FFINTFC_FIFO_0_SUBCH_4                 0x00000004 /* RW--V */
#define NV_PGRAPH_FFINTFC_FIFO_0_SUBCH_5                 0x00000005 /* RW--V */
#define NV_PGRAPH_FFINTFC_FIFO_0_SUBCH_6                 0x00000006 /* RW--V */
#define NV_PGRAPH_FFINTFC_FIFO_0_SUBCH_7                 0x00000007 /* RW--V */
#define NV_PGRAPH_FFINTFC_FIFO_0_CODE                         21:20 /* RWXVF */
#define NV_PGRAPH_FFINTFC_FIFO_0_CODE_DOUBLE_NONINCR     0x00000000 /* RW--V */
#define NV_PGRAPH_FFINTFC_FIFO_0_CODE_DOUBLE_INCR        0x00000001 /* RW--V */
#define NV_PGRAPH_FFINTFC_FIFO_0_CODE_SINGLE             0x00000002 /* RW--V */
#define NV_PGRAPH_FFINTFC_FIFO_0_CODE_CHSW               0x00000003 /* RW--V */
#define NV_PGRAPH_FFINTFC_FIFO_1(i)              (0x004007c0+(i)*4) /* RW-4A */
#define NV_PGRAPH_FFINTFC_FIFO_1__SIZE_1                          8 /*       */
#define NV_PGRAPH_FFINTFC_FIFO_1_ARGUMENT                      31:0 /* RWXVF */
#define NV_PGRAPH_FFINTFC_FIFO_2(i)              (0x004007e0+(i)*4) /* RW-4A */
#define NV_PGRAPH_FFINTFC_FIFO_2__SIZE_1                          8 /*       */
#define NV_PGRAPH_FFINTFC_FIFO_2_ARGUMENT                      31:0 /* RWXVF */
#define NV_PGRAPH_FFINTFC_FIFO_PTR                       0x00400760 /* RW-4R */
#define NV_PGRAPH_FFINTFC_FIFO_PTR_WRITE                        3:0 /* RWIVF */
#define NV_PGRAPH_FFINTFC_FIFO_PTR_WRITE_0               0x00000000 /* RWI-V */
#define NV_PGRAPH_FFINTFC_FIFO_PTR_READ                         7:4 /* RWIVF */
#define NV_PGRAPH_FFINTFC_FIFO_PTR_READ_0                0x00000000 /* RWI-V */
#define NV_PGRAPH_FFINTFC_ST2                            0x00400764 /* RW-4R */
#define NV_PGRAPH_FFINTFC_ST2_MTHD                             12:2 /* RWIVF */
#define NV_PGRAPH_FFINTFC_ST2_MTHD_CTX_SWITCH            0x00000000 /* RWI-V */
#define NV_PGRAPH_FFINTFC_ST2_SUBCH                           18:16 /* RWIVF */
#define NV_PGRAPH_FFINTFC_ST2_SUBCH_0                    0x00000000 /* RWI-V */
#define NV_PGRAPH_FFINTFC_ST2_SUBCH_1                    0x00000001 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_SUBCH_2                    0x00000002 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_SUBCH_3                    0x00000003 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_SUBCH_4                    0x00000004 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_SUBCH_5                    0x00000005 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_SUBCH_6                    0x00000006 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_SUBCH_7                    0x00000007 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID                            24:20 /* RWIVF */
#define NV_PGRAPH_FFINTFC_ST2_CHID_0                     0x00000000 /* RWI-V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_1                     0x00000001 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_2                     0x00000002 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_3                     0x00000003 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_4                     0x00000004 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_5                     0x00000005 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_6                     0x00000006 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_7                     0x00000007 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_8                     0x00000008 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_9                     0x00000009 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_10                    0x0000000A /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_11                    0x0000000B /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_12                    0x0000000C /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_13                    0x0000000D /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_14                    0x0000000E /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_15                    0x0000000F /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_16                    0x00000010 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_17                    0x00000011 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_18                    0x00000012 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_19                    0x00000013 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_20                    0x00000014 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_21                    0x00000015 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_22                    0x00000016 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_23                    0x00000017 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_24                    0x00000018 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_25                    0x00000019 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_26                    0x0000001A /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_27                    0x0000001B /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_28                    0x0000001C /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_29                    0x0000001D /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_30                    0x0000001E /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_31                    0x0000001F /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_DATAHIGH                        25:25 /* RWIVF */
#define NV_PGRAPH_FFINTFC_ST2_DATAHIGH_INVALID           0x00000000 /* RWI-V */
#define NV_PGRAPH_FFINTFC_ST2_DATAHIGH_VALID             0x00000001 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_STATUS                          26:26 /* RWIVF */
#define NV_PGRAPH_FFINTFC_ST2_STATUS_INVALID             0x00000000 /* RWI-V */
#define NV_PGRAPH_FFINTFC_ST2_STATUS_VALID               0x00000001 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_STATUS                     27:27 /* RWIVF */
#define NV_PGRAPH_FFINTFC_ST2_CHID_STATUS_INVALID        0x00000000 /* RWI-V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_STATUS_VALID          0x00000001 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHSWITCH                        28:28 /* RWIVF */
#define NV_PGRAPH_FFINTFC_ST2_CHSWITCH_CLEAR             0x00000000 /* RWI-V */
#define NV_PGRAPH_FFINTFC_ST2_CHSWITCH_SET               0x00000001 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_FIFOHOLD                        29:29 /* RWIVF */
#define NV_PGRAPH_FFINTFC_ST2_FIFOHOLD_CLEAR             0x00000000 /* RWI-V */
#define NV_PGRAPH_FFINTFC_ST2_FIFOHOLD_SET               0x00000001 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_MODE                            30:30 /* RWIVF */
#define NV_PGRAPH_FFINTFC_ST2_MODE_NONINCREMENTING       0x00000000 /* RWI-V */
#define NV_PGRAPH_FFINTFC_ST2_MODE_INCREMENTING          0x00000001 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_DL                         0x00400768 /* RW-4R */
#define NV_PGRAPH_FFINTFC_ST2_DL_ARGUMENT                      31:0 /* RWIVF */
#define NV_PGRAPH_FFINTFC_ST2_DL_ARGUMENT_0              0x00000000 /* RWI-V */
#define NV_PGRAPH_FFINTFC_ST2_DH                         0x0040076c /* RW-4R */
#define NV_PGRAPH_FFINTFC_ST2_DH_ARGUMENT                      31:0 /* RWIVF */
#define NV_PGRAPH_FFINTFC_ST2_DH_ARGUMENT_0              0x00000000 /* RWI-V */
#define NV_PGRAPH_STATUS                                 0x00400700 /* R--4R */
#define NV_PGRAPH_STATUS_STATE                                  0:0 /* R-IVF */
#define NV_PGRAPH_STATUS_STATE_IDLE                      0x00000000 /* R-I-V */
#define NV_PGRAPH_STATUS_STATE_BUSY                      0x00000001 /* R---V */
#define NV_PGRAPH_STATUS_FINE_RASTERIZER                        1:1 /* R-IVF */
#define NV_PGRAPH_STATUS_FINE_RASTERIZER_IDLE            0x00000000 /* R-I-V */
#define NV_PGRAPH_STATUS_FINE_RASTERIZER_BUSY            0x00000001 /* R---V */
#define NV_PGRAPH_STATUS_COARSE_RASTERIZER                      2:2 /* R-IVF */
#define NV_PGRAPH_STATUS_COARSE_RASTERIZER_IDLE          0x00000000 /* R-I-V */
#define NV_PGRAPH_STATUS_COARSE_RASTERIZER_BUSY          0x00000001 /* R---V */
#define NV_PGRAPH_STATUS_FE_3D                                  3:3 /* R-IVF */
#define NV_PGRAPH_STATUS_FE_3D_IDLE                      0x00000000 /* R-I-V */
#define NV_PGRAPH_STATUS_FE_3D_BUSY                      0x00000001 /* R---V */
#define NV_PGRAPH_STATUS_FE_2D                                  4:4 /* R-IVF */
#define NV_PGRAPH_STATUS_FE_2D_IDLE                      0x00000000 /* R-I-V */
#define NV_PGRAPH_STATUS_FE_2D_BUSY                      0x00000001 /* R---V */
#define NV_PGRAPH_STATUS_XY_LOGIC                               5:5 /* R-IVF */
#define NV_PGRAPH_STATUS_XY_LOGIC_IDLE                   0x00000000 /* R-I-V */
#define NV_PGRAPH_STATUS_XY_LOGIC_BUSY                   0x00000001 /* R---V */
#define NV_PGRAPH_STATUS_WAITCRTC                               6:6 /* R-IVF */
#define NV_PGRAPH_STATUS_WAITCRTC_IDLE                   0x00000000 /* R-I-V */
#define NV_PGRAPH_STATUS_WAITCRTC_BUSY                   0x00000001 /* R---V */
#define NV_PGRAPH_STATUS_RASTERIZER_2D                          7:7 /* R-IVF */
#define NV_PGRAPH_STATUS_RASTERIZER_2D_IDLE              0x00000000 /* R-I-V */
#define NV_PGRAPH_STATUS_RASTERIZER_2D_BUSY              0x00000001 /* R---V */
#define NV_PGRAPH_STATUS_IDX                                    8:8 /* R-IVF */
#define NV_PGRAPH_STATUS_IDX_IDLE                        0x00000000 /* R-I-V */
#define NV_PGRAPH_STATUS_IDX_BUSY                        0x00000001 /* R---V */
#define NV_PGRAPH_STATUS_XF                                     9:9 /* R-IVF */
#define NV_PGRAPH_STATUS_XF_IDLE                         0x00000000 /* R-I-V */
#define NV_PGRAPH_STATUS_XF_BUSY                         0x00000001 /* R---V */
#define NV_PGRAPH_STATUS_VTX                                  10:10 /* R-IVF */
#define NV_PGRAPH_STATUS_VTX_IDLE                        0x00000000 /* R-I-V */
#define NV_PGRAPH_STATUS_VTX_BUSY                        0x00000001 /* R---V */
#define NV_PGRAPH_STATUS_CAS                                  11:11 /* R-IVF */
#define NV_PGRAPH_STATUS_CAS_IDLE                        0x00000000 /* R-I-V */
#define NV_PGRAPH_STATUS_CAS_BUSY                        0x00000001 /* R---V */
#define NV_PGRAPH_STATUS_PORT_NOTIFY                          12:12 /* R-IVF */
#define NV_PGRAPH_STATUS_PORT_NOTIFY_IDLE                0x00000000 /* R-I-V */
#define NV_PGRAPH_STATUS_PORT_NOTIFY_BUSY                0x00000001 /* R---V */
#define NV_PGRAPH_STATUS_SHADER                               13:13 /* R-IVF */
#define NV_PGRAPH_STATUS_SHADER_IDLE                     0x00000000 /* R-I-V */
#define NV_PGRAPH_STATUS_SHADER_BUSY                     0x00000001 /* R---V */
#define NV_PGRAPH_STATUS_SHADER_BE                            14:14 /* R-IVF */
#define NV_PGRAPH_STATUS_SHADER_BE_IDLE                  0x00000000 /* R-I-V */
#define NV_PGRAPH_STATUS_SHADER_BE_BUSY                  0x00000001 /* R---V */
#define NV_PGRAPH_STATUS_PORT_DMA                             16:16 /* R-IVF */
#define NV_PGRAPH_STATUS_PORT_DMA_IDLE                   0x00000000 /* R-I-V */
#define NV_PGRAPH_STATUS_PORT_DMA_BUSY                   0x00000001 /* R---V */
#define NV_PGRAPH_STATUS_DMA_ENGINE                           17:17 /* R-IVF */
#define NV_PGRAPH_STATUS_DMA_ENGINE_IDLE                 0x00000000 /* R-I-V */
#define NV_PGRAPH_STATUS_DMA_ENGINE_BUSY                 0x00000001 /* R---V */
#define NV_PGRAPH_STATUS_DMA_NOTIFY                           20:20 /* R-IVF */
#define NV_PGRAPH_STATUS_DMA_NOTIFY_IDLE                 0x00000000 /* R-I-V */
#define NV_PGRAPH_STATUS_DMA_NOTIFY_BUSY                 0x00000001 /* R---V */
#define NV_PGRAPH_STATUS_DMA_BUFFER_NOTIFY                    21:21 /* R-IVF */
#define NV_PGRAPH_STATUS_DMA_BUFFER_NOTIFY_IDLE          0x00000000 /* R-I-V */
#define NV_PGRAPH_STATUS_DMA_BUFFER_NOTIFY_BUSY          0x00000001 /* R---V */
#define NV_PGRAPH_STATUS_DMA_WARNING_NOTIFY                   22:22 /* R-IVF */
#define NV_PGRAPH_STATUS_DMA_WARNING_NOTIFY_IDLE         0x00000000 /* R-I-V */
#define NV_PGRAPH_STATUS_DMA_WARNING_NOTIFY_BUSY         0x00000001 /* R---V */
#define NV_PGRAPH_STATUS_ZCULL                                23:23 /* R-IVF */
#define NV_PGRAPH_STATUS_ZCULL_IDLE                      0x00000000 /* R-I-V */
#define NV_PGRAPH_STATUS_ZCULL_BUSY                      0x00000001 /* R---V */
#define NV_PGRAPH_STATUS_FDIFF                                24:24 /* R-IVF */
#define NV_PGRAPH_STATUS_FDIFF_IDLE                      0x00000000 /* R-I-V */
#define NV_PGRAPH_STATUS_FDIFF_BUSY                      0x00000001 /* R---V */
#define NV_PGRAPH_STATUS_SETUP                                25:25 /* R-IVF */
#define NV_PGRAPH_STATUS_SETUP_IDLE                      0x00000000 /* R-I-V */
#define NV_PGRAPH_STATUS_SETUP_BUSY                      0x00000001 /* R---V */
#define NV_PGRAPH_STATUS_CACHE                                26:26 /* R-IVF */
#define NV_PGRAPH_STATUS_CACHE_IDLE                      0x00000000 /* R-I-V */
#define NV_PGRAPH_STATUS_CACHE_BUSY                      0x00000001 /* R---V */
#define NV_PGRAPH_STATUS_COMBINER                             27:27 /* R-IVF */
#define NV_PGRAPH_STATUS_COMBINER_IDLE                   0x00000000 /* R-I-V */
#define NV_PGRAPH_STATUS_COMBINER_BUSY                   0x00000001 /* R---V */
#define NV_PGRAPH_STATUS_PREROP                               28:28 /* R-IVF */
#define NV_PGRAPH_STATUS_PREROP_IDLE                     0x00000000 /* R-I-V */
#define NV_PGRAPH_STATUS_PREROP_BUSY                     0x00000001 /* R---V */
#define NV_PGRAPH_STATUS_ROP                                  29:29 /* R-IVF */
#define NV_PGRAPH_STATUS_ROP_IDLE                        0x00000000 /* R-I-V */
#define NV_PGRAPH_STATUS_ROP_BUSY                        0x00000001 /* R---V */
#define NV_PGRAPH_STATUS_PORT_USER                            30:30 /* R-IVF */
#define NV_PGRAPH_STATUS_PORT_USER_IDLE                  0x00000000 /* R-I-V */
#define NV_PGRAPH_STATUS_PORT_USER_BUSY                  0x00000001 /* R---V */
#define NV_PGRAPH_STATUS_PORT_FB                              31:31 /* R-IVF */
#define NV_PGRAPH_STATUS_PORT_FB_IDLE                    0x00000000 /* R-I-V */
#define NV_PGRAPH_STATUS_PORT_FB_BUSY                    0x00000001 /* R---V */
#define NV_PGRAPH_TRAPPED_ADDR                           0x00400704 /* R--4R */
#define NV_PGRAPH_TRAPPED_ADDR_MTHD                            12:2 /* R-XUF */
#define NV_PGRAPH_TRAPPED_ADDR_SUBCH                          18:16 /* R-XUF */
#define NV_PGRAPH_TRAPPED_ADDR_CHID                           24:20 /* R-XUF */
#define NV_PGRAPH_TRAPPED_ADDR_DHV                            28:28 /* R-XUF */
#define NV_PGRAPH_TRAPPED_DATA_LOW                       0x00400708 /* R--4R */
#define NV_PGRAPH_TRAPPED_DATA_LOW_VALUE                       31:0 /* R-XVF */
#define NV_PGRAPH_TRAPPED_DATA_HIGH                      0x0040070C /* R--4R */
#define NV_PGRAPH_TRAPPED_DATA_HIGH_VALUE                      31:0 /* R-XVF */
#define NV_PGRAPH_SURFACE                                0x00400710 /* RW-4R */
#define NV_PGRAPH_SURFACE_TYPE                                  1:0 /* RWIVF */
#define NV_PGRAPH_SURFACE_TYPE_INVALID                   0x00000000 /* RWI-V */
#define NV_PGRAPH_SURFACE_TYPE_NON_SWIZZLE               0x00000001 /* RW--V */
#define NV_PGRAPH_SURFACE_TYPE_SWIZZLE                   0x00000002 /* RW--V */
#define NV_PGRAPH_SURFACE_TYPE_056                       0x00000001 /* RWC-V */
#define NV_PGRAPH_SURFACE_TYPE_096                       0x00000001 /* RWC-V */
#define NV_PGRAPH_SURFACE_TYPE_097                       0x00000001 /* RWC-V */
#define NV_PGRAPH_SURFACE_ANTIALIASING                          5:4 /* RWIVF */
#define NV_PGRAPH_SURFACE_ANTIALIASING_CENTER_1          0x00000000 /* RWI-V */
#define NV_PGRAPH_SURFACE_ANTIALIASING_CENTER_CORNER_2   0x00000001 /* RW--V */
#define NV_PGRAPH_SURFACE_ANTIALIASING_SQUARE_OFFSET_4   0x00000002 /* RW--V */
#define NV_PGRAPH_SURFACE_ANTIALIASING_097               0x00000000 /* RWC-V */
#define NV_PGRAPH_SURFACE_WRITE_BLIT                           10:8 /* RWIVF */
#define NV_PGRAPH_SURFACE_WRITE_BLIT_0                   0x00000000 /* RWI-V */
#define NV_PGRAPH_SURFACE_WRITE_BLIT_09F                 0x00000000 /* RWC-V */
#define NV_PGRAPH_SURFACE_READ_BLIT                           14:12 /* RWIVF */
#define NV_PGRAPH_SURFACE_READ_BLIT_0                    0x00000000 /* RWI-V */
#define NV_PGRAPH_SURFACE_READ_BLIT_09F                  0x00000000 /* RWC-V */
#define NV_PGRAPH_SURFACE_MODULO_BLIT                         18:16 /* RWIVF */
#define NV_PGRAPH_SURFACE_MODULO_BLIT_0                  0x00000000 /* RWI-V */
#define NV_PGRAPH_SURFACE_MODULO_BLIT_09F                0x00000001 /* RWC-V */
#define NV_PGRAPH_SURFACE_WRITE_3D                            22:20 /* RWIVF */
#define NV_PGRAPH_SURFACE_WRITE_3D_0                     0x00000000 /* RWI-V */
#define NV_PGRAPH_SURFACE_WRITE_3D_056                   0x00000000 /* RWC-V */
#define NV_PGRAPH_SURFACE_WRITE_3D_096                   0x00000000 /* RWC-V */
#define NV_PGRAPH_SURFACE_WRITE_3D_097                   0x00000000 /* RWC-V */
#define NV_PGRAPH_SURFACE_READ_3D                             26:24 /* RWIVF */
#define NV_PGRAPH_SURFACE_READ_3D_0                      0x00000000 /* RWI-V */
#define NV_PGRAPH_SURFACE_READ_3D_056                    0x00000000 /* RWC-V */
#define NV_PGRAPH_SURFACE_READ_3D_096                    0x00000000 /* RWC-V */
#define NV_PGRAPH_SURFACE_READ_3D_097                    0x00000000 /* RWC-V */
#define NV_PGRAPH_SURFACE_MODULO_3D                           30:28 /* RWIVF */
#define NV_PGRAPH_SURFACE_MODULO_3D_0                    0x00000002 /* RWI-V */
#define NV_PGRAPH_SURFACE_MODULO_3D_056                  0x00000002 /* RWC-V */
#define NV_PGRAPH_SURFACE_MODULO_3D_096                  0x00000002 /* RWC-V */
#define NV_PGRAPH_SURFACE_MODULO_3D_097                  0x00000002 /* RWC-V */
#define NV_PGRAPH_INCREMENT                              0x0040071C /* RW-4R */
#define NV_PGRAPH_INCREMENT_READ_BLIT                           0:0 /* CWIVF */
#define NV_PGRAPH_INCREMENT_READ_BLIT_IGNORE             0x00000000 /* CWI-V */
#define NV_PGRAPH_INCREMENT_READ_BLIT_TRIGGER            0x00000001 /* -W--T */
#define NV_PGRAPH_INCREMENT_READ_3D                             1:1 /* CWIVF */
#define NV_PGRAPH_INCREMENT_READ_3D_IGNORE               0x00000000 /* CWI-V */
#define NV_PGRAPH_INCREMENT_READ_3D_TRIGGER              0x00000001 /* -W--T */
#define NV_PGRAPH_NOTIFY                                 0x00400718 /* RW-4R */
#define NV_PGRAPH_NOTIFY_BUFFER_REQ                             0:0 /* RWIVF */
#define NV_PGRAPH_NOTIFY_BUFFER_REQ_NOT_PENDING          0x00000000 /* RWI-V */
#define NV_PGRAPH_NOTIFY_BUFFER_REQ_PENDING              0x00000001 /* RW--V */
#define NV_PGRAPH_NOTIFY_BUFFER_STYLE                           8:8 /* RWIVF */
#define NV_PGRAPH_NOTIFY_BUFFER_STYLE_WRITE_ONLY         0x00000000 /* RWI-V */
#define NV_PGRAPH_NOTIFY_BUFFER_STYLE_WRITE_THEN_AWAKEN  0x00000001 /* RW--V */
#define NV_PGRAPH_NOTIFY_REQ                                  16:16 /* RWIVF */
#define NV_PGRAPH_NOTIFY_REQ_NOT_PENDING                 0x00000000 /* RWI-V */
#define NV_PGRAPH_NOTIFY_REQ_PENDING                     0x00000001 /* RW--V */
#define NV_PGRAPH_NOTIFY_STYLE                                20:20 /* RWIVF */
#define NV_PGRAPH_NOTIFY_STYLE_WRITE_ONLY                0x00000000 /* RWI-V */
#define NV_PGRAPH_NOTIFY_STYLE_WRITE_THEN_AWAKEN         0x00000001 /* RW--V */
#define NV_PGRAPH_NOTIFY_WARNING_REQ                          24:24 /* RWIVF */
#define NV_PGRAPH_NOTIFY_WARNING_REQ_NOT_PENDING         0x00000000 /* RWI-V */
#define NV_PGRAPH_NOTIFY_WARNING_REQ_PENDING             0x00000001 /* RW--V */
#define NV_PGRAPH_NOTIFY_WARNING_STYLE                        25:25 /* RWIVF */
#define NV_PGRAPH_NOTIFY_WARNING_STYLE_WRITE_ONLY        0x00000000 /* RWI-V */
#define NV_PGRAPH_NOTIFY_WARNING_STYLE_WRITE_THEN_AWAKEN 0x00000001 /* RW--V */
#define NV_PGRAPH_NOTIFY_WARNING_STATUS                       30:28 /* RWIVF */
#define NV_PGRAPH_NOTIFY_WARNING_STATUS_NO_WARNING       0x00000000 /* RWI-V */
#define NV_PGRAPH_NOTIFY_WARNING_STATUS_INVALID_ENUM     0x00000001 /* RW--V */
#define NV_PGRAPH_NOTIFY_WARNING_STATUS_INVALID_VALUE    0x00000002 /* RW--V */
#define NV_PGRAPH_NOTIFY_WARNING_STATUS_INVALID_OP       0x00000004 /* RW--V */
#define NV_PGRAPH_BOFFSET(i)                     (0x00400820+(i)*4) /* RW-4A */
#define NV_PGRAPH_BOFFSET__SIZE_1                                 6 /*       */
#define NV_PGRAPH_BOFFSET_LINADRS                              29:0 /* RWIUF */
#define NV_PGRAPH_BOFFSET_LINADRS_0                      0x00000000 /* RWI-V */
#define NV_PGRAPH_BOFFSET0                               0x00400820 /* RW-4R */
#define NV_PGRAPH_BOFFSET0__ALIAS_1            NV_PGRAPH_BOFFSET(0) /*       */
#define NV_PGRAPH_BOFFSET0_LINADRS                             29:0 /* RWIUF */
#define NV_PGRAPH_BOFFSET0_LINADRS_0                     0x00000000 /* RWI-V */
#define NV_PGRAPH_BOFFSET0_LINADRS_042                   0x00000000 /* RWC-V */
#define NV_PGRAPH_BOFFSET0_LINADRS_058                   0x00000000 /* RWC-V */
#define NV_PGRAPH_BOFFSET0_LINADRS_062                   0x00000000 /* RWC-V */
#define NV_PGRAPH_BOFFSET1                               0x00400824 /* RW-4R */
#define NV_PGRAPH_BOFFSET1__ALIAS_1            NV_PGRAPH_BOFFSET(1) /*       */
#define NV_PGRAPH_BOFFSET1_LINADRS                             29:0 /* RWIUF */
#define NV_PGRAPH_BOFFSET1_LINADRS_0                     0x00000000 /* RWI-V */
#define NV_PGRAPH_BOFFSET1_LINADRS_042                   0x00000000 /* RWC-V */
#define NV_PGRAPH_BOFFSET1_LINADRS_059                   0x00000000 /* RWC-V */
#define NV_PGRAPH_BOFFSET1_LINADRS_062                   0x00000000 /* RWC-V */
#define NV_PGRAPH_BOFFSET2                               0x00400828 /* RW-4R */
#define NV_PGRAPH_BOFFSET2__ALIAS_1            NV_PGRAPH_BOFFSET(2) /*       */
#define NV_PGRAPH_BOFFSET2_LINADRS                             29:0 /* RWIUF */
#define NV_PGRAPH_BOFFSET2_LINADRS_0                     0x00000000 /* RWI-V */
#define NV_PGRAPH_BOFFSET2_LINADRS_056                   0x00000000 /* RWC-V */
#define NV_PGRAPH_BOFFSET2_LINADRS_05A                   0x00000000 /* RWC-V */
#define NV_PGRAPH_BOFFSET2_LINADRS_096                   0x00000000 /* RWC-V */
#define NV_PGRAPH_BOFFSET2_LINADRS_097                   0x00000000 /* RWC-V */
#define NV_PGRAPH_BOFFSET3                               0x0040082C /* RW-4R */
#define NV_PGRAPH_BOFFSET3__ALIAS_1            NV_PGRAPH_BOFFSET(3) /*       */
#define NV_PGRAPH_BOFFSET3_LINADRS                             29:0 /* RWIUF */
#define NV_PGRAPH_BOFFSET3_LINADRS_0                     0x00000000 /* RWI-V */
#define NV_PGRAPH_BOFFSET3_LINADRS_056                   0x00000000 /* RWC-V */
#define NV_PGRAPH_BOFFSET3_LINADRS_05B                   0x00000000 /* RWC-V */
#define NV_PGRAPH_BOFFSET3_LINADRS_096                   0x00000000 /* RWC-V */
#define NV_PGRAPH_BOFFSET3_LINADRS_097                   0x00000000 /* RWC-V */
#define NV_PGRAPH_BOFFSET4                               0x00400830 /* RW-4R */
#define NV_PGRAPH_BOFFSET4__ALIAS_1            NV_PGRAPH_BOFFSET(4) /*       */
#define NV_PGRAPH_BOFFSET4_LINADRS                             29:0 /* RWIUF */
#define NV_PGRAPH_BOFFSET4_LINADRS_0                     0x00000000 /* RWI-V */
#define NV_PGRAPH_BOFFSET5                               0x00400834 /* RW-4R */
#define NV_PGRAPH_BOFFSET5__ALIAS_1            NV_PGRAPH_BOFFSET(5) /*       */
#define NV_PGRAPH_BOFFSET5_LINADRS                             29:0 /* RWIUF */
#define NV_PGRAPH_BOFFSET5_LINADRS_0                     0x00000000 /* RWI-V */
#define NV_PGRAPH_BOFFSET5_LINADRS_052                   0x00000000 /* RWC-V */
#define NV_PGRAPH_BOFFSET5_LINADRS_09E                   0x00000000 /* RWC-V */
#define NV_PGRAPH_BBASE(i)                       (0x00400838+(i)*4) /* RW-4A */
#define NV_PGRAPH_BBASE__SIZE_1                                   6 /*       */
#define NV_PGRAPH_BBASE_LINADRS                                29:0 /* RWIUF */
#define NV_PGRAPH_BBASE_LINADRS_0                        0x00000000 /* RWI-V */
#define NV_PGRAPH_BBASE0                                 0x00400838 /* RW-4R */
#define NV_PGRAPH_BBASE0__ALIAS_1                NV_PGRAPH_BBASE(0) /*       */
#define NV_PGRAPH_BBASE0_LINADRS                               29:0 /* RWIUF */
#define NV_PGRAPH_BBASE0_LINADRS_0                       0x00000000 /* RWI-V */
#define NV_PGRAPH_BBASE1                                 0x0040083c /* RW-4R */
#define NV_PGRAPH_BBASE1__ALIAS_1                NV_PGRAPH_BBASE(1) /*       */
#define NV_PGRAPH_BBASE1_LINADRS                               29:0 /* RWIUF */
#define NV_PGRAPH_BBASE1_LINADRS_0                       0x00000000 /* RWI-V */
#define NV_PGRAPH_BBASE2                                 0x00400840 /* RW-4R */
#define NV_PGRAPH_BBASE2__ALIAS_1                NV_PGRAPH_BBASE(2) /*       */
#define NV_PGRAPH_BBASE2_LINADRS                               29:0 /* RWIUF */
#define NV_PGRAPH_BBASE2_LINADRS_0                       0x00000000 /* RWI-V */
#define NV_PGRAPH_BBASE3                                 0x00400844 /* RW-4R */
#define NV_PGRAPH_BBASE3__ALIAS_1                NV_PGRAPH_BBASE(3) /*       */
#define NV_PGRAPH_BBASE3_LINADRS                               29:0 /* RWIUF */
#define NV_PGRAPH_BBASE3_LINADRS_0                       0x00000000 /* RWI-V */
#define NV_PGRAPH_BBASE4                                 0x00400848 /* RW-4R */
#define NV_PGRAPH_BBASE4__ALIAS_1                NV_PGRAPH_BBASE(4) /*       */
#define NV_PGRAPH_BBASE4_LINADRS                               29:0 /* RWIUF */
#define NV_PGRAPH_BBASE4_LINADRS_0                       0x00000000 /* RWI-V */
#define NV_PGRAPH_BBASE5                                 0x0040084C /* RW-4R */
#define NV_PGRAPH_BBASE5__ALIAS_1                NV_PGRAPH_BBASE(5) /*       */
#define NV_PGRAPH_BBASE5_LINADRS                               29:0 /* RWIUF */
#define NV_PGRAPH_BBASE5_LINADRS_0                       0x00000000 /* RWI-V */
#define NV_PGRAPH_BPITCH(i)                      (0x00400850+(i)*4) /* RW-4A */
#define NV_PGRAPH_BPITCH__SIZE_1                                  5 /*       */
#define NV_PGRAPH_BPITCH_VALUE                                 15:0 /* RWIUF */
#define NV_PGRAPH_BPITCH_VALUE_0                         0x00000000 /* RWI-V */
#define NV_PGRAPH_BPITCH0                                0x00400850 /* RW-4R */
#define NV_PGRAPH_BPITCH0__ALIAS_1              NV_PGRAPH_BPITCH(0) /*       */
#define NV_PGRAPH_BPITCH0_VALUE                                15:0 /* RWIUF */
#define NV_PGRAPH_BPITCH0_VALUE_0                        0x00000000 /* RWI-V */
#define NV_PGRAPH_BPITCH0_VALUE_042                      0x00000040 /* RWC-V */
#define NV_PGRAPH_BPITCH0_VALUE_058                      0x00000040 /* RWC-V */
#define NV_PGRAPH_BPITCH0_VALUE_062                      0x00000040 /* RWC-V */
#define NV_PGRAPH_BPITCH1                                0x00400854 /* RW-4R */
#define NV_PGRAPH_BPITCH1__ALIAS_1              NV_PGRAPH_BPITCH(1) /*       */
#define NV_PGRAPH_BPITCH1_VALUE                                15:0 /* RWIUF */
#define NV_PGRAPH_BPITCH1_VALUE_0                        0x00000000 /* RWI-V */
#define NV_PGRAPH_BPITCH1_VALUE_042                      0x00000040 /* RWC-V */
#define NV_PGRAPH_BPITCH1_VALUE_059                      0x00000040 /* RWC-V */
#define NV_PGRAPH_BPITCH1_VALUE_062                      0x00000040 /* RWC-V */
#define NV_PGRAPH_BPITCH2                                0x00400858 /* RW-4R */
#define NV_PGRAPH_BPITCH2__ALIAS_1              NV_PGRAPH_BPITCH(2) /*       */
#define NV_PGRAPH_BPITCH2_VALUE                                15:0 /* RWIUF */
#define NV_PGRAPH_BPITCH2_VALUE_0                        0x00000000 /* RWI-V */
#define NV_PGRAPH_BPITCH2_VALUE_056                      0x00000040 /* RWC-V */
#define NV_PGRAPH_BPITCH2_VALUE_05A                      0x00000040 /* RWC-V */
#define NV_PGRAPH_BPITCH2_VALUE_096                      0x00000040 /* RWC-V */
#define NV_PGRAPH_BPITCH2_VALUE_097                      0x00000040 /* RWC-V */
#define NV_PGRAPH_BPITCH3                                0x0040085C /* RW-4R */
#define NV_PGRAPH_BPITCH3__ALIAS_1              NV_PGRAPH_BPITCH(3) /*       */
#define NV_PGRAPH_BPITCH3_VALUE                                15:0 /* RWIUF */
#define NV_PGRAPH_BPITCH3_VALUE_0                        0x00000000 /* RWI-V */
#define NV_PGRAPH_BPITCH3_VALUE_056                      0x00000040 /* RWC-V */
#define NV_PGRAPH_BPITCH3_VALUE_05B                      0x00000040 /* RWC-V */
#define NV_PGRAPH_BPITCH3_VALUE_096                      0x00000040 /* RWC-V */
#define NV_PGRAPH_BPITCH3_VALUE_097                      0x00000040 /* RWC-V */
#define NV_PGRAPH_BPITCH4                                0x00400860 /* RW-4R */
#define NV_PGRAPH_BPITCH4__ALIAS_1              NV_PGRAPH_BPITCH(4) /*       */
#define NV_PGRAPH_BPITCH4_VALUE                                15:0 /* RWIUF */
#define NV_PGRAPH_BPITCH4_VALUE_0                        0x00000000 /* RWI-V */
#define NV_PGRAPH_BLIMIT(i)                      (0x00400864+(i)*4) /* RW-4A */
#define NV_PGRAPH_BLIMIT__SIZE_1                                  6 /*       */
#define NV_PGRAPH_BLIMIT_VALUE                                 29:0 /* RWXUF */
#define NV_PGRAPH_BLIMIT_ADDRESSING                           30:30 /* RWIVF */
#define NV_PGRAPH_BLIMIT_ADDRESSING_LINEAR               0x00000000 /* RWI-V */
#define NV_PGRAPH_BLIMIT_ADDRESSING_TILED                0x00000001 /* RW--V */
#define NV_PGRAPH_BLIMIT_TYPE                                 31:31 /* RWIVF */
#define NV_PGRAPH_BLIMIT_TYPE_IN_MEMORY                  0x00000000 /* RW--V */
#define NV_PGRAPH_BLIMIT_TYPE_NULL                       0x00000001 /* RWI-V */
#define NV_PGRAPH_BLIMIT0                                0x00400864 /* RW-4R */
#define NV_PGRAPH_BLIMIT0__ALIAS_1              NV_PGRAPH_BLIMIT(0) /*       */
#define NV_PGRAPH_BLIMIT0_VALUE                                29:0 /* RWXUF */
#define NV_PGRAPH_BLIMIT0_ADDRESSING                          30:30 /* RWIVF */
#define NV_PGRAPH_BLIMIT0_ADDRESSING_LINEAR              0x00000000 /* RWI-V */
#define NV_PGRAPH_BLIMIT0_ADDRESSING_TILED               0x00000001 /* RW--V */
#define NV_PGRAPH_BLIMIT0_TYPE                                31:31 /* RWIVF */
#define NV_PGRAPH_BLIMIT0_TYPE_IN_MEMORY                 0x00000000 /* RW--V */
#define NV_PGRAPH_BLIMIT0_TYPE_NULL                      0x00000001 /* RWI-V */
#define NV_PGRAPH_BLIMIT1                                0x00400868 /* RW-4R */
#define NV_PGRAPH_BLIMIT1__ALIAS_1              NV_PGRAPH_BLIMIT(1) /*       */
#define NV_PGRAPH_BLIMIT1_VALUE                                29:0 /* RWXUF */
#define NV_PGRAPH_BLIMIT1_ADDRESSING                          30:30 /* RWIVF */
#define NV_PGRAPH_BLIMIT1_ADDRESSING_LINEAR              0x00000000 /* RWI-V */
#define NV_PGRAPH_BLIMIT1_ADDRESSING_TILED               0x00000001 /* RW--V */
#define NV_PGRAPH_BLIMIT1_TYPE                                31:31 /* RWIVF */
#define NV_PGRAPH_BLIMIT1_TYPE_IN_MEMORY                 0x00000000 /* RW--V */
#define NV_PGRAPH_BLIMIT1_TYPE_NULL                      0x00000001 /* RWI-V */
#define NV_PGRAPH_BLIMIT2                                0x0040086c /* RW-4R */
#define NV_PGRAPH_BLIMIT2__ALIAS_1              NV_PGRAPH_BLIMIT(2) /*       */
#define NV_PGRAPH_BLIMIT2_VALUE                                29:0 /* RWXUF */
#define NV_PGRAPH_BLIMIT2_ADDRESSING                          30:30 /* RWIVF */
#define NV_PGRAPH_BLIMIT2_ADDRESSING_LINEAR              0x00000000 /* RWI-V */
#define NV_PGRAPH_BLIMIT2_ADDRESSING_TILED               0x00000001 /* RW--V */
#define NV_PGRAPH_BLIMIT2_TYPE                                31:31 /* RWIVF */
#define NV_PGRAPH_BLIMIT2_TYPE_IN_MEMORY                 0x00000000 /* RW--V */
#define NV_PGRAPH_BLIMIT2_TYPE_NULL                      0x00000001 /* RWI-V */
#define NV_PGRAPH_BLIMIT3                                0x00400870 /* RW-4R */
#define NV_PGRAPH_BLIMIT3__ALIAS_1              NV_PGRAPH_BLIMIT(3) /*       */
#define NV_PGRAPH_BLIMIT3_VALUE                                29:0 /* RWXUF */
#define NV_PGRAPH_BLIMIT3_ADDRESSING                          30:30 /* RWIVF */
#define NV_PGRAPH_BLIMIT3_ADDRESSING_LINEAR              0x00000000 /* RWI-V */
#define NV_PGRAPH_BLIMIT3_ADDRESSING_TILED               0x00000001 /* RW--V */
#define NV_PGRAPH_BLIMIT3_TYPE                                31:31 /* RWIVF */
#define NV_PGRAPH_BLIMIT3_TYPE_IN_MEMORY                 0x00000000 /* RW--V */
#define NV_PGRAPH_BLIMIT3_TYPE_NULL                      0x00000001 /* RWI-V */
#define NV_PGRAPH_BLIMIT4                                0x00400874 /* RW-4R */
#define NV_PGRAPH_BLIMIT4__ALIAS_1              NV_PGRAPH_BLIMIT(4) /*       */
#define NV_PGRAPH_BLIMIT4_VALUE                                29:0 /* RWXUF */
#define NV_PGRAPH_BLIMIT4_ADDRESSING                          30:30 /* RWIVF */
#define NV_PGRAPH_BLIMIT4_ADDRESSING_LINEAR              0x00000000 /* RWI-V */
#define NV_PGRAPH_BLIMIT4_ADDRESSING_TILED               0x00000001 /* RW--V */
#define NV_PGRAPH_BLIMIT4_TYPE                                31:31 /* RWIVF */
#define NV_PGRAPH_BLIMIT4_TYPE_IN_MEMORY                 0x00000000 /* RW--V */
#define NV_PGRAPH_BLIMIT4_TYPE_NULL                      0x00000001 /* RWI-V */
#define NV_PGRAPH_BLIMIT5                                0x00400878 /* RW-4R */
#define NV_PGRAPH_BLIMIT5__ALIAS_1              NV_PGRAPH_BLIMIT(5) /*       */
#define NV_PGRAPH_BLIMIT5_VALUE                                29:0 /* RWXUF */
#define NV_PGRAPH_BLIMIT5_ADDRESSING                          30:30 /* RWIVF */
#define NV_PGRAPH_BLIMIT5_ADDRESSING_LINEAR              0x00000000 /* RWI-V */
#define NV_PGRAPH_BLIMIT5_ADDRESSING_TILED               0x00000001 /* RW--V */
#define NV_PGRAPH_BLIMIT5_TYPE                                31:31 /* RWIVF */
#define NV_PGRAPH_BLIMIT5_TYPE_IN_MEMORY                 0x00000000 /* RW--V */
#define NV_PGRAPH_BLIMIT5_TYPE_NULL                      0x00000001 /* RWI-V */
#define NV_PGRAPH_BSWIZZLE2                              0x00400818 /* RW-4R */
#define NV_PGRAPH_BSWIZZLE2_WIDTH                             19:16 /* RWIUF */
#define NV_PGRAPH_BSWIZZLE2_WIDTH_0                      0x00000000 /* RWI-V */
#define NV_PGRAPH_BSWIZZLE2_WIDTH_MAX                    0x0000000c /* RW--V */
#define NV_PGRAPH_BSWIZZLE2_WIDTH_056                    0x00000000 /* RWC-V */
#define NV_PGRAPH_BSWIZZLE2_WIDTH_096                    0x00000000 /* RWC-V */
#define NV_PGRAPH_BSWIZZLE2_WIDTH_097                    0x00000000 /* RWC-V */
#define NV_PGRAPH_BSWIZZLE2_HEIGHT                            27:24 /* RWIUF */
#define NV_PGRAPH_BSWIZZLE2_HEIGHT_0                     0x00000000 /* RWI-V */
#define NV_PGRAPH_BSWIZZLE2_HEIGHT_MAX                   0x0000000c /* RW--V */
#define NV_PGRAPH_BSWIZZLE2_HEIGHT_056                   0x00000000 /* RWC-V */
#define NV_PGRAPH_BSWIZZLE2_HEIGHT_096                   0x00000000 /* RWC-V */
#define NV_PGRAPH_BSWIZZLE2_HEIGHT_097                   0x00000000 /* RWC-V */
#define NV_PGRAPH_BSWIZZLE5                              0x0040081c /* RW-4R */
#define NV_PGRAPH_BSWIZZLE5_WIDTH                             19:16 /* RWIUF */
#define NV_PGRAPH_BSWIZZLE5_WIDTH_0                      0x00000000 /* RWI-V */
#define NV_PGRAPH_BSWIZZLE5_WIDTH_052                    0x00000000 /* RWC-V */
#define NV_PGRAPH_BSWIZZLE5_WIDTH_09E                    0x00000000 /* RWC-V */
#define NV_PGRAPH_BSWIZZLE5_HEIGHT                            27:24 /* RWIUF */
#define NV_PGRAPH_BSWIZZLE5_HEIGHT_0                     0x00000000 /* RWI-V */
#define NV_PGRAPH_BSWIZZLE5_HEIGHT_052                   0x00000000 /* RWC-V */
#define NV_PGRAPH_BSWIZZLE5_HEIGHT_09E                   0x00000000 /* RWC-V */
#define NV_PGRAPH_TILE(i)                       (0x00400900+(i)*16) /* RW-4A */
#define NV_PGRAPH_TILE__SIZE_1                                    8 /*       */
#define NV_PGRAPH_TILE_REGION                                   0:0 /* RWIVF */
#define NV_PGRAPH_TILE_REGION_INVALID                    0x00000000 /* RWI-V */
#define NV_PGRAPH_TILE_REGION_VALID                      0x00000001 /* RW--V */
#define NV_PGRAPH_TILE_BANK0_SENSE                              1:1 /* RWIVF */
#define NV_PGRAPH_TILE_BANK0_SENSE_0                     0x00000000 /* RWI-V */
#define NV_PGRAPH_TILE_BANK0_SENSE_1                     0x00000001 /* RW--V */
#define NV_PGRAPH_TILE_ADR                                    31:14 /* RW-UF */
#define NV_PGRAPH_TLIMIT(i)                     (0x00400904+(i)*16) /* RW-4A */
#define NV_PGRAPH_TLIMIT__SIZE_1                                  8 /*       */
#define NV_PGRAPH_TLIMIT_ADR                                  31:14 /* RW-UF */
#define NV_PGRAPH_TSIZE(i)                      (0x00400908+(i)*16) /* RW-4A */
#define NV_PGRAPH_TSIZE__SIZE_1                                   8 /*       */
#define NV_PGRAPH_TSIZE_PITCH                                  15:8 /* RW-UF */
#define NV_PGRAPH_TSTATUS(i)                    (0x0040090c+(i)*16) /* R--4A */
#define NV_PGRAPH_TSTATUS__SIZE_1                                 8 /*       */
#define NV_PGRAPH_TSTATUS_PRIME                                 1:0 /* R--VF */
#define NV_PGRAPH_TSTATUS_FACTOR                                6:4 /* R--VF */
#define NV_PGRAPH_TSTATUS_REGION                              31:31 /* R-I-F */
#define NV_PGRAPH_ZCOMP(i)                       (0x00400980+(i)*4) /* RW-4A */
#define NV_PGRAPH_ZCOMP__SIZE_1                                   8 /*       */
#define NV_PGRAPH_ZCOMP_OFFSET                           0x004009a0 /* RW-4R */
#define NV_PGRAPH_FBCFG0                                 0x004009a4 /* RW-4R */
#define NV_PGRAPH_FBCFG1                                 0x004009a8 /* RW-4R */
#define NV_PGRAPH_BPIXEL                                 0x00400724 /* RW-4R */
#define NV_PGRAPH_BPIXEL_DEPTH0                                 3:0 /* RWIVF */
#define NV_PGRAPH_BPIXEL_DEPTH0_INVALID                  0x00000000 /* RWI-V */
#define NV_PGRAPH_BPIXEL_DEPTH0_Y8                       0x00000001 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH0_X1R5G5B5_Z1R5G5B5        0x00000002 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH0_X1R5G5B5_O1R5G5B5        0x00000003 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH0_A1R5G5B5                 0x00000004 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH0_R5G6B5                   0x00000005 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH0_Y16                      0x00000006 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH0_X8R8G8B8_Z8R8G8B8        0x00000007 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH0_X8R8G8B8_O1Z7R8G8B8      0x00000008 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH0_X1A7R8G8B8_Z1A7R8G8B8    0x00000009 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH0_X1A7R8G8B8_O1A7R8G8B8    0x0000000a /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH0_X8R8G8B8_O8R8G8B8        0x0000000b /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH0_A8R8G8B8                 0x0000000c /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH0_Y32                      0x0000000d /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH0_V8YB8U8YA8               0x0000000e /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH0_YB8V8YA8U8               0x0000000f /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH0_042                      0x00000001 /* RWC-V */
#define NV_PGRAPH_BPIXEL_DEPTH0_058                      0x00000001 /* RWC-V */
#define NV_PGRAPH_BPIXEL_DEPTH0_062                      0x00000001 /* RWC-V */
#define NV_PGRAPH_BPIXEL_DEPTH1                                 7:4 /* RWIVF */
#define NV_PGRAPH_BPIXEL_DEPTH1_INVALID                  0x00000000 /* RWI-V */
#define NV_PGRAPH_BPIXEL_DEPTH1_Y8                       0x00000001 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH1_X1R5G5B5_Z1R5G5B5        0x00000002 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH1_X1R5G5B5_O1R5G5B5        0x00000003 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH1_A1R5G5B5                 0x00000004 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH1_R5G6B5                   0x00000005 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH1_Y16                      0x00000006 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH1_X8R8G8B8_Z8R8G8B8        0x00000007 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH1_X8R8G8B8_O1Z7R8G8B8      0x00000008 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH1_X1A7R8G8B8_Z1A7R8G8B8    0x00000009 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH1_X1A7R8G8B8_O1A7R8G8B8    0x0000000a /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH1_X8R8G8B8_O8R8G8B8        0x0000000b /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH1_A8R8G8B8                 0x0000000c /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH1_Y32                      0x0000000d /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH1_V8YB8U8YA8               0x0000000e /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH1_YB8V8YA8U8               0x0000000f /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH1_042                      0x00000001 /* RWC-V */
#define NV_PGRAPH_BPIXEL_DEPTH1_059                      0x00000001 /* RWC-V */
#define NV_PGRAPH_BPIXEL_DEPTH1_062                      0x00000001 /* RWC-V */
#define NV_PGRAPH_BPIXEL_DEPTH2                                11:8 /* RWIVF */
#define NV_PGRAPH_BPIXEL_DEPTH2_INVALID                  0x00000000 /* RWI-V */
#define NV_PGRAPH_BPIXEL_DEPTH2_Y8                       0x00000001 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH2_X1R5G5B5_Z1R5G5B5        0x00000002 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH2_X1R5G5B5_O1R5G5B5        0x00000003 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH2_A1R5G5B5                 0x00000004 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH2_R5G6B5                   0x00000005 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH2_Y16                      0x00000006 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH2_X8R8G8B8_Z8R8G8B8        0x00000007 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH2_X8R8G8B8_O1Z7R8G8B8      0x00000008 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH2_X1A7R8G8B8_Z1A7R8G8B8    0x00000009 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH2_X1A7R8G8B8_O1A7R8G8B8    0x0000000a /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH2_X8R8G8B8_O8R8G8B8        0x0000000b /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH2_A8R8G8B8                 0x0000000c /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH2_Y32                      0x0000000d /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH2_V8YB8U8YA8               0x0000000e /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH2_YB8V8YA8U8               0x0000000f /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH2_056                      0x00000002 /* RWC-V */
#define NV_PGRAPH_BPIXEL_DEPTH2_05A                      0x00000002 /* RWC-V */
#define NV_PGRAPH_BPIXEL_DEPTH2_096                      0x00000002 /* RWC-V */
#define NV_PGRAPH_BPIXEL_DEPTH2_097                      0x00000002 /* RWC-V */
#define NV_PGRAPH_BPIXEL_DEPTH3                               15:12 /* RWIVF */
#define NV_PGRAPH_BPIXEL_DEPTH3_INVALID                  0x00000000 /* RWI-V */
#define NV_PGRAPH_BPIXEL_DEPTH3_Z16                      0x00000001 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH3_Z24S8                    0x00000002 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH3_05B                      0x00000002 /* RWC-V */
#define NV_PGRAPH_BPIXEL_DEPTH3_097                      0x00000001 /* RWC-V */
#define NV_PGRAPH_BPIXEL_DEPTH4                               19:16 /* RWIVF */
#define NV_PGRAPH_BPIXEL_DEPTH4_INVALID                  0x00000000 /* RWI-V */
#define NV_PGRAPH_BPIXEL_DEPTH4_Y8                       0x00000001 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH4_X1R5G5B5_Z1R5G5B5        0x00000002 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH4_X1R5G5B5_O1R5G5B5        0x00000003 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH4_A1R5G5B5                 0x00000004 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH4_R5G6B5                   0x00000005 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH4_Y16                      0x00000006 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH4_X8R8G8B8_Z8R8G8B8        0x00000007 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH4_X8R8G8B8_O1Z7R8G8B8      0x00000008 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH4_X1A7R8G8B8_Z1A7R8G8B8    0x00000009 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH4_X1A7R8G8B8_O1A7R8G8B8    0x0000000a /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH4_X8R8G8B8_O8R8G8B8        0x0000000b /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH4_A8R8G8B8                 0x0000000c /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH4_Y32                      0x0000000d /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH4_V8YB8U8YA8               0x0000000e /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH4_YB8V8YA8U8               0x0000000f /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH5                               23:20 /* RWIVF */
#define NV_PGRAPH_BPIXEL_DEPTH5_INVALID                  0x00000000 /* RWI-V */
#define NV_PGRAPH_BPIXEL_DEPTH5_Y8                       0x00000001 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH5_X1R5G5B5_Z1R5G5B5        0x00000002 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH5_X1R5G5B5_O1R5G5B5        0x00000003 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH5_A1R5G5B5                 0x00000004 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH5_R5G6B5                   0x00000005 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH5_Y16                      0x00000006 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH5_X8R8G8B8_Z8R8G8B8        0x00000007 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH5_X8R8G8B8_O1Z7R8G8B8      0x00000008 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH5_X1A7R8G8B8_Z1A7R8G8B8    0x00000009 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH5_X1A7R8G8B8_O1A7R8G8B8    0x0000000a /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH5_X8R8G8B8_O8R8G8B8        0x0000000b /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH5_A8R8G8B8                 0x0000000c /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH5_Y32                      0x0000000d /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH5_V8YB8U8YA8               0x0000000e /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH5_YB8V8YA8U8               0x0000000f /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH5_052                      0x00000001 /* RWC-V */
#define NV_PGRAPH_BPIXEL_DEPTH5_09E                      0x00000001 /* RWC-V */
#define NV_PGRAPH_LIMIT_VIOL_PIX                         0x0040080c /* RW-4R */
#define NV_PGRAPH_LIMIT_VIOL_PIX_ADRS                          31:0 /* RWIVF */
#define NV_PGRAPH_LIMIT_VIOL_PIX_ADRS_0                  0x00000000 /* RWI-V */
#define NV_PGRAPH_LIMIT_VIOL_Z                           0x00400810 /* RW-4R */
#define NV_PGRAPH_LIMIT_VIOL_Z_ADRS                            31:0 /* RWIVF */
#define NV_PGRAPH_LIMIT_VIOL_Z_ADRS_0                    0x00000000 /* RWI-V */
#define NV_PGRAPH_LIMIT_VIOL_MODE                        0x00400800 /* RW-4R */
#define NV_PGRAPH_LIMIT_VIOL_MODE_DSTBPITCH                     0:0 /* RWIVF */
#define NV_PGRAPH_LIMIT_VIOL_MODE_DSTBPITCH_NO_VIOL      0x00000000 /* RWI-V */
#define NV_PGRAPH_LIMIT_VIOL_MODE_DSTBPITCH_VIOL         0x00000001 /* RW--V */
#define NV_PGRAPH_LIMIT_VIOL_MODE_DSTBLIMIT                     1:1 /* RWIVF */
#define NV_PGRAPH_LIMIT_VIOL_MODE_DSTBLIMIT_NO_VIOL      0x00000000 /* RWI-V */
#define NV_PGRAPH_LIMIT_VIOL_MODE_DSTBLIMIT_VIOL         0x00000001 /* RW--V */
#define NV_PGRAPH_LIMIT_VIOL_MODE_DSTOVRFLW                     2:2 /* RWIVF */
#define NV_PGRAPH_LIMIT_VIOL_MODE_DSTOVRFLW_NO_VIOL      0x00000000 /* RWI-V */
#define NV_PGRAPH_LIMIT_VIOL_MODE_DSTOVRFLW_VIOL         0x00000001 /* RW--V */
#define NV_PGRAPH_LIMIT_VIOL_MODE_DSTMEMSIZE                    3:3 /* RWIVF */
#define NV_PGRAPH_LIMIT_VIOL_MODE_DSTMEMSIZE_NO_VIOL     0x00000000 /* RWI-V */
#define NV_PGRAPH_LIMIT_VIOL_MODE_DSTMEMSIZE_VIOL        0x00000001 /* RW--V */
#define NV_PGRAPH_LIMIT_VIOL_MODE_DSTTILED                      4:4 /* RWIVF */
#define NV_PGRAPH_LIMIT_VIOL_MODE_DSTTILED_NO_VIOL       0x00000000 /* RWI-V */
#define NV_PGRAPH_LIMIT_VIOL_MODE_DSTTILED_VIOL          0x00000001 /* RW--V */                
#define NV_PGRAPH_LIMIT_VIOL_MODE_SRCBPITCH                     8:8 /* RWIVF */
#define NV_PGRAPH_LIMIT_VIOL_MODE_SRCBPITCH_NO_VIOL      0x00000000 /* RWI-V */
#define NV_PGRAPH_LIMIT_VIOL_MODE_SRCBPITCH_VIOL         0x00000001 /* RW--V */
#define NV_PGRAPH_LIMIT_VIOL_MODE_SRCBLIMIT                     9:9 /* RWIVF */
#define NV_PGRAPH_LIMIT_VIOL_MODE_SRCBLIMIT_NO_VIOL      0x00000000 /* RWI-V */
#define NV_PGRAPH_LIMIT_VIOL_MODE_SRCBLIMIT_VIOL         0x00000001 /* RW--V */
#define NV_PGRAPH_LIMIT_VIOL_MODE_SRCOVRFLW                   10:10 /* RWIVF */
#define NV_PGRAPH_LIMIT_VIOL_MODE_SRCOVRFLW_NO_VIOL      0x00000000 /* RWI-V */
#define NV_PGRAPH_LIMIT_VIOL_MODE_SRCOVRFLW_VIOL         0x00000001 /* RW--V */
#define NV_PGRAPH_LIMIT_VIOL_MODE_SRCMEMSIZE                  11:11 /* RWIVF */
#define NV_PGRAPH_LIMIT_VIOL_MODE_SRCMEMSIZE_NO_VIOL     0x00000000 /* RWI-V */
#define NV_PGRAPH_LIMIT_VIOL_MODE_SRCMEMSIZE_VIOL        0x00000001 /* RW--V */
#define NV_PGRAPH_LIMIT_VIOL_MODE_SRCTILED                    12:12 /* RWIVF */
#define NV_PGRAPH_LIMIT_VIOL_MODE_SRCTILED_NO_VIOL       0x00000000 /* RWI-V */
#define NV_PGRAPH_LIMIT_VIOL_MODE_SRCTILED_VIOL          0x00000001 /* RW--V */
#define NV_PGRAPH_LIMIT_VIOL_MODE_SWIZZLEX                    16:16 /* RWIVF */
#define NV_PGRAPH_LIMIT_VIOL_MODE_SWIZZLEX_NO_VIOL       0x00000000 /* RWI-V */
#define NV_PGRAPH_LIMIT_VIOL_MODE_SWIZZLEX_VIOL          0x00000001 /* RW--V */
#define NV_PGRAPH_LIMIT_VIOL_MODE_SWIZZLEY                    17:17 /* RWIVF */
#define NV_PGRAPH_LIMIT_VIOL_MODE_SWIZZLEY_NO_VIOL       0x00000000 /* RWI-V */
#define NV_PGRAPH_LIMIT_VIOL_MODE_SWIZZLEY_VIOL          0x00000001 /* RW--V */
#define NV_PGRAPH_LIMIT_VIOL_MODE_ZTILEMODE                   21:20 /* RWIVF */
#define NV_PGRAPH_LIMIT_VIOL_MODE_CTILEMODE                   23:22 /* RWIVF */
#define NV_PGRAPH_LIMIT_VIOL_MODE_ROPMODE                     31:24 /* RWIVF */
#define NV_PGRAPH_STATE                                  0x00400714 /* RW-4R */
#define NV_PGRAPH_STATE_BUFFER_0                                0:0 /* RWIVF */
#define NV_PGRAPH_STATE_BUFFER_0_INVALID                 0x00000000 /* RWI-V */
#define NV_PGRAPH_STATE_BUFFER_0_VALID                   0x00000001 /* RW--V */
#define NV_PGRAPH_STATE_BUFFER_0_042                     0x00000000 /* RWC-V */
#define NV_PGRAPH_STATE_BUFFER_0_058                     0x00000000 /* RWC-V */
#define NV_PGRAPH_STATE_BUFFER_0_062                     0x00000000 /* RWC-V */
#define NV_PGRAPH_STATE_BUFFER_1                                1:1 /* RWIVF */
#define NV_PGRAPH_STATE_BUFFER_1_INVALID                 0x00000000 /* RWI-V */
#define NV_PGRAPH_STATE_BUFFER_1_VALID                   0x00000001 /* RW--V */
#define NV_PGRAPH_STATE_BUFFER_1_042                     0x00000000 /* RWC-V */
#define NV_PGRAPH_STATE_BUFFER_1_059                     0x00000000 /* RWC-V */
#define NV_PGRAPH_STATE_BUFFER_1_062                     0x00000000 /* RWC-V */
#define NV_PGRAPH_STATE_BUFFER_2                                2:2 /* RWIVF */
#define NV_PGRAPH_STATE_BUFFER_2_INVALID                 0x00000000 /* RWI-V */
#define NV_PGRAPH_STATE_BUFFER_2_VALID                   0x00000001 /* RW--V */
#define NV_PGRAPH_STATE_BUFFER_2_056                     0x00000000 /* RWC-V */
#define NV_PGRAPH_STATE_BUFFER_2_05A                     0x00000000 /* RWC-V */
#define NV_PGRAPH_STATE_BUFFER_2_096                     0x00000000 /* RWC-V */
#define NV_PGRAPH_STATE_BUFFER_2_097                     0x00000000 /* RWC-V */
#define NV_PGRAPH_STATE_BUFFER_3                                3:3 /* RWIVF */
#define NV_PGRAPH_STATE_BUFFER_3_INVALID                 0x00000000 /* RWI-V */
#define NV_PGRAPH_STATE_BUFFER_3_VALID                   0x00000001 /* RW--V */
#define NV_PGRAPH_STATE_BUFFER_3_056                     0x00000000 /* RWC-V */
#define NV_PGRAPH_STATE_BUFFER_3_05B                     0x00000000 /* RWC-V */
#define NV_PGRAPH_STATE_BUFFER_3_096                     0x00000000 /* RWC-V */
#define NV_PGRAPH_STATE_BUFFER_3_097                     0x00000000 /* RWC-V */
#define NV_PGRAPH_STATE_BUFFER_4                                4:4 /* RWIVF */
#define NV_PGRAPH_STATE_BUFFER_4_INVALID                 0x00000000 /* RWI-V */
#define NV_PGRAPH_STATE_BUFFER_4_VALID                   0x00000001 /* RW--V */
#define NV_PGRAPH_STATE_BUFFER_4_038                     0x00000000 /* RWC-V */
#define NV_PGRAPH_STATE_BUFFER_4_088                     0x00000000 /* RWC-V */
#define NV_PGRAPH_STATE_BUFFER_5                                5:5 /* RWIVF */
#define NV_PGRAPH_STATE_BUFFER_5_INVALID                 0x00000000 /* RWI-V */
#define NV_PGRAPH_STATE_BUFFER_5_VALID                   0x00000001 /* RW--V */
#define NV_PGRAPH_STATE_BUFFER_5_052                     0x00000000 /* RWC-V */
#define NV_PGRAPH_STATE_BUFFER_5_09E                     0x00000000 /* RWC-V */
#define NV_PGRAPH_STATE_PITCH_0                                 8:8 /* RWIVF */
#define NV_PGRAPH_STATE_PITCH_0_INVALID                  0x00000000 /* RWI-V */
#define NV_PGRAPH_STATE_PITCH_0_VALID                    0x00000001 /* RW--V */
#define NV_PGRAPH_STATE_PITCH_0_042                      0x00000001 /* RWC-V */
#define NV_PGRAPH_STATE_PITCH_0_058                      0x00000001 /* RWC-V */
#define NV_PGRAPH_STATE_PITCH_0_062                      0x00000001 /* RWC-V */
#define NV_PGRAPH_STATE_PITCH_1                                 9:9 /* RWIVF */
#define NV_PGRAPH_STATE_PITCH_1_INVALID                  0x00000000 /* RWI-V */
#define NV_PGRAPH_STATE_PITCH_1_VALID                    0x00000001 /* RW--V */
#define NV_PGRAPH_STATE_PITCH_1_042                      0x00000001 /* RWC-V */
#define NV_PGRAPH_STATE_PITCH_1_059                      0x00000001 /* RWC-V */
#define NV_PGRAPH_STATE_PITCH_1_062                      0x00000001 /* RWC-V */
#define NV_PGRAPH_STATE_PITCH_2                               10:10 /* RWIVF */
#define NV_PGRAPH_STATE_PITCH_2_INVALID                  0x00000000 /* RWI-V */
#define NV_PGRAPH_STATE_PITCH_2_VALID                    0x00000001 /* RW--V */
#define NV_PGRAPH_STATE_PITCH_2_056                      0x00000001 /* RWC-V */
#define NV_PGRAPH_STATE_PITCH_2_05A                      0x00000001 /* RWC-V */
#define NV_PGRAPH_STATE_PITCH_2_096                      0x00000001 /* RWC-V */
#define NV_PGRAPH_STATE_PITCH_2_097                      0x00000001 /* RWC-V */
#define NV_PGRAPH_STATE_PITCH_3                               11:11 /* RWIVF */
#define NV_PGRAPH_STATE_PITCH_3_INVALID                  0x00000000 /* RWI-V */
#define NV_PGRAPH_STATE_PITCH_3_VALID                    0x00000001 /* RW--V */
#define NV_PGRAPH_STATE_PITCH_3_056                      0x00000001 /* RWC-V */
#define NV_PGRAPH_STATE_PITCH_3_05B                      0x00000001 /* RWC-V */
#define NV_PGRAPH_STATE_PITCH_3_096                      0x00000001 /* RWC-V */
#define NV_PGRAPH_STATE_PITCH_3_097                      0x00000001 /* RWC-V */
#define NV_PGRAPH_STATE_PITCH_4                               12:12 /* RWIVF */
#define NV_PGRAPH_STATE_PITCH_4_INVALID                  0x00000000 /* RWI-V */
#define NV_PGRAPH_STATE_PITCH_4_VALID                    0x00000001 /* RW--V */
#define NV_PGRAPH_STATE_CHROMA_COLOR                          16:16 /* RWIVF */
#define NV_PGRAPH_STATE_CHROMA_COLOR_INVALID             0x00000000 /* RWI-V */
#define NV_PGRAPH_STATE_CHROMA_COLOR_VALID               0x00000001 /* RW--V */
#define NV_PGRAPH_STATE_CHROMA_COLOR_057                 0x00000001 /* RWC-V */
#define NV_PGRAPH_STATE_CHROMA_COLORFMT                       17:17 /* RWIVF */
#define NV_PGRAPH_STATE_CHROMA_COLORFMT_INVALID          0x00000000 /* RWI-V */
#define NV_PGRAPH_STATE_CHROMA_COLORFMT_VALID            0x00000001 /* RW--V */
#define NV_PGRAPH_STATE_CHROMA_COLORFMT_017              0x00000001 /* RWC-V */
#define NV_PGRAPH_STATE_CPATTERN_COLORFMT                     20:20 /* RWIVF */
#define NV_PGRAPH_STATE_CPATTERN_COLORFMT_INVALID        0x00000000 /* RWI-V */
#define NV_PGRAPH_STATE_CPATTERN_COLORFMT_VALID          0x00000001 /* RW--V */
#define NV_PGRAPH_STATE_CPATTERN_COLORFMT_044            0x00000001 /* RWC-V */
#define NV_PGRAPH_STATE_CPATTERN_MONOFMT                      21:21 /* RWIVF */
#define NV_PGRAPH_STATE_CPATTERN_MONOFMT_INVALID         0x00000000 /* RWI-V */
#define NV_PGRAPH_STATE_CPATTERN_MONOFMT_VALID           0x00000001 /* RW--V */
#define NV_PGRAPH_STATE_CPATTERN_MONOFMT_044             0x00000001 /* RWC-V */
#define NV_PGRAPH_STATE_CPATTERN_SELECT                       22:22 /* RWIVF */
#define NV_PGRAPH_STATE_CPATTERN_SELECT_INVALID          0x00000000 /* RWI-V */
#define NV_PGRAPH_STATE_CPATTERN_SELECT_VALID            0x00000001 /* RW--V */
#define NV_PGRAPH_STATE_CPATTERN_SELECT_044              0x00000001 /* RWC-V */
#define NV_PGRAPH_STATE_PATTERN_COLOR0                        24:24 /* RWIVF */
#define NV_PGRAPH_STATE_PATTERN_COLOR0_INVALID           0x00000000 /* RWI-V */
#define NV_PGRAPH_STATE_PATTERN_COLOR0_VALID             0x00000001 /* RW--V */
#define NV_PGRAPH_STATE_PATTERN_COLOR0_018               0x00000001 /* RWC-V */
#define NV_PGRAPH_STATE_PATTERN_COLOR1                        25:25 /* RWIVF */
#define NV_PGRAPH_STATE_PATTERN_COLOR1_INVALID           0x00000000 /* RWI-V */
#define NV_PGRAPH_STATE_PATTERN_COLOR1_VALID             0x00000001 /* RW--V */
#define NV_PGRAPH_STATE_PATTERN_COLOR1_018               0x00000001 /* RWC-V */
#define NV_PGRAPH_STATE_PATTERN_PATT0                         26:26 /* RWIVF */
#define NV_PGRAPH_STATE_PATTERN_PATT0_INVALID            0x00000000 /* RWI-V */
#define NV_PGRAPH_STATE_PATTERN_PATT0_VALID              0x00000001 /* RW--V */
#define NV_PGRAPH_STATE_PATTERN_PATT0_018                0x00000001 /* RWC-V */
#define NV_PGRAPH_STATE_PATTERN_PATT1                         27:27 /* RWIVF */
#define NV_PGRAPH_STATE_PATTERN_PATT1_INVALID            0x00000000 /* RWI-V */
#define NV_PGRAPH_STATE_PATTERN_PATT1_VALID              0x00000001 /* RW--V */
#define NV_PGRAPH_STATE_PATTERN_PATT1_018                0x00000001 /* RWC-V */
#define NV_PGRAPH_CACHE_INDEX                            0x00400728 /* RW-4R */
#define NV_PGRAPH_CACHE_INDEX_ADRS                             11:2 /* RWIVF */
#define NV_PGRAPH_CACHE_INDEX_ADRS_TEXTURE_RAM_0         0x00000000 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_ADRS_TEXTURE_RAM_1K        0x00000400 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_ADRS_PALETTE_RAM_0         0x00000000 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_ADRS_PALETTE_RAM_512       0x00000200 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_ADRS_MISS_DATA_RAM_0       0x00000000 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_ADRS_MISS_DATA_RAM_32      0x00000020 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_ADRS_RLATENCY_RAM_0        0x00000000 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_ADRS_RLATENCY_RAM_384      0x00000180 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_ADRS_FLATENCY_RAM_0        0x00000000 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_ADRS_FLATENCY_RAM_448      0x000001C0 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_TEX_PIPE                        15:15 /* RWIVF */
#define NV_PGRAPH_CACHE_INDEX_TEX_PIPE_0                 0x00000000 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_TEX_PIPE_1                 0x00000001 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_OP                              19:16 /* RWIVF */
#define NV_PGRAPH_CACHE_INDEX_OP_NOP                     0x00000000 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_OP_TEXTURE_RAM             0x00000001 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_OP_PALETTE_RAM             0x00000002 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_OP_MISS_DATA_RAM           0x00000003 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_OP_RLATENCY_RAM            0x00000004 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_OP_FLATENCY_RAM            0x00000005 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_RDSEL                           29:24 /* RWIVF */
#define NV_PGRAPH_CACHE_INDEX_RDSEL_NOP                  0x00000000 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_RDSEL_INDEX_REG            0x00000001 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_RDSEL_TIME_CNT             0x00000020 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_RDSEL_CACHE_IDLE_CNT       0x00000021 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_RDSEL_TP0_PIX_CNT          0x00000022 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_RDSEL_TP0_MISS_CNT         0x00000023 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_RDSEL_TP0_COAL_STALL_CNT   0x00000024 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_RDSEL_TP0_REPL_STALL_CNT   0x00000025 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_RDSEL_TP0_MP_Q_STALL_CNT   0x00000026 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_RDSEL_TP0_TEX2MA_STALL_CNT 0x00000027 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_RDSEL_LIT2TEX_STALL_CNT    0x00000028 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_RDSEL_RBFR_FULL_STALL_CNT  0x00000029 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_RDSEL_TP1_PIX_CNT          0x0000002A /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_RDSEL_TP1_MISS_CNT         0x0000002B /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_RDSEL_TP1_COAL_STALL_CNT   0x0000002C /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_RDSEL_TP1_REPL_STALL_CNT   0x0000002D /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_RDSEL_TP1_MP_Q_STALL_CNT   0x0000002E /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_RDSEL_TP1_TEX2MA_STALL_CNT 0x0000002F /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_RDSEL_TEX2LIT_REGLD_CNT    0x00000030 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_RDSEL_C2DMA_TAKEN_CNT      0x00000031 /* RW--V */
#define NV_PGRAPH_CACHE_RAM                              0x0040072c /* RW-4R */
#define NV_PGRAPH_CACHE_RAM_VALUE                              31:0 /* RWXVF */
#define NV_PGRAPH_DMA_PITCH                              0x00400770 /* RW-4R */
#define NV_PGRAPH_DMA_PITCH_S0                                 15:0 /* RWXSF */
#define NV_PGRAPH_DMA_PITCH_S1                                31:16 /* RWXSF */
#define NV_PGRAPH_DVD_COLORFMT                           0x00400774 /* RW-4R */
#define NV_PGRAPH_DVD_COLORFMT_IMAGE                            5:0 /* RWNVF */
#define NV_PGRAPH_DVD_COLORFMT_IMAGE_FORMAT_INVALID            0x00 /* RWN-V */
#define NV_PGRAPH_DVD_COLORFMT_IMAGE_FORMAT_LE_V8YB8U8YA8      0x12 /* RW--V */
#define NV_PGRAPH_DVD_COLORFMT_IMAGE_FORMAT_LE_YB8V8YA8U8      0x13 /* RW--V */
#define NV_PGRAPH_DVD_COLORFMT_OVLY                             9:8 /* RWNVF */
#define NV_PGRAPH_DVD_COLORFMT_OVLY_FORMAT_INVALID             0x00 /* RWN-V */
#define NV_PGRAPH_DVD_COLORFMT_OVLY_FORMAT_LE_A8CR8CB8Y8       0x01 /* RW--V */
#define NV_PGRAPH_DVD_COLORFMT_OVLY_FORMAT_LE_A4CR6YB6A4CB6YA6 0x02 /* RW--V */
#define NV_PGRAPH_DVD_COLORFMT_OVLY_FORMAT_TRANSPARENT         0x03 /* RW--V */
#define NV_PGRAPH_SCALED_FORMAT                          0x00400778 /* RW-4R */
#define NV_PGRAPH_SCALED_FORMAT_ORIGIN                        17:16 /* RWIVF */
#define NV_PGRAPH_SCALED_FORMAT_ORIGIN_INVALID           0x00000000 /* RWI-V */
#define NV_PGRAPH_SCALED_FORMAT_ORIGIN_CENTER            0x00000001 /* RW--V */
#define NV_PGRAPH_SCALED_FORMAT_ORIGIN_CORNER            0x00000002 /* RW--V */
#define NV_PGRAPH_SCALED_FORMAT_INTERPOLATOR                  24:24 /* RWIVF */
#define NV_PGRAPH_SCALED_FORMAT_INTERPOLATOR_ZOH         0x00000000 /* RWI-V */
#define NV_PGRAPH_SCALED_FORMAT_INTERPOLATOR_FOH         0x00000001 /* RW--V */
#define NV_PGRAPH_STATE3D                                0x0040077C /* RW-4R */
#define NV_PGRAPH_STATE3D_CELSIUS_TAG_ID                       15:0 /* RWIVF */
#define NV_PGRAPH_STATE3D_CELSIUS_TAG_ID_0               0x00000000 /* RWI-V */
#define NV_PGRAPH_STATE3D_CHANNEL_ID                          20:16 /* RWIVF */
#define NV_PGRAPH_STATE3D_CHANNEL_ID_0                   0x00000000 /* RWI-V */
#define NV_PGRAPH_STATE3D_CELSIUS_TAG_VALID                   24:24 /* RWIVF */
#define NV_PGRAPH_STATE3D_CELSIUS_TAG_VALID_FALSE        0x00000000 /* RWI-V */
#define NV_PGRAPH_STATE3D_CELSIUS_TAG_VALID_TRUE         0x00000001 /* RW--V */
#define NV_PGRAPH_STATE3D_CHANNEL_VALID                       25:25 /* RWIVF */
#define NV_PGRAPH_STATE3D_CHANNEL_VALID_FALSE            0x00000000 /* RWI-V */
#define NV_PGRAPH_STATE3D_CHANNEL_VALID_TRUE             0x00000001 /* RW--V */
#define NV_PGRAPH_CHANNEL_CTX_TABLE                      0x00400780 /* RW-4R */
#define NV_PGRAPH_CHANNEL_CTX_TABLE_INST                       15:0 /* RWIVF */
#define NV_PGRAPH_CHANNEL_CTX_TABLE_INST_0               0x00000000 /* RWI-V */
#define NV_PGRAPH_CHANNEL_CTX_POINTER                    0x00400784 /* RW-4R */
#define NV_PGRAPH_CHANNEL_CTX_POINTER_INST                     15:0 /* RWIVF */
#define NV_PGRAPH_CHANNEL_CTX_POINTER_INST_0             0x00000000 /* RWI-V */
#define NV_PGRAPH_CHANNEL_CTX_TRIGGER                    0x00400788 /* RW-4R */
#define NV_PGRAPH_CHANNEL_CTX_TRIGGER_READ_IN                   0:0 /* CWIVF */
#define NV_PGRAPH_CHANNEL_CTX_TRIGGER_READ_IN_IGNORE     0x00000000 /* CWI-V */
#define NV_PGRAPH_CHANNEL_CTX_TRIGGER_READ_IN_ACTIVATE   0x00000001 /* -W--T */
#define NV_PGRAPH_CHANNEL_CTX_TRIGGER_WRITE_OUT                 1:1 /* CWIVF */
#define NV_PGRAPH_CHANNEL_CTX_TRIGGER_WRITE_OUT_IGNORE   0x00000000 /* CWI-V */
#define NV_PGRAPH_CHANNEL_CTX_TRIGGER_WRITE_OUT_ACTIVATE 0x00000001 /* -W--T */
#define NV_PGRAPH_RDI_INDEX                              0x00400750 /* RW-4R */
#define NV_PGRAPH_RDI_INDEX_ADDRESS                            12:2 /* RWXVF */
#define NV_PGRAPH_RDI_INDEX_ADDRESS_0                    0x00000000 /* RW--V */
#define NV_PGRAPH_RDI_INDEX_SELECT                            24:16 /* RWXVF */
#define NV_PGRAPH_RDI_INDEX_SELECT_0                     0x00000000 /* RW--V */
#define NV_PGRAPH_RDI_DATA                               0x00400754 /* RW-4R */
#define NV_PGRAPH_RDI_DATA_VALUE                               31:0 /* RWXVF */
#define NV_PGRAPH_RDI_DEBUG_DATA                         0x00400758 /* RW-4R */
#define NV_PGRAPH_RDI_DEBUG_DATA_VALUE                         31:0 /* RWXVF */
#define NV_PGRAPH_PATT_COLOR0                            0x00400b10 /* RW-4R */
#define NV_PGRAPH_PATT_COLOR0_VALUE                            31:0 /* RWXUF */
#define NV_PGRAPH_PATT_COLOR0_VALUE_018                  0x00000000 /* RWC-V */
#define NV_PGRAPH_PATT_COLOR0_VALUE_044                  0x00000000 /* RWC-V */
#define NV_PGRAPH_PATT_COLOR1                            0x00400b14 /* RW-4R */
#define NV_PGRAPH_PATT_COLOR1_VALUE                            31:0 /* RWXUF */
#define NV_PGRAPH_PATT_COLOR1_VALUE_018                  0x00000000 /* RWC-V */
#define NV_PGRAPH_PATT_COLOR1_VALUE_044                  0x00000000 /* RWC-V */
#define NV_PGRAPH_PATT_COLORRAM(i)               (0x00400a00+(i)*4) /* RW-4A */
#define NV_PGRAPH_PATT_COLORRAM__SIZE_1                          64 /*       */
#define NV_PGRAPH_PATT_COLORRAM_VALUE                          23:0 /* RWXUF */
#define NV_PGRAPH_PATT_COLORRAM_VALUE_044                0x00000000 /* RWC-V */
#define NV_PGRAPH_PATTERN(i)                     (0x00400b18+(i)*4) /* RW-4A */
#define NV_PGRAPH_PATTERN__SIZE_1                                 2 /*       */
#define NV_PGRAPH_PATTERN_BITMAP                               31:0 /* RWXVF */
#define NV_PGRAPH_PATTERN_BITMAP_018                     0x00000000 /* RWC-V */
#define NV_PGRAPH_PATTERN_BITMAP_044                     0x00000000 /* RWC-V */
#define NV_PGRAPH_PATTERN_SHAPE                          0x00400b20 /* RW-4R */
#define NV_PGRAPH_PATTERN_SHAPE_VALUE                           1:0 /* RWXVF */
#define NV_PGRAPH_PATTERN_SHAPE_VALUE_8X_8Y              0x00000000 /* RW--V */
#define NV_PGRAPH_PATTERN_SHAPE_VALUE_64X_1Y             0x00000001 /* RW--V */
#define NV_PGRAPH_PATTERN_SHAPE_VALUE_1X_64Y             0x00000002 /* RW--V */
#define NV_PGRAPH_PATTERN_SHAPE_VALUE_018                0x00000000 /* RWC-V */
#define NV_PGRAPH_PATTERN_SHAPE_VALUE_044                0x00000000 /* RWC-V */
#define NV_PGRAPH_PATTERN_SHAPE_SELECT                          4:4 /* RWXVF */
#define NV_PGRAPH_PATTERN_SHAPE_SELECT_2COLOR            0x00000000 /* RW--V */
#define NV_PGRAPH_PATTERN_SHAPE_SELECT_FULLCOLOR         0x00000001 /* RW--V */
#define NV_PGRAPH_PATTERN_SHAPE_SELECT_044               0x00000000 /* RWC-V */
#define NV_PGRAPH_MONO_COLOR0                            0x00400814 /* RW-4R */
#define NV_PGRAPH_MONO_COLOR0_VALUE                            31:0 /* RWXUF */
#define NV_PGRAPH_ROP3                                   0x00400b00 /* RW-4R */
#define NV_PGRAPH_ROP3_VALUE                                    7:0 /* RWXVF */
#define NV_PGRAPH_ROP3_VALUE_043                         0x00000000 /* RWC-V */
#define NV_PGRAPH_CHROMA                                 0x0040087c /* RW-4R */
#define NV_PGRAPH_CHROMA_VALUE                                 31:0 /* RWXUF */
#define NV_PGRAPH_CHROMA_VALUE_017                       0x00000000 /* RWC-V */
#define NV_PGRAPH_CHROMA_VALUE_057                       0x00000000 /* RWC-V */
#define NV_PGRAPH_BETA_AND                               0x00400b04 /* RW-4R */
#define NV_PGRAPH_BETA_AND_VALUE_FRACTION                     30:23 /* RWXUF */
#define NV_PGRAPH_BETA_AND_VALUE_FRACTION_012            0x00000000 /* RWC-V */
#define NV_PGRAPH_BETA_PREMULT                           0x00400b08 /* RW-4R */
#define NV_PGRAPH_BETA_PREMULT_VALUE                           31:0 /* RWXUF */
#define NV_PGRAPH_BETA_PREMULT_VALUE_072                 0x00000000 /* RWC-V */
#define NV_PGRAPH_STORED_FMT                             0x00400b0c /* RW-4R */
#define NV_PGRAPH_STORED_FMT_MONO0                              5:0 /* RWXVF */
#define NV_PGRAPH_STORED_FMT_MONO0_04A                   0x0000000C /* RWC-V */
#define NV_PGRAPH_STORED_FMT_PATT0                             13:8 /* RWXVF */
#define NV_PGRAPH_STORED_FMT_PATT0_044                   0x0000000B /* RWC-V */
#define NV_PGRAPH_STORED_FMT_PATT1                            21:16 /* RWXVF */
#define NV_PGRAPH_STORED_FMT_PATT1_044                   0x0000000B /* RWC-V */
#define NV_PGRAPH_STORED_FMT_CHROMA                           29:24 /* RWXVF */
#define NV_PGRAPH_STORED_FMT_CHROMA_057                  0x0000000B /* RWC-V */
#define NV_PGRAPH_PREROP_TILEBIT                         0x00400888 /* RW-4R */
#define NV_PGRAPH_PREROP_TILEBIT_BUF0                           0:0 /* RWXVF */
#define NV_PGRAPH_PREROP_TILEBIT_BUF0_LINEAR             0x00000000 /* RWI-V */
#define NV_PGRAPH_PREROP_TILEBIT_BUF0_TILED              0x00000001 /* RW--V */
#define NV_PGRAPH_PREROP_TILEBIT_BUF1                           1:1 /* RWXVF */
#define NV_PGRAPH_PREROP_TILEBIT_BUF1_LINEAR             0x00000000 /* RWI-V */
#define NV_PGRAPH_PREROP_TILEBIT_BUF1_TILED              0x00000001 /* RW--V */
#define NV_PGRAPH_PREROP_TILEBIT_BUF2                           2:2 /* RWXVF */
#define NV_PGRAPH_PREROP_TILEBIT_BUF2_LINEAR             0x00000000 /* RWI-V */
#define NV_PGRAPH_PREROP_TILEBIT_BUF2_TILED              0x00000001 /* RW--V */
#define NV_PGRAPH_PREROP_TILEBIT_BUF3                           3:3 /* RWXVF */
#define NV_PGRAPH_PREROP_TILEBIT_BUF3_LINEAR             0x00000000 /* RWI-V */
#define NV_PGRAPH_PREROP_TILEBIT_BUF3_TILED              0x00000001 /* RW--V */
#define NV_PGRAPH_PREROP_TILEBIT_BUF4                           4:4 /* RWXVF */
#define NV_PGRAPH_PREROP_TILEBIT_BUF4_LINEAR             0x00000000 /* RWI-V */
#define NV_PGRAPH_PREROP_TILEBIT_BUF4_TILED              0x00000001 /* RW--V */
#define NV_PGRAPH_PREROP_TILEBIT_BUF5                           5:5 /* RWXVF */
#define NV_PGRAPH_PREROP_TILEBIT_BUF5_LINEAR             0x00000000 /* RWI-V */
#define NV_PGRAPH_PREROP_TILEBIT_BUF5_TILED              0x00000001 /* RW--V */
#define NV_PGRAPH_FORMATS                                0x00400804 /* R--4R */
#define NV_PGRAPH_FORMATS_ROP                                   2:0 /* R-XVF */
#define NV_PGRAPH_FORMATS_ROP_Y8                         0x00000000 /* R---V */
#define NV_PGRAPH_FORMATS_ROP_RGB15                      0x00000001 /* R---V */
#define NV_PGRAPH_FORMATS_ROP_RGB16                      0x00000002 /* R---V */
#define NV_PGRAPH_FORMATS_ROP_Y16                        0x00000003 /* R---V */
#define NV_PGRAPH_FORMATS_ROP_RGB24                      0x00000005 /* R---V */
#define NV_PGRAPH_FORMATS_ROP_Y32                        0x00000007 /* R---V */
#define NV_PGRAPH_FORMATS_SRC                                   9:4 /* R-XVF */
#define NV_PGRAPH_FORMATS_SRC_INVALID                    0x00000000 /* R---V */
#define NV_PGRAPH_FORMATS_SRC_LE_Y8                      0x00000001 /* R---V */
#define NV_PGRAPH_FORMATS_SRC_LE_X16A8Y8                 0x00000002 /* R---V */
#define NV_PGRAPH_FORMATS_SRC_LE_X24Y8                   0x00000003 /* R---V */
#define NV_PGRAPH_FORMATS_SRC_LE_A1R5G5B5                0x00000006 /* R---V */
#define NV_PGRAPH_FORMATS_SRC_LE_X1R5G5B5                0x00000007 /* R---V */
#define NV_PGRAPH_FORMATS_SRC_LE_X16A1R5G5B5             0x00000008 /* R---V */
#define NV_PGRAPH_FORMATS_SRC_LE_X17R5G5B5               0x00000009 /* R---V */
#define NV_PGRAPH_FORMATS_SRC_LE_R5G6B5                  0x0000000A /* R---V */
#define NV_PGRAPH_FORMATS_SRC_LE_A16R5G6B5               0x0000000B /* R---V */
#define NV_PGRAPH_FORMATS_SRC_LE_X16R5G6B5               0x0000000C /* R---V */
#define NV_PGRAPH_FORMATS_SRC_LE_A8R8G8B8                0x0000000D /* R---V */
#define NV_PGRAPH_FORMATS_SRC_LE_X8R8G8B8                0x0000000E /* R---V */
#define NV_PGRAPH_FORMATS_SRC_LE_Y16                     0x0000000F /* R---V */
#define NV_PGRAPH_FORMATS_SRC_LE_A16Y16                  0x00000010 /* R---V */
#define NV_PGRAPH_FORMATS_SRC_LE_X16Y16                  0x00000011 /* R---V */
#define NV_PGRAPH_FORMATS_SRC_LE_V8YB8U8YA8              0x00000012 /* R---V */
#define NV_PGRAPH_FORMATS_SRC_LE_YB8V8YA8U8              0x00000013 /* R---V */
#define NV_PGRAPH_FORMATS_SRC_LE_Y32                     0x00000014 /* R---V */
#define NV_PGRAPH_FORMATS_SRC_LE_AY8                     0x00000015 /* R---V */
#define NV_PGRAPH_FORMATS_SRC_LE_EYB8ECR8EYA8ECB8        0x00000016 /* R---V */
#define NV_PGRAPH_FORMATS_SRC_LE_ECR8EYB8ECB8EYA8        0x00000017 /* R---V */
#define NV_PGRAPH_FORMATS_FB                                  15:12 /* R-XVF */
#define NV_PGRAPH_FORMATS_FB_INVALID                     0x00000000 /* R---V */
#define NV_PGRAPH_FORMATS_FB_Y8                          0x00000001 /* R---V */
#define NV_PGRAPH_FORMATS_FB_X1R5G5B5_Z1R5G5B5           0x00000002 /* R---V */
#define NV_PGRAPH_FORMATS_FB_X1R5G5B5_O1R5G5B5           0x00000003 /* R---V */
#define NV_PGRAPH_FORMATS_FB_A1R5G5B5                    0x00000004 /* R---V */
#define NV_PGRAPH_FORMATS_FB_R5G6B5                      0x00000005 /* R---V */
#define NV_PGRAPH_FORMATS_FB_Y16                         0x00000006 /* R---V */
#define NV_PGRAPH_FORMATS_FB_X8R8G8B8_Z8R8G8B8           0x00000007 /* R---V */
#define NV_PGRAPH_FORMATS_FB_X8R8G8B8_O1Z7R8G8B8         0x00000008 /* R---V */
#define NV_PGRAPH_FORMATS_FB_X1A7R8G8B8_Z1A7R8G8B8       0x00000009 /* R---V */
#define NV_PGRAPH_FORMATS_FB_X1A7R8G8B8_O1A7R8G8B8       0x0000000a /* R---V */
#define NV_PGRAPH_FORMATS_FB_X8R8G8B8_O8R8G8B8           0x0000000b /* R---V */
#define NV_PGRAPH_FORMATS_FB_A8R8G8B8                    0x0000000c /* R---V */
#define NV_PGRAPH_FORMATS_FB_Y32                         0x0000000d /* R---V */
#define NV_PGRAPH_FORMATS_FB_V8YB8U8YA8                  0x0000000e /* R---V */
#define NV_PGRAPH_FORMATS_FB_YB8V8YA8U8                  0x0000000f /* R---V */
#define NV_PGRAPH_FORMATS_ZB                                  19:18 /* R-XVF */
#define NV_PGRAPH_FORMATS_ZB_INVALID                     0x00000000 /* R---V */
#define NV_PGRAPH_FORMATS_ZB_Z16                         0x00000001 /* R---V */
#define NV_PGRAPH_FORMATS_ZB_Z24S8                       0x00000002 /* R---V */
#define NV_PGRAPH_ROPMODE                                0x00400808 /* R--4R */
#define NV_PGRAPH_ROPMODE_CBYTES                                1:0 /* R-XVF */
#define NV_PGRAPH_ROPMODE_CBYTES_1                       0x00000000 /* R---V */
#define NV_PGRAPH_ROPMODE_CBYTES_2                       0x00000001 /* R---V */
#define NV_PGRAPH_ROPMODE_CBYTES_4                       0x00000002 /* R---V */
#define NV_PGRAPH_ROPMODE_ZBYTES                                3:2 /* R-XVF */
#define NV_PGRAPH_ROPMODE_ZBYTES_1                       0x00000000 /* R---V */
#define NV_PGRAPH_ROPMODE_ZBYTES_2                       0x00000001 /* R---V */
#define NV_PGRAPH_ROPMODE_ZBYTES_4                       0x00000002 /* R---V */
#define NV_PGRAPH_ROPMODE_SWIZZLE                               4:4 /* R-XVF */
#define NV_PGRAPH_ROPMODE_SWIZZLE_DISABLE                0x00000000 /* R---V */
#define NV_PGRAPH_ROPMODE_SWIZZLE_ENABLE                 0x00000001 /* R---V */
#define NV_PGRAPH_ROPMODE_PSEUDO                                5:5 /* R-XVF */
#define NV_PGRAPH_ROPMODE_PSEUDO_DISABLE                 0x00000000 /* R---V */
#define NV_PGRAPH_ROPMODE_PSEUDO_ENABLE                  0x00000001 /* R---V */
#define NV_PGRAPH_ROPMODE_TYPE                                  7:6 /* R-XVF */
#define NV_PGRAPH_ROPMODE_TYPE_3D                        0x00000000 /* R---V */
#define NV_PGRAPH_ROPMODE_TYPE_CLEAR                     0x00000001 /* R---V */
#define NV_PGRAPH_ROPMODE_TYPE_2D                        0x00000002 /* R---V */
#define NV_PGRAPH_ROPMODE_TYPE_BLT                       0x00000003 /* R---V */
#define NV_PGRAPH_ROPMODE_BUS                                   7:0 /* R-XVF */
#define NV_PGRAPH_ROPMODE_BUS_Z32_C32                    0x0000000A /* R---V */
#define NV_PGRAPH_ROPMODE_BUS_Z32_CPSEUDO32              0x0000002A /* R---V */
#define NV_PGRAPH_ROPMODE_BUS_Z32_C16                    0x00000009 /* R---V */
#define NV_PGRAPH_ROPMODE_BUS_Z32_C32_SWIZZLE            0x0000001A /* R---V */
#define NV_PGRAPH_ROPMODE_BUS_Z16_C32                    0x00000006 /* R---V */
#define NV_PGRAPH_ROPMODE_BUS_Z16_CPSEUDO32              0x00000026 /* R---V */
#define NV_PGRAPH_ROPMODE_BUS_Z16_C16                    0x00000005 /* R---V */
#define NV_PGRAPH_ROPMODE_BUS_Z16_CPSEUDO32_SWIZZLE      0x00000036 /* R---V */
#define NV_PGRAPH_ROPMODE_BUS_Z16_C16_SWIZZLE            0x00000015 /* R---V */
#define NV_PGRAPH_ROPMODE_BUS_ZNULL_C8                   0x00000000 /* R---V */
#define NV_PGRAPH_ROPMODE_BUS_ZNULL_C8_SWIZZLE           0x00000010 /* R---V */
#define NV_PGRAPH_ROPMODE_BUS_2D32                       0x0000008A /* R---V */
#define NV_PGRAPH_ROPMODE_BUS_2DPSEUDO32                 0x000000A6 /* R---V */
#define NV_PGRAPH_ROPMODE_BUS_2D16                       0x00000085 /* R---V */
#define NV_PGRAPH_ROPMODE_BUS_2D8                        0x00000080 /* R---V */
#define NV_PGRAPH_ROPMODE_BUS_2D32_SWIZZLE               0x0000009A /* R---V */
#define NV_PGRAPH_ROPMODE_BUS_2DPSEUDO32_SWIZZLE         0x000000B6 /* R---V */
#define NV_PGRAPH_ROPMODE_BUS_2D16_SWIZZLE               0x00000095 /* R---V */
#define NV_PGRAPH_ROPMODE_BUS_2D8_SWIZZLE                0x00000090 /* R---V */
#define NV_PGRAPH_ROPMODE_BUS_CLEAR32                    0x0000004A /* R---V */
#define NV_PGRAPH_ROPMODE_BUS_CLEAR16                    0x00000045 /* R---V */
#define NV_PGRAPH_ROPMODE_BUS_BLT32                      0x000000CA /* R---V */
#define NV_PGRAPH_ROPMODE_BUS_BLT16                      0x000000C5 /* R---V */
#define NV_PGRAPH_ROPMODE_BUS_BLT8                       0x000000C0 /* R---V */
#define NV_PGRAPH_ROPMODE_ZTILEMODE                             9:8 /* R-XVF */
#define NV_PGRAPH_ROPMODE_ZTILEMODE_NULL                 0x00000000 /* R---V */
#define NV_PGRAPH_ROPMODE_ZTILEMODE_LINEAR               0x00000001 /* R---V */
#define NV_PGRAPH_ROPMODE_ZTILEMODE_TILED                0x00000002 /* R---V */
#define NV_PGRAPH_ROPMODE_CTILEMODE                           11:10 /* R-XVF */
#define NV_PGRAPH_ROPMODE_CTILEMODE_NULL                 0x00000000 /* R---V */
#define NV_PGRAPH_ROPMODE_CTILEMODE_LINEAR               0x00000001 /* R---V */
#define NV_PGRAPH_ROPMODE_CTILEMODE_TILED                0x00000002 /* R---V */
#define NV_PGRAPH_PROPSTATE                              0x00400884 /* R--4R */
#define NV_PGRAPH_PROPSTATE_VALUE                              31:0 /* R-XVF */
#define NV_PGRAPH_ABS_X_RAM(i)                   (0x00400400+(i)*4) /* RW-4A */
#define NV_PGRAPH_ABS_X_RAM__SIZE_1                              10 /*       */
#define NV_PGRAPH_ABS_X_RAM_VALUE                              31:0 /* RWXUF */
#define NV_PGRAPH_X_RAM_BPORT(i)                 (0x00400c00+(i)*4) /* R--4A */
#define NV_PGRAPH_X_RAM_BPORT__SIZE_1                            10 /*       */
#define NV_PGRAPH_X_RAM_BPORT_VALUE                            31:0 /* R--UF */
#define NV_PGRAPH_ABS_Y_RAM(i)                   (0x00400480+(i)*4) /* RW-4A */
#define NV_PGRAPH_ABS_Y_RAM__SIZE_1                              10 /*       */
#define NV_PGRAPH_ABS_Y_RAM_VALUE                              31:0 /* RWXUF */
#define NV_PGRAPH_Y_RAM_BPORT(i)                 (0x00400c80+(i)*4) /* R--4A */
#define NV_PGRAPH_Y_RAM_BPORT__SIZE_1                            10 /*       */
#define NV_PGRAPH_Y_RAM_BPORT_VALUE                            31:0 /* R--UF */
#define NV_PGRAPH_XY_LOGIC_MISC0                         0x00400514 /* RW-4R */
#define NV_PGRAPH_XY_LOGIC_MISC0_COUNTER                       17:0 /* RWBUF */
#define NV_PGRAPH_XY_LOGIC_MISC0_COUNTER_0               0x00000000 /* RWB-V */
#define NV_PGRAPH_XY_LOGIC_MISC0_DIMENSION                    20:20 /* RWVVF */
#define NV_PGRAPH_XY_LOGIC_MISC0_DIMENSION_NONZERO       0x00000000 /* RWV-V */
#define NV_PGRAPH_XY_LOGIC_MISC0_DIMENSION_ZERO          0x00000001 /* RW--V */
#define NV_PGRAPH_XY_LOGIC_MISC0_IMAGE_DATA_64                24:24 /* RWVVF */
#define NV_PGRAPH_XY_LOGIC_MISC0_IMAGE_DATA_64_FALSE     0x00000000 /* RWV-V */
#define NV_PGRAPH_XY_LOGIC_MISC0_IMAGE_DATA_64_TRUE      0x00000001 /* RW--V */
#define NV_PGRAPH_XY_LOGIC_MISC0_INDEX                        31:28 /* RWBUF */
#define NV_PGRAPH_XY_LOGIC_MISC0_INDEX_0                 0x00000000 /* RWB-V */
#define NV_PGRAPH_XY_LOGIC_MISC1                         0x00400518 /* RW-4R */
#define NV_PGRAPH_XY_LOGIC_MISC1_INITIAL                        0:0 /* RWNVF */
#define NV_PGRAPH_XY_LOGIC_MISC1_INITIAL_NEEDED          0x00000000 /* RWN-V */
#define NV_PGRAPH_XY_LOGIC_MISC1_INITIAL_DONE            0x00000001 /* RW--V */
#define NV_PGRAPH_XY_LOGIC_MISC1_XTRACLIPX                      4:4 /* RWIVF */
#define NV_PGRAPH_XY_LOGIC_MISC1_XTRACLIPX_NOTNULL       0x00000000 /* RWI-V */
#define NV_PGRAPH_XY_LOGIC_MISC1_XTRACLIPX_NULL          0x00000001 /* RW--V */
#define NV_PGRAPH_XY_LOGIC_MISC1_XTRACLIPY                      5:5 /* RWIVF */
#define NV_PGRAPH_XY_LOGIC_MISC1_XTRACLIPY_NOTNULL       0x00000000 /* RWI-V */
#define NV_PGRAPH_XY_LOGIC_MISC1_XTRACLIPY_NULL          0x00000001 /* RW--V */
#define NV_PGRAPH_XY_LOGIC_MISC1_SEL_XIMAX                    12:12 /* RWIVF */
#define NV_PGRAPH_XY_LOGIC_MISC1_SEL_XIMAX_UUMAX         0x00000000 /* RWI-V */
#define NV_PGRAPH_XY_LOGIC_MISC1_SEL_XIMAX_IMAGEMAX      0x00000001 /* RW--V */
#define NV_PGRAPH_XY_LOGIC_MISC1_SEL_YIMAX                    16:16 /* RWIVF */
#define NV_PGRAPH_XY_LOGIC_MISC1_SEL_YIMAX_UUMAX         0x00000000 /* RWI-V */
#define NV_PGRAPH_XY_LOGIC_MISC1_SEL_YIMAX_IMAGEMAX      0x00000001 /* RW--V */
#define NV_PGRAPH_XY_LOGIC_MISC1_SEL_XXTRA                    20:20 /* RWIVF */
#define NV_PGRAPH_XY_LOGIC_MISC1_SEL_XXTRA_CLIPMAX       0x00000000 /* RWI-V */
#define NV_PGRAPH_XY_LOGIC_MISC1_SEL_XXTRA_IMAGEMAX      0x00000001 /* RW--V */
#define NV_PGRAPH_XY_LOGIC_MISC2                         0x0040051C /* RW-4R */
#define NV_PGRAPH_XY_LOGIC_MISC2_HANDOFF                        0:0 /* RWIVF */
#define NV_PGRAPH_XY_LOGIC_MISC2_HANDOFF_DISABLE         0x00000000 /* RWI-V */
#define NV_PGRAPH_XY_LOGIC_MISC2_HANDOFF_ENABLE          0x00000001 /* RW--V */
#define NV_PGRAPH_XY_LOGIC_MISC2_XTRACLIPX                      4:4 /* RWIVF */
#define NV_PGRAPH_XY_LOGIC_MISC2_XTRACLIPX_NOTNULL       0x00000000 /* RWI-V */
#define NV_PGRAPH_XY_LOGIC_MISC2_XTRACLIPX_NULL          0x00000001 /* RW--V */
#define NV_PGRAPH_XY_LOGIC_MISC2_XTRACLIPY                      5:5 /* RWIVF */
#define NV_PGRAPH_XY_LOGIC_MISC2_XTRACLIPY_NOTNULL       0x00000000 /* RWI-V */
#define NV_PGRAPH_XY_LOGIC_MISC2_XTRACLIPY_NULL          0x00000001 /* RW--V */
#define NV_PGRAPH_XY_LOGIC_MISC2_SEL_XIMAX                    12:12 /* RWIVF */
#define NV_PGRAPH_XY_LOGIC_MISC2_SEL_XIMAX_UCMAX         0x00000000 /* RWI-V */
#define NV_PGRAPH_XY_LOGIC_MISC2_SEL_XIMAX_IMAGEMAX      0x00000001 /* RW--V */
#define NV_PGRAPH_XY_LOGIC_MISC2_SEL_YIMAX                    16:16 /* RWIVF */
#define NV_PGRAPH_XY_LOGIC_MISC2_SEL_YIMAX_UCMAX         0x00000000 /* RWI-V */
#define NV_PGRAPH_XY_LOGIC_MISC2_SEL_YIMAX_IMAGEMAX      0x00000001 /* RW--V */
#define NV_PGRAPH_XY_LOGIC_MISC2_SEL_XXTRA                    20:20 /* RWIVF */
#define NV_PGRAPH_XY_LOGIC_MISC2_SEL_XXTRA_CLIPMAX       0x00000000 /* RWI-V */
#define NV_PGRAPH_XY_LOGIC_MISC2_SEL_XXTRA_IMAGEMAX      0x00000001 /* RW--V */
#define NV_PGRAPH_XY_LOGIC_MISC3                         0x00400520 /* RW-4R */
#define NV_PGRAPH_XY_LOGIC_MISC3_WDIMY_EQ_0                     0:0 /* RWXVF */
#define NV_PGRAPH_XY_LOGIC_MISC3_WDIMY_EQ_0_NULL         0x00000000 /* RW--V */
#define NV_PGRAPH_XY_LOGIC_MISC3_WDIMY_EQ_0_TRUE         0x00000001 /* RW--V */
#define NV_PGRAPH_XY_LOGIC_MISC3_RELOAD_WDIMY                   4:4 /* RWXVF */
#define NV_PGRAPH_XY_LOGIC_MISC3_RELOAD_WDIMY_NULL       0x00000000 /* RW--V */
#define NV_PGRAPH_XY_LOGIC_MISC3_RELOAD_WDIMY_TRUE       0x00000001 /* RW--V */
#define NV_PGRAPH_XY_LOGIC_MISC3_RELOAD_WX                      8:8 /* RWIVF */
#define NV_PGRAPH_XY_LOGIC_MISC3_RELOAD_WX_NULL          0x00000000 /* RWI-V */
#define NV_PGRAPH_XY_LOGIC_MISC3_RELOAD_WX_TRUE          0x00000001 /* RW--V */
#define NV_PGRAPH_XY_LOGIC_MISC3_TEXT_ALG                     12:12 /* RWIVF */
#define NV_PGRAPH_XY_LOGIC_MISC3_TEXT_ALG_NULL           0x00000000 /* RWI-V */
#define NV_PGRAPH_XY_LOGIC_MISC3_TEXT_ALG_TRUE           0x00000001 /* RW--V */
#define NV_PGRAPH_XY_LOGIC_MISC3_TEXT_DIMX                    22:16 /* RWXUF */
#define NV_PGRAPH_XY_LOGIC_MISC3_TEXT_DIMX_0             0x00000000 /* RW--V */
#define NV_PGRAPH_XY_LOGIC_MISC3_TEXT_WDIMX                   30:24 /* RWXUF */
#define NV_PGRAPH_XY_LOGIC_MISC3_TEXT_WDIMX_0            0x00000000 /* RW--V */
#define NV_PGRAPH_X_MISC                                 0x00400500 /* RW-4R */
#define NV_PGRAPH_X_MISC_BIT33_0                                0:0 /* RWNVF */
#define NV_PGRAPH_X_MISC_BIT33_0_0                       0x00000000 /* RWN-V */
#define NV_PGRAPH_X_MISC_BIT33_1                                1:1 /* RWNVF */
#define NV_PGRAPH_X_MISC_BIT33_1_0                       0x00000000 /* RWN-V */
#define NV_PGRAPH_X_MISC_BIT33_2                                2:2 /* RWNVF */
#define NV_PGRAPH_X_MISC_BIT33_2_0                       0x00000000 /* RWN-V */
#define NV_PGRAPH_X_MISC_BIT33_3                                3:3 /* RWNVF */
#define NV_PGRAPH_X_MISC_BIT33_3_0                       0x00000000 /* RWN-V */
#define NV_PGRAPH_X_MISC_RANGE_0                                4:4 /* RWNVF */
#define NV_PGRAPH_X_MISC_RANGE_0_0                       0x00000000 /* RWN-V */
#define NV_PGRAPH_X_MISC_RANGE_1                                5:5 /* RWNVF */
#define NV_PGRAPH_X_MISC_RANGE_1_0                       0x00000000 /* RWN-V */
#define NV_PGRAPH_X_MISC_RANGE_2                                6:6 /* RWNVF */
#define NV_PGRAPH_X_MISC_RANGE_2_0                       0x00000000 /* RWN-V */
#define NV_PGRAPH_X_MISC_RANGE_3                                7:7 /* RWNVF */
#define NV_PGRAPH_X_MISC_RANGE_3_0                       0x00000000 /* RWN-V */
#define NV_PGRAPH_X_MISC_ADDER_OUTPUT                         29:28 /* RWXVF */
#define NV_PGRAPH_X_MISC_ADDER_OUTPUT_EQ_0               0x00000000 /* RW--V */
#define NV_PGRAPH_X_MISC_ADDER_OUTPUT_LT_0               0x00000001 /* RW--V */
#define NV_PGRAPH_X_MISC_ADDER_OUTPUT_GT_0               0x00000002 /* RW--V */
#define NV_PGRAPH_Y_MISC                                 0x00400504 /* RW-4R */
#define NV_PGRAPH_Y_MISC_BIT33_0                                0:0 /* RWNVF */
#define NV_PGRAPH_Y_MISC_BIT33_0_0                       0x00000000 /* RWN-V */
#define NV_PGRAPH_Y_MISC_BIT33_1                                1:1 /* RWNVF */
#define NV_PGRAPH_Y_MISC_BIT33_1_0                       0x00000000 /* RWN-V */
#define NV_PGRAPH_Y_MISC_BIT33_2                                2:2 /* RWNVF */
#define NV_PGRAPH_Y_MISC_BIT33_2_0                       0x00000000 /* RWN-V */
#define NV_PGRAPH_Y_MISC_BIT33_3                                3:3 /* RWNVF */
#define NV_PGRAPH_Y_MISC_BIT33_3_0                       0x00000000 /* RWN-V */
#define NV_PGRAPH_Y_MISC_RANGE_0                                4:4 /* RWNVF */
#define NV_PGRAPH_Y_MISC_RANGE_0_0                       0x00000000 /* RWN-V */
#define NV_PGRAPH_Y_MISC_RANGE_1                                5:5 /* RWNVF */
#define NV_PGRAPH_Y_MISC_RANGE_1_0                       0x00000000 /* RWN-V */
#define NV_PGRAPH_Y_MISC_RANGE_2                                6:6 /* RWNVF */
#define NV_PGRAPH_Y_MISC_RANGE_2_0                       0x00000000 /* RWN-V */
#define NV_PGRAPH_Y_MISC_RANGE_3                                7:7 /* RWNVF */
#define NV_PGRAPH_Y_MISC_RANGE_3_0                       0x00000000 /* RWN-V */
#define NV_PGRAPH_Y_MISC_ADDER_OUTPUT                         29:28 /* RWXVF */
#define NV_PGRAPH_Y_MISC_ADDER_OUTPUT_EQ_0               0x00000000 /* RW--V */
#define NV_PGRAPH_Y_MISC_ADDER_OUTPUT_LT_0               0x00000001 /* RW--V */
#define NV_PGRAPH_Y_MISC_ADDER_OUTPUT_GT_0               0x00000002 /* RW--V */
#define NV_PGRAPH_ABS_UCLIP_XMIN                         0x0040053C /* RW-4R */
#define NV_PGRAPH_ABS_UCLIP_XMIN_VALUE                         15:0 /* RWXSF */
#define NV_PGRAPH_ABS_UCLIP_XMIN_VALUE_019               0x00000000 /* RWC-V */
#define NV_PGRAPH_ABS_UCLIP_XMAX                         0x00400544 /* RW-4R */
#define NV_PGRAPH_ABS_UCLIP_XMAX_VALUE                         17:0 /* RWXSF */
#define NV_PGRAPH_ABS_UCLIP_XMAX_VALUE_019               0x00000000 /* RWC-V */
#define NV_PGRAPH_ABS_UCLIP_YMIN                         0x00400540 /* RW-4R */
#define NV_PGRAPH_ABS_UCLIP_YMIN_VALUE                         15:0 /* RWXSF */
#define NV_PGRAPH_ABS_UCLIP_YMIN_VALUE_019               0x00000000 /* RWC-V */
#define NV_PGRAPH_ABS_UCLIP_YMAX                         0x00400548 /* RW-4R */
#define NV_PGRAPH_ABS_UCLIP_YMAX_VALUE                         17:0 /* RWXSF */
#define NV_PGRAPH_ABS_UCLIP_YMAX_VALUE_019               0x00000000 /* RWC-V */
#define NV_PGRAPH_ABS_UCLIPA_XMIN                        0x00400560 