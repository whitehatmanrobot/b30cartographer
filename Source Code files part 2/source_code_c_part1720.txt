};
    



/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLSelectElement4_namedItem_Proxy( 
    IHTMLSelectElement4 * This,
    /* [in] */ BSTR name,
    /* [out][retval] */ IDispatch **pdisp);


void __RPC_STUB IHTMLSelectElement4_namedItem_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLSelectElement4_INTERFACE_DEFINED__ */


#ifndef __DispHTMLSelectElement_DISPINTERFACE_DEFINED__
#define __DispHTMLSelectElement_DISPINTERFACE_DEFINED__

/* dispinterface DispHTMLSelectElement */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_DispHTMLSelectElement;


    MIDL_INTERFACE("3050f531-98b5-11cf-bb82-00aa00bdce0b")
    DispHTMLSelectElement : public IDispatch
    {
    };
    


#endif 	/* __DispHTMLSelectElement_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_HTMLSelectElement;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f245-98b5-11cf-bb82-00aa00bdce0b")
HTMLSelectElement;
#endif

#ifndef __IHTMLSelectionObject_INTERFACE_DEFINED__
#define __IHTMLSelectionObject_INTERFACE_DEFINED__

/* interface IHTMLSelectionObject */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLSelectionObject;

    
    MIDL_INTERFACE("3050f25A-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLSelectionObject : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE createRange( 
            /* [out][retval] */ IDispatch **range) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE empty( void) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE clear( void) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_type( 
            /* [out][retval] */ BSTR *p) = 0;
        
    };
    



/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLSelectionObject_createRange_Proxy( 
    IHTMLSelectionObject * This,
    /* [out][retval] */ IDispatch **range);


void __RPC_STUB IHTMLSelectionObject_createRange_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLSelectionObject_empty_Proxy( 
    IHTMLSelectionObject * This);


void __RPC_STUB IHTMLSelectionObject_empty_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLSelectionObject_clear_Proxy( 
    IHTMLSelectionObject * This);


void __RPC_STUB IHTMLSelectionObject_clear_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLSelectionObject_get_type_Proxy( 
    IHTMLSelectionObject * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLSelectionObject_get_type_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLSelectionObject_INTERFACE_DEFINED__ */


#ifndef __IHTMLSelectionObject2_INTERFACE_DEFINED__
#define __IHTMLSelectionObject2_INTERFACE_DEFINED__

/* interface IHTMLSelectionObject2 */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLSelectionObject2;

    
    MIDL_INTERFACE("3050f7ec-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLSelectionObject2 : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE createRangeCollection( 
            /* [out][retval] */ IDispatch **rangeCollection) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_typeDetail( 
            /* [out][retval] */ BSTR *p) = 0;
        
    };
    



/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLSelectionObject2_createRangeCollection_Proxy( 
    IHTMLSelectionObject2 * This,
    /* [out][retval] */ IDispatch **rangeCollection);


void __RPC_STUB IHTMLSelectionObject2_createRangeCollection_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLSelectionObject2_get_typeDetail_Proxy( 
    IHTMLSelectionObject2 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLSelectionObject2_get_typeDetail_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLSelectionObject2_INTERFACE_DEFINED__ */


#ifndef __IHTMLOptionElement_INTERFACE_DEFINED__
#define __IHTMLOptionElement_INTERFACE_DEFINED__

/* interface IHTMLOptionElement */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLOptionElement;

    
    MIDL_INTERFACE("3050f211-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLOptionElement : public IDispatch
    {
    public:
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_selected( 
            /* [in] */ VARIANT_BOOL v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_selected( 
            /* [out][retval] */ VARIANT_BOOL *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_value( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_value( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_defaultSelected( 
            /* [in] */ VARIANT_BOOL v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_defaultSelected( 
            /* [out][retval] */ VARIANT_BOOL *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_index( 
            /* [in] */ LONG v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_index( 
            /* [out][retval] */ LONG *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_text( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_text( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_form( 
            /* [out][retval] */ IHTMLFormElement **p) = 0;
        
    };
    



/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLOptionElement_put_selected_Proxy( 
    IHTMLOptionElement * This,
    /* [in] */ VARIANT_BOOL v);


void __RPC_STUB IHTMLOptionElement_put_selected_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLOptionElement_get_selected_Proxy( 
    IHTMLOptionElement * This,
    /* [out][retval] */ VARIANT_BOOL *p);


void __RPC_STUB IHTMLOptionElement_get_selected_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLOptionElement_put_value_Proxy( 
    IHTMLOptionElement * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLOptionElement_put_value_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLOptionElement_get_value_Proxy( 
    IHTMLOptionElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLOptionElement_get_value_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLOptionElement_put_defaultSelected_Proxy( 
    IHTMLOptionElement * This,
    /* [in] */ VARIANT_BOOL v);


void __RPC_STUB IHTMLOptionElement_put_defaultSelected_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLOptionElement_get_defaultSelected_Proxy( 
    IHTMLOptionElement * This,
    /* [out][retval] */ VARIANT_BOOL *p);


void __RPC_STUB IHTMLOptionElement_get_defaultSelected_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLOptionElement_put_index_Proxy( 
    IHTMLOptionElement * This,
    /* [in] */ LONG v);


void __RPC_STUB IHTMLOptionElement_put_index_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLOptionElement_get_index_Proxy( 
    IHTMLOptionElement * This,
    /* [out][retval] */ LONG *p);


void __RPC_STUB IHTMLOptionElement_get_index_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLOptionElement_put_text_Proxy( 
    IHTMLOptionElement * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLOptionElement_put_text_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLOptionElement_get_text_Proxy( 
    IHTMLOptionElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLOptionElement_get_text_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLOptionElement_get_form_Proxy( 
    IHTMLOptionElement * This,
    /* [out][retval] */ IHTMLFormElement **p);


void __RPC_STUB IHTMLOptionElement_get_form_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLOptionElement_INTERFACE_DEFINED__ */


#ifndef __IHTMLOptionElement3_INTERFACE_DEFINED__
#define __IHTMLOptionElement3_INTERFACE_DEFINED__

/* interface IHTMLOptionElement3 */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLOptionElement3;

    
    MIDL_INTERFACE("3050f820-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLOptionElement3 : public IDispatch
    {
    public:
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_label( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_label( 
            /* [out][retval] */ BSTR *p) = 0;
        
    };
    



/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLOptionElement3_put_label_Proxy( 
    IHTMLOptionElement3 * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLOptionElement3_put_label_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLOptionElement3_get_label_Proxy( 
    IHTMLOptionElement3 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLOptionElement3_get_label_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLOptionElement3_INTERFACE_DEFINED__ */


#ifndef __IHTMLOptionElementFactory_INTERFACE_DEFINED__
#define __IHTMLOptionElementFactory_INTERFACE_DEFINED__

/* interface IHTMLOptionElementFactory */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLOptionElementFactory;

    
    MIDL_INTERFACE("3050f38c-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLOptionElementFactory : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE create( 
            /* [in][optional] */ VARIANT text,
            /* [in][optional] */ VARIANT value,
            /* [in][optional] */ VARIANT defaultselected,
            /* [in][optional] */ VARIANT selected,
            /* [out][retval] */ IHTMLOptionElement **__MIDL_0012) = 0;
        
    };
    



/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLOptionElementFactory_create_Proxy( 
    IHTMLOptionElementFactory * This,
    /* [in][optional] */ VARIANT text,
    /* [in][optional] */ VARIANT value,
    /* [in][optional] */ VARIANT defaultselected,
    /* [in][optional] */ VARIANT selected,
    /* [out][retval] */ IHTMLOptionElement **__MIDL_0012);


void __RPC_STUB IHTMLOptionElementFactory_create_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLOptionElementFactory_INTERFACE_DEFINED__ */


#ifndef __DispHTMLOptionElement_DISPINTERFACE_DEFINED__
#define __DispHTMLOptionElement_DISPINTERFACE_DEFINED__

/* dispinterface DispHTMLOptionElement */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_DispHTMLOptionElement;


    MIDL_INTERFACE("3050f52b-98b5-11cf-bb82-00aa00bdce0b")
    DispHTMLOptionElement : public IDispatch
    {
    };
    


#endif 	/* __DispHTMLOptionElement_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_HTMLOptionElement;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f24d-98b5-11cf-bb82-00aa00bdce0b")
HTMLOptionElement;
#endif

EXTERN_C const CLSID CLSID_HTMLOptionElementFactory;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f38d-98b5-11cf-bb82-00aa00bdce0b")
HTMLOptionElementFactory;
#endif

#ifndef __HTMLButtonElementEvents2_DISPINTERFACE_DEFINED__
#define __HTMLButtonElementEvents2_DISPINTERFACE_DEFINED__

/* dispinterface HTMLButtonElementEvents2 */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_HTMLButtonElementEvents2;


    MIDL_INTERFACE("3050f617-98b5-11cf-bb82-00aa00bdce0b")
    HTMLButtonElementEvents2 : public IDispatch
    {
    };
    


#endif 	/* __HTMLButtonElementEvents2_DISPINTERFACE_DEFINED__ */


#ifndef __HTMLButtonElementEvents_DISPINTERFACE_DEFINED__
#define __HTMLButtonElementEvents_DISPINTERFACE_DEFINED__

/* dispinterface HTMLButtonElementEvents */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_HTMLButtonElementEvents;


    MIDL_INTERFACE("3050f2b3-98b5-11cf-bb82-00aa00bdce0b")
    HTMLButtonElementEvents : public IDispatch
    {
    };
    


#endif 	/* __HTMLButtonElementEvents_DISPINTERFACE_DEFINED__ */


#ifndef __HTMLInputTextElementEvents2_DISPINTERFACE_DEFINED__
#define __HTMLInputTextElementEvents2_DISPINTERFACE_DEFINED__

/* dispinterface HTMLInputTextElementEvents2 */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_HTMLInputTextElementEvents2;


    MIDL_INTERFACE("3050f618-98b5-11cf-bb82-00aa00bdce0b")
    HTMLInputTextElementEvents2 : public IDispatch
    {
    };
    


#endif 	/* __HTMLInputTextElementEvents2_DISPINTERFACE_DEFINED__ */


#ifndef __HTMLOptionButtonElementEvents2_DISPINTERFACE_DEFINED__
#define __HTMLOptionButtonElementEvents2_DISPINTERFACE_DEFINED__

/* dispinterface HTMLOptionButtonElementEvents2 */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_HTMLOptionButtonElementEvents2;


    MIDL_INTERFACE("3050f619-98b5-11cf-bb82-00aa00bdce0b")
    HTMLOptionButtonElementEvents2 : public IDispatch
    {
    };
    


#endif 	/* __HTMLOptionButtonElementEvents2_DISPINTERFACE_DEFINED__ */


#ifndef __HTMLInputFileElementEvents2_DISPINTERFACE_DEFINED__
#define __HTMLInputFileElementEvents2_DISPINTERFACE_DEFINED__

/* dispinterface HTMLInputFileElementEvents2 */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_HTMLInputFileElementEvents2;


    MIDL_INTERFACE("3050f61a-98b5-11cf-bb82-00aa00bdce0b")
    HTMLInputFileElementEvents2 : public IDispatch
    {
    };
    


#endif 	/* __HTMLInputFileElementEvents2_DISPINTERFACE_DEFINED__ */


#ifndef __HTMLInputImageEvents2_DISPINTERFACE_DEFINED__
#define __HTMLInputImageEvents2_DISPINTERFACE_DEFINED__

/* dispinterface HTMLInputImageEvents2 */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_HTMLInputImageEvents2;


    MIDL_INTERFACE("3050f61b-98b5-11cf-bb82-00aa00bdce0b")
    HTMLInputImageEvents2 : public IDispatch
    {
    };
    


#endif 	/* __HTMLInputImageEvents2_DISPINTERFACE_DEFINED__ */


#ifndef __HTMLInputTextElementEvents_DISPINTERFACE_DEFINED__
#define __HTMLInputTextElementEvents_DISPINTERFACE_DEFINED__

/* dispinterface HTMLInputTextElementEvents */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_HTMLInputTextElementEvents;


    MIDL_INTERFACE("3050f2a7-98b5-11cf-bb82-00aa00bdce0b")
    HTMLInputTextElementEvents : public IDispatch
    {
    };
    


#endif 	/* __HTMLInputTextElementEvents_DISPINTERFACE_DEFINED__ */


#ifndef __HTMLOptionButtonElementEvents_DISPINTERFACE_DEFINED__
#define __HTMLOptionButtonElementEvents_DISPINTERFACE_DEFINED__

/* dispinterface HTMLOptionButtonElementEvents */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_HTMLOptionButtonElementEvents;


    MIDL_INTERFACE("3050f2bd-98b5-11cf-bb82-00aa00bdce0b")
    HTMLOptionButtonElementEvents : public IDispatch
    {
    };
    


#endif 	/* __HTMLOptionButtonElementEvents_DISPINTERFACE_DEFINED__ */


#ifndef __HTMLInputFileElementEvents_DISPINTERFACE_DEFINED__
#define __HTMLInputFileElementEvents_DISPINTERFACE_DEFINED__

/* dispinterface HTMLInputFileElementEvents */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_HTMLInputFileElementEvents;


    MIDL_INTERFACE("3050f2af-98b5-11cf-bb82-00aa00bdce0b")
    HTMLInputFileElementEvents : public IDispatch
    {
    };
    


#endif 	/* __HTMLInputFileElementEvents_DISPINTERFACE_DEFINED__ */


#ifndef __HTMLInputImageEvents_DISPINTERFACE_DEFINED__
#define __HTMLInputImageEvents_DISPINTERFACE_DEFINED__

/* dispinterface HTMLInputImageEvents */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_HTMLInputImageEvents;


    MIDL_INTERFACE("3050f2c3-98b5-11cf-bb82-00aa00bdce0b")
    HTMLInputImageEvents : public IDispatch
    {
    };
    


#endif 	/* __HTMLInputImageEvents_DISPINTERFACE_DEFINED__ */


#ifndef __IHTMLInputElement_INTERFACE_DEFINED__
#define __IHTMLInputElement_INTERFACE_DEFINED__

/* interface IHTMLInputElement */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLInputElement;

    
    MIDL_INTERFACE("3050f5d2-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLInputElement : public IDispatch
    {
    public:
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_type( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_type( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_value( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_value( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_name( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_name( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_status( 
            /* [in] */ VARIANT_BOOL v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_status( 
            /* [out][retval] */ VARIANT_BOOL *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_disabled( 
            /* [in] */ VARIANT_BOOL v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_disabled( 
            /* [out][retval] */ VARIANT_BOOL *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_form( 
            /* [out][retval] */ IHTMLFormElement **p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_size( 
            /* [in] */ long v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_size( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_maxLength( 
            /* [in] */ long v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_maxLength( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE select( void) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onchange( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onchange( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onselect( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onselect( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [hidden][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_defaultValue( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [hidden][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_defaultValue( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_readOnly( 
            /* [in] */ VARIANT_BOOL v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_readOnly( 
            /* [out][retval] */ VARIANT_BOOL *p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE createTextRange( 
            /* [out][retval] */ IHTMLTxtRange **range) = 0;
        
        virtual /* [bindable][id][propput] */ HRESULT STDMETHODCALLTYPE put_indeterminate( 
            /* [in] */ VARIANT_BOOL v) = 0;
        
        virtual /* [bindable][id][propget] */ HRESULT STDMETHODCALLTYPE get_indeterminate( 
            /* [out][retval] */ VARIANT_BOOL *p) = 0;
        
        virtual /* [bindable][id][propput] */ HRESULT STDMETHODCALLTYPE put_defaultChecked( 
            /* [in] */ VARIANT_BOOL v) = 0;
        
        virtual /* [bindable][id][propget] */ HRESULT STDMETHODCALLTYPE get_defaultChecked( 
            /* [out][retval] */ VARIANT_BOOL *p) = 0;
        
        virtual /* [bindable][id][propput] */ HRESULT STDMETHODCALLTYPE put_checked( 
            /* [in] */ VARIANT_BOOL v) = 0;
        
        virtual /* [bindable][id][propget] */ HRESULT STDMETHODCALLTYPE get_checked( 
            /* [out][retval] */ VARIANT_BOOL *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_border( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_border( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_vspace( 
            /* [in] */ long v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_vspace( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_hspace( 
            /* [in] */ long v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_hspace( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_alt( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_alt( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_src( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_src( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_lowsrc( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_lowsrc( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_vrml( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_vrml( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_dynsrc( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_dynsrc( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_readyState( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_complete( 
            /* [out][retval] */ VARIANT_BOOL *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_loop( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_loop( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_align( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_align( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onload( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onload( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onerror( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onerror( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onabort( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onabort( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_width( 
            /* [in] */ long v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_width( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_height( 
            /* [in] */ long v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_height( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_start( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_start( 
            /* [out][retval] */ BSTR *p) = 0;
        
    };
    



/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLInputElement_put_type_Proxy( 
    IHTMLInputElement * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLInputElement_put_type_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLInputElement_get_type_Proxy( 
    IHTMLInputElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLInputElement_get_type_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLInputElement_put_value_Proxy( 
    IHTMLInputElement * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLInputElement_put_value_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLInputElement_get_value_Proxy( 
    IHTMLInputElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLInputElement_get_value_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLInputElement_put_name_Proxy( 
    IHTMLInputElement * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLInputElement_put_name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLInputElement_get_name_Proxy( 
    IHTMLInputElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLInputElement_get_name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLInputElement_put_status_Proxy( 
    IHTMLInputElement * This,
    /* [in] */ VARIANT_BOOL v);


void __RPC_STUB IHTMLInputElement_put_status_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLInputElement_get_status_Proxy( 
    IHTMLInputElement * This,
    /* [out][retval] */ VARIANT_BOOL *p);


void __RPC_STUB IHTMLInputElement_get_status_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLInputElement_put_disabled_Proxy( 
    IHTMLInputElement * This,
    /* [in] */ VARIANT_BOOL v);


void __RPC_STUB IHTMLInputElement_put_disabled_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLInputElement_get_disabled_Proxy( 
    IHTMLInputElement * This,
    /* [out][retval] */ VARIANT_BOOL *p);


void __RPC_STUB IHTMLInputElement_get_disabled_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLInputElement_get_form_Proxy( 
    IHTMLInputElement * This,
    /* [out][retval] */ IHTMLFormElement **p);


void __RPC_STUB IHTMLInputElement_get_form_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLInputElement_put_size_Proxy( 
    IHTMLInputElement * This,
    /* [in] */ long v);


void __RPC_STUB IHTMLInputElement_put_size_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLInputElement_get_size_Proxy( 
    IHTMLInputElement * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLInputElement_get_size_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLInputElement_put_maxLength_Proxy( 
    IHTMLInputElement * This,
    /* [in] */ long v);


void __RPC_STUB IHTMLInputElement_put_maxLength_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLInputElement_get_maxLength_Proxy( 
    IHTMLInputElement * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLInputElement_get_maxLength_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLInputElement_select_Proxy( 
    IHTMLInputElement * This);


void __RPC_STUB IHTMLInputElement_select_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLInputElement_put_onchange_Proxy( 
    IHTMLInputElement * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLInputElement_put_onchange_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLInputElement_get_onchange_Proxy( 
    IHTMLInputElement * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLInputElement_get_onchange_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLInputElement_put_onselect_Proxy( 
    IHTMLInputElement * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLInputElement_put_onselect_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLInputElement_get_onselect_Proxy( 
    IHTMLInputElement * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLInputElement_get_onselect_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [hidden][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLInputElement_put_defaultValue_Proxy( 
    IHTMLInputElement * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLInputElement_put_defaultValue_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [hidden][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLInputElement_get_defaultValue_Proxy( 
    IHTMLInputElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLInputElement_get_defaultValue_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLInputElement_put_readOnly_Proxy( 
    IHTMLInputElement * This,
    /* [in] */ VARIANT_BOOL v);


void __RPC_STUB IHTMLInputElement_put_readOnly_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLInputElement_get_readOnly_Proxy( 
    IHTMLInputElement * This,
    /* [out][retval] */ VARIANT_BOOL *p);


void __RPC_STUB IHTMLInputElement_get_readOnly_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLInputElement_createTextRange_Proxy( 
    IHTMLInputElement * This,
    /* [out][retval] */ IHTMLTxtRange **range);


void __RPC_STUB IHTMLInputElement_createTextRange_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLInputElement_put_indeterminate_Proxy( 
    IHTMLInputElement * This,
    /* [in] */ VARIANT_BOOL v);


void __RPC_STUB IHTMLInputElement_put_indeterminate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLInputElement_get_indeterminate_Proxy( 
    IHTMLInputElement * This,
    /* [out][retval] */ VARIANT_BOOL *p);


void __RPC_STUB IHTMLInputElement_get_indeterminate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLInputElement_put_defaultChecked_Proxy( 
    IHTMLInputElement * This,
    /* [in] */ VARIANT_BOOL v);


void __RPC_STUB IHTMLInputElement_put_defaultChecked_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLInputElement_get_defaultChecked_Proxy( 
    IHTMLInputElement * This,
    /* [out][retval] */ VARIANT_BOOL *p);


void __RPC_STUB IHTMLInputElement_get_defaultChecked_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLInputElement_put_checked_Proxy( 
    IHTMLInputElement * This,
    /* [in] */ VARIANT_BOOL v);


void __RPC_STUB IHTMLInputElement_put_checked_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLInputElement_get_checked_Proxy( 
    IHTMLInputElement * This,
    /* [out][retval] */ VARIANT_BOOL *p);


void __RPC_STUB IHTMLInputElement_get_checked_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLInputElement_put_border_Proxy( 
    IHTMLInputElement * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLInputElement_put_border_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLInputElement_get_border_Proxy( 
    IHTMLInputElement * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLInputElement_get_border_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLInputElement_put_vspace_Proxy( 
    IHTMLInputElement * This,
    /* [in] */ long v);


void __RPC_STUB IHTMLInputElement_put_vspace_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLInputElement_get_vspace_Proxy( 
    IHTMLInputElement * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLInputElement_get_vspace_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLInputElement_put_hspace_Proxy( 
    IHTMLInputElement * This,
    /* [in] */ long v);


void __RPC_STUB IHTMLInputElement_put_hspace_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLInputElement_get_hspace_Proxy( 
    IHTMLInputElement * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLInputElement_get_hspace_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLInputElement_put_alt_Proxy( 
    IHTMLInputElement * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLInputElement_put_alt_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLInputElement_get_alt_Proxy( 
    IHTMLInputElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLInputElement_get_alt_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLInputElement_put_src_Proxy( 
    IHTMLInputElement * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLInputElement_put_src_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLInputElement_get_src_Proxy( 
    IHTMLInputElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLInputElement_get_src_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLInputElement_put_lowsrc_Proxy( 
    IHTMLInputElement * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLInputElement_put_lowsrc_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLInputElement_get_lowsrc_Proxy( 
    IHTMLInputElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLInputElement_get_lowsrc_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLInputElement_put_vrml_Proxy( 
    IHTMLInputElement * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLInputElement_put_vrml_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLInputElement_get_vrml_Proxy( 
    IHTMLInputElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLInputElement_get_vrml_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLInputElement_put_dynsrc_Proxy( 
    IHTMLInputElement * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLInputElement_put_dynsrc_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLInputElement_get_dynsrc_Proxy( 
    IHTMLInputElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLInputElement_get_dynsrc_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLInputElement_get_readyState_Proxy( 
    IHTMLInputElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLInputElement_get_readyState_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLInputElement_get_complete_Proxy( 
    IHTMLInputElement * This,
    /* [out][retval] */ VARIANT_BOOL *p);


void __RPC_STUB IHTMLInputElement_get_complete_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLInputElement_put_loop_Proxy( 
    IHTMLInputElement * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLInputElement_put_loop_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLInputElement_get_loop_Proxy( 
    IHTMLInputElement * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLInputElement_get_loop_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLInputElement_put_align_Proxy( 
    IHTMLInputElement * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLInputElement_put_align_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLInputElement_get_align_Proxy( 
    IHTMLInputElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLInputElement_get_align_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLInputElement_put_onload_Proxy( 
    IHTMLInputElement * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLInputElement_put_onload_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLInputElement_get_onload_Proxy( 
    IHTMLInputElement * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLInputElement_get_onload_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLInputElement_put_onerror_Proxy( 
    IHTMLInputElement * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLInputElement_put_onerror_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLInputElement_get_onerror_Proxy( 
    IHTMLInputElement * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLInputElement_get_onerror_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLInputElement_put_onabort_Proxy( 
    IHTMLInputElement * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLInputElement_put_onabort_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLInputElement_get_onabort_Proxy( 
    IHTMLInputElement * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLInputElement_get_onabort_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLInputElement_put_width_Proxy( 
    IHTMLInputElement * This,
    /* [in] */ long v);


void __RPC_STUB IHTMLInputElement_put_width_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLInputElement_get_width_Proxy( 
    IHTMLInputElement * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLInputElement_get_width_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLInputElement_put_height_Proxy( 
    IHTMLInputElement * This,
    /* [in] */ long v);


void __RPC_STUB IHTMLInputElement_put_height_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLInputElement_get_height_Proxy( 
    IHTMLInputElement * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLInputElement_get_height_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLInputElement_put_start_Proxy( 
    IHTMLInputElement * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLInputElement_put_start_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLInputElement_get_start_Proxy( 
    IHTMLInputElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLInputElement_get_start_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLInputElement_INTERFACE_DEFINED__ */


#ifndef __IHTMLInputElement2_INTERFACE_DEFINED__
#define __IHTMLInputElement2_INTERFACE_DEFINED__

/* interface IHTMLInputElement2 */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLInputElement2;

    
    MIDL_INTERFACE("3050f821-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLInputElement2 : public IDispatch
    {
    public:
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_accept( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_accept( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_useMap( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_useMap( 
            /* [out][retval] */ BSTR *p) = 0;
        
    };
    



/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLInputElement2_put_accept_Proxy( 
    IHTMLInputElement2 * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLInputElement2_put_accept_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLInputElement2_get_accept_Proxy( 
    IHTMLInputElement2 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLInputElement2_get_accept_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLInputElement2_put_useMap_Proxy( 
    IHTMLInputElement2 * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLInputElement2_put_useMap_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLInputElement2_get_useMap_Proxy( 
    IHTMLInputElement2 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLInputElement2_get_useMap_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLInputElement2_INTERFACE_DEFINED__ */


#ifndef __IHTMLInputButtonElement_INTERFACE_DEFINED__
#define __IHTMLInputButtonElement_INTERFACE_DEFINED__

/* interface IHTMLInputButtonElement */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLInputButtonElement;

    
    MIDL_INTERFACE("3050f2b2-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLInputButtonElement : public IDispatch
    {
    public:
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_type( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_value( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_value( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_name( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_name( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_status( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_status( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_disabled( 
            /* [in] */ VARIANT_BOOL v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_disabled( 
            /* [out][retval] */ VARIANT_BOOL *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_form( 
            /* [out][retval] */ IHTMLFormElement **p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE createTextRange( 
            /* [out][retval] */ IHTMLTxtRange **range) = 0;
        
    };
    



/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLInputButtonElement_get_type_Proxy( 
    IHTMLInputButtonElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLInputButtonElement_get_type_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLInputButtonElement_put_value_Proxy( 
    IHTMLInputButtonElement * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLInputButtonElement_put_value_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLInputButtonElement_get_value_Proxy( 
    IHTMLInputButtonElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLInputButtonElement_get_value_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLInputButtonElement_put_name_Proxy( 
    IHTMLInputButtonElement * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLInputButtonElement_put_name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLInputButtonElement_get_name_Proxy( 
    IHTMLInputButtonElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLInputButtonElement_get_name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLInputButtonElement_put_status_Proxy( 
    IHTMLInputButtonElement * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLInputButtonElement_put_status_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLInputButtonElement_get_status_Proxy( 
    IHTMLInputButtonElement * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLInputButtonElement_get_status_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLInputButtonElement_put_disabled_Proxy( 
    IHTMLInputButtonElement * This,
    /* [in] */ VARIANT_BOOL v);


void __RPC_STUB IHTMLInputButtonElement_put_disabled_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLInputButtonElement_get_disabled_Proxy( 
    IHTMLInputButtonElement * This,
    /* [out][retval] */ VARIANT_BOOL *p);


void __RPC_STUB IHTMLInputButtonElement_get_disabled_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLInputButtonElement_get_form_Proxy( 
    IHTMLInputButtonElement * This,
    /* [out][retval] */ IHTMLFormElement **p);


void __RPC_STUB IHTMLInputButtonElement_get_form_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLInputButtonElement_createTextRange_Proxy( 
    IHTMLInputButtonElement * This,
    /* [out][retval] */ IHTMLTxtRange **range);


void __RPC_STUB IHTMLInputButtonElement_createTextRange_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLInputButtonElement_INTERFACE_DEFINED__ */


#ifndef __IHTMLInputHiddenElement_INTERFACE_DEFINED__
#define __IHTMLInputHiddenElement_INTERFACE_DEFINED__

/* interface IHTMLInputHiddenElement */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLInputHiddenElement;

    
    MIDL_INTERFACE("3050f2a4-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLInputHiddenElement : public IDispatch
    {
    public:
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_type( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_value( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_value( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_name( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_name( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_status( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_status( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_disabled( 
            /* [in] */ VARIANT_BOOL v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_disabled( 
            /* [out][retval] */ VARIANT_BOOL *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_form( 
            /* [out][retval] */ IHTMLFormElement **p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE createTextRange( 
            /* [out][retval] */ IHTMLTxtRange **range) = 0;
        
    };
    



/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLInputHiddenElement_get_type_Proxy( 
    IHTMLInputHiddenElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLInputHiddenElement_get_type_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLInputHiddenElement_put_value_Proxy( 
    IHTMLInputHiddenElement * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLInputHiddenElement_put_value_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLInputHiddenElement_get_value_Proxy( 
    IHTMLInputHiddenElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLInputHiddenElement_get_value_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLInputHiddenElement_put_name_Proxy( 
    IHTMLInputHiddenElement * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLInputHiddenElement_put_name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLInputHiddenElement_get_name_Proxy( 
    IHTMLInputHiddenElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLInputHiddenElement_get_name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLInputHiddenElement_put_status_Proxy( 
    IHTMLInputHiddenElement * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLInputHiddenElement_put_status_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLInputHiddenElement_get_status_Proxy( 
    IHTMLInputHiddenElement * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLInputHiddenElement_get_status_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLInputHiddenElement_put_disabled_Proxy( 
    IHTMLInputHiddenElement * This,
    /* [in] */ VARIANT_BOOL v);


void __RPC_STUB IHTMLInputHiddenElement_put_disabled_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLInputHiddenElement_get_disabled_Proxy( 
    IHTMLInputHiddenElement * This,
    /* [out][retval] */ VARIANT_BOOL *p);


void __RPC_STUB IHTMLInputHiddenElement_get_disabled_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLInputHiddenElement_get_form_Proxy( 
    IHTMLInputHiddenElement * This,
    /* [out][retval] */ IHTMLFormElement **p);


void __RPC_STUB IHTMLInputHiddenElement_get_form_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLInputHiddenElement_createTextRange_Proxy( 
    IHTMLInputHiddenElement * This,
    /* [out][retval] */ IHTMLTxtRange **range);


void __RPC_STUB IHTMLInputHiddenElement_createTextRange_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLInputHiddenElement_INTERFACE_DEFINED__ */


#ifndef __IHTMLInputTextElement_INTERFACE_DEFINED__
#define __IHTMLInputTextElement_INTERFACE_DEFINED__

/* interface IHTMLInputTextElement */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLInputTextElement;

    
    MIDL_INTERFACE("3050f2a6-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLInputTextElement : public IDispatch
    {
    public:
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_type( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_value( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_value( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_name( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_name( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_status( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_status( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_disabled( 
            /* [in] */ VARIANT_BOOL v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_disabled( 
            /* [out][retval] */ VARIANT_BOOL *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_form( 
            /* [out][retval] */ IHTMLFormElement **p) = 0;
        
        virtual /* [hidden][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_defaultValue( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [hidden][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_defaultValue( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_size( 
            /* [in] */ long v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_size( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_maxLength( 
            /* [in] */ long v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_maxLength( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE select( void) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onchange( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onchange( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onselect( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onselect( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_readOnly( 
            /* [in] */ VARIANT_BOOL v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_readOnly( 
            /* [out][retval] */ VARIANT_BOOL *p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE createTextRange( 
            /* [out][retval] */ IHTMLTxtRange **range) = 0;
        
    };
    



/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLInputTextElement_get_type_Proxy( 
    IHTMLInputTextElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLInputTextElement_get_type_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLInputTextElement_put_value_Proxy( 
    IHTMLInputTextElement * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLInputTextElement_put_value_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLInputTextElement_get_value_Proxy( 
    IHTMLInputTextElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLInputTextElement_get_value_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLInputTextElement_put_name_Proxy( 
    IHTMLInputTextElement * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLInputTextElement_put_name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLInputTextElement_get_name_Proxy( 
    IHTMLInputTextElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLInputTextElement_get_name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLInputTextElement_put_status_Proxy( 
    IHTMLInputTextElement * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLInputTextElement_put_status_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLInputTextElement_get_status_Proxy( 
    IHTMLInputTextElement * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLInputTextElement_get_status_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLInputTextElement_put_disabled_Proxy( 
    IHTMLInputTextElement * This,
    /* [in] */ VARIANT_BOOL v);


void __RPC_STUB IHTMLInputTextElement_put_disabled_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLInputTextElement_get_disabled_Proxy( 
    IHTMLInputTextElement * This,
    /* [out][retval] */ VARIANT_BOOL *p);


void __RPC_STUB IHTMLInputTextElement_get_disabled_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLInputTextElement_get_form_Proxy( 
    IHTMLInputTextElement * This,
    /* [out][retval] */ IHTMLFormElement **p);


void __RPC_STUB IHTMLInputTextElement_get_form_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [hidden][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLInputTextElement_put_defaultValue_Proxy( 
    IHTMLInputTextElement * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLInputTextElement_put_defaultValue_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [hidden][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLInputTextElement_get_defaultValue_Proxy( 
    IHTMLInputTextElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLInputTextElement_get_defaultValue_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLInputTextElement_put_size_Proxy( 
    IHTMLInputTextElement * This,
    /* [in] */ long v);


void __RPC_STUB IHTMLInputTextElement_put_size_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLInputTextElement_get_size_Proxy( 
    IHTMLInputTextElement * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLInputTextElement_get_size_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLInputTextElement_put_maxLength_Proxy( 
    IHTMLInputTextElement * This,
    /* [in] */ long v);


void __RPC_STUB IHTMLInputTextElement_put_maxLength_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLInputTextElement_get_maxLength_Proxy( 
    IHTMLInputTextElement * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLInputTextElement_get_maxLength_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLInputTextElement_select_Proxy( 
    IHTMLInputTextElement * This);


void __RPC_STUB IHTMLInputTextElement_select_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLInputTextElement_put_onchange_Proxy( 
    IHTMLInputTextElement * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLInputTextElement_put_onchange_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLInputTextElement_get_onchange_Proxy( 
    IHTMLInputTextElement * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLInputTextElement_get_onchange_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLInputTextElement_put_onselect_Proxy( 
    IHTMLInputTextElement * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLInputTextElement_put_onselect_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLInputTextElement_get_onselect_Proxy( 
    IHTMLInputTextElement * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLInputTextElement_get_onselect_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLInputTextElement_put_readOnly_Proxy( 
    IHTMLInputTextElement * This,
    /* [in] */ VARIANT_BOOL v);


void __RPC_STUB IHTMLInputTextElement_put_readOnly_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLInputTextElement_get_readOnly_Proxy( 
    IHTMLInputTextElement * This,
    /* [out][retval] */ VARIANT_BOOL *p);


void __RPC_STUB IHTMLInputTextElement_get_readOnly_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLInputTextElement_createTextRange_Proxy( 
    IHTMLInputTextElement * This,
    /* [out][retval] */ IHTMLTxtRange **range);


void __RPC_STUB IHTMLInputTextElement_createTextRange_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLInputTextElement_INTERFACE_DEFINED__ */


#ifndef __IHTMLInputFileElement_INTERFACE_DEFINED__
#define __IHTMLInputFileElement_INTERFACE_DEFINED__

/* interface IHTMLInputFileElement */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLInputFileElement;

    
    MIDL_INTERFACE("3050f2ad-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLInputFileElement : public IDispatch
    {
    public:
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_type( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_name( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_name( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_status( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_status( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_disabled( 
            /* [in] */ VARIANT_BOOL v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_disabled( 
            /* [out][retval] */ VARIANT_BOOL *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_form( 
            /* [out][retval] */ IHTMLFormElement **p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_size( 
            /* [in] */ long v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_size( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_maxLength( 
            /* [in] */ long v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_maxLength( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE select( void) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onchange( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onchange( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onselect( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onselect( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_value( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_value( 
            /* [out][retval] */ BSTR *p) = 0;
        
    };
    



/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLInputFileElement_get_type_Proxy( 
    IHTMLInputFileElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLInputFileElement_get_type_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLInputFileElement_put_name_Proxy( 
    IHTMLInputFileElement * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLInputFileElement_put_name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLInputFileElement_get_name_Proxy( 
    IHTMLInputFileElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLInputFileElement_get_name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLInputFileElement_put_status_Proxy( 
    IHTMLInputFileElement * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLInputFileElement_put_status_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLInputFileElement_get_status_Proxy( 
    IHTMLInputFileElement * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLInputFileElement_get_status_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLInputFileElement_put_disabled_Proxy( 
    IHTMLInputFileElement * This,
    /* [in] */ VARIANT_BOOL v);


void __RPC_STUB IHTMLInputFileElement_put_disabled_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLInputFileElement_get_disabled_Proxy( 
    IHTMLInputFileElement * This,
    /* [out][retval] */ VARIANT_BOOL *p);


void __RPC_STUB IHTMLInputFileElement_get_disabled_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLInputFileElement_get_form_Proxy( 
    IHTMLInputFileElement * This,
    /* [out][retval] */ IHTMLFormElement **p);


void __RPC_STUB IHTMLInputFileElement_get_form_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLInputFileElement_put_size_Proxy( 
    IHTMLInputFileElement * This,
    /* [in] */ long v);


void __RPC_STUB IHTMLInputFileElement_put_size_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLInputFileElement_get_size_Proxy( 
    IHTMLInputFileElement * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLInputFileElement_get_size_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLInputFileElement_put_maxLength_Proxy( 
    IHTMLInputFileElement * This,
    /* [in] */ long v);


void __RPC_STUB IHTMLInputFileElement_put_maxLength_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLInputFileElement_get_maxLength_Proxy( 
    IHTMLInputFileElement * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLInputFileElement_get_maxLength_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLInputFileElement_select_Proxy( 
    IHTMLInputFileElement * This);


void __RPC_STUB IHTMLInputFileElement_select_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLInputFileElement_put_onchange_Proxy( 
    IHTMLInputFileElement * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLInputFileElement_put_onchange_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLInputFileElement_get_onchange_Proxy( 
    IHTMLInputFileElement * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLInputFileElement_get_onchange_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLInputFileElement_put_onselect_Proxy( 
    IHTMLInputFileElement * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLInputFileElement_put_onselect_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLInputFileElement_get_onselect_Proxy( 
    IHTMLInputFileElement * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLInputFileElement_get_onselect_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLInputFileElement_put_value_Proxy( 
    IHTMLInputFileElement * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLInputFileElement_put_value_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLInputFileElement_get_value_Proxy( 
    IHTMLInputFileElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLInputFileElement_get_value_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLInputFileElement_INTERFACE_DEFINED__ */


#ifndef __IHTMLOptionButtonElement_INTERFACE_DEFINED__
#define __IHTMLOptionButtonElement_INTERFACE_DEFINED__

/* interface IHTMLOptionButtonElement */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLOptionButtonElement;

    
    MIDL_INTERFACE("3050f2bc-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLOptionButtonElement : public IDispatch
    {
    public:
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_value( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_value( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_type( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_name( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_name( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][id][propput] */ HRESULT STDMETHODCALLTYPE put_checked( 
            /* [in] */ VARIANT_BOOL v) = 0;
        
        virtual /* [bindable][id][propget] */ HRESULT STDMETHODCALLTYPE get_checked( 
            /* [out][retval] */ VARIANT_BOOL *p) = 0;
        
        virtual /* [bindable][id][propput] */ HRESULT STDMETHODCALLTYPE put_defaultChecked( 
            /* [in] */ VARIANT_BOOL v) = 0;
        
        virtual /* [bindable][id][propget] */ HRESULT STDMETHODCALLTYPE get_defaultChecked( 
            /* [out][retval] */ VARIANT_BOOL *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onchange( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onchange( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_disabled( 
            /* [in] */ VARIANT_BOOL v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_disabled( 
            /* [out][retval] */ VARIANT_BOOL *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_status( 
            /* [in] */ VARIANT_BOOL v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_status( 
            /* [out][retval] */ VARIANT_BOOL *p) = 0;
        
        virtual /* [bindable][id][propput] */ HRESULT STDMETHODCALLTYPE put_indeterminate( 
            /* [in] */ VARIANT_BOOL v) = 0;
        
        virtual /* [bindable][id][propget] */ HRESULT STDMETHODCALLTYPE get_indeterminate( 
            /* [out][retval] */ VARIANT_BOOL *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_form( 
            /* [out][retval] */ IHTMLFormElement **p) = 0;
        
    };
    



/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLOptionButtonElement_put_value_Proxy( 
    IHTMLOptionButtonElement * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLOptionButtonElement_put_value_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLOptionButtonElement_get_value_Proxy( 
    IHTMLOptionButtonElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLOptionButtonElement_get_value_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLOptionButtonElement_get_type_Proxy( 
    IHTMLOptionButtonElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLOptionButtonElement_get_type_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLOptionButtonElement_put_name_Proxy( 
    IHTMLOptionButtonElement * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLOptionButtonElement_put_name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLOptionButtonElement_get_name_Proxy( 
    IHTMLOptionButtonElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLOptionButtonElement_get_name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLOptionButtonElement_put_checked_Proxy( 
    IHTMLOptionButtonElement * This,
    /* [in] */ VARIANT_BOOL v);


void __RPC_STUB IHTMLOptionButtonElement_put_checked_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLOptionButtonElement_get_checked_Proxy( 
    IHTMLOptionButtonElement * This,
    /* [out][retval] */ VARIANT_BOOL *p);


void __RPC_STUB IHTMLOptionButtonElement_get_checked_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLOptionButtonElement_put_defaultChecked_Proxy( 
    IHTMLOptionButtonElement * This,
    /* [in] */ VARIANT_BOOL v);


void __RPC_STUB IHTMLOptionButtonElement_put_defaultChecked_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLOptionButtonElement_get_defaultChecked_Proxy( 
    IHTMLOptionButtonElement * This,
    /* [out][retval] */ VARIANT_BOOL *p);


void __RPC_STUB IHTMLOptionButtonElement_get_defaultChecked_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLOptionButtonElement_put_onchange_Proxy( 
    IHTMLOptionButtonElement * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLOptionButtonElement_put_onchange_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLOptionButtonElement_get_onchange_Proxy( 
    IHTMLOptionButtonElement * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLOptionButtonElement_get_onchange_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLOptionButtonElement_put_disabled_Proxy( 
    IHTMLOptionButtonElement * This,
    /* [in] */ VARIANT_BOOL v);


void __RPC_STUB IHTMLOptionButtonElement_put_disabled_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLOptionButtonElement_get_disabled_Proxy( 
    IHTMLOptionButtonElement * This,
    /* [out][retval] */ VARIANT_BOOL *p);


void __RPC_STUB IHTMLOptionButtonElement_get_disabled_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLOptionButtonElement_put_status_Proxy( 
    IHTMLOptionButtonElement * This,
    /* [in] */ VARIANT_BOOL v);


void __RPC_STUB IHTMLOptionButtonElement_put_status_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLOptionButtonElement_get_status_Proxy( 
    IHTMLOptionButtonElement * This,
    /* [out][retval] */ VARIANT_BOOL *p);


void __RPC_STUB IHTMLOptionButtonElement_get_status_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLOptionButtonElement_put_indeterminate_Proxy( 
    IHTMLOptionButtonElement * This,
    /* [in] */ VARIANT_BOOL v);


void __RPC_STUB IHTMLOptionButtonElement_put_indeterminate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLOptionButtonElement_get_indeterminate_Proxy( 
    IHTMLOptionButtonElement * This,
    /* [out][retval] */ VARIANT_BOOL *p);


void __RPC_STUB IHTMLOptionButtonElement_get_indeterminate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLOptionButtonElement_get_form_Proxy( 
    IHTMLOptionButtonElement * This,
    /* [out][retval] */ IHTMLFormElement **p);


void __RPC_STUB IHTMLOptionButtonElement_get_form_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLOptionButtonElement_INTERFACE_DEFINED__ */


#ifndef __IHTMLInputImage_INTERFACE_DEFINED__
#define __IHTMLInputImage_INTERFACE_DEFINED__

/* interface IHTMLInputImage */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLInputImage;

    
    MIDL_INTERFACE("3050f2c2-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLInputImage : public IDispatch
    {
    public:
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_type( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_disabled( 
            /* [in] */ VARIANT_BOOL v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_disabled( 
            /* [out][retval] */ VARIANT_BOOL *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_border( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_border( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_vspace( 
            /* [in] */ long v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_vspace( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_hspace( 
            /* [in] */ long v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_hspace( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_alt( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_alt( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_src( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_src( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_lowsrc( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_lowsrc( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_vrml( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_vrml( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_dynsrc( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_dynsrc( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_readyState( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_complete( 
            /* [out][retval] */ VARIANT_BOOL *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_loop( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_loop( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_align( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_align( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onload( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onload( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onerror( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onerror( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onabort( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onabort( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_name( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_name( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_width( 
            /* [in] */ long v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_width( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_height( 
            /* [in] */ long v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_height( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_start( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_start( 
            /* [out][retval] */ BSTR *p) = 0;
        
    };
    



/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLInputImage_get_type_Proxy( 
    IHTMLInputImage * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLInputImage_get_type_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLInputImage_put_disabled_Proxy( 
    IHTMLInputImage * This,
    /* [in] */ VARIANT_BOOL v);


void __RPC_STUB IHTMLInputImage_put_disabled_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLInputImage_get_disabled_Proxy( 
    IHTMLInputImage * This,
    /* [out][retval] */ VARIANT_BOOL *p);


void __RPC_STUB IHTMLInputImage_get_disabled_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLInputImage_put_border_Proxy( 
    IHTMLInputImage * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLInputImage_put_border_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLInputImage_get_border_Proxy( 
    IHTMLInputImage * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLInputImage_get_border_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLInputImage_put_vspace_Proxy( 
    IHTMLInputImage * This,
    /* [in] */ long v);


void __RPC_STUB IHTMLInputImage_put_vspace_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLInputImage_get_vspace_Proxy( 
    IHTMLInputImage * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLInputImage_get_vspace_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLInputImage_put_hspace_Proxy( 
    IHTMLInputImage * This,
    /* [in] */ long v);


void __RPC_STUB IHTMLInputImage_put_hspace_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLInputImage_get_hspace_Proxy( 
    IHTMLInputImage * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLInputImage_get_hspace_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLInputImage_put_alt_Proxy( 
    IHTMLInputImage * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLInputImage_put_alt_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLInputImage_get_alt_Proxy( 
    IHTMLInputImage * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLInputImage_get_alt_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLInputImage_put_src_Proxy( 
    IHTMLInputImage * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLInputImage_put_src_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLInputImage_get_src_Proxy( 
    IHTMLInputImage * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLInputImage_get_src_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLInputImage_put_lowsrc_Proxy( 
    IHTMLInputImage * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLInputImage_put_lowsrc_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLInputImage_get_lowsrc_Proxy( 
    IHTMLInputImage * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLInputImage_get_lowsrc_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLInputImage_put_vrml_Proxy( 
    IHTMLInputImage * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLInputImage_put_vrml_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLInputImage_get_vrml_Proxy( 
    IHTMLInputImage * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLInputImage_get_vrml_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLInputImage_put_dynsrc_Proxy( 
    IHTMLInputImage * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLInputImage_put_dynsrc_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLInputImage_get_dynsrc_Proxy( 
    IHTMLInputImage * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLInputImage_get_dynsrc_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLInputImage_get_readyState_Proxy( 
    IHTMLInputImage * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLInputImage_get_readyState_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLInputImage_get_complete_Proxy( 
    IHTMLInputImage * This,
    /* [out][retval] */ VARIANT_BOOL *p);


void __RPC_STUB IHTMLInputImage_get_complete_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLInputImage_put_loop_Proxy( 
    IHTMLInputImage * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLInputImage_put_loop_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLInputImage_get_loop_Proxy( 
    IHTMLInputImage * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLInputImage_get_loop_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLInputImage_put_align_Proxy( 
    IHTMLInputImage * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLInputImage_put_align_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLInputImage_get_align_Proxy( 
    IHTMLInputImage * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLInputImage_get_align_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLInputImage_put_onload_Proxy( 
    IHTMLInputImage * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLInputImage_put_onload_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLInputImage_get_onload_Proxy( 
    IHTMLInputImage * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLInputImage_get_onload_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLInputImage_put_onerror_Proxy( 
    IHTMLInputImage * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLInputImage_put_onerror_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLInputImage_get_onerror_Proxy( 
    IHTMLInputImage * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLInputImage_get_onerror_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLInputImage_put_onabort_Proxy( 
    IHTMLInputImage * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLInputImage_put_onabort_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLInputImage_get_onabort_Proxy( 
    IHTMLInputImage * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLInputImage_get_onabort_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLInputImage_put_name_Proxy( 
    IHTMLInputImage * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLInputImage_put_name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLInputImage_get_name_Proxy( 
    IHTMLInputImage * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLInputImage_get_name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLInputImage_put_width_Proxy( 
    IHTMLInputImage * This,
    /* [in] */ long v);


void __RPC_STUB IHTMLInputImage_put_width_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLInputImage_get_width_Proxy( 
    IHTMLInputImage * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLInputImage_get_width_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLInputImage_put_height_Proxy( 
    IHTMLInputImage * This,
    /* [in] */ long v);


void __RPC_STUB IHTMLInputImage_put_height_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLInputImage_get_height_Proxy( 
    IHTMLInputImage * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLInputImage_get_height_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLInputImage_put_start_Proxy( 
    IHTMLInputImage * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLInputImage_put_start_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLInputImage_get_start_Proxy( 
    IHTMLInputImage * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLInputImage_get_start_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLInputImage_INTERFACE_DEFINED__ */


#ifndef __DispHTMLInputElement_DISPINTERFACE_DEFINED__
#define __DispHTMLInputElement_DISPINTERFACE_DEFINED__

/* dispinterface DispHTMLInputElement */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_DispHTMLInputElement;


    MIDL_INTERFACE("3050f57d-98b5-11cf-bb82-00aa00bdce0b")
    DispHTMLInputElement : public IDispatch
    {
    };
    


#endif 	/* __DispHTMLInputElement_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_HTMLInputElement;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f5d8-98b5-11cf-bb82-00aa00bdce0b")
HTMLInputElement;
#endif

#ifndef __IHTMLTextAreaElement_INTERFACE_DEFINED__
#define __IHTMLTextAreaElement_INTERFACE_DEFINED__

/* interface IHTMLTextAreaElement */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLTextAreaElement;

    
    MIDL_INTERFACE("3050f2aa-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLTextAreaElement : public IDispatch
    {
    public:
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_type( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_value( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_value( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_name( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_name( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_status( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_status( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_disabled( 
            /* [in] */ VARIANT_BOOL v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_disabled( 
            /* [out][retval] */ VARIANT_BOOL *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_form( 
            /* [out][retval] */ IHTMLFormElement **p) = 0;
        
        virtual /* [hidden][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_defaultValue( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [hidden][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_defaultValue( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE select( void) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onchange( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onchange( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onselect( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onselect( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_readOnly( 
            /* [in] */ VARIANT_BOOL v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_readOnly( 
            /* [out][retval] */ VARIANT_BOOL *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_rows( 
            /* [in] */ long v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_rows( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_cols( 
            /* [in] */ long v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_cols( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_wrap( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_wrap( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE createTextRange( 
            /* [out][retval] */ IHTMLTxtRange **range) = 0;
        
    };
    



/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLTextAreaElement_get_type_Proxy( 
    IHTMLTextAreaElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLTextAreaElement_get_type_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLTextAreaElement_put_value_Proxy( 
    IHTMLTextAreaElement * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLTextAreaElement_put_value_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLTextAreaElement_get_value_Proxy( 
    IHTMLTextAreaElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLTextAreaElement_get_value_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLTextAreaElement_put_name_Proxy( 
    IHTMLTextAreaElement * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLTextAreaElement_put_name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLTextAreaElement_get_name_Proxy( 
    IHTMLTextAreaElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLTextAreaElement_get_name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLTextAreaElement_put_status_Proxy( 
    IHTMLTextAreaElement * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLTextAreaElement_put_status_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLTextAreaElement_get_status_Proxy( 
    IHTMLTextAreaElement * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLTextAreaElement_get_status_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLTextAreaElement_put_disabled_Proxy( 
    IHTMLTextAreaElement * This,
    /* [in] */ VARIANT_BOOL v);


void __RPC_STUB IHTMLTextAreaElement_put_disabled_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLTextAreaElement_get_disabled_Proxy( 
    IHTMLTextAreaElement * This,
    /* [out][retval] */ VARIANT_BOOL *p);


void __RPC_STUB IHTMLTextAreaElement_get_disabled_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLTextAreaElement_get_form_Proxy( 
    IHTMLTextAreaElement * This,
    /* [out][retval] */ IHTMLFormElement **p);


void __RPC_STUB IHTMLTextAreaElement_get_form_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [hidden][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLTextAreaElement_put_defaultValue_Proxy( 
    IHTMLTextAreaElement * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLTextAreaElement_put_defaultValue_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [hidden][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLTextAreaElement_get_defaultValue_Proxy( 
    IHTMLTextAreaElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLTextAreaElement_get_defaultValue_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLTextAreaElement_select_Proxy( 
    IHTMLTextAreaElement * This);


void __RPC_STUB IHTMLTextAreaElement_select_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLTextAreaElement_put_onchange_Proxy( 
    IHTMLTextAreaElement * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLTextAreaElement_put_onchange_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLTextAreaElement_get_onchange_Proxy( 
    IHTMLTextAreaElement * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLTextAreaElement_get_onchange_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLTextAreaElement_put_onselect_Proxy( 
    IHTMLTextAreaElement * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLTextAreaElement_put_onselect_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLTextAreaElement_get_onselect_Proxy( 
    IHTMLTextAreaElement * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLTextAreaElement_get_onselect_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLTextAreaElement_put_readOnly_Proxy( 
    IHTMLTextAreaElement * This,
    /* [in] */ VARIANT_BOOL v);


void __RPC_STUB IHTMLTextAreaElement_put_readOnly_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLTextAreaElement_get_readOnly_Proxy( 
    IHTMLTextAreaElement * This,
    /* [out][retval] */ VARIANT_BOOL *p);


void __RPC_STUB IHTMLTextAreaElement_get_readOnly_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLTextAreaElement_put_rows_Proxy( 
    IHTMLTextAreaElement * This,
    /* [in] */ long v);


void __RPC_STUB IHTMLTextAreaElement_put_rows_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLTextAreaElement_get_rows_Proxy( 
    IHTMLTextAreaElement * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLTextAreaElement_get_rows_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLTextAreaElement_put_cols_Proxy( 
    IHTMLTextAreaElement * This,
    /* [in] */ long v);


void __RPC_STUB IHTMLTextAreaElement_put_cols_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLTextAreaElement_get_cols_Proxy( 
    IHTMLTextAreaElement * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLTextAreaElement_get_cols_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLTextAreaElement_put_wrap_Proxy( 
    IHTMLTextAreaElement * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLTextAreaElement_put_wrap_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLTextAreaElement_get_wrap_Proxy( 
    IHTMLTextAreaElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLTextAreaElement_get_wrap_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLTextAreaElement_createTextRange_Proxy( 
    IHTMLTextAreaElement * This,
    /* [out][retval] */ IHTMLTxtRange **range);


void __RPC_STUB IHTMLTextAreaElement_createTextRange_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLTextAreaElement_INTERFACE_DEFINED__ */


#ifndef __DispHTMLTextAreaElement_DISPINTERFACE_DEFINED__
#define __DispHTMLTextAreaElement_DISPINTERFACE_DEFINED__

/* dispinterface DispHTMLTextAreaElement */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_DispHTMLTextAreaElement;


    MIDL_INTERFACE("3050f521-98b5-11cf-bb82-00aa00bdce0b")
    DispHTMLTextAreaElement : public IDispatch
    {
    };
    


#endif 	/* __DispHTMLTextAreaElement_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_HTMLTextAreaElement;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f2ac-98b5-11cf-bb82-00aa00bdce0b")
HTMLTextAreaElement;
#endif

#ifndef __DispHTMLRichtextElement_DISPINTERFACE_DEFINED__
#define __DispHTMLRichtextElement_DISPINTERFACE_DEFINED__

/* dispinterface DispHTMLRichtextElement */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_DispHTMLRichtextElement;


    MIDL_INTERFACE("3050f54d-98b5-11cf-bb82-00aa00bdce0b")
    DispHTMLRichtextElement : public IDispatch
    {
    };
    


#endif 	/* __DispHTMLRichtextElement_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_HTMLRichtextElement;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f2df-98b5-11cf-bb82-00aa00bdce0b")
HTMLRichtextElement;
#endif

#ifndef __IHTMLButtonElement_INTERFACE_DEFINED__
#define __IHTMLButtonElement_INTERFACE_DEFINED__

/* interface IHTMLButtonElement */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLButtonElement;

    
    MIDL_INTERFACE("3050f2bb-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLButtonElement : public IDispatch
    {
    public:
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_type( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_value( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_value( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_name( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_name( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_status( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_status( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_disabled( 
            /* [in] */ VARIANT_BOOL v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_disabled( 
            /* [out][retval] */ VARIANT_BOOL *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_form( 
            /* [out][retval] */ IHTMLFormElement **p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE createTextRange( 
            /* [out][retval] */ IHTMLTxtRange **range) = 0;
        
    };
    



/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLButtonElement_get_type_Proxy( 
    IHTMLButtonElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLButtonElement_get_type_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLButtonElement_put_value_Proxy( 
    IHTMLButtonElement * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLButtonElement_put_value_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLButtonElement_get_value_Proxy( 
    IHTMLButtonElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLButtonElement_get_value_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLButtonElement_put_name_Proxy( 
    IHTMLButtonElement * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLButtonElement_put_name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLButtonElement_get_name_Proxy( 
    IHTMLButtonElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLButtonElement_get_name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLButtonElement_put_status_Proxy( 
    IHTMLButtonElement * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLButtonElement_put_status_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLButtonElement_get_status_Proxy( 
    IHTMLButtonElement * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLButtonElement_get_status_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLButtonElement_put_disabled_Proxy( 
    IHTMLButtonElement * This,
    /* [in] */ VARIANT_BOOL v);


void __RPC_STUB IHTMLButtonElement_put_disabled_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLButtonElement_get_disabled_Proxy( 
    IHTMLButtonElement * This,
    /* [out][retval] */ VARIANT_BOOL *p);


void __RPC_STUB IHTMLButtonElement_get_disabled_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLButtonElement_get_form_Proxy( 
    IHTMLButtonElement * This,
    /* [out][retval] */ IHTMLFormElement **p);


void __RPC_STUB IHTMLButtonElement_get_form_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLButtonElement_createTextRange_Proxy( 
    IHTMLButtonElement * This,
    /* [out][retval] */ IHTMLTxtRange **range);


void __RPC_STUB IHTMLButtonElement_createTextRange_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLButtonElement_INTERFACE_DEFINED__ */


#ifndef __DispHTMLButtonElement_DISPINTERFACE_DEFINED__
#define __DispHTMLButtonElement_DISPINTERFACE_DEFINED__

/* dispinterface DispHTMLButtonElement */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_DispHTMLButtonElement;


    MIDL_INTERFACE("3050f51f-98b5-11cf-bb82-00aa00bdce0b")
    DispHTMLButtonElement : public IDispatch
    {
    };
    


#endif 	/* __DispHTMLButtonElement_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_HTMLButtonElement;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f2c6-98b5-11cf-bb82-00aa00bdce0b")
HTMLButtonElement;
#endif

#ifndef __HTMLMarqueeElementEvents2_DISPINTERFACE_DEFINED__
#define __HTMLMarqueeElementEvents2_DISPINTERFACE_DEFINED__

/* dispinterface HTMLMarqueeElementEvents2 */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_HTMLMarqueeElementEvents2;


    MIDL_INTERFACE("3050f61f-98b5-11cf-bb82-00aa00bdce0b")
    HTMLMarqueeElementEvents2 : public IDispatch
    {
    };
    


#endif 	/* __HTMLMarqueeElementEvents2_DISPINTERFACE_DEFINED__ */


#ifndef __HTMLMarqueeElementEvents_DISPINTERFACE_DEFINED__
#define __HTMLMarqueeElementEvents_DISPINTERFACE_DEFINED__

/* dispinterface HTMLMarqueeElementEvents */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_HTMLMarqueeElementEvents;


    MIDL_INTERFACE("3050f2b8-98b5-11cf-bb82-00aa00bdce0b")
    HTMLMarqueeElementEvents : public IDispatch
    {
    };
    


#endif 	/* __HTMLMarqueeElementEvents_DISPINTERFACE_DEFINED__ */


#ifndef __IHTMLMarqueeElement_INTERFACE_DEFINED__
#define __IHTMLMarqueeElement_INTERFACE_DEFINED__

/* interface IHTMLMarqueeElement */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLMarqueeElement;

    
    MIDL_INTERFACE("3050f2b5-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLMarqueeElement : public IDispatch
    {
    public:
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_bgColor( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_bgColor( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_scrollDelay( 
            /* [in] */ long v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_scrollDelay( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_direction( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_direction( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_behavior( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_behavior( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_scrollAmount( 
            /* [in] */ long v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_scrollAmount( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_loop( 
            /* [in] */ long v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_loop( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_vspace( 
            /* [in] */ long v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_vspace( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_hspace( 
            /* [in] */ long v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_hspace( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onfinish( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onfinish( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onstart( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onstart( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onbounce( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onbounce( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_width( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_width( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_height( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_height( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_trueSpeed( 
            /* [in] */ VARIANT_BOOL v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_trueSpeed( 
            /* [out][retval] */ VARIANT_BOOL *p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE start( void) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE stop( void) = 0;
        
    };
    



/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLMarqueeElement_put_bgColor_Proxy( 
    IHTMLMarqueeElement * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLMarqueeElement_put_bgColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLMarqueeElement_get_bgColor_Proxy( 
    IHTMLMarqueeElement * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLMarqueeElement_get_bgColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLMarqueeElement_put_scrollDelay_Proxy( 
    IHTMLMarqueeElement * This,
    /* [in] */ long v);


void __RPC_STUB IHTMLMarqueeElement_put_scrollDelay_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLMarqueeElement_get_scrollDelay_Proxy( 
    IHTMLMarqueeElement * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLMarqueeElement_get_scrollDelay_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLMarqueeElement_put_direction_Proxy( 
    IHTMLMarqueeElement * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLMarqueeElement_put_direction_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLMarqueeElement_get_direction_Proxy( 
    IHTMLMarqueeElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLMarqueeElement_get_direction_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLMarqueeElement_put_behavior_Proxy( 
    IHTMLMarqueeElement * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLMarqueeElement_put_behavior_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLMarqueeElement_get_behavior_Proxy( 
    IHTMLMarqueeElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLMarqueeElement_get_behavior_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLMarqueeElement_put_scrollAmount_Proxy( 
    IHTMLMarqueeElement * This,
    /* [in] */ long v);


void __RPC_STUB IHTMLMarqueeElement_put_scrollAmount_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLMarqueeElement_get_scrollAmount_Proxy( 
    IHTMLMarqueeElement * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLMarqueeElement_get_scrollAmount_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLMarqueeElement_put_loop_Proxy( 
    IHTMLMarqueeElement * This,
    /* [in] */ long v);


void __RPC_STUB IHTMLMarqueeElement_put_loop_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLMarqueeElement_get_loop_Proxy( 
    IHTMLMarqueeElement * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLMarqueeElement_get_loop_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLMarqueeElement_put_vspace_Proxy( 
    IHTMLMarqueeElement * This,
    /* [in] */ long v);


void __RPC_STUB IHTMLMarqueeElement_put_vspace_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLMarqueeElement_get_vspace_Proxy( 
    IHTMLMarqueeElement * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLMarqueeElement_get_vspace_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLMarqueeElement_put_hspace_Proxy( 
    IHTMLMarqueeElement * This,
    /* [in] */ long v);


void __RPC_STUB IHTMLMarqueeElement_put_hspace_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLMarqueeElement_get_hspace_Proxy( 
    IHTMLMarqueeElement * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLMarqueeElement_get_hspace_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLMarqueeElement_put_onfinish_Proxy( 
    IHTMLMarqueeElement * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLMarqueeElement_put_onfinish_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLMarqueeElement_get_onfinish_Proxy( 
    IHTMLMarqueeElement * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLMarqueeElement_get_onfinish_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLMarqueeElement_put_onstart_Proxy( 
    IHTMLMarqueeElement * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLMarqueeElement_put_onstart_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLMarqueeElement_get_onstart_Proxy( 
    IHTMLMarqueeElement * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLMarqueeElement_get_onstart_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLMarqueeElement_put_onbounce_Proxy( 
    IHTMLMarqueeElement * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLMarqueeElement_put_onbounce_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLMarqueeElement_get_onbounce_Proxy( 
    IHTMLMarqueeElement * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLMarqueeElement_get_onbounce_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLMarqueeElement_put_width_Proxy( 
    IHTMLMarqueeElement * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLMarqueeElement_put_width_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLMarqueeElement_get_width_Proxy( 
    IHTMLMarqueeElement * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLMarqueeElement_get_width_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLMarqueeElement_put_height_Proxy( 
    IHTMLMarqueeElement * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLMarqueeElement_put_height_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLMarqueeElement_get_height_Proxy( 
    IHTMLMarqueeElement * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLMarqueeElement_get_height_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLMarqueeElement_put_trueSpeed_Proxy( 
    IHTMLMarqueeElement * This,
    /* [in] */ VARIANT_BOOL v);


void __RPC_STUB IHTMLMarqueeElement_put_trueSpeed_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLMarqueeElement_get_trueSpeed_Proxy( 
    IHTMLMarqueeElement * This,
    /* [out][retval] */ VARIANT_BOOL *p);


void __RPC_STUB IHTMLMarqueeElement_get_trueSpeed_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLMarqueeElement_start_Proxy( 
    IHTMLMarqueeElement * This);


void __RPC_STUB IHTMLMarqueeElement_start_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLMarqueeElement_stop_Proxy( 
    IHTMLMarqueeElement * This);


void __RPC_STUB IHTMLMarqueeElement_stop_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLMarqueeElement_INTERFACE_DEFINED__ */


#ifndef __DispHTMLMarqueeElement_DISPINTERFACE_DEFINED__
#define __DispHTMLMarqueeElement_DISPINTERFACE_DEFINED__

/* dispinterface DispHTMLMarqueeElement */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_DispHTMLMarqueeElement;


    MIDL_INTERFACE("3050f527-98b5-11cf-bb82-00aa00bdce0b")
    DispHTMLMarqueeElement : public IDispatch
    {
    };
    


#endif 	/* __DispHTMLMarqueeElement_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_HTMLMarqueeElement;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f2b9-98b5-11cf-bb82-00aa00bdce0b")
HTMLMarqueeElement;
#endif

#ifndef __IHTMLHtmlElement_INTERFACE_DEFINED__
#define __IHTMLHtmlElement_INTERFACE_DEFINED__

/* interface IHTMLHtmlElement */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLHtmlElement;

    
    MIDL_INTERFACE("3050f81c-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLHtmlElement : public IDispatch
    {
    public:
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_version( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_version( 
            /* [out][retval] */ BSTR *p) = 0;
        
    };
    



/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLHtmlElement_put_version_Proxy( 
    IHTMLHtmlElement * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLHtmlElement_put_version_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLHtmlElement_get_version_Proxy( 
    IHTMLHtmlElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLHtmlElement_get_version_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLHtmlElement_INTERFACE_DEFINED__ */


#ifndef __IHTMLHeadElement_INTERFACE_DEFINED__
#define __IHTMLHeadElement_INTERFACE_DEFINED__

/* interface IHTMLHeadElement */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLHeadElement;

    
    MIDL_INTERFACE("3050f81d-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLHeadElement : public IDispatch
    {
    public:
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_profile( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_profile( 
            /* [out][retval] */ BSTR *p) = 0;
        
    };
    



/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLHeadElement_put_profile_Proxy( 
    IHTMLHeadElement * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLHeadElement_put_profile_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLHeadElement_get_profile_Proxy( 
    IHTMLHeadElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLHeadElement_get_profile_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLHeadElement_INTERFACE_DEFINED__ */


#ifndef __IHTMLTitleElement_INTERFACE_DEFINED__
#define __IHTMLTitleElement_INTERFACE_DEFINED__

/* interface IHTMLTitleElement */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLTitleElement;

    
    MIDL_INTERFACE("3050f322-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLTitleElement : public IDispatch
    {
    public:
        virtual /* [bindable][id][propput] */ HRESULT STDMETHODCALLTYPE put_text( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][id][propget] */ HRESULT STDMETHODCALLTYPE get_text( 
            /* [out][retval] */ BSTR *p) = 0;
        
    };
    



/* [bindable][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLTitleElement_put_text_Proxy( 
    IHTMLTitleElement * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLTitleElement_put_text_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLTitleElement_get_text_Proxy( 
    IHTMLTitleElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLTitleElement_get_text_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLTitleElement_INTERFACE_DEFINED__ */


#ifndef __IHTMLMetaElement_INTERFACE_DEFINED__
#define __IHTMLMetaElement_INTERFACE_DEFINED__

/* interface IHTMLMetaElement */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLMetaElement;

    
    MIDL_INTERFACE("3050f203-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLMetaElement : public IDispatch
    {
    public:
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_httpEquiv( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_httpEquiv( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_content( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_content( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_name( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_name( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_url( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_url( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_charset( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_charset( 
            /* [out][retval] */ BSTR *p) = 0;
        
    };
    



/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLMetaElement_put_httpEquiv_Proxy( 
    IHTMLMetaElement * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLMetaElement_put_httpEquiv_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLMetaElement_get_httpEquiv_Proxy( 
    IHTMLMetaElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLMetaElement_get_httpEquiv_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLMetaElement_put_content_Proxy( 
    IHTMLMetaElement * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLMetaElement_put_content_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLMetaElement_get_content_Proxy( 
    IHTMLMetaElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLMetaElement_get_content_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLMetaElement_put_name_Proxy( 
    IHTMLMetaElement * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLMetaElement_put_name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLMetaElement_get_name_Proxy( 
    IHTMLMetaElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLMetaElement_get_name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLMetaElement_put_url_Proxy( 
    IHTMLMetaElement * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLMetaElement_put_url_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLMetaElement_get_url_Proxy( 
    IHTMLMetaElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLMetaElement_get_url_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLMetaElement_put_charset_Proxy( 
    IHTMLMetaElement * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLMetaElement_put_charset_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLMetaElement_get_charset_Proxy( 
    IHTMLMetaElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLMetaElement_get_charset_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLMetaElement_INTERFACE_DEFINED__ */


#ifndef __IHTMLMetaElement2_INTERFACE_DEFINED__
#define __IHTMLMetaElement2_INTERFACE_DEFINED__

/* interface IHTMLMetaElement2 */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLMetaElement2;

    
    MIDL_INTERFACE("3050f81f-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLMetaElement2 : public IDispatch
    {
    public:
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_scheme( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_scheme( 
            /* [out][retval] */ BSTR *p) = 0;
        
    };
    



/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLMetaElement2_put_scheme_Proxy( 
    IHTMLMetaElement2 * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLMetaElement2_put_scheme_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLMetaElement2_get_scheme_Proxy( 
    IHTMLMetaElement2 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLMetaElement2_get_scheme_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLMetaElement2_INTERFACE_DEFINED__ */


#ifndef __IHTMLBaseElement_INTERFACE_DEFINED__
#define __IHTMLBaseElement_INTERFACE_DEFINED__

/* interface IHTMLBaseElement */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLBaseElement;

    
    MIDL_INTERFACE("3050f204-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLBaseElement : public IDispatch
    {
    public:
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_href( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_href( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_target( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_target( 
            /* [out][retval] */ BSTR *p) = 0;
        
    };
    



/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLBaseElement_put_href_Proxy( 
    IHTMLBaseElement * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLBaseElement_put_href_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLBaseElement_get_href_Proxy( 
    IHTMLBaseElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLBaseElement_get_href_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLBaseElement_put_target_Proxy( 
    IHTMLBaseElement * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLBaseElement_put_target_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLBaseElement_get_target_Proxy( 
    IHTMLBaseElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLBaseElement_get_target_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLBaseElement_INTERFACE_DEFINED__ */


#ifndef __IHTMLIsIndexElement_INTERFACE_DEFINED__
#define __IHTMLIsIndexElement_INTERFACE_DEFINED__

/* interface IHTMLIsIndexElement */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLIsIndexElement;

    
    MIDL_INTERFACE("3050f206-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLIsIndexElement : public IDispatch
    {
    public:
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_prompt( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_prompt( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_action( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_action( 
            /* [out][retval] */ BSTR *p) = 0;
        
    };
    



/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLIsIndexElement_put_prompt_Proxy( 
    IHTMLIsIndexElement * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLIsIndexElement_put_prompt_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLIsIndexElement_get_prompt_Proxy( 
    IHTMLIsIndexElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLIsIndexElement_get_prompt_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLIsIndexElement_put_action_Proxy( 
    IHTMLIsIndexElement * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLIsIndexElement_put_action_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLIsIndexElement_get_action_Proxy( 
    IHTMLIsIndexElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLIsIndexElement_get_action_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLIsIndexElement_INTERFACE_DEFINED__ */


#ifndef __IHTMLIsIndexElement2_INTERFACE_DEFINED__
#define __IHTMLIsIndexElement2_INTERFACE_DEFINED__

/* interface IHTMLIsIndexElement2 */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLIsIndexElement2;

    
    MIDL_INTERFACE("3050f82f-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLIsIndexElement2 : public IDispatch
    {
    public:
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_form( 
            /* [out][retval] */ IHTMLFormElement **p) = 0;
        
    };
    



/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLIsIndexElement2_get_form_Proxy( 
    IHTMLIsIndexElement2 * This,
    /* [out][retval] */ IHTMLFormElement **p);


void __RPC_STUB IHTMLIsIndexElement2_get_form_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLIsIndexElement2_INTERFACE_DEFINED__ */


#ifndef __IHTMLNextIdElement_INTERFACE_DEFINED__
#define __IHTMLNextIdElement_INTERFACE_DEFINED__

/* interface IHTMLNextIdElement */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLNextIdElement;

    
    MIDL_INTERFACE("3050f207-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLNextIdElement : public IDispatch
    {
    public:
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_n( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_n( 
            /* [out][retval] */ BSTR *p) = 0;
        
    };
    



/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLNextIdElement_put_n_Proxy( 
    IHTMLNextIdElement * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLNextIdElement_put_n_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLNextIdElement_get_n_Proxy( 
    IHTMLNextIdElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLNextIdElement_get_n_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLNextIdElement_INTERFACE_DEFINED__ */


#ifndef __DispHTMLHtmlElement_DISPINTERFACE_DEFINED__
#define __DispHTMLHtmlElement_DISPINTERFACE_DEFINED__

/* dispinterface DispHTMLHtmlElement */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_DispHTMLHtmlElement;


    MIDL_INTERFACE("3050f560-98b5-11cf-bb82-00aa00bdce0b")
    DispHTMLHtmlElement : public IDispatch
    {
    };
    


#endif 	/* __DispHTMLHtmlElement_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_HTMLHtmlElement;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f491-98b5-11cf-bb82-00aa00bdce0b")
HTMLHtmlElement;
#endif

#ifndef __DispHTMLHeadElement_DISPINTERFACE_DEFINED__
#define __DispHTMLHeadElement_DISPINTERFACE_DEFINED__

/* dispinterface DispHTMLHeadElement */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_DispHTMLHeadElement;


    MIDL_INTERFACE("3050f561-98b5-11cf-bb82-00aa00bdce0b")
    DispHTMLHeadElement : public IDispatch
    {
    };
    


#endif 	/* __DispHTMLHeadElement_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_HTMLHeadElement;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f493-98b5-11cf-bb82-00aa00bdce0b")
HTMLHeadElement;
#endif

#ifndef __DispHTMLTitleElement_DISPINTERFACE_DEFINED__
#define __DispHTMLTitleElement_DISPINTERFACE_DEFINED__

/* dispinterface DispHTMLTitleElement */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_DispHTMLTitleElement;


    MIDL_INTERFACE("3050f516-98b5-11cf-bb82-00aa00bdce0b")
    DispHTMLTitleElement : public IDispatch
    {
    };
    


#endif 	/* __DispHTMLTitleElement_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_HTMLTitleElement;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f284-98b5-11cf-bb82-00aa00bdce0b")
HTMLTitleElement;
#endif

#ifndef __DispHTMLMetaElement_DISPINTERFACE_DEFINED__
#define __DispHTMLMetaElement_DISPINTERFACE_DEFINED__

/* dispinterface DispHTMLMetaElement */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_DispHTMLMetaElement;


    MIDL_INTERFACE("3050f517-98b5-11cf-bb82-00aa00bdce0b")
    DispHTMLMetaElement : public IDispatch
    {
    };
    


#endif 	/* __DispHTMLMetaElement_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_HTMLMetaElement;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f275-98b5-11cf-bb82-00aa00bdce0b")
HTMLMetaElement;
#endif

#ifndef __DispHTMLBaseElement_DISPINTERFACE_DEFINED__
#define __DispHTMLBaseElement_DISPINTERFACE_DEFINED__

/* dispinterface DispHTMLBaseElement */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_DispHTMLBaseElement;


    MIDL_INTERFACE("3050f518-98b5-11cf-bb82-00aa00bdce0b")
    DispHTMLBaseElement : public IDispatch
    {
    };
    


#endif 	/* __DispHTMLBaseElement_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_HTMLBaseElement;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f276-98b5-11cf-bb82-00aa00bdce0b")
HTMLBaseElement;
#endif

#ifndef __DispHTMLIsIndexElement_DISPINTERFACE_DEFINED__
#define __DispHTMLIsIndexElement_DISPINTERFACE_DEFINED__

/* dispinterface DispHTMLIsIndexElement */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_DispHTMLIsIndexElement;


    MIDL_INTERFACE("3050f519-98b5-11cf-bb82-00aa00bdce0b")
    DispHTMLIsIndexElement : public IDispatch
    {
    };
    


#endif 	/* __DispHTMLIsIndexElement_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_HTMLIsIndexElement;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f278-98b5-11cf-bb82-00aa00bdce0b")
HTMLIsIndexElement;
#endif

#ifndef __DispHTMLNextIdElement_DISPINTERFACE_DEFINED__
#define __DispHTMLNextIdElement_DISPINTERFACE_DEFINED__

/* dispinterface DispHTMLNextIdElement */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_DispHTMLNextIdElement;


    MIDL_INTERFACE("3050f51a-98b5-11cf-bb82-00aa00bdce0b")
    DispHTMLNextIdElement : public IDispatch
    {
    };
    


#endif 	/* __DispHTMLNextIdElement_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_HTMLNextIdElement;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f279-98b5-11cf-bb82-00aa00bdce0b")
HTMLNextIdElement;
#endif

#ifndef __IHTMLBaseFontElement_INTERFACE_DEFINED__
#define __IHTMLBaseFontElement_INTERFACE_DEFINED__

/* interface IHTMLBaseFontElement */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLBaseFontElement;

    
    MIDL_INTERFACE("3050f202-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLBaseFontElement : public IDispatch
    {
    public:
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_color( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_color( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_face( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_face( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_size( 
            /* [in] */ long v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_size( 
            /* [out][retval] */ long *p) = 0;
        
    };
    



/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLBaseFontElement_put_color_Proxy( 
    IHTMLBaseFontElement * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLBaseFontElement_put_color_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLBaseFontElement_get_color_Proxy( 
    IHTMLBaseFontElement * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLBaseFontElement_get_color_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLBaseFontElement_put_face_Proxy( 
    IHTMLBaseFontElement * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLBaseFontElement_put_face_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLBaseFontElement_get_face_Proxy( 
    IHTMLBaseFontElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLBaseFontElement_get_face_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLBaseFontElement_put_size_Proxy( 
    IHTMLBaseFontElement * This,
    /* [in] */ long v);


void __RPC_STUB IHTMLBaseFontElement_put_size_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLBaseFontElement_get_size_Proxy( 
    IHTMLBaseFontElement * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLBaseFontElement_get_size_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLBaseFontElement_INTERFACE_DEFINED__ */


#ifndef __DispHTMLBaseFontElement_DISPINTERFACE_DEFINED__
#define __DispHTMLBaseFontElement_DISPINTERFACE_DEFINED__

/* dispinterface DispHTMLBaseFontElement */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_DispHTMLBaseFontElement;


    MIDL_INTERFACE("3050f504-98b5-11cf-bb82-00aa00bdce0b")
    DispHTMLBaseFontElement : public IDispatch
    {
    };
    


#endif 	/* __DispHTMLBaseFontElement_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_HTMLBaseFontElement;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f282-98b5-11cf-bb82-00aa00bdce0b")
HTMLBaseFontElement;
#endif

#ifndef __IHTMLUnknownElement_INTERFACE_DEFINED__
#define __IHTMLUnknownElement_INTERFACE_DEFINED__

/* interface IHTMLUnknownElement */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLUnknownElement;

    
    MIDL_INTERFACE("3050f209-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLUnknownElement : public IDispatch
    {
    public:
    };
    




#endif 	/* __IHTMLUnknownElement_INTERFACE_DEFINED__ */


#ifndef __DispHTMLUnknownElement_DISPINTERFACE_DEFINED__
#define __DispHTMLUnknownElement_DISPINTERFACE_DEFINED__

/* dispinterface DispHTMLUnknownElement */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_DispHTMLUnknownElement;


    MIDL_INTERFACE("3050f539-98b5-11cf-bb82-00aa00bdce0b")
    DispHTMLUnknownElement : public IDispatch
    {
    };
    


#endif 	/* __DispHTMLUnknownElement_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_HTMLUnknownElement;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f268-98b5-11cf-bb82-00aa00bdce0b")
HTMLUnknownElement;
#endif

#ifndef __IOmHistory_INTERFACE_DEFINED__
#define __IOmHistory_INTERFACE_DEFINED__

/* interface IOmHistory */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IOmHistory;

    
    MIDL_INTERFACE("FECEAAA2-8405-11cf-8BA1-00AA00476DA6")
    IOmHistory : public IDispatch
    {
    public:
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_length( 
            /* [out][retval] */ short *p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE back( 
            /* [in][optional] */ VARIANT *pvargdistance) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE forward( 
            /* [in][optional] */ VARIANT *pvargdistance) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE go( 
            /* [in][optional] */ VARIANT *pvargdistance) = 0;
        
    };
    



/* [id][propget] */ HRESULT STDMETHODCALLTYPE IOmHistory_get_length_Proxy( 
    IOmHistory * This,
    /* [out][retval] */ short *p);


void __RPC_STUB IOmHistory_get_length_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IOmHistory_back_Proxy( 
    IOmHistory * This,
    /* [in][optional] */ VARIANT *pvargdistance);


void __RPC_STUB IOmHistory_back_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IOmHistory_forward_Proxy( 
    IOmHistory * This,
    /* [in][optional] */ VARIANT *pvargdistance);


void __RPC_STUB IOmHistory_forward_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IOmHistory_go_Proxy( 
    IOmHistory * This,
    /* [in][optional] */ VARIANT *pvargdistance);


void __RPC_STUB IOmHistory_go_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IOmHistory_INTERFACE_DEFINED__ */


#ifndef __IHTMLMimeTypesCollection_INTERFACE_DEFINED__
#define __IHTMLMimeTypesCollection_INTERFACE_DEFINED__

/* interface IHTMLMimeTypesCollection */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLMimeTypesCollection;

    
    MIDL_INTERFACE("3050f3fc-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLMimeTypesCollection : public IDispatch
    {
    public:
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_length( 
            /* [out][retval] */ long *p) = 0;
        
    };
    



/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLMimeTypesCollection_get_length_Proxy( 
    IHTMLMimeTypesCollection * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLMimeTypesCollection_get_length_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLMimeTypesCollection_INTERFACE_DEFINED__ */


#ifndef __IHTMLPluginsCollection_INTERFACE_DEFINED__
#define __IHTMLPluginsCollection_INTERFACE_DEFINED__

/* interface IHTMLPluginsCollection */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLPluginsCollection;

    
    MIDL_INTERFACE("3050f3fd-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLPluginsCollection : public IDispatch
    {
    public:
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_length( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE refresh( 
            /* [in][defaultvalue] */ VARIANT_BOOL reload = 0) = 0;
        
    };
    



/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLPluginsCollection_get_length_Proxy( 
    IHTMLPluginsCollection * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLPluginsCollection_get_length_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLPluginsCollection_refresh_Proxy( 
    IHTMLPluginsCollection * This,
    /* [in][defaultvalue] */ VARIANT_BOOL reload);


void __RPC_STUB IHTMLPluginsCollection_refresh_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLPluginsCollection_INTERFACE_DEFINED__ */


#ifndef __IHTMLOpsProfile_INTERFACE_DEFINED__
#define __IHTMLOpsProfile_INTERFACE_DEFINED__

/* interface IHTMLOpsProfile */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLOpsProfile;

    
    MIDL_INTERFACE("3050f401-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLOpsProfile : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE addRequest( 
            /* [in] */ BSTR name,
            /* [in][optional] */ VARIANT reserved,
            /* [out][retval] */ VARIANT_BOOL *success) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE clearRequest( void) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE doRequest( 
            /* [in] */ VARIANT usage,
            /* [in][optional] */ VARIANT fname,
            /* [in][optional] */ VARIANT domain,
            /* [in][optional] */ VARIANT path,
            /* [in][optional] */ VARIANT expire,
            /* [in][optional] */ VARIANT reserved) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE getAttribute( 
            /* [in] */ BSTR name,
            /* [out][retval] */ BSTR *value) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE setAttribute( 
            /* [in] */ BSTR name,
            /* [in] */ BSTR value,
            /* [in][optional] */ VARIANT prefs,
            /* [out][retval] */ VARIANT_BOOL *success) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE commitChanges( 
            /* [out][retval] */ VARIANT_BOOL *success) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE addReadRequest( 
            /* [in] */ BSTR name,
            /* [in][optional] */ VARIANT reserved,
            /* [out][retval] */ VARIANT_BOOL *success) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE doReadRequest( 
            /* [in] */ VARIANT usage,
            /* [in][optional] */ VARIANT fname,
            /* [in][optional] */ VARIANT domain,
            /* [in][optional] */ VARIANT path,
            /* [in][optional] */ VARIANT expire,
            /* [in][optional] */ VARIANT reserved) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE doWriteRequest( 
            /* [out][retval] */ VARIANT_BOOL *success) = 0;
        
    };
    



/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLOpsProfile_addRequest_Proxy( 
    IHTMLOpsProfile * This,
    /* [in] */ BSTR name,
    /* [in][optional] */ VARIANT reserved,
    /* [out][retval] */ VARIANT_BOOL *success);


void __RPC_STUB IHTMLOpsProfile_addRequest_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLOpsProfile_clearRequest_Proxy( 
    IHTMLOpsProfile * This);


void __RPC_STUB IHTMLOpsProfile_clearRequest_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLOpsProfile_doRequest_Proxy( 
    IHTMLOpsProfile * This,
    /* [in] */ VARIANT usage,
    /* [in][optional] */ VARIANT fname,
    /* [in][optional] */ VARIANT domain,
    /* [in][optional] */ VARIANT path,
    /* [in][optional] */ VARIANT expire,
    /* [in][optional] */ VARIANT reserved);


void __RPC_STUB IHTMLOpsProfile_doRequest_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLOpsProfile_getAttribute_Proxy( 
    IHTMLOpsProfile * This,
    /* [in] */ BSTR name,
    /* [out][retval] */ BSTR *value);


void __RPC_STUB IHTMLOpsProfile_getAttribute_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLOpsProfile_setAttribute_Proxy( 
    IHTMLOpsProfile * This,
    /* [in] */ BSTR name,
    /* [in] */ BSTR value,
    /* [in][optional] */ VARIANT prefs,
    /* [out][retval] */ VARIANT_BOOL *success);


void __RPC_STUB IHTMLOpsProfile_setAttribute_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLOpsProfile_commitChanges_Proxy( 
    IHTMLOpsProfile * This,
    /* [out][retval] */ VARIANT_BOOL *success);


void __RPC_STUB IHTMLOpsProfile_commitChanges_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLOpsProfile_addReadRequest_Proxy( 
    IHTMLOpsProfile * This,
    /* [in] */ BSTR name,
    /* [in][optional] */ VARIANT reserved,
    /* [out][retval] */ VARIANT_BOOL *success);


void __RPC_STUB IHTMLOpsProfile_addReadRequest_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLOpsProfile_doReadRequest_Proxy( 
    IHTMLOpsProfile * This,
    /* [in] */ VARIANT usage,
    /* [in][optional] */ VARIANT fname,
    /* [in][optional] */ VARIANT domain,
    /* [in][optional] */ VARIANT path,
    /* [in][optional] */ VARIANT expire,
    /* [in][optional] */ VARIANT reserved);


void __RPC_STUB IHTMLOpsProfile_doReadRequest_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLOpsProfile_doWriteRequest_Proxy( 
    IHTMLOpsProfile * This,
    /* [out][retval] */ VARIANT_BOOL *success);


void __RPC_STUB IHTMLOpsProfile_doWriteRequest_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLOpsProfile_INTERFACE_DEFINED__ */


#ifndef __IOmNavigator_INTERFACE_DEFINED__
#define __IOmNavigator_INTERFACE_DEFINED__

/* interface IOmNavigator */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IOmNavigator;

    
    MIDL_INTERFACE("FECEAAA5-8405-11cf-8BA1-00AA00476DA6")
    IOmNavigator : public IDispatch
    {
    public:
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_appCodeName( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_appName( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_appVersion( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_userAgent( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE javaEnabled( 
            /* [out][retval] */ VARIANT_BOOL *enabled) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE taintEnabled( 
            /* [out][retval] */ VARIANT_BOOL *enabled) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_mimeTypes( 
            /* [out][retval] */ IHTMLMimeTypesCollection **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_plugins( 
            /* [out][retval] */ IHTMLPluginsCollection **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_cookieEnabled( 
            /* [out][retval] */ VARIANT_BOOL *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_opsProfile( 
            /* [out][retval] */ IHTMLOpsProfile **p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE toString( 
            /* [out][retval] */ BSTR *string) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_cpuClass( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_systemLanguage( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [hidden][id][propget] */ HRESULT STDMETHODCALLTYPE get_browserLanguage( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_userLanguage( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_platform( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_appMinorVersion( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [hidden][id][propget] */ HRESULT STDMETHODCALLTYPE get_connectionSpeed( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_onLine( 
            /* [out][retval] */ VARIANT_BOOL *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_userProfile( 
            /* [out][retval] */ IHTMLOpsProfile **p) = 0;
        
    };
    



/* [id][propget] */ HRESULT STDMETHODCALLTYPE IOmNavigator_get_appCodeName_Proxy( 
    IOmNavigator * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IOmNavigator_get_appCodeName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IOmNavigator_get_appName_Proxy( 
    IOmNavigator * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IOmNavigator_get_appName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IOmNavigator_get_appVersion_Proxy( 
    IOmNavigator * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IOmNavigator_get_appVersion_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IOmNavigator_get_userAgent_Proxy( 
    IOmNavigator * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IOmNavigator_get_userAgent_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IOmNavigator_javaEnabled_Proxy( 
    IOmNavigator * This,
    /* [out][retval] */ VARIANT_BOOL *enabled);


void __RPC_STUB IOmNavigator_javaEnabled_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IOmNavigator_taintEnabled_Proxy( 
    IOmNavigator * This,
    /* [out][retval] */ VARIANT_BOOL *enabled);


void __RPC_STUB IOmNavigator_taintEnabled_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IOmNavigator_get_mimeTypes_Proxy( 
    IOmNavigator * This,
    /* [out][retval] */ IHTMLMimeTypesCollection **p);


void __RPC_STUB IOmNavigator_get_mimeTypes_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IOmNavigator_get_plugins_Proxy( 
    IOmNavigator * This,
    /* [out][retval] */ IHTMLPluginsCollection **p);


void __RPC_STUB IOmNavigator_get_plugins_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IOmNavigator_get_cookieEnabled_Proxy( 
    IOmNavigator * This,
    /* [out][retval] */ VARIANT_BOOL *p);


void __RPC_STUB IOmNavigator_get_cookieEnabled_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IOmNavigator_get_opsProfile_Proxy( 
    IOmNavigator * This,
    /* [out][retval] */ IHTMLOpsProfile **p);


void __RPC_STUB IOmNavigator_get_opsProfile_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IOmNavigator_toString_Proxy( 
    IOmNavigator * This,
    /* [out][retval] */ BSTR *string);


void __RPC_STUB IOmNavigator_toString_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IOmNavigator_get_cpuClass_Proxy( 
    IOmNavigator * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IOmNavigator_get_cpuClass_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IOmNavigator_get_systemLanguage_Proxy( 
    IOmNavigator * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IOmNavigator_get_systemLanguage_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [hidden][id][propget] */ HRESULT STDMETHODCALLTYPE IOmNavigator_get_browserLanguage_Proxy( 
    IOmNavigator * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IOmNavigator_get_browserLanguage_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IOmNavigator_get_userLanguage_Proxy( 
    IOmNavigator * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IOmNavigator_get_userLanguage_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IOmNavigator_get_platform_Proxy( 
    IOmNavigator * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IOmNavigator_get_platform_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IOmNavigator_get_appMinorVersion_Proxy( 
    IOmNavigator * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IOmNavigator_get_appMinorVersion_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [hidden][id][propget] */ HRESULT STDMETHODCALLTYPE IOmNavigator_get_connectionSpeed_Proxy( 
    IOmNavigator * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IOmNavigator_get_connectionSpeed_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IOmNavigator_get_onLine_Proxy( 
    IOmNavigator * This,
    /* [out][retval] */ VARIANT_BOOL *p);


void __RPC_STUB IOmNavigator_get_onLine_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IOmNavigator_get_userProfile_Proxy( 
    IOmNavigator * This,
    /* [out][retval] */ IHTMLOpsProfile **p);


void __RPC_STUB IOmNavigator_get_userProfile_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IOmNavigator_INTERFACE_DEFINED__ */


#ifndef __IHTMLLocation_INTERFACE_DEFINED__
#define __IHTMLLocation_INTERFACE_DEFINED__

/* interface IHTMLLocation */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLLocation;

    
    MIDL_INTERFACE("163BB1E0-6E00-11cf-837A-48DC04C10000")
    IHTMLLocation : public IDispatch
    {
    public:
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_href( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_href( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_protocol( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_protocol( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_host( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_host( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_hostname( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_hostname( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_port( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_port( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_pathname( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_pathname( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_search( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_search( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_hash( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_hash( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE reload( 
            /* [in][defaultvalue] */ VARIANT_BOOL flag = 0) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE replace( 
            /* [in] */ BSTR bstr) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE assign( 
            /* [in] */ BSTR bstr) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE toString( 
            /* [out][retval] */ BSTR *string) = 0;
        
    };
    



/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLLocation_put_href_Proxy( 
    IHTMLLocation * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLLocation_put_href_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLLocation_get_href_Proxy( 
    IHTMLLocation * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLLocation_get_href_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLLocation_put_protocol_Proxy( 
    IHTMLLocation * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLLocation_put_protocol_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLLocation_get_protocol_Proxy( 
    IHTMLLocation * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLLocation_get_protocol_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLLocation_put_host_Proxy( 
    IHTMLLocation * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLLocation_put_host_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLLocation_get_host_Proxy( 
    IHTMLLocation * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLLocation_get_host_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLLocation_put_hostname_Proxy( 
    IHTMLLocation * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLLocation_put_hostname_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLLocation_get_hostname_Proxy( 
    IHTMLLocation * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLLocation_get_hostname_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLLocation_put_port_Proxy( 
    IHTMLLocation * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLLocation_put_port_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLLocation_get_port_Proxy( 
    IHTMLLocation * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLLocation_get_port_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLLocation_put_pathname_Proxy( 
    IHTMLLocation * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLLocation_put_pathname_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLLocation_get_pathname_Proxy( 
    IHTMLLocation * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLLocation_get_pathname_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLLocation_put_search_Proxy( 
    IHTMLLocation * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLLocation_put_search_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLLocation_get_search_Proxy( 
    IHTMLLocation * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLLocation_get_search_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLLocation_put_hash_Proxy( 
    IHTMLLocation * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLLocation_put_hash_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLLocation_get_hash_Proxy( 
    IHTMLLocation * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLLocation_get_hash_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLLocation_reload_Proxy( 
    IHTMLLocation * This,
    /* [in][defaultvalue] */ VARIANT_BOOL flag);


void __RPC_STUB IHTMLLocation_reload_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLLocation_replace_Proxy( 
    IHTMLLocation * This,
    /* [in] */ BSTR bstr);


void __RPC_STUB IHTMLLocation_replace_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLLocation_assign_Proxy( 
    IHTMLLocation * This,
    /* [in] */ BSTR bstr);


void __RPC_STUB IHTMLLocation_assign_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLLocation_toString_Proxy( 
    IHTMLLocation * This,
    /* [out][retval] */ BSTR *string);


void __RPC_STUB IHTMLLocation_toString_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLLocation_INTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_HTMLHistory;

#ifdef __cplusplus

class DECLSPEC_UUID("FECEAAA3-8405-11cf-8BA1-00AA00476DA6")
HTMLHistory;
#endif

EXTERN_C const CLSID CLSID_CMimeTypes;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f3fe-98b5-11cf-bb82-00aa00bdce0b")
CMimeTypes;
#endif

EXTERN_C const CLSID CLSID_CPlugins;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f3ff-98b5-11cf-bb82-00aa00bdce0b")
CPlugins;
#endif

EXTERN_C const CLSID CLSID_COpsProfile;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f402-98b5-11cf-bb82-00aa00bdce0b")
COpsProfile;
#endif

EXTERN_C const CLSID CLSID_HTMLNavigator;

#ifdef __cplusplus

class DECLSPEC_UUID("FECEAAA6-8405-11cf-8BA1-00AA00476DA6")
HTMLNavigator;
#endif

EXTERN_C const CLSID CLSID_HTMLLocation;

#ifdef __cplusplus

class DECLSPEC_UUID("163BB1E1-6E00-11cf-837A-48DC04C10000")
HTMLLocation;
#endif

#ifndef __IHTMLBookmarkCollection_INTERFACE_DEFINED__
#define __IHTMLBookmarkCollection_INTERFACE_DEFINED__

/* interface IHTMLBookmarkCollection */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLBookmarkCollection;

    
    MIDL_INTERFACE("3050f4ce-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLBookmarkCollection : public IDispatch
    {
    public:
        virtual /* [hidden][id][propget] */ HRESULT STDMETHODCALLTYPE get_length( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [restricted][hidden][id][propget] */ HRESULT STDMETHODCALLTYPE get__newEnum( 
            /* [out][retval] */ IUnknown **p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE item( 
            /* [in] */ long index,
            /* [out][retval] */ VARIANT *pVarBookmark) = 0;
        
    };
    



/* [hidden][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLBookmarkCollection_get_length_Proxy( 
    IHTMLBookmarkCollection * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLBookmarkCollection_get_length_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [restricted][hidden][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLBookmarkCollection_get__newEnum_Proxy( 
    IHTMLBookmarkCollection * This,
    /* [out][retval] */ IUnknown **p);


void __RPC_STUB IHTMLBookmarkCollection_get__newEnum_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLBookmarkCollection_item_Proxy( 
    IHTMLBookmarkCollection * This,
    /* [in] */ long index,
    /* [out][retval] */ VARIANT *pVarBookmark);


void __RPC_STUB IHTMLBookmarkCollection_item_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLBookmarkCollection_INTERFACE_DEFINED__ */


#ifndef __IHTMLDataTransfer_INTERFACE_DEFINED__
#define __IHTMLDataTransfer_INTERFACE_DEFINED__

/* interface IHTMLDataTransfer */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLDataTransfer;

    
    MIDL_INTERFACE("3050f4b3-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLDataTransfer : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE setData( 
            /* [in] */ BSTR format,
            /* [in] */ VARIANT *data,
            /* [out][retval] */ VARIANT_BOOL *pret) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE getData( 
            /* [in] */ BSTR format,
            /* [out][retval] */ VARIANT *pvarRet) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE clearData( 
            /* [in] */ BSTR format,
            /* [out][retval] */ VARIANT_BOOL *pret) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_dropEffect( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_dropEffect( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_effectAllowed( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_effectAllowed( 
            /* [out][retval] */ BSTR *p) = 0;
        
    };
    



/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLDataTransfer_setData_Proxy( 
    IHTMLDataTransfer * This,
    /* [in] */ BSTR format,
    /* [in] */ VARIANT *data,
    /* [out][retval] */ VARIANT_BOOL *pret);


void __RPC_STUB IHTMLDataTransfer_setData_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLDataTransfer_getData_Proxy( 
    IHTMLDataTransfer * This,
    /* [in] */ BSTR format,
    /* [out][retval] */ VARIANT *pvarRet);


void __RPC_STUB IHTMLDataTransfer_getData_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLDataTransfer_clearData_Proxy( 
    IHTMLDataTransfer * This,
    /* [in] */ BSTR format,
    /* [out][retval] */ VARIANT_BOOL *pret);


void __RPC_STUB IHTMLDataTransfer_clearData_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLDataTransfer_put_dropEffect_Proxy( 
    IHTMLDataTransfer * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLDataTransfer_put_dropEffect_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDataTransfer_get_dropEffect_Proxy( 
    IHTMLDataTransfer * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLDataTransfer_get_dropEffect_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLDataTransfer_put_effectAllowed_Proxy( 
    IHTMLDataTransfer * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLDataTransfer_put_effectAllowed_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDataTransfer_get_effectAllowed_Proxy( 
    IHTMLDataTransfer * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLDataTransfer_get_effectAllowed_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLDataTransfer_INTERFACE_DEFINED__ */


#ifndef __IHTMLEventObj2_INTERFACE_DEFINED__
#define __IHTMLEventObj2_INTERFACE_DEFINED__

/* interface IHTMLEventObj2 */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLEventObj2;

    
    MIDL_INTERFACE("3050f48B-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLEventObj2 : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE setAttribute( 
            /* [in] */ BSTR strAttributeName,
            /* [in] */ VARIANT AttributeValue,
            /* [in][defaultvalue] */ LONG lFlags = 1) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE getAttribute( 
            /* [in] */ BSTR strAttributeName,
            /* [in][defaultvalue] */ LONG lFlags,
            /* [out][retval] */ VARIANT *AttributeValue) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE removeAttribute( 
            /* [in] */ BSTR strAttributeName,
            /* [in][defaultvalue] */ LONG lFlags,
            /* [out][retval] */ VARIANT_BOOL *pfSuccess) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_propertyName( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_propertyName( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propputref] */ HRESULT STDMETHODCALLTYPE putref_bookmarks( 
            /* [in] */ IHTMLBookmarkCollection *v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_bookmarks( 
            /* [out][retval] */ IHTMLBookmarkCollection **p) = 0;
        
        virtual /* [id][propputref] */ HRESULT STDMETHODCALLTYPE putref_recordset( 
            /* [in] */ IDispatch *v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_recordset( 
            /* [out][retval] */ IDispatch **p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_dataFld( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_dataFld( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propputref] */ HRESULT STDMETHODCALLTYPE putref_boundElements( 
            /* [in] */ IHTMLElementCollection *v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_boundElements( 
            /* [out][retval] */ IHTMLElementCollection **p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_repeat( 
            /* [in] */ VARIANT_BOOL v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_repeat( 
            /* [out][retval] */ VARIANT_BOOL *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_srcUrn( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_srcUrn( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propputref] */ HRESULT STDMETHODCALLTYPE putref_srcElement( 
            /* [in] */ IHTMLElement *v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_srcElement( 
            /* [out][retval] */ IHTMLElement **p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_altKey( 
            /* [in] */ VARIANT_BOOL v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_altKey( 
            /* [out][retval] */ VARIANT_BOOL *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_ctrlKey( 
            /* [in] */ VARIANT_BOOL v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_ctrlKey( 
            /* [out][retval] */ VARIANT_BOOL *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_shiftKey( 
            /* [in] */ VARIANT_BOOL v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_shiftKey( 
            /* [out][retval] */ VARIANT_BOOL *p) = 0;
        
        virtual /* [id][propputref] */ HRESULT STDMETHODCALLTYPE putref_fromElement( 
            /* [in] */ IHTMLElement *v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_fromElement( 
            /* [out][retval] */ IHTMLElement **p) = 0;
        
        virtual /* [id][propputref] */ HRESULT STDMETHODCALLTYPE putref_toElement( 
            /* [in] */ IHTMLElement *v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_toElement( 
            /* [out][retval] */ IHTMLElement **p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_button( 
            /* [in] */ long v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_button( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_type( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_type( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_qualifier( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_qualifier( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_reason( 
            /* [in] */ long v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_reason( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_x( 
            /* [in] */ long v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_x( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_y( 
            /* [in] */ long v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_y( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_clientX( 
            /* [in] */ long v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_clientX( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_clientY( 
            /* [in] */ long v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_clientY( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_offsetX( 
            /* [in] */ long v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_offsetX( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_offsetY( 
            /* [in] */ long v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_offsetY( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_screenX( 
            /* [in] */ long v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_screenX( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_screenY( 
            /* [in] */ long v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_screenY( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [id][propputref] */ HRESULT STDMETHODCALLTYPE putref_srcFilter( 
            /* [in] */ IDispatch *v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_srcFilter( 
            /* [out][retval] */ IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_dataTransfer( 
            /* [out][retval] */ IHTMLDataTransfer **p) = 0;
        
    };
    



/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj2_setAttribute_Proxy( 
    IHTMLEventObj2 * This,
    /* [in] */ BSTR strAttributeName,
    /* [in] */ VARIANT AttributeValue,
    /* [in][defaultvalue] */ LONG lFlags);


void __RPC_STUB IHTMLEventObj2_setAttribute_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj2_getAttribute_Proxy( 
    IHTMLEventObj2 * This,
    /* [in] */ BSTR strAttributeName,
    /* [in][defaultvalue] */ LONG lFlags,
    /* [out][retval] */ VARIANT *AttributeValue);


void __RPC_STUB IHTMLEventObj2_getAttribute_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj2_removeAttribute_Proxy( 
    IHTMLEventObj2 * This,
    /* [in] */ BSTR strAttributeName,
    /* [in][defaultvalue] */ LONG lFlags,
    /* [out][retval] */ VARIANT_BOOL *pfSuccess);


void __RPC_STUB IHTMLEventObj2_removeAttribute_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj2_put_propertyName_Proxy( 
    IHTMLEventObj2 * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLEventObj2_put_propertyName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj2_get_propertyName_Proxy( 
    IHTMLEventObj2 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLEventObj2_get_propertyName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propputref] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj2_putref_bookmarks_Proxy( 
    IHTMLEventObj2 * This,
    /* [in] */ IHTMLBookmarkCollection *v);


void __RPC_STUB IHTMLEventObj2_putref_bookmarks_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj2_get_bookmarks_Proxy( 
    IHTMLEventObj2 * This,
    /* [out][retval] */ IHTMLBookmarkCollection **p);


void __RPC_STUB IHTMLEventObj2_get_bookmarks_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propputref] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj2_putref_recordset_Proxy( 
    IHTMLEventObj2 * This,
    /* [in] */ IDispatch *v);


void __RPC_STUB IHTMLEventObj2_putref_recordset_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj2_get_recordset_Proxy( 
    IHTMLEventObj2 * This,
    /* [out][retval] */ IDispatch **p);


void __RPC_STUB IHTMLEventObj2_get_recordset_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj2_put_dataFld_Proxy( 
    IHTMLEventObj2 * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLEventObj2_put_dataFld_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj2_get_dataFld_Proxy( 
    IHTMLEventObj2 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLEventObj2_get_dataFld_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propputref] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj2_putref_boundElements_Proxy( 
    IHTMLEventObj2 * This,
    /* [in] */ IHTMLElementCollection *v);


void __RPC_STUB IHTMLEventObj2_putref_boundElements_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj2_get_boundElements_Proxy( 
    IHTMLEventObj2 * This,
    /* [out][retval] */ IHTMLElementCollection **p);


void __RPC_STUB IHTMLEventObj2_get_boundElements_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj2_put_repeat_Proxy( 
    IHTMLEventObj2 * This,
    /* [in] */ VARIANT_BOOL v);


void __RPC_STUB IHTMLEventObj2_put_repeat_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj2_get_repeat_Proxy( 
    IHTMLEventObj2 * This,
    /* [out][retval] */ VARIANT_BOOL *p);


void __RPC_STUB IHTMLEventObj2_get_repeat_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj2_put_srcUrn_Proxy( 
    IHTMLEventObj2 * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLEventObj2_put_srcUrn_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj2_get_srcUrn_Proxy( 
    IHTMLEventObj2 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLEventObj2_get_srcUrn_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propputref] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj2_putref_srcElement_Proxy( 
    IHTMLEventObj2 * This,
    /* [in] */ IHTMLElement *v);


void __RPC_STUB IHTMLEventObj2_putref_srcElement_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj2_get_srcElement_Proxy( 
    IHTMLEventObj2 * This,
    /* [out][retval] */ IHTMLElement **p);


void __RPC_STUB IHTMLEventObj2_get_srcElement_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj2_put_altKey_Proxy( 
    IHTMLEventObj2 * This,
    /* [in] */ VARIANT_BOOL v);


void __RPC_STUB IHTMLEventObj2_put_altKey_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj2_get_altKey_Proxy( 
    IHTMLEventObj2 * This,
    /* [out][retval] */ VARIANT_BOOL *p);


void __RPC_STUB IHTMLEventObj2_get_altKey_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj2_put_ctrlKey_Proxy( 
    IHTMLEventObj2 * This,
    /* [in] */ VARIANT_BOOL v);


void __RPC_STUB IHTMLEventObj2_put_ctrlKey_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj2_get_ctrlKey_Proxy( 
    IHTMLEventObj2 * This,
    /* [out][retval] */ VARIANT_BOOL *p);


void __RPC_STUB IHTMLEventObj2_get_ctrlKey_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj2_put_shiftKey_Proxy( 
    IHTMLEventObj2 * This,
    /* [in] */ VARIANT_BOOL v);


void __RPC_STUB IHTMLEventObj2_put_shiftKey_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj2_get_shiftKey_Proxy( 
    IHTMLEventObj2 * This,
    /* [out][retval] */ VARIANT_BOOL *p);


void __RPC_STUB IHTMLEventObj2_get_shiftKey_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propputref] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj2_putref_fromElement_Proxy( 
    IHTMLEventObj2 * This,
    /* [in] */ IHTMLElement *v);


void __RPC_STUB IHTMLEventObj2_putref_fromElement_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj2_get_fromElement_Proxy( 
    IHTMLEventObj2 * This,
    /* [out][retval] */ IHTMLElement **p);


void __RPC_STUB IHTMLEventObj2_get_fromElement_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propputref] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj2_putref_toElement_Proxy( 
    IHTMLEventObj2 * This,
    /* [in] */ IHTMLElement *v);


void __RPC_STUB IHTMLEventObj2_putref_toElement_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj2_get_toElement_Proxy( 
    IHTMLEventObj2 * This,
    /* [out][retval] */ IHTMLElement **p);


void __RPC_STUB IHTMLEventObj2_get_toElement_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj2_put_button_Proxy( 
    IHTMLEventObj2 * This,
    /* [in] */ long v);


void __RPC_STUB IHTMLEventObj2_put_button_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj2_get_button_Proxy( 
    IHTMLEventObj2 * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLEventObj2_get_button_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj2_put_type_Proxy( 
    IHTMLEventObj2 * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLEventObj2_put_type_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj2_get_type_Proxy( 
    IHTMLEventObj2 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLEventObj2_get_type_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj2_put_qualifier_Proxy( 
    IHTMLEventObj2 * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLEventObj2_put_qualifier_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj2_get_qualifier_Proxy( 
    IHTMLEventObj2 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLEventObj2_get_qualifier_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj2_put_reason_Proxy( 
    IHTMLEventObj2 * This,
    /* [in] */ long v);


void __RPC_STUB IHTMLEventObj2_put_reason_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj2_get_reason_Proxy( 
    IHTMLEventObj2 * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLEventObj2_get_reason_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj2_put_x_Proxy( 
    IHTMLEventObj2 * This,
    /* [in] */ long v);


void __RPC_STUB IHTMLEventObj2_put_x_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj2_get_x_Proxy( 
    IHTMLEventObj2 * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLEventObj2_get_x_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj2_put_y_Proxy( 
    IHTMLEventObj2 * This,
    /* [in] */ long v);


void __RPC_STUB IHTMLEventObj2_put_y_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj2_get_y_Proxy( 
    IHTMLEventObj2 * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLEventObj2_get_y_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj2_put_clientX_Proxy( 
    IHTMLEventObj2 * This,
    /* [in] */ long v);


void __RPC_STUB IHTMLEventObj2_put_clientX_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj2_get_clientX_Proxy( 
    IHTMLEventObj2 * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLEventObj2_get_clientX_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj2_put_clientY_Proxy( 
    IHTMLEventObj2 * This,
    /* [in] */ long v);


void __RPC_STUB IHTMLEventObj2_put_clientY_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj2_get_clientY_Proxy( 
    IHTMLEventObj2 * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLEventObj2_get_clientY_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj2_put_offsetX_Proxy( 
    IHTMLEventObj2 * This,
    /* [in] */ long v);


void __RPC_STUB IHTMLEventObj2_put_offsetX_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj2_get_offsetX_Proxy( 
    IHTMLEventObj2 * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLEventObj2_get_offsetX_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj2_put_offsetY_Proxy( 
    IHTMLEventObj2 * This,
    /* [in] */ long v);


void __RPC_STUB IHTMLEventObj2_put_offsetY_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj2_get_offsetY_Proxy( 
    IHTMLEventObj2 * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLEventObj2_get_offsetY_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj2_put_screenX_Proxy( 
    IHTMLEventObj2 * This,
    /* [in] */ long v);


void __RPC_STUB IHTMLEventObj2_put_screenX_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj2_get_screenX_Proxy( 
    IHTMLEventObj2 * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLEventObj2_get_screenX_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj2_put_screenY_Proxy( 
    IHTMLEventObj2 * This,
    /* [in] */ long v);


void __RPC_STUB IHTMLEventObj2_put_screenY_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj2_get_screenY_Proxy( 
    IHTMLEventObj2 * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLEventObj2_get_screenY_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propputref] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj2_putref_srcFilter_Proxy( 
    IHTMLEventObj2 * This,
    /* [in] */ IDispatch *v);


void __RPC_STUB IHTMLEventObj2_putref_srcFilter_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj2_get_srcFilter_Proxy( 
    IHTMLEventObj2 * This,
    /* [out][retval] */ IDispatch **p);


void __RPC_STUB IHTMLEventObj2_get_srcFilter_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj2_get_dataTransfer_Proxy( 
    IHTMLEventObj2 * This,
    /* [out][retval] */ IHTMLDataTransfer **p);


void __RPC_STUB IHTMLEventObj2_get_dataTransfer_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLEventObj2_INTERFACE_DEFINED__ */


#ifndef __IHTMLEventObj3_INTERFACE_DEFINED__
#define __IHTMLEventObj3_INTERFACE_DEFINED__

/* interface IHTMLEventObj3 */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLEventObj3;

    
    MIDL_INTERFACE("3050f680-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLEventObj3 : public IDispatch
    {
    public:
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_contentOverflow( 
            /* [out][retval] */ VARIANT_BOOL *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_shiftLeft( 
            /* [in] */ VARIANT_BOOL v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_shiftLeft( 
            /* [out][retval] */ VARIANT_BOOL *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_altLeft( 
            /* [in] */ VARIANT_BOOL v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_altLeft( 
            /* [out][retval] */ VARIANT_BOOL *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_ctrlLeft( 
            /* [in] */ VARIANT_BOOL v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_ctrlLeft( 
            /* [out][retval] */ VARIANT_BOOL *p) = 0;
        
        virtual /* [nonbrowsable][restricted][hidden][id][propget] */ HRESULT STDMETHODCALLTYPE get_imeCompositionChange( 
            /* [out][retval] */ LONG_PTR *p) = 0;
        
        virtual /* [nonbrowsable][restricted][hidden][id][propget] */ HRESULT STDMETHODCALLTYPE get_imeNotifyCommand( 
            /* [out][retval] */ LONG_PTR *p) = 0;
        
        virtual /* [nonbrowsable][restricted][hidden][id][propget] */ HRESULT STDMETHODCALLTYPE get_imeNotifyData( 
            /* [out][retval] */ LONG_PTR *p) = 0;
        
        virtual /* [nonbrowsable][restricted][hidden][id][propget] */ HRESULT STDMETHODCALLTYPE get_imeRequest( 
            /* [out][retval] */ LONG_PTR *p) = 0;
        
        virtual /* [nonbrowsable][restricted][hidden][id][propget] */ HRESULT STDMETHODCALLTYPE get_imeRequestData( 
            /* [out][retval] */ LONG_PTR *p) = 0;
        
        virtual /* [nonbrowsable][restricted][hidden][id][propget] */ HRESULT STDMETHODCALLTYPE get_keyboardLayout( 
            /* [out][retval] */ LONG_PTR *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_behaviorCookie( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_behaviorPart( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_nextPage( 
            /* [out][retval] */ BSTR *p) = 0;
        
    };
    



/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj3_get_contentOverflow_Proxy( 
    IHTMLEventObj3 * This,
    /* [out][retval] */ VARIANT_BOOL *p);


void __RPC_STUB IHTMLEventObj3_get_contentOverflow_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj3_put_shiftLeft_Proxy( 
    IHTMLEventObj3 * This,
    /* [in] */ VARIANT_BOOL v);


void __RPC_STUB IHTMLEventObj3_put_shiftLeft_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj3_get_shiftLeft_Proxy( 
    IHTMLEventObj3 * This,
    /* [out][retval] */ VARIANT_BOOL *p);


void __RPC_STUB IHTMLEventObj3_get_shiftLeft_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj3_put_altLeft_Proxy( 
    IHTMLEventObj3 * This,
    /* [in] */ VARIANT_BOOL v);


void __RPC_STUB IHTMLEventObj3_put_altLeft_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj3_get_altLeft_Proxy( 
    IHTMLEventObj3 * This,
    /* [out][retval] */ VARIANT_BOOL *p);


void __RPC_STUB IHTMLEventObj3_get_altLeft_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj3_put_ctrlLeft_Proxy( 
    IHTMLEventObj3 * This,
    /* [in] */ VARIANT_BOOL v);


void __RPC_STUB IHTMLEventObj3_put_ctrlLeft_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj3_get_ctrlLeft_Proxy( 
    IHTMLEventObj3 * This,
    /* [out][retval] */ VARIANT_BOOL *p);


void __RPC_STUB IHTMLEventObj3_get_ctrlLeft_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [nonbrowsable][restricted][hidden][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj3_get_imeCompositionChange_Proxy( 
    IHTMLEventObj3 * This,
    /* [out][retval] */ LONG_PTR *p);


void __RPC_STUB IHTMLEventObj3_get_imeCompositionChange_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [nonbrowsable][restricted][hidden][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj3_get_imeNotifyCommand_Proxy( 
    IHTMLEventObj3 * This,
    /* [out][retval] */ LONG_PTR *p);


void __RPC_STUB IHTMLEventObj3_get_imeNotifyCommand_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [nonbrowsable][restricted][hidden][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj3_get_imeNotifyData_Proxy( 
    IHTMLEventObj3 * This,
    /* [out][retval] */ LONG_PTR *p);


void __RPC_STUB IHTMLEventObj3_get_imeNotifyData_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [nonbrowsable][restricted][hidden][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj3_get_imeRequest_Proxy( 
    IHTMLEventObj3 * This,
    /* [out][retval] */ LONG_PTR *p);


void __RPC_STUB IHTMLEventObj3_get_imeRequest_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [nonbrowsable][restricted][hidden][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj3_get_imeRequestData_Proxy( 
    IHTMLEventObj3 * This,
    /* [out][retval] */ LONG_PTR *p);


void __RPC_STUB IHTMLEventObj3_get_imeRequestData_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [nonbrowsable][restricted][hidden][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj3_get_keyboardLayout_Proxy( 
    IHTMLEventObj3 * This,
    /* [out][retval] */ LONG_PTR *p);


void __RPC_STUB IHTMLEventObj3_get_keyboardLayout_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj3_get_behaviorCookie_Proxy( 
    IHTMLEventObj3 * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLEventObj3_get_behaviorCookie_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj3_get_behaviorPart_Proxy( 
    IHTMLEventObj3 * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLEventObj3_get_behaviorPart_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj3_get_nextPage_Proxy( 
    IHTMLEventObj3 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLEventObj3_get_nextPage_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLEventObj3_INTERFACE_DEFINED__ */


#ifndef __IHTMLEventObj4_INTERFACE_DEFINED__
#define __IHTMLEventObj4_INTERFACE_DEFINED__

/* interface IHTMLEventObj4 */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLEventObj4;

    
    MIDL_INTERFACE("3050f814-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLEventObj4 : public IDispatch
    {
    public:
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_wheelDelta( 
            /* [out][retval] */ long *p) = 0;
        
    };
    



/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj4_get_wheelDelta_Proxy( 
    IHTMLEventObj4 * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLEventObj4_get_wheelDelta_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLEventObj4_INTERFACE_DEFINED__ */


#ifndef __DispCEventObj_DISPINTERFACE_DEFINED__
#define __DispCEventObj_DISPINTERFACE_DEFINED__

/* dispinterface DispCEventObj */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_DispCEventObj;


    MIDL_INTERFACE("3050f558-98b5-11cf-bb82-00aa00bdce0b")
    DispCEventObj : public IDispatch
    {
    };
    


#endif 	/* __DispCEventObj_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_CEventObj;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f48A-98b5-11cf-bb82-00aa00bdce0b")
CEventObj;
#endif

#ifndef __HTMLWindowEvents2_DISPINTERFACE_DEFINED__
#define __HTMLWindowEvents2_DISPINTERFACE_DEFINED__

/* dispinterface HTMLWindowEvents2 */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_HTMLWindowEvents2;


    MIDL_INTERFACE("3050f625-98b5-11cf-bb82-00aa00bdce0b")
    HTMLWindowEvents2 : public IDispatch
    {
    };
    


#endif 	/* __HTMLWindowEvents2_DISPINTERFACE_DEFINED__ */


#ifndef __HTMLWindowEvents_DISPINTERFACE_DEFINED__
#define __HTMLWindowEvents_DISPINTERFACE_DEFINED__

/* dispinterface HTMLWindowEvents */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_HTMLWindowEvents;


    MIDL_INTERFACE("96A0A4E0-D062-11cf-94B6-00AA0060275C")
    HTMLWindowEvents : public IDispatch
    {
    };
    


#endif 	/* __HTMLWindowEvents_DISPINTERFACE_DEFINED__ */


#ifndef __IHTMLDocument2_INTERFACE_DEFINED__
#define __IHTMLDocument2_INTERFACE_DEFINED__

/* interface IHTMLDocument2 */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLDocument2;

    
    MIDL_INTERFACE("332c4425-26cb-11d0-b483-00c04fd90119")
    IHTMLDocument2 : public IHTMLDocument
    {
    public:
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_all( 
            /* [out][retval] */ IHTMLElementCollection **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_body( 
            /* [out][retval] */ IHTMLElement **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_activeElement( 
            /* [out][retval] */ IHTMLElement **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_images( 
            /* [out][retval] */ IHTMLElementCollection **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_applets( 
            /* [out][retval] */ IHTMLElementCollection **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_links( 
            /* [out][retval] */ IHTMLElementCollection **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_forms( 
            /* [out][retval] */ IHTMLElementCollection **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_anchors( 
            /* [out][retval] */ IHTMLElementCollection **p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_title( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_title( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_scripts( 
            /* [out][retval] */ IHTMLElementCollection **p) = 0;
        
        virtual /* [hidden][id][propput] */ HRESULT STDMETHODCALLTYPE put_designMode( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [hidden][id][propget] */ HRESULT STDMETHODCALLTYPE get_designMode( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_selection( 
            /* [out][retval] */ IHTMLSelectionObject **p) = 0;
        
        virtual /* [bindable][id][propget] */ HRESULT STDMETHODCALLTYPE get_readyState( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_frames( 
            /* [out][retval] */ IHTMLFramesCollection2 **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_embeds( 
            /* [out][retval] */ IHTMLElementCollection **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_plugins( 
            /* [out][retval] */ IHTMLElementCollection **p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_alinkColor( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_alinkColor( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_bgColor( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_bgColor( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_fgColor( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_fgColor( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_linkColor( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_linkColor( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_vlinkColor( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_vlinkColor( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_referrer( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_location( 
            /* [out][retval] */ IHTMLLocation **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_lastModified( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_URL( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_URL( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_domain( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_domain( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_cookie( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_cookie( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [hidden][bindable][id][propput] */ HRESULT STDMETHODCALLTYPE put_expando( 
            /* [in] */ VARIANT_BOOL v) = 0;
        
        virtual /* [hidden][bindable][id][propget] */ HRESULT STDMETHODCALLTYPE get_expando( 
            /* [out][retval] */ VARIANT_BOOL *p) = 0;
        
        virtual /* [hidden][id][propput] */ HRESULT STDMETHODCALLTYPE put_charset( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [hidden][id][propget] */ HRESULT STDMETHODCALLTYPE get_charset( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_defaultCharset( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_defaultCharset( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_mimeType( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_fileSize( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_fileCreatedDate( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_fileModifiedDate( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_fileUpdatedDate( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_security( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_protocol( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_nameProp( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][vararg] */ HRESULT STDMETHODCALLTYPE write( 
            /* [in] */ SAFEARRAY * psarray) = 0;
        
        virtual /* [id][vararg] */ HRESULT STDMETHODCALLTYPE writeln( 
            /* [in] */ SAFEARRAY * psarray) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE open( 
            /* [in][defaultvalue] */ BSTR url,
            /* [in][optional] */ VARIANT name,
            /* [in][optional] */ VARIANT features,
            /* [in][optional] */ VARIANT replace,
            /* [out][retval] */ IDispatch **pomWindowResult) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE close( void) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE clear( void) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE queryCommandSupported( 
            /* [in] */ BSTR cmdID,
            /* [out][retval] */ VARIANT_BOOL *pfRet) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE queryCommandEnabled( 
            /* [in] */ BSTR cmdID,
            /* [out][retval] */ VARIANT_BOOL *pfRet) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE queryCommandState( 
            /* [in] */ BSTR cmdID,
            /* [out][retval] */ VARIANT_BOOL *pfRet) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE queryCommandIndeterm( 
            /* [in] */ BSTR cmdID,
            /* [out][retval] */ VARIANT_BOOL *pfRet) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE queryCommandText( 
            /* [in] */ BSTR cmdID,
            /* [out][retval] */ BSTR *pcmdText) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE queryCommandValue( 
            /* [in] */ BSTR cmdID,
            /* [out][retval] */ VARIANT *pcmdValue) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE execCommand( 
            /* [in] */ BSTR cmdID,
            /* [in][defaultvalue] */ VARIANT_BOOL showUI,
            /* [in][optional] */ VARIANT value,
            /* [out][retval] */ VARIANT_BOOL *pfRet) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE execCommandShowHelp( 
            /* [in] */ BSTR cmdID,
            /* [out][retval] */ VARIANT_BOOL *pfRet) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE createElement( 
            /* [in] */ BSTR eTag,
            /* [out][retval] */ IHTMLElement **newElem) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onhelp( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onhelp( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onclick( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onclick( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_ondblclick( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_ondblclick( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onkeyup( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onkeyup( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onkeydown( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onkeydown( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onkeypress( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onkeypress( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onmouseup( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onmouseup( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onmousedown( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onmousedown( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onmousemove( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onmousemove( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onmouseout( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onmouseout( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onmouseover( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onmouseover( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onreadystatechange( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onreadystatechange( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onafterupdate( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onafterupdate( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onrowexit( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onrowexit( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onrowenter( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onrowenter( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_ondragstart( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_ondragstart( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onselectstart( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onselectstart( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE elementFromPoint( 
            /* [in] */ long x,
            /* [in] */ long y,
            /* [out][retval] */ IHTMLElement **elementHit) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_parentWindow( 
            /* [out][retval] */ IHTMLWindow2 **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_styleSheets( 
            /* [out][retval] */ IHTMLStyleSheetsCollection **p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onbeforeupdate( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onbeforeupdate( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onerrorupdate( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onerrorupdate( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE toString( 
            /* [out][retval] */ BSTR *String) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE createStyleSheet( 
            /* [in][defaultvalue] */ BSTR bstrHref,
            /* [in][defaultvalue] */ long lIndex,
            /* [out][retval] */ IHTMLStyleSheet **ppnewStyleSheet) = 0;
        
    };
    



/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDocument2_get_all_Proxy( 
    IHTMLDocument2 * This,
    /* [out][retval] */ IHTMLElementCollection **p);


void __RPC_STUB IHTMLDocument2_get_all_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDocument2_get_body_Proxy( 
    IHTMLDocument2 * This,
    /* [out][retval] */ IHTMLElement **p);


void __RPC_STUB IHTMLDocument2_get_body_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDocument2_get_activeElement_Proxy( 
    IHTMLDocument2 * This,
    /* [out][retval] */ IHTMLElement **p);


void __RPC_STUB IHTMLDocument2_get_activeElement_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDocument2_get_images_Proxy( 
    IHTMLDocument2 * This,
    /* [out][retval] */ IHTMLElementCollection **p);


void __RPC_STUB IHTMLDocument2_get_images_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDocument2_get_applets_Proxy( 
    IHTMLDocument2 * This,
    /* [out][retval] */ IHTMLElementCollection **p);


void __RPC_STUB IHTMLDocument2_get_applets_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDocument2_get_links_Proxy( 
    IHTMLDocument2 * This,
    /* [out][retval] */ IHTMLElementCollection **p);


void __RPC_STUB IHTMLDocument2_get_links_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDocument2_get_forms_Proxy( 
    IHTMLDocument2 * This,
    /* [out][retval] */ IHTMLElementCollection **p);


void __RPC_STUB IHTMLDocument2_get_forms_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDocument2_get_anchors_Proxy( 
    IHTMLDocument2 * This,
    /* [out][retval] */ IHTMLElementCollection **p);


void __RPC_STUB IHTMLDocument2_get_anchors_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLDocument2_put_title_Proxy( 
    IHTMLDocument2 * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLDocument2_put_title_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDocument2_get_title_Proxy( 
    IHTMLDocument2 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLDocument2_get_title_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDocument2_get_scripts_Proxy( 
    IHTMLDocument2 * This,
    /* [out][retval] */ IHTMLElementCollection **p);


void __RPC_STUB IHTMLDocument2_get_scripts_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [hidden][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLDocument2_put_designMode_Proxy( 
    IHTMLDocument2 * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLDocument2_put_designMode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [hidden][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDocument2_get_designMode_Proxy( 
    IHTMLDocument2 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLDocument2_get_designMode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDocument2_get_selection_Proxy( 
    IHTMLDocument2 * This,
    /* [out][retval] */ IHTMLSelectionObject **p);


void __RPC_STUB IHTMLDocument2_get_selection_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDocument2_get_readyState_Proxy( 
    IHTMLDocument2 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLDocument2_get_readyState_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDocument2_get_frames_Proxy( 
    IHTMLDocument2 * This,
    /* [out][retval] */ IHTMLFramesCollection2 **p);


void __RPC_STUB IHTMLDocument2_get_frames_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDocument2_get_embeds_Proxy( 
    IHTMLDocument2 * This,
    /* [out][retval] */ IHTMLElementCollection **p);


void __RPC_STUB IHTMLDocument2_get_embeds_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDocument2_get_plugins_Proxy( 
    IHTMLDocument2 * This,
    /* [out][retval] */ IHTMLElementCollection **p);


void __RPC_STUB IHTMLDocument2_get_plugins_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLDocument2_put_alinkColor_Proxy( 
    IHTMLDocument2 * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLDocument2_put_alinkColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDocument2_get_alinkColor_Proxy( 
    IHTMLDocument2 * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLDocument2_get_alinkColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLDocument2_put_bgColor_Proxy( 
    IHTMLDocument2 * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLDocument2_put_bgColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDocument2_get_bgColor_Proxy( 
    IHTMLDocument2 * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLDocument2_get_bgColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLDocument2_put_fgColor_Proxy( 
    IHTMLDocument2 * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLDocument2_put_fgColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDocument2_get_fgColor_Proxy( 
    IHTMLDocument2 * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLDocument2_get_fgColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLDocument2_put_linkColor_Proxy( 
    IHTMLDocument2 * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLDocument2_put_linkColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDocument2_get_linkColor_Proxy( 
    IHTMLDocument2 * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLDocument2_get_linkColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLDocument2_put_vlinkColor_Proxy( 
    IHTMLDocument2 * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLDocument2_put_vlinkColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDocument2_get_vlinkColor_Proxy( 
    IHTMLDocument2 * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLDocument2_get_vlinkColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDocument2_get_referrer_Proxy( 
    IHTMLDocument2 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLDocument2_get_referrer_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDocument2_get_location_Proxy( 
    IHTMLDocument2 * This,
    /* [out][retval] */ IHTMLLocation **p);


void __RPC_STUB IHTMLDocument2_get_location_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDocument2_get_lastModified_Proxy( 
    IHTMLDocument2 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLDocument2_get_lastModified_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLDocument2_put_URL_Proxy( 
    IHTMLDocument2 * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLDocument2_put_URL_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDocument2_get_URL_Proxy( 
    IHTMLDocument2 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLDocument2_get_URL_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLDocument2_put_domain_Proxy( 
    IHTMLDocument2 * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLDocument2_put_domain_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDocument2_get_domain_Proxy( 
    IHTMLDocument2 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLDocument2_get_domain_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLDocument2_put_cookie_Proxy( 
    IHTMLDocument2 * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLDocument2_put_cookie_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDocument2_get_cookie_Proxy( 
    IHTMLDocument2 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLDocument2_get_cookie_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [hidden][bindable][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLDocument2_put_expando_Proxy( 
    IHTMLDocument2 * This,
    /* [in] */ VARIANT_BOOL v);


void __RPC_STUB IHTMLDocument2_put_expando_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [hidden][bindable][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDocument2_get_expando_Proxy( 
    IHTMLDocument2 * This,
    /* [out][retval] */ VARIANT_BOOL *p);


void __RPC_STUB IHTMLDocument2_get_expando_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [hidden][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLDocument2_put_charset_Proxy( 
    IHTMLDocument2 * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLDocument2_put_charset_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [hidden][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDocument2_get_charset_Proxy( 
    IHTMLDocument2 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLDocument2_get_charset_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLDocument2_put_defaultCharset_Proxy( 
    IHTMLDocument2 * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLDocument2_put_defaultCharset_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDocument2_get_defaultCharset_Proxy( 
    IHTMLDocument2 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLDocument2_get_defaultCharset_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDocument2_get_mimeType_Proxy( 
    IHTMLDocument2 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLDocument2_get_mimeType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDocument2_get_fileSize_Proxy( 
    IHTMLDocument2 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLDocument2_get_fileSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDocument2_get_fileCreatedDate_Proxy( 
    IHTMLDocument2 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLDocument2_get_fileCreatedDate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDocument2_get_fileModifiedDate_Proxy( 
    IHTMLDocument2 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLDocument2_get_fileModifiedDate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDocument2_get_fileUpdatedDate_Proxy( 
    IHTMLDocument2 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLDocument2_get_fileUpdatedDate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDocument2_get_security_Proxy( 
    IHTMLDocument2 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLDocument2_get_security_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDocument2_get_protocol_Proxy( 
    IHTMLDocument2 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLDocument2_get_protocol_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDocument2_get_nameProp_Proxy( 
    IHTMLDocument2 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLDocument2_get_nameProp_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][vararg] */ HRESULT STDMETHODCALLTYPE IHTMLDocument2_write_Proxy( 
    IHTMLDocument2 * This,
    /* [in] */ SAFEARRAY * psarray);


void __RPC_STUB IHTMLDocument2_write_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][vararg] */ HRESULT STDMETHODCALLTYPE IHTMLDocument2_writeln_Proxy( 
    IHTMLDocument2 * This,
    /* [in] */ SAFEARRAY * psarray);


void __RPC_STUB IHTMLDocument2_writeln_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLDocument2_open_Proxy( 
    IHTMLDocument2 * This,
    /* [in][defaultvalue] */ BSTR url,
    /* [in][optional] */ VARIANT name,
    /* [in][optional] */ VARIANT features,
    /* [in][optional] */ VARIANT replace,
    /* [out][retval] */ IDispatch **pomWindowResult);


void __RPC_STUB IHTMLDocument2_open_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLDocument2_close_Proxy( 
    IHTMLDocument2 * This);


void __RPC_STUB IHTMLDocument2_close_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLDocument2_clear_Proxy( 
    IHTMLDocument2 * This);


void __RPC_STUB IHTMLDocument2_clear_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLDocument2_queryCommandSupported_Proxy( 
    IHTMLDocument2 * This,
    /* [in] */ BSTR cmdID,
    /* [out][retval] */ VARIANT_BOOL *pfRet);


void __RPC_STUB IHTMLDocument2_queryCommandSupported_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLDocument2_queryCommandEnabled_Proxy( 
    IHTMLDocument2 * This,
    /* [in] */ BSTR cmdID,
    /* [out][retval] */ VARIANT_BOOL *pfRet);


void __RPC_STUB IHTMLDocument2_queryCommandEnabled_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLDocument2_queryCommandState_Proxy( 
    IHTMLDocument2 * This,
    /* [in] */ BSTR cmdID,
    /* [out][retval] */ VARIANT_BOOL *pfRet);


void __RPC_STUB IHTMLDocument2_queryCommandState_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLDocument2_queryCommandIndeterm_Proxy( 
    IHTMLDocument2 * This,
    /* [in] */ BSTR cmdID,
    /* [out][retval] */ VARIANT_BOOL *pfRet);


void __RPC_STUB IHTMLDocument2_queryCommandIndeterm_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLDocument2_queryCommandText_Proxy( 
    IHTMLDocument2 * This,
    /* [in] */ BSTR cmdID,
    /* [out][retval] */ BSTR *pcmdText);


void __RPC_STUB IHTMLDocument2_queryCommandText_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLDocument2_queryCommandValue_Proxy( 
    IHTMLDocument2 * This,
    /* [in] */ BSTR cmdID,
    /* [out][retval] */ VARIANT *pcmdValue);


void __RPC_STUB IHTMLDocument2_queryCommandValue_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLDocument2_execCommand_Proxy( 
    IHTMLDocument2 * This,
    /* [in] */ BSTR cmdID,
    /* [in][defaultvalue] */ VARIANT_BOOL showUI,
    /* [in][optional] */ VARIANT value,
    /* [out][retval] */ VARIANT_BOOL *pfRet);


void __RPC_STUB IHTMLDocument2_execCommand_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLDocument2_execCommandShowHelp_Proxy( 
    IHTMLDocument2 * This,
    /* [in] */ BSTR cmdID,
    /* [out][retval] */ VARIANT_BOOL *pfRet);


void __RPC_STUB IHTMLDocument2_execCommandShowHelp_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLDocument2_createElement_Proxy( 
    IHTMLDocument2 * This,
    /* [in] */ BSTR eTag,
    /* [out][retval] */ IHTMLElement **newElem);


void __RPC_STUB IHTMLDocument2_createElement_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLDocument2_put_onhelp_Proxy( 
    IHTMLDocument2 * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLDocument2_put_onhelp_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDocument2_get_onhelp_Proxy( 
    IHTMLDocument2 * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLDocument2_get_onhelp_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLDocument2_put_onclick_Proxy( 
    IHTMLDocument2 * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLDocument2_put_onclick_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDocument2_get_onclick_Proxy( 
    IHTMLDocument2 * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLDocument2_get_onclick_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLDocument2_put_ondblclick_Proxy( 
    IHTMLDocument2 * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLDocument2_put_ondblclick_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDocument2_get_ondblclick_Proxy( 
    IHTMLDocument2 * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLDocument2_get_ondblclick_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLDocument2_put_onkeyup_Proxy( 
    IHTMLDocument2 * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLDocument2_put_onkeyup_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDocument2_get_onkeyup_Proxy( 
    IHTMLDocument2 * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLDocument2_get_onkeyup_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLDocument2_put_onkeydown_Proxy( 
    IHTMLDocument2 * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLDocument2_put_onkeydown_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDocument2_get_onkeydown_Proxy( 
    IHTMLDocument2 * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLDocument2_get_onkeydown_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLDocument2_put_onkeypress_Proxy( 
    IHTMLDocument2 * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLDocument2_put_onkeypress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDocument2_get_onkeypress_Proxy( 
    IHTMLDocument2 * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLDocument2_get_onkeypress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLDocument2_put_onmouseup_Proxy( 
    IHTMLDocument2 * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLDocument2_put_onmouseup_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDocument2_get_onmouseup_Proxy( 
    IHTMLDocument2 * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLDocument2_get_onmouseup_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLDocument2_put_onmousedown_Proxy( 
    IHTMLDocument2 * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLDocument2_put_onmousedown_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDocument2_get_onmousedown_Proxy( 
    IHTMLDocument2 * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLDocument2_get_onmousedown_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLDocument2_put_onmousemove_Proxy( 
    IHTMLDocument2 * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLDocument2_put_onmousemove_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDocument2_get_onmousemove_Proxy( 
    IHTMLDocument2 * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLDocument2_get_onmousemove_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLDocument2_put_onmouseout_Proxy( 
    IHTMLDocument2 * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLDocument2_put_onmouseout_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDocument2_get_onmouseout_Proxy( 
    IHTMLDocument2 * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLDocument2_get_onmouseout_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLDocument2_put_onmouseover_Proxy( 
    IHTMLDocument2 * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLDocument2_put_onmouseover_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDocument2_get_onmouseover_Proxy( 
    IHTMLDocument2 * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLDocument2_get_onmouseover_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLDocument2_put_onreadystatechange_Proxy( 
    IHTMLDocument2 * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLDocument2_put_onreadystatechange_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDocument2_get_onreadystatechange_Proxy( 
    IHTMLDocument2 * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLDocument2_get_onreadystatechange_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLDocument2_put_onafterupdate_Proxy( 
    IHTMLDocument2 * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLDocument2_put_onafterupdate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDocument2_get_onafterupdate_Proxy( 
    IHTMLDocument2 * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLDocument2_get_onafterupdate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLDocument2_put_onrowexit_Proxy( 
    IHTMLDocument2 * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLDocument2_put_onrowexit_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDocument2_get_onrowexit_Proxy( 
    IHTMLDocument2 * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLDocument2_get_onrowexit_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLDocument2_put_onrowenter_Proxy( 
    IHTMLDocument2 * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLDocument2_put_onrowenter_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDocument2_get_onrowenter_Proxy( 
    IHTMLDocument2 * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLDocument2_get_onrowenter_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLDocument2_put_ondragstart_Proxy( 
    IHTMLDocument2 * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLDocument2_put_ondragstart_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDocument2_get_ondragstart_Proxy( 
    IHTMLDocument2 * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLDocument2_get_ondragstart_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLDocument2_put_onselectstart_Proxy( 
    IHTMLDocument2 * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLDocument2_put_onselectstart_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDocument2_get_onselectstart_Proxy( 
    IHTMLDocument2 * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLDocument2_get_onselectstart_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLDocument2_elementFromPoint_Proxy( 
    IHTMLDocument2 * This,
    /* [in] */ long x,
    /* [in] */ long y,
    /* [out][retval] */ IHTMLElement **elementHit);


void __RPC_STUB IHTMLDocument2_elementFromPoint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDocument2_get_parentWindow_Proxy( 
    IHTMLDocument2 * This,
    /* [out][retval] */ IHTMLWindow2 **p);


void __RPC_STUB IHTMLDocument2_get_parentWindow_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDocument2_get_styleSheets_Proxy( 
    IHTMLDocument2 * This,
    /* [out][retval] */ IHTMLStyleSheetsCollection **p);


void __RPC_STUB IHTMLDocument2_get_styleSheets_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLDocument2_put_onbeforeupdate_Proxy( 
    IHTMLDocument2 * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLDocument2_put_onbeforeupdate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDocument2_get_onbeforeupdate_Proxy( 
    IHTMLDocument2 * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLDocument2_get_onbeforeupdate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLDocument2_put_onerrorupdate_Proxy( 
    IHTMLDocument2 * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLDocument2_put_onerrorupdate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDocument2_get_onerrorupdate_Proxy( 
    IHTMLDocument2 * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLDocument2_get_onerrorupdate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLDocument2_toString_Proxy( 
    IHTMLDocument2 * This,
    /* [out][retval] */ BSTR *String);


void __RPC_STUB IHTMLDocument2_toString_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLDocument2_createStyleSheet_Proxy( 
    IHTMLDocument2 * This,
    /* [in][defaultvalue] */ BSTR bstrHref,
    /* [in][defaultvalue] */ long lIndex,
    /* [out][retval] */ IHTMLStyleSheet **ppnewStyleSheet);


void __RPC_STUB IHTMLDocument2_createStyleSheet_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLDocument2_INTERFACE_DEFINED__ */


#ifndef __IHTMLFramesCollection2_INTERFACE_DEFINED__
#define __IHTMLFramesCollection2_INTERFACE_DEFINED__

/* interface IHTMLFramesCollection2 */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLFramesCollection2;

    
    MIDL_INTERFACE("332c4426-26cb-11d0-b483-00c04fd90119")
    IHTMLFramesCollection2 : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE item( 
            /* [in] */ VARIANT *pvarIndex,
            /* [out][retval] */ VARIANT *pvarResult) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_length( 
            /* [out][retval] */ long *p) = 0;
        
    };
    



/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLFramesCollection2_item_Proxy( 
    IHTMLFramesCollection2 * This,
    /* [in] */ VARIANT *pvarIndex,
    /* [out][retval] */ VARIANT *pvarResult);


void __RPC_STUB IHTMLFramesCollection2_item_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLFramesCollection2_get_length_Proxy( 
    IHTMLFramesCollection2 * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLFramesCollection2_get_length_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLFramesCollection2_INTERFACE_DEFINED__ */


#ifndef __IHTMLWindow2_INTERFACE_DEFINED__
#define __IHTMLWindow2_INTERFACE_DEFINED__

/* interface IHTMLWindow2 */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLWindow2;

    
    MIDL_INTERFACE("332c4427-26cb-11d0-b483-00c04fd90119")
    IHTMLWindow2 : public IHTMLFramesCollection2
    {
    public:
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_frames( 
            /* [out][retval] */ IHTMLFramesCollection2 **p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_defaultStatus( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_defaultStatus( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_status( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_status( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE setTimeout( 
            /* [in] */ BSTR expression,
            /* [in] */ long msec,
            /* [in][optional] */ VARIANT *language,
            /* [out][retval] */ long *timerID) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE clearTimeout( 
            /* [in] */ long timerID) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE alert( 
            /* [in][defaultvalue] */ BSTR message = L"") = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE confirm( 
            /* [in][defaultvalue] */ BSTR message,
            /* [out][retval] */ VARIANT_BOOL *confirmed) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE prompt( 
            /* [in][defaultvalue] */ BSTR message,
            /* [in][defaultvalue] */ BSTR defstr,
            /* [out][retval] */ VARIANT *textdata) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_Image( 
            /* [out][retval] */ IHTMLImageElementFactory **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_location( 
            /* [out][retval] */ IHTMLLocation **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_history( 
            /* [out][retval] */ IOmHistory **p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE close( void) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_opener( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_opener( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_navigator( 
            /* [out][retval] */ IOmNavigator **p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_name( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_name( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_parent( 
            /* [out][retval] */ IHTMLWindow2 **p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE open( 
            /* [in][defaultvalue] */ BSTR url,
            /* [in][defaultvalue] */ BSTR name,
            /* [in][defaultvalue] */ BSTR features,
            /* [in][defaultvalue] */ VARIANT_BOOL replace,
            /* [out][retval] */ IHTMLWindow2 **pomWindowResult) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_self( 
            /* [out][retval] */ IHTMLWindow2 **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_top( 
            /* [out][retval] */ IHTMLWindow2 **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_window( 
            /* [out][retval] */ IHTMLWindow2 **p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE navigate( 
            /* [in] */ BSTR url) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onfocus( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onfocus( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onblur( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onblur( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onload( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onload( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onbeforeunload( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onbeforeunload( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onunload( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onunload( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onhelp( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onhelp( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onerror( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onerror( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onresize( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onresize( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onscroll( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onscroll( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [source][id][propget] */ HRESULT STDMETHODCALLTYPE get_document( 
            /* [out][retval] */ IHTMLDocument2 **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_event( 
            /* [out][retval] */ IHTMLEventObj **p) = 0;
        
        virtual /* [restricted][hidden][id][propget] */ HRESULT STDMETHODCALLTYPE get__newEnum( 
            /* [out][retval] */ IUnknown **p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE showModalDialog( 
            /* [in] */ BSTR dialog,
            /* [in][optional] */ VARIANT *varArgIn,
            /* [in][optional] */ VARIANT *varOptions,
            /* [out][retval] */ VARIANT *varArgOut) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE showHelp( 
            /* [in] */ BSTR helpURL,
            /* [in][optional] */ VARIANT helpArg,
            /* [in][defaultvalue] */ BSTR features = L"") = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_screen( 
            /* [out][retval] */ IHTMLScreen **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_Option( 
            /* [out][retval] */ IHTMLOptionElementFactory **p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE focus( void) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_closed( 
            /* [out][retval] */ VARIANT_BOOL *p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE blur( void) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE scroll( 
            /* [in] */ long x,
            /* [in] */ long y) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_clientInformation( 
            /* [out][retval] */ IOmNavigator **p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE setInterval( 
            /* [in] */ BSTR expression,
            /* [in] */ long msec,
            /* [in][optional] */ VARIANT *language,
            /* [out][retval] */ long *timerID) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE clearInterval( 
            /* [in] */ long timerID) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_offscreenBuffering( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_offscreenBuffering( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE execScript( 
            /* [in] */ BSTR code,
            /* [in][defaultvalue] */ BSTR language,
            /* [out][retval] */ VARIANT *pvarRet) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE toString( 
            /* [out][retval] */ BSTR *String) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE scrollBy( 
            /* [in] */ long x,
            /* [in] */ long y) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE scrollTo( 
            /* [in] */ long x,
            /* [in] */ long y) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE moveTo( 
            /* [in] */ long x,
            /* [in] */ long y) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE moveBy( 
            /* [in] */ long x,
            /* [in] */ long y) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE resizeTo( 
            /* [in] */ long x,
            /* [in] */ long y) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE resizeBy( 
            /* [in] */ long x,
            /* [in] */ long y) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_external( 
            /* [out][retval] */ IDispatch **p) = 0;
        
    };
    



/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLWindow2_get_frames_Proxy( 
    IHTMLWindow2 * This,
    /* [out][retval] */ IHTMLFramesCollection2 **p);


void __RPC_STUB IHTMLWindow2_get_frames_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLWindow2_put_defaultStatus_Proxy( 
    IHTMLWindow2 * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLWindow2_put_defaultStatus_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLWindow2_get_defaultStatus_Proxy( 
    IHTMLWindow2 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLWindow2_get_defaultStatus_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLWindow2_put_status_Proxy( 
    IHTMLWindow2 * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLWindow2_put_status_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLWindow2_get_status_Proxy( 
    IHTMLWindow2 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLWindow2_get_status_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLWindow2_setTimeout_Proxy( 
    IHTMLWindow2 * This,
    /* [in] */ BSTR expression,
    /* [in] */ long msec,
    /* [in][optional] */ VARIANT *language,
    /* [out][retval] */ long *timerID);


void __RPC_STUB IHTMLWindow2_setTimeout_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLWindow2_clearTimeout_Proxy( 
    IHTMLWindow2 * This,
    /* [in] */ long timerID);


void __RPC_STUB IHTMLWindow2_clearTimeout_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLWindow2_alert_Proxy( 
    IHTMLWindow2 * This,
    /* [in][defaultvalue] */ BSTR message);


void __RPC_STUB IHTMLWindow2_alert_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLWindow2_confirm_Proxy( 
    IHTMLWindow2 * This,
    /* [in][defaultvalue] */ BSTR message,
    /* [out][retval] */ VARIANT_BOOL *confirmed);


void __RPC_STUB IHTMLWindow2_confirm_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLWindow2_prompt_Proxy( 
    IHTMLWindow2 * This,
    /* [in][defaultvalue] */ BSTR message,
    /* [in][defaultvalue] */ BSTR defstr,
    /* [out][retval] */ VARIANT *textdata);


void __RPC_STUB IHTMLWindow2_prompt_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLWindow2_get_Image_Proxy( 
    IHTMLWindow2 * This,
    /* [out][retval] */ IHTMLImageElementFactory **p);


void __RPC_STUB IHTMLWindow2_get_Image_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLWindow2_get_location_Proxy( 
    IHTMLWindow2 * This,
    /* [out][retval] */ IHTMLLocation **p);


void __RPC_STUB IHTMLWindow2_get_location_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLWindow2_get_history_Proxy( 
    IHTMLWindow2 * This,
    /* [out][retval] */ IOmHistory **p);


void __RPC_STUB IHTMLWindow2_get_history_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLWindow2_close_Proxy( 
    IHTMLWindow2 * This);


void __RPC_STUB IHTMLWindow2_close_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLWindow2_put_opener_Proxy( 
    IHTMLWindow2 * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLWindow2_put_opener_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLWindow2_get_opener_Proxy( 
    IHTMLWindow2 * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLWindow2_get_opener_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLWindow2_get_navigator_Proxy( 
    IHTMLWindow2 * This,
    /* [out][retval] */ IOmNavigator **p);


void __RPC_STUB IHTMLWindow2_get_navigator_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLWindow2_put_name_Proxy( 
    IHTMLWindow2 * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLWindow2_put_name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLWindow2_get_name_Proxy( 
    IHTMLWindow2 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLWindow2_get_name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLWindow2_get_parent_Proxy( 
    IHTMLWindow2 * This,
    /* [out][retval] */ IHTMLWindow2 **p);


void __RPC_STUB IHTMLWindow2_get_parent_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLWindow2_open_Proxy( 
    IHTMLWindow2 * This,
    /* [in][defaultvalue] */ BSTR url,
    /* [in][defaultvalue] */ BSTR name,
    /* [in][defaultvalue] */ BSTR features,
    /* [in][defaultvalue] */ VARIANT_BOOL replace,
    /* [out][retval] */ IHTMLWindow2 **pomWindowResult);


void __RPC_STUB IHTMLWindow2_open_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLWindow2_get_self_Proxy( 
    IHTMLWindow2 * This,
    /* [out][retval] */ IHTMLWindow2 **p);


void __RPC_STUB IHTMLWindow2_get_self_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLWindow2_get_top_Proxy( 
    IHTMLWindow2 * This,
    /* [out][retval] */ IHTMLWindow2 **p);


void __RPC_STUB IHTMLWindow2_get_top_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLWindow2_get_window_Proxy( 
    IHTMLWindow2 * This,
    /* [out][retval] */ IHTMLWindow2 **p);


void __RPC_STUB IHTMLWindow2_get_window_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLWindow2_navigate_Proxy( 
    IHTMLWindow2 * This,
    /* [in] */ BSTR url);


void __RPC_STUB IHTMLWindow2_navigate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLWindow2_put_onfocus_Proxy( 
    IHTMLWindow2 * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLWindow2_put_onfocus_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLWindow2_get_onfocus_Proxy( 
    IHTMLWindow2 * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLWindow2_get_onfocus_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLWindow2_put_onblur_Proxy( 
    IHTMLWindow2 * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLWindow2_put_onblur_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLWindow2_get_onblur_Proxy( 
    IHTMLWindow2 * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLWindow2_get_onblur_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLWindow2_put_onload_Proxy( 
    IHTMLWindow2 * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLWindow2_put_onload_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLWindow2_get_onload_Proxy( 
    IHTMLWindow2 * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLWindow2_get_onload_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLWindow2_put_onbeforeunload_Proxy( 
    IHTMLWindow2 * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLWindow2_put_onbeforeunload_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLWindow2_get_onbeforeunload_Proxy( 
    IHTMLWindow2 * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLWindow2_get_onbeforeunload_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLWindow2_put_onunload_Proxy( 
    IHTMLWindow2 * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLWindow2_put_onunload_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLWindow2_get_onunload_Proxy( 
    IHTMLWindow2 * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLWindow2_get_onunload_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLWindow2_put_onhelp_Proxy( 
    IHTMLWindow2 * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLWindow2_put_onhelp_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLWindow2_get_onhelp_Proxy( 
    IHTMLWindow2 * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLWindow2_get_onhelp_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLWindow2_put_onerror_Proxy( 
    IHTMLWindow2 * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLWindow2_put_onerror_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLWindow2_get_onerror_Proxy( 
    IHTMLWindow2 * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLWindow2_get_onerror_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLWindow2_put_onresize_Proxy( 
    IHTMLWindow2 * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLWindow2_put_onresize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLWindow2_get_onresize_Proxy( 
    IHTMLWindow2 * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLWindow2_get_onresize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLWindow2_put_onscroll_Proxy( 
    IHTMLWindow2 * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLWindow2_put_onscroll_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLWindow2_get_onscroll_Proxy( 
    IHTMLWindow2 * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLWindow2_get_onscroll_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [source][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLWindow2_get_document_Proxy( 
    IHTMLWindow2 * This,
    /* [out][retval] */ IHTMLDocument2 **p);


void __RPC_STUB IHTMLWindow2_get_document_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLWindow2_get_event_Proxy( 
    IHTMLWindow2 * This,
    /* [out][retval] */ IHTMLEventObj **p);


void __RPC_STUB IHTMLWindow2_get_event_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [restricted][hidden][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLWindow2_get__newEnum_Proxy( 
    IHTMLWindow2 * This,
    /* [out][retval] */ IUnknown **p);


void __RPC_STUB IHTMLWindow2_get__newEnum_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLWindow2_showModalDialog_Proxy( 
    IHTMLWindow2 * This,
    /* [in] */ BSTR dialog,
    /* [in][optional] */ VARIANT *varArgIn,
    /* [in][optional] */ VARIANT *varOptions,
    /* [out][retval] */ VARIANT *varArgOut);


void __RPC_STUB IHTMLWindow2_showModalDialog_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLWindow2_showHelp_Proxy( 
    IHTMLWindow2 * This,
    /* [in] */ BSTR helpURL,
    /* [in][optional] */ VARIANT helpArg,
    /* [in][defaultvalue] */ BSTR features);


void __RPC_STUB IHTMLWindow2_showHelp_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLWindow2_get_screen_Proxy( 
    IHTMLWindow2 * This,
    /* [out][retval] */ IHTMLScreen **p);


void __RPC_STUB IHTMLWindow2_get_screen_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLWindow2_get_Option_Proxy( 
    IHTMLWindow2 * This,
    /* [out][retval] */ IHTMLOptionElementFactory **p);


void __RPC_STUB IHTMLWindow2_get_Option_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLWindow2_focus_Proxy( 
    IHTMLWindow2 * This);


void __RPC_STUB IHTMLWindow2_focus_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLWindow2_get_closed_Proxy( 
    IHTMLWindow2 * This,
    /* [out][retval] */ VARIANT_BOOL *p);


void __RPC_STUB IHTMLWindow2_get_closed_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLWindow2_blur_Proxy( 
    IHTMLWindow2 * This);


void __RPC_STUB IHTMLWindow2_blur_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLWindow2_scroll_Proxy( 
    IHTMLWindow2 * This,
    /* [in] */ long x,
    /* [in] */ long y);


void __RPC_STUB IHTMLWindow2_scroll_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLWindow2_get_clientInformation_Proxy( 
    IHTMLWindow2 * This,
    /* [out][retval] */ IOmNavigator **p);


void __RPC_STUB IHTMLWindow2_get_clientInformation_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLWindow2_setInterval_Proxy( 
    IHTMLWindow2 * This,
    /* [in] */ BSTR expression,
    /* [in] */ long msec,
    /* [in][optional] */ VARIANT *language,
    /* [out][retval] */ long *timerID);


void __RPC_STUB IHTMLWindow2_setInterval_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLWindow2_clearInterval_Proxy( 
    IHTMLWindow2 * This,
    /* [in] */ long timerID);


void __RPC_STUB IHTMLWindow2_clearInterval_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLWindow2_put_offscreenBuffering_Proxy( 
    IHTMLWindow2 * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLWindow2_put_offscreenBuffering_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLWindow2_get_offscreenBuffering_Proxy( 
    IHTMLWindow2 * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLWindow2_get_offscreenBuffering_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLWindow2_execScript_Proxy( 
    IHTMLWindow2 * This,
    /* [in] */ BSTR code,
    /* [in][defaultvalue] */ BSTR language,
    /* [out][retval] */ VARIANT *pvarRet);


void __RPC_STUB IHTMLWindow2_execScript_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLWindow2_toString_Proxy( 
    IHTMLWindow2 * This,
    /* [out][retval] */ BSTR *String);


void __RPC_STUB IHTMLWindow2_toString_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLWindow2_scrollBy_Proxy( 
    IHTMLWindow2 * This,
    /* [in] */ long x,
    /* [in] */ long y);


void __RPC_STUB IHTMLWindow2_scrollBy_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLWindow2_scrollTo_Proxy( 
    IHTMLWindow2 * This,
    /* [in] */ long x,
    /* [in] */ long y);


void __RPC_STUB IHTMLWindow2_scrollTo_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLWindow2_moveTo_Proxy( 
    IHTMLWindow2 * This,
    /* [in] */ long x,
    /* [in] */ long y);


void __RPC_STUB IHTMLWindow2_moveTo_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLWindow2_moveBy_Proxy( 
    IHTMLWindow2 * This,
    /* [in] */ long x,
    /* [in] */ long y);


void __RPC_STUB IHTMLWindow2_moveBy_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLWindow2_resizeTo_Proxy( 
    IHTMLWindow2 * This,
    /* [in] */ long x,
    /* [in] */ long y);


void __RPC_STUB IHTMLWindow2_resizeTo_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLWindow2_resizeBy_Proxy( 
    IHTMLWindow2 * This,
    /* [in] */ long x,
    /* [in] */ long y);


void __RPC_STUB IHTMLWindow2_resizeBy_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLWindow2_get_external_Proxy( 
    IHTMLWindow2 * This,
    /* [out][retval] */ IDispatch **p);


void __RPC_STUB IHTMLWindow2_get_external_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLWindow2_INTERFACE_DEFINED__ */


#ifndef __IHTMLWindow3_INTERFACE_DEFINED__
#define __IHTMLWindow3_INTERFACE_DEFINED__

/* interface IHTMLWindow3 */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLWindow3;

    
    MIDL_INTERFACE("3050f4ae-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLWindow3 : public IDispatch
    {
    public:
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_screenLeft( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_screenTop( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE attachEvent( 
            /* [in] */ BSTR event,
            /* [in] */ IDispatch *pDisp,
            /* [out][retval] */ VARIANT_BOOL *pfResult) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE detachEvent( 
            /* [in] */ BSTR event,
            /* [in] */ IDispatch *pDisp) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE setTimeout( 
            /* [in] */ VARIANT *expression,
            /* [in] */ long msec,
            /* [in][optional] */ VARIANT *language,
            /* [out][retval] */ long *timerID) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE setInterval( 
            /* [in] */ VARIANT *expression,
            /* [in] */ long msec,
            /* [in][optional] */ VARIANT *language,
            /* [out][retval] */ long *timerID) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE print( void) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onbeforeprint( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onbeforeprint( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onafterprint( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onafterprint( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_clipboardData( 
            /* [out][retval] */ IHTMLDataTransfer **p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE showModelessDialog( 
            /* [in][defaultvalue] */ BSTR url,
            /* [in][optional] */ VARIANT *varArgIn,
            /* [in][optional] */ VARIANT *options,
            /* [out][retval] */ IHTMLWindow2 **pDialog) = 0;
        
    };
    



/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLWindow3_get_screenLeft_Proxy( 
    IHTMLWindow3 * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLWindow3_get_screenLeft_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLWindow3_get_screenTop_Proxy( 
    IHTMLWindow3 * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLWindow3_get_screenTop_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLWindow3_attachEvent_Proxy( 
    IHTMLWindow3 * This,
    /* [in] */ BSTR event,
    /* [in] */ IDispatch *pDisp,
    /* [out][retval] */ VARIANT_BOOL *pfResult);


void __RPC_STUB IHTMLWindow3_attachEvent_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLWindow3_detachEvent_Proxy( 
    IHTMLWindow3 * This,
    /* [in] */ BSTR event,
    /* [in] */ IDispatch *pDisp);


void __RPC_STUB IHTMLWindow3_detachEvent_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLWindow3_setTimeout_Proxy( 
    IHTMLWindow3 * This,
    /* [in] */ VARIANT *expression,
    /* [in] */ long msec,
    /* [in][optional] */ VARIANT *language,
    /* [out][retval] */ long *timerID);


void __RPC_STUB IHTMLWindow3_setTimeout_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLWindow3_setInterval_Proxy( 
    IHTMLWindow3 * This,
    /* [in] */ VARIANT *expression,
    /* [in] */ long msec,
    /* [in][optional] */ VARIANT *language,
    /* [out][retval] */ long *timerID);


void __RPC_STUB IHTMLWindow3_setInterval_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLWindow3_print_Proxy( 
    IHTMLWindow3 * This);


void __RPC_STUB IHTMLWindow3_print_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLWindow3_put_onbeforeprint_Proxy( 
    IHTMLWindow3 * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLWindow3_put_onbeforeprint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLWindow3_get_onbeforeprint_Proxy( 
    IHTMLWindow3 * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLWindow3_get_onbeforeprint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLWindow3_put_onafterprint_Proxy( 
    IHTMLWindow3 * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLWindow3_put_onafterprint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLWindow3_get_onafterprint_Proxy( 
    IHTMLWindow3 * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLWindow3_get_onafterprint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLWindow3_get_clipboardData_Proxy( 
    IHTMLWindow3 * This,
    /* [out][retval] */ IHTMLDataTransfer **p);


void __RPC_STUB IHTMLWindow3_get_clipboardData_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLWindow3_showModelessDialog_Proxy( 
    IHTMLWindow3 * This,
    /* [in][defaultvalue] */ BSTR url,
    /* [in][optional] */ VARIANT *varArgIn,
    /* [in][optional] */ VARIANT *options,
    /* [out][retval] */ IHTMLWindow2 **pDialog);


void __RPC_STUB IHTMLWindow3_showModelessDialog_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLWindow3_INTERFACE_DEFINED__ */


#ifndef __IHTMLFrameBase_INTERFACE_DEFINED__
#define __IHTMLFrameBase_INTERFACE_DEFINED__

/* interface IHTMLFrameBase */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLFrameBase;

    
    MIDL_INTERFACE("3050f311-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLFrameBase : public IDispatch
    {
    public:
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_src( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_src( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_name( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_name( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_border( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_border( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_frameBorder( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_frameBorder( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_frameSpacing( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_frameSpacing( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_marginWidth( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_marginWidth( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_marginHeight( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_marginHeight( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_noResize( 
            /* [in] */ VARIANT_BOOL v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_noResize( 
            /* [out][retval] */ VARIANT_BOOL *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_scrolling( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_scrolling( 
            /* [out][retval] */ BSTR *p) = 0;
        
    };
    



/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLFrameBase_put_src_Proxy( 
    IHTMLFrameBase * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLFrameBase_put_src_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLFrameBase_get_src_Proxy( 
    IHTMLFrameBase * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLFrameBase_get_src_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLFrameBase_put_name_Proxy( 
    IHTMLFrameBase * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLFrameBase_put_name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLFrameBase_get_name_Proxy( 
    IHTMLFrameBase * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLFrameBase_get_name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLFrameBase_put_border_Proxy( 
    IHTMLFrameBase * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLFrameBase_put_border_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLFrameBase_get_border_Proxy( 
    IHTMLFrameBase * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLFrameBase_get_border_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLFrameBase_put_frameBorder_Proxy( 
    IHTMLFrameBase * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLFrameBase_put_frameBorder_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLFrameBase_get_frameBorder_Proxy( 
    IHTMLFrameBase * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLFrameBase_get_frameBorder_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLFrameBase_put_frameSpacing_Proxy( 
    IHTMLFrameBase * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLFrameBase_put_frameSpacing_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLFrameBase_get_frameSpacing_Proxy( 
    IHTMLFrameBase * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLFrameBase_get_frameSpacing_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLFrameBase_put_marginWidth_Proxy( 
    IHTMLFrameBase * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLFrameBase_put_marginWidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLFrameBase_get_marginWidth_Proxy( 
    IHTMLFrameBase * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLFrameBase_get_marginWidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLFrameBase_put_marginHeight_Proxy( 
    IHTMLFrameBase * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLFrameBase_put_marginHeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLFrameBase_get_marginHeight_Proxy( 
    IHTMLFrameBase * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLFrameBase_get_marginHeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLFrameBase_put_noResize_Proxy( 
    IHTMLFrameBase * This,
    /* [in] */ VARIANT_BOOL v);


void __RPC_STUB IHTMLFrameBase_put_noResize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLFrameBase_get_noResize_Proxy( 
    IHTMLFrameBase * This,
    /* [out][retval] */ VARIANT_BOOL *p);


void __RPC_STUB IHTMLFrameBase_get_noResize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLFrameBase_put_scrolling_Proxy( 
    IHTMLFrameBase * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLFrameBase_put_scrolling_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLFrameBase_get_scrolling_Proxy( 
    IHTMLFrameBase * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLFrameBase_get_scrolling_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLFrameBase_INTERFACE_DEFINED__ */


#ifndef __IHTMLScreen_INTERFACE_DEFINED__
#define __IHTMLScreen_INTERFACE_DEFINED__

/* interface IHTMLScreen */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLScreen;

    
    MIDL_INTERFACE("3050f35c-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLScreen : public IDispatch
    {
    public:
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_colorDepth( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_bufferDepth( 
            /* [in] */ long v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_bufferDepth( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_width( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_height( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_updateInterval( 
            /* [in] */ long v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_updateInterval( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_availHeight( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_availWidth( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_fontSmoothingEnabled( 
            /* [out][retval] */ VARIANT_BOOL *p) = 0;
        
    };
    



/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLScreen_get_colorDepth_Proxy( 
    IHTMLScreen * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLScreen_get_colorDepth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLScreen_put_bufferDepth_Proxy( 
    IHTMLScreen * This,
    /* [in] */ long v);


void __RPC_STUB IHTMLScreen_put_bufferDepth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLScreen_get_bufferDepth_Proxy( 
    IHTMLScreen * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLScreen_get_bufferDepth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLScreen_get_width_Proxy( 
    IHTMLScreen * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLScreen_get_width_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLScreen_get_height_Proxy( 
    IHTMLScreen * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLScreen_get_height_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLScreen_put_updateInterval_Proxy( 
    IHTMLScreen * This,
    /* [in] */ long v);


void __RPC_STUB IHTMLScreen_put_updateInterval_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLScreen_get_updateInterval_Proxy( 
    IHTMLScreen * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLScreen_get_updateInterval_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLScreen_get_availHeight_Proxy( 
    IHTMLScreen * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLScreen_get_availHeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLScreen_get_availWidth_Proxy( 
    IHTMLScreen * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLScreen_get_availWidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLScreen_get_fontSmoothingEnabled_Proxy( 
    IHTMLScreen * This,
    /* [out][retval] */ VARIANT_BOOL *p);


void __RPC_STUB IHTMLScreen_get_fontSmoothingEnabled_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLScreen_INTERFACE_DEFINED__ */


#ifndef __IHTMLScreen2_INTERFACE_DEFINED__
#define __IHTMLScreen2_INTERFACE_DEFINED__

/* interface IHTMLScreen2 */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLScreen2;

    
    MIDL_INTERFACE("3050f84a-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLScreen2 : public IDispatch
    {
    public:
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_logicalXDPI( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_logicalYDPI( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_deviceXDPI( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_deviceYDPI( 
            /* [out][retval] */ long *p) = 0;
        
    };
    



/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLScreen2_get_logicalXDPI_Proxy( 
    IHTMLScreen2 * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLScreen2_get_logicalXDPI_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLScreen2_get_logicalYDPI_Proxy( 
    IHTMLScreen2 * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLScreen2_get_logicalYDPI_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLScreen2_get_deviceXDPI_Proxy( 
    IHTMLScreen2 * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLScreen2_get_deviceXDPI_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLScreen2_get_deviceYDPI_Proxy( 
    IHTMLScreen2 * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLScreen2_get_deviceYDPI_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLScreen2_INTERFACE_DEFINED__ */


#ifndef __IHTMLWindow4_INTERFACE_DEFINED__
#define __IHTMLWindow4_INTERFACE_DEFINED__

/* interface IHTMLWindow4 */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLWindow4;

    
    MIDL_INTERFACE("3050f6cf-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLWindow4 : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE createPopup( 
            /* [in][optional] */ VARIANT *varArgIn,
            /* [out][retval] */ IDispatch **ppPopup) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_frameElement( 
            /* [out][retval] */ IHTMLFrameBase **p) = 0;
        
    };
    



/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLWindow4_createPopup_Proxy( 
    IHTMLWindow4 * This,
    /* [in][optional] */ VARIANT *varArgIn,
    /* [out][retval] */ IDispatch **ppPopup);


void __RPC_STUB IHTMLWindow4_createPopup_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLWindow4_get_frameElement_Proxy( 
    IHTMLWindow4 * This,
    /* [out][retval] */ IHTMLFrameBase **p);


void __RPC_STUB IHTMLWindow4_get_frameElement_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLWindow4_INTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_FramesCollection;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f7f6-98b5-11cf-bb82-00aa00bdce0b")
FramesCollection;
#endif

#ifndef __DispHTMLScreen_DISPINTERFACE_DEFINED__
#define __DispHTMLScreen_DISPINTERFACE_DEFINED__

/* dispinterface DispHTMLScreen */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_DispHTMLScreen;


    MIDL_INTERFACE("3050f591-98b5-11cf-bb82-00aa00bdce0b")
    DispHTMLScreen : public IDispatch
    {
    };
    


#endif 	/* __DispHTMLScreen_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_HTMLScreen;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f35d-98b5-11cf-bb82-00aa00bdce0b")
HTMLScreen;
#endif

#ifndef __DispHTMLWindow2_DISPINTERFACE_DEFINED__
#define __DispHTMLWindow2_DISPINTERFACE_DEFINED__

/* dispinterface DispHTMLWindow2 */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_DispHTMLWindow2;


    MIDL_INTERFACE("3050f55d-98b5-11cf-bb82-00aa00bdce0b")
    DispHTMLWindow2 : public IDispatch
    {
    };
    


#endif 	/* __DispHTMLWindow2_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_HTMLWindow2;

#ifdef __cplusplus

class DECLSPEC_UUID("D48A6EC6-6A4A-11cf-94A7-444553540000")
HTMLWindow2;
#endif

#ifndef __DispHTMLWindowProxy_DISPINTERFACE_DEFINED__
#define __DispHTMLWindowProxy_DISPINTERFACE_DEFINED__

/* dispinterface DispHTMLWindowProxy */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_DispHTMLWindowProxy;


    MIDL_INTERFACE("3050f55e-98b5-11cf-bb82-00aa00bdce0b")
    DispHTMLWindowProxy : public IDispatch
    {
    };
    


#endif 	/* __DispHTMLWindowProxy_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_HTMLWindowProxy;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f391-98b5-11cf-bb82-00aa00bdce0b")
HTMLWindowProxy;
#endif

#ifndef __HTMLDocumentEvents2_DISPINTERFACE_DEFINED__
#define __HTMLDocumentEvents2_DISPINTERFACE_DEFINED__

/* dispinterface HTMLDocumentEvents2 */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_HTMLDocumentEvents2;


    MIDL_INTERFACE("3050f613-98b5-11cf-bb82-00aa00bdce0b")
    HTMLDocumentEvents2 : public IDispatch
    {
    };
    


#endif 	/* __HTMLDocumentEvents2_DISPINTERFACE_DEFINED__ */


#ifndef __HTMLDocumentEvents_DISPINTERFACE_DEFINED__
#define __HTMLDocumentEvents_DISPINTERFACE_DEFINED__

/* dispinterface HTMLDocumentEvents */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_HTMLDocumentEvents;


    MIDL_INTERFACE("3050f260-98b5-11cf-bb82-00aa00bdce0b")
    HTMLDocumentEvents : public IDispatch
    {
    };
    


#endif 	/* __HTMLDocumentEvents_DISPINTERFACE_DEFINED__ */


#ifndef __IHTMLDocument3_INTERFACE_DEFINED__
#define __IHTMLDocument3_INTERFACE_DEFINED__

/* interface IHTMLDocument3 */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLDocument3;

    
    MIDL_INTERFACE("3050f485-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLDocument3 : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE releaseCapture( void) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE recalc( 
            /* [in][defaultvalue] */ VARIANT_BOOL fForce = 0) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE createTextNode( 
            /* [in] */ BSTR text,
            /* [out][retval] */ IHTMLDOMNode **newTextNode) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_documentElement( 
            /* [out][retval] */ IHTMLElement **p) = 0;
        
        virtual /* [hidden][id][propget] */ HRESULT STDMETHODCALLTYPE get_uniqueID( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE attachEvent( 
            /* [in] */ BSTR event,
            /* [in] */ IDispatch *pDisp,
            /* [out][retval] */ VARIANT_BOOL *pfResult) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE detachEvent( 
            /* [in] */ BSTR event,
            /* [in] */ IDispatch *pDisp) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onrowsdelete( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onrowsdelete( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onrowsinserted( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onrowsinserted( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_oncellchange( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_oncellchange( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_ondatasetchanged( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_ondatasetchanged( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_ondataavailable( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_ondataavailable( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_ondatasetcomplete( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_ondatasetcomplete( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onpropertychange( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onpropertychange( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_dir( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_dir( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_oncontextmenu( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_oncontextmenu( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onstop( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onstop( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE createDocumentFragment( 
            /* [out][retval] */ IHTMLDocument2 **pNewDoc) = 0;
        
        virtual /* [restricted][hidden][id][propget] */ HRESULT STDMETHODCALLTYPE get_parentDocument( 
            /* [out][retval] */ IHTMLDocument2 **p) = 0;
        
        virtual /* [restricted][hidden][id][propput] */ HRESULT STDMETHODCALLTYPE put_enableDownload( 
            /* [in] */ VARIANT_BOOL v) = 0;
        
        virtual /* [restricted][hidden][id][propget] */ HRESULT STDMETHODCALLTYPE get_enableDownload( 
            /* [out][retval] */ VARIANT_BOOL *p) = 0;
        
        virtual /* [restricted][hidden][id][propput] */ HRESULT STDMETHODCALLTYPE put_baseUrl( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [restricted][hidden][id][propget] */ HRESULT STDMETHODCALLTYPE get_baseUrl( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_childNodes( 
            /* [out][retval] */ IDispatch **p) = 0;
        
        virtual /* [restricted][hidden][id][propput] */ HRESULT STDMETHODCALLTYPE put_inheritStyleSheets( 
            /* [in] */ VARIANT_BOOL v) = 0;
        
        virtual /* [restricted][hidden][id][propget] */ HRESULT STDMETHODCALLTYPE get_inheritStyleSheets( 
            /* [out][retval] */ VARIANT_BOOL *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onbeforeeditfocus( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onbeforeeditfocus( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE getElementsByName( 
            /* [in] */ BSTR v,
            /* [out][retval] */ IHTMLElementCollection **pelColl) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE getElementById( 
            /* [in] */ BSTR v,
            /* [out][retval] */ IHTMLElement **pel) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE getElementsByTagName( 
            /* [in] */ BSTR v,
            /* [out][retval] */ IHTMLElementCollection **pelColl) = 0;
        
    };
    



/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLDocument3_releaseCapture_Proxy( 
    IHTMLDocument3 * This);


void __RPC_STUB IHTMLDocument3_releaseCapture_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLDocument3_recalc_Proxy( 
    IHTMLDocument3 * This,
    /* [in][defaultvalue] */ VARIANT_BOOL fForce);


void __RPC_STUB IHTMLDocument3_recalc_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLDocument3_createTextNode_Proxy( 
    IHTMLDocument3 * This,
    /* [in] */ BSTR text,
    /* [out][retval] */ IHTMLDOMNode **newTextNode);


void __RPC_STUB IHTMLDocument3_createTextNode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDocument3_get_documentElement_Proxy( 
    IHTMLDocument3 * This,
    /* [out][retval] */ IHTMLElement **p);


void __RPC_STUB IHTMLDocument3_get_documentElement_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [hidden][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDocument3_get_uniqueID_Proxy( 
    IHTMLDocument3 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLDocument3_get_uniqueID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLDocument3_attachEvent_Proxy( 
    IHTMLDocument3 * This,
    /* [in] */ BSTR event,
    /* [in] */ IDispatch *pDisp,
    /* [out][retval] */ VARIANT_BOOL *pfResult);


void __RPC_STUB IHTMLDocument3_attachEvent_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLDocument3_detachEvent_Proxy( 
    IHTMLDocument3 * This,
    /* [in] */ BSTR event,
    /* [in] */ IDispatch *pDisp);


void __RPC_STUB IHTMLDocument3_detachEvent_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLDocument3_put_onrowsdelete_Proxy( 
    IHTMLDocument3 * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLDocument3_put_onrowsdelete_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDocument3_get_onrowsdelete_Proxy( 
    IHTMLDocument3 * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLDocument3_get_onrowsdelete_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLDocument3_put_onrowsinserted_Proxy( 
    IHTMLDocument3 * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLDocument3_put_onrowsinserted_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDocument3_get_onrowsinserted_Proxy( 
    IHTMLDocument3 * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLDocument3_get_onrowsinserted_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLDocument3_put_oncellchange_Proxy( 
    IHTMLDocument3 * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLDocument3_put_oncellchange_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDocument3_get_oncellchange_Proxy( 
    IHTMLDocument3 * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLDocument3_get_oncellchange_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLDocument3_put_ondatasetchanged_Proxy( 
    IHTMLDocument3 * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLDocument3_put_ondatasetchanged_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDocument3_get_ondatasetchanged_Proxy( 
    IHTMLDocument3 * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLDocument3_get_ondatasetchanged_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLDocument3_put_ondataavailable_Proxy( 
    IHTMLDocument3 * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLDocument3_put_ondataavailable_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDocument3_get_ondataavailable_Proxy( 
    IHTMLDocument3 * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLDocument3_get_ondataavailable_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLDocument3_put_ondatasetcomplete_Proxy( 
    IHTMLDocument3 * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLDocument3_put_ondatasetcomplete_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDocument3_get_ondatasetcomplete_Proxy( 
    IHTMLDocument3 * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLDocument3_get_ondatasetcomplete_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLDocument3_put_onpropertychange_Proxy( 
    IHTMLDocument3 * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLDocument3_put_onpropertychange_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDocument3_get_onpropertychange_Proxy( 
    IHTMLDocument3 * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLDocument3_get_onpropertychange_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLDocument3_put_dir_Proxy( 
    IHTMLDocument3 * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLDocument3_put_dir_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDocument3_get_dir_Proxy( 
    IHTMLDocument3 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLDocument3_get_dir_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLDocument3_put_oncontextmenu_Proxy( 
    IHTMLDocument3 * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLDocument3_put_oncontextmenu_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDocument3_get_oncontextmenu_Proxy( 
    IHTMLDocument3 * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLDocument3_get_oncontextmenu_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLDocument3_put_onstop_Proxy( 
    IHTMLDocument3 * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLDocument3_put_onstop_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDocument3_get_onstop_Proxy( 
    IHTMLDocument3 * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLDocument3_get_onstop_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLDocument3_createDocumentFragment_Proxy( 
    IHTMLDocument3 * This,
    /* [out][retval] */ IHTMLDocument2 **pNewDoc);


void __RPC_STUB IHTMLDocument3_createDocumentFragment_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [restricted][hidden][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDocument3_get_parentDocument_Proxy( 
    IHTMLDocument3 * This,
    /* [out][retval] */ IHTMLDocument2 **p);


void __RPC_STUB IHTMLDocument3_get_parentDocument_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [restricted][hidden][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLDocument3_put_enableDownload_Proxy( 
    IHTMLDocument3 * This,
    /* [in] */ VARIANT_BOOL v);


void __RPC_STUB IHTMLDocument3_put_enableDownload_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [restricted][hidden][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDocument3_get_enableDownload_Proxy( 
    IHTMLDocument3 * This,
    /* [out][retval] */ VARIANT_BOOL *p);


void __RPC_STUB IHTMLDocument3_get_enableDownload_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [restricted][hidden][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLDocument3_put_baseUrl_Proxy( 
    IHTMLDocument3 * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLDocument3_put_baseUrl_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [restricted][hidden][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDocument3_get_baseUrl_Proxy( 
    IHTMLDocument3 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLDocument3_get_baseUrl_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDocument3_get_childNodes_Proxy( 
    IHTMLDocument3 * This,
    /* [out][retval] */ IDispatch **p);


void __RPC_STUB IHTMLDocument3_get_childNodes_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [restricted][hidden][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLDocument3_put_inheritStyleSheets_Proxy( 
    IHTMLDocument3 * This,
    /* [in] */ VARIANT_BOOL v);


void __RPC_STUB IHTMLDocument3_put_inheritStyleSheets_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [restricted][hidden][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDocument3_get_inheritStyleSheets_Proxy( 
    IHTMLDocument3 * This,
    /* [out][retval] */ VARIANT_BOOL *p);


void __RPC_STUB IHTMLDocument3_get_inheritStyleSheets_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLDocument3_put_onbeforeeditfocus_Proxy( 
    IHTMLDocument3 * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLDocument3_put_onbeforeeditfocus_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDocument3_get_onbeforeeditfocus_Proxy( 
    IHTMLDocument3 * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLDocument3_get_onbeforeeditfocus_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLDocument3_getElementsByName_Proxy( 
    IHTMLDocument3 * This,
    /* [in] */ BSTR v,
    /* [out][retval] */ IHTMLElementCollection **pelColl);


void __RPC_STUB IHTMLDocument3_getElementsByName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLDocument3_getElementById_Proxy( 
    IHTMLDocument3 * This,
    /* [in] */ BSTR v,
    /* [out][retval] */ IHTMLElement **pel);


void __RPC_STUB IHTMLDocument3_getElementById_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLDocument3_getElementsByTagName_Proxy( 
    IHTMLDocument3 * This,
    /* [in] */ BSTR v,
    /* [out][retval] */ IHTMLElementCollection **pelColl);


void __RPC_STUB IHTMLDocument3_getElementsByTagName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLDocument3_INTERFACE_DEFINED__ */


#ifndef __IHTMLDocument4_INTERFACE_DEFINED__
#define __IHTMLDocument4_INTERFACE_DEFINED__

/* interface IHTMLDocument4 */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLDocument4;

    
    MIDL_INTERFACE("3050f69a-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLDocument4 : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE focus( void) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE hasFocus( 
            /* [out][retval] */ VARIANT_BOOL *pfFocus) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onselectionchange( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onselectionchange( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_namespaces( 
            /* [out][retval] */ IDispatch **p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE createDocumentFromUrl( 
            /* [in] */ BSTR bstrUrl,
            /* [in] */ BSTR bstrOptions,
            /* [out][retval] */ IHTMLDocument2 **newDoc) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_media( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_media( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE createEventObject( 
            /* [in][optional] */ VARIANT *pvarEventObject,
            /* [out][retval] */ IHTMLEventObj **ppEventObj) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE fireEvent( 
            /* [in] */ BSTR bstrEventName,
            /* [in][optional] */ VARIANT *pvarEventObject,
            /* [out][retval] */ VARIANT_BOOL *pfCancelled) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE createRenderStyle( 
            /* [in] */ BSTR v,
            /* [out][retval] */ IHTMLRenderStyle **ppIHTMLRenderStyle) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_oncontrolselect( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_oncontrolselect( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_URLUnencoded( 
            /* [out][retval] */ BSTR *p) = 0;
        
    };
    



/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLDocument4_focus_Proxy( 
    IHTMLDocument4 * This);


void __RPC_STUB IHTMLDocument4_focus_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLDocument4_hasFocus_Proxy( 
    IHTMLDocument4 * This,
    /* [out][retval] */ VARIANT_BOOL *pfFocus);


void __RPC_STUB IHTMLDocument4_hasFocus_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLDocument4_put_onselectionchange_Proxy( 
    IHTMLDocument4 * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLDocument4_put_onselectionchange_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDocument4_get_onselectionchange_Proxy( 
    IHTMLDocument4 * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLDocument4_get_onselectionchange_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDocument4_get_namespaces_Proxy( 
    IHTMLDocument4 * This,
    /* [out][retval] */ IDispatch **p);


void __RPC_STUB IHTMLDocument4_get_namespaces_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLDocument4_createDocumentFromUrl_Proxy( 
    IHTMLDocument4 * This,
    /* [in] */ BSTR bstrUrl,
    /* [in] */ BSTR bstrOptions,
    /* [out][retval] */ IHTMLDocument2 **newDoc);


void __RPC_STUB IHTMLDocument4_createDocumentFromUrl_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLDocument4_put_media_Proxy( 
    IHTMLDocument4 * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLDocument4_put_media_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDocument4_get_media_Proxy( 
    IHTMLDocument4 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLDocument4_get_media_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLDocument4_createEventObject_Proxy( 
    IHTMLDocument4 * This,
    /* [in][optional] */ VARIANT *pvarEventObject,
    /* [out][retval] */ IHTMLEventObj **ppEventObj);


void __RPC_STUB IHTMLDocument4_createEventObject_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLDocument4_fireEvent_Proxy( 
    IHTMLDocument4 * This,
    /* [in] */ BSTR bstrEventName,
    /* [in][optional] */ VARIANT *pvarEventObject,
    /* [out][retval] */ VARIANT_BOOL *pfCancelled);


void __RPC_STUB IHTMLDocument4_fireEvent_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLDocument4_createRenderStyle_Proxy( 
    IHTMLDocument4 * This,
    /* [in] */ BSTR v,
    /* [out][retval] */ IHTMLRenderStyle **ppIHTMLRenderStyle);


void __RPC_STUB IHTMLDocument4_createRenderStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLDocument4_put_oncontrolselect_Proxy( 
    IHTMLDocument4 * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLDocument4_put_oncontrolselect_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDocument4_get_oncontrolselect_Proxy( 
    IHTMLDocument4 * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLDocument4_get_oncontrolselect_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDocument4_get_URLUnencoded_Proxy( 
    IHTMLDocument4 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLDocument4_get_URLUnencoded_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLDocument4_INTERFACE_DEFINED__ */


#ifndef __IHTMLDocument5_INTERFACE_DEFINED__
#define __IHTMLDocument5_INTERFACE_DEFINED__

/* interface IHTMLDocument5 */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLDocument5;

    
    MIDL_INTERFACE("3050f80c-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLDocument5 : public IDispatch
    {
    public:
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onmousewheel( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onmousewheel( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_doctype( 
            /* [out][retval] */ IHTMLDOMNode **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_implementation( 
            /* [out][retval] */ IHTMLDOMImplementation **p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE createAttribute( 
            /* [in] */ BSTR bstrattrName,
            /* [out][retval] */ IHTMLDOMAttribute **ppattribute) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE createComment( 
            /* [in] */ BSTR bstrdata,
            /* [out][retval] */ IHTMLDOMNode **ppRetNode) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onfocusin( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onfocusin( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onfocusout( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onfocusout( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onactivate( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onactivate( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_ondeactivate( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_ondeactivate( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onbeforeactivate( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onbeforeactivate( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onbeforedeactivate( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onbeforedeactivate( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_compatMode( 
            /* [out][retval] */ BSTR *p) = 0;
        
    };
    



/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLDocument5_put_onmousewheel_Proxy( 
    IHTMLDocument5 * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLDocument5_put_onmousewheel_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDocument5_get_onmousewheel_Proxy( 
    IHTMLDocument5 * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLDocument5_get_onmousewheel_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDocument5_get_doctype_Proxy( 
    IHTMLDocument5 * This,
    /* [out][retval] */ IHTMLDOMNode **p);


void __RPC_STUB IHTMLDocument5_get_doctype_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDocument5_get_implementation_Proxy( 
    IHTMLDocument5 * This,
    /* [out][retval] */ IHTMLDOMImplementation **p);


void __RPC_STUB IHTMLDocument5_get_implementation_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLDocument5_createAttribute_Proxy( 
    IHTMLDocument5 * This,
    /* [in] */ BSTR bstrattrName,
    /* [out][retval] */ IHTMLDOMAttribute **ppattribute);


void __RPC_STUB IHTMLDocument5_createAttribute_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLDocument5_createComment_Proxy( 
    IHTMLDocument5 * This,
    /* [in] */ BSTR bstrdata,
    /* [out][retval] */ IHTMLDOMNode **ppRetNode);


void __RPC_STUB IHTMLDocument5_createComment_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLDocument5_put_onfocusin_Proxy( 
    IHTMLDocument5 * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLDocument5_put_onfocusin_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDocument5_get_onfocusin_Proxy( 
    IHTMLDocument5 * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLDocument5_get_onfocusin_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLDocument5_put_onfocusout_Proxy( 
    IHTMLDocument5 * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLDocument5_put_onfocusout_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDocument5_get_onfocusout_Proxy( 
    IHTMLDocument5 * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLDocument5_get_onfocusout_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLDocument5_put_onactivate_Proxy( 
    IHTMLDocument5 * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLDocument5_put_onactivate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDocument5_get_onactivate_Proxy( 
    IHTMLDocument5 * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLDocument5_get_onactivate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLDocument5_put_ondeactivate_Proxy( 
    IHTMLDocument5 * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLDocument5_put_ondeactivate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDocument5_get_ondeactivate_Proxy( 
    IHTMLDocument5 * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLDocument5_get_ondeactivate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLDocument5_put_onbeforeactivate_Proxy( 
    IHTMLDocument5 * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLDocument5_put_onbeforeactivate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDocument5_get_onbeforeactivate_Proxy( 
    IHTMLDocument5 * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLDocument5_get_onbeforeactivate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLDocument5_put_onbeforedeactivate_Proxy( 
    IHTMLDocument5 * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLDocument5_put_onbeforedeactivate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDocument5_get_onbeforedeactivate_Proxy( 
    IHTMLDocument5 * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLDocument5_get_onbeforedeactivate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDocument5_get_compatMode_Proxy( 
    IHTMLDocument5 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLDocument5_get_compatMode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLDocument5_INTERFACE_DEFINED__ */


#ifndef __DispHTMLDocument_DISPINTERFACE_DEFINED__
#define __DispHTMLDocument_DISPINTERFACE_DEFINED__

/* dispinterface DispHTMLDocument */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_DispHTMLDocument;


    MIDL_INTERFACE("3050f55f-98b5-11cf-bb82-00aa00bdce0b")
    DispHTMLDocument : public IDispatch
    {
    };
    


#endif 	/* __DispHTMLDocument_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_HTMLDocument;

#ifdef __cplusplus

class DECLSPEC_UUID("25336920-03F9-11cf-8FD0-00AA00686F13")
HTMLDocument;
#endif

#ifndef __DWebBridgeEvents_DISPINTERFACE_DEFINED__
#define __DWebBridgeEvents_DISPINTERFACE_DEFINED__

/* dispinterface DWebBridgeEvents */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_DWebBridgeEvents;


    MIDL_INTERFACE("A6D897FF-0A95-11d1-B0BA-006008166E11")
    DWebBridgeEvents : public IDispatch
    {
    };
    


#endif 	/* __DWebBridgeEvents_DISPINTERFACE_DEFINED__ */


#ifndef __IWebBridge_INTERFACE_DEFINED__
#define __IWebBridge_INTERFACE_DEFINED__

/* interface IWebBridge */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IWebBridge;

    
    MIDL_INTERFACE("AE24FDAD-03C6-11D1-8B76-0080C744F389")
    IWebBridge : public IDispatch
    {
    public:
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_URL( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_URL( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_Scrollbar( 
            /* [in] */ VARIANT_BOOL v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_Scrollbar( 
            /* [out][retval] */ VARIANT_BOOL *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_embed( 
            /* [in] */ VARIANT_BOOL v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_embed( 
            /* [out][retval] */ VARIANT_BOOL *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_event( 
            /* [out][retval] */ IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_readyState( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE AboutBox( void) = 0;
        
    };
    



/* [id][propput] */ HRESULT STDMETHODCALLTYPE IWebBridge_put_URL_Proxy( 
    IWebBridge * This,
    /* [in] */ BSTR v);


void __RPC_STUB IWebBridge_put_URL_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IWebBridge_get_URL_Proxy( 
    IWebBridge * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IWebBridge_get_URL_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IWebBridge_put_Scrollbar_Proxy( 
    IWebBridge * This,
    /* [in] */ VARIANT_BOOL v);


void __RPC_STUB IWebBridge_put_Scrollbar_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IWebBridge_get_Scrollbar_Proxy( 
    IWebBridge * This,
    /* [out][retval] */ VARIANT_BOOL *p);


void __RPC_STUB IWebBridge_get_Scrollbar_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IWebBridge_put_embed_Proxy( 
    IWebBridge * This,
    /* [in] */ VARIANT_BOOL v);


void __RPC_STUB IWebBridge_put_embed_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IWebBridge_get_embed_Proxy( 
    IWebBridge * This,
    /* [out][retval] */ VARIANT_BOOL *p);


void __RPC_STUB IWebBridge_get_embed_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IWebBridge_get_event_Proxy( 
    IWebBridge * This,
    /* [out][retval] */ IDispatch **p);


void __RPC_STUB IWebBridge_get_event_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IWebBridge_get_readyState_Proxy( 
    IWebBridge * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IWebBridge_get_readyState_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IWebBridge_AboutBox_Proxy( 
    IWebBridge * This);


void __RPC_STUB IWebBridge_AboutBox_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IWebBridge_INTERFACE_DEFINED__ */


#ifndef __IWBScriptControl_INTERFACE_DEFINED__
#define __IWBScriptControl_INTERFACE_DEFINED__

/* interface IWBScriptControl */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IWBScriptControl;

    
    MIDL_INTERFACE("A5170870-0CF8-11D1-8B91-0080C744F389")
    IWBScriptControl : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE raiseEvent( 
            /* [in] */ BSTR name,
            /* [in] */ VARIANT eventData) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE bubbleEvent( void) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE setContextMenu( 
            /* [in] */ VARIANT menuItemPairs) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_selectableContent( 
            /* [in] */ VARIANT_BOOL v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_selectableContent( 
            /* [out][retval] */ VARIANT_BOOL *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_frozen( 
            /* [out][retval] */ VARIANT_BOOL *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_scrollbar( 
            /* [in] */ VARIANT_BOOL v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_scrollbar( 
            /* [out][retval] */ VARIANT_BOOL *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_version( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_visibility( 
            /* [out][retval] */ VARIANT_BOOL *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_onvisibilitychange( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_onvisibilitychange( 
            /* [out][retval] */ VARIANT *p) = 0;
        
    };
    



/* [id] */ HRESULT STDMETHODCALLTYPE IWBScriptControl_raiseEvent_Proxy( 
    IWBScriptControl * This,
    /* [in] */ BSTR name,
    /* [in] */ VARIANT eventData);


void __RPC_STUB IWBScriptControl_raiseEvent_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IWBScriptControl_bubbleEvent_Proxy( 
    IWBScriptControl * This);


void __RPC_STUB IWBScriptControl_bubbleEvent_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IWBScriptControl_setContextMenu_Proxy( 
    IWBScriptControl * This,
    /* [in] */ VARIANT menuItemPairs);


void __RPC_STUB IWBScriptControl_setContextMenu_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IWBScriptControl_put_selectableContent_Proxy( 
    IWBScriptControl * This,
    /* [in] */ VARIANT_BOOL v);


void __RPC_STUB IWBScriptControl_put_selectableContent_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IWBScriptControl_get_selectableContent_Proxy( 
    IWBScriptControl * This,
    /* [out][retval] */ VARIANT_BOOL *p);


void __RPC_STUB IWBScriptControl_get_selectableContent_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IWBScriptControl_get_frozen_Proxy( 
    IWBScriptControl * This,
    /* [out][retval] */ VARIANT_BOOL *p);


void __RPC_STUB IWBScriptControl_get_frozen_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IWBScriptControl_put_scrollbar_Proxy( 
    IWBScriptControl * This,
    /* [in] */ VARIANT_BOOL v);


void __RPC_STUB IWBScriptControl_put_scrollbar_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IWBScriptControl_get_scrollbar_Proxy( 
    IWBScriptControl * This,
    /* [out][retval] */ VARIANT_BOOL *p);


void __RPC_STUB IWBScriptControl_get_scrollbar_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IWBScriptControl_get_version_Proxy( 
    IWBScriptControl * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IWBScriptControl_get_version_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IWBScriptControl_get_visibility_Proxy( 
    IWBScriptControl * This,
    /* [out][retval] */ VARIANT_BOOL *p);


void __RPC_STUB IWBScriptControl_get_visibility_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IWBScriptControl_put_onvisibilitychange_Proxy( 
    IWBScriptControl * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IWBScriptControl_put_onvisibilitychange_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IWBScriptControl_get_onvisibilitychange_Proxy( 
    IWBScriptControl * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IWBScriptControl_get_onvisibilitychange_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IWBScriptControl_INTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_Scriptlet;

#ifdef __cplusplus

class DECLSPEC_UUID("AE24FDAE-03C6-11D1-8B76-0080C744F389")
Scriptlet;
#endif

#ifndef __IHTMLEmbedElement_INTERFACE_DEFINED__
#define __IHTMLEmbedElement_INTERFACE_DEFINED__

/* interface IHTMLEmbedElement */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLEmbedElement;

    
    MIDL_INTERFACE("3050f25f-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLEmbedElement : public IDispatch
    {
    public:
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_hidden( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_hidden( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_palette( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_pluginspage( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_src( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_src( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_units( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_units( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_name( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_name( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_width( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_width( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_height( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_height( 
            /* [out][retval] */ VARIANT *p) = 0;
        
    };
    



/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLEmbedElement_put_hidden_Proxy( 
    IHTMLEmbedElement * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLEmbedElement_put_hidden_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLEmbedElement_get_hidden_Proxy( 
    IHTMLEmbedElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLEmbedElement_get_hidden_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLEmbedElement_get_palette_Proxy( 
    IHTMLEmbedElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLEmbedElement_get_palette_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLEmbedElement_get_pluginspage_Proxy( 
    IHTMLEmbedElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLEmbedElement_get_pluginspage_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLEmbedElement_put_src_Proxy( 
    IHTMLEmbedElement * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLEmbedElement_put_src_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLEmbedElement_get_src_Proxy( 
    IHTMLEmbedElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLEmbedElement_get_src_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLEmbedElement_put_units_Proxy( 
    IHTMLEmbedElement * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLEmbedElement_put_units_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLEmbedElement_get_units_Proxy( 
    IHTMLEmbedElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLEmbedElement_get_units_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLEmbedElement_put_name_Proxy( 
    IHTMLEmbedElement * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLEmbedElement_put_name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLEmbedElement_get_name_Proxy( 
    IHTMLEmbedElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLEmbedElement_get_name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLEmbedElement_put_width_Proxy( 
    IHTMLEmbedElement * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLEmbedElement_put_width_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLEmbedElement_get_width_Proxy( 
    IHTMLEmbedElement * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLEmbedElement_get_width_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLEmbedElement_put_height_Proxy( 
    IHTMLEmbedElement * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLEmbedElement_put_height_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLEmbedElement_get_height_Proxy( 
    IHTMLEmbedElement * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLEmbedElement_get_height_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLEmbedElement_INTERFACE_DEFINED__ */


#ifndef __DispHTMLEmbed_DISPINTERFACE_DEFINED__
#define __DispHTMLEmbed_DISPINTERFACE_DEFINED__

/* dispinterface DispHTMLEmbed */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_DispHTMLEmbed;


    MIDL_INTERFACE("3050f52e-98b5-11cf-bb82-00aa00bdce0b")
    DispHTMLEmbed : public IDispatch
    {
    };
    


#endif 	/* __DispHTMLEmbed_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_HTMLEmbed;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f25d-98b5-11cf-bb82-00aa00bdce0b")
HTMLEmbed;
#endif

#ifndef __HTMLMapEvents2_DISPINTERFACE_DEFINED__
#define __HTMLMapEvents2_DISPINTERFACE_DEFINED__

/* dispinterface HTMLMapEvents2 */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_HTMLMapEvents2;


    MIDL_INTERFACE("3050f61e-98b5-11cf-bb82-00aa00bdce0b")
    HTMLMapEvents2 : public IDispatch
    {
    };
    


#endif 	/* __HTMLMapEvents2_DISPINTERFACE_DEFINED__ */


#ifndef __HTMLMapEvents_DISPINTERFACE_DEFINED__
#define __HTMLMapEvents_DISPINTERFACE_DEFINED__

/* dispinterface HTMLMapEvents */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_HTMLMapEvents;


    MIDL_INTERFACE("3050f3ba-98b5-11cf-bb82-00aa00bdce0b")
    HTMLMapEvents : public IDispatch
    {
    };
    


#endif 	/* __HTMLMapEvents_DISPINTERFACE_DEFINED__ */


#ifndef __IHTMLAreasCollection_INTERFACE_DEFINED__
#define __IHTMLAreasCollection_INTERFACE_DEFINED__

/* interface IHTMLAreasCollection */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLAreasCollection;

    
    MIDL_INTERFACE("3050f383-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLAreasCollection : public IDispatch
    {
    public:
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_length( 
            /* [in] */ long v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_length( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [restricted][hidden][id][propget] */ HRESULT STDMETHODCALLTYPE get__newEnum( 
            /* [out][retval] */ IUnknown **p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE item( 
            /* [in][optional] */ VARIANT name,
            /* [in][optional] */ VARIANT index,
            /* [out][retval] */ IDispatch **pdisp) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE tags( 
            /* [in] */ VARIANT tagName,
            /* [out][retval] */ IDispatch **pdisp) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE add( 
            /* [in] */ IHTMLElement *element,
            /* [in][optional] */ VARIANT before) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE remove( 
            /* [in][defaultvalue] */ long index = -1) = 0;
        
    };
    



/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLAreasCollection_put_length_Proxy( 
    IHTMLAreasCollection * This,
    /* [in] */ long v);


void __RPC_STUB IHTMLAreasCollection_put_length_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLAreasCollection_get_length_Proxy( 
    IHTMLAreasCollection * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLAreasCollection_get_length_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [restricted][hidden][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLAreasCollection_get__newEnum_Proxy( 
    IHTMLAreasCollection * This,
    /* [out][retval] */ IUnknown **p);


void __RPC_STUB IHTMLAreasCollection_get__newEnum_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLAreasCollection_item_Proxy( 
    IHTMLAreasCollection * This,
    /* [in][optional] */ VARIANT name,
    /* [in][optional] */ VARIANT index,
    /* [out][retval] */ IDispatch **pdisp);


void __RPC_STUB IHTMLAreasCollection_item_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLAreasCollection_tags_Proxy( 
    IHTMLAreasCollection * This,
    /* [in] */ VARIANT tagName,
    /* [out][retval] */ IDispatch **pdisp);


void __RPC_STUB IHTMLAreasCollection_tags_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLAreasCollection_add_Proxy( 
    IHTMLAreasCollection * This,
    /* [in] */ IHTMLElement *element,
    /* [in][optional] */ VARIANT before);


void __RPC_STUB IHTMLAreasCollection_add_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLAreasCollection_remove_Proxy( 
    IHTMLAreasCollection * This,
    /* [in][defaultvalue] */ long index);


void __RPC_STUB IHTMLAreasCollection_remove_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLAreasCollection_INTERFACE_DEFINED__ */


#ifndef __IHTMLAreasCollection2_INTERFACE_DEFINED__
#define __IHTMLAreasCollection2_INTERFACE_DEFINED__

/* interface IHTMLAreasCollection2 */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLAreasCollection2;

    
    MIDL_INTERFACE("3050f5ec-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLAreasCollection2 : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE urns( 
            /* [in] */ VARIANT urn,
            /* [out][retval] */ IDispatch **pdisp) = 0;
        
    };
    



/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLAreasCollection2_urns_Proxy( 
    IHTMLAreasCollection2 * This,
    /* [in] */ VARIANT urn,
    /* [out][retval] */ IDispatch **pdisp);


void __RPC_STUB IHTMLAreasCollection2_urns_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLAreasCollection2_INTERFACE_DEFINED__ */


#ifndef __IHTMLAreasCollection3_INTERFACE_DEFINED__
#define __IHTMLAreasCollection3_INTERFACE_DEFINED__

/* interface IHTMLAreasCollection3 */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLAreasCollection3;

    
    MIDL_INTERFACE("3050f837-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLAreasCollection3 : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE namedItem( 
            /* [in] */ BSTR name,
            /* [out][retval] */ IDispatch **pdisp) = 0;
        
    };
    



/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLAreasCollection3_namedItem_Proxy( 
    IHTMLAreasCollection3 * This,
    /* [in] */ BSTR name,
    /* [out][retval] */ IDispatch **pdisp);


void __RPC_STUB IHTMLAreasCollection3_namedItem_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLAreasCollection3_INTERFACE_DEFINED__ */


#ifndef __IHTMLMapElement_INTERFACE_DEFINED__
#define __IHTMLMapElement_INTERFACE_DEFINED__

/* interface IHTMLMapElement */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLMapElement;

    
    MIDL_INTERFACE("3050f266-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLMapElement : public IDispatch
    {
    public:
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_areas( 
            /* [out][retval] */ IHTMLAreasCollection **p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_name( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_name( 
            /* [out][retval] */ BSTR *p) = 0;
        
    };
    



/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLMapElement_get_areas_Proxy( 
    IHTMLMapElement * This,
    /* [out][retval] */ IHTMLAreasCollection **p);


void __RPC_STUB IHTMLMapElement_get_areas_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLMapElement_put_name_Proxy( 
    IHTMLMapElement * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLMapElement_put_name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLMapElement_get_name_Proxy( 
    IHTMLMapElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLMapElement_get_name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLMapElement_INTERFACE_DEFINED__ */


#ifndef __DispHTMLAreasCollection_DISPINTERFACE_DEFINED__
#define __DispHTMLAreasCollection_DISPINTERFACE_DEFINED__

/* dispinterface DispHTMLAreasCollection */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_DispHTMLAreasCollection;


    MIDL_INTERFACE("3050f56a-98b5-11cf-bb82-00aa00bdce0b")
    DispHTMLAreasCollection : public IDispatch
    {
    };
    


#endif 	/* __DispHTMLAreasCollection_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_HTMLAreasCollection;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f4ca-98b5-11cf-bb82-00aa00bdce0b")
HTMLAreasCollection;
#endif

#ifndef __DispHTMLMapElement_DISPINTERFACE_DEFINED__
#define __DispHTMLMapElement_DISPINTERFACE_DEFINED__

/* dispinterface DispHTMLMapElement */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_DispHTMLMapElement;


    MIDL_INTERFACE("3050f526-98b5-11cf-bb82-00aa00bdce0b")
    DispHTMLMapElement : public IDispatch
    {
    };
    


#endif 	/* __DispHTMLMapElement_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_HTMLMapElement;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f271-98b5-11cf-bb82-00aa00bdce0b")
HTMLMapElement;
#endif

#ifndef __HTMLAreaEvents2_DISPINTERFACE_DEFINED__
#define __HTMLAreaEvents2_DISPINTERFACE_DEFINED__

/* dispinterface HTMLAreaEvents2 */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_HTMLAreaEvents2;


    MIDL_INTERFACE("3050f611-98b5-11cf-bb82-00aa00bdce0b")
    HTMLAreaEvents2 : public IDispatch
    {
    };
    


#endif 	/* __HTMLAreaEvents2_DISPINTERFACE_DEFINED__ */


#ifndef __HTMLAreaEvents_DISPINTERFACE_DEFINED__
#define __HTMLAreaEvents_DISPINTERFACE_DEFINED__

/* dispinterface HTMLAreaEvents */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_HTMLAreaEvents;


    MIDL_INTERFACE("3050f366-98b5-11cf-bb82-00aa00bdce0b")
    HTMLAreaEvents : public IDispatch
    {
    };
    


#endif 	/* __HTMLAreaEvents_DISPINTERFACE_DEFINED__ */


#ifndef __IHTMLAreaElement_INTERFACE_DEFINED__
#define __IHTMLAreaElement_INTERFACE_DEFINED__

/* interface IHTMLAreaElement */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLAreaElement;

    
    MIDL_INTERFACE("3050f265-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLAreaElement : public IDispatch
    {
    public:
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_shape( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_shape( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_coords( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_coords( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_href( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_href( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_target( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_target( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_alt( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_alt( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_noHref( 
            /* [in] */ VARIANT_BOOL v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_noHref( 
            /* [out][retval] */ VARIANT_BOOL *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_host( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_host( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_hostname( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_hostname( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_pathname( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_pathname( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_port( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_port( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_protocol( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_protocol( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_search( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_search( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_hash( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_hash( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onblur( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onblur( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onfocus( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onfocus( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_tabIndex( 
            /* [in] */ short v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_tabIndex( 
            /* [out][retval] */ short *p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE focus( void) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE blur( void) = 0;
        
    };
    



/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLAreaElement_put_shape_Proxy( 
    IHTMLAreaElement * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLAreaElement_put_shape_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLAreaElement_get_shape_Proxy( 
    IHTMLAreaElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLAreaElement_get_shape_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLAreaElement_put_coords_Proxy( 
    IHTMLAreaElement * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLAreaElement_put_coords_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLAreaElement_get_coords_Proxy( 
    IHTMLAreaElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLAreaElement_get_coords_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLAreaElement_put_href_Proxy( 
    IHTMLAreaElement * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLAreaElement_put_href_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLAreaElement_get_href_Proxy( 
    IHTMLAreaElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLAreaElement_get_href_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLAreaElement_put_target_Proxy( 
    IHTMLAreaElement * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLAreaElement_put_target_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLAreaElement_get_target_Proxy( 
    IHTMLAreaElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLAreaElement_get_target_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLAreaElement_put_alt_Proxy( 
    IHTMLAreaElement * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLAreaElement_put_alt_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLAreaElement_get_alt_Proxy( 
    IHTMLAreaElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLAreaElement_get_alt_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLAreaElement_put_noHref_Proxy( 
    IHTMLAreaElement * This,
    /* [in] */ VARIANT_BOOL v);


void __RPC_STUB IHTMLAreaElement_put_noHref_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLAreaElement_get_noHref_Proxy( 
    IHTMLAreaElement * This,
    /* [out][retval] */ VARIANT_BOOL *p);


void __RPC_STUB IHTMLAreaElement_get_noHref_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLAreaElement_put_host_Proxy( 
    IHTMLAreaElement * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLAreaElement_put_host_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLAreaElement_get_host_Proxy( 
    IHTMLAreaElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLAreaElement_get_host_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLAreaElement_put_hostname_Proxy( 
    IHTMLAreaElement * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLAreaElement_put_hostname_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLAreaElement_get_hostname_Proxy( 
    IHTMLAreaElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLAreaElement_get_hostname_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLAreaElement_put_pathname_Proxy( 
    IHTMLAreaElement * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLAreaElement_put_pathname_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLAreaElement_get_pathname_Proxy( 
    IHTMLAreaElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLAreaElement_get_pathname_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLAreaElement_put_port_Proxy( 
    IHTMLAreaElement * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLAreaElement_put_port_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLAreaElement_get_port_Proxy( 
    IHTMLAreaElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLAreaElement_get_port_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLAreaElement_put_protocol_Proxy( 
    IHTMLAreaElement * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLAreaElement_put_protocol_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLAreaElement_get_protocol_Proxy( 
    IHTMLAreaElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLAreaElement_get_protocol_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLAreaElement_put_search_Proxy( 
    IHTMLAreaElement * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLAreaElement_put_search_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLAreaElement_get_search_Proxy( 
    IHTMLAreaElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLAreaElement_get_search_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLAreaElement_put_hash_Proxy( 
    IHTMLAreaElement * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLAreaElement_put_hash_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLAreaElement_get_hash_Proxy( 
    IHTMLAreaElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLAreaElement_get_hash_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLAreaElement_put_onblur_Proxy( 
    IHTMLAreaElement * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLAreaElement_put_onblur_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLAreaElement_get_onblur_Proxy( 
    IHTMLAreaElement * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLAreaElement_get_onblur_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLAreaElement_put_onfocus_Proxy( 
    IHTMLAreaElement * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLAreaElement_put_onfocus_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLAreaElement_get_onfocus_Proxy( 
    IHTMLAreaElement * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLAreaElement_get_onfocus_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLAreaElement_put_tabIndex_Proxy( 
    IHTMLAreaElement * This,
    /* [in] */ short v);


void __RPC_STUB IHTMLAreaElement_put_tabIndex_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLAreaElement_get_tabIndex_Proxy( 
    IHTMLAreaElement * This,
    /* [out][retval] */ short *p);


void __RPC_STUB IHTMLAreaElement_get_tabIndex_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLAreaElement_focus_Proxy( 
    IHTMLAreaElement * This);


void __RPC_STUB IHTMLAreaElement_focus_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLAreaElement_blur_Proxy( 
    IHTMLAreaElement * This);


void __RPC_STUB IHTMLAreaElement_blur_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLAreaElement_INTERFACE_DEFINED__ */


#ifndef __DispHTMLAreaElement_DISPINTERFACE_DEFINED__
#define __DispHTMLAreaElement_DISPINTERFACE_DEFINED__

/* dispinterface DispHTMLAreaElement */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_DispHTMLAreaElement;


    MIDL_INTERFACE("3050f503-98b5-11cf-bb82-00aa00bdce0b")
    DispHTMLAreaElement : public IDispatch
    {
    };
    


#endif 	/* __DispHTMLAreaElement_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_HTMLAreaElement;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f283-98b5-11cf-bb82-00aa00bdce0b")
HTMLAreaElement;
#endif

#ifndef __IHTMLTableCaption_INTERFACE_DEFINED__
#define __IHTMLTableCaption_INTERFACE_DEFINED__

/* interface IHTMLTableCaption */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLTableCaption;

    
    MIDL_INTERFACE("3050f2eb-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLTableCaption : public IDispatch
    {
    public:
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_align( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_align( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_vAlign( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_vAlign( 
            /* [out][retval] */ BSTR *p) = 0;
        
    };
    



/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLTableCaption_put_align_Proxy( 
    IHTMLTableCaption * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLTableCaption_put_align_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLTableCaption_get_align_Proxy( 
    IHTMLTableCaption * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLTableCaption_get_align_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLTableCaption_put_vAlign_Proxy( 
    IHTMLTableCaption * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLTableCaption_put_vAlign_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLTableCaption_get_vAlign_Proxy( 
    IHTMLTableCaption * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLTableCaption_get_vAlign_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLTableCaption_INTERFACE_DEFINED__ */


#ifndef __DispHTMLTableCaption_DISPINTERFACE_DEFINED__
#define __DispHTMLTableCaption_DISPINTERFACE_DEFINED__

/* dispinterface DispHTMLTableCaption */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_DispHTMLTableCaption;


    MIDL_INTERFACE("3050f508-98b5-11cf-bb82-00aa00bdce0b")
    DispHTMLTableCaption : public IDispatch
    {
    };
    


#endif 	/* __DispHTMLTableCaption_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_HTMLTableCaption;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f2ec-98b5-11cf-bb82-00aa00bdce0b")
HTMLTableCaption;
#endif

#ifndef __IHTMLCommentElement_INTERFACE_DEFINED__
#define __IHTMLCommentElement_INTERFACE_DEFINED__

/* interface IHTMLCommentElement */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLCommentElement;

    
    MIDL_INTERFACE("3050f20c-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLCommentElement : public IDispatch
    {
    public:
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_text( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_text( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_atomic( 
            /* [in] */ long v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_atomic( 
            /* [out][retval] */ long *p) = 0;
        
    };
    



/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLCommentElement_put_text_Proxy( 
    IHTMLCommentElement * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLCommentElement_put_text_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCommentElement_get_text_Proxy( 
    IHTMLCommentElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLCommentElement_get_text_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLCommentElement_put_atomic_Proxy( 
    IHTMLCommentElement * This,
    /* [in] */ long v);


void __RPC_STUB IHTMLCommentElement_put_atomic_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCommentElement_get_atomic_Proxy( 
    IHTMLCommentElement * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLCommentElement_get_atomic_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLCommentElement_INTERFACE_DEFINED__ */


#ifndef __IHTMLCommentElement2_INTERFACE_DEFINED__
#define __IHTMLCommentElement2_INTERFACE_DEFINED__

/* interface IHTMLCommentElement2 */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLCommentElement2;

    
    MIDL_INTERFACE("3050f813-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLCommentElement2 : public IDispatch
    {
    public:
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_data( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_data( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_length( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE substringData( 
            /* [in] */ long offset,
            /* [in] */ long Count,
            /* [out][retval] */ BSTR *pbstrsubString) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE appendData( 
            /* [in] */ BSTR bstrstring) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE insertData( 
            /* [in] */ long offset,
            /* [in] */ BSTR bstrstring) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE deleteData( 
            /* [in] */ long offset,
            /* [in] */ long Count) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE replaceData( 
            /* [in] */ long offset,
            /* [in] */ long Count,
            /* [in] */ BSTR bstrstring) = 0;
        
    };
    



/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLCommentElement2_put_data_Proxy( 
    IHTMLCommentElement2 * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLCommentElement2_put_data_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCommentElement2_get_data_Proxy( 
    IHTMLCommentElement2 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLCommentElement2_get_data_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCommentElement2_get_length_Proxy( 
    IHTMLCommentElement2 * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLCommentElement2_get_length_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLCommentElement2_substringData_Proxy( 
    IHTMLCommentElement2 * This,
    /* [in] */ long offset,
    /* [in] */ long Count,
    /* [out][retval] */ BSTR *pbstrsubString);


void __RPC_STUB IHTMLCommentElement2_substringData_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLCommentElement2_appendData_Proxy( 
    IHTMLCommentElement2 * This,
    /* [in] */ BSTR bstrstring);


void __RPC_STUB IHTMLCommentElement2_appendData_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLCommentElement2_insertData_Proxy( 
    IHTMLCommentElement2 * This,
    /* [in] */ long offset,
    /* [in] */ BSTR bstrstring);


void __RPC_STUB IHTMLCommentElement2_insertData_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLCommentElement2_deleteData_Proxy( 
    IHTMLCommentElement2 * This,
    /* [in] */ long offset,
    /* [in] */ long Count);


void __RPC_STUB IHTMLCommentElement2_deleteData_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLCommentElement2_replaceData_Proxy( 
    IHTMLCommentElement2 * This,
    /* [in] */ long offset,
    /* [in] */ long Count,
    /* [in] */ BSTR bstrstring);


void __RPC_STUB IHTMLCommentElement2_replaceData_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLCommentElement2_INTERFACE_DEFINED__ */


#ifndef __DispHTMLCommentElement_DISPINTERFACE_DEFINED__
#define __DispHTMLCommentElement_DISPINTERFACE_DEFINED__

/* dispinterface DispHTMLCommentElement */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_DispHTMLCommentElement;


    MIDL_INTERFACE("3050f50a-98b5-11cf-bb82-00aa00bdce0b")
    DispHTMLCommentElement : public IDispatch
    {
    };
    


#endif 	/* __DispHTMLCommentElement_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_HTMLCommentElement;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f317-98b5-11cf-bb82-00aa00bdce0b")
HTMLCommentElement;
#endif

#ifndef __IHTMLPhraseElement_INTERFACE_DEFINED__
#define __IHTMLPhraseElement_INTERFACE_DEFINED__

/* interface IHTMLPhraseElement */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLPhraseElement;

    
    MIDL_INTERFACE("3050f20a-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLPhraseElement : public IDispatch
    {
    public:
    };
    




#endif 	/* __IHTMLPhraseElement_INTERFACE_DEFINED__ */


#ifndef __IHTMLPhraseElement2_INTERFACE_DEFINED__
#define __IHTMLPhraseElement2_INTERFACE_DEFINED__

/* interface IHTMLPhraseElement2 */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLPhraseElement2;

    
    MIDL_INTERFACE("3050f824-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLPhraseElement2 : public IDispatch
    {
    public:
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_cite( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_cite( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_dateTime( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_dateTime( 
            /* [out][retval] */ BSTR *p) = 0;
        
    };
    



/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLPhraseElement2_put_cite_Proxy( 
    IHTMLPhraseElement2 * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLPhraseElement2_put_cite_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLPhraseElement2_get_cite_Proxy( 
    IHTMLPhraseElement2 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLPhraseElement2_get_cite_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLPhraseElement2_put_dateTime_Proxy( 
    IHTMLPhraseElement2 * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLPhraseElement2_put_dateTime_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLPhraseElement2_get_dateTime_Proxy( 
    IHTMLPhraseElement2 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLPhraseElement2_get_dateTime_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLPhraseElement2_INTERFACE_DEFINED__ */


#ifndef __IHTMLSpanElement_INTERFACE_DEFINED__
#define __IHTMLSpanElement_INTERFACE_DEFINED__

/* interface IHTMLSpanElement */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLSpanElement;

    
    MIDL_INTERFACE("3050f3f3-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLSpanElement : public IDispatch
    {
    public:
    };
    




#endif 	/* __IHTMLSpanElement_INTERFACE_DEFINED__ */


#ifndef __DispHTMLPhraseElement_DISPINTERFACE_DEFINED__
#define __DispHTMLPhraseElement_DISPINTERFACE_DEFINED__

/* dispinterface DispHTMLPhraseElement */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_DispHTMLPhraseElement;


    MIDL_INTERFACE("3050f52d-98b5-11cf-bb82-00aa00bdce0b")
    DispHTMLPhraseElement : public IDispatch
    {
    };
    


#endif 	/* __DispHTMLPhraseElement_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_HTMLPhraseElement;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f26e-98b5-11cf-bb82-00aa00bdce0b")
HTMLPhraseElement;
#endif

#ifndef __DispHTMLSpanElement_DISPINTERFACE_DEFINED__
#define __DispHTMLSpanElement_DISPINTERFACE_DEFINED__

/* dispinterface DispHTMLSpanElement */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_DispHTMLSpanElement;


    MIDL_INTERFACE("3050f548-98b5-11cf-bb82-00aa00bdce0b")
    DispHTMLSpanElement : public IDispatch
    {
    };
    


#endif 	/* __DispHTMLSpanElement_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_HTMLSpanElement;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f3f5-98b4-11cf-bb82-00aa00bdce0b")
HTMLSpanElement;
#endif

#ifndef __HTMLTableEvents2_DISPINTERFACE_DEFINED__
#define __HTMLTableEvents2_DISPINTERFACE_DEFINED__

/* dispinterface HTMLTableEvents2 */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_HTMLTableEvents2;


    MIDL_INTERFACE("3050f623-98b5-11cf-bb82-00aa00bdce0b")
    HTMLTableEvents2 : public IDispatch
    {
    };
    


#endif 	/* __HTMLTableEvents2_DISPINTERFACE_DEFINED__ */


#ifndef __HTMLTableEvents_DISPINTERFACE_DEFINED__
#define __HTMLTableEvents_DISPINTERFACE_DEFINED__

/* dispinterface HTMLTableEvents */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_HTMLTableEvents;


    MIDL_INTERFACE("3050f407-98b5-11cf-bb82-00aa00bdce0b")
    HTMLTableEvents : public IDispatch
    {
    };
    


#endif 	/* __HTMLTableEvents_DISPINTERFACE_DEFINED__ */


#ifndef __IHTMLTableSection_INTERFACE_DEFINED__
#define __IHTMLTableSection_INTERFACE_DEFINED__

/* interface IHTMLTableSection */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLTableSection;

    
    MIDL_INTERFACE("3050f23b-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLTableSection : public IDispatch
    {
    public:
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_align( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_align( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_vAlign( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_vAlign( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_bgColor( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_bgColor( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_rows( 
            /* [out][retval] */ IHTMLElementCollection **p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE insertRow( 
            /* [in][defaultvalue] */ long index,
            /* [out][retval] */ IDispatch **row) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE deleteRow( 
            /* [in][defaultvalue] */ long index = -1) = 0;
        
    };
    



/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLTableSection_put_align_Proxy( 
    IHTMLTableSection * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLTableSection_put_align_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLTableSection_get_align_Proxy( 
    IHTMLTableSection * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLTableSection_get_align_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLTableSection_put_vAlign_Proxy( 
    IHTMLTableSection * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLTableSection_put_vAlign_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLTableSection_get_vAlign_Proxy( 
    IHTMLTableSection * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLTableSection_get_vAlign_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLTableSection_put_bgColor_Proxy( 
    IHTMLTableSection * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLTableSection_put_bgColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLTableSection_get_bgColor_Proxy( 
    IHTMLTableSection * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLTableSection_get_bgColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLTableSection_get_rows_Proxy( 
    IHTMLTableSection * This,
    /* [out][retval] */ IHTMLElementCollection **p);


void __RPC_STUB IHTMLTableSection_get_rows_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLTableSection_insertRow_Proxy( 
    IHTMLTableSection * This,
    /* [in][defaultvalue] */ long index,
    /* [out][retval] */ IDispatch **row);


void __RPC_STUB IHTMLTableSection_insertRow_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLTableSection_deleteRow_Proxy( 
    IHTMLTableSection * This,
    /* [in][defaultvalue] */ long index);


void __RPC_STUB IHTMLTableSection_deleteRow_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLTableSection_INTERFACE_DEFINED__ */


#ifndef __IHTMLTable_INTERFACE_DEFINED__
#define __IHTMLTable_INTERFACE_DEFINED__

/* interface IHTMLTable */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLTable;

    
    MIDL_INTERFACE("3050f21e-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLTable : public IDispatch
    {
    public:
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_cols( 
            /* [in] */ long v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_cols( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_border( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_border( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_frame( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_frame( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_rules( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_rules( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_cellSpacing( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_cellSpacing( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_cellPadding( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_cellPadding( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_background( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_background( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_bgColor( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_bgColor( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_borderColor( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_borderColor( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_borderColorLight( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_borderColorLight( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_borderColorDark( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_borderColorDark( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_align( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_align( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE refresh( void) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_rows( 
            /* [out][retval] */ IHTMLElementCollection **p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_width( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_width( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_height( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_height( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_dataPageSize( 
            /* [in] */ long v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_dataPageSize( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE nextPage( void) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE previousPage( void) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_tHead( 
            /* [out][retval] */ IHTMLTableSection **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_tFoot( 
            /* [out][retval] */ IHTMLTableSection **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_tBodies( 
            /* [out][retval] */ IHTMLElementCollection **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_caption( 
            /* [out][retval] */ IHTMLTableCaption **p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE createTHead( 
            /* [out][retval] */ IDispatch **head) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE deleteTHead( void) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE createTFoot( 
            /* [out][retval] */ IDispatch **foot) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE deleteTFoot( void) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE createCaption( 
            /* [out][retval] */ IHTMLTableCaption **caption) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE deleteCaption( void) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE insertRow( 
            /* [in][defaultvalue] */ long index,
            /* [out][retval] */ IDispatch **row) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE deleteRow( 
            /* [in][defaultvalue] */ long index = -1) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_readyState( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onreadystatechange( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onreadystatechange( 
            /* [out][retval] */ VARIANT *p) = 0;
        
    };
    



/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLTable_put_cols_Proxy( 
    IHTMLTable * This,
    /* [in] */ long v);


void __RPC_STUB IHTMLTable_put_cols_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLTable_get_cols_Proxy( 
    IHTMLTable * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLTable_get_cols_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLTable_put_border_Proxy( 
    IHTMLTable * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLTable_put_border_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLTable_get_border_Proxy( 
    IHTMLTable * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLTable_get_border_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLTable_put_frame_Proxy( 
    IHTMLTable * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLTable_put_frame_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLTable_get_frame_Proxy( 
    IHTMLTable * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLTable_get_frame_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLTable_put_rules_Proxy( 
    IHTMLTable * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLTable_put_rules_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLTable_get_rules_Proxy( 
    IHTMLTable * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLTable_get_rules_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLTable_put_cellSpacing_Proxy( 
    IHTMLTable * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLTable_put_cellSpacing_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLTable_get_cellSpacing_Proxy( 
    IHTMLTable * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLTable_get_cellSpacing_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLTable_put_cellPadding_Proxy( 
    IHTMLTable * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLTable_put_cellPadding_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLTable_get_cellPadding_Proxy( 
    IHTMLTable * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLTable_get_cellPadding_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLTable_put_background_Proxy( 
    IHTMLTable * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLTable_put_background_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLTable_get_background_Proxy( 
    IHTMLTable * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLTable_get_background_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLTable_put_bgColor_Proxy( 
    IHTMLTable * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLTable_put_bgColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLTable_get_bgColor_Proxy( 
    IHTMLTable * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLTable_get_bgColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLTable_put_borderColor_Proxy( 
    IHTMLTable * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLTable_put_borderColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLTable_get_borderColor_Proxy( 
    IHTMLTable * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLTable_get_borderColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLTable_put_borderColorLight_Proxy( 
    IHTMLTable * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLTable_put_borderColorLight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLTable_get_borderColorLight_Proxy( 
    IHTMLTable * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLTable_get_borderColorLight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLTable_put_borderColorDark_Proxy( 
    IHTMLTable * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLTable_put_borderColorDark_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLTable_get_borderColorDark_Proxy( 
    IHTMLTable * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLTable_get_borderColorDark_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLTable_put_align_Proxy( 
    IHTMLTable * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLTable_put_align_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLTable_get_align_Proxy( 
    IHTMLTable * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLTable_get_align_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLTable_refresh_Proxy( 
    IHTMLTable * This);


void __RPC_STUB IHTMLTable_refresh_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLTable_get_rows_Proxy( 
    IHTMLTable * This,
    /* [out][retval] */ IHTMLElementCollection **p);


void __RPC_STUB IHTMLTable_get_rows_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLTable_put_width_Proxy( 
    IHTMLTable * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLTable_put_width_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLTable_get_width_Proxy( 
    IHTMLTable * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLTable_get_width_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLTable_put_height_Proxy( 
    IHTMLTable * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLTable_put_height_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLTable_get_height_Proxy( 
    IHTMLTable * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLTable_get_height_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLTable_put_dataPageSize_Proxy( 
    IHTMLTable * This,
    /* [in] */ long v);


void __RPC_STUB IHTMLTable_put_dataPageSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLTable_get_dataPageSize_Proxy( 
    IHTMLTable * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLTable_get_dataPageSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLTable_nextPage_Proxy( 
    IHTMLTable * This);


void __RPC_STUB IHTMLTable_nextPage_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLTable_previousPage_Proxy( 
    IHTMLTable * This);


void __RPC_STUB IHTMLTable_previousPage_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLTable_get_tHead_Proxy( 
    IHTMLTable * This,
    /* [out][retval] */ IHTMLTableSection **p);


void __RPC_STUB IHTMLTable_get_tHead_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLTable_get_tFoot_Proxy( 
    IHTMLTable * This,
    /* [out][retval] */ IHTMLTableSection **p);


void __RPC_STUB IHTMLTable_get_tFoot_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLTable_get_tBodies_Proxy( 
    IHTMLTable * This,
    /* [out][retval] */ IHTMLElementCollection **p);


void __RPC_STUB IHTMLTable_get_tBodies_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLTable_get_caption_Proxy( 
    IHTMLTable * This,
    /* [out][retval] */ IHTMLTableCaption **p);


void __RPC_STUB IHTMLTable_get_caption_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLTable_createTHead_Proxy( 
    IHTMLTable * This,
    /* [out][retval] */ IDispatch **head);


void __RPC_STUB IHTMLTable_createTHead_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLTable_deleteTHead_Proxy( 
    IHTMLTable * This);


void __RPC_STUB IHTMLTable_deleteTHead_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLTable_createTFoot_Proxy( 
    IHTMLTable * This,
    /* [out][retval] */ IDispatch **foot);


void __RPC_STUB IHTMLTable_createTFoot_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLTable_deleteTFoot_Proxy( 
    IHTMLTable * This);


void __RPC_STUB IHTMLTable_deleteTFoot_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLTable_createCaption_Proxy( 
    IHTMLTable * This,
    /* [out][retval] */ IHTMLTableCaption **caption);


void __RPC_STUB IHTMLTable_createCaption_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLTable_deleteCaption_Proxy( 
    IHTMLTable * This);


void __RPC_STUB IHTMLTable_deleteCaption_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLTable_insertRow_Proxy( 
    IHTMLTable * This,
    /* [in][defaultvalue] */ long index,
    /* [out][retval] */ IDispatch **row);


void __RPC_STUB IHTMLTable_insertRow_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLTable_deleteRow_Proxy( 
    IHTMLTable * This,
    /* [in][defaultvalue] */ long index);


void __RPC_STUB IHTMLTable_deleteRow_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLTable_get_readyState_Proxy( 
    IHTMLTable * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLTable_get_readyState_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLTable_put_onreadystatechange_Proxy( 
    IHTMLTable * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLTable_put_onreadystatechange_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLTable_get_onreadystatechange_Proxy( 
    IHTMLTable * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLTable_get_onreadystatechange_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLTable_INTERFACE_DEFINED__ */


#ifndef __IHTMLTable2_INTERFACE_DEFINED__
#define __IHTMLTable2_INTERFACE_DEFINED__

/* interface IHTMLTable2 */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLTable2;

    
    MIDL_INTERFACE("3050f4ad-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLTable2 : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE firstPage( void) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE lastPage( void) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_cells( 
            /* [out][retval] */ IHTMLElementCollection **p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE moveRow( 
            /* [in][defaultvalue] */ long indexFrom,
            /* [in][defaultvalue] */ long indexTo,
            /* [out][retval] */ IDispatch **row) = 0;
        
    };
    



/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLTable2_firstPage_Proxy( 
    IHTMLTable2 * This);


void __RPC_STUB IHTMLTable2_firstPage_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLTable2_lastPage_Proxy( 
    IHTMLTable2 * This);


void __RPC_STUB IHTMLTable2_lastPage_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLTable2_get_cells_Proxy( 
    IHTMLTable2 * This,
    /* [out][retval] */ IHTMLElementCollection **p);


void __RPC_STUB IHTMLTable2_get_cells_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLTable2_moveRow_Proxy( 
    IHTMLTable2 * This,
    /* [in][defaultvalue] */ long indexFrom,
    /* [in][defaultvalue] */ long indexTo,
    /* [out][retval] */ IDispatch **row);


void __RPC_STUB IHTMLTable2_moveRow_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLTable2_INTERFACE_DEFINED__ */


#ifndef __IHTMLTable3_INTERFACE_DEFINED__
#define __IHTMLTable3_INTERFACE_DEFINED__

/* interface IHTMLTable3 */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLTable3;

    
    MIDL_INTERFACE("3050f829-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLTable3 : public IDispatch
    {
    public:
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_summary( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_summary( 
            /* [out][retval] */ BSTR *p) = 0;
        
    };
    



/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLTable3_put_summary_Proxy( 
    IHTMLTable3 * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLTable3_put_summary_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLTable3_get_summary_Proxy( 
    IHTMLTable3 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLTable3_get_summary_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLTable3_INTERFACE_DEFINED__ */


#ifndef __IHTMLTableCol_INTERFACE_DEFINED__
#define __IHTMLTableCol_INTERFACE_DEFINED__

/* interface IHTMLTableCol */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLTableCol;

    
    MIDL_INTERFACE("3050f23a-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLTableCol : public IDispatch
    {
    public:
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_span( 
            /* [in] */ long v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_span( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_width( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_width( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_align( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_align( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_vAlign( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_vAlign( 
            /* [out][retval] */ BSTR *p) = 0;
        
    };
    



/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLTableCol_put_span_Proxy( 
    IHTMLTableCol * This,
    /* [in] */ long v);


void __RPC_STUB IHTMLTableCol_put_span_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLTableCol_get_span_Proxy( 
    IHTMLTableCol * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLTableCol_get_span_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLTableCol_put_width_Proxy( 
    IHTMLTableCol * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLTableCol_put_width_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLTableCol_get_width_Proxy( 
    IHTMLTableCol * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLTableCol_get_width_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLTableCol_put_align_Proxy( 
    IHTMLTableCol * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLTableCol_put_align_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLTableCol_get_align_Proxy( 
    IHTMLTableCol * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLTableCol_get_align_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLTableCol_put_vAlign_Proxy( 
    IHTMLTableCol * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLTableCol_put_vAlign_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLTableCol_get_vAlign_Proxy( 
    IHTMLTableCol * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLTableCol_get_vAlign_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLTableCol_INTERFACE_DEFINED__ */


#ifndef __IHTMLTableCol2_INTERFACE_DEFINED__
#define __IHTMLTableCol2_INTERFACE_DEFINED__

/* interface IHTMLTableCol2 */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLTableCol2;

    
    MIDL_INTERFACE("3050f82a-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLTableCol2 : public IDispatch
    {
    public:
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_ch( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_ch( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_chOff( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_chOff( 
            /* [out][retval] */ BSTR *p) = 0;
        
    };
    



/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLTableCol2_put_ch_Proxy( 
    IHTMLTableCol2 * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLTableCol2_put_ch_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLTableCol2_get_ch_Proxy( 
    IHTMLTableCol2 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLTableCol2_get_ch_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLTableCol2_put_chOff_Proxy( 
    IHTMLTableCol2 * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLTableCol2_put_chOff_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLTableCol2_get_chOff_Proxy( 
    IHTMLTableCol2 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLTableCol2_get_chOff_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLTableCol2_INTERFACE_DEFINED__ */


#ifndef __IHTMLTableSection2_INTERFACE_DEFINED__
#define __IHTMLTableSection2_INTERFACE_DEFINED__

/* interface IHTMLTableSection2 */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLTableSection2;

    
    MIDL_INTERFACE("3050f5c7-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLTableSection2 : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE moveRow( 
            /* [in][defaultvalue] */ long indexFrom,
            /* [in][defaultvalue] */ long indexTo,
            /* [out][retval] */ IDispatch **row) = 0;
        
    };
    



/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLTableSection2_moveRow_Proxy( 
    IHTMLTableSection2 * This,
    /* [in][defaultvalue] */ long indexFrom,
    /* [in][defaultvalue] */ long indexTo,
    /* [out][retval] */ IDispatch **row);


void __RPC_STUB IHTMLTableSection2_moveRow_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLTableSection2_INTERFACE_DEFINED__ */


#ifndef __IHTMLTableSection3_INTERFACE_DEFINED__
#define __IHTMLTableSection3_INTERFACE_DEFINED__

/* interface IHTMLTableSection3 */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLTableSection3;

    
    MIDL_INTERFACE("3050f82b-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLTableSection3 : public IDispatch
    {
    public:
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_ch( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_ch( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_chOff( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_chOff( 
            /* [out][retval] */ BSTR *p) = 0;
        
    };
    



/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLTableSection3_put_ch_Proxy( 
    IHTMLTableSection3 * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLTableSection3_put_ch_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLTableSection3_get_ch_Proxy( 
    IHTMLTableSection3 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLTableSection3_get_ch_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLTableSection3_put_chOff_Proxy( 
    IHTMLTableSection3 * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLTableSection3_put_chOff_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLTableSection3_get_chOff_Proxy( 
    IHTMLTableSection3 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLTableSection3_get_chOff_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLTableSection3_INTERFACE_DEFINED__ */


#ifndef __IHTMLTableRow_INTERFACE_DEFINED__
#define __IHTMLTableRow_INTERFACE_DEFINED__

/* interface IHTMLTableRow */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLTableRow;

    
    MIDL_INTERFACE("3050f23c-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLTableRow : public IDispatch
    {
    public:
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_align( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_align( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_vAlign( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_vAlign( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_bgColor( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_bgColor( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_borderColor( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_borderColor( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_borderColorLight( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_borderColorLight( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_borderColorDark( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_borderColorDark( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_rowIndex( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_sectionRowIndex( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_cells( 
            /* [out][retval] */ IHTMLElementCollection **p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE insertCell( 
            /* [in][defaultvalue] */ long index,
            /* [out][retval] */ IDispatch **row) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE deleteCell( 
            /* [in][defaultvalue] */ long index = -1) = 0;
        
    };
    



/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLTableRow_put_align_Proxy( 
    IHTMLTableRow * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLTableRow_put_align_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLTableRow_get_align_Proxy( 
    IHTMLTableRow * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLTableRow_get_align_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLTableRow_put_vAlign_Proxy( 
    IHTMLTableRow * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLTableRow_put_vAlign_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLTableRow_get_vAlign_Proxy( 
    IHTMLTableRow * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLTableRow_get_vAlign_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLTableRow_put_bgColor_Proxy( 
    IHTMLTableRow * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLTableRow_put_bgColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLTableRow_get_bgColor_Proxy( 
    IHTMLTableRow * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLTableRow_get_bgColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLTableRow_put_borderColor_Proxy( 
    IHTMLTableRow * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLTableRow_put_borderColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLTableRow_get_borderColor_Proxy( 
    IHTMLTableRow * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLTableRow_get_borderColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLTableRow_put_borderColorLight_Proxy( 
    IHTMLTableRow * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLTableRow_put_borderColorLight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLTableRow_get_borderColorLight_Proxy( 
    IHTMLTableRow * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLTableRow_get_borderColorLight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLTableRow_put_borderColorDark_Proxy( 
    IHTMLTableRow * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLTableRow_put_borderColorDark_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLTableRow_get_borderColorDark_Proxy( 
    IHTMLTableRow * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLTableRow_get_borderColorDark_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLTableRow_get_rowIndex_Proxy( 
    IHTMLTableRow * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLTableRow_get_rowIndex_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLTableRow_get_sectionRowIndex_Proxy( 
    IHTMLTableRow * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLTableRow_get_sectionRowIndex_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLTableRow_get_cells_Proxy( 
    IHTMLTableRow * This,
    /* [out][retval] */ IHTMLElementCollection **p);


void __RPC_STUB IHTMLTableRow_get_cells_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLTableRow_insertCell_Proxy( 
    IHTMLTableRow * This,
    /* [in][defaultvalue] */ long index,
    /* [out][retval] */ IDispatch **row);


void __RPC_STUB IHTMLTableRow_insertCell_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLTableRow_deleteCell_Proxy( 
    IHTMLTableRow * This,
    /* [in][defaultvalue] */ long index);


void __RPC_STUB IHTMLTableRow_deleteCell_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLTableRow_INTERFACE_DEFINED__ */


#ifndef __IHTMLTableRow2_INTERFACE_DEFINED__
#define __IHTMLTableRow2_INTERFACE_DEFINED__

/* interface IHTMLTableRow2 */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLTableRow2;

    
    MIDL_INTERFACE("3050f4a1-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLTableRow2 : public IDispatch
    {
    public:
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_height( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_height( 
            /* [out][retval] */ VARIANT *p) = 0;
        
    };
    



/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLTableRow2_put_height_Proxy( 
    IHTMLTableRow2 * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLTableRow2_put_height_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLTableRow2_get_height_Proxy( 
    IHTMLTableRow2 * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLTableRow2_get_height_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLTableRow2_INTERFACE_DEFINED__ */


#ifndef __IHTMLTableRow3_INTERFACE_DEFINED__
#define __IHTMLTableRow3_INTERFACE_DEFINED__

/* interface IHTMLTableRow3 */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLTableRow3;

    
    MIDL_INTERFACE("3050f82c-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLTableRow3 : public IDispatch
    {
    public:
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_ch( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_ch( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_chOff( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_chOff( 
            /* [out][retval] */ BSTR *p) = 0;
        
    };
    



/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLTableRow3_put_ch_Proxy( 
    IHTMLTableRow3 * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLTableRow3_put_ch_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLTableRow3_get_ch_Proxy( 
    IHTMLTableRow3 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLTableRow3_get_ch_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLTableRow3_put_chOff_Proxy( 
    IHTMLTableRow3 * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLTableRow3_put_chOff_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLTableRow3_get_chOff_Proxy( 
    IHTMLTableRow3 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLTableRow3_get_chOff_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLTableRow3_INTERFACE_DEFINED__ */


#ifndef __IHTMLTableRowMetrics_INTERFACE_DEFINED__
#define __IHTMLTableRowMetrics_INTERFACE_DEFINED__

/* interface IHTMLTableRowMetrics */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLTableRowMetrics;

    
    MIDL_INTERFACE("3050f413-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLTableRowMetrics : public IDispatch
    {
    public:
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_clientHeight( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_clientWidth( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_clientTop( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_clientLeft( 
            /* [out][retval] */ long *p) = 0;
        
    };
    



/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLTableRowMetrics_get_clientHeight_Proxy( 
    IHTMLTableRowMetrics * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLTableRowMetrics_get_clientHeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLTableRowMetrics_get_clientWidth_Proxy( 
    IHTMLTableRowMetrics * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLTableRowMetrics_get_clientWidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLTableRowMetrics_get_clientTop_Proxy( 
    IHTMLTableRowMetrics * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLTableRowMetrics_get_clientTop_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLTableRowMetrics_get_clientLeft_Proxy( 
    IHTMLTableRowMetrics * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLTableRowMetrics_get_clientLeft_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLTableRowMetrics_INTERFACE_DEFINED__ */


#ifndef __IHTMLTableCell_INTERFACE_DEFINED__
#define __IHTMLTableCell_INTERFACE_DEFINED__

/* interface IHTMLTableCell */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLTableCell;

    
    MIDL_INTERFACE("3050f23d-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLTableCell : public IDispatch
    {
    public:
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_rowSpan( 
            /* [in] */ long v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_rowSpan( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_colSpan( 
            /* [in] */ long v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_colSpan( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_align( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_align( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_vAlign( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_vAlign( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_bgColor( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_bgColor( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_noWrap( 
            /* [in] */ VARIANT_BOOL v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_noWrap( 
            /* [out][retval] */ VARIANT_BOOL *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_background( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_background( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_borderColor( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_borderColor( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_borderColorLight( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_borderColorLight( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_borderColorDark( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_borderColorDark( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_width( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_width( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_height( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_height( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_cellIndex( 
            /* [out][retval] */ long *p) = 0;
        
    };
    



/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLTableCell_put_rowSpan_Proxy( 
    IHTMLTableCell * This,
    /* [in] */ long v);


void __RPC_STUB IHTMLTableCell_put_rowSpan_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLTableCell_get_rowSpan_Proxy( 
    IHTMLTableCell * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLTableCell_get_rowSpan_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLTableCell_put_colSpan_Proxy( 
    IHTMLTableCell * This,
    /* [in] */ long v);


void __RPC_STUB IHTMLTableCell_put_colSpan_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLTableCell_get_colSpan_Proxy( 
    IHTMLTableCell * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLTableCell_get_colSpan_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLTableCell_put_align_Proxy( 
    IHTMLTableCell * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLTableCell_put_align_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLTableCell_get_align_Proxy( 
    IHTMLTableCell * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLTableCell_get_align_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLTableCell_put_vAlign_Proxy( 
    IHTMLTableCell * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLTableCell_put_vAlign_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLTableCell_get_vAlign_Proxy( 
    IHTMLTableCell * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLTableCell_get_vAlign_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLTableCell_put_bgColor_Proxy( 
    IHTMLTableCell * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLTableCell_put_bgColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLTableCell_get_bgColor_Proxy( 
    IHTMLTableCell * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLTableCell_get_bgColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLTableCell_put_noWrap_Proxy( 
    IHTMLTableCell * This,
    /* [in] */ VARIANT_BOOL v);


void __RPC_STUB IHTMLTableCell_put_noWrap_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLTableCell_get_noWrap_Proxy( 
    IHTMLTableCell * This,
    /* [out][retval] */ VARIANT_BOOL *p);


void __RPC_STUB IHTMLTableCell_get_noWrap_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLTableCell_put_background_Proxy( 
    IHTMLTableCell * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLTableCell_put_background_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLTableCell_get_background_Proxy( 
    IHTMLTableCell * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLTableCell_get_background_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLTableCell_put_borderColor_Proxy( 
    IHTMLTableCell * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLTableCell_put_borderColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLTableCell_get_borderColor_Proxy( 
    IHTMLTableCell * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLTableCell_get_borderColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLTableCell_put_borderColorLight_Proxy( 
    IHTMLTableCell * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLTableCell_put_borderColorLight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLTableCell_get_borderColorLight_Proxy( 
    IHTMLTableCell * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLTableCell_get_borderColorLight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLTableCell_put_borderColorDark_Proxy( 
    IHTMLTableCell * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLTableCell_put_borderColorDark_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLTableCell_get_borderColorDark_Proxy( 
    IHTMLTableCell * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLTableCell_get_borderColorDark_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLTableCell_put_width_Proxy( 
    IHTMLTableCell * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLTableCell_put_width_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLTableCell_get_width_Proxy( 
    IHTMLTableCell * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLTableCell_get_width_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLTableCell_put_height_Proxy( 
    IHTMLTableCell * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLTableCell_put_height_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLTableCell_get_height_Proxy( 
    IHTMLTableCell * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLTableCell_get_height_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLTableCell_get_cellIndex_Proxy( 
    IHTMLTableCell * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLTableCell_get_cellIndex_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLTableCell_INTERFACE_DEFINED__ */


#ifndef __IHTMLTableCell2_INTERFACE_DEFINED__
#define __IHTMLTableCell2_INTERFACE_DEFINED__

/* interface IHTMLTableCell2 */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLTableCell2;

    
    MIDL_INTERFACE("3050f82d-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLTableCell2 : public IDispatch
    {
    public:
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_abbr( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_abbr( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_axis( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_axis( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_ch( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_ch( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_chOff( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_chOff( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_headers( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_headers( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_scope( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_scope( 
            /* [out][retval] */ BSTR *p) = 0;
        
    };
    



/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLTableCell2_put_abbr_Proxy( 
    IHTMLTableCell2 * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLTableCell2_put_abbr_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLTableCell2_get_abbr_Proxy( 
    IHTMLTableCell2 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLTableCell2_get_abbr_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLTableCell2_put_axis_Proxy( 
    IHTMLTableCell2 * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLTableCell2_put_axis_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLTableCell2_get_axis_Proxy( 
    IHTMLTableCell2 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLTableCell2_get_axis_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLTableCell2_put_ch_Proxy( 
    IHTMLTableCell2 * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLTableCell2_put_ch_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLTableCell2_get_ch_Proxy( 
    IHTMLTableCell2 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLTableCell2_get_ch_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLTableCell2_put_chOff_Proxy( 
    IHTMLTableCell2 * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLTableCell2_put_chOff_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLTableCell2_get_chOff_Proxy( 
    IHTMLTableCell2 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLTableCell2_get_chOff_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLTableCell2_put_headers_Proxy( 
    IHTMLTableCell2 * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLTableCell2_put_headers_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLTableCell2_get_headers_Proxy( 
    IHTMLTableCell2 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLTableCell2_get_headers_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLTableCell2_put_scope_Proxy( 
    IHTMLTableCell2 * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLTableCell2_put_scope_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLTableCell2_get_scope_Proxy( 
    IHTMLTableCell2 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLTableCell2_get_scope_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLTableCell2_INTERFACE_DEFINED__ */


#ifndef __DispHTMLTable_DISPINTERFACE_DEFINED__
#define __DispHTMLTable_DISPINTERFACE_DEFINED__

/* dispinterface DispHTMLTable */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_DispHTMLTable;


    MIDL_INTERFACE("3050f532-98b5-11cf-bb82-00aa00bdce0b")
    DispHTMLTable : public IDispatch
    {
    };
    


#endif 	/* __DispHTMLTable_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_HTMLTable;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f26b-98b5-11cf-bb82-00aa00bdce0b")
HTMLTable;
#endif

#ifndef __DispHTMLTableCol_DISPINTERFACE_DEFINED__
#define __DispHTMLTableCol_DISPINTERFACE_DEFINED__

/* dispinterface DispHTMLTableCol */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_DispHTMLTableCol;


    MIDL_INTERFACE("3050f533-98b5-11cf-bb82-00aa00bdce0b")
    DispHTMLTableCol : public IDispatch
    {
    };
    


#endif 	/* __DispHTMLTableCol_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_HTMLTableCol;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f26c-98b5-11cf-bb82-00aa00bdce0b")
HTMLTableCol;
#endif

#ifndef __DispHTMLTableSection_DISPINTERFACE_DEFINED__
#define __DispHTMLTableSection_DISPINTERFACE_DEFINED__

/* dispinterface DispHTMLTableSection */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_DispHTMLTableSection;


    MIDL_INTERFACE("3050f534-98b5-11cf-bb82-00aa00bdce0b")
    DispHTMLTableSection : public IDispatch
    {
    };
    


#endif 	/* __DispHTMLTableSection_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_HTMLTableSection;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f2e9-98b5-11cf-bb82-00aa00bdce0b")
HTMLTableSection;
#endif

#ifndef __DispHTMLTableRow_DISPINTERFACE_DEFINED__
#define __DispHTMLTableRow_DISPINTERFACE_DEFINED__

/* dispinterface DispHTMLTableRow */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_DispHTMLTableRow;


    MIDL_INTERFACE("3050f535-98b5-11cf-bb82-00aa00bdce0b")
    DispHTMLTableRow : public IDispatch
    {
    };
    


#endif 	/* __DispHTMLTableRow_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_HTMLTableRow;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f26d-98b5-11cf-bb82-00aa00bdce0b")
HTMLTableRow;
#endif

#ifndef __DispHTMLTableCell_DISPINTERFACE_DEFINED__
#define __DispHTMLTableCell_DISPINTERFACE_DEFINED__

/* dispinterface DispHTMLTableCell */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_DispHTMLTableCell;


    MIDL_INTERFACE("3050f536-98b5-11cf-bb82-00aa00bdce0b")
    DispHTMLTableCell : public IDispatch
    {
    };
    


#endif 	/* __DispHTMLTableCell_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_HTMLTableCell;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f246-98b5-11cf-bb82-00aa00bdce0b")
HTMLTableCell;
#endif

#ifndef __HTMLScriptEvents2_DISPINTERFACE_DEFINED__
#define __HTMLScriptEvents2_DISPINTERFACE_DEFINED__

/* dispinterface HTMLScriptEvents2 */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_HTMLScriptEvents2;


    MIDL_INTERFACE("3050f621-98b5-11cf-bb82-00aa00bdce0b")
    HTMLScriptEvents2 : public IDispatch
    {
    };
    


#endif 	/* __HTMLScriptEvents2_DISPINTERFACE_DEFINED__ */


#ifndef __HTMLScriptEvents_DISPINTERFACE_DEFINED__
#define __HTMLScriptEvents_DISPINTERFACE_DEFINED__

/* dispinterface HTMLScriptEvents */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_HTMLScriptEvents;


    MIDL_INTERFACE("3050f3e2-98b5-11cf-bb82-00aa00bdce0b")
    HTMLScriptEvents : public IDispatch
    {
    };
    


#endif 	/* __HTMLScriptEvents_DISPINTERFACE_DEFINED__ */


#ifndef __IHTMLScriptElement_INTERFACE_DEFINED__
#define __IHTMLScriptElement_INTERFACE_DEFINED__

/* interface IHTMLScriptElement */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLScriptElement;

    
    MIDL_INTERFACE("3050f28b-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLScriptElement : public IDispatch
    {
    public:
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_src( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_src( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_htmlFor( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_htmlFor( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_event( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_event( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_text( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_text( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_defer( 
            /* [in] */ VARIANT_BOOL v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_defer( 
            /* [out][retval] */ VARIANT_BOOL *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_readyState( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onerror( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onerror( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_type( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_type( 
            /* [out][retval] */ BSTR *p) = 0;
        
    };
    



/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLScriptElement_put_src_Proxy( 
    IHTMLScriptElement * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLScriptElement_put_src_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLScriptElement_get_src_Proxy( 
    IHTMLScriptElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLScriptElement_get_src_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLScriptElement_put_htmlFor_Proxy( 
    IHTMLScriptElement * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLScriptElement_put_htmlFor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLScriptElement_get_htmlFor_Proxy( 
    IHTMLScriptElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLScriptElement_get_htmlFor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLScriptElement_put_event_Proxy( 
    IHTMLScriptElement * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLScriptElement_put_event_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLScriptElement_get_event_Proxy( 
    IHTMLScriptElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLScriptElement_get_event_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLScriptElement_put_text_Proxy( 
    IHTMLScriptElement * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLScriptElement_put_text_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLScriptElement_get_text_Proxy( 
    IHTMLScriptElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLScriptElement_get_text_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLScriptElement_put_defer_Proxy( 
    IHTMLScriptElement * This,
    /* [in] */ VARIANT_BOOL v);


void __RPC_STUB IHTMLScriptElement_put_defer_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLScriptElement_get_defer_Proxy( 
    IHTMLScriptElement * This,
    /* [out][retval] */ VARIANT_BOOL *p);


void __RPC_STUB IHTMLScriptElement_get_defer_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLScriptElement_get_readyState_Proxy( 
    IHTMLScriptElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLScriptElement_get_readyState_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLScriptElement_put_onerror_Proxy( 
    IHTMLScriptElement * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLScriptElement_put_onerror_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLScriptElement_get_onerror_Proxy( 
    IHTMLScriptElement * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLScriptElement_get_onerror_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLScriptElement_put_type_Proxy( 
    IHTMLScriptElement * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLScriptElement_put_type_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLScriptElement_get_type_Proxy( 
    IHTMLScriptElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLScriptElement_get_type_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLScriptElement_INTERFACE_DEFINED__ */


#ifndef __IHTMLScriptElement2_INTERFACE_DEFINED__
#define __IHTMLScriptElement2_INTERFACE_DEFINED__

/* interface IHTMLScriptElement2 */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLScriptElement2;

    
    MIDL_INTERFACE("3050f828-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLScriptElement2 : public IDispatch
    {
    public:
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_charset( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_charset( 
            /* [out][retval] */ BSTR *p) = 0;
        
    };
    



/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLScriptElement2_put_charset_Proxy( 
    IHTMLScriptElement2 * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLScriptElement2_put_charset_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLScriptElement2_get_charset_Proxy( 
    IHTMLScriptElement2 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLScriptElement2_get_charset_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLScriptElement2_INTERFACE_DEFINED__ */


#ifndef __DispHTMLScriptElement_DISPINTERFACE_DEFINED__
#define __DispHTMLScriptElement_DISPINTERFACE_DEFINED__

/* dispinterface DispHTMLScriptElement */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_DispHTMLScriptElement;


    MIDL_INTERFACE("3050f530-98b5-11cf-bb82-00aa00bdce0b")
    DispHTMLScriptElement : public IDispatch
    {
    };
    


#endif 	/* __DispHTMLScriptElement_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_HTMLScriptElement;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f28c-98b5-11cf-bb82-00aa00bdce0b")
HTMLScriptElement;
#endif

#ifndef __IHTMLNoShowElement_INTERFACE_DEFINED__
#define __IHTMLNoShowElement_INTERFACE_DEFINED__

/* interface IHTMLNoShowElement */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLNoShowElement;

    
    MIDL_INTERFACE("3050f38a-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLNoShowElement : public IDispatch
    {
    public:
    };
    




#endif 	/* __IHTMLNoShowElement_INTERFACE_DEFINED__ */


#ifndef __DispHTMLNoShowElement_DISPINTERFACE_DEFINED__
#define __DispHTMLNoShowElement_DISPINTERFACE_DEFINED__

/* dispinterface DispHTMLNoShowElement */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_DispHTMLNoShowElement;


    MIDL_INTERFACE("3050f528-98b5-11cf-bb82-00aa00bdce0b")
    DispHTMLNoShowElement : public IDispatch
    {
    };
    


#endif 	/* __DispHTMLNoShowElement_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_HTMLNoShowElement;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f38b-98b5-11cf-bb82-00aa00bdce0b")
HTMLNoShowElement;
#endif

#ifndef __HTMLObjectElementEvents2_DISPINTERFACE_DEFINED__
#define __HTMLObjectElementEvents2_DISPINTERFACE_DEFINED__

/* dispinterface HTMLObjectElementEvents2 */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_HTMLObjectElementEvents2;


    MIDL_INTERFACE("3050f620-98b5-11cf-bb82-00aa00bdce0b")
    HTMLObjectElementEvents2 : public IDispatch
    {
    };
    


#endif 	/* __HTMLObjectElementEvents2_DISPINTERFACE_DEFINED__ */


#ifndef __HTMLObjectElementEvents_DISPINTERFACE_DEFINED__
#define __HTMLObjectElementEvents_DISPINTERFACE_DEFINED__

/* dispinterface HTMLObjectElementEvents */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_HTMLObjectElementEvents;


    MIDL_INTERFACE("3050f3c4-98b5-11cf-bb82-00aa00bdce0b")
    HTMLObjectElementEvents : public IDispatch
    {
    };
    


#endif 	/* __HTMLObjectElementEvents_DISPINTERFACE_DEFINED__ */


#ifndef __IHTMLObjectElement_INTERFACE_DEFINED__
#define __IHTMLObjectElement_INTERFACE_DEFINED__

/* interface IHTMLObjectElement */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLObjectElement;

    
    MIDL_INTERFACE("3050f24f-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLObjectElement : public IDispatch
    {
    public:
        virtual /* [hidden][id][propget] */ HRESULT STDMETHODCALLTYPE get_object( 
            /* [out][retval] */ IDispatch **p) = 0;
        
        virtual /* [hidden][id][propget] */ HRESULT STDMETHODCALLTYPE get_classid( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [hidden][id][propget] */ HRESULT STDMETHODCALLTYPE get_data( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [hidden][id][propputref] */ HRESULT STDMETHODCALLTYPE putref_recordset( 
            /* [in] */ IDispatch *v) = 0;
        
        virtual /* [hidden][id][propget] */ HRESULT STDMETHODCALLTYPE get_recordset( 
            /* [out][retval] */ IDispatch **p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_align( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_align( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_name( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_name( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_codeBase( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_codeBase( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_codeType( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_codeType( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_code( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_code( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_BaseHref( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_type( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_type( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_form( 
            /* [out][retval] */ IHTMLFormElement **p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_width( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_width( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_height( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_height( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [hidden][id][propget] */ HRESULT STDMETHODCALLTYPE get_readyState( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onreadystatechange( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onreadystatechange( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onerror( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onerror( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_altHtml( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_altHtml( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_vspace( 
            /* [in] */ long v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_vspace( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_hspace( 
            /* [in] */ long v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_hspace( 
            /* [out][retval] */ long *p) = 0;
        
    };
    



/* [hidden][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLObjectElement_get_object_Proxy( 
    IHTMLObjectElement * This,
    /* [out][retval] */ IDispatch **p);


void __RPC_STUB IHTMLObjectElement_get_object_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [hidden][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLObjectElement_get_classid_Proxy( 
    IHTMLObjectElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLObjectElement_get_classid_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [hidden][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLObjectElement_get_data_Proxy( 
    IHTMLObjectElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLObjectElement_get_data_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [hidden][id][propputref] */ HRESULT STDMETHODCALLTYPE IHTMLObjectElement_putref_recordset_Proxy( 
    IHTMLObjectElement * This,
    /* [in] */ IDispatch *v);


void __RPC_STUB IHTMLObjectElement_putref_recordset_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [hidden][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLObjectElement_get_recordset_Proxy( 
    IHTMLObjectElement * This,
    /* [out][retval] */ IDispatch **p);


void __RPC_STUB IHTMLObjectElement_get_recordset_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLObjectElement_put_align_Proxy( 
    IHTMLObjectElement * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLObjectElement_put_align_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLObjectElement_get_align_Proxy( 
    IHTMLObjectElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLObjectElement_get_align_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLObjectElement_put_name_Proxy( 
    IHTMLObjectElement * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLObjectElement_put_name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLObjectElement_get_name_Proxy( 
    IHTMLObjectElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLObjectElement_get_name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLObjectElement_put_codeBase_Proxy( 
    IHTMLObjectElement * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLObjectElement_put_codeBase_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLObjectElement_get_codeBase_Proxy( 
    IHTMLObjectElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLObjectElement_get_codeBase_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLObjectElement_put_codeType_Proxy( 
    IHTMLObjectElement * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLObjectElement_put_codeType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLObjectElement_get_codeType_Proxy( 
    IHTMLObjectElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLObjectElement_get_codeType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLObjectElement_put_code_Proxy( 
    IHTMLObjectElement * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLObjectElement_put_code_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLObjectElement_get_code_Proxy( 
    IHTMLObjectElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLObjectElement_get_code_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLObjectElement_get_BaseHref_Proxy( 
    IHTMLObjectElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLObjectElement_get_BaseHref_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLObjectElement_put_type_Proxy( 
    IHTMLObjectElement * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLObjectElement_put_type_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLObjectElement_get_type_Proxy( 
    IHTMLObjectElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLObjectElement_get_type_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLObjectElement_get_form_Proxy( 
    IHTMLObjectElement * This,
    /* [out][retval] */ IHTMLFormElement **p);


void __RPC_STUB IHTMLObjectElement_get_form_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLObjectElement_put_width_Proxy( 
    IHTMLObjectElement * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLObjectElement_put_width_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLObjectElement_get_width_Proxy( 
    IHTMLObjectElement * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLObjectElement_get_width_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLObjectElement_put_height_Proxy( 
    IHTMLObjectElement * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLObjectElement_put_height_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLObjectElement_get_height_Proxy( 
    IHTMLObjectElement * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLObjectElement_get_height_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [hidden][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLObjectElement_get_readyState_Proxy( 
    IHTMLObjectElement * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLObjectElement_get_readyState_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLObjectElement_put_onreadystatechange_Proxy( 
    IHTMLObjectElement * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLObjectElement_put_onreadystatechange_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLObjectElement_get_onreadystatechange_Proxy( 
    IHTMLObjectElement * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLObjectElement_get_onreadystatechange_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLObjectElement_put_onerror_Proxy( 
    IHTMLObjectElement * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLObjectElement_put_onerror_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLObjectElement_get_onerror_Proxy( 
    IHTMLObjectElement * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLObjectElement_get_onerror_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLObjectElement_put_altHtml_Proxy( 
    IHTMLObjectElement * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLObjectElement_put_altHtml_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLObjectElement_get_altHtml_Proxy( 
    IHTMLObjectElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLObjectElement_get_altHtml_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLObjectElement_put_vspace_Proxy( 
    IHTMLObjectElement * This,
    /* [in] */ long v);


void __RPC_STUB IHTMLObjectElement_put_vspace_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLObjectElement_get_vspace_Proxy( 
    IHTMLObjectElement * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLObjectElement_get_vspace_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLObjectElement_put_hspace_Proxy( 
    IHTMLObjectElement * This,
    /* [in] */ long v);


void __RPC_STUB IHTMLObjectElement_put_hspace_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLObjectElement_get_hspace_Proxy( 
    IHTMLObjectElement * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLObjectElement_get_hspace_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLObjectElement_INTERFACE_DEFINED__ */


#ifndef __IHTMLObjectElement2_INTERFACE_DEFINED__
#define __IHTMLObjectElement2_INTERFACE_DEFINED__

/* interface IHTMLObjectElement2 */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLObjectElement2;

    
    MIDL_INTERFACE("3050f4cd-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLObjectElement2 : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE namedRecordset( 
            /* [in] */ BSTR dataMember,
            /* [in][optional] */ VARIANT *hierarchy,
            /* [out][retval] */ IDispatch **ppRecordset) = 0;
        
        virtual /* [hidden][id][propput] */ HRESULT STDMETHODCALLTYPE put_classid( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [hidden][id][propget] */ HRESULT STDMETHODCALLTYPE get_classid( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [hidden][id][propput] */ HRESULT STDMETHODCALLTYPE put_data( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [hidden][id][propget] */ HRESULT STDMETHODCALLTYPE get_data( 
            /* [out][retval] */ BSTR *p) = 0;
        
    };
    



/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLObjectElement2_namedRecordset_Proxy( 
    IHTMLObjectElement2 * This,
    /* [in] */ BSTR dataMember,
    /* [in][optional] */ VARIANT *hierarchy,
    /* [out][retval] */ IDispatch **ppRecordset);


void __RPC_STUB IHTMLObjectElement2_namedRecordset_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [hidden][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLObjectElement2_put_classid_Proxy( 
    IHTMLObjectElement2 * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLObjectElement2_put_classid_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [hidden][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLObjectElement2_get_classid_Proxy( 
    IHTMLObjectElement2 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLObjectElement2_get_classid_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [hidden][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLObjectElement2_put_data_Proxy( 
    IHTMLObjectElement2 * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLObjectElement2_put_data_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [hidden][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLObjectElement2_get_data_Proxy( 
    IHTMLObjectElement2 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLObjectElement2_get_data_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLObjectElement2_INTERFACE_DEFINED__ */


#ifndef __IHTMLObjectElement3_INTERFACE_DEFINED__
#define __IHTMLObjectElement3_INTERFACE_DEFINED__

/* interface IHTMLObjectElement3 */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLObjectElement3;

    
    MIDL_INTERFACE("3050f827-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLObjectElement3 : public IDispatch
    {
    public:
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_archive( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_archive( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_alt( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_alt( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_declare( 
            /* [in] */ VARIANT_BOOL v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_declare( 
            /* [out][retval] */ VARIANT_BOOL *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_standby( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_standby( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_border( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_border( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_useMap( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_useMap( 
            /* [out][retval] */ BSTR *p) = 0;
        
    };
    



/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLObjectElement3_put_archive_Proxy( 
    IHTMLObjectElement3 * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLObjectElement3_put_archive_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLObjectElement3_get_archive_Proxy( 
    IHTMLObjectElement3 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLObjectElement3_get_archive_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLObjectElement3_put_alt_Proxy( 
    IHTMLObjectElement3 * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLObjectElement3_put_alt_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLObjectElement3_get_alt_Proxy( 
    IHTMLObjectElement3 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLObjectElement3_get_alt_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLObjectElement3_put_declare_Proxy( 
    IHTMLObjectElement3 * This,
    /* [in] */ VARIANT_BOOL v);


void __RPC_STUB IHTMLObjectElement3_put_declare_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLObjectElement3_get_declare_Proxy( 
    IHTMLObjectElement3 * This,
    /* [out][retval] */ VARIANT_BOOL *p);


void __RPC_STUB IHTMLObjectElement3_get_declare_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLObjectElement3_put_standby_Proxy( 
    IHTMLObjectElement3 * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLObjectElement3_put_standby_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLObjectElement3_get_standby_Proxy( 
    IHTMLObjectElement3 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLObjectElement3_get_standby_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLObjectElement3_put_border_Proxy( 
    IHTMLObjectElement3 * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLObjectElement3_put_border_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLObjectElement3_get_border_Proxy( 
    IHTMLObjectElement3 * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLObjectElement3_get_border_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLObjectElement3_put_useMap_Proxy( 
    IHTMLObjectElement3 * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLObjectElement3_put_useMap_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLObjectElement3_get_useMap_Proxy( 
    IHTMLObjectElement3 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLObjectElement3_get_useMap_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLObjectElement3_INTERFACE_DEFINED__ */


#ifndef __IHTMLParamElement_INTERFACE_DEFINED__
#define __IHTMLParamElement_INTERFACE_DEFINED__

/* interface IHTMLParamElement */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLParamElement;

    
    MIDL_INTERFACE("3050f83d-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLParamElement : public IDispatch
    {
    public:
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_name( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_name( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_value( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_value( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_type( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_type( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_valueType( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_valueType( 
            /* [out][retval] */ BSTR *p) = 0;
        
    };
    



/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLParamElement_put_name_Proxy( 
    IHTMLParamElement * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLParamElement_put_name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLParamElement_get_name_Proxy( 
    IHTMLParamElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLParamElement_get_name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLParamElement_put_value_Proxy( 
    IHTMLParamElement * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLParamElement_put_value_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLParamElement_get_value_Proxy( 
    IHTMLParamElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLParamElement_get_value_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLParamElement_put_type_Proxy( 
    IHTMLParamElement * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLParamElement_put_type_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLParamElement_get_type_Proxy( 
    IHTMLParamElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLParamElement_get_type_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLParamElement_put_valueType_Proxy( 
    IHTMLParamElement * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLParamElement_put_valueType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLParamElement_get_valueType_Proxy( 
    IHTMLParamElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLParamElement_get_valueType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLParamElement_INTERFACE_DEFINED__ */


#ifndef __DispHTMLObjectElement_DISPINTERFACE_DEFINED__
#define __DispHTMLObjectElement_DISPINTERFACE_DEFINED__

/* dispinterface DispHTMLObjectElement */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_DispHTMLObjectElement;


    MIDL_INTERFACE("3050f529-98b5-11cf-bb82-00aa00bdce0b")
    DispHTMLObjectElement : public IDispatch
    {
    };
    


#endif 	/* __DispHTMLObjectElement_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_HTMLObjectElement;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f24e-98b5-11cf-bb82-00aa00bdce0b")
HTMLObjectElement;
#endif

#ifndef __DispHTMLParamElement_DISPINTERFACE_DEFINED__
#define __DispHTMLParamElement_DISPINTERFACE_DEFINED__

/* dispinterface DispHTMLParamElement */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_DispHTMLParamElement;


    MIDL_INTERFACE("3050f590-98b5-11cf-bb82-00aa00bdce0b")
    DispHTMLParamElement : public IDispatch
    {
    };
    


#endif 	/* __DispHTMLParamElement_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_HTMLParamElement;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f83e-98b5-11cf-bb82-00aa00bdce0b")
HTMLParamElement;
#endif

#ifndef __HTMLFrameSiteEvents2_DISPINTERFACE_DEFINED__
#define __HTMLFrameSiteEvents2_DISPINTERFACE_DEFINED__

/* dispinterface HTMLFrameSiteEvents2 */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_HTMLFrameSiteEvents2;


    MIDL_INTERFACE("3050f7ff-98b5-11cf-bb82-00aa00bdce0b")
    HTMLFrameSiteEvents2 : public IDispatch
    {
    };
    


#endif 	/* __HTMLFrameSiteEvents2_DISPINTERFACE_DEFINED__ */


#ifndef __HTMLFrameSiteEvents_DISPINTERFACE_DEFINED__
#define __HTMLFrameSiteEvents_DISPINTERFACE_DEFINED__

/* dispinterface HTMLFrameSiteEvents */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_HTMLFrameSiteEvents;


    MIDL_INTERFACE("3050f800-98b5-11cf-bb82-00aa00bdce0b")
    HTMLFrameSiteEvents : public IDispatch
    {
    };
    


#endif 	/* __HTMLFrameSiteEvents_DISPINTERFACE_DEFINED__ */


#ifndef __IHTMLFrameBase2_INTERFACE_DEFINED__
#define __IHTMLFrameBase2_INTERFACE_DEFINED__

/* interface IHTMLFrameBase2 */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLFrameBase2;

    
    MIDL_INTERFACE("3050f6db-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLFrameBase2 : public IDispatch
    {
    public:
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_contentWindow( 
            /* [out][retval] */ IHTMLWindow2 **p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onload( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onload( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onreadystatechange( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onreadystatechange( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_readyState( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_allowTransparency( 
            /* [in] */ VARIANT_BOOL v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_allowTransparency( 
            /* [out][retval] */ VARIANT_BOOL *p) = 0;
        
    };
    



/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLFrameBase2_get_contentWindow_Proxy( 
    IHTMLFrameBase2 * This,
    /* [out][retval] */ IHTMLWindow2 **p);


void __RPC_STUB IHTMLFrameBase2_get_contentWindow_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLFrameBase2_put_onload_Proxy( 
    IHTMLFrameBase2 * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLFrameBase2_put_onload_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLFrameBase2_get_onload_Proxy( 
    IHTMLFrameBase2 * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLFrameBase2_get_onload_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLFrameBase2_put_onreadystatechange_Proxy( 
    IHTMLFrameBase2 * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLFrameBase2_put_onreadystatechange_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLFrameBase2_get_onreadystatechange_Proxy( 
    IHTMLFrameBase2 * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLFrameBase2_get_onreadystatechange_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLFrameBase2_get_readyState_Proxy( 
    IHTMLFrameBase2 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLFrameBase2_get_readyState_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLFrameBase2_put_allowTransparency_Proxy( 
    IHTMLFrameBase2 * This,
    /* [in] */ VARIANT_BOOL v);


void __RPC_STUB IHTMLFrameBase2_put_allowTransparency_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLFrameBase2_get_allowTransparency_Proxy( 
    IHTMLFrameBase2 * This,
    /* [out][retval] */ VARIANT_BOOL *p);


void __RPC_STUB IHTMLFrameBase2_get_allowTransparency_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLFrameBase2_INTERFACE_DEFINED__ */


#ifndef __IHTMLFrameBase3_INTERFACE_DEFINED__
#define __IHTMLFrameBase3_INTERFACE_DEFINED__

/* interface IHTMLFrameBase3 */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLFrameBase3;

    
    MIDL_INTERFACE("3050f82e-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLFrameBase3 : public IDispatch
    {
    public:
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_longDesc( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_longDesc( 
            /* [out][retval] */ BSTR *p) = 0;
        
    };
    



/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLFrameBase3_put_longDesc_Proxy( 
    IHTMLFrameBase3 * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLFrameBase3_put_longDesc_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLFrameBase3_get_longDesc_Proxy( 
    IHTMLFrameBase3 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLFrameBase3_get_longDesc_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLFrameBase3_INTERFACE_DEFINED__ */


#ifndef __DispHTMLFrameBase_DISPINTERFACE_DEFINED__
#define __DispHTMLFrameBase_DISPINTERFACE_DEFINED__

/* dispinterface DispHTMLFrameBase */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_DispHTMLFrameBase;


    MIDL_INTERFACE("3050f541-98b5-11cf-bb82-00aa00bdce0b")
    DispHTMLFrameBase : public IDispatch
    {
    };
    


#endif 	/* __DispHTMLFrameBase_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_HTMLFrameBase;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f312-98b5-11cf-bb82-00aa00bdce0b")
HTMLFrameBase;
#endif

#ifndef __IHTMLFrameElement_INTERFACE_DEFINED__
#define __IHTMLFrameElement_INTERFACE_DEFINED__

/* interface IHTMLFrameElement */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLFrameElement;

    
    MIDL_INTERFACE("3050f313-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLFrameElement : public IDispatch
    {
    public:
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_borderColor( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_borderColor( 
            /* [out][retval] */ VARIANT *p) = 0;
        
    };
    



/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLFrameElement_put_borderColor_Proxy( 
    IHTMLFrameElement * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLFrameElement_put_borderColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLFrameElement_get_borderColor_Proxy( 
    IHTMLFrameElement * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLFrameElement_get_borderColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLFrameElement_INTERFACE_DEFINED__ */


#ifndef __IHTMLFrameElement2_INTERFACE_DEFINED__
#define __IHTMLFrameElement2_INTERFACE_DEFINED__

/* interface IHTMLFrameElement2 */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLFrameElement2;

    
    MIDL_INTERFACE("3050f7f5-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLFrameElement2 : public IDispatch
    {
    public:
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_height( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_height( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_width( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_width( 
            /* [out][retval] */ VARIANT *p) = 0;
        
    };
    



/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLFrameElement2_put_height_Proxy( 
    IHTMLFrameElement2 * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLFrameElement2_put_height_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLFrameElement2_get_height_Proxy( 
    IHTMLFrameElement2 * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLFrameElement2_get_height_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLFrameElement2_put_width_Proxy( 
    IHTMLFrameElement2 * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLFrameElement2_put_width_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLFrameElement2_get_width_Proxy( 
    IHTMLFrameElement2 * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLFrameElement2_get_width_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLFrameElement2_INTERFACE_DEFINED__ */


#ifndef __DispHTMLFrameElement_DISPINTERFACE_DEFINED__
#define __DispHTMLFrameElement_DISPINTERFACE_DEFINED__

/* dispinterface DispHTMLFrameElement */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_DispHTMLFrameElement;


    MIDL_INTERFACE("3050f513-98b5-11cf-bb82-00aa00bdce0b")
    DispHTMLFrameElement : public IDispatch
    {
    };
    


#endif 	/* __DispHTMLFrameElement_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_HTMLFrameElement;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f314-98b5-11cf-bb82-00aa00bdce0b")
HTMLFrameElement;
#endif

#ifndef __IHTMLIFrameElement_INTERFACE_DEFINED__
#define __IHTMLIFrameElement_INTERFACE_DEFINED__

/* interface IHTMLIFrameElement */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLIFrameElement;

    
    MIDL_INTERFACE("3050f315-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLIFrameElement : public IDispatch
    {
    public:
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_vspace( 
            /* [in] */ long v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_vspace( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_hspace( 
            /* [in] */ long v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_hspace( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_align( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_align( 
            /* [out][retval] */ BSTR *p) = 0;
        
    };
    



/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLIFrameElement_put_vspace_Proxy( 
    IHTMLIFrameElement * This,
    /* [in] */ long v);


void __RPC_STUB IHTMLIFrameElement_put_vspace_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLIFrameElement_get_vspace_Proxy( 
    IHTMLIFrameElement * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLIFrameElement_get_vspace_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLIFrameElement_put_hspace_Proxy( 
    IHTMLIFrameElement * This,
    /* [in] */ long v);


void __RPC_STUB IHTMLIFrameElement_put_hspace_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLIFrameElement_get_hspace_Proxy( 
    IHTMLIFrameElement * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLIFrameElement_get_hspace_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLIFrameElement_put_align_Proxy( 
    IHTMLIFrameElement * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLIFrameElement_put_align_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLIFrameElement_get_align_Proxy( 
    IHTMLIFrameElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLIFrameElement_get_align_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLIFrameElement_INTERFACE_DEFINED__ */


#ifndef __IHTMLIFrameElement2_INTERFACE_DEFINED__
#define __IHTMLIFrameElement2_INTERFACE_DEFINED__

/* interface IHTMLIFrameElement2 */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLIFrameElement2;

    
    MIDL_INTERFACE("3050f4e6-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLIFrameElement2 : public IDispatch
    {
    public:
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_height( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_height( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_width( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_width( 
            /* [out][retval] */ VARIANT *p) = 0;
        
    };
    



/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLIFrameElement2_put_height_Proxy( 
    IHTMLIFrameElement2 * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLIFrameElement2_put_height_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLIFrameElement2_get_height_Proxy( 
    IHTMLIFrameElement2 * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLIFrameElement2_get_height_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLIFrameElement2_put_width_Proxy( 
    IHTMLIFrameElement2 * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLIFrameElement2_put_width_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLIFrameElement2_get_width_Proxy( 
    IHTMLIFrameElement2 * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLIFrameElement2_get_width_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLIFrameElement2_INTERFACE_DEFINED__ */


#ifndef __DispHTMLIFrame_DISPINTERFACE_DEFINED__
#define __DispHTMLIFrame_DISPINTERFACE_DEFINED__

/* dispinterface DispHTMLIFrame */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_DispHTMLIFrame;


    MIDL_INTERFACE("3050f51b-98b5-11cf-bb82-00aa00bdce0b")
    DispHTMLIFrame : public IDispatch
    {
    };
    


#endif 	/* __DispHTMLIFrame_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_HTMLIFrame;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f316-98b5-11cf-bb82-00aa00bdce0b")
HTMLIFrame;
#endif

#ifndef __IHTMLDivPosition_INTERFACE_DEFINED__
#define __IHTMLDivPosition_INTERFACE_DEFINED__

/* interface IHTMLDivPosition */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLDivPosition;

    
    MIDL_INTERFACE("3050f212-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLDivPosition : public IDispatch
    {
    public:
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_align( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_align( 
            /* [out][retval] */ BSTR *p) = 0;
        
    };
    



/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLDivPosition_put_align_Proxy( 
    IHTMLDivPosition * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLDivPosition_put_align_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDivPosition_get_align_Proxy( 
    IHTMLDivPosition * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLDivPosition_get_align_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLDivPosition_INTERFACE_DEFINED__ */


#ifndef __IHTMLFieldSetElement_INTERFACE_DEFINED__
#define __IHTMLFieldSetElement_INTERFACE_DEFINED__

/* interface IHTMLFieldSetElement */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLFieldSetElement;

    
    MIDL_INTERFACE("3050f3e7-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLFieldSetElement : public IDispatch
    {
    public:
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_align( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_align( 
            /* [out][retval] */ BSTR *p) = 0;
        
    };
    



/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLFieldSetElement_put_align_Proxy( 
    IHTMLFieldSetElement * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLFieldSetElement_put_align_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLFieldSetElement_get_align_Proxy( 
    IHTMLFieldSetElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLFieldSetElement_get_align_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLFieldSetElement_INTERFACE_DEFINED__ */


#ifndef __IHTMLFieldSetElement2_INTERFACE_DEFINED__
#define __IHTMLFieldSetElement2_INTERFACE_DEFINED__

/* interface IHTMLFieldSetElement2 */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLFieldSetElement2;

    
    MIDL_INTERFACE("3050f833-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLFieldSetElement2 : public IDispatch
    {
    public:
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_form( 
            /* [out][retval] */ IHTMLFormElement **p) = 0;
        
    };
    



/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLFieldSetElement2_get_form_Proxy( 
    IHTMLFieldSetElement2 * This,
    /* [out][retval] */ IHTMLFormElement **p);


void __RPC_STUB IHTMLFieldSetElement2_get_form_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLFieldSetElement2_INTERFACE_DEFINED__ */


#ifndef __IHTMLLegendElement_INTERFACE_DEFINED__
#define __IHTMLLegendElement_INTERFACE_DEFINED__

/* interface IHTMLLegendElement */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLLegendElement;

    
    MIDL_INTERFACE("3050f3ea-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLLegendElement : public IDispatch
    {
    public:
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_align( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_align( 
            /* [out][retval] */ BSTR *p) = 0;
        
    };
    



/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLLegendElement_put_align_Proxy( 
    IHTMLLegendElement * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLLegendElement_put_align_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLLegendElement_get_align_Proxy( 
    IHTMLLegendElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLLegendElement_get_align_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLLegendElement_INTERFACE_DEFINED__ */


#ifndef __IHTMLLegendElement2_INTERFACE_DEFINED__
#define __IHTMLLegendElement2_INTERFACE_DEFINED__

/* interface IHTMLLegendElement2 */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLLegendElement2;

    
    MIDL_INTERFACE("3050f834-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLLegendElement2 : public IDispatch
    {
    public:
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_form( 
            /* [out][retval] */ IHTMLFormElement **p) = 0;
        
    };
    



/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLLegendElement2_get_form_Proxy( 
    IHTMLLegendElement2 * This,
    /* [out][retval] */ IHTMLFormElement **p);


void __RPC_STUB IHTMLLegendElement2_get_form_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLLegendElement2_INTERFACE_DEFINED__ */


#ifndef __DispHTMLDivPosition_DISPINTERFACE_DEFINED__
#define __DispHTMLDivPosition_DISPINTERFACE_DEFINED__

/* dispinterface DispHTMLDivPosition */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_DispHTMLDivPosition;


    MIDL_INTERFACE("3050f50f-98b5-11cf-bb82-00aa00bdce0b")
    DispHTMLDivPosition : public IDispatch
    {
    };
    


#endif 	/* __DispHTMLDivPosition_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_HTMLDivPosition;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f249-98b5-11cf-bb82-00aa00bdce0b")
HTMLDivPosition;
#endif

#ifndef __DispHTMLFieldSetElement_DISPINTERFACE_DEFINED__
#define __DispHTMLFieldSetElement_DISPINTERFACE_DEFINED__

/* dispinterface DispHTMLFieldSetElement */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_DispHTMLFieldSetElement;


    MIDL_INTERFACE("3050f545-98b5-11cf-bb82-00aa00bdce0b")
    DispHTMLFieldSetElement : public IDispatch
    {
    };
    


#endif 	/* __DispHTMLFieldSetElement_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_HTMLFieldSetElement;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f3e8-98b5-11cf-bb82-00aa00bdce0b")
HTMLFieldSetElement;
#endif

#ifndef __DispHTMLLegendElement_DISPINTERFACE_DEFINED__
#define __DispHTMLLegendElement_DISPINTERFACE_DEFINED__

/* dispinterface DispHTMLLegendElement */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_DispHTMLLegendElement;


    MIDL_INTERFACE("3050f546-98b5-11cf-bb82-00aa00bdce0b")
    DispHTMLLegendElement : public IDispatch
    {
    };
    


#endif 	/* __DispHTMLLegendElement_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_HTMLLegendElement;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f3e9-98b5-11cf-bb82-00aa00bdce0b")
HTMLLegendElement;
#endif

#ifndef __IHTMLSpanFlow_INTERFACE_DEFINED__
#define __IHTMLSpanFlow_INTERFACE_DEFINED__

/* interface IHTMLSpanFlow */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLSpanFlow;

    
    MIDL_INTERFACE("3050f3e5-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLSpanFlow : public IDispatch
    {
    public:
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_align( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_align( 
            /* [out][retval] */ BSTR *p) = 0;
        
    };
    



/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLSpanFlow_put_align_Proxy( 
    IHTMLSpanFlow * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLSpanFlow_put_align_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLSpanFlow_get_align_Proxy( 
    IHTMLSpanFlow * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLSpanFlow_get_align_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLSpanFlow_INTERFACE_DEFINED__ */


#ifndef __DispHTMLSpanFlow_DISPINTERFACE_DEFINED__
#define __DispHTMLSpanFlow_DISPINTERFACE_DEFINED__

/* dispinterface DispHTMLSpanFlow */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_DispHTMLSpanFlow;


    MIDL_INTERFACE("3050f544-98b5-11cf-bb82-00aa00bdce0b")
    DispHTMLSpanFlow : public IDispatch
    {
    };
    


#endif 	/* __DispHTMLSpanFlow_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_HTMLSpanFlow;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f3e6-98b5-11cf-bb82-00aa00bdce0b")
HTMLSpanFlow;
#endif

#ifndef __IHTMLFrameSetElement_INTERFACE_DEFINED__
#define __IHTMLFrameSetElement_INTERFACE_DEFINED__

/* interface IHTMLFrameSetElement */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLFrameSetElement;

    
    MIDL_INTERFACE("3050f319-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLFrameSetElement : public IDispatch
    {
    public:
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_rows( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_rows( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_cols( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_cols( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_border( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_border( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_borderColor( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_borderColor( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_frameBorder( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_frameBorder( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_frameSpacing( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_frameSpacing( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_name( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_name( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onload( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onload( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onunload( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onunload( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onbeforeunload( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onbeforeunload( 
            /* [out][retval] */ VARIANT *p) = 0;
        
    };
    



/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLFrameSetElement_put_rows_Proxy( 
    IHTMLFrameSetElement * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLFrameSetElement_put_rows_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLFrameSetElement_get_rows_Proxy( 
    IHTMLFrameSetElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLFrameSetElement_get_rows_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLFrameSetElement_put_cols_Proxy( 
    IHTMLFrameSetElement * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLFrameSetElement_put_cols_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLFrameSetElement_get_cols_Proxy( 
    IHTMLFrameSetElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLFrameSetElement_get_cols_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLFrameSetElement_put_border_Proxy( 
    IHTMLFrameSetElement * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLFrameSetElement_put_border_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLFrameSetElement_get_border_Proxy( 
    IHTMLFrameSetElement * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLFrameSetElement_get_border_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLFrameSetElement_put_borderColor_Proxy( 
    IHTMLFrameSetElement * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLFrameSetElement_put_borderColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLFrameSetElement_get_borderColor_Proxy( 
    IHTMLFrameSetElement * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLFrameSetElement_get_borderColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLFrameSetElement_put_frameBorder_Proxy( 
    IHTMLFrameSetElement * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLFrameSetElement_put_frameBorder_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLFrameSetElement_get_frameBorder_Proxy( 
    IHTMLFrameSetElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLFrameSetElement_get_frameBorder_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLFrameSetElement_put_frameSpacing_Proxy( 
    IHTMLFrameSetElement * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLFrameSetElement_put_frameSpacing_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLFrameSetElement_get_frameSpacing_Proxy( 
    IHTMLFrameSetElement * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLFrameSetElement_get_frameSpacing_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLFrameSetElement_put_name_Proxy( 
    IHTMLFrameSetElement * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLFrameSetElement_put_name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLFrameSetElement_get_name_Proxy( 
    IHTMLFrameSetElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLFrameSetElement_get_name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLFrameSetElement_put_onload_Proxy( 
    IHTMLFrameSetElement * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLFrameSetElement_put_onload_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLFrameSetElement_get_onload_Proxy( 
    IHTMLFrameSetElement * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLFrameSetElement_get_onload_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLFrameSetElement_put_onunload_Proxy( 
    IHTMLFrameSetElement * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLFrameSetElement_put_onunload_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLFrameSetElement_get_onunload_Proxy( 
    IHTMLFrameSetElement * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLFrameSetElement_get_onunload_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLFrameSetElement_put_onbeforeunload_Proxy( 
    IHTMLFrameSetElement * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLFrameSetElement_put_onbeforeunload_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLFrameSetElement_get_onbeforeunload_Proxy( 
    IHTMLFrameSetElement * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLFrameSetElement_get_onbeforeunload_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLFrameSetElement_INTERFACE_DEFINED__ */


#ifndef __IHTMLFrameSetElement2_INTERFACE_DEFINED__
#define __IHTMLFrameSetElement2_INTERFACE_DEFINED__

/* interface IHTMLFrameSetElement2 */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLFrameSetElement2;

    
    MIDL_INTERFACE("3050f5c6-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLFrameSetElement2 : public IDispatch
    {
    public:
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onbeforeprint( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onbeforeprint( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onafterprint( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onafterprint( 
            /* [out][retval] */ VARIANT *p) = 0;
        
    };
    



/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLFrameSetElement2_put_onbeforeprint_Proxy( 
    IHTMLFrameSetElement2 * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLFrameSetElement2_put_onbeforeprint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLFrameSetElement2_get_onbeforeprint_Proxy( 
    IHTMLFrameSetElement2 * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLFrameSetElement2_get_onbeforeprint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLFrameSetElement2_put_onafterprint_Proxy( 
    IHTMLFrameSetElement2 * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLFrameSetElement2_put_onafterprint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLFrameSetElement2_get_onafterprint_Proxy( 
    IHTMLFrameSetElement2 * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLFrameSetElement2_get_onafterprint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLFrameSetElement2_INTERFACE_DEFINED__ */


#ifndef __DispHTMLFrameSetSite_DISPINTERFACE_DEFINED__
#define __DispHTMLFrameSetSite_DISPINTERFACE_DEFINED__

/* dispinterface DispHTMLFrameSetSite */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_DispHTMLFrameSetSite;


    MIDL_INTERFACE("3050f514-98b5-11cf-bb82-00aa00bdce0b")
    DispHTMLFrameSetSite : public IDispatch
    {
    };
    


#endif 	/* __DispHTMLFrameSetSite_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_HTMLFrameSetSite;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f31A-98b5-11cf-bb82-00aa00bdce0b")
HTMLFrameSetSite;
#endif

#ifndef __IHTMLBGsound_INTERFACE_DEFINED__
#define __IHTMLBGsound_INTERFACE_DEFINED__

/* interface IHTMLBGsound */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLBGsound;

    
    MIDL_INTERFACE("3050f369-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLBGsound : public IDispatch
    {
    public:
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_src( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_src( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_loop( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_loop( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_volume( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_volume( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_balance( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_balance( 
            /* [out][retval] */ VARIANT *p) = 0;
        
    };
    



/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLBGsound_put_src_Proxy( 
    IHTMLBGsound * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLBGsound_put_src_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLBGsound_get_src_Proxy( 
    IHTMLBGsound * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLBGsound_get_src_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLBGsound_put_loop_Proxy( 
    IHTMLBGsound * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLBGsound_put_loop_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLBGsound_get_loop_Proxy( 
    IHTMLBGsound * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLBGsound_get_loop_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLBGsound_put_volume_Proxy( 
    IHTMLBGsound * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLBGsound_put_volume_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLBGsound_get_volume_Proxy( 
    IHTMLBGsound * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLBGsound_get_volume_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLBGsound_put_balance_Proxy( 
    IHTMLBGsound * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLBGsound_put_balance_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLBGsound_get_balance_Proxy( 
    IHTMLBGsound * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLBGsound_get_balance_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLBGsound_INTERFACE_DEFINED__ */


#ifndef __DispHTMLBGsound_DISPINTERFACE_DEFINED__
#define __DispHTMLBGsound_DISPINTERFACE_DEFINED__

/* dispinterface DispHTMLBGsound */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_DispHTMLBGsound;


    MIDL_INTERFACE("3050f53c-98b5-11cf-bb82-00aa00bdce0b")
    DispHTMLBGsound : public IDispatch
    {
    };
    


#endif 	/* __DispHTMLBGsound_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_HTMLBGsound;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f370-98b5-11cf-bb82-00aa00bdce0b")
HTMLBGsound;
#endif

#ifndef __IHTMLFontNamesCollection_INTERFACE_DEFINED__
#define __IHTMLFontNamesCollection_INTERFACE_DEFINED__

/* interface IHTMLFontNamesCollection */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLFontNamesCollection;

    
    MIDL_INTERFACE("3050f376-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLFontNamesCollection : public IDispatch
    {
    public:
        virtual /* [hidden][id][propget] */ HRESULT STDMETHODCALLTYPE get_length( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [restricted][hidden][id][propget] */ HRESULT STDMETHODCALLTYPE get__newEnum( 
            /* [out][retval] */ IUnknown **p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE item( 
            /* [in] */ long index,
            /* [out][retval] */ BSTR *pBstr) = 0;
        
    };
    



/* [hidden][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLFontNamesCollection_get_length_Proxy( 
    IHTMLFontNamesCollection * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLFontNamesCollection_get_length_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [restricted][hidden][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLFontNamesCollection_get__newEnum_Proxy( 
    IHTMLFontNamesCollection * This,
    /* [out][retval] */ IUnknown **p);


void __RPC_STUB IHTMLFontNamesCollection_get__newEnum_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLFontNamesCollection_item_Proxy( 
    IHTMLFontNamesCollection * This,
    /* [in] */ long index,
    /* [out][retval] */ BSTR *pBstr);


void __RPC_STUB IHTMLFontNamesCollection_item_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLFontNamesCollection_INTERFACE_DEFINED__ */


#ifndef __IHTMLFontSizesCollection_INTERFACE_DEFINED__
#define __IHTMLFontSizesCollection_INTERFACE_DEFINED__

/* interface IHTMLFontSizesCollection */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLFontSizesCollection;

    
    MIDL_INTERFACE("3050f377-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLFontSizesCollection : public IDispatch
    {
    public:
        virtual /* [hidden][id][propget] */ HRESULT STDMETHODCALLTYPE get_length( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [restricted][hidden][id][propget] */ HRESULT STDMETHODCALLTYPE get__newEnum( 
            /* [out][retval] */ IUnknown **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_forFont( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE item( 
            /* [in] */ long index,
            /* [out][retval] */ long *plSize) = 0;
        
    };
    



/* [hidden][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLFontSizesCollection_get_length_Proxy( 
    IHTMLFontSizesCollection * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLFontSizesCollection_get_length_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [restricted][hidden][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLFontSizesCollection_get__newEnum_Proxy( 
    IHTMLFontSizesCollection * This,
    /* [out][retval] */ IUnknown **p);


void __RPC_STUB IHTMLFontSizesCollection_get__newEnum_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLFontSizesCollection_get_forFont_Proxy( 
    IHTMLFontSizesCollection * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLFontSizesCollection_get_forFont_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLFontSizesCollection_item_Proxy( 
    IHTMLFontSizesCollection * This,
    /* [in] */ long index,
    /* [out][retval] */ long *plSize);


void __RPC_STUB IHTMLFontSizesCollection_item_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLFontSizesCollection_INTERFACE_DEFINED__ */


#ifndef __IHTMLOptionsHolder_INTERFACE_DEFINED__
#define __IHTMLOptionsHolder_INTERFACE_DEFINED__

/* interface IHTMLOptionsHolder */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLOptionsHolder;

    
    MIDL_INTERFACE("3050f378-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLOptionsHolder : public IDispatch
    {
    public:
        virtual /* [hidden][id][propget] */ HRESULT STDMETHODCALLTYPE get_document( 
            /* [out][retval] */ IHTMLDocument2 **p) = 0;
        
        virtual /* [hidden][id][propget] */ HRESULT STDMETHODCALLTYPE get_fonts( 
            /* [out][retval] */ IHTMLFontNamesCollection **p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_execArg( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_execArg( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_errorLine( 
            /* [in] */ long v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_errorLine( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_errorCharacter( 
            /* [in] */ long v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_errorCharacter( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_errorCode( 
            /* [in] */ long v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_errorCode( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_errorMessage( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_errorMessage( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_errorDebug( 
            /* [in] */ VARIANT_BOOL v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_errorDebug( 
            /* [out][retval] */ VARIANT_BOOL *p) = 0;
        
        virtual /* [hidden][id][propget] */ HRESULT STDMETHODCALLTYPE get_unsecuredWindowOfDocument( 
            /* [out][retval] */ IHTMLWindow2 **p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_findText( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_findText( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_anythingAfterFrameset( 
            /* [in] */ VARIANT_BOOL v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_anythingAfterFrameset( 
            /* [out][retval] */ VARIANT_BOOL *p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE sizes( 
            /* [in] */ BSTR fontName,
            /* [out][retval] */ IHTMLFontSizesCollection **pSizesCollection) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE openfiledlg( 
            /* [in][optional] */ VARIANT initFile,
            /* [in][optional] */ VARIANT initDir,
            /* [in][optional] */ VARIANT filter,
            /* [in][optional] */ VARIANT title,
            /* [out][retval] */ BSTR *pathName) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE savefiledlg( 
            /* [in][optional] */ VARIANT initFile,
            /* [in][optional] */ VARIANT initDir,
            /* [in][optional] */ VARIANT filter,
            /* [in][optional] */ VARIANT title,
            /* [out][retval] */ BSTR *pathName) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE choosecolordlg( 
            /* [in][optional] */ VARIANT initColor,
            /* [out][retval] */ long *rgbColor) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE showSecurityInfo( void) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE isApartmentModel( 
            /* [in] */ IHTMLObjectElement *object,
            /* [out][retval] */ VARIANT_BOOL *fApartment) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE getCharset( 
            /* [in] */ BSTR fontName,
            /* [out][retval] */ long *charset) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_secureConnectionInfo( 
            /* [out][retval] */ BSTR *p) = 0;
        
    };
    



/* [hidden][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLOptionsHolder_get_document_Proxy( 
    IHTMLOptionsHolder * This,
    /* [out][retval] */ IHTMLDocument2 **p);


void __RPC_STUB IHTMLOptionsHolder_get_document_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [hidden][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLOptionsHolder_get_fonts_Proxy( 
    IHTMLOptionsHolder * This,
    /* [out][retval] */ IHTMLFontNamesCollection **p);


void __RPC_STUB IHTMLOptionsHolder_get_fonts_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLOptionsHolder_put_execArg_Proxy( 
    IHTMLOptionsHolder * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLOptionsHolder_put_execArg_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLOptionsHolder_get_execArg_Proxy( 
    IHTMLOptionsHolder * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLOptionsHolder_get_execArg_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLOptionsHolder_put_errorLine_Proxy( 
    IHTMLOptionsHolder * This,
    /* [in] */ long v);


void __RPC_STUB IHTMLOptionsHolder_put_errorLine_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLOptionsHolder_get_errorLine_Proxy( 
    IHTMLOptionsHolder * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLOptionsHolder_get_errorLine_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLOptionsHolder_put_errorCharacter_Proxy( 
    IHTMLOptionsHolder * This,
    /* [in] */ long v);


void __RPC_STUB IHTMLOptionsHolder_put_errorCharacter_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLOptionsHolder_get_errorCharacter_Proxy( 
    IHTMLOptionsHolder * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLOptionsHolder_get_errorCharacter_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLOptionsHolder_put_errorCode_Proxy( 
    IHTMLOptionsHolder * This,
    /* [in] */ long v);


void __RPC_STUB IHTMLOptionsHolder_put_errorCode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLOptionsHolder_get_errorCode_Proxy( 
    IHTMLOptionsHolder * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLOptionsHolder_get_errorCode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLOptionsHolder_put_errorMessage_Proxy( 
    IHTMLOptionsHolder * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLOptionsHolder_put_errorMessage_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLOptionsHolder_get_errorMessage_Proxy( 
    IHTMLOptionsHolder * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLOptionsHolder_get_errorMessage_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLOptionsHolder_put_errorDebug_Proxy( 
    IHTMLOptionsHolder * This,
    /* [in] */ VARIANT_BOOL v);


void __RPC_STUB IHTMLOptionsHolder_put_errorDebug_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLOptionsHolder_get_errorDebug_Proxy( 
    IHTMLOptionsHolder * This,
    /* [out][retval] */ VARIANT_BOOL *p);


void __RPC_STUB IHTMLOptionsHolder_get_errorDebug_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [hidden][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLOptionsHolder_get_unsecuredWindowOfDocument_Proxy( 
    IHTMLOptionsHolder * This,
    /* [out][retval] */ IHTMLWindow2 **p);


void __RPC_STUB IHTMLOptionsHolder_get_unsecuredWindowOfDocument_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLOptionsHolder_put_findText_Proxy( 
    IHTMLOptionsHolder * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLOptionsHolder_put_findText_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLOptionsHolder_get_findText_Proxy( 
    IHTMLOptionsHolder * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLOptionsHolder_get_findText_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLOptionsHolder_put_anythingAfterFrameset_Proxy( 
    IHTMLOptionsHolder * This,
    /* [in] */ VARIANT_BOOL v);


void __RPC_STUB IHTMLOptionsHolder_put_anythingAfterFrameset_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLOptionsHolder_get_anythingAfterFrameset_Proxy( 
    IHTMLOptionsHolder * This,
    /* [out][retval] */ VARIANT_BOOL *p);


void __RPC_STUB IHTMLOptionsHolder_get_anythingAfterFrameset_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLOptionsHolder_sizes_Proxy( 
    IHTMLOptionsHolder * This,
    /* [in] */ BSTR fontName,
    /* [out][retval] */ IHTMLFontSizesCollection **pSizesCollection);


void __RPC_STUB IHTMLOptionsHolder_sizes_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLOptionsHolder_openfiledlg_Proxy( 
    IHTMLOptionsHolder * This,
    /* [in][optional] */ VARIANT initFile,
    /* [in][optional] */ VARIANT initDir,
    /* [in][optional] */ VARIANT filter,
    /* [in][optional] */ VARIANT title,
    /* [out][retval] */ BSTR *pathName);


void __RPC_STUB IHTMLOptionsHolder_openfiledlg_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLOptionsHolder_savefiledlg_Proxy( 
    IHTMLOptionsHolder * This,
    /* [in][optional] */ VARIANT initFile,
    /* [in][optional] */ VARIANT initDir,
    /* [in][optional] */ VARIANT filter,
    /* [in][optional] */ VARIANT title,
    /* [out][retval] */ BSTR *pathName);


void __RPC_STUB IHTMLOptionsHolder_savefiledlg_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLOptionsHolder_choosecolordlg_Proxy( 
    IHTMLOptionsHolder * This,
    /* [in][optional] */ VARIANT initColor,
    /* [out][retval] */ long *rgbColor);


void __RPC_STUB IHTMLOptionsHolder_choosecolordlg_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLOptionsHolder_showSecurityInfo_Proxy( 
    IHTMLOptionsHolder * This);


void __RPC_STUB IHTMLOptionsHolder_showSecurityInfo_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLOptionsHolder_isApartmentModel_Proxy( 
    IHTMLOptionsHolder * This,
    /* [in] */ IHTMLObjectElement *object,
    /* [out][retval] */ VARIANT_BOOL *fApartment);


void __RPC_STUB IHTMLOptionsHolder_isApartmentModel_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLOptionsHolder_getCharset_Proxy( 
    IHTMLOptionsHolder * This,
    /* [in] */ BSTR fontName,
    /* [out][retval] */ long *charset);


void __RPC_STUB IHTMLOptionsHolder_getCharset_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLOptionsHolder_get_secureConnectionInfo_Proxy( 
    IHTMLOptionsHolder * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLOptionsHolder_get_secureConnectionInfo_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLOptionsHolder_INTERFACE_DEFINED__ */


#ifndef __HTMLStyleElementEvents2_DISPINTERFACE_DEFINED__
#define __HTMLStyleElementEvents2_DISPINTERFACE_DEFINED__

/* dispinterface HTMLStyleElementEvents2 */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_HTMLStyleElementEvents2;


    MIDL_INTERFACE("3050f615-98b5-11cf-bb82-00aa00bdce0b")
    HTMLStyleElementEvents2 : public IDispatch
    {
    };
    


#endif 	/* __HTMLStyleElementEvents2_DISPINTERFACE_DEFINED__ */


#ifndef __HTMLStyleElementEvents_DISPINTERFACE_DEFINED__
#define __HTMLStyleElementEvents_DISPINTERFACE_DEFINED__

/* dispinterface HTMLStyleElementEvents */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_HTMLStyleElementEvents;


    MIDL_INTERFACE("3050f3cb-98b5-11cf-bb82-00aa00bdce0b")
    HTMLStyleElementEvents : public IDispatch
    {
    };
    


#endif 	/* __HTMLStyleElementEvents_DISPINTERFACE_DEFINED__ */


#ifndef __IHTMLStyleElement_INTERFACE_DEFINED__
#define __IHTMLStyleElement_INTERFACE_DEFINED__

/* interface IHTMLStyleElement */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLStyleElement;

    
    MIDL_INTERFACE("3050f375-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLStyleElement : public IDispatch
    {
    public:
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_type( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_type( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_readyState( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onreadystatechange( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onreadystatechange( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onload( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onload( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onerror( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onerror( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_styleSheet( 
            /* [out][retval] */ IHTMLStyleSheet **p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_disabled( 
            /* [in] */ VARIANT_BOOL v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_disabled( 
            /* [out][retval] */ VARIANT_BOOL *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_media( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_media( 
            /* [out][retval] */ BSTR *p) = 0;
        
    };
    



/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyleElement_put_type_Proxy( 
    IHTMLStyleElement * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyleElement_put_type_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyleElement_get_type_Proxy( 
    IHTMLStyleElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLStyleElement_get_type_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyleElement_get_readyState_Proxy( 
    IHTMLStyleElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLStyleElement_get_readyState_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyleElement_put_onreadystatechange_Proxy( 
    IHTMLStyleElement * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLStyleElement_put_onreadystatechange_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyleElement_get_onreadystatechange_Proxy( 
    IHTMLStyleElement * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLStyleElement_get_onreadystatechange_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyleElement_put_onload_Proxy( 
    IHTMLStyleElement * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLStyleElement_put_onload_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyleElement_get_onload_Proxy( 
    IHTMLStyleElement * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLStyleElement_get_onload_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyleElement_put_onerror_Proxy( 
    IHTMLStyleElement * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLStyleElement_put_onerror_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyleElement_get_onerror_Proxy( 
    IHTMLStyleElement * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLStyleElement_get_onerror_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyleElement_get_styleSheet_Proxy( 
    IHTMLStyleElement * This,
    /* [out][retval] */ IHTMLStyleSheet **p);


void __RPC_STUB IHTMLStyleElement_get_styleSheet_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyleElement_put_disabled_Proxy( 
    IHTMLStyleElement * This,
    /* [in] */ VARIANT_BOOL v);


void __RPC_STUB IHTMLStyleElement_put_disabled_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyleElement_get_disabled_Proxy( 
    IHTMLStyleElement * This,
    /* [out][retval] */ VARIANT_BOOL *p);


void __RPC_STUB IHTMLStyleElement_get_disabled_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyleElement_put_media_Proxy( 
    IHTMLStyleElement * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyleElement_put_media_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyleElement_get_media_Proxy( 
    IHTMLStyleElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLStyleElement_get_media_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLStyleElement_INTERFACE_DEFINED__ */


#ifndef __DispHTMLStyleElement_DISPINTERFACE_DEFINED__
#define __DispHTMLStyleElement_DISPINTERFACE_DEFINED__

/* dispinterface DispHTMLStyleElement */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_DispHTMLStyleElement;


    MIDL_INTERFACE("3050f511-98b5-11cf-bb82-00aa00bdce0b")
    DispHTMLStyleElement : public IDispatch
    {
    };
    


#endif 	/* __DispHTMLStyleElement_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_HTMLStyleElement;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f37d-98b5-11cf-bb82-00aa00bdce0b")
HTMLStyleElement;
#endif

#ifndef __IHTMLStyleFontFace_INTERFACE_DEFINED__
#define __IHTMLStyleFontFace_INTERFACE_DEFINED__

/* interface IHTMLStyleFontFace */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLStyleFontFace;

    
    MIDL_INTERFACE("3050f3d5-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLStyleFontFace : public IDispatch
    {
    public:
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_fontsrc( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_fontsrc( 
            /* [out][retval] */ BSTR *p) = 0;
        
    };
    



/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyleFontFace_put_fontsrc_Proxy( 
    IHTMLStyleFontFace * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyleFontFace_put_fontsrc_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyleFontFace_get_fontsrc_Proxy( 
    IHTMLStyleFontFace * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLStyleFontFace_get_fontsrc_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLStyleFontFace_INTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_HTMLStyleFontFace;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f3d4-98b5-11cf-bb82-00aa00bdce0b")
HTMLStyleFontFace;
#endif

#ifndef __ICSSFilterSite_INTERFACE_DEFINED__
#define __ICSSFilterSite_INTERFACE_DEFINED__

/* interface ICSSFilterSite */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_ICSSFilterSite;

    
    MIDL_INTERFACE("3050f3ed-98b5-11cf-bb82-00aa00bdce0b")
    ICSSFilterSite : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetElement( 
            /* [out][retval] */ IHTMLElement **Element) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE FireOnFilterChangeEvent( void) = 0;
        
    };
    



HRESULT STDMETHODCALLTYPE ICSSFilterSite_GetElement_Proxy( 
    ICSSFilterSite * This,
    /* [out][retval] */ IHTMLElement **Element);


void __RPC_STUB ICSSFilterSite_GetElement_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE ICSSFilterSite_FireOnFilterChangeEvent_Proxy( 
    ICSSFilterSite * This);


void __RPC_STUB ICSSFilterSite_FireOnFilterChangeEvent_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __ICSSFilterSite_INTERFACE_DEFINED__ */


#ifndef __IMarkupPointer_INTERFACE_DEFINED__
#define __IMarkupPointer_INTERFACE_DEFINED__

/* interface IMarkupPointer */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_IMarkupPointer;

    
    MIDL_INTERFACE("3050f49f-98b5-11cf-bb82-00aa00bdce0b")
    IMarkupPointer : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE OwningDoc( 
            /* [out] */ IHTMLDocument2 **ppDoc) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Gravity( 
            /* [out] */ POINTER_GRAVITY *pGravity) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetGravity( 
            /* [in] */ POINTER_GRAVITY Gravity) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Cling( 
            /* [out] */ BOOL *pfCling) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetCling( 
            /* [in] */ BOOL fCLing) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Unposition( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IsPositioned( 
            /* [out] */ BOOL *pfPositioned) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetContainer( 
            /* [out] */ IMarkupContainer **ppContainer) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MoveAdjacentToElement( 
            /* [in] */ IHTMLElement *pElement,
            /* [in] */ ELEMENT_ADJACENCY eAdj) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MoveToPointer( 
            /* [in] */ IMarkupPointer *pPointer) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MoveToContainer( 
            /* [in] */ IMarkupContainer *pContainer,
            /* [in] */ BOOL fAtStart) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Left( 
            /* [in] */ BOOL fMove,
            /* [out] */ MARKUP_CONTEXT_TYPE *pContext,
            /* [out] */ IHTMLElement **ppElement,
            /* [out][in] */ long *pcch,
            /* [out] */ OLECHAR *pchText) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Right( 
            /* [in] */ BOOL fMove,
            /* [out] */ MARKUP_CONTEXT_TYPE *pContext,
            /* [out] */ IHTMLElement **ppElement,
            /* [out][in] */ long *pcch,
            /* [out] */ OLECHAR *pchText) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CurrentScope( 
            /* [out] */ IHTMLElement **ppElemCurrent) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IsLeftOf( 
            /* [in] */ IMarkupPointer *pPointerThat,
            /* [out] */ BOOL *pfResult) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IsLeftOfOrEqualTo( 
            /* [in] */ IMarkupPointer *pPointerThat,
            /* [out] */ BOOL *pfResult) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IsRightOf( 
            /* [in] */ IMarkupPointer *pPointerThat,
            /* [out] */ BOOL *pfResult) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IsRightOfOrEqualTo( 
            /* [in] */ IMarkupPointer *pPointerThat,
            /* [out] */ BOOL *pfResult) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IsEqualTo( 
            /* [in] */ IMarkupPointer *pPointerThat,
            /* [out] */ BOOL *pfAreEqual) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MoveUnit( 
            /* [in] */ MOVEUNIT_ACTION muAction) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE FindText( 
            /* [in] */ OLECHAR *pchFindText,
            /* [in] */ DWORD dwFlags,
            /* [in] */ IMarkupPointer *pIEndMatch,
            /* [in] */ IMarkupPointer *pIEndSearch) = 0;
        
    };
    



HRESULT STDMETHODCALLTYPE IMarkupPointer_OwningDoc_Proxy( 
    IMarkupPointer * This,
    /* [out] */ IHTMLDocument2 **ppDoc);


void __RPC_STUB IMarkupPointer_OwningDoc_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IMarkupPointer_Gravity_Proxy( 
    IMarkupPointer * This,
    /* [out] */ POINTER_GRAVITY *pGravity);


void __RPC_STUB IMarkupPointer_Gravity_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IMarkupPointer_SetGravity_Proxy( 
    IMarkupPointer * This,
    /* [in] */ POINTER_GRAVITY Gravity);


void __RPC_STUB IMarkupPointer_SetGravity_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IMarkupPointer_Cling_Proxy( 
    IMarkupPointer * This,
    /* [out] */ BOOL *pfCling);


void __RPC_STUB IMarkupPointer_Cling_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IMarkupPointer_SetCling_Proxy( 
    IMarkupPointer * This,
    /* [in] */ BOOL fCLing);


void __RPC_STUB IMarkupPointer_SetCling_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IMarkupPointer_Unposition_Proxy( 
    IMarkupPointer * This);


void __RPC_STUB IMarkupPointer_Unposition_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IMarkupPointer_IsPositioned_Proxy( 
    IMarkupPointer * This,
    /* [out] */ BOOL *pfPositioned);


void __RPC_STUB IMarkupPointer_IsPositioned_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IMarkupPointer_GetContainer_Proxy( 
    IMarkupPointer * This,
    /* [out] */ IMarkupContainer **ppContainer);


void __RPC_STUB IMarkupPointer_GetContainer_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IMarkupPointer_MoveAdjacentToElement_Proxy( 
    IMarkupPointer * This,
    /* [in] */ IHTMLElement *pElement,
    /* [in] */ ELEMENT_ADJACENCY eAdj);


void __RPC_STUB IMarkupPointer_MoveAdjacentToElement_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IMarkupPointer_MoveToPointer_Proxy( 
    IMarkupPointer * This,
    /* [in] */ IMarkupPointer *pPointer);


void __RPC_STUB IMarkupPointer_MoveToPointer_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IMarkupPointer_MoveToContainer_Proxy( 
    IMarkupPointer * This,
    /* [in] */ IMarkupContainer *pContainer,
    /* [in] */ BOOL fAtStart);


void __RPC_STUB IMarkupPointer_MoveToContainer_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IMarkupPointer_Left_Proxy( 
    IMarkupPointer * This,
    /* [in] */ BOOL fMove,
    /* [out] */ MARKUP_CONTEXT_TYPE *pContext,
    /* [out] */ IHTMLElement **ppElement,
    /* [out][in] */ long *pcch,
    /* [out] */ OLECHAR *pchText);


void __RPC_STUB IMarkupPointer_Left_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IMarkupPointer_Right_Proxy( 
    IMarkupPointer * This,
    /* [in] */ BOOL fMove,
    /* [out] */ MARKUP_CONTEXT_TYPE *pContext,
    /* [out] */ IHTMLElement **ppElement,
    /* [out][in] */ long *pcch,
    /* [out] */ OLECHAR *pchText);


void __RPC_STUB IMarkupPointer_Right_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IMarkupPointer_CurrentScope_Proxy( 
    IMarkupPointer * This,
    /* [out] */ IHTMLElement **ppElemCurrent);


void __RPC_STUB IMarkupPointer_CurrentScope_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IMarkupPointer_IsLeftOf_Proxy( 
    IMarkupPointer * This,
    /* [in] */ IMarkupPointer *pPointerThat,
    /* [out] */ BOOL *pfResult);


void __RPC_STUB IMarkupPointer_IsLeftOf_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IMarkupPointer_IsLeftOfOrEqualTo_Proxy( 
    IMarkupPointer * This,
    /* [in] */ IMarkupPointer *pPointerThat,
    /* [out] */ BOOL *pfResult);


void __RPC_STUB IMarkupPointer_IsLeftOfOrEqualTo_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IMarkupPointer_IsRightOf_Proxy( 
    IMarkupPointer * This,
    /* [in] */ IMarkupPointer *pPointerThat,
    /* [out] */ BOOL *pfResult);


void __RPC_STUB IMarkupPointer_IsRightOf_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IMarkupPointer_IsRightOfOrEqualTo_Proxy( 
    IMarkupPointer * This,
    /* [in] */ IMarkupPointer *pPointerThat,
    /* [out] */ BOOL *pfResult);


void __RPC_STUB IMarkupPointer_IsRightOfOrEqualTo_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IMarkupPointer_IsEqualTo_Proxy( 
    IMarkupPointer * This,
    /* [in] */ IMarkupPointer *pPointerThat,
    /* [out] */ BOOL *pfAreEqual);


void __RPC_STUB IMarkupPointer_IsEqualTo_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IMarkupPointer_MoveUnit_Proxy( 
    IMarkupPointer * This,
    /* [in] */ MOVEUNIT_ACTION muAction);


void __RPC_STUB IMarkupPointer_MoveUnit_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IMarkupPointer_FindText_Proxy( 
    IMarkupPointer * This,
    /* [in] */ OLECHAR *pchFindText,
    /* [in] */ DWORD dwFlags,
    /* [in] */ IMarkupPointer *pIEndMatch,
    /* [in] */ IMarkupPointer *pIEndSearch);


void __RPC_STUB IMarkupPointer_FindText_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IMarkupPointer_INTERFACE_DEFINED__ */


#ifndef __IMarkupContainer_INTERFACE_DEFINED__
#define __IMarkupContainer_INTERFACE_DEFINED__

/* interface IMarkupContainer */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_IMarkupContainer;

    
    MIDL_INTERFACE("3050f5f9-98b5-11cf-bb82-00aa00bdce0b")
    IMarkupContainer : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE OwningDoc( 
            /* [out] */ IHTMLDocument2 **ppDoc) = 0;
        
    };
    



HRESULT STDMETHODCALLTYPE IMarkupContainer_OwningDoc_Proxy( 
    IMarkupContainer * This,
    /* [out] */ IHTMLDocument2 **ppDoc);


void __RPC_STUB IMarkupContainer_OwningDoc_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IMarkupContainer_INTERFACE_DEFINED__ */


#ifndef __IMarkupContainer2_INTERFACE_DEFINED__
#define __IMarkupContainer2_INTERFACE_DEFINED__

/* interface IMarkupContainer2 */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_IMarkupContainer2;

    
    MIDL_INTERFACE("3050f648-98b5-11cf-bb82-00aa00bdce0b")
    IMarkupContainer2 : public IMarkupContainer
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE CreateChangeLog( 
            /* [in] */ IHTMLChangeSink *pChangeSink,
            /* [out] */ IHTMLChangeLog **ppChangeLog,
            /* [in] */ BOOL fForward,
            /* [in] */ BOOL fBackward) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RegisterForDirtyRange( 
            /* [in] */ IHTMLChangeSink *pChangeSink,
            /* [out] */ DWORD *pdwCookie) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE UnRegisterForDirtyRange( 
            /* [in] */ DWORD dwCookie) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetAndClearDirtyRange( 
            /* [in] */ DWORD dwCookie,
            /* [in] */ IMarkupPointer *pIPointerBegin,
            /* [in] */ IMarkupPointer *pIPointerEnd) = 0;
        
        virtual long STDMETHODCALLTYPE GetVersionNumber( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMasterElement( 
            /* [out] */ IHTMLElement **ppElementMaster) = 0;
        
    };
    



HRESULT STDMETHODCALLTYPE IMarkupContainer2_CreateChangeLog_Proxy( 
    IMarkupContainer2 * This,
    /* [in] */ IHTMLChangeSink *pChangeSink,
    /* [out] */ IHTMLChangeLog **ppChangeLog,
    /* [in] */ BOOL fForward,
    /* [in] */ BOOL fBackward);


void __RPC_STUB IMarkupContainer2_CreateChangeLog_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IMarkupContainer2_RegisterForDirtyRange_Proxy( 
    IMarkupContainer2 * This,
    /* [in] */ IHTMLChangeSink *pChangeSink,
    /* [out] */ DWORD *pdwCookie);


void __RPC_STUB IMarkupContainer2_RegisterForDirtyRange_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IMarkupContainer2_UnRegisterForDirtyRange_Proxy( 
    IMarkupContainer2 * This,
    /* [in] */ DWORD dwCookie);


void __RPC_STUB IMarkupContainer2_UnRegisterForDirtyRange_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IMarkupContainer2_GetAndClearDirtyRange_Proxy( 
    IMarkupContainer2 * This,
    /* [in] */ DWORD dwCookie,
    /* [in] */ IMarkupPointer *pIPointerBegin,
    /* [in] */ IMarkupPointer *pIPointerEnd);


void __RPC_STUB IMarkupContainer2_GetAndClearDirtyRange_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


long STDMETHODCALLTYPE IMarkupContainer2_GetVersionNumber_Proxy( 
    IMarkupContainer2 * This);


void __RPC_STUB IMarkupContainer2_GetVersionNumber_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IMarkupContainer2_GetMasterElement_Proxy( 
    IMarkupContainer2 * This,
    /* [out] */ IHTMLElement **ppElementMaster);


void __RPC_STUB IMarkupContainer2_GetMasterElement_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IMarkupContainer2_INTERFACE_DEFINED__ */


#ifndef __IHTMLChangeLog_INTERFACE_DEFINED__
#define __IHTMLChangeLog_INTERFACE_DEFINED__

/* interface IHTMLChangeLog */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_IHTMLChangeLog;

    
    MIDL_INTERFACE("3050f649-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLChangeLog : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetNextChange( 
            /* [in] */ BYTE *pbBuffer,
            /* [in] */ long nBufferSize,
            /* [out] */ long *pnRecordLength) = 0;
        
    };
    



HRESULT STDMETHODCALLTYPE IHTMLChangeLog_GetNextChange_Proxy( 
    IHTMLChangeLog * This,
    /* [in] */ BYTE *pbBuffer,
    /* [in] */ long nBufferSize,
    /* [out] */ long *pnRecordLength);


void __RPC_STUB IHTMLChangeLog_GetNextChange_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLChangeLog_INTERFACE_DEFINED__ */


#ifndef __IHTMLChangeSink_INTERFACE_DEFINED__
#define __IHTMLChangeSink_INTERFACE_DEFINED__

/* interface IHTMLChangeSink */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_IHTMLChangeSink;

    
    MIDL_INTERFACE("3050f64a-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLChangeSink : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Notify( void) = 0;
        
    };
    



HRESULT STDMETHODCALLTYPE IHTMLChangeSink_Notify_Proxy( 
    IHTMLChangeSink * This);


void __RPC_STUB IHTMLChangeSink_Notify_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLChangeSink_INTERFACE_DEFINED__ */


#ifndef __IActiveIMMApp_INTERFACE_DEFINED__
#define __IActiveIMMApp_INTERFACE_DEFINED__

/* interface IActiveIMMApp */
/* [unique][uuid][object] */ 


EXTERN_C const IID IID_IActiveIMMApp;

    
    MIDL_INTERFACE("08c0e040-62d1-11d1-9326-0060b067b86e")
    IActiveIMMApp : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE AssociateContext( 
            /* [in] */ HWND hWnd,
            /* [in] */ HIMC hIME,
            /* [out] */ HIMC *phPrev) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ConfigureIMEA( 
            /* [in] */ HKL hKL,
            /* [in] */ HWND hWnd,
            /* [in] */ DWORD dwMode,
            /* [in] */ REGISTERWORDA *pData) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ConfigureIMEW( 
            /* [in] */ HKL hKL,
            /* [in] */ HWND hWnd,
            /* [in] */ DWORD dwMode,
            /* [in] */ REGISTERWORDW *pData) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CreateContext( 
            /* [out] */ HIMC *phIMC) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DestroyContext( 
            /* [in] */ HIMC hIME) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE EnumRegisterWordA( 
            /* [in] */ HKL hKL,
            /* [in] */ LPSTR szReading,
            /* [in] */ DWORD dwStyle,
            /* [in] */ LPSTR szRegister,
            /* [in] */ LPVOID pData,
            /* [out] */ IEnumRegisterWordA **pEnum) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE EnumRegisterWordW( 
            /* [in] */ HKL hKL,
            /* [in] */ LPWSTR szReading,
            /* [in] */ DWORD dwStyle,
            /* [in] */ LPWSTR szRegister,
            /* [in] */ LPVOID pData,
            /* [out] */ IEnumRegisterWordW **pEnum) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE EscapeA( 
            /* [in] */ HKL hKL,
            /* [in] */ HIMC hIMC,
            /* [in] */ UINT uEscape,
            /* [out][in] */ LPVOID pData,
            /* [out] */ LRESULT *plResult) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE EscapeW( 
            /* [in] */ HKL hKL,
            /* [in] */ HIMC hIMC,
            /* [in] */ UINT uEscape,
            /* [out][in] */ LPVOID pData,
            /* [out] */ LRESULT *plResult) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCandidateListA( 
            /* [in] */ HIMC hIMC,
            /* [in] */ DWORD dwIndex,
            /* [in] */ UINT uBufLen,
            /* [out] */ CANDIDATELIST *pCandList,
            /* [out] */ UINT *puCopied) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCandidateListW( 
            /* [in] */ HIMC hIMC,
            /* [in] */ DWORD dwIndex,
            /* [in] */ UINT uBufLen,
            /* [out] */ CANDIDATELIST *pCandList,
            /* [out] */ UINT *puCopied) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCandidateListCountA( 
            /* [in] */ HIMC hIMC,
            /* [out] */ DWORD *pdwListSize,
            /* [out] */ DWORD *pdwBufLen) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCandidateListCountW( 
            /* [in] */ HIMC hIMC,
            /* [out] */ DWORD *pdwListSize,
            /* [out] */ DWORD *pdwBufLen) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCandidateWindow( 
            /* [in] */ HIMC hIMC,
            /* [in] */ DWORD dwIndex,
            /* [out] */ CANDIDATEFORM *pCandidate) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCompositionFontA( 
            /* [in] */ HIMC hIMC,
            /* [out] */ LOGFONTA *plf) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCompositionFontW( 
            /* [in] */ HIMC hIMC,
            /* [out] */ LOGFONTW *plf) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCompositionStringA( 
            /* [in] */ HIMC hIMC,
            /* [in] */ DWORD dwIndex,
            /* [in] */ DWORD dwBufLen,
            /* [out] */ LONG *plCopied,
            /* [out] */ LPVOID pBuf) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCompositionStringW( 
            /* [in] */ HIMC hIMC,
            /* [in] */ DWORD dwIndex,
            /* [in] */ DWORD dwBufLen,
            /* [out] */ LONG *plCopied,
            /* [out] */ LPVOID pBuf) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCompositionWindow( 
            /* [in] */ HIMC hIMC,
            /* [out] */ COMPOSITIONFORM *pCompForm) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetContext( 
            /* [in] */ HWND hWnd,
            /* [out] */ HIMC *phIMC) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetConversionListA( 
            /* [in] */ HKL hKL,
            /* [in] */ HIMC hIMC,
            /* [in] */ LPSTR pSrc,
            /* [in] */ UINT uBufLen,
            /* [in] */ UINT uFlag,
            /* [out] */ CANDIDATELIST *pDst,
            /* [out] */ UINT *puCopied) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetConversionListW( 
            /* [in] */ HKL hKL,
            /* [in] */ HIMC hIMC,
            /* [in] */ LPWSTR pSrc,
            /* [in] */ UINT uBufLen,
            /* [in] */ UINT uFlag,
            /* [out] */ CANDIDATELIST *pDst,
            /* [out] */ UINT *puCopied) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetConversionStatus( 
            /* [in] */ HIMC hIMC,
            /* [out] */ DWORD *pfdwConversion,
            /* [out] */ DWORD *pfdwSentence) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetDefaultIMEWnd( 
            /* [in] */ HWND hWnd,
            /* [out] */ HWND *phDefWnd) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetDescriptionA( 
            /* [in] */ HKL hKL,
            /* [in] */ UINT uBufLen,
            /* [out] */ LPSTR szDescription,
            /* [out] */ UINT *puCopied) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetDescriptionW( 
            /* [in] */ HKL hKL,
            /* [in] */ UINT uBufLen,
            /* [out] */ LPWSTR szDescription,
            /* [out] */ UINT *puCopied) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetGuideLineA( 
            /* [in] */ HIMC hIMC,
            /* [in] */ DWORD dwIndex,
            /* [in] */ DWORD dwBufLen,
            /* [out] */ LPSTR pBuf,
            /* [out] */ DWORD *pdwResult) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetGuideLineW( 
            /* [in] */ HIMC hIMC,
            /* [in] */ DWORD dwIndex,
            /* [in] */ DWORD dwBufLen,
            /* [out] */ LPWSTR pBuf,
            /* [out] */ DWORD *pdwResult) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetIMEFileNameA( 
            /* [in] */ HKL hKL,
            /* [in] */ UINT uBufLen,
            /* [out] */ LPSTR szFileName,
            /* [out] */ UINT *puCopied) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetIMEFileNameW( 
            /* [in] */ HKL hKL,
            /* [in] */ UINT uBufLen,
            /* [out] */ LPWSTR szFileName,
            /* [out] */ UINT *puCopied) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetOpenStatus( 
            /* [in] */ HIMC hIMC) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetProperty( 
            /* [in] */ HKL hKL,
            /* [in] */ DWORD fdwIndex,
            /* [out] */ DWORD *pdwProperty) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetRegisterWordStyleA( 
            /* [in] */ HKL hKL,
            /* [in] */ UINT nItem,
            /* [out] */ STYLEBUFA *pStyleBuf,
            /* [out] */ UINT *puCopied) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetRegisterWordStyleW( 
            /* [in] */ HKL hKL,
            /* [in] */ UINT nItem,
            /* [out] */ STYLEBUFW *pStyleBuf,
            /* [out] */ UINT *puCopied) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetStatusWindowPos( 
            /* [in] */ HIMC hIMC,
            /* [out] */ POINT *pptPos) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetVirtualKey( 
            /* [in] */ HWND hWnd,
            /* [out] */ UINT *puVirtualKey) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE InstallIMEA( 
            /* [in] */ LPSTR szIMEFileName,
            /* [in] */ LPSTR szLayoutText,
            /* [out] */ HKL *phKL) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE InstallIMEW( 
            /* [in] */ LPWSTR szIMEFileName,
            /* [in] */ LPWSTR szLayoutText,
            /* [out] */ HKL *phKL) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IsIME( 
            /* [in] */ HKL hKL) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IsUIMessageA( 
            /* [in] */ HWND hWndIME,
            /* [in] */ UINT msg,
            /* [in] */ WPARAM wParam,
            /* [in] */ LPARAM lParam) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IsUIMessageW( 
            /* [in] */ HWND hWndIME,
            /* [in] */ UINT msg,
            /* [in] */ WPARAM wParam,
            /* [in] */ LPARAM lParam) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE NotifyIME( 
            /* [in] */ HIMC hIMC,
            /* [in] */ DWORD dwAction,
            /* [in] */ DWORD dwIndex,
            /* [in] */ DWORD dwValue) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RegisterWordA( 
            /* [in] */ HKL hKL,
            /* [in] */ LPSTR szReading,
            /* [in] */ DWORD dwStyle,
            /* [in] */ LPSTR szRegister) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RegisterWordW( 
            /* [in] */ HKL hKL,
            /* [in] */ LPWSTR szReading,
            /* [in] */ DWORD dwStyle,
            /* [in] */ LPWSTR szRegister) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ReleaseContext( 
            /* [in] */ HWND hWnd,
            /* [in] */ HIMC hIMC) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetCandidateWindow( 
            /* [in] */ HIMC hIMC,
            /* [in] */ CANDIDATEFORM *pCandidate) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetCompositionFontA( 
            /* [in] */ HIMC hIMC,
            /* [in] */ LOGFONTA *plf) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetCompositionFontW( 
            /* [in] */ HIMC hIMC,
            /* [in] */ LOGFONTW *plf) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetCompositionStringA( 
            /* [in] */ HIMC hIMC,
            /* [in] */ DWORD dwIndex,
            /* [in] */ LPVOID pComp,
            /* [in] */ DWORD dwCompLen,
            /* [in] */ LPVOID pRead,
            /* [in] */ DWORD dwReadLen) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetCompositionStringW( 
            /* [in] */ HIMC hIMC,
            /* [in] */ DWORD dwIndex,
            /* [in] */ LPVOID pComp,
            /* [in] */ DWORD dwCompLen,
            /* [in] */ LPVOID pRead,
            /* [in] */ DWORD dwReadLen) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetCompositionWindow( 
            /* [in] */ HIMC hIMC,
            /* [in] */ COMPOSITIONFORM *pCompForm) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetConversionStatus( 
            /* [in] */ HIMC hIMC,
            /* [in] */ DWORD fdwConversion,
            /* [in] */ DWORD fdwSentence) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetOpenStatus( 
            /* [in] */ HIMC hIMC,
            /* [in] */ BOOL fOpen) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetStatusWindowPos( 
            /* [in] */ HIMC hIMC,
            /* [in] */ POINT *pptPos) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SimulateHotKey( 
            /* [in] */ HWND hWnd,
            /* [in] */ DWORD dwHotKeyID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE UnregisterWordA( 
            /* [in] */ HKL hKL,
            /* [in] */ LPSTR szReading,
            /* [in] */ DWORD dwStyle,
            /* [in] */ LPSTR szUnregister) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE UnregisterWordW( 
            /* [in] */ HKL hKL,
            /* [in] */ LPWSTR szReading,
            /* [in] */ DWORD dwStyle,
            /* [in] */ LPWSTR szUnregister) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Activate( 
            /* [in] */ BOOL fRestoreLayout) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Deactivate( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OnDefWindowProc( 
            /* [in] */ HWND hWnd,
            /* [in] */ UINT Msg,
            /* [in] */ WPARAM wParam,
            /* [in] */ LPARAM lParam,
            /* [out] */ LRESULT *plResult) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE FilterClientWindows( 
            /* [in] */ ATOM *aaClassList,
            /* [in] */ UINT uSize) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCodePageA( 
            /* [in] */ HKL hKL,
            /* [out] */ UINT *uCodePage) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetLangId( 
            /* [in] */ HKL hKL,
            /* [out] */ LANGID *plid) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AssociateContextEx( 
            /* [in] */ HWND hWnd,
            /* [in] */ HIMC hIMC,
            /* [in] */ DWORD dwFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE DisableIME( 
            /* [in] */ DWORD idThread) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetImeMenuItemsA( 
            /* [in] */ HIMC hIMC,
            /* [in] */ DWORD dwFlags,
            /* [in] */ DWORD dwType,
            /* [in] */ IMEMENUITEMINFOA *pImeParentMenu,
            /* [out] */ IMEMENUITEMINFOA *pImeMenu,
            /* [in] */ DWORD dwSize,
            /* [out] */ DWORD *pdwResult) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetImeMenuItemsW( 
            /* [in] */ HIMC hIMC,
            /* [in] */ DWORD dwFlags,
            /* [in] */ DWORD dwType,
            /* [in] */ IMEMENUITEMINFOW *pImeParentMenu,
            /* [out] */ IMEMENUITEMINFOW *pImeMenu,
            /* [in] */ DWORD dwSize,
            /* [out] */ DWORD *pdwResult) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE EnumInputContext( 
            /* [in] */ DWORD idThread,
            /* [out] */ IEnumInputContext **ppEnum) = 0;
        
    };
    



HRESULT STDMETHODCALLTYPE IActiveIMMApp_AssociateContext_Proxy( 
    IActiveIMMApp * This,
    /* [in] */ HWND hWnd,
    /* [in] */ HIMC hIME,
    /* [out] */ HIMC *phPrev);


void __RPC_STUB IActiveIMMApp_AssociateContext_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IActiveIMMApp_ConfigureIMEA_Proxy( 
    IActiveIMMApp * This,
    /* [in] */ HKL hKL,
    /* [in] */ HWND hWnd,
    /* [in] */ DWORD dwMode,
    /* [in] */ REGISTERWORDA *pData);


void __RPC_STUB IActiveIMMApp_ConfigureIMEA_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IActiveIMMApp_ConfigureIMEW_Proxy( 
    IActiveIMMApp * This,
    /* [in] */ HKL hKL,
    /* [in] */ HWND hWnd,
    /* [in] */ DWORD dwMode,
    /* [in] */ REGISTERWORDW *pData);


void __RPC_STUB IActiveIMMApp_ConfigureIMEW_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IActiveIMMApp_CreateContext_Proxy( 
    IActiveIMMApp * This,
    /* [out] */ HIMC *phIMC);


void __RPC_STUB IActiveIMMApp_CreateContext_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IActiveIMMApp_DestroyContext_Proxy( 
    IActiveIMMApp * This,
    /* [in] */ HIMC hIME);


void __RPC_STUB IActiveIMMApp_DestroyContext_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IActiveIMMApp_EnumRegisterWordA_Proxy( 
    IActiveIMMApp * This,
    /* [in] */ HKL hKL,
    /* [in] */ LPSTR szReading,
    /* [in] */ DWORD dwStyle,
    /* [in] */ LPSTR szRegister,
    /* [in] */ LPVOID pData,
    /* [out] */ IEnumRegisterWordA **pEnum);


void __RPC_STUB IActiveIMMApp_EnumRegisterWordA_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IActiveIMMApp_EnumRegisterWordW_Proxy( 
    IActiveIMMApp * This,
    /* [in] */ HKL hKL,
    /* [in] */ LPWSTR szReading,
    /* [in] */ DWORD dwStyle,
    /* [in] */ LPWSTR szRegister,
    /* [in] */ LPVOID pData,
    /* [out] */ IEnumRegisterWordW **pEnum);


void __RPC_STUB IActiveIMMApp_EnumRegisterWordW_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IActiveIMMApp_EscapeA_Proxy( 
    IActiveIMMApp * This,
    /* [in] */ HKL hKL,
    /* [in] */ HIMC hIMC,
    /* [in] */ UINT uEscape,
    /* [out][in] */ LPVOID pData,
    /* [out] */ LRESULT *plResult);


void __RPC_STUB IActiveIMMApp_EscapeA_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IActiveIMMApp_EscapeW_Proxy( 
    IActiveIMMApp * This,
    /* [in] */ HKL hKL,
    /* [in] */ HIMC hIMC,
    /* [in] */ UINT uEscape,
    /* [out][in] */ LPVOID pData,
    /* [out] */ LRESULT *plResult);


void __RPC_STUB IActiveIMMApp_EscapeW_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IActiveIMMApp_GetCandidateListA_Proxy( 
    IActiveIMMApp * This,
    /* [in] */ HIMC hIMC,
    /* [in] */ DWORD dwIndex,
    /* [in] */ UINT uBufLen,
    /* [out] */ CANDIDATELIST *pCandList,
    /* [out] */ UINT *puCopied);


void __RPC_STUB IActiveIMMApp_GetCandidateListA_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IActiveIMMApp_GetCandidateListW_Proxy( 
    IActiveIMMApp * This,
    /* [in] */ HIMC hIMC,
    /* [in] */ DWORD dwIndex,
    /* [in] */ UINT uBufLen,
    /* [out] */ CANDIDATELIST *pCandList,
    /* [out] */ UINT *puCopied);


void __RPC_STUB IActiveIMMApp_GetCandidateListW_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IActiveIMMApp_GetCandidateListCountA_Proxy( 
    IActiveIMMApp * This,
    /* [in] */ HIMC hIMC,
    /* [out] */ DWORD *pdwListSize,
    /* [out] */ DWORD *pdwBufLen);


void __RPC_STUB IActiveIMMApp_GetCandidateListCountA_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IActiveIMMApp_GetCandidateListCountW_Proxy( 
    IActiveIMMApp * This,
    /* [in] */ HIMC hIMC,
    /* [out] */ DWORD *pdwListSize,
    /* [out] */ DWORD *pdwBufLen);


void __RPC_STUB IActiveIMMApp_GetCandidateListCountW_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IActiveIMMApp_GetCandidateWindow_Proxy( 
    IActiveIMMApp * This,
    /* [in] */ HIMC hIMC,
    /* [in] */ DWORD dwIndex,
    /* [out] */ CANDIDATEFORM *pCandidate);


void __RPC_STUB IActiveIMMApp_GetCandidateWindow_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IActiveIMMApp_GetCompositionFontA_Proxy( 
    IActiveIMMApp * This,
    /* [in] */ HIMC hIMC,
    /* [out] */ LOGFONTA *plf);


void __RPC_STUB IActiveIMMApp_GetCompositionFontA_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IActiveIMMApp_GetCompositionFontW_Proxy( 
    IActiveIMMApp * This,
    /* [in] */ HIMC hIMC,
    /* [out] */ LOGFONTW *plf);


void __RPC_STUB IActiveIMMApp_GetCompositionFontW_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IActiveIMMApp_GetCompositionStringA_Proxy( 
    IActiveIMMApp * This,
    /* [in] */ HIMC hIMC,
    /* [in] */ DWORD dwIndex,
    /* [in] */ DWORD dwBufLen,
    /* [out] */ LONG *plCopied,
    /* [out] */ LPVOID pBuf);


void __RPC_STUB IActiveIMMApp_GetCompositionStringA_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IActiveIMMApp_GetCompositionStringW_Proxy( 
    IActiveIMMApp * This,
    /* [in] */ HIMC hIMC,
    /* [in] */ DWORD dwIndex,
    /* [in] */ DWORD dwBufLen,
    /* [out] */ LONG *plCopied,
    /* [out] */ LPVOID pBuf);


void __RPC_STUB IActiveIMMApp_GetCompositionStringW_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IActiveIMMApp_GetCompositionWindow_Proxy( 
    IActiveIMMApp * This,
    /* [in] */ HIMC hIMC,
    /* [out] */ COMPOSITIONFORM *pCompForm);


void __RPC_STUB IActiveIMMApp_GetCompositionWindow_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IActiveIMMApp_GetContext_Proxy( 
    IActiveIMMApp * This,
    /* [in] */ HWND hWnd,
    /* [out] */ HIMC *phIMC);


void __RPC_STUB IActiveIMMApp_GetContext_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IActiveIMMApp_GetConversionListA_Proxy( 
    IActiveIMMApp * This,
    /* [in] */ HKL hKL,
    /* [in] */ HIMC hIMC,
    /* [in] */ LPSTR pSrc,
    /* [in] */ UINT uBufLen,
    /* [in] */ UINT uFlag,
    /* [out] */ CANDIDATELIST *pDst,
    /* [out] */ UINT *puCopied);


void __RPC_STUB IActiveIMMApp_GetConversionListA_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IActiveIMMApp_GetConversionListW_Proxy( 
    IActiveIMMApp * This,
    /* [in] */ HKL hKL,
    /* [in] */ HIMC hIMC,
    /* [in] */ LPWSTR pSrc,
    /* [in] */ UINT uBufLen,
    /* [in] */ UINT uFlag,
    /* [out] */ CANDIDATELIST *pDst,
    /* [out] */ UINT *puCopied);


void __RPC_STUB IActiveIMMApp_GetConversionListW_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IActiveIMMApp_GetConversionStatus_Proxy( 
    IActiveIMMApp * This,
    /* [in] */ HIMC hIMC,
    /* [out] */ DWORD *pfdwConversion,
    /* [out] */ DWORD *pfdwSentence);


void __RPC_STUB IActiveIMMApp_GetConversionStatus_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IActiveIMMApp_GetDefaultIMEWnd_Proxy( 
    IActiveIMMApp * This,
    /* [in] */ HWND hWnd,
    /* [out] */ HWND *phDefWnd);


void __RPC_STUB IActiveIMMApp_GetDefaultIMEWnd_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IActiveIMMApp_GetDescriptionA_Proxy( 
    IActiveIMMApp * This,
    /* [in] */ HKL hKL,
    /* [in] */ UINT uBufLen,
    /* [out] */ LPSTR szDescription,
    /* [out] */ UINT *puCopied);


void __RPC_STUB IActiveIMMApp_GetDescriptionA_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IActiveIMMApp_GetDescriptionW_Proxy( 
    IActiveIMMApp * This,
    /* [in] */ HKL hKL,
    /* [in] */ UINT uBufLen,
    /* [out] */ LPWSTR szDescription,
    /* [out] */ UINT *puCopied);


void __RPC_STUB IActiveIMMApp_GetDescriptionW_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IActiveIMMApp_GetGuideLineA_Proxy( 
    IActiveIMMApp * This,
    /* [in] */ HIMC hIMC,
    /* [in] */ DWORD dwIndex,
    /* [in] */ DWORD dwBufLen,
    /* [out] */ LPSTR pBuf,
    /* [out] */ DWORD *pdwResult);


void __RPC_STUB IActiveIMMApp_GetGuideLineA_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IActiveIMMApp_GetGuideLineW_Proxy( 
    IActiveIMMApp * This,
    /* [in] */ HIMC hIMC,
    /* [in] */ DWORD dwIndex,
    /* [in] */ DWORD dwBufLen,
    /* [out] */ LPWSTR pBuf,
    /* [out] */ DWORD *pdwResult);


void __RPC_STUB IActiveIMMApp_GetGuideLineW_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IActiveIMMApp_GetIMEFileNameA_Proxy( 
    IActiveIMMApp * This,
    /* [in] */ HKL hKL,
    /* [in] */ UINT uBufLen,
    /* [out] */ LPSTR szFileName,
    /* [out] */ UINT *puCopied);


void __RPC_STUB IActiveIMMApp_GetIMEFileNameA_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IActiveIMMApp_GetIMEFileNameW_Proxy( 
    IActiveIMMApp * This,
    /* [in] */ HKL hKL,
    /* [in] */ UINT uBufLen,
    /* [out] */ LPWSTR szFileName,
    /* [out] */ UINT *puCopied);


void __RPC_STUB IActiveIMMApp_GetIMEFileNameW_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IActiveIMMApp_GetOpenStatus_Proxy( 
    IActiveIMMApp * This,
    /* [in] */ HIMC hIMC);


void __RPC_STUB IActiveIMMApp_GetOpenStatus_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IActiveIMMApp_GetProperty_Proxy( 
    IActiveIMMApp * This,
    /* [in] */ HKL hKL,
    /* [in] */ DWORD fdwIndex,
    /* [out] */ DWORD *pdwProperty);


void __RPC_STUB IActiveIMMApp_GetProperty_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IActiveIMMApp_GetRegisterWordStyleA_Proxy( 
    IActiveIMMApp * This,
    /* [in] */ HKL hKL,
    /* [in] */ UINT nItem,
    /* [out] */ STYLEBUFA *pStyleBuf,
    /* [out] */ UINT *puCopied);


void __RPC_STUB IActiveIMMApp_GetRegisterWordStyleA_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IActiveIMMApp_GetRegisterWordStyleW_Proxy( 
    IActiveIMMApp * This,
    /* [in] */ HKL hKL,
    /* [in] */ UINT nItem,
    /* [out] */ STYLEBUFW *pStyleBuf,
    /* [out] */ UINT *puCopied);


void __RPC_STUB IActiveIMMApp_GetRegisterWordStyleW_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IActiveIMMApp_GetStatusWindowPos_Proxy( 
    IActiveIMMApp * This,
    /* [in] */ HIMC hIMC,
    /* [out] */ POINT *pptPos);


void __RPC_STUB IActiveIMMApp_GetStatusWindowPos_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IActiveIMMApp_GetVirtualKey_Proxy( 
    IActiveIMMApp * This,
    /* [in] */ HWND hWnd,
    /* [out] */ UINT *puVirtualKey);


void __RPC_STUB IActiveIMMApp_GetVirtualKey_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IActiveIMMApp_InstallIMEA_Proxy( 
    IActiveIMMApp * This,
    /* [in] */ LPSTR szIMEFileName,
    /* [in] */ LPSTR szLayoutText,
    /* [out] */ HKL *phKL);


void __RPC_STUB IActiveIMMApp_InstallIMEA_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IActiveIMMApp_InstallIMEW_Proxy( 
    IActiveIMMApp * This,
    /* [in] */ LPWSTR szIMEFileName,
    /* [in] */ LPWSTR szLayoutText,
    /* [out] */ HKL *phKL);


void __RPC_STUB IActiveIMMApp_InstallIMEW_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IActiveIMMApp_IsIME_Proxy( 
    IActiveIMMApp * This,
    /* [in] */ HKL hKL);


void __RPC_STUB IActiveIMMApp_IsIME_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IActiveIMMApp_IsUIMessageA_Proxy( 
    IActiveIMMApp * This,
    /* [in] */ HWND hWndIME,
    /* [in] */ UINT msg,
    /* [in] */ WPARAM wParam,
    /* [in] */ LPARAM lParam);


void __RPC_STUB IActiveIMMApp_IsUIMessageA_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IActiveIMMApp_IsUIMessageW_Proxy( 
    IActiveIMMApp * This,
    /* [in] */ HWND hWndIME,
    /* [in] */ UINT msg,
    /* [in] */ WPARAM wParam,
    /* [in] */ LPARAM lParam);


void __RPC_STUB IActiveIMMApp_IsUIMessageW_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IActiveIMMApp_NotifyIME_Proxy( 
    IActiveIMMApp * This,
    /* [in] */ HIMC hIMC,
    /* [in] */ DWORD dwAction,
    /* [in] */ DWORD dwIndex,
    /* [in] */ DWORD dwValue);


void __RPC_STUB IActiveIMMApp_NotifyIME_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IActiveIMMApp_RegisterWordA_Proxy( 
    IActiveIMMApp * This,
    /* [in] */ HKL hKL,
    /* [in] */ LPSTR szReading,
    /* [in] */ DWORD dwStyle,
    /* [in] */ LPSTR szRegister);


void __RPC_STUB IActiveIMMApp_RegisterWordA_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IActiveIMMApp_RegisterWordW_Proxy( 
    IActiveIMMApp * This,
    /* [in] */ HKL hKL,
    /* [in] */ LPWSTR szReading,
    /* [in] */ DWORD dwStyle,
    /* [in] */ LPWSTR szRegister);


void __RPC_STUB IActiveIMMApp_RegisterWordW_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IActiveIMMApp_ReleaseContext_Proxy( 
    IActiveIMMApp * This,
    /* [in] */ HWND hWnd,
    /* [in] */ HIMC hIMC);


void __RPC_STUB IActiveIMMApp_ReleaseContext_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IActiveIMMApp_SetCandidateWindow_Proxy( 
    IActiveIMMApp * This,
    /* [in] */ HIMC hIMC,
    /* [in] */ CANDIDATEFORM *pCandidate);


void __RPC_STUB IActiveIMMApp_SetCandidateWindow_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IActiveIMMApp_SetCompositionFontA_Proxy( 
    IActiveIMMApp * This,
    /* [in] */ HIMC hIMC,
    /* [in] */ LOGFONTA *plf);


void __RPC_STUB IActiveIMMApp_SetCompositionFontA_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IActiveIMMApp_SetCompositionFontW_Proxy( 
    IActiveIMMApp * This,
    /* [in] */ HIMC hIMC,
    /* [in] */ LOGFONTW *plf);


void __RPC_STUB IActiveIMMApp_SetCompositionFontW_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IActiveIMMApp_SetCompositionStringA_Proxy( 
    IActiveIMMApp * This,
    /* [in] */ HIMC hIMC,
    /* [in] */ DWORD dwIndex,
    /* [in] */ LPVOID pComp,
    /* [in] */ DWORD dwCompLen,
    /* [in] */ LPVOID pRead,
    /* [in] */ DWORD dwReadLen);


void __RPC_STUB IActiveIMMApp_SetCompositionStringA_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IActiveIMMApp_SetCompositionStringW_Proxy( 
    IActiveIMMApp * This,
    /* [in] */ HIMC hIMC,
    /* [in] */ DWORD dwIndex,
    /* [in] */ LPVOID pComp,
    /* [in] */ DWORD dwCompLen,
    /* [in] */ LPVOID pRead,
    /* [in] */ DWORD dwReadLen);


void __RPC_STUB IActiveIMMApp_SetCompositionStringW_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IActiveIMMApp_SetCompositionWindow_Proxy( 
    IActiveIMMApp * This,
    /* [in] */ HIMC hIMC,
    /* [in] */ COMPOSITIONFORM *pCompForm);


void __RPC_STUB IActiveIMMApp_SetCompositionWindow_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IActiveIMMApp_SetConversionStatus_Proxy( 
    IActiveIMMApp * This,
    /* [in] */ HIMC hIMC,
    /* [in] */ DWORD fdwConversion,
    /* [in] */ DWORD fdwSentence);


void __RPC_STUB IActiveIMMApp_SetConversionStatus_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IActiveIMMApp_SetOpenStatus_Proxy( 
    IActiveIMMApp * This,
    /* [in] */ HIMC hIMC,
    /* [in] */ BOOL fOpen);


void __RPC_STUB IActiveIMMApp_SetOpenStatus_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IActiveIMMApp_SetStatusWindowPos_Proxy( 
    IActiveIMMApp * This,
    /* [in] */ HIMC hIMC,
    /* [in] */ POINT *pptPos);


void __RPC_STUB IActiveIMMApp_SetStatusWindowPos_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IActiveIMMApp_SimulateHotKey_Proxy( 
    IActiveIMMApp * This,
    /* [in] */ HWND hWnd,
    /* [in] */ DWORD dwHotKeyID);


void __RPC_STUB IActiveIMMApp_SimulateHotKey_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IActiveIMMApp_UnregisterWordA_Proxy( 
    IActiveIMMApp * This,
    /* [in] */ HKL hKL,
    /* [in] */ LPSTR szReading,
    /* [in] */ DWORD dwStyle,
    /* [in] */ LPSTR szUnregister);


void __RPC_STUB IActiveIMMApp_UnregisterWordA_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IActiveIMMApp_UnregisterWordW_Proxy( 
    IActiveIMMApp * This,
    /* [in] */ HKL hKL,
    /* [in] */ LPWSTR szReading,
    /* [in] */ DWORD dwStyle,
    /* [in] */ LPWSTR szUnregister);


void __RPC_STUB IActiveIMMApp_UnregisterWordW_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IActiveIMMApp_Activate_Proxy( 
    IActiveIMMApp * This,
    /* [in] */ BOOL fRestoreLayout);


void __RPC_STUB IActiveIMMApp_Activate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IActiveIMMApp_Deactivate_Proxy( 
    IActiveIMMApp * This);


void __RPC_STUB IActiveIMMApp_Deactivate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IActiveIMMApp_OnDefWindowProc_Proxy( 
    IActiveIMMApp * This,
    /* [in] */ HWND hWnd,
    /* [in] */ UINT Msg,
    /* [in] */ WPARAM wParam,
    /* [in] */ LPARAM lParam,
    /* [out] */ LRESULT *plResult);


void __RPC_STUB IActiveIMMApp_OnDefWindowProc_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IActiveIMMApp_FilterClientWindows_Proxy( 
    IActiveIMMApp * This,
    /* [in] */ ATOM *aaClassList,
    /* [in] */ UINT uSize);


void __RPC_STUB IActiveIMMApp_FilterClientWindows_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IActiveIMMApp_GetCodePageA_Proxy( 
    IActiveIMMApp * This,
    /* [in] */ HKL hKL,
    /* [out] */ UINT *uCodePage);


void __RPC_STUB IActiveIMMApp_GetCodePageA_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IActiveIMMApp_GetLangId_Proxy( 
    IActiveIMMApp * This,
    /* [in] */ HKL hKL,
    /* [out] */ LANGID *plid);


void __RPC_STUB IActiveIMMApp_GetLangId_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IActiveIMMApp_AssociateContextEx_Proxy( 
    IActiveIMMApp * This,
    /* [in] */ HWND hWnd,
    /* [in] */ HIMC hIMC,
    /* [in] */ DWORD dwFlags);


void __RPC_STUB IActiveIMMApp_AssociateContextEx_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IActiveIMMApp_DisableIME_Proxy( 
    IActiveIMMApp * This,
    /* [in] */ DWORD idThread);


void __RPC_STUB IActiveIMMApp_DisableIME_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IActiveIMMApp_GetImeMenuItemsA_Proxy( 
    IActiveIMMApp * This,
    /* [in] */ HIMC hIMC,
    /* [in] */ DWORD dwFlags,
    /* [in] */ DWORD dwType,
    /* [in] */ IMEMENUITEMINFOA *pImeParentMenu,
    /* [out] */ IMEMENUITEMINFOA *pImeMenu,
    /* [in] */ DWORD dwSize,
    /* [out] */ DWORD *pdwResult);


void __RPC_STUB IActiveIMMApp_GetImeMenuItemsA_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IActiveIMMApp_GetImeMenuItemsW_Proxy( 
    IActiveIMMApp * This,
    /* [in] */ HIMC hIMC,
    /* [in] */ DWORD dwFlags,
    /* [in] */ DWORD dwType,
    /* [in] */ IMEMENUITEMINFOW *pImeParentMenu,
    /* [out] */ IMEMENUITEMINFOW *pImeMenu,
    /* [in] */ DWORD dwSize,
    /* [out] */ DWORD *pdwResult);


void __RPC_STUB IActiveIMMApp_GetImeMenuItemsW_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IActiveIMMApp_EnumInputContext_Proxy( 
    IActiveIMMApp * This,
    /* [in] */ DWORD idThread,
    /* [out] */ IEnumInputContext **ppEnum);


void __RPC_STUB IActiveIMMApp_EnumInputContext_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IActiveIMMApp_INTERFACE_DEFINED__ */


#ifndef __ISegmentList_INTERFACE_DEFINED__
#define __ISegmentList_INTERFACE_DEFINED__

/* interface ISegmentList */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_ISegmentList;

    
    MIDL_INTERFACE("3050f605-98b5-11cf-bb82-00aa00bdce0b")
    ISegmentList : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE CreateIterator( 
            /* [out] */ ISegmentListIterator **ppIIter) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetType( 
            /* [out] */ SELECTION_TYPE *peType) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IsEmpty( 
            /* [out] */ BOOL *pfEmpty) = 0;
        
    };
    



HRESULT STDMETHODCALLTYPE ISegmentList_CreateIterator_Proxy( 
    ISegmentList * This,
    /* [out] */ ISegmentListIterator **ppIIter);


void __RPC_STUB ISegmentList_CreateIterator_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE ISegmentList_GetType_Proxy( 
    ISegmentList * This,
    /* [out] */ SELECTION_TYPE *peType);


void __RPC_STUB ISegmentList_GetType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE ISegmentList_IsEmpty_Proxy( 
    ISegmentList * This,
    /* [out] */ BOOL *pfEmpty);


void __RPC_STUB ISegmentList_IsEmpty_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __ISegmentList_INTERFACE_DEFINED__ */


#ifndef __ISegmentListIterator_INTERFACE_DEFINED__
#define __ISegmentListIterator_INTERFACE_DEFINED__

/* interface ISegmentListIterator */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_ISegmentListIterator;

    
    MIDL_INTERFACE("3050f692-98b5-11cf-bb82-00aa00bdce0b")
    ISegmentListIterator : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Current( 
            /* [out] */ ISegment **ppISegment) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE First( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IsDone( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Advance( void) = 0;
        
    };
    



HRESULT STDMETHODCALLTYPE ISegmentListIterator_Current_Proxy( 
    ISegmentListIterator * This,
    /* [out] */ ISegment **ppISegment);


void __RPC_STUB ISegmentListIterator_Current_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE ISegmentListIterator_First_Proxy( 
    ISegmentListIterator * This);


void __RPC_STUB ISegmentListIterator_First_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE ISegmentListIterator_IsDone_Proxy( 
    ISegmentListIterator * This);


void __RPC_STUB ISegmentListIterator_IsDone_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE ISegmentListIterator_Advance_Proxy( 
    ISegmentListIterator * This);


void __RPC_STUB ISegmentListIterator_Advance_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __ISegmentListIterator_INTERFACE_DEFINED__ */


#ifndef __IHTMLCaret_INTERFACE_DEFINED__
#define __IHTMLCaret_INTERFACE_DEFINED__

/* interface IHTMLCaret */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_IHTMLCaret;

    
    MIDL_INTERFACE("3050f604-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLCaret : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE MoveCaretToPointer( 
            /* [in] */ IDisplayPointer *pDispPointer,
            /* [in] */ BOOL fScrollIntoView,
            /* [in] */ CARET_DIRECTION eDir) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MoveCaretToPointerEx( 
            /* [in] */ IDisplayPointer *pDispPointer,
            /* [in] */ BOOL fVisible,
            /* [in] */ BOOL fScrollIntoView,
            /* [in] */ CARET_DIRECTION eDir) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MoveMarkupPointerToCaret( 
            /* [in] */ IMarkupPointer *pIMarkupPointer) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MoveDisplayPointerToCaret( 
            /* [in] */ IDisplayPointer *pDispPointer) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IsVisible( 
            /* [out] */ BOOL *pIsVisible) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Show( 
            /* [in] */ BOOL fScrollIntoView) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Hide( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE InsertText( 
            /* [in] */ OLECHAR *pText,
            /* [in] */ LONG lLen) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ScrollIntoView( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetLocation( 
            /* [out] */ POINT *pPoint,
            /* [in] */ BOOL fTranslate) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCaretDirection( 
            /* [out] */ CARET_DIRECTION *peDir) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetCaretDirection( 
            /* [in] */ CARET_DIRECTION eDir) = 0;
        
    };
    



HRESULT STDMETHODCALLTYPE IHTMLCaret_MoveCaretToPointer_Proxy( 
    IHTMLCaret * This,
    /* [in] */ IDisplayPointer *pDispPointer,
    /* [in] */ BOOL fScrollIntoView,
    /* [in] */ CARET_DIRECTION eDir);


void __RPC_STUB IHTMLCaret_MoveCaretToPointer_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IHTMLCaret_MoveCaretToPointerEx_Proxy( 
    IHTMLCaret * This,
    /* [in] */ IDisplayPointer *pDispPointer,
    /* [in] */ BOOL fVisible,
    /* [in] */ BOOL fScrollIntoView,
    /* [in] */ CARET_DIRECTION eDir);


void __RPC_STUB IHTMLCaret_MoveCaretToPointerEx_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IHTMLCaret_MoveMarkupPointerToCaret_Proxy( 
    IHTMLCaret * This,
    /* [in] */ IMarkupPointer *pIMarkupPointer);


void __RPC_STUB IHTMLCaret_MoveMarkupPointerToCaret_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IHTMLCaret_MoveDisplayPointerToCaret_Proxy( 
    IHTMLCaret * This,
    /* [in] */ IDisplayPointer *pDispPointer);


void __RPC_STUB IHTMLCaret_MoveDisplayPointerToCaret_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IHTMLCaret_IsVisible_Proxy( 
    IHTMLCaret * This,
    /* [out] */ BOOL *pIsVisible);


void __RPC_STUB IHTMLCaret_IsVisible_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IHTMLCaret_Show_Proxy( 
    IHTMLCaret * This,
    /* [in] */ BOOL fScrollIntoView);


void __RPC_STUB IHTMLCaret_Show_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IHTMLCaret_Hide_Proxy( 
    IHTMLCaret * This);


void __RPC_STUB IHTMLCaret_Hide_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IHTMLCaret_InsertText_Proxy( 
    IHTMLCaret * This,
    /* [in] */ OLECHAR *pText,
    /* [in] */ LONG lLen);


void __RPC_STUB IHTMLCaret_InsertText_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IHTMLCaret_ScrollIntoView_Proxy( 
    IHTMLCaret * This);


void __RPC_STUB IHTMLCaret_ScrollIntoView_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IHTMLCaret_GetLocation_Proxy( 
    IHTMLCaret * This,
    /* [out] */ POINT *pPoint,
    /* [in] */ BOOL fTranslate);


void __RPC_STUB IHTMLCaret_GetLocation_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IHTMLCaret_GetCaretDirection_Proxy( 
    IHTMLCaret * This,
    /* [out] */ CARET_DIRECTION *peDir);


void __RPC_STUB IHTMLCaret_GetCaretDirection_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IHTMLCaret_SetCaretDirection_Proxy( 
    IHTMLCaret * This,
    /* [in] */ CARET_DIRECTION eDir);


void __RPC_STUB IHTMLCaret_SetCaretDirection_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLCaret_INTERFACE_DEFINED__ */


#ifndef __ISegment_INTERFACE_DEFINED__
#define __ISegment_INTERFACE_DEFINED__

/* interface ISegment */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_ISegment;

    
    MIDL_INTERFACE("3050f683-98b5-11cf-bb82-00aa00bdce0b")
    ISegment : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetPointers( 
            /* [in] */ IMarkupPointer *pIStart,
            /* [in] */ IMarkupPointer *pIEnd) = 0;
        
    };
    



HRESULT STDMETHODCALLTYPE ISegment_GetPointers_Proxy( 
    ISegment * This,
    /* [in] */ IMarkupPointer *pIStart,
    /* [in] */ IMarkupPointer *pIEnd);


void __RPC_STUB ISegment_GetPointers_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __ISegment_INTERFACE_DEFINED__ */


#ifndef __IElementSegment_INTERFACE_DEFINED__
#define __IElementSegment_INTERFACE_DEFINED__

/* interface IElementSegment */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_IElementSegment;

    
    MIDL_INTERFACE("3050f68f-98b5-11cf-bb82-00aa00bdce0b")
    IElementSegment : public ISegment
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetElement( 
            /* [out] */ IHTMLElement **ppIElement) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetPrimary( 
            /* [in] */ BOOL fPrimary) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IsPrimary( 
            /* [out] */ BOOL *pfPrimary) = 0;
        
    };
    



HRESULT STDMETHODCALLTYPE IElementSegment_GetElement_Proxy( 
    IElementSegment * This,
    /* [out] */ IHTMLElement **ppIElement);


void __RPC_STUB IElementSegment_GetElement_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IElementSegment_SetPrimary_Proxy( 
    IElementSegment * This,
    /* [in] */ BOOL fPrimary);


void __RPC_STUB IElementSegment_SetPrimary_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IElementSegment_IsPrimary_Proxy( 
    IElementSegment * This,
    /* [out] */ BOOL *pfPrimary);


void __RPC_STUB IElementSegment_IsPrimary_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IElementSegment_INTERFACE_DEFINED__ */


#ifndef __IHighlightSegment_INTERFACE_DEFINED__
#define __IHighlightSegment_INTERFACE_DEFINED__

/* interface IHighlightSegment */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_IHighlightSegment;

    
    MIDL_INTERFACE("3050f690-98b5-11cf-bb82-00aa00bdce0b")
    IHighlightSegment : public ISegment
    {
    public:
    };
    




#endif 	/* __IHighlightSegment_INTERFACE_DEFINED__ */


#ifndef __IHighlightRenderingServices_INTERFACE_DEFINED__
#define __IHighlightRenderingServices_INTERFACE_DEFINED__

/* interface IHighlightRenderingServices */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_IHighlightRenderingServices;

    
    MIDL_INTERFACE("3050f606-98b5-11cf-bb82-00aa00bdce0b")
    IHighlightRenderingServices : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE AddSegment( 
            /* [in] */ IDisplayPointer *pDispPointerStart,
            /* [in] */ IDisplayPointer *pDispPointerEnd,
            /* [in] */ IHTMLRenderStyle *pIRenderStyle,
            /* [out] */ IHighlightSegment **ppISegment) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MoveSegmentToPointers( 
            /* [in] */ IHighlightSegment *pISegment,
            /* [in] */ IDisplayPointer *pDispPointerStart,
            /* [in] */ IDisplayPointer *pDispPointerEnd) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveSegment( 
            /* [in] */ IHighlightSegment *pISegment) = 0;
        
    };
    



HRESULT STDMETHODCALLTYPE IHighlightRenderingServices_AddSegment_Proxy( 
    IHighlightRenderingServices * This,
    /* [in] */ IDisplayPointer *pDispPointerStart,
    /* [in] */ IDisplayPointer *pDispPointerEnd,
    /* [in] */ IHTMLRenderStyle *pIRenderStyle,
    /* [out] */ IHighlightSegment **ppISegment);


void __RPC_STUB IHighlightRenderingServices_AddSegment_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IHighlightRenderingServices_MoveSegmentToPointers_Proxy( 
    IHighlightRenderingServices * This,
    /* [in] */ IHighlightSegment *pISegment,
    /* [in] */ IDisplayPointer *pDispPointerStart,
    /* [in] */ IDisplayPointer *pDispPointerEnd);


void __RPC_STUB IHighlightRenderingServices_MoveSegmentToPointers_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IHighlightRenderingServices_RemoveSegment_Proxy( 
    IHighlightRenderingServices * This,
    /* [in] */ IHighlightSegment *pISegment);


void __RPC_STUB IHighlightRenderingServices_RemoveSegment_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHighlightRenderingServices_INTERFACE_DEFINED__ */


#ifndef __ILineInfo_INTERFACE_DEFINED__
#define __ILineInfo_INTERFACE_DEFINED__

/* interface ILineInfo */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_ILineInfo;

    
    MIDL_INTERFACE("3050f7e2-98b5-11cf-bb82-00aa00bdce0b")
    ILineInfo : public IUnknown
    {
    public:
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_x( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_baseLine( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_textDescent( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_textHeight( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_lineDirection( 
            /* [out][retval] */ LONG *p) = 0;
        
    };
    



/* [id][propget] */ HRESULT STDMETHODCALLTYPE ILineInfo_get_x_Proxy( 
    ILineInfo * This,
    /* [out][retval] */ long *p);


void __RPC_STUB ILineInfo_get_x_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE ILineInfo_get_baseLine_Proxy( 
    ILineInfo * This,
    /* [out][retval] */ long *p);


void __RPC_STUB ILineInfo_get_baseLine_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE ILineInfo_get_textDescent_Proxy( 
    ILineInfo * This,
    /* [out][retval] */ long *p);


void __RPC_STUB ILineInfo_get_textDescent_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE ILineInfo_get_textHeight_Proxy( 
    ILineInfo * This,
    /* [out][retval] */ long *p);


void __RPC_STUB ILineInfo_get_textHeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE ILineInfo_get_lineDirection_Proxy( 
    ILineInfo * This,
    /* [out][retval] */ LONG *p);


void __RPC_STUB ILineInfo_get_lineDirection_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __ILineInfo_INTERFACE_DEFINED__ */


#ifndef __IDisplayPointer_INTERFACE_DEFINED__
#define __IDisplayPointer_INTERFACE_DEFINED__

/* interface IDisplayPointer */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_IDisplayPointer;

    
    MIDL_INTERFACE("3050f69e-98b5-11cf-bb82-00aa00bdce0b")
    IDisplayPointer : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE MoveToPoint( 
            /* [in] */ POINT ptPoint,
            /* [in] */ COORD_SYSTEM eCoordSystem,
            /* [in] */ IHTMLElement *pElementContext,
            /* [in] */ DWORD dwHitTestOptions,
            /* [out] */ DWORD *pdwHitTestResults) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MoveUnit( 
            /* [in] */ DISPLAY_MOVEUNIT eMoveUnit,
            /* [in] */ LONG lXPos) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE PositionMarkupPointer( 
            /* [in] */ IMarkupPointer *pMarkupPointer) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MoveToPointer( 
            /* [in] */ IDisplayPointer *pDispPointer) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetPointerGravity( 
            /* [in] */ POINTER_GRAVITY eGravity) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetPointerGravity( 
            /* [out] */ POINTER_GRAVITY *peGravity) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetDisplayGravity( 
            /* [in] */ DISPLAY_GRAVITY eGravity) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetDisplayGravity( 
            /* [out] */ DISPLAY_GRAVITY *peGravity) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IsPositioned( 
            /* [out] */ BOOL *pfPositioned) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Unposition( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IsEqualTo( 
            /* [in] */ IDisplayPointer *pDispPointer,
            /* [out] */ BOOL *pfIsEqual) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IsLeftOf( 
            /* [in] */ IDisplayPointer *pDispPointer,
            /* [out] */ BOOL *pfIsLeftOf) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IsRightOf( 
            /* [in] */ IDisplayPointer *pDispPointer,
            /* [out] */ BOOL *pfIsRightOf) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IsAtBOL( 
            /* [out] */ BOOL *pfBOL) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MoveToMarkupPointer( 
            /* [in] */ IMarkupPointer *pPointer,
            /* [in] */ IDisplayPointer *pDispLineContext) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ScrollIntoView( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetLineInfo( 
            /* [out] */ ILineInfo **ppLineInfo) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetFlowElement( 
            /* [out] */ IHTMLElement **ppLayoutElement) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE QueryBreaks( 
            /* [out] */ DWORD *pdwBreaks) = 0;
        
    };
    



HRESULT STDMETHODCALLTYPE IDisplayPointer_MoveToPoint_Proxy( 
    IDisplayPointer * This,
    /* [in] */ POINT ptPoint,
    /* [in] */ COORD_SYSTEM eCoordSystem,
    /* [in] */ IHTMLElement *pElementContext,
    /* [in] */ DWORD dwHitTestOptions,
    /* [out] */ DWORD *pdwHitTestResults);


void __RPC_STUB IDisplayPointer_MoveToPoint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IDisplayPointer_MoveUnit_Proxy( 
    IDisplayPointer * This,
    /* [in] */ DISPLAY_MOVEUNIT eMoveUnit,
    /* [in] */ LONG lXPos);


void __RPC_STUB IDisplayPointer_MoveUnit_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IDisplayPointer_PositionMarkupPointer_Proxy( 
    IDisplayPointer * This,
    /* [in] */ IMarkupPointer *pMarkupPointer);


void __RPC_STUB IDisplayPointer_PositionMarkupPointer_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IDisplayPointer_MoveToPointer_Proxy( 
    IDisplayPointer * This,
    /* [in] */ IDisplayPointer *pDispPointer);


void __RPC_STUB IDisplayPointer_MoveToPointer_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IDisplayPointer_SetPointerGravity_Proxy( 
    IDisplayPointer * This,
    /* [in] */ POINTER_GRAVITY eGravity);


void __RPC_STUB IDisplayPointer_SetPointerGravity_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IDisplayPointer_GetPointerGravity_Proxy( 
    IDisplayPointer * This,
    /* [out] */ POINTER_GRAVITY *peGravity);


void __RPC_STUB IDisplayPointer_GetPointerGravity_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IDisplayPointer_SetDisplayGravity_Proxy( 
    IDisplayPointer * This,
    /* [in] */ DISPLAY_GRAVITY eGravity);


void __RPC_STUB IDisplayPointer_SetDisplayGravity_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IDisplayPointer_GetDisplayGravity_Proxy( 
    IDisplayPointer * This,
    /* [out] */ DISPLAY_GRAVITY *peGravity);


void __RPC_STUB IDisplayPointer_GetDisplayGravity_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IDisplayPointer_IsPositioned_Proxy( 
    IDisplayPointer * This,
    /* [out] */ BOOL *pfPositioned);


void __RPC_STUB IDisplayPointer_IsPositioned_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IDisplayPointer_Unposition_Proxy( 
    IDisplayPointer * This);


void __RPC_STUB IDisplayPointer_Unposition_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IDisplayPointer_IsEqualTo_Proxy( 
    IDisplayPointer * This,
    /* [in] */ IDisplayPointer *pDispPointer,
    /* [out] */ BOOL *pfIsEqual);


void __RPC_STUB IDisplayPointer_IsEqualTo_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IDisplayPointer_IsLeftOf_Proxy( 
    IDisplayPointer * This,
    /* [in] */ IDisplayPointer *pDispPointer,
    /* [out] */ BOOL *pfIsLeftOf);


void __RPC_STUB IDisplayPointer_IsLeftOf_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IDisplayPointer_IsRightOf_Proxy( 
    IDisplayPointer * This,
    /* [in] */ IDisplayPointer *pDispPointer,
    /* [out] */ BOOL *pfIsRightOf);


void __RPC_STUB IDisplayPointer_IsRightOf_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IDisplayPointer_IsAtBOL_Proxy( 
    IDisplayPointer * This,
    /* [out] */ BOOL *pfBOL);


void __RPC_STUB IDisplayPointer_IsAtBOL_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IDisplayPointer_MoveToMarkupPointer_Proxy( 
    IDisplayPointer * This,
    /* [in] */ IMarkupPointer *pPointer,
    /* [in] */ IDisplayPointer *pDispLineContext);


void __RPC_STUB IDisplayPointer_MoveToMarkupPointer_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IDisplayPointer_ScrollIntoView_Proxy( 
    IDisplayPointer * This);


void __RPC_STUB IDisplayPointer_ScrollIntoView_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IDisplayPointer_GetLineInfo_Proxy( 
    IDisplayPointer * This,
    /* [out] */ ILineInfo **ppLineInfo);


void __RPC_STUB IDisplayPointer_GetLineInfo_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IDisplayPointer_GetFlowElement_Proxy( 
    IDisplayPointer * This,
    /* [out] */ IHTMLElement **ppLayoutElement);


void __RPC_STUB IDisplayPointer_GetFlowElement_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IDisplayPointer_QueryBreaks_Proxy( 
    IDisplayPointer * This,
    /* [out] */ DWORD *pdwBreaks);


void __RPC_STUB IDisplayPointer_QueryBreaks_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IDisplayPointer_INTERFACE_DEFINED__ */


#ifndef __IDisplayServices_INTERFACE_DEFINED__
#define __IDisplayServices_INTERFACE_DEFINED__

/* interface IDisplayServices */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_IDisplayServices;

    
    MIDL_INTERFACE("3050f69d-98b5-11cf-bb82-00aa00bdce0b")
    IDisplayServices : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE CreateDisplayPointer( 
            /* [out] */ IDisplayPointer **ppDispPointer) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE TransformRect( 
            /* [out][in] */ RECT *pRect,
            /* [in] */ COORD_SYSTEM eSource,
            /* [in] */ COORD_SYSTEM eDestination,
            /* [in] */ IHTMLElement *pIElement) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE TransformPoint( 
            /* [out][in] */ POINT *pPoint,
            /* [in] */ COORD_SYSTEM eSource,
            /* [in] */ COORD_SYSTEM eDestination,
            /* [in] */ IHTMLElement *pIElement) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetCaret( 
            /* [out] */ IHTMLCaret **ppCaret) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetComputedStyle( 
            /* [in] */ IMarkupPointer *pPointer,
            /* [out] */ IHTMLComputedStyle **ppComputedStyle) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ScrollRectIntoView( 
            /* [in] */ IHTMLElement *pIElement,
            /* [in] */ RECT rect) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE HasFlowLayout( 
            /* [in] */ IHTMLElement *pIElement,
            /* [out] */ BOOL *pfHasFlowLayout) = 0;
        
    };
    



HRESULT STDMETHODCALLTYPE IDisplayServices_CreateDisplayPointer_Proxy( 
    IDisplayServices * This,
    /* [out] */ IDisplayPointer **ppDispPointer);


void __RPC_STUB IDisplayServices_CreateDisplayPointer_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IDisplayServices_TransformRect_Proxy( 
    IDisplayServices * This,
    /* [out][in] */ RECT *pRect,
    /* [in] */ COORD_SYSTEM eSource,
    /* [in] */ COORD_SYSTEM eDestination,
    /* [in] */ IHTMLElement *pIElement);


void __RPC_STUB IDisplayServices_TransformRect_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IDisplayServices_TransformPoint_Proxy( 
    IDisplayServices * This,
    /* [out][in] */ POINT *pPoint,
    /* [in] */ COORD_SYSTEM eSource,
    /* [in] */ COORD_SYSTEM eDestination,
    /* [in] */ IHTMLElement *pIElement);


void __RPC_STUB IDisplayServices_TransformPoint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IDisplayServices_GetCaret_Proxy( 
    IDisplayServices * This,
    /* [out] */ IHTMLCaret **ppCaret);


void __RPC_STUB IDisplayServices_GetCaret_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IDisplayServices_GetComputedStyle_Proxy( 
    IDisplayServices * This,
    /* [in] */ IMarkupPointer *pPointer,
    /* [out] */ IHTMLComputedStyle **ppComputedStyle);


void __RPC_STUB IDisplayServices_GetComputedStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IDisplayServices_ScrollRectIntoView_Proxy( 
    IDisplayServices * This,
    /* [in] */ IHTMLElement *pIElement,
    /* [in] */ RECT rect);


void __RPC_STUB IDisplayServices_ScrollRectIntoView_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IDisplayServices_HasFlowLayout_Proxy( 
    IDisplayServices * This,
    /* [in] */ IHTMLElement *pIElement,
    /* [out] */ BOOL *pfHasFlowLayout);


void __RPC_STUB IDisplayServices_HasFlowLayout_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IDisplayServices_INTERFACE_DEFINED__ */


#ifndef __IHtmlDlgSafeHelper_INTERFACE_DEFINED__
#define __IHtmlDlgSafeHelper_INTERFACE_DEFINED__

/* interface IHtmlDlgSafeHelper */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_IHtmlDlgSafeHelper;

    
    MIDL_INTERFACE("3050f81a-98b5-11cf-bb82-00aa00bdce0b")
    IHtmlDlgSafeHelper : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE choosecolordlg( 
            /* [in][optional] */ VARIANT initColor,
            /* [out][retval] */ VARIANT *rgbColor) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE getCharset( 
            /* [in] */ BSTR fontName,
            /* [out][retval] */ VARIANT *charset) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_Fonts( 
            /* [out][retval] */ IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_BlockFormats( 
            /* [out][retval] */ IDispatch **p) = 0;
        
    };
    



/* [id] */ HRESULT STDMETHODCALLTYPE IHtmlDlgSafeHelper_choosecolordlg_Proxy( 
    IHtmlDlgSafeHelper * This,
    /* [in][optional] */ VARIANT initColor,
    /* [out][retval] */ VARIANT *rgbColor);


void __RPC_STUB IHtmlDlgSafeHelper_choosecolordlg_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHtmlDlgSafeHelper_getCharset_Proxy( 
    IHtmlDlgSafeHelper * This,
    /* [in] */ BSTR fontName,
    /* [out][retval] */ VARIANT *charset);


void __RPC_STUB IHtmlDlgSafeHelper_getCharset_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHtmlDlgSafeHelper_get_Fonts_Proxy( 
    IHtmlDlgSafeHelper * This,
    /* [out][retval] */ IDispatch **p);


void __RPC_STUB IHtmlDlgSafeHelper_get_Fonts_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHtmlDlgSafeHelper_get_BlockFormats_Proxy( 
    IHtmlDlgSafeHelper * This,
    /* [out][retval] */ IDispatch **p);


void __RPC_STUB IHtmlDlgSafeHelper_get_BlockFormats_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHtmlDlgSafeHelper_INTERFACE_DEFINED__ */


#ifndef __IBlockFormats_INTERFACE_DEFINED__
#define __IBlockFormats_INTERFACE_DEFINED__

/* interface IBlockFormats */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_IBlockFormats;

    
    MIDL_INTERFACE("3050f830-98b5-11cf-bb82-00aa00bdce0b")
    IBlockFormats : public IDispatch
    {
    public:
        virtual /* [restricted][id][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [out][retval] */ IUnknown **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT *pvarIndex,
            /* [out][retval] */ BSTR *pbstrBlockFormat) = 0;
        
    };
    



/* [restricted][id][propget] */ HRESULT STDMETHODCALLTYPE IBlockFormats_get__NewEnum_Proxy( 
    IBlockFormats * This,
    /* [out][retval] */ IUnknown **p);


void __RPC_STUB IBlockFormats_get__NewEnum_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IBlockFormats_get_Count_Proxy( 
    IBlockFormats * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IBlockFormats_get_Count_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IBlockFormats_Item_Proxy( 
    IBlockFormats * This,
    /* [in] */ VARIANT *pvarIndex,
    /* [out][retval] */ BSTR *pbstrBlockFormat);


void __RPC_STUB IBlockFormats_Item_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IBlockFormats_INTERFACE_DEFINED__ */


#ifndef __IFontNames_INTERFACE_DEFINED__
#define __IFontNames_INTERFACE_DEFINED__

/* interface IFontNames */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_IFontNames;

    
    MIDL_INTERFACE("3050f839-98b5-11cf-bb82-00aa00bdce0b")
    IFontNames : public IDispatch
    {
    public:
        virtual /* [restricted][id][propget] */ HRESULT STDMETHODCALLTYPE get__NewEnum( 
            /* [out][retval] */ IUnknown **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Item( 
            /* [in] */ VARIANT *pvarIndex,
            /* [out][retval] */ BSTR *pbstrFontName) = 0;
        
    };
    



/* [restricted][id][propget] */ HRESULT STDMETHODCALLTYPE IFontNames_get__NewEnum_Proxy( 
    IFontNames * This,
    /* [out][retval] */ IUnknown **p);


void __RPC_STUB IFontNames_get__NewEnum_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IFontNames_get_Count_Proxy( 
    IFontNames * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IFontNames_get_Count_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IFontNames_Item_Proxy( 
    IFontNames * This,
    /* [in] */ VARIANT *pvarIndex,
    /* [out][retval] */ BSTR *pbstrFontName);


void __RPC_STUB IFontNames_Item_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IFontNames_INTERFACE_DEFINED__ */


#ifndef __ICSSFilter_INTERFACE_DEFINED__
#define __ICSSFilter_INTERFACE_DEFINED__

/* interface ICSSFilter */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_ICSSFilter;

    
    MIDL_INTERFACE("3050f3ec-98b5-11cf-bb82-00aa00bdce0b")
    ICSSFilter : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SetSite( 
            /* [in] */ ICSSFilterSite *pSink) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OnAmbientPropertyChange( 
            /* [in] */ LONG dispid) = 0;
        
    };
    



HRESULT STDMETHODCALLTYPE ICSSFilter_SetSite_Proxy( 
    ICSSFilter * This,
    /* [in] */ ICSSFilterSite *pSink);


void __RPC_STUB ICSSFilter_SetSite_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE ICSSFilter_OnAmbientPropertyChange_Proxy( 
    ICSSFilter * This,
    /* [in] */ LONG dispid);


void __RPC_STUB ICSSFilter_OnAmbientPropertyChange_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __ICSSFilter_INTERFACE_DEFINED__ */


#ifndef __ISecureUrlHost_INTERFACE_DEFINED__
#define __ISecureUrlHost_INTERFACE_DEFINED__

/* interface ISecureUrlHost */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_ISecureUrlHost;

    
    MIDL_INTERFACE("c81984c4-74c8-11d2-baa9-00c04fc2040e")
    ISecureUrlHost : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE ValidateSecureUrl( 
            /* [out] */ BOOL *pfAllow,
            /* [in] */ OLECHAR *pchUrlInQuestion,
            /* [in] */ DWORD dwFlags) = 0;
        
    };
    



HRESULT STDMETHODCALLTYPE ISecureUrlHost_ValidateSecureUrl_Proxy( 
    ISecureUrlHost * This,
    /* [out] */ BOOL *pfAllow,
    /* [in] */ OLECHAR *pchUrlInQuestion,
    /* [in] */ DWORD dwFlags);


void __RPC_STUB ISecureUrlHost_ValidateSecureUrl_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __ISecureUrlHost_INTERFACE_DEFINED__ */


#ifndef __IMarkupServices_INTERFACE_DEFINED__
#define __IMarkupServices_INTERFACE_DEFINED__

/* interface IMarkupServices */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_IMarkupServices;

    
    MIDL_INTERFACE("3050f4a0-98b5-11cf-bb82-00aa00bdce0b")
    IMarkupServices : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE CreateMarkupPointer( 
            /* [out] */ IMarkupPointer **ppPointer) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CreateMarkupContainer( 
            /* [out] */ IMarkupContainer **ppMarkupContainer) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CreateElement( 
            /* [in] */ ELEMENT_TAG_ID tagID,
            /* [in] */ OLECHAR *pchAttributes,
            /* [out] */ IHTMLElement **ppElement) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CloneElement( 
            /* [in] */ IHTMLElement *pElemCloneThis,
            /* [out] */ IHTMLElement **ppElementTheClone) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE InsertElement( 
            /* [in] */ IHTMLElement *pElementInsert,
            /* [in] */ IMarkupPointer *pPointerStart,
            /* [in] */ IMarkupPointer *pPointerFinish) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveElement( 
            /* [in] */ IHTMLElement *pElementRemove) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Remove( 
            /* [in] */ IMarkupPointer *pPointerStart,
            /* [in] */ IMarkupPointer *pPointerFinish) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Copy( 
            /* [in] */ IMarkupPointer *pPointerSourceStart,
            /* [in] */ IMarkupPointer *pPointerSourceFinish,
            /* [in] */ IMarkupPointer *pPointerTarget) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Move( 
            /* [in] */ IMarkupPointer *pPointerSourceStart,
            /* [in] */ IMarkupPointer *pPointerSourceFinish,
            /* [in] */ IMarkupPointer *pPointerTarget) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE InsertText( 
            /* [in] */ OLECHAR *pchText,
            /* [in] */ long cch,
            /* [in] */ IMarkupPointer *pPointerTarget) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ParseString( 
            /* [in] */ OLECHAR *pchHTML,
            /* [in] */ DWORD dwFlags,
            /* [out] */ IMarkupContainer **ppContainerResult,
            /* [in] */ IMarkupPointer *ppPointerStart,
            /* [in] */ IMarkupPointer *ppPointerFinish) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ParseGlobal( 
            /* [in] */ HGLOBAL hglobalHTML,
            /* [in] */ DWORD dwFlags,
            /* [out] */ IMarkupContainer **ppContainerResult,
            /* [in] */ IMarkupPointer *pPointerStart,
            /* [in] */ IMarkupPointer *pPointerFinish) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IsScopedElement( 
            /* [in] */ IHTMLElement *pElement,
            /* [out] */ BOOL *pfScoped) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetElementTagId( 
            /* [in] */ IHTMLElement *pElement,
            /* [out] */ ELEMENT_TAG_ID *ptagId) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetTagIDForName( 
            /* [in] */ BSTR bstrName,
            /* [out] */ ELEMENT_TAG_ID *ptagId) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetNameForTagID( 
            /* [in] */ ELEMENT_TAG_ID tagId,
            /* [out] */ BSTR *pbstrName) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MovePointersToRange( 
            /* [in] */ IHTMLTxtRange *pIRange,
            /* [in] */ IMarkupPointer *pPointerStart,
            /* [in] */ IMarkupPointer *pPointerFinish) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MoveRangeToPointers( 
            /* [in] */ IMarkupPointer *pPointerStart,
            /* [in] */ IMarkupPointer *pPointerFinish,
            /* [in] */ IHTMLTxtRange *pIRange) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE BeginUndoUnit( 
            /* [in] */ OLECHAR *pchTitle) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE EndUndoUnit( void) = 0;
        
    };
    



HRESULT STDMETHODCALLTYPE IMarkupServices_CreateMarkupPointer_Proxy( 
    IMarkupServices * This,
    /* [out] */ IMarkupPointer **ppPointer);


void __RPC_STUB IMarkupServices_CreateMarkupPointer_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IMarkupServices_CreateMarkupContainer_Proxy( 
    IMarkupServices * This,
    /* [out] */ IMarkupContainer **ppMarkupContainer);


void __RPC_STUB IMarkupServices_CreateMarkupContainer_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IMarkupServices_CreateElement_Proxy( 
    IMarkupServices * This,
    /* [in] */ ELEMENT_TAG_ID tagID,
    /* [in] */ OLECHAR *pchAttributes,
    /* [out] */ IHTMLElement **ppElement);


void __RPC_STUB IMarkupServices_CreateElement_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IMarkupServices_CloneElement_Proxy( 
    IMarkupServices * This,
    /* [in] */ IHTMLElement *pElemCloneThis,
    /* [out] */ IHTMLElement **ppElementTheClone);


void __RPC_STUB IMarkupServices_CloneElement_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IMarkupServices_InsertElement_Proxy( 
    IMarkupServices * This,
    /* [in] */ IHTMLElement *pElementInsert,
    /* [in] */ IMarkupPointer *pPointerStart,
    /* [in] */ IMarkupPointer *pPointerFinish);


void __RPC_STUB IMarkupServices_InsertElement_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IMarkupServices_RemoveElement_Proxy( 
    IMarkupServices * This,
    /* [in] */ IHTMLElement *pElementRemove);


void __RPC_STUB IMarkupServices_RemoveElement_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IMarkupServices_Remove_Proxy( 
    IMarkupServices * This,
    /* [in] */ IMarkupPointer *pPointerStart,
    /* [in] */ IMarkupPointer *pPointerFinish);


void __RPC_STUB IMarkupServices_Remove_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IMarkupServices_Copy_Proxy( 
    IMarkupServices * This,
    /* [in] */ IMarkupPointer *pPointerSourceStart,
    /* [in] */ IMarkupPointer *pPointerSourceFinish,
    /* [in] */ IMarkupPointer *pPointerTarget);


void __RPC_STUB IMarkupServices_Copy_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IMarkupServices_Move_Proxy( 
    IMarkupServices * This,
    /* [in] */ IMarkupPointer *pPointerSourceStart,
    /* [in] */ IMarkupPointer *pPointerSourceFinish,
    /* [in] */ IMarkupPointer *pPointerTarget);


void __RPC_STUB IMarkupServices_Move_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IMarkupServices_InsertText_Proxy( 
    IMarkupServices * This,
    /* [in] */ OLECHAR *pchText,
    /* [in] */ long cch,
    /* [in] */ IMarkupPointer *pPointerTarget);


void __RPC_STUB IMarkupServices_InsertText_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IMarkupServices_ParseString_Proxy( 
    IMarkupServices * This,
    /* [in] */ OLECHAR *pchHTML,
    /* [in] */ DWORD dwFlags,
    /* [out] */ IMarkupContainer **ppContainerResult,
    /* [in] */ IMarkupPointer *ppPointerStart,
    /* [in] */ IMarkupPointer *ppPointerFinish);


void __RPC_STUB IMarkupServices_ParseString_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IMarkupServices_ParseGlobal_Proxy( 
    IMarkupServices * This,
    /* [in] */ HGLOBAL hglobalHTML,
    /* [in] */ DWORD dwFlags,
    /* [out] */ IMarkupContainer **ppContainerResult,
    /* [in] */ IMarkupPointer *pPointerStart,
    /* [in] */ IMarkupPointer *pPointerFinish);


void __RPC_STUB IMarkupServices_ParseGlobal_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IMarkupServices_IsScopedElement_Proxy( 
    IMarkupServices * This,
    /* [in] */ IHTMLElement *pElement,
    /* [out] */ BOOL *pfScoped);


void __RPC_STUB IMarkupServices_IsScopedElement_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IMarkupServices_GetElementTagId_Proxy( 
    IMarkupServices * This,
    /* [in] */ IHTMLElement *pElement,
    /* [out] */ ELEMENT_TAG_ID *ptagId);


void __RPC_STUB IMarkupServices_GetElementTagId_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IMarkupServices_GetTagIDForName_Proxy( 
    IMarkupServices * This,
    /* [in] */ BSTR bstrName,
    /* [out] */ ELEMENT_TAG_ID *ptagId);


void __RPC_STUB IMarkupServices_GetTagIDForName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IMarkupServices_GetNameForTagID_Proxy( 
    IMarkupServices * This,
    /* [in] */ ELEMENT_TAG_ID tagId,
    /* [out] */ BSTR *pbstrName);


void __RPC_STUB IMarkupServices_GetNameForTagID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IMarkupServices_MovePointersToRange_Proxy( 
    IMarkupServices * This,
    /* [in] */ IHTMLTxtRange *pIRange,
    /* [in] */ IMarkupPointer *pPointerStart,
    /* [in] */ IMarkupPointer *pPointerFinish);


void __RPC_STUB IMarkupServices_MovePointersToRange_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IMarkupServices_MoveRangeToPointers_Proxy( 
    IMarkupServices * This,
    /* [in] */ IMarkupPointer *pPointerStart,
    /* [in] */ IMarkupPointer *pPointerFinish,
    /* [in] */ IHTMLTxtRange *pIRange);


void __RPC_STUB IMarkupServices_MoveRangeToPointers_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IMarkupServices_BeginUndoUnit_Proxy( 
    IMarkupServices * This,
    /* [in] */ OLECHAR *pchTitle);


void __RPC_STUB IMarkupServices_BeginUndoUnit_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IMarkupServices_EndUndoUnit_Proxy( 
    IMarkupServices * This);


void __RPC_STUB IMarkupServices_EndUndoUnit_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IMarkupServices_INTERFACE_DEFINED__ */


#ifndef __IMarkupServices2_INTERFACE_DEFINED__
#define __IMarkupServices2_INTERFACE_DEFINED__

/* interface IMarkupServices2 */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_IMarkupServices2;

    
    MIDL_INTERFACE("3050f682-98b5-11cf-bb82-00aa00bdce0b")
    IMarkupServices2 : public IMarkupServices
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE ParseGlobalEx( 
            /* [in] */ HGLOBAL hglobalHTML,
            /* [in] */ DWORD dwFlags,
            /* [in] */ IMarkupContainer *pContext,
            /* [out] */ IMarkupContainer **ppContainerResult,
            /* [in] */ IMarkupPointer *pPointerStart,
            /* [in] */ IMarkupPointer *pPointerFinish) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE ValidateElements( 
            /* [in] */ IMarkupPointer *pPointerStart,
            /* [in] */ IMarkupPointer *pPointerFinish,
            /* [in] */ IMarkupPointer *pPointerTarget,
            /* [out][in] */ IMarkupPointer *pPointerStatus,
            /* [out] */ IHTMLElement **ppElemFailBottom,
            /* [out] */ IHTMLElement **ppElemFailTop) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SaveSegmentsToClipboard( 
            /* [in] */ ISegmentList *pSegmentList,
            /* [in] */ DWORD dwFlags) = 0;
        
    };
    



HRESULT STDMETHODCALLTYPE IMarkupServices2_ParseGlobalEx_Proxy( 
    IMarkupServices2 * This,
    /* [in] */ HGLOBAL hglobalHTML,
    /* [in] */ DWORD dwFlags,
    /* [in] */ IMarkupContainer *pContext,
    /* [out] */ IMarkupContainer **ppContainerResult,
    /* [in] */ IMarkupPointer *pPointerStart,
    /* [in] */ IMarkupPointer *pPointerFinish);


void __RPC_STUB IMarkupServices2_ParseGlobalEx_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IMarkupServices2_ValidateElements_Proxy( 
    IMarkupServices2 * This,
    /* [in] */ IMarkupPointer *pPointerStart,
    /* [in] */ IMarkupPointer *pPointerFinish,
    /* [in] */ IMarkupPointer *pPointerTarget,
    /* [out][in] */ IMarkupPointer *pPointerStatus,
    /* [out] */ IHTMLElement **ppElemFailBottom,
    /* [out] */ IHTMLElement **ppElemFailTop);


void __RPC_STUB IMarkupServices2_ValidateElements_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IMarkupServices2_SaveSegmentsToClipboard_Proxy( 
    IMarkupServices2 * This,
    /* [in] */ ISegmentList *pSegmentList,
    /* [in] */ DWORD dwFlags);


void __RPC_STUB IMarkupServices2_SaveSegmentsToClipboard_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IMarkupServices2_INTERFACE_DEFINED__ */


#ifndef __IHTMLChangePlayback_INTERFACE_DEFINED__
#define __IHTMLChangePlayback_INTERFACE_DEFINED__

/* interface IHTMLChangePlayback */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_IHTMLChangePlayback;

    
    MIDL_INTERFACE("3050f6e0-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLChangePlayback : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE ExecChange( 
            /* [in] */ BYTE *pbRecord,
            /* [in] */ BOOL fForward) = 0;
        
    };
    



HRESULT STDMETHODCALLTYPE IHTMLChangePlayback_ExecChange_Proxy( 
    IHTMLChangePlayback * This,
    /* [in] */ BYTE *pbRecord,
    /* [in] */ BOOL fForward);


void __RPC_STUB IHTMLChangePlayback_ExecChange_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLChangePlayback_INTERFACE_DEFINED__ */


#ifndef __IMarkupPointer2_INTERFACE_DEFINED__
#define __IMarkupPointer2_INTERFACE_DEFINED__

/* interface IMarkupPointer2 */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_IMarkupPointer2;

    
    MIDL_INTERFACE("3050f675-98b5-11cf-bb82-00aa00bdce0b")
    IMarkupPointer2 : public IMarkupPointer
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE IsAtWordBreak( 
            /* [out] */ BOOL *pfAtBreak) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMarkupPosition( 
            /* [out] */ long *plMP) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MoveToMarkupPosition( 
            /* [in] */ IMarkupContainer *pContainer,
            /* [in] */ long lMP) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MoveUnitBounded( 
            /* [in] */ MOVEUNIT_ACTION muAction,
            /* [in] */ IMarkupPointer *pIBoundary) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IsInsideURL( 
            /* [in] */ IMarkupPointer *pRight,
            /* [out] */ BOOL *pfResult) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MoveToContent( 
            /* [in] */ IHTMLElement *pIElement,
            /* [in] */ BOOL fAtStart) = 0;
        
    };
    



HRESULT STDMETHODCALLTYPE IMarkupPointer2_IsAtWordBreak_Proxy( 
    IMarkupPointer2 * This,
    /* [out] */ BOOL *pfAtBreak);


void __RPC_STUB IMarkupPointer2_IsAtWordBreak_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IMarkupPointer2_GetMarkupPosition_Proxy( 
    IMarkupPointer2 * This,
    /* [out] */ long *plMP);


void __RPC_STUB IMarkupPointer2_GetMarkupPosition_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IMarkupPointer2_MoveToMarkupPosition_Proxy( 
    IMarkupPointer2 * This,
    /* [in] */ IMarkupContainer *pContainer,
    /* [in] */ long lMP);


void __RPC_STUB IMarkupPointer2_MoveToMarkupPosition_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IMarkupPointer2_MoveUnitBounded_Proxy( 
    IMarkupPointer2 * This,
    /* [in] */ MOVEUNIT_ACTION muAction,
    /* [in] */ IMarkupPointer *pIBoundary);


void __RPC_STUB IMarkupPointer2_MoveUnitBounded_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IMarkupPointer2_IsInsideURL_Proxy( 
    IMarkupPointer2 * This,
    /* [in] */ IMarkupPointer *pRight,
    /* [out] */ BOOL *pfResult);


void __RPC_STUB IMarkupPointer2_IsInsideURL_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IMarkupPointer2_MoveToContent_Proxy( 
    IMarkupPointer2 * This,
    /* [in] */ IHTMLElement *pIElement,
    /* [in] */ BOOL fAtStart);


void __RPC_STUB IMarkupPointer2_MoveToContent_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IMarkupPointer2_INTERFACE_DEFINED__ */


#ifndef __IMarkupTextFrags_INTERFACE_DEFINED__
#define __IMarkupTextFrags_INTERFACE_DEFINED__

/* interface IMarkupTextFrags */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_IMarkupTextFrags;

    
    MIDL_INTERFACE("3050f5fa-98b5-11cf-bb82-00aa00bdce0b")
    IMarkupTextFrags : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetTextFragCount( 
            /* [out] */ long *pcFrags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetTextFrag( 
            /* [in] */ long iFrag,
            /* [out] */ BSTR *pbstrFrag,
            /* [in] */ IMarkupPointer *pPointerFrag) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveTextFrag( 
            /* [in] */ long iFrag) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE InsertTextFrag( 
            /* [in] */ long iFrag,
            /* [in] */ BSTR bstrInsert,
            /* [in] */ IMarkupPointer *pPointerInsert) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE FindTextFragFromMarkupPointer( 
            /* [in] */ IMarkupPointer *pPointerFind,
            /* [out] */ long *piFrag,
            /* [out] */ BOOL *pfFragFound) = 0;
        
    };
    



HRESULT STDMETHODCALLTYPE IMarkupTextFrags_GetTextFragCount_Proxy( 
    IMarkupTextFrags * This,
    /* [out] */ long *pcFrags);


void __RPC_STUB IMarkupTextFrags_GetTextFragCount_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IMarkupTextFrags_GetTextFrag_Proxy( 
    IMarkupTextFrags * This,
    /* [in] */ long iFrag,
    /* [out] */ BSTR *pbstrFrag,
    /* [in] */ IMarkupPointer *pPointerFrag);


void __RPC_STUB IMarkupTextFrags_GetTextFrag_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IMarkupTextFrags_RemoveTextFrag_Proxy( 
    IMarkupTextFrags * This,
    /* [in] */ long iFrag);


void __RPC_STUB IMarkupTextFrags_RemoveTextFrag_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IMarkupTextFrags_InsertTextFrag_Proxy( 
    IMarkupTextFrags * This,
    /* [in] */ long iFrag,
    /* [in] */ BSTR bstrInsert,
    /* [in] */ IMarkupPointer *pPointerInsert);


void __RPC_STUB IMarkupTextFrags_InsertTextFrag_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IMarkupTextFrags_FindTextFragFromMarkupPointer_Proxy( 
    IMarkupTextFrags * This,
    /* [in] */ IMarkupPointer *pPointerFind,
    /* [out] */ long *piFrag,
    /* [out] */ BOOL *pfFragFound);


void __RPC_STUB IMarkupTextFrags_FindTextFragFromMarkupPointer_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IMarkupTextFrags_INTERFACE_DEFINED__ */


#ifndef __IXMLGenericParse_INTERFACE_DEFINED__
#define __IXMLGenericParse_INTERFACE_DEFINED__

/* interface IXMLGenericParse */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_IXMLGenericParse;

    
    MIDL_INTERFACE("E4E23071-4D07-11d2-AE76-0080C73BC199")
    IXMLGenericParse : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SetGenericParse( 
            /* [in] */ VARIANT_BOOL fDoGeneric) = 0;
        
    };
    



HRESULT STDMETHODCALLTYPE IXMLGenericParse_SetGenericParse_Proxy( 
    IXMLGenericParse * This,
    /* [in] */ VARIANT_BOOL fDoGeneric);


void __RPC_STUB IXMLGenericParse_SetGenericParse_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IXMLGenericParse_INTERFACE_DEFINED__ */


#ifndef __IHTMLEditHost_INTERFACE_DEFINED__
#define __IHTMLEditHost_INTERFACE_DEFINED__

/* interface IHTMLEditHost */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_IHTMLEditHost;

    
    MIDL_INTERFACE("3050f6a0-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLEditHost : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SnapRect( 
            /* [in] */ IHTMLElement *pIElement,
            /* [out][in] */ RECT *prcNew,
            /* [in] */ ELEMENT_CORNER eHandle) = 0;
        
    };
    



HRESULT STDMETHODCALLTYPE IHTMLEditHost_SnapRect_Proxy( 
    IHTMLEditHost * This,
    /* [in] */ IHTMLElement *pIElement,
    /* [out][in] */ RECT *prcNew,
    /* [in] */ ELEMENT_CORNER eHandle);


void __RPC_STUB IHTMLEditHost_SnapRect_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLEditHost_INTERFACE_DEFINED__ */


#ifndef __IHTMLEditHost2_INTERFACE_DEFINED__
#define __IHTMLEditHost2_INTERFACE_DEFINED__

/* interface IHTMLEditHost2 */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_IHTMLEditHost2;

    
    MIDL_INTERFACE("3050f848-98b5-11cf-bb82-00aa00bdce0d")
    IHTMLEditHost2 : public IHTMLEditHost
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE PreDrag( void) = 0;
        
    };
    



HRESULT STDMETHODCALLTYPE IHTMLEditHost2_PreDrag_Proxy( 
    IHTMLEditHost2 * This);


void __RPC_STUB IHTMLEditHost2_PreDrag_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLEditHost2_INTERFACE_DEFINED__ */


#ifndef __ISequenceNumber_INTERFACE_DEFINED__
#define __ISequenceNumber_INTERFACE_DEFINED__

/* interface ISequenceNumber */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_ISequenceNumber;

    
    MIDL_INTERFACE("3050f6c1-98b5-11cf-bb82-00aa00bdce0b")
    ISequenceNumber : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetSequenceNumber( 
            /* [in] */ long nCurrent,
            /* [out] */ long *pnNew) = 0;
        
    };
    



HRESULT STDMETHODCALLTYPE ISequenceNumber_GetSequenceNumber_Proxy( 
    ISequenceNumber * This,
    /* [in] */ long nCurrent,
    /* [out] */ long *pnNew);


void __RPC_STUB ISequenceNumber_GetSequenceNumber_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __ISequenceNumber_INTERFACE_DEFINED__ */


#ifndef __IIMEServices_INTERFACE_DEFINED__
#define __IIMEServices_INTERFACE_DEFINED__

/* interface IIMEServices */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_IIMEServices;

    
    MIDL_INTERFACE("3050f6ca-98b5-11cf-bb82-00aa00bdce0b")
    IIMEServices : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetActiveIMM( 
            /* [out] */ IActiveIMMApp **ppActiveIMM) = 0;
        
    };
    



HRESULT STDMETHODCALLTYPE IIMEServices_GetActiveIMM_Proxy( 
    IIMEServices * This,
    /* [out] */ IActiveIMMApp **ppActiveIMM);


void __RPC_STUB IIMEServices_GetActiveIMM_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IIMEServices_INTERFACE_DEFINED__ */


#ifndef __ISelectionServicesListener_INTERFACE_DEFINED__
#define __ISelectionServicesListener_INTERFACE_DEFINED__

/* interface ISelectionServicesListener */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_ISelectionServicesListener;

    
    MIDL_INTERFACE("3050f699-98b5-11cf-bb82-00aa00bdce0b")
    ISelectionServicesListener : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE BeginSelectionUndo( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE EndSelectionUndo( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OnSelectedElementExit( 
            /* [in] */ IMarkupPointer *pIElementStart,
            /* [in] */ IMarkupPointer *pIElementEnd,
            /* [in] */ IMarkupPointer *pIElementContentStart,
            /* [in] */ IMarkupPointer *pIElementContentEnd) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OnChangeType( 
            /* [in] */ SELECTION_TYPE eType,
            /* [in] */ ISelectionServicesListener *pIListener) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetTypeDetail( 
            /* [out] */ BSTR *pTypeDetail) = 0;
        
    };
    



HRESULT STDMETHODCALLTYPE ISelectionServicesListener_BeginSelectionUndo_Proxy( 
    ISelectionServicesListener * This);


void __RPC_STUB ISelectionServicesListener_BeginSelectionUndo_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE ISelectionServicesListener_EndSelectionUndo_Proxy( 
    ISelectionServicesListener * This);


void __RPC_STUB ISelectionServicesListener_EndSelectionUndo_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE ISelectionServicesListener_OnSelectedElementExit_Proxy( 
    ISelectionServicesListener * This,
    /* [in] */ IMarkupPointer *pIElementStart,
    /* [in] */ IMarkupPointer *pIElementEnd,
    /* [in] */ IMarkupPointer *pIElementContentStart,
    /* [in] */ IMarkupPointer *pIElementContentEnd);


void __RPC_STUB ISelectionServicesListener_OnSelectedElementExit_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE ISelectionServicesListener_OnChangeType_Proxy( 
    ISelectionServicesListener * This,
    /* [in] */ SELECTION_TYPE eType,
    /* [in] */ ISelectionServicesListener *pIListener);


void __RPC_STUB ISelectionServicesListener_OnChangeType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE ISelectionServicesListener_GetTypeDetail_Proxy( 
    ISelectionServicesListener * This,
    /* [out] */ BSTR *pTypeDetail);


void __RPC_STUB ISelectionServicesListener_GetTypeDetail_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __ISelectionServicesListener_INTERFACE_DEFINED__ */


#ifndef __ISelectionServices_INTERFACE_DEFINED__
#define __ISelectionServices_INTERFACE_DEFINED__

/* interface ISelectionServices */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_ISelectionServices;

    
    MIDL_INTERFACE("3050f684-98b5-11cf-bb82-00aa00bdce0b")
    ISelectionServices : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE SetSelectionType( 
            /* [in] */ SELECTION_TYPE eType,
            /* [in] */ ISelectionServicesListener *pIListener) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMarkupContainer( 
            /* [out] */ IMarkupContainer **ppIContainer) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AddSegment( 
            /* [in] */ IMarkupPointer *pIStart,
            /* [in] */ IMarkupPointer *pIEnd,
            /* [out] */ ISegment **ppISegmentAdded) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE AddElementSegment( 
            /* [in] */ IHTMLElement *pIElement,
            /* [out] */ IElementSegment **ppISegmentAdded) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveSegment( 
            /* [in] */ ISegment *pISegment) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetSelectionServicesListener( 
            /* [out] */ ISelectionServicesListener **ppISelectionServicesListener) = 0;
        
    };
    



HRESULT STDMETHODCALLTYPE ISelectionServices_SetSelectionType_Proxy( 
    ISelectionServices * This,
    /* [in] */ SELECTION_TYPE eType,
    /* [in] */ ISelectionServicesListener *pIListener);


void __RPC_STUB ISelectionServices_SetSelectionType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE ISelectionServices_GetMarkupContainer_Proxy( 
    ISelectionServices * This,
    /* [out] */ IMarkupContainer **ppIContainer);


void __RPC_STUB ISelectionServices_GetMarkupContainer_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE ISelectionServices_AddSegment_Proxy( 
    ISelectionServices * This,
    /* [in] */ IMarkupPointer *pIStart,
    /* [in] */ IMarkupPointer *pIEnd,
    /* [out] */ ISegment **ppISegmentAdded);


void __RPC_STUB ISelectionServices_AddSegment_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE ISelectionServices_AddElementSegment_Proxy( 
    ISelectionServices * This,
    /* [in] */ IHTMLElement *pIElement,
    /* [out] */ IElementSegment **ppISegmentAdded);


void __RPC_STUB ISelectionServices_AddElementSegment_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE ISelectionServices_RemoveSegment_Proxy( 
    ISelectionServices * This,
    /* [in] */ ISegment *pISegment);


void __RPC_STUB ISelectionServices_RemoveSegment_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE ISelectionServices_GetSelectionServicesListener_Proxy( 
    ISelectionServices * This,
    /* [out] */ ISelectionServicesListener **ppISelectionServicesListener);


void __RPC_STUB ISelectionServices_GetSelectionServicesListener_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __ISelectionServices_INTERFACE_DEFINED__ */


#ifndef __IHTMLEditDesigner_INTERFACE_DEFINED__
#define __IHTMLEditDesigner_INTERFACE_DEFINED__

/* interface IHTMLEditDesigner */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_IHTMLEditDesigner;

    
    MIDL_INTERFACE("3050f662-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLEditDesigner : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE PreHandleEvent( 
            /* [in] */ DISPID inEvtDispId,
            /* [in] */ IHTMLEventObj *pIEventObj) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE PostHandleEvent( 
            /* [in] */ DISPID inEvtDispId,
            /* [in] */ IHTMLEventObj *pIEventObj) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE TranslateAccelerator( 
            /* [in] */ DISPID inEvtDispId,
            /* [in] */ IHTMLEventObj *pIEventObj) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE PostEditorEventNotify( 
            /* [in] */ DISPID inEvtDispId,
            /* [in] */ IHTMLEventObj *pIEventObj) = 0;
        
    };
    



HRESULT STDMETHODCALLTYPE IHTMLEditDesigner_PreHandleEvent_Proxy( 
    IHTMLEditDesigner * This,
    /* [in] */ DISPID inEvtDispId,
    /* [in] */ IHTMLEventObj *pIEventObj);


void __RPC_STUB IHTMLEditDesigner_PreHandleEvent_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IHTMLEditDesigner_PostHandleEvent_Proxy( 
    IHTMLEditDesigner * This,
    /* [in] */ DISPID inEvtDispId,
    /* [in] */ IHTMLEventObj *pIEventObj);


void __RPC_STUB IHTMLEditDesigner_PostHandleEvent_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IHTMLEditDesigner_TranslateAccelerator_Proxy( 
    IHTMLEditDesigner * This,
    /* [in] */ DISPID inEvtDispId,
    /* [in] */ IHTMLEventObj *pIEventObj);


void __RPC_STUB IHTMLEditDesigner_TranslateAccelerator_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IHTMLEditDesigner_PostEditorEventNotify_Proxy( 
    IHTMLEditDesigner * This,
    /* [in] */ DISPID inEvtDispId,
    /* [in] */ IHTMLEventObj *pIEventObj);


void __RPC_STUB IHTMLEditDesigner_PostEditorEventNotify_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLEditDesigner_INTERFACE_DEFINED__ */


#ifndef __IHTMLEditServices_INTERFACE_DEFINED__
#define __IHTMLEditServices_INTERFACE_DEFINED__

/* interface IHTMLEditServices */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_IHTMLEditServices;

    
    MIDL_INTERFACE("3050f663-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLEditServices : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE AddDesigner( 
            /* [in] */ IHTMLEditDesigner *pIDesigner) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RemoveDesigner( 
            /* [in] */ IHTMLEditDesigner *pIDesigner) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetSelectionServices( 
            /* [in] */ IMarkupContainer *pIContainer,
            /* [out] */ ISelectionServices **ppSelSvc) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MoveToSelectionAnchor( 
            /* [in] */ IMarkupPointer *pIStartAnchor) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MoveToSelectionEnd( 
            /* [in] */ IMarkupPointer *pIEndAnchor) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SelectRange( 
            /* [in] */ IMarkupPointer *pStart,
            /* [in] */ IMarkupPointer *pEnd,
            /* [in] */ SELECTION_TYPE eType) = 0;
        
    };
    



HRESULT STDMETHODCALLTYPE IHTMLEditServices_AddDesigner_Proxy( 
    IHTMLEditServices * This,
    /* [in] */ IHTMLEditDesigner *pIDesigner);


void __RPC_STUB IHTMLEditServices_AddDesigner_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IHTMLEditServices_RemoveDesigner_Proxy( 
    IHTMLEditServices * This,
    /* [in] */ IHTMLEditDesigner *pIDesigner);


void __RPC_STUB IHTMLEditServices_RemoveDesigner_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IHTMLEditServices_GetSelectionServices_Proxy( 
    IHTMLEditServices * This,
    /* [in] */ IMarkupContainer *pIContainer,
    /* [out] */ ISelectionServices **ppSelSvc);


void __RPC_STUB IHTMLEditServices_GetSelectionServices_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IHTMLEditServices_MoveToSelectionAnchor_Proxy( 
    IHTMLEditServices * This,
    /* [in] */ IMarkupPointer *pIStartAnchor);


void __RPC_STUB IHTMLEditServices_MoveToSelectionAnchor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IHTMLEditServices_MoveToSelectionEnd_Proxy( 
    IHTMLEditServices * This,
    /* [in] */ IMarkupPointer *pIEndAnchor);


void __RPC_STUB IHTMLEditServices_MoveToSelectionEnd_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IHTMLEditServices_SelectRange_Proxy( 
    IHTMLEditServices * This,
    /* [in] */ IMarkupPointer *pStart,
    /* [in] */ IMarkupPointer *pEnd,
    /* [in] */ SELECTION_TYPE eType);


void __RPC_STUB IHTMLEditServices_SelectRange_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLEditServices_INTERFACE_DEFINED__ */


#ifndef __IHTMLEditServices2_INTERFACE_DEFINED__
#define __IHTMLEditServices2_INTERFACE_DEFINED__

/* interface IHTMLEditServices2 */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_IHTMLEditServices2;

    
    MIDL_INTERFACE("3050f812-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLEditServices2 : public IHTMLEditServices
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE MoveToSelectionAnchorEx( 
            /* [in] */ IDisplayPointer *pIStartAnchor) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MoveToSelectionEndEx( 
            /* [in] */ IDisplayPointer *pIEndAnchor) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE FreezeVirtualCaretPos( 
            /* [in] */ BOOL fReCompute) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE UnFreezeVirtualCaretPos( 
            /* [in] */ BOOL fReset) = 0;
        
    };
    



HRESULT STDMETHODCALLTYPE IHTMLEditServices2_MoveToSelectionAnchorEx_Proxy( 
    IHTMLEditServices2 * This,
    /* [in] */ IDisplayPointer *pIStartAnchor);


void __RPC_STUB IHTMLEditServices2_MoveToSelectionAnchorEx_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IHTMLEditServices2_MoveToSelectionEndEx_Proxy( 
    IHTMLEditServices2 * This,
    /* [in] */ IDisplayPointer *pIEndAnchor);


void __RPC_STUB IHTMLEditServices2_MoveToSelectionEndEx_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IHTMLEditServices2_FreezeVirtualCaretPos_Proxy( 
    IHTMLEditServices2 * This,
    /* [in] */ BOOL fReCompute);


void __RPC_STUB IHTMLEditServices2_FreezeVirtualCaretPos_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IHTMLEditServices2_UnFreezeVirtualCaretPos_Proxy( 
    IHTMLEditServices2 * This,
    /* [in] */ BOOL fReset);


void __RPC_STUB IHTMLEditServices2_UnFreezeVirtualCaretPos_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLEditServices2_INTERFACE_DEFINED__ */


#ifndef __IHTMLComputedStyle_INTERFACE_DEFINED__
#define __IHTMLComputedStyle_INTERFACE_DEFINED__

/* interface IHTMLComputedStyle */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_IHTMLComputedStyle;

    
    MIDL_INTERFACE("3050f6c3-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLComputedStyle : public IUnknown
    {
    public:
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_bold( 
            /* [out][retval] */ VARIANT_BOOL *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_italic( 
            /* [out][retval] */ VARIANT_BOOL *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_underline( 
            /* [out][retval] */ VARIANT_BOOL *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_overline( 
            /* [out][retval] */ VARIANT_BOOL *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_strikeOut( 
            /* [out][retval] */ VARIANT_BOOL *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_subScript( 
            /* [out][retval] */ VARIANT_BOOL *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_superScript( 
            /* [out][retval] */ VARIANT_BOOL *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_explicitFace( 
            /* [out][retval] */ VARIANT_BOOL *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_fontWeight( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_fontSize( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_fontName( 
            /* [out][retval] */ TCHAR *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_hasBgColor( 
            /* [out][retval] */ VARIANT_BOOL *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_textColor( 
            /* [out][retval] */ DWORD *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_backgroundColor( 
            /* [out][retval] */ DWORD *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_preFormatted( 
            /* [out][retval] */ VARIANT_BOOL *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_direction( 
            /* [out][retval] */ VARIANT_BOOL *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_blockDirection( 
            /* [out][retval] */ VARIANT_BOOL *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_OL( 
            /* [out][retval] */ VARIANT_BOOL *p) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE IsEqual( 
            /* [in] */ IHTMLComputedStyle *pComputedStyle,
            /* [out] */ VARIANT_BOOL *pfEqual) = 0;
        
    };
    



/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLComputedStyle_get_bold_Proxy( 
    IHTMLComputedStyle * This,
    /* [out][retval] */ VARIANT_BOOL *p);


void __RPC_STUB IHTMLComputedStyle_get_bold_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLComputedStyle_get_italic_Proxy( 
    IHTMLComputedStyle * This,
    /* [out][retval] */ VARIANT_BOOL *p);


void __RPC_STUB IHTMLComputedStyle_get_italic_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLComputedStyle_get_underline_Proxy( 
    IHTMLComputedStyle * This,
    /* [out][retval] */ VARIANT_BOOL *p);


void __RPC_STUB IHTMLComputedStyle_get_underline_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLComputedStyle_get_overline_Proxy( 
    IHTMLComputedStyle * This,
    /* [out][retval] */ VARIANT_BOOL *p);


void __RPC_STUB IHTMLComputedStyle_get_overline_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLComputedStyle_get_strikeOut_Proxy( 
    IHTMLComputedStyle * This,
    /* [out][retval] */ VARIANT_BOOL *p);


void __RPC_STUB IHTMLComputedStyle_get_strikeOut_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLComputedStyle_get_subScript_Proxy( 
    IHTMLComputedStyle * This,
    /* [out][retval] */ VARIANT_BOOL *p);


void __RPC_STUB IHTMLComputedStyle_get_subScript_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLComputedStyle_get_superScript_Proxy( 
    IHTMLComputedStyle * This,
    /* [out][retval] */ VARIANT_BOOL *p);


void __RPC_STUB IHTMLComputedStyle_get_superScript_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLComputedStyle_get_explicitFace_Proxy( 
    IHTMLComputedStyle * This,
    /* [out][retval] */ VARIANT_BOOL *p);


void __RPC_STUB IHTMLComputedStyle_get_explicitFace_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLComputedStyle_get_fontWeight_Proxy( 
    IHTMLComputedStyle * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLComputedStyle_get_fontWeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLComputedStyle_get_fontSize_Proxy( 
    IHTMLComputedStyle * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLComputedStyle_get_fontSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLComputedStyle_get_fontName_Proxy( 
    IHTMLComputedStyle * This,
    /* [out][retval] */ TCHAR *p);


void __RPC_STUB IHTMLComputedStyle_get_fontName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLComputedStyle_get_hasBgColor_Proxy( 
    IHTMLComputedStyle * This,
    /* [out][retval] */ VARIANT_BOOL *p);


void __RPC_STUB IHTMLComputedStyle_get_hasBgColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLComputedStyle_get_textColor_Proxy( 
    IHTMLComputedStyle * This,
    /* [out][retval] */ DWORD *p);


void __RPC_STUB IHTMLComputedStyle_get_textColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLComputedStyle_get_backgroundColor_Proxy( 
    IHTMLComputedStyle * This,
    /* [out][retval] */ DWORD *p);


void __RPC_STUB IHTMLComputedStyle_get_backgroundColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLComputedStyle_get_preFormatted_Proxy( 
    IHTMLComputedStyle * This,
    /* [out][retval] */ VARIANT_BOOL *p);


void __RPC_STUB IHTMLComputedStyle_get_preFormatted_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLComputedStyle_get_direction_Proxy( 
    IHTMLComputedStyle * This,
    /* [out][retval] */ VARIANT_BOOL *p);


void __RPC_STUB IHTMLComputedStyle_get_direction_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLComputedStyle_get_blockDirection_Proxy( 
    IHTMLComputedStyle * This,
    /* [out][retval] */ VARIANT_BOOL *p);


void __RPC_STUB IHTMLComputedStyle_get_blockDirection_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLComputedStyle_get_OL_Proxy( 
    IHTMLComputedStyle * This,
    /* [out][retval] */ VARIANT_BOOL *p);


void __RPC_STUB IHTMLComputedStyle_get_OL_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IHTMLComputedStyle_IsEqual_Proxy( 
    IHTMLComputedStyle * This,
    /* [in] */ IHTMLComputedStyle *pComputedStyle,
    /* [out] */ VARIANT_BOOL *pfEqual);


void __RPC_STUB IHTMLComputedStyle_IsEqual_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLComputedStyle_INTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_HtmlDlgSafeHelper;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f819-98b5-11cf-bb82-00aa00bdce0b")
HtmlDlgSafeHelper;
#endif

EXTERN_C const CLSID CLSID_BlockFormats;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f831-98b5-11cf-bb82-00aa00bdce0b")
BlockFormats;
#endif

EXTERN_C const CLSID CLSID_FontNames;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f83a-98b5-11cf-bb82-00aa00bdce0b")
FontNames;
#endif

#ifndef __HTMLNamespaceEvents_DISPINTERFACE_DEFINED__
#define __HTMLNamespaceEvents_DISPINTERFACE_DEFINED__

/* dispinterface HTMLNamespaceEvents */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_HTMLNamespaceEvents;


    MIDL_INTERFACE("3050f6bd-98b5-11cf-bb82-00aa00bdce0b")
    HTMLNamespaceEvents : public IDispatch
    {
    };
    


#endif 	/* __HTMLNamespaceEvents_DISPINTERFACE_DEFINED__ */


#ifndef __IHTMLNamespace_INTERFACE_DEFINED__
#define __IHTMLNamespace_INTERFACE_DEFINED__

/* interface IHTMLNamespace */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLNamespace;

    
    MIDL_INTERFACE("3050f6bb-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLNamespace : public IDispatch
    {
    public:
        virtual /* [bindable][id][propget] */ HRESULT STDMETHODCALLTYPE get_name( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][id][propget] */ HRESULT STDMETHODCALLTYPE get_urn( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][id][propget] */ HRESULT STDMETHODCALLTYPE get_tagNames( 
            /* [out][retval] */ IDispatch **p) = 0;
        
        virtual /* [bindable][id][propget] */ HRESULT STDMETHODCALLTYPE get_readyState( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onreadystatechange( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onreadystatechange( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE doImport( 
            /* [in] */ BSTR bstrImplementationUrl) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE attachEvent( 
            /* [in] */ BSTR event,
            /* [in] */ IDispatch *pDisp,
            /* [out][retval] */ VARIANT_BOOL *pfResult) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE detachEvent( 
            /* [in] */ BSTR event,
            /* [in] */ IDispatch *pDisp) = 0;
        
    };
    



/* [bindable][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLNamespace_get_name_Proxy( 
    IHTMLNamespace * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLNamespace_get_name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLNamespace_get_urn_Proxy( 
    IHTMLNamespace * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLNamespace_get_urn_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLNamespace_get_tagNames_Proxy( 
    IHTMLNamespace * This,
    /* [out][retval] */ IDispatch **p);


void __RPC_STUB IHTMLNamespace_get_tagNames_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLNamespace_get_readyState_Proxy( 
    IHTMLNamespace * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLNamespace_get_readyState_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLNamespace_put_onreadystatechange_Proxy( 
    IHTMLNamespace * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLNamespace_put_onreadystatechange_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLNamespace_get_onreadystatechange_Proxy( 
    IHTMLNamespace * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLNamespace_get_onreadystatechange_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLNamespace_doImport_Proxy( 
    IHTMLNamespace * This,
    /* [in] */ BSTR bstrImplementationUrl);


void __RPC_STUB IHTMLNamespace_doImport_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLNamespace_attachEvent_Proxy( 
    IHTMLNamespace * This,
    /* [in] */ BSTR event,
    /* [in] */ IDispatch *pDisp,
    /* [out][retval] */ VARIANT_BOOL *pfResult);


void __RPC_STUB IHTMLNamespace_attachEvent_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLNamespace_detachEvent_Proxy( 
    IHTMLNamespace * This,
    /* [in] */ BSTR event,
    /* [in] */ IDispatch *pDisp);


void __RPC_STUB IHTMLNamespace_detachEvent_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLNamespace_INTERFACE_DEFINED__ */


#ifndef __IHTMLNamespaceCollection_INTERFACE_DEFINED__
#define __IHTMLNamespaceCollection_INTERFACE_DEFINED__

/* interface IHTMLNamespaceCollection */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLNamespaceCollection;

    
    MIDL_INTERFACE("3050f6b8-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLNamespaceCollection : public IDispatch
    {
    public:
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_length( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE item( 
            /* [in] */ VARIANT index,
            /* [out][retval] */ IDispatch **ppNamespace) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE add( 
            /* [in] */ BSTR bstrNamespace,
            /* [in] */ BSTR bstrUrn,
            /* [in][optional] */ VARIANT implementationUrl,
            /* [out][retval] */ IDispatch **ppNamespace) = 0;
        
    };
    



/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLNamespaceCollection_get_length_Proxy( 
    IHTMLNamespaceCollection * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLNamespaceCollection_get_length_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLNamespaceCollection_item_Proxy( 
    IHTMLNamespaceCollection * This,
    /* [in] */ VARIANT index,
    /* [out][retval] */ IDispatch **ppNamespace);


void __RPC_STUB IHTMLNamespaceCollection_item_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLNamespaceCollection_add_Proxy( 
    IHTMLNamespaceCollection * This,
    /* [in] */ BSTR bstrNamespace,
    /* [in] */ BSTR bstrUrn,
    /* [in][optional] */ VARIANT implementationUrl,
    /* [out][retval] */ IDispatch **ppNamespace);


void __RPC_STUB IHTMLNamespaceCollection_add_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLNamespaceCollection_INTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_HTMLNamespace;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f6bc-98b5-11cf-bb82-00aa00bdce0b")
HTMLNamespace;
#endif

EXTERN_C const CLSID CLSID_HTMLNamespaceCollection;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f6b9-98b5-11cf-bb82-00aa00bdce0b")
HTMLNamespaceCollection;
#endif

#ifndef __IHTMLPainter_INTERFACE_DEFINED__
#define __IHTMLPainter_INTERFACE_DEFINED__

/* interface IHTMLPainter */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_IHTMLPainter;

    
    MIDL_INTERFACE("3050f6a6-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLPainter : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Draw( 
            /* [in] */ RECT rcBounds,
            /* [in] */ RECT rcUpdate,
            /* [in] */ LONG lDrawFlags,
            /* [in] */ HDC hdc,
            /* [in] */ LPVOID pvDrawObject) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE OnResize( 
            /* [in] */ SIZE size) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetPainterInfo( 
            /* [out] */ HTML_PAINTER_INFO *pInfo) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE HitTestPoint( 
            /* [in] */ POINT pt,
            /* [out] */ BOOL *pbHit,
            /* [out] */ LONG *plPartID) = 0;
        
    };
    



HRESULT STDMETHODCALLTYPE IHTMLPainter_Draw_Proxy( 
    IHTMLPainter * This,
    /* [in] */ RECT rcBounds,
    /* [in] */ RECT rcUpdate,
    /* [in] */ LONG lDrawFlags,
    /* [in] */ HDC hdc,
    /* [in] */ LPVOID pvDrawObject);


void __RPC_STUB IHTMLPainter_Draw_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IHTMLPainter_OnResize_Proxy( 
    IHTMLPainter * This,
    /* [in] */ SIZE size);


void __RPC_STUB IHTMLPainter_OnResize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IHTMLPainter_GetPainterInfo_Proxy( 
    IHTMLPainter * This,
    /* [out] */ HTML_PAINTER_INFO *pInfo);


void __RPC_STUB IHTMLPainter_GetPainterInfo_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IHTMLPainter_HitTestPoint_Proxy( 
    IHTMLPainter * This,
    /* [in] */ POINT pt,
    /* [out] */ BOOL *pbHit,
    /* [out] */ LONG *plPartID);


void __RPC_STUB IHTMLPainter_HitTestPoint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLPainter_INTERFACE_DEFINED__ */


#ifndef __IHTMLPaintSite_INTERFACE_DEFINED__
#define __IHTMLPaintSite_INTERFACE_DEFINED__

/* interface IHTMLPaintSite */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_IHTMLPaintSite;

    
    MIDL_INTERFACE("3050f6a7-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLPaintSite : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE InvalidatePainterInfo( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE InvalidateRect( 
            /* [in] */ RECT *prcInvalid) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE InvalidateRegion( 
            /* [in] */ HRGN rgnInvalid) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetDrawInfo( 
            /* [in] */ LONG lFlags,
            /* [out] */ HTML_PAINT_DRAW_INFO *pDrawInfo) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE TransformGlobalToLocal( 
            /* [in] */ POINT ptGlobal,
            /* [out] */ POINT *pptLocal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE TransformLocalToGlobal( 
            /* [in] */ POINT ptLocal,
            /* [out] */ POINT *pptGlobal) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetHitTestCookie( 
            /* [out] */ LONG *plCookie) = 0;
        
    };
    



HRESULT STDMETHODCALLTYPE IHTMLPaintSite_InvalidatePainterInfo_Proxy( 
    IHTMLPaintSite * This);


void __RPC_STUB IHTMLPaintSite_InvalidatePainterInfo_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IHTMLPaintSite_InvalidateRect_Proxy( 
    IHTMLPaintSite * This,
    /* [in] */ RECT *prcInvalid);


void __RPC_STUB IHTMLPaintSite_InvalidateRect_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IHTMLPaintSite_InvalidateRegion_Proxy( 
    IHTMLPaintSite * This,
    /* [in] */ HRGN rgnInvalid);


void __RPC_STUB IHTMLPaintSite_InvalidateRegion_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IHTMLPaintSite_GetDrawInfo_Proxy( 
    IHTMLPaintSite * This,
    /* [in] */ LONG lFlags,
    /* [out] */ HTML_PAINT_DRAW_INFO *pDrawInfo);


void __RPC_STUB IHTMLPaintSite_GetDrawInfo_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IHTMLPaintSite_TransformGlobalToLocal_Proxy( 
    IHTMLPaintSite * This,
    /* [in] */ POINT ptGlobal,
    /* [out] */ POINT *pptLocal);


void __RPC_STUB IHTMLPaintSite_TransformGlobalToLocal_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IHTMLPaintSite_TransformLocalToGlobal_Proxy( 
    IHTMLPaintSite * This,
    /* [in] */ POINT ptLocal,
    /* [out] */ POINT *pptGlobal);


void __RPC_STUB IHTMLPaintSite_TransformLocalToGlobal_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IHTMLPaintSite_GetHitTestCookie_Proxy( 
    IHTMLPaintSite * This,
    /* [out] */ LONG *plCookie);


void __RPC_STUB IHTMLPaintSite_GetHitTestCookie_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLPaintSite_INTERFACE_DEFINED__ */


#ifndef __IHTMLPainterEventInfo_INTERFACE_DEFINED__
#define __IHTMLPainterEventInfo_INTERFACE_DEFINED__

/* interface IHTMLPainterEventInfo */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_IHTMLPainterEventInfo;

    
    MIDL_INTERFACE("3050f6df-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLPainterEventInfo : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetEventInfoFlags( 
            /* [out] */ long *plEventInfoFlags) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetEventTarget( 
            /* [in] */ IHTMLElement **ppElement) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE SetCursor( 
            /* [in] */ LONG lPartID) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE StringFromPartID( 
            /* [in] */ LONG lPartID,
            /* [out] */ BSTR *pbstrPart) = 0;
        
    };
    



HRESULT STDMETHODCALLTYPE IHTMLPainterEventInfo_GetEventInfoFlags_Proxy( 
    IHTMLPainterEventInfo * This,
    /* [out] */ long *plEventInfoFlags);


void __RPC_STUB IHTMLPainterEventInfo_GetEventInfoFlags_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IHTMLPainterEventInfo_GetEventTarget_Proxy( 
    IHTMLPainterEventInfo * This,
    /* [in] */ IHTMLElement **ppElement);


void __RPC_STUB IHTMLPainterEventInfo_GetEventTarget_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IHTMLPainterEventInfo_SetCursor_Proxy( 
    IHTMLPainterEventInfo * This,
    /* [in] */ LONG lPartID);


void __RPC_STUB IHTMLPainterEventInfo_SetCursor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IHTMLPainterEventInfo_StringFromPartID_Proxy( 
    IHTMLPainterEventInfo * This,
    /* [in] */ LONG lPartID,
    /* [out] */ BSTR *pbstrPart);


void __RPC_STUB IHTMLPainterEventInfo_StringFromPartID_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLPainterEventInfo_INTERFACE_DEFINED__ */


#ifndef __IHTMLPainterOverlay_INTERFACE_DEFINED__
#define __IHTMLPainterOverlay_INTERFACE_DEFINED__

/* interface IHTMLPainterOverlay */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_IHTMLPainterOverlay;

    
    MIDL_INTERFACE("3050f7e3-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLPainterOverlay : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE OnMove( 
            /* [in] */ RECT rcDevice) = 0;
        
    };
    



HRESULT STDMETHODCALLTYPE IHTMLPainterOverlay_OnMove_Proxy( 
    IHTMLPainterOverlay * This,
    /* [in] */ RECT rcDevice);


void __RPC_STUB IHTMLPainterOverlay_OnMove_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLPainterOverlay_INTERFACE_DEFINED__ */


#ifndef __IHTMLIPrintCollection_INTERFACE_DEFINED__
#define __IHTMLIPrintCollection_INTERFACE_DEFINED__

/* interface IHTMLIPrintCollection */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLIPrintCollection;

    
    MIDL_INTERFACE("3050f6b5-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLIPrintCollection : public IDispatch
    {
    public:
        virtual /* [hidden][id][propget] */ HRESULT STDMETHODCALLTYPE get_length( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [restricted][hidden][id][propget] */ HRESULT STDMETHODCALLTYPE get__newEnum( 
            /* [out][retval] */ IUnknown **p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE item( 
            /* [in] */ long index,
            /* [out][retval] */ IUnknown **ppIPrint) = 0;
        
    };
    



/* [hidden][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLIPrintCollection_get_length_Proxy( 
    IHTMLIPrintCollection * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLIPrintCollection_get_length_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [restricted][hidden][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLIPrintCollection_get__newEnum_Proxy( 
    IHTMLIPrintCollection * This,
    /* [out][retval] */ IUnknown **p);


void __RPC_STUB IHTMLIPrintCollection_get__newEnum_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLIPrintCollection_item_Proxy( 
    IHTMLIPrintCollection * This,
    /* [in] */ long index,
    /* [out][retval] */ IUnknown **ppIPrint);


void __RPC_STUB IHTMLIPrintCollection_item_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLIPrintCollection_INTERFACE_DEFINED__ */


#ifndef __IEnumPrivacyRecords_INTERFACE_DEFINED__
#define __IEnumPrivacyRecords_INTERFACE_DEFINED__

/* interface IEnumPrivacyRecords */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_IEnumPrivacyRecords;

    
    MIDL_INTERFACE("3050f844-98b5-11cf-bb82-00aa00bdce0b")
    IEnumPrivacyRecords : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Reset( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetSize( 
            /* [out] */ ULONG *pSize) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetPrivacyImpacted( 
            /* [out] */ BOOL *pState) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Next( 
            /* [out] */ BSTR *pbstrUrl,
            /* [out] */ BSTR *pbstrPolicyRef,
            /* [out] */ LONG *pdwReserved,
            /* [out] */ DWORD *pdwPrivacyFlags) = 0;
        
    };
    



HRESULT STDMETHODCALLTYPE IEnumPrivacyRecords_Reset_Proxy( 
    IEnumPrivacyRecords * This);


void __RPC_STUB IEnumPrivacyRecords_Reset_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IEnumPrivacyRecords_GetSize_Proxy( 
    IEnumPrivacyRecords * This,
    /* [out] */ ULONG *pSize);


void __RPC_STUB IEnumPrivacyRecords_GetSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IEnumPrivacyRecords_GetPrivacyImpacted_Proxy( 
    IEnumPrivacyRecords * This,
    /* [out] */ BOOL *pState);


void __RPC_STUB IEnumPrivacyRecords_GetPrivacyImpacted_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IEnumPrivacyRecords_Next_Proxy( 
    IEnumPrivacyRecords * This,
    /* [out] */ BSTR *pbstrUrl,
    /* [out] */ BSTR *pbstrPolicyRef,
    /* [out] */ LONG *pdwReserved,
    /* [out] */ DWORD *pdwPrivacyFlags);


void __RPC_STUB IEnumPrivacyRecords_Next_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IEnumPrivacyRecords_INTERFACE_DEFINED__ */


#ifndef __IHTMLDialog_INTERFACE_DEFINED__
#define __IHTMLDialog_INTERFACE_DEFINED__

/* interface IHTMLDialog */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLDialog;

    
    MIDL_INTERFACE("3050f216-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLDialog : public IDispatch
    {
    public:
        virtual /* [bindable][id][propput] */ HRESULT STDMETHODCALLTYPE put_dialogTop( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][id][propget] */ HRESULT STDMETHODCALLTYPE get_dialogTop( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][id][propput] */ HRESULT STDMETHODCALLTYPE put_dialogLeft( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][id][propget] */ HRESULT STDMETHODCALLTYPE get_dialogLeft( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][id][propput] */ HRESULT STDMETHODCALLTYPE put_dialogWidth( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][id][propget] */ HRESULT STDMETHODCALLTYPE get_dialogWidth( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][id][propput] */ HRESULT STDMETHODCALLTYPE put_dialogHeight( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][id][propget] */ HRESULT STDMETHODCALLTYPE get_dialogHeight( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_dialogArguments( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_menuArguments( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_returnValue( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_returnValue( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE close( void) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE toString( 
            /* [out][retval] */ BSTR *String) = 0;
        
    };
    



/* [bindable][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLDialog_put_dialogTop_Proxy( 
    IHTMLDialog * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLDialog_put_dialogTop_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDialog_get_dialogTop_Proxy( 
    IHTMLDialog * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLDialog_get_dialogTop_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLDialog_put_dialogLeft_Proxy( 
    IHTMLDialog * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLDialog_put_dialogLeft_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDialog_get_dialogLeft_Proxy( 
    IHTMLDialog * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLDialog_get_dialogLeft_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLDialog_put_dialogWidth_Proxy( 
    IHTMLDialog * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLDialog_put_dialogWidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDialog_get_dialogWidth_Proxy( 
    IHTMLDialog * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLDialog_get_dialogWidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLDialog_put_dialogHeight_Proxy( 
    IHTMLDialog * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLDialog_put_dialogHeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDialog_get_dialogHeight_Proxy( 
    IHTMLDialog * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLDialog_get_dialogHeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDialog_get_dialogArguments_Proxy( 
    IHTMLDialog * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLDialog_get_dialogArguments_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDialog_get_menuArguments_Proxy( 
    IHTMLDialog * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLDialog_get_menuArguments_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLDialog_put_returnValue_Proxy( 
    IHTMLDialog * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLDialog_put_returnValue_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDialog_get_returnValue_Proxy( 
    IHTMLDialog * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLDialog_get_returnValue_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLDialog_close_Proxy( 
    IHTMLDialog * This);


void __RPC_STUB IHTMLDialog_close_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLDialog_toString_Proxy( 
    IHTMLDialog * This,
    /* [out][retval] */ BSTR *String);


void __RPC_STUB IHTMLDialog_toString_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLDialog_INTERFACE_DEFINED__ */


#ifndef __IHTMLDialog2_INTERFACE_DEFINED__
#define __IHTMLDialog2_INTERFACE_DEFINED__

/* interface IHTMLDialog2 */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLDialog2;

    
    MIDL_INTERFACE("3050f5e0-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLDialog2 : public IDispatch
    {
    public:
        virtual /* [hidden][id][propput] */ HRESULT STDMETHODCALLTYPE put_status( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [hidden][id][propget] */ HRESULT STDMETHODCALLTYPE get_status( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [hidden][id][propput] */ HRESULT STDMETHODCALLTYPE put_resizable( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [hidden][id][propget] */ HRESULT STDMETHODCALLTYPE get_resizable( 
            /* [out][retval] */ BSTR *p) = 0;
        
    };
    



/* [hidden][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLDialog2_put_status_Proxy( 
    IHTMLDialog2 * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLDialog2_put_status_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [hidden][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDialog2_get_status_Proxy( 
    IHTMLDialog2 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLDialog2_get_status_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [hidden][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLDialog2_put_resizable_Proxy( 
    IHTMLDialog2 * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLDialog2_put_resizable_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [hidden][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDialog2_get_resizable_Proxy( 
    IHTMLDialog2 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLDialog2_get_resizable_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLDialog2_INTERFACE_DEFINED__ */


#ifndef __IHTMLDialog3_INTERFACE_DEFINED__
#define __IHTMLDialog3_INTERFACE_DEFINED__

/* interface IHTMLDialog3 */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLDialog3;

    
    MIDL_INTERFACE("3050f388-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLDialog3 : public IDispatch
    {
    public:
        virtual /* [hidden][id][propput] */ HRESULT STDMETHODCALLTYPE put_unadorned( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [hidden][id][propget] */ HRESULT STDMETHODCALLTYPE get_unadorned( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_dialogHide( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_dialogHide( 
            /* [out][retval] */ BSTR *p) = 0;
        
    };
    



/* [hidden][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLDialog3_put_unadorned_Proxy( 
    IHTMLDialog3 * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLDialog3_put_unadorned_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [hidden][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDialog3_get_unadorned_Proxy( 
    IHTMLDialog3 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLDialog3_get_unadorned_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLDialog3_put_dialogHide_Proxy( 
    IHTMLDialog3 * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLDialog3_put_dialogHide_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDialog3_get_dialogHide_Proxy( 
    IHTMLDialog3 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLDialog3_get_dialogHide_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLDialog3_INTERFACE_DEFINED__ */


#ifndef __IHTMLModelessInit_INTERFACE_DEFINED__
#define __IHTMLModelessInit_INTERFACE_DEFINED__

/* interface IHTMLModelessInit */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLModelessInit;

    
    MIDL_INTERFACE("3050f5e4-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLModelessInit : public IDispatch
    {
    public:
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_parameters( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_optionString( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_moniker( 
            /* [out][retval] */ IUnknown **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_document( 
            /* [out][retval] */ IUnknown **p) = 0;
        
    };
    



/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLModelessInit_get_parameters_Proxy( 
    IHTMLModelessInit * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLModelessInit_get_parameters_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLModelessInit_get_optionString_Proxy( 
    IHTMLModelessInit * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLModelessInit_get_optionString_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLModelessInit_get_moniker_Proxy( 
    IHTMLModelessInit * This,
    /* [out][retval] */ IUnknown **p);


void __RPC_STUB IHTMLModelessInit_get_moniker_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLModelessInit_get_document_Proxy( 
    IHTMLModelessInit * This,
    /* [out][retval] */ IUnknown **p);


void __RPC_STUB IHTMLModelessInit_get_document_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLModelessInit_INTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_ThreadDialogProcParam;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f5eb-98b5-11cf-bb82-00aa00bdce0b")
ThreadDialogProcParam;
#endif

EXTERN_C const CLSID CLSID_HTMLDialog;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f28a-98b5-11cf-bb82-00aa00bdce0b")
HTMLDialog;
#endif

#ifndef __IHTMLPopup_INTERFACE_DEFINED__
#define __IHTMLPopup_INTERFACE_DEFINED__

/* interface IHTMLPopup */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLPopup;

    
    MIDL_INTERFACE("3050f666-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLPopup : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE show( 
            /* [in] */ long x,
            /* [in] */ long y,
            /* [in] */ long w,
            /* [in] */ long h,
            /* [in] */ VARIANT *pElement) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE hide( void) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_document( 
            /* [out][retval] */ IHTMLDocument **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_isOpen( 
            /* [out][retval] */ VARIANT_BOOL *p) = 0;
        
    };
    



/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLPopup_show_Proxy( 
    IHTMLPopup * This,
    /* [in] */ long x,
    /* [in] */ long y,
    /* [in] */ long w,
    /* [in] */ long h,
    /* [in] */ VARIANT *pElement);


void __RPC_STUB IHTMLPopup_show_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLPopup_hide_Proxy( 
    IHTMLPopup * This);


void __RPC_STUB IHTMLPopup_hide_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLPopup_get_document_Proxy( 
    IHTMLPopup * This,
    /* [out][retval] */ IHTMLDocument **p);


void __RPC_STUB IHTMLPopup_get_document_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLPopup_get_isOpen_Proxy( 
    IHTMLPopup * This,
    /* [out][retval] */ VARIANT_BOOL *p);


void __RPC_STUB IHTMLPopup_get_isOpen_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLPopup_INTERFACE_DEFINED__ */


#ifndef __DispHTMLPopup_DISPINTERFACE_DEFINED__
#define __DispHTMLPopup_DISPINTERFACE_DEFINED__

/* dispinterface DispHTMLPopup */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_DispHTMLPopup;


    MIDL_INTERFACE("3050f589-98b5-11cf-bb82-00aa00bdce0b")
    DispHTMLPopup : public IDispatch
    {
    };
    


#endif 	/* __DispHTMLPopup_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_HTMLPopup;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f667-98b5-11cf-bb82-00aa00bdce0b")
HTMLPopup;
#endif

#ifndef __IHTMLAppBehavior_INTERFACE_DEFINED__
#define __IHTMLAppBehavior_INTERFACE_DEFINED__

/* interface IHTMLAppBehavior */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLAppBehavior;

    
    MIDL_INTERFACE("3050f5ca-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLAppBehavior : public IDispatch
    {
    public:
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_applicationName( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_applicationName( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_version( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_version( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_icon( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_icon( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_singleInstance( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_singleInstance( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_minimizeButton( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_minimizeButton( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_maximizeButton( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_maximizeButton( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_border( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_border( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_borderStyle( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_borderStyle( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_sysMenu( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_sysMenu( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_caption( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_caption( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_windowState( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_windowState( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_showInTaskBar( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_showInTaskBar( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_commandLine( 
            /* [out][retval] */ BSTR *p) = 0;
        
    };
    



/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLAppBehavior_put_applicationName_Proxy( 
    IHTMLAppBehavior * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLAppBehavior_put_applicationName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLAppBehavior_get_applicationName_Proxy( 
    IHTMLAppBehavior * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLAppBehavior_get_applicationName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLAppBehavior_put_version_Proxy( 
    IHTMLAppBehavior * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLAppBehavior_put_version_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLAppBehavior_get_version_Proxy( 
    IHTMLAppBehavior * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLAppBehavior_get_version_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLAppBehavior_put_icon_Proxy( 
    IHTMLAppBehavior * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLAppBehavior_put_icon_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLAppBehavior_get_icon_Proxy( 
    IHTMLAppBehavior * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLAppBehavior_get_icon_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLAppBehavior_put_singleInstance_Proxy( 
    IHTMLAppBehavior * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLAppBehavior_put_singleInstance_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLAppBehavior_get_singleInstance_Proxy( 
    IHTMLAppBehavior * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLAppBehavior_get_singleInstance_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLAppBehavior_put_minimizeButton_Proxy( 
    IHTMLAppBehavior * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLAppBehavior_put_minimizeButton_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLAppBehavior_get_minimizeButton_Proxy( 
    IHTMLAppBehavior * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLAppBehavior_get_minimizeButton_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLAppBehavior_put_maximizeButton_Proxy( 
    IHTMLAppBehavior * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLAppBehavior_put_maximizeButton_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLAppBehavior_get_maximizeButton_Proxy( 
    IHTMLAppBehavior * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLAppBehavior_get_maximizeButton_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLAppBehavior_put_border_Proxy( 
    IHTMLAppBehavior * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLAppBehavior_put_border_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLAppBehavior_get_border_Proxy( 
    IHTMLAppBehavior * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLAppBehavior_get_border_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLAppBehavior_put_borderStyle_Proxy( 
    IHTMLAppBehavior * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLAppBehavior_put_borderStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLAppBehavior_get_borderStyle_Proxy( 
    IHTMLAppBehavior * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLAppBehavior_get_borderStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLAppBehavior_put_sysMenu_Proxy( 
    IHTMLAppBehavior * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLAppBehavior_put_sysMenu_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLAppBehavior_get_sysMenu_Proxy( 
    IHTMLAppBehavior * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLAppBehavior_get_sysMenu_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLAppBehavior_put_caption_Proxy( 
    IHTMLAppBehavior * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLAppBehavior_put_caption_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLAppBehavior_get_caption_Proxy( 
    IHTMLAppBehavior * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLAppBehavior_get_caption_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLAppBehavior_put_windowState_Proxy( 
    IHTMLAppBehavior * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLAppBehavior_put_windowState_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLAppBehavior_get_windowState_Proxy( 
    IHTMLAppBehavior * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLAppBehavior_get_windowState_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLAppBehavior_put_showInTaskBar_Proxy( 
    IHTMLAppBehavior * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLAppBehavior_put_showInTaskBar_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLAppBehavior_get_showInTaskBar_Proxy( 
    IHTMLAppBehavior * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLAppBehavior_get_showInTaskBar_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLAppBehavior_get_commandLine_Proxy( 
    IHTMLAppBehavior * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLAppBehavior_get_commandLine_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLAppBehavior_INTERFACE_DEFINED__ */


#ifndef __IHTMLAppBehavior2_INTERFACE_DEFINED__
#define __IHTMLAppBehavior2_INTERFACE_DEFINED__

/* interface IHTMLAppBehavior2 */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLAppBehavior2;

    
    MIDL_INTERFACE("3050f5c9-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLAppBehavior2 : public IDispatch
    {
    public:
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_contextMenu( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_contextMenu( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_innerBorder( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_innerBorder( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_scroll( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_scroll( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_scrollFlat( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_scrollFlat( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_selection( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_selection( 
            /* [out][retval] */ BSTR *p) = 0;
        
    };
    



/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLAppBehavior2_put_contextMenu_Proxy( 
    IHTMLAppBehavior2 * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLAppBehavior2_put_contextMenu_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLAppBehavior2_get_contextMenu_Proxy( 
    IHTMLAppBehavior2 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLAppBehavior2_get_contextMenu_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLAppBehavior2_put_innerBorder_Proxy( 
    IHTMLAppBehavior2 * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLAppBehavior2_put_innerBorder_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLAppBehavior2_get_innerBorder_Proxy( 
    IHTMLAppBehavior2 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLAppBehavior2_get_innerBorder_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLAppBehavior2_put_scroll_Proxy( 
    IHTMLAppBehavior2 * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLAppBehavior2_put_scroll_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLAppBehavior2_get_scroll_Proxy( 
    IHTMLAppBehavior2 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLAppBehavior2_get_scroll_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLAppBehavior2_put_scrollFlat_Proxy( 
    IHTMLAppBehavior2 * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLAppBehavior2_put_scrollFlat_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLAppBehavior2_get_scrollFlat_Proxy( 
    IHTMLAppBehavior2 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLAppBehavior2_get_scrollFlat_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLAppBehavior2_put_selection_Proxy( 
    IHTMLAppBehavior2 * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLAppBehavior2_put_selection_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLAppBehavior2_get_selection_Proxy( 
    IHTMLAppBehavior2 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLAppBehavior2_get_selection_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLAppBehavior2_INTERFACE_DEFINED__ */


#ifndef __IHTMLAppBehavior3_INTERFACE_DEFINED__
#define __IHTMLAppBehavior3_INTERFACE_DEFINED__

/* interface IHTMLAppBehavior3 */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLAppBehavior3;

    
    MIDL_INTERFACE("3050f5cd-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLAppBehavior3 : public IDispatch
    {
    public:
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_navigable( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_navigable( 
            /* [out][retval] */ BSTR *p) = 0;
        
    };
    



/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLAppBehavior3_put_navigable_Proxy( 
    IHTMLAppBehavior3 * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLAppBehavior3_put_navigable_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLAppBehavior3_get_navigable_Proxy( 
    IHTMLAppBehavior3 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLAppBehavior3_get_navigable_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLAppBehavior3_INTERFACE_DEFINED__ */


#ifndef __DispHTMLAppBehavior_DISPINTERFACE_DEFINED__
#define __DispHTMLAppBehavior_DISPINTERFACE_DEFINED__

/* dispinterface DispHTMLAppBehavior */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_DispHTMLAppBehavior;


    MIDL_INTERFACE("3050f57c-98b5-11cf-bb82-00aa00bdce0b")
    DispHTMLAppBehavior : public IDispatch
    {
    };
    


#endif 	/* __DispHTMLAppBehavior_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_HTMLAppBehavior;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f5cb-98b5-11cf-bb82-00aa00bdce0b")
HTMLAppBehavior;
#endif

EXTERN_C const CLSID CLSID_OldHTMLDocument;

#ifdef __cplusplus

class DECLSPEC_UUID("D48A6EC9-6A4A-11CF-94A7-444553540000")
OldHTMLDocument;
#endif

EXTERN_C const CLSID CLSID_OldHTMLFormElement;

#ifdef __cplusplus

class DECLSPEC_UUID("0D04D285-6BEC-11CF-8B97-00AA00476DA6")
OldHTMLFormElement;
#endif

#ifndef __DispIHTMLInputButtonElement_DISPINTERFACE_DEFINED__
#define __DispIHTMLInputButtonElement_DISPINTERFACE_DEFINED__

/* dispinterface DispIHTMLInputButtonElement */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_DispIHTMLInputButtonElement;


    MIDL_INTERFACE("3050f51e-98b5-11cf-bb82-00aa00bdce0b")
    DispIHTMLInputButtonElement : public IDispatch
    {
    };
    


#endif 	/* __DispIHTMLInputButtonElement_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_HTMLInputButtonElement;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f2b4-98b5-11cf-bb82-00aa00bdce0b")
HTMLInputButtonElement;
#endif

#ifndef __DispIHTMLInputTextElement_DISPINTERFACE_DEFINED__
#define __DispIHTMLInputTextElement_DISPINTERFACE_DEFINED__

/* dispinterface DispIHTMLInputTextElement */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_DispIHTMLInputTextElement;


    MIDL_INTERFACE("3050f520-98b5-11cf-bb82-00aa00bdce0b")
    DispIHTMLInputTextElement : public IDispatch
    {
    };
    


#endif 	/* __DispIHTMLInputTextElement_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_HTMLInputTextElement;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f2ab-98b5-11cf-bb82-00aa00bdce0b")
HTMLInputTextElement;
#endif

#ifndef __DispIHTMLInputFileElement_DISPINTERFACE_DEFINED__
#define __DispIHTMLInputFileElement_DISPINTERFACE_DEFINED__

/* dispinterface DispIHTMLInputFileElement */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_DispIHTMLInputFileElement;


    MIDL_INTERFACE("3050f542-98b5-11cf-bb82-00aa00bdce0b")
    DispIHTMLInputFileElement : public IDispatch
    {
    };
    


#endif 	/* __DispIHTMLInputFileElement_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_HTMLInputFileElement;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f2ae-98b5-11cf-bb82-00aa00bdce0b")
HTMLInputFileElement;
#endif

#ifndef __DispIHTMLOptionButtonElement_DISPINTERFACE_DEFINED__
#define __DispIHTMLOptionButtonElement_DISPINTERFACE_DEFINED__

/* dispinterface DispIHTMLOptionButtonElement */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_DispIHTMLOptionButtonElement;


    MIDL_INTERFACE("3050f509-98b5-11cf-bb82-00aa00bdce0b")
    DispIHTMLOptionButtonElement : public IDispatch
    {
    };
    


#endif 	/* __DispIHTMLOptionButtonElement_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_HTMLOptionButtonElement;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f2be-98b5-11cf-bb82-00aa00bdce0b")
HTMLOptionButtonElement;
#endif

#ifndef __DispIHTMLInputImage_DISPINTERFACE_DEFINED__
#define __DispIHTMLInputImage_DISPINTERFACE_DEFINED__

/* dispinterface DispIHTMLInputImage */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_DispIHTMLInputImage;


    MIDL_INTERFACE("3050f51d-98b5-11cf-bb82-00aa00bdce0b")
    DispIHTMLInputImage : public IDispatch
    {
    };
    


#endif 	/* __DispIHTMLInputImage_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_HTMLInputImage;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f2c4-98b5-11cf-bb82-00aa00bdce0b")
HTMLInputImage;
#endif

#ifndef __IElementNamespace_INTERFACE_DEFINED__
#define __IElementNamespace_INTERFACE_DEFINED__

/* interface IElementNamespace */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_IElementNamespace;

    
    MIDL_INTERFACE("3050f671-98b5-11cf-bb82-00aa00bdce0b")
    IElementNamespace : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE AddTag( 
            /* [in] */ BSTR bstrTagName,
            /* [in] */ LONG lFlags) = 0;
        
    };
    



HRESULT STDMETHODCALLTYPE IElementNamespace_AddTag_Proxy( 
    IElementNamespace * This,
    /* [in] */ BSTR bstrTagName,
    /* [in] */ LONG lFlags);


void __RPC_STUB IElementNamespace_AddTag_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IElementNamespace_INTERFACE_DEFINED__ */


#ifndef __IElementNamespaceTable_INTERFACE_DEFINED__
#define __IElementNamespaceTable_INTERFACE_DEFINED__

/* interface IElementNamespaceTable */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_IElementNamespaceTable;

    
    MIDL_INTERFACE("3050f670-98b5-11cf-bb82-00aa00bdce0b")
    IElementNamespaceTable : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE AddNamespace( 
            /* [in] */ BSTR bstrNamespace,
            /* [in] */ BSTR bstrUrn,
            /* [in] */ LONG lFlags,
            /* [in] */ VARIANT *pvarFactory) = 0;
        
    };
    



HRESULT STDMETHODCALLTYPE IElementNamespaceTable_AddNamespace_Proxy( 
    IElementNamespaceTable * This,
    /* [in] */ BSTR bstrNamespace,
    /* [in] */ BSTR bstrUrn,
    /* [in] */ LONG lFlags,
    /* [in] */ VARIANT *pvarFactory);


void __RPC_STUB IElementNamespaceTable_AddNamespace_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IElementNamespaceTable_INTERFACE_DEFINED__ */


#ifndef __IElementNamespaceFactory_INTERFACE_DEFINED__
#define __IElementNamespaceFactory_INTERFACE_DEFINED__

/* interface IElementNamespaceFactory */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_IElementNamespaceFactory;

    
    MIDL_INTERFACE("3050f672-98b5-11cf-bb82-00aa00bdce0b")
    IElementNamespaceFactory : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Create( 
            /* [in] */ IElementNamespace *pNamespace) = 0;
        
    };
    



HRESULT STDMETHODCALLTYPE IElementNamespaceFactory_Create_Proxy( 
    IElementNamespaceFactory * This,
    /* [in] */ IElementNamespace *pNamespace);


void __RPC_STUB IElementNamespaceFactory_Create_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IElementNamespaceFactory_INTERFACE_DEFINED__ */


#ifndef __IElementNamespaceFactory2_INTERFACE_DEFINED__
#define __IElementNamespaceFactory2_INTERFACE_DEFINED__

/* interface IElementNamespaceFactory2 */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_IElementNamespaceFactory2;

    
    MIDL_INTERFACE("3050f805-98b5-11cf-bb82-00aa00bdce0b")
    IElementNamespaceFactory2 : public IElementNamespaceFactory
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE CreateWithImplementation( 
            /* [in] */ IElementNamespace *pNamespace,
            /* [in] */ BSTR bstrImplementation) = 0;
        
    };
    



HRESULT STDMETHODCALLTYPE IElementNamespaceFactory2_CreateWithImplementation_Proxy( 
    IElementNamespaceFactory2 * This,
    /* [in] */ IElementNamespace *pNamespace,
    /* [in] */ BSTR bstrImplementation);


void __RPC_STUB IElementNamespaceFactory2_CreateWithImplementation_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IElementNamespaceFactory2_INTERFACE_DEFINED__ */


#ifndef __IElementNamespaceFactoryCallback_INTERFACE_DEFINED__
#define __IElementNamespaceFactoryCallback_INTERFACE_DEFINED__

/* interface IElementNamespaceFactoryCallback */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_IElementNamespaceFactoryCallback;

    
    MIDL_INTERFACE("3050f7fd-98b5-11cf-bb82-00aa00bdce0b")
    IElementNamespaceFactoryCallback : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Resolve( 
            /* [in] */ BSTR bstrNamespace,
            /* [in] */ BSTR bstrTagName,
            /* [in] */ BSTR bstrAttrs,
            /* [in] */ IElementNamespace *pNamespace) = 0;
        
    };
    



HRESULT STDMETHODCALLTYPE IElementNamespaceFactoryCallback_Resolve_Proxy( 
    IElementNamespaceFactoryCallback * This,
    /* [in] */ BSTR bstrNamespace,
    /* [in] */ BSTR bstrTagName,
    /* [in] */ BSTR bstrAttrs,
    /* [in] */ IElementNamespace *pNamespace);


void __RPC_STUB IElementNamespaceFactoryCallback_Resolve_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IElementNamespaceFactoryCallback_INTERFACE_DEFINED__ */


#ifndef __IElementBehaviorSiteOM2_INTERFACE_DEFINED__
#define __IElementBehaviorSiteOM2_INTERFACE_DEFINED__

/* interface IElementBehaviorSiteOM2 */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_IElementBehaviorSiteOM2;

    
    MIDL_INTERFACE("3050f659-98b5-11cf-bb82-00aa00bdce0b")
    IElementBehaviorSiteOM2 : public IElementBehaviorSiteOM
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetDefaults( 
            /* [out][retval] */ IHTMLElementDefaults **ppDefaults) = 0;
        
    };
    



HRESULT STDMETHODCALLTYPE IElementBehaviorSiteOM2_GetDefaults_Proxy( 
    IElementBehaviorSiteOM2 * This,
    /* [out][retval] */ IHTMLElementDefaults **ppDefaults);


void __RPC_STUB IElementBehaviorSiteOM2_GetDefaults_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IElementBehaviorSiteOM2_INTERFACE_DEFINED__ */


#ifndef __IElementBehaviorCategory_INTERFACE_DEFINED__
#define __IElementBehaviorCategory_INTERFACE_DEFINED__

/* interface IElementBehaviorCategory */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_IElementBehaviorCategory;

    
    MIDL_INTERFACE("3050f4ed-98b5-11cf-bb82-00aa00bdce0b")
    IElementBehaviorCategory : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetCategory( 
            /* [out][retval] */ LPOLESTR *ppchCategory) = 0;
        
    };
    



HRESULT STDMETHODCALLTYPE IElementBehaviorCategory_GetCategory_Proxy( 
    IElementBehaviorCategory * This,
    /* [out][retval] */ LPOLESTR *ppchCategory);


void __RPC_STUB IElementBehaviorCategory_GetCategory_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IElementBehaviorCategory_INTERFACE_DEFINED__ */


#ifndef __IElementBehaviorSiteCategory_INTERFACE_DEFINED__
#define __IElementBehaviorSiteCategory_INTERFACE_DEFINED__

/* interface IElementBehaviorSiteCategory */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_IElementBehaviorSiteCategory;

    
    MIDL_INTERFACE("3050f4ee-98b5-11cf-bb82-00aa00bdce0b")
    IElementBehaviorSiteCategory : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetRelatedBehaviors( 
            /* [in] */ LONG lDirection,
            /* [in] */ LPOLESTR pchCategory,
            /* [out][retval] */ IEnumUnknown **ppEnumerator) = 0;
        
    };
    



HRESULT STDMETHODCALLTYPE IElementBehaviorSiteCategory_GetRelatedBehaviors_Proxy( 
    IElementBehaviorSiteCategory * This,
    /* [in] */ LONG lDirection,
    /* [in] */ LPOLESTR pchCategory,
    /* [out][retval] */ IEnumUnknown **ppEnumerator);


void __RPC_STUB IElementBehaviorSiteCategory_GetRelatedBehaviors_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IElementBehaviorSiteCategory_INTERFACE_DEFINED__ */


#ifndef __IElementBehaviorSubmit_INTERFACE_DEFINED__
#define __IElementBehaviorSubmit_INTERFACE_DEFINED__

/* interface IElementBehaviorSubmit */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_IElementBehaviorSubmit;

    
    MIDL_INTERFACE("3050f646-98b5-11cf-bb82-00aa00bdce0b")
    IElementBehaviorSubmit : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetSubmitInfo( 
            /* [in] */ IHTMLSubmitData *pSubmitData) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Reset( void) = 0;
        
    };
    



HRESULT STDMETHODCALLTYPE IElementBehaviorSubmit_GetSubmitInfo_Proxy( 
    IElementBehaviorSubmit * This,
    /* [in] */ IHTMLSubmitData *pSubmitData);


void __RPC_STUB IElementBehaviorSubmit_GetSubmitInfo_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IElementBehaviorSubmit_Reset_Proxy( 
    IElementBehaviorSubmit * This);


void __RPC_STUB IElementBehaviorSubmit_Reset_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IElementBehaviorSubmit_INTERFACE_DEFINED__ */


#ifndef __IElementBehaviorFocus_INTERFACE_DEFINED__
#define __IElementBehaviorFocus_INTERFACE_DEFINED__

/* interface IElementBehaviorFocus */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_IElementBehaviorFocus;

    
    MIDL_INTERFACE("3050f6b6-98b5-11cf-bb82-00aa00bdce0b")
    IElementBehaviorFocus : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetFocusRect( 
            /* [in] */ RECT *pRect) = 0;
        
    };
    



HRESULT STDMETHODCALLTYPE IElementBehaviorFocus_GetFocusRect_Proxy( 
    IElementBehaviorFocus * This,
    /* [in] */ RECT *pRect);


void __RPC_STUB IElementBehaviorFocus_GetFocusRect_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IElementBehaviorFocus_INTERFACE_DEFINED__ */


#ifndef __IElementBehaviorLayout_INTERFACE_DEFINED__
#define __IElementBehaviorLayout_INTERFACE_DEFINED__

/* interface IElementBehaviorLayout */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_IElementBehaviorLayout;

    
    MIDL_INTERFACE("3050f6ba-98b5-11cf-bb82-00aa00bdce0b")
    IElementBehaviorLayout : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetSize( 
            /* [in] */ LONG dwFlags,
            /* [in] */ SIZE sizeContent,
            /* [out][in] */ POINT *pptTranslateBy,
            /* [out][in] */ POINT *pptTopLeft,
            /* [out][in] */ SIZE *psizeProposed) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetLayoutInfo( 
            /* [out][retval] */ LONG *plLayoutInfo) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetPosition( 
            /* [in] */ LONG lFlags,
            /* [out][in] */ POINT *pptTopLeft) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE MapSize( 
            /* [in] */ SIZE *psizeIn,
            /* [out] */ RECT *prcOut) = 0;
        
    };
    



HRESULT STDMETHODCALLTYPE IElementBehaviorLayout_GetSize_Proxy( 
    IElementBehaviorLayout * This,
    /* [in] */ LONG dwFlags,
    /* [in] */ SIZE sizeContent,
    /* [out][in] */ POINT *pptTranslateBy,
    /* [out][in] */ POINT *pptTopLeft,
    /* [out][in] */ SIZE *psizeProposed);


void __RPC_STUB IElementBehaviorLayout_GetSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IElementBehaviorLayout_GetLayoutInfo_Proxy( 
    IElementBehaviorLayout * This,
    /* [out][retval] */ LONG *plLayoutInfo);


void __RPC_STUB IElementBehaviorLayout_GetLayoutInfo_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IElementBehaviorLayout_GetPosition_Proxy( 
    IElementBehaviorLayout * This,
    /* [in] */ LONG lFlags,
    /* [out][in] */ POINT *pptTopLeft);


void __RPC_STUB IElementBehaviorLayout_GetPosition_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IElementBehaviorLayout_MapSize_Proxy( 
    IElementBehaviorLayout * This,
    /* [in] */ SIZE *psizeIn,
    /* [out] */ RECT *prcOut);


void __RPC_STUB IElementBehaviorLayout_MapSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IElementBehaviorLayout_INTERFACE_DEFINED__ */


#ifndef __IElementBehaviorLayout2_INTERFACE_DEFINED__
#define __IElementBehaviorLayout2_INTERFACE_DEFINED__

/* interface IElementBehaviorLayout2 */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_IElementBehaviorLayout2;

    
    MIDL_INTERFACE("3050f846-98b5-11cf-bb82-00aa00bdce0b")
    IElementBehaviorLayout2 : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetTextDescent( 
            /* [out] */ LONG *plDescent) = 0;
        
    };
    



HRESULT STDMETHODCALLTYPE IElementBehaviorLayout2_GetTextDescent_Proxy( 
    IElementBehaviorLayout2 * This,
    /* [out] */ LONG *plDescent);


void __RPC_STUB IElementBehaviorLayout2_GetTextDescent_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IElementBehaviorLayout2_INTERFACE_DEFINED__ */


#ifndef __IElementBehaviorSiteLayout_INTERFACE_DEFINED__
#define __IElementBehaviorSiteLayout_INTERFACE_DEFINED__

/* interface IElementBehaviorSiteLayout */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_IElementBehaviorSiteLayout;

    
    MIDL_INTERFACE("3050f6b7-98b5-11cf-bb82-00aa00bdce0b")
    IElementBehaviorSiteLayout : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE InvalidateLayoutInfo( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE InvalidateSize( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetMediaResolution( 
            /* [out][retval] */ SIZE *psizeResolution) = 0;
        
    };
    



HRESULT STDMETHODCALLTYPE IElementBehaviorSiteLayout_InvalidateLayoutInfo_Proxy( 
    IElementBehaviorSiteLayout * This);


void __RPC_STUB IElementBehaviorSiteLayout_InvalidateLayoutInfo_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IElementBehaviorSiteLayout_InvalidateSize_Proxy( 
    IElementBehaviorSiteLayout * This);


void __RPC_STUB IElementBehaviorSiteLayout_InvalidateSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IElementBehaviorSiteLayout_GetMediaResolution_Proxy( 
    IElementBehaviorSiteLayout * This,
    /* [out][retval] */ SIZE *psizeResolution);


void __RPC_STUB IElementBehaviorSiteLayout_GetMediaResolution_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IElementBehaviorSiteLayout_INTERFACE_DEFINED__ */


#ifndef __IElementBehaviorSiteLayout2_INTERFACE_DEFINED__
#define __IElementBehaviorSiteLayout2_INTERFACE_DEFINED__

/* interface IElementBehaviorSiteLayout2 */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_IElementBehaviorSiteLayout2;

    
    MIDL_INTERFACE("3050f847-98b5-11cf-bb82-00aa00bdce0b")
    IElementBehaviorSiteLayout2 : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetFontInfo( 
            /* [out] */ LOGFONTW *plf) = 0;
        
    };
    



HRESULT STDMETHODCALLTYPE IElementBehaviorSiteLayout2_GetFontInfo_Proxy( 
    IElementBehaviorSiteLayout2 * This,
    /* [out] */ LOGFONTW *plf);


void __RPC_STUB IElementBehaviorSiteLayout2_GetFontInfo_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IElementBehaviorSiteLayout2_INTERFACE_DEFINED__ */


#ifndef __IHostBehaviorInit_INTERFACE_DEFINED__
#define __IHostBehaviorInit_INTERFACE_DEFINED__

/* interface IHostBehaviorInit */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_IHostBehaviorInit;

    
    MIDL_INTERFACE("3050f842-98b5-11cf-bb82-00aa00bdce0b")
    IHostBehaviorInit : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE PopulateNamespaceTable( void) = 0;
        
    };
    



HRESULT STDMETHODCALLTYPE IHostBehaviorInit_PopulateNamespaceTable_Proxy( 
    IHostBehaviorInit * This);


void __RPC_STUB IHostBehaviorInit_PopulateNamespaceTable_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHostBehaviorInit_INTERFACE_DEFINED__ */

#endif /* __MSHTML_LIBRARY_DEFINED__ */

/* Additional Prototypes for ALL interfaces */

unsigned long             __RPC_USER  VARIANT_UserSize(     unsigned long *, unsigned long            , VARIANT * ); 
unsigned char * __RPC_USER  VARIANT_UserMarshal(  unsigned long *, unsigned char *, VARIANT * ); 
unsigned char * __RPC_USER  VARIANT_UserUnmarshal(unsigned long *, unsigned char *, VARIANT * ); 
void                      __RPC_USER  VARIANT_UserFree(     unsigned long *, VARIANT * ); 

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif


#endif /* !defined(__cplusplus) || defined(CINTERFACE) */
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\public\sdk\inc\msiehost.h ===
//+---------------------------------------------------------------------------
//
//  Microsoft Windows
//  Copyright (C) Microsoft Corporation, 1999-2000
//
//  File:       msiehost.idl
//
//  Contents:   Definitions for Web Browser OC host (not automatable)
//
//----------------------------------------------------------------------------
//=--------------------------------------------------------------------------=
// msiehost.h
//=--------------------------------------------------------------------------=
// (C) Copyright 1999-2000 Microsoft Corporation.  All Rights Reserved.
//
// THIS CODE AND INFORMATION IS PROVIDED \"AS IS\" WITHOUT WARRANTY OF
// ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO
// THE IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A
// PARTICULAR PURPOSE.
//=--------------------------------------------------------------------------=

//---------------------------------------------------------------------------=
// Definitions for IOleCommandTarget IDs


#ifndef _MSIEHOST_H
#define _MSIEHOST_H

EXTERN_C const GUID CGID_InternetExplorer;

// CGID_InternetExplorer CMDID definitions
#define IECMDID_CLEAR_AUTOCOMPLETE_FOR_FORMS        0
#define IECMDID_SETID_AUTOCOMPLETE_FOR_FORMS        1

#define IECMDID_BEFORENAVIGATE_GETSHELLBROWSE     2
#define IECMDID_BEFORENAVIGATE_DOEXTERNALBROWSE   3
#define IECMDID_BEFORENAVIGATE_GETIDLIST          4

// Values for first parameter of IEID_CLEAR_AUTOCOMPLETE_FOR_FORMS
#define IECMDID_ARG_CLEAR_FORMS_ALL                 0
#define IECMDID_ARG_CLEAR_FORMS_ALL_BUT_PASSWORDS   1
#define IECMDID_ARG_CLEAR_FORMS_PASSWORDS_ONLY      2

#endif
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\public\sdk\inc\msi.h ===
/*****************************************************************************\
*                                                                             *
* msi.h - - Interface for external access to Installer Service                *
*                                                                             *
* Version 2.0                                                                 *
*                                                                             *
* NOTES:  All buffers sizes are TCHAR count, null included only on input      *
*         Return argument pointers may be null if not interested in value     *
*                                                                             *
* Copyright (c) 1996-2001, Microsoft Corp.      All rights reserved.          *
*                                                                             *
\*****************************************************************************/

#ifndef _MSI_H_
#define _MSI_H_

#ifndef _WIN32_MSI
#if (_WIN32_WINNT >= 0x0501)
#define _WIN32_MSI   200
#elif (_WIN32_WINNT >= 0x0500)
#define _WIN32_MSI   110
#else
#define _WIN32_MSI   100
#endif //_WIN32_WINNT
#endif // !_WIN32_MSI

#if (_WIN32_MSI >= 150)
#ifndef _MSI_NO_CRYPTO
#include "wincrypt.h"
#endif // _MSI_NO_CRYPTO
#endif //(_WIN32_MSI >= 150)

// --------------------------------------------------------------------------
// Installer generic handle definitions
// --------------------------------------------------------------------------

typedef unsigned long MSIHANDLE;     // abstract generic handle, 0 == no handle

#ifdef __cplusplus
extern "C" {
#endif

// Close a open handle of any type
// All handles obtained from API calls must be closed when no longer needed
// Normally succeeds, returning TRUE. 

UINT WINAPI MsiCloseHandle(MSIHANDLE hAny);

// Close all handles open in the process, a diagnostic call
// This should NOT be used as a cleanup mechanism -- use PMSIHANDLE class
// Can be called at termination to assure that all handles have been closed
// Returns 0 if all handles have been close, else number of open handles

UINT WINAPI MsiCloseAllHandles();

#ifdef __cplusplus
}
#endif

#ifdef __cplusplus

// C++ wrapper object to automatically free handle when going out of scope

class PMSIHANDLE
{
	MSIHANDLE m_h;
 public:
	PMSIHANDLE():m_h(0){}
	PMSIHANDLE(MSIHANDLE h):m_h(h){}
  ~PMSIHANDLE(){if (m_h!=0) MsiCloseHandle(m_h);}
	void operator =(MSIHANDLE h) {if (m_h) MsiCloseHandle(m_h); m_h=h;}
	operator MSIHANDLE() {return m_h;}
	MSIHANDLE* operator &() {if (m_h) MsiCloseHandle(m_h); m_h = 0; return &m_h;}
};
#endif  //__cplusplus

// Install message type for callback is a combination of the following:
//  A message box style:      MB_*, where MB_OK is the default
//  A message box icon type:  MB_ICON*, where no icon is the default
//  A default button:         MB_DEFBUTTON?, where MB_DEFBUTTON1 is the default
//  One of the following install message types, no default
typedef enum tagINSTALLMESSAGE
{
	INSTALLMESSAGE_FATALEXIT      = 0x00000000L, // premature termination, possibly fatal OOM
	INSTALLMESSAGE_ERROR          = 0x01000000L, // formatted error message
	INSTALLMESSAGE_WARNING        = 0x02000000L, // formatted warning message
	INSTALLMESSAGE_USER           = 0x03000000L, // user request message
	INSTALLMESSAGE_INFO           = 0x04000000L, // informative message for log
	INSTALLMESSAGE_FILESINUSE     = 0x05000000L, // list of files in use that need to be replaced
	INSTALLMESSAGE_RESOLVESOURCE  = 0x06000000L, // request to determine a valid source location
	INSTALLMESSAGE_OUTOFDISKSPACE = 0x07000000L, // insufficient disk space message
	INSTALLMESSAGE_ACTIONSTART    = 0x08000000L, // start of action: action name & description
	INSTALLMESSAGE_ACTIONDATA     = 0x09000000L, // formatted data associated with individual action item
	INSTALLMESSAGE_PROGRESS       = 0x0A000000L, // progress gauge info: units so far, total
	INSTALLMESSAGE_COMMONDATA     = 0x0B000000L, // product info for dialog: language Id, dialog caption
	INSTALLMESSAGE_INITIALIZE     = 0x0C000000L, // sent prior to UI initialization, no string data
	INSTALLMESSAGE_TERMINATE      = 0x0D000000L, // sent after UI termination, no string data
	INSTALLMESSAGE_SHOWDIALOG     = 0x0E000000L, // sent prior to display or authored dialog or wizard
} INSTALLMESSAGE;

// external error handler supplied to installation API functions
typedef int (WINAPI *INSTALLUI_HANDLERA)(LPVOID pvContext, UINT iMessageType, LPCSTR szMessage);
// external error handler supplied to installation API functions
typedef int (WINAPI *INSTALLUI_HANDLERW)(LPVOID pvContext, UINT iMessageType, LPCWSTR szMessage);
#ifdef UNICODE
#define INSTALLUI_HANDLER  INSTALLUI_HANDLERW
#else
#define INSTALLUI_HANDLER  INSTALLUI_HANDLERA
#endif // !UNICODE

typedef enum tagINSTALLUILEVEL
{
	INSTALLUILEVEL_NOCHANGE = 0,    // UI level is unchanged
	INSTALLUILEVEL_DEFAULT  = 1,    // default UI is used
	INSTALLUILEVEL_NONE     = 2,    // completely silent installation
	INSTALLUILEVEL_BASIC    = 3,    // simple progress and error handling
	INSTALLUILEVEL_REDUCED  = 4,    // authored UI, wizard dialogs suppressed
	INSTALLUILEVEL_FULL     = 5,    // authored UI with wizards, progress, errors
	INSTALLUILEVEL_ENDDIALOG    = 0x80, // display success/failure dialog at end of install
	INSTALLUILEVEL_PROGRESSONLY = 0x40, // display only progress dialog
	INSTALLUILEVEL_HIDECANCEL   = 0x20, // do not display the cancel button in basic UI
	INSTALLUILEVEL_SOURCERESONLY = 0x100, // force display of source resolution even if quiet
} INSTALLUILEVEL;

typedef enum tagINSTALLSTATE
{
	INSTALLSTATE_NOTUSED      = -7,  // component disabled
	INSTALLSTATE_BADCONFIG    = -6,  // configuration data corrupt
	INSTALLSTATE_INCOMPLETE   = -5,  // installation suspended or in progress
	INSTALLSTATE_SOURCEABSENT = -4,  // run from source, source is unavailable
	INSTALLSTATE_MOREDATA     = -3,  // return buffer overflow
	INSTALLSTATE_INVALIDARG   = -2,  // invalid function argument
	INSTALLSTATE_UNKNOWN      = -1,  // unrecognized product or feature
	INSTALLSTATE_BROKEN       =  0,  // broken
	INSTALLSTATE_ADVERTISED   =  1,  // advertised feature
	INSTALLSTATE_REMOVED      =  1,  // component being removed (action state, not settable)
	INSTALLSTATE_ABSENT       =  2,  // uninstalled (or action state absent but clients remain)
	INSTALLSTATE_LOCAL        =  3,  // installed on local drive
	INSTALLSTATE_SOURCE       =  4,  // run from source, CD or net
	INSTALLSTATE_DEFAULT      =  5,  // use default, local or source
} INSTALLSTATE;

typedef enum tagUSERINFOSTATE
{
	USERINFOSTATE_MOREDATA   = -3,  // return buffer overflow
	USERINFOSTATE_INVALIDARG = -2,  // invalid function argument
	USERINFOSTATE_UNKNOWN    = -1,  // unrecognized product
	USERINFOSTATE_ABSENT     =  0,  // user info and PID not initialized
	USERINFOSTATE_PRESENT    =  1,  // user info and PID initialized
} USERINFOSTATE;

typedef enum tagINSTALLLEVEL
{
	INSTALLLEVEL_DEFAULT = 0,      // install authored default
	INSTALLLEVEL_MINIMUM = 1,      // install only required features
	INSTALLLEVEL_MAXIMUM = 0xFFFF, // install all features
} INSTALLLEVEL;                   // intermediate levels dependent on authoring

typedef enum tagREINSTALLMODE  // bit flags
{
	REINSTALLMODE_REPAIR           = 0x00000001,  // Reserved bit - currently ignored
	REINSTALLMODE_FILEMISSING      = 0x00000002,  // Reinstall only if file is missing
	REINSTALLMODE_FILEOLDERVERSION = 0x00000004,  // Reinstall if file is missing, or older version
	REINSTALLMODE_FILEEQUALVERSION = 0x00000008,  // Reinstall if file is missing, or equal or older version
	REINSTALLMODE_FILEEXACT        = 0x00000010,  // Reinstall if file is missing, or not exact version
	REINSTALLMODE_FILEVERIFY       = 0x00000020,  // checksum executables, reinstall if missing or corrupt
	REINSTALLMODE_FILEREPLACE      = 0x00000040,  // Reinstall all files, regardless of version
	REINSTALLMODE_MACHINEDATA      = 0x00000080,  // insure required machine reg entries
	REINSTALLMODE_USERDATA         = 0x00000100,  // insure required user reg entries
	REINSTALLMODE_SHORTCUT         = 0x00000200,  // validate shortcuts items
	REINSTALLMODE_PACKAGE          = 0x00000400,  // use re-cache source install package
} REINSTALLMODE;

typedef enum tagINSTALLOGMODE  // bit flags for use with MsiEnableLog and MsiSetExternalUI
{
	INSTALLLOGMODE_FATALEXIT      = (1 << (INSTALLMESSAGE_FATALEXIT      >> 24)),
	INSTALLLOGMODE_ERROR          = (1 << (INSTALLMESSAGE_ERROR          >> 24)),
	INSTALLLOGMODE_WARNING        = (1 << (INSTALLMESSAGE_WARNING        >> 24)),
	INSTALLLOGMODE_USER           = (1 << (INSTALLMESSAGE_USER           >> 24)),
	INSTALLLOGMODE_INFO           = (1 << (INSTALLMESSAGE_INFO           >> 24)),
	INSTALLLOGMODE_RESOLVESOURCE  = (1 << (INSTALLMESSAGE_RESOLVESOURCE  >> 24)),
	INSTALLLOGMODE_OUTOFDISKSPACE = (1 << (INSTALLMESSAGE_OUTOFDISKSPACE >> 24)),
	INSTALLLOGMODE_ACTIONSTART    = (1 << (INSTALLMESSAGE_ACTIONSTART    >> 24)),
	INSTALLLOGMODE_ACTIONDATA     = (1 << (INSTALLMESSAGE_ACTIONDATA     >> 24)),
	INSTALLLOGMODE_COMMONDATA     = (1 << (INSTALLMESSAGE_COMMONDATA     >> 24)),
	INSTALLLOGMODE_PROPERTYDUMP   = (1 << (INSTALLMESSAGE_PROGRESS       >> 24)), // log only
	INSTALLLOGMODE_VERBOSE        = (1 << (INSTALLMESSAGE_INITIALIZE     >> 24)), // log only
	INSTALLLOGMODE_PROGRESS       = (1 << (INSTALLMESSAGE_PROGRESS       >> 24)), // external handler only
	INSTALLLOGMODE_INITIALIZE     = (1 << (INSTALLMESSAGE_INITIALIZE     >> 24)), // external handler only
	INSTALLLOGMODE_TERMINATE      = (1 << (INSTALLMESSAGE_TERMINATE      >> 24)), // external handler only
	INSTALLLOGMODE_SHOWDIALOG     = (1 << (INSTALLMESSAGE_SHOWDIALOG     >> 24)), // external handler only
} INSTALLLOGMODE;

typedef enum tagINSTALLLOGATTRIBUTES // flag attributes for MsiEnableLog
{
	INSTALLLOGATTRIBUTES_APPEND            = (1 << 0),
	INSTALLLOGATTRIBUTES_FLUSHEACHLINE     = (1 << 1),
} INSTALLLOGATTRIBUTES;

typedef enum tagINSTALLFEATUREATTRIBUTE // bit flags
{
	INSTALLFEATUREATTRIBUTE_FAVORLOCAL             = 1 << 0,
	INSTALLFEATUREATTRIBUTE_FAVORSOURCE            = 1 << 1,
	INSTALLFEATUREATTRIBUTE_FOLLOWPARENT           = 1 << 2,
	INSTALLFEATUREATTRIBUTE_FAVORADVERTISE         = 1 << 3,
	INSTALLFEATUREATTRIBUTE_DISALLOWADVERTISE      = 1 << 4,
	INSTALLFEATUREATTRIBUTE_NOUNSUPPORTEDADVERTISE = 1 << 5,
} INSTALLFEATUREATTRIBUTE;

typedef enum tagINSTALLMODE
{
	INSTALLMODE_NOSOURCERESOLUTION   = -3,  // skip source resolution
	INSTALLMODE_NODETECTION          = -2,  // skip detection
	INSTALLMODE_EXISTING             = -1,  // provide, if available
	INSTALLMODE_DEFAULT              =  0,  // install, if absent
} INSTALLMODE;


#define MAX_FEATURE_CHARS  38   // maximum chars in feature name (same as string GUID)


// Product info attributes: advertised information

#define INSTALLPROPERTY_PACKAGENAME           __TEXT("PackageName")
#define INSTALLPROPERTY_TRANSFORMS            __TEXT("Transforms")
#define INSTALLPROPERTY_LANGUAGE              __TEXT("Language")
#define INSTALLPROPERTY_PRODUCTNAME           __TEXT("ProductName")
#define INSTALLPROPERTY_ASSIGNMENTTYPE        __TEXT("AssignmentType")
#if (_WIN32_MSI >= 150)
#define INSTALLPROPERTY_INSTANCETYPE          __TEXT("InstanceType")
#endif //(_WIN32_MSI >= 150)

#define INSTALLPROPERTY_PACKAGECODE           __TEXT("PackageCode")
#define INSTALLPROPERTY_VERSION               __TEXT("Version")
#if (_WIN32_MSI >=  110)
#define INSTALLPROPERTY_PRODUCTICON           __TEXT("ProductIcon")
#endif //(_WIN32_MSI >=  110)

// Product info attributes: installed information

#define INSTALLPROPERTY_INSTALLEDPRODUCTNAME  __TEXT("InstalledProductName")
#define INSTALLPROPERTY_VERSIONSTRING         __TEXT("VersionString")
#define INSTALLPROPERTY_HELPLINK              __TEXT("HelpLink")
#define INSTALLPROPERTY_HELPTELEPHONE         __TEXT("HelpTelephone")
#define INSTALLPROPERTY_INSTALLLOCATION       __TEXT("InstallLocation")
#define INSTALLPROPERTY_INSTALLSOURCE         __TEXT("InstallSource")
#define INSTALLPROPERTY_INSTALLDATE           __TEXT("InstallDate")
#define INSTALLPROPERTY_PUBLISHER             __TEXT("Publisher")
#define INSTALLPROPERTY_LOCALPACKAGE          __TEXT("LocalPackage")
#define INSTALLPROPERTY_URLINFOABOUT          __TEXT("URLInfoAbout")
#define INSTALLPROPERTY_URLUPDATEINFO         __TEXT("URLUpdateInfo")
#define INSTALLPROPERTY_VERSIONMINOR          __TEXT("VersionMinor")
#define INSTALLPROPERTY_VERSIONMAJOR          __TEXT("VersionMajor")

typedef enum tagSCRIPTFLAGS
{
	SCRIPTFLAGS_CACHEINFO                = 0x00000001L,   // set if the icons need to be created/ removed
	SCRIPTFLAGS_SHORTCUTS                = 0x00000004L,   // set if the shortcuts needs to be created/ deleted
	SCRIPTFLAGS_MACHINEASSIGN            = 0x00000008L,   // set if product to be assigned to machine
	SCRIPTFLAGS_REGDATA_CNFGINFO         = 0x00000020L,   // set if the product cnfg mgmt. registry data needs to be written/ removed
	SCRIPTFLAGS_VALIDATE_TRANSFORMS_LIST = 0x00000040L,
#if (_WIN32_MSI >=  110)
	SCRIPTFLAGS_REGDATA_CLASSINFO        = 0x00000080L,   // set if COM classes related app info needs to be  created/ deleted
	SCRIPTFLAGS_REGDATA_EXTENSIONINFO    = 0x00000100L,   // set if extension related app info needs to be  created/ deleted
	SCRIPTFLAGS_REGDATA_APPINFO          = SCRIPTFLAGS_REGDATA_CLASSINFO | SCRIPTFLAGS_REGDATA_EXTENSIONINFO,  // for source level backward compatibility
#else //_WIN32_MSI == 100
	SCRIPTFLAGS_REGDATA_APPINFO          = 0x00000010L,
#endif //(_WIN32_MSI >=  110)
	SCRIPTFLAGS_REGDATA                  = SCRIPTFLAGS_REGDATA_APPINFO | SCRIPTFLAGS_REGDATA_CNFGINFO, // for source level backward compatibility
}SCRIPTFLAGS;


typedef enum tagADVERTISEFLAGS
{
	ADVERTISEFLAGS_MACHINEASSIGN   =    0,   // set if the product is to be machine assigned
	ADVERTISEFLAGS_USERASSIGN      =    1,   // set if the product is to be user assigned
}ADVERTISEFLAGS;

typedef enum tagINSTALLTYPE
{
	INSTALLTYPE_DEFAULT            =    0,   // set to indicate default behavior
	INSTALLTYPE_NETWORK_IMAGE      =    1,   // set to indicate network install
	INSTALLTYPE_SINGLE_INSTANCE    =    2,   // set to indicate a particular instance 
}INSTALLTYPE;

#if (_WIN32_MSI >=  150)

typedef struct _MSIFILEHASHINFO {
	ULONG dwFileHashInfoSize;
	ULONG dwData [ 4 ];
} MSIFILEHASHINFO, *PMSIFILEHASHINFO;

typedef enum tagMSIARCHITECTUREFLAGS
{
	MSIARCHITECTUREFLAGS_X86   = 0x00000001L, // set if creating the script for i386 platform
	MSIARCHITECTUREFLAGS_IA64  = 0x00000002L, // set if creating the script for IA64 platform
}MSIARCHITECTUREFLAGS;

typedef enum tagMSIOPENPACKAGEFLAGS
{
	MSIOPENPACKAGEFLAGS_IGNOREMACHINESTATE = 0x00000001L, // ignore the machine state when creating the engine
}MSIOPENPACKAGEFLAGS;

typedef enum tagMSIADVERTISEOPTIONFLAGS
{
	MSIADVERTISEOPTIONFLAGS_INSTANCE = 0x00000001L, // set if advertising a new instance
}MSIADVERTISEOPTIONFLAGS;

#endif //(_WIN32_MSI >=  150)


#ifdef __cplusplus
extern "C" {
#endif

// --------------------------------------------------------------------------
// Functions to set the UI handling and logging. The UI will be used for error,
// progress, and log messages for all subsequent calls to Installer Service
// API functions that require UI.
// --------------------------------------------------------------------------

// Enable internal UI

INSTALLUILEVEL WINAPI MsiSetInternalUI(
	INSTALLUILEVEL  dwUILevel,     // UI level
	HWND  *phWnd);                   // handle of owner window

// Enable external UI handling, returns any previous handler or NULL if none.
// Messages are designated with a combination of bits from INSTALLLOGMODE enum.

INSTALLUI_HANDLERA WINAPI MsiSetExternalUIA(
	INSTALLUI_HANDLERA puiHandler,   // for progress and error handling 
	DWORD              dwMessageFilter, // bit flags designating messages to handle
	LPVOID             pvContext);   // application context
INSTALLUI_HANDLERW WINAPI MsiSetExternalUIW(
	INSTALLUI_HANDLERW puiHandler,   // for progress and error handling 
	DWORD              dwMessageFilter, // bit flags designating messages to handle
	LPVOID             pvContext);   // application context
#ifdef UNICODE
#define MsiSetExternalUI  MsiSetExternalUIW
#else
#define MsiSetExternalUI  MsiSetExternalUIA
#endif // !UNICODE


// Enable logging to a file for all install sessions for the client process,
// with control over which log messages are passed to the specified log file.
// Messages are designated with a combination of bits from INSTALLLOGMODE enum.

UINT WINAPI MsiEnableLogA(
	DWORD     dwLogMode,           // bit flags designating operations to report
	LPCSTR  szLogFile,           // log file, or NULL to disable logging
	DWORD     dwLogAttributes);    // INSTALLLOGATTRIBUTES flags
UINT WINAPI MsiEnableLogW(
	DWORD     dwLogMode,           // bit flags designating operations to report
	LPCWSTR  szLogFile,           // log file, or NULL to disable logging
	DWORD     dwLogAttributes);    // INSTALLLOGATTRIBUTES flags
#ifdef UNICODE
#define MsiEnableLog  MsiEnableLogW
#else
#define MsiEnableLog  MsiEnableLogA
#endif // !UNICODE

// --------------------------------------------------------------------------
// Functions to query and configure a product as a whole.
// --------------------------------------------------------------------------

// Return the installed state for a product

INSTALLSTATE WINAPI MsiQueryProductStateA(
	LPCSTR  szProduct);
INSTALLSTATE WINAPI MsiQueryProductStateW(
	LPCWSTR  szProduct);
#ifdef UNICODE
#define MsiQueryProductState  MsiQueryProductStateW
#else
#define MsiQueryProductState  MsiQueryProductStateA
#endif // !UNICODE

// Return product info

UINT WINAPI MsiGetProductInfoA(
	LPCSTR   szProduct,      // product code
	LPCSTR   szAttribute,    // attribute name, case-sensitive
	LPSTR    lpValueBuf,     // returned value, NULL if not desired
	DWORD      *pcchValueBuf); // in/out buffer character count
UINT WINAPI MsiGetProductInfoW(
	LPCWSTR   szProduct,      // product code
	LPCWSTR   szAttribute,    // attribute name, case-sensitive
	LPWSTR    lpValueBuf,     // returned value, NULL if not desired
	DWORD      *pcchValueBuf); // in/out buffer character count
#ifdef UNICODE
#define MsiGetProductInfo  MsiGetProductInfoW
#else
#define MsiGetProductInfo  MsiGetProductInfoA
#endif // !UNICODE

// Install a new product.
// Either may be NULL, but the DATABASE property must be specfied

UINT WINAPI MsiInstallProductA(
	LPCSTR      szPackagePath,    // location of package to install
	LPCSTR      szCommandLine);   // command line <property settings>
UINT WINAPI MsiInstallProductW(
	LPCWSTR      szPackagePath,    // location of package to install
	LPCWSTR      szCommandLine);   // command line <property settings>
#ifdef UNICODE
#define MsiInstallProduct  MsiInstallProductW
#else
#define MsiInstallProduct  MsiInstallProductA
#endif // !UNICODE

// Install/uninstall an advertised or installed product
// No action if installed and INSTALLSTATE_DEFAULT specified

UINT WINAPI MsiConfigureProductA(
	LPCSTR      szProduct,        // product code
	int          iInstallLevel,    // how much of the product to install
	INSTALLSTATE eInstallState);   // local/source/default/absent/lock/uncache
UINT WINAPI MsiConfigureProductW(
	LPCWSTR      szProduct,        // product code
	int          iInstallLevel,    // how much of the product to install
	INSTALLSTATE eInstallState);   // local/source/default/absent/lock/uncache
#ifdef UNICODE
#define MsiConfigureProduct  MsiConfigureProductW
#else
#define MsiConfigureProduct  MsiConfigureProductA
#endif // !UNICODE

// Install/uninstall an advertised or installed product
// No action if installed and INSTALLSTATE_DEFAULT specified

UINT WINAPI MsiConfigureProductExA(
	LPCSTR      szProduct,        // product code
	int          iInstallLevel,    // how much of the product to install
	INSTALLSTATE eInstallState,    // local/source/default/absent/lock/uncache
	LPCSTR      szCommandLine);   // command line <property settings>
UINT WINAPI MsiConfigureProductExW(
	LPCWSTR      szProduct,        // product code
	int          iInstallLevel,    // how much of the product to install
	INSTALLSTATE eInstallState,    // local/source/default/absent/lock/uncache
	LPCWSTR      szCommandLine);   // command line <property settings>
#ifdef UNICODE
#define MsiConfigureProductEx  MsiConfigureProductExW
#else
#define MsiConfigureProductEx  MsiConfigureProductExA
#endif // !UNICODE

// Reinstall product, used to validate or correct problems

UINT WINAPI MsiReinstallProductA(
	LPCSTR      szProduct,        // product code
	DWORD         szReinstallMode); // one or more REINSTALLMODE modes
UINT WINAPI MsiReinstallProductW(
	LPCWSTR      szProduct,        // product code
	DWORD         szReinstallMode); // one or more REINSTALLMODE modes
#ifdef UNICODE
#define MsiReinstallProduct  MsiReinstallProductW
#else
#define MsiReinstallProduct  MsiReinstallProductA
#endif // !UNICODE

#if (_WIN32_MSI >=  150)

// Output reg and shortcut info to script file for specified architecture for Assign or Publish
// If dwPlatform is 0, then the script is created based on the current platform (behavior of MsiAdvertiseProduct)
// If dwPlatform specifies a platform, then the script is created as if the current platform is the
//    platform specified in dwPlatform 
// If dwOptions includes MSIADVERTISEOPTIONFLAGS_INSTANCE, then a new instance is advertised. Use of
//    this option requires that szTransforms include the instance transform that changes the product code

UINT WINAPI MsiAdvertiseProductExA(
	LPCSTR	szPackagePath,      // location of package
	LPCSTR    szScriptfilePath,   // if NULL, product is locally advertised
	LPCSTR    szTransforms,       // list of transforms to be applied
	LANGID      lgidLanguage,       // install language
	DWORD       dwPlatform,         // the MSIARCHITECTUREFLAGS that control for which platform
	                                //   to create the script, ignored if szScriptfilePath is NULL
	DWORD       dwOptions);         // the MSIADVERTISEOPTIONSFLAGS that specify extra advertise parameters
UINT WINAPI MsiAdvertiseProductExW(
	LPCWSTR	szPackagePath,      // location of package
	LPCWSTR    szScriptfilePath,   // if NULL, product is locally advertised
	LPCWSTR    szTransforms,       // list of transforms to be applied
	LANGID      lgidLanguage,       // install language
	DWORD       dwPlatform,         // the MSIARCHITECTUREFLAGS that control for which platform
	                                //   to create the script, ignored if szScriptfilePath is NULL
	DWORD       dwOptions);         // the MSIADVERTISEOPTIONSFLAGS that specify extra advertise parameters
#ifdef UNICODE
#define MsiAdvertiseProductEx  MsiAdvertiseProductExW
#else
#define MsiAdvertiseProductEx  MsiAdvertiseProductExA
#endif // !UNICODE

#endif // (_WIN32_MSI >= 150)

// Output reg and shortcut info to script file for Assign or Publish

UINT WINAPI MsiAdvertiseProductA(
	LPCSTR      szPackagePath,    // location of package
	LPCSTR      szScriptfilePath,  // if NULL, product is locally advertised
	LPCSTR      szTransforms,      // list of transforms to be applied
	LANGID        lgidLanguage);     // install language
UINT WINAPI MsiAdvertiseProductW(
	LPCWSTR      szPackagePath,    // location of package
	LPCWSTR      szScriptfilePath,  // if NULL, product is locally advertised
	LPCWSTR      szTransforms,      // list of transforms to be applied
	LANGID        lgidLanguage);     // install language
#ifdef UNICODE
#define MsiAdvertiseProduct  MsiAdvertiseProductW
#else
#define MsiAdvertiseProduct  MsiAdvertiseProductA
#endif // !UNICODE


#if (_WIN32_MSI >=  150)

// Process advertise script file into supplied locations
// If an icon folder is specified, icon files will be placed there
// If an registry key is specified, registry data will be mapped under it
// If fShortcuts is TRUE, shortcuts will be created. If a special folder is
//    returned by SHGetSpecialFolderLocation(?), it will hold the shortcuts.
// if fRemoveItems is TRUE, items that are present will be removed

UINT WINAPI MsiProcessAdvertiseScriptA(
	LPCSTR      szScriptFile,  // path to script from MsiAdvertiseProduct
	LPCSTR      szIconFolder,  // optional path to folder for icon files and transforms
	HKEY         hRegData,      // optional parent registry key
	BOOL         fShortcuts,    // TRUE if shortcuts output to special folder
	BOOL         fRemoveItems); // TRUE if specified items are to be removed
UINT WINAPI MsiProcessAdvertiseScriptW(
	LPCWSTR      szScriptFile,  // path to script from MsiAdvertiseProduct
	LPCWSTR      szIconFolder,  // optional path to folder for icon files and transforms
	HKEY         hRegData,      // optional parent registry key
	BOOL         fShortcuts,    // TRUE if shortcuts output to special folder
	BOOL         fRemoveItems); // TRUE if specified items are to be removed
#ifdef UNICODE
#define MsiProcessAdvertiseScript  MsiProcessAdvertiseScriptW
#else
#define MsiProcessAdvertiseScript  MsiProcessAdvertiseScriptA
#endif // !UNICODE

#endif // (_WIN32_MSI >= 150)


// Process advertise script file using the supplied dwFlags control flags
// if fRemoveItems is TRUE, items that are present will be removed

UINT WINAPI MsiAdvertiseScriptA(
	LPCSTR      szScriptFile,  // path to script from MsiAdvertiseProduct
	DWORD         dwFlags,       // the SCRIPTFLAGS bit flags that control the script execution
	PHKEY         phRegData,     // optional parent registry key
	BOOL          fRemoveItems); // TRUE if specified items are to be removed
UINT WINAPI MsiAdvertiseScriptW(
	LPCWSTR      szScriptFile,  // path to script from MsiAdvertiseProduct
	DWORD         dwFlags,       // the SCRIPTFLAGS bit flags that control the script execution
	PHKEY         phRegData,     // optional parent registry key
	BOOL          fRemoveItems); // TRUE if specified items are to be removed
#ifdef UNICODE
#define MsiAdvertiseScript  MsiAdvertiseScriptW
#else
#define MsiAdvertiseScript  MsiAdvertiseScriptA
#endif // !UNICODE

// Return product info from an installer script file:
//   product code, language, version, readable name, path to package
// Returns TRUE is success, FALSE if szScriptFile is not a valid script file

UINT WINAPI MsiGetProductInfoFromScriptA(
	LPCSTR  szScriptFile,    // path to installer script file
	LPSTR   lpProductBuf39,  // buffer for product code string GUID, 39 chars
	LANGID   *plgidLanguage,  // return language Id
	DWORD    *pdwVersion,     // return version: Maj:Min:Build <8:8:16>
	LPSTR   lpNameBuf,       // buffer to return readable product name
	DWORD    *pcchNameBuf,    // in/out name buffer character count
	LPSTR   lpPackageBuf,   // buffer for path to product package
	DWORD    *pcchPackageBuf);// in/out path buffer character count
UINT WINAPI MsiGetProductInfoFromScriptW(
	LPCWSTR  szScriptFile,    // path to installer script file
	LPWSTR   lpProductBuf39,  // buffer for product code string GUID, 39 chars
	LANGID   *plgidLanguage,  // return language Id
	DWORD    *pdwVersion,     // return version: Maj:Min:Build <8:8:16>
	LPWSTR   lpNameBuf,       // buffer to return readable product name
	DWORD    *pcchNameBuf,    // in/out name buffer character count
	LPWSTR   lpPackageBuf,   // buffer for path to product package
	DWORD    *pcchPackageBuf);// in/out path buffer character count
#ifdef UNICODE
#define MsiGetProductInfoFromScript  MsiGetProductInfoFromScriptW
#else
#define MsiGetProductInfoFromScript  MsiGetProductInfoFromScriptA
#endif // !UNICODE

// Return the product code for a registered component, called once by apps

UINT WINAPI MsiGetProductCodeA(
	LPCSTR   szComponent,   // component Id registered for this product
	LPSTR    lpBuf39);      // returned string GUID, sized for 39 characters
UINT WINAPI MsiGetProductCodeW(
	LPCWSTR   szComponent,   // component Id registered for this product
	LPWSTR    lpBuf39);      // returned string GUID, sized for 39 characters
#ifdef UNICODE
#define MsiGetProductCode  MsiGetProductCodeW
#else
#define MsiGetProductCode  MsiGetProductCodeA
#endif // !UNICODE

// Return the registered user information for an installed product

USERINFOSTATE WINAPI MsiGetUserInfoA(
	LPCSTR  szProduct,        // product code, string GUID
	LPSTR   lpUserNameBuf,    // return user name           
	DWORD    *pcchUserNameBuf, // in/out buffer character count
	LPSTR   lpOrgNameBuf,     // return company name           
	DWORD    *pcchOrgNameBuf,  // in/out buffer character count
	LPSTR   lpSerialBuf,      // return product serial number
	DWORD    *pcchSerialBuf);  // in/out buffer character count
USERINFOSTATE WINAPI MsiGetUserInfoW(
	LPCWSTR  szProduct,        // product code, string GUID
	LPWSTR   lpUserNameBuf,    // return user name           
	DWORD    *pcchUserNameBuf, // in/out buffer character count
	LPWSTR   lpOrgNameBuf,     // return company name           
	DWORD    *pcchOrgNameBuf,  // in/out buffer character count
	LPWSTR   lpSerialBuf,      // return product serial number
	DWORD    *pcchSerialBuf);  // in/out buffer character count
#ifdef UNICODE
#define MsiGetUserInfo  MsiGetUserInfoW
#else
#define MsiGetUserInfo  MsiGetUserInfoA
#endif // !UNICODE

// Obtain and store user info and PID from installation wizard (first run)

UINT WINAPI MsiCollectUserInfoA(
	LPCSTR  szProduct);     // product code, string GUID
UINT WINAPI MsiCollectUserInfoW(
	LPCWSTR  szProduct);     // product code, string GUID
#ifdef UNICODE
#define MsiCollectUserInfo  MsiCollectUserInfoW
#else
#define MsiCollectUserInfo  MsiCollectUserInfoA
#endif // !UNICODE

// --------------------------------------------------------------------------
// Functions to patch existing products
// --------------------------------------------------------------------------

// Patch all possible installed products.

UINT WINAPI MsiApplyPatchA(
	LPCSTR      szPatchPackage,   // location of patch package
	LPCSTR      szInstallPackage, // location of package for install to patch <optional>
	INSTALLTYPE   eInstallType,     // type of install to patch
	LPCSTR      szCommandLine);   // command line <property settings>
UINT WINAPI MsiApplyPatchW(
	LPCWSTR      szPatchPackage,   // location of patch package
	LPCWSTR      szInstallPackage, // location of package for install to patch <optional>
	INSTALLTYPE   eInstallType,     // type of install to patch
	LPCWSTR      szCommandLine);   // command line <property settings>
#ifdef UNICODE
#define MsiApplyPatch  MsiApplyPatchW
#else
#define MsiApplyPatch  MsiApplyPatchA
#endif // !UNICODE

// Return patch info

UINT WINAPI MsiGetPatchInfoA(
	LPCSTR   szPatch,        // patch code
	LPCSTR   szAttribute,    // attribute name, case-sensitive
	LPSTR    lpValueBuf,     // returned value, NULL if not desired
	DWORD      *pcchValueBuf); // in/out buffer character count
UINT WINAPI MsiGetPatchInfoW(
	LPCWSTR   szPatch,        // patch code
	LPCWSTR   szAttribute,    // attribute name, case-sensitive
	LPWSTR    lpValueBuf,     // returned value, NULL if not desired
	DWORD      *pcchValueBuf); // in/out buffer character count
#ifdef UNICODE
#define MsiGetPatchInfo  MsiGetPatchInfoW
#else
#define MsiGetPatchInfo  MsiGetPatchInfoA
#endif // !UNICODE

// Enumerate all patches for a product

UINT WINAPI MsiEnumPatchesA(
	LPCSTR szProduct,
	DWORD    iPatchIndex,
	LPSTR  lpPatchBuf,
	LPSTR  lpTransformsBuf,
	DWORD    *pcchTransformsBuf);
UINT WINAPI MsiEnumPatchesW(
	LPCWSTR szProduct,
	DWORD    iPatchIndex,
	LPWSTR  lpPatchBuf,
	LPWSTR  lpTransformsBuf,
	DWORD    *pcchTransformsBuf);
#ifdef UNICODE
#define MsiEnumPatches  MsiEnumPatchesW
#else
#define MsiEnumPatches  MsiEnumPatchesA
#endif // !UNICODE

// --------------------------------------------------------------------------
// Functions to query and configure a feature within a product.
// --------------------------------------------------------------------------

// Return the installed state for a product feature

INSTALLSTATE WINAPI MsiQueryFeatureStateA(
	LPCSTR  szProduct,
	LPCSTR  szFeature);
INSTALLSTATE WINAPI MsiQueryFeatureStateW(
	LPCWSTR  szProduct,
	LPCWSTR  szFeature);
#ifdef UNICODE
#define MsiQueryFeatureState  MsiQueryFeatureStateW
#else
#define MsiQueryFeatureState  MsiQueryFeatureStateA
#endif // !UNICODE

// Indicate intent to use a product feature, increments usage count
// Prompts for CD if not loaded, does not install feature

INSTALLSTATE WINAPI MsiUseFeatureA(
	LPCSTR  szProduct,
	LPCSTR  szFeature);
INSTALLSTATE WINAPI MsiUseFeatureW(
	LPCWSTR  szProduct,
	LPCWSTR  szFeature);
#ifdef UNICODE
#define MsiUseFeature  MsiUseFeatureW
#else
#define MsiUseFeature  MsiUseFeatureA
#endif // !UNICODE

// Indicate intent to use a product feature, increments usage count
// Prompts for CD if not loaded, does not install feature
// Allows for bypassing component detection where performance is critical

INSTALLSTATE WINAPI MsiUseFeatureExA(
	LPCSTR  szProduct,          // product code
	LPCSTR  szFeature,          // feature ID
	DWORD     dwInstallMode,      // INSTALLMODE_NODETECTION, else 0
	DWORD     dwReserved);        // reserved, must be 0
INSTALLSTATE WINAPI MsiUseFeatureExW(
	LPCWSTR  szProduct,          // product code
	LPCWSTR  szFeature,          // feature ID
	DWORD     dwInstallMode,      // INSTALLMODE_NODETECTION, else 0
	DWORD     dwReserved);        // reserved, must be 0
#ifdef UNICODE
#define MsiUseFeatureEx  MsiUseFeatureExW
#else
#define MsiUseFeatureEx  MsiUseFeatureExA
#endif // !UNICODE

// Return the usage metrics for a product feature

UINT WINAPI MsiGetFeatureUsageA(
	LPCSTR      szProduct,        // product code
	LPCSTR      szFeature,        // feature ID
	DWORD        *pdwUseCount,     // returned use count
	WORD         *pwDateUsed);     // last date used (DOS date format)
UINT WINAPI MsiGetFeatureUsageW(
	LPCWSTR      szProduct,        // product code
	LPCWSTR      szFeature,        // feature ID
	DWORD        *pdwUseCount,     // returned use count
	WORD         *pwDateUsed);     // last date used (DOS date format)
#ifdef UNICODE
#define MsiGetFeatureUsage  MsiGetFeatureUsageW
#else
#define MsiGetFeatureUsage  MsiGetFeatureUsageA
#endif // !UNICODE

// Force the installed state for a product feature

UINT WINAPI MsiConfigureFeatureA(
	LPCSTR  szProduct,
	LPCSTR  szFeature,
	INSTALLSTATE eInstallState);   // local/source/default/absent/lock/uncache
UINT WINAPI MsiConfigureFeatureW(
	LPCWSTR  szProduct,
	LPCWSTR  szFeature,
	INSTALLSTATE eInstallState);   // local/source/default/absent/lock/uncache
#ifdef UNICODE
#define MsiConfigureFeature  MsiConfigureFeatureW
#else
#define MsiConfigureFeature  MsiConfigureFeatureA
#endif // !UNICODE


// Reinstall feature, used to validate or correct problems

UINT WINAPI MsiReinstallFeatureA(
	LPCSTR      szProduct,        // product code
	LPCSTR      szFeature,        // feature ID, NULL for entire product
	DWORD         dwReinstallMode); // one or more REINSTALLMODE modes
UINT WINAPI MsiReinstallFeatureW(
	LPCWSTR      szProduct,        // product code
	LPCWSTR      szFeature,        // feature ID, NULL for entire product
	DWORD         dwReinstallMode); // one or more REINSTALLMODE modes
#ifdef UNICODE
#define MsiReinstallFeature  MsiReinstallFeatureW
#else
#define MsiReinstallFeature  MsiReinstallFeatureA
#endif // !UNICODE

// --------------------------------------------------------------------------
// Functions to return a path to a particular component.
// The state of the feature being used should have been checked previously.
// --------------------------------------------------------------------------

// Return full component path, performing any necessary installation
// calls MsiQueryFeatureState to detect that all components are installed
// then calls MsiConfigureFeature if any of its components are uninstalled
// then calls MsiLocateComponent to obtain the path the its key file

UINT WINAPI MsiProvideComponentA(
	LPCSTR     szProduct,    // product code in case install required
	LPCSTR     szFeature,    // feature ID in case install required
	LPCSTR     szComponent,  // component ID
	DWORD        dwInstallMode,// either of type INSTALLMODE or a combination of the REINSTALLMODE flags
	LPSTR      lpPathBuf,    // returned path, NULL if not desired
	DWORD       *pcchPathBuf);// in/out buffer character count
UINT WINAPI MsiProvideComponentW(
	LPCWSTR     szProduct,    // product code in case install required
	LPCWSTR     szFeature,    // feature ID in case install required
	LPCWSTR     szComponent,  // component ID
	DWORD        dwInstallMode,// either of type INSTALLMODE or a combination of the REINSTALLMODE flags
	LPWSTR      lpPathBuf,    // returned path, NULL if not desired
	DWORD       *pcchPathBuf);// in/out buffer character count
#ifdef UNICODE
#define MsiProvideComponent  MsiProvideComponentW
#else
#define MsiProvideComponent  MsiProvideComponentA
#endif // !UNICODE

// Return full component path for a qualified component, performing any necessary installation. 
// Prompts for source if necessary and increments the usage count for the feature.

UINT WINAPI MsiProvideQualifiedComponentA(
	LPCSTR     szCategory,   // component category ID
	LPCSTR     szQualifier,  // specifies which component to access
	DWORD        dwInstallMode,// either of type INSTALLMODE or a combination of the REINSTALLMODE flags
	LPSTR      lpPathBuf,    // returned path, NULL if not desired
	DWORD       *pcchPathBuf); // in/out buffer character count
UINT WINAPI MsiProvideQualifiedComponentW(
	LPCWSTR     szCategory,   // component category ID
	LPCWSTR     szQualifier,  // specifies which component to access
	DWORD        dwInstallMode,// either of type INSTALLMODE or a combination of the REINSTALLMODE flags
	LPWSTR      lpPathBuf,    // returned path, NULL if not desired
	DWORD       *pcchPathBuf); // in/out buffer character count
#ifdef UNICODE
#define MsiProvideQualifiedComponent  MsiProvideQualifiedComponentW
#else
#define MsiProvideQualifiedComponent  MsiProvideQualifiedComponentA
#endif // !UNICODE

// Return full component path for a qualified component, performing any necessary installation. 
// Prompts for source if necessary and increments the usage count for the feature.
// The szProduct parameter specifies the product to match that has published the qualified
// component. If null, this API works the same as MsiProvideQualifiedComponent. 

UINT WINAPI MsiProvideQualifiedComponentExA(
	LPCSTR     szCategory,   // component category ID
	LPCSTR     szQualifier,  // specifies which component to access
	DWORD        dwInstallMode,// either of type INSTALLMODE or a combination of the REINSTALLMODE flags
	LPCSTR     szProduct,    // the product code 
	DWORD        dwUnused1,    // not used, must be zero
	DWORD        dwUnused2,    // not used, must be zero
	LPSTR      lpPathBuf,    // returned path, NULL if not desired
	DWORD       *pcchPathBuf); // in/out buffer character count
UINT WINAPI MsiProvideQualifiedComponentExW(
	LPCWSTR     szCategory,   // component category ID
	LPCWSTR     szQualifier,  // specifies which component to access
	DWORD        dwInstallMode,// either of type INSTALLMODE or a combination of the REINSTALLMODE flags
	LPCWSTR     szProduct,    // the product code 
	DWORD        dwUnused1,    // not used, must be zero
	DWORD        dwUnused2,    // not used, must be zero
	LPWSTR      lpPathBuf,    // returned path, NULL if not desired
	DWORD       *pcchPathBuf); // in/out buffer character count
#ifdef UNICODE
#define MsiProvideQualifiedComponentEx  MsiProvideQualifiedComponentExW
#else
#define MsiProvideQualifiedComponentEx  MsiProvideQualifiedComponentExA
#endif // !UNICODE

// Return full path to an installed component

INSTALLSTATE WINAPI MsiGetComponentPathA(
	LPCSTR   szProduct,   // product code for client product
	LPCSTR   szComponent, // component Id, string GUID
	LPSTR    lpPathBuf,   // returned path
	DWORD     *pcchBuf);    // in/out buffer character count
INSTALLSTATE WINAPI MsiGetComponentPathW(
	LPCWSTR   szProduct,   // product code for client product
	LPCWSTR   szComponent, // component Id, string GUID
	LPWSTR    lpPathBuf,   // returned path
	DWORD     *pcchBuf);    // in/out buffer character count
#ifdef UNICODE
#define MsiGetComponentPath  MsiGetComponentPathW
#else
#define MsiGetComponentPath  MsiGetComponentPathA
#endif // !UNICODE

#if (_WIN32_MSI >= 150)

#define MSIASSEMBLYINFO_NETASSEMBLY   0 // Net assemblies
#define MSIASSEMBLYINFO_WIN32ASSEMBLY 1 // Win32 assemblies

// Return full component path for an assembly installed via the WI, performing any necessary installation. 
// Prompts for source if necessary and increments the usage count for the feature.
// The szAssemblyName parameter specifies the stringized assembly name. 
// The szAppContext is the full path to the .cfg file or the app exe to which the assembly being requested 
// has been privatised to, which is null for global assemblies

UINT WINAPI MsiProvideAssemblyA(
	LPCSTR    szAssemblyName,   // stringized assembly name
	LPCSTR    szAppContext,  // specifies the full path to the parent asm's .cfg file, null for global assemblies
	DWORD       dwInstallMode,// either of type INSTALLMODE or a combination of the REINSTALLMODE flags
	DWORD       dwAssemblyInfo,  // assembly info, including assembly type
	LPSTR     lpPathBuf,    // returned path, NULL if not desired
	DWORD       *pcchPathBuf); // in/out buffer character count
UINT WINAPI MsiProvideAssemblyW(
	LPCWSTR    szAssemblyName,   // stringized assembly name
	LPCWSTR    szAppContext,  // specifies the full path to the parent asm's .cfg file, null for global assemblies
	DWORD       dwInstallMode,// either of type INSTALLMODE or a combination of the REINSTALLMODE flags
	DWORD       dwAssemblyInfo,  // assembly info, including assembly type
	LPWSTR     lpPathBuf,    // returned path, NULL if not desired
	DWORD       *pcchPathBuf); // in/out buffer character count
#ifdef UNICODE
#define MsiProvideAssembly  MsiProvideAssemblyW
#else
#define MsiProvideAssembly  MsiProvideAssemblyA
#endif // !UNICODE

#endif //(_WIN32_MSI >=  150)


// --------------------------------------------------------------------------
// Functions to iterate registered products, features, and components.
// As with reg keys, they accept a 0-based index into the enumeration.
// --------------------------------------------------------------------------

// Enumerate the registered products, either installed or advertised

UINT WINAPI MsiEnumProductsA(
	DWORD     iProductIndex,    // 0-based index into registered products
	LPSTR   lpProductBuf);    // buffer of char count: 39 (size of string GUID)
UINT WINAPI MsiEnumProductsW(
	DWORD     iProductIndex,    // 0-based index into registered products
	LPWSTR   lpProductBuf);    // buffer of char count: 39 (size of string GUID)
#ifdef UNICODE
#define MsiEnumProducts  MsiEnumProductsW
#else
#define MsiEnumProducts  MsiEnumProductsA
#endif // !UNICODE

#if (_WIN32_MSI >=  110)

// Enumerate products with given upgrade code

UINT WINAPI MsiEnumRelatedProductsA(
	LPCSTR  lpUpgradeCode,    // upgrade code of products to enumerate
	DWORD     dwReserved,       // reserved, must be 0
	DWORD     iProductIndex,    // 0-based index into registered products
	LPSTR   lpProductBuf);    // buffer of char count: 39 (size of string GUID)
UINT WINAPI MsiEnumRelatedProductsW(
	LPCWSTR  lpUpgradeCode,    // upgrade code of products to enumerate
	DWORD     dwReserved,       // reserved, must be 0
	DWORD     iProductIndex,    // 0-based index into registered products
	LPWSTR   lpProductBuf);    // buffer of char count: 39 (size of string GUID)
#ifdef UNICODE
#define MsiEnumRelatedProducts  MsiEnumRelatedProductsW
#else
#define MsiEnumRelatedProducts  MsiEnumRelatedProductsA
#endif // !UNICODE

#endif //(_WIN32_MSI >=  110)

// Enumerate the advertised features for a given product.
// If parent is not required, supplying NULL will improve performance.

UINT WINAPI MsiEnumFeaturesA(
	LPCSTR  szProduct,
	DWORD     iFeatureIndex,  // 0-based index into published features
	LPSTR   lpFeatureBuf,   // feature name buffer,   size=MAX_FEATURE_CHARS+1
	LPSTR   lpParentBuf);   // parent feature buffer, size=MAX_FEATURE_CHARS+1
UINT WINAPI MsiEnumFeaturesW(
	LPCWSTR  szProduct,
	DWORD     iFeatureIndex,  // 0-based index into published features
	LPWSTR   lpFeatureBuf,   // feature name buffer,   size=MAX_FEATURE_CHARS+1
	LPWSTR   lpParentBuf);   // parent feature buffer, size=MAX_FEATURE_CHARS+1
#ifdef UNICODE
#define MsiEnumFeatures  MsiEnumFeaturesW
#else
#define MsiEnumFeatures  MsiEnumFeaturesA
#endif // !UNICODE

// Enumerate the installed components for all products

UINT WINAPI MsiEnumComponentsA(
	DWORD    iComponentIndex,  // 0-based index into installed components
	LPSTR   lpComponentBuf);  // buffer of char count: 39 (size of string GUID)
UINT WINAPI MsiEnumComponentsW(
	DWORD    iComponentIndex,  // 0-based index into installed components
	LPWSTR   lpComponentBuf);  // buffer of char count: 39 (size of string GUID)
#ifdef UNICODE
#define MsiEnumComponents  MsiEnumComponentsW
#else
#define MsiEnumComponents  MsiEnumComponentsA
#endif // !UNICODE

// Enumerate the client products for a component

UINT WINAPI MsiEnumClientsA(
	LPCSTR  szComponent,
	DWORD     iProductIndex,    // 0-based index into client products
	LPSTR   lpProductBuf);    // buffer of char count: 39 (size of string GUID)
UINT WINAPI MsiEnumClientsW(
	LPCWSTR  szComponent,
	DWORD     iProductIndex,    // 0-based index into client products
	LPWSTR   lpProductBuf);    // buffer of char count: 39 (size of string GUID)
#ifdef UNICODE
#define MsiEnumClients  MsiEnumClientsW
#else
#define MsiEnumClients  MsiEnumClientsA
#endif // !UNICODE

// Enumerate the qualifiers for an advertised component.

UINT WINAPI MsiEnumComponentQualifiersA(
	LPCSTR   szComponent,         // generic component ID that is qualified
	DWORD     iIndex,	           // 0-based index into qualifiers
	LPSTR    lpQualifierBuf,      // qualifier buffer
	DWORD     *pcchQualifierBuf,   // in/out qualifier buffer character count
	LPSTR    lpApplicationDataBuf,    // description buffer
	DWORD     *pcchApplicationDataBuf); // in/out description buffer character count
UINT WINAPI MsiEnumComponentQualifiersW(
	LPCWSTR   szComponent,         // generic component ID that is qualified
	DWORD     iIndex,	           // 0-based index into qualifiers
	LPWSTR    lpQualifierBuf,      // qualifier buffer
	DWORD     *pcchQualifierBuf,   // in/out qualifier buffer character count
	LPWSTR    lpApplicationDataBuf,    // description buffer
	DWORD     *pcchApplicationDataBuf); // in/out description buffer character count
#ifdef UNICODE
#define MsiEnumComponentQualifiers  MsiEnumComponentQualifiersW
#else
#define MsiEnumComponentQualifiers  MsiEnumComponentQualifiersA
#endif // !UNICODE

// --------------------------------------------------------------------------
// Functions to obtain product or package information.
// --------------------------------------------------------------------------

// Open the installation for a product to obtain detailed information

UINT WINAPI MsiOpenProductA(
	LPCSTR   szProduct,    // product code
	MSIHANDLE  *hProduct);   // returned product handle, must be closed
UINT WINAPI MsiOpenProductW(
	LPCWSTR   szProduct,    // product code
	MSIHANDLE  *hProduct);   // returned product handle, must be closed
#ifdef UNICODE
#define MsiOpenProduct  MsiOpenProductW
#else
#define MsiOpenProduct  MsiOpenProductA
#endif // !UNICODE

// Open a product package in order to access product properties

UINT WINAPI MsiOpenPackageA(
	LPCSTR    szPackagePath,     // path to package, or database handle: #nnnn
	MSIHANDLE  *hProduct);         // returned product handle, must be closed
UINT WINAPI MsiOpenPackageW(
	LPCWSTR    szPackagePath,     // path to package, or database handle: #nnnn
	MSIHANDLE  *hProduct);         // returned product handle, must be closed
#ifdef UNICODE
#define MsiOpenPackage  MsiOpenPackageW
#else
#define MsiOpenPackage  MsiOpenPackageA
#endif // !UNICODE

#if (_WIN32_MSI >=  150)

// Open a product package in order to access product properties
// Option to create a "safe" engine that does not look at machine state
//  and does not allow for modification of machine state

UINT WINAPI MsiOpenPackageExA(
	LPCSTR   szPackagePath, // path to package, or database handle: #nnnn
	DWORD      dwOptions,     // options flags to indicate whether or not to ignore machine state
	MSIHANDLE *hProduct);     // returned product handle, must be closed
UINT WINAPI MsiOpenPackageExW(
	LPCWSTR   szPackagePath, // path to package, or database handle: #nnnn
	DWORD      dwOptions,     // options flags to indicate whether or not to ignore machine state
	MSIHANDLE *hProduct);     // returned product handle, must be closed
#ifdef UNICODE
#define MsiOpenPackageEx  MsiOpenPackageExW
#else
#define MsiOpenPackageEx  MsiOpenPackageExA
#endif // !UNICODE

#endif //(_WIN32_MSI >= 150)

// Provide the value for an installation property.

UINT WINAPI MsiGetProductPropertyA(
	MSIHANDLE   hProduct,       // product handle obtained from MsiOpenProduct
	LPCSTR    szProperty,     // property name, case-sensitive
	LPSTR     lpValueBuf,     // returned value, NULL if not desired
	DWORD      *pcchValueBuf); // in/out buffer character count
UINT WINAPI MsiGetProductPropertyW(
	MSIHANDLE   hProduct,       // product handle obtained from MsiOpenProduct
	LPCWSTR    szProperty,     // property name, case-sensitive
	LPWSTR     lpValueBuf,     // returned value, NULL if not desired
	DWORD      *pcchValueBuf); // in/out buffer character count
#ifdef UNICODE
#define MsiGetProductProperty  MsiGetProductPropertyW
#else
#define MsiGetProductProperty  MsiGetProductPropertyA
#endif // !UNICODE


// Determine whether a file is a package
// Returns ERROR_SUCCESS if file is a package.

UINT WINAPI MsiVerifyPackageA(
	LPCSTR      szPackagePath);   // location of package
UINT WINAPI MsiVerifyPackageW(
	LPCWSTR      szPackagePath);   // location of package
#ifdef UNICODE
#define MsiVerifyPackage  MsiVerifyPackageW
#else
#define MsiVerifyPackage  MsiVerifyPackageA
#endif // !UNICODE


// Provide descriptive information for product feature: title and description.
// Returns the install level for the feature, or -1 if feature is unknown.
//   0 = feature is not available on this machine
//   1 = highest priority, feature installed if parent is installed
//  >1 = decreasing priority, feature installation based on InstallLevel property

UINT WINAPI MsiGetFeatureInfoA(
	MSIHANDLE   hProduct,       // product handle obtained from MsiOpenProduct
	LPCSTR    szFeature,      // feature name
	DWORD      *lpAttributes,  // attribute flags for the feature, using INSTALLFEATUREATTRIBUTE
	LPSTR     lpTitleBuf,     // returned localized name, NULL if not desired
	DWORD      *pcchTitleBuf,  // in/out buffer character count
	LPSTR     lpHelpBuf,      // returned description, NULL if not desired
	DWORD      *pcchHelpBuf);  // in/out buffer character count
UINT WINAPI MsiGetFeatureInfoW(
	MSIHANDLE   hProduct,       // product handle obtained from MsiOpenProduct
	LPCWSTR    szFeature,      // feature name
	DWORD      *lpAttributes,  // attribute flags for the feature, using INSTALLFEATUREATTRIBUTE
	LPWSTR     lpTitleBuf,     // returned localized name, NULL if not desired
	DWORD      *pcchTitleBuf,  // in/out buffer character count
	LPWSTR     lpHelpBuf,      // returned description, NULL if not desired
	DWORD      *pcchHelpBuf);  // in/out buffer character count
#ifdef UNICODE
#define MsiGetFeatureInfo  MsiGetFeatureInfoW
#else
#define MsiGetFeatureInfo  MsiGetFeatureInfoA
#endif // !UNICODE

// --------------------------------------------------------------------------
// Functions to access or install missing components and files.
// These should be used as a last resort.
// --------------------------------------------------------------------------

// Install a component unexpectedly missing, provided only for error recovery
// This would typically occur due to failue to establish feature availability
// The product feature having the smallest incremental cost is installed

UINT WINAPI MsiInstallMissingComponentA(
	LPCSTR      szProduct,        // product code
	LPCSTR      szComponent,      // component Id, string GUID
	INSTALLSTATE eInstallState);  // local/source/default, absent invalid
UINT WINAPI MsiInstallMissingComponentW(
	LPCWSTR      szProduct,        // product code
	LPCWSTR      szComponent,      // component Id, string GUID
	INSTALLSTATE eInstallState);  // local/source/default, absent invalid
#ifdef UNICODE
#define MsiInstallMissingComponent  MsiInstallMissingComponentW
#else
#define MsiInstallMissingComponent  MsiInstallMissingComponentA
#endif // !UNICODE

// Install a file unexpectedly missing, provided only for error recovery
// This would typically occur due to failue to establish feature availability
// The missing component is determined from the product's File table, then
// the product feature having the smallest incremental cost is installed

UINT WINAPI MsiInstallMissingFileA(
	LPCSTR      szProduct,        // product code
	LPCSTR      szFile);          // file name, without path
UINT WINAPI MsiInstallMissingFileW(
	LPCWSTR      szProduct,        // product code
	LPCWSTR      szFile);          // file name, without path
#ifdef UNICODE
#define MsiInstallMissingFile  MsiInstallMissingFileW
#else
#define MsiInstallMissingFile  MsiInstallMissingFileA
#endif // !UNICODE

// Return full path to an installed component without a product code
// This function attempts to determine the product using MsiGetProductCode
// but is not guaranteed to find the correct product for the caller.
// MsiGetComponentPath should always be called when possible.

INSTALLSTATE WINAPI MsiLocateComponentA(
	LPCSTR szComponent,  // component Id, string GUID
	LPSTR  lpPathBuf,    // returned path
	DWORD   *pcchBuf);    // in/out buffer character count
INSTALLSTATE WINAPI MsiLocateComponentW(
	LPCWSTR szComponent,  // component Id, string GUID
	LPWSTR  lpPathBuf,    // returned path
	DWORD   *pcchBuf);    // in/out buffer character count
#ifdef UNICODE
#define MsiLocateComponent  MsiLocateComponentW
#else
#define MsiLocateComponent  MsiLocateComponentA
#endif // !UNICODE

#if (_WIN32_MSI >=  110)

// --------------------------------------------------------------------------
// Functions used to manage the list of valid sources.
// --------------------------------------------------------------------------

// Opens the list of sources for the specified user's install of the product
// and removes all network sources from the list. A NULL or empty value for
// the user name indicates the per-machine install.

UINT WINAPI MsiSourceListClearAllA(
	LPCSTR szProduct,          // product code
	LPCSTR szUserName,         // user name or NULL/empty for per-machine
	DWORD    dwReserved);        // reserved - must be 0
UINT WINAPI MsiSourceListClearAllW(
	LPCWSTR szProduct,          // product code
	LPCWSTR szUserName,         // user name or NULL/empty for per-machine
	DWORD    dwReserved);        // reserved - must be 0
#ifdef UNICODE
#define MsiSourceListClearAll  MsiSourceListClearAllW
#else
#define MsiSourceListClearAll  MsiSourceListClearAllA
#endif // !UNICODE

// Opens the list of sources for the specified user's install of the product
// and adds the provided source as a new network source. A NULL or empty 
// value for the user name indicates the per-machine install.

UINT WINAPI MsiSourceListAddSourceA(
	LPCSTR szProduct,          // product code
	LPCSTR szUserName,         // user name or NULL/empty for per-machine
	DWORD    dwReserved,         // reserved - must be 0
	LPCSTR szSource);          // new source
UINT WINAPI MsiSourceListAddSourceW(
	LPCWSTR szProduct,          // product code
	LPCWSTR szUserName,         // user name or NULL/empty for per-machine
	DWORD    dwReserved,         // reserved - must be 0
	LPCWSTR szSource);          // new source
#ifdef UNICODE
#define MsiSourceListAddSource  MsiSourceListAddSourceW
#else
#define MsiSourceListAddSource  MsiSourceListAddSourceA
#endif // !UNICODE

// Forces the installer to reevaluate the list of sources the next time that
// the specified product needs a source.

UINT WINAPI MsiSourceListForceResolutionA(
	LPCSTR szProduct,          // product code
	LPCSTR szUserName,         // user name or NULL/empty for per-machine
	DWORD    dwReserved);        // reserved - must be 0
UINT WINAPI MsiSourceListForceResolutionW(
	LPCWSTR szProduct,          // product code
	LPCWSTR szUserName,         // user name or NULL/empty for per-machine
	DWORD    dwReserved);        // reserved - must be 0
#ifdef UNICODE
#define MsiSourceListForceResolution  MsiSourceListForceResolutionW
#else
#define MsiSourceListForceResolution  MsiSourceListForceResolutionA
#endif // !UNICODE
	
#endif //(_WIN32_MSI >=  110)

// --------------------------------------------------------------------------
// Utility functions
// --------------------------------------------------------------------------

// Give the version string and language for a specified file

UINT WINAPI MsiGetFileVersionA(
	LPCSTR    szFilePath,       // path to the file
	LPSTR     lpVersionBuf,     // returned version string
	DWORD      *pcchVersionBuf,   // in/out buffer byte count
	LPSTR     lpLangBuf,        // returned language string
	DWORD       *pcchLangBuf);    // in/out buffer byte count
UINT WINAPI MsiGetFileVersionW(
	LPCWSTR    szFilePath,       // path to the file
	LPWSTR     lpVersionBuf,     // returned version string
	DWORD      *pcchVersionBuf,   // in/out buffer byte count
	LPWSTR     lpLangBuf,        // returned language string
	DWORD       *pcchLangBuf);    // in/out buffer byte count
#ifdef UNICODE
#define MsiGetFileVersion  MsiGetFileVersionW
#else
#define MsiGetFileVersion  MsiGetFileVersionA
#endif // !UNICODE


#if (_WIN32_MSI >=  150)

UINT WINAPI MsiGetFileHashA(
	LPCSTR         szFilePath,  // path to the file
	DWORD            dwOptions,   // options
	PMSIFILEHASHINFO pHash);      // returned file hash info
UINT WINAPI MsiGetFileHashW(
	LPCWSTR         szFilePath,  // path to the file
	DWORD            dwOptions,   // options
	PMSIFILEHASHINFO pHash);      // returned file hash info
#ifdef UNICODE
#define MsiGetFileHash  MsiGetFileHashW
#else
#define MsiGetFileHash  MsiGetFileHashA
#endif // !UNICODE

#endif //(_WIN32_MSI >=  150)

#if (_WIN32_MSI >= 150)
#ifndef _MSI_NO_CRYPTO

HRESULT WINAPI MsiGetFileSignatureInformationA(
	LPCSTR	 szSignedObjectPath, // path to the signed object
	DWORD            dwFlags,            // special extra error case flags
	PCCERT_CONTEXT  *ppcCertContext,     // returned signer cert context
	BYTE            *pbHashData,         // returned hash buffer, NULL if not desired
	DWORD           *pcbHashData);       // in/out buffer byte count
HRESULT WINAPI MsiGetFileSignatureInformationW(
	LPCWSTR	 szSignedObjectPath, // path to the signed object
	DWORD            dwFlags,            // special extra error case flags
	PCCERT_CONTEXT  *ppcCertContext,     // returned signer cert context
	BYTE            *pbHashData,         // returned hash buffer, NULL if not desired
	DWORD           *pcbHashData);       // in/out buffer byte count
#ifdef UNICODE
#define MsiGetFileSignatureInformation  MsiGetFileSignatureInformationW
#else
#define MsiGetFileSignatureInformation  MsiGetFileSignatureInformationA
#endif // !UNICODE

// By default, when only requesting the certificate context, an invalid hash
// in the digital signature is not a fatal error.  Set this flag in the dwFlags
// parameter to make the TRUST_E_BAD_DIGEST error fatal.
#define MSI_INVALID_HASH_IS_FATAL 0x1

#endif// _MSI_NO_CRYPTO
#endif //(_WIN32_MSI >= 150)

#if (_WIN32_MSI >=  110)

// examine a shortcut, and retrieve its descriptor information 
// if available.

UINT WINAPI MsiGetShortcutTargetA(
	LPCSTR    szShortcutPath,    // full file path for the shortcut
	LPSTR     szProductCode,     // returned product code   - GUID
	LPSTR     szFeatureId,       // returned Feature Id.
	LPSTR     szComponentCode);  // returned component code - GUID
UINT WINAPI MsiGetShortcutTargetW(
	LPCWSTR    szShortcutPath,    // full file path for the shortcut
	LPWSTR     szProductCode,     // returned product code   - GUID
	LPWSTR     szFeatureId,       // returned Feature Id.
	LPWSTR     szComponentCode);  // returned component code - GUID
#ifdef UNICODE
#define MsiGetShortcutTarget  MsiGetShortcutTargetW
#else
#define MsiGetShortcutTarget  MsiGetShortcutTargetA
#endif // !UNICODE

#endif //(_WIN32_MSI >=  110)

#if (_WIN32_MSI >=  110)

// checks to see if a product is managed
// checks per-machine if called from system context, per-user if from
// user context
UINT WINAPI MsiIsProductElevatedA(
	LPCSTR szProduct, // product code
	BOOL *pfElevated);  // result   
// checks to see if a product is managed
// checks per-machine if called from system context, per-user if from
// user context
UINT WINAPI MsiIsProductElevatedW(
	LPCWSTR szProduct, // product code
	BOOL *pfElevated);  // result   
#ifdef UNICODE
#define MsiIsProductElevated  MsiIsProductElevatedW
#else
#define MsiIsProductElevated  MsiIsProductElevatedA
#endif // !UNICODE

#endif //(_WIN32_MSI >=  110)


// --------------------------------------------------------------------------
// Internal state migration APIs.
// --------------------------------------------------------------------------


#ifdef __cplusplus
}
#endif

// --------------------------------------------------------------------------
// Error codes for installer access functions - until merged to winerr.h
// --------------------------------------------------------------------------

#ifndef ERROR_INSTALL_FAILURE
#define ERROR_INSTALL_USEREXIT      1602L  // User cancel installation.
#define ERROR_INSTALL_FAILURE       1603L  // Fatal error during installation.
#define ERROR_INSTALL_SUSPEND       1604L  // Installation suspended, incomplete.
// LOCALIZE BEGIN:
#define ERROR_UNKNOWN_PRODUCT       1605L  // This action is only valid for products that are currently installed.
// LOCALIZE END
#define ERROR_UNKNOWN_FEATURE       1606L  // Feature ID not registered.
#define ERROR_UNKNOWN_COMPONENT     1607L  // Component ID not registered.
#define ERROR_UNKNOWN_PROPERTY      1608L  // Unknown property.
#define ERROR_INVALID_HANDLE_STATE  1609L  // Handle is in an invalid state.
// LOCALIZE BEGIN:
#define ERROR_BAD_CONFIGURATION     1610L  // The configuration data for this product is corrupt.  Contact your support personnel.
// LOCALIZE END:
#define ERROR_INDEX_ABSENT          1611L  // Component qualifier not present.
// LOCALIZE BEGIN:
#define ERROR_INSTALL_SOURCE_ABSENT 1612L  // The installation source for this product is not available.  Verify that the source exists and that you can access it.
// LOCALIZE END
#define ERROR_PRODUCT_UNINSTALLED   1614L  // Product is uninstalled.
#define ERROR_BAD_QUERY_SYNTAX      1615L  // SQL query syntax invalid or unsupported.
#define ERROR_INVALID_FIELD         1616L  // Record field does not exist.
#endif

// LOCALIZE BEGIN:
#ifndef ERROR_INSTALL_SERVICE_FAILURE
#define ERROR_INSTALL_SERVICE_FAILURE      1601L // The Windows Installer Service could not be accessed. This can occur if you are running Windows in safe mode, or if the Windows Installer is not correctly installed. Contact your support personnel for assistance.
#define ERROR_INSTALL_PACKAGE_VERSION      1613L // This installation package cannot be installed by the Windows Installer service.  You must install a Windows service pack that contains a newer version of the Windows Installer service.
#define ERROR_INSTALL_ALREADY_RUNNING      1618L // Another installation is already in progress.  Complete that installation before proceeding with this install.
#define ERROR_INSTALL_PACKAGE_OPEN_FAILED  1619L // This installation package could not be opened.  Verify that the package exists and that you can access it, or contact the application vendor to verify that this is a valid Windows Installer package.
#define ERROR_INSTALL_PACKAGE_INVALID      1620L // This installation package could not be opened.  Contact the application vendor to verify that this is a valid Windows Installer package.
#define ERROR_INSTALL_UI_FAILURE           1621L // There was an error starting the Windows Installer service user interface.  Contact your support personnel.
#define ERROR_INSTALL_LOG_FAILURE          1622L // Error opening installation log file.  Verify that the specified log file location exists and is writable.
#define ERROR_INSTALL_LANGUAGE_UNSUPPORTED 1623L // This language of this installation package is not supported by your system.
#define ERROR_INSTALL_PACKAGE_REJECTED     1625L // The system administrator has set policies to prevent this installation.
// LOCALIZE END

#define ERROR_FUNCTION_NOT_CALLED          1626L // Function could not be executed.
#define ERROR_FUNCTION_FAILED              1627L // Function failed during execution.
#define ERROR_INVALID_TABLE                1628L // Invalid or unknown table specified.
#define ERROR_DATATYPE_MISMATCH            1629L // Data supplied is of wrong type.
#define ERROR_UNSUPPORTED_TYPE             1630L // Data of this type is not supported.
// LOCALIZE BEGIN:
#define ERROR_CREATE_FAILED                1631L // The Windows Installer service failed to start.  Contact your support personnel.
// LOCALIZE END:
#endif

// LOCALIZE BEGIN:
#ifndef ERROR_INSTALL_TEMP_UNWRITABLE      
#define ERROR_INSTALL_TEMP_UNWRITABLE      1632L // The Temp folder is on a drive that is full or is inaccessible. Free up space on the drive or verify that you have write permission on the Temp folder.
#endif

#ifndef ERROR_INSTALL_PLATFORM_UNSUPPORTED
#define ERROR_INSTALL_PLATFORM_UNSUPPORTED 1633L // This installation package is not supported by this processor type. Contact your product vendor.
#endif
// LOCALIZE END

#ifndef ERROR_INSTALL_NOTUSED
#define ERROR_INSTALL_NOTUSED              1634L // Component not used on this machine
#endif

// LOCALIZE BEGIN:
#ifndef ERROR_INSTALL_TRANSFORM_FAILURE
#define ERROR_INSTALL_TRANSFORM_FAILURE     1624L // Error applying transforms.  Verify that the specified transform paths are valid.
#endif

#ifndef ERROR_PATCH_PACKAGE_OPEN_FAILED
#define ERROR_PATCH_PACKAGE_OPEN_FAILED    1635L // This patch package could not be opened.  Verify that the patch package exists and that you can access it, or contact the application vendor to verify that this is a valid Windows Installer patch package.
#define ERROR_PATCH_PACKAGE_INVALID        1636L // This patch package could not be opened.  Contact the application vendor to verify that this is a valid Windows Installer patch package.
#define ERROR_PATCH_PACKAGE_UNSUPPORTED    1637L // This patch package cannot be processed by the Windows Installer service.  You must install a Windows service pack that contains a newer version of the Windows Installer service.
#endif

#ifndef ERROR_PRODUCT_VERSION
#define ERROR_PRODUCT_VERSION              1638L // Another version of this product is already installed.  Installation of this version cannot continue.  To configure or remove the existing version of this product, use Add/Remove Programs on the Control Panel.
#endif

#ifndef ERROR_INVALID_COMMAND_LINE
#define ERROR_INVALID_COMMAND_LINE         1639L // Invalid command line argument.  Consult the Windows Installer SDK for detailed command line help.
#endif

// The following three error codes are not returned from MSI version 1.0

#ifndef ERROR_INSTALL_REMOTE_DISALLOWED
#define ERROR_INSTALL_REMOTE_DISALLOWED    1640L // Only administrators have permission to add, remove, or configure server software during a Terminal services remote session. If you want to install or configure software on the server, contact your network administrator.
#endif

// LOCALIZE END

#ifndef ERROR_SUCCESS_REBOOT_INITIATED
#define ERROR_SUCCESS_REBOOT_INITIATED     1641L // The requested operation completed successfully.  The system will be restarted so the changes can take effect.
#endif

// LOCALIZE BEGIN:
#ifndef ERROR_PATCH_TARGET_NOT_FOUND
#define ERROR_PATCH_TARGET_NOT_FOUND       1642L // The upgrade patch cannot be installed by the Windows Installer service because the program to be upgraded may be missing, or the upgrade patch may update a different version of the program. Verify that the program to be upgraded exists on your computer and that you have the correct upgrade patch.
#endif
// LOCALIZE END

// The following two error codes are not returned from MSI version 1.0, 1.1. or 1.2

// LOCALIZE BEGIN:
#ifndef ERROR_PATCH_PACKAGE_REJECTED
#define ERROR_PATCH_PACKAGE_REJECTED       1643L // The patch package is not permitted by software restriction policy.
#endif

#ifndef ERROR_INSTALL_TRANSFORM_REJECTED
#define ERROR_INSTALL_TRANSFORM_REJECTED   1644L // One or more customizations are not permitted by software restriction policy.
#endif
// LOCALIZE END

#endif // _MSI_H_
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\public\sdk\inc\msimdb.h ===
//--------------------------------------------------------------------
//
// Microsoft In-Memory Database
// (C) Copyright 1998 By Microsoft Corporation.
//
//
//--------------------------------------------------------------------

#ifndef  _MSIMDB_H_
	#define  _MSIMDB_H_

	//
	// MSIMDB property specific definitions
	//
	// The GUID for the MSIMDB specific property set on the session
	//
	// {AFE68CE9-C367-11d1-AC4F-0000F8758E41}
	_declspec(selectany) extern const GUID DBPROPSET_IMDBSESSION =
			{ 0xafe68ce9, 0xc367, 0x11d1, { 0xac, 0x4f, 0x0, 0x0, 0xf8, 0x75, 0x8e, 0x41 } };


	//----------------------------------------------------------------------------
	// Props for DBPROPSET_IMDBSESSION
	//
	#define IMDBPROP_SESS_ISOLEVEL				0x01	// I4
														//		DBPROPVAL_TI_READCOMMITTED (Default),
														//		DBPROPVAL_TI_REPEATABLEREAD,
														//		DBPROPVAL_TI_SERIALIZABLE

	#define IMDBPROP_SESS_OPENROWSET_TIMEOUT	0x02	// I2 0 (30s wait, Default)
	#define IMDBPROP_SESS_SMALL_TABLES			0x03	// BOOL VARIANT_FALSE (Default)
	#define IMDBPROP_SESS_PESSIMISTIC_LOCKING	0x04	// BOOL VARIANT_FALSE (Default)
	#define IMDBPROP_SESS_WRITE_THROUGH			0x05	// BOOL VARIANT_FALSE (Default)
	#define IMDBPROP_SESS_CREATE_COHERENT		0x06	// BOOL VARIANT_TRUE (Default)
	#define IMDBPROP_SESS_DROP_COHERENT			0x07	// BOOL VARIANT_TRUE (Default)
	#define IMDBPROP_SESS_ROWSET_LIFETIME		0x08	// I4 300 (300s wait, Default)


	#define IMDBPROP_SESS_OPENROWSET_TIMEOUT_DEFAULT_VALUE  30
	#define IMDBPROP_SESS_OPENROWSET_TIMEOUT_MIN_VALUE      0
	#define IMDBPROP_SESS_OPENROWSET_TIMEOUT_MAX_VALUE      0xffff


#pragma warning( disable: 4049 )  /* more than 64k source lines */

/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 5.02.0221 */
/* at Mon Dec 14 12:35:36 1998
 */
/* Compiler settings for tspm.idl:
    Oicf (OptLev=i2), W1, Zp8, env=Win32 (32b run), ms_ext, c_ext
    error checks: allocation ref bounds_check enum stub_data
    VC __declspec() decoration level:
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
//@@MIDL_FILE_HEADING(  )


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 440
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif // __RPCNDR_H_VERSION__

#ifndef COM_NO_WINDOWS_H
#include "windows.h"
#include "ole2.h"
#endif /*COM_NO_WINDOWS_H*/

#ifndef __tspm_h__
#define __tspm_h__

/* Forward Declarations */

#ifndef __ITxProperty_FWD_DEFINED__
#define __ITxProperty_FWD_DEFINED__
typedef interface ITxProperty ITxProperty;
#endif 	/* __ITxProperty_FWD_DEFINED__ */


#ifndef __ITxPropertyGroup_FWD_DEFINED__
#define __ITxPropertyGroup_FWD_DEFINED__
typedef interface ITxPropertyGroup ITxPropertyGroup;
#endif 	/* __ITxPropertyGroup_FWD_DEFINED__ */


#ifndef __ITxPropertyGroupManager_FWD_DEFINED__
#define __ITxPropertyGroupManager_FWD_DEFINED__
typedef interface ITxPropertyGroupManager ITxPropertyGroupManager;
#endif 	/* __ITxPropertyGroupManager_FWD_DEFINED__ */


#ifndef __TransactedPropertyGroupManager_FWD_DEFINED__
#define __TransactedPropertyGroupManager_FWD_DEFINED__

#ifdef __cplusplus
typedef class TransactedPropertyGroupManager TransactedPropertyGroupManager;
#else
typedef struct TransactedPropertyGroupManager TransactedPropertyGroupManager;
#endif /* __cplusplus */

#endif 	/* __TransactedPropertyGroupManager_FWD_DEFINED__ */


#ifndef __TransactedPropertyGroup_FWD_DEFINED__
#define __TransactedPropertyGroup_FWD_DEFINED__

#ifdef __cplusplus
typedef class TransactedPropertyGroup TransactedPropertyGroup;
#else
typedef struct TransactedPropertyGroup TransactedPropertyGroup;
#endif /* __cplusplus */

#endif 	/* __TransactedPropertyGroup_FWD_DEFINED__ */


#ifndef __TransactedProperty_FWD_DEFINED__
#define __TransactedProperty_FWD_DEFINED__

#ifdef __cplusplus
typedef class TransactedProperty TransactedProperty;
#else
typedef struct TransactedProperty TransactedProperty;
#endif /* __cplusplus */

#endif 	/* __TransactedProperty_FWD_DEFINED__ */


/* header files for imported files */
#include "oaidl.h"
#include "ocidl.h"

#ifdef __cplusplus
extern "C"{
#endif

void __RPC_FAR * __RPC_USER MIDL_user_allocate(size_t);
void __RPC_USER MIDL_user_free( void __RPC_FAR * );

/* interface __MIDL_itf_tspm_0000 */
/* [local] */

//=--------------------------------------------------------------------------=
// @doc
//
// @module	TSPM.H | TSPM interfaces:
//                      ITxProperty
//                      ITxPropertyGroup
//                      ITxPropertyGroupManager
//
// Copyright (c) 1998, Microsoft Corporation, All Rights Reserved
//=--------------------------------------------------------------------------=


//=--------------------------------------------------------------------------=
// Interface Definitions
//=--------------------------------------------------------------------------=

typedef /* [public] */
enum __MIDL___MIDL_itf_tspm_0000_0001
    {	DISPID_CREATEGROUP	= 1,
	DISPID_REMOVEGROUP	= DISPID_CREATEGROUP + 1,
	DISPID_CREATEPROPERTY	= DISPID_REMOVEGROUP + 1,
	DISPID_GETPROPERTY	= DISPID_CREATEPROPERTY + 1,
	DISPID_REMOVEPROPERTY	= DISPID_GETPROPERTY + 1,
	DISPID_GETGROUP	= DISPID_REMOVEPROPERTY + 1
    }	TSPM_METHODS;

typedef /* [public] */
enum __MIDL___MIDL_itf_tspm_0000_0002
    {	DISPID_NAME	= 140,
	DISPID_PROPERTYGROUP	= DISPID_NAME + 1,
	DISPID_ISOLATIONLEVEL	= DISPID_PROPERTYGROUP + 1,
	DISPID_CONCURRENCYMODE	= DISPID_ISOLATIONLEVEL + 1,
	DISPID_PROPERTYGROUPMANAGER	= DISPID_CONCURRENCYMODE + 1,
	DISPID_COUNT	= DISPID_PROPERTYGROUPMANAGER + 1,
	DISPID_CACHECOHERENTLY	= DISPID_COUNT + 1,
	DISPID_WRITETHROUGH	= DISPID_CACHECOHERENTLY + 1
    }	TSPM_PROPERTIES;


extern RPC_IF_HANDLE __MIDL_itf_tspm_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_tspm_0000_v0_0_s_ifspec;

#ifndef __ITxProperty_INTERFACE_DEFINED__
#define __ITxProperty_INTERFACE_DEFINED__

/* interface ITxProperty */
/* [unique][helpstring][dual][uuid][object] */


EXTERN_C const IID IID_ITxProperty;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("6A8DEEA8-4101-11D2-912C-0000F8758E8D")
    ITxProperty : public IDispatch
    {
    public:
        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name(
            /* [retval][out] */ BSTR __RPC_FAR *pbstrPropertyName) = 0;

        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_PropertyGroup(
            /* [retval][out] */ IDispatch __RPC_FAR *__RPC_FAR *ppPropertyGroup) = 0;

        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Value(
            /* [retval][out] */ VARIANT __RPC_FAR *pvarPropertyValue) = 0;

        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_Value(
            /* [in] */ VARIANT varPropertyValue) = 0;

    };

#else 	/* C style interface */

    typedef struct ITxPropertyVtbl
    {
        BEGIN_INTERFACE

        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )(
            ITxProperty __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);

        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )(
            ITxProperty __RPC_FAR * This);

        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )(
            ITxProperty __RPC_FAR * This);

        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )(
            ITxProperty __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);

        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )(
            ITxProperty __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);

        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )(
            ITxProperty __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);

        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )(
            ITxProperty __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);

        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Name )(
            ITxProperty __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pbstrPropertyName);

        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_PropertyGroup )(
            ITxProperty __RPC_FAR * This,
            /* [retval][out] */ IDispatch __RPC_FAR *__RPC_FAR *ppPropertyGroup);

        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Value )(
            ITxProperty __RPC_FAR * This,
            /* [retval][out] */ VARIANT __RPC_FAR *pvarPropertyValue);

        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_Value )(
            ITxProperty __RPC_FAR * This,
            /* [in] */ VARIANT varPropertyValue);

        END_INTERFACE
    } ITxPropertyVtbl;

    interface ITxProperty
    {
        CONST_VTBL struct ITxPropertyVtbl __RPC_FAR *lpVtbl;
    };



#ifdef COBJMACROS


#define ITxProperty_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define ITxProperty_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define ITxProperty_Release(This)	\
    (This)->lpVtbl -> Release(This)

#define ITxProperty_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define ITxProperty_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define ITxProperty_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define ITxProperty_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define ITxProperty_get_Name(This,pbstrPropertyName)	\
    (This)->lpVtbl -> get_Name(This,pbstrPropertyName)

#define ITxProperty_get_PropertyGroup(This,ppPropertyGroup)	\
    (This)->lpVtbl -> get_PropertyGroup(This,ppPropertyGroup)

#define ITxProperty_get_Value(This,pvarPropertyValue)	\
    (This)->lpVtbl -> get_Value(This,pvarPropertyValue)

#define ITxProperty_put_Value(This,varPropertyValue)	\
    (This)->lpVtbl -> put_Value(This,varPropertyValue)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE ITxProperty_get_Name_Proxy(
    ITxProperty __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pbstrPropertyName);


void __RPC_STUB ITxProperty_get_Name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE ITxProperty_get_PropertyGroup_Proxy(
    ITxProperty __RPC_FAR * This,
    /* [retval][out] */ IDispatch __RPC_FAR *__RPC_FAR *ppPropertyGroup);


void __RPC_STUB ITxProperty_get_PropertyGroup_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE ITxProperty_get_Value_Proxy(
    ITxProperty __RPC_FAR * This,
    /* [retval][out] */ VARIANT __RPC_FAR *pvarPropertyValue);


void __RPC_STUB ITxProperty_get_Value_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE ITxProperty_put_Value_Proxy(
    ITxProperty __RPC_FAR * This,
    /* [in] */ VARIANT varPropertyValue);


void __RPC_STUB ITxProperty_put_Value_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __ITxProperty_INTERFACE_DEFINED__ */


#ifndef __ITxPropertyGroup_INTERFACE_DEFINED__
#define __ITxPropertyGroup_INTERFACE_DEFINED__

/* interface ITxPropertyGroup */
/* [unique][helpstring][dual][uuid][object] */


EXTERN_C const IID IID_ITxPropertyGroup;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("46DB591E-4101-11D2-912C-0000F8758E8D")
    ITxPropertyGroup : public IDispatch
    {
    public:
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE CreateProperty(
            /* [string][in] */ const BSTR bstrPropertyName,
            /* [in] */ VARIANT_BOOL __RPC_FAR *pvarboolExists,
            /* [retval][out] */ ITxProperty __RPC_FAR *__RPC_FAR *ppTxProperty) = 0;

        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetProperty(
            /* [string][in] */ const BSTR bstrPropertyName,
            /* [retval][out] */ ITxProperty __RPC_FAR *__RPC_FAR *ppTxProperty) = 0;

        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE RemoveProperty(
            /* [string][in] */ const BSTR bstrPropertyName) = 0;

        virtual /* [helpstring][id][hidden] */ HRESULT STDMETHODCALLTYPE _NewEnum(
            /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *ppIEnumObjects) = 0;

        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Name(
            /* [retval][out] */ BSTR __RPC_FAR *pbstrPropertyGroupName) = 0;

        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_WriteThrough(
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *pvarboolWriteThrough) = 0;

        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_CacheCoherently(
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *pvarboolCacheCoherently) = 0;

        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_PropertyGroupManager(
            /* [retval][out] */ IDispatch __RPC_FAR *__RPC_FAR *ppPropertyGroupManager) = 0;

        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count(
            /* [retval][out] */ long __RPC_FAR *plCountProperties) = 0;

    };

#else 	/* C style interface */

    typedef struct ITxPropertyGroupVtbl
    {
        BEGIN_INTERFACE

        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )(
            ITxPropertyGroup __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);

        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )(
            ITxPropertyGroup __RPC_FAR * This);

        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )(
            ITxPropertyGroup __RPC_FAR * This);

        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )(
            ITxPropertyGroup __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);

        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )(
            ITxPropertyGroup __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);

        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )(
            ITxPropertyGroup __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);

        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )(
            ITxPropertyGroup __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);

        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *CreateProperty )(
            ITxPropertyGroup __RPC_FAR * This,
            /* [string][in] */ const BSTR bstrPropertyName,
            /* [in] */ VARIANT_BOOL __RPC_FAR *pvarboolExists,
            /* [retval][out] */ ITxProperty __RPC_FAR *__RPC_FAR *ppTxProperty);

        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetProperty )(
            ITxPropertyGroup __RPC_FAR * This,
            /* [string][in] */ const BSTR bstrPropertyName,
            /* [retval][out] */ ITxProperty __RPC_FAR *__RPC_FAR *ppTxProperty);

        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *RemoveProperty )(
            ITxPropertyGroup __RPC_FAR * This,
            /* [string][in] */ const BSTR bstrPropertyName);

        /* [helpstring][id][hidden] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *_NewEnum )(
            ITxPropertyGroup __RPC_FAR * This,
            /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *ppIEnumObjects);

        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Name )(
            ITxPropertyGroup __RPC_FAR * This,
            /* [retval][out] */ BSTR __RPC_FAR *pbstrPropertyGroupName);

        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_WriteThrough )(
            ITxPropertyGroup __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *pvarboolWriteThrough);

        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_CacheCoherently )(
            ITxPropertyGroup __RPC_FAR * This,
            /* [retval][out] */ VARIANT_BOOL __RPC_FAR *pvarboolCacheCoherently);

        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_PropertyGroupManager )(
            ITxPropertyGroup __RPC_FAR * This,
            /* [retval][out] */ IDispatch __RPC_FAR *__RPC_FAR *ppPropertyGroupManager);

        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Count )(
            ITxPropertyGroup __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *plCountProperties);

        END_INTERFACE
    } ITxPropertyGroupVtbl;

    interface ITxPropertyGroup
    {
        CONST_VTBL struct ITxPropertyGroupVtbl __RPC_FAR *lpVtbl;
    };



#ifdef COBJMACROS


#define ITxPropertyGroup_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define ITxPropertyGroup_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define ITxPropertyGroup_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define ITxPropertyGroup_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define ITxPropertyGroup_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define ITxPropertyGroup_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define ITxPropertyGroup_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define ITxPropertyGroup_CreateProperty(This,bstrPropertyName,pvarboolExists,ppTxProperty)	\
    (This)->lpVtbl -> CreateProperty(This,bstrPropertyName,pvarboolExists,ppTxProperty)

#define ITxPropertyGroup_GetProperty(This,bstrPropertyName,ppTxProperty)	\
    (This)->lpVtbl -> GetProperty(This,bstrPropertyName,ppTxProperty)

#define ITxPropertyGroup_RemoveProperty(This,bstrPropertyName)	\
    (This)->lpVtbl -> RemoveProperty(This,bstrPropertyName)

#define ITxPropertyGroup__NewEnum(This,ppIEnumObjects)	\
    (This)->lpVtbl -> _NewEnum(This,ppIEnumObjects)

#define ITxPropertyGroup_get_Name(This,pbstrPropertyGroupName)	\
    (This)->lpVtbl -> get_Name(This,pbstrPropertyGroupName)

#define ITxPropertyGroup_get_WriteThrough(This,pvarboolWriteThrough)	\
    (This)->lpVtbl -> get_WriteThrough(This,pvarboolWriteThrough)

#define ITxPropertyGroup_get_CacheCoherently(This,pvarboolCacheCoherently)	\
    (This)->lpVtbl -> get_CacheCoherently(This,pvarboolCacheCoherently)

#define ITxPropertyGroup_get_PropertyGroupManager(This,ppPropertyGroupManager)	\
    (This)->lpVtbl -> get_PropertyGroupManager(This,ppPropertyGroupManager)

#define ITxPropertyGroup_get_Count(This,plCountProperties)	\
    (This)->lpVtbl -> get_Count(This,plCountProperties)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ITxPropertyGroup_CreateProperty_Proxy(
    ITxPropertyGroup __RPC_FAR * This,
    /* [string][in] */ const BSTR bstrPropertyName,
    /* [in] */ VARIANT_BOOL __RPC_FAR *pvarboolExists,
    /* [retval][out] */ ITxProperty __RPC_FAR *__RPC_FAR *ppTxProperty);


void __RPC_STUB ITxPropertyGroup_CreateProperty_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ITxPropertyGroup_GetProperty_Proxy(
    ITxPropertyGroup __RPC_FAR * This,
    /* [string][in] */ const BSTR bstrPropertyName,
    /* [retval][out] */ ITxProperty __RPC_FAR *__RPC_FAR *ppTxProperty);


void __RPC_STUB ITxPropertyGroup_GetProperty_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ITxPropertyGroup_RemoveProperty_Proxy(
    ITxPropertyGroup __RPC_FAR * This,
    /* [string][in] */ const BSTR bstrPropertyName);


void __RPC_STUB ITxPropertyGroup_RemoveProperty_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][hidden] */ HRESULT STDMETHODCALLTYPE ITxPropertyGroup__NewEnum_Proxy(
    ITxPropertyGroup __RPC_FAR * This,
    /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *ppIEnumObjects);


void __RPC_STUB ITxPropertyGroup__NewEnum_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE ITxPropertyGroup_get_Name_Proxy(
    ITxPropertyGroup __RPC_FAR * This,
    /* [retval][out] */ BSTR __RPC_FAR *pbstrPropertyGroupName);


void __RPC_STUB ITxPropertyGroup_get_Name_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE ITxPropertyGroup_get_WriteThrough_Proxy(
    ITxPropertyGroup __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *pvarboolWriteThrough);


void __RPC_STUB ITxPropertyGroup_get_WriteThrough_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE ITxPropertyGroup_get_CacheCoherently_Proxy(
    ITxPropertyGroup __RPC_FAR * This,
    /* [retval][out] */ VARIANT_BOOL __RPC_FAR *pvarboolCacheCoherently);


void __RPC_STUB ITxPropertyGroup_get_CacheCoherently_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE ITxPropertyGroup_get_PropertyGroupManager_Proxy(
    ITxPropertyGroup __RPC_FAR * This,
    /* [retval][out] */ IDispatch __RPC_FAR *__RPC_FAR *ppPropertyGroupManager);


void __RPC_STUB ITxPropertyGroup_get_PropertyGroupManager_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE ITxPropertyGroup_get_Count_Proxy(
    ITxPropertyGroup __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *plCountProperties);


void __RPC_STUB ITxPropertyGroup_get_Count_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __ITxPropertyGroup_INTERFACE_DEFINED__ */


#ifndef __ITxPropertyGroupManager_INTERFACE_DEFINED__
#define __ITxPropertyGroupManager_INTERFACE_DEFINED__

/* interface ITxPropertyGroupManager */
/* [unique][helpstring][dual][uuid][object] */

//=--------------------------------------------------------------------------=
// Enumerated Properties
//=--------------------------------------------------------------------------=


typedef 
enum tagTSPM_ISOLATIONLEVEL
    {	
	IsoLevelReadCommitted		= 0,
	IsoLevelRepeatableRead		= 1,
	IsoLevelSerializable		= 2
    }	TSPM_ISOLATIONLEVEL;

typedef 
enum tagTSPM_CONCURRENCYMODE
    {	
	ConcurModeOptimistic		= 0,
	ConcurModePessimistic		= 1
    }	TSPM_CONCURRENCYMODE;

typedef 
enum tagTSPM_SECURITYSETTING
    {	
	SecurityAllAccess			= 0,
	SecurityUserAccount			= 1,
	SecuritySelectedAccounts	= 2
    }	TSPM_SECURITYSETTING;


EXTERN_C const IID IID_ITxPropertyGroupManager;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("B97C237C-7D7E-11D2-BEA0-00805F0D8F97")
    ITxPropertyGroupManager : public IDispatch
    {
    public:
        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE CreatePropertyGroup(
            /* [string][in] */ const BSTR bstrPropertyGroupName,
            /* [out] */ VARIANT_BOOL __RPC_FAR *pvarboolExists,
            /* [in] */ VARIANT_BOOL varboolWriteThrough,
            /* [in] */ VARIANT_BOOL varboolRemoveAtProcessTermination,
            /* [in] */ TSPM_SECURITYSETTING eSecuritySetting,
            /* [string][in] */ const BSTR bstrAccessAccounts,
            /* [in] */ VARIANT_BOOL varboolReserved,
            /* [retval][out] */ ITxPropertyGroup __RPC_FAR *__RPC_FAR *ppTxPropertyGroup) = 0;

        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE GetPropertyGroup(
            /* [string][in] */ const BSTR bstrPropertyGroupName,
            /* [in] */ VARIANT_BOOL varboolWriteThrough,
            /* [retval][out] */ ITxPropertyGroup __RPC_FAR *__RPC_FAR *ppTxPropertyGroup) = 0;

        virtual /* [helpstring][id] */ HRESULT STDMETHODCALLTYPE RemovePropertyGroup(
            /* [string][in] */ const BSTR bstrPropertyGroupName) = 0;

        virtual /* [helpstring][id][hidden] */ HRESULT STDMETHODCALLTYPE _NewEnum(
            /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *ppIEnumObjects) = 0;

        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_IsolationLevel(
            /* [retval][out] */ TSPM_ISOLATIONLEVEL __RPC_FAR *peIsolationLevel) = 0;

        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_IsolationLevel(
            /* [in] */ TSPM_ISOLATIONLEVEL eIsolationLevel) = 0;

        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_ConcurrencyMode(
            /* [retval][out] */ TSPM_CONCURRENCYMODE __RPC_FAR *peConcurrencyMode) = 0;

        virtual /* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE put_ConcurrencyMode(
            /* [in] */ TSPM_CONCURRENCYMODE eConcurrencyMode) = 0;

        virtual /* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE get_Count(
            /* [retval][out] */ long __RPC_FAR *plCountPropertyGroups) = 0;

    };

#else 	/* C style interface */

    typedef struct ITxPropertyGroupManagerVtbl
    {
        BEGIN_INTERFACE

        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )(
            ITxPropertyGroupManager __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject);

        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )(
            ITxPropertyGroupManager __RPC_FAR * This);

        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )(
            ITxPropertyGroupManager __RPC_FAR * This);

        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfoCount )(
            ITxPropertyGroupManager __RPC_FAR * This,
            /* [out] */ UINT __RPC_FAR *pctinfo);

        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetTypeInfo )(
            ITxPropertyGroupManager __RPC_FAR * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppTInfo);

        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetIDsOfNames )(
            ITxPropertyGroupManager __RPC_FAR * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR __RPC_FAR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID __RPC_FAR *rgDispId);

        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *Invoke )(
            ITxPropertyGroupManager __RPC_FAR * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS __RPC_FAR *pDispParams,
            /* [out] */ VARIANT __RPC_FAR *pVarResult,
            /* [out] */ EXCEPINFO __RPC_FAR *pExcepInfo,
            /* [out] */ UINT __RPC_FAR *puArgErr);

        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *CreatePropertyGroup )(
            ITxPropertyGroupManager __RPC_FAR * This,
            /* [string][in] */ const BSTR bstrPropertyGroupName,
            /* [out] */ VARIANT_BOOL __RPC_FAR *pvarboolExists,
            /* [in] */ VARIANT_BOOL varboolWriteThrough,
            /* [in] */ VARIANT_BOOL varboolRemoveAtProcessTermination,
            /* [in] */ TSPM_SECURITYSETTING eSecuritySetting,
            /* [string][in] */ const BSTR bstrAccessAccounts,
            /* [in] */ VARIANT_BOOL varboolReserved,
            /* [retval][out] */ ITxPropertyGroup __RPC_FAR *__RPC_FAR *ppTxPropertyGroup);

        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetPropertyGroup )(
            ITxPropertyGroupManager __RPC_FAR * This,
            /* [string][in] */ const BSTR bstrPropertyGroupName,
            /* [in] */ VARIANT_BOOL varboolWriteThrough,
            /* [retval][out] */ ITxPropertyGroup __RPC_FAR *__RPC_FAR *ppTxPropertyGroup);

        /* [helpstring][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *RemovePropertyGroup )(
            ITxPropertyGroupManager __RPC_FAR * This,
            /* [string][in] */ const BSTR bstrPropertyGroupName);

        /* [helpstring][id][hidden] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *_NewEnum )(
            ITxPropertyGroupManager __RPC_FAR * This,
            /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *ppIEnumObjects);

        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_IsolationLevel )(
            ITxPropertyGroupManager __RPC_FAR * This,
            /* [retval][out] */ TSPM_ISOLATIONLEVEL __RPC_FAR *peIsolationLevel);

        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_IsolationLevel )(
            ITxPropertyGroupManager __RPC_FAR * This,
            /* [in] */ TSPM_ISOLATIONLEVEL eIsolationLevel);

        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_ConcurrencyMode )(
            ITxPropertyGroupManager __RPC_FAR * This,
            /* [retval][out] */ TSPM_CONCURRENCYMODE __RPC_FAR *peConcurrencyMode);

        /* [helpstring][propput][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *put_ConcurrencyMode )(
            ITxPropertyGroupManager __RPC_FAR * This,
            /* [in] */ TSPM_CONCURRENCYMODE eConcurrencyMode);

        /* [helpstring][propget][id] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *get_Count )(
            ITxPropertyGroupManager __RPC_FAR * This,
            /* [retval][out] */ long __RPC_FAR *plCountPropertyGroups);

        END_INTERFACE
    } ITxPropertyGroupManagerVtbl;

    interface ITxPropertyGroupManager
    {
        CONST_VTBL struct ITxPropertyGroupManagerVtbl __RPC_FAR *lpVtbl;
    };



#ifdef COBJMACROS


#define ITxPropertyGroupManager_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define ITxPropertyGroupManager_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define ITxPropertyGroupManager_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define ITxPropertyGroupManager_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define ITxPropertyGroupManager_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define ITxPropertyGroupManager_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define ITxPropertyGroupManager_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define ITxPropertyGroupManager_CreatePropertyGroup(This,bstrPropertyGroupName,pvarboolExists,varboolWriteThrough,varboolRemoveAtProcessTermination,eSecuritySetting,bstrAccessAccounts,varboolReserved,ppTxPropertyGroup)	\
    (This)->lpVtbl -> CreatePropertyGroup(This,bstrPropertyGroupName,pvarboolExists,varboolWriteThrough,varboolRemoveAtProcessTermination,eSecuritySetting,bstrAccessAccounts,varboolReserved,ppTxPropertyGroup)

#define ITxPropertyGroupManager_GetPropertyGroup(This,bstrPropertyGroupName,varboolWriteThrough,ppTxPropertyGroup)	\
    (This)->lpVtbl -> GetPropertyGroup(This,bstrPropertyGroupName,varboolWriteThrough,ppTxPropertyGroup)

#define ITxPropertyGroupManager_RemovePropertyGroup(This,bstrPropertyGroupName)	\
    (This)->lpVtbl -> RemovePropertyGroup(This,bstrPropertyGroupName)

#define ITxPropertyGroupManager__NewEnum(This,ppIEnumObjects)	\
    (This)->lpVtbl -> _NewEnum(This,ppIEnumObjects)

#define ITxPropertyGroupManager_get_IsolationLevel(This,peIsolationLevel)	\
    (This)->lpVtbl -> get_IsolationLevel(This,peIsolationLevel)

#define ITxPropertyGroupManager_put_IsolationLevel(This,eIsolationLevel)	\
    (This)->lpVtbl -> put_IsolationLevel(This,eIsolationLevel)

#define ITxPropertyGroupManager_get_ConcurrencyMode(This,peConcurrencyMode)	\
    (This)->lpVtbl -> get_ConcurrencyMode(This,peConcurrencyMode)

#define ITxPropertyGroupManager_put_ConcurrencyMode(This,eConcurrencyMode)	\
    (This)->lpVtbl -> put_ConcurrencyMode(This,eConcurrencyMode)

#define ITxPropertyGroupManager_get_Count(This,plCountPropertyGroups)	\
    (This)->lpVtbl -> get_Count(This,plCountPropertyGroups)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ITxPropertyGroupManager_CreatePropertyGroup_Proxy(
    ITxPropertyGroupManager __RPC_FAR * This,
    /* [string][in] */ const BSTR bstrPropertyGroupName,
    /* [out] */ VARIANT_BOOL __RPC_FAR *pvarboolExists,
    /* [in] */ VARIANT_BOOL varboolWriteThrough,
    /* [in] */ VARIANT_BOOL varboolRemoveAtProcessTermination,
    /* [in] */ TSPM_SECURITYSETTING eSecuritySetting,
    /* [string][in] */ const BSTR bstrAccessAccounts,
    /* [in] */ VARIANT_BOOL varboolReserved,
    /* [retval][out] */ ITxPropertyGroup __RPC_FAR *__RPC_FAR *ppTxPropertyGroup);


void __RPC_STUB ITxPropertyGroupManager_CreatePropertyGroup_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ITxPropertyGroupManager_GetPropertyGroup_Proxy(
    ITxPropertyGroupManager __RPC_FAR * This,
    /* [string][in] */ const BSTR bstrPropertyGroupName,
    /* [in] */ VARIANT_BOOL varboolWriteThrough,
    /* [retval][out] */ ITxPropertyGroup __RPC_FAR *__RPC_FAR *ppTxPropertyGroup);


void __RPC_STUB ITxPropertyGroupManager_GetPropertyGroup_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id] */ HRESULT STDMETHODCALLTYPE ITxPropertyGroupManager_RemovePropertyGroup_Proxy(
    ITxPropertyGroupManager __RPC_FAR * This,
    /* [string][in] */ const BSTR bstrPropertyGroupName);


void __RPC_STUB ITxPropertyGroupManager_RemovePropertyGroup_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][id][hidden] */ HRESULT STDMETHODCALLTYPE ITxPropertyGroupManager__NewEnum_Proxy(
    ITxPropertyGroupManager __RPC_FAR * This,
    /* [retval][out] */ IUnknown __RPC_FAR *__RPC_FAR *ppIEnumObjects);


void __RPC_STUB ITxPropertyGroupManager__NewEnum_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE ITxPropertyGroupManager_get_IsolationLevel_Proxy(
    ITxPropertyGroupManager __RPC_FAR * This,
    /* [retval][out] */ TSPM_ISOLATIONLEVEL __RPC_FAR *peIsolationLevel);


void __RPC_STUB ITxPropertyGroupManager_get_IsolationLevel_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE ITxPropertyGroupManager_put_IsolationLevel_Proxy(
    ITxPropertyGroupManager __RPC_FAR * This,
    /* [in] */ TSPM_ISOLATIONLEVEL eIsolationLevel);


void __RPC_STUB ITxPropertyGroupManager_put_IsolationLevel_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE ITxPropertyGroupManager_get_ConcurrencyMode_Proxy(
    ITxPropertyGroupManager __RPC_FAR * This,
    /* [retval][out] */ TSPM_CONCURRENCYMODE __RPC_FAR *peConcurrencyMode);


void __RPC_STUB ITxPropertyGroupManager_get_ConcurrencyMode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propput][id] */ HRESULT STDMETHODCALLTYPE ITxPropertyGroupManager_put_ConcurrencyMode_Proxy(
    ITxPropertyGroupManager __RPC_FAR * This,
    /* [in] */ TSPM_CONCURRENCYMODE eConcurrencyMode);


void __RPC_STUB ITxPropertyGroupManager_put_ConcurrencyMode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [helpstring][propget][id] */ HRESULT STDMETHODCALLTYPE ITxPropertyGroupManager_get_Count_Proxy(
    ITxPropertyGroupManager __RPC_FAR * This,
    /* [retval][out] */ long __RPC_FAR *plCountPropertyGroups);


void __RPC_STUB ITxPropertyGroupManager_get_Count_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __ITxPropertyGroupManager_INTERFACE_DEFINED__ */



#ifndef __TSPM_LIBRARY_DEFINED__
#define __TSPM_LIBRARY_DEFINED__

/* library TSPM */
/* [helpstring][version][uuid] */


EXTERN_C const IID LIBID_TSPM;

EXTERN_C const CLSID CLSID_TransactedPropertyGroupManager;

#ifdef __cplusplus

class DECLSPEC_UUID("DEBCE1BC-7D7E-11D2-BEA0-00805F0D8F97")
TransactedPropertyGroupManager;
#endif

EXTERN_C const CLSID CLSID_TransactedPropertyGroup;

#ifdef __cplusplus

class DECLSPEC_UUID("46DB591F-4101-11D2-912C-0000F8758E8D")
TransactedPropertyGroup;
#endif

EXTERN_C const CLSID CLSID_TransactedProperty;

#ifdef __cplusplus

class DECLSPEC_UUID("6A8DEEA9-4101-11D2-912C-0000F8758E8D")
TransactedProperty;
#endif
#endif /* __TSPM_LIBRARY_DEFINED__ */

/* Additional Prototypes for ALL interfaces */

unsigned long             __RPC_USER  BSTR_UserSize(     unsigned long __RPC_FAR *, unsigned long            , BSTR __RPC_FAR * );
unsigned char __RPC_FAR * __RPC_USER  BSTR_UserMarshal(  unsigned long __RPC_FAR *, unsigned char __RPC_FAR *, BSTR __RPC_FAR * );
unsigned char __RPC_FAR * __RPC_USER  BSTR_UserUnmarshal(unsigned long __RPC_FAR *, unsigned char __RPC_FAR *, BSTR __RPC_FAR * );
void                      __RPC_USER  BSTR_UserFree(     unsigned long __RPC_FAR *, BSTR __RPC_FAR * );

unsigned long             __RPC_USER  VARIANT_UserSize(     unsigned long __RPC_FAR *, unsigned long            , VARIANT __RPC_FAR * );
unsigned char __RPC_FAR * __RPC_USER  VARIANT_UserMarshal(  unsigned long __RPC_FAR *, unsigned char __RPC_FAR *, VARIANT __RPC_FAR * );
unsigned char __RPC_FAR * __RPC_USER  VARIANT_UserUnmarshal(unsigned long __RPC_FAR *, unsigned char __RPC_FAR *, VARIANT __RPC_FAR * );
void                      __RPC_USER  VARIANT_UserFree(     unsigned long __RPC_FAR *, VARIANT __RPC_FAR * );

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif


// The interface IIDs for TSPM
_declspec(selectany) extern
const IID IID_ITxProperty = {0x6A8DEEA8,0x4101,0x11D2,{0x91,0x2C,0x00,0x00,0xF8,0x75,0x8E,0x8D}};

_declspec(selectany) extern
const IID IID_ITxPropertyGroup = {0x46DB591E,0x4101,0x11D2,{0x91,0x2C,0x00,0x00,0xF8,0x75,0x8E,0x8D}};

_declspec(selectany) extern
const IID IID_ITxPropertyGroupManager = {0xB97C237C,0x7D7E,0x11D2,{0xBE,0xA0,0x00,0x80,0x5F,0x0D,0x8F,0x97}};

_declspec(selectany) extern
const IID LIBID_TSPM = {0xBA4B54BC,0x4101,0x11D2,{0x91,0x2C,0x00,0x00,0xF8,0x75,0x8E,0x8D}};

_declspec(selectany) extern
const CLSID CLSID_TransactedPropertyGroupManager = {0xDEBCE1BC,0x7D7E,0x11D2,{0xBE,0xA0,0x00,0x80,0x5F,0x0D,0x8F,0x97}};

_declspec(selectany) extern
const CLSID CLSID_TransactedPropertyGroup = {0x46DB591F,0x4101,0x11D2,{0x91,0x2C,0x00,0x00,0xF8,0x75,0x8E,0x8D}};

_declspec(selectany) extern
const CLSID CLSID_TransactedProperty = {0x6A8DEEA9,0x4101,0x11D2,{0x91,0x2C,0x00,0x00,0xF8,0x75,0x8E,0x8D}};

#endif // _MSIMDB_H_

//
// End Of File
//
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\public\sdk\inc\msidefs.h ===
//+-------------------------------------------------------------------------
//
//  Microsoft Windows
//
//  Copyright (C) Microsoft Corporation, 1996 - 2001
//
//  File:       msidefs.h
//
//--------------------------------------------------------------------------

/* msidefs.h   Windows Installer data definitions

____________________________________________________________________________*/

#ifndef __MSIDEFS
#define __MSIDEFS

#ifndef _WIN32_MSI
#if (_WIN32_WINNT >= 0x0510)
#define _WIN32_MSI   200
#elif (_WIN32_WINNT >= 0x0500)
#define _WIN32_MSI   110
#else
#define _WIN32_MSI   100
#endif //_WIN32_WINNT
#endif // !_WIN32_MSI

//__________________________________________________________________________
//
// INSTALLER PROPERTY DEFINITIONS
//__________________________________________________________________________

// Required properties: set in Property table
#define IPROPNAME_PRODUCTNAME      TEXT("ProductName")      // name registered for display
#define IPROPNAME_PRODUCTCODE      TEXT("ProductCode")      // unique string GUID for product
#define IPROPNAME_PRODUCTVERSION   TEXT("ProductVersion")   // string product version
#define IPROPNAME_INSTALLLANGUAGE  TEXT("ProductLanguage")  // install language of product, use to load resources        
#define IPROPNAME_MANUFACTURER     TEXT("Manufacturer")     // name of manufacturer

// Customization properties: set in Property table
#define IPROPNAME_UPGRADECODE      TEXT("UpgradeCode")      // unique string GUID for product family
#define IPROPNAME_PIDTEMPLATE      TEXT("PIDTemplate")      // drives Product ID processing
#define IPROPNAME_DISKPROMPT       TEXT("DiskPrompt")       // prompt for CD
#define IPROPNAME_LEFTUNIT         TEXT("LeftUnit")         // name of unit placed to left of number instead of right
#define IPROPNAME_ADMIN_PROPERTIES TEXT("AdminProperties")  // properties to stuff in admin package
#define IPROPNAME_DEFAULTUIFONT    TEXT("DefaultUIFont")    // the font used in the UI if no other font is specified
#define IPROPNAME_ALLOWEDPROPERTIES TEXT("SecureCustomProperties")
#define IPROPNAME_ENABLEUSERCONTROL TEXT("EnableUserControl") // allows user to specify any public property
#define IPROPNAME_HIDDEN_PROPERTIES TEXT("MsiHiddenProperties")  // properties that should not be dumped into the log file

// Customization properties: set on command-line or in Property table
#define IPROPNAME_USERNAME         TEXT("USERNAME")
#define IPROPNAME_COMPANYNAME      TEXT("COMPANYNAME")
#define IPROPNAME_PIDKEY           TEXT("PIDKEY")           // used with PIDTemplate to form ProductID
#define IPROPNAME_PATCH            TEXT("PATCH")            // patch package to apply - SET BY INSTALLER
#define IPROPNAME_TARGETDIR        TEXT("TARGETDIR")        // target location - defaults to ROOTDRIVE
#define IPROPNAME_ACTION           TEXT("ACTION")           // top-level action to perform - default to INSTALL
#define IPROPNAME_LIMITUI          TEXT("LIMITUI")          // limit ui level to Basic
#define IPROPNAME_LOGACTION        TEXT("LOGACTION")        // log only these actions
#define IPROPNAME_ALLUSERS         TEXT("ALLUSERS")         // install for all users
#define IPROPNAME_INSTALLLEVEL     TEXT("INSTALLLEVEL")
#define IPROPNAME_REBOOT           TEXT("REBOOT")           // force or suppress reboot
#if (_WIN32_MSI >=  110)
#define IPROPNAME_REBOOTPROMPT     TEXT("REBOOTPROMPT")     // allow or suppress reboot prompt
#endif //(_WIN32_MSI >=  110)
#define IPROPNAME_EXECUTEMODE      TEXT("EXECUTEMODE")      // NONE or SCRIPT
#define IPROPVALUE_EXECUTEMODE_NONE TEXT("NONE")            // do not update system
#define IPROPVALUE_EXECUTEMODE_SCRIPT TEXT("SCRIPT")        // default - run script to update system
#define IPROPNAME_EXECUTEACTION    TEXT("EXECUTEACTION")    // run action on server side
#define IPROPNAME_SOURCELIST       TEXT("SOURCELIST")
#define IPROPNAME_ROOTDRIVE        TEXT("ROOTDRIVE")        // default drive to install - SET BY INSTALLER
#define IPROPNAME_TRANSFORMS       TEXT("TRANSFORMS")       // transforms to apply
#define IPROPNAME_TRANSFORMSATSOURCE TEXT("TRANSFORMSATSOURCE") // transforms can be found at source
#define IPROPNAME_TRANSFORMSSECURE   TEXT("TRANSFORMSSECURE")   // file transforms are secured
#define IPROPNAME_SEQUENCE         TEXT("SEQUENCE")         // sequence table to run with SEQUENCE action
#define IPROPNAME_SHORTFILENAMES   TEXT("SHORTFILENAMES")   // force short file names
#define IPROPNAME_PRIMARYFOLDER    TEXT("PRIMARYFOLDER")	   // Folder on the volume the author wants costing info for
#define IPROPNAME_AFTERREBOOT      TEXT("AFTERREBOOT")      // install is after a ForceReboot triggered reboot
#define IPROPNAME_NOCOMPANYNAME    TEXT("NOCOMPANYNAME")
#define IPROPNAME_NOUSERNAME       TEXT("NOUSERNAME")
#define IPROPNAME_DISABLEROLLBACK  TEXT("DISABLEROLLBACK")  // disable rollback for this install
#define IPROPNAME_AVAILABLEFREEREG TEXT("AVAILABLEFREEREG") // set up the free space in the registry before commencing the install
#define IPROPNAME_DISABLEADVTSHORTCUTS TEXT("DISABLEADVTSHORTCUTS") // disable creating darwin shortcuts even if supported
#define IPROPNAME_PATCHNEWPACKAGECODE TEXT("PATCHNEWPACKAGECODE")   // added to property table by patch transforms - used to update
																						  // PackageCode of admin packages when patching admin installs
#define IPROPNAME_PATCHNEWSUMMARYSUBJECT TEXT("PATCHNEWSUMMARYSUBJECT") // added to property table by patch transforms - used to update
																								// Subject summary info property of admin packages when patching admin installs
#define IPROPNAME_PATCHNEWSUMMARYCOMMENTS TEXT("PATCHNEWSUMMARYCOMMENTS") // added to property table by patch transforms - used to update
																								  // Comments summary info property of admin packages when patching admin installs
#define IPROPNAME_PRODUCTLANGUAGE  TEXT("PRODUCTLANGUAGE")   // requested language, must be one in summary information list, selects language transform
#if (_WIN32_MSI >= 150)
#define IPROPNAME_CHECKCRCS        TEXT("MSICHECKCRCS")      // requests Darwin to check CRCs after copying, moving, patching & duplicating files.
#define IPROPNAME_MSINODISABLEMEDIA TEXT("MSINODISABLEMEDIA")  // if set, DISABLEMEDIA won't be set in the AdminProperties stream during an admin install of
																					// a package with compressed source
																					
// property used for URT bootstrapping
#define IPROPNAME_CARRYINGNDP	TEXT("CARRYINGNDP")
#define IPROPVALUE__CARRYINGNDP_URTREINSTALL  TEXT("URTREINSTALL")   // reinstalling/ uninstalling core URT files
#define IPROPVALUE__CARRYINGNDP_URTUPGRADE  TEXT("URTUPGRADE")  // upgrading core URT files

// properties used for multiple instance support
#define IPROPNAME_MSINEWINSTANCE TEXT("MSINEWINSTANCE")
#define IPROPNAME_MSIINSTANCEGUID TEXT("MSIINSTANCEGUID")

#endif // (_WIN32_MSI >= 150)

// Properties used to populate Add/Remove Control Panel values 
#define IPROPNAME_ARPAUTHORIZEDCDFPREFIX  TEXT("ARPAUTHORIZEDCDFPREFIX")
#define IPROPNAME_ARPCOMMENTS             TEXT("ARPCOMMENTS")
#define IPROPNAME_ARPCONTACT              TEXT("ARPCONTACT")
#define IPROPNAME_ARPHELPLINK             TEXT("ARPHELPLINK")
#define IPROPNAME_ARPHELPTELEPHONE        TEXT("ARPHELPTELEPHONE")
#define IPROPNAME_ARPINSTALLLOCATION      TEXT("ARPINSTALLLOCATION")
#define IPROPNAME_ARPNOMODIFY             TEXT("ARPNOMODIFY")
#define IPROPNAME_ARPNOREMOVE             TEXT("ARPNOREMOVE")
#define IPROPNAME_ARPNOREPAIR             TEXT("ARPNOREPAIR")
#define IPROPNAME_ARPREADME               TEXT("ARPREADME")
#define IPROPNAME_ARPSIZE                 TEXT("ARPSIZE")
#define IPROPNAME_ARPSYSTEMCOMPONENT      TEXT("ARPSYSTEMCOMPONENT")
#define IPROPNAME_ARPURLINFOABOUT         TEXT("ARPURLINFOABOUT")
#define IPROPNAME_ARPURLUPDATEINFO        TEXT("ARPURLUPDATEINFO")
#if (_WIN32_MSI >=  110)
#define IPROPNAME_ARPPRODUCTICON          TEXT("ARPPRODUCTICON")
#endif //(_WIN32_MSI >=  110)

// Dynamic properties set by installer during install
#define IPROPNAME_INSTALLED        TEXT("Installed")        // product already installed
#define IPROPNAME_PRODUCTSTATE     TEXT("ProductState")     // state of product (installed,advertised,etc...)
#define IPROPNAME_PRESELECTED      TEXT("Preselected")      // selections made on command line
#define IPROPNAME_RESUME           TEXT("RESUME")           // resuming suspended install
#define IPROPNAME_UPDATESTARTED    TEXT("UpdateStarted")    // have begun to update system
#define IPROPNAME_PRODUCTID        TEXT("ProductID")        // the complete validated Product ID
#define IPROPNAME_OUTOFDISKSPACE   TEXT("OutOfDiskSpace")
#define IPROPNAME_OUTOFNORBDISKSPACE TEXT("OutOfNoRbDiskSpace")
#define IPROPNAME_COSTINGCOMPLETE  TEXT("CostingComplete")
#define IPROPNAME_SOURCEDIR        TEXT("SourceDir")        // source location - SET BY INSTALLER
#define IPROPNAME_REPLACEDINUSEFILES TEXT("ReplacedInUseFiles") // need reboot to completely install one or more files
#define IPROPNAME_PRIMARYFOLDER_PATH TEXT("PrimaryVolumePath")
#define IPROPNAME_PRIMARYFOLDER_SPACEAVAILABLE TEXT("PrimaryVolumeSpaceAvailable")
#define IPROPNAME_PRIMARYFOLDER_SPACEREQUIRED TEXT("PrimaryVolumeSpaceRequired")
#define IPROPNAME_PRIMARYFOLDER_SPACEREMAINING TEXT("PrimaryVolumeSpaceRemaining")
#define IPROPNAME_ISADMINPACKAGE   TEXT("IsAdminPackage")
#define IPROPNAME_ROLLBACKDISABLED TEXT("RollbackDisabled")
#define IPROPNAME_RESTRICTEDUSERCONTROL TEXT("RestrictedUserControl")

// Dynamic properties evaluated upon use
#define IPROPNAME_TIME             TEXT("Time")
#define IPROPNAME_DATE             TEXT("Date")
#define IPROPNAME_DATETIME         TEXT("DateTime")

// Hardware properties: set by installer at initialization
#define IPROPNAME_INTEL            TEXT("Intel")
#define IPROPNAME_ALPHA            TEXT("Alpha")
#if (_WIN32_MSI >=  110)
#define IPROPNAME_ALPHA64          TEXT("Alpha64")
#if (_WIN32_MSI >= 150)
#define IPROPNAME_INTEL64          TEXT("Intel64")
#else // (_WIN32_MSI >= 150)
#define IPROPNAME_IA64             TEXT("IA64")
#endif // (_WIN32_MSI >= 150)
#endif //(_WIN32_MSI >=  110)
#define IPROPNAME_TEXTHEIGHT       TEXT("TextHeight")
#define IPROPNAME_SCREENX          TEXT("ScreenX")
#define IPROPNAME_SCREENY          TEXT("ScreenY")
#define IPROPNAME_CAPTIONHEIGHT    TEXT("CaptionHeight")
#define IPROPNAME_BORDERTOP        TEXT("BorderTop")
#define IPROPNAME_BORDERSIDE       TEXT("BorderSide")
#define IPROPNAME_COLORBITS        TEXT("ColorBits")
#define IPROPNAME_PHYSICALMEMORY   TEXT("PhysicalMemory")
#define IPROPNAME_VIRTUALMEMORY    TEXT("VirtualMemory")
#if (_WIN32_MSI >= 150)
#define IPROPNAME_TEXTHEIGHT_CORRECTION  TEXT("TextHeightCorrection")
#endif // (_WIN32_MSI >= 150)

// Operating System properties: set by installer at initialization
#define IPROPNAME_VERSIONNT         TEXT("VersionNT")
#define IPROPNAME_VERSION9X         TEXT("Version9X")
#if (_WIN32_MSI >= 150)
#define IPROPNAME_VERSIONNT64       TEXT("VersionNT64")
#endif // (_WIN32_MSI >= 150)
#define IPROPNAME_WINDOWSBUILD      TEXT("WindowsBuild")
#define IPROPNAME_SERVICEPACKLEVEL  TEXT("ServicePackLevel")
#if (_WIN32_MSI >=  110)
#define IPROPNAME_SERVICEPACKLEVELMINOR TEXT("ServicePackLevelMinor")
#endif //(_WIN32_MSI >=  110)
#define IPROPNAME_SHAREDWINDOWS     TEXT("SharedWindows")
#define IPROPNAME_COMPUTERNAME      TEXT("ComputerName")
#define IPROPNAME_SHELLADVTSUPPORT  TEXT("ShellAdvtSupport")
#define IPROPNAME_OLEADVTSUPPORT    TEXT("OLEAdvtSupport")
#define IPROPNAME_SYSTEMLANGUAGEID  TEXT("SystemLanguageID")
#define IPROPNAME_TTCSUPPORT        TEXT("TTCSupport")
#define IPROPNAME_TERMSERVER		TEXT("TerminalServer")
#if (_WIN32_MSI >=  110)
#define IPROPNAME_REMOTEADMINTS		TEXT("RemoteAdminTS")
#define IPROPNAME_REDIRECTEDDLLSUPPORT TEXT("RedirectedDllSupport")
#endif //(_WIN32_MSI >=  110)
#if (_WIN32_MSI >= 150)
#define IPROPNAME_NTPRODUCTTYPE                   TEXT("MsiNTProductType")
#define IPROPNAME_NTSUITEBACKOFFICE               TEXT("MsiNTSuiteBackOffice")
#define IPROPNAME_NTSUITEDATACENTER               TEXT("MsiNTSuiteDataCenter")
#define IPROPNAME_NTSUITEENTERPRISE               TEXT("MsiNTSuiteEnterprise")
#define IPROPNAME_NTSUITESMALLBUSINESS            TEXT("MsiNTSuiteSmallBusiness")
#define IPROPNAME_NTSUITESMALLBUSINESSRESTRICTED  TEXT("MsiNTSuiteSmallBusinessRestricted")
#define IPROPNAME_NTSUITEPERSONAL                 TEXT("MsiNTSuitePersonal")
#define IPROPNAME_NETASSEMBLYSUPPORT              TEXT("MsiNetAssemblySupport")
#define IPROPNAME_WIN32ASSEMBLYSUPPORT            TEXT("MsiWin32AssemblySupport")
#endif // (_WIN32_MSI >= 150)


// User properties: set by installer at initialization
#define IPROPNAME_LOGONUSER        TEXT("LogonUser")
#define IPROPNAME_USERSID          TEXT("UserSID")
#define IPROPNAME_ADMINUSER        TEXT("AdminUser")
#define IPROPNAME_USERLANGUAGEID   TEXT("UserLanguageID")
#define IPROPNAME_PRIVILEGED       TEXT("Privileged")

// System folder properties: set by installer at initialization
#define IPROPNAME_WINDOWS_FOLDER   TEXT("WindowsFolder")
#define IPROPNAME_SYSTEM_FOLDER    TEXT("SystemFolder")
#define IPROPNAME_SYSTEM16_FOLDER  TEXT("System16Folder")
#define IPROPNAME_WINDOWS_VOLUME   TEXT("WindowsVolume")
#define IPROPNAME_TEMP_FOLDER      TEXT("TempFolder")
#define IPROPNAME_PROGRAMFILES_FOLDER TEXT("ProgramFilesFolder")
#define IPROPNAME_COMMONFILES_FOLDER TEXT("CommonFilesFolder")
#if (_WIN32_MSI >= 150)
#define IPROPNAME_SYSTEM64_FOLDER    TEXT("System64Folder")
#define IPROPNAME_PROGRAMFILES64_FOLDER TEXT("ProgramFiles64Folder")
#define IPROPNAME_COMMONFILES64_FOLDER TEXT("CommonFiles64Folder")
#endif // (_WIN32_MSI >= 150)
#define IPROPNAME_STARTMENU_FOLDER TEXT("StartMenuFolder")
#define IPROPNAME_PROGRAMMENU_FOLDER TEXT("ProgramMenuFolder")
#define IPROPNAME_STARTUP_FOLDER   TEXT("StartupFolder")
#define IPROPNAME_NETHOOD_FOLDER   TEXT("NetHoodFolder")
#define IPROPNAME_PERSONAL_FOLDER  TEXT("PersonalFolder")
#define IPROPNAME_SENDTO_FOLDER    TEXT("SendToFolder")
#define IPROPNAME_DESKTOP_FOLDER   TEXT("DesktopFolder")
#define IPROPNAME_TEMPLATE_FOLDER  TEXT("TemplateFolder")
#define IPROPNAME_FONTS_FOLDER     TEXT("FontsFolder")
#define IPROPNAME_FAVORITES_FOLDER TEXT("FavoritesFolder")
#define IPROPNAME_RECENT_FOLDER    TEXT("RecentFolder")
#define IPROPNAME_APPDATA_FOLDER   TEXT("AppDataFolder")
#define IPROPNAME_PRINTHOOD_FOLDER TEXT("PrintHoodFolder")
#if (_WIN32_MSI >=  110)
#define IPROPNAME_ADMINTOOLS_FOLDER TEXT("AdminToolsFolder")
#define IPROPNAME_COMMONAPPDATA_FOLDER TEXT("CommonAppDataFolder")
#define IPROPNAME_LOCALAPPDATA_FOLDER TEXT("LocalAppDataFolder")
#define IPROPNAME_MYPICTURES_FOLDER TEXT("MyPicturesFolder")
#endif //(_WIN32_MSI >=  110)

// Feature/Component installation properties: set on command-line
#define IPROPNAME_FEATUREADDLOCAL  TEXT("ADDLOCAL")
#define IPROPNAME_FEATUREADDSOURCE TEXT("ADDSOURCE")
#define IPROPNAME_FEATUREADDDEFAULT TEXT("ADDDEFAULT")
#define IPROPNAME_FEATUREREMOVE    TEXT("REMOVE")
#define IPROPNAME_FEATUREADVERTISE TEXT("ADVERTISE")
#define IPROPVALUE_FEATURE_ALL  TEXT("ALL")

#define IPROPNAME_COMPONENTADDLOCAL  TEXT("COMPADDLOCAL")
#define IPROPNAME_COMPONENTADDSOURCE TEXT("COMPADDSOURCE")
#define IPROPNAME_COMPONENTADDDEFAULT TEXT("COMPADDDEFAULT")

#define IPROPNAME_FILEADDLOCAL     TEXT("FILEADDLOCAL")
#define IPROPNAME_FILEADDSOURCE    TEXT("FILEADDSOURCE")
#define IPROPNAME_FILEADDDEFAULT   TEXT("FILEADDDEFAULT")

#define IPROPNAME_REINSTALL        TEXT("REINSTALL")
#define IPROPNAME_REINSTALLMODE    TEXT("REINSTALLMODE")
#define IPROPNAME_PROMPTROLLBACKCOST  TEXT("PROMPTROLLBACKCOST")
#define IPROPVALUE_RBCOST_PROMPT      TEXT("P")
#define IPROPVALUE_RBCOST_SILENT      TEXT("D")
#define IPROPVALUE_RBCOST_FAIL        TEXT("F")

// Property for custom actions to communicate
#define IPROPNAME_CUSTOMACTIONDATA     TEXT("CustomActionData")

//__________________________________________________________________________
//
// TOP-LEVEL ACTION NAMES
//__________________________________________________________________________

#define IACTIONNAME_INSTALL        TEXT("INSTALL")
#define IACTIONNAME_ADVERTISE      TEXT("ADVERTISE")
#define IACTIONNAME_ADMIN          TEXT("ADMIN")
#define IACTIONNAME_SEQUENCE       TEXT("SEQUENCE")
#define IACTIONNAME_COLLECTUSERINFO TEXT("CollectUserInfo")
#define IACTIONNAME_FIRSTRUN       TEXT("FirstRun")

//__________________________________________________________________________
//
//  SummaryInformation property stream property IDs
//__________________________________________________________________________

#undef PID_SECURITY // defined as ( 0x80000002 ) in objidl.h, need to redefine here

// standard property definitions, from OLE2 documentation
#define PID_DICTIONARY  ( 0 )// integer count + array of entries
#define PID_CODEPAGE  ( 0x1 )// short integer
#define PID_TITLE         2  // string
#define PID_SUBJECT       3  // string
#define PID_AUTHOR        4  // string
#define PID_KEYWORDS      5  // string
#define PID_COMMENTS      6  // string
#define PID_TEMPLATE      7  // string
#define PID_LASTAUTHOR    8  // string
#define PID_REVNUMBER     9  // string
#define PID_EDITTIME     10  // datatime
#define PID_LASTPRINTED  11  // datetime
#define PID_CREATE_DTM   12  // datetime
#define PID_LASTSAVE_DTM 13  // datetime
#define PID_PAGECOUNT    14  // integer 
#define PID_WORDCOUNT    15  // integer 
#define PID_CHARCOUNT    16  // integer 
#define PID_THUMBNAIL    17  // clipboard format + metafile/bitmap (not supported)
#define PID_APPNAME      18  // string
#define PID_SECURITY     19  // integer

// PIDs given specific meanings for Installer
#define PID_MSIVERSION     PID_PAGECOUNT  // integer, Installer version number (major*100+minor)
#define PID_MSISOURCE      PID_WORDCOUNT  // integer, type of file image, short/long, media/tree
#define PID_MSIRESTRICT    PID_CHARCOUNT  // integer, transform restrictions

//__________________________________________________________________________
//
// INSTALLER DATABASE INTEGER COLUMN DEFINITIONS
//__________________________________________________________________________

// BBControl.Attributes
// Control.Attributes
enum msidbControlAttributes
{
	msidbControlAttributesVisible           = 0x00000001,
	msidbControlAttributesEnabled           = 0x00000002,
	msidbControlAttributesSunken            = 0x00000004,
	msidbControlAttributesIndirect          = 0x00000008,
	msidbControlAttributesInteger           = 0x00000010,
	msidbControlAttributesRTLRO             = 0x00000020,
	msidbControlAttributesRightAligned      = 0x00000040,
	msidbControlAttributesLeftScroll        = 0x00000080,
	msidbControlAttributesBiDi              = msidbControlAttributesRTLRO |
	                                          msidbControlAttributesRightAligned |
										               msidbControlAttributesLeftScroll,
	
	// Text controls
	msidbControlAttributesTransparent       = 0x00010000,
	msidbControlAttributesNoPrefix          = 0x00020000,
	msidbControlAttributesNoWrap            = 0x00040000,
	msidbControlAttributesFormatSize        = 0x00080000,
	msidbControlAttributesUsersLanguage     = 0x00100000,

	// Edit controls
	msidbControlAttributesMultiline         = 0x00010000,
#if (_WIN32_MSI >=  110)
	msidbControlAttributesPasswordInput     = 0x00200000,
#endif //(_WIN32_MSI >=  110)
	
	// ProgressBar controls
	msidbControlAttributesProgress95        = 0x00010000,
	
	// VolumeSelectCombo and DirectoryCombo controls
	msidbControlAttributesRemovableVolume   = 0x00010000,
	msidbControlAttributesFixedVolume       = 0x00020000,
	msidbControlAttributesRemoteVolume      = 0x00040000,
	msidbControlAttributesCDROMVolume       = 0x00080000,
	msidbControlAttributesRAMDiskVolume     = 0x00100000,
	msidbControlAttributesFloppyVolume      = 0x00200000,
	// VolumeCostList controls
	msidbControlShowRollbackCost            = 0x00400000,
	
	// ListBox and ComboBox controls
	msidbControlAttributesSorted            = 0x00010000,
	msidbControlAttributesComboList         = 0x00020000,
	
	// picture button controls
	msidbControlAttributesImageHandle       = 0x00010000,
	msidbControlAttributesPushLike          = 0x00020000,
	msidbControlAttributesBitmap            = 0x00040000,
	msidbControlAttributesIcon              = 0x00080000,
	msidbControlAttributesFixedSize         = 0x00100000,
	msidbControlAttributesIconSize16        = 0x00200000,
	msidbControlAttributesIconSize32        = 0x00400000,
	msidbControlAttributesIconSize48        = 0x00600000,
	
	// RadioButton controls
	msidbControlAttributesHasBorder         = 0x01000000,
};

// CompLocator.Type
// IniLocator.Type
// RegLocator.Type
typedef enum _msidbLocatorType
{
	msidbLocatorTypeDirectory = 0x00000000,
	msidbLocatorTypeFileName  = 0x00000001,
#if (_WIN32_MSI >=  110)
	msidbLocatorTypeRawValue  = 0x00000002,
#endif //(_WIN32_MSI >=  110)
#if (_WIN32_MSI >= 150)
	msidbLocatorType64bit     = 0x00000010,
#endif //(_WIN32_MSI >= 150)
} msidbLocatorType;

// Component.Attributes
enum msidbComponentAttributes
{
	msidbComponentAttributesLocalOnly          = 0x00000000,
	msidbComponentAttributesSourceOnly         = 0x00000001,
	msidbComponentAttributesOptional           = 0x00000002, // local or source
	msidbComponentAttributesRegistryKeyPath    = 0x00000004, // KeyPath is key to Registry table
	msidbComponentAttributesSharedDllRefCount  = 0x00000008, // increment SharedDll count
	msidbComponentAttributesPermanent          = 0x00000010, // never uninstall component
	msidbComponentAttributesODBCDataSource     = 0x00000020, // KeyFile is key to ODBCDataSource table
	msidbComponentAttributesTransitive         = 0x00000040, // Can transition to/from installed/uninstalled based on changing conditional
	msidbComponentAttributesNeverOverwrite     = 0x00000080, // dont stomp over existing component if key path exists (file/ regkey)
#if (_WIN32_MSI >= 150)
	msidbComponentAttributes64bit              = 0x00000100, // designates a 64-bit component; 32-bit if missing.
#endif // (_WIN32_MSI >= 150)
};

#if (_WIN32_MSI >= 150)
// Assembly.Attributes
enum msidbAssemblyAttributes
{
	msidbAssemblyAttributesURT   = 0x00000000,
	msidbAssemblyAttributesWin32 = 0x00000001,
};
#endif // (_WIN32_MSI >= 150)

// CustomAction.Type
enum msidbCustomActionType
{
	// executable types
	msidbCustomActionTypeDll              = 0x00000001,  // Target = entry point name
	msidbCustomActionTypeExe              = 0x00000002,  // Target = command line args
	msidbCustomActionTypeTextData         = 0x00000003,  // Target = text string to be formatted and set into property
	msidbCustomActionTypeJScript          = 0x00000005,  // Target = entry point name, null if none to call
	msidbCustomActionTypeVBScript         = 0x00000006,  // Target = entry point name, null if none to call
	msidbCustomActionTypeInstall          = 0x00000007,  // Target = property list for nested engine initialization

	// source of code
	msidbCustomActionTypeBinaryData       = 0x00000000,  // Source = Binary.Name, data stored in stream
	msidbCustomActionTypeSourceFile       = 0x00000010,  // Source = File.File, file part of installation
	msidbCustomActionTypeDirectory        = 0x00000020,  // Source = Directory.Directory, folder containing existing file
	msidbCustomActionTypeProperty         = 0x00000030,  // Source = Property.Property, full path to executable

	// return processing                  // default is syncronous execution, process return code
	msidbCustomActionTypeContinue         = 0x00000040,  // ignore action return status, continue running
	msidbCustomActionTypeAsync            = 0x00000080,  // run asynchronously
	
	// execution scheduling flags               // default is execute whenever sequenced
	msidbCustomActionTypeFirstSequence    = 0x00000100,  // skip if UI sequence already run
	msidbCustomActionTypeOncePerProcess   = 0x00000200,  // skip if UI sequence already run in same process
	msidbCustomActionTypeClientRepeat     = 0x00000300,  // run on client only if UI already run on client
	msidbCustomActionTypeInScript         = 0x00000400,  // queue for execution within script
	msidbCustomActionTypeRollback         = 0x00000100,  // in conjunction with InScript: queue in Rollback script
	msidbCustomActionTypeCommit           = 0x00000200,  // in conjunction with InScript: run Commit ops from script on success

	// security context flag, default to impersonate as user, valid only if InScript
	msidbCustomActionTypeNoImpersonate    = 0x00000800,  // no impersonation, run in system context

#if (_WIN32_MSI >= 150)
	// script requires 64bit process
	msidbCustomActionType64BitScript      = 0x00001000,  // script should run in 64bit process

	// don't record the contents of the Target field in the log file.
	msidbCustomActionTypeHideTarget       = 0x00002000,
#endif // (_WIN32_MSI >= 150)
};

// Dialog.Attributes
enum msidbDialogAttributes
{
	msidbDialogAttributesVisible          = 0x00000001,
	msidbDialogAttributesModal            = 0x00000002,
	msidbDialogAttributesMinimize         = 0x00000004,
	msidbDialogAttributesSysModal         = 0x00000008,
	msidbDialogAttributesKeepModeless     = 0x00000010,
	msidbDialogAttributesTrackDiskSpace   = 0x00000020,
	msidbDialogAttributesUseCustomPalette = 0x00000040,
	msidbDialogAttributesRTLRO            = 0x00000080,
	msidbDialogAttributesRightAligned     = 0x00000100,
	msidbDialogAttributesLeftScroll       = 0x00000200,
	msidbDialogAttributesBiDi             = msidbDialogAttributesRTLRO |
										             msidbDialogAttributesRightAligned |
										             msidbDialogAttributesLeftScroll,
	msidbDialogAttributesError            = 0x00010000,
};

// Feature.Attributes
enum msidbFeatureAttributes
{
	msidbFeatureAttributesFavorLocal            = 0x00000000,
	msidbFeatureAttributesFavorSource           = 0x00000001,
	msidbFeatureAttributesFollowParent          = 0x00000002,
	msidbFeatureAttributesFavorAdvertise        = 0x00000004,
	msidbFeatureAttributesDisallowAdvertise     = 0x00000008,
	msidbFeatureAttributesUIDisallowAbsent      = 0x00000010,
	msidbFeatureAttributesNoUnsupportedAdvertise= 0x00000020,
};

// File.Attributes
enum msidbFileAttributes
{
	msidbFileAttributesReadOnly       = 0x00000001,
	msidbFileAttributesHidden         = 0x00000002,
	msidbFileAttributesSystem         = 0x00000004,
	msidbFileAttributesReserved0      = 0x00000008, // Internal use only - must be 0
	msidbFileAttributesReserved1      = 0x00000040, // Internal use only - must be 0
	msidbFileAttributesReserved2      = 0x00000080, // Internal use only - must be 0
	msidbFileAttributesReserved3      = 0x00000100, // Internal use only - must be 0
	msidbFileAttributesVital          = 0x00000200,
	msidbFileAttributesChecksum       = 0x00000400,
	msidbFileAttributesPatchAdded     = 0x00001000, // Internal use only - set by patches
	msidbFileAttributesNoncompressed  = 0x00002000,
	msidbFileAttributesCompressed     = 0x00004000,
	msidbFileAttributesReserved4      = 0x00008000, // Internal use only - must be 0
};

// IniFile.Action
// RemoveIniFile.Action
typedef enum _msidbIniFileAction
{
	msidbIniFileActionAddLine    = 0x00000000,
	msidbIniFileActionCreateLine = 0x00000001,
	msidbIniFileActionRemoveLine = 0x00000002,
	msidbIniFileActionAddTag     = 0x00000003,
	msidbIniFileActionRemoveTag  = 0x00000004,
} msidbIniFileAction;

// MoveFile.Options
enum msidbMoveFileOptions
{
	msidbMoveFileOptionsMove = 0x00000001,
};

// ODBCDataSource.Registration
typedef enum _msidbODBCDataSourceRegistration
{
	msidbODBCDataSourceRegistrationPerMachine  = 0x00000000,
	msidbODBCDataSourceRegistrationPerUser     = 0x00000001,
} msidbODBCDataSourceRegistration;

#if (_WIN32_MSI >=  110)

// Class.Attributes
enum msidbClassAttributes
{
	msidbClassAttributesRelativePath  = 0x00000001,
};

#endif //(_WIN32_MSI >=  110)

// Patch.Attributes
enum msidbPatchAttributes
{
	msidbPatchAttributesNonVital = 0x00000001,
};

// Registry.Root
// RegLocator.Root
// RemoveRegistry.Root
enum msidbRegistryRoot
{
	msidbRegistryRootClassesRoot  = 0,
	msidbRegistryRootCurrentUser  = 1,
	msidbRegistryRootLocalMachine = 2,
	msidbRegistryRootUsers        = 3,
};

// RemoveFile.InstallMode
enum msidbRemoveFileInstallMode
{
	msidbRemoveFileInstallModeOnInstall = 0x00000001,
	msidbRemoveFileInstallModeOnRemove  = 0x00000002,
	msidbRemoveFileInstallModeOnBoth    = 0x00000003,
};

// ServiceControl.Event
enum msidbServiceControlEvent
{
	msidbServiceControlEventStart             = 0x00000001,
	msidbServiceControlEventStop              = 0x00000002,
	msidbServiceControlEventDelete            = 0x00000008,
	msidbServiceControlEventUninstallStart    = 0x00000010,
	msidbServiceControlEventUninstallStop     = 0x00000020,
	msidbServiceControlEventUninstallDelete   = 0x00000080,
};

// ServiceInstall.ErrorControl
enum msidbServiceInstallErrorControl
{
	msidbServiceInstallErrorControlVital = 0x00008000,
};

// TextStyle.StyleBits
enum msidbTextStyleStyleBits
{
	msidbTextStyleStyleBitsBold         = 0x00000001,
	msidbTextStyleStyleBitsItalic       = 0x00000002,
	msidbTextStyleStyleBitsUnderline    = 0x00000004,
	msidbTextStyleStyleBitsStrike       = 0x00000008,
};

#if (_WIN32_MSI >=  110)

// Upgrade.Attributes
enum msidbUpgradeAttributes
{
	msidbUpgradeAttributesMigrateFeatures     = 0x00000001,
	msidbUpgradeAttributesOnlyDetect          = 0x00000002,
	msidbUpgradeAttributesIgnoreRemoveFailure = 0x00000004,
	msidbUpgradeAttributesVersionMinInclusive = 0x00000100,
	msidbUpgradeAttributesVersionMaxInclusive = 0x00000200,
	msidbUpgradeAttributesLanguagesExclusive  = 0x00000400,
};

#endif //(_WIN32_MSI >=  110)


//__________________________________________________________________________
//
// SUMMARY INFORMATION PROPERTY DEFINITIONS
//__________________________________________________________________________

enum msidbSumInfoSourceType
{
	msidbSumInfoSourceTypeSFN            = 0x00000001,  // source uses short filenames
	msidbSumInfoSourceTypeCompressed     = 0x00000002,  // source is compressed
	msidbSumInfoSourceTypeAdminImage     = 0x00000004,  // source is an admin image
};

#endif // __MSIDEFS
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\public\sdk\inc\msiquery.h ===
/*****************************************************************************\
*                                                                             *
* MsiQuery.h - Interface to running installer for custom actions and tools    *
*                                                                             *
* Version 2.0                                                                 *
*                                                                             *
* NOTES:  All buffers sizes are TCHAR count, null included only on input      *
*         Return argument pointers may be null if not interested in value     *
*         Returned handles of all types must be closed: MsiCloseHandle(h)     *
*         Functions with UINT return type return a system error code          *
*         Designated functions will set or clear the last error record,       *
*         which is then accessible with MsiGetLastErrorRecord. However,       *
*         the following argument errors do not register an error record:      *
*         ERROR_INVALID_HANDLE, ERROR_INVALID_PARAMETER, ERROR_MORE_DATA.     *
*                                                                             *
* Copyright (c) 1999-2001, Microsoft Corp.      All rights reserved.          *
*                                                                             *
\*****************************************************************************/

#ifndef _MSIQUERY_H_
#define _MSIQUERY_H_
#include "msi.h"  // INSTALLSTATE

#define MSI_NULL_INTEGER 0x80000000  // integer value reserved for null

// MsiOpenDatabase persist predefine values, otherwise output database path is used
#define MSIDBOPEN_READONLY     (LPCTSTR)0  // database open read-only, no persistent changes
#define MSIDBOPEN_TRANSACT     (LPCTSTR)1  // database read/write in transaction mode
#define MSIDBOPEN_DIRECT       (LPCTSTR)2  // database direct read/write without transaction
#define MSIDBOPEN_CREATE       (LPCTSTR)3  // create new database, transact mode read/write
#define MSIDBOPEN_CREATEDIRECT (LPCTSTR)4  // create new database, direct mode read/write
#define MSIDBOPEN_PATCHFILE    32/sizeof(*MSIDBOPEN_READONLY) // add flag to indicate patch file

typedef enum tagMSIDBSTATE
{
	MSIDBSTATE_ERROR    =-1,  // invalid database handle
	MSIDBSTATE_READ     = 0,  // database open read-only, no persistent changes
	MSIDBSTATE_WRITE    = 1,  // database readable and updatable
} MSIDBSTATE;

typedef enum tagMSIMODIFY
{
	MSIMODIFY_SEEK             =-1,  // reposition to current record primary key
	MSIMODIFY_REFRESH          = 0,  // refetch current record data
	MSIMODIFY_INSERT           = 1,  // insert new record, fails if matching key exists
	MSIMODIFY_UPDATE           = 2,  // update existing non-key data of fetched record
	MSIMODIFY_ASSIGN           = 3,  // insert record, replacing any existing record
	MSIMODIFY_REPLACE          = 4,  // update record, delete old if primary key edit
	MSIMODIFY_MERGE            = 5,  // fails if record with duplicate key not identical
	MSIMODIFY_DELETE           = 6,  // remove row referenced by this record from table
	MSIMODIFY_INSERT_TEMPORARY = 7,  // insert a temporary record
	MSIMODIFY_VALIDATE         = 8,  // validate a fetched record
	MSIMODIFY_VALIDATE_NEW     = 9,  // validate a new record
	MSIMODIFY_VALIDATE_FIELD   = 10, // validate field(s) of an incomplete record
	MSIMODIFY_VALIDATE_DELETE  = 11, // validate before deleting record
} MSIMODIFY;

typedef enum tagMSICOLINFO
{
	MSICOLINFO_NAMES = 0,  // return column names
	MSICOLINFO_TYPES = 1,  // return column definitions, datatype code followed by width
} MSICOLINFO;

typedef enum tagMSICONDITION
{
	MSICONDITION_FALSE = 0,  // expression evaluates to False
	MSICONDITION_TRUE  = 1,  // expression evaluates to True
	MSICONDITION_NONE  = 2,  // no expression present
	MSICONDITION_ERROR = 3,  // syntax error in expression
} MSICONDITION;

typedef enum tagMSICOSTTREE
{
	MSICOSTTREE_SELFONLY = 0,
	MSICOSTTREE_CHILDREN = 1,
	MSICOSTTREE_PARENTS  = 2,
	MSICOSTTREE_RESERVED = 3,	// Reserved for future use
} MSICOSTTREE;

typedef enum tagMSIDBERROR
{
	MSIDBERROR_INVALIDARG        = -3, //  invalid argument
	MSIDBERROR_MOREDATA          = -2, //  buffer too small
	MSIDBERROR_FUNCTIONERROR     = -1, //  function error
	MSIDBERROR_NOERROR           = 0,  //  no error
	MSIDBERROR_DUPLICATEKEY      = 1,  //  new record duplicates primary keys of existing record in table
	MSIDBERROR_REQUIRED          = 2,  //  non-nullable column, no null values allowed
	MSIDBERROR_BADLINK           = 3,  //  corresponding record in foreign table not found
	MSIDBERROR_OVERFLOW          = 4,  //  data greater than maximum value allowed
	MSIDBERROR_UNDERFLOW         = 5,  //  data less than minimum value allowed
	MSIDBERROR_NOTINSET          = 6,  //  data not a member of the values permitted in the set
	MSIDBERROR_BADVERSION        = 7,  //  invalid version string
	MSIDBERROR_BADCASE           = 8,  //  invalid case, must be all upper-case or all lower-case
	MSIDBERROR_BADGUID           = 9,  //  invalid GUID
	MSIDBERROR_BADWILDCARD       = 10, //  invalid wildcardfilename or use of wildcards
	MSIDBERROR_BADIDENTIFIER     = 11, //  bad identifier
	MSIDBERROR_BADLANGUAGE       = 12, //  bad language Id(s)
	MSIDBERROR_BADFILENAME       = 13, //  bad filename
	MSIDBERROR_BADPATH           = 14, //  bad path
	MSIDBERROR_BADCONDITION      = 15, //  bad conditional statement
	MSIDBERROR_BADFORMATTED      = 16, //  bad format string
	MSIDBERROR_BADTEMPLATE       = 17, //  bad template string
	MSIDBERROR_BADDEFAULTDIR     = 18, //  bad string in DefaultDir column of Directory table
	MSIDBERROR_BADREGPATH        = 19, //  bad registry path string
	MSIDBERROR_BADCUSTOMSOURCE   = 20, //  bad string in CustomSource column of CustomAction table
	MSIDBERROR_BADPROPERTY       = 21, //  bad property string
	MSIDBERROR_MISSINGDATA       = 22, //  _Validation table missing reference to column
	MSIDBERROR_BADCATEGORY       = 23, //  Category column of _Validation table for column is invalid
	MSIDBERROR_BADKEYTABLE       = 24, //  table in KeyTable column of _Validation table could not be found/loaded
	MSIDBERROR_BADMAXMINVALUES   = 25, //  value in MaxValue column of _Validation table is less than value in MinValue column
	MSIDBERROR_BADCABINET        = 26, //  bad cabinet name
	MSIDBERROR_BADSHORTCUT       = 27, //  bad shortcut target
	MSIDBERROR_STRINGOVERFLOW    = 28, //  string overflow (greater than length allowed in column def)
	MSIDBERROR_BADLOCALIZEATTRIB = 29  //  invalid localization attribute (primary keys cannot be localized)

} MSIDBERROR;

typedef enum tagMSIRUNMODE
{
	MSIRUNMODE_ADMIN           =  0, // admin mode install, else product install
	MSIRUNMODE_ADVERTISE       =  1, // installing advertisements, else installing or updating product
	MSIRUNMODE_MAINTENANCE     =  2, // modifying an existing installation, else new installation
	MSIRUNMODE_ROLLBACKENABLED =  3, // rollback is enabled
	MSIRUNMODE_LOGENABLED      =  4, // log file active, enabled prior to install session
	MSIRUNMODE_OPERATIONS      =  5, // spooling execute operations, else in determination phase
	MSIRUNMODE_REBOOTATEND     =  6, // reboot needed after successful installation (settable)
	MSIRUNMODE_REBOOTNOW       =  7, // reboot needed to continue installation (settable)
	MSIRUNMODE_CABINET         =  8, // installing files from cabinets and files using Media table
	MSIRUNMODE_SOURCESHORTNAMES=  9, // source LongFileNames suppressed via PID_MSISOURCE summary property
	MSIRUNMODE_TARGETSHORTNAMES= 10, // target LongFileNames suppressed via SHORTFILENAMES property
	MSIRUNMODE_RESERVED11      = 11, // future use
	MSIRUNMODE_WINDOWS9X       = 12, // operating systems is Windows9?, else Windows NT
	MSIRUNMODE_ZAWENABLED      = 13, // operating system supports demand installation
	MSIRUNMODE_RESERVED14      = 14, // future use
	MSIRUNMODE_RESERVED15      = 15, // future use
	MSIRUNMODE_SCHEDULED       = 16, // custom action call from install script execution
	MSIRUNMODE_ROLLBACK        = 17, // custom action call from rollback execution script
	MSIRUNMODE_COMMIT          = 18, // custom action call from commit execution script
} MSIRUNMODE;

#define INSTALLMESSAGE_TYPEMASK = 0xFF000000L  // mask for type code

// Note: INSTALLMESSAGE_ERROR, INSTALLMESSAGE_WARNING, INSTALLMESSAGE_USER are to or'd
// with a message box style to indicate the buttons to display and return:
// MB_OK,MB_OKCANCEL,MB_ABORTRETRYIGNORE,MB_YESNOCANCEL,MB_YESNO,MB_RETRYCANCEL
// the default button (MB_DEFBUTTON1 is normal default):
// MB_DEFBUTTON1, MB_DEFBUTTON2, MB_DEFBUTTON3
// and optionally an icon style:
// MB_ICONERROR, MB_ICONQUESTION, MB_ICONWARNING, MB_ICONINFORMATION

typedef enum tagMSITRANSFORM_ERROR
{
	MSITRANSFORM_ERROR_ADDEXISTINGROW   =  0x00000001,
	MSITRANSFORM_ERROR_DELMISSINGROW    =  0x00000002,
	MSITRANSFORM_ERROR_ADDEXISTINGTABLE =  0x00000004,
	MSITRANSFORM_ERROR_DELMISSINGTABLE  =  0x00000008,
	MSITRANSFORM_ERROR_UPDATEMISSINGROW =  0x00000010,
	MSITRANSFORM_ERROR_CHANGECODEPAGE   =  0x00000020,
	MSITRANSFORM_ERROR_VIEWTRANSFORM    =  0x00000100,
} MSITRANSFORM_ERROR;

typedef enum tagMSITRANSFORM_VALIDATE
{
	MSITRANSFORM_VALIDATE_LANGUAGE                   = 0x00000001,
	MSITRANSFORM_VALIDATE_PRODUCT                    = 0x00000002,
	MSITRANSFORM_VALIDATE_PLATFORM                   = 0x00000004,
	MSITRANSFORM_VALIDATE_MAJORVERSION               = 0x00000008,
	MSITRANSFORM_VALIDATE_MINORVERSION               = 0x00000010,
	MSITRANSFORM_VALIDATE_UPDATEVERSION              = 0x00000020,
	MSITRANSFORM_VALIDATE_NEWLESSBASEVERSION         = 0x00000040,
	MSITRANSFORM_VALIDATE_NEWLESSEQUALBASEVERSION    = 0x00000080,
	MSITRANSFORM_VALIDATE_NEWEQUALBASEVERSION        = 0x00000100,
	MSITRANSFORM_VALIDATE_NEWGREATEREQUALBASEVERSION = 0x00000200,
	MSITRANSFORM_VALIDATE_NEWGREATERBASEVERSION      = 0x00000400,
	MSITRANSFORM_VALIDATE_UPGRADECODE                = 0x00000800,
} MSITRANSFORM_VALIDATE;

#ifdef __cplusplus
extern "C" {
#endif

// --------------------------------------------------------------------------
// Installer database access functions
// --------------------------------------------------------------------------

// Prepare a database query, creating a view object
// Returns ERROR_SUCCESS if successful, and the view handle is returned,
// else ERROR_INVALID_HANDLE, ERROR_INVALID_HANDLE_STATE, ERROR_BAD_QUERY_SYNTAX, ERROR_GEN_FAILURE
// Execution of this function sets the error record, accessible via MsiGetLastErrorRecord

UINT WINAPI MsiDatabaseOpenViewA(MSIHANDLE hDatabase,
	LPCSTR     szQuery,            // SQL query to be prepared
	MSIHANDLE*  phView);            // returned view if TRUE
UINT WINAPI MsiDatabaseOpenViewW(MSIHANDLE hDatabase,
	LPCWSTR     szQuery,            // SQL query to be prepared
	MSIHANDLE*  phView);            // returned view if TRUE
#ifdef UNICODE
#define MsiDatabaseOpenView  MsiDatabaseOpenViewW
#else
#define MsiDatabaseOpenView  MsiDatabaseOpenViewA
#endif // !UNICODE

// Returns the MSIDBERROR enum and name of the column corresponding to the error
// Similar to a GetLastError function, but for the view. NOT the same as MsiGetLastErrorRecord
// Returns errors of MsiViewModify.

MSIDBERROR WINAPI MsiViewGetErrorA(MSIHANDLE hView,
	LPSTR szColumnNameBuffer,  // buffer to hold column name 
	DWORD* pcchBuf);			 // size of buffer
MSIDBERROR WINAPI MsiViewGetErrorW(MSIHANDLE hView,
	LPWSTR szColumnNameBuffer,  // buffer to hold column name 
	DWORD* pcchBuf);			 // size of buffer
#ifdef UNICODE
#define MsiViewGetError  MsiViewGetErrorW
#else
#define MsiViewGetError  MsiViewGetErrorA
#endif // !UNICODE

// Exectute the view query, supplying parameters as required
// Returns ERROR_SUCCESS, ERROR_INVALID_HANDLE, ERROR_INVALID_HANDLE_STATE, ERROR_GEN_FAILURE
// Execution of this function sets the error record, accessible via MsiGetLastErrorRecord

UINT WINAPI MsiViewExecute(MSIHANDLE hView,
	MSIHANDLE hRecord);             // optional parameter record, or 0 if none

// Fetch the next sequential record from the view
// Result is ERROR_SUCCESS if a row is found, and its handle is returned
// else ERROR_NO_MORE_ITEMS if no records remain, and a null handle is returned
// else result is error: ERROR_INVALID_HANDLE_STATE, ERROR_INVALID_HANDLE, ERROR_GEN_FAILURE

UINT WINAPI MsiViewFetch(MSIHANDLE hView,
	MSIHANDLE  *phRecord);          // returned data record if fetch succeeds

// Modify a database record, parameters must match types in query columns
// Returns ERROR_SUCCESS, ERROR_INVALID_HANDLE, ERROR_INVALID_HANDLE_STATE, ERROR_GEN_FAILURE, ERROR_ACCESS_DENIED
// Execution of this function sets the error record, accessible via MsiGetLastErrorRecord

UINT WINAPI MsiViewModify(MSIHANDLE hView,
	MSIMODIFY eModifyMode,         // modify action to perform
	MSIHANDLE hRecord);            // record obtained from fetch, or new record

// Return the column names or specifications for the current view
// Returns ERROR_SUCCESS, ERROR_INVALID_HANDLE, ERROR_INVALID_PARAMETER, or ERROR_INVALID_HANDLE_STATE

UINT WINAPI MsiViewGetColumnInfo(MSIHANDLE hView,
	MSICOLINFO eColumnInfo,        // retrieve columns names or definitions
	MSIHANDLE *phRecord);          // returned data record containing all names or definitions

// Release the result set for an executed view, to allow re-execution
// Only needs to be called if not all records have been fetched
// Returns ERROR_SUCCESS, ERROR_INVALID_HANDLE, ERROR_INVALID_HANDLE_STATE

UINT WINAPI MsiViewClose(MSIHANDLE hView);

// Return a record containing the names of all primary key columns for a given table
// Returns an MSIHANDLE for a record containing the name of each column.
// The field count of the record corresponds to the number of primary key columns.
// Field [0] of the record contains the table name.
// Returns ERROR_SUCCESS, ERROR_INVALID_HANDLE, ERROR_INVALID_TABLE

UINT WINAPI MsiDatabaseGetPrimaryKeysA(MSIHANDLE hDatabase,
	LPCSTR    szTableName,       // the name of a specific table <case-sensitive>
	MSIHANDLE  *phRecord);         // returned record if ERROR_SUCCESS
UINT WINAPI MsiDatabaseGetPrimaryKeysW(MSIHANDLE hDatabase,
	LPCWSTR    szTableName,       // the name of a specific table <case-sensitive>
	MSIHANDLE  *phRecord);         // returned record if ERROR_SUCCESS
#ifdef UNICODE
#define MsiDatabaseGetPrimaryKeys  MsiDatabaseGetPrimaryKeysW
#else
#define MsiDatabaseGetPrimaryKeys  MsiDatabaseGetPrimaryKeysA
#endif // !UNICODE

// Return an enum defining the state of the table (temporary, unknown, or persistent).
// Returns MSICONDITION_ERROR, MSICONDITION_FALSE, MSICONDITION_TRUE, MSICONDITION_NONE

MSICONDITION WINAPI MsiDatabaseIsTablePersistentA(MSIHANDLE hDatabase,
	LPCSTR szTableName);         // the name of a specific table
MSICONDITION WINAPI MsiDatabaseIsTablePersistentW(MSIHANDLE hDatabase,
	LPCWSTR szTableName);         // the name of a specific table
#ifdef UNICODE
#define MsiDatabaseIsTablePersistent  MsiDatabaseIsTablePersistentW
#else
#define MsiDatabaseIsTablePersistent  MsiDatabaseIsTablePersistentA
#endif // !UNICODE

// --------------------------------------------------------------------------
// Summary information stream management functions
// --------------------------------------------------------------------------

// Integer Property IDs:    1, 14, 15, 16, 19 
// DateTime Property IDs:   10, 11, 12, 13
// Text Property IDs:       2, 3, 4, 5, 6, 7, 8, 9, 18
// Unsupported Propery IDs: 0 (PID_DICTIONARY), 17 (PID_THUMBNAIL)

// Obtain a handle for the _SummaryInformation stream for an MSI database     
// Execution of this function sets the error record, accessible via MsiGetLastErrorRecord

UINT WINAPI MsiGetSummaryInformationA(MSIHANDLE hDatabase, // 0 if not open
	LPCSTR  szDatabasePath,  // path to database, 0 if database handle supplied
	UINT     uiUpdateCount,    // maximium number of updated values, 0 to open read-only
	MSIHANDLE *phSummaryInfo); // returned handle to summary information data
UINT WINAPI MsiGetSummaryInformationW(MSIHANDLE hDatabase, // 0 if not open
	LPCWSTR  szDatabasePath,  // path to database, 0 if database handle supplied
	UINT     uiUpdateCount,    // maximium number of updated values, 0 to open read-only
	MSIHANDLE *phSummaryInfo); // returned handle to summary information data
#ifdef UNICODE
#define MsiGetSummaryInformation  MsiGetSummaryInformationW
#else
#define MsiGetSummaryInformation  MsiGetSummaryInformationA
#endif // !UNICODE

// Obtain the number of existing properties in the SummaryInformation stream

UINT WINAPI MsiSummaryInfoGetPropertyCount(MSIHANDLE hSummaryInfo,
	UINT *puiPropertyCount); // pointer to location to return total property count

// Set a single summary information property
// Returns ERROR_SUCCESS, ERROR_INVALID_HANDLE, ERROR_UNKNOWN_PROPERTY

UINT WINAPI MsiSummaryInfoSetPropertyA(MSIHANDLE hSummaryInfo,
	UINT     uiProperty,     // property ID, one of allowed values for summary information
	UINT     uiDataType,     // VT_I4, VT_LPSTR, VT_FILETIME, or VT_EMPTY
	INT      iValue,         // integer value, used only if integer property
	FILETIME *pftValue,      // pointer to filetime value, used only if datetime property
	LPCSTR szValue);       // text value, used only if string property
UINT WINAPI MsiSummaryInfoSetPropertyW(MSIHANDLE hSummaryInfo,
	UINT     uiProperty,     // property ID, one of allowed values for summary information
	UINT     uiDataType,     // VT_I4, VT_LPSTR, VT_FILETIME, or VT_EMPTY
	INT      iValue,         // integer value, used only if integer property
	FILETIME *pftValue,      // pointer to filetime value, used only if datetime property
	LPCWSTR szValue);       // text value, used only if string property
#ifdef UNICODE
#define MsiSummaryInfoSetProperty  MsiSummaryInfoSetPropertyW
#else
#define MsiSummaryInfoSetProperty  MsiSummaryInfoSetPropertyA
#endif // !UNICODE

// Get a single property from the summary information
// Returns ERROR_SUCCESS, ERROR_INVALID_HANDLE, ERROR_UNKNOWN_PROPERTY

UINT WINAPI MsiSummaryInfoGetPropertyA(MSIHANDLE hSummaryInfo,
	UINT     uiProperty,     // property ID, one of allowed values for summary information
	UINT     *puiDataType,   // returned type: VT_I4, VT_LPSTR, VT_FILETIME, VT_EMPTY
	INT      *piValue,       // returned integer property data
	FILETIME *pftValue,      // returned datetime property data
	LPSTR  szValueBuf,     // buffer to return string property data
	DWORD    *pcchValueBuf); // in/out buffer character count
UINT WINAPI MsiSummaryInfoGetPropertyW(MSIHANDLE hSummaryInfo,
	UINT     uiProperty,     // property ID, one of allowed values for summary information
	UINT     *puiDataType,   // returned type: VT_I4, VT_LPSTR, VT_FILETIME, VT_EMPTY
	INT      *piValue,       // returned integer property data
	FILETIME *pftValue,      // returned datetime property data
	LPWSTR  szValueBuf,     // buffer to return string property data
	DWORD    *pcchValueBuf); // in/out buffer character count
#ifdef UNICODE
#define MsiSummaryInfoGetProperty  MsiSummaryInfoGetPropertyW
#else
#define MsiSummaryInfoGetProperty  MsiSummaryInfoGetPropertyA
#endif // !UNICODE

// Write back changed information to summary information stream

UINT WINAPI MsiSummaryInfoPersist(MSIHANDLE hSummaryInfo);

// --------------------------------------------------------------------------
// Installer database management functions - not used by custom actions
// --------------------------------------------------------------------------

// Open an installer database, specifying the persistance mode, which is a pointer.
// Predefined persist values are reserved pointer values, requiring pointer arithmetic.
// Execution of this function sets the error record, accessible via MsiGetLastErrorRecord

UINT WINAPI MsiOpenDatabaseA(
	LPCSTR      szDatabasePath,  // path to database, 0 to create temporary database
	LPCSTR      szPersist,       // output database path or one of predefined values
	MSIHANDLE*   phDatabase);     // location to return database handle
UINT WINAPI MsiOpenDatabaseW(
	LPCWSTR      szDatabasePath,  // path to database, 0 to create temporary database
	LPCWSTR      szPersist,       // output database path or one of predefined values
	MSIHANDLE*   phDatabase);     // location to return database handle
#ifdef UNICODE
#define MsiOpenDatabase  MsiOpenDatabaseW
#else
#define MsiOpenDatabase  MsiOpenDatabaseA
#endif // !UNICODE

// Import an MSI text archive table into an open database
// Execution of this function sets the error record, accessible via MsiGetLastErrorRecord

UINT WINAPI MsiDatabaseImportA(MSIHANDLE hDatabase,
	LPCSTR   szFolderPath,     // folder containing archive files
	LPCSTR   szFileName);      // table archive file to be imported
UINT WINAPI MsiDatabaseImportW(MSIHANDLE hDatabase,
	LPCWSTR   szFolderPath,     // folder containing archive files
	LPCWSTR   szFileName);      // table archive file to be imported
#ifdef UNICODE
#define MsiDatabaseImport  MsiDatabaseImportW
#else
#define MsiDatabaseImport  MsiDatabaseImportA
#endif // !UNICODE

// Export an MSI table from an open database to a text archive file
// Execution of this function sets the error record, accessible via MsiGetLastErrorRecord

UINT WINAPI MsiDatabaseExportA(MSIHANDLE hDatabase,
	LPCSTR   szTableName,      // name of table in database <case-sensitive>
	LPCSTR   szFolderPath,     // folder containing archive files
	LPCSTR   szFileName);      // name of exported table archive file
UINT WINAPI MsiDatabaseExportW(MSIHANDLE hDatabase,
	LPCWSTR   szTableName,      // name of table in database <case-sensitive>
	LPCWSTR   szFolderPath,     // folder containing archive files
	LPCWSTR   szFileName);      // name of exported table archive file
#ifdef UNICODE
#define MsiDatabaseExport  MsiDatabaseExportW
#else
#define MsiDatabaseExport  MsiDatabaseExportA
#endif // !UNICODE

// Merge two database together, allowing duplicate rows
// Execution of this function sets the error record, accessible via MsiGetLastErrorRecord

UINT WINAPI MsiDatabaseMergeA(MSIHANDLE hDatabase,
	MSIHANDLE hDatabaseMerge,    // database to be merged into hDatabase
	LPCSTR   szTableName);      // name of non-persistent table to receive errors
UINT WINAPI MsiDatabaseMergeW(MSIHANDLE hDatabase,
	MSIHANDLE hDatabaseMerge,    // database to be merged into hDatabase
	LPCWSTR   szTableName);      // name of non-persistent table to receive errors
#ifdef UNICODE
#define MsiDatabaseMerge  MsiDatabaseMergeW
#else
#define MsiDatabaseMerge  MsiDatabaseMergeA
#endif // !UNICODE

// Generate a transform file of differences between two databases
// Execution of this function sets the error record, accessible via MsiGetLastErrorRecord

UINT WINAPI MsiDatabaseGenerateTransformA(MSIHANDLE hDatabase,
	MSIHANDLE hDatabaseReference, // base database to reference changes
	LPCSTR   szTransformFile,   // name of generated transform file
	int       iReserved1,         // reserved argument, not used
	int       iReserved2);        // reserved argument, not used
UINT WINAPI MsiDatabaseGenerateTransformW(MSIHANDLE hDatabase,
	MSIHANDLE hDatabaseReference, // base database to reference changes
	LPCWSTR   szTransformFile,   // name of generated transform file
	int       iReserved1,         // reserved argument, not used
	int       iReserved2);        // reserved argument, not used
#ifdef UNICODE
#define MsiDatabaseGenerateTransform  MsiDatabaseGenerateTransformW
#else
#define MsiDatabaseGenerateTransform  MsiDatabaseGenerateTransformA
#endif // !UNICODE

// Apply a transform file containing database difference
// Execution of this function sets the error record, accessible via MsiGetLastErrorRecord

UINT WINAPI MsiDatabaseApplyTransformA(MSIHANDLE hDatabase,
	LPCSTR   szTransformFile,    // name of transform file
	int       iErrorConditions);   // errors to suppress, bits from MSITRANSFORM_ERROR
UINT WINAPI MsiDatabaseApplyTransformW(MSIHANDLE hDatabase,
	LPCWSTR   szTransformFile,    // name of transform file
	int       iErrorConditions);   // errors to suppress, bits from MSITRANSFORM_ERROR
#ifdef UNICODE
#define MsiDatabaseApplyTransform  MsiDatabaseApplyTransformW
#else
#define MsiDatabaseApplyTransform  MsiDatabaseApplyTransformA
#endif // !UNICODE

// Create summary information of existing transform to include validation and error conditions
// Execution of this function sets the error record, accessible via MsiGetLastErrorRecord

UINT WINAPI MsiCreateTransformSummaryInfoA(MSIHANDLE hDatabase,
	MSIHANDLE hDatabaseReference, // base database to reference changes
	LPCSTR   szTransformFile,    // name of generated transform file
	int       iErrorConditions,    // errors to suppress when applied, from MSITRANSFORM_ERROR
	int       iValidation);        // properties validated when applied, MSITRANSFORM_VALIDATE
UINT WINAPI MsiCreateTransformSummaryInfoW(MSIHANDLE hDatabase,
	MSIHANDLE hDatabaseReference, // base database to reference changes
	LPCWSTR   szTransformFile,    // name of generated transform file
	int       iErrorConditions,    // errors to suppress when applied, from MSITRANSFORM_ERROR
	int       iValidation);        // properties validated when applied, MSITRANSFORM_VALIDATE
#ifdef UNICODE
#define MsiCreateTransformSummaryInfo  MsiCreateTransformSummaryInfoW
#else
#define MsiCreateTransformSummaryInfo  MsiCreateTransformSummaryInfoA
#endif // !UNICODE

// Write out all persistent table data, ignored if database opened read-only
// Execution of this function sets the error record, accessible via MsiGetLastErrorRecord

UINT WINAPI MsiDatabaseCommit(MSIHANDLE hDatabase);

// Return the update state of a database

MSIDBSTATE WINAPI MsiGetDatabaseState(MSIHANDLE hDatabase);

// --------------------------------------------------------------------------
// Record object functions
// --------------------------------------------------------------------------

// Create a new record object with the requested number of fields
// Field 0, not included in count, is used for format strings and op codes
// All fields are initialized to null
// Returns a handle to the created record, or 0 if memory could not be allocated

MSIHANDLE WINAPI MsiCreateRecord(
	UINT cParams);                   // the number of data fields

// Report whether a record field is NULL
// Returns TRUE if the field is null or does not exist
// Returns FALSE if the field contains data, or the handle is invalid

BOOL WINAPI MsiRecordIsNull(MSIHANDLE hRecord,
	UINT iField);

// Return the length of a record field
// Returns 0 if field is NULL or non-existent
// Returns sizeof(int) if integer data
// Returns character count if string data (not counting null terminator)
// Returns bytes count if stream data

UINT WINAPI MsiRecordDataSize(MSIHANDLE hRecord,
	UINT iField);

// Set a record field to an integer value
// Returns ERROR_SUCCESS, ERROR_INVALID_HANDLE, ERROR_INVALID_FIELD

UINT WINAPI MsiRecordSetInteger(MSIHANDLE hRecord,
	UINT iField,
	int iValue);

// Copy a string into the designated field
// A null string pointer and an empty string both set the field to null
// Returns ERROR_SUCCESS, ERROR_INVALID_HANDLE, ERROR_INVALID_FIELD

UINT WINAPI MsiRecordSetStringA(MSIHANDLE hRecord,
	UINT iField,
	LPCSTR      szValue);
UINT WINAPI MsiRecordSetStringW(MSIHANDLE hRecord,
	UINT iField,
	LPCWSTR      szValue);
#ifdef UNICODE
#define MsiRecordSetString  MsiRecordSetStringW
#else
#define MsiRecordSetString  MsiRecordSetStringA
#endif // !UNICODE

// Return the integer value from a record field
// Returns the value MSI_NULL_INTEGER if the field is null
// or if the field is a string that cannot be converted to an integer

int WINAPI MsiRecordGetInteger(MSIHANDLE hRecord,
	UINT iField);

// Return the string value of a record field
// Integer fields will be converted to a string
// Null and non-existent fields will report a value of 0
// Fields containing stream data will return ERROR_INVALID_DATATYPE
// Returns ERROR_SUCCESS, ERROR_MORE_DATA, 
//         ERROR_INVALID_HANDLE, ERROR_INVALID_FIELD, ERROR_BAD_ARGUMENTS

UINT WINAPI MsiRecordGetStringA(MSIHANDLE hRecord,
	UINT iField,
	LPSTR  szValueBuf,       // buffer for returned value
	DWORD   *pcchValueBuf);   // in/out buffer character count
UINT WINAPI MsiRecordGetStringW(MSIHANDLE hRecord,
	UINT iField,
	LPWSTR  szValueBuf,       // buffer for returned value
	DWORD   *pcchValueBuf);   // in/out buffer character count
#ifdef UNICODE
#define MsiRecordGetString  MsiRecordGetStringW
#else
#define MsiRecordGetString  MsiRecordGetStringA
#endif // !UNICODE

// Returns the number of fields allocated in the record
// Does not count field 0, used for formatting and op codes

UINT WINAPI MsiRecordGetFieldCount(MSIHANDLE hRecord);

// Set a record stream field from a file
// The contents of the specified file will be read into a stream object
// The stream will be persisted if the record is inserted into the database
// Execution of this function sets the error record, accessible via MsiGetLastErrorRecord

UINT WINAPI MsiRecordSetStreamA(MSIHANDLE hRecord,
	UINT iField,
	LPCSTR      szFilePath);   // path to file containing stream data
UINT WINAPI MsiRecordSetStreamW(MSIHANDLE hRecord,
	UINT iField,
	LPCWSTR      szFilePath);   // path to file containing stream data
#ifdef UNICODE
#define MsiRecordSetStream  MsiRecordSetStreamW
#else
#define MsiRecordSetStream  MsiRecordSetStreamA
#endif // !UNICODE

// Read bytes from a record stream field into a buffer
// Must set the in/out argument to the requested byte count to read
// The number of bytes transferred is returned through the argument
// If no more bytes are available, ERROR_SUCCESS is still returned

UINT WINAPI MsiRecordReadStream(MSIHANDLE hRecord,
	UINT iField,
	char    *szDataBuf,     // buffer to receive bytes from stream
	DWORD   *pcbDataBuf);   // in/out buffer byte count

// Clears all data fields in a record to NULL

UINT WINAPI MsiRecordClearData(MSIHANDLE hRecord);

// --------------------------------------------------------------------------
// Functions to access a running installation, called from custom actions
// The install handle is the single argument passed to custom actions
// --------------------------------------------------------------------------

// Return a handle to the database currently in use by this installer instance

MSIHANDLE WINAPI MsiGetActiveDatabase(MSIHANDLE hInstall); // returns handle to database, 0 if none active

// Set the value for an installer property
// If the property is not defined, it will be created
// If the value is null or an empty string, the property will be removed
// Returns ERROR_SUCCESS, ERROR_INVALID_HANDLE, ERROR_BAD_ARGUMENTS

UINT WINAPI MsiSetPropertyA(MSIHANDLE hInstall,
	LPCSTR   szName,       // property identifier, case-sensitive
	LPCSTR   szValue);     // property value, null to undefine property
UINT WINAPI MsiSetPropertyW(MSIHANDLE hInstall,
	LPCWSTR   szName,       // property identifier, case-sensitive
	LPCWSTR   szValue);     // property value, null to undefine property
#ifdef UNICODE
#define MsiSetProperty  MsiSetPropertyW
#else
#define MsiSetProperty  MsiSetPropertyA
#endif // !UNICODE

// Get the value for an installer property
// If the property is not defined, it is equivalent to a 0-length value, not error
// Returns ERROR_SUCCESS, ERROR_MORE_DATA, ERROR_INVALID_HANDLE, ERROR_BAD_ARGUMENTS

UINT  WINAPI MsiGetPropertyA(MSIHANDLE hInstall,
	LPCSTR szName,           // property identifier, case-sensitive
	LPSTR  szValueBuf,       // buffer for returned property value
	DWORD   *pcchValueBuf);   // in/out buffer character count
UINT  WINAPI MsiGetPropertyW(MSIHANDLE hInstall,
	LPCWSTR szName,           // property identifier, case-sensitive
	LPWSTR  szValueBuf,       // buffer for returned property value
	DWORD   *pcchValueBuf);   // in/out buffer character count
#ifdef UNICODE
#define MsiGetProperty  MsiGetPropertyW
#else
#define MsiGetProperty  MsiGetPropertyA
#endif // !UNICODE

// Return the numeric language for the currently running install
// Returns 0 if an install not running

LANGID WINAPI MsiGetLanguage(MSIHANDLE hInstall);

// Return one of the boolean internal installer states
// Returns FALSE if the handle is not active or if the mode is not implemented

BOOL WINAPI MsiGetMode(MSIHANDLE hInstall,
	MSIRUNMODE eRunMode);   // particular mode for which the state is returned

// Set an internal install session boolean mode - Note: most modes are read-only
// Returns ERROR_SUCCESS if the mode can be set to the desired state
// Returns ERROR_ACCESS_DENIED if the mode is not settable
// Returns ERROR_INVALID_HANDLE if the handle is not an active install session

UINT WINAPI MsiSetMode(MSIHANDLE hInstall,
	MSIRUNMODE eRunMode,    // particular mode for which state is to be set
	BOOL fState);           // new state for bit flag

// Format record data using a format string containing field markers and/or properties
// Record field 0 must contain the format string
// Other fields must contain data that may be referenced by the format string.

UINT WINAPI MsiFormatRecordA(MSIHANDLE hInstall, // non-zero for property expansion
	MSIHANDLE hRecord,        // handle to record, field 0 contains format string
	LPSTR    szResultBuf,    // buffer to return formatted string
	DWORD    *pcchResultBuf); // in/out buffer character count
UINT WINAPI MsiFormatRecordW(MSIHANDLE hInstall, // non-zero for property expansion
	MSIHANDLE hRecord,        // handle to record, field 0 contains format string
	LPWSTR    szResultBuf,    // buffer to return formatted string
	DWORD    *pcchResultBuf); // in/out buffer character count
#ifdef UNICODE
#define MsiFormatRecord  MsiFormatRecordW
#else
#define MsiFormatRecord  MsiFormatRecordA
#endif // !UNICODE

// Execute another action, either built-in, custom, or UI wizard
// Returns ERROR_FUNCTION_NOT_CALLED if action not found
// Returns ERROR_SUCCESS if action completed succesfully
// Returns ERROR_INSTALL_USEREXIT if user cancelled during action
// Returns ERROR_INSTALL_FAILURE if action failed
// Returns ERROR_INSTALL_SUSPEND if user suspended installation
// Returns ERROR_MORE_DATA if action wishes to skip remaining actions
// Returns ERROR_INVALID_HANDLE_STATE if install session not active
// Returns ERROR_INVALID_DATA if failure calling custom action
// Returns ERROR_INVALID_HANDLE or ERROR_INVALID_PARAMETER if arguments invalid

UINT WINAPI MsiDoActionA(MSIHANDLE hInstall,
	LPCSTR szAction);     // name of action to call, case-sensitive
UINT WINAPI MsiDoActionW(MSIHANDLE hInstall,
	LPCWSTR szAction);     // name of action to call, case-sensitive
#ifdef UNICODE
#define MsiDoAction  MsiDoActionW
#else
#define MsiDoAction  MsiDoActionA
#endif // !UNICODE

// Execute another action sequence, as descibed in the specified table
// Returns the same error codes as MsiDoAction

UINT WINAPI MsiSequenceA(MSIHANDLE hInstall,
	LPCSTR szTable,       // name of table containing action sequence
	INT iSequenceMode);     // for future use, must be 0 in MSI 1.0
UINT WINAPI MsiSequenceW(MSIHANDLE hInstall,
	LPCWSTR szTable,       // name of table containing action sequence
	INT iSequenceMode);     // for future use, must be 0 in MSI 1.0
#ifdef UNICODE
#define MsiSequence  MsiSequenceW
#else
#define MsiSequence  MsiSequenceA
#endif // !UNICODE

// Send an error record to the installer for processing.
// If field 0 (template) is not set, field 1 must be set to the error code,
//   corresponding the the error message in the Error database table,
//   and the message will be formatted using the template from the Error table
//   before passing it to the UI handler for display.
// Returns Win32 button codes: IDOK IDCANCEL IDABORT IDRETRY IDIGNORE IDYES IDNO
//   or 0 if no action taken, or -1 if invalid argument or handle

int WINAPI MsiProcessMessage(MSIHANDLE hInstall,
	INSTALLMESSAGE eMessageType, // type of message
	MSIHANDLE hRecord);          // record containing message format and data

// Evaluate a conditional expression containing property names and values

MSICONDITION WINAPI MsiEvaluateConditionA(MSIHANDLE hInstall,
	LPCSTR  szCondition);
MSICONDITION WINAPI MsiEvaluateConditionW(MSIHANDLE hInstall,
	LPCWSTR  szCondition);
#ifdef UNICODE
#define MsiEvaluateCondition  MsiEvaluateConditionW
#else
#define MsiEvaluateCondition  MsiEvaluateConditionA
#endif // !UNICODE

// Get the installed state and requested action state of a feature
// Execution of this function sets the error record, accessible via MsiGetLastErrorRecord

UINT WINAPI MsiGetFeatureStateA(MSIHANDLE hInstall,
	LPCSTR     szFeature,     // feature name within product
	INSTALLSTATE *piInstalled,  // returned current install state
	INSTALLSTATE *piAction);    // action taken during install session
UINT WINAPI MsiGetFeatureStateW(MSIHANDLE hInstall,
	LPCWSTR     szFeature,     // feature name within product
	INSTALLSTATE *piInstalled,  // returned current install state
	INSTALLSTATE *piAction);    // action taken during install session
#ifdef UNICODE
#define MsiGetFeatureState  MsiGetFeatureStateW
#else
#define MsiGetFeatureState  MsiGetFeatureStateA
#endif // !UNICODE

// Request a feature to be set to a specified state
// Execution of this function sets the error record, accessible via MsiGetLastErrorRecord

UINT WINAPI MsiSetFeatureStateA(MSIHANDLE hInstall,
	LPCSTR     szFeature,     // feature name within product
	INSTALLSTATE iState);       // requested state for feature
UINT WINAPI MsiSetFeatureStateW(MSIHANDLE hInstall,
	LPCWSTR     szFeature,     // feature name within product
	INSTALLSTATE iState);       // requested state for feature
#ifdef UNICODE
#define MsiSetFeatureState  MsiSetFeatureStateW
#else
#define MsiSetFeatureState  MsiSetFeatureStateA
#endif // !UNICODE

#if (_WIN32_MSI >=  110)

// Set the attribute bits of a specified feature at runtime.
// Execution of this function sets the error record, accessible via MsiGetLastErrorRecord

UINT WINAPI MsiSetFeatureAttributesA(MSIHANDLE hInstall,
	LPCSTR     szFeature,     // feature name within product
	DWORD dwAttributes);        // attributes bits to set for this feature
UINT WINAPI MsiSetFeatureAttributesW(MSIHANDLE hInstall,
	LPCWSTR     szFeature,     // feature name within product
	DWORD dwAttributes);        // attributes bits to set for this feature
#ifdef UNICODE
#define MsiSetFeatureAttributes  MsiSetFeatureAttributesW
#else
#define MsiSetFeatureAttributes  MsiSetFeatureAttributesA
#endif // !UNICODE

#endif //(_WIN32_MSI >=  110)

// Get the installed state and requested action state of a component
// Execution of this function sets the error record, accessible via MsiGetLastErrorRecord

UINT WINAPI MsiGetComponentStateA(MSIHANDLE hInstall,
	LPCSTR     szComponent,   // component name within product
	INSTALLSTATE *piInstalled,  // returned current install state
	INSTALLSTATE *piAction);    // action taken during install session
UINT WINAPI MsiGetComponentStateW(MSIHANDLE hInstall,
	LPCWSTR     szComponent,   // component name within product
	INSTALLSTATE *piInstalled,  // returned current install state
	INSTALLSTATE *piAction);    // action taken during install session
#ifdef UNICODE
#define MsiGetComponentState  MsiGetComponentStateW
#else
#define MsiGetComponentState  MsiGetComponentStateA
#endif // !UNICODE

// Request a component to be set to a specified state
// Execution of this function sets the error record, accessible via MsiGetLastErrorRecord

UINT WINAPI MsiSetComponentStateA(MSIHANDLE hInstall,
	LPCSTR     szComponent,   // component name within product
	INSTALLSTATE iState);       // requested state for component
UINT WINAPI MsiSetComponentStateW(MSIHANDLE hInstall,
	LPCWSTR     szComponent,   // component name within product
	INSTALLSTATE iState);       // requested state for component
#ifdef UNICODE
#define MsiSetComponentState  MsiSetComponentStateW
#else
#define MsiSetComponentState  MsiSetComponentStateA
#endif // !UNICODE

// Return the disk cost for a feature and related features
// Can specify either current feature state or proposed state
// Can specify extent of related features to cost
// Note that adding costs for several features may produce an
// excessively large cost due to shared components and parents.
// Execution of this function sets the error record, accessible via MsiGetLastErrorRecord

UINT  WINAPI MsiGetFeatureCostA(MSIHANDLE hInstall,
	LPCSTR      szFeature,      // name of feature
	MSICOSTTREE  iCostTree,     // portion of tree to cost
	INSTALLSTATE iState,        // requested state, or INSTALLSTATE_UNKNOWN
	INT          *piCost);      // returned cost, in units of 512 bytes
UINT  WINAPI MsiGetFeatureCostW(MSIHANDLE hInstall,
	LPCWSTR      szFeature,      // name of feature
	MSICOSTTREE  iCostTree,     // portion of tree to cost
	INSTALLSTATE iState,        // requested state, or INSTALLSTATE_UNKNOWN
	INT          *piCost);      // returned cost, in units of 512 bytes
#ifdef UNICODE
#define MsiGetFeatureCost  MsiGetFeatureCostW
#else
#define MsiGetFeatureCost  MsiGetFeatureCostA
#endif // !UNICODE

#if (_WIN32_MSI >= 150)

// Enumerates the costs and temporary costs per drives for
// szComponent. If szComponent is set to NULL, it enumerates
// the above costs for the engine, per drives.
//
// The enumeration is 0-based, i.e. it returns the data for
// the first drive when called w/ dwIndex set to 0.
//
// Can specify either current feature state or proposed state.
//
// Execution of this function sets the error record, accessible
// via MsiGetLastErrorRecord.

UINT WINAPI MsiEnumComponentCostsA(MSIHANDLE hInstall,
	LPCSTR      szComponent,     // name of component
	DWORD        dwIndex,         // 0-based index into the list of drives
	INSTALLSTATE iState,          // requested state, or INSTALLSTATE_UNKNOWN
	LPSTR       szDriveBuf,      // buffer for returned value
	DWORD        *pcchDriveBuf,   // in/out buffer character count
	INT          *piCost,         // returned cost, in units of 512 bytes
	INT          *piTempCost);    // returned temporary cost, in units of 512 bytes
UINT WINAPI MsiEnumComponentCostsW(MSIHANDLE hInstall,
	LPCWSTR      szComponent,     // name of component
	DWORD        dwIndex,         // 0-based index into the list of drives
	INSTALLSTATE iState,          // requested state, or INSTALLSTATE_UNKNOWN
	LPWSTR       szDriveBuf,      // buffer for returned value
	DWORD        *pcchDriveBuf,   // in/out buffer character count
	INT          *piCost,         // returned cost, in units of 512 bytes
	INT          *piTempCost);    // returned temporary cost, in units of 512 bytes
#ifdef UNICODE
#define MsiEnumComponentCosts  MsiEnumComponentCostsW
#else
#define MsiEnumComponentCosts  MsiEnumComponentCostsA
#endif // !UNICODE

#endif // (_WIN32_MSI >= 150)

// Set the install level for a full product installation (not a feature request)
// Setting the value to 0 initialized components and features to the default level
// Execution of this function sets the error record, accessible via MsiGetLastErrorRecord

UINT  WINAPI MsiSetInstallLevel(MSIHANDLE hInstall,
	int iInstallLevel);

// Get the valid install states for a feature, represented by bit flags
// For each valid install state, a bit is set of value: (1 << INSTALLSTATE)
// Execution of this function sets the error record, accessible via MsiGetLastErrorRecord

UINT  WINAPI MsiGetFeatureValidStatesA(MSIHANDLE hInstall,
	LPCSTR szFeature,
	DWORD  *dwInstallStates);
UINT  WINAPI MsiGetFeatureValidStatesW(MSIHANDLE hInstall,
	LPCWSTR szFeature,
	DWORD  *dwInstallStates);
#ifdef UNICODE
#define MsiGetFeatureValidStates  MsiGetFeatureValidStatesW
#else
#define MsiGetFeatureValidStates  MsiGetFeatureValidStatesA
#endif // !UNICODE

// Return the full source path for a folder in the Directory table
// Execution of this function sets the error record, accessible via MsiGetLastErrorRecord

UINT WINAPI MsiGetSourcePathA(MSIHANDLE hInstall,
	LPCSTR     szFolder,       // folder identifier, primary key into Directory table
	LPSTR      szPathBuf,      // buffer to return full path
	DWORD       *pcchPathBuf);  // in/out buffer character count
UINT WINAPI MsiGetSourcePathW(MSIHANDLE hInstall,
	LPCWSTR     szFolder,       // folder identifier, primary key into Directory table
	LPWSTR      szPathBuf,      // buffer to return full path
	DWORD       *pcchPathBuf);  // in/out buffer character count
#ifdef UNICODE
#define MsiGetSourcePath  MsiGetSourcePathW
#else
#define MsiGetSourcePath  MsiGetSourcePathA
#endif // !UNICODE

// Return the full target path for a folder in the Directory table
// Execution of this function sets the error record, accessible via MsiGetLastErrorRecord

UINT WINAPI MsiGetTargetPathA(MSIHANDLE hInstall,
	LPCSTR     szFolder,       // folder identifier, primary key into Directory table
	LPSTR      szPathBuf,      // buffer to return full path
	DWORD       *pcchPathBuf);  // in/out buffer character count
UINT WINAPI MsiGetTargetPathW(MSIHANDLE hInstall,
	LPCWSTR     szFolder,       // folder identifier, primary key into Directory table
	LPWSTR      szPathBuf,      // buffer to return full path
	DWORD       *pcchPathBuf);  // in/out buffer character count
#ifdef UNICODE
#define MsiGetTargetPath  MsiGetTargetPathW
#else
#define MsiGetTargetPath  MsiGetTargetPathA
#endif // !UNICODE

// Set the full target path for a folder in the Directory table
// Execution of this function sets the error record, accessible via MsiGetLastErrorRecord

UINT WINAPI MsiSetTargetPathA(MSIHANDLE hInstall,
	LPCSTR     szFolder,       // folder identifier, primary key into Directory table
	LPCSTR     szFolderPath);  // full path for folder, ending in directory separator
UINT WINAPI MsiSetTargetPathW(MSIHANDLE hInstall,
	LPCWSTR     szFolder,       // folder identifier, primary key into Directory table
	LPCWSTR     szFolderPath);  // full path for folder, ending in directory separator
#ifdef UNICODE
#define MsiSetTargetPath  MsiSetTargetPathW
#else
#define MsiSetTargetPath  MsiSetTargetPathA
#endif // !UNICODE

// Check to see if sufficent disk space is present for the current installation
// Returns ERROR_SUCCESS, ERROR_DISK_FULL, ERROR_INVALID_HANDLE_STATE, or ERROR_INVALID_HANDLE

UINT WINAPI MsiVerifyDiskSpace(MSIHANDLE hInstall);

// --------------------------------------------------------------------------
// Functions for rendering UI dialogs from the database representations.
// Purpose is for product development, not for use during installation.
// --------------------------------------------------------------------------

// Enable UI in preview mode to facilitate authoring of UI dialogs.
// The preview mode will end when the handle is closed.

UINT WINAPI MsiEnableUIPreview(MSIHANDLE hDatabase,
	MSIHANDLE* phPreview);       // returned handle for UI preview capability

// Display any UI dialog as modeless and inactive.
// Supplying a null name will remove any current dialog.

UINT WINAPI MsiPreviewDialogA(MSIHANDLE hPreview,
	LPCSTR szDialogName);      // dialog to display, Dialog table key
UINT WINAPI MsiPreviewDialogW(MSIHANDLE hPreview,
	LPCWSTR szDialogName);      // dialog to display, Dialog table key
#ifdef UNICODE
#define MsiPreviewDialog  MsiPreviewDialogW
#else
#define MsiPreviewDialog  MsiPreviewDialogA
#endif // !UNICODE

// Display a billboard within a host control in the displayed dialog.
// Supplying a null billboard name will remove any billboard displayed.

UINT WINAPI MsiPreviewBillboardA(MSIHANDLE hPreview,
	LPCSTR szControlName,      // name of control that accepts billboards
	LPCSTR szBillboard);       // name of billboard to display
UINT WINAPI MsiPreviewBillboardW(MSIHANDLE hPreview,
	LPCWSTR szControlName,      // name of control that accepts billboards
	LPCWSTR szBillboard);       // name of billboard to display
#ifdef UNICODE
#define MsiPreviewBillboard  MsiPreviewBillboardW
#else
#define MsiPreviewBillboard  MsiPreviewBillboardA
#endif // !UNICODE

// --------------------------------------------------------------------------
// Error handling not associated with any particular object
// --------------------------------------------------------------------------

// Return a record handle to the last function that generated an error record
// Only specified functions will set the error record, or clear it if success
// Field 1 of the record will contain the internal MSI error code
// Other fields will contain data specific to the particular error
// The error record is released internally after this function is executed

MSIHANDLE WINAPI MsiGetLastErrorRecord();  // returns 0 if no cached record

#ifdef __cplusplus
}
#endif

#endif // _MSIQUERY_H_
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\public\sdk\inc\msjetoledb.h ===
//=======================================================================
// Microsoft JET OLEDB Provider
//
// Copyright Microsoft (c) 1995-9 Microsoft Corporation.
//
// Component: Microsoft JET Database Engine OLEDB Layer 
//
// File: MSJETOLEDB.H
//
// File Comments: This file contains the GUIDS necessary to load the 
//				  Microsoft JET OLEDB Layer for the JET 4.0 database
//				  Engine.
//
//=======================================================================

#ifndef MSJETOLEDB_H
#define MSJETOLEDB_H

// OLE DB Provider
const GUID CLSID_JETOLEDB_3_51						= {0xdee35060,0x506b,0x11cf,{0xb1,0xaa,0x00,0xaa,0x00,0xb8,0xde,0x95}};
const GUID CLSID_JETOLEDB_4_00						= {0xdee35070,0x506b,0x11cf,{0xb1,0xaa,0x00,0xaa,0x00,0xb8,0xde,0x95}};

// Jet OLEDB Provider-Specific GUIDs
const GUID DBSCHEMA_JETOLEDB_REPLPARTIALFILTERLIST  = {0xe2082df0,0x54ac,0x11d1,{0xbd,0xbb,0x00,0xc0,0x4f,0xb9,0x26,0x75}};
const GUID DBSCHEMA_JETOLEDB_REPLCONFLICTTABLES     = {0xe2082df2,0x54ac,0x11d1,{0xbd,0xbb,0x00,0xc0,0x4f,0xb9,0x26,0x75}};
const GUID DBSCHEMA_JETOLEDB_USERROSTER             = {0x947bb102,0x5d43,0x11d1,{0xbd,0xbf,0x00,0xc0,0x4f,0xb9,0x26,0x75}};
const GUID DBSCHEMA_JETOLEDB_ISAMSTATS              = {0x8703b612,0x5d43,0x11d1,{0xbd,0xbf,0x00,0xc0,0x4f,0xb9,0x26,0x75}};

// Jet(Access)-Specific Security Objects
const GUID DBOBJECT_JETOLEDB_FORMS	 				= {0xc49c842e,0x9dcb,0x11d1,{0x9f,0x0a,0x00,0xc0,0x4f,0xc2,0xc2,0xe0}};
const GUID DBOBJECT_JETOLEDB_SCRIPTS	 			= {0xc49c842f,0x9dcb,0x11d1,{0x9f,0x0a,0x00,0xc0,0x4f,0xc2,0xc2,0xe0}}; // These are Macros in Access
const GUID DBOBJECT_JETOLEDB_REPORTS	 			= {0xc49c8430,0x9dcb,0x11d1,{0x9f,0x0a,0x00,0xc0,0x4f,0xc2,0xc2,0xe0}};
const GUID DBOBJECT_JETOLEDB_MODULES	 			= {0xc49c8432,0x9dcb,0x11d1,{0x9f,0x0a,0x00,0xc0,0x4f,0xc2,0xc2,0xe0}};

// Private Property Set Descriptions
const GUID DBPROPSET_JETOLEDB_ROWSET				= {0xa69de420,0x0025,0x11d0,{0xbc,0x9c,0x00,0xc0,0x4f,0xd7,0x05,0xc2}};
const GUID DBPROPSET_JETOLEDB_SESSION				= {0xb20f6c12,0x9b2a,0x11d0,{0x9e,0xbd,0x00,0xc0,0x4f,0xc2,0xc2,0xe0}};
const GUID DBPROPSET_JETOLEDB_DBINIT				= {0x82cf8156,0x9b40,0x11d0,{0x9e,0xbd,0x00,0xc0,0x4f,0xc2,0xc2,0xe0}};
const GUID DBPROPSET_JETOLEDB_TABLE					= {0xe64cc5fc,0x9ff2,0x11d0,{0x9e,0xbd,0x00,0xc0,0x4f,0xc2,0xc2,0xe0}};
const GUID DBPROPSET_JETOLEDB_COLUMN				= {0x820bf922,0x6ac8,0x11d1,{0x9f,0x02,0x00,0xc0,0x4f,0xc2,0xc2,0xe0}};
const GUID DBPROPSET_JETOLEDB_TRUSTEE				= {0xc9e19286,0x9b4a,0x11d1,{0x9f,0x0a,0x00,0xc0,0x4f,0xc2,0xc2,0xe0}};

// PROPIDs for DBPROPSET_JETOLEDB_ROWSET:
#define DBPROP_JETOLEDB_ODBCPASSTHROUGH					0xFD	// Is this query a pass-through query
#define DBPROP_JETOLEDB_ODBCPASSTHROUGHCONNECTSTRING	0xF2	// Jet Connect String for pass-through query
#define DBPROP_JETOLEDB_BULKPARTIAL						0xEF	// Allow partial bulk operations
#define	DBPROP_JETOLEDB_ENABLEFATCURSOR					0xEE	// Enable "fat cursor" caching
#define DBPROP_JETOLEDB_FATCURSORMAXROWS				0xED	// # of rows to cache in "fat cursor" 
//#define DBPROP_JETOLEDB_3_5_ENABLEIRowsetIndex			0x101	// 3.5 ONLY - enable IRowsetIndex interface for Seek
#define DBPROP_JETOLEDB_STOREDQUERY						0x102	// Treat command text as stored query name
#define DBPROP_JETOLEDB_VALIDATEONSET					0xEC	// Check validation rules on SetData (instead of Update)
#define DBPROP_JETOLEDB_LOCKGRANULARITY					0x107	// Alcatraz Locking Granularity - Row/Page/Default
#define DBPROP_JETOLEDB_BULKNOTRANSACTIONS				0x10C	// Determines if DML bulk operations are transacted
#define DBPROP_JETOLEDB_INCONSISTENT					0x117	// Equivalent to DAO's dbInconsistent
#define DBPROP_JETOLEDB_PASSTHROUGHBULKOP				0x119	// Equivalent to DAO's ReturnsRecords (inversed)

// DBPROPSET_JETOLEDB_ROWSET DBPROP_JETOLEDB_LOCKGRANULARITY Enumeration Values
#define DBPROPVAL_LG_PAGE								0x01	// Page Locking 
#define DBPROPVAL_LG_ALCATRAZ							0x02	// Alcatraz Row Locking


// PROPIDs for DBPROPSET_JETOLEDB_SESSION:
#define DBPROP_JETOLEDB_RECYCLELONGVALUEPAGES			0xF9	// Whether the Jet engine should aggressively reclaim freed after use in BLOBs
#define DBPROP_JETOLEDB_PAGETIMEOUT						0xEB
#define DBPROP_JETOLEDB_SHAREDASYNCDELAY				0xEA
#define DBPROP_JETOLEDB_EXCLUSIVEASYNCDELAY				0xE9
#define DBPROP_JETOLEDB_LOCKRETRY						0xE8
#define DBPROP_JETOLEDB_USERCOMMITSYNC					0xE7
#define DBPROP_JETOLEDB_MAXBUFFERSIZE					0xE6
#define DBPROP_JETOLEDB_LOCKDELAY						0xE5
#define DBPROP_JETOLEDB_FLUSHTRANSACTIONTIMEOUT			0xE4
#define DBPROP_JETOLEDB_IMPLICITCOMMITSYNC				0xE3
#define DBPROP_JETOLEDB_MAXLOCKSPERFILE					0xE2
#define DBPROP_JETOLEDB_ODBCCOMMANDTIMEOUT				0xDB
#define DBPROP_JETOLEDB_RESETISAMSTATS					0x104	// Determines if the ISAMSTATS schema resets after it returns stats
#define DBPROP_JETOLEDB_CONNECTIONCONTROL				0x108	// Passive Shutdown (to prevent others from opening the database)
#define DBPROP_JETOLEDB_ODBCPARSE						0x113	// ODBC Parsing
#define DBPROP_JETOLEDB_PAGELOCKSTOTABLELOCK			0x114	// # of pages locked in a transaction before jet tries to promote to excl. table lock
#define DBPROP_JETOLEDB_SANDBOX							0x115	
#define DBPROP_JETOLEDB_TXNCOMMITMODE					0x116	// Mode to be used when committing transactions

// DBPROPSET_JETOLEDB_SESSION DBPROP_JETOLEDB_CONNECTIONCONTROL Enumeration Values
#define DBPROPVAL_JCC_PASSIVESHUTDOWN					0x01	// prevent others from opening the database
#define DBPROPVAL_JCC_NORMAL							0x02	// allow others to open the database

// DBPROPSET_JETOLEDB_SESSION DBPROP_JETOLEDB_TXNCOMMITMODE Enumeration Values
#define DBPROPVAL_JETOLEDB_TCM_FLUSH					0x01	// Synchronously commit transactions to disk

// PROPIDs for DBPROPSET_JETOLEDB_DBINIT:
#define DBPROP_JETOLEDB_REGPATH							0xFB	// Path to Jet Registry entries
#define DBPROP_JETOLEDB_SYSDBPATH						0xFA	// Full Path to System Database
#define DBPROP_JETOLEDB_DATABASEPASSWORD				0x100	// Password for Database 
#define DBPROP_JETOLEDB_ENGINE							0x103	// Enumeration of Jet Engine/ISAM type/version
#define DBPROP_JETOLEDB_DATABASELOCKMODE				0x106	// Locking Granularity Scheme ("Old"/"Alcatraz" mode)
#define DBPROP_JETOLEDB_GLOBALBULKPARTIAL				0x109	// Database Default Partial/No Partial Behavior
#define DBPROP_JETOLEDB_GLOBALBULKNOTRANSACTIONS		0x10B	// Determines if DML bulk operations are transacted
#define DBPROP_JETOLEDB_NEWDATABASEPASSWORD				0x10D	// Used to set new database password in IDBDataSourceAdmin::ModifyDataSource
#define DBPROP_JETOLEDB_CREATESYSTEMDATABASE			0x10E	// Used on IDBDataSourceAdmin::CreateDataSource to create a system database
#define DBPROP_JETOLEDB_ENCRYPTDATABASE					0x10F	// Used on CreateDatasource, Compact to determine if new database is encrypted
#define DBPROP_JETOLEDB_COMPACT_DONTCOPYLOCALE			0x110	// Don't copy per-column locale information to the compact target
#define DBPROP_JETOLEDB_COMPACT_NOREPAIRREPLICAS		0x112	// Don't try to repair damaged replica databases when compacting
#define DBPROP_JETOLEDB_SFP								0x118	
#define DBPROP_JETOLEDB_COMPACTFREESPACESIZE			0x11A	// How much free space would be reclaimed if the db were compacted

// DBPROP_JETOLEDB_GLOBALBULKPARTIAL/DBPROP_JETOLEDB_BULKPARTIAL Enumeration Values
#define DBPROPVAL_BP_DEFAULT							0x00	// Default (only valid for DBPROP_JETOLEDB_BULKPARTIAL)
#define DBPROPVAL_BP_PARTIAL							0x01	// Use partial updates (like Access)
#define DBPROPVAL_BP_NOPARTIAL							0x02	// Use No Partial Behavior (all or nothing)

// DBPROP_JETOLEDB_GLOBALNOTRANSACTIONS/DBPROP_JETOLEDB_BULKNOTRANSACTIONS Enumeration Values
#define DBPROPVAL_BT_DEFAULT							0x00	// Default (only valid for DBPROP_JETOLEDB_NOTRANSACTIONS)
#define DBPROPVAL_BT_NOBULKTRANSACTIONS					0x01	// Don't transact bulk operations
#define DBPROPVAL_BT_BULKTRANSACTIONS					0x02	// Transact bulk operations

// DBPROPSET_JETOLEDB_DBINIT DBPROP_JETOLEDB_ENGINE Enumeration Values
#define JETDBENGINETYPE_UNKNOWN							0x00	// ISAM Type Unknown/ N/A
#define JETDBENGINETYPE_JET10							0x01
#define JETDBENGINETYPE_JET11							0x02
#define JETDBENGINETYPE_JET2X							0x03
#define JETDBENGINETYPE_JET3X							0x04
#define JETDBENGINETYPE_JET4X							0x05
#define JETDBENGINETYPE_DBASE3							0x10
#define JETDBENGINETYPE_DBASE4							0x11
#define JETDBENGINETYPE_DBASE5							0x12
#define JETDBENGINETYPE_EXCEL30							0x20
#define JETDBENGINETYPE_EXCEL40							0x21
#define JETDBENGINETYPE_EXCEL50							0x22
#define JETDBENGINETYPE_EXCEL80							0x23
#define JETDBENGINETYPE_EXCEL90							0x24
#define JETDBENGINETYPE_EXCHANGE4						0x30
#define JETDBENGINETYPE_LOTUSWK1						0x40
#define JETDBENGINETYPE_LOTUSWK3						0x41
#define JETDBENGINETYPE_LOTUSWK4						0x42
#define JETDBENGINETYPE_PARADOX3X						0x50
#define JETDBENGINETYPE_PARADOX4X						0x51
#define JETDBENGINETYPE_PARADOX5X						0x52
#define JETDBENGINETYPE_PARADOX7X						0x53
#define JETDBENGINETYPE_TEXT1X							0x60
#define JETDBENGINETYPE_HTML1X							0x70

// DBPROPSET_JETOLEDB_DBINIT DBPROP_JETOLEDB_DATABASELOCKMODE Enumeration Values
#define DBPROPVAL_DL_OLDMODE							0x00	// Original Jet Database Locking Scheme
#define DBPROPVAL_DL_ALCATRAZ							0x01	// Alcatraz Technology - enables row-level locking

// PROPIDs for DBPROPSET_JETOLEDB_TABLE:
#define DBPROP_JETOLEDB_LINK							0xF7	// Is this table really a link?
#define DBPROP_JETOLEDB_LINKEXCLUSIVE					0xF6	// Should this link be opened exclusively on the remote database
#define DBPROP_JETOLEDB_LINKDATASOURCE					0xF5	// Remote data source to which to link
#define DBPROP_JETOLEDB_LINKPROVIDERSTRING				0xF4	// Jet Provider string to be used to connect to the remote data source
#define DBPROP_JETOLEDB_LINKREMOTETABLE					0xF3	// remote table name of the link
#define DBPROP_JETOLEDB_LINKCACHE_AUTHINFO				0xF0	// Should authentication information for this link be cached in the database?
#define	DBPROP_JETOLEDB_VALIDATIONRULE					0xD8	// Table Validation Rule
#define	DBPROP_JETOLEDB_VALIDATIONTEXT					0xD7	// Access Text to display when validation rule is not met
#define	DBPROP_JETOLEDB_HIDDENINACCESS					0x10A	// Determines if a table shows up as "hidden" in MS Access

// PROPIDs for DBPROPSET_JETOLEDB_COLUMN:
#define	DBPROP_JETOLEDB_COL_HYPERLINK					0xE1	// Hyperlink flag - use on "LongText" fields only
#define	DBPROP_JETOLEDB_COL_ALLOWZEROLENGTH				0xE0	// Allow Zero Length Strings 
#define	DBPROP_JETOLEDB_COL_COMPRESSED					0xDF	// Compressed Text Columns (Red 4.x only)
#define	DBPROP_JETOLEDB_COL_ONELVPERPAGE				0xDE	// Put more than one BLOB on a page (size allowing)?
#define	DBPROP_JETOLEDB_COL_AUTOGENERATE				0xDD	// Autogenerate the value (GUID columns only)
#define	DBPROP_JETOLEDB_COL_IISAMNOTLAST				0xDC	// used to tell the IISAM you intend to add more columns after this one
#define	DBPROP_JETOLEDB_COL_VALIDATIONRULE				0xDA	// Column validation rule
#define	DBPROP_JETOLEDB_COL_VALIDATIONTEXT				0xD9	// column validation text to display when validation rule is not met

// PROPIDs for DBPROPSET_COLUMN:
#ifndef DBPROP_COL_SEED
#define DBPROP_COL_SEED									0x11AL	
#endif // DBPROP_COL_SEED

#ifndef DBPROP_COL_INCREMENT
#define DBPROP_COL_INCREMENT							0x11BL
#endif // DBPROP_COL_INCREMENT

// PROPIDs for DBPROPSET_JETOLEDB_TRUSTEE:
#define	DBPROP_JETOLEDB_TRUSTEE_PIN						0x105	// Jet User pin (Username + Pin --> SID)

#endif //MSJETOLEDB_H
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\public\sdk\inc\msluguid.h ===
//*********************************************************************
//*                  Microsoft Internet Explorer                     **
//*        Copyright (c) Microsoft Corporation. All rights reserved. **
//*********************************************************************

#ifndef _MSLUGUID_H_
#define _MSLUGUID_H_

// 95D0F020-451D-11CF-8DAB-00AA006C1A01
DEFINE_GUID(CLSID_LocalUsers, 0x95D0F020L, 0x451D, 0x11CF, 0x8D, 0xAB, 0x00, 0xAA, 0x00, 0x6C, 0x1A, 0x01);

// 95D0F023-451D-11CF-8DAB-00AA006C1A01
DEFINE_GUID(IID_IUser,0x95D0F023L, 0x451D, 0x11CF, 0x8D, 0xAB, 0x00, 0xAA, 0x00, 0x6C, 0x1A, 0x01);

// 95D0F022-451D-11CF-8DAB-00AA006C1A01
DEFINE_GUID(IID_IUserDatabase,0x95D0F023L, 0x451D, 0x11CF, 0x8D, 0xAB, 0x00, 0xAA, 0x00, 0x6C, 0x1A, 0x01);

// 95D0F024-451D-11CF-8DAB-00AA006C1A01
DEFINE_GUID(IID_IUserProfileInit,0x95D0F024L, 0x451D, 0x11CF, 0x8D, 0xAB, 0x00, 0xAA, 0x00, 0x6C, 0x1A, 0x01);

#ifdef USER_SETTINGS_IMPLEMENTED
// EA7364C0-0730-11D0-83B1-00C04FD705B2
DEFINE_GUID(IID_IUserSettings,0xEA7364C0L, 0x0730, 0x11D0, 0x83, 0xB1, 0x00, 0xC0, 0x4F, 0xD7, 0x05, 0xB2);
#endif

#endif  // _MSLUGUID_H_
=== C:/Users/treeman/Desktop/windows nt source code\Source\XPSP1\NT\public\sdk\inc\mshtmlc.h ===
#pragma warning( disable: 4049 )  /* more than 64k source lines */

/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 6.00.0347 */
/* Compiler settings for mshtml.idl:
    Oicf, W1, Zp8, env=Win32 (32b run)
    protocol : dce , ms_ext, c_ext
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
//@@MIDL_FILE_HEADING(  )


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 440
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif // __RPCNDR_H_VERSION__

#ifndef COM_NO_WINDOWS_H
#include "windows.h"
#include "ole2.h"
#endif /*COM_NO_WINDOWS_H*/

#ifndef __mshtml_h__
#define __mshtml_h__

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Forward Declarations */ 

#ifndef __IHTMLFiltersCollection_FWD_DEFINED__
#define __IHTMLFiltersCollection_FWD_DEFINED__
typedef interface IHTMLFiltersCollection IHTMLFiltersCollection;
#endif 	/* __IHTMLFiltersCollection_FWD_DEFINED__ */


#ifndef __IHTMLEventObj_FWD_DEFINED__
#define __IHTMLEventObj_FWD_DEFINED__
typedef interface IHTMLEventObj IHTMLEventObj;
#endif 	/* __IHTMLEventObj_FWD_DEFINED__ */


#ifndef __IElementBehaviorSite_FWD_DEFINED__
#define __IElementBehaviorSite_FWD_DEFINED__
typedef interface IElementBehaviorSite IElementBehaviorSite;
#endif 	/* __IElementBehaviorSite_FWD_DEFINED__ */


#ifndef __IElementBehavior_FWD_DEFINED__
#define __IElementBehavior_FWD_DEFINED__
typedef interface IElementBehavior IElementBehavior;
#endif 	/* __IElementBehavior_FWD_DEFINED__ */


#ifndef __IElementBehaviorFactory_FWD_DEFINED__
#define __IElementBehaviorFactory_FWD_DEFINED__
typedef interface IElementBehaviorFactory IElementBehaviorFactory;
#endif 	/* __IElementBehaviorFactory_FWD_DEFINED__ */


#ifndef __IElementBehaviorSiteOM_FWD_DEFINED__
#define __IElementBehaviorSiteOM_FWD_DEFINED__
typedef interface IElementBehaviorSiteOM IElementBehaviorSiteOM;
#endif 	/* __IElementBehaviorSiteOM_FWD_DEFINED__ */


#ifndef __IElementBehaviorRender_FWD_DEFINED__
#define __IElementBehaviorRender_FWD_DEFINED__
typedef interface IElementBehaviorRender IElementBehaviorRender;
#endif 	/* __IElementBehaviorRender_FWD_DEFINED__ */


#ifndef __IElementBehaviorSiteRender_FWD_DEFINED__
#define __IElementBehaviorSiteRender_FWD_DEFINED__
typedef interface IElementBehaviorSiteRender IElementBehaviorSiteRender;
#endif 	/* __IElementBehaviorSiteRender_FWD_DEFINED__ */


#ifndef __IHTMLStyle_FWD_DEFINED__
#define __IHTMLStyle_FWD_DEFINED__
typedef interface IHTMLStyle IHTMLStyle;
#endif 	/* __IHTMLStyle_FWD_DEFINED__ */


#ifndef __IHTMLStyle2_FWD_DEFINED__
#define __IHTMLStyle2_FWD_DEFINED__
typedef interface IHTMLStyle2 IHTMLStyle2;
#endif 	/* __IHTMLStyle2_FWD_DEFINED__ */


#ifndef __IHTMLStyle3_FWD_DEFINED__
#define __IHTMLStyle3_FWD_DEFINED__
typedef interface IHTMLStyle3 IHTMLStyle3;
#endif 	/* __IHTMLStyle3_FWD_DEFINED__ */


#ifndef __IHTMLStyle4_FWD_DEFINED__
#define __IHTMLStyle4_FWD_DEFINED__
typedef interface IHTMLStyle4 IHTMLStyle4;
#endif 	/* __IHTMLStyle4_FWD_DEFINED__ */


#ifndef __IHTMLRuleStyle_FWD_DEFINED__
#define __IHTMLRuleStyle_FWD_DEFINED__
typedef interface IHTMLRuleStyle IHTMLRuleStyle;
#endif 	/* __IHTMLRuleStyle_FWD_DEFINED__ */


#ifndef __IHTMLRuleStyle2_FWD_DEFINED__
#define __IHTMLRuleStyle2_FWD_DEFINED__
typedef interface IHTMLRuleStyle2 IHTMLRuleStyle2;
#endif 	/* __IHTMLRuleStyle2_FWD_DEFINED__ */


#ifndef __IHTMLRuleStyle3_FWD_DEFINED__
#define __IHTMLRuleStyle3_FWD_DEFINED__
typedef interface IHTMLRuleStyle3 IHTMLRuleStyle3;
#endif 	/* __IHTMLRuleStyle3_FWD_DEFINED__ */


#ifndef __IHTMLRuleStyle4_FWD_DEFINED__
#define __IHTMLRuleStyle4_FWD_DEFINED__
typedef interface IHTMLRuleStyle4 IHTMLRuleStyle4;
#endif 	/* __IHTMLRuleStyle4_FWD_DEFINED__ */


#ifndef __DispHTMLStyle_FWD_DEFINED__
#define __DispHTMLStyle_FWD_DEFINED__
typedef interface DispHTMLStyle DispHTMLStyle;
#endif 	/* __DispHTMLStyle_FWD_DEFINED__ */


#ifndef __HTMLStyle_FWD_DEFINED__
#define __HTMLStyle_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLStyle HTMLStyle;
#else
typedef struct HTMLStyle HTMLStyle;
#endif /* __cplusplus */

#endif 	/* __HTMLStyle_FWD_DEFINED__ */


#ifndef __DispHTMLRuleStyle_FWD_DEFINED__
#define __DispHTMLRuleStyle_FWD_DEFINED__
typedef interface DispHTMLRuleStyle DispHTMLRuleStyle;
#endif 	/* __DispHTMLRuleStyle_FWD_DEFINED__ */


#ifndef __HTMLRuleStyle_FWD_DEFINED__
#define __HTMLRuleStyle_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLRuleStyle HTMLRuleStyle;
#else
typedef struct HTMLRuleStyle HTMLRuleStyle;
#endif /* __cplusplus */

#endif 	/* __HTMLRuleStyle_FWD_DEFINED__ */


#ifndef __IHTMLRenderStyle_FWD_DEFINED__
#define __IHTMLRenderStyle_FWD_DEFINED__
typedef interface IHTMLRenderStyle IHTMLRenderStyle;
#endif 	/* __IHTMLRenderStyle_FWD_DEFINED__ */


#ifndef __DispHTMLRenderStyle_FWD_DEFINED__
#define __DispHTMLRenderStyle_FWD_DEFINED__
typedef interface DispHTMLRenderStyle DispHTMLRenderStyle;
#endif 	/* __DispHTMLRenderStyle_FWD_DEFINED__ */


#ifndef __HTMLRenderStyle_FWD_DEFINED__
#define __HTMLRenderStyle_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLRenderStyle HTMLRenderStyle;
#else
typedef struct HTMLRenderStyle HTMLRenderStyle;
#endif /* __cplusplus */

#endif 	/* __HTMLRenderStyle_FWD_DEFINED__ */


#ifndef __IHTMLCurrentStyle_FWD_DEFINED__
#define __IHTMLCurrentStyle_FWD_DEFINED__
typedef interface IHTMLCurrentStyle IHTMLCurrentStyle;
#endif 	/* __IHTMLCurrentStyle_FWD_DEFINED__ */


#ifndef __IHTMLCurrentStyle2_FWD_DEFINED__
#define __IHTMLCurrentStyle2_FWD_DEFINED__
typedef interface IHTMLCurrentStyle2 IHTMLCurrentStyle2;
#endif 	/* __IHTMLCurrentStyle2_FWD_DEFINED__ */


#ifndef __IHTMLCurrentStyle3_FWD_DEFINED__
#define __IHTMLCurrentStyle3_FWD_DEFINED__
typedef interface IHTMLCurrentStyle3 IHTMLCurrentStyle3;
#endif 	/* __IHTMLCurrentStyle3_FWD_DEFINED__ */


#ifndef __DispHTMLCurrentStyle_FWD_DEFINED__
#define __DispHTMLCurrentStyle_FWD_DEFINED__
typedef interface DispHTMLCurrentStyle DispHTMLCurrentStyle;
#endif 	/* __DispHTMLCurrentStyle_FWD_DEFINED__ */


#ifndef __HTMLCurrentStyle_FWD_DEFINED__
#define __HTMLCurrentStyle_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLCurrentStyle HTMLCurrentStyle;
#else
typedef struct HTMLCurrentStyle HTMLCurrentStyle;
#endif /* __cplusplus */

#endif 	/* __HTMLCurrentStyle_FWD_DEFINED__ */


#ifndef __IHTMLElement_FWD_DEFINED__
#define __IHTMLElement_FWD_DEFINED__
typedef interface IHTMLElement IHTMLElement;
#endif 	/* __IHTMLElement_FWD_DEFINED__ */


#ifndef __IHTMLRect_FWD_DEFINED__
#define __IHTMLRect_FWD_DEFINED__
typedef interface IHTMLRect IHTMLRect;
#endif 	/* __IHTMLRect_FWD_DEFINED__ */


#ifndef __IHTMLRectCollection_FWD_DEFINED__
#define __IHTMLRectCollection_FWD_DEFINED__
typedef interface IHTMLRectCollection IHTMLRectCollection;
#endif 	/* __IHTMLRectCollection_FWD_DEFINED__ */


#ifndef __IHTMLDOMNode_FWD_DEFINED__
#define __IHTMLDOMNode_FWD_DEFINED__
typedef interface IHTMLDOMNode IHTMLDOMNode;
#endif 	/* __IHTMLDOMNode_FWD_DEFINED__ */


#ifndef __IHTMLDOMNode2_FWD_DEFINED__
#define __IHTMLDOMNode2_FWD_DEFINED__
typedef interface IHTMLDOMNode2 IHTMLDOMNode2;
#endif 	/* __IHTMLDOMNode2_FWD_DEFINED__ */


#ifndef __IHTMLDOMAttribute_FWD_DEFINED__
#define __IHTMLDOMAttribute_FWD_DEFINED__
typedef interface IHTMLDOMAttribute IHTMLDOMAttribute;
#endif 	/* __IHTMLDOMAttribute_FWD_DEFINED__ */


#ifndef __IHTMLDOMAttribute2_FWD_DEFINED__
#define __IHTMLDOMAttribute2_FWD_DEFINED__
typedef interface IHTMLDOMAttribute2 IHTMLDOMAttribute2;
#endif 	/* __IHTMLDOMAttribute2_FWD_DEFINED__ */


#ifndef __IHTMLDOMTextNode_FWD_DEFINED__
#define __IHTMLDOMTextNode_FWD_DEFINED__
typedef interface IHTMLDOMTextNode IHTMLDOMTextNode;
#endif 	/* __IHTMLDOMTextNode_FWD_DEFINED__ */


#ifndef __IHTMLDOMTextNode2_FWD_DEFINED__
#define __IHTMLDOMTextNode2_FWD_DEFINED__
typedef interface IHTMLDOMTextNode2 IHTMLDOMTextNode2;
#endif 	/* __IHTMLDOMTextNode2_FWD_DEFINED__ */


#ifndef __IHTMLDOMImplementation_FWD_DEFINED__
#define __IHTMLDOMImplementation_FWD_DEFINED__
typedef interface IHTMLDOMImplementation IHTMLDOMImplementation;
#endif 	/* __IHTMLDOMImplementation_FWD_DEFINED__ */


#ifndef __DispHTMLDOMAttribute_FWD_DEFINED__
#define __DispHTMLDOMAttribute_FWD_DEFINED__
typedef interface DispHTMLDOMAttribute DispHTMLDOMAttribute;
#endif 	/* __DispHTMLDOMAttribute_FWD_DEFINED__ */


#ifndef __HTMLDOMAttribute_FWD_DEFINED__
#define __HTMLDOMAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLDOMAttribute HTMLDOMAttribute;
#else
typedef struct HTMLDOMAttribute HTMLDOMAttribute;
#endif /* __cplusplus */

#endif 	/* __HTMLDOMAttribute_FWD_DEFINED__ */


#ifndef __DispHTMLDOMTextNode_FWD_DEFINED__
#define __DispHTMLDOMTextNode_FWD_DEFINED__
typedef interface DispHTMLDOMTextNode DispHTMLDOMTextNode;
#endif 	/* __DispHTMLDOMTextNode_FWD_DEFINED__ */


#ifndef __HTMLDOMTextNode_FWD_DEFINED__
#define __HTMLDOMTextNode_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLDOMTextNode HTMLDOMTextNode;
#else
typedef struct HTMLDOMTextNode HTMLDOMTextNode;
#endif /* __cplusplus */

#endif 	/* __HTMLDOMTextNode_FWD_DEFINED__ */


#ifndef __DispHTMLDOMImplementation_FWD_DEFINED__
#define __DispHTMLDOMImplementation_FWD_DEFINED__
typedef interface DispHTMLDOMImplementation DispHTMLDOMImplementation;
#endif 	/* __DispHTMLDOMImplementation_FWD_DEFINED__ */


#ifndef __HTMLDOMImplementation_FWD_DEFINED__
#define __HTMLDOMImplementation_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLDOMImplementation HTMLDOMImplementation;
#else
typedef struct HTMLDOMImplementation HTMLDOMImplementation;
#endif /* __cplusplus */

#endif 	/* __HTMLDOMImplementation_FWD_DEFINED__ */


#ifndef __IHTMLAttributeCollection_FWD_DEFINED__
#define __IHTMLAttributeCollection_FWD_DEFINED__
typedef interface IHTMLAttributeCollection IHTMLAttributeCollection;
#endif 	/* __IHTMLAttributeCollection_FWD_DEFINED__ */


#ifndef __IHTMLAttributeCollection2_FWD_DEFINED__
#define __IHTMLAttributeCollection2_FWD_DEFINED__
typedef interface IHTMLAttributeCollection2 IHTMLAttributeCollection2;
#endif 	/* __IHTMLAttributeCollection2_FWD_DEFINED__ */


#ifndef __IHTMLDOMChildrenCollection_FWD_DEFINED__
#define __IHTMLDOMChildrenCollection_FWD_DEFINED__
typedef interface IHTMLDOMChildrenCollection IHTMLDOMChildrenCollection;
#endif 	/* __IHTMLDOMChildrenCollection_FWD_DEFINED__ */


#ifndef __DispHTMLAttributeCollection_FWD_DEFINED__
#define __DispHTMLAttributeCollection_FWD_DEFINED__
typedef interface DispHTMLAttributeCollection DispHTMLAttributeCollection;
#endif 	/* __DispHTMLAttributeCollection_FWD_DEFINED__ */


#ifndef __HTMLAttributeCollection_FWD_DEFINED__
#define __HTMLAttributeCollection_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLAttributeCollection HTMLAttributeCollection;
#else
typedef struct HTMLAttributeCollection HTMLAttributeCollection;
#endif /* __cplusplus */

#endif 	/* __HTMLAttributeCollection_FWD_DEFINED__ */


#ifndef __DispDOMChildrenCollection_FWD_DEFINED__
#define __DispDOMChildrenCollection_FWD_DEFINED__
typedef interface DispDOMChildrenCollection DispDOMChildrenCollection;
#endif 	/* __DispDOMChildrenCollection_FWD_DEFINED__ */


#ifndef __DOMChildrenCollection_FWD_DEFINED__
#define __DOMChildrenCollection_FWD_DEFINED__

#ifdef __cplusplus
typedef class DOMChildrenCollection DOMChildrenCollection;
#else
typedef struct DOMChildrenCollection DOMChildrenCollection;
#endif /* __cplusplus */

#endif 	/* __DOMChildrenCollection_FWD_DEFINED__ */


#ifndef __HTMLElementEvents2_FWD_DEFINED__
#define __HTMLElementEvents2_FWD_DEFINED__
typedef interface HTMLElementEvents2 HTMLElementEvents2;
#endif 	/* __HTMLElementEvents2_FWD_DEFINED__ */


#ifndef __HTMLElementEvents_FWD_DEFINED__
#define __HTMLElementEvents_FWD_DEFINED__
typedef interface HTMLElementEvents HTMLElementEvents;
#endif 	/* __HTMLElementEvents_FWD_DEFINED__ */


#ifndef __IHTMLElementCollection_FWD_DEFINED__
#define __IHTMLElementCollection_FWD_DEFINED__
typedef interface IHTMLElementCollection IHTMLElementCollection;
#endif 	/* __IHTMLElementCollection_FWD_DEFINED__ */


#ifndef __IHTMLFiltersCollection_FWD_DEFINED__
#define __IHTMLFiltersCollection_FWD_DEFINED__
typedef interface IHTMLFiltersCollection IHTMLFiltersCollection;
#endif 	/* __IHTMLFiltersCollection_FWD_DEFINED__ */


#ifndef __IHTMLElement2_FWD_DEFINED__
#define __IHTMLElement2_FWD_DEFINED__
typedef interface IHTMLElement2 IHTMLElement2;
#endif 	/* __IHTMLElement2_FWD_DEFINED__ */


#ifndef __IHTMLElement3_FWD_DEFINED__
#define __IHTMLElement3_FWD_DEFINED__
typedef interface IHTMLElement3 IHTMLElement3;
#endif 	/* __IHTMLElement3_FWD_DEFINED__ */


#ifndef __IHTMLElement4_FWD_DEFINED__
#define __IHTMLElement4_FWD_DEFINED__
typedef interface IHTMLElement4 IHTMLElement4;
#endif 	/* __IHTMLElement4_FWD_DEFINED__ */


#ifndef __IHTMLElementRender_FWD_DEFINED__
#define __IHTMLElementRender_FWD_DEFINED__
typedef interface IHTMLElementRender IHTMLElementRender;
#endif 	/* __IHTMLElementRender_FWD_DEFINED__ */


#ifndef __IHTMLUniqueName_FWD_DEFINED__
#define __IHTMLUniqueName_FWD_DEFINED__
typedef interface IHTMLUniqueName IHTMLUniqueName;
#endif 	/* __IHTMLUniqueName_FWD_DEFINED__ */


#ifndef __IHTMLDatabinding_FWD_DEFINED__
#define __IHTMLDatabinding_FWD_DEFINED__
typedef interface IHTMLDatabinding IHTMLDatabinding;
#endif 	/* __IHTMLDatabinding_FWD_DEFINED__ */


#ifndef __IHTMLDocument_FWD_DEFINED__
#define __IHTMLDocument_FWD_DEFINED__
typedef interface IHTMLDocument IHTMLDocument;
#endif 	/* __IHTMLDocument_FWD_DEFINED__ */


#ifndef __IHTMLElementDefaults_FWD_DEFINED__
#define __IHTMLElementDefaults_FWD_DEFINED__
typedef interface IHTMLElementDefaults IHTMLElementDefaults;
#endif 	/* __IHTMLElementDefaults_FWD_DEFINED__ */


#ifndef __DispHTMLDefaults_FWD_DEFINED__
#define __DispHTMLDefaults_FWD_DEFINED__
typedef interface DispHTMLDefaults DispHTMLDefaults;
#endif 	/* __DispHTMLDefaults_FWD_DEFINED__ */


#ifndef __HTMLDefaults_FWD_DEFINED__
#define __HTMLDefaults_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLDefaults HTMLDefaults;
#else
typedef struct HTMLDefaults HTMLDefaults;
#endif /* __cplusplus */

#endif 	/* __HTMLDefaults_FWD_DEFINED__ */


#ifndef __IHTCDefaultDispatch_FWD_DEFINED__
#define __IHTCDefaultDispatch_FWD_DEFINED__
typedef interface IHTCDefaultDispatch IHTCDefaultDispatch;
#endif 	/* __IHTCDefaultDispatch_FWD_DEFINED__ */


#ifndef __IHTCPropertyBehavior_FWD_DEFINED__
#define __IHTCPropertyBehavior_FWD_DEFINED__
typedef interface IHTCPropertyBehavior IHTCPropertyBehavior;
#endif 	/* __IHTCPropertyBehavior_FWD_DEFINED__ */


#ifndef __IHTCMethodBehavior_FWD_DEFINED__
#define __IHTCMethodBehavior_FWD_DEFINED__
typedef interface IHTCMethodBehavior IHTCMethodBehavior;
#endif 	/* __IHTCMethodBehavior_FWD_DEFINED__ */


#ifndef __IHTCEventBehavior_FWD_DEFINED__
#define __IHTCEventBehavior_FWD_DEFINED__
typedef interface IHTCEventBehavior IHTCEventBehavior;
#endif 	/* __IHTCEventBehavior_FWD_DEFINED__ */


#ifndef __IHTCAttachBehavior_FWD_DEFINED__
#define __IHTCAttachBehavior_FWD_DEFINED__
typedef interface IHTCAttachBehavior IHTCAttachBehavior;
#endif 	/* __IHTCAttachBehavior_FWD_DEFINED__ */


#ifndef __IHTCAttachBehavior2_FWD_DEFINED__
#define __IHTCAttachBehavior2_FWD_DEFINED__
typedef interface IHTCAttachBehavior2 IHTCAttachBehavior2;
#endif 	/* __IHTCAttachBehavior2_FWD_DEFINED__ */


#ifndef __IHTCDescBehavior_FWD_DEFINED__
#define __IHTCDescBehavior_FWD_DEFINED__
typedef interface IHTCDescBehavior IHTCDescBehavior;
#endif 	/* __IHTCDescBehavior_FWD_DEFINED__ */


#ifndef __DispHTCDefaultDispatch_FWD_DEFINED__
#define __DispHTCDefaultDispatch_FWD_DEFINED__
typedef interface DispHTCDefaultDispatch DispHTCDefaultDispatch;
#endif 	/* __DispHTCDefaultDispatch_FWD_DEFINED__ */


#ifndef __HTCDefaultDispatch_FWD_DEFINED__
#define __HTCDefaultDispatch_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTCDefaultDispatch HTCDefaultDispatch;
#else
typedef struct HTCDefaultDispatch HTCDefaultDispatch;
#endif /* __cplusplus */

#endif 	/* __HTCDefaultDispatch_FWD_DEFINED__ */


#ifndef __DispHTCPropertyBehavior_FWD_DEFINED__
#define __DispHTCPropertyBehavior_FWD_DEFINED__
typedef interface DispHTCPropertyBehavior DispHTCPropertyBehavior;
#endif 	/* __DispHTCPropertyBehavior_FWD_DEFINED__ */


#ifndef __HTCPropertyBehavior_FWD_DEFINED__
#define __HTCPropertyBehavior_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTCPropertyBehavior HTCPropertyBehavior;
#else
typedef struct HTCPropertyBehavior HTCPropertyBehavior;
#endif /* __cplusplus */

#endif 	/* __HTCPropertyBehavior_FWD_DEFINED__ */


#ifndef __DispHTCMethodBehavior_FWD_DEFINED__
#define __DispHTCMethodBehavior_FWD_DEFINED__
typedef interface DispHTCMethodBehavior DispHTCMethodBehavior;
#endif 	/* __DispHTCMethodBehavior_FWD_DEFINED__ */


#ifndef __HTCMethodBehavior_FWD_DEFINED__
#define __HTCMethodBehavior_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTCMethodBehavior HTCMethodBehavior;
#else
typedef struct HTCMethodBehavior HTCMethodBehavior;
#endif /* __cplusplus */

#endif 	/* __HTCMethodBehavior_FWD_DEFINED__ */


#ifndef __DispHTCEventBehavior_FWD_DEFINED__
#define __DispHTCEventBehavior_FWD_DEFINED__
typedef interface DispHTCEventBehavior DispHTCEventBehavior;
#endif 	/* __DispHTCEventBehavior_FWD_DEFINED__ */


#ifndef __HTCEventBehavior_FWD_DEFINED__
#define __HTCEventBehavior_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTCEventBehavior HTCEventBehavior;
#else
typedef struct HTCEventBehavior HTCEventBehavior;
#endif /* __cplusplus */

#endif 	/* __HTCEventBehavior_FWD_DEFINED__ */


#ifndef __DispHTCAttachBehavior_FWD_DEFINED__
#define __DispHTCAttachBehavior_FWD_DEFINED__
typedef interface DispHTCAttachBehavior DispHTCAttachBehavior;
#endif 	/* __DispHTCAttachBehavior_FWD_DEFINED__ */


#ifndef __HTCAttachBehavior_FWD_DEFINED__
#define __HTCAttachBehavior_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTCAttachBehavior HTCAttachBehavior;
#else
typedef struct HTCAttachBehavior HTCAttachBehavior;
#endif /* __cplusplus */

#endif 	/* __HTCAttachBehavior_FWD_DEFINED__ */


#ifndef __DispHTCDescBehavior_FWD_DEFINED__
#define __DispHTCDescBehavior_FWD_DEFINED__
typedef interface DispHTCDescBehavior DispHTCDescBehavior;
#endif 	/* __DispHTCDescBehavior_FWD_DEFINED__ */


#ifndef __HTCDescBehavior_FWD_DEFINED__
#define __HTCDescBehavior_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTCDescBehavior HTCDescBehavior;
#else
typedef struct HTCDescBehavior HTCDescBehavior;
#endif /* __cplusplus */

#endif 	/* __HTCDescBehavior_FWD_DEFINED__ */


#ifndef __IHTMLUrnCollection_FWD_DEFINED__
#define __IHTMLUrnCollection_FWD_DEFINED__
typedef interface IHTMLUrnCollection IHTMLUrnCollection;
#endif 	/* __IHTMLUrnCollection_FWD_DEFINED__ */


#ifndef __HTMLUrnCollection_FWD_DEFINED__
#define __HTMLUrnCollection_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLUrnCollection HTMLUrnCollection;
#else
typedef struct HTMLUrnCollection HTMLUrnCollection;
#endif /* __cplusplus */

#endif 	/* __HTMLUrnCollection_FWD_DEFINED__ */


#ifndef __IHTMLGenericElement_FWD_DEFINED__
#define __IHTMLGenericElement_FWD_DEFINED__
typedef interface IHTMLGenericElement IHTMLGenericElement;
#endif 	/* __IHTMLGenericElement_FWD_DEFINED__ */


#ifndef __DispHTMLGenericElement_FWD_DEFINED__
#define __DispHTMLGenericElement_FWD_DEFINED__
typedef interface DispHTMLGenericElement DispHTMLGenericElement;
#endif 	/* __DispHTMLGenericElement_FWD_DEFINED__ */


#ifndef __HTMLGenericElement_FWD_DEFINED__
#define __HTMLGenericElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLGenericElement HTMLGenericElement;
#else
typedef struct HTMLGenericElement HTMLGenericElement;
#endif /* __cplusplus */

#endif 	/* __HTMLGenericElement_FWD_DEFINED__ */


#ifndef __IHTMLStyleSheetRule_FWD_DEFINED__
#define __IHTMLStyleSheetRule_FWD_DEFINED__
typedef interface IHTMLStyleSheetRule IHTMLStyleSheetRule;
#endif 	/* __IHTMLStyleSheetRule_FWD_DEFINED__ */


#ifndef __IHTMLStyleSheetRulesCollection_FWD_DEFINED__
#define __IHTMLStyleSheetRulesCollection_FWD_DEFINED__
typedef interface IHTMLStyleSheetRulesCollection IHTMLStyleSheetRulesCollection;
#endif 	/* __IHTMLStyleSheetRulesCollection_FWD_DEFINED__ */


#ifndef __HTMLStyleSheetRule_FWD_DEFINED__
#define __HTMLStyleSheetRule_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLStyleSheetRule HTMLStyleSheetRule;
#else
typedef struct HTMLStyleSheetRule HTMLStyleSheetRule;
#endif /* __cplusplus */

#endif 	/* __HTMLStyleSheetRule_FWD_DEFINED__ */


#ifndef __HTMLStyleSheetRulesCollection_FWD_DEFINED__
#define __HTMLStyleSheetRulesCollection_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLStyleSheetRulesCollection HTMLStyleSheetRulesCollection;
#else
typedef struct HTMLStyleSheetRulesCollection HTMLStyleSheetRulesCollection;
#endif /* __cplusplus */

#endif 	/* __HTMLStyleSheetRulesCollection_FWD_DEFINED__ */


#ifndef __IHTMLStyleSheetPage_FWD_DEFINED__
#define __IHTMLStyleSheetPage_FWD_DEFINED__
typedef interface IHTMLStyleSheetPage IHTMLStyleSheetPage;
#endif 	/* __IHTMLStyleSheetPage_FWD_DEFINED__ */


#ifndef __IHTMLStyleSheetPagesCollection_FWD_DEFINED__
#define __IHTMLStyleSheetPagesCollection_FWD_DEFINED__
typedef interface IHTMLStyleSheetPagesCollection IHTMLStyleSheetPagesCollection;
#endif 	/* __IHTMLStyleSheetPagesCollection_FWD_DEFINED__ */


#ifndef __HTMLStyleSheetPage_FWD_DEFINED__
#define __HTMLStyleSheetPage_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLStyleSheetPage HTMLStyleSheetPage;
#else
typedef struct HTMLStyleSheetPage HTMLStyleSheetPage;
#endif /* __cplusplus */

#endif 	/* __HTMLStyleSheetPage_FWD_DEFINED__ */


#ifndef __HTMLStyleSheetPagesCollection_FWD_DEFINED__
#define __HTMLStyleSheetPagesCollection_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLStyleSheetPagesCollection HTMLStyleSheetPagesCollection;
#else
typedef struct HTMLStyleSheetPagesCollection HTMLStyleSheetPagesCollection;
#endif /* __cplusplus */

#endif 	/* __HTMLStyleSheetPagesCollection_FWD_DEFINED__ */


#ifndef __IHTMLStyleSheetsCollection_FWD_DEFINED__
#define __IHTMLStyleSheetsCollection_FWD_DEFINED__
typedef interface IHTMLStyleSheetsCollection IHTMLStyleSheetsCollection;
#endif 	/* __IHTMLStyleSheetsCollection_FWD_DEFINED__ */


#ifndef __IHTMLStyleSheet_FWD_DEFINED__
#define __IHTMLStyleSheet_FWD_DEFINED__
typedef interface IHTMLStyleSheet IHTMLStyleSheet;
#endif 	/* __IHTMLStyleSheet_FWD_DEFINED__ */


#ifndef __IHTMLStyleSheet2_FWD_DEFINED__
#define __IHTMLStyleSheet2_FWD_DEFINED__
typedef interface IHTMLStyleSheet2 IHTMLStyleSheet2;
#endif 	/* __IHTMLStyleSheet2_FWD_DEFINED__ */


#ifndef __DispHTMLStyleSheet_FWD_DEFINED__
#define __DispHTMLStyleSheet_FWD_DEFINED__
typedef interface DispHTMLStyleSheet DispHTMLStyleSheet;
#endif 	/* __DispHTMLStyleSheet_FWD_DEFINED__ */


#ifndef __HTMLStyleSheet_FWD_DEFINED__
#define __HTMLStyleSheet_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLStyleSheet HTMLStyleSheet;
#else
typedef struct HTMLStyleSheet HTMLStyleSheet;
#endif /* __cplusplus */

#endif 	/* __HTMLStyleSheet_FWD_DEFINED__ */


#ifndef __HTMLStyleSheetsCollection_FWD_DEFINED__
#define __HTMLStyleSheetsCollection_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLStyleSheetsCollection HTMLStyleSheetsCollection;
#else
typedef struct HTMLStyleSheetsCollection HTMLStyleSheetsCollection;
#endif /* __cplusplus */

#endif 	/* __HTMLStyleSheetsCollection_FWD_DEFINED__ */


#ifndef __HTMLLinkElementEvents2_FWD_DEFINED__
#define __HTMLLinkElementEvents2_FWD_DEFINED__
typedef interface HTMLLinkElementEvents2 HTMLLinkElementEvents2;
#endif 	/* __HTMLLinkElementEvents2_FWD_DEFINED__ */


#ifndef __HTMLLinkElementEvents_FWD_DEFINED__
#define __HTMLLinkElementEvents_FWD_DEFINED__
typedef interface HTMLLinkElementEvents HTMLLinkElementEvents;
#endif 	/* __HTMLLinkElementEvents_FWD_DEFINED__ */


#ifndef __IHTMLLinkElement_FWD_DEFINED__
#define __IHTMLLinkElement_FWD_DEFINED__
typedef interface IHTMLLinkElement IHTMLLinkElement;
#endif 	/* __IHTMLLinkElement_FWD_DEFINED__ */


#ifndef __IHTMLLinkElement2_FWD_DEFINED__
#define __IHTMLLinkElement2_FWD_DEFINED__
typedef interface IHTMLLinkElement2 IHTMLLinkElement2;
#endif 	/* __IHTMLLinkElement2_FWD_DEFINED__ */


#ifndef __IHTMLLinkElement3_FWD_DEFINED__
#define __IHTMLLinkElement3_FWD_DEFINED__
typedef interface IHTMLLinkElement3 IHTMLLinkElement3;
#endif 	/* __IHTMLLinkElement3_FWD_DEFINED__ */


#ifndef __DispHTMLLinkElement_FWD_DEFINED__
#define __DispHTMLLinkElement_FWD_DEFINED__
typedef interface DispHTMLLinkElement DispHTMLLinkElement;
#endif 	/* __DispHTMLLinkElement_FWD_DEFINED__ */


#ifndef __HTMLLinkElement_FWD_DEFINED__
#define __HTMLLinkElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLLinkElement HTMLLinkElement;
#else
typedef struct HTMLLinkElement HTMLLinkElement;
#endif /* __cplusplus */

#endif 	/* __HTMLLinkElement_FWD_DEFINED__ */


#ifndef __IHTMLTxtRange_FWD_DEFINED__
#define __IHTMLTxtRange_FWD_DEFINED__
typedef interface IHTMLTxtRange IHTMLTxtRange;
#endif 	/* __IHTMLTxtRange_FWD_DEFINED__ */


#ifndef __IHTMLTextRangeMetrics_FWD_DEFINED__
#define __IHTMLTextRangeMetrics_FWD_DEFINED__
typedef interface IHTMLTextRangeMetrics IHTMLTextRangeMetrics;
#endif 	/* __IHTMLTextRangeMetrics_FWD_DEFINED__ */


#ifndef __IHTMLTextRangeMetrics2_FWD_DEFINED__
#define __IHTMLTextRangeMetrics2_FWD_DEFINED__
typedef interface IHTMLTextRangeMetrics2 IHTMLTextRangeMetrics2;
#endif 	/* __IHTMLTextRangeMetrics2_FWD_DEFINED__ */


#ifndef __IHTMLTxtRangeCollection_FWD_DEFINED__
#define __IHTMLTxtRangeCollection_FWD_DEFINED__
typedef interface IHTMLTxtRangeCollection IHTMLTxtRangeCollection;
#endif 	/* __IHTMLTxtRangeCollection_FWD_DEFINED__ */


#ifndef __HTMLFormElementEvents2_FWD_DEFINED__
#define __HTMLFormElementEvents2_FWD_DEFINED__
typedef interface HTMLFormElementEvents2 HTMLFormElementEvents2;
#endif 	/* __HTMLFormElementEvents2_FWD_DEFINED__ */


#ifndef __HTMLFormElementEvents_FWD_DEFINED__
#define __HTMLFormElementEvents_FWD_DEFINED__
typedef interface HTMLFormElementEvents HTMLFormElementEvents;
#endif 	/* __HTMLFormElementEvents_FWD_DEFINED__ */


#ifndef __IHTMLFormElement_FWD_DEFINED__
#define __IHTMLFormElement_FWD_DEFINED__
typedef interface IHTMLFormElement IHTMLFormElement;
#endif 	/* __IHTMLFormElement_FWD_DEFINED__ */


#ifndef __IHTMLFormElement2_FWD_DEFINED__
#define __IHTMLFormElement2_FWD_DEFINED__
typedef interface IHTMLFormElement2 IHTMLFormElement2;
#endif 	/* __IHTMLFormElement2_FWD_DEFINED__ */


#ifndef __IHTMLFormElement3_FWD_DEFINED__
#define __IHTMLFormElement3_FWD_DEFINED__
typedef interface IHTMLFormElement3 IHTMLFormElement3;
#endif 	/* __IHTMLFormElement3_FWD_DEFINED__ */


#ifndef __IHTMLSubmitData_FWD_DEFINED__
#define __IHTMLSubmitData_FWD_DEFINED__
typedef interface IHTMLSubmitData IHTMLSubmitData;
#endif 	/* __IHTMLSubmitData_FWD_DEFINED__ */


#ifndef __DispHTMLFormElement_FWD_DEFINED__
#define __DispHTMLFormElement_FWD_DEFINED__
typedef interface DispHTMLFormElement DispHTMLFormElement;
#endif 	/* __DispHTMLFormElement_FWD_DEFINED__ */


#ifndef __HTMLFormElement_FWD_DEFINED__
#define __HTMLFormElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLFormElement HTMLFormElement;
#else
typedef struct HTMLFormElement HTMLFormElement;
#endif /* __cplusplus */

#endif 	/* __HTMLFormElement_FWD_DEFINED__ */


#ifndef __HTMLControlElementEvents2_FWD_DEFINED__
#define __HTMLControlElementEvents2_FWD_DEFINED__
typedef interface HTMLControlElementEvents2 HTMLControlElementEvents2;
#endif 	/* __HTMLControlElementEvents2_FWD_DEFINED__ */


#ifndef __HTMLControlElementEvents_FWD_DEFINED__
#define __HTMLControlElementEvents_FWD_DEFINED__
typedef interface HTMLControlElementEvents HTMLControlElementEvents;
#endif 	/* __HTMLControlElementEvents_FWD_DEFINED__ */


#ifndef __IHTMLControlElement_FWD_DEFINED__
#define __IHTMLControlElement_FWD_DEFINED__
typedef interface IHTMLControlElement IHTMLControlElement;
#endif 	/* __IHTMLControlElement_FWD_DEFINED__ */


#ifndef __IHTMLTextElement_FWD_DEFINED__
#define __IHTMLTextElement_FWD_DEFINED__
typedef interface IHTMLTextElement IHTMLTextElement;
#endif 	/* __IHTMLTextElement_FWD_DEFINED__ */


#ifndef __DispHTMLTextElement_FWD_DEFINED__
#define __DispHTMLTextElement_FWD_DEFINED__
typedef interface DispHTMLTextElement DispHTMLTextElement;
#endif 	/* __DispHTMLTextElement_FWD_DEFINED__ */


#ifndef __HTMLTextElement_FWD_DEFINED__
#define __HTMLTextElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLTextElement HTMLTextElement;
#else
typedef struct HTMLTextElement HTMLTextElement;
#endif /* __cplusplus */

#endif 	/* __HTMLTextElement_FWD_DEFINED__ */


#ifndef __HTMLTextContainerEvents2_FWD_DEFINED__
#define __HTMLTextContainerEvents2_FWD_DEFINED__
typedef interface HTMLTextContainerEvents2 HTMLTextContainerEvents2;
#endif 	/* __HTMLTextContainerEvents2_FWD_DEFINED__ */


#ifndef __HTMLTextContainerEvents_FWD_DEFINED__
#define __HTMLTextContainerEvents_FWD_DEFINED__
typedef interface HTMLTextContainerEvents HTMLTextContainerEvents;
#endif 	/* __HTMLTextContainerEvents_FWD_DEFINED__ */


#ifndef __IHTMLTextContainer_FWD_DEFINED__
#define __IHTMLTextContainer_FWD_DEFINED__
typedef interface IHTMLTextContainer IHTMLTextContainer;
#endif 	/* __IHTMLTextContainer_FWD_DEFINED__ */


#ifndef __IHTMLControlRange_FWD_DEFINED__
#define __IHTMLControlRange_FWD_DEFINED__
typedef interface IHTMLControlRange IHTMLControlRange;
#endif 	/* __IHTMLControlRange_FWD_DEFINED__ */


#ifndef __IHTMLControlRange2_FWD_DEFINED__
#define __IHTMLControlRange2_FWD_DEFINED__
typedef interface IHTMLControlRange2 IHTMLControlRange2;
#endif 	/* __IHTMLControlRange2_FWD_DEFINED__ */


#ifndef __HTMLImgEvents2_FWD_DEFINED__
#define __HTMLImgEvents2_FWD_DEFINED__
typedef interface HTMLImgEvents2 HTMLImgEvents2;
#endif 	/* __HTMLImgEvents2_FWD_DEFINED__ */


#ifndef __HTMLImgEvents_FWD_DEFINED__
#define __HTMLImgEvents_FWD_DEFINED__
typedef interface HTMLImgEvents HTMLImgEvents;
#endif 	/* __HTMLImgEvents_FWD_DEFINED__ */


#ifndef __IHTMLImgElement_FWD_DEFINED__
#define __IHTMLImgElement_FWD_DEFINED__
typedef interface IHTMLImgElement IHTMLImgElement;
#endif 	/* __IHTMLImgElement_FWD_DEFINED__ */


#ifndef __IHTMLImgElement2_FWD_DEFINED__
#define __IHTMLImgElement2_FWD_DEFINED__
typedef interface IHTMLImgElement2 IHTMLImgElement2;
#endif 	/* __IHTMLImgElement2_FWD_DEFINED__ */


#ifndef __IHTMLImageElementFactory_FWD_DEFINED__
#define __IHTMLImageElementFactory_FWD_DEFINED__
typedef interface IHTMLImageElementFactory IHTMLImageElementFactory;
#endif 	/* __IHTMLImageElementFactory_FWD_DEFINED__ */


#ifndef __DispHTMLImg_FWD_DEFINED__
#define __DispHTMLImg_FWD_DEFINED__
typedef interface DispHTMLImg DispHTMLImg;
#endif 	/* __DispHTMLImg_FWD_DEFINED__ */


#ifndef __HTMLImg_FWD_DEFINED__
#define __HTMLImg_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLImg HTMLImg;
#else
typedef struct HTMLImg HTMLImg;
#endif /* __cplusplus */

#endif 	/* __HTMLImg_FWD_DEFINED__ */


#ifndef __HTMLImageElementFactory_FWD_DEFINED__
#define __HTMLImageElementFactory_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLImageElementFactory HTMLImageElementFactory;
#else
typedef struct HTMLImageElementFactory HTMLImageElementFactory;
#endif /* __cplusplus */

#endif 	/* __HTMLImageElementFactory_FWD_DEFINED__ */


#ifndef __IHTMLBodyElement_FWD_DEFINED__
#define __IHTMLBodyElement_FWD_DEFINED__
typedef interface IHTMLBodyElement IHTMLBodyElement;
#endif 	/* __IHTMLBodyElement_FWD_DEFINED__ */


#ifndef __IHTMLBodyElement2_FWD_DEFINED__
#define __IHTMLBodyElement2_FWD_DEFINED__
typedef interface IHTMLBodyElement2 IHTMLBodyElement2;
#endif 	/* __IHTMLBodyElement2_FWD_DEFINED__ */


#ifndef __DispHTMLBody_FWD_DEFINED__
#define __DispHTMLBody_FWD_DEFINED__
typedef interface DispHTMLBody DispHTMLBody;
#endif 	/* __DispHTMLBody_FWD_DEFINED__ */


#ifndef __HTMLBody_FWD_DEFINED__
#define __HTMLBody_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLBody HTMLBody;
#else
typedef struct HTMLBody HTMLBody;
#endif /* __cplusplus */

#endif 	/* __HTMLBody_FWD_DEFINED__ */


#ifndef __IHTMLFontElement_FWD_DEFINED__
#define __IHTMLFontElement_FWD_DEFINED__
typedef interface IHTMLFontElement IHTMLFontElement;
#endif 	/* __IHTMLFontElement_FWD_DEFINED__ */


#ifndef __DispHTMLFontElement_FWD_DEFINED__
#define __DispHTMLFontElement_FWD_DEFINED__
typedef interface DispHTMLFontElement DispHTMLFontElement;
#endif 	/* __DispHTMLFontElement_FWD_DEFINED__ */


#ifndef __HTMLFontElement_FWD_DEFINED__
#define __HTMLFontElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLFontElement HTMLFontElement;
#else
typedef struct HTMLFontElement HTMLFontElement;
#endif /* __cplusplus */

#endif 	/* __HTMLFontElement_FWD_DEFINED__ */


#ifndef __HTMLAnchorEvents2_FWD_DEFINED__
#define __HTMLAnchorEvents2_FWD_DEFINED__
typedef interface HTMLAnchorEvents2 HTMLAnchorEvents2;
#endif 	/* __HTMLAnchorEvents2_FWD_DEFINED__ */


#ifndef __HTMLAnchorEvents_FWD_DEFINED__
#define __HTMLAnchorEvents_FWD_DEFINED__
typedef interface HTMLAnchorEvents HTMLAnchorEvents;
#endif 	/* __HTMLAnchorEvents_FWD_DEFINED__ */


#ifndef __IHTMLAnchorElement_FWD_DEFINED__
#define __IHTMLAnchorElement_FWD_DEFINED__
typedef interface IHTMLAnchorElement IHTMLAnchorElement;
#endif 	/* __IHTMLAnchorElement_FWD_DEFINED__ */


#ifndef __IHTMLAnchorElement2_FWD_DEFINED__
#define __IHTMLAnchorElement2_FWD_DEFINED__
typedef interface IHTMLAnchorElement2 IHTMLAnchorElement2;
#endif 	/* __IHTMLAnchorElement2_FWD_DEFINED__ */


#ifndef __DispHTMLAnchorElement_FWD_DEFINED__
#define __DispHTMLAnchorElement_FWD_DEFINED__
typedef interface DispHTMLAnchorElement DispHTMLAnchorElement;
#endif 	/* __DispHTMLAnchorElement_FWD_DEFINED__ */


#ifndef __HTMLAnchorElement_FWD_DEFINED__
#define __HTMLAnchorElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLAnchorElement HTMLAnchorElement;
#else
typedef struct HTMLAnchorElement HTMLAnchorElement;
#endif /* __cplusplus */

#endif 	/* __HTMLAnchorElement_FWD_DEFINED__ */


#ifndef __HTMLLabelEvents2_FWD_DEFINED__
#define __HTMLLabelEvents2_FWD_DEFINED__
typedef interface HTMLLabelEvents2 HTMLLabelEvents2;
#endif 	/* __HTMLLabelEvents2_FWD_DEFINED__ */


#ifndef __HTMLLabelEvents_FWD_DEFINED__
#define __HTMLLabelEvents_FWD_DEFINED__
typedef interface HTMLLabelEvents HTMLLabelEvents;
#endif 	/* __HTMLLabelEvents_FWD_DEFINED__ */


#ifndef __IHTMLLabelElement_FWD_DEFINED__
#define __IHTMLLabelElement_FWD_DEFINED__
typedef interface IHTMLLabelElement IHTMLLabelElement;
#endif 	/* __IHTMLLabelElement_FWD_DEFINED__ */


#ifndef __IHTMLLabelElement2_FWD_DEFINED__
#define __IHTMLLabelElement2_FWD_DEFINED__
typedef interface IHTMLLabelElement2 IHTMLLabelElement2;
#endif 	/* __IHTMLLabelElement2_FWD_DEFINED__ */


#ifndef __DispHTMLLabelElement_FWD_DEFINED__
#define __DispHTMLLabelElement_FWD_DEFINED__
typedef interface DispHTMLLabelElement DispHTMLLabelElement;
#endif 	/* __DispHTMLLabelElement_FWD_DEFINED__ */


#ifndef __HTMLLabelElement_FWD_DEFINED__
#define __HTMLLabelElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLLabelElement HTMLLabelElement;
#else
typedef struct HTMLLabelElement HTMLLabelElement;
#endif /* __cplusplus */

#endif 	/* __HTMLLabelElement_FWD_DEFINED__ */


#ifndef __IHTMLListElement_FWD_DEFINED__
#define __IHTMLListElement_FWD_DEFINED__
typedef interface IHTMLListElement IHTMLListElement;
#endif 	/* __IHTMLListElement_FWD_DEFINED__ */


#ifndef __IHTMLListElement2_FWD_DEFINED__
#define __IHTMLListElement2_FWD_DEFINED__
typedef interface IHTMLListElement2 IHTMLListElement2;
#endif 	/* __IHTMLListElement2_FWD_DEFINED__ */


#ifndef __DispHTMLListElement_FWD_DEFINED__
#define __DispHTMLListElement_FWD_DEFINED__
typedef interface DispHTMLListElement DispHTMLListElement;
#endif 	/* __DispHTMLListElement_FWD_DEFINED__ */


#ifndef __HTMLListElement_FWD_DEFINED__
#define __HTMLListElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLListElement HTMLListElement;
#else
typedef struct HTMLListElement HTMLListElement;
#endif /* __cplusplus */

#endif 	/* __HTMLListElement_FWD_DEFINED__ */


#ifndef __IHTMLUListElement_FWD_DEFINED__
#define __IHTMLUListElement_FWD_DEFINED__
typedef interface IHTMLUListElement IHTMLUListElement;
#endif 	/* __IHTMLUListElement_FWD_DEFINED__ */


#ifndef __DispHTMLUListElement_FWD_DEFINED__
#define __DispHTMLUListElement_FWD_DEFINED__
typedef interface DispHTMLUListElement DispHTMLUListElement;
#endif 	/* __DispHTMLUListElement_FWD_DEFINED__ */


#ifndef __HTMLUListElement_FWD_DEFINED__
#define __HTMLUListElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLUListElement HTMLUListElement;
#else
typedef struct HTMLUListElement HTMLUListElement;
#endif /* __cplusplus */

#endif 	/* __HTMLUListElement_FWD_DEFINED__ */


#ifndef __IHTMLOListElement_FWD_DEFINED__
#define __IHTMLOListElement_FWD_DEFINED__
typedef interface IHTMLOListElement IHTMLOListElement;
#endif 	/* __IHTMLOListElement_FWD_DEFINED__ */


#ifndef __DispHTMLOListElement_FWD_DEFINED__
#define __DispHTMLOListElement_FWD_DEFINED__
typedef interface DispHTMLOListElement DispHTMLOListElement;
#endif 	/* __DispHTMLOListElement_FWD_DEFINED__ */


#ifndef __HTMLOListElement_FWD_DEFINED__
#define __HTMLOListElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLOListElement HTMLOListElement;
#else
typedef struct HTMLOListElement HTMLOListElement;
#endif /* __cplusplus */

#endif 	/* __HTMLOListElement_FWD_DEFINED__ */


#ifndef __IHTMLLIElement_FWD_DEFINED__
#define __IHTMLLIElement_FWD_DEFINED__
typedef interface IHTMLLIElement IHTMLLIElement;
#endif 	/* __IHTMLLIElement_FWD_DEFINED__ */


#ifndef __DispHTMLLIElement_FWD_DEFINED__
#define __DispHTMLLIElement_FWD_DEFINED__
typedef interface DispHTMLLIElement DispHTMLLIElement;
#endif 	/* __DispHTMLLIElement_FWD_DEFINED__ */


#ifndef __HTMLLIElement_FWD_DEFINED__
#define __HTMLLIElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLLIElement HTMLLIElement;
#else
typedef struct HTMLLIElement HTMLLIElement;
#endif /* __cplusplus */

#endif 	/* __HTMLLIElement_FWD_DEFINED__ */


#ifndef __IHTMLBlockElement_FWD_DEFINED__
#define __IHTMLBlockElement_FWD_DEFINED__
typedef interface IHTMLBlockElement IHTMLBlockElement;
#endif 	/* __IHTMLBlockElement_FWD_DEFINED__ */


#ifndef __IHTMLBlockElement2_FWD_DEFINED__
#define __IHTMLBlockElement2_FWD_DEFINED__
typedef interface IHTMLBlockElement2 IHTMLBlockElement2;
#endif 	/* __IHTMLBlockElement2_FWD_DEFINED__ */


#ifndef __DispHTMLBlockElement_FWD_DEFINED__
#define __DispHTMLBlockElement_FWD_DEFINED__
typedef interface DispHTMLBlockElement DispHTMLBlockElement;
#endif 	/* __DispHTMLBlockElement_FWD_DEFINED__ */


#ifndef __HTMLBlockElement_FWD_DEFINED__
#define __HTMLBlockElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLBlockElement HTMLBlockElement;
#else
typedef struct HTMLBlockElement HTMLBlockElement;
#endif /* __cplusplus */

#endif 	/* __HTMLBlockElement_FWD_DEFINED__ */


#ifndef __IHTMLDivElement_FWD_DEFINED__
#define __IHTMLDivElement_FWD_DEFINED__
typedef interface IHTMLDivElement IHTMLDivElement;
#endif 	/* __IHTMLDivElement_FWD_DEFINED__ */


#ifndef __DispHTMLDivElement_FWD_DEFINED__
#define __DispHTMLDivElement_FWD_DEFINED__
typedef interface DispHTMLDivElement DispHTMLDivElement;
#endif 	/* __DispHTMLDivElement_FWD_DEFINED__ */


#ifndef __HTMLDivElement_FWD_DEFINED__
#define __HTMLDivElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLDivElement HTMLDivElement;
#else
typedef struct HTMLDivElement HTMLDivElement;
#endif /* __cplusplus */

#endif 	/* __HTMLDivElement_FWD_DEFINED__ */


#ifndef __IHTMLDDElement_FWD_DEFINED__
#define __IHTMLDDElement_FWD_DEFINED__
typedef interface IHTMLDDElement IHTMLDDElement;
#endif 	/* __IHTMLDDElement_FWD_DEFINED__ */


#ifndef __DispHTMLDDElement_FWD_DEFINED__
#define __DispHTMLDDElement_FWD_DEFINED__
typedef interface DispHTMLDDElement DispHTMLDDElement;
#endif 	/* __DispHTMLDDElement_FWD_DEFINED__ */


#ifndef __HTMLDDElement_FWD_DEFINED__
#define __HTMLDDElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLDDElement HTMLDDElement;
#else
typedef struct HTMLDDElement HTMLDDElement;
#endif /* __cplusplus */

#endif 	/* __HTMLDDElement_FWD_DEFINED__ */


#ifndef __IHTMLDTElement_FWD_DEFINED__
#define __IHTMLDTElement_FWD_DEFINED__
typedef interface IHTMLDTElement IHTMLDTElement;
#endif 	/* __IHTMLDTElement_FWD_DEFINED__ */


#ifndef __DispHTMLDTElement_FWD_DEFINED__
#define __DispHTMLDTElement_FWD_DEFINED__
typedef interface DispHTMLDTElement DispHTMLDTElement;
#endif 	/* __DispHTMLDTElement_FWD_DEFINED__ */


#ifndef __HTMLDTElement_FWD_DEFINED__
#define __HTMLDTElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLDTElement HTMLDTElement;
#else
typedef struct HTMLDTElement HTMLDTElement;
#endif /* __cplusplus */

#endif 	/* __HTMLDTElement_FWD_DEFINED__ */


#ifndef __IHTMLBRElement_FWD_DEFINED__
#define __IHTMLBRElement_FWD_DEFINED__
typedef interface IHTMLBRElement IHTMLBRElement;
#endif 	/* __IHTMLBRElement_FWD_DEFINED__ */


#ifndef __DispHTMLBRElement_FWD_DEFINED__
#define __DispHTMLBRElement_FWD_DEFINED__
typedef interface DispHTMLBRElement DispHTMLBRElement;
#endif 	/* __DispHTMLBRElement_FWD_DEFINED__ */


#ifndef __HTMLBRElement_FWD_DEFINED__
#define __HTMLBRElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLBRElement HTMLBRElement;
#else
typedef struct HTMLBRElement HTMLBRElement;
#endif /* __cplusplus */

#endif 	/* __HTMLBRElement_FWD_DEFINED__ */


#ifndef __IHTMLDListElement_FWD_DEFINED__
#define __IHTMLDListElement_FWD_DEFINED__
typedef interface IHTMLDListElement IHTMLDListElement;
#endif 	/* __IHTMLDListElement_FWD_DEFINED__ */


#ifndef __DispHTMLDListElement_FWD_DEFINED__
#define __DispHTMLDListElement_FWD_DEFINED__
typedef interface DispHTMLDListElement DispHTMLDListElement;
#endif 	/* __DispHTMLDListElement_FWD_DEFINED__ */


#ifndef __HTMLDListElement_FWD_DEFINED__
#define __HTMLDListElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLDListElement HTMLDListElement;
#else
typedef struct HTMLDListElement HTMLDListElement;
#endif /* __cplusplus */

#endif 	/* __HTMLDListElement_FWD_DEFINED__ */


#ifndef __IHTMLHRElement_FWD_DEFINED__
#define __IHTMLHRElement_FWD_DEFINED__
typedef interface IHTMLHRElement IHTMLHRElement;
#endif 	/* __IHTMLHRElement_FWD_DEFINED__ */


#ifndef __DispHTMLHRElement_FWD_DEFINED__
#define __DispHTMLHRElement_FWD_DEFINED__
typedef interface DispHTMLHRElement DispHTMLHRElement;
#endif 	/* __DispHTMLHRElement_FWD_DEFINED__ */


#ifndef __HTMLHRElement_FWD_DEFINED__
#define __HTMLHRElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLHRElement HTMLHRElement;
#else
typedef struct HTMLHRElement HTMLHRElement;
#endif /* __cplusplus */

#endif 	/* __HTMLHRElement_FWD_DEFINED__ */


#ifndef __IHTMLParaElement_FWD_DEFINED__
#define __IHTMLParaElement_FWD_DEFINED__
typedef interface IHTMLParaElement IHTMLParaElement;
#endif 	/* __IHTMLParaElement_FWD_DEFINED__ */


#ifndef __DispHTMLParaElement_FWD_DEFINED__
#define __DispHTMLParaElement_FWD_DEFINED__
typedef interface DispHTMLParaElement DispHTMLParaElement;
#endif 	/* __DispHTMLParaElement_FWD_DEFINED__ */


#ifndef __HTMLParaElement_FWD_DEFINED__
#define __HTMLParaElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLParaElement HTMLParaElement;
#else
typedef struct HTMLParaElement HTMLParaElement;
#endif /* __cplusplus */

#endif 	/* __HTMLParaElement_FWD_DEFINED__ */


#ifndef __IHTMLElementCollection2_FWD_DEFINED__
#define __IHTMLElementCollection2_FWD_DEFINED__
typedef interface IHTMLElementCollection2 IHTMLElementCollection2;
#endif 	/* __IHTMLElementCollection2_FWD_DEFINED__ */


#ifndef __IHTMLElementCollection3_FWD_DEFINED__
#define __IHTMLElementCollection3_FWD_DEFINED__
typedef interface IHTMLElementCollection3 IHTMLElementCollection3;
#endif 	/* __IHTMLElementCollection3_FWD_DEFINED__ */


#ifndef __DispHTMLElementCollection_FWD_DEFINED__
#define __DispHTMLElementCollection_FWD_DEFINED__
typedef interface DispHTMLElementCollection DispHTMLElementCollection;
#endif 	/* __DispHTMLElementCollection_FWD_DEFINED__ */


#ifndef __HTMLElementCollection_FWD_DEFINED__
#define __HTMLElementCollection_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLElementCollection HTMLElementCollection;
#else
typedef struct HTMLElementCollection HTMLElementCollection;
#endif /* __cplusplus */

#endif 	/* __HTMLElementCollection_FWD_DEFINED__ */


#ifndef __IHTMLHeaderElement_FWD_DEFINED__
#define __IHTMLHeaderElement_FWD_DEFINED__
typedef interface IHTMLHeaderElement IHTMLHeaderElement;
#endif 	/* __IHTMLHeaderElement_FWD_DEFINED__ */


#ifndef __DispHTMLHeaderElement_FWD_DEFINED__
#define __DispHTMLHeaderElement_FWD_DEFINED__
typedef interface DispHTMLHeaderElement DispHTMLHeaderElement;
#endif 	/* __DispHTMLHeaderElement_FWD_DEFINED__ */


#ifndef __HTMLHeaderElement_FWD_DEFINED__
#define __HTMLHeaderElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLHeaderElement HTMLHeaderElement;
#else
typedef struct HTMLHeaderElement HTMLHeaderElement;
#endif /* __cplusplus */

#endif 	/* __HTMLHeaderElement_FWD_DEFINED__ */


#ifndef __HTMLSelectElementEvents2_FWD_DEFINED__
#define __HTMLSelectElementEvents2_FWD_DEFINED__
typedef interface HTMLSelectElementEvents2 HTMLSelectElementEvents2;
#endif 	/* __HTMLSelectElementEvents2_FWD_DEFINED__ */


#ifndef __HTMLSelectElementEvents_FWD_DEFINED__
#define __HTMLSelectElementEvents_FWD_DEFINED__
typedef interface HTMLSelectElementEvents HTMLSelectElementEvents;
#endif 	/* __HTMLSelectElementEvents_FWD_DEFINED__ */


#ifndef __IHTMLSelectElement_FWD_DEFINED__
#define __IHTMLSelectElement_FWD_DEFINED__
typedef interface IHTMLSelectElement IHTMLSelectElement;
#endif 	/* __IHTMLSelectElement_FWD_DEFINED__ */


#ifndef __IHTMLSelectElement2_FWD_DEFINED__
#define __IHTMLSelectElement2_FWD_DEFINED__
typedef interface IHTMLSelectElement2 IHTMLSelectElement2;
#endif 	/* __IHTMLSelectElement2_FWD_DEFINED__ */


#ifndef __IHTMLSelectElement4_FWD_DEFINED__
#define __IHTMLSelectElement4_FWD_DEFINED__
typedef interface IHTMLSelectElement4 IHTMLSelectElement4;
#endif 	/* __IHTMLSelectElement4_FWD_DEFINED__ */


#ifndef __DispHTMLSelectElement_FWD_DEFINED__
#define __DispHTMLSelectElement_FWD_DEFINED__
typedef interface DispHTMLSelectElement DispHTMLSelectElement;
#endif 	/* __DispHTMLSelectElement_FWD_DEFINED__ */


#ifndef __HTMLSelectElement_FWD_DEFINED__
#define __HTMLSelectElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLSelectElement HTMLSelectElement;
#else
typedef struct HTMLSelectElement HTMLSelectElement;
#endif /* __cplusplus */

#endif 	/* __HTMLSelectElement_FWD_DEFINED__ */


#ifndef __IHTMLSelectionObject_FWD_DEFINED__
#define __IHTMLSelectionObject_FWD_DEFINED__
typedef interface IHTMLSelectionObject IHTMLSelectionObject;
#endif 	/* __IHTMLSelectionObject_FWD_DEFINED__ */


#ifndef __IHTMLSelectionObject2_FWD_DEFINED__
#define __IHTMLSelectionObject2_FWD_DEFINED__
typedef interface IHTMLSelectionObject2 IHTMLSelectionObject2;
#endif 	/* __IHTMLSelectionObject2_FWD_DEFINED__ */


#ifndef __IHTMLOptionElement_FWD_DEFINED__
#define __IHTMLOptionElement_FWD_DEFINED__
typedef interface IHTMLOptionElement IHTMLOptionElement;
#endif 	/* __IHTMLOptionElement_FWD_DEFINED__ */


#ifndef __IHTMLOptionElement3_FWD_DEFINED__
#define __IHTMLOptionElement3_FWD_DEFINED__
typedef interface IHTMLOptionElement3 IHTMLOptionElement3;
#endif 	/* __IHTMLOptionElement3_FWD_DEFINED__ */


#ifndef __IHTMLOptionElementFactory_FWD_DEFINED__
#define __IHTMLOptionElementFactory_FWD_DEFINED__
typedef interface IHTMLOptionElementFactory IHTMLOptionElementFactory;
#endif 	/* __IHTMLOptionElementFactory_FWD_DEFINED__ */


#ifndef __DispHTMLOptionElement_FWD_DEFINED__
#define __DispHTMLOptionElement_FWD_DEFINED__
typedef interface DispHTMLOptionElement DispHTMLOptionElement;
#endif 	/* __DispHTMLOptionElement_FWD_DEFINED__ */


#ifndef __HTMLOptionElement_FWD_DEFINED__
#define __HTMLOptionElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLOptionElement HTMLOptionElement;
#else
typedef struct HTMLOptionElement HTMLOptionElement;
#endif /* __cplusplus */

#endif 	/* __HTMLOptionElement_FWD_DEFINED__ */


#ifndef __HTMLOptionElementFactory_FWD_DEFINED__
#define __HTMLOptionElementFactory_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLOptionElementFactory HTMLOptionElementFactory;
#else
typedef struct HTMLOptionElementFactory HTMLOptionElementFactory;
#endif /* __cplusplus */

#endif 	/* __HTMLOptionElementFactory_FWD_DEFINED__ */


#ifndef __HTMLButtonElementEvents2_FWD_DEFINED__
#define __HTMLButtonElementEvents2_FWD_DEFINED__
typedef interface HTMLButtonElementEvents2 HTMLButtonElementEvents2;
#endif 	/* __HTMLButtonElementEvents2_FWD_DEFINED__ */


#ifndef __HTMLButtonElementEvents_FWD_DEFINED__
#define __HTMLButtonElementEvents_FWD_DEFINED__
typedef interface HTMLButtonElementEvents HTMLButtonElementEvents;
#endif 	/* __HTMLButtonElementEvents_FWD_DEFINED__ */


#ifndef __HTMLInputTextElementEvents2_FWD_DEFINED__
#define __HTMLInputTextElementEvents2_FWD_DEFINED__
typedef interface HTMLInputTextElementEvents2 HTMLInputTextElementEvents2;
#endif 	/* __HTMLInputTextElementEvents2_FWD_DEFINED__ */


#ifndef __HTMLOptionButtonElementEvents2_FWD_DEFINED__
#define __HTMLOptionButtonElementEvents2_FWD_DEFINED__
typedef interface HTMLOptionButtonElementEvents2 HTMLOptionButtonElementEvents2;
#endif 	/* __HTMLOptionButtonElementEvents2_FWD_DEFINED__ */


#ifndef __HTMLInputFileElementEvents2_FWD_DEFINED__
#define __HTMLInputFileElementEvents2_FWD_DEFINED__
typedef interface HTMLInputFileElementEvents2 HTMLInputFileElementEvents2;
#endif 	/* __HTMLInputFileElementEvents2_FWD_DEFINED__ */


#ifndef __HTMLInputImageEvents2_FWD_DEFINED__
#define __HTMLInputImageEvents2_FWD_DEFINED__
typedef interface HTMLInputImageEvents2 HTMLInputImageEvents2;
#endif 	/* __HTMLInputImageEvents2_FWD_DEFINED__ */


#ifndef __HTMLInputTextElementEvents_FWD_DEFINED__
#define __HTMLInputTextElementEvents_FWD_DEFINED__
typedef interface HTMLInputTextElementEvents HTMLInputTextElementEvents;
#endif 	/* __HTMLInputTextElementEvents_FWD_DEFINED__ */


#ifndef __HTMLOptionButtonElementEvents_FWD_DEFINED__
#define __HTMLOptionButtonElementEvents_FWD_DEFINED__
typedef interface HTMLOptionButtonElementEvents HTMLOptionButtonElementEvents;
#endif 	/* __HTMLOptionButtonElementEvents_FWD_DEFINED__ */


#ifndef __HTMLInputFileElementEvents_FWD_DEFINED__
#define __HTMLInputFileElementEvents_FWD_DEFINED__
typedef interface HTMLInputFileElementEvents HTMLInputFileElementEvents;
#endif 	/* __HTMLInputFileElementEvents_FWD_DEFINED__ */


#ifndef __HTMLInputImageEvents_FWD_DEFINED__
#define __HTMLInputImageEvents_FWD_DEFINED__
typedef interface HTMLInputImageEvents HTMLInputImageEvents;
#endif 	/* __HTMLInputImageEvents_FWD_DEFINED__ */


#ifndef __IHTMLInputElement_FWD_DEFINED__
#define __IHTMLInputElement_FWD_DEFINED__
typedef interface IHTMLInputElement IHTMLInputElement;
#endif 	/* __IHTMLInputElement_FWD_DEFINED__ */


#ifndef __IHTMLInputElement2_FWD_DEFINED__
#define __IHTMLInputElement2_FWD_DEFINED__
typedef interface IHTMLInputElement2 IHTMLInputElement2;
#endif 	/* __IHTMLInputElement2_FWD_DEFINED__ */


#ifndef __IHTMLInputButtonElement_FWD_DEFINED__
#define __IHTMLInputButtonElement_FWD_DEFINED__
typedef interface IHTMLInputButtonElement IHTMLInputButtonElement;
#endif 	/* __IHTMLInputButtonElement_FWD_DEFINED__ */


#ifndef __IHTMLInputHiddenElement_FWD_DEFINED__
#define __IHTMLInputHiddenElement_FWD_DEFINED__
typedef interface IHTMLInputHiddenElement IHTMLInputHiddenElement;
#endif 	/* __IHTMLInputHiddenElement_FWD_DEFINED__ */


#ifndef __IHTMLInputTextElement_FWD_DEFINED__
#define __IHTMLInputTextElement_FWD_DEFINED__
typedef interface IHTMLInputTextElement IHTMLInputTextElement;
#endif 	/* __IHTMLInputTextElement_FWD_DEFINED__ */


#ifndef __IHTMLInputFileElement_FWD_DEFINED__
#define __IHTMLInputFileElement_FWD_DEFINED__
typedef interface IHTMLInputFileElement IHTMLInputFileElement;
#endif 	/* __IHTMLInputFileElement_FWD_DEFINED__ */


#ifndef __IHTMLOptionButtonElement_FWD_DEFINED__
#define __IHTMLOptionButtonElement_FWD_DEFINED__
typedef interface IHTMLOptionButtonElement IHTMLOptionButtonElement;
#endif 	/* __IHTMLOptionButtonElement_FWD_DEFINED__ */


#ifndef __IHTMLInputImage_FWD_DEFINED__
#define __IHTMLInputImage_FWD_DEFINED__
typedef interface IHTMLInputImage IHTMLInputImage;
#endif 	/* __IHTMLInputImage_FWD_DEFINED__ */


#ifndef __DispHTMLInputElement_FWD_DEFINED__
#define __DispHTMLInputElement_FWD_DEFINED__
typedef interface DispHTMLInputElement DispHTMLInputElement;
#endif 	/* __DispHTMLInputElement_FWD_DEFINED__ */


#ifndef __HTMLInputElement_FWD_DEFINED__
#define __HTMLInputElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLInputElement HTMLInputElement;
#else
typedef struct HTMLInputElement HTMLInputElement;
#endif /* __cplusplus */

#endif 	/* __HTMLInputElement_FWD_DEFINED__ */


#ifndef __IHTMLTextAreaElement_FWD_DEFINED__
#define __IHTMLTextAreaElement_FWD_DEFINED__
typedef interface IHTMLTextAreaElement IHTMLTextAreaElement;
#endif 	/* __IHTMLTextAreaElement_FWD_DEFINED__ */


#ifndef __DispHTMLTextAreaElement_FWD_DEFINED__
#define __DispHTMLTextAreaElement_FWD_DEFINED__
typedef interface DispHTMLTextAreaElement DispHTMLTextAreaElement;
#endif 	/* __DispHTMLTextAreaElement_FWD_DEFINED__ */


#ifndef __HTMLTextAreaElement_FWD_DEFINED__
#define __HTMLTextAreaElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLTextAreaElement HTMLTextAreaElement;
#else
typedef struct HTMLTextAreaElement HTMLTextAreaElement;
#endif /* __cplusplus */

#endif 	/* __HTMLTextAreaElement_FWD_DEFINED__ */


#ifndef __DispHTMLRichtextElement_FWD_DEFINED__
#define __DispHTMLRichtextElement_FWD_DEFINED__
typedef interface DispHTMLRichtextElement DispHTMLRichtextElement;
#endif 	/* __DispHTMLRichtextElement_FWD_DEFINED__ */


#ifndef __HTMLRichtextElement_FWD_DEFINED__
#define __HTMLRichtextElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLRichtextElement HTMLRichtextElement;
#else
typedef struct HTMLRichtextElement HTMLRichtextElement;
#endif /* __cplusplus */

#endif 	/* __HTMLRichtextElement_FWD_DEFINED__ */


#ifndef __IHTMLButtonElement_FWD_DEFINED__
#define __IHTMLButtonElement_FWD_DEFINED__
typedef interface IHTMLButtonElement IHTMLButtonElement;
#endif 	/* __IHTMLButtonElement_FWD_DEFINED__ */


#ifndef __DispHTMLButtonElement_FWD_DEFINED__
#define __DispHTMLButtonElement_FWD_DEFINED__
typedef interface DispHTMLButtonElement DispHTMLButtonElement;
#endif 	/* __DispHTMLButtonElement_FWD_DEFINED__ */


#ifndef __HTMLButtonElement_FWD_DEFINED__
#define __HTMLButtonElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLButtonElement HTMLButtonElement;
#else
typedef struct HTMLButtonElement HTMLButtonElement;
#endif /* __cplusplus */

#endif 	/* __HTMLButtonElement_FWD_DEFINED__ */


#ifndef __HTMLMarqueeElementEvents2_FWD_DEFINED__
#define __HTMLMarqueeElementEvents2_FWD_DEFINED__
typedef interface HTMLMarqueeElementEvents2 HTMLMarqueeElementEvents2;
#endif 	/* __HTMLMarqueeElementEvents2_FWD_DEFINED__ */


#ifndef __HTMLMarqueeElementEvents_FWD_DEFINED__
#define __HTMLMarqueeElementEvents_FWD_DEFINED__
typedef interface HTMLMarqueeElementEvents HTMLMarqueeElementEvents;
#endif 	/* __HTMLMarqueeElementEvents_FWD_DEFINED__ */


#ifndef __IHTMLMarqueeElement_FWD_DEFINED__
#define __IHTMLMarqueeElement_FWD_DEFINED__
typedef interface IHTMLMarqueeElement IHTMLMarqueeElement;
#endif 	/* __IHTMLMarqueeElement_FWD_DEFINED__ */


#ifndef __DispHTMLMarqueeElement_FWD_DEFINED__
#define __DispHTMLMarqueeElement_FWD_DEFINED__
typedef interface DispHTMLMarqueeElement DispHTMLMarqueeElement;
#endif 	/* __DispHTMLMarqueeElement_FWD_DEFINED__ */


#ifndef __HTMLMarqueeElement_FWD_DEFINED__
#define __HTMLMarqueeElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLMarqueeElement HTMLMarqueeElement;
#else
typedef struct HTMLMarqueeElement HTMLMarqueeElement;
#endif /* __cplusplus */

#endif 	/* __HTMLMarqueeElement_FWD_DEFINED__ */


#ifndef __IHTMLHtmlElement_FWD_DEFINED__
#define __IHTMLHtmlElement_FWD_DEFINED__
typedef interface IHTMLHtmlElement IHTMLHtmlElement;
#endif 	/* __IHTMLHtmlElement_FWD_DEFINED__ */


#ifndef __IHTMLHeadElement_FWD_DEFINED__
#define __IHTMLHeadElement_FWD_DEFINED__
typedef interface IHTMLHeadElement IHTMLHeadElement;
#endif 	/* __IHTMLHeadElement_FWD_DEFINED__ */


#ifndef __IHTMLTitleElement_FWD_DEFINED__
#define __IHTMLTitleElement_FWD_DEFINED__
typedef interface IHTMLTitleElement IHTMLTitleElement;
#endif 	/* __IHTMLTitleElement_FWD_DEFINED__ */


#ifndef __IHTMLMetaElement_FWD_DEFINED__
#define __IHTMLMetaElement_FWD_DEFINED__
typedef interface IHTMLMetaElement IHTMLMetaElement;
#endif 	/* __IHTMLMetaElement_FWD_DEFINED__ */


#ifndef __IHTMLMetaElement2_FWD_DEFINED__
#define __IHTMLMetaElement2_FWD_DEFINED__
typedef interface IHTMLMetaElement2 IHTMLMetaElement2;
#endif 	/* __IHTMLMetaElement2_FWD_DEFINED__ */


#ifndef __IHTMLBaseElement_FWD_DEFINED__
#define __IHTMLBaseElement_FWD_DEFINED__
typedef interface IHTMLBaseElement IHTMLBaseElement;
#endif 	/* __IHTMLBaseElement_FWD_DEFINED__ */


#ifndef __IHTMLIsIndexElement_FWD_DEFINED__
#define __IHTMLIsIndexElement_FWD_DEFINED__
typedef interface IHTMLIsIndexElement IHTMLIsIndexElement;
#endif 	/* __IHTMLIsIndexElement_FWD_DEFINED__ */


#ifndef __IHTMLIsIndexElement2_FWD_DEFINED__
#define __IHTMLIsIndexElement2_FWD_DEFINED__
typedef interface IHTMLIsIndexElement2 IHTMLIsIndexElement2;
#endif 	/* __IHTMLIsIndexElement2_FWD_DEFINED__ */


#ifndef __IHTMLNextIdElement_FWD_DEFINED__
#define __IHTMLNextIdElement_FWD_DEFINED__
typedef interface IHTMLNextIdElement IHTMLNextIdElement;
#endif 	/* __IHTMLNextIdElement_FWD_DEFINED__ */


#ifndef __DispHTMLHtmlElement_FWD_DEFINED__
#define __DispHTMLHtmlElement_FWD_DEFINED__
typedef interface DispHTMLHtmlElement DispHTMLHtmlElement;
#endif 	/* __DispHTMLHtmlElement_FWD_DEFINED__ */


#ifndef __HTMLHtmlElement_FWD_DEFINED__
#define __HTMLHtmlElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLHtmlElement HTMLHtmlElement;
#else
typedef struct HTMLHtmlElement HTMLHtmlElement;
#endif /* __cplusplus */

#endif 	/* __HTMLHtmlElement_FWD_DEFINED__ */


#ifndef __DispHTMLHeadElement_FWD_DEFINED__
#define __DispHTMLHeadElement_FWD_DEFINED__
typedef interface DispHTMLHeadElement DispHTMLHeadElement;
#endif 	/* __DispHTMLHeadElement_FWD_DEFINED__ */


#ifndef __HTMLHeadElement_FWD_DEFINED__
#define __HTMLHeadElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLHeadElement HTMLHeadElement;
#else
typedef struct HTMLHeadElement HTMLHeadElement;
#endif /* __cplusplus */

#endif 	/* __HTMLHeadElement_FWD_DEFINED__ */


#ifndef __DispHTMLTitleElement_FWD_DEFINED__
#define __DispHTMLTitleElement_FWD_DEFINED__
typedef interface DispHTMLTitleElement DispHTMLTitleElement;
#endif 	/* __DispHTMLTitleElement_FWD_DEFINED__ */


#ifndef __HTMLTitleElement_FWD_DEFINED__
#define __HTMLTitleElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLTitleElement HTMLTitleElement;
#else
typedef struct HTMLTitleElement HTMLTitleElement;
#endif /* __cplusplus */

#endif 	/* __HTMLTitleElement_FWD_DEFINED__ */


#ifndef __DispHTMLMetaElement_FWD_DEFINED__
#define __DispHTMLMetaElement_FWD_DEFINED__
typedef interface DispHTMLMetaElement DispHTMLMetaElement;
#endif 	/* __DispHTMLMetaElement_FWD_DEFINED__ */


#ifndef __HTMLMetaElement_FWD_DEFINED__
#define __HTMLMetaElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLMetaElement HTMLMetaElement;
#else
typedef struct HTMLMetaElement HTMLMetaElement;
#endif /* __cplusplus */

#endif 	/* __HTMLMetaElement_FWD_DEFINED__ */


#ifndef __DispHTMLBaseElement_FWD_DEFINED__
#define __DispHTMLBaseElement_FWD_DEFINED__
typedef interface DispHTMLBaseElement DispHTMLBaseElement;
#endif 	/* __DispHTMLBaseElement_FWD_DEFINED__ */


#ifndef __HTMLBaseElement_FWD_DEFINED__
#define __HTMLBaseElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLBaseElement HTMLBaseElement;
#else
typedef struct HTMLBaseElement HTMLBaseElement;
#endif /* __cplusplus */

#endif 	/* __HTMLBaseElement_FWD_DEFINED__ */


#ifndef __DispHTMLIsIndexElement_FWD_DEFINED__
#define __DispHTMLIsIndexElement_FWD_DEFINED__
typedef interface DispHTMLIsIndexElement DispHTMLIsIndexElement;
#endif 	/* __DispHTMLIsIndexElement_FWD_DEFINED__ */


#ifndef __HTMLIsIndexElement_FWD_DEFINED__
#define __HTMLIsIndexElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLIsIndexElement HTMLIsIndexElement;
#else
typedef struct HTMLIsIndexElement HTMLIsIndexElement;
#endif /* __cplusplus */

#endif 	/* __HTMLIsIndexElement_FWD_DEFINED__ */


#ifndef __DispHTMLNextIdElement_FWD_DEFINED__
#define __DispHTMLNextIdElement_FWD_DEFINED__
typedef interface DispHTMLNextIdElement DispHTMLNextIdElement;
#endif 	/* __DispHTMLNextIdElement_FWD_DEFINED__ */


#ifndef __HTMLNextIdElement_FWD_DEFINED__
#define __HTMLNextIdElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLNextIdElement HTMLNextIdElement;
#else
typedef struct HTMLNextIdElement HTMLNextIdElement;
#endif /* __cplusplus */

#endif 	/* __HTMLNextIdElement_FWD_DEFINED__ */


#ifndef __IHTMLBaseFontElement_FWD_DEFINED__
#define __IHTMLBaseFontElement_FWD_DEFINED__
typedef interface IHTMLBaseFontElement IHTMLBaseFontElement;
#endif 	/* __IHTMLBaseFontElement_FWD_DEFINED__ */


#ifndef __DispHTMLBaseFontElement_FWD_DEFINED__
#define __DispHTMLBaseFontElement_FWD_DEFINED__
typedef interface DispHTMLBaseFontElement DispHTMLBaseFontElement;
#endif 	/* __DispHTMLBaseFontElement_FWD_DEFINED__ */


#ifndef __HTMLBaseFontElement_FWD_DEFINED__
#define __HTMLBaseFontElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLBaseFontElement HTMLBaseFontElement;
#else
typedef struct HTMLBaseFontElement HTMLBaseFontElement;
#endif /* __cplusplus */

#endif 	/* __HTMLBaseFontElement_FWD_DEFINED__ */


#ifndef __IHTMLUnknownElement_FWD_DEFINED__
#define __IHTMLUnknownElement_FWD_DEFINED__
typedef interface IHTMLUnknownElement IHTMLUnknownElement;
#endif 	/* __IHTMLUnknownElement_FWD_DEFINED__ */


#ifndef __DispHTMLUnknownElement_FWD_DEFINED__
#define __DispHTMLUnknownElement_FWD_DEFINED__
typedef interface DispHTMLUnknownElement DispHTMLUnknownElement;
#endif 	/* __DispHTMLUnknownElement_FWD_DEFINED__ */


#ifndef __HTMLUnknownElement_FWD_DEFINED__
#define __HTMLUnknownElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLUnknownElement HTMLUnknownElement;
#else
typedef struct HTMLUnknownElement HTMLUnknownElement;
#endif /* __cplusplus */

#endif 	/* __HTMLUnknownElement_FWD_DEFINED__ */


#ifndef __IOmHistory_FWD_DEFINED__
#define __IOmHistory_FWD_DEFINED__
typedef interface IOmHistory IOmHistory;
#endif 	/* __IOmHistory_FWD_DEFINED__ */


#ifndef __IHTMLMimeTypesCollection_FWD_DEFINED__
#define __IHTMLMimeTypesCollection_FWD_DEFINED__
typedef interface IHTMLMimeTypesCollection IHTMLMimeTypesCollection;
#endif 	/* __IHTMLMimeTypesCollection_FWD_DEFINED__ */


#ifndef __IHTMLPluginsCollection_FWD_DEFINED__
#define __IHTMLPluginsCollection_FWD_DEFINED__
typedef interface IHTMLPluginsCollection IHTMLPluginsCollection;
#endif 	/* __IHTMLPluginsCollection_FWD_DEFINED__ */


#ifndef __IHTMLOpsProfile_FWD_DEFINED__
#define __IHTMLOpsProfile_FWD_DEFINED__
typedef interface IHTMLOpsProfile IHTMLOpsProfile;
#endif 	/* __IHTMLOpsProfile_FWD_DEFINED__ */


#ifndef __IOmNavigator_FWD_DEFINED__
#define __IOmNavigator_FWD_DEFINED__
typedef interface IOmNavigator IOmNavigator;
#endif 	/* __IOmNavigator_FWD_DEFINED__ */


#ifndef __IHTMLLocation_FWD_DEFINED__
#define __IHTMLLocation_FWD_DEFINED__
typedef interface IHTMLLocation IHTMLLocation;
#endif 	/* __IHTMLLocation_FWD_DEFINED__ */


#ifndef __HTMLHistory_FWD_DEFINED__
#define __HTMLHistory_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLHistory HTMLHistory;
#else
typedef struct HTMLHistory HTMLHistory;
#endif /* __cplusplus */

#endif 	/* __HTMLHistory_FWD_DEFINED__ */


#ifndef __CMimeTypes_FWD_DEFINED__
#define __CMimeTypes_FWD_DEFINED__

#ifdef __cplusplus
typedef class CMimeTypes CMimeTypes;
#else
typedef struct CMimeTypes CMimeTypes;
#endif /* __cplusplus */

#endif 	/* __CMimeTypes_FWD_DEFINED__ */


#ifndef __CPlugins_FWD_DEFINED__
#define __CPlugins_FWD_DEFINED__

#ifdef __cplusplus
typedef class CPlugins CPlugins;
#else
typedef struct CPlugins CPlugins;
#endif /* __cplusplus */

#endif 	/* __CPlugins_FWD_DEFINED__ */


#ifndef __COpsProfile_FWD_DEFINED__
#define __COpsProfile_FWD_DEFINED__

#ifdef __cplusplus
typedef class COpsProfile COpsProfile;
#else
typedef struct COpsProfile COpsProfile;
#endif /* __cplusplus */

#endif 	/* __COpsProfile_FWD_DEFINED__ */


#ifndef __HTMLNavigator_FWD_DEFINED__
#define __HTMLNavigator_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLNavigator HTMLNavigator;
#else
typedef struct HTMLNavigator HTMLNavigator;
#endif /* __cplusplus */

#endif 	/* __HTMLNavigator_FWD_DEFINED__ */


#ifndef __HTMLLocation_FWD_DEFINED__
#define __HTMLLocation_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLLocation HTMLLocation;
#else
typedef struct HTMLLocation HTMLLocation;
#endif /* __cplusplus */

#endif 	/* __HTMLLocation_FWD_DEFINED__ */


#ifndef __IHTMLBookmarkCollection_FWD_DEFINED__
#define __IHTMLBookmarkCollection_FWD_DEFINED__
typedef interface IHTMLBookmarkCollection IHTMLBookmarkCollection;
#endif 	/* __IHTMLBookmarkCollection_FWD_DEFINED__ */


#ifndef __IHTMLDataTransfer_FWD_DEFINED__
#define __IHTMLDataTransfer_FWD_DEFINED__
typedef interface IHTMLDataTransfer IHTMLDataTransfer;
#endif 	/* __IHTMLDataTransfer_FWD_DEFINED__ */


#ifndef __IHTMLEventObj2_FWD_DEFINED__
#define __IHTMLEventObj2_FWD_DEFINED__
typedef interface IHTMLEventObj2 IHTMLEventObj2;
#endif 	/* __IHTMLEventObj2_FWD_DEFINED__ */


#ifndef __IHTMLEventObj3_FWD_DEFINED__
#define __IHTMLEventObj3_FWD_DEFINED__
typedef interface IHTMLEventObj3 IHTMLEventObj3;
#endif 	/* __IHTMLEventObj3_FWD_DEFINED__ */


#ifndef __IHTMLEventObj4_FWD_DEFINED__
#define __IHTMLEventObj4_FWD_DEFINED__
typedef interface IHTMLEventObj4 IHTMLEventObj4;
#endif 	/* __IHTMLEventObj4_FWD_DEFINED__ */


#ifndef __DispCEventObj_FWD_DEFINED__
#define __DispCEventObj_FWD_DEFINED__
typedef interface DispCEventObj DispCEventObj;
#endif 	/* __DispCEventObj_FWD_DEFINED__ */


#ifndef __CEventObj_FWD_DEFINED__
#define __CEventObj_FWD_DEFINED__

#ifdef __cplusplus
typedef class CEventObj CEventObj;
#else
typedef struct CEventObj CEventObj;
#endif /* __cplusplus */

#endif 	/* __CEventObj_FWD_DEFINED__ */


#ifndef __HTMLWindowEvents2_FWD_DEFINED__
#define __HTMLWindowEvents2_FWD_DEFINED__
typedef interface HTMLWindowEvents2 HTMLWindowEvents2;
#endif 	/* __HTMLWindowEvents2_FWD_DEFINED__ */


#ifndef __HTMLWindowEvents_FWD_DEFINED__
#define __HTMLWindowEvents_FWD_DEFINED__
typedef interface HTMLWindowEvents HTMLWindowEvents;
#endif 	/* __HTMLWindowEvents_FWD_DEFINED__ */


#ifndef __IHTMLDocument2_FWD_DEFINED__
#define __IHTMLDocument2_FWD_DEFINED__
typedef interface IHTMLDocument2 IHTMLDocument2;
#endif 	/* __IHTMLDocument2_FWD_DEFINED__ */


#ifndef __IHTMLFramesCollection2_FWD_DEFINED__
#define __IHTMLFramesCollection2_FWD_DEFINED__
typedef interface IHTMLFramesCollection2 IHTMLFramesCollection2;
#endif 	/* __IHTMLFramesCollection2_FWD_DEFINED__ */


#ifndef __IHTMLWindow2_FWD_DEFINED__
#define __IHTMLWindow2_FWD_DEFINED__
typedef interface IHTMLWindow2 IHTMLWindow2;
#endif 	/* __IHTMLWindow2_FWD_DEFINED__ */


#ifndef __IHTMLWindow3_FWD_DEFINED__
#define __IHTMLWindow3_FWD_DEFINED__
typedef interface IHTMLWindow3 IHTMLWindow3;
#endif 	/* __IHTMLWindow3_FWD_DEFINED__ */


#ifndef __IHTMLFrameBase_FWD_DEFINED__
#define __IHTMLFrameBase_FWD_DEFINED__
typedef interface IHTMLFrameBase IHTMLFrameBase;
#endif 	/* __IHTMLFrameBase_FWD_DEFINED__ */


#ifndef __IHTMLScreen_FWD_DEFINED__
#define __IHTMLScreen_FWD_DEFINED__
typedef interface IHTMLScreen IHTMLScreen;
#endif 	/* __IHTMLScreen_FWD_DEFINED__ */


#ifndef __IHTMLScreen2_FWD_DEFINED__
#define __IHTMLScreen2_FWD_DEFINED__
typedef interface IHTMLScreen2 IHTMLScreen2;
#endif 	/* __IHTMLScreen2_FWD_DEFINED__ */


#ifndef __IHTMLWindow4_FWD_DEFINED__
#define __IHTMLWindow4_FWD_DEFINED__
typedef interface IHTMLWindow4 IHTMLWindow4;
#endif 	/* __IHTMLWindow4_FWD_DEFINED__ */


#ifndef __FramesCollection_FWD_DEFINED__
#define __FramesCollection_FWD_DEFINED__

#ifdef __cplusplus
typedef class FramesCollection FramesCollection;
#else
typedef struct FramesCollection FramesCollection;
#endif /* __cplusplus */

#endif 	/* __FramesCollection_FWD_DEFINED__ */


#ifndef __DispHTMLScreen_FWD_DEFINED__
#define __DispHTMLScreen_FWD_DEFINED__
typedef interface DispHTMLScreen DispHTMLScreen;
#endif 	/* __DispHTMLScreen_FWD_DEFINED__ */


#ifndef __HTMLScreen_FWD_DEFINED__
#define __HTMLScreen_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLScreen HTMLScreen;
#else
typedef struct HTMLScreen HTMLScreen;
#endif /* __cplusplus */

#endif 	/* __HTMLScreen_FWD_DEFINED__ */


#ifndef __DispHTMLWindow2_FWD_DEFINED__
#define __DispHTMLWindow2_FWD_DEFINED__
typedef interface DispHTMLWindow2 DispHTMLWindow2;
#endif 	/* __DispHTMLWindow2_FWD_DEFINED__ */


#ifndef __HTMLWindow2_FWD_DEFINED__
#define __HTMLWindow2_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLWindow2 HTMLWindow2;
#else
typedef struct HTMLWindow2 HTMLWindow2;
#endif /* __cplusplus */

#endif 	/* __HTMLWindow2_FWD_DEFINED__ */


#ifndef __DispHTMLWindowProxy_FWD_DEFINED__
#define __DispHTMLWindowProxy_FWD_DEFINED__
typedef interface DispHTMLWindowProxy DispHTMLWindowProxy;
#endif 	/* __DispHTMLWindowProxy_FWD_DEFINED__ */


#ifndef __HTMLWindowProxy_FWD_DEFINED__
#define __HTMLWindowProxy_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLWindowProxy HTMLWindowProxy;
#else
typedef struct HTMLWindowProxy HTMLWindowProxy;
#endif /* __cplusplus */

#endif 	/* __HTMLWindowProxy_FWD_DEFINED__ */


#ifndef __HTMLDocumentEvents2_FWD_DEFINED__
#define __HTMLDocumentEvents2_FWD_DEFINED__
typedef interface HTMLDocumentEvents2 HTMLDocumentEvents2;
#endif 	/* __HTMLDocumentEvents2_FWD_DEFINED__ */


#ifndef __HTMLDocumentEvents_FWD_DEFINED__
#define __HTMLDocumentEvents_FWD_DEFINED__
typedef interface HTMLDocumentEvents HTMLDocumentEvents;
#endif 	/* __HTMLDocumentEvents_FWD_DEFINED__ */


#ifndef __IHTMLDocument3_FWD_DEFINED__
#define __IHTMLDocument3_FWD_DEFINED__
typedef interface IHTMLDocument3 IHTMLDocument3;
#endif 	/* __IHTMLDocument3_FWD_DEFINED__ */


#ifndef __IHTMLDocument4_FWD_DEFINED__
#define __IHTMLDocument4_FWD_DEFINED__
typedef interface IHTMLDocument4 IHTMLDocument4;
#endif 	/* __IHTMLDocument4_FWD_DEFINED__ */


#ifndef __IHTMLDocument5_FWD_DEFINED__
#define __IHTMLDocument5_FWD_DEFINED__
typedef interface IHTMLDocument5 IHTMLDocument5;
#endif 	/* __IHTMLDocument5_FWD_DEFINED__ */


#ifndef __DispHTMLDocument_FWD_DEFINED__
#define __DispHTMLDocument_FWD_DEFINED__
typedef interface DispHTMLDocument DispHTMLDocument;
#endif 	/* __DispHTMLDocument_FWD_DEFINED__ */


#ifndef __HTMLDocument_FWD_DEFINED__
#define __HTMLDocument_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLDocument HTMLDocument;
#else
typedef struct HTMLDocument HTMLDocument;
#endif /* __cplusplus */

#endif 	/* __HTMLDocument_FWD_DEFINED__ */


#ifndef __DWebBridgeEvents_FWD_DEFINED__
#define __DWebBridgeEvents_FWD_DEFINED__
typedef interface DWebBridgeEvents DWebBridgeEvents;
#endif 	/* __DWebBridgeEvents_FWD_DEFINED__ */


#ifndef __IWebBridge_FWD_DEFINED__
#define __IWebBridge_FWD_DEFINED__
typedef interface IWebBridge IWebBridge;
#endif 	/* __IWebBridge_FWD_DEFINED__ */


#ifndef __IWBScriptControl_FWD_DEFINED__
#define __IWBScriptControl_FWD_DEFINED__
typedef interface IWBScriptControl IWBScriptControl;
#endif 	/* __IWBScriptControl_FWD_DEFINED__ */


#ifndef __Scriptlet_FWD_DEFINED__
#define __Scriptlet_FWD_DEFINED__

#ifdef __cplusplus
typedef class Scriptlet Scriptlet;
#else
typedef struct Scriptlet Scriptlet;
#endif /* __cplusplus */

#endif 	/* __Scriptlet_FWD_DEFINED__ */


#ifndef __IHTMLEmbedElement_FWD_DEFINED__
#define __IHTMLEmbedElement_FWD_DEFINED__
typedef interface IHTMLEmbedElement IHTMLEmbedElement;
#endif 	/* __IHTMLEmbedElement_FWD_DEFINED__ */


#ifndef __DispHTMLEmbed_FWD_DEFINED__
#define __DispHTMLEmbed_FWD_DEFINED__
typedef interface DispHTMLEmbed DispHTMLEmbed;
#endif 	/* __DispHTMLEmbed_FWD_DEFINED__ */


#ifndef __HTMLEmbed_FWD_DEFINED__
#define __HTMLEmbed_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLEmbed HTMLEmbed;
#else
typedef struct HTMLEmbed HTMLEmbed;
#endif /* __cplusplus */

#endif 	/* __HTMLEmbed_FWD_DEFINED__ */


#ifndef __HTMLMapEvents2_FWD_DEFINED__
#define __HTMLMapEvents2_FWD_DEFINED__
typedef interface HTMLMapEvents2 HTMLMapEvents2;
#endif 	/* __HTMLMapEvents2_FWD_DEFINED__ */


#ifndef __HTMLMapEvents_FWD_DEFINED__
#define __HTMLMapEvents_FWD_DEFINED__
typedef interface HTMLMapEvents HTMLMapEvents;
#endif 	/* __HTMLMapEvents_FWD_DEFINED__ */


#ifndef __IHTMLAreasCollection_FWD_DEFINED__
#define __IHTMLAreasCollection_FWD_DEFINED__
typedef interface IHTMLAreasCollection IHTMLAreasCollection;
#endif 	/* __IHTMLAreasCollection_FWD_DEFINED__ */


#ifndef __IHTMLAreasCollection2_FWD_DEFINED__
#define __IHTMLAreasCollection2_FWD_DEFINED__
typedef interface IHTMLAreasCollection2 IHTMLAreasCollection2;
#endif 	/* __IHTMLAreasCollection2_FWD_DEFINED__ */


#ifndef __IHTMLAreasCollection3_FWD_DEFINED__
#define __IHTMLAreasCollection3_FWD_DEFINED__
typedef interface IHTMLAreasCollection3 IHTMLAreasCollection3;
#endif 	/* __IHTMLAreasCollection3_FWD_DEFINED__ */


#ifndef __IHTMLMapElement_FWD_DEFINED__
#define __IHTMLMapElement_FWD_DEFINED__
typedef interface IHTMLMapElement IHTMLMapElement;
#endif 	/* __IHTMLMapElement_FWD_DEFINED__ */


#ifndef __DispHTMLAreasCollection_FWD_DEFINED__
#define __DispHTMLAreasCollection_FWD_DEFINED__
typedef interface DispHTMLAreasCollection DispHTMLAreasCollection;
#endif 	/* __DispHTMLAreasCollection_FWD_DEFINED__ */


#ifndef __HTMLAreasCollection_FWD_DEFINED__
#define __HTMLAreasCollection_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLAreasCollection HTMLAreasCollection;
#else
typedef struct HTMLAreasCollection HTMLAreasCollection;
#endif /* __cplusplus */

#endif 	/* __HTMLAreasCollection_FWD_DEFINED__ */


#ifndef __DispHTMLMapElement_FWD_DEFINED__
#define __DispHTMLMapElement_FWD_DEFINED__
typedef interface DispHTMLMapElement DispHTMLMapElement;
#endif 	/* __DispHTMLMapElement_FWD_DEFINED__ */


#ifndef __HTMLMapElement_FWD_DEFINED__
#define __HTMLMapElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLMapElement HTMLMapElement;
#else
typedef struct HTMLMapElement HTMLMapElement;
#endif /* __cplusplus */

#endif 	/* __HTMLMapElement_FWD_DEFINED__ */


#ifndef __HTMLAreaEvents2_FWD_DEFINED__
#define __HTMLAreaEvents2_FWD_DEFINED__
typedef interface HTMLAreaEvents2 HTMLAreaEvents2;
#endif 	/* __HTMLAreaEvents2_FWD_DEFINED__ */


#ifndef __HTMLAreaEvents_FWD_DEFINED__
#define __HTMLAreaEvents_FWD_DEFINED__
typedef interface HTMLAreaEvents HTMLAreaEvents;
#endif 	/* __HTMLAreaEvents_FWD_DEFINED__ */


#ifndef __IHTMLAreaElement_FWD_DEFINED__
#define __IHTMLAreaElement_FWD_DEFINED__
typedef interface IHTMLAreaElement IHTMLAreaElement;
#endif 	/* __IHTMLAreaElement_FWD_DEFINED__ */


#ifndef __DispHTMLAreaElement_FWD_DEFINED__
#define __DispHTMLAreaElement_FWD_DEFINED__
typedef interface DispHTMLAreaElement DispHTMLAreaElement;
#endif 	/* __DispHTMLAreaElement_FWD_DEFINED__ */


#ifndef __HTMLAreaElement_FWD_DEFINED__
#define __HTMLAreaElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLAreaElement HTMLAreaElement;
#else
typedef struct HTMLAreaElement HTMLAreaElement;
#endif /* __cplusplus */

#endif 	/* __HTMLAreaElement_FWD_DEFINED__ */


#ifndef __IHTMLTableCaption_FWD_DEFINED__
#define __IHTMLTableCaption_FWD_DEFINED__
typedef interface IHTMLTableCaption IHTMLTableCaption;
#endif 	/* __IHTMLTableCaption_FWD_DEFINED__ */


#ifndef __DispHTMLTableCaption_FWD_DEFINED__
#define __DispHTMLTableCaption_FWD_DEFINED__
typedef interface DispHTMLTableCaption DispHTMLTableCaption;
#endif 	/* __DispHTMLTableCaption_FWD_DEFINED__ */


#ifndef __HTMLTableCaption_FWD_DEFINED__
#define __HTMLTableCaption_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLTableCaption HTMLTableCaption;
#else
typedef struct HTMLTableCaption HTMLTableCaption;
#endif /* __cplusplus */

#endif 	/* __HTMLTableCaption_FWD_DEFINED__ */


#ifndef __IHTMLCommentElement_FWD_DEFINED__
#define __IHTMLCommentElement_FWD_DEFINED__
typedef interface IHTMLCommentElement IHTMLCommentElement;
#endif 	/* __IHTMLCommentElement_FWD_DEFINED__ */


#ifndef __IHTMLCommentElement2_FWD_DEFINED__
#define __IHTMLCommentElement2_FWD_DEFINED__
typedef interface IHTMLCommentElement2 IHTMLCommentElement2;
#endif 	/* __IHTMLCommentElement2_FWD_DEFINED__ */


#ifndef __DispHTMLCommentElement_FWD_DEFINED__
#define __DispHTMLCommentElement_FWD_DEFINED__
typedef interface DispHTMLCommentElement DispHTMLCommentElement;
#endif 	/* __DispHTMLCommentElement_FWD_DEFINED__ */


#ifndef __HTMLCommentElement_FWD_DEFINED__
#define __HTMLCommentElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLCommentElement HTMLCommentElement;
#else
typedef struct HTMLCommentElement HTMLCommentElement;
#endif /* __cplusplus */

#endif 	/* __HTMLCommentElement_FWD_DEFINED__ */


#ifndef __IHTMLPhraseElement_FWD_DEFINED__
#define __IHTMLPhraseElement_FWD_DEFINED__
typedef interface IHTMLPhraseElement IHTMLPhraseElement;
#endif 	/* __IHTMLPhraseElement_FWD_DEFINED__ */


#ifndef __IHTMLPhraseElement2_FWD_DEFINED__
#define __IHTMLPhraseElement2_FWD_DEFINED__
typedef interface IHTMLPhraseElement2 IHTMLPhraseElement2;
#endif 	/* __IHTMLPhraseElement2_FWD_DEFINED__ */


#ifndef __IHTMLSpanElement_FWD_DEFINED__
#define __IHTMLSpanElement_FWD_DEFINED__
typedef interface IHTMLSpanElement IHTMLSpanElement;
#endif 	/* __IHTMLSpanElement_FWD_DEFINED__ */


#ifndef __DispHTMLPhraseElement_FWD_DEFINED__
#define __DispHTMLPhraseElement_FWD_DEFINED__
typedef interface DispHTMLPhraseElement DispHTMLPhraseElement;
#endif 	/* __DispHTMLPhraseElement_FWD_DEFINED__ */


#ifndef __HTMLPhraseElement_FWD_DEFINED__
#define __HTMLPhraseElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLPhraseElement HTMLPhraseElement;
#else
typedef struct HTMLPhraseElement HTMLPhraseElement;
#endif /* __cplusplus */

#endif 	/* __HTMLPhraseElement_FWD_DEFINED__ */


#ifndef __DispHTMLSpanElement_FWD_DEFINED__
#define __DispHTMLSpanElement_FWD_DEFINED__
typedef interface DispHTMLSpanElement DispHTMLSpanElement;
#endif 	/* __DispHTMLSpanElement_FWD_DEFINED__ */


#ifndef __HTMLSpanElement_FWD_DEFINED__
#define __HTMLSpanElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLSpanElement HTMLSpanElement;
#else
typedef struct HTMLSpanElement HTMLSpanElement;
#endif /* __cplusplus */

#endif 	/* __HTMLSpanElement_FWD_DEFINED__ */


#ifndef __HTMLTableEvents2_FWD_DEFINED__
#define __HTMLTableEvents2_FWD_DEFINED__
typedef interface HTMLTableEvents2 HTMLTableEvents2;
#endif 	/* __HTMLTableEvents2_FWD_DEFINED__ */


#ifndef __HTMLTableEvents_FWD_DEFINED__
#define __HTMLTableEvents_FWD_DEFINED__
typedef interface HTMLTableEvents HTMLTableEvents;
#endif 	/* __HTMLTableEvents_FWD_DEFINED__ */


#ifndef __IHTMLTableSection_FWD_DEFINED__
#define __IHTMLTableSection_FWD_DEFINED__
typedef interface IHTMLTableSection IHTMLTableSection;
#endif 	/* __IHTMLTableSection_FWD_DEFINED__ */


#ifndef __IHTMLTable_FWD_DEFINED__
#define __IHTMLTable_FWD_DEFINED__
typedef interface IHTMLTable IHTMLTable;
#endif 	/* __IHTMLTable_FWD_DEFINED__ */


#ifndef __IHTMLTable2_FWD_DEFINED__
#define __IHTMLTable2_FWD_DEFINED__
typedef interface IHTMLTable2 IHTMLTable2;
#endif 	/* __IHTMLTable2_FWD_DEFINED__ */


#ifndef __IHTMLTable3_FWD_DEFINED__
#define __IHTMLTable3_FWD_DEFINED__
typedef interface IHTMLTable3 IHTMLTable3;
#endif 	/* __IHTMLTable3_FWD_DEFINED__ */


#ifndef __IHTMLTableCol_FWD_DEFINED__
#define __IHTMLTableCol_FWD_DEFINED__
typedef interface IHTMLTableCol IHTMLTableCol;
#endif 	/* __IHTMLTableCol_FWD_DEFINED__ */


#ifndef __IHTMLTableCol2_FWD_DEFINED__
#define __IHTMLTableCol2_FWD_DEFINED__
typedef interface IHTMLTableCol2 IHTMLTableCol2;
#endif 	/* __IHTMLTableCol2_FWD_DEFINED__ */


#ifndef __IHTMLTableSection2_FWD_DEFINED__
#define __IHTMLTableSection2_FWD_DEFINED__
typedef interface IHTMLTableSection2 IHTMLTableSection2;
#endif 	/* __IHTMLTableSection2_FWD_DEFINED__ */


#ifndef __IHTMLTableSection3_FWD_DEFINED__
#define __IHTMLTableSection3_FWD_DEFINED__
typedef interface IHTMLTableSection3 IHTMLTableSection3;
#endif 	/* __IHTMLTableSection3_FWD_DEFINED__ */


#ifndef __IHTMLTableRow_FWD_DEFINED__
#define __IHTMLTableRow_FWD_DEFINED__
typedef interface IHTMLTableRow IHTMLTableRow;
#endif 	/* __IHTMLTableRow_FWD_DEFINED__ */


#ifndef __IHTMLTableRow2_FWD_DEFINED__
#define __IHTMLTableRow2_FWD_DEFINED__
typedef interface IHTMLTableRow2 IHTMLTableRow2;
#endif 	/* __IHTMLTableRow2_FWD_DEFINED__ */


#ifndef __IHTMLTableRow3_FWD_DEFINED__
#define __IHTMLTableRow3_FWD_DEFINED__
typedef interface IHTMLTableRow3 IHTMLTableRow3;
#endif 	/* __IHTMLTableRow3_FWD_DEFINED__ */


#ifndef __IHTMLTableRowMetrics_FWD_DEFINED__
#define __IHTMLTableRowMetrics_FWD_DEFINED__
typedef interface IHTMLTableRowMetrics IHTMLTableRowMetrics;
#endif 	/* __IHTMLTableRowMetrics_FWD_DEFINED__ */


#ifndef __IHTMLTableCell_FWD_DEFINED__
#define __IHTMLTableCell_FWD_DEFINED__
typedef interface IHTMLTableCell IHTMLTableCell;
#endif 	/* __IHTMLTableCell_FWD_DEFINED__ */


#ifndef __IHTMLTableCell2_FWD_DEFINED__
#define __IHTMLTableCell2_FWD_DEFINED__
typedef interface IHTMLTableCell2 IHTMLTableCell2;
#endif 	/* __IHTMLTableCell2_FWD_DEFINED__ */


#ifndef __DispHTMLTable_FWD_DEFINED__
#define __DispHTMLTable_FWD_DEFINED__
typedef interface DispHTMLTable DispHTMLTable;
#endif 	/* __DispHTMLTable_FWD_DEFINED__ */


#ifndef __HTMLTable_FWD_DEFINED__
#define __HTMLTable_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLTable HTMLTable;
#else
typedef struct HTMLTable HTMLTable;
#endif /* __cplusplus */

#endif 	/* __HTMLTable_FWD_DEFINED__ */


#ifndef __DispHTMLTableCol_FWD_DEFINED__
#define __DispHTMLTableCol_FWD_DEFINED__
typedef interface DispHTMLTableCol DispHTMLTableCol;
#endif 	/* __DispHTMLTableCol_FWD_DEFINED__ */


#ifndef __HTMLTableCol_FWD_DEFINED__
#define __HTMLTableCol_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLTableCol HTMLTableCol;
#else
typedef struct HTMLTableCol HTMLTableCol;
#endif /* __cplusplus */

#endif 	/* __HTMLTableCol_FWD_DEFINED__ */


#ifndef __DispHTMLTableSection_FWD_DEFINED__
#define __DispHTMLTableSection_FWD_DEFINED__
typedef interface DispHTMLTableSection DispHTMLTableSection;
#endif 	/* __DispHTMLTableSection_FWD_DEFINED__ */


#ifndef __HTMLTableSection_FWD_DEFINED__
#define __HTMLTableSection_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLTableSection HTMLTableSection;
#else
typedef struct HTMLTableSection HTMLTableSection;
#endif /* __cplusplus */

#endif 	/* __HTMLTableSection_FWD_DEFINED__ */


#ifndef __DispHTMLTableRow_FWD_DEFINED__
#define __DispHTMLTableRow_FWD_DEFINED__
typedef interface DispHTMLTableRow DispHTMLTableRow;
#endif 	/* __DispHTMLTableRow_FWD_DEFINED__ */


#ifndef __HTMLTableRow_FWD_DEFINED__
#define __HTMLTableRow_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLTableRow HTMLTableRow;
#else
typedef struct HTMLTableRow HTMLTableRow;
#endif /* __cplusplus */

#endif 	/* __HTMLTableRow_FWD_DEFINED__ */


#ifndef __DispHTMLTableCell_FWD_DEFINED__
#define __DispHTMLTableCell_FWD_DEFINED__
typedef interface DispHTMLTableCell DispHTMLTableCell;
#endif 	/* __DispHTMLTableCell_FWD_DEFINED__ */


#ifndef __HTMLTableCell_FWD_DEFINED__
#define __HTMLTableCell_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLTableCell HTMLTableCell;
#else
typedef struct HTMLTableCell HTMLTableCell;
#endif /* __cplusplus */

#endif 	/* __HTMLTableCell_FWD_DEFINED__ */


#ifndef __HTMLScriptEvents2_FWD_DEFINED__
#define __HTMLScriptEvents2_FWD_DEFINED__
typedef interface HTMLScriptEvents2 HTMLScriptEvents2;
#endif 	/* __HTMLScriptEvents2_FWD_DEFINED__ */


#ifndef __HTMLScriptEvents_FWD_DEFINED__
#define __HTMLScriptEvents_FWD_DEFINED__
typedef interface HTMLScriptEvents HTMLScriptEvents;
#endif 	/* __HTMLScriptEvents_FWD_DEFINED__ */


#ifndef __IHTMLScriptElement_FWD_DEFINED__
#define __IHTMLScriptElement_FWD_DEFINED__
typedef interface IHTMLScriptElement IHTMLScriptElement;
#endif 	/* __IHTMLScriptElement_FWD_DEFINED__ */


#ifndef __IHTMLScriptElement2_FWD_DEFINED__
#define __IHTMLScriptElement2_FWD_DEFINED__
typedef interface IHTMLScriptElement2 IHTMLScriptElement2;
#endif 	/* __IHTMLScriptElement2_FWD_DEFINED__ */


#ifndef __DispHTMLScriptElement_FWD_DEFINED__
#define __DispHTMLScriptElement_FWD_DEFINED__
typedef interface DispHTMLScriptElement DispHTMLScriptElement;
#endif 	/* __DispHTMLScriptElement_FWD_DEFINED__ */


#ifndef __HTMLScriptElement_FWD_DEFINED__
#define __HTMLScriptElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLScriptElement HTMLScriptElement;
#else
typedef struct HTMLScriptElement HTMLScriptElement;
#endif /* __cplusplus */

#endif 	/* __HTMLScriptElement_FWD_DEFINED__ */


#ifndef __IHTMLNoShowElement_FWD_DEFINED__
#define __IHTMLNoShowElement_FWD_DEFINED__
typedef interface IHTMLNoShowElement IHTMLNoShowElement;
#endif 	/* __IHTMLNoShowElement_FWD_DEFINED__ */


#ifndef __DispHTMLNoShowElement_FWD_DEFINED__
#define __DispHTMLNoShowElement_FWD_DEFINED__
typedef interface DispHTMLNoShowElement DispHTMLNoShowElement;
#endif 	/* __DispHTMLNoShowElement_FWD_DEFINED__ */


#ifndef __HTMLNoShowElement_FWD_DEFINED__
#define __HTMLNoShowElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLNoShowElement HTMLNoShowElement;
#else
typedef struct HTMLNoShowElement HTMLNoShowElement;
#endif /* __cplusplus */

#endif 	/* __HTMLNoShowElement_FWD_DEFINED__ */


#ifndef __HTMLObjectElementEvents2_FWD_DEFINED__
#define __HTMLObjectElementEvents2_FWD_DEFINED__
typedef interface HTMLObjectElementEvents2 HTMLObjectElementEvents2;
#endif 	/* __HTMLObjectElementEvents2_FWD_DEFINED__ */


#ifndef __HTMLObjectElementEvents_FWD_DEFINED__
#define __HTMLObjectElementEvents_FWD_DEFINED__
typedef interface HTMLObjectElementEvents HTMLObjectElementEvents;
#endif 	/* __HTMLObjectElementEvents_FWD_DEFINED__ */


#ifndef __IHTMLObjectElement_FWD_DEFINED__
#define __IHTMLObjectElement_FWD_DEFINED__
typedef interface IHTMLObjectElement IHTMLObjectElement;
#endif 	/* __IHTMLObjectElement_FWD_DEFINED__ */


#ifndef __IHTMLObjectElement2_FWD_DEFINED__
#define __IHTMLObjectElement2_FWD_DEFINED__
typedef interface IHTMLObjectElement2 IHTMLObjectElement2;
#endif 	/* __IHTMLObjectElement2_FWD_DEFINED__ */


#ifndef __IHTMLObjectElement3_FWD_DEFINED__
#define __IHTMLObjectElement3_FWD_DEFINED__
typedef interface IHTMLObjectElement3 IHTMLObjectElement3;
#endif 	/* __IHTMLObjectElement3_FWD_DEFINED__ */


#ifndef __IHTMLParamElement_FWD_DEFINED__
#define __IHTMLParamElement_FWD_DEFINED__
typedef interface IHTMLParamElement IHTMLParamElement;
#endif 	/* __IHTMLParamElement_FWD_DEFINED__ */


#ifndef __DispHTMLObjectElement_FWD_DEFINED__
#define __DispHTMLObjectElement_FWD_DEFINED__
typedef interface DispHTMLObjectElement DispHTMLObjectElement;
#endif 	/* __DispHTMLObjectElement_FWD_DEFINED__ */


#ifndef __HTMLObjectElement_FWD_DEFINED__
#define __HTMLObjectElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLObjectElement HTMLObjectElement;
#else
typedef struct HTMLObjectElement HTMLObjectElement;
#endif /* __cplusplus */

#endif 	/* __HTMLObjectElement_FWD_DEFINED__ */


#ifndef __DispHTMLParamElement_FWD_DEFINED__
#define __DispHTMLParamElement_FWD_DEFINED__
typedef interface DispHTMLParamElement DispHTMLParamElement;
#endif 	/* __DispHTMLParamElement_FWD_DEFINED__ */


#ifndef __HTMLParamElement_FWD_DEFINED__
#define __HTMLParamElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLParamElement HTMLParamElement;
#else
typedef struct HTMLParamElement HTMLParamElement;
#endif /* __cplusplus */

#endif 	/* __HTMLParamElement_FWD_DEFINED__ */


#ifndef __HTMLFrameSiteEvents2_FWD_DEFINED__
#define __HTMLFrameSiteEvents2_FWD_DEFINED__
typedef interface HTMLFrameSiteEvents2 HTMLFrameSiteEvents2;
#endif 	/* __HTMLFrameSiteEvents2_FWD_DEFINED__ */


#ifndef __HTMLFrameSiteEvents_FWD_DEFINED__
#define __HTMLFrameSiteEvents_FWD_DEFINED__
typedef interface HTMLFrameSiteEvents HTMLFrameSiteEvents;
#endif 	/* __HTMLFrameSiteEvents_FWD_DEFINED__ */


#ifndef __IHTMLFrameBase2_FWD_DEFINED__
#define __IHTMLFrameBase2_FWD_DEFINED__
typedef interface IHTMLFrameBase2 IHTMLFrameBase2;
#endif 	/* __IHTMLFrameBase2_FWD_DEFINED__ */


#ifndef __IHTMLFrameBase3_FWD_DEFINED__
#define __IHTMLFrameBase3_FWD_DEFINED__
typedef interface IHTMLFrameBase3 IHTMLFrameBase3;
#endif 	/* __IHTMLFrameBase3_FWD_DEFINED__ */


#ifndef __DispHTMLFrameBase_FWD_DEFINED__
#define __DispHTMLFrameBase_FWD_DEFINED__
typedef interface DispHTMLFrameBase DispHTMLFrameBase;
#endif 	/* __DispHTMLFrameBase_FWD_DEFINED__ */


#ifndef __HTMLFrameBase_FWD_DEFINED__
#define __HTMLFrameBase_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLFrameBase HTMLFrameBase;
#else
typedef struct HTMLFrameBase HTMLFrameBase;
#endif /* __cplusplus */

#endif 	/* __HTMLFrameBase_FWD_DEFINED__ */


#ifndef __IHTMLFrameElement_FWD_DEFINED__
#define __IHTMLFrameElement_FWD_DEFINED__
typedef interface IHTMLFrameElement IHTMLFrameElement;
#endif 	/* __IHTMLFrameElement_FWD_DEFINED__ */


#ifndef __IHTMLFrameElement2_FWD_DEFINED__
#define __IHTMLFrameElement2_FWD_DEFINED__
typedef interface IHTMLFrameElement2 IHTMLFrameElement2;
#endif 	/* __IHTMLFrameElement2_FWD_DEFINED__ */


#ifndef __DispHTMLFrameElement_FWD_DEFINED__
#define __DispHTMLFrameElement_FWD_DEFINED__
typedef interface DispHTMLFrameElement DispHTMLFrameElement;
#endif 	/* __DispHTMLFrameElement_FWD_DEFINED__ */


#ifndef __HTMLFrameElement_FWD_DEFINED__
#define __HTMLFrameElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLFrameElement HTMLFrameElement;
#else
typedef struct HTMLFrameElement HTMLFrameElement;
#endif /* __cplusplus */

#endif 	/* __HTMLFrameElement_FWD_DEFINED__ */


#ifndef __IHTMLIFrameElement_FWD_DEFINED__
#define __IHTMLIFrameElement_FWD_DEFINED__
typedef interface IHTMLIFrameElement IHTMLIFrameElement;
#endif 	/* __IHTMLIFrameElement_FWD_DEFINED__ */


#ifndef __IHTMLIFrameElement2_FWD_DEFINED__
#define __IHTMLIFrameElement2_FWD_DEFINED__
typedef interface IHTMLIFrameElement2 IHTMLIFrameElement2;
#endif 	/* __IHTMLIFrameElement2_FWD_DEFINED__ */


#ifndef __DispHTMLIFrame_FWD_DEFINED__
#define __DispHTMLIFrame_FWD_DEFINED__
typedef interface DispHTMLIFrame DispHTMLIFrame;
#endif 	/* __DispHTMLIFrame_FWD_DEFINED__ */


#ifndef __HTMLIFrame_FWD_DEFINED__
#define __HTMLIFrame_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLIFrame HTMLIFrame;
#else
typedef struct HTMLIFrame HTMLIFrame;
#endif /* __cplusplus */

#endif 	/* __HTMLIFrame_FWD_DEFINED__ */


#ifndef __IHTMLDivPosition_FWD_DEFINED__
#define __IHTMLDivPosition_FWD_DEFINED__
typedef interface IHTMLDivPosition IHTMLDivPosition;
#endif 	/* __IHTMLDivPosition_FWD_DEFINED__ */


#ifndef __IHTMLFieldSetElement_FWD_DEFINED__
#define __IHTMLFieldSetElement_FWD_DEFINED__
typedef interface IHTMLFieldSetElement IHTMLFieldSetElement;
#endif 	/* __IHTMLFieldSetElement_FWD_DEFINED__ */


#ifndef __IHTMLFieldSetElement2_FWD_DEFINED__
#define __IHTMLFieldSetElement2_FWD_DEFINED__
typedef interface IHTMLFieldSetElement2 IHTMLFieldSetElement2;
#endif 	/* __IHTMLFieldSetElement2_FWD_DEFINED__ */


#ifndef __IHTMLLegendElement_FWD_DEFINED__
#define __IHTMLLegendElement_FWD_DEFINED__
typedef interface IHTMLLegendElement IHTMLLegendElement;
#endif 	/* __IHTMLLegendElement_FWD_DEFINED__ */


#ifndef __IHTMLLegendElement2_FWD_DEFINED__
#define __IHTMLLegendElement2_FWD_DEFINED__
typedef interface IHTMLLegendElement2 IHTMLLegendElement2;
#endif 	/* __IHTMLLegendElement2_FWD_DEFINED__ */


#ifndef __DispHTMLDivPosition_FWD_DEFINED__
#define __DispHTMLDivPosition_FWD_DEFINED__
typedef interface DispHTMLDivPosition DispHTMLDivPosition;
#endif 	/* __DispHTMLDivPosition_FWD_DEFINED__ */


#ifndef __HTMLDivPosition_FWD_DEFINED__
#define __HTMLDivPosition_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLDivPosition HTMLDivPosition;
#else
typedef struct HTMLDivPosition HTMLDivPosition;
#endif /* __cplusplus */

#endif 	/* __HTMLDivPosition_FWD_DEFINED__ */


#ifndef __DispHTMLFieldSetElement_FWD_DEFINED__
#define __DispHTMLFieldSetElement_FWD_DEFINED__
typedef interface DispHTMLFieldSetElement DispHTMLFieldSetElement;
#endif 	/* __DispHTMLFieldSetElement_FWD_DEFINED__ */


#ifndef __HTMLFieldSetElement_FWD_DEFINED__
#define __HTMLFieldSetElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLFieldSetElement HTMLFieldSetElement;
#else
typedef struct HTMLFieldSetElement HTMLFieldSetElement;
#endif /* __cplusplus */

#endif 	/* __HTMLFieldSetElement_FWD_DEFINED__ */


#ifndef __DispHTMLLegendElement_FWD_DEFINED__
#define __DispHTMLLegendElement_FWD_DEFINED__
typedef interface DispHTMLLegendElement DispHTMLLegendElement;
#endif 	/* __DispHTMLLegendElement_FWD_DEFINED__ */


#ifndef __HTMLLegendElement_FWD_DEFINED__
#define __HTMLLegendElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLLegendElement HTMLLegendElement;
#else
typedef struct HTMLLegendElement HTMLLegendElement;
#endif /* __cplusplus */

#endif 	/* __HTMLLegendElement_FWD_DEFINED__ */


#ifndef __IHTMLSpanFlow_FWD_DEFINED__
#define __IHTMLSpanFlow_FWD_DEFINED__
typedef interface IHTMLSpanFlow IHTMLSpanFlow;
#endif 	/* __IHTMLSpanFlow_FWD_DEFINED__ */


#ifndef __DispHTMLSpanFlow_FWD_DEFINED__
#define __DispHTMLSpanFlow_FWD_DEFINED__
typedef interface DispHTMLSpanFlow DispHTMLSpanFlow;
#endif 	/* __DispHTMLSpanFlow_FWD_DEFINED__ */


#ifndef __HTMLSpanFlow_FWD_DEFINED__
#define __HTMLSpanFlow_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLSpanFlow HTMLSpanFlow;
#else
typedef struct HTMLSpanFlow HTMLSpanFlow;
#endif /* __cplusplus */

#endif 	/* __HTMLSpanFlow_FWD_DEFINED__ */


#ifndef __IHTMLFrameSetElement_FWD_DEFINED__
#define __IHTMLFrameSetElement_FWD_DEFINED__
typedef interface IHTMLFrameSetElement IHTMLFrameSetElement;
#endif 	/* __IHTMLFrameSetElement_FWD_DEFINED__ */


#ifndef __IHTMLFrameSetElement2_FWD_DEFINED__
#define __IHTMLFrameSetElement2_FWD_DEFINED__
typedef interface IHTMLFrameSetElement2 IHTMLFrameSetElement2;
#endif 	/* __IHTMLFrameSetElement2_FWD_DEFINED__ */


#ifndef __DispHTMLFrameSetSite_FWD_DEFINED__
#define __DispHTMLFrameSetSite_FWD_DEFINED__
typedef interface DispHTMLFrameSetSite DispHTMLFrameSetSite;
#endif 	/* __DispHTMLFrameSetSite_FWD_DEFINED__ */


#ifndef __HTMLFrameSetSite_FWD_DEFINED__
#define __HTMLFrameSetSite_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLFrameSetSite HTMLFrameSetSite;
#else
typedef struct HTMLFrameSetSite HTMLFrameSetSite;
#endif /* __cplusplus */

#endif 	/* __HTMLFrameSetSite_FWD_DEFINED__ */


#ifndef __IHTMLBGsound_FWD_DEFINED__
#define __IHTMLBGsound_FWD_DEFINED__
typedef interface IHTMLBGsound IHTMLBGsound;
#endif 	/* __IHTMLBGsound_FWD_DEFINED__ */


#ifndef __DispHTMLBGsound_FWD_DEFINED__
#define __DispHTMLBGsound_FWD_DEFINED__
typedef interface DispHTMLBGsound DispHTMLBGsound;
#endif 	/* __DispHTMLBGsound_FWD_DEFINED__ */


#ifndef __HTMLBGsound_FWD_DEFINED__
#define __HTMLBGsound_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLBGsound HTMLBGsound;
#else
typedef struct HTMLBGsound HTMLBGsound;
#endif /* __cplusplus */

#endif 	/* __HTMLBGsound_FWD_DEFINED__ */


#ifndef __IHTMLFontNamesCollection_FWD_DEFINED__
#define __IHTMLFontNamesCollection_FWD_DEFINED__
typedef interface IHTMLFontNamesCollection IHTMLFontNamesCollection;
#endif 	/* __IHTMLFontNamesCollection_FWD_DEFINED__ */


#ifndef __IHTMLFontSizesCollection_FWD_DEFINED__
#define __IHTMLFontSizesCollection_FWD_DEFINED__
typedef interface IHTMLFontSizesCollection IHTMLFontSizesCollection;
#endif 	/* __IHTMLFontSizesCollection_FWD_DEFINED__ */


#ifndef __IHTMLOptionsHolder_FWD_DEFINED__
#define __IHTMLOptionsHolder_FWD_DEFINED__
typedef interface IHTMLOptionsHolder IHTMLOptionsHolder;
#endif 	/* __IHTMLOptionsHolder_FWD_DEFINED__ */


#ifndef __HTMLStyleElementEvents2_FWD_DEFINED__
#define __HTMLStyleElementEvents2_FWD_DEFINED__
typedef interface HTMLStyleElementEvents2 HTMLStyleElementEvents2;
#endif 	/* __HTMLStyleElementEvents2_FWD_DEFINED__ */


#ifndef __HTMLStyleElementEvents_FWD_DEFINED__
#define __HTMLStyleElementEvents_FWD_DEFINED__
typedef interface HTMLStyleElementEvents HTMLStyleElementEvents;
#endif 	/* __HTMLStyleElementEvents_FWD_DEFINED__ */


#ifndef __IHTMLStyleElement_FWD_DEFINED__
#define __IHTMLStyleElement_FWD_DEFINED__
typedef interface IHTMLStyleElement IHTMLStyleElement;
#endif 	/* __IHTMLStyleElement_FWD_DEFINED__ */


#ifndef __DispHTMLStyleElement_FWD_DEFINED__
#define __DispHTMLStyleElement_FWD_DEFINED__
typedef interface DispHTMLStyleElement DispHTMLStyleElement;
#endif 	/* __DispHTMLStyleElement_FWD_DEFINED__ */


#ifndef __HTMLStyleElement_FWD_DEFINED__
#define __HTMLStyleElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLStyleElement HTMLStyleElement;
#else
typedef struct HTMLStyleElement HTMLStyleElement;
#endif /* __cplusplus */

#endif 	/* __HTMLStyleElement_FWD_DEFINED__ */


#ifndef __IHTMLStyleFontFace_FWD_DEFINED__
#define __IHTMLStyleFontFace_FWD_DEFINED__
typedef interface IHTMLStyleFontFace IHTMLStyleFontFace;
#endif 	/* __IHTMLStyleFontFace_FWD_DEFINED__ */


#ifndef __HTMLStyleFontFace_FWD_DEFINED__
#define __HTMLStyleFontFace_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLStyleFontFace HTMLStyleFontFace;
#else
typedef struct HTMLStyleFontFace HTMLStyleFontFace;
#endif /* __cplusplus */

#endif 	/* __HTMLStyleFontFace_FWD_DEFINED__ */


#ifndef __ICSSFilterSite_FWD_DEFINED__
#define __ICSSFilterSite_FWD_DEFINED__
typedef interface ICSSFilterSite ICSSFilterSite;
#endif 	/* __ICSSFilterSite_FWD_DEFINED__ */


#ifndef __IMarkupPointer_FWD_DEFINED__
#define __IMarkupPointer_FWD_DEFINED__
typedef interface IMarkupPointer IMarkupPointer;
#endif 	/* __IMarkupPointer_FWD_DEFINED__ */


#ifndef __IMarkupContainer_FWD_DEFINED__
#define __IMarkupContainer_FWD_DEFINED__
typedef interface IMarkupContainer IMarkupContainer;
#endif 	/* __IMarkupContainer_FWD_DEFINED__ */


#ifndef __IMarkupContainer2_FWD_DEFINED__
#define __IMarkupContainer2_FWD_DEFINED__
typedef interface IMarkupContainer2 IMarkupContainer2;
#endif 	/* __IMarkupContainer2_FWD_DEFINED__ */


#ifndef __IHTMLChangeLog_FWD_DEFINED__
#define __IHTMLChangeLog_FWD_DEFINED__
typedef interface IHTMLChangeLog IHTMLChangeLog;
#endif 	/* __IHTMLChangeLog_FWD_DEFINED__ */


#ifndef __IHTMLChangeSink_FWD_DEFINED__
#define __IHTMLChangeSink_FWD_DEFINED__
typedef interface IHTMLChangeSink IHTMLChangeSink;
#endif 	/* __IHTMLChangeSink_FWD_DEFINED__ */


#ifndef __IActiveIMMApp_FWD_DEFINED__
#define __IActiveIMMApp_FWD_DEFINED__
typedef interface IActiveIMMApp IActiveIMMApp;
#endif 	/* __IActiveIMMApp_FWD_DEFINED__ */


#ifndef __ISegmentList_FWD_DEFINED__
#define __ISegmentList_FWD_DEFINED__
typedef interface ISegmentList ISegmentList;
#endif 	/* __ISegmentList_FWD_DEFINED__ */


#ifndef __ISegmentListIterator_FWD_DEFINED__
#define __ISegmentListIterator_FWD_DEFINED__
typedef interface ISegmentListIterator ISegmentListIterator;
#endif 	/* __ISegmentListIterator_FWD_DEFINED__ */


#ifndef __IHTMLCaret_FWD_DEFINED__
#define __IHTMLCaret_FWD_DEFINED__
typedef interface IHTMLCaret IHTMLCaret;
#endif 	/* __IHTMLCaret_FWD_DEFINED__ */


#ifndef __ISegment_FWD_DEFINED__
#define __ISegment_FWD_DEFINED__
typedef interface ISegment ISegment;
#endif 	/* __ISegment_FWD_DEFINED__ */


#ifndef __IElementSegment_FWD_DEFINED__
#define __IElementSegment_FWD_DEFINED__
typedef interface IElementSegment IElementSegment;
#endif 	/* __IElementSegment_FWD_DEFINED__ */


#ifndef __IHighlightSegment_FWD_DEFINED__
#define __IHighlightSegment_FWD_DEFINED__
typedef interface IHighlightSegment IHighlightSegment;
#endif 	/* __IHighlightSegment_FWD_DEFINED__ */


#ifndef __IHighlightRenderingServices_FWD_DEFINED__
#define __IHighlightRenderingServices_FWD_DEFINED__
typedef interface IHighlightRenderingServices IHighlightRenderingServices;
#endif 	/* __IHighlightRenderingServices_FWD_DEFINED__ */


#ifndef __ILineInfo_FWD_DEFINED__
#define __ILineInfo_FWD_DEFINED__
typedef interface ILineInfo ILineInfo;
#endif 	/* __ILineInfo_FWD_DEFINED__ */


#ifndef __IDisplayPointer_FWD_DEFINED__
#define __IDisplayPointer_FWD_DEFINED__
typedef interface IDisplayPointer IDisplayPointer;
#endif 	/* __IDisplayPointer_FWD_DEFINED__ */


#ifndef __IDisplayServices_FWD_DEFINED__
#define __IDisplayServices_FWD_DEFINED__
typedef interface IDisplayServices IDisplayServices;
#endif 	/* __IDisplayServices_FWD_DEFINED__ */


#ifndef __IHtmlDlgSafeHelper_FWD_DEFINED__
#define __IHtmlDlgSafeHelper_FWD_DEFINED__
typedef interface IHtmlDlgSafeHelper IHtmlDlgSafeHelper;
#endif 	/* __IHtmlDlgSafeHelper_FWD_DEFINED__ */


#ifndef __IBlockFormats_FWD_DEFINED__
#define __IBlockFormats_FWD_DEFINED__
typedef interface IBlockFormats IBlockFormats;
#endif 	/* __IBlockFormats_FWD_DEFINED__ */


#ifndef __IFontNames_FWD_DEFINED__
#define __IFontNames_FWD_DEFINED__
typedef interface IFontNames IFontNames;
#endif 	/* __IFontNames_FWD_DEFINED__ */


#ifndef __ICSSFilter_FWD_DEFINED__
#define __ICSSFilter_FWD_DEFINED__
typedef interface ICSSFilter ICSSFilter;
#endif 	/* __ICSSFilter_FWD_DEFINED__ */


#ifndef __ISecureUrlHost_FWD_DEFINED__
#define __ISecureUrlHost_FWD_DEFINED__
typedef interface ISecureUrlHost ISecureUrlHost;
#endif 	/* __ISecureUrlHost_FWD_DEFINED__ */


#ifndef __IMarkupServices_FWD_DEFINED__
#define __IMarkupServices_FWD_DEFINED__
typedef interface IMarkupServices IMarkupServices;
#endif 	/* __IMarkupServices_FWD_DEFINED__ */


#ifndef __IMarkupServices2_FWD_DEFINED__
#define __IMarkupServices2_FWD_DEFINED__
typedef interface IMarkupServices2 IMarkupServices2;
#endif 	/* __IMarkupServices2_FWD_DEFINED__ */


#ifndef __IHTMLChangePlayback_FWD_DEFINED__
#define __IHTMLChangePlayback_FWD_DEFINED__
typedef interface IHTMLChangePlayback IHTMLChangePlayback;
#endif 	/* __IHTMLChangePlayback_FWD_DEFINED__ */


#ifndef __IMarkupPointer2_FWD_DEFINED__
#define __IMarkupPointer2_FWD_DEFINED__
typedef interface IMarkupPointer2 IMarkupPointer2;
#endif 	/* __IMarkupPointer2_FWD_DEFINED__ */


#ifndef __IMarkupTextFrags_FWD_DEFINED__
#define __IMarkupTextFrags_FWD_DEFINED__
typedef interface IMarkupTextFrags IMarkupTextFrags;
#endif 	/* __IMarkupTextFrags_FWD_DEFINED__ */


#ifndef __IXMLGenericParse_FWD_DEFINED__
#define __IXMLGenericParse_FWD_DEFINED__
typedef interface IXMLGenericParse IXMLGenericParse;
#endif 	/* __IXMLGenericParse_FWD_DEFINED__ */


#ifndef __IHTMLEditHost_FWD_DEFINED__
#define __IHTMLEditHost_FWD_DEFINED__
typedef interface IHTMLEditHost IHTMLEditHost;
#endif 	/* __IHTMLEditHost_FWD_DEFINED__ */


#ifndef __IHTMLEditHost2_FWD_DEFINED__
#define __IHTMLEditHost2_FWD_DEFINED__
typedef interface IHTMLEditHost2 IHTMLEditHost2;
#endif 	/* __IHTMLEditHost2_FWD_DEFINED__ */


#ifndef __ISequenceNumber_FWD_DEFINED__
#define __ISequenceNumber_FWD_DEFINED__
typedef interface ISequenceNumber ISequenceNumber;
#endif 	/* __ISequenceNumber_FWD_DEFINED__ */


#ifndef __IIMEServices_FWD_DEFINED__
#define __IIMEServices_FWD_DEFINED__
typedef interface IIMEServices IIMEServices;
#endif 	/* __IIMEServices_FWD_DEFINED__ */


#ifndef __ISelectionServicesListener_FWD_DEFINED__
#define __ISelectionServicesListener_FWD_DEFINED__
typedef interface ISelectionServicesListener ISelectionServicesListener;
#endif 	/* __ISelectionServicesListener_FWD_DEFINED__ */


#ifndef __ISelectionServices_FWD_DEFINED__
#define __ISelectionServices_FWD_DEFINED__
typedef interface ISelectionServices ISelectionServices;
#endif 	/* __ISelectionServices_FWD_DEFINED__ */


#ifndef __IHTMLEditDesigner_FWD_DEFINED__
#define __IHTMLEditDesigner_FWD_DEFINED__
typedef interface IHTMLEditDesigner IHTMLEditDesigner;
#endif 	/* __IHTMLEditDesigner_FWD_DEFINED__ */


#ifndef __IHTMLEditServices_FWD_DEFINED__
#define __IHTMLEditServices_FWD_DEFINED__
typedef interface IHTMLEditServices IHTMLEditServices;
#endif 	/* __IHTMLEditServices_FWD_DEFINED__ */


#ifndef __IHTMLEditServices2_FWD_DEFINED__
#define __IHTMLEditServices2_FWD_DEFINED__
typedef interface IHTMLEditServices2 IHTMLEditServices2;
#endif 	/* __IHTMLEditServices2_FWD_DEFINED__ */


#ifndef __IHTMLComputedStyle_FWD_DEFINED__
#define __IHTMLComputedStyle_FWD_DEFINED__
typedef interface IHTMLComputedStyle IHTMLComputedStyle;
#endif 	/* __IHTMLComputedStyle_FWD_DEFINED__ */


#ifndef __HtmlDlgSafeHelper_FWD_DEFINED__
#define __HtmlDlgSafeHelper_FWD_DEFINED__

#ifdef __cplusplus
typedef class HtmlDlgSafeHelper HtmlDlgSafeHelper;
#else
typedef struct HtmlDlgSafeHelper HtmlDlgSafeHelper;
#endif /* __cplusplus */

#endif 	/* __HtmlDlgSafeHelper_FWD_DEFINED__ */


#ifndef __BlockFormats_FWD_DEFINED__
#define __BlockFormats_FWD_DEFINED__

#ifdef __cplusplus
typedef class BlockFormats BlockFormats;
#else
typedef struct BlockFormats BlockFormats;
#endif /* __cplusplus */

#endif 	/* __BlockFormats_FWD_DEFINED__ */


#ifndef __FontNames_FWD_DEFINED__
#define __FontNames_FWD_DEFINED__

#ifdef __cplusplus
typedef class FontNames FontNames;
#else
typedef struct FontNames FontNames;
#endif /* __cplusplus */

#endif 	/* __FontNames_FWD_DEFINED__ */


#ifndef __HTMLNamespaceEvents_FWD_DEFINED__
#define __HTMLNamespaceEvents_FWD_DEFINED__
typedef interface HTMLNamespaceEvents HTMLNamespaceEvents;
#endif 	/* __HTMLNamespaceEvents_FWD_DEFINED__ */


#ifndef __IHTMLNamespace_FWD_DEFINED__
#define __IHTMLNamespace_FWD_DEFINED__
typedef interface IHTMLNamespace IHTMLNamespace;
#endif 	/* __IHTMLNamespace_FWD_DEFINED__ */


#ifndef __IHTMLNamespaceCollection_FWD_DEFINED__
#define __IHTMLNamespaceCollection_FWD_DEFINED__
typedef interface IHTMLNamespaceCollection IHTMLNamespaceCollection;
#endif 	/* __IHTMLNamespaceCollection_FWD_DEFINED__ */


#ifndef __HTMLNamespace_FWD_DEFINED__
#define __HTMLNamespace_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLNamespace HTMLNamespace;
#else
typedef struct HTMLNamespace HTMLNamespace;
#endif /* __cplusplus */

#endif 	/* __HTMLNamespace_FWD_DEFINED__ */


#ifndef __HTMLNamespaceCollection_FWD_DEFINED__
#define __HTMLNamespaceCollection_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLNamespaceCollection HTMLNamespaceCollection;
#else
typedef struct HTMLNamespaceCollection HTMLNamespaceCollection;
#endif /* __cplusplus */

#endif 	/* __HTMLNamespaceCollection_FWD_DEFINED__ */


#ifndef __IHTMLPainter_FWD_DEFINED__
#define __IHTMLPainter_FWD_DEFINED__
typedef interface IHTMLPainter IHTMLPainter;
#endif 	/* __IHTMLPainter_FWD_DEFINED__ */


#ifndef __IHTMLPaintSite_FWD_DEFINED__
#define __IHTMLPaintSite_FWD_DEFINED__
typedef interface IHTMLPaintSite IHTMLPaintSite;
#endif 	/* __IHTMLPaintSite_FWD_DEFINED__ */


#ifndef __IHTMLPainterEventInfo_FWD_DEFINED__
#define __IHTMLPainterEventInfo_FWD_DEFINED__
typedef interface IHTMLPainterEventInfo IHTMLPainterEventInfo;
#endif 	/* __IHTMLPainterEventInfo_FWD_DEFINED__ */


#ifndef __IHTMLPainterOverlay_FWD_DEFINED__
#define __IHTMLPainterOverlay_FWD_DEFINED__
typedef interface IHTMLPainterOverlay IHTMLPainterOverlay;
#endif 	/* __IHTMLPainterOverlay_FWD_DEFINED__ */


#ifndef __IHTMLIPrintCollection_FWD_DEFINED__
#define __IHTMLIPrintCollection_FWD_DEFINED__
typedef interface IHTMLIPrintCollection IHTMLIPrintCollection;
#endif 	/* __IHTMLIPrintCollection_FWD_DEFINED__ */


#ifndef __IEnumPrivacyRecords_FWD_DEFINED__
#define __IEnumPrivacyRecords_FWD_DEFINED__
typedef interface IEnumPrivacyRecords IEnumPrivacyRecords;
#endif 	/* __IEnumPrivacyRecords_FWD_DEFINED__ */


#ifndef __IHTMLDialog_FWD_DEFINED__
#define __IHTMLDialog_FWD_DEFINED__
typedef interface IHTMLDialog IHTMLDialog;
#endif 	/* __IHTMLDialog_FWD_DEFINED__ */


#ifndef __IHTMLDialog2_FWD_DEFINED__
#define __IHTMLDialog2_FWD_DEFINED__
typedef interface IHTMLDialog2 IHTMLDialog2;
#endif 	/* __IHTMLDialog2_FWD_DEFINED__ */


#ifndef __IHTMLDialog3_FWD_DEFINED__
#define __IHTMLDialog3_FWD_DEFINED__
typedef interface IHTMLDialog3 IHTMLDialog3;
#endif 	/* __IHTMLDialog3_FWD_DEFINED__ */


#ifndef __IHTMLModelessInit_FWD_DEFINED__
#define __IHTMLModelessInit_FWD_DEFINED__
typedef interface IHTMLModelessInit IHTMLModelessInit;
#endif 	/* __IHTMLModelessInit_FWD_DEFINED__ */


#ifndef __ThreadDialogProcParam_FWD_DEFINED__
#define __ThreadDialogProcParam_FWD_DEFINED__

#ifdef __cplusplus
typedef class ThreadDialogProcParam ThreadDialogProcParam;
#else
typedef struct ThreadDialogProcParam ThreadDialogProcParam;
#endif /* __cplusplus */

#endif 	/* __ThreadDialogProcParam_FWD_DEFINED__ */


#ifndef __HTMLDialog_FWD_DEFINED__
#define __HTMLDialog_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLDialog HTMLDialog;
#else
typedef struct HTMLDialog HTMLDialog;
#endif /* __cplusplus */

#endif 	/* __HTMLDialog_FWD_DEFINED__ */


#ifndef __IHTMLPopup_FWD_DEFINED__
#define __IHTMLPopup_FWD_DEFINED__
typedef interface IHTMLPopup IHTMLPopup;
#endif 	/* __IHTMLPopup_FWD_DEFINED__ */


#ifndef __DispHTMLPopup_FWD_DEFINED__
#define __DispHTMLPopup_FWD_DEFINED__
typedef interface DispHTMLPopup DispHTMLPopup;
#endif 	/* __DispHTMLPopup_FWD_DEFINED__ */


#ifndef __HTMLPopup_FWD_DEFINED__
#define __HTMLPopup_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLPopup HTMLPopup;
#else
typedef struct HTMLPopup HTMLPopup;
#endif /* __cplusplus */

#endif 	/* __HTMLPopup_FWD_DEFINED__ */


#ifndef __IHTMLAppBehavior_FWD_DEFINED__
#define __IHTMLAppBehavior_FWD_DEFINED__
typedef interface IHTMLAppBehavior IHTMLAppBehavior;
#endif 	/* __IHTMLAppBehavior_FWD_DEFINED__ */


#ifndef __IHTMLAppBehavior2_FWD_DEFINED__
#define __IHTMLAppBehavior2_FWD_DEFINED__
typedef interface IHTMLAppBehavior2 IHTMLAppBehavior2;
#endif 	/* __IHTMLAppBehavior2_FWD_DEFINED__ */


#ifndef __IHTMLAppBehavior3_FWD_DEFINED__
#define __IHTMLAppBehavior3_FWD_DEFINED__
typedef interface IHTMLAppBehavior3 IHTMLAppBehavior3;
#endif 	/* __IHTMLAppBehavior3_FWD_DEFINED__ */


#ifndef __DispHTMLAppBehavior_FWD_DEFINED__
#define __DispHTMLAppBehavior_FWD_DEFINED__
typedef interface DispHTMLAppBehavior DispHTMLAppBehavior;
#endif 	/* __DispHTMLAppBehavior_FWD_DEFINED__ */


#ifndef __HTMLAppBehavior_FWD_DEFINED__
#define __HTMLAppBehavior_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLAppBehavior HTMLAppBehavior;
#else
typedef struct HTMLAppBehavior HTMLAppBehavior;
#endif /* __cplusplus */

#endif 	/* __HTMLAppBehavior_FWD_DEFINED__ */


#ifndef __OldHTMLDocument_FWD_DEFINED__
#define __OldHTMLDocument_FWD_DEFINED__

#ifdef __cplusplus
typedef class OldHTMLDocument OldHTMLDocument;
#else
typedef struct OldHTMLDocument OldHTMLDocument;
#endif /* __cplusplus */

#endif 	/* __OldHTMLDocument_FWD_DEFINED__ */


#ifndef __OldHTMLFormElement_FWD_DEFINED__
#define __OldHTMLFormElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class OldHTMLFormElement OldHTMLFormElement;
#else
typedef struct OldHTMLFormElement OldHTMLFormElement;
#endif /* __cplusplus */

#endif 	/* __OldHTMLFormElement_FWD_DEFINED__ */


#ifndef __DispIHTMLInputButtonElement_FWD_DEFINED__
#define __DispIHTMLInputButtonElement_FWD_DEFINED__
typedef interface DispIHTMLInputButtonElement DispIHTMLInputButtonElement;
#endif 	/* __DispIHTMLInputButtonElement_FWD_DEFINED__ */


#ifndef __HTMLInputButtonElement_FWD_DEFINED__
#define __HTMLInputButtonElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLInputButtonElement HTMLInputButtonElement;
#else
typedef struct HTMLInputButtonElement HTMLInputButtonElement;
#endif /* __cplusplus */

#endif 	/* __HTMLInputButtonElement_FWD_DEFINED__ */


#ifndef __DispIHTMLInputTextElement_FWD_DEFINED__
#define __DispIHTMLInputTextElement_FWD_DEFINED__
typedef interface DispIHTMLInputTextElement DispIHTMLInputTextElement;
#endif 	/* __DispIHTMLInputTextElement_FWD_DEFINED__ */


#ifndef __HTMLInputTextElement_FWD_DEFINED__
#define __HTMLInputTextElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLInputTextElement HTMLInputTextElement;
#else
typedef struct HTMLInputTextElement HTMLInputTextElement;
#endif /* __cplusplus */

#endif 	/* __HTMLInputTextElement_FWD_DEFINED__ */


#ifndef __DispIHTMLInputFileElement_FWD_DEFINED__
#define __DispIHTMLInputFileElement_FWD_DEFINED__
typedef interface DispIHTMLInputFileElement DispIHTMLInputFileElement;
#endif 	/* __DispIHTMLInputFileElement_FWD_DEFINED__ */


#ifndef __HTMLInputFileElement_FWD_DEFINED__
#define __HTMLInputFileElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLInputFileElement HTMLInputFileElement;
#else
typedef struct HTMLInputFileElement HTMLInputFileElement;
#endif /* __cplusplus */

#endif 	/* __HTMLInputFileElement_FWD_DEFINED__ */


#ifndef __DispIHTMLOptionButtonElement_FWD_DEFINED__
#define __DispIHTMLOptionButtonElement_FWD_DEFINED__
typedef interface DispIHTMLOptionButtonElement DispIHTMLOptionButtonElement;
#endif 	/* __DispIHTMLOptionButtonElement_FWD_DEFINED__ */


#ifndef __HTMLOptionButtonElement_FWD_DEFINED__
#define __HTMLOptionButtonElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLOptionButtonElement HTMLOptionButtonElement;
#else
typedef struct HTMLOptionButtonElement HTMLOptionButtonElement;
#endif /* __cplusplus */

#endif 	/* __HTMLOptionButtonElement_FWD_DEFINED__ */


#ifndef __DispIHTMLInputImage_FWD_DEFINED__
#define __DispIHTMLInputImage_FWD_DEFINED__
typedef interface DispIHTMLInputImage DispIHTMLInputImage;
#endif 	/* __DispIHTMLInputImage_FWD_DEFINED__ */


#ifndef __HTMLInputImage_FWD_DEFINED__
#define __HTMLInputImage_FWD_DEFINED__

#ifdef __cplusplus
typedef class HTMLInputImage HTMLInputImage;
#else
typedef struct HTMLInputImage HTMLInputImage;
#endif /* __cplusplus */

#endif 	/* __HTMLInputImage_FWD_DEFINED__ */


#ifndef __IElementNamespace_FWD_DEFINED__
#define __IElementNamespace_FWD_DEFINED__
typedef interface IElementNamespace IElementNamespace;
#endif 	/* __IElementNamespace_FWD_DEFINED__ */


#ifndef __IElementNamespaceTable_FWD_DEFINED__
#define __IElementNamespaceTable_FWD_DEFINED__
typedef interface IElementNamespaceTable IElementNamespaceTable;
#endif 	/* __IElementNamespaceTable_FWD_DEFINED__ */


#ifndef __IElementNamespaceFactory_FWD_DEFINED__
#define __IElementNamespaceFactory_FWD_DEFINED__
typedef interface IElementNamespaceFactory IElementNamespaceFactory;
#endif 	/* __IElementNamespaceFactory_FWD_DEFINED__ */


#ifndef __IElementNamespaceFactory2_FWD_DEFINED__
#define __IElementNamespaceFactory2_FWD_DEFINED__
typedef interface IElementNamespaceFactory2 IElementNamespaceFactory2;
#endif 	/* __IElementNamespaceFactory2_FWD_DEFINED__ */


#ifndef __IElementNamespaceFactoryCallback_FWD_DEFINED__
#define __IElementNamespaceFactoryCallback_FWD_DEFINED__
typedef interface IElementNamespaceFactoryCallback IElementNamespaceFactoryCallback;
#endif 	/* __IElementNamespaceFactoryCallback_FWD_DEFINED__ */


#ifndef __IElementBehaviorSiteOM2_FWD_DEFINED__
#define __IElementBehaviorSiteOM2_FWD_DEFINED__
typedef interface IElementBehaviorSiteOM2 IElementBehaviorSiteOM2;
#endif 	/* __IElementBehaviorSiteOM2_FWD_DEFINED__ */


#ifndef __IElementBehaviorCategory_FWD_DEFINED__
#define __IElementBehaviorCategory_FWD_DEFINED__
typedef interface IElementBehaviorCategory IElementBehaviorCategory;
#endif 	/* __IElementBehaviorCategory_FWD_DEFINED__ */


#ifndef __IElementBehaviorSiteCategory_FWD_DEFINED__
#define __IElementBehaviorSiteCategory_FWD_DEFINED__
typedef interface IElementBehaviorSiteCategory IElementBehaviorSiteCategory;
#endif 	/* __IElementBehaviorSiteCategory_FWD_DEFINED__ */


#ifndef __IElementBehaviorSubmit_FWD_DEFINED__
#define __IElementBehaviorSubmit_FWD_DEFINED__
typedef interface IElementBehaviorSubmit IElementBehaviorSubmit;
#endif 	/* __IElementBehaviorSubmit_FWD_DEFINED__ */


#ifndef __IElementBehaviorFocus_FWD_DEFINED__
#define __IElementBehaviorFocus_FWD_DEFINED__
typedef interface IElementBehaviorFocus IElementBehaviorFocus;
#endif 	/* __IElementBehaviorFocus_FWD_DEFINED__ */


#ifndef __IElementBehaviorLayout_FWD_DEFINED__
#define __IElementBehaviorLayout_FWD_DEFINED__
typedef interface IElementBehaviorLayout IElementBehaviorLayout;
#endif 	/* __IElementBehaviorLayout_FWD_DEFINED__ */


#ifndef __IElementBehaviorLayout2_FWD_DEFINED__
#define __IElementBehaviorLayout2_FWD_DEFINED__
typedef interface IElementBehaviorLayout2 IElementBehaviorLayout2;
#endif 	/* __IElementBehaviorLayout2_FWD_DEFINED__ */


#ifndef __IElementBehaviorSiteLayout_FWD_DEFINED__
#define __IElementBehaviorSiteLayout_FWD_DEFINED__
typedef interface IElementBehaviorSiteLayout IElementBehaviorSiteLayout;
#endif 	/* __IElementBehaviorSiteLayout_FWD_DEFINED__ */


#ifndef __IElementBehaviorSiteLayout2_FWD_DEFINED__
#define __IElementBehaviorSiteLayout2_FWD_DEFINED__
typedef interface IElementBehaviorSiteLayout2 IElementBehaviorSiteLayout2;
#endif 	/* __IElementBehaviorSiteLayout2_FWD_DEFINED__ */


#ifndef __IHostBehaviorInit_FWD_DEFINED__
#define __IHostBehaviorInit_FWD_DEFINED__
typedef interface IHostBehaviorInit IHostBehaviorInit;
#endif 	/* __IHostBehaviorInit_FWD_DEFINED__ */


/* header files for imported files */
#include "ocidl.h"
#include "dimm.h"

#ifdef __cplusplus
extern "C"{
#endif 

void * __RPC_USER MIDL_user_allocate(size_t);
void __RPC_USER MIDL_user_free( void * ); 

/* interface __MIDL_itf_mshtml_0000 */
/* [local] */ 


#include <olectl.h>
EXTERN_C const GUID CMDSETID_Forms3;
EXTERN_C const GUID CLSID_MHTMLDocument;
EXTERN_C const GUID CLSID_HTADocument;
EXTERN_C const GUID CLSID_HTMLApplication;
EXTERN_C const GUID CLSID_HTMLPluginDocument;
DEFINE_GUID(SID_SEditCommandTarget,0x3050f4b5,0x98b5,0x11cf,0xbb,0x82,0x00,0xaa,0x00,0xbd,0xce,0x0b);
DEFINE_GUID(CGID_EditStateCommands,0x3050f4b6,0x98b5,0x11cf,0xbb,0x82,0x00,0xaa,0x00,0xbd,0xce,0x0b);
DEFINE_GUID(SID_SHTMLEditHost,0x3050f6a0,0x98b5,0x11cf,0xbb,0x82,0x00,0xaa,0x00,0xbd,0xce,0x0b);
DEFINE_GUID(SID_SHTMLEditServices,0x3050f7f9,0x98b5,0x11cf,0xbb,0x82,0x00,0xaa,0x00,0xbd,0xce,0x0b);
#define SID_SHTMLWindow IID_IHTMLWindow2
#define SID_SElementBehaviorFactory IID_IElementBehaviorFactory
// This information will be the LOWORD of the privacy flags stored in the privacy record
#define COOKIEACTION_NONE           0x00000000
#define COOKIEACTION_ACCEPT         0x00000001
#define COOKIEACTION_REJECT         0x00000002
#define COOKIEACTION_DOWNGRADE      0x00000004
#define COOKIEACTION_LEASH          0x00000008
#define COOKIEACTION_SUPPRESS       0x00000010
#define COOKIEACTION_READ           0x00000020
// Privacy info related to the url
// This information will be the HIWORD of the privacy flags stored in the privacy record
#define PRIVACY_URLISTOPLEVEL          0x00010000                   // Is this a top level url?
#define PRIVACY_URLHASCOMPACTPOLICY    0x00020000                   // Did the url have a compact policy used for privacy evaluations
#define PRIVACY_URLHASPOSTDATA         0x00080000                   // Is this a POST request?
#define PRIVACY_URLHASPOLICYREFLINK    0x00100000                   // Did the url have a privacy ref url in a link tag
#define PRIVACY_URLHASPOLICYREFHEADER  0x00200000                   // Did the url have a privacy ref url in a header tag
#define PRIVACY_URLHASP3PHEADER        0x00400000                   // Did the url have a privacy ref url in a header tag
#ifndef _WINGDI_
typedef struct tagLOGFONTA
    {
    LONG lfHeight;
    LONG lfWidth;
    LONG lfEscapement;
    LONG lfOrientation;
    LONG lfWeight;
    BYTE lfItalic;
    BYTE lfUnderline;
    BYTE lfStrikeOut;
    BYTE lfCharSet;
    BYTE lfOutPrecision;
    BYTE lfClipPrecision;
    BYTE lfQuality;
    BYTE lfPitchAndFamily;
    CHAR lfFaceName[ 32 ];
    } 	LOGFONTA;

typedef struct tagLOGFONTW
    {
    LONG lfHeight;
    LONG lfWidth;
    LONG lfEscapement;
    LONG lfOrientation;
    LONG lfWeight;
    BYTE lfItalic;
    BYTE lfUnderline;
    BYTE lfStrikeOut;
    BYTE lfCharSet;
    BYTE lfOutPrecision;
    BYTE lfClipPrecision;
    BYTE lfQuality;
    BYTE lfPitchAndFamily;
    WCHAR lfFaceName[ 32 ];
    } 	LOGFONTW;

typedef LOGFONTA LOGFONT;

#endif


extern RPC_IF_HANDLE __MIDL_itf_mshtml_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_mshtml_0000_v0_0_s_ifspec;

#ifndef __IHTMLFiltersCollection_INTERFACE_DEFINED__
#define __IHTMLFiltersCollection_INTERFACE_DEFINED__

/* interface IHTMLFiltersCollection */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLFiltersCollection;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f3ee-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLFiltersCollection : public IDispatch
    {
    public:
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_length( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [restricted][hidden][id][propget] */ HRESULT STDMETHODCALLTYPE get__newEnum( 
            /* [out][retval] */ IUnknown **p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE item( 
            /* [in] */ VARIANT *pvarIndex,
            /* [out][retval] */ VARIANT *pvarResult) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLFiltersCollectionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IHTMLFiltersCollection * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IHTMLFiltersCollection * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IHTMLFiltersCollection * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IHTMLFiltersCollection * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IHTMLFiltersCollection * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IHTMLFiltersCollection * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IHTMLFiltersCollection * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_length )( 
            IHTMLFiltersCollection * This,
            /* [out][retval] */ long *p);
        
        /* [restricted][hidden][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get__newEnum )( 
            IHTMLFiltersCollection * This,
            /* [out][retval] */ IUnknown **p);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *item )( 
            IHTMLFiltersCollection * This,
            /* [in] */ VARIANT *pvarIndex,
            /* [out][retval] */ VARIANT *pvarResult);
        
        END_INTERFACE
    } IHTMLFiltersCollectionVtbl;

    interface IHTMLFiltersCollection
    {
        CONST_VTBL struct IHTMLFiltersCollectionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLFiltersCollection_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IHTMLFiltersCollection_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IHTMLFiltersCollection_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IHTMLFiltersCollection_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IHTMLFiltersCollection_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IHTMLFiltersCollection_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IHTMLFiltersCollection_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IHTMLFiltersCollection_get_length(This,p)	\
    (This)->lpVtbl -> get_length(This,p)

#define IHTMLFiltersCollection_get__newEnum(This,p)	\
    (This)->lpVtbl -> get__newEnum(This,p)

#define IHTMLFiltersCollection_item(This,pvarIndex,pvarResult)	\
    (This)->lpVtbl -> item(This,pvarIndex,pvarResult)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLFiltersCollection_get_length_Proxy( 
    IHTMLFiltersCollection * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLFiltersCollection_get_length_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [restricted][hidden][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLFiltersCollection_get__newEnum_Proxy( 
    IHTMLFiltersCollection * This,
    /* [out][retval] */ IUnknown **p);


void __RPC_STUB IHTMLFiltersCollection_get__newEnum_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLFiltersCollection_item_Proxy( 
    IHTMLFiltersCollection * This,
    /* [in] */ VARIANT *pvarIndex,
    /* [out][retval] */ VARIANT *pvarResult);


void __RPC_STUB IHTMLFiltersCollection_item_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLFiltersCollection_INTERFACE_DEFINED__ */



#ifndef __MSHTML_LIBRARY_DEFINED__
#define __MSHTML_LIBRARY_DEFINED__

/* library MSHTML */
/* [uuid][version][helpstring][lcid] */ 












typedef 
enum _htmlDesignMode
    {	htmlDesignModeInherit	= -2,
	htmlDesignModeOn	= -1,
	htmlDesignModeOff	= 0,
	htmlDesignMode_Max	= 2147483647L
    } 	htmlDesignMode;

typedef 
enum _htmlZOrder
    {	htmlZOrderFront	= 0,
	htmlZOrderBack	= 1,
	htmlZOrder_Max	= 2147483647L
    } 	htmlZOrder;

typedef 
enum _htmlClear
    {	htmlClearNotSet	= 0,
	htmlClearAll	= 1,
	htmlClearLeft	= 2,
	htmlClearRight	= 3,
	htmlClearBoth	= 4,
	htmlClearNone	= 5,
	htmlClear_Max	= 2147483647L
    } 	htmlClear;

typedef 
enum _htmlControlAlign
    {	htmlControlAlignNotSet	= 0,
	htmlControlAlignLeft	= 1,
	htmlControlAlignCenter	= 2,
	htmlControlAlignRight	= 3,
	htmlControlAlignTextTop	= 4,
	htmlControlAlignAbsMiddle	= 5,
	htmlControlAlignBaseline	= 6,
	htmlControlAlignAbsBottom	= 7,
	htmlControlAlignBottom	= 8,
	htmlControlAlignMiddle	= 9,
	htmlControlAlignTop	= 10,
	htmlControlAlign_Max	= 2147483647L
    } 	htmlControlAlign;

typedef 
enum _htmlBlockAlign
    {	htmlBlockAlignNotSet	= 0,
	htmlBlockAlignLeft	= 1,
	htmlBlockAlignCenter	= 2,
	htmlBlockAlignRight	= 3,
	htmlBlockAlignJustify	= 4,
	htmlBlockAlign_Max	= 2147483647L
    } 	htmlBlockAlign;

typedef 
enum _htmlReadyState
    {	htmlReadyStateuninitialized	= 0,
	htmlReadyStateloading	= 1,
	htmlReadyStateloaded	= 2,
	htmlReadyStateinteractive	= 3,
	htmlReadyStatecomplete	= 4,
	htmlReadyState_Max	= 2147483647L
    } 	htmlReadyState;

typedef 
enum _htmlLoop
    {	htmlLoopLoopInfinite	= -1,
	htmlLoop_Max	= 2147483647L
    } 	htmlLoop;

typedef 
enum _mediaType
    {	mediaTypeNotSet	= 0,
	mediaTypeAll	= 511,
	mediaTypeAural	= 1,
	mediaTypeBraille	= 2,
	mediaTypeEmbossed	= 4,
	mediaTypeHandheld	= 8,
	mediaTypePrint	= 16,
	mediaTypeProjection	= 32,
	mediaTypeScreen	= 64,
	mediaTypeTty	= 128,
	mediaTypeTv	= 256,
	mediaType_Max	= 2147483647L
    } 	mediaType;

typedef 
enum _styleTextTransform
    {	styleTextTransformNotSet	= 0,
	styleTextTransformCapitalize	= 1,
	styleTextTransformLowercase	= 2,
	styleTextTransformUppercase	= 3,
	styleTextTransformNone	= 4,
	styleTextTransform_Max	= 2147483647L
    } 	styleTextTransform;

typedef 
enum _styleDataRepeat
    {	styleDataRepeatNone	= 0,
	styleDataRepeatInner	= 1,
	styleDataRepeat_Max	= 2147483647L
    } 	styleDataRepeat;

typedef 
enum _styleOverflow
    {	styleOverflowNotSet	= 0,
	styleOverflowAuto	= 1,
	styleOverflowHidden	= 2,
	styleOverflowVisible	= 3,
	styleOverflowScroll	= 4,
	styleOverflow_Max	= 2147483647L
    } 	styleOverflow;

typedef 
enum _styleTableLayout
    {	styleTableLayoutNotSet	= 0,
	styleTableLayoutAuto	= 1,
	styleTableLayoutFixed	= 2,
	styleTableLayout_Max	= 2147483647L
    } 	styleTableLayout;

typedef 
enum _styleBorderCollapse
    {	styleBorderCollapseNotSet	= 0,
	styleBorderCollapseSeparate	= 1,
	styleBorderCollapseCollapse	= 2,
	styleBorderCollapse_Max	= 2147483647L
    } 	styleBorderCollapse;

typedef 
enum _styleFontStyle
    {	styleFontStyleNotSet	= 0,
	styleFontStyleItalic	= 1,
	styleFontStyleOblique	= 2,
	styleFontStyleNormal	= 3,
	styleFontStyle_Max	= 2147483647L
    } 	styleFontStyle;

typedef 
enum _styleFontVariant
    {	styleFontVariantNotSet	= 0,
	styleFontVariantSmallCaps	= 1,
	styleFontVariantNormal	= 2,
	styleFontVariant_Max	= 2147483647L
    } 	styleFontVariant;

typedef 
enum _styleBackgroundRepeat
    {	styleBackgroundRepeatRepeat	= 0,
	styleBackgroundRepeatRepeatX	= 1,
	styleBackgroundRepeatRepeatY	= 2,
	styleBackgroundRepeatNoRepeat	= 3,
	styleBackgroundRepeatNotSet	= 4,
	styleBackgroundRepeat_Max	= 2147483647L
    } 	styleBackgroundRepeat;

typedef 
enum _styleBackgroundAttachment
    {	styleBackgroundAttachmentFixed	= 0,
	styleBackgroundAttachmentScroll	= 1,
	styleBackgroundAttachmentNotSet	= 2,
	styleBackgroundAttachment_Max	= 2147483647L
    } 	styleBackgroundAttachment;

typedef 
enum _styleVerticalAlign
    {	styleVerticalAlignAuto	= 0,
	styleVerticalAlignBaseline	= 1,
	styleVerticalAlignSub	= 2,
	styleVerticalAlignSuper	= 3,
	styleVerticalAlignTop	= 4,
	styleVerticalAlignTextTop	= 5,
	styleVerticalAlignMiddle	= 6,
	styleVerticalAlignBottom	= 7,
	styleVerticalAlignTextBottom	= 8,
	styleVerticalAlignInherit	= 9,
	styleVerticalAlignNotSet	= 10,
	styleVerticalAlign_Max	= 2147483647L
    } 	styleVerticalAlign;

typedef 
enum _styleFontWeight
    {	styleFontWeightNotSet	= 0,
	styleFontWeight100	= 1,
	styleFontWeight200	= 2,
	styleFontWeight300	= 3,
	styleFontWeight400	= 4,
	styleFontWeight500	= 5,
	styleFontWeight600	= 6,
	styleFontWeight700	= 7,
	styleFontWeight800	= 8,
	styleFontWeight900	= 9,
	styleFontWeightNormal	= 10,
	styleFontWeightBold	= 11,
	styleFontWeightBolder	= 12,
	styleFontWeightLighter	= 13,
	styleFontWeight_Max	= 2147483647L
    } 	styleFontWeight;

typedef 
enum _styleBackgroundPositionX
    {	styleBackgroundPositionXNotSet	= 0,
	styleBackgroundPositionXLeft	= 1,
	styleBackgroundPositionXCenter	= 2,
	styleBackgroundPositionXRight	= 3,
	styleBackgroundPositionX_Max	= 2147483647L
    } 	styleBackgroundPositionX;

typedef 
enum _styleBackgroundPositionY
    {	styleBackgroundPositionYNotSet	= 0,
	styleBackgroundPositionYTop	= 1,
	styleBackgroundPositionYCenter	= 2,
	styleBackgroundPositionYBottom	= 3,
	styleBackgroundPositionY_Max	= 2147483647L
    } 	styleBackgroundPositionY;

typedef 
enum _styleFontSize
    {	styleFontSizeXXSmall	= 0,
	styleFontSizeXSmall	= 1,
	styleFontSizeSmall	= 2,
	styleFontSizeMedium	= 3,
	styleFontSizeLarge	= 4,
	styleFontSizeXLarge	= 5,
	styleFontSizeXXLarge	= 6,
	styleFontSizeSmaller	= 7,
	styleFontSizeLarger	= 8,
	styleFontSize_Max	= 2147483647L
    } 	styleFontSize;

typedef 
enum _styleAuto
    {	styleAutoAuto	= 0,
	styleAuto_Max	= 2147483647L
    } 	styleAuto;

typedef 
enum _styleNormal
    {	styleNormalNormal	= 0,
	styleNormal_Max	= 2147483647L
    } 	styleNormal;

typedef 
enum _styleBorderWidth
    {	styleBorderWidthThin	= 0,
	styleBorderWidthMedium	= 1,
	styleBorderWidthThick	= 2,
	styleBorderWidth_Max	= 2147483647L
    } 	styleBorderWidth;

typedef 
enum _stylePosition
    {	stylePositionNotSet	= 0,
	stylePositionstatic	= 1,
	stylePositionrelative	= 2,
	stylePositionabsolute	= 3,
	stylePositionfixed	= 4,
	stylePosition_Max	= 2147483647L
    } 	stylePosition;

typedef 
enum _styleBorderStyle
    {	styleBorderStyleNotSet	= 0,
	styleBorderStyleDotted	= 1,
	styleBorderStyleDashed	= 2,
	styleBorderStyleSolid	= 3,
	styleBorderStyleDouble	= 4,
	styleBorderStyleGroove	= 5,
	styleBorderStyleRidge	= 6,
	styleBorderStyleInset	= 7,
	styleBorderStyleOutset	= 8,
	styleBorderStyleWindowInset	= 9,
	styleBorderStyleNone	= 10,
	styleBorderStyle_Max	= 2147483647L
    } 	styleBorderStyle;

typedef 
enum _styleStyleFloat
    {	styleStyleFloatNotSet	= 0,
	styleStyleFloatLeft	= 1,
	styleStyleFloatRight	= 2,
	styleStyleFloatNone	= 3,
	styleStyleFloat_Max	= 2147483647L
    } 	styleStyleFloat;

typedef 
enum _styleDisplay
    {	styleDisplayNotSet	= 0,
	styleDisplayBlock	= 1,
	styleDisplayInline	= 2,
	styleDisplayListItem	= 3,
	styleDisplayNone	= 4,
	styleDisplayTableHeaderGroup	= 5,
	styleDisplayTableFooterGroup	= 6,
	styleDisplayInlineBlock	= 7,
	styleDisplay_Max	= 2147483647L
    } 	styleDisplay;

typedef 
enum _styleVisibility
    {	styleVisibilityNotSet	= 0,
	styleVisibilityInherit	= 1,
	styleVisibilityVisible	= 2,
	styleVisibilityHidden	= 3,
	styleVisibility_Max	= 2147483647L
    } 	styleVisibility;

typedef 
enum _styleListStyleType
    {	styleListStyleTypeNotSet	= 0,
	styleListStyleTypeDisc	= 1,
	styleListStyleTypeCircle	= 2,
	styleListStyleTypeSquare	= 3,
	styleListStyleTypeDecimal	= 4,
	styleListStyleTypeLowerRoman	= 5,
	styleListStyleTypeUpperRoman	= 6,
	styleListStyleTypeLowerAlpha	= 7,
	styleListStyleTypeUpperAlpha	= 8,
	styleListStyleTypeNone	= 9,
	styleListStyleType_Max	= 2147483647L
    } 	styleListStyleType;

typedef 
enum _styleListStylePosition
    {	styleListStylePositionNotSet	= 0,
	styleListStylePositionInside	= 1,
	styleListStylePositionOutSide	= 2,
	styleListStylePosition_Max	= 2147483647L
    } 	styleListStylePosition;

typedef 
enum _styleWhiteSpace
    {	styleWhiteSpaceNotSet	= 0,
	styleWhiteSpaceNormal	= 1,
	styleWhiteSpacePre	= 2,
	styleWhiteSpaceNowrap	= 3,
	styleWhiteSpace_Max	= 2147483647L
    } 	styleWhiteSpace;

typedef 
enum _stylePageBreak
    {	stylePageBreakNotSet	= 0,
	stylePageBreakAuto	= 1,
	stylePageBreakAlways	= 2,
	stylePageBreakLeft	= 3,
	stylePageBreakRight	= 4,
	stylePageBreak_Max	= 2147483647L
    } 	stylePageBreak;

typedef 
enum _styleCursor
    {	styleCursorAuto	= 0,
	styleCursorCrosshair	= 1,
	styleCursorDefault	= 2,
	styleCursorHand	= 3,
	styleCursorMove	= 4,
	styleCursorE_resize	= 5,
	styleCursorNe_resize	= 6,
	styleCursorNw_resize	= 7,
	styleCursorN_resize	= 8,
	styleCursorSe_resize	= 9,
	styleCursorSw_resize	= 10,
	styleCursorS_resize	= 11,
	styleCursorW_resize	= 12,
	styleCursorText	= 13,
	styleCursorWait	= 14,
	styleCursorHelp	= 15,
	styleCursorPointer	= 16,
	styleCursorProgress	= 17,
	styleCursorNot_allowed	= 18,
	styleCursorNo_drop	= 19,
	styleCursorVertical_text	= 20,
	styleCursorall_scroll	= 21,
	styleCursorcol_resize	= 22,
	styleCursorrow_resize	= 23,
	styleCursorcustom	= 24,
	styleCursorNotSet	= 25,
	styleCursor_Max	= 2147483647L
    } 	styleCursor;

typedef 
enum _styleDir
    {	styleDirNotSet	= 0,
	styleDirLeftToRight	= 1,
	styleDirRightToLeft	= 2,
	styleDirInherit	= 3,
	styleDir_Max	= 2147483647L
    } 	styleDir;

typedef 
enum _styleBidi
    {	styleBidiNotSet	= 0,
	styleBidiNormal	= 1,
	styleBidiEmbed	= 2,
	styleBidiOverride	= 3,
	styleBidiInherit	= 4,
	styleBidi_Max	= 2147483647L
    } 	styleBidi;

typedef 
enum _styleImeMode
    {	styleImeModeAuto	= 0,
	styleImeModeActive	= 1,
	styleImeModeInactive	= 2,
	styleImeModeDisabled	= 3,
	styleImeModeNotSet	= 4,
	styleImeMode_Max	= 2147483647L
    } 	styleImeMode;

typedef 
enum _styleRubyAlign
    {	styleRubyAlignNotSet	= 0,
	styleRubyAlignAuto	= 1,
	styleRubyAlignLeft	= 2,
	styleRubyAlignCenter	= 3,
	styleRubyAlignRight	= 4,
	styleRubyAlignDistributeLetter	= 5,
	styleRubyAlignDistributeSpace	= 6,
	styleRubyAlignLineEdge	= 7,
	styleRubyAlign_Max	= 2147483647L
    } 	styleRubyAlign;

typedef 
enum _styleRubyPosition
    {	styleRubyPositionNotSet	= 0,
	styleRubyPositionAbove	= 1,
	styleRubyPositionInline	= 2,
	styleRubyPosition_Max	= 2147483647L
    } 	styleRubyPosition;

typedef 
enum _styleRubyOverhang
    {	styleRubyOverhangNotSet	= 0,
	styleRubyOverhangAuto	= 1,
	styleRubyOverhangWhitespace	= 2,
	styleRubyOverhangNone	= 3,
	styleRubyOverhang_Max	= 2147483647L
    } 	styleRubyOverhang;

typedef 
enum _styleLayoutGridChar
    {	styleLayoutGridCharNotSet	= 0,
	styleLayoutGridCharAuto	= 1,
	styleLayoutGridCharNone	= 2,
	styleLayoutGridChar_Max	= 2147483647L
    } 	styleLayoutGridChar;

typedef 
enum _styleLayoutGridLine
    {	styleLayoutGridLineNotSet	= 0,
	styleLayoutGridLineAuto	= 1,
	styleLayoutGridLineNone	= 2,
	styleLayoutGridLine_Max	= 2147483647L
    } 	styleLayoutGridLine;

typedef 
enum _styleLayoutGridMode
    {	styleLayoutGridModeNotSet	= 0,
	styleLayoutGridModeChar	= 1,
	styleLayoutGridModeLine	= 2,
	styleLayoutGridModeBoth	= 3,
	styleLayoutGridModeNone	= 4,
	styleLayoutGridMode_Max	= 2147483647L
    } 	styleLayoutGridMode;

typedef 
enum _styleLayoutGridType
    {	styleLayoutGridTypeNotSet	= 0,
	styleLayoutGridTypeLoose	= 1,
	styleLayoutGridTypeStrict	= 2,
	styleLayoutGridTypeFixed	= 3,
	styleLayoutGridType_Max	= 2147483647L
    } 	styleLayoutGridType;

typedef 
enum _styleLineBreak
    {	styleLineBreakNotSet	= 0,
	styleLineBreakNormal	= 1,
	styleLineBreakStrict	= 2,
	styleLineBreak_Max	= 2147483647L
    } 	styleLineBreak;

typedef 
enum _styleWordBreak
    {	styleWordBreakNotSet	= 0,
	styleWordBreakNormal	= 1,
	styleWordBreakBreakAll	= 2,
	styleWordBreakKeepAll	= 3,
	styleWordBreak_Max	= 2147483647L
    } 	styleWordBreak;

typedef 
enum _styleWordWrap
    {	styleWordWrapNotSet	= 0,
	styleWordWrapOff	= 1,
	styleWordWrapOn	= 2,
	styleWordWrap_Max	= 2147483647L
    } 	styleWordWrap;

typedef 
enum _styleTextJustify
    {	styleTextJustifyNotSet	= 0,
	styleTextJustifyInterWord	= 1,
	styleTextJustifyNewspaper	= 2,
	styleTextJustifyDistribute	= 3,
	styleTextJustifyDistributeAllLines	= 4,
	styleTextJustifyInterIdeograph	= 5,
	styleTextJustifyInterCluster	= 6,
	styleTextJustifyKashida	= 7,
	styleTextJustifyAuto	= 8,
	styleTextJustify_Max	= 2147483647L
    } 	styleTextJustify;

typedef 
enum _styleTextAlignLast
    {	styleTextAlignLastNotSet	= 0,
	styleTextAlignLastLeft	= 1,
	styleTextAlignLastCenter	= 2,
	styleTextAlignLastRight	= 3,
	styleTextAlignLastJustify	= 4,
	styleTextAlignLastAuto	= 5,
	styleTextAlignLast_Max	= 2147483647L
    } 	styleTextAlignLast;

typedef 
enum _styleTextJustifyTrim
    {	styleTextJustifyTrimNotSet	= 0,
	styleTextJustifyTrimNone	= 1,
	styleTextJustifyTrimPunctuation	= 2,
	styleTextJustifyTrimPunctAndKana	= 3,
	styleTextJustifyTrim_Max	= 2147483647L
    } 	styleTextJustifyTrim;

typedef 
enum _styleAccelerator
    {	styleAcceleratorFalse	= 0,
	styleAcceleratorTrue	= 1,
	styleAccelerator_Max	= 2147483647L
    } 	styleAccelerator;

typedef 
enum _styleLayoutFlow
    {	styleLayoutFlowHorizontal	= 0,
	styleLayoutFlowVerticalIdeographic	= 1,
	styleLayoutFlowNotSet	= 2,
	styleLayoutFlow_Max	= 2147483647L
    } 	styleLayoutFlow;

typedef 
enum _styleWritingMode
    {	styleWritingModeLrtb	= 0,
	styleWritingModeTbrl	= 1,
	styleWritingModeNotSet	= 2,
	styleWritingMode_Max	= 2147483647L
    } 	styleWritingMode;

typedef 
enum _styleBool
    {	styleBoolFalse	= 0,
	styleBoolTrue	= 1,
	styleBool_Max	= 2147483647L
    } 	styleBool;

typedef 
enum _styleTextUnderlinePosition
    {	styleTextUnderlinePositionBelow	= 0,
	styleTextUnderlinePositionAbove	= 1,
	styleTextUnderlinePositionAuto	= 2,
	styleTextUnderlinePositionNotSet	= 3,
	styleTextUnderlinePosition_Max	= 2147483647L
    } 	styleTextUnderlinePosition;

typedef 
enum _styleTextOverflow
    {	styleTextOverflowClip	= 0,
	styleTextOverflowEllipsis	= 1,
	styleTextOverflowNotSet	= 2,
	styleTextOverflow_Max	= 2147483647L
    } 	styleTextOverflow;

EXTERN_C const GUID CLSID_CStyle;
EXTERN_C const GUID CLSID_CRuleStyle;
typedef 
enum _styleTextLineThroughStyle
    {	styleTextLineThroughStyleUndefined	= 0,
	styleTextLineThroughStyleSingle	= 1,
	styleTextLineThroughStyleDouble	= 2,
	styleTextLineThroughStyle_Max	= 2147483647L
    } 	styleTextLineThroughStyle;

typedef 
enum _styleTextUnderlineStyle
    {	styleTextUnderlineStyleUndefined	= 0,
	styleTextUnderlineStyleSingle	= 1,
	styleTextUnderlineStyleDouble	= 2,
	styleTextUnderlineStyleWords	= 3,
	styleTextUnderlineStyleDotted	= 4,
	styleTextUnderlineStyleThick	= 5,
	styleTextUnderlineStyleDash	= 6,
	styleTextUnderlineStyleDotDash	= 7,
	styleTextUnderlineStyleDotDotDash	= 8,
	styleTextUnderlineStyleWave	= 9,
	styleTextUnderlineStyleSingleAccounting	= 10,
	styleTextUnderlineStyleDoubleAccounting	= 11,
	styleTextUnderlineStyleThickDash	= 12,
	styleTextUnderlineStyle_Max	= 2147483647L
    } 	styleTextUnderlineStyle;

typedef 
enum _styleTextEffect
    {	styleTextEffectNone	= 0,
	styleTextEffectEmboss	= 1,
	styleTextEffectEngrave	= 2,
	styleTextEffectOutline	= 3,
	styleTextEffect_Max	= 2147483647L
    } 	styleTextEffect;

typedef 
enum _styleDefaultTextSelection
    {	styleDefaultTextSelectionFalse	= 0,
	styleDefaultTextSelectionTrue	= 1,
	styleDefaultTextSelection_Max	= 2147483647L
    } 	styleDefaultTextSelection;

typedef 
enum _styleTextDecoration
    {	styleTextDecorationNone	= 0,
	styleTextDecorationUnderline	= 1,
	styleTextDecorationOverline	= 2,
	styleTextDecorationLineThrough	= 3,
	styleTextDecorationBlink	= 4,
	styleTextDecoration_Max	= 2147483647L
    } 	styleTextDecoration;

EXTERN_C const GUID CLSID_CRenderStyle;
typedef 
enum _textDecoration
    {	textDecorationNone	= 0,
	textDecorationUnderline	= 1,
	textDecorationOverline	= 2,
	textDecorationLineThrough	= 3,
	textDecorationBlink	= 4,
	textDecoration_Max	= 2147483647L
    } 	textDecoration;

EXTERN_C const GUID CLSID_CCurrentStyle;

EXTERN_C const GUID CLSID_CAttribute;
EXTERN_C const GUID CLSID_CDOMTextNode;
EXTERN_C const GUID CLSID_CDOMImplementation;
EXTERN_C const GUID CLSID_CAttrCollectionator;
EXTERN_C const GUID CLSID_CDOMChildrenCollection;
typedef 
enum _htmlListType
    {	htmlListTypeNotSet	= 0,
	htmlListTypeLargeAlpha	= 1,
	htmlListTypeSmallAlpha	= 2,
	htmlListTypeLargeRoman	= 3,
	htmlListTypeSmallRoman	= 4,
	htmlListTypeNumbers	= 5,
	htmlListTypeDisc	= 6,
	htmlListTypeCircle	= 7,
	htmlListTypeSquare	= 8,
	htmlListType_Max	= 2147483647L
    } 	htmlListType;

typedef 
enum _htmlMethod
    {	htmlMethodNotSet	= 0,
	htmlMethodGet	= 1,
	htmlMethodPost	= 2,
	htmlMethod_Max	= 2147483647L
    } 	htmlMethod;

typedef 
enum _htmlWrap
    {	htmlWrapOff	= 1,
	htmlWrapSoft	= 2,
	htmlWrapHard	= 3,
	htmlWrap_Max	= 2147483647L
    } 	htmlWrap;

typedef 
enum _htmlDir
    {	htmlDirNotSet	= 0,
	htmlDirLeftToRight	= 1,
	htmlDirRightToLeft	= 2,
	htmlDir_Max	= 2147483647L
    } 	htmlDir;

typedef 
enum _htmlEditable
    {	htmlEditableInherit	= 0,
	htmlEditableTrue	= 1,
	htmlEditableFalse	= 2,
	htmlEditable_Max	= 2147483647L
    } 	htmlEditable;

typedef 
enum _htmlInput
    {	htmlInputNotSet	= 0,
	htmlInputButton	= 1,
	htmlInputCheckbox	= 2,
	htmlInputFile	= 3,
	htmlInputHidden	= 4,
	htmlInputImage	= 5,
	htmlInputPassword	= 6,
	htmlInputRadio	= 7,
	htmlInputReset	= 8,
	htmlInputSelectOne	= 9,
	htmlInputSelectMultiple	= 10,
	htmlInputSubmit	= 11,
	htmlInputText	= 12,
	htmlInputTextarea	= 13,
	htmlInputRichtext	= 14,
	htmlInput_Max	= 2147483647L
    } 	htmlInput;

typedef 
enum _htmlEncoding
    {	htmlEncodingURL	= 0,
	htmlEncodingMultipart	= 1,
	htmlEncodingText	= 2,
	htmlEncoding_Max	= 2147483647L
    } 	htmlEncoding;

typedef 
enum _htmlAdjacency
    {	htmlAdjacencyBeforeBegin	= 1,
	htmlAdjacencyAfterBegin	= 2,
	htmlAdjacencyBeforeEnd	= 3,
	htmlAdjacencyAfterEnd	= 4,
	htmlAdjacency_Max	= 2147483647L
    } 	htmlAdjacency;

typedef 
enum _htmlTabIndex
    {	htmlTabIndexNotSet	= -32768,
	htmlTabIndex_Max	= 2147483647L
    } 	htmlTabIndex;

typedef 
enum _htmlComponent
    {	htmlComponentClient	= 0,
	htmlComponentSbLeft	= 1,
	htmlComponentSbPageLeft	= 2,
	htmlComponentSbHThumb	= 3,
	htmlComponentSbPageRight	= 4,
	htmlComponentSbRight	= 5,
	htmlComponentSbUp	= 6,
	htmlComponentSbPageUp	= 7,
	htmlComponentSbVThumb	= 8,
	htmlComponentSbPageDown	= 9,
	htmlComponentSbDown	= 10,
	htmlComponentSbLeft2	= 11,
	htmlComponentSbPageLeft2	= 12,
	htmlComponentSbRight2	= 13,
	htmlComponentSbPageRight2	= 14,
	htmlComponentSbUp2	= 15,
	htmlComponentSbPageUp2	= 16,
	htmlComponentSbDown2	= 17,
	htmlComponentSbPageDown2	= 18,
	htmlComponentSbTop	= 19,
	htmlComponentSbBottom	= 20,
	htmlComponentOutside	= 21,
	htmlComponentGHTopLeft	= 22,
	htmlComponentGHLeft	= 23,
	htmlComponentGHTop	= 24,
	htmlComponentGHBottomLeft	= 25,
	htmlComponentGHTopRight	= 26,
	htmlComponentGHBottom	= 27,
	htmlComponentGHRight	= 28,
	htmlComponentGHBottomRight	= 29,
	htmlComponent_Max	= 2147483647L
    } 	htmlComponent;

typedef 
enum _htmlApplyLocation
    {	htmlApplyLocationInside	= 0,
	htmlApplyLocationOutside	= 1,
	htmlApplyLocation_Max	= 2147483647L
    } 	htmlApplyLocation;

typedef 
enum _htmlGlyphMode
    {	htmlGlyphModeNone	= 0,
	htmlGlyphModeBegin	= 1,
	htmlGlyphModeEnd	= 2,
	htmlGlyphModeBoth	= 3,
	htmlGlyphMode_Max	= 2147483647L
    } 	htmlGlyphMode;





EXTERN_C const GUID CLSID_CDefaults;

EXTERN_C const GUID CLSID_CHtmlComponentDD;
EXTERN_C const GUID CLSID_CHtmlComponentProperty;
EXTERN_C const GUID CLSID_CHtmlComponentMethod;
EXTERN_C const GUID CLSID_CHtmlComponentEvent;
EXTERN_C const GUID CLSID_CHtmlComponentAttach;
EXTERN_C const GUID CLSID_CHtmlComponentDesc;
EXTERN_C const GUID CLSID_CPeerUrnCollection;
EXTERN_C const GUID CLSID_CGenericElement;
EXTERN_C const GUID CLSID_CStyleSheetRule;
EXTERN_C const GUID CLSID_CStyleSheetRuleArray;
EXTERN_C const GUID CLSID_CStyleSheetPage;
EXTERN_C const GUID CLSID_CStyleSheetPageArray;

EXTERN_C const GUID CLSID_CStyleSheet;
EXTERN_C const GUID CLSID_CStyleSheetArray;
EXTERN_C const GUID CLSID_CLinkElement;
typedef 
enum _htmlUnit
    {	htmlUnitCharacter	= 1,
	htmlUnitWord	= 2,
	htmlUnitSentence	= 3,
	htmlUnitTextEdit	= 6,
	htmlUnit_Max	= 2147483647L
    } 	htmlUnit;

typedef 
enum _htmlEndPoints
    {	htmlEndPointsStartToStart	= 1,
	htmlEndPointsStartToEnd	= 2,
	htmlEndPointsEndToStart	= 3,
	htmlEndPointsEndToEnd	= 4,
	htmlEndPoints_Max	= 2147483647L
    } 	htmlEndPoints;

typedef 
enum _htmlDirection
    {	htmlDirectionForward	= 99999,
	htmlDirectionBackward	= -99999,
	htmlDirection_Max	= 2147483647L
    } 	htmlDirection;

EXTERN_C const GUID CLSID_CFormElement;
typedef 
enum _htmlStart
    {	htmlStartfileopen	= 0,
	htmlStartmouseover	= 1,
	htmlStart_Max	= 2147483647L
    } 	htmlStart;

EXTERN_C const GUID CLSID_CTextElement;
EXTERN_C const GUID CLSID_CImgElement;
EXTERN_C const GUID CLSID_CImageElementFactory;
typedef 
enum _bodyScroll
    {	bodyScrollyes	= 1,
	bodyScrollno	= 2,
	bodyScrollauto	= 4,
	bodyScrolldefault	= 3,
	bodyScroll_Max	= 2147483647L
    } 	bodyScroll;

EXTERN_C const GUID CLSID_CBodyElement;
EXTERN_C const GUID CLSID_CFontElement;
EXTERN_C const GUID CLSID_CAnchorElement;
EXTERN_C const GUID CLSID_CLabelElement;
EXTERN_C const GUID CLSID_CListElement;
EXTERN_C const GUID CLSID_CUListElement;
EXTERN_C const GUID CLSID_COListElement;
EXTERN_C const GUID CLSID_CLIElement;
EXTERN_C const GUID CLSID_CBlockElement;
EXTERN_C const GUID CLSID_CDivElement;
EXTERN_C const GUID CLSID_CDDElement;
EXTERN_C const GUID CLSID_CDTElement;
EXTERN_C const GUID CLSID_CBRElement;
EXTERN_C const GUID CLSID_CDListElement;
EXTERN_C const GUID CLSID_CHRElement;
EXTERN_C const GUID CLSID_CParaElement;
EXTERN_C const GUID CLSID_CElementCollection;
EXTERN_C const GUID CLSID_CHeaderElement;
typedef 
enum _htmlSelectType
    {	htmlSelectTypeSelectOne	= 1,
	htmlSelectTypeSelectMultiple	= 2,
	htmlSelectType_Max	= 2147483647L
    } 	htmlSelectType;

EXTERN_C const GUID CLSID_CSelectElement;
typedef 
enum _htmlSelection
    {	htmlSelectionNone	= 0,
	htmlSelectionText	= 1,
	htmlSelectionControl	= 2,
	htmlSelectionTable	= 3,
	htmlSelection_Max	= 2147483647L
    } 	htmlSelection;

EXTERN_C const GUID CLSID_COptionElement;
EXTERN_C const GUID CLSID_COptionElementFactory;
EXTERN_C const GUID CLSID_CInput;
EXTERN_C const GUID CLSID_CTextArea;
EXTERN_C const GUID CLSID_CRichtext;
EXTERN_C const GUID CLSID_CButton;
typedef 
enum _htmlMarqueeBehavior
    {	htmlMarqueeBehaviorscroll	= 1,
	htmlMarqueeBehaviorslide	= 2,
	htmlMarqueeBehavioralternate	= 3,
	htmlMarqueeBehavior_Max	= 2147483647L
    } 	htmlMarqueeBehavior;

typedef 
enum _htmlMarqueeDirection
    {	htmlMarqueeDirectionleft	= 1,
	htmlMarqueeDirectionright	= 3,
	htmlMarqueeDirectionup	= 5,
	htmlMarqueeDirectiondown	= 7,
	htmlMarqueeDirection_Max	= 2147483647L
    } 	htmlMarqueeDirection;

EXTERN_C const GUID CLSID_CMarquee;
EXTERN_C const GUID CLSID_CHtmlElement;
EXTERN_C const GUID CLSID_CHeadElement;
EXTERN_C const GUID CLSID_CTitleElement;
EXTERN_C const GUID CLSID_CMetaElement;
EXTERN_C const GUID CLSID_CBaseElement;
EXTERN_C const GUID CLSID_CIsIndexElement;
EXTERN_C const GUID CLSID_CNextIdElement;
EXTERN_C const GUID CLSID_CBaseFontElement;
EXTERN_C const GUID CLSID_CUnknownElement;
EXTERN_C const GUID CLSID_COmHistory;
EXTERN_C const GUID CLSID_CMimeTypes;
EXTERN_C const GUID CLSID_CPlugins;
EXTERN_C const GUID CLSID_COpsProfile;
EXTERN_C const GUID CLSID_COmNavigator;
EXTERN_C const GUID CLSID_COmLocation;
typedef 
enum _htmlPersistState
    {	htmlPersistStateNormal	= 0,
	htmlPersistStateFavorite	= 1,
	htmlPersistStateHistory	= 2,
	htmlPersistStateSnapshot	= 3,
	htmlPersistStateUserData	= 4,
	htmlPersistState_Max	= 2147483647L
    } 	htmlPersistState;

typedef 
enum _htmlDropEffect
    {	htmlDropEffectCopy	= 0,
	htmlDropEffectLink	= 1,
	htmlDropEffectMove	= 2,
	htmlDropEffectNone	= 3,
	htmlDropEffect_Max	= 2147483647L
    } 	htmlDropEffect;

typedef 
enum _htmlEffectAllowed
    {	htmlEffectAllowedCopy	= 0,
	htmlEffectAllowedLink	= 1,
	htmlEffectAllowedMove	= 2,
	htmlEffectAllowedCopyLink	= 3,
	htmlEffectAllowedCopyMove	= 4,
	htmlEffectAllowedLinkMove	= 5,
	htmlEffectAllowedAll	= 6,
	htmlEffectAllowedNone	= 7,
	htmlEffectAllowedUninitialized	= 8,
	htmlEffectAllowed_Max	= 2147483647L
    } 	htmlEffectAllowed;

EXTERN_C const GUID CLSID_CEventObj;






EXTERN_C const GUID CLSID_CFramesCollection;
EXTERN_C const GUID CLSID_CScreen;
EXTERN_C const GUID CLSID_CWindow;
EXTERN_C const GUID CLSID_COmWindowProxy;
typedef 
enum _htmlCompatMode
    {	htmlCompatModeBackCompat	= 0,
	htmlCompatModeCSS1Compat	= 1,
	htmlCompatMode_Max	= 2147483647L
    } 	htmlCompatMode;

EXTERN_C const GUID CLSID_CDocument;
EXTERN_C const GUID CLSID_CScriptlet;
typedef 
enum _BoolValue
    {	True	= 1,
	False	= 0,
	BoolValue_Max	= 2147483647L
    } 	BoolValue;

EXTERN_C const GUID CLSID_CPluginSite;
EXTERN_C const GUID CLSID_CAreasCollection;
EXTERN_C const GUID CLSID_CMapElement;
EXTERN_C const GUID CLSID_CAreaElement;
typedef 
enum _htmlCaptionAlign
    {	htmlCaptionAlignNotSet	= 0,
	htmlCaptionAlignLeft	= 1,
	htmlCaptionAlignCenter	= 2,
	htmlCaptionAlignRight	= 3,
	htmlCaptionAlignJustify	= 4,
	htmlCaptionAlignTop	= 5,
	htmlCaptionAlignBottom	= 6,
	htmlCaptionAlign_Max	= 2147483647L
    } 	htmlCaptionAlign;

typedef 
enum _htmlCaptionVAlign
    {	htmlCaptionVAlignNotSet	= 0,
	htmlCaptionVAlignTop	= 1,
	htmlCaptionVAlignBottom	= 2,
	htmlCaptionVAlign_Max	= 2147483647L
    } 	htmlCaptionVAlign;

EXTERN_C const GUID CLSID_CTableCaption;
EXTERN_C const GUID CLSID_CCommentElement;
EXTERN_C const GUID CLSID_CPhraseElement;
EXTERN_C const GUID CLSID_CSpanElement;
typedef 
enum _htmlFrame
    {	htmlFrameNotSet	= 0,
	htmlFramevoid	= 1,
	htmlFrameabove	= 2,
	htmlFramebelow	= 3,
	htmlFramehsides	= 4,
	htmlFramelhs	= 5,
	htmlFramerhs	= 6,
	htmlFramevsides	= 7,
	htmlFramebox	= 8,
	htmlFrameborder	= 9,
	htmlFrame_Max	= 2147483647L
    } 	htmlFrame;

typedef 
enum _htmlRules
    {	htmlRulesNotSet	= 0,
	htmlRulesnone	= 1,
	htmlRulesgroups	= 2,
	htmlRulesrows	= 3,
	htmlRulescols	= 4,
	htmlRulesall	= 5,
	htmlRules_Max	= 2147483647L
    } 	htmlRules;

typedef 
enum _htmlCellAlign
    {	htmlCellAlignNotSet	= 0,
	htmlCellAlignLeft	= 1,
	htmlCellAlignCenter	= 2,
	htmlCellAlignRight	= 3,
	htmlCellAlignMiddle	= htmlCellAlignCenter,
	htmlCellAlign_Max	= 2147483647L
    } 	htmlCellAlign;

typedef 
enum _htmlCellVAlign
    {	htmlCellVAlignNotSet	= 0,
	htmlCellVAlignTop	= 1,
	htmlCellVAlignMiddle	= 2,
	htmlCellVAlignBottom	= 3,
	htmlCellVAlignBaseline	= 4,
	htmlCellVAlignCenter	= htmlCellVAlignMiddle,
	htmlCellVAlign_Max	= 2147483647L
    } 	htmlCellVAlign;


EXTERN_C const GUID CLSID_CTable;
EXTERN_C const GUID CLSID_CTableCol;
EXTERN_C const GUID CLSID_CTableSection;
EXTERN_C const GUID CLSID_CTableRow;
EXTERN_C const GUID CLSID_CTableCell;
EXTERN_C const GUID CLSID_CScriptElement;
EXTERN_C const GUID CLSID_CNoShowElement;
EXTERN_C const GUID CLSID_CObjectElement;
EXTERN_C const GUID CLSID_CParamElement;
typedef 
enum _frameScrolling
    {	frameScrollingyes	= 1,
	frameScrollingno	= 2,
	frameScrollingauto	= 4,
	frameScrolling_Max	= 2147483647L
    } 	frameScrolling;

EXTERN_C const GUID CLSID_CFrameSite;
EXTERN_C const GUID CLSID_CFrameElement;
EXTERN_C const GUID CLSID_CIFrameElement;
EXTERN_C const GUID CLSID_C1DElement;
EXTERN_C const GUID CLSID_CFieldSetElement;
EXTERN_C const GUID CLSID_CLegendElement;
EXTERN_C const GUID CLSID_CSpanSite;
EXTERN_C const GUID CLSID_CFrameSetSite;
EXTERN_C const GUID CLSID_CBGsound;
EXTERN_C const GUID CLSID_CStyleElement;
EXTERN_C const GUID CLSID_CFontFace;
typedef 
enum _ELEMENT_CORNER
    {	ELEMENT_CORNER_NONE	= 0,
	ELEMENT_CORNER_TOP	= 1,
	ELEMENT_CORNER_LEFT	= 2,
	ELEMENT_CORNER_BOTTOM	= 3,
	ELEMENT_CORNER_RIGHT	= 4,
	ELEMENT_CORNER_TOPLEFT	= 5,
	ELEMENT_CORNER_TOPRIGHT	= 6,
	ELEMENT_CORNER_BOTTOMLEFT	= 7,
	ELEMENT_CORNER_BOTTOMRIGHT	= 8,
	ELEMENT_CORNER_Max	= 2147483647L
    } 	ELEMENT_CORNER;

typedef 
enum _SECUREURLHOSTVALIDATE_FLAGS
    {	SUHV_PROMPTBEFORENO	= 0x1,
	SUHV_SILENTYES	= 0x2,
	SUHV_UNSECURESOURCE	= 0x4,
	SECUREURLHOSTVALIDATE_FLAGS_Max	= 2147483647L
    } 	SECUREURLHOSTVALIDATE_FLAGS;

typedef 
enum _POINTER_GRAVITY
    {	POINTER_GRAVITY_Left	= 0,
	POINTER_GRAVITY_Right	= 1,
	POINTER_GRAVITY_Max	= 2147483647L
    } 	POINTER_GRAVITY;

typedef 
enum _ELEMENT_ADJACENCY
    {	ELEM_ADJ_BeforeBegin	= 0,
	ELEM_ADJ_AfterBegin	= 1,
	ELEM_ADJ_BeforeEnd	= 2,
	ELEM_ADJ_AfterEnd	= 3,
	ELEMENT_ADJACENCY_Max	= 2147483647L
    } 	ELEMENT_ADJACENCY;

typedef 
enum _MARKUP_CONTEXT_TYPE
    {	CONTEXT_TYPE_None	= 0,
	CONTEXT_TYPE_Text	= 1,
	CONTEXT_TYPE_EnterScope	= 2,
	CONTEXT_TYPE_ExitScope	= 3,
	CONTEXT_TYPE_NoScope	= 4,
	MARKUP_CONTEXT_TYPE_Max	= 2147483647L
    } 	MARKUP_CONTEXT_TYPE;

typedef 
enum _FINDTEXT_FLAGS
    {	FINDTEXT_BACKWARDS	= 0x1,
	FINDTEXT_WHOLEWORD	= 0x2,
	FINDTEXT_MATCHCASE	= 0x4,
	FINDTEXT_RAW	= 0x20000,
	FINDTEXT_MATCHDIAC	= 0x20000000,
	FINDTEXT_MATCHKASHIDA	= 0x40000000,
	FINDTEXT_MATCHALEFHAMZA	= 0x80000000,
	FINDTEXT_FLAGS_Max	= 2147483647L
    } 	FINDTEXT_FLAGS;

typedef 
enum _MOVEUNIT_ACTION
    {	MOVEUNIT_PREVCHAR	= 0,
	MOVEUNIT_NEXTCHAR	= 1,
	MOVEUNIT_PREVCLUSTERBEGIN	= 2,
	MOVEUNIT_NEXTCLUSTERBEGIN	= 3,
	MOVEUNIT_PREVCLUSTEREND	= 4,
	MOVEUNIT_NEXTCLUSTEREND	= 5,
	MOVEUNIT_PREVWORDBEGIN	= 6,
	MOVEUNIT_NEXTWORDBEGIN	= 7,
	MOVEUNIT_PREVWORDEND	= 8,
	MOVEUNIT_NEXTWORDEND	= 9,
	MOVEUNIT_PREVPROOFWORD	= 10,
	MOVEUNIT_NEXTPROOFWORD	= 11,
	MOVEUNIT_NEXTURLBEGIN	= 12,
	MOVEUNIT_PREVURLBEGIN	= 13,
	MOVEUNIT_NEXTURLEND	= 14,
	MOVEUNIT_PREVURLEND	= 15,
	MOVEUNIT_PREVSENTENCE	= 16,
	MOVEUNIT_NEXTSENTENCE	= 17,
	MOVEUNIT_PREVBLOCK	= 18,
	MOVEUNIT_NEXTBLOCK	= 19,
	MOVEUNIT_ACTION_Max	= 2147483647L
    } 	MOVEUNIT_ACTION;

typedef 
enum _PARSE_FLAGS
    {	PARSE_ABSOLUTIFYIE40URLS	= 0x1,
	PARSE_FLAGS_Max	= 2147483647L
    } 	PARSE_FLAGS;

typedef 
enum _ELEMENT_TAG_ID
    {	TAGID_NULL	= 0,
	TAGID_UNKNOWN	= 1,
	TAGID_A	= 2,
	TAGID_ACRONYM	= 3,
	TAGID_ADDRESS	= 4,
	TAGID_APPLET	= 5,
	TAGID_AREA	= 6,
	TAGID_B	= 7,
	TAGID_BASE	= 8,
	TAGID_BASEFONT	= 9,
	TAGID_BDO	= 10,
	TAGID_BGSOUND	= 11,
	TAGID_BIG	= 12,
	TAGID_BLINK	= 13,
	TAGID_BLOCKQUOTE	= 14,
	TAGID_BODY	= 15,
	TAGID_BR	= 16,
	TAGID_BUTTON	= 17,
	TAGID_CAPTION	= 18,
	TAGID_CENTER	= 19,
	TAGID_CITE	= 20,
	TAGID_CODE	= 21,
	TAGID_COL	= 22,
	TAGID_COLGROUP	= 23,
	TAGID_COMMENT	= 24,
	TAGID_COMMENT_RAW	= 25,
	TAGID_DD	= 26,
	TAGID_DEL	= 27,
	TAGID_DFN	= 28,
	TAGID_DIR	= 29,
	TAGID_DIV	= 30,
	TAGID_DL	= 31,
	TAGID_DT	= 32,
	TAGID_EM	= 33,
	TAGID_EMBED	= 34,
	TAGID_FIELDSET	= 35,
	TAGID_FONT	= 36,
	TAGID_FORM	= 37,
	TAGID_FRAME	= 38,
	TAGID_FRAMESET	= 39,
	TAGID_GENERIC	= 40,
	TAGID_H1	= 41,
	TAGID_H2	= 42,
	TAGID_H3	= 43,
	TAGID_H4	= 44,
	TAGID_H5	= 45,
	TAGID_H6	= 46,
	TAGID_HEAD	= 47,
	TAGID_HR	= 48,
	TAGID_HTML	= 49,
	TAGID_I	= 50,
	TAGID_IFRAME	= 51,
	TAGID_IMG	= 52,
	TAGID_INPUT	= 53,
	TAGID_INS	= 54,
	TAGID_KBD	= 55,
	TAGID_LABEL	= 56,
	TAGID_LEGEND	= 57,
	TAGID_LI	= 58,
	TAGID_LINK	= 59,
	TAGID_LISTING	= 60,
	TAGID_MAP	= 61,
	TAGID_MARQUEE	= 62,
	TAGID_MENU	= 63,
	TAGID_META	= 64,
	TAGID_NEXTID	= 65,
	TAGID_NOBR	= 66,
	TAGID_NOEMBED	= 67,
	TAGID_NOFRAMES	= 68,
	TAGID_NOSCRIPT	= 69,
	TAGID_OBJECT	= 70,
	TAGID_OL	= 71,
	TAGID_OPTION	= 72,
	TAGID_P	= 73,
	TAGID_PARAM	= 74,
	TAGID_PLAINTEXT	= 75,
	TAGID_PRE	= 76,
	TAGID_Q	= 77,
	TAGID_RP	= 78,
	TAGID_RT	= 79,
	TAGID_RUBY	= 80,
	TAGID_S	= 81,
	TAGID_SAMP	= 82,
	TAGID_SCRIPT	= 83,
	TAGID_SELECT	= 84,
	TAGID_SMALL	= 85,
	TAGID_SPAN	= 86,
	TAGID_STRIKE	= 87,
	TAGID_STRONG	= 88,
	TAGID_STYLE	= 89,
	TAGID_SUB	= 90,
	TAGID_SUP	= 91,
	TAGID_TABLE	= 92,
	TAGID_TBODY	= 93,
	TAGID_TC	= 94,
	TAGID_TD	= 95,
	TAGID_TEXTAREA	= 96,
	TAGID_TFOOT	= 97,
	TAGID_TH	= 98,
	TAGID_THEAD	= 99,
	TAGID_TITLE	= 100,
	TAGID_TR	= 101,
	TAGID_TT	= 102,
	TAGID_U	= 103,
	TAGID_UL	= 104,
	TAGID_VAR	= 105,
	TAGID_WBR	= 106,
	TAGID_XMP	= 107,
	TAGID_ROOT	= 108,
	TAGID_OPTGROUP	= 109,
	TAGID_COUNT	= 110,
	TAGID_LAST_PREDEFINED	= 10000,
	ELEMENT_TAG_ID_Max	= 2147483647L
    } 	ELEMENT_TAG_ID;

typedef 
enum _SELECTION_TYPE
    {	SELECTION_TYPE_None	= 0,
	SELECTION_TYPE_Caret	= 1,
	SELECTION_TYPE_Text	= 2,
	SELECTION_TYPE_Control	= 3,
	SELECTION_TYPE_Max	= 2147483647L
    } 	SELECTION_TYPE;

typedef 
enum _SAVE_SEGMENTS_FLAGS
    {	SAVE_SEGMENTS_NoIE4SelectionCompat	= 0x1,
	SAVE_SEGMENTS_FLAGS_Max	= 2147483647L
    } 	SAVE_SEGMENTS_FLAGS;

typedef 
enum _CARET_DIRECTION
    {	CARET_DIRECTION_INDETERMINATE	= 0,
	CARET_DIRECTION_SAME	= 1,
	CARET_DIRECTION_BACKWARD	= 2,
	CARET_DIRECTION_FORWARD	= 3,
	CARET_DIRECTION_Max	= 2147483647L
    } 	CARET_DIRECTION;

typedef 
enum _LINE_DIRECTION
    {	LINE_DIRECTION_RightToLeft	= 1,
	LINE_DIRECTION_LeftToRight	= 2,
	LINE_DIRECTION_Max	= 2147483647L
    } 	LINE_DIRECTION;

typedef 
enum _HT_OPTIONS
    {	HT_OPT_AllowAfterEOL	= 0x1,
	HT_OPTIONS_Max	= 2147483647L
    } 	HT_OPTIONS;

typedef 
enum _HT_RESULTS
    {	HT_RESULTS_Glyph	= 0x1,
	HT_RESULTS_Max	= 2147483647L
    } 	HT_RESULTS;

typedef 
enum _DISPLAY_MOVEUNIT
    {	DISPLAY_MOVEUNIT_PreviousLine	= 1,
	DISPLAY_MOVEUNIT_NextLine	= 2,
	DISPLAY_MOVEUNIT_CurrentLineStart	= 3,
	DISPLAY_MOVEUNIT_CurrentLineEnd	= 4,
	DISPLAY_MOVEUNIT_TopOfWindow	= 5,
	DISPLAY_MOVEUNIT_BottomOfWindow	= 6,
	DISPLAY_MOVEUNIT_Max	= 2147483647L
    } 	DISPLAY_MOVEUNIT;

typedef 
enum _DISPLAY_GRAVITY
    {	DISPLAY_GRAVITY_PreviousLine	= 1,
	DISPLAY_GRAVITY_NextLine	= 2,
	DISPLAY_GRAVITY_Max	= 2147483647L
    } 	DISPLAY_GRAVITY;

typedef 
enum _DISPLAY_BREAK
    {	DISPLAY_BREAK_None	= 0,
	DISPLAY_BREAK_Block	= 0x1,
	DISPLAY_BREAK_Break	= 0x2,
	DISPLAY_BREAK_Max	= 2147483647L
    } 	DISPLAY_BREAK;

typedef 
enum _COORD_SYSTEM
    {	COORD_SYSTEM_GLOBAL	= 0,
	COORD_SYSTEM_PARENT	= 1,
	COORD_SYSTEM_CONTAINER	= 2,
	COORD_SYSTEM_CONTENT	= 3,
	COORD_SYSTEM_FRAME	= 4,
	COORD_SYSTEM_Max	= 2147483647L
    } 	COORD_SYSTEM;























EXTERN_C const GUID CLSID_HtmlDlgSafeHelper;
EXTERN_C const GUID CLSID_BlockFormats;
EXTERN_C const GUID CLSID_FontNames;
EXTERN_C const GUID CLSID_CHTMLNamespace;
EXTERN_C const GUID CLSID_CHTMLNamespaceCollection;
typedef 
enum _HTML_PAINTER
    {	HTMLPAINTER_OPAQUE	= 0x1,
	HTMLPAINTER_TRANSPARENT	= 0x2,
	HTMLPAINTER_ALPHA	= 0x4,
	HTMLPAINTER_COMPLEX	= 0x8,
	HTMLPAINTER_OVERLAY	= 0x10,
	HTMLPAINTER_HITTEST	= 0x20,
	HTMLPAINTER_SURFACE	= 0x100,
	HTMLPAINTER_3DSURFACE	= 0x200,
	HTMLPAINTER_NOBAND	= 0x400,
	HTMLPAINTER_NODC	= 0x1000,
	HTMLPAINTER_NOPHYSICALCLIP	= 0x2000,
	HTMLPAINTER_NOSAVEDC	= 0x4000,
	HTMLPAINTER_SUPPORTS_XFORM	= 0x8000,
	HTMLPAINTER_EXPAND	= 0x10000,
	HTMLPAINTER_NOSCROLLBITS	= 0x20000,
	HTML_PAINTER_Max	= 2147483647L
    } 	HTML_PAINTER;

typedef 
enum _HTML_PAINT_ZORDER
    {	HTMLPAINT_ZORDER_NONE	= 0,
	HTMLPAINT_ZORDER_REPLACE_ALL	= 1,
	HTMLPAINT_ZORDER_REPLACE_CONTENT	= 2,
	HTMLPAINT_ZORDER_REPLACE_BACKGROUND	= 3,
	HTMLPAINT_ZORDER_BELOW_CONTENT	= 4,
	HTMLPAINT_ZORDER_BELOW_FLOW	= 5,
	HTMLPAINT_ZORDER_ABOVE_FLOW	= 6,
	HTMLPAINT_ZORDER_ABOVE_CONTENT	= 7,
	HTMLPAINT_ZORDER_WINDOW_TOP	= 8,
	HTML_PAINT_ZORDER_Max	= 2147483647L
    } 	HTML_PAINT_ZORDER;

typedef 
enum _HTML_PAINT_DRAW_FLAGS
    {	HTMLPAINT_DRAW_UPDATEREGION	= 0x1,
	HTMLPAINT_DRAW_USE_XFORM	= 0x2,
	HTML_PAINT_DRAW_FLAGS_Max	= 2147483647L
    } 	HTML_PAINT_DRAW_FLAGS;

typedef 
enum _HTML_PAINT_EVENT_FLAGS
    {	HTMLPAINT_EVENT_TARGET	= 0x1,
	HTMLPAINT_EVENT_SETCURSOR	= 0x2,
	HTML_PAINT_EVENT_FLAGS_Max	= 2147483647L
    } 	HTML_PAINT_EVENT_FLAGS;

typedef 
enum _HTML_PAINT_DRAW_INFO_FLAGS
    {	HTMLPAINT_DRAWINFO_VIEWPORT	= 0x1,
	HTMLPAINT_DRAWINFO_UPDATEREGION	= 0x2,
	HTMLPAINT_DRAWINFO_XFORM	= 0x4,
	HTML_PAINT_DRAW_INFO_FLAGS_Max	= 2147483647L
    } 	HTML_PAINT_DRAW_INFO_FLAGS;

typedef struct _HTML_PAINTER_INFO
    {
    LONG lFlags;
    LONG lZOrder;
    IID iidDrawObject;
    RECT rcExpand;
    } 	HTML_PAINTER_INFO;

typedef struct _HTML_PAINT_XFORM
    {
    FLOAT eM11;
    FLOAT eM12;
    FLOAT eM21;
    FLOAT eM22;
    FLOAT eDx;
    FLOAT eDy;
    } 	HTML_PAINT_XFORM;

typedef struct _HTML_PAINT_DRAW_INFO
    {
    RECT rcViewport;
    HRGN hrgnUpdate;
    HTML_PAINT_XFORM xform;
    } 	HTML_PAINT_DRAW_INFO;



typedef 
enum _HTMLDlgFlag
    {	HTMLDlgFlagNo	= 0,
	HTMLDlgFlagOff	= 0,
	HTMLDlgFlag0	= 0,
	HTMLDlgFlagYes	= 1,
	HTMLDlgFlagOn	= 1,
	HTMLDlgFlag1	= 1,
	HTMLDlgFlagNotSet	= -1,
	HTMLDlgFlag_Max	= 2147483647L
    } 	HTMLDlgFlag;

typedef 
enum _HTMLDlgBorder
    {	HTMLDlgBorderThin	= 0,
	HTMLDlgBorderThick	= 0x40000L,
	HTMLDlgBorder_Max	= 2147483647L
    } 	HTMLDlgBorder;

typedef 
enum _HTMLDlgEdge
    {	HTMLDlgEdgeSunken	= 0,
	HTMLDlgEdgeRaised	= 16,
	HTMLDlgEdge_Max	= 2147483647L
    } 	HTMLDlgEdge;

typedef 
enum _HTMLDlgCenter
    {	HTMLDlgCenterNo	= 0,
	HTMLDlgCenterOff	= 0,
	HTMLDlgCenter0	= 0,
	HTMLDlgCenterYes	= 1,
	HTMLDlgCenterOn	= 1,
	HTMLDlgCenter1	= 1,
	HTMLDlgCenterParent	= 1,
	HTMLDlgCenterDesktop	= 2,
	HTMLDlgCenter_Max	= 2147483647L
    } 	HTMLDlgCenter;

EXTERN_C const GUID CLSID_CThreadDialogProcParam;
EXTERN_C const GUID CLSID_CHTMLDlg;
EXTERN_C const GUID CLSID_CHTMLPopup;
typedef 
enum _HTMLAppFlag
    {	HTMLAppFlagNo	= 0,
	HTMLAppFlagOff	= 0,
	HTMLAppFlag0	= 0,
	HTMLAppFlagYes	= 1,
	HTMLAppFlagOn	= 1,
	HTMLAppFlag1	= 1,
	HTMLAppFlag_Max	= 2147483647L
    } 	HTMLAppFlag;

typedef 
enum _HTMLMinimizeFlag
    {	HTMLMinimizeFlagNo	= 0,
	HTMLMinimizeFlagYes	= 0x20000L,
	HTMLMinimizeFlag_Max	= 2147483647L
    } 	HTMLMinimizeFlag;

typedef 
enum _HTMLMaximizeFlag
    {	HTMLMaximizeFlagNo	= 0,
	HTMLMaximizeFlagYes	= 0x10000L,
	HTMLMaximizeFlag_Max	= 2147483647L
    } 	HTMLMaximizeFlag;

typedef 
enum _HTMLCaptionFlag
    {	HTMLCaptionFlagNo	= 0,
	HTMLCaptionFlagYes	= 0xc00000L,
	HTMLCaptionFlag_Max	= 2147483647L
    } 	HTMLCaptionFlag;

typedef 
enum _HTMLSysMenuFlag
    {	HTMLSysMenuFlagNo	= 0,
	HTMLSysMenuFlagYes	= 0x80000L,
	HTMLSysMenuFlag_Max	= 2147483647L
    } 	HTMLSysMenuFlag;

typedef 
enum _HTMLBorder
    {	HTMLBorderNone	= 0,
	HTMLBorderThick	= 0x40000L,
	HTMLBorderDialog	= 0x400000L,
	HTMLBorderThin	= 0x800000L,
	HTMLBorder_Max	= 2147483647L
    } 	HTMLBorder;

typedef 
enum _HTMLBorderStyle
    {	HTMLBorderStyleNormal	= 0,
	HTMLBorderStyleRaised	= 0x100L,
	HTMLBorderStyleSunken	= 0x200L,
	HTMLBorderStylecombined	= 0x300L,
	HTMLBorderStyleStatic	= 0x20000L,
	HTMLBorderStyle_Max	= 2147483647L
    } 	HTMLBorderStyle;

typedef 
enum _HTMLWindowState
    {	HTMLWindowStateNormal	= 1,
	HTMLWindowStateMaximize	= 3,
	HTMLWindowStateMinimize	= 6,
	HTMLWindowState_Max	= 2147483647L
    } 	HTMLWindowState;

EXTERN_C const GUID CLSID_CAppBehavior;
typedef 
enum _BEHAVIOR_EVENT
    {	BEHAVIOREVENT_FIRST	= 0,
	BEHAVIOREVENT_CONTENTREADY	= 0,
	BEHAVIOREVENT_DOCUMENTREADY	= 1,
	BEHAVIOREVENT_APPLYSTYLE	= 2,
	BEHAVIOREVENT_DOCUMENTCONTEXTCHANGE	= 3,
	BEHAVIOREVENT_CONTENTSAVE	= 4,
	BEHAVIOREVENT_LAST	= 4,
	BEHAVIOR_EVENT_Max	= 2147483647L
    } 	BEHAVIOR_EVENT;

typedef 
enum _BEHAVIOR_EVENT_FLAGS
    {	BEHAVIOREVENTFLAGS_BUBBLE	= 1,
	BEHAVIOREVENTFLAGS_STANDARDADDITIVE	= 2,
	BEHAVIOR_EVENT_FLAGS_Max	= 2147483647L
    } 	BEHAVIOR_EVENT_FLAGS;

typedef 
enum _BEHAVIOR_RENDER_INFO
    {	BEHAVIORRENDERINFO_BEFOREBACKGROUND	= 0x1,
	BEHAVIORRENDERINFO_AFTERBACKGROUND	= 0x2,
	BEHAVIORRENDERINFO_BEFORECONTENT	= 0x4,
	BEHAVIORRENDERINFO_AFTERCONTENT	= 0x8,
	BEHAVIORRENDERINFO_AFTERFOREGROUND	= 0x20,
	BEHAVIORRENDERINFO_ABOVECONTENT	= 0x28,
	BEHAVIORRENDERINFO_ALLLAYERS	= 0xff,
	BEHAVIORRENDERINFO_DISABLEBACKGROUND	= 0x100,
	BEHAVIORRENDERINFO_DISABLENEGATIVEZ	= 0x200,
	BEHAVIORRENDERINFO_DISABLECONTENT	= 0x400,
	BEHAVIORRENDERINFO_DISABLEPOSITIVEZ	= 0x800,
	BEHAVIORRENDERINFO_DISABLEALLLAYERS	= 0xf00,
	BEHAVIORRENDERINFO_HITTESTING	= 0x1000,
	BEHAVIORRENDERINFO_SURFACE	= 0x100000,
	BEHAVIORRENDERINFO_3DSURFACE	= 0x200000,
	BEHAVIOR_RENDER_INFO_Max	= 2147483647L
    } 	BEHAVIOR_RENDER_INFO;

typedef 
enum _BEHAVIOR_RELATION
    {	BEHAVIOR_FIRSTRELATION	= 0,
	BEHAVIOR_SAMEELEMENT	= 0,
	BEHAVIOR_PARENT	= 1,
	BEHAVIOR_CHILD	= 2,
	BEHAVIOR_SIBLING	= 3,
	BEHAVIOR_LASTRELATION	= 3,
	BEHAVIOR_RELATION_Max	= 2147483647L
    } 	BEHAVIOR_RELATION;

typedef 
enum _BEHAVIOR_LAYOUT_INFO
    {	BEHAVIORLAYOUTINFO_FULLDELEGATION	= 0x1,
	BEHAVIORLAYOUTINFO_MODIFYNATURAL	= 0x2,
	BEHAVIORLAYOUTINFO_MAPSIZE	= 0x4,
	BEHAVIOR_LAYOUT_INFO_Max	= 2147483647L
    } 	BEHAVIOR_LAYOUT_INFO;

typedef 
enum _BEHAVIOR_LAYOUT_MODE
    {	BEHAVIORLAYOUTMODE_NATURAL	= 0x1,
	BEHAVIORLAYOUTMODE_MINWIDTH	= 0x2,
	BEHAVIORLAYOUTMODE_MAXWIDTH	= 0x4,
	BEHAVIORLAYOUTMODE_MEDIA_RESOLUTION	= 0x4000,
	BEHAVIORLAYOUTMODE_FINAL_PERCENT	= 0x8000,
	BEHAVIOR_LAYOUT_MODE_Max	= 2147483647L
    } 	BEHAVIOR_LAYOUT_MODE;

typedef 
enum _ELEMENTDESCRIPTOR_FLAGS
    {	ELEMENTDESCRIPTORFLAGS_LITERAL	= 1,
	ELEMENTDESCRIPTORFLAGS_NESTED_LITERAL	= 2,
	ELEMENTDESCRIPTOR_FLAGS_Max	= 2147483647L
    } 	ELEMENTDESCRIPTOR_FLAGS;

typedef 
enum _ELEMENTNAMESPACE_FLAGS
    {	ELEMENTNAMESPACEFLAGS_ALLOWANYTAG	= 0x1,
	ELEMENTNAMESPACEFLAGS_QUERYFORUNKNOWNTAGS	= 0x2,
	ELEMENTNAMESPACE_FLAGS_Max	= 2147483647L
    } 	ELEMENTNAMESPACE_FLAGS;





EXTERN_C const IID LIBID_MSHTML;

#ifndef __IHTMLEventObj_INTERFACE_DEFINED__
#define __IHTMLEventObj_INTERFACE_DEFINED__

/* interface IHTMLEventObj */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLEventObj;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f32d-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLEventObj : public IDispatch
    {
    public:
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_srcElement( 
            /* [out][retval] */ IHTMLElement **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_altKey( 
            /* [out][retval] */ VARIANT_BOOL *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_ctrlKey( 
            /* [out][retval] */ VARIANT_BOOL *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_shiftKey( 
            /* [out][retval] */ VARIANT_BOOL *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_returnValue( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_returnValue( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_cancelBubble( 
            /* [in] */ VARIANT_BOOL v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_cancelBubble( 
            /* [out][retval] */ VARIANT_BOOL *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_fromElement( 
            /* [out][retval] */ IHTMLElement **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_toElement( 
            /* [out][retval] */ IHTMLElement **p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_keyCode( 
            /* [in] */ long v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_keyCode( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_button( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_type( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_qualifier( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_reason( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_x( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_y( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_clientX( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_clientY( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_offsetX( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_offsetY( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_screenX( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_screenY( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_srcFilter( 
            /* [out][retval] */ IDispatch **p) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLEventObjVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IHTMLEventObj * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IHTMLEventObj * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IHTMLEventObj * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IHTMLEventObj * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IHTMLEventObj * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IHTMLEventObj * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IHTMLEventObj * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_srcElement )( 
            IHTMLEventObj * This,
            /* [out][retval] */ IHTMLElement **p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_altKey )( 
            IHTMLEventObj * This,
            /* [out][retval] */ VARIANT_BOOL *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ctrlKey )( 
            IHTMLEventObj * This,
            /* [out][retval] */ VARIANT_BOOL *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_shiftKey )( 
            IHTMLEventObj * This,
            /* [out][retval] */ VARIANT_BOOL *p);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_returnValue )( 
            IHTMLEventObj * This,
            /* [in] */ VARIANT v);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_returnValue )( 
            IHTMLEventObj * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_cancelBubble )( 
            IHTMLEventObj * This,
            /* [in] */ VARIANT_BOOL v);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_cancelBubble )( 
            IHTMLEventObj * This,
            /* [out][retval] */ VARIANT_BOOL *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_fromElement )( 
            IHTMLEventObj * This,
            /* [out][retval] */ IHTMLElement **p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_toElement )( 
            IHTMLEventObj * This,
            /* [out][retval] */ IHTMLElement **p);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_keyCode )( 
            IHTMLEventObj * This,
            /* [in] */ long v);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_keyCode )( 
            IHTMLEventObj * This,
            /* [out][retval] */ long *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_button )( 
            IHTMLEventObj * This,
            /* [out][retval] */ long *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_type )( 
            IHTMLEventObj * This,
            /* [out][retval] */ BSTR *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_qualifier )( 
            IHTMLEventObj * This,
            /* [out][retval] */ BSTR *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_reason )( 
            IHTMLEventObj * This,
            /* [out][retval] */ long *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_x )( 
            IHTMLEventObj * This,
            /* [out][retval] */ long *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_y )( 
            IHTMLEventObj * This,
            /* [out][retval] */ long *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_clientX )( 
            IHTMLEventObj * This,
            /* [out][retval] */ long *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_clientY )( 
            IHTMLEventObj * This,
            /* [out][retval] */ long *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_offsetX )( 
            IHTMLEventObj * This,
            /* [out][retval] */ long *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_offsetY )( 
            IHTMLEventObj * This,
            /* [out][retval] */ long *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_screenX )( 
            IHTMLEventObj * This,
            /* [out][retval] */ long *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_screenY )( 
            IHTMLEventObj * This,
            /* [out][retval] */ long *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_srcFilter )( 
            IHTMLEventObj * This,
            /* [out][retval] */ IDispatch **p);
        
        END_INTERFACE
    } IHTMLEventObjVtbl;

    interface IHTMLEventObj
    {
        CONST_VTBL struct IHTMLEventObjVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLEventObj_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IHTMLEventObj_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IHTMLEventObj_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IHTMLEventObj_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IHTMLEventObj_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IHTMLEventObj_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IHTMLEventObj_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IHTMLEventObj_get_srcElement(This,p)	\
    (This)->lpVtbl -> get_srcElement(This,p)

#define IHTMLEventObj_get_altKey(This,p)	\
    (This)->lpVtbl -> get_altKey(This,p)

#define IHTMLEventObj_get_ctrlKey(This,p)	\
    (This)->lpVtbl -> get_ctrlKey(This,p)

#define IHTMLEventObj_get_shiftKey(This,p)	\
    (This)->lpVtbl -> get_shiftKey(This,p)

#define IHTMLEventObj_put_returnValue(This,v)	\
    (This)->lpVtbl -> put_returnValue(This,v)

#define IHTMLEventObj_get_returnValue(This,p)	\
    (This)->lpVtbl -> get_returnValue(This,p)

#define IHTMLEventObj_put_cancelBubble(This,v)	\
    (This)->lpVtbl -> put_cancelBubble(This,v)

#define IHTMLEventObj_get_cancelBubble(This,p)	\
    (This)->lpVtbl -> get_cancelBubble(This,p)

#define IHTMLEventObj_get_fromElement(This,p)	\
    (This)->lpVtbl -> get_fromElement(This,p)

#define IHTMLEventObj_get_toElement(This,p)	\
    (This)->lpVtbl -> get_toElement(This,p)

#define IHTMLEventObj_put_keyCode(This,v)	\
    (This)->lpVtbl -> put_keyCode(This,v)

#define IHTMLEventObj_get_keyCode(This,p)	\
    (This)->lpVtbl -> get_keyCode(This,p)

#define IHTMLEventObj_get_button(This,p)	\
    (This)->lpVtbl -> get_button(This,p)

#define IHTMLEventObj_get_type(This,p)	\
    (This)->lpVtbl -> get_type(This,p)

#define IHTMLEventObj_get_qualifier(This,p)	\
    (This)->lpVtbl -> get_qualifier(This,p)

#define IHTMLEventObj_get_reason(This,p)	\
    (This)->lpVtbl -> get_reason(This,p)

#define IHTMLEventObj_get_x(This,p)	\
    (This)->lpVtbl -> get_x(This,p)

#define IHTMLEventObj_get_y(This,p)	\
    (This)->lpVtbl -> get_y(This,p)

#define IHTMLEventObj_get_clientX(This,p)	\
    (This)->lpVtbl -> get_clientX(This,p)

#define IHTMLEventObj_get_clientY(This,p)	\
    (This)->lpVtbl -> get_clientY(This,p)

#define IHTMLEventObj_get_offsetX(This,p)	\
    (This)->lpVtbl -> get_offsetX(This,p)

#define IHTMLEventObj_get_offsetY(This,p)	\
    (This)->lpVtbl -> get_offsetY(This,p)

#define IHTMLEventObj_get_screenX(This,p)	\
    (This)->lpVtbl -> get_screenX(This,p)

#define IHTMLEventObj_get_screenY(This,p)	\
    (This)->lpVtbl -> get_screenY(This,p)

#define IHTMLEventObj_get_srcFilter(This,p)	\
    (This)->lpVtbl -> get_srcFilter(This,p)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj_get_srcElement_Proxy( 
    IHTMLEventObj * This,
    /* [out][retval] */ IHTMLElement **p);


void __RPC_STUB IHTMLEventObj_get_srcElement_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj_get_altKey_Proxy( 
    IHTMLEventObj * This,
    /* [out][retval] */ VARIANT_BOOL *p);


void __RPC_STUB IHTMLEventObj_get_altKey_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj_get_ctrlKey_Proxy( 
    IHTMLEventObj * This,
    /* [out][retval] */ VARIANT_BOOL *p);


void __RPC_STUB IHTMLEventObj_get_ctrlKey_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj_get_shiftKey_Proxy( 
    IHTMLEventObj * This,
    /* [out][retval] */ VARIANT_BOOL *p);


void __RPC_STUB IHTMLEventObj_get_shiftKey_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj_put_returnValue_Proxy( 
    IHTMLEventObj * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLEventObj_put_returnValue_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj_get_returnValue_Proxy( 
    IHTMLEventObj * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLEventObj_get_returnValue_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj_put_cancelBubble_Proxy( 
    IHTMLEventObj * This,
    /* [in] */ VARIANT_BOOL v);


void __RPC_STUB IHTMLEventObj_put_cancelBubble_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj_get_cancelBubble_Proxy( 
    IHTMLEventObj * This,
    /* [out][retval] */ VARIANT_BOOL *p);


void __RPC_STUB IHTMLEventObj_get_cancelBubble_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj_get_fromElement_Proxy( 
    IHTMLEventObj * This,
    /* [out][retval] */ IHTMLElement **p);


void __RPC_STUB IHTMLEventObj_get_fromElement_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj_get_toElement_Proxy( 
    IHTMLEventObj * This,
    /* [out][retval] */ IHTMLElement **p);


void __RPC_STUB IHTMLEventObj_get_toElement_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj_put_keyCode_Proxy( 
    IHTMLEventObj * This,
    /* [in] */ long v);


void __RPC_STUB IHTMLEventObj_put_keyCode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj_get_keyCode_Proxy( 
    IHTMLEventObj * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLEventObj_get_keyCode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj_get_button_Proxy( 
    IHTMLEventObj * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLEventObj_get_button_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj_get_type_Proxy( 
    IHTMLEventObj * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLEventObj_get_type_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj_get_qualifier_Proxy( 
    IHTMLEventObj * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLEventObj_get_qualifier_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj_get_reason_Proxy( 
    IHTMLEventObj * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLEventObj_get_reason_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj_get_x_Proxy( 
    IHTMLEventObj * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLEventObj_get_x_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj_get_y_Proxy( 
    IHTMLEventObj * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLEventObj_get_y_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj_get_clientX_Proxy( 
    IHTMLEventObj * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLEventObj_get_clientX_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj_get_clientY_Proxy( 
    IHTMLEventObj * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLEventObj_get_clientY_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj_get_offsetX_Proxy( 
    IHTMLEventObj * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLEventObj_get_offsetX_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj_get_offsetY_Proxy( 
    IHTMLEventObj * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLEventObj_get_offsetY_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj_get_screenX_Proxy( 
    IHTMLEventObj * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLEventObj_get_screenX_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj_get_screenY_Proxy( 
    IHTMLEventObj * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLEventObj_get_screenY_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLEventObj_get_srcFilter_Proxy( 
    IHTMLEventObj * This,
    /* [out][retval] */ IDispatch **p);


void __RPC_STUB IHTMLEventObj_get_srcFilter_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLEventObj_INTERFACE_DEFINED__ */


#ifndef __IElementBehaviorSite_INTERFACE_DEFINED__
#define __IElementBehaviorSite_INTERFACE_DEFINED__

/* interface IElementBehaviorSite */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_IElementBehaviorSite;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f427-98b5-11cf-bb82-00aa00bdce0b")
    IElementBehaviorSite : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE GetElement( 
            /* [out][retval] */ IHTMLElement **ppElement) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RegisterNotification( 
            /* [in] */ LONG lEvent) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IElementBehaviorSiteVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IElementBehaviorSite * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IElementBehaviorSite * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IElementBehaviorSite * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetElement )( 
            IElementBehaviorSite * This,
            /* [out][retval] */ IHTMLElement **ppElement);
        
        HRESULT ( STDMETHODCALLTYPE *RegisterNotification )( 
            IElementBehaviorSite * This,
            /* [in] */ LONG lEvent);
        
        END_INTERFACE
    } IElementBehaviorSiteVtbl;

    interface IElementBehaviorSite
    {
        CONST_VTBL struct IElementBehaviorSiteVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IElementBehaviorSite_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IElementBehaviorSite_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IElementBehaviorSite_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IElementBehaviorSite_GetElement(This,ppElement)	\
    (This)->lpVtbl -> GetElement(This,ppElement)

#define IElementBehaviorSite_RegisterNotification(This,lEvent)	\
    (This)->lpVtbl -> RegisterNotification(This,lEvent)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IElementBehaviorSite_GetElement_Proxy( 
    IElementBehaviorSite * This,
    /* [out][retval] */ IHTMLElement **ppElement);


void __RPC_STUB IElementBehaviorSite_GetElement_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IElementBehaviorSite_RegisterNotification_Proxy( 
    IElementBehaviorSite * This,
    /* [in] */ LONG lEvent);


void __RPC_STUB IElementBehaviorSite_RegisterNotification_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IElementBehaviorSite_INTERFACE_DEFINED__ */


#ifndef __IElementBehavior_INTERFACE_DEFINED__
#define __IElementBehavior_INTERFACE_DEFINED__

/* interface IElementBehavior */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_IElementBehavior;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f425-98b5-11cf-bb82-00aa00bdce0b")
    IElementBehavior : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Init( 
            /* [in] */ IElementBehaviorSite *pBehaviorSite) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Notify( 
            /* [in] */ LONG lEvent,
            /* [out][in] */ VARIANT *pVar) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE Detach( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IElementBehaviorVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IElementBehavior * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IElementBehavior * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IElementBehavior * This);
        
        HRESULT ( STDMETHODCALLTYPE *Init )( 
            IElementBehavior * This,
            /* [in] */ IElementBehaviorSite *pBehaviorSite);
        
        HRESULT ( STDMETHODCALLTYPE *Notify )( 
            IElementBehavior * This,
            /* [in] */ LONG lEvent,
            /* [out][in] */ VARIANT *pVar);
        
        HRESULT ( STDMETHODCALLTYPE *Detach )( 
            IElementBehavior * This);
        
        END_INTERFACE
    } IElementBehaviorVtbl;

    interface IElementBehavior
    {
        CONST_VTBL struct IElementBehaviorVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IElementBehavior_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IElementBehavior_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IElementBehavior_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IElementBehavior_Init(This,pBehaviorSite)	\
    (This)->lpVtbl -> Init(This,pBehaviorSite)

#define IElementBehavior_Notify(This,lEvent,pVar)	\
    (This)->lpVtbl -> Notify(This,lEvent,pVar)

#define IElementBehavior_Detach(This)	\
    (This)->lpVtbl -> Detach(This)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IElementBehavior_Init_Proxy( 
    IElementBehavior * This,
    /* [in] */ IElementBehaviorSite *pBehaviorSite);


void __RPC_STUB IElementBehavior_Init_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IElementBehavior_Notify_Proxy( 
    IElementBehavior * This,
    /* [in] */ LONG lEvent,
    /* [out][in] */ VARIANT *pVar);


void __RPC_STUB IElementBehavior_Notify_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IElementBehavior_Detach_Proxy( 
    IElementBehavior * This);


void __RPC_STUB IElementBehavior_Detach_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IElementBehavior_INTERFACE_DEFINED__ */


#ifndef __IElementBehaviorFactory_INTERFACE_DEFINED__
#define __IElementBehaviorFactory_INTERFACE_DEFINED__

/* interface IElementBehaviorFactory */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_IElementBehaviorFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f429-98b5-11cf-bb82-00aa00bdce0b")
    IElementBehaviorFactory : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE FindBehavior( 
            /* [in] */ BSTR bstrBehavior,
            /* [in] */ BSTR bstrBehaviorUrl,
            /* [in] */ IElementBehaviorSite *pSite,
            /* [out][retval] */ IElementBehavior **ppBehavior) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IElementBehaviorFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IElementBehaviorFactory * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IElementBehaviorFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IElementBehaviorFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *FindBehavior )( 
            IElementBehaviorFactory * This,
            /* [in] */ BSTR bstrBehavior,
            /* [in] */ BSTR bstrBehaviorUrl,
            /* [in] */ IElementBehaviorSite *pSite,
            /* [out][retval] */ IElementBehavior **ppBehavior);
        
        END_INTERFACE
    } IElementBehaviorFactoryVtbl;

    interface IElementBehaviorFactory
    {
        CONST_VTBL struct IElementBehaviorFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IElementBehaviorFactory_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IElementBehaviorFactory_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IElementBehaviorFactory_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IElementBehaviorFactory_FindBehavior(This,bstrBehavior,bstrBehaviorUrl,pSite,ppBehavior)	\
    (This)->lpVtbl -> FindBehavior(This,bstrBehavior,bstrBehaviorUrl,pSite,ppBehavior)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IElementBehaviorFactory_FindBehavior_Proxy( 
    IElementBehaviorFactory * This,
    /* [in] */ BSTR bstrBehavior,
    /* [in] */ BSTR bstrBehaviorUrl,
    /* [in] */ IElementBehaviorSite *pSite,
    /* [out][retval] */ IElementBehavior **ppBehavior);


void __RPC_STUB IElementBehaviorFactory_FindBehavior_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IElementBehaviorFactory_INTERFACE_DEFINED__ */


#ifndef __IElementBehaviorSiteOM_INTERFACE_DEFINED__
#define __IElementBehaviorSiteOM_INTERFACE_DEFINED__

/* interface IElementBehaviorSiteOM */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_IElementBehaviorSiteOM;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f489-98b5-11cf-bb82-00aa00bdce0b")
    IElementBehaviorSiteOM : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE RegisterEvent( 
            /* [in] */ LPOLESTR pchEvent,
            /* [in] */ LONG lFlags,
            /* [out][retval] */ LONG *plCookie) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetEventCookie( 
            /* [in] */ LPOLESTR pchEvent,
            /* [out][retval] */ LONG *plCookie) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE FireEvent( 
            /* [in] */ LONG lCookie,
            /* [in] */ IHTMLEventObj *pEventObject) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE CreateEventObject( 
            /* [out][retval] */ IHTMLEventObj **ppEventObject) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RegisterName( 
            /* [in] */ LPOLESTR pchName) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE RegisterUrn( 
            /* [in] */ LPOLESTR pchUrn) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IElementBehaviorSiteOMVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IElementBehaviorSiteOM * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IElementBehaviorSiteOM * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IElementBehaviorSiteOM * This);
        
        HRESULT ( STDMETHODCALLTYPE *RegisterEvent )( 
            IElementBehaviorSiteOM * This,
            /* [in] */ LPOLESTR pchEvent,
            /* [in] */ LONG lFlags,
            /* [out][retval] */ LONG *plCookie);
        
        HRESULT ( STDMETHODCALLTYPE *GetEventCookie )( 
            IElementBehaviorSiteOM * This,
            /* [in] */ LPOLESTR pchEvent,
            /* [out][retval] */ LONG *plCookie);
        
        HRESULT ( STDMETHODCALLTYPE *FireEvent )( 
            IElementBehaviorSiteOM * This,
            /* [in] */ LONG lCookie,
            /* [in] */ IHTMLEventObj *pEventObject);
        
        HRESULT ( STDMETHODCALLTYPE *CreateEventObject )( 
            IElementBehaviorSiteOM * This,
            /* [out][retval] */ IHTMLEventObj **ppEventObject);
        
        HRESULT ( STDMETHODCALLTYPE *RegisterName )( 
            IElementBehaviorSiteOM * This,
            /* [in] */ LPOLESTR pchName);
        
        HRESULT ( STDMETHODCALLTYPE *RegisterUrn )( 
            IElementBehaviorSiteOM * This,
            /* [in] */ LPOLESTR pchUrn);
        
        END_INTERFACE
    } IElementBehaviorSiteOMVtbl;

    interface IElementBehaviorSiteOM
    {
        CONST_VTBL struct IElementBehaviorSiteOMVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IElementBehaviorSiteOM_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IElementBehaviorSiteOM_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IElementBehaviorSiteOM_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IElementBehaviorSiteOM_RegisterEvent(This,pchEvent,lFlags,plCookie)	\
    (This)->lpVtbl -> RegisterEvent(This,pchEvent,lFlags,plCookie)

#define IElementBehaviorSiteOM_GetEventCookie(This,pchEvent,plCookie)	\
    (This)->lpVtbl -> GetEventCookie(This,pchEvent,plCookie)

#define IElementBehaviorSiteOM_FireEvent(This,lCookie,pEventObject)	\
    (This)->lpVtbl -> FireEvent(This,lCookie,pEventObject)

#define IElementBehaviorSiteOM_CreateEventObject(This,ppEventObject)	\
    (This)->lpVtbl -> CreateEventObject(This,ppEventObject)

#define IElementBehaviorSiteOM_RegisterName(This,pchName)	\
    (This)->lpVtbl -> RegisterName(This,pchName)

#define IElementBehaviorSiteOM_RegisterUrn(This,pchUrn)	\
    (This)->lpVtbl -> RegisterUrn(This,pchUrn)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IElementBehaviorSiteOM_RegisterEvent_Proxy( 
    IElementBehaviorSiteOM * This,
    /* [in] */ LPOLESTR pchEvent,
    /* [in] */ LONG lFlags,
    /* [out][retval] */ LONG *plCookie);


void __RPC_STUB IElementBehaviorSiteOM_RegisterEvent_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IElementBehaviorSiteOM_GetEventCookie_Proxy( 
    IElementBehaviorSiteOM * This,
    /* [in] */ LPOLESTR pchEvent,
    /* [out][retval] */ LONG *plCookie);


void __RPC_STUB IElementBehaviorSiteOM_GetEventCookie_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IElementBehaviorSiteOM_FireEvent_Proxy( 
    IElementBehaviorSiteOM * This,
    /* [in] */ LONG lCookie,
    /* [in] */ IHTMLEventObj *pEventObject);


void __RPC_STUB IElementBehaviorSiteOM_FireEvent_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IElementBehaviorSiteOM_CreateEventObject_Proxy( 
    IElementBehaviorSiteOM * This,
    /* [out][retval] */ IHTMLEventObj **ppEventObject);


void __RPC_STUB IElementBehaviorSiteOM_CreateEventObject_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IElementBehaviorSiteOM_RegisterName_Proxy( 
    IElementBehaviorSiteOM * This,
    /* [in] */ LPOLESTR pchName);


void __RPC_STUB IElementBehaviorSiteOM_RegisterName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IElementBehaviorSiteOM_RegisterUrn_Proxy( 
    IElementBehaviorSiteOM * This,
    /* [in] */ LPOLESTR pchUrn);


void __RPC_STUB IElementBehaviorSiteOM_RegisterUrn_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IElementBehaviorSiteOM_INTERFACE_DEFINED__ */


#ifndef __IElementBehaviorRender_INTERFACE_DEFINED__
#define __IElementBehaviorRender_INTERFACE_DEFINED__

/* interface IElementBehaviorRender */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_IElementBehaviorRender;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f4aa-98b5-11cf-bb82-00aa00bdce0b")
    IElementBehaviorRender : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Draw( 
            /* [in] */ HDC hdc,
            /* [in] */ LONG lLayer,
            /* [in] */ RECT *pRect,
            /* [in] */ IUnknown *pReserved) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE GetRenderInfo( 
            /* [out][retval] */ LONG *plRenderInfo) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE HitTestPoint( 
            /* [in] */ POINT *pPoint,
            /* [in] */ IUnknown *pReserved,
            /* [out][retval] */ BOOL *pbHit) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IElementBehaviorRenderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IElementBehaviorRender * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IElementBehaviorRender * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IElementBehaviorRender * This);
        
        HRESULT ( STDMETHODCALLTYPE *Draw )( 
            IElementBehaviorRender * This,
            /* [in] */ HDC hdc,
            /* [in] */ LONG lLayer,
            /* [in] */ RECT *pRect,
            /* [in] */ IUnknown *pReserved);
        
        HRESULT ( STDMETHODCALLTYPE *GetRenderInfo )( 
            IElementBehaviorRender * This,
            /* [out][retval] */ LONG *plRenderInfo);
        
        HRESULT ( STDMETHODCALLTYPE *HitTestPoint )( 
            IElementBehaviorRender * This,
            /* [in] */ POINT *pPoint,
            /* [in] */ IUnknown *pReserved,
            /* [out][retval] */ BOOL *pbHit);
        
        END_INTERFACE
    } IElementBehaviorRenderVtbl;

    interface IElementBehaviorRender
    {
        CONST_VTBL struct IElementBehaviorRenderVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IElementBehaviorRender_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IElementBehaviorRender_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IElementBehaviorRender_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IElementBehaviorRender_Draw(This,hdc,lLayer,pRect,pReserved)	\
    (This)->lpVtbl -> Draw(This,hdc,lLayer,pRect,pReserved)

#define IElementBehaviorRender_GetRenderInfo(This,plRenderInfo)	\
    (This)->lpVtbl -> GetRenderInfo(This,plRenderInfo)

#define IElementBehaviorRender_HitTestPoint(This,pPoint,pReserved,pbHit)	\
    (This)->lpVtbl -> HitTestPoint(This,pPoint,pReserved,pbHit)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IElementBehaviorRender_Draw_Proxy( 
    IElementBehaviorRender * This,
    /* [in] */ HDC hdc,
    /* [in] */ LONG lLayer,
    /* [in] */ RECT *pRect,
    /* [in] */ IUnknown *pReserved);


void __RPC_STUB IElementBehaviorRender_Draw_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IElementBehaviorRender_GetRenderInfo_Proxy( 
    IElementBehaviorRender * This,
    /* [out][retval] */ LONG *plRenderInfo);


void __RPC_STUB IElementBehaviorRender_GetRenderInfo_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IElementBehaviorRender_HitTestPoint_Proxy( 
    IElementBehaviorRender * This,
    /* [in] */ POINT *pPoint,
    /* [in] */ IUnknown *pReserved,
    /* [out][retval] */ BOOL *pbHit);


void __RPC_STUB IElementBehaviorRender_HitTestPoint_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IElementBehaviorRender_INTERFACE_DEFINED__ */


#ifndef __IElementBehaviorSiteRender_INTERFACE_DEFINED__
#define __IElementBehaviorSiteRender_INTERFACE_DEFINED__

/* interface IElementBehaviorSiteRender */
/* [uuid][unique][object] */ 


EXTERN_C const IID IID_IElementBehaviorSiteRender;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f4a7-98b5-11cf-bb82-00aa00bdce0b")
    IElementBehaviorSiteRender : public IUnknown
    {
    public:
        virtual HRESULT STDMETHODCALLTYPE Invalidate( 
            /* [in] */ RECT *pRect) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE InvalidateRenderInfo( void) = 0;
        
        virtual HRESULT STDMETHODCALLTYPE InvalidateStyle( void) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IElementBehaviorSiteRenderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IElementBehaviorSiteRender * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IElementBehaviorSiteRender * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IElementBehaviorSiteRender * This);
        
        HRESULT ( STDMETHODCALLTYPE *Invalidate )( 
            IElementBehaviorSiteRender * This,
            /* [in] */ RECT *pRect);
        
        HRESULT ( STDMETHODCALLTYPE *InvalidateRenderInfo )( 
            IElementBehaviorSiteRender * This);
        
        HRESULT ( STDMETHODCALLTYPE *InvalidateStyle )( 
            IElementBehaviorSiteRender * This);
        
        END_INTERFACE
    } IElementBehaviorSiteRenderVtbl;

    interface IElementBehaviorSiteRender
    {
        CONST_VTBL struct IElementBehaviorSiteRenderVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IElementBehaviorSiteRender_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IElementBehaviorSiteRender_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IElementBehaviorSiteRender_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IElementBehaviorSiteRender_Invalidate(This,pRect)	\
    (This)->lpVtbl -> Invalidate(This,pRect)

#define IElementBehaviorSiteRender_InvalidateRenderInfo(This)	\
    (This)->lpVtbl -> InvalidateRenderInfo(This)

#define IElementBehaviorSiteRender_InvalidateStyle(This)	\
    (This)->lpVtbl -> InvalidateStyle(This)

#endif /* COBJMACROS */


#endif 	/* C style interface */



HRESULT STDMETHODCALLTYPE IElementBehaviorSiteRender_Invalidate_Proxy( 
    IElementBehaviorSiteRender * This,
    /* [in] */ RECT *pRect);


void __RPC_STUB IElementBehaviorSiteRender_Invalidate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IElementBehaviorSiteRender_InvalidateRenderInfo_Proxy( 
    IElementBehaviorSiteRender * This);


void __RPC_STUB IElementBehaviorSiteRender_InvalidateRenderInfo_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


HRESULT STDMETHODCALLTYPE IElementBehaviorSiteRender_InvalidateStyle_Proxy( 
    IElementBehaviorSiteRender * This);


void __RPC_STUB IElementBehaviorSiteRender_InvalidateStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IElementBehaviorSiteRender_INTERFACE_DEFINED__ */


#ifndef __IHTMLStyle_INTERFACE_DEFINED__
#define __IHTMLStyle_INTERFACE_DEFINED__

/* interface IHTMLStyle */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLStyle;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f25e-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLStyle : public IDispatch
    {
    public:
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_fontFamily( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_fontFamily( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_fontStyle( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_fontStyle( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_fontVariant( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_fontVariant( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_fontWeight( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_fontWeight( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_fontSize( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_fontSize( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_font( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_font( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_color( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_color( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_background( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_background( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_backgroundColor( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_backgroundColor( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_backgroundImage( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_backgroundImage( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_backgroundRepeat( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_backgroundRepeat( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_backgroundAttachment( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_backgroundAttachment( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_backgroundPosition( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_backgroundPosition( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_backgroundPositionX( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_backgroundPositionX( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_backgroundPositionY( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_backgroundPositionY( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_wordSpacing( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_wordSpacing( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_letterSpacing( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_letterSpacing( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textDecoration( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textDecoration( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textDecorationNone( 
            /* [in] */ VARIANT_BOOL v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textDecorationNone( 
            /* [out][retval] */ VARIANT_BOOL *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textDecorationUnderline( 
            /* [in] */ VARIANT_BOOL v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textDecorationUnderline( 
            /* [out][retval] */ VARIANT_BOOL *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textDecorationOverline( 
            /* [in] */ VARIANT_BOOL v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textDecorationOverline( 
            /* [out][retval] */ VARIANT_BOOL *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textDecorationLineThrough( 
            /* [in] */ VARIANT_BOOL v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textDecorationLineThrough( 
            /* [out][retval] */ VARIANT_BOOL *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textDecorationBlink( 
            /* [in] */ VARIANT_BOOL v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textDecorationBlink( 
            /* [out][retval] */ VARIANT_BOOL *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_verticalAlign( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_verticalAlign( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textTransform( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textTransform( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textAlign( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textAlign( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textIndent( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textIndent( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_lineHeight( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_lineHeight( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_marginTop( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_marginTop( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_marginRight( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_marginRight( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_marginBottom( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_marginBottom( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_marginLeft( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_marginLeft( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_margin( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_margin( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_paddingTop( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_paddingTop( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_paddingRight( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_paddingRight( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_paddingBottom( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_paddingBottom( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_paddingLeft( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_paddingLeft( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_padding( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_padding( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_border( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_border( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderTop( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderTop( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderRight( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderRight( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderBottom( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderBottom( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderLeft( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderLeft( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderColor( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderColor( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderTopColor( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderTopColor( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderRightColor( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderRightColor( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderBottomColor( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderBottomColor( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderLeftColor( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderLeftColor( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderWidth( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderWidth( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderTopWidth( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderTopWidth( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderRightWidth( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderRightWidth( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderBottomWidth( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderBottomWidth( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderLeftWidth( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderLeftWidth( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderStyle( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderStyle( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderTopStyle( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderTopStyle( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderRightStyle( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderRightStyle( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderBottomStyle( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderBottomStyle( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderLeftStyle( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderLeftStyle( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_width( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_width( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_height( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_height( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_styleFloat( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_styleFloat( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_clear( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_clear( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_display( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_display( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_visibility( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_visibility( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_listStyleType( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_listStyleType( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_listStylePosition( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_listStylePosition( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_listStyleImage( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_listStyleImage( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_listStyle( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_listStyle( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_whiteSpace( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_whiteSpace( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_top( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_top( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_left( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_left( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_position( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_zIndex( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_zIndex( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_overflow( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_overflow( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_pageBreakBefore( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_pageBreakBefore( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_pageBreakAfter( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_pageBreakAfter( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_cssText( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_cssText( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [hidden][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_pixelTop( 
            /* [in] */ long v) = 0;
        
        virtual /* [hidden][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_pixelTop( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [hidden][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_pixelLeft( 
            /* [in] */ long v) = 0;
        
        virtual /* [hidden][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_pixelLeft( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [hidden][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_pixelWidth( 
            /* [in] */ long v) = 0;
        
        virtual /* [hidden][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_pixelWidth( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [hidden][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_pixelHeight( 
            /* [in] */ long v) = 0;
        
        virtual /* [hidden][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_pixelHeight( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_posTop( 
            /* [in] */ float v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_posTop( 
            /* [out][retval] */ float *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_posLeft( 
            /* [in] */ float v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_posLeft( 
            /* [out][retval] */ float *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_posWidth( 
            /* [in] */ float v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_posWidth( 
            /* [out][retval] */ float *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_posHeight( 
            /* [in] */ float v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_posHeight( 
            /* [out][retval] */ float *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_cursor( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_cursor( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_clip( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_clip( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_filter( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_filter( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE setAttribute( 
            /* [in] */ BSTR strAttributeName,
            /* [in] */ VARIANT AttributeValue,
            /* [in][defaultvalue] */ LONG lFlags = 1) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE getAttribute( 
            /* [in] */ BSTR strAttributeName,
            /* [in][defaultvalue] */ LONG lFlags,
            /* [out][retval] */ VARIANT *AttributeValue) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE removeAttribute( 
            /* [in] */ BSTR strAttributeName,
            /* [in][defaultvalue] */ LONG lFlags,
            /* [out][retval] */ VARIANT_BOOL *pfSuccess) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE toString( 
            /* [out][retval] */ BSTR *String) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLStyleVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IHTMLStyle * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IHTMLStyle * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IHTMLStyle * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IHTMLStyle * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IHTMLStyle * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IHTMLStyle * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IHTMLStyle * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_fontFamily )( 
            IHTMLStyle * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_fontFamily )( 
            IHTMLStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_fontStyle )( 
            IHTMLStyle * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_fontStyle )( 
            IHTMLStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_fontVariant )( 
            IHTMLStyle * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_fontVariant )( 
            IHTMLStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_fontWeight )( 
            IHTMLStyle * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_fontWeight )( 
            IHTMLStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_fontSize )( 
            IHTMLStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_fontSize )( 
            IHTMLStyle * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_font )( 
            IHTMLStyle * This,
            /* [in] */ BSTR v);
        
        /* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_font )( 
            IHTMLStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_color )( 
            IHTMLStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_color )( 
            IHTMLStyle * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_background )( 
            IHTMLStyle * This,
            /* [in] */ BSTR v);
        
        /* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_background )( 
            IHTMLStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_backgroundColor )( 
            IHTMLStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_backgroundColor )( 
            IHTMLStyle * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_backgroundImage )( 
            IHTMLStyle * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_backgroundImage )( 
            IHTMLStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_backgroundRepeat )( 
            IHTMLStyle * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_backgroundRepeat )( 
            IHTMLStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_backgroundAttachment )( 
            IHTMLStyle * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_backgroundAttachment )( 
            IHTMLStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_backgroundPosition )( 
            IHTMLStyle * This,
            /* [in] */ BSTR v);
        
        /* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_backgroundPosition )( 
            IHTMLStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_backgroundPositionX )( 
            IHTMLStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_backgroundPositionX )( 
            IHTMLStyle * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_backgroundPositionY )( 
            IHTMLStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_backgroundPositionY )( 
            IHTMLStyle * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_wordSpacing )( 
            IHTMLStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_wordSpacing )( 
            IHTMLStyle * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_letterSpacing )( 
            IHTMLStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_letterSpacing )( 
            IHTMLStyle * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_textDecoration )( 
            IHTMLStyle * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_textDecoration )( 
            IHTMLStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_textDecorationNone )( 
            IHTMLStyle * This,
            /* [in] */ VARIANT_BOOL v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_textDecorationNone )( 
            IHTMLStyle * This,
            /* [out][retval] */ VARIANT_BOOL *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_textDecorationUnderline )( 
            IHTMLStyle * This,
            /* [in] */ VARIANT_BOOL v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_textDecorationUnderline )( 
            IHTMLStyle * This,
            /* [out][retval] */ VARIANT_BOOL *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_textDecorationOverline )( 
            IHTMLStyle * This,
            /* [in] */ VARIANT_BOOL v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_textDecorationOverline )( 
            IHTMLStyle * This,
            /* [out][retval] */ VARIANT_BOOL *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_textDecorationLineThrough )( 
            IHTMLStyle * This,
            /* [in] */ VARIANT_BOOL v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_textDecorationLineThrough )( 
            IHTMLStyle * This,
            /* [out][retval] */ VARIANT_BOOL *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_textDecorationBlink )( 
            IHTMLStyle * This,
            /* [in] */ VARIANT_BOOL v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_textDecorationBlink )( 
            IHTMLStyle * This,
            /* [out][retval] */ VARIANT_BOOL *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_verticalAlign )( 
            IHTMLStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_verticalAlign )( 
            IHTMLStyle * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_textTransform )( 
            IHTMLStyle * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_textTransform )( 
            IHTMLStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_textAlign )( 
            IHTMLStyle * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_textAlign )( 
            IHTMLStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_textIndent )( 
            IHTMLStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_textIndent )( 
            IHTMLStyle * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_lineHeight )( 
            IHTMLStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_lineHeight )( 
            IHTMLStyle * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_marginTop )( 
            IHTMLStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_marginTop )( 
            IHTMLStyle * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_marginRight )( 
            IHTMLStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_marginRight )( 
            IHTMLStyle * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_marginBottom )( 
            IHTMLStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_marginBottom )( 
            IHTMLStyle * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_marginLeft )( 
            IHTMLStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_marginLeft )( 
            IHTMLStyle * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_margin )( 
            IHTMLStyle * This,
            /* [in] */ BSTR v);
        
        /* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_margin )( 
            IHTMLStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_paddingTop )( 
            IHTMLStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_paddingTop )( 
            IHTMLStyle * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_paddingRight )( 
            IHTMLStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_paddingRight )( 
            IHTMLStyle * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_paddingBottom )( 
            IHTMLStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_paddingBottom )( 
            IHTMLStyle * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_paddingLeft )( 
            IHTMLStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_paddingLeft )( 
            IHTMLStyle * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_padding )( 
            IHTMLStyle * This,
            /* [in] */ BSTR v);
        
        /* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_padding )( 
            IHTMLStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_border )( 
            IHTMLStyle * This,
            /* [in] */ BSTR v);
        
        /* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_border )( 
            IHTMLStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_borderTop )( 
            IHTMLStyle * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderTop )( 
            IHTMLStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_borderRight )( 
            IHTMLStyle * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderRight )( 
            IHTMLStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_borderBottom )( 
            IHTMLStyle * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderBottom )( 
            IHTMLStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_borderLeft )( 
            IHTMLStyle * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderLeft )( 
            IHTMLStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_borderColor )( 
            IHTMLStyle * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderColor )( 
            IHTMLStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_borderTopColor )( 
            IHTMLStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderTopColor )( 
            IHTMLStyle * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_borderRightColor )( 
            IHTMLStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderRightColor )( 
            IHTMLStyle * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_borderBottomColor )( 
            IHTMLStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderBottomColor )( 
            IHTMLStyle * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_borderLeftColor )( 
            IHTMLStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderLeftColor )( 
            IHTMLStyle * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_borderWidth )( 
            IHTMLStyle * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderWidth )( 
            IHTMLStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_borderTopWidth )( 
            IHTMLStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderTopWidth )( 
            IHTMLStyle * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_borderRightWidth )( 
            IHTMLStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderRightWidth )( 
            IHTMLStyle * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_borderBottomWidth )( 
            IHTMLStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderBottomWidth )( 
            IHTMLStyle * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_borderLeftWidth )( 
            IHTMLStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderLeftWidth )( 
            IHTMLStyle * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_borderStyle )( 
            IHTMLStyle * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderStyle )( 
            IHTMLStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_borderTopStyle )( 
            IHTMLStyle * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderTopStyle )( 
            IHTMLStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_borderRightStyle )( 
            IHTMLStyle * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderRightStyle )( 
            IHTMLStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_borderBottomStyle )( 
            IHTMLStyle * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderBottomStyle )( 
            IHTMLStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_borderLeftStyle )( 
            IHTMLStyle * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderLeftStyle )( 
            IHTMLStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_width )( 
            IHTMLStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_width )( 
            IHTMLStyle * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_height )( 
            IHTMLStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_height )( 
            IHTMLStyle * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_styleFloat )( 
            IHTMLStyle * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_styleFloat )( 
            IHTMLStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_clear )( 
            IHTMLStyle * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_clear )( 
            IHTMLStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_display )( 
            IHTMLStyle * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_display )( 
            IHTMLStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_visibility )( 
            IHTMLStyle * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_visibility )( 
            IHTMLStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_listStyleType )( 
            IHTMLStyle * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_listStyleType )( 
            IHTMLStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_listStylePosition )( 
            IHTMLStyle * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_listStylePosition )( 
            IHTMLStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_listStyleImage )( 
            IHTMLStyle * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_listStyleImage )( 
            IHTMLStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_listStyle )( 
            IHTMLStyle * This,
            /* [in] */ BSTR v);
        
        /* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_listStyle )( 
            IHTMLStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_whiteSpace )( 
            IHTMLStyle * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_whiteSpace )( 
            IHTMLStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_top )( 
            IHTMLStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_top )( 
            IHTMLStyle * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_left )( 
            IHTMLStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_left )( 
            IHTMLStyle * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_position )( 
            IHTMLStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_zIndex )( 
            IHTMLStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_zIndex )( 
            IHTMLStyle * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_overflow )( 
            IHTMLStyle * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_overflow )( 
            IHTMLStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_pageBreakBefore )( 
            IHTMLStyle * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_pageBreakBefore )( 
            IHTMLStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_pageBreakAfter )( 
            IHTMLStyle * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_pageBreakAfter )( 
            IHTMLStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_cssText )( 
            IHTMLStyle * This,
            /* [in] */ BSTR v);
        
        /* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_cssText )( 
            IHTMLStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [hidden][bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_pixelTop )( 
            IHTMLStyle * This,
            /* [in] */ long v);
        
        /* [hidden][bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_pixelTop )( 
            IHTMLStyle * This,
            /* [out][retval] */ long *p);
        
        /* [hidden][bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_pixelLeft )( 
            IHTMLStyle * This,
            /* [in] */ long v);
        
        /* [hidden][bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_pixelLeft )( 
            IHTMLStyle * This,
            /* [out][retval] */ long *p);
        
        /* [hidden][bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_pixelWidth )( 
            IHTMLStyle * This,
            /* [in] */ long v);
        
        /* [hidden][bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_pixelWidth )( 
            IHTMLStyle * This,
            /* [out][retval] */ long *p);
        
        /* [hidden][bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_pixelHeight )( 
            IHTMLStyle * This,
            /* [in] */ long v);
        
        /* [hidden][bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_pixelHeight )( 
            IHTMLStyle * This,
            /* [out][retval] */ long *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_posTop )( 
            IHTMLStyle * This,
            /* [in] */ float v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_posTop )( 
            IHTMLStyle * This,
            /* [out][retval] */ float *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_posLeft )( 
            IHTMLStyle * This,
            /* [in] */ float v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_posLeft )( 
            IHTMLStyle * This,
            /* [out][retval] */ float *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_posWidth )( 
            IHTMLStyle * This,
            /* [in] */ float v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_posWidth )( 
            IHTMLStyle * This,
            /* [out][retval] */ float *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_posHeight )( 
            IHTMLStyle * This,
            /* [in] */ float v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_posHeight )( 
            IHTMLStyle * This,
            /* [out][retval] */ float *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_cursor )( 
            IHTMLStyle * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_cursor )( 
            IHTMLStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_clip )( 
            IHTMLStyle * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_clip )( 
            IHTMLStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_filter )( 
            IHTMLStyle * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_filter )( 
            IHTMLStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *setAttribute )( 
            IHTMLStyle * This,
            /* [in] */ BSTR strAttributeName,
            /* [in] */ VARIANT AttributeValue,
            /* [in][defaultvalue] */ LONG lFlags);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *getAttribute )( 
            IHTMLStyle * This,
            /* [in] */ BSTR strAttributeName,
            /* [in][defaultvalue] */ LONG lFlags,
            /* [out][retval] */ VARIANT *AttributeValue);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *removeAttribute )( 
            IHTMLStyle * This,
            /* [in] */ BSTR strAttributeName,
            /* [in][defaultvalue] */ LONG lFlags,
            /* [out][retval] */ VARIANT_BOOL *pfSuccess);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *toString )( 
            IHTMLStyle * This,
            /* [out][retval] */ BSTR *String);
        
        END_INTERFACE
    } IHTMLStyleVtbl;

    interface IHTMLStyle
    {
        CONST_VTBL struct IHTMLStyleVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLStyle_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IHTMLStyle_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IHTMLStyle_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IHTMLStyle_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IHTMLStyle_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IHTMLStyle_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IHTMLStyle_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IHTMLStyle_put_fontFamily(This,v)	\
    (This)->lpVtbl -> put_fontFamily(This,v)

#define IHTMLStyle_get_fontFamily(This,p)	\
    (This)->lpVtbl -> get_fontFamily(This,p)

#define IHTMLStyle_put_fontStyle(This,v)	\
    (This)->lpVtbl -> put_fontStyle(This,v)

#define IHTMLStyle_get_fontStyle(This,p)	\
    (This)->lpVtbl -> get_fontStyle(This,p)

#define IHTMLStyle_put_fontVariant(This,v)	\
    (This)->lpVtbl -> put_fontVariant(This,v)

#define IHTMLStyle_get_fontVariant(This,p)	\
    (This)->lpVtbl -> get_fontVariant(This,p)

#define IHTMLStyle_put_fontWeight(This,v)	\
    (This)->lpVtbl -> put_fontWeight(This,v)

#define IHTMLStyle_get_fontWeight(This,p)	\
    (This)->lpVtbl -> get_fontWeight(This,p)

#define IHTMLStyle_put_fontSize(This,v)	\
    (This)->lpVtbl -> put_fontSize(This,v)

#define IHTMLStyle_get_fontSize(This,p)	\
    (This)->lpVtbl -> get_fontSize(This,p)

#define IHTMLStyle_put_font(This,v)	\
    (This)->lpVtbl -> put_font(This,v)

#define IHTMLStyle_get_font(This,p)	\
    (This)->lpVtbl -> get_font(This,p)

#define IHTMLStyle_put_color(This,v)	\
    (This)->lpVtbl -> put_color(This,v)

#define IHTMLStyle_get_color(This,p)	\
    (This)->lpVtbl -> get_color(This,p)

#define IHTMLStyle_put_background(This,v)	\
    (This)->lpVtbl -> put_background(This,v)

#define IHTMLStyle_get_background(This,p)	\
    (This)->lpVtbl -> get_background(This,p)

#define IHTMLStyle_put_backgroundColor(This,v)	\
    (This)->lpVtbl -> put_backgroundColor(This,v)

#define IHTMLStyle_get_backgroundColor(This,p)	\
    (This)->lpVtbl -> get_backgroundColor(This,p)

#define IHTMLStyle_put_backgroundImage(This,v)	\
    (This)->lpVtbl -> put_backgroundImage(This,v)

#define IHTMLStyle_get_backgroundImage(This,p)	\
    (This)->lpVtbl -> get_backgroundImage(This,p)

#define IHTMLStyle_put_backgroundRepeat(This,v)	\
    (This)->lpVtbl -> put_backgroundRepeat(This,v)

#define IHTMLStyle_get_backgroundRepeat(This,p)	\
    (This)->lpVtbl -> get_backgroundRepeat(This,p)

#define IHTMLStyle_put_backgroundAttachment(This,v)	\
    (This)->lpVtbl -> put_backgroundAttachment(This,v)

#define IHTMLStyle_get_backgroundAttachment(This,p)	\
    (This)->lpVtbl -> get_backgroundAttachment(This,p)

#define IHTMLStyle_put_backgroundPosition(This,v)	\
    (This)->lpVtbl -> put_backgroundPosition(This,v)

#define IHTMLStyle_get_backgroundPosition(This,p)	\
    (This)->lpVtbl -> get_backgroundPosition(This,p)

#define IHTMLStyle_put_backgroundPositionX(This,v)	\
    (This)->lpVtbl -> put_backgroundPositionX(This,v)

#define IHTMLStyle_get_backgroundPositionX(This,p)	\
    (This)->lpVtbl -> get_backgroundPositionX(This,p)

#define IHTMLStyle_put_backgroundPositionY(This,v)	\
    (This)->lpVtbl -> put_backgroundPositionY(This,v)

#define IHTMLStyle_get_backgroundPositionY(This,p)	\
    (This)->lpVtbl -> get_backgroundPositionY(This,p)

#define IHTMLStyle_put_wordSpacing(This,v)	\
    (This)->lpVtbl -> put_wordSpacing(This,v)

#define IHTMLStyle_get_wordSpacing(This,p)	\
    (This)->lpVtbl -> get_wordSpacing(This,p)

#define IHTMLStyle_put_letterSpacing(This,v)	\
    (This)->lpVtbl -> put_letterSpacing(This,v)

#define IHTMLStyle_get_letterSpacing(This,p)	\
    (This)->lpVtbl -> get_letterSpacing(This,p)

#define IHTMLStyle_put_textDecoration(This,v)	\
    (This)->lpVtbl -> put_textDecoration(This,v)

#define IHTMLStyle_get_textDecoration(This,p)	\
    (This)->lpVtbl -> get_textDecoration(This,p)

#define IHTMLStyle_put_textDecorationNone(This,v)	\
    (This)->lpVtbl -> put_textDecorationNone(This,v)

#define IHTMLStyle_get_textDecorationNone(This,p)	\
    (This)->lpVtbl -> get_textDecorationNone(This,p)

#define IHTMLStyle_put_textDecorationUnderline(This,v)	\
    (This)->lpVtbl -> put_textDecorationUnderline(This,v)

#define IHTMLStyle_get_textDecorationUnderline(This,p)	\
    (This)->lpVtbl -> get_textDecorationUnderline(This,p)

#define IHTMLStyle_put_textDecorationOverline(This,v)	\
    (This)->lpVtbl -> put_textDecorationOverline(This,v)

#define IHTMLStyle_get_textDecorationOverline(This,p)	\
    (This)->lpVtbl -> get_textDecorationOverline(This,p)

#define IHTMLStyle_put_textDecorationLineThrough(This,v)	\
    (This)->lpVtbl -> put_textDecorationLineThrough(This,v)

#define IHTMLStyle_get_textDecorationLineThrough(This,p)	\
    (This)->lpVtbl -> get_textDecorationLineThrough(This,p)

#define IHTMLStyle_put_textDecorationBlink(This,v)	\
    (This)->lpVtbl -> put_textDecorationBlink(This,v)

#define IHTMLStyle_get_textDecorationBlink(This,p)	\
    (This)->lpVtbl -> get_textDecorationBlink(This,p)

#define IHTMLStyle_put_verticalAlign(This,v)	\
    (This)->lpVtbl -> put_verticalAlign(This,v)

#define IHTMLStyle_get_verticalAlign(This,p)	\
    (This)->lpVtbl -> get_verticalAlign(This,p)

#define IHTMLStyle_put_textTransform(This,v)	\
    (This)->lpVtbl -> put_textTransform(This,v)

#define IHTMLStyle_get_textTransform(This,p)	\
    (This)->lpVtbl -> get_textTransform(This,p)

#define IHTMLStyle_put_textAlign(This,v)	\
    (This)->lpVtbl -> put_textAlign(This,v)

#define IHTMLStyle_get_textAlign(This,p)	\
    (This)->lpVtbl -> get_textAlign(This,p)

#define IHTMLStyle_put_textIndent(This,v)	\
    (This)->lpVtbl -> put_textIndent(This,v)

#define IHTMLStyle_get_textIndent(This,p)	\
    (This)->lpVtbl -> get_textIndent(This,p)

#define IHTMLStyle_put_lineHeight(This,v)	\
    (This)->lpVtbl -> put_lineHeight(This,v)

#define IHTMLStyle_get_lineHeight(This,p)	\
    (This)->lpVtbl -> get_lineHeight(This,p)

#define IHTMLStyle_put_marginTop(This,v)	\
    (This)->lpVtbl -> put_marginTop(This,v)

#define IHTMLStyle_get_marginTop(This,p)	\
    (This)->lpVtbl -> get_marginTop(This,p)

#define IHTMLStyle_put_marginRight(This,v)	\
    (This)->lpVtbl -> put_marginRight(This,v)

#define IHTMLStyle_get_marginRight(This,p)	\
    (This)->lpVtbl -> get_marginRight(This,p)

#define IHTMLStyle_put_marginBottom(This,v)	\
    (This)->lpVtbl -> put_marginBottom(This,v)

#define IHTMLStyle_get_marginBottom(This,p)	\
    (This)->lpVtbl -> get_marginBottom(This,p)

#define IHTMLStyle_put_marginLeft(This,v)	\
    (This)->lpVtbl -> put_marginLeft(This,v)

#define IHTMLStyle_get_marginLeft(This,p)	\
    (This)->lpVtbl -> get_marginLeft(This,p)

#define IHTMLStyle_put_margin(This,v)	\
    (This)->lpVtbl -> put_margin(This,v)

#define IHTMLStyle_get_margin(This,p)	\
    (This)->lpVtbl -> get_margin(This,p)

#define IHTMLStyle_put_paddingTop(This,v)	\
    (This)->lpVtbl -> put_paddingTop(This,v)

#define IHTMLStyle_get_paddingTop(This,p)	\
    (This)->lpVtbl -> get_paddingTop(This,p)

#define IHTMLStyle_put_paddingRight(This,v)	\
    (This)->lpVtbl -> put_paddingRight(This,v)

#define IHTMLStyle_get_paddingRight(This,p)	\
    (This)->lpVtbl -> get_paddingRight(This,p)

#define IHTMLStyle_put_paddingBottom(This,v)	\
    (This)->lpVtbl -> put_paddingBottom(This,v)

#define IHTMLStyle_get_paddingBottom(This,p)	\
    (This)->lpVtbl -> get_paddingBottom(This,p)

#define IHTMLStyle_put_paddingLeft(This,v)	\
    (This)->lpVtbl -> put_paddingLeft(This,v)

#define IHTMLStyle_get_paddingLeft(This,p)	\
    (This)->lpVtbl -> get_paddingLeft(This,p)

#define IHTMLStyle_put_padding(This,v)	\
    (This)->lpVtbl -> put_padding(This,v)

#define IHTMLStyle_get_padding(This,p)	\
    (This)->lpVtbl -> get_padding(This,p)

#define IHTMLStyle_put_border(This,v)	\
    (This)->lpVtbl -> put_border(This,v)

#define IHTMLStyle_get_border(This,p)	\
    (This)->lpVtbl -> get_border(This,p)

#define IHTMLStyle_put_borderTop(This,v)	\
    (This)->lpVtbl -> put_borderTop(This,v)

#define IHTMLStyle_get_borderTop(This,p)	\
    (This)->lpVtbl -> get_borderTop(This,p)

#define IHTMLStyle_put_borderRight(This,v)	\
    (This)->lpVtbl -> put_borderRight(This,v)

#define IHTMLStyle_get_borderRight(This,p)	\
    (This)->lpVtbl -> get_borderRight(This,p)

#define IHTMLStyle_put_borderBottom(This,v)	\
    (This)->lpVtbl -> put_borderBottom(This,v)

#define IHTMLStyle_get_borderBottom(This,p)	\
    (This)->lpVtbl -> get_borderBottom(This,p)

#define IHTMLStyle_put_borderLeft(This,v)	\
    (This)->lpVtbl -> put_borderLeft(This,v)

#define IHTMLStyle_get_borderLeft(This,p)	\
    (This)->lpVtbl -> get_borderLeft(This,p)

#define IHTMLStyle_put_borderColor(This,v)	\
    (This)->lpVtbl -> put_borderColor(This,v)

#define IHTMLStyle_get_borderColor(This,p)	\
    (This)->lpVtbl -> get_borderColor(This,p)

#define IHTMLStyle_put_borderTopColor(This,v)	\
    (This)->lpVtbl -> put_borderTopColor(This,v)

#define IHTMLStyle_get_borderTopColor(This,p)	\
    (This)->lpVtbl -> get_borderTopColor(This,p)

#define IHTMLStyle_put_borderRightColor(This,v)	\
    (This)->lpVtbl -> put_borderRightColor(This,v)

#define IHTMLStyle_get_borderRightColor(This,p)	\
    (This)->lpVtbl -> get_borderRightColor(This,p)

#define IHTMLStyle_put_borderBottomColor(This,v)	\
    (This)->lpVtbl -> put_borderBottomColor(This,v)

#define IHTMLStyle_get_borderBottomColor(This,p)	\
    (This)->lpVtbl -> get_borderBottomColor(This,p)

#define IHTMLStyle_put_borderLeftColor(This,v)	\
    (This)->lpVtbl -> put_borderLeftColor(This,v)

#define IHTMLStyle_get_borderLeftColor(This,p)	\
    (This)->lpVtbl -> get_borderLeftColor(This,p)

#define IHTMLStyle_put_borderWidth(This,v)	\
    (This)->lpVtbl -> put_borderWidth(This,v)

#define IHTMLStyle_get_borderWidth(This,p)	\
    (This)->lpVtbl -> get_borderWidth(This,p)

#define IHTMLStyle_put_borderTopWidth(This,v)	\
    (This)->lpVtbl -> put_borderTopWidth(This,v)

#define IHTMLStyle_get_borderTopWidth(This,p)	\
    (This)->lpVtbl -> get_borderTopWidth(This,p)

#define IHTMLStyle_put_borderRightWidth(This,v)	\
    (This)->lpVtbl -> put_borderRightWidth(This,v)

#define IHTMLStyle_get_borderRightWidth(This,p)	\
    (This)->lpVtbl -> get_borderRightWidth(This,p)

#define IHTMLStyle_put_borderBottomWidth(This,v)	\
    (This)->lpVtbl -> put_borderBottomWidth(This,v)

#define IHTMLStyle_get_borderBottomWidth(This,p)	\
    (This)->lpVtbl -> get_borderBottomWidth(This,p)

#define IHTMLStyle_put_borderLeftWidth(This,v)	\
    (This)->lpVtbl -> put_borderLeftWidth(This,v)

#define IHTMLStyle_get_borderLeftWidth(This,p)	\
    (This)->lpVtbl -> get_borderLeftWidth(This,p)

#define IHTMLStyle_put_borderStyle(This,v)	\
    (This)->lpVtbl -> put_borderStyle(This,v)

#define IHTMLStyle_get_borderStyle(This,p)	\
    (This)->lpVtbl -> get_borderStyle(This,p)

#define IHTMLStyle_put_borderTopStyle(This,v)	\
    (This)->lpVtbl -> put_borderTopStyle(This,v)

#define IHTMLStyle_get_borderTopStyle(This,p)	\
    (This)->lpVtbl -> get_borderTopStyle(This,p)

#define IHTMLStyle_put_borderRightStyle(This,v)	\
    (This)->lpVtbl -> put_borderRightStyle(This,v)

#define IHTMLStyle_get_borderRightStyle(This,p)	\
    (This)->lpVtbl -> get_borderRightStyle(This,p)

#define IHTMLStyle_put_borderBottomStyle(This,v)	\
    (This)->lpVtbl -> put_borderBottomStyle(This,v)

#define IHTMLStyle_get_borderBottomStyle(This,p)	\
    (This)->lpVtbl -> get_borderBottomStyle(This,p)

#define IHTMLStyle_put_borderLeftStyle(This,v)	\
    (This)->lpVtbl -> put_borderLeftStyle(This,v)

#define IHTMLStyle_get_borderLeftStyle(This,p)	\
    (This)->lpVtbl -> get_borderLeftStyle(This,p)

#define IHTMLStyle_put_width(This,v)	\
    (This)->lpVtbl -> put_width(This,v)

#define IHTMLStyle_get_width(This,p)	\
    (This)->lpVtbl -> get_width(This,p)

#define IHTMLStyle_put_height(This,v)	\
    (This)->lpVtbl -> put_height(This,v)

#define IHTMLStyle_get_height(This,p)	\
    (This)->lpVtbl -> get_height(This,p)

#define IHTMLStyle_put_styleFloat(This,v)	\
    (This)->lpVtbl -> put_styleFloat(This,v)

#define IHTMLStyle_get_styleFloat(This,p)	\
    (This)->lpVtbl -> get_styleFloat(This,p)

#define IHTMLStyle_put_clear(This,v)	\
    (This)->lpVtbl -> put_clear(This,v)

#define IHTMLStyle_get_clear(This,p)	\
    (This)->lpVtbl -> get_clear(This,p)

#define IHTMLStyle_put_display(This,v)	\
    (This)->lpVtbl -> put_display(This,v)

#define IHTMLStyle_get_display(This,p)	\
    (This)->lpVtbl -> get_display(This,p)

#define IHTMLStyle_put_visibility(This,v)	\
    (This)->lpVtbl -> put_visibility(This,v)

#define IHTMLStyle_get_visibility(This,p)	\
    (This)->lpVtbl -> get_visibility(This,p)

#define IHTMLStyle_put_listStyleType(This,v)	\
    (This)->lpVtbl -> put_listStyleType(This,v)

#define IHTMLStyle_get_listStyleType(This,p)	\
    (This)->lpVtbl -> get_listStyleType(This,p)

#define IHTMLStyle_put_listStylePosition(This,v)	\
    (This)->lpVtbl -> put_listStylePosition(This,v)

#define IHTMLStyle_get_listStylePosition(This,p)	\
    (This)->lpVtbl -> get_listStylePosition(This,p)

#define IHTMLStyle_put_listStyleImage(This,v)	\
    (This)->lpVtbl -> put_listStyleImage(This,v)

#define IHTMLStyle_get_listStyleImage(This,p)	\
    (This)->lpVtbl -> get_listStyleImage(This,p)

#define IHTMLStyle_put_listStyle(This,v)	\
    (This)->lpVtbl -> put_listStyle(This,v)

#define IHTMLStyle_get_listStyle(This,p)	\
    (This)->lpVtbl -> get_listStyle(This,p)

#define IHTMLStyle_put_whiteSpace(This,v)	\
    (This)->lpVtbl -> put_whiteSpace(This,v)

#define IHTMLStyle_get_whiteSpace(This,p)	\
    (This)->lpVtbl -> get_whiteSpace(This,p)

#define IHTMLStyle_put_top(This,v)	\
    (This)->lpVtbl -> put_top(This,v)

#define IHTMLStyle_get_top(This,p)	\
    (This)->lpVtbl -> get_top(This,p)

#define IHTMLStyle_put_left(This,v)	\
    (This)->lpVtbl -> put_left(This,v)

#define IHTMLStyle_get_left(This,p)	\
    (This)->lpVtbl -> get_left(This,p)

#define IHTMLStyle_get_position(This,p)	\
    (This)->lpVtbl -> get_position(This,p)

#define IHTMLStyle_put_zIndex(This,v)	\
    (This)->lpVtbl -> put_zIndex(This,v)

#define IHTMLStyle_get_zIndex(This,p)	\
    (This)->lpVtbl -> get_zIndex(This,p)

#define IHTMLStyle_put_overflow(This,v)	\
    (This)->lpVtbl -> put_overflow(This,v)

#define IHTMLStyle_get_overflow(This,p)	\
    (This)->lpVtbl -> get_overflow(This,p)

#define IHTMLStyle_put_pageBreakBefore(This,v)	\
    (This)->lpVtbl -> put_pageBreakBefore(This,v)

#define IHTMLStyle_get_pageBreakBefore(This,p)	\
    (This)->lpVtbl -> get_pageBreakBefore(This,p)

#define IHTMLStyle_put_pageBreakAfter(This,v)	\
    (This)->lpVtbl -> put_pageBreakAfter(This,v)

#define IHTMLStyle_get_pageBreakAfter(This,p)	\
    (This)->lpVtbl -> get_pageBreakAfter(This,p)

#define IHTMLStyle_put_cssText(This,v)	\
    (This)->lpVtbl -> put_cssText(This,v)

#define IHTMLStyle_get_cssText(This,p)	\
    (This)->lpVtbl -> get_cssText(This,p)

#define IHTMLStyle_put_pixelTop(This,v)	\
    (This)->lpVtbl -> put_pixelTop(This,v)

#define IHTMLStyle_get_pixelTop(This,p)	\
    (This)->lpVtbl -> get_pixelTop(This,p)

#define IHTMLStyle_put_pixelLeft(This,v)	\
    (This)->lpVtbl -> put_pixelLeft(This,v)

#define IHTMLStyle_get_pixelLeft(This,p)	\
    (This)->lpVtbl -> get_pixelLeft(This,p)

#define IHTMLStyle_put_pixelWidth(This,v)	\
    (This)->lpVtbl -> put_pixelWidth(This,v)

#define IHTMLStyle_get_pixelWidth(This,p)	\
    (This)->lpVtbl -> get_pixelWidth(This,p)

#define IHTMLStyle_put_pixelHeight(This,v)	\
    (This)->lpVtbl -> put_pixelHeight(This,v)

#define IHTMLStyle_get_pixelHeight(This,p)	\
    (This)->lpVtbl -> get_pixelHeight(This,p)

#define IHTMLStyle_put_posTop(This,v)	\
    (This)->lpVtbl -> put_posTop(This,v)

#define IHTMLStyle_get_posTop(This,p)	\
    (This)->lpVtbl -> get_posTop(This,p)

#define IHTMLStyle_put_posLeft(This,v)	\
    (This)->lpVtbl -> put_posLeft(This,v)

#define IHTMLStyle_get_posLeft(This,p)	\
    (This)->lpVtbl -> get_posLeft(This,p)

#define IHTMLStyle_put_posWidth(This,v)	\
    (This)->lpVtbl -> put_posWidth(This,v)

#define IHTMLStyle_get_posWidth(This,p)	\
    (This)->lpVtbl -> get_posWidth(This,p)

#define IHTMLStyle_put_posHeight(This,v)	\
    (This)->lpVtbl -> put_posHeight(This,v)

#define IHTMLStyle_get_posHeight(This,p)	\
    (This)->lpVtbl -> get_posHeight(This,p)

#define IHTMLStyle_put_cursor(This,v)	\
    (This)->lpVtbl -> put_cursor(This,v)

#define IHTMLStyle_get_cursor(This,p)	\
    (This)->lpVtbl -> get_cursor(This,p)

#define IHTMLStyle_put_clip(This,v)	\
    (This)->lpVtbl -> put_clip(This,v)

#define IHTMLStyle_get_clip(This,p)	\
    (This)->lpVtbl -> get_clip(This,p)

#define IHTMLStyle_put_filter(This,v)	\
    (This)->lpVtbl -> put_filter(This,v)

#define IHTMLStyle_get_filter(This,p)	\
    (This)->lpVtbl -> get_filter(This,p)

#define IHTMLStyle_setAttribute(This,strAttributeName,AttributeValue,lFlags)	\
    (This)->lpVtbl -> setAttribute(This,strAttributeName,AttributeValue,lFlags)

#define IHTMLStyle_getAttribute(This,strAttributeName,lFlags,AttributeValue)	\
    (This)->lpVtbl -> getAttribute(This,strAttributeName,lFlags,AttributeValue)

#define IHTMLStyle_removeAttribute(This,strAttributeName,lFlags,pfSuccess)	\
    (This)->lpVtbl -> removeAttribute(This,strAttributeName,lFlags,pfSuccess)

#define IHTMLStyle_toString(This,String)	\
    (This)->lpVtbl -> toString(This,String)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_fontFamily_Proxy( 
    IHTMLStyle * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle_put_fontFamily_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_fontFamily_Proxy( 
    IHTMLStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLStyle_get_fontFamily_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_fontStyle_Proxy( 
    IHTMLStyle * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle_put_fontStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_fontStyle_Proxy( 
    IHTMLStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLStyle_get_fontStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_fontVariant_Proxy( 
    IHTMLStyle * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle_put_fontVariant_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_fontVariant_Proxy( 
    IHTMLStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLStyle_get_fontVariant_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_fontWeight_Proxy( 
    IHTMLStyle * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle_put_fontWeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_fontWeight_Proxy( 
    IHTMLStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLStyle_get_fontWeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_fontSize_Proxy( 
    IHTMLStyle * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLStyle_put_fontSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_fontSize_Proxy( 
    IHTMLStyle * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLStyle_get_fontSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_font_Proxy( 
    IHTMLStyle * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle_put_font_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_font_Proxy( 
    IHTMLStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLStyle_get_font_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_color_Proxy( 
    IHTMLStyle * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLStyle_put_color_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_color_Proxy( 
    IHTMLStyle * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLStyle_get_color_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_background_Proxy( 
    IHTMLStyle * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle_put_background_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_background_Proxy( 
    IHTMLStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLStyle_get_background_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_backgroundColor_Proxy( 
    IHTMLStyle * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLStyle_put_backgroundColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_backgroundColor_Proxy( 
    IHTMLStyle * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLStyle_get_backgroundColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_backgroundImage_Proxy( 
    IHTMLStyle * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle_put_backgroundImage_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_backgroundImage_Proxy( 
    IHTMLStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLStyle_get_backgroundImage_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_backgroundRepeat_Proxy( 
    IHTMLStyle * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle_put_backgroundRepeat_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_backgroundRepeat_Proxy( 
    IHTMLStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLStyle_get_backgroundRepeat_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_backgroundAttachment_Proxy( 
    IHTMLStyle * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle_put_backgroundAttachment_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_backgroundAttachment_Proxy( 
    IHTMLStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLStyle_get_backgroundAttachment_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_backgroundPosition_Proxy( 
    IHTMLStyle * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle_put_backgroundPosition_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_backgroundPosition_Proxy( 
    IHTMLStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLStyle_get_backgroundPosition_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_backgroundPositionX_Proxy( 
    IHTMLStyle * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLStyle_put_backgroundPositionX_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_backgroundPositionX_Proxy( 
    IHTMLStyle * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLStyle_get_backgroundPositionX_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_backgroundPositionY_Proxy( 
    IHTMLStyle * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLStyle_put_backgroundPositionY_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_backgroundPositionY_Proxy( 
    IHTMLStyle * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLStyle_get_backgroundPositionY_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_wordSpacing_Proxy( 
    IHTMLStyle * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLStyle_put_wordSpacing_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_wordSpacing_Proxy( 
    IHTMLStyle * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLStyle_get_wordSpacing_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_letterSpacing_Proxy( 
    IHTMLStyle * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLStyle_put_letterSpacing_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_letterSpacing_Proxy( 
    IHTMLStyle * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLStyle_get_letterSpacing_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_textDecoration_Proxy( 
    IHTMLStyle * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle_put_textDecoration_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_textDecoration_Proxy( 
    IHTMLStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLStyle_get_textDecoration_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_textDecorationNone_Proxy( 
    IHTMLStyle * This,
    /* [in] */ VARIANT_BOOL v);


void __RPC_STUB IHTMLStyle_put_textDecorationNone_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_textDecorationNone_Proxy( 
    IHTMLStyle * This,
    /* [out][retval] */ VARIANT_BOOL *p);


void __RPC_STUB IHTMLStyle_get_textDecorationNone_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_textDecorationUnderline_Proxy( 
    IHTMLStyle * This,
    /* [in] */ VARIANT_BOOL v);


void __RPC_STUB IHTMLStyle_put_textDecorationUnderline_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_textDecorationUnderline_Proxy( 
    IHTMLStyle * This,
    /* [out][retval] */ VARIANT_BOOL *p);


void __RPC_STUB IHTMLStyle_get_textDecorationUnderline_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_textDecorationOverline_Proxy( 
    IHTMLStyle * This,
    /* [in] */ VARIANT_BOOL v);


void __RPC_STUB IHTMLStyle_put_textDecorationOverline_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_textDecorationOverline_Proxy( 
    IHTMLStyle * This,
    /* [out][retval] */ VARIANT_BOOL *p);


void __RPC_STUB IHTMLStyle_get_textDecorationOverline_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_textDecorationLineThrough_Proxy( 
    IHTMLStyle * This,
    /* [in] */ VARIANT_BOOL v);


void __RPC_STUB IHTMLStyle_put_textDecorationLineThrough_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_textDecorationLineThrough_Proxy( 
    IHTMLStyle * This,
    /* [out][retval] */ VARIANT_BOOL *p);


void __RPC_STUB IHTMLStyle_get_textDecorationLineThrough_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_textDecorationBlink_Proxy( 
    IHTMLStyle * This,
    /* [in] */ VARIANT_BOOL v);


void __RPC_STUB IHTMLStyle_put_textDecorationBlink_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_textDecorationBlink_Proxy( 
    IHTMLStyle * This,
    /* [out][retval] */ VARIANT_BOOL *p);


void __RPC_STUB IHTMLStyle_get_textDecorationBlink_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_verticalAlign_Proxy( 
    IHTMLStyle * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLStyle_put_verticalAlign_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_verticalAlign_Proxy( 
    IHTMLStyle * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLStyle_get_verticalAlign_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_textTransform_Proxy( 
    IHTMLStyle * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle_put_textTransform_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_textTransform_Proxy( 
    IHTMLStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLStyle_get_textTransform_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_textAlign_Proxy( 
    IHTMLStyle * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle_put_textAlign_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_textAlign_Proxy( 
    IHTMLStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLStyle_get_textAlign_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_textIndent_Proxy( 
    IHTMLStyle * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLStyle_put_textIndent_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_textIndent_Proxy( 
    IHTMLStyle * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLStyle_get_textIndent_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_lineHeight_Proxy( 
    IHTMLStyle * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLStyle_put_lineHeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_lineHeight_Proxy( 
    IHTMLStyle * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLStyle_get_lineHeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_marginTop_Proxy( 
    IHTMLStyle * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLStyle_put_marginTop_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_marginTop_Proxy( 
    IHTMLStyle * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLStyle_get_marginTop_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_marginRight_Proxy( 
    IHTMLStyle * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLStyle_put_marginRight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_marginRight_Proxy( 
    IHTMLStyle * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLStyle_get_marginRight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_marginBottom_Proxy( 
    IHTMLStyle * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLStyle_put_marginBottom_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_marginBottom_Proxy( 
    IHTMLStyle * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLStyle_get_marginBottom_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_marginLeft_Proxy( 
    IHTMLStyle * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLStyle_put_marginLeft_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_marginLeft_Proxy( 
    IHTMLStyle * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLStyle_get_marginLeft_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_margin_Proxy( 
    IHTMLStyle * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle_put_margin_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_margin_Proxy( 
    IHTMLStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLStyle_get_margin_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_paddingTop_Proxy( 
    IHTMLStyle * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLStyle_put_paddingTop_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_paddingTop_Proxy( 
    IHTMLStyle * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLStyle_get_paddingTop_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_paddingRight_Proxy( 
    IHTMLStyle * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLStyle_put_paddingRight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_paddingRight_Proxy( 
    IHTMLStyle * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLStyle_get_paddingRight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_paddingBottom_Proxy( 
    IHTMLStyle * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLStyle_put_paddingBottom_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_paddingBottom_Proxy( 
    IHTMLStyle * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLStyle_get_paddingBottom_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_paddingLeft_Proxy( 
    IHTMLStyle * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLStyle_put_paddingLeft_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_paddingLeft_Proxy( 
    IHTMLStyle * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLStyle_get_paddingLeft_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_padding_Proxy( 
    IHTMLStyle * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle_put_padding_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_padding_Proxy( 
    IHTMLStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLStyle_get_padding_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_border_Proxy( 
    IHTMLStyle * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle_put_border_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_border_Proxy( 
    IHTMLStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLStyle_get_border_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_borderTop_Proxy( 
    IHTMLStyle * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle_put_borderTop_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_borderTop_Proxy( 
    IHTMLStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLStyle_get_borderTop_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_borderRight_Proxy( 
    IHTMLStyle * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle_put_borderRight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_borderRight_Proxy( 
    IHTMLStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLStyle_get_borderRight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_borderBottom_Proxy( 
    IHTMLStyle * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle_put_borderBottom_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_borderBottom_Proxy( 
    IHTMLStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLStyle_get_borderBottom_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_borderLeft_Proxy( 
    IHTMLStyle * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle_put_borderLeft_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_borderLeft_Proxy( 
    IHTMLStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLStyle_get_borderLeft_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_borderColor_Proxy( 
    IHTMLStyle * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle_put_borderColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_borderColor_Proxy( 
    IHTMLStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLStyle_get_borderColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_borderTopColor_Proxy( 
    IHTMLStyle * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLStyle_put_borderTopColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_borderTopColor_Proxy( 
    IHTMLStyle * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLStyle_get_borderTopColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_borderRightColor_Proxy( 
    IHTMLStyle * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLStyle_put_borderRightColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_borderRightColor_Proxy( 
    IHTMLStyle * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLStyle_get_borderRightColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_borderBottomColor_Proxy( 
    IHTMLStyle * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLStyle_put_borderBottomColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_borderBottomColor_Proxy( 
    IHTMLStyle * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLStyle_get_borderBottomColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_borderLeftColor_Proxy( 
    IHTMLStyle * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLStyle_put_borderLeftColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_borderLeftColor_Proxy( 
    IHTMLStyle * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLStyle_get_borderLeftColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_borderWidth_Proxy( 
    IHTMLStyle * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle_put_borderWidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_borderWidth_Proxy( 
    IHTMLStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLStyle_get_borderWidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_borderTopWidth_Proxy( 
    IHTMLStyle * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLStyle_put_borderTopWidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_borderTopWidth_Proxy( 
    IHTMLStyle * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLStyle_get_borderTopWidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_borderRightWidth_Proxy( 
    IHTMLStyle * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLStyle_put_borderRightWidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_borderRightWidth_Proxy( 
    IHTMLStyle * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLStyle_get_borderRightWidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_borderBottomWidth_Proxy( 
    IHTMLStyle * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLStyle_put_borderBottomWidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_borderBottomWidth_Proxy( 
    IHTMLStyle * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLStyle_get_borderBottomWidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_borderLeftWidth_Proxy( 
    IHTMLStyle * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLStyle_put_borderLeftWidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_borderLeftWidth_Proxy( 
    IHTMLStyle * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLStyle_get_borderLeftWidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_borderStyle_Proxy( 
    IHTMLStyle * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle_put_borderStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_borderStyle_Proxy( 
    IHTMLStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLStyle_get_borderStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_borderTopStyle_Proxy( 
    IHTMLStyle * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle_put_borderTopStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_borderTopStyle_Proxy( 
    IHTMLStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLStyle_get_borderTopStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_borderRightStyle_Proxy( 
    IHTMLStyle * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle_put_borderRightStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_borderRightStyle_Proxy( 
    IHTMLStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLStyle_get_borderRightStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_borderBottomStyle_Proxy( 
    IHTMLStyle * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle_put_borderBottomStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_borderBottomStyle_Proxy( 
    IHTMLStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLStyle_get_borderBottomStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_borderLeftStyle_Proxy( 
    IHTMLStyle * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle_put_borderLeftStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_borderLeftStyle_Proxy( 
    IHTMLStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLStyle_get_borderLeftStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_width_Proxy( 
    IHTMLStyle * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLStyle_put_width_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_width_Proxy( 
    IHTMLStyle * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLStyle_get_width_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_height_Proxy( 
    IHTMLStyle * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLStyle_put_height_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_height_Proxy( 
    IHTMLStyle * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLStyle_get_height_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_styleFloat_Proxy( 
    IHTMLStyle * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle_put_styleFloat_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_styleFloat_Proxy( 
    IHTMLStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLStyle_get_styleFloat_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_clear_Proxy( 
    IHTMLStyle * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle_put_clear_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_clear_Proxy( 
    IHTMLStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLStyle_get_clear_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_display_Proxy( 
    IHTMLStyle * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle_put_display_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_display_Proxy( 
    IHTMLStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLStyle_get_display_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_visibility_Proxy( 
    IHTMLStyle * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle_put_visibility_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_visibility_Proxy( 
    IHTMLStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLStyle_get_visibility_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_listStyleType_Proxy( 
    IHTMLStyle * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle_put_listStyleType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_listStyleType_Proxy( 
    IHTMLStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLStyle_get_listStyleType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_listStylePosition_Proxy( 
    IHTMLStyle * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle_put_listStylePosition_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_listStylePosition_Proxy( 
    IHTMLStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLStyle_get_listStylePosition_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_listStyleImage_Proxy( 
    IHTMLStyle * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle_put_listStyleImage_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_listStyleImage_Proxy( 
    IHTMLStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLStyle_get_listStyleImage_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_listStyle_Proxy( 
    IHTMLStyle * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle_put_listStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_listStyle_Proxy( 
    IHTMLStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLStyle_get_listStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_whiteSpace_Proxy( 
    IHTMLStyle * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle_put_whiteSpace_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_whiteSpace_Proxy( 
    IHTMLStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLStyle_get_whiteSpace_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_top_Proxy( 
    IHTMLStyle * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLStyle_put_top_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_top_Proxy( 
    IHTMLStyle * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLStyle_get_top_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_left_Proxy( 
    IHTMLStyle * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLStyle_put_left_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_left_Proxy( 
    IHTMLStyle * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLStyle_get_left_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_position_Proxy( 
    IHTMLStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLStyle_get_position_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_zIndex_Proxy( 
    IHTMLStyle * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLStyle_put_zIndex_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_zIndex_Proxy( 
    IHTMLStyle * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLStyle_get_zIndex_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_overflow_Proxy( 
    IHTMLStyle * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle_put_overflow_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_overflow_Proxy( 
    IHTMLStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLStyle_get_overflow_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_pageBreakBefore_Proxy( 
    IHTMLStyle * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle_put_pageBreakBefore_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_pageBreakBefore_Proxy( 
    IHTMLStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLStyle_get_pageBreakBefore_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_pageBreakAfter_Proxy( 
    IHTMLStyle * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle_put_pageBreakAfter_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_pageBreakAfter_Proxy( 
    IHTMLStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLStyle_get_pageBreakAfter_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_cssText_Proxy( 
    IHTMLStyle * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle_put_cssText_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_cssText_Proxy( 
    IHTMLStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLStyle_get_cssText_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [hidden][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_pixelTop_Proxy( 
    IHTMLStyle * This,
    /* [in] */ long v);


void __RPC_STUB IHTMLStyle_put_pixelTop_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [hidden][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_pixelTop_Proxy( 
    IHTMLStyle * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLStyle_get_pixelTop_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [hidden][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_pixelLeft_Proxy( 
    IHTMLStyle * This,
    /* [in] */ long v);


void __RPC_STUB IHTMLStyle_put_pixelLeft_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [hidden][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_pixelLeft_Proxy( 
    IHTMLStyle * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLStyle_get_pixelLeft_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [hidden][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_pixelWidth_Proxy( 
    IHTMLStyle * This,
    /* [in] */ long v);


void __RPC_STUB IHTMLStyle_put_pixelWidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [hidden][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_pixelWidth_Proxy( 
    IHTMLStyle * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLStyle_get_pixelWidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [hidden][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_pixelHeight_Proxy( 
    IHTMLStyle * This,
    /* [in] */ long v);


void __RPC_STUB IHTMLStyle_put_pixelHeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [hidden][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_pixelHeight_Proxy( 
    IHTMLStyle * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLStyle_get_pixelHeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_posTop_Proxy( 
    IHTMLStyle * This,
    /* [in] */ float v);


void __RPC_STUB IHTMLStyle_put_posTop_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_posTop_Proxy( 
    IHTMLStyle * This,
    /* [out][retval] */ float *p);


void __RPC_STUB IHTMLStyle_get_posTop_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_posLeft_Proxy( 
    IHTMLStyle * This,
    /* [in] */ float v);


void __RPC_STUB IHTMLStyle_put_posLeft_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_posLeft_Proxy( 
    IHTMLStyle * This,
    /* [out][retval] */ float *p);


void __RPC_STUB IHTMLStyle_get_posLeft_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_posWidth_Proxy( 
    IHTMLStyle * This,
    /* [in] */ float v);


void __RPC_STUB IHTMLStyle_put_posWidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_posWidth_Proxy( 
    IHTMLStyle * This,
    /* [out][retval] */ float *p);


void __RPC_STUB IHTMLStyle_get_posWidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_posHeight_Proxy( 
    IHTMLStyle * This,
    /* [in] */ float v);


void __RPC_STUB IHTMLStyle_put_posHeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_posHeight_Proxy( 
    IHTMLStyle * This,
    /* [out][retval] */ float *p);


void __RPC_STUB IHTMLStyle_get_posHeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_cursor_Proxy( 
    IHTMLStyle * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle_put_cursor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_cursor_Proxy( 
    IHTMLStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLStyle_get_cursor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_clip_Proxy( 
    IHTMLStyle * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle_put_clip_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_clip_Proxy( 
    IHTMLStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLStyle_get_clip_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_put_filter_Proxy( 
    IHTMLStyle * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle_put_filter_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_get_filter_Proxy( 
    IHTMLStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLStyle_get_filter_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_setAttribute_Proxy( 
    IHTMLStyle * This,
    /* [in] */ BSTR strAttributeName,
    /* [in] */ VARIANT AttributeValue,
    /* [in][defaultvalue] */ LONG lFlags);


void __RPC_STUB IHTMLStyle_setAttribute_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_getAttribute_Proxy( 
    IHTMLStyle * This,
    /* [in] */ BSTR strAttributeName,
    /* [in][defaultvalue] */ LONG lFlags,
    /* [out][retval] */ VARIANT *AttributeValue);


void __RPC_STUB IHTMLStyle_getAttribute_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_removeAttribute_Proxy( 
    IHTMLStyle * This,
    /* [in] */ BSTR strAttributeName,
    /* [in][defaultvalue] */ LONG lFlags,
    /* [out][retval] */ VARIANT_BOOL *pfSuccess);


void __RPC_STUB IHTMLStyle_removeAttribute_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLStyle_toString_Proxy( 
    IHTMLStyle * This,
    /* [out][retval] */ BSTR *String);


void __RPC_STUB IHTMLStyle_toString_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLStyle_INTERFACE_DEFINED__ */


#ifndef __IHTMLStyle2_INTERFACE_DEFINED__
#define __IHTMLStyle2_INTERFACE_DEFINED__

/* interface IHTMLStyle2 */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLStyle2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f4a2-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLStyle2 : public IDispatch
    {
    public:
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_tableLayout( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_tableLayout( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderCollapse( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderCollapse( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_direction( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_direction( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_behavior( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_behavior( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE setExpression( 
            /* [in] */ BSTR propname,
            /* [in] */ BSTR expression,
            /* [in][defaultvalue] */ BSTR language = L"") = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE getExpression( 
            /* [in] */ BSTR propname,
            /* [out][retval] */ VARIANT *expression) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE removeExpression( 
            /* [in] */ BSTR propname,
            /* [out][retval] */ VARIANT_BOOL *pfSuccess) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_position( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_position( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_unicodeBidi( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_unicodeBidi( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_bottom( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_bottom( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_right( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_right( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [hidden][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_pixelBottom( 
            /* [in] */ long v) = 0;
        
        virtual /* [hidden][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_pixelBottom( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [hidden][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_pixelRight( 
            /* [in] */ long v) = 0;
        
        virtual /* [hidden][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_pixelRight( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_posBottom( 
            /* [in] */ float v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_posBottom( 
            /* [out][retval] */ float *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_posRight( 
            /* [in] */ float v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_posRight( 
            /* [out][retval] */ float *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_imeMode( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_imeMode( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_rubyAlign( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_rubyAlign( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_rubyPosition( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_rubyPosition( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_rubyOverhang( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_rubyOverhang( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_layoutGridChar( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_layoutGridChar( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_layoutGridLine( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_layoutGridLine( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_layoutGridMode( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_layoutGridMode( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_layoutGridType( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_layoutGridType( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_layoutGrid( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_layoutGrid( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_wordBreak( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_wordBreak( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_lineBreak( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_lineBreak( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textJustify( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textJustify( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textJustifyTrim( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textJustifyTrim( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textKashida( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textKashida( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textAutospace( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textAutospace( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_overflowX( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_overflowX( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_overflowY( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_overflowY( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_accelerator( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_accelerator( 
            /* [out][retval] */ BSTR *p) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLStyle2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IHTMLStyle2 * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IHTMLStyle2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IHTMLStyle2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IHTMLStyle2 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IHTMLStyle2 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IHTMLStyle2 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IHTMLStyle2 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_tableLayout )( 
            IHTMLStyle2 * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_tableLayout )( 
            IHTMLStyle2 * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_borderCollapse )( 
            IHTMLStyle2 * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderCollapse )( 
            IHTMLStyle2 * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_direction )( 
            IHTMLStyle2 * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_direction )( 
            IHTMLStyle2 * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_behavior )( 
            IHTMLStyle2 * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_behavior )( 
            IHTMLStyle2 * This,
            /* [out][retval] */ BSTR *p);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *setExpression )( 
            IHTMLStyle2 * This,
            /* [in] */ BSTR propname,
            /* [in] */ BSTR expression,
            /* [in][defaultvalue] */ BSTR language);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *getExpression )( 
            IHTMLStyle2 * This,
            /* [in] */ BSTR propname,
            /* [out][retval] */ VARIANT *expression);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *removeExpression )( 
            IHTMLStyle2 * This,
            /* [in] */ BSTR propname,
            /* [out][retval] */ VARIANT_BOOL *pfSuccess);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_position )( 
            IHTMLStyle2 * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_position )( 
            IHTMLStyle2 * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_unicodeBidi )( 
            IHTMLStyle2 * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_unicodeBidi )( 
            IHTMLStyle2 * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_bottom )( 
            IHTMLStyle2 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_bottom )( 
            IHTMLStyle2 * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_right )( 
            IHTMLStyle2 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_right )( 
            IHTMLStyle2 * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [hidden][bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_pixelBottom )( 
            IHTMLStyle2 * This,
            /* [in] */ long v);
        
        /* [hidden][bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_pixelBottom )( 
            IHTMLStyle2 * This,
            /* [out][retval] */ long *p);
        
        /* [hidden][bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_pixelRight )( 
            IHTMLStyle2 * This,
            /* [in] */ long v);
        
        /* [hidden][bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_pixelRight )( 
            IHTMLStyle2 * This,
            /* [out][retval] */ long *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_posBottom )( 
            IHTMLStyle2 * This,
            /* [in] */ float v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_posBottom )( 
            IHTMLStyle2 * This,
            /* [out][retval] */ float *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_posRight )( 
            IHTMLStyle2 * This,
            /* [in] */ float v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_posRight )( 
            IHTMLStyle2 * This,
            /* [out][retval] */ float *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_imeMode )( 
            IHTMLStyle2 * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_imeMode )( 
            IHTMLStyle2 * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_rubyAlign )( 
            IHTMLStyle2 * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_rubyAlign )( 
            IHTMLStyle2 * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_rubyPosition )( 
            IHTMLStyle2 * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_rubyPosition )( 
            IHTMLStyle2 * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_rubyOverhang )( 
            IHTMLStyle2 * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_rubyOverhang )( 
            IHTMLStyle2 * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_layoutGridChar )( 
            IHTMLStyle2 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_layoutGridChar )( 
            IHTMLStyle2 * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_layoutGridLine )( 
            IHTMLStyle2 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_layoutGridLine )( 
            IHTMLStyle2 * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_layoutGridMode )( 
            IHTMLStyle2 * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_layoutGridMode )( 
            IHTMLStyle2 * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_layoutGridType )( 
            IHTMLStyle2 * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_layoutGridType )( 
            IHTMLStyle2 * This,
            /* [out][retval] */ BSTR *p);
        
        /* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_layoutGrid )( 
            IHTMLStyle2 * This,
            /* [in] */ BSTR v);
        
        /* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_layoutGrid )( 
            IHTMLStyle2 * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_wordBreak )( 
            IHTMLStyle2 * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_wordBreak )( 
            IHTMLStyle2 * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_lineBreak )( 
            IHTMLStyle2 * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_lineBreak )( 
            IHTMLStyle2 * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_textJustify )( 
            IHTMLStyle2 * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_textJustify )( 
            IHTMLStyle2 * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_textJustifyTrim )( 
            IHTMLStyle2 * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_textJustifyTrim )( 
            IHTMLStyle2 * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_textKashida )( 
            IHTMLStyle2 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_textKashida )( 
            IHTMLStyle2 * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_textAutospace )( 
            IHTMLStyle2 * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_textAutospace )( 
            IHTMLStyle2 * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_overflowX )( 
            IHTMLStyle2 * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_overflowX )( 
            IHTMLStyle2 * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_overflowY )( 
            IHTMLStyle2 * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_overflowY )( 
            IHTMLStyle2 * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_accelerator )( 
            IHTMLStyle2 * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_accelerator )( 
            IHTMLStyle2 * This,
            /* [out][retval] */ BSTR *p);
        
        END_INTERFACE
    } IHTMLStyle2Vtbl;

    interface IHTMLStyle2
    {
        CONST_VTBL struct IHTMLStyle2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLStyle2_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IHTMLStyle2_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IHTMLStyle2_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IHTMLStyle2_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IHTMLStyle2_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IHTMLStyle2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IHTMLStyle2_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IHTMLStyle2_put_tableLayout(This,v)	\
    (This)->lpVtbl -> put_tableLayout(This,v)

#define IHTMLStyle2_get_tableLayout(This,p)	\
    (This)->lpVtbl -> get_tableLayout(This,p)

#define IHTMLStyle2_put_borderCollapse(This,v)	\
    (This)->lpVtbl -> put_borderCollapse(This,v)

#define IHTMLStyle2_get_borderCollapse(This,p)	\
    (This)->lpVtbl -> get_borderCollapse(This,p)

#define IHTMLStyle2_put_direction(This,v)	\
    (This)->lpVtbl -> put_direction(This,v)

#define IHTMLStyle2_get_direction(This,p)	\
    (This)->lpVtbl -> get_direction(This,p)

#define IHTMLStyle2_put_behavior(This,v)	\
    (This)->lpVtbl -> put_behavior(This,v)

#define IHTMLStyle2_get_behavior(This,p)	\
    (This)->lpVtbl -> get_behavior(This,p)

#define IHTMLStyle2_setExpression(This,propname,expression,language)	\
    (This)->lpVtbl -> setExpression(This,propname,expression,language)

#define IHTMLStyle2_getExpression(This,propname,expression)	\
    (This)->lpVtbl -> getExpression(This,propname,expression)

#define IHTMLStyle2_removeExpression(This,propname,pfSuccess)	\
    (This)->lpVtbl -> removeExpression(This,propname,pfSuccess)

#define IHTMLStyle2_put_position(This,v)	\
    (This)->lpVtbl -> put_position(This,v)

#define IHTMLStyle2_get_position(This,p)	\
    (This)->lpVtbl -> get_position(This,p)

#define IHTMLStyle2_put_unicodeBidi(This,v)	\
    (This)->lpVtbl -> put_unicodeBidi(This,v)

#define IHTMLStyle2_get_unicodeBidi(This,p)	\
    (This)->lpVtbl -> get_unicodeBidi(This,p)

#define IHTMLStyle2_put_bottom(This,v)	\
    (This)->lpVtbl -> put_bottom(This,v)

#define IHTMLStyle2_get_bottom(This,p)	\
    (This)->lpVtbl -> get_bottom(This,p)

#define IHTMLStyle2_put_right(This,v)	\
    (This)->lpVtbl -> put_right(This,v)

#define IHTMLStyle2_get_right(This,p)	\
    (This)->lpVtbl -> get_right(This,p)

#define IHTMLStyle2_put_pixelBottom(This,v)	\
    (This)->lpVtbl -> put_pixelBottom(This,v)

#define IHTMLStyle2_get_pixelBottom(This,p)	\
    (This)->lpVtbl -> get_pixelBottom(This,p)

#define IHTMLStyle2_put_pixelRight(This,v)	\
    (This)->lpVtbl -> put_pixelRight(This,v)

#define IHTMLStyle2_get_pixelRight(This,p)	\
    (This)->lpVtbl -> get_pixelRight(This,p)

#define IHTMLStyle2_put_posBottom(This,v)	\
    (This)->lpVtbl -> put_posBottom(This,v)

#define IHTMLStyle2_get_posBottom(This,p)	\
    (This)->lpVtbl -> get_posBottom(This,p)

#define IHTMLStyle2_put_posRight(This,v)	\
    (This)->lpVtbl -> put_posRight(This,v)

#define IHTMLStyle2_get_posRight(This,p)	\
    (This)->lpVtbl -> get_posRight(This,p)

#define IHTMLStyle2_put_imeMode(This,v)	\
    (This)->lpVtbl -> put_imeMode(This,v)

#define IHTMLStyle2_get_imeMode(This,p)	\
    (This)->lpVtbl -> get_imeMode(This,p)

#define IHTMLStyle2_put_rubyAlign(This,v)	\
    (This)->lpVtbl -> put_rubyAlign(This,v)

#define IHTMLStyle2_get_rubyAlign(This,p)	\
    (This)->lpVtbl -> get_rubyAlign(This,p)

#define IHTMLStyle2_put_rubyPosition(This,v)	\
    (This)->lpVtbl -> put_rubyPosition(This,v)

#define IHTMLStyle2_get_rubyPosition(This,p)	\
    (This)->lpVtbl -> get_rubyPosition(This,p)

#define IHTMLStyle2_put_rubyOverhang(This,v)	\
    (This)->lpVtbl -> put_rubyOverhang(This,v)

#define IHTMLStyle2_get_rubyOverhang(This,p)	\
    (This)->lpVtbl -> get_rubyOverhang(This,p)

#define IHTMLStyle2_put_layoutGridChar(This,v)	\
    (This)->lpVtbl -> put_layoutGridChar(This,v)

#define IHTMLStyle2_get_layoutGridChar(This,p)	\
    (This)->lpVtbl -> get_layoutGridChar(This,p)

#define IHTMLStyle2_put_layoutGridLine(This,v)	\
    (This)->lpVtbl -> put_layoutGridLine(This,v)

#define IHTMLStyle2_get_layoutGridLine(This,p)	\
    (This)->lpVtbl -> get_layoutGridLine(This,p)

#define IHTMLStyle2_put_layoutGridMode(This,v)	\
    (This)->lpVtbl -> put_layoutGridMode(This,v)

#define IHTMLStyle2_get_layoutGridMode(This,p)	\
    (This)->lpVtbl -> get_layoutGridMode(This,p)

#define IHTMLStyle2_put_layoutGridType(This,v)	\
    (This)->lpVtbl -> put_layoutGridType(This,v)

#define IHTMLStyle2_get_layoutGridType(This,p)	\
    (This)->lpVtbl -> get_layoutGridType(This,p)

#define IHTMLStyle2_put_layoutGrid(This,v)	\
    (This)->lpVtbl -> put_layoutGrid(This,v)

#define IHTMLStyle2_get_layoutGrid(This,p)	\
    (This)->lpVtbl -> get_layoutGrid(This,p)

#define IHTMLStyle2_put_wordBreak(This,v)	\
    (This)->lpVtbl -> put_wordBreak(This,v)

#define IHTMLStyle2_get_wordBreak(This,p)	\
    (This)->lpVtbl -> get_wordBreak(This,p)

#define IHTMLStyle2_put_lineBreak(This,v)	\
    (This)->lpVtbl -> put_lineBreak(This,v)

#define IHTMLStyle2_get_lineBreak(This,p)	\
    (This)->lpVtbl -> get_lineBreak(This,p)

#define IHTMLStyle2_put_textJustify(This,v)	\
    (This)->lpVtbl -> put_textJustify(This,v)

#define IHTMLStyle2_get_textJustify(This,p)	\
    (This)->lpVtbl -> get_textJustify(This,p)

#define IHTMLStyle2_put_textJustifyTrim(This,v)	\
    (This)->lpVtbl -> put_textJustifyTrim(This,v)

#define IHTMLStyle2_get_textJustifyTrim(This,p)	\
    (This)->lpVtbl -> get_textJustifyTrim(This,p)

#define IHTMLStyle2_put_textKashida(This,v)	\
    (This)->lpVtbl -> put_textKashida(This,v)

#define IHTMLStyle2_get_textKashida(This,p)	\
    (This)->lpVtbl -> get_textKashida(This,p)

#define IHTMLStyle2_put_textAutospace(This,v)	\
    (This)->lpVtbl -> put_textAutospace(This,v)

#define IHTMLStyle2_get_textAutospace(This,p)	\
    (This)->lpVtbl -> get_textAutospace(This,p)

#define IHTMLStyle2_put_overflowX(This,v)	\
    (This)->lpVtbl -> put_overflowX(This,v)

#define IHTMLStyle2_get_overflowX(This,p)	\
    (This)->lpVtbl -> get_overflowX(This,p)

#define IHTMLStyle2_put_overflowY(This,v)	\
    (This)->lpVtbl -> put_overflowY(This,v)

#define IHTMLStyle2_get_overflowY(This,p)	\
    (This)->lpVtbl -> get_overflowY(This,p)

#define IHTMLStyle2_put_accelerator(This,v)	\
    (This)->lpVtbl -> put_accelerator(This,v)

#define IHTMLStyle2_get_accelerator(This,p)	\
    (This)->lpVtbl -> get_accelerator(This,p)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_put_tableLayout_Proxy( 
    IHTMLStyle2 * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle2_put_tableLayout_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_get_tableLayout_Proxy( 
    IHTMLStyle2 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLStyle2_get_tableLayout_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_put_borderCollapse_Proxy( 
    IHTMLStyle2 * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle2_put_borderCollapse_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_get_borderCollapse_Proxy( 
    IHTMLStyle2 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLStyle2_get_borderCollapse_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_put_direction_Proxy( 
    IHTMLStyle2 * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle2_put_direction_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_get_direction_Proxy( 
    IHTMLStyle2 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLStyle2_get_direction_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_put_behavior_Proxy( 
    IHTMLStyle2 * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle2_put_behavior_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_get_behavior_Proxy( 
    IHTMLStyle2 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLStyle2_get_behavior_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_setExpression_Proxy( 
    IHTMLStyle2 * This,
    /* [in] */ BSTR propname,
    /* [in] */ BSTR expression,
    /* [in][defaultvalue] */ BSTR language);


void __RPC_STUB IHTMLStyle2_setExpression_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_getExpression_Proxy( 
    IHTMLStyle2 * This,
    /* [in] */ BSTR propname,
    /* [out][retval] */ VARIANT *expression);


void __RPC_STUB IHTMLStyle2_getExpression_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_removeExpression_Proxy( 
    IHTMLStyle2 * This,
    /* [in] */ BSTR propname,
    /* [out][retval] */ VARIANT_BOOL *pfSuccess);


void __RPC_STUB IHTMLStyle2_removeExpression_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_put_position_Proxy( 
    IHTMLStyle2 * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle2_put_position_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_get_position_Proxy( 
    IHTMLStyle2 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLStyle2_get_position_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_put_unicodeBidi_Proxy( 
    IHTMLStyle2 * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle2_put_unicodeBidi_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_get_unicodeBidi_Proxy( 
    IHTMLStyle2 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLStyle2_get_unicodeBidi_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_put_bottom_Proxy( 
    IHTMLStyle2 * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLStyle2_put_bottom_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_get_bottom_Proxy( 
    IHTMLStyle2 * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLStyle2_get_bottom_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_put_right_Proxy( 
    IHTMLStyle2 * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLStyle2_put_right_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_get_right_Proxy( 
    IHTMLStyle2 * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLStyle2_get_right_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [hidden][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_put_pixelBottom_Proxy( 
    IHTMLStyle2 * This,
    /* [in] */ long v);


void __RPC_STUB IHTMLStyle2_put_pixelBottom_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [hidden][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_get_pixelBottom_Proxy( 
    IHTMLStyle2 * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLStyle2_get_pixelBottom_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [hidden][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_put_pixelRight_Proxy( 
    IHTMLStyle2 * This,
    /* [in] */ long v);


void __RPC_STUB IHTMLStyle2_put_pixelRight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [hidden][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_get_pixelRight_Proxy( 
    IHTMLStyle2 * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLStyle2_get_pixelRight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_put_posBottom_Proxy( 
    IHTMLStyle2 * This,
    /* [in] */ float v);


void __RPC_STUB IHTMLStyle2_put_posBottom_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_get_posBottom_Proxy( 
    IHTMLStyle2 * This,
    /* [out][retval] */ float *p);


void __RPC_STUB IHTMLStyle2_get_posBottom_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_put_posRight_Proxy( 
    IHTMLStyle2 * This,
    /* [in] */ float v);


void __RPC_STUB IHTMLStyle2_put_posRight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_get_posRight_Proxy( 
    IHTMLStyle2 * This,
    /* [out][retval] */ float *p);


void __RPC_STUB IHTMLStyle2_get_posRight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_put_imeMode_Proxy( 
    IHTMLStyle2 * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle2_put_imeMode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_get_imeMode_Proxy( 
    IHTMLStyle2 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLStyle2_get_imeMode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_put_rubyAlign_Proxy( 
    IHTMLStyle2 * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle2_put_rubyAlign_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_get_rubyAlign_Proxy( 
    IHTMLStyle2 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLStyle2_get_rubyAlign_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_put_rubyPosition_Proxy( 
    IHTMLStyle2 * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle2_put_rubyPosition_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_get_rubyPosition_Proxy( 
    IHTMLStyle2 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLStyle2_get_rubyPosition_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_put_rubyOverhang_Proxy( 
    IHTMLStyle2 * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle2_put_rubyOverhang_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_get_rubyOverhang_Proxy( 
    IHTMLStyle2 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLStyle2_get_rubyOverhang_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_put_layoutGridChar_Proxy( 
    IHTMLStyle2 * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLStyle2_put_layoutGridChar_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_get_layoutGridChar_Proxy( 
    IHTMLStyle2 * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLStyle2_get_layoutGridChar_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_put_layoutGridLine_Proxy( 
    IHTMLStyle2 * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLStyle2_put_layoutGridLine_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_get_layoutGridLine_Proxy( 
    IHTMLStyle2 * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLStyle2_get_layoutGridLine_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_put_layoutGridMode_Proxy( 
    IHTMLStyle2 * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle2_put_layoutGridMode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_get_layoutGridMode_Proxy( 
    IHTMLStyle2 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLStyle2_get_layoutGridMode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_put_layoutGridType_Proxy( 
    IHTMLStyle2 * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle2_put_layoutGridType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_get_layoutGridType_Proxy( 
    IHTMLStyle2 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLStyle2_get_layoutGridType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_put_layoutGrid_Proxy( 
    IHTMLStyle2 * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle2_put_layoutGrid_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_get_layoutGrid_Proxy( 
    IHTMLStyle2 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLStyle2_get_layoutGrid_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_put_wordBreak_Proxy( 
    IHTMLStyle2 * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle2_put_wordBreak_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_get_wordBreak_Proxy( 
    IHTMLStyle2 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLStyle2_get_wordBreak_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_put_lineBreak_Proxy( 
    IHTMLStyle2 * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle2_put_lineBreak_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_get_lineBreak_Proxy( 
    IHTMLStyle2 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLStyle2_get_lineBreak_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_put_textJustify_Proxy( 
    IHTMLStyle2 * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle2_put_textJustify_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_get_textJustify_Proxy( 
    IHTMLStyle2 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLStyle2_get_textJustify_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_put_textJustifyTrim_Proxy( 
    IHTMLStyle2 * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle2_put_textJustifyTrim_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_get_textJustifyTrim_Proxy( 
    IHTMLStyle2 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLStyle2_get_textJustifyTrim_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_put_textKashida_Proxy( 
    IHTMLStyle2 * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLStyle2_put_textKashida_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_get_textKashida_Proxy( 
    IHTMLStyle2 * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLStyle2_get_textKashida_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_put_textAutospace_Proxy( 
    IHTMLStyle2 * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle2_put_textAutospace_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_get_textAutospace_Proxy( 
    IHTMLStyle2 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLStyle2_get_textAutospace_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_put_overflowX_Proxy( 
    IHTMLStyle2 * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle2_put_overflowX_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_get_overflowX_Proxy( 
    IHTMLStyle2 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLStyle2_get_overflowX_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_put_overflowY_Proxy( 
    IHTMLStyle2 * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle2_put_overflowY_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_get_overflowY_Proxy( 
    IHTMLStyle2 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLStyle2_get_overflowY_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_put_accelerator_Proxy( 
    IHTMLStyle2 * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle2_put_accelerator_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle2_get_accelerator_Proxy( 
    IHTMLStyle2 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLStyle2_get_accelerator_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLStyle2_INTERFACE_DEFINED__ */


#ifndef __IHTMLStyle3_INTERFACE_DEFINED__
#define __IHTMLStyle3_INTERFACE_DEFINED__

/* interface IHTMLStyle3 */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLStyle3;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f656-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLStyle3 : public IDispatch
    {
    public:
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_layoutFlow( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_layoutFlow( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_zoom( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_zoom( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_wordWrap( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_wordWrap( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textUnderlinePosition( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textUnderlinePosition( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_scrollbarBaseColor( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_scrollbarBaseColor( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_scrollbarFaceColor( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_scrollbarFaceColor( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_scrollbar3dLightColor( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_scrollbar3dLightColor( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_scrollbarShadowColor( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_scrollbarShadowColor( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_scrollbarHighlightColor( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_scrollbarHighlightColor( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_scrollbarDarkShadowColor( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_scrollbarDarkShadowColor( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_scrollbarArrowColor( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_scrollbarArrowColor( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_scrollbarTrackColor( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_scrollbarTrackColor( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_writingMode( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_writingMode( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textAlignLast( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textAlignLast( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textKashidaSpace( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textKashidaSpace( 
            /* [out][retval] */ VARIANT *p) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLStyle3Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IHTMLStyle3 * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IHTMLStyle3 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IHTMLStyle3 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IHTMLStyle3 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IHTMLStyle3 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IHTMLStyle3 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IHTMLStyle3 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_layoutFlow )( 
            IHTMLStyle3 * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_layoutFlow )( 
            IHTMLStyle3 * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_zoom )( 
            IHTMLStyle3 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_zoom )( 
            IHTMLStyle3 * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_wordWrap )( 
            IHTMLStyle3 * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_wordWrap )( 
            IHTMLStyle3 * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_textUnderlinePosition )( 
            IHTMLStyle3 * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_textUnderlinePosition )( 
            IHTMLStyle3 * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_scrollbarBaseColor )( 
            IHTMLStyle3 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_scrollbarBaseColor )( 
            IHTMLStyle3 * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_scrollbarFaceColor )( 
            IHTMLStyle3 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_scrollbarFaceColor )( 
            IHTMLStyle3 * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_scrollbar3dLightColor )( 
            IHTMLStyle3 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_scrollbar3dLightColor )( 
            IHTMLStyle3 * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_scrollbarShadowColor )( 
            IHTMLStyle3 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_scrollbarShadowColor )( 
            IHTMLStyle3 * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_scrollbarHighlightColor )( 
            IHTMLStyle3 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_scrollbarHighlightColor )( 
            IHTMLStyle3 * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_scrollbarDarkShadowColor )( 
            IHTMLStyle3 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_scrollbarDarkShadowColor )( 
            IHTMLStyle3 * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_scrollbarArrowColor )( 
            IHTMLStyle3 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_scrollbarArrowColor )( 
            IHTMLStyle3 * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_scrollbarTrackColor )( 
            IHTMLStyle3 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_scrollbarTrackColor )( 
            IHTMLStyle3 * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_writingMode )( 
            IHTMLStyle3 * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_writingMode )( 
            IHTMLStyle3 * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_textAlignLast )( 
            IHTMLStyle3 * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_textAlignLast )( 
            IHTMLStyle3 * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_textKashidaSpace )( 
            IHTMLStyle3 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_textKashidaSpace )( 
            IHTMLStyle3 * This,
            /* [out][retval] */ VARIANT *p);
        
        END_INTERFACE
    } IHTMLStyle3Vtbl;

    interface IHTMLStyle3
    {
        CONST_VTBL struct IHTMLStyle3Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLStyle3_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IHTMLStyle3_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IHTMLStyle3_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IHTMLStyle3_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IHTMLStyle3_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IHTMLStyle3_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IHTMLStyle3_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IHTMLStyle3_put_layoutFlow(This,v)	\
    (This)->lpVtbl -> put_layoutFlow(This,v)

#define IHTMLStyle3_get_layoutFlow(This,p)	\
    (This)->lpVtbl -> get_layoutFlow(This,p)

#define IHTMLStyle3_put_zoom(This,v)	\
    (This)->lpVtbl -> put_zoom(This,v)

#define IHTMLStyle3_get_zoom(This,p)	\
    (This)->lpVtbl -> get_zoom(This,p)

#define IHTMLStyle3_put_wordWrap(This,v)	\
    (This)->lpVtbl -> put_wordWrap(This,v)

#define IHTMLStyle3_get_wordWrap(This,p)	\
    (This)->lpVtbl -> get_wordWrap(This,p)

#define IHTMLStyle3_put_textUnderlinePosition(This,v)	\
    (This)->lpVtbl -> put_textUnderlinePosition(This,v)

#define IHTMLStyle3_get_textUnderlinePosition(This,p)	\
    (This)->lpVtbl -> get_textUnderlinePosition(This,p)

#define IHTMLStyle3_put_scrollbarBaseColor(This,v)	\
    (This)->lpVtbl -> put_scrollbarBaseColor(This,v)

#define IHTMLStyle3_get_scrollbarBaseColor(This,p)	\
    (This)->lpVtbl -> get_scrollbarBaseColor(This,p)

#define IHTMLStyle3_put_scrollbarFaceColor(This,v)	\
    (This)->lpVtbl -> put_scrollbarFaceColor(This,v)

#define IHTMLStyle3_get_scrollbarFaceColor(This,p)	\
    (This)->lpVtbl -> get_scrollbarFaceColor(This,p)

#define IHTMLStyle3_put_scrollbar3dLightColor(This,v)	\
    (This)->lpVtbl -> put_scrollbar3dLightColor(This,v)

#define IHTMLStyle3_get_scrollbar3dLightColor(This,p)	\
    (This)->lpVtbl -> get_scrollbar3dLightColor(This,p)

#define IHTMLStyle3_put_scrollbarShadowColor(This,v)	\
    (This)->lpVtbl -> put_scrollbarShadowColor(This,v)

#define IHTMLStyle3_get_scrollbarShadowColor(This,p)	\
    (This)->lpVtbl -> get_scrollbarShadowColor(This,p)

#define IHTMLStyle3_put_scrollbarHighlightColor(This,v)	\
    (This)->lpVtbl -> put_scrollbarHighlightColor(This,v)

#define IHTMLStyle3_get_scrollbarHighlightColor(This,p)	\
    (This)->lpVtbl -> get_scrollbarHighlightColor(This,p)

#define IHTMLStyle3_put_scrollbarDarkShadowColor(This,v)	\
    (This)->lpVtbl -> put_scrollbarDarkShadowColor(This,v)

#define IHTMLStyle3_get_scrollbarDarkShadowColor(This,p)	\
    (This)->lpVtbl -> get_scrollbarDarkShadowColor(This,p)

#define IHTMLStyle3_put_scrollbarArrowColor(This,v)	\
    (This)->lpVtbl -> put_scrollbarArrowColor(This,v)

#define IHTMLStyle3_get_scrollbarArrowColor(This,p)	\
    (This)->lpVtbl -> get_scrollbarArrowColor(This,p)

#define IHTMLStyle3_put_scrollbarTrackColor(This,v)	\
    (This)->lpVtbl -> put_scrollbarTrackColor(This,v)

#define IHTMLStyle3_get_scrollbarTrackColor(This,p)	\
    (This)->lpVtbl -> get_scrollbarTrackColor(This,p)

#define IHTMLStyle3_put_writingMode(This,v)	\
    (This)->lpVtbl -> put_writingMode(This,v)

#define IHTMLStyle3_get_writingMode(This,p)	\
    (This)->lpVtbl -> get_writingMode(This,p)

#define IHTMLStyle3_put_textAlignLast(This,v)	\
    (This)->lpVtbl -> put_textAlignLast(This,v)

#define IHTMLStyle3_get_textAlignLast(This,p)	\
    (This)->lpVtbl -> get_textAlignLast(This,p)

#define IHTMLStyle3_put_textKashidaSpace(This,v)	\
    (This)->lpVtbl -> put_textKashidaSpace(This,v)

#define IHTMLStyle3_get_textKashidaSpace(This,p)	\
    (This)->lpVtbl -> get_textKashidaSpace(This,p)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle3_put_layoutFlow_Proxy( 
    IHTMLStyle3 * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle3_put_layoutFlow_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle3_get_layoutFlow_Proxy( 
    IHTMLStyle3 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLStyle3_get_layoutFlow_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle3_put_zoom_Proxy( 
    IHTMLStyle3 * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLStyle3_put_zoom_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle3_get_zoom_Proxy( 
    IHTMLStyle3 * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLStyle3_get_zoom_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle3_put_wordWrap_Proxy( 
    IHTMLStyle3 * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle3_put_wordWrap_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle3_get_wordWrap_Proxy( 
    IHTMLStyle3 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLStyle3_get_wordWrap_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle3_put_textUnderlinePosition_Proxy( 
    IHTMLStyle3 * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle3_put_textUnderlinePosition_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle3_get_textUnderlinePosition_Proxy( 
    IHTMLStyle3 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLStyle3_get_textUnderlinePosition_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle3_put_scrollbarBaseColor_Proxy( 
    IHTMLStyle3 * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLStyle3_put_scrollbarBaseColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle3_get_scrollbarBaseColor_Proxy( 
    IHTMLStyle3 * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLStyle3_get_scrollbarBaseColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle3_put_scrollbarFaceColor_Proxy( 
    IHTMLStyle3 * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLStyle3_put_scrollbarFaceColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle3_get_scrollbarFaceColor_Proxy( 
    IHTMLStyle3 * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLStyle3_get_scrollbarFaceColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle3_put_scrollbar3dLightColor_Proxy( 
    IHTMLStyle3 * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLStyle3_put_scrollbar3dLightColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle3_get_scrollbar3dLightColor_Proxy( 
    IHTMLStyle3 * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLStyle3_get_scrollbar3dLightColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle3_put_scrollbarShadowColor_Proxy( 
    IHTMLStyle3 * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLStyle3_put_scrollbarShadowColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle3_get_scrollbarShadowColor_Proxy( 
    IHTMLStyle3 * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLStyle3_get_scrollbarShadowColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle3_put_scrollbarHighlightColor_Proxy( 
    IHTMLStyle3 * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLStyle3_put_scrollbarHighlightColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle3_get_scrollbarHighlightColor_Proxy( 
    IHTMLStyle3 * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLStyle3_get_scrollbarHighlightColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle3_put_scrollbarDarkShadowColor_Proxy( 
    IHTMLStyle3 * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLStyle3_put_scrollbarDarkShadowColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle3_get_scrollbarDarkShadowColor_Proxy( 
    IHTMLStyle3 * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLStyle3_get_scrollbarDarkShadowColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle3_put_scrollbarArrowColor_Proxy( 
    IHTMLStyle3 * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLStyle3_put_scrollbarArrowColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle3_get_scrollbarArrowColor_Proxy( 
    IHTMLStyle3 * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLStyle3_get_scrollbarArrowColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle3_put_scrollbarTrackColor_Proxy( 
    IHTMLStyle3 * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLStyle3_put_scrollbarTrackColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle3_get_scrollbarTrackColor_Proxy( 
    IHTMLStyle3 * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLStyle3_get_scrollbarTrackColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle3_put_writingMode_Proxy( 
    IHTMLStyle3 * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle3_put_writingMode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle3_get_writingMode_Proxy( 
    IHTMLStyle3 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLStyle3_get_writingMode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle3_put_textAlignLast_Proxy( 
    IHTMLStyle3 * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle3_put_textAlignLast_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle3_get_textAlignLast_Proxy( 
    IHTMLStyle3 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLStyle3_get_textAlignLast_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle3_put_textKashidaSpace_Proxy( 
    IHTMLStyle3 * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLStyle3_put_textKashidaSpace_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle3_get_textKashidaSpace_Proxy( 
    IHTMLStyle3 * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLStyle3_get_textKashidaSpace_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLStyle3_INTERFACE_DEFINED__ */


#ifndef __IHTMLStyle4_INTERFACE_DEFINED__
#define __IHTMLStyle4_INTERFACE_DEFINED__

/* interface IHTMLStyle4 */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLStyle4;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f816-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLStyle4 : public IDispatch
    {
    public:
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textOverflow( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textOverflow( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_minHeight( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_minHeight( 
            /* [out][retval] */ VARIANT *p) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLStyle4Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IHTMLStyle4 * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IHTMLStyle4 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IHTMLStyle4 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IHTMLStyle4 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IHTMLStyle4 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IHTMLStyle4 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IHTMLStyle4 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_textOverflow )( 
            IHTMLStyle4 * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_textOverflow )( 
            IHTMLStyle4 * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_minHeight )( 
            IHTMLStyle4 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_minHeight )( 
            IHTMLStyle4 * This,
            /* [out][retval] */ VARIANT *p);
        
        END_INTERFACE
    } IHTMLStyle4Vtbl;

    interface IHTMLStyle4
    {
        CONST_VTBL struct IHTMLStyle4Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLStyle4_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IHTMLStyle4_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IHTMLStyle4_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IHTMLStyle4_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IHTMLStyle4_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IHTMLStyle4_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IHTMLStyle4_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IHTMLStyle4_put_textOverflow(This,v)	\
    (This)->lpVtbl -> put_textOverflow(This,v)

#define IHTMLStyle4_get_textOverflow(This,p)	\
    (This)->lpVtbl -> get_textOverflow(This,p)

#define IHTMLStyle4_put_minHeight(This,v)	\
    (This)->lpVtbl -> put_minHeight(This,v)

#define IHTMLStyle4_get_minHeight(This,p)	\
    (This)->lpVtbl -> get_minHeight(This,p)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle4_put_textOverflow_Proxy( 
    IHTMLStyle4 * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLStyle4_put_textOverflow_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle4_get_textOverflow_Proxy( 
    IHTMLStyle4 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLStyle4_get_textOverflow_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLStyle4_put_minHeight_Proxy( 
    IHTMLStyle4 * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLStyle4_put_minHeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLStyle4_get_minHeight_Proxy( 
    IHTMLStyle4 * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLStyle4_get_minHeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLStyle4_INTERFACE_DEFINED__ */


#ifndef __IHTMLRuleStyle_INTERFACE_DEFINED__
#define __IHTMLRuleStyle_INTERFACE_DEFINED__

/* interface IHTMLRuleStyle */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLRuleStyle;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f3cf-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLRuleStyle : public IDispatch
    {
    public:
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_fontFamily( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_fontFamily( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_fontStyle( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_fontStyle( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_fontVariant( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_fontVariant( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_fontWeight( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_fontWeight( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_fontSize( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_fontSize( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_font( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_font( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_color( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_color( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_background( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_background( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_backgroundColor( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_backgroundColor( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_backgroundImage( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_backgroundImage( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_backgroundRepeat( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_backgroundRepeat( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_backgroundAttachment( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_backgroundAttachment( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_backgroundPosition( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_backgroundPosition( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_backgroundPositionX( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_backgroundPositionX( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_backgroundPositionY( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_backgroundPositionY( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_wordSpacing( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_wordSpacing( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_letterSpacing( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_letterSpacing( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textDecoration( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textDecoration( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textDecorationNone( 
            /* [in] */ VARIANT_BOOL v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textDecorationNone( 
            /* [out][retval] */ VARIANT_BOOL *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textDecorationUnderline( 
            /* [in] */ VARIANT_BOOL v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textDecorationUnderline( 
            /* [out][retval] */ VARIANT_BOOL *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textDecorationOverline( 
            /* [in] */ VARIANT_BOOL v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textDecorationOverline( 
            /* [out][retval] */ VARIANT_BOOL *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textDecorationLineThrough( 
            /* [in] */ VARIANT_BOOL v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textDecorationLineThrough( 
            /* [out][retval] */ VARIANT_BOOL *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textDecorationBlink( 
            /* [in] */ VARIANT_BOOL v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textDecorationBlink( 
            /* [out][retval] */ VARIANT_BOOL *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_verticalAlign( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_verticalAlign( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textTransform( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textTransform( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textAlign( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textAlign( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textIndent( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textIndent( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_lineHeight( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_lineHeight( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_marginTop( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_marginTop( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_marginRight( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_marginRight( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_marginBottom( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_marginBottom( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_marginLeft( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_marginLeft( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_margin( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_margin( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_paddingTop( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_paddingTop( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_paddingRight( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_paddingRight( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_paddingBottom( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_paddingBottom( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_paddingLeft( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_paddingLeft( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_padding( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_padding( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_border( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_border( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderTop( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderTop( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderRight( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderRight( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderBottom( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderBottom( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderLeft( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderLeft( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderColor( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderColor( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderTopColor( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderTopColor( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderRightColor( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderRightColor( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderBottomColor( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderBottomColor( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderLeftColor( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderLeftColor( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderWidth( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderWidth( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderTopWidth( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderTopWidth( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderRightWidth( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderRightWidth( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderBottomWidth( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderBottomWidth( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderLeftWidth( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderLeftWidth( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderStyle( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderStyle( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderTopStyle( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderTopStyle( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderRightStyle( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderRightStyle( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderBottomStyle( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderBottomStyle( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderLeftStyle( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderLeftStyle( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_width( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_width( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_height( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_height( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_styleFloat( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_styleFloat( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_clear( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_clear( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_display( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_display( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_visibility( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_visibility( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_listStyleType( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_listStyleType( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_listStylePosition( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_listStylePosition( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_listStyleImage( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_listStyleImage( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_listStyle( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_listStyle( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_whiteSpace( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_whiteSpace( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_top( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_top( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_left( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_left( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_position( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_zIndex( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_zIndex( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_overflow( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_overflow( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_pageBreakBefore( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_pageBreakBefore( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_pageBreakAfter( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_pageBreakAfter( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_cssText( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_cssText( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_cursor( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_cursor( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_clip( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_clip( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_filter( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_filter( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE setAttribute( 
            /* [in] */ BSTR strAttributeName,
            /* [in] */ VARIANT AttributeValue,
            /* [in][defaultvalue] */ LONG lFlags = 1) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE getAttribute( 
            /* [in] */ BSTR strAttributeName,
            /* [in][defaultvalue] */ LONG lFlags,
            /* [out][retval] */ VARIANT *AttributeValue) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE removeAttribute( 
            /* [in] */ BSTR strAttributeName,
            /* [in][defaultvalue] */ LONG lFlags,
            /* [out][retval] */ VARIANT_BOOL *pfSuccess) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLRuleStyleVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IHTMLRuleStyle * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IHTMLRuleStyle * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IHTMLRuleStyle * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IHTMLRuleStyle * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IHTMLRuleStyle * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IHTMLRuleStyle * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IHTMLRuleStyle * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_fontFamily )( 
            IHTMLRuleStyle * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_fontFamily )( 
            IHTMLRuleStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_fontStyle )( 
            IHTMLRuleStyle * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_fontStyle )( 
            IHTMLRuleStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_fontVariant )( 
            IHTMLRuleStyle * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_fontVariant )( 
            IHTMLRuleStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_fontWeight )( 
            IHTMLRuleStyle * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_fontWeight )( 
            IHTMLRuleStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_fontSize )( 
            IHTMLRuleStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_fontSize )( 
            IHTMLRuleStyle * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_font )( 
            IHTMLRuleStyle * This,
            /* [in] */ BSTR v);
        
        /* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_font )( 
            IHTMLRuleStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_color )( 
            IHTMLRuleStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_color )( 
            IHTMLRuleStyle * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_background )( 
            IHTMLRuleStyle * This,
            /* [in] */ BSTR v);
        
        /* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_background )( 
            IHTMLRuleStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_backgroundColor )( 
            IHTMLRuleStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_backgroundColor )( 
            IHTMLRuleStyle * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_backgroundImage )( 
            IHTMLRuleStyle * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_backgroundImage )( 
            IHTMLRuleStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_backgroundRepeat )( 
            IHTMLRuleStyle * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_backgroundRepeat )( 
            IHTMLRuleStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_backgroundAttachment )( 
            IHTMLRuleStyle * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_backgroundAttachment )( 
            IHTMLRuleStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_backgroundPosition )( 
            IHTMLRuleStyle * This,
            /* [in] */ BSTR v);
        
        /* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_backgroundPosition )( 
            IHTMLRuleStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_backgroundPositionX )( 
            IHTMLRuleStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_backgroundPositionX )( 
            IHTMLRuleStyle * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_backgroundPositionY )( 
            IHTMLRuleStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_backgroundPositionY )( 
            IHTMLRuleStyle * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_wordSpacing )( 
            IHTMLRuleStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_wordSpacing )( 
            IHTMLRuleStyle * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_letterSpacing )( 
            IHTMLRuleStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_letterSpacing )( 
            IHTMLRuleStyle * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_textDecoration )( 
            IHTMLRuleStyle * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_textDecoration )( 
            IHTMLRuleStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_textDecorationNone )( 
            IHTMLRuleStyle * This,
            /* [in] */ VARIANT_BOOL v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_textDecorationNone )( 
            IHTMLRuleStyle * This,
            /* [out][retval] */ VARIANT_BOOL *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_textDecorationUnderline )( 
            IHTMLRuleStyle * This,
            /* [in] */ VARIANT_BOOL v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_textDecorationUnderline )( 
            IHTMLRuleStyle * This,
            /* [out][retval] */ VARIANT_BOOL *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_textDecorationOverline )( 
            IHTMLRuleStyle * This,
            /* [in] */ VARIANT_BOOL v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_textDecorationOverline )( 
            IHTMLRuleStyle * This,
            /* [out][retval] */ VARIANT_BOOL *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_textDecorationLineThrough )( 
            IHTMLRuleStyle * This,
            /* [in] */ VARIANT_BOOL v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_textDecorationLineThrough )( 
            IHTMLRuleStyle * This,
            /* [out][retval] */ VARIANT_BOOL *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_textDecorationBlink )( 
            IHTMLRuleStyle * This,
            /* [in] */ VARIANT_BOOL v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_textDecorationBlink )( 
            IHTMLRuleStyle * This,
            /* [out][retval] */ VARIANT_BOOL *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_verticalAlign )( 
            IHTMLRuleStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_verticalAlign )( 
            IHTMLRuleStyle * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_textTransform )( 
            IHTMLRuleStyle * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_textTransform )( 
            IHTMLRuleStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_textAlign )( 
            IHTMLRuleStyle * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_textAlign )( 
            IHTMLRuleStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_textIndent )( 
            IHTMLRuleStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_textIndent )( 
            IHTMLRuleStyle * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_lineHeight )( 
            IHTMLRuleStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_lineHeight )( 
            IHTMLRuleStyle * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_marginTop )( 
            IHTMLRuleStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_marginTop )( 
            IHTMLRuleStyle * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_marginRight )( 
            IHTMLRuleStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_marginRight )( 
            IHTMLRuleStyle * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_marginBottom )( 
            IHTMLRuleStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_marginBottom )( 
            IHTMLRuleStyle * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_marginLeft )( 
            IHTMLRuleStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_marginLeft )( 
            IHTMLRuleStyle * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_margin )( 
            IHTMLRuleStyle * This,
            /* [in] */ BSTR v);
        
        /* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_margin )( 
            IHTMLRuleStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_paddingTop )( 
            IHTMLRuleStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_paddingTop )( 
            IHTMLRuleStyle * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_paddingRight )( 
            IHTMLRuleStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_paddingRight )( 
            IHTMLRuleStyle * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_paddingBottom )( 
            IHTMLRuleStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_paddingBottom )( 
            IHTMLRuleStyle * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_paddingLeft )( 
            IHTMLRuleStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_paddingLeft )( 
            IHTMLRuleStyle * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_padding )( 
            IHTMLRuleStyle * This,
            /* [in] */ BSTR v);
        
        /* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_padding )( 
            IHTMLRuleStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_border )( 
            IHTMLRuleStyle * This,
            /* [in] */ BSTR v);
        
        /* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_border )( 
            IHTMLRuleStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_borderTop )( 
            IHTMLRuleStyle * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderTop )( 
            IHTMLRuleStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_borderRight )( 
            IHTMLRuleStyle * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderRight )( 
            IHTMLRuleStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_borderBottom )( 
            IHTMLRuleStyle * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderBottom )( 
            IHTMLRuleStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_borderLeft )( 
            IHTMLRuleStyle * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderLeft )( 
            IHTMLRuleStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_borderColor )( 
            IHTMLRuleStyle * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderColor )( 
            IHTMLRuleStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_borderTopColor )( 
            IHTMLRuleStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderTopColor )( 
            IHTMLRuleStyle * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_borderRightColor )( 
            IHTMLRuleStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderRightColor )( 
            IHTMLRuleStyle * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_borderBottomColor )( 
            IHTMLRuleStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderBottomColor )( 
            IHTMLRuleStyle * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_borderLeftColor )( 
            IHTMLRuleStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderLeftColor )( 
            IHTMLRuleStyle * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_borderWidth )( 
            IHTMLRuleStyle * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderWidth )( 
            IHTMLRuleStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_borderTopWidth )( 
            IHTMLRuleStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderTopWidth )( 
            IHTMLRuleStyle * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_borderRightWidth )( 
            IHTMLRuleStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderRightWidth )( 
            IHTMLRuleStyle * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_borderBottomWidth )( 
            IHTMLRuleStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderBottomWidth )( 
            IHTMLRuleStyle * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_borderLeftWidth )( 
            IHTMLRuleStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderLeftWidth )( 
            IHTMLRuleStyle * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_borderStyle )( 
            IHTMLRuleStyle * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderStyle )( 
            IHTMLRuleStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_borderTopStyle )( 
            IHTMLRuleStyle * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderTopStyle )( 
            IHTMLRuleStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_borderRightStyle )( 
            IHTMLRuleStyle * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderRightStyle )( 
            IHTMLRuleStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_borderBottomStyle )( 
            IHTMLRuleStyle * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderBottomStyle )( 
            IHTMLRuleStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_borderLeftStyle )( 
            IHTMLRuleStyle * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderLeftStyle )( 
            IHTMLRuleStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_width )( 
            IHTMLRuleStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_width )( 
            IHTMLRuleStyle * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_height )( 
            IHTMLRuleStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_height )( 
            IHTMLRuleStyle * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_styleFloat )( 
            IHTMLRuleStyle * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_styleFloat )( 
            IHTMLRuleStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_clear )( 
            IHTMLRuleStyle * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_clear )( 
            IHTMLRuleStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_display )( 
            IHTMLRuleStyle * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_display )( 
            IHTMLRuleStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_visibility )( 
            IHTMLRuleStyle * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_visibility )( 
            IHTMLRuleStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_listStyleType )( 
            IHTMLRuleStyle * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_listStyleType )( 
            IHTMLRuleStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_listStylePosition )( 
            IHTMLRuleStyle * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_listStylePosition )( 
            IHTMLRuleStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_listStyleImage )( 
            IHTMLRuleStyle * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_listStyleImage )( 
            IHTMLRuleStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_listStyle )( 
            IHTMLRuleStyle * This,
            /* [in] */ BSTR v);
        
        /* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_listStyle )( 
            IHTMLRuleStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_whiteSpace )( 
            IHTMLRuleStyle * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_whiteSpace )( 
            IHTMLRuleStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_top )( 
            IHTMLRuleStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_top )( 
            IHTMLRuleStyle * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_left )( 
            IHTMLRuleStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_left )( 
            IHTMLRuleStyle * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_position )( 
            IHTMLRuleStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_zIndex )( 
            IHTMLRuleStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_zIndex )( 
            IHTMLRuleStyle * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_overflow )( 
            IHTMLRuleStyle * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_overflow )( 
            IHTMLRuleStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_pageBreakBefore )( 
            IHTMLRuleStyle * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_pageBreakBefore )( 
            IHTMLRuleStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_pageBreakAfter )( 
            IHTMLRuleStyle * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_pageBreakAfter )( 
            IHTMLRuleStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_cssText )( 
            IHTMLRuleStyle * This,
            /* [in] */ BSTR v);
        
        /* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_cssText )( 
            IHTMLRuleStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_cursor )( 
            IHTMLRuleStyle * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_cursor )( 
            IHTMLRuleStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_clip )( 
            IHTMLRuleStyle * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_clip )( 
            IHTMLRuleStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_filter )( 
            IHTMLRuleStyle * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_filter )( 
            IHTMLRuleStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *setAttribute )( 
            IHTMLRuleStyle * This,
            /* [in] */ BSTR strAttributeName,
            /* [in] */ VARIANT AttributeValue,
            /* [in][defaultvalue] */ LONG lFlags);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *getAttribute )( 
            IHTMLRuleStyle * This,
            /* [in] */ BSTR strAttributeName,
            /* [in][defaultvalue] */ LONG lFlags,
            /* [out][retval] */ VARIANT *AttributeValue);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *removeAttribute )( 
            IHTMLRuleStyle * This,
            /* [in] */ BSTR strAttributeName,
            /* [in][defaultvalue] */ LONG lFlags,
            /* [out][retval] */ VARIANT_BOOL *pfSuccess);
        
        END_INTERFACE
    } IHTMLRuleStyleVtbl;

    interface IHTMLRuleStyle
    {
        CONST_VTBL struct IHTMLRuleStyleVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLRuleStyle_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IHTMLRuleStyle_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IHTMLRuleStyle_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IHTMLRuleStyle_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IHTMLRuleStyle_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IHTMLRuleStyle_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IHTMLRuleStyle_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IHTMLRuleStyle_put_fontFamily(This,v)	\
    (This)->lpVtbl -> put_fontFamily(This,v)

#define IHTMLRuleStyle_get_fontFamily(This,p)	\
    (This)->lpVtbl -> get_fontFamily(This,p)

#define IHTMLRuleStyle_put_fontStyle(This,v)	\
    (This)->lpVtbl -> put_fontStyle(This,v)

#define IHTMLRuleStyle_get_fontStyle(This,p)	\
    (This)->lpVtbl -> get_fontStyle(This,p)

#define IHTMLRuleStyle_put_fontVariant(This,v)	\
    (This)->lpVtbl -> put_fontVariant(This,v)

#define IHTMLRuleStyle_get_fontVariant(This,p)	\
    (This)->lpVtbl -> get_fontVariant(This,p)

#define IHTMLRuleStyle_put_fontWeight(This,v)	\
    (This)->lpVtbl -> put_fontWeight(This,v)

#define IHTMLRuleStyle_get_fontWeight(This,p)	\
    (This)->lpVtbl -> get_fontWeight(This,p)

#define IHTMLRuleStyle_put_fontSize(This,v)	\
    (This)->lpVtbl -> put_fontSize(This,v)

#define IHTMLRuleStyle_get_fontSize(This,p)	\
    (This)->lpVtbl -> get_fontSize(This,p)

#define IHTMLRuleStyle_put_font(This,v)	\
    (This)->lpVtbl -> put_font(This,v)

#define IHTMLRuleStyle_get_font(This,p)	\
    (This)->lpVtbl -> get_font(This,p)

#define IHTMLRuleStyle_put_color(This,v)	\
    (This)->lpVtbl -> put_color(This,v)

#define IHTMLRuleStyle_get_color(This,p)	\
    (This)->lpVtbl -> get_color(This,p)

#define IHTMLRuleStyle_put_background(This,v)	\
    (This)->lpVtbl -> put_background(This,v)

#define IHTMLRuleStyle_get_background(This,p)	\
    (This)->lpVtbl -> get_background(This,p)

#define IHTMLRuleStyle_put_backgroundColor(This,v)	\
    (This)->lpVtbl -> put_backgroundColor(This,v)

#define IHTMLRuleStyle_get_backgroundColor(This,p)	\
    (This)->lpVtbl -> get_backgroundColor(This,p)

#define IHTMLRuleStyle_put_backgroundImage(This,v)	\
    (This)->lpVtbl -> put_backgroundImage(This,v)

#define IHTMLRuleStyle_get_backgroundImage(This,p)	\
    (This)->lpVtbl -> get_backgroundImage(This,p)

#define IHTMLRuleStyle_put_backgroundRepeat(This,v)	\
    (This)->lpVtbl -> put_backgroundRepeat(This,v)

#define IHTMLRuleStyle_get_backgroundRepeat(This,p)	\
    (This)->lpVtbl -> get_backgroundRepeat(This,p)

#define IHTMLRuleStyle_put_backgroundAttachment(This,v)	\
    (This)->lpVtbl -> put_backgroundAttachment(This,v)

#define IHTMLRuleStyle_get_backgroundAttachment(This,p)	\
    (This)->lpVtbl -> get_backgroundAttachment(This,p)

#define IHTMLRuleStyle_put_backgroundPosition(This,v)	\
    (This)->lpVtbl -> put_backgroundPosition(This,v)

#define IHTMLRuleStyle_get_backgroundPosition(This,p)	\
    (This)->lpVtbl -> get_backgroundPosition(This,p)

#define IHTMLRuleStyle_put_backgroundPositionX(This,v)	\
    (This)->lpVtbl -> put_backgroundPositionX(This,v)

#define IHTMLRuleStyle_get_backgroundPositionX(This,p)	\
    (This)->lpVtbl -> get_backgroundPositionX(This,p)

#define IHTMLRuleStyle_put_backgroundPositionY(This,v)	\
    (This)->lpVtbl -> put_backgroundPositionY(This,v)

#define IHTMLRuleStyle_get_backgroundPositionY(This,p)	\
    (This)->lpVtbl -> get_backgroundPositionY(This,p)

#define IHTMLRuleStyle_put_wordSpacing(This,v)	\
    (This)->lpVtbl -> put_wordSpacing(This,v)

#define IHTMLRuleStyle_get_wordSpacing(This,p)	\
    (This)->lpVtbl -> get_wordSpacing(This,p)

#define IHTMLRuleStyle_put_letterSpacing(This,v)	\
    (This)->lpVtbl -> put_letterSpacing(This,v)

#define IHTMLRuleStyle_get_letterSpacing(This,p)	\
    (This)->lpVtbl -> get_letterSpacing(This,p)

#define IHTMLRuleStyle_put_textDecoration(This,v)	\
    (This)->lpVtbl -> put_textDecoration(This,v)

#define IHTMLRuleStyle_get_textDecoration(This,p)	\
    (This)->lpVtbl -> get_textDecoration(This,p)

#define IHTMLRuleStyle_put_textDecorationNone(This,v)	\
    (This)->lpVtbl -> put_textDecorationNone(This,v)

#define IHTMLRuleStyle_get_textDecorationNone(This,p)	\
    (This)->lpVtbl -> get_textDecorationNone(This,p)

#define IHTMLRuleStyle_put_textDecorationUnderline(This,v)	\
    (This)->lpVtbl -> put_textDecorationUnderline(This,v)

#define IHTMLRuleStyle_get_textDecorationUnderline(This,p)	\
    (This)->lpVtbl -> get_textDecorationUnderline(This,p)

#define IHTMLRuleStyle_put_textDecorationOverline(This,v)	\
    (This)->lpVtbl -> put_textDecorationOverline(This,v)

#define IHTMLRuleStyle_get_textDecorationOverline(This,p)	\
    (This)->lpVtbl -> get_textDecorationOverline(This,p)

#define IHTMLRuleStyle_put_textDecorationLineThrough(This,v)	\
    (This)->lpVtbl -> put_textDecorationLineThrough(This,v)

#define IHTMLRuleStyle_get_textDecorationLineThrough(This,p)	\
    (This)->lpVtbl -> get_textDecorationLineThrough(This,p)

#define IHTMLRuleStyle_put_textDecorationBlink(This,v)	\
    (This)->lpVtbl -> put_textDecorationBlink(This,v)

#define IHTMLRuleStyle_get_textDecorationBlink(This,p)	\
    (This)->lpVtbl -> get_textDecorationBlink(This,p)

#define IHTMLRuleStyle_put_verticalAlign(This,v)	\
    (This)->lpVtbl -> put_verticalAlign(This,v)

#define IHTMLRuleStyle_get_verticalAlign(This,p)	\
    (This)->lpVtbl -> get_verticalAlign(This,p)

#define IHTMLRuleStyle_put_textTransform(This,v)	\
    (This)->lpVtbl -> put_textTransform(This,v)

#define IHTMLRuleStyle_get_textTransform(This,p)	\
    (This)->lpVtbl -> get_textTransform(This,p)

#define IHTMLRuleStyle_put_textAlign(This,v)	\
    (This)->lpVtbl -> put_textAlign(This,v)

#define IHTMLRuleStyle_get_textAlign(This,p)	\
    (This)->lpVtbl -> get_textAlign(This,p)

#define IHTMLRuleStyle_put_textIndent(This,v)	\
    (This)->lpVtbl -> put_textIndent(This,v)

#define IHTMLRuleStyle_get_textIndent(This,p)	\
    (This)->lpVtbl -> get_textIndent(This,p)

#define IHTMLRuleStyle_put_lineHeight(This,v)	\
    (This)->lpVtbl -> put_lineHeight(This,v)

#define IHTMLRuleStyle_get_lineHeight(This,p)	\
    (This)->lpVtbl -> get_lineHeight(This,p)

#define IHTMLRuleStyle_put_marginTop(This,v)	\
    (This)->lpVtbl -> put_marginTop(This,v)

#define IHTMLRuleStyle_get_marginTop(This,p)	\
    (This)->lpVtbl -> get_marginTop(This,p)

#define IHTMLRuleStyle_put_marginRight(This,v)	\
    (This)->lpVtbl -> put_marginRight(This,v)

#define IHTMLRuleStyle_get_marginRight(This,p)	\
    (This)->lpVtbl -> get_marginRight(This,p)

#define IHTMLRuleStyle_put_marginBottom(This,v)	\
    (This)->lpVtbl -> put_marginBottom(This,v)

#define IHTMLRuleStyle_get_marginBottom(This,p)	\
    (This)->lpVtbl -> get_marginBottom(This,p)

#define IHTMLRuleStyle_put_marginLeft(This,v)	\
    (This)->lpVtbl -> put_marginLeft(This,v)

#define IHTMLRuleStyle_get_marginLeft(This,p)	\
    (This)->lpVtbl -> get_marginLeft(This,p)

#define IHTMLRuleStyle_put_margin(This,v)	\
    (This)->lpVtbl -> put_margin(This,v)

#define IHTMLRuleStyle_get_margin(This,p)	\
    (This)->lpVtbl -> get_margin(This,p)

#define IHTMLRuleStyle_put_paddingTop(This,v)	\
    (This)->lpVtbl -> put_paddingTop(This,v)

#define IHTMLRuleStyle_get_paddingTop(This,p)	\
    (This)->lpVtbl -> get_paddingTop(This,p)

#define IHTMLRuleStyle_put_paddingRight(This,v)	\
    (This)->lpVtbl -> put_paddingRight(This,v)

#define IHTMLRuleStyle_get_paddingRight(This,p)	\
    (This)->lpVtbl -> get_paddingRight(This,p)

#define IHTMLRuleStyle_put_paddingBottom(This,v)	\
    (This)->lpVtbl -> put_paddingBottom(This,v)

#define IHTMLRuleStyle_get_paddingBottom(This,p)	\
    (This)->lpVtbl -> get_paddingBottom(This,p)

#define IHTMLRuleStyle_put_paddingLeft(This,v)	\
    (This)->lpVtbl -> put_paddingLeft(This,v)

#define IHTMLRuleStyle_get_paddingLeft(This,p)	\
    (This)->lpVtbl -> get_paddingLeft(This,p)

#define IHTMLRuleStyle_put_padding(This,v)	\
    (This)->lpVtbl -> put_padding(This,v)

#define IHTMLRuleStyle_get_padding(This,p)	\
    (This)->lpVtbl -> get_padding(This,p)

#define IHTMLRuleStyle_put_border(This,v)	\
    (This)->lpVtbl -> put_border(This,v)

#define IHTMLRuleStyle_get_border(This,p)	\
    (This)->lpVtbl -> get_border(This,p)

#define IHTMLRuleStyle_put_borderTop(This,v)	\
    (This)->lpVtbl -> put_borderTop(This,v)

#define IHTMLRuleStyle_get_borderTop(This,p)	\
    (This)->lpVtbl -> get_borderTop(This,p)

#define IHTMLRuleStyle_put_borderRight(This,v)	\
    (This)->lpVtbl -> put_borderRight(This,v)

#define IHTMLRuleStyle_get_borderRight(This,p)	\
    (This)->lpVtbl -> get_borderRight(This,p)

#define IHTMLRuleStyle_put_borderBottom(This,v)	\
    (This)->lpVtbl -> put_borderBottom(This,v)

#define IHTMLRuleStyle_get_borderBottom(This,p)	\
    (This)->lpVtbl -> get_borderBottom(This,p)

#define IHTMLRuleStyle_put_borderLeft(This,v)	\
    (This)->lpVtbl -> put_borderLeft(This,v)

#define IHTMLRuleStyle_get_borderLeft(This,p)	\
    (This)->lpVtbl -> get_borderLeft(This,p)

#define IHTMLRuleStyle_put_borderColor(This,v)	\
    (This)->lpVtbl -> put_borderColor(This,v)

#define IHTMLRuleStyle_get_borderColor(This,p)	\
    (This)->lpVtbl -> get_borderColor(This,p)

#define IHTMLRuleStyle_put_borderTopColor(This,v)	\
    (This)->lpVtbl -> put_borderTopColor(This,v)

#define IHTMLRuleStyle_get_borderTopColor(This,p)	\
    (This)->lpVtbl -> get_borderTopColor(This,p)

#define IHTMLRuleStyle_put_borderRightColor(This,v)	\
    (This)->lpVtbl -> put_borderRightColor(This,v)

#define IHTMLRuleStyle_get_borderRightColor(This,p)	\
    (This)->lpVtbl -> get_borderRightColor(This,p)

#define IHTMLRuleStyle_put_borderBottomColor(This,v)	\
    (This)->lpVtbl -> put_borderBottomColor(This,v)

#define IHTMLRuleStyle_get_borderBottomColor(This,p)	\
    (This)->lpVtbl -> get_borderBottomColor(This,p)

#define IHTMLRuleStyle_put_borderLeftColor(This,v)	\
    (This)->lpVtbl -> put_borderLeftColor(This,v)

#define IHTMLRuleStyle_get_borderLeftColor(This,p)	\
    (This)->lpVtbl -> get_borderLeftColor(This,p)

#define IHTMLRuleStyle_put_borderWidth(This,v)	\
    (This)->lpVtbl -> put_borderWidth(This,v)

#define IHTMLRuleStyle_get_borderWidth(This,p)	\
    (This)->lpVtbl -> get_borderWidth(This,p)

#define IHTMLRuleStyle_put_borderTopWidth(This,v)	\
    (This)->lpVtbl -> put_borderTopWidth(This,v)

#define IHTMLRuleStyle_get_borderTopWidth(This,p)	\
    (This)->lpVtbl -> get_borderTopWidth(This,p)

#define IHTMLRuleStyle_put_borderRightWidth(This,v)	\
    (This)->lpVtbl -> put_borderRightWidth(This,v)

#define IHTMLRuleStyle_get_borderRightWidth(This,p)	\
    (This)->lpVtbl -> get_borderRightWidth(This,p)

#define IHTMLRuleStyle_put_borderBottomWidth(This,v)	\
    (This)->lpVtbl -> put_borderBottomWidth(This,v)

#define IHTMLRuleStyle_get_borderBottomWidth(This,p)	\
    (This)->lpVtbl -> get_borderBottomWidth(This,p)

#define IHTMLRuleStyle_put_borderLeftWidth(This,v)	\
    (This)->lpVtbl -> put_borderLeftWidth(This,v)

#define IHTMLRuleStyle_get_borderLeftWidth(This,p)	\
    (This)->lpVtbl -> get_borderLeftWidth(This,p)

#define IHTMLRuleStyle_put_borderStyle(This,v)	\
    (This)->lpVtbl -> put_borderStyle(This,v)

#define IHTMLRuleStyle_get_borderStyle(This,p)	\
    (This)->lpVtbl -> get_borderStyle(This,p)

#define IHTMLRuleStyle_put_borderTopStyle(This,v)	\
    (This)->lpVtbl -> put_borderTopStyle(This,v)

#define IHTMLRuleStyle_get_borderTopStyle(This,p)	\
    (This)->lpVtbl -> get_borderTopStyle(This,p)

#define IHTMLRuleStyle_put_borderRightStyle(This,v)	\
    (This)->lpVtbl -> put_borderRightStyle(This,v)

#define IHTMLRuleStyle_get_borderRightStyle(This,p)	\
    (This)->lpVtbl -> get_borderRightStyle(This,p)

#define IHTMLRuleStyle_put_borderBottomStyle(This,v)	\
    (This)->lpVtbl -> put_borderBottomStyle(This,v)

#define IHTMLRuleStyle_get_borderBottomStyle(This,p)	\
    (This)->lpVtbl -> get_borderBottomStyle(This,p)

#define IHTMLRuleStyle_put_borderLeftStyle(This,v)	\
    (This)->lpVtbl -> put_borderLeftStyle(This,v)

#define IHTMLRuleStyle_get_borderLeftStyle(This,p)	\
    (This)->lpVtbl -> get_borderLeftStyle(This,p)

#define IHTMLRuleStyle_put_width(This,v)	\
    (This)->lpVtbl -> put_width(This,v)

#define IHTMLRuleStyle_get_width(This,p)	\
    (This)->lpVtbl -> get_width(This,p)

#define IHTMLRuleStyle_put_height(This,v)	\
    (This)->lpVtbl -> put_height(This,v)

#define IHTMLRuleStyle_get_height(This,p)	\
    (This)->lpVtbl -> get_height(This,p)

#define IHTMLRuleStyle_put_styleFloat(This,v)	\
    (This)->lpVtbl -> put_styleFloat(This,v)

#define IHTMLRuleStyle_get_styleFloat(This,p)	\
    (This)->lpVtbl -> get_styleFloat(This,p)

#define IHTMLRuleStyle_put_clear(This,v)	\
    (This)->lpVtbl -> put_clear(This,v)

#define IHTMLRuleStyle_get_clear(This,p)	\
    (This)->lpVtbl -> get_clear(This,p)

#define IHTMLRuleStyle_put_display(This,v)	\
    (This)->lpVtbl -> put_display(This,v)

#define IHTMLRuleStyle_get_display(This,p)	\
    (This)->lpVtbl -> get_display(This,p)

#define IHTMLRuleStyle_put_visibility(This,v)	\
    (This)->lpVtbl -> put_visibility(This,v)

#define IHTMLRuleStyle_get_visibility(This,p)	\
    (This)->lpVtbl -> get_visibility(This,p)

#define IHTMLRuleStyle_put_listStyleType(This,v)	\
    (This)->lpVtbl -> put_listStyleType(This,v)

#define IHTMLRuleStyle_get_listStyleType(This,p)	\
    (This)->lpVtbl -> get_listStyleType(This,p)

#define IHTMLRuleStyle_put_listStylePosition(This,v)	\
    (This)->lpVtbl -> put_listStylePosition(This,v)

#define IHTMLRuleStyle_get_listStylePosition(This,p)	\
    (This)->lpVtbl -> get_listStylePosition(This,p)

#define IHTMLRuleStyle_put_listStyleImage(This,v)	\
    (This)->lpVtbl -> put_listStyleImage(This,v)

#define IHTMLRuleStyle_get_listStyleImage(This,p)	\
    (This)->lpVtbl -> get_listStyleImage(This,p)

#define IHTMLRuleStyle_put_listStyle(This,v)	\
    (This)->lpVtbl -> put_listStyle(This,v)

#define IHTMLRuleStyle_get_listStyle(This,p)	\
    (This)->lpVtbl -> get_listStyle(This,p)

#define IHTMLRuleStyle_put_whiteSpace(This,v)	\
    (This)->lpVtbl -> put_whiteSpace(This,v)

#define IHTMLRuleStyle_get_whiteSpace(This,p)	\
    (This)->lpVtbl -> get_whiteSpace(This,p)

#define IHTMLRuleStyle_put_top(This,v)	\
    (This)->lpVtbl -> put_top(This,v)

#define IHTMLRuleStyle_get_top(This,p)	\
    (This)->lpVtbl -> get_top(This,p)

#define IHTMLRuleStyle_put_left(This,v)	\
    (This)->lpVtbl -> put_left(This,v)

#define IHTMLRuleStyle_get_left(This,p)	\
    (This)->lpVtbl -> get_left(This,p)

#define IHTMLRuleStyle_get_position(This,p)	\
    (This)->lpVtbl -> get_position(This,p)

#define IHTMLRuleStyle_put_zIndex(This,v)	\
    (This)->lpVtbl -> put_zIndex(This,v)

#define IHTMLRuleStyle_get_zIndex(This,p)	\
    (This)->lpVtbl -> get_zIndex(This,p)

#define IHTMLRuleStyle_put_overflow(This,v)	\
    (This)->lpVtbl -> put_overflow(This,v)

#define IHTMLRuleStyle_get_overflow(This,p)	\
    (This)->lpVtbl -> get_overflow(This,p)

#define IHTMLRuleStyle_put_pageBreakBefore(This,v)	\
    (This)->lpVtbl -> put_pageBreakBefore(This,v)

#define IHTMLRuleStyle_get_pageBreakBefore(This,p)	\
    (This)->lpVtbl -> get_pageBreakBefore(This,p)

#define IHTMLRuleStyle_put_pageBreakAfter(This,v)	\
    (This)->lpVtbl -> put_pageBreakAfter(This,v)

#define IHTMLRuleStyle_get_pageBreakAfter(This,p)	\
    (This)->lpVtbl -> get_pageBreakAfter(This,p)

#define IHTMLRuleStyle_put_cssText(This,v)	\
    (This)->lpVtbl -> put_cssText(This,v)

#define IHTMLRuleStyle_get_cssText(This,p)	\
    (This)->lpVtbl -> get_cssText(This,p)

#define IHTMLRuleStyle_put_cursor(This,v)	\
    (This)->lpVtbl -> put_cursor(This,v)

#define IHTMLRuleStyle_get_cursor(This,p)	\
    (This)->lpVtbl -> get_cursor(This,p)

#define IHTMLRuleStyle_put_clip(This,v)	\
    (This)->lpVtbl -> put_clip(This,v)

#define IHTMLRuleStyle_get_clip(This,p)	\
    (This)->lpVtbl -> get_clip(This,p)

#define IHTMLRuleStyle_put_filter(This,v)	\
    (This)->lpVtbl -> put_filter(This,v)

#define IHTMLRuleStyle_get_filter(This,p)	\
    (This)->lpVtbl -> get_filter(This,p)

#define IHTMLRuleStyle_setAttribute(This,strAttributeName,AttributeValue,lFlags)	\
    (This)->lpVtbl -> setAttribute(This,strAttributeName,AttributeValue,lFlags)

#define IHTMLRuleStyle_getAttribute(This,strAttributeName,lFlags,AttributeValue)	\
    (This)->lpVtbl -> getAttribute(This,strAttributeName,lFlags,AttributeValue)

#define IHTMLRuleStyle_removeAttribute(This,strAttributeName,lFlags,pfSuccess)	\
    (This)->lpVtbl -> removeAttribute(This,strAttributeName,lFlags,pfSuccess)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_fontFamily_Proxy( 
    IHTMLRuleStyle * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle_put_fontFamily_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_fontFamily_Proxy( 
    IHTMLRuleStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLRuleStyle_get_fontFamily_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_fontStyle_Proxy( 
    IHTMLRuleStyle * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle_put_fontStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_fontStyle_Proxy( 
    IHTMLRuleStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLRuleStyle_get_fontStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_fontVariant_Proxy( 
    IHTMLRuleStyle * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle_put_fontVariant_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_fontVariant_Proxy( 
    IHTMLRuleStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLRuleStyle_get_fontVariant_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_fontWeight_Proxy( 
    IHTMLRuleStyle * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle_put_fontWeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_fontWeight_Proxy( 
    IHTMLRuleStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLRuleStyle_get_fontWeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_fontSize_Proxy( 
    IHTMLRuleStyle * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLRuleStyle_put_fontSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_fontSize_Proxy( 
    IHTMLRuleStyle * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLRuleStyle_get_fontSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_font_Proxy( 
    IHTMLRuleStyle * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle_put_font_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_font_Proxy( 
    IHTMLRuleStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLRuleStyle_get_font_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_color_Proxy( 
    IHTMLRuleStyle * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLRuleStyle_put_color_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_color_Proxy( 
    IHTMLRuleStyle * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLRuleStyle_get_color_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_background_Proxy( 
    IHTMLRuleStyle * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle_put_background_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_background_Proxy( 
    IHTMLRuleStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLRuleStyle_get_background_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_backgroundColor_Proxy( 
    IHTMLRuleStyle * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLRuleStyle_put_backgroundColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_backgroundColor_Proxy( 
    IHTMLRuleStyle * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLRuleStyle_get_backgroundColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_backgroundImage_Proxy( 
    IHTMLRuleStyle * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle_put_backgroundImage_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_backgroundImage_Proxy( 
    IHTMLRuleStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLRuleStyle_get_backgroundImage_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_backgroundRepeat_Proxy( 
    IHTMLRuleStyle * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle_put_backgroundRepeat_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_backgroundRepeat_Proxy( 
    IHTMLRuleStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLRuleStyle_get_backgroundRepeat_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_backgroundAttachment_Proxy( 
    IHTMLRuleStyle * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle_put_backgroundAttachment_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_backgroundAttachment_Proxy( 
    IHTMLRuleStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLRuleStyle_get_backgroundAttachment_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_backgroundPosition_Proxy( 
    IHTMLRuleStyle * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle_put_backgroundPosition_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_backgroundPosition_Proxy( 
    IHTMLRuleStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLRuleStyle_get_backgroundPosition_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_backgroundPositionX_Proxy( 
    IHTMLRuleStyle * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLRuleStyle_put_backgroundPositionX_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_backgroundPositionX_Proxy( 
    IHTMLRuleStyle * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLRuleStyle_get_backgroundPositionX_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_backgroundPositionY_Proxy( 
    IHTMLRuleStyle * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLRuleStyle_put_backgroundPositionY_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_backgroundPositionY_Proxy( 
    IHTMLRuleStyle * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLRuleStyle_get_backgroundPositionY_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_wordSpacing_Proxy( 
    IHTMLRuleStyle * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLRuleStyle_put_wordSpacing_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_wordSpacing_Proxy( 
    IHTMLRuleStyle * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLRuleStyle_get_wordSpacing_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_letterSpacing_Proxy( 
    IHTMLRuleStyle * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLRuleStyle_put_letterSpacing_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_letterSpacing_Proxy( 
    IHTMLRuleStyle * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLRuleStyle_get_letterSpacing_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_textDecoration_Proxy( 
    IHTMLRuleStyle * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle_put_textDecoration_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_textDecoration_Proxy( 
    IHTMLRuleStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLRuleStyle_get_textDecoration_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_textDecorationNone_Proxy( 
    IHTMLRuleStyle * This,
    /* [in] */ VARIANT_BOOL v);


void __RPC_STUB IHTMLRuleStyle_put_textDecorationNone_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_textDecorationNone_Proxy( 
    IHTMLRuleStyle * This,
    /* [out][retval] */ VARIANT_BOOL *p);


void __RPC_STUB IHTMLRuleStyle_get_textDecorationNone_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_textDecorationUnderline_Proxy( 
    IHTMLRuleStyle * This,
    /* [in] */ VARIANT_BOOL v);


void __RPC_STUB IHTMLRuleStyle_put_textDecorationUnderline_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_textDecorationUnderline_Proxy( 
    IHTMLRuleStyle * This,
    /* [out][retval] */ VARIANT_BOOL *p);


void __RPC_STUB IHTMLRuleStyle_get_textDecorationUnderline_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_textDecorationOverline_Proxy( 
    IHTMLRuleStyle * This,
    /* [in] */ VARIANT_BOOL v);


void __RPC_STUB IHTMLRuleStyle_put_textDecorationOverline_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_textDecorationOverline_Proxy( 
    IHTMLRuleStyle * This,
    /* [out][retval] */ VARIANT_BOOL *p);


void __RPC_STUB IHTMLRuleStyle_get_textDecorationOverline_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_textDecorationLineThrough_Proxy( 
    IHTMLRuleStyle * This,
    /* [in] */ VARIANT_BOOL v);


void __RPC_STUB IHTMLRuleStyle_put_textDecorationLineThrough_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_textDecorationLineThrough_Proxy( 
    IHTMLRuleStyle * This,
    /* [out][retval] */ VARIANT_BOOL *p);


void __RPC_STUB IHTMLRuleStyle_get_textDecorationLineThrough_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_textDecorationBlink_Proxy( 
    IHTMLRuleStyle * This,
    /* [in] */ VARIANT_BOOL v);


void __RPC_STUB IHTMLRuleStyle_put_textDecorationBlink_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_textDecorationBlink_Proxy( 
    IHTMLRuleStyle * This,
    /* [out][retval] */ VARIANT_BOOL *p);


void __RPC_STUB IHTMLRuleStyle_get_textDecorationBlink_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_verticalAlign_Proxy( 
    IHTMLRuleStyle * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLRuleStyle_put_verticalAlign_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_verticalAlign_Proxy( 
    IHTMLRuleStyle * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLRuleStyle_get_verticalAlign_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_textTransform_Proxy( 
    IHTMLRuleStyle * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle_put_textTransform_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_textTransform_Proxy( 
    IHTMLRuleStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLRuleStyle_get_textTransform_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_textAlign_Proxy( 
    IHTMLRuleStyle * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle_put_textAlign_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_textAlign_Proxy( 
    IHTMLRuleStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLRuleStyle_get_textAlign_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_textIndent_Proxy( 
    IHTMLRuleStyle * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLRuleStyle_put_textIndent_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_textIndent_Proxy( 
    IHTMLRuleStyle * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLRuleStyle_get_textIndent_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_lineHeight_Proxy( 
    IHTMLRuleStyle * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLRuleStyle_put_lineHeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_lineHeight_Proxy( 
    IHTMLRuleStyle * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLRuleStyle_get_lineHeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_marginTop_Proxy( 
    IHTMLRuleStyle * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLRuleStyle_put_marginTop_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_marginTop_Proxy( 
    IHTMLRuleStyle * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLRuleStyle_get_marginTop_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_marginRight_Proxy( 
    IHTMLRuleStyle * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLRuleStyle_put_marginRight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_marginRight_Proxy( 
    IHTMLRuleStyle * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLRuleStyle_get_marginRight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_marginBottom_Proxy( 
    IHTMLRuleStyle * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLRuleStyle_put_marginBottom_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_marginBottom_Proxy( 
    IHTMLRuleStyle * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLRuleStyle_get_marginBottom_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_marginLeft_Proxy( 
    IHTMLRuleStyle * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLRuleStyle_put_marginLeft_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_marginLeft_Proxy( 
    IHTMLRuleStyle * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLRuleStyle_get_marginLeft_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_margin_Proxy( 
    IHTMLRuleStyle * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle_put_margin_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_margin_Proxy( 
    IHTMLRuleStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLRuleStyle_get_margin_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_paddingTop_Proxy( 
    IHTMLRuleStyle * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLRuleStyle_put_paddingTop_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_paddingTop_Proxy( 
    IHTMLRuleStyle * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLRuleStyle_get_paddingTop_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_paddingRight_Proxy( 
    IHTMLRuleStyle * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLRuleStyle_put_paddingRight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_paddingRight_Proxy( 
    IHTMLRuleStyle * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLRuleStyle_get_paddingRight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_paddingBottom_Proxy( 
    IHTMLRuleStyle * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLRuleStyle_put_paddingBottom_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_paddingBottom_Proxy( 
    IHTMLRuleStyle * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLRuleStyle_get_paddingBottom_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_paddingLeft_Proxy( 
    IHTMLRuleStyle * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLRuleStyle_put_paddingLeft_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_paddingLeft_Proxy( 
    IHTMLRuleStyle * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLRuleStyle_get_paddingLeft_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_padding_Proxy( 
    IHTMLRuleStyle * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle_put_padding_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_padding_Proxy( 
    IHTMLRuleStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLRuleStyle_get_padding_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_border_Proxy( 
    IHTMLRuleStyle * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle_put_border_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_border_Proxy( 
    IHTMLRuleStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLRuleStyle_get_border_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_borderTop_Proxy( 
    IHTMLRuleStyle * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle_put_borderTop_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_borderTop_Proxy( 
    IHTMLRuleStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLRuleStyle_get_borderTop_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_borderRight_Proxy( 
    IHTMLRuleStyle * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle_put_borderRight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_borderRight_Proxy( 
    IHTMLRuleStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLRuleStyle_get_borderRight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_borderBottom_Proxy( 
    IHTMLRuleStyle * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle_put_borderBottom_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_borderBottom_Proxy( 
    IHTMLRuleStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLRuleStyle_get_borderBottom_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_borderLeft_Proxy( 
    IHTMLRuleStyle * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle_put_borderLeft_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_borderLeft_Proxy( 
    IHTMLRuleStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLRuleStyle_get_borderLeft_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_borderColor_Proxy( 
    IHTMLRuleStyle * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle_put_borderColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_borderColor_Proxy( 
    IHTMLRuleStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLRuleStyle_get_borderColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_borderTopColor_Proxy( 
    IHTMLRuleStyle * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLRuleStyle_put_borderTopColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_borderTopColor_Proxy( 
    IHTMLRuleStyle * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLRuleStyle_get_borderTopColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_borderRightColor_Proxy( 
    IHTMLRuleStyle * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLRuleStyle_put_borderRightColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_borderRightColor_Proxy( 
    IHTMLRuleStyle * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLRuleStyle_get_borderRightColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_borderBottomColor_Proxy( 
    IHTMLRuleStyle * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLRuleStyle_put_borderBottomColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_borderBottomColor_Proxy( 
    IHTMLRuleStyle * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLRuleStyle_get_borderBottomColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_borderLeftColor_Proxy( 
    IHTMLRuleStyle * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLRuleStyle_put_borderLeftColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_borderLeftColor_Proxy( 
    IHTMLRuleStyle * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLRuleStyle_get_borderLeftColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_borderWidth_Proxy( 
    IHTMLRuleStyle * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle_put_borderWidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_borderWidth_Proxy( 
    IHTMLRuleStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLRuleStyle_get_borderWidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_borderTopWidth_Proxy( 
    IHTMLRuleStyle * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLRuleStyle_put_borderTopWidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_borderTopWidth_Proxy( 
    IHTMLRuleStyle * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLRuleStyle_get_borderTopWidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_borderRightWidth_Proxy( 
    IHTMLRuleStyle * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLRuleStyle_put_borderRightWidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_borderRightWidth_Proxy( 
    IHTMLRuleStyle * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLRuleStyle_get_borderRightWidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_borderBottomWidth_Proxy( 
    IHTMLRuleStyle * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLRuleStyle_put_borderBottomWidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_borderBottomWidth_Proxy( 
    IHTMLRuleStyle * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLRuleStyle_get_borderBottomWidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_borderLeftWidth_Proxy( 
    IHTMLRuleStyle * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLRuleStyle_put_borderLeftWidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_borderLeftWidth_Proxy( 
    IHTMLRuleStyle * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLRuleStyle_get_borderLeftWidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_borderStyle_Proxy( 
    IHTMLRuleStyle * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle_put_borderStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_borderStyle_Proxy( 
    IHTMLRuleStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLRuleStyle_get_borderStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_borderTopStyle_Proxy( 
    IHTMLRuleStyle * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle_put_borderTopStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_borderTopStyle_Proxy( 
    IHTMLRuleStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLRuleStyle_get_borderTopStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_borderRightStyle_Proxy( 
    IHTMLRuleStyle * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle_put_borderRightStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_borderRightStyle_Proxy( 
    IHTMLRuleStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLRuleStyle_get_borderRightStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_borderBottomStyle_Proxy( 
    IHTMLRuleStyle * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle_put_borderBottomStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_borderBottomStyle_Proxy( 
    IHTMLRuleStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLRuleStyle_get_borderBottomStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_borderLeftStyle_Proxy( 
    IHTMLRuleStyle * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle_put_borderLeftStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_borderLeftStyle_Proxy( 
    IHTMLRuleStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLRuleStyle_get_borderLeftStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_width_Proxy( 
    IHTMLRuleStyle * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLRuleStyle_put_width_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_width_Proxy( 
    IHTMLRuleStyle * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLRuleStyle_get_width_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_height_Proxy( 
    IHTMLRuleStyle * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLRuleStyle_put_height_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_height_Proxy( 
    IHTMLRuleStyle * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLRuleStyle_get_height_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_styleFloat_Proxy( 
    IHTMLRuleStyle * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle_put_styleFloat_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_styleFloat_Proxy( 
    IHTMLRuleStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLRuleStyle_get_styleFloat_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_clear_Proxy( 
    IHTMLRuleStyle * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle_put_clear_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_clear_Proxy( 
    IHTMLRuleStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLRuleStyle_get_clear_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_display_Proxy( 
    IHTMLRuleStyle * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle_put_display_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_display_Proxy( 
    IHTMLRuleStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLRuleStyle_get_display_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_visibility_Proxy( 
    IHTMLRuleStyle * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle_put_visibility_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_visibility_Proxy( 
    IHTMLRuleStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLRuleStyle_get_visibility_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_listStyleType_Proxy( 
    IHTMLRuleStyle * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle_put_listStyleType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_listStyleType_Proxy( 
    IHTMLRuleStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLRuleStyle_get_listStyleType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_listStylePosition_Proxy( 
    IHTMLRuleStyle * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle_put_listStylePosition_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_listStylePosition_Proxy( 
    IHTMLRuleStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLRuleStyle_get_listStylePosition_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_listStyleImage_Proxy( 
    IHTMLRuleStyle * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle_put_listStyleImage_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_listStyleImage_Proxy( 
    IHTMLRuleStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLRuleStyle_get_listStyleImage_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_listStyle_Proxy( 
    IHTMLRuleStyle * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle_put_listStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_listStyle_Proxy( 
    IHTMLRuleStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLRuleStyle_get_listStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_whiteSpace_Proxy( 
    IHTMLRuleStyle * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle_put_whiteSpace_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_whiteSpace_Proxy( 
    IHTMLRuleStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLRuleStyle_get_whiteSpace_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_top_Proxy( 
    IHTMLRuleStyle * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLRuleStyle_put_top_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_top_Proxy( 
    IHTMLRuleStyle * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLRuleStyle_get_top_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_left_Proxy( 
    IHTMLRuleStyle * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLRuleStyle_put_left_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_left_Proxy( 
    IHTMLRuleStyle * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLRuleStyle_get_left_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_position_Proxy( 
    IHTMLRuleStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLRuleStyle_get_position_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_zIndex_Proxy( 
    IHTMLRuleStyle * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLRuleStyle_put_zIndex_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_zIndex_Proxy( 
    IHTMLRuleStyle * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLRuleStyle_get_zIndex_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_overflow_Proxy( 
    IHTMLRuleStyle * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle_put_overflow_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_overflow_Proxy( 
    IHTMLRuleStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLRuleStyle_get_overflow_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_pageBreakBefore_Proxy( 
    IHTMLRuleStyle * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle_put_pageBreakBefore_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_pageBreakBefore_Proxy( 
    IHTMLRuleStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLRuleStyle_get_pageBreakBefore_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_pageBreakAfter_Proxy( 
    IHTMLRuleStyle * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle_put_pageBreakAfter_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_pageBreakAfter_Proxy( 
    IHTMLRuleStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLRuleStyle_get_pageBreakAfter_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_cssText_Proxy( 
    IHTMLRuleStyle * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle_put_cssText_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_cssText_Proxy( 
    IHTMLRuleStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLRuleStyle_get_cssText_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_cursor_Proxy( 
    IHTMLRuleStyle * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle_put_cursor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_cursor_Proxy( 
    IHTMLRuleStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLRuleStyle_get_cursor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_clip_Proxy( 
    IHTMLRuleStyle * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle_put_clip_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_clip_Proxy( 
    IHTMLRuleStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLRuleStyle_get_clip_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_put_filter_Proxy( 
    IHTMLRuleStyle * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle_put_filter_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_get_filter_Proxy( 
    IHTMLRuleStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLRuleStyle_get_filter_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_setAttribute_Proxy( 
    IHTMLRuleStyle * This,
    /* [in] */ BSTR strAttributeName,
    /* [in] */ VARIANT AttributeValue,
    /* [in][defaultvalue] */ LONG lFlags);


void __RPC_STUB IHTMLRuleStyle_setAttribute_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_getAttribute_Proxy( 
    IHTMLRuleStyle * This,
    /* [in] */ BSTR strAttributeName,
    /* [in][defaultvalue] */ LONG lFlags,
    /* [out][retval] */ VARIANT *AttributeValue);


void __RPC_STUB IHTMLRuleStyle_getAttribute_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle_removeAttribute_Proxy( 
    IHTMLRuleStyle * This,
    /* [in] */ BSTR strAttributeName,
    /* [in][defaultvalue] */ LONG lFlags,
    /* [out][retval] */ VARIANT_BOOL *pfSuccess);


void __RPC_STUB IHTMLRuleStyle_removeAttribute_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLRuleStyle_INTERFACE_DEFINED__ */


#ifndef __IHTMLRuleStyle2_INTERFACE_DEFINED__
#define __IHTMLRuleStyle2_INTERFACE_DEFINED__

/* interface IHTMLRuleStyle2 */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLRuleStyle2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f4ac-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLRuleStyle2 : public IDispatch
    {
    public:
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_tableLayout( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_tableLayout( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_borderCollapse( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderCollapse( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_direction( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_direction( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_behavior( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_behavior( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_position( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_position( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_unicodeBidi( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_unicodeBidi( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_bottom( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_bottom( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_right( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_right( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [hidden][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_pixelBottom( 
            /* [in] */ long v) = 0;
        
        virtual /* [hidden][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_pixelBottom( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [hidden][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_pixelRight( 
            /* [in] */ long v) = 0;
        
        virtual /* [hidden][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_pixelRight( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_posBottom( 
            /* [in] */ float v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_posBottom( 
            /* [out][retval] */ float *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_posRight( 
            /* [in] */ float v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_posRight( 
            /* [out][retval] */ float *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_imeMode( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_imeMode( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_rubyAlign( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_rubyAlign( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_rubyPosition( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_rubyPosition( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_rubyOverhang( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_rubyOverhang( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_layoutGridChar( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_layoutGridChar( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_layoutGridLine( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_layoutGridLine( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_layoutGridMode( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_layoutGridMode( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_layoutGridType( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_layoutGridType( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_layoutGrid( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_layoutGrid( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textAutospace( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textAutospace( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_wordBreak( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_wordBreak( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_lineBreak( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_lineBreak( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textJustify( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textJustify( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textJustifyTrim( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textJustifyTrim( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textKashida( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textKashida( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_overflowX( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_overflowX( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_overflowY( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_overflowY( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_accelerator( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_accelerator( 
            /* [out][retval] */ BSTR *p) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLRuleStyle2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IHTMLRuleStyle2 * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IHTMLRuleStyle2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IHTMLRuleStyle2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IHTMLRuleStyle2 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IHTMLRuleStyle2 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IHTMLRuleStyle2 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IHTMLRuleStyle2 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_tableLayout )( 
            IHTMLRuleStyle2 * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_tableLayout )( 
            IHTMLRuleStyle2 * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_borderCollapse )( 
            IHTMLRuleStyle2 * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderCollapse )( 
            IHTMLRuleStyle2 * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_direction )( 
            IHTMLRuleStyle2 * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_direction )( 
            IHTMLRuleStyle2 * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_behavior )( 
            IHTMLRuleStyle2 * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_behavior )( 
            IHTMLRuleStyle2 * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_position )( 
            IHTMLRuleStyle2 * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_position )( 
            IHTMLRuleStyle2 * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_unicodeBidi )( 
            IHTMLRuleStyle2 * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_unicodeBidi )( 
            IHTMLRuleStyle2 * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_bottom )( 
            IHTMLRuleStyle2 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_bottom )( 
            IHTMLRuleStyle2 * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_right )( 
            IHTMLRuleStyle2 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_right )( 
            IHTMLRuleStyle2 * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [hidden][bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_pixelBottom )( 
            IHTMLRuleStyle2 * This,
            /* [in] */ long v);
        
        /* [hidden][bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_pixelBottom )( 
            IHTMLRuleStyle2 * This,
            /* [out][retval] */ long *p);
        
        /* [hidden][bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_pixelRight )( 
            IHTMLRuleStyle2 * This,
            /* [in] */ long v);
        
        /* [hidden][bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_pixelRight )( 
            IHTMLRuleStyle2 * This,
            /* [out][retval] */ long *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_posBottom )( 
            IHTMLRuleStyle2 * This,
            /* [in] */ float v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_posBottom )( 
            IHTMLRuleStyle2 * This,
            /* [out][retval] */ float *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_posRight )( 
            IHTMLRuleStyle2 * This,
            /* [in] */ float v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_posRight )( 
            IHTMLRuleStyle2 * This,
            /* [out][retval] */ float *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_imeMode )( 
            IHTMLRuleStyle2 * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_imeMode )( 
            IHTMLRuleStyle2 * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_rubyAlign )( 
            IHTMLRuleStyle2 * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_rubyAlign )( 
            IHTMLRuleStyle2 * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_rubyPosition )( 
            IHTMLRuleStyle2 * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_rubyPosition )( 
            IHTMLRuleStyle2 * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_rubyOverhang )( 
            IHTMLRuleStyle2 * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_rubyOverhang )( 
            IHTMLRuleStyle2 * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_layoutGridChar )( 
            IHTMLRuleStyle2 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_layoutGridChar )( 
            IHTMLRuleStyle2 * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_layoutGridLine )( 
            IHTMLRuleStyle2 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_layoutGridLine )( 
            IHTMLRuleStyle2 * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_layoutGridMode )( 
            IHTMLRuleStyle2 * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_layoutGridMode )( 
            IHTMLRuleStyle2 * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_layoutGridType )( 
            IHTMLRuleStyle2 * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_layoutGridType )( 
            IHTMLRuleStyle2 * This,
            /* [out][retval] */ BSTR *p);
        
        /* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_layoutGrid )( 
            IHTMLRuleStyle2 * This,
            /* [in] */ BSTR v);
        
        /* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_layoutGrid )( 
            IHTMLRuleStyle2 * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_textAutospace )( 
            IHTMLRuleStyle2 * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_textAutospace )( 
            IHTMLRuleStyle2 * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_wordBreak )( 
            IHTMLRuleStyle2 * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_wordBreak )( 
            IHTMLRuleStyle2 * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_lineBreak )( 
            IHTMLRuleStyle2 * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_lineBreak )( 
            IHTMLRuleStyle2 * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_textJustify )( 
            IHTMLRuleStyle2 * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_textJustify )( 
            IHTMLRuleStyle2 * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_textJustifyTrim )( 
            IHTMLRuleStyle2 * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_textJustifyTrim )( 
            IHTMLRuleStyle2 * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_textKashida )( 
            IHTMLRuleStyle2 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_textKashida )( 
            IHTMLRuleStyle2 * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_overflowX )( 
            IHTMLRuleStyle2 * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_overflowX )( 
            IHTMLRuleStyle2 * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_overflowY )( 
            IHTMLRuleStyle2 * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_overflowY )( 
            IHTMLRuleStyle2 * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_accelerator )( 
            IHTMLRuleStyle2 * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_accelerator )( 
            IHTMLRuleStyle2 * This,
            /* [out][retval] */ BSTR *p);
        
        END_INTERFACE
    } IHTMLRuleStyle2Vtbl;

    interface IHTMLRuleStyle2
    {
        CONST_VTBL struct IHTMLRuleStyle2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLRuleStyle2_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IHTMLRuleStyle2_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IHTMLRuleStyle2_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IHTMLRuleStyle2_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IHTMLRuleStyle2_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IHTMLRuleStyle2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IHTMLRuleStyle2_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IHTMLRuleStyle2_put_tableLayout(This,v)	\
    (This)->lpVtbl -> put_tableLayout(This,v)

#define IHTMLRuleStyle2_get_tableLayout(This,p)	\
    (This)->lpVtbl -> get_tableLayout(This,p)

#define IHTMLRuleStyle2_put_borderCollapse(This,v)	\
    (This)->lpVtbl -> put_borderCollapse(This,v)

#define IHTMLRuleStyle2_get_borderCollapse(This,p)	\
    (This)->lpVtbl -> get_borderCollapse(This,p)

#define IHTMLRuleStyle2_put_direction(This,v)	\
    (This)->lpVtbl -> put_direction(This,v)

#define IHTMLRuleStyle2_get_direction(This,p)	\
    (This)->lpVtbl -> get_direction(This,p)

#define IHTMLRuleStyle2_put_behavior(This,v)	\
    (This)->lpVtbl -> put_behavior(This,v)

#define IHTMLRuleStyle2_get_behavior(This,p)	\
    (This)->lpVtbl -> get_behavior(This,p)

#define IHTMLRuleStyle2_put_position(This,v)	\
    (This)->lpVtbl -> put_position(This,v)

#define IHTMLRuleStyle2_get_position(This,p)	\
    (This)->lpVtbl -> get_position(This,p)

#define IHTMLRuleStyle2_put_unicodeBidi(This,v)	\
    (This)->lpVtbl -> put_unicodeBidi(This,v)

#define IHTMLRuleStyle2_get_unicodeBidi(This,p)	\
    (This)->lpVtbl -> get_unicodeBidi(This,p)

#define IHTMLRuleStyle2_put_bottom(This,v)	\
    (This)->lpVtbl -> put_bottom(This,v)

#define IHTMLRuleStyle2_get_bottom(This,p)	\
    (This)->lpVtbl -> get_bottom(This,p)

#define IHTMLRuleStyle2_put_right(This,v)	\
    (This)->lpVtbl -> put_right(This,v)

#define IHTMLRuleStyle2_get_right(This,p)	\
    (This)->lpVtbl -> get_right(This,p)

#define IHTMLRuleStyle2_put_pixelBottom(This,v)	\
    (This)->lpVtbl -> put_pixelBottom(This,v)

#define IHTMLRuleStyle2_get_pixelBottom(This,p)	\
    (This)->lpVtbl -> get_pixelBottom(This,p)

#define IHTMLRuleStyle2_put_pixelRight(This,v)	\
    (This)->lpVtbl -> put_pixelRight(This,v)

#define IHTMLRuleStyle2_get_pixelRight(This,p)	\
    (This)->lpVtbl -> get_pixelRight(This,p)

#define IHTMLRuleStyle2_put_posBottom(This,v)	\
    (This)->lpVtbl -> put_posBottom(This,v)

#define IHTMLRuleStyle2_get_posBottom(This,p)	\
    (This)->lpVtbl -> get_posBottom(This,p)

#define IHTMLRuleStyle2_put_posRight(This,v)	\
    (This)->lpVtbl -> put_posRight(This,v)

#define IHTMLRuleStyle2_get_posRight(This,p)	\
    (This)->lpVtbl -> get_posRight(This,p)

#define IHTMLRuleStyle2_put_imeMode(This,v)	\
    (This)->lpVtbl -> put_imeMode(This,v)

#define IHTMLRuleStyle2_get_imeMode(This,p)	\
    (This)->lpVtbl -> get_imeMode(This,p)

#define IHTMLRuleStyle2_put_rubyAlign(This,v)	\
    (This)->lpVtbl -> put_rubyAlign(This,v)

#define IHTMLRuleStyle2_get_rubyAlign(This,p)	\
    (This)->lpVtbl -> get_rubyAlign(This,p)

#define IHTMLRuleStyle2_put_rubyPosition(This,v)	\
    (This)->lpVtbl -> put_rubyPosition(This,v)

#define IHTMLRuleStyle2_get_rubyPosition(This,p)	\
    (This)->lpVtbl -> get_rubyPosition(This,p)

#define IHTMLRuleStyle2_put_rubyOverhang(This,v)	\
    (This)->lpVtbl -> put_rubyOverhang(This,v)

#define IHTMLRuleStyle2_get_rubyOverhang(This,p)	\
    (This)->lpVtbl -> get_rubyOverhang(This,p)

#define IHTMLRuleStyle2_put_layoutGridChar(This,v)	\
    (This)->lpVtbl -> put_layoutGridChar(This,v)

#define IHTMLRuleStyle2_get_layoutGridChar(This,p)	\
    (This)->lpVtbl -> get_layoutGridChar(This,p)

#define IHTMLRuleStyle2_put_layoutGridLine(This,v)	\
    (This)->lpVtbl -> put_layoutGridLine(This,v)

#define IHTMLRuleStyle2_get_layoutGridLine(This,p)	\
    (This)->lpVtbl -> get_layoutGridLine(This,p)

#define IHTMLRuleStyle2_put_layoutGridMode(This,v)	\
    (This)->lpVtbl -> put_layoutGridMode(This,v)

#define IHTMLRuleStyle2_get_layoutGridMode(This,p)	\
    (This)->lpVtbl -> get_layoutGridMode(This,p)

#define IHTMLRuleStyle2_put_layoutGridType(This,v)	\
    (This)->lpVtbl -> put_layoutGridType(This,v)

#define IHTMLRuleStyle2_get_layoutGridType(This,p)	\
    (This)->lpVtbl -> get_layoutGridType(This,p)

#define IHTMLRuleStyle2_put_layoutGrid(This,v)	\
    (This)->lpVtbl -> put_layoutGrid(This,v)

#define IHTMLRuleStyle2_get_layoutGrid(This,p)	\
    (This)->lpVtbl -> get_layoutGrid(This,p)

#define IHTMLRuleStyle2_put_textAutospace(This,v)	\
    (This)->lpVtbl -> put_textAutospace(This,v)

#define IHTMLRuleStyle2_get_textAutospace(This,p)	\
    (This)->lpVtbl -> get_textAutospace(This,p)

#define IHTMLRuleStyle2_put_wordBreak(This,v)	\
    (This)->lpVtbl -> put_wordBreak(This,v)

#define IHTMLRuleStyle2_get_wordBreak(This,p)	\
    (This)->lpVtbl -> get_wordBreak(This,p)

#define IHTMLRuleStyle2_put_lineBreak(This,v)	\
    (This)->lpVtbl -> put_lineBreak(This,v)

#define IHTMLRuleStyle2_get_lineBreak(This,p)	\
    (This)->lpVtbl -> get_lineBreak(This,p)

#define IHTMLRuleStyle2_put_textJustify(This,v)	\
    (This)->lpVtbl -> put_textJustify(This,v)

#define IHTMLRuleStyle2_get_textJustify(This,p)	\
    (This)->lpVtbl -> get_textJustify(This,p)

#define IHTMLRuleStyle2_put_textJustifyTrim(This,v)	\
    (This)->lpVtbl -> put_textJustifyTrim(This,v)

#define IHTMLRuleStyle2_get_textJustifyTrim(This,p)	\
    (This)->lpVtbl -> get_textJustifyTrim(This,p)

#define IHTMLRuleStyle2_put_textKashida(This,v)	\
    (This)->lpVtbl -> put_textKashida(This,v)

#define IHTMLRuleStyle2_get_textKashida(This,p)	\
    (This)->lpVtbl -> get_textKashida(This,p)

#define IHTMLRuleStyle2_put_overflowX(This,v)	\
    (This)->lpVtbl -> put_overflowX(This,v)

#define IHTMLRuleStyle2_get_overflowX(This,p)	\
    (This)->lpVtbl -> get_overflowX(This,p)

#define IHTMLRuleStyle2_put_overflowY(This,v)	\
    (This)->lpVtbl -> put_overflowY(This,v)

#define IHTMLRuleStyle2_get_overflowY(This,p)	\
    (This)->lpVtbl -> get_overflowY(This,p)

#define IHTMLRuleStyle2_put_accelerator(This,v)	\
    (This)->lpVtbl -> put_accelerator(This,v)

#define IHTMLRuleStyle2_get_accelerator(This,p)	\
    (This)->lpVtbl -> get_accelerator(This,p)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_put_tableLayout_Proxy( 
    IHTMLRuleStyle2 * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle2_put_tableLayout_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_get_tableLayout_Proxy( 
    IHTMLRuleStyle2 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLRuleStyle2_get_tableLayout_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_put_borderCollapse_Proxy( 
    IHTMLRuleStyle2 * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle2_put_borderCollapse_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_get_borderCollapse_Proxy( 
    IHTMLRuleStyle2 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLRuleStyle2_get_borderCollapse_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_put_direction_Proxy( 
    IHTMLRuleStyle2 * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle2_put_direction_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_get_direction_Proxy( 
    IHTMLRuleStyle2 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLRuleStyle2_get_direction_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_put_behavior_Proxy( 
    IHTMLRuleStyle2 * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle2_put_behavior_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_get_behavior_Proxy( 
    IHTMLRuleStyle2 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLRuleStyle2_get_behavior_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_put_position_Proxy( 
    IHTMLRuleStyle2 * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle2_put_position_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_get_position_Proxy( 
    IHTMLRuleStyle2 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLRuleStyle2_get_position_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_put_unicodeBidi_Proxy( 
    IHTMLRuleStyle2 * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle2_put_unicodeBidi_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_get_unicodeBidi_Proxy( 
    IHTMLRuleStyle2 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLRuleStyle2_get_unicodeBidi_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_put_bottom_Proxy( 
    IHTMLRuleStyle2 * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLRuleStyle2_put_bottom_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_get_bottom_Proxy( 
    IHTMLRuleStyle2 * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLRuleStyle2_get_bottom_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_put_right_Proxy( 
    IHTMLRuleStyle2 * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLRuleStyle2_put_right_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_get_right_Proxy( 
    IHTMLRuleStyle2 * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLRuleStyle2_get_right_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [hidden][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_put_pixelBottom_Proxy( 
    IHTMLRuleStyle2 * This,
    /* [in] */ long v);


void __RPC_STUB IHTMLRuleStyle2_put_pixelBottom_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [hidden][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_get_pixelBottom_Proxy( 
    IHTMLRuleStyle2 * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLRuleStyle2_get_pixelBottom_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [hidden][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_put_pixelRight_Proxy( 
    IHTMLRuleStyle2 * This,
    /* [in] */ long v);


void __RPC_STUB IHTMLRuleStyle2_put_pixelRight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [hidden][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_get_pixelRight_Proxy( 
    IHTMLRuleStyle2 * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLRuleStyle2_get_pixelRight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_put_posBottom_Proxy( 
    IHTMLRuleStyle2 * This,
    /* [in] */ float v);


void __RPC_STUB IHTMLRuleStyle2_put_posBottom_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_get_posBottom_Proxy( 
    IHTMLRuleStyle2 * This,
    /* [out][retval] */ float *p);


void __RPC_STUB IHTMLRuleStyle2_get_posBottom_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_put_posRight_Proxy( 
    IHTMLRuleStyle2 * This,
    /* [in] */ float v);


void __RPC_STUB IHTMLRuleStyle2_put_posRight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_get_posRight_Proxy( 
    IHTMLRuleStyle2 * This,
    /* [out][retval] */ float *p);


void __RPC_STUB IHTMLRuleStyle2_get_posRight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_put_imeMode_Proxy( 
    IHTMLRuleStyle2 * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle2_put_imeMode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_get_imeMode_Proxy( 
    IHTMLRuleStyle2 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLRuleStyle2_get_imeMode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_put_rubyAlign_Proxy( 
    IHTMLRuleStyle2 * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle2_put_rubyAlign_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_get_rubyAlign_Proxy( 
    IHTMLRuleStyle2 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLRuleStyle2_get_rubyAlign_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_put_rubyPosition_Proxy( 
    IHTMLRuleStyle2 * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle2_put_rubyPosition_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_get_rubyPosition_Proxy( 
    IHTMLRuleStyle2 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLRuleStyle2_get_rubyPosition_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_put_rubyOverhang_Proxy( 
    IHTMLRuleStyle2 * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle2_put_rubyOverhang_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_get_rubyOverhang_Proxy( 
    IHTMLRuleStyle2 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLRuleStyle2_get_rubyOverhang_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_put_layoutGridChar_Proxy( 
    IHTMLRuleStyle2 * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLRuleStyle2_put_layoutGridChar_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_get_layoutGridChar_Proxy( 
    IHTMLRuleStyle2 * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLRuleStyle2_get_layoutGridChar_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_put_layoutGridLine_Proxy( 
    IHTMLRuleStyle2 * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLRuleStyle2_put_layoutGridLine_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_get_layoutGridLine_Proxy( 
    IHTMLRuleStyle2 * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLRuleStyle2_get_layoutGridLine_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_put_layoutGridMode_Proxy( 
    IHTMLRuleStyle2 * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle2_put_layoutGridMode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_get_layoutGridMode_Proxy( 
    IHTMLRuleStyle2 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLRuleStyle2_get_layoutGridMode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_put_layoutGridType_Proxy( 
    IHTMLRuleStyle2 * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle2_put_layoutGridType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_get_layoutGridType_Proxy( 
    IHTMLRuleStyle2 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLRuleStyle2_get_layoutGridType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [nonbrowsable][bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_put_layoutGrid_Proxy( 
    IHTMLRuleStyle2 * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle2_put_layoutGrid_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [nonbrowsable][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_get_layoutGrid_Proxy( 
    IHTMLRuleStyle2 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLRuleStyle2_get_layoutGrid_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_put_textAutospace_Proxy( 
    IHTMLRuleStyle2 * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle2_put_textAutospace_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_get_textAutospace_Proxy( 
    IHTMLRuleStyle2 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLRuleStyle2_get_textAutospace_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_put_wordBreak_Proxy( 
    IHTMLRuleStyle2 * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle2_put_wordBreak_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_get_wordBreak_Proxy( 
    IHTMLRuleStyle2 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLRuleStyle2_get_wordBreak_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_put_lineBreak_Proxy( 
    IHTMLRuleStyle2 * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle2_put_lineBreak_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_get_lineBreak_Proxy( 
    IHTMLRuleStyle2 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLRuleStyle2_get_lineBreak_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_put_textJustify_Proxy( 
    IHTMLRuleStyle2 * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle2_put_textJustify_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_get_textJustify_Proxy( 
    IHTMLRuleStyle2 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLRuleStyle2_get_textJustify_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_put_textJustifyTrim_Proxy( 
    IHTMLRuleStyle2 * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle2_put_textJustifyTrim_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_get_textJustifyTrim_Proxy( 
    IHTMLRuleStyle2 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLRuleStyle2_get_textJustifyTrim_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_put_textKashida_Proxy( 
    IHTMLRuleStyle2 * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLRuleStyle2_put_textKashida_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_get_textKashida_Proxy( 
    IHTMLRuleStyle2 * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLRuleStyle2_get_textKashida_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_put_overflowX_Proxy( 
    IHTMLRuleStyle2 * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle2_put_overflowX_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_get_overflowX_Proxy( 
    IHTMLRuleStyle2 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLRuleStyle2_get_overflowX_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_put_overflowY_Proxy( 
    IHTMLRuleStyle2 * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle2_put_overflowY_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_get_overflowY_Proxy( 
    IHTMLRuleStyle2 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLRuleStyle2_get_overflowY_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_put_accelerator_Proxy( 
    IHTMLRuleStyle2 * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle2_put_accelerator_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle2_get_accelerator_Proxy( 
    IHTMLRuleStyle2 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLRuleStyle2_get_accelerator_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLRuleStyle2_INTERFACE_DEFINED__ */


#ifndef __IHTMLRuleStyle3_INTERFACE_DEFINED__
#define __IHTMLRuleStyle3_INTERFACE_DEFINED__

/* interface IHTMLRuleStyle3 */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLRuleStyle3;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f657-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLRuleStyle3 : public IDispatch
    {
    public:
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_layoutFlow( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_layoutFlow( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_zoom( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_zoom( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_wordWrap( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_wordWrap( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textUnderlinePosition( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textUnderlinePosition( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_scrollbarBaseColor( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_scrollbarBaseColor( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_scrollbarFaceColor( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_scrollbarFaceColor( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_scrollbar3dLightColor( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_scrollbar3dLightColor( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_scrollbarShadowColor( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_scrollbarShadowColor( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_scrollbarHighlightColor( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_scrollbarHighlightColor( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_scrollbarDarkShadowColor( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_scrollbarDarkShadowColor( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_scrollbarArrowColor( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_scrollbarArrowColor( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_scrollbarTrackColor( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_scrollbarTrackColor( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_writingMode( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_writingMode( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textAlignLast( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textAlignLast( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textKashidaSpace( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textKashidaSpace( 
            /* [out][retval] */ VARIANT *p) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLRuleStyle3Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IHTMLRuleStyle3 * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IHTMLRuleStyle3 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IHTMLRuleStyle3 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IHTMLRuleStyle3 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IHTMLRuleStyle3 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IHTMLRuleStyle3 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IHTMLRuleStyle3 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_layoutFlow )( 
            IHTMLRuleStyle3 * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_layoutFlow )( 
            IHTMLRuleStyle3 * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_zoom )( 
            IHTMLRuleStyle3 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_zoom )( 
            IHTMLRuleStyle3 * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_wordWrap )( 
            IHTMLRuleStyle3 * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_wordWrap )( 
            IHTMLRuleStyle3 * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_textUnderlinePosition )( 
            IHTMLRuleStyle3 * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_textUnderlinePosition )( 
            IHTMLRuleStyle3 * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_scrollbarBaseColor )( 
            IHTMLRuleStyle3 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_scrollbarBaseColor )( 
            IHTMLRuleStyle3 * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_scrollbarFaceColor )( 
            IHTMLRuleStyle3 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_scrollbarFaceColor )( 
            IHTMLRuleStyle3 * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_scrollbar3dLightColor )( 
            IHTMLRuleStyle3 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_scrollbar3dLightColor )( 
            IHTMLRuleStyle3 * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_scrollbarShadowColor )( 
            IHTMLRuleStyle3 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_scrollbarShadowColor )( 
            IHTMLRuleStyle3 * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_scrollbarHighlightColor )( 
            IHTMLRuleStyle3 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_scrollbarHighlightColor )( 
            IHTMLRuleStyle3 * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_scrollbarDarkShadowColor )( 
            IHTMLRuleStyle3 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_scrollbarDarkShadowColor )( 
            IHTMLRuleStyle3 * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_scrollbarArrowColor )( 
            IHTMLRuleStyle3 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_scrollbarArrowColor )( 
            IHTMLRuleStyle3 * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_scrollbarTrackColor )( 
            IHTMLRuleStyle3 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_scrollbarTrackColor )( 
            IHTMLRuleStyle3 * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_writingMode )( 
            IHTMLRuleStyle3 * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_writingMode )( 
            IHTMLRuleStyle3 * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_textAlignLast )( 
            IHTMLRuleStyle3 * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_textAlignLast )( 
            IHTMLRuleStyle3 * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_textKashidaSpace )( 
            IHTMLRuleStyle3 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_textKashidaSpace )( 
            IHTMLRuleStyle3 * This,
            /* [out][retval] */ VARIANT *p);
        
        END_INTERFACE
    } IHTMLRuleStyle3Vtbl;

    interface IHTMLRuleStyle3
    {
        CONST_VTBL struct IHTMLRuleStyle3Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLRuleStyle3_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IHTMLRuleStyle3_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IHTMLRuleStyle3_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IHTMLRuleStyle3_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IHTMLRuleStyle3_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IHTMLRuleStyle3_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IHTMLRuleStyle3_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IHTMLRuleStyle3_put_layoutFlow(This,v)	\
    (This)->lpVtbl -> put_layoutFlow(This,v)

#define IHTMLRuleStyle3_get_layoutFlow(This,p)	\
    (This)->lpVtbl -> get_layoutFlow(This,p)

#define IHTMLRuleStyle3_put_zoom(This,v)	\
    (This)->lpVtbl -> put_zoom(This,v)

#define IHTMLRuleStyle3_get_zoom(This,p)	\
    (This)->lpVtbl -> get_zoom(This,p)

#define IHTMLRuleStyle3_put_wordWrap(This,v)	\
    (This)->lpVtbl -> put_wordWrap(This,v)

#define IHTMLRuleStyle3_get_wordWrap(This,p)	\
    (This)->lpVtbl -> get_wordWrap(This,p)

#define IHTMLRuleStyle3_put_textUnderlinePosition(This,v)	\
    (This)->lpVtbl -> put_textUnderlinePosition(This,v)

#define IHTMLRuleStyle3_get_textUnderlinePosition(This,p)	\
    (This)->lpVtbl -> get_textUnderlinePosition(This,p)

#define IHTMLRuleStyle3_put_scrollbarBaseColor(This,v)	\
    (This)->lpVtbl -> put_scrollbarBaseColor(This,v)

#define IHTMLRuleStyle3_get_scrollbarBaseColor(This,p)	\
    (This)->lpVtbl -> get_scrollbarBaseColor(This,p)

#define IHTMLRuleStyle3_put_scrollbarFaceColor(This,v)	\
    (This)->lpVtbl -> put_scrollbarFaceColor(This,v)

#define IHTMLRuleStyle3_get_scrollbarFaceColor(This,p)	\
    (This)->lpVtbl -> get_scrollbarFaceColor(This,p)

#define IHTMLRuleStyle3_put_scrollbar3dLightColor(This,v)	\
    (This)->lpVtbl -> put_scrollbar3dLightColor(This,v)

#define IHTMLRuleStyle3_get_scrollbar3dLightColor(This,p)	\
    (This)->lpVtbl -> get_scrollbar3dLightColor(This,p)

#define IHTMLRuleStyle3_put_scrollbarShadowColor(This,v)	\
    (This)->lpVtbl -> put_scrollbarShadowColor(This,v)

#define IHTMLRuleStyle3_get_scrollbarShadowColor(This,p)	\
    (This)->lpVtbl -> get_scrollbarShadowColor(This,p)

#define IHTMLRuleStyle3_put_scrollbarHighlightColor(This,v)	\
    (This)->lpVtbl -> put_scrollbarHighlightColor(This,v)

#define IHTMLRuleStyle3_get_scrollbarHighlightColor(This,p)	\
    (This)->lpVtbl -> get_scrollbarHighlightColor(This,p)

#define IHTMLRuleStyle3_put_scrollbarDarkShadowColor(This,v)	\
    (This)->lpVtbl -> put_scrollbarDarkShadowColor(This,v)

#define IHTMLRuleStyle3_get_scrollbarDarkShadowColor(This,p)	\
    (This)->lpVtbl -> get_scrollbarDarkShadowColor(This,p)

#define IHTMLRuleStyle3_put_scrollbarArrowColor(This,v)	\
    (This)->lpVtbl -> put_scrollbarArrowColor(This,v)

#define IHTMLRuleStyle3_get_scrollbarArrowColor(This,p)	\
    (This)->lpVtbl -> get_scrollbarArrowColor(This,p)

#define IHTMLRuleStyle3_put_scrollbarTrackColor(This,v)	\
    (This)->lpVtbl -> put_scrollbarTrackColor(This,v)

#define IHTMLRuleStyle3_get_scrollbarTrackColor(This,p)	\
    (This)->lpVtbl -> get_scrollbarTrackColor(This,p)

#define IHTMLRuleStyle3_put_writingMode(This,v)	\
    (This)->lpVtbl -> put_writingMode(This,v)

#define IHTMLRuleStyle3_get_writingMode(This,p)	\
    (This)->lpVtbl -> get_writingMode(This,p)

#define IHTMLRuleStyle3_put_textAlignLast(This,v)	\
    (This)->lpVtbl -> put_textAlignLast(This,v)

#define IHTMLRuleStyle3_get_textAlignLast(This,p)	\
    (This)->lpVtbl -> get_textAlignLast(This,p)

#define IHTMLRuleStyle3_put_textKashidaSpace(This,v)	\
    (This)->lpVtbl -> put_textKashidaSpace(This,v)

#define IHTMLRuleStyle3_get_textKashidaSpace(This,p)	\
    (This)->lpVtbl -> get_textKashidaSpace(This,p)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle3_put_layoutFlow_Proxy( 
    IHTMLRuleStyle3 * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle3_put_layoutFlow_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle3_get_layoutFlow_Proxy( 
    IHTMLRuleStyle3 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLRuleStyle3_get_layoutFlow_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle3_put_zoom_Proxy( 
    IHTMLRuleStyle3 * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLRuleStyle3_put_zoom_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle3_get_zoom_Proxy( 
    IHTMLRuleStyle3 * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLRuleStyle3_get_zoom_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle3_put_wordWrap_Proxy( 
    IHTMLRuleStyle3 * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle3_put_wordWrap_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle3_get_wordWrap_Proxy( 
    IHTMLRuleStyle3 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLRuleStyle3_get_wordWrap_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle3_put_textUnderlinePosition_Proxy( 
    IHTMLRuleStyle3 * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle3_put_textUnderlinePosition_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle3_get_textUnderlinePosition_Proxy( 
    IHTMLRuleStyle3 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLRuleStyle3_get_textUnderlinePosition_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle3_put_scrollbarBaseColor_Proxy( 
    IHTMLRuleStyle3 * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLRuleStyle3_put_scrollbarBaseColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle3_get_scrollbarBaseColor_Proxy( 
    IHTMLRuleStyle3 * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLRuleStyle3_get_scrollbarBaseColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle3_put_scrollbarFaceColor_Proxy( 
    IHTMLRuleStyle3 * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLRuleStyle3_put_scrollbarFaceColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle3_get_scrollbarFaceColor_Proxy( 
    IHTMLRuleStyle3 * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLRuleStyle3_get_scrollbarFaceColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle3_put_scrollbar3dLightColor_Proxy( 
    IHTMLRuleStyle3 * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLRuleStyle3_put_scrollbar3dLightColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle3_get_scrollbar3dLightColor_Proxy( 
    IHTMLRuleStyle3 * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLRuleStyle3_get_scrollbar3dLightColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle3_put_scrollbarShadowColor_Proxy( 
    IHTMLRuleStyle3 * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLRuleStyle3_put_scrollbarShadowColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle3_get_scrollbarShadowColor_Proxy( 
    IHTMLRuleStyle3 * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLRuleStyle3_get_scrollbarShadowColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle3_put_scrollbarHighlightColor_Proxy( 
    IHTMLRuleStyle3 * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLRuleStyle3_put_scrollbarHighlightColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle3_get_scrollbarHighlightColor_Proxy( 
    IHTMLRuleStyle3 * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLRuleStyle3_get_scrollbarHighlightColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle3_put_scrollbarDarkShadowColor_Proxy( 
    IHTMLRuleStyle3 * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLRuleStyle3_put_scrollbarDarkShadowColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle3_get_scrollbarDarkShadowColor_Proxy( 
    IHTMLRuleStyle3 * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLRuleStyle3_get_scrollbarDarkShadowColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle3_put_scrollbarArrowColor_Proxy( 
    IHTMLRuleStyle3 * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLRuleStyle3_put_scrollbarArrowColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle3_get_scrollbarArrowColor_Proxy( 
    IHTMLRuleStyle3 * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLRuleStyle3_get_scrollbarArrowColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle3_put_scrollbarTrackColor_Proxy( 
    IHTMLRuleStyle3 * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLRuleStyle3_put_scrollbarTrackColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle3_get_scrollbarTrackColor_Proxy( 
    IHTMLRuleStyle3 * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLRuleStyle3_get_scrollbarTrackColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle3_put_writingMode_Proxy( 
    IHTMLRuleStyle3 * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle3_put_writingMode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle3_get_writingMode_Proxy( 
    IHTMLRuleStyle3 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLRuleStyle3_get_writingMode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle3_put_textAlignLast_Proxy( 
    IHTMLRuleStyle3 * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle3_put_textAlignLast_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle3_get_textAlignLast_Proxy( 
    IHTMLRuleStyle3 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLRuleStyle3_get_textAlignLast_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle3_put_textKashidaSpace_Proxy( 
    IHTMLRuleStyle3 * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLRuleStyle3_put_textKashidaSpace_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle3_get_textKashidaSpace_Proxy( 
    IHTMLRuleStyle3 * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLRuleStyle3_get_textKashidaSpace_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLRuleStyle3_INTERFACE_DEFINED__ */


#ifndef __IHTMLRuleStyle4_INTERFACE_DEFINED__
#define __IHTMLRuleStyle4_INTERFACE_DEFINED__

/* interface IHTMLRuleStyle4 */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLRuleStyle4;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f817-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLRuleStyle4 : public IDispatch
    {
    public:
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textOverflow( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textOverflow( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_minHeight( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_minHeight( 
            /* [out][retval] */ VARIANT *p) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLRuleStyle4Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IHTMLRuleStyle4 * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IHTMLRuleStyle4 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IHTMLRuleStyle4 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IHTMLRuleStyle4 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IHTMLRuleStyle4 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IHTMLRuleStyle4 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IHTMLRuleStyle4 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_textOverflow )( 
            IHTMLRuleStyle4 * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_textOverflow )( 
            IHTMLRuleStyle4 * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_minHeight )( 
            IHTMLRuleStyle4 * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_minHeight )( 
            IHTMLRuleStyle4 * This,
            /* [out][retval] */ VARIANT *p);
        
        END_INTERFACE
    } IHTMLRuleStyle4Vtbl;

    interface IHTMLRuleStyle4
    {
        CONST_VTBL struct IHTMLRuleStyle4Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLRuleStyle4_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IHTMLRuleStyle4_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IHTMLRuleStyle4_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IHTMLRuleStyle4_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IHTMLRuleStyle4_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IHTMLRuleStyle4_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IHTMLRuleStyle4_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IHTMLRuleStyle4_put_textOverflow(This,v)	\
    (This)->lpVtbl -> put_textOverflow(This,v)

#define IHTMLRuleStyle4_get_textOverflow(This,p)	\
    (This)->lpVtbl -> get_textOverflow(This,p)

#define IHTMLRuleStyle4_put_minHeight(This,v)	\
    (This)->lpVtbl -> put_minHeight(This,v)

#define IHTMLRuleStyle4_get_minHeight(This,p)	\
    (This)->lpVtbl -> get_minHeight(This,p)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle4_put_textOverflow_Proxy( 
    IHTMLRuleStyle4 * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRuleStyle4_put_textOverflow_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle4_get_textOverflow_Proxy( 
    IHTMLRuleStyle4 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLRuleStyle4_get_textOverflow_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle4_put_minHeight_Proxy( 
    IHTMLRuleStyle4 * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLRuleStyle4_put_minHeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRuleStyle4_get_minHeight_Proxy( 
    IHTMLRuleStyle4 * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLRuleStyle4_get_minHeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLRuleStyle4_INTERFACE_DEFINED__ */


#ifndef __DispHTMLStyle_DISPINTERFACE_DEFINED__
#define __DispHTMLStyle_DISPINTERFACE_DEFINED__

/* dispinterface DispHTMLStyle */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_DispHTMLStyle;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("3050f55a-98b5-11cf-bb82-00aa00bdce0b")
    DispHTMLStyle : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct DispHTMLStyleVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            DispHTMLStyle * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            DispHTMLStyle * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            DispHTMLStyle * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            DispHTMLStyle * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            DispHTMLStyle * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            DispHTMLStyle * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            DispHTMLStyle * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        END_INTERFACE
    } DispHTMLStyleVtbl;

    interface DispHTMLStyle
    {
        CONST_VTBL struct DispHTMLStyleVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define DispHTMLStyle_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define DispHTMLStyle_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define DispHTMLStyle_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define DispHTMLStyle_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define DispHTMLStyle_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define DispHTMLStyle_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define DispHTMLStyle_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __DispHTMLStyle_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_HTMLStyle;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f285-98b5-11cf-bb82-00aa00bdce0b")
HTMLStyle;
#endif

#ifndef __DispHTMLRuleStyle_DISPINTERFACE_DEFINED__
#define __DispHTMLRuleStyle_DISPINTERFACE_DEFINED__

/* dispinterface DispHTMLRuleStyle */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_DispHTMLRuleStyle;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("3050f55c-98b5-11cf-bb82-00aa00bdce0b")
    DispHTMLRuleStyle : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct DispHTMLRuleStyleVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            DispHTMLRuleStyle * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            DispHTMLRuleStyle * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            DispHTMLRuleStyle * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            DispHTMLRuleStyle * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            DispHTMLRuleStyle * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            DispHTMLRuleStyle * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            DispHTMLRuleStyle * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        END_INTERFACE
    } DispHTMLRuleStyleVtbl;

    interface DispHTMLRuleStyle
    {
        CONST_VTBL struct DispHTMLRuleStyleVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define DispHTMLRuleStyle_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define DispHTMLRuleStyle_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define DispHTMLRuleStyle_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define DispHTMLRuleStyle_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define DispHTMLRuleStyle_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define DispHTMLRuleStyle_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define DispHTMLRuleStyle_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __DispHTMLRuleStyle_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_HTMLRuleStyle;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f3d0-98b5-11cf-bb82-00aa00bdce0b")
HTMLRuleStyle;
#endif

#ifndef __IHTMLRenderStyle_INTERFACE_DEFINED__
#define __IHTMLRenderStyle_INTERFACE_DEFINED__

/* interface IHTMLRenderStyle */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLRenderStyle;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f6ae-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLRenderStyle : public IDispatch
    {
    public:
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textLineThroughStyle( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textLineThroughStyle( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textUnderlineStyle( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textUnderlineStyle( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textEffect( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textEffect( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textColor( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textColor( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textBackgroundColor( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textBackgroundColor( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textDecorationColor( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textDecorationColor( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_renderingPriority( 
            /* [in] */ long v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_renderingPriority( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_defaultTextSelection( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_defaultTextSelection( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_textDecoration( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textDecoration( 
            /* [out][retval] */ BSTR *p) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLRenderStyleVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IHTMLRenderStyle * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IHTMLRenderStyle * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IHTMLRenderStyle * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IHTMLRenderStyle * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IHTMLRenderStyle * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IHTMLRenderStyle * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IHTMLRenderStyle * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_textLineThroughStyle )( 
            IHTMLRenderStyle * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_textLineThroughStyle )( 
            IHTMLRenderStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_textUnderlineStyle )( 
            IHTMLRenderStyle * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_textUnderlineStyle )( 
            IHTMLRenderStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_textEffect )( 
            IHTMLRenderStyle * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_textEffect )( 
            IHTMLRenderStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_textColor )( 
            IHTMLRenderStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_textColor )( 
            IHTMLRenderStyle * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_textBackgroundColor )( 
            IHTMLRenderStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_textBackgroundColor )( 
            IHTMLRenderStyle * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_textDecorationColor )( 
            IHTMLRenderStyle * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_textDecorationColor )( 
            IHTMLRenderStyle * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_renderingPriority )( 
            IHTMLRenderStyle * This,
            /* [in] */ long v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_renderingPriority )( 
            IHTMLRenderStyle * This,
            /* [out][retval] */ long *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_defaultTextSelection )( 
            IHTMLRenderStyle * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_defaultTextSelection )( 
            IHTMLRenderStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_textDecoration )( 
            IHTMLRenderStyle * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_textDecoration )( 
            IHTMLRenderStyle * This,
            /* [out][retval] */ BSTR *p);
        
        END_INTERFACE
    } IHTMLRenderStyleVtbl;

    interface IHTMLRenderStyle
    {
        CONST_VTBL struct IHTMLRenderStyleVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLRenderStyle_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IHTMLRenderStyle_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IHTMLRenderStyle_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IHTMLRenderStyle_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IHTMLRenderStyle_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IHTMLRenderStyle_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IHTMLRenderStyle_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IHTMLRenderStyle_put_textLineThroughStyle(This,v)	\
    (This)->lpVtbl -> put_textLineThroughStyle(This,v)

#define IHTMLRenderStyle_get_textLineThroughStyle(This,p)	\
    (This)->lpVtbl -> get_textLineThroughStyle(This,p)

#define IHTMLRenderStyle_put_textUnderlineStyle(This,v)	\
    (This)->lpVtbl -> put_textUnderlineStyle(This,v)

#define IHTMLRenderStyle_get_textUnderlineStyle(This,p)	\
    (This)->lpVtbl -> get_textUnderlineStyle(This,p)

#define IHTMLRenderStyle_put_textEffect(This,v)	\
    (This)->lpVtbl -> put_textEffect(This,v)

#define IHTMLRenderStyle_get_textEffect(This,p)	\
    (This)->lpVtbl -> get_textEffect(This,p)

#define IHTMLRenderStyle_put_textColor(This,v)	\
    (This)->lpVtbl -> put_textColor(This,v)

#define IHTMLRenderStyle_get_textColor(This,p)	\
    (This)->lpVtbl -> get_textColor(This,p)

#define IHTMLRenderStyle_put_textBackgroundColor(This,v)	\
    (This)->lpVtbl -> put_textBackgroundColor(This,v)

#define IHTMLRenderStyle_get_textBackgroundColor(This,p)	\
    (This)->lpVtbl -> get_textBackgroundColor(This,p)

#define IHTMLRenderStyle_put_textDecorationColor(This,v)	\
    (This)->lpVtbl -> put_textDecorationColor(This,v)

#define IHTMLRenderStyle_get_textDecorationColor(This,p)	\
    (This)->lpVtbl -> get_textDecorationColor(This,p)

#define IHTMLRenderStyle_put_renderingPriority(This,v)	\
    (This)->lpVtbl -> put_renderingPriority(This,v)

#define IHTMLRenderStyle_get_renderingPriority(This,p)	\
    (This)->lpVtbl -> get_renderingPriority(This,p)

#define IHTMLRenderStyle_put_defaultTextSelection(This,v)	\
    (This)->lpVtbl -> put_defaultTextSelection(This,v)

#define IHTMLRenderStyle_get_defaultTextSelection(This,p)	\
    (This)->lpVtbl -> get_defaultTextSelection(This,p)

#define IHTMLRenderStyle_put_textDecoration(This,v)	\
    (This)->lpVtbl -> put_textDecoration(This,v)

#define IHTMLRenderStyle_get_textDecoration(This,p)	\
    (This)->lpVtbl -> get_textDecoration(This,p)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRenderStyle_put_textLineThroughStyle_Proxy( 
    IHTMLRenderStyle * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRenderStyle_put_textLineThroughStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRenderStyle_get_textLineThroughStyle_Proxy( 
    IHTMLRenderStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLRenderStyle_get_textLineThroughStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRenderStyle_put_textUnderlineStyle_Proxy( 
    IHTMLRenderStyle * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRenderStyle_put_textUnderlineStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRenderStyle_get_textUnderlineStyle_Proxy( 
    IHTMLRenderStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLRenderStyle_get_textUnderlineStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRenderStyle_put_textEffect_Proxy( 
    IHTMLRenderStyle * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRenderStyle_put_textEffect_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRenderStyle_get_textEffect_Proxy( 
    IHTMLRenderStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLRenderStyle_get_textEffect_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRenderStyle_put_textColor_Proxy( 
    IHTMLRenderStyle * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLRenderStyle_put_textColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRenderStyle_get_textColor_Proxy( 
    IHTMLRenderStyle * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLRenderStyle_get_textColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRenderStyle_put_textBackgroundColor_Proxy( 
    IHTMLRenderStyle * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLRenderStyle_put_textBackgroundColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRenderStyle_get_textBackgroundColor_Proxy( 
    IHTMLRenderStyle * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLRenderStyle_get_textBackgroundColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRenderStyle_put_textDecorationColor_Proxy( 
    IHTMLRenderStyle * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLRenderStyle_put_textDecorationColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRenderStyle_get_textDecorationColor_Proxy( 
    IHTMLRenderStyle * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLRenderStyle_get_textDecorationColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRenderStyle_put_renderingPriority_Proxy( 
    IHTMLRenderStyle * This,
    /* [in] */ long v);


void __RPC_STUB IHTMLRenderStyle_put_renderingPriority_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRenderStyle_get_renderingPriority_Proxy( 
    IHTMLRenderStyle * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLRenderStyle_get_renderingPriority_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRenderStyle_put_defaultTextSelection_Proxy( 
    IHTMLRenderStyle * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRenderStyle_put_defaultTextSelection_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRenderStyle_get_defaultTextSelection_Proxy( 
    IHTMLRenderStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLRenderStyle_get_defaultTextSelection_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRenderStyle_put_textDecoration_Proxy( 
    IHTMLRenderStyle * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLRenderStyle_put_textDecoration_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRenderStyle_get_textDecoration_Proxy( 
    IHTMLRenderStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLRenderStyle_get_textDecoration_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLRenderStyle_INTERFACE_DEFINED__ */


#ifndef __DispHTMLRenderStyle_DISPINTERFACE_DEFINED__
#define __DispHTMLRenderStyle_DISPINTERFACE_DEFINED__

/* dispinterface DispHTMLRenderStyle */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_DispHTMLRenderStyle;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("3050f58b-98b5-11cf-bb82-00aa00bdce0b")
    DispHTMLRenderStyle : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct DispHTMLRenderStyleVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            DispHTMLRenderStyle * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            DispHTMLRenderStyle * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            DispHTMLRenderStyle * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            DispHTMLRenderStyle * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            DispHTMLRenderStyle * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            DispHTMLRenderStyle * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            DispHTMLRenderStyle * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        END_INTERFACE
    } DispHTMLRenderStyleVtbl;

    interface DispHTMLRenderStyle
    {
        CONST_VTBL struct DispHTMLRenderStyleVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define DispHTMLRenderStyle_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define DispHTMLRenderStyle_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define DispHTMLRenderStyle_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define DispHTMLRenderStyle_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define DispHTMLRenderStyle_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define DispHTMLRenderStyle_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define DispHTMLRenderStyle_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __DispHTMLRenderStyle_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_HTMLRenderStyle;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f6aa-98b5-11cf-bb82-00aa00bdce0b")
HTMLRenderStyle;
#endif

#ifndef __IHTMLCurrentStyle_INTERFACE_DEFINED__
#define __IHTMLCurrentStyle_INTERFACE_DEFINED__

/* interface IHTMLCurrentStyle */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLCurrentStyle;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f3db-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLCurrentStyle : public IDispatch
    {
    public:
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_position( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_styleFloat( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_color( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_backgroundColor( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_fontFamily( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_fontStyle( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [hidden][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_fontVariant( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_fontWeight( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_fontSize( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_backgroundImage( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_backgroundPositionX( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_backgroundPositionY( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_backgroundRepeat( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderLeftColor( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderTopColor( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderRightColor( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderBottomColor( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderTopStyle( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderRightStyle( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderBottomStyle( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderLeftStyle( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderTopWidth( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderRightWidth( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderBottomWidth( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderLeftWidth( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_left( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_top( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_width( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_height( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_paddingLeft( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_paddingTop( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_paddingRight( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_paddingBottom( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textAlign( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textDecoration( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_display( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_visibility( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_zIndex( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_letterSpacing( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_lineHeight( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textIndent( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_verticalAlign( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_backgroundAttachment( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_marginTop( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_marginRight( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_marginBottom( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_marginLeft( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_clear( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_listStyleType( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_listStylePosition( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_listStyleImage( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_clipTop( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_clipRight( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_clipBottom( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_clipLeft( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_overflow( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_pageBreakBefore( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_pageBreakAfter( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_cursor( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_tableLayout( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderCollapse( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_direction( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_behavior( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE getAttribute( 
            /* [in] */ BSTR strAttributeName,
            /* [in][defaultvalue] */ LONG lFlags,
            /* [out][retval] */ VARIANT *AttributeValue) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_unicodeBidi( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_right( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_bottom( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_imeMode( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_rubyAlign( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_rubyPosition( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_rubyOverhang( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textAutospace( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_lineBreak( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_wordBreak( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textJustify( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textJustifyTrim( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textKashida( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_blockDirection( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_layoutGridChar( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_layoutGridLine( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_layoutGridMode( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_layoutGridType( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderStyle( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderColor( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_borderWidth( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_padding( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_margin( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_accelerator( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_overflowX( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_overflowY( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textTransform( 
            /* [out][retval] */ BSTR *p) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLCurrentStyleVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IHTMLCurrentStyle * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IHTMLCurrentStyle * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IHTMLCurrentStyle * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IHTMLCurrentStyle * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IHTMLCurrentStyle * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IHTMLCurrentStyle * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IHTMLCurrentStyle * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_position )( 
            IHTMLCurrentStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_styleFloat )( 
            IHTMLCurrentStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_color )( 
            IHTMLCurrentStyle * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_backgroundColor )( 
            IHTMLCurrentStyle * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_fontFamily )( 
            IHTMLCurrentStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_fontStyle )( 
            IHTMLCurrentStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [hidden][bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_fontVariant )( 
            IHTMLCurrentStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_fontWeight )( 
            IHTMLCurrentStyle * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_fontSize )( 
            IHTMLCurrentStyle * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_backgroundImage )( 
            IHTMLCurrentStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_backgroundPositionX )( 
            IHTMLCurrentStyle * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_backgroundPositionY )( 
            IHTMLCurrentStyle * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_backgroundRepeat )( 
            IHTMLCurrentStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderLeftColor )( 
            IHTMLCurrentStyle * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderTopColor )( 
            IHTMLCurrentStyle * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderRightColor )( 
            IHTMLCurrentStyle * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderBottomColor )( 
            IHTMLCurrentStyle * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderTopStyle )( 
            IHTMLCurrentStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderRightStyle )( 
            IHTMLCurrentStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderBottomStyle )( 
            IHTMLCurrentStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderLeftStyle )( 
            IHTMLCurrentStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderTopWidth )( 
            IHTMLCurrentStyle * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderRightWidth )( 
            IHTMLCurrentStyle * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderBottomWidth )( 
            IHTMLCurrentStyle * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderLeftWidth )( 
            IHTMLCurrentStyle * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_left )( 
            IHTMLCurrentStyle * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_top )( 
            IHTMLCurrentStyle * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_width )( 
            IHTMLCurrentStyle * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_height )( 
            IHTMLCurrentStyle * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_paddingLeft )( 
            IHTMLCurrentStyle * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_paddingTop )( 
            IHTMLCurrentStyle * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_paddingRight )( 
            IHTMLCurrentStyle * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_paddingBottom )( 
            IHTMLCurrentStyle * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_textAlign )( 
            IHTMLCurrentStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_textDecoration )( 
            IHTMLCurrentStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_display )( 
            IHTMLCurrentStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_visibility )( 
            IHTMLCurrentStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_zIndex )( 
            IHTMLCurrentStyle * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_letterSpacing )( 
            IHTMLCurrentStyle * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_lineHeight )( 
            IHTMLCurrentStyle * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_textIndent )( 
            IHTMLCurrentStyle * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_verticalAlign )( 
            IHTMLCurrentStyle * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_backgroundAttachment )( 
            IHTMLCurrentStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_marginTop )( 
            IHTMLCurrentStyle * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_marginRight )( 
            IHTMLCurrentStyle * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_marginBottom )( 
            IHTMLCurrentStyle * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_marginLeft )( 
            IHTMLCurrentStyle * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_clear )( 
            IHTMLCurrentStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_listStyleType )( 
            IHTMLCurrentStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_listStylePosition )( 
            IHTMLCurrentStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_listStyleImage )( 
            IHTMLCurrentStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_clipTop )( 
            IHTMLCurrentStyle * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_clipRight )( 
            IHTMLCurrentStyle * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_clipBottom )( 
            IHTMLCurrentStyle * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_clipLeft )( 
            IHTMLCurrentStyle * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_overflow )( 
            IHTMLCurrentStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_pageBreakBefore )( 
            IHTMLCurrentStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_pageBreakAfter )( 
            IHTMLCurrentStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_cursor )( 
            IHTMLCurrentStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_tableLayout )( 
            IHTMLCurrentStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderCollapse )( 
            IHTMLCurrentStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_direction )( 
            IHTMLCurrentStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_behavior )( 
            IHTMLCurrentStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *getAttribute )( 
            IHTMLCurrentStyle * This,
            /* [in] */ BSTR strAttributeName,
            /* [in][defaultvalue] */ LONG lFlags,
            /* [out][retval] */ VARIANT *AttributeValue);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_unicodeBidi )( 
            IHTMLCurrentStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_right )( 
            IHTMLCurrentStyle * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_bottom )( 
            IHTMLCurrentStyle * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_imeMode )( 
            IHTMLCurrentStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_rubyAlign )( 
            IHTMLCurrentStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_rubyPosition )( 
            IHTMLCurrentStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_rubyOverhang )( 
            IHTMLCurrentStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_textAutospace )( 
            IHTMLCurrentStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_lineBreak )( 
            IHTMLCurrentStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_wordBreak )( 
            IHTMLCurrentStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_textJustify )( 
            IHTMLCurrentStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_textJustifyTrim )( 
            IHTMLCurrentStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_textKashida )( 
            IHTMLCurrentStyle * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_blockDirection )( 
            IHTMLCurrentStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_layoutGridChar )( 
            IHTMLCurrentStyle * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_layoutGridLine )( 
            IHTMLCurrentStyle * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_layoutGridMode )( 
            IHTMLCurrentStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_layoutGridType )( 
            IHTMLCurrentStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderStyle )( 
            IHTMLCurrentStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderColor )( 
            IHTMLCurrentStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_borderWidth )( 
            IHTMLCurrentStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_padding )( 
            IHTMLCurrentStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_margin )( 
            IHTMLCurrentStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_accelerator )( 
            IHTMLCurrentStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_overflowX )( 
            IHTMLCurrentStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_overflowY )( 
            IHTMLCurrentStyle * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_textTransform )( 
            IHTMLCurrentStyle * This,
            /* [out][retval] */ BSTR *p);
        
        END_INTERFACE
    } IHTMLCurrentStyleVtbl;

    interface IHTMLCurrentStyle
    {
        CONST_VTBL struct IHTMLCurrentStyleVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLCurrentStyle_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IHTMLCurrentStyle_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IHTMLCurrentStyle_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IHTMLCurrentStyle_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IHTMLCurrentStyle_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IHTMLCurrentStyle_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IHTMLCurrentStyle_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IHTMLCurrentStyle_get_position(This,p)	\
    (This)->lpVtbl -> get_position(This,p)

#define IHTMLCurrentStyle_get_styleFloat(This,p)	\
    (This)->lpVtbl -> get_styleFloat(This,p)

#define IHTMLCurrentStyle_get_color(This,p)	\
    (This)->lpVtbl -> get_color(This,p)

#define IHTMLCurrentStyle_get_backgroundColor(This,p)	\
    (This)->lpVtbl -> get_backgroundColor(This,p)

#define IHTMLCurrentStyle_get_fontFamily(This,p)	\
    (This)->lpVtbl -> get_fontFamily(This,p)

#define IHTMLCurrentStyle_get_fontStyle(This,p)	\
    (This)->lpVtbl -> get_fontStyle(This,p)

#define IHTMLCurrentStyle_get_fontVariant(This,p)	\
    (This)->lpVtbl -> get_fontVariant(This,p)

#define IHTMLCurrentStyle_get_fontWeight(This,p)	\
    (This)->lpVtbl -> get_fontWeight(This,p)

#define IHTMLCurrentStyle_get_fontSize(This,p)	\
    (This)->lpVtbl -> get_fontSize(This,p)

#define IHTMLCurrentStyle_get_backgroundImage(This,p)	\
    (This)->lpVtbl -> get_backgroundImage(This,p)

#define IHTMLCurrentStyle_get_backgroundPositionX(This,p)	\
    (This)->lpVtbl -> get_backgroundPositionX(This,p)

#define IHTMLCurrentStyle_get_backgroundPositionY(This,p)	\
    (This)->lpVtbl -> get_backgroundPositionY(This,p)

#define IHTMLCurrentStyle_get_backgroundRepeat(This,p)	\
    (This)->lpVtbl -> get_backgroundRepeat(This,p)

#define IHTMLCurrentStyle_get_borderLeftColor(This,p)	\
    (This)->lpVtbl -> get_borderLeftColor(This,p)

#define IHTMLCurrentStyle_get_borderTopColor(This,p)	\
    (This)->lpVtbl -> get_borderTopColor(This,p)

#define IHTMLCurrentStyle_get_borderRightColor(This,p)	\
    (This)->lpVtbl -> get_borderRightColor(This,p)

#define IHTMLCurrentStyle_get_borderBottomColor(This,p)	\
    (This)->lpVtbl -> get_borderBottomColor(This,p)

#define IHTMLCurrentStyle_get_borderTopStyle(This,p)	\
    (This)->lpVtbl -> get_borderTopStyle(This,p)

#define IHTMLCurrentStyle_get_borderRightStyle(This,p)	\
    (This)->lpVtbl -> get_borderRightStyle(This,p)

#define IHTMLCurrentStyle_get_borderBottomStyle(This,p)	\
    (This)->lpVtbl -> get_borderBottomStyle(This,p)

#define IHTMLCurrentStyle_get_borderLeftStyle(This,p)	\
    (This)->lpVtbl -> get_borderLeftStyle(This,p)

#define IHTMLCurrentStyle_get_borderTopWidth(This,p)	\
    (This)->lpVtbl -> get_borderTopWidth(This,p)

#define IHTMLCurrentStyle_get_borderRightWidth(This,p)	\
    (This)->lpVtbl -> get_borderRightWidth(This,p)

#define IHTMLCurrentStyle_get_borderBottomWidth(This,p)	\
    (This)->lpVtbl -> get_borderBottomWidth(This,p)

#define IHTMLCurrentStyle_get_borderLeftWidth(This,p)	\
    (This)->lpVtbl -> get_borderLeftWidth(This,p)

#define IHTMLCurrentStyle_get_left(This,p)	\
    (This)->lpVtbl -> get_left(This,p)

#define IHTMLCurrentStyle_get_top(This,p)	\
    (This)->lpVtbl -> get_top(This,p)

#define IHTMLCurrentStyle_get_width(This,p)	\
    (This)->lpVtbl -> get_width(This,p)

#define IHTMLCurrentStyle_get_height(This,p)	\
    (This)->lpVtbl -> get_height(This,p)

#define IHTMLCurrentStyle_get_paddingLeft(This,p)	\
    (This)->lpVtbl -> get_paddingLeft(This,p)

#define IHTMLCurrentStyle_get_paddingTop(This,p)	\
    (This)->lpVtbl -> get_paddingTop(This,p)

#define IHTMLCurrentStyle_get_paddingRight(This,p)	\
    (This)->lpVtbl -> get_paddingRight(This,p)

#define IHTMLCurrentStyle_get_paddingBottom(This,p)	\
    (This)->lpVtbl -> get_paddingBottom(This,p)

#define IHTMLCurrentStyle_get_textAlign(This,p)	\
    (This)->lpVtbl -> get_textAlign(This,p)

#define IHTMLCurrentStyle_get_textDecoration(This,p)	\
    (This)->lpVtbl -> get_textDecoration(This,p)

#define IHTMLCurrentStyle_get_display(This,p)	\
    (This)->lpVtbl -> get_display(This,p)

#define IHTMLCurrentStyle_get_visibility(This,p)	\
    (This)->lpVtbl -> get_visibility(This,p)

#define IHTMLCurrentStyle_get_zIndex(This,p)	\
    (This)->lpVtbl -> get_zIndex(This,p)

#define IHTMLCurrentStyle_get_letterSpacing(This,p)	\
    (This)->lpVtbl -> get_letterSpacing(This,p)

#define IHTMLCurrentStyle_get_lineHeight(This,p)	\
    (This)->lpVtbl -> get_lineHeight(This,p)

#define IHTMLCurrentStyle_get_textIndent(This,p)	\
    (This)->lpVtbl -> get_textIndent(This,p)

#define IHTMLCurrentStyle_get_verticalAlign(This,p)	\
    (This)->lpVtbl -> get_verticalAlign(This,p)

#define IHTMLCurrentStyle_get_backgroundAttachment(This,p)	\
    (This)->lpVtbl -> get_backgroundAttachment(This,p)

#define IHTMLCurrentStyle_get_marginTop(This,p)	\
    (This)->lpVtbl -> get_marginTop(This,p)

#define IHTMLCurrentStyle_get_marginRight(This,p)	\
    (This)->lpVtbl -> get_marginRight(This,p)

#define IHTMLCurrentStyle_get_marginBottom(This,p)	\
    (This)->lpVtbl -> get_marginBottom(This,p)

#define IHTMLCurrentStyle_get_marginLeft(This,p)	\
    (This)->lpVtbl -> get_marginLeft(This,p)

#define IHTMLCurrentStyle_get_clear(This,p)	\
    (This)->lpVtbl -> get_clear(This,p)

#define IHTMLCurrentStyle_get_listStyleType(This,p)	\
    (This)->lpVtbl -> get_listStyleType(This,p)

#define IHTMLCurrentStyle_get_listStylePosition(This,p)	\
    (This)->lpVtbl -> get_listStylePosition(This,p)

#define IHTMLCurrentStyle_get_listStyleImage(This,p)	\
    (This)->lpVtbl -> get_listStyleImage(This,p)

#define IHTMLCurrentStyle_get_clipTop(This,p)	\
    (This)->lpVtbl -> get_clipTop(This,p)

#define IHTMLCurrentStyle_get_clipRight(This,p)	\
    (This)->lpVtbl -> get_clipRight(This,p)

#define IHTMLCurrentStyle_get_clipBottom(This,p)	\
    (This)->lpVtbl -> get_clipBottom(This,p)

#define IHTMLCurrentStyle_get_clipLeft(This,p)	\
    (This)->lpVtbl -> get_clipLeft(This,p)

#define IHTMLCurrentStyle_get_overflow(This,p)	\
    (This)->lpVtbl -> get_overflow(This,p)

#define IHTMLCurrentStyle_get_pageBreakBefore(This,p)	\
    (This)->lpVtbl -> get_pageBreakBefore(This,p)

#define IHTMLCurrentStyle_get_pageBreakAfter(This,p)	\
    (This)->lpVtbl -> get_pageBreakAfter(This,p)

#define IHTMLCurrentStyle_get_cursor(This,p)	\
    (This)->lpVtbl -> get_cursor(This,p)

#define IHTMLCurrentStyle_get_tableLayout(This,p)	\
    (This)->lpVtbl -> get_tableLayout(This,p)

#define IHTMLCurrentStyle_get_borderCollapse(This,p)	\
    (This)->lpVtbl -> get_borderCollapse(This,p)

#define IHTMLCurrentStyle_get_direction(This,p)	\
    (This)->lpVtbl -> get_direction(This,p)

#define IHTMLCurrentStyle_get_behavior(This,p)	\
    (This)->lpVtbl -> get_behavior(This,p)

#define IHTMLCurrentStyle_getAttribute(This,strAttributeName,lFlags,AttributeValue)	\
    (This)->lpVtbl -> getAttribute(This,strAttributeName,lFlags,AttributeValue)

#define IHTMLCurrentStyle_get_unicodeBidi(This,p)	\
    (This)->lpVtbl -> get_unicodeBidi(This,p)

#define IHTMLCurrentStyle_get_right(This,p)	\
    (This)->lpVtbl -> get_right(This,p)

#define IHTMLCurrentStyle_get_bottom(This,p)	\
    (This)->lpVtbl -> get_bottom(This,p)

#define IHTMLCurrentStyle_get_imeMode(This,p)	\
    (This)->lpVtbl -> get_imeMode(This,p)

#define IHTMLCurrentStyle_get_rubyAlign(This,p)	\
    (This)->lpVtbl -> get_rubyAlign(This,p)

#define IHTMLCurrentStyle_get_rubyPosition(This,p)	\
    (This)->lpVtbl -> get_rubyPosition(This,p)

#define IHTMLCurrentStyle_get_rubyOverhang(This,p)	\
    (This)->lpVtbl -> get_rubyOverhang(This,p)

#define IHTMLCurrentStyle_get_textAutospace(This,p)	\
    (This)->lpVtbl -> get_textAutospace(This,p)

#define IHTMLCurrentStyle_get_lineBreak(This,p)	\
    (This)->lpVtbl -> get_lineBreak(This,p)

#define IHTMLCurrentStyle_get_wordBreak(This,p)	\
    (This)->lpVtbl -> get_wordBreak(This,p)

#define IHTMLCurrentStyle_get_textJustify(This,p)	\
    (This)->lpVtbl -> get_textJustify(This,p)

#define IHTMLCurrentStyle_get_textJustifyTrim(This,p)	\
    (This)->lpVtbl -> get_textJustifyTrim(This,p)

#define IHTMLCurrentStyle_get_textKashida(This,p)	\
    (This)->lpVtbl -> get_textKashida(This,p)

#define IHTMLCurrentStyle_get_blockDirection(This,p)	\
    (This)->lpVtbl -> get_blockDirection(This,p)

#define IHTMLCurrentStyle_get_layoutGridChar(This,p)	\
    (This)->lpVtbl -> get_layoutGridChar(This,p)

#define IHTMLCurrentStyle_get_layoutGridLine(This,p)	\
    (This)->lpVtbl -> get_layoutGridLine(This,p)

#define IHTMLCurrentStyle_get_layoutGridMode(This,p)	\
    (This)->lpVtbl -> get_layoutGridMode(This,p)

#define IHTMLCurrentStyle_get_layoutGridType(This,p)	\
    (This)->lpVtbl -> get_layoutGridType(This,p)

#define IHTMLCurrentStyle_get_borderStyle(This,p)	\
    (This)->lpVtbl -> get_borderStyle(This,p)

#define IHTMLCurrentStyle_get_borderColor(This,p)	\
    (This)->lpVtbl -> get_borderColor(This,p)

#define IHTMLCurrentStyle_get_borderWidth(This,p)	\
    (This)->lpVtbl -> get_borderWidth(This,p)

#define IHTMLCurrentStyle_get_padding(This,p)	\
    (This)->lpVtbl -> get_padding(This,p)

#define IHTMLCurrentStyle_get_margin(This,p)	\
    (This)->lpVtbl -> get_margin(This,p)

#define IHTMLCurrentStyle_get_accelerator(This,p)	\
    (This)->lpVtbl -> get_accelerator(This,p)

#define IHTMLCurrentStyle_get_overflowX(This,p)	\
    (This)->lpVtbl -> get_overflowX(This,p)

#define IHTMLCurrentStyle_get_overflowY(This,p)	\
    (This)->lpVtbl -> get_overflowY(This,p)

#define IHTMLCurrentStyle_get_textTransform(This,p)	\
    (This)->lpVtbl -> get_textTransform(This,p)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_position_Proxy( 
    IHTMLCurrentStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLCurrentStyle_get_position_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_styleFloat_Proxy( 
    IHTMLCurrentStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLCurrentStyle_get_styleFloat_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_color_Proxy( 
    IHTMLCurrentStyle * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLCurrentStyle_get_color_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_backgroundColor_Proxy( 
    IHTMLCurrentStyle * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLCurrentStyle_get_backgroundColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_fontFamily_Proxy( 
    IHTMLCurrentStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLCurrentStyle_get_fontFamily_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_fontStyle_Proxy( 
    IHTMLCurrentStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLCurrentStyle_get_fontStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [hidden][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_fontVariant_Proxy( 
    IHTMLCurrentStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLCurrentStyle_get_fontVariant_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_fontWeight_Proxy( 
    IHTMLCurrentStyle * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLCurrentStyle_get_fontWeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_fontSize_Proxy( 
    IHTMLCurrentStyle * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLCurrentStyle_get_fontSize_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_backgroundImage_Proxy( 
    IHTMLCurrentStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLCurrentStyle_get_backgroundImage_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_backgroundPositionX_Proxy( 
    IHTMLCurrentStyle * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLCurrentStyle_get_backgroundPositionX_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_backgroundPositionY_Proxy( 
    IHTMLCurrentStyle * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLCurrentStyle_get_backgroundPositionY_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_backgroundRepeat_Proxy( 
    IHTMLCurrentStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLCurrentStyle_get_backgroundRepeat_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_borderLeftColor_Proxy( 
    IHTMLCurrentStyle * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLCurrentStyle_get_borderLeftColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_borderTopColor_Proxy( 
    IHTMLCurrentStyle * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLCurrentStyle_get_borderTopColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_borderRightColor_Proxy( 
    IHTMLCurrentStyle * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLCurrentStyle_get_borderRightColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_borderBottomColor_Proxy( 
    IHTMLCurrentStyle * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLCurrentStyle_get_borderBottomColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_borderTopStyle_Proxy( 
    IHTMLCurrentStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLCurrentStyle_get_borderTopStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_borderRightStyle_Proxy( 
    IHTMLCurrentStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLCurrentStyle_get_borderRightStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_borderBottomStyle_Proxy( 
    IHTMLCurrentStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLCurrentStyle_get_borderBottomStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_borderLeftStyle_Proxy( 
    IHTMLCurrentStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLCurrentStyle_get_borderLeftStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_borderTopWidth_Proxy( 
    IHTMLCurrentStyle * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLCurrentStyle_get_borderTopWidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_borderRightWidth_Proxy( 
    IHTMLCurrentStyle * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLCurrentStyle_get_borderRightWidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_borderBottomWidth_Proxy( 
    IHTMLCurrentStyle * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLCurrentStyle_get_borderBottomWidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_borderLeftWidth_Proxy( 
    IHTMLCurrentStyle * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLCurrentStyle_get_borderLeftWidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_left_Proxy( 
    IHTMLCurrentStyle * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLCurrentStyle_get_left_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_top_Proxy( 
    IHTMLCurrentStyle * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLCurrentStyle_get_top_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_width_Proxy( 
    IHTMLCurrentStyle * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLCurrentStyle_get_width_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_height_Proxy( 
    IHTMLCurrentStyle * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLCurrentStyle_get_height_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_paddingLeft_Proxy( 
    IHTMLCurrentStyle * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLCurrentStyle_get_paddingLeft_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_paddingTop_Proxy( 
    IHTMLCurrentStyle * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLCurrentStyle_get_paddingTop_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_paddingRight_Proxy( 
    IHTMLCurrentStyle * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLCurrentStyle_get_paddingRight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_paddingBottom_Proxy( 
    IHTMLCurrentStyle * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLCurrentStyle_get_paddingBottom_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_textAlign_Proxy( 
    IHTMLCurrentStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLCurrentStyle_get_textAlign_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_textDecoration_Proxy( 
    IHTMLCurrentStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLCurrentStyle_get_textDecoration_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_display_Proxy( 
    IHTMLCurrentStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLCurrentStyle_get_display_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_visibility_Proxy( 
    IHTMLCurrentStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLCurrentStyle_get_visibility_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_zIndex_Proxy( 
    IHTMLCurrentStyle * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLCurrentStyle_get_zIndex_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_letterSpacing_Proxy( 
    IHTMLCurrentStyle * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLCurrentStyle_get_letterSpacing_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_lineHeight_Proxy( 
    IHTMLCurrentStyle * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLCurrentStyle_get_lineHeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_textIndent_Proxy( 
    IHTMLCurrentStyle * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLCurrentStyle_get_textIndent_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_verticalAlign_Proxy( 
    IHTMLCurrentStyle * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLCurrentStyle_get_verticalAlign_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_backgroundAttachment_Proxy( 
    IHTMLCurrentStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLCurrentStyle_get_backgroundAttachment_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_marginTop_Proxy( 
    IHTMLCurrentStyle * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLCurrentStyle_get_marginTop_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_marginRight_Proxy( 
    IHTMLCurrentStyle * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLCurrentStyle_get_marginRight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_marginBottom_Proxy( 
    IHTMLCurrentStyle * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLCurrentStyle_get_marginBottom_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_marginLeft_Proxy( 
    IHTMLCurrentStyle * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLCurrentStyle_get_marginLeft_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_clear_Proxy( 
    IHTMLCurrentStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLCurrentStyle_get_clear_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_listStyleType_Proxy( 
    IHTMLCurrentStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLCurrentStyle_get_listStyleType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_listStylePosition_Proxy( 
    IHTMLCurrentStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLCurrentStyle_get_listStylePosition_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_listStyleImage_Proxy( 
    IHTMLCurrentStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLCurrentStyle_get_listStyleImage_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_clipTop_Proxy( 
    IHTMLCurrentStyle * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLCurrentStyle_get_clipTop_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_clipRight_Proxy( 
    IHTMLCurrentStyle * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLCurrentStyle_get_clipRight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_clipBottom_Proxy( 
    IHTMLCurrentStyle * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLCurrentStyle_get_clipBottom_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_clipLeft_Proxy( 
    IHTMLCurrentStyle * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLCurrentStyle_get_clipLeft_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_overflow_Proxy( 
    IHTMLCurrentStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLCurrentStyle_get_overflow_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_pageBreakBefore_Proxy( 
    IHTMLCurrentStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLCurrentStyle_get_pageBreakBefore_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_pageBreakAfter_Proxy( 
    IHTMLCurrentStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLCurrentStyle_get_pageBreakAfter_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_cursor_Proxy( 
    IHTMLCurrentStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLCurrentStyle_get_cursor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_tableLayout_Proxy( 
    IHTMLCurrentStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLCurrentStyle_get_tableLayout_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_borderCollapse_Proxy( 
    IHTMLCurrentStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLCurrentStyle_get_borderCollapse_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_direction_Proxy( 
    IHTMLCurrentStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLCurrentStyle_get_direction_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_behavior_Proxy( 
    IHTMLCurrentStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLCurrentStyle_get_behavior_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_getAttribute_Proxy( 
    IHTMLCurrentStyle * This,
    /* [in] */ BSTR strAttributeName,
    /* [in][defaultvalue] */ LONG lFlags,
    /* [out][retval] */ VARIANT *AttributeValue);


void __RPC_STUB IHTMLCurrentStyle_getAttribute_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_unicodeBidi_Proxy( 
    IHTMLCurrentStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLCurrentStyle_get_unicodeBidi_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_right_Proxy( 
    IHTMLCurrentStyle * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLCurrentStyle_get_right_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_bottom_Proxy( 
    IHTMLCurrentStyle * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLCurrentStyle_get_bottom_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_imeMode_Proxy( 
    IHTMLCurrentStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLCurrentStyle_get_imeMode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_rubyAlign_Proxy( 
    IHTMLCurrentStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLCurrentStyle_get_rubyAlign_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_rubyPosition_Proxy( 
    IHTMLCurrentStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLCurrentStyle_get_rubyPosition_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_rubyOverhang_Proxy( 
    IHTMLCurrentStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLCurrentStyle_get_rubyOverhang_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_textAutospace_Proxy( 
    IHTMLCurrentStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLCurrentStyle_get_textAutospace_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_lineBreak_Proxy( 
    IHTMLCurrentStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLCurrentStyle_get_lineBreak_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_wordBreak_Proxy( 
    IHTMLCurrentStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLCurrentStyle_get_wordBreak_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_textJustify_Proxy( 
    IHTMLCurrentStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLCurrentStyle_get_textJustify_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_textJustifyTrim_Proxy( 
    IHTMLCurrentStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLCurrentStyle_get_textJustifyTrim_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_textKashida_Proxy( 
    IHTMLCurrentStyle * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLCurrentStyle_get_textKashida_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_blockDirection_Proxy( 
    IHTMLCurrentStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLCurrentStyle_get_blockDirection_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_layoutGridChar_Proxy( 
    IHTMLCurrentStyle * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLCurrentStyle_get_layoutGridChar_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_layoutGridLine_Proxy( 
    IHTMLCurrentStyle * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLCurrentStyle_get_layoutGridLine_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_layoutGridMode_Proxy( 
    IHTMLCurrentStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLCurrentStyle_get_layoutGridMode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_layoutGridType_Proxy( 
    IHTMLCurrentStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLCurrentStyle_get_layoutGridType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_borderStyle_Proxy( 
    IHTMLCurrentStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLCurrentStyle_get_borderStyle_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_borderColor_Proxy( 
    IHTMLCurrentStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLCurrentStyle_get_borderColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_borderWidth_Proxy( 
    IHTMLCurrentStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLCurrentStyle_get_borderWidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_padding_Proxy( 
    IHTMLCurrentStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLCurrentStyle_get_padding_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_margin_Proxy( 
    IHTMLCurrentStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLCurrentStyle_get_margin_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_accelerator_Proxy( 
    IHTMLCurrentStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLCurrentStyle_get_accelerator_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_overflowX_Proxy( 
    IHTMLCurrentStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLCurrentStyle_get_overflowX_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_overflowY_Proxy( 
    IHTMLCurrentStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLCurrentStyle_get_overflowY_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle_get_textTransform_Proxy( 
    IHTMLCurrentStyle * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLCurrentStyle_get_textTransform_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLCurrentStyle_INTERFACE_DEFINED__ */


#ifndef __IHTMLCurrentStyle2_INTERFACE_DEFINED__
#define __IHTMLCurrentStyle2_INTERFACE_DEFINED__

/* interface IHTMLCurrentStyle2 */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLCurrentStyle2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f658-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLCurrentStyle2 : public IDispatch
    {
    public:
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_layoutFlow( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_wordWrap( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textUnderlinePosition( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_hasLayout( 
            /* [out][retval] */ VARIANT_BOOL *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_scrollbarBaseColor( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_scrollbarFaceColor( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_scrollbar3dLightColor( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_scrollbarShadowColor( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_scrollbarHighlightColor( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_scrollbarDarkShadowColor( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_scrollbarArrowColor( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_scrollbarTrackColor( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_writingMode( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_zoom( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_filter( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textAlignLast( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textKashidaSpace( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [nonbrowsable][restricted][hidden][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_isBlock( 
            /* [out][retval] */ VARIANT_BOOL *p) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLCurrentStyle2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IHTMLCurrentStyle2 * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IHTMLCurrentStyle2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IHTMLCurrentStyle2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IHTMLCurrentStyle2 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IHTMLCurrentStyle2 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IHTMLCurrentStyle2 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IHTMLCurrentStyle2 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_layoutFlow )( 
            IHTMLCurrentStyle2 * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_wordWrap )( 
            IHTMLCurrentStyle2 * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_textUnderlinePosition )( 
            IHTMLCurrentStyle2 * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_hasLayout )( 
            IHTMLCurrentStyle2 * This,
            /* [out][retval] */ VARIANT_BOOL *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_scrollbarBaseColor )( 
            IHTMLCurrentStyle2 * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_scrollbarFaceColor )( 
            IHTMLCurrentStyle2 * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_scrollbar3dLightColor )( 
            IHTMLCurrentStyle2 * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_scrollbarShadowColor )( 
            IHTMLCurrentStyle2 * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_scrollbarHighlightColor )( 
            IHTMLCurrentStyle2 * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_scrollbarDarkShadowColor )( 
            IHTMLCurrentStyle2 * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_scrollbarArrowColor )( 
            IHTMLCurrentStyle2 * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_scrollbarTrackColor )( 
            IHTMLCurrentStyle2 * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_writingMode )( 
            IHTMLCurrentStyle2 * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_zoom )( 
            IHTMLCurrentStyle2 * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_filter )( 
            IHTMLCurrentStyle2 * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_textAlignLast )( 
            IHTMLCurrentStyle2 * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_textKashidaSpace )( 
            IHTMLCurrentStyle2 * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [nonbrowsable][restricted][hidden][bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_isBlock )( 
            IHTMLCurrentStyle2 * This,
            /* [out][retval] */ VARIANT_BOOL *p);
        
        END_INTERFACE
    } IHTMLCurrentStyle2Vtbl;

    interface IHTMLCurrentStyle2
    {
        CONST_VTBL struct IHTMLCurrentStyle2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLCurrentStyle2_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IHTMLCurrentStyle2_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IHTMLCurrentStyle2_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IHTMLCurrentStyle2_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IHTMLCurrentStyle2_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IHTMLCurrentStyle2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IHTMLCurrentStyle2_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IHTMLCurrentStyle2_get_layoutFlow(This,p)	\
    (This)->lpVtbl -> get_layoutFlow(This,p)

#define IHTMLCurrentStyle2_get_wordWrap(This,p)	\
    (This)->lpVtbl -> get_wordWrap(This,p)

#define IHTMLCurrentStyle2_get_textUnderlinePosition(This,p)	\
    (This)->lpVtbl -> get_textUnderlinePosition(This,p)

#define IHTMLCurrentStyle2_get_hasLayout(This,p)	\
    (This)->lpVtbl -> get_hasLayout(This,p)

#define IHTMLCurrentStyle2_get_scrollbarBaseColor(This,p)	\
    (This)->lpVtbl -> get_scrollbarBaseColor(This,p)

#define IHTMLCurrentStyle2_get_scrollbarFaceColor(This,p)	\
    (This)->lpVtbl -> get_scrollbarFaceColor(This,p)

#define IHTMLCurrentStyle2_get_scrollbar3dLightColor(This,p)	\
    (This)->lpVtbl -> get_scrollbar3dLightColor(This,p)

#define IHTMLCurrentStyle2_get_scrollbarShadowColor(This,p)	\
    (This)->lpVtbl -> get_scrollbarShadowColor(This,p)

#define IHTMLCurrentStyle2_get_scrollbarHighlightColor(This,p)	\
    (This)->lpVtbl -> get_scrollbarHighlightColor(This,p)

#define IHTMLCurrentStyle2_get_scrollbarDarkShadowColor(This,p)	\
    (This)->lpVtbl -> get_scrollbarDarkShadowColor(This,p)

#define IHTMLCurrentStyle2_get_scrollbarArrowColor(This,p)	\
    (This)->lpVtbl -> get_scrollbarArrowColor(This,p)

#define IHTMLCurrentStyle2_get_scrollbarTrackColor(This,p)	\
    (This)->lpVtbl -> get_scrollbarTrackColor(This,p)

#define IHTMLCurrentStyle2_get_writingMode(This,p)	\
    (This)->lpVtbl -> get_writingMode(This,p)

#define IHTMLCurrentStyle2_get_zoom(This,p)	\
    (This)->lpVtbl -> get_zoom(This,p)

#define IHTMLCurrentStyle2_get_filter(This,p)	\
    (This)->lpVtbl -> get_filter(This,p)

#define IHTMLCurrentStyle2_get_textAlignLast(This,p)	\
    (This)->lpVtbl -> get_textAlignLast(This,p)

#define IHTMLCurrentStyle2_get_textKashidaSpace(This,p)	\
    (This)->lpVtbl -> get_textKashidaSpace(This,p)

#define IHTMLCurrentStyle2_get_isBlock(This,p)	\
    (This)->lpVtbl -> get_isBlock(This,p)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle2_get_layoutFlow_Proxy( 
    IHTMLCurrentStyle2 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLCurrentStyle2_get_layoutFlow_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle2_get_wordWrap_Proxy( 
    IHTMLCurrentStyle2 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLCurrentStyle2_get_wordWrap_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle2_get_textUnderlinePosition_Proxy( 
    IHTMLCurrentStyle2 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLCurrentStyle2_get_textUnderlinePosition_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle2_get_hasLayout_Proxy( 
    IHTMLCurrentStyle2 * This,
    /* [out][retval] */ VARIANT_BOOL *p);


void __RPC_STUB IHTMLCurrentStyle2_get_hasLayout_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle2_get_scrollbarBaseColor_Proxy( 
    IHTMLCurrentStyle2 * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLCurrentStyle2_get_scrollbarBaseColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle2_get_scrollbarFaceColor_Proxy( 
    IHTMLCurrentStyle2 * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLCurrentStyle2_get_scrollbarFaceColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle2_get_scrollbar3dLightColor_Proxy( 
    IHTMLCurrentStyle2 * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLCurrentStyle2_get_scrollbar3dLightColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle2_get_scrollbarShadowColor_Proxy( 
    IHTMLCurrentStyle2 * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLCurrentStyle2_get_scrollbarShadowColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle2_get_scrollbarHighlightColor_Proxy( 
    IHTMLCurrentStyle2 * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLCurrentStyle2_get_scrollbarHighlightColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle2_get_scrollbarDarkShadowColor_Proxy( 
    IHTMLCurrentStyle2 * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLCurrentStyle2_get_scrollbarDarkShadowColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle2_get_scrollbarArrowColor_Proxy( 
    IHTMLCurrentStyle2 * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLCurrentStyle2_get_scrollbarArrowColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle2_get_scrollbarTrackColor_Proxy( 
    IHTMLCurrentStyle2 * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLCurrentStyle2_get_scrollbarTrackColor_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle2_get_writingMode_Proxy( 
    IHTMLCurrentStyle2 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLCurrentStyle2_get_writingMode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle2_get_zoom_Proxy( 
    IHTMLCurrentStyle2 * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLCurrentStyle2_get_zoom_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle2_get_filter_Proxy( 
    IHTMLCurrentStyle2 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLCurrentStyle2_get_filter_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle2_get_textAlignLast_Proxy( 
    IHTMLCurrentStyle2 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLCurrentStyle2_get_textAlignLast_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle2_get_textKashidaSpace_Proxy( 
    IHTMLCurrentStyle2 * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLCurrentStyle2_get_textKashidaSpace_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [nonbrowsable][restricted][hidden][bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle2_get_isBlock_Proxy( 
    IHTMLCurrentStyle2 * This,
    /* [out][retval] */ VARIANT_BOOL *p);


void __RPC_STUB IHTMLCurrentStyle2_get_isBlock_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLCurrentStyle2_INTERFACE_DEFINED__ */


#ifndef __IHTMLCurrentStyle3_INTERFACE_DEFINED__
#define __IHTMLCurrentStyle3_INTERFACE_DEFINED__

/* interface IHTMLCurrentStyle3 */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLCurrentStyle3;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f818-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLCurrentStyle3 : public IDispatch
    {
    public:
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_textOverflow( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_minHeight( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_wordSpacing( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_whiteSpace( 
            /* [out][retval] */ BSTR *p) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLCurrentStyle3Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IHTMLCurrentStyle3 * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IHTMLCurrentStyle3 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IHTMLCurrentStyle3 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IHTMLCurrentStyle3 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IHTMLCurrentStyle3 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IHTMLCurrentStyle3 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IHTMLCurrentStyle3 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_textOverflow )( 
            IHTMLCurrentStyle3 * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_minHeight )( 
            IHTMLCurrentStyle3 * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_wordSpacing )( 
            IHTMLCurrentStyle3 * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_whiteSpace )( 
            IHTMLCurrentStyle3 * This,
            /* [out][retval] */ BSTR *p);
        
        END_INTERFACE
    } IHTMLCurrentStyle3Vtbl;

    interface IHTMLCurrentStyle3
    {
        CONST_VTBL struct IHTMLCurrentStyle3Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLCurrentStyle3_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IHTMLCurrentStyle3_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IHTMLCurrentStyle3_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IHTMLCurrentStyle3_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IHTMLCurrentStyle3_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IHTMLCurrentStyle3_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IHTMLCurrentStyle3_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IHTMLCurrentStyle3_get_textOverflow(This,p)	\
    (This)->lpVtbl -> get_textOverflow(This,p)

#define IHTMLCurrentStyle3_get_minHeight(This,p)	\
    (This)->lpVtbl -> get_minHeight(This,p)

#define IHTMLCurrentStyle3_get_wordSpacing(This,p)	\
    (This)->lpVtbl -> get_wordSpacing(This,p)

#define IHTMLCurrentStyle3_get_whiteSpace(This,p)	\
    (This)->lpVtbl -> get_whiteSpace(This,p)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle3_get_textOverflow_Proxy( 
    IHTMLCurrentStyle3 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLCurrentStyle3_get_textOverflow_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle3_get_minHeight_Proxy( 
    IHTMLCurrentStyle3 * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLCurrentStyle3_get_minHeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle3_get_wordSpacing_Proxy( 
    IHTMLCurrentStyle3 * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLCurrentStyle3_get_wordSpacing_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLCurrentStyle3_get_whiteSpace_Proxy( 
    IHTMLCurrentStyle3 * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLCurrentStyle3_get_whiteSpace_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLCurrentStyle3_INTERFACE_DEFINED__ */


#ifndef __DispHTMLCurrentStyle_DISPINTERFACE_DEFINED__
#define __DispHTMLCurrentStyle_DISPINTERFACE_DEFINED__

/* dispinterface DispHTMLCurrentStyle */
/* [uuid][hidden] */ 


EXTERN_C const IID DIID_DispHTMLCurrentStyle;

#if defined(__cplusplus) && !defined(CINTERFACE)

    MIDL_INTERFACE("3050f557-98b5-11cf-bb82-00aa00bdce0b")
    DispHTMLCurrentStyle : public IDispatch
    {
    };
    
#else 	/* C style interface */

    typedef struct DispHTMLCurrentStyleVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            DispHTMLCurrentStyle * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            DispHTMLCurrentStyle * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            DispHTMLCurrentStyle * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            DispHTMLCurrentStyle * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            DispHTMLCurrentStyle * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            DispHTMLCurrentStyle * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            DispHTMLCurrentStyle * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        END_INTERFACE
    } DispHTMLCurrentStyleVtbl;

    interface DispHTMLCurrentStyle
    {
        CONST_VTBL struct DispHTMLCurrentStyleVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define DispHTMLCurrentStyle_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define DispHTMLCurrentStyle_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define DispHTMLCurrentStyle_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define DispHTMLCurrentStyle_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define DispHTMLCurrentStyle_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define DispHTMLCurrentStyle_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define DispHTMLCurrentStyle_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)

#endif /* COBJMACROS */


#endif 	/* C style interface */


#endif 	/* __DispHTMLCurrentStyle_DISPINTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_HTMLCurrentStyle;

#ifdef __cplusplus

class DECLSPEC_UUID("3050f3dc-98b5-11cf-bb82-00aa00bdce0b")
HTMLCurrentStyle;
#endif

#ifndef __IHTMLElement_INTERFACE_DEFINED__
#define __IHTMLElement_INTERFACE_DEFINED__

/* interface IHTMLElement */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLElement;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f1ff-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLElement : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE setAttribute( 
            /* [in] */ BSTR strAttributeName,
            /* [in] */ VARIANT AttributeValue,
            /* [in][defaultvalue] */ LONG lFlags = 1) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE getAttribute( 
            /* [in] */ BSTR strAttributeName,
            /* [in][defaultvalue] */ LONG lFlags,
            /* [out][retval] */ VARIANT *AttributeValue) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE removeAttribute( 
            /* [in] */ BSTR strAttributeName,
            /* [in][defaultvalue] */ LONG lFlags,
            /* [out][retval] */ VARIANT_BOOL *pfSuccess) = 0;
        
        virtual /* [bindable][id][propput] */ HRESULT STDMETHODCALLTYPE put_className( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][id][propget] */ HRESULT STDMETHODCALLTYPE get_className( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][id][propput] */ HRESULT STDMETHODCALLTYPE put_id( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][id][propget] */ HRESULT STDMETHODCALLTYPE get_id( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_tagName( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_parentElement( 
            /* [out][retval] */ IHTMLElement **p) = 0;
        
        virtual /* [nonbrowsable][id][propget] */ HRESULT STDMETHODCALLTYPE get_style( 
            /* [out][retval] */ IHTMLStyle **p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onhelp( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onhelp( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onclick( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onclick( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_ondblclick( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_ondblclick( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onkeydown( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onkeydown( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onkeyup( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onkeyup( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onkeypress( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onkeypress( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onmouseout( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onmouseout( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onmouseover( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onmouseover( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onmousemove( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onmousemove( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onmousedown( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onmousedown( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onmouseup( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onmouseup( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_document( 
            /* [out][retval] */ IDispatch **p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_title( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_title( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_language( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_language( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onselectstart( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onselectstart( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE scrollIntoView( 
            /* [in][optional] */ VARIANT varargStart) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE contains( 
            /* [in] */ IHTMLElement *pChild,
            /* [out][retval] */ VARIANT_BOOL *pfResult) = 0;
        
        virtual /* [bindable][id][propget] */ HRESULT STDMETHODCALLTYPE get_sourceIndex( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_recordNumber( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_lang( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_lang( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_offsetLeft( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_offsetTop( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_offsetWidth( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_offsetHeight( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_offsetParent( 
            /* [out][retval] */ IHTMLElement **p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_innerHTML( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_innerHTML( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_innerText( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_innerText( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_outerHTML( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_outerHTML( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_outerText( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_outerText( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE insertAdjacentHTML( 
            /* [in] */ BSTR where,
            /* [in] */ BSTR html) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE insertAdjacentText( 
            /* [in] */ BSTR where,
            /* [in] */ BSTR text) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_parentTextEdit( 
            /* [out][retval] */ IHTMLElement **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_isTextEdit( 
            /* [out][retval] */ VARIANT_BOOL *p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE click( void) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_filters( 
            /* [out][retval] */ IHTMLFiltersCollection **p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_ondragstart( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_ondragstart( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE toString( 
            /* [out][retval] */ BSTR *String) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onbeforeupdate( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onbeforeupdate( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onafterupdate( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onafterupdate( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onerrorupdate( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onerrorupdate( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onrowexit( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onrowexit( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onrowenter( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onrowenter( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_ondatasetchanged( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_ondatasetchanged( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_ondataavailable( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_ondataavailable( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_ondatasetcomplete( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_ondatasetcomplete( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE put_onfilterchange( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE get_onfilterchange( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_children( 
            /* [out][retval] */ IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_all( 
            /* [out][retval] */ IDispatch **p) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLElementVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IHTMLElement * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IHTMLElement * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IHTMLElement * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IHTMLElement * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IHTMLElement * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IHTMLElement * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IHTMLElement * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *setAttribute )( 
            IHTMLElement * This,
            /* [in] */ BSTR strAttributeName,
            /* [in] */ VARIANT AttributeValue,
            /* [in][defaultvalue] */ LONG lFlags);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *getAttribute )( 
            IHTMLElement * This,
            /* [in] */ BSTR strAttributeName,
            /* [in][defaultvalue] */ LONG lFlags,
            /* [out][retval] */ VARIANT *AttributeValue);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *removeAttribute )( 
            IHTMLElement * This,
            /* [in] */ BSTR strAttributeName,
            /* [in][defaultvalue] */ LONG lFlags,
            /* [out][retval] */ VARIANT_BOOL *pfSuccess);
        
        /* [bindable][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_className )( 
            IHTMLElement * This,
            /* [in] */ BSTR v);
        
        /* [bindable][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_className )( 
            IHTMLElement * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_id )( 
            IHTMLElement * This,
            /* [in] */ BSTR v);
        
        /* [bindable][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_id )( 
            IHTMLElement * This,
            /* [out][retval] */ BSTR *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_tagName )( 
            IHTMLElement * This,
            /* [out][retval] */ BSTR *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_parentElement )( 
            IHTMLElement * This,
            /* [out][retval] */ IHTMLElement **p);
        
        /* [nonbrowsable][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_style )( 
            IHTMLElement * This,
            /* [out][retval] */ IHTMLStyle **p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_onhelp )( 
            IHTMLElement * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_onhelp )( 
            IHTMLElement * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_onclick )( 
            IHTMLElement * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_onclick )( 
            IHTMLElement * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ondblclick )( 
            IHTMLElement * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ondblclick )( 
            IHTMLElement * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_onkeydown )( 
            IHTMLElement * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_onkeydown )( 
            IHTMLElement * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_onkeyup )( 
            IHTMLElement * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_onkeyup )( 
            IHTMLElement * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_onkeypress )( 
            IHTMLElement * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_onkeypress )( 
            IHTMLElement * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_onmouseout )( 
            IHTMLElement * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_onmouseout )( 
            IHTMLElement * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_onmouseover )( 
            IHTMLElement * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_onmouseover )( 
            IHTMLElement * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_onmousemove )( 
            IHTMLElement * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_onmousemove )( 
            IHTMLElement * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_onmousedown )( 
            IHTMLElement * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_onmousedown )( 
            IHTMLElement * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_onmouseup )( 
            IHTMLElement * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_onmouseup )( 
            IHTMLElement * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_document )( 
            IHTMLElement * This,
            /* [out][retval] */ IDispatch **p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_title )( 
            IHTMLElement * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_title )( 
            IHTMLElement * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_language )( 
            IHTMLElement * This,
            /* [in] */ BSTR v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_language )( 
            IHTMLElement * This,
            /* [out][retval] */ BSTR *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_onselectstart )( 
            IHTMLElement * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_onselectstart )( 
            IHTMLElement * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *scrollIntoView )( 
            IHTMLElement * This,
            /* [in][optional] */ VARIANT varargStart);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *contains )( 
            IHTMLElement * This,
            /* [in] */ IHTMLElement *pChild,
            /* [out][retval] */ VARIANT_BOOL *pfResult);
        
        /* [bindable][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_sourceIndex )( 
            IHTMLElement * This,
            /* [out][retval] */ long *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_recordNumber )( 
            IHTMLElement * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_lang )( 
            IHTMLElement * This,
            /* [in] */ BSTR v);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_lang )( 
            IHTMLElement * This,
            /* [out][retval] */ BSTR *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_offsetLeft )( 
            IHTMLElement * This,
            /* [out][retval] */ long *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_offsetTop )( 
            IHTMLElement * This,
            /* [out][retval] */ long *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_offsetWidth )( 
            IHTMLElement * This,
            /* [out][retval] */ long *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_offsetHeight )( 
            IHTMLElement * This,
            /* [out][retval] */ long *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_offsetParent )( 
            IHTMLElement * This,
            /* [out][retval] */ IHTMLElement **p);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_innerHTML )( 
            IHTMLElement * This,
            /* [in] */ BSTR v);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_innerHTML )( 
            IHTMLElement * This,
            /* [out][retval] */ BSTR *p);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_innerText )( 
            IHTMLElement * This,
            /* [in] */ BSTR v);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_innerText )( 
            IHTMLElement * This,
            /* [out][retval] */ BSTR *p);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_outerHTML )( 
            IHTMLElement * This,
            /* [in] */ BSTR v);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_outerHTML )( 
            IHTMLElement * This,
            /* [out][retval] */ BSTR *p);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_outerText )( 
            IHTMLElement * This,
            /* [in] */ BSTR v);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_outerText )( 
            IHTMLElement * This,
            /* [out][retval] */ BSTR *p);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *insertAdjacentHTML )( 
            IHTMLElement * This,
            /* [in] */ BSTR where,
            /* [in] */ BSTR html);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *insertAdjacentText )( 
            IHTMLElement * This,
            /* [in] */ BSTR where,
            /* [in] */ BSTR text);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_parentTextEdit )( 
            IHTMLElement * This,
            /* [out][retval] */ IHTMLElement **p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_isTextEdit )( 
            IHTMLElement * This,
            /* [out][retval] */ VARIANT_BOOL *p);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *click )( 
            IHTMLElement * This);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_filters )( 
            IHTMLElement * This,
            /* [out][retval] */ IHTMLFiltersCollection **p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ondragstart )( 
            IHTMLElement * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ondragstart )( 
            IHTMLElement * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *toString )( 
            IHTMLElement * This,
            /* [out][retval] */ BSTR *String);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_onbeforeupdate )( 
            IHTMLElement * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_onbeforeupdate )( 
            IHTMLElement * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_onafterupdate )( 
            IHTMLElement * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_onafterupdate )( 
            IHTMLElement * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_onerrorupdate )( 
            IHTMLElement * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_onerrorupdate )( 
            IHTMLElement * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_onrowexit )( 
            IHTMLElement * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_onrowexit )( 
            IHTMLElement * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_onrowenter )( 
            IHTMLElement * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_onrowenter )( 
            IHTMLElement * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ondatasetchanged )( 
            IHTMLElement * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ondatasetchanged )( 
            IHTMLElement * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ondataavailable )( 
            IHTMLElement * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ondataavailable )( 
            IHTMLElement * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_ondatasetcomplete )( 
            IHTMLElement * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ondatasetcomplete )( 
            IHTMLElement * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [bindable][displaybind][id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_onfilterchange )( 
            IHTMLElement * This,
            /* [in] */ VARIANT v);
        
        /* [bindable][displaybind][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_onfilterchange )( 
            IHTMLElement * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_children )( 
            IHTMLElement * This,
            /* [out][retval] */ IDispatch **p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_all )( 
            IHTMLElement * This,
            /* [out][retval] */ IDispatch **p);
        
        END_INTERFACE
    } IHTMLElementVtbl;

    interface IHTMLElement
    {
        CONST_VTBL struct IHTMLElementVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLElement_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IHTMLElement_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IHTMLElement_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IHTMLElement_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IHTMLElement_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IHTMLElement_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IHTMLElement_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IHTMLElement_setAttribute(This,strAttributeName,AttributeValue,lFlags)	\
    (This)->lpVtbl -> setAttribute(This,strAttributeName,AttributeValue,lFlags)

#define IHTMLElement_getAttribute(This,strAttributeName,lFlags,AttributeValue)	\
    (This)->lpVtbl -> getAttribute(This,strAttributeName,lFlags,AttributeValue)

#define IHTMLElement_removeAttribute(This,strAttributeName,lFlags,pfSuccess)	\
    (This)->lpVtbl -> removeAttribute(This,strAttributeName,lFlags,pfSuccess)

#define IHTMLElement_put_className(This,v)	\
    (This)->lpVtbl -> put_className(This,v)

#define IHTMLElement_get_className(This,p)	\
    (This)->lpVtbl -> get_className(This,p)

#define IHTMLElement_put_id(This,v)	\
    (This)->lpVtbl -> put_id(This,v)

#define IHTMLElement_get_id(This,p)	\
    (This)->lpVtbl -> get_id(This,p)

#define IHTMLElement_get_tagName(This,p)	\
    (This)->lpVtbl -> get_tagName(This,p)

#define IHTMLElement_get_parentElement(This,p)	\
    (This)->lpVtbl -> get_parentElement(This,p)

#define IHTMLElement_get_style(This,p)	\
    (This)->lpVtbl -> get_style(This,p)

#define IHTMLElement_put_onhelp(This,v)	\
    (This)->lpVtbl -> put_onhelp(This,v)

#define IHTMLElement_get_onhelp(This,p)	\
    (This)->lpVtbl -> get_onhelp(This,p)

#define IHTMLElement_put_onclick(This,v)	\
    (This)->lpVtbl -> put_onclick(This,v)

#define IHTMLElement_get_onclick(This,p)	\
    (This)->lpVtbl -> get_onclick(This,p)

#define IHTMLElement_put_ondblclick(This,v)	\
    (This)->lpVtbl -> put_ondblclick(This,v)

#define IHTMLElement_get_ondblclick(This,p)	\
    (This)->lpVtbl -> get_ondblclick(This,p)

#define IHTMLElement_put_onkeydown(This,v)	\
    (This)->lpVtbl -> put_onkeydown(This,v)

#define IHTMLElement_get_onkeydown(This,p)	\
    (This)->lpVtbl -> get_onkeydown(This,p)

#define IHTMLElement_put_onkeyup(This,v)	\
    (This)->lpVtbl -> put_onkeyup(This,v)

#define IHTMLElement_get_onkeyup(This,p)	\
    (This)->lpVtbl -> get_onkeyup(This,p)

#define IHTMLElement_put_onkeypress(This,v)	\
    (This)->lpVtbl -> put_onkeypress(This,v)

#define IHTMLElement_get_onkeypress(This,p)	\
    (This)->lpVtbl -> get_onkeypress(This,p)

#define IHTMLElement_put_onmouseout(This,v)	\
    (This)->lpVtbl -> put_onmouseout(This,v)

#define IHTMLElement_get_onmouseout(This,p)	\
    (This)->lpVtbl -> get_onmouseout(This,p)

#define IHTMLElement_put_onmouseover(This,v)	\
    (This)->lpVtbl -> put_onmouseover(This,v)

#define IHTMLElement_get_onmouseover(This,p)	\
    (This)->lpVtbl -> get_onmouseover(This,p)

#define IHTMLElement_put_onmousemove(This,v)	\
    (This)->lpVtbl -> put_onmousemove(This,v)

#define IHTMLElement_get_onmousemove(This,p)	\
    (This)->lpVtbl -> get_onmousemove(This,p)

#define IHTMLElement_put_onmousedown(This,v)	\
    (This)->lpVtbl -> put_onmousedown(This,v)

#define IHTMLElement_get_onmousedown(This,p)	\
    (This)->lpVtbl -> get_onmousedown(This,p)

#define IHTMLElement_put_onmouseup(This,v)	\
    (This)->lpVtbl -> put_onmouseup(This,v)

#define IHTMLElement_get_onmouseup(This,p)	\
    (This)->lpVtbl -> get_onmouseup(This,p)

#define IHTMLElement_get_document(This,p)	\
    (This)->lpVtbl -> get_document(This,p)

#define IHTMLElement_put_title(This,v)	\
    (This)->lpVtbl -> put_title(This,v)

#define IHTMLElement_get_title(This,p)	\
    (This)->lpVtbl -> get_title(This,p)

#define IHTMLElement_put_language(This,v)	\
    (This)->lpVtbl -> put_language(This,v)

#define IHTMLElement_get_language(This,p)	\
    (This)->lpVtbl -> get_language(This,p)

#define IHTMLElement_put_onselectstart(This,v)	\
    (This)->lpVtbl -> put_onselectstart(This,v)

#define IHTMLElement_get_onselectstart(This,p)	\
    (This)->lpVtbl -> get_onselectstart(This,p)

#define IHTMLElement_scrollIntoView(This,varargStart)	\
    (This)->lpVtbl -> scrollIntoView(This,varargStart)

#define IHTMLElement_contains(This,pChild,pfResult)	\
    (This)->lpVtbl -> contains(This,pChild,pfResult)

#define IHTMLElement_get_sourceIndex(This,p)	\
    (This)->lpVtbl -> get_sourceIndex(This,p)

#define IHTMLElement_get_recordNumber(This,p)	\
    (This)->lpVtbl -> get_recordNumber(This,p)

#define IHTMLElement_put_lang(This,v)	\
    (This)->lpVtbl -> put_lang(This,v)

#define IHTMLElement_get_lang(This,p)	\
    (This)->lpVtbl -> get_lang(This,p)

#define IHTMLElement_get_offsetLeft(This,p)	\
    (This)->lpVtbl -> get_offsetLeft(This,p)

#define IHTMLElement_get_offsetTop(This,p)	\
    (This)->lpVtbl -> get_offsetTop(This,p)

#define IHTMLElement_get_offsetWidth(This,p)	\
    (This)->lpVtbl -> get_offsetWidth(This,p)

#define IHTMLElement_get_offsetHeight(This,p)	\
    (This)->lpVtbl -> get_offsetHeight(This,p)

#define IHTMLElement_get_offsetParent(This,p)	\
    (This)->lpVtbl -> get_offsetParent(This,p)

#define IHTMLElement_put_innerHTML(This,v)	\
    (This)->lpVtbl -> put_innerHTML(This,v)

#define IHTMLElement_get_innerHTML(This,p)	\
    (This)->lpVtbl -> get_innerHTML(This,p)

#define IHTMLElement_put_innerText(This,v)	\
    (This)->lpVtbl -> put_innerText(This,v)

#define IHTMLElement_get_innerText(This,p)	\
    (This)->lpVtbl -> get_innerText(This,p)

#define IHTMLElement_put_outerHTML(This,v)	\
    (This)->lpVtbl -> put_outerHTML(This,v)

#define IHTMLElement_get_outerHTML(This,p)	\
    (This)->lpVtbl -> get_outerHTML(This,p)

#define IHTMLElement_put_outerText(This,v)	\
    (This)->lpVtbl -> put_outerText(This,v)

#define IHTMLElement_get_outerText(This,p)	\
    (This)->lpVtbl -> get_outerText(This,p)

#define IHTMLElement_insertAdjacentHTML(This,where,html)	\
    (This)->lpVtbl -> insertAdjacentHTML(This,where,html)

#define IHTMLElement_insertAdjacentText(This,where,text)	\
    (This)->lpVtbl -> insertAdjacentText(This,where,text)

#define IHTMLElement_get_parentTextEdit(This,p)	\
    (This)->lpVtbl -> get_parentTextEdit(This,p)

#define IHTMLElement_get_isTextEdit(This,p)	\
    (This)->lpVtbl -> get_isTextEdit(This,p)

#define IHTMLElement_click(This)	\
    (This)->lpVtbl -> click(This)

#define IHTMLElement_get_filters(This,p)	\
    (This)->lpVtbl -> get_filters(This,p)

#define IHTMLElement_put_ondragstart(This,v)	\
    (This)->lpVtbl -> put_ondragstart(This,v)

#define IHTMLElement_get_ondragstart(This,p)	\
    (This)->lpVtbl -> get_ondragstart(This,p)

#define IHTMLElement_toString(This,String)	\
    (This)->lpVtbl -> toString(This,String)

#define IHTMLElement_put_onbeforeupdate(This,v)	\
    (This)->lpVtbl -> put_onbeforeupdate(This,v)

#define IHTMLElement_get_onbeforeupdate(This,p)	\
    (This)->lpVtbl -> get_onbeforeupdate(This,p)

#define IHTMLElement_put_onafterupdate(This,v)	\
    (This)->lpVtbl -> put_onafterupdate(This,v)

#define IHTMLElement_get_onafterupdate(This,p)	\
    (This)->lpVtbl -> get_onafterupdate(This,p)

#define IHTMLElement_put_onerrorupdate(This,v)	\
    (This)->lpVtbl -> put_onerrorupdate(This,v)

#define IHTMLElement_get_onerrorupdate(This,p)	\
    (This)->lpVtbl -> get_onerrorupdate(This,p)

#define IHTMLElement_put_onrowexit(This,v)	\
    (This)->lpVtbl -> put_onrowexit(This,v)

#define IHTMLElement_get_onrowexit(This,p)	\
    (This)->lpVtbl -> get_onrowexit(This,p)

#define IHTMLElement_put_onrowenter(This,v)	\
    (This)->lpVtbl -> put_onrowenter(This,v)

#define IHTMLElement_get_onrowenter(This,p)	\
    (This)->lpVtbl -> get_onrowenter(This,p)

#define IHTMLElement_put_ondatasetchanged(This,v)	\
    (This)->lpVtbl -> put_ondatasetchanged(This,v)

#define IHTMLElement_get_ondatasetchanged(This,p)	\
    (This)->lpVtbl -> get_ondatasetchanged(This,p)

#define IHTMLElement_put_ondataavailable(This,v)	\
    (This)->lpVtbl -> put_ondataavailable(This,v)

#define IHTMLElement_get_ondataavailable(This,p)	\
    (This)->lpVtbl -> get_ondataavailable(This,p)

#define IHTMLElement_put_ondatasetcomplete(This,v)	\
    (This)->lpVtbl -> put_ondatasetcomplete(This,v)

#define IHTMLElement_get_ondatasetcomplete(This,p)	\
    (This)->lpVtbl -> get_ondatasetcomplete(This,p)

#define IHTMLElement_put_onfilterchange(This,v)	\
    (This)->lpVtbl -> put_onfilterchange(This,v)

#define IHTMLElement_get_onfilterchange(This,p)	\
    (This)->lpVtbl -> get_onfilterchange(This,p)

#define IHTMLElement_get_children(This,p)	\
    (This)->lpVtbl -> get_children(This,p)

#define IHTMLElement_get_all(This,p)	\
    (This)->lpVtbl -> get_all(This,p)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLElement_setAttribute_Proxy( 
    IHTMLElement * This,
    /* [in] */ BSTR strAttributeName,
    /* [in] */ VARIANT AttributeValue,
    /* [in][defaultvalue] */ LONG lFlags);


void __RPC_STUB IHTMLElement_setAttribute_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLElement_getAttribute_Proxy( 
    IHTMLElement * This,
    /* [in] */ BSTR strAttributeName,
    /* [in][defaultvalue] */ LONG lFlags,
    /* [out][retval] */ VARIANT *AttributeValue);


void __RPC_STUB IHTMLElement_getAttribute_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLElement_removeAttribute_Proxy( 
    IHTMLElement * This,
    /* [in] */ BSTR strAttributeName,
    /* [in][defaultvalue] */ LONG lFlags,
    /* [out][retval] */ VARIANT_BOOL *pfSuccess);


void __RPC_STUB IHTMLElement_removeAttribute_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLElement_put_className_Proxy( 
    IHTMLElement * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLElement_put_className_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElement_get_className_Proxy( 
    IHTMLElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLElement_get_className_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLElement_put_id_Proxy( 
    IHTMLElement * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLElement_put_id_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElement_get_id_Proxy( 
    IHTMLElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLElement_get_id_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElement_get_tagName_Proxy( 
    IHTMLElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLElement_get_tagName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElement_get_parentElement_Proxy( 
    IHTMLElement * This,
    /* [out][retval] */ IHTMLElement **p);


void __RPC_STUB IHTMLElement_get_parentElement_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [nonbrowsable][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElement_get_style_Proxy( 
    IHTMLElement * This,
    /* [out][retval] */ IHTMLStyle **p);


void __RPC_STUB IHTMLElement_get_style_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLElement_put_onhelp_Proxy( 
    IHTMLElement * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLElement_put_onhelp_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElement_get_onhelp_Proxy( 
    IHTMLElement * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLElement_get_onhelp_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLElement_put_onclick_Proxy( 
    IHTMLElement * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLElement_put_onclick_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElement_get_onclick_Proxy( 
    IHTMLElement * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLElement_get_onclick_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLElement_put_ondblclick_Proxy( 
    IHTMLElement * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLElement_put_ondblclick_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElement_get_ondblclick_Proxy( 
    IHTMLElement * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLElement_get_ondblclick_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLElement_put_onkeydown_Proxy( 
    IHTMLElement * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLElement_put_onkeydown_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElement_get_onkeydown_Proxy( 
    IHTMLElement * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLElement_get_onkeydown_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLElement_put_onkeyup_Proxy( 
    IHTMLElement * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLElement_put_onkeyup_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElement_get_onkeyup_Proxy( 
    IHTMLElement * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLElement_get_onkeyup_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLElement_put_onkeypress_Proxy( 
    IHTMLElement * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLElement_put_onkeypress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElement_get_onkeypress_Proxy( 
    IHTMLElement * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLElement_get_onkeypress_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLElement_put_onmouseout_Proxy( 
    IHTMLElement * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLElement_put_onmouseout_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElement_get_onmouseout_Proxy( 
    IHTMLElement * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLElement_get_onmouseout_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLElement_put_onmouseover_Proxy( 
    IHTMLElement * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLElement_put_onmouseover_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElement_get_onmouseover_Proxy( 
    IHTMLElement * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLElement_get_onmouseover_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLElement_put_onmousemove_Proxy( 
    IHTMLElement * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLElement_put_onmousemove_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElement_get_onmousemove_Proxy( 
    IHTMLElement * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLElement_get_onmousemove_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLElement_put_onmousedown_Proxy( 
    IHTMLElement * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLElement_put_onmousedown_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElement_get_onmousedown_Proxy( 
    IHTMLElement * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLElement_get_onmousedown_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLElement_put_onmouseup_Proxy( 
    IHTMLElement * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLElement_put_onmouseup_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElement_get_onmouseup_Proxy( 
    IHTMLElement * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLElement_get_onmouseup_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElement_get_document_Proxy( 
    IHTMLElement * This,
    /* [out][retval] */ IDispatch **p);


void __RPC_STUB IHTMLElement_get_document_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLElement_put_title_Proxy( 
    IHTMLElement * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLElement_put_title_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElement_get_title_Proxy( 
    IHTMLElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLElement_get_title_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLElement_put_language_Proxy( 
    IHTMLElement * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLElement_put_language_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElement_get_language_Proxy( 
    IHTMLElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLElement_get_language_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLElement_put_onselectstart_Proxy( 
    IHTMLElement * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLElement_put_onselectstart_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElement_get_onselectstart_Proxy( 
    IHTMLElement * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLElement_get_onselectstart_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLElement_scrollIntoView_Proxy( 
    IHTMLElement * This,
    /* [in][optional] */ VARIANT varargStart);


void __RPC_STUB IHTMLElement_scrollIntoView_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLElement_contains_Proxy( 
    IHTMLElement * This,
    /* [in] */ IHTMLElement *pChild,
    /* [out][retval] */ VARIANT_BOOL *pfResult);


void __RPC_STUB IHTMLElement_contains_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElement_get_sourceIndex_Proxy( 
    IHTMLElement * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLElement_get_sourceIndex_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElement_get_recordNumber_Proxy( 
    IHTMLElement * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLElement_get_recordNumber_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLElement_put_lang_Proxy( 
    IHTMLElement * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLElement_put_lang_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElement_get_lang_Proxy( 
    IHTMLElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLElement_get_lang_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElement_get_offsetLeft_Proxy( 
    IHTMLElement * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLElement_get_offsetLeft_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElement_get_offsetTop_Proxy( 
    IHTMLElement * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLElement_get_offsetTop_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElement_get_offsetWidth_Proxy( 
    IHTMLElement * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLElement_get_offsetWidth_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElement_get_offsetHeight_Proxy( 
    IHTMLElement * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLElement_get_offsetHeight_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElement_get_offsetParent_Proxy( 
    IHTMLElement * This,
    /* [out][retval] */ IHTMLElement **p);


void __RPC_STUB IHTMLElement_get_offsetParent_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLElement_put_innerHTML_Proxy( 
    IHTMLElement * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLElement_put_innerHTML_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElement_get_innerHTML_Proxy( 
    IHTMLElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLElement_get_innerHTML_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLElement_put_innerText_Proxy( 
    IHTMLElement * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLElement_put_innerText_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElement_get_innerText_Proxy( 
    IHTMLElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLElement_get_innerText_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLElement_put_outerHTML_Proxy( 
    IHTMLElement * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLElement_put_outerHTML_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElement_get_outerHTML_Proxy( 
    IHTMLElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLElement_get_outerHTML_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLElement_put_outerText_Proxy( 
    IHTMLElement * This,
    /* [in] */ BSTR v);


void __RPC_STUB IHTMLElement_put_outerText_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElement_get_outerText_Proxy( 
    IHTMLElement * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLElement_get_outerText_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLElement_insertAdjacentHTML_Proxy( 
    IHTMLElement * This,
    /* [in] */ BSTR where,
    /* [in] */ BSTR html);


void __RPC_STUB IHTMLElement_insertAdjacentHTML_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLElement_insertAdjacentText_Proxy( 
    IHTMLElement * This,
    /* [in] */ BSTR where,
    /* [in] */ BSTR text);


void __RPC_STUB IHTMLElement_insertAdjacentText_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElement_get_parentTextEdit_Proxy( 
    IHTMLElement * This,
    /* [out][retval] */ IHTMLElement **p);


void __RPC_STUB IHTMLElement_get_parentTextEdit_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElement_get_isTextEdit_Proxy( 
    IHTMLElement * This,
    /* [out][retval] */ VARIANT_BOOL *p);


void __RPC_STUB IHTMLElement_get_isTextEdit_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLElement_click_Proxy( 
    IHTMLElement * This);


void __RPC_STUB IHTMLElement_click_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElement_get_filters_Proxy( 
    IHTMLElement * This,
    /* [out][retval] */ IHTMLFiltersCollection **p);


void __RPC_STUB IHTMLElement_get_filters_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLElement_put_ondragstart_Proxy( 
    IHTMLElement * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLElement_put_ondragstart_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElement_get_ondragstart_Proxy( 
    IHTMLElement * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLElement_get_ondragstart_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLElement_toString_Proxy( 
    IHTMLElement * This,
    /* [out][retval] */ BSTR *String);


void __RPC_STUB IHTMLElement_toString_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLElement_put_onbeforeupdate_Proxy( 
    IHTMLElement * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLElement_put_onbeforeupdate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElement_get_onbeforeupdate_Proxy( 
    IHTMLElement * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLElement_get_onbeforeupdate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLElement_put_onafterupdate_Proxy( 
    IHTMLElement * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLElement_put_onafterupdate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElement_get_onafterupdate_Proxy( 
    IHTMLElement * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLElement_get_onafterupdate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLElement_put_onerrorupdate_Proxy( 
    IHTMLElement * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLElement_put_onerrorupdate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElement_get_onerrorupdate_Proxy( 
    IHTMLElement * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLElement_get_onerrorupdate_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLElement_put_onrowexit_Proxy( 
    IHTMLElement * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLElement_put_onrowexit_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElement_get_onrowexit_Proxy( 
    IHTMLElement * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLElement_get_onrowexit_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLElement_put_onrowenter_Proxy( 
    IHTMLElement * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLElement_put_onrowenter_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElement_get_onrowenter_Proxy( 
    IHTMLElement * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLElement_get_onrowenter_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLElement_put_ondatasetchanged_Proxy( 
    IHTMLElement * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLElement_put_ondatasetchanged_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElement_get_ondatasetchanged_Proxy( 
    IHTMLElement * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLElement_get_ondatasetchanged_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLElement_put_ondataavailable_Proxy( 
    IHTMLElement * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLElement_put_ondataavailable_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElement_get_ondataavailable_Proxy( 
    IHTMLElement * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLElement_get_ondataavailable_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLElement_put_ondatasetcomplete_Proxy( 
    IHTMLElement * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLElement_put_ondatasetcomplete_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElement_get_ondatasetcomplete_Proxy( 
    IHTMLElement * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLElement_get_ondatasetcomplete_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLElement_put_onfilterchange_Proxy( 
    IHTMLElement * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLElement_put_onfilterchange_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [bindable][displaybind][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElement_get_onfilterchange_Proxy( 
    IHTMLElement * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLElement_get_onfilterchange_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElement_get_children_Proxy( 
    IHTMLElement * This,
    /* [out][retval] */ IDispatch **p);


void __RPC_STUB IHTMLElement_get_children_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLElement_get_all_Proxy( 
    IHTMLElement * This,
    /* [out][retval] */ IDispatch **p);


void __RPC_STUB IHTMLElement_get_all_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLElement_INTERFACE_DEFINED__ */


#ifndef __IHTMLRect_INTERFACE_DEFINED__
#define __IHTMLRect_INTERFACE_DEFINED__

/* interface IHTMLRect */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLRect;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f4a3-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLRect : public IDispatch
    {
    public:
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_left( 
            /* [in] */ long v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_left( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_top( 
            /* [in] */ long v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_top( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_right( 
            /* [in] */ long v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_right( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_bottom( 
            /* [in] */ long v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_bottom( 
            /* [out][retval] */ long *p) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLRectVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IHTMLRect * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IHTMLRect * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IHTMLRect * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IHTMLRect * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IHTMLRect * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IHTMLRect * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IHTMLRect * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_left )( 
            IHTMLRect * This,
            /* [in] */ long v);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_left )( 
            IHTMLRect * This,
            /* [out][retval] */ long *p);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_top )( 
            IHTMLRect * This,
            /* [in] */ long v);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_top )( 
            IHTMLRect * This,
            /* [out][retval] */ long *p);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_right )( 
            IHTMLRect * This,
            /* [in] */ long v);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_right )( 
            IHTMLRect * This,
            /* [out][retval] */ long *p);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_bottom )( 
            IHTMLRect * This,
            /* [in] */ long v);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_bottom )( 
            IHTMLRect * This,
            /* [out][retval] */ long *p);
        
        END_INTERFACE
    } IHTMLRectVtbl;

    interface IHTMLRect
    {
        CONST_VTBL struct IHTMLRectVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLRect_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IHTMLRect_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IHTMLRect_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IHTMLRect_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IHTMLRect_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IHTMLRect_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IHTMLRect_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IHTMLRect_put_left(This,v)	\
    (This)->lpVtbl -> put_left(This,v)

#define IHTMLRect_get_left(This,p)	\
    (This)->lpVtbl -> get_left(This,p)

#define IHTMLRect_put_top(This,v)	\
    (This)->lpVtbl -> put_top(This,v)

#define IHTMLRect_get_top(This,p)	\
    (This)->lpVtbl -> get_top(This,p)

#define IHTMLRect_put_right(This,v)	\
    (This)->lpVtbl -> put_right(This,v)

#define IHTMLRect_get_right(This,p)	\
    (This)->lpVtbl -> get_right(This,p)

#define IHTMLRect_put_bottom(This,v)	\
    (This)->lpVtbl -> put_bottom(This,v)

#define IHTMLRect_get_bottom(This,p)	\
    (This)->lpVtbl -> get_bottom(This,p)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRect_put_left_Proxy( 
    IHTMLRect * This,
    /* [in] */ long v);


void __RPC_STUB IHTMLRect_put_left_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRect_get_left_Proxy( 
    IHTMLRect * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLRect_get_left_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRect_put_top_Proxy( 
    IHTMLRect * This,
    /* [in] */ long v);


void __RPC_STUB IHTMLRect_put_top_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRect_get_top_Proxy( 
    IHTMLRect * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLRect_get_top_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRect_put_right_Proxy( 
    IHTMLRect * This,
    /* [in] */ long v);


void __RPC_STUB IHTMLRect_put_right_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRect_get_right_Proxy( 
    IHTMLRect * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLRect_get_right_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLRect_put_bottom_Proxy( 
    IHTMLRect * This,
    /* [in] */ long v);


void __RPC_STUB IHTMLRect_put_bottom_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRect_get_bottom_Proxy( 
    IHTMLRect * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLRect_get_bottom_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLRect_INTERFACE_DEFINED__ */


#ifndef __IHTMLRectCollection_INTERFACE_DEFINED__
#define __IHTMLRectCollection_INTERFACE_DEFINED__

/* interface IHTMLRectCollection */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLRectCollection;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f4a4-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLRectCollection : public IDispatch
    {
    public:
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_length( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [restricted][hidden][id][propget] */ HRESULT STDMETHODCALLTYPE get__newEnum( 
            /* [out][retval] */ IUnknown **p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE item( 
            /* [in] */ VARIANT *pvarIndex,
            /* [out][retval] */ VARIANT *pvarResult) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLRectCollectionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IHTMLRectCollection * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IHTMLRectCollection * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IHTMLRectCollection * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IHTMLRectCollection * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IHTMLRectCollection * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IHTMLRectCollection * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IHTMLRectCollection * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_length )( 
            IHTMLRectCollection * This,
            /* [out][retval] */ long *p);
        
        /* [restricted][hidden][id][propget] */ HRESULT ( STDMETHODCALLTYPE *get__newEnum )( 
            IHTMLRectCollection * This,
            /* [out][retval] */ IUnknown **p);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *item )( 
            IHTMLRectCollection * This,
            /* [in] */ VARIANT *pvarIndex,
            /* [out][retval] */ VARIANT *pvarResult);
        
        END_INTERFACE
    } IHTMLRectCollectionVtbl;

    interface IHTMLRectCollection
    {
        CONST_VTBL struct IHTMLRectCollectionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLRectCollection_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IHTMLRectCollection_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IHTMLRectCollection_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IHTMLRectCollection_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IHTMLRectCollection_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IHTMLRectCollection_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IHTMLRectCollection_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IHTMLRectCollection_get_length(This,p)	\
    (This)->lpVtbl -> get_length(This,p)

#define IHTMLRectCollection_get__newEnum(This,p)	\
    (This)->lpVtbl -> get__newEnum(This,p)

#define IHTMLRectCollection_item(This,pvarIndex,pvarResult)	\
    (This)->lpVtbl -> item(This,pvarIndex,pvarResult)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRectCollection_get_length_Proxy( 
    IHTMLRectCollection * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLRectCollection_get_length_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [restricted][hidden][id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLRectCollection_get__newEnum_Proxy( 
    IHTMLRectCollection * This,
    /* [out][retval] */ IUnknown **p);


void __RPC_STUB IHTMLRectCollection_get__newEnum_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLRectCollection_item_Proxy( 
    IHTMLRectCollection * This,
    /* [in] */ VARIANT *pvarIndex,
    /* [out][retval] */ VARIANT *pvarResult);


void __RPC_STUB IHTMLRectCollection_item_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLRectCollection_INTERFACE_DEFINED__ */


#ifndef __IHTMLDOMNode_INTERFACE_DEFINED__
#define __IHTMLDOMNode_INTERFACE_DEFINED__

/* interface IHTMLDOMNode */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLDOMNode;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f5da-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLDOMNode : public IDispatch
    {
    public:
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_nodeType( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_parentNode( 
            /* [out][retval] */ IHTMLDOMNode **p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE hasChildNodes( 
            /* [out][retval] */ VARIANT_BOOL *fChildren) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_childNodes( 
            /* [out][retval] */ IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_attributes( 
            /* [out][retval] */ IDispatch **p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE insertBefore( 
            /* [in] */ IHTMLDOMNode *newChild,
            /* [in][optional] */ VARIANT refChild,
            /* [out][retval] */ IHTMLDOMNode **node) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE removeChild( 
            /* [in] */ IHTMLDOMNode *oldChild,
            /* [out][retval] */ IHTMLDOMNode **node) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE replaceChild( 
            /* [in] */ IHTMLDOMNode *newChild,
            /* [in] */ IHTMLDOMNode *oldChild,
            /* [out][retval] */ IHTMLDOMNode **node) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE cloneNode( 
            /* [in] */ VARIANT_BOOL fDeep,
            /* [out][retval] */ IHTMLDOMNode **clonedNode) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE removeNode( 
            /* [in][defaultvalue] */ VARIANT_BOOL fDeep,
            /* [out][retval] */ IHTMLDOMNode **removed) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE swapNode( 
            /* [in] */ IHTMLDOMNode *otherNode,
            /* [out][retval] */ IHTMLDOMNode **swappedNode) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE replaceNode( 
            /* [in] */ IHTMLDOMNode *replacement,
            /* [out][retval] */ IHTMLDOMNode **replaced) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE appendChild( 
            /* [in] */ IHTMLDOMNode *newChild,
            /* [out][retval] */ IHTMLDOMNode **node) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_nodeName( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_nodeValue( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_nodeValue( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_firstChild( 
            /* [out][retval] */ IHTMLDOMNode **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_lastChild( 
            /* [out][retval] */ IHTMLDOMNode **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_previousSibling( 
            /* [out][retval] */ IHTMLDOMNode **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_nextSibling( 
            /* [out][retval] */ IHTMLDOMNode **p) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLDOMNodeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IHTMLDOMNode * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IHTMLDOMNode * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IHTMLDOMNode * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IHTMLDOMNode * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IHTMLDOMNode * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IHTMLDOMNode * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IHTMLDOMNode * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_nodeType )( 
            IHTMLDOMNode * This,
            /* [out][retval] */ long *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_parentNode )( 
            IHTMLDOMNode * This,
            /* [out][retval] */ IHTMLDOMNode **p);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *hasChildNodes )( 
            IHTMLDOMNode * This,
            /* [out][retval] */ VARIANT_BOOL *fChildren);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_childNodes )( 
            IHTMLDOMNode * This,
            /* [out][retval] */ IDispatch **p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_attributes )( 
            IHTMLDOMNode * This,
            /* [out][retval] */ IDispatch **p);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *insertBefore )( 
            IHTMLDOMNode * This,
            /* [in] */ IHTMLDOMNode *newChild,
            /* [in][optional] */ VARIANT refChild,
            /* [out][retval] */ IHTMLDOMNode **node);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *removeChild )( 
            IHTMLDOMNode * This,
            /* [in] */ IHTMLDOMNode *oldChild,
            /* [out][retval] */ IHTMLDOMNode **node);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *replaceChild )( 
            IHTMLDOMNode * This,
            /* [in] */ IHTMLDOMNode *newChild,
            /* [in] */ IHTMLDOMNode *oldChild,
            /* [out][retval] */ IHTMLDOMNode **node);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *cloneNode )( 
            IHTMLDOMNode * This,
            /* [in] */ VARIANT_BOOL fDeep,
            /* [out][retval] */ IHTMLDOMNode **clonedNode);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *removeNode )( 
            IHTMLDOMNode * This,
            /* [in][defaultvalue] */ VARIANT_BOOL fDeep,
            /* [out][retval] */ IHTMLDOMNode **removed);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *swapNode )( 
            IHTMLDOMNode * This,
            /* [in] */ IHTMLDOMNode *otherNode,
            /* [out][retval] */ IHTMLDOMNode **swappedNode);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *replaceNode )( 
            IHTMLDOMNode * This,
            /* [in] */ IHTMLDOMNode *replacement,
            /* [out][retval] */ IHTMLDOMNode **replaced);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *appendChild )( 
            IHTMLDOMNode * This,
            /* [in] */ IHTMLDOMNode *newChild,
            /* [out][retval] */ IHTMLDOMNode **node);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_nodeName )( 
            IHTMLDOMNode * This,
            /* [out][retval] */ BSTR *p);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_nodeValue )( 
            IHTMLDOMNode * This,
            /* [in] */ VARIANT v);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_nodeValue )( 
            IHTMLDOMNode * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_firstChild )( 
            IHTMLDOMNode * This,
            /* [out][retval] */ IHTMLDOMNode **p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_lastChild )( 
            IHTMLDOMNode * This,
            /* [out][retval] */ IHTMLDOMNode **p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_previousSibling )( 
            IHTMLDOMNode * This,
            /* [out][retval] */ IHTMLDOMNode **p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_nextSibling )( 
            IHTMLDOMNode * This,
            /* [out][retval] */ IHTMLDOMNode **p);
        
        END_INTERFACE
    } IHTMLDOMNodeVtbl;

    interface IHTMLDOMNode
    {
        CONST_VTBL struct IHTMLDOMNodeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLDOMNode_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IHTMLDOMNode_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IHTMLDOMNode_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IHTMLDOMNode_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IHTMLDOMNode_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IHTMLDOMNode_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IHTMLDOMNode_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IHTMLDOMNode_get_nodeType(This,p)	\
    (This)->lpVtbl -> get_nodeType(This,p)

#define IHTMLDOMNode_get_parentNode(This,p)	\
    (This)->lpVtbl -> get_parentNode(This,p)

#define IHTMLDOMNode_hasChildNodes(This,fChildren)	\
    (This)->lpVtbl -> hasChildNodes(This,fChildren)

#define IHTMLDOMNode_get_childNodes(This,p)	\
    (This)->lpVtbl -> get_childNodes(This,p)

#define IHTMLDOMNode_get_attributes(This,p)	\
    (This)->lpVtbl -> get_attributes(This,p)

#define IHTMLDOMNode_insertBefore(This,newChild,refChild,node)	\
    (This)->lpVtbl -> insertBefore(This,newChild,refChild,node)

#define IHTMLDOMNode_removeChild(This,oldChild,node)	\
    (This)->lpVtbl -> removeChild(This,oldChild,node)

#define IHTMLDOMNode_replaceChild(This,newChild,oldChild,node)	\
    (This)->lpVtbl -> replaceChild(This,newChild,oldChild,node)

#define IHTMLDOMNode_cloneNode(This,fDeep,clonedNode)	\
    (This)->lpVtbl -> cloneNode(This,fDeep,clonedNode)

#define IHTMLDOMNode_removeNode(This,fDeep,removed)	\
    (This)->lpVtbl -> removeNode(This,fDeep,removed)

#define IHTMLDOMNode_swapNode(This,otherNode,swappedNode)	\
    (This)->lpVtbl -> swapNode(This,otherNode,swappedNode)

#define IHTMLDOMNode_replaceNode(This,replacement,replaced)	\
    (This)->lpVtbl -> replaceNode(This,replacement,replaced)

#define IHTMLDOMNode_appendChild(This,newChild,node)	\
    (This)->lpVtbl -> appendChild(This,newChild,node)

#define IHTMLDOMNode_get_nodeName(This,p)	\
    (This)->lpVtbl -> get_nodeName(This,p)

#define IHTMLDOMNode_put_nodeValue(This,v)	\
    (This)->lpVtbl -> put_nodeValue(This,v)

#define IHTMLDOMNode_get_nodeValue(This,p)	\
    (This)->lpVtbl -> get_nodeValue(This,p)

#define IHTMLDOMNode_get_firstChild(This,p)	\
    (This)->lpVtbl -> get_firstChild(This,p)

#define IHTMLDOMNode_get_lastChild(This,p)	\
    (This)->lpVtbl -> get_lastChild(This,p)

#define IHTMLDOMNode_get_previousSibling(This,p)	\
    (This)->lpVtbl -> get_previousSibling(This,p)

#define IHTMLDOMNode_get_nextSibling(This,p)	\
    (This)->lpVtbl -> get_nextSibling(This,p)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDOMNode_get_nodeType_Proxy( 
    IHTMLDOMNode * This,
    /* [out][retval] */ long *p);


void __RPC_STUB IHTMLDOMNode_get_nodeType_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDOMNode_get_parentNode_Proxy( 
    IHTMLDOMNode * This,
    /* [out][retval] */ IHTMLDOMNode **p);


void __RPC_STUB IHTMLDOMNode_get_parentNode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLDOMNode_hasChildNodes_Proxy( 
    IHTMLDOMNode * This,
    /* [out][retval] */ VARIANT_BOOL *fChildren);


void __RPC_STUB IHTMLDOMNode_hasChildNodes_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDOMNode_get_childNodes_Proxy( 
    IHTMLDOMNode * This,
    /* [out][retval] */ IDispatch **p);


void __RPC_STUB IHTMLDOMNode_get_childNodes_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDOMNode_get_attributes_Proxy( 
    IHTMLDOMNode * This,
    /* [out][retval] */ IDispatch **p);


void __RPC_STUB IHTMLDOMNode_get_attributes_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLDOMNode_insertBefore_Proxy( 
    IHTMLDOMNode * This,
    /* [in] */ IHTMLDOMNode *newChild,
    /* [in][optional] */ VARIANT refChild,
    /* [out][retval] */ IHTMLDOMNode **node);


void __RPC_STUB IHTMLDOMNode_insertBefore_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLDOMNode_removeChild_Proxy( 
    IHTMLDOMNode * This,
    /* [in] */ IHTMLDOMNode *oldChild,
    /* [out][retval] */ IHTMLDOMNode **node);


void __RPC_STUB IHTMLDOMNode_removeChild_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLDOMNode_replaceChild_Proxy( 
    IHTMLDOMNode * This,
    /* [in] */ IHTMLDOMNode *newChild,
    /* [in] */ IHTMLDOMNode *oldChild,
    /* [out][retval] */ IHTMLDOMNode **node);


void __RPC_STUB IHTMLDOMNode_replaceChild_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLDOMNode_cloneNode_Proxy( 
    IHTMLDOMNode * This,
    /* [in] */ VARIANT_BOOL fDeep,
    /* [out][retval] */ IHTMLDOMNode **clonedNode);


void __RPC_STUB IHTMLDOMNode_cloneNode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLDOMNode_removeNode_Proxy( 
    IHTMLDOMNode * This,
    /* [in][defaultvalue] */ VARIANT_BOOL fDeep,
    /* [out][retval] */ IHTMLDOMNode **removed);


void __RPC_STUB IHTMLDOMNode_removeNode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLDOMNode_swapNode_Proxy( 
    IHTMLDOMNode * This,
    /* [in] */ IHTMLDOMNode *otherNode,
    /* [out][retval] */ IHTMLDOMNode **swappedNode);


void __RPC_STUB IHTMLDOMNode_swapNode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLDOMNode_replaceNode_Proxy( 
    IHTMLDOMNode * This,
    /* [in] */ IHTMLDOMNode *replacement,
    /* [out][retval] */ IHTMLDOMNode **replaced);


void __RPC_STUB IHTMLDOMNode_replaceNode_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id] */ HRESULT STDMETHODCALLTYPE IHTMLDOMNode_appendChild_Proxy( 
    IHTMLDOMNode * This,
    /* [in] */ IHTMLDOMNode *newChild,
    /* [out][retval] */ IHTMLDOMNode **node);


void __RPC_STUB IHTMLDOMNode_appendChild_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDOMNode_get_nodeName_Proxy( 
    IHTMLDOMNode * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLDOMNode_get_nodeName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLDOMNode_put_nodeValue_Proxy( 
    IHTMLDOMNode * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLDOMNode_put_nodeValue_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDOMNode_get_nodeValue_Proxy( 
    IHTMLDOMNode * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLDOMNode_get_nodeValue_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDOMNode_get_firstChild_Proxy( 
    IHTMLDOMNode * This,
    /* [out][retval] */ IHTMLDOMNode **p);


void __RPC_STUB IHTMLDOMNode_get_firstChild_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDOMNode_get_lastChild_Proxy( 
    IHTMLDOMNode * This,
    /* [out][retval] */ IHTMLDOMNode **p);


void __RPC_STUB IHTMLDOMNode_get_lastChild_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDOMNode_get_previousSibling_Proxy( 
    IHTMLDOMNode * This,
    /* [out][retval] */ IHTMLDOMNode **p);


void __RPC_STUB IHTMLDOMNode_get_previousSibling_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDOMNode_get_nextSibling_Proxy( 
    IHTMLDOMNode * This,
    /* [out][retval] */ IHTMLDOMNode **p);


void __RPC_STUB IHTMLDOMNode_get_nextSibling_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLDOMNode_INTERFACE_DEFINED__ */


#ifndef __IHTMLDOMNode2_INTERFACE_DEFINED__
#define __IHTMLDOMNode2_INTERFACE_DEFINED__

/* interface IHTMLDOMNode2 */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLDOMNode2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f80b-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLDOMNode2 : public IDispatch
    {
    public:
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_ownerDocument( 
            /* [out][retval] */ IDispatch **p) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLDOMNode2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IHTMLDOMNode2 * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IHTMLDOMNode2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IHTMLDOMNode2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IHTMLDOMNode2 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IHTMLDOMNode2 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IHTMLDOMNode2 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IHTMLDOMNode2 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ownerDocument )( 
            IHTMLDOMNode2 * This,
            /* [out][retval] */ IDispatch **p);
        
        END_INTERFACE
    } IHTMLDOMNode2Vtbl;

    interface IHTMLDOMNode2
    {
        CONST_VTBL struct IHTMLDOMNode2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLDOMNode2_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IHTMLDOMNode2_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IHTMLDOMNode2_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IHTMLDOMNode2_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IHTMLDOMNode2_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IHTMLDOMNode2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IHTMLDOMNode2_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IHTMLDOMNode2_get_ownerDocument(This,p)	\
    (This)->lpVtbl -> get_ownerDocument(This,p)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDOMNode2_get_ownerDocument_Proxy( 
    IHTMLDOMNode2 * This,
    /* [out][retval] */ IDispatch **p);


void __RPC_STUB IHTMLDOMNode2_get_ownerDocument_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLDOMNode2_INTERFACE_DEFINED__ */


#ifndef __IHTMLDOMAttribute_INTERFACE_DEFINED__
#define __IHTMLDOMAttribute_INTERFACE_DEFINED__

/* interface IHTMLDOMAttribute */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLDOMAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f4b0-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLDOMAttribute : public IDispatch
    {
    public:
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_nodeName( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_nodeValue( 
            /* [in] */ VARIANT v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_nodeValue( 
            /* [out][retval] */ VARIANT *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_specified( 
            /* [out][retval] */ VARIANT_BOOL *p) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLDOMAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IHTMLDOMAttribute * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IHTMLDOMAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IHTMLDOMAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IHTMLDOMAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IHTMLDOMAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IHTMLDOMAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IHTMLDOMAttribute * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_nodeName )( 
            IHTMLDOMAttribute * This,
            /* [out][retval] */ BSTR *p);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_nodeValue )( 
            IHTMLDOMAttribute * This,
            /* [in] */ VARIANT v);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_nodeValue )( 
            IHTMLDOMAttribute * This,
            /* [out][retval] */ VARIANT *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_specified )( 
            IHTMLDOMAttribute * This,
            /* [out][retval] */ VARIANT_BOOL *p);
        
        END_INTERFACE
    } IHTMLDOMAttributeVtbl;

    interface IHTMLDOMAttribute
    {
        CONST_VTBL struct IHTMLDOMAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHTMLDOMAttribute_QueryInterface(This,riid,ppvObject)	\
    (This)->lpVtbl -> QueryInterface(This,riid,ppvObject)

#define IHTMLDOMAttribute_AddRef(This)	\
    (This)->lpVtbl -> AddRef(This)

#define IHTMLDOMAttribute_Release(This)	\
    (This)->lpVtbl -> Release(This)


#define IHTMLDOMAttribute_GetTypeInfoCount(This,pctinfo)	\
    (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo)

#define IHTMLDOMAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo)

#define IHTMLDOMAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)

#define IHTMLDOMAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)


#define IHTMLDOMAttribute_get_nodeName(This,p)	\
    (This)->lpVtbl -> get_nodeName(This,p)

#define IHTMLDOMAttribute_put_nodeValue(This,v)	\
    (This)->lpVtbl -> put_nodeValue(This,v)

#define IHTMLDOMAttribute_get_nodeValue(This,p)	\
    (This)->lpVtbl -> get_nodeValue(This,p)

#define IHTMLDOMAttribute_get_specified(This,p)	\
    (This)->lpVtbl -> get_specified(This,p)

#endif /* COBJMACROS */


#endif 	/* C style interface */



/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDOMAttribute_get_nodeName_Proxy( 
    IHTMLDOMAttribute * This,
    /* [out][retval] */ BSTR *p);


void __RPC_STUB IHTMLDOMAttribute_get_nodeName_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propput] */ HRESULT STDMETHODCALLTYPE IHTMLDOMAttribute_put_nodeValue_Proxy( 
    IHTMLDOMAttribute * This,
    /* [in] */ VARIANT v);


void __RPC_STUB IHTMLDOMAttribute_put_nodeValue_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDOMAttribute_get_nodeValue_Proxy( 
    IHTMLDOMAttribute * This,
    /* [out][retval] */ VARIANT *p);


void __RPC_STUB IHTMLDOMAttribute_get_nodeValue_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);


/* [id][propget] */ HRESULT STDMETHODCALLTYPE IHTMLDOMAttribute_get_specified_Proxy( 
    IHTMLDOMAttribute * This,
    /* [out][retval] */ VARIANT_BOOL *p);


void __RPC_STUB IHTMLDOMAttribute_get_specified_Stub(
    IRpcStubBuffer *This,
    IRpcChannelBuffer *_pRpcChannelBuffer,
    PRPC_MESSAGE _pRpcMessage,
    DWORD *_pdwStubPhase);



#endif 	/* __IHTMLDOMAttribute_INTERFACE_DEFINED__ */


#ifndef __IHTMLDOMAttribute2_INTERFACE_DEFINED__
#define __IHTMLDOMAttribute2_INTERFACE_DEFINED__

/* interface IHTMLDOMAttribute2 */
/* [object][uuid][dual][oleautomation] */ 


EXTERN_C const IID IID_IHTMLDOMAttribute2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3050f810-98b5-11cf-bb82-00aa00bdce0b")
    IHTMLDOMAttribute2 : public IDispatch
    {
    public:
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_name( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propput] */ HRESULT STDMETHODCALLTYPE put_value( 
            /* [in] */ BSTR v) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_value( 
            /* [out][retval] */ BSTR *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_expando( 
            /* [out][retval] */ VARIANT_BOOL *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_nodeType( 
            /* [out][retval] */ long *p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_parentNode( 
            /* [out][retval] */ IHTMLDOMNode **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_childNodes( 
            /* [out][retval] */ IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_firstChild( 
            /* [out][retval] */ IHTMLDOMNode **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_lastChild( 
            /* [out][retval] */ IHTMLDOMNode **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_previousSibling( 
            /* [out][retval] */ IHTMLDOMNode **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_nextSibling( 
            /* [out][retval] */ IHTMLDOMNode **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_attributes( 
            /* [out][retval] */ IDispatch **p) = 0;
        
        virtual /* [id][propget] */ HRESULT STDMETHODCALLTYPE get_ownerDocument( 
            /* [out][retval] */ IDispatch **p) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE insertBefore( 
            /* [in] */ IHTMLDOMNode *newChild,
            /* [in][optional] */ VARIANT refChild,
            /* [out][retval] */ IHTMLDOMNode **node) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE replaceChild( 
            /* [in] */ IHTMLDOMNode *newChild,
            /* [in] */ IHTMLDOMNode *oldChild,
            /* [out][retval] */ IHTMLDOMNode **node) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE removeChild( 
            /* [in] */ IHTMLDOMNode *oldChild,
            /* [out][retval] */ IHTMLDOMNode **node) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE appendChild( 
            /* [in] */ IHTMLDOMNode *newChild,
            /* [out][retval] */ IHTMLDOMNode **node) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE hasChildNodes( 
            /* [out][retval] */ VARIANT_BOOL *fChildren) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE cloneNode( 
            /* [in] */ VARIANT_BOOL fDeep,
            /* [out][retval] */ IHTMLDOMAttribute **clonedNode) = 0;
        
    };
    
#else 	/* C style interface */

    typedef struct IHTMLDOMAttribute2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IHTMLDOMAttribute2 * This,
            /* [in] */ REFIID riid,
            /* [iid_is][out] */ void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IHTMLDOMAttribute2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IHTMLDOMAttribute2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IHTMLDOMAttribute2 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IHTMLDOMAttribute2 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IHTMLDOMAttribute2 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IHTMLDOMAttribute2 * This,
            /* [in] */ DISPID dispIdMember,
            /* [in] */ REFIID riid,
            /* [in] */ LCID lcid,
            /* [in] */ WORD wFlags,
            /* [out][in] */ DISPPARAMS *pDispParams,
            /* [out] */ VARIANT *pVarResult,
            /* [out] */ EXCEPINFO *pExcepInfo,
            /* [out] */ UINT *puArgErr);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_name )( 
            IHTMLDOMAttribute2 * This,
            /* [out][retval] */ BSTR *p);
        
        /* [id][propput] */ HRESULT ( STDMETHODCALLTYPE *put_value )( 
            IHTMLDOMAttribute2 * This,
            /* [in] */ BSTR v);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_value )( 
            IHTMLDOMAttribute2 * This,
            /* [out][retval] */ BSTR *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_expando )( 
            IHTMLDOMAttribute2 * This,
            /* [out][retval] */ VARIANT_BOOL *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_nodeType )( 
            IHTMLDOMAttribute2 * This,
            /* [out][retval] */ long *p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_parentNode )( 
            IHTMLDOMAttribute2 * This,
            /* [out][retval] */ IHTMLDOMNode **p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_childNodes )( 
            IHTMLDOMAttribute2 * This,
            /* [out][retval] */ IDispatch **p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_firstChild )( 
            IHTMLDOMAttribute2 * This,
            /* [out][retval] */ IHTMLDOMNode **p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_lastChild )( 
            IHTMLDOMAttribute2 * This,
            /* [out][retval] */ IHTMLDOMNode **p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_previousSibling )( 
            IHTMLDOMAttribute2 * This,
            /* [out][retval] */ IHTMLDOMNode **p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_nextSibling )( 
            IHTMLDOMAttribute2 * This,
            /* [out][retval] */ IHTMLDOMNode **p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_attributes )( 
            IHTMLDOMAttribute2 * This,
            /* [out][retval] */ IDispatch **p);
        
        /* [id][propget] */ HRESULT ( STDMETHODCALLTYPE *get_ownerDocument )( 
            IHTMLDOMAttribute2 * This,
            /* [out][retval] */ IDispatch **p);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *insertBefore )( 
            IHTMLDOMAttribute2 * This,
            /* [in] */ IHTMLDOMNode *newChild,
            /* [in][optional] */ VARIANT refChild,
            /* [out][retval] */ IHTMLDOMNode **node);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *replaceChild )( 
            IHTMLDOMAttribute2 * This,
            /* [in] */ IHTMLDOMNode *newChild,
            /* [in] */ IHTMLDOMNode *oldChild,
            /* [out][retval] */ IHTMLDOMNode **node);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *removeChild )( 
            IHTMLDOMAttribute2 * 