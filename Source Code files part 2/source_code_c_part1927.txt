PFLUSH_ENABLED      0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_6_ROP_PASS_ROPFLUSH_INIT         0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_6_ROP_CBUF_DRAIN                        5:5 /* RWIVF */
#define NV_PGRAPH_DEBUG_6_ROP_CBUF_DRAIN_DISABLED        0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_6_ROP_CBUF_DRAIN_ENABLED         0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_6_ROP_CBUF_DRAIN_INIT            0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_6_ROP_CBUF_HIGHWATER                    9:6 /* RWIVF */
#define NV_PGRAPH_DEBUG_6_ROP_CBUF_HIGHWATER_0           0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_6_ROP_CBUF_HIGHWATER_INIT        0x00000004 /* RW--V */
#define NV_PGRAPH_DEBUG_6_ROP_CBUF_HIGHWATER_FULL        0x00000008 /* RW--V */
#define NV_PGRAPH_DEBUG_6_ROP_CBUF_HIGHWATER2                 13:10 /* RWIVF */
#define NV_PGRAPH_DEBUG_6_ROP_CBUF_HIGHWATER2_0          0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_6_ROP_CBUF_HIGHWATER2_INIT       0x00000004 /* RW--V */
#define NV_PGRAPH_DEBUG_6_ROP_CBUF_HIGHWATER2_FULL       0x00000008 /* RW--V */
#define NV_PGRAPH_DEBUG_6_ROP_COALESCE_3D                     14:14 /* RWIVF */
#define NV_PGRAPH_DEBUG_6_ROP_COALESCE_3D_DISABLED       0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_6_ROP_COALESCE_3D_ENABLED        0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_6_ROP_COALESCE_3D_INIT           0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_6_ROP_COALESCE_2D                     15:15 /* RWIVF */
#define NV_PGRAPH_DEBUG_6_ROP_COALESCE_2D_DISABLED       0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_6_ROP_COALESCE_2D_ENABLED        0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_6_ROP_COALESCE_2D_INIT           0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_6_ROP_FIXED_ADRS                      16:16 /* RWIVF */
#define NV_PGRAPH_DEBUG_6_ROP_FIXED_ADRS_DISABLED        0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_6_ROP_FIXED_ADRS_ENABLED         0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_6_ROP_FIXED_ADRS_INIT            0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_6_ROP_FAST_KEEP_DST                   17:17 /* RWIVF */
#define NV_PGRAPH_DEBUG_6_ROP_FAST_KEEP_DST_DISABLED     0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_6_ROP_FAST_KEEP_DST_ENABLED      0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_6_ROP_FAST_KEEP_DST_INIT         0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_6_ROP_FORCE_CREAD                     18:18 /* RWIVF */
#define NV_PGRAPH_DEBUG_6_ROP_FORCE_CREAD_DISABLED       0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_6_ROP_FORCE_CREAD_ENABLED        0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_6_ROP_FORCE_CREAD_INIT           0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_6_ROP_ALLOW_3D_SKIP_READ               19:19 /* RWIVF */
#define NV_PGRAPH_DEBUG_6_ROP_ALLOW_3D_SKIP_READ_ENABLED  0x00000001 /* RWI-V */
#define NV_PGRAPH_DEBUG_6_ROP_ALLOW_3D_SKIP_READ_DISABLED 0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_6_ROP_ALLOW_3D_SKIP_READ_INIT     0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_6_ROP_ZCMP_ALWAYS_READ                20:20 /* RWIVF */
#define NV_PGRAPH_DEBUG_6_ROP_ZCMP_ALWAYS_READ_ENABLED   0x00000001 /* RWI-V */
#define NV_PGRAPH_DEBUG_6_ROP_ZCMP_ALWAYS_READ_DISABLED  0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_6_ROP_ZCMP_ALWAYS_READ_INIT      0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_6_ROP_ZCOMPRESS_EN                    21:21 /* RWIVF */
#define NV_PGRAPH_DEBUG_6_ROP_ZCOMPRESS_EN_DISABLED      0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_6_ROP_ZCOMPRESS_EN_ENABLED       0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_6_ROP_ZCOMPRESS_EN_INIT          0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_6_ROP_BURST_CREADS                    22:22 /* RWIVF */
#define NV_PGRAPH_DEBUG_6_ROP_BURST_CREADS_DISABLED      0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_6_ROP_BURST_CREADS_ENABLED       0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_6_ROP_BURST_CREADS_INIT          0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_6_ROP_BURST_CWRITES                   23:23 /* RWIVF */
#define NV_PGRAPH_DEBUG_6_ROP_BURST_CWRITES_DISABLED     0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_6_ROP_BURST_CWRITES_ENABLED      0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_6_ROP_BURST_CWRITES_INIT         0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_6_ROP_AUTO_INIT                       24:24 /* RWIVF */
#define NV_PGRAPH_DEBUG_6_ROP_AUTO_INIT_DISABLED         0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_6_ROP_AUTO_INIT_ENABLED          0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_6_ROP_AUTO_INIT_INIT             0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_6_ROP_HASH_TEST1                      25:25 /* RWIVF */
#define NV_PGRAPH_DEBUG_6_ROP_HASH_TEST1_DISABLED        0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_6_ROP_HASH_TEST1_ENABLED         0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_6_ROP_HASH_TEST1_INIT            0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_6_ROP_INTERLOCK                       26:26 /* RWIVF */
#define NV_PGRAPH_DEBUG_6_ROP_INTERLOCK_DISABLED         0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_6_ROP_INTERLOCK_ENABLED          0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_6_ROP_INTERLOCK_INIT             0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_6_ROP_ZREAD                           28:27 /* RWIVF */
#define NV_PGRAPH_DEBUG_6_ROP_ZREAD_NORMAL               0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_6_ROP_ZREAD_FORCE_ZREAD          0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_6_ROP_ZREAD_FORCE_NO_ZREAD       0x00000002 /* RW--V */
#define NV_PGRAPH_DEBUG_6_ROP_ZREAD_INIT                 0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_6_ROP_ZCULL_DATA                      29:29 /* RWIVF */
#define NV_PGRAPH_DEBUG_6_ROP_ZCULL_DATA_USE             0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_6_ROP_ZCULL_DATA_DISCARD         0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_6_ROP_ZCULL_DATA_INIT            0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_6_ROP_CROP_SWALLOW                    30:30 /* RWIVF */
#define NV_PGRAPH_DEBUG_6_ROP_CROP_SWALLOW_DISABLED      0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_6_ROP_CROP_SWALLOW_ENABLED       0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_6_ROP_CROP_SWALLOW_INIT          0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_6_SPARE_BIT31                         31:31 /* RWIVF */
#define NV_PGRAPH_DEBUG_6_SPARE_BIT31_DISABLED           0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_6_SPARE_BIT31_ENABLED            0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_6_SPARE_BIT31_INIT               0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_6_BITS                                 31:0 /* RWIUF */
#define NV_PGRAPH_DEBUG_6_BITS_DISABLED                  0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_7                                0x00400b84 /* RW-4R */
#define NV_PGRAPH_DEBUG_7_ROP_INIT_ZRD_TMSTAMP                  0:0 /* RWIVF */
#define NV_PGRAPH_DEBUG_7_ROP_INIT_ZRD_TMSTAMP_DEFAULT   0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_7_ROP_INIT_ZRD_TMSTAMP_INIT      0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_7_ROP_ZCULL_NO_STALE                    1:1 /* RWIVF */
#define NV_PGRAPH_DEBUG_7_ROP_ZCULL_NO_STALE_ENABLE      0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_7_ROP_ZCULL_NO_STALE_DISABLE     0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_7_ROP_ZCULL_NO_STALE_INIT        0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_7_ROP_ZROP_INTERLOCK                    2:2 /* RWIVF */
#define NV_PGRAPH_DEBUG_7_ROP_ZROP_INTERLOCK_ENABLE      0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_7_ROP_ZROP_INTERLOCK_DISABLE     0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_7_ROP_ZROP_INTERLOCK_INIT        0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_FORCE_VISIBLE                 3:3 /* RWIVF */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_FORCE_VISIBLE_ENABLE   0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_FORCE_VISIBLE_DISABLE  0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_FORCE_VISIBLE_INIT     0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_PURGE_PER_PKT                 4:4 /* RWIVF */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_PURGE_PER_PKT_ENABLE   0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_PURGE_PER_PKT_DISABLE  0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_PURGE_PER_PKT_INIT     0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_FORCE_NO_16BYTE_WR            5:5 /* RWIVF */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_FORCE_NO_16BYTE_WR_ENABLE     0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_FORCE_NO_16BYTE_WR_DISABLE    0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_FORCE_NO_16BYTE_WR_INIT       0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_FORCE_FSTCLR_EXPAND           6:6 /* RWIVF */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_FORCE_FSTCLR_EXPAND_ENABLE    0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_FORCE_FSTCLR_EXPAND_DISABLE   0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_FORCE_FSTCLR_EXPAND_INIT      0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_FORCE_NO_RMW_DISABLE          7:7 /* RWIVF */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_FORCE_NO_RMW_DISABLE_ENABLE   0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_FORCE_NO_RMW_DISABLE_DISABLE  0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_FORCE_NO_RMW_DISABLE_INIT     0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_INHIBIT_COMPRESS              8:8 /* RWIVF */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_INHIBIT_COMPRESS_ENABLE       0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_INHIBIT_COMPRESS_DISABLE      0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_INHIBIT_COMPRESS_INIT  0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_CMPR_FULL_BE_ONLY             9:9 /* RWIVF */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_CMPR_FULL_BE_ONLY_ENABLE      0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_CMPR_FULL_BE_ONLY_DISABLE     0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_CMPR_FULL_BE_ONLY_INIT 0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_ALWAYS_WR_STENCIL           10:10 /* RWIVF */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_ALWAYS_WR_STENCIL_ENABLE      0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_ALWAYS_WR_STENCIL_DISABLE     0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_ALWAYS_WR_STENCIL_INIT        0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_INHIBIT_SKIP_WR_EQ          11:11 /* RWIVF */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_INHIBIT_SKIP_WR_EQ_ENABLE     0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_INHIBIT_SKIP_WR_EQ_DISABLE    0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_INHIBIT_SKIP_WR_EQ_INIT       0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_SELECTPM                    13:12 /* RWIVF */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_SELECTPM_NORMAL        0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_SELECTPM_PKTRF_STALL   0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_SELECTPM_CMPR_STALL    0x00000002 /* RW--V */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_SELECTPM_TAGREL_STALL  0x00000003 /* RW--V */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_SELECTPM_INIT          0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_EXTRA1                      14:14 /* RWIVF */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_EXTRA1_ENABLE          0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_EXTRA1_DISABLE         0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_EXTRA1_INIT            0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_EXTRA2                      15:15 /* RWIVF */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_EXTRA2_ENABLE          0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_EXTRA2_DISABLE         0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_EXTRA2_INIT            0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_EXTRA3                      16:16 /* RWIVF */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_EXTRA3_ENABLE          0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_EXTRA3_DISABLE         0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_EXTRA3_INIT            0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_7_ROP_CROP_SELECTPM                   18:17 /* RWIVF */
#define NV_PGRAPH_DEBUG_7_ROP_CROP_SELECTPM_GRP3         0x00000002 /* RW--V */
#define NV_PGRAPH_DEBUG_7_ROP_CROP_SELECTPM_GRP2         0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_7_ROP_CROP_SELECTPM_GRP1         0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_7_ROP_CROP_SELECTPM_INIT         0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_EXTRA4                      19:19 /* RWIVF */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_EXTRA4_ENABLE          0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_EXTRA4_DISABLE         0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_7_ROP_ZWR_EXTRA4_INIT            0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_7_ROP_ZRD_HASH_TAGS                   24:20 /* RWIVF */
#define NV_PGRAPH_DEBUG_7_ROP_ZRD_HASH_TAGS_01           0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_7_ROP_ZRD_HASH_TAGS_INIT         0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_7_ROP_CROP_BLIT_HASH                  25:25 /* RWIVF */
#define NV_PGRAPH_DEBUG_7_ROP_CROP_BLIT_HASH_ENABLE      0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_7_ROP_CROP_BLIT_HASH_DISABLE     0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_7_ROP_CROP_BLIT_HASH_INIT        0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_7_ROP_ZROP_RAISE_PRI                  26:26 /* RWIVF */
#define NV_PGRAPH_DEBUG_7_ROP_ZROP_RAISE_PRI_ENABLE      0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_7_ROP_ZROP_RAISE_PRI_DISABLE     0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_7_ROP_ZROP_RAISE_PRI_INIT        0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_7_ROP_ZRD_EXTRA0                      27:27 /* RWIVF */
#define NV_PGRAPH_DEBUG_7_ROP_ZRD_EXTRA0_ENABLE          0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_7_ROP_ZRD_EXTRA0_DISABLE         0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_7_ROP_ZRD_EXTRA0_INIT            0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_7_ROP_ZRD_EXTRA1                      28:28 /* RWIVF */
#define NV_PGRAPH_DEBUG_7_ROP_ZRD_EXTRA1_ENABLE          0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_7_ROP_ZRD_EXTRA1_DISABLE         0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_7_ROP_ZRD_EXTRA1_INIT            0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_7_ROP_CROP_RAISE_PRI                  29:29 /* RWIVF */
#define NV_PGRAPH_DEBUG_7_ROP_CROP_RAISE_PRI_ENABLE      0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_7_ROP_CROP_RAISE_PRI_DISABLE     0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_7_ROP_CROP_RAISE_PRI_INIT        0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_7_ROP_TC_SELECT_REQ                   30:30 /* RWIVF */
#define NV_PGRAPH_DEBUG_7_ROP_TC_SELECT_REQ_PIPEID       0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_7_ROP_TC_SELECT_REQ_BANK         0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_7_ROP_TC_SELECT_REQ_INIT         0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_7_SPARE                               31:31 /* RWIUF */
#define NV_PGRAPH_DEBUG_7_BITS                                 31:0 /* RWIUF */
#define NV_PGRAPH_DEBUG_7_BITS_DISABLED                  0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_8                                0x00400098 /* RW-4R */
#define NV_PGRAPH_DEBUG_8_SHADER_FIFO_WATERMARK                 9:0 /* RWIVF */
#define NV_PGRAPH_DEBUG_8_SHADER_FIFO_WATERMARK_64       0x00000040 /* RWI-V */
#define NV_PGRAPH_DEBUG_8_SHADER_FIFO_WATERMARK_INIT     0x00000040 /* RW--V */
#define NV_PGRAPH_DEBUG_8_SHADER_FIFOP1_WATERMARK             19:10 /* RWIVF */
#define NV_PGRAPH_DEBUG_8_SHADER_FIFOP1_WATERMARK_0      0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_8_SHADER_FIFOP1_WATERMARK_INIT   0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_8_SHADER_FIFO_DEBUG                   20:20 /* RWIVF */
#define NV_PGRAPH_DEBUG_8_SHADER_FIFO_DEBUG_DISABLE      0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_8_SHADER_FIFO_DEBUG_ENABLE       0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_8_SHADER_FIFO_DEBUG_INIT         0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_8_SHADER_FIFOP1_DEBUG                 21:21 /* RWIVF */
#define NV_PGRAPH_DEBUG_8_SHADER_FIFOP1_DEBUG_DISABLE    0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_8_SHADER_FIFOP1_DEBUG_ENABLE     0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_8_SHADER_FIFOP1_DEBUG_INIT       0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_8_SHADER_FOG_LINE_CLAMP               30:30 /* RWIVF */
#define NV_PGRAPH_DEBUG_8_SHADER_FOG_LINE_CLAMP_DISABLE  0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_8_SHADER_FOG_LINE_CLAMP_ENABLE   0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_8_SHADER_FOG_LINE_CLAMP_INIT     0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_8_COMBINER_NEG_TEXTURE                31:31 /* RWIVF */
#define NV_PGRAPH_DEBUG_8_COMBINER_NEG_TEXTURE_ENABLE    0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_8_COMBINER_NEG_TEXTURE_DISABLE   0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_8_COMBINER_NEG_TEXTURE_INIT      0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_8_SHADER_SPARE                        31:10 /* RWIVF */
#define NV_PGRAPH_DEBUG_8_SHADER_SPARE_DISABLED          0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_9                                0x0040009C /* RW-4R */
#define NV_PGRAPH_DEBUG_9_BEGIN_PATCH0_CHECK                    0:0 /* RWIVF */
#define NV_PGRAPH_DEBUG_9_BEGIN_PATCH0_CHECK_ENABLE      0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_9_BEGIN_PATCH0_CHECK_DISABLE     0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_9_BEGIN_PATCH0_CHECK_INIT        0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_9_BEGIN_PATCH1_CHECK                    1:1 /* RWIVF */
#define NV_PGRAPH_DEBUG_9_BEGIN_PATCH1_CHECK_ENABLE      0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_9_BEGIN_PATCH1_CHECK_DISABLE     0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_9_BEGIN_PATCH1_CHECK_INIT        0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_9_BEGIN_PATCH2_CHECK                    2:2 /* RWIVF */
#define NV_PGRAPH_DEBUG_9_BEGIN_PATCH2_CHECK_ENABLE      0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_9_BEGIN_PATCH2_CHECK_DISABLE     0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_9_BEGIN_PATCH2_CHECK_INIT        0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_9_BEGIN_PATCH3_CHECK                    3:3 /* RWIVF */
#define NV_PGRAPH_DEBUG_9_BEGIN_PATCH3_CHECK_ENABLE      0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_9_BEGIN_PATCH3_CHECK_DISABLE     0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_9_BEGIN_PATCH3_CHECK_INIT        0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_9_END_PATCH_CHECK                       4:4 /* RWIVF */
#define NV_PGRAPH_DEBUG_9_END_PATCH_CHECK_ENABLE         0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_9_END_PATCH_CHECK_DISABLE        0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_9_END_PATCH_CHECK_INIT           0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_9_BEGIN_END_SWATCH_CHECK                5:5 /* RWIVF */
#define NV_PGRAPH_DEBUG_9_BEGIN_END_SWATCH_CHECK_ENABLE  0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_9_BEGIN_END_SWATCH_CHECK_DISABLE 0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_9_BEGIN_END_SWATCH_CHECK_INIT    0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_9_BEGIN_END_CURVE_CHECK                 6:6 /* RWIVF */
#define NV_PGRAPH_DEBUG_9_BEGIN_END_CURVE_CHECK_ENABLE   0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_9_BEGIN_END_CURVE_CHECK_DISABLE  0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_9_BEGIN_END_CURVE_CHECK_INIT     0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_9_CURVE_COEFF_CHECK                     7:7 /* RWIVF */
#define NV_PGRAPH_DEBUG_9_CURVE_COEFF_CHECK_ENABLE       0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_9_CURVE_COEFF_CHECK_DISABLE      0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_9_CURVE_COEFF_CHECK_INIT         0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_9_BEGIN_TRANS0_CHECK                    8:8 /* RWIVF */
#define NV_PGRAPH_DEBUG_9_BEGIN_TRANS0_CHECK_ENABLE      0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_9_BEGIN_TRANS0_CHECK_DISABLE     0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_9_BEGIN_TRANS0_CHECK_INIT        0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_9_BEGIN_TRANS1_CHECK                    9:9 /* RWIVF */
#define NV_PGRAPH_DEBUG_9_BEGIN_TRANS1_CHECK_ENABLE      0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_9_BEGIN_TRANS1_CHECK_DISABLE     0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_9_BEGIN_TRANS1_CHECK_INIT        0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_9_BEGIN_TRANS2_CHECK                  10:10 /* RWIVF */
#define NV_PGRAPH_DEBUG_9_BEGIN_TRANS2_CHECK_ENABLE      0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_9_BEGIN_TRANS2_CHECK_DISABLE     0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_9_BEGIN_TRANS2_CHECK_INIT        0x00000000 /* RW--V */
#define NV_PGRAPH_DEBUG_9_END_TRANSITION_CHECK                11:11 /* RWIVF */
#define NV_PGRAPH_DEBUG_9_END_TRANSITION_CHECK_ENABLE    0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_9_END_TRANSITION_CHECK_DISABLE   0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_9_END_TRANSITION_CHECK_INIT      0x00000000 /* RW--V */
#define NV_PGRAPH_NSTATUS                                0x00400104 /* RW-4R */
#define NV_PGRAPH_NSTATUS_STATE_IN_USE                        23:23 /* RWIVF */
#define NV_PGRAPH_NSTATUS_STATE_IN_USE_NOT_PENDING       0x00000000 /* RWI-V */
#define NV_PGRAPH_NSTATUS_STATE_IN_USE_PENDING           0x00000001 /* RW--V */
#define NV_PGRAPH_NSTATUS_INVALID_STATE                       24:24 /* RWIVF */
#define NV_PGRAPH_NSTATUS_INVALID_STATE_NOT_PENDING      0x00000000 /* RWI-V */
#define NV_PGRAPH_NSTATUS_INVALID_STATE_PENDING          0x00000001 /* RW--V */
#define NV_PGRAPH_NSTATUS_BAD_ARGUMENT                        25:25 /* RWIVF */
#define NV_PGRAPH_NSTATUS_BAD_ARGUMENT_NOT_PENDING       0x00000000 /* RWI-V */
#define NV_PGRAPH_NSTATUS_BAD_ARGUMENT_PENDING           0x00000001 /* RW--V */
#define NV_PGRAPH_NSTATUS_PROTECTION_FAULT                    26:26 /* RWIVF */
#define NV_PGRAPH_NSTATUS_PROTECTION_FAULT_NOT_PENDING   0x00000000 /* RWI-V */
#define NV_PGRAPH_NSTATUS_PROTECTION_FAULT_PENDING       0x00000001 /* RW--V */
#define NV_PGRAPH_CTX_CONTROL                            0x00400144 /* RW-4R */
#define NV_PGRAPH_CTX_CONTROL_MINIMUM_TIME                      1:0 /* RWIVF */
#define NV_PGRAPH_CTX_CONTROL_MINIMUM_TIME_33US          0x00000000 /* RWI-V */
#define NV_PGRAPH_CTX_CONTROL_MINIMUM_TIME_262US         0x00000001 /* RW--V */
#define NV_PGRAPH_CTX_CONTROL_MINIMUM_TIME_2MS           0x00000002 /* RW--V */
#define NV_PGRAPH_CTX_CONTROL_MINIMUM_TIME_17MS          0x00000003 /* RW--V */
#define NV_PGRAPH_CTX_CONTROL_TIME                              8:8 /* RWIVF */
#define NV_PGRAPH_CTX_CONTROL_TIME_EXPIRED               0x00000000 /* RWI-V */
#define NV_PGRAPH_CTX_CONTROL_TIME_NOT_EXPIRED           0x00000001 /* RW--V */
#define NV_PGRAPH_CTX_CONTROL_CHID                            16:16 /* RWIVF */
#define NV_PGRAPH_CTX_CONTROL_CHID_INVALID               0x00000000 /* RWI-V */
#define NV_PGRAPH_CTX_CONTROL_CHID_VALID                 0x00000001 /* RW--V */
#define NV_PGRAPH_CTX_CONTROL_CHANGE                          20:20 /* R--VF */
#define NV_PGRAPH_CTX_CONTROL_CHANGE_UNAVAILABLE         0x00000000 /* R---V */
#define NV_PGRAPH_CTX_CONTROL_CHANGE_AVAILABLE           0x00000001 /* R---V */
#define NV_PGRAPH_CTX_CONTROL_SWITCHING                       24:24 /* RWIVF */
#define NV_PGRAPH_CTX_CONTROL_SWITCHING_IDLE             0x00000000 /* RWI-V */
#define NV_PGRAPH_CTX_CONTROL_SWITCHING_BUSY             0x00000001 /* RW--V */
#define NV_PGRAPH_CTX_CONTROL_DEVICE                          28:28 /* RWIVF */
#define NV_PGRAPH_CTX_CONTROL_DEVICE_DISABLED            0x00000000 /* RWI-V */
#define NV_PGRAPH_CTX_CONTROL_DEVICE_ENABLED             0x00000001 /* RW--V */
#define NV_PGRAPH_CTX_USER                               0x00400148 /* RW-4R */
#define NV_PGRAPH_CTX_USER_CHANNEL_3D                           0:0 /* RWIVF */
#define NV_PGRAPH_CTX_USER_CHANNEL_3D_FALSE              0x00000000 /* RWI-V */
#define NV_PGRAPH_CTX_USER_CHANNEL_3D_TRUE               0x00000001 /* RWI-V */
#define NV_PGRAPH_CTX_USER_CHANNEL_3D_VALID                     4:4 /* RWIVF */
#define NV_PGRAPH_CTX_USER_CHANNEL_3D_VALID_FALSE        0x00000000 /* RWI-V */
#define NV_PGRAPH_CTX_USER_CHANNEL_3D_VALID_TRUE         0x00000001 /* RWI-V */
#define NV_PGRAPH_CTX_USER_CHANNEL_3D_ID                       12:8 /* RWIVF */
#define NV_PGRAPH_CTX_USER_CHANNEL_3D_ID_0               0x00000000 /* RWI-V */
#define NV_PGRAPH_CTX_USER_SUBCH                              15:13 /* RWIVF */
#define NV_PGRAPH_CTX_USER_SUBCH_0                       0x00000000 /* RWI-V */
#define NV_PGRAPH_CTX_USER_CHID                               28:24 /* RWIVF */
#define NV_PGRAPH_CTX_USER_CHID_0                        0x00000000 /* RWI-V */
#define NV_PGRAPH_CTX_USER_SINGLE_STEP                        31:31 /* RWIVF */
#define NV_PGRAPH_CTX_USER_SINGLE_STEP_DISABLED          0x00000000 /* RWI-V */
#define NV_PGRAPH_CTX_USER_SINGLE_STEP_ENABLED           0x00000001 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1                            0x0040014C /* RW-4R */
#define NV_PGRAPH_CTX_SWITCH1_GRCLASS                           7:0 /* RWXVF */
#define NV_PGRAPH_CTX_SWITCH1_CHROMA_KEY                      12:12 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH1_CHROMA_KEY_DISABLE         0x00000000 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_CHROMA_KEY_ENABLE          0x00000001 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_USER_CLIP                       13:13 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH1_USER_CLIP_DISABLE          0x00000000 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_USER_CLIP_ENABLE           0x00000001 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_SWIZZLE                         14:14 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH1_SWIZZLE_DISABLE            0x00000000 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_SWIZZLE_ENABLE             0x00000001 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_PATCH_CONFIG                    17:15 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH1_PATCH_CONFIG_SRCCOPY_AND   0x00000000 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_PATCH_CONFIG_ROP_AND       0x00000001 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_PATCH_CONFIG_BLEND_AND     0x00000002 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_PATCH_CONFIG_SRCCOPY       0x00000003 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_PATCH_CONFIG_SRCCOPY_PRE   0x00000004 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_PATCH_CONFIG_BLEND_PRE     0x00000005 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_SYNCHRONIZE                     18:18 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH1_SYNCHRONIZE_DISABLE        0x00000000 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_SYNCHRONIZE_ENABLE         0x00000001 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_ENDIAN_MODE                     19:19 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH1_ENDIAN_MODE_LITTLE         0x00000000 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_ENDIAN_MODE_BIG            0x00000001 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_DITHER_MODE                     21:20 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH1_DITHER_MODE_COMPATIBILITY  0x00000000 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_DITHER_MODE_DITHER         0x00000001 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_DITHER_MODE_TRUNCATE       0x00000002 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_DITHER_MODE_MS             0x00000003 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_CLASS_TYPE                      22:22 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH1_CLASS_TYPE_COMPATIBILITY   0x00000000 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_CLASS_TYPE_PERFORMANCE     0x00000001 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_SINGLE_STEP                     23:23 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH1_SINGLE_STEP_DISABLED       0x00000000 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_SINGLE_STEP_ENABLED        0x00000001 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_PATCH_STATUS                    24:24 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH1_PATCH_STATUS_INVALID       0x00000000 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_PATCH_STATUS_VALID         0x00000001 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_CONTEXT_SURFACE0                25:25 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH1_CONTEXT_SURFACE0_INVALID   0x00000000 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_CONTEXT_SURFACE0_VALID     0x00000001 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_CONTEXT_SURFACE1                26:26 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH1_CONTEXT_SURFACE1_INVALID   0x00000000 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_CONTEXT_SURFACE1_VALID     0x00000001 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_CONTEXT_PATTERN                 27:27 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH1_CONTEXT_PATTERN_INVALID    0x00000000 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_CONTEXT_PATTERN_VALID      0x00000001 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_CONTEXT_ROP                     28:28 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH1_CONTEXT_ROP_INVALID        0x00000000 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_CONTEXT_ROP_VALID          0x00000001 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_CONTEXT_BETA1                   29:29 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH1_CONTEXT_BETA1_INVALID      0x00000000 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_CONTEXT_BETA1_VALID        0x00000001 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_CONTEXT_BETA4                   30:30 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH1_CONTEXT_BETA4_INVALID      0x00000000 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_CONTEXT_BETA4_VALID        0x00000001 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_VOLATILE_RESET                  31:31 /* CWIVF */
#define NV_PGRAPH_CTX_SWITCH1_VOLATILE_RESET_IGNORE      0x00000000 /* CWI-V */
#define NV_PGRAPH_CTX_SWITCH1_VOLATILE_RESET_ENABLED     0x00000001 /* -W--T */
#define NV_PGRAPH_CTX_SWITCH2                            0x00400150 /* RW-4R */
#define NV_PGRAPH_CTX_SWITCH2_MONO_FORMAT                       1:0 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH2_MONO_FORMAT_INVALID              0x00 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_MONO_FORMAT_CGA6_M1              0x01 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_MONO_FORMAT_LE_M1                0x02 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT                     13:8 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_INVALID             0x00 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_Y8               0x01 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_X16A8Y8          0x02 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_X24Y8            0x03 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_A1R5G5B5         0x06 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_X1R5G5B5         0x07 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_X16A1R5G5B5      0x08 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_X17R5G5B5        0x09 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_R5G6B5           0x0A /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_A16R5G6B5        0x0B /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_X16R5G6B5        0x0C /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_A8R8G8B8         0x0D /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_X8R8G8B8         0x0E /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_Y16              0x0F /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_A16Y16           0x10 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_X16Y16           0x11 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_V8YB8U8YA8       0x12 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_YB8V8YA8U8       0x13 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_Y32              0x14 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_AY8              0x15 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_EYB8ECR8EYA8ECB8 0x16 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_ECR8EYB8ECB8EYA8 0x17 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_NOTIFY_INSTANCE                 31:16 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH2_NOTIFY_INSTANCE_INVALID        0x0000 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH3                            0x00400154 /* RW-4R */
#define NV_PGRAPH_CTX_SWITCH3_DMA_INSTANCE_0                   15:0 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH3_DMA_INSTANCE_0_INVALID         0x0000 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH3_DMA_INSTANCE_1                  31:16 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH3_DMA_INSTANCE_1_INVALID         0x0000 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH4                            0x00400158 /* RW-4R */
#define NV_PGRAPH_CTX_SWITCH4_USER_INSTANCE                    15:0 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH4_USER_INSTANCE_INVALID          0x0000 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH5                            0x0040015C /* RW-4R */
#define NV_PGRAPH_CTX_SWITCH5_TRAP_BITS                        31:0 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH5_TRAP_BITS_DISABLED             0x0000 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1                            0x0040014C /* RW-4R */
#define NV_PGRAPH_CTX_SWITCH1_GRCLASS                           7:0 /* RWXVF */
#define NV_PGRAPH_CTX_SWITCH1_CHROMA_KEY                      12:12 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH1_CHROMA_KEY_DISABLE         0x00000000 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_CHROMA_KEY_ENABLE          0x00000001 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_USER_CLIP                       13:13 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH1_USER_CLIP_DISABLE          0x00000000 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_USER_CLIP_ENABLE           0x00000001 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_SWIZZLE                         14:14 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH1_SWIZZLE_DISABLE            0x00000000 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_SWIZZLE_ENABLE             0x00000001 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_PATCH_CONFIG                    17:15 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH1_PATCH_CONFIG_SRCCOPY_AND   0x00000000 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_PATCH_CONFIG_ROP_AND       0x00000001 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_PATCH_CONFIG_BLEND_AND     0x00000002 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_PATCH_CONFIG_SRCCOPY       0x00000003 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_PATCH_CONFIG_SRCCOPY_PRE   0x00000004 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_PATCH_CONFIG_BLEND_PRE     0x00000005 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_SYNCHRONIZE                     18:18 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH1_SYNCHRONIZE_DISABLE        0x00000000 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_SYNCHRONIZE_ENABLE         0x00000001 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_ENDIAN_MODE                     19:19 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH1_ENDIAN_MODE_LITTLE         0x00000000 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_ENDIAN_MODE_BIG            0x00000001 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_DITHER_MODE                     21:20 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH1_DITHER_MODE_COMPATIBILITY  0x00000000 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_DITHER_MODE_DITHER         0x00000001 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_DITHER_MODE_TRUNCATE       0x00000002 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_DITHER_MODE_MS             0x00000003 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_CLASS_TYPE                      22:22 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH1_CLASS_TYPE_COMPATIBILITY   0x00000000 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_CLASS_TYPE_PERFORMANCE     0x00000001 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_SINGLE_STEP                     23:23 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH1_SINGLE_STEP_DISABLED       0x00000000 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_SINGLE_STEP_ENABLED        0x00000001 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_PATCH_STATUS                    24:24 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH1_PATCH_STATUS_INVALID       0x00000000 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_PATCH_STATUS_VALID         0x00000001 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_CONTEXT_SURFACE0                25:25 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH1_CONTEXT_SURFACE0_INVALID   0x00000000 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_CONTEXT_SURFACE0_VALID     0x00000001 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_CONTEXT_SURFACE1                26:26 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH1_CONTEXT_SURFACE1_INVALID   0x00000000 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_CONTEXT_SURFACE1_VALID     0x00000001 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_CONTEXT_PATTERN                 27:27 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH1_CONTEXT_PATTERN_INVALID    0x00000000 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_CONTEXT_PATTERN_VALID      0x00000001 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_CONTEXT_ROP                     28:28 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH1_CONTEXT_ROP_INVALID        0x00000000 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_CONTEXT_ROP_VALID          0x00000001 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_CONTEXT_BETA1                   29:29 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH1_CONTEXT_BETA1_INVALID      0x00000000 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_CONTEXT_BETA1_VALID        0x00000001 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_CONTEXT_BETA4                   30:30 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH1_CONTEXT_BETA4_INVALID      0x00000000 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_CONTEXT_BETA4_VALID        0x00000001 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1_VOLATILE_RESET                  31:31 /* CWIVF */
#define NV_PGRAPH_CTX_SWITCH1_VOLATILE_RESET_IGNORE      0x00000000 /* CWI-V */
#define NV_PGRAPH_CTX_SWITCH1_VOLATILE_RESET_ENABLED     0x00000001 /* -W--T */
#define NV_PGRAPH_CTX_SWITCH2                            0x00400150 /* RW-4R */
#define NV_PGRAPH_CTX_SWITCH2_MONO_FORMAT                       1:0 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH2_MONO_FORMAT_INVALID              0x00 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_MONO_FORMAT_CGA6_M1              0x01 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_MONO_FORMAT_LE_M1                0x02 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT                     13:8 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_INVALID             0x00 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_Y8               0x01 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_X16A8Y8          0x02 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_X24Y8            0x03 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_A1R5G5B5         0x06 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_X1R5G5B5         0x07 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_X16A1R5G5B5      0x08 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_X17R5G5B5        0x09 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_R5G6B5           0x0A /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_A16R5G6B5        0x0B /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_X16R5G6B5        0x0C /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_A8R8G8B8         0x0D /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_X8R8G8B8         0x0E /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_Y16              0x0F /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_A16Y16           0x10 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_X16Y16           0x11 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_V8YB8U8YA8       0x12 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_YB8V8YA8U8       0x13 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_Y32              0x14 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_AY8              0x15 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_EYB8ECR8EYA8ECB8 0x16 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_ECR8EYB8ECB8EYA8 0x17 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_NOTIFY_INSTANCE                 31:16 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH2_NOTIFY_INSTANCE_INVALID        0x0000 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH3                            0x00400154 /* RW-4R */
#define NV_PGRAPH_CTX_SWITCH3_DMA_INSTANCE_0                   15:0 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH3_DMA_INSTANCE_0_INVALID         0x0000 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH3_DMA_INSTANCE_1                  31:16 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH3_DMA_INSTANCE_1_INVALID         0x0000 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH4                            0x00400158 /* RW-4R */
#define NV_PGRAPH_CTX_SWITCH4_USER_INSTANCE                    15:0 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH4_USER_INSTANCE_INVALID          0x0000 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH5                            0x0040015C /* RW-4R */
#define NV_PGRAPH_CTX_SWITCH5_TRAP_BITS                        31:0 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH5_TRAP_BITS_DISABLED             0x0000 /* RW--V */
#define NV_PGRAPH_CTX_CACHE1(i)                  (0x00400160+(i)*4) /* RW-4A */
#define NV_PGRAPH_CTX_CACHE1__SIZE_1                              8 /*       */
#define NV_PGRAPH_CTX_CACHE1_GRCLASS                            7:0 /* RWXVF */
#define NV_PGRAPH_CTX_CACHE1_CHROMA_KEY                       12:12 /* RWXVF */
#define NV_PGRAPH_CTX_CACHE1_USER_CLIP                        13:13 /* RWXVF */
#define NV_PGRAPH_CTX_CACHE1_SWIZZLE                          14:14 /* RWXVF */
#define NV_PGRAPH_CTX_CACHE1_PATCH_CONFIG                     17:15 /* RWXVF */
#define NV_PGRAPH_CTX_CACHE1_SYNCHRONIZE                      18:18 /* RWXUF */
#define NV_PGRAPH_CTX_CACHE1_ENDIAN_MODE                      19:19 /* RWXUF */
#define NV_PGRAPH_CTX_CACHE1_DITHER_MODE                      21:20 /* RWXVF */
#define NV_PGRAPH_CTX_CACHE1_CLASS_TYPE                       22:22 /* RWXVF */
#define NV_PGRAPH_CTX_CACHE1_SINGLE_STEP                      23:23 /* RWXVF */
#define NV_PGRAPH_CTX_CACHE1_PATCH_STATUS                     24:24 /* RWXVF */
#define NV_PGRAPH_CTX_CACHE1_CONTEXT_SURFACE0                 25:25 /* RWXVF */
#define NV_PGRAPH_CTX_CACHE1_CONTEXT_SURFACE1                 26:26 /* RWXVF */
#define NV_PGRAPH_CTX_CACHE1_CONTEXT_PATTERN                  27:27 /* RWXVF */
#define NV_PGRAPH_CTX_CACHE1_CONTEXT_ROP                      28:28 /* RWXVF */
#define NV_PGRAPH_CTX_CACHE1_CONTEXT_BETA1                    29:29 /* RWXVF */
#define NV_PGRAPH_CTX_CACHE1_CONTEXT_BETA4                    30:30 /* RWXVF */
#define NV_PGRAPH_CTX_CACHE2(i)                  (0x00400180+(i)*4) /* RW-4A */
#define NV_PGRAPH_CTX_CACHE2__SIZE_1                              8 /*       */
#define NV_PGRAPH_CTX_CACHE2_MONO_FORMAT                        1:0 /* RWXVF */
#define NV_PGRAPH_CTX_CACHE2_COLOR_FORMAT                      13:8 /* RWXVF */
#define NV_PGRAPH_CTX_CACHE2_NOTIFY_INSTANCE                  31:16 /* RWXVF */
#define NV_PGRAPH_CTX_CACHE3(i)                  (0x004001a0+(i)*4) /* RW-4A */
#define NV_PGRAPH_CTX_CACHE3__SIZE_1                              8 /*       */
#define NV_PGRAPH_CTX_CACHE3_DMA_INSTANCE_0                    15:0 /* RWXVF */
#define NV_PGRAPH_CTX_CACHE3_DMA_INSTANCE_1                   31:16 /* RWXVF */
#define NV_PGRAPH_CTX_CACHE4(i)                  (0x004001c0+(i)*4) /* RW-4A */
#define NV_PGRAPH_CTX_CACHE4__SIZE_1                              8 /*       */
#define NV_PGRAPH_CTX_CACHE4_USER_INSTANCE                     15:0 /* RWXVF */
#define NV_PGRAPH_CTX_CACHE5(i)                  (0x004001e0+(i)*4) /* RW-4A */
#define NV_PGRAPH_CTX_CACHE5__SIZE_1                              8 /*       */
#define NV_PGRAPH_CTX_CACHE5_TRAP_BITS                         31:0 /* RWXVF */
#define NV_PGRAPH_FFINTFC_FIFO_0(i)              (0x004007a0+(i)*4) /* RW-4A */
#define NV_PGRAPH_FFINTFC_FIFO_0__SIZE_1                          8 /*       */
#define NV_PGRAPH_FFINTFC_FIFO_0_MTHD                          12:2 /* RWXVF */
#define NV_PGRAPH_FFINTFC_FIFO_0_MTHD_CTX_SWITCH         0x00000000 /* RW--V */
#define NV_PGRAPH_FFINTFC_FIFO_0_SUBCH                        18:16 /* RWXVF */
#define NV_PGRAPH_FFINTFC_FIFO_0_SUBCH_0                 0x00000000 /* RW--V */
#define NV_PGRAPH_FFINTFC_FIFO_0_SUBCH_1                 0x00000001 /* RW--V */
#define NV_PGRAPH_FFINTFC_FIFO_0_SUBCH_2                 0x00000002 /* RW--V */
#define NV_PGRAPH_FFINTFC_FIFO_0_SUBCH_3                 0x00000003 /* RW--V */
#define NV_PGRAPH_FFINTFC_FIFO_0_SUBCH_4                 0x00000004 /* RW--V */
#define NV_PGRAPH_FFINTFC_FIFO_0_SUBCH_5                 0x00000005 /* RW--V */
#define NV_PGRAPH_FFINTFC_FIFO_0_SUBCH_6                 0x00000006 /* RW--V */
#define NV_PGRAPH_FFINTFC_FIFO_0_SUBCH_7                 0x00000007 /* RW--V */
#define NV_PGRAPH_FFINTFC_FIFO_0_CODE                         21:20 /* RWXVF */
#define NV_PGRAPH_FFINTFC_FIFO_0_CODE_DOUBLE_NONINCR     0x00000000 /* RW--V */
#define NV_PGRAPH_FFINTFC_FIFO_0_CODE_DOUBLE_INCR        0x00000001 /* RW--V */
#define NV_PGRAPH_FFINTFC_FIFO_0_CODE_SINGLE             0x00000002 /* RW--V */
#define NV_PGRAPH_FFINTFC_FIFO_0_CODE_CHSW               0x00000003 /* RW--V */
#define NV_PGRAPH_FFINTFC_FIFO_1(i)              (0x004007c0+(i)*4) /* RW-4A */
#define NV_PGRAPH_FFINTFC_FIFO_1__SIZE_1                          8 /*       */
#define NV_PGRAPH_FFINTFC_FIFO_1_ARGUMENT                      31:0 /* RWXVF */
#define NV_PGRAPH_FFINTFC_FIFO_2(i)              (0x004007e0+(i)*4) /* RW-4A */
#define NV_PGRAPH_FFINTFC_FIFO_2__SIZE_1                          8 /*       */
#define NV_PGRAPH_FFINTFC_FIFO_2_ARGUMENT                      31:0 /* RWXVF */
#define NV_PGRAPH_FFINTFC_FIFO_PTR                       0x00400760 /* RW-4R */
#define NV_PGRAPH_FFINTFC_FIFO_PTR_WRITE                        3:0 /* RWIVF */
#define NV_PGRAPH_FFINTFC_FIFO_PTR_WRITE_0               0x00000000 /* RWI-V */
#define NV_PGRAPH_FFINTFC_FIFO_PTR_READ                         7:4 /* RWIVF */
#define NV_PGRAPH_FFINTFC_FIFO_PTR_READ_0                0x00000000 /* RWI-V */
#define NV_PGRAPH_FFINTFC_ST2                            0x00400764 /* RW-4R */
#define NV_PGRAPH_FFINTFC_ST2_MTHD                             12:2 /* RWIVF */
#define NV_PGRAPH_FFINTFC_ST2_MTHD_CTX_SWITCH            0x00000000 /* RWI-V */
#define NV_PGRAPH_FFINTFC_ST2_SUBCH                           18:16 /* RWIVF */
#define NV_PGRAPH_FFINTFC_ST2_SUBCH_0                    0x00000000 /* RWI-V */
#define NV_PGRAPH_FFINTFC_ST2_SUBCH_1                    0x00000001 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_SUBCH_2                    0x00000002 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_SUBCH_3                    0x00000003 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_SUBCH_4                    0x00000004 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_SUBCH_5                    0x00000005 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_SUBCH_6                    0x00000006 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_SUBCH_7                    0x00000007 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID                            24:20 /* RWIVF */
#define NV_PGRAPH_FFINTFC_ST2_CHID_0                     0x00000000 /* RWI-V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_1                     0x00000001 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_2                     0x00000002 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_3                     0x00000003 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_4                     0x00000004 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_5                     0x00000005 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_6                     0x00000006 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_7                     0x00000007 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_8                     0x00000008 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_9                     0x00000009 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_10                    0x0000000A /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_11                    0x0000000B /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_12                    0x0000000C /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_13                    0x0000000D /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_14                    0x0000000E /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_15                    0x0000000F /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_16                    0x00000010 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_17                    0x00000011 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_18                    0x00000012 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_19                    0x00000013 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_20                    0x00000014 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_21                    0x00000015 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_22                    0x00000016 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_23                    0x00000017 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_24                    0x00000018 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_25                    0x00000019 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_26                    0x0000001A /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_27                    0x0000001B /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_28                    0x0000001C /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_29                    0x0000001D /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_30                    0x0000001E /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_31                    0x0000001F /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_DATAHIGH                        25:25 /* RWIVF */
#define NV_PGRAPH_FFINTFC_ST2_DATAHIGH_INVALID           0x00000000 /* RWI-V */
#define NV_PGRAPH_FFINTFC_ST2_DATAHIGH_VALID             0x00000001 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_STATUS                          26:26 /* RWIVF */
#define NV_PGRAPH_FFINTFC_ST2_STATUS_INVALID             0x00000000 /* RWI-V */
#define NV_PGRAPH_FFINTFC_ST2_STATUS_VALID               0x00000001 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_STATUS                     27:27 /* RWIVF */
#define NV_PGRAPH_FFINTFC_ST2_CHID_STATUS_INVALID        0x00000000 /* RWI-V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_STATUS_VALID          0x00000001 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHSWITCH                        28:28 /* RWIVF */
#define NV_PGRAPH_FFINTFC_ST2_CHSWITCH_CLEAR             0x00000000 /* RWI-V */
#define NV_PGRAPH_FFINTFC_ST2_CHSWITCH_SET               0x00000001 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_FIFOHOLD                        29:29 /* RWIVF */
#define NV_PGRAPH_FFINTFC_ST2_FIFOHOLD_CLEAR             0x00000000 /* RWI-V */
#define NV_PGRAPH_FFINTFC_ST2_FIFOHOLD_SET               0x00000001 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_MODE                            30:30 /* RWIVF */
#define NV_PGRAPH_FFINTFC_ST2_MODE_NONINCREMENTING       0x00000000 /* RWI-V */
#define NV_PGRAPH_FFINTFC_ST2_MODE_INCREMENTING          0x00000001 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_DL                         0x00400768 /* RW-4R */
#define NV_PGRAPH_FFINTFC_ST2_DL_ARGUMENT                      31:0 /* RWIVF */
#define NV_PGRAPH_FFINTFC_ST2_DL_ARGUMENT_0              0x00000000 /* RWI-V */
#define NV_PGRAPH_FFINTFC_ST2_DH                         0x0040076c /* RW-4R */
#define NV_PGRAPH_FFINTFC_ST2_DH_ARGUMENT                      31:0 /* RWIVF */
#define NV_PGRAPH_FFINTFC_ST2_DH_ARGUMENT_0              0x00000000 /* RWI-V */
#define NV_PGRAPH_STATUS                                 0x00400700 /* R--4R */
#define NV_PGRAPH_STATUS_STATE                                  0:0 /* R-IVF */
#define NV_PGRAPH_STATUS_STATE_IDLE                      0x00000000 /* R-I-V */
#define NV_PGRAPH_STATUS_STATE_BUSY                      0x00000001 /* R---V */
#define NV_PGRAPH_STATUS_FINE_RASTERIZER                        1:1 /* R-IVF */
#define NV_PGRAPH_STATUS_FINE_RASTERIZER_IDLE            0x00000000 /* R-I-V */
#define NV_PGRAPH_STATUS_FINE_RASTERIZER_BUSY            0x00000001 /* R---V */
#define NV_PGRAPH_STATUS_COARSE_RASTERIZER                      2:2 /* R-IVF */
#define NV_PGRAPH_STATUS_COARSE_RASTERIZER_IDLE          0x00000000 /* R-I-V */
#define NV_PGRAPH_STATUS_COARSE_RASTERIZER_BUSY          0x00000001 /* R---V */
#define NV_PGRAPH_STATUS_FE_3D                                  3:3 /* R-IVF */
#define NV_PGRAPH_STATUS_FE_3D_IDLE                      0x00000000 /* R-I-V */
#define NV_PGRAPH_STATUS_FE_3D_BUSY                      0x00000001 /* R---V */
#define NV_PGRAPH_STATUS_FE_2D                                  4:4 /* R-IVF */
#define NV_PGRAPH_STATUS_FE_2D_IDLE                      0x00000000 /* R-I-V */
#define NV_PGRAPH_STATUS_FE_2D_BUSY                      0x00000001 /* R---V */
#define NV_PGRAPH_STATUS_XY_LOGIC                               5:5 /* R-IVF */
#define NV_PGRAPH_STATUS_XY_LOGIC_IDLE                   0x00000000 /* R-I-V */
#define NV_PGRAPH_STATUS_XY_LOGIC_BUSY                   0x00000001 /* R---V */
#define NV_PGRAPH_STATUS_WAITCRTC                               6:6 /* R-IVF */
#define NV_PGRAPH_STATUS_WAITCRTC_IDLE                   0x00000000 /* R-I-V */
#define NV_PGRAPH_STATUS_WAITCRTC_BUSY                   0x00000001 /* R---V */
#define NV_PGRAPH_STATUS_RASTERIZER_2D                          7:7 /* R-IVF */
#define NV_PGRAPH_STATUS_RASTERIZER_2D_IDLE              0x00000000 /* R-I-V */
#define NV_PGRAPH_STATUS_RASTERIZER_2D_BUSY              0x00000001 /* R---V */
#define NV_PGRAPH_STATUS_IDX                                    8:8 /* R-IVF */
#define NV_PGRAPH_STATUS_IDX_IDLE                        0x00000000 /* R-I-V */
#define NV_PGRAPH_STATUS_IDX_BUSY                        0x00000001 /* R---V */
#define NV_PGRAPH_STATUS_XF                                     9:9 /* R-IVF */
#define NV_PGRAPH_STATUS_XF_IDLE                         0x00000000 /* R-I-V */
#define NV_PGRAPH_STATUS_XF_BUSY                         0x00000001 /* R---V */
#define NV_PGRAPH_STATUS_VTX                                  10:10 /* R-IVF */
#define NV_PGRAPH_STATUS_VTX_IDLE                        0x00000000 /* R-I-V */
#define NV_PGRAPH_STATUS_VTX_BUSY                        0x00000001 /* R---V */
#define NV_PGRAPH_STATUS_CAS                                  11:11 /* R-IVF */
#define NV_PGRAPH_STATUS_CAS_IDLE                        0x00000000 /* R-I-V */
#define NV_PGRAPH_STATUS_CAS_BUSY                        0x00000001 /* R---V */
#define NV_PGRAPH_STATUS_PORT_NOTIFY                          12:12 /* R-IVF */
#define NV_PGRAPH_STATUS_PORT_NOTIFY_IDLE                0x00000000 /* R-I-V */
#define NV_PGRAPH_STATUS_PORT_NOTIFY_BUSY                0x00000001 /* R---V */
#define NV_PGRAPH_STATUS_SHADER                               13:13 /* R-IVF */
#define NV_PGRAPH_STATUS_SHADER_IDLE                     0x00000000 /* R-I-V */
#define NV_PGRAPH_STATUS_SHADER_BUSY                     0x00000001 /* R---V */
#define NV_PGRAPH_STATUS_SHADER_BE                            14:14 /* R-IVF */
#define NV_PGRAPH_STATUS_SHADER_BE_IDLE                  0x00000000 /* R-I-V */
#define NV_PGRAPH_STATUS_SHADER_BE_BUSY                  0x00000001 /* R---V */
#define NV_PGRAPH_STATUS_PORT_DMA                             16:16 /* R-IVF */
#define NV_PGRAPH_STATUS_PORT_DMA_IDLE                   0x00000000 /* R-I-V */
#define NV_PGRAPH_STATUS_PORT_DMA_BUSY                   0x00000001 /* R---V */
#define NV_PGRAPH_STATUS_DMA_ENGINE                           17:17 /* R-IVF */
#define NV_PGRAPH_STATUS_DMA_ENGINE_IDLE                 0x00000000 /* R-I-V */
#define NV_PGRAPH_STATUS_DMA_ENGINE_BUSY                 0x00000001 /* R---V */
#define NV_PGRAPH_STATUS_DMA_NOTIFY                           20:20 /* R-IVF */
#define NV_PGRAPH_STATUS_DMA_NOTIFY_IDLE                 0x00000000 /* R-I-V */
#define NV_PGRAPH_STATUS_DMA_NOTIFY_BUSY                 0x00000001 /* R---V */
#define NV_PGRAPH_STATUS_DMA_BUFFER_NOTIFY                    21:21 /* R-IVF */
#define NV_PGRAPH_STATUS_DMA_BUFFER_NOTIFY_IDLE          0x00000000 /* R-I-V */
#define NV_PGRAPH_STATUS_DMA_BUFFER_NOTIFY_BUSY          0x00000001 /* R---V */
#define NV_PGRAPH_STATUS_DMA_WARNING_NOTIFY                   22:22 /* R-IVF */
#define NV_PGRAPH_STATUS_DMA_WARNING_NOTIFY_IDLE         0x00000000 /* R-I-V */
#define NV_PGRAPH_STATUS_DMA_WARNING_NOTIFY_BUSY         0x00000001 /* R---V */
#define NV_PGRAPH_STATUS_ZCULL                                23:23 /* R-IVF */
#define NV_PGRAPH_STATUS_ZCULL_IDLE                      0x00000000 /* R-I-V */
#define NV_PGRAPH_STATUS_ZCULL_BUSY                      0x00000001 /* R---V */
#define NV_PGRAPH_STATUS_FDIFF                                24:24 /* R-IVF */
#define NV_PGRAPH_STATUS_FDIFF_IDLE                      0x00000000 /* R-I-V */
#define NV_PGRAPH_STATUS_FDIFF_BUSY                      0x00000001 /* R---V */
#define NV_PGRAPH_STATUS_SETUP                                25:25 /* R-IVF */
#define NV_PGRAPH_STATUS_SETUP_IDLE                      0x00000000 /* R-I-V */
#define NV_PGRAPH_STATUS_SETUP_BUSY                      0x00000001 /* R---V */
#define NV_PGRAPH_STATUS_CACHE                                26:26 /* R-IVF */
#define NV_PGRAPH_STATUS_CACHE_IDLE                      0x00000000 /* R-I-V */
#define NV_PGRAPH_STATUS_CACHE_BUSY                      0x00000001 /* R---V */
#define NV_PGRAPH_STATUS_COMBINER                             27:27 /* R-IVF */
#define NV_PGRAPH_STATUS_COMBINER_IDLE                   0x00000000 /* R-I-V */
#define NV_PGRAPH_STATUS_COMBINER_BUSY                   0x00000001 /* R---V */
#define NV_PGRAPH_STATUS_PREROP                               28:28 /* R-IVF */
#define NV_PGRAPH_STATUS_PREROP_IDLE                     0x00000000 /* R-I-V */
#define NV_PGRAPH_STATUS_PREROP_BUSY                     0x00000001 /* R---V */
#define NV_PGRAPH_STATUS_ROP                                  29:29 /* R-IVF */
#define NV_PGRAPH_STATUS_ROP_IDLE                        0x00000000 /* R-I-V */
#define NV_PGRAPH_STATUS_ROP_BUSY                        0x00000001 /* R---V */
#define NV_PGRAPH_STATUS_PORT_USER                            30:30 /* R-IVF */
#define NV_PGRAPH_STATUS_PORT_USER_IDLE                  0x00000000 /* R-I-V */
#define NV_PGRAPH_STATUS_PORT_USER_BUSY                  0x00000001 /* R---V */
#define NV_PGRAPH_STATUS_PORT_FB                              31:31 /* R-IVF */
#define NV_PGRAPH_STATUS_PORT_FB_IDLE                    0x00000000 /* R-I-V */
#define NV_PGRAPH_STATUS_PORT_FB_BUSY                    0x00000001 /* R---V */
#define NV_PGRAPH_TRAPPED_ADDR                           0x00400704 /* R--4R */
#define NV_PGRAPH_TRAPPED_ADDR_MTHD                            12:2 /* R-XUF */
#define NV_PGRAPH_TRAPPED_ADDR_SUBCH                          18:16 /* R-XUF */
#define NV_PGRAPH_TRAPPED_ADDR_CHID                           24:20 /* R-XUF */
#define NV_PGRAPH_TRAPPED_ADDR_DHV                            28:28 /* R-XUF */
#define NV_PGRAPH_TRAPPED_DATA_LOW                       0x00400708 /* R--4R */
#define NV_PGRAPH_TRAPPED_DATA_LOW_VALUE                       31:0 /* R-XVF */
#define NV_PGRAPH_TRAPPED_DATA_HIGH                      0x0040070C /* R--4R */
#define NV_PGRAPH_TRAPPED_DATA_HIGH_VALUE                      31:0 /* R-XVF */
#define NV_PGRAPH_SURFACE                                0x00400710 /* RW-4R */
#define NV_PGRAPH_SURFACE_TYPE                                  1:0 /* RWIVF */
#define NV_PGRAPH_SURFACE_TYPE_INVALID                   0x00000000 /* RWI-V */
#define NV_PGRAPH_SURFACE_TYPE_NON_SWIZZLE               0x00000001 /* RW--V */
#define NV_PGRAPH_SURFACE_TYPE_SWIZZLE                   0x00000002 /* RW--V */
#define NV_PGRAPH_SURFACE_TYPE_056                       0x00000001 /* RWC-V */
#define NV_PGRAPH_SURFACE_TYPE_096                       0x00000001 /* RWC-V */
#define NV_PGRAPH_SURFACE_TYPE_097                       0x00000001 /* RWC-V */
#define NV_PGRAPH_SURFACE_ANTIALIASING                          5:4 /* RWIVF */
#define NV_PGRAPH_SURFACE_ANTIALIASING_CENTER_1          0x00000000 /* RWI-V */
#define NV_PGRAPH_SURFACE_ANTIALIASING_CENTER_CORNER_2   0x00000001 /* RW--V */
#define NV_PGRAPH_SURFACE_ANTIALIASING_SQUARE_OFFSET_4   0x00000002 /* RW--V */
#define NV_PGRAPH_SURFACE_ANTIALIASING_097               0x00000000 /* RWC-V */
#define NV_PGRAPH_SURFACE_WRITE_BLIT                           10:8 /* RWIVF */
#define NV_PGRAPH_SURFACE_WRITE_BLIT_0                   0x00000000 /* RWI-V */
#define NV_PGRAPH_SURFACE_WRITE_BLIT_09F                 0x00000000 /* RWC-V */
#define NV_PGRAPH_SURFACE_READ_BLIT                           14:12 /* RWIVF */
#define NV_PGRAPH_SURFACE_READ_BLIT_0                    0x00000000 /* RWI-V */
#define NV_PGRAPH_SURFACE_READ_BLIT_09F                  0x00000000 /* RWC-V */
#define NV_PGRAPH_SURFACE_MODULO_BLIT                         18:16 /* RWIVF */
#define NV_PGRAPH_SURFACE_MODULO_BLIT_0                  0x00000000 /* RWI-V */
#define NV_PGRAPH_SURFACE_MODULO_BLIT_09F                0x00000001 /* RWC-V */
#define NV_PGRAPH_SURFACE_WRITE_3D                            22:20 /* RWIVF */
#define NV_PGRAPH_SURFACE_WRITE_3D_0                     0x00000000 /* RWI-V */
#define NV_PGRAPH_SURFACE_WRITE_3D_056                   0x00000000 /* RWC-V */
#define NV_PGRAPH_SURFACE_WRITE_3D_096                   0x00000000 /* RWC-V */
#define NV_PGRAPH_SURFACE_WRITE_3D_097                   0x00000000 /* RWC-V */
#define NV_PGRAPH_SURFACE_READ_3D                             26:24 /* RWIVF */
#define NV_PGRAPH_SURFACE_READ_3D_0                      0x00000000 /* RWI-V */
#define NV_PGRAPH_SURFACE_READ_3D_056                    0x00000000 /* RWC-V */
#define NV_PGRAPH_SURFACE_READ_3D_096                    0x00000000 /* RWC-V */
#define NV_PGRAPH_SURFACE_READ_3D_097                    0x00000000 /* RWC-V */
#define NV_PGRAPH_SURFACE_MODULO_3D                           30:28 /* RWIVF */
#define NV_PGRAPH_SURFACE_MODULO_3D_0                    0x00000002 /* RWI-V */
#define NV_PGRAPH_SURFACE_MODULO_3D_056                  0x00000002 /* RWC-V */
#define NV_PGRAPH_SURFACE_MODULO_3D_096                  0x00000002 /* RWC-V */
#define NV_PGRAPH_SURFACE_MODULO_3D_097                  0x00000002 /* RWC-V */
#define NV_PGRAPH_INCREMENT                              0x0040071C /* RW-4R */
#define NV_PGRAPH_INCREMENT_READ_BLIT                           0:0 /* CWIVF */
#define NV_PGRAPH_INCREMENT_READ_BLIT_IGNORE             0x00000000 /* CWI-V */
#define NV_PGRAPH_INCREMENT_READ_BLIT_TRIGGER            0x00000001 /* -W--T */
#define NV_PGRAPH_INCREMENT_READ_3D                             1:1 /* CWIVF */
#define NV_PGRAPH_INCREMENT_READ_3D_IGNORE               0x00000000 /* CWI-V */
#define NV_PGRAPH_INCREMENT_READ_3D_TRIGGER              0x00000001 /* -W--T */
#define NV_PGRAPH_NOTIFY                                 0x00400718 /* RW-4R */
#define NV_PGRAPH_NOTIFY_BUFFER_REQ                             0:0 /* RWIVF */
#define NV_PGRAPH_NOTIFY_BUFFER_REQ_NOT_PENDING          0x00000000 /* RWI-V */
#define NV_PGRAPH_NOTIFY_BUFFER_REQ_PENDING              0x00000001 /* RW--V */
#define NV_PGRAPH_NOTIFY_BUFFER_STYLE                           8:8 /* RWIVF */
#define NV_PGRAPH_NOTIFY_BUFFER_STYLE_WRITE_ONLY         0x00000000 /* RWI-V */
#define NV_PGRAPH_NOTIFY_BUFFER_STYLE_WRITE_THEN_AWAKEN  0x00000001 /* RW--V */
#define NV_PGRAPH_NOTIFY_REQ                                  16:16 /* RWIVF */
#define NV_PGRAPH_NOTIFY_REQ_NOT_PENDING                 0x00000000 /* RWI-V */
#define NV_PGRAPH_NOTIFY_REQ_PENDING                     0x00000001 /* RW--V */
#define NV_PGRAPH_NOTIFY_STYLE                                20:20 /* RWIVF */
#define NV_PGRAPH_NOTIFY_STYLE_WRITE_ONLY                0x00000000 /* RWI-V */
#define NV_PGRAPH_NOTIFY_STYLE_WRITE_THEN_AWAKEN         0x00000001 /* RW--V */
#define NV_PGRAPH_NOTIFY_WARNING_REQ                          24:24 /* RWIVF */
#define NV_PGRAPH_NOTIFY_WARNING_REQ_NOT_PENDING         0x00000000 /* RWI-V */
#define NV_PGRAPH_NOTIFY_WARNING_REQ_PENDING             0x00000001 /* RW--V */
#define NV_PGRAPH_NOTIFY_WARNING_STYLE                        25:25 /* RWIVF */
#define NV_PGRAPH_NOTIFY_WARNING_STYLE_WRITE_ONLY        0x00000000 /* RWI-V */
#define NV_PGRAPH_NOTIFY_WARNING_STYLE_WRITE_THEN_AWAKEN 0x00000001 /* RW--V */
#define NV_PGRAPH_NOTIFY_WARNING_STATUS                       30:28 /* RWIVF */
#define NV_PGRAPH_NOTIFY_WARNING_STATUS_NO_WARNING       0x00000000 /* RWI-V */
#define NV_PGRAPH_NOTIFY_WARNING_STATUS_INVALID_ENUM     0x00000001 /* RW--V */
#define NV_PGRAPH_NOTIFY_WARNING_STATUS_INVALID_VALUE    0x00000002 /* RW--V */
#define NV_PGRAPH_NOTIFY_WARNING_STATUS_INVALID_OP       0x00000004 /* RW--V */
#define NV_PGRAPH_BOFFSET(i)                     (0x00400820+(i)*4) /* RW-4A */
#define NV_PGRAPH_BOFFSET__SIZE_1                                 6 /*       */
#define NV_PGRAPH_BOFFSET_LINADRS                              29:0 /* RWIUF */
#define NV_PGRAPH_BOFFSET_LINADRS_0                      0x00000000 /* RWI-V */
#define NV_PGRAPH_BOFFSET0                               0x00400820 /* RW-4R */
#define NV_PGRAPH_BOFFSET0__ALIAS_1            NV_PGRAPH_BOFFSET(0) /*       */
#define NV_PGRAPH_BOFFSET0_LINADRS                             29:0 /* RWIUF */
#define NV_PGRAPH_BOFFSET0_LINADRS_0                     0x00000000 /* RWI-V */
#define NV_PGRAPH_BOFFSET0_LINADRS_042                   0x00000000 /* RWC-V */
#define NV_PGRAPH_BOFFSET0_LINADRS_058                   0x00000000 /* RWC-V */
#define NV_PGRAPH_BOFFSET0_LINADRS_062                   0x00000000 /* RWC-V */
#define NV_PGRAPH_BOFFSET1                               0x00400824 /* RW-4R */
#define NV_PGRAPH_BOFFSET1__ALIAS_1            NV_PGRAPH_BOFFSET(1) /*       */
#define NV_PGRAPH_BOFFSET1_LINADRS                             29:0 /* RWIUF */
#define NV_PGRAPH_BOFFSET1_LINADRS_0                     0x00000000 /* RWI-V */
#define NV_PGRAPH_BOFFSET1_LINADRS_042                   0x00000000 /* RWC-V */
#define NV_PGRAPH_BOFFSET1_LINADRS_059                   0x00000000 /* RWC-V */
#define NV_PGRAPH_BOFFSET1_LINADRS_062                   0x00000000 /* RWC-V */
#define NV_PGRAPH_BOFFSET2                               0x00400828 /* RW-4R */
#define NV_PGRAPH_BOFFSET2__ALIAS_1            NV_PGRAPH_BOFFSET(2) /*       */
#define NV_PGRAPH_BOFFSET2_LINADRS                             29:0 /* RWIUF */
#define NV_PGRAPH_BOFFSET2_LINADRS_0                     0x00000000 /* RWI-V */
#define NV_PGRAPH_BOFFSET2_LINADRS_056                   0x00000000 /* RWC-V */
#define NV_PGRAPH_BOFFSET2_LINADRS_05A                   0x00000000 /* RWC-V */
#define NV_PGRAPH_BOFFSET2_LINADRS_096                   0x00000000 /* RWC-V */
#define NV_PGRAPH_BOFFSET2_LINADRS_097                   0x00000000 /* RWC-V */
#define NV_PGRAPH_BOFFSET3                               0x0040082C /* RW-4R */
#define NV_PGRAPH_BOFFSET3__ALIAS_1            NV_PGRAPH_BOFFSET(3) /*       */
#define NV_PGRAPH_BOFFSET3_LINADRS                             29:0 /* RWIUF */
#define NV_PGRAPH_BOFFSET3_LINADRS_0                     0x00000000 /* RWI-V */
#define NV_PGRAPH_BOFFSET3_LINADRS_056                   0x00000000 /* RWC-V */
#define NV_PGRAPH_BOFFSET3_LINADRS_05B                   0x00000000 /* RWC-V */
#define NV_PGRAPH_BOFFSET3_LINADRS_096                   0x00000000 /* RWC-V */
#define NV_PGRAPH_BOFFSET3_LINADRS_097                   0x00000000 /* RWC-V */
#define NV_PGRAPH_BOFFSET4                               0x00400830 /* RW-4R */
#define NV_PGRAPH_BOFFSET4__ALIAS_1            NV_PGRAPH_BOFFSET(4) /*       */
#define NV_PGRAPH_BOFFSET4_LINADRS                             29:0 /* RWIUF */
#define NV_PGRAPH_BOFFSET4_LINADRS_0                     0x00000000 /* RWI-V */
#define NV_PGRAPH_BOFFSET5                               0x00400834 /* RW-4R */
#define NV_PGRAPH_BOFFSET5__ALIAS_1            NV_PGRAPH_BOFFSET(5) /*       */
#define NV_PGRAPH_BOFFSET5_LINADRS                             29:0 /* RWIUF */
#define NV_PGRAPH_BOFFSET5_LINADRS_0                     0x00000000 /* RWI-V */
#define NV_PGRAPH_BOFFSET5_LINADRS_052                   0x00000000 /* RWC-V */
#define NV_PGRAPH_BOFFSET5_LINADRS_09E                   0x00000000 /* RWC-V */
#define NV_PGRAPH_BBASE(i)                       (0x00400838+(i)*4) /* RW-4A */
#define NV_PGRAPH_BBASE__SIZE_1                                   6 /*       */
#define NV_PGRAPH_BBASE_LINADRS                                29:0 /* RWIUF */
#define NV_PGRAPH_BBASE_LINADRS_0                        0x00000000 /* RWI-V */
#define NV_PGRAPH_BBASE0                                 0x00400838 /* RW-4R */
#define NV_PGRAPH_BBASE0__ALIAS_1                NV_PGRAPH_BBASE(0) /*       */
#define NV_PGRAPH_BBASE0_LINADRS                               29:0 /* RWIUF */
#define NV_PGRAPH_BBASE0_LINADRS_0                       0x00000000 /* RWI-V */
#define NV_PGRAPH_BBASE1                                 0x0040083c /* RW-4R */
#define NV_PGRAPH_BBASE1__ALIAS_1                NV_PGRAPH_BBASE(1) /*       */
#define NV_PGRAPH_BBASE1_LINADRS                               29:0 /* RWIUF */
#define NV_PGRAPH_BBASE1_LINADRS_0                       0x00000000 /* RWI-V */
#define NV_PGRAPH_BBASE2                                 0x00400840 /* RW-4R */
#define NV_PGRAPH_BBASE2__ALIAS_1                NV_PGRAPH_BBASE(2) /*       */
#define NV_PGRAPH_BBASE2_LINADRS                               29:0 /* RWIUF */
#define NV_PGRAPH_BBASE2_LINADRS_0                       0x00000000 /* RWI-V */
#define NV_PGRAPH_BBASE3                                 0x00400844 /* RW-4R */
#define NV_PGRAPH_BBASE3__ALIAS_1                NV_PGRAPH_BBASE(3) /*       */
#define NV_PGRAPH_BBASE3_LINADRS                               29:0 /* RWIUF */
#define NV_PGRAPH_BBASE3_LINADRS_0                       0x00000000 /* RWI-V */
#define NV_PGRAPH_BBASE4                                 0x00400848 /* RW-4R */
#define NV_PGRAPH_BBASE4__ALIAS_1                NV_PGRAPH_BBASE(4) /*       */
#define NV_PGRAPH_BBASE4_LINADRS                               29:0 /* RWIUF */
#define NV_PGRAPH_BBASE4_LINADRS_0                       0x00000000 /* RWI-V */
#define NV_PGRAPH_BBASE5                                 0x0040084C /* RW-4R */
#define NV_PGRAPH_BBASE5__ALIAS_1                NV_PGRAPH_BBASE(5) /*       */
#define NV_PGRAPH_BBASE5_LINADRS                               29:0 /* RWIUF */
#define NV_PGRAPH_BBASE5_LINADRS_0                       0x00000000 /* RWI-V */
#define NV_PGRAPH_BPITCH(i)                      (0x00400850+(i)*4) /* RW-4A */
#define NV_PGRAPH_BPITCH__SIZE_1                                  5 /*       */
#define NV_PGRAPH_BPITCH_VALUE                                 15:0 /* RWIUF */
#define NV_PGRAPH_BPITCH_VALUE_0                         0x00000000 /* RWI-V */
#define NV_PGRAPH_BPITCH0                                0x00400850 /* RW-4R */
#define NV_PGRAPH_BPITCH0__ALIAS_1              NV_PGRAPH_BPITCH(0) /*       */
#define NV_PGRAPH_BPITCH0_VALUE                                15:0 /* RWIUF */
#define NV_PGRAPH_BPITCH0_VALUE_0                        0x00000000 /* RWI-V */
#define NV_PGRAPH_BPITCH0_VALUE_042                      0x00000040 /* RWC-V */
#define NV_PGRAPH_BPITCH0_VALUE_058                      0x00000040 /* RWC-V */
#define NV_PGRAPH_BPITCH0_VALUE_062                      0x00000040 /* RWC-V */
#define NV_PGRAPH_BPITCH1                                0x00400854 /* RW-4R */
#define NV_PGRAPH_BPITCH1__ALIAS_1              NV_PGRAPH_BPITCH(1) /*       */
#define NV_PGRAPH_BPITCH1_VALUE                                15:0 /* RWIUF */
#define NV_PGRAPH_BPITCH1_VALUE_0                        0x00000000 /* RWI-V */
#define NV_PGRAPH_BPITCH1_VALUE_042                      0x00000040 /* RWC-V */
#define NV_PGRAPH_BPITCH1_VALUE_059                      0x00000040 /* RWC-V */
#define NV_PGRAPH_BPITCH1_VALUE_062                      0x00000040 /* RWC-V */
#define NV_PGRAPH_BPITCH2                                0x00400858 /* RW-4R */
#define NV_PGRAPH_BPITCH2__ALIAS_1              NV_PGRAPH_BPITCH(2) /*       */
#define NV_PGRAPH_BPITCH2_VALUE                                15:0 /* RWIUF */
#define NV_PGRAPH_BPITCH2_VALUE_0                        0x00000000 /* RWI-V */
#define NV_PGRAPH_BPITCH2_VALUE_056                      0x00000040 /* RWC-V */
#define NV_PGRAPH_BPITCH2_VALUE_05A                      0x00000040 /* RWC-V */
#define NV_PGRAPH_BPITCH2_VALUE_096                      0x00000040 /* RWC-V */
#define NV_PGRAPH_BPITCH2_VALUE_097                      0x00000040 /* RWC-V */
#define NV_PGRAPH_BPITCH3                                0x0040085C /* RW-4R */
#define NV_PGRAPH_BPITCH3__ALIAS_1              NV_PGRAPH_BPITCH(3) /*       */
#define NV_PGRAPH_BPITCH3_VALUE                                15:0 /* RWIUF */
#define NV_PGRAPH_BPITCH3_VALUE_0                        0x00000000 /* RWI-V */
#define NV_PGRAPH_BPITCH3_VALUE_056                      0x00000040 /* RWC-V */
#define NV_PGRAPH_BPITCH3_VALUE_05B                      0x00000040 /* RWC-V */
#define NV_PGRAPH_BPITCH3_VALUE_096                      0x00000040 /* RWC-V */
#define NV_PGRAPH_BPITCH3_VALUE_097                      0x00000040 /* RWC-V */
#define NV_PGRAPH_BPITCH4                                0x00400860 /* RW-4R */
#define NV_PGRAPH_BPITCH4__ALIAS_1              NV_PGRAPH_BPITCH(4) /*       */
#define NV_PGRAPH_BPITCH4_VALUE                                15:0 /* RWIUF */
#define NV_PGRAPH_BPITCH4_VALUE_0                        0x00000000 /* RWI-V */
#define NV_PGRAPH_BLIMIT(i)                      (0x00400864+(i)*4) /* RW-4A */
#define NV_PGRAPH_BLIMIT__SIZE_1                                  6 /*       */
#define NV_PGRAPH_BLIMIT_VALUE                                 29:0 /* RWXUF */
#define NV_PGRAPH_BLIMIT_ADDRESSING                           30:30 /* RWIVF */
#define NV_PGRAPH_BLIMIT_ADDRESSING_LINEAR               0x00000000 /* RWI-V */
#define NV_PGRAPH_BLIMIT_ADDRESSING_TILED                0x00000001 /* RW--V */
#define NV_PGRAPH_BLIMIT_TYPE                                 31:31 /* RWIVF */
#define NV_PGRAPH_BLIMIT_TYPE_IN_MEMORY                  0x00000000 /* RW--V */
#define NV_PGRAPH_BLIMIT_TYPE_NULL                       0x00000001 /* RWI-V */
#define NV_PGRAPH_BLIMIT0                                0x00400864 /* RW-4R */
#define NV_PGRAPH_BLIMIT0__ALIAS_1              NV_PGRAPH_BLIMIT(0) /*       */
#define NV_PGRAPH_BLIMIT0_VALUE                                29:0 /* RWXUF */
#define NV_PGRAPH_BLIMIT0_ADDRESSING                          30:30 /* RWIVF */
#define NV_PGRAPH_BLIMIT0_ADDRESSING_LINEAR              0x00000000 /* RWI-V */
#define NV_PGRAPH_BLIMIT0_ADDRESSING_TILED               0x00000001 /* RW--V */
#define NV_PGRAPH_BLIMIT0_TYPE                                31:31 /* RWIVF */
#define NV_PGRAPH_BLIMIT0_TYPE_IN_MEMORY                 0x00000000 /* RW--V */
#define NV_PGRAPH_BLIMIT0_TYPE_NULL                      0x00000001 /* RWI-V */
#define NV_PGRAPH_BLIMIT1                                0x00400868 /* RW-4R */
#define NV_PGRAPH_BLIMIT1__ALIAS_1              NV_PGRAPH_BLIMIT(1) /*       */
#define NV_PGRAPH_BLIMIT1_VALUE                                29:0 /* RWXUF */
#define NV_PGRAPH_BLIMIT1_ADDRESSING                          30:30 /* RWIVF */
#define NV_PGRAPH_BLIMIT1_ADDRESSING_LINEAR              0x00000000 /* RWI-V */
#define NV_PGRAPH_BLIMIT1_ADDRESSING_TILED               0x00000001 /* RW--V */
#define NV_PGRAPH_BLIMIT1_TYPE                                31:31 /* RWIVF */
#define NV_PGRAPH_BLIMIT1_TYPE_IN_MEMORY                 0x00000000 /* RW--V */
#define NV_PGRAPH_BLIMIT1_TYPE_NULL                      0x00000001 /* RWI-V */
#define NV_PGRAPH_BLIMIT2                                0x0040086c /* RW-4R */
#define NV_PGRAPH_BLIMIT2__ALIAS_1              NV_PGRAPH_BLIMIT(2) /*       */
#define NV_PGRAPH_BLIMIT2_VALUE                                29:0 /* RWXUF */
#define NV_PGRAPH_BLIMIT2_ADDRESSING                          30:30 /* RWIVF */
#define NV_PGRAPH_BLIMIT2_ADDRESSING_LINEAR              0x00000000 /* RWI-V */
#define NV_PGRAPH_BLIMIT2_ADDRESSING_TILED               0x00000001 /* RW--V */
#define NV_PGRAPH_BLIMIT2_TYPE                                31:31 /* RWIVF */
#define NV_PGRAPH_BLIMIT2_TYPE_IN_MEMORY                 0x00000000 /* RW--V */
#define NV_PGRAPH_BLIMIT2_TYPE_NULL                      0x00000001 /* RWI-V */
#define NV_PGRAPH_BLIMIT3                                0x00400870 /* RW-4R */
#define NV_PGRAPH_BLIMIT3__ALIAS_1              NV_PGRAPH_BLIMIT(3) /*       */
#define NV_PGRAPH_BLIMIT3_VALUE                                29:0 /* RWXUF */
#define NV_PGRAPH_BLIMIT3_ADDRESSING                          30:30 /* RWIVF */
#define NV_PGRAPH_BLIMIT3_ADDRESSING_LINEAR              0x00000000 /* RWI-V */
#define NV_PGRAPH_BLIMIT3_ADDRESSING_TILED               0x00000001 /* RW--V */
#define NV_PGRAPH_BLIMIT3_TYPE                                31:31 /* RWIVF */
#define NV_PGRAPH_BLIMIT3_TYPE_IN_MEMORY                 0x00000000 /* RW--V */
#define NV_PGRAPH_BLIMIT3_TYPE_NULL                      0x00000001 /* RWI-V */
#define NV_PGRAPH_BLIMIT4                                0x00400874 /* RW-4R */
#define NV_PGRAPH_BLIMIT4__ALIAS_1              NV_PGRAPH_BLIMIT(4) /*       */
#define NV_PGRAPH_BLIMIT4_VALUE                                29:0 /* RWXUF */
#define NV_PGRAPH_BLIMIT4_ADDRESSING                          30:30 /* RWIVF */
#define NV_PGRAPH_BLIMIT4_ADDRESSING_LINEAR              0x00000000 /* RWI-V */
#define NV_PGRAPH_BLIMIT4_ADDRESSING_TILED               0x00000001 /* RW--V */
#define NV_PGRAPH_BLIMIT4_TYPE                                31:31 /* RWIVF */
#define NV_PGRAPH_BLIMIT4_TYPE_IN_MEMORY                 0x00000000 /* RW--V */
#define NV_PGRAPH_BLIMIT4_TYPE_NULL                      0x00000001 /* RWI-V */
#define NV_PGRAPH_BLIMIT5                                0x00400878 /* RW-4R */
#define NV_PGRAPH_BLIMIT5__ALIAS_1              NV_PGRAPH_BLIMIT(5) /*       */
#define NV_PGRAPH_BLIMIT5_VALUE                                29:0 /* RWXUF */
#define NV_PGRAPH_BLIMIT5_ADDRESSING                          30:30 /* RWIVF */
#define NV_PGRAPH_BLIMIT5_ADDRESSING_LINEAR              0x00000000 /* RWI-V */
#define NV_PGRAPH_BLIMIT5_ADDRESSING_TILED               0x00000001 /* RW--V */
#define NV_PGRAPH_BLIMIT5_TYPE                                31:31 /* RWIVF */
#define NV_PGRAPH_BLIMIT5_TYPE_IN_MEMORY                 0x00000000 /* RW--V */
#define NV_PGRAPH_BLIMIT5_TYPE_NULL                      0x00000001 /* RWI-V */
#define NV_PGRAPH_BSWIZZLE2                              0x00400818 /* RW-4R */
#define NV_PGRAPH_BSWIZZLE2_WIDTH                             19:16 /* RWIUF */
#define NV_PGRAPH_BSWIZZLE2_WIDTH_0                      0x00000000 /* RWI-V */
#define NV_PGRAPH_BSWIZZLE2_WIDTH_MAX                    0x0000000c /* RW--V */
#define NV_PGRAPH_BSWIZZLE2_WIDTH_056                    0x00000000 /* RWC-V */
#define NV_PGRAPH_BSWIZZLE2_WIDTH_096                    0x00000000 /* RWC-V */
#define NV_PGRAPH_BSWIZZLE2_WIDTH_097                    0x00000000 /* RWC-V */
#define NV_PGRAPH_BSWIZZLE2_HEIGHT                            27:24 /* RWIUF */
#define NV_PGRAPH_BSWIZZLE2_HEIGHT_0                     0x00000000 /* RWI-V */
#define NV_PGRAPH_BSWIZZLE2_HEIGHT_MAX                   0x0000000c /* RW--V */
#define NV_PGRAPH_BSWIZZLE2_HEIGHT_056                   0x00000000 /* RWC-V */
#define NV_PGRAPH_BSWIZZLE2_HEIGHT_096                   0x00000000 /* RWC-V */
#define NV_PGRAPH_BSWIZZLE2_HEIGHT_097                   0x00000000 /* RWC-V */
#define NV_PGRAPH_BSWIZZLE5                              0x0040081c /* RW-4R */
#define NV_PGRAPH_BSWIZZLE5_WIDTH                             19:16 /* RWIUF */
#define NV_PGRAPH_BSWIZZLE5_WIDTH_0                      0x00000000 /* RWI-V */
#define NV_PGRAPH_BSWIZZLE5_WIDTH_052                    0x00000000 /* RWC-V */
#define NV_PGRAPH_BSWIZZLE5_WIDTH_09E                    0x00000000 /* RWC-V */
#define NV_PGRAPH_BSWIZZLE5_HEIGHT                            27:24 /* RWIUF */
#define NV_PGRAPH_BSWIZZLE5_HEIGHT_0                     0x00000000 /* RWI-V */
#define NV_PGRAPH_BSWIZZLE5_HEIGHT_052                   0x00000000 /* RWC-V */
#define NV_PGRAPH_BSWIZZLE5_HEIGHT_09E                   0x00000000 /* RWC-V */
#define NV_PGRAPH_TILE(i)                       (0x00400900+(i)*16) /* RW-4A */
#define NV_PGRAPH_TILE__SIZE_1                                    8 /*       */
#define NV_PGRAPH_TILE_REGION                                   0:0 /* RWIVF */
#define NV_PGRAPH_TILE_REGION_INVALID                    0x00000000 /* RWI-V */
#define NV_PGRAPH_TILE_REGION_VALID                      0x00000001 /* RW--V */
#define NV_PGRAPH_TILE_BANK0_SENSE                              1:1 /* RWIVF */
#define NV_PGRAPH_TILE_BANK0_SENSE_0                     0x00000000 /* RWI-V */
#define NV_PGRAPH_TILE_BANK0_SENSE_1                     0x00000001 /* RW--V */
#define NV_PGRAPH_TILE_ADR                                    31:14 /* RW-UF */
#define NV_PGRAPH_TLIMIT(i)                     (0x00400904+(i)*16) /* RW-4A */
#define NV_PGRAPH_TLIMIT__SIZE_1                                  8 /*       */
#define NV_PGRAPH_TLIMIT_ADR                                  31:14 /* RW-UF */
#define NV_PGRAPH_TSIZE(i)                      (0x00400908+(i)*16) /* RW-4A */
#define NV_PGRAPH_TSIZE__SIZE_1                                   8 /*       */
#define NV_PGRAPH_TSIZE_PITCH                                  15:8 /* RW-UF */
#define NV_PGRAPH_TSTATUS(i)                    (0x0040090c+(i)*16) /* R--4A */
#define NV_PGRAPH_TSTATUS__SIZE_1                                 8 /*       */
#define NV_PGRAPH_TSTATUS_PRIME                                 1:0 /* R--VF */
#define NV_PGRAPH_TSTATUS_FACTOR                                6:4 /* R--VF */
#define NV_PGRAPH_TSTATUS_REGION                              31:31 /* R-I-F */
#define NV_PGRAPH_ZCOMP(i)                       (0x00400980+(i)*4) /* RW-4A */
#define NV_PGRAPH_ZCOMP__SIZE_1                                   8 /*       */
#define NV_PGRAPH_ZCOMP_OFFSET                           0x004009a0 /* RW-4R */
#define NV_PGRAPH_FBCFG0                                 0x004009a4 /* RW-4R */
#define NV_PGRAPH_FBCFG1                                 0x004009a8 /* RW-4R */
#define NV_PGRAPH_BPIXEL                                 0x00400724 /* RW-4R */
#define NV_PGRAPH_BPIXEL_DEPTH0                                 3:0 /* RWIVF */
#define NV_PGRAPH_BPIXEL_DEPTH0_INVALID                  0x00000000 /* RWI-V */
#define NV_PGRAPH_BPIXEL_DEPTH0_Y8                       0x00000001 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH0_X1R5G5B5_Z1R5G5B5        0x00000002 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH0_X1R5G5B5_O1R5G5B5        0x00000003 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH0_A1R5G5B5                 0x00000004 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH0_R5G6B5                   0x00000005 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH0_Y16                      0x00000006 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH0_X8R8G8B8_Z8R8G8B8        0x00000007 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH0_X8R8G8B8_O1Z7R8G8B8      0x00000008 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH0_X1A7R8G8B8_Z1A7R8G8B8    0x00000009 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH0_X1A7R8G8B8_O1A7R8G8B8    0x0000000a /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH0_X8R8G8B8_O8R8G8B8        0x0000000b /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH0_A8R8G8B8                 0x0000000c /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH0_Y32                      0x0000000d /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH0_V8YB8U8YA8               0x0000000e /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH0_YB8V8YA8U8               0x0000000f /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH0_042                      0x00000001 /* RWC-V */
#define NV_PGRAPH_BPIXEL_DEPTH0_058                      0x00000001 /* RWC-V */
#define NV_PGRAPH_BPIXEL_DEPTH0_062                      0x00000001 /* RWC-V */
#define NV_PGRAPH_BPIXEL_DEPTH1                                 7:4 /* RWIVF */
#define NV_PGRAPH_BPIXEL_DEPTH1_INVALID                  0x00000000 /* RWI-V */
#define NV_PGRAPH_BPIXEL_DEPTH1_Y8                       0x00000001 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH1_X1R5G5B5_Z1R5G5B5        0x00000002 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH1_X1R5G5B5_O1R5G5B5        0x00000003 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH1_A1R5G5B5                 0x00000004 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH1_R5G6B5                   0x00000005 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH1_Y16                      0x00000006 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH1_X8R8G8B8_Z8R8G8B8        0x00000007 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH1_X8R8G8B8_O1Z7R8G8B8      0x00000008 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH1_X1A7R8G8B8_Z1A7R8G8B8    0x00000009 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH1_X1A7R8G8B8_O1A7R8G8B8    0x0000000a /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH1_X8R8G8B8_O8R8G8B8        0x0000000b /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH1_A8R8G8B8                 0x0000000c /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH1_Y32                      0x0000000d /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH1_V8YB8U8YA8               0x0000000e /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH1_YB8V8YA8U8               0x0000000f /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH1_042                      0x00000001 /* RWC-V */
#define NV_PGRAPH_BPIXEL_DEPTH1_059                      0x00000001 /* RWC-V */
#define NV_PGRAPH_BPIXEL_DEPTH1_062                      0x00000001 /* RWC-V */
#define NV_PGRAPH_BPIXEL_DEPTH2                                11:8 /* RWIVF */
#define NV_PGRAPH_BPIXEL_DEPTH2_INVALID                  0x00000000 /* RWI-V */
#define NV_PGRAPH_BPIXEL_DEPTH2_Y8                       0x00000001 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH2_X1R5G5B5_Z1R5G5B5        0x00000002 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH2_X1R5G5B5_O1R5G5B5        0x00000003 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH2_A1R5G5B5                 0x00000004 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH2_R5G6B5                   0x00000005 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH2_Y16                      0x00000006 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH2_X8R8G8B8_Z8R8G8B8        0x00000007 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH2_X8R8G8B8_O1Z7R8G8B8      0x00000008 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH2_X1A7R8G8B8_Z1A7R8G8B8    0x00000009 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH2_X1A7R8G8B8_O1A7R8G8B8    0x0000000a /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH2_X8R8G8B8_O8R8G8B8        0x0000000b /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH2_A8R8G8B8                 0x0000000c /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH2_Y32                      0x0000000d /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH2_V8YB8U8YA8               0x0000000e /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH2_YB8V8YA8U8               0x0000000f /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH2_056                      0x00000002 /* RWC-V */
#define NV_PGRAPH_BPIXEL_DEPTH2_05A                      0x00000002 /* RWC-V */
#define NV_PGRAPH_BPIXEL_DEPTH2_096                      0x00000002 /* RWC-V */
#define NV_PGRAPH_BPIXEL_DEPTH2_097                      0x00000002 /* RWC-V */
#define NV_PGRAPH_BPIXEL_DEPTH3                               15:12 /* RWIVF */
#define NV_PGRAPH_BPIXEL_DEPTH3_INVALID                  0x00000000 /* RWI-V */
#define NV_PGRAPH_BPIXEL_DEPTH3_Z16                      0x00000001 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH3_Z24S8                    0x00000002 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH3_05B                      0x00000002 /* RWC-V */
#define NV_PGRAPH_BPIXEL_DEPTH3_097                      0x00000001 /* RWC-V */
#define NV_PGRAPH_BPIXEL_DEPTH4                               19:16 /* RWIVF */
#define NV_PGRAPH_BPIXEL_DEPTH4_INVALID                  0x00000000 /* RWI-V */
#define NV_PGRAPH_BPIXEL_DEPTH4_Y8                       0x00000001 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH4_X1R5G5B5_Z1R5G5B5        0x00000002 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH4_X1R5G5B5_O1R5G5B5        0x00000003 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH4_A1R5G5B5                 0x00000004 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH4_R5G6B5                   0x00000005 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH4_Y16                      0x00000006 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH4_X8R8G8B8_Z8R8G8B8        0x00000007 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH4_X8R8G8B8_O1Z7R8G8B8      0x00000008 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH4_X1A7R8G8B8_Z1A7R8G8B8    0x00000009 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH4_X1A7R8G8B8_O1A7R8G8B8    0x0000000a /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH4_X8R8G8B8_O8R8G8B8        0x0000000b /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH4_A8R8G8B8                 0x0000000c /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH4_Y32                      0x0000000d /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH4_V8YB8U8YA8               0x0000000e /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH4_YB8V8YA8U8               0x0000000f /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH5                               23:20 /* RWIVF */
#define NV_PGRAPH_BPIXEL_DEPTH5_INVALID                  0x00000000 /* RWI-V */
#define NV_PGRAPH_BPIXEL_DEPTH5_Y8                       0x00000001 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH5_X1R5G5B5_Z1R5G5B5        0x00000002 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH5_X1R5G5B5_O1R5G5B5        0x00000003 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH5_A1R5G5B5                 0x00000004 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH5_R5G6B5                   0x00000005 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH5_Y16                      0x00000006 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH5_X8R8G8B8_Z8R8G8B8        0x00000007 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH5_X8R8G8B8_O1Z7R8G8B8      0x00000008 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH5_X1A7R8G8B8_Z1A7R8G8B8    0x00000009 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH5_X1A7R8G8B8_O1A7R8G8B8    0x0000000a /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH5_X8R8G8B8_O8R8G8B8        0x0000000b /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH5_A8R8G8B8                 0x0000000c /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH5_Y32                      0x0000000d /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH5_V8YB8U8YA8               0x0000000e /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH5_YB8V8YA8U8               0x0000000f /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH5_052                      0x00000001 /* RWC-V */
#define NV_PGRAPH_BPIXEL_DEPTH5_09E                      0x00000001 /* RWC-V */
#define NV_PGRAPH_LIMIT_VIOL_PIX                         0x0040080c /* RW-4R */
#define NV_PGRAPH_LIMIT_VIOL_PIX_ADRS                          31:0 /* RWIVF */
#define NV_PGRAPH_LIMIT_VIOL_PIX_ADRS_0                  0x00000000 /* RWI-V */
#define NV_PGRAPH_LIMIT_VIOL_Z                           0x00400810 /* RW-4R */
#define NV_PGRAPH_LIMIT_VIOL_Z_ADRS                            31:0 /* RWIVF */
#define NV_PGRAPH_LIMIT_VIOL_Z_ADRS_0                    0x00000000 /* RWI-V */
#define NV_PGRAPH_LIMIT_VIOL_MODE                        0x00400800 /* RW-4R */
#define NV_PGRAPH_LIMIT_VIOL_MODE_DSTBPITCH                     0:0 /* RWIVF */
#define NV_PGRAPH_LIMIT_VIOL_MODE_DSTBPITCH_NO_VIOL      0x00000000 /* RWI-V */
#define NV_PGRAPH_LIMIT_VIOL_MODE_DSTBPITCH_VIOL         0x00000001 /* RW--V */
#define NV_PGRAPH_LIMIT_VIOL_MODE_DSTBLIMIT                     1:1 /* RWIVF */
#define NV_PGRAPH_LIMIT_VIOL_MODE_DSTBLIMIT_NO_VIOL      0x00000000 /* RWI-V */
#define NV_PGRAPH_LIMIT_VIOL_MODE_DSTBLIMIT_VIOL         0x00000001 /* RW--V */
#define NV_PGRAPH_LIMIT_VIOL_MODE_DSTOVRFLW                     2:2 /* RWIVF */
#define NV_PGRAPH_LIMIT_VIOL_MODE_DSTOVRFLW_NO_VIOL      0x00000000 /* RWI-V */
#define NV_PGRAPH_LIMIT_VIOL_MODE_DSTOVRFLW_VIOL         0x00000001 /* RW--V */
#define NV_PGRAPH_LIMIT_VIOL_MODE_DSTMEMSIZE                    3:3 /* RWIVF */
#define NV_PGRAPH_LIMIT_VIOL_MODE_DSTMEMSIZE_NO_VIOL     0x00000000 /* RWI-V */
#define NV_PGRAPH_LIMIT_VIOL_MODE_DSTMEMSIZE_VIOL        0x00000001 /* RW--V */
#define NV_PGRAPH_LIMIT_VIOL_MODE_DSTTILED                      4:4 /* RWIVF */
#define NV_PGRAPH_LIMIT_VIOL_MODE_DSTTILED_NO_VIOL       0x00000000 /* RWI-V */
#define NV_PGRAPH_LIMIT_VIOL_MODE_DSTTILED_VIOL          0x00000001 /* RW--V */
#define NV_PGRAPH_LIMIT_VIOL_MODE_SRCBPITCH                     8:8 /* RWIVF */
#define NV_PGRAPH_LIMIT_VIOL_MODE_SRCBPITCH_NO_VIOL      0x00000000 /* RWI-V */
#define NV_PGRAPH_LIMIT_VIOL_MODE_SRCBPITCH_VIOL         0x00000001 /* RW--V */
#define NV_PGRAPH_LIMIT_VIOL_MODE_SRCBLIMIT                     9:9 /* RWIVF */
#define NV_PGRAPH_LIMIT_VIOL_MODE_SRCBLIMIT_NO_VIOL      0x00000000 /* RWI-V */
#define NV_PGRAPH_LIMIT_VIOL_MODE_SRCBLIMIT_VIOL         0x00000001 /* RW--V */
#define NV_PGRAPH_LIMIT_VIOL_MODE_SRCOVRFLW                   10:10 /* RWIVF */
#define NV_PGRAPH_LIMIT_VIOL_MODE_SRCOVRFLW_NO_VIOL      0x00000000 /* RWI-V */
#define NV_PGRAPH_LIMIT_VIOL_MODE_SRCOVRFLW_VIOL         0x00000001 /* RW--V */
#define NV_PGRAPH_LIMIT_VIOL_MODE_SRCMEMSIZE                  11:11 /* RWIVF */
#define NV_PGRAPH_LIMIT_VIOL_MODE_SRCMEMSIZE_NO_VIOL     0x00000000 /* RWI-V */
#define NV_PGRAPH_LIMIT_VIOL_MODE_SRCMEMSIZE_VIOL        0x00000001 /* RW--V */
#define NV_PGRAPH_LIMIT_VIOL_MODE_SRCTILED                    12:12 /* RWIVF */
#define NV_PGRAPH_LIMIT_VIOL_MODE_SRCTILED_NO_VIOL       0x00000000 /* RWI-V */
#define NV_PGRAPH_LIMIT_VIOL_MODE_SRCTILED_VIOL          0x00000001 /* RW--V */
#define NV_PGRAPH_LIMIT_VIOL_MODE_SWIZZLEX                    16:16 /* RWIVF */
#define NV_PGRAPH_LIMIT_VIOL_MODE_SWIZZLEX_NO_VIOL       0x00000000 /* RWI-V */
#define NV_PGRAPH_LIMIT_VIOL_MODE_SWIZZLEX_VIOL          0x00000001 /* RW--V */
#define NV_PGRAPH_LIMIT_VIOL_MODE_SWIZZLEY                    17:17 /* RWIVF */
#define NV_PGRAPH_LIMIT_VIOL_MODE_SWIZZLEY_NO_VIOL       0x00000000 /* RWI-V */
#define NV_PGRAPH_LIMIT_VIOL_MODE_SWIZZLEY_VIOL          0x00000001 /* RW--V */
#define NV_PGRAPH_LIMIT_VIOL_MODE_ZTILEMODE                   21:20 /* RWIVF */
#define NV_PGRAPH_LIMIT_VIOL_MODE_CTILEMODE                   23:22 /* RWIVF */
#define NV_PGRAPH_LIMIT_VIOL_MODE_ROPMODE                     31:24 /* RWIVF */
#define NV_PGRAPH_STATE                                  0x00400714 /* RW-4R */
#define NV_PGRAPH_STATE_BUFFER_0                                0:0 /* RWIVF */
#define NV_PGRAPH_STATE_BUFFER_0_INVALID                 0x00000000 /* RWI-V */
#define NV_PGRAPH_STATE_BUFFER_0_VALID                   0x00000001 /* RW--V */
#define NV_PGRAPH_STATE_BUFFER_0_042                     0x00000000 /* RWC-V */
#define NV_PGRAPH_STATE_BUFFER_0_058                     0x00000000 /* RWC-V */
#define NV_PGRAPH_STATE_BUFFER_0_062                     0x00000000 /* RWC-V */
#define NV_PGRAPH_STATE_BUFFER_1                                1:1 /* RWIVF */
#define NV_PGRAPH_STATE_BUFFER_1_INVALID                 0x00000000 /* RWI-V */
#define NV_PGRAPH_STATE_BUFFER_1_VALID                   0x00000001 /* RW--V */
#define NV_PGRAPH_STATE_BUFFER_1_042                     0x00000000 /* RWC-V */
#define NV_PGRAPH_STATE_BUFFER_1_059                     0x00000000 /* RWC-V */
#define NV_PGRAPH_STATE_BUFFER_1_062                     0x00000000 /* RWC-V */
#define NV_PGRAPH_STATE_BUFFER_2                                2:2 /* RWIVF */
#define NV_PGRAPH_STATE_BUFFER_2_INVALID                 0x00000000 /* RWI-V */
#define NV_PGRAPH_STATE_BUFFER_2_VALID                   0x00000001 /* RW--V */
#define NV_PGRAPH_STATE_BUFFER_2_056                     0x00000000 /* RWC-V */
#define NV_PGRAPH_STATE_BUFFER_2_05A                     0x00000000 /* RWC-V */
#define NV_PGRAPH_STATE_BUFFER_2_096                     0x00000000 /* RWC-V */
#define NV_PGRAPH_STATE_BUFFER_2_097                     0x00000000 /* RWC-V */
#define NV_PGRAPH_STATE_BUFFER_3                                3:3 /* RWIVF */
#define NV_PGRAPH_STATE_BUFFER_3_INVALID                 0x00000000 /* RWI-V */
#define NV_PGRAPH_STATE_BUFFER_3_VALID                   0x00000001 /* RW--V */
#define NV_PGRAPH_STATE_BUFFER_3_056                     0x00000000 /* RWC-V */
#define NV_PGRAPH_STATE_BUFFER_3_05B                     0x00000000 /* RWC-V */
#define NV_PGRAPH_STATE_BUFFER_3_096                     0x00000000 /* RWC-V */
#define NV_PGRAPH_STATE_BUFFER_3_097                     0x00000000 /* RWC-V */
#define NV_PGRAPH_STATE_BUFFER_4                                4:4 /* RWIVF */
#define NV_PGRAPH_STATE_BUFFER_4_INVALID                 0x00000000 /* RWI-V */
#define NV_PGRAPH_STATE_BUFFER_4_VALID                   0x00000001 /* RW--V */
#define NV_PGRAPH_STATE_BUFFER_4_038                     0x00000000 /* RWC-V */
#define NV_PGRAPH_STATE_BUFFER_4_088                     0x00000000 /* RWC-V */
#define NV_PGRAPH_STATE_BUFFER_5                                5:5 /* RWIVF */
#define NV_PGRAPH_STATE_BUFFER_5_INVALID                 0x00000000 /* RWI-V */
#define NV_PGRAPH_STATE_BUFFER_5_VALID                   0x00000001 /* RW--V */
#define NV_PGRAPH_STATE_BUFFER_5_052                     0x00000000 /* RWC-V */
#define NV_PGRAPH_STATE_BUFFER_5_09E                     0x00000000 /* RWC-V */
#define NV_PGRAPH_STATE_PITCH_0                                 8:8 /* RWIVF */
#define NV_PGRAPH_STATE_PITCH_0_INVALID                  0x00000000 /* RWI-V */
#define NV_PGRAPH_STATE_PITCH_0_VALID                    0x00000001 /* RW--V */
#define NV_PGRAPH_STATE_PITCH_0_042                      0x00000001 /* RWC-V */
#define NV_PGRAPH_STATE_PITCH_0_058                      0x00000001 /* RWC-V */
#define NV_PGRAPH_STATE_PITCH_0_062                      0x00000001 /* RWC-V */
#define NV_PGRAPH_STATE_PITCH_1                                 9:9 /* RWIVF */
#define NV_PGRAPH_STATE_PITCH_1_INVALID                  0x00000000 /* RWI-V */
#define NV_PGRAPH_STATE_PITCH_1_VALID                    0x00000001 /* RW--V */
#define NV_PGRAPH_STATE_PITCH_1_042                      0x00000001 /* RWC-V */
#define NV_PGRAPH_STATE_PITCH_1_059                      0x00000001 /* RWC-V */
#define NV_PGRAPH_STATE_PITCH_1_062                      0x00000001 /* RWC-V */
#define NV_PGRAPH_STATE_PITCH_2                               10:10 /* RWIVF */
#define NV_PGRAPH_STATE_PITCH_2_INVALID                  0x00000000 /* RWI-V */
#define NV_PGRAPH_STATE_PITCH_2_VALID                    0x00000001 /* RW--V */
#define NV_PGRAPH_STATE_PITCH_2_056                      0x00000001 /* RWC-V */
#define NV_PGRAPH_STATE_PITCH_2_05A                      0x00000001 /* RWC-V */
#define NV_PGRAPH_STATE_PITCH_2_096                      0x00000001 /* RWC-V */
#define NV_PGRAPH_STATE_PITCH_2_097                      0x00000001 /* RWC-V */
#define NV_PGRAPH_STATE_PITCH_3                               11:11 /* RWIVF */
#define NV_PGRAPH_STATE_PITCH_3_INVALID                  0x00000000 /* RWI-V */
#define NV_PGRAPH_STATE_PITCH_3_VALID                    0x00000001 /* RW--V */
#define NV_PGRAPH_STATE_PITCH_3_056                      0x00000001 /* RWC-V */
#define NV_PGRAPH_STATE_PITCH_3_05B                      0x00000001 /* RWC-V */
#define NV_PGRAPH_STATE_PITCH_3_096                      0x00000001 /* RWC-V */
#define NV_PGRAPH_STATE_PITCH_3_097                      0x00000001 /* RWC-V */
#define NV_PGRAPH_STATE_PITCH_4                               12:12 /* RWIVF */
#define NV_PGRAPH_STATE_PITCH_4_INVALID                  0x00000000 /* RWI-V */
#define NV_PGRAPH_STATE_PITCH_4_VALID                    0x00000001 /* RW--V */
#define NV_PGRAPH_STATE_CHROMA_COLOR                          16:16 /* RWIVF */
#define NV_PGRAPH_STATE_CHROMA_COLOR_INVALID             0x00000000 /* RWI-V */
#define NV_PGRAPH_STATE_CHROMA_COLOR_VALID               0x00000001 /* RW--V */
#define NV_PGRAPH_STATE_CHROMA_COLOR_057                 0x00000001 /* RWC-V */
#define NV_PGRAPH_STATE_CHROMA_COLORFMT                       17:17 /* RWIVF */
#define NV_PGRAPH_STATE_CHROMA_COLORFMT_INVALID          0x00000000 /* RWI-V */
#define NV_PGRAPH_STATE_CHROMA_COLORFMT_VALID            0x00000001 /* RW--V */
#define NV_PGRAPH_STATE_CHROMA_COLORFMT_017              0x00000001 /* RWC-V */
#define NV_PGRAPH_STATE_CPATTERN_COLORFMT                     20:20 /* RWIVF */
#define NV_PGRAPH_STATE_CPATTERN_COLORFMT_INVALID        0x00000000 /* RWI-V */
#define NV_PGRAPH_STATE_CPATTERN_COLORFMT_VALID          0x00000001 /* RW--V */
#define NV_PGRAPH_STATE_CPATTERN_COLORFMT_044            0x00000001 /* RWC-V */
#define NV_PGRAPH_STATE_CPATTERN_MONOFMT                      21:21 /* RWIVF */
#define NV_PGRAPH_STATE_CPATTERN_MONOFMT_INVALID         0x00000000 /* RWI-V */
#define NV_PGRAPH_STATE_CPATTERN_MONOFMT_VALID           0x00000001 /* RW--V */
#define NV_PGRAPH_STATE_CPATTERN_MONOFMT_044             0x00000001 /* RWC-V */
#define NV_PGRAPH_STATE_CPATTERN_SELECT                       22:22 /* RWIVF */
#define NV_PGRAPH_STATE_CPATTERN_SELECT_INVALID          0x00000000 /* RWI-V */
#define NV_PGRAPH_STATE_CPATTERN_SELECT_VALID            0x00000001 /* RW--V */
#define NV_PGRAPH_STATE_CPATTERN_SELECT_044              0x00000001 /* RWC-V */
#define NV_PGRAPH_STATE_PATTERN_COLOR0                        24:24 /* RWIVF */
#define NV_PGRAPH_STATE_PATTERN_COLOR0_INVALID           0x00000000 /* RWI-V */
#define NV_PGRAPH_STATE_PATTERN_COLOR0_VALID             0x00000001 /* RW--V */
#define NV_PGRAPH_STATE_PATTERN_COLOR0_018               0x00000001 /* RWC-V */
#define NV_PGRAPH_STATE_PATTERN_COLOR1                        25:25 /* RWIVF */
#define NV_PGRAPH_STATE_PATTERN_COLOR1_INVALID           0x00000000 /* RWI-V */
#define NV_PGRAPH_STATE_PATTERN_COLOR1_VALID             0x00000001 /* RW--V */
#define NV_PGRAPH_STATE_PATTERN_COLOR1_018               0x00000001 /* RWC-V */
#define NV_PGRAPH_STATE_PATTERN_PATT0                         26:26 /* RWIVF */
#define NV_PGRAPH_STATE_PATTERN_PATT0_INVALID            0x00000000 /* RWI-V */
#define NV_PGRAPH_STATE_PATTERN_PATT0_VALID              0x00000001 /* RW--V */
#define NV_PGRAPH_STATE_PATTERN_PATT0_018                0x00000001 /* RWC-V */
#define NV_PGRAPH_STATE_PATTERN_PATT1                         27:27 /* RWIVF */
#define NV_PGRAPH_STATE_PATTERN_PATT1_INVALID            0x00000000 /* RWI-V */
#define NV_PGRAPH_STATE_PATTERN_PATT1_VALID              0x00000001 /* RW--V */
#define NV_PGRAPH_STATE_PATTERN_PATT1_018                0x00000001 /* RWC-V */
#define NV_PGRAPH_CACHE_INDEX                            0x00400728 /* RW-4R */
#define NV_PGRAPH_CACHE_INDEX_ADRS                             11:2 /* RWIVF */
#define NV_PGRAPH_CACHE_INDEX_ADRS_TEXTURE_RAM_0         0x00000000 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_ADRS_TEXTURE_RAM_1K        0x00000400 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_ADRS_PALETTE_RAM_0         0x00000000 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_ADRS_PALETTE_RAM_512       0x00000200 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_ADRS_MISS_DATA_RAM_0       0x00000000 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_ADRS_MISS_DATA_RAM_32      0x00000020 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_ADRS_RLATENCY_RAM_0        0x00000000 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_ADRS_RLATENCY_RAM_384      0x00000180 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_ADRS_FLATENCY_RAM_0        0x00000000 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_ADRS_FLATENCY_RAM_448      0x000001C0 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_TEX_PIPE                        15:15 /* RWIVF */
#define NV_PGRAPH_CACHE_INDEX_TEX_PIPE_0                 0x00000000 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_TEX_PIPE_1                 0x00000001 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_OP                              19:16 /* RWIVF */
#define NV_PGRAPH_CACHE_INDEX_OP_NOP                     0x00000000 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_OP_TEXTURE_RAM             0x00000001 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_OP_PALETTE_RAM             0x00000002 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_OP_MISS_DATA_RAM           0x00000003 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_OP_RLATENCY_RAM            0x00000004 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_OP_FLATENCY_RAM            0x00000005 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_RDSEL                           29:24 /* RWIVF */
#define NV_PGRAPH_CACHE_INDEX_RDSEL_NOP                  0x00000000 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_RDSEL_INDEX_REG            0x00000001 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_RDSEL_TIME_CNT             0x00000020 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_RDSEL_CACHE_IDLE_CNT       0x00000021 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_RDSEL_TP0_PIX_CNT          0x00000022 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_RDSEL_TP0_MISS_CNT         0x00000023 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_RDSEL_TP0_COAL_STALL_CNT   0x00000024 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_RDSEL_TP0_REPL_STALL_CNT   0x00000025 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_RDSEL_TP0_MP_Q_STALL_CNT   0x00000026 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_RDSEL_TP0_TEX2MA_STALL_CNT 0x00000027 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_RDSEL_LIT2TEX_STALL_CNT    0x00000028 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_RDSEL_RBFR_FULL_STALL_CNT  0x00000029 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_RDSEL_TP1_PIX_CNT          0x0000002A /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_RDSEL_TP1_MISS_CNT         0x0000002B /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_RDSEL_TP1_COAL_STALL_CNT   0x0000002C /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_RDSEL_TP1_REPL_STALL_CNT   0x0000002D /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_RDSEL_TP1_MP_Q_STALL_CNT   0x0000002E /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_RDSEL_TP1_TEX2MA_STALL_CNT 0x0000002F /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_RDSEL_TEX2LIT_REGLD_CNT    0x00000030 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_RDSEL_C2DMA_TAKEN_CNT      0x00000031 /* RW--V */
#define NV_PGRAPH_CACHE_RAM                              0x0040072c /* RW-4R */
#define NV_PGRAPH_CACHE_RAM_VALUE                              31:0 /* RWXVF */
#define NV_PGRAPH_DMA_PITCH                              0x00400770 /* RW-4R */
#define NV_PGRAPH_DMA_PITCH_S0                                 15:0 /* RWXSF */
#define NV_PGRAPH_DMA_PITCH_S1                                31:16 /* RWXSF */
#define NV_PGRAPH_DVD_COLORFMT                           0x00400774 /* RW-4R */
#define NV_PGRAPH_DVD_COLORFMT_IMAGE                            5:0 /* RWNVF */
#define NV_PGRAPH_DVD_COLORFMT_IMAGE_FORMAT_INVALID            0x00 /* RWN-V */
#define NV_PGRAPH_DVD_COLORFMT_IMAGE_FORMAT_LE_V8YB8U8YA8      0x12 /* RW--V */
#define NV_PGRAPH_DVD_COLORFMT_IMAGE_FORMAT_LE_YB8V8YA8U8      0x13 /* RW--V */
#define NV_PGRAPH_DVD_COLORFMT_OVLY                             9:8 /* RWNVF */
#define NV_PGRAPH_DVD_COLORFMT_OVLY_FORMAT_INVALID             0x00 /* RWN-V */
#define NV_PGRAPH_DVD_COLORFMT_OVLY_FORMAT_LE_A8CR8CB8Y8       0x01 /* RW--V */
#define NV_PGRAPH_DVD_COLORFMT_OVLY_FORMAT_LE_A4CR6YB6A4CB6YA6 0x02 /* RW--V */
#define NV_PGRAPH_DVD_COLORFMT_OVLY_FORMAT_TRANSPARENT         0x03 /* RW--V */
#define NV_PGRAPH_SCALED_FORMAT                          0x00400778 /* RW-4R */
#define NV_PGRAPH_SCALED_FORMAT_ORIGIN                        17:16 /* RWIVF */
#define NV_PGRAPH_SCALED_FORMAT_ORIGIN_INVALID           0x00000000 /* RWI-V */
#define NV_PGRAPH_SCALED_FORMAT_ORIGIN_CENTER            0x00000001 /* RW--V */
#define NV_PGRAPH_SCALED_FORMAT_ORIGIN_CORNER            0x00000002 /* RW--V */
#define NV_PGRAPH_SCALED_FORMAT_INTERPOLATOR                  24:24 /* RWIVF */
#define NV_PGRAPH_SCALED_FORMAT_INTERPOLATOR_ZOH         0x00000000 /* RWI-V */
#define NV_PGRAPH_SCALED_FORMAT_INTERPOLATOR_FOH         0x00000001 /* RW--V */
#define NV_PGRAPH_STATE3D                                0x0040077C /* RW-4R */
#define NV_PGRAPH_STATE3D_CELSIUS_TAG_ID                       15:0 /* RWIVF */
#define NV_PGRAPH_STATE3D_CELSIUS_TAG_ID_0               0x00000000 /* RWI-V */
#define NV_PGRAPH_STATE3D_CHANNEL_ID                          20:16 /* RWIVF */
#define NV_PGRAPH_STATE3D_CHANNEL_ID_0                   0x00000000 /* RWI-V */
#define NV_PGRAPH_STATE3D_CELSIUS_TAG_VALID                   24:24 /* RWIVF */
#define NV_PGRAPH_STATE3D_CELSIUS_TAG_VALID_FALSE        0x00000000 /* RWI-V */
#define NV_PGRAPH_STATE3D_CELSIUS_TAG_VALID_TRUE         0x00000001 /* RW--V */
#define NV_PGRAPH_STATE3D_CHANNEL_VALID                       25:25 /* RWIVF */
#define NV_PGRAPH_STATE3D_CHANNEL_VALID_FALSE            0x00000000 /* RWI-V */
#define NV_PGRAPH_STATE3D_CHANNEL_VALID_TRUE             0x00000001 /* RW--V */
#define NV_PGRAPH_CHANNEL_CTX_TABLE                      0x00400780 /* RW-4R */
#define NV_PGRAPH_CHANNEL_CTX_TABLE_INST                       15:0 /* RWIVF */
#define NV_PGRAPH_CHANNEL_CTX_TABLE_INST_0               0x00000000 /* RWI-V */
#define NV_PGRAPH_CHANNEL_CTX_POINTER                    0x00400784 /* RW-4R */
#define NV_PGRAPH_CHANNEL_CTX_POINTER_INST                     15:0 /* RWIVF */
#define NV_PGRAPH_CHANNEL_CTX_POINTER_INST_0             0x00000000 /* RWI-V */
#define NV_PGRAPH_CHANNEL_CTX_TRIGGER                    0x00400788 /* RW-4R */
#define NV_PGRAPH_CHANNEL_CTX_TRIGGER_READ_IN                   0:0 /* CWIVF */
#define NV_PGRAPH_CHANNEL_CTX_TRIGGER_READ_IN_IGNORE     0x00000000 /* CWI-V */
#define NV_PGRAPH_CHANNEL_CTX_TRIGGER_READ_IN_ACTIVATE   0x00000001 /* -W--T */
#define NV_PGRAPH_CHANNEL_CTX_TRIGGER_WRITE_OUT                 1:1 /* CWIVF */
#define NV_PGRAPH_CHANNEL_CTX_TRIGGER_WRITE_OUT_IGNORE   0x00000000 /* CWI-V */
#define NV_PGRAPH_CHANNEL_CTX_TRIGGER_WRITE_OUT_ACTIVATE 0x00000001 /* -W--T */
#define NV_PGRAPH_RDI_INDEX                              0x00400750 /* RW-4R */
#define NV_PGRAPH_RDI_INDEX_ADDRESS                            12:2 /* RWXVF */
#define NV_PGRAPH_RDI_INDEX_ADDRESS_0                    0x00000000 /* RW--V */
#define NV_PGRAPH_RDI_INDEX_SELECT                            24:16 /* RWXVF */
#define NV_PGRAPH_RDI_INDEX_SELECT_0                     0x00000000 /* RW--V */
#define NV_PGRAPH_RDI_DATA                               0x00400754 /* RW-4R */
#define NV_PGRAPH_RDI_DATA_VALUE                               31:0 /* RWXVF */
#define NV_PGRAPH_RDI_DEBUG_DATA                         0x00400758 /* RW-4R */
#define NV_PGRAPH_RDI_DEBUG_DATA_VALUE                         31:0 /* RWXVF */
#define NV_PGRAPH_PATT_COLOR0                            0x00400b10 /* RW-4R */
#define NV_PGRAPH_PATT_COLOR0_VALUE                            31:0 /* RWXUF */
#define NV_PGRAPH_PATT_COLOR0_VALUE_018                  0x00000000 /* RWC-V */
#define NV_PGRAPH_PATT_COLOR0_VALUE_044                  0x00000000 /* RWC-V */
#define NV_PGRAPH_PATT_COLOR1                            0x00400b14 /* RW-4R */
#define NV_PGRAPH_PATT_COLOR1_VALUE                            31:0 /* RWXUF */
#define NV_PGRAPH_PATT_COLOR1_VALUE_018                  0x00000000 /* RWC-V */
#define NV_PGRAPH_PATT_COLOR1_VALUE_044                  0x00000000 /* RWC-V */
#define NV_PGRAPH_PATT_COLORRAM(i)               (0x00400a00+(i)*4) /* RW-4A */
#define NV_PGRAPH_PATT_COLORRAM__SIZE_1                          64 /*       */
#define NV_PGRAPH_PATT_COLORRAM_VALUE                          23:0 /* RWXUF */
#define NV_PGRAPH_PATT_COLORRAM_VALUE_044                0x00000000 /* RWC-V */
#define NV_PGRAPH_PATTERN(i)                     (0x00400b18+(i)*4) /* RW-4A */
#define NV_PGRAPH_PATTERN__SIZE_1                                 2 /*       */
#define NV_PGRAPH_PATTERN_BITMAP                               31:0 /* RWXVF */
#define NV_PGRAPH_PATTERN_BITMAP_018                     0x00000000 /* RWC-V */
#define NV_PGRAPH_PATTERN_BITMAP_044                     0x00000000 /* RWC-V */
#define NV_PGRAPH_PATTERN_SHAPE                          0x00400b20 /* RW-4R */
#define NV_PGRAPH_PATTERN_SHAPE_VALUE                           1:0 /* RWXVF */
#define NV_PGRAPH_PATTERN_SHAPE_VALUE_8X_8Y              0x00000000 /* RW--V */
#define NV_PGRAPH_PATTERN_SHAPE_VALUE_64X_1Y             0x00000001 /* RW--V */
#define NV_PGRAPH_PATTERN_SHAPE_VALUE_1X_64Y             0x00000002 /* RW--V */
#define NV_PGRAPH_PATTERN_SHAPE_VALUE_018                0x00000000 /* RWC-V */
#define NV_PGRAPH_PATTERN_SHAPE_VALUE_044                0x00000000 /* RWC-V */
#define NV_PGRAPH_PATTERN_SHAPE_SELECT                          4:4 /* RWXVF */
#define NV_PGRAPH_PATTERN_SHAPE_SELECT_2COLOR            0x00000000 /* RW--V */
#define NV_PGRAPH_PATTERN_SHAPE_SELECT_FULLCOLOR         0x00000001 /* RW--V */
#define NV_PGRAPH_PATTERN_SHAPE_SELECT_044               0x00000000 /* RWC-V */
#define NV_PGRAPH_MONO_COLOR0                            0x00400814 /* RW-4R */
#define NV_PGRAPH_MONO_COLOR0_VALUE                            31:0 /* RWXUF */
#define NV_PGRAPH_ROP3                                   0x00400b00 /* RW-4R */
#define NV_PGRAPH_ROP3_VALUE                                    7:0 /* RWXVF */
#define NV_PGRAPH_ROP3_VALUE_043                         0x00000000 /* RWC-V */
#define NV_PGRAPH_CHROMA                                 0x0040087c /* RW-4R */
#define NV_PGRAPH_CHROMA_VALUE                                 31:0 /* RWXUF */
#define NV_PGRAPH_CHROMA_VALUE_017                       0x00000000 /* RWC-V */
#define NV_PGRAPH_CHROMA_VALUE_057                       0x00000000 /* RWC-V */
#define NV_PGRAPH_BETA_AND                               0x00400b04 /* RW-4R */
#define NV_PGRAPH_BETA_AND_VALUE_FRACTION                     30:23 /* RWXUF */
#define NV_PGRAPH_BETA_AND_VALUE_FRACTION_012            0x00000000 /* RWC-V */
#define NV_PGRAPH_BETA_PREMULT                           0x00400b08 /* RW-4R */
#define NV_PGRAPH_BETA_PREMULT_VALUE                           31:0 /* RWXUF */
#define NV_PGRAPH_BETA_PREMULT_VALUE_072                 0x00000000 /* RWC-V */
#define NV_PGRAPH_STORED_FMT                             0x00400b0c /* RW-4R */
#define NV_PGRAPH_STORED_FMT_MONO0                              5:0 /* RWXVF */
#define NV_PGRAPH_STORED_FMT_MONO0_04A                   0x0000000C /* RWC-V */
#define NV_PGRAPH_STORED_FMT_PATT0                             13:8 /* RWXVF */
#define NV_PGRAPH_STORED_FMT_PATT0_044                   0x0000000B /* RWC-V */
#define NV_PGRAPH_STORED_FMT_PATT1                            21:16 /* RWXVF */
#define NV_PGRAPH_STORED_FMT_PATT1_044                   0x0000000B /* RWC-V */
#define NV_PGRAPH_STORED_FMT_CHROMA                           29:24 /* RWXVF */
#define NV_PGRAPH_STORED_FMT_CHROMA_057                  0x0000000B /* RWC-V */
#define NV_PGRAPH_PREROP_TILEBIT                         0x00400888 /* RW-4R */
#define NV_PGRAPH_PREROP_TILEBIT_BUF0                           0:0 /* RWXVF */
#define NV_PGRAPH_PREROP_TILEBIT_BUF0_LINEAR             0x00000000 /* RWI-V */
#define NV_PGRAPH_PREROP_TILEBIT_BUF0_TILED              0x00000001 /* RW--V */
#define NV_PGRAPH_PREROP_TILEBIT_BUF1                           1:1 /* RWXVF */
#define NV_PGRAPH_PREROP_TILEBIT_BUF1_LINEAR             0x00000000 /* RWI-V */
#define NV_PGRAPH_PREROP_TILEBIT_BUF1_TILED              0x00000001 /* RW--V */
#define NV_PGRAPH_PREROP_TILEBIT_BUF2                           2:2 /* RWXVF */
#define NV_PGRAPH_PREROP_TILEBIT_BUF2_LINEAR             0x00000000 /* RWI-V */
#define NV_PGRAPH_PREROP_TILEBIT_BUF2_TILED              0x00000001 /* RW--V */
#define NV_PGRAPH_PREROP_TILEBIT_BUF3                           3:3 /* RWXVF */
#define NV_PGRAPH_PREROP_TILEBIT_BUF3_LINEAR             0x00000000 /* RWI-V */
#define NV_PGRAPH_PREROP_TILEBIT_BUF3_TILED              0x00000001 /* RW--V */
#define NV_PGRAPH_PREROP_TILEBIT_BUF4                           4:4 /* RWXVF */
#define NV_PGRAPH_PREROP_TILEBIT_BUF4_LINEAR             0x00000000 /* RWI-V */
#define NV_PGRAPH_PREROP_TILEBIT_BUF4_TILED              0x00000001 /* RW--V */
#define NV_PGRAPH_PREROP_TILEBIT_BUF5                           5:5 /* RWXVF */
#define NV_PGRAPH_PREROP_TILEBIT_BUF5_LINEAR             0x00000000 /* RWI-V */
#define NV_PGRAPH_PREROP_TILEBIT_BUF5_TILED              0x00000001 /* RW--V */
#define NV_PGRAPH_FORMATS                                0x00400804 /* R--4R */
#define NV_PGRAPH_FORMATS_ROP                                   2:0 /* R-XVF */
#define NV_PGRAPH_FORMATS_ROP_Y8                         0x00000000 /* R---V */
#define NV_PGRAPH_FORMATS_ROP_RGB15                      0x00000001 /* R---V */
#define NV_PGRAPH_FORMATS_ROP_RGB16                      0x00000002 /* R---V */
#define NV_PGRAPH_FORMATS_ROP_Y16                        0x00000003 /* R---V */
#define NV_PGRAPH_FORMATS_ROP_RGB24                      0x00000005 /* R---V */
#define NV_PGRAPH_FORMATS_ROP_Y32                        0x00000007 /* R---V */
#define NV_PGRAPH_FORMATS_SRC                                   9:4 /* R-XVF */
#define NV_PGRAPH_FORMATS_SRC_INVALID                    0x00000000 /* R---V */
#define NV_PGRAPH_FORMATS_SRC_LE_Y8                      0x00000001 /* R---V */
#define NV_PGRAPH_FORMATS_SRC_LE_X16A8Y8                 0x00000002 /* R---V */
#define NV_PGRAPH_FORMATS_SRC_LE_X24Y8                   0x00000003 /* R---V */
#define NV_PGRAPH_FORMATS_SRC_LE_A1R5G5B5                0x00000006 /* R---V */
#define NV_PGRAPH_FORMATS_SRC_LE_X1R5G5B5                0x00000007 /* R---V */
#define NV_PGRAPH_FORMATS_SRC_LE_X16A1R5G5B5             0x00000008 /* R---V */
#define NV_PGRAPH_FORMATS_SRC_LE_X17R5G5B5               0x00000009 /* R---V */
#define NV_PGRAPH_FORMATS_SRC_LE_R5G6B5                  0x0000000A /* R---V */
#define NV_PGRAPH_FORMATS_SRC_LE_A16R5G6B5               0x0000000B /* R---V */
#define NV_PGRAPH_FORMATS_SRC_LE_X16R5G6B5               0x0000000C /* R---V */
#define NV_PGRAPH_FORMATS_SRC_LE_A8R8G8B8                0x0000000D /* R---V */
#define NV_PGRAPH_FORMATS_SRC_LE_X8R8G8B8                0x0000000E /* R---V */
#define NV_PGRAPH_FORMATS_SRC_LE_Y16                     0x0000000F /* R---V */
#define NV_PGRAPH_FORMATS_SRC_LE_A16Y16                  0x00000010 /* R---V */
#define NV_PGRAPH_FORMATS_SRC_LE_X16Y16                  0x00000011 /* R---V */
#define NV_PGRAPH_FORMATS_SRC_LE_V8YB8U8YA8              0x00000012 /* R---V */
#define NV_PGRAPH_FORMATS_SRC_LE_YB8V8YA8U8              0x00000013 /* R---V */
#define NV_PGRAPH_FORMATS_SRC_LE_Y32                     0x00000014 /* R---V */
#define NV_PGRAPH_FORMATS_SRC_LE_AY8                     0x00000015 /* R---V */
#define NV_PGRAPH_FORMATS_SRC_LE_EYB8ECR8EYA8ECB8        0x00000016 /* R---V */
#define NV_PGRAPH_FORMATS_SRC_LE_ECR8EYB8ECB8EYA8        0x00000017 /* R---V */
#define NV_PGRAPH_FORMATS_FB                                  15:12 /* R-XVF */
#define NV_PGRAPH_FORMATS_FB_INVALID                     0x00000000 /* R---V */
#define NV_PGRAPH_FORMATS_FB_Y8                          0x00000001 /* R---V */
#define NV_PGRAPH_FORMATS_FB_X1R5G5B5_Z1R5G5B5           0x00000002 /* R---V */
#define NV_PGRAPH_FORMATS_FB_X1R5G5B5_O1R5G5B5           0x00000003 /* R---V */
#define NV_PGRAPH_FORMATS_FB_A1R5G5B5                    0x00000004 /* R---V */
#define NV_PGRAPH_FORMATS_FB_R5G6B5                      0x00000005 /* R---V */
#define NV_PGRAPH_FORMATS_FB_Y16                         0x00000006 /* R---V */
#define NV_PGRAPH_FORMATS_FB_X8R8G8B8_Z8R8G8B8           0x00000007 /* R---V */
#define NV_PGRAPH_FORMATS_FB_X8R8G8B8_O1Z7R8G8B8         0x00000008 /* R---V */
#define NV_PGRAPH_FORMATS_FB_X1A7R8G8B8_Z1A7R8G8B8       0x00000009 /* R---V */
#define NV_PGRAPH_FORMATS_FB_X1A7R8G8B8_O1A7R8G8B8       0x0000000a /* R---V */
#define NV_PGRAPH_FORMATS_FB_X8R8G8B8_O8R8G8B8           0x0000000b /* R---V */
#define NV_PGRAPH_FORMATS_FB_A8R8G8B8                    0x0000000c /* R---V */
#define NV_PGRAPH_FORMATS_FB_Y32                         0x0000000d /* R---V */
#define NV_PGRAPH_FORMATS_FB_V8YB8U8YA8                  0x0000000e /* R---V */
#define NV_PGRAPH_FORMATS_FB_YB8V8YA8U8                  0x0000000f /* R---V */
#define NV_PGRAPH_FORMATS_ZB                                  19:18 /* R-XVF */
#define NV_PGRAPH_FORMATS_ZB_INVALID                     0x00000000 /* R---V */
#define NV_PGRAPH_FORMATS_ZB_Z16                         0x00000001 /* R---V */
#define NV_PGRAPH_FORMATS_ZB_Z24S8                       0x00000002 /* R---V */
#define NV_PGRAPH_ROPMODE                                0x00400808 /* R--4R */
#define NV_PGRAPH_ROPMODE_CBYTES                                1:0 /* R-XVF */
#define NV_PGRAPH_ROPMODE_CBYTES_1                       0x00000000 /* R---V */
#define NV_PGRAPH_ROPMODE_CBYTES_2                       0x00000001 /* R---V */
#define NV_PGRAPH_ROPMODE_CBYTES_4                       0x00000002 /* R---V */
#define NV_PGRAPH_ROPMODE_ZBYTES                                3:2 /* R-XVF */
#define NV_PGRAPH_ROPMODE_ZBYTES_1                       0x00000000 /* R---V */
#define NV_PGRAPH_ROPMODE_ZBYTES_2                       0x00000001 /* R---V */
#define NV_PGRAPH_ROPMODE_ZBYTES_4                       0x00000002 /* R---V */
#define NV_PGRAPH_ROPMODE_SWIZZLE                               4:4 /* R-XVF */
#define NV_PGRAPH_ROPMODE_SWIZZLE_DISABLE                0x00000000 /* R---V */
#define NV_PGRAPH_ROPMODE_SWIZZLE_ENABLE                 0x00000001 /* R---V */
#define NV_PGRAPH_ROPMODE_PSEUDO                                5:5 /* R-XVF */
#define NV_PGRAPH_ROPMODE_PSEUDO_DISABLE                 0x00000000 /* R---V */
#define NV_PGRAPH_ROPMODE_PSEUDO_ENABLE                  0x00000001 /* R---V */
#define NV_PGRAPH_ROPMODE_TYPE                                  7:6 /* R-XVF */
#define NV_PGRAPH_ROPMODE_TYPE_3D                        0x00000000 /* R---V */
#define NV_PGRAPH_ROPMODE_TYPE_CLEAR                     0x00000001 /* R---V */
#define NV_PGRAPH_ROPMODE_TYPE_2D                        0x00000002 /* R---V */
#define NV_PGRAPH_ROPMODE_TYPE_BLT                       0x00000003 /* R---V */
#define NV_PGRAPH_ROPMODE_BUS                                   7:0 /* R-XVF */
#define NV_PGRAPH_ROPMODE_BUS_Z32_C32                    0x0000000A /* R---V */
#define NV_PGRAPH_ROPMODE_BUS_Z32_CPSEUDO32              0x0000002A /* R---V */
#define NV_PGRAPH_ROPMODE_BUS_Z32_C16                    0x00000009 /* R---V */
#define NV_PGRAPH_ROPMODE_BUS_Z32_C32_SWIZZLE            0x0000001A /* R---V */
#define NV_PGRAPH_ROPMODE_BUS_Z16_C32                    0x00000006 /* R---V */
#define NV_PGRAPH_ROPMODE_BUS_Z16_CPSEUDO32              0x00000026 /* R---V */
#define NV_PGRAPH_ROPMODE_BUS_Z16_C16                    0x00000005 /* R---V */
#define NV_PGRAPH_ROPMODE_BUS_Z16_CPSEUDO32_SWIZZLE      0x00000036 /* R---V */
#define NV_PGRAPH_ROPMODE_BUS_Z16_C16_SWIZZLE            0x00000015 /* R---V */
#define NV_PGRAPH_ROPMODE_BUS_ZNULL_C8                   0x00000000 /* R---V */
#define NV_PGRAPH_ROPMODE_BUS_ZNULL_C8_SWIZZLE           0x00000010 /* R---V */
#define NV_PGRAPH_ROPMODE_BUS_2D32                       0x0000008A /* R---V */
#define NV_PGRAPH_ROPMODE_BUS_2DPSEUDO32                 0x000000A6 /* R---V */
#define NV_PGRAPH_ROPMODE_BUS_2D16                       0x00000085 /* R---V */
#define NV_PGRAPH_ROPMODE_BUS_2D8                        0x00000080 /* R---V */
#define NV_PGRAPH_ROPMODE_BUS_2D32_SWIZZLE               0x0000009A /* R---V */
#define NV_PGRAPH_ROPMODE_BUS_2DPSEUDO32_SWIZZLE         0x000000B6 /* R---V */
#define NV_PGRAPH_ROPMODE_BUS_2D16_SWIZZLE               0x00000095 /* R---V */
#define NV_PGRAPH_ROPMODE_BUS_2D8_SWIZZLE                0x00000090 /* R---V */
#define NV_PGRAPH_ROPMODE_BUS_CLEAR32                    0x0000004A /* R---V */
#define NV_PGRAPH_ROPMODE_BUS_CLEAR16                    0x00000045 /* R---V */
#define NV_PGRAPH_ROPMODE_BUS_BLT32                      0x000000CA /* R---V */
#define NV_PGRAPH_ROPMODE_BUS_BLT16                      0x000000C5 /* R---V */
#define NV_PGRAPH_ROPMODE_BUS_BLT8                       0x000000C0 /* R---V */
#define NV_PGRAPH_ROPMODE_ZTILEMODE                             9:8 /* R-XVF */
#define NV_PGRAPH_ROPMODE_ZTILEMODE_NULL                 0x00000000 /* R---V */
#define NV_PGRAPH_ROPMODE_ZTILEMODE_LINEAR               0x00000001 /* R---V */
#define NV_PGRAPH_ROPMODE_ZTILEMODE_TILED                0x00000002 /* R---V */
#define NV_PGRAPH_ROPMODE_CTILEMODE                           11:10 /* R-XVF */
#define NV_PGRAPH_ROPMODE_CTILEMODE_NULL                 0x00000000 /* R---V */
#define NV_PGRAPH_ROPMODE_CTILEMODE_LINEAR               0x00000001 /* R---V */
#define NV_PGRAPH_ROPMODE_CTILEMODE_TILED                0x00000002 /* R---V */
#define NV_PGRAPH_PROPSTATE                              0x00400884 /* R--4R */
#define NV_PGRAPH_PROPSTATE_VALUE                              31:0 /* R-XVF */
#define NV_PGRAPH_ABS_X_RAM(i)                   (0x00400400+(i)*4) /* RW-4A */
#define NV_PGRAPH_ABS_X_RAM__SIZE_1                              10 /*       */
#define NV_PGRAPH_ABS_X_RAM_VALUE                              31:0 /* RWXUF */
#define NV_PGRAPH_X_RAM_BPORT(i)                 (0x00400c00+(i)*4) /* R--4A */
#define NV_PGRAPH_X_RAM_BPORT__SIZE_1                            10 /*       */
#define NV_PGRAPH_X_RAM_BPORT_VALUE                            31:0 /* R--UF */
#define NV_PGRAPH_ABS_Y_RAM(i)                   (0x00400480+(i)*4) /* RW-4A */
#define NV_PGRAPH_ABS_Y_RAM__SIZE_1                              10 /*       */
#define NV_PGRAPH_ABS_Y_RAM_VALUE                              31:0 /* RWXUF */
#define NV_PGRAPH_Y_RAM_BPORT(i)                 (0x00400c80+(i)*4) /* R--4A */
#define NV_PGRAPH_Y_RAM_BPORT__SIZE_1                            10 /*       */
#define NV_PGRAPH_Y_RAM_BPORT_VALUE                            31:0 /* R--UF */
#define NV_PGRAPH_XY_LOGIC_MISC0                         0x00400514 /* RW-4R */
#define NV_PGRAPH_XY_LOGIC_MISC0_COUNTER                       17:0 /* RWBUF */
#define NV_PGRAPH_XY_LOGIC_MISC0_COUNTER_0               0x00000000 /* RWB-V */
#define NV_PGRAPH_XY_LOGIC_MISC0_DIMENSION                    20:20 /* RWVVF */
#define NV_PGRAPH_XY_LOGIC_MISC0_DIMENSION_NONZERO       0x00000000 /* RWV-V */
#define NV_PGRAPH_XY_LOGIC_MISC0_DIMENSION_ZERO          0x00000001 /* RW--V */
#define NV_PGRAPH_XY_LOGIC_MISC0_IMAGE_DATA_64                24:24 /* RWVVF */
#define NV_PGRAPH_XY_LOGIC_MISC0_IMAGE_DATA_64_FALSE     0x00000000 /* RWV-V */
#define NV_PGRAPH_XY_LOGIC_MISC0_IMAGE_DATA_64_TRUE      0x00000001 /* RW--V */
#define NV_PGRAPH_XY_LOGIC_MISC0_INDEX                        31:28 /* RWBUF */
#define NV_PGRAPH_XY_LOGIC_MISC0_INDEX_0                 0x00000000 /* RWB-V */
#define NV_PGRAPH_XY_LOGIC_MISC1                         0x00400518 /* RW-4R */
#define NV_PGRAPH_XY_LOGIC_MISC1_INITIAL                        0:0 /* RWNVF */
#define NV_PGRAPH_XY_LOGIC_MISC1_INITIAL_NEEDED          0x00000000 /* RWN-V */
#define NV_PGRAPH_XY_LOGIC_MISC1_INITIAL_DONE            0x00000001 /* RW--V */
#define NV_PGRAPH_XY_LOGIC_MISC1_XTRACLIPX                      4:4 /* RWIVF */
#define NV_PGRAPH_XY_LOGIC_MISC1_XTRACLIPX_NOTNULL       0x00000000 /* RWI-V */
#define NV_PGRAPH_XY_LOGIC_MISC1_XTRACLIPX_NULL          0x00000001 /* RW--V */
#define NV_PGRAPH_XY_LOGIC_MISC1_XTRACLIPY                      5:5 /* RWIVF */
#define NV_PGRAPH_XY_LOGIC_MISC1_XTRACLIPY_NOTNULL       0x00000000 /* RWI-V */
#define NV_PGRAPH_XY_LOGIC_MISC1_XTRACLIPY_NULL          0x00000001 /* RW--V */
#define NV_PGRAPH_XY_LOGIC_MISC1_SEL_XIMAX                    12:12 /* RWIVF */
#define NV_PGRAPH_XY_LOGIC_MISC1_SEL_XIMAX_UUMAX         0x00000000 /* RWI-V */
#define NV_PGRAPH_XY_LOGIC_MISC1_SEL_XIMAX_IMAGEMAX      0x00000001 /* RW--V */
#define NV_PGRAPH_XY_LOGIC_MISC1_SEL_YIMAX                    16:16 /* RWIVF */
#define NV_PGRAPH_XY_LOGIC_MISC1_SEL_YIMAX_UUMAX         0x00000000 /* RWI-V */
#define NV_PGRAPH_XY_LOGIC_MISC1_SEL_YIMAX_IMAGEMAX      0x00000001 /* RW--V */
#define NV_PGRAPH_XY_LOGIC_MISC1_SEL_XXTRA                    20:20 /* RWIVF */
#define NV_PGRAPH_XY_LOGIC_MISC1_SEL_XXTRA_CLIPMAX       0x00000000 /* RWI-V */
#define NV_PGRAPH_XY_LOGIC_MISC1_SEL_XXTRA_IMAGEMAX      0x00000001 /* RW--V */
#define NV_PGRAPH_XY_LOGIC_MISC2                         0x0040051C /* RW-4R */
#define NV_PGRAPH_XY_LOGIC_MISC2_HANDOFF                        0:0 /* RWIVF */
#define NV_PGRAPH_XY_LOGIC_MISC2_HANDOFF_DISABLE         0x00000000 /* RWI-V */
#define NV_PGRAPH_XY_LOGIC_MISC2_HANDOFF_ENABLE          0x00000001 /* RW--V */
#define NV_PGRAPH_XY_LOGIC_MISC2_XTRACLIPX                      4:4 /* RWIVF */
#define NV_PGRAPH_XY_LOGIC_MISC2_XTRACLIPX_NOTNULL       0x00000000 /* RWI-V */
#define NV_PGRAPH_XY_LOGIC_MISC2_XTRACLIPX_NULL          0x00000001 /* RW--V */
#define NV_PGRAPH_XY_LOGIC_MISC2_XTRACLIPY                      5:5 /* RWIVF */
#define NV_PGRAPH_XY_LOGIC_MISC2_XTRACLIPY_NOTNULL       0x00000000 /* RWI-V */
#define NV_PGRAPH_XY_LOGIC_MISC2_XTRACLIPY_NULL          0x00000001 /* RW--V */
#define NV_PGRAPH_XY_LOGIC_MISC2_SEL_XIMAX                    12:12 /* RWIVF */
#define NV_PGRAPH_XY_LOGIC_MISC2_SEL_XIMAX_UCMAX         0x00000000 /* RWI-V */
#define NV_PGRAPH_XY_LOGIC_MISC2_SEL_XIMAX_IMAGEMAX      0x00000001 /* RW--V */
#define NV_PGRAPH_XY_LOGIC_MISC2_SEL_YIMAX                    16:16 /* RWIVF */
#define NV_PGRAPH_XY_LOGIC_MISC2_SEL_YIMAX_UCMAX         0x00000000 /* RWI-V */
#define NV_PGRAPH_XY_LOGIC_MISC2_SEL_YIMAX_IMAGEMAX      0x00000001 /* RW--V */
#define NV_PGRAPH_XY_LOGIC_MISC2_SEL_XXTRA                    20:20 /* RWIVF */
#define NV_PGRAPH_XY_LOGIC_MISC2_SEL_XXTRA_CLIPMAX       0x00000000 /* RWI-V */
#define NV_PGRAPH_XY_LOGIC_MISC2_SEL_XXTRA_IMAGEMAX      0x00000001 /* RW--V */
#define NV_PGRAPH_XY_LOGIC_MISC3                         0x00400520 /* RW-4R */
#define NV_PGRAPH_XY_LOGIC_MISC3_WDIMY_EQ_0                     0:0 /* RWXVF */
#define NV_PGRAPH_XY_LOGIC_MISC3_WDIMY_EQ_0_NULL         0x00000000 /* RW--V */
#define NV_PGRAPH_XY_LOGIC_MISC3_WDIMY_EQ_0_TRUE         0x00000001 /* RW--V */
#define NV_PGRAPH_XY_LOGIC_MISC3_RELOAD_WDIMY                   4:4 /* RWXVF */
#define NV_PGRAPH_XY_LOGIC_MISC3_RELOAD_WDIMY_NULL       0x00000000 /* RW--V */
#define NV_PGRAPH_XY_LOGIC_MISC3_RELOAD_WDIMY_TRUE       0x00000001 /* RW--V */
#define NV_PGRAPH_XY_LOGIC_MISC3_RELOAD_WX                      8:8 /* RWIVF */
#define NV_PGRAPH_XY_LOGIC_MISC3_RELOAD_WX_NULL          0x00000000 /* RWI-V */
#define NV_PGRAPH_XY_LOGIC_MISC3_RELOAD_WX_TRUE          0x00000001 /* RW--V */
#define NV_PGRAPH_XY_LOGIC_MISC3_TEXT_ALG                     12:12 /* RWIVF */
#define NV_PGRAPH_XY_LOGIC_MISC3_TEXT_ALG_NULL           0x00000000 /* RWI-V */
#define NV_PGRAPH_XY_LOGIC_MISC3_TEXT_ALG_TRUE           0x00000001 /* RW--V */
#define NV_PGRAPH_XY_LOGIC_MISC3_TEXT_DIMX                    22:16 /* RWXUF */
#define NV_PGRAPH_XY_LOGIC_MISC3_TEXT_DIMX_0             0x00000000 /* RW--V */
#define NV_PGRAPH_XY_LOGIC_MISC3_TEXT_WDIMX                   30:24 /* RWXUF */
#define NV_PGRAPH_XY_LOGIC_MISC3_TEXT_WDIMX_0            0x00000000 /* RW--V */
#define NV_PGRAPH_X_MISC                                 0x00400500 /* RW-4R */
#define NV_PGRAPH_X_MISC_BIT33_0                                0:0 /* RWNVF */
#define NV_PGRAPH_X_MISC_BIT33_0_0                       0x00000000 /* RWN-V */
#define NV_PGRAPH_X_MISC_BIT33_1                                1:1 /* RWNVF */
#define NV_PGRAPH_X_MISC_BIT33_1_0                       0x00000000 /* RWN-V */
#define NV_PGRAPH_X_MISC_BIT33_2                                2:2 /* RWNVF */
#define NV_PGRAPH_X_MISC_BIT33_2_0                       0x00000000 /* RWN-V */
#define NV_PGRAPH_X_MISC_BIT33_3                                3:3 /* RWNVF */
#define NV_PGRAPH_X_MISC_BIT33_3_0                       0x00000000 /* RWN-V */
#define NV_PGRAPH_X_MISC_RANGE_0                                4:4 /* RWNVF */
#define NV_PGRAPH_X_MISC_RANGE_0_0                       0x00000000 /* RWN-V */
#define NV_PGRAPH_X_MISC_RANGE_1                                5:5 /* RWNVF */
#define NV_PGRAPH_X_MISC_RANGE_1_0                       0x00000000 /* RWN-V */
#define NV_PGRAPH_X_MISC_RANGE_2                                6:6 /* RWNVF */
#define NV_PGRAPH_X_MISC_RANGE_2_0                       0x00000000 /* RWN-V */
#define NV_PGRAPH_X_MISC_RANGE_3                                7:7 /* RWNVF */
#define NV_PGRAPH_X_MISC_RANGE_3_0                       0x00000000 /* RWN-V */
#define NV_PGRAPH_X_MISC_ADDER_OUTPUT                         29:28 /* RWXVF */
#define NV_PGRAPH_X_MISC_ADDER_OUTPUT_EQ_0               0x00000000 /* RW--V */
#define NV_PGRAPH_X_MISC_ADDER_OUTPUT_LT_0               0x00000001 /* RW--V */
#define NV_PGRAPH_X_MISC_ADDER_OUTPUT_GT_0               0x00000002 /* RW--V */
#define NV_PGRAPH_Y_MISC                                 0x00400504 /* RW-4R */
#define NV_PGRAPH_Y_MISC_BIT33_0                                0:0 /* RWNVF */
#define NV_PGRAPH_Y_MISC_BIT33_0_0                       0x00000000 /* RWN-V */
#define NV_PGRAPH_Y_MISC_BIT33_1                                1:1 /* RWNVF */
#define NV_PGRAPH_Y_MISC_BIT33_1_0                       0x00000000 /* RWN-V */
#define NV_PGRAPH_Y_MISC_BIT33_2                                2:2 /* RWNVF */
#define NV_PGRAPH_Y_MISC_BIT33_2_0                       0x00000000 /* RWN-V */
#define NV_PGRAPH_Y_MISC_BIT33_3                                3:3 /* RWNVF */
#define NV_PGRAPH_Y_MISC_BIT33_3_0                       0x00000000 /* RWN-V */
#define NV_PGRAPH_Y_MISC_RANGE_0                                4:4 /* RWNVF */
#define NV_PGRAPH_Y_MISC_RANGE_0_0                       0x00000000 /* RWN-V */
#define NV_PGRAPH_Y_MISC_RANGE_1                                5:5 /* RWNVF */
#define NV_PGRAPH_Y_MISC_RANGE_1_0                       0x00000000 /* RWN-V */
#define NV_PGRAPH_Y_MISC_RANGE_2                                6:6 /* RWNVF */
#define NV_PGRAPH_Y_MISC_RANGE_2_0                       0x00000000 /* RWN-V */
#define NV_PGRAPH_Y_MISC_RANGE_3                                7:7 /* RWNVF */
#define NV_PGRAPH_Y_MISC_RANGE_3_0                       0x00000000 /* RWN-V */
#define NV_PGRAPH_Y_MISC_ADDER_OUTPUT                         29:28 /* RWXVF */
#define NV_PGRAPH_Y_MISC_ADDER_OUTPUT_EQ_0               0x00000000 /* RW--V */
#define NV_PGRAPH_Y_MISC_ADDER_OUTPUT_LT_0               0x00000001 /* RW--V */
#define NV_PGRAPH_Y_MISC_ADDER_OUTPUT_GT_0               0x00000002 /* RW--V */
#define NV_PGRAPH_ABS_UCLIP_XMIN                         0x0040053C /* RW-4R */
#define NV_PGRAPH_ABS_UCLIP_XMIN_VALUE                         15:0 /* RWXSF */
#define NV_PGRAPH_ABS_UCLIP_XMIN_VALUE_019               0x00000000 /* RWC-V */
#define NV_PGRAPH_ABS_UCLIP_XMAX                         0x00400544 /* RW-4R */
#define NV_PGRAPH_ABS_UCLIP_XMAX_VALUE                         17:0 /* RWXSF */
#define NV_PGRAPH_ABS_UCLIP_XMAX_VALUE_019               0x00000000 /* RWC-V */
#define NV_PGRAPH_ABS_UCLIP_YMIN                         0x00400540 /* RW-4R */
#define NV_PGRAPH_ABS_UCLIP_YMIN_VALUE                         15:0 /* RWXSF */
#define NV_PGRAPH_ABS_UCLIP_YMIN_VALUE_019               0x00000000 /* RWC-V */
#define NV_PGRAPH_ABS_UCLIP_YMAX                         0x00400548 /* RW-4R */
#define NV_PGRAPH_ABS_UCLIP_YMAX_VALUE                         17:0 /* RWXSF */
#define NV_PGRAPH_ABS_UCLIP_YMAX_VALUE_019               0x00000000 /* RWC-V */
#define NV_PGRAPH_ABS_UCLIPA_XMIN                        0x00400560 /* RW-4R */
#define NV_PGRAPH_ABS_UCLIPA_XMIN_VALUE                        15:0 /* RWXSF */
#define NV_PGRAPH_ABS_UCLIPA_XMIN_VALUE_MIN              0x00000000 /* RWN-V */
#define NV_PGRAPH_ABS_UCLIPA_XMAX                        0x00400568 /* RW-4R */
#define NV_PGRAPH_ABS_UCLIPA_XMAX_VALUE                        17:0 /* RWXSF */
#define NV_PGRAPH_ABS_UCLIPA_XMAX_VALUE_MAX              0x0000ffff /* RWN-V */
#define NV_PGRAPH_ABS_UCLIPA_YMIN                        0x00400564 /* RW-4R */
#define NV_PGRAPH_ABS_UCLIPA_YMIN_VALUE                        15:0 /* RWXSF */
#define NV_PGRAPH_ABS_UCLIPA_YMIN_VALUE_MIN              0x00000000 /* RWN-V */
#define NV_PGRAPH_ABS_UCLIPA_YMAX                        0x0040056C /* RW-4R */
#define NV_PGRAPH_ABS_UCLIPA_YMAX_VALUE                        17:0 /* RWXSF */
#define NV_PGRAPH_ABS_UCLIPA_YMAX_VALUE_MAX              0x0000ffff /* RWN-V */
#define NV_PGRAPH_SOURCE_COLOR                           0x0040050C /* RW-4R */
#define NV_PGRAPH_SOURCE_COLOR_VALUE                           31:0 /* RWNVF */
#define NV_PGRAPH_SOURCE_COLOR_VALUE_0                   0x00000000 /* RWN-V */
#define NV_PGRAPH_VALID1                                 0x00400508 /* RW-4R */
#define NV_PGRAPH_VALID1_VLD                                   22:0 /* RWNVF */
#define NV_PGRAPH_VALID1_VLD_0                           0x00000000 /* RWN-V */
#define NV_PGRAPH_VALID1_VLD_NOCLIP                       (0x1<<19) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_SRCCOLOR                     (0x1<<16) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTMOVE                      (0x1<<21) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTX01                        (0x3<<0) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTX02                        (0x7<<0) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTX03                        (0xf<<0) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTXCHAIN01                   (0x3<<4) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTXCHAIN02                   (0x7<<4) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTXCHAIN03                   (0xf<<4) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTY01                        (0x3<<8) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTY02                        (0x7<<8) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTY03                        (0xf<<8) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTYCHAIN01                  (0x3<<12) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTYCHAIN02                  (0x7<<12) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTYCHAIN03                  (0xf<<12) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_X_OFFSET                      (0x1<<0) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_XCHAIN_OFFSET                 (0x1<<4) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_Y_OFFSET                      (0x1<<8) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_YCHAIN_OFFSET                (0x1<<12) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTCOLOR0                    (0x1<<17) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTCOLOR1                    (0x1<<18) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTCLIP                      (0x1<<20) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTFONT                      (0x1<<22) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTOFFSET                    (0x1<<22) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTBPITCH                     (0x1<<2) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTBOFFSET                    (0x1<<3) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTDUDX                       (0x1<<4) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTDVDY                       (0x1<<5) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTPOINT                      (0x1<<8) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTSIZE                       (0x1<<9) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTPITCH                     (0x1<<10) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTSTART                     (0x1<<11) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTDUDX2                     (0x1<<12) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTDVDY2                     (0x1<<13) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTPOINT2                    (0x1<<14) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTSIZE2                     (0x1<<15) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTPITCH2                    (0x1<<16) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTSTART2                    (0x1<<17) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTOFFSIN                     (0x1<<0) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTOFFSOUT                    (0x1<<1) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTPITCHIN                    (0x1<<2) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTPITCHOUT                   (0x1<<3) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTLENGTH                     (0x1<<4) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTCOUNT                      (0x1<<5) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTFORMAT                     (0x1<<6) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTNOTIFY                     (0x1<<7) /* RW--V */
#define NV_PGRAPH_VALID1_CLIP_MIN                             28:28 /* RWIVF */
#define NV_PGRAPH_VALID1_CLIP_MIN_NO_ERROR               0x00000000 /* RWI-V */
#define NV_PGRAPH_VALID1_CLIP_MIN_ONLY                   0x00000001 /* RW--V */
#define NV_PGRAPH_VALID1_CLIP_MIN_019                    0x00000000 /* RWC-V */
#define NV_PGRAPH_VALID1_CLIPA_MIN                            29:29 /* RWIVF */
#define NV_PGRAPH_VALID1_CLIPA_MIN_NO_ERROR              0x00000000 /* RWI-V */
#define NV_PGRAPH_VALID1_CLIPA_MIN_ONLY                  0x00000001 /* RW--V */
#define NV_PGRAPH_VALID1_CLIP_MAX                             30:30 /* RWIVF */
#define NV_PGRAPH_VALID1_CLIP_MAX_NO_ERROR               0x00000000 /* RWI-V */
#define NV_PGRAPH_VALID1_CLIP_MAX_ONLY                   0x00000001 /* RW--V */
#define NV_PGRAPH_VALID1_CLIP_MAX_019                    0x00000000 /* RWC-V */
#define NV_PGRAPH_VALID1_CLIPA_MAX                            31:31 /* RWIVF */
#define NV_PGRAPH_VALID1_CLIPA_MAX_NO_ERROR              0x00000000 /* RWI-V */
#define NV_PGRAPH_VALID1_CLIPA_MAX_ONLY                  0x00000001 /* RW--V */
#define NV_PGRAPH_VALID2                                 0x00400578 /* RW-4R */
#define NV_PGRAPH_VALID2_VLD2                                  28:0 /* RWNVF */
#define NV_PGRAPH_VALID2_VLD2_0                          0x00000000 /* RWN-V */
#define NV_PGRAPH_VALID2_VLD2_GOT3D_COMBINE0A               (1<<28) /* RW--V */
#define NV_PGRAPH_VALID2_VLD2_GOT3D_COMBINE0C               (1<<27) /* RW--V */
#define NV_PGRAPH_VALID2_VLD2_GOT3D_COMBINE1A               (1<<26) /* RW--V */
#define NV_PGRAPH_VALID2_VLD2_GOT3D_COMBINE1C               (1<<25) /* RW--V */
#define NV_PGRAPH_VALID2_VLD2_GOT3D_COMBFACTOR              (1<<24) /* RW--V */
#define NV_PGRAPH_VALID2_VLD2_GOT3D_FILTER1                 (1<<23) /* RW--V */
#define NV_PGRAPH_VALID2_VLD2_GOT3D_OFFSET1                 (1<<22) /* RW--V */
#define NV_PGRAPH_VALID2_VLD2_GOT3D_FORMAT1                 (1<<21) /* RW--V */
#define NV_PGRAPH_VALID2_VLD2_GOT3D_BLEND                   (1<<20) /* RW--V */
#define NV_PGRAPH_VALID2_VLD2_GOT3D_CONTROL2                (1<<19) /* RW--V */
#define NV_PGRAPH_VALID2_VLD2_GOT3D_CONTROL1                (1<<18) /* RW--V */
#define NV_PGRAPH_VALID2_VLD2_GOT3D_CONTROL0                (1<<17) /* RW--V */
#define NV_PGRAPH_VALID2_VLD2_GOT3D_FILTER0                 (1<<16) /* RW--V */
#define NV_PGRAPH_VALID2_VLD2_GOT3D_FORMAT0                 (1<<15) /* RW--V */
#define NV_PGRAPH_VALID2_VLD2_GOT3D_OFFSET0                 (1<<14) /* RW--V */
#define NV_PGRAPH_VALID2_VLD2_GOT3D_FOGCOLOR                (1<<13) /* RW--V */
#define NV_PGRAPH_VALID2_VLD2_GOT3D_COLORKEY                (1<<12) /* RW--V */
#define NV_PGRAPH_VALID2_VLD2_GOT3D_V1                       (1<<9) /* RW--V */
#define NV_PGRAPH_VALID2_VLD2_GOT3D_U1                       (1<<8) /* RW--V */
#define NV_PGRAPH_VALID2_VLD2_GOT3D_V0                       (1<<7) /* RW--V */
#define NV_PGRAPH_VALID2_VLD2_GOT3D_U0                       (1<<6) /* RW--V */
#define NV_PGRAPH_VALID2_VLD2_GOT3D_X                        (1<<5) /* RW--V */
#define NV_PGRAPH_VALID2_VLD2_GOT3D_Y                        (1<<4) /* RW--V */
#define NV_PGRAPH_VALID2_VLD2_GOT3D_ZETA                     (1<<3) /* RW--V */
#define NV_PGRAPH_VALID2_VLD2_GOT3D_M                        (1<<2) /* RW--V */
#define NV_PGRAPH_VALID2_VLD2_GOT3D_COLOR                    (1<<1) /* RW--V */
#define NV_PGRAPH_VALID2_VLD2_GOT3D_SPECULAR                 (1<<0) /* RW--V */
#define NV_PGRAPH_VALID2_VLD2_DX3FULLVERTEX               (0x7f<<0) /* RW--V */
#define NV_PGRAPH_VALID2_VLD2_DX5FULLVERTEX               (0x7f<<0) /* RW--V */
#define NV_PGRAPH_VALID2_VLD2_DX6FULLVERTEX              (0x1ff<<0) /* RW--V */
#define NV_PGRAPH_VALID2_VLD2_DX3FULLSTATE               (0x3f<<13) /* RW--V */
#define NV_PGRAPH_VALID2_VLD2_DX5FULLSTATE              (0x1ff<<12) /* RW--V */
#define NV_PGRAPH_VALID2_VLD2_DX6FULLSTATE             (0xffff<<13) /* RW--V */
#define NV_PGRAPH_VALID2_CLIP3D_MIN                           30:30 /* RWIVF */
#define NV_PGRAPH_VALID2_CLIP3D_MIN_NO_ERROR             0x00000000 /* RWI-V */
#define NV_PGRAPH_VALID2_CLIP3D_MIN_ONLY                 0x00000001 /* RW--V */
#define NV_PGRAPH_VALID2_CLIP3D_MAX                           31:31 /* RWIVF */
#define NV_PGRAPH_VALID2_CLIP3D_MAX_NO_ERROR             0x00000000 /* RWI-V */
#define NV_PGRAPH_VALID2_CLIP3D_MAX_ONLY                 0x00000001 /* RW--V */
#define NV_PGRAPH_ABS_ICLIP_XMAX                         0x00400534 /* RW-4R */
#define NV_PGRAPH_ABS_ICLIP_XMAX_VALUE                         17:0 /* RWXSF */
#define NV_PGRAPH_ABS_ICLIP_YMAX                         0x00400538 /* RW-4R */
#define NV_PGRAPH_ABS_ICLIP_YMAX_VALUE                         17:0 /* RWXSF */
#define NV_PGRAPH_CLIPX_0                                0x00400524 /* RW-4R */
#define NV_PGRAPH_CLIPX_0_CLIP0_MIN                             1:0 /* RWNVF */
#define NV_PGRAPH_CLIPX_0_CLIP0_MIN_GT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPX_0_CLIP0_MIN_LT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPX_0_CLIP0_MIN_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPX_0_CLIP0_MAX                             3:2 /* RWNVF */
#define NV_PGRAPH_CLIPX_0_CLIP0_MAX_LT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPX_0_CLIP0_MAX_GT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPX_0_CLIP0_MAX_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPX_0_CLIP1_MIN                             5:4 /* RWNVF */
#define NV_PGRAPH_CLIPX_0_CLIP1_MIN_GT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPX_0_CLIP1_MIN_LT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPX_0_CLIP1_MIN_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPX_0_CLIP1_MAX                             7:6 /* RWNVF */
#define NV_PGRAPH_CLIPX_0_CLIP1_MAX_LT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPX_0_CLIP1_MAX_GT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPX_0_CLIP1_MAX_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPX_0_CLIP2_MIN                             9:8 /* RWNVF */
#define NV_PGRAPH_CLIPX_0_CLIP2_MIN_GT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPX_0_CLIP2_MIN_LT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPX_0_CLIP2_MIN_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPX_0_CLIP2_MAX                           11:10 /* RWNVF */
#define NV_PGRAPH_CLIPX_0_CLIP2_MAX_LT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPX_0_CLIP2_MAX_GT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPX_0_CLIP2_MAX_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPX_0_CLIP3_MIN                           13:12 /* RWNVF */
#define NV_PGRAPH_CLIPX_0_CLIP3_MIN_GT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPX_0_CLIP3_MIN_LT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPX_0_CLIP3_MIN_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPX_0_CLIP3_MAX                           15:14 /* RWNVF */
#define NV_PGRAPH_CLIPX_0_CLIP3_MAX_LT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPX_0_CLIP3_MAX_GT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPX_0_CLIP3_MAX_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPX_0_CLIP4_MIN                           17:16 /* RWNVF */
#define NV_PGRAPH_CLIPX_0_CLIP4_MIN_GT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPX_0_CLIP4_MIN_LT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPX_0_CLIP4_MIN_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPX_0_CLIP4_MAX                           19:18 /* RWNVF */
#define NV_PGRAPH_CLIPX_0_CLIP4_MAX_LT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPX_0_CLIP4_MAX_GT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPX_0_CLIP4_MAX_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPX_0_CLIP5_MIN                           21:20 /* RWNVF */
#define NV_PGRAPH_CLIPX_0_CLIP5_MIN_GT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPX_0_CLIP5_MIN_LT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPX_0_CLIP5_MIN_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPX_0_CLIP5_MAX                           23:22 /* RWNVF */
#define NV_PGRAPH_CLIPX_0_CLIP5_MAX_LT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPX_0_CLIP5_MAX_GT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPX_0_CLIP5_MAX_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPX_0_CLIP6_MIN                           25:24 /* RWNVF */
#define NV_PGRAPH_CLIPX_0_CLIP6_MIN_GT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPX_0_CLIP6_MIN_LT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPX_0_CLIP6_MIN_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPX_0_CLIP6_MAX                           27:26 /* RWNVF */
#define NV_PGRAPH_CLIPX_0_CLIP6_MAX_LT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPX_0_CLIP6_MAX_GT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPX_0_CLIP6_MAX_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPX_0_CLIP7_MIN                           29:28 /* RWNVF */
#define NV_PGRAPH_CLIPX_0_CLIP7_MIN_GT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPX_0_CLIP7_MIN_LT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPX_0_CLIP7_MIN_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPX_0_CLIP7_MAX                           31:30 /* RWNVF */
#define NV_PGRAPH_CLIPX_0_CLIP7_MAX_LT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPX_0_CLIP7_MAX_GT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPX_0_CLIP7_MAX_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPX_1                                0x00400528 /* RW-4R */
#define NV_PGRAPH_CLIPX_1_CLIP8_MIN                             1:0 /* RWNVF */
#define NV_PGRAPH_CLIPX_1_CLIP8_MIN_GT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPX_1_CLIP8_MIN_LT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPX_1_CLIP8_MIN_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPX_1_CLIP8_MAX                             3:2 /* RWNVF */
#define NV_PGRAPH_CLIPX_1_CLIP8_MAX_LT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPX_1_CLIP8_MAX_GT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPX_1_CLIP8_MAX_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPX_1_CLIP9_MIN                             5:4 /* RWNVF */
#define NV_PGRAPH_CLIPX_1_CLIP9_MIN_GT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPX_1_CLIP9_MIN_LT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPX_1_CLIP9_MIN_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPX_1_CLIP9_MAX                             7:6 /* RWNVF */
#define NV_PGRAPH_CLIPX_1_CLIP9_MAX_LT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPX_1_CLIP9_MAX_GT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPX_1_CLIP9_MAX_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPX_1_CLIP10_MIN                            9:8 /* RWNVF */
#define NV_PGRAPH_CLIPX_1_CLIP10_MIN_GT                  0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPX_1_CLIP10_MIN_LT                  0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPX_1_CLIP10_MIN_EQ                  0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPX_1_CLIP10_MAX                          11:10 /* RWNVF */
#define NV_PGRAPH_CLIPX_1_CLIP10_MAX_LT                  0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPX_1_CLIP10_MAX_GT                  0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPX_1_CLIP10_MAX_EQ                  0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPX_1_CLIP11_MIN                          13:12 /* RWNVF */
#define NV_PGRAPH_CLIPX_1_CLIP11_MIN_GT                  0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPX_1_CLIP11_MIN_LT                  0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPX_1_CLIP11MIN_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPX_1_CLIP11_MAX                          15:14 /* RWNVF */
#define NV_PGRAPH_CLIPX_1_CLIP11_MAX_LT                  0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPX_1_CLIP11_MAX_GT                  0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPX_1_CLIP11_MAX_EQ                  0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPX_1_CLIP12_MIN                          17:16 /* RWNVF */
#define NV_PGRAPH_CLIPX_1_CLIP12_MIN_GT                  0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPX_1_CLIP12_MIN_LT                  0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPX_1_CLIP12_MIN_EQ                  0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPX_1_CLIP12_MAX                          19:18 /* RWNVF */
#define NV_PGRAPH_CLIPX_1_CLIP12_MAX_LT                  0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPX_1_CLIP12_MAX_GT                  0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPX_1_CLIP12_MAX_EQ                  0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPX_1_CLIP13_MIN                          21:20 /* RWNVF */
#define NV_PGRAPH_CLIPX_1_CLIP13_MIN_GT                  0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPX_1_CLIP13_MIN_LT                  0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPX_1_CLIP13_MIN_EQ                  0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPX_1_CLIP13_MAX                          23:22 /* RWNVF */
#define NV_PGRAPH_CLIPX_1_CLIP13_MAX_LT                  0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPX_1_CLIP13_MAX_GT                  0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPX_1_CLIP13_MAX_EQ                  0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPX_1_CLIP14_MIN                          25:24 /* RWNVF */
#define NV_PGRAPH_CLIPX_1_CLIP14_MIN_GT                  0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPX_1_CLIP14_MIN_LT                  0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPX_1_CLIP14_MIN_EQ                  0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPX_1_CLIP14_MAX                          27:26 /* RWNVF */
#define NV_PGRAPH_CLIPX_1_CLIP14_MAX_LT                  0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPX_1_CLIP14_MAX_GT                  0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPX_1_CLIP14_MAX_EQ                  0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPX_1_CLIP15_MIN                          29:28 /* RWNVF */
#define NV_PGRAPH_CLIPX_1_CLIP15_MIN_GT                  0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPX_1_CLIP15_MIN_LT                  0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPX_1_CLIP15_MIN_EQ                  0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPX_1_CLIP15_MAX                          31:30 /* RWNVF */
#define NV_PGRAPH_CLIPX_1_CLIP15_MAX_LT                  0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPX_1_CLIP15_MAX_GT                  0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPX_1_CLIP15_MAX_EQ                  0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPY_0                                0x0040052c /* RW-4R */
#define NV_PGRAPH_CLIPY_0_CLIP0_MIN                             1:0 /* RWNVF */
#define NV_PGRAPH_CLIPY_0_CLIP0_MIN_GT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPY_0_CLIP0_MIN_LT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPY_0_CLIP0_MIN_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPY_0_CLIP0_MAX                             3:2 /* RWNVF */
#define NV_PGRAPH_CLIPY_0_CLIP0_MAX_LT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPY_0_CLIP0_MAX_GT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPY_0_CLIP0_MAX_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPY_0_CLIP1_MIN                             5:4 /* RWNVF */
#define NV_PGRAPH_CLIPY_0_CLIP1_MIN_GT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPY_0_CLIP1_MIN_LT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPY_0_CLIP1_MIN_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPY_0_CLIP1_MAX                             7:6 /* RWNVF */
#define NV_PGRAPH_CLIPY_0_CLIP1_MAX_LT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPY_0_CLIP1_MAX_GT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPY_0_CLIP1_MAX_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPY_0_CLIP2_MIN                             9:8 /* RWNVF */
#define NV_PGRAPH_CLIPY_0_CLIP2_MIN_GT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPY_0_CLIP2_MIN_LT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPY_0_CLIP2_MIN_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPY_0_CLIP2_MAX                           11:10 /* RWNVF */
#define NV_PGRAPH_CLIPY_0_CLIP2_MAX_LT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPY_0_CLIP2_MAX_GT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPY_0_CLIP2_MAX_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPY_0_CLIP3_MIN                           13:12 /* RWNVF */
#define NV_PGRAPH_CLIPY_0_CLIP3_MIN_GT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPY_0_CLIP3_MIN_LT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPY_0_CLIP3_MIN_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPY_0_CLIP3_MAX                           15:14 /* RWNVF */
#define NV_PGRAPH_CLIPY_0_CLIP3_MAX_LT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPY_0_CLIP3_MAX_GT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPY_0_CLIP3_MAX_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPY_0_CLIP4_MIN                           17:16 /* RWNVF */
#define NV_PGRAPH_CLIPY_0_CLIP4_MIN_GT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPY_0_CLIP4_MIN_LT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPY_0_CLIP4_MIN_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPY_0_CLIP4_MAX                           19:18 /* RWNVF */
#define NV_PGRAPH_CLIPY_0_CLIP4_MAX_LT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPY_0_CLIP4_MAX_GT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPY_0_CLIP4_MAX_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPY_0_CLIP5_MIN                           21:20 /* RWNVF */
#define NV_PGRAPH_CLIPY_0_CLIP5_MIN_GT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPY_0_CLIP5_MIN_LT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPY_0_CLIP5_MIN_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPY_0_CLIP5_MAX                           23:22 /* RWNVF */
#define NV_PGRAPH_CLIPY_0_CLIP5_MAX_LT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPY_0_CLIP5_MAX_GT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPY_0_CLIP5_MAX_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPY_0_CLIP6_MIN                           25:24 /* RWNVF */
#define NV_PGRAPH_CLIPY_0_CLIP6_MIN_GT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPY_0_CLIP6_MIN_LT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPY_0_CLIP6_MIN_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPY_0_CLIP6_MAX                           27:26 /* RWNVF */
#define NV_PGRAPH_CLIPY_0_CLIP6_MAX_LT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPY_0_CLIP6_MAX_GT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPY_0_CLIP6_MAX_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPY_0_CLIP7_MIN                           29:28 /* RWNVF */
#define NV_PGRAPH_CLIPY_0_CLIP7_MIN_GT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPY_0_CLIP7_MIN_LT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPY_0_CLIP7_MIN_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPY_0_CLIP7_MAX                           31:30 /* RWNVF */
#define NV_PGRAPH_CLIPY_0_CLIP7_MAX_LT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPY_0_CLIP7_MAX_GT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPY_0_CLIP7_MAX_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPY_1                                0x00400530 /* RW-4R */
#define NV_PGRAPH_CLIPY_1_CLIP8_MIN                             1:0 /* RWNVF */
#define NV_PGRAPH_CLIPY_1_CLIP8_MIN_GT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPY_1_CLIP8_MIN_LT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPY_1_CLIP8_MIN_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPY_1_CLIP8_MAX                             3:2 /* RWNVF */
#define NV_PGRAPH_CLIPY_1_CLIP8_MAX_LT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPY_1_CLIP8_MAX_GT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPY_1_CLIP8_MAX_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPY_1_CLIP9_MIN                             5:4 /* RWNVF */
#define NV_PGRAPH_CLIPY_1_CLIP9_MIN_GT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPY_1_CLIP9_MIN_LT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPY_1_CLIP9_MIN_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPY_1_CLIP9_MAX                             7:6 /* RWNVF */
#define NV_PGRAPH_CLIPY_1_CLIP9_MAX_LT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPY_1_CLIP9_MAX_GT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPY_1_CLIP9_MAX_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPY_1_CLIP10_MIN                            9:8 /* RWNVF */
#define NV_PGRAPH_CLIPY_1_CLIP10_MIN_GT                  0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPY_1_CLIP10_MIN_LT                  0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPY_1_CLIP10_MIN_EQ                  0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPY_1_CLIP10_MAX                          11:10 /* RWNVF */
#define NV_PGRAPH_CLIPY_1_CLIP10_MAX_LT                  0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPY_1_CLIP10_MAX_GT                  0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPY_1_CLIP10_MAX_EQ                  0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPY_1_CLIP11_MIN                          13:12 /* RWNVF */
#define NV_PGRAPH_CLIPY_1_CLIP11_MIN_GT                  0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPY_1_CLIP11_MIN_LT                  0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPY_1_CLIP11MIN_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPY_1_CLIP11_MAX                          15:14 /* RWNVF */
#define NV_PGRAPH_CLIPY_1_CLIP11_MAX_LT                  0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPY_1_CLIP11_MAX_GT                  0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPY_1_CLIP11_MAX_EQ                  0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPY_1_CLIP12_MIN                          17:16 /* RWNVF */
#define NV_PGRAPH_CLIPY_1_CLIP12_MIN_GT                  0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPY_1_CLIP12_MIN_LT                  0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPY_1_CLIP12_MIN_EQ                  0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPY_1_CLIP12_MAX                          19:18 /* RWNVF */
#define NV_PGRAPH_CLIPY_1_CLIP12_MAX_LT                  0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPY_1_CLIP12_MAX_GT                  0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPY_1_CLIP12_MAX_EQ                  0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPY_1_CLIP13_MIN                          21:20 /* RWNVF */
#define NV_PGRAPH_CLIPY_1_CLIP13_MIN_GT                  0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPY_1_CLIP13_MIN_LT                  0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPY_1_CLIP13_MIN_EQ                  0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPY_1_CLIP13_MAX                          23:22 /* RWNVF */
#define NV_PGRAPH_CLIPY_1_CLIP13_MAX_LT                  0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPY_1_CLIP13_MAX_GT                  0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPY_1_CLIP13_MAX_EQ                  0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPY_1_CLIP14_MIN                          25:24 /* RWNVF */
#define NV_PGRAPH_CLIPY_1_CLIP14_MIN_GT                  0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPY_1_CLIP14_MIN_LT                  0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPY_1_CLIP14_MIN_EQ                  0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPY_1_CLIP14_MAX                          27:26 /* RWNVF */
#define NV_PGRAPH_CLIPY_1_CLIP14_MAX_LT                  0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPY_1_CLIP14_MAX_GT                  0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPY_1_CLIP14_MAX_EQ                  0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPY_1_CLIP15_MIN                          29:28 /* RWNVF */
#define NV_PGRAPH_CLIPY_1_CLIP15_MIN_GT                  0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPY_1_CLIP15_MIN_LT                  0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPY_1_CLIP15_MIN_EQ                  0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPY_1_CLIP15_MAX                          31:30 /* RWNVF */
#define NV_PGRAPH_CLIPY_1_CLIP15_MAX_LT                  0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPY_1_CLIP15_MAX_GT                  0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPY_1_CLIP15_MAX_EQ                  0x00000002 /* RW--V */
#define NV_PGRAPH_MISC24_0                               0x00400510 /* RW-4R */
#define NV_PGRAPH_MISC24_0_VALUE                               23:0 /* RWXUF */
#define NV_PGRAPH_MISC24_1                               0x00400570 /* RW-4R */
#define NV_PGRAPH_MISC24_1_VALUE                               23:0 /* RWXUF */
#define NV_PGRAPH_MISC24_2                               0x00400574 /* RW-4R */
#define NV_PGRAPH_MISC24_2_VALUE                               23:0 /* RWXUF */
#define NV_PGRAPH_PASSTHRU_0                             0x0040057C /* RW-4R */
#define NV_PGRAPH_PASSTHRU_0_VALUE                             31:0 /* RWXUF */
#define NV_PGRAPH_PASSTHRU_1                             0x00400580 /* RW-4R */
#define NV_PGRAPH_PASSTHRU_1_VALUE                             31:0 /* RWXUF */
#define NV_PGRAPH_PASSTHRU_2                             0x00400584 /* RW-4R */
#define NV_PGRAPH_PASSTHRU_2_VALUE                             31:0 /* RWXUF */
#define NV_PGRAPH_DIMX_TEXTURE                           0x00400588 /* RW-4R */
#define NV_PGRAPH_DIMX_TEXTURE_VALUE                           15:0 /* RWXUF */
#define NV_PGRAPH_WDIMX_TEXTURE                          0x0040058c /* RW-4R */
#define NV_PGRAPH_WDIMX_TEXTURE_VALUE                          16:0 /* RWXSF */
#define NV_PGRAPH_CLEAR                                  0x00000000 /* ---4P */
#define NV_PGRAPH_CLEAR_BUNDLE                           0x000001FF /* ----B */
#define NV_PGRAPH_CLEAR_Z                                       0:0 /* RWXVF */
#define NV_PGRAPH_CLEAR_Z_DISABLE                        0x00000000 /* RW--V */
#define NV_PGRAPH_CLEAR_Z_ENABLE                         0x00000001 /* RW--V */
#define NV_PGRAPH_CLEAR_STENCIL                                 1:1 /* RWXVF */
#define NV_PGRAPH_CLEAR_STENCIL_DISABLE                  0x00000000 /* RW--V */
#define NV_PGRAPH_CLEAR_STENCIL_ENABLE                   0x00000001 /* RW--V */
#define NV_PGRAPH_CLEAR_R                                       4:4 /* RWXVF */
#define NV_PGRAPH_CLEAR_R_DISABLE                        0x00000000 /* RW--V */
#define NV_PGRAPH_CLEAR_R_ENABLE                         0x00000001 /* RW--V */
#define NV_PGRAPH_CLEAR_G                                       5:5 /* RWXVF */
#define NV_PGRAPH_CLEAR_G_DISABLE                        0x00000000 /* RW--V */
#define NV_PGRAPH_CLEAR_G_ENABLE                         0x00000001 /* RW--V */
#define NV_PGRAPH_CLEAR_B                                       6:6 /* RWXVF */
#define NV_PGRAPH_CLEAR_B_DISABLE                        0x00000000 /* RW--V */
#define NV_PGRAPH_CLEAR_B_ENABLE                         0x00000001 /* RW--V */
#define NV_PGRAPH_CLEAR_A                                       7:7 /* RWXVF */
#define NV_PGRAPH_CLEAR_A_DISABLE                        0x00000000 /* RW--V */
#define NV_PGRAPH_CLEAR_A_ENABLE                         0x00000001 /* RW--V */
#define NV_PGRAPH_PERFMONCLR                             0x00000000 /* ---4P */
#define NV_PGRAPH_PERFMONCLR_BUNDLE                      0x000001FD /* ----B */
#define NV_PGRAPH_PERFMONCLR_TYPE                               0:0 /* RWXVF */
#define NV_PGRAPH_PERFMONCLR_TYPE_ZPASS_PIXEL_CNT        0x00000001 /* RW--V */
#define NV_PGRAPH_REPORT                                 0x00000000 /* ---4P */
#define NV_PGRAPH_REPORT_BUNDLE                          0x000001FC /* ----B */
#define NV_PGRAPH_REPORT_OFFSET                                23:0 /* RWXUF */
#define NV_PGRAPH_REPORT_TYPE                                 24:24 /* RWXVF */
#define NV_PGRAPH_REPORT_TYPE_ZPASS_PIXEL_CNT            0x00000001 /* RW--V */
#define NV_PGRAPH_TSEMAPHORERELEASE                      0x00000000 /* ---4P */
#define NV_PGRAPH_TSEMAPHORERELEASE_BUNDLE               0x000001FB /* ----B */
#define NV_PGRAPH_TSEMAPHORERELEASE_V                          31:0 /* RWXUF */
#define NV_PGRAPH_TLPROGLAUNCH                           0x00000000 /* ---4P */
#define NV_PGRAPH_TLPROGLAUNCH_BUNDLE                    0x000001FA /* ----B */
#define NV_PGRAPH_TLPROGLAUNCH_V                                6:0 /* RWXUF */
#define NV_PGRAPH_ANTIALIASING                           0x00401800 /* RW-4R */
#define NV_PGRAPH_ANTIALIASING_BUNDLE                    0x00000000 /* ----B */
#define NV_PGRAPH_ANTIALIASING_ENABLE                           0:0 /* RWXVF */
#define NV_PGRAPH_ANTIALIASING_ENABLE_FALSE              0x00000000 /* RW--V */
#define NV_PGRAPH_ANTIALIASING_ENABLE_TRUE               0x00000001 /* RW--V */
#define NV_PGRAPH_ANTIALIASING_ENABLE_097                0x00000000 /* RWC-V */
#define NV_PGRAPH_ANTIALIASING_ALPHA_TO_COVERAGE                4:4 /* RWXVF */
#define NV_PGRAPH_ANTIALIASING_ALPHA_TO_COVERAGE_DISABLE 0x00000000 /* RW--V */
#define NV_PGRAPH_ANTIALIASING_ALPHA_TO_COVERAGE_ENABLE  0x00000001 /* RW--V */
#define NV_PGRAPH_ANTIALIASING_ALPHA_TO_COVERAGE_097     0x00000000 /* RWC-V */
#define NV_PGRAPH_ANTIALIASING_ALPHA_TO_ONE                     8:8 /* RWXVF */
#define NV_PGRAPH_ANTIALIASING_ALPHA_TO_ONE_DISABLE      0x00000000 /* RW--V */
#define NV_PGRAPH_ANTIALIASING_ALPHA_TO_ONE_ENABLE       0x00000001 /* RW--V */
#define NV_PGRAPH_ANTIALIASING_ALPHA_TO_ONE_097          0x00000000 /* RWC-V */
#define NV_PGRAPH_ANTIALIASING_SAMPLE_MASK                    31:16 /* RWXUF */
#define NV_PGRAPH_ANTIALIASING_SAMPLE_MASK_097           0x0000FFFF /* RWC-V */
#define NV_PGRAPH_BLEND                                  0x00401804 /* RW-4R */
#define NV_PGRAPH_BLEND_BUNDLE                           0x00000001 /* ----B */
#define NV_PGRAPH_BLEND_EN                                      3:3 /* RWXVF */
#define NV_PGRAPH_BLEND_EN_FALSE                         0x00000000 /* RW--V */
#define NV_PGRAPH_BLEND_EN_TRUE                          0x00000001 /* RW--V */
#define NV_PGRAPH_BLEND_EN_097                           0x00000000 /* RWC-V */
#define NV_PGRAPH_BLEND_SFACTOR                                 7:4 /* RWXVF */
#define NV_PGRAPH_BLEND_SFACTOR_ZERO                     0x00000000 /* RW--V */
#define NV_PGRAPH_BLEND_SFACTOR_ONE                      0x00000001 /* RW--V */
#define NV_PGRAPH_BLEND_SFACTOR_SRC_COLOR                0x00000002 /* RW--V */
#define NV_PGRAPH_BLEND_SFACTOR_ONE_MINUS_SRC_COLOR      0x00000003 /* RW--V */
#define NV_PGRAPH_BLEND_SFACTOR_SRC_ALPHA                0x00000004 /* RW--V */
#define NV_PGRAPH_BLEND_SFACTOR_ONE_MINUS_SRC_ALPHA      0x00000005 /* RW--V */
#define NV_PGRAPH_BLEND_SFACTOR_DST_ALPHA                0x00000006 /* RW--V */
#define NV_PGRAPH_BLEND_SFACTOR_ONE_MINUS_DST_ALPHA      0x00000007 /* RW--V */
#define NV_PGRAPH_BLEND_SFACTOR_DST_COLOR                0x00000008 /* RW--V */
#define NV_PGRAPH_BLEND_SFACTOR_ONE_MINUS_DST_COLOR      0x00000009 /* RW--V */
#define NV_PGRAPH_BLEND_SFACTOR_SRC_ALPHA_SATURATE       0x0000000A /* RW--V */
#define NV_PGRAPH_BLEND_SFACTOR_CONSTANT_COLOR           0x0000000C /* RW--V */
#define NV_PGRAPH_BLEND_SFACTOR_ONE_MINUS_CONSTANT_COLOR 0x0000000D /* RW--V */
#define NV_PGRAPH_BLEND_SFACTOR_CONSTANT_ALPHA           0x0000000E /* RW--V */
#define NV_PGRAPH_BLEND_SFACTOR_ONE_MINUS_CONSTANT_ALPHA 0x0000000F /* RW--V */
#define NV_PGRAPH_BLEND_SFACTOR_097                      0x00000000 /* RWC-V */
#define NV_PGRAPH_BLEND_DFACTOR                                11:8 /* RWXVF */
#define NV_PGRAPH_BLEND_DFACTOR_ZERO                     0x00000000 /* RW--V */
#define NV_PGRAPH_BLEND_DFACTOR_ONE                      0x00000001 /* RW--V */
#define NV_PGRAPH_BLEND_DFACTOR_SRC_COLOR                0x00000002 /* RW--V */
#define NV_PGRAPH_BLEND_DFACTOR_ONE_MINUS_SRC_COLOR      0x00000003 /* RW--V */
#define NV_PGRAPH_BLEND_DFACTOR_SRC_ALPHA                0x00000004 /* RW--V */
#define NV_PGRAPH_BLEND_DFACTOR_ONE_MINUS_SRC_ALPHA      0x00000005 /* RW--V */
#define NV_PGRAPH_BLEND_DFACTOR_DST_ALPHA                0x00000006 /* RW--V */
#define NV_PGRAPH_BLEND_DFACTOR_ONE_MINUS_DST_ALPHA      0x00000007 /* RW--V */
#define NV_PGRAPH_BLEND_DFACTOR_DST_COLOR                0x00000008 /* RW--V */
#define NV_PGRAPH_BLEND_DFACTOR_ONE_MINUS_DST_COLOR      0x00000009 /* RW--V */
#define NV_PGRAPH_BLEND_DFACTOR_SRC_ALPHA_SATURATE       0x0000000A /* RW--V */
#define NV_PGRAPH_BLEND_DFACTOR_CONSTANT_COLOR           0x0000000C /* RW--V */
#define NV_PGRAPH_BLEND_DFACTOR_ONE_MINUS_CONSTANT_COLOR 0x0000000D /* RW--V */
#define NV_PGRAPH_BLEND_DFACTOR_CONSTANT_ALPHA           0x0000000E /* RW--V */
#define NV_PGRAPH_BLEND_DFACTOR_ONE_MINUS_CONSTANT_ALPHA 0x0000000F /* RW--V */
#define NV_PGRAPH_BLEND_DFACTOR_097                      0x00000000 /* RWC-V */
#define NV_PGRAPH_BLEND_EQN                                     2:0 /* RWXVF */
#define NV_PGRAPH_BLEND_EQN_FUNC_SUBTRACT                0x00000000 /* RW--V */
#define NV_PGRAPH_BLEND_EQN_FUNC_REVERSE_SUBTRACT        0x00000001 /* RW--V */
#define NV_PGRAPH_BLEND_EQN_FUNC_ADD                     0x00000002 /* RW--V */
#define NV_PGRAPH_BLEND_EQN_MIN                          0x00000003 /* RW--V */
#define NV_PGRAPH_BLEND_EQN_MAX                          0x00000004 /* RW--V */
#define NV_PGRAPH_BLEND_EQN_FUNC_REVERSE_SUBTRACT_SIGNED 0x00000005 /* RW--V */
#define NV_PGRAPH_BLEND_EQN_FUNC_ADD_SIGNED              0x00000006 /* RW--V */
#define NV_PGRAPH_BLEND_EQN_097                          0x00000000 /* RWC-V */
#define NV_PGRAPH_BLEND_LOGICOP_ENABLE                        16:16 /* RWXVF */
#define NV_PGRAPH_BLEND_LOGICOP_ENABLE_FALSE             0x00000000 /* RW--V */
#define NV_PGRAPH_BLEND_LOGICOP_ENABLE_TRUE              0x00000001 /* RW--V */
#define NV_PGRAPH_BLEND_LOGICOP_ENABLE_097               0x00000000 /* RWC-V */
#define NV_PGRAPH_BLEND_LOGICOP                               15:12 /* RWXVF */
#define NV_PGRAPH_BLEND_LOGICOP_CLEAR                    0x00000000 /* RW--V */
#define NV_PGRAPH_BLEND_LOGICOP_AND                      0x00000001 /* RW--V */
#define NV_PGRAPH_BLEND_LOGICOP_AND_REVERSE              0x00000002 /* RW--V */
#define NV_PGRAPH_BLEND_LOGICOP_COPY                     0x00000003 /* RW--V */
#define NV_PGRAPH_BLEND_LOGICOP_AND_INVERTED             0x00000004 /* RW--V */
#define NV_PGRAPH_BLEND_LOGICOP_NOOP                     0x00000005 /* RW--V */
#define NV_PGRAPH_BLEND_LOGICOP_XOR                      0x00000006 /* RW--V */
#define NV_PGRAPH_BLEND_LOGICOP_OR                       0x00000007 /* RW--V */
#define NV_PGRAPH_BLEND_LOGICOP_NOR                      0x00000008 /* RW--V */
#define NV_PGRAPH_BLEND_LOGICOP_EQUIV                    0x00000009 /* RW--V */
#define NV_PGRAPH_BLEND_LOGICOP_INVERT                   0x0000000A /* RW--V */
#define NV_PGRAPH_BLEND_LOGICOP_OR_REVERSE               0x0000000B /* RW--V */
#define NV_PGRAPH_BLEND_LOGICOP_COPY_INVERTED            0x0000000C /* RW--V */
#define NV_PGRAPH_BLEND_LOGICOP_OR_INVERTED              0x0000000D /* RW--V */
#define NV_PGRAPH_BLEND_LOGICOP_NAND                     0x0000000E /* RW--V */
#define NV_PGRAPH_BLEND_LOGICOP_SET                      0x0000000F /* RW--V */
#define NV_PGRAPH_BLEND_LOGICOP_097                      0x00000000 /* RWC-V */
#define NV_PGRAPH_BLENDCOLOR                             0x00401808 /* RW-4R */
#define NV_PGRAPH_BLENDCOLOR_BUNDLE                      0x00000002 /* ----B */
#define NV_PGRAPH_BLENDCOLOR_V                                 31:0 /* RWXUF */
#define NV_PGRAPH_BLENDCOLOR_V_097                       0x00000000 /* RWC-V */
#define NV_PGRAPH_BORDERCOLOR0                           0x0040180C /* RW-4R */
#define NV_PGRAPH_BORDERCOLOR0_BUNDLE                    0x00000003 /* ----B */
#define NV_PGRAPH_BORDERCOLOR0_BORDER_COLOR                    31:0 /* RWXUF */
#define NV_PGRAPH_BORDERCOLOR0_BORDER_COLOR_097          0x00000000 /* RWC-V */
#define NV_PGRAPH_BORDERCOLOR1                           0x00401810 /* RW-4R */
#define NV_PGRAPH_BORDERCOLOR1_BUNDLE                    0x00000004 /* ----B */
#define NV_PGRAPH_BORDERCOLOR1_BORDER_COLOR                    31:0 /* RWXUF */
#define NV_PGRAPH_BORDERCOLOR1_BORDER_COLOR_097          0x00000000 /* RWC-V */
#define NV_PGRAPH_BORDERCOLOR2                           0x00401814 /* RW-4R */
#define NV_PGRAPH_BORDERCOLOR2_BUNDLE                    0x00000005 /* ----B */
#define NV_PGRAPH_BORDERCOLOR2_BORDER_COLOR                    31:0 /* RWXUF */
#define NV_PGRAPH_BORDERCOLOR2_BORDER_COLOR_097          0x00000000 /* RWC-V */
#define NV_PGRAPH_BORDERCOLOR3                           0x00401818 /* RW-4R */
#define NV_PGRAPH_BORDERCOLOR3_BUNDLE                    0x00000006 /* ----B */
#define NV_PGRAPH_BORDERCOLOR3_BORDER_COLOR                    31:0 /* RWXUF */
#define NV_PGRAPH_BORDERCOLOR3_BORDER_COLOR_097          0x00000000 /* RWC-V */
#define NV_PGRAPH_BUMPMAT00_1                            0x0040181C /* RW-4R */
#define NV_PGRAPH_BUMPMAT00_1_BUNDLE                     0x00000007 /* ----B */
#define NV_PGRAPH_BUMPMAT00_1_BUMPMAT00                        31:0 /* RWXFF */
#define NV_PGRAPH_BUMPMAT00_1_BUMPMAT00_097              0x00000000 /* RWC-V */
#define NV_PGRAPH_BUMPMAT00_2                            0x00401820 /* RW-4R */
#define NV_PGRAPH_BUMPMAT00_2_BUNDLE                     0x00000008 /* ----B */
#define NV_PGRAPH_BUMPMAT00_2_BUMPMAT00                        31:0 /* RWXFF */
#define NV_PGRAPH_BUMPMAT00_2_BUMPMAT00_097              0x00000000 /* RWC-V */
#define NV_PGRAPH_BUMPMAT00_3                            0x00401824 /* RW-4R */
#define NV_PGRAPH_BUMPMAT00_3_BUNDLE                     0x00000009 /* ----B */
#define NV_PGRAPH_BUMPMAT00_3_BUMPMAT00                        31:0 /* RWXFF */
#define NV_PGRAPH_BUMPMAT00_3_BUMPMAT00_097              0x00000000 /* RWC-V */
#define NV_PGRAPH_BUMPMAT01_1                            0x00401828 /* RW-4R */
#define NV_PGRAPH_BUMPMAT01_1_BUNDLE                     0x0000000A /* ----B */
#define NV_PGRAPH_BUMPMAT01_1_BUMPMAT01                        31:0 /* RWXFF */
#define NV_PGRAPH_BUMPMAT01_1_BUMPMAT01_097              0x00000000 /* RWC-V */
#define NV_PGRAPH_BUMPMAT01_2                            0x0040182C /* RW-4R */
#define NV_PGRAPH_BUMPMAT01_2_BUNDLE                     0x0000000B /* ----B */
#define NV_PGRAPH_BUMPMAT01_2_BUMPMAT01                        31:0 /* RWXFF */
#define NV_PGRAPH_BUMPMAT01_2_BUMPMAT01_097              0x00000000 /* RWC-V */
#define NV_PGRAPH_BUMPMAT01_3                            0x00401830 /* RW-4R */
#define NV_PGRAPH_BUMPMAT01_3_BUNDLE                     0x0000000C /* ----B */
#define NV_PGRAPH_BUMPMAT01_3_BUMPMAT01                        31:0 /* RWXFF */
#define NV_PGRAPH_BUMPMAT01_3_BUMPMAT01_097              0x00000000 /* RWC-V */
#define NV_PGRAPH_BUMPMAT10_1                            0x00401834 /* RW-4R */
#define NV_PGRAPH_BUMPMAT10_1_BUNDLE                     0x0000000D /* ----B */
#define NV_PGRAPH_BUMPMAT10_1_BUMPMAT10                        31:0 /* RWXFF */
#define NV_PGRAPH_BUMPMAT10_1_BUMPMAT10_097              0x00000000 /* RWC-V */
#define NV_PGRAPH_BUMPMAT10_2                            0x00401838 /* RW-4R */
#define NV_PGRAPH_BUMPMAT10_2_BUNDLE                     0x0000000E /* ----B */
#define NV_PGRAPH_BUMPMAT10_2_BUMPMAT10                        31:0 /* RWXFF */
#define NV_PGRAPH_BUMPMAT10_2_BUMPMAT10_097              0x00000000 /* RWC-V */
#define NV_PGRAPH_BUMPMAT10_3                            0x0040183C /* RW-4R */
#define NV_PGRAPH_BUMPMAT10_3_BUNDLE                     0x0000000F /* ----B */
#define NV_PGRAPH_BUMPMAT10_3_BUMPMAT10                        31:0 /* RWXFF */
#define NV_PGRAPH_BUMPMAT10_3_BUMPMAT10_097              0x00000000 /* RWC-V */
#define NV_PGRAPH_BUMPMAT11_1                            0x00401840 /* RW-4R */
#define NV_PGRAPH_BUMPMAT11_1_BUNDLE                     0x00000010 /* ----B */
#define NV_PGRAPH_BUMPMAT11_1_BUMPMAT11                        31:0 /* RWXFF */
#define NV_PGRAPH_BUMPMAT11_1_BUMPMAT11_097              0x00000000 /* RWC-V */
#define NV_PGRAPH_BUMPMAT11_2                            0x00401844 /* RW-4R */
#define NV_PGRAPH_BUMPMAT11_2_BUNDLE                     0x00000011 /* ----B */
#define NV_PGRAPH_BUMPMAT11_2_BUMPMAT11                        31:0 /* RWXFF */
#define NV_PGRAPH_BUMPMAT11_2_BUMPMAT11_097              0x00000000 /* RWC-V */
#define NV_PGRAPH_BUMPMAT11_3                            0x00401848 /* RW-4R */
#define NV_PGRAPH_BUMPMAT11_3_BUNDLE                     0x00000012 /* ----B */
#define NV_PGRAPH_BUMPMAT11_3_BUMPMAT11                        31:0 /* RWXFF */
#define NV_PGRAPH_BUMPMAT11_3_BUMPMAT11_097              0x00000000 /* RWC-V */
#define NV_PGRAPH_BUMPOFFSET1                            0x0040184C /* RW-4R */
#define NV_PGRAPH_BUMPOFFSET1_BUNDLE                     0x00000013 /* ----B */
#define NV_PGRAPH_BUMPOFFSET1_BUMPOFFSET                       31:0 /* RWXFF */
#define NV_PGRAPH_BUMPOFFSET1_BUMPOFFSET_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_BUMPOFFSET2                            0x00401850 /* RW-4R */
#define NV_PGRAPH_BUMPOFFSET2_BUNDLE                     0x00000014 /* ----B */
#define NV_PGRAPH_BUMPOFFSET2_BUMPOFFSET                       31:0 /* RWXFF */
#define NV_PGRAPH_BUMPOFFSET2_BUMPOFFSET_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_BUMPOFFSET3                            0x00401854 /* RW-4R */
#define NV_PGRAPH_BUMPOFFSET3_BUNDLE                     0x00000015 /* ----B */
#define NV_PGRAPH_BUMPOFFSET3_BUMPOFFSET                       31:0 /* RWXFF */
#define NV_PGRAPH_BUMPOFFSET3_BUMPOFFSET_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_BUMPSCALE1                             0x00401858 /* RW-4R */
#define NV_PGRAPH_BUMPSCALE1_BUNDLE                      0x00000016 /* ----B */
#define NV_PGRAPH_BUMPSCALE1_BUMPSCALE                         31:0 /* RWXFF */
#define NV_PGRAPH_BUMPSCALE1_BUMPSCALE_097               0x00000000 /* RWC-V */
#define NV_PGRAPH_BUMPSCALE2                             0x0040185C /* RW-4R */
#define NV_PGRAPH_BUMPSCALE2_BUNDLE                      0x00000017 /* ----B */
#define NV_PGRAPH_BUMPSCALE2_BUMPSCALE                         31:0 /* RWXFF */
#define NV_PGRAPH_BUMPSCALE2_BUMPSCALE_097               0x00000000 /* RWC-V */
#define NV_PGRAPH_BUMPSCALE3                             0x00401860 /* RW-4R */
#define NV_PGRAPH_BUMPSCALE3_BUNDLE                      0x00000018 /* ----B */
#define NV_PGRAPH_BUMPSCALE3_BUMPSCALE                         31:0 /* RWXFF */
#define NV_PGRAPH_BUMPSCALE3_BUMPSCALE_097               0x00000000 /* RWC-V */
#define NV_PGRAPH_CLEARRECTX                             0x00401864 /* RW-4R */
#define NV_PGRAPH_CLEARRECTX_BUNDLE                      0x00000019 /* ----B */
#define NV_PGRAPH_CLEARRECTX_XMIN                              11:0 /* RWXUF */
#define NV_PGRAPH_CLEARRECTX_XMIN_097                    0x00000000 /* RWC-V */
#define NV_PGRAPH_CLEARRECTX_XMAX                             27:16 /* RWXUF */
#define NV_PGRAPH_CLEARRECTX_XMAX_097                    0x00000FFF /* RWC-V */
#define NV_PGRAPH_CLEARRECTY                             0x00401868 /* RW-4R */
#define NV_PGRAPH_CLEARRECTY_BUNDLE                      0x0000001A /* ----B */
#define NV_PGRAPH_CLEARRECTY_YMIN                              11:0 /* RWXUF */
#define NV_PGRAPH_CLEARRECTY_YMIN_097                    0x00000000 /* RWC-V */
#define NV_PGRAPH_CLEARRECTY_YMAX                             27:16 /* RWXUF */
#define NV_PGRAPH_CLEARRECTY_YMAX_097                    0x00000FFF /* RWC-V */
#define NV_PGRAPH_COLORCLEARVALUE                        0x0040186C /* RW-4R */
#define NV_PGRAPH_COLORCLEARVALUE_BUNDLE                 0x0000001B /* ----B */
#define NV_PGRAPH_COLORCLEARVALUE_V                            31:0 /* RWXUF */
#define NV_PGRAPH_COLORCLEARVALUE_V_097                  0x00000000 /* RWC-V */
#define NV_PGRAPH_COLORKEYCOLOR0                         0x00401870 /* RW-4R */
#define NV_PGRAPH_COLORKEYCOLOR0_BUNDLE                  0x0000001C /* ----B */
#define NV_PGRAPH_COLORKEYCOLOR0_V                             31:0 /* RWXUF */
#define NV_PGRAPH_COLORKEYCOLOR0_V_097                   0x00000000 /* RWC-V */
#define NV_PGRAPH_COLORKEYCOLOR1                         0x00401874 /* RW-4R */
#define NV_PGRAPH_COLORKEYCOLOR1_BUNDLE                  0x0000001D /* ----B */
#define NV_PGRAPH_COLORKEYCOLOR1_V                             31:0 /* RWXUF */
#define NV_PGRAPH_COLORKEYCOLOR1_V_097                   0x00000000 /* RWC-V */
#define NV_PGRAPH_COLORKEYCOLOR2                         0x00401878 /* RW-4R */
#define NV_PGRAPH_COLORKEYCOLOR2_BUNDLE                  0x0000001E /* ----B */
#define NV_PGRAPH_COLORKEYCOLOR2_V                             31:0 /* RWXUF */
#define NV_PGRAPH_COLORKEYCOLOR2_V_097                   0x00000000 /* RWC-V */
#define NV_PGRAPH_COLORKEYCOLOR3                         0x0040187C /* RW-4R */
#define NV_PGRAPH_COLORKEYCOLOR3_BUNDLE                  0x0000001F /* ----B */
#define NV_PGRAPH_COLORKEYCOLOR3_V                             31:0 /* RWXUF */
#define NV_PGRAPH_COLORKEYCOLOR3_V_097                   0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEFACTOR0_0                       0x00401880 /* RW-4R */
#define NV_PGRAPH_COMBINEFACTOR0_0_BUNDLE                0x00000020 /* ----B */
#define NV_PGRAPH_COMBINEFACTOR0_0_BLUE                         7:0 /* RWXUF */
#define NV_PGRAPH_COMBINEFACTOR0_0_BLUE_097              0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEFACTOR0_0_GREEN                       15:8 /* RWXUF */
#define NV_PGRAPH_COMBINEFACTOR0_0_GREEN_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEFACTOR0_0_RED                        23:16 /* RWXUF */
#define NV_PGRAPH_COMBINEFACTOR0_0_RED_097               0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEFACTOR0_0_ALPHA                      31:24 /* RWXUF */
#define NV_PGRAPH_COMBINEFACTOR0_0_ALPHA_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEFACTOR0_1                       0x00401884 /* RW-4R */
#define NV_PGRAPH_COMBINEFACTOR0_1_BUNDLE                0x00000021 /* ----B */
#define NV_PGRAPH_COMBINEFACTOR0_1_BLUE                         7:0 /* RWXUF */
#define NV_PGRAPH_COMBINEFACTOR0_1_BLUE_097              0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEFACTOR0_1_GREEN                       15:8 /* RWXUF */
#define NV_PGRAPH_COMBINEFACTOR0_1_GREEN_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEFACTOR0_1_RED                        23:16 /* RWXUF */
#define NV_PGRAPH_COMBINEFACTOR0_1_RED_097               0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEFACTOR0_1_ALPHA                      31:24 /* RWXUF */
#define NV_PGRAPH_COMBINEFACTOR0_1_ALPHA_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEFACTOR0_2                       0x00401888 /* RW-4R */
#define NV_PGRAPH_COMBINEFACTOR0_2_BUNDLE                0x00000022 /* ----B */
#define NV_PGRAPH_COMBINEFACTOR0_2_BLUE                         7:0 /* RWXUF */
#define NV_PGRAPH_COMBINEFACTOR0_2_BLUE_097              0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEFACTOR0_2_GREEN                       15:8 /* RWXUF */
#define NV_PGRAPH_COMBINEFACTOR0_2_GREEN_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEFACTOR0_2_RED                        23:16 /* RWXUF */
#define NV_PGRAPH_COMBINEFACTOR0_2_RED_097               0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEFACTOR0_2_ALPHA                      31:24 /* RWXUF */
#define NV_PGRAPH_COMBINEFACTOR0_2_ALPHA_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEFACTOR0_3                       0x0040188C /* RW-4R */
#define NV_PGRAPH_COMBINEFACTOR0_3_BUNDLE                0x00000023 /* ----B */
#define NV_PGRAPH_COMBINEFACTOR0_3_BLUE                         7:0 /* RWXUF */
#define NV_PGRAPH_COMBINEFACTOR0_3_BLUE_097              0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEFACTOR0_3_GREEN                       15:8 /* RWXUF */
#define NV_PGRAPH_COMBINEFACTOR0_3_GREEN_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEFACTOR0_3_RED                        23:16 /* RWXUF */
#define NV_PGRAPH_COMBINEFACTOR0_3_RED_097               0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEFACTOR0_3_ALPHA                      31:24 /* RWXUF */
#define NV_PGRAPH_COMBINEFACTOR0_3_ALPHA_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEFACTOR0_4                       0x00401890 /* RW-4R */
#define NV_PGRAPH_COMBINEFACTOR0_4_BUNDLE                0x00000024 /* ----B */
#define NV_PGRAPH_COMBINEFACTOR0_4_BLUE                         7:0 /* RWXUF */
#define NV_PGRAPH_COMBINEFACTOR0_4_BLUE_097              0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEFACTOR0_4_GREEN                       15:8 /* RWXUF */
#define NV_PGRAPH_COMBINEFACTOR0_4_GREEN_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEFACTOR0_4_RED                        23:16 /* RWXUF */
#define NV_PGRAPH_COMBINEFACTOR0_4_RED_097               0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEFACTOR0_4_ALPHA                      31:24 /* RWXUF */
#define NV_PGRAPH_COMBINEFACTOR0_4_ALPHA_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEFACTOR0_5                       0x00401894 /* RW-4R */
#define NV_PGRAPH_COMBINEFACTOR0_5_BUNDLE                0x00000025 /* ----B */
#define NV_PGRAPH_COMBINEFACTOR0_5_BLUE                         7:0 /* RWXUF */
#define NV_PGRAPH_COMBINEFACTOR0_5_BLUE_097              0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEFACTOR0_5_GREEN                       15:8 /* RWXUF */
#define NV_PGRAPH_COMBINEFACTOR0_5_GREEN_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEFACTOR0_5_RED                        23:16 /* RWXUF */
#define NV_PGRAPH_COMBINEFACTOR0_5_RED_097               0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEFACTOR0_5_ALPHA                      31:24 /* RWXUF */
#define NV_PGRAPH_COMBINEFACTOR0_5_ALPHA_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEFACTOR0_6                       0x00401898 /* RW-4R */
#define NV_PGRAPH_COMBINEFACTOR0_6_BUNDLE                0x00000026 /* ----B */
#define NV_PGRAPH_COMBINEFACTOR0_6_BLUE                         7:0 /* RWXUF */
#define NV_PGRAPH_COMBINEFACTOR0_6_BLUE_097              0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEFACTOR0_6_GREEN                       15:8 /* RWXUF */
#define NV_PGRAPH_COMBINEFACTOR0_6_GREEN_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEFACTOR0_6_RED                        23:16 /* RWXUF */
#define NV_PGRAPH_COMBINEFACTOR0_6_RED_097               0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEFACTOR0_6_ALPHA                      31:24 /* RWXUF */
#define NV_PGRAPH_COMBINEFACTOR0_6_ALPHA_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEFACTOR0_7                       0x0040189C /* RW-4R */
#define NV_PGRAPH_COMBINEFACTOR0_7_BUNDLE                0x00000027 /* ----B */
#define NV_PGRAPH_COMBINEFACTOR0_7_BLUE                         7:0 /* RWXUF */
#define NV_PGRAPH_COMBINEFACTOR0_7_BLUE_097              0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEFACTOR0_7_GREEN                       15:8 /* RWXUF */
#define NV_PGRAPH_COMBINEFACTOR0_7_GREEN_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEFACTOR0_7_RED                        23:16 /* RWXUF */
#define NV_PGRAPH_COMBINEFACTOR0_7_RED_097               0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEFACTOR0_7_ALPHA                      31:24 /* RWXUF */
#define NV_PGRAPH_COMBINEFACTOR0_7_ALPHA_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEFACTOR1_0                       0x004018A0 /* RW-4R */
#define NV_PGRAPH_COMBINEFACTOR1_0_BUNDLE                0x00000028 /* ----B */
#define NV_PGRAPH_COMBINEFACTOR1_0_BLUE                         7:0 /* RWXUF */
#define NV_PGRAPH_COMBINEFACTOR1_0_BLUE_097              0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEFACTOR1_0_GREEN                       15:8 /* RWXUF */
#define NV_PGRAPH_COMBINEFACTOR1_0_GREEN_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEFACTOR1_0_RED                        23:16 /* RWXUF */
#define NV_PGRAPH_COMBINEFACTOR1_0_RED_097               0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEFACTOR1_0_ALPHA                      31:24 /* RWXUF */
#define NV_PGRAPH_COMBINEFACTOR1_0_ALPHA_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEFACTOR1_1                       0x004018A4 /* RW-4R */
#define NV_PGRAPH_COMBINEFACTOR1_1_BUNDLE                0x00000029 /* ----B */
#define NV_PGRAPH_COMBINEFACTOR1_1_BLUE                         7:0 /* RWXUF */
#define NV_PGRAPH_COMBINEFACTOR1_1_BLUE_097              0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEFACTOR1_1_GREEN                       15:8 /* RWXUF */
#define NV_PGRAPH_COMBINEFACTOR1_1_GREEN_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEFACTOR1_1_RED                        23:16 /* RWXUF */
#define NV_PGRAPH_COMBINEFACTOR1_1_RED_097               0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEFACTOR1_1_ALPHA                      31:24 /* RWXUF */
#define NV_PGRAPH_COMBINEFACTOR1_1_ALPHA_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEFACTOR1_2                       0x004018A8 /* RW-4R */
#define NV_PGRAPH_COMBINEFACTOR1_2_BUNDLE                0x0000002A /* ----B */
#define NV_PGRAPH_COMBINEFACTOR1_2_BLUE                         7:0 /* RWXUF */
#define NV_PGRAPH_COMBINEFACTOR1_2_BLUE_097              0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEFACTOR1_2_GREEN                       15:8 /* RWXUF */
#define NV_PGRAPH_COMBINEFACTOR1_2_GREEN_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEFACTOR1_2_RED                        23:16 /* RWXUF */
#define NV_PGRAPH_COMBINEFACTOR1_2_RED_097               0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEFACTOR1_2_ALPHA                      31:24 /* RWXUF */
#define NV_PGRAPH_COMBINEFACTOR1_2_ALPHA_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEFACTOR1_3                       0x004018AC /* RW-4R */
#define NV_PGRAPH_COMBINEFACTOR1_3_BUNDLE                0x0000002B /* ----B */
#define NV_PGRAPH_COMBINEFACTOR1_3_BLUE                         7:0 /* RWXUF */
#define NV_PGRAPH_COMBINEFACTOR1_3_BLUE_097              0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEFACTOR1_3_GREEN                       15:8 /* RWXUF */
#define NV_PGRAPH_COMBINEFACTOR1_3_GREEN_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEFACTOR1_3_RED                        23:16 /* RWXUF */
#define NV_PGRAPH_COMBINEFACTOR1_3_RED_097               0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEFACTOR1_3_ALPHA                      31:24 /* RWXUF */
#define NV_PGRAPH_COMBINEFACTOR1_3_ALPHA_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEFACTOR1_4                       0x004018B0 /* RW-4R */
#define NV_PGRAPH_COMBINEFACTOR1_4_BUNDLE                0x0000002C /* ----B */
#define NV_PGRAPH_COMBINEFACTOR1_4_BLUE                         7:0 /* RWXUF */
#define NV_PGRAPH_COMBINEFACTOR1_4_BLUE_097              0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEFACTOR1_4_GREEN                       15:8 /* RWXUF */
#define NV_PGRAPH_COMBINEFACTOR1_4_GREEN_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEFACTOR1_4_RED                        23:16 /* RWXUF */
#define NV_PGRAPH_COMBINEFACTOR1_4_RED_097               0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEFACTOR1_4_ALPHA                      31:24 /* RWXUF */
#define NV_PGRAPH_COMBINEFACTOR1_4_ALPHA_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEFACTOR1_5                       0x004018B4 /* RW-4R */
#define NV_PGRAPH_COMBINEFACTOR1_5_BUNDLE                0x0000002D /* ----B */
#define NV_PGRAPH_COMBINEFACTOR1_5_BLUE                         7:0 /* RWXUF */
#define NV_PGRAPH_COMBINEFACTOR1_5_BLUE_097              0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEFACTOR1_5_GREEN                       15:8 /* RWXUF */
#define NV_PGRAPH_COMBINEFACTOR1_5_GREEN_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEFACTOR1_5_RED                        23:16 /* RWXUF */
#define NV_PGRAPH_COMBINEFACTOR1_5_RED_097               0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEFACTOR1_5_ALPHA                      31:24 /* RWXUF */
#define NV_PGRAPH_COMBINEFACTOR1_5_ALPHA_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEFACTOR1_6                       0x004018B8 /* RW-4R */
#define NV_PGRAPH_COMBINEFACTOR1_6_BUNDLE                0x0000002E /* ----B */
#define NV_PGRAPH_COMBINEFACTOR1_6_BLUE                         7:0 /* RWXUF */
#define NV_PGRAPH_COMBINEFACTOR1_6_BLUE_097              0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEFACTOR1_6_GREEN                       15:8 /* RWXUF */
#define NV_PGRAPH_COMBINEFACTOR1_6_GREEN_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEFACTOR1_6_RED                        23:16 /* RWXUF */
#define NV_PGRAPH_COMBINEFACTOR1_6_RED_097               0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEFACTOR1_6_ALPHA                      31:24 /* RWXUF */
#define NV_PGRAPH_COMBINEFACTOR1_6_ALPHA_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEFACTOR1_7                       0x004018BC /* RW-4R */
#define NV_PGRAPH_COMBINEFACTOR1_7_BUNDLE                0x0000002F /* ----B */
#define NV_PGRAPH_COMBINEFACTOR1_7_BLUE                         7:0 /* RWXUF */
#define NV_PGRAPH_COMBINEFACTOR1_7_BLUE_097              0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEFACTOR1_7_GREEN                       15:8 /* RWXUF */
#define NV_PGRAPH_COMBINEFACTOR1_7_GREEN_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEFACTOR1_7_RED                        23:16 /* RWXUF */
#define NV_PGRAPH_COMBINEFACTOR1_7_RED_097               0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEFACTOR1_7_ALPHA                      31:24 /* RWXUF */
#define NV_PGRAPH_COMBINEFACTOR1_7_ALPHA_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAI0                         0x004018C0 /* RW-4R */
#define NV_PGRAPH_COMBINEALPHAI0_BUNDLE                  0x00000030 /* ----B */
#define NV_PGRAPH_COMBINEALPHAI0_AMAP                         31:29 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAI0_AMAP_UNSIGNED_IDENTITY  0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI0_AMAP_UNSIGNED_INVERT    0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI0_AMAP_EXPAND_NORMAL      0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI0_AMAP_EXPAND_NEGATE      0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI0_AMAP_HALFBIAS_NORMAL    0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI0_AMAP_HALFBIAS_NEGATE    0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI0_AMAP_SIGNED_IDENTITY    0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI0_AMAP_SIGNED_NEGATE      0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI0_AMAP_097                0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAI0_A_ALPHA                      28:28 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAI0_A_ALPHA_FALSE           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI0_A_ALPHA_TRUE            0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI0_A_ALPHA_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAI0_ASOURCE                      27:24 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAI0_ASOURCE_REG_0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI0_ASOURCE_REG_1           0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI0_ASOURCE_REG_2           0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI0_ASOURCE_REG_3           0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI0_ASOURCE_REG_4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI0_ASOURCE_REG_5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI0_ASOURCE_REG_8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI0_ASOURCE_REG_9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI0_ASOURCE_REG_A           0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI0_ASOURCE_REG_B           0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI0_ASOURCE_REG_C           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI0_ASOURCE_REG_D           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI0_ASOURCE_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAI0_BMAP                         23:21 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAI0_BMAP_UNSIGNED_IDENTITY  0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI0_BMAP_UNSIGNED_INVERT    0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI0_BMAP_EXPAND_NORMAL      0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI0_BMAP_EXPAND_NEGATE      0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI0_BMAP_HALFBIAS_NORMAL    0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI0_BMAP_HALFBIAS_NEGATE    0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI0_BMAP_SIGNED_IDENTITY    0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI0_BMAP_SIGNED_NEGATE      0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI0_BMAP_097                0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAI0_B_ALPHA                      20:20 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAI0_B_ALPHA_FALSE           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI0_B_ALPHA_TRUE            0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI0_B_ALPHA_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAI0_BSOURCE                      19:16 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAI0_BSOURCE_REG_0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI0_BSOURCE_REG_1           0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI0_BSOURCE_REG_2           0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI0_BSOURCE_REG_3           0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI0_BSOURCE_REG_4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI0_BSOURCE_REG_5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI0_BSOURCE_REG_8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI0_BSOURCE_REG_9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI0_BSOURCE_REG_A           0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI0_BSOURCE_REG_B           0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI0_BSOURCE_REG_C           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI0_BSOURCE_REG_D           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI0_BSOURCE_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAI0_CMAP                         15:13 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAI0_CMAP_UNSIGNED_IDENTITY  0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI0_CMAP_UNSIGNED_INVERT    0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI0_CMAP_EXPAND_NORMAL      0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI0_CMAP_EXPAND_NEGATE      0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI0_CMAP_HALFBIAS_NORMAL    0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI0_CMAP_HALFBIAS_NEGATE    0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI0_CMAP_SIGNED_IDENTITY    0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI0_CMAP_SIGNED_NEGATE      0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI0_CMAP_097                0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAI0_C_ALPHA                      12:12 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAI0_C_ALPHA_FALSE           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI0_C_ALPHA_TRUE            0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI0_C_ALPHA_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAI0_CSOURCE                       11:8 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAI0_CSOURCE_REG_0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI0_CSOURCE_REG_1           0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI0_CSOURCE_REG_2           0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI0_CSOURCE_REG_3           0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI0_CSOURCE_REG_4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI0_CSOURCE_REG_5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI0_CSOURCE_REG_8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI0_CSOURCE_REG_9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI0_CSOURCE_REG_A           0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI0_CSOURCE_REG_B           0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI0_CSOURCE_REG_C           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI0_CSOURCE_REG_D           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI0_CSOURCE_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAI0_DMAP                           7:5 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAI0_DMAP_UNSIGNED_IDENTITY  0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI0_DMAP_UNSIGNED_INVERT    0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI0_DMAP_EXPAND_NORMAL      0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI0_DMAP_EXPAND_NEGATE      0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI0_DMAP_HALFBIAS_NORMAL    0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI0_DMAP_HALFBIAS_NEGATE    0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI0_DMAP_SIGNED_IDENTITY    0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI0_DMAP_SIGNED_NEGATE      0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI0_DMAP_097                0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAI0_D_ALPHA                        4:4 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAI0_D_ALPHA_FALSE           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI0_D_ALPHA_TRUE            0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI0_D_ALPHA_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAI0_DSOURCE                        3:0 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAI0_DSOURCE_REG_0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI0_DSOURCE_REG_1           0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI0_DSOURCE_REG_2           0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI0_DSOURCE_REG_3           0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI0_DSOURCE_REG_4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI0_DSOURCE_REG_5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI0_DSOURCE_REG_8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI0_DSOURCE_REG_9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI0_DSOURCE_REG_A           0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI0_DSOURCE_REG_B           0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI0_DSOURCE_REG_C           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI0_DSOURCE_REG_D           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI0_DSOURCE_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAI1                         0x004018C4 /* RW-4R */
#define NV_PGRAPH_COMBINEALPHAI1_BUNDLE                  0x00000031 /* ----B */
#define NV_PGRAPH_COMBINEALPHAI1_AMAP                         31:29 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAI1_AMAP_UNSIGNED_IDENTITY  0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI1_AMAP_UNSIGNED_INVERT    0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI1_AMAP_EXPAND_NORMAL      0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI1_AMAP_EXPAND_NEGATE      0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI1_AMAP_HALFBIAS_NORMAL    0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI1_AMAP_HALFBIAS_NEGATE    0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI1_AMAP_SIGNED_IDENTITY    0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI1_AMAP_SIGNED_NEGATE      0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI1_AMAP_097                0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAI1_A_ALPHA                      28:28 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAI1_A_ALPHA_FALSE           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI1_A_ALPHA_TRUE            0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI1_A_ALPHA_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAI1_ASOURCE                      27:24 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAI1_ASOURCE_REG_0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI1_ASOURCE_REG_1           0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI1_ASOURCE_REG_2           0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI1_ASOURCE_REG_3           0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI1_ASOURCE_REG_4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI1_ASOURCE_REG_5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI1_ASOURCE_REG_8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI1_ASOURCE_REG_9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI1_ASOURCE_REG_A           0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI1_ASOURCE_REG_B           0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI1_ASOURCE_REG_C           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI1_ASOURCE_REG_D           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI1_ASOURCE_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAI1_BMAP                         23:21 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAI1_BMAP_UNSIGNED_IDENTITY  0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI1_BMAP_UNSIGNED_INVERT    0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI1_BMAP_EXPAND_NORMAL      0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI1_BMAP_EXPAND_NEGATE      0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI1_BMAP_HALFBIAS_NORMAL    0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI1_BMAP_HALFBIAS_NEGATE    0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI1_BMAP_SIGNED_IDENTITY    0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI1_BMAP_SIGNED_NEGATE      0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI1_BMAP_097                0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAI1_B_ALPHA                      20:20 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAI1_B_ALPHA_FALSE           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI1_B_ALPHA_TRUE            0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI1_B_ALPHA_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAI1_BSOURCE                      19:16 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAI1_BSOURCE_REG_0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI1_BSOURCE_REG_1           0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI1_BSOURCE_REG_2           0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI1_BSOURCE_REG_3           0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI1_BSOURCE_REG_4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI1_BSOURCE_REG_5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI1_BSOURCE_REG_8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI1_BSOURCE_REG_9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI1_BSOURCE_REG_A           0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI1_BSOURCE_REG_B           0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI1_BSOURCE_REG_C           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI1_BSOURCE_REG_D           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI1_BSOURCE_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAI1_CMAP                         15:13 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAI1_CMAP_UNSIGNED_IDENTITY  0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI1_CMAP_UNSIGNED_INVERT    0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI1_CMAP_EXPAND_NORMAL      0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI1_CMAP_EXPAND_NEGATE      0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI1_CMAP_HALFBIAS_NORMAL    0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI1_CMAP_HALFBIAS_NEGATE    0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI1_CMAP_SIGNED_IDENTITY    0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI1_CMAP_SIGNED_NEGATE      0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI1_CMAP_097                0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAI1_C_ALPHA                      12:12 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAI1_C_ALPHA_FALSE           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI1_C_ALPHA_TRUE            0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI1_C_ALPHA_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAI1_CSOURCE                       11:8 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAI1_CSOURCE_REG_0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI1_CSOURCE_REG_1           0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI1_CSOURCE_REG_2           0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI1_CSOURCE_REG_3           0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI1_CSOURCE_REG_4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI1_CSOURCE_REG_5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI1_CSOURCE_REG_8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI1_CSOURCE_REG_9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI1_CSOURCE_REG_A           0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI1_CSOURCE_REG_B           0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI1_CSOURCE_REG_C           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI1_CSOURCE_REG_D           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI1_CSOURCE_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAI1_DMAP                           7:5 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAI1_DMAP_UNSIGNED_IDENTITY  0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI1_DMAP_UNSIGNED_INVERT    0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI1_DMAP_EXPAND_NORMAL      0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI1_DMAP_EXPAND_NEGATE      0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI1_DMAP_HALFBIAS_NORMAL    0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI1_DMAP_HALFBIAS_NEGATE    0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI1_DMAP_SIGNED_IDENTITY    0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI1_DMAP_SIGNED_NEGATE      0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI1_DMAP_097                0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAI1_D_ALPHA                        4:4 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAI1_D_ALPHA_FALSE           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI1_D_ALPHA_TRUE            0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI1_D_ALPHA_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAI1_DSOURCE                        3:0 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAI1_DSOURCE_REG_0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI1_DSOURCE_REG_1           0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI1_DSOURCE_REG_2           0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI1_DSOURCE_REG_3           0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI1_DSOURCE_REG_4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI1_DSOURCE_REG_5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI1_DSOURCE_REG_8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI1_DSOURCE_REG_9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI1_DSOURCE_REG_A           0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI1_DSOURCE_REG_B           0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI1_DSOURCE_REG_C           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI1_DSOURCE_REG_D           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI1_DSOURCE_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAI2                         0x004018C8 /* RW-4R */
#define NV_PGRAPH_COMBINEALPHAI2_BUNDLE                  0x00000032 /* ----B */
#define NV_PGRAPH_COMBINEALPHAI2_AMAP                         31:29 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAI2_AMAP_UNSIGNED_IDENTITY  0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI2_AMAP_UNSIGNED_INVERT    0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI2_AMAP_EXPAND_NORMAL      0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI2_AMAP_EXPAND_NEGATE      0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI2_AMAP_HALFBIAS_NORMAL    0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI2_AMAP_HALFBIAS_NEGATE    0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI2_AMAP_SIGNED_IDENTITY    0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI2_AMAP_SIGNED_NEGATE      0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI2_AMAP_097                0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAI2_A_ALPHA                      28:28 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAI2_A_ALPHA_FALSE           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI2_A_ALPHA_TRUE            0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI2_A_ALPHA_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAI2_ASOURCE                      27:24 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAI2_ASOURCE_REG_0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI2_ASOURCE_REG_1           0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI2_ASOURCE_REG_2           0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI2_ASOURCE_REG_3           0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI2_ASOURCE_REG_4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI2_ASOURCE_REG_5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI2_ASOURCE_REG_8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI2_ASOURCE_REG_9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI2_ASOURCE_REG_A           0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI2_ASOURCE_REG_B           0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI2_ASOURCE_REG_C           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI2_ASOURCE_REG_D           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI2_ASOURCE_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAI2_BMAP                         23:21 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAI2_BMAP_UNSIGNED_IDENTITY  0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI2_BMAP_UNSIGNED_INVERT    0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI2_BMAP_EXPAND_NORMAL      0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI2_BMAP_EXPAND_NEGATE      0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI2_BMAP_HALFBIAS_NORMAL    0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI2_BMAP_HALFBIAS_NEGATE    0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI2_BMAP_SIGNED_IDENTITY    0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI2_BMAP_SIGNED_NEGATE      0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI2_BMAP_097                0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAI2_B_ALPHA                      20:20 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAI2_B_ALPHA_FALSE           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI2_B_ALPHA_TRUE            0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI2_B_ALPHA_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAI2_BSOURCE                      19:16 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAI2_BSOURCE_REG_0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI2_BSOURCE_REG_1           0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI2_BSOURCE_REG_2           0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI2_BSOURCE_REG_3           0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI2_BSOURCE_REG_4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI2_BSOURCE_REG_5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI2_BSOURCE_REG_8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI2_BSOURCE_REG_9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI2_BSOURCE_REG_A           0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI2_BSOURCE_REG_B           0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI2_BSOURCE_REG_C           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI2_BSOURCE_REG_D           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI2_BSOURCE_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAI2_CMAP                         15:13 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAI2_CMAP_UNSIGNED_IDENTITY  0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI2_CMAP_UNSIGNED_INVERT    0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI2_CMAP_EXPAND_NORMAL      0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI2_CMAP_EXPAND_NEGATE      0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI2_CMAP_HALFBIAS_NORMAL    0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI2_CMAP_HALFBIAS_NEGATE    0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI2_CMAP_SIGNED_IDENTITY    0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI2_CMAP_SIGNED_NEGATE      0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI2_CMAP_097                0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAI2_C_ALPHA                      12:12 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAI2_C_ALPHA_FALSE           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI2_C_ALPHA_TRUE            0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI2_C_ALPHA_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAI2_CSOURCE                       11:8 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAI2_CSOURCE_REG_0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI2_CSOURCE_REG_1           0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI2_CSOURCE_REG_2           0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI2_CSOURCE_REG_3           0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI2_CSOURCE_REG_4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI2_CSOURCE_REG_5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI2_CSOURCE_REG_8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI2_CSOURCE_REG_9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI2_CSOURCE_REG_A           0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI2_CSOURCE_REG_B           0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI2_CSOURCE_REG_C           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI2_CSOURCE_REG_D           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI2_CSOURCE_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAI2_DMAP                           7:5 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAI2_DMAP_UNSIGNED_IDENTITY  0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI2_DMAP_UNSIGNED_INVERT    0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI2_DMAP_EXPAND_NORMAL      0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI2_DMAP_EXPAND_NEGATE      0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI2_DMAP_HALFBIAS_NORMAL    0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI2_DMAP_HALFBIAS_NEGATE    0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI2_DMAP_SIGNED_IDENTITY    0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI2_DMAP_SIGNED_NEGATE      0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI2_DMAP_097                0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAI2_D_ALPHA                        4:4 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAI2_D_ALPHA_FALSE           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI2_D_ALPHA_TRUE            0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI2_D_ALPHA_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAI2_DSOURCE                        3:0 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAI2_DSOURCE_REG_0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI2_DSOURCE_REG_1           0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI2_DSOURCE_REG_2           0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI2_DSOURCE_REG_3           0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI2_DSOURCE_REG_4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI2_DSOURCE_REG_5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI2_DSOURCE_REG_8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI2_DSOURCE_REG_9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI2_DSOURCE_REG_A           0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI2_DSOURCE_REG_B           0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI2_DSOURCE_REG_C           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI2_DSOURCE_REG_D           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI2_DSOURCE_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAI3                         0x004018CC /* RW-4R */
#define NV_PGRAPH_COMBINEALPHAI3_BUNDLE                  0x00000033 /* ----B */
#define NV_PGRAPH_COMBINEALPHAI3_AMAP                         31:29 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAI3_AMAP_UNSIGNED_IDENTITY  0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI3_AMAP_UNSIGNED_INVERT    0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI3_AMAP_EXPAND_NORMAL      0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI3_AMAP_EXPAND_NEGATE      0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI3_AMAP_HALFBIAS_NORMAL    0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI3_AMAP_HALFBIAS_NEGATE    0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI3_AMAP_SIGNED_IDENTITY    0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI3_AMAP_SIGNED_NEGATE      0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI3_AMAP_097                0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAI3_A_ALPHA                      28:28 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAI3_A_ALPHA_FALSE           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI3_A_ALPHA_TRUE            0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI3_A_ALPHA_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAI3_ASOURCE                      27:24 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAI3_ASOURCE_REG_0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI3_ASOURCE_REG_1           0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI3_ASOURCE_REG_2           0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI3_ASOURCE_REG_3           0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI3_ASOURCE_REG_4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI3_ASOURCE_REG_5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI3_ASOURCE_REG_8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI3_ASOURCE_REG_9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI3_ASOURCE_REG_A           0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI3_ASOURCE_REG_B           0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI3_ASOURCE_REG_C           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI3_ASOURCE_REG_D           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI3_ASOURCE_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAI3_BMAP                         23:21 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAI3_BMAP_UNSIGNED_IDENTITY  0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI3_BMAP_UNSIGNED_INVERT    0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI3_BMAP_EXPAND_NORMAL      0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI3_BMAP_EXPAND_NEGATE      0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI3_BMAP_HALFBIAS_NORMAL    0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI3_BMAP_HALFBIAS_NEGATE    0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI3_BMAP_SIGNED_IDENTITY    0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI3_BMAP_SIGNED_NEGATE      0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI3_BMAP_097                0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAI3_B_ALPHA                      20:20 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAI3_B_ALPHA_FALSE           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI3_B_ALPHA_TRUE            0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI3_B_ALPHA_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAI3_BSOURCE                      19:16 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAI3_BSOURCE_REG_0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI3_BSOURCE_REG_1           0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI3_BSOURCE_REG_2           0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI3_BSOURCE_REG_3           0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI3_BSOURCE_REG_4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI3_BSOURCE_REG_5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI3_BSOURCE_REG_8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI3_BSOURCE_REG_9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI3_BSOURCE_REG_A           0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI3_BSOURCE_REG_B           0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI3_BSOURCE_REG_C           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI3_BSOURCE_REG_D           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI3_BSOURCE_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAI3_CMAP                         15:13 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAI3_CMAP_UNSIGNED_IDENTITY  0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI3_CMAP_UNSIGNED_INVERT    0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI3_CMAP_EXPAND_NORMAL      0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI3_CMAP_EXPAND_NEGATE      0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI3_CMAP_HALFBIAS_NORMAL    0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI3_CMAP_HALFBIAS_NEGATE    0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI3_CMAP_SIGNED_IDENTITY    0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI3_CMAP_SIGNED_NEGATE      0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI3_CMAP_097                0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAI3_C_ALPHA                      12:12 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAI3_C_ALPHA_FALSE           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI3_C_ALPHA_TRUE            0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI3_C_ALPHA_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAI3_CSOURCE                       11:8 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAI3_CSOURCE_REG_0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI3_CSOURCE_REG_1           0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI3_CSOURCE_REG_2           0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI3_CSOURCE_REG_3           0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI3_CSOURCE_REG_4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI3_CSOURCE_REG_5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI3_CSOURCE_REG_8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI3_CSOURCE_REG_9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI3_CSOURCE_REG_A           0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI3_CSOURCE_REG_B           0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI3_CSOURCE_REG_C           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI3_CSOURCE_REG_D           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI3_CSOURCE_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAI3_DMAP                           7:5 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAI3_DMAP_UNSIGNED_IDENTITY  0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI3_DMAP_UNSIGNED_INVERT    0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI3_DMAP_EXPAND_NORMAL      0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI3_DMAP_EXPAND_NEGATE      0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI3_DMAP_HALFBIAS_NORMAL    0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI3_DMAP_HALFBIAS_NEGATE    0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI3_DMAP_SIGNED_IDENTITY    0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI3_DMAP_SIGNED_NEGATE      0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI3_DMAP_097                0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAI3_D_ALPHA                        4:4 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAI3_D_ALPHA_FALSE           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI3_D_ALPHA_TRUE            0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI3_D_ALPHA_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAI3_DSOURCE                        3:0 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAI3_DSOURCE_REG_0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI3_DSOURCE_REG_1           0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI3_DSOURCE_REG_2           0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI3_DSOURCE_REG_3           0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI3_DSOURCE_REG_4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI3_DSOURCE_REG_5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI3_DSOURCE_REG_8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI3_DSOURCE_REG_9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI3_DSOURCE_REG_A           0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI3_DSOURCE_REG_B           0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI3_DSOURCE_REG_C           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI3_DSOURCE_REG_D           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI3_DSOURCE_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAI4                         0x004018D0 /* RW-4R */
#define NV_PGRAPH_COMBINEALPHAI4_BUNDLE                  0x00000034 /* ----B */
#define NV_PGRAPH_COMBINEALPHAI4_AMAP                         31:29 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAI4_AMAP_UNSIGNED_IDENTITY  0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI4_AMAP_UNSIGNED_INVERT    0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI4_AMAP_EXPAND_NORMAL      0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI4_AMAP_EXPAND_NEGATE      0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI4_AMAP_HALFBIAS_NORMAL    0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI4_AMAP_HALFBIAS_NEGATE    0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI4_AMAP_SIGNED_IDENTITY    0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI4_AMAP_SIGNED_NEGATE      0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI4_AMAP_097                0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAI4_A_ALPHA                      28:28 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAI4_A_ALPHA_FALSE           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI4_A_ALPHA_TRUE            0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI4_A_ALPHA_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAI4_ASOURCE                      27:24 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAI4_ASOURCE_REG_0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI4_ASOURCE_REG_1           0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI4_ASOURCE_REG_2           0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI4_ASOURCE_REG_3           0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI4_ASOURCE_REG_4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI4_ASOURCE_REG_5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI4_ASOURCE_REG_8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI4_ASOURCE_REG_9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI4_ASOURCE_REG_A           0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI4_ASOURCE_REG_B           0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI4_ASOURCE_REG_C           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI4_ASOURCE_REG_D           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI4_ASOURCE_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAI4_BMAP                         23:21 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAI4_BMAP_UNSIGNED_IDENTITY  0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI4_BMAP_UNSIGNED_INVERT    0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI4_BMAP_EXPAND_NORMAL      0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI4_BMAP_EXPAND_NEGATE      0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI4_BMAP_HALFBIAS_NORMAL    0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI4_BMAP_HALFBIAS_NEGATE    0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI4_BMAP_SIGNED_IDENTITY    0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI4_BMAP_SIGNED_NEGATE      0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI4_BMAP_097                0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAI4_B_ALPHA                      20:20 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAI4_B_ALPHA_FALSE           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI4_B_ALPHA_TRUE            0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI4_B_ALPHA_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAI4_BSOURCE                      19:16 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAI4_BSOURCE_REG_0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI4_BSOURCE_REG_1           0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI4_BSOURCE_REG_2           0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI4_BSOURCE_REG_3           0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI4_BSOURCE_REG_4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI4_BSOURCE_REG_5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI4_BSOURCE_REG_8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI4_BSOURCE_REG_9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI4_BSOURCE_REG_A           0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI4_BSOURCE_REG_B           0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI4_BSOURCE_REG_C           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI4_BSOURCE_REG_D           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI4_BSOURCE_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAI4_CMAP                         15:13 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAI4_CMAP_UNSIGNED_IDENTITY  0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI4_CMAP_UNSIGNED_INVERT    0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI4_CMAP_EXPAND_NORMAL      0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI4_CMAP_EXPAND_NEGATE      0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI4_CMAP_HALFBIAS_NORMAL    0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI4_CMAP_HALFBIAS_NEGATE    0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI4_CMAP_SIGNED_IDENTITY    0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI4_CMAP_SIGNED_NEGATE      0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI4_CMAP_097                0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAI4_C_ALPHA                      12:12 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAI4_C_ALPHA_FALSE           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI4_C_ALPHA_TRUE            0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI4_C_ALPHA_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAI4_CSOURCE                       11:8 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAI4_CSOURCE_REG_0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI4_CSOURCE_REG_1           0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI4_CSOURCE_REG_2           0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI4_CSOURCE_REG_3           0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI4_CSOURCE_REG_4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI4_CSOURCE_REG_5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI4_CSOURCE_REG_8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI4_CSOURCE_REG_9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI4_CSOURCE_REG_A           0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI4_CSOURCE_REG_B           0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI4_CSOURCE_REG_C           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI4_CSOURCE_REG_D           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI4_CSOURCE_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAI4_DMAP                           7:5 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAI4_DMAP_UNSIGNED_IDENTITY  0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI4_DMAP_UNSIGNED_INVERT    0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI4_DMAP_EXPAND_NORMAL      0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI4_DMAP_EXPAND_NEGATE      0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI4_DMAP_HALFBIAS_NORMAL    0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI4_DMAP_HALFBIAS_NEGATE    0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI4_DMAP_SIGNED_IDENTITY    0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI4_DMAP_SIGNED_NEGATE      0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI4_DMAP_097                0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAI4_D_ALPHA                        4:4 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAI4_D_ALPHA_FALSE           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI4_D_ALPHA_TRUE            0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI4_D_ALPHA_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAI4_DSOURCE                        3:0 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAI4_DSOURCE_REG_0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI4_DSOURCE_REG_1           0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI4_DSOURCE_REG_2           0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI4_DSOURCE_REG_3           0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI4_DSOURCE_REG_4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI4_DSOURCE_REG_5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI4_DSOURCE_REG_8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI4_DSOURCE_REG_9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI4_DSOURCE_REG_A           0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI4_DSOURCE_REG_B           0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI4_DSOURCE_REG_C           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI4_DSOURCE_REG_D           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI4_DSOURCE_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAI5                         0x004018D4 /* RW-4R */
#define NV_PGRAPH_COMBINEALPHAI5_BUNDLE                  0x00000035 /* ----B */
#define NV_PGRAPH_COMBINEALPHAI5_AMAP                         31:29 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAI5_AMAP_UNSIGNED_IDENTITY  0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI5_AMAP_UNSIGNED_INVERT    0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI5_AMAP_EXPAND_NORMAL      0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI5_AMAP_EXPAND_NEGATE      0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI5_AMAP_HALFBIAS_NORMAL    0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI5_AMAP_HALFBIAS_NEGATE    0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI5_AMAP_SIGNED_IDENTITY    0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI5_AMAP_SIGNED_NEGATE      0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI5_AMAP_097                0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAI5_A_ALPHA                      28:28 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAI5_A_ALPHA_FALSE           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI5_A_ALPHA_TRUE            0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI5_A_ALPHA_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAI5_ASOURCE                      27:24 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAI5_ASOURCE_REG_0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI5_ASOURCE_REG_1           0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI5_ASOURCE_REG_2           0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI5_ASOURCE_REG_3           0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI5_ASOURCE_REG_4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI5_ASOURCE_REG_5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI5_ASOURCE_REG_8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI5_ASOURCE_REG_9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI5_ASOURCE_REG_A           0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI5_ASOURCE_REG_B           0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI5_ASOURCE_REG_C           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI5_ASOURCE_REG_D           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI5_ASOURCE_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAI5_BMAP                         23:21 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAI5_BMAP_UNSIGNED_IDENTITY  0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI5_BMAP_UNSIGNED_INVERT    0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI5_BMAP_EXPAND_NORMAL      0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI5_BMAP_EXPAND_NEGATE      0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI5_BMAP_HALFBIAS_NORMAL    0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI5_BMAP_HALFBIAS_NEGATE    0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI5_BMAP_SIGNED_IDENTITY    0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI5_BMAP_SIGNED_NEGATE      0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI5_BMAP_097                0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAI5_B_ALPHA                      20:20 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAI5_B_ALPHA_FALSE           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI5_B_ALPHA_TRUE            0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI5_B_ALPHA_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAI5_BSOURCE                      19:16 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAI5_BSOURCE_REG_0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI5_BSOURCE_REG_1           0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI5_BSOURCE_REG_2           0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI5_BSOURCE_REG_3           0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI5_BSOURCE_REG_4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI5_BSOURCE_REG_5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI5_BSOURCE_REG_8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI5_BSOURCE_REG_9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI5_BSOURCE_REG_A           0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI5_BSOURCE_REG_B           0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI5_BSOURCE_REG_C           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI5_BSOURCE_REG_D           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI5_BSOURCE_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAI5_CMAP                         15:13 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAI5_CMAP_UNSIGNED_IDENTITY  0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI5_CMAP_UNSIGNED_INVERT    0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI5_CMAP_EXPAND_NORMAL      0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI5_CMAP_EXPAND_NEGATE      0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI5_CMAP_HALFBIAS_NORMAL    0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI5_CMAP_HALFBIAS_NEGATE    0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI5_CMAP_SIGNED_IDENTITY    0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI5_CMAP_SIGNED_NEGATE      0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI5_CMAP_097                0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAI5_C_ALPHA                      12:12 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAI5_C_ALPHA_FALSE           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI5_C_ALPHA_TRUE            0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI5_C_ALPHA_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAI5_CSOURCE                       11:8 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAI5_CSOURCE_REG_0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI5_CSOURCE_REG_1           0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI5_CSOURCE_REG_2           0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI5_CSOURCE_REG_3           0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI5_CSOURCE_REG_4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI5_CSOURCE_REG_5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI5_CSOURCE_REG_8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI5_CSOURCE_REG_9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI5_CSOURCE_REG_A           0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI5_CSOURCE_REG_B           0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI5_CSOURCE_REG_C           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI5_CSOURCE_REG_D           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI5_CSOURCE_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAI5_DMAP                           7:5 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAI5_DMAP_UNSIGNED_IDENTITY  0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI5_DMAP_UNSIGNED_INVERT    0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI5_DMAP_EXPAND_NORMAL      0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI5_DMAP_EXPAND_NEGATE      0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI5_DMAP_HALFBIAS_NORMAL    0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI5_DMAP_HALFBIAS_NEGATE    0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI5_DMAP_SIGNED_IDENTITY    0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI5_DMAP_SIGNED_NEGATE      0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI5_DMAP_097                0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAI5_D_ALPHA                        4:4 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAI5_D_ALPHA_FALSE           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI5_D_ALPHA_TRUE            0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI5_D_ALPHA_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAI5_DSOURCE                        3:0 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAI5_DSOURCE_REG_0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI5_DSOURCE_REG_1           0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI5_DSOURCE_REG_2           0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI5_DSOURCE_REG_3           0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI5_DSOURCE_REG_4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI5_DSOURCE_REG_5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI5_DSOURCE_REG_8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI5_DSOURCE_REG_9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI5_DSOURCE_REG_A           0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI5_DSOURCE_REG_B           0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI5_DSOURCE_REG_C           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI5_DSOURCE_REG_D           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI5_DSOURCE_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAI6                         0x004018D8 /* RW-4R */
#define NV_PGRAPH_COMBINEALPHAI6_BUNDLE                  0x00000036 /* ----B */
#define NV_PGRAPH_COMBINEALPHAI6_AMAP                         31:29 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAI6_AMAP_UNSIGNED_IDENTITY  0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI6_AMAP_UNSIGNED_INVERT    0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI6_AMAP_EXPAND_NORMAL      0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI6_AMAP_EXPAND_NEGATE      0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI6_AMAP_HALFBIAS_NORMAL    0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI6_AMAP_HALFBIAS_NEGATE    0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI6_AMAP_SIGNED_IDENTITY    0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI6_AMAP_SIGNED_NEGATE      0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI6_AMAP_097                0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAI6_A_ALPHA                      28:28 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAI6_A_ALPHA_FALSE           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI6_A_ALPHA_TRUE            0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI6_A_ALPHA_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAI6_ASOURCE                      27:24 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAI6_ASOURCE_REG_0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI6_ASOURCE_REG_1           0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI6_ASOURCE_REG_2           0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI6_ASOURCE_REG_3           0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI6_ASOURCE_REG_4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI6_ASOURCE_REG_5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI6_ASOURCE_REG_8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI6_ASOURCE_REG_9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI6_ASOURCE_REG_A           0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI6_ASOURCE_REG_B           0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI6_ASOURCE_REG_C           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI6_ASOURCE_REG_D           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI6_ASOURCE_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAI6_BMAP                         23:21 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAI6_BMAP_UNSIGNED_IDENTITY  0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI6_BMAP_UNSIGNED_INVERT    0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI6_BMAP_EXPAND_NORMAL      0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI6_BMAP_EXPAND_NEGATE      0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI6_BMAP_HALFBIAS_NORMAL    0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI6_BMAP_HALFBIAS_NEGATE    0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI6_BMAP_SIGNED_IDENTITY    0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI6_BMAP_SIGNED_NEGATE      0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI6_BMAP_097                0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAI6_B_ALPHA                      20:20 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAI6_B_ALPHA_FALSE           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI6_B_ALPHA_TRUE            0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI6_B_ALPHA_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAI6_BSOURCE                      19:16 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAI6_BSOURCE_REG_0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI6_BSOURCE_REG_1           0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI6_BSOURCE_REG_2           0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI6_BSOURCE_REG_3           0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI6_BSOURCE_REG_4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI6_BSOURCE_REG_5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI6_BSOURCE_REG_8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI6_BSOURCE_REG_9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI6_BSOURCE_REG_A           0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI6_BSOURCE_REG_B           0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI6_BSOURCE_REG_C           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI6_BSOURCE_REG_D           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI6_BSOURCE_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAI6_CMAP                         15:13 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAI6_CMAP_UNSIGNED_IDENTITY  0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI6_CMAP_UNSIGNED_INVERT    0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI6_CMAP_EXPAND_NORMAL      0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI6_CMAP_EXPAND_NEGATE      0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI6_CMAP_HALFBIAS_NORMAL    0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI6_CMAP_HALFBIAS_NEGATE    0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI6_CMAP_SIGNED_IDENTITY    0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI6_CMAP_SIGNED_NEGATE      0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI6_CMAP_097                0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAI6_C_ALPHA                      12:12 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAI6_C_ALPHA_FALSE           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI6_C_ALPHA_TRUE            0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI6_C_ALPHA_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAI6_CSOURCE                       11:8 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAI6_CSOURCE_REG_0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI6_CSOURCE_REG_1           0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI6_CSOURCE_REG_2           0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI6_CSOURCE_REG_3           0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI6_CSOURCE_REG_4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI6_CSOURCE_REG_5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI6_CSOURCE_REG_8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI6_CSOURCE_REG_9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI6_CSOURCE_REG_A           0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI6_CSOURCE_REG_B           0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI6_CSOURCE_REG_C           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI6_CSOURCE_REG_D           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI6_CSOURCE_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAI6_DMAP                           7:5 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAI6_DMAP_UNSIGNED_IDENTITY  0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI6_DMAP_UNSIGNED_INVERT    0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI6_DMAP_EXPAND_NORMAL      0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI6_DMAP_EXPAND_NEGATE      0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI6_DMAP_HALFBIAS_NORMAL    0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI6_DMAP_HALFBIAS_NEGATE    0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI6_DMAP_SIGNED_IDENTITY    0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI6_DMAP_SIGNED_NEGATE      0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI6_DMAP_097                0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAI6_D_ALPHA                        4:4 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAI6_D_ALPHA_FALSE           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI6_D_ALPHA_TRUE            0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI6_D_ALPHA_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAI6_DSOURCE                        3:0 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAI6_DSOURCE_REG_0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI6_DSOURCE_REG_1           0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI6_DSOURCE_REG_2           0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI6_DSOURCE_REG_3           0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI6_DSOURCE_REG_4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI6_DSOURCE_REG_5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI6_DSOURCE_REG_8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI6_DSOURCE_REG_9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI6_DSOURCE_REG_A           0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI6_DSOURCE_REG_B           0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI6_DSOURCE_REG_C           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI6_DSOURCE_REG_D           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI6_DSOURCE_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAI7                         0x004018DC /* RW-4R */
#define NV_PGRAPH_COMBINEALPHAI7_BUNDLE                  0x00000037 /* ----B */
#define NV_PGRAPH_COMBINEALPHAI7_AMAP                         31:29 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAI7_AMAP_UNSIGNED_IDENTITY  0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI7_AMAP_UNSIGNED_INVERT    0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI7_AMAP_EXPAND_NORMAL      0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI7_AMAP_EXPAND_NEGATE      0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI7_AMAP_HALFBIAS_NORMAL    0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI7_AMAP_HALFBIAS_NEGATE    0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI7_AMAP_SIGNED_IDENTITY    0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI7_AMAP_SIGNED_NEGATE      0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI7_AMAP_097                0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAI7_A_ALPHA                      28:28 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAI7_A_ALPHA_FALSE           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI7_A_ALPHA_TRUE            0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI7_A_ALPHA_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAI7_ASOURCE                      27:24 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAI7_ASOURCE_REG_0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI7_ASOURCE_REG_1           0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI7_ASOURCE_REG_2           0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI7_ASOURCE_REG_3           0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI7_ASOURCE_REG_4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI7_ASOURCE_REG_5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI7_ASOURCE_REG_8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI7_ASOURCE_REG_9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI7_ASOURCE_REG_A           0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI7_ASOURCE_REG_B           0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI7_ASOURCE_REG_C           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI7_ASOURCE_REG_D           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI7_ASOURCE_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAI7_BMAP                         23:21 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAI7_BMAP_UNSIGNED_IDENTITY  0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI7_BMAP_UNSIGNED_INVERT    0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI7_BMAP_EXPAND_NORMAL      0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI7_BMAP_EXPAND_NEGATE      0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI7_BMAP_HALFBIAS_NORMAL    0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI7_BMAP_HALFBIAS_NEGATE    0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI7_BMAP_SIGNED_IDENTITY    0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI7_BMAP_SIGNED_NEGATE      0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI7_BMAP_097                0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAI7_B_ALPHA                      20:20 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAI7_B_ALPHA_FALSE           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI7_B_ALPHA_TRUE            0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI7_B_ALPHA_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAI7_BSOURCE                      19:16 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAI7_BSOURCE_REG_0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI7_BSOURCE_REG_1           0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI7_BSOURCE_REG_2           0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI7_BSOURCE_REG_3           0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI7_BSOURCE_REG_4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI7_BSOURCE_REG_5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI7_BSOURCE_REG_8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI7_BSOURCE_REG_9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI7_BSOURCE_REG_A           0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI7_BSOURCE_REG_B           0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI7_BSOURCE_REG_C           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI7_BSOURCE_REG_D           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI7_BSOURCE_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAI7_CMAP                         15:13 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAI7_CMAP_UNSIGNED_IDENTITY  0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI7_CMAP_UNSIGNED_INVERT    0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI7_CMAP_EXPAND_NORMAL      0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI7_CMAP_EXPAND_NEGATE      0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI7_CMAP_HALFBIAS_NORMAL    0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI7_CMAP_HALFBIAS_NEGATE    0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI7_CMAP_SIGNED_IDENTITY    0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI7_CMAP_SIGNED_NEGATE      0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI7_CMAP_097                0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAI7_C_ALPHA                      12:12 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAI7_C_ALPHA_FALSE           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI7_C_ALPHA_TRUE            0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI7_C_ALPHA_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAI7_CSOURCE                       11:8 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAI7_CSOURCE_REG_0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI7_CSOURCE_REG_1           0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI7_CSOURCE_REG_2           0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI7_CSOURCE_REG_3           0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI7_CSOURCE_REG_4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI7_CSOURCE_REG_5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI7_CSOURCE_REG_8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI7_CSOURCE_REG_9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI7_CSOURCE_REG_A           0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI7_CSOURCE_REG_B           0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI7_CSOURCE_REG_C           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI7_CSOURCE_REG_D           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI7_CSOURCE_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAI7_DMAP                           7:5 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAI7_DMAP_UNSIGNED_IDENTITY  0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI7_DMAP_UNSIGNED_INVERT    0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI7_DMAP_EXPAND_NORMAL      0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI7_DMAP_EXPAND_NEGATE      0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI7_DMAP_HALFBIAS_NORMAL    0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI7_DMAP_HALFBIAS_NEGATE    0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI7_DMAP_SIGNED_IDENTITY    0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI7_DMAP_SIGNED_NEGATE      0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI7_DMAP_097                0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAI7_D_ALPHA                        4:4 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAI7_D_ALPHA_FALSE           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI7_D_ALPHA_TRUE            0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI7_D_ALPHA_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAI7_DSOURCE                        3:0 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAI7_DSOURCE_REG_0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI7_DSOURCE_REG_1           0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI7_DSOURCE_REG_2           0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI7_DSOURCE_REG_3           0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI7_DSOURCE_REG_4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI7_DSOURCE_REG_5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI7_DSOURCE_REG_8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI7_DSOURCE_REG_9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI7_DSOURCE_REG_A           0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI7_DSOURCE_REG_B           0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI7_DSOURCE_REG_C           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI7_DSOURCE_REG_D           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINEALPHAI7_DSOURCE_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAO0                         0x004018E0 /* RW-4R */
#define NV_PGRAPH_COMBINEALPHAO0_BUNDLE                  0x00000038 /* ----B */
#define NV_PGRAPH_COMBINEALPHAO0_OP                           17:15 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAO0_OP_NOSHIFT              0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO0_OP_NOSHIFT_BIAS         0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO0_OP_SHIFTLEFTBY1         0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO0_OP_SHIFTLEFTBY1_BIAS    0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO0_OP_SHIFTLEFTBY2         0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO0_OP_SHIFTRIGHTBY1        0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO0_OP_097                  0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAO0_MUX_ENABLE                   14:14 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAO0_MUX_ENABLE_FALSE        0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO0_MUX_ENABLE_TRUE         0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO0_MUX_ENABLE_097          0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAO0_SUM_DST                       11:8 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAO0_SUM_DST_REG_0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO0_SUM_DST_REG_4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO0_SUM_DST_REG_5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO0_SUM_DST_REG_8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO0_SUM_DST_REG_9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO0_SUM_DST_REG_A           0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO0_SUM_DST_REG_B           0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO0_SUM_DST_REG_C           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO0_SUM_DST_REG_D           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO0_SUM_DST_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAO0_AB_DST                         7:4 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAO0_AB_DST_REG_0            0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO0_AB_DST_REG_4            0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO0_AB_DST_REG_5            0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO0_AB_DST_REG_8            0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO0_AB_DST_REG_9            0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO0_AB_DST_REG_A            0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO0_AB_DST_REG_B            0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO0_AB_DST_REG_C            0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO0_AB_DST_REG_D            0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO0_AB_DST_097              0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAO0_CD_DST                         3:0 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAO0_CD_DST_REG_0            0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO0_CD_DST_REG_4            0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO0_CD_DST_REG_5            0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO0_CD_DST_REG_8            0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO0_CD_DST_REG_9            0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO0_CD_DST_REG_A            0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO0_CD_DST_REG_B            0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO0_CD_DST_REG_C            0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO0_CD_DST_REG_D            0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO0_CD_DST_097              0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAO1                         0x004018E4 /* RW-4R */
#define NV_PGRAPH_COMBINEALPHAO1_BUNDLE                  0x00000039 /* ----B */
#define NV_PGRAPH_COMBINEALPHAO1_OP                           17:15 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAO1_OP_NOSHIFT              0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO1_OP_NOSHIFT_BIAS         0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO1_OP_SHIFTLEFTBY1         0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO1_OP_SHIFTLEFTBY1_BIAS    0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO1_OP_SHIFTLEFTBY2         0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO1_OP_SHIFTRIGHTBY1        0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO1_OP_097                  0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAO1_MUX_ENABLE                   14:14 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAO1_MUX_ENABLE_FALSE        0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO1_MUX_ENABLE_TRUE         0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO1_MUX_ENABLE_097          0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAO1_SUM_DST                       11:8 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAO1_SUM_DST_REG_0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO1_SUM_DST_REG_4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO1_SUM_DST_REG_5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO1_SUM_DST_REG_8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO1_SUM_DST_REG_9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO1_SUM_DST_REG_A           0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO1_SUM_DST_REG_B           0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO1_SUM_DST_REG_C           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO1_SUM_DST_REG_D           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO1_SUM_DST_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAO1_AB_DST                         7:4 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAO1_AB_DST_REG_0            0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO1_AB_DST_REG_4            0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO1_AB_DST_REG_5            0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO1_AB_DST_REG_8            0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO1_AB_DST_REG_9            0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO1_AB_DST_REG_A            0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO1_AB_DST_REG_B            0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO1_AB_DST_REG_C            0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO1_AB_DST_REG_D            0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO1_AB_DST_097              0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAO1_CD_DST                         3:0 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAO1_CD_DST_REG_0            0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO1_CD_DST_REG_4            0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO1_CD_DST_REG_5            0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO1_CD_DST_REG_8            0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO1_CD_DST_REG_9            0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO1_CD_DST_REG_A            0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO1_CD_DST_REG_B            0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO1_CD_DST_REG_C            0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO1_CD_DST_REG_D            0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO1_CD_DST_097              0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAO2                         0x004018E8 /* RW-4R */
#define NV_PGRAPH_COMBINEALPHAO2_BUNDLE                  0x0000003A /* ----B */
#define NV_PGRAPH_COMBINEALPHAO2_OP                           17:15 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAO2_OP_NOSHIFT              0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO2_OP_NOSHIFT_BIAS         0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO2_OP_SHIFTLEFTBY1         0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO2_OP_SHIFTLEFTBY1_BIAS    0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO2_OP_SHIFTLEFTBY2         0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO2_OP_SHIFTRIGHTBY1        0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO2_OP_097                  0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAO2_MUX_ENABLE                   14:14 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAO2_MUX_ENABLE_FALSE        0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO2_MUX_ENABLE_TRUE         0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO2_MUX_ENABLE_097          0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAO2_SUM_DST                       11:8 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAO2_SUM_DST_REG_0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO2_SUM_DST_REG_4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO2_SUM_DST_REG_5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO2_SUM_DST_REG_8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO2_SUM_DST_REG_9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO2_SUM_DST_REG_A           0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO2_SUM_DST_REG_B           0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO2_SUM_DST_REG_C           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO2_SUM_DST_REG_D           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO2_SUM_DST_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAO2_AB_DST                         7:4 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAO2_AB_DST_REG_0            0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO2_AB_DST_REG_4            0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO2_AB_DST_REG_5            0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO2_AB_DST_REG_8            0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO2_AB_DST_REG_9            0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO2_AB_DST_REG_A            0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO2_AB_DST_REG_B            0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO2_AB_DST_REG_C            0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO2_AB_DST_REG_D            0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO2_AB_DST_097              0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAO2_CD_DST                         3:0 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAO2_CD_DST_REG_0            0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO2_CD_DST_REG_4            0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO2_CD_DST_REG_5            0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO2_CD_DST_REG_8            0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO2_CD_DST_REG_9            0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO2_CD_DST_REG_A            0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO2_CD_DST_REG_B            0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO2_CD_DST_REG_C            0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO2_CD_DST_REG_D            0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO2_CD_DST_097              0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAO3                         0x004018EC /* RW-4R */
#define NV_PGRAPH_COMBINEALPHAO3_BUNDLE                  0x0000003B /* ----B */
#define NV_PGRAPH_COMBINEALPHAO3_OP                           17:15 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAO3_OP_NOSHIFT              0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO3_OP_NOSHIFT_BIAS         0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO3_OP_SHIFTLEFTBY1         0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO3_OP_SHIFTLEFTBY1_BIAS    0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO3_OP_SHIFTLEFTBY2         0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO3_OP_SHIFTRIGHTBY1        0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO3_OP_097                  0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAO3_MUX_ENABLE                   14:14 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAO3_MUX_ENABLE_FALSE        0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO3_MUX_ENABLE_TRUE         0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO3_MUX_ENABLE_097          0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAO3_SUM_DST                       11:8 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAO3_SUM_DST_REG_0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO3_SUM_DST_REG_4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO3_SUM_DST_REG_5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO3_SUM_DST_REG_8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO3_SUM_DST_REG_9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO3_SUM_DST_REG_A           0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO3_SUM_DST_REG_B           0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO3_SUM_DST_REG_C           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO3_SUM_DST_REG_D           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO3_SUM_DST_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAO3_AB_DST                         7:4 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAO3_AB_DST_REG_0            0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO3_AB_DST_REG_4            0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO3_AB_DST_REG_5            0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO3_AB_DST_REG_8            0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO3_AB_DST_REG_9            0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO3_AB_DST_REG_A            0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO3_AB_DST_REG_B            0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO3_AB_DST_REG_C            0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO3_AB_DST_REG_D            0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO3_AB_DST_097              0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAO3_CD_DST                         3:0 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAO3_CD_DST_REG_0            0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO3_CD_DST_REG_4            0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO3_CD_DST_REG_5            0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO3_CD_DST_REG_8            0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO3_CD_DST_REG_9            0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO3_CD_DST_REG_A            0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO3_CD_DST_REG_B            0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO3_CD_DST_REG_C            0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO3_CD_DST_REG_D            0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO3_CD_DST_097              0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAO4                         0x004018F0 /* RW-4R */
#define NV_PGRAPH_COMBINEALPHAO4_BUNDLE                  0x0000003C /* ----B */
#define NV_PGRAPH_COMBINEALPHAO4_OP                           17:15 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAO4_OP_NOSHIFT              0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO4_OP_NOSHIFT_BIAS         0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO4_OP_SHIFTLEFTBY1         0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO4_OP_SHIFTLEFTBY1_BIAS    0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO4_OP_SHIFTLEFTBY2         0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO4_OP_SHIFTRIGHTBY1        0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO4_OP_097                  0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAO4_MUX_ENABLE                   14:14 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAO4_MUX_ENABLE_FALSE        0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO4_MUX_ENABLE_TRUE         0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO4_MUX_ENABLE_097          0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAO4_SUM_DST                       11:8 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAO4_SUM_DST_REG_0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO4_SUM_DST_REG_4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO4_SUM_DST_REG_5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO4_SUM_DST_REG_8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO4_SUM_DST_REG_9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO4_SUM_DST_REG_A           0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO4_SUM_DST_REG_B           0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO4_SUM_DST_REG_C           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO4_SUM_DST_REG_D           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO4_SUM_DST_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAO4_AB_DST                         7:4 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAO4_AB_DST_REG_0            0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO4_AB_DST_REG_4            0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO4_AB_DST_REG_5            0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO4_AB_DST_REG_8            0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO4_AB_DST_REG_9            0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO4_AB_DST_REG_A            0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO4_AB_DST_REG_B            0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO4_AB_DST_REG_C            0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO4_AB_DST_REG_D            0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO4_AB_DST_097              0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAO4_CD_DST                         3:0 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAO4_CD_DST_REG_0            0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO4_CD_DST_REG_4            0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO4_CD_DST_REG_5            0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO4_CD_DST_REG_8            0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO4_CD_DST_REG_9            0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO4_CD_DST_REG_A            0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO4_CD_DST_REG_B            0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO4_CD_DST_REG_C            0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO4_CD_DST_REG_D            0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO4_CD_DST_097              0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAO5                         0x004018F4 /* RW-4R */
#define NV_PGRAPH_COMBINEALPHAO5_BUNDLE                  0x0000003D /* ----B */
#define NV_PGRAPH_COMBINEALPHAO5_OP                           17:15 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAO5_OP_NOSHIFT              0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO5_OP_NOSHIFT_BIAS         0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO5_OP_SHIFTLEFTBY1         0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO5_OP_SHIFTLEFTBY1_BIAS    0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO5_OP_SHIFTLEFTBY2         0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO5_OP_SHIFTRIGHTBY1        0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO5_OP_097                  0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAO5_MUX_ENABLE                   14:14 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAO5_MUX_ENABLE_FALSE        0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO5_MUX_ENABLE_TRUE         0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO5_MUX_ENABLE_097          0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAO5_SUM_DST                       11:8 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAO5_SUM_DST_REG_0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO5_SUM_DST_REG_4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO5_SUM_DST_REG_5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO5_SUM_DST_REG_8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO5_SUM_DST_REG_9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO5_SUM_DST_REG_A           0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO5_SUM_DST_REG_B           0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO5_SUM_DST_REG_C           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO5_SUM_DST_REG_D           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO5_SUM_DST_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAO5_AB_DST                         7:4 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAO5_AB_DST_REG_0            0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO5_AB_DST_REG_4            0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO5_AB_DST_REG_5            0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO5_AB_DST_REG_8            0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO5_AB_DST_REG_9            0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO5_AB_DST_REG_A            0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO5_AB_DST_REG_B            0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO5_AB_DST_REG_C            0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO5_AB_DST_REG_D            0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO5_AB_DST_097              0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAO5_CD_DST                         3:0 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAO5_CD_DST_REG_0            0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO5_CD_DST_REG_4            0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO5_CD_DST_REG_5            0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO5_CD_DST_REG_8            0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO5_CD_DST_REG_9            0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO5_CD_DST_REG_A            0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO5_CD_DST_REG_B            0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO5_CD_DST_REG_C            0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO5_CD_DST_REG_D            0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO5_CD_DST_097              0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAO6                         0x004018F8 /* RW-4R */
#define NV_PGRAPH_COMBINEALPHAO6_BUNDLE                  0x0000003E /* ----B */
#define NV_PGRAPH_COMBINEALPHAO6_OP                           17:15 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAO6_OP_NOSHIFT              0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO6_OP_NOSHIFT_BIAS         0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO6_OP_SHIFTLEFTBY1         0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO6_OP_SHIFTLEFTBY1_BIAS    0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO6_OP_SHIFTLEFTBY2         0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO6_OP_SHIFTRIGHTBY1        0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO6_OP_097                  0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAO6_MUX_ENABLE                   14:14 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAO6_MUX_ENABLE_FALSE        0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO6_MUX_ENABLE_TRUE         0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO6_MUX_ENABLE_097          0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAO6_SUM_DST                       11:8 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAO6_SUM_DST_REG_0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO6_SUM_DST_REG_4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO6_SUM_DST_REG_5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO6_SUM_DST_REG_8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO6_SUM_DST_REG_9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO6_SUM_DST_REG_A           0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO6_SUM_DST_REG_B           0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO6_SUM_DST_REG_C           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO6_SUM_DST_REG_D           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO6_SUM_DST_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAO6_AB_DST                         7:4 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAO6_AB_DST_REG_0            0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO6_AB_DST_REG_4            0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO6_AB_DST_REG_5            0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO6_AB_DST_REG_8            0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO6_AB_DST_REG_9            0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO6_AB_DST_REG_A            0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO6_AB_DST_REG_B            0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO6_AB_DST_REG_C            0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO6_AB_DST_REG_D            0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO6_AB_DST_097              0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAO6_CD_DST                         3:0 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAO6_CD_DST_REG_0            0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO6_CD_DST_REG_4            0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO6_CD_DST_REG_5            0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO6_CD_DST_REG_8            0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO6_CD_DST_REG_9            0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO6_CD_DST_REG_A            0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO6_CD_DST_REG_B            0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO6_CD_DST_REG_C            0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO6_CD_DST_REG_D            0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO6_CD_DST_097              0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAO7                         0x004018FC /* RW-4R */
#define NV_PGRAPH_COMBINEALPHAO7_BUNDLE                  0x0000003F /* ----B */
#define NV_PGRAPH_COMBINEALPHAO7_OP                           17:15 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAO7_OP_NOSHIFT              0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO7_OP_NOSHIFT_BIAS         0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO7_OP_SHIFTLEFTBY1         0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO7_OP_SHIFTLEFTBY1_BIAS    0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO7_OP_SHIFTLEFTBY2         0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO7_OP_SHIFTRIGHTBY1        0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO7_OP_097                  0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAO7_MUX_ENABLE                   14:14 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAO7_MUX_ENABLE_FALSE        0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO7_MUX_ENABLE_TRUE         0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO7_MUX_ENABLE_097          0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAO7_SUM_DST                       11:8 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAO7_SUM_DST_REG_0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO7_SUM_DST_REG_4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO7_SUM_DST_REG_5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO7_SUM_DST_REG_8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO7_SUM_DST_REG_9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO7_SUM_DST_REG_A           0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO7_SUM_DST_REG_B           0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO7_SUM_DST_REG_C           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO7_SUM_DST_REG_D           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO7_SUM_DST_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAO7_AB_DST                         7:4 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAO7_AB_DST_REG_0            0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO7_AB_DST_REG_4            0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO7_AB_DST_REG_5            0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO7_AB_DST_REG_8            0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO7_AB_DST_REG_9            0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO7_AB_DST_REG_A            0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO7_AB_DST_REG_B            0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO7_AB_DST_REG_C            0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO7_AB_DST_REG_D            0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO7_AB_DST_097              0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINEALPHAO7_CD_DST                         3:0 /* RWXVF */
#define NV_PGRAPH_COMBINEALPHAO7_CD_DST_REG_0            0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO7_CD_DST_REG_4            0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO7_CD_DST_REG_5            0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO7_CD_DST_REG_8            0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO7_CD_DST_REG_9            0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO7_CD_DST_REG_A            0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO7_CD_DST_REG_B            0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO7_CD_DST_REG_C            0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO7_CD_DST_REG_D            0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINEALPHAO7_CD_DST_097              0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORI0                         0x00401900 /* RW-4R */
#define NV_PGRAPH_COMBINECOLORI0_BUNDLE                  0x00000040 /* ----B */
#define NV_PGRAPH_COMBINECOLORI0_AMAP                         31:29 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORI0_AMAP_UNSIGNED_IDENTITY  0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI0_AMAP_UNSIGNED_INVERT    0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI0_AMAP_EXPAND_NORMAL      0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI0_AMAP_EXPAND_NEGATE      0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI0_AMAP_HALFBIAS_NORMAL    0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI0_AMAP_HALFBIAS_NEGATE    0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI0_AMAP_SIGNED_IDENTITY    0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI0_AMAP_SIGNED_NEGATE      0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI0_AMAP_097                0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORI0_A_ALPHA                      28:28 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORI0_A_ALPHA_FALSE           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI0_A_ALPHA_TRUE            0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI0_A_ALPHA_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORI0_ASOURCE                      27:24 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORI0_ASOURCE_REG_0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI0_ASOURCE_REG_1           0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI0_ASOURCE_REG_2           0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI0_ASOURCE_REG_3           0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI0_ASOURCE_REG_4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI0_ASOURCE_REG_5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI0_ASOURCE_REG_8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI0_ASOURCE_REG_9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI0_ASOURCE_REG_A           0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINECOLORI0_ASOURCE_REG_B           0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINECOLORI0_ASOURCE_REG_C           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINECOLORI0_ASOURCE_REG_D           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINECOLORI0_ASOURCE_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORI0_BMAP                         23:21 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORI0_BMAP_UNSIGNED_IDENTITY  0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI0_BMAP_UNSIGNED_INVERT    0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI0_BMAP_EXPAND_NORMAL      0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI0_BMAP_EXPAND_NEGATE      0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI0_BMAP_HALFBIAS_NORMAL    0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI0_BMAP_HALFBIAS_NEGATE    0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI0_BMAP_SIGNED_IDENTITY    0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI0_BMAP_SIGNED_NEGATE      0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI0_BMAP_097                0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORI0_B_ALPHA                      20:20 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORI0_B_ALPHA_FALSE           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI0_B_ALPHA_TRUE            0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI0_B_ALPHA_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORI0_BSOURCE                      19:16 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORI0_BSOURCE_REG_0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI0_BSOURCE_REG_1           0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI0_BSOURCE_REG_2           0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI0_BSOURCE_REG_3           0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI0_BSOURCE_REG_4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI0_BSOURCE_REG_5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI0_BSOURCE_REG_8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI0_BSOURCE_REG_9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI0_BSOURCE_REG_A           0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINECOLORI0_BSOURCE_REG_B           0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINECOLORI0_BSOURCE_REG_C           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINECOLORI0_BSOURCE_REG_D           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINECOLORI0_BSOURCE_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORI0_CMAP                         15:13 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORI0_CMAP_UNSIGNED_IDENTITY  0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI0_CMAP_UNSIGNED_INVERT    0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI0_CMAP_EXPAND_NORMAL      0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI0_CMAP_EXPAND_NEGATE      0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI0_CMAP_HALFBIAS_NORMAL    0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI0_CMAP_HALFBIAS_NEGATE    0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI0_CMAP_SIGNED_IDENTITY    0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI0_CMAP_SIGNED_NEGATE      0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI0_CMAP_097                0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORI0_C_ALPHA                      12:12 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORI0_C_ALPHA_FALSE           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI0_C_ALPHA_TRUE            0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI0_C_ALPHA_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORI0_CSOURCE                       11:8 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORI0_CSOURCE_REG_0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI0_CSOURCE_REG_1           0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI0_CSOURCE_REG_2           0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI0_CSOURCE_REG_3           0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI0_CSOURCE_REG_4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI0_CSOURCE_REG_5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI0_CSOURCE_REG_8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI0_CSOURCE_REG_9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI0_CSOURCE_REG_A           0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINECOLORI0_CSOURCE_REG_B           0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINECOLORI0_CSOURCE_REG_C           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINECOLORI0_CSOURCE_REG_D           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINECOLORI0_CSOURCE_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORI0_DMAP                           7:5 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORI0_DMAP_UNSIGNED_IDENTITY  0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI0_DMAP_UNSIGNED_INVERT    0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI0_DMAP_EXPAND_NORMAL      0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI0_DMAP_EXPAND_NEGATE      0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI0_DMAP_HALFBIAS_NORMAL    0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI0_DMAP_HALFBIAS_NEGATE    0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI0_DMAP_SIGNED_IDENTITY    0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI0_DMAP_SIGNED_NEGATE      0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI0_DMAP_097                0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORI0_D_ALPHA                        4:4 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORI0_D_ALPHA_FALSE           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI0_D_ALPHA_TRUE            0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI0_D_ALPHA_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORI0_DSOURCE                        3:0 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORI0_DSOURCE_REG_0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI0_DSOURCE_REG_1           0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI0_DSOURCE_REG_2           0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI0_DSOURCE_REG_3           0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI0_DSOURCE_REG_4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI0_DSOURCE_REG_5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI0_DSOURCE_REG_8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI0_DSOURCE_REG_9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI0_DSOURCE_REG_A           0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINECOLORI0_DSOURCE_REG_B           0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINECOLORI0_DSOURCE_REG_C           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINECOLORI0_DSOURCE_REG_D           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINECOLORI0_DSOURCE_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORI1                         0x00401904 /* RW-4R */
#define NV_PGRAPH_COMBINECOLORI1_BUNDLE                  0x00000041 /* ----B */
#define NV_PGRAPH_COMBINECOLORI1_AMAP                         31:29 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORI1_AMAP_UNSIGNED_IDENTITY  0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI1_AMAP_UNSIGNED_INVERT    0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI1_AMAP_EXPAND_NORMAL      0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI1_AMAP_EXPAND_NEGATE      0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI1_AMAP_HALFBIAS_NORMAL    0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI1_AMAP_HALFBIAS_NEGATE    0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI1_AMAP_SIGNED_IDENTITY    0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI1_AMAP_SIGNED_NEGATE      0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI1_AMAP_097                0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORI1_A_ALPHA                      28:28 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORI1_A_ALPHA_FALSE           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI1_A_ALPHA_TRUE            0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI1_A_ALPHA_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORI1_ASOURCE                      27:24 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORI1_ASOURCE_REG_0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI1_ASOURCE_REG_1           0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI1_ASOURCE_REG_2           0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI1_ASOURCE_REG_3           0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI1_ASOURCE_REG_4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI1_ASOURCE_REG_5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI1_ASOURCE_REG_8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI1_ASOURCE_REG_9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI1_ASOURCE_REG_A           0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINECOLORI1_ASOURCE_REG_B           0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINECOLORI1_ASOURCE_REG_C           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINECOLORI1_ASOURCE_REG_D           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINECOLORI1_ASOURCE_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORI1_BMAP                         23:21 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORI1_BMAP_UNSIGNED_IDENTITY  0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI1_BMAP_UNSIGNED_INVERT    0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI1_BMAP_EXPAND_NORMAL      0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI1_BMAP_EXPAND_NEGATE      0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI1_BMAP_HALFBIAS_NORMAL    0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI1_BMAP_HALFBIAS_NEGATE    0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI1_BMAP_SIGNED_IDENTITY    0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI1_BMAP_SIGNED_NEGATE      0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI1_BMAP_097                0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORI1_B_ALPHA                      20:20 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORI1_B_ALPHA_FALSE           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI1_B_ALPHA_TRUE            0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI1_B_ALPHA_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORI1_BSOURCE                      19:16 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORI1_BSOURCE_REG_0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI1_BSOURCE_REG_1           0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI1_BSOURCE_REG_2           0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI1_BSOURCE_REG_3           0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI1_BSOURCE_REG_4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI1_BSOURCE_REG_5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI1_BSOURCE_REG_8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI1_BSOURCE_REG_9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI1_BSOURCE_REG_A           0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINECOLORI1_BSOURCE_REG_B           0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINECOLORI1_BSOURCE_REG_C           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINECOLORI1_BSOURCE_REG_D           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINECOLORI1_BSOURCE_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORI1_CMAP                         15:13 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORI1_CMAP_UNSIGNED_IDENTITY  0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI1_CMAP_UNSIGNED_INVERT    0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI1_CMAP_EXPAND_NORMAL      0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI1_CMAP_EXPAND_NEGATE      0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI1_CMAP_HALFBIAS_NORMAL    0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI1_CMAP_HALFBIAS_NEGATE    0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI1_CMAP_SIGNED_IDENTITY    0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI1_CMAP_SIGNED_NEGATE      0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI1_CMAP_097                0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORI1_C_ALPHA                      12:12 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORI1_C_ALPHA_FALSE           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI1_C_ALPHA_TRUE            0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI1_C_ALPHA_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORI1_CSOURCE                       11:8 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORI1_CSOURCE_REG_0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI1_CSOURCE_REG_1           0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI1_CSOURCE_REG_2           0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI1_CSOURCE_REG_3           0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI1_CSOURCE_REG_4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI1_CSOURCE_REG_5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI1_CSOURCE_REG_8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI1_CSOURCE_REG_9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI1_CSOURCE_REG_A           0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINECOLORI1_CSOURCE_REG_B           0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINECOLORI1_CSOURCE_REG_C           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINECOLORI1_CSOURCE_REG_D           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINECOLORI1_CSOURCE_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORI1_DMAP                           7:5 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORI1_DMAP_UNSIGNED_IDENTITY  0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI1_DMAP_UNSIGNED_INVERT    0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI1_DMAP_EXPAND_NORMAL      0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI1_DMAP_EXPAND_NEGATE      0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI1_DMAP_HALFBIAS_NORMAL    0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI1_DMAP_HALFBIAS_NEGATE    0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI1_DMAP_SIGNED_IDENTITY    0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI1_DMAP_SIGNED_NEGATE      0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI1_DMAP_097                0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORI1_D_ALPHA                        4:4 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORI1_D_ALPHA_FALSE           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI1_D_ALPHA_TRUE            0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI1_D_ALPHA_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORI1_DSOURCE                        3:0 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORI1_DSOURCE_REG_0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI1_DSOURCE_REG_1           0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI1_DSOURCE_REG_2           0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI1_DSOURCE_REG_3           0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI1_DSOURCE_REG_4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI1_DSOURCE_REG_5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI1_DSOURCE_REG_8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI1_DSOURCE_REG_9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI1_DSOURCE_REG_A           0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINECOLORI1_DSOURCE_REG_B           0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINECOLORI1_DSOURCE_REG_C           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINECOLORI1_DSOURCE_REG_D           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINECOLORI1_DSOURCE_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORI2                         0x00401908 /* RW-4R */
#define NV_PGRAPH_COMBINECOLORI2_BUNDLE                  0x00000042 /* ----B */
#define NV_PGRAPH_COMBINECOLORI2_AMAP                         31:29 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORI2_AMAP_UNSIGNED_IDENTITY  0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI2_AMAP_UNSIGNED_INVERT    0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI2_AMAP_EXPAND_NORMAL      0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI2_AMAP_EXPAND_NEGATE      0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI2_AMAP_HALFBIAS_NORMAL    0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI2_AMAP_HALFBIAS_NEGATE    0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI2_AMAP_SIGNED_IDENTITY    0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI2_AMAP_SIGNED_NEGATE      0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI2_AMAP_097                0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORI2_A_ALPHA                      28:28 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORI2_A_ALPHA_FALSE           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI2_A_ALPHA_TRUE            0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI2_A_ALPHA_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORI2_ASOURCE                      27:24 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORI2_ASOURCE_REG_0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI2_ASOURCE_REG_1           0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI2_ASOURCE_REG_2           0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI2_ASOURCE_REG_3           0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI2_ASOURCE_REG_4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI2_ASOURCE_REG_5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI2_ASOURCE_REG_8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI2_ASOURCE_REG_9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI2_ASOURCE_REG_A           0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINECOLORI2_ASOURCE_REG_B           0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINECOLORI2_ASOURCE_REG_C           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINECOLORI2_ASOURCE_REG_D           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINECOLORI2_ASOURCE_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORI2_BMAP                         23:21 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORI2_BMAP_UNSIGNED_IDENTITY  0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI2_BMAP_UNSIGNED_INVERT    0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI2_BMAP_EXPAND_NORMAL      0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI2_BMAP_EXPAND_NEGATE      0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI2_BMAP_HALFBIAS_NORMAL    0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI2_BMAP_HALFBIAS_NEGATE    0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI2_BMAP_SIGNED_IDENTITY    0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI2_BMAP_SIGNED_NEGATE      0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI2_BMAP_097                0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORI2_B_ALPHA                      20:20 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORI2_B_ALPHA_FALSE           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI2_B_ALPHA_TRUE            0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI2_B_ALPHA_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORI2_BSOURCE                      19:16 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORI2_BSOURCE_REG_0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI2_BSOURCE_REG_1           0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI2_BSOURCE_REG_2           0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI2_BSOURCE_REG_3           0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI2_BSOURCE_REG_4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI2_BSOURCE_REG_5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI2_BSOURCE_REG_8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI2_BSOURCE_REG_9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI2_BSOURCE_REG_A           0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINECOLORI2_BSOURCE_REG_B           0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINECOLORI2_BSOURCE_REG_C           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINECOLORI2_BSOURCE_REG_D           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINECOLORI2_BSOURCE_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORI2_CMAP                         15:13 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORI2_CMAP_UNSIGNED_IDENTITY  0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI2_CMAP_UNSIGNED_INVERT    0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI2_CMAP_EXPAND_NORMAL      0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI2_CMAP_EXPAND_NEGATE      0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI2_CMAP_HALFBIAS_NORMAL    0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI2_CMAP_HALFBIAS_NEGATE    0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI2_CMAP_SIGNED_IDENTITY    0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI2_CMAP_SIGNED_NEGATE      0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI2_CMAP_097                0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORI2_C_ALPHA                      12:12 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORI2_C_ALPHA_FALSE           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI2_C_ALPHA_TRUE            0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI2_C_ALPHA_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORI2_CSOURCE                       11:8 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORI2_CSOURCE_REG_0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI2_CSOURCE_REG_1           0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI2_CSOURCE_REG_2           0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI2_CSOURCE_REG_3           0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI2_CSOURCE_REG_4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI2_CSOURCE_REG_5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI2_CSOURCE_REG_8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI2_CSOURCE_REG_9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI2_CSOURCE_REG_A           0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINECOLORI2_CSOURCE_REG_B           0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINECOLORI2_CSOURCE_REG_C           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINECOLORI2_CSOURCE_REG_D           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINECOLORI2_CSOURCE_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORI2_DMAP                           7:5 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORI2_DMAP_UNSIGNED_IDENTITY  0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI2_DMAP_UNSIGNED_INVERT    0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI2_DMAP_EXPAND_NORMAL      0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI2_DMAP_EXPAND_NEGATE      0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI2_DMAP_HALFBIAS_NORMAL    0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI2_DMAP_HALFBIAS_NEGATE    0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI2_DMAP_SIGNED_IDENTITY    0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI2_DMAP_SIGNED_NEGATE      0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI2_DMAP_097                0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORI2_D_ALPHA                        4:4 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORI2_D_ALPHA_FALSE           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI2_D_ALPHA_TRUE            0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI2_D_ALPHA_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORI2_DSOURCE                        3:0 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORI2_DSOURCE_REG_0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI2_DSOURCE_REG_1           0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI2_DSOURCE_REG_2           0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI2_DSOURCE_REG_3           0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI2_DSOURCE_REG_4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI2_DSOURCE_REG_5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI2_DSOURCE_REG_8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI2_DSOURCE_REG_9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI2_DSOURCE_REG_A           0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINECOLORI2_DSOURCE_REG_B           0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINECOLORI2_DSOURCE_REG_C           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINECOLORI2_DSOURCE_REG_D           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINECOLORI2_DSOURCE_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORI3                         0x0040190C /* RW-4R */
#define NV_PGRAPH_COMBINECOLORI3_BUNDLE                  0x00000043 /* ----B */
#define NV_PGRAPH_COMBINECOLORI3_AMAP                         31:29 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORI3_AMAP_UNSIGNED_IDENTITY  0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI3_AMAP_UNSIGNED_INVERT    0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI3_AMAP_EXPAND_NORMAL      0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI3_AMAP_EXPAND_NEGATE      0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI3_AMAP_HALFBIAS_NORMAL    0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI3_AMAP_HALFBIAS_NEGATE    0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI3_AMAP_SIGNED_IDENTITY    0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI3_AMAP_SIGNED_NEGATE      0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI3_AMAP_097                0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORI3_A_ALPHA                      28:28 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORI3_A_ALPHA_FALSE           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI3_A_ALPHA_TRUE            0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI3_A_ALPHA_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORI3_ASOURCE                      27:24 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORI3_ASOURCE_REG_0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI3_ASOURCE_REG_1           0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI3_ASOURCE_REG_2           0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI3_ASOURCE_REG_3           0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI3_ASOURCE_REG_4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI3_ASOURCE_REG_5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI3_ASOURCE_REG_8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI3_ASOURCE_REG_9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI3_ASOURCE_REG_A           0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINECOLORI3_ASOURCE_REG_B           0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINECOLORI3_ASOURCE_REG_C           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINECOLORI3_ASOURCE_REG_D           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINECOLORI3_ASOURCE_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORI3_BMAP                         23:21 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORI3_BMAP_UNSIGNED_IDENTITY  0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI3_BMAP_UNSIGNED_INVERT    0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI3_BMAP_EXPAND_NORMAL      0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI3_BMAP_EXPAND_NEGATE      0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI3_BMAP_HALFBIAS_NORMAL    0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI3_BMAP_HALFBIAS_NEGATE    0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI3_BMAP_SIGNED_IDENTITY    0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI3_BMAP_SIGNED_NEGATE      0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI3_BMAP_097                0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORI3_B_ALPHA                      20:20 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORI3_B_ALPHA_FALSE           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI3_B_ALPHA_TRUE            0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI3_B_ALPHA_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORI3_BSOURCE                      19:16 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORI3_BSOURCE_REG_0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI3_BSOURCE_REG_1           0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI3_BSOURCE_REG_2           0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI3_BSOURCE_REG_3           0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI3_BSOURCE_REG_4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI3_BSOURCE_REG_5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI3_BSOURCE_REG_8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI3_BSOURCE_REG_9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI3_BSOURCE_REG_A           0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINECOLORI3_BSOURCE_REG_B           0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINECOLORI3_BSOURCE_REG_C           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINECOLORI3_BSOURCE_REG_D           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINECOLORI3_BSOURCE_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORI3_CMAP                         15:13 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORI3_CMAP_UNSIGNED_IDENTITY  0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI3_CMAP_UNSIGNED_INVERT    0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI3_CMAP_EXPAND_NORMAL      0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI3_CMAP_EXPAND_NEGATE      0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI3_CMAP_HALFBIAS_NORMAL    0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI3_CMAP_HALFBIAS_NEGATE    0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI3_CMAP_SIGNED_IDENTITY    0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI3_CMAP_SIGNED_NEGATE      0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI3_CMAP_097                0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORI3_C_ALPHA                      12:12 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORI3_C_ALPHA_FALSE           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI3_C_ALPHA_TRUE            0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI3_C_ALPHA_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORI3_CSOURCE                       11:8 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORI3_CSOURCE_REG_0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI3_CSOURCE_REG_1           0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI3_CSOURCE_REG_2           0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI3_CSOURCE_REG_3           0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI3_CSOURCE_REG_4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI3_CSOURCE_REG_5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI3_CSOURCE_REG_8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI3_CSOURCE_REG_9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI3_CSOURCE_REG_A           0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINECOLORI3_CSOURCE_REG_B           0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINECOLORI3_CSOURCE_REG_C           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINECOLORI3_CSOURCE_REG_D           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINECOLORI3_CSOURCE_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORI3_DMAP                           7:5 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORI3_DMAP_UNSIGNED_IDENTITY  0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI3_DMAP_UNSIGNED_INVERT    0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI3_DMAP_EXPAND_NORMAL      0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI3_DMAP_EXPAND_NEGATE      0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI3_DMAP_HALFBIAS_NORMAL    0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI3_DMAP_HALFBIAS_NEGATE    0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI3_DMAP_SIGNED_IDENTITY    0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI3_DMAP_SIGNED_NEGATE      0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI3_DMAP_097                0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORI3_D_ALPHA                        4:4 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORI3_D_ALPHA_FALSE           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI3_D_ALPHA_TRUE            0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI3_D_ALPHA_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORI3_DSOURCE                        3:0 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORI3_DSOURCE_REG_0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI3_DSOURCE_REG_1           0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI3_DSOURCE_REG_2           0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI3_DSOURCE_REG_3           0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI3_DSOURCE_REG_4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI3_DSOURCE_REG_5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI3_DSOURCE_REG_8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI3_DSOURCE_REG_9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI3_DSOURCE_REG_A           0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINECOLORI3_DSOURCE_REG_B           0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINECOLORI3_DSOURCE_REG_C           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINECOLORI3_DSOURCE_REG_D           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINECOLORI3_DSOURCE_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORI4                         0x00401910 /* RW-4R */
#define NV_PGRAPH_COMBINECOLORI4_BUNDLE                  0x00000044 /* ----B */
#define NV_PGRAPH_COMBINECOLORI4_AMAP                         31:29 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORI4_AMAP_UNSIGNED_IDENTITY  0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI4_AMAP_UNSIGNED_INVERT    0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI4_AMAP_EXPAND_NORMAL      0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI4_AMAP_EXPAND_NEGATE      0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI4_AMAP_HALFBIAS_NORMAL    0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI4_AMAP_HALFBIAS_NEGATE    0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI4_AMAP_SIGNED_IDENTITY    0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI4_AMAP_SIGNED_NEGATE      0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI4_AMAP_097                0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORI4_A_ALPHA                      28:28 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORI4_A_ALPHA_FALSE           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI4_A_ALPHA_TRUE            0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI4_A_ALPHA_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORI4_ASOURCE                      27:24 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORI4_ASOURCE_REG_0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI4_ASOURCE_REG_1           0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI4_ASOURCE_REG_2           0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI4_ASOURCE_REG_3           0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI4_ASOURCE_REG_4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI4_ASOURCE_REG_5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI4_ASOURCE_REG_8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI4_ASOURCE_REG_9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI4_ASOURCE_REG_A           0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINECOLORI4_ASOURCE_REG_B           0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINECOLORI4_ASOURCE_REG_C           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINECOLORI4_ASOURCE_REG_D           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINECOLORI4_ASOURCE_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORI4_BMAP                         23:21 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORI4_BMAP_UNSIGNED_IDENTITY  0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI4_BMAP_UNSIGNED_INVERT    0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI4_BMAP_EXPAND_NORMAL      0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI4_BMAP_EXPAND_NEGATE      0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI4_BMAP_HALFBIAS_NORMAL    0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI4_BMAP_HALFBIAS_NEGATE    0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI4_BMAP_SIGNED_IDENTITY    0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI4_BMAP_SIGNED_NEGATE      0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI4_BMAP_097                0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORI4_B_ALPHA                      20:20 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORI4_B_ALPHA_FALSE           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI4_B_ALPHA_TRUE            0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI4_B_ALPHA_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORI4_BSOURCE                      19:16 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORI4_BSOURCE_REG_0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI4_BSOURCE_REG_1           0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI4_BSOURCE_REG_2           0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI4_BSOURCE_REG_3           0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI4_BSOURCE_REG_4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI4_BSOURCE_REG_5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI4_BSOURCE_REG_8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI4_BSOURCE_REG_9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI4_BSOURCE_REG_A           0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINECOLORI4_BSOURCE_REG_B           0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINECOLORI4_BSOURCE_REG_C           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINECOLORI4_BSOURCE_REG_D           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINECOLORI4_BSOURCE_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORI4_CMAP                         15:13 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORI4_CMAP_UNSIGNED_IDENTITY  0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI4_CMAP_UNSIGNED_INVERT    0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI4_CMAP_EXPAND_NORMAL      0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI4_CMAP_EXPAND_NEGATE      0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI4_CMAP_HALFBIAS_NORMAL    0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI4_CMAP_HALFBIAS_NEGATE    0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI4_CMAP_SIGNED_IDENTITY    0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI4_CMAP_SIGNED_NEGATE      0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI4_CMAP_097                0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORI4_C_ALPHA                      12:12 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORI4_C_ALPHA_FALSE           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI4_C_ALPHA_TRUE            0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI4_C_ALPHA_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORI4_CSOURCE                       11:8 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORI4_CSOURCE_REG_0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI4_CSOURCE_REG_1           0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI4_CSOURCE_REG_2           0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI4_CSOURCE_REG_3           0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI4_CSOURCE_REG_4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI4_CSOURCE_REG_5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI4_CSOURCE_REG_8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI4_CSOURCE_REG_9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI4_CSOURCE_REG_A           0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINECOLORI4_CSOURCE_REG_B           0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINECOLORI4_CSOURCE_REG_C           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINECOLORI4_CSOURCE_REG_D           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINECOLORI4_CSOURCE_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORI4_DMAP                           7:5 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORI4_DMAP_UNSIGNED_IDENTITY  0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI4_DMAP_UNSIGNED_INVERT    0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI4_DMAP_EXPAND_NORMAL      0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI4_DMAP_EXPAND_NEGATE      0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI4_DMAP_HALFBIAS_NORMAL    0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI4_DMAP_HALFBIAS_NEGATE    0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI4_DMAP_SIGNED_IDENTITY    0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI4_DMAP_SIGNED_NEGATE      0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI4_DMAP_097                0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORI4_D_ALPHA                        4:4 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORI4_D_ALPHA_FALSE           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI4_D_ALPHA_TRUE            0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI4_D_ALPHA_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORI4_DSOURCE                        3:0 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORI4_DSOURCE_REG_0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI4_DSOURCE_REG_1           0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI4_DSOURCE_REG_2           0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI4_DSOURCE_REG_3           0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI4_DSOURCE_REG_4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI4_DSOURCE_REG_5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI4_DSOURCE_REG_8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI4_DSOURCE_REG_9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI4_DSOURCE_REG_A           0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINECOLORI4_DSOURCE_REG_B           0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINECOLORI4_DSOURCE_REG_C           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINECOLORI4_DSOURCE_REG_D           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINECOLORI4_DSOURCE_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORI5                         0x00401914 /* RW-4R */
#define NV_PGRAPH_COMBINECOLORI5_BUNDLE                  0x00000045 /* ----B */
#define NV_PGRAPH_COMBINECOLORI5_AMAP                         31:29 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORI5_AMAP_UNSIGNED_IDENTITY  0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI5_AMAP_UNSIGNED_INVERT    0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI5_AMAP_EXPAND_NORMAL      0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI5_AMAP_EXPAND_NEGATE      0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI5_AMAP_HALFBIAS_NORMAL    0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI5_AMAP_HALFBIAS_NEGATE    0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI5_AMAP_SIGNED_IDENTITY    0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI5_AMAP_SIGNED_NEGATE      0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI5_AMAP_097                0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORI5_A_ALPHA                      28:28 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORI5_A_ALPHA_FALSE           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI5_A_ALPHA_TRUE            0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI5_A_ALPHA_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORI5_ASOURCE                      27:24 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORI5_ASOURCE_REG_0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI5_ASOURCE_REG_1           0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI5_ASOURCE_REG_2           0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI5_ASOURCE_REG_3           0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI5_ASOURCE_REG_4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI5_ASOURCE_REG_5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI5_ASOURCE_REG_8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI5_ASOURCE_REG_9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI5_ASOURCE_REG_A           0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINECOLORI5_ASOURCE_REG_B           0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINECOLORI5_ASOURCE_REG_C           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINECOLORI5_ASOURCE_REG_D           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINECOLORI5_ASOURCE_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORI5_BMAP                         23:21 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORI5_BMAP_UNSIGNED_IDENTITY  0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI5_BMAP_UNSIGNED_INVERT    0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI5_BMAP_EXPAND_NORMAL      0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI5_BMAP_EXPAND_NEGATE      0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI5_BMAP_HALFBIAS_NORMAL    0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI5_BMAP_HALFBIAS_NEGATE    0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI5_BMAP_SIGNED_IDENTITY    0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI5_BMAP_SIGNED_NEGATE      0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI5_BMAP_097                0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORI5_B_ALPHA                      20:20 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORI5_B_ALPHA_FALSE           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI5_B_ALPHA_TRUE            0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI5_B_ALPHA_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORI5_BSOURCE                      19:16 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORI5_BSOURCE_REG_0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI5_BSOURCE_REG_1           0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI5_BSOURCE_REG_2           0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI5_BSOURCE_REG_3           0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI5_BSOURCE_REG_4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI5_BSOURCE_REG_5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI5_BSOURCE_REG_8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI5_BSOURCE_REG_9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI5_BSOURCE_REG_A           0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINECOLORI5_BSOURCE_REG_B           0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINECOLORI5_BSOURCE_REG_C           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINECOLORI5_BSOURCE_REG_D           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINECOLORI5_BSOURCE_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORI5_CMAP                         15:13 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORI5_CMAP_UNSIGNED_IDENTITY  0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI5_CMAP_UNSIGNED_INVERT    0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI5_CMAP_EXPAND_NORMAL      0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI5_CMAP_EXPAND_NEGATE      0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI5_CMAP_HALFBIAS_NORMAL    0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI5_CMAP_HALFBIAS_NEGATE    0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI5_CMAP_SIGNED_IDENTITY    0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI5_CMAP_SIGNED_NEGATE      0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI5_CMAP_097                0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORI5_C_ALPHA                      12:12 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORI5_C_ALPHA_FALSE           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI5_C_ALPHA_TRUE            0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI5_C_ALPHA_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORI5_CSOURCE                       11:8 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORI5_CSOURCE_REG_0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI5_CSOURCE_REG_1           0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI5_CSOURCE_REG_2           0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI5_CSOURCE_REG_3           0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI5_CSOURCE_REG_4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI5_CSOURCE_REG_5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI5_CSOURCE_REG_8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI5_CSOURCE_REG_9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI5_CSOURCE_REG_A           0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINECOLORI5_CSOURCE_REG_B           0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINECOLORI5_CSOURCE_REG_C           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINECOLORI5_CSOURCE_REG_D           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINECOLORI5_CSOURCE_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORI5_DMAP                           7:5 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORI5_DMAP_UNSIGNED_IDENTITY  0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI5_DMAP_UNSIGNED_INVERT    0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI5_DMAP_EXPAND_NORMAL      0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI5_DMAP_EXPAND_NEGATE      0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI5_DMAP_HALFBIAS_NORMAL    0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI5_DMAP_HALFBIAS_NEGATE    0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI5_DMAP_SIGNED_IDENTITY    0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI5_DMAP_SIGNED_NEGATE      0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI5_DMAP_097                0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORI5_D_ALPHA                        4:4 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORI5_D_ALPHA_FALSE           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI5_D_ALPHA_TRUE            0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI5_D_ALPHA_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORI5_DSOURCE                        3:0 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORI5_DSOURCE_REG_0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI5_DSOURCE_REG_1           0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI5_DSOURCE_REG_2           0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI5_DSOURCE_REG_3           0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI5_DSOURCE_REG_4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI5_DSOURCE_REG_5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI5_DSOURCE_REG_8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI5_DSOURCE_REG_9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI5_DSOURCE_REG_A           0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINECOLORI5_DSOURCE_REG_B           0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINECOLORI5_DSOURCE_REG_C           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINECOLORI5_DSOURCE_REG_D           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINECOLORI5_DSOURCE_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORI6                         0x00401918 /* RW-4R */
#define NV_PGRAPH_COMBINECOLORI6_BUNDLE                  0x00000046 /* ----B */
#define NV_PGRAPH_COMBINECOLORI6_AMAP                         31:29 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORI6_AMAP_UNSIGNED_IDENTITY  0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI6_AMAP_UNSIGNED_INVERT    0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI6_AMAP_EXPAND_NORMAL      0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI6_AMAP_EXPAND_NEGATE      0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI6_AMAP_HALFBIAS_NORMAL    0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI6_AMAP_HALFBIAS_NEGATE    0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI6_AMAP_SIGNED_IDENTITY    0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI6_AMAP_SIGNED_NEGATE      0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI6_AMAP_097                0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORI6_A_ALPHA                      28:28 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORI6_A_ALPHA_FALSE           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI6_A_ALPHA_TRUE            0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI6_A_ALPHA_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORI6_ASOURCE                      27:24 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORI6_ASOURCE_REG_0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI6_ASOURCE_REG_1           0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI6_ASOURCE_REG_2           0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI6_ASOURCE_REG_3           0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI6_ASOURCE_REG_4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI6_ASOURCE_REG_5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI6_ASOURCE_REG_8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI6_ASOURCE_REG_9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI6_ASOURCE_REG_A           0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINECOLORI6_ASOURCE_REG_B           0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINECOLORI6_ASOURCE_REG_C           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINECOLORI6_ASOURCE_REG_D           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINECOLORI6_ASOURCE_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORI6_BMAP                         23:21 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORI6_BMAP_UNSIGNED_IDENTITY  0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI6_BMAP_UNSIGNED_INVERT    0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI6_BMAP_EXPAND_NORMAL      0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI6_BMAP_EXPAND_NEGATE      0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI6_BMAP_HALFBIAS_NORMAL    0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI6_BMAP_HALFBIAS_NEGATE    0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI6_BMAP_SIGNED_IDENTITY    0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI6_BMAP_SIGNED_NEGATE      0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI6_BMAP_097                0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORI6_B_ALPHA                      20:20 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORI6_B_ALPHA_FALSE           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI6_B_ALPHA_TRUE            0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI6_B_ALPHA_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORI6_BSOURCE                      19:16 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORI6_BSOURCE_REG_0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI6_BSOURCE_REG_1           0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI6_BSOURCE_REG_2           0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI6_BSOURCE_REG_3           0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI6_BSOURCE_REG_4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI6_BSOURCE_REG_5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI6_BSOURCE_REG_8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI6_BSOURCE_REG_9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI6_BSOURCE_REG_A           0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINECOLORI6_BSOURCE_REG_B           0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINECOLORI6_BSOURCE_REG_C           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINECOLORI6_BSOURCE_REG_D           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINECOLORI6_BSOURCE_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORI6_CMAP                         15:13 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORI6_CMAP_UNSIGNED_IDENTITY  0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI6_CMAP_UNSIGNED_INVERT    0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI6_CMAP_EXPAND_NORMAL      0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI6_CMAP_EXPAND_NEGATE      0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI6_CMAP_HALFBIAS_NORMAL    0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI6_CMAP_HALFBIAS_NEGATE    0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI6_CMAP_SIGNED_IDENTITY    0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI6_CMAP_SIGNED_NEGATE      0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI6_CMAP_097                0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORI6_C_ALPHA                      12:12 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORI6_C_ALPHA_FALSE           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI6_C_ALPHA_TRUE            0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI6_C_ALPHA_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORI6_CSOURCE                       11:8 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORI6_CSOURCE_REG_0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI6_CSOURCE_REG_1           0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI6_CSOURCE_REG_2           0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI6_CSOURCE_REG_3           0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI6_CSOURCE_REG_4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI6_CSOURCE_REG_5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI6_CSOURCE_REG_8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI6_CSOURCE_REG_9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI6_CSOURCE_REG_A           0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINECOLORI6_CSOURCE_REG_B           0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINECOLORI6_CSOURCE_REG_C           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINECOLORI6_CSOURCE_REG_D           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINECOLORI6_CSOURCE_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORI6_DMAP                           7:5 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORI6_DMAP_UNSIGNED_IDENTITY  0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI6_DMAP_UNSIGNED_INVERT    0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI6_DMAP_EXPAND_NORMAL      0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI6_DMAP_EXPAND_NEGATE      0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI6_DMAP_HALFBIAS_NORMAL    0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI6_DMAP_HALFBIAS_NEGATE    0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI6_DMAP_SIGNED_IDENTITY    0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI6_DMAP_SIGNED_NEGATE      0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI6_DMAP_097                0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORI6_D_ALPHA                        4:4 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORI6_D_ALPHA_FALSE           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI6_D_ALPHA_TRUE            0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI6_D_ALPHA_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORI6_DSOURCE                        3:0 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORI6_DSOURCE_REG_0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI6_DSOURCE_REG_1           0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI6_DSOURCE_REG_2           0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI6_DSOURCE_REG_3           0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI6_DSOURCE_REG_4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI6_DSOURCE_REG_5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI6_DSOURCE_REG_8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI6_DSOURCE_REG_9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI6_DSOURCE_REG_A           0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINECOLORI6_DSOURCE_REG_B           0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINECOLORI6_DSOURCE_REG_C           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINECOLORI6_DSOURCE_REG_D           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINECOLORI6_DSOURCE_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORI7                         0x0040191C /* RW-4R */
#define NV_PGRAPH_COMBINECOLORI7_BUNDLE                  0x00000047 /* ----B */
#define NV_PGRAPH_COMBINECOLORI7_AMAP                         31:29 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORI7_AMAP_UNSIGNED_IDENTITY  0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI7_AMAP_UNSIGNED_INVERT    0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI7_AMAP_EXPAND_NORMAL      0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI7_AMAP_EXPAND_NEGATE      0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI7_AMAP_HALFBIAS_NORMAL    0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI7_AMAP_HALFBIAS_NEGATE    0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI7_AMAP_SIGNED_IDENTITY    0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI7_AMAP_SIGNED_NEGATE      0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI7_AMAP_097                0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORI7_A_ALPHA                      28:28 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORI7_A_ALPHA_FALSE           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI7_A_ALPHA_TRUE            0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI7_A_ALPHA_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORI7_ASOURCE                      27:24 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORI7_ASOURCE_REG_0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI7_ASOURCE_REG_1           0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI7_ASOURCE_REG_2           0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI7_ASOURCE_REG_3           0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI7_ASOURCE_REG_4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI7_ASOURCE_REG_5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI7_ASOURCE_REG_8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI7_ASOURCE_REG_9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI7_ASOURCE_REG_A           0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINECOLORI7_ASOURCE_REG_B           0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINECOLORI7_ASOURCE_REG_C           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINECOLORI7_ASOURCE_REG_D           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINECOLORI7_ASOURCE_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORI7_BMAP                         23:21 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORI7_BMAP_UNSIGNED_IDENTITY  0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI7_BMAP_UNSIGNED_INVERT    0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI7_BMAP_EXPAND_NORMAL      0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI7_BMAP_EXPAND_NEGATE      0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI7_BMAP_HALFBIAS_NORMAL    0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI7_BMAP_HALFBIAS_NEGATE    0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI7_BMAP_SIGNED_IDENTITY    0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI7_BMAP_SIGNED_NEGATE      0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI7_BMAP_097                0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORI7_B_ALPHA                      20:20 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORI7_B_ALPHA_FALSE           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI7_B_ALPHA_TRUE            0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI7_B_ALPHA_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORI7_BSOURCE                      19:16 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORI7_BSOURCE_REG_0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI7_BSOURCE_REG_1           0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI7_BSOURCE_REG_2           0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI7_BSOURCE_REG_3           0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI7_BSOURCE_REG_4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI7_BSOURCE_REG_5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI7_BSOURCE_REG_8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI7_BSOURCE_REG_9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI7_BSOURCE_REG_A           0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINECOLORI7_BSOURCE_REG_B           0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINECOLORI7_BSOURCE_REG_C           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINECOLORI7_BSOURCE_REG_D           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINECOLORI7_BSOURCE_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORI7_CMAP                         15:13 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORI7_CMAP_UNSIGNED_IDENTITY  0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI7_CMAP_UNSIGNED_INVERT    0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI7_CMAP_EXPAND_NORMAL      0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI7_CMAP_EXPAND_NEGATE      0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI7_CMAP_HALFBIAS_NORMAL    0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI7_CMAP_HALFBIAS_NEGATE    0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI7_CMAP_SIGNED_IDENTITY    0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI7_CMAP_SIGNED_NEGATE      0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI7_CMAP_097                0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORI7_C_ALPHA                      12:12 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORI7_C_ALPHA_FALSE           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI7_C_ALPHA_TRUE            0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI7_C_ALPHA_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORI7_CSOURCE                       11:8 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORI7_CSOURCE_REG_0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI7_CSOURCE_REG_1           0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI7_CSOURCE_REG_2           0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI7_CSOURCE_REG_3           0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI7_CSOURCE_REG_4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI7_CSOURCE_REG_5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI7_CSOURCE_REG_8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI7_CSOURCE_REG_9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI7_CSOURCE_REG_A           0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINECOLORI7_CSOURCE_REG_B           0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINECOLORI7_CSOURCE_REG_C           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINECOLORI7_CSOURCE_REG_D           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINECOLORI7_CSOURCE_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORI7_DMAP                           7:5 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORI7_DMAP_UNSIGNED_IDENTITY  0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI7_DMAP_UNSIGNED_INVERT    0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI7_DMAP_EXPAND_NORMAL      0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI7_DMAP_EXPAND_NEGATE      0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI7_DMAP_HALFBIAS_NORMAL    0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI7_DMAP_HALFBIAS_NEGATE    0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI7_DMAP_SIGNED_IDENTITY    0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI7_DMAP_SIGNED_NEGATE      0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI7_DMAP_097                0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORI7_D_ALPHA                        4:4 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORI7_D_ALPHA_FALSE           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI7_D_ALPHA_TRUE            0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI7_D_ALPHA_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORI7_DSOURCE                        3:0 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORI7_DSOURCE_REG_0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI7_DSOURCE_REG_1           0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI7_DSOURCE_REG_2           0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI7_DSOURCE_REG_3           0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI7_DSOURCE_REG_4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI7_DSOURCE_REG_5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI7_DSOURCE_REG_8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI7_DSOURCE_REG_9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINECOLORI7_DSOURCE_REG_A           0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINECOLORI7_DSOURCE_REG_B           0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINECOLORI7_DSOURCE_REG_C           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINECOLORI7_DSOURCE_REG_D           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINECOLORI7_DSOURCE_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORO0                         0x00401920 /* RW-4R */
#define NV_PGRAPH_COMBINECOLORO0_BUNDLE                  0x00000048 /* ----B */
#define NV_PGRAPH_COMBINECOLORO0_B_TO_A_AB                    19:19 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORO0_B_TO_A_AB_DISABLE       0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO0_B_TO_A_AB_AB_DST_ENABLE 0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO0_B_TO_A_AB_097           0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORO0_B_TO_A_CD                    18:18 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORO0_B_TO_A_CD_DISABLE       0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO0_B_TO_A_CD_CD_DST_ENABLE 0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO0_B_TO_A_CD_097           0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORO0_OP                           17:15 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORO0_OP_NOSHIFT              0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO0_OP_NOSHIFT_BIAS         0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO0_OP_SHIFTLEFTBY1         0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO0_OP_SHIFTLEFTBY1_BIAS    0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO0_OP_SHIFTLEFTBY2         0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO0_OP_SHIFTRIGHTBY1        0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO0_OP_097                  0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORO0_MUX_ENABLE                   14:14 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORO0_MUX_ENABLE_FALSE        0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO0_MUX_ENABLE_TRUE         0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO0_MUX_ENABLE_097          0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORO0_AB_DOT_ENABLE                13:13 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORO0_AB_DOT_ENABLE_FALSE     0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO0_AB_DOT_ENABLE_TRUE      0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO0_AB_DOT_ENABLE_097       0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORO0_CD_DOT_ENABLE                12:12 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORO0_CD_DOT_ENABLE_FALSE     0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO0_CD_DOT_ENABLE_TRUE      0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO0_CD_DOT_ENABLE_097       0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORO0_SUM_DST                       11:8 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORO0_SUM_DST_REG_0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO0_SUM_DST_REG_4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO0_SUM_DST_REG_5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO0_SUM_DST_REG_8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO0_SUM_DST_REG_9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO0_SUM_DST_REG_A           0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINECOLORO0_SUM_DST_REG_B           0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINECOLORO0_SUM_DST_REG_C           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINECOLORO0_SUM_DST_REG_D           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINECOLORO0_SUM_DST_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORO0_AB_DST                         7:4 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORO0_AB_DST_REG_0            0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO0_AB_DST_REG_4            0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO0_AB_DST_REG_5            0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO0_AB_DST_REG_8            0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO0_AB_DST_REG_9            0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO0_AB_DST_REG_A            0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINECOLORO0_AB_DST_REG_B            0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINECOLORO0_AB_DST_REG_C            0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINECOLORO0_AB_DST_REG_D            0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINECOLORO0_AB_DST_097              0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORO0_CD_DST                         3:0 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORO0_CD_DST_REG_0            0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO0_CD_DST_REG_4            0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO0_CD_DST_REG_5            0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO0_CD_DST_REG_8            0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO0_CD_DST_REG_9            0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO0_CD_DST_REG_A            0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINECOLORO0_CD_DST_REG_B            0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINECOLORO0_CD_DST_REG_C            0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINECOLORO0_CD_DST_REG_D            0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINECOLORO0_CD_DST_097              0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORO1                         0x00401924 /* RW-4R */
#define NV_PGRAPH_COMBINECOLORO1_BUNDLE                  0x00000049 /* ----B */
#define NV_PGRAPH_COMBINECOLORO1_B_TO_A_AB                    19:19 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORO1_B_TO_A_AB_DISABLE       0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO1_B_TO_A_AB_AB_DST_ENABLE 0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO1_B_TO_A_AB_097           0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORO1_B_TO_A_CD                    18:18 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORO1_B_TO_A_CD_DISABLE       0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO1_B_TO_A_CD_CD_DST_ENABLE 0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO1_B_TO_A_CD_097           0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORO1_OP                           17:15 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORO1_OP_NOSHIFT              0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO1_OP_NOSHIFT_BIAS         0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO1_OP_SHIFTLEFTBY1         0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO1_OP_SHIFTLEFTBY1_BIAS    0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO1_OP_SHIFTLEFTBY2         0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO1_OP_SHIFTRIGHTBY1        0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO1_OP_097                  0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORO1_MUX_ENABLE                   14:14 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORO1_MUX_ENABLE_FALSE        0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO1_MUX_ENABLE_TRUE         0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO1_MUX_ENABLE_097          0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORO1_AB_DOT_ENABLE                13:13 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORO1_AB_DOT_ENABLE_FALSE     0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO1_AB_DOT_ENABLE_TRUE      0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO1_AB_DOT_ENABLE_097       0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORO1_CD_DOT_ENABLE                12:12 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORO1_CD_DOT_ENABLE_FALSE     0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO1_CD_DOT_ENABLE_TRUE      0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO1_CD_DOT_ENABLE_097       0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORO1_SUM_DST                       11:8 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORO1_SUM_DST_REG_0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO1_SUM_DST_REG_4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO1_SUM_DST_REG_5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO1_SUM_DST_REG_8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO1_SUM_DST_REG_9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO1_SUM_DST_REG_A           0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINECOLORO1_SUM_DST_REG_B           0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINECOLORO1_SUM_DST_REG_C           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINECOLORO1_SUM_DST_REG_D           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINECOLORO1_SUM_DST_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORO1_AB_DST                         7:4 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORO1_AB_DST_REG_0            0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO1_AB_DST_REG_4            0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO1_AB_DST_REG_5            0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO1_AB_DST_REG_8            0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO1_AB_DST_REG_9            0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO1_AB_DST_REG_A            0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINECOLORO1_AB_DST_REG_B            0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINECOLORO1_AB_DST_REG_C            0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINECOLORO1_AB_DST_REG_D            0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINECOLORO1_AB_DST_097              0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORO1_CD_DST                         3:0 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORO1_CD_DST_REG_0            0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO1_CD_DST_REG_4            0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO1_CD_DST_REG_5            0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO1_CD_DST_REG_8            0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO1_CD_DST_REG_9            0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO1_CD_DST_REG_A            0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINECOLORO1_CD_DST_REG_B            0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINECOLORO1_CD_DST_REG_C            0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINECOLORO1_CD_DST_REG_D            0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINECOLORO1_CD_DST_097              0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORO2                         0x00401928 /* RW-4R */
#define NV_PGRAPH_COMBINECOLORO2_BUNDLE                  0x0000004A /* ----B */
#define NV_PGRAPH_COMBINECOLORO2_B_TO_A_AB                    19:19 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORO2_B_TO_A_AB_DISABLE       0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO2_B_TO_A_AB_AB_DST_ENABLE 0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO2_B_TO_A_AB_097           0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORO2_B_TO_A_CD                    18:18 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORO2_B_TO_A_CD_DISABLE       0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO2_B_TO_A_CD_CD_DST_ENABLE 0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO2_B_TO_A_CD_097           0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORO2_OP                           17:15 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORO2_OP_NOSHIFT              0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO2_OP_NOSHIFT_BIAS         0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO2_OP_SHIFTLEFTBY1         0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO2_OP_SHIFTLEFTBY1_BIAS    0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO2_OP_SHIFTLEFTBY2         0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO2_OP_SHIFTRIGHTBY1        0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO2_OP_097                  0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORO2_MUX_ENABLE                   14:14 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORO2_MUX_ENABLE_FALSE        0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO2_MUX_ENABLE_TRUE         0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO2_MUX_ENABLE_097          0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORO2_AB_DOT_ENABLE                13:13 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORO2_AB_DOT_ENABLE_FALSE     0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO2_AB_DOT_ENABLE_TRUE      0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO2_AB_DOT_ENABLE_097       0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORO2_CD_DOT_ENABLE                12:12 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORO2_CD_DOT_ENABLE_FALSE     0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO2_CD_DOT_ENABLE_TRUE      0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO2_CD_DOT_ENABLE_097       0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORO2_SUM_DST                       11:8 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORO2_SUM_DST_REG_0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO2_SUM_DST_REG_4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO2_SUM_DST_REG_5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO2_SUM_DST_REG_8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO2_SUM_DST_REG_9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO2_SUM_DST_REG_A           0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINECOLORO2_SUM_DST_REG_B           0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINECOLORO2_SUM_DST_REG_C           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINECOLORO2_SUM_DST_REG_D           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINECOLORO2_SUM_DST_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORO2_AB_DST                         7:4 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORO2_AB_DST_REG_0            0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO2_AB_DST_REG_4            0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO2_AB_DST_REG_5            0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO2_AB_DST_REG_8            0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO2_AB_DST_REG_9            0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO2_AB_DST_REG_A            0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINECOLORO2_AB_DST_REG_B            0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINECOLORO2_AB_DST_REG_C            0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINECOLORO2_AB_DST_REG_D            0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINECOLORO2_AB_DST_097              0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORO2_CD_DST                         3:0 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORO2_CD_DST_REG_0            0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO2_CD_DST_REG_4            0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO2_CD_DST_REG_5            0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO2_CD_DST_REG_8            0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO2_CD_DST_REG_9            0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO2_CD_DST_REG_A            0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINECOLORO2_CD_DST_REG_B            0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINECOLORO2_CD_DST_REG_C            0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINECOLORO2_CD_DST_REG_D            0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINECOLORO2_CD_DST_097              0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORO3                         0x0040192C /* RW-4R */
#define NV_PGRAPH_COMBINECOLORO3_BUNDLE                  0x0000004B /* ----B */
#define NV_PGRAPH_COMBINECOLORO3_B_TO_A_AB                    19:19 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORO3_B_TO_A_AB_DISABLE       0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO3_B_TO_A_AB_AB_DST_ENABLE 0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO3_B_TO_A_AB_097           0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORO3_B_TO_A_CD                    18:18 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORO3_B_TO_A_CD_DISABLE       0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO3_B_TO_A_CD_CD_DST_ENABLE 0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO3_B_TO_A_CD_097           0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORO3_OP                           17:15 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORO3_OP_NOSHIFT              0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO3_OP_NOSHIFT_BIAS         0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO3_OP_SHIFTLEFTBY1         0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO3_OP_SHIFTLEFTBY1_BIAS    0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO3_OP_SHIFTLEFTBY2         0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO3_OP_SHIFTRIGHTBY1        0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO3_OP_097                  0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORO3_MUX_ENABLE                   14:14 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORO3_MUX_ENABLE_FALSE        0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO3_MUX_ENABLE_TRUE         0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO3_MUX_ENABLE_097          0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORO3_AB_DOT_ENABLE                13:13 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORO3_AB_DOT_ENABLE_FALSE     0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO3_AB_DOT_ENABLE_TRUE      0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO3_AB_DOT_ENABLE_097       0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORO3_CD_DOT_ENABLE                12:12 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORO3_CD_DOT_ENABLE_FALSE     0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO3_CD_DOT_ENABLE_TRUE      0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO3_CD_DOT_ENABLE_097       0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORO3_SUM_DST                       11:8 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORO3_SUM_DST_REG_0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO3_SUM_DST_REG_4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO3_SUM_DST_REG_5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO3_SUM_DST_REG_8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO3_SUM_DST_REG_9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO3_SUM_DST_REG_A           0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINECOLORO3_SUM_DST_REG_B           0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINECOLORO3_SUM_DST_REG_C           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINECOLORO3_SUM_DST_REG_D           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINECOLORO3_SUM_DST_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORO3_AB_DST                         7:4 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORO3_AB_DST_REG_0            0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO3_AB_DST_REG_4            0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO3_AB_DST_REG_5            0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO3_AB_DST_REG_8            0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO3_AB_DST_REG_9            0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO3_AB_DST_REG_A            0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINECOLORO3_AB_DST_REG_B            0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINECOLORO3_AB_DST_REG_C            0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINECOLORO3_AB_DST_REG_D            0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINECOLORO3_AB_DST_097              0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORO3_CD_DST                         3:0 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORO3_CD_DST_REG_0            0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO3_CD_DST_REG_4            0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO3_CD_DST_REG_5            0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO3_CD_DST_REG_8            0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO3_CD_DST_REG_9            0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO3_CD_DST_REG_A            0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINECOLORO3_CD_DST_REG_B            0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINECOLORO3_CD_DST_REG_C            0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINECOLORO3_CD_DST_REG_D            0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINECOLORO3_CD_DST_097              0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORO4                         0x00401930 /* RW-4R */
#define NV_PGRAPH_COMBINECOLORO4_BUNDLE                  0x0000004C /* ----B */
#define NV_PGRAPH_COMBINECOLORO4_B_TO_A_AB                    19:19 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORO4_B_TO_A_AB_DISABLE       0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO4_B_TO_A_AB_AB_DST_ENABLE 0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO4_B_TO_A_AB_097           0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORO4_B_TO_A_CD                    18:18 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORO4_B_TO_A_CD_DISABLE       0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO4_B_TO_A_CD_CD_DST_ENABLE 0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO4_B_TO_A_CD_097           0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORO4_OP                           17:15 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORO4_OP_NOSHIFT              0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO4_OP_NOSHIFT_BIAS         0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO4_OP_SHIFTLEFTBY1         0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO4_OP_SHIFTLEFTBY1_BIAS    0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO4_OP_SHIFTLEFTBY2         0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO4_OP_SHIFTRIGHTBY1        0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO4_OP_097                  0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORO4_MUX_ENABLE                   14:14 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORO4_MUX_ENABLE_FALSE        0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO4_MUX_ENABLE_TRUE         0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO4_MUX_ENABLE_097          0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORO4_AB_DOT_ENABLE                13:13 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORO4_AB_DOT_ENABLE_FALSE     0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO4_AB_DOT_ENABLE_TRUE      0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO4_AB_DOT_ENABLE_097       0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORO4_CD_DOT_ENABLE                12:12 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORO4_CD_DOT_ENABLE_FALSE     0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO4_CD_DOT_ENABLE_TRUE      0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO4_CD_DOT_ENABLE_097       0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORO4_SUM_DST                       11:8 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORO4_SUM_DST_REG_0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO4_SUM_DST_REG_4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO4_SUM_DST_REG_5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO4_SUM_DST_REG_8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO4_SUM_DST_REG_9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO4_SUM_DST_REG_A           0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINECOLORO4_SUM_DST_REG_B           0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINECOLORO4_SUM_DST_REG_C           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINECOLORO4_SUM_DST_REG_D           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINECOLORO4_SUM_DST_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORO4_AB_DST                         7:4 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORO4_AB_DST_REG_0            0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO4_AB_DST_REG_4            0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO4_AB_DST_REG_5            0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO4_AB_DST_REG_8            0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO4_AB_DST_REG_9            0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO4_AB_DST_REG_A            0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINECOLORO4_AB_DST_REG_B            0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINECOLORO4_AB_DST_REG_C            0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINECOLORO4_AB_DST_REG_D            0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINECOLORO4_AB_DST_097              0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORO4_CD_DST                         3:0 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORO4_CD_DST_REG_0            0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO4_CD_DST_REG_4            0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO4_CD_DST_REG_5            0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO4_CD_DST_REG_8            0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO4_CD_DST_REG_9            0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO4_CD_DST_REG_A            0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINECOLORO4_CD_DST_REG_B            0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINECOLORO4_CD_DST_REG_C            0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINECOLORO4_CD_DST_REG_D            0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINECOLORO4_CD_DST_097              0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORO5                         0x00401934 /* RW-4R */
#define NV_PGRAPH_COMBINECOLORO5_BUNDLE                  0x0000004D /* ----B */
#define NV_PGRAPH_COMBINECOLORO5_B_TO_A_AB                    19:19 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORO5_B_TO_A_AB_DISABLE       0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO5_B_TO_A_AB_AB_DST_ENABLE 0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO5_B_TO_A_AB_097           0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORO5_B_TO_A_CD                    18:18 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORO5_B_TO_A_CD_DISABLE       0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO5_B_TO_A_CD_CD_DST_ENABLE 0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO5_B_TO_A_CD_097           0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORO5_OP                           17:15 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORO5_OP_NOSHIFT              0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO5_OP_NOSHIFT_BIAS         0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO5_OP_SHIFTLEFTBY1         0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO5_OP_SHIFTLEFTBY1_BIAS    0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO5_OP_SHIFTLEFTBY2         0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO5_OP_SHIFTRIGHTBY1        0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO5_OP_097                  0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORO5_MUX_ENABLE                   14:14 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORO5_MUX_ENABLE_FALSE        0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO5_MUX_ENABLE_TRUE         0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO5_MUX_ENABLE_097          0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORO5_AB_DOT_ENABLE                13:13 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORO5_AB_DOT_ENABLE_FALSE     0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO5_AB_DOT_ENABLE_TRUE      0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO5_AB_DOT_ENABLE_097       0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORO5_CD_DOT_ENABLE                12:12 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORO5_CD_DOT_ENABLE_FALSE     0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO5_CD_DOT_ENABLE_TRUE      0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO5_CD_DOT_ENABLE_097       0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORO5_SUM_DST                       11:8 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORO5_SUM_DST_REG_0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO5_SUM_DST_REG_4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO5_SUM_DST_REG_5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO5_SUM_DST_REG_8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO5_SUM_DST_REG_9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO5_SUM_DST_REG_A           0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINECOLORO5_SUM_DST_REG_B           0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINECOLORO5_SUM_DST_REG_C           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINECOLORO5_SUM_DST_REG_D           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINECOLORO5_SUM_DST_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORO5_AB_DST                         7:4 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORO5_AB_DST_REG_0            0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO5_AB_DST_REG_4            0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO5_AB_DST_REG_5            0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO5_AB_DST_REG_8            0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO5_AB_DST_REG_9            0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO5_AB_DST_REG_A            0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINECOLORO5_AB_DST_REG_B            0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINECOLORO5_AB_DST_REG_C            0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINECOLORO5_AB_DST_REG_D            0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINECOLORO5_AB_DST_097              0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORO5_CD_DST                         3:0 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORO5_CD_DST_REG_0            0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO5_CD_DST_REG_4            0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO5_CD_DST_REG_5            0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO5_CD_DST_REG_8            0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO5_CD_DST_REG_9            0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO5_CD_DST_REG_A            0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINECOLORO5_CD_DST_REG_B            0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINECOLORO5_CD_DST_REG_C            0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINECOLORO5_CD_DST_REG_D            0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINECOLORO5_CD_DST_097              0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORO6                         0x00401938 /* RW-4R */
#define NV_PGRAPH_COMBINECOLORO6_BUNDLE                  0x0000004E /* ----B */
#define NV_PGRAPH_COMBINECOLORO6_B_TO_A_AB                    19:19 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORO6_B_TO_A_AB_DISABLE       0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO6_B_TO_A_AB_AB_DST_ENABLE 0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO6_B_TO_A_AB_097           0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORO6_B_TO_A_CD                    18:18 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORO6_B_TO_A_CD_DISABLE       0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO6_B_TO_A_CD_CD_DST_ENABLE 0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO6_B_TO_A_CD_097           0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORO6_OP                           17:15 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORO6_OP_NOSHIFT              0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO6_OP_NOSHIFT_BIAS         0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO6_OP_SHIFTLEFTBY1         0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO6_OP_SHIFTLEFTBY1_BIAS    0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO6_OP_SHIFTLEFTBY2         0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO6_OP_SHIFTRIGHTBY1        0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO6_OP_097                  0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORO6_MUX_ENABLE                   14:14 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORO6_MUX_ENABLE_FALSE        0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO6_MUX_ENABLE_TRUE         0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO6_MUX_ENABLE_097          0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORO6_AB_DOT_ENABLE                13:13 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORO6_AB_DOT_ENABLE_FALSE     0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO6_AB_DOT_ENABLE_TRUE      0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO6_AB_DOT_ENABLE_097       0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORO6_CD_DOT_ENABLE                12:12 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORO6_CD_DOT_ENABLE_FALSE     0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO6_CD_DOT_ENABLE_TRUE      0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO6_CD_DOT_ENABLE_097       0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORO6_SUM_DST                       11:8 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORO6_SUM_DST_REG_0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO6_SUM_DST_REG_4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO6_SUM_DST_REG_5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO6_SUM_DST_REG_8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO6_SUM_DST_REG_9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO6_SUM_DST_REG_A           0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINECOLORO6_SUM_DST_REG_B           0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINECOLORO6_SUM_DST_REG_C           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINECOLORO6_SUM_DST_REG_D           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINECOLORO6_SUM_DST_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORO6_AB_DST                         7:4 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORO6_AB_DST_REG_0            0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO6_AB_DST_REG_4            0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO6_AB_DST_REG_5            0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO6_AB_DST_REG_8            0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO6_AB_DST_REG_9            0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO6_AB_DST_REG_A            0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINECOLORO6_AB_DST_REG_B            0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINECOLORO6_AB_DST_REG_C            0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINECOLORO6_AB_DST_REG_D            0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINECOLORO6_AB_DST_097              0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORO6_CD_DST                         3:0 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORO6_CD_DST_REG_0            0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO6_CD_DST_REG_4            0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO6_CD_DST_REG_5            0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO6_CD_DST_REG_8            0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO6_CD_DST_REG_9            0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO6_CD_DST_REG_A            0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINECOLORO6_CD_DST_REG_B            0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINECOLORO6_CD_DST_REG_C            0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINECOLORO6_CD_DST_REG_D            0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINECOLORO6_CD_DST_097              0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORO7                         0x0040193C /* RW-4R */
#define NV_PGRAPH_COMBINECOLORO7_BUNDLE                  0x0000004F /* ----B */
#define NV_PGRAPH_COMBINECOLORO7_B_TO_A_AB                    19:19 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORO7_B_TO_A_AB_DISABLE       0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO7_B_TO_A_AB_AB_DST_ENABLE 0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO7_B_TO_A_AB_097           0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORO7_B_TO_A_CD                    18:18 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORO7_B_TO_A_CD_DISABLE       0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO7_B_TO_A_CD_CD_DST_ENABLE 0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO7_B_TO_A_CD_097           0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORO7_OP                           17:15 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORO7_OP_NOSHIFT              0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO7_OP_NOSHIFT_BIAS         0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO7_OP_SHIFTLEFTBY1         0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO7_OP_SHIFTLEFTBY1_BIAS    0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO7_OP_SHIFTLEFTBY2         0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO7_OP_SHIFTRIGHTBY1        0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO7_OP_097                  0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORO7_MUX_ENABLE                   14:14 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORO7_MUX_ENABLE_FALSE        0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO7_MUX_ENABLE_TRUE         0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO7_MUX_ENABLE_097          0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORO7_AB_DOT_ENABLE                13:13 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORO7_AB_DOT_ENABLE_FALSE     0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO7_AB_DOT_ENABLE_TRUE      0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO7_AB_DOT_ENABLE_097       0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORO7_CD_DOT_ENABLE                12:12 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORO7_CD_DOT_ENABLE_FALSE     0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO7_CD_DOT_ENABLE_TRUE      0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO7_CD_DOT_ENABLE_097       0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORO7_SUM_DST                       11:8 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORO7_SUM_DST_REG_0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO7_SUM_DST_REG_4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO7_SUM_DST_REG_5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO7_SUM_DST_REG_8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO7_SUM_DST_REG_9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO7_SUM_DST_REG_A           0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINECOLORO7_SUM_DST_REG_B           0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINECOLORO7_SUM_DST_REG_C           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINECOLORO7_SUM_DST_REG_D           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINECOLORO7_SUM_DST_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORO7_AB_DST                         7:4 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORO7_AB_DST_REG_0            0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO7_AB_DST_REG_4            0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO7_AB_DST_REG_5            0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO7_AB_DST_REG_8            0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO7_AB_DST_REG_9            0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO7_AB_DST_REG_A            0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINECOLORO7_AB_DST_REG_B            0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINECOLORO7_AB_DST_REG_C            0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINECOLORO7_AB_DST_REG_D            0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINECOLORO7_AB_DST_097              0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECOLORO7_CD_DST                         3:0 /* RWXVF */
#define NV_PGRAPH_COMBINECOLORO7_CD_DST_REG_0            0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO7_CD_DST_REG_4            0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO7_CD_DST_REG_5            0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO7_CD_DST_REG_8            0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO7_CD_DST_REG_9            0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINECOLORO7_CD_DST_REG_A            0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINECOLORO7_CD_DST_REG_B            0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINECOLORO7_CD_DST_REG_C            0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINECOLORO7_CD_DST_REG_D            0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINECOLORO7_CD_DST_097              0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECTL                             0x00401940 /* RW-4R */
#define NV_PGRAPH_COMBINECTL_BUNDLE                      0x00000050 /* ----B */
#define NV_PGRAPH_COMBINECTL_ITERATION_COUNT                    3:0 /* RWXVF */
#define NV_PGRAPH_COMBINECTL_ITERATION_COUNT_ONE         0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECTL_ITERATION_COUNT_TWO         0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINECTL_ITERATION_COUNT_THREE       0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINECTL_ITERATION_COUNT_FOUR        0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINECTL_ITERATION_COUNT_FIVE        0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINECTL_ITERATION_COUNT_SIX         0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINECTL_ITERATION_COUNT_SEVEN       0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINECTL_ITERATION_COUNT_EIGHT       0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINECTL_ITERATION_COUNT_097         0x00000001 /* RWC-V */
#define NV_PGRAPH_COMBINECTL_MUX_SELECT                         8:8 /* RWXVF */
#define NV_PGRAPH_COMBINECTL_MUX_SELECT_LSB              0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECTL_MUX_SELECT_MSB              0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECTL_MUX_SELECT_097              0x00000001 /* RWC-V */
#define NV_PGRAPH_COMBINECTL_FACTOR0                          12:12 /* RWXVF */
#define NV_PGRAPH_COMBINECTL_FACTOR0_SAME_FACTOR_ALL     0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECTL_FACTOR0_EACH_STAGE          0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECTL_FACTOR0_097                 0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINECTL_FACTOR1                          16:16 /* RWXVF */
#define NV_PGRAPH_COMBINECTL_FACTOR1_SAME_FACTOR_ALL     0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINECTL_FACTOR1_EACH_STAGE          0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINECTL_FACTOR1_097                 0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINESPECFOG0                        0x00401944 /* RW-4R */
#define NV_PGRAPH_COMBINESPECFOG0_BUNDLE                 0x00000051 /* ----B */
#define NV_PGRAPH_COMBINESPECFOG0_A_INVERSE                   29:29 /* RWXVF */
#define NV_PGRAPH_COMBINESPECFOG0_A_INVERSE_FALSE        0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG0_A_INVERSE_TRUE         0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG0_A_INVERSE_097          0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINESPECFOG0_A_ALPHA                     28:28 /* RWXVF */
#define NV_PGRAPH_COMBINESPECFOG0_A_ALPHA_FALSE          0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG0_A_ALPHA_TRUE           0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG0_A_ALPHA_097            0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINESPECFOG0_A_SOURCE                    27:24 /* RWXVF */
#define NV_PGRAPH_COMBINESPECFOG0_A_SOURCE_REG_0         0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG0_A_SOURCE_REG_1         0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG0_A_SOURCE_REG_2         0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG0_A_SOURCE_REG_3         0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG0_A_SOURCE_REG_4         0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG0_A_SOURCE_REG_5         0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG0_A_SOURCE_REG_8         0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG0_A_SOURCE_REG_9         0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG0_A_SOURCE_REG_A         0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG0_A_SOURCE_REG_B         0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG0_A_SOURCE_REG_C         0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG0_A_SOURCE_REG_D         0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG0_A_SOURCE_REG_SPECLIT   0x0000000E /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG0_A_SOURCE_REG_EF_PROD   0x0000000F /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG0_A_SOURCE_097           0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINESPECFOG0_B_INVERSE                   21:21 /* RWXVF */
#define NV_PGRAPH_COMBINESPECFOG0_B_INVERSE_FALSE        0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG0_B_INVERSE_TRUE         0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG0_B_INVERSE_097          0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINESPECFOG0_B_ALPHA                     20:20 /* RWXVF */
#define NV_PGRAPH_COMBINESPECFOG0_B_ALPHA_FALSE          0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG0_B_ALPHA_TRUE           0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG0_B_ALPHA_097            0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINESPECFOG0_B_SOURCE                    19:16 /* RWXVF */
#define NV_PGRAPH_COMBINESPECFOG0_B_SOURCE_REG_0         0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG0_B_SOURCE_REG_1         0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG0_B_SOURCE_REG_2         0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG0_B_SOURCE_REG_3         0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG0_B_SOURCE_REG_4         0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG0_B_SOURCE_REG_5         0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG0_B_SOURCE_REG_8         0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG0_B_SOURCE_REG_9         0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG0_B_SOURCE_REG_A         0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG0_B_SOURCE_REG_B         0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG0_B_SOURCE_REG_C         0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG0_B_SOURCE_REG_D         0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG0_B_SOURCE_REG_SPECLIT   0x0000000E /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG0_B_SOURCE_REG_EF_PROD   0x0000000F /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG0_B_SOURCE_097           0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINESPECFOG0_C_INVERSE                   13:13 /* RWXVF */
#define NV_PGRAPH_COMBINESPECFOG0_C_INVERSE_FALSE        0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG0_C_INVERSE_TRUE         0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG0_C_INVERSE_097          0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINESPECFOG0_C_ALPHA                     12:12 /* RWXVF */
#define NV_PGRAPH_COMBINESPECFOG0_C_ALPHA_FALSE          0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG0_C_ALPHA_TRUE           0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG0_C_ALPHA_097            0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINESPECFOG0_C_SOURCE                     11:8 /* RWXVF */
#define NV_PGRAPH_COMBINESPECFOG0_C_SOURCE_REG_0         0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG0_C_SOURCE_REG_1         0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG0_C_SOURCE_REG_2         0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG0_C_SOURCE_REG_3         0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG0_C_SOURCE_REG_4         0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG0_C_SOURCE_REG_5         0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG0_C_SOURCE_REG_8         0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG0_C_SOURCE_REG_9         0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG0_C_SOURCE_REG_A         0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG0_C_SOURCE_REG_B         0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG0_C_SOURCE_REG_C         0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG0_C_SOURCE_REG_D         0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG0_C_SOURCE_REG_SPECLIT   0x0000000E /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG0_C_SOURCE_REG_EF_PROD   0x0000000F /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG0_C_SOURCE_097           0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINESPECFOG0_D_INVERSE                     5:5 /* RWXVF */
#define NV_PGRAPH_COMBINESPECFOG0_D_INVERSE_FALSE        0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG0_D_INVERSE_TRUE         0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG0_D_INVERSE_097          0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINESPECFOG0_D_ALPHA                       4:4 /* RWXVF */
#define NV_PGRAPH_COMBINESPECFOG0_D_ALPHA_FALSE          0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG0_D_ALPHA_TRUE           0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG0_D_ALPHA_097            0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINESPECFOG0_D_SOURCE                      3:0 /* RWXVF */
#define NV_PGRAPH_COMBINESPECFOG0_D_SOURCE_REG_0         0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG0_D_SOURCE_REG_1         0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG0_D_SOURCE_REG_2         0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG0_D_SOURCE_REG_3         0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG0_D_SOURCE_REG_4         0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG0_D_SOURCE_REG_5         0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG0_D_SOURCE_REG_8         0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG0_D_SOURCE_REG_9         0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG0_D_SOURCE_REG_A         0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG0_D_SOURCE_REG_B         0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG0_D_SOURCE_REG_C         0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG0_D_SOURCE_REG_D         0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG0_D_SOURCE_REG_SPECLIT   0x0000000E /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG0_D_SOURCE_REG_EF_PROD   0x0000000F /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG0_D_SOURCE_097           0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINESPECFOG1                        0x00401948 /* RW-4R */
#define NV_PGRAPH_COMBINESPECFOG1_BUNDLE                 0x00000052 /* ----B */
#define NV_PGRAPH_COMBINESPECFOG1_E_INVERSE                   29:29 /* RWXVF */
#define NV_PGRAPH_COMBINESPECFOG1_E_INVERSE_FALSE        0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG1_E_INVERSE_TRUE         0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG1_E_INVERSE_097          0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINESPECFOG1_E_ALPHA                     28:28 /* RWXVF */
#define NV_PGRAPH_COMBINESPECFOG1_E_ALPHA_FALSE          0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG1_E_ALPHA_TRUE           0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG1_E_ALPHA_097            0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINESPECFOG1_E_SOURCE                    27:24 /* RWXVF */
#define NV_PGRAPH_COMBINESPECFOG1_E_SOURCE_REG_0         0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG1_E_SOURCE_REG_1         0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG1_E_SOURCE_REG_2         0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG1_E_SOURCE_REG_3         0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG1_E_SOURCE_REG_4         0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG1_E_SOURCE_REG_5         0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG1_E_SOURCE_REG_8         0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG1_E_SOURCE_REG_9         0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG1_E_SOURCE_REG_A         0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG1_E_SOURCE_REG_B         0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG1_E_SOURCE_REG_C         0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG1_E_SOURCE_REG_D         0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG1_E_SOURCE_097           0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINESPECFOG1_F_INVERSE                   21:21 /* RWXVF */
#define NV_PGRAPH_COMBINESPECFOG1_F_INVERSE_FALSE        0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG1_F_INVERSE_TRUE         0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG1_F_INVERSE_097          0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINESPECFOG1_F_ALPHA                     20:20 /* RWXVF */
#define NV_PGRAPH_COMBINESPECFOG1_F_ALPHA_FALSE          0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG1_F_ALPHA_TRUE           0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG1_F_ALPHA_097            0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINESPECFOG1_F_SOURCE                    19:16 /* RWXVF */
#define NV_PGRAPH_COMBINESPECFOG1_F_SOURCE_REG_0         0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG1_F_SOURCE_REG_1         0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG1_F_SOURCE_REG_2         0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG1_F_SOURCE_REG_3         0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG1_F_SOURCE_REG_4         0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG1_F_SOURCE_REG_5         0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG1_F_SOURCE_REG_8         0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG1_F_SOURCE_REG_9         0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG1_F_SOURCE_REG_A         0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG1_F_SOURCE_REG_B         0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG1_F_SOURCE_REG_C         0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG1_F_SOURCE_REG_D         0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG1_F_SOURCE_097           0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINESPECFOG1_G_INVERSE                   13:13 /* RWXVF */
#define NV_PGRAPH_COMBINESPECFOG1_G_INVERSE_FALSE        0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG1_G_INVERSE_TRUE         0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG1_G_INVERSE_097          0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINESPECFOG1_G_ALPHA                     12:12 /* RWXVF */
#define NV_PGRAPH_COMBINESPECFOG1_G_ALPHA_FALSE          0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG1_G_ALPHA_TRUE           0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG1_G_ALPHA_097            0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINESPECFOG1_G_SOURCE                     11:8 /* RWXVF */
#define NV_PGRAPH_COMBINESPECFOG1_G_SOURCE_REG_0         0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG1_G_SOURCE_REG_1         0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG1_G_SOURCE_REG_2         0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG1_G_SOURCE_REG_3         0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG1_G_SOURCE_REG_4         0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG1_G_SOURCE_REG_5         0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG1_G_SOURCE_REG_8         0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG1_G_SOURCE_REG_9         0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG1_G_SOURCE_REG_A         0x0000000A /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG1_G_SOURCE_REG_B         0x0000000B /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG1_G_SOURCE_REG_C         0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG1_G_SOURCE_REG_D         0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG1_G_SOURCE_097           0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINESPECFOG1_SPECULAR_CLAMP                7:7 /* RWXVF */
#define NV_PGRAPH_COMBINESPECFOG1_SPECULAR_CLAMP_FALSE   0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG1_SPECULAR_CLAMP_TRUE    0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG1_SPECULAR_CLAMP_097     0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINESPECFOG1_SPECADDINVR5                  6:6 /* RWXVF */
#define NV_PGRAPH_COMBINESPECFOG1_SPECADDINVR5_FALSE     0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG1_SPECADDINVR5_TRUE      0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG1_SPECADDINVR5_097       0x00000000 /* RWC-V */
#define NV_PGRAPH_COMBINESPECFOG1_SPECADDINVR12                 5:5 /* RWXVF */
#define NV_PGRAPH_COMBINESPECFOG1_SPECADDINVR12_FALSE    0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG1_SPECADDINVR12_TRUE     0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOG1_SPECADDINVR12_097      0x00000000 /* RWC-V */
#define NV_PGRAPH_CONTROL_0                              0x0040194C /* RW-4R */
#define NV_PGRAPH_CONTROL_0_BUNDLE                       0x00000053 /* ----B */
#define NV_PGRAPH_CONTROL_0_CSCONVERT                         31:30 /* RWXVF */
#define NV_PGRAPH_CONTROL_0_CSCONVERT_PASS               0x00000000 /* RW--V */
#define NV_PGRAPH_CONTROL_0_CSCONVERT_CRYCB_TO_RGB       0x00000001 /* RW--V */
#define NV_PGRAPH_CONTROL_0_CSCONVERT_SCRYSCB_TO_RGB     0x00000002 /* RW--V */
#define NV_PGRAPH_CONTROL_0_CSCONVERT_097                0x00000000 /* RWC-V */
#define NV_PGRAPH_CONTROL_0_Z_PERSPECTIVE_ENABLE              23:23 /* RWXVF */
#define NV_PGRAPH_CONTROL_0_Z_PERSPECTIVE_ENABLE_FALSE   0x00000000 /* RW--V */
#define NV_PGRAPH_CONTROL_0_Z_PERSPECTIVE_ENABLE_TRUE    0x00000001 /* RW--V */
#define NV_PGRAPH_CONTROL_0_Z_PERSPECTIVE_ENABLE_097     0x00000000 /* RWC-V */
#define NV_PGRAPH_CONTROL_0_STENCIL_WRITE_ENABLE              25:25 /* RWXVF */
#define NV_PGRAPH_CONTROL_0_STENCIL_WRITE_ENABLE_FALSE   0x00000000 /* RW--V */
#define NV_PGRAPH_CONTROL_0_STENCIL_WRITE_ENABLE_TRUE    0x00000001 /* RW--V */
#define NV_PGRAPH_CONTROL_0_STENCIL_WRITE_ENABLE_097     0x00000000 /* RWC-V */
#define NV_PGRAPH_CONTROL_0_ALPHATESTENABLE                   12:12 /* RWXVF */
#define NV_PGRAPH_CONTROL_0_ALPHATESTENABLE_FALSE        0x00000000 /* RW--V */
#define NV_PGRAPH_CONTROL_0_ALPHATESTENABLE_TRUE         0x00000001 /* RW--V */
#define NV_PGRAPH_CONTROL_0_ALPHATESTENABLE_097          0x00000000 /* RWC-V */
#define NV_PGRAPH_CONTROL_0_ZENABLE                           14:14 /* RWXVF */
#define NV_PGRAPH_CONTROL_0_ZENABLE_FALSE                0x00000000 /* RW--V */
#define NV_PGRAPH_CONTROL_0_ZENABLE_TRUE                 0x00000001 /* RW--V */
#define NV_PGRAPH_CONTROL_0_ZENABLE_097                  0x00000000 /* RWC-V */
#define NV_PGRAPH_CONTROL_0_DITHERENABLE                      22:22 /* RWXVF */
#define NV_PGRAPH_CONTROL_0_DITHERENABLE_FALSE           0x00000000 /* RW--V */
#define NV_PGRAPH_CONTROL_0_DITHERENABLE_TRUE            0x00000001 /* RW--V */
#define NV_PGRAPH_CONTROL_0_DITHERENABLE_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_CONTROL_0_ALPHAFUNC                          11:8 /* RWXVF */
#define NV_PGRAPH_CONTROL_0_ALPHAFUNC_NEVER              0x00000000 /* RW--V */
#define NV_PGRAPH_CONTROL_0_ALPHAFUNC_LESS               0x00000001 /* RW--V */
#define NV_PGRAPH_CONTROL_0_ALPHAFUNC_EQUAL              0x00000002 /* RW--V */
#define NV_PGRAPH_CONTROL_0_ALPHAFUNC_LEQUAL             0x00000003 /* RW--V */
#define NV_PGRAPH_CONTROL_0_ALPHAFUNC_GREATER            0x00000004 /* RW--V */
#define NV_PGRAPH_CONTROL_0_ALPHAFUNC_NOTEQUAL           0x00000005 /* RW--V */
#define NV_PGRAPH_CONTROL_0_ALPHAFUNC_GEQUAL             0x00000006 /* RW--V */
#define NV_PGRAPH_CONTROL_0_ALPHAFUNC_ALWAYS             0x00000007 /* RW--V */
#define NV_PGRAPH_CONTROL_0_ALPHAFUNC_097                0x00000000 /* RWC-V */
#define NV_PGRAPH_CONTROL_0_ALPHAREF                            7:0 /* RWXUF */
#define NV_PGRAPH_CONTROL_0_ALPHAREF_097                 0x00000000 /* RWC-V */
#define NV_PGRAPH_CONTROL_0_ZFUNC                             19:16 /* RWXVF */
#define NV_PGRAPH_CONTROL_0_ZFUNC_NEVER                  0x00000000 /* RW--V */
#define NV_PGRAPH_CONTROL_0_ZFUNC_LESS                   0x00000001 /* RW--V */
#define NV_PGRAPH_CONTROL_0_ZFUNC_EQUAL                  0x00000002 /* RW--V */
#define NV_PGRAPH_CONTROL_0_ZFUNC_LEQUAL                 0x00000003 /* RW--V */
#define NV_PGRAPH_CONTROL_0_ZFUNC_GREATER                0x00000004 /* RW--V */
#define NV_PGRAPH_CONTROL_0_ZFUNC_NOTEQUAL               0x00000005 /* RW--V */
#define NV_PGRAPH_CONTROL_0_ZFUNC_GEQUAL                 0x00000006 /* RW--V */
#define NV_PGRAPH_CONTROL_0_ZFUNC_ALWAYS                 0x00000007 /* RW--V */
#define NV_PGRAPH_CONTROL_0_ZFUNC_097                    0x00000000 /* RWC-V */
#define NV_PGRAPH_CONTROL_0_ALPHA_WRITE_ENABLE                26:26 /* RWXVF */
#define NV_PGRAPH_CONTROL_0_ALPHA_WRITE_ENABLE_FALSE     0x00000000 /* RW--V */
#define NV_PGRAPH_CONTROL_0_ALPHA_WRITE_ENABLE_TRUE      0x00000001 /* RW--V */
#define NV_PGRAPH_CONTROL_0_ALPHA_WRITE_ENABLE_097       0x00000000 /* RWC-V */
#define NV_PGRAPH_CONTROL_0_RED_WRITE_ENABLE                  27:27 /* RWXVF */
#define NV_PGRAPH_CONTROL_0_RED_WRITE_ENABLE_FALSE       0x00000000 /* RW--V */
#define NV_PGRAPH_CONTROL_0_RED_WRITE_ENABLE_TRUE        0x00000001 /* RW--V */
#define NV_PGRAPH_CONTROL_0_RED_WRITE_ENABLE_097         0x00000000 /* RWC-V */
#define NV_PGRAPH_CONTROL_0_GREEN_WRITE_ENABLE                28:28 /* RWXVF */
#define NV_PGRAPH_CONTROL_0_GREEN_WRITE_ENABLE_FALSE     0x00000000 /* RW--V */
#define NV_PGRAPH_CONTROL_0_GREEN_WRITE_ENABLE_TRUE      0x00000001 /* RW--V */
#define NV_PGRAPH_CONTROL_0_GREEN_WRITE_ENABLE_097       0x00000000 /* RWC-V */
#define NV_PGRAPH_CONTROL_0_BLUE_WRITE_ENABLE                 29:29 /* RWXVF */
#define NV_PGRAPH_CONTROL_0_BLUE_WRITE_ENABLE_FALSE      0x00000000 /* RW--V */
#define NV_PGRAPH_CONTROL_0_BLUE_WRITE_ENABLE_TRUE       0x00000001 /* RW--V */
#define NV_PGRAPH_CONTROL_0_BLUE_WRITE_ENABLE_097        0x00000000 /* RWC-V */
#define NV_PGRAPH_CONTROL_0_ZWRITEENABLE                      24:24 /* RWXVF */
#define NV_PGRAPH_CONTROL_0_ZWRITEENABLE_FALSE           0x00000000 /* RW--V */
#define NV_PGRAPH_CONTROL_0_ZWRITEENABLE_TRUE            0x00000001 /* RW--V */
#define NV_PGRAPH_CONTROL_0_ZWRITEENABLE_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_CONTROL_1                              0x00401950 /* RW-4R */
#define NV_PGRAPH_CONTROL_1_BUNDLE                       0x00000054 /* ----B */
#define NV_PGRAPH_CONTROL_1_STENCIL_TEST_ENABLE                 0:0 /* RWXVF */
#define NV_PGRAPH_CONTROL_1_STENCIL_TEST_ENABLE_FALSE    0x00000000 /* RW--V */
#define NV_PGRAPH_CONTROL_1_STENCIL_TEST_ENABLE_TRUE     0x00000001 /* RW--V */
#define NV_PGRAPH_CONTROL_1_STENCIL_TEST_ENABLE_097      0x00000000 /* RWC-V */
#define NV_PGRAPH_CONTROL_1_STENCIL_MASK_WRITE                31:24 /* RWXUF */
#define NV_PGRAPH_CONTROL_1_STENCIL_MASK_WRITE_097       0x00000000 /* RWC-V */
#define NV_PGRAPH_CONTROL_1_STENCIL_FUNC                        7:4 /* RWXVF */
#define NV_PGRAPH_CONTROL_1_STENCIL_FUNC_NEVER           0x00000000 /* RW--V */
#define NV_PGRAPH_CONTROL_1_STENCIL_FUNC_LESS            0x00000001 /* RW--V */
#define NV_PGRAPH_CONTROL_1_STENCIL_FUNC_EQUAL           0x00000002 /* RW--V */
#define NV_PGRAPH_CONTROL_1_STENCIL_FUNC_LEQUAL          0x00000003 /* RW--V */
#define NV_PGRAPH_CONTROL_1_STENCIL_FUNC_GREATER         0x00000004 /* RW--V */
#define NV_PGRAPH_CONTROL_1_STENCIL_FUNC_NOTEQUAL        0x00000005 /* RW--V */
#define NV_PGRAPH_CONTROL_1_STENCIL_FUNC_GEQUAL          0x00000006 /* RW--V */
#define NV_PGRAPH_CONTROL_1_STENCIL_FUNC_ALWAYS          0x00000007 /* RW--V */
#define NV_PGRAPH_CONTROL_1_STENCIL_FUNC_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_CONTROL_1_STENCIL_REF                        15:8 /* RWXUF */
#define NV_PGRAPH_CONTROL_1_STENCIL_REF_097              0x00000000 /* RWC-V */
#define NV_PGRAPH_CONTROL_1_STENCIL_MASK_READ                 23:16 /* RWXUF */
#define NV_PGRAPH_CONTROL_1_STENCIL_MASK_READ_097        0x00000000 /* RWC-V */
#define NV_PGRAPH_CONTROL_2                              0x00401954 /* RW-4R */
#define NV_PGRAPH_CONTROL_2_BUNDLE                       0x00000055 /* ----B */
#define NV_PGRAPH_CONTROL_2_STENCIL_OP_FAIL                     3:0 /* RWXVF */
#define NV_PGRAPH_CONTROL_2_STENCIL_OP_FAIL_KEEP         0x00000001 /* RW--V */
#define NV_PGRAPH_CONTROL_2_STENCIL_OP_FAIL_ZERO         0x00000002 /* RW--V */
#define NV_PGRAPH_CONTROL_2_STENCIL_OP_FAIL_REPLACE      0x00000003 /* RW--V */
#define NV_PGRAPH_CONTROL_2_STENCIL_OP_FAIL_INCRSAT      0x00000004 /* RW--V */
#define NV_PGRAPH_CONTROL_2_STENCIL_OP_FAIL_DECRSAT      0x00000005 /* RW--V */
#define NV_PGRAPH_CONTROL_2_STENCIL_OP_FAIL_INVERT       0x00000006 /* RW--V */
#define NV_PGRAPH_CONTROL_2_STENCIL_OP_FAIL_INCR         0x00000007 /* RW--V */
#define NV_PGRAPH_CONTROL_2_STENCIL_OP_FAIL_DECR         0x00000008 /* RW--V */
#define NV_PGRAPH_CONTROL_2_STENCIL_OP_FAIL_097          0x00000001 /* RWC-V */
#define NV_PGRAPH_CONTROL_2_STENCIL_OP_ZFAIL                    7:4 /* RWXVF */
#define NV_PGRAPH_CONTROL_2_STENCIL_OP_ZFAIL_KEEP        0x00000001 /* RW--V */
#define NV_PGRAPH_CONTROL_2_STENCIL_OP_ZFAIL_ZERO        0x00000002 /* RW--V */
#define NV_PGRAPH_CONTROL_2_STENCIL_OP_ZFAIL_REPLACE     0x00000003 /* RW--V */
#define NV_PGRAPH_CONTROL_2_STENCIL_OP_ZFAIL_INCRSAT     0x00000004 /* RW--V */
#define NV_PGRAPH_CONTROL_2_STENCIL_OP_ZFAIL_DECRSAT     0x00000005 /* RW--V */
#define NV_PGRAPH_CONTROL_2_STENCIL_OP_ZFAIL_INVERT      0x00000006 /* RW--V */
#define NV_PGRAPH_CONTROL_2_STENCIL_OP_ZFAIL_INCR        0x00000007 /* RW--V */
#define NV_PGRAPH_CONTROL_2_STENCIL_OP_ZFAIL_DECR        0x00000008 /* RW--V */
#define NV_PGRAPH_CONTROL_2_STENCIL_OP_ZFAIL_097         0x00000001 /* RWC-V */
#define NV_PGRAPH_CONTROL_2_STENCIL_OP_ZPASS                   11:8 /* RWXVF */
#define NV_PGRAPH_CONTROL_2_STENCIL_OP_ZPASS_KEEP        0x00000001 /* RW--V */
#define NV_PGRAPH_CONTROL_2_STENCIL_OP_ZPASS_ZERO        0x00000002 /* RW--V */
#define NV_PGRAPH_CONTROL_2_STENCIL_OP_ZPASS_REPLACE     0x00000003 /* RW--V */
#define NV_PGRAPH_CONTROL_2_STENCIL_OP_ZPASS_INCRSAT     0x00000004 /* RW--V */
#define NV_PGRAPH_CONTROL_2_STENCIL_OP_ZPASS_DECRSAT     0x00000005 /* RW--V */
#define NV_PGRAPH_CONTROL_2_STENCIL_OP_ZPASS_INVERT      0x00000006 /* RW--V */
#define NV_PGRAPH_CONTROL_2_STENCIL_OP_ZPASS_INCR        0x00000007 /* RW--V */
#define NV_PGRAPH_CONTROL_2_STENCIL_OP_ZPASS_DECR        0x00000008 /* RW--V */
#define NV_PGRAPH_CONTROL_2_STENCIL_OP_ZPASS_097         0x00000001 /* RWC-V */
#define NV_PGRAPH_CONTROL_3                              0x00401958 /* RW-4R */
#define NV_PGRAPH_CONTROL_3_BUNDLE                       0x00000056 /* ----B */
#define NV_PGRAPH_CONTROL_3_PREMULTALPHA                        2:2 /* RWXVF */
#define NV_PGRAPH_CONTROL_3_PREMULTALPHA_FALSE           0x00000000 /* RW--V */
#define NV_PGRAPH_CONTROL_3_PREMULTALPHA_TRUE            0x00000001 /* RW--V */
#define NV_PGRAPH_CONTROL_3_PREMULTALPHA_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_CONTROL_3_TEXTUREPERSPECTIVE                  6:6 /* RWXVF */
#define NV_PGRAPH_CONTROL_3_TEXTUREPERSPECTIVE_FALSE     0x00000000 /* RW--V */
#define NV_PGRAPH_CONTROL_3_TEXTUREPERSPECTIVE_TRUE      0x00000001 /* RW--V */
#define NV_PGRAPH_CONTROL_3_TEXTUREPERSPECTIVE_097       0x00000000 /* RWC-V */
#define NV_PGRAPH_CONTROL_3_WBUFFER_SELECT                    13:10 /* RWXVF */
#define NV_PGRAPH_CONTROL_3_WBUFFER_SELECT_0             0x00000000 /* RW--V */
#define NV_PGRAPH_CONTROL_3_WBUFFER_SELECT_1             0x00000001 /* RW--V */
#define NV_PGRAPH_CONTROL_3_WBUFFER_SELECT_097           0x00000000 /* RWC-V */
#define NV_PGRAPH_CONTROL_3_FOG_MODE                          18:16 /* RWXVF */
#define NV_PGRAPH_CONTROL_3_FOG_MODE_LINEAR              0x00000000 /* RW--V */
#define NV_PGRAPH_CONTROL_3_FOG_MODE_EXP                 0x00000001 /* RW--V */
#define NV_PGRAPH_CONTROL_3_FOG_MODE_EXP2                0x00000003 /* RW--V */
#define NV_PGRAPH_CONTROL_3_FOG_MODE_EXP_ABS             0x00000005 /* RW--V */
#define NV_PGRAPH_CONTROL_3_FOG_MODE_EXP2_ABS            0x00000007 /* RW--V */
#define NV_PGRAPH_CONTROL_3_FOG_MODE_LINEAR_ABS          0x00000004 /* RW--V */
#define NV_PGRAPH_CONTROL_3_FOG_MODE_097                 0x00000000 /* RWC-V */
#define NV_PGRAPH_CONTROL_3_FOGENABLE                           8:8 /* RWXVF */
#define NV_PGRAPH_CONTROL_3_FOGENABLE_FALSE              0x00000000 /* RW--V */
#define NV_PGRAPH_CONTROL_3_FOGENABLE_TRUE               0x00000001 /* RW--V */
#define NV_PGRAPH_CONTROL_3_FOGENABLE_097                0x00000000 /* RWC-V */
#define NV_PGRAPH_CONTROL_3_POINTPARAMSENABLE                   9:9 /* RWXVF */
#define NV_PGRAPH_CONTROL_3_POINTPARAMSENABLE_FALSE      0x00000000 /* RW--V */
#define NV_PGRAPH_CONTROL_3_POINTPARAMSENABLE_TRUE       0x00000001 /* RW--V */
#define NV_PGRAPH_CONTROL_3_POINTPARAMSENABLE_097        0x00000000 /* RWC-V */
#define NV_PGRAPH_CONTROL_3_SHADEMODE                           7:7 /* RWXVF */
#define NV_PGRAPH_CONTROL_3_SHADEMODE_FLAT               0x00000000 /* RW--V */
#define NV_PGRAPH_CONTROL_3_SHADEMODE_SMOOTH             0x00000001 /* RW--V */
#define NV_PGRAPH_CONTROL_3_SHADEMODE_097                0x00000000 /* RWC-V */
#define NV_PGRAPH_CONTROL_3_SPECULARENABLE                      5:5 /* RWXVF */
#define NV_PGRAPH_CONTROL_3_SPECULARENABLE_FALSE         0x00000000 /* RW--V */
#define NV_PGRAPH_CONTROL_3_SPECULARENABLE_TRUE          0x00000001 /* RW--V */
#define NV_PGRAPH_CONTROL_3_SPECULARENABLE_097           0x00000000 /* RWC-V */
#define NV_PGRAPH_CONTROL_3_FLATSHADE_OP                        0:0 /* RWXVF */
#define NV_PGRAPH_CONTROL_3_FLATSHADE_OP_LAST_VTX        0x00000000 /* RW--V */
#define NV_PGRAPH_CONTROL_3_FLATSHADE_OP_FIRST_VTX       0x00000001 /* RW--V */
#define NV_PGRAPH_CONTROL_3_FLATSHADE_OP_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_CONTROL_3_ZP                                20:20 /* RWXVF */
#define NV_PGRAPH_CONTROL_3_ZP_FALSE                     0x00000000 /* RW--V */
#define NV_PGRAPH_CONTROL_3_ZP_TRUE                      0x00000001 /* RW--V */
#define NV_PGRAPH_CONTROL_3_ZP_097                       0x00000000 /* RWC-V */
#define NV_PGRAPH_FOGCOLOR                               0x00401980 /* RW-4R */
#define NV_PGRAPH_FOGCOLOR_BUNDLE                        0x00000060 /* ----B */
#define NV_PGRAPH_FOGCOLOR_RED                                23:16 /* RWXUF */
#define NV_PGRAPH_FOGCOLOR_RED_097                       0x00000000 /* RWC-V */
#define NV_PGRAPH_FOGCOLOR_GREEN                               15:8 /* RWXUF */
#define NV_PGRAPH_FOGCOLOR_GREEN_097                     0x00000000 /* RWC-V */
#define NV_PGRAPH_FOGCOLOR_BLUE                                 7:0 /* RWXUF */
#define NV_PGRAPH_FOGCOLOR_BLUE_097                      0x00000000 /* RWC-V */
#define NV_PGRAPH_FOGCOLOR_ALPHA                              31:24 /* RWXUF */
#define NV_PGRAPH_FOGCOLOR_ALPHA_097                     0x00000000 /* RWC-V */
#define NV_PGRAPH_FOGPARAM0                              0x00401984 /* RW-4R */
#define NV_PGRAPH_FOGPARAM0_BUNDLE                       0x00000061 /* ----B */
#define NV_PGRAPH_FOGPARAM0_V                                  31:0 /* RWXFF */
#define NV_PGRAPH_FOGPARAM0_V_097                        0x00000000 /* RWC-V */
#define NV_PGRAPH_FOGPARAM1                              0x00401988 /* RW-4R */
#define NV_PGRAPH_FOGPARAM1_BUNDLE                       0x00000062 /* ----B */
#define NV_PGRAPH_FOGPARAM1_V                                  31:0 /* RWXFF */
#define NV_PGRAPH_FOGPARAM1_V_097                        0x00000000 /* RWC-V */
#define NV_PGRAPH_POINTSIZE                              0x0040198C /* RW-4R */
#define NV_PGRAPH_POINTSIZE_BUNDLE                       0x00000063 /* ----B */
#define NV_PGRAPH_POINTSIZE_V                                   8:0 /* RWXUF */
#define NV_PGRAPH_POINTSIZE_V_097                        0x00000000 /* RWC-V */
#define NV_PGRAPH_SETUPRASTER                            0x00401990 /* RW-4R */
#define NV_PGRAPH_SETUPRASTER_BUNDLE                     0x00000064 /* ----B */
#define NV_PGRAPH_SETUPRASTER_Z_FORMAT                        29:29 /* RWXVF */
#define NV_PGRAPH_SETUPRASTER_Z_FORMAT_FIXED             0x00000000 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_Z_FORMAT_FLOAT             0x00000001 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_Z_FORMAT_097               0x00000000 /* RWC-V */
#define NV_PGRAPH_SETUPRASTER_WINDOWCLIPTYPE                  31:31 /* RWXVF */
#define NV_PGRAPH_SETUPRASTER_WINDOWCLIPTYPE_INCLUSIVE   0x00000000 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_WINDOWCLIPTYPE_EXCLUSIVE   0x00000001 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_WINDOWCLIPTYPE_097         0x00000000 /* RWC-V */
#define NV_PGRAPH_SETUPRASTER_CULLENABLE                      28:28 /* RWXVF */
#define NV_PGRAPH_SETUPRASTER_CULLENABLE_FALSE           0x00000000 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_CULLENABLE_TRUE            0x00000001 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_CULLENABLE_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_SETUPRASTER_POINTSMOOTHENABLE                 9:9 /* RWXVF */
#define NV_PGRAPH_SETUPRASTER_POINTSMOOTHENABLE_FALSE    0x00000000 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_POINTSMOOTHENABLE_TRUE     0x00000001 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_POINTSMOOTHENABLE_097      0x00000000 /* RWC-V */
#define NV_PGRAPH_SETUPRASTER_LINESMOOTHENABLE                10:10 /* RWXVF */
#define NV_PGRAPH_SETUPRASTER_LINESMOOTHENABLE_FALSE     0x00000000 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_LINESMOOTHENABLE_TRUE      0x00000001 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_LINESMOOTHENABLE_097       0x00000000 /* RWC-V */
#define NV_PGRAPH_SETUPRASTER_POLYSMOOTHENABLE                11:11 /* RWXVF */
#define NV_PGRAPH_SETUPRASTER_POLYSMOOTHENABLE_FALSE     0x00000000 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_POLYSMOOTHENABLE_TRUE      0x00000001 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_POLYSMOOTHENABLE_097       0x00000000 /* RWC-V */
#define NV_PGRAPH_SETUPRASTER_STIPPLE_EN                        4:4 /* RWXVF */
#define NV_PGRAPH_SETUPRASTER_STIPPLE_EN_OFF             0x00000000 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_STIPPLE_EN_POLYGON         0x00000001 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_STIPPLE_EN_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_SETUPRASTER_POFFSETPOINTENABLE                6:6 /* RWXVF */
#define NV_PGRAPH_SETUPRASTER_POFFSETPOINTENABLE_FALSE   0x00000000 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_POFFSETPOINTENABLE_TRUE    0x00000001 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_POFFSETPOINTENABLE_097     0x00000000 /* RWC-V */
#define NV_PGRAPH_SETUPRASTER_POFFSETLINEENABLE                 7:7 /* RWXVF */
#define NV_PGRAPH_SETUPRASTER_POFFSETLINEENABLE_FALSE    0x00000000 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_POFFSETLINEENABLE_TRUE     0x00000001 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_POFFSETLINEENABLE_097      0x00000000 /* RWC-V */
#define NV_PGRAPH_SETUPRASTER_POFFSETFILLENABLE                 8:8 /* RWXVF */
#define NV_PGRAPH_SETUPRASTER_POFFSETFILLENABLE_FALSE    0x00000000 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_POFFSETFILLENABLE_TRUE     0x00000001 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_POFFSETFILLENABLE_097      0x00000000 /* RWC-V */
#define NV_PGRAPH_SETUPRASTER_LINEWIDTH                       20:12 /* RWXUF */
#define NV_PGRAPH_SETUPRASTER_LINEWIDTH_097              0x00000000 /* RWC-V */
#define NV_PGRAPH_SETUPRASTER_FRONTFACEMODE                     1:0 /* RWXVF */
#define NV_PGRAPH_SETUPRASTER_FRONTFACEMODE_POINT        0x00000001 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_FRONTFACEMODE_LINE         0x00000002 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_FRONTFACEMODE_FILL         0x00000000 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_FRONTFACEMODE_097          0x00000000 /* RWC-V */
#define NV_PGRAPH_SETUPRASTER_BACKFACEMODE                      3:2 /* RWXVF */
#define NV_PGRAPH_SETUPRASTER_BACKFACEMODE_POINT         0x00000001 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_BACKFACEMODE_LINE          0x00000002 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_BACKFACEMODE_FILL          0x00000000 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_BACKFACEMODE_097           0x00000000 /* RWC-V */
#define NV_PGRAPH_SETUPRASTER_CULLCTRL                        22:21 /* RWXVF */
#define NV_PGRAPH_SETUPRASTER_CULLCTRL_FRONT             0x00000001 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_CULLCTRL_BACK              0x00000002 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_CULLCTRL_FRONT_AND_BACK    0x00000003 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_CULLCTRL_097               0x00000002 /* RWC-V */
#define NV_PGRAPH_SETUPRASTER_FRONTFACE                       23:23 /* RWXVF */
#define NV_PGRAPH_SETUPRASTER_FRONTFACE_CW               0x00000000 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_FRONTFACE_CCW              0x00000001 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_FRONTFACE_097              0x00000000 /* RWC-V */
#define NV_PGRAPH_SETUPRASTER_SWATHWIDTH                      27:25 /* RWXVF */
#define NV_PGRAPH_SETUPRASTER_SWATHWIDTH_8               0x00000000 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_SWATHWIDTH_16              0x00000001 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_SWATHWIDTH_32              0x00000002 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_SWATHWIDTH_64              0x00000003 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_SWATHWIDTH_128             0x00000004 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_SWATHWIDTH_OFF             0x00000007 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_SWATHWIDTH_097             0x00000002 /* RWC-V */
#define NV_PGRAPH_SETUPRASTER_CULL_NEAR_FAR_EN                30:30 /* RWXVF */
#define NV_PGRAPH_SETUPRASTER_CULL_NEAR_FAR_EN_FALSE     0x00000000 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_CULL_NEAR_FAR_EN_TRUE      0x00000001 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_CULL_NEAR_FAR_EN_097       0x00000001 /* RWC-V */
#define NV_PGRAPH_SETUPRASTER_IGNORE_WSIGN                      5:5 /* RWXVF */
#define NV_PGRAPH_SETUPRASTER_IGNORE_WSIGN_FALSE         0x00000000 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_IGNORE_WSIGN_TRUE          0x00000001 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_IGNORE_WSIGN_097           0x00000000 /* RWC-V */
#define NV_PGRAPH_SETUPRASTER_TWO_SIDED_LIGHTING              24:24 /* RWXVF */
#define NV_PGRAPH_SETUPRASTER_TWO_SIDED_LIGHTING_FALSE   0x00000000 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_TWO_SIDED_LIGHTING_TRUE    0x00000001 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_TWO_SIDED_LIGHTING_097     0x00000000 /* RWC-V */
#define NV_PGRAPH_SHADERCLIPMODE                         0x00401994 /* RW-4R */
#define NV_PGRAPH_SHADERCLIPMODE_BUNDLE                  0x00000065 /* ----B */
#define NV_PGRAPH_SHADERCLIPMODE_STAGE0_S                       0:0 /* RWXVF */
#define NV_PGRAPH_SHADERCLIPMODE_STAGE0_S_CLIPLTZ        0x00000000 /* RW--V */
#define NV_PGRAPH_SHADERCLIPMODE_STAGE0_S_CLIPGEZ        0x00000001 /* RW--V */
#define NV_PGRAPH_SHADERCLIPMODE_STAGE0_S_097            0x00000000 /* RWC-V */
#define NV_PGRAPH_SHADERCLIPMODE_STAGE0_T                       1:1 /* RWXVF */
#define NV_PGRAPH_SHADERCLIPMODE_STAGE0_T_CLIPLTZ        0x00000000 /* RW--V */
#define NV_PGRAPH_SHADERCLIPMODE_STAGE0_T_CLIPGEZ        0x00000001 /* RW--V */
#define NV_PGRAPH_SHADERCLIPMODE_STAGE0_T_097            0x00000000 /* RWC-V */
#define NV_PGRAPH_SHADERCLIPMODE_STAGE0_R                       2:2 /* RWXVF */
#define NV_PGRAPH_SHADERCLIPMODE_STAGE0_R_CLIPLTZ        0x00000000 /* RW--V */
#define NV_PGRAPH_SHADERCLIPMODE_STAGE0_R_CLIPGEZ        0x00000001 /* RW--V */
#define NV_PGRAPH_SHADERCLIPMODE_STAGE0_R_097            0x00000000 /* RWC-V */
#define NV_PGRAPH_SHADERCLIPMODE_STAGE0_Q                       3:3 /* RWXVF */
#define NV_PGRAPH_SHADERCLIPMODE_STAGE0_Q_CLIPLTZ        0x00000000 /* RW--V */
#define NV_PGRAPH_SHADERCLIPMODE_STAGE0_Q_CLIPGEZ        0x00000001 /* RW--V */
#define NV_PGRAPH_SHADERCLIPMODE_STAGE0_Q_097            0x00000000 /* RWC-V */
#define NV_PGRAPH_SHADERCLIPMODE_STAGE1_S                       4:4 /* RWXVF */
#define NV_PGRAPH_SHADERCLIPMODE_STAGE1_S_CLIPLTZ        0x00000000 /* RW--V */
#define NV_PGRAPH_SHADERCLIPMODE_STAGE1_S_CLIPGEZ        0x00000001 /* RW--V */
#define NV_PGRAPH_SHADERCLIPMODE_STAGE1_S_097            0x00000000 /* RWC-V */
#define NV_PGRAPH_SHADERCLIPMODE_STAGE1_T                       5:5 /* RWXVF */
#define NV_PGRAPH_SHADERCLIPMODE_STAGE1_T_CLIPLTZ        0x00000000 /* RW--V */
#define NV_PGRAPH_SHADERCLIPMODE_STAGE1_T_CLIPGEZ        0x00000001 /* RW--V */
#define NV_PGRAPH_SHADERCLIPMODE_STAGE1_T_097            0x00000000 /* RWC-V */
#define NV_PGRAPH_SHADERCLIPMODE_STAGE1_R                       6:6 /* RWXVF */
#define NV_PGRAPH_SHADERCLIPMODE_STAGE1_R_CLIPLTZ        0x00000000 /* RW--V */
#define NV_PGRAPH_SHADERCLIPMODE_STAGE1_R_CLIPGEZ        0x00000001 /* RW--V */
#define NV_PGRAPH_SHADERCLIPMODE_STAGE1_R_097            0x00000000 /* RWC-V */
#define NV_PGRAPH_SHADERCLIPMODE_STAGE1_Q                       7:7 /* RWXVF */
#define NV_PGRAPH_SHADERCLIPMODE_STAGE1_Q_CLIPLTZ        0x00000000 /* RW--V */
#define NV_PGRAPH_SHADERCLIPMODE_STAGE1_Q_CLIPGEZ        0x00000001 /* RW--V */
#define NV_PGRAPH_SHADERCLIPMODE_STAGE1_Q_097            0x00000000 /* RWC-V */
#define NV_PGRAPH_SHADERCLIPMODE_STAGE2_S                       8:8 /* RWXVF */
#define NV_PGRAPH_SHADERCLIPMODE_STAGE2_S_CLIPLTZ        0x00000000 /* RW--V */
#define NV_PGRAPH_SHADERCLIPMODE_STAGE2_S_CLIPGEZ        0x00000001 /* RW--V */
#define NV_PGRAPH_SHADERCLIPMODE_STAGE2_S_097            0x00000000 /* RWC-V */
#define NV_PGRAPH_SHADERCLIPMODE_STAGE2_T                       9:9 /* RWXVF */
#define NV_PGRAPH_SHADERCLIPMODE_STAGE2_T_CLIPLTZ        0x00000000 /* RW--V */
#define NV_PGRAPH_SHADERCLIPMODE_STAGE2_T_CLIPGEZ        0x00000001 /* RW--V */
#define NV_PGRAPH_SHADERCLIPMODE_STAGE2_T_097            0x00000000 /* RWC-V */
#define NV_PGRAPH_SHADERCLIPMODE_STAGE2_R                     10:10 /* RWXVF */
#define NV_PGRAPH_SHADERCLIPMODE_STAGE2_R_CLIPLTZ        0x00000000 /* RW--V */
#define NV_PGRAPH_SHADERCLIPMODE_STAGE2_R_CLIPGEZ        0x00000001 /* RW--V */
#define NV_PGRAPH_SHADERCLIPMODE_STAGE2_R_097            0x00000000 /* RWC-V */
#define NV_PGRAPH_SHADERCLIPMODE_STAGE2_Q                     11:11 /* RWXVF */
#define NV_PGRAPH_SHADERCLIPMODE_STAGE2_Q_CLIPLTZ        0x00000000 /* RW--V */
#define NV_PGRAPH_SHADERCLIPMODE_STAGE2_Q_CLIPGEZ        0x00000001 /* RW--V */
#define NV_PGRAPH_SHADERCLIPMODE_STAGE2_Q_097            0x00000000 /* RWC-V */
#define NV_PGRAPH_SHADERCLIPMODE_STAGE3_S                     12:12 /* RWXVF */
#define NV_PGRAPH_SHADERCLIPMODE_STAGE3_S_CLIPLTZ        0x00000000 /* RW--V */
#define NV_PGRAPH_SHADERCLIPMODE_STAGE3_S_CLIPGEZ        0x00000001 /* RW--V */
#define NV_PGRAPH_SHADERCLIPMODE_STAGE3_S_097            0x00000000 /* RWC-V */
#define NV_PGRAPH_SHADERCLIPMODE_STAGE3_T                     13:13 /* RWXVF */
#define NV_PGRAPH_SHADERCLIPMODE_STAGE3_T_CLIPLTZ        0x00000000 /* RW--V */
#define NV_PGRAPH_SHADERCLIPMODE_STAGE3_T_CLIPGEZ        0x00000001 /* RW--V */
#define NV_PGRAPH_SHADERCLIPMODE_STAGE3_T_097            0x00000000 /* RWC-V */
#define NV_PGRAPH_SHADERCLIPMODE_STAGE3_R                     14:14 /* RWXVF */
#define NV_PGRAPH_SHADERCLIPMODE_STAGE3_R_CLIPLTZ        0x00000000 /* RW--V */
#define NV_PGRAPH_SHADERCLIPMODE_STAGE3_R_CLIPGEZ        0x00000001 /* RW--V */
#define NV_PGRAPH_SHADERCLIPMODE_STAGE3_R_097            0x00000000 /* RWC-V */
#define NV_PGRAPH_SHADERCLIPMODE_STAGE3_Q                     15:15 /* RWXVF */
#define NV_PGRAPH_SHADERCLIPMODE_STAGE3_Q_CLIPLTZ        0x00000000 /* RW--V */
#define NV_PGRAPH_SHADERCLIPMODE_STAGE3_Q_CLIPGEZ        0x00000001 /* RW--V */
#define NV_PGRAPH_SHADERCLIPMODE_STAGE3_Q_097            0x00000000 /* RWC-V */
#define NV_PGRAPH_SHADERCTL                              0x00401998 /* RW-4R */
#define NV_PGRAPH_SHADERCTL_BUNDLE                       0x00000066 /* ----B */
#define NV_PGRAPH_SHADERCTL_MAP1                                2:0 /* RWXVF */
#define NV_PGRAPH_SHADERCTL_MAP1_ZERO_TO_1               0x00000000 /* RW--V */
#define NV_PGRAPH_SHADERCTL_MAP1_MINUS_1_TO_1_MS         0x00000001 /* RW--V */
#define NV_PGRAPH_SHADERCTL_MAP1_MINUS_1_TO_1_GL         0x00000002 /* RW--V */
#define NV_PGRAPH_SHADERCTL_MAP1_MINUS_1_TO_1_NV         0x00000003 /* RW--V */
#define NV_PGRAPH_SHADERCTL_MAP1_HILO_1                  0x00000004 /* RW--V */
#define NV_PGRAPH_SHADERCTL_MAP1_HILO_HEMISPHERE_MS      0x00000005 /* RW--V */
#define NV_PGRAPH_SHADERCTL_MAP1_HILO_HEMISPHERE_GL      0x00000006 /* RW--V */
#define NV_PGRAPH_SHADERCTL_MAP1_HILO_HEMISPHERE_NV      0x00000007 /* RW--V */
#define NV_PGRAPH_SHADERCTL_MAP1_097                     0x00000000 /* RWC-V */
#define NV_PGRAPH_SHADERCTL_MAP2                                5:3 /* RWXVF */
#define NV_PGRAPH_SHADERCTL_MAP2_ZERO_TO_1               0x00000000 /* RW--V */
#define NV_PGRAPH_SHADERCTL_MAP2_MINUS_1_TO_1_MS         0x00000001 /* RW--V */
#define NV_PGRAPH_SHADERCTL_MAP2_MINUS_1_TO_1_GL         0x00000002 /* RW--V */
#define NV_PGRAPH_SHADERCTL_MAP2_MINUS_1_TO_1_NV         0x00000003 /* RW--V */
#define NV_PGRAPH_SHADERCTL_MAP2_HILO_1                  0x00000004 /* RW--V */
#define NV_PGRAPH_SHADERCTL_MAP2_HILO_HEMISPHERE_MS      0x00000005 /* RW--V */
#define NV_PGRAPH_SHADERCTL_MAP2_HILO_HEMISPHERE_GL      0x00000006 /* RW--V */
#define NV_PGRAPH_SHADERCTL_MAP2_HILO_HEMISPHERE_NV      0x00000007 /* RW--V */
#define NV_PGRAPH_SHADERCTL_MAP2_097                     0x00000000 /* RWC-V */
#define NV_PGRAPH_SHADERCTL_MAP3                                8:6 /* RWXVF */
#define NV_PGRAPH_SHADERCTL_MAP3_ZERO_TO_1               0x00000000 /* RW--V */
#define NV_PGRAPH_SHADERCTL_MAP3_MINUS_1_TO_1_MS         0x00000001 /* RW--V */
#define NV_PGRAPH_SHADERCTL_MAP3_MINUS_1_TO_1_GL         0x00000002 /* RW--V */
#define NV_PGRAPH_SHADERCTL_MAP3_MINUS_1_TO_1_NV         0x00000003 /* RW--V */
#define NV_PGRAPH_SHADERCTL_MAP3_HILO_1                  0x00000004 /* RW--V */
#define NV_PGRAPH_SHADERCTL_MAP3_HILO_HEMISPHERE_MS      0x00000005 /* RW--V */
#define NV_PGRAPH_SHADERCTL_MAP3_HILO_HEMISPHERE_GL      0x00000006 /* RW--V */
#define NV_PGRAPH_SHADERCTL_MAP3_HILO_HEMISPHERE_NV      0x00000007 /* RW--V */
#define NV_PGRAPH_SHADERCTL_MAP3_097                     0x00000000 /* RWC-V */
#define NV_PGRAPH_SHADERCTL_OUT1                              15:15 /* RWXVF */
#define NV_PGRAPH_SHADERCTL_OUT1_INSTAGE_0               0x00000000 /* RW--V */
#define NV_PGRAPH_SHADERCTL_OUT1_097                     0x00000000 /* RWC-V */
#define NV_PGRAPH_SHADERCTL_OUT2                              16:16 /* RWXVF */
#define NV_PGRAPH_SHADERCTL_OUT2_INSTAGE_0               0x00000000 /* RW--V */
#define NV_PGRAPH_SHADERCTL_OUT2_INSTAGE_1               0x00000001 /* RW--V */
#define NV_PGRAPH_SHADERCTL_OUT2_097                     0x00000000 /* RWC-V */
#define NV_PGRAPH_SHADERCTL_OUT3                              21:20 /* RWXVF */
#define NV_PGRAPH_SHADERCTL_OUT3_INSTAGE_0               0x00000000 /* RW--V */
#define NV_PGRAPH_SHADERCTL_OUT3_INSTAGE_1               0x00000001 /* RW--V */
#define NV_PGRAPH_SHADERCTL_OUT3_INSTAGE_2               0x00000002 /* RW--V */
#define NV_PGRAPH_SHADERCTL_OUT3_097                     0x00000000 /* RWC-V */
#define NV_PGRAPH_SHADERPROG                             0x0040199C /* RW-4R */
#define NV_PGRAPH_SHADERPROG_BUNDLE                      0x00000067 /* ----B */
#define NV_PGRAPH_SHADERPROG_PASSTHROUGH                        3:3 /* RWXVF */
#define NV_PGRAPH_SHADERPROG_PASSTHROUGH_TRUE            0x00000001 /* RW--V */
#define NV_PGRAPH_SHADERPROG_PASSTHROUGH_FALSE           0x00000000 /* RW--V */
#define NV_PGRAPH_SHADERPROG_PASSTHROUGH_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_SHADERPROG_W_DIVIDE_0                       30:30 /* RWXVF */
#define NV_PGRAPH_SHADERPROG_W_DIVIDE_0_DISABLE          0x00000000 /* RW--V */
#define NV_PGRAPH_SHADERPROG_W_DIVIDE_0_ENABLE           0x00000001 /* RW--V */
#define NV_PGRAPH_SHADERPROG_W_DIVIDE_0_097              0x00000000 /* RWC-V */
#define NV_PGRAPH_SHADERPROG_W_DIVIDE_1                       31:31 /* RWXVF */
#define NV_PGRAPH_SHADERPROG_W_DIVIDE_1_DISABLE          0x00000000 /* RW--V */
#define NV_PGRAPH_SHADERPROG_W_DIVIDE_1_ENABLE           0x00000001 /* RW--V */
#define NV_PGRAPH_SHADERPROG_W_DIVIDE_1_097              0x00000000 /* RWC-V */
#define NV_PGRAPH_SHADERPROG_STAGE0                             2:0 /* RWXVF */
#define NV_PGRAPH_SHADERPROG_STAGE0_PROGRAM_NONE         0x00000000 /* RW--V */
#define NV_PGRAPH_SHADERPROG_STAGE0_2D_PROJECTIVE        0x00000001 /* RW--V */
#define NV_PGRAPH_SHADERPROG_STAGE0_3D_PROJECTIVE        0x00000002 /* RW--V */
#define NV_PGRAPH_SHADERPROG_STAGE0_CUBE_MAP             0x00000003 /* RW--V */
#define NV_PGRAPH_SHADERPROG_STAGE0_PASS_THROUGH         0x00000004 /* RW--V */
#define NV_PGRAPH_SHADERPROG_STAGE0_CLIP_PLANE           0x00000005 /* RW--V */
#define NV_PGRAPH_SHADERPROG_STAGE0_097                  0x00000000 /* RWC-V */
#define NV_PGRAPH_SHADERPROG_STAGE1                             9:5 /* RWXVF */
#define NV_PGRAPH_SHADERPROG_STAGE1_PROGRAM_NONE         0x00000000 /* RW--V */
#define NV_PGRAPH_SHADERPROG_STAGE1_2D_PROJECTIVE        0x00000001 /* RW--V */
#define NV_PGRAPH_SHADERPROG_STAGE1_3D_PROJECTIVE        0x00000002 /* RW--V */
#define NV_PGRAPH_SHADERPROG_STAGE1_CUBE_MAP             0x00000003 /* RW--V */
#define NV_PGRAPH_SHADERPROG_STAGE1_PASS_THROUGH         0x00000004 /* RW--V */
#define NV_PGRAPH_SHADERPROG_STAGE1_CLIP_PLANE           0x00000005 /* RW--V */
#define NV_PGRAPH_SHADERPROG_STAGE1_BUMPENVMAP           0x00000006 /* RW--V */
#define NV_PGRAPH_SHADERPROG_STAGE1_BUMPENVMAP_LUMINANCE 0x00000007 /* RW--V */
#define NV_PGRAPH_SHADERPROG_STAGE1_DEPENDENT_AR         0x0000000F /* RW--V */
#define NV_PGRAPH_SHADERPROG_STAGE1_DEPENDENT_GB         0x00000010 /* RW--V */
#define NV_PGRAPH_SHADERPROG_STAGE1_DOT_PRODUCT          0x00000011 /* RW--V */
#define NV_PGRAPH_SHADERPROG_STAGE1_097                  0x00000000 /* RWC-V */
#define NV_PGRAPH_SHADERPROG_STAGE2                           14:10 /* RWXVF */
#define NV_PGRAPH_SHADERPROG_STAGE2_PROGRAM_NONE         0x00000000 /* RW--V */
#define NV_PGRAPH_SHADERPROG_STAGE2_2D_PROJECTIVE        0x00000001 /* RW--V */
#define NV_PGRAPH_SHADERPROG_STAGE2_3D_PROJECTIVE        0x00000002 /* RW--V */
#define NV_PGRAPH_SHADERPROG_STAGE2_CUBE_MAP             0x00000003 /* RW--V */
#define NV_PGRAPH_SHADERPROG_STAGE2_PASS_THROUGH         0x00000004 /* RW--V */
#define NV_PGRAPH_SHADERPROG_STAGE2_CLIP_PLANE           0x00000005 /* RW--V */
#define NV_PGRAPH_SHADERPROG_STAGE2_BUMPENVMAP           0x00000006 /* RW--V */
#define NV_PGRAPH_SHADERPROG_STAGE2_BUMPENVMAP_LUMINANCE 0x00000007 /* RW--V */
#define NV_PGRAPH_SHADERPROG_STAGE2_BRDF                 0x00000008 /* RW--V */
#define NV_PGRAPH_SHADERPROG_STAGE2_DOT_ST               0x00000009 /* RW--V */
#define NV_PGRAPH_SHADERPROG_STAGE2_DOT_ZW               0x0000000A /* RW--V */
#define NV_PGRAPH_SHADERPROG_STAGE2_DOT_REFLECT_DIFFUSE  0x0000000B /* RW--V */
#define NV_PGRAPH_SHADERPROG_STAGE2_DEPENDENT_AR         0x0000000F /* RW--V */
#define NV_PGRAPH_SHADERPROG_STAGE2_DEPENDENT_GB         0x00000010 /* RW--V */
#define NV_PGRAPH_SHADERPROG_STAGE2_DOT_PRODUCT          0x00000011 /* RW--V */
#define NV_PGRAPH_SHADERPROG_STAGE2_097                  0x00000000 /* RWC-V */
#define NV_PGRAPH_SHADERPROG_STAGE3                           19:15 /* RWXVF */
#define NV_PGRAPH_SHADERPROG_STAGE3_PROGRAM_NONE         0x00000000 /* RW--V */
#define NV_PGRAPH_SHADERPROG_STAGE3_2D_PROJECTIVE        0x00000001 /* RW--V */
#define NV_PGRAPH_SHADERPROG_STAGE3_3D_PROJECTIVE        0x00000002 /* RW--V */
#define NV_PGRAPH_SHADERPROG_STAGE3_CUBE_MAP             0x00000003 /* RW--V */
#define NV_PGRAPH_SHADERPROG_STAGE3_PASS_THROUGH         0x00000004 /* RW--V */
#define NV_PGRAPH_SHADERPROG_STAGE3_CLIP_PLANE           0x00000005 /* RW--V */
#define NV_PGRAPH_SHADERPROG_STAGE3_BUMPENVMAP           0x00000006 /* RW--V */
#define NV_PGRAPH_SHADERPROG_STAGE3_BUMPENVMAP_LUMINANCE 0x00000007 /* RW--V */
#define NV_PGRAPH_SHADERPROG_STAGE3_BRDF                 0x00000008 /* RW--V */
#define NV_PGRAPH_SHADERPROG_STAGE3_DOT_ST               0x00000009 /* RW--V */
#define NV_PGRAPH_SHADERPROG_STAGE3_DOT_ZW               0x0000000A /* RW--V */
#define NV_PGRAPH_SHADERPROG_STAGE3_DOT_REFLECT_SPECULAR 0x0000000C /* RW--V */
#define NV_PGRAPH_SHADERPROG_STAGE3_DOT_STR_3D           0x0000000D /* RW--V */
#define NV_PGRAPH_SHADERPROG_STAGE3_DOT_STR_CUBE         0x0000000E /* RW--V */
#define NV_PGRAPH_SHADERPROG_STAGE3_DEPENDENT_AR         0x0000000F /* RW--V */
#define NV_PGRAPH_SHADERPROG_STAGE3_DEPENDENT_GB         0x00000010 /* RW--V */
#define NV_PGRAPH_SHADERPROG_STAGE3_DOT_REFLECT_SPECULAR_CONST 0x00000012 /* RW--V */
#define NV_PGRAPH_SHADERPROG_STAGE3_097                  0x00000000 /* RWC-V */
#define NV_PGRAPH_SEMAPHOREOFFSET                        0x004019A0 /* RW-4R */
#define NV_PGRAPH_SEMAPHOREOFFSET_BUNDLE                 0x00000068 /* ----B */
#define NV_PGRAPH_SEMAPHOREOFFSET_V                            31:0 /* RWXUF */
#define NV_PGRAPH_SEMAPHOREOFFSET_V_097                  0x00000000 /* RWC-V */
#define NV_PGRAPH_SHADOWCTL                              0x004019A4 /* RW-4R */
#define NV_PGRAPH_SHADOWCTL_BUNDLE                       0x00000069 /* ----B */
#define NV_PGRAPH_SHADOWCTL_SHADOW_ZFUNC                        2:0 /* RWXVF */
#define NV_PGRAPH_SHADOWCTL_SHADOW_ZFUNC_NEVER           0x00000000 /* RW--V */
#define NV_PGRAPH_SHADOWCTL_SHADOW_ZFUNC_LESS            0x00000001 /* RW--V */
#define NV_PGRAPH_SHADOWCTL_SHADOW_ZFUNC_EQUAL           0x00000002 /* RW--V */
#define NV_PGRAPH_SHADOWCTL_SHADOW_ZFUNC_LEQUAL          0x00000003 /* RW--V */
#define NV_PGRAPH_SHADOWCTL_SHADOW_ZFUNC_GREATER         0x00000004 /* RW--V */
#define NV_PGRAPH_SHADOWCTL_SHADOW_ZFUNC_NOTEQUAL        0x00000005 /* RW--V */
#define NV_PGRAPH_SHADOWCTL_SHADOW_ZFUNC_GEQUAL          0x00000006 /* RW--V */
#define NV_PGRAPH_SHADOWCTL_SHADOW_ZFUNC_ALWAYS          0x00000007 /* RW--V */
#define NV_PGRAPH_SHADOWCTL_SHADOW_ZFUNC_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_SHADOWZSLOPETHRESHOLD                  0x004019A8 /* RW-4R */
#define NV_PGRAPH_SHADOWZSLOPETHRESHOLD_BUNDLE           0x0000006A /* ----B */
#define NV_PGRAPH_SHADOWZSLOPETHRESHOLD_SHADOW_ZOFFSET         31:0 /* RWXFF */
#define NV_PGRAPH_SHADOWZSLOPETHRESHOLD_SHADOW_ZOFFSET_097 0x00000000 /* RWC-V */
#define NV_PGRAPH_SPECFOGFACTOR0                         0x004019AC /* RW-4R */
#define NV_PGRAPH_SPECFOGFACTOR0_BUNDLE                  0x0000006B /* ----B */
#define NV_PGRAPH_SPECFOGFACTOR0_BLUE                           7:0 /* RWXUF */
#define NV_PGRAPH_SPECFOGFACTOR0_BLUE_097                0x00000000 /* RWC-V */
#define NV_PGRAPH_SPECFOGFACTOR0_GREEN                         15:8 /* RWXUF */
#define NV_PGRAPH_SPECFOGFACTOR0_GREEN_097               0x00000000 /* RWC-V */
#define NV_PGRAPH_SPECFOGFACTOR0_RED                          23:16 /* RWXUF */
#define NV_PGRAPH_SPECFOGFACTOR0_RED_097                 0x00000000 /* RWC-V */
#define NV_PGRAPH_SPECFOGFACTOR0_ALPHA                        31:24 /* RWXUF */
#define NV_PGRAPH_SPECFOGFACTOR0_ALPHA_097               0x00000000 /* RWC-V */
#define NV_PGRAPH_SPECFOGFACTOR1                         0x004019B0 /* RW-4R */
#define NV_PGRAPH_SPECFOGFACTOR1_BUNDLE                  0x0000006C /* ----B */
#define NV_PGRAPH_SPECFOGFACTOR1_BLUE                           7:0 /* RWXUF */
#define NV_PGRAPH_SPECFOGFACTOR1_BLUE_097                0x00000000 /* RWC-V */
#define NV_PGRAPH_SPECFOGFACTOR1_GREEN                         15:8 /* RWXUF */
#define NV_PGRAPH_SPECFOGFACTOR1_GREEN_097               0x00000000 /* RWC-V */
#define NV_PGRAPH_SPECFOGFACTOR1_RED                          23:16 /* RWXUF */
#define NV_PGRAPH_SPECFOGFACTOR1_RED_097                 0x00000000 /* RWC-V */
#define NV_PGRAPH_SPECFOGFACTOR1_ALPHA                        31:24 /* RWXUF */
#define NV_PGRAPH_SPECFOGFACTOR1_ALPHA_097               0x00000000 /* RWC-V */
#define NV_PGRAPH_SURFACECLIPX                           0x004019B4 /* RW-4R */
#define NV_PGRAPH_SURFACECLIPX_BUNDLE                    0x0000006D /* ----B */
#define NV_PGRAPH_SURFACECLIPX_X                               15:0 /* RWXUF */
#define NV_PGRAPH_SURFACECLIPX_X_097                     0x00000000 /* RWC-V */
#define NV_PGRAPH_SURFACECLIPX_WIDTH                          31:16 /* RWXUF */
#define NV_PGRAPH_SURFACECLIPX_WIDTH_097                 0x00000000 /* RWC-V */
#define NV_PGRAPH_SURFACECLIPY                           0x004019B8 /* RW-4R */
#define NV_PGRAPH_SURFACECLIPY_BUNDLE                    0x0000006E /* ----B */
#define NV_PGRAPH_SURFACECLIPY_Y                               15:0 /* RWXUF */
#define NV_PGRAPH_SURFACECLIPY_Y_097                     0x00000000 /* RWC-V */
#define NV_PGRAPH_SURFACECLIPY_HEIGHT                         31:16 /* RWXUF */
#define NV_PGRAPH_SURFACECLIPY_HEIGHT_097                0x00000000 /* RWC-V */
#define NV_PGRAPH_TEXADDRESS0                            0x004019BC /* RW-4R */
#define NV_PGRAPH_TEXADDRESS0_BUNDLE                     0x0000006F /* ----B */
#define NV_PGRAPH_TEXADDRESS0_ADDRU                             2:0 /* RWXVF */
#define NV_PGRAPH_TEXADDRESS0_ADDRU_WRAP                 0x00000001 /* RW--V */
#define NV_PGRAPH_TEXADDRESS0_ADDRU_MIRROR               0x00000002 /* RW--V */
#define NV_PGRAPH_TEXADDRESS0_ADDRU_CLAMP_TO_EDGE        0x00000003 /* RW--V */
#define NV_PGRAPH_TEXADDRESS0_ADDRU_BORDER               0x00000004 /* RW--V */
#define NV_PGRAPH_TEXADDRESS0_ADDRU_CLAMP_OGL            0x00000005 /* RW--V */
#define NV_PGRAPH_TEXADDRESS0_ADDRU_097                  0x00000003 /* RWC-V */
#define NV_PGRAPH_TEXADDRESS0_WRAP_U                            4:4 /* RWXVF */
#define NV_PGRAPH_TEXADDRESS0_WRAP_U_FALSE               0x00000000 /* RW--V */
#define NV_PGRAPH_TEXADDRESS0_WRAP_U_TRUE                0x00000001 /* RW--V */
#define NV_PGRAPH_TEXADDRESS0_WRAP_U_097                 0x00000000 /* RWC-V */
#define NV_PGRAPH_TEXADDRESS0_ADDRV                            10:8 /* RWXVF */
#define NV_PGRAPH_TEXADDRESS0_ADDRV_WRAP                 0x00000001 /* RW--V */
#define NV_PGRAPH_TEXADDRESS0_ADDRV_MIRROR               0x00000002 /* RW--V */
#define NV_PGRAPH_TEXADDRESS0_ADDRV_CLAMP_TO_EDGE        0x00000003 /* RW--V */
#define NV_PGRAPH_TEXADDRESS0_ADDRV_BORDER               0x00000004 /* RW--V */
#define NV_PGRAPH_TEXADDRESS0_ADDRV_CLAMP_OGL            0x00000005 /* RW--V */
#define NV_PGRAPH_TEXADDRESS0_ADDRV_097                  0x00000003 /* RWC-V */
#define NV_PGRAPH_TEXADDRESS0_WRAP_V                          12:12 /* RWXVF */
#define NV_PGRAPH_TEXADDRESS0_WRAP_V_FALSE               0x00000000 /* RW--V */
#define NV_PGRAPH_TEXADDRESS0_WRAP_V_TRUE                0x00000001 /* RW--V */
#define NV_PGRAPH_TEXADDRESS0_WRAP_V_097                 0x00000000 /* RWC-V */
#define NV_PGRAPH_TEXADDRESS0_ADDRP                           18:16 /* RWXVF */
#define NV_PGRAPH_TEXADDRESS0_ADDRP_WRAP                 0x00000001 /* RW--V */
#define NV_PGRAPH_TEXADDRESS0_ADDRP_MIRROR               0x00000002 /* RW--V */
#define NV_PGRAPH_TEXADDRESS0_ADDRP_CLAMP_TO_EDGE        0x00000003 /* RW--V */
#define NV_PGRAPH_TEXADDRESS0_ADDRP_BORDER               0x00000004 /* RW--V */
#define NV_PGRAPH_TEXADDRESS0_ADDRP_CLAMP_OGL            0x00000005 /* RW--V */
#define NV_PGRAPH_TEXADDRESS0_ADDRP_097                  0x00000003 /* RWC-V */
#define NV_PGRAPH_TEXADDRESS0_WRAP_P                          20:20 /* RWXVF */
#define NV_PGRAPH_TEXADDRESS0_WRAP_P_FALSE               0x00000000 /* RW--V */
#define NV_PGRAPH_TEXADDRESS0_WRAP_P_TRUE                0x00000001 /* RW--V */
#define NV_PGRAPH_TEXADDRESS0_WRAP_P_097                 0x00000000 /* RWC-V */
#define NV_PGRAPH_TEXADDRESS0_WRAP_Q                          24:24 /* RWXVF */
#define NV_PGRAPH_TEXADDRESS0_WRAP_Q_FALSE               0x00000000 /* RW--V */
#define NV_PGRAPH_TEXADDRESS0_WRAP_Q_TRUE                0x00000001 /* RW--V */
#define NV_PGRAPH_TEXADDRESS0_WRAP_Q_097                 0x00000000 /* RWC-V */
#define NV_PGRAPH_TEXADDRESS1                            0x004019C0 /* RW-4R */
#define NV_PGRAPH_TEXADDRESS1_BUNDLE                     0x00000070 /* ----B */
#define NV_PGRAPH_TEXADDRESS1_ADDRU                             2:0 /* RWXVF */
#define NV_PGRAPH_TEXADDRESS1_ADDRU_WRAP                 0x00000001 /* RW--V */
#define NV_PGRAPH_TEXADDRESS1_ADDRU_MIRROR               0x00000002 /* RW--V */
#define NV_PGRAPH_TEXADDRESS1_ADDRU_CLAMP_TO_EDGE        0x00000003 /* RW--V */
#define NV_PGRAPH_TEXADDRESS1_ADDRU_BORDER               0x00000004 /* RW--V */
#define NV_PGRAPH_TEXADDRESS1_ADDRU_CLAMP_OGL            0x00000005 /* RW--V */
#define NV_PGRAPH_TEXADDRESS1_ADDRU_097                  0x00000003 /* RWC-V */
#define NV_PGRAPH_TEXADDRESS1_WRAP_U                            4:4 /* RWXVF */
#define NV_PGRAPH_TEXADDRESS1_WRAP_U_FALSE               0x00000000 /* RW--V */
#define NV_PGRAPH_TEXADDRESS1_WRAP_U_TRUE                0x00000001 /* RW--V */
#define NV_PGRAPH_TEXADDRESS1_WRAP_U_097                 0x00000000 /* RWC-V */
#define NV_PGRAPH_TEXADDRESS1_ADDRV                            10:8 /* RWXVF */
#define NV_PGRAPH_TEXADDRESS1_ADDRV_WRAP                 0x00000001 /* RW--V */
#define NV_PGRAPH_TEXADDRESS1_ADDRV_MIRROR               0x00000002 /* RW--V */
#define NV_PGRAPH_TEXADDRESS1_ADDRV_CLAMP_TO_EDGE        0x00000003 /* RW--V */
#define NV_PGRAPH_TEXADDRESS1_ADDRV_BORDER               0x00000004 /* RW--V */
#define NV_PGRAPH_TEXADDRESS1_ADDRV_CLAMP_OGL            0x00000005 /* RW--V */
#define NV_PGRAPH_TEXADDRESS1_ADDRV_097                  0x00000003 /* RWC-V */
#define NV_PGRAPH_TEXADDRESS1_WRAP_V                          12:12 /* RWXVF */
#define NV_PGRAPH_TEXADDRESS1_WRAP_V_FALSE               0x00000000 /* RW--V */
#define NV_PGRAPH_TEXADDRESS1_WRAP_V_TRUE                0x00000001 /* RW--V */
#define NV_PGRAPH_TEXADDRESS1_WRAP_V_097                 0x00000000 /* RWC-V */
#define NV_PGRAPH_TEXADDRESS1_ADDRP                           18:16 /* RWXVF */
#define NV_PGRAPH_TEXADDRESS1_ADDRP_WRAP                 0x00000001 /* RW--V */
#define NV_PGRAPH_TEXADDRESS1_ADDRP_MIRROR               0x00000002 /* RW--V */
#define NV_PGRAPH_TEXADDRESS1_ADDRP_CLAMP_TO_EDGE        0x00000003 /* RW--V */
#define NV_PGRAPH_TEXADDRESS1_ADDRP_BORDER               0x00000004 /* RW--V */
#define NV_PGRAPH_TEXADDRESS1_ADDRP_CLAMP_OGL            0x00000005 /* RW--V */
#define NV_PGRAPH_TEXADDRESS1_ADDRP_097                  0x00000003 /* RWC-V */
#define NV_PGRAPH_TEXADDRESS1_WRAP_P                          20:20 /* RWXVF */
#define NV_PGRAPH_TEXADDRESS1_WRAP_P_FALSE               0x00000000 /* RW--V */
#define NV_PGRAPH_TEXADDRESS1_WRAP_P_TRUE                0x00000001 /* RW--V */
#define NV_PGRAPH_TEXADDRESS1_WRAP_P_097                 0x00000000 /* RWC-V */
#define NV_PGRAPH_TEXADDRESS1_WRAP_Q                          24:24 /* RWXVF */
#define NV_PGRAPH_TEXADDRESS1_WRAP_Q_FALSE               0x00000000 /* RW--V */
#define NV_PGRAPH_TEXADDRESS1_WRAP_Q_TRUE                0x00000001 /* RW--V */
#define NV_PGRAPH_TEXADDRESS1_WRAP_Q_097                 0x00000000 /* RWC-V */
#define NV_PGRAPH_TEXADDRESS2                            0x004019C4 /* RW-4R */
#define NV_PGRAPH_TEXADDRESS2_BUNDLE                     0x00000071 /* ----B */
#define NV_PGRAPH_TEXADDRESS2_ADDRU                             2:0 /* RWXVF */
#define NV_PGRAPH_TEXADDRESS2_ADDRU_WRAP                 0x00000001 /* RW--V */
#define NV_PGRAPH_TEXADDRESS2_ADDRU_MIRROR               0x00000002 /* RW--V */
#define NV_PGRAPH_TEXADDRESS2_ADDRU_CLAMP_TO_EDGE        0x00000003 /* RW--V */
#define NV_PGRAPH_TEXADDRESS2_ADDRU_BORDER               0x00000004 /* RW--V */
#define NV_PGRAPH_TEXADDRESS2_ADDRU_CLAMP_OGL            0x00000005 /* RW--V */
#define NV_PGRAPH_TEXADDRESS2_ADDRU_097                  0x00000003 /* RWC-V */
#define NV_PGRAPH_TEXADDRESS2_WRAP_U                            4:4 /* RWXVF */
#define NV_PGRAPH_TEXADDRESS2_WRAP_U_FALSE               0x00000000 /* RW--V */
#define NV_PGRAPH_TEXADDRESS2_WRAP_U_TRUE                0x00000001 /* RW--V */
#define NV_PGRAPH_TEXADDRESS2_WRAP_U_097                 0x00000000 /* RWC-V */
#define NV_PGRAPH_TEXADDRESS2_ADDRV                            10:8 /* RWXVF */
#define NV_PGRAPH_TEXADDRESS2_ADDRV_WRAP                 0x00000001 /* RW--V */
#define NV_PGRAPH_TEXADDRESS2_ADDRV_MIRROR               0x00000002 /* RW--V */
#define NV_PGRAPH_TEXADDRESS2_ADDRV_CLAMP_TO_EDGE        0x00000003 /* RW--V */
#define NV_PGRAPH_TEXADDRESS2_ADDRV_BORDER               0x00000004 /* RW--V */
#define NV_PGRAPH_TEXADDRESS2_ADDRV_CLAMP_OGL            0x00000005 /* RW--V */
#define NV_PGRAPH_TEXADDRESS2_ADDRV_097                  0x00000003 /* RWC-V */
#define NV_PGRAPH_TEXADDRESS2_WRAP_V                          12:12 /* RWXVF */
#define NV_PGRAPH_TEXADDRESS2_WRAP_V_FALSE               0x00000000 /* RW--V */
#define NV_PGRAPH_TEXADDRESS2_WRAP_V_TRUE                0x00000001 /* RW--V */
#define NV_PGRAPH_TEXADDRESS2_WRAP_V_097                 0x00000000 /* RWC-V */
#define NV_PGRAPH_TEXADDRESS2_ADDRP                           18:16 /* RWXVF */
#define NV_PGRAPH_TEXADDRESS2_ADDRP_WRAP                 0x00000001 /* RW--V */
#define NV_PGRAPH_TEXADDRESS2_ADDRP_MIRROR               0x00000002 /* RW--V */
#define NV_PGRAPH_TEXADDRESS2_ADDRP_CLAMP_TO_EDGE        0x00000003 /* RW--V */
#define NV_PGRAPH_TEXADDRESS2_ADDRP_BORDER               0x00000004 /* RW--V */
#define NV_PGRAPH_TEXADDRESS2_ADDRP_CLAMP_OGL            0x00000005 /* RW--V */
#define NV_PGRAPH_TEXADDRESS2_ADDRP_097                  0x00000003 /* RWC-V */
#define NV_PGRAPH_TEXADDRESS2_WRAP_P                          20:20 /* RWXVF */
#define NV_PGRAPH_TEXADDRESS2_WRAP_P_FALSE               0x00000000 /* RW--V */
#define NV_PGRAPH_TEXADDRESS2_WRAP_P_TRUE                0x00000001 /* RW--V */
#define NV_PGRAPH_TEXADDRESS2_WRAP_P_097                 0x00000000 /* RWC-V */
#define NV_PGRAPH_TEXADDRESS2_WRAP_Q                          24:24 /* RWXVF */
#define NV_PGRAPH_TEXADDRESS2_WRAP_Q_FALSE               0x00000000 /* RW--V */
#define NV_PGRAPH_TEXADDRESS2_WRAP_Q_TRUE                0x00000001 /* RW--V */
#define NV_PGRAPH_TEXADDRESS2_WRAP_Q_097                 0x00000000 /* RWC-V */
#define NV_PGRAPH_TEXADDRESS3                            0x004019C8 /* RW-4R */
#define NV_PGRAPH_TEXADDRESS3_BUNDLE                     0x00000072 /* ----B */
#define NV_PGRAPH_TEXADDRESS3_ADDRU                             2:0 /* RWXVF */
#define NV_PGRAPH_TEXADDRESS3_ADDRU_WRAP                 0x00000001 /* RW--V */
#define NV_PGRAPH_TEXADDRESS3_ADDRU_MIRROR               0x00000002 /* RW--V */
#define NV_PGRAPH_TEXADDRESS3_ADDRU_CLAMP_TO_EDGE        0x00000003 /* RW--V */
#define NV_PGRAPH_TEXADDRESS3_ADDRU_BORDER               0x00000004 /* RW--V */
#define NV_PGRAPH_TEXADDRESS3_ADDRU_CLAMP_OGL            0x00000005 /* RW--V */
#define NV_PGRAPH_TEXADDRESS3_ADDRU_097                  0x00000003 /* RWC-V */
#define NV_PGRAPH_TEXADDRESS3_WRAP_U                            4:4 /* RWXVF */
#define NV_PGRAPH_TEXADDRESS3_WRAP_U_FALSE               0x00000000 /* RW--V */
#define NV_PGRAPH_TEXADDRESS3_WRAP_U_TRUE                0x00000001 /* RW--V */
#define NV_PGRAPH_TEXADDRESS3_WRAP_U_097                 0x00000000 /* RWC-V */
#define NV_PGRAPH_TEXADDRESS3_ADDRV                            10:8 /* RWXVF */
#define NV_PGRAPH_TEXADDRESS3_ADDRV_WRAP                 0x00000001 /* RW--V */
#define NV_PGRAPH_TEXADDRESS3_ADDRV_MIRROR               0x00000002 /* RW--V */
#define NV_PGRAPH_TEXADDRESS3_ADDRV_CLAMP_TO_EDGE        0x00000003 /* RW--V */
#define NV_PGRAPH_TEXADDRESS3_ADDRV_BORDER               0x00000004 /* RW--V */
#define NV_PGRAPH_TEXADDRESS3_ADDRV_CLAMP_OGL            0x00000005 /* RW--V */
#define NV_PGRAPH_TEXADDRESS3_ADDRV_097                  0x00000003 /* RWC-V */
#define NV_PGRAPH_TEXADDRESS3_WRAP_V                          12:12 /* RWXVF */
#define NV_PGRAPH_TEXADDRESS3_WRAP_V_FALSE               0x00000000 /* RW--V */
#define NV_PGRAPH_TEXADDRESS3_WRAP_V_TRUE                0x00000001 /* RW--V */
#define NV_PGRAPH_TEXADDRESS3_WRAP_V_097                 0x00000000 /* RWC-V */
#define NV_PGRAPH_TEXADDRESS3_ADDRP                           18:16 /* RWXVF */
#define NV_PGRAPH_TEXADDRESS3_ADDRP_WRAP                 0x00000001 /* RW--V */
#define NV_PGRAPH_TEXADDRESS3_ADDRP_MIRROR               0x00000002 /* RW--V */
#define NV_PGRAPH_TEXADDRESS3_ADDRP_CLAMP_TO_EDGE        0x00000003 /* RW--V */
#define NV_PGRAPH_TEXADDRESS3_ADDRP_BORDER               0x00000004 /* RW--V */
#define NV_PGRAPH_TEXADDRESS3_ADDRP_CLAMP_OGL            0x00000005 /* RW--V */
#define NV_PGRAPH_TEXADDRESS3_ADDRP_097                  0x00000003 /* RWC-V */
#define NV_PGRAPH_TEXADDRESS3_WRAP_P                          20:20 /* RWXVF */
#define NV_PGRAPH_TEXADDRESS3_WRAP_P_FALSE               0x00000000 /* RW--V */
#define NV_PGRAPH_TEXADDRESS3_WRAP_P_TRUE                0x00000001 /* RW--V */
#define NV_PGRAPH_TEXADDRESS3_WRAP_P_097                 0x00000000 /* RWC-V */
#define NV_PGRAPH_TEXADDRESS3_WRAP_Q                          24:24 /* RWXVF */
#define NV_PGRAPH_TEXADDRESS3_WRAP_Q_FALSE               0x00000000 /* RW--V */
#define NV_PGRAPH_TEXADDRESS3_WRAP_Q_TRUE                0x00000001 /* RW--V */
#define NV_PGRAPH_TEXADDRESS3_WRAP_Q_097                 0x00000000 /* RWC-V */
#define NV_PGRAPH_TEXCTL0_0                              0x004019CC /* RW-4R */
#define NV_PGRAPH_TEXCTL0_0_BUNDLE                       0x00000073 /* ----B */
#define NV_PGRAPH_TEXCTL0_0_ENABLE                            30:30 /* RWXVF */
#define NV_PGRAPH_TEXCTL0_0_ENABLE_FALSE                 0x00000000 /* RW--V */
#define NV_PGRAPH_TEXCTL0_0_ENABLE_TRUE                  0x00000001 /* RW--V */
#define NV_PGRAPH_TEXCTL0_0_ENABLE_097                   0x00000000 /* RWC-V */
#define NV_PGRAPH_TEXCTL0_0_MIN_LOD_CLAMP                     29:18 /* RWXUF */
#define NV_PGRAPH_TEXCTL0_0_MIN_LOD_CLAMP_097            0x00000000 /* RWC-V */
#define NV_PGRAPH_TEXCTL0_0_MAX_LOD_CLAMP                      17:6 /* RWXUF */
#define NV_PGRAPH_TEXCTL0_0_MAX_LOD_CLAMP_097            0x00000000 /* RWC-V */
#define NV_PGRAPH_TEXCTL0_0_LOG_MAX_ANISO                       5:4 /* RWXVF */
#define NV_PGRAPH_TEXCTL0_0_LOG_MAX_ANISO_0              0x00000000 /* RW--V */
#define NV_PGRAPH_TEXCTL0_0_LOG_MAX_ANISO_1              0x00000001 /* RW--V */
#define NV_PGRAPH_TEXCTL0_0_LOG_MAX_ANISO_2              0x00000002 /* RW--V */
#define NV_PGRAPH_TEXCTL0_0_LOG_MAX_ANISO_3              0x00000003 /* RW--V */
#define NV_PGRAPH_TEXCTL0_0_LOG_MAX_ANISO_097            0x00000000 /* RWC-V */
#define NV_PGRAPH_TEXCTL0_0_IMAGEFIELDEN                        3:3 /* RWXVF */
#define NV_PGRAPH_TEXCTL0_0_IMAGEFIELDEN_FALSE           0x00000000 /* RW--V */
#define NV_PGRAPH_TEXCTL0_0_IMAGEFIELDEN_TRUE            0x00000001 /* RW--V */
#define NV_PGRAPH_TEXCTL0_0_IMAGEFIELDEN_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_TEXCTL0_0_ALPHAKILLEN                         2:2 /* RWXVF */
#define NV_PGRAPH_TEXCTL0_0_ALPHAKILLEN_FALSE            0x00000000 /* RW--V */
#define NV_PGRAPH_TEXCTL0_0_ALPHAKILLEN_TRUE             0x00000001 /* RW--V */
#define NV_PGRAPH_TEXCTL0_0_ALPHAKILLEN_097              0x00000000 /* RWC-V */
#define NV_PGRAPH_TEXCTL0_0_COLORKEYOP                          1:0 /* RWXVF */
#define NV_PGRAPH_TEXCTL0_0_COLORKEYOP_FALSE             0x00000000 /* RW--V */
#define NV_PGRAPH_TEXCTL0_0_COLORKEYOP_ALPHA             0x00000001 /* RW--V */
#define NV_PGRAPH_TEXCTL0_0_COLORKEYOP_RGBA              0x00000002 /* RW--V */
#define NV_PGRAPH_TEXCTL0_0_COLORKEYOP_KILL              0x00000003 /* RW--V */
#define NV_PGRAPH_TEXCTL0_0_COLORKEYOP_097               0x00000000 /* RWC-V */
#define NV_PGRAPH_TEXCTL0_1                              0x004019D0 /* RW-4R */
#define NV_PGRAPH_TEXCTL0_1_BUNDLE                       0x00000074 /* ----B */
#define NV_PGRAPH_TEXCTL0_1_ENABLE                            30:30 /* RWXVF */
#define NV_PGRAPH_TEXCTL0_1_ENABLE_FALSE                 0x00000000 /* RW--V */
#define NV_PGRAPH_TEXCTL0_1_ENABLE_TRUE                  0x00000001 /* RW--V */
#define NV_PGRAPH_TEXCTL0_1_ENABLE_097                   0x00000000 /* RWC-V */
#define NV_PGRAPH_TEXCTL0_1_MIN_LOD_CLAMP                     29:18 /* RWXUF */
#define NV_PGRAPH_TEXCTL0_1_MIN_LOD_CLAMP_097            0x00000000 /* RWC-V */
#define NV_PGRAPH_TEXCTL0_1_MAX_LOD_CLAMP                      17:6 /* RWXUF */
#define NV_PGRAPH_TEXCTL0_1_MAX_LOD_CLAMP_097            0x00000000 /* RWC-V */
#define NV_PGRAPH_TEXCTL0_1_LOG_MAX_ANISO                       5:4 /* RWXVF */
#define NV_PGRAPH_TEXCTL0_1_LOG_MAX_ANISO_0              0x00000000 /* RW--V */
#define NV_PGRAPH_TEXCTL0_1_LOG_MAX_ANISO_1              0x00000001 /* RW--V */
#define NV_PGRAPH_TEXCTL0_1_LOG_MAX_ANISO_2              0x00000002 /* RW--V */
#define NV_PGRAPH_TEXCTL0_1_LOG_MAX_ANISO_3              0x00000003 /* RW--V */
#define NV_PGRAPH_TEXCTL0_1_LOG_MAX_ANISO_097            0x00000000 /* RWC-V */
#define NV_PGRAPH_TEXCTL0_1_IMAGEFIELDEN                        3:3 /* RWXVF */
#define NV_PGRAPH_TEXCTL0_1_IMAGEFIELDEN_FALSE           0x00000000 /* RW--V */
#define NV_PGRAPH_TEXCTL0_1_IMAGEFIELDEN_TRUE            0x00000001 /* RW--V */
#define NV_PGRAPH_TEXCTL0_1_IMAGEFIELDEN_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_TEXCTL0_1_ALPHAKILLEN                         2:2 /* RWXVF */
#define NV_PGRAPH_TEXCTL0_1_ALPHAKILLEN_FALSE            0x00000000 /* RW--V */
#define NV_PGRAPH_TEXCTL0_1_ALPHAKILLEN_TRUE             0x00000001 /* RW--V */
#define NV_PGRAPH_TEXCTL0_1_ALPHAKILLEN_097              0x00000000 /* RWC-V */
#define NV_PGRAPH_TEXCTL0_1_COLORKEYOP                          1:0 /* RWXVF */
#define NV_PGRAPH_TEXCTL0_1_COLORKEYOP_FALSE             0x00000000 /* RW--V */
#define NV_PGRAPH_TEXCTL0_1_COLORKEYOP_ALPHA             0x00000001 /* RW--V */
#define NV_PGRAPH_TEXCTL0_1_COLORKEYOP_RGBA              0x00000002 /* RW--V */
#define NV_PGRAPH_TEXCTL0_1_COLORKEYOP_KILL              0x00000003 /* RW--V */
#define NV_PGRAPH_TEXCTL0_1_COLORKEYOP_097               0x00000000 /* RWC-V */
#define NV_PGRAPH_TEXCTL0_2                              0x004019D4 /* RW-4R */
#define NV_PGRAPH_TEXCTL0_2_BUNDLE                       0x00000075 /* ----B */
#define NV_PGRAPH_TEXCTL0_2_ENABLE                            30:30 /* RWXVF */
#define NV_PGRAPH_TEXCTL0_2_ENABLE_FALSE                 0x00000000 /* RW--V */
#define NV_PGRAPH_TEXCTL0_2_ENABLE_TRUE                  0x00000001 /* RW--V */
#define NV_PGRAPH_TEXCTL0_2_ENABLE_097                   0x00000000 /* RWC-V */
#define NV_PGRAPH_TEXCTL0_2_MIN_LOD_CLAMP                     29:18 /* RWXUF */
#define NV_PGRAPH_TEXCTL0_2_MIN_LOD_CLAMP_097            0x00000000 /* RWC-V */
#define NV_PGRAPH_TEXCTL0_2_MAX_LOD_CLAMP                      17:6 /* RWXUF */
#define NV_PGRAPH_TEXCTL0_2_MAX_LOD_CLAMP_097            0x00000000 /* RWC-V */
#define NV_PGRAPH_TEXCTL0_2_LOG_MAX_ANISO                       5:4 /* RWXVF */
#define NV_PGRAPH_TEXCTL0_2_LOG_MAX_ANISO_0              0x00000000 /* RW--V */
#define NV_PGRAPH_TEXCTL0_2_LOG_MAX_ANISO_1              0x00000001 /* RW--V */
#define NV_PGRAPH_TEXCTL0_2_LOG_MAX_ANISO_2              0x00000002 /* RW--V */
#define NV_PGRAPH_TEXCTL0_2_LOG_MAX_ANISO_3              0x00000003 /* RW--V */
#define NV_PGRAPH_TEXCTL0_2_LOG_MAX_ANISO_097            0x00000000 /* RWC-V */
#define NV_PGRAPH_TEXCTL0_2_IMAGEFIELDEN                        3:3 /* RWXVF */
#define NV_PGRAPH_TEXCTL0_2_IMAGEFIELDEN_FALSE           0x00000000 /* RW--V */
#define NV_PGRAPH_TEXCTL0_2_IMAGEFIELDEN_TRUE            0x00000001 /* RW--V */
#define NV_PGRAPH_TEXCTL0_2_IMAGEFIELDEN_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_TEXCTL0_2_ALPHAKILLEN                         2:2 /* RWXVF */
#define NV_PGRAPH_TEXCTL0_2_ALPHAKILLEN_FALSE            0x00000000 /* RW--V */
#define NV_PGRAPH_TEXCTL0_2_ALPHAKILLEN_TRUE             0x00000001 /* RW--V */
#define NV_PGRAPH_TEXCTL0_2_ALPHAKILLEN_097              0x00000000 /* RWC-V */
#define NV_PGRAPH_TEXCTL0_2_COLORKEYOP                          1:0 /* RWXVF */
#define NV_PGRAPH_TEXCTL0_2_COLORKEYOP_FALSE             0x00000000 /* RW--V */
#define NV_PGRAPH_TEXCTL0_2_COLORKEYOP_ALPHA             0x00000001 /* RW--V */
#define NV_PGRAPH_TEXCTL0_2_COLORKEYOP_RGBA              0x00000002 /* RW--V */
#define NV_PGRAPH_TEXCTL0_2_COLORKEYOP_KILL              0x00000003 /* RW--V */
#define NV_PGRAPH_TEXCTL0_2_COLORKEYOP_097               0x00000000 /* RWC-V */
#define NV_PGRAPH_TEXCTL0_3                              0x004019D8 /* RW-4R */
#define NV_PGRAPH_TEXCTL0_3_BUNDLE                       0x00000076 /* ----B */
#define NV_PGRAPH_TEXCTL0_3_ENABLE                            30:30 /* RWXVF */
#define NV_PGRAPH_TEXCTL0_3_ENABLE_FALSE                 0x00000000 /* RW--V */
#define NV_PGRAPH_TEXCTL0_3_ENABLE_TRUE                  0x00000001 /* RW--V */
#define NV_PGRAPH_TEXCTL0_3_ENABLE_097                   0x00000000 /* RWC-V */
#define NV_PGRAPH_TEXCTL0_3_MIN_LOD_CLAMP                     29:18 /* RWXUF */
#define NV_PGRAPH_TEXCTL0_3_MIN_LOD_CLAMP_097            0x00000000 /* RWC-V */
#define NV_PGRAPH_TEXCTL0_3_MAX_LOD_CLAMP                      17:6 /* RWXUF */
#define NV_PGRAPH_TEXCTL0_3_MAX_LOD_CLAMP_097            0x00000000 /* RWC-V */
#define NV_PGRAPH_TEXCTL0_3_LOG_MAX_ANISO                       5:4 /* RWXVF */
#define NV_PGRAPH_TEXCTL0_3_LOG_MAX_ANISO_0              0x00000000 /* RW--V */
#define NV_PGRAPH_TEXCTL0_3_LOG_MAX_ANISO_1              0x00000001 /* RW--V */
#define NV_PGRAPH_TEXCTL0_3_LOG_MAX_ANISO_2              0x00000002 /* RW--V */
#define NV_PGRAPH_TEXCTL0_3_LOG_MAX_ANISO_3              0x00000003 /* RW--V */
#define NV_PGRAPH_TEXCTL0_3_LOG_MAX_ANISO_097            0x00000000 /* RWC-V */
#define NV_PGRAPH_TEXCTL0_3_IMAGEFIELDEN                        3:3 /* RWXVF */
#define NV_PGRAPH_TEXCTL0_3_IMAGEFIELDEN_FALSE           0x00000000 /* RW--V */
#define NV_PGRAPH_TEXCTL0_3_IMAGEFIELDEN_TRUE            0x00000001 /* RW--V */
#define NV_PGRAPH_TEXCTL0_3_IMAGEFIELDEN_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_TEXCTL0_3_ALPHAKILLEN                         2:2 /* RWXVF */
#define NV_PGRAPH_TEXCTL0_3_ALPHAKILLEN_FALSE            0x00000000 /* RW--V */
#define NV_PGRAPH_TEXCTL0_3_ALPHAKILLEN_TRUE             0x00000001 /* RW--V */
#define NV_PGRAPH_TEXCTL0_3_ALPHAKILLEN_097              0x00000000 /* RWC-V */
#define NV_PGRAPH_TEXCTL0_3_COLORKEYOP                          1:0 /* RWXVF */
#define NV_PGRAPH_TEXCTL0_3_COLORKEYOP_FALSE             0x00000000 /* RW--V */
#define NV_PGRAPH_TEXCTL0_3_COLORKEYOP_ALPHA             0x00000001 /* RW--V */
#define NV_PGRAPH_TEXCTL0_3_COLORKEYOP_RGBA              0x00000002 /* RW--V */
#define NV_PGRAPH_TEXCTL0_3_COLORKEYOP_KILL              0x00000003 /* RW--V */
#define NV_PGRAPH_TEXCTL0_3_COLORKEYOP_097               0x00000000 /* RWC-V */
#define NV_PGRAPH_TEXCTL1_0                              0x004019DC /* RW-4R */
#define NV_PGRAPH_TEXCTL1_0_BUNDLE                       0x00000077 /* ----B */
#define NV_PGRAPH_TEXCTL1_0_IMAGE_PITCH                       31:16 /* RWXUF */
#define NV_PGRAPH_TEXCTL1_0_IMAGE_PITCH_097              0x00000008 /* RWC-V */
#define NV_PGRAPH_TEXCTL1_1                              0x004019E0 /* RW-4R */
#define NV_PGRAPH_TEXCTL1_1_BUNDLE                       0x00000078 /* ----B */
#define NV_PGRAPH_TEXCTL1_1_IMAGE_PITCH                       31:16 /* RWXUF */
#define NV_PGRAPH_TEXCTL1_1_IMAGE_PITCH_097              0x00000008 /* RWC-V */
#define NV_PGRAPH_TEXCTL1_2                              0x004019E4 /* RW-4R */
#define NV_PGRAPH_TEXCTL1_2_BUNDLE                       0x00000079 /* ----B */
#define NV_PGRAPH_TEXCTL1_2_IMAGE_PITCH                       31:16 /* RWXUF */
#define NV_PGRAPH_TEXCTL1_2_IMAGE_PITCH_097              0x00000008 /* RWC-V */
#define NV_PGRAPH_TEXCTL1_3                              0x004019E8 /* RW-4R */
#define NV_PGRAPH_TEXCTL1_3_BUNDLE                       0x0000007A /* ----B */
#define NV_PGRAPH_TEXCTL1_3_IMAGE_PITCH                       31:16 /* RWXUF */
#define NV_PGRAPH_TEXCTL1_3_IMAGE_PITCH_097              0x00000008 /* RWC-V */
#define NV_PGRAPH_TEXCTL2_0                              0x004019EC /* RW-4R */
#define NV_PGRAPH_TEXCTL2_0_BUNDLE                       0x0000007B /* ----B */
#define NV_PGRAPH_TEXCTL2_0_PERTURB_DU                         11:0 /* RWXSF */
#define NV_PGRAPH_TEXCTL2_0_PERTURB_DU_097               0x00000000 /* RWC-V */
#define NV_PGRAPH_TEXCTL2_0_PERTURB_DV                        23:12 /* RWXSF */
#define NV_PGRAPH_TEXCTL2_0_PERTURB_DV_097               0x00000000 /* RWC-V */
#define NV_PGRAPH_TEXCTL2_0_IMAGE_LODF                        31:24 /* RWXUF */
#define NV_PGRAPH_TEXCTL2_0_IMAGE_LODF_097               0x00000000 /* RWC-V */
#define NV_PGRAPH_TEXCTL2_1                              0x004019F0 /* RW-4R */
#define NV_PGRAPH_TEXCTL2_1_BUNDLE                       0x0000007C /* ----B */
#define NV_PGRAPH_TEXCTL2_1_PERTURB_DU                         11:0 /* RWXSF */
#define NV_PGRAPH_TEXCTL2_1_PERTURB_DU_097               0x00000000 /* RWC-V */
#define NV_PGRAPH_TEXCTL2_1_PERTURB_DV                        23:12 /* RWXSF */
#define NV_PGRAPH_TEXCTL2_1_PERTURB_DV_097               0x00000000 /* RWC-V */
#define NV_PGRAPH_TEXCTL2_1_IMAGE_LODF                        31:24 /* RWXUF */
#define NV_PGRAPH_TEXCTL2_1_IMAGE_LODF_097               0x00000000 /* RWC-V */
#define NV_PGRAPH_TEXFILTER0                             0x004019F4 /* RW-4R */
#define NV_PGRAPH_TEXFILTER0_BUNDLE                      0x0000007D /* ----B */
#define NV_PGRAPH_TEXFILTER0_MIPMAP_LOD_BIAS                   12:0 /* RWXSF */
#define NV_PGRAPH_TEXFILTER0_MIPMAP_LOD_BIAS_097         0x00000000 /* RWC-V */
#define NV_PGRAPH_TEXFILTER0_CONVOLUTION_KERNEL               15:13 /* RWXVF */
#define NV_PGRAPH_TEXFILTER0_CONVOLUTION_KERNEL_QUINCUNX 0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFILTER0_CONVOLUTION_KERNEL_GAUSSIAN_3 0x00000002 /* RW--V */
#define NV_PGRAPH_TEXFILTER0_CONVOLUTION_KERNEL_097      0x00000001 /* RWC-V */
#define NV_PGRAPH_TEXFILTER0_MIN                              21:16 /* RWXVF */
#define NV_PGRAPH_TEXFILTER0_MIN_BOX_LOD0                0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFILTER0_MIN_TENT_LOD0               0x00000002 /* RW--V */
#define NV_PGRAPH_TEXFILTER0_MIN_BOX_NEARESTLOD          0x00000003 /* RW--V */
#define NV_PGRAPH_TEXFILTER0_MIN_TENT_NEARESTLOD         0x00000004 /* RW--V */
#define NV_PGRAPH_TEXFILTER0_MIN_BOX_TENT_LOD            0x00000005 /* RW--V */
#define NV_PGRAPH_TEXFILTER0_MIN_TENT_TENT_LOD           0x00000006 /* RW--V */
#define NV_PGRAPH_TEXFILTER0_MIN_CONVOLUTION_2D_LOD0     0x00000007 /* RW--V */
#define NV_PGRAPH_TEXFILTER0_MIN_097                     0x00000001 /* RWC-V */
#define NV_PGRAPH_TEXFILTER0_MAG                              27:24 /* RWXVF */
#define NV_PGRAPH_TEXFILTER0_MAG_BOX_LOD0                0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFILTER0_MAG_TENT_LOD0               0x00000002 /* RW--V */
#define NV_PGRAPH_TEXFILTER0_MAG_CONVOLUTION_2D_LOD0     0x00000004 /* RW--V */
#define NV_PGRAPH_TEXFILTER0_MAG_097                     0x00000001 /* RWC-V */
#define NV_PGRAPH_TEXFILTER0_ASIGNED                          28:28 /* RWXVF */
#define NV_PGRAPH_TEXFILTER0_ASIGNED_BIT_DISABLED        0x00000000 /* RW--V */
#define NV_PGRAPH_TEXFILTER0_ASIGNED_BIT_ENABLED         0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFILTER0_ASIGNED_097                 0x00000000 /* RWC-V */
#define NV_PGRAPH_TEXFILTER0_RSIGNED                          29:29 /* RWXVF */
#define NV_PGRAPH_TEXFILTER0_RSIGNED_BIT_DISABLED        0x00000000 /* RW--V */
#define NV_PGRAPH_TEXFILTER0_RSIGNED_BIT_ENABLED         0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFILTER0_RSIGNED_097                 0x00000000 /* RWC-V */
#define NV_PGRAPH_TEXFILTER0_GSIGNED                          30:30 /* RWXVF */
#define NV_PGRAPH_TEXFILTER0_GSIGNED_BIT_DISABLED        0x00000000 /* RW--V */
#define NV_PGRAPH_TEXFILTER0_GSIGNED_BIT_ENABLED         0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFILTER0_GSIGNED_097                 0x00000000 /* RWC-V */
#define NV_PGRAPH_TEXFILTER0_BSIGNED                          31:31 /* RWXVF */
#define NV_PGRAPH_TEXFILTER0_BSIGNED_BIT_DISABLED        0x00000000 /* RW--V */
#define NV_PGRAPH_TEXFILTER0_BSIGNED_BIT_ENABLED         0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFILTER0_BSIGNED_097                 0x00000000 /* RWC-V */
#define NV_PGRAPH_TEXFILTER1                             0x004019F8 /* RW-4R */
#define NV_PGRAPH_TEXFILTER1_BUNDLE                      0x0000007E /* ----B */
#define NV_PGRAPH_TEXFILTER1_MIPMAP_LOD_BIAS                   12:0 /* RWXSF */
#define NV_PGRAPH_TEXFILTER1_MIPMAP_LOD_BIAS_097         0x00000000 /* RWC-V */
#define NV_PGRAPH_TEXFILTER1_CONVOLUTION_KERNEL               15:13 /* RWXVF */
#define NV_PGRAPH_TEXFILTER1_CONVOLUTION_KERNEL_QUINCUNX 0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFILTER1_CONVOLUTION_KERNEL_GAUSSIAN_3 0x00000002 /* RW--V */
#define NV_PGRAPH_TEXFILTER1_CONVOLUTION_KERNEL_097      0x00000001 /* RWC-V */
#define NV_PGRAPH_TEXFILTER1_MIN                              21:16 /* RWXVF */
#define NV_PGRAPH_TEXFILTER1_MIN_BOX_LOD0                0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFILTER1_MIN_TENT_LOD0               0x00000002 /* RW--V */
#define NV_PGRAPH_TEXFILTER1_MIN_BOX_NEARESTLOD          0x00000003 /* RW--V */
#define NV_PGRAPH_TEXFILTER1_MIN_TENT_NEARESTLOD         0x00000004 /* RW--V */
#define NV_PGRAPH_TEXFILTER1_MIN_BOX_TENT_LOD            0x00000005 /* RW--V */
#define NV_PGRAPH_TEXFILTER1_MIN_TENT_TENT_LOD           0x00000006 /* RW--V */
#define NV_PGRAPH_TEXFILTER1_MIN_CONVOLUTION_2D_LOD0     0x00000007 /* RW--V */
#define NV_PGRAPH_TEXFILTER1_MIN_097                     0x00000001 /* RWC-V */
#define NV_PGRAPH_TEXFILTER1_MAG                              27:24 /* RWXVF */
#define NV_PGRAPH_TEXFILTER1_MAG_BOX_LOD0                0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFILTER1_MAG_TENT_LOD0               0x00000002 /* RW--V */
#define NV_PGRAPH_TEXFILTER1_MAG_CONVOLUTION_2D_LOD0     0x00000004 /* RW--V */
#define NV_PGRAPH_TEXFILTER1_MAG_097                     0x00000001 /* RWC-V */
#define NV_PGRAPH_TEXFILTER1_ASIGNED                          28:28 /* RWXVF */
#define NV_PGRAPH_TEXFILTER1_ASIGNED_BIT_DISABLED        0x00000000 /* RW--V */
#define NV_PGRAPH_TEXFILTER1_ASIGNED_BIT_ENABLED         0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFILTER1_ASIGNED_097                 0x00000000 /* RWC-V */
#define NV_PGRAPH_TEXFILTER1_RSIGNED                          29:29 /* RWXVF */
#define NV_PGRAPH_TEXFILTER1_RSIGNED_BIT_DISABLED        0x00000000 /* RW--V */
#define NV_PGRAPH_TEXFILTER1_RSIGNED_BIT_ENABLED         0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFILTER1_RSIGNED_097                 0x00000000 /* RWC-V */
#define NV_PGRAPH_TEXFILTER1_GSIGNED                          30:30 /* RWXVF */
#define NV_PGRAPH_TEXFILTER1_GSIGNED_BIT_DISABLED        0x00000000 /* RW--V */
#define NV_PGRAPH_TEXFILTER1_GSIGNED_BIT_ENABLED         0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFILTER1_GSIGNED_097                 0x00000000 /* RWC-V */
#define NV_PGRAPH_TEXFILTER1_BSIGNED                          31:31 /* RWXVF */
#define NV_PGRAPH_TEXFILTER1_BSIGNED_BIT_DISABLED        0x00000000 /* RW--V */
#define NV_PGRAPH_TEXFILTER1_BSIGNED_BIT_ENABLED         0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFILTER1_BSIGNED_097                 0x00000000 /* RWC-V */
#define NV_PGRAPH_TEXFILTER2                             0x004019FC /* RW-4R */
#define NV_PGRAPH_TEXFILTER2_BUNDLE                      0x0000007F /* ----B */
#define NV_PGRAPH_TEXFILTER2_MIPMAP_LOD_BIAS                   12:0 /* RWXSF */
#define NV_PGRAPH_TEXFILTER2_MIPMAP_LOD_BIAS_097         0x00000000 /* RWC-V */
#define NV_PGRAPH_TEXFILTER2_CONVOLUTION_KERNEL               15:13 /* RWXVF */
#define NV_PGRAPH_TEXFILTER2_CONVOLUTION_KERNEL_QUINCUNX 0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFILTER2_CONVOLUTION_KERNEL_GAUSSIAN_3 0x00000002 /* RW--V */
#define NV_PGRAPH_TEXFILTER2_CONVOLUTION_KERNEL_097      0x00000001 /* RWC-V */
#define NV_PGRAPH_TEXFILTER2_MIN                              21:16 /* RWXVF */
#define NV_PGRAPH_TEXFILTER2_MIN_BOX_LOD0                0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFILTER2_MIN_TENT_LOD0               0x00000002 /* RW--V */
#define NV_PGRAPH_TEXFILTER2_MIN_BOX_NEARESTLOD          0x00000003 /* RW--V */
#define NV_PGRAPH_TEXFILTER2_MIN_TENT_NEARESTLOD         0x00000004 /* RW--V */
#define NV_PGRAPH_TEXFILTER2_MIN_BOX_TENT_LOD            0x00000005 /* RW--V */
#define NV_PGRAPH_TEXFILTER2_MIN_TENT_TENT_LOD           0x00000006 /* RW--V */
#define NV_PGRAPH_TEXFILTER2_MIN_CONVOLUTION_2D_LOD0     0x00000007 /* RW--V */
#define NV_PGRAPH_TEXFILTER2_MIN_097                     0x00000001 /* RWC-V */
#define NV_PGRAPH_TEXFILTER2_MAG                              27:24 /* RWXVF */
#define NV_PGRAPH_TEXFILTER2_MAG_BOX_LOD0                0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFILTER2_MAG_TENT_LOD0               0x00000002 /* RW--V */
#define NV_PGRAPH_TEXFILTER2_MAG_CONVOLUTION_2D_LOD0     0x00000004 /* RW--V */
#define NV_PGRAPH_TEXFILTER2_MAG_097                     0x00000001 /* RWC-V */
#define NV_PGRAPH_TEXFILTER2_ASIGNED                          28:28 /* RWXVF */
#define NV_PGRAPH_TEXFILTER2_ASIGNED_BIT_DISABLED        0x00000000 /* RW--V */
#define NV_PGRAPH_TEXFILTER2_ASIGNED_BIT_ENABLED         0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFILTER2_ASIGNED_097                 0x00000000 /* RWC-V */
#define NV_PGRAPH_TEXFILTER2_RSIGNED                          29:29 /* RWXVF */
#define NV_PGRAPH_TEXFILTER2_RSIGNED_BIT_DISABLED        0x00000000 /* RW--V */
#define NV_PGRAPH_TEXFILTER2_RSIGNED_BIT_ENABLED         0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFILTER2_RSIGNED_097                 0x00000000 /* RWC-V */
#define NV_PGRAPH_TEXFILTER2_GSIGNED                          30:30 /* RWXVF */
#define NV_PGRAPH_TEXFILTER2_GSIGNED_BIT_DISABLED        0x00000000 /* RW--V */
#define NV_PGRAPH_TEXFILTER2_GSIGNED_BIT_ENABLED         0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFILTER2_GSIGNED_097                 0x00000000 /* RWC-V */
#define NV_PGRAPH_TEXFILTER2_BSIGNED                          31:31 /* RWXVF */
#define NV_PGRAPH_TEXFILTER2_BSIGNED_BIT_DISABLED        0x00000000 /* RW--V */
#define NV_PGRAPH_TEXFILTER2_BSIGNED_BIT_ENABLED         0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFILTER2_BSIGNED_097                 0x00000000 /* RWC-V */
#define NV_PGRAPH_TEXFILTER3                             0x00401A00 /* RW-4R */
#define NV_PGRAPH_TEXFILTER3_BUNDLE                      0x00000080 /* ----B */
#define NV_PGRAPH_TEXFILTER3_MIPMAP_LOD_BIAS                   12:0 /* RWXSF */
#define NV_PGRAPH_TEXFILTER3_MIPMAP_LOD_BIAS_097         0x00000000 /* RWC-V */
#define NV_PGRAPH_TEXFILTER3_CONVOLUTION_KERNEL               15:13 /* RWXVF */
#define NV_PGRAPH_TEXFILTER3_CONVOLUTION_KERNEL_QUINCUNX 0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFILTER3_CONVOLUTION_KERNEL_GAUSSIAN_3 0x00000002 /* RW--V */
#define NV_PGRAPH_TEXFILTER3_CONVOLUTION_KERNEL_097      0x00000001 /* RWC-V */
#define NV_PGRAPH_TEXFILTER3_MIN                              21:16 /* RWXVF */
#define NV_PGRAPH_TEXFILTER3_MIN_BOX_LOD0                0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFILTER3_MIN_TENT_LOD0               0x00000002 /* RW--V */
#define NV_PGRAPH_TEXFILTER3_MIN_BOX_NEARESTLOD          0x00000003 /* RW--V */
#define NV_PGRAPH_TEXFILTER3_MIN_TENT_NEARESTLOD         0x00000004 /* RW--V */
#define NV_PGRAPH_TEXFILTER3_MIN_BOX_TENT_LOD            0x00000005 /* RW--V */
#define NV_PGRAPH_TEXFILTER3_MIN_TENT_TENT_LOD           0x00000006 /* RW--V */
#define NV_PGRAPH_TEXFILTER3_MIN_CONVOLUTION_2D_LOD0     0x00000007 /* RW--V */
#define NV_PGRAPH_TEXFILTER3_MIN_097                     0x00000001 /* RWC-V */
#define NV_PGRAPH_TEXFILTER3_MAG                              27:24 /* RWXVF */
#define NV_PGRAPH_TEXFILTER3_MAG_BOX_LOD0                0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFILTER3_MAG_TENT_LOD0               0x00000002 /* RW--V */
#define NV_PGRAPH_TEXFILTER3_MAG_CONVOLUTION_2D_LOD0     0x00000004 /* RW--V */
#define NV_PGRAPH_TEXFILTER3_MAG_097                     0x00000001 /* RWC-V */
#define NV_PGRAPH_TEXFILTER3_ASIGNED                          28:28 /* RWXVF */
#define NV_PGRAPH_TEXFILTER3_ASIGNED_BIT_DISABLED        0x00000000 /* RW--V */
#define NV_PGRAPH_TEXFILTER3_ASIGNED_BIT_ENABLED         0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFILTER3_ASIGNED_097                 0x00000000 /* RWC-V */
#define NV_PGRAPH_TEXFILTER3_RSIGNED                          29:29 /* RWXVF */
#define NV_PGRAPH_TEXFILTER3_RSIGNED_BIT_DISABLED        0x00000000 /* RW--V */
#define NV_PGRAPH_TEXFILTER3_RSIGNED_BIT_ENABLED         0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFILTER3_RSIGNED_097                 0x00000000 /* RWC-V */
#define NV_PGRAPH_TEXFILTER3_GSIGNED                          30:30 /* RWXVF */
#define NV_PGRAPH_TEXFILTER3_GSIGNED_BIT_DISABLED        0x00000000 /* RW--V */
#define NV_PGRAPH_TEXFILTER3_GSIGNED_BIT_ENABLED         0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFILTER3_GSIGNED_097                 0x00000000 /* RWC-V */
#define NV_PGRAPH_TEXFILTER3_BSIGNED                          31:31 /* RWXVF */
#define NV_PGRAPH_TEXFILTER3_BSIGNED_BIT_DISABLED        0x00000000 /* RW--V */
#define NV_PGRAPH_TEXFILTER3_BSIGNED_BIT_ENABLED         0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFILTER3_BSIGNED_097                 0x00000000 /* RWC-V */
#define NV_PGRAPH_TEXFMT0                                0x00401A04 /* RW-4R */
#define NV_PGRAPH_TEXFMT0_BUNDLE                         0x00000081 /* ----B */
#define NV_PGRAPH_TEXFMT0_CONTEXT_DMA                           1:1 /* RWXVF */
#define NV_PGRAPH_TEXFMT0_CONTEXT_DMA_A                  0x00000000 /* RW--V */
#define NV_PGRAPH_TEXFMT0_CONTEXT_DMA_B                  0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFMT0_CONTEXT_DMA_097                0x00000000 /* RWC-V */
#define NV_PGRAPH_TEXFMT0_CUBEMAPENABLE                         2:2 /* RWXVF */
#define NV_PGRAPH_TEXFMT0_CUBEMAPENABLE_FALSE            0x00000000 /* RW--V */
#define NV_PGRAPH_TEXFMT0_CUBEMAPENABLE_TRUE             0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFMT0_CUBEMAPENABLE_097              0x00000000 /* RWC-V */
#define NV_PGRAPH_TEXFMT0_BORDER_SOURCE                         3:3 /* RWXVF */
#define NV_PGRAPH_TEXFMT0_BORDER_SOURCE_TEXTURE          0x00000000 /* RW--V */
#define NV_PGRAPH_TEXFMT0_BORDER_SOURCE_COLOR            0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFMT0_BORDER_SOURCE_097              0x00000001 /* RWC-V */
#define NV_PGRAPH_TEXFMT0_ORIGIN_ZOH                            4:4 /* RWXVF */
#define NV_PGRAPH_TEXFMT0_ORIGIN_ZOH_CORNER              0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFMT0_ORIGIN_ZOH_097                 0x00000001 /* RWC-V */
#define NV_PGRAPH_TEXFMT0_ORIGIN_FOH                            5:5 /* RWXVF */
#define NV_PGRAPH_TEXFMT0_ORIGIN_FOH_CORNER              0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFMT0_ORIGIN_FOH_097                 0x00000001 /* RWC-V */
#define NV_PGRAPH_TEXFMT0_DIMENSIONALITY                        7:6 /* RWXVF */
#define NV_PGRAPH_TEXFMT0_DIMENSIONALITY_ONE             0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFMT0_DIMENSIONALITY_TWO             0x00000002 /* RW--V */
#define NV_PGRAPH_TEXFMT0_DIMENSIONALITY_THREE           0x00000003 /* RW--V */
#define NV_PGRAPH_TEXFMT0_DIMENSIONALITY_097             0x00000002 /* RWC-V */
#define NV_PGRAPH_TEXFMT0_COLOR                                14:8 /* RWXVF */
#define NV_PGRAPH_TEXFMT0_COLOR_SZ_Y8                    0x00000000 /* RW--V */
#define NV_PGRAPH_TEXFMT0_COLOR_SZ_AY8                   0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFMT0_COLOR_SZ_A1R5G5B5              0x00000002 /* RW--V */
#define NV_PGRAPH_TEXFMT0_COLOR_SZ_X1R5G5B5              0x00000003 /* RW--V */
#define NV_PGRAPH_TEXFMT0_COLOR_SZ_A4R4G4B4              0x00000004 /* RW--V */
#define NV_PGRAPH_TEXFMT0_COLOR_SZ_R5G6B5                0x00000005 /* RW--V */
#define NV_PGRAPH_TEXFMT0_COLOR_SZ_A8R8G8B8              0x00000006 /* RW--V */
#define NV_PGRAPH_TEXFMT0_COLOR_SZ_X8R8G8B8              0x00000007 /* RW--V */
#define NV_PGRAPH_TEXFMT0_COLOR_SZ_I8_A1R5G5B5           0x00000008 /* RW--V */
#define NV_PGRAPH_TEXFMT0_COLOR_SZ_I8_R5G6B5             0x00000009 /* RW--V */
#define NV_PGRAPH_TEXFMT0_COLOR_SZ_I8_A4R4G4B4           0x0000000A /* RW--V */
#define NV_PGRAPH_TEXFMT0_COLOR_SZ_I8_A8R8G8B8           0x0000000B /* RW--V */
#define NV_PGRAPH_TEXFMT0_COLOR_L_DXT1_A1R5G5B5          0x0000000C /* RW--V */
#define NV_PGRAPH_TEXFMT0_COLOR_L_DXT23_A8R8G8B8         0x0000000E /* RW--V */
#define NV_PGRAPH_TEXFMT0_COLOR_L_DXT45_A8R8G8B8         0x0000000F /* RW--V */
#define NV_PGRAPH_TEXFMT0_COLOR_LU_IMAGE_A1R5G5B5        0x00000010 /* RW--V */
#define NV_PGRAPH_TEXFMT0_COLOR_LU_IMAGE_R5G6B5          0x00000011 /* RW--V */
#define NV_PGRAPH_TEXFMT0_COLOR_LU_IMAGE_A8R8G8B8        0x00000012 /* RW--V */
#define NV_PGRAPH_TEXFMT0_COLOR_LU_IMAGE_Y8              0x00000013 /* RW--V */
#define NV_PGRAPH_TEXFMT0_COLOR_LU_IMAGE_SY8             0x00000014 /* RW--V */
#define NV_PGRAPH_TEXFMT0_COLOR_LU_IMAGE_X7SY9           0x00000015 /* RW--V */
#define NV_PGRAPH_TEXFMT0_COLOR_LU_IMAGE_R8B8            0x00000016 /* RW--V */
#define NV_PGRAPH_TEXFMT0_COLOR_LU_IMAGE_G8B8            0x00000017 /* RW--V */
#define NV_PGRAPH_TEXFMT0_COLOR_LU_IMAGE_SG8SB8          0x00000018 /* RW--V */
#define NV_PGRAPH_TEXFMT0_COLOR_SZ_A8                    0x00000019 /* RW--V */
#define NV_PGRAPH_TEXFMT0_COLOR_SZ_A8Y8                  0x0000001A /* RW--V */
#define NV_PGRAPH_TEXFMT0_COLOR_LU_IMAGE_AY8             0x0000001B /* RW--V */
#define NV_PGRAPH_TEXFMT0_COLOR_LU_IMAGE_X1R5G5B5        0x0000001C /* RW--V */
#define NV_PGRAPH_TEXFMT0_COLOR_LU_IMAGE_A4R4G4B4        0x0000001D /* RW--V */
#define NV_PGRAPH_TEXFMT0_COLOR_LU_IMAGE_X8R8G8B8        0x0000001E /* RW--V */
#define NV_PGRAPH_TEXFMT0_COLOR_LU_IMAGE_A8              0x0000001F /* RW--V */
#define NV_PGRAPH_TEXFMT0_COLOR_LU_IMAGE_A8Y8            0x00000020 /* RW--V */
#define NV_PGRAPH_TEXFMT0_COLOR_LC_IMAGE_CR8YB8CB8YA8    0x00000024 /* RW--V */
#define NV_PGRAPH_TEXFMT0_COLOR_LC_IMAGE_YB8CR8YA8CB8    0x00000025 /* RW--V */
#define NV_PGRAPH_TEXFMT0_COLOR_LU_IMAGE_A8CR8CB8Y8      0x00000026 /* RW--V */
#define NV_PGRAPH_TEXFMT0_COLOR_SZ_R6G5B5                0x00000027 /* RW--V */
#define NV_PGRAPH_TEXFMT0_COLOR_SZ_G8B8                  0x00000028 /* RW--V */
#define NV_PGRAPH_TEXFMT0_COLOR_SZ_R8B8                  0x00000029 /* RW--V */
#define NV_PGRAPH_TEXFMT0_COLOR_SZ_DEPTH_X8_Y24_FIXED    0x0000002A /* RW--V */
#define NV_PGRAPH_TEXFMT0_COLOR_SZ_DEPTH_X8_Y24_FLOAT    0x0000002B /* RW--V */
#define NV_PGRAPH_TEXFMT0_COLOR_SZ_DEPTH_Y16_FIXED       0x0000002C /* RW--V */
#define NV_PGRAPH_TEXFMT0_COLOR_SZ_DEPTH_Y16_FLOAT       0x0000002D /* RW--V */
#define NV_PGRAPH_TEXFMT0_COLOR_LU_IMAGE_DEPTH_X8_Y24_FIXED 0x0000002E /* RW--V */
#define NV_PGRAPH_TEXFMT0_COLOR_LU_IMAGE_DEPTH_X8_Y24_FLOAT 0x0000002F /* RW--V */
#define NV_PGRAPH_TEXFMT0_COLOR_LU_IMAGE_DEPTH_Y16_FIXED 0x00000030 /* RW--V */
#define NV_PGRAPH_TEXFMT0_COLOR_LU_IMAGE_DEPTH_Y16_FLOAT 0x00000031 /* RW--V */
#define NV_PGRAPH_TEXFMT0_COLOR_SZ_Y16                   0x00000032 /* RW--V */
#define NV_PGRAPH_TEXFMT0_COLOR_SZ_YB_16_YA_16           0x00000033 /* RW--V */
#define NV_PGRAPH_TEXFMT0_COLOR_LC_IMAGE_A4V6YB6A4U6YA6  0x00000034 /* RW--V */
#define NV_PGRAPH_TEXFMT0_COLOR_LU_IMAGE_Y16             0x00000035 /* RW--V */
#define NV_PGRAPH_TEXFMT0_COLOR_LU_IMAGE_YB16YA16        0x00000036 /* RW--V */
#define NV_PGRAPH_TEXFMT0_COLOR_LU_IMAGE_R6G5B5          0x00000037 /* RW--V */
#define NV_PGRAPH_TEXFMT0_COLOR_SZ_R5G5B5A1              0x00000038 /* RW--V */
#define NV_PGRAPH_TEXFMT0_COLOR_SZ_R4G4B4A4              0x00000039 /* RW--V */
#define NV_PGRAPH_TEXFMT0_COLOR_SZ_A8B8G8R8              0x0000003A /* RW--V */
#define NV_PGRAPH_TEXFMT0_COLOR_SZ_B8G8R8A8              0x0000003B /* RW--V */
#define NV_PGRAPH_TEXFMT0_COLOR_SZ_R8G8B8A8              0x0000003C /* RW--V */
#define NV_PGRAPH_TEXFMT0_COLOR_LU_IMAGE_R5G5B5A1        0x0000003D /* RW--V */
#define NV_PGRAPH_TEXFMT0_COLOR_LU_IMAGE_R4G4B4A4        0x0000003E /* RW--V */
#define NV_PGRAPH_TEXFMT0_COLOR_LU_IMAGE_A8B8G8R8        0x0000003F /* RW--V */
#define NV_PGRAPH_TEXFMT0_COLOR_LU_IMAGE_B8G8R8A8        0x00000040 /* RW--V */
#define NV_PGRAPH_TEXFMT0_COLOR_LU_IMAGE_R8G8B8A8        0x00000041 /* RW--V */
#define NV_PGRAPH_TEXFMT0_COLOR_097                      0x00000005 /* RWC-V */
#define NV_PGRAPH_TEXFMT0_MIPMAP_LEVELS                       19:16 /* RWXUF */
#define NV_PGRAPH_TEXFMT0_MIPMAP_LEVELS_097              0x00000001 /* RWC-V */
#define NV_PGRAPH_TEXFMT0_BASE_SIZE_U                         23:20 /* RWXVF */
#define NV_PGRAPH_TEXFMT0_BASE_SIZE_U_1                  0x00000000 /* RW--V */
#define NV_PGRAPH_TEXFMT0_BASE_SIZE_U_2                  0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFMT0_BASE_SIZE_U_4                  0x00000002 /* RW--V */
#define NV_PGRAPH_TEXFMT0_BASE_SIZE_U_8                  0x00000003 /* RW--V */
#define NV_PGRAPH_TEXFMT0_BASE_SIZE_U_16                 0x00000004 /* RW--V */
#define NV_PGRAPH_TEXFMT0_BASE_SIZE_U_32                 0x00000005 /* RW--V */
#define NV_PGRAPH_TEXFMT0_BASE_SIZE_U_64                 0x00000006 /* RW--V */
#define NV_PGRAPH_TEXFMT0_BASE_SIZE_U_128                0x00000007 /* RW--V */
#define NV_PGRAPH_TEXFMT0_BASE_SIZE_U_256                0x00000008 /* RW--V */
#define NV_PGRAPH_TEXFMT0_BASE_SIZE_U_512                0x00000009 /* RW--V */
#define NV_PGRAPH_TEXFMT0_BASE_SIZE_U_1024               0x0000000A /* RW--V */
#define NV_PGRAPH_TEXFMT0_BASE_SIZE_U_2048               0x0000000B /* RW--V */
#define NV_PGRAPH_TEXFMT0_BASE_SIZE_U_4096               0x0000000C /* RW--V */
#define NV_PGRAPH_TEXFMT0_BASE_SIZE_U_097                0x00000000 /* RWC-V */
#define NV_PGRAPH_TEXFMT0_BASE_SIZE_V                         27:24 /* RWXVF */
#define NV_PGRAPH_TEXFMT0_BASE_SIZE_V_1                  0x00000000 /* RW--V */
#define NV_PGRAPH_TEXFMT0_BASE_SIZE_V_2                  0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFMT0_BASE_SIZE_V_4                  0x00000002 /* RW--V */
#define NV_PGRAPH_TEXFMT0_BASE_SIZE_V_8                  0x00000003 /* RW--V */
#define NV_PGRAPH_TEXFMT0_BASE_SIZE_V_16                 0x00000004 /* RW--V */
#define NV_PGRAPH_TEXFMT0_BASE_SIZE_V_32                 0x00000005 /* RW--V */
#define NV_PGRAPH_TEXFMT0_BASE_SIZE_V_64                 0x00000006 /* RW--V */
#define NV_PGRAPH_TEXFMT0_BASE_SIZE_V_128                0x00000007 /* RW--V */
#define NV_PGRAPH_TEXFMT0_BASE_SIZE_V_256                0x00000008 /* RW--V */
#define NV_PGRAPH_TEXFMT0_BASE_SIZE_V_512                0x00000009 /* RW--V */
#define NV_PGRAPH_TEXFMT0_BASE_SIZE_V_1024               0x0000000A /* RW--V */
#define NV_PGRAPH_TEXFMT0_BASE_SIZE_V_2048               0x0000000B /* RW--V */
#define NV_PGRAPH_TEXFMT0_BASE_SIZE_V_4096               0x0000000C /* RW--V */
#define NV_PGRAPH_TEXFMT0_BASE_SIZE_V_097                0x00000000 /* RWC-V */
#define NV_PGRAPH_TEXFMT0_BASE_SIZE_P                         31:28 /* RWXVF */
#define NV_PGRAPH_TEXFMT0_BASE_SIZE_P_1                  0x00000000 /* RW--V */
#define NV_PGRAPH_TEXFMT0_BASE_SIZE_P_2                  0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFMT0_BASE_SIZE_P_4                  0x00000002 /* RW--V */
#define NV_PGRAPH_TEXFMT0_BASE_SIZE_P_8                  0x00000003 /* RW--V */
#define NV_PGRAPH_TEXFMT0_BASE_SIZE_P_16                 0x00000004 /* RW--V */
#define NV_PGRAPH_TEXFMT0_BASE_SIZE_P_32                 0x00000005 /* RW--V */
#define NV_PGRAPH_TEXFMT0_BASE_SIZE_P_64                 0x00000006 /* RW--V */
#define NV_PGRAPH_TEXFMT0_BASE_SIZE_P_128                0x00000007 /* RW--V */
#define NV_PGRAPH_TEXFMT0_BASE_SIZE_P_256                0x00000008 /* RW--V */
#define NV_PGRAPH_TEXFMT0_BASE_SIZE_P_512                0x00000009 /* RW--V */
#define NV_PGRAPH_TEXFMT0_BASE_SIZE_P_097                0x00000000 /* RWC-V */
#define NV_PGRAPH_TEXFMT1                                0x00401A08 /* RW-4R */
#define NV_PGRAPH_TEXFMT1_BUNDLE                         0x00000082 /* ----B */
#define NV_PGRAPH_TEXFMT1_CONTEXT_DMA                           1:1 /* RWXVF */
#define NV_PGRAPH_TEXFMT1_CONTEXT_DMA_A                  0x00000000 /* RW--V */
#define NV_PGRAPH_TEXFMT1_CONTEXT_DMA_B                  0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFMT1_CONTEXT_DMA_097                0x00000000 /* RWC-V */
#define NV_PGRAPH_TEXFMT1_CUBEMAPENABLE                         2:2 /* RWXVF */
#define NV_PGRAPH_TEXFMT1_CUBEMAPENABLE_FALSE            0x00000000 /* RW--V */
#define NV_PGRAPH_TEXFMT1_CUBEMAPENABLE_TRUE             0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFMT1_CUBEMAPENABLE_097              0x00000000 /* RWC-V */
#define NV_PGRAPH_TEXFMT1_BORDER_SOURCE                         3:3 /* RWXVF */
#define NV_PGRAPH_TEXFMT1_BORDER_SOURCE_TEXTURE          0x00000000 /* RW--V */
#define NV_PGRAPH_TEXFMT1_BORDER_SOURCE_COLOR            0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFMT1_BORDER_SOURCE_097              0x00000001 /* RWC-V */
#define NV_PGRAPH_TEXFMT1_ORIGIN_ZOH                            4:4 /* RWXVF */
#define NV_PGRAPH_TEXFMT1_ORIGIN_ZOH_CORNER              0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFMT1_ORIGIN_ZOH_097                 0x00000001 /* RWC-V */
#define NV_PGRAPH_TEXFMT1_ORIGIN_FOH                            5:5 /* RWXVF */
#define NV_PGRAPH_TEXFMT1_ORIGIN_FOH_CORNER              0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFMT1_ORIGIN_FOH_097                 0x00000001 /* RWC-V */
#define NV_PGRAPH_TEXFMT1_DIMENSIONALITY                        7:6 /* RWXVF */
#define NV_PGRAPH_TEXFMT1_DIMENSIONALITY_ONE             0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFMT1_DIMENSIONALITY_TWO             0x00000002 /* RW--V */
#define NV_PGRAPH_TEXFMT1_DIMENSIONALITY_THREE           0x00000003 /* RW--V */
#define NV_PGRAPH_TEXFMT1_DIMENSIONALITY_097             0x00000002 /* RWC-V */
#define NV_PGRAPH_TEXFMT1_COLOR                                14:8 /* RWXVF */
#define NV_PGRAPH_TEXFMT1_COLOR_SZ_Y8                    0x00000000 /* RW--V */
#define NV_PGRAPH_TEXFMT1_COLOR_SZ_AY8                   0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFMT1_COLOR_SZ_A1R5G5B5              0x00000002 /* RW--V */
#define NV_PGRAPH_TEXFMT1_COLOR_SZ_X1R5G5B5              0x00000003 /* RW--V */
#define NV_PGRAPH_TEXFMT1_COLOR_SZ_A4R4G4B4              0x00000004 /* RW--V */
#define NV_PGRAPH_TEXFMT1_COLOR_SZ_R5G6B5                0x00000005 /* RW--V */
#define NV_PGRAPH_TEXFMT1_COLOR_SZ_A8R8G8B8              0x00000006 /* RW--V */
#define NV_PGRAPH_TEXFMT1_COLOR_SZ_X8R8G8B8              0x00000007 /* RW--V */
#define NV_PGRAPH_TEXFMT1_COLOR_SZ_I8_A1R5G5B5           0x00000008 /* RW--V */
#define NV_PGRAPH_TEXFMT1_COLOR_SZ_I8_R5G6B5             0x00000009 /* RW--V */
#define NV_PGRAPH_TEXFMT1_COLOR_SZ_I8_A4R4G4B4           0x0000000A /* RW--V */
#define NV_PGRAPH_TEXFMT1_COLOR_SZ_I8_A8R8G8B8           0x0000000B /* RW--V */
#define NV_PGRAPH_TEXFMT1_COLOR_L_DXT1_A1R5G5B5          0x0000000C /* RW--V */
#define NV_PGRAPH_TEXFMT1_COLOR_L_DXT23_A8R8G8B8         0x0000000E /* RW--V */
#define NV_PGRAPH_TEXFMT1_COLOR_L_DXT45_A8R8G8B8         0x0000000F /* RW--V */
#define NV_PGRAPH_TEXFMT1_COLOR_LU_IMAGE_A1R5G5B5        0x00000010 /* RW--V */
#define NV_PGRAPH_TEXFMT1_COLOR_LU_IMAGE_R5G6B5          0x00000011 /* RW--V */
#define NV_PGRAPH_TEXFMT1_COLOR_LU_IMAGE_A8R8G8B8        0x00000012 /* RW--V */
#define NV_PGRAPH_TEXFMT1_COLOR_LU_IMAGE_Y8              0x00000013 /* RW--V */
#define NV_PGRAPH_TEXFMT1_COLOR_LU_IMAGE_SY8             0x00000014 /* RW--V */
#define NV_PGRAPH_TEXFMT1_COLOR_LU_IMAGE_X7SY9           0x00000015 /* RW--V */
#define NV_PGRAPH_TEXFMT1_COLOR_LU_IMAGE_R8B8            0x00000016 /* RW--V */
#define NV_PGRAPH_TEXFMT1_COLOR_LU_IMAGE_G8B8            0x00000017 /* RW--V */
#define NV_PGRAPH_TEXFMT1_COLOR_LU_IMAGE_SG8SB8          0x00000018 /* RW--V */
#define NV_PGRAPH_TEXFMT1_COLOR_SZ_A8                    0x00000019 /* RW--V */
#define NV_PGRAPH_TEXFMT1_COLOR_SZ_A8Y8                  0x0000001A /* RW--V */
#define NV_PGRAPH_TEXFMT1_COLOR_LU_IMAGE_AY8             0x0000001B /* RW--V */
#define NV_PGRAPH_TEXFMT1_COLOR_LU_IMAGE_X1R5G5B5        0x0000001C /* RW--V */
#define NV_PGRAPH_TEXFMT1_COLOR_LU_IMAGE_A4R4G4B4        0x0000001D /* RW--V */
#define NV_PGRAPH_TEXFMT1_COLOR_LU_IMAGE_X8R8G8B8        0x0000001E /* RW--V */
#define NV_PGRAPH_TEXFMT1_COLOR_LU_IMAGE_A8              0x0000001F /* RW--V */
#define NV_PGRAPH_TEXFMT1_COLOR_LU_IMAGE_A8Y8            0x00000020 /* RW--V */
#define NV_PGRAPH_TEXFMT1_COLOR_LC_IMAGE_CR8YB8CB8YA8    0x00000024 /* RW--V */
#define NV_PGRAPH_TEXFMT1_COLOR_LC_IMAGE_YB8CR8YA8CB8    0x00000025 /* RW--V */
#define NV_PGRAPH_TEXFMT1_COLOR_LU_IMAGE_A8CR8CB8Y8      0x00000026 /* RW--V */
#define NV_PGRAPH_TEXFMT1_COLOR_SZ_R6G5B5                0x00000027 /* RW--V */
#define NV_PGRAPH_TEXFMT1_COLOR_SZ_G8B8                  0x00000028 /* RW--V */
#define NV_PGRAPH_TEXFMT1_COLOR_SZ_R8B8                  0x00000029 /* RW--V */
#define NV_PGRAPH_TEXFMT1_COLOR_SZ_DEPTH_X8_Y24_FIXED    0x0000002A /* RW--V */
#define NV_PGRAPH_TEXFMT1_COLOR_SZ_DEPTH_X8_Y24_FLOAT    0x0000002B /* RW--V */
#define NV_PGRAPH_TEXFMT1_COLOR_SZ_DEPTH_Y16_FIXED       0x0000002C /* RW--V */
#define NV_PGRAPH_TEXFMT1_COLOR_SZ_DEPTH_Y16_FLOAT       0x0000002D /* RW--V */
#define NV_PGRAPH_TEXFMT1_COLOR_LU_IMAGE_DEPTH_X8_Y24_FIXED 0x0000002E /* RW--V */
#define NV_PGRAPH_TEXFMT1_COLOR_LU_IMAGE_DEPTH_X8_Y24_FLOAT 0x0000002F /* RW--V */
#define NV_PGRAPH_TEXFMT1_COLOR_LU_IMAGE_DEPTH_Y16_FIXED 0x00000030 /* RW--V */
#define NV_PGRAPH_TEXFMT1_COLOR_LU_IMAGE_DEPTH_Y16_FLOAT 0x00000031 /* RW--V */
#define NV_PGRAPH_TEXFMT1_COLOR_SZ_Y16                   0x00000032 /* RW--V */
#define NV_PGRAPH_TEXFMT1_COLOR_SZ_YB_16_YA_16           0x00000033 /* RW--V */
#define NV_PGRAPH_TEXFMT1_COLOR_LC_IMAGE_A4V6YB6A4U6YA6  0x00000034 /* RW--V */
#define NV_PGRAPH_TEXFMT1_COLOR_LU_IMAGE_Y16             0x00000035 /* RW--V */
#define NV_PGRAPH_TEXFMT1_COLOR_LU_IMAGE_YB16YA16        0x00000036 /* RW--V */
#define NV_PGRAPH_TEXFMT1_COLOR_LU_IMAGE_R6G5B5          0x00000037 /* RW--V */
#define NV_PGRAPH_TEXFMT1_COLOR_SZ_R5G5B5A1              0x00000038 /* RW--V */
#define NV_PGRAPH_TEXFMT1_COLOR_SZ_R4G4B4A4              0x00000039 /* RW--V */
#define NV_PGRAPH_TEXFMT1_COLOR_SZ_A8B8G8R8              0x0000003A /* RW--V */
#define NV_PGRAPH_TEXFMT1_COLOR_SZ_B8G8R8A8              0x0000003B /* RW--V */
#define NV_PGRAPH_TEXFMT1_COLOR_SZ_R8G8B8A8              0x0000003C /* RW--V */
#define NV_PGRAPH_TEXFMT1_COLOR_LU_IMAGE_R5G5B5A1        0x0000003D /* RW--V */
#define NV_PGRAPH_TEXFMT1_COLOR_LU_IMAGE_R4G4B4A4        0x0000003E /* RW--V */
#define NV_PGRAPH_TEXFMT1_COLOR_LU_IMAGE_A8B8G8R8        0x0000003F /* RW--V */
#define NV_PGRAPH_TEXFMT1_COLOR_LU_IMAGE_B8G8R8A8        0x00000040 /* RW--V */
#define NV_PGRAPH_TEXFMT1_COLOR_LU_IMAGE_R8G8B8A8        0x00000041 /* RW--V */
#define NV_PGRAPH_TEXFMT1_COLOR_097                      0x00000005 /* RWC-V */
#define NV_PGRAPH_TEXFMT1_MIPMAP_LEVELS                       19:16 /* RWXUF */
#define NV_PGRAPH_TEXFMT1_MIPMAP_LEVELS_097              0x00000001 /* RWC-V */
#define NV_PGRAPH_TEXFMT1_BASE_SIZE_U                         23:20 /* RWXVF */
#define NV_PGRAPH_TEXFMT1_BASE_SIZE_U_1                  0x00000000 /* RW--V */
#define NV_PGRAPH_TEXFMT1_BASE_SIZE_U_2                  0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFMT1_BASE_SIZE_U_4                  0x00000002 /* RW--V */
#define NV_PGRAPH_TEXFMT1_BASE_SIZE_U_8                  0x00000003 /* RW--V */
#define NV_PGRAPH_TEXFMT1_BASE_SIZE_U_16                 0x00000004 /* RW--V */
#define NV_PGRAPH_TEXFMT1_BASE_SIZE_U_32                 0x00000005 /* RW--V */
#define NV_PGRAPH_TEXFMT1_BASE_SIZE_U_64                 0x00000006 /* RW--V */
#define NV_PGRAPH_TEXFMT1_BASE_SIZE_U_128                0x00000007 /* RW--V */
#define NV_PGRAPH_TEXFMT1_BASE_SIZE_U_256                0x00000008 /* RW--V */
#define NV_PGRAPH_TEXFMT1_BASE_SIZE_U_512                0x00000009 /* RW--V */
#define NV_PGRAPH_TEXFMT1_BASE_SIZE_U_1024               0x0000000A /* RW--V */
#define NV_PGRAPH_TEXFMT1_BASE_SIZE_U_2048               0x0000000B /* RW--V */
#define NV_PGRAPH_TEXFMT1_BASE_SIZE_U_4096               0x0000000C /* RW--V */
#define NV_PGRAPH_TEXFMT1_BASE_SIZE_U_097                0x00000000 /* RWC-V */
#define NV_PGRAPH_TEXFMT1_BASE_SIZE_V                         27:24 /* RWXVF */
#define NV_PGRAPH_TEXFMT1_BASE_SIZE_V_1                  0x00000000 /* RW--V */
#define NV_PGRAPH_TEXFMT1_BASE_SIZE_V_2                  0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFMT1_BASE_SIZE_V_4                  0x00000002 /* RW--V */
#define NV_PGRAPH_TEXFMT1_BASE_SIZE_V_8                  0x00000003 /* RW--V */
#define NV_PGRAPH_TEXFMT1_BASE_SIZE_V_16                 0x00000004 /* RW--V */
#define NV_PGRAPH_TEXFMT1_BASE_SIZE_V_32                 0x00000005 /* RW--V */
#define NV_PGRAPH_TEXFMT1_BASE_SIZE_V_64                 0x00000006 /* RW--V */
#define NV_PGRAPH_TEXFMT1_BASE_SIZE_V_128                0x00000007 /* RW--V */
#define NV_PGRAPH_TEXFMT1_BASE_SIZE_V_256                0x00000008 /* RW--V */
#define NV_PGRAPH_TEXFMT1_BASE_SIZE_V_512                0x00000009 /* RW--V */
#define NV_PGRAPH_TEXFMT1_BASE_SIZE_V_1024               0x0000000A /* RW--V */
#define NV_PGRAPH_TEXFMT1_BASE_SIZE_V_2048               0x0000000B /* RW--V */
#define NV_PGRAPH_TEXFMT1_BASE_SIZE_V_4096               0x0000000C /* RW--V */
#define NV_PGRAPH_TEXFMT1_BASE_SIZE_V_097                0x00000000 /* RWC-V */
#define NV_PGRAPH_TEXFMT1_BASE_SIZE_P                         31:28 /* RWXVF */
#define NV_PGRAPH_TEXFMT1_BASE_SIZE_P_1                  0x00000000 /* RW--V */
#define NV_PGRAPH_TEXFMT1_BASE_SIZE_P_2                  0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFMT1_BASE_SIZE_P_4                  0x00000002 /* RW--V */
#define NV_PGRAPH_TEXFMT1_BASE_SIZE_P_8                  0x00000003 /* RW--V */
#define NV_PGRAPH_TEXFMT1_BASE_SIZE_P_16                 0x00000004 /* RW--V */
#define NV_PGRAPH_TEXFMT1_BASE_SIZE_P_32                 0x00000005 /* RW--V */
#define NV_PGRAPH_TEXFMT1_BASE_SIZE_P_64                 0x00000006 /* RW--V */
#define NV_PGRAPH_TEXFMT1_BASE_SIZE_P_128                0x00000007 /* RW--V */
#define NV_PGRAPH_TEXFMT1_BASE_SIZE_P_256                0x00000008 /* RW--V */
#define NV_PGRAPH_TEXFMT1_BASE_SIZE_P_512                0x00000009 /* RW--V */
#define NV_PGRAPH_TEXFMT1_BASE_SIZE_P_097                0x00000000 /* RWC-V */
#define NV_PGRAPH_TEXFMT2                                0x00401A0C /* RW-4R */
#define NV_PGRAPH_TEXFMT2_BUNDLE                         0x00000083 /* ----B */
#define NV_PGRAPH_TEXFMT2_CONTEXT_DMA                           1:1 /* RWXVF */
#define NV_PGRAPH_TEXFMT2_CONTEXT_DMA_A                  0x00000000 /* RW--V */
#define NV_PGRAPH_TEXFMT2_CONTEXT_DMA_B                  0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFMT2_CONTEXT_DMA_097                0x00000000 /* RWC-V */
#define NV_PGRAPH_TEXFMT2_CUBEMAPENABLE                         2:2 /* RWXVF */
#define NV_PGRAPH_TEXFMT2_CUBEMAPENABLE_FALSE            0x00000000 /* RW--V */
#define NV_PGRAPH_TEXFMT2_CUBEMAPENABLE_TRUE             0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFMT2_CUBEMAPENABLE_097              0x00000000 /* RWC-V */
#define NV_PGRAPH_TEXFMT2_BORDER_SOURCE                         3:3 /* RWXVF */
#define NV_PGRAPH_TEXFMT2_BORDER_SOURCE_TEXTURE          0x00000000 /* RW--V */
#define NV_PGRAPH_TEXFMT2_BORDER_SOURCE_COLOR            0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFMT2_BORDER_SOURCE_097              0x00000001 /* RWC-V */
#define NV_PGRAPH_TEXFMT2_ORIGIN_ZOH                            4:4 /* RWXVF */
#define NV_PGRAPH_TEXFMT2_ORIGIN_ZOH_CORNER              0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFMT2_ORIGIN_ZOH_097                 0x00000001 /* RWC-V */
#define NV_PGRAPH_TEXFMT2_ORIGIN_FOH                            5:5 /* RWXVF */
#define NV_PGRAPH_TEXFMT2_ORIGIN_FOH_CORNER              0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFMT2_ORIGIN_FOH_097                 0x00000001 /* RWC-V */
#define NV_PGRAPH_TEXFMT2_DIMENSIONALITY                        7:6 /* RWXVF */
#define NV_PGRAPH_TEXFMT2_DIMENSIONALITY_ONE             0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFMT2_DIMENSIONALITY_TWO             0x00000002 /* RW--V */
#define NV_PGRAPH_TEXFMT2_DIMENSIONALITY_THREE           0x00000003 /* RW--V */
#define NV_PGRAPH_TEXFMT2_DIMENSIONALITY_097             0x00000002 /* RWC-V */
#define NV_PGRAPH_TEXFMT2_COLOR                                14:8 /* RWXVF */
#define NV_PGRAPH_TEXFMT2_COLOR_SZ_Y8                    0x00000000 /* RW--V */
#define NV_PGRAPH_TEXFMT2_COLOR_SZ_AY8                   0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFMT2_COLOR_SZ_A1R5G5B5              0x00000002 /* RW--V */
#define NV_PGRAPH_TEXFMT2_COLOR_SZ_X1R5G5B5              0x00000003 /* RW--V */
#define NV_PGRAPH_TEXFMT2_COLOR_SZ_A4R4G4B4              0x00000004 /* RW--V */
#define NV_PGRAPH_TEXFMT2_COLOR_SZ_R5G6B5                0x00000005 /* RW--V */
#define NV_PGRAPH_TEXFMT2_COLOR_SZ_A8R8G8B8              0x00000006 /* RW--V */
#define NV_PGRAPH_TEXFMT2_COLOR_SZ_X8R8G8B8              0x00000007 /* RW--V */
#define NV_PGRAPH_TEXFMT2_COLOR_SZ_I8_A1R5G5B5           0x00000008 /* RW--V */
#define NV_PGRAPH_TEXFMT2_COLOR_SZ_I8_R5G6B5             0x00000009 /* RW--V */
#define NV_PGRAPH_TEXFMT2_COLOR_SZ_I8_A4R4G4B4           0x0000000A /* RW--V */
#define NV_PGRAPH_TEXFMT2_COLOR_SZ_I8_A8R8G8B8           0x0000000B /* RW--V */
#define NV_PGRAPH_TEXFMT2_COLOR_L_DXT1_A1R5G5B5          0x0000000C /* RW--V */
#define NV_PGRAPH_TEXFMT2_COLOR_L_DXT23_A8R8G8B8         0x0000000E /* RW--V */
#define NV_PGRAPH_TEXFMT2_COLOR_L_DXT45_A8R8G8B8         0x0000000F /* RW--V */
#define NV_PGRAPH_TEXFMT2_COLOR_LU_IMAGE_A1R5G5B5        0x00000010 /* RW--V */
#define NV_PGRAPH_TEXFMT2_COLOR_LU_IMAGE_R5G6B5          0x00000011 /* RW--V */
#define NV_PGRAPH_TEXFMT2_COLOR_LU_IMAGE_A8R8G8B8        0x00000012 /* RW--V */
#define NV_PGRAPH_TEXFMT2_COLOR_LU_IMAGE_Y8              0x00000013 /* RW--V */
#define NV_PGRAPH_TEXFMT2_COLOR_LU_IMAGE_SY8             0x00000014 /* RW--V */
#define NV_PGRAPH_TEXFMT2_COLOR_LU_IMAGE_X7SY9           0x00000015 /* RW--V */
#define NV_PGRAPH_TEXFMT2_COLOR_LU_IMAGE_R8B8            0x00000016 /* RW--V */
#define NV_PGRAPH_TEXFMT2_COLOR_LU_IMAGE_G8B8            0x00000017 /* RW--V */
#define NV_PGRAPH_TEXFMT2_COLOR_LU_IMAGE_SG8SB8          0x00000018 /* RW--V */
#define NV_PGRAPH_TEXFMT2_COLOR_SZ_A8                    0x00000019 /* RW--V */
#define NV_PGRAPH_TEXFMT2_COLOR_SZ_A8Y8                  0x0000001A /* RW--V */
#define NV_PGRAPH_TEXFMT2_COLOR_LU_IMAGE_AY8             0x0000001B /* RW--V */
#define NV_PGRAPH_TEXFMT2_COLOR_LU_IMAGE_X1R5G5B5        0x0000001C /* RW--V */
#define NV_PGRAPH_TEXFMT2_COLOR_LU_IMAGE_A4R4G4B4        0x0000001D /* RW--V */
#define NV_PGRAPH_TEXFMT2_COLOR_LU_IMAGE_X8R8G8B8        0x0000001E /* RW--V */
#define NV_PGRAPH_TEXFMT2_COLOR_LU_IMAGE_A8              0x0000001F /* RW--V */
#define NV_PGRAPH_TEXFMT2_COLOR_LU_IMAGE_A8Y8            0x00000020 /* RW--V */
#define NV_PGRAPH_TEXFMT2_COLOR_LC_IMAGE_CR8YB8CB8YA8    0x00000024 /* RW--V */
#define NV_PGRAPH_TEXFMT2_COLOR_LC_IMAGE_YB8CR8YA8CB8    0x00000025 /* RW--V */
#define NV_PGRAPH_TEXFMT2_COLOR_LU_IMAGE_A8CR8CB8Y8      0x00000026 /* RW--V */
#define NV_PGRAPH_TEXFMT2_COLOR_SZ_R6G5B5                0x00000027 /* RW--V */
#define NV_PGRAPH_TEXFMT2_COLOR_SZ_G8B8                  0x00000028 /* RW--V */
#define NV_PGRAPH_TEXFMT2_COLOR_SZ_R8B8                  0x00000029 /* RW--V */
#define NV_PGRAPH_TEXFMT2_COLOR_SZ_DEPTH_X8_Y24_FIXED    0x0000002A /* RW--V */
#define NV_PGRAPH_TEXFMT2_COLOR_SZ_DEPTH_X8_Y24_FLOAT    0x0000002B /* RW--V */
#define NV_PGRAPH_TEXFMT2_COLOR_SZ_DEPTH_Y16_FIXED       0x0000002C /* RW--V */
#define NV_PGRAPH_TEXFMT2_COLOR_SZ_DEPTH_Y16_FLOAT       0x0000002D /* RW--V */
#define NV_PGRAPH_TEXFMT2_COLOR_LU_IMAGE_DEPTH_X8_Y24_FIXED 0x0000002E /* RW--V */
#define NV_PGRAPH_TEXFMT2_COLOR_LU_IMAGE_DEPTH_X8_Y24_FLOAT 0x0000002F /* RW--V */
#define NV_PGRAPH_TEXFMT2_COLOR_LU_IMAGE_DEPTH_Y16_FIXED 0x00000030 /* RW--V */
#define NV_PGRAPH_TEXFMT2_COLOR_LU_IMAGE_DEPTH_Y16_FLOAT 0x00000031 /* RW--V */
#define NV_PGRAPH_TEXFMT2_COLOR_SZ_Y16                   0x00000032 /* RW--V */
#define NV_PGRAPH_TEXFMT2_COLOR_SZ_YB_16_YA_16           0x00000033 /* RW--V */
#define NV_PGRAPH_TEXFMT2_COLOR_LC_IMAGE_A4V6YB6A4U6YA6  0x00000034 /* RW--V */
#define NV_PGRAPH_TEXFMT2_COLOR_LU_IMAGE_Y16             0x00000035 /* RW--V */
#define NV_PGRAPH_TEXFMT2_COLOR_LU_IMAGE_YB16YA16        0x00000036 /* RW--V */
#define NV_PGRAPH_TEXFMT2_COLOR_LU_IMAGE_R6G5B5          0x00000037 /* RW--V */
#define NV_PGRAPH_TEXFMT2_COLOR_SZ_R5G5B5A1              0x00000038 /* RW--V */
#define NV_PGRAPH_TEXFMT2_COLOR_SZ_R4G4B4A4              0x00000039 /* RW--V */
#define NV_PGRAPH_TEXFMT2_COLOR_SZ_A8B8G8R8              0x0000003A /* RW--V */
#define NV_PGRAPH_TEXFMT2_COLOR_SZ_B8G8R8A8              0x0000003B /* RW--V */
#define NV_PGRAPH_TEXFMT2_COLOR_SZ_R8G8B8A8              0x0000003C /* RW--V */
#define NV_PGRAPH_TEXFMT2_COLOR_LU_IMAGE_R5G5B5A1        0x0000003D /* RW--V */
#define NV_PGRAPH_TEXFMT2_COLOR_LU_IMAGE_R4G4B4A4        0x0000003E /* RW--V */
#define NV_PGRAPH_TEXFMT2_COLOR_LU_IMAGE_A8B8G8R8        0x0000003F /* RW--V */
#define NV_PGRAPH_TEXFMT2_COLOR_LU_IMAGE_B8G8R8A8        0x00000040 /* RW--V */
#define NV_PGRAPH_TEXFMT2_COLOR_LU_IMAGE_R8G8B8A8        0x00000041 /* RW--V */
#define NV_PGRAPH_TEXFMT2_COLOR_097                      0x00000005 /* RWC-V */
#define NV_PGRAPH_TEXFMT2_MIPMAP_LEVELS                       19:16 /* RWXUF */
#define NV_PGRAPH_TEXFMT2_MIPMAP_LEVELS_097              0x00000001 /* RWC-V */
#define NV_PGRAPH_TEXFMT2_BASE_SIZE_U                         23:20 /* RWXVF */
#define NV_PGRAPH_TEXFMT2_BASE_SIZE_U_1                  0x00000000 /* RW--V */
#define NV_PGRAPH_TEXFMT2_BASE_SIZE_U_2                  0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFMT2_BASE_SIZE_U_4                  0x00000002 /* RW--V */
#define NV_PGRAPH_TEXFMT2_BASE_SIZE_U_8                  0x00000003 /* RW--V */
#define NV_PGRAPH_TEXFMT2_BASE_SIZE_U_16                 0x00000004 /* RW--V */
#define NV_PGRAPH_TEXFMT2_BASE_SIZE_U_32                 0x00000005 /* RW--V */
#define NV_PGRAPH_TEXFMT2_BASE_SIZE_U_64                 0x00000006 /* RW--V */
#define NV_PGRAPH_TEXFMT2_BASE_SIZE_U_128                0x00000007 /* RW--V */
#define NV_PGRAPH_TEXFMT2_BASE_SIZE_U_256                0x00000008 /* RW--V */
#define NV_PGRAPH_TEXFMT2_BASE_SIZE_U_512                0x00000009 /* RW--V */
#define NV_PGRAPH_TEXFMT2_BASE_SIZE_U_1024               0x0000000A /* RW--V */
#define NV_PGRAPH_TEXFMT2_BASE_SIZE_U_2048               0x0000000B /* RW--V */
#define NV_PGRAPH_TEXFMT2_BASE_SIZE_U_4096               0x0000000C /* RW--V */
#define NV_PGRAPH_TEXFMT2_BASE_SIZE_U_097                0x00000000 /* RWC-V */
#define NV_PGRAPH_TEXFMT2_BASE_SIZE_V                         27:24 /* RWXVF */
#define NV_PGRAPH_TEXFMT2_BASE_SIZE_V_1                  0x00000000 /* RW--V */
#define NV_PGRAPH_TEXFMT2_BASE_SIZE_V_2                  0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFMT2_BASE_SIZE_V_4                  0x00000002 /* RW--V */
#define NV_PGRAPH_TEXFMT2_BASE_SIZE_V_8                  0x00000003 /* RW--V */
#define NV_PGRAPH_TEXFMT2_BASE_SIZE_V_16                 0x00000004 /* RW--V */
#define NV_PGRAPH_TEXFMT2_BASE_SIZE_V_32                 0x00000005 /* RW--V */
#define NV_PGRAPH_TEXFMT2_BASE_SIZE_V_64                 0x00000006 /* RW--V */
#define NV_PGRAPH_TEXFMT2_BASE_SIZE_V_128                0x00000007 /* RW--V */
#define NV_PGRAPH_TEXFMT2_BASE_SIZE_V_256                0x00000008 /* RW--V */
#define NV_PGRAPH_TEXFMT2_BASE_SIZE_V_512                0x00000009 /* RW--V */
#define NV_PGRAPH_TEXFMT2_BASE_SIZE_V_1024               0x0000000A /* RW--V */
#define NV_PGRAPH_TEXFMT2_BASE_SIZE_V_2048               0x0000000B /* RW--V */
#define NV_PGRAPH_TEXFMT2_BASE_SIZE_V_4096               0x0000000C /* RW--V */
#define NV_PGRAPH_TEXFMT2_BASE_SIZE_V_097                0x00000000 /* RWC-V */
#define NV_PGRAPH_TEXFMT2_BASE_SIZE_P                         31:28 /* RWXVF */
#define NV_PGRAPH_TEXFMT2_BASE_SIZE_P_1                  0x00000000 /* RW--V */
#define NV_PGRAPH_TEXFMT2_BASE_SIZE_P_2                  0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFMT2_BASE_SIZE_P_4                  0x00000002 /* RW--V */
#define NV_PGRAPH_TEXFMT2_BASE_SIZE_P_8                  0x00000003 /* RW--V */
#define NV_PGRAPH_TEXFMT2_BASE_SIZE_P_16                 0x00000004 /* RW--V */
#define NV_PGRAPH_TEXFMT2_BASE_SIZE_P_32                 0x00000005 /* RW--V */
#define NV_PGRAPH_TEXFMT2_BASE_SIZE_P_64                 0x00000006 /* RW--V */
#define NV_PGRAPH_TEXFMT2_BASE_SIZE_P_128                0x00000007 /* RW--V */
#define NV_PGRAPH_TEXFMT2_BASE_SIZE_P_256                0x00000008 /* RW--V */
#define NV_PGRAPH_TEXFMT2_BASE_SIZE_P_512                0x00000009 /* RW--V */
#define NV_PGRAPH_TEXFMT2_BASE_SIZE_P_097                0x00000000 /* RWC-V */
#define NV_PGRAPH_TEXFMT3                                0x00401A10 /* RW-4R */
#define NV_PGRAPH_TEXFMT3_BUNDLE                         0x00000084 /* ----B */
#define NV_PGRAPH_TEXFMT3_CONTEXT_DMA                           1:1 /* RWXVF */
#define NV_PGRAPH_TEXFMT3_CONTEXT_DMA_A                  0x00000000 /* RW--V */
#define NV_PGRAPH_TEXFMT3_CONTEXT_DMA_B                  0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFMT3_CONTEXT_DMA_097                0x00000000 /* RWC-V */
#define NV_PGRAPH_TEXFMT3_CUBEMAPENABLE                         2:2 /* RWXVF */
#define NV_PGRAPH_TEXFMT3_CUBEMAPENABLE_FALSE            0x00000000 /* RW--V */
#define NV_PGRAPH_TEXFMT3_CUBEMAPENABLE_TRUE             0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFMT3_CUBEMAPENABLE_097              0x00000000 /* RWC-V */
#define NV_PGRAPH_TEXFMT3_BORDER_SOURCE                         3:3 /* RWXVF */
#define NV_PGRAPH_TEXFMT3_BORDER_SOURCE_TEXTURE          0x00000000 /* RW--V */
#define NV_PGRAPH_TEXFMT3_BORDER_SOURCE_COLOR            0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFMT3_BORDER_SOURCE_097              0x00000001 /* RWC-V */
#define NV_PGRAPH_TEXFMT3_ORIGIN_ZOH                            4:4 /* RWXVF */
#define NV_PGRAPH_TEXFMT3_ORIGIN_ZOH_CORNER              0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFMT3_ORIGIN_ZOH_097                 0x00000001 /* RWC-V */
#define NV_PGRAPH_TEXFMT3_ORIGIN_FOH                            5:5 /* RWXVF */
#define NV_PGRAPH_TEXFMT3_ORIGIN_FOH_CORNER              0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFMT3_ORIGIN_FOH_097                 0x00000001 /* RWC-V */
#define NV_PGRAPH_TEXFMT3_DIMENSIONALITY                        7:6 /* RWXVF */
#define NV_PGRAPH_TEXFMT3_DIMENSIONALITY_ONE             0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFMT3_DIMENSIONALITY_TWO             0x00000002 /* RW--V */
#define NV_PGRAPH_TEXFMT3_DIMENSIONALITY_THREE           0x00000003 /* RW--V */
#define NV_PGRAPH_TEXFMT3_DIMENSIONALITY_097             0x00000002 /* RWC-V */
#define NV_PGRAPH_TEXFMT3_COLOR                                14:8 /* RWXVF */
#define NV_PGRAPH_TEXFMT3_COLOR_SZ_Y8                    0x00000000 /* RW--V */
#define NV_PGRAPH_TEXFMT3_COLOR_SZ_AY8                   0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFMT3_COLOR_SZ_A1R5G5B5              0x00000002 /* RW--V */
#define NV_PGRAPH_TEXFMT3_COLOR_SZ_X1R5G5B5              0x00000003 /* RW--V */
#define NV_PGRAPH_TEXFMT3_COLOR_SZ_A4R4G4B4              0x00000004 /* RW--V */
#define NV_PGRAPH_TEXFMT3_COLOR_SZ_R5G6B5                0x00000005 /* RW--V */
#define NV_PGRAPH_TEXFMT3_COLOR_SZ_A8R8G8B8              0x00000006 /* RW--V */
#define NV_PGRAPH_TEXFMT3_COLOR_SZ_X8R8G8B8              0x00000007 /* RW--V */
#define NV_PGRAPH_TEXFMT3_COLOR_SZ_I8_A1R5G5B5           0x00000008 /* RW--V */
#define NV_PGRAPH_TEXFMT3_COLOR_SZ_I8_R5G6B5             0x00000009 /* RW--V */
#define NV_PGRAPH_TEXFMT3_COLOR_SZ_I8_A4R4G4B4           0x0000000A /* RW--V */
#define NV_PGRAPH_TEXFMT3_COLOR_SZ_I8_A8R8G8B8           0x0000000B /* RW--V */
#define NV_PGRAPH_TEXFMT3_COLOR_L_DXT1_A1R5G5B5          0x0000000C /* RW--V */
#define NV_PGRAPH_TEXFMT3_COLOR_L_DXT23_A8R8G8B8         0x0000000E /* RW--V */
#define NV_PGRAPH_TEXFMT3_COLOR_L_DXT45_A8R8G8B8         0x0000000F /* RW--V */
#define NV_PGRAPH_TEXFMT3_COLOR_LU_IMAGE_A1R5G5B5        0x00000010 /* RW--V */
#define NV_PGRAPH_TEXFMT3_COLOR_LU_IMAGE_R5G6B5          0x00000011 /* RW--V */
#define NV_PGRAPH_TEXFMT3_COLOR_LU_IMAGE_A8R8G8B8        0x00000012 /* RW--V */
#define NV_PGRAPH_TEXFMT3_COLOR_LU_IMAGE_Y8              0x00000013 /* RW--V */
#define NV_PGRAPH_TEXFMT3_COLOR_LU_IMAGE_SY8             0x00000014 /* RW--V */
#define NV_PGRAPH_TEXFMT3_COLOR_LU_IMAGE_X7SY9           0x00000015 /* RW--V */
#define NV_PGRAPH_TEXFMT3_COLOR_LU_IMAGE_R8B8            0x00000016 /* RW--V */
#define NV_PGRAPH_TEXFMT3_COLOR_LU_IMAGE_G8B8            0x00000017 /* RW--V */
#define NV_PGRAPH_TEXFMT3_COLOR_LU_IMAGE_SG8SB8          0x00000018 /* RW--V */
#define NV_PGRAPH_TEXFMT3_COLOR_SZ_A8                    0x00000019 /* RW--V */
#define NV_PGRAPH_TEXFMT3_COLOR_SZ_A8Y8                  0x0000001A /* RW--V */
#define NV_PGRAPH_TEXFMT3_COLOR_LU_IMAGE_AY8             0x0000001B /* RW--V */
#define NV_PGRAPH_TEXFMT3_COLOR_LU_IMAGE_X1R5G5B5        0x0000001C /* RW--V */
#define NV_PGRAPH_TEXFMT3_COLOR_LU_IMAGE_A4R4G4B4        0x0000001D /* RW--V */
#define NV_PGRAPH_TEXFMT3_COLOR_LU_IMAGE_X8R8G8B8        0x0000001E /* RW--V */
#define NV_PGRAPH_TEXFMT3_COLOR_LU_IMAGE_A8              0x0000001F /* RW--V */
#define NV_PGRAPH_TEXFMT3_COLOR_LU_IMAGE_A8Y8            0x00000020 /* RW--V */
#define NV_PGRAPH_TEXFMT3_COLOR_LC_IMAGE_CR8YB8CB8YA8    0x00000024 /* RW--V */
#define NV_PGRAPH_TEXFMT3_COLOR_LC_IMAGE_YB8CR8YA8CB8    0x00000025 /* RW--V */
#define NV_PGRAPH_TEXFMT3_COLOR_LU_IMAGE_A8CR8CB8Y8      0x00000026 /* RW--V */
#define NV_PGRAPH_TEXFMT3_COLOR_SZ_R6G5B5                0x00000027 /* RW--V */
#define NV_PGRAPH_TEXFMT3_COLOR_SZ_G8B8                  0x00000028 /* RW--V */
#define NV_PGRAPH_TEXFMT3_COLOR_SZ_R8B8                  0x00000029 /* RW--V */
#define NV_PGRAPH_TEXFMT3_COLOR_SZ_DEPTH_X8_Y24_FIXED    0x0000002A /* RW--V */
#define NV_PGRAPH_TEXFMT3_COLOR_SZ_DEPTH_X8_Y24_FLOAT    0x0000002B /* RW--V */
#define NV_PGRAPH_TEXFMT3_COLOR_SZ_DEPTH_Y16_FIXED       0x0000002C /* RW--V */
#define NV_PGRAPH_TEXFMT3_COLOR_SZ_DEPTH_Y16_FLOAT       0x0000002D /* RW--V */
#define NV_PGRAPH_TEXFMT3_COLOR_LU_IMAGE_DEPTH_X8_Y24_FIXED 0x0000002E /* RW--V */
#define NV_PGRAPH_TEXFMT3_COLOR_LU_IMAGE_DEPTH_X8_Y24_FLOAT 0x0000002F /* RW--V */
#define NV_PGRAPH_TEXFMT3_COLOR_LU_IMAGE_DEPTH_Y16_FIXED 0x00000030 /* RW--V */
#define NV_PGRAPH_TEXFMT3_COLOR_LU_IMAGE_DEPTH_Y16_FLOAT 0x00000031 /* RW--V */
#define NV_PGRAPH_TEXFMT3_COLOR_SZ_Y16                   0x00000032 /* RW--V */
#define NV_PGRAPH_TEXFMT3_COLOR_SZ_YB_16_YA_16           0x00000033 /* RW--V */
#define NV_PGRAPH_TEXFMT3_COLOR_LC_IMAGE_A4V6YB6A4U6YA6  0x00000034 /* RW--V */
#define NV_PGRAPH_TEXFMT3_COLOR_LU_IMAGE_Y16             0x00000035 /* RW--V */
#define NV_PGRAPH_TEXFMT3_COLOR_LU_IMAGE_YB16YA16        0x00000036 /* RW--V */
#define NV_PGRAPH_TEXFMT3_COLOR_LU_IMAGE_R6G5B5          0x00000037 /* RW--V */
#define NV_PGRAPH_TEXFMT3_COLOR_SZ_R5G5B5A1              0x00000038 /* RW--V */
#define NV_PGRAPH_TEXFMT3_COLOR_SZ_R4G4B4A4              0x00000039 /* RW--V */
#define NV_PGRAPH_TEXFMT3_COLOR_SZ_A8B8G8R8              0x0000003A /* RW--V */
#define NV_PGRAPH_TEXFMT3_COLOR_SZ_B8G8R8A8              0x0000003B /* RW--V */
#define NV_PGRAPH_TEXFMT3_COLOR_SZ_R8G8B8A8              0x0000003C /* RW--V */
#define NV_PGRAPH_TEXFMT3_COLOR_LU_IMAGE_R5G5B5A1        0x0000003D /* RW--V */
#define NV_PGRAPH_TEXFMT3_COLOR_LU_IMAGE_R4G4B4A4        0x0000003E /* RW--V */
#define NV_PGRAPH_TEXFMT3_COLOR_LU_IMAGE_A8B8G8R8        0x0000003F /* RW--V */
#define NV_PGRAPH_TEXFMT3_COLOR_LU_IMAGE_B8G8R8A8        0x00000040 /* RW--V */
#define NV_PGRAPH_TEXFMT3_COLOR_LU_IMAGE_R8G8B8A8        0x00000041 /* RW--V */
#define NV_PGRAPH_TEXFMT3_COLOR_097                      0x00000005 /* RWC-V */
#define NV_PGRAPH_TEXFMT3_MIPMAP_LEVELS                       19:16 /* RWXUF */
#define NV_PGRAPH_TEXFMT3_MIPMAP_LEVELS_097              0x00000001 /* RWC-V */
#define NV_PGRAPH_TEXFMT3_BASE_SIZE_U                         23:20 /* RWXVF */
#define NV_PGRAPH_TEXFMT3_BASE_SIZE_U_1                  0x00000000 /* RW--V */
#define NV_PGRAPH_TEXFMT3_BASE_SIZE_U_2                  0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFMT3_BASE_SIZE_U_4                  0x00000002 /* RW--V */
#define NV_PGRAPH_TEXFMT3_BASE_SIZE_U_8                  0x00000003 /* RW--V */
#define NV_PGRAPH_TEXFMT3_BASE_SIZE_U_16                 0x00000004 /* RW--V */
#define NV_PGRAPH_TEXFMT3_BASE_SIZE_U_32                 0x00000005 /* RW--V */
#define NV_PGRAPH_TEXFMT3_BASE_SIZE_U_64                 0x00000006 /* RW--V */
#define NV_PGRAPH_TEXFMT3_BASE_SIZE_U_128                0x00000007 /* RW--V */
#define NV_PGRAPH_TEXFMT3_BASE_SIZE_U_256                0x00000008 /* RW--V */
#define NV_PGRAPH_TEXFMT3_BASE_SIZE_U_512                0x00000009 /* RW--V */
#define NV_PGRAPH_TEXFMT3_BASE_SIZE_U_1024               0x0000000A /* RW--V */
#define NV_PGRAPH_TEXFMT3_BASE_SIZE_U_2048               0x0000000B /* RW--V */
#define NV_PGRAPH_TEXFMT3_BASE_SIZE_U_4096               0x0000000C /* RW--V */
#define NV_PGRAPH_TEXFMT3_BASE_SIZE_U_097                0x00000000 /* RWC-V */
#define NV_PGRAPH_TEXFMT3_BASE_SIZE_V                         27:24 /* RWXVF */
#define NV_PGRAPH_TEXFMT3_BASE_SIZE_V_1                  0x00000000 /* RW--V */
#define NV_PGRAPH_TEXFMT3_BASE_SIZE_V_2                  0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFMT3_BASE_SIZE_V_4                  0x00000002 /* RW--V */
#define NV_PGRAPH_TEXFMT3_BASE_SIZE_V_8                  0x00000003 /* RW--V */
#define NV_PGRAPH_TEXFMT3_BASE_SIZE_V_16                 0x00000004 /* RW--V */
#define NV_PGRAPH_TEXFMT3_BASE_SIZE_V_32                 0x00000005 /* RW--V */
#define NV_PGRAPH_TEXFMT3_BASE_SIZE_V_64                 0x00000006 /* RW--V */
#define NV_PGRAPH_TEXFMT3_BASE_SIZE_V_128                0x00000007 /* RW--V */
#define NV_PGRAPH_TEXFMT3_BASE_SIZE_V_256                0x00000008 /* RW--V */
#define NV_PGRAPH_TEXFMT3_BASE_SIZE_V_512                0x00000009 /* RW--V */
#define NV_PGRAPH_TEXFMT3_BASE_SIZE_V_1024               0x0000000A /* RW--V */
#define NV_PGRAPH_TEXFMT3_BASE_SIZE_V_2048               0x0000000B /* RW--V */
#define NV_PGRAPH_TEXFMT3_BASE_SIZE_V_4096               0x0000000C /* RW--V */
#define NV_PGRAPH_TEXFMT3_BASE_SIZE_V_097                0x00000000 /* RWC-V */
#define NV_PGRAPH_TEXFMT3_BASE_SIZE_P                         31:28 /* RWXVF */
#define NV_PGRAPH_TEXFMT3_BASE_SIZE_P_1                  0x00000000 /* RW--V */
#define NV_PGRAPH_TEXFMT3_BASE_SIZE_P_2                  0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFMT3_BASE_SIZE_P_4                  0x00000002 /* RW--V */
#define NV_PGRAPH_TEXFMT3_BASE_SIZE_P_8                  0x00000003 /* RW--V */
#define NV_PGRAPH_TEXFMT3_BASE_SIZE_P_16                 0x00000004 /* RW--V */
#define NV_PGRAPH_TEXFMT3_BASE_SIZE_P_32                 0x00000005 /* RW--V */
#define NV_PGRAPH_TEXFMT3_BASE_SIZE_P_64                 0x00000006 /* RW--V */
#define NV_PGRAPH_TEXFMT3_BASE_SIZE_P_128                0x00000007 /* RW--V */
#define NV_PGRAPH_TEXFMT3_BASE_SIZE_P_256                0x00000008 /* RW--V */
#define NV_PGRAPH_TEXFMT3_BASE_SIZE_P_512                0x00000009 /* RW--V */
#define NV_PGRAPH_TEXFMT3_BASE_SIZE_P_097                0x00000000 /* RWC-V */
#define NV_PGRAPH_TEXIMAGERECT0                          0x00401A14 /* RW-4R */
#define NV_PGRAPH_TEXIMAGERECT0_BUNDLE                   0x00000085 /* ----B */
#define NV_PGRAPH_TEXIMAGERECT0_WIDTH                         28:16 /* RWXUF */
#define NV_PGRAPH_TEXIMAGERECT0_WIDTH_097                0x00000008 /* RWC-V */
#define NV_PGRAPH_TEXIMAGERECT0_HEIGHT                         12:0 /* RWXUF */
#define NV_PGRAPH_TEXIMAGERECT0_HEIGHT_097               0x00000008 /* RWC-V */
#define NV_PGRAPH_TEXIMAGERECT1                          0x00401A18 /* RW-4R */
#define NV_PGRAPH_TEXIMAGERECT1_BUNDLE                   0x00000086 /* ----B */
#define NV_PGRAPH_TEXIMAGERECT1_WIDTH                         28:16 /* RWXUF */
#define NV_PGRAPH_TEXIMAGERECT1_WIDTH_097                0x00000008 /* RWC-V */
#define NV_PGRAPH_TEXIMAGERECT1_HEIGHT                         12:0 /* RWXUF */
#define NV_PGRAPH_TEXIMAGERECT1_HEIGHT_097               0x00000008 /* RWC-V */
#define NV_PGRAPH_TEXIMAGERECT2                          0x00401A1C /* RW-4R */
#define NV_PGRAPH_TEXIMAGERECT2_BUNDLE                   0x00000087 /* ----B */
#define NV_PGRAPH_TEXIMAGERECT2_WIDTH                         28:16 /* RWXUF */
#define NV_PGRAPH_TEXIMAGERECT2_WIDTH_097                0x00000008 /* RWC-V */
#define NV_PGRAPH_TEXIMAGERECT2_HEIGHT                         12:0 /* RWXUF */
#define NV_PGRAPH_TEXIMAGERECT2_HEIGHT_097               0x00000008 /* RWC-V */
#define NV_PGRAPH_TEXIMAGERECT3                          0x00401A20 /* RW-4R */
#define NV_PGRAPH_TEXIMAGERECT3_BUNDLE                   0x00000088 /* ----B */
#define NV_PGRAPH_TEXIMAGERECT3_WIDTH                         28:16 /* RWXUF */
#define NV_PGRAPH_TEXIMAGERECT3_WIDTH_097                0x00000008 /* RWC-V */
#define NV_PGRAPH_TEXIMAGERECT3_HEIGHT                         12:0 /* RWXUF */
#define NV_PGRAPH_TEXIMAGERECT3_HEIGHT_097               0x00000008 /* RWC-V */
#define NV_PGRAPH_TEXOFFSET0                             0x00401A24 /* RW-4R */
#define NV_PGRAPH_TEXOFFSET0_BUNDLE                      0x00000089 /* ----B */
#define NV_PGRAPH_TEXOFFSET0_VALUE                             31:0 /* RWXUF */
#define NV_PGRAPH_TEXOFFSET0_VALUE_097                   0x00000000 /* RWC-V */
#define NV_PGRAPH_TEXOFFSET1                             0x00401A28 /* RW-4R */
#define NV_PGRAPH_TEXOFFSET1_BUNDLE                      0x0000008A /* ----B */
#define NV_PGRAPH_TEXOFFSET1_VALUE                             31:0 /* RWXUF */
#define NV_PGRAPH_TEXOFFSET1_VALUE_097                   0x00000000 /* RWC-V */
#define NV_PGRAPH_TEXOFFSET2                             0x00401A2C /* RW-4R */
#define NV_PGRAPH_TEXOFFSET2_BUNDLE                      0x0000008B /* ----B */
#define NV_PGRAPH_TEXOFFSET2_VALUE                             31:0 /* RWXUF */
#define NV_PGRAPH_TEXOFFSET2_VALUE_097                   0x00000000 /* RWC-V */
#define NV_PGRAPH_TEXOFFSET3                             0x00401A30 /* RW-4R */
#define NV_PGRAPH_TEXOFFSET3_BUNDLE                      0x0000008C /* ----B */
#define NV_PGRAPH_TEXOFFSET3_VALUE                             31:0 /* RWXUF */
#define NV_PGRAPH_TEXOFFSET3_VALUE_097                   0x00000000 /* RWC-V */
#define NV_PGRAPH_TEXPALETTE0                            0x00401A34 /* RW-4R */
#define NV_PGRAPH_TEXPALETTE0_BUNDLE                     0x0000008D /* ----B */
#define NV_PGRAPH_TEXPALETTE0_CONTEXT_DMA                       0:0 /* RWXVF */
#define NV_PGRAPH_TEXPALETTE0_CONTEXT_DMA_A              0x00000000 /* RW--V */
#define NV_PGRAPH_TEXPALETTE0_CONTEXT_DMA_B              0x00000001 /* RW--V */
#define NV_PGRAPH_TEXPALETTE0_CONTEXT_DMA_097            0x00000000 /* RWC-V */
#define NV_PGRAPH_TEXPALETTE0_LENGTH                            3:2 /* RWXVF */
#define NV_PGRAPH_TEXPALETTE0_LENGTH_256                 0x00000000 /* RW--V */
#define NV_PGRAPH_TEXPALETTE0_LENGTH_128                 0x00000001 /* RW--V */
#define NV_PGRAPH_TEXPALETTE0_LENGTH_64                  0x00000002 /* RW--V */
#define NV_PGRAPH_TEXPALETTE0_LENGTH_32                  0x00000003 /* RW--V */
#define NV_PGRAPH_TEXPALETTE0_LENGTH_097                 0x00000000 /* RWC-V */
#define NV_PGRAPH_TEXPALETTE0_OFFSET                           31:6 /* RWXUF */
#define NV_PGRAPH_TEXPALETTE0_OFFSET_097                 0x00000000 /* RWC-V */
#define NV_PGRAPH_TEXPALETTE1                            0x00401A38 /* RW-4R */
#define NV_PGRAPH_TEXPALETTE1_BUNDLE                     0x0000008E /* ----B */
#define NV_PGRAPH_TEXPALETTE1_CONTEXT_DMA                       0:0 /* RWXVF */
#define NV_PGRAPH_TEXPALETTE1_CONTEXT_DMA_A              0x00000000 /* RW--V */
#define NV_PGRAPH_TEXPALETTE1_CONTEXT_DMA_B              0x00000001 /* RW--V */
#define NV_PGRAPH_TEXPALETTE1_CONTEXT_DMA_097            0x00000000 /* RWC-V */
#define NV_PGRAPH_TEXPALETTE1_LENGTH                            3:2 /* RWXVF */
#define NV_PGRAPH_TEXPALETTE1_LENGTH_256                 0x00000000 /* RW--V */
#define NV_PGRAPH_TEXPALETTE1_LENGTH_128                 0x00000001 /* RW--V */
#define NV_PGRAPH_TEXPALETTE1_LENGTH_64                  0x00000002 /* RW--V */
#define NV_PGRAPH_TEXPALETTE1_LENGTH_32                  0x00000003 /* RW--V */
#define NV_PGRAPH_TEXPALETTE1_LENGTH_097                 0x00000000 /* RWC-V */
#define NV_PGRAPH_TEXPALETTE1_OFFSET                           31:6 /* RWXUF */
#define NV_PGRAPH_TEXPALETTE1_OFFSET_097                 0x00000000 /* RWC-V */
#define NV_PGRAPH_TEXPALETTE2                            0x00401A3C /* RW-4R */
#define NV_PGRAPH_TEXPALETTE2_BUNDLE                     0x0000008F /* ----B */
#define NV_PGRAPH_TEXPALETTE2_CONTEXT_DMA                       0:0 /* RWXVF */
#define NV_PGRAPH_TEXPALETTE2_CONTEXT_DMA_A              0x00000000 /* RW--V */
#define NV_PGRAPH_TEXPALETTE2_CONTEXT_DMA_B              0x00000001 /* RW--V */
#define NV_PGRAPH_TEXPALETTE2_CONTEXT_DMA_097            0x00000000 /* RWC-V */
#define NV_PGRAPH_TEXPALETTE2_LENGTH                            3:2 /* RWXVF */
#define NV_PGRAPH_TEXPALETTE2_LENGTH_256                 0x00000000 /* RW--V */
#define NV_PGRAPH_TEXPALETTE2_LENGTH_128                 0x00000001 /* RW--V */
#define NV_PGRAPH_TEXPALETTE2_LENGTH_64                  0x00000002 /* RW--V */
#define NV_PGRAPH_TEXPALETTE2_LENGTH_32                  0x00000003 /* RW--V */
#define NV_PGRAPH_TEXPALETTE2_LENGTH_097                 0x00000000 /* RWC-V */
#define NV_PGRAPH_TEXPALETTE2_OFFSET                           31:6 /* RWXUF */
#define NV_PGRAPH_TEXPALETTE2_OFFSET_097                 0x00000000 /* RWC-V */
#define NV_PGRAPH_TEXPALETTE3                            0x00401A40 /* RW-4R */
#define NV_PGRAPH_TEXPALETTE3_BUNDLE                     0x00000090 /* ----B */
#define NV_PGRAPH_TEXPALETTE3_CONTEXT_DMA                       0:0 /* RWXVF */
#define NV_PGRAPH_TEXPALETTE3_CONTEXT_DMA_A              0x00000000 /* RW--V */
#define NV_PGRAPH_TEXPALETTE3_CONTEXT_DMA_B              0x00000001 /* RW--V */
#define NV_PGRAPH_TEXPALETTE3_CONTEXT_DMA_097            0x00000000 /* RWC-V */
#define NV_PGRAPH_TEXPALETTE3_LENGTH                            3:2 /* RWXVF */
#define NV_PGRAPH_TEXPALETTE3_LENGTH_256                 0x00000000 /* RW--V */
#define NV_PGRAPH_TEXPALETTE3_LENGTH_128                 0x00000001 /* RW--V */
#define NV_PGRAPH_TEXPALETTE3_LENGTH_64                  0x00000002 /* RW--V */
#define NV_PGRAPH_TEXPALETTE3_LENGTH_32                  0x00000003 /* RW--V */
#define NV_PGRAPH_TEXPALETTE3_LENGTH_097                 0x00000000 /* RWC-V */
#define NV_PGRAPH_TEXPALETTE3_OFFSET                           31:6 /* RWXUF */
#define NV_PGRAPH_TEXPALETTE3_OFFSET_097                 0x00000000 /* RWC-V */
#define NV_PGRAPH_WINDOWCLIPX0                           0x00401A44 /* RW-4R */
#define NV_PGRAPH_WINDOWCLIPX0_BUNDLE                    0x00000091 /* ----B */
#define NV_PGRAPH_WINDOWCLIPX0_XMIN                            11:0 /* RWXUF */
#define NV_PGRAPH_WINDOWCLIPX0_XMIN_097                  0x00000000 /* RWC-V */
#define NV_PGRAPH_WINDOWCLIPX0_XMAX                           27:16 /* RWXUF */
#define NV_PGRAPH_WINDOWCLIPX0_XMAX_097                  0x000007FF /* RWC-V */
#define NV_PGRAPH_WINDOWCLIPX1                           0x00401A48 /* RW-4R */
#define NV_PGRAPH_WINDOWCLIPX1_BUNDLE                    0x00000092 /* ----B */
#define NV_PGRAPH_WINDOWCLIPX1_XMIN                            11:0 /* RWXUF */
#define NV_PGRAPH_WINDOWCLIPX1_XMIN_097                  0x00000000 /* RWC-V */
#define NV_PGRAPH_WINDOWCLIPX1_XMAX                           27:16 /* RWXUF */
#define NV_PGRAPH_WINDOWCLIPX1_XMAX_097                  0x000007FF /* RWC-V */
#define NV_PGRAPH_WINDOWCLIPX2                           0x00401A4C /* RW-4R */
#define NV_PGRAPH_WINDOWCLIPX2_BUNDLE                    0x00000093 /* ----B */
#define NV_PGRAPH_WINDOWCLIPX2_XMIN                            11:0 /* RWXUF */
#define NV_PGRAPH_WINDOWCLIPX2_XMIN_097                  0x00000000 /* RWC-V */
#define NV_PGRAPH_WINDOWCLIPX2_XMAX                           27:16 /* RWXUF */
#define NV_PGRAPH_WINDOWCLIPX2_XMAX_097                  0x000007FF /* RWC-V */
#define NV_PGRAPH_WINDOWCLIPX3                           0x00401A50 /* RW-4R */
#define NV_PGRAPH_WINDOWCLIPX3_BUNDLE                    0x00000094 /* ----B */
#define NV_PGRAPH_WINDOWCLIPX3_XMIN                            11:0 /* RWXUF */
#define NV_PGRAPH_WINDOWCLIPX3_XMIN_097                  0x00000000 /* RWC-V */
#define NV_PGRAPH_WINDOWCLIPX3_XMAX                           27:16 /* RWXUF */
#define NV_PGRAPH_WINDOWCLIPX3_XMAX_097                  0x000007FF /* RWC-V */
#define NV_PGRAPH_WINDOWCLIPX4                           0x00401A54 /* RW-4R */
#define NV_PGRAPH_WINDOWCLIPX4_BUNDLE                    0x00000095 /* ----B */
#define NV_PGRAPH_WINDOWCLIPX4_XMIN                            11:0 /* RWXUF */
#define NV_PGRAPH_WINDOWCLIPX4_XMIN_097                  0x00000000 /* RWC-V */
#define NV_PGRAPH_WINDOWCLIPX4_XMAX                           27:16 /* RWXUF */
#define NV_PGRAPH_WINDOWCLIPX4_XMAX_097                  0x000007FF /* RWC-V */
#define NV_PGRAPH_WINDOWCLIPX5                           0x00401A58 /* RW-4R */
#define NV_PGRAPH_WINDOWCLIPX5_BUNDLE                    0x00000096 /* ----B */
#define NV_PGRAPH_WINDOWCLIPX5_XMIN                            11:0 /* RWXUF */
#define NV_PGRAPH_WINDOWCLIPX5_XMIN_097                  0x00000000 /* RWC-V */
#define NV_PGRAPH_WINDOWCLIPX5_XMAX                           27:16 /* RWXUF */
#define NV_PGRAPH_WINDOWCLIPX5_XMAX_097                  0x000007FF /* RWC-V */
#define NV_PGRAPH_WINDOWCLIPX6                           0x00401A5C /* RW-4R */
#define NV_PGRAPH_WINDOWCLIPX6_BUNDLE                    0x00000097 /* ----B */
#define NV_PGRAPH_WINDOWCLIPX6_XMIN                            11:0 /* RWXUF */
#define NV_PGRAPH_WINDOWCLIPX6_XMIN_097                  0x00000000 /* RWC-V */
#define NV_PGRAPH_WINDOWCLIPX6_XMAX                           27:16 /* RWXUF */
#define NV_PGRAPH_WINDOWCLIPX6_XMAX_097                  0x000007FF /* RWC-V */
#define NV_PGRAPH_WINDOWCLIPX7                           0x00401A60 /* RW-4R */
#define NV_PGRAPH_WINDOWCLIPX7_BUNDLE                    0x00000098 /* ----B */
#define NV_PGRAPH_WINDOWCLIPX7_XMIN                            11:0 /* RWXUF */
#define NV_PGRAPH_WINDOWCLIPX7_XMIN_097                  0x00000000 /* RWC-V */
#define NV_PGRAPH_WINDOWCLIPX7_XMAX                           27:16 /* RWXUF */
#define NV_PGRAPH_WINDOWCLIPX7_XMAX_097                  0x000007FF /* RWC-V */
#define NV_PGRAPH_WINDOWCLIPY0                           0x00401A64 /* RW-4R */
#define NV_PGRAPH_WINDOWCLIPY0_BUNDLE                    0x00000099 /* ----B */
#define NV_PGRAPH_WINDOWCLIPY0_YMIN                            11:0 /* RWXUF */
#define NV_PGRAPH_WINDOWCLIPY0_YMIN_097                  0x00000000 /* RWC-V */
#define NV_PGRAPH_WINDOWCLIPY0_YMAX                           27:16 /* RWXUF */
#define NV_PGRAPH_WINDOWCLIPY0_YMAX_097                  0x000007FF /* RWC-V */
#define NV_PGRAPH_WINDOWCLIPY1                           0x00401A68 /* RW-4R */
#define NV_PGRAPH_WINDOWCLIPY1_BUNDLE                    0x0000009A /* ----B */
#define NV_PGRAPH_WINDOWCLIPY1_YMIN                            11:0 /* RWXUF */
#define NV_PGRAPH_WINDOWCLIPY1_YMIN_097                  0x00000000 /* RWC-V */
#define NV_PGRAPH_WINDOWCLIPY1_YMAX                           27:16 /* RWXUF */
#define NV_PGRAPH_WINDOWCLIPY1_YMAX_097                  0x000007FF /* RWC-V */
#define NV_PGRAPH_WINDOWCLIPY2                           0x00401A6C /* RW-4R */
#define NV_PGRAPH_WINDOWCLIPY2_BUNDLE                    0x0000009B /* ----B */
#define NV_PGRAPH_WINDOWCLIPY2_YMIN                            11:0 /* RWXUF */
#define NV_PGRAPH_WINDOWCLIPY2_YMIN_097                  0x00000000 /* RWC-V */
#define NV_PGRAPH_WINDOWCLIPY2_YMAX                           27:16 /* RWXUF */
#define NV_PGRAPH_WINDOWCLIPY2_YMAX_097                  0x000007FF /* RWC-V */
#define NV_PGRAPH_WINDOWCLIPY3                           0x00401A70 /* RW-4R */
#define NV_PGRAPH_WINDOWCLIPY3_BUNDLE                    0x0000009C /* ----B */
#define NV_PGRAPH_WINDOWCLIPY3_YMIN                            11:0 /* RWXUF */
#define NV_PGRAPH_WINDOWCLIPY3_YMIN_097                  0x00000000 /* RWC-V */
#define NV_PGRAPH_WINDOWCLIPY3_YMAX                           27:16 /* RWXUF */
#define NV_PGRAPH_WINDOWCLIPY3_YMAX_097                  0x000007FF /* RWC-V */
#define NV_PGRAPH_WINDOWCLIPY4                           0x00401A74 /* RW-4R */
#define NV_PGRAPH_WINDOWCLIPY4_BUNDLE                    0x0000009D /* ----B */
#define NV_PGRAPH_WINDOWCLIPY4_YMIN                            11:0 /* RWXUF */
#define NV_PGRAPH_WINDOWCLIPY4_YMIN_097                  0x00000000 /* RWC-V */
#define NV_PGRAPH_WINDOWCLIPY4_YMAX                           27:16 /* RWXUF */
#define NV_PGRAPH_WINDOWCLIPY4_YMAX_097                  0x000007FF /* RWC-V */
#define NV_PGRAPH_WINDOWCLIPY5                           0x00401A78 /* RW-4R */
#define NV_PGRAPH_WINDOWCLIPY5_BUNDLE                    0x0000009E /* ----B */
#define NV_PGRAPH_WINDOWCLIPY5_YMIN                            11:0 /* RWXUF */
#define NV_PGRAPH_WINDOWCLIPY5_YMIN_097                  0x00000000 /* RWC-V */
#define NV_PGRAPH_WINDOWCLIPY5_YMAX                           27:16 /* RWXUF */
#define NV_PGRAPH_WINDOWCLIPY5_YMAX_097                  0x000007FF /* RWC-V */
#define NV_PGRAPH_WINDOWCLIPY6                           0x00401A7C /* RW-4R */
#define NV_PGRAPH_WINDOWCLIPY6_BUNDLE                    0x0000009F /* ----B */
#define NV_PGRAPH_WINDOWCLIPY6_YMIN                            11:0 /* RWXUF */
#define NV_PGRAPH_WINDOWCLIPY6_YMIN_097                  0x00000000 /* RWC-V */
#define NV_PGRAPH_WINDOWCLIPY6_YMAX                           27:16 /* RWXUF */
#define NV_PGRAPH_WINDOWCLIPY6_YMAX_097                  0x000007FF /* RWC-V */
#define NV_PGRAPH_WINDOWCLIPY7                           0x00401A80 /* RW-4R */
#define NV_PGRAPH_WINDOWCLIPY7_BUNDLE                    0x000000A0 /* ----B */
#define NV_PGRAPH_WINDOWCLIPY7_YMIN                            11:0 /* RWXUF */
#define NV_PGRAPH_WINDOWCLIPY7_YMIN_097                  0x00000000 /* RWC-V */
#define NV_PGRAPH_WINDOWCLIPY7_YMAX                           27:16 /* RWXUF */
#define NV_PGRAPH_WINDOWCLIPY7_YMAX_097                  0x000007FF /* RWC-V */
#define NV_PGRAPH_ZCOMPRESSOCCLUDE                       0x00401A84 /* RW-4R */
#define NV_PGRAPH_ZCOMPRESSOCCLUDE_BUNDLE                0x000000A1 /* ----B */
#define NV_PGRAPH_ZCOMPRESSOCCLUDE_ZCLAMP_EN                    4:4 /* RWXVF */
#define NV_PGRAPH_ZCOMPRESSOCCLUDE_ZCLAMP_EN_CULL        0x00000000 /* RW--V */
#define NV_PGRAPH_ZCOMPRESSOCCLUDE_ZCLAMP_EN_CLAMP       0x00000001 /* RW--V */
#define NV_PGRAPH_ZCOMPRESSOCCLUDE_ZCLAMP_EN_097         0x00000000 /* RWC-V */
#define NV_PGRAPH_ZCOMPRESSOCCLUDE_COMPRESS_ZEN                 0:0 /* RWXVF */
#define NV_PGRAPH_ZCOMPRESSOCCLUDE_COMPRESS_ZEN_DISABLE  0x00000000 /* RW--V */
#define NV_PGRAPH_ZCOMPRESSOCCLUDE_COMPRESS_ZEN_ENABLE   0x00000001 /* RW--V */
#define NV_PGRAPH_ZCOMPRESSOCCLUDE_COMPRESS_ZEN_097      0x00000000 /* RWC-V */
#define NV_PGRAPH_ZCOMPRESSOCCLUDE_OCCLUDE_ZEN                  1:1 /* RWXVF */
#define NV_PGRAPH_ZCOMPRESSOCCLUDE_OCCLUDE_ZEN_DISABLE   0x00000000 /* RW--V */
#define NV_PGRAPH_ZCOMPRESSOCCLUDE_OCCLUDE_ZEN_ENABLE    0x00000001 /* RW--V */
#define NV_PGRAPH_ZCOMPRESSOCCLUDE_OCCLUDE_ZEN_097       0x00000000 /* RWC-V */
#define NV_PGRAPH_ZCOMPRESSOCCLUDE_OCCLUDE_STENCIL_EN           2:2 /* RWXVF */
#define NV_PGRAPH_ZCOMPRESSOCCLUDE_OCCLUDE_STENCIL_EN_DISABLE 0x00000000 /* RW--V */
#define NV_PGRAPH_ZCOMPRESSOCCLUDE_OCCLUDE_STENCIL_EN_ENABLE 0x00000001 /* RW--V */
#define NV_PGRAPH_ZCOMPRESSOCCLUDE_OCCLUDE_STENCIL_EN_097 0x00000000 /* RWC-V */
#define NV_PGRAPH_ZSTENCILCLEARVALUE                     0x00401A88 /* RW-4R */
#define NV_PGRAPH_ZSTENCILCLEARVALUE_BUNDLE              0x000000A2 /* ----B */
#define NV_PGRAPH_ZSTENCILCLEARVALUE_V                         31:0 /* RWXUF */
#define NV_PGRAPH_ZSTENCILCLEARVALUE_V_097               0x00000000 /* RWC-V */
#define NV_PGRAPH_ZCLIPMAX                               0x00401A8C /* RW-4R */
#define NV_PGRAPH_ZCLIPMAX_BUNDLE                        0x000000A3 /* ----B */
#define NV_PGRAPH_ZCLIPMAX_V                                   31:0 /* RWXFF */
#define NV_PGRAPH_ZCLIPMAX_V_097                         0x4B7FFFFF /* RWC-V */
#define NV_PGRAPH_ZCLIPMIN                               0x00401A90 /* RW-4R */
#define NV_PGRAPH_ZCLIPMIN_BUNDLE                        0x000000A4 /* ----B */
#define NV_PGRAPH_ZCLIPMIN_V                                   31:0 /* RWXFF */
#define NV_PGRAPH_ZCLIPMIN_V_097                         0x00000000 /* RWC-V */
#define NV_PGRAPH_CONTEXTDMAA                            0x00401A94 /* RW-4R */
#define NV_PGRAPH_CONTEXTDMAA_BUNDLE                     0x000000A5 /* ----B */
#define NV_PGRAPH_CONTEXTDMAA_V                                15:0 /* RWXUF */
#define NV_PGRAPH_CONTEXTDMAA_V_097                      0x00000000 /* RWC-V */
#define NV_PGRAPH_CONTEXTDMAA_TARGET                          25:24 /* RWXVF */
#define NV_PGRAPH_CONTEXTDMAA_TARGET_NVM                 0x00000000 /* RW--V */
#define NV_PGRAPH_CONTEXTDMAA_TARGET_NVM_TILED           0x00000001 /* RW--V */
#define NV_PGRAPH_CONTEXTDMAA_TARGET_PCI                 0x00000002 /* RW--V */
#define NV_PGRAPH_CONTEXTDMAA_TARGET_AGP                 0x00000003 /* RW--V */
#define NV_PGRAPH_CONTEXTDMAA_TARGET_097                 0x00000000 /* RWC-V */
#define NV_PGRAPH_CONTEXTDMAB                            0x00401A98 /* RW-4R */
#define NV_PGRAPH_CONTEXTDMAB_BUNDLE                     0x000000A6 /* ----B */
#define NV_PGRAPH_CONTEXTDMAB_V                                15:0 /* RWXUF */
#define NV_PGRAPH_CONTEXTDMAB_V_097                      0x00000000 /* RWC-V */
#define NV_PGRAPH_CONTEXTDMAB_TARGET                          25:24 /* RWXVF */
#define NV_PGRAPH_CONTEXTDMAB_TARGET_NVM                 0x00000000 /* RW--V */
#define NV_PGRAPH_CONTEXTDMAB_TARGET_NVM_TILED           0x00000001 /* RW--V */
#define NV_PGRAPH_CONTEXTDMAB_TARGET_PCI                 0x00000002 /* RW--V */
#define NV_PGRAPH_CONTEXTDMAB_TARGET_AGP                 0x00000003 /* RW--V */
#define NV_PGRAPH_CONTEXTDMAB_TARGET_097                 0x00000000 /* RWC-V */
#define NV_PGRAPH_CONTEXTVTXA                            0x00401A9C /* RW-4R */
#define NV_PGRAPH_CONTEXTVTXA_BUNDLE                     0x000000A7 /* ----B */
#define NV_PGRAPH_CONTEXTVTXA_V                                15:0 /* RWXUF */
#define NV_PGRAPH_CONTEXTVTXA_V_097                      0x00000000 /* RWC-V */
#define NV_PGRAPH_CONTEXTVTXB                            0x00401AA0 /* RW-4R */
#define NV_PGRAPH_CONTEXTVTXB_BUNDLE                     0x000000A8 /* ----B */
#define NV_PGRAPH_CONTEXTVTXB_V                                15:0 /* RWXUF */
#define NV_PGRAPH_CONTEXTVTXB_V_097                      0x00000000 /* RWC-V */
#define NV_PGRAPH_ZOFFSETBIAS                            0x00401AA4 /* RW-4R */
#define NV_PGRAPH_ZOFFSETBIAS_BUNDLE                     0x000000A9 /* ----B */
#define NV_PGRAPH_ZOFFSETBIAS_V                                31:0 /* RWXFF */
#define NV_PGRAPH_ZOFFSETBIAS_V_097                      0x00000000 /* RWC-V */
#define NV_PGRAPH_ZOFFSETFACTOR                          0x00401AA8 /* RW-4R */
#define NV_PGRAPH_ZOFFSETFACTOR_BUNDLE                   0x000000AA /* ----B */
#define NV_PGRAPH_ZOFFSETFACTOR_V                              31:0 /* RWXFF */
#define NV_PGRAPH_ZOFFSETFACTOR_V_097                    0x00000000 /* RWC-V */
#define NV_PGRAPH_EYEVEC0                                0x00401AAC /* RW-4R */
#define NV_PGRAPH_EYEVEC0_BUNDLE                         0x000000AB /* ----B */
#define NV_PGRAPH_EYEVEC0_V                                    31:0 /* RWXFF */
#define NV_PGRAPH_EYEVEC0_V_097                          0x00000000 /* RWC-V */
#define NV_PGRAPH_EYEVEC1                                0x00401AB0 /* RW-4R */
#define NV_PGRAPH_EYEVEC1_BUNDLE                         0x000000AC /* ----B */
#define NV_PGRAPH_EYEVEC1_V                                    31:0 /* RWXFF */
#define NV_PGRAPH_EYEVEC1_V_097                          0x00000000 /* RWC-V */
#define NV_PGRAPH_EYEVEC2                                0x00401AB4 /* RW-4R */
#define NV_PGRAPH_EYEVEC2_BUNDLE                         0x000000AD /* ----B */
#define NV_PGRAPH_EYEVEC2_V                                    31:0 /* RWXFF */
#define NV_PGRAPH_EYEVEC2_V_097                          0x00000000 /* RWC-V */
#define NV_PGRAPH_STIPPLE0                               0x00401C00 /* RW-4R */
#define NV_PGRAPH_STIPPLE0_BUNDLE                        0x00000100 /* ----B */
#define NV_PGRAPH_STIPPLE0_V                                   31:0 /* RWXUF */
#define NV_PGRAPH_STIPPLE0_V_097                         0x00000000 /* RWC-V */
#define NV_PGRAPH_STIPPLE1                               0x00401C04 /* RW-4R */
#define NV_PGRAPH_STIPPLE1_BUNDLE                        0x00000101 /* ----B */
#define NV_PGRAPH_STIPPLE1_V                                   31:0 /* RWXUF */
#define NV_PGRAPH_STIPPLE1_V_097                         0x00000000 /* RWC-V */
#define NV_PGRAPH_STIPPLE2                               0x00401C08 /* RW-4R */
#define NV_PGRAPH_STIPPLE2_BUNDLE                        0x00000102 /* ----B */
#define NV_PGRAPH_STIPPLE2_V                                   31:0 /* RWXUF */
#define NV_PGRAPH_STIPPLE2_V_097                         0x00000000 /* RWC-V */
#define NV_PGRAPH_STIPPLE3                               0x00401C0C /* RW-4R */
#define NV_PGRAPH_STIPPLE3_BUNDLE                        0x00000103 /* ----B */
#define NV_PGRAPH_STIPPLE3_V                                   31:0 /* RWXUF */
#define NV_PGRAPH_STIPPLE3_V_097                         0x00000000 /* RWC-V */
#define NV_PGRAPH_STIPPLE4                               0x00401C10 /* RW-4R */
#define NV_PGRAPH_STIPPLE4_BUNDLE                        0x00000104 /* ----B */
#define NV_PGRAPH_STIPPLE4_V                                   31:0 /* RWXUF */
#define NV_PGRAPH_STIPPLE4_V_097                         0x00000000 /* RWC-V */
#define NV_PGRAPH_STIPPLE5                               0x00401C14 /* RW-4R */
#define NV_PGRAPH_STIPPLE5_BUNDLE                        0x00000105 /* ----B */
#define NV_PGRAPH_STIPPLE5_V                                   31:0 /* RWXUF */
#define NV_PGRAPH_STIPPLE5_V_097                         0x00000000 /* RWC-V */
#define NV_PGRAPH_STIPPLE6                               0x00401C18 /* RW-4R */
#define NV_PGRAPH_STIPPLE6_BUNDLE                        0x00000106 /* ----B */
#define NV_PGRAPH_STIPPLE6_V                                   31:0 /* RWXUF */
#define NV_PGRAPH_STIPPLE6_V_097                         0x00000000 /* RWC-V */
#define NV_PGRAPH_STIPPLE7                               0x00401C1C /* RW-4R */
#define NV_PGRAPH_STIPPLE7_BUNDLE                        0x00000107 /* ----B */
#define NV_PGRAPH_STIPPLE7_V                                   31:0 /* RWXUF */
#define NV_PGRAPH_STIPPLE7_V_097                         0x00000000 /* RWC-V */
#define NV_PGRAPH_STIPPLE8                               0x00401C20 /* RW-4R */
#define NV_PGRAPH_STIPPLE8_BUNDLE                        0x00000108 /* ----B */
#define NV_PGRAPH_STIPPLE8_V                                   31:0 /* RWXUF */
#define NV_PGRAPH_STIPPLE8_V_097                         0x00000000 /* RWC-V */
#define NV_PGRAPH_STIPPLE9                               0x00401C24 /* RW-4R */
#define NV_PGRAPH_STIPPLE9_BUNDLE                        0x00000109 /* ----B */
#define NV_PGRAPH_STIPPLE9_V                                   31:0 /* RWXUF */
#define NV_PGRAPH_STIPPLE9_V_097                         0x00000000 /* RWC-V */
#define NV_PGRAPH_STIPPLE10                              0x00401C28 /* RW-4R */
#define NV_PGRAPH_STIPPLE10_BUNDLE                       0x0000010A /* ----B */
#define NV_PGRAPH_STIPPLE10_V                                  31:0 /* RWXUF */
#define NV_PGRAPH_STIPPLE10_V_097                        0x00000000 /* RWC-V */
#define NV_PGRAPH_STIPPLE11                              0x00401C2C /* RW-4R */
#define NV_PGRAPH_STIPPLE11_BUNDLE                       0x0000010B /* ----B */
#define NV_PGRAPH_STIPPLE11_V                                  31:0 /* RWXUF */
#define NV_PGRAPH_STIPPLE11_V_097                        0x00000000 /* RWC-V */
#define NV_PGRAPH_STIPPLE12                              0x00401C30 /* RW-4R */
#define NV_PGRAPH_STIPPLE12_BUNDLE                       0x0000010C /* ----B */
#define NV_PGRAPH_STIPPLE12_V                                  31:0 /* RWXUF */
#define NV_PGRAPH_STIPPLE12_V_097                        0x00000000 /* RWC-V */
#define NV_PGRAPH_STIPPLE13                              0x00401C34 /* RW-4R */
#define NV_PGRAPH_STIPPLE13_BUNDLE                       0x0000010D /* ----B */
#define NV_PGRAPH_STIPPLE13_V                                  31:0 /* RWXUF */
#define NV_PGRAPH_STIPPLE13_V_097                        0x00000000 /* RWC-V */
#define NV_PGRAPH_STIPPLE14                              0x00401C38 /* RW-4R */
#define NV_PGRAPH_STIPPLE14_BUNDLE                       0x0000010E /* ----B */
#define NV_PGRAPH_STIPPLE14_V                                  31:0 /* RWXUF */
#define NV_PGRAPH_STIPPLE14_V_097                        0x00000000 /* RWC-V */
#define NV_PGRAPH_STIPPLE15                              0x00401C3C /* RW-4R */
#define NV_PGRAPH_STIPPLE15_BUNDLE                       0x0000010F /* ----B */
#define NV_PGRAPH_STIPPLE15_V                                  31:0 /* RWXUF */
#define NV_PGRAPH_STIPPLE15_V_097                        0x00000000 /* RWC-V */
#define NV_PGRAPH_STIPPLE16                              0x00401C40 /* RW-4R */
#define NV_PGRAPH_STIPPLE16_BUNDLE                       0x00000110 /* ----B */
#define NV_PGRAPH_STIPPLE16_V                                  31:0 /* RWXUF */
#define NV_PGRAPH_STIPPLE16_V_097                        0x00000000 /* RWC-V */
#define NV_PGRAPH_STIPPLE17                              0x00401C44 /* RW-4R */
#define NV_PGRAPH_STIPPLE17_BUNDLE                       0x00000111 /* ----B */
#define NV_PGRAPH_STIPPLE17_V                                  31:0 /* RWXUF */
#define NV_PGRAPH_STIPPLE17_V_097                        0x00000000 /* RWC-V */
#define NV_PGRAPH_STIPPLE18                              0x00401C48 /* RW-4R */
#define NV_PGRAPH_STIPPLE18_BUNDLE                       0x00000112 /* ----B */
#define NV_PGRAPH_STIPPLE18_V                                  31:0 /* RWXUF */
#define NV_PGRAPH_STIPPLE18_V_097                        0x00000000 /* RWC-V */
#define NV_PGRAPH_STIPPLE19                              0x00401C4C /* RW-4R */
#define NV_PGRAPH_STIPPLE19_BUNDLE                       0x00000113 /* ----B */
#define NV_PGRAPH_STIPPLE19_V                                  31:0 /* RWXUF */
#define NV_PGRAPH_STIPPLE19_V_097                        0x00000000 /* RWC-V */
#define NV_PGRAPH_STIPPLE20                              0x00401C50 /* RW-4R */
#define NV_PGRAPH_STIPPLE20_BUNDLE                       0x00000114 /* ----B */
#define NV_PGRAPH_STIPPLE20_V                                  31:0 /* RWXUF */
#define NV_PGRAPH_STIPPLE20_V_097                        0x00000000 /* RWC-V */
#define NV_PGRAPH_STIPPLE21                              0x00401C54 /* RW-4R */
#define NV_PGRAPH_STIPPLE21_BUNDLE                       0x00000115 /* ----B */
#define NV_PGRAPH_STIPPLE21_V                                  31:0 /* RWXUF */
#define NV_PGRAPH_STIPPLE21_V_097                        0x00000000 /* RWC-V */
#define NV_PGRAPH_STIPPLE22                              0x00401C58 /* RW-4R */
#define NV_PGRAPH_STIPPLE22_BUNDLE                       0x00000116 /* ----B */
#define NV_PGRAPH_STIPPLE22_V                                  31:0 /* RWXUF */
#define NV_PGRAPH_STIPPLE22_V_097                        0x00000000 /* RWC-V */
#define NV_PGRAPH_STIPPLE23                              0x00401C5C /* RW-4R */
#define NV_PGRAPH_STIPPLE23_BUNDLE                       0x00000117 /* ----B */
#define NV_PGRAPH_STIPPLE23_V                                  31:0 /* RWXUF */
#define NV_PGRAPH_STIPPLE23_V_097                        0x00000000 /* RWC-V */
#define NV_PGRAPH_STIPPLE24                              0x00401C60 /* RW-4R */
#define NV_PGRAPH_STIPPLE24_BUNDLE                       0x00000118 /* ----B */
#define NV_PGRAPH_STIPPLE24_V                                  31:0 /* RWXUF */
#define NV_PGRAPH_STIPPLE24_V_097                        0x00000000 /* RWC-V */
#define NV_PGRAPH_STIPPLE25                              0x00401C64 /* RW-4R */
#define NV_PGRAPH_STIPPLE25_BUNDLE                       0x00000119 /* ----B */
#define NV_PGRAPH_STIPPLE25_V                                  31:0 /* RWXUF */
#define NV_PGRAPH_STIPPLE25_V_097                        0x00000000 /* RWC-V */
#define NV_PGRAPH_STIPPLE26                              0x00401C68 /* RW-4R */
#define NV_PGRAPH_STIPPLE26_BUNDLE                       0x0000011A /* ----B */
#define NV_PGRAPH_STIPPLE26_V                                  31:0 /* RWXUF */
#define NV_PGRAPH_STIPPLE26_V_097                        0x00000000 /* RWC-V */
#define NV_PGRAPH_STIPPLE27                              0x00401C6C /* RW-4R */
#define NV_PGRAPH_STIPPLE27_BUNDLE                       0x0000011B /* ----B */
#define NV_PGRAPH_STIPPLE27_V                                  31:0 /* RWXUF */
#define NV_PGRAPH_STIPPLE27_V_097                        0x00000000 /* RWC-V */
#define NV_PGRAPH_STIPPLE28                              0x00401C70 /* RW-4R */
#define NV_PGRAPH_STIPPLE28_BUNDLE                       0x0000011C /* ----B */
#define NV_PGRAPH_STIPPLE28_V                                  31:0 /* RWXUF */
#define NV_PGRAPH_STIPPLE28_V_097                        0x00000000 /* RWC-V */
#define NV_PGRAPH_STIPPLE29                              0x00401C74 /* RW-4R */
#define NV_PGRAPH_STIPPLE29_BUNDLE                       0x0000011D /* ----B */
#define NV_PGRAPH_STIPPLE29_V                                  31:0 /* RWXUF */
#define NV_PGRAPH_STIPPLE29_V_097                        0x00000000 /* RWC-V */
#define NV_PGRAPH_STIPPLE30                              0x00401C78 /* RW-4R */
#define NV_PGRAPH_STIPPLE30_BUNDLE                       0x0000011E /* ----B */
#define NV_PGRAPH_STIPPLE30_V                                  31:0 /* RWXUF */
#define NV_PGRAPH_STIPPLE30_V_097                        0x00000000 /* RWC-V */
#define NV_PGRAPH_STIPPLE31                              0x00401C7C /* RW-4R */
#define NV_PGRAPH_STIPPLE31_BUNDLE                       0x0000011F /* ----B */
#define NV_PGRAPH_STIPPLE31_V                                  31:0 /* RWXUF */
#define NV_PGRAPH_STIPPLE31_V_097                        0x00000000 /* RWC-V */
#define NV_PGRAPH_BEGINPATCH0                            0x00400F90 /* RW-4R */
#define NV_PGRAPH_BEGINPATCH0_POSITION_DEGREE                   3:0 /* RWXUF */
#define NV_PGRAPH_BEGINPATCH0_POSITION_DEGREE_097        0x00000001 /* RWC-V */
#define NV_PGRAPH_BEGINPATCH0_PARAM1_DEGREE                     7:4 /* RWXUF */
#define NV_PGRAPH_BEGINPATCH0_PARAM1_DEGREE_097          0x00000000 /* RWC-V */
#define NV_PGRAPH_BEGINPATCH0_PARAM2_DEGREE                    11:8 /* RWXUF */
#define NV_PGRAPH_BEGINPATCH0_PARAM2_DEGREE_097          0x00000000 /* RWC-V */
#define NV_PGRAPH_BEGINPATCH0_PARAM3_DEGREE                   15:12 /* RWXUF */
#define NV_PGRAPH_BEGINPATCH0_PARAM3_DEGREE_097          0x00000000 /* RWC-V */
#define NV_PGRAPH_BEGINPATCH0_PARAM4_DEGREE                   19:16 /* RWXUF */
#define NV_PGRAPH_BEGINPATCH0_PARAM4_DEGREE_097          0x00000000 /* RWC-V */
#define NV_PGRAPH_BEGINPATCH0_PARAM5_DEGREE                   23:20 /* RWXUF */
#define NV_PGRAPH_BEGINPATCH0_PARAM5_DEGREE_097          0x00000000 /* RWC-V */
#define NV_PGRAPH_BEGINPATCH0_PARAM6_DEGREE                   27:24 /* RWXUF */
#define NV_PGRAPH_BEGINPATCH0_PARAM6_DEGREE_097          0x00000000 /* RWC-V */
#define NV_PGRAPH_BEGINPATCH0_PARAM7_DEGREE                   31:28 /* RWXUF */
#define NV_PGRAPH_BEGINPATCH0_PARAM7_DEGREE_097          0x00000000 /* RWC-V */
#define NV_PGRAPH_BEGINPATCH1                            0x00400F94 /* RW-4R */
#define NV_PGRAPH_BEGINPATCH1_PARAM8_DEGREE                     3:0 /* RWXUF */
#define NV_PGRAPH_BEGINPATCH1_PARAM8_DEGREE_097          0x00000000 /* RWC-V */
#define NV_PGRAPH_BEGINPATCH1_PARAM9_DEGREE                     7:4 /* RWXUF */
#define NV_PGRAPH_BEGINPATCH1_PARAM9_DEGREE_097          0x00000000 /* RWC-V */
#define NV_PGRAPH_BEGINPATCH1_PARAM10_DEGREE                   11:8 /* RWXUF */
#define NV_PGRAPH_BEGINPATCH1_PARAM10_DEGREE_097         0x00000000 /* RWC-V */
#define NV_PGRAPH_BEGINPATCH1_PARAM11_DEGREE                  15:12 /* RWXUF */
#define NV_PGRAPH_BEGINPATCH1_PARAM11_DEGREE_097         0x00000000 /* RWC-V */
#define NV_PGRAPH_BEGINPATCH1_PARAM12_DEGREE                  19:16 /* RWXUF */
#define NV_PGRAPH_BEGINPATCH1_PARAM12_DEGREE_097         0x00000000 /* RWC-V */
#define NV_PGRAPH_BEGINPATCH1_PARAM13_DEGREE                  23:20 /* RWXUF */
#define NV_PGRAPH_BEGINPATCH1_PARAM13_DEGREE_097         0x00000000 /* RWC-V */
#define NV_PGRAPH_BEGINPATCH1_PARAM14_DEGREE                  27:24 /* RWXUF */
#define NV_PGRAPH_BEGINPATCH1_PARAM14_DEGREE_097         0x00000000 /* RWC-V */
#define NV_PGRAPH_BEGINPATCH1_PARAM15_DEGREE                  31:28 /* RWXUF */
#define NV_PGRAPH_BEGINPATCH1_PARAM15_DEGREE_097         0x00000000 /* RWC-V */
#define NV_PGRAPH_BEGINPATCH2                            0x00400F98 /* RW-4R */
#define NV_PGRAPH_BEGINPATCH2_SWATCH_ROWS                       7:0 /* RWXUF */
#define NV_PGRAPH_BEGINPATCH2_SWATCH_ROWS_097            0x00000000 /* RWC-V */
#define NV_PGRAPH_BEGINPATCH2_SWATCH_COLS                      15:8 /* RWXUF */
#define NV_PGRAPH_BEGINPATCH2_SWATCH_COLS_097            0x00000000 /* RWC-V */
#define NV_PGRAPH_BEGINPATCH2_SWATCH_SIZE                     20:16 /* RWXUF */
#define NV_PGRAPH_BEGINPATCH2_SWATCH_SIZE_097            0x00000004 /* RWC-V */
#define NV_PGRAPH_BEGINPATCH2_PARTIAL_SWATCH_WIDTH            25:21 /* RWXUF */
#define NV_PGRAPH_BEGINPATCH2_PARTIAL_SWATCH_WIDTH_097   0x00000000 /* RWC-V */
#define NV_PGRAPH_BEGINPATCH2_PARTIAL_SWATCH_HEIGHT           30:26 /* RWXUF */
#define NV_PGRAPH_BEGINPATCH2_PARTIAL_SWATCH_HEIGHT_097  0x00000000 /* RWC-V */
#define NV_PGRAPH_BEGINPATCH3                            0x00400F9C /* RW-4R */
#define NV_PGRAPH_BEGINPATCH3_ROW_TRNS                          2:0 /* RWXVF */
#define NV_PGRAPH_BEGINPATCH3_ROW_TRNS_NONE              0x00000000 /* RW--V */
#define NV_PGRAPH_BEGINPATCH3_ROW_TRNS_FIRST             0x00000001 /* RW--V */
#define NV_PGRAPH_BEGINPATCH3_ROW_TRNS_LAST              0x00000002 /* RW--V */
#define NV_PGRAPH_BEGINPATCH3_ROW_TRNS_FIRST_AND_LAST    0x00000003 /* RW--V */
#define NV_PGRAPH_BEGINPATCH3_ROW_TRNS_REV_FIRST         0x00000005 /* RW--V */
#define NV_PGRAPH_BEGINPATCH3_ROW_TRNS_REV_LAST          0x00000006 /* RW--V */
#define NV_PGRAPH_BEGINPATCH3_ROW_TRNS_097               0x00000000 /* RWC-V */
#define NV_PGRAPH_BEGINPATCH3_COL_TRNS                          5:3 /* RWXVF */
#define NV_PGRAPH_BEGINPATCH3_COL_TRNS_NONE              0x00000000 /* RW--V */
#define NV_PGRAPH_BEGINPATCH3_COL_TRNS_FIRST             0x00000001 /* RW--V */
#define NV_PGRAPH_BEGINPATCH3_COL_TRNS_LAST              0x00000002 /* RW--V */
#define NV_PGRAPH_BEGINPATCH3_COL_TRNS_FIRST_AND_LAST    0x00000003 /* RW--V */
#define NV_PGRAPH_BEGINPATCH3_COL_TRNS_REV_FIRST         0x00000005 /* RW--V */
#define NV_PGRAPH_BEGINPATCH3_COL_TRNS_REV_LAST          0x00000006 /* RW--V */
#define NV_PGRAPH_BEGINPATCH3_COL_TRNS_097               0x00000000 /* RWC-V */
#define NV_PGRAPH_BEGINPATCH3_PRIM                            15:14 /* RWXVF */
#define NV_PGRAPH_BEGINPATCH3_PRIM_TRI_STRIP             0x00000000 /* RW--V */
#define NV_PGRAPH_BEGINPATCH3_PRIM_REVERSED_TRI_STRIP    0x00000001 /* RW--V */
#define NV_PGRAPH_BEGINPATCH3_PRIM_BW_TRI_STRIP          0x00000002 /* RW--V */
#define NV_PGRAPH_BEGINPATCH3_PRIM_BW_REVERSED_TRI_STRIP 0x00000003 /* RW--V */
#define NV_PGRAPH_BEGINPATCH3_PRIM_097                   0x00000000 /* RWC-V */
#define NV_PGRAPH_BEGINPATCH3_TESS                            16:16 /* RWXVF */
#define NV_PGRAPH_BEGINPATCH3_TESS_ADAPTIVE_STITCH       0x00000000 /* RW--V */
#define NV_PGRAPH_BEGINPATCH3_TESS_FIXED_STITCH          0x00000001 /* RW--V */
#define NV_PGRAPH_BEGINPATCH3_TESS_097                   0x00000000 /* RWC-V */
#define NV_PGRAPH_CURVE                                  0x00400FA0 /* RW-4R */
#define NV_PGRAPH_CURVE_CMD                                     2:0 /* RWXVF */
#define NV_PGRAPH_CURVE_CMD_END_CURVE_DATA               0x00000000 /* RW--V */
#define NV_PGRAPH_CURVE_CMD_STRIP_CURVE                  0x00000001 /* RW--V */
#define NV_PGRAPH_CURVE_CMD_LEFT_GUARD_CURVE             0x00000002 /* RW--V */
#define NV_PGRAPH_CURVE_CMD_RIGHT_GUARD_CURVE            0x00000003 /* RW--V */
#define NV_PGRAPH_CURVE_CMD_OUTER_TRANSITION_CURVE       0x00000004 /* RW--V */
#define NV_PGRAPH_CURVE_CMD_INNER_TRANSITION_CURVE       0x00000005 /* RW--V */
#define NV_PGRAPH_CURVE_CMD_OUTER_END_PT                 0x00000006 /* RW--V */
#define NV_PGRAPH_CURVE_CMD_INNER_END_PT                 0x00000007 /* RW--V */
#define NV_PGRAPH_CURVE_CMD_097                          0x00000000 /* RWC-V */
#define NV_PGRAPH_BEGINTRANS0                            0x00400FA4 /* RW-4R */
#define NV_PGRAPH_BEGINTRANS0_POSITION_DEGREE                   3:0 /* RWXUF */
#define NV_PGRAPH_BEGINTRANS0_POSITION_DEGREE_097        0x00000001 /* RWC-V */
#define NV_PGRAPH_BEGINTRANS0_PARAM1_DEGREE                     7:4 /* RWXUF */
#define NV_PGRAPH_BEGINTRANS0_PARAM1_DEGREE_097          0x00000000 /* RWC-V */
#define NV_PGRAPH_BEGINTRANS0_PARAM2_DEGREE                    11:8 /* RWXUF */
#define NV_PGRAPH_BEGINTRANS0_PARAM2_DEGREE_097          0x00000000 /* RWC-V */
#define NV_PGRAPH_BEGINTRANS0_PARAM3_DEGREE                   15:12 /* RWXUF */
#define NV_PGRAPH_BEGINTRANS0_PARAM3_DEGREE_097          0x00000000 /* RWC-V */
#define NV_PGRAPH_BEGINTRANS0_PARAM4_DEGREE                   19:16 /* RWXUF */
#define NV_PGRAPH_BEGINTRANS0_PARAM4_DEGREE_097          0x00000000 /* RWC-V */
#define NV_PGRAPH_BEGINTRANS0_PARAM5_DEGREE                   23:20 /* RWXUF */
#define NV_PGRAPH_BEGINTRANS0_PARAM5_DEGREE_097          0x00000000 /* RWC-V */
#define NV_PGRAPH_BEGINTRANS0_PARAM6_DEGREE                   27:24 /* RWXUF */
#define NV_PGRAPH_BEGINTRANS0_PARAM6_DEGREE_097          0x00000000 /* RWC-V */
#define NV_PGRAPH_BEGINTRANS0_PARAM7_DEGREE                   31:28 /* RWXUF */
#define NV_PGRAPH_BEGINTRANS0_PARAM7_DEGREE_097          0x00000000 /* RWC-V */
#define NV_PGRAPH_BEGINTRANS1                            0x00400FA8 /* RW-4R */
#define NV_PGRAPH_BEGINTRANS1_PARAM8_DEGREE                     3:0 /* RWXUF */
#define NV_PGRAPH_BEGINTRANS1_PARAM8_DEGREE_097          0x00000000 /* RWC-V */
#define NV_PGRAPH_BEGINTRANS1_PARAM9_DEGREE                     7:4 /* RWXUF */
#define NV_PGRAPH_BEGINTRANS1_PARAM9_DEGREE_097          0x00000000 /* RWC-V */
#define NV_PGRAPH_BEGINTRANS1_PARAM10_DEGREE                   11:8 /* RWXUF */
#define NV_PGRAPH_BEGINTRANS1_PARAM10_DEGREE_097         0x00000000 /* RWC-V */
#define NV_PGRAPH_BEGINTRANS1_PARAM11_DEGREE                  15:12 /* RWXUF */
#define NV_PGRAPH_BEGINTRANS1_PARAM11_DEGREE_097         0x00000000 /* RWC-V */
#define NV_PGRAPH_BEGINTRANS1_PARAM12_DEGREE                  19:16 /* RWXUF */
#define NV_PGRAPH_BEGINTRANS1_PARAM12_DEGREE_097         0x00000000 /* RWC-V */
#define NV_PGRAPH_BEGINTRANS1_PARAM13_DEGREE                  23:20 /* RWXUF */
#define NV_PGRAPH_BEGINTRANS1_PARAM13_DEGREE_097         0x00000000 /* RWC-V */
#define NV_PGRAPH_BEGINTRANS1_PARAM14_DEGREE                  27:24 /* RWXUF */
#define NV_PGRAPH_BEGINTRANS1_PARAM14_DEGREE_097         0x00000000 /* RWC-V */
#define NV_PGRAPH_BEGINTRANS1_PARAM15_DEGREE                  31:28 /* RWXUF */
#define NV_PGRAPH_BEGINTRANS1_PARAM15_DEGREE_097         0x00000000 /* RWC-V */
#define NV_PGRAPH_CSV0_D                                 0x00400FB4 /* RW-4R */
#define NV_PGRAPH_CSV0_D_FOG_MODE                             21:21 /* RWXVF */
#define NV_PGRAPH_CSV0_D_FOG_MODE_LINEAR                 0x00000000 /* RW--V */
#define NV_PGRAPH_CSV0_D_FOG_MODE_EXP                    0x00000001 /* RW--V */
#define NV_PGRAPH_CSV0_D_FOG_MODE_097                    0x00000000 /* RWC-V */
#define NV_PGRAPH_CSV0_D_FOGGENMODE                           24:22 /* RWXVF */
#define NV_PGRAPH_CSV0_D_FOGGENMODE_SPEC_ALPHA           0x00000000 /* RW--V */
#define NV_PGRAPH_CSV0_D_FOGGENMODE_RADIAL               0x00000001 /* RW--V */
#define NV_PGRAPH_CSV0_D_FOGGENMODE_PLANAR               0x00000002 /* RW--V */
#define NV_PGRAPH_CSV0_D_FOGGENMODE_ABS_PLANAR           0x00000003 /* RW--V */
#define NV_PGRAPH_CSV0_D_FOGGENMODE_FOG_X                0x00000004 /* RW--V */
#define NV_PGRAPH_CSV0_D_FOGGENMODE_097                  0x00000000 /* RWC-V */
#define NV_PGRAPH_CSV0_D_FOGENABLE                            19:19 /* RWXVF */
#define NV_PGRAPH_CSV0_D_FOGENABLE_FALSE                 0x00000000 /* RW--V */
#define NV_PGRAPH_CSV0_D_FOGENABLE_TRUE                  0x00000001 /* RW--V */
#define NV_PGRAPH_CSV0_D_FOGENABLE_097                   0x00000000 /* RWC-V */
#define NV_PGRAPH_CSV0_D_POINTPARAMSENABLE                    25:25 /* RWXVF */
#define NV_PGRAPH_CSV0_D_POINTPARAMSENABLE_FALSE         0x00000000 /* RW--V */
#define NV_PGRAPH_CSV0_D_POINTPARAMSENABLE_TRUE          0x00000001 /* RW--V */
#define NV_PGRAPH_CSV0_D_POINTPARAMSENABLE_097           0x00000000 /* RWC-V */
#define NV_PGRAPH_CSV0_D_SKIN                                 28:26 /* RWXVF */
#define NV_PGRAPH_CSV0_D_SKIN_OFF                        0x00000000 /* RW--V */
#define NV_PGRAPH_CSV0_D_SKIN_2G                         0x00000001 /* RW--V */
#define NV_PGRAPH_CSV0_D_SKIN_2                          0x00000002 /* RW--V */
#define NV_PGRAPH_CSV0_D_SKIN_3G                         0x00000003 /* RW--V */
#define NV_PGRAPH_CSV0_D_SKIN_3                          0x00000004 /* RW--V */
#define NV_PGRAPH_CSV0_D_SKIN_4G                         0x00000005 /* RW--V */
#define NV_PGRAPH_CSV0_D_SKIN_4                          0x00000006 /* RW--V */
#define NV_PGRAPH_CSV0_D_SKIN_097                        0x00000000 /* RWC-V */
#define NV_PGRAPH_CSV0_D_LIGHT0                                 1:0 /* RWXVF */
#define NV_PGRAPH_CSV0_D_LIGHT0_OFF                      0x00000000 /* RW--V */
#define NV_PGRAPH_CSV0_D_LIGHT0_INFINITE                 0x00000001 /* RW--V */
#define NV_PGRAPH_CSV0_D_LIGHT0_LOCAL                    0x00000002 /* RW--V */
#define NV_PGRAPH_CSV0_D_LIGHT0_SPOT                     0x00000003 /* RW--V */
#define NV_PGRAPH_CSV0_D_LIGHT0_097                      0x00000000 /* RWC-V */
#define NV_PGRAPH_CSV0_D_LIGHT1                                 3:2 /* RWXVF */
#define NV_PGRAPH_CSV0_D_LIGHT1_OFF                      0x00000000 /* RW--V */
#define NV_PGRAPH_CSV0_D_LIGHT1_INFINITE                 0x00000001 /* RW--V */
#define NV_PGRAPH_CSV0_D_LIGHT1_LOCAL                    0x00000002 /* RW--V */
#define NV_PGRAPH_CSV0_D_LIGHT1_SPOT                     0x00000003 /* RW--V */
#define NV_PGRAPH_CSV0_D_LIGHT1_097                      0x00000000 /* RWC-V */
#define NV_PGRAPH_CSV0_D_LIGHT2                                 5:4 /* RWXVF */
#define NV_PGRAPH_CSV0_D_LIGHT2_OFF                      0x00000000 /* RW--V */
#define NV_PGRAPH_CSV0_D_LIGHT2_INFINITE                 0x00000001 /* RW--V */
#define NV_PGRAPH_CSV0_D_LIGHT2_LOCAL                    0x00000002 /* RW--V */
#define NV_PGRAPH_CSV0_D_LIGHT2_SPOT                     0x00000003 /* RW--V */
#define NV_PGRAPH_CSV0_D_LIGHT2_097                      0x00000000 /* RWC-V */
#define NV_PGRAPH_CSV0_D_LIGHT3                                 7:6 /* RWXVF */
#define NV_PGRAPH_CSV0_D_LIGHT3_OFF                      0x00000000 /* RW--V */
#define NV_PGRAPH_CSV0_D_LIGHT3_INFINITE                 0x00000001 /* RW--V */
#define NV_PGRAPH_CSV0_D_LIGHT3_LOCAL                    0x00000002 /* RW--V */
#define NV_PGRAPH_CSV0_D_LIGHT3_SPOT                     0x00000003 /* RW--V */
#define NV_PGRAPH_CSV0_D_LIGHT3_097                      0x00000000 /* RWC-V */
#define NV_PGRAPH_CSV0_D_LIGHT4                                 9:8 /* RWXVF */
#define NV_PGRAPH_CSV0_D_LIGHT4_OFF                      0x00000000 /* RW--V */
#define NV_PGRAPH_CSV0_D_LIGHT4_INFINITE                 0x00000001 /* RW--V */
#define NV_PGRAPH_CSV0_D_LIGHT4_LOCAL                    0x00000002 /* RW--V */
#define NV_PGRAPH_CSV0_D_LIGHT4_SPOT                     0x00000003 /* RW--V */
#define NV_PGRAPH_CSV0_D_LIGHT4_097                      0x00000000 /* RWC-V */
#define NV_PGRAPH_CSV0_D_LIGHT5                               11:10 /* RWXVF */
#define NV_PGRAPH_CSV0_D_LIGHT5_OFF                      0x00000000 /* RW--V */
#define NV_PGRAPH_CSV0_D_LIGHT5_INFINITE                 0x00000001 /* RW--V */
#define NV_PGRAPH_CSV0_D_LIGHT5_LOCAL                    0x00000002 /* RW--V */
#define NV_PGRAPH_CSV0_D_LIGHT5_SPOT                     0x00000003 /* RW--V */
#define NV_PGRAPH_CSV0_D_LIGHT5_097                      0x00000000 /* RWC-V */
#define NV_PGRAPH_CSV0_D_LIGHT6                               13:12 /* RWXVF */
#define NV_PGRAPH_CSV0_D_LIGHT6_OFF                      0x00000000 /* RW--V */
#define NV_PGRAPH_CSV0_D_LIGHT6_INFINITE                 0x00000001 /* RW--V */
#define NV_PGRAPH_CSV0_D_LIGHT6_LOCAL                    0x00000002 /* RW--V */
#define NV_PGRAPH_CSV0_D_LIGHT6_SPOT                     0x00000003 /* RW--V */
#define NV_PGRAPH_CSV0_D_LIGHT6_097                      0x00000000 /* RWC-V */
#define NV_PGRAPH_CSV0_D_LIGHT7                               15:14 /* RWXVF */
#define NV_PGRAPH_CSV0_D_LIGHT7_OFF                      0x00000000 /* RW--V */
#define NV_PGRAPH_CSV0_D_LIGHT7_INFINITE                 0x00000001 /* RW--V */
#define NV_PGRAPH_CSV0_D_LIGHT7_LOCAL                    0x00000002 /* RW--V */
#define NV_PGRAPH_CSV0_D_LIGHT7_SPOT                     0x00000003 /* RW--V */
#define NV_PGRAPH_CSV0_D_LIGHT7_097                      0x00000000 /* RWC-V */
#define NV_PGRAPH_CSV0_D_TEXGEN_REF                           20:20 /* RWXVF */
#define NV_PGRAPH_CSV0_D_TEXGEN_REF_LOCAL_VIEWER         0x00000000 /* RW--V */
#define NV_PGRAPH_CSV0_D_TEXGEN_REF_INFINITE_VIEWER      0x00000001 /* RW--V */
#define NV_PGRAPH_CSV0_D_TEXGEN_REF_097                  0x00000000 /* RWC-V */
#define NV_PGRAPH_CSV0_D_PASSTHROUGH                          31:30 /* RWXVF */
#define NV_PGRAPH_CSV0_D_PASSTHROUGH_TRUE                0x00000001 /* RW--V */
#define NV_PGRAPH_CSV0_D_PASSTHROUGH_FALSE               0x00000000 /* RW--V */
#define NV_PGRAPH_CSV0_D_PASSTHROUGH_097                 0x00000000 /* RWC-V */
#define NV_PGRAPH_CSV0_D_MODE                                 31:30 /* RWXVF */
#define NV_PGRAPH_CSV0_D_MODE_FIXED                      0x00000000 /* RW--V */
#define NV_PGRAPH_CSV0_D_MODE_PROGRAM                    0x00000002 /* RW--V */
#define NV_PGRAPH_CSV0_D_MODE_097                        0x00000000 /* RWC-V */
#define NV_PGRAPH_CSV0_D_RANGE_MODE                           18:18 /* RWXVF */
#define NV_PGRAPH_CSV0_D_RANGE_MODE_USER                 0x00000000 /* RW--V */
#define NV_PGRAPH_CSV0_D_RANGE_MODE_PRIV                 0x00000001 /* RW--V */
#define NV_PGRAPH_CSV0_D_RANGE_MODE_097                  0x00000001 /* RWC-V */
#define NV_PGRAPH_CSV0_D_CHEOPS_STALL                         29:29 /* RWXVF */
#define NV_PGRAPH_CSV0_D_CHEOPS_STALL_READ_ONLY          0x00000000 /* RW--V */
#define NV_PGRAPH_CSV0_D_CHEOPS_STALL_READ_WRITE         0x00000001 /* RW--V */
#define NV_PGRAPH_CSV0_D_CHEOPS_STALL_097                0x00000000 /* RWC-V */
#define NV_PGRAPH_CSV0_C                                 0x00400FB8 /* RW-4R */
#define NV_PGRAPH_CSV0_C_EYETYPE_LOCAL                        30:30 /* RWXVF */
#define NV_PGRAPH_CSV0_C_EYETYPE_LOCAL_FALSE             0x00000000 /* RW--V */
#define NV_PGRAPH_CSV0_C_EYETYPE_LOCAL_TRUE              0x00000001 /* RW--V */
#define NV_PGRAPH_CSV0_C_EYETYPE_LOCAL_097               0x00000000 /* RWC-V */
#define NV_PGRAPH_CSV0_C_SOUT                                 17:17 /* RWXVF */
#define NV_PGRAPH_CSV0_C_SOUT_ZERO_OUT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CSV0_C_SOUT_PASSTHROUGH                0x00000001 /* RW--V */
#define NV_PGRAPH_CSV0_C_SOUT_097                        0x00000000 /* RWC-V */
#define NV_PGRAPH_CSV0_C_LIGHT_ATTENUATION                    28:28 /* RWXVF */
#define NV_PGRAPH_CSV0_C_LIGHT_ATTENUATION_INVERT        0x00000000 /* RW--V */
#define NV_PGRAPH_CSV0_C_LIGHT_ATTENUATION_NOT_INVERT    0x00000001 /* RW--V */
#define NV_PGRAPH_CSV0_C_LIGHT_ATTENUATION_097           0x00000000 /* RWC-V */
#define NV_PGRAPH_CSV0_C_SEPARATE_SPECULAR_ENABLE             18:18 /* RWXVF */
#define NV_PGRAPH_CSV0_C_SEPARATE_SPECULAR_ENABLE_FALSE  0x00000000 /* RW--V */
#define NV_PGRAPH_CSV0_C_SEPARATE_SPECULAR_ENABLE_TRUE   0x00000001 /* RW--V */
#define NV_PGRAPH_CSV0_C_SEPARATE_SPECULAR_ENABLE_097    0x00000000 /* RWC-V */
#define NV_PGRAPH_CSV0_C_EMISSION                             26:25 /* RWXVF */
#define NV_PGRAPH_CSV0_C_EMISSION_DISABLE                0x00000000 /* RW--V */
#define NV_PGRAPH_CSV0_C_EMISSION_DIFFUSE_VTX_COLOR      0x00000001 /* RW--V */
#define NV_PGRAPH_CSV0_C_EMISSION_SPECULAR_VTX_COLOR     0x00000002 /* RW--V */
#define NV_PGRAPH_CSV0_C_EMISSION_097                    0x00000000 /* RWC-V */
#define NV_PGRAPH_CSV0_C_AMBIENT                              24:23 /* RWXVF */
#define NV_PGRAPH_CSV0_C_AMBIENT_DISABLE                 0x00000000 /* RW--V */
#define NV_PGRAPH_CSV0_C_AMBIENT_DIFFUSE_VTX_COLOR       0x00000001 /* RW--V */
#define NV_PGRAPH_CSV0_C_AMBIENT_SPECULAR_VTX_COLOR      0x00000002 /* RW--V */
#define NV_PGRAPH_CSV0_C_AMBIENT_097                     0x00000000 /* RWC-V */
#define NV_PGRAPH_CSV0_C_DIFFUSE                              22:21 /* RWXVF */
#define NV_PGRAPH_CSV0_C_DIFFUSE_DISABLE                 0x00000000 /* RW--V */
#define NV_PGRAPH_CSV0_C_DIFFUSE_DIFFUSE_VTX_COLOR       0x00000001 /* RW--V */
#define NV_PGRAPH_CSV0_C_DIFFUSE_SPECULAR_VTX_COLOR      0x00000002 /* RW--V */
#define NV_PGRAPH_CSV0_C_DIFFUSE_097                     0x00000000 /* RWC-V */
#define NV_PGRAPH_CSV0_C_SPECULAR                             20:19 /* RWXVF */
#define NV_PGRAPH_CSV0_C_SPECULAR_DISABLE                0x00000000 /* RW--V */
#define NV_PGRAPH_CSV0_C_SPECULAR_DIFFUSE_VTX_COLOR      0x00000001 /* RW--V */
#define NV_PGRAPH_CSV0_C_SPECULAR_SPECULAR_VTX_COLOR     0x00000002 /* RW--V */
#define NV_PGRAPH_CSV0_C_SPECULAR_097                    0x00000000 /* RWC-V */
#define NV_PGRAPH_CSV0_C_BCK_EMSSN                              7:6 /* RWXVF */
#define NV_PGRAPH_CSV0_C_BCK_EMSSN_DISABLE               0x00000000 /* RW--V */
#define NV_PGRAPH_CSV0_C_BCK_EMSSN_DIFF_VTX_COLOR        0x00000001 /* RW--V */
#define NV_PGRAPH_CSV0_C_BCK_EMSSN_SPEC_VTX_COLOR        0x00000002 /* RW--V */
#define NV_PGRAPH_CSV0_C_BCK_EMSSN_097                   0x00000000 /* RWC-V */
#define NV_PGRAPH_CSV0_C_BCK_AMBNT                              5:4 /* RWXVF */
#define NV_PGRAPH_CSV0_C_BCK_AMBNT_DISABLE               0x00000000 /* RW--V */
#define NV_PGRAPH_CSV0_C_BCK_AMBNT_DIFF_VTX_COLOR        0x00000001 /* RW--V */
#define NV_PGRAPH_CSV0_C_BCK_AMBNT_SPEC_VTX_COLOR        0x00000002 /* RW--V */
#define NV_PGRAPH_CSV0_C_BCK_AMBNT_097                   0x00000000 /* RWC-V */
#define NV_PGRAPH_CSV0_C_BCK_DFFUS                              3:2 /* RWXVF */
#define NV_PGRAPH_CSV0_C_BCK_DFFUS_DISABLE               0x00000000 /* RW--V */
#define NV_PGRAPH_CSV0_C_BCK_DFFUS_DIFF_VTX_COLOR        0x00000001 /* RW--V */
#define NV_PGRAPH_CSV0_C_BCK_DFFUS_SPEC_VTX_COLOR        0x00000002 /* RW--V */
#define NV_PGRAPH_CSV0_C_BCK_DFFUS_097                   0x00000000 /* RWC-V */
#define NV_PGRAPH_CSV0_C_BCK_SPCLR                              1:0 /* RWXVF */
#define NV_PGRAPH_CSV0_C_BCK_SPCLR_DISABLE               0x00000000 /* RW--V */
#define NV_PGRAPH_CSV0_C_BCK_SPCLR_DIFF_VTX_COLOR        0x00000001 /* RW--V */
#define NV_PGRAPH_CSV0_C_BCK_SPCLR_SPEC_VTX_COLOR        0x00000002 /* RW--V */
#define NV_PGRAPH_CSV0_C_BCK_SPCLR_097                   0x00000000 /* RWC-V */
#define NV_PGRAPH_CSV0_C_LIGHTING                             31:31 /* RWXVF */
#define NV_PGRAPH_CSV0_C_LIGHTING_FALSE                  0x00000000 /* RW--V */
#define NV_PGRAPH_CSV0_C_LIGHTING_TRUE                   0x00000001 /* RW--V */
#define NV_PGRAPH_CSV0_C_LIGHTING_097                    0x00000000 /* RWC-V */
#define NV_PGRAPH_CSV0_C_NORMALIZATION_ENABLE                 27:27 /* RWXVF */
#define NV_PGRAPH_CSV0_C_NORMALIZATION_ENABLE_FALSE      0x00000000 /* RW--V */
#define NV_PGRAPH_CSV0_C_NORMALIZATION_ENABLE_TRUE       0x00000001 /* RW--V */
#define NV_PGRAPH_CSV0_C_NORMALIZATION_ENABLE_097        0x00000000 /* RWC-V */
#define NV_PGRAPH_CSV0_C_SPECULARENABLE                       16:16 /* RWXVF */
#define NV_PGRAPH_CSV0_C_SPECULARENABLE_FALSE            0x00000000 /* RW--V */
#define NV_PGRAPH_CSV0_C_SPECULARENABLE_TRUE             0x00000001 /* RW--V */
#define NV_PGRAPH_CSV0_C_SPECULARENABLE_097              0x00000000 /* RWC-V */
#define NV_PGRAPH_CSV0_C_CHEOPS_PROGRAM_START                  15:8 /* RWXUF */
#define NV_PGRAPH_CSV0_C_CHEOPS_PROGRAM_START_097        0x00000000 /* RWC-V */
#define NV_PGRAPH_CSV0_C_TWO_SIDED_LIGHTING                   29:29 /* RWXVF */
#define NV_PGRAPH_CSV0_C_TWO_SIDED_LIGHTING_FALSE        0x00000000 /* RW--V */
#define NV_PGRAPH_CSV0_C_TWO_SIDED_LIGHTING_TRUE         0x00000001 /* RW--V */
#define NV_PGRAPH_CSV0_C_TWO_SIDED_LIGHTING_097          0x00000000 /* RWC-V */
#define NV_PGRAPH_CSV1_B                                 0x00400FBC /* RW-4R */
#define NV_PGRAPH_CSV1_B_T2_S                                   6:4 /* RWXVF */
#define NV_PGRAPH_CSV1_B_T2_S_DISABLE                    0x00000000 /* RW--V */
#define NV_PGRAPH_CSV1_B_T2_S_NORMAL_MAP                 0x00000004 /* RW--V */
#define NV_PGRAPH_CSV1_B_T2_S_REFLECTION_MAP             0x00000005 /* RW--V */
#define NV_PGRAPH_CSV1_B_T2_S_EYE_LINEAR                 0x00000001 /* RW--V */
#define NV_PGRAPH_CSV1_B_T2_S_OBJECT_LINEAR              0x00000002 /* RW--V */
#define NV_PGRAPH_CSV1_B_T2_S_SPHERE_MAP                 0x00000003 /* RW--V */
#define NV_PGRAPH_CSV1_B_T2_S_097                        0x00000000 /* RWC-V */
#define NV_PGRAPH_CSV1_B_T2_T                                   9:7 /* RWXVF */
#define NV_PGRAPH_CSV1_B_T2_T_DISABLE                    0x00000000 /* RW--V */
#define NV_PGRAPH_CSV1_B_T2_T_NORMAL_MAP                 0x00000004 /* RW--V */
#define NV_PGRAPH_CSV1_B_T2_T_REFLECTION_MAP             0x00000005 /* RW--V */
#define NV_PGRAPH_CSV1_B_T2_T_EYE_LINEAR                 0x00000001 /* RW--V */
#define NV_PGRAPH_CSV1_B_T2_T_OBJECT_LINEAR              0x00000002 /* RW--V */
#define NV_PGRAPH_CSV1_B_T2_T_SPHERE_MAP                 0x00000003 /* RW--V */
#define NV_PGRAPH_CSV1_B_T2_T_097                        0x00000000 /* RWC-V */
#define NV_PGRAPH_CSV1_B_T2_R                                 12:10 /* RWXVF */
#define NV_PGRAPH_CSV1_B_T2_R_DISABLE                    0x00000000 /* RW--V */
#define NV_PGRAPH_CSV1_B_T2_R_NORMAL_MAP                 0x00000004 /* RW--V */
#define NV_PGRAPH_CSV1_B_T2_R_REFLECTION_MAP             0x00000005 /* RW--V */
#define NV_PGRAPH_CSV1_B_T2_R_EYE_LINEAR                 0x00000001 /* RW--V */
#define NV_PGRAPH_CSV1_B_T2_R_OBJECT_LINEAR              0x00000002 /* RW--V */
#define NV_PGRAPH_CSV1_B_T2_R_097                        0x00000000 /* RWC-V */
#define NV_PGRAPH_CSV1_B_T2_Q                                 15:13 /* RWXVF */
#define NV_PGRAPH_CSV1_B_T2_Q_DISABLE                    0x00000000 /* RW--V */
#define NV_PGRAPH_CSV1_B_T2_Q_EYE_LINEAR                 0x00000001 /* RW--V */
#define NV_PGRAPH_CSV1_B_T2_Q_OBJECT_LINEAR              0x00000002 /* RW--V */
#define NV_PGRAPH_CSV1_B_T2_Q_097                        0x00000000 /* RWC-V */
#define NV_PGRAPH_CSV1_B_T2_MODE                                1:1 /* RWXVF */
#define NV_PGRAPH_CSV1_B_T2_MODE_FALSE                   0x00000000 /* RW--V */
#define NV_PGRAPH_CSV1_B_T2_MODE_TRUE                    0x00000001 /* RW--V */
#define NV_PGRAPH_CSV1_B_T2_MODE_097                     0x00000000 /* RWC-V */
#define NV_PGRAPH_CSV1_B_T2_TEXTURE                             2:2 /* RWXVF */
#define NV_PGRAPH_CSV1_B_T2_TEXTURE_2D                   0x00000000 /* RW--V */
#define NV_PGRAPH_CSV1_B_T2_TEXTURE_3D                   0x00000001 /* RW--V */
#define NV_PGRAPH_CSV1_B_T2_TEXTURE_097                  0x00000000 /* RWC-V */
#define NV_PGRAPH_CSV1_B_T2_ENABLE                              0:0 /* RWXVF */
#define NV_PGRAPH_CSV1_B_T2_ENABLE_FALSE                 0x00000000 /* RW--V */
#define NV_PGRAPH_CSV1_B_T2_ENABLE_TRUE                  0x00000001 /* RW--V */
#define NV_PGRAPH_CSV1_B_T2_ENABLE_097                   0x00000000 /* RWC-V */
#define NV_PGRAPH_CSV1_B_T3_S                                 22:20 /* RWXVF */
#define NV_PGRAPH_CSV1_B_T3_S_DISABLE                    0x00000000 /* RW--V */
#define NV_PGRAPH_CSV1_B_T3_S_NORMAL_MAP                 0x00000004 /* RW--V */
#define NV_PGRAPH_CSV1_B_T3_S_REFLECTION_MAP             0x00000005 /* RW--V */
#define NV_PGRAPH_CSV1_B_T3_S_EYE_LINEAR                 0x00000001 /* RW--V */
#define NV_PGRAPH_CSV1_B_T3_S_OBJECT_LINEAR              0x00000002 /* RW--V */
#define NV_PGRAPH_CSV1_B_T3_S_SPHERE_MAP                 0x00000003 /* RW--V */
#define NV_PGRAPH_CSV1_B_T3_S_097                        0x00000000 /* RWC-V */
#define NV_PGRAPH_CSV1_B_T3_T                                 25:23 /* RWXVF */
#define NV_PGRAPH_CSV1_B_T3_T_DISABLE                    0x00000000 /* RW--V */
#define NV_PGRAPH_CSV1_B_T3_T_NORMAL_MAP                 0x00000004 /* RW--V */
#define NV_PGRAPH_CSV1_B_T3_T_REFLECTION_MAP             0x00000005 /* RW--V */
#define NV_PGRAPH_CSV1_B_T3_T_EYE_LINEAR                 0x00000001 /* RW--V */
#define NV_PGRAPH_CSV1_B_T3_T_OBJECT_LINEAR              0x00000002 /* RW--V */
#define NV_PGRAPH_CSV1_B_T3_T_SPHERE_MAP                 0x00000003 /* RW--V */
#define NV_PGRAPH_CSV1_B_T3_T_097                        0x00000000 /* RWC-V */
#define NV_PGRAPH_CSV1_B_T3_R                                 28:26 /* RWXVF */
#define NV_PGRAPH_CSV1_B_T3_R_DISABLE                    0x00000000 /* RW--V */
#define NV_PGRAPH_CSV1_B_T3_R_NORMAL_MAP                 0x00000004 /* RW--V */
#define NV_PGRAPH_CSV1_B_T3_R_REFLECTION_MAP             0x00000005 /* RW--V */
#define NV_PGRAPH_CSV1_B_T3_R_EYE_LINEAR                 0x00000001 /* RW--V */
#define NV_PGRAPH_CSV1_B_T3_R_OBJECT_LINEAR              0x00000002 /* RW--V */
#define NV_PGRAPH_CSV1_B_T3_R_097                        0x00000000 /* RWC-V */
#define NV_PGRAPH_CSV1_B_T3_Q                                 31:29 /* RWXVF */
#define NV_PGRAPH_CSV1_B_T3_Q_DISABLE                    0x00000000 /* RW--V */
#define NV_PGRAPH_CSV1_B_T3_Q_EYE_LINEAR                 0x00000001 /* RW--V */
#define NV_PGRAPH_CSV1_B_T3_Q_OBJECT_LINEAR              0x00000002 /* RW--V */
#define NV_PGRAPH_CSV1_B_T3_Q_097                        0x00000000 /* RWC-V */
#define NV_PGRAPH_CSV1_B_T3_MODE                              17:17 /* RWXVF */
#define NV_PGRAPH_CSV1_B_T3_MODE_FALSE                   0x00000000 /* RW--V */
#define NV_PGRAPH_CSV1_B_T3_MODE_TRUE                    0x00000001 /* RW--V */
#define NV_PGRAPH_CSV1_B_T3_MODE_097                     0x00000000 /* RWC-V */
#define NV_PGRAPH_CSV1_B_T3_TEXTURE                           18:18 /* RWXVF */
#define NV_PGRAPH_CSV1_B_T3_TEXTURE_2D                   0x00000000 /* RW--V */
#define NV_PGRAPH_CSV1_B_T3_TEXTURE_3D                   0x00000001 /* RW--V */
#define NV_PGRAPH_CSV1_B_T3_TEXTURE_097                  0x00000000 /* RWC-V */
#define NV_PGRAPH_CSV1_B_T3_ENABLE                            16:16 /* RWXVF */
#define NV_PGRAPH_CSV1_B_T3_ENABLE_FALSE                 0x00000000 /* RW--V */
#define NV_PGRAPH_CSV1_B_T3_ENABLE_TRUE                  0x00000001 /* RW--V */
#define NV_PGRAPH_CSV1_B_T3_ENABLE_097                   0x00000000 /* RWC-V */
#define NV_PGRAPH_CSV1_A                                 0x00400FC0 /* RW-4R */
#define NV_PGRAPH_CSV1_A_T0_S                                   6:4 /* RWXVF */
#define NV_PGRAPH_CSV1_A_T0_S_DISABLE                    0x00000000 /* RW--V */
#define NV_PGRAPH_CSV1_A_T0_S_NORMAL_MAP                 0x00000004 /* RW--V */
#define NV_PGRAPH_CSV1_A_T0_S_REFLECTION_MAP             0x00000005 /* RW--V */
#define NV_PGRAPH_CSV1_A_T0_S_EYE_LINEAR                 0x00000001 /* RW--V */
#define NV_PGRAPH_CSV1_A_T0_S_OBJECT_LINEAR              0x00000002 /* RW--V */
#define NV_PGRAPH_CSV1_A_T0_S_SPHERE_MAP                 0x00000003 /* RW--V */
#define NV_PGRAPH_CSV1_A_T0_S_097                        0x00000000 /* RWC-V */
#define NV_PGRAPH_CSV1_A_T0_T                                   9:7 /* RWXVF */
#define NV_PGRAPH_CSV1_A_T0_T_DISABLE                    0x00000000 /* RW--V */
#define NV_PGRAPH_CSV1_A_T0_T_NORMAL_MAP                 0x00000004 /* RW--V */
#define NV_PGRAPH_CSV1_A_T0_T_REFLECTION_MAP             0x00000005 /* RW--V */
#define NV_PGRAPH_CSV1_A_T0_T_EYE_LINEAR                 0x00000001 /* RW--V */
#define NV_PGRAPH_CSV1_A_T0_T_OBJECT_LINEAR              0x00000002 /* RW--V */
#define NV_PGRAPH_CSV1_A_T0_T_SPHERE_MAP                 0x00000003 /* RW--V */
#define NV_PGRAPH_CSV1_A_T0_T_097                        0x00000000 /* RWC-V */
#define NV_PGRAPH_CSV1_A_T0_R                                 12:10 /* RWXVF */
#define NV_PGRAPH_CSV1_A_T0_R_DISABLE                    0x00000000 /* RW--V */
#define NV_PGRAPH_CSV1_A_T0_R_NORMAL_MAP                 0x00000004 /* RW--V */
#define NV_PGRAPH_CSV1_A_T0_R_REFLECTION_MAP             0x00000005 /* RW--V */
#define NV_PGRAPH_CSV1_A_T0_R_EYE_LINEAR                 0x00000001 /* RW--V */
#define NV_PGRAPH_CSV1_A_T0_R_OBJECT_LINEAR              0x00000002 /* RW--V */
#define NV_PGRAPH_CSV1_A_T0_R_097                        0x00000000 /* RWC-V */
#define NV_PGRAPH_CSV1_A_T0_Q                                 15:13 /* RWXVF */
#define NV_PGRAPH_CSV1_A_T0_Q_DISABLE                    0x00000000 /* RW--V */
#define NV_PGRAPH_CSV1_A_T0_Q_EYE_LINEAR                 0x00000001 /* RW--V */
#define NV_PGRAPH_CSV1_A_T0_Q_OBJECT_LINEAR              0x00000002 /* RW--V */
#define NV_PGRAPH_CSV1_A_T0_Q_097                        0x00000000 /* RWC-V */
#define NV_PGRAPH_CSV1_A_T0_MODE                                1:1 /* RWXVF */
#define NV_PGRAPH_CSV1_A_T0_MODE_FALSE                   0x00000000 /* RW--V */
#define NV_PGRAPH_CSV1_A_T0_MODE_TRUE                    0x00000001 /* RW--V */
#define NV_PGRAPH_CSV1_A_T0_MODE_097                     0x00000000 /* RWC-V */
#define NV_PGRAPH_CSV1_A_T0_TEXTURE                             2:2 /* RWXVF */
#define NV_PGRAPH_CSV1_A_T0_TEXTURE_2D                   0x00000000 /* RW--V */
#define NV_PGRAPH_CSV1_A_T0_TEXTURE_3D                   0x00000001 /* RW--V */
#define NV_PGRAPH_CSV1_A_T0_TEXTURE_097                  0x00000000 /* RWC-V */
#define NV_PGRAPH_CSV1_A_T0_ENABLE                              0:0 /* RWXVF */
#define NV_PGRAPH_CSV1_A_T0_ENABLE_FALSE                 0x00000000 /* RW--V */
#define NV_PGRAPH_CSV1_A_T0_ENABLE_TRUE                  0x00000001 /* RW--V */
#define NV_PGRAPH_CSV1_A_T0_ENABLE_097                   0x00000000 /* RWC-V */
#define NV_PGRAPH_CSV1_A_T1_S                                 22:20 /* RWXVF */
#define NV_PGRAPH_CSV1_A_T1_S_DISABLE                    0x00000000 /* RW--V */
#define NV_PGRAPH_CSV1_A_T1_S_NORMAL_MAP                 0x00000004 /* RW--V */
#define NV_PGRAPH_CSV1_A_T1_S_REFLECTION_MAP             0x00000005 /* RW--V */
#define NV_PGRAPH_CSV1_A_T1_S_EYE_LINEAR                 0x00000001 /* RW--V */
#define NV_PGRAPH_CSV1_A_T1_S_OBJECT_LINEAR              0x00000002 /* RW--V */
#define NV_PGRAPH_CSV1_A_T1_S_SPHERE_MAP                 0x00000003 /* RW--V */
#define NV_PGRAPH_CSV1_A_T1_S_097                        0x00000000 /* RWC-V */
#define NV_PGRAPH_CSV1_A_T1_T                                 25:23 /* RWXVF */
#define NV_PGRAPH_CSV1_A_T1_T_DISABLE                    0x00000000 /* RW--V */
#define NV_PGRAPH_CSV1_A_T1_T_NORMAL_MAP                 0x00000004 /* RW--V */
#define NV_PGRAPH_CSV1_A_T1_T_REFLECTION_MAP             0x00000005 /* RW--V */
#define NV_PGRAPH_CSV1_A_T1_T_EYE_LINEAR                 0x00000001 /* RW--V */
#define NV_PGRAPH_CSV1_A_T1_T_OBJECT_LINEAR              0x00000002 /* RW--V */
#define NV_PGRAPH_CSV1_A_T1_T_SPHERE_MAP                 0x00000003 /* RW--V */
#define NV_PGRAPH_CSV1_A_T1_T_097                        0x00000000 /* RWC-V */
#define NV_PGRAPH_CSV1_A_T1_R                                 28:26 /* RWXVF */
#define NV_PGRAPH_CSV1_A_T1_R_DISABLE                    0x00000000 /* RW--V */
#define NV_PGRAPH_CSV1_A_T1_R_NORMAL_MAP                 0x00000004 /* RW--V */
#define NV_PGRAPH_CSV1_A_T1_R_REFLECTION_MAP             0x00000005 /* RW--V */
#define NV_PGRAPH_CSV1_A_T1_R_EYE_LINEAR                 0x00000001 /* RW--V */
#define NV_PGRAPH_CSV1_A_T1_R_OBJECT_LINEAR              0x00000002 /* RW--V */
#define NV_PGRAPH_CSV1_A_T1_R_097                        0x00000000 /* RWC-V */
#define NV_PGRAPH_CSV1_A_T1_Q                                 31:29 /* RWXVF */
#define NV_PGRAPH_CSV1_A_T1_Q_DISABLE                    0x00000000 /* RW--V */
#define NV_PGRAPH_CSV1_A_T1_Q_EYE_LINEAR                 0x00000001 /* RW--V */
#define NV_PGRAPH_CSV1_A_T1_Q_OBJECT_LINEAR              0x00000002 /* RW--V */
#define NV_PGRAPH_CSV1_A_T1_Q_097                        0x00000000 /* RWC-V */
#define NV_PGRAPH_CSV1_A_T1_MODE                              17:17 /* RWXVF */
#define NV_PGRAPH_CSV1_A_T1_MODE_FALSE                   0x00000000 /* RW--V */
#define NV_PGRAPH_CSV1_A_T1_MODE_TRUE                    0x00000001 /* RW--V */
#define NV_PGRAPH_CSV1_A_T1_MODE_097                     0x00000000 /* RWC-V */
#define NV_PGRAPH_CSV1_A_T1_TEXTURE                           18:18 /* RWXVF */
#define NV_PGRAPH_CSV1_A_T1_TEXTURE_2D                   0x00000000 /* RW--V */
#define NV_PGRAPH_CSV1_A_T1_TEXTURE_3D                   0x00000001 /* RW--V */
#define NV_PGRAPH_CSV1_A_T1_TEXTURE_097                  0x00000000 /* RWC-V */
#define NV_PGRAPH_CSV1_A_T1_ENABLE                            16:16 /* RWXVF */
#define NV_PGRAPH_CSV1_A_T1_ENABLE_FALSE                 0x00000000 /* RW--V */
#define NV_PGRAPH_CSV1_A_T1_ENABLE_TRUE                  0x00000001 /* RW--V */
#define NV_PGRAPH_CSV1_A_T1_ENABLE_097                   0x00000000 /* RWC-V */
#define NV_PGRAPH_CHEOPS_OFFSET                          0x00400FC4 /* RW-4R */
#define NV_PGRAPH_CHEOPS_OFFSET_PROG_LD_PTR                     7:0 /* RWXUF */
#define NV_PGRAPH_CHEOPS_OFFSET_PROG_LD_PTR_097          0x00000000 /* RWC-V */
#define NV_PGRAPH_CHEOPS_OFFSET_CONST_LD_PTR                   15:8 /* RWXUF */
#define NV_PGRAPH_CHEOPS_OFFSET_CONST_LD_PTR_097         0x00000000 /* RWC-V */
#define NV_PGRAPH_ZCULLINTERLOCK                         0x00000000 /* ---4P */
#define NV_PGRAPH_ZCULLINTERLOCK_BUNDLE                       0x1D0 /* ----B */
#define NV_PGRAPH_ZCULLINTERLOCK_SEMA                           9:0 /* ---VF */
#define NV_PGRAPH_BLTFIRSTSPAN                           0x00000000 /* ---4P */
#define NV_PGRAPH_BLTFIRSTSPAN_BUNDLE                    0x000001D1 /* ----B */
#define NV_PGRAPH_BLTFIRSTSPAN_SRCMINUSDST                      6:0 /* ---VF */
#define NV_PGRAPH_BLTFIRSTSPAN_SRCANCHORPART                  17:16 /* ---VF */
#define NV_PGRAPH_BLTFIRSTSPAN_DSTANCHORPART                  19:18 /* ---VF */
#define NV_PGRAPH_BLTFIRSTSPAN_L2R                            20:20 /* ---VF */
#define NV_PGRAPH_BLTFIRSTSPAN_L2R_FALSE                 0x00000000 /* ----V */
#define NV_PGRAPH_BLTFIRSTSPAN_L2R_TRUE                  0x00000001 /* ----V */
#define NV_PGRAPH_BLTFIRSTSPAN_RRW                            21:21 /* ---VF */
#define NV_PGRAPH_BLTFIRSTSPAN_RRW_FALSE                 0x00000000 /* ----V */
#define NV_PGRAPH_BLTFIRSTSPAN_RRW_TRUE                  0x00000001 /* ----V */
#define NV_PGRAPH_BLTNTHSPAN                             0x00000000 /* ---4P */
#define NV_PGRAPH_BLTNTHSPAN_BUNDLE                      0x000001D2 /* ----B */
#define NV_PGRAPH_BLTNTHSPAN_SRCMINUSDST                        6:0 /* ---VF */
#define NV_PGRAPH_BLTNTHSPAN_SRCANCHORPART                    17:16 /* ---VF */
#define NV_PGRAPH_BLTNTHSPAN_DSTANCHORPART                    19:18 /* ---VF */
#define NV_PGRAPH_BLTNTHSPAN_L2R                              20:20 /* ---VF */
#define NV_PGRAPH_BLTNTHSPAN_L2R_FALSE                   0x00000000 /* ----V */
#define NV_PGRAPH_BLTNTHSPAN_L2R_TRUE                    0x00000001 /* ----V */
#define NV_PGRAPH_BLTNTHSPAN_RRW                              21:21 /* ---VF */
#define NV_PGRAPH_BLTNTHSPAN_RRW_FALSE                   0x00000000 /* ----V */
#define NV_PGRAPH_BLTNTHSPAN_RRW_TRUE                    0x00000001 /* ----V */
#define NV_PGRAPH_BLTEND                                 0x00000000 /* ---4P */
#define NV_PGRAPH_BLTEND_BUNDLE                          0x000001D3 /* ----B */
#define NV_PGRAPH_ROPFLUSH                               0x00000000 /* ---4P */
#define NV_PGRAPH_ROPFLUSH_BUNDLE                             0x1D4 /* ----B */
#define NV_PGRAPH_PALLOAD_BUNDLE                              0x1D5 /* ----B */
#define NV_PGRAPH_PALLOAD_TEX0_ALLOCCTL                         2:0 /* ---VF */
#define NV_PGRAPH_PALLOAD_TEX0_ALLOCCTL_S0_N8            0x00000000 /* ----V */
#define NV_PGRAPH_PALLOAD_TEX0_ALLOCCTL_S0_N4            0x00000001 /* ----V */
#define NV_PGRAPH_PALLOAD_TEX0_ALLOCCTL_S4_N4            0x00000002 /* ----V */
#define NV_PGRAPH_PALLOAD_TEX0_ALLOCCTL_S0_N2            0x00000003 /* ----V */
#define NV_PGRAPH_PALLOAD_TEX0_ALLOCCTL_S2_N2            0x00000004 /* ----V */
#define NV_PGRAPH_PALLOAD_TEX0_ALLOCCTL_S4_N2            0x00000005 /* ----V */
#define NV_PGRAPH_PALLOAD_TEX0_ALLOCCTL_S6_N2            0x00000006 /* ----V */
#define NV_PGRAPH_PALLOAD_TEX0_ALLOCCTL_NONE             0x00000007 /* ----V */
#define NV_PGRAPH_PALLOAD_TEX0_LOAD_FALSE                0x00000000 /* ----V */
#define NV_PGRAPH_PALLOAD_TEX0_LOAD_TRUE                 0x00000001 /* ----V */
#define NV_PGRAPH_PALLOAD_TEX1_ALLOCCTL                         6:4 /* ---VF */
#define NV_PGRAPH_PALLOAD_TEX1_ALLOCCTL_S0_N8            0x00000000 /* ----V */
#define NV_PGRAPH_PALLOAD_TEX1_ALLOCCTL_S0_N4            0x00000001 /* ----V */
#define NV_PGRAPH_PALLOAD_TEX1_ALLOCCTL_S4_N4            0x00000002 /* ----V */
#define NV_PGRAPH_PALLOAD_TEX1_ALLOCCTL_S0_N2            0x00000003 /* ----V */
#define NV_PGRAPH_PALLOAD_TEX1_ALLOCCTL_S2_N2            0x00000004 /* ----V */
#define NV_PGRAPH_PALLOAD_TEX1_ALLOCCTL_S4_N2            0x00000005 /* ----V */
#define NV_PGRAPH_PALLOAD_TEX1_ALLOCCTL_S6_N2            0x00000006 /* ----V */
#define NV_PGRAPH_PALLOAD_TEX1_ALLOCCTL_NONE             0x00000007 /* ----V */
#define NV_PGRAPH_PALLOAD_TEX1_LOAD_FALSE                0x00000000 /* ----V */
#define NV_PGRAPH_PALLOAD_TEX1_LOAD_TRUE                 0x00000001 /* ----V */
#define NV_PGRAPH_PALLOAD_TEX2_ALLOCCTL                        10:8 /* ---VF */
#define NV_PGRAPH_PALLOAD_TEX2_ALLOCCTL_S0_N8            0x00000000 /* ----V */
#define NV_PGRAPH_PALLOAD_TEX2_ALLOCCTL_S0_N4            0x00000001 /* ----V */
#define NV_PGRAPH_PALLOAD_TEX2_ALLOCCTL_S4_N4            0x00000002 /* ----V */
#define NV_PGRAPH_PALLOAD_TEX2_ALLOCCTL_S0_N2            0x00000003 /* ----V */
#define NV_PGRAPH_PALLOAD_TEX2_ALLOCCTL_S2_N2            0x00000004 /* ----V */
#define NV_PGRAPH_PALLOAD_TEX2_ALLOCCTL_S4_N2            0x00000005 /* ----V */
#define NV_PGRAPH_PALLOAD_TEX2_ALLOCCTL_S6_N2            0x00000006 /* ----V */
#define NV_PGRAPH_PALLOAD_TEX2_ALLOCCTL_NONE             0x00000007 /* ----V */
#define NV_PGRAPH_PALLOAD_TEX2_LOAD_FALSE                0x00000000 /* ----V */
#define NV_PGRAPH_PALLOAD_TEX2_LOAD_TRUE                 0x00000001 /* ----V */
#define NV_PGRAPH_PALLOAD_TEX3_ALLOCCTL                       14:12 /* ---VF */
#define NV_PGRAPH_PALLOAD_TEX3_ALLOCCTL_S0_N8            0x00000000 /* ----V */
#define NV_PGRAPH_PALLOAD_TEX3_ALLOCCTL_S0_N4            0x00000001 /* ----V */
#define NV_PGRAPH_PALLOAD_TEX3_ALLOCCTL_S4_N4            0x00000002 /* ----V */
#define NV_PGRAPH_PALLOAD_TEX3_ALLOCCTL_S0_N2            0x00000003 /* ----V */
#define NV_PGRAPH_PALLOAD_TEX3_ALLOCCTL_S2_N2            0x00000004 /* ----V */
#define NV_PGRAPH_PALLOAD_TEX3_ALLOCCTL_S4_N2            0x00000005 /* ----V */
#define NV_PGRAPH_PALLOAD_TEX3_ALLOCCTL_S6_N2            0x00000006 /* ----V */
#define NV_PGRAPH_PALLOAD_TEX3_ALLOCCTL_NONE             0x00000007 /* ----V */
#define NV_PGRAPH_PALLOAD_TEX3_LOAD_FALSE                0x00000000 /* ----V */
#define NV_PGRAPH_PALLOAD_TEX3_LOAD_TRUE                 0x00000001 /* ----V */
#define NV_PGRAPH_PIPE_ADDRESS                           0x00400F50 /* RW-4R */
#define NV_PGRAPH_PIPE_ADDRESS_VALUE                           16:2 /* RWXVF */
#define NV_PGRAPH_PIPE_DATA                              0x00400F54 /* RW-4R */
#define NV_PGRAPH_PIPE_DATA_VALUE                              31:0 /* RWXVF */
#define NV_PGRAPH_SHADOW                                 0x00400F5C /* RW-4R */
#define NV_PGRAPH_SHADOW_WITHIN_BEGINEND                        0:0 /* RWXVF */
#define NV_PGRAPH_SHADOW_WITHIN_BEGINEND_FALSE           0x00000000 /* RW--V */
#define NV_PGRAPH_SHADOW_WITHIN_BEGINEND_TRUE            0x00000001 /* RW--V */
#define NV_PGRAPH_SHADOW_WITHIN_BEGINEND_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_SHADOW_SECONDARY_COLOR_EN                     2:2 /* RWXVF */
#define NV_PGRAPH_SHADOW_SECONDARY_COLOR_EN_FALSE        0x00000000 /* RW--V */
#define NV_PGRAPH_SHADOW_SECONDARY_COLOR_EN_TRUE         0x00000001 /* RW--V */
#define NV_PGRAPH_SHADOW_SECONDARY_COLOR_EN_097          0x00000000 /* RWC-V */
#define NV_PGRAPH_SHADOW_COLORMATERIAL_SPECULAR                 3:3 /* RWXVF */
#define NV_PGRAPH_SHADOW_COLORMATERIAL_SPECULAR_FALSE    0x00000000 /* RW--V */
#define NV_PGRAPH_SHADOW_COLORMATERIAL_SPECULAR_TRUE     0x00000001 /* RW--V */
#define NV_PGRAPH_SHADOW_COLORMATERIAL_SPECULAR_097      0x00000000 /* RWC-V */
#define NV_PGRAPH_SHADOW_IN_PATCH                               4:4 /* RWXVF */
#define NV_PGRAPH_SHADOW_IN_PATCH_FALSE                  0x00000000 /* RW--V */
#define NV_PGRAPH_SHADOW_IN_PATCH_TRUE                   0x00000001 /* RW--V */
#define NV_PGRAPH_SHADOW_IN_PATCH_097                    0x00000000 /* RWC-V */
#define NV_PGRAPH_SHADOW_IN_PATCH0                              5:5 /* RWXVF */
#define NV_PGRAPH_SHADOW_IN_PATCH0_FALSE                 0x00000000 /* RW--V */
#define NV_PGRAPH_SHADOW_IN_PATCH0_TRUE                  0x00000001 /* RW--V */
#define NV_PGRAPH_SHADOW_IN_PATCH0_097                   0x00000000 /* RWC-V */
#define NV_PGRAPH_SHADOW_IN_PATCH1                              6:6 /* RWXVF */
#define NV_PGRAPH_SHADOW_IN_PATCH1_FALSE                 0x00000000 /* RW--V */
#define NV_PGRAPH_SHADOW_IN_PATCH1_TRUE                  0x00000001 /* RW--V */
#define NV_PGRAPH_SHADOW_IN_PATCH1_097                   0x00000000 /* RWC-V */
#define NV_PGRAPH_SHADOW_IN_PATCH2                              7:7 /* RWXVF */
#define NV_PGRAPH_SHADOW_IN_PATCH2_FALSE                 0x00000000 /* RW--V */
#define NV_PGRAPH_SHADOW_IN_PATCH2_TRUE                  0x00000001 /* RW--V */
#define NV_PGRAPH_SHADOW_IN_PATCH2_097                   0x00000000 /* RWC-V */
#define NV_PGRAPH_SHADOW_IN_SWATCH                              8:8 /* RWXVF */
#define NV_PGRAPH_SHADOW_IN_SWATCH_FALSE                 0x00000000 /* RW--V */
#define NV_PGRAPH_SHADOW_IN_SWATCH_TRUE                  0x00000001 /* RW--V */
#define NV_PGRAPH_SHADOW_IN_SWATCH_097                   0x00000000 /* RWC-V */
#define NV_PGRAPH_SHADOW_GUARD                                 10:9 /* RWXVF */
#define NV_PGRAPH_SHADOW_GUARD_FALSE                     0x00000000 /* RW--V */
#define NV_PGRAPH_SHADOW_GUARD_LEFT_SET                  0x00000001 /* RW--V */
#define NV_PGRAPH_SHADOW_GUARD_RIGHT_SET                 0x00000002 /* RW--V */
#define NV_PGRAPH_SHADOW_GUARD_BOTH_SET                  0x00000003 /* RW--V */
#define NV_PGRAPH_SHADOW_GUARD_097                       0x00000000 /* RWC-V */
#define NV_PGRAPH_SHADOW_IN_TRANSITION                        11:11 /* RWXVF */
#define NV_PGRAPH_SHADOW_IN_TRANSITION_FALSE             0x00000000 /* RW--V */
#define NV_PGRAPH_SHADOW_IN_TRANSITION_TRUE              0x00000001 /* RW--V */
#define NV_PGRAPH_SHADOW_IN_TRANSITION_097               0x00000000 /* RWC-V */
#define NV_PGRAPH_SHADOW_IN_TRANSITION0                       12:12 /* RWXVF */
#define NV_PGRAPH_SHADOW_IN_TRANSITION0_FALSE            0x00000000 /* RW--V */
#define NV_PGRAPH_SHADOW_IN_TRANSITION0_TRUE             0x00000001 /* RW--V */
#define NV_PGRAPH_SHADOW_IN_TRANSITION0_097              0x00000000 /* RWC-V */
#define NV_PGRAPH_SHADOW_IN_TRANSITION1                       13:13 /* RWXVF */
#define NV_PGRAPH_SHADOW_IN_TRANSITION1_FALSE            0x00000000 /* RW--V */
#define NV_PGRAPH_SHADOW_IN_TRANSITION1_TRUE             0x00000001 /* RW--V */
#define NV_PGRAPH_SHADOW_IN_TRANSITION1_097              0x00000000 /* RWC-V */
#define NV_PGRAPH_SHADOW_WITHIN_BEGINEND_CURVE                15:15 /* RWXVF */
#define NV_PGRAPH_SHADOW_WITHIN_BEGINEND_CURVE_FALSE     0x00000000 /* RW--V */
#define NV_PGRAPH_SHADOW_WITHIN_BEGINEND_CURVE_TRUE      0x00000001 /* RW--V */
#define NV_PGRAPH_SHADOW_WITHIN_BEGINEND_CURVE_097       0x00000000 /* RWC-V */
#define NV_PGRAPH_SHADOW_SWATCH_DONE                          16:16 /* RWXVF */
#define NV_PGRAPH_SHADOW_SWATCH_DONE_FALSE               0x00000000 /* RW--V */
#define NV_PGRAPH_SHADOW_SWATCH_DONE_TRUE                0x00000001 /* RW--V */
#define NV_PGRAPH_SHADOW_SWATCH_DONE_097                 0x00000000 /* RWC-V */
#define NV_PGRAPH_SHADOW_OUTER_END_PT                         17:17 /* RWXVF */
#define NV_PGRAPH_SHADOW_OUTER_END_PT_FALSE              0x00000000 /* RW--V */
#define NV_PGRAPH_SHADOW_OUTER_END_PT_TRUE               0x00000001 /* RW--V */
#define NV_PGRAPH_SHADOW_OUTER_END_PT_097                0x00000000 /* RWC-V */
#define NV_PGRAPH_SHADOW_OUTER_TRANSITION                     18:18 /* RWXVF */
#define NV_PGRAPH_SHADOW_OUTER_TRANSITION_FALSE          0x00000000 /* RW--V */
#define NV_PGRAPH_SHADOW_OUTER_TRANSITION_TRUE           0x00000001 /* RW--V */
#define NV_PGRAPH_SHADOW_OUTER_TRANSITION_097            0x00000000 /* RWC-V */
#define NV_PGRAPH_SHADOW_INNER_TRANSITION                     19:19 /* RWXVF */
#define NV_PGRAPH_SHADOW_INNER_TRANSITION_FALSE          0x00000000 /* RW--V */
#define NV_PGRAPH_SHADOW_INNER_TRANSITION_TRUE           0x00000001 /* RW--V */
#define NV_PGRAPH_SHADOW_INNER_TRANSITION_097            0x00000000 /* RWC-V */
#define NV_PGRAPH_SHADOW_PARK                                 20:20 /* RWXVF */
#define NV_PGRAPH_SHADOW_PARK_FALSE                      0x00000000 /* RW--V */
#define NV_PGRAPH_SHADOW_PARK_TRUE                       0x00000001 /* RW--V */
#define NV_PGRAPH_SHADOW_PARK_097                        0x00000000 /* RWC-V */
#define NV_PGRAPH_SHADOW_DIRTY_ECOLMAT                        21:21 /* RWXVF */
#define NV_PGRAPH_SHADOW_DIRTY_ECOLMAT_FALSE             0x00000000 /* RW--V */
#define NV_PGRAPH_SHADOW_DIRTY_ECOLMAT_TRUE              0x00000001 /* RW--V */
#define NV_PGRAPH_SHADOW_DIRTY_ECOLMAT_097               0x00000000 /* RWC-V */
#define NV_PGRAPH_SHADOW_DIRTY_ACOLMAT                        22:22 /* RWXVF */
#define NV_PGRAPH_SHADOW_DIRTY_ACOLMAT_FALSE             0x00000000 /* RW--V */
#define NV_PGRAPH_SHADOW_DIRTY_ACOLMAT_TRUE              0x00000001 /* RW--V */
#define NV_PGRAPH_SHADOW_DIRTY_ACOLMAT_097               0x00000000 /* RWC-V */
#define NV_PGRAPH_SHADOW_INNER_END_PT                         23:23 /* RWXVF */
#define NV_PGRAPH_SHADOW_INNER_END_PT_FALSE              0x00000000 /* RW--V */
#define NV_PGRAPH_SHADOW_INNER_END_PT_TRUE               0x00000001 /* RW--V */
#define NV_PGRAPH_SHADOW_INNER_END_PT_097                0x00000000 /* RWC-V */
#define NV_PGRAPH_SHADOW_FD_ERROR_DETECTED                    24:24 /* RWXVF */
#define NV_PGRAPH_SHADOW_FD_ERROR_DETECTED_FALSE         0x00000000 /* RW--V */
#define NV_PGRAPH_SHADOW_FD_ERROR_DETECTED_TRUE          0x00000001 /* RW--V */
#define NV_PGRAPH_SHADOW_FD_ERROR_DETECTED_097           0x00000000 /* RWC-V */
#define NV_PGRAPH_FD_DATA                                0x00400F60 /* RW-4R */
#define NV_PGRAPH_FD_DATA_COUNTER_COEFF                         9:0 /* RWXUF */
#define NV_PGRAPH_FD_DATA_COUNTER_COEFF_097               0x0000000 /* RWC-V */
#define NV_PGRAPH_FD_DATA_GUARD_CURVE_SPEC                    17:12 /* RWXUF */
#define NV_PGRAPH_FD_DATA_GUARD_CURVE_097                 0x0000000 /* RWC-V */
#define NV_PGRAPH_FD_DATA_CURVE_SPEC                          25:18 /* RWXUF */
#define NV_PGRAPH_FD_DATA_CURVE_SPEC_097                  0x0000000 /* RWC-V */
#define NV_PGRAPH_FD_DATA_PT_SPEC                             31:28 /* RWXUF */
#define NV_PGRAPH_FD_DATA_PT_SPEC_097                     0x0000000 /* RWC-V */
#define NV_PGRAPH_FD_SWATCH                              0x00400F64 /* RW-4R */
#define NV_PGRAPH_FD_SWATCH_CURVES_PER_SWATCH_SPEC              7:0 /* RWXUF */
#define NV_PGRAPH_FD_SWATCH_CURVES_PER_SWATCH_SPEC_097   0x00000000 /* RWC-V */
#define NV_PGRAPH_FD_SWATCH_HT_COUNTER                         15:8 /* RWXUF */
#define NV_PGRAPH_FD_SWATCH_HT_COUNTER_097               0x00000000 /* RWC-V */
#define NV_PGRAPH_FD_SWATCH_WD_COUNTER                        23:16 /* RWXUF */
#define NV_PGRAPH_FD_SWATCH_WD_COUNTER_097               0x00000000 /* RWC-V */
#define NV_PGRAPH_FD_SWATCH_NEW_SWATH                         24:24 /* RWXVF */
#define NV_PGRAPH_FD_SWATCH_NEW_SWATH_FALSE              0x00000000 /* RW--V */
#define NV_PGRAPH_FD_SWATCH_NEW_SWATH_TRUE               0x00000001 /* RW--V */
#define NV_PGRAPH_FD_SWATCH_NEW_SWATH_097                0x00000000 /* RWC-V */
#define NV_PGRAPH_FD_SWATCH_SKIP_FIRST_ROW                    25:25 /* RWXVF */
#define NV_PGRAPH_FD_SWATCH_SKIP_FIRST_ROW_FALSE         0x00000000 /* RW--V */
#define NV_PGRAPH_FD_SWATCH_SKIP_FIRST_ROW_TRUE          0x00000001 /* RW--V */
#define NV_PGRAPH_FD_SWATCH_SKIP_FIRST_ROW_097           0x00000000 /* RWC-V */
#define NV_PGRAPH_FD_SWATCH_SHORT_SWATCH                      26:26 /* RWXVF */
#define NV_PGRAPH_FD_SWATCH_SHORT_SWATCH_FULL_HEIGHT     0x00000000 /* RW--V */
#define NV_PGRAPH_FD_SWATCH_SHORT_SWATCH_PARTIAL_HEIGHT  0x00000001 /* RW--V */
#define NV_PGRAPH_FD_SWATCH_SHORT_SWATCH_097             0x00000000 /* RWC-V */
#define NV_PGRAPH_FD_EXTRAS                              0x00400F68 /* RW-4R */
#define NV_PGRAPH_FD_EXTRAS_TRANSITION_COUNTER                  2:0 /* RWXUF */
#define NV_PGRAPH_FD_EXTRAS_TRANSITION_COUNTER_097       0x00000000 /* RWC-V */
#define NV_PGRAPH_FD_EXTRAS_TRANSITION_TOTAL                    6:4 /* RWXUF */
#define NV_PGRAPH_FD_EXTRAS_TRANSITION_TOTAL_097         0x00000000 /* RWC-V */
#define NV_PGRAPH_FD_EXTRAS_PT_SPEC0                          27:24 /* RWXUF */
#define NV_PGRAPH_FD_EXTRAS_PT_SPEC0_097                 0x00000000 /* RWC-V */
#define NV_PGRAPH_FD_EXTRAS_PT_SPEC1                          31:28 /* RWXUF */
#define NV_PGRAPH_FD_EXTRAS_PT_SPEC1_097                 0x00000000 /* RWC-V */
#define NV_PGRAPH_EMISSION_BACKUP_0                      0x00400F6C /* RW-4R */
#define NV_PGRAPH_EMISSION_BACKUP_0_V                          31:0 /* RWXFF */
#define NV_PGRAPH_EMISSION_BACKUP_0_V_097                0x00000000 /* RWC-V */
#define NV_PGRAPH_EMISSION_BACKUP_1                      0x00400F70 /* RW-4R */
#define NV_PGRAPH_EMISSION_BACKUP_1_V                          31:0 /* RWXFF */
#define NV_PGRAPH_EMISSION_BACKUP_1_V_097                0x00000000 /* RWC-V */
#define NV_PGRAPH_EMISSION_BACKUP_2                      0x00400F74 /* RW-4R */
#define NV_PGRAPH_EMISSION_BACKUP_2_V                          31:0 /* RWXFF */
#define NV_PGRAPH_EMISSION_BACKUP_2_V_097                0x00000000 /* RWC-V */
#define NV_PGRAPH_SCENE_AMBIENT_BACKUP_0                 0x00400F78 /* RW-4R */
#define NV_PGRAPH_SCENE_AMBIENT_BACKUP_0_V                     31:0 /* RWXFF */
#define NV_PGRAPH_SCENE_AMBIENT_BACKUP_0_V_097           0x00000000 /* RWC-V */
#define NV_PGRAPH_SCENE_AMBIENT_BACKUP_1                 0x00400F7C /* RW-4R */
#define NV_PGRAPH_SCENE_AMBIENT_BACKUP_1_V                     31:0 /* RWXFF */
#define NV_PGRAPH_SCENE_AMBIENT_BACKUP_1_V_097           0x00000000 /* RWC-V */
#define NV_PGRAPH_SCENE_AMBIENT_BACKUP_2                 0x00400F80 /* RW-4R */
#define NV_PGRAPH_SCENE_AMBIENT_BACKUP_2_V                     31:0 /* RWXFF */
#define NV_PGRAPH_SCENE_AMBIENT_BACKUP_2_V_097           0x00000000 /* RWC-V */
#define NV_PGRAPH_GETSTATE                               0x00400F84 /* RW-4R */
#define NV_PGRAPH_GETSTATE_DMA_INSTANCE                        15:0 /* RWXUF */
#define NV_PGRAPH_GETSTATE_DMA_INSTANCE_INVALID              0x0000 /* RW--V */
#define NV_PGRAPH_DMA_START_0                            0x00401000 /* RW-4R */
#define NV_PGRAPH_DMA_START_0_VALUE                            31:0 /* RWXUF */
#define NV_PGRAPH_DMA_START_1                            0x00401004 /* RW-4R */
#define NV_PGRAPH_DMA_START_1_VALUE                            31:0 /* RWXUF */
#define NV_PGRAPH_DMA_LENGTH                             0x00401008 /* RW-4R */
#define NV_PGRAPH_DMA_LENGTH_VALUE                             21:0 /* RWXUF */
#define NV_PGRAPH_DMA_MISC                               0x0040100C /* RW-4R */
#define NV_PGRAPH_DMA_MISC_COUNT                               15:0 /* RWXUF */
#define NV_PGRAPH_DMA_MISC_FMT_SRC                            18:16 /* RWXVF */
#define NV_PGRAPH_DMA_MISC_FMT_DST                            22:20 /* RWXVF */
#define NV_PGRAPH_DMA_DATA_0                             0x00401020 /* RW-4R */
#define NV_PGRAPH_DMA_DATA_0_VALUE                             31:0 /* RWXUF */
#define NV_PGRAPH_DMA_DATA_1                             0x00401024 /* RW-4R */
#define NV_PGRAPH_DMA_DATA_1_VALUE                             31:0 /* RWXUF */
#define NV_PGRAPH_DMA_RM                                 0x00401030 /* RW-4R */
#define NV_PGRAPH_DMA_RM_ASSIST_A                               0:0 /* RWIVF */
#define NV_PGRAPH_DMA_RM_ASSIST_A_NOT_PENDING            0x00000000 /* R-I-V */
#define NV_PGRAPH_DMA_RM_ASSIST_A_PENDING                0x00000001 /* R---V */
#define NV_PGRAPH_DMA_RM_ASSIST_A_RESET                  0x00000001 /* -W--C */
#define NV_PGRAPH_DMA_RM_ASSIST_B                               1:1 /* RWIVF */
#define NV_PGRAPH_DMA_RM_ASSIST_B_NOT_PENDING            0x00000000 /* R-I-V */
#define NV_PGRAPH_DMA_RM_ASSIST_B_PENDING                0x00000001 /* R---V */
#define NV_PGRAPH_DMA_RM_ASSIST_B_RESET                  0x00000001 /* -W--C */
#define NV_PGRAPH_DMA_RM_WRITE_REQ                              4:4 /* CWIVF */
#define NV_PGRAPH_DMA_RM_WRITE_REQ_NOT_PENDING           0x00000000 /* CWI-V */
#define NV_PGRAPH_DMA_RM_WRITE_REQ_PENDING               0x00000001 /* -W--T */
#define NV_PGRAPH_DMA_STATE                              0x00401034 /* R--4R */
#define NV_PGRAPH_DMA_STATE_PMA                                 2:0 /* R-IVF */
#define NV_PGRAPH_DMA_STATE_PMA_DRP                      0x00000000 /* R-I-V */
#define NV_PGRAPH_DMA_STATE_PMA_DRA                      0x00000001 /* R---V */
#define NV_PGRAPH_DMA_STATE_PMA_DWA                      0x00000002 /* R---V */
#define NV_PGRAPH_DMA_STATE_PMA_DW0                      0x00000003 /* R---V */
#define NV_PGRAPH_DMA_STATE_PMA_DW1                      0x00000004 /* R---V */
#define NV_PGRAPH_DMA_STATE_PMA_DW2                      0x00000005 /* R---V */
#define NV_PGRAPH_DMA_STATE_PMA_DW3                      0x00000006 /* R---V */
#define NV_PGRAPH_DMA_STATE_PMA_DWX                      0x00000007 /* R---V */
#define NV_PGRAPH_DMA_STATE_FE                                  4:3 /* R-IVF */
#define NV_PGRAPH_DMA_STATE_FE_0                         0x00000000 /* R-I-V */
#define NV_PGRAPH_DMA_STATE_FE_1                         0x00000001 /* R---V */
#define NV_PGRAPH_DMA_STATE_FE_2                         0x00000002 /* R---V */
#define NV_PGRAPH_DMA_STATE_FE_3                         0x00000003 /* R---V */
#define NV_PGRAPH_DMA_STATE_FBA                                 5:5 /* R-IVF */
#define NV_PGRAPH_DMA_STATE_FBA_DR                       0x00000000 /* R-I-V */
#define NV_PGRAPH_DMA_STATE_FBA_DW                       0x00000001 /* R---V */
#define NV_PGRAPH_DMA_STATE_DRDMA                              11:8 /* R-IVF */
#define NV_PGRAPH_DMA_STATE_DRDMA_IDLE                   0x00000000 /* R-I-V */
#define NV_PGRAPH_DMA_STATE_DRDMA_REQ                    0x00000001 /* R---V */
#define NV_PGRAPH_DMA_STATE_DRDMA_TIME_REQ               0x00000002 /* R---V */
#define NV_PGRAPH_DMA_STATE_DRDMA_ADJ                    0x00000003 /* R---V */
#define NV_PGRAPH_DMA_STATE_DRDMA_TLB                    0x00000004 /* R---V */
#define NV_PGRAPH_DMA_STATE_DRDMA_PTE_REQ                0x00000005 /* R---V */
#define NV_PGRAPH_DMA_STATE_DRDMA_PTE                    0x00000006 /* R---V */
#define NV_PGRAPH_DMA_STATE_DRDMA_MEM_REQ                0x00000007 /* R---V */
#define NV_PGRAPH_DMA_STATE_DRDMA_MEM                    0x00000008 /* R---V */
#define NV_PGRAPH_DMA_STATE_DRDMA_PITCH                  0x00000009 /* R---V */
#define NV_PGRAPH_DMA_STATE_DRDMA_INTR                   0x0000000A /* R---V */
#define NV_PGRAPH_DMA_STATE_DR                                13:12 /* R-IVF */
#define NV_PGRAPH_DMA_STATE_DR_IDLE                      0x00000000 /* R-I-V */
#define NV_PGRAPH_DMA_STATE_DR_TRX                       0x00000001 /* R---V */
#define NV_PGRAPH_DMA_STATE_DR_PART                      0x00000002 /* R---V */
#define NV_PGRAPH_DMA_STATE_DRTLB                             15:14 /* R-IVF */
#define NV_PGRAPH_DMA_STATE_DRTLB_IDLE                   0x00000000 /* R-I-V */
#define NV_PGRAPH_DMA_STATE_DRTLB_TLB                    0x00000001 /* R---V */
#define NV_PGRAPH_DMA_STATE_DRTLB_LIM                    0x00000002 /* R---V */
#define NV_PGRAPH_DMA_STATE_DRTLB_PTE                    0x00000003 /* R---V */
#define NV_PGRAPH_DMA_STATE_DR_Q_FULL                         16:16 /* R-X-F */
#define NV_PGRAPH_DMA_STATE_DR_Q_EMPTY                        17:17 /* R-X-F */
#define NV_PGRAPH_DMA_STATE_DR_Q_BUSY                         18:18 /* R-X-F */
#define NV_PGRAPH_DMA_STATE_DR_C_FULL                         19:19 /* R-X-F */
#define NV_PGRAPH_DMA_STATE_DWDMA                             23:20 /* R-IVF */
#define NV_PGRAPH_DMA_STATE_DWDMA_IDLE                   0x00000000 /* R-I-V */
#define NV_PGRAPH_DMA_STATE_DWDMA_ADJ                    0x00000001 /* R---V */
#define NV_PGRAPH_DMA_STATE_DWDMA_TLB                    0x00000002 /* R---V */
#define NV_PGRAPH_DMA_STATE_DWDMA_PTE_REQ                0x00000003 /* R---V */
#define NV_PGRAPH_DMA_STATE_DWDMA_PTE                    0x00000004 /* R---V */
#define NV_PGRAPH_DMA_STATE_DWDMA_MEM_REQ                0x00000005 /* R---V */
#define NV_PGRAPH_DMA_STATE_DWDMA_MEM                    0x00000006 /* R---V */
#define NV_PGRAPH_DMA_STATE_DWDMA_PITCH                  0x00000007 /* R---V */
#define NV_PGRAPH_DMA_STATE_DWDMA_FE_TRX                 0x00000008 /* R---V */
#define NV_PGRAPH_DMA_STATE_DWDMA_INTR                   0x00000009 /* R---V */
#define NV_PGRAPH_DMA_STATE_DW                                26:24 /* R-IVF */
#define NV_PGRAPH_DMA_STATE_DW_IDLE                      0x00000000 /* R-I-V */
#define NV_PGRAPH_DMA_STATE_DW_FIRST                     0x00000001 /* R---V */
#define NV_PGRAPH_DMA_STATE_DW_SECOND                    0x00000002 /* R---V */
#define NV_PGRAPH_DMA_STATE_DW_MID                       0x00000003 /* R---V */
#define NV_PGRAPH_DMA_STATE_DW_WAIT                      0x00000004 /* R---V */
#define NV_PGRAPH_DMA_STATE_DWTLB                             28:27 /* R-IVF */
#define NV_PGRAPH_DMA_STATE_DWTLB_IDLE                   0x00000000 /* R-I-V */
#define NV_PGRAPH_DMA_STATE_DWTLB_TLB                    0x00000001 /* R---V */
#define NV_PGRAPH_DMA_STATE_DWTLB_LIM                    0x00000002 /* R---V */
#define NV_PGRAPH_DMA_STATE_DWTLB_PTE                    0x00000003 /* R---V */
#define NV_PGRAPH_DMA_STATE_DF                                31:29 /* R-IVF */
#define NV_PGRAPH_DMA_STATE_DF_IDLE                      0x00000000 /* R-I-V */
#define NV_PGRAPH_DMA_STATE_DF_REQ                       0x00000001 /* R---V */
#define NV_PGRAPH_DMA_STATE_DF_REQ2                      0x00000002 /* R---V */
#define NV_PGRAPH_DMA_STATE_DF_LO                        0x00000003 /* R---V */
#define NV_PGRAPH_DMA_STATE_DF_HI                        0x00000004 /* R---V */
#define NV_PGRAPH_DMA_RETURN                             0x00401038 /* RW-4R */
#define NV_PGRAPH_DMA_RETURN_VALUE                             31:0 /* RWXUF */
#define NV_PGRAPH_DMA_A_XLATE_INST                       0x00401040 /* RW-4R */
#define NV_PGRAPH_DMA_A_XLATE_INST_VALUE                       15:0 /* RWXUF */
#define NV_PGRAPH_DMA_A_CONTROL                          0x00401044 /* RW-4R */
#define NV_PGRAPH_DMA_A_CONTROL_PAGE_TABLE                    12:12 /* RWIVF */
#define NV_PGRAPH_DMA_A_CONTROL_PAGE_TABLE_NOT_PRESENT   0x00000000 /* RWI-V */
#define NV_PGRAPH_DMA_A_CONTROL_PAGE_TABLE_PRESENT       0x00000001 /* RW--V */
#define NV_PGRAPH_DMA_A_CONTROL_PAGE_ENTRY                    13:13 /* RWXVF */
#define NV_PGRAPH_DMA_A_CONTROL_PAGE_ENTRY_NOT_LINEAR    0x00000000 /* RW--V */
#define NV_PGRAPH_DMA_A_CONTROL_PAGE_ENTRY_LINEAR        0x00000001 /* RW--V */
#define NV_PGRAPH_DMA_A_CONTROL_TARGET_NODE                   17:16 /* RWXUF */
#define NV_PGRAPH_DMA_A_CONTROL_TARGET_NODE_NVM          0x00000000 /* RW--V */
#define NV_PGRAPH_DMA_A_CONTROL_TARGET_NODE_NVM_TILED    0x00000001 /* RW--V */
#define NV_PGRAPH_DMA_A_CONTROL_TARGET_NODE_PCI          0x00000002 /* RW--V */
#define NV_PGRAPH_DMA_A_CONTROL_TARGET_NODE_AGP          0x00000003 /* RW--V */
#define NV_PGRAPH_DMA_A_CONTROL_ADJUST                        31:20 /* RWXUF */
#define NV_PGRAPH_DMA_A_LIMIT                            0x00401048 /* RW-4R */
#define NV_PGRAPH_DMA_A_LIMIT_OFFSET                           31:0 /* RWXUF */
#define NV_PGRAPH_DMA_A_TLB_PTE                          0x0040104C /* RW-4R */
#define NV_PGRAPH_DMA_A_TLB_PTE_ACCESS                          1:1 /* RWXVF */
#define NV_PGRAPH_DMA_A_TLB_PTE_ACCESS_READ_ONLY         0x00000000 /* RW--V */
#define NV_PGRAPH_DMA_A_TLB_PTE_ACCESS_READ_WRITE        0x00000001 /* RW--V */
#define NV_PGRAPH_DMA_A_TLB_PTE_FRAME_ADDRESS                 31:12 /* RWXUF */
#define NV_PGRAPH_DMA_A_TLB_TAG                          0x00401050 /* RW-4R */
#define NV_PGRAPH_DMA_A_TLB_TAG_ADDRESS                       31:12 /* RWXUF */
#define NV_PGRAPH_DMA_A_ADJ_OFFSET                       0x00401054 /* RW-4R */
#define NV_PGRAPH_DMA_A_ADJ_OFFSET_VALUE                       31:0 /* RWXUF */
#define NV_PGRAPH_DMA_A_OFFSET                           0x00401058 /* RW-4R */
#define NV_PGRAPH_DMA_A_OFFSET_VALUE                           31:0 /* RWXUF */
#define NV_PGRAPH_DMA_A_SIZE                             0x0040105C /* RW-4R */
#define NV_PGRAPH_DMA_A_SIZE_VALUE                             24:0 /* RWXUF */
#define NV_PGRAPH_DMA_A_Y_SIZE                           0x00401060 /* RW-4R */
#define NV_PGRAPH_DMA_A_Y_SIZE_VALUE                           10:0 /* RWXUF */
#define NV_PGRAPH_DMA_B_XLATE_INST                       0x00401080 /* RW-4R */
#define NV_PGRAPH_DMA_B_XLATE_INST_VALUE                       15:0 /* RWXUF */
#define NV_PGRAPH_DMA_B_CONTROL                          0x00401084 /* RW-4R */
#define NV_PGRAPH_DMA_B_CONTROL_PAGE_TABLE                    12:12 /* RWIVF */
#define NV_PGRAPH_DMA_B_CONTROL_PAGE_TABLE_NOT_PRESENT   0x00000000 /* RWI-V */
#define NV_PGRAPH_DMA_B_CONTROL_PAGE_TABLE_PRESENT       0x00000001 /* RW--V */
#define NV_PGRAPH_DMA_B_CONTROL_PAGE_ENTRY                    13:13 /* RWXVF */
#define NV_PGRAPH_DMA_B_CONTROL_PAGE_ENTRY_NOT_LINEAR    0x00000000 /* RW--V */
#define NV_PGRAPH_DMA_B_CONTROL_PAGE_ENTRY_LINEAR        0x00000001 /* RW--V */
#define NV_PGRAPH_DMA_B_CONTROL_TARGET_NODE                   17:16 /* RWXUF */
#define NV_PGRAPH_DMA_B_CONTROL_TARGET_NODE_NVM          0x00000000 /* RW--V */
#define NV_PGRAPH_DMA_B_CONTROL_TARGET_NODE_NVM_TILED    0x00000001 /* RW--V */
#define NV_PGRAPH_DMA_B_CONTROL_TARGET_NODE_PCI          0x00000002 /* RW--V */
#define NV_PGRAPH_DMA_B_CONTROL_TARGET_NODE_AGP          0x00000003 /* RW--V */
#define NV_PGRAPH_DMA_B_CONTROL_ADJUST                        31:20 /* RWXUF */
#define NV_PGRAPH_DMA_B_LIMIT                            0x00401088 /* RW-4R */
#define NV_PGRAPH_DMA_B_LIMIT_OFFSET                           31:0 /* RWXUF */
#define NV_PGRAPH_DMA_B_TLB_PTE                          0x0040108C /* RW-4R */
#define NV_PGRAPH_DMA_B_TLB_PTE_ACCESS                          1:1 /* RWXVF */
#define NV_PGRAPH_DMA_B_TLB_PTE_ACCESS_READ_ONLY         0x00000000 /* RW--V */
#define NV_PGRAPH_DMA_B_TLB_PTE_ACCESS_READ_WRITE        0x00000001 /* RW--V */
#define NV_PGRAPH_DMA_B_TLB_PTE_FRAME_ADDRESS                 31:12 /* RWXUF */
#define NV_PGRAPH_DMA_B_TLB_TAG                          0x00401090 /* RW-4R */
#define NV_PGRAPH_DMA_B_TLB_TAG_ADDRESS                       31:12 /* RWXUF */
#define NV_PGRAPH_DMA_B_ADJ_OFFSET                       0x00401094 /* RW-4R */
#define NV_PGRAPH_DMA_B_ADJ_OFFSET_VALUE                       31:0 /* RWXUF */
#define NV_PGRAPH_DMA_B_OFFSET                           0x00401098 /* RW-4R */
#define NV_PGRAPH_DMA_B_OFFSET_VALUE                           31:0 /* RWXUF */
#define NV_PGRAPH_DMA_B_SIZE                             0x0040109C /* RW-4R */
#define NV_PGRAPH_DMA_B_SIZE_VALUE                             24:0 /* RWXUF */
#define NV_PGRAPH_DMA_B_Y_SIZE                           0x004010A0 /* RW-4R */
#define NV_PGRAPH_DMA_B_Y_SIZE_VALUE                           10:0 /* RWXUF */
#define NV_PGRAPH_CONTROL_OUT_INTERPOLATOR                      1:0 /* -WIUF */
#define NV_PGRAPH_CONTROL_OUT_INTERPOLATOR_ZOH_MS        0x00000000 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_INTERPOLATOR_ZOH           0x00000001 /* -WIUV */
#define NV_PGRAPH_CONTROL_OUT_INTERPOLATOR_FOH           0x00000002 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_WRAP_U                            5:4 /* -WIUF */
#define NV_PGRAPH_CONTROL_OUT_WRAP_U_CYLINDRICAL         0x00000000 /* -WIUV */
#define NV_PGRAPH_CONTROL_OUT_WRAP_U_WRAP                0x00000001 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_WRAP_U_MIRROR              0x00000002 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_WRAP_U_CLAMP               0x00000003 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_WRAP_V                            7:6 /* -WIUF */
#define NV_PGRAPH_CONTROL_OUT_WRAP_V_CYLINDRICAL         0x00000000 /* -WIUV */
#define NV_PGRAPH_CONTROL_OUT_WRAP_V_WRAP                0x00000001 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_WRAP_V_MIRROR              0x00000002 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_WRAP_V_CLAMP               0x00000003 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_COLOR_FORMAT                      8:8 /* -WIUF */
#define NV_PGRAPH_CONTROL_OUT_COLOR_FORMAT_LE_X8R8G8B8   0x00000000 /* -WIUV */
#define NV_PGRAPH_CONTROL_OUT_COLOR_FORMAT_LE_A8R8G8B8   0x00000001 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_SRCCOLOR                        11:10 /* -W-UF */
#define NV_PGRAPH_CONTROL_OUT_SRCCOLOR_NORMAL            0x00000000 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_SRCCOLOR_COLOR_INVERSE     0x00000001 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_SRCCOLOR_ALPHA_INVERSE     0x00000002 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_SRCCOLOR_ALPHA_ONE         0x00000003 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_CULLING                         13:12 /* -WIUF */
#define NV_PGRAPH_CONTROL_OUT_CULLING_ILLEGAL            0x00000000 /* -WIUV */
#define NV_PGRAPH_CONTROL_OUT_CULLING_NONE               0x00000001 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_CULLING_COUNTERCLOCKWISE   0x00000002 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_CULLING_CLOCKWISE          0x00000003 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_ZBUFFER                         15:15 /* -WIUF */
#define NV_PGRAPH_CONTROL_OUT_ZBUFFER_SCREEN             0x00000000 /* -WIUV */
#define NV_PGRAPH_CONTROL_OUT_ZBUFFER_LINEAR             0x00000001 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_ZETA_COMPARE                    19:16 /* -WIUF */
#define NV_PGRAPH_CONTROL_OUT_ZETA_COMPARE_ILLEGAL       0x00000000 /* -WIUV */
#define NV_PGRAPH_CONTROL_OUT_ZETA_COMPARE_FALSE         0x00000001 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_ZETA_COMPARE_LT            0x00000002 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_ZETA_COMPARE_EQ            0x00000003 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_ZETA_COMPARE_LE            0x00000004 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_ZETA_COMPARE_GT            0x00000005 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_ZETA_COMPARE_NE            0x00000006 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_ZETA_COMPARE_GE            0x00000007 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_ZETA_COMPARE_TRUE          0x00000008 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_ZETA_WRITE                      22:20 /* -WIUF */
#define NV_PGRAPH_CONTROL_OUT_ZETA_WRITE_NEVER           0x00000000 /* -WIUV */
#define NV_PGRAPH_CONTROL_OUT_ZETA_WRITE_ALPHA           0x00000001 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_ZETA_WRITE_ALPHA_ZETA      0x00000002 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_ZETA_WRITE_ZETA            0x00000003 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_ZETA_WRITE_ALWAYS          0x00000004 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_COLOR_WRITE                     26:24 /* -WIUF */
#define NV_PGRAPH_CONTROL_OUT_COLOR_WRITE_NEVER          0x00000000 /* -WIUV */
#define NV_PGRAPH_CONTROL_OUT_COLOR_WRITE_ALPHA          0x00000001 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_COLOR_WRITE_ALPHA_ZETA     0x00000002 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_COLOR_WRITE_ZETA           0x00000003 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_ROP                             28:28 /* -WIUF */
#define NV_PGRAPH_CONTROL_OUT_ROP_BLEND_AND              0x00000000 /* -WIUV */
#define NV_PGRAPH_CONTROL_OUT_ROP_ADD_WITH_SATURATION    0x00000001 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_BLEND_BETA                      29:29 /* -W-UF */
#define NV_PGRAPH_CONTROL_OUT_BLEND_BETA_SRCALPHA        0x00000000 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_BLEND_BETA_DESTCOLOR       0x00000001 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_BLEND_INPUT0                    30:30 /* -W-UF */
#define NV_PGRAPH_CONTROL_OUT_BLEND_INPUT0_DESTCOLOR     0x00000000 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_BLEND_INPUT0_ZERO          0x00000001 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_BLEND_INPUT1                    31:31 /* -W-UF */
#define NV_PGRAPH_CONTROL_OUT_BLEND_INPUT1_SRCCOLOR      0x00000000 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_BLEND_INPUT1_ZERO          0x00000001 /* -W-UV */
#define NV_PGRAPH_ALPHACNTRL_ALPHA_KEY                          7:0 /* RWXUF */
#define NV_PGRAPH_ALPHACNTRL_ALPHA_COMPARE                     11:8 /* RWXVF */
#define NV_PGRAPH_ALPHACNTRL_ALPHA_COMPARE_ILLEGAL       0x00000000 /* RW--V */
#define NV_PGRAPH_ALPHACNTRL_ALPHA_COMPARE_FALSE         0x00000001 /* RW--V */
#define NV_PGRAPH_ALPHACNTRL_ALPHA_COMPARE_LT            0x00000002 /* RW--V */
#define NV_PGRAPH_ALPHACNTRL_ALPHA_COMPARE_EQ            0x00000003 /* RW--V */
#define NV_PGRAPH_ALPHACNTRL_ALPHA_COMPARE_LE            0x00000004 /* RW--V */
#define NV_PGRAPH_ALPHACNTRL_ALPHA_COMPARE_GT            0x00000005 /* RW--V */
#define NV_PGRAPH_ALPHACNTRL_ALPHA_COMPARE_NE            0x00000006 /* RW--V */
#define NV_PGRAPH_ALPHACNTRL_ALPHA_COMPARE_GE            0x00000007 /* RW--V */
#define NV_PGRAPH_ALPHACNTRL_ALPHA_COMPARE_TRUE          0x00000008 /* RW--V */
/* dev_igraph.ref */
#define NV_IGRAPH                             0x0001FFFF:0x00000000 /* RW--D */
#define NV_IGRAPH_ATTR_OFFSET(i)                 (0x00000000+(i)*8) /* RW-4A */
#define NV_IGRAPH_ATTR_OFFSET__SIZE_1                            16 /*       */
#define NV_IGRAPH_ATTR_OFFSET_OFFSET_FIELD                     27:0 /* RWX-F */
#define NV_IGRAPH_ATTR_OFFSET_CTXDMA_FIELD                    31:31 /* RWX-F */
#define NV_IGRAPH_ATTR_OFFSET_CTXDMA_VTXA                       0x0 /* RW--V */
#define NV_IGRAPH_ATTR_OFFSET_CTXDMA_VTXB                       0x1 /* RW--V */
#define NV_IGRAPH_ATTR_FORMAT(i)                 (0x00000004+(i)*8) /* RW-4A */
#define NV_IGRAPH_ATTR_FORMAT__SIZE_1                            16 /*       */
#define NV_IGRAPH_ATTR_FORMAT_TYPE_FIELD                        2:0 /* RWX-F */
#define NV_IGRAPH_ATTR_FORMAT_TYPE_UB_D3D                       0x0 /* RW--V */
#define NV_IGRAPH_ATTR_FORMAT_TYPE_S1                           0x1 /* RW--V */
#define NV_IGRAPH_ATTR_FORMAT_TYPE_F                            0x2 /* RW--V */
#define NV_IGRAPH_ATTR_FORMAT_TYPE_UB_OGL                       0x4 /* RW--V */
#define NV_IGRAPH_ATTR_FORMAT_TYPE_S32K                         0x5 /* RW--V */
#define NV_IGRAPH_ATTR_FORMAT_TYPE_CMP                          0x6 /* RW--V */
#define NV_IGRAPH_ATTR_FORMAT_SIZE_FIELD                        6:4 /* RWI-F */
#define NV_IGRAPH_ATTR_FORMAT_DISABLED                          0x0 /* RWI-V */
#define NV_IGRAPH_ATTR_FORMAT_SIZE_1                            0x1 /* RW--V */
#define NV_IGRAPH_ATTR_FORMAT_SIZE_2                            0x2 /* RW--V */
#define NV_IGRAPH_ATTR_FORMAT_SIZE_3                            0x3 /* RW--V */
#define NV_IGRAPH_ATTR_FORMAT_SIZE_4                            0x4 /* RW--V */
#define NV_IGRAPH_ATTR_FORMAT_SIZE_3W                           0x7 /* RW--V */
#define NV_IGRAPH_ATTR_FORMAT_STRIDE_FIELD                     15:8 /* RWX-F */
#define NV_IGRAPH_ATTR_FORMAT_0_097                            0x42 /* RWC-V */
#define NV_IGRAPH_ATTR_FORMAT_1_097                            0x02 /* RWC-V */
#define NV_IGRAPH_ATTR_FORMAT_2_097                            0x02 /* RWC-V */
#define NV_IGRAPH_ATTR_FORMAT_3_097                            0x00 /* RWC-V */
#define NV_IGRAPH_ATTR_FORMAT_4_097                            0x00 /* RWC-V */
#define NV_IGRAPH_ATTR_FORMAT_5_097                            0x02 /* RWC-V */
#define NV_IGRAPH_ATTR_FORMAT_6_097                            0x00 /* RWC-V */
#define NV_IGRAPH_ATTR_FORMAT_7_097                            0x00 /* RWC-V */
#define NV_IGRAPH_ATTR_FORMAT_8_097                            0x00 /* RWC-V */
#define NV_IGRAPH_ATTR_FORMAT_9_097                            0x02 /* RWC-V */
#define NV_IGRAPH_ATTR_FORMAT_A_097                            0x02 /* RWC-V */
#define NV_IGRAPH_ATTR_FORMAT_B_097                            0x02 /* RWC-V */
#define NV_IGRAPH_ATTR_FORMAT_C_097                            0x02 /* RWC-V */
#define NV_IGRAPH_ATTR_FORMAT_D_097                            0x02 /* RWC-V */
#define NV_IGRAPH_ATTR_FORMAT_E_097                            0x00 /* RWC-V */
#define NV_IGRAPH_ATTR_FORMAT_F_097                            0x00 /* RWC-V */
#define NV_IGRAPH_ATTR_FORMAT_CMP_DATA_0H_FIELD                10:0 /* RWI-F */
#define NV_IGRAPH_ATTR_FORMAT_CMP_DATA_0L_FIELD                 9:5 /* RWI-F */
#define NV_IGRAPH_ATTR_FORMAT_CMP_DATA_1H_FIELD               21:11 /* RWI-F */
#define NV_IGRAPH_ATTR_FORMAT_CMP_DATA_1L_FIELD               20:16 /* RWI-F */
#define NV_IGRAPH_ATTR_FORMAT_CMP_DATA_2H_FIELD               31:22 /* RWI-F */
#define NV_IGRAPH_ATTR_FORMAT_CMP_DATA_2L_FIELD               30:25 /* RWI-F */
#define NV_IGRAPH_PRIM_TYPE                              0x00000080 /* RW-4R */
#define NV_IGRAPH_PRIM_TYPE_FIELD                               3:0 /* RWI-F */
#define NV_IGRAPH_PRIM_TYPE_NONE                                0x0 /* RWI-V */
#define NV_IGRAPH_PRIM_TYPE_POINT                               0x1 /* RW--V */
#define NV_IGRAPH_PRIM_TYPE_LINE                                0x2 /* RW--V */
#define NV_IGRAPH_PRIM_TYPE_LINEL                               0x3 /* RW--V */
#define NV_IGRAPH_PRIM_TYPE_LINES                               0x4 /* RW--V */
#define NV_IGRAPH_PRIM_TYPE_TRI                                 0x5 /* RW--V */
#define NV_IGRAPH_PRIM_TYPE_TRIS                                0x6 /* RW--V */
#define NV_IGRAPH_PRIM_TYPE_TRIF                                0x7 /* RW--V */
#define NV_IGRAPH_PRIM_TYPE_QUAD                                0x8 /* RW--V */
#define NV_IGRAPH_PRIM_TYPE_QUADS                               0x9 /* RW--V */
#define NV_IGRAPH_PRIM_TYPE_POLY                                0xA /* RW--V */
#define NV_IGRAPH_EDGE_FLAG                              0x00000084 /* RW-4R */
#define NV_IGRAPH_EDGE_FLAG_FIELD                               0:0 /* RWI-F */
#define NV_IGRAPH_EDGE_FLAG_INIT                                0x1 /* RWI-V */
#define NV_IGRAPH_INLINE_VTX_0                           0x000000C0 /* -W-4R */
#define NV_IGRAPH_INLINE_VTX_0_FIELD                           31:0 /* -W--F */
#define NV_IGRAPH_INLINE_VTX_1                           0x000000C4 /* -W-4R */
#define NV_IGRAPH_INLINE_VTX_1_FIELD                           31:0 /* -W--F */
#define NV_IGRAPH_IDX32_0                                0x000000C8 /* -W-4R */
#define NV_IGRAPH_IDX32_0_FIELD                                19:0 /* -W--F */
#define NV_IGRAPH_IDX32_0_SIGN_FIELD                          31:31 /* -W--F */
#define NV_IGRAPH_IDX32_1                                0x000000CC /* -W-4R */
#define NV_IGRAPH_IDX32_1_FIELD                                19:0 /* -W--F */
#define NV_IGRAPH_IDX32_1_SIGN_FIELD                          31:31 /* -W--F */
#define NV_IGRAPH_VERTEX_FILE_SIZE                             0x18 /* ----T */
#define NV_IGRAPH_MAX_REL_INDEX                                 0xf /* ----T */
#define NV_IGRAPH_IDX16_0                                0x000000D0 /* -W-4R */
#define NV_IGRAPH_IDX16_0_0_FIELD                              15:0 /* -W--F */
#define NV_IGRAPH_IDX16_0_1_FIELD                             31:16 /* -W--F */
#define NV_IGRAPH_IDX16_1                                0x000000D4 /* -W-4R */
#define NV_IGRAPH_IDX16_1_0_FIELD                              15:0 /* -W--F */
#define NV_IGRAPH_IDX16_1_1_FIELD                             31:16 /* -W--F */
#define NV_IGRAPH_IDX_ARRAY                              0x000000D8 /* -W-4R */
#define NV_IGRAPH_IDX_ARRAY_BASE_FIELD                         19:0 /* -W--F */
#define NV_IGRAPH_IDX_ARRAY_COUNT_FIELD                       31:24 /* -W--F */
#define NV_IGRAPH_INVALIDATE_CACHE                       0x000000F8 /* -W-4R */
#define NV_IGRAPH_INVALIDATE_CACHE_FIELD                        0:0 /* -W--F */
#define NV_IGRAPH_INVALIDATE_FILE                        0x000000FC /* -W-4R */
#define NV_IGRAPH_INVALIDATE_FILE_FIELD                         0:0 /* -W--F */
#define NV_IGRAPH_STATE_BUNDLE(i)                (0x00000800+(i)*4) /* -W-4A */
#define NV_IGRAPH_STATE_BUNDLE__SIZE_1                          512 /*       */
#define NV_IGRAPH_STATE_BUNDLE_FIELD                           31:0 /* -W--F */
#define NV_IGRAPH_VTX_ATTR_1UB(i)                   (0x1100+(i)*16) /* -W-4A */
#define NV_IGRAPH_VTX_ATTR_1UB__SIZE_1                           16 /*       */
#define NV_IGRAPH_VTX_ATTR_1UB_FIELD                            7:0 /* -W--F */
#define NV_IGRAPH_VTX_ATTR_2UB(i)                   (0x1200+(i)*16) /* -W-4A */
#define NV_IGRAPH_VTX_ATTR_2UB__SIZE_1                           16 /*       */
#define NV_IGRAPH_VTX_ATTR_2UB_0_FIELD                          7:0 /* -W--F */
#define NV_IGRAPH_VTX_ATTR_2UB_1_FIELD                         15:8 /* -W--F */
#define NV_IGRAPH_VTX_ATTR_3UB(i)                   (0x1300+(i)*16) /* -W-4A */
#define NV_IGRAPH_VTX_ATTR_3UB__SIZE_1                           16 /*       */
#define NV_IGRAPH_VTX_ATTR_3UB_0_FIELD                          7:0 /* -W--F */
#define NV_IGRAPH_VTX_ATTR_3UB_1_FIELD                         15:8 /* -W--F */
#define NV_IGRAPH_VTX_ATTR_3UB_2_FIELD                        23:16 /* -W--F */
#define NV_IGRAPH_VTX_ATTR_4UB(i)                   (0x1000+(i)*16) /* -W-4A */
#define NV_IGRAPH_VTX_ATTR_4UB__SIZE_1                           16 /*       */
#define NV_IGRAPH_VTX_ATTR_4UB_0_FIELD                          7:0 /* -W--F */
#define NV_IGRAPH_VTX_ATTR_4UB_1_FIELD                         15:8 /* -W--F */
#define NV_IGRAPH_VTX_ATTR_4UB_2_FIELD                        23:16 /* -W--F */
#define NV_IGRAPH_VTX_ATTR_4UB_3_FIELD                        31:24 /* -W--F */
#define NV_IGRAPH_VTX_ATTR_1S32K(i)                 (0x1500+(i)*16) /* -W-4A */
#define NV_IGRAPH_VTX_ATTR_1S32K__SIZE_1                         16 /*       */
#define NV_IGRAPH_VTX_ATTR_1S32K_FIELD                         15:0 /* -W--F */
#define NV_IGRAPH_VTX_ATTR_2S32K(i)                 (0x1600+(i)*16) /* -W-4A */
#define NV_IGRAPH_VTX_ATTR_2S32K__SIZE_1                         16 /*       */
#define NV_IGRAPH_VTX_ATTR_2S32K_0_FIELD                       15:0 /* -W--F */
#define NV_IGRAPH_VTX_ATTR_2S32K_1_FIELD                      31:16 /* -W--F */
#define NV_IGRAPH_VTX_ATTR_3S32K(i)                 (0x1700+(i)*16) /* -W-4A */
#define NV_IGRAPH_VTX_ATTR_3S32K__SIZE_1                         16 /*       */
#define NV_IGRAPH_VTX_ATTR_3S32K_0_FIELD                       15:0 /* -W--F */
#define NV_IGRAPH_VTX_ATTR_3S32K_1_FIELD                      31:16 /* -W--F */
#define NV_IGRAPH_VTX_ATTR_4S32K(i)                 (0x1400+(i)*16) /* -W-4A */
#define NV_IGRAPH_VTX_ATTR_4S32K__SIZE_1                         16 /*       */
#define NV_IGRAPH_VTX_ATTR_4S32K_0_FIELD                       15:0 /* -W--F */
#define NV_IGRAPH_VTX_ATTR_4S32K_1_FIELD                      31:16 /* -W--F */
#define NV_IGRAPH_VTX_ATTR_1S1(i)                   (0x1900+(i)*16) /* -W-4A */
#define NV_IGRAPH_VTX_ATTR_1S1__SIZE_1                           16 /*       */
#define NV_IGRAPH_VTX_ATTR_1S1_FIELD                           15:0 /* -W--F */
#define NV_IGRAPH_VTX_ATTR_2S1(i)                   (0x1A00+(i)*16) /* -W-4A */
#define NV_IGRAPH_VTX_ATTR_2S1__SIZE_1                           16 /*       */
#define NV_IGRAPH_VTX_ATTR_2S1_0_FIELD                         15:0 /* -W--F */
#define NV_IGRAPH_VTX_ATTR_2S1_1_FIELD                        31:16 /* -W--F */
#define NV_IGRAPH_VTX_ATTR_3S1(i)                   (0x1B00+(i)*16) /* -W-4A */
#define NV_IGRAPH_VTX_ATTR_3S1__SIZE_1                           16 /*       */
#define NV_IGRAPH_VTX_ATTR_3S1_0_FIELD                         15:0 /* -W--F */
#define NV_IGRAPH_VTX_ATTR_3S1_1_FIELD                        31:16 /* -W--F */
#define NV_IGRAPH_VTX_ATTR_4S1(i)                   (0x1800+(i)*16) /* -W-4A */
#define NV_IGRAPH_VTX_ATTR_4S1__SIZE_1                           16 /*       */
#define NV_IGRAPH_VTX_ATTR_4S1_0_FIELD                         15:0 /* -W--F */
#define NV_IGRAPH_VTX_ATTR_4S1_1_FIELD                        31:16 /* -W--F */
#define NV_IGRAPH_VTX_ATTR_1F(i)                    (0x1D00+(i)*16) /* -W-4A */
#define NV_IGRAPH_VTX_ATTR_1F__SIZE_1                            16 /*       */
#define NV_IGRAPH_VTX_ATTR_1F_FIELD                            31:0 /* -W--F */
#define NV_IGRAPH_VTX_ATTR_2F(i)                    (0x1E00+(i)*16) /* -W-4A */
#define NV_IGRAPH_VTX_ATTR_2F__SIZE_1                            16 /*       */
#define NV_IGRAPH_VTX_ATTR_2F_FIELD                            31:0 /* -W--F */
#define NV_IGRAPH_VTX_ATTR_3F(i)                    (0x1F00+(i)*16) /* -W-4A */
#define NV_IGRAPH_VTX_ATTR_3F__SIZE_1                            16 /*       */
#define NV_IGRAPH_VTX_ATTR_3F_FIELD                            31:0 /* -W--F */
#define NV_IGRAPH_VTX_ATTR_4F(i)                    (0x1C00+(i)*16) /* -W-4A */
#define NV_IGRAPH_VTX_ATTR_4F__SIZE_1                            16 /*       */
#define NV_IGRAPH_VTX_ATTR_4F_FIELD                            31:0 /* -W--F */
#define NV_IGRAPH_FD(i)                              (0x4000+(i)*4) /* RW-4A */
#define NV_IGRAPH_FD__SIZE_1                                   4096 /*       */
#define NV_IGRAPH_FD_FIELD                                     31:0 /* -W--F */
#define NV_IGRAPH_FD2PIPE(c,a)                 (((c)<<10)|(a))      /* ----T */
#define NV_IGRAPH_PIPE2FD_CMD(a)                     (((a)>>10)&31) /* ----T */
#define NV_IGRAPH_PIPE2FD_ADDR(a)                       ((a)&0x3ff) /* ----T */
#define NV_IGRAPH_FD_CMD_END_PATCH                             0x16 /* ----T */
#define NV_IGRAPH_FD_CMD_END_TRANSITION                        0x17 /* ----T */
#define NV_IGRAPH_FD_CMD_REG                                   0x1a /* ----T */
#define NV_IGRAPH_FD_CMD_GUARD                                 0x19 /* ----T */
#define NV_IGRAPH_FD_CMD_COEFF                                 0x18 /* ----T */
#define NV_IGRAPH_FD_CMD_FLUSH                                 0x1f /* ----T */
#define NV_IGRAPH_FD_CMD_GO                                    0x11 /* ----T */
#define NV_IGRAPH_FD_CMD_NOP                                   0x10 /* ----T */
#define NV_IGRAPH_FD_REG_PATCH0                                0x00 /* ----T */
#define NV_IGRAPH_FD_REG_PATCH1                                0x04 /* ----T */
#define NV_IGRAPH_FD_REG_PATCH2                                0x10 /* ----T */
#define NV_IGRAPH_FD_REG_PATCH3                                0x14 /* ----T */
#define NV_IGRAPH_FD_REG_SWATCH                                0x20 /* ----T */
#define NV_IGRAPH_FD_REG_TRANSITION0                           0x00 /* ----T */
#define NV_IGRAPH_FD_REG_TRANSITION1                           0x04 /* ----T */
#define NV_IGRAPH_FD_REG_TRANSITION2                           0x30 /* ----T */
#define NV_IGRAPH_FD_REG_TRANSITION_CONTROL                    0x40 /* ----T */
#define NV_IGRAPH_FD_REG_CURVE                                 0x50 /* ----T */
#define NV_IGRAPH_XF(i)                             (0x10000+(i)*4) /* RW-4A */
#define NV_IGRAPH_XF__SIZE_1                                  16384 /*       */
#define NV_IGRAPH_XF_FIELD                                     31:0 /* -W--F */
#define NV_IGRAPH_XF_CMD_NOP                                    0x0 /* ----T */
#define NV_IGRAPH_XF_CMD_VAB                                    0x1 /* ----T */
#define NV_IGRAPH_XF_CMD_XFPR                                   0x2 /* ----T */
#define NV_IGRAPH_XF_CMD_LTPR                                   0x3 /* ----T */
#define NV_IGRAPH_XF_CMD_IBUF                                   0x4 /* ----T */
#define NV_IGRAPH_XF_CMD_PASSTHR                                0x5 /* ----T */
#define NV_IGRAPH_XF_CMD_PROSTART                               0x6 /* ----T */
#define NV_IGRAPH_XF_CMD_MODE                                   0x7 /* ----T */
#define NV_IGRAPH_XF_CMD_RSVD_8                                 0x8 /* ----T */
#define NV_IGRAPH_XF_CMD_XFCTX                                  0x9 /* ----T */
#define NV_IGRAPH_XF_CMD_LTCTX                                  0xa /* ----T */
#define NV_IGRAPH_XF_CMD_LTC0                                   0xb /* ----T */
#define NV_IGRAPH_XF_CMD_LTC1                                   0xc /* ----T */
#define NV_IGRAPH_XF_CMD_LTC2                                   0xd /* ----T */
#define NV_IGRAPH_XF_CMD_LTC3                                   0xe /* ----T */
#define NV_IGRAPH_XF_CMD_SYNC                                   0xf /* ----T */
#define NV_IGRAPH_XF_VAB_POS                                   0x00 /* ----T */
#define NV_IGRAPH_XF_VAB_WGHT                                  0x01 /* ----T */
#define NV_IGRAPH_XF_VAB_NRM                                   0x02 /* ----T */
#define NV_IGRAPH_XF_VAB_DIFF                                  0x03 /* ----T */
#define NV_IGRAPH_XF_VAB_SPEC                                  0x04 /* ----T */
#define NV_IGRAPH_XF_VAB_FOG                                   0x05 /* ----T */
#define NV_IGRAPH_XF_VAB_PS                                    0x06 /* ----T */
#define NV_IGRAPH_XF_VAB_BDIFF                                 0x07 /* ----T */
#define NV_IGRAPH_XF_VAB_BSPEC                                 0x08 /* ----T */
#define NV_IGRAPH_XF_VAB_TXT0                                  0x09 /* ----T */
#define NV_IGRAPH_XF_VAB_TXT1                                  0x0a /* ----T */
#define NV_IGRAPH_XF_VAB_TXT2                                  0x0b /* ----T */
#define NV_IGRAPH_XF_VAB_TXT3                                  0x0c /* ----T */
#define NV_IGRAPH_XF_VAB_TXT4                                  0x0d /* ----T */
#define NV_IGRAPH_XF_VAB_TXT5                                  0x0e /* ----T */
#define NV_IGRAPH_XF_VAB_TXT6                                  0x0f /* ----T */
#define NV_IGRAPH_XF_VAB_PASS                                  0x10 /* ----T */
#define NV_IGRAPH_XF_VAB_INVAL                                 0x1f /* ----T */
#define NV_IGRAPH_XF_VAB_0                                     0x00 /* ----T */
#define NV_IGRAPH_XF_VAB_1                                     0x01 /* ----T */
#define NV_IGRAPH_XF_VAB_2                                     0x02 /* ----T */
#define NV_IGRAPH_XF_VAB_3                                     0x03 /* ----T */
#define NV_IGRAPH_XF_VAB_4                                     0x04 /* ----T */
#define NV_IGRAPH_XF_VAB_5                                     0x05 /* ----T */
#define NV_IGRAPH_XF_VAB_6                                     0x06 /* ----T */
#define NV_IGRAPH_XF_VAB_7                                     0x07 /* ----T */
#define NV_IGRAPH_XF_VAB_8                                     0x08 /* ----T */
#define NV_IGRAPH_XF_VAB_9                                     0x09 /* ----T */
#define NV_IGRAPH_XF_VAB_A                                     0x0a /* ----T */
#define NV_IGRAPH_XF_VAB_B                                     0x0b /* ----T */
#define NV_IGRAPH_XF_VAB_C                                     0x0c /* ----T */
#define NV_IGRAPH_XF_VAB_D                                     0x0d /* ----T */
#define NV_IGRAPH_XF_VAB_E                                     0x0e /* ----T */
#define NV_IGRAPH_XF_VAB_F                                     0x0f /* ----T */
#define NV_IGRAPH_XF_OUT_POS                                   0x00 /* ----T */
#define NV_IGRAPH_XF_OUT_RSVD1                                 0x01 /* ----T */
#define NV_IGRAPH_XF_OUT_RSVD2                                 0x02 /* ----T */
#define NV_IGRAPH_XF_OUT_DIFF                                  0x03 /* ----T */
#define NV_IGRAPH_XF_OUT_SPEC                                  0x04 /* ----T */
#define NV_IGRAPH_XF_OUT_FOG                                   0x05 /* ----T */
#define NV_IGRAPH_XF_OUT_PS                                    0x06 /* ----T */
#define NV_IGRAPH_XF_OUT_BDIFF                                 0x07 /* ----T */
#define NV_IGRAPH_XF_OUT_BSPEC                                 0x08 /* ----T */
#define NV_IGRAPH_XF_OUT_TXT0                                  0x09 /* ----T */
#define NV_IGRAPH_XF_OUT_TXT1                                  0x0a /* ----T */
#define NV_IGRAPH_XF_OUT_TXT2                                  0x0b /* ----T */
#define NV_IGRAPH_XF_OUT_TXT3                                  0x0c /* ----T */
#define NV_IGRAPH_XF_OUT_TXT4                                  0x0d /* ----T */
#define NV_IGRAPH_XF_OUT_TXT5                                  0x0e /* ----T */
#define NV_IGRAPH_XF_OUT_TXT6                                  0x0f /* ----T */
#define NV_IGRAPH_XF_OUT_PASS                                  0x10 /* ----T */
#define NV_IGRAPH_XF_OUT_NOP                                   0x1f /* ----T */
#define NV_IGRAPH_XF_XFCTX_CMAT0                               0x00 /* ----T */
#define NV_IGRAPH_XF_XFCTX_PMAT0                               0x04 /* ----T */
#define NV_IGRAPH_XF_XFCTX_MMAT0                               0x08 /* ----T */
#define NV_IGRAPH_XF_XFCTX_IMMAT0                              0x0c /* ----T */
#define NV_IGRAPH_XF_XFCTX_MMAT1                               0x10 /* ----T */
#define NV_IGRAPH_XF_XFCTX_IMMAT1                              0x14 /* ----T */
#define NV_IGRAPH_XF_XFCTX_MMAT2                               0x18 /* ----T */
#define NV_IGRAPH_XF_XFCTX_IMMAT2                              0x1c /* ----T */
#define NV_IGRAPH_XF_XFCTX_MMAT3                               0x20 /* ----T */
#define NV_IGRAPH_XF_XFCTX_IMMAT3                              0x24 /* ----T */
#define NV_IGRAPH_XF_XFCTX_LIT0                                0x28 /* ----T */
#define NV_IGRAPH_XF_XFCTX_LIT1                                0x29 /* ----T */
#define NV_IGRAPH_XF_XFCTX_LIT2                                0x2a /* ----T */
#define NV_IGRAPH_XF_XFCTX_LIT3                                0x2b /* ----T */
#define NV_IGRAPH_XF_XFCTX_LIT4                                0x2c /* ----T */
#define NV_IGRAPH_XF_XFCTX_LIT5                                0x2d /* ----T */
#define NV_IGRAPH_XF_XFCTX_LIT6                                0x2e /* ----T */
#define NV_IGRAPH_XF_XFCTX_LIT7                                0x2f /* ----T */
#define NV_IGRAPH_XF_XFCTX_SPOT0                               0x30 /* ----T */
#define NV_IGRAPH_XF_XFCTX_SPOT1                               0x31 /* ----T */
#define NV_IGRAPH_XF_XFCTX_SPOT2                               0x32 /* ----T */
#define NV_IGRAPH_XF_XFCTX_SPOT3                               0x33 /* ----T */
#define NV_IGRAPH_XF_XFCTX_SPOT4                               0x34 /* ----T */
#define NV_IGRAPH_XF_XFCTX_SPOT5                               0x35 /* ----T */
#define NV_IGRAPH_XF_XFCTX_SPOT6                               0x36 /* ----T */
#define NV_IGRAPH_XF_XFCTX_SPOT7                               0x37 /* ----T */
#define NV_IGRAPH_XF_XFCTX_EYEP                                0x38 /* ----T */
#define NV_IGRAPH_XF_XFCTX_FOG                                 0x39 /* ----T */
#define NV_IGRAPH_XF_XFCTX_VPSCL                               0x3a /* ----T */
#define NV_IGRAPH_XF_XFCTX_VPOFF                               0x3b /* ----T */
#define NV_IGRAPH_XF_XFCTX_CONS0                               0x3c /* ----T */
#define NV_IGRAPH_XF_XFCTX_CONS1                               0x3d /* ----T */
#define NV_IGRAPH_XF_XFCTX_CONS2                               0x3e /* ----T */
#define NV_IGRAPH_XF_XFCTX_CONS3                               0x3f /* ----T */
#define NV_IGRAPH_XF_XFCTX_TG0MAT                              0x40 /* ----T */
#define NV_IGRAPH_XF_XFCTX_T0MAT                               0x44 /* ----T */
#define NV_IGRAPH_XF_XFCTX_TG1MAT                              0x48 /* ----T */
#define NV_IGRAPH_XF_XFCTX_T1MAT                               0x4c /* ----T */
#define NV_IGRAPH_XF_XFCTX_TG2MAT                              0x50 /* ----T */
#define NV_IGRAPH_XF_XFCTX_T2MAT                               0x54 /* ----T */
#define NV_IGRAPH_XF_XFCTX_TG3MAT                              0x58 /* ----T */
#define NV_IGRAPH_XF_XFCTX_T3MAT                               0x5c /* ----T */
#define NV_IGRAPH_XF_XFCTX_PRSPACE                             0x60 /* ----T */
#define NV_IGRAPH_XF_LTCTX_L0_AMB                              0x00 /* ----T */
#define NV_IGRAPH_XF_LTCTX_L0_DIF                              0x01 /* ----T */
#define NV_IGRAPH_XF_LTCTX_L0_SPC                              0x02 /* ----T */
#define NV_IGRAPH_XF_LTCTX_L0_K                                0x03 /* ----T */
#define NV_IGRAPH_XF_LTCTX_L0_SPT                              0x04 /* ----T */
#define NV_IGRAPH_XF_LTCTX_L0_BAMB                             0x05 /* ----T */
#define NV_IGRAPH_XF_LTCTX_L0_BDIF                             0x06 /* ----T */
#define NV_IGRAPH_XF_LTCTX_L0_BSPC                             0x07 /* ----T */
#define NV_IGRAPH_XF_LTCTX_L1_AMB                              0x08 /* ----T */
#define NV_IGRAPH_XF_LTCTX_L1_DIF                              0x09 /* ----T */
#define NV_IGRAPH_XF_LTCTX_L1_SPC                              0x0a /* ----T */
#define NV_IGRAPH_XF_LTCTX_L1_K                                0x0b /* ----T */
#define NV_IGRAPH_XF_LTCTX_L1_SPT                              0x0c /* ----T */
#define NV_IGRAPH_XF_LTCTX_L1_BAMB                             0x0d /* ----T */
#define NV_IGRAPH_XF_LTCTX_L1_BDIF                             0x0e /* ----T */
#define NV_IGRAPH_XF_LTCTX_L1_BSPC                             0x0f /* ----T */
#define NV_IGRAPH_XF_LTCTX_L2_AMB                              0x10 /* ----T */
#define NV_IGRAPH_XF_LTCTX_L2_DIF                              0x11 /* ----T */
#define NV_IGRAPH_XF_LTCTX_L2_SPC                              0x12 /* ----T */
#define NV_IGRAPH_XF_LTCTX_L2_K                                0x13 /* ----T */
#define NV_IGRAPH_XF_LTCTX_L2_SPT                              0x14 /* ----T */
#define NV_IGRAPH_XF_LTCTX_L2_BAMB                             0x15 /* ----T */
#define NV_IGRAPH_XF_LTCTX_L2_BDIF                             0x16 /* ----T */
#define NV_IGRAPH_XF_LTCTX_L2_BSPC                             0x17 /* ----T */
#define NV_IGRAPH_XF_LTCTX_L3_AMB                              0x18 /* ----T */
#define NV_IGRAPH_XF_LTCTX_L3_DIF                              0x19 /* ----T */
#define NV_IGRAPH_XF_LTCTX_L3_SPC                              0x1a /* ----T */
#define NV_IGRAPH_XF_LTCTX_L3_K                                0x1b /* ----T */
#define NV_IGRAPH_XF_LTCTX_L3_SPT                              0x1c /* ----T */
#define NV_IGRAPH_XF_LTCTX_L3_BAMB                             0x1d /* ----T */
#define NV_IGRAPH_XF_LTCTX_L3_BDIF                             0x1e /* ----T */
#define NV_IGRAPH_XF_LTCTX_L3_BSPC                             0x1f /* ----T */
#define NV_IGRAPH_XF_LTCTX_L4_AMB                              0x20 /* ----T */
#define NV_IGRAPH_XF_LTCTX_L4_DIF                              0x21 /* ----T */
#define NV_IGRAPH_XF_LTCTX_L4_SPC                              0x22 /* ----T */
#define NV_IGRAPH_XF_LTCTX_L4_K                                0x23 /* ----T */
#define NV_IGRAPH_XF_LTCTX_L4_SPT                              0x24 /* ----T */
#define NV_IGRAPH_XF_LTCTX_L4_BAMB                             0x25 /* ----T */
#define NV_IGRAPH_XF_LTCTX_L4_BDIF                             0x26 /* ----T */
#define NV_IGRAPH_XF_LTCTX_L4_BSPC                             0x27 /* ----T */
#define NV_IGRAPH_XF_LTCTX_L5_AMB                              0x28 /* ----T */
#define NV_IGRAPH_XF_LTCTX_L5_DIF                              0x29 /* ----T */
#define NV_IGRAPH_XF_LTCTX_L5_SPC                              0x2a /* ----T */
#define NV_IGRAPH_XF_LTCTX_L5_K                                0x2b /* ----T */
#define NV_IGRAPH_XF_LTCTX_L5_SPT                              0x2c /* ----T */
#define NV_IGRAPH_XF_LTCTX_L5_BAMB                             0x2d /* ----T */
#define NV_IGRAPH_XF_LTCTX_L5_BDIF                             0x2e /* ----T */
#define NV_IGRAPH_XF_LTCTX_L5_BSPC                             0x2f /* ----T */
#define NV_IGRAPH_XF_LTCTX_L6_AMB                              0x30 /* ----T */
#define NV_IGRAPH_XF_LTCTX_L6_DIF                              0x31 /* ----T */
#define NV_IGRAPH_XF_LTCTX_L6_SPC                              0x32 /* ----T */
#define NV_IGRAPH_XF_LTCTX_L6_K                                0x33 /* ----T */
#define NV_IGRAPH_XF_LTCTX_L6_SPT                              0x34 /* ----T */
#define NV_IGRAPH_XF_LTCTX_L6_BAMB                             0x35 /* ----T */
#define NV_IGRAPH_XF_LTCTX_L6_BDIF                             0x36 /* ----T */
#define NV_IGRAPH_XF_LTCTX_L6_BSPC                             0x37 /* ----T */
#define NV_IGRAPH_XF_LTCTX_L7_AMB                              0x38 /* ----T */
#define NV_IGRAPH_XF_LTCTX_L7_DIF                              0x39 /* ----T */
#define NV_IGRAPH_XF_LTCTX_L7_SPC                              0x3a /* ----T */
#define NV_IGRAPH_XF_LTCTX_L7_K                                0x3b /* ----T */
#define NV_IGRAPH_XF_LTCTX_L7_SPT                              0x3c /* ----T */
#define NV_IGRAPH_XF_LTCTX_L7_BAMB                             0x3d /* ----T */
#define NV_IGRAPH_XF_LTCTX_L7_BDIF                             0x3e /* ----T */
#define NV_IGRAPH_XF_LTCTX_L7_BSPC                             0x3f /* ----T */
#define NV_IGRAPH_XF_LTCTX_EYED                                0x40 /* ----T */
#define NV_IGRAPH_XF_LTCTX_FR_AMB                              0x41 /* ----T */
#define NV_IGRAPH_XF_LTCTX_BR_AMB                              0x42 /* ----T */
#define NV_IGRAPH_XF_LTCTX_CM_COL                              0x43 /* ----T */
#define NV_IGRAPH_XF_LTCTX_BCM_COL                             0x44 /* ----T */
#define NV_IGRAPH_XF_LTCTX_FOG_K                               0x45 /* ----T */
#define NV_IGRAPH_XF_LTCTX_ZERO                                0x46 /* ----T */
#define NV_IGRAPH_XF_LTCTX_PT0                                 0x47 /* ----T */
#define NV_IGRAPH_XF_LTCTX_PT1                                 0x48 /* ----T */
#define NV_IGRAPH_XF_LTCTX_FOGLIN                              0x49 /* ----T */
#define NV_IGRAPH_XF_LTC0_ONE0                                 0x00 /* ----T */
#define NV_IGRAPH_XF_LTC0_MONE                                 0x01 /* ----T */
#define NV_IGRAPH_XF_LTC0_l1                                   0x02 /* ----T */
#define NV_IGRAPH_XF_LTC0_Bl1                                  0x03 /* ----T */
#define NV_IGRAPH_XF_LTC1_ZERO1                                0x00 /* ----T */
#define NV_IGRAPH_XF_LTC1_l0                                   0x01 /* ----T */
#define NV_IGRAPH_XF_LTC1_Bl0                                  0x02 /* ----T */
#define NV_IGRAPH_XF_LTC1_PP                                   0x03 /* ----T */
#define NV_IGRAPH_XF_LTC1_r0                                   0x04 /* ----T */
#define NV_IGRAPH_XF_LTC1_r1                                   0x05 /* ----T */
#define NV_IGRAPH_XF_LTC1_r2                                   0x06 /* ----T */
#define NV_IGRAPH_XF_LTC1_r3                                   0x07 /* ----T */
#define NV_IGRAPH_XF_LTC1_r4                                   0x08 /* ----T */
#define NV_IGRAPH_XF_LTC1_r5                                   0x09 /* ----T */
#define NV_IGRAPH_XF_LTC1_r6                                   0x0a /* ----T */
#define NV_IGRAPH_XF_LTC1_r7                                   0x0b /* ----T */
#define NV_IGRAPH_XF_LTC1_L0                                   0x0c /* ----T */
#define NV_IGRAPH_XF_LTC1_L1                                   0x0d /* ----T */
#define NV_IGRAPH_XF_LTC1_L2                                   0x0e /* ----T */
#define NV_IGRAPH_XF_LTC1_L3                                   0x0f /* ----T */
#define NV_IGRAPH_XF_LTC1_L4                                   0x10 /* ----T */
#define NV_IGRAPH_XF_LTC1_L5                                   0x11 /* ----T */
#define NV_IGRAPH_XF_LTC1_L6                                   0x12 /* ----T */
#define NV_IGRAPH_XF_LTC1_L7                                   0x13 /* ----T */
#define NV_IGRAPH_XF_LTC2_ONE2                                 0x00 /* ----T */
#define NV_IGRAPH_XF_LTC2_m0                                   0x01 /* ----T */
#define NV_IGRAPH_XF_LTC2_Bm0                                  0x02 /* ----T */
#define NV_IGRAPH_XF_LTC2_m1                                   0x03 /* ----T */
#define NV_IGRAPH_XF_LTC2_Bm1                                  0x04 /* ----T */
#define NV_IGRAPH_XF_LTC2_n1                                   0x05 /* ----T */
#define NV_IGRAPH_XF_LTC2_Bn1                                  0x06 /* ----T */
#define NV_IGRAPH_XF_LTC2_M0                                   0x07 /* ----T */
#define NV_IGRAPH_XF_LTC2_M1                                   0x08 /* ----T */
#define NV_IGRAPH_XF_LTC2_M2                                   0x09 /* ----T */
#define NV_IGRAPH_XF_LTC2_M3                                   0x0a /* ----T */
#define NV_IGRAPH_XF_LTC2_M4                                   0x0b /* ----T */
#define NV_IGRAPH_XF_LTC2_M5                                   0x0c /* ----T */
#define NV_IGRAPH_XF_LTC2_M6                                   0x0d /* ----T */
#define NV_IGRAPH_XF_LTC2_M7                                   0x0e /* ----T */
#define NV_IGRAPH_XF_LTC3_ZERO3                                0x00 /* ----T */
#define NV_IGRAPH_XF_LTC3_PPADD                                0x01 /* ----T */
#define NV_IGRAPH_XF_LTC3_n0                                   0x02 /* ----T */
#define NV_IGRAPH_XF_LTC3_Bn0                                  0x03 /* ----T */
#define NV_IGRAPH_XF_LTC3_N0                                   0x04 /* ----T */
#define NV_IGRAPH_XF_LTC3_N1                                   0x05 /* ----T */
#define NV_IGRAPH_XF_LTC3_N2                                   0x06 /* ----T */
#define NV_IGRAPH_XF_LTC3_N3                                   0x07 /* ----T */
#define NV_IGRAPH_XF_LTC3_N4                                   0x08 /* ----T */
#define NV_IGRAPH_XF_LTC3_N5                                   0x09 /* ----T */
#define NV_IGRAPH_XF_LTC3_N6                                   0x0a /* ----T */
#define NV_IGRAPH_XF_LTC3_N7                                   0x0b /* ----T */
#define NV_IGRAPH_XF_LTC3_MATA                                 0x0c /* ----T */
#define NV_IGRAPH_XF_LTC3_BMATA                                0x0d /* ----T */
#define NV_IGRAPH_XF2PIPE(c,a)              ((1<<16)|((c)<<12)|(a)) /* ----T */
#define NV_IGRAPH_PIPE2XF_CMD(a)                    (((a)>>12)&0xf) /* ----T */
#define NV_IGRAPH_PIPE2XF_ADDR(a)                       ((a)&0xfff) /* ----T */
#define NV_IGRAPH_TC_MISSDEBUG_INDEX_SELECT              0x000000E9 /* RW--V */
#define NV_IGRAPH_TC_MINTFCDEBUG_SELECT                  0x000000EA /* RW--V */
#define NV_IGRAPH_TC_MINTFCDEBUG_CFG0_ADDRESS            0x00000000 /* RW--V */
#define NV_IGRAPH_TC_MINTFCDEBUG_CFG1_ADDRESS            0x00000001 /* RW--V */
#define NV_IGRAPH_TC_MINTFCDEBUG_ZMAX_TAG_ADDRESS        0x00000002 /* RW--V */
#define NV_IGRAPH_TC_MINTFCDEBUG_ZOFFSET_ADDRESS         0x00000003 /* RW--V */
#define NV_IGRAPH_TC_MINTFCDEBUG_TILE_ADDRESS(i)       (0x0004+(i)) /* RW--V */
#define NV_IGRAPH_TC_MINTFCDEBUG_TLIMIT_ADDRESS(i)     (0x000c+(i)) /* RW--V */
#define NV_IGRAPH_TC_MINTFCDEBUG_TPITCH_ADDRESS(i)     (0x0014+(i)) /* RW--V */
#define NV_IGRAPH_TC_MINTFCDEBUG_ZCOMP_ADDRESS(i)      (0x0024+(i)) /* RW--V */
#define NV_IGRAPH_TC_RBACKDEBUG_INDEX_SELECT             0x000000EB /* RW--V */
#define NV_IGRAPH_TC_TPA_INDEX_SELECT_FIELD                   24:16 /* RWXVF */
#define NV_IGRAPH_TC_TPA_INDEX_SELECT                    0x000000E0 /* RW--V */
#define NV_IGRAPH_TC_TPB_INDEX_SELECT_FIELD                   24:16 /* RWXVF */
#define NV_IGRAPH_TC_TPB_INDEX_SELECT                    0x000000E1 /* RW--V */
#define NV_IGRAPH_TC_TPA_CLEAR_INDEX_ADDRESS_FIELD             12:2 /* RWXVF */
#define NV_IGRAPH_TC_TPA_CLEAR_INDEX_ADDRESS                   0x00 /* RW--V */
#define NV_IGRAPH_TC_TPA_CLEAR_FIELD                            0:0 /* -W--F */
#define NV_IGRAPH_TC_TPA_CLEAR_FALSE                     0x00000000 /* RWI-V */
#define NV_IGRAPH_TC_TPA_CLEAR_TRUE                      0x00000001 /* RW--V */
#define NV_IGRAPH_TC_TPA_FRC_4SEC_INDEX_ADDRESS_FIELD          12:2 /* RWXVF */
#define NV_IGRAPH_TC_TPA_FRC_4SEC_INDEX_ADDRESS                0x01 /* RW--V */
#define NV_IGRAPH_TC_TPA_FRC_4SEC_FIELD                         0:0 /* RWIVF */
#define NV_IGRAPH_TC_TPA_FRC_4SEC_FALSE                  0x00000000 /* RWI-V */
#define NV_IGRAPH_TC_TPA_FRC_4SEC_TRUE                   0x00000001 /* RW--V */
#define NV_IGRAPH_TC_TPA_FRC_MISS_INDEX_ADDRESS_FIELD          12:2 /* RWXVF */
#define NV_IGRAPH_TC_TPA_FRC_MISS_INDEX_ADDRESS                0x02 /* RW--V */
#define NV_IGRAPH_TC_TPA_FRC_MISS_FIELD                         0:0 /* RWIVF */
#define NV_IGRAPH_TC_TPA_FRC_MISS_FALSE                  0x00000000 /* RWI-V */
#define NV_IGRAPH_TC_TPA_FRC_MISS_TRUE                   0x00000001 /* RW--V */
#define NV_IGRAPH_TC_TPA_FRC_HIT_INDEX_ADDRESS_FIELD           12:2 /* RWXVF */
#define NV_IGRAPH_TC_TPA_FRC_HIT_INDEX_ADDRESS                 0x03 /* RW--V */
#define NV_IGRAPH_TC_TPA_FRC_HIT_FIELD                          0:0 /* RWIVF */
#define NV_IGRAPH_TC_TPA_FRC_HIT_FALSE                   0x00000000 /* RWI-V */
#define NV_IGRAPH_TC_TPA_FRC_HIT_TRUE                    0x00000001 /* RW--V */
#define NV_IGRAPH_TC_TPA_FRC_LAST_INDEX_ADDRESS_FIELD          12:2 /* RWXVF */
#define NV_IGRAPH_TC_TPA_FRC_LAST_INDEX_ADDRESS                0x04 /* RW--V */
#define NV_IGRAPH_TC_TPA_FRC_LAST_FIELD                         0:0 /* RWIVF */
#define NV_IGRAPH_TC_TPA_FRC_LAST_FALSE                  0x00000000 /* RWI-V */
#define NV_IGRAPH_TC_TPA_FRC_LAST_TRUE                   0x00000001 /* RW--V */
#define NV_IGRAPH_TC_TPA_FRC_GT4_INDEX_ADDRESS_FIELD           12:2 /* RWXVF */
#define NV_IGRAPH_TC_TPA_FRC_GT4_INDEX_ADDRESS                 0x05 /* RW--V */
#define NV_IGRAPH_TC_TPA_FRC_GT4_FIELD                          0:0 /* RWIVF */
#define NV_IGRAPH_TC_TPA_FRC_GT4_FALSE                   0x00000000 /* RWI-V */
#define NV_IGRAPH_TC_TPA_FRC_GT4_ON                      0x00000001 /* RW--V */
#define NV_IGRAPH_TC_TPA_FRC_GT4_OFF                     0x00000002 /* RW--V */
#define NV_IGRAPH_TC_TPA_NOSYNC_INDEX_ADDRESS_FIELD            12:2 /* RWXVF */
#define NV_IGRAPH_TC_TPA_NOSYNC_INDEX_ADDRESS                  0x06 /* RW--V */
#define NV_IGRAPH_TC_TPA_NOSYNC_FIELD                           0:0 /* RWIVF */
#define NV_IGRAPH_TC_TPA_NOSYNC_FALSE                    0x00000000 /* RWI-V */
#define NV_IGRAPH_TC_TPA_NOSYNC_TRUE                     0x00000001 /* RW--V */
#define NV_IGRAPH_TC_TPA_INUSE_SEL_INDEX_ADDRESS_FIELD         12:2 /* RWXVF */
#define NV_IGRAPH_TC_TPA_INUSE_SEL_INDEX_ADDRESS               0x07 /* RW--V */
#define NV_IGRAPH_TC_TPA_INUSE_SEL_FIELD                        1:0 /* RWIVF */
#define NV_IGRAPH_TC_TPA_INUSE_SEL_NOP                   0x00000000 /* RWI-V */
#define NV_IGRAPH_TC_TPA_INUSE_SEL_HIT                   0x00000001 /* RW--V */
#define NV_IGRAPH_TC_TPA_INUSE_SEL_SECMISS               0x00000002 /* RW--V */
#define NV_IGRAPH_TC_TPA_INUSE_SEL_REPMISS               0x00000003 /* RW--V */
#define NV_IGRAPH_TC_TPA_DONE0_INDEX_ADDRESS_FIELD             12:2 /* RWXVF */
#define NV_IGRAPH_TC_TPA_DONE0_INDEX_ADDRESS                   0x08 /* RW--V */
#define NV_IGRAPH_TC_TPA_DONE0_FIELD                           31:0 /* RWIVF */
#define NV_IGRAPH_TC_TPA_DONE1_INDEX_ADDRESS_FIELD             12:2 /* RWXVF */
#define NV_IGRAPH_TC_TPA_DONE1_INDEX_ADDRESS                   0x09 /* RW--V */
#define NV_IGRAPH_TC_TPA_DONE1_FIELD                           31:0 /* RWIVF */
#define NV_IGRAPH_TC_TPA_DONE2_INDEX_ADDRESS_FIELD             12:2 /* RWXVF */
#define NV_IGRAPH_TC_TPA_DONE2_INDEX_ADDRESS                   0x0A /* RW--V */
#define NV_IGRAPH_TC_TPA_DONE2_FIELD                           31:0 /* RWIVF */
#define NV_IGRAPH_TC_TPA_DONE3_INDEX_ADDRESS_FIELD             12:2 /* RWXVF */
#define NV_IGRAPH_TC_TPA_DONE3_INDEX_ADDRESS                   0x0B /* RW--V */
#define NV_IGRAPH_TC_TPA_DONE3_FIELD                           31:0 /* RWIVF */
#define NV_IGRAPH_TC_TPA_SYNCWAVE_INDEX_ADDRESS_FIELD          12:2 /* RWXVF */
#define NV_IGRAPH_TC_TPA_SYNCWAVE_INDEX_ADDRESS                0x0C /* RW--V */
#define NV_IGRAPH_TC_TPA_SYNCWAVE_WAVEID_FIELD                  7:0 /* RWIVF */
#define NV_IGRAPH_TC_TPA_SYNCWAVE_WAVEID_PEND_FIELD            15:8 /* RWIVF */
#define NV_IGRAPH_TC_TPA_SYNCWAVE_SYNC0_FIELD                 16:16 /* RWIVF */
#define NV_IGRAPH_TC_TPA_SYNCWAVE_SYNC1_FIELD                 17:17 /* RWIVF */
#define NV_IGRAPH_TC_TPA_SYNCWAVE_SYNC2_FIELD                 18:18 /* RWIVF */
#define NV_IGRAPH_TC_TPA_SYNCWAVE_SYNC3_FIELD                 19:19 /* RWIVF */
#define NV_IGRAPH_TC_TPA_SYNCWAVE_VALID0_FIELD                20:20 /* RWIVF */
#define NV_IGRAPH_TC_TPA_SYNCWAVE_VALID1_FIELD                21:21 /* RWIVF */
#define NV_IGRAPH_TC_TPA_SYNCWAVE_VALID2_FIELD                22:22 /* RWIVF */
#define NV_IGRAPH_TC_TPA_SYNCWAVE_VALID3_FIELD                23:23 /* RWIVF */
#define NV_IGRAPH_TC_TPA_SYNCWAVE_PEND_FIELD                  28:28 /* RWIVF */
#define NV_IGRAPH_TC_TPA_IDLE_INDEX_ADDRESS_FIELD              12:2 /* RWXVF */
#define NV_IGRAPH_TC_TPA_IDLE_INDEX_ADDRESS                    0x0D /* RW--V */
#define NV_IGRAPH_TC_TPA_IDLE_X_FIELD                           0:0 /* RWIVF */
#define NV_IGRAPH_TC_TPA_IDLE_T_FIELD                           4:4 /* RWIVF */
#define NV_IGRAPH_TC_TPA_IDLE_R_FIELD                           8:8 /* RWIVF */
#define NV_IGRAPH_TC_TPA_IDLE_D_FIELD                         12:12 /* RWIVF */
#define NV_IGRAPH_TC_TPA_IDLE_W_FIELD                         16:16 /* RWIVF */
#define NV_IGRAPH_TC_TPA_IDLE_TP_FIELD                        20:20 /* RWIVF */
#define NV_IGRAPH_TC_TPA_RBFRDEPTH_INDEX_ADDRESS_FIELD         12:2 /* RWXVF */
#define NV_IGRAPH_TC_TPA_RBFRDEPTH_INDEX_ADDRESS               0x0E /* RW--V */
#define NV_IGRAPH_TC_TPA_RBFRDEPTH_FIELD                        5:0 /* RWIVF */
#define NV_IGRAPH_TC_TPA_RBFRDEPTH_DEFAULT                     0x39 /* RWI-V */
#define NV_IGRAPH_TC_TPA_XBFR_SSTEP_INDEX_ADDRESS_FIELD        12:2 /* RWXVF */
#define NV_IGRAPH_TC_TPA_XBFR_SSTEP_INDEX_ADDRESS              0x0F /* RW--V */
#define NV_IGRAPH_TC_TPA_XBFR_SSTEP_FIELD                       0:0 /* RWIVF */
#define NV_IGRAPH_TC_TPA_XBFR_SSTEP_FALSE                       0x0 /* RWI-V */
#define NV_IGRAPH_TC_TPA_XBFR_SSTEP_TRUE                        0x1 /* RW--V */
#define NV_IGRAPH_TC_TPA_PMSTATSEL_INDEX_ADDRESS_FIELD         12:2 /* RWXVF */
#define NV_IGRAPH_TC_TPA_PMSTATSEL_INDEX_ADDRESS               0x10 /* RW--V */
#define NV_IGRAPH_TC_TPA_PMSTATSEL_FIELD                        3:0 /* RWIVF */
#define NV_IGRAPH_TC_TPA_PMSTATSEL_REPLACE                      0x0 /* RWI-V */
#define NV_IGRAPH_TC_TPA_PMSTATSEL_SECMISS                      0x1 /* RW--V */
#define NV_IGRAPH_TC_TPA_PMSTATSEL_HIT                          0x2 /* RW--V */
#define NV_IGRAPH_TC_TPA_PMSTATSEL_REGLD                        0x3 /* RW--V */
#define NV_IGRAPH_TC_TPA_PMSTATSEL_NOP                          0x4 /* RW--V */
#define NV_IGRAPH_TC_TPA_PMSTATSEL_PIXEL                        0x5 /* RW--V */
#define NV_IGRAPH_TC_TPA_PMSTATSEL_GT4                          0x6 /* RW--V */
#define NV_IGRAPH_TC_TPA_PMSTATSEL_COLLISION                    0x7 /* RW--V */
#define NV_IGRAPH_TC_TPA_PMSTATSEL_ISAGP                        0x8 /* RW--V */
#define NV_IGRAPH_TC_TPA_PMTEXIDSEL_INDEX_ADDRESS_FIELD        12:2 /* RWXVF */
#define NV_IGRAPH_TC_TPA_PMTEXIDSEL_INDEX_ADDRESS              0x11 /* RW--V */
#define NV_IGRAPH_TC_TPA_PMTEXIDSEL_FIELD                       3:0 /* RWIVF */
#define NV_IGRAPH_TC_TPA_PMTEXIDSEL_DEFAULT                     0xf /* RW--V */
#define NV_IGRAPH_TC_DXP_INDEX_SELECT_FIELD                   24:16 /* RWXVF */
#define NV_IGRAPH_TC_DXP_INDEX_SELECT                    0x000000DF /* RW--V */
#define NV_IGRAPH_TC_DXP_BLOCKWEN_INDEX_ADDRESS_FIELD          12:2 /* RWXVF */
#define NV_IGRAPH_TC_DXP_BLOCKWEN_INDEX_ADDRESS                0x00 /* RW--V */
#define NV_IGRAPH_TC_DXP_BLOCKWEN_FIELD                         0:0 /* -W--F */
#define NV_IGRAPH_TC_DXP_BLOCKWEN_FALSE                  0x00000000 /* RWI-V */
#define NV_IGRAPH_TC_DXP_BLOCKWEN_TRUE                   0x00000001 /* RW--V */
#define NV_IGRAPH_TC_DXP_DLYRDAFTERWR_INDEX_ADDRESS_FIELD      12:2 /* RWXVF */
#define NV_IGRAPH_TC_DXP_DLYRDAFTERWR_INDEX_ADDRESS            0x01 /* RW--V */
#define NV_IGRAPH_TC_DXP_DLYRDAFTERWR_FIELD                     0:0 /* -W--F */
#define NV_IGRAPH_TC_DXP_DLYRDAFTERWR_FALSE              0x00000000 /* RWI-V */
#define NV_IGRAPH_TC_DXP_DLYRDAFTERWR_TRUE               0x00000001 /* RW--V */
#define NV_IGRAPH_TC_SHLAT_INDEX_SELECT_FIELD                 24:16 /* RWXVF */
#define NV_IGRAPH_TC_SHLAT_INDEX_SELECT                  0x000000EC /* RW--V */
#define NV_IGRAPH_TC_SHLAT_HIWATER_INDEX_ADDRESS_FIELD         12:2 /* RWXVF */
#define NV_IGRAPH_TC_SHLAT_HIWATER_INDEX_ADDRESS               0x00 /* RW--V */
#define NV_IGRAPH_TC_SHLAT_HIWATER_FIELD                        7:0 /* RWIVF */
#define NV_IGRAPH_TC_SHLAT_HIWATER_DEFAULT                     0x7F /* RWI-V */
/* dev_video.ref */
#define NV_PVIDEO                             0x00008FFF:0x00008000 /* RW--D */
#define NV_PVIDEO_DEBUG_0                                0x00008080 /* RW-4R */
#define NV_PVIDEO_DEBUG_0_HLF_RATE_ROW_RD                       0:0 /* RWIVF */
#define NV_PVIDEO_DEBUG_0_HLF_RATE_ROW_RD_DISABLED       0x00000000 /* RWI-V */
#define NV_PVIDEO_DEBUG_0_HLF_RATE_ROW_RD_ENABLED        0x00000001 /* RW--V */
#define NV_PVIDEO_DEBUG_0_LIMIT_CHECK                           4:4 /* RWIVF */
#define NV_PVIDEO_DEBUG_0_LIMIT_CHECK_DISABLED           0x00000000 /* RW--V */
#define NV_PVIDEO_DEBUG_0_LIMIT_CHECK_ENABLED            0x00000001 /* RWI-V */
#define NV_PVIDEO_DEBUG_0_HUE_FOLD                              8:8 /* RWIVF */
#define NV_PVIDEO_DEBUG_0_HUE_FOLD_DISABLED              0x00000000 /* RWI-V */
#define NV_PVIDEO_DEBUG_0_HUE_FOLD_ENABLED               0x00000001 /* RW--V */
#define NV_PVIDEO_DEBUG_1                                0x00008084 /* RW-4R */
#define NV_PVIDEO_DEBUG_1_REQ_DELAY                            10:0 /* RWIVF */
#define NV_PVIDEO_DEBUG_1_REQ_DELAY_DEFAULT              0x00000064 /* RWI-V */
#define NV_PVIDEO_DEBUG_1_REQ_DELAY_INIT                 0x00000050 /* RW--V */
#define NV_PVIDEO_DEBUG_2                                0x00008088 /* RW-4R */
#define NV_PVIDEO_DEBUG_2_BURST1                               11:5 /* RWIVF */
#define NV_PVIDEO_DEBUG_2_BURST1_DEFAULT                 0x00000008 /* RWI-V */
#define NV_PVIDEO_DEBUG_2_BURST1_INIT                    0x00000010 /* RW--V */
#define NV_PVIDEO_DEBUG_2_BURST2                              27:21 /* RWIVF */
#define NV_PVIDEO_DEBUG_2_BURST2_DEFAULT                 0x00000010 /* RWI-V */
#define NV_PVIDEO_DEBUG_2_BURST2_INIT                    0x00000018 /* RW--V */
#define NV_PVIDEO_DEBUG_3                                0x0000808c /* RW-4R */
#define NV_PVIDEO_DEBUG_3_WATER_MARK1                          10:4 /* RWIVF */
#define NV_PVIDEO_DEBUG_3_WATER_MARK1_DEFAULT            0x0000004b /* RWI-V */
#define NV_PVIDEO_DEBUG_3_WATER_MARK1_INIT               0x00000040 /* RW--V */
#define NV_PVIDEO_DEBUG_3_WATER_MARK2                         26:20 /* RWIVF */
#define NV_PVIDEO_DEBUG_3_WATER_MARK2_DEFAULT            0x0000003b /* RWI-V */
#define NV_PVIDEO_DEBUG_3_WATER_MARK2_INIT               0x00000040 /* RW--V */
#define NV_PVIDEO_DEBUG_4                                0x00008090 /* RW-4R */
#define NV_PVIDEO_DEBUG_4_V_COEFF_B                            23:5 /* RWIVF */
#define NV_PVIDEO_DEBUG_4_V_COEFF_B_DEFAULT              0x0000b505 /* RWI-V */
#define NV_PVIDEO_DEBUG_4_V_COEFF_B_ALWAYS               0x00000000 /* RW--V */
#define NV_PVIDEO_DEBUG_4_V_COEFF_B_NEVER                0x0007ffff /* RW--V */
#define NV_PVIDEO_DEBUG_5                                0x00008094 /* RW-4R */
#define NV_PVIDEO_DEBUG_5_H_L_COEFF_D                          21:4 /* RWIVF */
#define NV_PVIDEO_DEBUG_5_H_L_COEFF_D_DEFAULT            0x00018816 /* RWI-V */
#define NV_PVIDEO_DEBUG_5_H_L_COEFF_D_ALWAYS             0x00000000 /* RW--V */
#define NV_PVIDEO_DEBUG_5_H_L_COEFF_D_NEVER              0x0003ffff /* RW--V */
#define NV_PVIDEO_DEBUG_6                                0x00008098 /* RW-4R */
#define NV_PVIDEO_DEBUG_6_H_L_COEFF_C                          21:4 /* RWIVF */
#define NV_PVIDEO_DEBUG_6_H_L_COEFF_C_DEFAULT            0x00012c73 /* RWI-V */
#define NV_PVIDEO_DEBUG_6_H_L_COEFF_C_ALWAYS             0x00000000 /* RW--V */
#define NV_PVIDEO_DEBUG_6_H_L_COEFF_C_NEVER              0x0003ffff /* RW--V */
#define NV_PVIDEO_DEBUG_7                                0x0000809c /* RW-4R */
#define NV_PVIDEO_DEBUG_7_H_L_COEFF_B                          21:4 /* RWIVF */
#define NV_PVIDEO_DEBUG_7_H_L_COEFF_B_DEFAULT            0x00000000 /* RWI-V */
#define NV_PVIDEO_DEBUG_7_H_L_COEFF_B_ALWAYS             0x00000000 /* RW--V */
#define NV_PVIDEO_DEBUG_7_H_L_COEFF_B_NEVER              0x0003ffff /* RW--V */
#define NV_PVIDEO_DEBUG_8                                0x000080a0 /* RW-4R */
#define NV_PVIDEO_DEBUG_8_PIPE_FILL                            10:4 /* RWIVF */
#define NV_PVIDEO_DEBUG_8_PIPE_FILL_DEFAULT              0x0000000b /* RWI-V */
#define NV_PVIDEO_DEBUG_9                                0x000080a4 /* RW-4R */
#define NV_PVIDEO_DEBUG_9_FIFO_A_UNDERFLOW                      0:0 /* RWIVF */
#define NV_PVIDEO_DEBUG_9_FIFO_A_UNDERFLOW_FALSE         0x00000000 /* R-I-V */
#define NV_PVIDEO_DEBUG_9_FIFO_A_UNDERFLOW_TRUE          0x00000001 /* R---V */
#define NV_PVIDEO_DEBUG_9_FIFO_A_UNDERFLOW_RESET         0x00000001 /* -W--C */
#define NV_PVIDEO_DEBUG_9_FIFO_A_OVERFLOW                       4:4 /* RWIVF */
#define NV_PVIDEO_DEBUG_9_FIFO_A_OVERFLOW_FALSE          0x00000000 /* R-I-V */
#define NV_PVIDEO_DEBUG_9_FIFO_A_OVERFLOW_TRUE           0x00000001 /* R---V */
#define NV_PVIDEO_DEBUG_9_FIFO_A_OVERFLOW_RESET          0x00000001 /* -W--C */
#define NV_PVIDEO_DEBUG_9_FIFO_B_UNDERFLOW                      8:8 /* RWIVF */
#define NV_PVIDEO_DEBUG_9_FIFO_B_UNDERFLOW_FALSE         0x00000000 /* R-I-V */
#define NV_PVIDEO_DEBUG_9_FIFO_B_UNDERFLOW_TRUE          0x00000001 /* R---V */
#define NV_PVIDEO_DEBUG_9_FIFO_B_UNDERFLOW_RESET         0x00000001 /* -W--C */
#define NV_PVIDEO_DEBUG_9_FIFO_B_OVERFLOW                     12:12 /* RWIVF */
#define NV_PVIDEO_DEBUG_9_FIFO_B_OVERFLOW_FALSE          0x00000000 /* R-I-V */
#define NV_PVIDEO_DEBUG_9_FIFO_B_OVERFLOW_TRUE           0x00000001 /* R---V */
#define NV_PVIDEO_DEBUG_9_FIFO_B_OVERFLOW_RESET          0x00000001 /* -W--C */
#define NV_PVIDEO_DEBUG_10                               0x000080a8 /* R--4R */
#define NV_PVIDEO_DEBUG_10_SCREEN_LINE                         12:0 /* R-XVF */
#define NV_PVIDEO_DEBUG_10_SCREEN_LINE_FIRST             0x00000000 /* R---V */
#define NV_PVIDEO_DEBUG_10_SCAN_COUNT                         20:16 /* R-XVF */
#define NV_PVIDEO_DEBUG_10_SCAN_COUNT_FIRST              0x00000000 /* R---V */
#define NV_PVIDEO_DEBUG_10_SCAN_COUNT_OVERFLOW           0x00000010 /* R---V */
#define NV_PVIDEO_DEBUG_10_SCANNING                           25:24 /* R-XVF */
#define NV_PVIDEO_DEBUG_10_SCANNING_NEITHER              0x00000000 /* R---V */
#define NV_PVIDEO_DEBUG_10_SCANNING_BUFFER_0             0x00000002 /* R---V */
#define NV_PVIDEO_DEBUG_10_SCANNING_BUFFER_1             0x00000003 /* R---V */
#define NV_PVIDEO_INTR                                   0x00008100 /* RW-4R */
#define NV_PVIDEO_INTR_BUFFER_0                                 0:0 /* RWIVF */
#define NV_PVIDEO_INTR_BUFFER_0_NOT_PENDING              0x00000000 /* R-I-V */
#define NV_PVIDEO_INTR_BUFFER_0_PENDING                  0x00000001 /* R---V */
#define NV_PVIDEO_INTR_BUFFER_0_RESET                    0x00000001 /* -W--C */
#define NV_PVIDEO_INTR_BUFFER_1                                 4:4 /* RWIVF */
#define NV_PVIDEO_INTR_BUFFER_1_NOT_PENDING              0x00000000 /* R-I-V */
#define NV_PVIDEO_INTR_BUFFER_1_PENDING                  0x00000001 /* R---V */
#define NV_PVIDEO_INTR_BUFFER_1_RESET                    0x00000001 /* -W--C */
#define NV_PVIDEO_INTR_REASON                            0x00008104 /* R--4R */
#define NV_PVIDEO_INTR_REASON_BUFFER_0                          0:0 /* R-IVF */
#define NV_PVIDEO_INTR_REASON_BUFFER_0_NOTIFICATION      0x00000000 /* R-I-V */
#define NV_PVIDEO_INTR_REASON_BUFFER_0_PROTECTION_FAULT  0x00000001 /* R---V */
#define NV_PVIDEO_INTR_REASON_BUFFER_1                          4:4 /* R-IVF */
#define NV_PVIDEO_INTR_REASON_BUFFER_1_NOTIFICATION      0x00000000 /* R-I-V */
#define NV_PVIDEO_INTR_REASON_BUFFER_1_PROTECTION_FAULT  0x00000001 /* R---V */
#define NV_PVIDEO_INTR_EN                                0x00008140 /* RW-4R */
#define NV_PVIDEO_INTR_EN_BUFFER_0                              0:0 /* RWIVF */
#define NV_PVIDEO_INTR_EN_BUFFER_0_DISABLED              0x00000000 /* RWI-V */
#define NV_PVIDEO_INTR_EN_BUFFER_0_ENABLED               0x00000001 /* RW--V */
#define NV_PVIDEO_INTR_EN_BUFFER_1                              4:4 /* RWIVF */
#define NV_PVIDEO_INTR_EN_BUFFER_1_DISABLED              0x00000000 /* RWI-V */
#define NV_PVIDEO_INTR_EN_BUFFER_1_ENABLED               0x00000001 /* RW--V */
#define NV_PVIDEO_BUFFER                                 0x00008700 /* RW-4R */
#define NV_PVIDEO_BUFFER_0_USE                                  0:0 /* RWIVF */
#define NV_PVIDEO_BUFFER_0_USE_NOT_PENDING               0x00000000 /* R-I-V */
#define NV_PVIDEO_BUFFER_0_USE_PENDING                   0x00000001 /* R---V */
#define NV_PVIDEO_BUFFER_0_USE_SET                       0x00000001 /* -W--S */
#define NV_PVIDEO_BUFFER_1_USE                                  4:4 /* RWIVF */
#define NV_PVIDEO_BUFFER_1_USE_NOT_PENDING               0x00000000 /* R-I-V */
#define NV_PVIDEO_BUFFER_1_USE_PENDING                   0x00000001 /* R---V */
#define NV_PVIDEO_BUFFER_1_USE_SET                       0x00000001 /* -W--S */
#define NV_PVIDEO_STOP                                   0x00008704 /* RW-4R */
#define NV_PVIDEO_STOP_OVERLAY                                  0:0 /* RWIVF */
#define NV_PVIDEO_STOP_OVERLAY_INACTIVE                  0x00000000 /* RWI-V */
#define NV_PVIDEO_STOP_OVERLAY_ACTIVE                    0x00000001 /* RW--V */
#define NV_PVIDEO_STOP_METHOD                                   4:4 /* RWIVF */
#define NV_PVIDEO_STOP_METHOD_IMMEDIATELY                0x00000000 /* RW--V */
#define NV_PVIDEO_STOP_METHOD_NORMALLY                   0x00000001 /* RWI-V */
#define NV_PVIDEO_BASE(i)                        (0x00008900+(i)*4) /* RW-4A */
#define NV_PVIDEO_BASE__SIZE_1                                    2 /*       */
#define NV_PVIDEO_BASE_VALUE                                   26:6 /* RWXVF */
#define NV_PVIDEO_LIMIT(i)                       (0x00008908+(i)*4) /* RW-4A */
#define NV_PVIDEO_LIMIT__SIZE_1                                   2 /*       */
#define NV_PVIDEO_LIMIT_VALUE                                  26:6 /* RWXVF */
#define NV_PVIDEO_LIMIT_VALUE_MAX                        0x001fffff /* RW--V */
#define NV_PVIDEO_LUMINANCE(i)                   (0x00008910+(i)*4) /* RW-4A */
#define NV_PVIDEO_LUMINANCE__SIZE_1                               2 /*       */
#define NV_PVIDEO_LUMINANCE_CONTRAST                           12:3 /* RWXVF */
#define NV_PVIDEO_LUMINANCE_CONTRAST_47                  0x00000200 /* RWC-V */
#define NV_PVIDEO_LUMINANCE_CONTRAST_83                  0x00000200 /* RWC-V */
#define NV_PVIDEO_LUMINANCE_CONTRAST_UNITY               0x00000200 /* RW--V */
#define NV_PVIDEO_LUMINANCE_BRIGHTNESS                        25:16 /* RWXVF */
#define NV_PVIDEO_LUMINANCE_BRIGHTNESS_47                0x00000000 /* RWC-V */
#define NV_PVIDEO_LUMINANCE_BRIGHTNESS_83                0x00000000 /* RWC-V */
#define NV_PVIDEO_LUMINANCE_BRIGHTNESS_UNITY             0x00000000 /* RW--V */
#define NV_PVIDEO_CHROMINANCE(i)                 (0x00008918+(i)*4) /* RW-4A */
#define NV_PVIDEO_CHROMINANCE__SIZE_1                             2 /*       */
#define NV_PVIDEO_CHROMINANCE_SAT_COS                          13:2 /* RWXVF */
#define NV_PVIDEO_CHROMINANCE_SAT_COS_47                 0x00000400 /* RWC-V */
#define NV_PVIDEO_CHROMINANCE_SAT_COS_83                 0x00000400 /* RWC-V */
#define NV_PVIDEO_CHROMINANCE_SAT_COS_UNITY              0x00000400 /* RW--V */
#define NV_PVIDEO_CHROMINANCE_SAT_SIN                         29:18 /* RWXVF */
#define NV_PVIDEO_CHROMINANCE_SAT_SIN_47                 0x00000000 /* RWC-V */
#define NV_PVIDEO_CHROMINANCE_SAT_SIN_83                 0x00000000 /* RWC-V */
#define NV_PVIDEO_CHROMINANCE_SAT_SIN_UNITY              0x00000000 /* RW--V */
#define NV_PVIDEO_OFFSET(i)                      (0x00008920+(i)*4) /* RW-4A */
#define NV_PVIDEO_OFFSET__SIZE_1                                  2 /*       */
#define NV_PVIDEO_OFFSET_VALUE                                 31:6 /* RWXVF */
#define NV_PVIDEO_OFFSET_VALUE_47                        0x00000000 /* RWC-V */
#define NV_PVIDEO_OFFSET_VALUE_83                        0x00000000 /* RWC-V */
#define NV_PVIDEO_OFFSET_VALUE_ZERO                      0x00000000 /* RW--V */
#define NV_PVIDEO_SIZE_IN(i)                     (0x00008928+(i)*4) /* RW-4A */
#define NV_PVIDEO_SIZE_IN__SIZE_1                                 2 /*       */
#define NV_PVIDEO_SIZE_IN_WIDTH                                10:1 /* RWXVF */
#define NV_PVIDEO_SIZE_IN_WIDTH_47                       0x00000001 /* RWC-V */
#define NV_PVIDEO_SIZE_IN_WIDTH_83                       0x00000001 /* RWC-V */
#define NV_PVIDEO_SIZE_IN_HEIGHT                              26:16 /* RWXVF */
#define NV_PVIDEO_SIZE_IN_HEIGHT_47                      0x00000002 /* RWC-V */
#define NV_PVIDEO_SIZE_IN_HEIGHT_83                      0x00000002 /* RWC-V */
#define NV_PVIDEO_POINT_IN(i)                    (0x00008930+(i)*4) /* RW-4A */
#define NV_PVIDEO_POINT_IN__SIZE_1                                2 /*       */
#define NV_PVIDEO_POINT_IN_S                                   14:0 /* RWXVF */
#define NV_PVIDEO_POINT_IN_S_47                          0x00000000 /* RWC-V */
#define NV_PVIDEO_POINT_IN_S_83                          0x00000000 /* RWC-V */
#define NV_PVIDEO_POINT_IN_S_ORIGIN                      0x00000000 /* RW--V */
#define NV_PVIDEO_POINT_IN_T                                  31:17 /* RWXVF */
#define NV_PVIDEO_POINT_IN_T_47                          0x00000000 /* RWC-V */
#define NV_PVIDEO_POINT_IN_T_83                          0x00000000 /* RWC-V */
#define NV_PVIDEO_POINT_IN_T_ORIGIN                      0x00000000 /* RW--V */
#define NV_PVIDEO_DS_DX(i)                       (0x00008938+(i)*4) /* RW-4A */
#define NV_PVIDEO_DS_DX__SIZE_1                                   2 /*       */
#define NV_PVIDEO_DS_DX_RATIO                                  23:3 /* RWXVF */
#define NV_PVIDEO_DS_DX_RATIO_47                         0x00000000 /* RWC-V */
#define NV_PVIDEO_DS_DX_RATIO_83                         0x00000000 /* RWC-V */
#define NV_PVIDEO_DS_DX_RATIO_UNITY                      0x00020000 /* RW--V */
#define NV_PVIDEO_DT_DY(i)                       (0x00008940+(i)*4) /* RW-4A */
#define NV_PVIDEO_DT_DY__SIZE_1                                   2 /*       */
#define NV_PVIDEO_DT_DY_RATIO                                  23:4 /* RWXVF */
#define NV_PVIDEO_DT_DY_RATIO_47                         0x00000000 /* RWC-V */
#define NV_PVIDEO_DT_DY_RATIO_83                         0x00000000 /* RWC-V */
#define NV_PVIDEO_DT_DY_RATIO_UNITY                      0x00010000 /* RW--V */
#define NV_PVIDEO_POINT_OUT(i)                   (0x00008948+(i)*4) /* RW-4A */
#define NV_PVIDEO_POINT_OUT__SIZE_1                               2 /*       */
#define NV_PVIDEO_POINT_OUT_X                                  11:0 /* RWXVF */
#define NV_PVIDEO_POINT_OUT_X_47                         0x00000000 /* RWC-V */
#define NV_PVIDEO_POINT_OUT_X_83                         0x00000000 /* RWC-V */
#define NV_PVIDEO_POINT_OUT_X_ORIGIN                     0x00000000 /* RW--V */
#define NV_PVIDEO_POINT_OUT_Y                                 27:16 /* RWXVF */
#define NV_PVIDEO_POINT_OUT_Y_47                         0x00000000 /* RWC-V */
#define NV_PVIDEO_POINT_OUT_Y_83                         0x00000000 /* RWC-V */
#define NV_PVIDEO_POINT_OUT_Y_ORIGIN                     0x00000000 /* RW--V */
#define NV_PVIDEO_SIZE_OUT(i)                    (0x00008950+(i)*4) /* RW-4A */
#define NV_PVIDEO_SIZE_OUT__SIZE_1                                2 /*       */
#define NV_PVIDEO_SIZE_OUT_WIDTH                               11:0 /* RWXVF */
#define NV_PVIDEO_SIZE_OUT_WIDTH_47                      0x00000000 /* RWC-V */
#define NV_PVIDEO_SIZE_OUT_WIDTH_83                      0x00000000 /* RWC-V */
#define NV_PVIDEO_SIZE_OUT_HEIGHT                             27:16 /* RWXVF */
#define NV_PVIDEO_SIZE_OUT_HEIGHT_47                     0x00000000 /* RWC-V */
#define NV_PVIDEO_SIZE_OUT_HEIGHT_83                     0x00000000 /* RWC-V */
#define NV_PVIDEO_FORMAT(i)                      (0x00008958+(i)*4) /* RW-4A */
#define NV_PVIDEO_FORMAT__SIZE_1                                  2 /*       */
#define NV_PVIDEO_FORMAT_PITCH                                 12:6 /* RWXVF */
#define NV_PVIDEO_FORMAT_PITCH_47                        0x00000000 /* RWC-V */
#define NV_PVIDEO_FORMAT_PITCH_83                        0x00000000 /* RWC-V */
#define NV_PVIDEO_FORMAT_COLOR                                17:16 /* RWXVF */
#define NV_PVIDEO_FORMAT_COLOR_47                        0x00000000 /* RWC-V */
#define NV_PVIDEO_FORMAT_COLOR_83                        0x00000000 /* RWC-V */
#define NV_PVIDEO_FORMAT_COLOR_LE_YB8CR8YA8CB8           0x00000000 /* RW--V */
#define NV_PVIDEO_FORMAT_COLOR_LE_CR8YB8CB8YA8           0x00000001 /* RW--V */
#define NV_PVIDEO_FORMAT_COLOR_LE_EYB8ECR8EYA8ECB8       0x00000010 /* RW--V */
#define NV_PVIDEO_FORMAT_COLOR_LE_ECR8EYB8ECB8EYA8       0x00000011 /* RW--V */
#define NV_PVIDEO_FORMAT_DISPLAY                              20:20 /* RWXVF */
#define NV_PVIDEO_FORMAT_DISPLAY_47                      0x00000000 /* RWC-V */
#define NV_PVIDEO_FORMAT_DISPLAY_83                      0x00000000 /* RWC-V */
#define NV_PVIDEO_FORMAT_DISPLAY_ALWAYS                  0x00000000 /* RW--V */
#define NV_PVIDEO_FORMAT_DISPLAY_COLOR_KEY_EQUAL         0x00000001 /* RW--V */
#define NV_PVIDEO_FORMAT_MATRIX                               24:24 /* RWXVF */
#define NV_PVIDEO_FORMAT_MATRIX_ITURBT601                0x00000000 /* RW--V */
#define NV_PVIDEO_FORMAT_MATRIX_ITURBT709                0x00000001 /* RW--V */
#define NV_PVIDEO_COLOR_KEY                              0x00008b00 /* RW-4R */
#define NV_PVIDEO_COLOR_KEY_VALUE                              31:0 /* RWXVF */
#define NV_PVIDEO_COLOR_KEY_VALUE_47                     0x00000000 /* RWC-V */
#define NV_PVIDEO_COLOR_KEY_VALUE_83                     0x00000000 /* RWC-V */
#define NV_PVIDEO_COLOR_KEY_VALUE_DONT_CARE              0x00000000 /* RW--V */
#define NV_PVIDEO_TEST                                   0x00008d00 /* RW-4R */
#define NV_PVIDEO_TEST_MODE                                     0:0 /* RWIVF */
#define NV_PVIDEO_TEST_MODE_DISABLE                      0x00000000 /* RWI-V */
#define NV_PVIDEO_TEST_MODE_ENABLE                       0x00000001 /* RW--V */
#define NV_PVIDEO_TEST_ADDRESS                                 14:8 /* RWXVF */
#define NV_PVIDEO_TST_WRITE(i)                   (0x00008d10+(i)*4) /* -W-4A */
#define NV_PVIDEO_TST_WRITE__SIZE_1                              12 /*       */
#define NV_PVIDEO_TST_WRITE_VALUE                              31:0 /* -WXVF */
#define NV_PVIDEO_TST_READ(i)                    (0x00008d40+(i)*4) /* R--4A */
#define NV_PVIDEO_TST_READ__SIZE_1                               12 /*       */
#define NV_PVIDEO_TST_READ_VALUE                               31:0 /* R-XVF */
#define NV_PVIDEO_RCR                                    0x00008d70 /* RW-4R */
#define NV_PVIDEO_RCR_RNDM_REQ                                  7:0 /* RWIVF */
#define NV_PVIDEO_RCR_RNDM_REQ_NONE                      0x00000000 /* RWI-V */
#define NV_PVIDEO_RCR_RNDM_REQ_4B                        0x00000001 /* RW--V */
#define NV_PVIDEO_RCR_RNDM_REQ_8B                        0x00000011 /* RW--V */
#define NV_PVIDEO_RCR_RNDM_REQ_16B                       0x00000111 /* RW--V */
#define NV_PVIDEO_RCR_RNDM_REQ_32B                       0x00001111 /* RW--V */
#define NV_PVIDEO_RCR_RNDM_REQ_64B                       0x00011111 /* RW--V */
#define NV_PVIDEO_RCR_RNDM_REQ_128B                      0x00111111 /* RW--V */
#define NV_PVIDEO_RCR_RNDM_REQ_256B                      0x01111111 /* RW--V */
#define NV_PVIDEO_RCR_RNDM_REQ_512B                      0x11111111 /* RW--V */
/* dev_media.ref */
#define NV_PME                                0x00200FFF:0x00200000 /* RW--D */
#define NV_PME_INTR_0                                    0x00200100 /* RWI4R */
#define NV_PME_INTR_0_TASKA_NOTIFY                              0:0 /* RWIVF */
#define NV_PME_INTR_0_TASKA_NOTIFY_NOT_PENDING           0x00000000 /* R-I-V */
#define NV_PME_INTR_0_TASKA_NOTIFY_PENDING               0x00000001 /* R---V */
#define NV_PME_INTR_0_TASKA_NOTIFY_RESET                 0x00000001 /* -W--V */
#define NV_PME_INTR_0_TASKB_NOTIFY                              4:4 /* RWIVF */
#define NV_PME_INTR_0_TASKB_NOTIFY_NOT_PENDING           0x00000000 /* R-I-V */
#define NV_PME_INTR_0_TASKB_NOTIFY_PENDING               0x00000001 /* R---V */
#define NV_PME_INTR_0_TASKB_NOTIFY_RESET                 0x00000001 /* -W--V */
#define NV_PME_INTR_0_ANC_NOTIFY                                8:8 /* RWIVF */
#define NV_PME_INTR_0_ANC_NOTIFY_NOT_PENDING             0x00000000 /* R-I-V */
#define NV_PME_INTR_0_ANC_NOTIFY_PENDING                 0x00000001 /* R---V */
#define NV_PME_INTR_0_ANC_NOTIFY_RESET                   0x00000001 /* -W--V */
#define NV_PME_INTR_0_FOUT_NOTIFY                             12:12 /* RWIVF */
#define NV_PME_INTR_0_FOUT_NOTIFY_NOT_PENDING            0x00000000 /* R-I-V */
#define NV_PME_INTR_0_FOUT_NOTIFY_PENDING                0x00000001 /* R---V */
#define NV_PME_INTR_0_FOUT_NOTIFY_RESET                  0x00000001 /* -W--V */
#define NV_PME_INTR_0_FIN_NOTIFY                              16:16 /* RWIVF */
#define NV_PME_INTR_0_FIN_NOTIFY_NOT_PENDING             0x00000000 /* R-I-V */
#define NV_PME_INTR_0_FIN_NOTIFY_PENDING                 0x00000001 /* R---V */
#define NV_PME_INTR_0_FIN_NOTIFY_RESET                   0x00000001 /* -W--V */
#define NV_PME_INTR_0_FOUTTIMEOUT_NOTIFY                      20:20 /* RWIVF */
#define NV_PME_INTR_0_FOUTTIMEOUT_NOTIFY_NOT_PENDING     0x00000000 /* R-I-V */
#define NV_PME_INTR_0_FOUTTIMEOUT_NOTIFY_PENDING         0x00000001 /* R---V */
#define NV_PME_INTR_0_FOUTTIMEOUT_NOTIFY_RESET           0x00000001 /* -W--V */
#define NV_PME_INTR_0_FINTIMEOUT_NOTIFY                       24:24 /* RWIVF */
#define NV_PME_INTR_0_FINTIMEOUT_NOTIFY_NOT_PENDING      0x00000000 /* R-I-V */
#define NV_PME_INTR_0_FINTIMEOUT_NOTIFY_PENDING          0x00000001 /* R---V */
#define NV_PME_INTR_0_FINTIMEOUT_NOTIFY_RESET            0x00000001 /* -W--V */
#define NV_PME_INTR_0_REGTIMEOUT_NOTIFY                       28:28 /* RWIVF */
#define NV_PME_INTR_0_REGTIMEOUT_NOTIFY_NOT_PENDING      0x00000000 /* R-I-V */
#define NV_PME_INTR_0_REGTIMEOUT_NOTIFY_PENDING          0x00000001 /* R---V */
#define NV_PME_INTR_0_REGTIMEOUT_NOTIFY_RESET            0x00000001 /* -W--V */
#define NV_PME_INTR_EN_0                                 0x00200140 /* RWI4R */
#define NV_PME_INTR_EN_0_TASKA_NOTIFY                           0:0 /* RWIVF */
#define NV_PME_INTR_EN_0_TASKA_NOTIFY_DISABLED           0x00000000 /* RWI-V */
#define NV_PME_INTR_EN_0_TASKA_NOTIFY_ENABLED            0x00000001 /* RW--V */
#define NV_PME_INTR_EN_0_TASKB_NOTIFY                           4:4 /* RWIVF */
#define NV_PME_INTR_EN_0_TASKB_NOTIFY_DISABLED           0x00000000 /* RWI-V */
#define NV_PME_INTR_EN_0_TASKB_NOTIFY_ENABLED            0x00000001 /* RW--V */
#define NV_PME_INTR_EN_0_ANC_NOTIFY                             8:8 /* RWIVF */
#define NV_PME_INTR_EN_0_ANC_NOTIFY_DISABLED             0x00000000 /* RWI-V */
#define NV_PME_INTR_EN_0_ANC_NOTIFY_ENABLED              0x00000001 /* RW--V */
#define NV_PME_INTR_EN_0_FOUT_NOTIFY                          12:12 /* RWIVF */
#define NV_PME_INTR_EN_0_FOUT_NOTIFY_DISABLED            0x00000000 /* RWI-V */
#define NV_PME_INTR_EN_0_FOUT_NOTIFY_ENABLED             0x00000001 /* RW--V */
#define NV_PME_INTR_EN_0_FIN_NOTIFY                           16:16 /* RWIVF */
#define NV_PME_INTR_EN_0_FIN_NOTIFY_DISABLED             0x00000000 /* RWI-V */
#define NV_PME_INTR_EN_0_FIN_NOTIFY_ENABLED              0x00000001 /* RW--V */
#define NV_PME_INTR_EN_0_FOUTTIMEOUT_NOTIFY                   20:20 /* RWIVF */
#define NV_PME_INTR_EN_0_FOUTTIMEOUT_NOTIFY_DISABLED     0x00000000 /* RWI-V */
#define NV_PME_INTR_EN_0_FOUTTIMEOUT_NOTIFY_ENABLED      0x00000001 /* RW--V */
#define NV_PME_INTR_EN_0_FINTIMEOUT_NOTIFY                    24:24 /* RWIVF */
#define NV_PME_INTR_EN_0_FINTIMEOUT_NOTIFY_DISABLED      0x00000000 /* RWI-V */
#define NV_PME_INTR_EN_0_FINTIMEOUT_NOTIFY_ENABLED       0x00000001 /* RW--V */
#define NV_PME_INTR_EN_0_REGTIMEOUT_NOTIFY                    28:28 /* RWIVF */
#define NV_PME_INTR_EN_0_REGTIMEOUT_NOTIFY_DISABLED      0x00000000 /* RWI-V */
#define NV_PME_INTR_EN_0_REGTIMEOUT_NOTIFY_ENABLED       0x00000001 /* RW--V */
#define NV_PME_HOST_CONFIG                               0x00200200 /* RWI4R */
#define NV_PME_HOST_CONFIG_FIFOMAXTX                            5:0 /* RWIVF */
#define NV_PME_HOST_CONFIG_CLOCK_SELECT                         7:7 /* RWIVF */
#define NV_PME_HOST_CONFIG_CLOCK_SELECT_PCI_DIV_2        0x00000000 /* RW--V */
#define NV_PME_HOST_CONFIG_CLOCK_SELECT_PCI              0x00000001 /* RW--V */
#define NV_PME_HOST_CONFIG_TIMEOUT                             11:8 /* RWIVF */
#define NV_PME_HOST_CONFIG_SLAVE_NOTDETECTED                  16:16 /* RWIVF */
#define NV_PME_HOST_CONFIG_SLAVE_NOTDETECTED_FALSE       0x00000000 /* R---V */
#define NV_PME_HOST_CONFIG_SLAVE_NOTDETECTED_TRUE        0x00000001 /* R---V */
#define NV_PME_HOST_CONFIG_SLAVE_DETECTED                     20:20 /* RWIVF */
#define NV_PME_HOST_CONFIG_SLAVE_DETECTED_FALSE          0x00000000 /* R---V */
#define NV_PME_HOST_CONFIG_SLAVE_DETECTED_TRUE           0x00000001 /* R---V */
#define NV_PME_HOST_CONFIG_FOUT_SYSMEM                        24:24 /* RWIVF */
#define NV_PME_HOST_CONFIG_FOUT_SYSMEM_DISABLED          0x00000000 /* RW--V */
#define NV_PME_HOST_CONFIG_FOUT_SYSMEM_ENABLED           0x00000001 /* RW--V */
#define NV_PME_HOST_CONFIG_FIN_SYSMEM                         25:25 /* RWIVF */
#define NV_PME_HOST_CONFIG_FIN_SYSMEM_DISABLED           0x00000000 /* RW--V */
#define NV_PME_HOST_CONFIG_FIN_SYSMEM_ENABLED            0x00000001 /* RW--V */
#define NV_PME_HOST_CONFIG_FOUT_PAUSE                         26:26 /* RWIVF */
#define NV_PME_HOST_CONFIG_FOUT_PAUSE_DISABLED           0x00000000 /* RW--V */
#define NV_PME_HOST_CONFIG_FOUT_PAUSE_ENABLED            0x00000001 /* RW--V */
#define NV_PME_HOST_CONFIG_FIN_PAUSE                          27:27 /* RWIVF */
#define NV_PME_HOST_CONFIG_FIN_PAUSE_DISABLED            0x00000000 /* RW--V */
#define NV_PME_HOST_CONFIG_FIN_PAUSE_ENABLED             0x00000001 /* RW--V */
#define NV_PME_HOST_CONFIG_FIN_VIP_HOST_4X                    28:28 /* RWIVF */
#define NV_PME_HOST_CONFIG_FIN_VIP_HOST_4X_DISABLED      0x00000000 /* RW--V */
#define NV_PME_HOST_CONFIG_FIN_VIP_HOST_4X_ENABLED       0x00000001 /* RW--V */
#define NV_PME_HOST_CONFIG_FOUT_VIP_HOST_4X                   29:29 /* RWIVF */
#define NV_PME_HOST_CONFIG_FOUT_VIP_HOST_4X_DISABLED     0x00000000 /* RW--V */
#define NV_PME_HOST_CONFIG_FOUT_VIP_HOST_4X_ENABLED      0x00000001 /* RW--V */
#define NV_PME_HOST_CONFIG_FIN                                30:30 /* RWIVF */
#define NV_PME_HOST_CONFIG_FIN_DISABLED                  0x00000000 /* RW--V */
#define NV_PME_HOST_CONFIG_FIN_ENABLED                   0x00000001 /* RW--V */
#define NV_PME_HOST_CONFIG_FOUT                               31:31 /* RWIVF */
#define NV_PME_HOST_CONFIG_FOUT_DISABLED                 0x00000000 /* RW--V */
#define NV_PME_HOST_CONFIG_FOUT_ENABLED                  0x00000001 /* RW--V */
#define NV_PME_FOUT_ADDR                                 0x00200204 /* RWI4R */
#define NV_PME_FOUT_ADDR_FIFO                                   3:0 /* RWIVF */
#define NV_PME_FOUT_ADDR_DEVICE                                 9:8 /* RWIVF */
#define NV_PME_FIN_ADDR                                  0x00200208 /* RWI4R */
#define NV_PME_FIN_ADDR_FIFO                                    3:0 /* RWIVF */
#define NV_PME_FIN_ADDR_DEVICE                                  9:8 /* RWIVF */
#define NV_PME_656_CONFIG                                0x00200400 /* RWI4R */
#define NV_PME_656_CONFIG_TASKA_ENABLE                          0:0 /* RWXUF */
#define NV_PME_656_CONFIG_TASKB_ENABLE                          4:4 /* RWXUF */
#define NV_PME_656_CONFIG_TASKA_ONLY                            6:6 /* RWXUF */
#define NV_PME_656_CONFIG_TASKA_ONLY_DISABLED            0x00000000 /* RW--V */
#define NV_PME_656_CONFIG_TASKA_ONLY_ENABLED             0x00000001 /* RW--V */
#define NV_PME_656_CONFIG_ANC_MODE                              9:8 /* RWXUF */
#define NV_PME_656_CONFIG_ANC_MODE_DISABLED              0x00000000 /* RW--V */
#define NV_PME_656_CONFIG_ANC_MODE_VBI1                  0x00000001 /* RW--V */
#define NV_PME_656_CONFIG_ANC_MODE_VBI2                  0x00000002 /* RW--V */
#define NV_PME_656_CONFIG_ANC_MODE_ANC                   0x00000003 /* RW--V */
#define NV_PME_656_CONFIG_ANC_TASKB                           10:10 /* RWXUF */
#define NV_PME_656_CONFIG_ANC_TASKB_DISABLED             0x00000000 /* RW--V */
#define NV_PME_656_CONFIG_ANC_TASKB_ENABLED              0x00000001 /* RW--V */
#define NV_PME_656_CONFIG_ANC_TASKB_END                       11:11 /* RWXUF */
#define NV_PME_656_CONFIG_ANC_TASKB_END_DISABLED         0x00000000 /* RW--V */
#define NV_PME_656_CONFIG_ANC_TASKB_END_ENABLED          0x00000001 /* RW--V */
#define NV_PME_656_CONFIG_VBI_VERT                            12:12 /* RWXUF */
#define NV_PME_656_CONFIG_VBI_VERT_DISABLED              0x00000000 /* RW--V */
#define NV_PME_656_CONFIG_VBI_VERT_ENABLED               0x00000001 /* RW--V */
#define NV_PME_656_CONFIG_ANC_HNOTV                           16:16 /* RWXUF */
#define NV_PME_656_CONFIG_ANC_HNOTV_DISABLED             0x00000000 /* RW--V */
#define NV_PME_656_CONFIG_ANC_HNOTV_ENABLED              0x00000001 /* RW--V */
#define NV_PME_656_CONFIG_ANC_NOTHV                           17:17 /* RWXUF */
#define NV_PME_656_CONFIG_ANC_NOTHV_DISABLED             0x00000000 /* RW--V */
#define NV_PME_656_CONFIG_ANC_NOTHV_ENABLED              0x00000001 /* RW--V */
#define NV_PME_656_CONFIG_ANC_NOTHNOTV                        18:18 /* RWXUF */
#define NV_PME_656_CONFIG_ANC_NOTHNOTV_DISABLED          0x00000000 /* RW--V */
#define NV_PME_656_CONFIG_ANC_NOTHNOTV_ENABLED           0x00000001 /* RW--V */
#define NV_PME_656_CONFIG_ANC_HV                              19:19 /* RWXUF */
#define NV_PME_656_CONFIG_ANC_HV_DISABLED                0x00000000 /* RW--V */
#define NV_PME_656_CONFIG_ANC_HV_ENABLED                 0x00000001 /* RW--V */
#define NV_PME_656_CONFIG_ANC_IGNORE_PITCH                    20:20 /* RWXUF */
#define NV_PME_656_CONFIG_ANC_IGNORE_PITCH_DISABLED      0x00000000 /* RW--V */
#define NV_PME_656_CONFIG_ANC_IGNORE_PITCH_ENABLED       0x00000001 /* RW--V */
#define NV_PME_656_CONFIG_SWAP_UYVY                           29:29 /* RWXUF */
#define NV_PME_656_CONFIG_SWAP_UYVY_DISABLED             0x00000000 /* RW--V */
#define NV_PME_656_CONFIG_SWAP_UYVY_ENABLED              0x00000001 /* RW--V */
#define NV_PME_656_CONFIG_INVERT_SIGN                         30:30 /* RWXUF */
#define NV_PME_656_CONFIG_INVERT_SIGN_DISABLED           0x00000000 /* RW--V */
#define NV_PME_656_CONFIG_INVERT_SIGN_ENABLED            0x00000001 /* RW--V */
#define NV_PME_656_CONFIG_VIDEO                               31:31 /* RWIVF */
#define NV_PME_656_CONFIG_VIDEO_8                        0x00000000 /* RW--V */
#define NV_PME_656_CONFIG_VIDEO_16                       0x00000001 /* RW--V */
#define NV_PME_NULL_DATA                                 0x00200404 /* RWI4R */
#define NV_PME_NULL_DATA_COMPARE                                0:0 /* RWIVF */
#define NV_PME_NULL_DATA_COMPARE_DISABLED                0x00000000 /* RWI-V */
#define NV_PME_NULL_DATA_COMPARE_ENABLED                 0x00000001 /* RW--V */
#define NV_PME_NULL_DATA_LINE_DETECT                            4:4 /* RWIVF */
#define NV_PME_NULL_DATA_LINE_DETECT_DISABLED            0x00000000 /* RWI-V */
#define NV_PME_NULL_DATA_LINE_DETECT_ENABLED             0x00000001 /* RW--V */
#define NV_PME_NULL_DATA_BYTE                                 31:24 /* RWXVF */
#define NV_PME_VIPREG_NBYTES                             0x00200300 /* RW-4R */
#define NV_PME_VIPREG_ADDR                               0x00200304 /* RW-4R */
#define NV_PME_VIPREG_ADDR_LA                                   7:0 /* RW-VF */
#define NV_PME_VIPREG_ADDR_UA                                  15:8 /* RW-VF */
#define NV_PME_VIPREG_DATA                               0x00200308 /* RW-4R */
#define NV_PME_VIPREG_DATA_BITS                                31:0 /* RW_VF */
#define NV_PME_VIPREG_CTRL                               0x0020030c /* RW-4R */
#define NV_PME_VIPREG_CTRL_READ                                 0:0 /* RWIVF */
#define NV_PME_VIPREG_CTRL_READ_NOT_PENDING              0x00000000 /* RWI-V */
#define NV_PME_VIPREG_CTRL_READ_PENDING                  0x00000001 /* R---V */
#define NV_PME_VIPREG_CTRL_READ_START                    0x00000001 /* -WI-V */
#define NV_PME_VIPREG_CTRL_WRITE                                8:8 /* RWIVF */
#define NV_PME_VIPREG_CTRL_WRITE_NOT_PENDING             0x00000000 /* RWI-V */
#define NV_PME_VIPREG_CTRL_WRITE_PENDING                 0x00000001 /* R---V */
#define NV_PME_VIPREG_CTRL_WRITE_START                   0x00000001 /* -WI-V */
#define NV_PME_FOUT_BUFF0_START                          0x00200340 /* RWI4R */
#define NV_PME_FOUT_BUFF0_START_ADDRESS                        31:4 /* RWXUF */
#define NV_PME_FOUT_BUFF1_START                          0x00200344 /* RWI4R */
#define NV_PME_FOUT_BUFF1_START_ADDRESS                        31:4 /* RWXUF */
#define NV_PME_FOUT_BUFF0_LENGTH                         0x00200348 /* RWI4R */
#define NV_PME_FOUT_BUFF0_LENGTH_BITS                          23:4 /* RWXUF */
#define NV_PME_FOUT_BUFF1_LENGTH                         0x0020034c /* RWI4R */
#define NV_PME_FOUT_BUFF1_LENGTH_BITS                          23:4 /* RWXUF */
#define NV_PME_FOUT_ME_STATE                             0x00200350 /* RW-4R */
#define NV_PME_FOUT_ME_STATE_BUFF0_INTR_NOTIFY                  0:0 /* RWIVF */
#define NV_PME_FOUT_ME_STATE_BUFF1_INTR_NOTIFY                  4:4 /* RWXVF */
#define NV_PME_FOUT_ME_STATE_BUFF0_IN_USE                       8:8 /* RWXVF */
#define NV_PME_FOUT_ME_STATE_BUFF1_IN_USE                     12:12 /* RWXVF */
#define NV_PME_FOUT_ME_STATE_CURRENT_BUFFER                   16:16 /* RWXVF */
#define NV_PME_FOUT_ME_STATE_CURRENT_BUFFER_0            0x00000000 /* RW--V */
#define NV_PME_FOUT_ME_STATE_CURRENT_BUFFER_1            0x00000001 /* RW--V */
#define NV_PME_FOUT_SU_STATE                             0x00200354 /* RW-4R */
#define NV_PME_FOUT_SU_STATE_BUFF0_IN_USE                     16:16 /* RWXVF */
#define NV_PME_FOUT_SU_STATE_BUFF1_IN_USE                     20:20 /* RWXVF */
#define NV_PME_FOUT_RM_STATE                             0x00200358 /* RW-4R */
#define NV_PME_FOUT_RM_STATE_BUFF0_INTR_NOTIFY                  0:0 /* RWXVF */
#define NV_PME_FOUT_RM_STATE_BUFF1_INTR_NOTIFY                  4:4 /* RWXVF */
#define NV_PME_FOUT_CURRENT                              0x0020035c /* R-I4R */
#define NV_PME_FOUT_CURRENT_POS                                31:0 /* R-XUF */
#define NV_PME_FIN_BUFF0_START                           0x00200380 /* RWI4R */
#define NV_PME_FIN_BUFF0_START_ADDRESS                         31:4 /* RWXUF */
#define NV_PME_FIN_BUFF1_START                           0x00200384 /* RWI4R */
#define NV_PME_FIN_BUFF1_START_ADDRESS                         31:4 /* RWXUF */
#define NV_PME_FIN_BUFF0_LENGTH                          0x00200388 /* RWI4R */
#define NV_PME_FIN_BUFF0_LENGTH_BITS                           23:4 /* RWXUF */
#define NV_PME_FIN_BUFF1_LENGTH                          0x0020038c /* RWI4R */
#define NV_PME_FIN_BUFF1_LENGTH_BITS                           23:4 /* RWXUF */
#define NV_PME_FIN_ME_STATE                              0x00200390 /* RW-4R */
#define NV_PME_FIN_ME_STATE_BUFF0_INTR_NOTIFY                   0:0 /* RWIVF */
#define NV_PME_FIN_ME_STATE_BUFF1_INTR_NOTIFY                   4:4 /* RWXVF */
#define NV_PME_FIN_ME_STATE_BUFF0_IN_USE                        8:8 /* RWXVF */
#define NV_PME_FIN_ME_STATE_BUFF1_IN_USE                      12:12 /* RWXVF */
#define NV_PME_FIN_ME_STATE_CURRENT_BUFFER                    16:16 /* RWXVF */
#define NV_PME_FIN_ME_STATE_CURRENT_BUFFER_0             0x00000000 /* RW--V */
#define NV_PME_FIN_ME_STATE_CURRENT_BUFFER_1             0x00000001 /* RW--V */
#define NV_PME_FIN_SU_STATE                              0x00200394 /* RW-4R */
#define NV_PME_FIN_SU_STATE_BUFF0_IN_USE                      16:16 /* RWXVF */
#define NV_PME_FIN_SU_STATE_BUFF1_IN_USE                      20:20 /* RWXVF */
#define NV_PME_FIN_RM_STATE                              0x00200398 /* RW-4R */
#define NV_PME_FIN_RM_STATE_BUFF0_INTR_NOTIFY                   0:0 /* RWXVF */
#define NV_PME_FIN_RM_STATE_BUFF1_INTR_NOTIFY                   4:4 /* RWXVF */
#define NV_PME_FIN_CURRENT                               0x0020039c /* R-I4R */
#define NV_PME_FIN_CURRENT_POS                                 31:0 /* R-XUF */
#define NV_PME_VBI_REGION                                0x00200408 /* RWI4R */
#define NV_PME_VBI_REGION_START_LINE                            4:0 /* RWX-F */
#define NV_PME_VBI_REGION_NUM_LINES                           20:16 /* RWX-F */
#define NV_PME_ANC_BUFF0_START                           0x00200410 /* RWI4R */
#define NV_PME_ANC_BUFF0_START_ADDRESS                         26:4 /* RWXUF */
#define NV_PME_ANC_BUFF1_START                           0x00200414 /* RWI4R */
#define NV_PME_ANC_BUFF1_START_ADDRESS                         26:4 /* RWXUF */
#define NV_PME_ANC_BUFF0_PITCH                           0x00200418 /* RWI4R */
#define NV_PME_ANC_BUFF0_PITCH_VALUE                           13:4 /* RWXUF */
#define NV_PME_ANC_BUFF1_PITCH                           0x0020041c /* RWI4R */
#define NV_PME_ANC_BUFF1_PITCH_VALUE                           13:4 /* RWXUF */
#define NV_PME_ANC_BUFF0_LENGTH                          0x00200420 /* RWI4R */
#define NV_PME_ANC_BUFF0_LENGTH_VALUE                          19:4 /* RWXUF */
#define NV_PME_ANC_BUFF1_LENGTH                          0x00200424 /* RWI4R */
#define NV_PME_ANC_BUFF1_LENGTH_VALUE                          19:4 /* RWXUF */
#define NV_PME_ANC_ME_STATE                              0x00200428 /* RW-4R */
#define NV_PME_ANC_ME_STATE_BUFF0_INTR_NOTIFY                   0:0 /* RWXVF */
#define NV_PME_ANC_ME_STATE_BUFF1_INTR_NOTIFY                   4:4 /* RWXVF */
#define NV_PME_ANC_ME_STATE_BUFF0_ERROR_CODE                   10:8 /* RWXVF */
#define NV_PME_ANC_ME_STATE_BUFF1_ERROR_CODE                  14:12 /* RWXVF */
#define NV_PME_ANC_ME_STATE_BUFF0_IN_USE                      16:16 /* RWXVF */
#define NV_PME_ANC_ME_STATE_BUFF1_IN_USE                      20:20 /* RWXVF */
#define NV_PME_ANC_ME_STATE_CURRENT_BUFFER                    24:24 /* RWXVF */
#define NV_PME_ANC_ME_STATE_CURRENT_BUFFER_0             0x00000000 /* RW--V */
#define NV_PME_ANC_ME_STATE_CURRENT_BUFFER_1             0x00000001 /* RW--V */
#define NV_PME_ANC_SU_STATE                              0x0020042c /* RW-4R */
#define NV_PME_ANC_SU_STATE_BUFF0_FIELD                         8:8 /* RWXVF */
#define NV_PME_ANC_SU_STATE_BUFF1_FIELD                       12:12 /* RWXVF */
#define NV_PME_ANC_SU_STATE_BUFF0_IN_USE                      16:16 /* RWXVF */
#define NV_PME_ANC_SU_STATE_BUFF1_IN_USE                      20:20 /* RWXVF */
#define NV_PME_ANC_RM_STATE                              0x00200430 /* RW-4R */
#define NV_PME_ANC_RM_STATE_BUFF0_INTR_NOTIFY                   0:0 /* RWXVF */
#define NV_PME_ANC_RM_STATE_BUFF1_INTR_NOTIFY                   4:4 /* RWXVF */
#define NV_PME_ANC_CURRENT                               0x00200434 /* R--4R */
#define NV_PME_ANC_CURRENT_POS                                 27:0 /* R-XVF */
#define NV_PME_TASKA_BUFF0_START                         0x00200440 /* RWI4R */
#define NV_PME_TASKA_BUFF0_START_ADDRESS                       26:4 /* RWXUF */
#define NV_PME_TASKA_BUFF1_START                         0x00200444 /* RWI4R */
#define NV_PME_TASKA_BUFF1_START_ADDRESS                       26:4 /* RWXUF */
#define NV_PME_TASKA_BUFF0_PITCH                         0x00200448 /* RWI4R */
#define NV_PME_TASKA_BUFF0_PITCH_VALUE                         13:4 /* RWXUF */
#define NV_PME_TASKA_BUFF1_PITCH                         0x0020044c /* RWI4R */
#define NV_PME_TASKA_BUFF1_PITCH_VALUE                         13:4 /* RWXUF */
#define NV_PME_TASKA_BUFF0_LENGTH                        0x00200450 /* RWI4R */
#define NV_PME_TASKA_BUFF0_LENGTH_VALUE                        23:4 /* RWXUF */
#define NV_PME_TASKA_BUFF1_LENGTH                        0x00200454 /* RWI4R */
#define NV_PME_TASKA_BUFF1_LENGTH_VALUE                        23:4 /* RWXUF */
#define NV_PME_TASKA_LINE_LENGTH                         0x002004f0 /* RWI4R */
#define NV_PME_TASKA_LINE_LENGTH_VALUE                         13:2 /* RWXUF */
#define NV_PME_TASKA_ME_STATE                            0x00200458 /* RW-4R */
#define NV_PME_TASKA_ME_STATE_BUFF0_INTR_NOTIFY                 0:0 /* RWXVF */
#define NV_PME_TASKA_ME_STATE_BUFF1_INTR_NOTIFY                 4:4 /* RWXVF */
#define NV_PME_TASKA_ME_STATE_RP_FLAGS_BUFF0                    8:5 /* RW--- */
#define NV_PME_TASKA_ME_STATE_BUFF0_ERROR_CODE                 11:9 /* RWXVF */
#define NV_PME_TASKA_ME_STATE_BUFF1_ERROR_CODE                14:12 /* RWXVF */
#define NV_PME_TASKA_ME_STATE_BUFF0_IN_USE                    16:16 /* RWXVF */
#define NV_PME_TASKA_ME_STATE_BUFF1_IN_USE                    20:20 /* RWXVF */
#define NV_PME_TASKA_ME_STATE_CURRENT_BUFFER                  24:24 /* RWXVF */
#define NV_PME_TASKA_ME_STATE_CURRENT_BUFFER_0           0x00000000 /* RW--V */
#define NV_PME_TASKA_ME_STATE_CURRENT_BUFFER_1           0x00000001 /* RW--V */
#define NV_PME_TASKA_ME_STATE_RP_FLAGS_BUFF1                  28:25 /* RW--- */
#define NV_PME_TASKA_SU_STATE                            0x0020045c /* RW-4R */
#define NV_PME_TASKA_SU_STATE_BUFF0_FIELD                       8:8 /* RWXVF */
#define NV_PME_TASKA_SU_STATE_BUFF1_FIELD                     12:12 /* RWXVF */
#define NV_PME_TASKA_SU_STATE_BUFF0_IN_USE                    16:16 /* RWXVF */
#define NV_PME_TASKA_SU_STATE_BUFF1_IN_USE                    20:20 /* RWXVF */
#define NV_PME_TASKA_RM_STATE                            0x00200460 /* RW-4R */
#define NV_PME_TASKA_RM_STATE_BUFF0_INTR_NOTIFY                 0:0 /* RWXVF */
#define NV_PME_TASKA_RM_STATE_BUFF1_INTR_NOTIFY                 4:4 /* RWXVF */
#define NV_PME_TASKA_Y_CROP                              0x00200464 /* RW-4R */
#define NV_PME_TASKA_Y_CROP_STARTLINE                           8:0 /* RWXVF */
#define NV_PME_TASKA_Y_SCALE                             0x00200468 /* RW-4R */
#define NV_PME_TASKA_Y_SCALE_INCR                              10:0 /* RWXVF */
#define NV_PME_TASKA_X_SCALE                             0x0020046c /* RW-4R */
#define NV_PME_TASKA_X_SCALE_INCR                              27:0 /* RWXVF */
#define NV_PME_TASKA_X_SCALE_FILTER                           31:31 /* RWXVF */
#define NV_PME_TASKA_X_SCALE_FILTER_DISABLE              0x00000000 /* RWI-V */
#define NV_PME_TASKA_X_SCALE_FILTER_ENABLE               0x00000001 /* RW--V */
#define NV_PME_TASKB_BUFF0_START                         0x00200470 /* RWI4R */
#define NV_PME_TASKB_BUFF0_START_ADDRESS                       26:4 /* RWXUF */
#define NV_PME_TASKB_BUFF1_START                         0x00200474 /* RWI4R */
#define NV_PME_TASKB_BUFF1_START_ADDRESS                       26:4 /* RWXUF */
#define NV_PME_TASKB_BUFF0_PITCH                         0x00200478 /* RWI4R */
#define NV_PME_TASKB_BUFF0_PITCH_VALUE                         13:4 /* RWXUF */
#define NV_PME_TASKB_BUFF1_PITCH                         0x0020047c /* RWI4R */
#define NV_PME_TASKB_BUFF1_PITCH_VALUE                         13:4 /* RWXUF */
#define NV_PME_TASKB_BUFF0_LENGTH                        0x00200480 /* RWI4R */
#define NV_PME_TASKB_BUFF0_LENGTH_VALUE                        23:4 /* RWXUF */
#define NV_PME_TASKB_BUFF1_LENGTH                        0x00200484 /* RWI4R */
#define NV_PME_TASKB_BUFF1_LENGTH_VALUE                        23:4 /* RWXUF */
#define NV_PME_TASKB_LINE_LENGTH                         0x002004f4 /* RWI4R */
#define NV_PME_TASKB_LINE_LENGTH_VALUE                         13:2 /* RWXUF */
#define NV_PME_TASKB_ME_STATE                            0x00200488 /* RW-4R */
#define NV_PME_TASKB_ME_STATE_BUFF0_INTR_NOTIFY                 0:0 /* RWXVF */
#define NV_PME_TASKB_ME_STATE_BUFF1_INTR_NOTIFY                 4:4 /* RWXVF */
#define NV_PME_TASKB_ME_STATE_RP_FLAGS_BUFF0                    8:5 /* RW--- */
#define NV_PME_TASKB_ME_STATE_BUFF0_ERROR_CODE                 11:9 /* RWXVF */
#define NV_PME_TASKB_ME_STATE_BUFF1_ERROR_CODE                14:12 /* RWXVF */
#define NV_PME_TASKB_ME_STATE_BUFF0_IN_USE                    16:16 /* RWXVF */
#define NV_PME_TASKB_ME_STATE_BUFF1_IN_USE                    20:20 /* RWXVF */
#define NV_PME_TASKB_ME_STATE_CURRENT_BUFFER                  24:24 /* RWXVF */
#define NV_PME_TASKB_ME_STATE_CURRENT_BUFFER_0           0x00000000 /* RW--V */
#define NV_PME_TASKB_ME_STATE_CURRENT_BUFFER_1           0x00000001 /* RW--V */
#define NV_PME_TASKB_ME_STATE_RP_FLAGS_BUFF1                  28:25 /* R---- */
#define NV_PME_TASKB_SU_STATE                            0x0020048c /* RW-4R */
#define NV_PME_TASKB_SU_STATE_BUFF0_FIELD                       8:8 /* RWXVF */
#define NV_PME_TASKB_SU_STATE_BUFF1_FIELD                     12:12 /* RWXVF */
#define NV_PME_TASKB_SU_STATE_BUFF0_IN_USE                    16:16 /* RWXVF */
#define NV_PME_TASKB_SU_STATE_BUFF1_IN_USE                    20:20 /* RWXVF */
#define NV_PME_TASKB_RM_STATE                            0x00200490 /* RW-4R */
#define NV_PME_TASKB_RM_STATE_BUFF0_INTR_NOTIFY                 0:0 /* RWXVF */
#define NV_PME_TASKB_RM_STATE_BUFF1_INTR_NOTIFY                 4:4 /* RWXVF */
#define NV_PME_TASKB_Y_CROP                              0x00200494 /* RW-4R */
#define NV_PME_TASKB_Y_CROP_STARTLINE                           8:0 /* RWXVF */
#define NV_PME_TASKB_Y_SCALE                             0x00200498 /* RW-4R */
#define NV_PME_TASKB_Y_SCALE_INCR                              10:0 /* RWXVF */
#define NV_PME_TASKB_X_SCALE                             0x0020049c /* RW-4R */
#define NV_PME_TASKB_X_SCALE_INCR                              27:0 /* RWXVF */
#define NV_PME_TASKB_X_SCALE_FILTER                           31:31 /* RWXVF */
#define NV_PME_TASKB_X_SCALE_FILTER_DISABLE              0x00000000 /* RWI-V */
#define NV_PME_TASKB_X_SCALE_FILTER_ENABLE               0x00000001 /* RW--V */
#define NV_PME_TASK_CURRENT                              0x002004a0 /* RW-4R */
#define NV_PME_TASK_CURRENT_POS                                27:0 /* RWXVF */
#define NV_PME_TASK_CURRENT_TASK                              31:31 /* RWXVF */
#define NV_PME_HORIZ_WGHTS_A(i)                  (0x002004b0+(i)*4) /* -W-4A */
#define NV_PME_HORIZ_WGHTS_A__SIZE_1                              8 /*       */
#define NV_PME_HORIZ_WGHTS_A_0                                  7:0 /* -WXVF */
#define NV_PME_HORIZ_WGHTS_A_1                                 15:8 /* -WXVF */
#define NV_PME_HORIZ_WGHTS_A_2                                24:16 /* -WXVF */
#define NV_PME_HORIZ_WGHTS_B(i)                  (0x002004d0+(i)*4) /* -W-4A */
#define NV_PME_HORIZ_WGHTS_B__SIZE_1                              8 /*       */
#define NV_PME_HORIZ_WGHTS_B_3                                  7:0 /* -WXVF */
#define NV_PME_HORIZ_WGHTS_B_4                                 15:8 /* -WXVF */
/* dev_vga.ref */
#define NV_PCRTC_CURSOR                                  0x0060080c /* RWI4R */
#define NV_PCRTC_CURSOR_ADDRESS                                31:0 /* RW--F */
#define NV_PCRTC_CURSOR_CONFIG                           0x00600810 /* RWI4R */
#define NV_PCRTC_CURSOR_CONFIG_ENABLE                           0:0 /* RW--F */
#define NV_PCRTC_CURSOR_CONFIG_ENABLE_ENABLE             0x00000001 /* RW--V */
#define NV_PCRTC_CURSOR_CONFIG_ENABLE_DISABLE            0x00000000 /* RWI-V */
#define NV_PCRTC_CURSOR_CONFIG_SCAN_DOUBLE                      4:4 /* RW--F */
#define NV_PCRTC_CURSOR_CONFIG_SCAN_DOUBLE_ENABLE        0x00000001 /* RW--V */
#define NV_PCRTC_CURSOR_CONFIG_SCAN_DOUBLE_DISABLE       0x00000000 /* RWI-V */
#define NV_PCRTC_CURSOR_CONFIG_ADDRESS_SPACE                    8:8 /* RW--F */
#define NV_PCRTC_CURSOR_CONFIG_ADDRESS_SPACE_PNVM        0x00000001 /* RW--V */
#define NV_PCRTC_CURSOR_CONFIG_ADDRESS_SPACE_PINST       0x00000000 /* RWI-V */
#define NV_PCRTC_CURSOR_CONFIG_CUR_BPP                        12:12 /* RW--F */
#define NV_PCRTC_CURSOR_CONFIG_CUR_BPP_16                0x00000000 /* RWI-V */
#define NV_PCRTC_CURSOR_CONFIG_CUR_BPP_32                0x00000001 /* RW--V */
#define NV_PCRTC_CURSOR_CONFIG_CUR_PIXELS                     16:16 /* RW--F */
#define NV_PCRTC_CURSOR_CONFIG_CUR_PIXELS_32             0x00000000 /* RWI-V */
#define NV_PCRTC_CURSOR_CONFIG_CUR_PIXELS_64             0x00000001 /* RW--V */
#define NV_PCRTC_CURSOR_CONFIG_CUR_LINES                      27:20 /* RW--F */
#define NV_PCRTC_CURSOR_CONFIG_CUR_LINES_32              0x00000020 /* RWI-V */
#define NV_PCRTC_CURSOR_CONFIG_CUR_LINES_64              0x00000040 /* RW--V */
#define NV_PCRTC_CURSOR_CONFIG_CUR_BLEND                      28:28 /* RW--F */
#define NV_PCRTC_CURSOR_CONFIG_CUR_BLEND_ROP             0x00000000 /* RWI-V */
#define NV_PCRTC_CURSOR_CONFIG_CUR_BLEND_ALPHA           0x00000001 /* RW--V */
#define NV_PCRTC_VIP_RASTER                              0x00600814 /* R-I4R */
#define NV_PCRTC_VIP_RASTER_POSITION                           10:0 /* R---F */
#define NV_PCRTC_GPIO                                    0x00600818 /* RWI4R */
#define NV_PCRTC_GPIO_1_OUTPUT                                  0:0 /* RWI-F */
#define NV_PCRTC_GPIO_1_OUTPUT_0                         0x00000000 /* RWI-V */
#define NV_PCRTC_GPIO_1_ENABLE                                  4:4 /* R---F */
#define NV_PCRTC_GPIO_1_ENABLE_DISABLE                   0x00000001 /* RWI-V */
#define NV_PCRTC_GPIO_1_ENABLE_ENABLE                    0x00000000 /* RW--V */
#define NV_PCRTC_GPIO_0_INPUT                                   8:8 /* R---F */
#define NV_PCRTC_GPIO_0_OUTPUT                                16:16 /* RWI-F */
#define NV_PCRTC_GPIO_0_OUTPUT_0                         0x00000000 /* RWI-V */
#define NV_PCRTC_GPIO_0_ENABLE                                20:20 /* R---F */
#define NV_PCRTC_GPIO_0_ENABLE_DISABLE                   0x00000001 /* RWI-V */
#define NV_PCRTC_GPIO_0_ENABLE_ENABLE                    0x00000000 /* RW--V */
#define NV_PCRTC_GPIO_1_INPUT                                 24:24 /* R---F */
#define NV_PCRTC_GPIO_EXT                                0x0060081C /* RWI4R */
#define NV_PCRTC_GPIO_EXT_2_OUTPUT                              0:0 /* RWI-F */
#define NV_PCRTC_GPIO_EXT_2_OUTPUT_0                     0x00000000 /* RWI-V */
#define NV_PCRTC_GPIO_EXT_2_ENABLE                              1:1 /* R---F */
#define NV_PCRTC_GPIO_EXT_2_ENABLE_DISABLE               0x00000001 /* RWI-V */
#define NV_PCRTC_GPIO_EXT_2_ENABLE_ENABLE                0x00000000 /* RW--V */
#define NV_PCRTC_GPIO_EXT_2_INPUT                               2:2 /* R---F */
#define NV_PCRTC_GPIO_EXT_3_OUTPUT                              4:4 /* RWI-F */
#define NV_PCRTC_GPIO_EXT_3_OUTPUT_0                     0x00000000 /* RWI-V */
#define NV_PCRTC_GPIO_EXT_3_ENABLE                              5:5 /* R---F */
#define NV_PCRTC_GPIO_EXT_3_ENABLE_DISABLE               0x00000001 /* RWI-V */
#define NV_PCRTC_GPIO_EXT_3_ENABLE_ENABLE                0x00000000 /* RW--V */
#define NV_PCRTC_GPIO_EXT_3_INPUT                               6:6 /* R---F */
#define NV_PCRTC_GPIO_EXT_4_OUTPUT                              8:8 /* RWI-F */
#define NV_PCRTC_GPIO_EXT_4_OUTPUT_0                     0x00000000 /* RWI-V */
#define NV_PCRTC_GPIO_EXT_4_ENABLE                              9:9 /* R---F */
#define NV_PCRTC_GPIO_EXT_4_ENABLE_DISABLE               0x00000001 /* RWI-V */
#define NV_PCRTC_GPIO_EXT_4_ENABLE_ENABLE                0x00000000 /* RW--V */
#define NV_PCRTC_GPIO_EXT_4_INPUT                             10:10 /* R---F */
#define NV_PCRTC_GPIO_EXT_5_OUTPUT                            12:12 /* RWI-F */
#define NV_PCRTC_GPIO_EXT_5_OUTPUT_0                     0x00000000 /* RWI-V */
#define NV_PCRTC_GPIO_EXT_5_ENABLE                            13:13 /* R---F */
#define NV_PCRTC_GPIO_EXT_5_ENABLE_DISABLE               0x00000001 /* RWI-V */
#define NV_PCRTC_GPIO_EXT_5_ENABLE_ENABLE                0x00000000 /* RW--V */
#define NV_PCRTC_GPIO_EXT_5_INPUT                             14:14 /* R---F */
#define NV_PCRTC_FIFO_CNTRL                              0x00600838 /* RWI4R */
#define NV_PCRTC_FIFO_CNTRL_ADDRESS                             6:0 /* RW--F */
#define NV_PCRTC_FIFO_CNTRL_RAM                               12:12 /* RW--F */
#define NV_PCRTC_FIFO_CNTR_TESTMODE                           16:16 /* RW--F */
#define NV_PCRTC_FIFO_CNTR_TESTMODE_ENABLE                        1 /* RW--V */
#define NV_PCRTC_FIFO_CNTR_TESTMODE_DISABLE                       0 /* RW--V */
#define NV_PCRTC_FIFO_DATA_0                             0x00600840 /* RWI4R */
#define NV_PCRTC_FIFO_DATA_0_VAL                               31:0 /* RW--F */
#define NV_PCRTC_FIFO_DATA_1                             0x00600844 /* RWI4R */
#define NV_PCRTC_FIFO_DATA_1_VAL                               31:0 /* RW--F */
#define NV_PCRTC_FIFO_DATA_2                             0x00600848 /* RWI4R */
#define NV_PCRTC_FIFO_DATA_2_VAL                               31:0 /* RW--F */
#define NV_PCRTC_FIFO_DATA_3                             0x0060084c /* RWI4R */
#define NV_PCRTC_FIFO_DATA_3_VAL                               31:0 /* RW--F */
/* dev_pm.ref */
#define NV_PPM                                0x0000AFFF:0x0000A000 /* RW--D */
#define NV_PPM_NV_TRIG0_SEL                              0x0000A400 /* RW-4R */
#define NV_PPM_NV_TRIG0_SEL_SEL0                                7:0 /* RWXUF */
#define NV_PPM_NV_TRIG0_SEL_SEL1                               15:8 /* RWXUF */
#define NV_PPM_NV_TRIG0_SEL_SEL2                              23:16 /* RWXUF */
#define NV_PPM_NV_TRIG0_SEL_SEL3                              31:24 /* RWXUF */
#define NV_PPM_NV_TRIG0_OP                               0x0000A404 /* RW-4R */
#define NV_PPM_NV_TRIG0_OP_FUNC                                15:0 /* RWXUF */
#define NV_PPM_NV_TRIG0_OP_DSEL0                              16:16 /* RWXUF */
#define NV_PPM_NV_TRIG0_OP_DSEL1                              17:17 /* RWXUF */
#define NV_PPM_NV_TRIG1_SEL                              0x0000A408 /* RW-4R */
#define NV_PPM_NV_TRIG1_SEL_SEL0                                7:0 /* RWXUF */
#define NV_PPM_NV_TRIG1_SEL_SEL1                               15:8 /* RWXUF */
#define NV_PPM_NV_TRIG1_SEL_SEL2                              23:16 /* RWXUF */
#define NV_PPM_NV_TRIG1_SEL_SEL3                              31:24 /* RWXUF */
#define NV_PPM_NV_TRIG1_OP                               0x0000A40C /* RW-4R */
#define NV_PPM_NV_TRIG1_OP_FUNC                                15:0 /* RWXUF */
#define NV_PPM_NV_TRIG1_OP_DSEL0                              16:16 /* RWXUF */
#define NV_PPM_NV_TRIG1_OP_DSEL1                              17:17 /* RWXUF */
#define NV_PPM_NV_EVENT_SEL                              0x0000A410 /* RW-4R */
#define NV_PPM_NV_EVENT_SEL_SEL0                                7:0 /* RWXUF */
#define NV_PPM_NV_EVENT_SEL_SEL1                               15:8 /* RWXUF */
#define NV_PPM_NV_EVENT_SEL_SEL2                              23:16 /* RWXUF */
#define NV_PPM_NV_EVENT_SEL_SEL3                              31:24 /* RWXUF */
#define NV_PPM_NV_EVENT_OP                               0x0000A414 /* RW-4R */
#define NV_PPM_NV_EVENT_OP_FUNC                                15:0 /* RWXUF */
#define NV_PPM_NV_EVENT_OP_DSEL0                              16:16 /* RWXUF */
#define NV_PPM_NV_EVENT_OP_DSEL1                              17:17 /* RWXUF */
#define NV_PPM_NV_SAMPLE_SEL                             0x0000A418 /* RW-4R */
#define NV_PPM_NV_SAMPLE_SEL_SEL0                               7:0 /* RWXUF */
#define NV_PPM_NV_SAMPLE_SEL_SEL1                              15:8 /* RWXUF */
#define NV_PPM_NV_SAMPLE_SEL_SEL2                             23:16 /* RWXUF */
#define NV_PPM_NV_SAMPLE_SEL_SEL3                             31:24 /* RWXUF */
#define NV_PPM_NV_SAMPLE_OP                              0x0000A41C /* RW-4R */
#define NV_PPM_NV_SAMPLE_OP_FUNC                               15:0 /* RWXUF */
#define NV_PPM_NV_SAMPLE_OP_DSEL0                             16:16 /* RWXUF */
#define NV_PPM_NV_SAMPLE_OP_DSEL1                             17:17 /* RWXUF */
#define NV_PPM_NV_SETFLAG_SEL                            0x0000A420 /* RW-4R */
#define NV_PPM_NV_SETFLAG_SEL_SEL0                              7:0 /* RWXUF */
#define NV_PPM_NV_SETFLAG_SEL_SEL1                             15:8 /* RWXUF */
#define NV_PPM_NV_SETFLAG_SEL_SEL2                            23:16 /* RWXUF */
#define NV_PPM_NV_SETFLAG_SEL_SEL3                            31:24 /* RWXUF */
#define NV_PPM_NV_SETFLAG_OP                             0x0000A424 /* RW-4R */
#define NV_PPM_NV_SETFLAG_OP_FUNC                              15:0 /* RWXUF */
#define NV_PPM_NV_SETFLAG_OP_DSEL0                            16:16 /* RWXUF */
#define NV_PPM_NV_SETFLAG_OP_DSEL1                            17:17 /* RWXUF */
#define NV_PPM_NV_CLRFLAG_SEL                            0x0000A428 /* RW-4R */
#define NV_PPM_NV_CLRFLAG_SEL_SEL0                              7:0 /* RWXUF */
#define NV_PPM_NV_CLRFLAG_SEL_SEL1                             15:8 /* RWXUF */
#define NV_PPM_NV_CLRFLAG_SEL_SEL2                            23:16 /* RWXUF */
#define NV_PPM_NV_CLRFLAG_SEL_SEL3                            31:24 /* RWXUF */
#define NV_PPM_NV_CLRFLAG_OP                             0x0000A42C /* RW-4R */
#define NV_PPM_NV_CLRFLAG_OP_FUNC                              15:0 /* RWXUF */
#define NV_PPM_NV_CLRFLAG_OP_DSEL0                            16:16 /* RWXUF */
#define NV_PPM_NV_CLRFLAG_OP_DSEL1                            17:17 /* RWXUF */
#define NV_PPM_NV_ELAPSED_0                              0x0000A600 /* RR-4R */
#define NV_PPM_NV_ELAPSED_0_VAL                                31:0 /* RR-UF */
#define NV_PPM_NV_ELAPSED_1                              0x0000A604 /* RR-4R */
#define NV_PPM_NV_ELAPSED_1_VAL                                 7:0 /* RR-UF */
#define NV_PPM_NV_CYCLECNT_0                             0x0000A608 /* RR-4R */
#define NV_PPM_NV_CYCLECNT_0_VAL                               31:0 /* RR-UF */
#define NV_PPM_NV_CYCLECNT_1                             0x0000A60C /* RR-4R */
#define NV_PPM_NV_CYCLECNT_1_VAL                                7:0 /* RR-UF */
#define NV_PPM_NV_EVENTCNT_0                             0x0000A610 /* RR-4R */
#define NV_PPM_NV_EVENTCNT_0_VAL                               31:0 /* RR-UF */
#define NV_PPM_NV_EVENTCNT_1                             0x0000A614 /* RR-4R */
#define NV_PPM_NV_EVENTCNT_1_VAL                                7:0 /* RR-UF */
#define NV_PPM_NV_THRESHCNT_0                            0x0000A618 /* RR-4R */
#define NV_PPM_NV_THRESHCNT_0_VAL                              31:0 /* RR-UF */
#define NV_PPM_NV_THRESHCNT_1                            0x0000A61C /* RR-4R */
#define NV_PPM_NV_THRESHCNT_1_VAL                               7:0 /* RR-UF */
#define NV_PPM_NV_TRIGGERCNT                             0x0000A620 /* RW-4R */
#define NV_PPM_NV_TRIGGERCNT_VAL                               31:0 /* RWXUF */
#define NV_PPM_NV_SAMPLECNT                              0x0000A624 /* RW-4R */
#define NV_PPM_NV_SAMPLECNT_VAL                                31:0 /* RWXUF */
#define NV_PPM_NV_THRESHOLD_0                            0x0000A628 /* RW-4R */
#define NV_PPM_NV_THRESHOLD_0_VAL                              31:0 /* RWXUF */
#define NV_PPM_NV_THRESHOLD_1                            0x0000A62C /* RW-4R */
#define NV_PPM_NV_THRESHOLD_1_VAL                               7:0 /* RWXUF */
#define NV_PPM_M_TRIG0_SEL                               0x0000A500 /* RW-4R */
#define NV_PPM_M_TRIG0_SEL_SEL0                                 5:0 /* RWXUF */
#define NV_PPM_M_TRIG0_SEL_SEL1                                13:8 /* RWXUF */
#define NV_PPM_M_TRIG0_SEL_SEL2                               21:16 /* RWXUF */
#define NV_PPM_M_TRIG0_SEL_SEL3                               29:24 /* RWXUF */
#define NV_PPM_M_TRIG0_OP                                0x0000A504 /* RW-4R */
#define NV_PPM_M_TRIG0_OP_FUNC                                 15:0 /* RWXUF */
#define NV_PPM_M_TRIG0_OP_DSEL0                               16:16 /* RWXUF */
#define NV_PPM_M_TRIG0_OP_DSEL1                               17:17 /* RWXUF */
#define NV_PPM_M_TRIG1_SEL                               0x0000A508 /* RW-4R */
#define NV_PPM_M_TRIG1_SEL_SEL0                                 5:0 /* RWXUF */
#define NV_PPM_M_TRIG1_SEL_SEL1                                13:8 /* RWXUF */
#define NV_PPM_M_TRIG1_SEL_SEL2                               21:16 /* RWXUF */
#define NV_PPM_M_TRIG1_SEL_SEL3                               29:24 /* RWXUF */
#define NV_PPM_M_TRIG1_OP                                0x0000A50C /* RW-4R */
#define NV_PPM_M_TRIG1_OP_FUNC                                 15:0 /* RWXUF */
#define NV_PPM_M_TRIG1_OP_DSEL0                               16:16 /* RWXUF */
#define NV_PPM_M_TRIG1_OP_DSEL1                               17:17 /* RWXUF */
#define NV_PPM_M_EVENT_SEL                               0x0000A510 /* RW-4R */
#define NV_PPM_M_EVENT_SEL_SEL0                                 5:0 /* RWXUF */
#define NV_PPM_M_EVENT_SEL_SEL1                                13:8 /* RWXUF */
#define NV_PPM_M_EVENT_SEL_SEL2                               21:16 /* RWXUF */
#define NV_PPM_M_EVENT_SEL_SEL3                               29:24 /* RWXUF */
#define NV_PPM_M_EVENT_OP                                0x0000A514 /* RW-4R */
#define NV_PPM_M_EVENT_OP_FUNC                                 15:0 /* RWXUF */
#define NV_PPM_M_EVENT_OP_DSEL0                               16:16 /* RWXUF */
#define NV_PPM_M_EVENT_OP_DSEL1                               17:17 /* RWXUF */
#define NV_PPM_M_SAMPLE_SEL                              0x0000A518 /* RW-4R */
#define NV_PPM_M_SAMPLE_SEL_SEL0                                5:0 /* RWXUF */
#define NV_PPM_M_SAMPLE_SEL_SEL1                               13:8 /* RWXUF */
#define NV_PPM_M_SAMPLE_SEL_SEL2                              21:16 /* RWXUF */
#define NV_PPM_M_SAMPLE_SEL_SEL3                              29:24 /* RWXUF */
#define NV_PPM_M_SAMPLE_OP                               0x0000A51C /* RW-4R */
#define NV_PPM_M_SAMPLE_OP_FUNC                                15:0 /* RWXUF */
#define NV_PPM_M_SAMPLE_OP_DSEL0                              16:16 /* RWXUF */
#define NV_PPM_M_SAMPLE_OP_DSEL1                              17:17 /* RWXUF */
#define NV_PPM_M_SETFLAG_SEL                             0x0000A520 /* RW-4R */
#define NV_PPM_M_SETFLAG_SEL_SEL0                               5:0 /* RWXUF */
#define NV_PPM_M_SETFLAG_SEL_SEL1                              13:8 /* RWXUF */
#define NV_PPM_M_SETFLAG_SEL_SEL2                             21:16 /* RWXUF */
#define NV_PPM_M_SETFLAG_SEL_SEL3                             29:24 /* RWXUF */
#define NV_PPM_M_SETFLAG_OP                              0x0000A524 /* RW-4R */
#define NV_PPM_M_SETFLAG_OP_FUNC                               15:0 /* RWXUF */
#define NV_PPM_M_SETFLAG_OP_DSEL0                             16:16 /* RWXUF */
#define NV_PPM_M_SETFLAG_OP_DSEL1                             17:17 /* RWXUF */
#define NV_PPM_M_CLRFLAG_SEL                             0x0000A528 /* RW-4R */
#define NV_PPM_M_CLRFLAG_SEL_SEL0                               5:0 /* RWXUF */
#define NV_PPM_M_CLRFLAG_SEL_SEL1                              13:8 /* RWXUF */
#define NV_PPM_M_CLRFLAG_SEL_SEL2                             21:16 /* RWXUF */
#define NV_PPM_M_CLRFLAG_SEL_SEL3                             29:24 /* RWXUF */
#define NV_PPM_M_CLRFLAG_OP                              0x0000A52C /* RW-4R */
#define NV_PPM_M_CLRFLAG_OP_FUNC                               15:0 /* RWXUF */
#define NV_PPM_M_CLRFLAG_OP_DSEL0                             16:16 /* RWXUF */
#define NV_PPM_M_CLRFLAG_OP_DSEL1                             17:17 /* RWXUF */
#define NV_PPM_M_ELAPSED_0                               0x0000A700 /* RR-4R */
#define NV_PPM_M_ELAPSED_0_VAL                                 31:0 /* RR-UF */
#define NV_PPM_M_ELAPSED_1                               0x0000A704 /* RR-4R */
#define NV_PPM_M_ELAPSED_1_VAL                                  7:0 /* RR-UF */
#define NV_PPM_M_CYCLECNT_0                              0x0000A708 /* RR-4R */
#define NV_PPM_M_CYCLECNT_0_VAL                                31:0 /* RR-UF */
#define NV_PPM_M_CYCLECNT_1                              0x0000A70C /* RR-4R */
#define NV_PPM_M_CYCLECNT_1_VAL                                 7:0 /* RR-UF */
#define NV_PPM_M_EVENTCNT_0                              0x0000A710 /* RR-4R */
#define NV_PPM_M_EVENTCNT_0_VAL                                31:0 /* RR-UF */
#define NV_PPM_M_EVENTCNT_1                              0x0000A714 /* RR-4R */
#define NV_PPM_M_EVENTCNT_1_VAL                                 7:0 /* RR-UF */
#define NV_PPM_M_THRESHCNT_0                             0x0000A718 /* RR-4R */
#define NV_PPM_M_THRESHCNT_0_VAL                               31:0 /* RR-UF */
#define NV_PPM_M_THRESHCNT_1                             0x0000A71C /* RR-4R */
#define NV_PPM_M_THRESHCNT_1_VAL                                7:0 /* RR-UF */
#define NV_PPM_M_TRIGGERCNT                              0x0000A720 /* RW-4R */
#define NV_PPM_M_TRIGGERCNT_VAL                                31:0 /* RWXUF */
#define NV_PPM_M_SAMPLECNT                               0x0000A724 /* RW-4R */
#define NV_PPM_M_SAMPLECNT_VAL                                 31:0 /* RWXUF */
#define NV_PPM_M_THRESHOLD_0                             0x0000A728 /* RW-4R */
#define NV_PPM_M_THRESHOLD_0_VAL                               31:0 /* RWXUF */
#define NV_PPM_M_THRESHOLD_1                             0x0000A72C /* RW-4R */
#define NV_PPM_M_THRESHOLD_1_VAL                                7:0 /* RWXUF */
#define NV_PPM_NV_WATCH0                                 0x0000A430 /* RR-4R */
#define NV_PPM_NV_WATCH0_GR_XBAR2FE_PIXCOUNT_REPORT_REQ_NV     0: 0 /* RR-UF */
#define NV_PPM_NV_WATCH0_GR_PROP2CBUF_READY3                   1: 1 /* RR-UF */
#define NV_PPM_NV_WATCH0_GR_PROP2CBUF_READY2                   2: 2 /* RR-UF */
#define NV_PPM_NV_WATCH0_GR_PROP2CBUF_READY1                   3: 3 /* RR-UF */
#define NV_PPM_NV_WATCH0_GR_PROP2CBUF_READY0                   4: 4 /* RR-UF */
#define NV_PPM_NV_WATCH0_GR_PROP2CBUF_STALL                    5: 5 /* RR-UF */
#define NV_PPM_NV_WATCH0_GR_FEFLUSHACTIVE                      6: 6 /* RR-UF */
#define NV_PPM_NV_WATCH0_GR_BACKEND_IDLE                       7: 7 /* RR-UF */
#define NV_PPM_NV_WATCH0_GR_PROP2FE_SEMAPHORE_RELEASE_REQ      8: 8 /* RR-UF */
#define NV_PPM_NV_WATCH0_GR_PROP2R2D_BUSY                      9: 9 /* RR-UF */
#define NV_PPM_NV_WATCH0_GR_PROP2CMB_READY                    10:10 /* RR-UF */
#define NV_PPM_NV_WATCH0_GR_CMB2PROP_VALID                    11:11 /* RR-UF */
#define NV_PPM_NV_WATCH0_GR_CMB2RSTR_VALID                    12:12 /* RR-UF */
#define NV_PPM_NV_WATCH0_GR_RECIRC_CYCLE                      13:13 /* RR-UF */
#define NV_PPM_NV_WATCH0_GR_CMB2SHDBE_BUSY                    14:14 /* RR-UF */
#define NV_PPM_NV_WATCH0_GR_SHDBE2SHD_VALID                   15:15 /* RR-UF */
#define NV_PPM_NV_WATCH0_GR_SHDBE2TEX_BUSY                    16:16 /* RR-UF */
#define NV_PPM_NV_WATCH0_GR_SHDBE2CMB_VALID                   17:17 /* RR-UF */
#define NV_PPM_NV_WATCH0_GR_TFAB_TPB_BUSY                     18:18 /* RR-UF */
#define NV_PPM_NV_WATCH0_GR_TFAB_TPA_BUSY                     19:19 /* RR-UF */
#define NV_PPM_NV_WATCH0_GR_TC2FB_P3_STALL                    20:20 /* RR-UF */
#define NV_PPM_NV_WATCH0_GR_TC2FB_P2_STALL                    21:21 /* RR-UF */
#define NV_PPM_NV_WATCH0_GR_TC2FB_P1_STALL                    22:22 /* RR-UF */
#define NV_PPM_NV_WATCH0_GR_TC2FB_P0_STALL                    23:23 /* RR-UF */
#define NV_PPM_NV_WATCH0_GR_TCDMA2FB_STALL                    24:24 /* RR-UF */
#define NV_PPM_NV_WATCH0_GR_DXP_UNALIGN_XFER                  25:25 /* RR-UF */
#define NV_PPM_NV_WATCH0_GR_DXP_DXT_XFER                      26:26 /* RR-UF */
#define NV_PPM_NV_WATCH0_GR_DXP_PAL_XFER                      27:27 /* RR-UF */
#define NV_PPM_NV_WATCH0_GR_DXP_PAL_LOAD                      28:28 /* RR-UF */
#define NV_PPM_NV_WATCH0_GR_DXP_XFER1                         29:29 /* RR-UF */
#define NV_PPM_NV_WATCH0_GR_DXP_XFER0                         30:30 /* RR-UF */
#define NV_PPM_NV_WATCH0_GR_TPB_STATUS                        31:31 /* RR-UF */
#define NV_PPM_NV_WATCH1                                 0x0000A434 /* RR-4R */
#define NV_PPM_NV_WATCH1_GR_TPB_RBFR_FULL                      0: 0 /* RR-UF */
#define NV_PPM_NV_WATCH1_GR_TPB_INUSE_STALL                    1: 1 /* RR-UF */
#define NV_PPM_NV_WATCH1_GR_TPB_XBFR_STALL                     2: 2 /* RR-UF */
#define NV_PPM_NV_WATCH1_GR_TPA_STATUS                         3: 3 /* RR-UF */
#define NV_PPM_NV_WATCH1_GR_TPA_RBFR_FULL                      4: 4 /* RR-UF */
#define NV_PPM_NV_WATCH1_GR_TPA_INUSE_STALL                    5: 5 /* RR-UF */
#define NV_PPM_NV_WATCH1_GR_TPA_XBFR_STALL                     6: 6 /* RR-UF */
#define NV_PPM_NV_WATCH1_GR_M_TPB_SYNC_BUSY                    7: 7 /* RR-UF */
#define NV_PPM_NV_WATCH1_GR_TPB_M_SYNC_VALID                   8: 8 /* RR-UF */
#define NV_PPM_NV_WATCH1_GR_M_TPA_SYNC_BUSY                    9: 9 /* RR-UF */
#define NV_PPM_NV_WATCH1_GR_TPA_M_SYNC_VALID                  10:10 /* RR-UF */
#define NV_PPM_NV_WATCH1_GR_M_TPB_BUSY                        11:11 /* RR-UF */
#define NV_PPM_NV_WATCH1_GR_TPB_M_VALID                       12:12 /* RR-UF */
#define NV_PPM_NV_WATCH1_GR_M_TPA_BUSY                        13:13 /* RR-UF */
#define NV_PPM_NV_WATCH1_GR_TPA_M_VALID                       14:14 /* RR-UF */
#define NV_PPM_NV_WATCH1_GR_TPB_TMAB_BUSY                     15:15 /* RR-UF */
#define NV_PPM_NV_WATCH1_GR_TMAB_TPB_VALID                    16:16 /* RR-UF */
#define NV_PPM_NV_WATCH1_GR_TPA_TMAB_BUSY                     17:17 /* RR-UF */
#define NV_PPM_NV_WATCH1_GR_TMAB_TPA_VALID                    18:18 /* RR-UF */
#define NV_PPM_NV_WATCH1_GR_TEX2SHD_BUSY                      19:19 /* RR-UF */
#define NV_PPM_NV_WATCH1_GR_TEX2SHDBE_VALID                   20:20 /* RR-UF */
#define NV_PPM_NV_WATCH1_GR_CACHE_IDLE                        21:21 /* RR-UF */
#define NV_PPM_NV_WATCH1_GR_RESERVED0                         22:22 /* RR-UF */
#define NV_PPM_NV_WATCH1_GR_RESERVED1                         23:23 /* RR-UF */
#define NV_PPM_NV_WATCH1_GR_RESERVED2                         24:24 /* RR-UF */
#define NV_PPM_NV_WATCH1_GR_RESERVED3                         25:25 /* RR-UF */
#define NV_PPM_NV_WATCH1_GR_SHD2SHDBE_BUSY                    26:26 /* RR-UF */
#define NV_PPM_NV_WATCH1_GR_SHD2SHDBE_VALID                   27:27 /* RR-UF */
#define NV_PPM_NV_WATCH1_GR_SHD_IDLE                          28:28 /* RR-UF */
#define NV_PPM_NV_WATCH1_GR_SP3_BUSY                          29:29 /* RR-UF */
#define NV_PPM_NV_WATCH1_GR_SP2_BUSY                          30:30 /* RR-UF */
#define NV_PPM_NV_WATCH1_GR_SP1_BUSY                          31:31 /* RR-UF */
#define NV_PPM_NV_WATCH2                                 0x0000A438 /* RR-4R */
#define NV_PPM_NV_WATCH2_GR_SP0_BUSY                           0: 0 /* RR-UF */
#define NV_PPM_NV_WATCH2_GR_SHD2TEX_VALID                      1: 1 /* RR-UF */
#define NV_PPM_NV_WATCH2_GR_SHD2RSTR_BUSY                      2: 2 /* RR-UF */
#define NV_PPM_NV_WATCH2_GR_SHD2CAS_BUSY                       3: 3 /* RR-UF */
#define NV_PPM_NV_WATCH2_GR_CAS2SHD_LAST                       4: 4 /* RR-UF */
#define NV_PPM_NV_WATCH2_GR_CAS2SHD_VALID                      5: 5 /* RR-UF */
#define NV_PPM_NV_WATCH2_GR_CASIDLE                            6: 6 /* RR-UF */
#define NV_PPM_NV_WATCH2_GR_CAS2STP_BUSY                       7: 7 /* RR-UF */
#define NV_PPM_NV_WATCH2_GR_CAS2VTX_BUSY                       8: 8 /* RR-UF */
#define NV_PPM_NV_WATCH2_GR_R2D2PROP_OUTPUT_REQ                9: 9 /* RR-UF */
#define NV_PPM_NV_WATCH2_GR_R2D2PROP_OUTPUT_NOP               10:10 /* RR-UF */
#define NV_PPM_NV_WATCH2_GR_RSTR2D_IDLE                       11:11 /* RR-UF */
#define NV_PPM_NV_WATCH2_GR_R2D2TEX_IM_RIGHT_DV               12:12 /* RR-UF */
#define NV_PPM_NV_WATCH2_GR_R2D2TEX_IM_LEFT_DV                13:13 /* RR-UF */
#define NV_PPM_NV_WATCH2_GR_R2D2TEX_IM_NEWLINE                14:14 /* RR-UF */
#define NV_PPM_NV_WATCH2_GR_R2D2FE_RSTR2D_BUSY                15:15 /* RR-UF */
#define NV_PPM_NV_WATCH2_GR_R2D2PM_FE_REQ                     16:16 /* RR-UF */
#define NV_PPM_NV_WATCH2_GR_RSTR2PROP_ZCULL_COMPRESSED        17:17 /* RR-UF */
#define NV_PPM_NV_WATCH2_GR_RSTR2PROP_ZCULL_VALID             18:18 /* RR-UF */
#define NV_PPM_NV_WATCH2_GR_RSTR2SHD_EOPRIM                   19:19 /* RR-UF */
#define NV_PPM_NV_WATCH2_GR_RSTR2SHD_VALID                    20:20 /* RR-UF */
#define NV_PPM_NV_WATCH2_GR_FRSTR2CULL_READY                  21:21 /* RR-UF */
#define NV_PPM_NV_WATCH2_GR_PIXCNT_0                          22:22 /* RR-UF */
#define NV_PPM_NV_WATCH2_GR_PIXCNT_1                          23:23 /* RR-UF */
#define NV_PPM_NV_WATCH2_GR_PIXCNT_2                          24:24 /* RR-UF */
#define NV_PPM_NV_WATCH2_GR_FINE_EDGE_EVAL                    25:25 /* RR-UF */
#define NV_PPM_NV_WATCH2_GR_FINE_ALIASED                      26:26 /* RR-UF */
#define NV_PPM_NV_WATCH2_GR_ZOCL2FB_REQ                       27:27 /* RR-UF */
#define NV_PPM_NV_WATCH2_GR_CULL2PM_ZCULL3                    28:28 /* RR-UF */
#define NV_PPM_NV_WATCH2_GR_CULL2PM_ZCULL2                    29:29 /* RR-UF */
#define NV_PPM_NV_WATCH2_GR_CULL2PM_ZCULL1                    30:30 /* RR-UF */
#define NV_PPM_NV_WATCH2_GR_CULL2FRSTR_ZST_COMPRESS           31:31 /* RR-UF */
#define NV_PPM_NV_WATCH3                                 0x0000A43C /* RR-4R */
#define NV_PPM_NV_WATCH3_GR_CULL2FRSTR_DV                      0: 0 /* RR-UF */
#define NV_PPM_NV_WATCH3_GR_CULL2FRSTR_NULLZ                   1: 1 /* RR-UF */
#define NV_PPM_NV_WATCH3_GR_CULL2CRSTR_READY                   2: 2 /* RR-UF */
#define NV_PPM_NV_WATCH3_GR_CRSTR2CULL_VALID                   3: 3 /* RR-UF */
#define NV_PPM_NV_WATCH3_GR_RSTR2PM_SEARCH_MODE                4: 4 /* RR-UF */
#define NV_PPM_NV_WATCH3_GR_RSTR2STP_READY                     5: 5 /* RR-UF */
#define NV_PPM_NV_WATCH3_GR_STP2PM_STP_IDLE                    6: 6 /* RR-UF */
#define NV_PPM_NV_WATCH3_GR_STP2VTX_BUSY                       7: 7 /* RR-UF */
#define NV_PPM_NV_WATCH3_GR_STP2RSTR_VALID                     8: 8 /* RR-UF */
#define NV_PPM_NV_WATCH3_GR_STP2RSTR_DO_SWATHS                 9: 9 /* RR-UF */
#define NV_PPM_NV_WATCH3_GR_STP2CAS_VALID                     10:10 /* RR-UF */
#define NV_PPM_NV_WATCH3_GR_STP2PM_START_PRIM                 11:11 /* RR-UF */
#define NV_PPM_NV_WATCH3_GR_STP2PM_POLYMODE                   12:12 /* RR-UF */
#define NV_PPM_NV_WATCH3_GR_STP2PM_DO_POINT                   13:13 /* RR-UF */
#define NV_PPM_NV_WATCH3_GR_STP2PM_DO_LINE                    14:14 /* RR-UF */
#define NV_PPM_NV_WATCH3_GR_STP2PM_CULL_REASON_0              15:15 /* RR-UF */
#define NV_PPM_NV_WATCH3_GR_STP2PM_CULL_REASON_1              16:16 /* RR-UF */
#define NV_PPM_NV_WATCH3_GR_STP2PM_CULL_REASON_2              17:17 /* RR-UF */
#define NV_PPM_NV_WATCH3_GR_VTX2STP_STATEVALID                18:18 /* RR-UF */
#define NV_PPM_NV_WATCH3_GR_VTX2STP_PRIMVALID                 19:19 /* RR-UF */
#define NV_PPM_NV_WATCH3_GR_VTX2CAS_VALID                     20:20 /* RR-UF */
#define NV_PPM_NV_WATCH3_GR_VTXIDLE                           21:21 /* RR-UF */
#define NV_PPM_NV_WATCH3_GR_VTX2XF_LAUNCHBUSY                 22:22 /* RR-UF */
#define NV_PPM_NV_WATCH3_GR_VTX2FD_BYPBUSY                    23:23 /* RR-UF */
#define NV_PPM_NV_WATCH3_GR_XF_FETCH_BUSY                     24:24 /* RR-UF */
#define NV_PPM_NV_WATCH3_GR_XF_ISSUE_VALID                    25:25 /* RR-UF */
#define NV_PPM_NV_WATCH3_GR_XF_IDLE                           26:26 /* RR-UF */
#define NV_PPM_NV_WATCH3_GR_XF2VTX_LAUNCH_VALID               27:27 /* RR-UF */
#define NV_PPM_NV_WATCH3_GR_XF2VTX_LAST                       28:28 /* RR-UF */
#define NV_PPM_NV_WATCH3_GR_XF2VTX_VALID                      29:29 /* RR-UF */
#define NV_PPM_NV_WATCH3_GR_XF2FD_BUSY                        30:30 /* RR-UF */
#define NV_PPM_NV_WATCH3_GR_FD_PROCESS1                       31:31 /* RR-UF */
#define NV_PPM_NV_WATCH4                                 0x0000A630 /* RR-4R */
#define NV_PPM_NV_WATCH4_GR_FD_PROCESS0                        0: 0 /* RR-UF */
#define NV_PPM_NV_WATCH4_GR_FD2XF_LAUNCH                       1: 1 /* RR-UF */
#define NV_PPM_NV_WATCH4_GR_FD2XF_INIT                         2: 2 /* RR-UF */
#define NV_PPM_NV_WATCH4_GR_FD2XF_ACTIVE                       3: 3 /* RR-UF */
#define NV_PPM_NV_WATCH4_GR_FD2XF_VALID                        4: 4 /* RR-UF */
#define NV_PPM_NV_WATCH4_GR_FD2VTX_BYPVALID                    5: 5 /* RR-UF */
#define NV_PPM_NV_WATCH4_GR_FD2IDX_BYPBUSY                     6: 6 /* RR-UF */
#define NV_PPM_NV_WATCH4_GR_FD2IDX_BUSY                        7: 7 /* RR-UF */
#define NV_PPM_NV_WATCH4_GR_IDX2FD_LAUNCH                      8: 8 /* RR-UF */
#define NV_PPM_NV_WATCH4_GR_IDX2FD_BYPVALID                    9: 9 /* RR-UF */
#define NV_PPM_NV_WATCH4_GR_IDX2FD_VALID                      10:10 /* RR-UF */
#define NV_PPM_NV_WATCH4_GR_INTALIGN                          11:11 /* RR-UF */
#define NV_PPM_NV_WATCH4_GR_COMPOVFL                          12:12 /* RR-UF */
#define NV_PPM_NV_WATCH4_GR_PTEBUSY                           13:13 /* RR-UF */
#define NV_PPM_NV_WATCH4_GR_BYPASSFULL                        14:14 /* RR-UF */
#define NV_PPM_NV_WATCH4_GR_IDXIDLE                           15:15 /* RR-UF */
#define NV_PPM_NV_WATCH4_GR_SLOTHIT                           16:16 /* RR-UF */
#define NV_PPM_NV_WATCH4_GR_SLOTMISS                          17:17 /* RR-UF */
#define NV_PPM_NV_WATCH4_GR_CACHEHIT                          18:18 /* RR-UF */
#define NV_PPM_NV_WATCH4_GR_CACHEMISS                         19:19 /* RR-UF */
#define NV_PPM_NV_WATCH4_GR_CACHEUSAGEWAIT                    20:20 /* RR-UF */
#define NV_PPM_NV_WATCH4_GR_CACHEUSAGEFULL                    21:21 /* RR-UF */
#define NV_PPM_NV_WATCH4_GR_PTEUSAGEWAIT                      22:22 /* RR-UF */
#define NV_PPM_NV_WATCH4_GR_IDX2PMI_VALID                     23:23 /* RR-UF */
#define NV_PPM_NV_WATCH4_GR_IDX2DEC_BUSY                      24:24 /* RR-UF */
#define NV_PPM_NV_WATCH4_GR_IDX2FBI_INST                      25:25 /* RR-UF */
#define NV_PPM_NV_WATCH4_GR_IDX2FBI_VALID                     26:26 /* RR-UF */
#define NV_PPM_NV_WATCH4_GR_FBI2IDX_BUSY                      27:27 /* RR-UF */
#define NV_PPM_NV_WATCH4_GR_FE2PM_FBI_REQ_BURST               28:28 /* RR-UF */
#define NV_PPM_NV_WATCH4_GR_FE2PM_FBI_REQ                     29:29 /* RR-UF */
#define NV_PPM_NV_WATCH4_GR_FE2PM_FBI_RD                      30:30 /* RR-UF */
#define NV_PPM_NV_WATCH4_GR_FE2PM_FBI_INST                    31:31 /* RR-UF */
#define NV_PPM_NV_WATCH5                                 0x0000A634 /* RR-4R */
#define NV_PPM_NV_WATCH5_GR_FE2XBAR_PIXELCOUNT_REPORT_BUSY     0: 0 /* RR-UF */
#define NV_PPM_NV_WATCH5_GR_FE2PROP_SEMAPHORE_RELEASE_BUSY     1: 1 /* RR-UF */
#define NV_PPM_NV_WATCH5_GR_FE2PM_CACHE_INVALIDATE             2: 2 /* RR-UF */
#define NV_PPM_NV_WATCH5_GR_NVINTR_GR                          3: 3 /* RR-UF */
#define NV_PPM_NV_WATCH5_GR_WAIT_GR_IDLE                       4: 4 /* RR-UF */
#define NV_PPM_NV_WATCH5_GR_GR_IDLE                            5: 5 /* RR-UF */
#define NV_PPM_NV_WATCH5_GR_DEC2IDX_VALID_0                    6: 6 /* RR-UF */
#define NV_PPM_NV_WATCH5_GR_DEC2IDX_VALID_1                    7: 7 /* RR-UF */
#define NV_PPM_NV_WATCH5_GR_FF_GR_RDY                          8: 8 /* RR-UF */
#define NV_PPM_NV_WATCH5_GR_FF_GR_B2B                          9: 9 /* RR-UF */
#define NV_PPM_NV_WATCH5_TOP_VSYNC1                           10:10 /* RR-UF */
#define NV_PPM_NV_WATCH5_TOP_FB2ZOCL_BUSY                     11:11 /* RR-UF */
#define NV_PPM_NV_WATCH5_TOP_CBUF_COALESCE_0                  12:12 /* RR-UF */
#define NV_PPM_NV_WATCH5_TOP_CBUF_COALESCE_1                  13:13 /* RR-UF */
#define NV_PPM_NV_WATCH5_TOP_CBUF_COALESCE_2                  14:14 /* RR-UF */
#define NV_PPM_NV_WATCH5_TOP_CBUF_BUSY3                       15:15 /* RR-UF */
#define NV_PPM_NV_WATCH5_TOP_CBUF_BUSY2                       16:16 /* RR-UF */
#define NV_PPM_NV_WATCH5_TOP_CBUF_BUSY1                       17:17 /* RR-UF */
#define NV_PPM_NV_WATCH5_TOP_CBUF_BUSY0                       18:18 /* RR-UF */
#define NV_PPM_NV_WATCH5_TOP_PMI2IDX_BUSY                     19:19 /* RR-UF */
#define NV_PPM_NV_WATCH5_TOP_FF_GR_MDV                        20:20 /* RR-UF */
#define NV_PPM_NV_WATCH5_TOP_FF_DHV                           21:21 /* RR-UF */
#define NV_PPM_NV_WATCH5_TOP_FF_CHSW                          22:22 /* RR-UF */
#define NV_PPM_NV_WATCH5_TOP_BR2PM_DEVSEL_                    23:23 /* RR-UF */
#define NV_PPM_NV_WATCH5_TOP_BR2PM_STOP_                      24:24 /* RR-UF */
#define NV_PPM_NV_WATCH5_TOP_BR2PM_TRDY_                      25:25 /* RR-UF */
#define NV_PPM_NV_WATCH5_TOP_BR2PM_IRDY_                      26:26 /* RR-UF */
#define NV_PPM_NV_WATCH5_TOP_BR2PM_FRAME_                     27:27 /* RR-UF */
#define NV_PPM_M_WATCH0                                  0x0000A530 /* RR-4R */
#define NV_PPM_M_WATCH0_GR_XBARSTATE0_0                        0: 0 /* RR-UF */
#define NV_PPM_M_WATCH0_GR_XBARSTATE0_1                        1: 1 /* RR-UF */
#define NV_PPM_M_WATCH0_GR_XBARSTATE0_2                        2: 2 /* RR-UF */
#define NV_PPM_M_WATCH0_GR_XBARSTATE1_0                        3: 3 /* RR-UF */
#define NV_PPM_M_WATCH0_GR_XBARSTATE1_1                        4: 4 /* RR-UF */
#define NV_PPM_M_WATCH0_GR_XBARSTATE1_2                        5: 5 /* RR-UF */
#define NV_PPM_M_WATCH0_GR_XBARSTATE2_0                        6: 6 /* RR-UF */
#define NV_PPM_M_WATCH0_GR_XBARSTATE2_1                        7: 7 /* RR-UF */
#define NV_PPM_M_WATCH0_GR_XBARSTATE2_2                        8: 8 /* RR-UF */
#define NV_PPM_M_WATCH0_GR_XBARSTATE3_0                        9: 9 /* RR-UF */
#define NV_PPM_M_WATCH0_GR_XBARSTATE3_1                       10:10 /* RR-UF */
#define NV_PPM_M_WATCH0_GR_XBARSTATE3_2                       11:11 /* RR-UF */
#define NV_PPM_M_WATCH0_GR_XBAR2ZROP_BUSY0                    12:12 /* RR-UF */
#define NV_PPM_M_WATCH0_GR_XBAR2ZROP_BUSY1                    13:13 /* RR-UF */
#define NV_PPM_M_WATCH0_GR_XBAR2ZROP_BUSY2                    14:14 /* RR-UF */
#define NV_PPM_M_WATCH0_GR_XBAR2ZROP_BUSY3                    15:15 /* RR-UF */
#define NV_PPM_M_WATCH0_GR_XBAR2ZROP_IDLE                     16:16 /* RR-UF */
#define NV_PPM_M_WATCH0_TOP_FB2ZRD_P0_BUSY                    17:17 /* RR-UF */
#define NV_PPM_M_WATCH0_TOP_FB2ZWR_P0_BUSY                    18:18 /* RR-UF */
#define NV_PPM_M_WATCH0_TOP_FB2CRD_P0_BUSY                    19:19 /* RR-UF */
#define NV_PPM_M_WATCH0_TOP_FB2CWR_P0_BUSY                    20:20 /* RR-UF */
#define NV_PPM_M_WATCH0_TOP_FB2ZRD_P0_QEMPTY                  21:21 /* RR-UF */
#define NV_PPM_M_WATCH0_TOP_FB2ZWR_P0_QEMPTY                  22:22 /* RR-UF */
#define NV_PPM_M_WATCH0_TOP_FB2CRD_P0_QEMPTY                  23:23 /* RR-UF */
#define NV_PPM_M_WATCH0_TOP_FB2CWR_P0_QEMPTY                  24:24 /* RR-UF */
#define NV_PPM_M_WATCH0_TOP_P0_FARB_MC_BUSY_D                 25:25 /* RR-UF */
#define NV_PPM_M_WATCH0_TOP_P0_FARB_A1_ANY_GNT_VALID          26:26 /* RR-UF */
#define NV_PPM_M_WATCH0_TOP_P0_FARB_A1_NX_CONT_GNT            27:27 /* RR-UF */
#define NV_PPM_M_WATCH0_TOP_P0_FARB_A1_GNT_BANK_0             28:28 /* RR-UF */
#define NV_PPM_M_WATCH0_TOP_P0_FARB_A1_GNT_BANK_1             29:29 /* RR-UF */
#define NV_PPM_M_WATCH0_TOP_P0_FARB_A1_ZW_GNT_COMPRESS        30:30 /* RR-UF */
#define NV_PPM_M_WATCH0_TOP_P0_FARB_A1_GNT_CLOSE_PAGE         31:31 /* RR-UF */
#define NV_PPM_M_WATCH1                                  0x0000A534 /* RR-4R */
#define NV_PPM_M_WATCH1_TOP_P0_FARB_A1_GNT_RD                  0: 0 /* RR-UF */
#define NV_PPM_M_WATCH1_TOP_CWR2FB_REQ                         1: 1 /* RR-UF */
#define NV_PPM_M_WATCH1_TOP_CROP2PM_BURST_STALL_RD             2: 2 /* RR-UF */
#define NV_PPM_M_WATCH1_TOP_CROP2PM_SB_STALL                   3: 3 /* RR-UF */
#define NV_PPM_M_WATCH1_TOP_CROP2PM_HASH_STALL                 4: 4 /* RR-UF */
#define NV_PPM_M_WATCH1_TOP_CROP2XBAR_BUSY                     5: 5 /* RR-UF */
#define NV_PPM_M_WATCH1_TOP_ZWR2FB_REQ                         6: 6 /* RR-UF */
#define NV_PPM_M_WATCH1_TOP_ZROP2XBAR_REQ                      7: 7 /* RR-UF */
#define NV_PPM_M_WATCH1_TOP_ZWR_WAIT4CSUBPKT                   8: 8 /* RR-UF */
#define NV_PPM_M_WATCH1_TOP_ZWR2ZRD_ZSUBPKT_BUSY               9: 9 /* RR-UF */
#define NV_PPM_M_WATCH1_TOP_ZWR2ZRD_PKT_BUSY                  10:10 /* RR-UF */
#define NV_PPM_M_WATCH1_TOP_ZROP2CBUF_CSUBPKT_BUSY            11:11 /* RR-UF */
#define NV_PPM_M_WATCH1_TOP_ZRD2FB_REQ                        12:12 /* RR-UF */
#define NV_PPM_M_WATCH1_TOP_ILOCK_STALL                       13:13 /* RR-UF */
#define NV_PPM_M_WATCH1_TOP_TAG_STALL                         14:14 /* RR-UF */
#define NV_PPM_M_WATCH1_TOP_TOSS_CULL                         15:15 /* RR-UF */
#define NV_PPM_M_WATCH1_TOP_ZRD2ZWR_ZSUBPKT_RDY               16:16 /* RR-UF */
#define NV_PPM_M_WATCH1_TOP_ZRD2ZWR_PKT_RDY                   17:17 /* RR-UF */
#define NV_PPM_M_WATCH1_TOP_ZROP2CBUF_ZSUBPKT_BUSY            18:18 /* RR-UF */
#define NV_PPM_M_WATCH1_TOP_ZROP2CBUF_PKT_BUSY                19:19 /* RR-UF */
#define NV_PPM_M_WATCH1_TOP_CBUF2ZROP_ZSUBPKT_RDY             20:20 /* RR-UF */
#define NV_PPM_M_WATCH1_TOP_CBUF2ZROP_CSUBPKT_RDY             21:21 /* RR-UF */
#define NV_PPM_M_WATCH1_TOP_CBUF2ZROP_PKT_RDY                 22:22 /* RR-UF */
#define NV_PPM_NV_WATCH5_ZEROBIT                              28:28 /* RR-UF */
#define NV_PPM_NV_WATCH5_FE2PM_TRIGGER                        29:29 /* RR-UF */
#define NV_PPM_NV_WATCH5_MFLAG_SYNC                           30:30 /* RR-UF */
#define NV_PPM_NV_WATCH5_NVFLAG                               31:31 /* RR-UF */
#define NV_PPM_M_WATCH1_ZEROBIT                               28:28 /* RR-UF */
#define NV_PPM_M_WATCH1_FE2PM_TRIGGER                         29:29 /* RR-UF */
#define NV_PPM_M_WATCH1_MFLAG                                 30:30 /* RR-UF */
#define NV_PPM_M_WATCH1_NVFLAG_SYNC                           31:31 /* RR-UF */
#define NV_PPM_CONTROL                                   0x0000A73C /* RW-4R */
#define NV_PPM_CONTROL_M_ADDTOEVENT                             0:0 /* RWXUF */
#define NV_PPM_CONTROL_M_ADDTOEVENT_INCR                 0x00000000 /* RWI-V */
#define NV_PPM_CONTROL_M_ADDTOEVENT_ADDTRIG1             0x00000001 /* RWI-V */
#define NV_PPM_CONTROL_DRIVE_OUT                                1:1 /* RWXUF */
#define NV_PPM_CONTROL_DRIVE_OUT_NORMAL                  0x00000000 /* RWI-V */
#define NV_PPM_CONTROL_DRIVE_OUT_OBSERVE                 0x00000001 /* RWI-V */
#define NV_PPM_CONTROL_NV_ADDTOEVENT                            2:2 /* RWXUF */
#define NV_PPM_CONTROL_NV_ADDTOEVENT_INCR                0x00000000 /* RWI-V */
#define NV_PPM_CONTROL_NV_ADDTOEVENT_ADDTRIG1            0x00000001 /* RWI-V */
#define NV_PPM_CONTROL_NV_STATE                                 4:3 /* RRIUF */
#define NV_PPM_CONTROL_M_STATE                                  6:5 /* RRIUF */
#define NV_PPM_CONTROL_STATE_IDLE                        0x00000000 /* RRI-V */
#define NV_PPM_CONTROL_STATE_WAIT_TRIG0                  0x00000001 /* RRI-V */
#define NV_PPM_CONTROL_STATE_WAIT_TRIG1                  0x00000002 /* RRI-V */
#define NV_PPM_CONTROL_STATE_CAPTURE                     0x00000003 /* RRI-V */
#define NV_PPM_CONTROL_NV_CLEAR_EVENT_ONCE                      8:8 /* RWXUF */
#define NV_PPM_CONTROL_NV_CLEAR_EVENT_ONCE_DISABLE       0x00000000 /* RWI-V */
#define NV_PPM_CONTROL_NV_CLEAR_EVENT_ONCE_ENABLE        0x00000001 /* RWI-V */
#define NV_PPM_CONTROL_M_CLEAR_EVENT_ONCE                       9:9 /* RWXUF */
#define NV_PPM_CONTROL_M_CLEAR_EVENT_ONCE_DISABLE        0x00000000 /* RWI-V */
#define NV_PPM_CONTROL_M_CLEAR_EVENT_ONCE_ENABLE         0x00000001 /* RWI-V */
/* dev_ram.ref */
#define NV_PNVM                               0x3FFFFFFF:0x20000000 /* RW--M */
#define NV_PNVM_DATA032(i)                       (0x20000000+(i)*4) /* RW-4A */
#define NV_PNVM_DATA032__SIZE_1                            33554432 /*       */
#define NV_PNVM_DATA032_VALUE                                  31:0 /* RWXUF */
#define NV_PNVM_DATA016(i)           (0x20000000+((i)/3)*4+((i)%3)) /* RW-2A */
#define NV_PNVM_DATA016__SIZE_1                           67108864  /*       */
#define NV_PNVM_DATA016_VALUE                                  15:0 /* RWXUF */
#define NV_PNVM_DATA008(i)                         (0x20000000+(i)) /* RW-1A */
#define NV_PNVM_DATA008__SIZE_1                           134217728 /*       */
#define NV_PNVM_DATA008_VALUE                                   7:0 /* RWXUF */
/* dev_ram.ref */
#define NV_PDFB                               0x3FFFFFFF:0x20000000 /* RW--D */
/* dev_ram.ref */
#define NV_PRAMIN                             0x007FFFFF:0x00700000 /* RW--M */
#define NV_PRAMIN_CONTEXT_0                   ( 0*32+31):( 0*32+ 0) /*       */
#define NV_PRAMIN_CONTEXT_1                   ( 1*32+31):( 1*32+ 0) /*       */
#define NV_PRAMIN_CONTEXT_2                   ( 2*32+31):( 2*32+ 0) /*       */
#define NV_PRAMIN_CONTEXT_3                   ( 3*32+31):( 3*32+ 0) /*       */
#define NV_PRAMIN_RAMHT_0                     0x00710FFF:0x00710000 /* RW--M */
#define NV_PRAMIN_RAMFC_0                     0x007113FF:0x00711000 /* RW--M */
#define NV_PRAMIN_RAMRO_0                     0x007115FF:0x00711400 /* RW--M */
#define NV_PRAMIN_CTX_0(i)                    (0x00700000 + (i)*16) /* RW--M */
#define NV_PRAMIN_CTX_0__SIZE_1                             0x10000 /*       */
#define NV_PRAMIN_CTX_0_NVCLASS                                11:0 /* RWXUF */
#define NV_PRAMIN_CTX_0_NVCLASS_NV_ROOT                  0x00000000 /* RWD-V */
#define NV_PRAMIN_CTX_0_NVCLASS_012                      0x00000012 /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_017                      0x00000017 /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_018                      0x00000018 /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_019                      0x00000019 /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_01C                      0x0000001C /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_01D                      0x0000001D /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_01E                      0x0000001E /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_01F                      0x0000001F /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_021                      0x00000021 /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_030                      0x00000030 /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_036                      0x00000036 /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_037                      0x00000037 /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_038                      0x00000038 /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_039                      0x00000039 /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_042                      0x00000042 /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_043                      0x00000043 /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_044                      0x00000044 /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_048                      0x00000048 /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_04A                      0x0000004A /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_04B                      0x0000004B /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_052                      0x00000052 /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_053                      0x00000053 /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_054                      0x00000054 /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_055                      0x00000055 /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_057                      0x00000057 /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_058                      0x00000058 /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_059                      0x00000059 /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_05A                      0x0000005A /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_05B                      0x0000005B /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_05C                      0x0000005C /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_05E                      0x0000005E /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_05F                      0x0000005F /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_060                      0x00000060 /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_061                      0x00000061 /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_064                      0x00000064 /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_065                      0x00000065 /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_066                      0x00000066 /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_067                      0x00000067 /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_072                      0x00000072 /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_076                      0x00000076 /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_077                      0x00000077 /* RWC-V */
#define NV_PRAMIN_CTX_0_CHROMA_KEY                            12:12 /* RWXUF */
#define NV_PRAMIN_CTX_0_CHROMA_KEY_DISABLE               0x00000000 /* RWD-V */
#define NV_PRAMIN_CTX_0_CHROMA_KEY_ENABLE                0x00000001 /* RW--V */
#define NV_PRAMIN_CTX_0_USER_CLIP                             13:13 /* RWXUF */
#define NV_PRAMIN_CTX_0_USER_CLIP_DISABLE                0x00000000 /* RWD-V */
#define NV_PRAMIN_CTX_0_USER_CLIP_ENABLE                 0x00000001 /* RW--V */
#define NV_PRAMIN_CTX_0_SWIZZLE                               14:14 /* RWXUF */
#define NV_PRAMIN_CTX_0_SWIZZLE_DISABLE                  0x00000000 /* RWD-V */
#define NV_PRAMIN_CTX_0_SWIZZLE_ENABLE                   0x00000001 /* RW--V */
#define NV_PRAMIN_CTX_0_PATCH_CONFIG                          17:15 /* RWXUF */
#define NV_PRAMIN_CTX_0_PATCH_CONFIG_SRCCOPY_AND         0x00000000 /* RWD-V */
#define NV_PRAMIN_CTX_0_PATCH_CONFIG_ROP_AND             0x00000001 /* RW--V */
#define NV_PRAMIN_CTX_0_PATCH_CONFIG_BLEND_AND           0x00000002 /* RW--V */
#define NV_PRAMIN_CTX_0_PATCH_CONFIG_SRCCOPY             0x00000003 /* RW--V */
#define NV_PRAMIN_CTX_0_PATCH_CONFIG_SRCCOPY_PRE         0x00000004 /* RW--V */
#define NV_PRAMIN_CTX_0_PATCH_CONFIG_BLEND_PRE           0x00000005 /* RW--V */
#define NV_PRAMIN_CTX_0_SYNCHRONIZE                           18:18 /* RWXUF */
#define NV_PRAMIN_CTX_0_SYNCHRONIZE_DISABLE              0x00000000 /* RWD-V */
#define NV_PRAMIN_CTX_0_SYNCHRONIZE_ENABLE               0x00000001 /* RW--V */
#define NV_PRAMIN_CTX_0_ENDIAN_MODE                           19:19 /* RWXUF */
#define NV_PRAMIN_CTX_0_ENDIAN_MODE_LITTLE               0x00000000 /* RWD-V */
#define NV_PRAMIN_CTX_0_ENDIAN_MODE_BIG                  0x00000001 /* RW--V */
#define NV_PRAMIN_CTX_0_DITHER_MODE                           21:20 /* RWXUF */
#define NV_PRAMIN_CTX_0_DITHER_MODE_COMPATIBILITY        0x00000000 /* RWD-V */
#define NV_PRAMIN_CTX_0_DITHER_MODE_DITHER               0x00000001 /* RW--V */
#define NV_PRAMIN_CTX_0_DITHER_MODE_TRUNCATE             0x00000002 /* RW--V */
#define NV_PRAMIN_CTX_0_DITHER_MODE_SUBTRACT_TRUNCATE    0x00000003 /* RW--V */
#define NV_PRAMIN_CTX_0_SINGLE_STEP                           23:23 /* RWXUF */
#define NV_PRAMIN_CTX_0_SINGLE_STEP_DISABLE              0x00000000 /* RWD-V */
#define NV_PRAMIN_CTX_0_SINGLE_STEP_ENABLE               0x00000001 /* RW--V */
#define NV_PRAMIN_CTX_0_PATCH_STATUS                          24:24 /* RWXUF */
#define NV_PRAMIN_CTX_0_PATCH_STATUS_INVALID             0x00000000 /* RWD-V */
#define NV_PRAMIN_CTX_0_PATCH_STATUS_VALID               0x00000001 /* RW--V */
#define NV_PRAMIN_CTX_0_CONTEXT_SURFACE0                      25:25 /* RWXUF */
#define NV_PRAMIN_CTX_0_CONTEXT_SURFACE0_INVALID         0x00000000 /* RWD-V */
#define NV_PRAMIN_CTX_0_CONTEXT_SURFACE0_VALID           0x00000001 /* RW--V */
#define NV_PRAMIN_CTX_0_CONTEXT_SURFACE1                      26:26 /* RWXUF */
#define NV_PRAMIN_CTX_0_CONTEXT_SURFACE1_INVALID         0x00000000 /* RWD-V */
#define NV_PRAMIN_CTX_0_CONTEXT_SURFACE1_VALID           0x00000001 /* RW--V */
#define NV_PRAMIN_CTX_0_CONTEXT_PATTERN                       27:27 /* RWXUF */
#define NV_PRAMIN_CTX_0_CONTEXT_PATTERN_INVALID          0x00000000 /* RWD-V */
#define NV_PRAMIN_CTX_0_CONTEXT_PATTERN_VALID            0x00000001 /* RW--V */
#define NV_PRAMIN_CTX_0_CONTEXT_ROP                           28:28 /* RWXUF */
#define NV_PRAMIN_CTX_0_CONTEXT_ROP_INVALID              0x00000000 /* RWD-V */
#define NV_PRAMIN_CTX_0_CONTEXT_ROP_VALID                0x00000001 /* RW--V */
#define NV_PRAMIN_CTX_0_CONTEXT_BETA1                         29:29 /* RWXUF */
#define NV_PRAMIN_CTX_0_CONTEXT_BETA1_INVALID            0x00000000 /* RWD-V */
#define NV_PRAMIN_CTX_0_CONTEXT_BETA1_VALID              0x00000001 /* RW--V */
#define NV_PRAMIN_CTX_0_CONTEXT_BETA4                         30:30 /* RWXUF */
#define NV_PRAMIN_CTX_0_CONTEXT_BETA4_INVALID            0x00000000 /* RWD-V */
#define NV_PRAMIN_CTX_0_CONTEXT_BETA4_VALID              0x00000001 /* RW--V */
#define NV_PRAMIN_CTX_1(i)                    (0x00700004 + (i)*16) /* RW--M */
#define NV_PRAMIN_CTX_1__SIZE_1                             0x10000 /*       */
#define NV_PRAMIN_CTX_1_MONO_FORMAT                             7:0 /* RWXUF */
#define NV_PRAMIN_CTX_1_MONO_FORMAT_INVALID                    0x00 /* RWD-V */
#define NV_PRAMIN_CTX_1_MONO_FORMAT_CGA6_M1                    0x01 /* RW--V */
#define NV_PRAMIN_CTX_1_MONO_FORMAT_LE_M1                      0x02 /* RW--V */
#define NV_PRAMIN_CTX_1_MONO_FORMAT_018                        0x01 /* RWC-V */
#define NV_PRAMIN_CTX_1_MONO_FORMAT_044                        0x01 /* RWC-V */
#define NV_PRAMIN_CTX_1_MONO_FORMAT_04A                        0x01 /* RWC-V */
#define NV_PRAMIN_CTX_1_MONO_FORMAT_04B                        0x01 /* RWC-V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT                           15:8 /* RWXUF */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_INVALID                   0x00 /* RWD-V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_LE_Y8                     0x01 /* RW--V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_LE_X16A8Y8                0x02 /* RW--V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_LE_X24Y8                  0x03 /* RW--V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_LE_A1R5G5B5               0x06 /* RW--V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_LE_X1R5G5B5               0x07 /* RW--V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_LE_X16A1R5G5B5            0x08 /* RW--V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_LE_X17R5G5B5              0x09 /* RW--V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_LE_R5G6B5                 0x0A /* RW--V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_LE_A16R5G6B5              0x0B /* RW--V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_LE_X16R5G6B5              0x0C /* RW--V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_LE_A8R8G8B8               0x0D /* RW--V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_LE_X8R8G8B8               0x0E /* RW--V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_LE_Y16                    0x0F /* RW--V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_LE_A16Y16                 0x10 /* RW--V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_LE_X16Y16                 0x11 /* RW--V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_LE_V8YB8U8YA8             0x12 /* RW--V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_LE_YB8V8YA8U8             0x13 /* RW--V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_LE_Y32                    0x14 /* RW--V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_017                 0x00000002 /* RWC-V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_018                 0x00000002 /* RWC-V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_01C                 0x00000003 /* RWC-V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_01D                 0x00000003 /* RWC-V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_01E                 0x00000003 /* RWC-V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_021                 0x00000001 /* RWC-V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_036                 0x00000001 /* RWC-V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_037                 0x00000006 /* RWC-V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_044                 0x0000000B /* RWC-V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_04A                 0x0000000C /* RWC-V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_04B                 0x00000003 /* RWC-V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_057                 0x0000000B /* RWC-V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_05C                 0x0000000C /* RWC-V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_05D                 0x0000000C /* RWC-V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_05E                 0x0000000C /* RWC-V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_060                 0x0000000A /* RWC-V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_061                 0x0000000A /* RWC-V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_076                 0x0000000A /* RWC-V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_077                 0x00000006 /* RWC-V */
#define NV_PRAMIN_CTX_1_NOTIFY_INSTANCE                       31:16 /* RWXUF */
#define NV_PRAMIN_CTX_1_NOTIFY_INSTANCE_INVALID              0x0000 /* RWD-V */
#define NV_PRAMIN_CTX_2(i)                    (0x00700008 + (i)*16) /* RW--M */
#define NV_PRAMIN_CTX_2__SIZE_1                             0x10000 /*       */
#define NV_PRAMIN_CTX_2_DMA_0_INSTANCE                         15:0 /* RWXUF */
#define NV_PRAMIN_CTX_2_DMA_0_INSTANCE_INVALID               0x0000 /* RWD-V */
#define NV_PRAMIN_CTX_2_DMA_1_INSTANCE                        31:16 /* RWXUF */
#define NV_PRAMIN_CTX_2_DMA_1_INSTANCE_INVALID               0x0000 /* RWD-V */
#define NV_PRAMIN_CTX_3(i)                    (0x0070000C + (i)*16) /* RW--M */
#define NV_PRAMIN_CTX_3__SIZE_1                             0x10000 /*       */
#define NV_PRAMIN_CTX_3_METHOD_TRAPS                           31:0 /* RWXUF */
#define NV_PRAMIN_CTX_3_METHOD_TRAPS_DISABLED            0x00000000 /* RWD-V */
#define NV_PRAMIN_CTX_4(i)                    (0x00700010 + (i)*16) /* RW--M */
#define NV_PRAMIN_DATA032(i)                     (0x00700000+(i)*4) /* RW-4A */
#define NV_PRAMIN_DATA032__SIZE_1                            524288 /*       */
#define NV_PRAMIN_DATA032_VALUE                                31:0 /* RWXUF */
#define NV_PRAMIN_DATA016(i)         (0x00700000+((i)/3)*4+((i)%3)) /* RW-2A */
#define NV_PRAMIN_DATA016__SIZE_1                           1572864 /*       */
#define NV_PRAMIN_DATA016_VALUE                                15:0 /* RWXUF */
#define NV_PRAMIN_DATA008(i)                       (0x00700000+(i)) /* RW-1A */
#define NV_PRAMIN_DATA008__SIZE_1                           2097152 /*       */
#define NV_PRAMIN_DATA008_VALUE                                 7:0 /* RWXUF */
/* dev_ram.ref */
#define NV_FIFO_DMA_OPCODE                    ( 0*32+31):( 0*32+29) /* RWXUF */
#define NV_FIFO_DMA_OPCODE_METHOD                        0x00000000 /* ----V */
#define NV_FIFO_DMA_OPCODE_JUMP                          0x00000001 /* ----V */
#define NV_FIFO_DMA_OPCODE_NONINC_METHOD                 0x00000002 /* ----V */
#define NV_FIFO_DMA_OPCODE2                   ( 0*32+ 1):( 0*32+ 0) /* RWXUF */
#define NV_FIFO_DMA_OPCODE2_NONE                         0x00000000 /* ----V */
#define NV_FIFO_DMA_OPCODE2_JUMP_LONG                    0x00000001 /* ----V */
#define NV_FIFO_DMA_OPCODE2_CALL                         0x00000002 /* ----V */
#define NV_FIFO_DMA_OPCODE                    ( 0*32+31):( 0*32+29) /* RWXUF */
#define NV_FIFO_DMA_OPCODE_METHOD                        0x00000000 /* ----V */
#define NV_FIFO_DMA_OPCODE_NONINC_METHOD                 0x00000002 /* ----V */
#define NV_FIFO_DMA_METHOD_COUNT              ( 0*32+28):( 0*32+18) /* RWXUF */
#define NV_FIFO_DMA_OPCODE3                   ( 0*32+17):( 0*32+16) /* RWXUF */
#define NV_FIFO_DMA_OPCODE3_NONE                         0x00000000 /* ----V */
#define NV_FIFO_DMA_METHOD_SUBCHANNEL         ( 0*32+15):( 0*32+13) /* RWXUF */
#define NV_FIFO_DMA_METHOD_ADDRESS            ( 0*32+12):( 0*32+ 2) /* RWXUF */
#define NV_FIFO_DMA_OPCODE2                   ( 0*32+ 1):( 0*32+ 0) /* RWXUF */
#define NV_FIFO_DMA_OPCODE2_NONE                         0x00000000 /* ----V */
#define NV_FIFO_DMA_DATA                      ( 1*32+31):( 1*32+ 0) /* RWXUF */
#define NV_FIFO_DMA_NOP                                  0x00000000 /* RWXUF */
#define NV_FIFO_DMA_OPCODE                    ( 0*32+31):( 0*32+29) /* RWXUF */
#define NV_FIFO_DMA_OPCODE_JUMP                          0x00000001 /* ----V */
#define NV_FIFO_DMA_OPCODE2                   ( 0*32+ 1):( 0*32+ 0) /* RWXUF */
#define NV_FIFO_DMA_OPCODE2_NONE                         0x00000000 /* ----V */
#define NV_FIFO_DMA_JUMP_OFFSET               ( 0*32+28):( 0*32+ 2) /* RWXUF */
#define NV_FIFO_DMA_OPCODE2                   ( 0*32+ 1):( 0*32+ 0) /* RWXUF */
#define NV_FIFO_DMA_OPCODE2_JUMP_LONG                    0x00000001 /* ----V */
#define NV_FIFO_DMA_JUMP_LONG_OFFSET          ( 0*32+31):( 0*32+ 2) /* RWXUF */
#define NV_FIFO_DMA_OPCODE2                   ( 0*32+ 1):( 0*32+ 0) /* RWXUF */
#define NV_FIFO_DMA_OPCODE2_CALL                         0x00000002 /* ----V */
#define NV_FIFO_DMA_CALL_OFFSET               ( 0*32+31):( 0*32+ 2) /* RWXUF */
#define NV_FIFO_DMA_RETURN                               0x00020000 /* RWXUF */
#define NV_FIFO_DMA_OPCODE3                   ( 0*32+17):( 0*32+16) /* RWXUF */
#define NV_FIFO_DMA_OPCODE3_RETURN                       0x00000002 /* ----V */
/* dev_ram.ref */
#define NV_PRAM                               0x00006FFF:0x00006000 /* RW--D */
/* dev_fb.ref */
#define NV_PFB_DEBUG_0                                   0x00100080 /* RW-4R */
#define NV_PFB_DEBUG_0_MRS                                      4:4 /* RWIVF */
#define NV_PFB_DEBUG_0_MRS_256                           0x00000000 /* RWI-V */
#define NV_PFB_DEBUG_0_MRS_2                             0x00000001 /* RW--V */
#define NV_PFB_DEBUG_0_XTRA_SETTLE_FA                         24:24 /* RWIVF */
#define NV_PFB_DEBUG_0_XTRA_SETTLE_FA_DISABLED           0x00000000 /* RWI-V */
#define NV_PFB_DEBUG_0_XTRA_SETTLE_FA_ENABLED            0x00000001 /* RW--V */
#define NV_PFB_DEBUG_0_XTRA_SETTLE_RR                         25:25 /* RWIVF */
#define NV_PFB_DEBUG_0_XTRA_SETTLE_RR_DISABLED           0x00000000 /* RWI-V */
#define NV_PFB_DEBUG_0_XTRA_SETTLE_RR_ENABLED            0x00000001 /* RW--V */
#define NV_PFB_DEBUG_0_BURST_INTERRUPT                        27:27 /* RWIVF */
#define NV_PFB_DEBUG_0_BURST_INTERRUPT_ENABLED           0x00000000 /* RWI-V */
#define NV_PFB_DEBUG_0_BURST_INTERRUPT_DISABLED          0x00000001 /* RW--V */
#define NV_PFB_RDI_INDEX                                 0x001000F0 /* RW-4R */
#define NV_PFB_RDI_INDEX_ADDRESS                               12:6 /* RWIVF */
#define NV_PFB_RDI_INDEX_ADDRESS_0                       0x00000000 /* RWI-V */
#define NV_PFB_RDI_INDEX_SELECT                               24:16 /* RWIVF */
#define NV_PFB_RDI_INDEX_SELECT_0                        0x00000000 /* RWI-V */
#define NV_PFB_RDI_INDEX_SELECT_FA_LPQ_P0                0x00000100 /* RW--V */
#define NV_PFB_RDI_INDEX_SELECT_FA_LPQ_P1                0x00000101 /* RW--V */
#define NV_PFB_RDI_INDEX_SELECT_FA_LPQ_P2                0x00000102 /* RW--V */
#define NV_PFB_RDI_INDEX_SELECT_FA_LPQ_P3                0x00000103 /* RW--V */
#define NV_PFB_RDI_INDEX_SELECT_FA_ZOQ_P0                0x00000104 /* RW--V */
#define NV_PFB_RDI_INDEX_SELECT_FA_ZOQ_P1                0x00000105 /* RW--V */
#define NV_PFB_RDI_INDEX_SELECT_FA_ZOQ_P2                0x00000106 /* RW--V */
#define NV_PFB_RDI_INDEX_SELECT_FA_ZOQ_P3                0x00000107 /* RW--V */
#define NV_PFB_RDI_INDEX_SELECT_FA_T0Q_P0                0x00000108 /* RW--V */
#define NV_PFB_RDI_INDEX_SELECT_FA_T0Q_P1                0x00000109 /* RW--V */
#define NV_PFB_RDI_INDEX_SELECT_FA_T0Q_P2                0x0000010A /* RW--V */
#define NV_PFB_RDI_INDEX_SELECT_FA_T0Q_P3                0x0000010B /* RW--V */
#define NV_PFB_RDI_INDEX_SELECT_FA_T1Q_P0                0x0000010C /* RW--V */
#define NV_PFB_RDI_INDEX_SELECT_FA_T1Q_P1                0x0000010D /* RW--V */
#define NV_PFB_RDI_INDEX_SELECT_FA_T1Q_P2                0x0000010E /* RW--V */
#define NV_PFB_RDI_INDEX_SELECT_FA_T1Q_P3                0x0000010F /* RW--V */
#define NV_PFB_RDI_INDEX_SELECT_FA_ZRQ_P0                0x00000110 /* RW--V */
#define NV_PFB_RDI_INDEX_SELECT_FA_ZRQ_P1                0x00000111 /* RW--V */
#define NV_PFB_RDI_INDEX_SELECT_FA_ZRQ_P2                0x00000112 /* RW--V */
#define NV_PFB_RDI_INDEX_SELECT_FA_ZRQ_P3                0x00000113 /* RW--V */
#define NV_PFB_RDI_INDEX_SELECT_FA_ZWQ_P0                0x00000114 /* RW--V */
#define NV_PFB_RDI_INDEX_SELECT_FA_ZWQ_P1                0x00000115 /* RW--V */
#define NV_PFB_RDI_INDEX_SELECT_FA_ZWQ_P2                0x00000116 /* RW--V */
#define NV_PFB_RDI_INDEX_SELECT_FA_ZWQ_P3                0x00000117 /* RW--V */
#define NV_PFB_RDI_INDEX_SELECT_FA_CRQ_P0                0x00000118 /* RW--V */
#define NV_PFB_RDI_INDEX_SELECT_FA_CRQ_P1                0x00000119 /* RW--V */
#define NV_PFB_RDI_INDEX_SELECT_FA_CRQ_P2                0x0000011A /* RW--V */
#define NV_PFB_RDI_INDEX_SELECT_FA_CRQ_P3                0x0000011B /* RW--V */
#define NV_PFB_RDI_INDEX_SELECT_FA_CWQ_P0                0x0000011C /* RW--V */
#define NV_PFB_RDI_INDEX_SELECT_FA_CWQ_P1                0x0000011D /* RW--V */
#define NV_PFB_RDI_INDEX_SELECT_FA_CWQ_P2                0x0000011E /* RW--V */
#define NV_PFB_RDI_INDEX_SELECT_FA_CWQ_P3                0x0000011F /* RW--V */
#define NV_PFB_RDI_INDEX_SELECT_HP_HPQ_P0                0x00000120 /* RW--V */
#define NV_PFB_RDI_INDEX_SELECT_HP_HPQ_P1                0x00000121 /* RW--V */
#define NV_PFB_RDI_INDEX_SELECT_HP_HPQ_P2                0x00000122 /* RW--V */
#define NV_PFB_RDI_INDEX_SELECT_HP_HPQ_P3                0x00000123 /* RW--V */
#define NV_PFB_RDI_INDEX_SELECT_VRC                      0x0000012F /* RW--V */
#define NV_PFB_RDI_INDEX_SELECT_MC_ZTAG_P0               0x00000130 /* RW--V */
#define NV_PFB_RDI_INDEX_SELECT_MC_ZTAG_P1               0x00000131 /* RW--V */
#define NV_PFB_RDI_INDEX_SELECT_MC_ZTAG_P2               0x00000132 /* RW--V */
#define NV_PFB_RDI_INDEX_SELECT_MC_ZTAG_P3               0x00000133 /* RW--V */
#define NV_PFB_RDI_INDEX_SELECT_MC_CMDQ_P0               0x00000138 /* RW--V */
#define NV_PFB_RDI_INDEX_SELECT_MC_CMDQ_P1               0x00000139 /* RW--V */
#define NV_PFB_RDI_INDEX_SELECT_MC_CMDQ_P2               0x0000013A /* RW--V */
#define NV_PFB_RDI_INDEX_SELECT_MC_CMDQ_P3               0x0000013B /* RW--V */
#define NV_PFB_RDI_INDEX_SELECT_MC_CMDQW_P0              0x0000013C /* RW--V */
#define NV_PFB_RDI_INDEX_SELECT_MC_CMDQW_P1              0x0000013D /* RW--V */
#define NV_PFB_RDI_INDEX_SELECT_MC_CMDQW_P2              0x0000013E /* RW--V */
#define NV_PFB_RDI_INDEX_SELECT_MC_CMDQW_P3              0x0000013F /* RW--V */
#define NV_PFB_RDI_INDEX_SELECT_FA_LPQW_P0               0x00000140 /* RW--V */
#define NV_PFB_RDI_INDEX_SELECT_FA_LPQW_P1               0x00000141 /* RW--V */
#define NV_PFB_RDI_INDEX_SELECT_FA_LPQW_P2               0x00000142 /* RW--V */
#define NV_PFB_RDI_INDEX_SELECT_FA_LPQW_P3               0x00000143 /* RW--V */
#define NV_PFB_RDI_INDEX_SELECT_FA_ZWQW_P0               0x00000154 /* RW--V */
#define NV_PFB_RDI_INDEX_SELECT_FA_ZWQW_P1               0x00000155 /* RW--V */
#define NV_PFB_RDI_INDEX_SELECT_FA_ZWQW_P2               0x00000156 /* RW--V */
#define NV_PFB_RDI_INDEX_SELECT_FA_ZWQW_P3               0x00000157 /* RW--V */
#define NV_PFB_RDI_INDEX_SELECT_FA_CWQW_P0               0x0000015C /* RW--V */
#define NV_PFB_RDI_INDEX_SELECT_FA_CWQW_P1               0x0000015D /* RW--V */
#define NV_PFB_RDI_INDEX_SELECT_FA_CWQW_P2               0x0000015E /* RW--V */
#define NV_PFB_RDI_INDEX_SELECT_FA_CWQW_P3               0x0000015F /* RW--V */
#define NV_PFB_RDI_INDEX_SELECT_HP_HPQW_P0               0x00000160 /* RW--V */
#define NV_PFB_RDI_INDEX_SELECT_HP_HPQW_P1               0x00000161 /* RW--V */
#define NV_PFB_RDI_INDEX_SELECT_HP_HPQW_P2               0x00000162 /* RW--V */
#define NV_PFB_RDI_INDEX_SELECT_HP_HPQW_P3               0x00000163 /* RW--V */
#define NV_PFB_RDI_INDEX_SELECT_RR_W0HP_P0               0x00000168 /* RW--V */
#define NV_PFB_RDI_INDEX_SELECT_RR_W0HP_P1               0x00000169 /* RW--V */
#define NV_PFB_RDI_INDEX_SELECT_RR_W0HP_P2               0x0000016A /* RW--V */
#define NV_PFB_RDI_INDEX_SELECT_RR_W0HP_P3               0x0000016B /* RW--V */
#define NV_PFB_RDI_INDEX_SELECT_RR_W0LP_P0               0x0000016C /* RW--V */
#define NV_PFB_RDI_INDEX_SELECT_RR_W0LP_P1               0x0000016D /* RW--V */
#define NV_PFB_RDI_INDEX_SELECT_RR_W0LP_P2               0x0000016E /* RW--V */
#define NV_PFB_RDI_INDEX_SELECT_RR_W0LP_P3               0x0000016F /* RW--V */
#define NV_PFB_RDI_INDEX_SELECT_RR_W1HP_P0               0x00000170 /* RW--V */
#define NV_PFB_RDI_INDEX_SELECT_RR_W1HP_P1               0x00000171 /* RW--V */
#define NV_PFB_RDI_INDEX_SELECT_RR_W1HP_P2               0x00000172 /* RW--V */
#define NV_PFB_RDI_INDEX_SELECT_RR_W1HP_P3               0x00000173 /* RW--V */
#define NV_PFB_RDI_INDEX_SELECT_RR_W1LP_P0               0x00000174 /* RW--V */
#define NV_PFB_RDI_INDEX_SELECT_RR_W1LP_P1               0x00000175 /* RW--V */
#define NV_PFB_RDI_INDEX_SELECT_RR_W1LP_P2               0x00000176 /* RW--V */
#define NV_PFB_RDI_INDEX_SELECT_RR_W1LP_P3               0x00000177 /* RW--V */
#define NV_PFB_RDI_INDEX_SELECT_RR_W2LP_P0               0x00000178 /* RW--V */
#define NV_PFB_RDI_INDEX_SELECT_RR_W2LP_P1               0x00000179 /* RW--V */
#define NV_PFB_RDI_INDEX_SELECT_RR_W2LP_P2               0x0000017A /* RW--V */
#define NV_PFB_RDI_INDEX_SELECT_RR_W2LP_P3               0x0000017B /* RW--V */
#define NV_PFB_RDI_INDEX_SELECT_RR_W3HP_P0               0x0000017C /* RW--V */
#define NV_PFB_RDI_INDEX_SELECT_RR_W3HP_P1               0x0000017D /* RW--V */
#define NV_PFB_RDI_INDEX_SELECT_RR_W3HP_P2               0x0000017E /* RW--V */
#define NV_PFB_RDI_INDEX_SELECT_RR_W3HP_P3               0x0000017F /* RW--V */
#define NV_PFB_RDI_DATA(i)                       (0x00100100+(i)*4) /* RW-4A */
#define NV_PFB_RDI_DATA__SIZE_1                                  16 /*       */
#define NV_PFB_RDI_DATA_FIELD                                  31:0 /* RW-VF */
#define NV_PFB_CFG0                                      0x00100200 /* RW-4R */
#define NV_PFB_CFG0_PART                                        1:0 /* RWIVF */
#define NV_PFB_CFG0_PART_1                               0x00000000 /* RW--V */
#define NV_PFB_CFG0_PART_2                               0x00000001 /* RWI-V */
#define NV_PFB_CFG0_PART_4                               0x00000003 /* RW--V */
#define NV_PFB_CFG0_PARTSENSE                                   5:4 /* RWIVF */
#define NV_PFB_CFG0_PARTSENSE_00                         0x00000000 /* RWI-V */
#define NV_PFB_CFG0_PARTSENSE_01                         0x00000001 /* RW--V */
#define NV_PFB_CFG0_PARTSENSE_10                         0x00000002 /* RW--V */
#define NV_PFB_CFG0_PARTSENSE_11                         0x00000003 /* RW--V */
#define NV_PFB_CFG0_EXTBANK                                     8:8 /* RWIVF */
#define NV_PFB_CFG0_EXTBANK_0                            0x00000000 /* RWI-V */
#define NV_PFB_CFG0_EXTBANK_1                            0x00000001 /* RW--V */
#define NV_PFB_CFG0_USE_CS_AS_ADR                             11:11 /* RWIVF */
#define NV_PFB_CFG0_USE_CS_AS_ADR_DISABLED               0x00000000 /* RWI-V */
#define NV_PFB_CFG0_USE_CS_AS_ADR_ENABLED                0x00000001 /* RW--V */
#define NV_PFB_CFG0_BURST_INT_RD2RD                           16:16 /* RWIVF */
#define NV_PFB_CFG0_BURST_INT_RD2RD_DISABLED             0x00000000 /* RW--V */
#define NV_PFB_CFG0_BURST_INT_RD2RD_ENABLED              0x00000001 /* RWI-V */
#define NV_PFB_CFG0_BURST_INT_WR2WR                           17:17 /* RWIVF */
#define NV_PFB_CFG0_BURST_INT_WR2WR_DISABLED             0x00000000 /* RW--V */
#define NV_PFB_CFG0_BURST_INT_WR2WR_ENABLED              0x00000001 /* RWI-V */
#define NV_PFB_CFG0_BURST_INT_RD2PRE                          18:18 /* RWIVF */
#define NV_PFB_CFG0_BURST_INT_RD2PRE_DISABLED            0x00000000 /* RW--V */
#define NV_PFB_CFG0_BURST_INT_RD2PRE_ENABLED             0x00000001 /* RWI-V */
#define NV_PFB_CFG0_BURST_INT_WR2PRE                          19:19 /* RWIVF */
#define NV_PFB_CFG0_BURST_INT_WR2PRE_DISABLED            0x00000000 /* RW--V */
#define NV_PFB_CFG0_BURST_INT_WR2PRE_ENABLED             0x00000001 /* RWI-V */
#define NV_PFB_CFG0_AUTO_PRE_RD                               24:24 /* RWIVF */
#define NV_PFB_CFG0_AUTO_PRE_RD_DISABLED                 0x00000000 /* RW--V */
#define NV_PFB_CFG0_AUTO_PRE_RD_ENABLED                  0x00000001 /* RWI-V */
#define NV_PFB_CFG0_AUTO_PRE_WR                               25:25 /* RWIVF */
#define NV_PFB_CFG0_AUTO_PRE_WR_DISABLED                 0x00000000 /* RW--V */
#define NV_PFB_CFG0_AUTO_PRE_WR_ENABLED                  0x00000001 /* RWI-V */
#define NV_PFB_CFG1                                      0x00100204 /* RW-4R */
#define NV_PFB_CFG1_APA                                         6:4 /* RWIVF */
#define NV_PFB_CFG1_APA_A8                               0x00000000 /* RWI-V */
#define NV_PFB_CFG1_APA_A9                               0x00000001 /* RW--V */
#define NV_PFB_CFG1_APA_A10                              0x00000002 /* RW--V */
#define NV_PFB_CFG1_APA_A11                              0x00000003 /* RW--V */
#define NV_PFB_CFG1_APA_A12                              0x00000004 /* RW--V */
#define NV_PFB_CFG1_APB                                        10:8 /* RWIVF */
#define NV_PFB_CFG1_APB_A8                               0x00000000 /* RWI-V */
#define NV_PFB_CFG1_APB_A9                               0x00000001 /* RW--V */
#define NV_PFB_CFG1_APB_A10                              0x00000002 /* RW--V */
#define NV_PFB_CFG1_APB_A11                              0x00000003 /* RW--V */
#define NV_PFB_CFG1_APB_A12                              0x00000004 /* RW--V */
#define NV_PFB_CFG1_COL                                       15:12 /* RWIVF */
#define NV_PFB_CFG1_COL_7                                0x00000007 /* RW--V */
#define NV_PFB_CFG1_COL_8                                0x00000008 /* RWI-V */
#define NV_PFB_CFG1_COL_9                                0x00000009 /* RW--V */
#define NV_PFB_CFG1_COL_10                               0x0000000A /* RW--V */
#define NV_PFB_CFG1_ROWA                                      19:16 /* RWI-F */
#define NV_PFB_CFG1_ROWA_9                               0x00000001 /* RWI-V */
#define NV_PFB_CFG1_ROWA_10                              0x00000002 /* RW--V */
#define NV_PFB_CFG1_ROWA_11                              0x00000003 /* RW--V */
#define NV_PFB_CFG1_ROWA_12                              0x00000004 /* RW--V */
#define NV_PFB_CFG1_ROWA_13                              0x00000005 /* RW--V */
#define NV_PFB_CFG1_ROWB                                      23:20 /* RWI-F */
#define NV_PFB_CFG1_ROWB_9                               0x00000001 /* RWI-V */
#define NV_PFB_CFG1_ROWB_10                              0x00000002 /* RW--V */
#define NV_PFB_CFG1_ROWB_11                              0x00000003 /* RW--V */
#define NV_PFB_CFG1_ROWB_12                              0x00000004 /* RW--V */
#define NV_PFB_CFG1_ROWB_13                              0x00000005 /* RW--V */
#define NV_PFB_CFG1_BANKA                                     24:24 /* RWI-F */
#define NV_PFB_CFG1_BANKA_1                              0x00000000 /* RWI-V */
#define NV_PFB_CFG1_BANKA_2                              0x00000001 /* RW--V */
#define NV_PFB_CFG1_BANKB                                     28:28 /* RWIVF */
#define NV_PFB_CFG1_BANKB_1                              0x00000000 /* RWI-V */
#define NV_PFB_CFG1_BANKB_2                              0x00000001 /* RW--V */
#define NV_PFB_REMAP                                     0x00100208 /* RW-4R */
#define NV_PFB_REMAP_R0_B1_SWAP                                 1:0 /* RWIVF */
#define NV_PFB_REMAP_R0_B1_SWAP_NEVER                    0x00000000 /* RWI-V */
#define NV_PFB_REMAP_R0_B1_SWAP_ALWAYS                   0x00000001 /* RW--V */
#define NV_PFB_REMAP_R0_B1_SWAP_ON_B1_XOR_MS_ROW         0x00000002 /* RW--V */
#define NV_PFB_REMAP_R1_EB_SWAP                                 5:4 /* RWIVF */
#define NV_PFB_REMAP_R1_EB_SWAP_NEVER                    0x00000000 /* RWI-V */
#define NV_PFB_REMAP_R1_EB_SWAP_ALWAYS                   0x00000001 /* RW--V */
#define NV_PFB_REMAP_R1_EB_SWAP_ON_B1_XOR_MS_ROW         0x00000002 /* RW--V */
#define NV_PFB_REMAP_ROWA                                      11:8 /* RWIVF */
#define NV_PFB_REMAP_ROWA_9                              0x00000001 /* RWI-V */
#define NV_PFB_REMAP_ROWA_10                             0x00000002 /* RW--V */
#define NV_PFB_REMAP_ROWA_11                             0x00000003 /* RW--V */
#define NV_PFB_REMAP_ROWA_12                             0x00000004 /* RW--V */
#define NV_PFB_REMAP_ROWA_13                             0x00000005 /* RW--V */
#define NV_PFB_CSTATUS                                   0x0010020C /* R--4R */
#define NV_PFB_CSTATUS_RAMAMOUNT_MS                             0:0 /* R--VF */
#define NV_PFB_CSTATUS_RAMAMOUNT_LS                           31:20 /* R--VF */
#define NV_PFB_REFCTRL                                   0x00100210 /* RW-4R */
#define NV_PFB_REFCTRL_PUT                                      6:0 /* RWI-F */
#define NV_PFB_REFCTRL_PUT_0                             0x00000000 /* RWI-V */
#define NV_PFB_REFCTRL_GET                                     14:8 /* RWI-F */
#define NV_PFB_REFCTRL_GET_0                             0x00000000 /* RWI-V */
#define NV_PFB_REFCTRL_VALID                                  31:31 /* RWI-F */
#define NV_PFB_REFCTRL_VALID_0                           0x00000000 /* RWI-V */
#define NV_PFB_REFCTRL_VALID_1                           0x00000001 /* RW--V */
#define NV_PFB_NVM                                       0x00100214 /* RW-4R */
#define NV_PFB_NVM_MODE                                         0:0 /* RWIVF */
#define NV_PFB_NVM_MODE_DISABLE                          0x00000000 /* RWI-V */
#define NV_PFB_NVM_MODE_ENABLE                           0x00000001 /* RW--V */
#define NV_PFB_NVM_LIMIT                                        7:4 /* RW-VF */
#define NV_PFB_NVM_LIMIT_64K                             0x00000000 /* RW--V */
#define NV_PFB_NVM_LIMIT_128K                            0x00000001 /* RW--V */
#define NV_PFB_NVM_LIMIT_192K                            0x00000002 /* RW--V */
#define NV_PFB_NVM_LIMIT_256K                            0x00000003 /* RW--V */
#define NV_PFB_NVM_LIMIT_320K                            0x00000004 /* RW--V */
#define NV_PFB_NVM_LIMIT_384K                            0x00000005 /* RW--V */
#define NV_PFB_NVM_LIMIT_448K                            0x00000006 /* RW--V */
#define NV_PFB_NVM_LIMIT_512K                            0x00000007 /* RW--V */
#define NV_PFB_NVM_LIMIT_576K                            0x00000008 /* RW--V */
#define NV_PFB_NVM_LIMIT_640K                            0x00000009 /* RW--V */
#define NV_PFB_NVM_LIMIT_704K                            0x0000000A /* RW--V */
#define NV_PFB_NVM_LIMIT_768K                            0x0000000B /* RW--V */
#define NV_PFB_NVM_LIMIT_832K                            0x0000000C /* RW--V */
#define NV_PFB_NVM_LIMIT_896K                            0x0000000D /* RW--V */
#define NV_PFB_NVM_LIMIT_960K                            0x0000000E /* RW--V */
#define NV_PFB_NVM_LIMIT_1024K                           0x0000000F /* RW--V */
#define NV_PFB_PIN                                       0x00100218 /* RW-4R */
#define NV_PFB_PIN_CKE                                          0:0 /* RWI-F */
#define NV_PFB_PIN_CKE_POWERDOWN                         0x00000000 /* RWI-V */
#define NV_PFB_PIN_CKE_NORMAL                            0x00000001 /* RW--V */
#define NV_PFB_PIN_DQM                                          4:4 /* RWI-F */
#define NV_PFB_PIN_DQM_NORMAL                            0x00000000 /* RW--V */
#define NV_PFB_PIN_DQM_INACTIVE                          0x00000001 /* RWI-V */
#define NV_PFB_PAD                                       0x0010021C /* RW-4R */
#define NV_PFB_PAD_CKE                                          0:0 /* RWI-F */
#define NV_PFB_PAD_CKE_TRISTATE                          0x00000000 /* RWI-V */
#define NV_PFB_PAD_CKE_NORMAL                            0x00000001 /* RW--V */
#define NV_PFB_TIMING0                                   0x00100220 /* RW-4R */
#define NV_PFB_TIMING0_RC_SKIP_LSB                              4:1 /* RWIVF */
#define NV_PFB_TIMING0_RC                                       4:0 /* RWIVF */
#define NV_PFB_TIMING0_RC_31                             0x0000001F /* RWI-V */
#define NV_PFB_TIMING0_RFC_SKIP_LSB                            12:9 /* RWIVF */
#define NV_PFB_TIMING0_RFC                                     12:8 /* RWIVF */
#define NV_PFB_TIMING0_RFC_31                            0x0000001F /* RWI-V */
#define NV_PFB_TIMING0_RAS_SKIP_LSB                           19:16 /* RWIVF */
#define NV_PFB_TIMING0_RAS                                    19:15 /* RWIVF */
#define NV_PFB_TIMING0_RAS_31                            0x0000001F /* RWI-V */
#define NV_PFB_TIMING0_RD_RCD_SKIP_LSB                        23:21 /* RWIVF */
#define NV_PFB_TIMING0_RD_RCD                                 23:20 /* RWIVF */
#define NV_PFB_TIMING0_RD_RCD_15                         0x0000000F /* RWI-V */
#define NV_PFB_TIMING0_WR_RCD_SKIP_LSB                        27:25 /* RWIVF */
#define NV_PFB_TIMING0_WR_RCD                                 27:24 /* RWIVF */
#define NV_PFB_TIMING0_WR_RCD_15                         0x0000000F /* RWI-V */
#define NV_PFB_TIMING0_RP_SKIP_LSB                            31:29 /* RWIVF */
#define NV_PFB_TIMING0_RP                                     31:28 /* RWIVF */
#define NV_PFB_TIMING0_RP_15                             0x0000000F /* RWI-V */
#define NV_PFB_TIMING1                                   0x00100224 /* RW-4R */
#define NV_PFB_TIMING1_R2W_SKIP_LSB                             7:5 /* RWIVF */
#define NV_PFB_TIMING1_R2W                                      7:4 /* RWIVF */
#define NV_PFB_TIMING1_R2W_7                             0x00000007 /* RWI-V */
#define NV_PFB_TIMING1_R2P_SKIP_LSB                            11:9 /* RWIVF */
#define NV_PFB_TIMING1_R2P                                     11:8 /* RWIVF */
#define NV_PFB_TIMING1_R2P_7                             0x00000007 /* RWI-V */
#define NV_PFB_TIMING1_REXT_SKIP_LSB                          14:13 /* RWIVF */
#define NV_PFB_TIMING1_REXT                                   14:12 /* RWIVF */
#define NV_PFB_TIMING1_REXT_1                            0x00000001 /* RW--V */
#define NV_PFB_TIMING1_REXT_2                            0x00000002 /* RWI-V */
#define NV_PFB_TIMING1_W2R_SKIP_LSB                           19:17 /* RWIVF */
#define NV_PFB_TIMING1_W2R                                    19:16 /* RWIVF */
#define NV_PFB_TIMING1_W2R_7                             0x00000007 /* RWI-V */
#define NV_PFB_TIMING1_W2P_SKIP_LSB                           23:21 /* RWIVF */
#define NV_PFB_TIMING1_W2P                                    23:20 /* RWIVF */
#define NV_PFB_TIMING1_W2P_7                             0x00000007 /* RWI-V */
#define NV_PFB_TIMING1_RRD_SKIP_LSB                           26:25 /* RWIVF */
#define NV_PFB_TIMING1_RRD                                    26:24 /* RWIVF */
#define NV_PFB_TIMING1_RRD_7                             0x00000007 /* RWI-V */
#define NV_PFB_TIMING2                                   0x00100228 /* RW-4R */
#define NV_PFB_TIMING2_REFRESH_LO                               4:0 /* C-IVF */
#define NV_PFB_TIMING2_REFRESH_LO_1F                     0x0000001F /* C-I-V */
#define NV_PFB_TIMING2_REFRESH                                 15:5 /* RW-VF */
#define NV_PFB_TIMING2_REFRESH_0                         0x00000000 /* RWI-V */
#define NV_PFB_TIMING2_QUSE                                   18:16 /* RW-VF */
#define NV_PFB_TIMING2_QUSE_MIN                          0x00000000 /* RW--V */
#define NV_PFB_TIMING2_QUSE_MAX                          0x00000007 /* RWI-V */
#define NV_PFB_TIMING2_QINC                                   23:20 /* RW-VF */
#define NV_PFB_TIMING2_QINC_MIN                          0x00000000 /* RW--V */
#define NV_PFB_TIMING2_QINC_MAX                          0x00000007 /* RWI-V */
#define NV_PFB_TIMING2_RDV                                    27:24 /* RW-VF */
#define NV_PFB_TIMING2_RDV_MIN                           0x00000002 /* RW--V */
#define NV_PFB_TIMING2_RDV_MAX                           0x00000007 /* RWI-V */
#define NV_PFB_TILE(i)                          (0x00100240+(i)*16) /* RW-4A */
#define NV_PFB_TILE__SIZE_1                                       8 /*       */
#define NV_PFB_TILE_REGION                                      0:0 /* RWIVF */
#define NV_PFB_TILE_REGION_INVALID                       0x00000000 /* RWI-V */
#define NV_PFB_TILE_REGION_VALID                         0x00000001 /* RW--V */
#define NV_PFB_TILE_BANK0_SENSE                                 1:1 /* RWIVF */
#define NV_PFB_TILE_BANK0_SENSE_0                        0x00000000 /* RWI-V */
#define NV_PFB_TILE_BANK0_SENSE_1                        0x00000001 /* RW--V */
#define NV_PFB_TILE_ADR                                       31:14 /* RW-UF */
#define NV_PFB_TLIMIT(i)                        (0x00100244+(i)*16) /* RW-4A */
#define NV_PFB_TLIMIT__SIZE_1                                     8 /*       */
#define NV_PFB_TLIMIT_ADR                                     31:14 /* RW-UF */
#define NV_PFB_TLIMIT_ADR_LO                                   13:0 /* C-IVF */
#define NV_PFB_TLIMIT_ADR_LO_3FFF                       0x000003FFF /* C-I-V */
#define NV_PFB_TSIZE(i)                         (0x00100248+(i)*16) /* RW-4A */
#define NV_PFB_TSIZE__SIZE_1                                      8 /*       */
#define NV_PFB_TSIZE_PITCH                                     15:8 /* RW-UF */
#define NV_PFB_TSIZE_PITCH_0200                          0x00000002 /* RW--V */
#define NV_PFB_TSIZE_PITCH_0300                          0x00000003 /* RW--V */
#define NV_PFB_TSIZE_PITCH_0400                          0x00000004 /* RW--V */
#define NV_PFB_TSIZE_PITCH_0500                          0x00000005 /* RW--V */
#define NV_PFB_TSIZE_PITCH_0600                          0x00000006 /* RW--V */
#define NV_PFB_TSIZE_PITCH_0700                          0x00000007 /* RW--V */
#define NV_PFB_TSIZE_PITCH_0800                          0x00000008 /* RW--V */
#define NV_PFB_TSIZE_PITCH_0A00                          0x0000000A /* RW--V */
#define NV_PFB_TSIZE_PITCH_0C00                          0x0000000C /* RW--V */
#define NV_PFB_TSIZE_PITCH_0E00                          0x0000000E /* RW--V */
#define NV_PFB_TSIZE_PITCH_1000                          0x00000010 /* RW--V */
#define NV_PFB_TSIZE_PITCH_1400                          0x00000014 /* RW--V */
#define NV_PFB_TSIZE_PITCH_1800                          0x00000018 /* RW--V */
#define NV_PFB_TSIZE_PITCH_1C00                          0x0000001C /* RW--V */
#define NV_PFB_TSIZE_PITCH_2000                          0x00000020 /* RW--V */
#define NV_PFB_TSIZE_PITCH_2800                          0x00000028 /* RW--V */
#define NV_PFB_TSIZE_PITCH_3000                          0x00000030 /* RW--V */
#define NV_PFB_TSIZE_PITCH_3800                          0x00000038 /* RW--V */
#define NV_PFB_TSIZE_PITCH_4000                          0x00000040 /* RW--V */
#define NV_PFB_TSIZE_PITCH_5000                          0x00000050 /* RW--V */
#define NV_PFB_TSIZE_PITCH_6000                          0x00000060 /* RW--V */
#define NV_PFB_TSIZE_PITCH_7000                          0x00000070 /* RW--V */
#define NV_PFB_TSIZE_PITCH_8000                          0x00000080 /* RW--V */
#define NV_PFB_TSIZE_PITCH_A000                          0x000000A0 /* RW--V */
#define NV_PFB_TSIZE_PITCH_C000                          0x000000C0 /* RW--V */
#define NV_PFB_TSIZE_PITCH_E000                          0x000000E0 /* RW--V */
#define NV_PFB_TSTATUS(i)                       (0x0010024C+(i)*16) /* R--4A */
#define NV_PFB_TSTATUS__SIZE_1                                    8 /*       */
#define NV_PFB_TSTATUS_PRIME                                    1:0 /* R--VF */
#define NV_PFB_TSTATUS_PRIME_1                           0x00000000 /* R---V */
#define NV_PFB_TSTATUS_PRIME_3                           0x00000001 /* R---V */
#define NV_PFB_TSTATUS_PRIME_5                           0x00000002 /* R---V */
#define NV_PFB_TSTATUS_PRIME_7                           0x00000003 /* R---V */
#define NV_PFB_TSTATUS_FACTOR                                   6:4 /* R--VF */
#define NV_PFB_TSTATUS_FACTOR_1                          0x00000000 /* R---V */
#define NV_PFB_TSTATUS_FACTOR_2                          0x00000001 /* R---V */
#define NV_PFB_TSTATUS_FACTOR_4                          0x00000002 /* R---V */
#define NV_PFB_TSTATUS_FACTOR_8                          0x00000003 /* R---V */
#define NV_PFB_TSTATUS_FACTOR_16                         0x00000004 /* R---V */
#define NV_PFB_TSTATUS_FACTOR_32                         0x00000005 /* R---V */
#define NV_PFB_TSTATUS_FACTOR_64                         0x00000006 /* R---V */
#define NV_PFB_TSTATUS_FACTOR_128                        0x00000007 /* R---V */
#define NV_PFB_TSTATUS_REGION                                 31:31 /* R-I-F */
#define NV_PFB_TSTATUS_REGION_INVALID                    0x00000000 /* R-I-V */
#define NV_PFB_TSTATUS_REGION_VALID                      0x00000001 /* R---V */
#define NV_PFB_MRS                                       0x001002C0 /* RW-4R */
#define NV_PFB_MRS_A0                                           0:0 /* RWI-F */
#define NV_PFB_MRS_A0_0                                  0x00000000 /* RWI-V */
#define NV_PFB_MRS_A0_1                                  0x00000001 /* RW--V */
#define NV_PFB_MRS_A1                                           1:1 /* RWI-F */
#define NV_PFB_MRS_A1_0                                  0x00000000 /* RW--V */
#define NV_PFB_MRS_A1_1                                  0x00000001 /* RWI-V */
#define NV_PFB_MRS_A2                                           2:2 /* RWI-F */
#define NV_PFB_MRS_A2_0                                  0x00000000 /* RWI-V */
#define NV_PFB_MRS_A2_1                                  0x00000001 /* RW--V */
#define NV_PFB_MRS_A3                                           3:3 /* RWI-F */
#define NV_PFB_MRS_A3_0                                  0x00000000 /* RWI-V */
#define NV_PFB_MRS_A3_1                                  0x00000001 /* RW--V */
#define NV_PFB_MRS_A4                                           4:4 /* RWI-F */
#define NV_PFB_MRS_A4_0                                  0x00000000 /* RW--V */
#define NV_PFB_MRS_A4_1                                  0x00000001 /* RWI-V */
#define NV_PFB_MRS_A5                                           5:5 /* RWI-F */
#define NV_PFB_MRS_A5_0                                  0x00000000 /* RW--V */
#define NV_PFB_MRS_A5_1                                  0x00000001 /* RWI-V */
#define NV_PFB_MRS_A6                                           6:6 /* RWI-F */
#define NV_PFB_MRS_A6_0                                  0x00000000 /* RWI-V */
#define NV_PFB_MRS_A6_1                                  0x00000001 /* RW--V */
#define NV_PFB_MRS_A7                                           7:7 /* RWI-F */
#define NV_PFB_MRS_A7_0                                  0x00000000 /* RWI-V */
#define NV_PFB_MRS_A7_1                                  0x00000001 /* RW--V */
#define NV_PFB_MRS_A8                                           8:8 /* RWI-F */
#define NV_PFB_MRS_A8_0                                  0x00000000 /* RWI-V */
#define NV_PFB_MRS_A8_1                                  0x00000001 /* RW--V */
#define NV_PFB_MRS_A9                                           9:9 /* RWI-F */
#define NV_PFB_MRS_A9_0                                  0x00000000 /* RWI-V */
#define NV_PFB_MRS_A9_1                                  0x00000001 /* RW--V */
#define NV_PFB_MRS_A10                                        10:10 /* RWI-F */
#define NV_PFB_MRS_A10_0                                 0x00000000 /* RWI-V */
#define NV_PFB_MRS_A10_1                                 0x00000001 /* RW--V */
#define NV_PFB_MRS_A11                                        11:11 /* RWI-F */
#define NV_PFB_MRS_A11_0                                 0x00000000 /* RWI-V */
#define NV_PFB_MRS_A11_1                                 0x00000001 /* RW--V */
#define NV_PFB_MRS_A12                                        12:12 /* RWI-F */
#define NV_PFB_MRS_A12_0                                 0x00000000 /* RWI-V */
#define NV_PFB_MRS_A12_1                                 0x00000001 /* RW--V */
#define NV_PFB_MRS_BA0                                        20:20 /* RWI-F */
#define NV_PFB_MRS_BA0_0                                 0x00000000 /* RWI-V */
#define NV_PFB_MRS_BA0_1                                 0x00000001 /* RW--V */
#define NV_PFB_MRS_BA1                                        21:21 /* RWI-F */
#define NV_PFB_MRS_BA1_0                                 0x00000000 /* RWI-V */
#define NV_PFB_MRS_BA1_1                                 0x00000001 /* RW--V */
#define NV_PFB_EMRS                                      0x001002C4 /* RW-4R */
#define NV_PFB_EMRS_A0                                          0:0 /* RWI-F */
#define NV_PFB_EMRS_A0_0                                 0x00000000 /* RWI-V */
#define NV_PFB_EMRS_A0_1                                 0x00000001 /* RW--V */
#define NV_PFB_EMRS_A1                                          1:1 /* RWI-F */
#define NV_PFB_EMRS_A1_0                                 0x00000000 /* RWI-V */
#define NV_PFB_EMRS_A1_1                                 0x00000001 /* RW--V */
#define NV_PFB_EMRS_A2                                          2:2 /* RWI-F */
#define NV_PFB_EMRS_A2_0                                 0x00000000 /* RWI-V */
#define NV_PFB_EMRS_A2_1                                 0x00000001 /* RW--V */
#define NV_PFB_EMRS_A3                                          3:3 /* RWI-F */
#define NV_PFB_EMRS_A3_0                                 0x00000000 /* RWI-V */
#define NV_PFB_EMRS_A3_1                                 0x00000001 /* RW--V */
#define NV_PFB_EMRS_A4                                          4:4 /* RWI-F */
#define NV_PFB_EMRS_A4_0                                 0x00000000 /* RWI-V */
#define NV_PFB_EMRS_A4_1                                 0x00000001 /* RW--V */
#define NV_PFB_EMRS_A5                                          5:5 /* RWI-F */
#define NV_PFB_EMRS_A5_0                                 0x00000000 /* RWI-V */
#define NV_PFB_EMRS_A5_1                                 0x00000001 /* RW--V */
#define NV_PFB_EMRS_A6                                          6:6 /* RWI-F */
#define NV_PFB_EMRS_A6_0                                 0x00000000 /* RWI-V */
#define NV_PFB_EMRS_A6_1                                 0x00000001 /* RW--V */
#define NV_PFB_EMRS_A7                                          7:7 /* RWI-F */
#define NV_PFB_EMRS_A7_0                                 0x00000000 /* RWI-V */
#define NV_PFB_EMRS_A7_1                                 0x00000001 /* RW--V */
#define NV_PFB_EMRS_A8                                          8:8 /* RWI-F */
#define NV_PFB_EMRS_A8_0                                 0x00000000 /* RWI-V */
#define NV_PFB_EMRS_A8_1                                 0x00000001 /* RW--V */
#define NV_PFB_EMRS_A9                                          9:9 /* RWI-F */
#define NV_PFB_EMRS_A9_0                                 0x00000000 /* RWI-V */
#define NV_PFB_EMRS_A9_1                                 0x00000001 /* RW--V */
#define NV_PFB_EMRS_A10                                       10:10 /* RWI-F */
#define NV_PFB_EMRS_A10_0                                0x00000000 /* RWI-V */
#define NV_PFB_EMRS_A10_1                                0x00000001 /* RW--V */
#define NV_PFB_EMRS_A11                                       11:11 /* RWI-F */
#define NV_PFB_EMRS_A11_0                                0x00000000 /* RWI-V */
#define NV_PFB_EMRS_A11_1                                0x00000001 /* RW--V */
#define NV_PFB_EMRS_A12                                       12:12 /* RWI-F */
#define NV_PFB_EMRS_A12_0                                0x00000000 /* RWI-V */
#define NV_PFB_EMRS_A12_1                                0x00000001 /* RW--V */
#define NV_PFB_EMRS_BA0                                       20:20 /* RWI-F */
#define NV_PFB_EMRS_BA0_0                                0x00000000 /* RW--V */
#define NV_PFB_EMRS_BA0_1                                0x00000001 /* RWI-V */
#define NV_PFB_EMRS_BA1                                       21:21 /* RWI-F */
#define NV_PFB_EMRS_BA1_0                                0x00000000 /* RWI-V */
#define NV_PFB_EMRS_BA1_1                                0x00000001 /* RW--V */
#define NV_PFB_MRS_EXT                                   0x001002C8 /* RW-4R */
#define NV_PFB_MRS_EXT_A0                                       0:0 /* RWI-F */
#define NV_PFB_MRS_EXT_A0_0                              0x00000000 /* RWI-V */
#define NV_PFB_MRS_EXT_A0_1                              0x00000001 /* RW--V */
#define NV_PFB_MRS_EXT_A1                                       1:1 /* RWI-F */
#define NV_PFB_MRS_EXT_A1_0                              0x00000000 /* RW--V */
#define NV_PFB_MRS_EXT_A1_1                              0x00000001 /* RWI-V */
#define NV_PFB_MRS_EXT_A2                                       2:2 /* RWI-F */
#define NV_PFB_MRS_EXT_A2_0                              0x00000000 /* RWI-V */
#define NV_PFB_MRS_EXT_A2_1                              0x00000001 /* RW--V */
#define NV_PFB_MRS_EXT_A3                                       3:3 /* RWI-F */
#define NV_PFB_MRS_EXT_A3_0                              0x00000000 /* RWI-V */
#define NV_PFB_MRS_EXT_A3_1                              0x00000001 /* RW--V */
#define NV_PFB_MRS_EXT_A4                                       4:4 /* RWI-F */
#define NV_PFB_MRS_EXT_A4_0                              0x00000000 /* RW--V */
#define NV_PFB_MRS_EXT_A4_1                              0x00000001 /* RWI-V */
#define NV_PFB_MRS_EXT_A5                                       5:5 /* RWI-F */
#define NV_PFB_MRS_EXT_A5_0                              0x00000000 /* RW--V */
#define NV_PFB_MRS_EXT_A5_1                              0x00000001 /* RWI-V */
#define NV_PFB_MRS_EXT_A6                                       6:6 /* RWI-F */
#define NV_PFB_MRS_EXT_A6_0                              0x00000000 /* RWI-V */
#define NV_PFB_MRS_EXT_A6_1                              0x00000001 /* RW--V */
#define NV_PFB_MRS_EXT_A7                                       7:7 /* RWI-F */
#define NV_PFB_MRS_EXT_A7_0                              0x00000000 /* RWI-V */
#define NV_PFB_MRS_EXT_A7_1                              0x00000001 /* RW--V */
#define NV_PFB_MRS_EXT_A8                                       8:8 /* RWI-F */
#define NV_PFB_MRS_EXT_A8_0                              0x00000000 /* RWI-V */
#define NV_PFB_MRS_EXT_A8_1                              0x00000001 /* RW--V */
#define NV_PFB_MRS_EXT_A9                                       9:9 /* RWI-F */
#define NV_PFB_MRS_EXT_A9_0                              0x00000000 /* RWI-V */
#define NV_PFB_MRS_EXT_A9_1                              0x00000001 /* RW--V */
#define NV_PFB_MRS_EXT_A10                                    10:10 /* RWI-F */
#define NV_PFB_MRS_EXT_A10_0                             0x00000000 /* RWI-V */
#define NV_PFB_MRS_EXT_A10_1                             0x00000001 /* RW--V */
#define NV_PFB_MRS_EXT_A11                                    11:11 /* RWI-F */
#define NV_PFB_MRS_EXT_A11_0                             0x00000000 /* RWI-V */
#define NV_PFB_MRS_EXT_A11_1                             0x00000001 /* RW--V */
#define NV_PFB_MRS_EXT_A12                                    12:12 /* RWI-F */
#define NV_PFB_MRS_EXT_A12_0                             0x00000000 /* RWI-V */
#define NV_PFB_MRS_EXT_A12_1                             0x00000001 /* RW--V */
#define NV_PFB_MRS_EXT_BA0                                    20:20 /* RWI-F */
#define NV_PFB_MRS_EXT_BA0_0                             0x00000000 /* RWI-V */
#define NV_PFB_MRS_EXT_BA0_1                             0x00000001 /* RW--V */
#define NV_PFB_MRS_EXT_BA1                                    21:21 /* RWI-F */
#define NV_PFB_MRS_EXT_BA1_0                             0x00000000 /* RWI-V */
#define NV_PFB_MRS_EXT_BA1_1                             0x00000001 /* RW--V */
#define NV_PFB_EMRS_EXT                                  0x001002CC /* RW-4R */
#define NV_PFB_EMRS_EXT_A0                                      0:0 /* RWI-F */
#define NV_PFB_EMRS_EXT_A0_0                             0x00000000 /* RWI-V */
#define NV_PFB_EMRS_EXT_A0_1                             0x00000001 /* RW--V */
#define NV_PFB_EMRS_EXT_A1                                      1:1 /* RWI-F */
#define NV_PFB_EMRS_EXT_A1_0                             0x00000000 /* RWI-V */
#define NV_PFB_EMRS_EXT_A1_1                             0x00000001 /* RW--V */
#define NV_PFB_EMRS_EXT_A2                                      2:2 /* RWI-F */
#define NV_PFB_EMRS_EXT_A2_0                             0x00000000 /* RWI-V */
#define NV_PFB_EMRS_EXT_A2_1                             0x00000001 /* RW--V */
#define NV_PFB_EMRS_EXT_A3                                      3:3 /* RWI-F */
#define NV_PFB_EMRS_EXT_A3_0                             0x00000000 /* RWI-V */
#define NV_PFB_EMRS_EXT_A3_1                             0x00000001 /* RW--V */
#define NV_PFB_EMRS_EXT_A4                                      4:4 /* RWI-F */
#define NV_PFB_EMRS_EXT_A4_0                             0x00000000 /* RWI-V */
#define NV_PFB_EMRS_EXT_A4_1                             0x00000001 /* RW--V */
#define NV_PFB_EMRS_EXT_A5                                      5:5 /* RWI-F */
#define NV_PFB_EMRS_EXT_A5_0                             0x00000000 /* RWI-V */
#define NV_PFB_EMRS_EXT_A5_1                             0x00000001 /* RW--V */
#define NV_PFB_EMRS_EXT_A6                                      6:6 /* RWI-F */
#define NV_PFB_EMRS_EXT_A6_0                             0x00000000 /* RWI-V */
#define NV_PFB_EMRS_EXT_A6_1                             0x00000001 /* RW--V */
#define NV_PFB_EMRS_EXT_A7                                      7:7 /* RWI-F */
#define NV_PFB_EMRS_EXT_A7_0                             0x00000000 /* RWI-V */
#define NV_PFB_EMRS_EXT_A7_1                             0x00000001 /* RW--V */
#define NV_PFB_EMRS_EXT_A8                                      8:8 /* RWI-F */
#define NV_PFB_EMRS_EXT_A8_0                             0x00000000 /* RWI-V */
#define NV_PFB_EMRS_EXT_A8_1                             0x00000001 /* RW--V */
#define NV_PFB_EMRS_EXT_A9                                      9:9 /* RWI-F */
#define NV_PFB_EMRS_EXT_A9_0                             0x00000000 /* RWI-V */
#define NV_PFB_EMRS_EXT_A9_1                             0x00000001 /* RW--V */
#define NV_PFB_EMRS_EXT_A10                                   10:10 /* RWI-F */
#define NV_PFB_EMRS_EXT_A10_0                            0x00000000 /* RWI-V */
#define NV_PFB_EMRS_EXT_A10_1                            0x00000001 /* RW--V */
#define NV_PFB_EMRS_EXT_A11                                   11:11 /* RWI-F */
#define NV_PFB_EMRS_EXT_A11_0                            0x00000000 /* RWI-V */
#define NV_PFB_EMRS_EXT_A11_1                            0x00000001 /* RW--V */
#define NV_PFB_EMRS_EXT_A12                                   12:12 /* RWI-F */
#define NV_PFB_EMRS_EXT_A12_0                            0x00000000 /* RWI-V */
#define NV_PFB_EMRS_EXT_A12_1                            0x00000001 /* RW--V */
#define NV_PFB_EMRS_EXT_BA0                                   20:20 /* RWI-F */
#define NV_PFB_EMRS_EXT_BA0_0                            0x00000000 /* RW--V */
#define NV_PFB_EMRS_EXT_BA0_1                            0x00000001 /* RWI-V */
#define NV_PFB_EMRS_EXT_BA1                                   21:21 /* RWI-F */
#define NV_PFB_EMRS_EXT_BA1_0                            0x00000000 /* RWI-V */
#define NV_PFB_EMRS_EXT_BA1_1                            0x00000001 /* RW--V */
#define NV_PFB_REF                                       0x001002D0 /* -W-4R */
#define NV_PFB_REF_CMD                                          0:0 /* -W--F */
#define NV_PFB_REF_CMD_REFRESH                           0x00000001 /* -W--V */
#define NV_PFB_PRE                                       0x001002D4 /* -W-4R */
#define NV_PFB_PRE_CMD                                          0:0 /* -W--F */
#define NV_PFB_PRE_CMD_PRECHARGE                         0x00000001 /* -W--V */
#define NV_PFB_ZCOMP(i)                          (0x00100300+(i)*4) /* RW-4A */
#define NV_PFB_ZCOMP__SIZE_1                                      8 /*       */
#define NV_PFB_ZCOMP_BASE_TAG_ADR                              17:6 /* RW-UF */
#define NV_PFB_ZCOMP_MODE                                     26:26 /* RWIVF */
#define NV_PFB_ZCOMP_MODE_16                             0x00000000 /* RW--V */
#define NV_PFB_ZCOMP_MODE_32                             0x00000001 /* RWI-V */
#define NV_PFB_ZCOMP_ENDIAN                                   27:27 /* RWIVF */
#define NV_PFB_ZCOMP_ENDIAN_LITTLE                       0x00000000 /* RWI-V */
#define NV_PFB_ZCOMP_ENDIAN_BIG                          0x00000001 /* RW--V */
#define NV_PFB_ZCOMP_AA                                       29:28 /* RWIVF */
#define NV_PFB_ZCOMP_AA_DISABLED                         0x00000000 /* RWI-V */
#define NV_PFB_ZCOMP_AA_CENTER_1                         0x00000001 /* RW--V */
#define NV_PFB_ZCOMP_AA_CENTER_CORNER_2                  0x00000002 /* RW--V */
#define NV_PFB_ZCOMP_AA_SQUARE_OFFSET_4                  0x00000003 /* RW--V */
#define NV_PFB_ZCOMP_EN                                       31:31 /* RWIVF */
#define NV_PFB_ZCOMP_EN_FALSE                            0x00000000 /* RWI-V */
#define NV_PFB_ZCOMP_EN_TRUE                             0x00000001 /* RW--V */
#define NV_PFB_ZCOMP_MAX_TAG                             0x00100320 /* R-X4R */
#define NV_PFB_ZCOMP_MAX_TAG_ADR_LO                             5:0 /* C-IVF */
#define NV_PFB_ZCOMP_MAX_TAG_ADR_LO_3F                   0x0000003F /* C-I-V */
#define NV_PFB_ZCOMP_MAX_TAG_ADR                               17:6 /* C-IVF */
#define NV_PFB_ZCOMP_MAX_TAG_ADR_VALUE                   0x000001FF /* C-I-V */
#define NV_PFB_ZCOMP_OFFSET                              0x00100324 /* RW-4R */
#define NV_PFB_ZCOMP_OFFSET_ADR_SPACE                           3:0 /* RW-UF */
#define NV_PFB_ZCOMP_OFFSET_ADR                               25:14 /* RW-UF */
#define NV_PFB_ZCOMP_OFFSET_EN                                31:31 /* RWIVF */
#define NV_PFB_ZCOMP_OFFSET_EN_FALSE                     0x00000000 /* RWI-V */
#define NV_PFB_ZCOMP_OFFSET_EN_TRUE                      0x00000001 /* RW--V */
#define NV_PFB_ARB_PREDIVIDER                            0x00100328 /* RW-4R */
#define NV_PFB_ARB_PREDIVIDER_DIV                               7:0 /* RW-UF */
#define NV_PFB_ARB_PREDIVIDER_DIV_20                     0x00000020 /* RWIUV */
#define NV_PFB_ARB_TIMEOUT                               0x0010032C /* RW-4R */
#define NV_PFB_ARB_TIMEOUT_LP                                   7:4 /* RW-UF */
#define NV_PFB_ARB_TIMEOUT_LP_8                          0x00000008 /* RWIUV */
#define NV_PFB_ARB_TIMEOUT_LP_DISABLE                    0x0000000F /* RW-UV */
#define NV_PFB_ARB_TIMEOUT_ZO                                  11:8 /* RW-UF */
#define NV_PFB_ARB_TIMEOUT_ZO_8                          0x00000008 /* RWIUV */
#define NV_PFB_ARB_TIMEOUT_ZO_DISABLE                    0x0000000F /* RW-UV */
#define NV_PFB_ARB_TIMEOUT_TX                                 15:12 /* RW-UF */
#define NV_PFB_ARB_TIMEOUT_TX_8                          0x00000008 /* RWIUV */
#define NV_PFB_ARB_TIMEOUT_TX_DISABLE                    0x0000000F /* RW-UV */
#define NV_PFB_ARB_TIMEOUT_ZR                                 19:16 /* RW-UF */
#define NV_PFB_ARB_TIMEOUT_ZR_8                          0x00000008 /* RWIUV */
#define NV_PFB_ARB_TIMEOUT_ZR_DISABLE                    0x0000000F /* RW-UV */
#define NV_PFB_ARB_TIMEOUT_ZW                                 23:20 /* RW-UF */
#define NV_PFB_ARB_TIMEOUT_ZW_8                          0x00000008 /* RWIUV */
#define NV_PFB_ARB_TIMEOUT_ZW_DISABLE                    0x0000000F /* RW-UV */
#define NV_PFB_ARB_TIMEOUT_CR                                 27:24 /* RW-UF */
#define NV_PFB_ARB_TIMEOUT_CR_8                          0x00000008 /* RWIUV */
#define NV_PFB_ARB_TIMEOUT_CR_DISABLE                    0x0000000F /* RW-UV */
#define NV_PFB_ARB_TIMEOUT_CW                                 31:28 /* RW-UF */
#define NV_PFB_ARB_TIMEOUT_CW_8                          0x00000008 /* RWIUV */
#define NV_PFB_ARB_TIMEOUT_CW_DISABLE                    0x0000000F /* RW-UV */
#define NV_PFB_ARB_XFER_SZ                               0x00100330 /* RW-4R */
#define NV_PFB_ARB_XFER_SZ_LP                                   7:4 /* RW-UF */
#define NV_PFB_ARB_XFER_SZ_LP_8                          0x00000004 /* RWIUV */
#define NV_PFB_ARB_XFER_SZ_LP_MIN                        0x00000000 /* RW-UV */
#define NV_PFB_ARB_XFER_SZ_LP_INF                        0x0000000F /* RW-UV */
#define NV_PFB_ARB_XFER_SZ_ZO                                  11:8 /* RW-UF */
#define NV_PFB_ARB_XFER_SZ_ZO_8                          0x00000004 /* RWIUV */
#define NV_PFB_ARB_XFER_SZ_ZO_MIN                        0x00000000 /* RW-UV */
#define NV_PFB_ARB_XFER_SZ_ZO_INF                        0x0000000F /* RW-UV */
#define NV_PFB_ARB_XFER_SZ_TX                                 15:12 /* RW-UF */
#define NV_PFB_ARB_XFER_SZ_TX_8                          0x00000004 /* RWIUV */
#define NV_PFB_ARB_XFER_SZ_TX_MIN                        0x00000000 /* RW-UV */
#define NV_PFB_ARB_XFER_SZ_TX_INF                        0x0000000F /* RW-UV */
#define NV_PFB_ARB_XFER_SZ_ZR                                 19:16 /* RW-UF */
#define NV_PFB_ARB_XFER_SZ_ZR_8                          0x00000004 /* RWIUV */
#define NV_PFB_ARB_XFER_SZ_ZR_MIN                        0x00000000 /* RW-UV */
#define NV_PFB_ARB_XFER_SZ_ZR_INF                        0x0000000F /* RW-UV */
#define NV_PFB_ARB_XFER_SZ_ZW                                 23:20 /* RW-UF */
#define NV_PFB_ARB_XFER_SZ_ZW_8                          0x00000004 /* RWIUV */
#define NV_PFB_ARB_XFER_SZ_ZW_MIN                        0x00000000 /* RW-UV */
#define NV_PFB_ARB_XFER_SZ_ZW_INF                        0x0000000F /* RW-UV */
#define NV_PFB_ARB_XFER_SZ_CR                                 27:24 /* RW-UF */
#define NV_PFB_ARB_XFER_SZ_CR_8                          0x00000004 /* RWIUV */
#define NV_PFB_ARB_XFER_SZ_CR_MIN                        0x00000000 /* RW-UV */
#define NV_PFB_ARB_XFER_SZ_CR_INF                        0x0000000F /* RW-UV */
#define NV_PFB_ARB_XFER_SZ_CW                                 31:28 /* RW-UF */
#define NV_PFB_ARB_XFER_SZ_CW_8                          0x00000004 /* RWIUV */
#define NV_PFB_ARB_XFER_SZ_CW_MIN                        0x00000000 /* RW-UV */
#define NV_PFB_ARB_XFER_SZ_CW_INF                        0x0000000F /* RW-UV */
#define NV_PFB_ARB_XFER_REM                              0x00100334 /* RW-4R */
#define NV_PFB_ARB_XFER_REM_LP                                  7:4 /* RW-UF */
#define NV_PFB_ARB_XFER_REM_LP_0                         0x00000000 /* RW-UV */
#define NV_PFB_ARB_XFER_REM_LP_4                         0x00000004 /* RWIUV */
#define NV_PFB_ARB_XFER_REM_LP_8                         0x00000008 /* RW-UV */
#define NV_PFB_ARB_XFER_REM_ZO                                 11:8 /* RW-UF */
#define NV_PFB_ARB_XFER_REM_ZO_0                         0x00000000 /* RW-UV */
#define NV_PFB_ARB_XFER_REM_ZO_4                         0x00000004 /* RWIUV */
#define NV_PFB_ARB_XFER_REM_ZO_8                         0x00000008 /* RW-UV */
#define NV_PFB_ARB_XFER_REM_TX                                15:12 /* RW-UF */
#define NV_PFB_ARB_XFER_REM_TX_0                         0x00000000 /* RW-UV */
#define NV_PFB_ARB_XFER_REM_TX_4                         0x00000004 /* RWIUV */
#define NV_PFB_ARB_XFER_REM_TX_8                         0x00000008 /* RW-UV */
#define NV_PFB_ARB_XFER_REM_ZR                                19:16 /* RW-UF */
#define NV_PFB_ARB_XFER_REM_ZR_0                         0x00000000 /* RW-UV */
#define NV_PFB_ARB_XFER_REM_ZR_4                         0x00000004 /* RWIUV */
#define NV_PFB_ARB_XFER_REM_ZR_8                         0x00000008 /* RW-UV */
#define NV_PFB_ARB_XFER_REM_ZW                                23:20 /* RW-UF */
#define NV_PFB_ARB_XFER_REM_ZW_0                         0x00000000 /* RW-UV */
#define NV_PFB_ARB_XFER_REM_ZW_4                         0x00000004 /* RWIUV */
#define NV_PFB_ARB_XFER_REM_ZW_8                         0x00000008 /* RW-UV */
#define NV_PFB_ARB_XFER_REM_CR                                27:24 /* RW-UF */
#define NV_PFB_ARB_XFER_REM_CR_0                         0x00000000 /* RW-UV */
#define NV_PFB_ARB_XFER_REM_CR_4                         0x00000004 /* RWIUV */
#define NV_PFB_ARB_XFER_REM_CR_8                         0x00000008 /* RW-UV */
#define NV_PFB_ARB_XFER_REM_CW                                31:28 /* RW-UF */
#define NV_PFB_ARB_XFER_REM_CW_0                         0x00000000 /* RW-UV */
#define NV_PFB_ARB_XFER_REM_CW_4                         0x00000004 /* RWIUV */
#define NV_PFB_ARB_XFER_REM_CW_8                         0x00000008 /* RW-UV */
#define NV_PFB_ARB_DIFF_BANK                             0x00100338 /* RW-4R */
#define NV_PFB_ARB_DIFF_BANK_LP                                 1:1 /* RW-UF */
#define NV_PFB_ARB_DIFF_BANK_LP_DISABLED                 0x00000000 /* RW-UV */
#define NV_PFB_ARB_DIFF_BANK_LP_ENABLED                  0x00000001 /* RWIUV */
#define NV_PFB_ARB_DIFF_BANK_ZO                                 2:2 /* RW-UF */
#define NV_PFB_ARB_DIFF_BANK_ZO_DISABLED                 0x00000000 /* RW-UV */
#define NV_PFB_ARB_DIFF_BANK_ZO_ENABLED                  0x00000001 /* RWIUV */
#define NV_PFB_ARB_DIFF_BANK_TX                                 3:3 /* RW-UF */
#define NV_PFB_ARB_DIFF_BANK_TX_DISABLED                 0x00000000 /* RW-UV */
#define NV_PFB_ARB_DIFF_BANK_TX_ENABLED                  0x00000001 /* RWIUV */
#define NV_PFB_ARB_DIFF_BANK_ZR                                 4:4 /* RW-UF */
#define NV_PFB_ARB_DIFF_BANK_ZR_DISABLED                 0x00000000 /* RW-UV */
#define NV_PFB_ARB_DIFF_BANK_ZR_ENABLED                  0x00000001 /* RWIUV */
#define NV_PFB_ARB_DIFF_BANK_ZW                                 5:5 /* RW-UF */
#define NV_PFB_ARB_DIFF_BANK_ZW_DISABLED                 0x00000000 /* RW-UV */
#define NV_PFB_ARB_DIFF_BANK_ZW_ENABLED                  0x00000001 /* RWIUV */
#define NV_PFB_ARB_DIFF_BANK_CR                                 6:6 /* RW-UF */
#define NV_PFB_ARB_DIFF_BANK_CR_DISABLED                 0x00000000 /* RW-UV */
#define NV_PFB_ARB_DIFF_BANK_CR_ENABLED                  0x00000001 /* RWIUV */
#define NV_PFB_ARB_DIFF_BANK_CW                                 7:7 /* RW-UF */
#define NV_PFB_ARB_DIFF_BANK_CW_DISABLED                 0x00000000 /* RW-UV */
#define NV_PFB_ARB_DIFF_BANK_CW_ENABLED                  0x00000001 /* RWIUV */
#define NV_PFB_CLOSE_PAGE0                               0x00100340 /* RW-4R */
#define NV_PFB_CLOSE_PAGE0_DIFF_ROW_HP                          0:0 /* RW-UF */
#define NV_PFB_CLOSE_PAGE0_DIFF_ROW_HP_DISABLED          0x00000000 /* RW-UV */
#define NV_PFB_CLOSE_PAGE0_DIFF_ROW_HP_ENABLED           0x00000001 /* RWIUV */
#define NV_PFB_CLOSE_PAGE0_DIFF_ROW_LP                          1:1 /* RW-UF */
#define NV_PFB_CLOSE_PAGE0_DIFF_ROW_LP_DISABLED          0x00000000 /* RW-UV */
#define NV_PFB_CLOSE_PAGE0_DIFF_ROW_LP_ENABLED           0x00000001 /* RWIUV */
#define NV_PFB_CLOSE_PAGE0_DIFF_ROW_ZO                          2:2 /* RW-UF */
#define NV_PFB_CLOSE_PAGE0_DIFF_ROW_ZO_DISABLED          0x00000000 /* RW-UV */
#define NV_PFB_CLOSE_PAGE0_DIFF_ROW_ZO_ENABLED           0x00000001 /* RWIUV */
#define NV_PFB_CLOSE_PAGE0_DIFF_ROW_TX                          3:3 /* RW-UF */
#define NV_PFB_CLOSE_PAGE0_DIFF_ROW_TX_DISABLED          0x00000000 /* RW-UV */
#define NV_PFB_CLOSE_PAGE0_DIFF_ROW_TX_ENABLED           0x00000001 /* RWIUV */
#define NV_PFB_CLOSE_PAGE0_DIFF_ROW_ZR                          4:4 /* RW-UF */
#define NV_PFB_CLOSE_PAGE0_DIFF_ROW_ZR_DISABLED          0x00000000 /* RW-UV */
#define NV_PFB_CLOSE_PAGE0_DIFF_ROW_ZR_ENABLED           0x00000001 /* RWIUV */
#define NV_PFB_CLOSE_PAGE0_DIFF_ROW_ZW                          5:5 /* RW-UF */
#define NV_PFB_CLOSE_PAGE0_DIFF_ROW_ZW_DISABLED          0x00000000 /* RW-UV */
#define NV_PFB_CLOSE_PAGE0_DIFF_ROW_ZW_ENABLED           0x00000001 /* RWIUV */
#define NV_PFB_CLOSE_PAGE0_DIFF_ROW_CR                          6:6 /* RW-UF */
#define NV_PFB_CLOSE_PAGE0_DIFF_ROW_CR_DISABLED          0x00000000 /* RW-UV */
#define NV_PFB_CLOSE_PAGE0_DIFF_ROW_CR_ENABLED           0x00000001 /* RWIUV */
#define NV_PFB_CLOSE_PAGE0_DIFF_ROW_CW                          7:7 /* RW-UF */
#define NV_PFB_CLOSE_PAGE0_DIFF_ROW_CW_DISABLED          0x00000000 /* RW-UV */
#define NV_PFB_CLOSE_PAGE0_DIFF_ROW_CW_ENABLED           0x00000001 /* RWIUV */
#define NV_PFB_CLOSE_PAGE1                               0x00100344 /* RW-4R */
#define NV_PFB_CLOSE_PAGE1_DIFF_BANK_HP                         0:0 /* RW-UF */
#define NV_PFB_CLOSE_PAGE1_DIFF_BANK_HP_DISABLED         0x00000000 /* RWIUV */
#define NV_PFB_CLOSE_PAGE1_DIFF_BANK_HP_ENABLED          0x00000001 /* RW-UV */
#define NV_PFB_CLOSE_PAGE1_DIFF_BANK_LP                         1:1 /* RW-UF */
#define NV_PFB_CLOSE_PAGE1_DIFF_BANK_LP_DISABLED         0x00000000 /* RWIUV */
#define NV_PFB_CLOSE_PAGE1_DIFF_BANK_LP_ENABLED          0x00000001 /* RW-UV */
#define NV_PFB_CLOSE_PAGE1_DIFF_BANK_ZO                         2:2 /* RW-UF */
#define NV_PFB_CLOSE_PAGE1_DIFF_BANK_ZO_DISABLED         0x00000000 /* RWIUV */
#define NV_PFB_CLOSE_PAGE1_DIFF_BANK_ZO_ENABLED          0x00000001 /* RW-UV */
#define NV_PFB_CLOSE_PAGE1_DIFF_BANK_TX                         3:3 /* RW-UF */
#define NV_PFB_CLOSE_PAGE1_DIFF_BANK_TX_DISABLED         0x00000000 /* RWIUV */
#define NV_PFB_CLOSE_PAGE1_DIFF_BANK_TX_ENABLED          0x00000001 /* RW-UV */
#define NV_PFB_CLOSE_PAGE1_DIFF_BANK_ZR                         4:4 /* RW-UF */
#define NV_PFB_CLOSE_PAGE1_DIFF_BANK_ZR_DISABLED         0x00000000 /* RWIUV */
#define NV_PFB_CLOSE_PAGE1_DIFF_BANK_ZR_ENABLED          0x00000001 /* RW-UV */
#define NV_PFB_CLOSE_PAGE1_DIFF_BANK_ZW                         5:5 /* RW-UF */
#define NV_PFB_CLOSE_PAGE1_DIFF_BANK_ZW_DISABLED         0x00000000 /* RWIUV */
#define NV_PFB_CLOSE_PAGE1_DIFF_BANK_ZW_ENABLED          0x00000001 /* RW-UV */
#define NV_PFB_CLOSE_PAGE1_DIFF_BANK_CR                         6:6 /* RW-UF */
#define NV_PFB_CLOSE_PAGE1_DIFF_BANK_CR_DISABLED         0x00000000 /* RWIUV */
#define NV_PFB_CLOSE_PAGE1_DIFF_BANK_CR_ENABLED          0x00000001 /* RW-UV */
#define NV_PFB_CLOSE_PAGE1_DIFF_BANK_CW                         7:7 /* RW-UF */
#define NV_PFB_CLOSE_PAGE1_DIFF_BANK_CW_DISABLED         0x00000000 /* RWIUV */
#define NV_PFB_CLOSE_PAGE1_DIFF_BANK_CW_ENABLED          0x00000001 /* RW-UV */
#define NV_PFB_CLOSE_PAGE2                               0x00100348 /* RW-4R */
#define NV_PFB_CLOSE_PAGE2_Q_EMPTY_HP                           0:0 /* RW-UF */
#define NV_PFB_CLOSE_PAGE2_Q_EMPTY_HP_DISABLED           0x00000000 /* RWIUV */
#define NV_PFB_CLOSE_PAGE2_Q_EMPTY_HP_ENABLED            0x00000001 /* RW-UV */
#define NV_PFB_CLOSE_PAGE2_Q_EMPTY_LP                           1:1 /* RW-UF */
#define NV_PFB_CLOSE_PAGE2_Q_EMPTY_LP_DISABLED           0x00000000 /* RWIUV */
#define NV_PFB_CLOSE_PAGE2_Q_EMPTY_LP_ENABLED            0x00000001 /* RW-UV */
#define NV_PFB_CLOSE_PAGE2_Q_EMPTY_ZO                           2:2 /* RW-UF */
#define NV_PFB_CLOSE_PAGE2_Q_EMPTY_ZO_DISABLED           0x00000000 /* RWIUV */
#define NV_PFB_CLOSE_PAGE2_Q_EMPTY_ZO_ENABLED            0x00000001 /* RW-UV */
#define NV_PFB_CLOSE_PAGE2_Q_EMPTY_TX                           3:3 /* RW-UF */
#define NV_PFB_CLOSE_PAGE2_Q_EMPTY_TX_DISABLED           0x00000000 /* RWIUV */
#define NV_PFB_CLOSE_PAGE2_Q_EMPTY_TX_ENABLED            0x00000001 /* RW-UV */
#define NV_PFB_CLOSE_PAGE2_Q_EMPTY_ZR                           4:4 /* RW-UF */
#define NV_PFB_CLOSE_PAGE2_Q_EMPTY_ZR_DISABLED           0x00000000 /* RWIUV */
#define NV_PFB_CLOSE_PAGE2_Q_EMPTY_ZR_ENABLED            0x00000001 /* RW-UV */
#define NV_PFB_CLOSE_PAGE2_Q_EMPTY_ZW                           5:5 /* RW-UF */
#define NV_PFB_CLOSE_PAGE2_Q_EMPTY_ZW_DISABLED           0x00000000 /* RWIUV */
#define NV_PFB_CLOSE_PAGE2_Q_EMPTY_ZW_ENABLED            0x00000001 /* RW-UV */
#define NV_PFB_CLOSE_PAGE2_Q_EMPTY_CR                           6:6 /* RW-UF */
#define NV_PFB_CLOSE_PAGE2_Q_EMPTY_CR_DISABLED           0x00000000 /* RWIUV */
#define NV_PFB_CLOSE_PAGE2_Q_EMPTY_CR_ENABLED            0x00000001 /* RW-UV */
#define NV_PFB_CLOSE_PAGE2_Q_EMPTY_CW                           7:7 /* RW-UF */
#define NV_PFB_CLOSE_PAGE2_Q_EMPTY_CW_DISABLED           0x00000000 /* RWIUV */
#define NV_PFB_CLOSE_PAGE2_Q_EMPTY_CW_ENABLED            0x00000001 /* RW-UV */
#define NV_PFB_BPARB                                     0x0010034C /* RW-4R */
#define NV_PFB_BPARB_HP_ARB_MODE                                3:0 /* RWI-F */
#define NV_PFB_BPARB_HP_ARB_MODE_REL_WTRMRK_10           0x00000000 /* RW-UV */
#define NV_PFB_BPARB_HP_ARB_MODE_REL_WTRMRK_8            0x00000001 /* RWIUV */
#define NV_PFB_BPARB_HP_ARB_MODE_REL_WTRMRK_6            0x00000002 /* RW-UV */
#define NV_PFB_BPARB_HP_ARB_MODE_REL_WTRMRK_4            0x00000003 /* RW-UV */
#define NV_PFB_BPARB_HP_ARB_MODE_KEEP_NEVER              0x00000004 /* RW-UV */
#define NV_PFB_BPARB_HP_ARB_MODE_KEEP_1_IF_ACT           0x00000005 /* RW-UV */
#define NV_PFB_BPARB_HP_ARB_MODE_KEEP_2_IF_ACT           0x00000006 /* RW-UV */
#define NV_PFB_BPARB_HP_ARB_MODE_KEEP_3_IF_ACT           0x00000007 /* RW-UV */
#define NV_PFB_BPARB_HP_ARB_MODE_KEEP_4_IF_ACT           0x00000008 /* RW-UV */
#define NV_PFB_BPARB_HP_ARB_MODE_KEEP_5_IF_ACT           0x00000009 /* RW-UV */
#define NV_PFB_BPARB_HP_ARB_MODE_KEEP_6_IF_ACT           0x0000000a /* RW-UV */
#define NV_PFB_BPARB_HP_ARB_MODE_KEEP_7_IF_ACT           0x0000000b /* RW-UV */
#define NV_PFB_BPARB_HP_ARB_MODE_KEEP_8_IF_ACT           0x0000000c /* RW-UV */
#define NV_PFB_BPARB_HP_ARB_MODE_KEEP_9_IF_ACT           0x0000000d /* RW-UV */
#define NV_PFB_BPARB_HP_ARB_MODE_KEEP_10_IF_ACT          0x0000000e /* RW-UV */
#define NV_PFB_BPARB_HP_ARB_MODE_KEEP_IF_ACTIVE          0x0000000f /* RW-UV */
#define NV_PFB_CMDQ                                      0x00100350 /* RW-4R */
#define NV_PFB_CMDQ_RW                                          4:0 /* RWI-F */
#define NV_PFB_CMDQ_RW_4                                 0x00000004 /* RW-UV */
#define NV_PFB_CMDQ_RW_8                                 0x00000008 /* RW-UV */
#define NV_PFB_CMDQ_RW_10                                0x0000000A /* RW-UV */
#define NV_PFB_CMDQ_RW_12                                0x0000000C /* RW-UV */
#define NV_PFB_CMDQ_RW_14                                0x0000000E /* RW-UV */
#define NV_PFB_CMDQ_RW_16                                0x00000010 /* RWIUV */
#define NV_PFB_CMDQ_ACT                                        10:8 /* RWI-F */
#define NV_PFB_CMDQ_ACT_1                                0x00000001 /* RW-UV */
#define NV_PFB_CMDQ_ACT_2                                0x00000002 /* RW-UV */
#define NV_PFB_CMDQ_ACT_3                                0x00000003 /* RW-UV */
#define NV_PFB_CMDQ_ACT_4                                0x00000004 /* RWIUV */
#define NV_PFB_CMDQ_PRE                                       14:12 /* RWI-F */
#define NV_PFB_CMDQ_PRE_1                                0x00000001 /* RW-UV */
#define NV_PFB_CMDQ_PRE_2                                0x00000002 /* RW-UV */
#define NV_PFB_CMDQ_PRE_3                                0x00000003 /* RW-UV */
#define NV_PFB_CMDQ_PRE_4                                0x00000004 /* RWIUV */
#define NV_PFB_ILL_INSTR(i)                      (0x00100360+(i)*4) /* R--4A */
#define NV_PFB_ILL_INSTR__SIZE_1                                  4 /*       */
#define NV_PFB_ILL_INSTR_REQID                                  4:0 /* R--VF */
#define NV_PFB_ILL_INSTR_CMD                                   26:5 /* R--VF */
#define NV_PFB_ILL_INSTR_CODE                                 30:27 /* R--VF */
#define NV_PFB_ILL_INSTR_TRAPPED                                 31 /* R--VF */
/* dev_fb.ref */
#define NV_PFBM                               0x3FFFFFFF:0x08000000 /* RW--M */
/* dev_fb.ref */
#define NV_PFBIN                              0x007FFFFF:0x00700000 /* RW--M */
/* dev_ext_devices.ref */
#define NV_PDAC                               0x00680FFF:0x00680000 /* RW--D */
#define NV_PDAC_DATA(i)                          (0x00680000+(i)*4) /* RW-4A */
#define NV_PDAC_DATA__SIZE_1                                     16 /*       */
#define NV_PDAC_DATA_VALUE                                      7:0 /* RW-VF */
/* dev_ext_devices.ref */
/* dev_ext_devices.ref */
/* dev_fifo.ref */
#define NV_USER                               0x00BFFFFF:0x00800000 /* RW--D */
#define NV_USER_OBJECT(i,j)     (0x00800000+(i)*0x10000+(j)*0x2000) /* -W-4A */
#define NV_USER_OBJECT__SIZE_1                                   32 /*       */
#define NV_USER_OBJECT__SIZE_2                                    8 /*       */
#define NV_USER_OBJECT_HANDLE                                  31:0 /* -W-VF */
#define NV_USER_FREE016(i,j)        (0x00800010+(i)*65536+(j)*8192) /* R--2A */
#define NV_USER_FREE016__SIZE_1                                  32 /*       */
#define NV_USER_FREE016__SIZE_2                                   8 /*       */
#define NV_USER_FREE016_COUNT_LO                                1:0 /* C--UF */
#define NV_USER_FREE016_COUNT_LO_0                       0x00000000 /* C---V */
#define NV_USER_FREE016_COUNT                                   9:2 /* R--UF */
#define NV_USER_FREE016_COUNT_HI                              15:10 /* C--UF */
#define NV_USER_FREE016_COUNT_HI_0                       0x00000000 /* C---V */
#define NV_USER_FREE032(i,j)        (0x00800010+(i)*65536+(j)*8192) /* R--4A */
#define NV_USER_FREE032__SIZE_1                                  32 /*       */
#define NV_USER_FREE032__SIZE_2                                   8 /*       */
#define NV_USER_FREE032_COUNT_LO                                1:0 /* C--UF */
#define NV_USER_FREE032_COUNT_LO_0                       0x00000000 /* C---V */
#define NV_USER_FREE032_COUNT                                   9:2 /* R--UF */
#define NV_USER_FREE032_COUNT_HI                              31:10 /* C--UF */
#define NV_USER_FREE032_COUNT_HI_0                       0x00000000 /* C---V */
#define NV_USER_ZERO016(i,j,k) (0x0800012+(i)*65536+(j)*8192+(k)*2) /* R--2A */
#define NV_USER_ZERO016__SIZE_1                                  32 /*       */
#define NV_USER_ZERO016__SIZE_2                                   8 /*       */
#define NV_USER_ZERO016__SIZE_3                                   7 /*       */
#define NV_USER_ZERO016_COUNT                                  15:0 /* C--UF */
#define NV_USER_ZERO016_COUNT_0                          0x00000000 /* C---V */
#define NV_USER_ZERO032(i,j,k) (0x0800014+(i)*65536+(j)*8192+(k)*4) /* R--4A */
#define NV_USER_ZERO032__SIZE_1                                  32 /*       */
#define NV_USER_ZERO032__SIZE_2                                   8 /*       */
#define NV_USER_ZERO032__SIZE_3                                   3 /*       */
#define NV_USER_ZERO032_COUNT                                  31:0 /* C--UF */
#define NV_USER_ZERO032_COUNT_0                          0x00000000 /* C---V */
#define NV_USER_DMA_GET(i,j)    (0x00800044+(i)*0x10000+(j)*0x2000) /* R--4A */
#define NV_USER_DMA_GET__SIZE_1                                  32 /*       */
#define NV_USER_DMA_GET__SIZE_2                                   8 /*       */
#define NV_USER_DMA_GET_OFFSET                                 31:2 /* R-XUF */
#define NV_USER_REF(i,j)        (0x00800048+(i)*0x10000+(j)*0x2000) /* R--4A */
#define NV_USER_REF__SIZE_1                                      32 /*       */
#define NV_USER_REF__SIZE_2                                       8 /*       */
#define NV_USER_REF_CNT                                        31:0 /* R-XUF */
/* dev_fifo.ref */
#define NV_UDMA_OBJECT(j)                   (0x00000000+(j)*0x2000) /* -W-4A */
#define NV_UDMA_OBJECT__SIZE_1                                   32 /*       */
#define NV_UDMA_OBJECT__SIZE_2                                    8 /*       */
#define NV_UDMA_OBJECT_HANDLE                                  31:0 /* -W-VF */
#define NV_UDMA_SET_REF(j)                  (0x00000050+(j)*0x2000) /* R--4A */
#define NV_UDMA_SET_REF__SIZE_1                                  32 /*       */
#define NV_UDMA_SET_REF__SIZE_2                                   8 /*       */
#define NV_UDMA_SET_REF_CNT                                    31:0 /* R-XUF */
#define NV_UDMA_SEM_CTXDMA(j)               (0x00000060+(j)*0x2000) /* -W-4A */
#define NV_UDMA_SEM_CTXDMA__SIZE_1                               32 /*       */
#define NV_UDMA_SEM_CTXDMA__SIZE_2                                8 /*       */
#define NV_UDMA_SEM_CTXDMA_HANDLE                              31:0 /* -W-VF */
#define NV_UDMA_SEM_OFFSET(j)               (0x00000064+(j)*0x2000) /* -W-4A */
#define NV_UDMA_SEM_OFFSET__SIZE_1                               32 /*       */
#define NV_UDMA_SEM_OFFSET__SIZE_2                                8 /*       */
#define NV_UDMA_SEM_OFFSET_ADDRESS                             11:2 /* -W-VF */
#define NV_UDMA_SEM_ACQUIRE(j)              (0x00000068+(j)*0x2000) /* -W-4A */
#define NV_UDMA_SEM_ACQUIRE__SIZE_1                              32 /*       */
#define NV_UDMA_SEM_ACQUIRE__SIZE_2                               8 /*       */
#define NV_UDMA_SEM_ACQUIRE_VALUE                              31:0 /* -W-VF */
#define NV_UDMA_SEM_RELEASE(j)              (0x0000006C+(j)*0x2000) /* -W-4A */
#define NV_UDMA_SEM_RELEASE__SIZE_1                              32 /*       */
#define NV_UDMA_SEM_RELEASE__SIZE_2                               8 /*       */
#define NV_UDMA_SEM_RELEASE_VALUE                              31:0 /* -W-VF */
/* dev_ram.ref */
#define NV_RAMHT__SIZE_0                      0x00000FFF:0x00000000 /* RW--M */
#define NV_RAMHT__SIZE_1                      0x00001FFF:0x00000000 /* RW--M */
#define NV_RAMHT__SIZE_2                      0x00003FFF:0x00000000 /* RW--M */
#define NV_RAMHT__SIZE_3                      0x00007FFF:0x00000000 /* RW--M */
#define NV_RAMHT_HANDLE                       ( 0*32+31):( 0*32+ 0) /* RWXVF */
#define NV_RAMHT_INSTANCE                     ( 1*32+15):( 1*32+ 0) /* RWXUF */
#define NV_RAMHT_ENGINE                       ( 1*32+17):( 1*32+16) /* RWXVF */
#define NV_RAMHT_ENGINE_SW                               0x00000000 /* RW--V */
#define NV_RAMHT_ENGINE_GRAPHICS                         0x00000001 /* RW--V */
#define NV_RAMHT_ENGINE_DVD                              0x00000002 /* RW--V */
#define NV_RAMHT_CHID                         ( 1*32+28):( 1*32+24) /* RWXUF */
#define NV_RAMHT_STATUS                       ( 1*32+31):( 1*32+31) /* RWXUF */
#define NV_RAMHT_STATUS_INVALID                          0x00000000 /* RW--V */
#define NV_RAMHT_STATUS_VALID                            0x00000001 /* RW--V */
/* dev_ram.ref */
#define NV_RAMRO__SIZE_0                      0x000001FF:0x00000000 /* RW--M */
#define NV_RAMRO__SIZE_1                      0x00001FFF:0x00000000 /* RW--M */
#define NV_RAMRO_METHOD                       ( 0*32+12):( 0*32+ 0) /* RWXUF */
#define NV_RAMRO_SUBCHANNEL                   ( 0*32+15):( 0*32+13) /* RWXUF */
#define NV_RAMRO_CHID                         ( 0*32+22):( 0*32+16) /* RWXUF */
#define NV_RAMRO_TYPE                         ( 0*32+23):( 0*32+23) /* RWXVF */
#define NV_RAMRO_TYPE_WRITE                              0x00000000 /* RW--V */
#define NV_RAMRO_TYPE_READ                               0x00000001 /* RW--V */
#define NV_RAMRO_BYTE_ENABLES                 ( 0*32+27):( 0*32+24) /* RWXUF */
#define NV_RAMRO_REASON                       ( 0*32+31):( 0*32+28) /* RWXVF */
#define NV_RAMRO_REASON_ILLEGAL_ACCESS                   0x00000000 /* RW--V */
#define NV_RAMRO_REASON_NO_CACHE_AVAILABLE               0x00000001 /* RW--V */
#define NV_RAMRO_REASON_CACHE_RAN_OUT                    0x00000002 /* RW--V */
#define NV_RAMRO_REASON_FREE_COUNT_OVERRUN               0x00000003 /* RW--V */
#define NV_RAMRO_REASON_CAUGHT_LYING                     0x00000004 /* RW--V */
#define NV_RAMRO_REASON_RESERVED_ACCESS                  0x00000005 /* RW--V */
#define NV_RAMRO_DATA                         ( 1*32+31):( 1*32+ 0) /* RWXUF */
/* dev_ram.ref */
#define NV_RAMFC__SIZE_0                      0x000003FF:0x00000000 /* RW--M */
#define NV_RAMFC__SIZE_1                      0x000007FF:0x00000000 /* RW--M */
#define NV_RAMFC_DMA_PUT                      ( 0*32+31):( 0*32+ 2) /* RWXUF */
#define NV_RAMFC_DMA_GET                      ( 1*32+31):( 1*32+ 2) /* RWXUF */
#define NV_RAMFC_REF_CNT                      ( 2*32+31):( 2*32+ 0) /* RWXUF */
#define NV_RAMFC_DMA_INST                     ( 3*32+15):( 3*32+ 0) /* RWXUF */
#define NV_RAMFC_DMA_COUNT                    ( 3*32+28):( 3*32+18) /* RWXUF */
#define NV_RAMFC_DMA_METHOD                   ( 4*32+12):( 4*32+ 2) /* RWXUF */
#define NV_RAMFC_DMA_SUBCHANNEL               ( 4*32+15):( 4*32+13) /* RWXUF */
#define NV_RAMFC_DMA_METHOD_COUNT             ( 4*32+28):( 4*32+18) /* RWXUF */
#define NV_RAMFC_DMA_METHOD_TYPE              ( 4*32+ 0):( 4*32+ 0) /* RWXUF */
#define NV_RAMFC_DMA_FETCH_TRIG               ( 5*32+ 7):( 5*32+ 3) /* RWXUF */
#define NV_RAMFC_DMA_FETCH_SIZE               ( 5*32+15):( 5*32+13) /* RWXUF */
#define NV_RAMFC_DMA_FETCH_MAX_REQS           ( 5*32+20):( 5*32+16) /* RWXUF */
#define NV_RAMFC_BIG_ENDIAN                   ( 5*32+31):( 5*32+31) /* RWXUF */
#define NV_RAMFC_ENGINE_SUB_0                 ( 6*32+ 1):( 6*32+ 0) /* RWXUF */
#define NV_RAMFC_ENGINE_SUB_1                 ( 6*32+ 5):( 6*32+ 4) /* RWXUF */
#define NV_RAMFC_ENGINE_SUB_2                 ( 6*32+ 9):( 6*32+ 8) /* RWXUF */
#define NV_RAMFC_ENGINE_SUB_3                 ( 6*32+13):( 6*32+12) /* RWXUF */
#define NV_RAMFC_ENGINE_SUB_4                 ( 6*32+17):( 6*32+16) /* RWXUF */
#define NV_RAMFC_ENGINE_SUB_5                 ( 6*32+21):( 6*32+20) /* RWXUF */
#define NV_RAMFC_ENGINE_SUB_6                 ( 6*32+25):( 6*32+24) /* RWXUF */
#define NV_RAMFC_ENGINE_SUB_7                 ( 6*32+29):( 6*32+28) /* RWXUF */
#define NV_RAMFC_ENGINE_SW                               0x00000000 /* RW--V */
#define NV_RAMFC_ENGINE_GRAPHICS                         0x00000001 /* RW--V */
#define NV_RAMFC_ENGINE_DVD                              0x00000002 /* RW--V */
#define NV_RAMFC_PULL1_ENGINE                 ( 7*32+ 1):( 7*32+ 0) /* RWXUF */
#define NV_RAMFC_PULL1_ENGINE_SW                         0x00000000 /* RW--V */
#define NV_RAMFC_PULL1_ENGINE_GRAPHICS                   0x00000001 /* RW--V */
#define NV_RAMFC_PULL1_ENGINE_DVD                        0x00000002 /* RW--V */
#define NV_RAMFC_PULL1_ACQ_STATE              ( 7*32+ 4):( 7*32+ 4) /* RWXVF */
#define NV_RAMFC_PULL1_ACQ_STATE_INACTIVE                0x00000000 /* RW--V */
#define NV_RAMFC_PULL1_ACQ_STATE_ACTIVE                  0x00000001 /* RW--V */
#define NV_RAMFC_PULL1_SEM_TARGET_NODE        ( 7*32+17):( 7*32+16) /* RWXUF */
#define NV_RAMFC_PULL1_SEM_TARGET_NODE_NVM               0x00000000 /* RW--V */
#define NV_RAMFC_PULL1_SEM_TARGET_NODE_PCI               0x00000002 /* RW--V */
#define NV_RAMFC_PULL1_SEM_TARGET_NODE_AGP               0x00000003 /* RW--V */
#define NV_RAMFC_ACQUIRE_VALUE                ( 8*32+31):( 8*32+ 0) /* RWXUF */
#define NV_RAMFC_ACQUIRE_TIMESTAMP            ( 9*32+31):( 9*32+ 0) /* RWXUF */
#define NV_RAMFC_ACQUIRE_TIMEOUT              (10*32+30):(10*32+ 0) /* RWXUF */
#define NV_RAMFC_SEMAPHORE_CTXDMA             (11*32+ 0):(11*32+ 0) /* RWXVF */
#define NV_RAMFC_SEMAPHORE_CTXDMA_INVALID                0x00000000 /* RW--V */
#define NV_RAMFC_SEMAPHORE_CTXDMA_VALID                  0x00000001 /* RW--V */
#define NV_RAMFC_SEMAPHORE_OFFSET             (11*32+11):(11*32+ 2) /* RWXUF */
#define NV_RAMFC_SEMAPHORE_PAGE_ADDRESS       (11*32+31):(11*32+12) /* RWXUF */
#define NV_RAMFC_DMA_SUBROUTINE_STATE         (12*32+ 0):(12*32+ 0) /* RWXVF */
#define NV_RAMFC_DMA_SUBROUTINE_STATE_INACTIVE           0x00000000 /* RW--V */
#define NV_RAMFC_DMA_SUBROUTINE_STATE_ACTIVE             0x00000001 /* RW--V */
#define NV_RAMFC_DMA_SUBROUTINE_RETURN_OFFSET (12*32+31):(12*32+ 2) /* RWXUF */
/* dev_ram.ref */
/* dev_ram.ref */
/* dev_ram.ref */
#define NV_RAMDVD_CTX_TABLE                   (63*32+31):( 0*32+ 0) /* RWXUF */
#define NV_RAMDVD_CTX_TABLE_OBJECT(c,s) (((c)*4+((s)/2))*32+((s)%2)*16+15):(((c)*4+((s)/2))*32+((s)%2)*16) /* RWXUF */
#define NV_RAMDVD_CTX_TABLE_OBJECT_0_0        ( 0*32+15):( 0*32+ 0) /* RWXUF */
#define NV_RAMDVD_CTX_TABLE_OBJECT_0_1        ( 0*32+31):( 0*32+16) /* RWXUF */
#define NV_RAMDVD_CTX_TABLE_OBJECT_0_2        ( 1*32+15):( 1*32+ 0) /* RWXUF */
#define NV_RAMDVD_CTX_TABLE_OBJECT_0_3        ( 1*32+31):( 1*32+16) /* RWXUF */
#define NV_RAMDVD_CTX_TABLE_OBJECT_0_4        ( 2*32+15):( 2*32+ 0) /* RWXUF */
#define NV_RAMDVD_CTX_TABLE_OBJECT_0_5        ( 2*32+31):( 2*32+16) /* RWXUF */
#define NV_RAMDVD_CTX_TABLE_OBJECT_0_6        ( 3*32+15):( 3*32+ 0) /* RWXUF */
#define NV_RAMDVD_CTX_TABLE_OBJECT_0_7        ( 3*32+31):( 3*32+16) /* RWXUF */
#define NV_RAMDVD_CTX_TABLE_OBJECT_15_0       (60*32+15):(60*32+ 0) /* RWXUF */
#define NV_RAMDVD_CTX_TABLE_OBJECT_15_1       (60*32+31):(60*32+16) /* RWXUF */
#define NV_RAMDVD_CTX_TABLE_OBJECT_15_2       (61*32+15):(61*32+ 0) /* RWXUF */
#define NV_RAMDVD_CTX_TABLE_OBJECT_15_3       (61*32+31):(61*32+16) /* RWXUF */
#define NV_RAMDVD_CTX_TABLE_OBJECT_15_4       (62*32+15):(62*32+ 0) /* RWXUF */
#define NV_RAMDVD_CTX_TABLE_OBJECT_15_5       (62*32+31):(62*32+16) /* RWXUF */
#define NV_RAMDVD_CTX_TABLE_OBJECT_15_6       (63*32+15):(63*32+ 0) /* RWXUF */
#define NV_RAMDVD_CTX_TABLE_OBJECT_15_7       (63*32+31):(63*32+16) /* RWXUF */
/* dev_ram.ref */
/* dev_ram.ref */
#define NV_DMA_CLASS                          ( 0*32+11):( 0*32+ 0) /* RWXUF */
#define NV_DMA_PAGE_TABLE                     ( 0*32+12):( 0*32+12) /* RWXVF */
#define NV_DMA_PAGE_TABLE_NOT_PRESENT                    0x00000000 /* RW--V */
#define NV_DMA_PAGE_TABLE_PRESENT                        0x00000001 /* RW--V */
#define NV_DMA_PAGE_ENTRY                     ( 0*32+13):( 0*32+13) /* RWXVF */
#define NV_DMA_PAGE_ENTRY_NOT_LINEAR                     0x00000000 /* RW--V */
#define NV_DMA_PAGE_ENTRY_LINEAR                         0x00000001 /* RW--V */
#define NV_DMA_FLAGS_ACCESS                   ( 0*32+14):( 0*32+14) /* RWXVF */
#define NV_DMA_FLAGS_ACCESS_READ_WRITE                   0x00000000 /* RW--V */
#define NV_DMA_FLAGS_ACCESS_OTHER                        0x00000001 /* RW--V */
#define NV_DMA_FLAGS_MAPPING_COHERENCY        ( 0*32+15):( 0*32+15) /* RWXVF */
#define NV_DMA_FLAGS_MAPPING_COHERENCY_UNCACHED          0x00000000 /* RW--V */
#define NV_DMA_FLAGS_MAPPING_COHERENCY_CACHED            0x00000001 /* RW--V */
#define NV_DMA_TARGET_NODE                    ( 0*32+17):( 0*32+16) /* RWXVF */
#define NV_DMA_TARGET_NODE_NVM                           0x00000000 /* RW--V */
#define NV_DMA_TARGET_NODE_NVM_TILED                     0x00000001 /* RW--V */
#define NV_DMA_TARGET_NODE_PCI                           0x00000002 /* RW--V */
#define NV_DMA_TARGET_NODE_AGP                           0x00000003 /* RW--V */
#define NV_DMA_MEMORY_CLASS                   ( 0*32+19):( 0*32+18) /* RWXVF */
#define NV_DMA_MEMORY_CLASS_NV01_MEMORY_LOCAL_LINEAR     0x00000000 /* RW--V */
#define NV_DMA_MEMORY_CLASS_NV01_MEMORY_LOCAL_BANKED     0x00000001 /* RW--V */
#define NV_DMA_MEMORY_CLASS_NV01_MEMORY_SYSTEM           0x00000002 /* RW--V */
#define NV_DMA_MEMORY_CLASS_OTHER                        0x00000003 /* RW--V */
#define NV_DMA_ADJUST                         ( 0*32+31):( 0*32+20) /* RWXUF */
#define NV_DMA_LIMIT                          ( 1*32+31):( 1*32+ 0) /* RWXUF */
#define NV_DMA_ACCESS                         ( 2*32+ 1):( 2*32+ 1) /* RWXVF */
#define NV_DMA_ACCESS_READ_ONLY                          0x00000000 /* RW--V */
#define NV_DMA_ACCESS_READ_AND_WRITE                     0x00000001 /* RW--V */
#define NV_DMA_FRAME_ADDRESS                  ( 2*32+31):( 2*32+12) /* RWXUF */
/* dev_ram.ref */
#define NV_SUBCHAN_CTX_SWITCH                 ( 0*32+31):( 0*32+ 0) /* RWXUF */
#define NV_SUBCHAN_DMA_INSTANCE               ( 1*32+15):( 1*32+ 0) /* RWXUF */
#define NV_SUBCHAN_NOTIFY_INSTANCE            ( 1*32+31):( 1*32+16) /* RWXUF */
#define NV_SUBCHAN_MEMFMT_INSTANCE            ( 2*32+15):( 2*32+ 0) /* RWXUF */
#define NV_SUBCHAN_MEMFMT_LINEAR              ( 2*32+16):( 2*32+16) /* RWXUF */
#define NV_SUBCHAN_MEMFMT_LINEAR_OUT                     0x00000000 /* RW--V */
#define NV_SUBCHAN_MEMFMT_LINEAR_IN                      0x00000001 /* RW--V */

#endif // _NV20_REF_H_
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Microsoft Xbox (1.00.4400) [April 2002] [src]\private\ntos\video\nv20\drivers\resman\kernel\inc\nv20\nv20_gr.h ===
#ifndef _NV20_GR_H_
#define _NV20_GR_H_

 /***************************************************************************\
|*                                                                           *|
|*        Copyright (c) 1993-2000 NVIDIA, Corp.  All rights reserved.        *|
|*                                                                           *|
|*     NOTICE TO USER:   The source code  is copyrighted under  U.S. and     *|
|*     international laws.   NVIDIA, Corp. of Sunnyvale, California owns     *|
|*     the copyright  and as design patents  pending  on the design  and     *|
|*     interface  of the NV chips.   Users and possessors of this source     *|
|*     code are hereby granted  a nonexclusive,  royalty-free  copyright     *|
|*     and  design  patent license  to use this code  in individual  and     *|
|*     commercial software.                                                  *|
|*                                                                           *|
|*     Any use of this source code must include,  in the user documenta-     *|
|*     tion and  internal comments to the code,  notices to the end user     *|
|*     as follows:                                                           *|
|*                                                                           *|
|*     Copyright (c) 1993-2000  NVIDIA, Corp.    NVIDIA  design  patents     *|
|*     pending in the U.S. and foreign countries.                            *|
|*                                                                           *|
|*     NVIDIA, CORP.  MAKES  NO REPRESENTATION ABOUT  THE SUITABILITY OF     *|
|*     THIS SOURCE CODE FOR ANY PURPOSE.  IT IS PROVIDED "AS IS" WITHOUT     *|
|*     EXPRESS OR IMPLIED WARRANTY OF ANY KIND.  NVIDIA, CORP. DISCLAIMS     *|
|*     ALL WARRANTIES  WITH REGARD  TO THIS SOURCE CODE,  INCLUDING  ALL     *|
|*     IMPLIED   WARRANTIES  OF  MERCHANTABILITY  AND   FITNESS   FOR  A     *|
|*     PARTICULAR  PURPOSE.   IN NO EVENT SHALL NVIDIA, CORP.  BE LIABLE     *|
|*     FOR ANY SPECIAL, INDIRECT, INCIDENTAL,  OR CONSEQUENTIAL DAMAGES,     *|
|*     OR ANY DAMAGES  WHATSOEVER  RESULTING  FROM LOSS OF USE,  DATA OR     *|
|*     PROFITS,  WHETHER IN AN ACTION  OF CONTRACT,  NEGLIGENCE OR OTHER     *|
|*     TORTIOUS ACTION, ARISING OUT  OF OR IN CONNECTION WITH THE USE OR     *|
|*     PERFORMANCE OF THIS SOURCE CODE.                                      *|
|*                                                                           *|
 \***************************************************************************/
/**************************** Graphics Manager *****************************\
*                                                                           *
* Module: NV20_GR.H                                                         *
*       Graphics engine management.                                         *
*                                                                           *
*****************************************************************************
*                                                                           *
* History:                                                                  *
*                                                                           *
\***************************************************************************/

//---------------------------------------------------------------------------
//
//  Defines.
//
//---------------------------------------------------------------------------
// #define NV20_SW_CTX_SWITCH

//
// On nv20, the graphics channel context is partitioned into 2d and 3d
// state sets.  These data structures help the RM encapsulate what regs
// go where.
//
typedef struct _def_prim_assm_state_nv20    PRIM_ASSM_STATE_NV20, *PPRIM_ASSM_STATE_NV20;
typedef struct _def_grctxpipe_nv20          GRCTXPIPE_NV20, *PGRCTXPIPE_NV20;
typedef struct _def_grctxcmn_nv20           GRCTXCMN_NV20, *PGRCTXCMN_NV20;
typedef struct _def_grctx3d_nv20            GRCTX3D_NV20, *PGRCTX3D_NV20;
typedef struct _def_graphics_channel_nv20   GRAPHICSCHANNEL_NV20, *PGRAPHICSCHANNEL_NV20;
typedef struct _def_graphics_state_nv20     GRAPHICSSTATE_NV20, *PGRAPHICSSTATE_NV20;

//
// Context switching is done in hardware in nv20, so all we
// need to do is reserve space for both 2d/3d state at fifo
// alloc time.  The following macros are used in the hal class
// descriptor table.
//
//#define NV20_GR_2D_CONTEXT_SIZE             (4 * 207)
//#define NV20_GR_3D_CONTEXT_SIZE             (4 * 3457)
//#define NV20_GR_CONTEXT_SIZE                (NV20_GR_2D_CONTEXT_SIZE + NV20_GR_3D_CONTEXT_SIZE)
#define NV20_GR_CONTEXT_SIZE                (sizeof (GRAPHICSCHANNEL_NV20))

//
// The Kelvin class on nv20 requires an additional 200 words
// of "parking" (instance) space with a default alignment of 16.
//
#define NV20_KELVIN_CONTEXT_SIZE            (4 * 200)
#define NV20_KELVIN_CONTEXT_ALIGN           (16)

//---------------------------------------------------------------------------
//
//  Graphics channel context.
//
//---------------------------------------------------------------------------

//
// The format of the graphics channel context is derived
// from /hw/nv20/docs/context_switching.doc.
//

//
// RDI ram selects (pulled from nv20 diags).
//
#define RDI_RAMSEL_IDX_FMT         0x00000026
#define RDI_RAMSEL_CAS0            0x0000002c
#define RDI_RAMSEL_CAS1            0x0000002d
#define RDI_RAMSEL_CAS2            0x0000002e
#define RDI_RAMSEL_ASSM_STATE      0x0000002f
#define RDI_RAMSEL_IDX_CACHE0      0x00000020
#define RDI_RAMSEL_IDX_CACHE1      0x00000021
#define RDI_RAMSEL_IDX_CACHE2      0x00000022
#define RDI_RAMSEL_IDX_CACHE3      0x00000023
#define RDI_RAMSEL_VTX_FILE0       0x00000028
#define RDI_RAMSEL_VTX_FILE1       0x00000029
#define RDI_RAMSEL_XL_P            0x00000010
#define RDI_RAMSEL_XL_VAB          0x00000015
#define RDI_RAMSEL_XL_XFREG        0x0000001a
#define RDI_RAMSEL_XL_XFCTX        0x00000017
#define RDI_RAMSEL_XL_LTCTX        0x00000018
#define RDI_RAMSEL_XL_LTC          0x00000019
#define RDI_RAMSEL_CRSTR_STIPP     0x00000045
#define RDI_RAMSEL_FD_CTRL         0x0000003d
#define RDI_RAMSEL_ROP_REGS        0x00000050

#define RDI_ADDR_ZERO              0x00000000

//
// Pipe state.
//
#define XL_VAB_BASE         NV_IGRAPH_XF2PIPE(NV_IGRAPH_XF_CMD_VAB,0)
#define XL_XFCTX_BASE       NV_IGRAPH_XF2PIPE(NV_IGRAPH_XF_CMD_XFCTX,0)
#define XL_LTCTX_BASE       NV_IGRAPH_XF2PIPE(NV_IGRAPH_XF_CMD_LTCTX,0)
#define XL_LTC0_BASE        NV_IGRAPH_XF2PIPE(NV_IGRAPH_XF_CMD_LTC0,0)
#define XL_LTC1_BASE        NV_IGRAPH_XF2PIPE(NV_IGRAPH_XF_CMD_LTC1,0)
#define XL_LTC2_BASE        NV_IGRAPH_XF2PIPE(NV_IGRAPH_XF_CMD_LTC2,0)
#define XL_LTC3_BASE        NV_IGRAPH_XF2PIPE(NV_IGRAPH_XF_CMD_LTC3,0)

#define IDX_FMT_COUNT       (16+16+3)       // Vertex Array Regs+State
#define CAS0_COUNT		    (6*4+5)         // Primitive Assembly Vtx0
#define CAS1_COUNT          (6*4+5)         // Primitive Assembly Vtx1
#define CAS2_COUNT          (6*4+5)         // Primitive Assembly Vtx2
#define ASSM_STATE_COUNT    (2)             // Primitive Assembly State
#define IDX_CACHE0_COUNT    (32*4)          // FD Coefficients (EvenLeft)
#define IDX_CACHE1_COUNT    (32*4)          // FD Coefficients (OddLeft)
#define IDX_CACHE2_COUNT    (32*4)          // FD Coefficients (EvenRight)
#define IDX_CACHE3_COUNT    (32*4)          // FD Coefficients (OddRight)
#define VTX_FILE0_COUNT		(48*4)          // Vertex File0
#define VTX_FILE1_COUNT		(144*4)         // Vertex File1
#define XL_P_COUNT          (136*4)         // Cheops Program
#define XL_XFCTX_COUNT      (192*4)         // Cheops Context
#define XL_LTCTX_COUNT      (74*4)          // Zoser Context
#define XL_LTC0_COUNT       (4)             // Zoser Context 0
#define XL_LTC1_COUNT       (20)            // Zoser Context 1
#define XL_LTC2_COUNT       (15)            // Zoser Context 2
#define XL_LTC3_COUNT       (14)            // Zoser Context 3
#define XL_LTC_COUNT        (XL_LTC0_COUNT+XL_LTC1_COUNT+XL_LTC2_COUNT+XL_LTC3_COUNT)
#define XL_VAB_COUNT        (17*4)          // VAB
#define CRSTR_STIPP_COUNT   (32)            // RSTR stipple
#define FD_CTRL_COUNT       (15)            // FD
#define ROP_REGS_COUNT      (1)             // ROP Regs

struct _def_grctxpipe_nv20
{
    U032 IdxFmt[IDX_FMT_COUNT];
    U032 Cas0[CAS0_COUNT];
    U032 Cas1[CAS1_COUNT];
    U032 Cas2[CAS2_COUNT];
    U032 AssmState[ASSM_STATE_COUNT];
    U032 IdxCache0[IDX_CACHE0_COUNT];
    U032 IdxCache1[IDX_CACHE1_COUNT];
    U032 IdxCache2[IDX_CACHE2_COUNT];
    U032 IdxCache3[IDX_CACHE3_COUNT];
    U032 VtxFile0[VTX_FILE0_COUNT];
    U032 VtxFile1[VTX_FILE1_COUNT];
    U032 XlP[XL_P_COUNT];
    U032 XlXfCtx[XL_XFCTX_COUNT];
    U032 XlLtCtx[XL_LTCTX_COUNT];
    U032 XlLtc[XL_LTC_COUNT];
    U032 XlVab[XL_VAB_COUNT];
    U032 CrstrStipp[CRSTR_STIPP_COUNT];
    U032 FdCtrl[FD_CTRL_COUNT];
    U032 RopRegs[ROP_REGS_COUNT];
    U032 Pad[4];
};

//
// Because graphics channel context switching is done in hw
// on nv20, we aren't in control of the format of this data
// structure (be careful!).
//

//
// This structure represents the channel context state
// that is either 2d-only or shared between 2d/3d.
//
struct _def_grctxcmn_nv20
{
    U032 ContextUser;
    U032 ContextSwitch1;
    U032 ContextSwitch2;
    U032 ContextSwitch3;
    U032 ContextSwitch4;
    U032 ContextSwitch5;
    U032 ContextCache1[8];
    U032 ContextCache2[8];
    U032 ContextCache3[8];
    U032 ContextCache4[8];
    U032 ContextCache5[8];

    U032 MonoColor0;
    U032 BufferSwizzle2;
    U032 BufferSwizzle5;
    U032 BufferOffset[6];
    U032 BufferBase[6];
    U032 BufferPitch[5];
    U032 BufferLimit[6];
    U032 Chroma;
    U032 Surface;
    U032 State;
    U032 Notify;
    U032 BufferPixel;
    U032 DmaPitch;
    U032 DvdColorFmt;
    U032 ScaledFormat;
    U032 PatternColor0;
    U032 PatternColor1;
    U032 Pattern[2];
    U032 PatternShape;
    U032 PattColorRam[64];
    U032 Rop3;
    U032 BetaAnd;
    U032 BetaPreMult;
    U032 StoredFmt;
    U032 AbsXRam[10];
    U032 AbsYRam[10];
    U032 AbsUClipXMin;
    U032 AbsUClipXMax;
    U032 AbsUClipYMin;
    U032 AbsUClipYMax;
    U032 AbsUClipAXMin;
    U032 AbsUClipAXMax;
    U032 AbsUClipAYMin;
    U032 AbsUClipAYMax;
    U032 SourceColor;
    U032 Misc24_0;
    U032 XYLogicMisc0;
    U032 XYLogicMisc1;
    U032 XYLogicMisc2;
    U032 XYLogicMisc3;
    U032 ClipX0;
    U032 ClipX1;
    U032 ClipY0;
    U032 ClipY1;
    U032 AbsIClipYMax;
    U032 AbsIClipXMax;
    U032 Passthru0;
    U032 Passthru1;
    U032 Passthru2;
    U032 DimxTexture;
    U032 WdimxTexture;
    U032 DmaStart0;
    U032 DmaStart1;
    U032 DmaLength;
    U032 DmaMisc;
    U032 Misc24_1;
    U032 Misc24_2;
    U032 XMisc;
    U032 YMisc;
    U032 Valid1;
};

//
// This structure represents 3d channel context state.
//
struct _def_grctx3d_nv20
{
    U032 AntiAliasing;
    U032 Blend;
    U032 BlendColor;
    U032 BorderColor0;
    U032 BorderColor1;
    U032 BorderColor2;
    U032 BorderColor3;
    U032 BumpMat00_1;
    U032 BumpMat00_2;
    U032 BumpMat00_3;
    U032 BumpMat01_1;
    U032 BumpMat01_2;
    U032 BumpMat01_3;
    U032 BumpMat10_1;
    U032 BumpMat10_2;
    U032 BumpMat10_3;
    U032 BumpMat11_1;
    U032 BumpMat11_2;
    U032 BumpMat11_3;
    U032 BumpOffset1;
    U032 BumpOffset2;
    U032 BumpOffset3;
    U032 BumpScale1;
    U032 BumpScale2;
    U032 BumpScale3;
    U032 ClearRectX;
    U032 ClearRectY;
    U032 ColorClearValue;
    U032 ColorKeyColor0;
    U032 ColorKeyColor1;
    U032 ColorKeyColor2;
    U032 ColorKeyColor3;
    U032 CombineFactor0_0;
    U032 CombineFactor0_1;
    U032 CombineFactor0_2;
    U032 CombineFactor0_3;
    U032 CombineFactor0_4;
    U032 CombineFactor0_5;
    U032 CombineFactor0_6;
    U032 CombineFactor0_7;
    U032 CombineFactor1_0;
    U032 CombineFactor1_1;
    U032 CombineFactor1_2;
    U032 CombineFactor1_3;
    U032 CombineFactor1_4;
    U032 CombineFactor1_5;
    U032 CombineFactor1_6;
    U032 CombineFactor1_7;
    U032 CombineAlphaI0;
    U032 CombineAlphaI1;
    U032 CombineAlphaI2;
    U032 CombineAlphaI3;
    U032 CombineAlphaI4;
    U032 CombineAlphaI5;
    U032 CombineAlphaI6;
    U032 CombineAlphaI7;
    U032 CombineAlphaO0;
    U032 CombineAlphaO1;
    U032 CombineAlphaO2;
    U032 CombineAlphaO3;
    U032 CombineAlphaO4;
    U032 CombineAlphaO5;
    U032 CombineAlphaO6;
    U032 CombineAlphaO7;
    U032 CombineColorI0;
    U032 CombineColorI1;
    U032 CombineColorI2;
    U032 CombineColorI3;
    U032 CombineColorI4;
    U032 CombineColorI5;
    U032 CombineColorI6;
    U032 CombineColorI7;
    U032 CombineColorO0;
    U032 CombineColorO1;
    U032 CombineColorO2;
    U032 CombineColorO3;
    U032 CombineColorO4;
    U032 CombineColorO5;
    U032 CombineColorO6;
    U032 CombineColorO7;
    U032 CombineCtl;
    U032 CombineSpecFog0;
    U032 CombineSpecFog1;
    U032 Control0;
    U032 Control1;
    U032 Control2;
    U032 Control3;
    U032 FogColor;
    U032 FogParam0;
    U032 FogParam1;
    U032 PointSize;
    U032 SetupRaster;
    U032 ShaderClipMode;
    U032 ShaderCtl;
    U032 ShaderProg;
    U032 SemaphoreOffset;
    U032 ShadowCtl;
    U032 ShadowZSlopeThreshold;
    U032 SpecFogFactor0;
    U032 SpecFogFactor1;
    U032 SurfaceClipX;
    U032 SurfaceClipY;
    U032 TexAddress0;
    U032 TexAddress1;
    U032 TexAddress2;
    U032 TexAddress3;
    U032 TexCtl0_0;
    U032 TexCtl0_1;
    U032 TexCtl0_2;
    U032 TexCtl0_3;
    U032 TexCtl1_0;
    U032 TexCtl1_1;
    U032 TexCtl1_2;
    U032 TexCtl1_3;
    U032 TexCtl2_0;
    U032 TexCtl2_1;
    U032 TexFilter0;
    U032 TexFilter1;
    U032 TexFilter2;
    U032 TexFilter3;
    U032 TexFormat0;
    U032 TexFormat1;
    U032 TexFormat2;
    U032 TexFormat3;
    U032 TexImageRect0;
    U032 TexImageRect1;
    U032 TexImageRect2;
    U032 TexImageRect3;
    U032 TexOffset0;
    U032 TexOffset1;
    U032 TexOffset2;
    U032 TexOffset3;
    U032 TexPallete0;
    U032 TexPallete1;
    U032 TexPallete2;
    U032 TexPallete3;
    U032 WindowClipX[8];
    U032 WindowClipY[8];
    U032 ZCompressOcclude;
    U032 ZStencilClearValue;
    U032 ZClipMax;
    U032 ZClipMin;
    U032 ContextDmaA;
    U032 ContextDmaB;
    U032 ContextDmaVtxA;
    U032 ContextDmaVtxB;
    U032 ZOffsetBias;
    U032 ZOffsetFactor;
    U032 Eyevec0;
    U032 Eyevec1;
    U032 Eyevec2;
    U032 Shadow;
    U032 FdData;
    U032 FdSwatch;
    U032 FdExtras;
    U032 Emission0;
    U032 Emission1;
    U032 Emission2;
    U032 SceneAmb0;
    U032 SceneAmb1;
    U032 SceneAmb2;
    U032 ContextDmaGetState;
    U032 BeginPatch0;
    U032 BeginPatch1;
    U032 BeginPatch2;
    U032 BeginPatch3;
    U032 BeginCurve;
    U032 BeginTrans0;
    U032 BeginTrans1;
    U032 Csv0_D;
    U032 Csv0_C;
    U032 Csv1_A;
    U032 Csv1_B;
    U032 CheopsOffset;
};

struct _def_graphics_channel_nv20
{
    GRCTXCMN_NV20   grCtxCmn;
    GRCTX3D_NV20    grCtx3d;
    GRCTXPIPE_NV20  grCtxPipe;
};

//
// Snapshot/reload state.
//
// Because this state is never exposed to the (OpenGL) driver,
// we can make it chip-dependent.
//
// Must include at least the following:
//
//  - per-fragment state
//  - per-vertex state
//  - vertex array state
//  - primitive assembly state
//
struct _def_graphics_state_nv20 {
    struct PerFragmentState {
        U032 Control0;
        U032 Control1;
        U032 Control2;
        U032 Control3;
        U032 Blend;
    } PerFragmentState;
    struct PerVertexState {
        U032 XlVab[XL_VAB_COUNT];
    } PerVertexState;
    NvU32 glBeginEndState;
    struct VertexArrayState {
        U032 IdxFmt[IDX_FMT_COUNT];
    } VertexArrayState;
    struct PrimitiveAssmState {
        U032 Cas0[CAS0_COUNT];
        U032 Cas1[CAS1_COUNT];
        U032 Cas2[CAS2_COUNT];
        U032 AssmState[ASSM_STATE_COUNT];
    } PrimitiveAssmState;
};

#endif // _NV20_GR_H_
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Microsoft Xbox (1.00.4400) [April 2002] [src]\private\ntos\video\nv20\drivers\resman\kernel\inc\nv10\cr11_ref.h ===
/* NVidia Corporation */ 
/* basis: crush11 manuals 
built on Thu Feb 22 04:10:06 PST 2001*/

#ifndef _CR_REF_H_
#define _CR_REF_H_

#include "nv_ref.h"

#define CR_DRF_DEF(d,r,f,c)  ((CR ## d ## r ## f ## c)<<DRF_SHIFT(CR ## d ## r ## f))
#define CR_DRF_NUM(d,r,f,n)  (((n)&DRF_MASK(CR ## d ## r ## f))<<DRF_SHIFT(CR ## d ## r ## f))
#define CR_DRF_VAL(d,r,f,v)  (((v)>>DRF_SHIFT(CR ## d ## r ## f))&DRF_MASK(CR ## d ## r ## f))

/* dev_cr.ref */
#define CR_IO_CONFIG_ADDR                                0x00000CF8 /* RW-4R */
#define CR_IO_CONFIG_ADDR_CFGE                                31:31 /* RWIVF */
#define CR_IO_CONFIG_ADDR_CFGE_DISABLE                   0x00000000 /* RWI-V */
#define CR_IO_CONFIG_ADDR_CFGE_ENABLE                    0x00000001 /* RW--V */
#define CR_IO_CONFIG_ADDR_BUS                                 23:16 /* RWXVF */
#define CR_IO_CONFIG_ADDR_DEVICE                              15:11 /* RWXVF */
#define CR_IO_CONFIG_ADDR_FUNCTION                             10:8 /* RWXVF */
#define CR_IO_CONFIG_ADDR_REGISTER                              7:2 /* RWXVF */
#define CR_IO_CONFIG_DATA                                0x00000CFC /* RW-4R */
#define CR_IO_CONFIG_DATA_VALUE                                31:0 /* RWXVF */
#define CR_IO_CONFIG_DATA16(i)                       0x00000CFC+2*i /* RW-4R */
#define CR_IO_CONFIG_DATA16_VALUE                              15:0 /* RWXVF */
#define CR_IO_CONFIG_DATA8(i)                          0x00000CFC+i /* RW-4R */
#define CR_IO_CONFIG_DATA8_VALUE                                7:0 /* RWXVF */
/* dev_cr_mem.ref */
#define CR_CMC                                0x800001FC:0x80000100 /* RW--D */
#define CR_CMC_DEBUG_0                                   0x80000140 /* RW-4R */
#define CR_CMC_DEBUG_0_MRS                                      4:4 /* RWIVF */
#define CR_CMC_DEBUG_0_MRS_256                           0x00000000 /* RWI-V */
#define CR_CMC_DEBUG_0_MRS__PROD                         0x00000000 /* RW--V */
#define CR_CMC_DEBUG_0_MRS_2                             0x00000001 /* RW--V */
#define CR_CMC_DEBUG_0_CPU_REQUEST_LOCK                         8:8 /* RWIVF */
#define CR_CMC_DEBUG_0_CPU_REQUEST_LOCK__PROD_C          0x00000000 /* RW--V */
#define CR_CMC_DEBUG_0_CPU_REQUEST_LOCK_DISABLED         0x00000000 /* RWI-V */
#define CR_CMC_DEBUG_0_CPU_REQUEST_LOCK_ENABLED          0x00000001 /* RW--V */
#define CR_CMC_DEBUG_0_XTRA_SETTLE_RR_M2NV                    16:16 /* RWIVF */
#define CR_CMC_DEBUG_0_XTRA_SETTLE_RR_M2NV_DISABLED      0x00000000 /* RWI-V */
#define CR_CMC_DEBUG_0_XTRA_SETTLE_RR_M2NV__PROD         0x00000000 /* RW--V */
#define CR_CMC_DEBUG_0_XTRA_SETTLE_RR_M2NV_ENABLED       0x00000001 /* RW--V */
#define CR_CMC_DEBUG_0_XTRA_SETTLE_RR_M2CPU                   17:17 /* RWIVF */
#define CR_CMC_DEBUG_0_XTRA_SETTLE_RR_M2CPU_DISABLED     0x00000000 /* RWI-V */
#define CR_CMC_DEBUG_0_XTRA_SETTLE_RR_M2CPU__PROD_C      0x00000000 /* RW--V */
#define CR_CMC_DEBUG_0_XTRA_SETTLE_RR_M2CPU_ENABLED      0x00000001 /* RW--V */
#define CR_CMC_DEBUG_0_XTRA_SETTLE_RR_M2AGP                   18:18 /* RWIVF */
#define CR_CMC_DEBUG_0_XTRA_SETTLE_RR_M2AGP_DISABLED     0x00000000 /* RWI-V */
#define CR_CMC_DEBUG_0_XTRA_SETTLE_RR_M2AGP__PROD        0x00000000 /* RW--V */
#define CR_CMC_DEBUG_0_XTRA_SETTLE_RR_M2AGP_ENABLED      0x00000001 /* RW--V */
#define CR_CMC_DEBUG_0_XTRA_SETTLE_RR_M2LDT                   19:19 /* RWIVF */
#define CR_CMC_DEBUG_0_XTRA_SETTLE_RR_M2LDT__PROD        0x00000000 /* RW--V */
#define CR_CMC_DEBUG_0_XTRA_SETTLE_RR_M2LDT_DISABLED     0x00000000 /* RWI-V */
#define CR_CMC_DEBUG_0_XTRA_SETTLE_RR_M2LDT_ENABLED      0x00000001 /* RW--V */
#define CR_CMC_DEBUG_0_XTRA_SETTLE_FA                         24:24 /* RWIVF */
#define CR_CMC_DEBUG_0_XTRA_SETTLE_FA_DISABLED           0x00000000 /* RWI-V */
#define CR_CMC_DEBUG_0_XTRA_SETTLE_FA__PROD              0x00000000 /* RW--V */
#define CR_CMC_DEBUG_0_XTRA_SETTLE_FA_ENABLED            0x00000001 /* RW--V */
#define CR_CMC_DEBUG_0_BURST_INTERRUPT                        27:27 /* RWIVF */
#define CR_CMC_DEBUG_0_BURST_INTERRUPT_ENABLED           0x00000000 /* RWI-V */
#define CR_CMC_DEBUG_0_BURST_INTERRUPT__PROD             0x00000000 /* RW--V */
#define CR_CMC_DEBUG_0_BURST_INTERRUPT_DISABLED          0x00000001 /* RW--V */
#define CR_CMC_DEBUG_0_DRAMC                                  30:28 /* RWIVF */
#define CR_CMC_DEBUG_0_DRAMC_0                           0x00000000 /* RWI-V */
#define CR_CMC_DEBUG_0_DRAMC__PROD                       0x00000000 /* RW--V */
#define CR_CMC_PADCFG_0                                  0x80000144 /* RW-4R */
#define CR_CMC_PADCFG_0_DAT_SLWR_A                              3:0 /* RWIVF */
#define CR_CMC_PADCFG_0_DAT_SLWR_A_1                     0x00000001 /* RWI-V */
#define CR_CMC_PADCFG_0_DAT_SLWF_A                              7:4 /* RWIVF */
#define CR_CMC_PADCFG_0_DAT_SLWF_A_1                     0x00000001 /* RWI-V */
#define CR_CMC_PADCFG_0_DAT_DRVR_A                             11:8 /* RWIVF */
#define CR_CMC_PADCFG_0_DAT_DRVR_A_10                    0x0000000a /* RWI-V */
#define CR_CMC_PADCFG_0_DAT_DRVF_A                            15:12 /* RWIVF */
#define CR_CMC_PADCFG_0_DAT_DRVF_A_10                    0x0000000a /* RWI-V */
#define CR_CMC_PADCFG_0_DAT_SLWR_B                            19:16 /* RWIVF */
#define CR_CMC_PADCFG_0_DAT_SLWR_B_1                     0x00000001 /* RWI-V */
#define CR_CMC_PADCFG_0_DAT_SLWF_B                            23:20 /* RWIVF */
#define CR_CMC_PADCFG_0_DAT_SLWF_B_1                     0x00000001 /* RWI-V */
#define CR_CMC_PADCFG_0_DAT_DRVR_B                            27:24 /* RWIVF */
#define CR_CMC_PADCFG_0_DAT_DRVR_B_10                    0x0000000a /* RWI-V */
#define CR_CMC_PADCFG_0_DAT_DRVF_B                            31:28 /* RWIVF */
#define CR_CMC_PADCFG_0_DAT_DRVF_B_10                    0x0000000a /* RWI-V */
#define CR_CMC_PADCFG_1                                  0x80000148 /* RW-4R */
#define CR_CMC_PADCFG_1_ADR_SLWR_A                              3:0 /* RWIVF */
#define CR_CMC_PADCFG_1_ADR_SLWR_A_1                     0x00000001 /* RWI-V */
#define CR_CMC_PADCFG_1_ADR_SLWF_A                              7:4 /* RWIVF */
#define CR_CMC_PADCFG_1_ADR_SLWF_A_1                     0x00000001 /* RWI-V */
#define CR_CMC_PADCFG_1_ADR_DRVR_A                             11:8 /* RWIVF */
#define CR_CMC_PADCFG_1_ADR_DRVR_A_10                    0x0000000a /* RWI-V */
#define CR_CMC_PADCFG_1_ADR_DRVF_A                            15:12 /* RWIVF */
#define CR_CMC_PADCFG_1_ADR_DRVF_A_10                    0x0000000a /* RWI-V */
#define CR_CMC_PADCFG_1_ADR_SLWR_B                            19:16 /* RWIVF */
#define CR_CMC_PADCFG_1_ADR_SLWR_B_1                     0x00000001 /* RWI-V */
#define CR_CMC_PADCFG_1_ADR_SLWF_B                            23:20 /* RWIVF */
#define CR_CMC_PADCFG_1_ADR_SLWF_B_1                     0x00000001 /* RWI-V */
#define CR_CMC_PADCFG_1_ADR_DRVR_B                            27:24 /* RWIVF */
#define CR_CMC_PADCFG_1_ADR_DRVR_B_10                    0x0000000a /* RWI-V */
#define CR_CMC_PADCFG_1_ADR_DRVF_B                            31:28 /* RWIVF */
#define CR_CMC_PADCFG_1_ADR_DRVF_B_10                    0x0000000a /* RWI-V */
#define CR_CMC_PADCFG_2                                  0x8000014c /* RW-4R */
#define CR_CMC_PADCFG_2_CS_SLWR_A                               3:0 /* RWIVF */
#define CR_CMC_PADCFG_2_CS_SLWR_A_1                      0x00000001 /* RWI-V */
#define CR_CMC_PADCFG_2_CS_SLWF_A                               7:4 /* RWIVF */
#define CR_CMC_PADCFG_2_CS_SLWF_A_1                      0x00000001 /* RWI-V */
#define CR_CMC_PADCFG_2_CS_DRVR_A                              11:8 /* RWIVF */
#define CR_CMC_PADCFG_2_CS_DRVR_A_10                     0x0000000a /* RWI-V */
#define CR_CMC_PADCFG_2_CS_DRVF_A                             15:12 /* RWIVF */
#define CR_CMC_PADCFG_2_CS_DRVF_A_10                     0x0000000a /* RWI-V */
#define CR_CMC_PADCFG_2_CS_SLWR_B                             19:16 /* RWIVF */
#define CR_CMC_PADCFG_2_CS_SLWR_B_1                      0x00000001 /* RWI-V */
#define CR_CMC_PADCFG_2_CS_SLWF_B                             23:20 /* RWIVF */
#define CR_CMC_PADCFG_2_CS_SLWF_B_1                      0x00000001 /* RWI-V */
#define CR_CMC_PADCFG_2_CS_DRVR_B                             27:24 /* RWIVF */
#define CR_CMC_PADCFG_2_CS_DRVR_B_10                     0x0000000a /* RWI-V */
#define CR_CMC_PADCFG_2_CS_DRVF_B                             31:28 /* RWIVF */
#define CR_CMC_PADCFG_2_CS_DRVF_B_10                     0x0000000a /* RWI-V */
#define CR_CMC_PADCFG_3                                  0x80000150 /* RW-4R */
#define CR_CMC_PADCFG_3_DQS_SLWR_A                              3:0 /* RWIVF */
#define CR_CMC_PADCFG_3_DQS_SLWR_A_1                     0x00000001 /* RWI-V */
#define CR_CMC_PADCFG_3_DQS_SLWF_A                              7:4 /* RWIVF */
#define CR_CMC_PADCFG_3_DQS_SLWF_A_1                     0x00000001 /* RWI-V */
#define CR_CMC_PADCFG_3_DQS_DRVR_A                             11:8 /* RWIVF */
#define CR_CMC_PADCFG_3_DQS_DRVR_A_10                    0x0000000a /* RWI-V */
#define CR_CMC_PADCFG_3_DQS_DRVF_A                            15:12 /* RWIVF */
#define CR_CMC_PADCFG_3_DQS_DRVF_A_10                    0x0000000a /* RWI-V */
#define CR_CMC_PADCFG_3_DQS_SLWR_B                            19:16 /* RWIVF */
#define CR_CMC_PADCFG_3_DQS_SLWR_B_1                     0x00000001 /* RWI-V */
#define CR_CMC_PADCFG_3_DQS_SLWF_B                            23:20 /* RWIVF */
#define CR_CMC_PADCFG_3_DQS_SLWF_B_1                     0x00000001 /* RWI-V */
#define CR_CMC_PADCFG_3_DQS_DRVR_B                            27:24 /* RWIVF */
#define CR_CMC_PADCFG_3_DQS_DRVR_B_10                    0x0000000a /* RWI-V */
#define CR_CMC_PADCFG_3_DQS_DRVF_B                            31:28 /* RWIVF */
#define CR_CMC_PADCFG_3_DQS_DRVF_B_10                    0x0000000a /* RWI-V */
#define CR_CMC_PADCFG_4                                  0x80000154 /* RW-4R */
#define CR_CMC_PADCFG_4_CLK_SLWR_A                              3:0 /* RWIVF */
#define CR_CMC_PADCFG_4_CLK_SLWR_A_1                     0x00000001 /* RWI-V */
#define CR_CMC_PADCFG_4_CLK_SLWF_A                              7:4 /* RWIVF */
#define CR_CMC_PADCFG_4_CLK_SLWF_A_1                     0x00000001 /* RWI-V */
#define CR_CMC_PADCFG_4_CLK_DRVR_A                             11:8 /* RWIVF */
#define CR_CMC_PADCFG_4_CLK_DRVR_A_10                    0x0000000a /* RWI-V */
#define CR_CMC_PADCFG_4_CLK_DRVF_A                            15:12 /* RWIVF */
#define CR_CMC_PADCFG_4_CLK_DRVF_A_10                    0x0000000a /* RWI-V */
#define CR_CMC_PADCFG_4_CLK_SLWR_B                            19:16 /* RWIVF */
#define CR_CMC_PADCFG_4_CLK_SLWR_B_1                     0x00000001 /* RWI-V */
#define CR_CMC_PADCFG_4_CLK_SLWF_B                            23:20 /* RWIVF */
#define CR_CMC_PADCFG_4_CLK_SLWF_B_1                     0x00000001 /* RWI-V */
#define CR_CMC_PADCFG_4_CLK_DRVR_B                            27:24 /* RWIVF */
#define CR_CMC_PADCFG_4_CLK_DRVR_B_10                    0x0000000a /* RWI-V */
#define CR_CMC_PADCFG_4_CLK_DRVF_B                            31:28 /* RWIVF */
#define CR_CMC_PADCFG_4_CLK_DRVF_B_10                    0x0000000a /* RWI-V */
#define CR_CMC_PADCFG_5                                  0x80000158 /* RW-4R */
#define CR_CMC_PADCFG_5_AGP_PRIVASRC                            7:0 /* RWIVF */
#define CR_CMC_PADCFG_5_AGP_PRIVASRC_0                   0x00000000 /* RWI-V */
#define CR_CMC_PADCFG_5_V33_PRIVASRC                          23:16 /* RWIVF */
#define CR_CMC_PADCFG_5_V33_PRIVASRC_0                   0x00000000 /* RWI-V */
#define CR_CMC_PADCFG_6                                  0x8000015c /* R--4R */
#define CR_CMC_PADCFG_6_ASRC_IB_V33                             6:0 /* R--UF */
#define CR_CMC_PADCFG_6_ASRC_IB_AGP                            13:7 /* R--UF */
#define CR_CMC_PADCFG_6_ASRC_IB_CPU                           20:14 /* R--UF */
#define CR_CMC_PADCFG_6_ASRC_IB_LDT                           27:21 /* R--UF */
#define CR_CMC_REFCTRL                                   0x80000160 /* RW-4R */
#define CR_CMC_REFCTRL_PUT                                      4:0 /* RWIVF */
#define CR_CMC_REFCTRL_PUT_0                             0x00000000 /* RWI-V */
#define CR_CMC_REFCTRL_GET                                     12:8 /* RWIVF */
#define CR_CMC_REFCTRL_GET_0                             0x00000000 /* RWI-V */
#define CR_CMC_REFCTRL_VALID                                  31:31 /* RWIVF */
#define CR_CMC_REFCTRL_VALID_0                           0x00000000 /* RWI-V */
#define CR_CMC_REFCTRL_VALID_1                           0x00000001 /* RW--V */
#define CR_CMC_NVM                                       0x80000164 /* RW-4R */
#define CR_CMC_NVM_MODE                                         0:0 /* RWIVF */
#define CR_CMC_NVM_MODE_DISABLE                          0x00000000 /* RWI-V */
#define CR_CMC_NVM_MODE__PROD_C                          0x00000000 /* RW--V */
#define CR_CMC_NVM_MODE_ENABLE                           0x00000001 /* RW--V */
#define CR_CMC_NVM_LIMIT                                        7:4 /* RW-VF */
#define CR_CMC_NVM_LIMIT_64K                             0x00000000 /* RW--V */
#define CR_CMC_NVM_LIMIT__PROD_C                         0x00000000 /* RW--V */
#define CR_CMC_NVM_LIMIT_128K                            0x00000001 /* RW--V */
#define CR_CMC_NVM_LIMIT_192K                            0x00000002 /* RW--V */
#define CR_CMC_NVM_LIMIT_256K                            0x00000003 /* RW--V */
#define CR_CMC_NVM_LIMIT_320K                            0x00000004 /* RW--V */
#define CR_CMC_NVM_LIMIT_384K                            0x00000005 /* RW--V */
#define CR_CMC_NVM_LIMIT_448K                            0x00000006 /* RW--V */
#define CR_CMC_NVM_LIMIT_512K                            0x00000007 /* RW--V */
#define CR_CMC_NVM_LIMIT_576K                            0x00000008 /* RW--V */
#define CR_CMC_NVM_LIMIT_640K                            0x00000009 /* RW--V */
#define CR_CMC_NVM_LIMIT_704K                            0x0000000A /* RW--V */
#define CR_CMC_NVM_LIMIT_768K                            0x0000000B /* RW--V */
#define CR_CMC_NVM_LIMIT_832K                            0x0000000C /* RW--V */
#define CR_CMC_NVM_LIMIT_896K                            0x0000000D /* RW--V */
#define CR_CMC_NVM_LIMIT_960K                            0x0000000E /* RW--V */
#define CR_CMC_NVM_LIMIT_1024K                           0x0000000F /* RW--V */
#define CR_CMC_PIN                                       0x80000168 /* RW-4R */
#define CR_CMC_PIN_CKE                                          0:0 /* RWIVF */
#define CR_CMC_PIN_CKE_POWERDOWN                         0x00000000 /* RWI-V */
#define CR_CMC_PIN_CKE_NORMAL                            0x00000001 /* RW--V */
#define CR_CMC_PIN_DQM                                          4:4 /* RWIVF */
#define CR_CMC_PIN_DQM_NORMAL                            0x00000000 /* RW--V */
#define CR_CMC_PIN_DQM_INACTIVE                          0x00000001 /* RWI-V */
#define CR_CMC_PAD                                       0x8000016C /* RW-4R */
#define CR_CMC_PAD_CKE                                          0:0 /* RWIVF */
#define CR_CMC_PAD_CKE_TRISTATE                          0x00000000 /* RWI-V */
#define CR_CMC_PAD_CKE_NORMAL                            0x00000001 /* RW--V */
#define CR_CMC_MEMIO_CFG0                                0x80000170 /* RW-4R */
#define CR_CMC_MEMIO_CFG0_DIB_DELAY                             2:0 /* RWIUF */
#define CR_CMC_MEMIO_CFG0_DIB_DELAY_0                    0x00000000 /* RWI-V */
#define CR_CMC_MEMIO_CFG0_DIB_DELAY__PROD_C              0x00000000 /* RW--V */
#define CR_CMC_MEMIO_CFG0_CHANNEL_ON                            3:3 /* RWIUF */
#define CR_CMC_MEMIO_CFG0_CHANNEL_ON_DISABLED            0x00000000 /* RWI-V */
#define CR_CMC_MEMIO_CFG0_CHANNEL_ON_ENABLED             0x00000001 /* RW--V */
#define CR_CMC_MEMIO_CFG0_CHANNEL_ON__PROD               0x00000001 /* RW--V */
#define CR_CMC_MEMIO_CFG0_QUSE_LATE                             4:4 /* RWIUF */
#define CR_CMC_MEMIO_CFG0_QUSE_LATE_DISABLED             0x00000000 /* RW--V */
#define CR_CMC_MEMIO_CFG0_QUSE_LATE_ENABLED              0x00000001 /* RWI-V */
#define CR_CMC_MEMIO_CFG0_QUSE_LATE__PROD                0x00000001 /* RW--V */
#define CR_CMC_MEMIO_CFG0_DQS_PER_BYTE                          5:5 /* RWIUF */
#define CR_CMC_MEMIO_CFG0_DQS_PER_BYTE_DISABLED          0x00000000 /* RW--V */
#define CR_CMC_MEMIO_CFG0_DQS_PER_BYTE_ENABLED           0x00000001 /* RWI-V */
#define CR_CMC_MEMIO_CFG0_DQS_PER_BYTE__PROD_C           0x00000000 /* RW--V */
#define CR_CMC_MEMIO_CFG0_DQS_EARLY                             6:6 /* RWIUF */
#define CR_CMC_MEMIO_CFG0_DQS_EARLY_DISABLED             0x00000000 /* RWI-V */
#define CR_CMC_MEMIO_CFG0_DQS_EARLY_ENABLED              0x00000001 /* RW--V */
#define CR_CMC_MEMIO_CFG0_DQS_EARLY__PROD_C              0x00000000 /* RW--V */
#define CR_CMC_MEMIO_CFG0_DQSEN_HOLD                            7:7 /* RWIUF */
#define CR_CMC_MEMIO_CFG0_DQSEN_HOLD_DISABLED            0x00000000 /* RWI-V */
#define CR_CMC_MEMIO_CFG0_DQSEN_HOLD_ENABLED             0x00000001 /* RW--V */
#define CR_CMC_MEMIO_CFG0_DQSEN_HOLD__PROD               0x00000000 /* RW--V */
#define CR_CMC_MEMIO_CFG0_DQSEN_PULL                            8:8 /* RWIUF */
#define CR_CMC_MEMIO_CFG0_DQSEN_PULL_DISABLED            0x00000000 /* RWI-V */
#define CR_CMC_MEMIO_CFG0_DQSEN_PULL_ENABLED             0x00000001 /* RW--V */
#define CR_CMC_MEMIO_CFG0_DQSEN_PULL__PROD               0x00000000 /* RW--V */
#define CR_CMC_MEMIO_CFG0_DEN_EARLY                             9:9 /* RWIUF */
#define CR_CMC_MEMIO_CFG0_DEN_EARLY_DISABLED             0x00000000 /* RWI-V */
#define CR_CMC_MEMIO_CFG0_DEN_EARLY_ENABLED              0x00000001 /* RW--V */
#define CR_CMC_MEMIO_CFG0_DEN_EARLY__PROD                0x00000000 /* RW--V */
#define CR_CMC_MEMIO_CFG0_DEN_HOLD                            10:10 /* RWIUF */
#define CR_CMC_MEMIO_CFG0_DEN_HOLD_DISABLED              0x00000000 /* RWI-V */
#define CR_CMC_MEMIO_CFG0_DEN_HOLD_ENABLED               0x00000001 /* RW--V */
#define CR_CMC_MEMIO_CFG0_DEN_HOLD__PROD                 0x00000000 /* RW--V */
#define CR_CMC_MEMIO_CFG0_READ_POINTER_INIT                   12:11 /* RWIUF */
#define CR_CMC_MEMIO_CFG0_READ_POINTER_INIT_0            0x00000000 /* RWI-V */
#define CR_CMC_MEMIO_CFG0_READ_POINTER_INIT_1            0x00000001 /* RW--V */
#define CR_CMC_MEMIO_CFG0_READ_POINTER_INIT_2            0x00000002 /* RW--V */
#define CR_CMC_MEMIO_CFG0_READ_POINTER_INIT__PROD_C      0x00000000 /* RW--V */
#define CR_CMC_MEMIO_CFG0_HALF_CAS                            13:13 /* RWIUF */
#define CR_CMC_MEMIO_CFG0_HALF_CAS_DISABLED              0x00000000 /* RWI-V */
#define CR_CMC_MEMIO_CFG0_HALF_CAS_ENABLED               0x00000001 /* RW--V */
#define CR_CMC_MEMIO_CFG0_HALF_CAS_ENABLED__PROD_C       0x00000000 /* RW--V */
#define CR_CMC_MEMIO_CFG0_SPARE0                              14:14 /* RWIUF */
#define CR_CMC_MEMIO_CFG0_SPARE0_INIT                    0x00000000 /* RWI-V */
#define CR_CMC_MEMIO_CFG0_SPARE0__PROD                   0x00000000 /* RW--V */
#define CR_CMC_MEMIO_CFG1                                0x80000174 /* RW-4R */
#define CR_CMC_MEMIO_CFG1_DIB_DELAY                             2:0 /* RWIUF */
#define CR_CMC_MEMIO_CFG1_DIB_DELAY_0                    0x00000000 /* RWI-V */
#define CR_CMC_MEMIO_CFG1_DIB_DELAY__PROD_C              0x00000000 /* RW--V */
#define CR_CMC_MEMIO_CFG1_CHANNEL_ON                            3:3 /* RWIUF */
#define CR_CMC_MEMIO_CFG1_CHANNEL_ON_DISABLED            0x00000000 /* RWI-V */
#define CR_CMC_MEMIO_CFG1_CHANNEL_ON_ENABLED             0x00000001 /* RW--V */
#define CR_CMC_MEMIO_CFG1_CHANNEL_ON__PROD               0x00000001 /* RW--V */
#define CR_CMC_MEMIO_CFG1_QUSE_LATE                             4:4 /* RWIUF */
#define CR_CMC_MEMIO_CFG1_QUSE_LATE_DISABLED             0x00000000 /* RW--V */
#define CR_CMC_MEMIO_CFG1_QUSE_LATE_ENABLED              0x00000001 /* RWI-V */
#define CR_CMC_MEMIO_CFG1_QUSE_LATE__PROD                0x00000001 /* RW--V */
#define CR_CMC_MEMIO_CFG1_DQS_PER_BYTE                          5:5 /* RWIUF */
#define CR_CMC_MEMIO_CFG1_DQS_PER_BYTE_DISABLED          0x00000000 /* RW--V */
#define CR_CMC_MEMIO_CFG1_DQS_PER_BYTE_ENABLED           0x00000001 /* RWI-V */
#define CR_CMC_MEMIO_CFG1_DQS_PER_BYTE__PROD_C           0x00000000 /* RW--V */
#define CR_CMC_MEMIO_CFG1_DQS_EARLY                             6:6 /* RWIUF */
#define CR_CMC_MEMIO_CFG1_DQS_EARLY_DISABLED             0x00000000 /* RWI-V */
#define CR_CMC_MEMIO_CFG1_DQS_EARLY_ENABLED              0x00000001 /* RW--V */
#define CR_CMC_MEMIO_CFG1_DQS_EARLY__PROD_C              0x00000000 /* RW--V */
#define CR_CMC_MEMIO_CFG1_DQSEN_HOLD                            7:7 /* RWIUF */
#define CR_CMC_MEMIO_CFG1_DQSEN_HOLD_DISABLED            0x00000000 /* RWI-V */
#define CR_CMC_MEMIO_CFG1_DQSEN_HOLD_ENABLED             0x00000001 /* RW--V */
#define CR_CMC_MEMIO_CFG1_DQSEN_HOLD__PROD               0x00000000 /* RW--V */
#define CR_CMC_MEMIO_CFG1_DQSEN_PULL                            8:8 /* RWIUF */
#define CR_CMC_MEMIO_CFG1_DQSEN_PULL_DISABLED            0x00000000 /* RWI-V */
#define CR_CMC_MEMIO_CFG1_DQSEN_PULL_ENABLED             0x00000001 /* RW--V */
#define CR_CMC_MEMIO_CFG1_DQSEN_PULL__PROD               0x00000000 /* RW--V */
#define CR_CMC_MEMIO_CFG1_DEN_EARLY                             9:9 /* RWIUF */
#define CR_CMC_MEMIO_CFG1_DEN_EARLY_DISABLED             0x00000000 /* RWI-V */
#define CR_CMC_MEMIO_CFG1_DEN_EARLY_ENABLED              0x00000001 /* RW--V */
#define CR_CMC_MEMIO_CFG1_DEN_EARLY__PROD                0x00000000 /* RW--V */
#define CR_CMC_MEMIO_CFG1_DEN_HOLD                            10:10 /* RWIUF */
#define CR_CMC_MEMIO_CFG1_DEN_HOLD_DISABLED              0x00000000 /* RWI-V */
#define CR_CMC_MEMIO_CFG1_DEN_HOLD_ENABLED               0x00000001 /* RW--V */
#define CR_CMC_MEMIO_CFG1_DEN_HOLD__PROD                 0x00000000 /* RW--V */
#define CR_CMC_MEMIO_CFG1_READ_POINTER_INIT                   12:11 /* RWIUF */
#define CR_CMC_MEMIO_CFG1_READ_POINTER_INIT_0            0x00000000 /* RWI-V */
#define CR_CMC_MEMIO_CFG1_READ_POINTER_INIT_1            0x00000001 /* RW--V */
#define CR_CMC_MEMIO_CFG1_READ_POINTER_INIT_2            0x00000002 /* RW--V */
#define CR_CMC_MEMIO_CFG1_READ_POINTER_INIT__PROD_C      0x00000000 /* RW--V */
#define CR_CMC_MEMIO_CFG1_HALF_CAS                            13:13 /* RWIUF */
#define CR_CMC_MEMIO_CFG1_HALF_CAS_DISABLED              0x00000000 /* RWI-V */
#define CR_CMC_MEMIO_CFG1_HALF_CAS_ENABLED               0x00000001 /* RW--V */
#define CR_CMC_MEMIO_CFG1_HALF_CAS_ENABLED__PROD_C       0x00000000 /* RW--V */
#define CR_CMC_MEMIO_CFG2                                0x80000178 /* RW-4R */
#define CR_CMC_MEMIO_CFG2_PDL_MULT                              7:0 /* RWIUF */
#define CR_CMC_MEMIO_CFG2_PDL_MULT_MIN                   0x00000000 /* RWI-V */
#define CR_CMC_MEMIO_CFG2_PDL_MULT__PROD_C               0x00000000 /* RW--V */
#define CR_CMC_MEMIO_CFG2_PDL_SUB                              15:8 /* RWIUF */
#define CR_CMC_MEMIO_CFG2_PDL_SUB_MIN                    0x00000000 /* RWI-V */
#define CR_CMC_MEMIO_CFG2_PDL_SUB__PROD                  0x00000007 /* RW--V */
#define CR_CMC_MEMIO_CFG2_PDL_FORCE_VAL                       23:16 /* RWIUF */
#define CR_CMC_MEMIO_CFG2_PDL_FORCE_VAL_MIN              0x00000000 /* RWI-V */
#define CR_CMC_MEMIO_CFG2_PDL_FORCE_VAL__PROD            0x00000000 /* RW--V */
#define CR_CMC_MEMIO_CFG2_PDL_CAL                             24:24 /* RWIUF */
#define CR_CMC_MEMIO_CFG2_PDL_CAL_DISABLE                0x00000000 /* RWI-V */
#define CR_CMC_MEMIO_CFG2_PDL_CAL_ENABLE                 0x00000001 /* RW--V */
#define CR_CMC_MEMIO_CFG2_PDL_CAL__PROD                  0x00000001 /* RW--V */
#define CR_CMC_CFG0                                      0x8000017c /* RW-4R */
#define CR_CMC_CFG0_PART                                        0:0 /* RWIVF */
#define CR_CMC_CFG0_PART_1                               0x00000000 /* RWI-V */
#define CR_CMC_CFG0_PART__PROD_C                         0x00000000 /* RW--V */
#define CR_CMC_CFG0_PART_2                               0x00000001 /* RW--V */
#define CR_CMC_CFG0_PART_INTLV                                  4:4 /* RWIVF */
#define CR_CMC_CFG0_PART_INTLV_32B                       0x00000000 /* RWI-V */
#define CR_CMC_CFG0_PART_INTLV__PROD_C                   0x00000000 /* RW--V */
#define CR_CMC_CFG0_PART_INTLV_64B                       0x00000001 /* RW--V */
#define CR_CMC_CFG0_TOP_OF_FB				       10:6 /* RWIVF */
#define CR_CMC_CFG0_TOP_OF_FB_1MB                        0x00000000 /* RW--V */
#define CR_CMC_CFG0_TOP_OF_FB_2MB                        0x00000001 /* RW--V */
#define CR_CMC_CFG0_TOP_OF_FB_3MB                        0x00000002 /* RW--V */
#define CR_CMC_CFG0_TOP_OF_FB_4MB                        0x00000003 /* RW--V */
#define CR_CMC_CFG0_TOP_OF_FB_5MB                        0x00000004 /* RW--V */
#define CR_CMC_CFG0_TOP_OF_FB_6MB                        0x00000005 /* RW--V */
#define CR_CMC_CFG0_TOP_OF_FB_7MB                        0x00000006 /* RW--V */
#define CR_CMC_CFG0_TOP_OF_FB_8MB                        0x00000007 /* RW--V */
#define CR_CMC_CFG0_TOP_OF_FB_9MB                        0x00000008 /* RW--V */
#define CR_CMC_CFG0_TOP_OF_FB_10MB                       0x00000009 /* RW--V */
#define CR_CMC_CFG0_TOP_OF_FB_11MB                       0x0000000A /* RW--V */
#define CR_CMC_CFG0_TOP_OF_FB_12MB                       0x0000000B /* RW--V */
#define CR_CMC_CFG0_TOP_OF_FB_13MB                       0x0000000C /* RW--V */
#define CR_CMC_CFG0_TOP_OF_FB_14MB                       0x0000000D /* RW--V */
#define CR_CMC_CFG0_TOP_OF_FB_15MB                       0x0000000E /* RW--V */
#define CR_CMC_CFG0_TOP_OF_FB_16MB                       0x0000000F /* RWI-V */
#define CR_CMC_CFG0_TOP_OF_FB_17MB                       0x00000010 /* RW--V */
#define CR_CMC_CFG0_TOP_OF_FB_18MB                       0x00000011 /* RW--V */
#define CR_CMC_CFG0_TOP_OF_FB_19MB                       0x00000012 /* RW--V */
#define CR_CMC_CFG0_TOP_OF_FB_20MB                       0x00000013 /* RW--V */
#define CR_CMC_CFG0_TOP_OF_FB_21MB                       0x00000014 /* RW--V */
#define CR_CMC_CFG0_TOP_OF_FB_22MB                       0x00000015 /* RW--V */
#define CR_CMC_CFG0_TOP_OF_FB_23MB                       0x00000016 /* RW--V */
#define CR_CMC_CFG0_TOP_OF_FB_24MB                       0x00000017 /* RW--V */
#define CR_CMC_CFG0_TOP_OF_FB_25MB                       0x00000018 /* RW--V */
#define CR_CMC_CFG0_TOP_OF_FB_26MB                       0x00000019 /* RW--V */
#define CR_CMC_CFG0_TOP_OF_FB_27MB                       0x0000001A /* RW--V */
#define CR_CMC_CFG0_TOP_OF_FB_28MB                       0x0000001B /* RW--V */
#define CR_CMC_CFG0_TOP_OF_FB_29MB                       0x0000001C /* RW--V */
#define CR_CMC_CFG0_TOP_OF_FB_30MB                       0x0000001D /* RW--V */
#define CR_CMC_CFG0_TOP_OF_FB_31MB                       0x0000001E /* RW--V */
#define CR_CMC_CFG0_TOP_OF_FB_32MB                       0x0000001F /* RW--V */
#define CR_CMC_CFG0_TOP_OF_FB__PROD                      0x0000001F /* RW--V */
#define CR_CMC_CFG0_RAMTYPE                                   12:12 /* RWIVF */
#define CR_CMC_CFG0_RAMTYPE_SDR                          0x00000000 /* RWI-V */
#define CR_CMC_CFG0_RAMTYPE__PROD_C                      0x00000000 /* RW--V */
#define CR_CMC_CFG0_RAMTYPE_DDR                          0x00000001 /* RW--V */
#define CR_CMC_CFG0_BURST_INT_RD2RD                           16:16 /* RWIVF */
#define CR_CMC_CFG0_BURST_INT_RD2RD_DISABLED             0x00000000 /* RW--V */
#define CR_CMC_CFG0_BURST_INT_RD2RD_ENABLED              0x00000001 /* RWI-V */
#define CR_CMC_CFG0_BURST_INT_RD2RD__PROD                0x00000001 /* RW--V */
#define CR_CMC_CFG0_BURST_INT_WR2WR                           17:17 /* RWIVF */
#define CR_CMC_CFG0_BURST_INT_WR2WR_DISABLED             0x00000000 /* RW--V */
#define CR_CMC_CFG0_BURST_INT_WR2WR_ENABLED              0x00000001 /* RWI-V */
#define CR_CMC_CFG0_BURST_INT_WR2WR__PROD                0x00000001 /* RW--V */
#define CR_CMC_CFG0_BURST_INT_RD2PRE                          18:18 /* RWIVF */
#define CR_CMC_CFG0_BURST_INT_RD2PRE_DISABLED            0x00000000 /* RW--V */
#define CR_CMC_CFG0_BURST_INT_RD2PRE_ENABLED             0x00000001 /* RWI-V */
#define CR_CMC_CFG0_BURST_INT_RD2PRE__PROD               0x00000001 /* RW--V */
#define CR_CMC_CFG0_BURST_INT_WR2PRE                          19:19 /* RWIVF */
#define CR_CMC_CFG0_BURST_INT_WR2PRE_DISABLED            0x00000000 /* RW--V */
#define CR_CMC_CFG0_BURST_INT_WR2PRE_ENABLED             0x00000001 /* RWI-V */
#define CR_CMC_CFG0_BURST_INT_WR2PRE__PROD               0x00000001 /* RW--V */
#define CR_CMC_CFG0_AUTO_PRE_RD                               24:24 /* RWIVF */
#define CR_CMC_CFG0_AUTO_PRE_RD_DISABLED                 0x00000000 /* RW--V */
#define CR_CMC_CFG0_AUTO_PRE_RD_ENABLED                  0x00000001 /* RWI-V */
#define CR_CMC_CFG0_AUTO_PRE_RD__PROD                    0x00000001 /* RW--V */
#define CR_CMC_CFG0_AUTO_PRE_WR                               25:25 /* RWIVF */
#define CR_CMC_CFG0_AUTO_PRE_WR_DISABLED                 0x00000000 /* RW--V */
#define CR_CMC_CFG0_AUTO_PRE_WR_ENABLED                  0x00000001 /* RWI-V */
#define CR_CMC_CFG0_AUTO_PRE_WR__PROD                    0x00000001 /* RW--V */
#define CR_CMC_CFG0_SYNC_MODE                                 26:26 /* RWIVF */
#define CR_CMC_CFG0_SYNC_MODE_DISABLED                   0x00000000 /* RW--V */
#define CR_CMC_CFG0_SYNC_MODE_ENABLED                    0x00000001 /* RWI-V */
#define CR_CMC_CFG0_SYNC_MODE__PROD_C                    0x00000001 /* RW--V */
#define CR_CMC_CFG0_ASSERT_QUSE                               27:27 /* RWIVF */
#define CR_CMC_CFG0_ASSERT_QUSE_0                        0x00000000 /* RW--V */
#define CR_CMC_CFG0_ASSERT_QUSE_1                        0x00000001 /* RWI-V */
#define CR_CMC_CFG0_ASSERT_QUSE__PROD                    0x00000001 /* RW--V */
#define CR_CMC_CFG0_STROBED_DATA                              28:28 /* RWIVF */
#define CR_CMC_CFG0_STROBED_DATA_0                       0x00000000 /* RW--V */
#define CR_CMC_CFG0_STROBED_DATA_1                       0x00000001 /* RWI-V */
#define CR_CMC_CFG0_STROBED_DATA__PROD                   0x00000001 /* RW--V */
#define CR_CMC_CFG0_TWO_CLK_ADDR                              29:29 /* RWIVF */
#define CR_CMC_CFG0_TWO_CLK_ADDR_DISABLE                 0x00000000 /* RWI-V */
#define CR_CMC_CFG0_TWO_CLK_ADDR__PROD_C                 0x00000000 /* RW--V */
#define CR_CMC_CFG0_TWO_CLK_ADDR_ENABLE                  0x00000001 /* RW--V */
#define CR_CMC_MEMIO_STAT0                               0x80000180 /* R--4R */
#define CR_CMC_MEMIO_STAT0_DCOUNT0                              7:0 /* R--UF */
#define CR_CMC_MEMIO_STAT0_DCOUNT1                             15:8 /* R--UF */
#define CR_CMC_MEMIO_STAT0_DCOUNT2                            23:16 /* R--UF */
#define CR_CMC_MEMIO_STAT0_DCOUNT3                            31:24 /* R--UF */
#define CR_CMC_MEMIO_STAT1                               0x80000184 /* R--4R */
#define CR_CMC_MEMIO_STAT1_DCOUNT4                              7:0 /* R--UF */
#define CR_CMC_MEMIO_STAT1_DCOUNT5                             15:8 /* R--UF */
#define CR_CMC_MEMIO_STAT1_DCOUNT6                            23:16 /* R--UF */
#define CR_CMC_MEMIO_STAT1_DCOUNT7                            31:24 /* R--UF */
#define CR_CMC_MEMIO_STAT2                               0x80000188 /* R--4R */
#define CR_CMC_MEMIO_STAT2_CALDLY0                              7:0 /* R--UF */
#define CR_CMC_MEMIO_STAT2_CALDLY1                             15:8 /* R--UF */
#define CR_CMC_MEMIO_STAT2_CALDLY2                            23:16 /* R--UF */
#define CR_CMC_MEMIO_STAT2_CALDLY3                            31:24 /* R--UF */
#define CR_CMC_MEMIO_STAT3                               0x8000018C /* R--4R */
#define CR_CMC_MEMIO_STAT3_CALDLY4                              7:0 /* R--UF */
#define CR_CMC_MEMIO_STAT3_CALDLY5                             15:8 /* R--UF */
#define CR_CMC_MEMIO_STAT3_CALDLY6                            23:16 /* R--UF */
#define CR_CMC_MEMIO_STAT3_CALDLY7                            31:24 /* R--UF */
#define CR_CMC_TIMING0                                   0x80000190 /* RW-4R */
#define CR_CMC_TIMING0_RC                                       4:0 /* RWIVF */
#define CR_CMC_TIMING0_RC_31                             0x0000001F /* RWI-V */
#define CR_CMC_TIMING0_RC__PROD_C                        0x0000001F /* RW--V */
#define CR_CMC_TIMING0_RFC                                     12:8 /* RWIVF */
#define CR_CMC_TIMING0_RFC_31                            0x0000001F /* RWI-V */
#define CR_CMC_TIMING0_RFC__PROD_C                       0x0000001F /* RW--V */
#define CR_CMC_TIMING0_RAS                                    19:15 /* RWIVF */
#define CR_CMC_TIMING0_RAS_31                            0x0000001F /* RWI-V */
#define CR_CMC_TIMING0_RAS__PROD_C                       0x0000001F /* RW--V */
#define CR_CMC_TIMING0_RD_RCD                                 23:20 /* RWIVF */
#define CR_CMC_TIMING0_RD_RCD_15                         0x0000000F /* RWI-V */
#define CR_CMC_TIMING0_RD_RCD__PROD_C                    0x0000000F /* RW--V */
#define CR_CMC_TIMING0_WR_RCD                                 27:24 /* RWIVF */
#define CR_CMC_TIMING0_WR_RCD_15                         0x0000000F /* RWI-V */
#define CR_CMC_TIMING0_WR_RCD__PROD_C                    0x0000000F /* RW--V */
#define CR_CMC_TIMING0_RP                                     31:28 /* RWIVF */
#define CR_CMC_TIMING0_RP_15                             0x0000000F /* RWI-V */
#define CR_CMC_TIMING0_RP__PROD_C                        0x0000000F /* RW--V */
#define CR_CMC_TIMING1                                   0x80000194 /* RW-4R */
#define CR_CMC_TIMING1_R2W                                      6:4 /* RWIVF */
#define CR_CMC_TIMING1_R2W_7                             0x00000007 /* RWI-V */
#define CR_CMC_TIMING1_R2W__PROD_C                       0x00000007 /* RW--V */
#define CR_CMC_TIMING1_R2P                                     10:8 /* RWIVF */
#define CR_CMC_TIMING1_R2P_7                             0x00000007 /* RWI-V */
#define CR_CMC_TIMING1_R2P__PROD_C                       0x00000007 /* RW--V */
#define CR_CMC_TIMING1_REXT                                   13:12 /* RWIVF */
#define CR_CMC_TIMING1_REXT_1                            0x00000001 /* RW--V */
#define CR_CMC_TIMING1_REXT_2                            0x00000002 /* RWI-V */
#define CR_CMC_TIMING1_REXT__PROD_C                      0x00000002 /* RW--V */
#define CR_CMC_TIMING1_W2R                                    18:16 /* RWIVF */
#define CR_CMC_TIMING1_W2R_7                             0x00000007 /* RWI-V */
#define CR_CMC_TIMING1_W2R__PROD_C                       0x00000007 /* RW--V */
#define CR_CMC_TIMING1_W2P                                    22:20 /* RWIVF */
#define CR_CMC_TIMING1_W2P_7                             0x00000007 /* RWI-V */
#define CR_CMC_TIMING1_W2P__PROD_C                       0x00000007 /* RW--V */
#define CR_CMC_TIMING1_RRD                                    26:24 /* RWIVF */
#define CR_CMC_TIMING1_RRD_7                             0x00000007 /* RWI-V */
#define CR_CMC_TIMING1_RRD__PROD_C                       0x00000007 /* RW--V */
#define CR_CMC_TIMING1_DOE_TYPE                               27:27 /* RWIVF */
#define CR_CMC_TIMING1_DOE_TYPE_0                        0x00000000 /* RWI-V */
#define CR_CMC_TIMING1_DOE_TYPE__PROD                    0x00000000 /* RW--V */
#define CR_CMC_TIMING1_DOE_DLY                                30:28 /* RWIVF */
#define CR_CMC_TIMING1_DOE_DLY_7                         0x00000007 /* RWI-V */
#define CR_CMC_TIMING1_DOE_DLY__PROD_C                   0x00000007 /* RW--V */
#define CR_CMC_TIMING2                                   0x80000198 /* RW-4R */
#define CR_CMC_TIMING2_REFRESH_LO                               4:0 /* C-IVF */
#define CR_CMC_TIMING2_REFRESH_LO_1F                     0x0000001F /* C-I-V */
#define CR_CMC_TIMING2_REFRESH_LO__PROD                  0x0000001F /* C---V */
#define CR_CMC_TIMING2_REFRESH                                 15:5 /* RWIVF */
#define CR_CMC_TIMING2_REFRESH_0                         0x00000000 /* RW--V */
#define CR_CMC_TIMING2_REFRESH_2                         0x00000002 /* RWI-V */
#define CR_CMC_TIMING2_REFRESH__PROD_C                   0x00000002 /* RW--V */
#define CR_CMC_TIMING2_QUSE                                   18:16 /* RWIVF */
#define CR_CMC_TIMING2_QUSE_MIN                          0x00000000 /* RW--V */
#define CR_CMC_TIMING2_QUSE_MAX                          0x00000007 /* RWI-V */
#define CR_CMC_TIMING2_QUSE__PROD_C                      0x00000007 /* RW--V */
#define CR_CMC_TIMING2_QINC                                   21:19 /* RWIVF */
#define CR_CMC_TIMING2_QINC_MIN                          0x00000000 /* RW--V */
#define CR_CMC_TIMING2_QINC_MAX                          0x00000007 /* RWI-V */
#define CR_CMC_TIMING2_QINC__PROD_C                      0x00000007 /* RW--V */
#define CR_CMC_TIMING2_RDV                                    24:22 /* RWIVF */
#define CR_CMC_TIMING2_RDV_MIN                           0x00000002 /* RW--V */
#define CR_CMC_TIMING2_RDV_MAX                           0x00000007 /* RWI-V */
#define CR_CMC_TIMING2_RDV__PROD_C                       0x00000007 /* RW--V */
#define CR_CMC_TIMING2_QNEW                                   27:25 /* RWIVF */
#define CR_CMC_TIMING2_QNEW_MIN                          0x00000000 /* RW--V */
#define CR_CMC_TIMING2_QNEW_MAX                          0x00000007 /* RWI-V */
#define CR_CMC_TIMING2_QNEW__PROD_C                      0x00000007 /* RW--V */
#define CR_CMC_TIMING2_QPULL                                  30:28 /* RWIVF */
#define CR_CMC_TIMING2_QPULL_MIN                         0x00000000 /* RW--V */
#define CR_CMC_TIMING2_QPULL__PROD                       0x00000000 /* RW--V */
#define CR_CMC_TIMING2_QPULL_MAX                         0x00000007 /* RWI-V */
#define CR_CMC_ARB_PREDIVIDER                            0x8000019C /* RW-4R */
#define CR_CMC_ARB_PREDIVIDER_DIV                               7:0 /* RWIUF */
#define CR_CMC_ARB_PREDIVIDER_DIV_20                     0x00000020 /* RWIUV */
#define CR_CMC_MRS_DIMM0                                 0x800001A0 /* RW-4R */
#define CR_CMC_MRS_DIMM0_A0                                     0:0 /* RWIVF */
#define CR_CMC_MRS_DIMM0_A0_0                            0x00000000 /* RWI-V */
#define CR_CMC_MRS_DIMM0_A0_1                            0x00000001 /* RW--V */
#define CR_CMC_MRS_DIMM0_A1                                     1:1 /* RWIVF */
#define CR_CMC_MRS_DIMM0_A1_0                            0x00000000 /* RW--V */
#define CR_CMC_MRS_DIMM0_A1_1                            0x00000001 /* RWI-V */
#define CR_CMC_MRS_DIMM0_A2                                     2:2 /* RWIVF */
#define CR_CMC_MRS_DIMM0_A2_0                            0x00000000 /* RWI-V */
#define CR_CMC_MRS_DIMM0_A2_1                            0x00000001 /* RW--V */
#define CR_CMC_MRS_DIMM0_A3                                     3:3 /* RWIVF */
#define CR_CMC_MRS_DIMM0_A3_0                            0x00000000 /* RW--V */
#define CR_CMC_MRS_DIMM0_A3_1                            0x00000001 /* RWI-V */
#define CR_CMC_MRS_DIMM0_A4                                     4:4 /* RWIVF */
#define CR_CMC_MRS_DIMM0_A4_0                            0x00000000 /* RWI-V */
#define CR_CMC_MRS_DIMM0_A4_1                            0x00000001 /* RW--V */
#define CR_CMC_MRS_DIMM0_A5                                     5:5 /* RWIVF */
#define CR_CMC_MRS_DIMM0_A5_0                            0x00000000 /* RW--V */
#define CR_CMC_MRS_DIMM0_A5_1                            0x00000001 /* RWI-V */
#define CR_CMC_MRS_DIMM0_A6                                     6:6 /* RWIVF */
#define CR_CMC_MRS_DIMM0_A6_0                            0x00000000 /* RWI-V */
#define CR_CMC_MRS_DIMM0_A6_1                            0x00000001 /* RW--V */
#define CR_CMC_MRS_DIMM0_A7                                     7:7 /* RWIVF */
#define CR_CMC_MRS_DIMM0_A7_0                            0x00000000 /* RWI-V */
#define CR_CMC_MRS_DIMM0_A7_1                            0x00000001 /* RW--V */
#define CR_CMC_MRS_DIMM0_A8                                     8:8 /* RWIVF */
#define CR_CMC_MRS_DIMM0_A8_0                            0x00000000 /* RWI-V */
#define CR_CMC_MRS_DIMM0_A8_1                            0x00000001 /* RW--V */
#define CR_CMC_MRS_DIMM0_A9                                     9:9 /* RWIVF */
#define CR_CMC_MRS_DIMM0_A9_0                            0x00000000 /* RWI-V */
#define CR_CMC_MRS_DIMM0_A9_1                            0x00000001 /* RW--V */
#define CR_CMC_MRS_DIMM0_A10                                  10:10 /* RWIVF */
#define CR_CMC_MRS_DIMM0_A10_0                           0x00000000 /* RWI-V */
#define CR_CMC_MRS_DIMM0_A10_1                           0x00000001 /* RW--V */
#define CR_CMC_MRS_DIMM0_A11                                  11:11 /* RWIVF */
#define CR_CMC_MRS_DIMM0_A11_0                           0x00000000 /* RWI-V */
#define CR_CMC_MRS_DIMM0_A11_1                           0x00000001 /* RW--V */
#define CR_CMC_MRS_DIMM0_A12                                  12:12 /* RWIVF */
#define CR_CMC_MRS_DIMM0_A12_0                           0x00000000 /* RWI-V */
#define CR_CMC_MRS_DIMM0_A12_1                           0x00000001 /* RW--V */
#define CR_CMC_MRS_DIMM0_BA1                                  20:20 /* RWIVF */
#define CR_CMC_MRS_DIMM0_BA1_0                           0x00000000 /* RWI-V */
#define CR_CMC_MRS_DIMM0_BA1_1                           0x00000001 /* RW--V */
#define CR_CMC_MRS_DIMM0_BA0                                  21:21 /* RWIVF */
#define CR_CMC_MRS_DIMM0_BA0_0                           0x00000000 /* RWI-V */
#define CR_CMC_MRS_DIMM0_BA0_1                           0x00000001 /* RW--V */
#define CR_CMC_MRS_DIMM0_CMD			              31:31 /* RWIVF */
#define CR_CMC_MRS_DIMM0_CMD_NOT_PENDING		 0x00000000 /* RWI-V */
#define CR_CMC_MRS_DIMM0_CMD_PENDING			 0x00000001 /* R---V */
#define CR_CMC_MRS_DIMM0_CMD_WRITE     		       	 0x00000001 /* -W--T */
#define CR_CMC_EMRS_DIMM0                                0x800001A4 /* RW-4R */
#define CR_CMC_EMRS_DIMM0_A0                                    0:0 /* RWIVF */
#define CR_CMC_EMRS_DIMM0_A0_0                           0x00000000 /* RW--V */
#define CR_CMC_EMRS_DIMM0_A0_1                           0x00000001 /* RWI-V */
#define CR_CMC_EMRS_DIMM0_A1                                    1:1 /* RWIVF */
#define CR_CMC_EMRS_DIMM0_A1_0                           0x00000000 /* RWI-V */
#define CR_CMC_EMRS_DIMM0_A1_1                           0x00000001 /* RW--V */
#define CR_CMC_EMRS_DIMM0_A2                                    2:2 /* RWIVF */
#define CR_CMC_EMRS_DIMM0_A2_0                           0x00000000 /* RWI-V */
#define CR_CMC_EMRS_DIMM0_A2_1                           0x00000001 /* RW--V */
#define CR_CMC_EMRS_DIMM0_A3                                    3:3 /* RWIVF */
#define CR_CMC_EMRS_DIMM0_A3_0                           0x00000000 /* RWI-V */
#define CR_CMC_EMRS_DIMM0_A3_1                           0x00000001 /* RW--V */
#define CR_CMC_EMRS_DIMM0_A4                                    4:4 /* RWIVF */
#define CR_CMC_EMRS_DIMM0_A4_0                           0x00000000 /* RWI-V */
#define CR_CMC_EMRS_DIMM0_A4_1                           0x00000001 /* RW--V */
#define CR_CMC_EMRS_DIMM0_A5                                    5:5 /* RWIVF */
#define CR_CMC_EMRS_DIMM0_A5_0                           0x00000000 /* RWI-V */
#define CR_CMC_EMRS_DIMM0_A5_1                           0x00000001 /* RW--V */
#define CR_CMC_EMRS_DIMM0_A6                                    6:6 /* RWIVF */
#define CR_CMC_EMRS_DIMM0_A6_0                           0x00000000 /* RWI-V */
#define CR_CMC_EMRS_DIMM0_A6_1                           0x00000001 /* RW--V */
#define CR_CMC_EMRS_DIMM0_A7                                    7:7 /* RWIVF */
#define CR_CMC_EMRS_DIMM0_A7_0                           0x00000000 /* RWI-V */
#define CR_CMC_EMRS_DIMM0_A7_1                           0x00000001 /* RW--V */
#define CR_CMC_EMRS_DIMM0_A8                                    8:8 /* RWIVF */
#define CR_CMC_EMRS_DIMM0_A8_0                           0x00000000 /* RWI-V */
#define CR_CMC_EMRS_DIMM0_A8_1                           0x00000001 /* RW--V */
#define CR_CMC_EMRS_DIMM0_A9                                    9:9 /* RWIVF */
#define CR_CMC_EMRS_DIMM0_A9_0                           0x00000000 /* RWI-V */
#define CR_CMC_EMRS_DIMM0_A9_1                           0x00000001 /* RW--V */
#define CR_CMC_EMRS_DIMM0_A10                                 10:10 /* RWIVF */
#define CR_CMC_EMRS_DIMM0_A10_0                          0x00000000 /* RWI-V */
#define CR_CMC_EMRS_DIMM0_A10_1                          0x00000001 /* RW--V */
#define CR_CMC_EMRS_DIMM0_A11                                 11:11 /* RWIVF */
#define CR_CMC_EMRS_DIMM0_A11_0                          0x00000000 /* RWI-V */
#define CR_CMC_EMRS_DIMM0_A11_1                          0x00000001 /* RW--V */
#define CR_CMC_EMRS_DIMM0_A12                                 12:12 /* RWIVF */
#define CR_CMC_EMRS_DIMM0_A12_0                          0x00000000 /* RWI-V */
#define CR_CMC_EMRS_DIMM0_A12_1                          0x00000001 /* RW--V */
#define CR_CMC_EMRS_DIMM0_BA1                                 20:20 /* RWIVF */
#define CR_CMC_EMRS_DIMM0_BA1_0                          0x00000000 /* RWI-V */
#define CR_CMC_EMRS_DIMM0_BA1_1                          0x00000001 /* RW--V */
#define CR_CMC_EMRS_DIMM0_BA0                                 21:21 /* RWIVF */
#define CR_CMC_EMRS_DIMM0_BA0_0                          0x00000000 /* RW--V */
#define CR_CMC_EMRS_DIMM0_BA0_1                          0x00000001 /* RWI-V */
#define CR_CMC_EMRS_DIMM0_CMD				      31:31 /* RWIVF */
#define CR_CMC_EMRS_DIMM0_CMD_NOT_PENDING	 	 0x00000000 /* RWI-V */
#define CR_CMC_EMRS_DIMM0_CMD_PENDING			 0x00000001 /* R---V */
#define CR_CMC_EMRS_DIMM0_CMD_WRITE			 0x00000001 /* -W--T */
#define CR_CMC_MRS_DIMM1                                 0x800001A8 /* RW-4R */
#define CR_CMC_MRS_DIMM1_A0                                     0:0 /* RWIVF */
#define CR_CMC_MRS_DIMM1_A0_0                            0x00000000 /* RWI-V */
#define CR_CMC_MRS_DIMM1_A0_1                            0x00000001 /* RW--V */
#define CR_CMC_MRS_DIMM1_A1                                     1:1 /* RWIVF */
#define CR_CMC_MRS_DIMM1_A1_0                            0x00000000 /* RW--V */
#define CR_CMC_MRS_DIMM1_A1_1                            0x00000001 /* RWI-V */
#define CR_CMC_MRS_DIMM1_A2                                     2:2 /* RWIVF */
#define CR_CMC_MRS_DIMM1_A2_0                            0x00000000 /* RWI-V */
#define CR_CMC_MRS_DIMM1_A2_1                            0x00000001 /* RW--V */
#define CR_CMC_MRS_DIMM1_A3                                     3:3 /* RWIVF */
#define CR_CMC_MRS_DIMM1_A3_0                            0x00000000 /* RW--V */
#define CR_CMC_MRS_DIMM1_A3_1                            0x00000001 /* RWI-V */
#define CR_CMC_MRS_DIMM1_A4                                     4:4 /* RWIVF */
#define CR_CMC_MRS_DIMM1_A4_0                            0x00000000 /* RWI-V */
#define CR_CMC_MRS_DIMM1_A4_1                            0x00000001 /* RW--V */
#define CR_CMC_MRS_DIMM1_A5                                     5:5 /* RWIVF */
#define CR_CMC_MRS_DIMM1_A5_0                            0x00000000 /* RW--V */
#define CR_CMC_MRS_DIMM1_A5_1                            0x00000001 /* RWI-V */
#define CR_CMC_MRS_DIMM1_A6                                     6:6 /* RWIVF */
#define CR_CMC_MRS_DIMM1_A6_0                            0x00000000 /* RWI-V */
#define CR_CMC_MRS_DIMM1_A6_1                            0x00000001 /* RW--V */
#define CR_CMC_MRS_DIMM1_A7                                     7:7 /* RWIVF */
#define CR_CMC_MRS_DIMM1_A7_0                            0x00000000 /* RWI-V */
#define CR_CMC_MRS_DIMM1_A7_1                            0x00000001 /* RW--V */
#define CR_CMC_MRS_DIMM1_A8                                     8:8 /* RWIVF */
#define CR_CMC_MRS_DIMM1_A8_0                            0x00000000 /* RWI-V */
#define CR_CMC_MRS_DIMM1_A8_1                            0x00000001 /* RW--V */
#define CR_CMC_MRS_DIMM1_A9                                     9:9 /* RWIVF */
#define CR_CMC_MRS_DIMM1_A9_0                            0x00000000 /* RWI-V */
#define CR_CMC_MRS_DIMM1_A9_1                            0x00000001 /* RW--V */
#define CR_CMC_MRS_DIMM1_A10                                  10:10 /* RWIVF */
#define CR_CMC_MRS_DIMM1_A10_0                           0x00000000 /* RWI-V */
#define CR_CMC_MRS_DIMM1_A10_1                           0x00000001 /* RW--V */
#define CR_CMC_MRS_DIMM1_A11                                  11:11 /* RWIVF */
#define CR_CMC_MRS_DIMM1_A11_0                           0x00000000 /* RWI-V */
#define CR_CMC_MRS_DIMM1_A11_1                           0x00000001 /* RW--V */
#define CR_CMC_MRS_DIMM1_A12                                  12:12 /* RWIVF */
#define CR_CMC_MRS_DIMM1_A12_0                           0x00000000 /* RWI-V */
#define CR_CMC_MRS_DIMM1_A12_1                           0x00000001 /* RW--V */
#define CR_CMC_MRS_DIMM1_BA1                                  20:20 /* RWIVF */
#define CR_CMC_MRS_DIMM1_BA1_0                           0x00000000 /* RWI-V */
#define CR_CMC_MRS_DIMM1_BA1_1                           0x00000001 /* RW--V */
#define CR_CMC_MRS_DIMM1_BA0                                  21:21 /* RWIVF */
#define CR_CMC_MRS_DIMM1_BA0_0                           0x00000000 /* RWI-V */
#define CR_CMC_MRS_DIMM1_BA0_1                           0x00000001 /* RW--V */
#define CR_CMC_MRS_DIMM1_CMD			              31:31 /* RWIVF */
#define CR_CMC_MRS_DIMM1_CMD_NOT_PENDING		 0x00000000 /* RWI-V */
#define CR_CMC_MRS_DIMM1_CMD_PENDING			 0x00000001 /* R---V */
#define CR_CMC_MRS_DIMM1_CMD_WRITE     		       	 0x00000001 /* -W--T */
#define CR_CMC_EMRS_DIMM1                                0x800001AC /* RW-4R */
#define CR_CMC_EMRS_DIMM1_A0                                    0:0 /* RWIVF */
#define CR_CMC_EMRS_DIMM1_A0_0                           0x00000000 /* RW--V */
#define CR_CMC_EMRS_DIMM1_A0_1                           0x00000001 /* RWI-V */
#define CR_CMC_EMRS_DIMM1_A1                                    1:1 /* RWIVF */
#define CR_CMC_EMRS_DIMM1_A1_0                           0x00000000 /* RWI-V */
#define CR_CMC_EMRS_DIMM1_A1_1                           0x00000001 /* RW--V */
#define CR_CMC_EMRS_DIMM1_A2                                    2:2 /* RWIVF */
#define CR_CMC_EMRS_DIMM1_A2_0                           0x00000000 /* RWI-V */
#define CR_CMC_EMRS_DIMM1_A2_1                           0x00000001 /* RW--V */
#define CR_CMC_EMRS_DIMM1_A3                                    3:3 /* RWIVF */
#define CR_CMC_EMRS_DIMM1_A3_0                           0x00000000 /* RWI-V */
#define CR_CMC_EMRS_DIMM1_A3_1                           0x00000001 /* RW--V */
#define CR_CMC_EMRS_DIMM1_A4                                    4:4 /* RWIVF */
#define CR_CMC_EMRS_DIMM1_A4_0                           0x00000000 /* RWI-V */
#define CR_CMC_EMRS_DIMM1_A4_1                           0x00000001 /* RW--V */
#define CR_CMC_EMRS_DIMM1_A5                                    5:5 /* RWIVF */
#define CR_CMC_EMRS_DIMM1_A5_0                           0x00000000 /* RWI-V */
#define CR_CMC_EMRS_DIMM1_A5_1                           0x00000001 /* RW--V */
#define CR_CMC_EMRS_DIMM1_A6                                    6:6 /* RWIVF */
#define CR_CMC_EMRS_DIMM1_A6_0                           0x00000000 /* RWI-V */
#define CR_CMC_EMRS_DIMM1_A6_1                           0x00000001 /* RW--V */
#define CR_CMC_EMRS_DIMM1_A7                                    7:7 /* RWIVF */
#define CR_CMC_EMRS_DIMM1_A7_0                           0x00000000 /* RWI-V */
#define CR_CMC_EMRS_DIMM1_A7_1                           0x00000001 /* RW--V */
#define CR_CMC_EMRS_DIMM1_A8                                    8:8 /* RWIVF */
#define CR_CMC_EMRS_DIMM1_A8_0                           0x00000000 /* RWI-V */
#define CR_CMC_EMRS_DIMM1_A8_1                           0x00000001 /* RW--V */
#define CR_CMC_EMRS_DIMM1_A9                                    9:9 /* RWIVF */
#define CR_CMC_EMRS_DIMM1_A9_0                           0x00000000 /* RWI-V */
#define CR_CMC_EMRS_DIMM1_A9_1                           0x00000001 /* RW--V */
#define CR_CMC_EMRS_DIMM1_A10                                 10:10 /* RWIVF */
#define CR_CMC_EMRS_DIMM1_A10_0                          0x00000000 /* RWI-V */
#define CR_CMC_EMRS_DIMM1_A10_1                          0x00000001 /* RW--V */
#define CR_CMC_EMRS_DIMM1_A11                                 11:11 /* RWIVF */
#define CR_CMC_EMRS_DIMM1_A11_0                          0x00000000 /* RWI-V */
#define CR_CMC_EMRS_DIMM1_A11_1                          0x00000001 /* RW--V */
#define CR_CMC_EMRS_DIMM1_A12                                 12:12 /* RWIVF */
#define CR_CMC_EMRS_DIMM1_A12_0                          0x00000000 /* RWI-V */
#define CR_CMC_EMRS_DIMM1_A12_1                          0x00000001 /* RW--V */
#define CR_CMC_EMRS_DIMM1_BA1                                 20:20 /* RWIVF */
#define CR_CMC_EMRS_DIMM1_BA1_0                          0x00000000 /* RWI-V */
#define CR_CMC_EMRS_DIMM1_BA1_1                          0x00000001 /* RW--V */
#define CR_CMC_EMRS_DIMM1_BA0                                 21:21 /* RWIVF */
#define CR_CMC_EMRS_DIMM1_BA0_0                          0x00000000 /* RW--V */
#define CR_CMC_EMRS_DIMM1_BA0_1                          0x00000001 /* RWI-V */
#define CR_CMC_EMRS_DIMM1_CMD				      31:31 /* RWIVF */
#define CR_CMC_EMRS_DIMM1_CMD_NOT_PENDING	 	 0x00000000 /* RWI-V */
#define CR_CMC_EMRS_DIMM1_CMD_PENDING			 0x00000001 /* R---V */
#define CR_CMC_EMRS_DIMM1_CMD_WRITE			 0x00000001 /* -W--T */
#define CR_CMC_MRS_DIMM2                                 0x800001B0 /* RW-4R */
#define CR_CMC_MRS_DIMM2_A0                                     0:0 /* RWIVF */
#define CR_CMC_MRS_DIMM2_A0_0                            0x00000000 /* RWI-V */
#define CR_CMC_MRS_DIMM2_A0_1                            0x00000001 /* RW--V */
#define CR_CMC_MRS_DIMM2_A1                                     1:1 /* RWIVF */
#define CR_CMC_MRS_DIMM2_A1_0                            0x00000000 /* RW--V */
#define CR_CMC_MRS_DIMM2_A1_1                            0x00000001 /* RWI-V */
#define CR_CMC_MRS_DIMM2_A2                                     2:2 /* RWIVF */
#define CR_CMC_MRS_DIMM2_A2_0                            0x00000000 /* RWI-V */
#define CR_CMC_MRS_DIMM2_A2_1                            0x00000001 /* RW--V */
#define CR_CMC_MRS_DIMM2_A3                                     3:3 /* RWIVF */
#define CR_CMC_MRS_DIMM2_A3_0                            0x00000000 /* RW--V */
#define CR_CMC_MRS_DIMM2_A3_1                            0x00000001 /* RWI-V */
#define CR_CMC_MRS_DIMM2_A4                                     4:4 /* RWIVF */
#define CR_CMC_MRS_DIMM2_A4_0                            0x00000000 /* RWI-V */
#define CR_CMC_MRS_DIMM2_A4_1                            0x00000001 /* RW--V */
#define CR_CMC_MRS_DIMM2_A5                                     5:5 /* RWIVF */
#define CR_CMC_MRS_DIMM2_A5_0                            0x00000000 /* RW--V */
#define CR_CMC_MRS_DIMM2_A5_1                            0x00000001 /* RWI-V */
#define CR_CMC_MRS_DIMM2_A6                                     6:6 /* RWIVF */
#define CR_CMC_MRS_DIMM2_A6_0                            0x00000000 /* RWI-V */
#define CR_CMC_MRS_DIMM2_A6_1                            0x00000001 /* RW--V */
#define CR_CMC_MRS_DIMM2_A7                                     7:7 /* RWIVF */
#define CR_CMC_MRS_DIMM2_A7_0                            0x00000000 /* RWI-V */
#define CR_CMC_MRS_DIMM2_A7_1                            0x00000001 /* RW--V */
#define CR_CMC_MRS_DIMM2_A8                                     8:8 /* RWIVF */
#define CR_CMC_MRS_DIMM2_A8_0                            0x00000000 /* RWI-V */
#define CR_CMC_MRS_DIMM2_A8_1                            0x00000001 /* RW--V */
#define CR_CMC_MRS_DIMM2_A9                                     9:9 /* RWIVF */
#define CR_CMC_MRS_DIMM2_A9_0                            0x00000000 /* RWI-V */
#define CR_CMC_MRS_DIMM2_A9_1                            0x00000001 /* RW--V */
#define CR_CMC_MRS_DIMM2_A10                                  10:10 /* RWIVF */
#define CR_CMC_MRS_DIMM2_A10_0                           0x00000000 /* RWI-V */
#define CR_CMC_MRS_DIMM2_A10_1                           0x00000001 /* RW--V */
#define CR_CMC_MRS_DIMM2_A11                                  11:11 /* RWIVF */
#define CR_CMC_MRS_DIMM2_A11_0                           0x00000000 /* RWI-V */
#define CR_CMC_MRS_DIMM2_A11_1                           0x00000001 /* RW--V */
#define CR_CMC_MRS_DIMM2_A12                                  12:12 /* RWIVF */
#define CR_CMC_MRS_DIMM2_A12_0                           0x00000000 /* RWI-V */
#define CR_CMC_MRS_DIMM2_A12_1                           0x00000001 /* RW--V */
#define CR_CMC_MRS_DIMM2_BA1                                  20:20 /* RWIVF */
#define CR_CMC_MRS_DIMM2_BA1_0                           0x00000000 /* RWI-V */
#define CR_CMC_MRS_DIMM2_BA1_1                           0x00000001 /* RW--V */
#define CR_CMC_MRS_DIMM2_BA0                                  21:21 /* RWIVF */
#define CR_CMC_MRS_DIMM2_BA0_0                           0x00000000 /* RWI-V */
#define CR_CMC_MRS_DIMM2_BA0_1                           0x00000001 /* RW--V */
#define CR_CMC_MRS_DIMM2_CMD			              31:31 /* RWIVF */
#define CR_CMC_MRS_DIMM2_CMD_NOT_PENDING		 0x00000000 /* RWI-V */
#define CR_CMC_MRS_DIMM2_CMD_PENDING			 0x00000001 /* R---V */
#define CR_CMC_MRS_DIMM2_CMD_WRITE     		       	 0x00000001 /* -W--T */
#define CR_CMC_EMRS_DIMM2                                0x800001B4 /* RW-4R */
#define CR_CMC_EMRS_DIMM2_A0                                    0:0 /* RWIVF */
#define CR_CMC_EMRS_DIMM2_A0_0                           0x00000000 /* RW--V */
#define CR_CMC_EMRS_DIMM2_A0_1                           0x00000001 /* RWI-V */
#define CR_CMC_EMRS_DIMM2_A1                                    1:1 /* RWIVF */
#define CR_CMC_EMRS_DIMM2_A1_0                           0x00000000 /* RWI-V */
#define CR_CMC_EMRS_DIMM2_A1_1                           0x00000001 /* RW--V */
#define CR_CMC_EMRS_DIMM2_A2                                    2:2 /* RWIVF */
#define CR_CMC_EMRS_DIMM2_A2_0                           0x00000000 /* RWI-V */
#define CR_CMC_EMRS_DIMM2_A2_1                           0x00000001 /* RW--V */
#define CR_CMC_EMRS_DIMM2_A3                                    3:3 /* RWIVF */
#define CR_CMC_EMRS_DIMM2_A3_0                           0x00000000 /* RWI-V */
#define CR_CMC_EMRS_DIMM2_A3_1                           0x00000001 /* RW--V */
#define CR_CMC_EMRS_DIMM2_A4                                    4:4 /* RWIVF */
#define CR_CMC_EMRS_DIMM2_A4_0                           0x00000000 /* RWI-V */
#define CR_CMC_EMRS_DIMM2_A4_1                           0x00000001 /* RW--V */
#define CR_CMC_EMRS_DIMM2_A5                                    5:5 /* RWIVF */
#define CR_CMC_EMRS_DIMM2_A5_0                           0x00000000 /* RWI-V */
#define CR_CMC_EMRS_DIMM2_A5_1                           0x00000001 /* RW--V */
#define CR_CMC_EMRS_DIMM2_A6                                    6:6 /* RWIVF */
#define CR_CMC_EMRS_DIMM2_A6_0                           0x00000000 /* RWI-V */
#define CR_CMC_EMRS_DIMM2_A6_1                           0x00000001 /* RW--V */
#define CR_CMC_EMRS_DIMM2_A7                                    7:7 /* RWIVF */
#define CR_CMC_EMRS_DIMM2_A7_0                           0x00000000 /* RWI-V */
#define CR_CMC_EMRS_DIMM2_A7_1                           0x00000001 /* RW--V */
#define CR_CMC_EMRS_DIMM2_A8                                    8:8 /* RWIVF */
#define CR_CMC_EMRS_DIMM2_A8_0                           0x00000000 /* RWI-V */
#define CR_CMC_EMRS_DIMM2_A8_1                           0x00000001 /* RW--V */
#define CR_CMC_EMRS_DIMM2_A9                                    9:9 /* RWIVF */
#define CR_CMC_EMRS_DIMM2_A9_0                           0x00000000 /* RWI-V */
#define CR_CMC_EMRS_DIMM2_A9_1                           0x00000001 /* RW--V */
#define CR_CMC_EMRS_DIMM2_A10                                 10:10 /* RWIVF */
#define CR_CMC_EMRS_DIMM2_A10_0                          0x00000000 /* RWI-V */
#define CR_CMC_EMRS_DIMM2_A10_1                          0x00000001 /* RW--V */
#define CR_CMC_EMRS_DIMM2_A11                                 11:11 /* RWIVF */
#define CR_CMC_EMRS_DIMM2_A11_0                          0x00000000 /* RWI-V */
#define CR_CMC_EMRS_DIMM2_A11_1                          0x00000001 /* RW--V */
#define CR_CMC_EMRS_DIMM2_A12                                 12:12 /* RWIVF */
#define CR_CMC_EMRS_DIMM2_A12_0                          0x00000000 /* RWI-V */
#define CR_CMC_EMRS_DIMM2_A12_1                          0x00000001 /* RW--V */
#define CR_CMC_EMRS_DIMM2_BA1                                 20:20 /* RWIVF */
#define CR_CMC_EMRS_DIMM2_BA1_0                          0x00000000 /* RWI-V */
#define CR_CMC_EMRS_DIMM2_BA1_1                          0x00000001 /* RW--V */
#define CR_CMC_EMRS_DIMM2_BA0                                 21:21 /* RWIVF */
#define CR_CMC_EMRS_DIMM2_BA0_0                          0x00000000 /* RW--V */
#define CR_CMC_EMRS_DIMM2_BA0_1                          0x00000001 /* RWI-V */
#define CR_CMC_EMRS_DIMM2_CMD				      31:31 /* RWIVF */
#define CR_CMC_EMRS_DIMM2_CMD_NOT_PENDING	 	 0x00000000 /* RWI-V */
#define CR_CMC_EMRS_DIMM2_CMD_PENDING			 0x00000001 /* R---V */
#define CR_CMC_EMRS_DIMM2_CMD_WRITE			 0x00000001 /* -W--T */
#define CR_CMC_MRS_DIMM3                                 0x800001B8 /* RW-4R */
#define CR_CMC_MRS_DIMM3_A0                                     0:0 /* RWIVF */
#define CR_CMC_MRS_DIMM3_A0_0                            0x00000000 /* RWI-V */
#define CR_CMC_MRS_DIMM3_A0_1                            0x00000001 /* RW--V */
#define CR_CMC_MRS_DIMM3_A1                                     1:1 /* RWIVF */
#define CR_CMC_MRS_DIMM3_A1_0                            0x00000000 /* RW--V */
#define CR_CMC_MRS_DIMM3_A1_1                            0x00000001 /* RWI-V */
#define CR_CMC_MRS_DIMM3_A2                                     2:2 /* RWIVF */
#define CR_CMC_MRS_DIMM3_A2_0                            0x00000000 /* RWI-V */
#define CR_CMC_MRS_DIMM3_A2_1                            0x00000001 /* RW--V */
#define CR_CMC_MRS_DIMM3_A3                                     3:3 /* RWIVF */
#define CR_CMC_MRS_DIMM3_A3_0                            0x00000000 /* RW--V */
#define CR_CMC_MRS_DIMM3_A3_1                            0x00000001 /* RWI-V */
#define CR_CMC_MRS_DIMM3_A4                                     4:4 /* RWIVF */
#define CR_CMC_MRS_DIMM3_A4_0                            0x00000000 /* RWI-V */
#define CR_CMC_MRS_DIMM3_A4_1                            0x00000001 /* RW--V */
#define CR_CMC_MRS_DIMM3_A5                                     5:5 /* RWIVF */
#define CR_CMC_MRS_DIMM3_A5_0                            0x00000000 /* RW--V */
#define CR_CMC_MRS_DIMM3_A5_1                            0x00000001 /* RWI-V */
#define CR_CMC_MRS_DIMM3_A6                                     6:6 /* RWIVF */
#define CR_CMC_MRS_DIMM3_A6_0                            0x00000000 /* RWI-V */
#define CR_CMC_MRS_DIMM3_A6_1                            0x00000001 /* RW--V */
#define CR_CMC_MRS_DIMM3_A7                                     7:7 /* RWIVF */
#define CR_CMC_MRS_DIMM3_A7_0                            0x00000000 /* RWI-V */
#define CR_CMC_MRS_DIMM3_A7_1                            0x00000001 /* RW--V */
#define CR_CMC_MRS_DIMM3_A8                                     8:8 /* RWIVF */
#define CR_CMC_MRS_DIMM3_A8_0                            0x00000000 /* RWI-V */
#define CR_CMC_MRS_DIMM3_A8_1                            0x00000001 /* RW--V */
#define CR_CMC_MRS_DIMM3_A9                                     9:9 /* RWIVF */
#define CR_CMC_MRS_DIMM3_A9_0                            0x00000000 /* RWI-V */
#define CR_CMC_MRS_DIMM3_A9_1                            0x00000001 /* RW--V */
#define CR_CMC_MRS_DIMM3_A10                                  10:10 /* RWIVF */
#define CR_CMC_MRS_DIMM3_A10_0                           0x00000000 /* RWI-V */
#define CR_CMC_MRS_DIMM3_A10_1                           0x00000001 /* RW--V */
#define CR_CMC_MRS_DIMM3_A11                                  11:11 /* RWIVF */
#define CR_CMC_MRS_DIMM3_A11_0                           0x00000000 /* RWI-V */
#define CR_CMC_MRS_DIMM3_A11_1                           0x00000001 /* RW--V */
#define CR_CMC_MRS_DIMM3_A12                                  12:12 /* RWIVF */
#define CR_CMC_MRS_DIMM3_A12_0                           0x00000000 /* RWI-V */
#define CR_CMC_MRS_DIMM3_A12_1                           0x00000001 /* RW--V */
#define CR_CMC_MRS_DIMM3_BA1                                  20:20 /* RWIVF */
#define CR_CMC_MRS_DIMM3_BA1_0                           0x00000000 /* RWI-V */
#define CR_CMC_MRS_DIMM3_BA1_1                           0x00000001 /* RW--V */
#define CR_CMC_MRS_DIMM3_BA0                                  21:21 /* RWIVF */
#define CR_CMC_MRS_DIMM3_BA0_0                           0x00000000 /* RWI-V */
#define CR_CMC_MRS_DIMM3_BA0_1                           0x00000001 /* RW--V */
#define CR_CMC_MRS_DIMM3_CMD			              31:31 /* RWIVF */
#define CR_CMC_MRS_DIMM3_CMD_NOT_PENDING		 0x00000000 /* RWI-V */
#define CR_CMC_MRS_DIMM3_CMD_PENDING			 0x00000001 /* R---V */
#define CR_CMC_MRS_DIMM3_CMD_WRITE     		       	 0x00000001 /* -W--T */
#define CR_CMC_EMRS_DIMM3                                0x800001BC /* RW-4R */
#define CR_CMC_EMRS_DIMM3_A0                                    0:0 /* RWIVF */
#define CR_CMC_EMRS_DIMM3_A0_0                           0x00000000 /* RW--V */
#define CR_CMC_EMRS_DIMM3_A0_1                           0x00000001 /* RWI-V */
#define CR_CMC_EMRS_DIMM3_A1                                    1:1 /* RWIVF */
#define CR_CMC_EMRS_DIMM3_A1_0                           0x00000000 /* RWI-V */
#define CR_CMC_EMRS_DIMM3_A1_1                           0x00000001 /* RW--V */
#define CR_CMC_EMRS_DIMM3_A2                                    2:2 /* RWIVF */
#define CR_CMC_EMRS_DIMM3_A2_0                           0x00000000 /* RWI-V */
#define CR_CMC_EMRS_DIMM3_A2_1                           0x00000001 /* RW--V */
#define CR_CMC_EMRS_DIMM3_A3                                    3:3 /* RWIVF */
#define CR_CMC_EMRS_DIMM3_A3_0                           0x00000000 /* RWI-V */
#define CR_CMC_EMRS_DIMM3_A3_1                           0x00000001 /* RW--V */
#define CR_CMC_EMRS_DIMM3_A4                                    4:4 /* RWIVF */
#define CR_CMC_EMRS_DIMM3_A4_0                           0x00000000 /* RWI-V */
#define CR_CMC_EMRS_DIMM3_A4_1                           0x00000001 /* RW--V */
#define CR_CMC_EMRS_DIMM3_A5                                    5:5 /* RWIVF */
#define CR_CMC_EMRS_DIMM3_A5_0                           0x00000000 /* RWI-V */
#define CR_CMC_EMRS_DIMM3_A5_1                           0x00000001 /* RW--V */
#define CR_CMC_EMRS_DIMM3_A6                                    6:6 /* RWIVF */
#define CR_CMC_EMRS_DIMM3_A6_0                           0x00000000 /* RWI-V */
#define CR_CMC_EMRS_DIMM3_A6_1                           0x00000001 /* RW--V */
#define CR_CMC_EMRS_DIMM3_A7                                    7:7 /* RWIVF */
#define CR_CMC_EMRS_DIMM3_A7_0                           0x00000000 /* RWI-V */
#define CR_CMC_EMRS_DIMM3_A7_1                           0x00000001 /* RW--V */
#define CR_CMC_EMRS_DIMM3_A8                                    8:8 /* RWIVF */
#define CR_CMC_EMRS_DIMM3_A8_0                           0x00000000 /* RWI-V */
#define CR_CMC_EMRS_DIMM3_A8_1                           0x00000001 /* RW--V */
#define CR_CMC_EMRS_DIMM3_A9                                    9:9 /* RWIVF */
#define CR_CMC_EMRS_DIMM3_A9_0                           0x00000000 /* RWI-V */
#define CR_CMC_EMRS_DIMM3_A9_1                           0x00000001 /* RW--V */
#define CR_CMC_EMRS_DIMM3_A10                                 10:10 /* RWIVF */
#define CR_CMC_EMRS_DIMM3_A10_0                          0x00000000 /* RWI-V */
#define CR_CMC_EMRS_DIMM3_A10_1                          0x00000001 /* RW--V */
#define CR_CMC_EMRS_DIMM3_A11                                 11:11 /* RWIVF */
#define CR_CMC_EMRS_DIMM3_A11_0                          0x00000000 /* RWI-V */
#define CR_CMC_EMRS_DIMM3_A11_1                          0x00000001 /* RW--V */
#define CR_CMC_EMRS_DIMM3_A12                                 12:12 /* RWIVF */
#define CR_CMC_EMRS_DIMM3_A12_0                          0x00000000 /* RWI-V */
#define CR_CMC_EMRS_DIMM3_A12_1                          0x00000001 /* RW--V */
#define CR_CMC_EMRS_DIMM3_BA1                                 20:20 /* RWIVF */
#define CR_CMC_EMRS_DIMM3_BA1_0                          0x00000000 /* RWI-V */
#define CR_CMC_EMRS_DIMM3_BA1_1                          0x00000001 /* RW--V */
#define CR_CMC_EMRS_DIMM3_BA0                                 21:21 /* RWIVF */
#define CR_CMC_EMRS_DIMM3_BA0_0                          0x00000000 /* RW--V */
#define CR_CMC_EMRS_DIMM3_BA0_1                          0x00000001 /* RWI-V */
#define CR_CMC_EMRS_DIMM3_CMD				      31:31 /* RWIVF */
#define CR_CMC_EMRS_DIMM3_CMD_NOT_PENDING	 	 0x00000000 /* RWI-V */
#define CR_CMC_EMRS_DIMM3_CMD_PENDING			 0x00000001 /* R---V */
#define CR_CMC_EMRS_DIMM3_CMD_WRITE			 0x00000001 /* -W--T */
#define CR_CMC_ARB                                       0x800001C0 /* RW-4R */
#define CR_CMC_ARB_RTC_CPU_GNT_BLOCKS_LP                        2:0 /* RWIUF */
#define CR_CMC_ARB_RTC_CPU_GNT_BLOCKS_LP_0               0x00000000 /* RWIUV */
#define CR_CMC_ARB_RTC_CPU_GNT_BLOCKS_LP__PROD_C         0x00000000 /* RW-UV */
#define CR_CMC_ARB_RTC_CPU_GNT_BLOCKS_LP_1               0x00000001 /* RW-UV */
#define CR_CMC_ARB_RTC_CPU_GNT_BLOCKS_LP_2               0x00000002 /* RW-UV */
#define CR_CMC_ARB_RTC_CPU_GNT_BLOCKS_LP_3               0x00000003 /* RW-UV */
#define CR_CMC_ARB_RTC_CPU_GNT_BLOCKS_LP_4               0x00000004 /* RW-UV */
#define CR_CMC_ARB_RTC_CPU_GNT_BLOCKS_LP_5               0x00000005 /* RW-UV */
#define CR_CMC_ARB_RTC_CPU_GNT_BLOCKS_LP_6               0x00000006 /* RW-UV */
#define CR_CMC_ARB_RTC_CPU_GNT_BLOCKS_LP_7               0x00000007 /* RW-UV */
#define CR_CMC_ARB_HP_IGNORE_RES_CHK_1P                         4:4 /* RWIUF */
#define CR_CMC_ARB_HP_IGNORE_RES_CHK_1P_DISABLE          0x00000000 /* RWIUV */
#define CR_CMC_ARB_HP_IGNORE_RES_CHK_1P__PROD_C          0x00000000 /* RW-UV */
#define CR_CMC_ARB_HP_IGNORE_RES_CHK_1P_ENABLE           0x00000001 /* RW-UV */
#define CR_CMC_REF                                       0x800001C4 /* -W-4R */
#define CR_CMC_REF_CMD                                          0:0 /* -WIVF */
#define CR_CMC_REF_CMD_NOT_PENDING			 0x00000000 /* -WI-V */
#define CR_CMC_REF_CMD_REFRESH                           0x00000001 /* -W--T */
#define CR_CMC_PRE                                       0x800001C8 /* -W-4R */
#define CR_CMC_PRE_CMD                                          0:0 /* -WIVF */
#define CR_CMC_PRE_CMD_NOT_PENDING			 0x00000000 /* -WI-V */
#define CR_CMC_PRE_CMD_PRECHARGE                         0x00000001 /* -W--T */
#define CR_CMC_ARB_TIMEOUT                               0x800001CC /* RW-4R */
#define CR_CMC_ARB_TIMEOUT_LP                                   7:4 /* RWIUF */
#define CR_CMC_ARB_TIMEOUT_LP_8                          0x00000008 /* RWIUV */
#define CR_CMC_ARB_TIMEOUT_LP_DISABLE                    0x0000000F /* RW-UV */
#define CR_CMC_ARB_TIMEOUT_ROP                                 11:8 /* RWIUF */
#define CR_CMC_ARB_TIMEOUT_ROP_8                         0x00000008 /* RWIUV */
#define CR_CMC_ARB_TIMEOUT_ROP_DISABLE                   0x0000000F /* RW-UV */
#define CR_CMC_ARB_TIMEOUT_EXT                                15:12 /* RWIUF */
#define CR_CMC_ARB_TIMEOUT_EXT_8                         0x00000008 /* RWIUV */
#define CR_CMC_ARB_TIMEOUT_EXT_DISABLE                   0x0000000F /* RW-UV */
#define CR_CMC_ARB_TIMEOUT_KILLS_CONT_GNT                     17:17 /* RWIUF */
#define CR_CMC_ARB_TIMEOUT_KILLS_CONT_GNT_DISABLE        0x00000000 /* RW-UV */
#define CR_CMC_ARB_TIMEOUT_KILLS_CONT_GNT_ENABLE         0x00000001 /* RWIUV */
#define CR_CMC_ARB_XFER_SZ                               0x800001D0 /* RW-4R */
#define CR_CMC_ARB_XFER_SZ_LP                                   7:4 /* RWIUF */
#define CR_CMC_ARB_XFER_SZ_LP_8                          0x00000004 /* RWIUV */
#define CR_CMC_ARB_XFER_SZ_LP__PROD                      0x00000004 /* RW-UV */
#define CR_CMC_ARB_XFER_SZ_LP_MIN                        0x00000000 /* RW-UV */
#define CR_CMC_ARB_XFER_SZ_LP_INF                        0x0000000F /* RW-UV */
#define CR_CMC_ARB_XFER_SZ_ROP                                 11:8 /* RWIUF */
#define CR_CMC_ARB_XFER_SZ_ROP_8                         0x00000004 /* RWIUV */
#define CR_CMC_ARB_XFER_SZ_ROP__PROD                     0x0000000c /* RW-UV */
#define CR_CMC_ARB_XFER_SZ_ROP_MIN                       0x00000000 /* RW-UV */
#define CR_CMC_ARB_XFER_SZ_ROP_INF                       0x0000000F /* RW-UV */
#define CR_CMC_ARB_XFER_SZ_EXT                                15:12 /* RWIUF */
#define CR_CMC_ARB_XFER_SZ_EXT_8                         0x00000004 /* RWIUV */
#define CR_CMC_ARB_XFER_SZ_EXT__PROD                     0x00000004 /* RW-UV */
#define CR_CMC_ARB_XFER_SZ_EXT_MIN                       0x00000000 /* RW-UV */
#define CR_CMC_ARB_XFER_SZ_EXT_INF                       0x0000000F /* RW-UV */
#define CR_CMC_ARB_XFER_REM                              0x800001D4 /* RW-4R */
#define CR_CMC_ARB_XFER_REM_LP                                  6:4 /* RWIUF */
#define CR_CMC_ARB_XFER_REM_LP_0                         0x00000000 /* RW-UV */
#define CR_CMC_ARB_XFER_REM_LP_1                         0x00000001 /* RW-UV */
#define CR_CMC_ARB_XFER_REM_LP_2                         0x00000002 /* RWIUV */
#define CR_CMC_ARB_XFER_REM_LP_3                         0x00000003 /* RW-UV */
#define CR_CMC_ARB_XFER_REM_LP_4                         0x00000004 /* RW-UV */
#define CR_CMC_ARB_XFER_REM_LP_5                         0x00000005 /* RW-UV */
#define CR_CMC_ARB_XFER_REM_LP_6                         0x00000006 /* RW-UV */
#define CR_CMC_ARB_XFER_REM_LP_7                         0x00000007 /* RW-UV */
#define CR_CMC_ARB_XFER_REM_ROP                                10:8 /* RWIUF */
#define CR_CMC_ARB_XFER_REM_ROP_0                        0x00000000 /* RW-UV */
#define CR_CMC_ARB_XFER_REM_ROP_1                        0x00000001 /* RW-UV */
#define CR_CMC_ARB_XFER_REM_ROP_2                        0x00000002 /* RWIUV */
#define CR_CMC_ARB_XFER_REM_ROP_3                        0x00000003 /* RW-UV */
#define CR_CMC_ARB_XFER_REM_ROP_4                        0x00000004 /* RW-UV */
#define CR_CMC_ARB_XFER_REM_ROP_5                        0x00000005 /* RW-UV */
#define CR_CMC_ARB_XFER_REM_ROP_6                        0x00000006 /* RW-UV */
#define CR_CMC_ARB_XFER_REM_ROP_7                        0x00000007 /* RW-UV */
#define CR_CMC_ARB_XFER_REM_EXT                               14:12 /* RWIUF */
#define CR_CMC_ARB_XFER_REM_EXT_0                        0x00000000 /* RW-UV */
#define CR_CMC_ARB_XFER_REM_EXT_1                        0x00000001 /* RW-UV */
#define CR_CMC_ARB_XFER_REM_EXT_2                        0x00000002 /* RWIUV */
#define CR_CMC_ARB_XFER_REM_EXT_3                        0x00000003 /* RW-UV */
#define CR_CMC_ARB_XFER_REM_EXT_4                        0x00000004 /* RW-UV */
#define CR_CMC_ARB_XFER_REM_EXT_5                        0x00000005 /* RW-UV */
#define CR_CMC_ARB_XFER_REM_EXT_6                        0x00000006 /* RW-UV */
#define CR_CMC_ARB_XFER_REM_EXT_7                        0x00000007 /* RW-UV */
#define CR_CMC_ARB_DIFF_BANK                             0x800001D8 /* RW-4R */
#define CR_CMC_ARB_DIFF_BANK_LP                                 1:1 /* RWIUF */
#define CR_CMC_ARB_DIFF_BANK_LP_DISABLED                 0x00000000 /* RWIUV */
#define CR_CMC_ARB_DIFF_BANK_LP__PROD                    0x00000000 /* RW-UV */
#define CR_CMC_ARB_DIFF_BANK_LP_ENABLED                  0x00000001 /* RW-UV */
#define CR_CMC_ARB_DIFF_BANK_ROP                                2:2 /* RWIUF */
#define CR_CMC_ARB_DIFF_BANK_ROP_DISABLED                0x00000000 /* RWIUV */
#define CR_CMC_ARB_DIFF_BANK_ROP_ENABLED                 0x00000001 /* RW-UV */
#define CR_CMC_ARB_DIFF_BANK_ROP__PROD                   0x00000001 /* RW-UV */
#define CR_CMC_ARB_DIFF_BANK_EXT                                3:3 /* RWIUF */
#define CR_CMC_ARB_DIFF_BANK_EXT_DISABLED                0x00000000 /* RWIUV */
#define CR_CMC_ARB_DIFF_BANK_EXT_ENABLED                 0x00000001 /* RW-UV */
#define CR_CMC_ARB_DIFF_BANK_EXT__PROD                   0x00000001 /* RW-UV */
#define CR_CMC_CLOSE_PAGE0                               0x800001DC /* RW-4R */
#define CR_CMC_CLOSE_PAGE0_DIFF_ROW_HP                          0:0 /* RWIUF */
#define CR_CMC_CLOSE_PAGE0_DIFF_ROW_HP_DISABLED          0x00000000 /* RW-UV */
#define CR_CMC_CLOSE_PAGE0_DIFF_ROW_HP_ENABLED           0x00000001 /* RWIUV */
#define CR_CMC_CLOSE_PAGE0_DIFF_ROW_LP                          1:1 /* RWIUF */
#define CR_CMC_CLOSE_PAGE0_DIFF_ROW_LP_DISABLED          0x00000000 /* RW-UV */
#define CR_CMC_CLOSE_PAGE0_DIFF_ROW_LP_ENABLED           0x00000001 /* RWIUV */
#define CR_CMC_CLOSE_PAGE0_DIFF_ROW_ROP                         2:2 /* RWIUF */
#define CR_CMC_CLOSE_PAGE0_DIFF_ROW_ROP_DISABLED         0x00000000 /* RW-UV */
#define CR_CMC_CLOSE_PAGE0_DIFF_ROW_ROP_ENABLED          0x00000001 /* RWIUV */
#define CR_CMC_CLOSE_PAGE0_DIFF_ROW_EXT                         3:3 /* RWIUF */
#define CR_CMC_CLOSE_PAGE0_DIFF_ROW_EXT_DISABLED         0x00000000 /* RW-UV */
#define CR_CMC_CLOSE_PAGE0_DIFF_ROW_EXT_ENABLED          0x00000001 /* RWIUV */
#define CR_CMC_CLOSE_PAGE1                               0x800001E0 /* RW-4R */
#define CR_CMC_CLOSE_PAGE1_DIFF_BANK_HP                         0:0 /* RWIUF */
#define CR_CMC_CLOSE_PAGE1_DIFF_BANK_HP_DISABLED         0x00000000 /* RWIUV */
#define CR_CMC_CLOSE_PAGE1_DIFF_BANK_HP_ENABLED          0x00000001 /* RW-UV */
#define CR_CMC_CLOSE_PAGE1_DIFF_BANK_HP__PROD            0x00000001 /* RW-UV */
#define CR_CMC_CLOSE_PAGE1_DIFF_BANK_LP                         1:1 /* RWIUF */
#define CR_CMC_CLOSE_PAGE1_DIFF_BANK_LP_DISABLED         0x00000000 /* RWIUV */
#define CR_CMC_CLOSE_PAGE1_DIFF_BANK_LP_ENABLED          0x00000001 /* RW-UV */
#define CR_CMC_CLOSE_PAGE1_DIFF_BANK_LP__PROD            0x00000001 /* RW-UV */
#define CR_CMC_CLOSE_PAGE1_DIFF_BANK_ROP                        2:2 /* RWIUF */
#define CR_CMC_CLOSE_PAGE1_DIFF_BANK_ROP_DISABLED        0x00000000 /* RW-UV */
#define CR_CMC_CLOSE_PAGE1_DIFF_BANK_ROP__PROD           0x00000000 /* RW-UV */
#define CR_CMC_CLOSE_PAGE1_DIFF_BANK_ROP_ENABLED         0x00000001 /* RWIUV */
#define CR_CMC_CLOSE_PAGE1_DIFF_BANK_EXT                        3:3 /* RWIUF */
#define CR_CMC_CLOSE_PAGE1_DIFF_BANK_EXT_DISABLED        0x00000000 /* RWIUV */
#define CR_CMC_CLOSE_PAGE1_DIFF_BANK_EXT_ENABLED         0x00000001 /* RW-UV */
#define CR_CMC_CLOSE_PAGE1_DIFF_BANK_EXT__PROD           0x00000001 /* RW-UV */
#define CR_CMC_CLOSE_PAGE2                               0x800001E4 /* RW-4R */
#define CR_CMC_CLOSE_PAGE2_Q_EMPTY_HP                           0:0 /* RWIUF */
#define CR_CMC_CLOSE_PAGE2_Q_EMPTY_HP_DISABLED           0x00000000 /* RWIUV */
#define CR_CMC_CLOSE_PAGE2_Q_EMPTY_HP_ENABLED            0x00000001 /* RW-UV */
#define CR_CMC_CLOSE_PAGE2_Q_EMPTY_HP__PROD              0x00000001 /* RW-UV */
#define CR_CMC_CLOSE_PAGE2_Q_EMPTY_LP                           1:1 /* RWIUF */
#define CR_CMC_CLOSE_PAGE2_Q_EMPTY_LP_DISABLED           0x00000000 /* RWIUV */
#define CR_CMC_CLOSE_PAGE2_Q_EMPTY_LP_ENABLED            0x00000001 /* RW-UV */
#define CR_CMC_CLOSE_PAGE2_Q_EMPTY_LP__PROD              0x00000001 /* RW-UV */
#define CR_CMC_CLOSE_PAGE2_Q_EMPTY_ROP                          2:2 /* RWIUF */
#define CR_CMC_CLOSE_PAGE2_Q_EMPTY_ROP_DISABLED          0x00000000 /* RWIUV */
#define CR_CMC_CLOSE_PAGE2_Q_EMPTY_ROP_ENABLED           0x00000001 /* RW-UV */
#define CR_CMC_CLOSE_PAGE2_Q_EMPTY_ROP__PROD             0x00000001 /* RW-UV */
#define CR_CMC_CLOSE_PAGE2_Q_EMPTY_EXT                          3:3 /* RWIUF */
#define CR_CMC_CLOSE_PAGE2_Q_EMPTY_EXT_DISABLED          0x00000000 /* RWIUV */
#define CR_CMC_CLOSE_PAGE2_Q_EMPTY_EXT_ENABLED           0x00000001 /* RW-UV */
#define CR_CMC_CLOSE_PAGE2_Q_EMPTY_EXT__PROD             0x00000001 /* RW-UV */
#define CR_CMC_CLOSE_PAGE2_Q_EMPTY_CPU                          5:5 /* RWIUF */
#define CR_CMC_CLOSE_PAGE2_Q_EMPTY_CPU_DISABLED          0x00000000 /* RWIUV */
#define CR_CMC_CLOSE_PAGE2_Q_EMPTY_CPU__PROD             0x00000000 /* RW-UV */
#define CR_CMC_CLOSE_PAGE2_Q_EMPTY_CPU_ENABLED           0x00000001 /* RW-UV */
#define CR_CMC_CLOSE_PAGE2_Q_EMPTY_LDT                          6:6 /* RWIUF */
#define CR_CMC_CLOSE_PAGE2_Q_EMPTY_LDT_DISABLED          0x00000000 /* RWIUV */
#define CR_CMC_CLOSE_PAGE2_Q_EMPTY_LDT_ENABLED           0x00000001 /* RW-UV */
#define CR_CMC_CLOSE_PAGE2_Q_EMPTY_LDT__PROD             0x00000001 /* RW-UV */
#define CR_CMC_CLOSE_PAGE2_ALWAYS_GART                          7:7 /* RWIUF */
#define CR_CMC_CLOSE_PAGE2_ALWAYS_GART_DISABLED          0x00000000 /* RWIUV */
#define CR_CMC_CLOSE_PAGE2_ALWAYS_GART_ENABLED           0x00000001 /* RW-UV */
#define CR_CMC_CLOSE_PAGE2_ALWAYS_GART__PROD             0x00000001 /* RW-UV */
#define CR_CMC_CLOSE_PAGE2_ALWAYS_WBC_LP                        8:8 /* RWIUF */
#define CR_CMC_CLOSE_PAGE2_ALWAYS_WBC_LP_DISABLED        0x00000000 /* RWIUV */
#define CR_CMC_CLOSE_PAGE2_ALWAYS_WBC_LP_ENABLED         0x00000001 /* RW-UV */
#define CR_CMC_CLOSE_PAGE2_ALWAYS_WBC_LP__PROD           0x00000001 /* RW-UV */
#define CR_CMC_CLOSE_PAGE2_ALWAYS_WBC_HP                        9:9 /* RWIUF */
#define CR_CMC_CLOSE_PAGE2_ALWAYS_WBC_HP_DISABLED        0x00000000 /* RWIUV */
#define CR_CMC_CLOSE_PAGE2_ALWAYS_WBC_HP__PROD           0x00000000 /* RW-UV */
#define CR_CMC_CLOSE_PAGE2_ALWAYS_WBC_HP_ENABLED         0x00000001 /* RW-UV */
#define CR_CMC_CMDQ                                      0x800001E8 /* RW-4R */
#define CR_CMC_CMDQ_ELL_RW                                      3:0 /* RWIUF */
#define CR_CMC_CMDQ_ELL_RW_4                             0x00000004 /* RW-UV */
#define CR_CMC_CMDQ_ELL_RW_5                             0x00000005 /* RW-UV */
#define CR_CMC_CMDQ_ELL_RW_6                             0x00000006 /* RW-UV */
#define CR_CMC_CMDQ_ELL_RW_7                             0x00000007 /* RW-UV */
#define CR_CMC_CMDQ_ELL_RW_8                             0x00000008 /* RWIUV */
#define CR_CMC_CMDQ_ELL_RW__PROD                         0x00000008 /* RW-UV */
#define CR_CMC_CMDQ_HPGFX_RW                                    7:4 /* RWIUF */
#define CR_CMC_CMDQ_HPGFX_RW_4                           0x00000004 /* RW-UV */
#define CR_CMC_CMDQ_HPGFX_RW_5                           0x00000005 /* RW-UV */
#define CR_CMC_CMDQ_HPGFX_RW_6                           0x00000006 /* RW-UV */
#define CR_CMC_CMDQ_HPGFX_RW_7                           0x00000007 /* RW-UV */
#define CR_CMC_CMDQ_HPGFX_RW_8                           0x00000008 /* RWIUV */
#define CR_CMC_CMDQ_HPGFX_RW__PROD                       0x00000008 /* RW-UV */
#define CR_CMC_CMDQ_RTC_RW                                     11:8 /* RWIUF */
#define CR_CMC_CMDQ_RTC_RW_3                             0x00000003 /* RWIUV */
#define CR_CMC_CMDQ_RTC_RW_4                             0x00000004 /* RW-UV */
#define CR_CMC_CMDQ_RTC_RW__PROD                         0x00000004 /* RW-UV */
#define CR_CMC_CMDQ_RTC_RW_5                             0x00000005 /* RW-UV */
#define CR_CMC_CMDQ_RTC_RW_6                             0x00000006 /* RW-UV */
#define CR_CMC_CMDQ_RTC_RW_7                             0x00000007 /* RW-UV */
#define CR_CMC_CMDQ_RTC_RW_8                             0x00000008 /* RW-UV */
#define CR_CMC_CMDQ_ELL_ACT                                   14:12 /* RWIUF */
#define CR_CMC_CMDQ_ELL_ACT_1                            0x00000001 /* RW-UV */
#define CR_CMC_CMDQ_ELL_ACT_2                            0x00000002 /* RW-UV */
#define CR_CMC_CMDQ_ELL_ACT_3                            0x00000003 /* RWIUV */
#define CR_CMC_CMDQ_ELL_ACT_4                            0x00000004 /* RW-UV */
#define CR_CMC_CMDQ_ELL_ACT__PROD                        0x00000004 /* RW-UV */
#define CR_CMC_CMDQ_HPGFX_ACT                                 17:15 /* RWIUF */
#define CR_CMC_CMDQ_HPGFX_ACT_1                          0x00000001 /* RW-UV */
#define CR_CMC_CMDQ_HPGFX_ACT_2                          0x00000002 /* RW-UV */
#define CR_CMC_CMDQ_HPGFX_ACT_3                          0x00000003 /* RWIUV */
#define CR_CMC_CMDQ_HPGFX_ACT_4                          0x00000004 /* RW-UV */
#define CR_CMC_CMDQ_HPGFX_ACT__PROD                      0x00000004 /* RW-UV */
#define CR_CMC_CMDQ_RTC_ACT                                   20:18 /* RWIUF */
#define CR_CMC_CMDQ_RTC_ACT_1                            0x00000001 /* RW-UV */
#define CR_CMC_CMDQ_RTC_ACT_2                            0x00000002 /* RW-UV */
#define CR_CMC_CMDQ_RTC_ACT_3                            0x00000003 /* RWIUV */
#define CR_CMC_CMDQ_RTC_ACT_4                            0x00000004 /* RW-UV */
#define CR_CMC_CMDQ_RTC_ACT__PROD                        0x00000004 /* RW-UV */
#define CR_CMC_CMDQ_ELL_PRE                                   23:21 /* RWIUF */
#define CR_CMC_CMDQ_ELL_PRE_1                            0x00000001 /* RW-UV */
#define CR_CMC_CMDQ_ELL_PRE_2                            0x00000002 /* RW-UV */
#define CR_CMC_CMDQ_ELL_PRE_3                            0x00000003 /* RWIUV */
#define CR_CMC_CMDQ_ELL_PRE_4                            0x00000004 /* RW-UV */
#define CR_CMC_CMDQ_ELL_PRE__PROD                        0x00000004 /* RW-UV */
#define CR_CMC_CMDQ_HPGFX_PRE                                 26:24 /* RWIUF */
#define CR_CMC_CMDQ_HPGFX_PRE_1                          0x00000001 /* RW-UV */
#define CR_CMC_CMDQ_HPGFX_PRE_2                          0x00000002 /* RW-UV */
#define CR_CMC_CMDQ_HPGFX_PRE_3                          0x00000003 /* RWIUV */
#define CR_CMC_CMDQ_HPGFX_PRE_4                          0x00000004 /* RW-UV */
#define CR_CMC_CMDQ_HPGFX_PRE__PROD                      0x00000004 /* RW-UV */
#define CR_CMC_CMDQ_RTC_PRE                                   29:27 /* RWIUF */
#define CR_CMC_CMDQ_RTC_PRE_1                            0x00000001 /* RW-UV */
#define CR_CMC_CMDQ_RTC_PRE_2                            0x00000002 /* RW-UV */
#define CR_CMC_CMDQ_RTC_PRE_3                            0x00000003 /* RWIUV */
#define CR_CMC_CMDQ_RTC_PRE_4                            0x00000004 /* RW-UV */
#define CR_CMC_CMDQ_RTC_PRE__PROD                        0x00000004 /* RW-UV */
#define CR_CMC_AUTOCLOSE                                 0x800001EC /* RW-4R */
#define CR_CMC_AUTOCLOSE_ACTIVE                                 0:0 /* RWIVF */
#define CR_CMC_AUTOCLOSE_ACTIVE_FALSE                    0x00000000 /* RWI-V */
#define CR_CMC_AUTOCLOSE_ACTIVE_TRUE                     0x00000001 /* RW--V */
#define CR_CMC_AUTOCLOSE_ACTIVE__PROD                    0x00000001 /* RW--V */
#define CR_CMC_AUTOCLOSE_RTC                                    4:4 /* RWIVF */
#define CR_CMC_AUTOCLOSE_RTC_DISABLED                    0x00000000 /* RW--V */
#define CR_CMC_AUTOCLOSE_RTC_ENABLED                     0x00000001 /* RWI-V */
#define CR_CMC_AUTOCLOSE_RTC__PROD                       0x00000001 /* RW--V */
#define CR_CMC_AUTOCLOSE_HPGFX                                  5:5 /* RWIVF */
#define CR_CMC_AUTOCLOSE_HPGFX_DISABLED                  0x00000000 /* RWI-V */
#define CR_CMC_AUTOCLOSE_HPGFX_ENABLED                   0x00000001 /* RW--V */
#define CR_CMC_AUTOCLOSE_HPGFX__PROD                     0x00000001 /* RW--V */
#define CR_CMC_AUTOCLOSE_ELL                                    6:6 /* RWIVF */
#define CR_CMC_AUTOCLOSE_ELL_DISABLED                    0x00000000 /* RWI-V */
#define CR_CMC_AUTOCLOSE_ELL__PROD                       0x00000000 /* RW--V */
#define CR_CMC_AUTOCLOSE_ELL_ENABLED                     0x00000001 /* RW--V */
#define CR_CMC_AUTOCLOSE_TIMEOUT                               12:8 /* RWIUF */
#define CR_CMC_AUTOCLOSE_TIMEOUT_MIN                     0x00000000 /* RW-UV */
#define CR_CMC_AUTOCLOSE_TIMEOUT__PROD                   0x0000000F /* RW-UV */
#define CR_CMC_AUTOCLOSE_TIMEOUT_MAX                     0x0000001F /* RWIUV */
#define CR_CMC_AUTOCLOSE_DRAMC_DEBUG                          31:16 /* RWIVF */
#define CR_CMC_AUTOCLOSE_DRAMC_DEBUG_INIT                0x00000000 /* RWI-V */
#define CR_CMC_AUTOCLOSE_DRAMC_DEBUG__PROD               0x00000000 /* RWI-V */
#define CR_CMC_WBC                                       0x800001F0 /* RW-4R */
#define CR_CMC_WBC_HWM                                          4:0 /* RWIUF */
#define CR_CMC_WBC_HWM_0                                 0x00000000 /* RW-UV */
#define CR_CMC_WBC_HWM_1                                 0x00000001 /* RW-UV */
#define CR_CMC_WBC_HWM_2                                 0x00000002 /* RW-UV */
#define CR_CMC_WBC_HWM_3                                 0x00000003 /* RW-UV */
#define CR_CMC_WBC_HWM_4                                 0x00000004 /* RW-UV */
#define CR_CMC_WBC_HWM_5                                 0x00000005 /* RW-UV */
#define CR_CMC_WBC_HWM_6                                 0x00000006 /* RW-UV */
#define CR_CMC_WBC_HWM_7                                 0x00000007 /* RW-UV */
#define CR_CMC_WBC_HWM_8                                 0x00000008 /* RW-UV */
#define CR_CMC_WBC_HWM_9                                 0x00000009 /* RW-UV */
#define CR_CMC_WBC_HWM_10                                0x0000000A /* RW-UV */
#define CR_CMC_WBC_HWM_11                                0x0000000B /* RW-UV */
#define CR_CMC_WBC_HWM_12                                0x0000000C /* RW-UV */
#define CR_CMC_WBC_HWM_13                                0x0000000D /* RW-UV */
#define CR_CMC_WBC_HWM_14                                0x0000000E /* RW-UV */
#define CR_CMC_WBC_HWM_15                                0x0000000F /* RW-UV */
#define CR_CMC_WBC_HWM_16                                0x00000010 /* RW-UV */
#define CR_CMC_WBC_HWM_17                                0x00000011 /* RW-UV */
#define CR_CMC_WBC_HWM_18                                0x00000012 /* RW-UV */
#define CR_CMC_WBC_HWM_19                                0x00000013 /* RW-UV */
#define CR_CMC_WBC_HWM_20                                0x00000014 /* RW-UV */
#define CR_CMC_WBC_HWM_21                                0x00000015 /* RW-UV */
#define CR_CMC_WBC_HWM_22                                0x00000016 /* RW-UV */
#define CR_CMC_WBC_HWM_23                                0x00000017 /* RW-UV */
#define CR_CMC_WBC_HWM_24                                0x00000018 /* RWIUV */
#define CR_CMC_WBC_HWM__PROD                             0x00000018 /* RW-UV */
#define CR_CMC_WBC_HWM_25                                0x00000019 /* RW-UV */
#define CR_CMC_WBC_HWM_26                                0x0000001A /* RW-UV */
#define CR_CMC_WBC_HWM_27                                0x0000001B /* RW-UV */
#define CR_CMC_WBC_HWM_28                                0x0000001C /* RW-UV */
#define CR_CMC_WBC_HWM_29                                0x0000001D /* RW-UV */
#define CR_CMC_WBC_HWM_30                                0x0000001E /* RW-UV */
#define CR_CMC_WBC_HWM_31                                0x0000001F /* RW-UV */
#define CR_CMC_WBC_LWM                                         12:8 /* RWIUF */
#define CR_CMC_WBC_LWM_0                                 0x00000000 /* RW-UV */
#define CR_CMC_WBC_LWM_1                                 0x00000001 /* RW-UV */
#define CR_CMC_WBC_LWM_2                                 0x00000002 /* RW-UV */
#define CR_CMC_WBC_LWM_3                                 0x00000003 /* RW-UV */
#define CR_CMC_WBC_LWM_4                                 0x00000004 /* RW-UV */
#define CR_CMC_WBC_LWM_5                                 0x00000005 /* RW-UV */
#define CR_CMC_WBC_LWM_6                                 0x00000006 /* RW-UV */
#define CR_CMC_WBC_LWM_7                                 0x00000007 /* RW-UV */
#define CR_CMC_WBC_LWM_8                                 0x00000008 /* RWIUV */
#define CR_CMC_WBC_LWM_9                                 0x00000009 /* RW-UV */
#define CR_CMC_WBC_LWM_10                                0x0000000A /* RW-UV */
#define CR_CMC_WBC_LWM_11                                0x0000000B /* RW-UV */
#define CR_CMC_WBC_LWM_12                                0x0000000C /* RW-UV */
#define CR_CMC_WBC_LWM_13                                0x0000000D /* RW-UV */
#define CR_CMC_WBC_LWM_14                                0x0000000E /* RW-UV */
#define CR_CMC_WBC_LWM_15                                0x0000000F /* RW-UV */
#define CR_CMC_WBC_LWM_16                                0x00000010 /* RW-UV */
#define CR_CMC_WBC_LWM__PROD                             0x00000010 /* RW-UV */
#define CR_CMC_WBC_LWM_17                                0x00000011 /* RW-UV */
#define CR_CMC_WBC_LWM_18                                0x00000012 /* RW-UV */
#define CR_CMC_WBC_LWM_19                                0x00000013 /* RW-UV */
#define CR_CMC_WBC_LWM_20                                0x00000014 /* RW-UV */
#define CR_CMC_WBC_LWM_21                                0x00000015 /* RW-UV */
#define CR_CMC_WBC_LWM_22                                0x00000016 /* RW-UV */
#define CR_CMC_WBC_LWM_23                                0x00000017 /* RW-UV */
#define CR_CMC_WBC_LWM_24                                0x00000018 /* RW-UV */
#define CR_CMC_WBC_LWM_25                                0x00000019 /* RW-UV */
#define CR_CMC_WBC_LWM_26                                0x0000001A /* RW-UV */
#define CR_CMC_WBC_LWM_27                                0x0000001B /* RW-UV */
#define CR_CMC_WBC_LWM_28                                0x0000001C /* RW-UV */
#define CR_CMC_WBC_LWM_29                                0x0000001D /* RW-UV */
#define CR_CMC_WBC_LWM_30                                0x0000001E /* RW-UV */
#define CR_CMC_WBC_LWM_31                                0x0000001F /* RW-UV */
#define CR_CMC_WBC_FLUSH                                      16:16 /* RWIVF */
#define CR_CMC_WBC_FLUSH_NOT_PENDING                     0x00000000 /* RWI-V */
#define CR_CMC_WBC_FLUSH__PROD                           0x00000000 /* RW--V */
#define CR_CMC_WBC_FLUSH_PENDING                         0x00000001 /* -W--T */
#define CR_CMC_WBC_FULL_BLOCKS_ISOLDT_READ                    20:20 /* RWIVF */
#define CR_CMC_WBC_FULL_BLOCKS_ISOLDT_READ_FALSE         0x00000000 /* RWI-V */
#define CR_CMC_WBC_FULL_BLOCKS_ISOLDT_READ__PROD         0x00000000 /* RW--V */
#define CR_CMC_WBC_FULL_BLOCKS_ISOLDT_READ_TRUE          0x00000001 /* RW--V */
#define CR_CMC_WBC_FULL_BLOCKS_NONISOLDT_READ                 21:21 /* RWIVF */
#define CR_CMC_WBC_FULL_BLOCKS_NONISOLDT_READ_FALSE      0x00000000 /* RWI-V */
#define CR_CMC_WBC_FULL_BLOCKS_NONISOLDT_READ__PROD      0x00000000 /* RW--V */
#define CR_CMC_WBC_FULL_BLOCKS_NONISOLDT_READ_TRUE       0x00000001 /* RW--V */
#define CR_CMC_WBC_ATOMIC_CPU_READS			      24:24 /* RWIVF */
#define CR_CMC_WBC_ATOMIC_CPU_READS_DISABLED		 0x00000000 /* RW--V */
#define CR_CMC_WBC_ATOMIC_CPU_READS_ENABLED		 0x00000001 /* RWI-V */
#define CR_CMC_WBC_ATOMIC_CPU_READS__PROD   		 0x00000001 /* RW--V */
#define CR_CMC_WBC_ATOMIC_AGP_READS			      25:25 /* RWIVF */
#define CR_CMC_WBC_ATOMIC_AGP_READS_DISABLED		 0x00000000 /* RWI-V */
#define CR_CMC_WBC_ATOMIC_AGP_READS__PROD    		 0x00000000 /* RW--V */
#define CR_CMC_WBC_ATOMIC_AGP_READS_ENABLED		 0x00000001 /* RW--V */
#define CR_CMC_WBC_ATOMIC_LDT_READS			      26:26 /* RWIVF */
#define CR_CMC_WBC_ATOMIC_LDT_READS_DISABLED		 0x00000000 /* RWI-V */
#define CR_CMC_WBC_ATOMIC_LDT_READS__PROD    		 0x00000000 /* RW--V */
#define CR_CMC_WBC_ATOMIC_LDT_READS_ENABLED		 0x00000001 /* RW--V */
#define CR_CMC_WBC_32B_WRITE_BLOCKS_READS		      28:28 /* RWIVF */
#define CR_CMC_WBC_32B_WRITE_BLOCKS_READS_DISABLED	 0x00000000 /* RWI-V */
#define CR_CMC_WBC_32B_WRITE_BLOCKS_READS_ENABLED	 0x00000001 /* RW--V */
#define CR_CMC_WBC_32B_WRITE_BLOCKS_READS__PROD   	 0x00000001 /* RW--V */
#define CR_CMC_CMDQ_PRT                                  0x800001F4 /* RW-4R */
#define CR_CMC_CMDQ_PRT_DISABLE                                 0:0 /* RWIVF */
#define CR_CMC_CMDQ_PRT_DISABLE_OFF                      0x00000000 /* RWI-V */
#define CR_CMC_CMDQ_PRT_DISABLE__PROD                    0x00000000 /* RW--V */
#define CR_CMC_CMDQ_PRT_DISABLE_ON                       0x00000001 /* RW--V */
#define CR_CMC_CMDQ_PRT_HPGFX_MIN                               5:2 /* RWIUF */
#define CR_CMC_CMDQ_PRT_HPGFX_MIN_0                      0x00000000 /* RW-UV */
#define CR_CMC_CMDQ_PRT_HPGFX_MIN_1                      0x00000001 /* RW-UV */
#define CR_CMC_CMDQ_PRT_HPGFX_MIN_2                      0x00000002 /* RWIUV */
#define CR_CMC_CMDQ_PRT_HPGFX_MIN__PROD_C                0x00000002 /* RW-UV */
#define CR_CMC_CMDQ_PRT_HPGFX_MIN_3                      0x00000003 /* RW-UV */
#define CR_CMC_CMDQ_PRT_HPGFX_MIN_4                      0x00000004 /* RW-UV */
#define CR_CMC_CMDQ_PRT_HPGFX_MIN_5                      0x00000005 /* RW-UV */
#define CR_CMC_CMDQ_PRT_HPGFX_MIN_6                      0x00000006 /* RW-UV */
#define CR_CMC_CMDQ_PRT_HPGFX_MIN_7                      0x00000007 /* RW-UV */
#define CR_CMC_CMDQ_PRT_HPGFX_MIN_8                      0x00000008 /* RW-UV */
#define CR_CMC_CMDQ_PRT_HPGFX_MIN_9                      0x00000009 /* RW-UV */
#define CR_CMC_CMDQ_PRT_HPGFX_MIN_10                     0x0000000a /* RW-UV */
#define CR_CMC_CMDQ_PRT_HPGFX_MIN_11                     0x0000000b /* RW-UV */
#define CR_CMC_CMDQ_PRT_HPGFX_MIN_12                     0x0000000c /* RW-UV */
#define CR_CMC_CMDQ_PRT_HPGFX_MIN_13                     0x0000000d /* RW-UV */
#define CR_CMC_CMDQ_PRT_HPGFX_MIN_14                     0x0000000e /* RW-UV */
#define CR_CMC_CMDQ_PRT_HPGFX_MIN_15                     0x0000000f /* RW-UV */
#define CR_CMC_CMDQ_PRT_RTC_MIN                               14:11 /* RWIUF */
#define CR_CMC_CMDQ_PRT_RTC_MIN_0                        0x00000000 /* RW-UV */
#define CR_CMC_CMDQ_PRT_RTC_MIN_1                        0x00000001 /* RW-UV */
#define CR_CMC_CMDQ_PRT_RTC_MIN_2                        0x00000002 /* RWIUV */
#define CR_CMC_CMDQ_PRT_RTC_MIN__PROD_C                  0x00000002 /* RW-UV */
#define CR_CMC_CMDQ_PRT_RTC_MIN_3                        0x00000003 /* RW-UV */
#define CR_CMC_CMDQ_PRT_RTC_MIN_4                        0x00000004 /* RW-UV */
#define CR_CMC_CMDQ_PRT_RTC_MIN_5                        0x00000005 /* RW-UV */
#define CR_CMC_CMDQ_PRT_RTC_MIN_6                        0x00000006 /* RW-UV */
#define CR_CMC_CMDQ_PRT_RTC_MIN_7                        0x00000007 /* RW-UV */
#define CR_CMC_CMDQ_PRT_RTC_MIN_8                        0x00000008 /* RW-UV */
#define CR_CMC_CMDQ_PRT_RTC_MIN_9                        0x00000009 /* RW-UV */
#define CR_CMC_CMDQ_PRT_RTC_MIN_10                       0x0000000a /* RW-UV */
#define CR_CMC_CMDQ_PRT_RTC_MIN_11                       0x0000000b /* RW-UV */
#define CR_CMC_CMDQ_PRT_RTC_MIN_12                       0x0000000c /* RW-UV */
#define CR_CMC_CMDQ_PRT_RTC_MIN_13                       0x0000000d /* RW-UV */
#define CR_CMC_CMDQ_PRT_RTC_MIN_14                       0x0000000e /* RW-UV */
#define CR_CMC_CMDQ_PRT_RTC_MIN_15                       0x0000000f /* RW-UV */
#define CR_CMC_CPU_RRQ                                   0x800001F8 /* RW-4R */
#define CR_CMC_CPU_RRQ_BYPASS                                   0:0 /* RWIVF */
#define CR_CMC_CPU_RRQ_BYPASS_DISABLED                   0x00000000 /* R-I-V */
#define CR_CMC_CPU_RRQ_BYPASS_ENABLED                    0x00000001 /* R---V */
#define CR_CMC_CPU_RRQ_BYPASS__PROD_C                    0x00000001 /* R---V */
#define CR_CMC_CPU_RRQ_LATENCY                                  7:4 /* RWIUF */
#define CR_CMC_CPU_RRQ_LATENCY_MIN                       0x00000000 /* R---V */
#define CR_CMC_CPU_RRQ_LATENCY_0                         0x00000000 /* R---V */
#define CR_CMC_CPU_RRQ_LATENCY_1                         0x00000001 /* R---V */
#define CR_CMC_CPU_RRQ_LATENCY_2                         0x00000002 /* R---V */
#define CR_CMC_CPU_RRQ_LATENCY_3                         0x00000003 /* R---V */
#define CR_CMC_CPU_RRQ_LATENCY_4                         0x00000004 /* R---V */
#define CR_CMC_CPU_RRQ_LATENCY_5                         0x00000005 /* R---V */
#define CR_CMC_CPU_RRQ_LATENCY_6                         0x00000006 /* R---V */
#define CR_CMC_CPU_RRQ_LATENCY__PROD_C                   0x00000006 /* R---V */
#define CR_CMC_CPU_RRQ_LATENCY_MAX                       0x00000006 /* R-I-V */
#define CR_CMC_CPU_RRQ_FWP                                     11:8 /* RWIUF */
#define CR_CMC_CPU_RRQ_FWP_MIN                           0x00000003 /* R---V */
#define CR_CMC_CPU_RRQ_FWP_3                             0x00000003 /* R---V */
#define CR_CMC_CPU_RRQ_FWP_4                             0x00000004 /* R---V */
#define CR_CMC_CPU_RRQ_FWP__PROD                         0x00000004 /* R---V */
#define CR_CMC_CPU_RRQ_FWP_MAX                           0x00000004 /* R-I-V */
#define CR_CMC_BYPASS                                    0x800001FC /* RW-4R */
#define CR_CMC_BYPASS_FAST_READ                                 0:0 /* RWIVF */
#define CR_CMC_BYPASS_FAST_READ_DISABLED                 0x00000000 /* RWI-V */
#define CR_CMC_BYPASS_FAST_READ__PROD_C                  0x00000000 /* RW--V */
#define CR_CMC_BYPASS_FAST_READ_ENABLED                  0x00000001 /* RW--V */
#define CR_CMC_BYPASS_SINGLE_CYCLE                              4:4 /* RWIVF */
#define CR_CMC_BYPASS_SINGLE_CYCLE_DISABLED              0x00000000 /* RWI-V */
#define CR_CMC_BYPASS_SINGLE_CYCLE__PROD_C               0x00000000 /* RW--V */
#define CR_CMC_BYPASS_SINGLE_CYCLE_ENABLED               0x00000001 /* RW--V */
#define CR_CMC_BYPASS_BLOCK_WBC_AUTOPRE                         5:5 /* RWIVF */
#define CR_CMC_BYPASS_BLOCK_WBC_AUTOPRE_DISABLED         0x00000000 /* RW--V */
#define CR_CMC_BYPASS_BLOCK_WBC_AUTOPRE_ENABLED          0x00000001 /* RWI-V */
#define CR_CMC_BYPASS_BLOCK_WBC_AUTOPRE__PROD_C          0x00000001 /* RW--V */
#define CR_CMC_BYPASS_ALLOW_CPUREAD_DURING_BYPASS               8:8 /* RWIVF */
#define CR_CMC_BYPASS_ALLOW_CPUREAD_DURING_BYPASS_FALSE  0x00000000 /* RWI-V */
#define CR_CMC_BYPASS_ALLOW_CPUREAD_DURING_BYPASS__PROD_C 0x00000000 /* RW--V */
#define CR_CMC_BYPASS_ALLOW_CPUREAD_DURING_BYPASS_TRUE   0x00000001 /* RW--V */
#define CR_CMC_BYPASS_DEBUG                                    15:9 /* RWIVF */
#define CR_CMC_BYPASS_DEBUG_INIT                         0x00000000 /* RWI-V */
#define CR_CMC_BYPASS_DEBUG__PROD                        0x00000000 /* RW--V */
#define CR_CMC_BYPASS_MAX_CPU_LATENCY                         18:16 /* RWIUF */
#define CR_CMC_BYPASS_MAX_CPU_LATENCY_0                  0x00000000 /* RW-UV */
#define CR_CMC_BYPASS_MAX_CPU_LATENCY_1                  0x00000001 /* RW-UV */
#define CR_CMC_BYPASS_MAX_CPU_LATENCY_2                  0x00000002 /* RW-UV */
#define CR_CMC_BYPASS_MAX_CPU_LATENCY_3                  0x00000003 /* RWIUV */
#define CR_CMC_BYPASS_MAX_CPU_LATENCY__PROD_C            0x00000003 /* RW-UV */
#define CR_CMC_BYPASS_MAX_CPU_LATENCY_4                  0x00000004 /* RW-UV */
#define CR_CMC_BYPASS_MAX_CPU_LATENCY_5                  0x00000005 /* RW-UV */
#define CR_CMC_BYPASS_MAX_CPU_LATENCY_6                  0x00000006 /* RW-UV */
#define CR_CMC_BYPASS_MAX_CPU_LATENCY_7                  0x00000007 /* RW-UV */
#define CR_CMC_BYPASS_MAX_MEM_LATENCY                         22:20 /* RWIUF */
#define CR_CMC_BYPASS_MAX_MEM_LATENCY_0                  0x00000000 /* RW-UV */
#define CR_CMC_BYPASS_MAX_MEM_LATENCY_1                  0x00000001 /* RW-UV */
#define CR_CMC_BYPASS_MAX_MEM_LATENCY_2                  0x00000002 /* RWIUV */
#define CR_CMC_BYPASS_MAX_MEM_LATENCY_3                  0x00000003 /* RW-UV */
#define CR_CMC_BYPASS_MAX_MEM_LATENCY_4                  0x00000004 /* RW-UV */
#define CR_CMC_BYPASS_MAX_MEM_LATENCY_5                  0x00000005 /* RW-UV */
#define CR_CMC_BYPASS_MAX_MEM_LATENCY_6                  0x00000006 /* RW-UV */
#define CR_CMC_BYPASS_MAX_MEM_LATENCY_7                  0x00000007 /* RW-UV */
#define CR_CMC_BYPASS_MAX_MEM_LATENCY__PROD              0x00000007 /* RW-UV */
#define CR_CMC_BYPASS_RR_SLOTS_NEEDED                         26:24 /* RWIUF */
#define CR_CMC_BYPASS_RR_SLOTS_NEEDED_0                  0x00000000 /* RW-UV */
#define CR_CMC_BYPASS_RR_SLOTS_NEEDED_1                  0x00000001 /* RW-UV */
#define CR_CMC_BYPASS_RR_SLOTS_NEEDED_2                  0x00000002 /* RWIUV */
#define CR_CMC_BYPASS_RR_SLOTS_NEEDED__PROD              0x00000002 /* RW-UV */
#define CR_CMC_BYPASS_RR_SLOTS_NEEDED_3                  0x00000003 /* RW-UV */
#define CR_CMC_BYPASS_RR_SLOTS_NEEDED_4                  0x00000004 /* RW-UV */
#define CR_CMC_BYPASS_RR_SLOTS_NEEDED_5                  0x00000005 /* RW-UV */
#define CR_CMC_BYPASS_RR_SLOTS_NEEDED_6                  0x00000006 /* RW-UV */
#define CR_CMC_BYPASS_RR_SLOTS_NEEDED_7                  0x00000007 /* RW-UV */
#define CR_CMC_BYPASS_ROW_EARLY_NONSPEC                       28:28 /* RWIVF */
#define CR_CMC_BYPASS_ROW_EARLY_NONSPEC_DISABLED         0x00000000 /* RWI-V */
#define CR_CMC_BYPASS_ROW_EARLY_NONSPEC__PROD_C          0x00000000 /* RW--V */
#define CR_CMC_BYPASS_ROW_EARLY_NONSPEC_ENABLED          0x00000001 /* RW--V */
#define CR_CMC_BYPASS_ROW_EARLY_SPEC                          29:29 /* RWIVF */
#define CR_CMC_BYPASS_ROW_EARLY_SPEC_DISABLED            0x00000000 /* RWI-V */
#define CR_CMC_BYPASS_ROW_EARLY_SPEC__PROD_C             0x00000000 /* RW--V */
#define CR_CMC_BYPASS_ROW_EARLY_SPEC_ENABLED             0x00000001 /* RW--V */
#define CR_CMC_CFG_0                                      0x80000100 /* C--4R */
#define CR_CMC_CFG_0_VENDOR_ID                                  15:0 /* C-IVF */
#define CR_CMC_CFG_0_VENDOR_ID_NVIDIA                     0x000010DE /* C-I-V */
#define CR_CMC_CFG_0_DEVICE_ID                                 31:16 /* C-IVF */
#define CR_CMC_CFG_0_DEVICE_ID_MEM_CTRL                   0x000001AC /* C-I-V */
#define CR_CMC_CFG_1                                      0x80000104 /* C--4R */
#define CR_CMC_CFG_1_IO_SPACE                                    0:0 /* C-IVF */
#define CR_CMC_CFG_1_IO_SPACE_DISABLED                    0x00000000 /* C-I-V */
#define CR_CMC_CFG_1_MEMORY_SPACE                                1:1 /* C-IVF */
#define CR_CMC_CFG_1_MEMORY_SPACE_DISABLED                0x00000000 /* C-I-V */
#define CR_CMC_CFG_1_BUS_MASTER                                  2:2 /* C-IVF */
#define CR_CMC_CFG_1_BUS_MASTER_DISABLED                  0x00000000 /* C-I-V */
#define CR_CMC_CFG_1_SPECIAL_CYCLE                               3:3 /* C-IVF */
#define CR_CMC_CFG_1_SPECIAL_CYCLE_DISABLED               0x00000000 /* C-I-V */
#define CR_CMC_CFG_1_WRITE_AND_INVAL                             4:4 /* C-IVF */
#define CR_CMC_CFG_1_WRITE_AND_INVAL_DISABLED             0x00000000 /* C-I-V */
#define CR_CMC_CFG_1_PALETTE_SNOOP                               5:5 /* C-IVF */
#define CR_CMC_CFG_1_PALETTE_SNOOP_DISABLED               0x00000000 /* C-I-V */
#define CR_CMC_CFG_1_PERR                                        6:6 /* C-IVF */
#define CR_CMC_CFG_1_PERR_DISABLED                        0x00000000 /* C-I-V */
#define CR_CMC_CFG_1_STEP                                        7:7 /* C-IVF */
#define CR_CMC_CFG_1_STEP_DISABLED                        0x00000000 /* C-I-V */
#define CR_CMC_CFG_1_SERR                                        8:8 /* C-IVF */
#define CR_CMC_CFG_1_SERR_DISABLED                        0x00000000 /* C-I-V */
#define CR_CMC_CFG_1_BACK2BACK                                   9:9 /* C-IVF */
#define CR_CMC_CFG_1_BACK2BACK_DISABLED                   0x00000000 /* C-I-V */
#define CR_CMC_CFG_1_CAPLIST                                   20:20 /* C-IVF */
#define CR_CMC_CFG_1_CAPLIST_NOT_PRESENT                  0x00000000 /* C-I-V */
#define CR_CMC_CFG_1_66MHZ                                     21:21 /* C-IVF */
#define CR_CMC_CFG_1_66MHZ_CAPABLE                        0x00000001 /* C-I-V */
#define CR_CMC_CFG_1_FAST_BACK2BACK                            23:23 /* C-IVF */
#define CR_CMC_CFG_1_FAST_BACK2BACK_INCAPABLE             0x00000000 /* C-I-V */
#define CR_CMC_CFG_1_MASTER_DATA_PERR                          24:24 /* C-IVF */
#define CR_CMC_CFG_1_MASTER_DATA_PERR_NOT_ACTIVE          0x00000000 /* C-I-V */
#define CR_CMC_CFG_1_MASTER_DATA_PERR_ACTIVE              0x00000001 /* ----V */
#define CR_CMC_CFG_1_MASTER_DATA_PERR_CLEAR               0x00000001 /* ----V */
#define CR_CMC_CFG_1_DEVSEL_TIMING                             26:25 /* C-IVF */
#define CR_CMC_CFG_1_DEVSEL_TIMING_FAST                   0x00000000 /* C-I-V */
#define CR_CMC_CFG_1_DEVSEL_TIMING_MEDIUM                 0x00000001 /* ----V */
#define CR_CMC_CFG_1_DEVSEL_TIMING_SLOW                   0x00000002 /* ----V */
#define CR_CMC_CFG_1_SIGNALED_TARGET                           27:27 /* C-IVF */
#define CR_CMC_CFG_1_SIGNALED_TARGET_NO_ABORT             0x00000000 /* C-I-V */
#define CR_CMC_CFG_1_SIGNALED_TARGET_ABORT                0x00000001 /* ----V */
#define CR_CMC_CFG_1_SIGNALED_TARGET_CLEAR                0x00000001 /* ----V */
#define CR_CMC_CFG_1_RECEIVED_TARGET                           28:28 /* C-IVF */
#define CR_CMC_CFG_1_RECEIVED_TARGET_NO_ABORT             0x00000000 /* C-I-V */
#define CR_CMC_CFG_1_RECEIVED_TARGET_ABORT                0x00000001 /* ----V */
#define CR_CMC_CFG_1_RECEIVED_TARGET_CLEAR                0x00000001 /* ----V */
#define CR_CMC_CFG_1_RECEIVED_MASTER                           29:29 /* C-IVF */
#define CR_CMC_CFG_1_RECEIVED_MASTER_NO_ABORT             0x00000000 /* C-I-V */
#define CR_CMC_CFG_1_RECEIVED_MASTER_ABORT                0x00000001 /* ----V */
#define CR_CMC_CFG_1_RECEIVED_MASTER_CLEAR                0x00000001 /* ----V */
#define CR_CMC_CFG_1_SIGNALED_SERR                             30:30 /* C-IVF */
#define CR_CMC_CFG_1_SIGNALED_SERR_NOT_ACTIVE             0x00000000 /* C-I-V */
#define CR_CMC_CFG_1_SIGNALED_SERR_ACTIVE                 0x00000001 /* ----V */
#define CR_CMC_CFG_1_SIGNALED_SERR_CLEAR                  0x00000001 /* ----V */
#define CR_CMC_CFG_1_DETECTED_PERR                             31:31 /* C-IVF */
#define CR_CMC_CFG_1_DETECTED_PERR_NOT_ACTIVE             0x00000000 /* C-I-V */
#define CR_CMC_CFG_1_DETECTED_PERR_ACTIVE                 0x00000001 /* ----V */
#define CR_CMC_CFG_1_DETECTED_PERR_CLEAR                  0x00000001 /* ----V */
#define CR_CMC_CFG_2                                      0x80000108 /* R--4R */
#define CR_CMC_CFG_2_REVISION_ID                                 7:0 /* R--VF */
#define CR_CMC_CFG_2_REVISION_ID_A01                      0x000000A1 /* R---V */
#define CR_CMC_CFG_2_REVISION_ID_A02                      0x000000A2 /* R---V */
#define CR_CMC_CFG_2_CLASS_CODE                                 31:8 /* R--VF */
#define CR_CMC_CFG_2_CLASS_CODE_MEM_CTRL                  0x00050000 /* R---V */
#define CR_CMC_CFG_3                                      0x8000010C /* C--4R */
#define CR_CMC_CFG_3_CACHE_LINE_SIZE                             7:0 /* C-IVF */
#define CR_CMC_CFG_3_CACHE_LINE_SIZE_0                    0x00000000 /* C-I-V */
#define CR_CMC_CFG_3_CACHE_LINE_SIZE_32                   0x00000020 /* ----V */
#define CR_CMC_CFG_3_CACHE_LINE_SIZE_64                   0x00000040 /* ----V */
#define CR_CMC_CFG_3_LATENCY_TIMER                             15:11 /* C-IVF */
#define CR_CMC_CFG_3_LATENCY_TIMER_0_CLOCKS               0x00000000 /* C-I-V */
#define CR_CMC_CFG_3_LATENCY_TIMER_8_CLOCKS               0x00000001 /* ----V */
#define CR_CMC_CFG_3_LATENCY_TIMER_240_CLOCKS             0x0000001E /* ----V */
#define CR_CMC_CFG_3_LATENCY_TIMER_248_CLOCKS             0x0000001F /* ----V */
#define CR_CMC_CFG_3_HEADER_TYPE_DEVICE                        22:16 /* C-IVF */
#define CR_CMC_CFG_3_HEADER_TYPE_DEVICE_NON_BRIDGE        0x00000000 /* C-I-V */
#define CR_CMC_CFG_3_HEADER_TYPE_DEVICE_P2P_BRIDGE        0x00000001 /* ----V */
#define CR_CMC_CFG_3_HEADER_TYPE_FUNC                          23:23 /* C-IVF */
#define CR_CMC_CFG_3_HEADER_TYPE_FUNC_SINGLEFUNC          0x00000000 /* ----V */
#define CR_CMC_CFG_3_HEADER_TYPE_FUNC_MULTIFUNC           0x00000001 /* C-I-V */
#define CR_CMC_CFG_4(i)                           (0x80000110+(i)*4) /* C--4A */
#define CR_CMC_CFG_4__SIZE_1                                       7 /*       */
#define CR_CMC_CFG_4_RESERVED                                   31:0 /* C-IVF */
#define CR_CMC_CFG_4_RESERVED_0                           0x00000000 /* C-I-V */
#define CR_CMC_CFG_11                                     0x8000012C /* C--4R */
#define CR_CMC_CFG_11_SUBSYSTEM_VENDOR_ID                       15:0 /* C-IVF */
#define CR_CMC_CFG_11_SUBSYSTEM_VENDOR_ID_NONE            0x00000000 /* C-I-V */
#define CR_CMC_CFG_11_SUBSYSTEM_ID                             31:16 /* C-IVF */
#define CR_CMC_CFG_11_SUBSYSTEM_ID_NONE                   0x00000000 /* C-I-V */
#define CR_CMC_CFG_12                                     0x80000130 /* C--4R */
#define CR_CMC_CFG_12_RESERVED                                  31:0 /* C-IVF */
#define CR_CMC_CFG_12_RESERVED_0                          0x00000000 /* C-I-V */
#define CR_CMC_CFG_13                                     0x80000134 /* C--4R */
#define CR_CMC_CFG_13_CAP_PTR                                    7:0 /* C-IVF */
#define CR_CMC_CFG_13_CAP_PTR_NONE                        0x00000000 /* C-I-V */
#define CR_CMC_CFG_14                                     0x80000138 /* C--4R */
#define CR_CMC_CFG_14_RESERVED                                  31:0 /* C-IVF */
#define CR_CMC_CFG_14_RESERVED_0                          0x00000000 /* C-I-V */
#define CR_CMC_CFG_15                                     0x8000013C /* C--4R */
#define CR_CMC_CFG_15_INTR_LINE                                  7:0 /* C-IVF */
#define CR_CMC_CFG_15_INTR_LINE_IRQ0                      0x00000000 /* C-I-V */
#define CR_CMC_CFG_15_INTR_PIN                                  15:8 /* C-IVF */
#define CR_CMC_CFG_15_INTR_PIN_NONE                       0x00000000 /* C-I-V */
#define CR_CMC_CFG_15_INTR_PIN_INTA                       0x00000001 /* ----V */
#define CR_CMC_CFG_15_INTR_PIN_INTB                       0x00000002 /* ----V */
#define CR_CMC_CFG_15_INTR_PIN_INTC                       0x00000003 /* ----V */
#define CR_CMC_CFG_15_INTR_PIN_INTD                       0x00000004 /* ----V */
#define CR_CMC_CFG_15_MIN_GNT                                  23:16 /* C-IVF */
#define CR_CMC_CFG_15_MIN_GNT_NO_REQUIREMENTS             0x00000000 /* C-I-V */
#define CR_CMC_CFG_15_MIN_GNT_750NS                       0x00000003 /* ----V */
#define CR_CMC_CFG_15_MAX_LAT                                  31:24 /* C-IVF */
#define CR_CMC_CFG_15_MAX_LAT_NO_REQUIREMENTS             0x00000000 /* C-I-V */
#define CR_CMC_CFG_15_MAX_LAT_250NS                       0x00000001 /* ----V */
/* dev_cr_xl.ref */
#define CR_XL                                 0x800002FC:0x80000200 /* RW--D */
#define CR_XL_DIMM_CFG(i)                        (0x80000240+(i)*4) /* RW-4A */
#define CR_XL_DIMM_CFG__SIZE_1                                    4 /*       */
#define CR_XL_DIMM_CFG_PRESENT                                  0:0 /* RWIVF */
#define CR_XL_DIMM_CFG_PRESENT_FALSE                     0x00000000 /* RWI-V */
#define CR_XL_DIMM_CFG_PRESENT_TRUE                      0x00000001 /* RW--V */
#define CR_XL_DIMM_CFG_PRESENT__PROD_C                   0x00000000 /* ----V */
#define CR_XL_DIMM_CFG_SIZE                                    14:8 /* RW-VF */
#define CR_XL_DIMM_CFG_SIZE_16MB                         0x00000001 /* RW--V */
#define CR_XL_DIMM_CFG_SIZE_32MB                         0x00000002 /* RW--V */
#define CR_XL_DIMM_CFG_SIZE_64MB                         0x00000004 /* RW--V */
#define CR_XL_DIMM_CFG_SIZE_128MB                        0x00000008 /* RW--V */
#define CR_XL_DIMM_CFG_SIZE_256MB                        0x00000010 /* RW--V */
#define CR_XL_DIMM_CFG_SIZE_512MB                        0x00000020 /* RW--V */
#define CR_XL_DIMM_CFG_SIZE_1GB                          0x00000040 /* RW--V */
#define CR_XL_DIMM_CFG_SIZE__PROD_C                      0x00000000 /* ----V */
#define CR_XL_DIMM_CFG_NUM_ROW_BITS                           17:16 /* RW-VF */
#define CR_XL_DIMM_CFG_NUM_ROW_BITS_11                   0x00000000 /* RW--V */
#define CR_XL_DIMM_CFG_NUM_ROW_BITS_12                   0x00000001 /* RW--V */
#define CR_XL_DIMM_CFG_NUM_ROW_BITS_13                   0x00000002 /* RW--V */
#define CR_XL_DIMM_CFG_NUM_ROW_BITS__PROD_C              0x00000000 /* ----V */
#define CR_XL_DIMM_CFG_NUM_COL_BITS                           21:20 /* RW-VF */
#define CR_XL_DIMM_CFG_NUM_COL_BITS_8                    0x00000000 /* RW--V */
#define CR_XL_DIMM_CFG_NUM_COL_BITS_9                    0x00000001 /* RW--V */
#define CR_XL_DIMM_CFG_NUM_COL_BITS_10                   0x00000002 /* RW--V */
#define CR_XL_DIMM_CFG_NUM_COL_BITS_11                   0x00000003 /* RW--V */
#define CR_XL_DIMM_CFG_NUM_COL_BITS__PROD_C              0x00000000 /* ----V */
#define CR_XL_DIMM_CFG_NUM_EXT_BANKS                          24:24 /* RW-VF */
#define CR_XL_DIMM_CFG_NUM_EXT_BANKS_1                   0x00000000 /* RW--V */
#define CR_XL_DIMM_CFG_NUM_EXT_BANKS_2                   0x00000001 /* RW--V */
#define CR_XL_DIMM_CFG_NUM_EXT_BANKS__PROD_C             0x00000000 /* ----V */
#define CR_XL_TBASE(i)                           (0x80000250+(i)*4) /* RW-4A */
#define CR_XL_TBASE__SIZE_1                                       8 /*       */
#define CR_XL_TBASE_PITCH                                       7:0 /* RW-UF */
#define CR_XL_TBASE_PITCH_0200                           0x00000002 /* RW--V */
#define CR_XL_TBASE_PITCH_0300                           0x00000003 /* RW--V */
#define CR_XL_TBASE_PITCH_0400                           0x00000004 /* RW--V */
#define CR_XL_TBASE_PITCH_0500                           0x00000005 /* RW--V */
#define CR_XL_TBASE_PITCH_0600                           0x00000006 /* RW--V */
#define CR_XL_TBASE_PITCH_0700                           0x00000007 /* RW--V */
#define CR_XL_TBASE_PITCH_0800                           0x00000008 /* RW--V */
#define CR_XL_TBASE_PITCH_0A00                           0x0000000A /* RW--V */
#define CR_XL_TBASE_PITCH_0C00                           0x0000000C /* RW--V */
#define CR_XL_TBASE_PITCH_0E00                           0x0000000E /* RW--V */
#define CR_XL_TBASE_PITCH_1000                           0x00000010 /* RW--V */
#define CR_XL_TBASE_PITCH_1400                           0x00000014 /* RW--V */
#define CR_XL_TBASE_PITCH_1800                           0x00000018 /* RW--V */
#define CR_XL_TBASE_PITCH_1C00                           0x0000001C /* RW--V */
#define CR_XL_TBASE_PITCH_2000                           0x00000020 /* RW--V */
#define CR_XL_TBASE_PITCH_2800                           0x00000028 /* RW--V */
#define CR_XL_TBASE_PITCH_3000                           0x00000030 /* RW--V */
#define CR_XL_TBASE_PITCH_3800                           0x00000038 /* RW--V */
#define CR_XL_TBASE_PITCH_4000                           0x00000040 /* RW--V */
#define CR_XL_TBASE_PITCH_5000                           0x00000050 /* RW--V */
#define CR_XL_TBASE_PITCH_6000                           0x00000060 /* RW--V */
#define CR_XL_TBASE_PITCH_7000                           0x00000070 /* RW--V */
#define CR_XL_TBASE_PITCH_8000                           0x00000080 /* RW--V */
#define CR_XL_TBASE_PITCH_A000                           0x000000A0 /* RW--V */
#define CR_XL_TBASE_PITCH_C000                           0x000000C0 /* RW--V */
#define CR_XL_TBASE_PITCH_E000                           0x000000E0 /* RW--V */
#define CR_XL_TBASE_REGION                                      8:8 /* RWIVF */
#define CR_XL_TBASE_REGION_INVALID                       0x00000000 /* RWI-V */
#define CR_XL_TBASE_REGION_VALID                         0x00000001 /* RW--V */
#define CR_XL_TBASE_BANK0_SENSE                                 9:9 /* RWIVF */
#define CR_XL_TBASE_BANK0_SENSE_0                        0x00000000 /* RWI-V */
#define CR_XL_TBASE_BANK0_SENSE_1                        0x00000001 /* RW--V */
#define CR_XL_TBASE_ADR                                       30:14 /* RW-UF */
#define CR_XL_TLIMIT(i)                          (0x80000270+(i)*4) /* RW-4A */
#define CR_XL_TLIMIT__SIZE_1                                      8 /*       */
#define CR_XL_TLIMIT_ADR                                      30:14 /* RW-UF */
#define CR_XL_TLIMIT_ADR_LO                                    13:0 /* C-IVF */
#define CR_XL_TLIMIT_ADR_LO_3FFF                         0x00003FFF /* C-I-V */
#define CR_XL_TSTATUS(i)                         (0x80000290+(i)*4) /* R--4A */
#define CR_XL_TSTATUS__SIZE_1                                     8 /*       */
#define CR_XL_TSTATUS_REGION                                    0:0 /* R-IVF */
#define CR_XL_TSTATUS_REGION_INVALID                     0x00000000 /* R-I-V */
#define CR_XL_TSTATUS_REGION_VALID                       0x00000001 /* R---V */
#define CR_XL_TSTATUS_PRIME                                     9:8 /* R--VF */
#define CR_XL_TSTATUS_PRIME_1                            0x00000000 /* R---V */
#define CR_XL_TSTATUS_PRIME_3                            0x00000001 /* R---V */
#define CR_XL_TSTATUS_PRIME_5                            0x00000002 /* R---V */
#define CR_XL_TSTATUS_PRIME_7                            0x00000003 /* R---V */
#define CR_XL_TSTATUS_FACTOR                                  18:16 /* R--VF */
#define CR_XL_TSTATUS_FACTOR_1                           0x00000000 /* R---V */
#define CR_XL_TSTATUS_FACTOR_2                           0x00000001 /* R---V */
#define CR_XL_TSTATUS_FACTOR_4                           0x00000002 /* R---V */
#define CR_XL_TSTATUS_FACTOR_8                           0x00000003 /* R---V */
#define CR_XL_TSTATUS_FACTOR_16                          0x00000004 /* R---V */
#define CR_XL_TSTATUS_FACTOR_32                          0x00000005 /* R---V */
#define CR_XL_TSTATUS_FACTOR_64                          0x00000006 /* R---V */
#define CR_XL_TSTATUS_FACTOR_128                         0x00000007 /* R---V */
#define CR_XL_FB_TLB_AD                                 0x800002B0 /* RW-4R */
#define CR_XL_FB_TLB_AD_ADDR                                  18:0 /* RW-VF */
#define CR_XL_FB_TLB_AD_TAG                                  27:19 /* RW-VF */
#define CR_XL_FB_TLB_AD_WRITE				     31:31 /* RWIVF */
#define CR_XL_FB_TLB_AD_WRITE_NOT_PENDING		0x00000000 /* RWI-V */
#define CR_XL_FB_TLB_AD_WRITE_PENDING			0x00000001 /* -W--T */
#define CR_XL_FB_TLB_CFG                                 0x800002B4 /* RW-4R */
#define CR_XL_FB_TLB_CFG_REPL                                   0:0 /* RWIVF */
#define CR_XL_FB_TLB_CFG_REPL_LRU                        0x00000000 /* RW--V */
#define CR_XL_FB_TLB_CFG_REPL_MRU                        0x00000001 /* RWI-V */
#define CR_XL_FB_TLB_CFG_FLUSH                                  1:1 /* RWIVF */
#define CR_XL_FB_TLB_CFG_FLUSH_NOT_PENDING               0x00000000 /* RWI-V */
#define CR_XL_FB_TLB_CFG_FLUSH_PENDING                   0x00000001 /* -W--T */
#define CR_XL_SYSMEM                                     0x800002B8 /* R--4R */
#define CR_XL_SYSMEM_AMOUNT                                     7:0 /* R-IVF */
#define CR_XL_SYSMEM_AMOUNT_16MB                         0x00000001 /* R---V */
#define CR_XL_SYSMEM_AMOUNT_32MB                         0x00000002 /* R-I-V */
#define CR_XL_SYSMEM_AMOUNT_64MB                         0x00000004 /* R---V */
#define CR_XL_SYSMEM_AMOUNT_96MB                         0x00000006 /* R---V */
#define CR_XL_SYSMEM_AMOUNT_128MB                        0x00000008 /* R---V */
#define CR_XL_SYSMEM_AMOUNT_192MB                        0x0000000C /* R---V */
#define CR_XL_SYSMEM_AMOUNT_256MB                        0x00000010 /* R---V */
#define CR_XL_SYSMEM_AMOUNT_512MB                        0x00000020 /* R---V */
#define CR_XL_SYSMEM_AMOUNT_1024MB                       0x00000040 /* R---V */
#define CR_XL_SYSMEM_AMOUNT_1536MB                       0x00000060 /* R---V */
#define CR_XL_SYSMEM_RAMFULL                                  31:31 /* R--VF */
#define CR_XL_GART_PTE			     0x0007FFFF:0x00000000 /* RW--M */
#define CR_XL_GART_PTE_STATE				       0:0 /* RWXVF */
#define CR_XL_GART_PTE_STATE_INVALID			0x00000000 /* RW--V */
#define CR_XL_GART_PTE_STATE_VALID			0x00000001 /* RW--V */
#define CR_XL_GART_PTE_TRANSLATION			     31:12 /* RWXVF */
#define CR_XL_FBIO_CALSEL                               0x800002C4 /* RW-4R */
#define CR_XL_FBIO_CALSEL_SOURCE                               3:0 /* RWIVF */
#define CR_XL_FBIO_CALSEL_SOURCE_VCC_A                  0x00000000 /* RWI-V */
#define CR_XL_FBIO_CALSEL_SOURCE_VCC_B                  0x00000001 /* RW--V */
#define CR_XL_FBIO_CALSEL_SOURCE_VCC_C                  0x00000002 /* RW--V */
#define CR_XL_FBIO_CALSEL_SOURCE_VCC_D                  0x00000003 /* RW--V */
#define CR_XL_FBIO_CALSEL_SOURCE_VCCQ_A                 0x00000004 /* RW--V */
#define CR_XL_FBIO_CALSEL_SOURCE_VCCQ_B                 0x00000005 /* RW--V */
#define CR_XL_FBIO_CALSEL_SOURCE_VCCQ_C                 0x00000006 /* RW--V */
#define CR_XL_FBIO_CALSEL_SOURCE_VCCQ_D                 0x00000007 /* RW--V */
#define CR_XL_FBIO_CALSEL_SOURCE_PCI                    0x00000008 /* RW--V */
#define CR_XL_FBIO_CALSEL_SOURCE_CORE                   0x00000009 /* RW--V */
#define CR_XL_FBIO_CALSEL_SOURCE_RESERVED0              0x0000000A /* RW--V */
#define CR_XL_FBIO_CALSEL_SOURCE_RESERVED1              0x0000000B /* RW--V */
#define CR_XL_FBIO_CALSEL_SOURCE_RESERVED2              0x0000000C /* RW--V */
#define CR_XL_FBIO_CALSEL_SOURCE_RESERVED3              0x0000000D /* RW--V */
#define CR_XL_FBIO_CALSEL_SOURCE_RESERVED4              0x0000000E /* RW--V */
#define CR_XL_FBIO_CALSEL_SOURCE_RESERVED5              0x0000000F /* RW--V */
#define CR_XL_FBIO_CALSEL_REF_SEL                              8:8 /* RWIVF */
#define CR_XL_FBIO_CALSEL_REF_SEL_XTAL                  0x00000000 /* RWI-V */
#define CR_XL_FBIO_CALSEL_REF_SEL_PCICLK                0x00000001 /* RW--V */
#define CR_XL_FBIO_CALSEL_REF_DIV                            19:16 /* RWIVF */
#define CR_XL_FBIO_CALSEL_REF_DIV_0                     0x00000000 /* RWI-V */
#define CR_XL_FBIO_CALSEL_REF_DIV_4                     0x00000004 /* RW--V */
#define CR_XL_FBIO_CALSEL_REF_DIV_16                    0x0000000F /* RW--V */
#define CR_XL_FBIO_CALSEL_OSC                                20:20 /* RWIVF */
#define CR_XL_FBIO_CALSEL_OSC_ON                        0x00000000 /* RWI-V */
#define CR_XL_FBIO_CALSEL_PN_RATIO                           21:21 /* RWIVF */
#define CR_XL_FBIO_CALSEL_PN_RATIO_ON                   0x00000000 /* RWI-V */
#define CR_XL_FBIO_CALCNT                               0x800002C8 /* R--4R */
#define CR_XL_FBIO_CALCNT_FBIO_CALCNT                         31:0 /* R--UF */
#define CR_XL_FBIO_CALPN                                0x800002CC /* R--4R */
#define CR_XL_FBIO_CALPN_FBIO_CALPN                           31:0 /* R--UF */
#define CR_XL_GART_CONTROL				0x800002D0 /* RW-4R */
#define CR_XL_GART_CONTROL_CACHE			       0:0 /* RWIVF */
#define CR_XL_GART_CONTROL_CACHE_DISABLE		0x00000000 /* RWI-V */
#define CR_XL_GART_CONTROL_CACHE_ENABLE			0x00000001 /* RW--V */
#define CR_XL_GART_CONTROL_FLUSH			       2:2 /* RWIVF */
#define CR_XL_GART_CONTROL_FLUSH_NOT_PENDING		0x00000000 /* RWI-V */
#define CR_XL_GART_CONTROL_FLUSH_PENDING		0x00000001 /* -W--T */
#define CR_XL_GART_CONTROL_SERR_ENABLE			       4:4 /* RWIVF */
#define CR_XL_GART_CONTROL_SERR_ENABLE_OFF		0x00000000 /* RWI-V */
#define CR_XL_GART_CONTROL_SERR_ENABLE_ON		0x00000001 /* RW--V */
#define CR_XL_GART_STATUS				0x800002D4 /* RW-4R */
#define CR_XL_GART_STATUS_DIRECTORY_ERROR		       0:0 /* RWIVF */
#define CR_XL_GART_STATUS_DIRECTORY_ERROR_NOT_PENDING	0x00000000 /* R-I-V */
#define CR_XL_GART_STATUS_DIRECTORY_ERROR_PENDING	0x00000001 /* R---V */
#define CR_XL_GART_STATUS_DIRECTORY_ERROR_SET		0x00000001 /* -W--C */
#define CR_XL_GART_STATUS_PAGE_TABLE_ERROR		       2:2 /* RWIVF */
#define CR_XL_GART_STATUS_PAGE_TABLE_ERROR_NOT_PENDING	0x00000000 /* R-I-V */
#define CR_XL_GART_STATUS_PAGE_TABLE_ERROR_PENDING	0x00000001 /* R---V */
#define CR_XL_GART_STATUS_PAGE_TABLE_ERROR_SET		0x00000001 /* -W--C */
#define CR_XL_APERTURE_BASE				0x800002D8 /* RW-4R */
#define CR_XL_APERTURE_BASE_24_0			      24:0 /* C-IVF */
#define CR_XL_APERTURE_BASE_24_0_ZERO			0x00000000 /* C-I-V */
#define CR_XL_APERTURE_BASE_31_25			     31:25 /* RWIVF */
#define CR_XL_APERTURE_BASE_31_25_2GB			0x00000040 /* RWI-V */
#define CR_XL_APERTURE_LIMIT				0x800002DC /* RW-4R */
#define CR_XL_APERTURE_LIMIT_24_0			      24:0 /* C-IVF */
#define CR_XL_APERTURE_LIMIT_24_0_0X1FFFFFF		0x01FFFFFF /* C-I-V */
#define CR_XL_APERTURE_LIMIT_31_25			     31:25 /* RWIVF */
#define CR_XL_APERTURE_LIMIT_31_25_3GB			0x0000005F /* RWI-V */
#define CR_XL_APERTURE_LIMIT_31_25_4GB			0x0000007F /* RW--V */
#define CR_XL_GART_DIRECTORY(i)			(0x800002E0+(i)*4) /* RW-4A */
#define CR_XL_GART_DIRECTORY__SIZE_1				 8 /*       */
#define CR_XL_GART_DIRECTORY_STATE			       0:0 /* RWIVF */
#define CR_XL_GART_DIRECTORY_STATE_INVALID		0x00000000 /* RWI-V */
#define CR_XL_GART_DIRECTORY_STATE_VALID		0x00000001 /* RW--V */
#define CR_XL_GART_DIRECTORY_PTE_POINTER		     31:12 /* RWXVF */
#define CR_XL_CFG_0                                       0x80000200 /* C--4R */
#define CR_XL_CFG_0_VENDOR_ID                                   15:0 /* C-IVF */
#define CR_XL_CFG_0_VENDOR_ID_NVIDIA                      0x000010DE /* C-I-V */
#define CR_XL_CFG_0_DEVICE_ID                                  31:16 /* C-IVF */
#define CR_XL_CFG_0_DEVICE_ID_MEM_CTRL                    0x000001AD /* C-I-V */
#define CR_XL_CFG_1                                       0x80000204 /* C--4R */
#define CR_XL_CFG_1_IO_SPACE                                     0:0 /* C-IVF */
#define CR_XL_CFG_1_IO_SPACE_DISABLED                     0x00000000 /* C-I-V */
#define CR_XL_CFG_1_MEMORY_SPACE                                 1:1 /* C-IVF */
#define CR_XL_CFG_1_MEMORY_SPACE_DISABLED                 0x00000000 /* C-I-V */
#define CR_XL_CFG_1_BUS_MASTER                                   2:2 /* C-IVF */
#define CR_XL_CFG_1_BUS_MASTER_DISABLED                   0x00000000 /* C-I-V */
#define CR_XL_CFG_1_SPECIAL_CYCLE                                3:3 /* C-IVF */
#define CR_XL_CFG_1_SPECIAL_CYCLE_DISABLED                0x00000000 /* C-I-V */
#define CR_XL_CFG_1_WRITE_AND_INVAL                              4:4 /* C-IVF */
#define CR_XL_CFG_1_WRITE_AND_INVAL_DISABLED              0x00000000 /* C-I-V */
#define CR_XL_CFG_1_PALETTE_SNOOP                                5:5 /* C-IVF */
#define CR_XL_CFG_1_PALETTE_SNOOP_DISABLED                0x00000000 /* C-I-V */
#define CR_XL_CFG_1_PERR                                         6:6 /* C-IVF */
#define CR_XL_CFG_1_PERR_DISABLED                         0x00000000 /* C-I-V */
#define CR_XL_CFG_1_STEP                                         7:7 /* C-IVF */
#define CR_XL_CFG_1_STEP_DISABLED                         0x00000000 /* C-I-V */
#define CR_XL_CFG_1_SERR                                         8:8 /* C-IVF */
#define CR_XL_CFG_1_SERR_DISABLED                         0x00000000 /* C-I-V */
#define CR_XL_CFG_1_BACK2BACK                                    9:9 /* C-IVF */
#define CR_XL_CFG_1_BACK2BACK_DISABLED                    0x00000000 /* C-I-V */
#define CR_XL_CFG_1_CAPLIST                                    20:20 /* C-IVF */
#define CR_XL_CFG_1_CAPLIST_NOT_PRESENT                   0x00000000 /* C-I-V */
#define CR_XL_CFG_1_66MHZ                                      21:21 /* C-IVF */
#define CR_XL_CFG_1_66MHZ_CAPABLE                         0x00000001 /* C-I-V */
#define CR_XL_CFG_1_FAST_BACK2BACK                             23:23 /* C-IVF */
#define CR_XL_CFG_1_FAST_BACK2BACK_INCAPABLE              0x00000000 /* C-I-V */
#define CR_XL_CFG_1_MASTER_DATA_PERR                           24:24 /* C-IVF */
#define CR_XL_CFG_1_MASTER_DATA_PERR_NOT_ACTIVE           0x00000000 /* C-I-V */
#define CR_XL_CFG_1_MASTER_DATA_PERR_ACTIVE               0x00000001 /* ----V */
#define CR_XL_CFG_1_MASTER_DATA_PERR_CLEAR                0x00000001 /* ----V */
#define CR_XL_CFG_1_DEVSEL_TIMING                              26:25 /* C-IVF */
#define CR_XL_CFG_1_DEVSEL_TIMING_FAST                    0x00000000 /* C-I-V */
#define CR_XL_CFG_1_DEVSEL_TIMING_MEDIUM                  0x00000001 /* ----V */
#define CR_XL_CFG_1_DEVSEL_TIMING_SLOW                    0x00000002 /* ----V */
#define CR_XL_CFG_1_SIGNALED_TARGET                            27:27 /* C-IVF */
#define CR_XL_CFG_1_SIGNALED_TARGET_NO_ABORT              0x00000000 /* C-I-V */
#define CR_XL_CFG_1_SIGNALED_TARGET_ABORT                 0x00000001 /* ----V */
#define CR_XL_CFG_1_SIGNALED_TARGET_CLEAR                 0x00000001 /* ----V */
#define CR_XL_CFG_1_RECEIVED_TARGET                            28:28 /* C-IVF */
#define CR_XL_CFG_1_RECEIVED_TARGET_NO_ABORT              0x00000000 /* C-I-V */
#define CR_XL_CFG_1_RECEIVED_TARGET_ABORT                 0x00000001 /* ----V */
#define CR_XL_CFG_1_RECEIVED_TARGET_CLEAR                 0x00000001 /* ----V */
#define CR_XL_CFG_1_RECEIVED_MASTER                            29:29 /* C-IVF */
#define CR_XL_CFG_1_RECEIVED_MASTER_NO_ABORT              0x00000000 /* C-I-V */
#define CR_XL_CFG_1_RECEIVED_MASTER_ABORT                 0x00000001 /* ----V */
#define CR_XL_CFG_1_RECEIVED_MASTER_CLEAR                 0x00000001 /* ----V */
#define CR_XL_CFG_1_SIGNALED_SERR                              30:30 /* C-IVF */
#define CR_XL_CFG_1_SIGNALED_SERR_NOT_ACTIVE              0x00000000 /* C-I-V */
#define CR_XL_CFG_1_SIGNALED_SERR_ACTIVE                  0x00000001 /* ----V */
#define CR_XL_CFG_1_SIGNALED_SERR_CLEAR                   0x00000001 /* ----V */
#define CR_XL_CFG_1_DETECTED_PERR                              31:31 /* C-IVF */
#define CR_XL_CFG_1_DETECTED_PERR_NOT_ACTIVE              0x00000000 /* C-I-V */
#define CR_XL_CFG_1_DETECTED_PERR_ACTIVE                  0x00000001 /* ----V */
#define CR_XL_CFG_1_DETECTED_PERR_CLEAR                   0x00000001 /* ----V */
#define CR_XL_CFG_2                                       0x80000208 /* R--4R */
#define CR_XL_CFG_2_REVISION_ID                                  7:0 /* R--VF */
#define CR_XL_CFG_2_REVISION_ID_A01                       0x000000A1 /* R---V */
#define CR_XL_CFG_2_REVISION_ID_A02                       0x000000A2 /* R---V */
#define CR_XL_CFG_2_CLASS_CODE                                  31:8 /* R--VF */
#define CR_XL_CFG_2_CLASS_CODE_MEM_CTRL                   0x00050000 /* R---V */
#define CR_XL_CFG_3                                       0x8000020C /* C--4R */
#define CR_XL_CFG_3_CACHE_LINE_SIZE                              7:0 /* C-IVF */
#define CR_XL_CFG_3_CACHE_LINE_SIZE_0                     0x00000000 /* C-I-V */
#define CR_XL_CFG_3_CACHE_LINE_SIZE_32                    0x00000020 /* ----V */
#define CR_XL_CFG_3_CACHE_LINE_SIZE_64                    0x00000040 /* ----V */
#define CR_XL_CFG_3_LATENCY_TIMER                              15:11 /* C-IVF */
#define CR_XL_CFG_3_LATENCY_TIMER_0_CLOCKS                0x00000000 /* C-I-V */
#define CR_XL_CFG_3_LATENCY_TIMER_8_CLOCKS                0x00000001 /* ----V */
#define CR_XL_CFG_3_LATENCY_TIMER_240_CLOCKS              0x0000001E /* ----V */
#define CR_XL_CFG_3_LATENCY_TIMER_248_CLOCKS              0x0000001F /* ----V */
#define CR_XL_CFG_3_HEADER_TYPE_DEVICE                         22:16 /* C-IVF */
#define CR_XL_CFG_3_HEADER_TYPE_DEVICE_NON_BRIDGE         0x00000000 /* C-I-V */
#define CR_XL_CFG_3_HEADER_TYPE_DEVICE_P2P_BRIDGE         0x00000001 /* ----V */
#define CR_XL_CFG_3_HEADER_TYPE_FUNC                           23:23 /* C-IVF */
#define CR_XL_CFG_3_HEADER_TYPE_FUNC_SINGLEFUNC           0x00000000 /* ----V */
#define CR_XL_CFG_3_HEADER_TYPE_FUNC_MULTIFUNC            0x00000001 /* C-I-V */
#define CR_XL_CFG_4(i)                            (0x80000210+(i)*4) /* C--4A */
#define CR_XL_CFG_4__SIZE_1                                        7 /*       */
#define CR_XL_CFG_4_RESERVED                                    31:0 /* C-IVF */
#define CR_XL_CFG_4_RESERVED_0                            0x00000000 /* C-I-V */
#define CR_XL_CFG_11                                      0x8000022C /* C--4R */
#define CR_XL_CFG_11_SUBSYSTEM_VENDOR_ID                        15:0 /* C-IVF */
#define CR_XL_CFG_11_SUBSYSTEM_VENDOR_ID_NONE             0x00000000 /* C-I-V */
#define CR_XL_CFG_11_SUBSYSTEM_ID                              31:16 /* C-IVF */
#define CR_XL_CFG_11_SUBSYSTEM_ID_NONE                    0x00000000 /* C-I-V */
#define CR_XL_CFG_12                                      0x80000230 /* C--4R */
#define CR_XL_CFG_12_RESERVED                                   31:0 /* C-IVF */
#define CR_XL_CFG_12_RESERVED_0                           0x00000000 /* C-I-V */
#define CR_XL_CFG_13                                      0x80000234 /* C--4R */
#define CR_XL_CFG_13_CAP_PTR                                     7:0 /* C-IVF */
#define CR_XL_CFG_13_CAP_PTR_NONE                         0x00000000 /* C-I-V */
#define CR_XL_CFG_14                                      0x80000238 /* C--4R */
#define CR_XL_CFG_14_RESERVED                                   31:0 /* C-IVF */
#define CR_XL_CFG_14_RESERVED_0                           0x00000000 /* C-I-V */
#define CR_XL_CFG_15                                      0x8000023C /* C--4R */
#define CR_XL_CFG_15_INTR_LINE                                   7:0 /* C-IVF */
#define CR_XL_CFG_15_INTR_LINE_IRQ0                       0x00000000 /* C-I-V */
#define CR_XL_CFG_15_INTR_PIN                                   15:8 /* C-IVF */
#define CR_XL_CFG_15_INTR_PIN_NONE                        0x00000000 /* C-I-V */
#define CR_XL_CFG_15_INTR_PIN_INTA                        0x00000001 /* ----V */
#define CR_XL_CFG_15_INTR_PIN_INTB                        0x00000002 /* ----V */
#define CR_XL_CFG_15_INTR_PIN_INTC                        0x00000003 /* ----V */
#define CR_XL_CFG_15_INTR_PIN_INTD                        0x00000004 /* ----V */
#define CR_XL_CFG_15_MIN_GNT                                   23:16 /* C-IVF */
#define CR_XL_CFG_15_MIN_GNT_NO_REQUIREMENTS              0x00000000 /* C-I-V */
#define CR_XL_CFG_15_MIN_GNT_750NS                        0x00000003 /* ----V */
#define CR_XL_CFG_15_MAX_LAT                                   31:24 /* C-IVF */
#define CR_XL_CFG_15_MAX_LAT_NO_REQUIREMENTS              0x00000000 /* C-I-V */
#define CR_XL_CFG_15_MAX_LAT_250NS                        0x00000001 /* ----V */
/* dev_cr_cpu.ref */
#define CR_CPU                                0x800000FF:0x80000000 /* RW--D */
#define CR_CPU_CST                            0x800003FF:0x80000300 /* RW--D */
#define CR_CPU_PCI_0                                     0x80000000 /* R--4R */
#define CR_CPU_PCI_0_VENDOR_ID                                 15:0 /* C--VF */
#define CR_CPU_PCI_0_VENDOR_ID_NVIDIA                    0x000010DE /* C---V */
#define CR_CPU_PCI_0_DEVICE_ID                                31:16 /* R--VF */
#define CR_CPU_PCI_0_DEVICE_ID_NV1B_AMD                  0x000001A4 /* R---V */
#define CR_CPU_PCI_0_DEVICE_ID_NV1B_P6                   0x000001A5 /* R---V */
#define CR_CPU_PCI_0_DEVICE_ID_NV1B_TUALATIN             0x000001A6 /* R---V */
#define CR_CPU_PCI_1                                     0x80000004 /* R--4R */
#define CR_CPU_PCI_1_IO_SPACE                                   0:0 /* C--VF */
#define CR_CPU_PCI_1_IO_SPACE_DISABLED                   0x00000000 /* C---V */
#define CR_CPU_PCI_1_IO_SPACE_ENABLED                    0x00000001 /* ----V */
#define CR_CPU_PCI_1_MEMORY_SPACE                               1:1 /* C--VF */
#define CR_CPU_PCI_1_MEMORY_SPACE_DISABLED               0x00000000 /* ----V */
#define CR_CPU_PCI_1_MEMORY_SPACE_ENABLED                0x00000001 /* C---V */
#define CR_CPU_PCI_1_BUS_MASTER                                 2:2 /* C--VF */
#define CR_CPU_PCI_1_BUS_MASTER_DISABLED                 0x00000000 /* ----V */
#define CR_CPU_PCI_1_BUS_MASTER_ENABLED                  0x00000001 /* C---V */
#define CR_CPU_PCI_1_CAPLIST                                  20:20 /* C--VF */
#define CR_CPU_PCI_1_CAPLIST_NOT_PRESENT                 0x00000000 /* ----V */
#define CR_CPU_PCI_1_CAPLIST_PRESENT                     0x00000001 /* C---V */
#define CR_CPU_PCI_1_66MHZ                                    21:21 /* C--VF */
#define CR_CPU_PCI_1_66MHZ_NOT_CAPABLE                   0x00000000 /* ----V */
#define CR_CPU_PCI_1_66MHZ_CAPABLE                       0x00000001 /* C---V */
#define CR_CPU_PCI_2                                     0x80000008 /* R--4R */
#define CR_CPU_PCI_2_REVISION_ID                                7:0 /* C--VF */
#define CR_CPU_PCI_2_REVISION_ID_A01                     0x000000A1 /* C---V */
#define CR_CPU_PCI_2_REVISION_ID_A02                     0x000000A2 /* ----V */
#define CR_CPU_PCI_2_REVISION_ID_B01                     0x000000B1 /* ----V */
#define CR_CPU_PCI_2_INTERFACE                                 15:8 /* C--VF */
#define CR_CPU_PCI_2_INTERFACE_HOST_BRIDGE               0x00000000 /* C---V */
#define CR_CPU_PCI_2_SUBCLASS                                 23:16 /* C--VF */
#define CR_CPU_PCI_2_SUBCLASS_HOST_BRIDGE                0x00000000 /* C---V */
#define CR_CPU_PCI_2_CLASS                                    31:24 /* C--VF */
#define CR_CPU_PCI_2_CLASS_BRIDGE                        0x00000006 /* C---V */
#define CR_CPU_PCI_3                                     0x8000000C /* R--4R */
#define CR_CPU_PCI_3_LATENCY_TIMER                             15:8 /* C--VF */
#define CR_CPU_PCI_3_LATENCY_TIMER_0_CLOCKS              0x00000000 /* C---V */
#define CR_CPU_PCI_3_HEADER_TYPE                              23:16 /* C--VF */
#define CR_CPU_PCI_3_HEADER_TYPE_MULTIFUNC               0x00000080 /* C---V */
#define CR_CPU_PCI_3_HEADER_TYPE_SINGLEFUNC              0x00000000 /* ----V */
#define CR_CPU_PCI_4                                     0x80000010 /* RW-4R */
#define CR_CPU_PCI_4_SPACE_TYPE                                 0:0 /* C--VF */
#define CR_CPU_PCI_4_SPACE_TYPE_MEMORY                   0x00000000 /* C---V */
#define CR_CPU_PCI_4_SPACE_TYPE_IO                       0x00000001 /* ----V */
#define CR_CPU_PCI_4_ADDRESS_TYPE                               2:1 /* C--VF */
#define CR_CPU_PCI_4_ADDRESS_TYPE_32_BIT                 0x00000000 /* C---V */
#define CR_CPU_PCI_4_ADDRESS_TYPE_20_BIT                 0x00000001 /* ----V */
#define CR_CPU_PCI_4_ADDRESS_TYPE_64_BIT                 0x00000002 /* ----V */
#define CR_CPU_PCI_4_PREFETCHABLE                               3:3 /* C--VF */
#define CR_CPU_PCI_4_PREFETCHABLE_NOT                    0x00000000 /* ----V */
#define CR_CPU_PCI_4_PREFETCHABLE_MERGABLE               0x00000001 /* C---V */
#define CR_CPU_PCI_4_BASE_LOWER_ADDRESS                       28:25 /* RWXUF */
#define CR_CPU_PCI_4_BASE_UPPER_ADDRESS                       31:29 /* RWXUF */
#define CR_CPU_PCI_4_BASE_ADDRESS_512MB                       31:29 /* RWXUF */
#define CR_CPU_PCI_4_BASE_ADDRESS_256MB                       31:28 /* RWXUF */
#define CR_CPU_PCI_4_BASE_ADDRESS_128MB                       31:27 /* RWXUF */
#define CR_CPU_PCI_4_BASE_ADDRESS_64MB                        31:26 /* RWXUF */
#define CR_CPU_PCI_4_BASE_ADDRESS_32MB                        31:25 /* RWXUF */
#define CR_CPU_PCI_13                                    0x80000034 /* R--4R */
#define CR_CPU_PCI_13_CAP_PTR                                   7:0 /* C--VF */
#define CR_CPU_PCI_13_CAP_PTR_AGP                        0x00000040 /* C---V */
#define CR_CPU_AGP_0                                     0x80000040 /* R--4R */
#define CR_CPU_AGP_0_CAP_ID                                     7:0 /* C--VF */
#define CR_CPU_AGP_0_CAP_ID_AGP                          0x00000002 /* C---V */
#define CR_CPU_AGP_0_NEXT_PTR                                  15:8 /* C--VF */
#define CR_CPU_AGP_0_NEXT_PTR_LDT                        0x00000060 /* C---V */
#define CR_CPU_AGP_0_AGP_REV_MINOR                            19:16 /* C--VF */
#define CR_CPU_AGP_0_AGP_REV_MINOR_0                     0x00000000 /* C---V */
#define CR_CPU_AGP_0_AGP_REV_MAJOR                            23:20 /* C--VF */
#define CR_CPU_AGP_0_AGP_REV_MAJOR_2                     0x00000002 /* C---V */
#define CR_CPU_AGP_1                                     0x80000044 /* R--4R */
#define CR_CPU_AGP_1_STATUS_RQ                                31:24 /* C--VF */
#define CR_CPU_AGP_1_STATUS_RQ_32                        0x0000001F /* C---V */
#define CR_CPU_AGP_1_STATUS_SBA                                 9:9 /* C--VF */
#define CR_CPU_AGP_1_STATUS_SBA_NONE                     0x00000000 /* ----V */
#define CR_CPU_AGP_1_STATUS_SBA_CAPABLE                  0x00000001 /* C---V */
#define CR_CPU_AGP_1_STATUS_4G                                  5:5 /* C--VF */
#define CR_CPU_AGP_1_STATUS_4G_NONE                      0x00000000 /* C---V */
#define CR_CPU_AGP_1_STATUS_4G_CAPABLE                   0x00000001 /* ----V */
#define CR_CPU_AGP_1_STATUS_FW                                  4:4 /* C--VF */
#define CR_CPU_AGP_1_STATUS_FW_NONE                      0x00000000 /* ----V */
#define CR_CPU_AGP_1_STATUS_FW_CAPABLE                   0x00000001 /* C---V */
#define CR_CPU_AGP_1_STATUS_RATE                                2:0 /* C--VF */
#define CR_CPU_AGP_1_STATUS_RATE_1X                      0x00000001 /* ----V */
#define CR_CPU_AGP_1_STATUS_RATE_2X                      0x00000002 /* ----V */
#define CR_CPU_AGP_1_STATUS_RATE_1X_AND_2X               0x00000003 /* ----V */
#define CR_CPU_AGP_1_STATUS_RATE_4X                      0x00000004 /* ----V */
#define CR_CPU_AGP_1_STATUS_RATE_1X_2X_4X                0x00000007 /* C---V */
#define CR_CPU_AGP_2                                     0x80000048 /* RW-4R */
#define CR_CPU_AGP_2_COMMAND_SBA_EN                             9:9 /* RWIVF */
#define CR_CPU_AGP_2_COMMAND_SBA_EN_DISABLED             0x00000000 /* RWI-V */
#define CR_CPU_AGP_2_COMMAND_SBA_EN_ENABLED              0x00000001 /* RW--V */
#define CR_CPU_AGP_2_COMMAND_AGP_EN                             8:8 /* RWIVF */
#define CR_CPU_AGP_2_COMMAND_AGP_EN_DISABLED             0x00000000 /* RWI-V */
#define CR_CPU_AGP_2_COMMAND_AGP_EN_ENABLED              0x00000001 /* RW--V */
#define CR_CPU_AGP_2_COMMAND_FW_EN                              4:4 /* RWIVF */
#define CR_CPU_AGP_2_COMMAND_FW_EN_DISABLED              0x00000000 /* RWI-V */
#define CR_CPU_AGP_2_COMMAND_FW_EN_ENABLED               0x00000001 /* RW--V */
#define CR_CPU_AGP_2_COMMAND_DATA_RATE                          2:0 /* RWIUF */
#define CR_CPU_AGP_2_COMMAND_DATA_RATE_1X                0x00000001 /* RWI-V */
#define CR_CPU_AGP_2_COMMAND_DATA_RATE_2X                0x00000002 /* RW--V */
#define CR_CPU_AGP_2_COMMAND_DATA_RATE_4X                0x00000004 /* RW--V */
#define CR_CPU_LDT_0                                     0x80000060 /* R--4R */
#define CR_CPU_LDT_0_CAP_ID                                     7:0 /* C--VF */ 
#define CR_CPU_LDT_0_CAP_ID_LDT                          0x00000008 /* C---V */
#define CR_CPU_LDT_0_CAP_NEXT_PTR                              15:8 /* C--VF */ 
#define CR_CPU_LDT_0_CAP_NEXT_PTR_NULL                   0x00000000 /* C---V */ 
#define CR_CPU_LDT_0_CMD_WARM_RESET                           16:16 /* C--VF */
#define CR_CPU_LDT_0_CMD_WARM_RESET_COLD                 0x00000000 /* ----V */
#define CR_CPU_LDT_0_CMD_WARM_RESET_WARM                 0x00000001 /* C---V */
#define CR_CPU_LDT_0_CMD_DOUBLE_END                           17:17 /* C--VF */ 
#define CR_CPU_LDT_0_CMD_DOUBLE_END_FALSE                0x00000000 /* C---V */
#define CR_CPU_LDT_0_CMD_CAP_TYPE                             31:29 /* C--VF */ 
#define CR_CPU_LDT_0_CMD_CAP_TYPE_HOST                   0x00000001 /* C---V */
#define CR_CPU_LDT_1                                     0x80000064 /* RW-4R */
#define CR_CPU_LDT_1_CTRL_CRC_FLOOD_EN                          1:1 /* C--VF */
#define CR_CPU_LDT_1_CTRL_CRC_FLOOD_EN_OFF               0x00000000 /* C---V */
#define CR_CPU_LDT_1_CTRL_CRC_FLOOD_EN__PROD             0x00000000 /* C---V */
#define CR_CPU_LDT_1_CTRL_CRC_TEST                              2:2 /* C--VF */
#define CR_CPU_LDT_1_CTRL_CRC_TEST_IDLE                  0x00000000 /* C---V */
#define CR_CPU_LDT_1_CTRL_CRC_TEST__PROD                 0x00000000 /* C---V */
#define CR_CPU_LDT_1_CTRL_CRC_FORCE_ERR                         3:3 /* RWIVF */
#define CR_CPU_LDT_1_CTRL_CRC_FORCE_ERR_OFF              0x00000000 /* RWI-V */
#define CR_CPU_LDT_1_CTRL_CRC_FORCE_ERR_ON               0x00000001 /* RW--V */
#define CR_CPU_LDT_1_CTRL_CRC_FORCE_ERR__PROD            0x00000000 /* RW--V */
#define CR_CPU_LDT_1_CTRL_LINK_FAIL                             4:4 /* C--VF */
#define CR_CPU_LDT_1_CTRL_LINK_FAIL_NO                   0x00000000 /* C---V */
#define CR_CPU_LDT_1_CTRL_LINK_FAIL_YES                  0x00000001 /* C---V */
#define CR_CPU_LDT_1_CTRL_LINK_FAIL__PROD                0x00000000 /* C---V */
#define CR_CPU_LDT_1_CTRL_INIT_COMPLETE                         5:5 /* R-IVF */
#define CR_CPU_LDT_1_CTRL_INIT_COMPLETE_NO               0x00000000 /* R-I-V */
#define CR_CPU_LDT_1_CTRL_INIT_COMPLETE_YES              0x00000001 /* R---V */
#define CR_CPU_LDT_1_CTRL_INIT_COMPLETE__PROD            0x00000000 /* R---V */
#define CR_CPU_LDT_1_CTRL_EOC                                   6:6 /* C--VF */
#define CR_CPU_LDT_1_CTRL_EOC_FALSE                      0x00000000 /* C---V */
#define CR_CPU_LDT_1_CTRL_EOC__PROD                      0x00000000 /* C---V */
#define CR_CPU_LDT_1_CTRL_TX_OFF                                7:7 /* C--VF */
#define CR_CPU_LDT_1_CTRL_TX_OFF_NO                      0x00000000 /* C---V */
#define CR_CPU_LDT_1_CTRL_TX_OFF_YES                     0x00000001 /* RW--V */
#define CR_CPU_LDT_1_CTRL_TX_OFF__PROD                   0x00000000 /* C---V */
#define CR_CPU_LDT_1_CTRL_CRC_ERR                              11:8 /* RWIVF */
#define CR_CPU_LDT_1_CTRL_CRC_ERR_NONE                   0x00000000 /* R-I-V */
#define CR_CPU_LDT_1_CTRL_CRC_ERR_BYTE_0                 0x00000001 /* R---V */
#define CR_CPU_LDT_1_CTRL_CRC_ERR_CLEAR_0                0x00000001 /* -W--V */
#define CR_CPU_LDT_1_CTRL_CRC_ERR__PROD                  0x00000000 /* R---V */
#define CR_CPU_LDT_1_CNFG_MAX_LNK_IN                          18:16 /* C--VF */ 
#define CR_CPU_LDT_1_CNFG_MAX_LNK_IN_8                   0x00000000 /* C---V */
#define CR_CPU_LDT_1_CNFG_MAX_LNK_IN__PROD               0x00000000 /* C---V */
#define CR_CPU_LDT_1_CNFG_DW_FC_IN                            19:19 /* C--VF */ 
#define CR_CPU_LDT_1_CNFG_DW_FC_IN_CAP                   0x00000001 /* C---V */
#define CR_CPU_LDT_1_CNFG_DW_FC_IN__PROD                 0x00000001 /* C---V */
#define CR_CPU_LDT_1_CNFG_MAX_LNK_OUT                         22:20 /* C--VF */ 
#define CR_CPU_LDT_1_CNFG_MAX_LNK_OUT_8                  0x00000000 /* C---V */
#define CR_CPU_LDT_1_CNFG_MAX_LNK_OUT__PROD              0x00000000 /* C---V */
#define CR_CPU_LDT_1_CNFG_DW_FC_OUT                           23:23 /* C--VF */ 
#define CR_CPU_LDT_1_CNFG_DW_FC_OUT_CAP                  0x00000001 /* C---V */
#define CR_CPU_LDT_1_CNFG_DW_FC_OUT__PROD                0x00000001 /* C---V */
#define CR_CPU_LDT_1_CNFG_WIDTH_IN                            26:24 /* C--VF */ 
#define CR_CPU_LDT_1_CNFG_WIDTH_IN_8                     0x00000000 /* C---V */
#define CR_CPU_LDT_1_CNFG_WIDTH_IN_16                    0x00000001 /* ----V */
#define CR_CPU_LDT_1_CNFG_WIDTH_IN_32                    0x00000003 /* ----V */
#define CR_CPU_LDT_1_CNFG_WIDTH_IN_2                     0x00000004 /* ----V */
#define CR_CPU_LDT_1_CNFG_WIDTH_IN_4                     0x00000005 /* ----V */
#define CR_CPU_LDT_1_CNFG_WIDTH_IN__PROD                 0x00000000 /* C---V */
#define CR_CPU_LDT_1_CNFG_DW_FC_IN_EN                         27:27 /* RWIVF */
#define CR_CPU_LDT_1_CNFG_DW_FC_IN_EN_OFF                0x00000000 /* RWI-V */
#define CR_CPU_LDT_1_CNFG_DW_FC_IN_EN_ON                 0x00000001 /* RW--V */
#define CR_CPU_LDT_1_CNFG_DW_FC_IN_EN__PROD              0x00000001 /* RW--V */
#define CR_CPU_LDT_1_CNFG_WIDTH_OUT                           30:28 /* C--VF */ 
#define CR_CPU_LDT_1_CNFG_WIDTH_OUT_8                    0x00000000 /* C---V */
#define CR_CPU_LDT_1_CNFG_WIDTH_OUT_16                   0x00000001 /* ----V */
#define CR_CPU_LDT_1_CNFG_WIDTH_OUT_32                   0x00000003 /* ----V */
#define CR_CPU_LDT_1_CNFG_WIDTH_OUT_2                    0x00000004 /* ----V */
#define CR_CPU_LDT_1_CNFG_WIDTH_OUT_4                    0x00000005 /* ----V */
#define CR_CPU_LDT_1_CNFG_WIDTH_OUT__PROD                0x00000000 /* C---V */
#define CR_CPU_LDT_1_CNFG_DW_FC_OUT_EN                        31:31 /* RWIVF */
#define CR_CPU_LDT_1_CNFG_DW_FC_OUT_EN_OFF               0x00000000 /* RWI-V */
#define CR_CPU_LDT_1_CNFG_DW_FC_OUT_EN_ON                0x00000001 /* RW--V */
#define CR_CPU_LDT_1_CNFG_DW_FC_OUT_EN__PROD             0x00000001 /* RW--V */
#define CR_CPU_LDT_2                                     0x80000068 /* RW-4R */
#define CR_CPU_LDT_2_REV_MINOR                                  3:0 /* C--VF */
#define CR_CPU_LDT_2_REV_MINOR_0                         0x00000000 /* C---V */
#define CR_CPU_LDT_2_REV_MAJOR                                  7:4 /* C--VF */
#define CR_CPU_LDT_2_REV_MAJOR_1                         0x00000001 /* C---V */
#define CR_CPU_LDT_2_FREQ                                      11:8 /* C--VF */
#define CR_CPU_LDT_2_FREQ_200                            0x00000000 /* C---V */
#define CR_CPU_LDT_2_FREQ_300                            0x00000001 /* ----V */
#define CR_CPU_LDT_2_FREQ_400                            0x00000002 /* ----V */
#define CR_CPU_LDT_2_FREQ_500                            0x00000003 /* ----V */
#define CR_CPU_LDT_2_FREQ_600                            0x00000004 /* ----V */
#define CR_CPU_LDT_2_FREQ_800                            0x00000005 /* ----V */
#define CR_CPU_LDT_2_FREQ_1000                           0x00000006 /* ----V */
#define CR_CPU_LDT_3_USER_CNFG                           0x8000006C /* RW-4R */
#define CR_CPU_LDT_3_USER_CNFG_WARM_RESET_                      0:0 /* RWIVF */
#define CR_CPU_LDT_3_USER_CNFG_WARM_RESET__ON            0x00000000 /* RWI-V */
#define CR_CPU_LDT_3_USER_CNFG_WARM_RESET__OFF           0x00000001 /* RW--V */
#define CR_CPU_LDT_3_USER_CNFG_WARM_RESET___PROD         0x00000000 /* RW--V */
#define CR_CPU_LDT_3_USER_CNFG_TX_FORCE_ORDER_CYA               1:1 /* RWIVF */
#define CR_CPU_LDT_3_USER_CNFG_TX_FORCE_ORDER_CYA_OFF    0x00000000 /* RWI-V */
#define CR_CPU_LDT_3_USER_CNFG_TX_FORCE_ORDER_CYA_ON     0x00000001 /* RW--V */
#define CR_CPU_LDT_3_USER_CNFG_TX_FORCE_ORDER_CYA__PROD  0x00000000 /* RW--V */
#define CR_CPU_LDT_3_USER_CNFG_RX_FORCE_ORDER_CYA               2:2 /* RWIVF */
#define CR_CPU_LDT_3_USER_CNFG_RX_FORCE_ORDER_CYA_OFF    0x00000000 /* RWI-V */
#define CR_CPU_LDT_3_USER_CNFG_RX_FORCE_ORDER_CYA_ON     0x00000001 /* RW--V */
#define CR_CPU_LDT_3_USER_CNFG_RX_FORCE_ORDER_CYA__PROD  0x00000000 /* RW--V */
#define CR_CPU_LDT_3_USER_CNFG_TX_NONZERO_SEQID                 3:3 /* RWIVF */
#define CR_CPU_LDT_3_USER_CNFG_TX_NONZERO_SEQID_OFF      0x00000000 /* RWI-V */
#define CR_CPU_LDT_3_USER_CNFG_TX_NONZERO_SEQID_ON       0x00000001 /* RW--V */
#define CR_CPU_LDT_3_USER_CNFG_TX_NONZERO_SEQID__PROD    0x00000000 /* RW--V */
#define CR_CPU_LDT_3_USER_CNFG_RX_APC_FORCE_ISO                 4:4 /* RWIVF */
#define CR_CPU_LDT_3_USER_CNFG_RX_APC_FORCE_ISO_OFF      0x00000000 /* RWI-V */
#define CR_CPU_LDT_3_USER_CNFG_RX_APC_FORCE_ISO_ON       0x00000001 /* RW--V */
#define CR_CPU_LDT_3_USER_CNFG_RX_APC_FORCE_ISO__PROD    0x00000000 /* RW--V */
#define CR_CPU_LDT_3_USER_CNFG_PWR_MGMT_DISABLE_CYA             5:5 /* RWIVF */
#define CR_CPU_LDT_3_USER_CNFG_PWR_MGMT_DISABLE_CYA_OFF  0x00000000 /* RW--V */
#define CR_CPU_LDT_3_USER_CNFG_PWR_MGMT_DISABLE_CYA_ON   0x00000001 /* RWI-V */
#define CR_CPU_LDT_3_USER_CNFG_PWR_MGMT_DISABLE_CYA__PROD 0x0000000 /* RW--V */
#define CR_CPU_LDT_3_USER_CNFG_PROBE_TIMEOUT                   15:8 /* RWIVF */
#define CR_CPU_LDT_3_USER_CNFG_PROBE_TIMEOUT_8CLKS       0x00000001 /* RW--V */
#define CR_CPU_LDT_3_USER_CNFG_PROBE_TIMEOUT_16CLKS      0x00000003 /* RW--V */
#define CR_CPU_LDT_3_USER_CNFG_PROBE_TIMEOUT_32CLKS      0x00000007 /* RW--V */
#define CR_CPU_LDT_3_USER_CNFG_PROBE_TIMEOUT_64CLKS      0x0000000f /* RWI-V */
#define CR_CPU_LDT_3_USER_CNFG_PROBE_TIMEOUT_128CLKS     0x0000001f /* RW--V */
#define CR_CPU_LDT_3_USER_CNFG_PROBE_TIMEOUT_256CLKS     0x0000003f /* RW--V */
#define CR_CPU_LDT_3_USER_CNFG_PROBE_TIMEOUT_512CLKS     0x0000007f /* RW--V */
#define CR_CPU_LDT_3_USER_CNFG_PROBE_TIMEOUT_1024CLKS    0x000000ff /* RW--V */
#define CR_CPU_LDT_3_USER_CNFG_PROBE_TIMEOUT__PROD       0x0000000f /* RW--V */
#define CR_CPU_LDT_3_USER_CNFG_SYSIDLE_TIMEOUT                23:16 /* RWIVF */
#define CR_CPU_LDT_3_USER_CNFG_SYSIDLE_TIMEOUT_8CLKS     0x00000001 /* RW--V */
#define CR_CPU_LDT_3_USER_CNFG_SYSIDLE_TIMEOUT_16CLKS    0x00000003 /* RW--V */
#define CR_CPU_LDT_3_USER_CNFG_SYSIDLE_TIMEOUT_32CLKS    0x00000007 /* RW--V */
#define CR_CPU_LDT_3_USER_CNFG_SYSIDLE_TIMEOUT_64CLKS    0x0000000f /* RWI-V */
#define CR_CPU_LDT_3_USER_CNFG_SYSIDLE_TIMEOUT_128CLKS   0x0000001f /* RW--V */
#define CR_CPU_LDT_3_USER_CNFG_SYSIDLE_TIMEOUT_256CLKS   0x0000003f /* RW--V */
#define CR_CPU_LDT_3_USER_CNFG_SYSIDLE_TIMEOUT_512CLKS   0x0000007f /* RW--V */
#define CR_CPU_LDT_3_USER_CNFG_SYSIDLE_TIMEOUT_1024CLKS  0x000000ff /* RW--V */
#define CR_CPU_LDT_3_USER_CNFG_SYSIDLE_TIMEOUT__PROD     0x0000000f /* RW--V */
#define CR_CPU_LDT_3_USER_CNFG_DRAM_TIMEOUT                   31:24 /* RWIVF */
#define CR_CPU_LDT_3_USER_CNFG_DRAM_TIMEOUT_64CLKS       0x00000001 /* RW--V */
#define CR_CPU_LDT_3_USER_CNFG_DRAM_TIMEOUT_128CLKS      0x00000003 /* RW--V */
#define CR_CPU_LDT_3_USER_CNFG_DRAM_TIMEOUT_256CLKS      0x00000007 /* RW--V */
#define CR_CPU_LDT_3_USER_CNFG_DRAM_TIMEOUT_512CLKS      0x0000000f /* RWI-V */
#define CR_CPU_LDT_3_USER_CNFG_DRAM_TIMEOUT_1024CLKS     0x0000001f /* RW--V */
#define CR_CPU_LDT_3_USER_CNFG_DRAM_TIMEOUT_2048CLKS     0x0000003f /* RW--V */
#define CR_CPU_LDT_3_USER_CNFG_DRAM_TIMEOUT_4096CLKS     0x0000007f /* RW--V */
#define CR_CPU_LDT_3_USER_CNFG_DRAM_TIMEOUT_8192CLKS     0x000000ff /* RW--V */
#define CR_CPU_LDT_3_USER_CNFG_DRAM_TIMEOUT__PROD        0x0000000f /* RW--V */
#define CR_CPU_GRAP                                      0x80000080 /* RW-4R */
#define CR_CPU_GRAP_SIZE                                        3:0 /* RWIVF */
#define CR_CPU_GRAP_SIZE_32MB                            0x0000000F /* RWI-V */
#define CR_CPU_GRAP_SIZE_64MB                            0x0000000E /* RW--V */
#define CR_CPU_GRAP_SIZE_128MB                           0x0000000C /* RW--V */
#define CR_CPU_GRAP_SIZE_256MB                           0x00000008 /* RW--V */
#define CR_CPU_GRAP_SIZE_512MB                           0x00000000 /* RW--V */
#define CR_CPU_GRAP_ENABLE                                      8:8 /* RWIVF */
#define CR_CPU_GRAP_ENABLE_FALSE                         0x00000000 /* RWI-V */
#define CR_CPU_GRAP_ENABLE_TRUE                          0x00000001 /* RW--V */
#define CR_CPU_MEMTOP                                    0x80000084 /* RW-4R */
#define CR_CPU_MEMTOP_LIMIT                                   31:24 /* RWIVF */
#define CR_CPU_MEMTOP_LIMIT_16MB                         0x00000000 /* RWI-V */
#define CR_CPU_MEMTOP_LIMIT_32MB                         0x00000001 /* RW--V */
#define CR_CPU_MEMTOP_LIMIT_48MB                         0x00000002 /* RW--V */
#define CR_CPU_MEMTOP_LIMIT_64MB                         0x00000003 /* RW--V */
#define CR_CPU_MEMTOP_LIMIT_128MB                        0x00000007 /* RW--V */
#define CR_CPU_MEMTOP_LIMIT_256MB                        0x0000000F /* RW--V */
#define CR_CPU_MEMTOP_LIMIT_512MB                        0x0000001F /* RW--V */
#define CR_CPU_MEMTOP_LIMIT_1GB                          0x0000003F /* RW--V */
#define CR_CPU_MEMTOP_LIMIT_2GB                          0x0000007F /* RW--V */
#define CR_CPU_MEMTOP_RESERVED                                 23:0 /* C--VF */
#define CR_CPU_MEMTOP_RESERVED_FFFFFF                    0x00FFFFFF /* C---V */
#define CR_CPU_MISC                                      0x80000088 /* RW-4R */
#define CR_CPU_MISC_MDA                                         0:0 /* RWIVF */
#define CR_CPU_MISC_MDA_AGP                              0x00000000 /* RW--V */
#define CR_CPU_MISC_MDA_PCI                              0x00000001 /* RWI-V */
#define CR_CPU_PREF                                      0x8000008C /* RW-4R */
#define CR_CPU_PREF_CONF                                        2:0 /* RWIVF */
#define CR_CPU_PREF_CONF_NOHISTORY                       0x00000000 /* RW--V */
#define CR_CPU_PREF_CONF_CORRECTED                       0x00000001 /* RW--V */
#define CR_CPU_PREF_CONF_HIT1                            0x00000002 /* RW--V */
#define CR_CPU_PREF_CONF_HIT2                            0x00000003 /* RW--V */
#define CR_CPU_PREF_CONF_HIT3                            0x00000004 /* RW--V */
#define CR_CPU_PREF_CONF_HIT4                            0x00000005 /* RW--V */
#define CR_CPU_PREF_CONF_HIT5                            0x00000006 /* RW--V */
#define CR_CPU_PREF_CONF_DISABLED                        0x00000007 /* RWI-V */
#define CR_CPU_PREF_CONF_INIT                            0x00000002 /* RW--V */
#define CR_CPU_PREF_CONF__PROD                           0x00000002 /* RW--V */
#define CR_CPU_PREF_BATCH                                       6:4 /* RWIVF */
#define CR_CPU_PREF_BATCH_1                              0x00000001 /* RWI-V */
#define CR_CPU_PREF_BATCH_INIT                           0x00000001 /* RW--V */
#define CR_CPU_PREF_BATCH__PROD                          0x00000001 /* RW--V */
#define CR_CPU_PREF_THROTTLE                                   11:8 /* RWIVF */
#define CR_CPU_PREF_THROTTLE_4                           0x00000004 /* RWI-V */
#define CR_CPU_PREF_THROTTLE_INIT                        0x00000004 /* RW--V */
#define CR_CPU_PREF_THROTTLE__PROD                       0x00000004 /* RW--V */
#define CR_CPU_PREF_MISS                                      15:12 /* RWIVF */
#define CR_CPU_PREF_MISS_15                              0x0000000F /* RWI-V */
#define CR_CPU_PREF_MISS_INIT                            0x0000000F /* RW--V */
#define CR_CPU_PREF_MISS___PROD                          0x00000003 /* RW--V */
#define CR_CPU_PREF_BYPASS                                    19:16 /* RWIVF */
#define CR_CPU_PREF_BYPASS_6                             0x00000006 /* RWI-V */
#define CR_CPU_PREF_BYPASS_INIT                          0x00000006 /* RW--V */
#define CR_CPU_PREF_BYPASS__PROD                         0x00000006 /* RW--V */
#define CR_CPU_PREF_DRMISS                                    24:20 /* RWIVF */
#define CR_CPU_PREF_DRMISS_31                            0x0000001F /* RWI-V */
#define CR_CPU_PREF_DRMISS_INIT                          0x0000001F /* RW--V */
#define CR_CPU_PREF_DRMISS__PROD                         0x0000001F /* RW--V */
#define CR_CPU_PREF_CODE                                      25:25 /* RWIVF */
#define CR_CPU_PREF_CODE_DISABLED                        0x00000000 /* RW--V */
#define CR_CPU_PREF_CODE_ENABLED                         0x00000001 /* RWI-V */
#define CR_CPU_PREF_CODE_INIT                            0x00000001 /* RW--V */
#define CR_CPU_PREF_CODE__PROD                           0x00000001 /* RW--V */
#define CR_CPU_PREF_DATA                                      26:26 /* RWIVF */
#define CR_CPU_PREF_DATA_DISABLED                        0x00000000 /* RW--V */
#define CR_CPU_PREF_DATA_ENABLED                         0x00000001 /* RWI-V */
#define CR_CPU_PREF_DATA_INIT                            0x00000001 /* RW--V */
#define CR_CPU_PREF_DATA__PROD                           0x00000001 /* RW--V */
#define CR_CPU_PREF_WB                                        27:27 /* RWIVF */
#define CR_CPU_PREF_WB_DISABLED                          0x00000000 /* RW--V */
#define CR_CPU_PREF_WB_ENABLED                           0x00000001 /* RWI-V */
#define CR_CPU_PREF_WB_INIT                              0x00000001 /* RW--V */
#define CR_CPU_PREF_WB__PROD                             0x00000001 /* RW--V */
#define CR_CPU_PREF_WT                                        28:28 /* RWIVF */
#define CR_CPU_PREF_WT_DISABLED                          0x00000000 /* RW--V */
#define CR_CPU_PREF_WT_ENABLED                           0x00000001 /* RWI-V */
#define CR_CPU_PREF_WT_INIT                              0x00000001 /* RW--V */
#define CR_CPU_PREF_WT__PROD                             0x00000001 /* RW--V */
#define CR_CPU_PREF_WP                                        29:29 /* RWIVF */
#define CR_CPU_PREF_WP_DISABLED                          0x00000000 /* RW--V */
#define CR_CPU_PREF_WP_ENABLED                           0x00000001 /* RWI-V */
#define CR_CPU_PREF_WP_INIT                              0x00000001 /* RW--V */
#define CR_CPU_PREF_WP__PROD                             0x00000001 /* RW--V */
#define CR_CPU_PREF_UC                                        30:30 /* RWIVF */
#define CR_CPU_PREF_UC_DISABLED                          0x00000000 /* RWI-V */
#define CR_CPU_PREF_UC_ENABLED                           0x00000001 /* RW--V */
#define CR_CPU_PREF_UC_INIT                              0x00000000 /* RW--V */
#define CR_CPU_PREF_UC__PROD                             0x00000000 /* RW--V */
#define CR_CPU_PREF_WC                                        31:31 /* RWIVF */
#define CR_CPU_PREF_WC_DISABLED                          0x00000000 /* RWI-V */
#define CR_CPU_PREF_WC_ENABLED                           0x00000001 /* RW--V */
#define CR_CPU_PREF_WC_INIT                              0x00000000 /* RW--V */
#define CR_CPU_PREF_WC__PROD                             0x00000000 /* RW--V */
#define CR_CPU_PMCTRL                                    0x80000090 /* RW-4R */
#define CR_CPU_PMCTRL_SEL                                       1:0 /* RWIVF */
#define CR_CPU_PMCTRL_SEL_CPURD                          0x00000000 /* RWI-V */
#define CR_CPU_PMCTRL_SEL_PREF_ELIGIBLE                  0x00000001 /* RW--V */
#define CR_CPU_PMCTRL_SEL_PREF_HIT                       0x00000002 /* RW--V */
#define CR_CPU_PMCTRL_SEL_PREF_SPEC                      0x00000003 /* RW--V */
#define CR_CPU_PMCTRL_SEL_INIT                           0x00000000 /* RW--V */
#define CR_CPU_PMCTRL_INCR                                      8:8 /* RWIVF */
#define CR_CPU_PMCTRL_INCR_DISABLED                      0x00000000 /* RWI-V */
#define CR_CPU_PMCTRL_INCR_ENABLED                       0x00000001 /* RW--V */
#define CR_CPU_PMCTRL_INCR_INIT                          0x00000001 /* RW--V */
#define CR_CPU_PMCTRL_COUNTER                                   9:9 /* CWIVF */
#define CR_CPU_PMCTRL_COUNTER_IGNORE                     0x00000000 /* CWI-V */
#define CR_CPU_PMCTRL_COUNTER_RESET                      0x00000001 /* -W--V */
#define CR_CPU_PMCTRL_COUNTER_INIT                       0x00000001 /* -W--V */
#define CR_CPU_PMCOUNTER                                 0x80000094 /* R--4R */
#define CR_CPU_PMCOUNTER_DATA                                  31:0 /* R--VF */
#define CR_CPU_SSCTRL0                                   0x8000009C /* R--4R */
#define CR_CPU_SSCTRL0_ADDR_CLK_DIV                             7:0 /* RWIVF */
#define CR_CPU_SSCTRL0_ADDR_CLK_DIV_0                    0x00000000 /* RWI-V */
#define CR_CPU_SSCTRL1                                   0x800000A0 /* R--4R */
#define CR_CPU_SSCTRL1_ADDR                                     6:0 /* RWIVF */
#define CR_CPU_SSCTRL1_ADDR_0                            0x00000000 /* RWI-V */
#define CR_CPU_SSCTRL1_ADDR__PROD_C                      0x00000000 /* ----V */
#define CR_CPU_SSCTRL2                                   0x800000A4 /* R--4R */
#define CR_CPU_SSCTRL2_M                                        7:0 /* RWIVF */
#define CR_CPU_SSCTRL2_M_0                               0x00000000 /* RWI-V */
#define CR_CPU_SSCTRL2_N                                       15:8 /* RW-VF */
#define CR_CPU_SSCTRL2_N_0                               0x00000000 /* RWI-V */
#define CR_CPU_SSCTRL3                                   0x800000A8 /* R--4R */
#define CR_CPU_SSCTRL3_RUN                                      0:0 /* RWIVF */
#define CR_CPU_SSCTRL3_RUN_DISABLE                       0x00000000 /* RWI-V */
#define CR_CPU_SSCTRL3_RUN_ENABLE                        0x00000001 /* RW--V */
#define CR_CPU_DEBUG                                     0x800000AC /* R--4R */
#define CR_CPU_DEBUG_SEL                                        2:0 /* RWIVF */
#define CR_CPU_DEBUG_SEL_0                               0x00000000 /* RWI-V */
#define CR_CPU_DEBUG_FINE_SEL                                   5:3 /* RWIVF */
#define CR_CPU_DEBUG_FINE_SEL_0                          0x00000000 /* RWI-V */
#define CR_CPU_DEBUG_ENABLE                                     6:6 /* RWIVF */
#define CR_CPU_DEBUG_ENABLE_OFF                          0x00000000 /* RWI-V */
#define CR_CPU_COMDBG_0                                  0x800000B0 /* RW-4R */
#define CR_CPU_COMDBG_0_C2MPRIO                                 0:0 /* RWIVF */
#define CR_CPU_COMDBG_0_C2MPRIO_READ                     0x00000000 /* RW--V */
#define CR_CPU_COMDBG_0_C2MPRIO_WRITE                    0x00000001 /* RWI-V */
#define CR_CPU_COMDBG_0_SPARES                                 31:1 /* RWIVF */
#define CR_CPU_COMDBG_0_SPARES_0                         0x00000000 /* RWI-V */
#define CR_CPU_SL1_LEGSEGGRP0                            0x800000C0 /* RW-4R */
#define CR_CPU_SL1_LEGSEGGRP0_LEGSEG0_RE                        0:0 /* RWIVF */
#define CR_CPU_SL1_LEGSEGGRP0_LEGSEG0_RE_DISABLE         0x00000000 /* RWI-V */
#define CR_CPU_SL1_LEGSEGGRP0_LEGSEG0_RE_ENABLE          0x00000001 /* RW--V */
#define CR_CPU_SL1_LEGSEGGRP0_LEGSEG0_WE                        1:1 /* RWIVF */
#define CR_CPU_SL1_LEGSEGGRP0_LEGSEG0_WE_DISABLE         0x00000000 /* RWI-V */
#define CR_CPU_SL1_LEGSEGGRP0_LEGSEG0_WE_ENABLE          0x00000001 /* RW--V */
#define CR_CPU_SL1_LEGSEGGRP0_LEGSEG1_RE                        4:4 /* RWIVF */
#define CR_CPU_SL1_LEGSEGGRP0_LEGSEG1_RE_DISABLE         0x00000000 /* RWI-V */
#define CR_CPU_SL1_LEGSEGGRP0_LEGSEG1_RE_ENABLE          0x00000001 /* RW--V */
#define CR_CPU_SL1_LEGSEGGRP0_LEGSEG1_WE                        5:5 /* RWIVF */
#define CR_CPU_SL1_LEGSEGGRP0_LEGSEG1_WE_DISABLE         0x00000000 /* RWI-V */
#define CR_CPU_SL1_LEGSEGGRP0_LEGSEG1_WE_ENABLE          0x00000001 /* RW--V */
#define CR_CPU_SL1_LEGSEGGRP0_LEGSEG2_RE                        8:8 /* RWIVF */
#define CR_CPU_SL1_LEGSEGGRP0_LEGSEG2_RE_DISABLE         0x00000000 /* RWI-V */
#define CR_CPU_SL1_LEGSEGGRP0_LEGSEG2_RE_ENABLE          0x00000001 /* RW--V */
#define CR_CPU_SL1_LEGSEGGRP0_LEGSEG2_WE                        9:9 /* RWIVF */
#define CR_CPU_SL1_LEGSEGGRP0_LEGSEG2_WE_DISABLE         0x00000000 /* RWI-V */
#define CR_CPU_SL1_LEGSEGGRP0_LEGSEG2_WE_ENABLE          0x00000001 /* RW--V */
#define CR_CPU_SL1_LEGSEGGRP0_LEGSEG3_RE                      12:12 /* RWIVF */
#define CR_CPU_SL1_LEGSEGGRP0_LEGSEG3_RE_DISABLE         0x00000000 /* RWI-V */
#define CR_CPU_SL1_LEGSEGGRP0_LEGSEG3_RE_ENABLE          0x00000001 /* RW--V */
#define CR_CPU_SL1_LEGSEGGRP0_LEGSEG3_WE                      13:13 /* RWIVF */
#define CR_CPU_SL1_LEGSEGGRP0_LEGSEG3_WE_DISABLE         0x00000000 /* RWI-V */
#define CR_CPU_SL1_LEGSEGGRP0_LEGSEG3_WE_ENABLE          0x00000001 /* RW--V */
#define CR_CPU_SL1_LEGSEGGRP0_LEGSEG4_RE                      16:16 /* RWIVF */
#define CR_CPU_SL1_LEGSEGGRP0_LEGSEG4_RE_DISABLE         0x00000000 /* RWI-V */
#define CR_CPU_SL1_LEGSEGGRP0_LEGSEG4_RE_ENABLE          0x00000001 /* RW--V */
#define CR_CPU_SL1_LEGSEGGRP0_LEGSEG4_WE                      17:17 /* RWIVF */
#define CR_CPU_SL1_LEGSEGGRP0_LEGSEG4_WE_DISABLE         0x00000000 /* RWI-V */
#define CR_CPU_SL1_LEGSEGGRP0_LEGSEG4_WE_ENABLE          0x00000001 /* RW--V */
#define CR_CPU_SL1_LEGSEGGRP1                            0x800000C4 /* RW-4R */
#define CR_CPU_SL1_LEGSEGGRP1_LEGSEG5_RE                        0:0 /* RWIVF */
#define CR_CPU_SL1_LEGSEGGRP1_LEGSEG5_RE_DISABLE         0x00000000 /* RWI-V */
#define CR_CPU_SL1_LEGSEGGRP1_LEGSEG5_RE_ENABLE          0x00000001 /* RW--V */
#define CR_CPU_SL1_LEGSEGGRP1_LEGSEG5_WE                        1:1 /* RWIVF */
#define CR_CPU_SL1_LEGSEGGRP1_LEGSEG5_WE_DISABLE         0x00000000 /* RWI-V */
#define CR_CPU_SL1_LEGSEGGRP1_LEGSEG5_WE_ENABLE          0x00000001 /* RW--V */
#define CR_CPU_SL1_LEGSEGGRP1_LEGSEG6_RE                        4:4 /* RWIVF */
#define CR_CPU_SL1_LEGSEGGRP1_LEGSEG6_RE_DISABLE         0x00000000 /* RWI-V */
#define CR_CPU_SL1_LEGSEGGRP1_LEGSEG6_RE_ENABLE          0x00000001 /* RW--V */
#define CR_CPU_SL1_LEGSEGGRP1_LEGSEG6_WE                        5:5 /* RWIVF */
#define CR_CPU_SL1_LEGSEGGRP1_LEGSEG6_WE_DISABLE         0x00000000 /* RWI-V */
#define CR_CPU_SL1_LEGSEGGRP1_LEGSEG6_WE_ENABLE          0x00000001 /* RW--V */
#define CR_CPU_SL1_LEGSEGGRP1_LEGSEG7_RE                        8:8 /* RWIVF */
#define CR_CPU_SL1_LEGSEGGRP1_LEGSEG7_RE_DISABLE         0x00000000 /* RWI-V */
#define CR_CPU_SL1_LEGSEGGRP1_LEGSEG7_RE_ENABLE          0x00000001 /* RW--V */
#define CR_CPU_SL1_LEGSEGGRP1_LEGSEG7_WE                        9:9 /* RWIVF */
#define CR_CPU_SL1_LEGSEGGRP1_LEGSEG7_WE_DISABLE         0x00000000 /* RWI-V */
#define CR_CPU_SL1_LEGSEGGRP1_LEGSEG7_WE_ENABLE          0x00000001 /* RW--V */
#define CR_CPU_SL1_LEGSEGGRP1_LEGSEG8_RE                      12:12 /* RWIVF */
#define CR_CPU_SL1_LEGSEGGRP1_LEGSEG8_RE_DISABLE         0x00000000 /* RWI-V */
#define CR_CPU_SL1_LEGSEGGRP1_LEGSEG8_RE_ENABLE          0x00000001 /* RW--V */
#define CR_CPU_SL1_LEGSEGGRP1_LEGSEG8_WE                      13:13 /* RWIVF */
#define CR_CPU_SL1_LEGSEGGRP1_LEGSEG8_WE_DISABLE         0x00000000 /* RWI-V */
#define CR_CPU_SL1_LEGSEGGRP1_LEGSEG8_WE_ENABLE          0x00000001 /* RW--V */
#define CR_CPU_SL1_LEGSEGGRP1_LEGSEG9_RE                      16:16 /* RWIVF */
#define CR_CPU_SL1_LEGSEGGRP1_LEGSEG9_RE_DISABLE         0x00000000 /* RWI-V */
#define CR_CPU_SL1_LEGSEGGRP1_LEGSEG9_RE_ENABLE          0x00000001 /* RW--V */
#define CR_CPU_SL1_LEGSEGGRP1_LEGSEG9_WE                      17:17 /* RWIVF */
#define CR_CPU_SL1_LEGSEGGRP1_LEGSEG9_WE_DISABLE         0x00000000 /* RWI-V */
#define CR_CPU_SL1_LEGSEGGRP1_LEGSEG9_WE_ENABLE          0x00000001 /* RW--V */
#define CR_CPU_SL1_SMRAM                                 0x800000C8 /* RW-4R */
#define CR_CPU_SL1_SMRAM_SMRAM_EN                               0:0 /* RWIVF */
#define CR_CPU_SL1_SMRAM_SMRAM_EN_DISABLE                0x00000000 /* RWI-V */
#define CR_CPU_SL1_SMRAM_SMRAM_EN_ENABLE                 0x00000001 /* RW--V */
#define CR_CPU_SL1_SMRAM_CSEG_EN                                1:1 /* RWIVF */
#define CR_CPU_SL1_SMRAM_CSEG_EN_DISABLE                 0x00000000 /* RWI-V */
#define CR_CPU_SL1_SMRAM_CSEG_EN_ENABLE                  0x00000001 /* RW--V */
#define CR_CPU_SL1_SMRAM_HSEG_EN                                2:2 /* RWIVF */
#define CR_CPU_SL1_SMRAM_HSEG_EN_DISABLE                 0x00000000 /* RWI-V */
#define CR_CPU_SL1_SMRAM_HSEG_EN_ENABLE                  0x00000001 /* RW--V */
#define CR_CPU_SL1_SMRAM_TSEG_EN                                3:3 /* RWIVF */
#define CR_CPU_SL1_SMRAM_TSEG_EN_DISABLE                 0x00000000 /* RWI-V */
#define CR_CPU_SL1_SMRAM_TSEG_EN_ENABLE                  0x00000001 /* RW--V */
#define CR_CPU_SL1_SMRAM_INIT_MODE                              4:4 /* RWIVF */
#define CR_CPU_SL1_SMRAM_INIT_MODE_DISABLE               0x00000000 /* RWI-V */
#define CR_CPU_SL1_SMRAM_INIT_MODE_ENABLE                0x00000001 /* RW--V */
#define CR_CPU_SL1_SMRAM_CODE_MODE                              5:5 /* RWIVF */
#define CR_CPU_SL1_SMRAM_CODE_MODE_DISABLE               0x00000000 /* RWI-V */
#define CR_CPU_SL1_SMRAM_CODE_MODE_ENABLE                0x00000001 /* RW--V */
#define CR_CPU_SL1_SMRAM_TSEG_SZ                               10:8 /* RWIVF */
#define CR_CPU_SL1_SMRAM_TSEG_SZ_128K                    0x00000000 /* RWI-V */
#define CR_CPU_SL1_SMRAM_TSEG_SZ_256K                    0x00000001 /* RW--V */
#define CR_CPU_SL1_SMRAM_TSEG_SZ_384K                    0x00000002 /* RW--V */
#define CR_CPU_SL1_SMRAM_TSEG_SZ_512K                    0x00000003 /* RW--V */
#define CR_CPU_SL1_SMRAM_TSEG_SZ_640K                    0x00000004 /* RW--V */
#define CR_CPU_SL1_SMRAM_TSEG_SZ_768K                    0x00000005 /* RW--V */
#define CR_CPU_SL1_SMRAM_TSEG_SZ_896K                    0x00000006 /* RW--V */
#define CR_CPU_SL1_SMRAM_TSEG_SZ_1M                      0x00000007 /* RW--V */
#define CR_CPU_SL1_PRITRANS                              0x800000CC /* RW-4R */
#define CR_CPU_SL1_PRITRANS_HIGHPRI                             1:0 /* RWIVF */
#define CR_CPU_SL1_PRITRANS_HIGHPRI_NONE                 0x00000000 /* RWI-V */
#define CR_CPU_SL1_PRITRANS_HIGHPRI_NONMEM               0x00000001 /* RW--V */
#define CR_CPU_SL1_PRITRANS_HIGHPRI_PROBES               0x00000002 /* RW--V */
#define CR_CPU_SL1_PRITRANS_NUMPROBES                           6:4 /* RWIVF */
#define CR_CPU_SL1_PRITRANS_NUMPROBES_1                  0x00000000 /* RWI-V */
#define CR_CPU_SL1_PRITRANS_NUMPROBES_2                  0x00000001 /* RW--V */
#define CR_CPU_SL1_PRITRANS_NUMPROBES_3                  0x00000002 /* RW--V */
#define CR_CPU_SL1_PRITRANS_NUMPROBES_4                  0x00000003 /* RW--V */
#define CR_CPU_SL1_PRITRANS_NUMPROBES_5                  0x00000004 /* RW--V */
#define CR_CPU_SL1_PRITRANS_NUMPROBES_6                  0x00000005 /* RW--V */
#define CR_CPU_SL1_PRITRANS_NUMPROBES_7                  0x00000006 /* RW--V */
#define CR_CPU_SL1_PRITRANS_NUMPROBES_8                  0x00000007 /* RW--V */
#define CR_CPU_SL1_PRITRANS_NUMNONMEM                          10:8 /* RWIVF */
#define CR_CPU_SL1_PRITRANS_NUMNONMEM_1                  0x00000000 /* RWI-V */
#define CR_CPU_SL1_PRITRANS_NUMNONMEM_2                  0x00000001 /* RW--V */
#define CR_CPU_SL1_PRITRANS_NUMNONMEM_3                  0x00000002 /* RW--V */
#define CR_CPU_SL1_PRITRANS_NUMNONMEM_4                  0x00000003 /* RW--V */
#define CR_CPU_SL1_PRITRANS_NUMNONMEM_5                  0x00000004 /* RW--V */
#define CR_CPU_SL1_PRITRANS_NUMNONMEM_6                  0x00000005 /* RW--V */
#define CR_CPU_SL1_PRITRANS_NUMNONMEM_7                  0x00000006 /* RW--V */
#define CR_CPU_SL1_PRITRANS_NUMNONMEM_8                  0x00000007 /* RW--V */
#define CR_CPU_SL1_PRITRANS_HOLDBUS_PROBES                    12:12 /* RWIVF */
#define CR_CPU_SL1_PRITRANS_HOLDBUS_PROBES_OFF           0x00000000 /* RWI-V */
#define CR_CPU_SL1_PRITRANS_HOLDBUS_PROBES_ON            0x00000001 /* RW--V */
#define CR_CPU_SL1_PRITRANS_HOLDBUS_NONMEM                    14:14 /* RWIVF */
#define CR_CPU_SL1_PRITRANS_HOLDBUS_NONMEM_OFF           0x00000000 /* RWI-V */
#define CR_CPU_SL1_PRITRANS_HOLDBUS_NONMEM_ON            0x00000001 /* RW--V */
#define CR_CPU_SL1_PRITRANS_HOLDBUS_LIMIT                     18:16 /* RWIVF */
#define CR_CPU_SL1_PRITRANS_HOLDBUS_LIMIT_1              0x00000000 /* RWI-V */
#define CR_CPU_SL1_PRITRANS_HOLDBUS_LIMIT_2              0x00000001 /* RW--V */
#define CR_CPU_SL1_PRITRANS_HOLDBUS_LIMIT_3              0x00000002 /* RW--V */
#define CR_CPU_SL1_PRITRANS_HOLDBUS_LIMIT_4              0x00000003 /* RW--V */
#define CR_CPU_SL1_PRITRANS_HOLDBUS_LIMIT_5              0x00000004 /* RW--V */
#define CR_CPU_SL1_PRITRANS_HOLDBUS_LIMIT_6              0x00000005 /* RW--V */
#define CR_CPU_SL1_PRITRANS_HOLDBUS_LIMIT_7              0x00000006 /* RW--V */
#define CR_CPU_SL1_PRITRANS_HOLDBUS_LIMIT_8              0x00000007 /* RW--V */
#define CR_CPU_SL1_MEMREAD                               0x800000D0 /* RW-4R */
#define CR_CPU_SL1_MEMREAD_RDV_EARLY                            0:0 /* RWIVF */
#define CR_CPU_SL1_MEMREAD_RDV_EARLY_DISABLE             0x00000000 /* RWI-V */
#define CR_CPU_SL1_MEMREAD_RDV_EARLY_ENABLE              0x00000001 /* RW--V */
#define CR_CPU_SL1_DEFERRED                              0x800000D4 /* RW-4R */
#define CR_CPU_SL1_DEFERRED_ONEENTRY                            0:0 /* RWIVF */
#define CR_CPU_SL1_DEFERRED_ONEENTRY_DISABLE             0x00000000 /* RW--V */
#define CR_CPU_SL1_DEFERRED_ONEENTRY_ENABLE              0x00000001 /* RWI-V */
#define CR_CPU_SL1_DEFERRED_NEVERDEFER                          2:2 /* RWIVF */
#define CR_CPU_SL1_DEFERRED_NEVERDEFER_DISABLE           0x00000000 /* RWI-V */
#define CR_CPU_SL1_DEFERRED_NEVERDEFER_ENABLE            0x00000001 /* RW--V */
#define CR_CPU_SL1_RETRY                                 0x800000D8 /* RW-4R */
#define CR_CPU_SL1_RETRY_TIMER_LIMIT                           15:0 /* RWIVF */
#define CR_CPU_SL1_RETRY_TIMER_LIMIT_MAX                 0x0000FFFF /* RWI-V */
#define CR_CPU_SL1_RETRY_TIMER_ENABLE                         16:16 /* RWIVF */
#define CR_CPU_SL1_RETRY_TIMER_ENABLE_OFF                0x00000000 /* RWI-V */
#define CR_CPU_SL1_RETRY_TIMER_ENABLE_ON                 0x00000001 /* RW--V */
#define CR_CPU_SL1_RETRY_MATCH_ADDR                           20:20 /* RWIVF */
#define CR_CPU_SL1_RETRY_MATCH_ADDR_OFF                  0x00000000 /* RW--V */
#define CR_CPU_SL1_RETRY_MATCH_ADDR_ON                   0x00000001 /* RWI-V */
#define CR_CPU_SL1_RETRY_MATCH_REQA                           21:21 /* RWIVF */
#define CR_CPU_SL1_RETRY_MATCH_REQA_OFF                  0x00000000 /* RW--V */
#define CR_CPU_SL1_RETRY_MATCH_REQA_ON                   0x00000001 /* RWI-V */
#define CR_CPU_SL1_RETRY_MATCH_REQB                           22:22 /* RWIVF */
#define CR_CPU_SL1_RETRY_MATCH_REQB_OFF                  0x00000000 /* RW--V */
#define CR_CPU_SL1_RETRY_MATCH_REQB_ON                   0x00000001 /* RWI-V */
#define CR_CPU_SL1_RETRY_MATCH_MEMATTR                        23:23 /* RWIVF */
#define CR_CPU_SL1_RETRY_MATCH_MEMATTR_OFF               0x00000000 /* RW--V */
#define CR_CPU_SL1_RETRY_MATCH_MEMATTR_ON                0x00000001 /* RWI-V */
#define CR_CPU_SL1_RETRY_MATCH_BE                             24:24 /* RWIVF */
#define CR_CPU_SL1_RETRY_MATCH_BE_OFF                    0x00000000 /* RW--V */
#define CR_CPU_SL1_RETRY_MATCH_BE_ON                     0x00000001 /* RWI-V */
#define CR_CPU_SL1_RETRY_MATCH_SMM                            25:25 /* RWIVF */
#define CR_CPU_SL1_RETRY_MATCH_SMM_OFF                   0x00000000 /* RW--V */
#define CR_CPU_SL1_RETRY_MATCH_SMM_ON                    0x00000001 /* RWI-V */
#define CR_CPU_SL1_RETRY_MATCH_SPLCK                          26:26 /* RWIVF */
#define CR_CPU_SL1_RETRY_MATCH_SPLCK_OFF                 0x00000000 /* RW--V */
#define CR_CPU_SL1_RETRY_MATCH_SPLCK_ON                  0x00000001 /* RWI-V */
#define CR_CPU_SL1_RETRY_MATCH_DID                            27:27 /* RWIVF */
#define CR_CPU_SL1_RETRY_MATCH_DID_OFF                   0x00000000 /* RWI-V */
#define CR_CPU_SL1_RETRY_MATCH_DID_ON                    0x00000001 /* RW--V */
#define CR_CPU_SL1_RETRY_MATCH_DEN                            28:28 /* RWIVF */
#define CR_CPU_SL1_RETRY_MATCH_DEN_OFF                   0x00000000 /* RWI-V */
#define CR_CPU_SL1_RETRY_MATCH_DEN_ON                    0x00000001 /* RW--V */
#define CR_CPU_SL1_CYA                                   0x800000DC /* RW-4R */
#define CR_CPU_SL1_CYA_WP_DISCARD                               0:0 /* RWIVF */
#define CR_CPU_SL1_CYA_WP_DISCARD_DISABLE                0x00000000 /* RWI-V */
#define CR_CPU_SL1_CYA_WP_DISCARD_ENABLE                 0x00000001 /* RW--V */
#define CR_CPU_SL1_CYA_WP_NOREDIRECT                            1:1 /* RWIVF */
#define CR_CPU_SL1_CYA_WP_NOREDIRECT_DISABLE             0x00000000 /* RWI-V */
#define CR_CPU_SL1_CYA_WP_NOREDIRECT_ENABLE              0x00000001 /* RW--V */
#define CR_CPU_S2K_CONTROL0                              0x800000E0 /* RW-4R */
#define CR_CPU_S2K_CONTROL0_BYPASS                              0:0 /* RWIVF */
#define CR_CPU_S2K_CONTROL0_BYPASS_DISABLE               0x00000000 /* RWI-V */
#define CR_CPU_S2K_CONTROL0_BYPASS_ENABLE                0x00000001 /* RW--V */
#define CR_CPU_S2K_CONTROL0_PROBE                               1:1 /* RWIVF */
#define CR_CPU_S2K_CONTROL0_PROBE_DISABLE                0x00000000 /* RW--V */
#define CR_CPU_S2K_CONTROL0_PROBE_ENABLE                 0x00000001 /* RWI-V */
#define CR_CPU_S2K_CONTROL0_2BIT                                2:2 /* RWIVF */
#define CR_CPU_S2K_CONTROL0_2BIT_DISABLE                 0x00000000 /* RW--V */
#define CR_CPU_S2K_CONTROL0_2BIT_ENABLE                  0x00000001 /* RWI-V */
#define CR_CPU_S2K_CONTROL0_RDATAPACING                         3:3 /* RWIVF */
#define CR_CPU_S2K_CONTROL0_RDATAPACING_DISABLE          0x00000000 /* RWI-V */
#define CR_CPU_S2K_CONTROL0_RDATAPACING_ENABLE           0x00000001 /* RW--V */
#define CR_CPU_S2K_CONTROL0_PROBELIMIT                        18:16 /* RWIVF */
#define CR_CPU_S2K_CONTROL0_PROBELIMIT_1                 0x00000000 /* RWI-V */
#define CR_CPU_S2K_CONTROL0_PROBELIMIT_2                 0x00000001 /* RW--V */
#define CR_CPU_S2K_CONTROL0_PROBELIMIT_3                 0x00000002 /* RW--V */
#define CR_CPU_S2K_CONTROL0_PROBELIMIT_4                 0x00000003 /* RW--V */
#define CR_CPU_S2K_CONTROL0_PROBELIMIT_5                 0x00000004 /* RW--V */
#define CR_CPU_S2K_CONTROL0_PROBELIMIT_6                 0x00000005 /* RW--V */
#define CR_CPU_S2K_CONTROL0_PROBELIMIT_7                 0x00000006 /* RW--V */
#define CR_CPU_S2K_CONTROL0_PROBELIMIT_8                 0x00000007 /* RW--V */
#define CR_CPU_S2K_CONTROL0_ACKLIMIT                          22:19 /* C--VF */
#define CR_CPU_S2K_CONTROL0_ACKLIMIT_VALUE               0x00000008 /* C---V */
#define CR_CPU_S2K_CONTROL1                              0x800000E4 /* RW-4R */
#define CR_CPU_S2K_CONTROL1_SYSDCIN_DEL                         2:0 /* R-XVF */
#define CR_CPU_S2K_CONTROL1_SYSDCIN_DEL_1                0x00000001 /* R---V */
#define CR_CPU_S2K_CONTROL1_SYSDCIN_DEL_2                0x00000002 /* R---V */
#define CR_CPU_S2K_CONTROL1_SYSDCIN_DEL_3                0x00000003 /* R---V */
#define CR_CPU_S2K_CONTROL1_SYSDCIN_DEL_4                0x00000004 /* R---V */
#define CR_CPU_S2K_CONTROL1_SYSDCIN_DEL_5                0x00000005 /* R---V */
#define CR_CPU_S2K_CONTROL1_SYSDCIN_DEL_6                0x00000006 /* R---V */
#define CR_CPU_S2K_CONTROL1_SYSDCIN_DEL_7                0x00000007 /* R---V */
#define CR_CPU_S2K_CONTROL1_SYSDCOUT_DEL                        5:4 /* R-XVF */
#define CR_CPU_S2K_CONTROL1_SYSDCOUT_DEL_RSVD            0x00000000 /* R---V */
#define CR_CPU_S2K_CONTROL1_SYSDCOUT_DEL_1               0x00000001 /* R---V */
#define CR_CPU_S2K_CONTROL1_SYSDCOUT_DEL_2               0x00000002 /* R---V */
#define CR_CPU_S2K_CONTROL1_SYSDCOUT_DEL_3               0x00000003 /* R---V */
#define CR_CPU_S2K_CONTROL1_RDTOWR_DEL                          8:7 /* R-XVF */
#define CR_CPU_S2K_CONTROL1_RDTOWR_DEL_1                 0x00000000 /* R---V */
#define CR_CPU_S2K_CONTROL1_RDTOWR_DEL_2                 0x00000001 /* R---V */
#define CR_CPU_S2K_CONTROL1_RDTOWR_DEL_3                 0x00000002 /* R---V */
#define CR_CPU_S2K_CONTROL1_RDTOWR_DEL_4                 0x00000003 /* R---V */
#define CR_CPU_S2K_CONTROL1_WRTORD_DEL                        10:10 /* R-XVF */
#define CR_CPU_S2K_CONTROL1_WRTORD_DEL_1                 0x00000000 /* R---V */
#define CR_CPU_S2K_CONTROL1_WRTORD_DEL_2                 0x00000001 /* R---V */
#define CR_CPU_S2K_CONTROL1_WRDATA_DEL                        14:12 /* R-XVF */
#define CR_CPU_S2K_CONTROL1_WRDATA_DEL_1                 0x00000001 /* R---V */
#define CR_CPU_S2K_CONTROL1_WRDATA_DEL_2                 0x00000002 /* R---V */
#define CR_CPU_S2K_CONTROL1_WRDATA_DEL_3                 0x00000003 /* R---V */
#define CR_CPU_S2K_CONTROL1_WRDATA_DEL_4                 0x00000004 /* R---V */
#define CR_CPU_S2K_CONTROL1_WRDATA_DEL_5                 0x00000005 /* R---V */
#define CR_CPU_S2K_CONTROL1_WRDATA_DEL_6                 0x00000006 /* R---V */
#define CR_CPU_S2K_CONTROL1_WRDATA_DEL_7                 0x00000007 /* R---V */
#define CR_CPU_S2K_CONTROL1_XCAARB_PRCOUNT                    18:16 /* RWIVF */
#define CR_CPU_S2K_CONTROL1_XCAARB_PRCOUNT_0             0x00000000 /* RW--V */
#define CR_CPU_S2K_CONTROL1_XCAARB_PRCOUNT_1             0x00000001 /* RW--V */
#define CR_CPU_S2K_CONTROL1_XCAARB_PRCOUNT_2             0x00000002 /* RW--V */
#define CR_CPU_S2K_CONTROL1_XCAARB_PRCOUNT_3             0x00000003 /* RW--V */
#define CR_CPU_S2K_CONTROL1_XCAARB_PRCOUNT_4             0x00000004 /* RW--V */
#define CR_CPU_S2K_CONTROL1_XCAARB_PRCOUNT_5             0x00000005 /* RW--V */
#define CR_CPU_S2K_CONTROL1_XCAARB_PRCOUNT_6             0x00000006 /* RW--V */
#define CR_CPU_S2K_CONTROL1_XCAARB_PRCOUNT_7             0x00000007 /* RWI-V */
#define CR_CPU_S2K_CONTROL1_XCAARB_RDCOUNT                    21:19 /* RWIVF */
#define CR_CPU_S2K_CONTROL1_XCAARB_RDCOUNT_0             0x00000000 /* RW--V */
#define CR_CPU_S2K_CONTROL1_XCAARB_RDCOUNT_1             0x00000001 /* RW--V */
#define CR_CPU_S2K_CONTROL1_XCAARB_RDCOUNT_2             0x00000002 /* RW--V */
#define CR_CPU_S2K_CONTROL1_XCAARB_RDCOUNT_3             0x00000003 /* RW--V */
#define CR_CPU_S2K_CONTROL1_XCAARB_RDCOUNT_4             0x00000004 /* RW--V */
#define CR_CPU_S2K_CONTROL1_XCAARB_RDCOUNT_5             0x00000005 /* RW--V */
#define CR_CPU_S2K_CONTROL1_XCAARB_RDCOUNT_6             0x00000006 /* RW--V */
#define CR_CPU_S2K_CONTROL1_XCAARB_RDCOUNT_7             0x00000007 /* RWI-V */
#define CR_CPU_S2K_CONTROL1_XCAARB_WRCOUNT                    24:22 /* RWIVF */
#define CR_CPU_S2K_CONTROL1_XCAARB_WRCOUNT_0             0x00000000 /* RW--V */
#define CR_CPU_S2K_CONTROL1_XCAARB_WRCOUNT_1             0x00000001 /* RW--V */
#define CR_CPU_S2K_CONTROL1_XCAARB_WRCOUNT_2             0x00000002 /* RW--V */
#define CR_CPU_S2K_CONTROL1_XCAARB_WRCOUNT_3             0x00000003 /* RW--V */
#define CR_CPU_S2K_CONTROL1_XCAARB_WRCOUNT_4             0x00000004 /* RW--V */
#define CR_CPU_S2K_CONTROL1_XCAARB_WRCOUNT_5             0x00000005 /* RW--V */
#define CR_CPU_S2K_CONTROL1_XCAARB_WRCOUNT_6             0x00000006 /* RW--V */
#define CR_CPU_S2K_CONTROL1_XCAARB_WRCOUNT_7             0x00000007 /* RWI-V */
#define CR_CPU_S2K_CONTROL1_HALTDISC                          25:25 /* RWIVF */
#define CR_CPU_S2K_CONTROL1_HALTDISC_DISABLE             0x00000000 /* RWI-V */
#define CR_CPU_S2K_CONTROL1_HALTDISC_ENABLE              0x00000001 /* RW--V */
#define CR_CPU_S2K_CONTROL1_STOPGRANTDISC                     26:26 /* RWIVF */
#define CR_CPU_S2K_CONTROL1_STOPGRANTDISC_DISABLE        0x00000000 /* RWI-V */
#define CR_CPU_S2K_CONTROL1_STOPGRANTDISC_ENABLE         0x00000001 /* RW--V */
#define CR_CPU_S2K_CONTROL1_RIH                               27:27 /* RWIVF */
#define CR_CPU_S2K_CONTROL1_RIH_DISABLE                  0x00000000 /* RWI-V */
#define CR_CPU_S2K_CONTROL1_RIH_ENABLE                   0x00000001 /* RW--V */
#define CR_CPU_STRAP                                     0x800000F0 /* R--4R */
#define CR_CPU_STRAP_BSEL                                       1:0 /* R--VF */
#define CR_CPU_STRAP_BSEL_66                             0x00000000 /* R---V */
#define CR_CPU_STRAP_BSEL_100                            0x00000001 /* R---V */
#define CR_CPU_STRAP_BSEL_TUALATIN                       0x00000002 /* R---V */
#define CR_CPU_STRAP_BSEL_133                            0x00000003 /* R---V */
#define CR_CPU_STRAP_FSBSET                                     2:2 /* R--VF */
#define CR_CPU_STRAP_FSBSET_ROM                          0x00000000 /* R---V */
#define CR_CPU_STRAP_FSBSET_AUTO                         0x00000001 /* R---V */
#define CR_CPU_STRAP_BMODE                                      3:3 /* R--VF */
#define CR_CPU_STRAP_BMODE_SAFE                          0x00000000 /* R---V */
#define CR_CPU_STRAP_BMODE_USER                          0x00000001 /* R---V */
#define CR_CPU_STRAP_FID                                      31:28 /* R--VF */
#define CR_CPU_CST_PCI_0                                 0x80000300 /* R--4R */
#define CR_CPU_CST_PCI_0_VENDOR_ID                             15:0 /* C--VF */
#define CR_CPU_CST_PCI_0_VENDOR_ID_NVIDIA                0x000010DE /* C---V */
#define CR_CPU_CST_PCI_0_DEVICE_ID                            31:16 /* R--VF */
#define CR_CPU_CST_PCI_0_DEVICE_ID_NV1B_SDR_64           0x000001A8 /* R---V */
#define CR_CPU_CST_PCI_0_DEVICE_ID_NV1B_SDR_128          0x000001A9 /* R---V */
#define CR_CPU_CST_PCI_0_DEVICE_ID_NV1B_DDR_64           0x000001AA /* R---V */
#define CR_CPU_CST_PCI_0_DEVICE_ID_NV1B_DDR_128          0x000001AB /* R---V */
#define CR_CPU_CST_PCI_1                                 0x80000304 /* R--4R */
#define CR_CPU_CST_PCI_1_IO_SPACE                               0:0 /* C--VF */
#define CR_CPU_CST_PCI_1_IO_SPACE_DISABLED               0x00000000 /* C---V */
#define CR_CPU_CST_PCI_1_MEMORY_SPACE                           1:1 /* C--VF */
#define CR_CPU_CST_PCI_1_MEMORY_SPACE_DISABLED           0x00000000 /* C---V */
#define CR_CPU_CST_PCI_1_BUS_MASTER                             2:2 /* C--VF */
#define CR_CPU_CST_PCI_1_BUS_MASTER_DISABLED             0x00000000 /* C---V */
#define CR_CPU_CST_PCI_1_SPECIAL_CYCLE                          3:3 /* C--VF */
#define CR_CPU_CST_PCI_1_SPECIAL_CYCLE_DISABLED          0x00000000 /* C---V */
#define CR_CPU_CST_PCI_1_WRITE_AND_INVAL                        4:4 /* C--VF */
#define CR_CPU_CST_PCI_1_WRITE_AND_INVAL_DISABLED        0x00000000 /* C---V */
#define CR_CPU_CST_PCI_1_PALETTE_SNOOP                          5:5 /* C--VF */
#define CR_CPU_CST_PCI_1_PALETTE_SNOOP_DISABLED          0x00000000 /* C---V */
#define CR_CPU_CST_PCI_1_PERR                                   6:6 /* C--VF */
#define CR_CPU_CST_PCI_1_PERR_DISABLED                   0x00000000 /* C---V */
#define CR_CPU_CST_PCI_1_STEP                                   7:7 /* C--VF */
#define CR_CPU_CST_PCI_1_STEP_DISABLED                   0x00000000 /* C---V */
#define CR_CPU_CST_PCI_1_SERR                                   8:8 /* C--VF */
#define CR_CPU_CST_PCI_1_SERR_DISABLED                   0x00000000 /* C---V */
#define CR_CPU_CST_PCI_1_BACK2BACK                              9:9 /* C--VF */
#define CR_CPU_CST_PCI_1_BACK2BACK_DISABLED              0x00000000 /* C---V */
#define CR_CPU_CST_PCI_1_CAPLIST                              20:20 /* C--VF */
#define CR_CPU_CST_PCI_1_CAPLIST_NOT_PRESENT             0x00000000 /* C---V */
#define CR_CPU_CST_PCI_1_66MHZ                                21:21 /* C--VF */
#define CR_CPU_CST_PCI_1_66MHZ_CAPABLE                   0x00000001 /* C---V */
#define CR_CPU_CST_PCI_1_FAST_BACK2BACK                       23:23 /* C--VF */
#define CR_CPU_CST_PCI_1_FAST_BACK2BACK_INCAPABLE        0x00000000 /* C---V */
#define CR_CPU_CST_PCI_1_MASTER_DATA_PERR                     24:24 /* C--VF */
#define CR_CPU_CST_PCI_1_MASTER_DATA_PERR_NOT_ACTIVE     0x00000000 /* C---V */
#define CR_CPU_CST_PCI_1_DEVSEL_TIMING                        26:25 /* C--VF */
#define CR_CPU_CST_PCI_1_DEVSEL_TIMING_FAST              0x00000000 /* C---V */
#define CR_CPU_CST_PCI_1_SIGNALED_TARGET                      27:27 /* C--VF */
#define CR_CPU_CST_PCI_1_SIGNALED_TARGET_NO_ABORT        0x00000000 /* C---V */
#define CR_CPU_CST_PCI_1_RECEIVED_TARGET                      28:28 /* C--VF */
#define CR_CPU_CST_PCI_1_RECEIVED_TARGET_NO_ABORT        0x00000000 /* C---V */
#define CR_CPU_CST_PCI_1_RECEIVED_MASTER                      29:29 /* C--VF */
#define CR_CPU_CST_PCI_1_RECEIVED_MASTER_NO_ABORT        0x00000000 /* C---V */
#define CR_CPU_CST_PCI_1_SIGNALED_SERR                        30:30 /* C--VF */
#define CR_CPU_CST_PCI_1_SIGNALED_SERR_NOT_ACTIVE        0x00000000 /* C---V */
#define CR_CPU_CST_PCI_1_DETECTED_PERR                        31:31 /* C--VF */
#define CR_CPU_CST_PCI_1_DETECTED_PERR_NOT_ACTIVE        0x00000000 /* C---V */
#define CR_CPU_CST_PCI_2                                 0x80000308 /* R--4R */
#define CR_CPU_CST_PCI_2_REVISION_ID                            7:0 /* R--VF */
#define CR_CPU_CST_PCI_2_REVISION_ID_A01                 0x000000A1 /* R---V */
#define CR_CPU_CST_PCI_2_REVISION_ID_A02                 0x000000A2 /* R---V */
#define CR_CPU_CST_PCI_2_CLASS_CODE                            31:8 /* R--VF */
#define CR_CPU_CST_PCI_2_CLASS_CODE_MEM_CTRL             0x00050000 /* R---V */
#define CR_CPU_CST_PCI_3                                 0x8000030C /* R--4R */
#define CR_CPU_CST_PCI_3_CACHE_LINE_SIZE                        7:0 /* C--VF */
#define CR_CPU_CST_PCI_3_CACHE_LINE_SIZE_0               0x00000000 /* C---V */
#define CR_CPU_CST_PCI_3_LATENCY_TIMER                        15:11 /* C--VF */
#define CR_CPU_CST_PCI_3_LATENCY_TIMER_0_CLOCKS          0x00000000 /* C---V */
#define CR_CPU_CST_PCI_3_HEADER_TYPE_DEVICE                   22:16 /* C--VF */
#define CR_CPU_CST_PCI_3_HEADER_TYPE_DEVICE_NON_BRIDGE   0x00000000 /* C---V */
#define CR_CPU_CST_PCI_3_HEADER_TYPE_FUNC                     23:23 /* C--VF */
#define CR_CPU_CST_PCI_3_HEADER_TYPE_FUNC_MULTIFUNC      0x00000001 /* C---V */
#define CR_CPU_CST_PCI_4(i)                      (0x80000310+(i)*4) /* R--4A */
#define CR_CPU_CST_PCI_4__SIZE_1                                  7 /*       */
#define CR_CPU_CST_PCI_4_RESERVED                              31:0 /* C--VF */
#define CR_CPU_CST_PCI_4_RESERVED_0                      0x00000000 /* C---V */
#define CR_CPU_CST_PCI_11                                0x8000032C /* R--4R */
#define CR_CPU_CST_PCI_11_SUBSYSTEM_VENDOR_ID                  15:0 /* C--VF */
#define CR_CPU_CST_PCI_11_SUBSYSTEM_VENDOR_ID_NONE       0x00000000 /* C---V */
#define CR_CPU_CST_PCI_11_SUBSYSTEM_ID                        31:16 /* C--VF */
#define CR_CPU_CST_PCI_11_SUBSYSTEM_ID_NONE              0x00000000 /* C---V */
#define CR_CPU_CST_PCI_12                                0x80000330 /* R--4R */
#define CR_CPU_CST_PCI_12_RESERVED                             31:0 /* C--VF */
#define CR_CPU_CST_PCI_12_RESERVED_0                     0x00000000 /* C---V */
#define CR_CPU_CST_PCI_13                                0x80000334 /* R--4R */
#define CR_CPU_CST_PCI_13_CAP_PTR                               7:0 /* C--VF */
#define CR_CPU_CST_PCI_13_CAP_PTR_NONE                   0x00000000 /* C---V */
#define CR_CPU_CST_PCI_14                                0x80000338 /* R--4R */
#define CR_CPU_CST_PCI_14_RESERVED                             31:0 /* C--VF */
#define CR_CPU_CST_PCI_14_RESERVED_0                     0x00000000 /* C---V */
#define CR_CPU_CST_PCI_15                                0x8000033C /* R--4R */
#define CR_CPU_CST_PCI_15_INTR_LINE                             7:0 /* C--VF */
#define CR_CPU_CST_PCI_15_INTR_LINE_IRQ0                 0x00000000 /* C---V */
#define CR_CPU_CST_PCI_15_INTR_PIN                             15:8 /* C--VF */
#define CR_CPU_CST_PCI_15_INTR_PIN_NONE                  0x00000000 /* C---V */
#define CR_CPU_CST_PCI_15_MIN_GNT                             23:16 /* C--VF */
#define CR_CPU_CST_PCI_15_MIN_GNT_NO_REQUIREMENTS        0x00000000 /* C---V */
#define CR_CPU_CST_PCI_15_MAX_LAT                             31:24 /* C--VF */
#define CR_CPU_CST_PCI_15_MAX_LAT_NO_REQUIREMENTS        0x00000000 /* C---V */
#define CR_CPU_CST_0                                     0x80000340 /* RW-4R */
#define CR_CPU_CST_0_CSHAPE_CPU_SAMPLE                          3:0 /* RWIVF */
#define CR_CPU_CST_0_CSHAPE_CPU_SAMPLE_0                 0x00000000 /* RWI-V */
#define CR_CPU_CST_0_CTRIM_CPU_SAMPLE                           7:4 /* RWIVF */
#define CR_CPU_CST_0_CTRIM_CPU_SAMPLE_0                  0x00000000 /* RWI-V */
#define CR_CPU_CST_0_CSHAPE_CPU_HOLD                           11:8 /* RWIVF */
#define CR_CPU_CST_0_CSHAPE_CPU_HOLD_0                   0x00000000 /* RWI-V */
#define CR_CPU_CST_0_CTRIM_CPU_HOLD                           15:12 /* RWIVF */
#define CR_CPU_CST_0_CTRIM_CPU_HOLD_0                    0x00000000 /* RWI-V */
#define CR_CPU_CST_0_CSHAPE_MEM_SAMPLE                        19:16 /* RWIVF */
#define CR_CPU_CST_0_CSHAPE_MEM_SAMPLE_0                 0x00000000 /* RWI-V */
#define CR_CPU_CST_0_CTRIM_MEM_SAMPLE                         23:20 /* RWIVF */
#define CR_CPU_CST_0_CTRIM_MEM_SAMPLE_0                  0x00000000 /* RWI-V */
#define CR_CPU_CST_0_CSHAPE_MEM_HOLD                          27:24 /* RWIVF */
#define CR_CPU_CST_0_CSHAPE_MEM_HOLD_0                   0x00000000 /* RWI-V */
#define CR_CPU_CST_0_CTRIM_MEM_HOLD                           31:28 /* RWIVF */
#define CR_CPU_CST_0_CTRIM_MEM_HOLD_0                    0x00000000 /* RWI-V */
#define CR_CPU_CST_1                                     0x80000344 /* RW-4R */
#define CR_CPU_CST_1_CSHAPE_AGPCLKOUT                           3:0 /* RWIVF */
#define CR_CPU_CST_1_CSHAPE_AGPCLKOUT_0                  0x00000000 /* RWI-V */
#define CR_CPU_CST_1_CTRIM_AGPCLKOUT                            7:4 /* RWIVF */
#define CR_CPU_CST_1_CTRIM_AGPCLKOUT_0                   0x00000000 /* RWI-V */
#define CR_CPU_CST_1_CSHAPE_AGPCLKFB                           11:8 /* RWIVF */
#define CR_CPU_CST_1_CSHAPE_AGPCLKFB_0                   0x00000000 /* RWI-V */
#define CR_CPU_CST_1_CTRIM_AGPCLKFB                           15:12 /* RWIVF */
#define CR_CPU_CST_1_CTRIM_AGPCLKFB_0                    0x00000000 /* RWI-V */
#define CR_CPU_CST_1_CTRIM_CPUOCLK                            19:16 /* RWIVF */
#define CR_CPU_CST_1_CTRIM_CPUOCLK_0                     0x00000000 /* RWI-V */
#define CR_CPU_CST_1_CTRIM_CPUCLK_MC                          23:20 /* RWIVF */
#define CR_CPU_CST_1_CTRIM_CPUCLK_MC_0                   0x00000000 /* RWI-V */
#define CR_CPU_CST_1_CSHAPE_MOCLK2X                           27:24 /* RWIVF */
#define CR_CPU_CST_1_CSHAPE_MOCLK2X_0                    0x00000000 /* RWI-V */
#define CR_CPU_CST_1_CSHAPE_MCLK                              31:28 /* RWIVF */
#define CR_CPU_CST_1_CSHAPE_MCLK_0                       0x00000000 /* RWI-V */
#define CR_CPU_CST_2                                     0x80000348 /* RW-4R */
#define CR_CPU_CST_2_CTRIM_MOCLK2X_D_LB0                        3:0 /* RWIVF */
#define CR_CPU_CST_2_CTRIM_MOCLK2X_D_LB0_0               0x00000000 /* RWI-V */
#define CR_CPU_CST_2_CTRIM_MOCLK2X_D_LB1                        7:4 /* RWIVF */
#define CR_CPU_CST_2_CTRIM_MOCLK2X_D_LB1_0               0x00000000 /* RWI-V */
#define CR_CPU_CST_2_CTRIM_MOCLK2X_D_LT0                       11:8 /* RWIVF */
#define CR_CPU_CST_2_CTRIM_MOCLK2X_D_LT0_0               0x00000000 /* RWI-V */
#define CR_CPU_CST_2_CTRIM_MOCLK2X_D_LT1                      15:12 /* RWIVF */
#define CR_CPU_CST_2_CTRIM_MOCLK2X_D_LT1_0               0x00000000 /* RWI-V */
#define CR_CPU_CST_2_CTRIM_MOCLK2X_D_TL0                      19:16 /* RWIVF */
#define CR_CPU_CST_2_CTRIM_MOCLK2X_D_TL0_0               0x00000000 /* RWI-V */
#define CR_CPU_CST_2_CTRIM_MOCLK2X_D_TL1                      23:20 /* RWIVF */
#define CR_CPU_CST_2_CTRIM_MOCLK2X_D_TL1_0               0x00000000 /* RWI-V */
#define CR_CPU_CST_2_CTRIM_MOCLK2X_D_TR0                      27:24 /* RWIVF */
#define CR_CPU_CST_2_CTRIM_MOCLK2X_D_TR0_0               0x00000000 /* RWI-V */
#define CR_CPU_CST_2_CTRIM_MOCLK2X_D_TR1                      31:28 /* RWIVF */
#define CR_CPU_CST_2_CTRIM_MOCLK2X_D_TR1_0               0x00000000 /* RWI-V */
#define CR_CPU_CST_3                                     0x8000034c /* RW-4R */
#define CR_CPU_CST_3_CTRIM_MOCLK2X_A_LT0                        3:0 /* RWIVF */
#define CR_CPU_CST_3_CTRIM_MOCLK2X_A_LT0_0               0x00000000 /* RWI-V */
#define CR_CPU_CST_3_CTRIM_MOCLK2X_A_LT1                        7:4 /* RWIVF */
#define CR_CPU_CST_3_CTRIM_MOCLK2X_A_LT1_0               0x00000000 /* RWI-V */
#define CR_CPU_CST_3_CTRIM_MOCLK2X_A_TL0                       11:8 /* RWIVF */
#define CR_CPU_CST_3_CTRIM_MOCLK2X_A_TL0_0               0x00000000 /* RWI-V */
#define CR_CPU_CST_3_CTRIM_MOCLK2X_A_TL1                      15:12 /* RWIVF */
#define CR_CPU_CST_3_CTRIM_MOCLK2X_A_TL1_0               0x00000000 /* RWI-V */
#define CR_CPU_CST_3_CTRIM_MOCLK2X_CS0                        19:16 /* RWIVF */
#define CR_CPU_CST_3_CTRIM_MOCLK2X_CS0_0                 0x00000000 /* RWI-V */
#define CR_CPU_CST_3_CTRIM_MOCLK2X_CS1                        23:20 /* RWIVF */
#define CR_CPU_CST_3_CTRIM_MOCLK2X_CS1_0                 0x00000000 /* RWI-V */
#define CR_CPU_CST_3_CTRIM_MOCLK2X_CE0                        27:24 /* RWIVF */
#define CR_CPU_CST_3_CTRIM_MOCLK2X_CE0_0                 0x00000000 /* RWI-V */
#define CR_CPU_CST_3_CTRIM_MOCLK2X_CE1                        31:28 /* RWIVF */
#define CR_CPU_CST_3_CTRIM_MOCLK2X_CE1_0                 0x00000000 /* RWI-V */
#define CR_CPU_CST_4                                     0x80000350 /* RW-4R */
#define CR_CPU_CST_4_CTRIM_MOCLK2X_CK_L0                        3:0 /* RWIVF */
#define CR_CPU_CST_4_CTRIM_MOCLK2X_CK_L0_0               0x00000000 /* RWI-V */
#define CR_CPU_CST_4_CTRIM_MOCLK2X_CK_L1                        7:4 /* RWIVF */
#define CR_CPU_CST_4_CTRIM_MOCLK2X_CK_L1_0               0x00000000 /* RWI-V */
#define CR_CPU_CST_4_CTRIM_MOCLK2X_CK_TL0                      11:8 /* RWIVF */
#define CR_CPU_CST_4_CTRIM_MOCLK2X_CK_TL0_0              0x00000000 /* RWI-V */
#define CR_CPU_CST_4_CTRIM_MOCLK2X_CK_TL1                     15:12 /* RWIVF */
#define CR_CPU_CST_4_CTRIM_MOCLK2X_CK_TL1_0              0x00000000 /* RWI-V */
#define CR_CPU_CST_4_CTRIM_MOCLK2X_CK_T0                      19:16 /* RWIVF */
#define CR_CPU_CST_4_CTRIM_MOCLK2X_CK_T0_0               0x00000000 /* RWI-V */
#define CR_CPU_CST_4_CTRIM_MOCLK2X_CK_T1                      23:20 /* RWIVF */
#define CR_CPU_CST_4_CTRIM_MOCLK2X_CK_T1_0               0x00000000 /* RWI-V */
#define CR_CPU_CST_5                                     0x80000354 /* RW-4R */
#define CR_CPU_CST_5_CTRIM_MCLK_LB                              3:0 /* RWIVF */
#define CR_CPU_CST_5_CTRIM_MCLK_LB_0                     0x00000000 /* RWI-V */
#define CR_CPU_CST_5_CTRIM_MCLK_LT                              7:4 /* RWIVF */
#define CR_CPU_CST_5_CTRIM_MCLK_LT_0                     0x00000000 /* RWI-V */
#define CR_CPU_CST_5_CTRIM_MCLK_TL                             11:8 /* RWIVF */
#define CR_CPU_CST_5_CTRIM_MCLK_TL_0                     0x00000000 /* RWI-V */
#define CR_CPU_CST_5_CTRIM_MCLK_TR                            15:12 /* RWIVF */
#define CR_CPU_CST_5_CTRIM_MCLK_TR_0                     0x00000000 /* RWI-V */
#define CR_CPU_CST_6                                     0x80000358 /* RW-4R */
#define CR_CPU_CST_6_CTRIM_MCLK_MC                              3:0 /* RWIVF */
#define CR_CPU_CST_6_CTRIM_MCLK_MC_0                     0x00000000 /* RWI-V */
#define CR_CPU_CST_6_CTRIM_MCLK_NE                              7:4 /* RWIVF */
#define CR_CPU_CST_6_CTRIM_MCLK_NE_0                     0x00000000 /* RWI-V */
#define CR_CPU_CST_6_CTRIM_MCLK_SW                             11:8 /* RWIVF */
#define CR_CPU_CST_6_CTRIM_MCLK_SW_0                     0x00000000 /* RWI-V */
#define CR_CPU_CST_6_CTRIM_MCLK_SE                            15:12 /* RWIVF */
#define CR_CPU_CST_6_CTRIM_MCLK_SE_0                     0x00000000 /* RWI-V */
#define CR_CPU_CST_6_CTRIM_MCLK_NW                            19:16 /* RWIVF */
#define CR_CPU_CST_6_CTRIM_MCLK_NW_0                     0x00000000 /* RWI-V */
#define CR_CPU_CST_7                                     0x8000035c /* RW-4R */
#define CR_CPU_CST_7_CSHAPE_AGPCLK4X                            3:0 /* RWIVF */
#define CR_CPU_CST_7_CSHAPE_AGPCLK4X_0                   0x00000000 /* RWI-V */
#define CR_CPU_CST_7_CTRIM_AGPCLK4X                             7:4 /* RWIVF */
#define CR_CPU_CST_7_CTRIM_AGPCLK4X_0                    0x00000000 /* RWI-V */
#define CR_CPU_CST_7_CSHAPE_AGPCLK                             11:8 /* RWIVF */
#define CR_CPU_CST_7_CSHAPE_AGPCLK_0                     0x00000000 /* RWI-V */
#define CR_CPU_CST_7_CTRIM_AGPOCLK                            15:12 /* RWIVF */
#define CR_CPU_CST_7_CTRIM_AGPOCLK_0                     0x00000000 /* RWI-V */
#define CR_CPU_CST_7_CTRIM_AGPCLK_MC                          19:16 /* RWIVF */
#define CR_CPU_CST_7_CTRIM_AGPCLK_MC_0                   0x00000000 /* RWI-V */
#define CR_CPU_CST_7_CTRIM_AGPCLK_NW                          23:20 /* RWIVF */
#define CR_CPU_CST_7_CTRIM_AGPCLK_NW_0                   0x00000000 /* RWI-V */
#define CR_CPU_CST_7_CTRIM_AGPCLK_SW                          27:24 /* RWIVF */
#define CR_CPU_CST_7_CTRIM_AGPCLK_SW_0                   0x00000000 /* RWI-V */
#define CR_CPU_CST_7_CTRIM_AGPCLK_SE                          31:28 /* RWIVF */
#define CR_CPU_CST_7_CTRIM_AGPCLK_SE_0                   0x00000000 /* RWI-V */
#define CR_CPU_CST_8                                     0x80000360 /* RW-4R */
#define CR_CPU_CST_8_CTRIM_MICLK_LB                             3:0 /* RWIVF */
#define CR_CPU_CST_8_CTRIM_MICLK_LB_0                    0x00000000 /* RWI-V */  
#define CR_CPU_CST_8_CTRIM_MICLK_LT                             7:4 /* RWIVF */
#define CR_CPU_CST_8_CTRIM_MICLK_LT_0                    0x00000000 /* RWI-V */  
#define CR_CPU_CST_8_CTRIM_MICLK_TL                            11:8 /* RWIVF */
#define CR_CPU_CST_8_CTRIM_MICLK_TL_0                    0x00000000 /* RWI-V */  
#define CR_CPU_CST_8_CTRIM_MICLK_TR                           15:12 /* RWIVF */
#define CR_CPU_CST_8_CTRIM_MICLK_TR_0                    0x00000000 /* RWI-V */
#define CR_CPU_LDT_BIAS                                  0x80000364 /* RW-4R */
#define CR_CPU_LDT_BIAS_ENABLE                                  0:0 /* RWIVF */
#define CR_CPU_LDT_BIAS_ENABLE_ON                        0x00000001 /* RWI-V */
#define CR_CPU_LDT_BIAS_ENABLE_OFF                       0x00000000 /* RW--V */
#define CR_CPU_LDT_BIAS_OVERRIDE                                4:1 /* RWIVF */
#define CR_CPU_LDT_BIAS_OVERRIDE_0                       0x00000000 /* RWI-V */
#define CR_CPU_LDT_BIAS_PERIOD                                 17:5 /* RWIVF */
#define CR_CPU_LDT_BIAS_PERIOD_1MS                       0x00000400 /* RWI-V */
#define CR_CPU_LDT_BIAS_TRIM                                  20:18 /* RWIVF */
#define CR_CPU_LDT_BIAS_TRIM_0                           0x00000000 /* RWI-V */
#define CR_CPU_LDT_BIAS_STATUS                                24:21 /* R--VF */
#define CR_CPU_LDT_BIAS_STATUS_0                         0x00000000 /* R-I-V */               
#define CR_CPU_MISC_1                                    0x80000368 /* RW-4R */
#define CR_CPU_MISC_1_AGP_SBSTB_DSE                             0:0 /* RWIVF */
#define CR_CPU_MISC_1_AGP_SBSTB_DSE_0                    0x00000000 /* RWI-V */
#define CR_CPU_MISC_1_AGP_ADSTB_DSE                             1:1 /* RWIVF */
#define CR_CPU_MISC_1_AGP_ADSTB_DSE_0                    0x00000000 /* RWI-V */
#define CR_CPU_MISC_1_AGP_VREF_EN_BAR                           2:2 /* RWIVF */
#define CR_CPU_MISC_1_AGP_VREF_EN_BAR_1                  0x00000001 /* RWI-V */
#define CR_CPU_MISC_1_CRM_VREF_EN_BAR                           3:3 /* RWIVF */
#define CR_CPU_MISC_1_CRM_VREF_EN_BAR_1                  0x00000001 /* RWI-V */
#define CR_CPU_MISC_1_PM_ENABLE                                 4:4 /* RWIVF */
#define CR_CPU_MISC_1_PM_ENABLE_0                        0x00000000 /* RWI-V */
#define CR_CPU_MISC_1_SW_BP_AGPCLKOUT                           5:5 /* RWIVF */
#define CR_CPU_MISC_1_SW_BP_AGPCLKOUT_1                  0x00000001 /* RWI-V */
#define CR_CPU_MISC_1_SW_BP_AGPCLK                              6:6 /* RWIVF */
#define CR_CPU_MISC_1_SW_BP_AGPCLK_1                     0x00000001 /* RWI-V */
#define CR_CPU_MISC_1_SW_BP_AGPCLK_DIV                          7:7 /* RWIVF */
#define CR_CPU_MISC_1_SW_BP_AGPCLK_DIV_0                 0x00000000 /* RWI-V */
#define CR_CPU_MISC_1_SW_BP_MCLK_DIV                            8:8 /* RWIVF */
#define CR_CPU_MISC_1_SW_BP_MCLK_DIV_0                   0x00000000 /* RWI-V */
/* dev_cr_rom.ref */
#define CR_ROM_NB_TABLE                       0xFFFFFFE7:0xFFFFFFE0 /* R---M */
#define CR_ROM_NB_TABLE__SIZE                 0x00000007:0x00000000 /* R---M */
#define CR_ROM_NB_TABLE_SAFE                     (0*32+31):(0*32+3) /* R--UF */
#define CR_ROM_NB_TABLE_USER                     (1*32+31):(1*32+3) /* R--UF */
#define CR_ROM_NB_BOOT__SIZE_INTEL            0x000000FF:0x00000000 /* R---M */
#define CR_ROM_NB_BOOT__SIZE_AMD              0x000000FF:0x00000000 /* R---M */
#define CR_ROM_NB_BOOT_HEADER                    (0*32+31):(0*32+0) /* R--VF */
#define CR_ROM_NB_BOOT_HEADER_VALUE                      0x2B16D065 /* R---V */
#define CR_ROM_NB_BOOT_PROC                       (1*32+0):(1*32+0) /* R--VF */
#define CR_ROM_NB_BOOT_PROC_AMD                          0x00000000 /* R---V */
#define CR_ROM_NB_BOOT_PROC_INTEL                        0x00000001 /* R---V */
#define CR_ROM_NB_BOOT_RAMTYPE                    (1*32+2):(1*32+2) /* R--VF */
#define CR_ROM_NB_BOOT_RAMTYPE_SDR                       0x00000000 /* R---V */
#define CR_ROM_NB_BOOT_RAMTYPE_DDR                       0x00000001 /* R---V */
#define CR_ROM_NB_BOOT_RAMWIDTH                   (1*32+3):(1*32+3) /* R--VF */
#define CR_ROM_NB_BOOT_RAMWIDTH_64                       0x00000000 /* R---V */
#define CR_ROM_NB_BOOT_RAMWIDTH_128                      0x00000001 /* R---V */
#define CR_ROM_NB_BOOT_MEM_POSTDIV                (1*32+7):(1*32+4) /* R--VF */
#define CR_ROM_NB_BOOT_AGP_POSTDIV               (1*32+11):(1*32+8) /* R--VF */
#define CR_ROM_NB_BOOT_FSB_ROM                  (1*32+15):(1*32+12) /* R--VF */
#define CR_ROM_NB_BOOT_FSB_66                   (1*32+19):(1*32+16) /* R--VF */
#define CR_ROM_NB_BOOT_FSB_100                  (1*32+23):(1*32+20) /* R--VF */
#define CR_ROM_NB_BOOT_FSB_TUALATIN             (1*32+27):(1*32+24) /* R--VF */
#define CR_ROM_NB_BOOT_FSB_133                  (1*32+31):(1*32+28) /* R--VF */
#define CR_ROM_NB_BOOT_COREPLL_MDIV_66            (2*32+7):(2*32+0) /* R--VF */
#define CR_ROM_NB_BOOT_COREPLL_MDIV_100          (2*32+15):(2*32+8) /* R--VF */
#define CR_ROM_NB_BOOT_COREPLL_MDIV_TUALATIN    (2*32+23):(2*32+16) /* R--VF */
#define CR_ROM_NB_BOOT_COREPLL_MDIV_133         (2*32+31):(2*32+24) /* R--VF */
#define CR_ROM_NB_BOOT_COREPLL_NDIV_66            (3*32+7):(3*32+0) /* R--VF */
#define CR_ROM_NB_BOOT_COREPLL_NDIV_100          (3*32+15):(3*32+8) /* R--VF */
#define CR_ROM_NB_BOOT_COREPLL_NDIV_TUALATIN    (3*32+23):(3*32+16) /* R--VF */
#define CR_ROM_NB_BOOT_COREPLL_NDIV_133         (3*32+31):(3*32+24) /* R--VF */
#define CR_ROM_NB_BOOT_COREPLL_MDIV_ROM           (4*32+7):(4*32+0) /* R--VF */
#define CR_ROM_NB_BOOT_COREPLL_NDIV_ROM          (4*32+15):(4*32+8) /* R--VF */
#define CR_ROM_NB_BOOT_ASRC_CPU                 (4*32+23):(4*32+16) /* R--VF */
#define CR_ROM_NB_BOOT_ASRC_LDT                 (4*32+31):(4*32+24) /* R--VF */
#define CR_ROM_NB_BOOT_SADDOUTCLK_DLY             (5*32+3):(5*32+0) /* R--VF */
#define CR_ROM_NB_BOOT_SADDOUTCLK_DLY__PROD              0x0000000A /* ----V */
#define CR_ROM_NB_BOOT_SDATAOUTCLK_DLY            (5*32+7):(5*32+4) /* R--VF */
#define CR_ROM_NB_BOOT_SDATAOUTCLK_DLY__PROD             0x00000008 /* ----V */
#define CR_ROM_NB_BOOT_CPU_VREF_EN_               (5*32+8):(5*32+8) /* R--VF */
#define CR_ROM_NB_BOOT_APIC_33                    (5*32+9):(5*32+9) /* R--VF */
#define CR_ROM_NB_BOOT_COREPLL_SETUP            (5*32+18):(5*32+10) /* R--VF */
#define CR_ROM_NB_BOOT_CPUPLL_SETUP             (5*32+27):(5*32+19) /* R--VF */
#define CR_ROM_NB_BOOT_COREPLL_DLY              (5*32+31):(5*32+28) /* R--VF */
#define CR_ROM_NB_BOOT_CTRIM_CPUCLKFB             (6*32+3):(6*32+0) /* R--VF */
#define CR_ROM_NB_BOOT_CTRIM_CPUCLK2X_BL          (6*32+7):(6*32+4) /* R--VF */
#define CR_ROM_NB_BOOT_CTRIM_CPUCLK2X_BR         (6*32+11):(6*32+8) /* R--VF */
#define CR_ROM_NB_BOOT_CTRIM_CPUCLK_NW          (6*32+15):(6*32+12) /* R--VF */
#define CR_ROM_NB_BOOT_CTRIM_CPUCLK_SW          (6*32+19):(6*32+16) /* R--VF */
#define CR_ROM_NB_BOOT_CTRIM_CPUCLK_SE          (6*32+23):(6*32+20) /* R--VF */
#define CR_ROM_NB_BOOT_CTRIM_CPUOCLK_BL         (6*32+27):(6*32+24) /* R--VF */
#define CR_ROM_NB_BOOT_CTRIM_CPUOCLK_BR         (6*32+31):(6*32+28) /* R--VF */
#define CR_ROM_NB_BOOT_CTRIM_CPUCLKOUT            (7*32+3):(7*32+0) /* R--VF */
#define CR_ROM_NB_BOOT_CTRIM_APICCLK_MCP          (7*32+7):(7*32+4) /* R--VF */
#define CR_ROM_NB_BOOT_CTRIM_APICCLK_CPU         (7*32+11):(7*32+8) /* R--VF */
#define CR_ROM_NB_BOOT_CTRIM_COREPLLFB          (7*32+15):(7*32+12) /* R--VF */
#define CR_ROM_NB_BOOT_CTRIM_CPUPLLFB           (7*32+19):(7*32+16) /* R--VF */
#define CR_ROM_NB_BOOT_CTRIM_SPARE1             (7*32+23):(7*32+20) /* R--VF */
#define CR_ROM_NB_BOOT_CTRIM_SPARE2             (7*32+27):(7*32+24) /* R--VF */
#define CR_ROM_NB_BOOT_CTRIM_SPARE3             (7*32+31):(7*32+28) /* R--VF */
#define CR_ROM_NB_BOOT_CSHAPE_CPUCLKFB            (8*32+3):(8*32+0) /* R--VF */
#define CR_ROM_NB_BOOT_CSHAPE_CPUCLK2X            (8*32+7):(8*32+4) /* R--VF */
#define CR_ROM_NB_BOOT_CSHAPE_CPUCLK             (8*32+11):(8*32+8) /* R--VF */
#define CR_ROM_NB_BOOT_CSHAPE_CPUCLKOUT         (8*32+15):(8*32+12) /* R--VF */
#define CR_ROM_NB_BOOT_CSHAPE_APICCLK_CPU       (8*32+19):(8*32+16) /* R--VF */
#define CR_ROM_NB_BOOT_CSHAPE_APICCLK_MCP       (8*32+23):(8*32+20) /* R--VF */
#define CR_ROM_NB_BOOT_CSHAPE_SPARE1            (8*32+27):(8*32+24) /* R--VF */
#define CR_ROM_NB_BOOT_CSHAPE_SPARE2            (8*32+31):(8*32+28) /* R--VF */
#define CR_ROM_NB_BOOT_INTEL_BPRI_                (9*32+0):(9*32+0) /* R--VF */    
#define CR_ROM_NB_BOOT_INTEL_BNR_                 (9*32+1):(9*32+1) /* R--VF */    
#define CR_ROM_NB_BOOT_INTEL_ADS_                 (9*32+2):(9*32+2) /* R--VF */    
#define CR_ROM_NB_BOOT_INTEL_ADDR_               (9*32+31):(9*32+3) /* R--VF */    
#define CR_ROM_NB_BOOT_INTEL_TRDY_              (10*32+0):(10*32+0) /* R--VF */
#define CR_ROM_NB_BOOT_INTEL_RS_                (10*32+3):(10*32+1) /* R--VF */
#define CR_ROM_NB_BOOT_INTEL_REQ_               (10*32+8):(10*32+4) /* R--VF */
#define CR_ROM_NB_BOOT_INTEL_HITM_              (10*32+9):(10*32+9) /* R--VF */
#define CR_ROM_NB_BOOT_INTEL_HIT_             (10*32+10):(10*32+10) /* R--VF */
#define CR_ROM_NB_BOOT_INTEL_DRDY_            (10*32+11):(10*32+11) /* R--VF */
#define CR_ROM_NB_BOOT_INTEL_DEFER_           (10*32+12):(10*32+12) /* R--VF */
#define CR_ROM_NB_BOOT_INTEL_DBSY_            (10*32+13):(10*32+13) /* R--VF */
#define CR_ROM_NB_BOOT_INTEL_AGTL_PLUS        (10*32+14):(10*32+14) /* R--VF */
#define CR_ROM_NB_BOOT_INTEL_AGTL_PLUS__PROD             0x00000001 /* ----V */
#define CR_ROM_NB_BOOT_INTEL_SPARE1           (10*32+31):(10*32+15) /* R--VF */
#define CR_ROM_NB_BOOT_AMD_SIP_SB               (32*32+0):(32*32+0) /* R--VF */
#define CR_ROM_NB_BOOT_AMD_SIP_RR               (32*32+1):(32*32+1) /* R--VF */
#define CR_ROM_NB_BOOT_AMD_SIP_BT               (32*32+2):(32*32+2) /* R--VF */
#define CR_ROM_NB_BOOT_AMD_SIP_AM               (32*32+5):(32*32+3) /* R--VF */
#define CR_ROM_NB_BOOT_AMD_SIP_DM               (32*32+8):(32*32+6) /* R--VF */
#define CR_ROM_NB_BOOT_AMD_SIP_RO              (32*32+10):(32*32+9) /* R--VF */
#define CR_ROM_NB_BOOT_AMD_SIP_AC             (32*32+13):(32*32+11) /* R--VF */
#define CR_ROM_NB_BOOT_AMD_SIP_PM             (32*32+14):(32*32+14) /* R--VF */
#define CR_ROM_NB_BOOT_AMD_SIP_EX             (32*32+15):(32*32+15) /* R--VF */
#define CR_ROM_NB_BOOT_AMD_SIP_DL             (32*32+19):(32*32+16) /* R--VF */
#define CR_ROM_NB_BOOT_AMD_SIP_DS             (32*32+20):(32*32+20) /* R--VF */
#define CR_ROM_NB_BOOT_AMD_SIP_PP             (32*32+21):(32*32+21) /* R--VF */
#define CR_ROM_NB_BOOT_AMD_SIP_AD             (32*32+23):(32*32+22) /* R--VF */
#define CR_ROM_NB_BOOT_AMD_SIP_OD             (32*32+25):(32*32+24) /* R--VF */
#define CR_ROM_NB_BOOT_AMD_SIP_ED             (32*32+27):(32*32+26) /* R--VF */
#define CR_ROM_NB_BOOT_AMD_SIP_OC             (32*32+30):(32*32+28) /* R--VF */
#define CR_ROM_NB_BOOT_AMD_SIP_EC_LO          (32*32+31):(32*32+31) /* R--VF */
#define CR_ROM_NB_BOOT_AMD_SIP_EC_HI            (33*32+1):(33*32+0) /* R--VF */
#define CR_ROM_NB_BOOT_AMD_SPARE1               (33*32+7):(33*32+2) /* R--VF */
#define CR_ROM_NB_BOOT_AMD_NBAM                (33*32+10):(33*32+8) /* R--VF */
#define CR_ROM_NB_BOOT_AMD_NBDM               (33*32+13):(33*32+11) /* R--VF */
#define CR_ROM_NB_BOOT_AMD_NBDC               (33*32+15):(33*32+14) /* R--VF */
#define CR_ROM_NB_BOOT_AMD_NBSI               (33*32+18):(33*32+16) /* R--VF */
#define CR_ROM_NB_BOOT_AMD_NBSO               (33*32+21):(33*32+20) /* R--VF */
#define CR_ROM_NB_BOOT_AMD_NBRW               (33*32+25):(33*32+24) /* R--VF */
#define CR_ROM_NB_BOOT_AMD_NBWR               (33*32+26):(33*32+26) /* R--VF */
#define CR_ROM_NB_BOOT_AMD_NBWD               (33*32+29):(33*32+27) /* R--VF */
#define CR_ROM_NB_BOOT_AMD_SDATAIN_EARLY      (33*32+30):(33*32+30) /* R--VF */
#define CR_ROM_NB_BOOT_AMD_SPARE2             (33*32+31):(33*32+31) /* R--VF */
/* dev_cr_apc.ref */
#define CR_APC                                0x8000F0FF:0x8000F000 /* RW--D */
#define CR_APC_P2P_0                                     0x8000F000 /* R--4R */
#define CR_APC_P2P_0_VENDOR_ID                                 15:0 /* C--VF */
#define CR_APC_P2P_0_VENDOR_ID_NVIDIA                    0x000010DE /* C---V */
#define CR_APC_P2P_0_DEVICE_ID                                31:16 /* C--VF */
#define CR_APC_P2P_0_DEVICE_ID_NV1B_DEVID0               0x000001B7 /* C---V */
#define CR_APC_P2P_1                                     0x8000F004 /* RW-4R */
#define CR_APC_P2P_1_IO_SPACE                                   0:0 /* RWIVF */
#define CR_APC_P2P_1_IO_SPACE_DISABLED                   0x00000000 /* RWI-V */
#define CR_APC_P2P_1_IO_SPACE_ENABLED                    0x00000001 /* RW--V */
#define CR_APC_P2P_1_MEMORY_SPACE                               1:1 /* RWIVF */
#define CR_APC_P2P_1_MEMORY_SPACE_DISABLED               0x00000000 /* RWI-V */
#define CR_APC_P2P_1_MEMORY_SPACE_ENABLED                0x00000001 /* RW--V */
#define CR_APC_P2P_1_BUS_MASTER                                 2:2 /* RWIVF */
#define CR_APC_P2P_1_BUS_MASTER_DISABLED                 0x00000000 /* RWI-V */
#define CR_APC_P2P_1_BUS_MASTER_ENABLED                  0x00000001 /* RW--V */
#define CR_APC_P2P_1_SPEC_CYC                                   3:3 /* C--VF */
#define CR_APC_P2P_1_SPEC_CYC_DISABLED                   0x00000000 /* C---V */
#define CR_APC_P2P_1_SPEC_CYC_ENABLED                    0x00000001 /* ----V */
#define CR_APC_P2P_1_WRITE_AND_INVAL                            4:4 /* C--VF */
#define CR_APC_P2P_1_WRITE_AND_INVAL_DISABLED            0x00000000 /* C---V */
#define CR_APC_P2P_1_WRITE_AND_INVAL_ENABLED             0x00000001 /* ----V */
#define CR_APC_P2P_1_PALETTE_SNOOP                              5:5 /* C--VF */
#define CR_APC_P2P_1_PALETTE_SNOOP_DISABLED              0x00000000 /* C---V */
#define CR_APC_P2P_1_PALETTE_SNOOP_ENABLED               0x00000001 /* ----V */
#define CR_APC_P2P_1_PERR                                       6:6 /* C--VF */
#define CR_APC_P2P_1_PERR_DISABLED                       0x00000000 /* C---V */
#define CR_APC_P2P_1_PERR_ENABLED                        0x00000001 /* ----V */
#define CR_APC_P2P_1_STEP                                       7:7 /* C--VF */
#define CR_APC_P2P_1_STEP_DISABLED                       0x00000000 /* C---V */
#define CR_APC_P2P_1_STEP_ENABLED                        0x00000001 /* ----V */
#define CR_APC_P2P_1_SERR                                       8:8 /* RWIVF */
#define CR_APC_P2P_1_SERR_DISABLED                       0x00000000 /* RWI-V */
#define CR_APC_P2P_1_SERR_ENABLED                        0x00000001 /* RW--V */
#define CR_APC_P2P_1_FBACK                                      9:9 /* C--VF */
#define CR_APC_P2P_1_FBACK_INCAPABLE                     0x00000000 /* C---V */
#define CR_APC_P2P_1_FBACK_CAPABLE                       0x00000001 /* ----V */
#define CR_APC_P2P_1_CAPLIST                                  20:20 /* C--VF */
#define CR_APC_P2P_1_CAPLIST_NOT_PRESENT                 0x00000000 /* C---V */
#define CR_APC_P2P_1_CAPLIST_PRESENT                     0x00000001 /* ----V */
#define CR_APC_P2P_1_66MHZ                                    21:21 /* C--VF */
#define CR_APC_P2P_1_66MHZ_INCAPABLE                     0x00000000 /* ----V */
#define CR_APC_P2P_1_66MHZ_CAPABLE                       0x00000001 /* C---V */
#define CR_APC_P2P_1_UDF                                      22:22 /* C--VF */
#define CR_APC_P2P_1_UDF_INCAPABLE                       0x00000000 /* C---V */
#define CR_APC_P2P_1_UDF_CAPABLE                         0x00000001 /* ----V */
#define CR_APC_P2P_1_FAST_BACK2BACK                           23:23 /* C--VF */
#define CR_APC_P2P_1_FAST_BACK2BACK_INCAPABLE            0x00000000 /* C---V */
#define CR_APC_P2P_1_FAST_BACK2BACK_CAPABLE              0x00000001 /* ----V */
#define CR_APC_P2P_1_DATAPERR                                 24:24 /* C--VF */
#define CR_APC_P2P_1_DATAPERR_DISABLED                   0x00000000 /* C---V */
#define CR_APC_P2P_1_DATAPERR_ENABLED                    0x00000001 /* ----V */
#define CR_APC_P2P_1_DEVSEL_TIMING                            26:25 /* C--VF */
#define CR_APC_P2P_1_DEVSEL_TIMING_FAST                  0x00000000 /* ----V */
#define CR_APC_P2P_1_DEVSEL_TIMING_MEDIUM                0x00000001 /* C---V */
#define CR_APC_P2P_1_DEVSEL_TIMING_SLOW                  0x00000002 /* ----V */
#define CR_APC_P2P_1_SIGNALED_TARGET                          27:27 /* C--VF */
#define CR_APC_P2P_1_SIGNALED_TARGET_NO_ABORT            0x00000000 /* C---V */
#define CR_APC_P2P_1_SIGNALED_TARGET_ABORT               0x00000001 /* ----V */
#define CR_APC_P2P_1_RECEIVED_TARGET                          28:28 /* RWIVF */
#define CR_APC_P2P_1_RECEIVED_TARGET_NO_ABORT            0x00000000 /* R-I-V */
#define CR_APC_P2P_1_RECEIVED_TARGET_ABORT               0x00000001 /* R---V */
#define CR_APC_P2P_1_RECEIVED_TARGET_CLEAR               0x00000001 /* -W--V */
#define CR_APC_P2P_1_RECEIVED_MASTER                          29:29 /* RWIVF */
#define CR_APC_P2P_1_RECEIVED_MASTER_NO_ABORT            0x00000000 /* R-I-V */
#define CR_APC_P2P_1_RECEIVED_MASTER_ABORT               0x00000001 /* R---V */
#define CR_APC_P2P_1_RECEIVED_MASTER_CLEAR               0x00000001 /* -W--V */
#define CR_APC_P2P_1_SENT_SERR                                30:30 /* RWIVF */
#define CR_APC_P2P_1_SENT_SERR_DISABLE                   0x00000000 /* R-I-V */
#define CR_APC_P2P_1_SENT_SERR_ENABLE                    0x00000001 /* R---V */
#define CR_APC_P2P_1_SENT_SERR_CLEAR                     0x00000001 /* -W--V */
#define CR_APC_P2P_1_DETECTED_PERR                            31:31 /* C--VF */
#define CR_APC_P2P_1_DETECTED_PERR_DISABLED              0x00000000 /* C---V */
#define CR_APC_P2P_1_DETECTED_PERR_ENABLED               0x00000001 /* ----V */
#define CR_APC_P2P_2                                     0x8000F008 /* R--4R */
#define CR_APC_P2P_2_REVISION_ID                                7:0 /* C--VF */
#define CR_APC_P2P_2_REVISION_ID_A01                     0x000000A1 /* C---V */
#define CR_APC_P2P_2_REVISION_ID_A02                     0x000000A2 /* ----V */
#define CR_APC_P2P_2_REVISION_ID_B01                     0x000000B1 /* ----V */
#define CR_APC_P2P_2_INTERFACE                                 15:8 /* C--VF */
#define CR_APC_P2P_2_INTERFACE_HOST_BRIDGE               0x00000000 /* C---V */
#define CR_APC_P2P_2_SUBCLASS                                 23:16 /* C--VF */
#define CR_APC_P2P_2_SUBCLASS_PCI_BRIDGE                 0x00000004 /* C---V */
#define CR_APC_P2P_2_CLASS                                    31:24 /* C--VF */
#define CR_APC_P2P_2_CLASS_BRIDGE                        0x00000006 /* C---V */
#define CR_APC_P2P_3                                     0x8000F00C /* RW-4R */
#define CR_APC_P2P_3_LATENCY_TIMER                             15:8 /* RWIVF */
#define CR_APC_P2P_3_LATENCY_TIMER_0_CLOCKS              0x00000000 /* RWI-V */
#define CR_APC_P2P_3_HEADER_TYPE                              23:16 /* C--VF */
#define CR_APC_P2P_3_HEADER_TYPE_PCI_BRIDGE              0x00000001 /* C---V */
#define CR_APC_P2P_6                                     0x8000F018 /* RW-4R */
#define CR_APC_P2P_6_PRI_BUS                                    7:0 /* RWIVF */
#define CR_APC_P2P_6_PRI_BUS_0                           0x00000000 /* RWI-V */
#define CR_APC_P2P_6_SEC_BUS                                   15:8 /* RWIVF */
#define CR_APC_P2P_6_SEC_BUS_0                           0x00000000 /* RWI-V */
#define CR_APC_P2P_6_SUB_BUS                                  23:16 /* RWIVF */
#define CR_APC_P2P_6_SUB_BUS_0                           0x00000000 /* RWI-V */
#define CR_APC_P2P_6_LATENCY_TIMER                            31:24 /* RWIVF */
#define CR_APC_P2P_6_LATENCY_TIMER_0_CLOCKS              0x00000000 /* RWI-V */
#define CR_APC_P2P_7                                     0x8000F01C /* RW-4R */
#define CR_APC_P2P_7_IOBASE_R                                   3:0 /* C--UF */
#define CR_APC_P2P_7_IOBASE_R_16                         0x00000000 /* ----V */
#define CR_APC_P2P_7_IOBASE_R_32                         0x00000001 /* C---V */
#define CR_APC_P2P_7_IOBASE_LOW                                 7:4 /* RWIUF */
#define CR_APC_P2P_7_IOBASE_LOW_15                       0x0000000F /* RWI-V */
#define CR_APC_P2P_7_IOLIMIT_R                                 11:8 /* C--UF */
#define CR_APC_P2P_7_IOLIMIT_R_16                        0x00000000 /* ----V */
#define CR_APC_P2P_7_IOLIMIT_R_32                        0x00000001 /* C---V */
#define CR_APC_P2P_7_IOLIMIT_LOW                              15:12 /* RWIUF */
#define CR_APC_P2P_7_IOLIMIT_LOW_0                       0x00000000 /* RWI-V */
#define CR_APC_P2P_7_CAPLIST                                  20:20 /* C--VF */
#define CR_APC_P2P_7_CAPLIST_NOT_PRESENT                 0x00000000 /* C---V */
#define CR_APC_P2P_7_CAPLIST_PRESENT                     0x00000001 /* ----V */
#define CR_APC_P2P_7_66MHZ                                    21:21 /* C--VF */
#define CR_APC_P2P_7_66MHZ_INCAPABLE                     0x00000000 /* ----V */
#define CR_APC_P2P_7_66MHZ_CAPABLE                       0x00000001 /* C---V */
#define CR_APC_P2P_7_UDF                                      22:22 /* C--VF */
#define CR_APC_P2P_7_UDF_INCAPABLE                       0x00000000 /* C---V */
#define CR_APC_P2P_7_UDF_CAPABLE                         0x00000001 /* ----V */
#define CR_APC_P2P_7_FAST_BACK2BACK                           23:23 /* C--VF */
#define CR_APC_P2P_7_FAST_BACK2BACK_INCAPABLE            0x00000000 /* ----V */
#define CR_APC_P2P_7_FAST_BACK2BACK_CAPABLE              0x00000001 /* C---V */
#define CR_APC_P2P_7_DATAPERR                                 24:24 /* C--VF */
#define CR_APC_P2P_7_DATAPERR_DISABLED                   0x00000000 /* C---V */
#define CR_APC_P2P_7_DATAPERR_ENABLED                    0x00000001 /* ----V */
#define CR_APC_P2P_7_DEVSEL_TIMING                            26:25 /* C--VF */
#define CR_APC_P2P_7_DEVSEL_TIMING_FAST                  0x00000000 /* ----V */
#define CR_APC_P2P_7_DEVSEL_TIMING_MEDIUM                0x00000001 /* C---V */
#define CR_APC_P2P_7_DEVSEL_TIMING_SLOW                  0x00000002 /* ----V */
#define CR_APC_P2P_7_SIGNALED_TARGET                          27:27 /* C--VF */
#define CR_APC_P2P_7_SIGNALED_TARGET_NO_ABORT            0x00000000 /* C---V */
#define CR_APC_P2P_7_SIGNALED_TARGET_ABORT               0x00000001 /* ----V */
#define CR_APC_P2P_7_RECEIVED_TARGET                          28:28 /* RWIVF */
#define CR_APC_P2P_7_RECEIVED_TARGET_NO_ABORT            0x00000000 /* R-I-V */
#define CR_APC_P2P_7_RECEIVED_TARGET_ABORT               0x00000001 /* R---V */
#define CR_APC_P2P_7_RECEIVED_TARGET_CLEAR               0x00000001 /* -W--V */
#define CR_APC_P2P_7_RECEIVED_MASTER                          29:29 /* RWIVF */
#define CR_APC_P2P_7_RECEIVED_MASTER_NO_ABORT            0x00000000 /* R-I-V */
#define CR_APC_P2P_7_RECEIVED_MASTER_ABORT               0x00000001 /* R---V */
#define CR_APC_P2P_7_RECEIVED_MASTER_CLEAR               0x00000001 /* -W--V */
#define CR_APC_P2P_7_SENT_SERR                                30:30 /* RWIVF */
#define CR_APC_P2P_7_SENT_SERR_DISABLE                   0x00000000 /* R-I-V */
#define CR_APC_P2P_7_SENT_SERR_ENABLE                    0x00000001 /* R---V */
#define CR_APC_P2P_7_SENT_SERR_CLEAR                     0x00000001 /* -W--V */
#define CR_APC_P2P_7_DETECTED_PERR                            31:31 /* C--VF */
#define CR_APC_P2P_7_DETECTED_PERR_DISABLED              0x00000000 /* C---V */
#define CR_APC_P2P_7_DETECTED_PERR_ENABLED               0x00000001 /* ----V */
#define CR_APC_P2P_8                                     0x8000F020 /* RW-4R */
#define CR_APC_P2P_8_MBASE                                     15:4 /* RWIUF */
#define CR_APC_P2P_8_MBASE_FFF                           0x00000FFF /* RWI-V */
#define CR_APC_P2P_8_MLIMIT                                   31:20 /* RWIUF */
#define CR_APC_P2P_8_MLIMIT_0                            0x00000000 /* RWI-V */
#define CR_APC_P2P_9                                     0x8000F024 /* RW-4R */
#define CR_APC_P2P_9_PREFETCH_MBASE                            15:4 /* RWIUF */
#define CR_APC_P2P_9_PREFETCH_MBASE_FFF                  0x00000FFF /* RWI-V */
#define CR_APC_P2P_9_PREFETCH_MLIMIT                          31:20 /* RWIUF */
#define CR_APC_P2P_9_PREFETCH_MLIMIT_0                   0x00000000 /* RWI-V */
#define CR_APC_P2P_15                                    0x8000F03C /* RW-4R */
#define CR_APC_P2P_15_PERR_RESP                               16:16 /* RWIVF */
#define CR_APC_P2P_15_PERR_RESP_DISABLED                 0x00000000 /* RWI-V */
#define CR_APC_P2P_15_PERR_RESP_ENABLED                  0x00000001 /* RW--V */
#define CR_APC_P2P_15_SERR                                    17:17 /* RWIVF */
#define CR_APC_P2P_15_SERR_DISABLED                      0x00000000 /* RWI-V */
#define CR_APC_P2P_15_SERR_ENABLED                       0x00000001 /* RW--V */
#define CR_APC_P2P_15_ISA                                     18:18 /* RWIVF */
#define CR_APC_P2P_15_ISA_DISABLED                       0x00000000 /* RWI-V */
#define CR_APC_P2P_15_ISA_ENABLED                        0x00000001 /* RW--V */
#define CR_APC_P2P_15_VGA                                     19:19 /* RWIVF */
#define CR_APC_P2P_15_VGA_DISABLED                       0x00000000 /* RWI-V */
#define CR_APC_P2P_15_VGA_ENABLED                        0x00000001 /* RW--V */
#define CR_APC_P2P_15_SERR_REPORT                             21:21 /* C--VF */
#define CR_APC_P2P_15_SERR_REPORT_DISABLED               0x00000000 /* C---V */
#define CR_APC_P2P_15_SERR_REPORT_ENABLED                0x00000001 /* ----V */
#define CR_APC_P2P_15_RST                                     22:22 /* C--VF */
#define CR_APC_P2P_15_RST_DISABLED                       0x00000000 /* C---V */
#define CR_APC_P2P_15_RST_ENABLED                        0x00000001 /* ----V */
#define CR_APC_P2P_15_FAST_BACK2BACK                          23:23 /* C--VF */
#define CR_APC_P2P_15_FAST_BACK2BACK_INCAPABLE           0x00000000 /* ----V */
#define CR_APC_P2P_15_FAST_BACK2BACK_CAPABLE             0x00000001 /* C---V */
#define CR_APC_P2P_16                                    0x8000F040 /* RW-4R */
#define CR_APC_P2P_16_TGT_PREF                                  0:0 /* RWIVF */
#define CR_APC_P2P_16_TGT_PREF_DISABLED                  0x00000000 /* RWI-V */
#define CR_APC_P2P_16_TGT_PREF_ENABLED                   0x00000001 /* RW--V */
#define CR_APC_P2P_17                                    0x8000F044 /* RW-4R */
#define CR_APC_P2P_17_MEMTOP                                  31:24 /* RWIVF */
#define CR_APC_P2P_17_MEMTOP_16MB                        0x00000000 /* RWI-V */
#define CR_APC_P2P_17_MEMTOP_32MB                        0x00000001 /* RW--V */
#define CR_APC_P2P_17_MEMTOP_48MB                        0x00000002 /* RW--V */
#define CR_APC_P2P_17_MEMTOP_64MB                        0x00000003 /* RW--V */
#define CR_APC_P2P_17_MEMTOP_128MB                       0x00000007 /* RW--V */
#define CR_APC_P2P_17_MEMTOP_256MB                       0x0000000F /* RW--V */
#define CR_APC_P2P_17_MEMTOP_512MB                       0x0000001F /* RW--V */
#define CR_APC_P2P_17_MEMTOP_1GB                         0x0000003F /* RW--V */
#define CR_APC_P2P_17_MEMTOP_2GB                         0x0000007F /* RW--V */
#define CR_APC_P2P_17_MEMTOP__PROD_C                     0x00000000 /* RW--V */
#define CR_APC_P2P_19                                    0x8000F04C /* RW-4R */
#define CR_APC_P2P_19_NV11                                      0:0 /* RWIVF */
#define CR_APC_P2P_19_NV11_DISABLED                      0x00000000 /* RWI-V */
#define CR_APC_P2P_19_NV11_ENABLED                       0x00000001 /* RW--V */
#define CR_APC_P2P_20                                    0x8000F050 /* RW-4R */
#define CR_APC_P2P_20_AGPBASE                                 31:12 /* RWIVF */
#define CR_APC_P2P_20_AGPBASE_0                          0x00000000 /* RWI-V */
#define CR_APC_P2P_20_AGPBASE__PROD_C                    0x00000000 /* RW--V */
#define CR_APC_P2P_21                                    0x8000F054 /* RW-4R */
#define CR_APC_P2P_21_AGPLIMIT                                31:12 /* RWIVF */
#define CR_APC_P2P_21_AGPLIMIT_0                         0x00080000 /* RWI-V */
#define CR_APC_P2P_21_AGPLIMIT__PROD_C                   0x00080000 /* RW--V */
/* dev_cr_pmctl.ref */
#define CR_PMCTL                          0x800003AC:0x80000340 /* RW--D */
#define CR_PMCTL_CONTROL                             0x80000340 /* RW-4R */
#define CR_PMCTL_CONTROL_CLOCK				    1:0 /* RWIVF */
#define CR_PMCTL_CONTROL_CLOCK_MCLK		     0x00000000 /* RWI-V */
#define CR_PMCTL_CONTROL_CLOCK_CPUCLK		     0x00000001 /* RW--V */
#define CR_PMCTL_CONTROL_CLOCK_LDTCLK		     0x00000002 /* RW--V */
#define CR_PMCTL_CONTROL_CLOCK_AGPCLK		     0x00000003 /* RW--V */
#define CR_PMCTL_CONTROL_ADDTOEVENT                         2:2 /* RWIVF */
#define CR_PMCTL_CONTROL_ADDTOEVENT_INCR             0x00000000 /* RWI-V */
#define CR_PMCTL_CONTROL_ADDTOEVENT_ADDSEL	     0x00000001 /* RW--V */
#define CR_PMCTL_CONTROL_DRIVE_OUT                          4:4 /* RWIVF */
#define CR_PMCTL_CONTROL_DRIVE_OUT_NORMAL            0x00000000 /* RWI-V */
#define CR_PMCTL_CONTROL_DRIVE_OUT_OBSERVE           0x00000001 /* RW--V */
#define CR_PMCTL_CONTROL_DRIVE_SEL                          6:5 /* RWXVF */
#define CR_PMCTL_CONTROL_CLEAR_EVENT_ONCE                   7:7 /* RWIVF */
#define CR_PMCTL_CONTROL_CLEAR_EVENT_ONCE_DISABLE    0x00000000 /* RWI-V */
#define CR_PMCTL_CONTROL_CLEAR_EVENT_ONCE_ENABLE     0x00000001 /* RW--V */
#define CR_PMCTL_CONTROL_EVENTADD_SEL			  15:12 /* RWXVF */
#define CR_PMCTL_CONTROL_BIN0_ENABLE			  16:16 /* RWIVF */
#define CR_PMCTL_CONTROL_BIN0_ENABLE_FALSE	     0x00000000 /* RWI-V */
#define CR_PMCTL_CONTROL_BIN0_ENABLE_TRUE	     0x00000001 /* RW--V */
#define CR_PMCTL_CONTROL_BIN1_ENABLE			  17:17 /* RWIVF */
#define CR_PMCTL_CONTROL_BIN1_ENABLE_FALSE	     0x00000000 /* RWI-V */
#define CR_PMCTL_CONTROL_BIN1_ENABLE_TRUE	     0x00000001 /* RW--V */
#define CR_PMCTL_CONTROL_BIN2_ENABLE			  18:18 /* RWIVF */
#define CR_PMCTL_CONTROL_BIN2_ENABLE_FALSE	     0x00000000 /* RWI-V */
#define CR_PMCTL_CONTROL_BIN2_ENABLE_TRUE	     0x00000001 /* RW--V */
#define CR_PMCTL_CONTROL_BIN3_ENABLE			  19:19 /* RWIVF */
#define CR_PMCTL_CONTROL_BIN3_ENABLE_FALSE	     0x00000000 /* RWI-V */
#define CR_PMCTL_CONTROL_BIN3_ENABLE_TRUE	     0x00000001 /* RW--V */
#define CR_PMCTL_CONTROL_BIN4_ENABLE			  20:20 /* RWIVF */
#define CR_PMCTL_CONTROL_BIN4_ENABLE_FALSE	     0x00000000 /* RWI-V */
#define CR_PMCTL_CONTROL_BIN4_ENABLE_TRUE	     0x00000001 /* RW--V */
#define CR_PMCTL_CONTROL_BIN5_ENABLE			  21:21 /* RWIVF */
#define CR_PMCTL_CONTROL_BIN5_ENABLE_FALSE	     0x00000000 /* RWI-V */
#define CR_PMCTL_CONTROL_BIN5_ENABLE_TRUE	     0x00000001 /* RW--V */
#define CR_PMCTL_CONTROL_BIN6_ENABLE			  22:22 /* RWIVF */
#define CR_PMCTL_CONTROL_BIN6_ENABLE_FALSE	     0x00000000 /* RWI-V */
#define CR_PMCTL_CONTROL_BIN6_ENABLE_TRUE	     0x00000001 /* RW--V */
#define CR_PMCTL_CONTROL_BIN7_ENABLE			  23:23 /* RWIVF */
#define CR_PMCTL_CONTROL_BIN7_ENABLE_FALSE	     0x00000000 /* RWI-V */
#define CR_PMCTL_CONTROL_BIN7_ENABLE_TRUE	     0x00000001 /* RW--V */
#define CR_PMCTL_CONTROL_BIN10_ENABLE			  24:24 /* RWIVF */
#define CR_PMCTL_CONTROL_BIN10_ENABLE_FALSE	     0x00000000 /* RWI-V */
#define CR_PMCTL_CONTROL_BIN10_ENABLE_TRUE	     0x00000001 /* RW--V */
#define CR_PMCTL_CONTROL_BIN32_ENABLE			  25:25 /* RWIVF */
#define CR_PMCTL_CONTROL_BIN32_ENABLE_FALSE	     0x00000000 /* RWI-V */
#define CR_PMCTL_CONTROL_BIN32_ENABLE_TRUE	     0x00000001 /* RW--V */
#define CR_PMCTL_CONTROL_BIN54_ENABLE			  26:26 /* RWIVF */
#define CR_PMCTL_CONTROL_BIN54_ENABLE_FALSE	     0x00000000 /* RWI-V */
#define CR_PMCTL_CONTROL_BIN54_ENABLE_TRUE	     0x00000001 /* RW--V */
#define CR_PMCTL_CONTROL_BIN76_ENABLE			  27:27 /* RWIVF */
#define CR_PMCTL_CONTROL_BIN76_ENABLE_FALSE	     0x00000000 /* RWI-V */
#define CR_PMCTL_CONTROL_BIN76_ENABLE_TRUE	     0x00000001 /* RW--V */
#define CR_PMCTL_TRIG0_SEL                           0x80000350 /* RW-4R */
#define CR_PMCTL_TRIG0_SEL_SEL0                             5:0 /* RWXUF */
#define CR_PMCTL_TRIG0_SEL_SEL1                            13:8 /* RWXUF */
#define CR_PMCTL_TRIG0_SEL_SEL2                           21:16 /* RWXUF */
#define CR_PMCTL_TRIG0_SEL_SEL3                           29:24 /* RWXUF */
#define CR_PMCTL_TRIG0_OP                            0x80000354 /* RW-4R */
#define CR_PMCTL_TRIG0_OP_FUNC                             15:0 /* RWXUF */
#define CR_PMCTL_TRIG0_OP_DSEL0                           16:16 /* RWXUF */
#define CR_PMCTL_TRIG0_OP_DSEL1                           17:17 /* RWXUF */
#define CR_PMCTL_TRIG0_OP_LATCH_ENABLE			  19:19 /* RWXUF */
#define CR_PMCTL_TRIG0_OP_LATCH_SEL			  23:20 /* RWXUF */
#define CR_PMCTL_TRIG1_SEL                           0x80000358 /* RW-4R */
#define CR_PMCTL_TRIG1_SEL_SEL0                             5:0 /* RWXUF */
#define CR_PMCTL_TRIG1_SEL_SEL1                            13:8 /* RWXUF */
#define CR_PMCTL_TRIG1_SEL_SEL2                           21:16 /* RWXUF */
#define CR_PMCTL_TRIG1_SEL_SEL3                           29:24 /* RWXUF */
#define CR_PMCTL_TRIG1_OP                            0x8000035C /* RW-4R */
#define CR_PMCTL_TRIG1_OP_FUNC                             15:0 /* RWXUF */
#define CR_PMCTL_TRIG1_OP_DSEL0                           16:16 /* RWXUF */
#define CR_PMCTL_TRIG1_OP_DSEL1                           17:17 /* RWXUF */
#define CR_PMCTL_TRIG1_OP_LATCH_ENABLE			  19:19 /* RWXUF */
#define CR_PMCTL_TRIG1_OP_LATCH_SEL			  23:20 /* RWXUF */
#define CR_PMCTL_TRIG1_OP_CMP_SEL			  27:24 /* RWXUF */
#define CR_PMCTL_TRIG1_OP_CMP_FUNCTION			  30:28 /* RWXUF */
#define CR_PMCTL_TRIG1_OP_CMP_FUNCTION_ALWAYS	     0x00000000 /* RW--V */
#define CR_PMCTL_TRIG1_OP_CMP_FUNCTION_LT	     0x00000001 /* RW--V */
#define CR_PMCTL_TRIG1_OP_CMP_FUNCTION_LE	     0x00000002 /* RW--V */
#define CR_PMCTL_TRIG1_OP_CMP_FUNCTION_EQ	     0x00000003 /* RW--V */
#define CR_PMCTL_TRIG1_OP_CMP_FUNCTION_NE	     0x00000004 /* RW--V */
#define CR_PMCTL_TRIG1_OP_CMP_FUNCTION_GE	     0x00000005 /* RW--V */
#define CR_PMCTL_TRIG1_OP_CMP_FUNCTION_GT	     0x00000006 /* RW--V */
#define CR_PMCTL_EVENT_SEL                           0x80000360 /* RW-4R */
#define CR_PMCTL_EVENT_SEL_SEL0                             5:0 /* RWXUF */
#define CR_PMCTL_EVENT_SEL_SEL1                            13:8 /* RWXUF */
#define CR_PMCTL_EVENT_SEL_SEL2                           21:16 /* RWXUF */
#define CR_PMCTL_EVENT_SEL_SEL3                           29:24 /* RWXUF */
#define CR_PMCTL_EVENT_OP                            0x80000364 /* RW-4R */
#define CR_PMCTL_EVENT_OP_FUNC                             15:0 /* RWXUF */
#define CR_PMCTL_EVENT_OP_DSEL0                           16:16 /* RWXUF */
#define CR_PMCTL_EVENT_OP_DSEL1                           17:17 /* RWXUF */
#define CR_PMCTL_EVENT_OP_LATCH_ENABLE			  19:19 /* RWXUF */
#define CR_PMCTL_EVENT_OP_LATCH_SEL			  23:20 /* RWXUF */
#define CR_PMCTL_EVENT_OP_CMP_SEL			  27:24 /* RWXUF */
#define CR_PMCTL_EVENT_OP_CMP_FUNCTION			  30:28 /* RWXUF */
#define CR_PMCTL_EVENT_OP_CMP_FUNCTION_ALWAYS	     0x00000000 /* RW--V */
#define CR_PMCTL_EVENT_OP_CMP_FUNCTION_LT	     0x00000001 /* RW--V */
#define CR_PMCTL_EVENT_OP_CMP_FUNCTION_LE	     0x00000002 /* RW--V */
#define CR_PMCTL_EVENT_OP_CMP_FUNCTION_EQ	     0x00000003 /* RW--V */
#define CR_PMCTL_EVENT_OP_CMP_FUNCTION_NE	     0x00000004 /* RW--V */
#define CR_PMCTL_EVENT_OP_CMP_FUNCTION_GE	     0x00000005 /* RW--V */
#define CR_PMCTL_EVENT_OP_CMP_FUNCTION_GT	     0x00000006 /* RW--V */
#define CR_PMCTL_SAMPLE_SEL                          0x80000368 /* RW-4R */
#define CR_PMCTL_SAMPLE_SEL_SEL0                            5:0 /* RWXUF */
#define CR_PMCTL_SAMPLE_SEL_SEL1                           13:8 /* RWXUF */
#define CR_PMCTL_SAMPLE_SEL_SEL2                          21:16 /* RWXUF */
#define CR_PMCTL_SAMPLE_SEL_SEL3                          29:24 /* RWXUF */
#define CR_PMCTL_SAMPLE_OP                           0x8000036C /* RW-4R */
#define CR_PMCTL_SAMPLE_OP_FUNC                            15:0 /* RWXUF */
#define CR_PMCTL_SAMPLE_OP_DSEL0                          16:16 /* RWXUF */
#define CR_PMCTL_SAMPLE_OP_DSEL1                          17:17 /* RWXUF */
#define CR_PMCTL_SAMPLE_OP_LATCH_ENABLE			  19:19 /* RWXUF */
#define CR_PMCTL_SAMPLE_OP_LATCH_SEL			  23:20 /* RWXUF */
#define CR_PMCTL_SAMPLE_OP_CMP_SEL			  27:24 /* RWXUF */
#define CR_PMCTL_SAMPLE_OP_CMP_FUNCTION			  30:28 /* RWXUF */
#define CR_PMCTL_SAMPLE_OP_CMP_FUNCTION_ALWAYS     0x00000000 /* RW--V */
#define CR_PMCTL_SAMPLE_OP_CMP_FUNCTION_LT	     0x00000001 /* RW--V */
#define CR_PMCTL_SAMPLE_OP_CMP_FUNCTION_LE	     0x00000002 /* RW--V */
#define CR_PMCTL_SAMPLE_OP_CMP_FUNCTION_EQ	     0x00000003 /* RW--V */
#define CR_PMCTL_SAMPLE_OP_CMP_FUNCTION_NE	     0x00000004 /* RW--V */
#define CR_PMCTL_SAMPLE_OP_CMP_FUNCTION_GE	     0x00000005 /* RW--V */
#define CR_PMCTL_SAMPLE_OP_CMP_FUNCTION_GT	     0x00000006 /* RW--V */
#define CR_PMCTL_SETFLAG_SEL                         0x80000370 /* RW-4R */
#define CR_PMCTL_SETFLAG_SEL_SEL0                           5:0 /* RWXUF */
#define CR_PMCTL_SETFLAG_SEL_SEL1                          13:8 /* RWXUF */
#define CR_PMCTL_SETFLAG_SEL_SEL2                         21:16 /* RWXUF */
#define CR_PMCTL_SETFLAG_SEL_SEL3                         29:24 /* RWXUF */
#define CR_PMCTL_SETFLAG_OP                          0x80000374 /* RW-4R */
#define CR_PMCTL_SETFLAG_OP_FUNC                           15:0 /* RWXUF */
#define CR_PMCTL_SETFLAG_OP_DSEL0                         16:16 /* RWXUF */
#define CR_PMCTL_SETFLAG_OP_DSEL1                         17:17 /* RWXUF */
#define CR_PMCTL_CLRFLAG_SEL                         0x80000378 /* RW-4R */
#define CR_PMCTL_CLRFLAG_SEL_SEL0                           5:0 /* RWXUF */
#define CR_PMCTL_CLRFLAG_SEL_SEL1                          13:8 /* RWXUF */
#define CR_PMCTL_CLRFLAG_SEL_SEL2                         21:16 /* RWXUF */
#define CR_PMCTL_CLRFLAG_SEL_SEL3                         29:24 /* RWXUF */
#define CR_PMCTL_CLRFLAG_OP                          0x8000037C /* RW-4R */
#define CR_PMCTL_CLRFLAG_OP_FUNC                           15:0 /* RWXUF */
#define CR_PMCTL_CLRFLAG_OP_DSEL0                         16:16 /* RWXUF */
#define CR_PMCTL_CLRFLAG_OP_DSEL1                         17:17 /* RWXUF */
#define CR_PMCTL_TRIGGERCNT                          0x80000380 /* RW-4R */
#define CR_PMCTL_TRIGGERCNT_VAL                            31:0 /* RWIUF */
#define CR_PMCTL_TRIGGERCNT_VAL_ZERO                 0x00000000 /* RWI-V */
#define CR_PMCTL_SAMPLECNT                           0x80000384 /* RW-4R */
#define CR_PMCTL_SAMPLECNT_VAL                             31:0 /* RWIUF */
#define CR_PMCTL_SAMPLECNT_VAL_ZERO                  0x00000000 /* RWI-V */
#define CR_PMCTL_THRESHOLD_0                         0x80000388 /* RW-4R */
#define CR_PMCTL_THRESHOLD_0_VAL                           31:0 /* RWIUF */
#define CR_PMCTL_THRESHOLD_0_VAL_ZERO                0x00000000 /* RWI-V */
#define CR_PMCTL_THRESHOLD_1                         0x8000038C /* RW-4R */
#define CR_PMCTL_THRESHOLD_1_VAL                            7:0 /* RWIUF */
#define CR_PMCTL_THRESHOLD_1_VAL_ZERO                0x00000000 /* RWI-V */
#define CR_PMCTL_BIN_THRESHOLD(i)            (0x80000390+(i)*4) /* RW-4A */
#define CR_PMCTL_BIN_THRESHOLD__SIZE_1			      2 /*       */
#define CR_PMCTL_BIN_THRESHOLD_BIN0                         7:0 /* RWIUF */
#define CR_PMCTL_BIN_THRESHOLD_BIN0_ZERO             0x00000000 /* RWI-V */
#define CR_PMCTL_BIN_THRESHOLD_BIN1            	           15:8 /* RWIUF */
#define CR_PMCTL_BIN_THRESHOLD_BIN1_ZERO             0x00000000 /* RWI-V */
#define CR_PMCTL_BIN_THRESHOLD_BIN2                       23:16 /* RWIUF */
#define CR_PMCTL_BIN_THRESHOLD_BIN2_ZERO             0x00000000 /* RWI-V */
#define CR_PMCTL_BIN_THRESHOLD_BIN3                       31:24 /* RWIUF */
#define CR_PMCTL_BIN_THRESHOLD_BIN3_ZERO             0x00000000 /* RWI-V */
/* dev_cr_pmcntr.ref */
#define CR_PMCNTR                         0x800003FC:0x800003B0 /* RW--D */
#define CR_PMCNTR_CONTROL			      0x800003B0 /* R--4R */
#define CR_PMCNTR_CONTROL_STATE                              1:0 /* R-IVF */
#define CR_PMCNTR_CONTROL_STATE_IDLE                  0x00000000 /* R-I-V */
#define CR_PMCNTR_CONTROL_STATE_WAIT_TRIG0            0x00000001 /* R---V */
#define CR_PMCNTR_CONTROL_STATE_WAIT_TRIG1            0x00000002 /* R---V */
#define CR_PMCNTR_CONTROL_STATE_CAPTURE               0x00000003 /* R---V */
#define CR_PMCNTR_WATCH(i)                   (0x800003B8+(i)*4) /* R--4A */
#define CR_PMCNTR_WATCH__SIZE_1				      2 /*       */
#define CR_PMCNTR_CYCLECNT_0                         0x800003C8 /* R--4R */
#define CR_PMCNTR_CYCLECNT_0_VAL                           31:0 /* R--UF */
#define CR_PMCNTR_CYCLECNT_1                         0x800003CC /* R--4R */
#define CR_PMCNTR_CYCLECNT_1_VAL                            7:0 /* R--UF */
#define CR_PMCNTR_EVENTCNT_0                         0x800003D0 /* R--4R */
#define CR_PMCNTR_EVENTCNT_0_VAL                           31:0 /* R--UF */
#define CR_PMCNTR_EVENTCNT_1                         0x800003D4 /* R--4R */
#define CR_PMCNTR_EVENTCNT_1_VAL                            7:0 /* R--UF */
#define CR_PMCNTR_THRESHCNT_0                        0x800003D8 /* R--4R */
#define CR_PMCNTR_THRESHCNT_0_VAL                          31:0 /* R--UF */
#define CR_PMCNTR_THRESHCNT_1                        0x800003DC /* R--4R */
#define CR_PMCNTR_THRESHCNT_1_VAL                           7:0 /* R--UF */
#define CR_PMCNTR_BIN(i)                     (0x800003E0+(i)*4) /* R--4A */
#define CR_PMCNTR_BIN__SIZE_1				      8 /*       */
#define CR_PMCNTR_BIN_COUNT		                   31:0 /* R-XUF */
#endif /* _CR_REF_H_ */
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Microsoft Xbox (1.00.4400) [April 2002] [src]\private\ntos\video\nv20\drivers\resman\kernel\inc\nv4\nv4_ref.h ===
//
// (C) Copyright NVIDIA Corporation Inc., 1995,1996. All rights reserved.
//
/***************************************************************************\
*                                                                           *
*               NV4 Hardware Reference Manual extracted defines.            *
*                                                                           *
\***************************************************************************/
#ifndef _NV4_REF_H_
#define _NV4_REF_H_

//
// These registers are to be accessed only by nv4-specific code.
//

/* dev_bus.ref */
#define NV_MSPACE                             0x07FFFFFF:0x00000000 /* RW--D */
/* dev_bus.ref */
#define NV_RSPACE                             0x00FFFFFF:0x00000000 /* RW--D */
/* dev_bus.ref */
#define NV_PBUS_DEBUG_0                                  0x00001080 /* RW-4R */
#define NV_PBUS_DEBUG_0_FBIO_SCLK_DELAY                         3:0 /* RWIUF */
#define NV_PBUS_DEBUG_0_FBIO_SCLK_DELAY_8                0x00000008 /* RWI-V */
#define NV_PBUS_DEBUG_0_FBIO_SCLK_PC                            4:4 /* RWIVF */
#define NV_PBUS_DEBUG_0_FBIO_SCLK_PC_NORMAL              0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_0_FBIO_SCLK_PC_OVERRIDE            0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_0_FBIO_FBCLK_DELAY                       11:8 /* RWIUF */
#define NV_PBUS_DEBUG_0_FBIO_FBCLK_DELAY_4               0x00000004 /* RWI-V */
#define NV_PBUS_DEBUG_0_FBIO_FBCLK_DELAY_8               0x00000008 /* RW--V */
#define NV_PBUS_DEBUG_0_FBIO_FBCLK_PC                         12:12 /* RWIVF */
#define NV_PBUS_DEBUG_0_FBIO_FBCLK_PC_NORMAL             0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_0_FBIO_FBCLK_PC_OVERRIDE           0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_0_FBIO_ACLK_DELAY                       19:16 /* RWIUF */
#define NV_PBUS_DEBUG_0_FBIO_ACLK_DELAY_8                0x00000008 /* RW--V */
#define NV_PBUS_DEBUG_0_FBIO_ACLK_DELAY_10               0x0000000A /* RWI-V */
#define NV_PBUS_DEBUG_0_FBIO_ACLK_PC                          20:20 /* RWIVF */
#define NV_PBUS_DEBUG_0_FBIO_ACLK_PC_NORMAL              0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_0_FBIO_ACLK_PC_OVERRIDE            0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_0_FBIO_RCLK_DELAY                       27:24 /* RWIUF */
#define NV_PBUS_DEBUG_0_FBIO_RCLK_DELAY_8                0x00000008 /* RW--V */
#define NV_PBUS_DEBUG_0_FBIO_RCLK_DELAY_14               0x0000000E /* RWI-V */
#define NV_PBUS_DEBUG_0_FBIO_RCLK_PC                          28:28 /* RWIVF */
#define NV_PBUS_DEBUG_0_FBIO_RCLK_PC_NORMAL              0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_0_FBIO_RCLK_PC_OVERRIDE            0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_1                                  0x00001084 /* RW-4R */
#define NV_PBUS_DEBUG_1_PCIM_THROTTLE                           0:0 /* RWIVF */
#define NV_PBUS_DEBUG_1_PCIM_THROTTLE_DISABLED           0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_1_PCIM_THROTTLE_ENABLED            0x00000001 /* RWI-V */
#define NV_PBUS_DEBUG_1_PCIM_CMD                                1:1 /* RWIVF */
#define NV_PBUS_DEBUG_1_PCIM_CMD_SIZE_BASED              0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_1_PCIM_CMD_MRL_ONLY                0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_1_HASH_DECODE                             2:2 /* RWIVF */
#define NV_PBUS_DEBUG_1_HASH_DECODE_1FF                  0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_1_HASH_DECODE_2FF                  0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_1_AGPM_CMD                                4:3 /* RWIVF */
#define NV_PBUS_DEBUG_1_AGPM_CMD_HP_ON_1ST               0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_1_AGPM_CMD_LP_ONLY                 0x00000001 /* RWI-V */
#define NV_PBUS_DEBUG_1_AGPM_CMD_HP_ONLY                 0x00000002 /* RW--V */
/* NV_PBUS_DEBUG_1_PCI_WRITE is shared (see nv_ref.h) */
#define NV_PBUS_DEBUG_1_PCIS_2_1                                6:6 /* RWIVF */
#define NV_PBUS_DEBUG_1_PCIS_2_1_DISABLED                0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_1_PCIS_2_1_ENABLED                 0x00000001 /* RWI-V */
#define NV_PBUS_DEBUG_1_PCIS_RETRY                              7:7 /* RWIVF */
#define NV_PBUS_DEBUG_1_PCIS_RETRY_DISABLED              0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_1_PCIS_RETRY_ENABLED               0x00000001 /* RWI-V */
#define NV_PBUS_DEBUG_1_SPARE0                                  7:7 /* RWIVF */
#define NV_PBUS_DEBUG_1_SPARE0_ZERO                      0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_1_SPARE0_ONE                       0x00000001 /* RWI-V */
#define NV_PBUS_DEBUG_1_PCIS_RD_BURST                           8:8 /* RWIVF */
#define NV_PBUS_DEBUG_1_PCIS_RD_BURST_DISABLED           0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_1_PCIS_RD_BURST_ENABLED            0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_1_PCIS_WR_BURST                           9:9 /* RWIVF */
#define NV_PBUS_DEBUG_1_PCIS_WR_BURST_DISABLED           0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_1_PCIS_WR_BURST_ENABLED            0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_1_PCIS_EARLY_RTY                        10:10 /* RWIVF */
#define NV_PBUS_DEBUG_1_PCIS_EARLY_RTY_DISABLED          0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_1_PCIS_EARLY_RTY_ENABLED           0x00000001 /* RWI-V */
#define NV_PBUS_DEBUG_1_PCIS_CPUQ                             12:12 /* RWIVF */
#define NV_PBUS_DEBUG_1_PCIS_CPUQ_DISABLED               0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_1_PCIS_CPUQ_ENABLED                0x00000001 /* RWI-V */
#define NV_PBUS_DEBUG_1_DPSH_DECODE                           13:13 /* RWIVF */
#define NV_PBUS_DEBUG_1_DPSH_DECODE_NV4                  0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_1_DPSH_DECODE_NV3                  0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_1_SPARE1                                14:14 /* RWIVF */
#define NV_PBUS_DEBUG_1_SPARE1_ZERO                      0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_1_SPARE1_ONE                       0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_1_FBI_DIFFERENTIAL                      14:14 /* RWIVF */
#define NV_PBUS_DEBUG_1_FBI_DIFFERENTIAL_ENABLED         0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_1_FBI_DIFFERENTIAL_DISABLED        0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_1_SPARE2                                15:15 /* RWIVF */
#define NV_PBUS_DEBUG_1_SPARE2_ZERO                      0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_1_SPARE2_ONE                       0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_1_AGPFW_DWOD                            15:15 /* RWIVF */
#define NV_PBUS_DEBUG_1_AGPFW_DWOD_DISABLED              0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_1_AGPFW_DWOD_ENABLED               0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_1_SPARE3                                16:16 /* RWIVF */
#define NV_PBUS_DEBUG_1_SPARE3_ZERO                      0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_1_SPARE3_ONE                       0x00000001 /* RW--V */
/* NV_PBUS_DEBUG_1_OPENGL is shared (see nv_ref.h) */
#define NV_PBUS_DEBUG_1_SPARE4                                17:17 /* RWIVF */
#define NV_PBUS_DEBUG_1_SPARE4_ZERO                      0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_1_SPARE4_ONE                       0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_1_SPARE5                                18:18 /* RWIVF */
#define NV_PBUS_DEBUG_1_SPARE5_ZERO                      0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_1_SPARE5_ONE                       0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_1_SPARE6                                19:19 /* RWIVF */
#define NV_PBUS_DEBUG_1_SPARE6_ZERO                      0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_1_SPARE6_ONE                       0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_1_SPARE7                                20:20 /* RWIVF */
#define NV_PBUS_DEBUG_1_SPARE7_ZERO                      0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_1_SPARE7_ONE                       0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_1_SPARE8                                21:21 /* RWIVF */
#define NV_PBUS_DEBUG_1_SPARE8_ZERO                      0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_1_SPARE8_ONE                       0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_1_SPARE9                                22:22 /* RWIVF */
#define NV_PBUS_DEBUG_1_SPARE9_ZERO                      0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_1_SPARE9_ONE                       0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_1_SPARE10                               23:23 /* RWIVF */
#define NV_PBUS_DEBUG_1_SPARE10_ZERO                     0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_1_SPARE10_ONE                      0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_2                                  0x00001088 /* RW-4R */
#define NV_PBUS_DEBUG_2_AGP_DIFFERENTIAL                        0:0 /* RWIVF */
#define NV_PBUS_DEBUG_2_AGP_DIFFERENTIAL_DISABLED        0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_2_AGP_DIFFERENTIAL_ENABLED         0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_2_AGP_VREF                                0:0 /* RWIVF */
#define NV_PBUS_DEBUG_2_AGP_VREF_DISABLED                0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_2_AGP_VREF_ENABLED                 0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_2_AGP_SB_STB_DELAY                        9:4 /* RWIUF */
#define NV_PBUS_DEBUG_2_AGP_SB_STB_DELAY_34              0x00000022 /* RWI-V */
#define NV_PBUS_DEBUG_2_AGP_SB_STB_PC                         12:12 /* RWIVF */
#define NV_PBUS_DEBUG_2_AGP_SB_STB_PC_NORMAL             0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_2_AGP_SB_STB_PC_OVERRIDE           0x00000001 /* RW0-V */
#define NV_PBUS_DEBUG_2_AGP_AD_STB                            12:12 /* RWIVF */
#define NV_PBUS_DEBUG_2_AGP_AD_STB_NONDIFFERENTIAL       0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_2_AGP_AD_STB_DIFFERENTIAL          0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_3                                  0x0000108C /* RW-4R */
#define NV_PBUS_DEBUG_3_AGP_MAX_SIZE                            1:0 /* RWIVF */
#define NV_PBUS_DEBUG_3_AGP_MAX_SIZE_UNLIMITED           0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_3_AGP_MAX_SIZE_32_BYTES            0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_3_AGP_MAX_SIZE_64_BYTES            0x00000002 /* RW--V */
#define NV_PBUS_DEBUG_3_AGP_4X_NVCLK                            7:4 /* RWIVF */
#define NV_PBUS_DEBUG_3_AGP_4X_NVCLK_ABOVE_66MHZ         0x00000005 /* RW--V */
#define NV_PBUS_DEBUG_3_AGP_4X_NVCLK_ABOVE_73MHZ         0x00000006 /* RW--V */
#define NV_PBUS_DEBUG_3_AGP_4X_NVCLK_ABOVE_80MHZ         0x00000007 /* RW--V */
#define NV_PBUS_DEBUG_3_AGP_4X_NVCLK_ABOVE_87MHZ         0x00000008 /* RW--V */
#define NV_PBUS_DEBUG_3_AGP_4X_NVCLK_ABOVE_94MHZ         0x00000009 /* RW--V */
#define NV_PBUS_DEBUG_3_AGP_4X_NVCLK_ABOVE_100MHZ        0x0000000A /* RWI-V */
#define NV_PBUS_DEBUG_3_AGP_4X_NVCLK_ABOVE_106MHZ        0x0000000B /* RW--V */
#define NV_PBUS_DEBUG_3_AGP_4X_NVCLK_ABOVE_113MHZ        0x0000000C /* RW--V */
#define NV_PBUS_DEBUG_3_AGP_4X_NVCLK_ABOVE_120MHZ        0x0000000D /* RW--V */
#define NV_PBUS_DEBUG_3_AGP_4X_NVCLK_ABOVE_126MHZ        0x0000000E /* RW--V */
#define NV_PBUS_DEBUG_3_AGP_4X_NVCLK_ABOVE_133MHZ        0x0000000F /* RW--V */
#define NV_PBUS_DEBUG_CTL                                0x00001090 /* RW-4R */
#define NV_PBUS_DEBUG_CTL_MODE                                  0:0 /* RWIVF */
#define NV_PBUS_DEBUG_CTL_MODE_DISABLED                  0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTL_MODE_ENABLED                   0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_CTL_READ_SELECT                           4:4 /* RWIVF */
#define NV_PBUS_DEBUG_CTL_READ_SELECT_0                  0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTL_READ_SELECT_1                  0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_READ                               0x00001094 /* R--4R */
#define NV_PBUS_DEBUG_READ_DATA                                31:0 /* R-XUF */
#define NV_PBUS_DEBUG_HOST                               0x0000109C /* RW-4R */
#define NV_PBUS_DEBUG_HOST_SEL                                  2:0 /* RWXUF */
#define NV_PBUS_DEBUG_SEL_0                              0x000010A0 /* RW-4R */
#define NV_PBUS_DEBUG_SEL_0_X                                   2:0 /* RWXUF */
#define NV_PBUS_DEBUG_SEL_1                              0x000010A4 /* RW-4R */
#define NV_PBUS_DEBUG_SEL_1_X                                   2:0 /* RWXUF */
#define NV_PBUS_DEBUG_SEL_2                              0x000010A8 /* RW-4R */
#define NV_PBUS_DEBUG_SEL_2_X                                   2:0 /* RWXUF */
#define NV_PBUS_DEBUG_SEL_3                              0x000010AC /* RW-4R */
#define NV_PBUS_DEBUG_SEL_3_X                                   2:0 /* RWXUF */
#define NV_PBUS_DEBUG_CTRIM_0                            0x000010B0 /* RW-4R */
#define NV_PBUS_DEBUG_CTRIM_0_NV_NE_DELAY                       3:0 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_0_NV_NE_DELAY_8              0x00000003 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_0_NV_SE_DELAY                       7:4 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_0_NV_SE_DELAY_8              0x00000002 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_0_NV_NW_DELAY                      11:8 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_0_NV_NW_DELAY_8              0x00000002 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_0_NV_SW_DELAY                     15:12 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_0_NV_SW_DELAY_8              0x00000005 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_0_M_NW_DELAY                      19:16 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_0_M_NW_DELAY_8               0x00000001 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_0_M_SW_DELAY                      23:20 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_0_M_SW_DELAY_8               0x00000001 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_0_U_NW_DELAY                      27:24 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_0_U_NW_DELAY_8               0x00000002 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_0_U_SW_DELAY                      31:28 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_0_U_SW_DELAY_8               0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_0_NV_NE_TRIM                        3:0 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_0_NV_NE_TRIM_8               0x00000003 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_0_NV_NE_TRIM_INIT            0x00000003 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_0_NV_SE_TRIM                        7:4 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_0_NV_SE_TRIM_8               0x00000002 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_0_NV_SE_TRIM_INIT            0x00000002 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_0_NV_NW_TRIM                       11:8 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_0_NV_NW_TRIM_8               0x00000002 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_0_NV_NW_TRIM_INIT            0x00000002 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_0_NV_SW_TRIM                      15:12 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_0_NV_SW_TRIM_8               0x00000005 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_0_NV_SW_TRIM_INIT            0x00000005 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_0_M_NW_TRIM                       19:16 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_0_M_NW_TRIM_8                0x00000001 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_0_M_NW_TRIM_INIT             0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_0_M_SW_TRIM                       23:20 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_0_M_SW_TRIM_8                0x00000001 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_0_M_SW_TRIM_INIT             0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_0_NV_NC_TRIM                      27:24 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_0_NV_NC_TRIM_8               0x00000002 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_0_NV_NC_TRIM_INIT            0x00000003 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_0_NV_SC_TRIM                      31:28 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_0_NV_SC_TRIM_8               0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_0_NV_SC_TRIM_INIT            0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_1                            0x000010B4 /* RW-4R */
#define NV_PBUS_DEBUG_CTRIM_1_C0_DELAY                          3:0 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_1_C0_DELAY_0                 0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_1_C1_DELAY                          7:4 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_1_C1_DELAY_0                 0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_1_C2_DELAY                         11:8 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_1_C2_DELAY_0                 0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_1_C3_DELAY                        15:12 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_1_C3_DELAY_0                 0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_1_C4_DELAY                        19:16 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_1_C4_DELAY_0                 0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_1_C5_DELAY                        23:20 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_1_C5_DELAY_0                 0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_1_C6_DELAY                        27:24 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_1_C6_DELAY_0                 0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_1_C7_DELAY                        31:28 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_1_C7_DELAY_0                 0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_1_M_SHAPE                           3:0 /* RWISF */
#define NV_PBUS_DEBUG_CTRIM_1_M_SHAPE_0                  0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_1_M_SHAPE_INIT               0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_1_N_SHAPE                           7:4 /* RWISF */
#define NV_PBUS_DEBUG_CTRIM_1_N_SHAPE_0                  0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_1_N_SHAPE_INIT               0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_1_P_SHAPE                          11:8 /* RWISF */
#define NV_PBUS_DEBUG_CTRIM_1_P_SHAPE_0                  0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_1_P_SHAPE_INIT               0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_1_SPARE0                          15:12 /* RWISF */
#define NV_PBUS_DEBUG_CTRIM_1_SPARE0_0                   0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_1_SPARE0_INIT                0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_1_FP_SHAPE                        19:16 /* RWISF */
#define NV_PBUS_DEBUG_CTRIM_1_FP_SHAPE_0                 0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_1_FP_SHAPE_INIT              0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_1_FPDP_SHAPE                      23:20 /* RWISF */
#define NV_PBUS_DEBUG_CTRIM_1_FPDP_SHAPE_0               0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_1_FPDP_SHAPE_INIT            0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_1_FPIO_SHAPE                      27:24 /* RWISF */
#define NV_PBUS_DEBUG_CTRIM_1_FPIO_SHAPE_0               0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_1_FPIO_SHAPE_INIT            0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_1_SPARE1                          31:28 /* RWISF */
#define NV_PBUS_DEBUG_CTRIM_1_SPARE1_0                   0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_1_SPARE1_INIT                0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_2                            0x000010B8 /* RW-4R */
#define NV_PBUS_DEBUG_CTRIM_2_C0_DELAY                          3:0 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_2_C0_DELAY_0                 0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_2_C1_DELAY                          7:4 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_2_C1_DELAY_0                 0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_2_C2_DELAY                         11:8 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_2_C2_DELAY_0                 0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_2_C3_DELAY                        15:12 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_2_C3_DELAY_0                 0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_2_C4_DELAY                        19:16 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_2_C4_DELAY_0                 0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_2_C5_DELAY                        23:20 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_2_C5_DELAY_0                 0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_2_C6_DELAY                        27:24 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_2_C6_DELAY_0                 0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_2_C7_DELAY                        31:28 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_2_C7_DELAY_0                 0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_2_M2I_0_SHAPE                       3:0 /* RWISF */
#define NV_PBUS_DEBUG_CTRIM_2_M2I_0_SHAPE_0              0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_2_M2I_0_SHAPE_INIT           0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_2_M2I_1_SHAPE                       7:4 /* RWISF */
#define NV_PBUS_DEBUG_CTRIM_2_M2I_1_SHAPE_0              0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_2_M2I_1_SHAPE_INIT           0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_2_M2I_2_SHAPE                      11:8 /* RWISF */
#define NV_PBUS_DEBUG_CTRIM_2_M2I_2_SHAPE_0              0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_2_M2I_2_SHAPE_INIT           0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_2_M2I_3_SHAPE                     15:12 /* RWISF */
#define NV_PBUS_DEBUG_CTRIM_2_M2I_3_SHAPE_0              0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_2_M2I_3_SHAPE_INIT           0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_2_M2O_0_SHAPE                     19:16 /* RWISF */
#define NV_PBUS_DEBUG_CTRIM_2_M2O_0_SHAPE_0              0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_2_M2O_0_SHAPE_INIT           0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_2_M2O_1_SHAPE                     23:20 /* RWISF */
#define NV_PBUS_DEBUG_CTRIM_2_M2O_1_SHAPE_0              0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_2_M2O_1_SHAPE_INIT           0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_2_M2O_2_SHAPE                     27:24 /* RWISF */
#define NV_PBUS_DEBUG_CTRIM_2_M2O_2_SHAPE_0              0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_2_M2O_2_SHAPE_INIT           0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_2_M2O_3_SHAPE                     31:28 /* RWISF */
#define NV_PBUS_DEBUG_CTRIM_2_M2O_3_SHAPE_0              0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_2_M2O_3_SHAPE_INIT           0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_3                            0x000010BC /* RW-4R */
#define NV_PBUS_DEBUG_CTRIM_3_C0_DELAY                          3:0 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_3_C0_DELAY_8                 0x00000003 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_3_C1_DELAY                          7:4 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_3_C1_DELAY_8                 0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_3_C2_DELAY                         11:8 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_3_C2_DELAY_8                 0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_3_C3_DELAY                        15:12 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_3_C3_DELAY_8                 0x00000003 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_3_C4_DELAY                        19:16 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_3_C4_DELAY_8                 0x00000002 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_3_C5_DELAY                        23:20 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_3_C5_DELAY_8                 0x00000002 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_3_C6_DELAY                        27:24 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_3_C6_DELAY_F                 0x0000000f /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_3_C7_DELAY                        31:28 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_3_C7_DELAY_F                 0x0000000f /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_3_CCIR_CLK_OUT_TRIM                 3:0 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_3_CCIR_CLK_OUT_TRIM_8        0x00000003 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_3_CCIR_CLK_OUT_TRIM_INIT     0x00000003 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_3_PCLK_TRIM                         7:4 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_3_PCLK_TRIM_8                0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_3_PCLK_TRIM_INIT             0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_3_VCLK_TRIM                        11:8 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_3_VCLK_TRIM_8                0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_3_VCLK_TRIM_INIT             0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_3_VSCLK_TRIM                      15:12 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_3_VSCLK_TRIM_8               0x00000003 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_3_VSCLK_TRIM_INIT            0x00000003 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_3_FPCLK_TRIM                      19:16 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_3_FPCLK_TRIM_8               0x00000002 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_3_FPCLK_TRIM_INIT            0x00000002 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_3_FPDPCLK_TRIM                    23:20 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_3_FPDPCLK_TRIM_8             0x00000002 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_3_FPDPCLK_TRIM_INIT          0x00000002 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_3_BYPASS_NVCLK                    24:24 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_3_BYPASS_NVCLK_ENABLE        0x00000001 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_3_BYPASS_NVCLK_EN_INIT       0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_3_BYPASS_MCLK                     25:25 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_3_BYPASS_MCLK_ENABLE         0x00000001 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_3_BYPASS_MCLK_EN_INIT        0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_3_BYPASS_CLK4X                    26:26 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_3_BYPASS_CLK4X_ENABLE        0x00000001 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_3_BYPASS_CLK4X_EN_INIT       0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_3_BYPASS_CCIR_O                   27:27 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_3_BYPASS_CCIR_O_ENABLE       0x00000001 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_3_BYPASS_CCIR_O_EN_INIT      0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_3_BYPASS_VIP_HCLK                 28:28 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_3_BYPASS_VIP_HCLK_ENABLE     0x00000001 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_3_BYPASS_VIP_HCLK_EN_INIT    0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_3_BYPASS_VCLK2                    29:29 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_3_BYPASS_VCLK2_ENABLE        0x00000001 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_3_BYPASS_VCLK2_EN_INIT       0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_3_BYPASS_PCLK                     30:30 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_3_BYPASS_PCLK_ENABLE         0x00000001 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_3_BYPASS_PCLK_EN_INIT        0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_3_BYPASS_CCIR2                    31:31 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_3_BYPASS_CCIR2_ENABLE        0x00000001 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_3_BYPASS_CCIR2_EN_INIT       0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_4                            0x000010C4 /* RW-4R */
#define NV_PBUS_DEBUG_CTRIM_4_C0_DELAY                          3:0 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_4_C0_DELAY_8                 0x00000002 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_4_C1_DELAY                          7:4 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_4_C1_DELAY_8                 0x00000002 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_4_C2_DELAY                         11:8 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_4_C2_DELAY_8                 0x00000003 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_4_C3_DELAY                        15:12 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_4_C3_DELAY_8                 0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_4_C4_DELAY                        19:16 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_4_C4_DELAY_8                 0x0000000C /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_4_C5_DELAY                        23:20 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_4_C5_DELAY_8                 0x0000000B /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_4_C6_DELAY                        27:24 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_4_C6_DELAY_8                 0x0000000D /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_4_C7_DELAY                        31:28 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_4_C7_DELAY_8                 0x0000000A /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_4_M2I_0_TRIM                        3:0 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_4_M2I_0_TRIM_8               0x00000002 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_4_M2I_0_TRIM_INIT            0x00000003 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_4_M2I_1_TRIM                        7:4 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_4_M2I_1_TRIM_8               0x00000002 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_4_M2I_1_TRIM_INIT            0x00000003 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_4_M2I_2_TRIM                       11:8 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_4_M2I_2_TRIM_8               0x00000003 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_4_M2I_2_TRIM_INIT            0x00000004 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_4_M2I_3_TRIM                      15:12 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_4_M2I_3_TRIM_8               0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_4_M2I_3_TRIM_INIT            0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_4_M2O_0_TRIM                      19:16 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_4_M2O_0_TRIM_8               0x0000000C /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_4_M2O_0_TRIM_INIT            0x0000000B /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_4_M2O_1_TRIM                      23:20 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_4_M2O_1_TRIM_8               0x0000000B /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_4_M2O_1_TRIM_INIT            0x0000000A /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_4_M2O_2_TRIM                      27:24 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_4_M2O_2_TRIM_8               0x0000000D /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_4_M2O_2_TRIM_INIT            0x0000000C /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_4_M2O_3_TRIM                      31:28 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_4_M2O_3_TRIM_8               0x0000000A /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_4_M2O_3_TRIM_INIT            0x00000009 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_5                            0x000010C8 /* RW-4R */
#define NV_PBUS_DEBUG_CTRIM_5_C0_DELAY                          3:0 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_5_C0_DELAY_8                 0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_5_C1_DELAY                          7:4 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_5_C1_DELAY_8                 0x00000008 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_5_C2_DELAY                         11:8 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_5_C2_DELAY_8                 0x00000008 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_5_C3_DELAY                        15:12 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_5_C3_DELAY_8                 0x00000008 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_5_C4_DELAY                        19:16 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_5_C4_DELAY_0                 0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_5_C5_DELAY                        23:20 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_5_C5_DELAY_0                 0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_5_C6_DELAY                        27:24 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_5_C6_DELAY_0                 0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_5_C7_DELAY                        31:28 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_5_C7_DELAY_0                 0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_5_FPIOCLK_TRIM                      3:0 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_5_FPIOCLK_TRIM_8             0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_5_FPIOCLK_TRIM_INIT          0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_5_SPARE0                            7:4 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_5_SPARE0_8                   0x00000008 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_5_SPARE0_INIT                0x00000008 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_5_SPARE1                           11:8 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_5_SPARE1_8                   0x00000008 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_5_SPARE1_INIT                0x00000008 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_5_SPARE2                          15:12 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_5_SPARE2_8                   0x00000008 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_5_SPARE2_INIT                0x00000008 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_5_SPARE3                          19:16 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_5_SPARE3_0                   0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_5_SPARE3_INIT                0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_5_SPARE4                          23:20 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_5_SPARE4_0                   0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_5_SPARE4_INIT                0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_5_SPARE5                          27:24 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_5_SPARE5_0                   0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_5_SPARE5_INIT                0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_5_M_DELAY                         31:28 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_5_M_DELAY_0                  0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_5_M_DELAY_INIT               0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_6                            0x000010CC /* RW-4R */
#define NV_PBUS_DEBUG_CTRIM_6_C0_DELAY                          3:0 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_6_C0_DELAY_0                 0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_6_C1_DELAY                          7:4 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_6_C1_DELAY_0                 0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_6_C2_DELAY                         11:8 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_6_C2_DELAY_0                 0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_6_C3_DELAY                        15:12 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_6_C3_DELAY_0                 0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_6_C4_DELAY                        19:16 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_6_C4_DELAY_0                 0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_6_C5_DELAY                        23:20 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_6_C5_DELAY_0                 0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_6_C6_DELAY                        27:24 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_6_C6_DELAY_0                 0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_6_C7_DELAY                        31:28 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_6_C7_DELAY_0                 0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_6_FBIO_M2I_0_DELAY                  3:0 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_6_FBIO_M2I_0_DELAY_0         0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_6_FBIO_M2I_0_DELAY_INIT      0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_6_FBIO_M2I_1_DELAY                  7:4 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_6_FBIO_M2I_1_DELAY_0         0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_6_FBIO_M2I_1_DELAY_INIT      0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_6_FBIO_M2I_2_DELAY                 11:8 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_6_FBIO_M2I_2_DELAY_0         0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_6_FBIO_M2I_2_DELAY_INIT      0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_6_FBIO_M2I_3_DELAY                15:12 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_6_FBIO_M2I_3_DELAY_0         0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_6_FBIO_M2I_3_DELAY_INIT      0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_6_FBIO_M2O_0_DELAY                19:16 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_6_FBIO_M2O_0_DELAY_0         0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_6_FBIO_M2O_0_DELAY_INIT      0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_6_FBIO_M2O_1_DELAY                23:20 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_6_FBIO_M2O_1_DELAY_0         0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_6_FBIO_M2O_1_DELAY_INIT      0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_6_FBIO_M2O_2_DELAY                27:24 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_6_FBIO_M2O_2_DELAY_0         0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_6_FBIO_M2O_2_DELAY_INIT      0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_CTRIM_6_FBIO_M2O_3_DELAY                31:28 /* RWIUF */
#define NV_PBUS_DEBUG_CTRIM_6_FBIO_M2O_3_DELAY_0         0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_CTRIM_6_FBIO_M2O_3_DELAY_INIT      0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_AGPPLL                             0x000010C0 /* RW-4R */
#define NV_PBUS_DEBUG_AGPPLL_COEFF_MDIV                         7:0 /* RWIUF */
#define NV_PBUS_DEBUG_AGPPLL_COEFF_MDIV_1                0x00000001 /* RWI-V */
#define NV_PBUS_DEBUG_AGPPLL_COEFF_NDIV                        15:8 /* RWIUF */
#define NV_PBUS_DEBUG_AGPPLL_COEFF_NDIV_4                0x00000004 /* RWI-V */
#define NV_PBUS_DEBUG_AGPPLL_SETUP                            24:16 /* RWIUF */
#define NV_PBUS_DEBUG_AGPPLL_SETUP_DEFAULT               0x0000011C /* RWI-V */
#define NV_PBUS_DEBUG_AGPPLL_PWRDWN                           28:28 /* RWIVF */
#define NV_PBUS_DEBUG_AGPPLL_PWRDWN_ON                   0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_AGPPLL_PWRDWN_OFF                  0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_AGPPLL_STATUS                           31:31 /* R--VF */
#define NV_PBUS_DEBUG_AGPPLL_STATUS_NOTLOCKED            0x00000000 /* R---V */
#define NV_PBUS_DEBUG_AGPPLL_STATUS_LOCKED               0x00000001 /* R---V */
#define NV_PBUS_DEBUG_PORT                               0x000010D0 /* RW-4R */
#define NV_PBUS_DEBUG_PORT_MODE                                 0:0 /* RWIVF */
#define NV_PBUS_DEBUG_PORT_MODE_NORMAL                   0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_PORT_MODE_AGP4X                    0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_PRIV_ASRC                          0x000010E0 /* RW-4R */
#define NV_PBUS_DEBUG_PRIV_ASRC_EAST_SEL                      31:31 /* RWIVF */
#define NV_PBUS_DEBUG_PRIV_ASRC_EAST_NORMAL              0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_PRIV_ASRC_EAST_OVERIDE             0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_PRIV_ASRC_EAST_VALUE                    30:24 /* RWIVF */
#define NV_PBUS_DEBUG_PRIV_ASRC_EAST_VALUE_0             0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_PRIV_ASRC_SOUTH_SEL                     23:23 /* RWIVF */
#define NV_PBUS_DEBUG_PRIV_ASRC_SOUTH_NORMAL             0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_PRIV_ASRC_SOUTH_OVERIDE            0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_PRIV_ASRC_SOUTH_VALUE                   22:16 /* RWIVF */
#define NV_PBUS_DEBUG_PRIV_ASRC_SOUTH_VALUE_0            0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_PRIV_ASRC_WEST_SEL                      15:15 /* RWIVF */
#define NV_PBUS_DEBUG_PRIV_ASRC_WEST_NORMAL              0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_PRIV_ASRC_WEST_OVERIDE             0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_PRIV_ASRC_WEST_VALUE                     14:8 /* RWIVF */
#define NV_PBUS_DEBUG_PRIV_ASRC_WEST_VALUE_0             0x00000000 /* RW--V */
#define NV_PBUS_DEBUG_PRIV_ASRC_NORTH_SEL                       7:7 /* RWIVF */
#define NV_PBUS_DEBUG_PRIV_ASRC_NORTH_NORMAL             0x00000000 /* RWI-V */
#define NV_PBUS_DEBUG_PRIV_ASRC_NORTH_OVERIDE            0x00000001 /* RW--V */
#define NV_PBUS_DEBUG_PRIV_ASRC_NORTH_VALUE                     6:0 /* RWIVF */
#define NV_PBUS_DEBUG_PRIV_ASRC_NORTH_VALUE_0            0x00000000 /* RW--V */
#define NV_PBUS_INTR_0                                   0x00001100 /* RW-4R */
#define NV_PBUS_INTR_0_PCI_BUS_ERROR                            0:0 /* RWXVF */
#define NV_PBUS_INTR_0_PCI_BUS_ERROR_NOT_PENDING         0x00000000 /* R---V */
#define NV_PBUS_INTR_0_PCI_BUS_ERROR_PENDING             0x00000001 /* R---V */
#define NV_PBUS_INTR_0_PCI_BUS_ERROR_RESET               0x00000001 /* -W--V */
#define NV_PBUS_INTR_0_HOTPLUG                                  4:4 /* RWXVF */
#define NV_PBUS_INTR_0_HOTPLUG_NOT_PENDING               0x00000000 /* R---V */
#define NV_PBUS_INTR_0_HOTPLUG_PENDING                   0x00000001 /* R---V */
#define NV_PBUS_INTR_0_HOTPLUG_RESET                     0x00000001 /* -W--V */
#define NV_PBUS_INTR_EN_0                                0x00001140 /* RWI4R */
#define NV_PBUS_INTR_EN_0_PCI_BUS_ERROR                         0:0 /* RWIVF */
#define NV_PBUS_INTR_EN_0_PCI_BUS_ERROR_DISABLED         0x00000000 /* RWI-V */
#define NV_PBUS_INTR_EN_0_PCI_BUS_ERROR_ENABLED          0x00000001 /* RW--V */
#define NV_PBUS_INTR_EN_0_HOTPLUG                               4:4 /* RWIVF */
#define NV_PBUS_INTR_EN_0_HOTPLUG_DISABLED               0x00000000 /* RWI-V */
#define NV_PBUS_INTR_EN_0_HOTPLUG_ENABLED                0x00000001 /* RW--V */
#define NV_PBUS_ROM_CONFIG                               0x00001200 /* RWI4R */
#define NV_PBUS_ROM_CONFIG_TW1                                  3:0 /* RWIVF */
#define NV_PBUS_ROM_CONFIG_TW1_DEFAULT                   0x0000000F /* RWI-V */
#define NV_PBUS_ROM_CONFIG_TW0                                  5:4 /* RWIVF */
#define NV_PBUS_ROM_CONFIG_TW0_DEFAULT                   0x00000003 /* RWI-V */


#define NV_PBUS_PCI_NV_2_REVISION_ID_A01                 0x00000000 /* C---V */
#define NV_PBUS_PCI_NV_2_REVISION_ID_B01                 0x00000010 /* ----V */
#define NV_PBUS_PCI_NV_5_BASE_ADDRESS                         31:24 /* RWXUF */
#define NV_PBUS_PCI_NV_17_AGP_REV_MAJOR_1                0x00000001 /* C---V */
/* dev_bus.ref */
/* dev_bus.ref */
/* dev_bus.ref */
#define NV_PRMIO_RMA_ID                                  0x00007100 /* R--4R */
#define NV_PRMIO_RMA_ID_CODE                                   31:0 /* C--UF */
#define NV_PRMIO_RMA_ID_CODE_VALID                       0x2B16D065 /* C---V */
#define NV_PRMIO_RMA_PTR                                 0x00007104 /* RW-4R */
#define NV_PRMIO_RMA_PTR_SPACE                                31:31 /* RWIVF */
#define NV_PRMIO_RMA_PTR_SPACE_REGISTER                  0x00000000 /* RWI-V */
#define NV_PRMIO_RMA_PTR_SPACE_MEMORY                    0x00000001 /* RW--V */
#define NV_PRMIO_RMA_PTR_ADDRESS                               26:2 /* RWIUF */
#define NV_PRMIO_RMA_PTR_ADDRESS_0                       0x00000000 /* RWI-V */
#define NV_PRMIO_RMA_DATA                                0x00007108 /* RW-4R */
#define NV_PRMIO_RMA_DATA_PORT                                 31:0 /* RWXUF */
#define NV_PRMIO_RMA_DATA32                              0x0000710C /* RW-4R */
#define NV_PRMIO_RMA_DATA32_BYTE2                             23:16 /* RWXUF */
#define NV_PRMIO_RMA_DATA32_BYTE1                              15:8 /* RWXUF */
#define NV_PRMIO_RMA_DATA32_BYTE0                               7:0 /* RWXUF */
/* dev_bus.ref */
#define NV_EXPROM                             0x0000FFFF:0x00000000 /* R---D */
#define NV_EXPROM_BIOS_ROM008(i)                   (0x00000000+(i)) /* RW-1A */
#define NV_EXPROM_BIOS_ROM008__SIZE_1                         65536 /*       */
#define NV_EXPROM_BIOS_ROM008_VALUE                             7:0 /* RW-VF */
#define NV_EXPROM_BIOS_ROM016(i)                 (0x00000000+(i)*2) /* RW-2A */
#define NV_EXPROM_BIOS_ROM016__SIZE_1                         32768 /*       */
#define NV_EXPROM_BIOS_ROM016_VALUE                            15:0 /* RW-VF */
#define NV_EXPROM_BIOS_ROM032(i)                 (0x00000000+(i)*4) /* RW-4A */
#define NV_EXPROM_BIOS_ROM032__SIZE_1                         16384 /*       */
#define NV_EXPROM_BIOS_ROM032_VALUE                            31:0 /* RW-VF */
/* dev_bus.ref */
#define NV_MEMORY                             0xFFFFFFFF:0x00000000 /* RW--D */
/* dev_bus.ref */
#define NV_IO                                 0xFFFFFFFF:0x00000000 /* RW--D */
/* dev_dac.ref */
#define NV_PRAMDAC_PLL_SETUP_CONTROL_PWRDWN                   14:12 /* RWIVF */
#define NV_PRAMDAC_PLL_SETUP_CONTROL_PWRDWN_ON           0x00000000 /* RWI-V */
#define NV_PRAMDAC_PLL_SETUP_CONTROL_PWRDWN_MPLL         0x00000001 /* RWI-V */
#define NV_PRAMDAC_PLL_SETUP_CONTROL_PWRDWN_VPLL         0x00000002 /* RWI-V */
#define NV_PRAMDAC_PLL_SETUP_CONTROL_PWRDWN_NVPLL        0x00000004 /* RWI-V */
#define NV_PRAMDAC_PLL_SETUP_CONTROL_PWRDWN_OFF          0x00000007 /* RW--V */
#define NV_PRAMDAC_PLL_TEST_COUNTER_SOURCE                    25:24 /* RWIVF */
/* dev_fifo.ref */
#define NV_PFIFO_DELAY_0                                 0x00002040 /* RW-4R */
#define NV_PFIFO_DELAY_0_WAIT_RETRY                             9:0 /* RWIUF */
#define NV_PFIFO_DELAY_0_WAIT_RETRY_0                    0x00000000 /* RWI-V */
#define NV_PFIFO_DMA_TIMESLICE                           0x00002044 /* RW-4R */
#define NV_PFIFO_DMA_TIMESLICE_SELECT                          16:0 /* RWIUF */
#define NV_PFIFO_DMA_TIMESLICE_SELECT_1                  0x00000000 /* RWI-V */
#define NV_PFIFO_DMA_TIMESLICE_SELECT_16K                0x00003fff /* RW--V */
#define NV_PFIFO_DMA_TIMESLICE_SELECT_32K                0x00007fff /* RW--V */
#define NV_PFIFO_DMA_TIMESLICE_SELECT_64K                0x0000ffff /* RW--V */
#define NV_PFIFO_DMA_TIMESLICE_SELECT_128K               0x0001ffff /* RW--V */
#define NV_PFIFO_DMA_TIMESLICE_TIMEOUT                        24:24 /* RWIUF */
#define NV_PFIFO_DMA_TIMESLICE_TIMEOUT_DISABLED          0x00000000 /* RW--V */
#define NV_PFIFO_DMA_TIMESLICE_TIMEOUT_ENABLED           0x00000001 /* RWI-V */
#define NV_PFIFO_PIO_TIMESLICE                           0x00002048 /* RW-4R */
#define NV_PFIFO_PIO_TIMESLICE_SELECT                          16:0 /* RWIUF */
#define NV_PFIFO_PIO_TIMESLICE_SELECT_1                  0x00000000 /* RWI-V */
#define NV_PFIFO_PIO_TIMESLICE_SELECT_16K                0x00003fff /* RW--V */
#define NV_PFIFO_PIO_TIMESLICE_SELECT_32K                0x00007fff /* RW--V */
#define NV_PFIFO_PIO_TIMESLICE_SELECT_64K                0x0000ffff /* RW--V */
#define NV_PFIFO_PIO_TIMESLICE_SELECT_128K               0x0001ffff /* RW--V */
#define NV_PFIFO_PIO_TIMESLICE_TIMEOUT                        24:24 /* RWIUF */
#define NV_PFIFO_PIO_TIMESLICE_TIMEOUT_DISABLED          0x00000000 /* RW--V */
#define NV_PFIFO_PIO_TIMESLICE_TIMEOUT_ENABLED           0x00000001 /* RWI-V */
#define NV_PFIFO_TIMESLICE                               0x0000204C /* RW-4R */
#define NV_PFIFO_TIMESLICE_TIMER                               17:0 /* RWIUF */
#define NV_PFIFO_TIMESLICE_TIMER_EXPIRED                 0x0003FFFF /* RWI-V */
#define NV_PFIFO_NEXT_CHANNEL                            0x00002050 /* RW-4R */
#define NV_PFIFO_NEXT_CHANNEL_CHID                              3:0 /* RWXUF */
#define NV_PFIFO_NEXT_CHANNEL_MODE                              8:8 /* RWXVF */
#define NV_PFIFO_NEXT_CHANNEL_MODE_PIO                   0x00000000 /* RW--V */
#define NV_PFIFO_NEXT_CHANNEL_MODE_DMA                   0x00000001 /* RW--V */
#define NV_PFIFO_NEXT_CHANNEL_SWITCH                          12:12 /* RWIVF */
#define NV_PFIFO_NEXT_CHANNEL_SWITCH_NOT_PENDING         0x00000000 /* RWI-V */
#define NV_PFIFO_NEXT_CHANNEL_SWITCH_PENDING             0x00000001 /* RW--V */
#define NV_PFIFO_RAMHT                                   0x00002210 /* RW-4R */
#define NV_PFIFO_RAMHT_BASE_ADDRESS                             8:4 /* RWIUF */
#define NV_PFIFO_RAMHT_BASE_ADDRESS_10000                0x00000010 /* RWI-V */
#define NV_PFIFO_RAMHT_SIZE                                   17:16 /* RWIUF */
#define NV_PFIFO_RAMHT_SIZE_4K                           0x00000000 /* RWI-V */
#define NV_PFIFO_RAMHT_SIZE_8K                           0x00000001 /* RW--V */
#define NV_PFIFO_RAMHT_SIZE_16K                          0x00000002 /* RW--V */
#define NV_PFIFO_RAMHT_SIZE_32K                          0x00000003 /* RW--V */
#define NV_PFIFO_RAMHT_SEARCH                                 25:24 /* RWIUF */
#define NV_PFIFO_RAMHT_SEARCH_16                         0x00000000 /* RWI-V */
#define NV_PFIFO_RAMHT_SEARCH_32                         0x00000001 /* RW--V */
#define NV_PFIFO_RAMHT_SEARCH_64                         0x00000002 /* RW--V */
#define NV_PFIFO_RAMHT_SEARCH_128                        0x00000003 /* RW--V */
#define NV_PFIFO_RAMFC                                   0x00002214 /* RW-4R */
#define NV_PFIFO_RAMFC_BASE_ADDRESS                             8:1 /* RWIUF */
#define NV_PFIFO_RAMFC_BASE_ADDRESS_11000                0x00000088 /* RWI-V */
#define NV_PFIFO_RAMFC_SIZE                                   16:16 /* RWIVF */
#define NV_PFIFO_RAMFC_SIZE_1K                           0x00000000 /* RWI-V */
#define NV_PFIFO_RAMFC_SIZE_2K                           0x00000001 /* RW--V */
#define NV_PFIFO_RAMFC_BASE_ADDRESS2                          23:17 /* RWIUF */
#define NV_PFIFO_RAMFC_BASE_ADDRESS_11400                0x00000045 /* RWI-V */
#define NV_PFIFO_RAMRO                                   0x00002218 /* RW-4R */
#define NV_PFIFO_RAMRO_BASE_ADDRESS                             8:1 /* RWIUF */
#define NV_PFIFO_RAMRO_BASE_ADDRESS_11200                0x00000089 /* RWI-V */
#define NV_PFIFO_RAMRO_BASE_ADDRESS_11400                0x0000008A /* RWI-V */
#define NV_PFIFO_RAMRO_BASE_ADDRESS_11500                0x0000008B /* RWI-V */
#define NV_PFIFO_RAMRO_BASE_ADDRESS_11800                0x0000008C /* RW--V */
#define NV_PFIFO_RAMRO_BASE_ADDRESS_12000                0x00000090 /* RW--V */
#define NV_PFIFO_RAMRO_SIZE                                   16:16 /* RWIVF */
#define NV_PFIFO_RAMRO_SIZE_512                          0x00000000 /* RWI-V */
#define NV_PFIFO_RAMRO_SIZE_8K                           0x00000001 /* RW--V */
#define NV_PFIFO_MODE                                    0x00002504 /* RW-4R */
#define NV_PFIFO_MODE_CHANNEL_0                                 0:0 /* RWIVF */
#define NV_PFIFO_MODE_CHANNEL_0_PIO                      0x00000000 /* RWI-V */
#define NV_PFIFO_MODE_CHANNEL_0_DMA                      0x00000001 /* RW--V */
#define NV_PFIFO_MODE_CHANNEL_1                                 1:1 /* RWIVF */
#define NV_PFIFO_MODE_CHANNEL_1_PIO                      0x00000000 /* RWI-V */
#define NV_PFIFO_MODE_CHANNEL_1_DMA                      0x00000001 /* RW--V */
#define NV_PFIFO_MODE_CHANNEL_2                                 2:2 /* RWIVF */
#define NV_PFIFO_MODE_CHANNEL_2_PIO                      0x00000000 /* RWI-V */
#define NV_PFIFO_MODE_CHANNEL_2_DMA                      0x00000001 /* RW--V */
#define NV_PFIFO_MODE_CHANNEL_3                                 3:3 /* RWIVF */
#define NV_PFIFO_MODE_CHANNEL_3_PIO                      0x00000000 /* RWI-V */
#define NV_PFIFO_MODE_CHANNEL_3_DMA                      0x00000001 /* RW--V */
#define NV_PFIFO_MODE_CHANNEL_4                                 4:4 /* RWIVF */
#define NV_PFIFO_MODE_CHANNEL_4_PIO                      0x00000000 /* RWI-V */
#define NV_PFIFO_MODE_CHANNEL_4_DMA                      0x00000001 /* RW--V */
#define NV_PFIFO_MODE_CHANNEL_5                                 5:5 /* RWIVF */
#define NV_PFIFO_MODE_CHANNEL_5_PIO                      0x00000000 /* RWI-V */
#define NV_PFIFO_MODE_CHANNEL_5_DMA                      0x00000001 /* RW--V */
#define NV_PFIFO_MODE_CHANNEL_6                                 6:6 /* RWIVF */
#define NV_PFIFO_MODE_CHANNEL_6_PIO                      0x00000000 /* RWI-V */
#define NV_PFIFO_MODE_CHANNEL_6_DMA                      0x00000001 /* RW--V */
#define NV_PFIFO_MODE_CHANNEL_7                                 7:7 /* RWIVF */
#define NV_PFIFO_MODE_CHANNEL_7_PIO                      0x00000000 /* RWI-V */
#define NV_PFIFO_MODE_CHANNEL_7_DMA                      0x00000001 /* RW--V */
#define NV_PFIFO_MODE_CHANNEL_8                                 8:8 /* RWIVF */
#define NV_PFIFO_MODE_CHANNEL_8_PIO                      0x00000000 /* RWI-V */
#define NV_PFIFO_MODE_CHANNEL_8_DMA                      0x00000001 /* RW--V */
#define NV_PFIFO_MODE_CHANNEL_9                                 9:9 /* RWIVF */
#define NV_PFIFO_MODE_CHANNEL_9_PIO                      0x00000000 /* RWI-V */
#define NV_PFIFO_MODE_CHANNEL_9_DMA                      0x00000001 /* RW--V */
#define NV_PFIFO_MODE_CHANNEL_10                              10:10 /* RWIVF */
#define NV_PFIFO_MODE_CHANNEL_10_PIO                     0x00000000 /* RWI-V */
#define NV_PFIFO_MODE_CHANNEL_10_DMA                     0x00000001 /* RW--V */
#define NV_PFIFO_MODE_CHANNEL_11                              11:11 /* RWIVF */
#define NV_PFIFO_MODE_CHANNEL_11_PIO                     0x00000000 /* RWI-V */
#define NV_PFIFO_MODE_CHANNEL_11_DMA                     0x00000001 /* RW--V */
#define NV_PFIFO_MODE_CHANNEL_12                              12:12 /* RWIVF */
#define NV_PFIFO_MODE_CHANNEL_12_PIO                     0x00000000 /* RWI-V */
#define NV_PFIFO_MODE_CHANNEL_12_DMA                     0x00000001 /* RW--V */
#define NV_PFIFO_MODE_CHANNEL_13                              13:13 /* RWIVF */
#define NV_PFIFO_MODE_CHANNEL_13_PIO                     0x00000000 /* RWI-V */
#define NV_PFIFO_MODE_CHANNEL_13_DMA                     0x00000001 /* RW--V */
#define NV_PFIFO_MODE_CHANNEL_14                              14:14 /* RWIVF */
#define NV_PFIFO_MODE_CHANNEL_14_PIO                     0x00000000 /* RWI-V */
#define NV_PFIFO_MODE_CHANNEL_14_DMA                     0x00000001 /* RW--V */
#define NV_PFIFO_MODE_CHANNEL_15                              15:15 /* RWIVF */
#define NV_PFIFO_MODE_CHANNEL_15_PIO                     0x00000000 /* RWI-V */
#define NV_PFIFO_MODE_CHANNEL_15_DMA                     0x00000001 /* RW--V */
#define NV_PFIFO_DMA                                     0x00002508 /* RW-4R */
#define NV_PFIFO_DMA_CHANNEL_0                                  0:0 /* RWIVF */
#define NV_PFIFO_DMA_CHANNEL_0_NOT_PENDING               0x00000000 /* RWI-V */
#define NV_PFIFO_DMA_CHANNEL_0_PENDING                   0x00000001 /* RW--V */
#define NV_PFIFO_DMA_CHANNEL_1                                  1:1 /* RWIVF */
#define NV_PFIFO_DMA_CHANNEL_1_NOT_PENDING               0x00000000 /* RWI-V */
#define NV_PFIFO_DMA_CHANNEL_1_PENDING                   0x00000001 /* RW--V */
#define NV_PFIFO_DMA_CHANNEL_2                                  2:2 /* RWIVF */
#define NV_PFIFO_DMA_CHANNEL_2_NOT_PENDING               0x00000000 /* RWI-V */
#define NV_PFIFO_DMA_CHANNEL_2_PENDING                   0x00000001 /* RW--V */
#define NV_PFIFO_DMA_CHANNEL_3                                  3:3 /* RWIVF */
#define NV_PFIFO_DMA_CHANNEL_3_NOT_PENDING               0x00000000 /* RWI-V */
#define NV_PFIFO_DMA_CHANNEL_3_PENDING                   0x00000001 /* RW--V */
#define NV_PFIFO_DMA_CHANNEL_4                                  4:4 /* RWIVF */
#define NV_PFIFO_DMA_CHANNEL_4_NOT_PENDING               0x00000000 /* RWI-V */
#define NV_PFIFO_DMA_CHANNEL_4_PENDING                   0x00000001 /* RW--V */
#define NV_PFIFO_DMA_CHANNEL_5                                  5:5 /* RWIVF */
#define NV_PFIFO_DMA_CHANNEL_5_NOT_PENDING               0x00000000 /* RWI-V */
#define NV_PFIFO_DMA_CHANNEL_5_PENDING                   0x00000001 /* RW--V */
#define NV_PFIFO_DMA_CHANNEL_6                                  6:6 /* RWIVF */
#define NV_PFIFO_DMA_CHANNEL_6_NOT_PENDING               0x00000000 /* RWI-V */
#define NV_PFIFO_DMA_CHANNEL_6_PENDING                   0x00000001 /* RW--V */
#define NV_PFIFO_DMA_CHANNEL_7                                  7:7 /* RWIVF */
#define NV_PFIFO_DMA_CHANNEL_7_NOT_PENDING               0x00000000 /* RWI-V */
#define NV_PFIFO_DMA_CHANNEL_7_PENDING                   0x00000001 /* RW--V */
#define NV_PFIFO_DMA_CHANNEL_8                                  8:8 /* RWIVF */
#define NV_PFIFO_DMA_CHANNEL_8_NOT_PENDING               0x00000000 /* RWI-V */
#define NV_PFIFO_DMA_CHANNEL_8_PENDING                   0x00000001 /* RW--V */
#define NV_PFIFO_DMA_CHANNEL_9                                  9:9 /* RWIVF */
#define NV_PFIFO_DMA_CHANNEL_9_NOT_PENDING               0x00000000 /* RWI-V */
#define NV_PFIFO_DMA_CHANNEL_9_PENDING                   0x00000001 /* RW--V */
#define NV_PFIFO_DMA_CHANNEL_10                               10:10 /* RWIVF */
#define NV_PFIFO_DMA_CHANNEL_10_NOT_PENDING              0x00000000 /* RWI-V */
#define NV_PFIFO_DMA_CHANNEL_10_PENDING                  0x00000001 /* RW--V */
#define NV_PFIFO_DMA_CHANNEL_11                               11:11 /* RWIVF */
#define NV_PFIFO_DMA_CHANNEL_11_NOT_PENDING              0x00000000 /* RWI-V */
#define NV_PFIFO_DMA_CHANNEL_11_PENDING                  0x00000001 /* RW--V */
#define NV_PFIFO_DMA_CHANNEL_12                               12:12 /* RWIVF */
#define NV_PFIFO_DMA_CHANNEL_12_NOT_PENDING              0x00000000 /* RWI-V */
#define NV_PFIFO_DMA_CHANNEL_12_PENDING                  0x00000001 /* RW--V */
#define NV_PFIFO_DMA_CHANNEL_13                               13:13 /* RWIVF */
#define NV_PFIFO_DMA_CHANNEL_13_NOT_PENDING              0x00000000 /* RWI-V */
#define NV_PFIFO_DMA_CHANNEL_13_PENDING                  0x00000001 /* RW--V */
#define NV_PFIFO_DMA_CHANNEL_14                               14:14 /* RWIVF */
#define NV_PFIFO_DMA_CHANNEL_14_NOT_PENDING              0x00000000 /* RWI-V */
#define NV_PFIFO_DMA_CHANNEL_14_PENDING                  0x00000001 /* RW--V */
#define NV_PFIFO_DMA_CHANNEL_15                               15:15 /* RWIVF */
#define NV_PFIFO_DMA_CHANNEL_15_NOT_PENDING              0x00000000 /* RWI-V */
#define NV_PFIFO_DMA_CHANNEL_15_PENDING                  0x00000001 /* RW--V */
#define NV_PFIFO_SIZE                                    0x0000250C /* RW-4R */
#define NV_PFIFO_SIZE_CHANNEL_0                                 0:0 /* RWIVF */
#define NV_PFIFO_SIZE_CHANNEL_0_124_BYTES                0x00000000 /* RWI-V */
#define NV_PFIFO_SIZE_CHANNEL_0_512_BYTES                0x00000001 /* RW--V */
#define NV_PFIFO_SIZE_CHANNEL_1                                 1:1 /* RWIVF */
#define NV_PFIFO_SIZE_CHANNEL_1_124_BYTES                0x00000000 /* RWI-V */
#define NV_PFIFO_SIZE_CHANNEL_1_512_BYTES                0x00000001 /* RW--V */
#define NV_PFIFO_SIZE_CHANNEL_2                                 2:2 /* RWIVF */
#define NV_PFIFO_SIZE_CHANNEL_2_124_BYTES                0x00000000 /* RWI-V */
#define NV_PFIFO_SIZE_CHANNEL_2_512_BYTES                0x00000001 /* RW--V */
#define NV_PFIFO_SIZE_CHANNEL_3                                 3:3 /* RWIVF */
#define NV_PFIFO_SIZE_CHANNEL_3_124_BYTES                0x00000000 /* RWI-V */
#define NV_PFIFO_SIZE_CHANNEL_3_512_BYTES                0x00000001 /* RW--V */
#define NV_PFIFO_SIZE_CHANNEL_4                                 4:4 /* RWIVF */
#define NV_PFIFO_SIZE_CHANNEL_4_124_BYTES                0x00000000 /* RWI-V */
#define NV_PFIFO_SIZE_CHANNEL_4_512_BYTES                0x00000001 /* RW--V */
#define NV_PFIFO_SIZE_CHANNEL_5                                 5:5 /* RWIVF */
#define NV_PFIFO_SIZE_CHANNEL_5_124_BYTES                0x00000000 /* RWI-V */
#define NV_PFIFO_SIZE_CHANNEL_5_512_BYTES                0x00000001 /* RW--V */
#define NV_PFIFO_SIZE_CHANNEL_6                                 6:6 /* RWIVF */
#define NV_PFIFO_SIZE_CHANNEL_6_124_BYTES                0x00000000 /* RWI-V */
#define NV_PFIFO_SIZE_CHANNEL_6_512_BYTES                0x00000001 /* RW--V */
#define NV_PFIFO_SIZE_CHANNEL_7                                 7:7 /* RWIVF */
#define NV_PFIFO_SIZE_CHANNEL_7_124_BYTES                0x00000000 /* RWI-V */
#define NV_PFIFO_SIZE_CHANNEL_7_512_BYTES                0x00000001 /* RW--V */
#define NV_PFIFO_SIZE_CHANNEL_8                                 8:8 /* RWIVF */
#define NV_PFIFO_SIZE_CHANNEL_8_124_BYTES                0x00000000 /* RWI-V */
#define NV_PFIFO_SIZE_CHANNEL_8_512_BYTES                0x00000001 /* RW--V */
#define NV_PFIFO_SIZE_CHANNEL_9                                 9:9 /* RWIVF */
#define NV_PFIFO_SIZE_CHANNEL_9_124_BYTES                0x00000000 /* RWI-V */
#define NV_PFIFO_SIZE_CHANNEL_9_512_BYTES                0x00000001 /* RW--V */
#define NV_PFIFO_SIZE_CHANNEL_10                              10:10 /* RWIVF */
#define NV_PFIFO_SIZE_CHANNEL_10_124_BYTES               0x00000000 /* RWI-V */
#define NV_PFIFO_SIZE_CHANNEL_10_512_BYTES               0x00000001 /* RW--V */
#define NV_PFIFO_SIZE_CHANNEL_11                              11:11 /* RWIVF */
#define NV_PFIFO_SIZE_CHANNEL_11_124_BYTES               0x00000000 /* RWI-V */
#define NV_PFIFO_SIZE_CHANNEL_11_512_BYTES               0x00000001 /* RW--V */
#define NV_PFIFO_SIZE_CHANNEL_12                              12:12 /* RWIVF */
#define NV_PFIFO_SIZE_CHANNEL_12_124_BYTES               0x00000000 /* RWI-V */
#define NV_PFIFO_SIZE_CHANNEL_12_512_BYTES               0x00000001 /* RW--V */
#define NV_PFIFO_SIZE_CHANNEL_13                              13:13 /* RWIVF */
#define NV_PFIFO_SIZE_CHANNEL_13_124_BYTES               0x00000000 /* RWI-V */
#define NV_PFIFO_SIZE_CHANNEL_13_512_BYTES               0x00000001 /* RW--V */
#define NV_PFIFO_SIZE_CHANNEL_14                              14:14 /* RWIVF */
#define NV_PFIFO_SIZE_CHANNEL_14_124_BYTES               0x00000000 /* RWI-V */
#define NV_PFIFO_SIZE_CHANNEL_14_512_BYTES               0x00000001 /* RW--V */
#define NV_PFIFO_SIZE_CHANNEL_15                              15:15 /* RWIVF */
#define NV_PFIFO_SIZE_CHANNEL_15_124_BYTES               0x00000000 /* RWI-V */
#define NV_PFIFO_SIZE_CHANNEL_15_512_BYTES               0x00000001 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH                        0x00003224 /* RW-4R */
#define NV_PFIFO_CACHE1_DMA_FETCH_TRIG                          7:3 /* RWIUF */
#define NV_PFIFO_CACHE1_DMA_FETCH_TRIG_8_BYTES           0x00000000 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_TRIG_16_BYTES          0x00000001 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_TRIG_24_BYTES          0x00000002 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_TRIG_32_BYTES          0x00000003 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_TRIG_40_BYTES          0x00000004 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_TRIG_48_BYTES          0x00000005 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_TRIG_56_BYTES          0x00000006 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_TRIG_64_BYTES          0x00000007 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_TRIG_72_BYTES          0x00000008 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_TRIG_80_BYTES          0x00000009 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_TRIG_88_BYTES          0x0000000A /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_TRIG_96_BYTES          0x0000000B /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_TRIG_104_BYTES         0x0000000C /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_TRIG_112_BYTES         0x0000000D /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_TRIG_120_BYTES         0x0000000E /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_TRIG_128_BYTES         0x0000000F /* RWI-V */
#define NV_PFIFO_CACHE1_DMA_FETCH_TRIG_136_BYTES         0x00000010 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_TRIG_144_BYTES         0x00000011 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_TRIG_152_BYTES         0x00000012 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_TRIG_160_BYTES         0x00000013 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_TRIG_168_BYTES         0x00000014 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_TRIG_176_BYTES         0x00000015 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_TRIG_184_BYTES         0x00000016 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_TRIG_192_BYTES         0x00000017 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_TRIG_200_BYTES         0x00000018 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_TRIG_208_BYTES         0x00000019 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_TRIG_216_BYTES         0x0000001A /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_TRIG_224_BYTES         0x0000001B /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_TRIG_232_BYTES         0x0000001C /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_TRIG_240_BYTES         0x0000001D /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_TRIG_248_BYTES         0x0000001E /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_TRIG_256_BYTES         0x0000001F /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_SIZE                        15:13 /* RWIUF */
#define NV_PFIFO_CACHE1_DMA_FETCH_SIZE_32_BYTES          0x00000000 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_SIZE_64_BYTES          0x00000001 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_SIZE_96_BYTES          0x00000002 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_SIZE_128_BYTES         0x00000003 /* RWI-V */
#define NV_PFIFO_CACHE1_DMA_FETCH_SIZE_160_BYTES         0x00000004 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_SIZE_192_BYTES         0x00000005 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_SIZE_224_BYTES         0x00000006 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_SIZE_256_BYTES         0x00000007 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_MAX_REQS                    20:16 /* RWIUF */
#define NV_PFIFO_CACHE1_DMA_FETCH_MAX_REQS_0             0x00000000 /* RWI-V */
#define NV_PFIFO_CACHE1_DMA_FETCH_MAX_REQS_1             0x00000001 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_MAX_REQS_2             0x00000002 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_MAX_REQS_3             0x00000003 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_MAX_REQS_4             0x00000004 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_MAX_REQS_5             0x00000005 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_MAX_REQS_6             0x00000006 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_MAX_REQS_7             0x00000007 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_MAX_REQS_8             0x00000008 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_MAX_REQS_9             0x00000009 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_MAX_REQS_10            0x0000000A /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_MAX_REQS_11            0x0000000B /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_MAX_REQS_12            0x0000000C /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_MAX_REQS_13            0x0000000D /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_MAX_REQS_14            0x0000000E /* RW--V */
#define NV_PFIFO_CACHE1_DMA_FETCH_MAX_REQS_15            0x0000000F /* RW--V */
#define NV_PFIFO_CACHE1_DMA_PUT_OFFSET                         28:2 /* RWXUF */
#define NV_PFIFO_CACHE1_DMA_GET_OFFSET                         28:2 /* RWXUF */
#define NV_PFIFO_CACHE1_DMA_DCOUNT                       0x000032A0 /* RW-4R */
#define NV_PFIFO_CACHE1_DMA_DCOUNT_VALUE                       12:2 /* RWXUF */
#define NV_PFIFO_CACHE1_DMA_GET_JMP_SHADOW               0x000032A4 /* RW-4R */
#define NV_PFIFO_CACHE1_DMA_GET_JMP_SHADOW_OFFSET              28:2 /* RWXUF */
#define NV_PFIFO_CACHE1_DMA_RSVD_SHADOW                  0x000032A8 /* RW-4R */
#define NV_PFIFO_CACHE1_DMA_RSVD_SHADOW_CMD                    31:0 /* RWXUF */
#define NV_PFIFO_CACHE1_DMA_DATA_SHADOW                  0x000032AC /* RW-4R */
#define NV_PFIFO_CACHE1_DMA_DATA_SHADOW_VALUE                  31:0 /* RWXUF */
#define NV_PFIFO_CACHE1_DMA_STATE_METHOD_TYPE                   0:0 /* RWXUF */
#define NV_PFIFO_CACHE1_DMA_STATE_METHOD_TYPE_INC        0x00000000 /* RWI-V */
#define NV_PFIFO_CACHE1_DMA_STATE_METHOD_TYPE_NON_INC    0x00000001 /* RWI-V */
#define NV_PFIFO_CACHE1_DMA_STATE_METHOD                       12:2 /* RWXUF */
#define NV_PFIFO_CACHE1_DMA_STATE_SUBCHANNEL                  15:13 /* RWXUF */
#define NV_PFIFO_CACHE1_DMA_STATE_METHOD_COUNT                28:18 /* RWIUF */
#define NV_PFIFO_CACHE1_DMA_STATE_METHOD_COUNT_0         0x00000000 /* RWI-V */
#define NV_PFIFO_CACHE1_DMA_STATE_ERROR                       31:30 /* RWXUF */
#define NV_PFIFO_CACHE1_DMA_STATE_ERROR_NONE             0x00000000 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_STATE_ERROR_NON_CACHE        0x00000001 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_STATE_ERROR_RESERVED_CMD     0x00000002 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_STATE_ERROR_PROTECTION       0x00000003 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_INSTANCE                     0x0000322C /* RW-4R */
#define NV_PFIFO_CACHE1_DMA_INSTANCE_ADDRESS                   15:0 /* RWXUF */
#define NV_PFIFO_CACHE1_DMA_CTL                          0x00003230 /* RW-4R */
#define NV_PFIFO_CACHE1_DMA_CTL_ADJUST                         11:2 /* RWXUF */
#define NV_PFIFO_CACHE1_DMA_CTL_PAGE_TABLE                    12:12 /* RWXUF */
#define NV_PFIFO_CACHE1_DMA_CTL_PAGE_TABLE_NOT_PRESENT   0x00000000 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_CTL_PAGE_TABLE_PRESENT       0x00000001 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_CTL_PAGE_ENTRY                    13:13 /* RWXUF */
#define NV_PFIFO_CACHE1_DMA_CTL_PAGE_ENTRY_NOT_LINEAR    0x00000000 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_CTL_PAGE_ENTRY_LINEAR        0x00000001 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_CTL_TARGET_NODE                   17:16 /* RWXUF */
#define NV_PFIFO_CACHE1_DMA_CTL_TARGET_NODE_NVM          0x00000000 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_CTL_TARGET_NODE_PCI          0x00000002 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_CTL_TARGET_NODE_AGP          0x00000003 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_CTL_AT_INFO                       31:31 /* RWIUF */
#define NV_PFIFO_CACHE1_DMA_CTL_AT_INFO_INVALID          0x00000000 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_CTL_AT_INFO_VALID            0x00000001 /* RWI-V */
#define NV_PFIFO_CACHE1_DMA_LIMIT                        0x00003234 /* RW-4R */
#define NV_PFIFO_CACHE1_DMA_LIMIT_OFFSET                       28:2 /* RWXUF */
#define NV_PFIFO_CACHE1_DMA_TLB_TAG                      0x00003238 /* RW-4R */
#define NV_PFIFO_CACHE1_DMA_TLB_TAG_ADDRESS                   28:12 /* RWXUF */
#define NV_PFIFO_CACHE1_DMA_TLB_TAG_STATE                       0:0 /* RWIUF */
#define NV_PFIFO_CACHE1_DMA_TLB_TAG_STATE_INVALID        0x00000000 /* RWI-V */
#define NV_PFIFO_CACHE1_DMA_TLB_TAG_STATE_VALID          0x00000001 /* RW--V */
#define NV_PFIFO_CACHE1_DMA_TLB_PTE                      0x0000323C /* RW-4R */
#define NV_PFIFO_CACHE1_DMA_TLB_PTE_FRAME_ADDRESS             31:12 /* RWXUF */
#define NV_PFIFO_DEVICE(i)                       (0x00002800+(i)*4) /* R--4A */
#define NV_PFIFO_DEVICE__SIZE_1                                 128 /*       */
#define NV_PFIFO_DEVICE_CHID                                    4:0 /* R--UF */
#define NV_PFIFO_DEVICE_SWITCH                                24:24 /* R--VF */
#define NV_PFIFO_DEVICE_SWITCH_UNAVAILABLE               0x00000000 /* R---V */
#define NV_PFIFO_DEVICE_SWITCH_AVAILABLE                 0x00000001 /* R---V */
#define NV_PFIFO_RUNOUT_STATUS                           0x00002400 /* R--4R */
#define NV_PFIFO_RUNOUT_STATUS_RANOUT                           0:0 /* R--VF */
#define NV_PFIFO_RUNOUT_STATUS_RANOUT_FALSE              0x00000000 /* R---V */
#define NV_PFIFO_RUNOUT_STATUS_RANOUT_TRUE               0x00000001 /* R---V */
#define NV_PFIFO_RUNOUT_STATUS_LOW_MARK                         4:4 /* R--VF */
#define NV_PFIFO_RUNOUT_STATUS_LOW_MARK_NOT_EMPTY        0x00000000 /* R---V */
#define NV_PFIFO_RUNOUT_STATUS_LOW_MARK_EMPTY            0x00000001 /* R---V */
#define NV_PFIFO_RUNOUT_STATUS_HIGH_MARK                        8:8 /* R--VF */
#define NV_PFIFO_RUNOUT_STATUS_HIGH_MARK_NOT_FULL        0x00000000 /* R---V */
#define NV_PFIFO_RUNOUT_STATUS_HIGH_MARK_FULL            0x00000001 /* R---V */
#define NV_PFIFO_RUNOUT_PUT                              0x00002410 /* RW-4R */
#define NV_PFIFO_RUNOUT_PUT_ADDRESS                            12:3 /* RWXUF */
#define NV_PFIFO_RUNOUT_PUT_ADDRESS__SIZE_0                     8:3 /* RWXUF */
#define NV_PFIFO_RUNOUT_PUT_ADDRESS__SIZE_1                    12:3 /* RWXUF */
#define NV_PFIFO_RUNOUT_GET                              0x00002420 /* RW-4R */
#define NV_PFIFO_RUNOUT_GET_ADDRESS                            13:3 /* RWXUF */
/* dev_ram.ref */
/* dev_fifo.ref */
#define NV_USER                               0x00FFFFFF:0x00800000 /* RW--D */
#define NV_USER_OBJECT(i,j)     (0x00800000+(i)*0x10000+(j)*0x2000) /* -W-4A */
#define NV_USER_OBJECT__SIZE_1                                   16 /*       */
#define NV_USER_OBJECT__SIZE_2                                    8 /*       */
#define NV_USER_OBJECT_HANDLE                                  31:0 /* -W-VF */
#define NV_USER_FREE016(i,j)        (0x00800010+(i)*65536+(j)*8192) /* R--2A */
#define NV_USER_FREE016__SIZE_1                                  16 /*       */
#define NV_USER_FREE016__SIZE_2                                   8 /*       */
#define NV_USER_FREE016_COUNT_LO                                1:0 /* C--UF */
#define NV_USER_FREE016_COUNT_LO_0                       0x00000000 /* C---V */
#define NV_USER_FREE016_COUNT                                   9:2 /* R--UF */
#define NV_USER_FREE016_COUNT_HI                              15:10 /* C--UF */
#define NV_USER_FREE016_COUNT_HI_0                       0x00000000 /* C---V */
#define NV_USER_FREE032(i,j)        (0x00800010+(i)*65536+(j)*8192) /* R--4A */
#define NV_USER_FREE032__SIZE_1                                  16 /*       */
#define NV_USER_FREE032__SIZE_2                                   8 /*       */
#define NV_USER_FREE032_COUNT_LO                                1:0 /* C--UF */
#define NV_USER_FREE032_COUNT_LO_0                       0x00000000 /* C---V */
#define NV_USER_FREE032_COUNT                                   9:2 /* R--UF */
#define NV_USER_FREE032_COUNT_HI                              31:10 /* C--UF */
#define NV_USER_FREE032_COUNT_HI_0                       0x00000000 /* C---V */
#define NV_USER_ZERO016(i,j,k) (0x0800012+(i)*65536+(j)*8192+(k)*2) /* R--2A */
#define NV_USER_ZERO016__SIZE_1                                  16 /*       */
#define NV_USER_ZERO016__SIZE_2                                   8 /*       */
#define NV_USER_ZERO016__SIZE_3                                   7 /*       */
#define NV_USER_ZERO016_COUNT                                  15:0 /* C--UF */
#define NV_USER_ZERO016_COUNT_0                          0x00000000 /* C---V */
#define NV_USER_ZERO032(i,j,k) (0x0800014+(i)*65536+(j)*8192+(k)*4) /* R--4A */
#define NV_USER_ZERO032__SIZE_1                                  16 /*       */
#define NV_USER_ZERO032__SIZE_2                                   8 /*       */
#define NV_USER_ZERO032__SIZE_3                                   3 /*       */
#define NV_USER_ZERO032_COUNT                                  31:0 /* C--UF */
#define NV_USER_ZERO032_COUNT_0                          0x00000000 /* C---V */
#define NV_USER_DMA_GET(i,j)    (0x00800044+(i)*0x10000+(j)*0x2000) /* R--4A */
#define NV_USER_DMA_GET__SIZE_1                                  32 /*       */
#define NV_USER_DMA_GET__SIZE_2                                   8 /*       */
#define NV_USER_DMA_GET_OFFSET                                 28:2 /* R-XUF */
#define NV_USER_REF(i,j)        (0x00800048+(i)*0x10000+(j)*0x2000) /* R--4A */
#define NV_USER_REF__SIZE_1                                      32 /*       */
#define NV_USER_REF__SIZE_2                                       8 /*       */
#define NV_USER_REF_CNT                                        31:0 /* R-XUF */
/* dev_vga.ref */
#define NV_CIO_CRE_FFLWM_LWM                                    5:0 /* RW--F */
#define NV_CIO_CRE_VID_END_7_0                                  7:0 /* RW--F */
#define NV_CIO_CRE_VID_END1__INDEX                       0x00000033 /*       */
#define NV_CIO_CRE_VID_END_ENABLE                               4:4 /* RW--F */
#define NV_CIO_CRE_VID_END_10_8                                 2:0 /* RW--F */
#define NV_CIO_CRE_RL0__INDEX                            0x00000034 /*       */
#define NV_CIO_CRE_RL1__INDEX                            0x00000035 /*       */
/* dev_graphics.ref */
#define NV_PGRAPH_DEBUG_0                                0x00400080 /* RW-4R */
#define NV_PGRAPH_DEBUG_0_STATE                                 0:0 /* CWIVF */
#define NV_PGRAPH_DEBUG_0_STATE_NORMAL                   0x00000000 /* CWI-V */
#define NV_PGRAPH_DEBUG_0_STATE_RESET                    0x00000001 /* -W--T */
#define NV_PGRAPH_DEBUG_0_FE_STATE                              1:1 /* CWIVF */
#define NV_PGRAPH_DEBUG_0_FE_STATE_NORMAL                0x00000000 /* CWI-V */
#define NV_PGRAPH_DEBUG_0_FE_STATE_RESET                 0x00000001 /* -W--T */
#define NV_PGRAPH_DEBUG_0_CACHE_STATE                           2:2 /* CWIVF */
#define NV_PGRAPH_DEBUG_0_CACHE_STATE_NORMAL             0x00000000 /* CWI-V */
#define NV_PGRAPH_DEBUG_0_CACHE_STATE_RESET              0x00000001 /* -W--T */
#define NV_PGRAPH_DEBUG_0_D3D_PIPE_STATE                        3:3 /* CWIVF */
#define NV_PGRAPH_DEBUG_0_D3D_PIPE_STATE_NORMAL          0x00000000 /* CWI-V */
#define NV_PGRAPH_DEBUG_0_D3D_PIPE_STATE_RESET           0x00000001 /* -W--T */
#define NV_PGRAPH_DEBUG_0_PREROP_STATE                          4:4 /* CWIVF */
#define NV_PGRAPH_DEBUG_0_PREROP_STATE_NORMAL            0x00000000 /* CWI-V */
#define NV_PGRAPH_DEBUG_0_PREROP_STATE_RESET             0x00000001 /* -W--T */
#define NV_PGRAPH_DEBUG_0_ROP_STATE                             5:5 /* CWIVF */
#define NV_PGRAPH_DEBUG_0_ROP_STATE_NORMAL               0x00000000 /* CWI-V */
#define NV_PGRAPH_DEBUG_0_ROP_STATE_RESET                0x00000001 /* -W--T */
#define NV_PGRAPH_DEBUG_0_RSTR_STATE                            6:6 /* CWIVF */
#define NV_PGRAPH_DEBUG_0_RSTR_STATE_NORMAL              0x00000000 /* CWI-V */
#define NV_PGRAPH_DEBUG_0_RSTR_STATE_RESET               0x00000001 /* -W--T */
#define NV_PGRAPH_DEBUG_0_LIGHT_STATE                           7:7 /* CWIVF */
#define NV_PGRAPH_DEBUG_0_LIGHT_STATE_NORMAL             0x00000000 /* CWI-V */
#define NV_PGRAPH_DEBUG_0_LIGHT_STATE_RESET              0x00000001 /* -W--T */
#define NV_PGRAPH_DEBUG_0_DMA_STATE                             8:8 /* CWIVF */
#define NV_PGRAPH_DEBUG_0_DMA_STATE_NORMAL               0x00000000 /* CWI-V */
#define NV_PGRAPH_DEBUG_0_DMA_STATE_RESET                0x00000001 /* -W--T */
#define NV_PGRAPH_DEBUG_0_SPARE1                              12:12 /* RWIVF */
#define NV_PGRAPH_DEBUG_0_SPARE1_DISABLED                0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_0_SPARE1_ENABLED                 0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_0_SPARE2                              13:13 /* RWIVF */
#define NV_PGRAPH_DEBUG_0_SPARE2_DISABLED                0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_0_SPARE2_ENABLED                 0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_0_MINUSD5                             14:14 /* RWIVF */
#define NV_PGRAPH_DEBUG_0_MINUSD5_DISABLED               0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_0_MINUSD5_ENABLED                0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_0_BLIT_DST_LIMIT                      15:15 /* RWIVF */
#define NV_PGRAPH_DEBUG_0_BLIT_DST_LIMIT_DISABLED        0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_0_BLIT_DST_LIMIT_ENABLED         0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_0_LIMIT_CHECK                         16:16 /* RWIVF */
#define NV_PGRAPH_DEBUG_0_LIMIT_CHECK_DISABLED           0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_0_LIMIT_CHECK_ENABLED            0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_0_LIMIT_INT                           17:17 /* RWIVF */
#define NV_PGRAPH_DEBUG_0_LIMIT_INT_DISABLED             0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_0_LIMIT_INT_ENABLED              0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_0_OVRFLW_INT                          18:18 /* RWIVF */
#define NV_PGRAPH_DEBUG_0_OVRFLW_INT_DISABLED            0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_0_OVRFLW_INT_ENABLED             0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_0_WRITE_ONLY_ROPS_2D                  20:20 /* RWIVF */
#define NV_PGRAPH_DEBUG_0_WRITE_ONLY_ROPS_2D_DISABLED    0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_0_WRITE_ONLY_ROPS_2D_ENABLED     0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_0_WRITE_ONLY_ROPS_3D                  21:21 /* RWIVF */
#define NV_PGRAPH_DEBUG_0_WRITE_ONLY_ROPS_3D_DISABLED    0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_0_WRITE_ONLY_ROPS_3D_ENABLED     0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_0_DRAWDIR_AUTO                        24:24 /* RWIVF */
#define NV_PGRAPH_DEBUG_0_DRAWDIR_AUTO_DISABLED          0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_0_DRAWDIR_AUTO_ENABLED           0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_0_DRAWDIR_Y                           25:25 /* RWIVF */
#define NV_PGRAPH_DEBUG_0_DRAWDIR_Y_DECR                 0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_0_DRAWDIR_Y_INCR                 0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_0_ALPHA_ABORT                         28:28 /* RWIVF */
#define NV_PGRAPH_DEBUG_0_ALPHA_ABORT_DISABLED           0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_0_ALPHA_ABORT_ENABLED            0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_1                                0x00400084 /* RW-4R */
#define NV_PGRAPH_DEBUG_1_VOLATILE_RESET                        0:0 /* RWIVF */
#define NV_PGRAPH_DEBUG_1_VOLATILE_RESET_NOT_LAST        0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_1_VOLATILE_RESET_LAST            0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_1_DMA_ACTIVITY                          4:4 /* CWIVF */
#define NV_PGRAPH_DEBUG_1_DMA_ACTIVITY_IGNORE            0x00000000 /* CWI-V */
#define NV_PGRAPH_DEBUG_1_DMA_ACTIVITY_CANCEL            0x00000001 /* -W--T */
#define NV_PGRAPH_DEBUG_1_PATCH_INV                             8:8 /* RWIVF */
#define NV_PGRAPH_DEBUG_1_PATCH_INV_DISABLED             0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_1_PATCH_INV_ENABLED              0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_1_ALT_RW_SEQ                          10:10 /* RWIVF */
#define NV_PGRAPH_DEBUG_1_ALT_RW_SEQ_DISABLED            0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_1_ALT_RW_SEQ_ENABLED             0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_1_TRI_OPTS                            12:12 /* RWIVF */
#define NV_PGRAPH_DEBUG_1_TRI_OPTS_DISABLED              0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_1_TRI_OPTS_ENABLED               0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_1_TRICLIP_OPTS                        13:13 /* RWIVF */
#define NV_PGRAPH_DEBUG_1_TRICLIP_OPTS_DISABLED          0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_1_TRICLIP_OPTS_ENABLED           0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_1_INSTANCE                            16:16 /* RWIVF */
#define NV_PGRAPH_DEBUG_1_INSTANCE_DISABLED              0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_1_INSTANCE_ENABLED               0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_1_ALOM_BURST                          17:17 /* RWIVF */
#define NV_PGRAPH_DEBUG_1_ALOM_BURST_DISABLED            0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_1_ALOM_BURST_ENABLED             0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_1_BIDIR_DRAIN                         18:18 /* RWIVF */
#define NV_PGRAPH_DEBUG_1_BIDIR_DRAIN_DISABLED           0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_1_BIDIR_DRAIN_ENABLED            0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_1_EARLY_POST                          19:19 /* RWIVF */
#define NV_PGRAPH_DEBUG_1_EARLY_POST_DISABLED            0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_1_EARLY_POST_ENABLED             0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_1_CTX                                 20:20 /* RWIVF */
#define NV_PGRAPH_DEBUG_1_CTX_DISABLED                   0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_1_CTX_ENABLED                    0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_1_FIXED_ADRS                          21:21 /* RWIVF */
#define NV_PGRAPH_DEBUG_1_FIXED_ADRS_DISABLED            0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_1_FIXED_ADRS_ENABLED             0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_1_DITHER_RANGE_ADJ_2D                 22:22 /* RWIVF */
#define NV_PGRAPH_DEBUG_1_DITHER_RANGE_ADJ_2D_DISABLED   0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_1_DITHER_RANGE_ADJ_2D_ENABLED    0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_1_DITHER_RANGE_ADJ_3D                 23:23 /* RWIVF */
#define NV_PGRAPH_DEBUG_1_DITHER_RANGE_ADJ_3D_DISABLED   0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_1_DITHER_RANGE_ADJ_3D_ENABLED    0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_1_CACHE                               24:24 /* CWIVF */
#define NV_PGRAPH_DEBUG_1_CACHE_IGNORE                   0x00000000 /* CWI-V */
#define NV_PGRAPH_DEBUG_1_CACHE_FLUSH                    0x00000001 /* -W--T */
#define NV_PGRAPH_DEBUG_1_CACHE_MODE                          25:25 /* RWIVF */
#define NV_PGRAPH_DEBUG_1_CACHE_MODE_DISABLED            0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_1_CACHE_MODE_ENABLED             0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_1_ZCLAMP                              28:28 /* RWIVF */
#define NV_PGRAPH_DEBUG_1_ZCLAMP_DISABLED                0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_1_ZCLAMP_ENABLED                 0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_1_UCLAMP                              29:29 /* RWIVF */
#define NV_PGRAPH_DEBUG_1_UCLAMP_DISABLED                0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_1_UCLAMP_ENABLED                 0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_1_RCLAMP                              30:30 /* RWIVF */
#define NV_PGRAPH_DEBUG_1_RCLAMP_DISABLED                0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_1_RCLAMP_ENABLED                 0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_1_DX6_2PIXMODE                        31:31 /* RWIVF */
#define NV_PGRAPH_DEBUG_1_DX6_2PIXMODE_DISABLED          0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_1_DX6_2PIXMODE_ENABLED           0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_2                                0x00400088 /* RW-4R */
#define NV_PGRAPH_DEBUG_2_HONOR_SRCFMT                          0:0 /* RWIVF */
#define NV_PGRAPH_DEBUG_2_HONOR_SRCFMT_DISABLED          0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_2_HONOR_SRCFMT_ENABLED           0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_2_PINGPONG                              0:0 /* RWIVF */
#define NV_PGRAPH_DEBUG_2_PINGPONG_DISABLED              0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_2_PINGPONG_ENABLED               0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_2_SPARE1                                4:4 /* RWIVF */
#define NV_PGRAPH_DEBUG_2_SPARE1_DISABLED                0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_2_SPARE1_ENABLED                 0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_2_SPARE2                                5:5 /* RWIVF */
#define NV_PGRAPH_DEBUG_2_SPARE2_DISABLED                0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_2_SPARE2_ENABLED                 0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_2_SPARE3                                6:6 /* RWIVF */
#define NV_PGRAPH_DEBUG_2_SPARE3_DISABLED                0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_2_SPARE3_ENABLED                 0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_2_SPARE4                                7:7 /* RWIVF */
#define NV_PGRAPH_DEBUG_2_SPARE4_DISABLED                0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_2_SPARE4_ENABLED                 0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_2_SPARE5                                8:8 /* RWIVF */
#define NV_PGRAPH_DEBUG_2_SPARE5_DISABLED                0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_2_SPARE5_ENABLED                 0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_2_SPARE6                                9:9 /* RWIVF */
#define NV_PGRAPH_DEBUG_2_SPARE6_DISABLED                0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_2_SPARE6_ENABLED                 0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_2_SPARE7                              10:10 /* RWIVF */
#define NV_PGRAPH_DEBUG_2_SPARE7_DISABLED                0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_2_SPARE7_ENABLED                 0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_2_MCLK_RECTS                          11:11 /* RWIVF */
#define NV_PGRAPH_DEBUG_2_MCLK_RECTS_DISABLED            0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_2_MCLK_RECTS_ENABLED             0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_2_BILINEAR_3D                         12:12 /* RWIVF */
#define NV_PGRAPH_DEBUG_2_BILINEAR_3D_DISABLED           0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_2_BILINEAR_3D_ENABLED            0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_2_ANISOTROPIC_3D                      13:13 /* RWIVF */
#define NV_PGRAPH_DEBUG_2_ANISOTROPIC_3D_DISABLED        0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_2_ANISOTROPIC_3D_ENABLED         0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_2_FOG_3D                              14:14 /* RWIVF */
#define NV_PGRAPH_DEBUG_2_FOG_3D_DISABLED                0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_2_FOG_3D_ENABLED                 0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_2_SPECULAR_3D                         15:15 /* RWIVF */
#define NV_PGRAPH_DEBUG_2_SPECULAR_3D_DISABLED           0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_2_SPECULAR_3D_ENABLED            0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_2_ALPHA_3D                            16:16 /* RWIVF */
#define NV_PGRAPH_DEBUG_2_ALPHA_3D_DISABLED              0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_2_ALPHA_3D_ENABLED               0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_2_ZBUF_SEQ                            18:17 /* RWIVF */
#define NV_PGRAPH_DEBUG_2_ZBUF_SEQ_CRZRWCW               0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_2_ZBUF_SEQ_ZRWCRW                0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_2_ZBUF_SEQ_AUTO                  0x00000002 /* RW--V */
#define NV_PGRAPH_DEBUG_2_COELESCE_D3D                        20:20 /* RWIVF */
#define NV_PGRAPH_DEBUG_2_COELESCE_D3D_DISABLED          0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_2_COELESCE_D3D_ENABLED           0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_2_COELESCE_2D                         22:22 /* RWIVF */
#define NV_PGRAPH_DEBUG_2_COELESCE_2D_DISABLED           0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_2_COELESCE_2D_ENABLED            0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_2_FAST_VERTEX_LOAD                    23:23 /* RWIVF */
#define NV_PGRAPH_DEBUG_2_FAST_VERTEX_LOAD1_DISABLED     0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_2_FAST_VERTEX_LOAD_ENABLED       0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_2_BLIT_MULTILINE                      24:24 /* RWIVF */
#define NV_PGRAPH_DEBUG_2_BLIT_MULTILINE_DISABLED        0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_2_BLIT_MULTILINE_ENABLED         0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_2_VOLATILE_RESET                      28:28 /* RWIVF */
#define NV_PGRAPH_DEBUG_2_VOLATILE_RESET_DISABLED        0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_2_VOLATILE_RESET_ENABLED         0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3                                0x0040008C /* RW-4R */
#define NV_PGRAPH_DEBUG_3_CULLING                               0:0 /* RWIVF */
#define NV_PGRAPH_DEBUG_3_CULLING_DISABLED               0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_3_CULLING_ENABLED                0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3_CULLING_TYPE                          1:1 /* RWIVF */
#define NV_PGRAPH_DEBUG_3_CULLING_TYPE_DX3               0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_3_CULLING_TYPE_DX5               0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3_FAST_DATA_STRTCH                      4:4 /* RWIVF */
#define NV_PGRAPH_DEBUG_3_FAST_DATA_STRTCH_DISABLED      0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_3_FAST_DATA_STRTCH_ENABLED       0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3_FAST_DATA_D3D                         5:5 /* RWIVF */
#define NV_PGRAPH_DEBUG_3_FAST_DATA_D3D_DISABLED         0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_3_FAST_DATA_D3D_ENABLED          0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3_FAST_DATA_IMAGE                       6:6 /* RWIVF */
#define NV_PGRAPH_DEBUG_3_FAST_DATA_IMAGE_DISABLED       0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_3_FAST_DATA_IMAGE_ENABLED        0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3_ZFLUSH                                7:7 /* CWIVF */
#define NV_PGRAPH_DEBUG_3_ZFLUSH_IGNORE                  0x00000000 /* CWI-V */
#define NV_PGRAPH_DEBUG_3_ZFLUSH_ACTIVATE                0x00000001 /* -W--T */
#define NV_PGRAPH_DEBUG_3_AUTOZFLUSH_PTZ                        8:8 /* RWIVF */
#define NV_PGRAPH_DEBUG_3_AUTOZFLUSH_PTZ_DISABLED        0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_3_AUTOZFLUSH_PTZ_ENABLED         0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3_AUTOZFLUSH_D3D                        9:9 /* RWIVF */
#define NV_PGRAPH_DEBUG_3_AUTOZFLUSH_D3D_DISABLED        0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_3_AUTOZFLUSH_D3D_ENABLED         0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3_SLOT_CONFLICT_PTZ                   10:10 /* RWIVF */
#define NV_PGRAPH_DEBUG_3_SLOT_CONFLICT_PTZ_DISABLED     0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_3_SLOT_CONFLICT_PTZ_ENABLED      0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3_SLOT_CONFLICT_D3D                   11:11 /* RWIVF */
#define NV_PGRAPH_DEBUG_3_SLOT_CONFLICT_D3D_DISABLED     0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_3_SLOT_CONFLICT_D3D_ENABLED      0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3_POSTDITHER_2D                       12:12 /* RWIVF */
#define NV_PGRAPH_DEBUG_3_POSTDITHER_2D_DISABLED         0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_3_POSTDITHER_2D_ENABLED          0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3_POSTDITHER_3D                       13:13 /* RWIVF */
#define NV_PGRAPH_DEBUG_3_POSTDITHER_3D_DISABLED         0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_3_POSTDITHER_3D_ENABLED          0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3_PREDITHER_2D                        14:14 /* RWIVF */
#define NV_PGRAPH_DEBUG_3_PREDITHER_2D_DISABLED          0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_3_PREDITHER_2D_ENABLED           0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3_PREDITHER_3D                        15:15 /* RWIVF */
#define NV_PGRAPH_DEBUG_3_PREDITHER_3D_DISABLED          0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_3_PREDITHER_3D_ENABLED           0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3_FORCE_CREAD                         16:16 /* RWIVF */
#define NV_PGRAPH_DEBUG_3_FORCE_CREAD_DISABLED           0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_3_FORCE_CREAD_ENABLED            0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3_FORCE_ZREAD                         17:17 /* RWIVF */
#define NV_PGRAPH_DEBUG_3_FORCE_ZREAD_DISABLED           0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_3_FORCE_ZREAD_ENABLED            0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3_EARLYZ_ABORT                        18:18 /* RWIVF */
#define NV_PGRAPH_DEBUG_3_EARLYZ_ABORT_DISABLED          0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_3_EARLYZ_ABORT_ENABLED           0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3_TRIEND_FLUSH                        19:19 /* RWIVF */
#define NV_PGRAPH_DEBUG_3_TRIEND_FLUSH_DISABLED          0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_3_TRIEND_FLUSH_ENABLED           0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3_DATA_CHECK                          20:20 /* RWIVF */
#define NV_PGRAPH_DEBUG_3_DATA_CHECK_DISABLED            0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_3_DATA_CHECK_ENABLED             0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3_DATA_CHECK_FAIL                     21:21 /* RWIVF */
#define NV_PGRAPH_DEBUG_3_DATA_CHECK_FAIL_DISABLED       0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_3_DATA_CHECK_FAIL_ENABLED        0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3_FORMAT_CHECK                        22:22 /* RWIVF */
#define NV_PGRAPH_DEBUG_3_FORMAT_CHECK_DISABLED          0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_3_FORMAT_CHECK_ENABLED           0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3_DMA_CHECK                           23:23 /* RWIVF */
#define NV_PGRAPH_DEBUG_3_DMA_CHECK_DISABLED             0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_3_DMA_CHECK_ENABLED              0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3_RAMREADBACK                         24:24 /* RWIVF */
#define NV_PGRAPH_DEBUG_3_RAMREADBACK_DISABLED           0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_3_RAMREADBACK_ENABLED            0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3_CLIP_METHODS                        25:25 /* RWIVF */
#define NV_PGRAPH_DEBUG_3_CLIP_METHODS_DISABLED          0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_3_CLIP_METHODS_ENABLED           0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3_EXCLUDE_ROP_IN_IDLE                 27:27 /* RWIVF */
#define NV_PGRAPH_DEBUG_3_EXCLUDE_ROP_IN_IDLE_DISABLED   0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_3_EXCLUDE_ROP_IN_IDLE_ENABLED    0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3_STATE_CHECK                         28:28 /* RWIVF */
#define NV_PGRAPH_DEBUG_3_STATE_CHECK_DISABLED           0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_3_STATE_CHECK_ENABLED            0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3_CONTEXT_METHODS                     29:29 /* RWIVF */
#define NV_PGRAPH_DEBUG_3_CONTEXT_METHODS_DISABLED       0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_3_CONTEXT_METHODS_ENABLED        0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3_OPERATION_METHOD                    30:30 /* RWIVF */
#define NV_PGRAPH_DEBUG_3_OPERATION_METHOD_DISABLED      0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_3_OPERATION_METHOD_ENABLED       0x00000001 /* RW--V */
#define NV_PGRAPH_DEBUG_3_IGNORE_PATCHVALID                   31:31 /* RWIVF */
#define NV_PGRAPH_DEBUG_3_IGNORE_PATCHVALID_DISABLED     0x00000000 /* RWI-V */
#define NV_PGRAPH_DEBUG_3_IGNORE_PATCHVALID_ENABLED      0x00000001 /* RW--V */
#define NV_PGRAPH_NSTATUS                                0x00400104 /* RW-4R */
#define NV_PGRAPH_NSTATUS_STATE_IN_USE                        11:11 /* RWIVF */
#define NV_PGRAPH_NSTATUS_STATE_IN_USE_NOT_PENDING       0x00000000 /* RWI-V */
#define NV_PGRAPH_NSTATUS_STATE_IN_USE_PENDING           0x00000001 /* RW--V */
#define NV_PGRAPH_NSTATUS_INVALID_STATE                       12:12 /* RWIVF */
#define NV_PGRAPH_NSTATUS_INVALID_STATE_NOT_PENDING      0x00000000 /* RWI-V */
#define NV_PGRAPH_NSTATUS_INVALID_STATE_PENDING          0x00000001 /* RW--V */
#define NV_PGRAPH_NSTATUS_BAD_ARGUMENT                        13:13 /* RWIVF */
#define NV_PGRAPH_NSTATUS_BAD_ARGUMENT_NOT_PENDING       0x00000000 /* RWI-V */
#define NV_PGRAPH_NSTATUS_BAD_ARGUMENT_PENDING           0x00000001 /* RW--V */
#define NV_PGRAPH_NSTATUS_PROTECTION_FAULT                    14:14 /* RWIVF */
#define NV_PGRAPH_NSTATUS_PROTECTION_FAULT_NOT_PENDING   0x00000000 /* RWI-V */
#define NV_PGRAPH_NSTATUS_PROTECTION_FAULT_PENDING       0x00000001 /* RW--V */
#define NV_PGRAPH_CTX_CONTROL                            0x00400170 /* RW-4R */
#define NV_PGRAPH_CTX_CONTROL_MINIMUM_TIME                      1:0 /* RWIVF */
#define NV_PGRAPH_CTX_CONTROL_MINIMUM_TIME_33US          0x00000000 /* RWI-V */
#define NV_PGRAPH_CTX_CONTROL_MINIMUM_TIME_262US         0x00000001 /* RW--V */
#define NV_PGRAPH_CTX_CONTROL_MINIMUM_TIME_2MS           0x00000002 /* RW--V */
#define NV_PGRAPH_CTX_CONTROL_MINIMUM_TIME_17MS          0x00000003 /* RW--V */
#define NV_PGRAPH_CTX_CONTROL_TIME                              8:8 /* RWIVF */
#define NV_PGRAPH_CTX_CONTROL_TIME_EXPIRED               0x00000000 /* RWI-V */
#define NV_PGRAPH_CTX_CONTROL_TIME_NOT_EXPIRED           0x00000001 /* RW--V */
#define NV_PGRAPH_CTX_CONTROL_CHID                            16:16 /* RWIVF */
#define NV_PGRAPH_CTX_CONTROL_CHID_INVALID               0x00000000 /* RWI-V */
#define NV_PGRAPH_CTX_CONTROL_CHID_VALID                 0x00000001 /* RW--V */
#define NV_PGRAPH_CTX_CONTROL_CHANGE                          20:20 /* R--VF */
#define NV_PGRAPH_CTX_CONTROL_CHANGE_UNAVAILABLE         0x00000000 /* R---V */
#define NV_PGRAPH_CTX_CONTROL_CHANGE_AVAILABLE           0x00000001 /* R---V */
#define NV_PGRAPH_CTX_CONTROL_SWITCHING                       24:24 /* RWIVF */
#define NV_PGRAPH_CTX_CONTROL_SWITCHING_IDLE             0x00000000 /* RWI-V */
#define NV_PGRAPH_CTX_CONTROL_SWITCHING_BUSY             0x00000001 /* RW--V */
#define NV_PGRAPH_CTX_CONTROL_DEVICE                          28:28 /* RWIVF */
#define NV_PGRAPH_CTX_CONTROL_DEVICE_DISABLED            0x00000000 /* RWI-V */
#define NV_PGRAPH_CTX_CONTROL_DEVICE_ENABLED             0x00000001 /* RW--V */
#define NV_PGRAPH_CTX_USER                               0x00400174 /* RW-4R */
#define NV_PGRAPH_CTX_USER_SUBCH                              15:13 /* RWIVF */
#define NV_PGRAPH_CTX_USER_SUBCH_0                       0x00000000 /* RWI-V */
#define NV_PGRAPH_CTX_USER_CHID                               28:24 /* RWIVF */
#define NV_PGRAPH_CTX_USER_CHID_0                        0x00000000 /* RWI-V */
#define NV_PGRAPH_CTX_USER_SINGLE_STEP                        31:31 /* RWIVF */
#define NV_PGRAPH_CTX_USER_SINGLE_STEP_DISABLED          0x00000000 /* RWI-V */
#define NV_PGRAPH_CTX_USER_SINGLE_STEP_ENABLED           0x00000001 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH1                            0x00400160 /* RW-4R */
#define NV_PGRAPH_CTX_SWITCH2                            0x00400164 /* RW-4R */
#define NV_PGRAPH_CTX_SWITCH2_MONO_FORMAT                       1:0 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH2_MONO_FORMAT_INVALID              0x00 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_MONO_FORMAT_CGA6_M1              0x01 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_MONO_FORMAT_LE_M1                0x02 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT                     13:8 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_INVALID             0x00 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_Y8               0x01 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_X16A8Y8          0x02 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_X24Y8            0x03 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_A1R5G5B5         0x06 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_X1R5G5B5         0x07 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_X16A1R5G5B5      0x08 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_X17R5G5B5        0x09 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_R5G6B5           0x0A /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_A16R5G6B5        0x0B /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_X16R5G6B5        0x0C /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_A8R8G8B8         0x0D /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_X8R8G8B8         0x0E /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_Y16              0x0F /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_A16Y16           0x10 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_X16Y16           0x11 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_V8YB8U8YA8       0x12 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_YB8V8YA8U8       0x13 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_Y32              0x14 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_AY8              0x15 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_EYB8ECR8EYA8ECB8 0x16 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_COLOR_FORMAT_LE_ECR8EYB8ECB8EYA8 0x17 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH2_NOTIFY_INSTANCE                 31:16 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH2_NOTIFY_INSTANCE_INVALID        0x0000 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH3                            0x00400168 /* RW-4R */
#define NV_PGRAPH_CTX_SWITCH3_DMA_INSTANCE_0                   15:0 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH3_DMA_INSTANCE_0_INVALID         0x0000 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH3_DMA_INSTANCE_1                  31:16 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH3_DMA_INSTANCE_1_INVALID         0x0000 /* RW--V */
#define NV_PGRAPH_CTX_SWITCH4                            0x0040016C /* RW-4R */
#define NV_PGRAPH_CTX_SWITCH4_USER_INSTANCE                    15:0 /* RWXUF */
#define NV_PGRAPH_CTX_SWITCH4_USER_INSTANCE_INVALID          0x0000 /* RW--V */
#define NV_PGRAPH_CTX_CACHE1(i)                  (0x00400180+(i)*4) /* RW-4A */
#define NV_PGRAPH_CTX_CACHE1__SIZE_1                              8 /*       */
#define NV_PGRAPH_CTX_CACHE1_GRCLASS                            7:0 /* RWXVF */
#define NV_PGRAPH_CTX_CACHE1_CHROMA_KEY                       12:12 /* RWXVF */
#define NV_PGRAPH_CTX_CACHE1_USER_CLIP                        13:13 /* RWXVF */
#define NV_PGRAPH_CTX_CACHE1_SWIZZLE                          14:14 /* RWXVF */
#define NV_PGRAPH_CTX_CACHE1_PATCH_CONFIG                     17:15 /* RWXVF */
#define NV_PGRAPH_CTX_CACHE1_SYNCHRONIZE                      18:18 /* RWXVF */
#define NV_PGRAPH_CTX_CACHE1_ENDIAN_MODE                      19:19 /* RWXVF */
#define NV_PGRAPH_CTX_CACHE1_DITHER_MODE                      21:20 /* RWXVF */
#define NV_PGRAPH_CTX_CACHE1_CLASS_TYPE                       22:22 /* RWXVF */
#define NV_PGRAPH_CTX_CACHE1_SINGLE_STEP                      23:23 /* RWXVF */
#define NV_PGRAPH_CTX_CACHE1_PATCH_STATUS                     24:24 /* RWXVF */
#define NV_PGRAPH_CTX_CACHE1_CONTEXT_SURFACE                  25:25 /* RWXVF */
#define NV_PGRAPH_CTX_CACHE1_CONTEXT_SURFACE0                 25:25 /* RWXVF */
#define NV_PGRAPH_CTX_CACHE1_CONTEXT_SURFACE1                 26:26 /* RWXVF */
#define NV_PGRAPH_CTX_CACHE1_CONTEXT_PATTERN                  27:27 /* RWXVF */
#define NV_PGRAPH_CTX_CACHE1_CONTEXT_ROP                      28:28 /* RWXVF */
#define NV_PGRAPH_CTX_CACHE1_CONTEXT_BETA1                    29:29 /* RWXVF */
#define NV_PGRAPH_CTX_CACHE1_CONTEXT_BETA4                    30:30 /* RWXVF */
#define NV_PGRAPH_CTX_CACHE2(i)                  (0x004001a0+(i)*4) /* RW-4A */
#define NV_PGRAPH_CTX_CACHE2__SIZE_1                              8 /*       */
#define NV_PGRAPH_CTX_CACHE2_MONO_FORMAT                        1:0 /* RWXVF */
#define NV_PGRAPH_CTX_CACHE2_COLOR_FORMAT                      13:8 /* RWXVF */
#define NV_PGRAPH_CTX_CACHE2_NOTIFY_INSTANCE                  31:16 /* RWXVF */
#define NV_PGRAPH_CTX_CACHE3(i)                  (0x004001c0+(i)*4) /* RW-4A */
#define NV_PGRAPH_CTX_CACHE3__SIZE_1                              8 /*       */
#define NV_PGRAPH_CTX_CACHE3_DMA_INSTANCE_0                    15:0 /* RWXVF */
#define NV_PGRAPH_CTX_CACHE3_DMA_INSTANCE_1                   31:16 /* RWXVF */
#define NV_PGRAPH_CTX_CACHE4(i)                  (0x004001e0+(i)*4) /* RW-4A */
#define NV_PGRAPH_CTX_CACHE4__SIZE_1                              8 /*       */
#define NV_PGRAPH_CTX_CACHE4_USER_INSTANCE                     15:0 /* RWXVF */
#define NV_PGRAPH_FFINTFC_FIFO_0(i)              (0x00400730+(i)*4) /* RW-4A */
#define NV_PGRAPH_FFINTFC_FIFO_0__SIZE_1                          4 /*       */
#define NV_PGRAPH_FFINTFC_FIFO_0_TAG                            0:0 /* RWXVF */
#define NV_PGRAPH_FFINTFC_FIFO_0_TAG_MTHD                0x00000000 /* RW--V */
#define NV_PGRAPH_FFINTFC_FIFO_0_TAG_CHSW                0x00000001 /* RW--V */
#define NV_PGRAPH_FFINTFC_FIFO_0_SUBCH                          3:1 /* RWXVF */
#define NV_PGRAPH_FFINTFC_FIFO_0_SUBCH_0                 0x00000000 /* RW--V */
#define NV_PGRAPH_FFINTFC_FIFO_0_SUBCH_1                 0x00000001 /* RW--V */
#define NV_PGRAPH_FFINTFC_FIFO_0_SUBCH_2                 0x00000002 /* RW--V */
#define NV_PGRAPH_FFINTFC_FIFO_0_SUBCH_3                 0x00000003 /* RW--V */
#define NV_PGRAPH_FFINTFC_FIFO_0_SUBCH_4                 0x00000004 /* RW--V */
#define NV_PGRAPH_FFINTFC_FIFO_0_SUBCH_5                 0x00000005 /* RW--V */
#define NV_PGRAPH_FFINTFC_FIFO_0_SUBCH_6                 0x00000006 /* RW--V */
#define NV_PGRAPH_FFINTFC_FIFO_0_SUBCH_7                 0x00000007 /* RW--V */
#define NV_PGRAPH_FFINTFC_FIFO_0_MTHD                          14:4 /* RWXVF */
#define NV_PGRAPH_FFINTFC_FIFO_0_MTHD_CTX_SWITCH         0x00000000 /* RW--V */
#define NV_PGRAPH_FFINTFC_FIFO_1(i)              (0x00400740+(i)*4) /* RW-4A */
#define NV_PGRAPH_FFINTFC_FIFO_1__SIZE_1                          4 /*       */
#define NV_PGRAPH_FFINTFC_FIFO_1_ARGUMENT                      31:0 /* RWXVF */
#define NV_PGRAPH_FFINTFC_FIFO_2(i)              (0x00400750+(i)*4) /* RW-4A */
#define NV_PGRAPH_FFINTFC_FIFO_2__SIZE_1                          4 /*       */
#define NV_PGRAPH_FFINTFC_FIFO_2_ARGUMENT                      31:0 /* RWXVF */
#define NV_PGRAPH_FFINTFC_FIFO_PTR                       0x00400750 /* RW-4R */
#define NV_PGRAPH_FFINTFC_FIFO_PTR_WRITE                        2:0 /* RWIVF */
#define NV_PGRAPH_FFINTFC_FIFO_PTR_WRITE_0               0x00000000 /* RWI-V */
#define NV_PGRAPH_FFINTFC_FIFO_PTR_READ                         6:4 /* RWIVF */
#define NV_PGRAPH_FFINTFC_FIFO_PTR_READ_0                0x00000000 /* RWI-V */
#define NV_PGRAPH_FFINTFC_ST2                            0x00400754 /* RW-4R */
#define NV_PGRAPH_FFINTFC_ST2_STATUS                            0:0 /* RWIVF */
#define NV_PGRAPH_FFINTFC_ST2_STATUS_INVALID             0x00000000 /* RWI-V */
#define NV_PGRAPH_FFINTFC_ST2_STATUS_VALID               0x00000001 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_MTHD                             11:1 /* RWIVF */
#define NV_PGRAPH_FFINTFC_ST2_MTHD_CTX_SWITCH            0x00000000 /* RWI-V */
#define NV_PGRAPH_FFINTFC_ST2_SUBCH                           14:12 /* RWIVF */
#define NV_PGRAPH_FFINTFC_ST2_SUBCH_0                    0x00000000 /* RWI-V */
#define NV_PGRAPH_FFINTFC_ST2_SUBCH_1                    0x00000001 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_SUBCH_2                    0x00000002 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_SUBCH_3                    0x00000003 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_SUBCH_4                    0x00000004 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_SUBCH_5                    0x00000005 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_SUBCH_6                    0x00000006 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_SUBCH_7                    0x00000007 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID                            18:15 /* RWIVF */
#define NV_PGRAPH_FFINTFC_ST2_CHID_0                     0x00000000 /* RWI-V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_1                     0x00000001 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_2                     0x00000002 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_3                     0x00000003 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_4                     0x00000004 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_5                     0x00000005 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_6                     0x00000006 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_7                     0x00000007 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_8                     0x00000008 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_9                     0x00000009 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_10                    0x0000000A /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_11                    0x0000000B /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_12                    0x0000000C /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_13                    0x0000000D /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_14                    0x0000000E /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_15                    0x0000000F /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_16                    0x00000010 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_17                    0x00000011 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_18                    0x00000012 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_19                    0x00000013 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_20                    0x00000014 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_21                    0x00000015 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_22                    0x00000016 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_23                    0x00000017 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_24                    0x00000018 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_25                    0x00000019 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_26                    0x0000001A /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_27                    0x0000001B /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_28                    0x0000001C /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_29                    0x0000001D /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_30                    0x0000001E /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_31                    0x0000001F /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_STATUS                     19:19 /* RWIVF */
#define NV_PGRAPH_FFINTFC_ST2_CHID_STATUS_INVALID        0x00000000 /* RWI-V */
#define NV_PGRAPH_FFINTFC_ST2_CHID_STATUS_VALID          0x00000001 /* RW--V */
#define NV_PGRAPH_FFINTFC_ST2_CH_SWITCH_DETECT                20:20 /* -WIVF */
#define NV_PGRAPH_FFINTFC_ST2_CH_SWITCH_DETECT_CLEAR     0x00000000 /* -WI-V */
#define NV_PGRAPH_FFINTFC_ST2_CH_SWITCH_DETECT_SET       0x00000001 /* -W--V */
#define NV_PGRAPH_FFINTFC_ST2_FIFO_HOLD                       21:21 /* -WIVF */
#define NV_PGRAPH_FFINTFC_ST2_FIFO_HOLD_CLEAR            0x00000000 /* -WI-V */
#define NV_PGRAPH_FFINTFC_ST2_FIFO_HOLD_SET              0x00000001 /* -W--V */
#define NV_PGRAPH_FFINTFC_ST2_D                          0x00400758 /* RW-4R */
#define NV_PGRAPH_FFINTFC_ST2_D_ARGUMENT                       31:0 /* RWIVF */
#define NV_PGRAPH_FFINTFC_ST2_D_ARGUMENT_0               0x00000000 /* RWI-V */
#define NV_PGRAPH_STATUS                                 0x00400700 /* R--4R */
#define NV_PGRAPH_STATUS_STATE                                  0:0 /* R-IVF */
#define NV_PGRAPH_STATUS_STATE_IDLE                      0x00000000 /* R-I-V */
#define NV_PGRAPH_STATUS_STATE_BUSY                      0x00000001 /* R---V */
#define NV_PGRAPH_STATUS_XY_LOGIC                               4:4 /* R-IVF */
#define NV_PGRAPH_STATUS_XY_LOGIC_IDLE                   0x00000000 /* R-I-V */
#define NV_PGRAPH_STATUS_XY_LOGIC_BUSY                   0x00000001 /* R---V */
#define NV_PGRAPH_STATUS_FE                                     5:5 /* R-IVF */
#define NV_PGRAPH_STATUS_FE_IDLE                         0x00000000 /* R-I-V */
#define NV_PGRAPH_STATUS_FE_BUSY                         0x00000001 /* R---V */
#define NV_PGRAPH_STATUS_RASTERIZER                             6:6 /* R-IVF */
#define NV_PGRAPH_STATUS_RASTERIZER_IDLE                 0x00000000 /* R-I-V */
#define NV_PGRAPH_STATUS_RASTERIZER_BUSY                 0x00000001 /* R---V */
#define NV_PGRAPH_STATUS_PORT_NOTIFY                            8:8 /* R-IVF */
#define NV_PGRAPH_STATUS_PORT_NOTIFY_IDLE                0x00000000 /* R-I-V */
#define NV_PGRAPH_STATUS_PORT_NOTIFY_BUSY                0x00000001 /* R---V */
#define NV_PGRAPH_STATUS_PORT_REGISTER                        12:12 /* R-IVF */
#define NV_PGRAPH_STATUS_PORT_REGISTER_IDLE              0x00000000 /* R-I-V */
#define NV_PGRAPH_STATUS_PORT_REGISTER_BUSY              0x00000001 /* R---V */
#define NV_PGRAPH_STATUS_PORT_DMA                             16:16 /* R-IVF */
#define NV_PGRAPH_STATUS_PORT_DMA_IDLE                   0x00000000 /* R-I-V */
#define NV_PGRAPH_STATUS_PORT_DMA_BUSY                   0x00000001 /* R---V */
#define NV_PGRAPH_STATUS_DMA_ENGINE                           17:17 /* R-IVF */
#define NV_PGRAPH_STATUS_DMA_ENGINE_IDLE                 0x00000000 /* R-I-V */
#define NV_PGRAPH_STATUS_DMA_ENGINE_BUSY                 0x00000001 /* R---V */
#define NV_PGRAPH_STATUS_DMA_NOTIFY                           20:20 /* R-IVF */
#define NV_PGRAPH_STATUS_DMA_NOTIFY_IDLE                 0x00000000 /* R-I-V */
#define NV_PGRAPH_STATUS_DMA_NOTIFY_BUSY                 0x00000001 /* R---V */
#define NV_PGRAPH_STATUS_DMA_BUFFER_NOTIFY                    21:21 /* R-IVF */
#define NV_PGRAPH_STATUS_DMA_BUFFER_NOTIFY_IDLE          0x00000000 /* R-I-V */
#define NV_PGRAPH_STATUS_DMA_BUFFER_NOTIFY_BUSY          0x00000001 /* R---V */
#define NV_PGRAPH_STATUS_D3D                                  24:24 /* R-IVF */
#define NV_PGRAPH_STATUS_D3D_IDLE                        0x00000000 /* R-I-V */
#define NV_PGRAPH_STATUS_D3D_BUSY                        0x00000001 /* R---V */
#define NV_PGRAPH_STATUS_CACHE                                25:25 /* R-IVF */
#define NV_PGRAPH_STATUS_CACHE_IDLE                      0x00000000 /* R-I-V */
#define NV_PGRAPH_STATUS_CACHE_BUSY                      0x00000001 /* R---V */
#define NV_PGRAPH_STATUS_LIGHTING                             26:26 /* R-IVF */
#define NV_PGRAPH_STATUS_LIGHTING_IDLE                   0x00000000 /* R-I-V */
#define NV_PGRAPH_STATUS_LIGHTING_BUSY                   0x00000001 /* R---V */
#define NV_PGRAPH_STATUS_PREROP                               27:27 /* R-IVF */
#define NV_PGRAPH_STATUS_PREROP_IDLE                     0x00000000 /* R-I-V */
#define NV_PGRAPH_STATUS_PREROP_BUSY                     0x00000001 /* R---V */
#define NV_PGRAPH_STATUS_ROP                                  28:28 /* R-IVF */
#define NV_PGRAPH_STATUS_ROP_IDLE                        0x00000000 /* R-I-V */
#define NV_PGRAPH_STATUS_ROP_BUSY                        0x00000001 /* R---V */
#define NV_PGRAPH_STATUS_PORT_USER                            29:29 /* R-IVF */
#define NV_PGRAPH_STATUS_PORT_USER_IDLE                  0x00000000 /* R-I-V */
#define NV_PGRAPH_STATUS_PORT_USER_BUSY                  0x00000001 /* R---V */
#define NV_PGRAPH_TRAPPED_ADDR                           0x00400704 /* R--4R */
#define NV_PGRAPH_TRAPPED_ADDR_MTHD                            12:2 /* R-XUF */
#define NV_PGRAPH_TRAPPED_ADDR_SUBCH                          15:13 /* R-XUF */
#define NV_PGRAPH_TRAPPED_ADDR_CHID                           27:24 /* R-XUF */
#define NV_PGRAPH_TRAPPED_DATA                           0x00400708 /* R--4R */
#define NV_PGRAPH_TRAPPED_DATA_VALUE                           31:0 /* R-XVF */
#define NV_PGRAPH_SURFACE                                0x0040070C /* RW-4R */
#define NV_PGRAPH_SURFACE_TYPE                                  1:0 /* RWIVF */
#define NV_PGRAPH_SURFACE_TYPE_INVALID                   0x00000000 /* RWI-V */
#define NV_PGRAPH_SURFACE_TYPE_NON_SWIZZLE               0x00000001 /* RW--V */
#define NV_PGRAPH_SURFACE_TYPE_SWIZZLE                   0x00000002 /* RW--V */
#define NV_PGRAPH_SURFACE_TYPE_053                       0x00000001 /* RWC-V */
#define NV_PGRAPH_NOTIFY                                 0x00400714 /* RW-4R */
#define NV_PGRAPH_NOTIFY_BUFFER_REQ                             0:0 /* RWIVF */
#define NV_PGRAPH_NOTIFY_BUFFER_REQ_NOT_PENDING          0x00000000 /* RWI-V */
#define NV_PGRAPH_NOTIFY_BUFFER_REQ_PENDING              0x00000001 /* RW--V */
#define NV_PGRAPH_NOTIFY_BUFFER_STYLE                           8:8 /* RWIVF */
#define NV_PGRAPH_NOTIFY_BUFFER_STYLE_WRITE_ONLY         0x00000000 /* RWI-V */
#define NV_PGRAPH_NOTIFY_BUFFER_STYLE_WRITE_THEN_AWAKEN  0x00000001 /* RW--V */
#define NV_PGRAPH_NOTIFY_REQ                                  16:16 /* RWIVF */
#define NV_PGRAPH_NOTIFY_REQ_NOT_PENDING                 0x00000000 /* RWI-V */
#define NV_PGRAPH_NOTIFY_REQ_PENDING                     0x00000001 /* RW--V */
#define NV_PGRAPH_NOTIFY_STYLE                                20:20 /* RWIVF */
#define NV_PGRAPH_NOTIFY_STYLE_WRITE_ONLY                0x00000000 /* RWI-V */
#define NV_PGRAPH_NOTIFY_STYLE_WRITE_THEN_AWAKEN         0x00000001 /* RW--V */
#define NV_PGRAPH_BOFFSET(i)                     (0x00400640+(i)*4) /* RW-4A */
#define NV_PGRAPH_BOFFSET__SIZE_1                                 6 /*       */
#define NV_PGRAPH_BOFFSET_LINADRS                              26:0 /* RWIUF */
#define NV_PGRAPH_BOFFSET_LINADRS_0                      0x00000000 /* RWI-V */
#define NV_PGRAPH_BOFFSET0                               0x00400640 /* RW-4R */
#define NV_PGRAPH_BOFFSET0__ALIAS_1            NV_PGRAPH_BOFFSET(0) /*       */
#define NV_PGRAPH_BOFFSET0_LINADRS                             26:0 /* RWIUF */
#define NV_PGRAPH_BOFFSET0_LINADRS_0                     0x00000000 /* RWI-V */
#define NV_PGRAPH_BOFFSET0_LINADRS_042                   0x00000000 /* RWC-V */
#define NV_PGRAPH_BOFFSET0_LINADRS_058                   0x00000000 /* RWC-V */
#define NV_PGRAPH_BOFFSET1                               0x00400644 /* RW-4R */
#define NV_PGRAPH_BOFFSET1__ALIAS_1            NV_PGRAPH_BOFFSET(1) /*       */
#define NV_PGRAPH_BOFFSET1_LINADRS                             26:0 /* RWIUF */
#define NV_PGRAPH_BOFFSET1_LINADRS_0                     0x00000000 /* RWI-V */
#define NV_PGRAPH_BOFFSET1_LINADRS_042                   0x00000000 /* RWC-V */
#define NV_PGRAPH_BOFFSET1_LINADRS_059                   0x00000000 /* RWC-V */
#define NV_PGRAPH_BOFFSET2                               0x00400648 /* RW-4R */
#define NV_PGRAPH_BOFFSET2__ALIAS_1            NV_PGRAPH_BOFFSET(2) /*       */
#define NV_PGRAPH_BOFFSET2_LINADRS                             26:0 /* RWIUF */
#define NV_PGRAPH_BOFFSET2_LINADRS_0                     0x00000000 /* RWI-V */
#define NV_PGRAPH_BOFFSET2_LINADRS_053                   0x00000000 /* RWC-V */
#define NV_PGRAPH_BOFFSET2_LINADRS_05A                   0x00000000 /* RWC-V */
#define NV_PGRAPH_BOFFSET3                               0x0040064C /* RW-4R */
#define NV_PGRAPH_BOFFSET3__ALIAS_1            NV_PGRAPH_BOFFSET(3) /*       */
#define NV_PGRAPH_BOFFSET3_LINADRS                             26:0 /* RWIUF */
#define NV_PGRAPH_BOFFSET3_LINADRS_0                     0x00000000 /* RWI-V */
#define NV_PGRAPH_BOFFSET3_LINADRS_053                   0x00000000 /* RWC-V */
#define NV_PGRAPH_BOFFSET3_LINADRS_05B                   0x00000000 /* RWC-V */
#define NV_PGRAPH_BOFFSET4                               0x00400650 /* RW-4R */
#define NV_PGRAPH_BOFFSET4__ALIAS_1            NV_PGRAPH_BOFFSET(4) /*       */
#define NV_PGRAPH_BOFFSET4_LINADRS                             26:0 /* RWIUF */
#define NV_PGRAPH_BOFFSET4_LINADRS_0                     0x00000000 /* RWI-V */
#define NV_PGRAPH_BOFFSET5                               0x00400654 /* RW-4R */
#define NV_PGRAPH_BOFFSET5__ALIAS_1            NV_PGRAPH_BOFFSET(5) /*       */
#define NV_PGRAPH_BOFFSET5_LINADRS                             26:0 /* RWIUF */
#define NV_PGRAPH_BOFFSET5_LINADRS_0                     0x00000000 /* RWI-V */
#define NV_PGRAPH_BOFFSET5_LINADRS_052                   0x00000000 /* RWC-V */
#define NV_PGRAPH_BBASE(i)                       (0x00400658+(i)*4) /* RW-4A */
#define NV_PGRAPH_BBASE__SIZE_1                                   6 /*       */
#define NV_PGRAPH_BBASE_LINADRS                                26:0 /* RWIUF */
#define NV_PGRAPH_BBASE_LINADRS_0                        0x00000000 /* RWI-V */
#define NV_PGRAPH_BBASE0                                 0x00400658 /* RW-4R */
#define NV_PGRAPH_BBASE0__ALIAS_1                NV_PGRAPH_BBASE(0) /*       */
#define NV_PGRAPH_BBASE0_LINADRS                               26:0 /* RWIUF */
#define NV_PGRAPH_BBASE0_LINADRS_0                       0x00000000 /* RWI-V */
#define NV_PGRAPH_BBASE1                                 0x0040065c /* RW-4R */
#define NV_PGRAPH_BBASE1__ALIAS_1                NV_PGRAPH_BBASE(1) /*       */
#define NV_PGRAPH_BBASE1_LINADRS                               26:0 /* RWIUF */
#define NV_PGRAPH_BBASE1_LINADRS_0                       0x00000000 /* RWI-V */
#define NV_PGRAPH_BBASE2                                 0x00400660 /* RW-4R */
#define NV_PGRAPH_BBASE2__ALIAS_1                NV_PGRAPH_BBASE(2) /*       */
#define NV_PGRAPH_BBASE2_LINADRS                               26:0 /* RWIUF */
#define NV_PGRAPH_BBASE2_LINADRS_0                       0x00000000 /* RWI-V */
#define NV_PGRAPH_BBASE3                                 0x00400664 /* RW-4R */
#define NV_PGRAPH_BBASE3__ALIAS_1                NV_PGRAPH_BBASE(3) /*       */
#define NV_PGRAPH_BBASE3_LINADRS                               26:0 /* RWIUF */
#define NV_PGRAPH_BBASE3_LINADRS_0                       0x00000000 /* RWI-V */
#define NV_PGRAPH_BBASE4                                 0x00400668 /* RW-4R */
#define NV_PGRAPH_BBASE4__ALIAS_1                NV_PGRAPH_BBASE(4) /*       */
#define NV_PGRAPH_BBASE4_LINADRS                               26:0 /* RWIUF */
#define NV_PGRAPH_BBASE4_LINADRS_0                       0x00000000 /* RWI-V */
#define NV_PGRAPH_BBASE5                                 0x0040066C /* RW-4R */
#define NV_PGRAPH_BBASE5__ALIAS_1                NV_PGRAPH_BBASE(5) /*       */
#define NV_PGRAPH_BBASE5_LINADRS                               26:0 /* RWIUF */
#define NV_PGRAPH_BBASE5_LINADRS_0                       0x00000000 /* RWI-V */
#define NV_PGRAPH_BPITCH(i)                      (0x00400670+(i)*4) /* RW-4A */
#define NV_PGRAPH_BPITCH__SIZE_1                                  5 /*       */
#define NV_PGRAPH_BPITCH_VALUE                                 15:0 /* RWIUF */
#define NV_PGRAPH_BPITCH_VALUE_0                         0x00000000 /* RWI-V */
#define NV_PGRAPH_BPITCH0                                0x00400670 /* RW-4R */
#define NV_PGRAPH_BPITCH0__ALIAS_1              NV_PGRAPH_BPITCH(0) /*       */
#define NV_PGRAPH_BPITCH0_VALUE                                15:0 /* RWIUF */
#define NV_PGRAPH_BPITCH0_VALUE_0                        0x00000000 /* RWI-V */
#define NV_PGRAPH_BPITCH0_VALUE_042                      0x00000020 /* RWC-V */
#define NV_PGRAPH_BPITCH0_VALUE_058                      0x00000010 /* RWC-V */
#define NV_PGRAPH_BPITCH1                                0x00400674 /* RW-4R */
#define NV_PGRAPH_BPITCH1__ALIAS_1              NV_PGRAPH_BPITCH(1) /*       */
#define NV_PGRAPH_BPITCH1_VALUE                                15:0 /* RWIUF */
#define NV_PGRAPH_BPITCH1_VALUE_0                        0x00000000 /* RWI-V */
#define NV_PGRAPH_BPITCH1_VALUE_042                      0x00000020 /* RWC-V */
#define NV_PGRAPH_BPITCH1_VALUE_059                      0x00000010 /* RWC-V */
#define NV_PGRAPH_BPITCH2                                0x00400678 /* RW-4R */
#define NV_PGRAPH_BPITCH2__ALIAS_1              NV_PGRAPH_BPITCH(2) /*       */
#define NV_PGRAPH_BPITCH2_VALUE                                15:0 /* RWIUF */
#define NV_PGRAPH_BPITCH2_VALUE_0                        0x00000000 /* RWI-V */
#define NV_PGRAPH_BPITCH2_VALUE_053                      0x00000020 /* RWC-V */
#define NV_PGRAPH_BPITCH2_VALUE_05A                      0x00000010 /* RWC-V */
#define NV_PGRAPH_BPITCH3                                0x0040067C /* RW-4R */
#define NV_PGRAPH_BPITCH3__ALIAS_1              NV_PGRAPH_BPITCH(3) /*       */
#define NV_PGRAPH_BPITCH3_VALUE                                15:0 /* RWIUF */
#define NV_PGRAPH_BPITCH3_VALUE_0                        0x00000000 /* RWI-V */
#define NV_PGRAPH_BPITCH3_VALUE_053                      0x00000020 /* RWC-V */
#define NV_PGRAPH_BPITCH3_VALUE_05B                      0x00000010 /* RWC-V */
#define NV_PGRAPH_BPITCH4                                0x00400680 /* RW-4R */
#define NV_PGRAPH_BPITCH4__ALIAS_1              NV_PGRAPH_BPITCH(4) /*       */
#define NV_PGRAPH_BPITCH4_VALUE                                15:0 /* RWIUF */
#define NV_PGRAPH_BPITCH4_VALUE_0                        0x00000000 /* RWI-V */
#define NV_PGRAPH_BLIMIT(i)                      (0x00400684+(i)*4) /* RW-4A */
#define NV_PGRAPH_BLIMIT__SIZE_1                                  6 /*       */
#define NV_PGRAPH_BLIMIT_VALUE                                 26:0 /* RWXUF */
#define NV_PGRAPH_BLIMIT_TYPE                                 31:31 /* RWIVF */
#define NV_PGRAPH_BLIMIT_TYPE_IN_MEMORY                  0x00000000 /* RW--V */
#define NV_PGRAPH_BLIMIT_TYPE_NULL                       0x00000001 /* RWI-V */
#define NV_PGRAPH_BLIMIT0                                0x00400684 /* RW-4R */
#define NV_PGRAPH_BLIMIT0__ALIAS_1              NV_PGRAPH_BLIMIT(0) /*       */
#define NV_PGRAPH_BLIMIT0_VALUE                                26:0 /* RWXUF */
#define NV_PGRAPH_BLIMIT0_TYPE                                31:31 /* RWIVF */
#define NV_PGRAPH_BLIMIT0_TYPE_IN_MEMORY                 0x00000000 /* RW--V */
#define NV_PGRAPH_BLIMIT0_TYPE_NULL                      0x00000001 /* RWI-V */
#define NV_PGRAPH_BLIMIT1                                0x00400688 /* RW-4R */
#define NV_PGRAPH_BLIMIT1__ALIAS_1              NV_PGRAPH_BLIMIT(1) /*       */
#define NV_PGRAPH_BLIMIT1_VALUE                                26:0 /* RWXUF */
#define NV_PGRAPH_BLIMIT1_TYPE                                31:31 /* RWIVF */
#define NV_PGRAPH_BLIMIT1_TYPE_IN_MEMORY                 0x00000000 /* RW--V */
#define NV_PGRAPH_BLIMIT1_TYPE_NULL                      0x00000001 /* RWI-V */
#define NV_PGRAPH_BLIMIT2                                0x0040068c /* RW-4R */
#define NV_PGRAPH_BLIMIT2__ALIAS_1              NV_PGRAPH_BLIMIT(2) /*       */
#define NV_PGRAPH_BLIMIT2_VALUE                                26:0 /* RWXUF */
#define NV_PGRAPH_BLIMIT2_TYPE                                31:31 /* RWIVF */
#define NV_PGRAPH_BLIMIT2_TYPE_IN_MEMORY                 0x00000000 /* RW--V */
#define NV_PGRAPH_BLIMIT2_TYPE_NULL                      0x00000001 /* RWI-V */
#define NV_PGRAPH_BLIMIT3                                0x00400690 /* RW-4R */
#define NV_PGRAPH_BLIMIT3__ALIAS_1              NV_PGRAPH_BLIMIT(3) /*       */
#define NV_PGRAPH_BLIMIT3_VALUE                                26:0 /* RWXUF */
#define NV_PGRAPH_BLIMIT3_TYPE                                31:31 /* RWIVF */
#define NV_PGRAPH_BLIMIT3_TYPE_IN_MEMORY                 0x00000000 /* RW--V */
#define NV_PGRAPH_BLIMIT3_TYPE_NULL                      0x00000001 /* RWI-V */
#define NV_PGRAPH_BLIMIT4                                0x00400694 /* RW-4R */
#define NV_PGRAPH_BLIMIT4__ALIAS_1              NV_PGRAPH_BLIMIT(4) /*       */
#define NV_PGRAPH_BLIMIT4_VALUE                                26:0 /* RWXUF */
#define NV_PGRAPH_BLIMIT4_TYPE                                31:31 /* RWIVF */
#define NV_PGRAPH_BLIMIT4_TYPE_IN_MEMORY                 0x00000000 /* RW--V */
#define NV_PGRAPH_BLIMIT4_TYPE_NULL                      0x00000001 /* RWI-V */
#define NV_PGRAPH_BLIMIT5                                0x00400698 /* RW-4R */
#define NV_PGRAPH_BLIMIT5__ALIAS_1              NV_PGRAPH_BLIMIT(5) /*       */
#define NV_PGRAPH_BLIMIT5_VALUE                                26:0 /* RWXUF */
#define NV_PGRAPH_BLIMIT5_TYPE                                31:31 /* RWIVF */
#define NV_PGRAPH_BLIMIT5_TYPE_IN_MEMORY                 0x00000000 /* RW--V */
#define NV_PGRAPH_BLIMIT5_TYPE_NULL                      0x00000001 /* RWI-V */
#define NV_PGRAPH_BSWIZZLE2                              0x0040069c /* RW-4R */
#define NV_PGRAPH_BSWIZZLE2_WIDTH                             19:16 /* RWIUF */
#define NV_PGRAPH_BSWIZZLE2_WIDTH_0                      0x00000000 /* RWI-V */
#define NV_PGRAPH_BSWIZZLE2_WIDTH_053                    0x00000000 /* RWC-V */
#define NV_PGRAPH_BSWIZZLE2_HEIGHT                            27:24 /* RWIUF */
#define NV_PGRAPH_BSWIZZLE2_HEIGHT_0                     0x00000000 /* RWI-V */
#define NV_PGRAPH_BSWIZZLE2_HEIGHT_053                   0x00000000 /* RWC-V */
#define NV_PGRAPH_BSWIZZLE5                              0x004006a0 /* RW-4R */
#define NV_PGRAPH_BSWIZZLE5_WIDTH                             19:16 /* RWIUF */
#define NV_PGRAPH_BSWIZZLE5_WIDTH_0                      0x00000000 /* RWI-V */
#define NV_PGRAPH_BSWIZZLE5_WIDTH_052                    0x00000000 /* RWC-V */
#define NV_PGRAPH_BSWIZZLE5_HEIGHT                            27:24 /* RWIUF */
#define NV_PGRAPH_BSWIZZLE5_HEIGHT_0                     0x00000000 /* RWI-V */
#define NV_PGRAPH_BSWIZZLE5_HEIGHT_052                   0x00000000 /* RWC-V */
#define NV_PGRAPH_BPIXEL                                 0x00400724 /* RW-4R */
#define NV_PGRAPH_BPIXEL_DEPTH0                                 3:0 /* RWIVF */
#define NV_PGRAPH_BPIXEL_DEPTH0_INVALID                  0x00000000 /* RWI-V */
#define NV_PGRAPH_BPIXEL_DEPTH0_Y8                       0x00000001 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH0_X1R5G5B5_Z1R5G5B5        0x00000002 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH0_X1R5G5B5_O1R5G5B5        0x00000003 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH0_A1R5G5B5                 0x00000004 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH0_R5G6B5                   0x00000005 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH0_Y16                      0x00000006 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH0_X8R8G8B8_Z8R8G8B8        0x00000007 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH0_X8R8G8B8_O1Z7R8G8B8      0x00000008 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH0_X1A7R8G8B8_Z1A7R8G8B8    0x00000009 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH0_X1A7R8G8B8_O1A7R8G8B8    0x0000000a /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH0_X8R8G8B8_O8R8G8B8        0x0000000b /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH0_A8R8G8B8                 0x0000000c /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH0_Y32                      0x0000000d /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH0_V8YB8U8YA8               0x0000000e /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH0_YB8V8YA8U8               0x0000000f /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH0_042                      0x00000001 /* RWC-V */
#define NV_PGRAPH_BPIXEL_DEPTH0_058                      0x00000001 /* RWC-V */
#define NV_PGRAPH_BPIXEL_DEPTH1                                 7:4 /* RWIVF */
#define NV_PGRAPH_BPIXEL_DEPTH1_INVALID                  0x00000000 /* RWI-V */
#define NV_PGRAPH_BPIXEL_DEPTH1_Y8                       0x00000001 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH1_X1R5G5B5_Z1R5G5B5        0x00000002 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH1_X1R5G5B5_O1R5G5B5        0x00000003 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH1_A1R5G5B5                 0x00000004 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH1_R5G6B5                   0x00000005 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH1_Y16                      0x00000006 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH1_X8R8G8B8_Z8R8G8B8        0x00000007 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH1_X8R8G8B8_O1Z7R8G8B8      0x00000008 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH1_X1A7R8G8B8_Z1A7R8G8B8    0x00000009 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH1_X1A7R8G8B8_O1A7R8G8B8    0x0000000a /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH1_X8R8G8B8_O8R8G8B8        0x0000000b /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH1_A8R8G8B8                 0x0000000c /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH1_Y32                      0x0000000d /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH1_V8YB8U8YA8               0x0000000e /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH1_YB8V8YA8U8               0x0000000f /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH1_059                      0x00000001 /* RWC-V */
#define NV_PGRAPH_BPIXEL_DEPTH2                                11:8 /* RWIVF */
#define NV_PGRAPH_BPIXEL_DEPTH2_INVALID                  0x00000000 /* RWI-V */
#define NV_PGRAPH_BPIXEL_DEPTH2_Y8                       0x00000001 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH2_X1R5G5B5_Z1R5G5B5        0x00000002 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH2_X1R5G5B5_O1R5G5B5        0x00000003 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH2_A1R5G5B5                 0x00000004 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH2_R5G6B5                   0x00000005 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH2_Y16                      0x00000006 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH2_X8R8G8B8_Z8R8G8B8        0x00000007 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH2_X8R8G8B8_O1Z7R8G8B8      0x00000008 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH2_X1A7R8G8B8_Z1A7R8G8B8    0x00000009 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH2_X1A7R8G8B8_O1A7R8G8B8    0x0000000a /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH2_X8R8G8B8_O8R8G8B8        0x0000000b /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH2_A8R8G8B8                 0x0000000c /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH2_Y32                      0x0000000d /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH2_V8YB8U8YA8               0x0000000e /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH2_YB8V8YA8U8               0x0000000f /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH2_053                      0x00000002 /* RWC-V */
#define NV_PGRAPH_BPIXEL_DEPTH2_05A                      0x00000002 /* RWC-V */
#define NV_PGRAPH_BPIXEL_DEPTH3                               15:12 /* RWIVF */
#define NV_PGRAPH_BPIXEL_DEPTH3_INVALID                  0x00000000 /* RWI-V */
#define NV_PGRAPH_BPIXEL_DEPTH3_Y8                       0x00000001 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH3_X1R5G5B5_Z1R5G5B5        0x00000002 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH3_X1R5G5B5_O1R5G5B5        0x00000003 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH3_A1R5G5B5                 0x00000004 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH3_R5G6B5                   0x00000005 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH3_Y16                      0x00000006 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH3_X8R8G8B8_Z8R8G8B8        0x00000007 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH3_X8R8G8B8_O1Z7R8G8B8      0x00000008 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH3_X1A7R8G8B8_Z1A7R8G8B8    0x00000009 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH3_X1A7R8G8B8_O1A7R8G8B8    0x0000000a /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH3_X8R8G8B8_O8R8G8B8        0x0000000b /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH3_A8R8G8B8                 0x0000000c /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH3_Y32                      0x0000000d /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH3_V8YB8U8YA8               0x0000000e /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH3_YB8V8YA8U8               0x0000000f /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH3_05B                      0x00000002 /* RWC-V */
#define NV_PGRAPH_BPIXEL_DEPTH4                               19:16 /* RWIVF */
#define NV_PGRAPH_BPIXEL_DEPTH4_INVALID                  0x00000000 /* RWI-V */
#define NV_PGRAPH_BPIXEL_DEPTH4_Y8                       0x00000001 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH4_X1R5G5B5_Z1R5G5B5        0x00000002 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH4_X1R5G5B5_O1R5G5B5        0x00000003 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH4_A1R5G5B5                 0x00000004 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH4_R5G6B5                   0x00000005 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH4_Y16                      0x00000006 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH4_X8R8G8B8_Z8R8G8B8        0x00000007 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH4_X8R8G8B8_O1Z7R8G8B8      0x00000008 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH4_X1A7R8G8B8_Z1A7R8G8B8    0x00000009 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH4_X1A7R8G8B8_O1A7R8G8B8    0x0000000a /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH4_X8R8G8B8_O8R8G8B8        0x0000000b /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH4_A8R8G8B8                 0x0000000c /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH4_Y32                      0x0000000d /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH4_V8YB8U8YA8               0x0000000e /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH4_YB8V8YA8U8               0x0000000f /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH5                               23:20 /* RWIVF */
#define NV_PGRAPH_BPIXEL_DEPTH5_INVALID                  0x00000000 /* RWI-V */
#define NV_PGRAPH_BPIXEL_DEPTH5_Y8                       0x00000001 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH5_X1R5G5B5_Z1R5G5B5        0x00000002 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH5_X1R5G5B5_O1R5G5B5        0x00000003 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH5_A1R5G5B5                 0x00000004 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH5_R5G6B5                   0x00000005 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH5_Y16                      0x00000006 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH5_X8R8G8B8_Z8R8G8B8        0x00000007 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH5_X8R8G8B8_O1Z7R8G8B8      0x00000008 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH5_X1A7R8G8B8_Z1A7R8G8B8    0x00000009 /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH5_X1A7R8G8B8_O1A7R8G8B8    0x0000000a /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH5_X8R8G8B8_O8R8G8B8        0x0000000b /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH5_A8R8G8B8                 0x0000000c /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH5_Y32                      0x0000000d /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH5_V8YB8U8YA8               0x0000000e /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH5_YB8V8YA8U8               0x0000000f /* RW--V */
#define NV_PGRAPH_BPIXEL_DEPTH5_052                      0x00000001 /* RWC-V */
#define NV_PGRAPH_LIMIT_VIOL_PIX                         0x00400610 /* RW-4R */
#define NV_PGRAPH_LIMIT_VIOL_PIX_ADRS                          26:0 /* RWIVF */
#define NV_PGRAPH_LIMIT_VIOL_PIX_ADRS_0                  0x00000000 /* RWI-V */
#define NV_PGRAPH_LIMIT_VIOL_PIX_BTILED                       27:27 /* RWIVF */
#define NV_PGRAPH_LIMIT_VIOL_PIX_BTILED_NO_VIOL          0x00000000 /* RWI-V */
#define NV_PGRAPH_LIMIT_VIOL_PIX_BTILED_VIOL             0x00000001 /* RW--V */
#define NV_PGRAPH_LIMIT_VIOL_PIX_BPITCH                       28:28 /* RWIVF */
#define NV_PGRAPH_LIMIT_VIOL_PIX_BPITCH_NO_VIOL          0x00000000 /* RWI-V */
#define NV_PGRAPH_LIMIT_VIOL_PIX_BPITCH_VIOL             0x00000001 /* RW--V */
#define NV_PGRAPH_LIMIT_VIOL_PIX_BLIT                         29:29 /* RWIVF */
#define NV_PGRAPH_LIMIT_VIOL_PIX_BLIT_NO_VIOL            0x00000000 /* RWI-V */
#define NV_PGRAPH_LIMIT_VIOL_PIX_BLIT_VIOL               0x00000001 /* RW--V */
#define NV_PGRAPH_LIMIT_VIOL_PIX_LIMIT                        30:30 /* RWIVF */
#define NV_PGRAPH_LIMIT_VIOL_PIX_LIMIT_NO_VIOL           0x00000000 /* RWI-V */
#define NV_PGRAPH_LIMIT_VIOL_PIX_LIMIT_VIOL              0x00000001 /* RW--V */
#define NV_PGRAPH_LIMIT_VIOL_PIX_OVRFLW                       31:31 /* RWIVF */
#define NV_PGRAPH_LIMIT_VIOL_PIX_OVRFLW_NO_VIOL          0x00000000 /* RWI-V */
#define NV_PGRAPH_LIMIT_VIOL_PIX_OVRFLW_VIOL             0x00000001 /* RW--V */
#define NV_PGRAPH_LIMIT_VIOL_Z                           0x00400614 /* RW-4R */
#define NV_PGRAPH_LIMIT_VIOL_Z_ADRS                            26:0 /* RWIVF */
#define NV_PGRAPH_LIMIT_VIOL_Z_ADRS_0                    0x00000000 /* RWI-V */
#define NV_PGRAPH_LIMIT_VIOL_Z_LIMIT                          30:30 /* RWIVF */
#define NV_PGRAPH_LIMIT_VIOL_Z_LIMIT_NO_VIOL             0x00000000 /* RWI-V */
#define NV_PGRAPH_LIMIT_VIOL_Z_LIMIT_VIOL                0x00000001 /* RW--V */
#define NV_PGRAPH_LIMIT_VIOL_Z_OVRFLW                         31:31 /* RWIVF */
#define NV_PGRAPH_LIMIT_VIOL_Z_OVRFLW_NO_VIOL            0x00000000 /* RWI-V */
#define NV_PGRAPH_LIMIT_VIOL_Z_OVRFLW_VIOL               0x00000001 /* RW--V */
#define NV_PGRAPH_STATE                                  0x00400710 /* RW-4R */
#define NV_PGRAPH_STATE_BUFFER_0                                0:0 /* RWIVF */
#define NV_PGRAPH_STATE_BUFFER_0_INVALID                 0x00000000 /* RWI-V */
#define NV_PGRAPH_STATE_BUFFER_0_VALID                   0x00000001 /* RW--V */
#define NV_PGRAPH_STATE_BUFFER_0_042                     0x00000000 /* RWC-V */
#define NV_PGRAPH_STATE_BUFFER_0_058                     0x00000000 /* RWC-V */
#define NV_PGRAPH_STATE_BUFFER_1                                1:1 /* RWIVF */
#define NV_PGRAPH_STATE_BUFFER_1_INVALID                 0x00000000 /* RWI-V */
#define NV_PGRAPH_STATE_BUFFER_1_VALID                   0x00000001 /* RW--V */
#define NV_PGRAPH_STATE_BUFFER_1_042                     0x00000000 /* RWC-V */
#define NV_PGRAPH_STATE_BUFFER_1_059                     0x00000000 /* RWC-V */
#define NV_PGRAPH_STATE_BUFFER_2                                2:2 /* RWIVF */
#define NV_PGRAPH_STATE_BUFFER_2_INVALID                 0x00000000 /* RWI-V */
#define NV_PGRAPH_STATE_BUFFER_2_VALID                   0x00000001 /* RW--V */
#define NV_PGRAPH_STATE_BUFFER_2_053                     0x00000000 /* RWC-V */
#define NV_PGRAPH_STATE_BUFFER_2_05A                     0x00000000 /* RWC-V */
#define NV_PGRAPH_STATE_BUFFER_3                                3:3 /* RWIVF */
#define NV_PGRAPH_STATE_BUFFER_3_INVALID                 0x00000000 /* RWI-V */
#define NV_PGRAPH_STATE_BUFFER_3_VALID                   0x00000001 /* RW--V */
#define NV_PGRAPH_STATE_BUFFER_3_053                     0x00000000 /* RWC-V */
#define NV_PGRAPH_STATE_BUFFER_3_05B                     0x00000000 /* RWC-V */
#define NV_PGRAPH_STATE_BUFFER_4                                4:4 /* RWIVF */
#define NV_PGRAPH_STATE_BUFFER_4_INVALID                 0x00000000 /* RWI-V */
#define NV_PGRAPH_STATE_BUFFER_4_VALID                   0x00000001 /* RW--V */
#define NV_PGRAPH_STATE_BUFFER_4_038                     0x00000000 /* RWC-V */
#define NV_PGRAPH_STATE_BUFFER_5                                5:5 /* RWIVF */
#define NV_PGRAPH_STATE_BUFFER_5_INVALID                 0x00000000 /* RWI-V */
#define NV_PGRAPH_STATE_BUFFER_5_VALID                   0x00000001 /* RW--V */
#define NV_PGRAPH_STATE_BUFFER_5_052                     0x00000000 /* RWC-V */
#define NV_PGRAPH_STATE_PITCH_0                                 8:8 /* RWIVF */
#define NV_PGRAPH_STATE_PITCH_0_INVALID                  0x00000000 /* RWI-V */
#define NV_PGRAPH_STATE_PITCH_0_VALID                    0x00000001 /* RW--V */
#define NV_PGRAPH_STATE_PITCH_0_042                      0x00000001 /* RWC-V */
#define NV_PGRAPH_STATE_PITCH_0_058                      0x00000001 /* RWC-V */
#define NV_PGRAPH_STATE_PITCH_1                                 9:9 /* RWIVF */
#define NV_PGRAPH_STATE_PITCH_1_INVALID                  0x00000000 /* RWI-V */
#define NV_PGRAPH_STATE_PITCH_1_VALID                    0x00000001 /* RW--V */
#define NV_PGRAPH_STATE_PITCH_1_042                      0x00000001 /* RWC-V */
#define NV_PGRAPH_STATE_PITCH_1_059                      0x00000001 /* RWC-V */
#define NV_PGRAPH_STATE_PITCH_2                               10:10 /* RWIVF */
#define NV_PGRAPH_STATE_PITCH_2_INVALID                  0x00000000 /* RWI-V */
#define NV_PGRAPH_STATE_PITCH_2_VALID                    0x00000001 /* RW--V */
#define NV_PGRAPH_STATE_PITCH_2_053                      0x00000001 /* RWC-V */
#define NV_PGRAPH_STATE_PITCH_2_05A                      0x00000001 /* RWC-V */
#define NV_PGRAPH_STATE_PITCH_3                               11:11 /* RWIVF */
#define NV_PGRAPH_STATE_PITCH_3_INVALID                  0x00000000 /* RWI-V */
#define NV_PGRAPH_STATE_PITCH_3_VALID                    0x00000001 /* RW--V */
#define NV_PGRAPH_STATE_PITCH_3_053                      0x00000001 /* RWC-V */
#define NV_PGRAPH_STATE_PITCH_3_05B                      0x00000001 /* RWC-V */
#define NV_PGRAPH_STATE_PITCH_4                               12:12 /* RWIVF */
#define NV_PGRAPH_STATE_PITCH_4_INVALID                  0x00000000 /* RWI-V */
#define NV_PGRAPH_STATE_PITCH_4_VALID                    0x00000001 /* RW--V */
#define NV_PGRAPH_STATE_CHROMA_COLOR                          16:16 /* RWIVF */
#define NV_PGRAPH_STATE_CHROMA_COLOR_INVALID             0x00000000 /* RWI-V */
#define NV_PGRAPH_STATE_CHROMA_COLOR_VALID               0x00000001 /* RW--V */
#define NV_PGRAPH_STATE_CHROMA_COLOR_057                 0x00000001 /* RWC-V */
#define NV_PGRAPH_STATE_CHROMA_COLORFMT                       17:17 /* RWIVF */
#define NV_PGRAPH_STATE_CHROMA_COLORFMT_INVALID          0x00000000 /* RWI-V */
#define NV_PGRAPH_STATE_CHROMA_COLORFMT_VALID            0x00000001 /* RW--V */
#define NV_PGRAPH_STATE_CHROMA_COLORFMT_017              0x00000001 /* RWC-V */
#define NV_PGRAPH_STATE_CPATTERN_COLORFMT                     20:20 /* RWIVF */
#define NV_PGRAPH_STATE_CPATTERN_COLORFMT_INVALID        0x00000000 /* RWI-V */
#define NV_PGRAPH_STATE_CPATTERN_COLORFMT_VALID          0x00000001 /* RW--V */
#define NV_PGRAPH_STATE_CPATTERN_COLORFMT_044            0x00000001 /* RWC-V */
#define NV_PGRAPH_STATE_CPATTERN_MONOFMT                      21:21 /* RWIVF */
#define NV_PGRAPH_STATE_CPATTERN_MONOFMT_INVALID         0x00000000 /* RWI-V */
#define NV_PGRAPH_STATE_CPATTERN_MONOFMT_VALID           0x00000001 /* RW--V */
#define NV_PGRAPH_STATE_CPATTERN_MONOFMT_044             0x00000001 /* RWC-V */
#define NV_PGRAPH_STATE_CPATTERN_SELECT                       22:22 /* RWIVF */
#define NV_PGRAPH_STATE_CPATTERN_SELECT_INVALID          0x00000000 /* RWI-V */
#define NV_PGRAPH_STATE_CPATTERN_SELECT_VALID            0x00000001 /* RW--V */
#define NV_PGRAPH_STATE_CPATTERN_SELECT_044              0x00000001 /* RWC-V */
#define NV_PGRAPH_STATE_PATTERN_COLOR0                        24:24 /* RWIVF */
#define NV_PGRAPH_STATE_PATTERN_COLOR0_INVALID           0x00000000 /* RWI-V */
#define NV_PGRAPH_STATE_PATTERN_COLOR0_VALID             0x00000001 /* RW--V */
#define NV_PGRAPH_STATE_PATTERN_COLOR0_018               0x00000001 /* RWC-V */
#define NV_PGRAPH_STATE_PATTERN_COLOR1                        25:25 /* RWIVF */
#define NV_PGRAPH_STATE_PATTERN_COLOR1_INVALID           0x00000000 /* RWI-V */
#define NV_PGRAPH_STATE_PATTERN_COLOR1_VALID             0x00000001 /* RW--V */
#define NV_PGRAPH_STATE_PATTERN_COLOR1_018               0x00000001 /* RWC-V */
#define NV_PGRAPH_STATE_PATTERN_PATT0                         26:26 /* RWIVF */
#define NV_PGRAPH_STATE_PATTERN_PATT0_INVALID            0x00000000 /* RWI-V */
#define NV_PGRAPH_STATE_PATTERN_PATT0_VALID              0x00000001 /* RW--V */
#define NV_PGRAPH_STATE_PATTERN_PATT0_018                0x00000001 /* RWC-V */
#define NV_PGRAPH_STATE_PATTERN_PATT1                         27:27 /* RWIVF */
#define NV_PGRAPH_STATE_PATTERN_PATT1_INVALID            0x00000000 /* RWI-V */
#define NV_PGRAPH_STATE_PATTERN_PATT1_VALID              0x00000001 /* RW--V */
#define NV_PGRAPH_STATE_PATTERN_PATT1_018                0x00000001 /* RWC-V */
#define NV_PGRAPH_CACHE_INDEX                            0x00400728 /* RW-4R */
#define NV_PGRAPH_CACHE_INDEX_BANK                              2:2 /* RWXVF */
#define NV_PGRAPH_CACHE_INDEX_BANK_10                    0x00000000 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_BANK_32                    0x00000001 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_ADRS                             12:3 /* RWXVF */
#define NV_PGRAPH_CACHE_INDEX_ADRS_0                     0x00000000 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_ADRS_1024                  0x00000400 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_ADRS_1024                  0x00000400 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_ADRS_TEXTURE_RAM_0         0x00000000 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_ADRS_TEXTURE_RAM_1K        0x00000400 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_ADRS_PALETTE_RAM_0         0x00000000 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_ADRS_PALETTE_RAM_512       0x00000200 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_ADRS_MISS_DATA_RAM_0       0x00000000 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_ADRS_MISS_DATA_RAM_32      0x00000020 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_ADRS_RLATENCY_RAM_0        0x00000000 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_ADRS_RLATENCY_RAM_384      0x00000180 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_ADRS_FLATENCY_RAM_0        0x00000000 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_ADRS_FLATENCY_RAM_448      0x000001C0 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_OP                              14:13 /* RWXVF */
#define NV_PGRAPH_CACHE_INDEX_OP_WR_CACHE                0x00000000 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_OP_RD_CACHE                0x00000001 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_OP_RD_INDEX                0x00000002 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_OP_NOP                     0x00000000 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_OP_TEXTURE_RAM             0x00000001 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_OP_PALETTE_RAM             0x00000002 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_OP_MISS_DATA_RAM           0x00000003 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_OP_RLATENCY_RAM            0x00000004 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_OP_FLATENCY_RAM            0x00000005 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_TEX_PIPE                        15:15 /* RWIVF */
#define NV_PGRAPH_CACHE_INDEX_TEX_PIPE_0                 0x00000000 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_TEX_PIPE_1                 0x00000001 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_RDSEL                           29:24 /* RWIVF */
#define NV_PGRAPH_CACHE_INDEX_RDSEL_NOP                  0x00000000 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_RDSEL_INDEX_REG            0x00000001 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_RDSEL_TIME_CNT             0x00000020 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_RDSEL_CACHE_IDLE_CNT       0x00000021 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_RDSEL_TP0_PIX_CNT          0x00000022 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_RDSEL_TP0_MISS_CNT         0x00000023 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_RDSEL_TP0_COAL_STALL_CNT   0x00000024 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_RDSEL_TP0_REPL_STALL_CNT   0x00000025 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_RDSEL_TP0_MP_Q_STALL_CNT   0x00000026 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_RDSEL_TP0_TEX2MA_STALL_CNT 0x00000027 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_RDSEL_LIT2TEX_STALL_CNT    0x00000028 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_RDSEL_RBFR_FULL_STALL_CNT  0x00000029 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_RDSEL_TP1_PIX_CNT          0x0000002A /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_RDSEL_TP1_MISS_CNT         0x0000002B /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_RDSEL_TP1_COAL_STALL_CNT   0x0000002C /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_RDSEL_TP1_REPL_STALL_CNT   0x0000002D /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_RDSEL_TP1_MP_Q_STALL_CNT   0x0000002E /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_RDSEL_TP1_TEX2MA_STALL_CNT 0x0000002F /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_RDSEL_TEX2LIT_REGLD_CNT    0x00000030 /* RW--V */
#define NV_PGRAPH_CACHE_INDEX_RDSEL_C2DMA_TAKEN_CNT      0x00000031 /* RW--V */
#define NV_PGRAPH_CACHE_RAM                              0x0040072c /* RW-4R */
#define NV_PGRAPH_CACHE_RAM_VALUE                              31:0 /* RWXVF */
#define NV_PGRAPH_DMA_PITCH                              0x00400760 /* RW-4R */
#define NV_PGRAPH_DMA_PITCH_S0                                 15:0 /* RWXSF */
#define NV_PGRAPH_DMA_PITCH_S1                                31:16 /* RWXSF */
#define NV_PGRAPH_DVD_COLORFMT                           0x00400764 /* RW-4R */
#define NV_PGRAPH_DVD_COLORFMT_IMAGE                            5:0 /* RWNVF */
#define NV_PGRAPH_DVD_COLORFMT_IMAGE_FORMAT_INVALID            0x00 /* RWN-V */
#define NV_PGRAPH_DVD_COLORFMT_IMAGE_FORMAT_LE_V8YB8U8YA8      0x12 /* RW--V */
#define NV_PGRAPH_DVD_COLORFMT_IMAGE_FORMAT_LE_YB8V8YA8U8      0x13 /* RW--V */
#define NV_PGRAPH_DVD_COLORFMT_OVLY                             9:8 /* RWNVF */
#define NV_PGRAPH_DVD_COLORFMT_OVLY_FORMAT_INVALID             0x00 /* RWN-V */
#define NV_PGRAPH_DVD_COLORFMT_OVLY_FORMAT_LE_A8Y8U8V8         0x01 /* RW--V */
#define NV_PGRAPH_DVD_COLORFMT_OVLY_FORMAT_LE_A4V6YB6A4U6YA6   0x02 /* RW--V */
#define NV_PGRAPH_DVD_COLORFMT_OVLY_FORMAT_TRANSPARENT         0x03 /* RW--V */
#define NV_PGRAPH_SCALED_FORMAT                          0x00400768 /* RW-4R */
#define NV_PGRAPH_SCALED_FORMAT_ORIGIN                        17:16 /* RWIVF */
#define NV_PGRAPH_SCALED_FORMAT_ORIGIN_INVALID           0x00000000 /* RWI-V */
#define NV_PGRAPH_SCALED_FORMAT_ORIGIN_CENTER            0x00000001 /* RW--V */
#define NV_PGRAPH_SCALED_FORMAT_ORIGIN_CORNER            0x00000002 /* RW--V */
#define NV_PGRAPH_SCALED_FORMAT_INTERPOLATOR                  24:24 /* RWIVF */
#define NV_PGRAPH_SCALED_FORMAT_INTERPOLATOR_ZOH         0x00000000 /* RWI-V */
#define NV_PGRAPH_SCALED_FORMAT_INTERPOLATOR_FOH         0x00000001 /* RW--V */
#define NV_PGRAPH_PATT_COLOR0                            0x00400800 /* RW-4R */
#define NV_PGRAPH_PATT_COLOR0_VALUE                            31:0 /* RWXUF */
#define NV_PGRAPH_PATT_COLOR0_VALUE_018                  0x00000000 /* RWC-V */
#define NV_PGRAPH_PATT_COLOR0_VALUE_044                  0x00000000 /* RWC-V */
#define NV_PGRAPH_PATT_COLOR1                            0x00400804 /* RW-4R */
#define NV_PGRAPH_PATT_COLOR1_VALUE                            31:0 /* RWXUF */
#define NV_PGRAPH_PATT_COLOR1_VALUE_018                  0x00000000 /* RWC-V */
#define NV_PGRAPH_PATT_COLOR1_VALUE_044                  0x00000000 /* RWC-V */
#define NV_PGRAPH_PATT_COLORRAM(i)               (0x00400900+(i)*4) /* R--4A */
#define NV_PGRAPH_PATT_COLORRAM__SIZE_1                          64 /*       */
#define NV_PGRAPH_PATT_COLORRAM_VALUE                          23:0 /* R--UF */
#define NV_PGRAPH_PATT_COLORRAM_VALUE_044                0x00000000 /* R-C-V */
#define NV_PGRAPH_PATTERN(i)                     (0x00400808+(i)*4) /* RW-4A */
#define NV_PGRAPH_PATTERN__SIZE_1                                 2 /*       */
#define NV_PGRAPH_PATTERN_BITMAP                               31:0 /* RWXVF */
#define NV_PGRAPH_PATTERN_BITMAP_018                     0x00000000 /* RWC-V */
#define NV_PGRAPH_PATTERN_BITMAP_044                     0x00000000 /* RWC-V */
#define NV_PGRAPH_PATTERN_SHAPE                          0x00400810 /* RW-4R */
#define NV_PGRAPH_PATTERN_SHAPE_VALUE                           1:0 /* RWXVF */
#define NV_PGRAPH_PATTERN_SHAPE_VALUE_8X_8Y              0x00000000 /* RW--V */
#define NV_PGRAPH_PATTERN_SHAPE_VALUE_64X_1Y             0x00000001 /* RW--V */
#define NV_PGRAPH_PATTERN_SHAPE_VALUE_1X_64Y             0x00000002 /* RW--V */
#define NV_PGRAPH_PATTERN_SHAPE_VALUE_018                0x00000000 /* RWC-V */
#define NV_PGRAPH_PATTERN_SHAPE_VALUE_044                0x00000000 /* RWC-V */
#define NV_PGRAPH_PATTERN_SHAPE_SELECT                          4:4 /* RWXVF */
#define NV_PGRAPH_PATTERN_SHAPE_SELECT_2COLOR            0x00000000 /* RW--V */
#define NV_PGRAPH_PATTERN_SHAPE_SELECT_FULLCOLOR         0x00000001 /* RW--V */
#define NV_PGRAPH_PATTERN_SHAPE_SELECT_044               0x00000000 /* RWC-V */
#define NV_PGRAPH_MONO_COLOR0                            0x00400600 /* RW-4R */
#define NV_PGRAPH_MONO_COLOR0_VALUE                            31:0 /* RWXUF */
#define NV_PGRAPH_ROP3                                   0x00400604 /* RW-4R */
#define NV_PGRAPH_ROP3_VALUE                                    7:0 /* RWXVF */
#define NV_PGRAPH_ROP3_VALUE_043                         0x00000000 /* RWC-V */
#define NV_PGRAPH_CHROMA                                 0x00400814 /* RW-4R */
#define NV_PGRAPH_CHROMA_VALUE                                 31:0 /* RWXUF */
#define NV_PGRAPH_CHROMA_VALUE_017                       0x00000000 /* RWC-V */
#define NV_PGRAPH_CHROMA_VALUE_057                       0x00000000 /* RWC-V */
#define NV_PGRAPH_BETA_AND                               0x00400608 /* RW-4R */
#define NV_PGRAPH_BETA_AND_VALUE_FRACTION                     30:23 /* RWXUF */
#define NV_PGRAPH_BETA_AND_VALUE_FRACTION_012            0x00000000 /* RWC-V */
#define NV_PGRAPH_BETA_PREMULT                           0x0040060c /* RW-4R */
#define NV_PGRAPH_BETA_PREMULT_VALUE                           31:0 /* RWXUF */
#define NV_PGRAPH_BETA_PREMULT_VALUE_072                 0x00000000 /* RWC-V */
#define NV_PGRAPH_DPRAM_INDEX                            0x00400828 /* RW-4R */
#define NV_PGRAPH_DPRAM_INDEX_ADRS                              6:0 /* RWIVF */
#define NV_PGRAPH_DPRAM_INDEX_ADRS_0                     0x00000000 /* RWI-V */
#define NV_PGRAPH_DPRAM_INDEX_SELECT                           10:8 /* RWIVF */
#define NV_PGRAPH_DPRAM_INDEX_SELECT_ADRS                0x00000000 /* RWI-V */
#define NV_PGRAPH_DPRAM_INDEX_SELECT_ADRS_0              0x00000000 /* RWI-V */
#define NV_PGRAPH_DPRAM_INDEX_SELECT_ADRS_1              0x00000001 /* RW--V */
#define NV_PGRAPH_DPRAM_INDEX_SELECT_IDATA               0x00000001 /* RW--V */
#define NV_PGRAPH_DPRAM_INDEX_SELECT_ALPHA               0x00000002 /* RW--V */
#define NV_PGRAPH_DPRAM_INDEX_SELECT_DATA_0              0x00000002 /* RW--V */
#define NV_PGRAPH_DPRAM_INDEX_SELECT_IWE                 0x00000003 /* RW--V */
#define NV_PGRAPH_DPRAM_INDEX_SELECT_DATA_1              0x00000003 /* RW--V */
#define NV_PGRAPH_DPRAM_INDEX_SELECT_XY                  0x00000004 /* RW--V */
#define NV_PGRAPH_DPRAM_INDEX_SELECT_WE_0                0x00000004 /* RW--V */
#define NV_PGRAPH_DPRAM_INDEX_SELECT_ODATA               0x00000005 /* RW--V */
#define NV_PGRAPH_DPRAM_INDEX_SELECT_WE_1                0x00000005 /* RW--V */
#define NV_PGRAPH_DPRAM_INDEX_SELECT_OWE                 0x00000006 /* RW--V */
#define NV_PGRAPH_DPRAM_INDEX_SELECT_ALPHA_0             0x00000006 /* RW--V */
#define NV_PGRAPH_DPRAM_INDEX_SELECT_SCOMP               0x00000007 /* RW--V */
#define NV_PGRAPH_DPRAM_INDEX_SELECT_ALPHA_1             0x00000007 /* RW--V */
#define NV_PGRAPH_DPRAM_INDEX_SELECT_PWD                 0x00000008 /* RW--V */
#define NV_PGRAPH_DPRAM_DATA                             0x0040082c /* RW-4R */
#define NV_PGRAPH_DPRAM_DATA_VALUE                             31:0 /* RWXVF */
#define NV_PGRAPH_DPRAM_ADRS_0                           0x0040082c /* RW-4R */
#define NV_PGRAPH_DPRAM_ADRS_0__ALIAS_1        NV_PGRAPH_DPRAM_DATA /*       */
#define NV_PGRAPH_DPRAM_ADRS_0_VALUE                           19:0 /* RWXVF */
#define NV_PGRAPH_DPRAM_ADRS_1                           0x0040082c /* RW-4R */
#define NV_PGRAPH_DPRAM_ADRS_1__ALIAS_1        NV_PGRAPH_DPRAM_DATA /*       */
#define NV_PGRAPH_DPRAM_ADRS_1_VALUE                           19:0 /* RWXVF */
#define NV_PGRAPH_DPRAM_DATA_0                           0x0040082c /* RW-4R */
#define NV_PGRAPH_DPRAM_DATA_0__ALIAS_1        NV_PGRAPH_DPRAM_DATA /*       */
#define NV_PGRAPH_DPRAM_DATA_0_VALUE                           31:0 /* RWXVF */
#define NV_PGRAPH_DPRAM_DATA_1                           0x0040082c /* RW-4R */
#define NV_PGRAPH_DPRAM_DATA_1__ALIAS_1        NV_PGRAPH_DPRAM_DATA /*       */
#define NV_PGRAPH_DPRAM_DATA_1_VALUE                           31:0 /* RWXVF */
#define NV_PGRAPH_DPRAM_WE_0                             0x0040082c /* RW-4R */
#define NV_PGRAPH_DPRAM_WE_0__ALIAS_1          NV_PGRAPH_DPRAM_DATA /*       */
#define NV_PGRAPH_DPRAM_WE_0_VALUE                             23:0 /* RWXVF */
#define NV_PGRAPH_DPRAM_WE_1                             0x0040082c /* RW-4R */
#define NV_PGRAPH_DPRAM_WE_1__ALIAS_1          NV_PGRAPH_DPRAM_DATA /*       */
#define NV_PGRAPH_DPRAM_WE_1_VALUE                             23:0 /* RWXVF */
#define NV_PGRAPH_DPRAM_ALPHA_0                          0x0040082c /* RW-4R */
#define NV_PGRAPH_DPRAM_ALPHA_0__ALIAS_1       NV_PGRAPH_DPRAM_DATA /*       */
#define NV_PGRAPH_DPRAM_ALPHA_0_VALUE                          31:0 /* RWXVF */
#define NV_PGRAPH_DPRAM_ALPHA_1                          0x0040082c /* RW-4R */
#define NV_PGRAPH_DPRAM_ALPHA_1__ALIAS_1       NV_PGRAPH_DPRAM_DATA /*       */
#define NV_PGRAPH_DPRAM_ALPHA_1_VALUE                          31:0 /* RWXVF */
#define NV_PGRAPH_STORED_FMT                             0x00400830 /* RW-4R */
#define NV_PGRAPH_STORED_FMT_MONO0                              5:0 /* RWXVF */
#define NV_PGRAPH_STORED_FMT_MONO0_04A                   0x0000000C /* RWC-V */
#define NV_PGRAPH_STORED_FMT_PATT0                             13:8 /* RWXVF */
#define NV_PGRAPH_STORED_FMT_PATT0_044                   0x0000000B /* RWC-V */
#define NV_PGRAPH_STORED_FMT_PATT1                            21:16 /* RWXVF */
#define NV_PGRAPH_STORED_FMT_PATT1_044                   0x0000000B /* RWC-V */
#define NV_PGRAPH_STORED_FMT_CHROMA                           29:24 /* RWXVF */
#define NV_PGRAPH_STORED_FMT_CHROMA_057                  0x0000000B /* RWC-V */
#define NV_PGRAPH_FORMATS                                0x00400618 /* RW-4R */
#define NV_PGRAPH_FORMATS_ROP                                   2:0 /* R-XVF */
#define NV_PGRAPH_FORMATS_ROP_Y8                         0x00000000 /* -W--V */
#define NV_PGRAPH_FORMATS_ROP_RGB15                      0x00000001 /* -W--V */
#define NV_PGRAPH_FORMATS_ROP_RGB16                      0x00000002 /* -W--V */
#define NV_PGRAPH_FORMATS_ROP_Y16                        0x00000003 /* -W--V */
#define NV_PGRAPH_FORMATS_ROP_INVALID                    0x00000004 /* -W--V */
#define NV_PGRAPH_FORMATS_ROP_RGB24                      0x00000005 /* -W--V */
#define NV_PGRAPH_FORMATS_ROP_RGB30                      0x00000006 /* -W--V */
#define NV_PGRAPH_FORMATS_ROP_Y32                        0x00000007 /* -W--V */
#define NV_PGRAPH_FORMATS_SRC                                   9:4 /* R-XVF */
#define NV_PGRAPH_FORMATS_SRC_INVALID                    0x00000000 /* RW--V */
#define NV_PGRAPH_FORMATS_SRC_LE_Y8                      0x00000001 /* RW--V */
#define NV_PGRAPH_FORMATS_SRC_LE_X16A8Y8                 0x00000002 /* RW--V */
#define NV_PGRAPH_FORMATS_SRC_LE_X24Y8                   0x00000003 /* RW--V */
#define NV_PGRAPH_FORMATS_SRC_LE_A1R5G5B5                0x00000006 /* RW--V */
#define NV_PGRAPH_FORMATS_SRC_LE_X1R5G5B5                0x00000007 /* RW--V */
#define NV_PGRAPH_FORMATS_SRC_LE_X16A1R5G5B5             0x00000008 /* RW--V */
#define NV_PGRAPH_FORMATS_SRC_LE_X17R5G5B5               0x00000009 /* RW--V */
#define NV_PGRAPH_FORMATS_SRC_LE_R5G6B5                  0x0000000A /* RW--V */
#define NV_PGRAPH_FORMATS_SRC_LE_A16R5G6B5               0x0000000B /* RW--V */
#define NV_PGRAPH_FORMATS_SRC_LE_X16R5G6B5               0x0000000C /* RW--V */
#define NV_PGRAPH_FORMATS_SRC_LE_A8R8G8B8                0x0000000D /* RW--V */
#define NV_PGRAPH_FORMATS_SRC_LE_X8R8G8B8                0x0000000E /* RW--V */
#define NV_PGRAPH_FORMATS_SRC_LE_Y16                     0x0000000F /* RW--V */
#define NV_PGRAPH_FORMATS_SRC_LE_A16Y16                  0x00000010 /* RW--V */
#define NV_PGRAPH_FORMATS_SRC_LE_X16Y16                  0x00000011 /* RW--V */
#define NV_PGRAPH_FORMATS_SRC_LE_V8YB8U8YA8              0x00000012 /* RW--V */
#define NV_PGRAPH_FORMATS_SRC_LE_YB8V8YA8U8              0x00000013 /* RW--V */
#define NV_PGRAPH_FORMATS_SRC_LE_Y32                     0x00000014 /* RW--V */
#define NV_PGRAPH_FORMATS_FB                                  15:12 /* R-XVF */
#define NV_PGRAPH_FORMATS_FB_INVALID                     0x00000000 /* RWI-V */
#define NV_PGRAPH_FORMATS_FB_Y8                          0x00000001 /* RW--V */
#define NV_PGRAPH_FORMATS_FB_X1R5G5B5_Z1R5G5B5           0x00000002 /* RW--V */
#define NV_PGRAPH_FORMATS_FB_X1R5G5B5_O1R5G5B5           0x00000003 /* RW--V */
#define NV_PGRAPH_FORMATS_FB_A1R5G5B5                    0x00000004 /* RW--V */
#define NV_PGRAPH_FORMATS_FB_R5G6B5                      0x00000005 /* RW--V */
#define NV_PGRAPH_FORMATS_FB_Y16                         0x00000006 /* RW--V */
#define NV_PGRAPH_FORMATS_FB_X8R8G8B8_Z8R8G8B8           0x00000007 /* RW--V */
#define NV_PGRAPH_FORMATS_FB_X8R8G8B8_O1Z7R8G8B8         0x00000008 /* RW--V */
#define NV_PGRAPH_FORMATS_FB_X1A7R8G8B8_Z1A7R8G8B8       0x00000009 /* RW--V */
#define NV_PGRAPH_FORMATS_FB_X1A7R8G8B8_O1A7R8G8B8       0x0000000a /* RW--V */
#define NV_PGRAPH_FORMATS_FB_X8R8G8B8_O8R8G8B8           0x0000000b /* RW--V */
#define NV_PGRAPH_FORMATS_FB_A8R8G8B8                    0x0000000c /* RW--V */
#define NV_PGRAPH_FORMATS_FB_Y32                         0x0000000d /* RW--V */
#define NV_PGRAPH_FORMATS_FB_V8YB8U8YA8                  0x0000000e /* RW--V */
#define NV_PGRAPH_FORMATS_FB_YB8V8YA8U8                  0x0000000f /* RW--V */
#define NV_PGRAPH_ABS_X_RAM(i)                   (0x00400400+(i)*4) /* RW-4A */
#define NV_PGRAPH_ABS_X_RAM__SIZE_1                              32 /*       */
#define NV_PGRAPH_ABS_X_RAM_VALUE                              31:0 /* RWXUF */
#define NV_PGRAPH_X_RAM_BPORT(i)                 (0x00400c00+(i)*4) /* R--4A */
#define NV_PGRAPH_X_RAM_BPORT__SIZE_1                            32 /*       */
#define NV_PGRAPH_X_RAM_BPORT_VALUE                            31:0 /* R--UF */
#define NV_PGRAPH_ABS_Y_RAM(i)                   (0x00400480+(i)*4) /* RW-4A */
#define NV_PGRAPH_ABS_Y_RAM__SIZE_1                              32 /*       */
#define NV_PGRAPH_ABS_Y_RAM_VALUE                              31:0 /* RWXUF */
#define NV_PGRAPH_Y_RAM_BPORT(i)                 (0x00400c80+(i)*4) /* R--4A */
#define NV_PGRAPH_Y_RAM_BPORT__SIZE_1                            32 /*       */
#define NV_PGRAPH_Y_RAM_BPORT_VALUE                            31:0 /* R--UF */
#define NV_PGRAPH_XY_LOGIC_MISC0                         0x00400514 /* RW-4R */
#define NV_PGRAPH_XY_LOGIC_MISC0_COUNTER                       17:0 /* RWBUF */
#define NV_PGRAPH_XY_LOGIC_MISC0_COUNTER_0               0x00000000 /* RWB-V */
#define NV_PGRAPH_XY_LOGIC_MISC0_DIMENSION                    20:20 /* RWVVF */
#define NV_PGRAPH_XY_LOGIC_MISC0_DIMENSION_NONZERO       0x00000000 /* RWV-V */
#define NV_PGRAPH_XY_LOGIC_MISC0_DIMENSION_ZERO          0x00000001 /* RW--V */
#define NV_PGRAPH_XY_LOGIC_MISC0_IMAGE_DATA_64                24:24 /* RWVVF */
#define NV_PGRAPH_XY_LOGIC_MISC0_IMAGE_DATA_64_FALSE     0x00000000 /* RWV-V */
#define NV_PGRAPH_XY_LOGIC_MISC0_IMAGE_DATA_64_TRUE      0x00000001 /* RW--V */
#define NV_PGRAPH_XY_LOGIC_MISC0_INDEX                        31:28 /* RWBUF */
#define NV_PGRAPH_XY_LOGIC_MISC0_INDEX_0                 0x00000000 /* RWB-V */
#define NV_PGRAPH_XY_LOGIC_MISC1                         0x00400518 /* RW-4R */
#define NV_PGRAPH_XY_LOGIC_MISC1_INITIAL                        0:0 /* RWNVF */
#define NV_PGRAPH_XY_LOGIC_MISC1_INITIAL_NEEDED          0x00000000 /* RWN-V */
#define NV_PGRAPH_XY_LOGIC_MISC1_INITIAL_DONE            0x00000001 /* RW--V */
#define NV_PGRAPH_XY_LOGIC_MISC1_XTRACLIPX                      4:4 /* RWIVF */
#define NV_PGRAPH_XY_LOGIC_MISC1_XTRACLIPX_NOTNULL       0x00000000 /* RWI-V */
#define NV_PGRAPH_XY_LOGIC_MISC1_XTRACLIPX_NULL          0x00000001 /* RW--V */
#define NV_PGRAPH_XY_LOGIC_MISC1_XTRACLIPY                      5:5 /* RWIVF */
#define NV_PGRAPH_XY_LOGIC_MISC1_XTRACLIPY_NOTNULL       0x00000000 /* RWI-V */
#define NV_PGRAPH_XY_LOGIC_MISC1_XTRACLIPY_NULL          0x00000001 /* RW--V */
#define NV_PGRAPH_XY_LOGIC_MISC1_SEL_XIMAX                    12:12 /* RWIVF */
#define NV_PGRAPH_XY_LOGIC_MISC1_SEL_XIMAX_UUMAX         0x00000000 /* RWI-V */
#define NV_PGRAPH_XY_LOGIC_MISC1_SEL_XIMAX_IMAGEMAX      0x00000001 /* RW--V */
#define NV_PGRAPH_XY_LOGIC_MISC1_SEL_YIMAX                    16:16 /* RWIVF */
#define NV_PGRAPH_XY_LOGIC_MISC1_SEL_YIMAX_UUMAX         0x00000000 /* RWI-V */
#define NV_PGRAPH_XY_LOGIC_MISC1_SEL_YIMAX_IMAGEMAX      0x00000001 /* RW--V */
#define NV_PGRAPH_XY_LOGIC_MISC1_SEL_XXTRA                    20:20 /* RWIVF */
#define NV_PGRAPH_XY_LOGIC_MISC1_SEL_XXTRA_CLIPMAX       0x00000000 /* RWI-V */
#define NV_PGRAPH_XY_LOGIC_MISC1_SEL_XXTRA_IMAGEMAX      0x00000001 /* RW--V */
#define NV_PGRAPH_XY_LOGIC_MISC2                         0x0040051C /* RW-4R */
#define NV_PGRAPH_XY_LOGIC_MISC2_HANDOFF                        0:0 /* RWIVF */
#define NV_PGRAPH_XY_LOGIC_MISC2_HANDOFF_DISABLE         0x00000000 /* RWI-V */
#define NV_PGRAPH_XY_LOGIC_MISC2_HANDOFF_ENABLE          0x00000001 /* RW--V */
#define NV_PGRAPH_XY_LOGIC_MISC2_XTRACLIPX                      4:4 /* RWIVF */
#define NV_PGRAPH_XY_LOGIC_MISC2_XTRACLIPX_NOTNULL       0x00000000 /* RWI-V */
#define NV_PGRAPH_XY_LOGIC_MISC2_XTRACLIPX_NULL          0x00000001 /* RW--V */
#define NV_PGRAPH_XY_LOGIC_MISC2_XTRACLIPY                      5:5 /* RWIVF */
#define NV_PGRAPH_XY_LOGIC_MISC2_XTRACLIPY_NOTNULL       0x00000000 /* RWI-V */
#define NV_PGRAPH_XY_LOGIC_MISC2_XTRACLIPY_NULL          0x00000001 /* RW--V */
#define NV_PGRAPH_XY_LOGIC_MISC2_SEL_XIMAX                    12:12 /* RWIVF */
#define NV_PGRAPH_XY_LOGIC_MISC2_SEL_XIMAX_UCMAX         0x00000000 /* RWI-V */
#define NV_PGRAPH_XY_LOGIC_MISC2_SEL_XIMAX_IMAGEMAX      0x00000001 /* RW--V */
#define NV_PGRAPH_XY_LOGIC_MISC2_SEL_YIMAX                    16:16 /* RWIVF */
#define NV_PGRAPH_XY_LOGIC_MISC2_SEL_YIMAX_UCMAX         0x00000000 /* RWI-V */
#define NV_PGRAPH_XY_LOGIC_MISC2_SEL_YIMAX_IMAGEMAX      0x00000001 /* RW--V */
#define NV_PGRAPH_XY_LOGIC_MISC2_SEL_XXTRA                    20:20 /* RWIVF */
#define NV_PGRAPH_XY_LOGIC_MISC2_SEL_XXTRA_CLIPMAX       0x00000000 /* RWI-V */
#define NV_PGRAPH_XY_LOGIC_MISC2_SEL_XXTRA_IMAGEMAX      0x00000001 /* RW--V */
#define NV_PGRAPH_XY_LOGIC_MISC3                         0x00400520 /* RW-4R */
#define NV_PGRAPH_XY_LOGIC_MISC3_WDIMY_EQ_0                     0:0 /* RWXVF */
#define NV_PGRAPH_XY_LOGIC_MISC3_WDIMY_EQ_0_NULL         0x00000000 /* RW--V */
#define NV_PGRAPH_XY_LOGIC_MISC3_WDIMY_EQ_0_TRUE         0x00000001 /* RW--V */
#define NV_PGRAPH_XY_LOGIC_MISC3_RELOAD_WDIMY                   4:4 /* RWXVF */
#define NV_PGRAPH_XY_LOGIC_MISC3_RELOAD_WDIMY_NULL       0x00000000 /* RW--V */
#define NV_PGRAPH_XY_LOGIC_MISC3_RELOAD_WDIMY_TRUE       0x00000001 /* RW--V */
#define NV_PGRAPH_XY_LOGIC_MISC3_RELOAD_WX                      8:8 /* RWIVF */
#define NV_PGRAPH_XY_LOGIC_MISC3_RELOAD_WX_NULL          0x00000000 /* RWI-V */
#define NV_PGRAPH_XY_LOGIC_MISC3_RELOAD_WX_TRUE          0x00000001 /* RW--V */
#define NV_PGRAPH_XY_LOGIC_MISC3_TEXT_ALG                     12:12 /* RWIVF */
#define NV_PGRAPH_XY_LOGIC_MISC3_TEXT_ALG_NULL           0x00000000 /* RWI-V */
#define NV_PGRAPH_XY_LOGIC_MISC3_TEXT_ALG_TRUE           0x00000001 /* RW--V */
#define NV_PGRAPH_XY_LOGIC_MISC3_TEXT_DIMX                    22:16 /* RWXUF */
#define NV_PGRAPH_XY_LOGIC_MISC3_TEXT_DIMX_0             0x00000000 /* RW--V */
#define NV_PGRAPH_XY_LOGIC_MISC3_TEXT_WDIMX                   30:24 /* RWXUF */
#define NV_PGRAPH_XY_LOGIC_MISC3_TEXT_WDIMX_0            0x00000000 /* RW--V */
#define NV_PGRAPH_X_MISC                                 0x00400500 /* RW-4R */
#define NV_PGRAPH_X_MISC_BIT33_0                                0:0 /* RWNVF */
#define NV_PGRAPH_X_MISC_BIT33_0_0                       0x00000000 /* RWN-V */
#define NV_PGRAPH_X_MISC_BIT33_1                                1:1 /* RWNVF */
#define NV_PGRAPH_X_MISC_BIT33_1_0                       0x00000000 /* RWN-V */
#define NV_PGRAPH_X_MISC_BIT33_2                                2:2 /* RWNVF */
#define NV_PGRAPH_X_MISC_BIT33_2_0                       0x00000000 /* RWN-V */
#define NV_PGRAPH_X_MISC_BIT33_3                                3:3 /* RWNVF */
#define NV_PGRAPH_X_MISC_BIT33_3_0                       0x00000000 /* RWN-V */
#define NV_PGRAPH_X_MISC_RANGE_0                                4:4 /* RWNVF */
#define NV_PGRAPH_X_MISC_RANGE_0_0                       0x00000000 /* RWN-V */
#define NV_PGRAPH_X_MISC_RANGE_1                                5:5 /* RWNVF */
#define NV_PGRAPH_X_MISC_RANGE_1_0                       0x00000000 /* RWN-V */
#define NV_PGRAPH_X_MISC_RANGE_2                                6:6 /* RWNVF */
#define NV_PGRAPH_X_MISC_RANGE_2_0                       0x00000000 /* RWN-V */
#define NV_PGRAPH_X_MISC_RANGE_3                                7:7 /* RWNVF */
#define NV_PGRAPH_X_MISC_RANGE_3_0                       0x00000000 /* RWN-V */
#define NV_PGRAPH_X_MISC_ADDER_OUTPUT                         29:28 /* RWXVF */
#define NV_PGRAPH_X_MISC_ADDER_OUTPUT_EQ_0               0x00000000 /* RW--V */
#define NV_PGRAPH_X_MISC_ADDER_OUTPUT_LT_0               0x00000001 /* RW--V */
#define NV_PGRAPH_X_MISC_ADDER_OUTPUT_GT_0               0x00000002 /* RW--V */
#define NV_PGRAPH_Y_MISC                                 0x00400504 /* RW-4R */
#define NV_PGRAPH_Y_MISC_BIT33_0                                0:0 /* RWNVF */
#define NV_PGRAPH_Y_MISC_BIT33_0_0                       0x00000000 /* RWN-V */
#define NV_PGRAPH_Y_MISC_BIT33_1                                1:1 /* RWNVF */
#define NV_PGRAPH_Y_MISC_BIT33_1_0                       0x00000000 /* RWN-V */
#define NV_PGRAPH_Y_MISC_BIT33_2                                2:2 /* RWNVF */
#define NV_PGRAPH_Y_MISC_BIT33_2_0                       0x00000000 /* RWN-V */
#define NV_PGRAPH_Y_MISC_BIT33_3                                3:3 /* RWNVF */
#define NV_PGRAPH_Y_MISC_BIT33_3_0                       0x00000000 /* RWN-V */
#define NV_PGRAPH_Y_MISC_RANGE_0                                4:4 /* RWNVF */
#define NV_PGRAPH_Y_MISC_RANGE_0_0                       0x00000000 /* RWN-V */
#define NV_PGRAPH_Y_MISC_RANGE_1                                5:5 /* RWNVF */
#define NV_PGRAPH_Y_MISC_RANGE_1_0                       0x00000000 /* RWN-V */
#define NV_PGRAPH_Y_MISC_RANGE_2                                6:6 /* RWNVF */
#define NV_PGRAPH_Y_MISC_RANGE_2_0                       0x00000000 /* RWN-V */
#define NV_PGRAPH_Y_MISC_RANGE_3                                7:7 /* RWNVF */
#define NV_PGRAPH_Y_MISC_RANGE_3_0                       0x00000000 /* RWN-V */
#define NV_PGRAPH_Y_MISC_ADDER_OUTPUT                         29:28 /* RWXVF */
#define NV_PGRAPH_Y_MISC_ADDER_OUTPUT_EQ_0               0x00000000 /* RW--V */
#define NV_PGRAPH_Y_MISC_ADDER_OUTPUT_LT_0               0x00000001 /* RW--V */
#define NV_PGRAPH_Y_MISC_ADDER_OUTPUT_GT_0               0x00000002 /* RW--V */
#define NV_PGRAPH_ABS_UCLIP_XMIN                         0x0040053C /* RW-4R */
#define NV_PGRAPH_ABS_UCLIP_XMIN_VALUE                         15:0 /* RWXSF */
#define NV_PGRAPH_ABS_UCLIP_XMIN_VALUE_019               0x00000000 /* RWC-V */
#define NV_PGRAPH_ABS_UCLIP_XMIN_VALUE_053               0x00000000 /* RWC-V */
#define NV_PGRAPH_ABS_UCLIP_XMAX                         0x00400544 /* RW-4R */
#define NV_PGRAPH_ABS_UCLIP_XMAX_VALUE                         17:0 /* RWXSF */
#define NV_PGRAPH_ABS_UCLIP_XMAX_VALUE_019               0x00000000 /* RWC-V */
#define NV_PGRAPH_ABS_UCLIP_XMAX_VALUE_053               0x00000000 /* RWC-V */
#define NV_PGRAPH_ABS_UCLIP_YMIN                         0x00400540 /* RW-4R */
#define NV_PGRAPH_ABS_UCLIP_YMIN_VALUE                         15:0 /* RWXSF */
#define NV_PGRAPH_ABS_UCLIP_YMIN_VALUE_019               0x00000000 /* RWC-V */
#define NV_PGRAPH_ABS_UCLIP_YMIN_VALUE_053               0x00000000 /* RWC-V */
#define NV_PGRAPH_ABS_UCLIP_YMAX                         0x00400548 /* RW-4R */
#define NV_PGRAPH_ABS_UCLIP_YMAX_VALUE                         17:0 /* RWXSF */
#define NV_PGRAPH_ABS_UCLIP_YMAX_VALUE_019               0x00000000 /* RWC-V */
#define NV_PGRAPH_ABS_UCLIP_YMAX_VALUE_053               0x00000000 /* RWC-V */
#define NV_PGRAPH_ABS_UCLIP3D_XMIN                       0x00400550 /* RW-4R */
#define NV_PGRAPH_ABS_UCLIP3D_XMIN_VALUE                       15:0 /* RWXSF */
#define NV_PGRAPH_ABS_UCLIP3D_XMAX                       0x00400558 /* RW-4R */
#define NV_PGRAPH_ABS_UCLIP3D_XMAX_VALUE                       17:0 /* RWXSF */
#define NV_PGRAPH_ABS_UCLIP3D_YMIN                       0x00400554 /* RW-4R */
#define NV_PGRAPH_ABS_UCLIP3D_YMIN_VALUE                       15:0 /* RWXSF */
#define NV_PGRAPH_ABS_UCLIP3D_YMAX                       0x0040055C /* RW-4R */
#define NV_PGRAPH_ABS_UCLIP3D_YMAX_VALUE                       17:0 /* RWXSF */
#define NV_PGRAPH_ABS_UCLIPA_XMIN                        0x00400560 /* RW-4R */
#define NV_PGRAPH_ABS_UCLIPA_XMIN_VALUE                        15:0 /* RWXSF */
#define NV_PGRAPH_ABS_UCLIPA_XMAX                        0x00400568 /* RW-4R */
#define NV_PGRAPH_ABS_UCLIPA_XMAX_VALUE                        17:0 /* RWXSF */
#define NV_PGRAPH_ABS_UCLIPA_YMIN                        0x00400564 /* RW-4R */
#define NV_PGRAPH_ABS_UCLIPA_YMIN_VALUE                        15:0 /* RWXSF */
#define NV_PGRAPH_ABS_UCLIPA_YMAX                        0x0040056C /* RW-4R */
#define NV_PGRAPH_ABS_UCLIPA_YMAX_VALUE                        17:0 /* RWXSF */
#define NV_PGRAPH_SOURCE_COLOR                           0x0040050C /* RW-4R */
#define NV_PGRAPH_SOURCE_COLOR_VALUE                           31:0 /* RWNVF */
#define NV_PGRAPH_SOURCE_COLOR_VALUE_0                   0x00000000 /* RWN-V */
#define NV_PGRAPH_VALID1                                 0x00400508 /* RW-4R */
#define NV_PGRAPH_VALID1_VLD                                   22:0 /* RWNVF */
#define NV_PGRAPH_VALID1_VLD_0                           0x00000000 /* RWN-V */
#define NV_PGRAPH_VALID1_VLD_NOCLIP                       (0x1<<19) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_SRCCOLOR                     (0x1<<16) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTMOVE                      (0x1<<21) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTX01                        (0x3<<0) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTX02                        (0x7<<0) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTX03                        (0xf<<0) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTXCHAIN01                   (0x3<<4) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTXCHAIN02                   (0x7<<4) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTXCHAIN03                   (0xf<<4) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTY01                        (0x3<<8) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTY02                        (0x7<<8) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTY03                        (0xf<<8) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTYCHAIN01                  (0x3<<12) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTYCHAIN02                  (0x7<<12) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTYCHAIN03                  (0xf<<12) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_X_OFFSET                      (0x1<<0) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_XCHAIN_OFFSET                 (0x1<<4) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_Y_OFFSET                      (0x1<<8) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_YCHAIN_OFFSET                (0x1<<12) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTCOLOR0                    (0x1<<17) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTCOLOR1                    (0x1<<18) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTCLIP                      (0x1<<20) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTFONT                      (0x1<<22) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTOFFSET                    (0x1<<22) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTBPITCH                     (0x1<<2) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTBOFFSET                    (0x1<<3) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTDUDX                       (0x1<<4) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTDVDY                       (0x1<<5) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTPOINT                      (0x1<<8) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTSIZE                       (0x1<<9) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTPITCH                     (0x1<<10) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTSTART                     (0x1<<11) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTDUDX2                     (0x1<<12) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTDVDY2                     (0x1<<13) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTPOINT2                    (0x1<<14) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTSIZE2                     (0x1<<15) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTPITCH2                    (0x1<<16) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTSTART2                    (0x1<<17) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTOFFSIN                     (0x1<<0) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTOFFSOUT                    (0x1<<1) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTPITCHIN                    (0x1<<2) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTPITCHOUT                   (0x1<<3) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTLENGTH                     (0x1<<4) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTCOUNT                      (0x1<<5) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTFORMAT                     (0x1<<6) /* RW--V */
#define NV_PGRAPH_VALID1_VLD_GOTNOTIFY                     (0x1<<7) /* RW--V */
#define NV_PGRAPH_VALID1_CLIP_MIN                             28:28 /* RWIVF */
#define NV_PGRAPH_VALID1_CLIP_MIN_NO_ERROR               0x00000000 /* RWI-V */
#define NV_PGRAPH_VALID1_CLIP_MIN_ONLY                   0x00000001 /* RW--V */
#define NV_PGRAPH_VALID1_CLIP_MIN_019                    0x00000000 /* RWC-V */
#define NV_PGRAPH_VALID1_CLIP_MIN_053                    0x00000000 /* RWC-V */
#define NV_PGRAPH_VALID1_CLIPA_MIN                            29:29 /* RWIVF */
#define NV_PGRAPH_VALID1_CLIPA_MIN_NO_ERROR              0x00000000 /* RWI-V */
#define NV_PGRAPH_VALID1_CLIPA_MIN_ONLY                  0x00000001 /* RW--V */
#define NV_PGRAPH_VALID1_CLIP_MAX                             30:30 /* RWIVF */
#define NV_PGRAPH_VALID1_CLIP_MAX_NO_ERROR               0x00000000 /* RWI-V */
#define NV_PGRAPH_VALID1_CLIP_MAX_ONLY                   0x00000001 /* RW--V */
#define NV_PGRAPH_VALID1_CLIP_MAX_019                    0x00000000 /* RWC-V */
#define NV_PGRAPH_VALID1_CLIP_MAX_053                    0x00000000 /* RWC-V */
#define NV_PGRAPH_VALID1_CLIPA_MAX                            31:31 /* RWIVF */
#define NV_PGRAPH_VALID1_CLIPA_MAX_NO_ERROR              0x00000000 /* RWI-V */
#define NV_PGRAPH_VALID1_CLIPA_MAX_ONLY                  0x00000001 /* RW--V */
#define NV_PGRAPH_VALID2                                 0x00400578 /* RW-4R */
#define NV_PGRAPH_VALID2_VLD2                                  28:0 /* RWNVF */
#define NV_PGRAPH_VALID2_VLD2_0                          0x00000000 /* RWN-V */
#define NV_PGRAPH_VALID2_VLD2_GOT3D_COMBINE0A               (1<<28) /* RW--V */
#define NV_PGRAPH_VALID2_VLD2_GOT3D_COMBINE0C               (1<<27) /* RW--V */
#define NV_PGRAPH_VALID2_VLD2_GOT3D_COMBINE1A               (1<<26) /* RW--V */
#define NV_PGRAPH_VALID2_VLD2_GOT3D_COMBINE1C               (1<<25) /* RW--V */
#define NV_PGRAPH_VALID2_VLD2_GOT3D_COMBFACTOR              (1<<24) /* RW--V */
#define NV_PGRAPH_VALID2_VLD2_GOT3D_FILTER1                 (1<<23) /* RW--V */
#define NV_PGRAPH_VALID2_VLD2_GOT3D_OFFSET1                 (1<<22) /* RW--V */
#define NV_PGRAPH_VALID2_VLD2_GOT3D_FORMAT1                 (1<<21) /* RW--V */
#define NV_PGRAPH_VALID2_VLD2_GOT3D_BLEND                   (1<<20) /* RW--V */
#define NV_PGRAPH_VALID2_VLD2_GOT3D_CONTROL2                (1<<19) /* RW--V */
#define NV_PGRAPH_VALID2_VLD2_GOT3D_CONTROL1                (1<<18) /* RW--V */
#define NV_PGRAPH_VALID2_VLD2_GOT3D_CONTROL0                (1<<17) /* RW--V */
#define NV_PGRAPH_VALID2_VLD2_GOT3D_FILTER0                 (1<<16) /* RW--V */
#define NV_PGRAPH_VALID2_VLD2_GOT3D_FORMAT0                 (1<<15) /* RW--V */
#define NV_PGRAPH_VALID2_VLD2_GOT3D_OFFSET0                 (1<<14) /* RW--V */
#define NV_PGRAPH_VALID2_VLD2_GOT3D_FOGCOLOR                (1<<13) /* RW--V */
#define NV_PGRAPH_VALID2_VLD2_GOT3D_COLORKEY                (1<<12) /* RW--V */
#define NV_PGRAPH_VALID2_VLD2_GOT3D_V1                       (1<<9) /* RW--V */
#define NV_PGRAPH_VALID2_VLD2_GOT3D_U1                       (1<<8) /* RW--V */
#define NV_PGRAPH_VALID2_VLD2_GOT3D_V0                       (1<<7) /* RW--V */
#define NV_PGRAPH_VALID2_VLD2_GOT3D_U0                       (1<<6) /* RW--V */
#define NV_PGRAPH_VALID2_VLD2_GOT3D_X                        (1<<5) /* RW--V */
#define NV_PGRAPH_VALID2_VLD2_GOT3D_Y                        (1<<4) /* RW--V */
#define NV_PGRAPH_VALID2_VLD2_GOT3D_ZETA                     (1<<3) /* RW--V */
#define NV_PGRAPH_VALID2_VLD2_GOT3D_M                        (1<<2) /* RW--V */
#define NV_PGRAPH_VALID2_VLD2_GOT3D_COLOR                    (1<<1) /* RW--V */
#define NV_PGRAPH_VALID2_VLD2_GOT3D_SPECULAR                 (1<<0) /* RW--V */
#define NV_PGRAPH_VALID2_VLD2_DX3FULLVERTEX               (0x7f<<0) /* RW--V */
#define NV_PGRAPH_VALID2_VLD2_DX5FULLVERTEX               (0x7f<<0) /* RW--V */
#define NV_PGRAPH_VALID2_VLD2_DX6FULLVERTEX              (0x1ff<<0) /* RW--V */
#define NV_PGRAPH_VALID2_VLD2_DX3FULLSTATE               (0x3f<<13) /* RW--V */
#define NV_PGRAPH_VALID2_VLD2_DX5FULLSTATE              (0x1ff<<12) /* RW--V */
#define NV_PGRAPH_VALID2_VLD2_DX6FULLSTATE             (0xffff<<13) /* RW--V */
#define NV_PGRAPH_VALID2_CLIP3D_MIN                           30:30 /* RWIVF */
#define NV_PGRAPH_VALID2_CLIP3D_MIN_NO_ERROR             0x00000000 /* RWI-V */
#define NV_PGRAPH_VALID2_CLIP3D_MIN_ONLY                 0x00000001 /* RW--V */
#define NV_PGRAPH_VALID2_CLIP3D_MAX                           31:31 /* RWIVF */
#define NV_PGRAPH_VALID2_CLIP3D_MAX_NO_ERROR             0x00000000 /* RWI-V */
#define NV_PGRAPH_VALID2_CLIP3D_MAX_ONLY                 0x00000001 /* RW--V */
#define NV_PGRAPH_ABS_ICLIP_XMAX                         0x00400534 /* RW-4R */
#define NV_PGRAPH_ABS_ICLIP_XMAX_VALUE                         17:0 /* RWXSF */
#define NV_PGRAPH_ABS_ICLIP_YMAX                         0x00400538 /* RW-4R */
#define NV_PGRAPH_ABS_ICLIP_YMAX_VALUE                         17:0 /* RWXSF */
#define NV_PGRAPH_CLIPX_0                                0x00400524 /* RW-4R */
#define NV_PGRAPH_CLIPX_0_CLIP0_MIN                             1:0 /* RWNVF */
#define NV_PGRAPH_CLIPX_0_CLIP0_MIN_GT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPX_0_CLIP0_MIN_LT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPX_0_CLIP0_MIN_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPX_0_CLIP0_MAX                             3:2 /* RWNVF */
#define NV_PGRAPH_CLIPX_0_CLIP0_MAX_LT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPX_0_CLIP0_MAX_GT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPX_0_CLIP0_MAX_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPX_0_CLIP1_MIN                             5:4 /* RWNVF */
#define NV_PGRAPH_CLIPX_0_CLIP1_MIN_GT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPX_0_CLIP1_MIN_LT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPX_0_CLIP1_MIN_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPX_0_CLIP1_MAX                             7:6 /* RWNVF */
#define NV_PGRAPH_CLIPX_0_CLIP1_MAX_LT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPX_0_CLIP1_MAX_GT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPX_0_CLIP1_MAX_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPX_0_CLIP2_MIN                             9:8 /* RWNVF */
#define NV_PGRAPH_CLIPX_0_CLIP2_MIN_GT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPX_0_CLIP2_MIN_LT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPX_0_CLIP2_MIN_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPX_0_CLIP2_MAX                           11:10 /* RWNVF */
#define NV_PGRAPH_CLIPX_0_CLIP2_MAX_LT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPX_0_CLIP2_MAX_GT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPX_0_CLIP2_MAX_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPX_0_CLIP3_MIN                           13:12 /* RWNVF */
#define NV_PGRAPH_CLIPX_0_CLIP3_MIN_GT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPX_0_CLIP3_MIN_LT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPX_0_CLIP3_MIN_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPX_0_CLIP3_MAX                           15:14 /* RWNVF */
#define NV_PGRAPH_CLIPX_0_CLIP3_MAX_LT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPX_0_CLIP3_MAX_GT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPX_0_CLIP3_MAX_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPX_0_CLIP4_MIN                           17:16 /* RWNVF */
#define NV_PGRAPH_CLIPX_0_CLIP4_MIN_GT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPX_0_CLIP4_MIN_LT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPX_0_CLIP4_MIN_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPX_0_CLIP4_MAX                           19:18 /* RWNVF */
#define NV_PGRAPH_CLIPX_0_CLIP4_MAX_LT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPX_0_CLIP4_MAX_GT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPX_0_CLIP4_MAX_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPX_0_CLIP5_MIN                           21:20 /* RWNVF */
#define NV_PGRAPH_CLIPX_0_CLIP5_MIN_GT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPX_0_CLIP5_MIN_LT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPX_0_CLIP5_MIN_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPX_0_CLIP5_MAX                           23:22 /* RWNVF */
#define NV_PGRAPH_CLIPX_0_CLIP5_MAX_LT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPX_0_CLIP5_MAX_GT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPX_0_CLIP5_MAX_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPX_0_CLIP6_MIN                           25:24 /* RWNVF */
#define NV_PGRAPH_CLIPX_0_CLIP6_MIN_GT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPX_0_CLIP6_MIN_LT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPX_0_CLIP6_MIN_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPX_0_CLIP6_MAX                           27:26 /* RWNVF */
#define NV_PGRAPH_CLIPX_0_CLIP6_MAX_LT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPX_0_CLIP6_MAX_GT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPX_0_CLIP6_MAX_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPX_0_CLIP7_MIN                           29:28 /* RWNVF */
#define NV_PGRAPH_CLIPX_0_CLIP7_MIN_GT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPX_0_CLIP7_MIN_LT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPX_0_CLIP7_MIN_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPX_0_CLIP7_MAX                           31:30 /* RWNVF */
#define NV_PGRAPH_CLIPX_0_CLIP7_MAX_LT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPX_0_CLIP7_MAX_GT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPX_0_CLIP7_MAX_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPX_1                                0x00400528 /* RW-4R */
#define NV_PGRAPH_CLIPX_1_CLIP8_MIN                             1:0 /* RWNVF */
#define NV_PGRAPH_CLIPX_1_CLIP8_MIN_GT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPX_1_CLIP8_MIN_LT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPX_1_CLIP8_MIN_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPX_1_CLIP8_MAX                             3:2 /* RWNVF */
#define NV_PGRAPH_CLIPX_1_CLIP8_MAX_LT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPX_1_CLIP8_MAX_GT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPX_1_CLIP8_MAX_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPX_1_CLIP9_MIN                             5:4 /* RWNVF */
#define NV_PGRAPH_CLIPX_1_CLIP9_MIN_GT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPX_1_CLIP9_MIN_LT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPX_1_CLIP9_MIN_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPX_1_CLIP9_MAX                             7:6 /* RWNVF */
#define NV_PGRAPH_CLIPX_1_CLIP9_MAX_LT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPX_1_CLIP9_MAX_GT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPX_1_CLIP9_MAX_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPX_1_CLIP10_MIN                            9:8 /* RWNVF */
#define NV_PGRAPH_CLIPX_1_CLIP10_MIN_GT                  0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPX_1_CLIP10_MIN_LT                  0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPX_1_CLIP10_MIN_EQ                  0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPX_1_CLIP10_MAX                          11:10 /* RWNVF */
#define NV_PGRAPH_CLIPX_1_CLIP10_MAX_LT                  0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPX_1_CLIP10_MAX_GT                  0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPX_1_CLIP10_MAX_EQ                  0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPX_1_CLIP11_MIN                          13:12 /* RWNVF */
#define NV_PGRAPH_CLIPX_1_CLIP11_MIN_GT                  0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPX_1_CLIP11_MIN_LT                  0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPX_1_CLIP11MIN_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPX_1_CLIP11_MAX                          15:14 /* RWNVF */
#define NV_PGRAPH_CLIPX_1_CLIP11_MAX_LT                  0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPX_1_CLIP11_MAX_GT                  0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPX_1_CLIP11_MAX_EQ                  0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPX_1_CLIP12_MIN                          17:16 /* RWNVF */
#define NV_PGRAPH_CLIPX_1_CLIP12_MIN_GT                  0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPX_1_CLIP12_MIN_LT                  0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPX_1_CLIP12_MIN_EQ                  0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPX_1_CLIP12_MAX                          19:18 /* RWNVF */
#define NV_PGRAPH_CLIPX_1_CLIP12_MAX_LT                  0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPX_1_CLIP12_MAX_GT                  0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPX_1_CLIP12_MAX_EQ                  0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPX_1_CLIP13_MIN                          21:20 /* RWNVF */
#define NV_PGRAPH_CLIPX_1_CLIP13_MIN_GT                  0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPX_1_CLIP13_MIN_LT                  0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPX_1_CLIP13_MIN_EQ                  0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPX_1_CLIP13_MAX                          23:22 /* RWNVF */
#define NV_PGRAPH_CLIPX_1_CLIP13_MAX_LT                  0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPX_1_CLIP13_MAX_GT                  0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPX_1_CLIP13_MAX_EQ                  0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPX_1_CLIP14_MIN                          25:24 /* RWNVF */
#define NV_PGRAPH_CLIPX_1_CLIP14_MIN_GT                  0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPX_1_CLIP14_MIN_LT                  0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPX_1_CLIP14_MIN_EQ                  0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPX_1_CLIP14_MAX                          27:26 /* RWNVF */
#define NV_PGRAPH_CLIPX_1_CLIP14_MAX_LT                  0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPX_1_CLIP14_MAX_GT                  0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPX_1_CLIP14_MAX_EQ                  0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPX_1_CLIP15_MIN                          29:28 /* RWNVF */
#define NV_PGRAPH_CLIPX_1_CLIP15_MIN_GT                  0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPX_1_CLIP15_MIN_LT                  0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPX_1_CLIP15_MIN_EQ                  0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPX_1_CLIP15_MAX                          31:30 /* RWNVF */
#define NV_PGRAPH_CLIPX_1_CLIP15_MAX_LT                  0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPX_1_CLIP15_MAX_GT                  0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPX_1_CLIP15_MAX_EQ                  0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPY_0                                0x0040052c /* RW-4R */
#define NV_PGRAPH_CLIPY_0_CLIP0_MIN                             1:0 /* RWNVF */
#define NV_PGRAPH_CLIPY_0_CLIP0_MIN_GT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPY_0_CLIP0_MIN_LT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPY_0_CLIP0_MIN_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPY_0_CLIP0_MAX                             3:2 /* RWNVF */
#define NV_PGRAPH_CLIPY_0_CLIP0_MAX_LT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPY_0_CLIP0_MAX_GT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPY_0_CLIP0_MAX_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPY_0_CLIP1_MIN                             5:4 /* RWNVF */
#define NV_PGRAPH_CLIPY_0_CLIP1_MIN_GT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPY_0_CLIP1_MIN_LT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPY_0_CLIP1_MIN_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPY_0_CLIP1_MAX                             7:6 /* RWNVF */
#define NV_PGRAPH_CLIPY_0_CLIP1_MAX_LT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPY_0_CLIP1_MAX_GT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPY_0_CLIP1_MAX_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPY_0_CLIP2_MIN                             9:8 /* RWNVF */
#define NV_PGRAPH_CLIPY_0_CLIP2_MIN_GT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPY_0_CLIP2_MIN_LT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPY_0_CLIP2_MIN_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPY_0_CLIP2_MAX                           11:10 /* RWNVF */
#define NV_PGRAPH_CLIPY_0_CLIP2_MAX_LT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPY_0_CLIP2_MAX_GT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPY_0_CLIP2_MAX_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPY_0_CLIP3_MIN                           13:12 /* RWNVF */
#define NV_PGRAPH_CLIPY_0_CLIP3_MIN_GT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPY_0_CLIP3_MIN_LT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPY_0_CLIP3_MIN_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPY_0_CLIP3_MAX                           15:14 /* RWNVF */
#define NV_PGRAPH_CLIPY_0_CLIP3_MAX_LT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPY_0_CLIP3_MAX_GT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPY_0_CLIP3_MAX_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPY_0_CLIP4_MIN                           17:16 /* RWNVF */
#define NV_PGRAPH_CLIPY_0_CLIP4_MIN_GT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPY_0_CLIP4_MIN_LT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPY_0_CLIP4_MIN_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPY_0_CLIP4_MAX                           19:18 /* RWNVF */
#define NV_PGRAPH_CLIPY_0_CLIP4_MAX_LT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPY_0_CLIP4_MAX_GT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPY_0_CLIP4_MAX_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPY_0_CLIP5_MIN                           21:20 /* RWNVF */
#define NV_PGRAPH_CLIPY_0_CLIP5_MIN_GT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPY_0_CLIP5_MIN_LT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPY_0_CLIP5_MIN_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPY_0_CLIP5_MAX                           23:22 /* RWNVF */
#define NV_PGRAPH_CLIPY_0_CLIP5_MAX_LT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPY_0_CLIP5_MAX_GT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPY_0_CLIP5_MAX_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPY_0_CLIP6_MIN                           25:24 /* RWNVF */
#define NV_PGRAPH_CLIPY_0_CLIP6_MIN_GT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPY_0_CLIP6_MIN_LT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPY_0_CLIP6_MIN_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPY_0_CLIP6_MAX                           27:26 /* RWNVF */
#define NV_PGRAPH_CLIPY_0_CLIP6_MAX_LT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPY_0_CLIP6_MAX_GT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPY_0_CLIP6_MAX_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPY_0_CLIP7_MIN                           29:28 /* RWNVF */
#define NV_PGRAPH_CLIPY_0_CLIP7_MIN_GT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPY_0_CLIP7_MIN_LT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPY_0_CLIP7_MIN_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPY_0_CLIP7_MAX                           31:30 /* RWNVF */
#define NV_PGRAPH_CLIPY_0_CLIP7_MAX_LT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPY_0_CLIP7_MAX_GT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPY_0_CLIP7_MAX_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPY_1                                0x00400530 /* RW-4R */
#define NV_PGRAPH_CLIPY_1_CLIP8_MIN                             1:0 /* RWNVF */
#define NV_PGRAPH_CLIPY_1_CLIP8_MIN_GT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPY_1_CLIP8_MIN_LT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPY_1_CLIP8_MIN_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPY_1_CLIP8_MAX                             3:2 /* RWNVF */
#define NV_PGRAPH_CLIPY_1_CLIP8_MAX_LT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPY_1_CLIP8_MAX_GT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPY_1_CLIP8_MAX_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPY_1_CLIP9_MIN                             5:4 /* RWNVF */
#define NV_PGRAPH_CLIPY_1_CLIP9_MIN_GT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPY_1_CLIP9_MIN_LT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPY_1_CLIP9_MIN_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPY_1_CLIP9_MAX                             7:6 /* RWNVF */
#define NV_PGRAPH_CLIPY_1_CLIP9_MAX_LT                   0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPY_1_CLIP9_MAX_GT                   0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPY_1_CLIP9_MAX_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPY_1_CLIP10_MIN                            9:8 /* RWNVF */
#define NV_PGRAPH_CLIPY_1_CLIP10_MIN_GT                  0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPY_1_CLIP10_MIN_LT                  0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPY_1_CLIP10_MIN_EQ                  0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPY_1_CLIP10_MAX                          11:10 /* RWNVF */
#define NV_PGRAPH_CLIPY_1_CLIP10_MAX_LT                  0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPY_1_CLIP10_MAX_GT                  0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPY_1_CLIP10_MAX_EQ                  0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPY_1_CLIP11_MIN                          13:12 /* RWNVF */
#define NV_PGRAPH_CLIPY_1_CLIP11_MIN_GT                  0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPY_1_CLIP11_MIN_LT                  0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPY_1_CLIP11MIN_EQ                   0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPY_1_CLIP11_MAX                          15:14 /* RWNVF */
#define NV_PGRAPH_CLIPY_1_CLIP11_MAX_LT                  0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPY_1_CLIP11_MAX_GT                  0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPY_1_CLIP11_MAX_EQ                  0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPY_1_CLIP12_MIN                          17:16 /* RWNVF */
#define NV_PGRAPH_CLIPY_1_CLIP12_MIN_GT                  0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPY_1_CLIP12_MIN_LT                  0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPY_1_CLIP12_MIN_EQ                  0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPY_1_CLIP12_MAX                          19:18 /* RWNVF */
#define NV_PGRAPH_CLIPY_1_CLIP12_MAX_LT                  0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPY_1_CLIP12_MAX_GT                  0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPY_1_CLIP12_MAX_EQ                  0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPY_1_CLIP13_MIN                          21:20 /* RWNVF */
#define NV_PGRAPH_CLIPY_1_CLIP13_MIN_GT                  0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPY_1_CLIP13_MIN_LT                  0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPY_1_CLIP13_MIN_EQ                  0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPY_1_CLIP13_MAX                          23:22 /* RWNVF */
#define NV_PGRAPH_CLIPY_1_CLIP13_MAX_LT                  0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPY_1_CLIP13_MAX_GT                  0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPY_1_CLIP13_MAX_EQ                  0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPY_1_CLIP14_MIN                          25:24 /* RWNVF */
#define NV_PGRAPH_CLIPY_1_CLIP14_MIN_GT                  0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPY_1_CLIP14_MIN_LT                  0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPY_1_CLIP14_MIN_EQ                  0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPY_1_CLIP14_MAX                          27:26 /* RWNVF */
#define NV_PGRAPH_CLIPY_1_CLIP14_MAX_LT                  0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPY_1_CLIP14_MAX_GT                  0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPY_1_CLIP14_MAX_EQ                  0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPY_1_CLIP15_MIN                          29:28 /* RWNVF */
#define NV_PGRAPH_CLIPY_1_CLIP15_MIN_GT                  0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPY_1_CLIP15_MIN_LT                  0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPY_1_CLIP15_MIN_EQ                  0x00000002 /* RW--V */
#define NV_PGRAPH_CLIPY_1_CLIP15_MAX                          31:30 /* RWNVF */
#define NV_PGRAPH_CLIPY_1_CLIP15_MAX_LT                  0x00000000 /* RW--V */
#define NV_PGRAPH_CLIPY_1_CLIP15_MAX_GT                  0x00000001 /* RWN-V */
#define NV_PGRAPH_CLIPY_1_CLIP15_MAX_EQ                  0x00000002 /* RW--V */
#define NV_PGRAPH_MISC24_0                               0x00400510 /* RW-4R */
#define NV_PGRAPH_MISC24_0_VALUE                               23:0 /* RWXUF */
#define NV_PGRAPH_MISC24_1                               0x00400570 /* RW-4R */
#define NV_PGRAPH_MISC24_1_VALUE                               23:0 /* RWXUF */
#define NV_PGRAPH_MISC24_2                               0x00400574 /* RW-4R */
#define NV_PGRAPH_MISC24_2_VALUE                               23:0 /* RWXUF */
#define NV_PGRAPH_PASSTHRU_0                             0x0040057C /* RW-4R */
#define NV_PGRAPH_PASSTHRU_0_VALUE                             31:0 /* RWXUF */
#define NV_PGRAPH_PASSTHRU_1                             0x00400580 /* RW-4R */
#define NV_PGRAPH_PASSTHRU_1_VALUE                             31:0 /* RWXUF */
#define NV_PGRAPH_PASSTHRU_2                             0x00400584 /* RW-4R */
#define NV_PGRAPH_PASSTHRU_2_VALUE                             31:0 /* RWXUF */
#define NV_PGRAPH_DIMX_TEXTURE                           0x00400588 /* RW-4R */
#define NV_PGRAPH_DIMX_TEXTURE_VALUE                           15:0 /* RWXUF */
#define NV_PGRAPH_WDIMX_TEXTURE                          0x0040058c /* RW-4R */
#define NV_PGRAPH_WDIMX_TEXTURE_VALUE                          16:0 /* RWXSF */
#define NV_PGRAPH_U_RAM(i)                       (0x00400d00+(i)*4) /* RW-4A */
#define NV_PGRAPH_U_RAM__SIZE_1                                  16 /*       */
#define NV_PGRAPH_U_RAM_VALUE                                  31:6 /* RWXFF */
#define NV_PGRAPH_V_RAM(i)                       (0x00400d40+(i)*4) /* RW-4A */
#define NV_PGRAPH_V_RAM__SIZE_1                                  16 /*       */
#define NV_PGRAPH_V_RAM_VALUE                                  31:6 /* RWXFF */
#define NV_PGRAPH_M_RAM(i)                       (0x00400d80+(i)*4) /* RW-4A */
#define NV_PGRAPH_M_RAM__SIZE_1                                  16 /*       */
#define NV_PGRAPH_M_RAM_VALUE                                  31:6 /* RWXFF */
#define NV_PGRAPH_D3D_XY                                 0x004005c0 /* RW-4R */
#define NV_PGRAPH_D3D_XY_X_VALUE                               15:0 /* RWXSF */
#define NV_PGRAPH_D3D_XY_Y_VALUE                              31:16 /* RWXSF */
#define NV_PGRAPH_D3D_U0                                 0x004005c4 /* RW-4R */
#define NV_PGRAPH_D3D_U0_VALUE                                 31:6 /* RWXFF */
#define NV_PGRAPH_D3D_V0                                 0x004005c8 /* RW-4R */
#define NV_PGRAPH_D3D_V0_VALUE                                 31:6 /* RWXFF */
#define NV_PGRAPH_D3D_U1                                 0x004005cc /* RW-4R */
#define NV_PGRAPH_D3D_U1_VALUE                                 31:6 /* RWXFF */
#define NV_PGRAPH_D3D_V1                                 0x004005d0 /* RW-4R */
#define NV_PGRAPH_D3D_V1_VALUE                                 31:6 /* RWXFF */
#define NV_PGRAPH_D3D_ZETA                               0x004005d4 /* RW-4R */
#define NV_PGRAPH_D3D_ZETA_VALUE                               31:0 /* RWXFF */
#define NV_PGRAPH_D3D_RGB                                0x004005d8 /* RW-4R */
#define NV_PGRAPH_D3D_RGB_VALUE                                31:0 /* RWXUF */
#define NV_PGRAPH_D3D_S                                  0x004005dc /* RW-4R */
#define NV_PGRAPH_D3D_S_VALUE                                  31:0 /* RWXUF */
#define NV_PGRAPH_D3D_M                                  0x004005e0 /* RW-4R */
#define NV_PGRAPH_D3D_M_VALUE                                  31:6 /* RWXFF */
#define NV_PGRAPH_FORMAT0                                0x004005A8 /* RW-4R */
#define NV_PGRAPH_FORMAT0_CONTEXT_DMA                           1:1 /* RWXVF */
#define NV_PGRAPH_FORMAT0_CONTEXT_DMA_A                  0x00000000 /* RW--V */
#define NV_PGRAPH_FORMAT0_CONTEXT_DMA_B                  0x00000001 /* RW--V */
#define NV_PGRAPH_FORMAT0_COLORKEYENABLE                        2:2 /* RWXVF */
#define NV_PGRAPH_FORMAT0_COLORKEYENABLE_FALSE           0x00000000 /* RW--V */
#define NV_PGRAPH_FORMAT0_COLORKEYENABLE_TRUE            0x00000001 /* RW--V */
#define NV_PGRAPH_FORMAT0_ORIGIN_ZOH                            5:5 /* RWXVF */
#define NV_PGRAPH_FORMAT0_ORIGIN_ZOH_CENTER              0x00000000 /* RW--V */
#define NV_PGRAPH_FORMAT0_ORIGIN_ZOH_CORNER              0x00000001 /* RW--V */
#define NV_PGRAPH_FORMAT0_ORIGIN_FOH                            7:7 /* RWXVF */
#define NV_PGRAPH_FORMAT0_ORIGIN_FOH_CENTER              0x00000000 /* RW--V */
#define NV_PGRAPH_FORMAT0_ORIGIN_FOH_CORNER              0x00000001 /* RW--V */
#define NV_PGRAPH_FORMAT0_COLOR                                10:8 /* RWXVF */
#define NV_PGRAPH_FORMAT0_COLOR_LE_Y8                    0x00000000 /* RW--V */
#define NV_PGRAPH_FORMAT0_COLOR_LE_AY8                   0x00000001 /* RW--V */
#define NV_PGRAPH_FORMAT0_COLOR_LE_A1R5G5B5              0x00000002 /* RW--V */
#define NV_PGRAPH_FORMAT0_COLOR_LE_X1R5G5B5              0x00000003 /* RW--V */
#define NV_PGRAPH_FORMAT0_COLOR_LE_A4R4G4B4              0x00000004 /* RW--V */
#define NV_PGRAPH_FORMAT0_COLOR_LE_R5G6B5                0x00000005 /* RW--V */
#define NV_PGRAPH_FORMAT0_COLOR_LE_A8R8G8B8              0x00000006 /* RW--V */
#define NV_PGRAPH_FORMAT0_COLOR_LE_X8R8G8B8              0x00000007 /* RW--V */
#define NV_PGRAPH_FORMAT0_MIPMAP_LEVELS                       15:12 /* RWXVF */
#define NV_PGRAPH_FORMAT0_MIPMAP_LEVELS_INVALID          0x00000000 /* RW--V */
#define NV_PGRAPH_FORMAT0_MIPMAP_LEVELS_1                0x00000001 /* RW--V */
#define NV_PGRAPH_FORMAT0_MIPMAP_LEVELS_2                0x00000002 /* RW--V */
#define NV_PGRAPH_FORMAT0_MIPMAP_LEVELS_3                0x00000003 /* RW--V */
#define NV_PGRAPH_FORMAT0_MIPMAP_LEVELS_4                0x00000004 /* RW--V */
#define NV_PGRAPH_FORMAT0_MIPMAP_LEVELS_5                0x00000005 /* RW--V */
#define NV_PGRAPH_FORMAT0_MIPMAP_LEVELS_6                0x00000006 /* RW--V */
#define NV_PGRAPH_FORMAT0_MIPMAP_LEVELS_7                0x00000007 /* RW--V */
#define NV_PGRAPH_FORMAT0_MIPMAP_LEVELS_8                0x00000008 /* RW--V */
#define NV_PGRAPH_FORMAT0_MIPMAP_LEVELS_9                0x00000009 /* RW--V */
#define NV_PGRAPH_FORMAT0_MIPMAP_LEVELS_10               0x0000000A /* RW--V */
#define NV_PGRAPH_FORMAT0_MIPMAP_LEVELS_11               0x0000000B /* RW--V */
#define NV_PGRAPH_FORMAT0_MIPMAP_LEVELS_12               0x0000000C /* RW--V */
#define NV_PGRAPH_FORMAT0_MIPMAP_LEVELS_13               0x0000000D /* RW--V */
#define NV_PGRAPH_FORMAT0_MIPMAP_LEVELS_14               0x0000000E /* RW--V */
#define NV_PGRAPH_FORMAT0_MIPMAP_LEVELS_15               0x0000000F /* RW--V */
#define NV_PGRAPH_FORMAT0_BASE_SIZE_U                         19:16 /* RWXVF */
#define NV_PGRAPH_FORMAT0_BASE_SIZE_U_1                  0x00000000 /* RW--V */
#define NV_PGRAPH_FORMAT0_BASE_SIZE_U_2                  0x00000001 /* RW--V */
#define NV_PGRAPH_FORMAT0_BASE_SIZE_U_4                  0x00000002 /* RW--V */
#define NV_PGRAPH_FORMAT0_BASE_SIZE_U_8                  0x00000003 /* RW--V */
#define NV_PGRAPH_FORMAT0_BASE_SIZE_U_16                 0x00000004 /* RW--V */
#define NV_PGRAPH_FORMAT0_BASE_SIZE_U_32                 0x00000005 /* RW--V */
#define NV_PGRAPH_FORMAT0_BASE_SIZE_U_64                 0x00000006 /* RW--V */
#define NV_PGRAPH_FORMAT0_BASE_SIZE_U_128                0x00000007 /* RW--V */
#define NV_PGRAPH_FORMAT0_BASE_SIZE_U_256                0x00000008 /* RW--V */
#define NV_PGRAPH_FORMAT0_BASE_SIZE_U_512                0x00000009 /* RW--V */
#define NV_PGRAPH_FORMAT0_BASE_SIZE_U_1024               0x0000000A /* RW--V */
#define NV_PGRAPH_FORMAT0_BASE_SIZE_U_2048               0x0000000B /* RW--V */
#define NV_PGRAPH_FORMAT0_BASE_SIZE_V                         23:20 /* RWXVF */
#define NV_PGRAPH_FORMAT0_BASE_SIZE_V_1                  0x00000000 /* RW--V */
#define NV_PGRAPH_FORMAT0_BASE_SIZE_V_2                  0x00000001 /* RW--V */
#define NV_PGRAPH_FORMAT0_BASE_SIZE_V_4                  0x00000002 /* RW--V */
#define NV_PGRAPH_FORMAT0_BASE_SIZE_V_8                  0x00000003 /* RW--V */
#define NV_PGRAPH_FORMAT0_BASE_SIZE_V_16                 0x00000004 /* RW--V */
#define NV_PGRAPH_FORMAT0_BASE_SIZE_V_32                 0x00000005 /* RW--V */
#define NV_PGRAPH_FORMAT0_BASE_SIZE_V_64                 0x00000006 /* RW--V */
#define NV_PGRAPH_FORMAT0_BASE_SIZE_V_128                0x00000007 /* RW--V */
#define NV_PGRAPH_FORMAT0_BASE_SIZE_V_256                0x00000008 /* RW--V */
#define NV_PGRAPH_FORMAT0_BASE_SIZE_V_512                0x00000009 /* RW--V */
#define NV_PGRAPH_FORMAT0_BASE_SIZE_V_1024               0x0000000A /* RW--V */
#define NV_PGRAPH_FORMAT0_BASE_SIZE_V_2048               0x0000000B /* RW--V */
#define NV_PGRAPH_FORMAT0_TEXTUREADDRESSU                     26:24 /* RWXVF */
#define NV_PGRAPH_FORMAT0_TEXTUREADDRESSU_WRAP           0x00000001 /* RW--V */
#define NV_PGRAPH_FORMAT0_TEXTUREADDRESSU_MIRROR         0x00000002 /* RW--V */
#define NV_PGRAPH_FORMAT0_TEXTUREADDRESSU_CLAMP          0x00000003 /* RW--V */
#define NV_PGRAPH_FORMAT0_TEXTUREADDRESSU_BORDER         0x00000004 /* RW--V */
#define NV_PGRAPH_FORMAT0_WRAPU                               27:27 /* RWXVF */
#define NV_PGRAPH_FORMAT0_WRAPU_FALSE                    0x00000000 /* RW--V */
#define NV_PGRAPH_FORMAT0_WRAPU_TRUE                     0x00000001 /* RW--V */
#define NV_PGRAPH_FORMAT0_TEXTUREADDRESSV                     30:28 /* RWXVF */
#define NV_PGRAPH_FORMAT0_TEXTUREADDRESSV_WRAP           0x00000001 /* RW--V */
#define NV_PGRAPH_FORMAT0_TEXTUREADDRESSV_MIRROR         0x00000002 /* RW--V */
#define NV_PGRAPH_FORMAT0_TEXTUREADDRESSV_CLAMP          0x00000003 /* RW--V */
#define NV_PGRAPH_FORMAT0_TEXTUREADDRESSV_BORDER         0x00000004 /* RW--V */
#define NV_PGRAPH_FORMAT0_WRAPV                               31:31 /* RWXVF */
#define NV_PGRAPH_FORMAT0_WRAPV_FALSE                    0x00000000 /* RW--V */
#define NV_PGRAPH_FORMAT0_WRAPV_TRUE                     0x00000001 /* RW--V */
#define NV_PGRAPH_FORMAT1                                0x004005AC /* RW-4R */
#define NV_PGRAPH_FORMAT1_CONTEXT_DMA                           1:1 /* RWXVF */
#define NV_PGRAPH_FORMAT1_CONTEXT_DMA_A                  0x00000000 /* RW--V */
#define NV_PGRAPH_FORMAT1_CONTEXT_DMA_B                  0x00000001 /* RW--V */
#define NV_PGRAPH_FORMAT1_COLORKEYENABLE                        2:2 /* RWXVF */
#define NV_PGRAPH_FORMAT1_COLORKEYENABLE_FALSE           0x00000000 /* RW--V */
#define NV_PGRAPH_FORMAT1_COLORKEYENABLE_TRUE            0x00000001 /* RW--V */
#define NV_PGRAPH_FORMAT1_ORIGIN_ZOH                            5:5 /* RWXVF */
#define NV_PGRAPH_FORMAT1_ORIGIN_ZOH_CENTER              0x00000000 /* RW--V */
#define NV_PGRAPH_FORMAT1_ORIGIN_ZOH_CORNER              0x00000001 /* RW--V */
#define NV_PGRAPH_FORMAT1_ORIGIN_FOH                            7:7 /* RWXVF */
#define NV_PGRAPH_FORMAT1_ORIGIN_FOH_CENTER              0x00000000 /* RW--V */
#define NV_PGRAPH_FORMAT1_ORIGIN_FOH_CORNER              0x00000001 /* RW--V */
#define NV_PGRAPH_FORMAT1_COLOR                                10:8 /* RWXVF */
#define NV_PGRAPH_FORMAT1_COLOR_LE_Y8                    0x00000000 /* RW--V */
#define NV_PGRAPH_FORMAT1_COLOR_LE_AY8                   0x00000001 /* RW--V */
#define NV_PGRAPH_FORMAT1_COLOR_LE_A1R5G5B5              0x00000002 /* RW--V */
#define NV_PGRAPH_FORMAT1_COLOR_LE_X1R5G5B5              0x00000003 /* RW--V */
#define NV_PGRAPH_FORMAT1_COLOR_LE_A4R4G4B4              0x00000004 /* RW--V */
#define NV_PGRAPH_FORMAT1_COLOR_LE_R5G6B5                0x00000005 /* RW--V */
#define NV_PGRAPH_FORMAT1_COLOR_LE_A8R8G8B8              0x00000006 /* RW--V */
#define NV_PGRAPH_FORMAT1_COLOR_LE_X8R8G8B8              0x00000007 /* RW--V */
#define NV_PGRAPH_FORMAT1_MIPMAP_LEVELS                       15:12 /* RWXVF */
#define NV_PGRAPH_FORMAT1_MIPMAP_LEVELS_INVALID          0x00000000 /* RW--V */
#define NV_PGRAPH_FORMAT1_MIPMAP_LEVELS_1                0x00000001 /* RW--V */
#define NV_PGRAPH_FORMAT1_MIPMAP_LEVELS_2                0x00000002 /* RW--V */
#define NV_PGRAPH_FORMAT1_MIPMAP_LEVELS_3                0x00000003 /* RW--V */
#define NV_PGRAPH_FORMAT1_MIPMAP_LEVELS_4                0x00000004 /* RW--V */
#define NV_PGRAPH_FORMAT1_MIPMAP_LEVELS_5                0x00000005 /* RW--V */
#define NV_PGRAPH_FORMAT1_MIPMAP_LEVELS_6                0x00000006 /* RW--V */
#define NV_PGRAPH_FORMAT1_MIPMAP_LEVELS_7                0x00000007 /* RW--V */
#define NV_PGRAPH_FORMAT1_MIPMAP_LEVELS_8                0x00000008 /* RW--V */
#define NV_PGRAPH_FORMAT1_MIPMAP_LEVELS_9                0x00000009 /* RW--V */
#define NV_PGRAPH_FORMAT1_MIPMAP_LEVELS_10               0x0000000A /* RW--V */
#define NV_PGRAPH_FORMAT1_MIPMAP_LEVELS_11               0x0000000B /* RW--V */
#define NV_PGRAPH_FORMAT1_MIPMAP_LEVELS_12               0x0000000C /* RW--V */
#define NV_PGRAPH_FORMAT1_MIPMAP_LEVELS_13               0x0000000D /* RW--V */
#define NV_PGRAPH_FORMAT1_MIPMAP_LEVELS_14               0x0000000E /* RW--V */
#define NV_PGRAPH_FORMAT1_MIPMAP_LEVELS_15               0x0000000F /* RW--V */
#define NV_PGRAPH_FORMAT1_BASE_SIZE_U                         19:16 /* RWXVF */
#define NV_PGRAPH_FORMAT1_BASE_SIZE_U_1                  0x00000000 /* RW--V */
#define NV_PGRAPH_FORMAT1_BASE_SIZE_U_2                  0x00000001 /* RW--V */
#define NV_PGRAPH_FORMAT1_BASE_SIZE_U_4                  0x00000002 /* RW--V */
#define NV_PGRAPH_FORMAT1_BASE_SIZE_U_8                  0x00000003 /* RW--V */
#define NV_PGRAPH_FORMAT1_BASE_SIZE_U_16                 0x00000004 /* RW--V */
#define NV_PGRAPH_FORMAT1_BASE_SIZE_U_32                 0x00000005 /* RW--V */
#define NV_PGRAPH_FORMAT1_BASE_SIZE_U_64                 0x00000006 /* RW--V */
#define NV_PGRAPH_FORMAT1_BASE_SIZE_U_128                0x00000007 /* RW--V */
#define NV_PGRAPH_FORMAT1_BASE_SIZE_U_256                0x00000008 /* RW--V */
#define NV_PGRAPH_FORMAT1_BASE_SIZE_U_512                0x00000009 /* RW--V */
#define NV_PGRAPH_FORMAT1_BASE_SIZE_U_1024               0x0000000A /* RW--V */
#define NV_PGRAPH_FORMAT1_BASE_SIZE_U_2048               0x0000000B /* RW--V */
#define NV_PGRAPH_FORMAT1_BASE_SIZE_V                         23:20 /* RWXVF */
#define NV_PGRAPH_FORMAT1_BASE_SIZE_V_1                  0x00000000 /* RW--V */
#define NV_PGRAPH_FORMAT1_BASE_SIZE_V_2                  0x00000001 /* RW--V */
#define NV_PGRAPH_FORMAT1_BASE_SIZE_V_4                  0x00000002 /* RW--V */
#define NV_PGRAPH_FORMAT1_BASE_SIZE_V_8                  0x00000003 /* RW--V */
#define NV_PGRAPH_FORMAT1_BASE_SIZE_V_16                 0x00000004 /* RW--V */
#define NV_PGRAPH_FORMAT1_BASE_SIZE_V_32                 0x00000005 /* RW--V */
#define NV_PGRAPH_FORMAT1_BASE_SIZE_V_64                 0x00000006 /* RW--V */
#define NV_PGRAPH_FORMAT1_BASE_SIZE_V_128                0x00000007 /* RW--V */
#define NV_PGRAPH_FORMAT1_BASE_SIZE_V_256                0x00000008 /* RW--V */
#define NV_PGRAPH_FORMAT1_BASE_SIZE_V_512                0x00000009 /* RW--V */
#define NV_PGRAPH_FORMAT1_BASE_SIZE_V_1024               0x0000000A /* RW--V */
#define NV_PGRAPH_FORMAT1_BASE_SIZE_V_2048               0x0000000B /* RW--V */
#define NV_PGRAPH_FORMAT1_TEXTUREADDRESSU                     26:24 /* RWXVF */
#define NV_PGRAPH_FORMAT1_TEXTUREADDRESSU_WRAP           0x00000001 /* RW--V */
#define NV_PGRAPH_FORMAT1_TEXTUREADDRESSU_MIRROR         0x00000002 /* RW--V */
#define NV_PGRAPH_FORMAT1_TEXTUREADDRESSU_CLAMP          0x00000003 /* RW--V */
#define NV_PGRAPH_FORMAT1_TEXTUREADDRESSU_BORDER         0x00000004 /* RW--V */
#define NV_PGRAPH_FORMAT1_WRAPU                               27:27 /* RWXVF */
#define NV_PGRAPH_FORMAT1_WRAPU_FALSE                    0x00000000 /* RW--V */
#define NV_PGRAPH_FORMAT1_WRAPU_TRUE                     0x00000001 /* RW--V */
#define NV_PGRAPH_FORMAT1_TEXTUREADDRESSV                     30:28 /* RWXVF */
#define NV_PGRAPH_FORMAT1_TEXTUREADDRESSV_WRAP           0x00000001 /* RW--V */
#define NV_PGRAPH_FORMAT1_TEXTUREADDRESSV_MIRROR         0x00000002 /* RW--V */
#define NV_PGRAPH_FORMAT1_TEXTUREADDRESSV_CLAMP          0x00000003 /* RW--V */
#define NV_PGRAPH_FORMAT1_TEXTUREADDRESSV_BORDER         0x00000004 /* RW--V */
#define NV_PGRAPH_FORMAT1_WRAPV                               31:31 /* RWXVF */
#define NV_PGRAPH_FORMAT1_WRAPV_FALSE                    0x00000000 /* RW--V */
#define NV_PGRAPH_FORMAT1_WRAPV_TRUE                     0x00000001 /* RW--V */
#define NV_PGRAPH_BUNDLE_BASE                            0x00400E00 /* RW-4R */
#define NV_PGRAPH_TEXTUREOFFSET0                         0x00400E00 /* RW-4R */
#define NV_PGRAPH_TEXTUREOFFSET0_BUNDLE                  0x00000000 /* ----B */
#define NV_PGRAPH_TEXTUREOFFSET0_VALUE                         31:0 /* RWXUF */
#define NV_PGRAPH_TEXTUREOFFSET1                         0x00400E04 /* RW-4R */
#define NV_PGRAPH_TEXTUREOFFSET1_BUNDLE                  0x00000001 /* ----B */
#define NV_PGRAPH_TEXTUREOFFSET1_VALUE                         31:0 /* RWXUF */
#define NV_PGRAPH_TEXTUREPALETTE0                        0x00400E08 /* RW-4R */
#define NV_PGRAPH_TEXTUREPALETTE0_BUNDLE                 0x00000002 /* ----B */
#define NV_PGRAPH_TEXTUREPALETTE0_CONTEXT_DMA                   0:0 /* RWXVF */
#define NV_PGRAPH_TEXTUREPALETTE0_CONTEXT_DMA_A          0x00000000 /* RW--V */
#define NV_PGRAPH_TEXTUREPALETTE0_CONTEXT_DMA_B          0x00000001 /* RW--V */
#define NV_PGRAPH_TEXTUREPALETTE0_OFFSET                       31:6 /* RWXUF */
#define NV_PGRAPH_TEXTUREPALETTE1                        0x00400E0C /* RW-4R */
#define NV_PGRAPH_TEXTUREPALETTE1_BUNDLE                 0x00000003 /* ----B */
#define NV_PGRAPH_TEXTUREPALETTE1_CONTEXT_DMA                   0:0 /* RWXVF */
#define NV_PGRAPH_TEXTUREPALETTE1_CONTEXT_DMA_A          0x00000000 /* RW--V */
#define NV_PGRAPH_TEXTUREPALETTE1_CONTEXT_DMA_B          0x00000001 /* RW--V */
#define NV_PGRAPH_TEXTUREPALETTE1_OFFSET                       31:6 /* RWXUF */
#define NV_PGRAPH_TEXFORMAT0                             0x00400E10 /* RW-4R */
#define NV_PGRAPH_TEXFORMAT0_BUNDLE                      0x00000004 /* ----B */
#define NV_PGRAPH_TEXFORMAT0_CONTEXT_DMA                        1:1 /* RWXVF */
#define NV_PGRAPH_TEXFORMAT0_CONTEXT_DMA_A               0x00000000 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_CONTEXT_DMA_B               0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_CUBEMAPENABLE                      2:2 /* RWXVF */
#define NV_PGRAPH_TEXFORMAT0_CUBEMAPENABLE_OFF           0x00000000 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_CUBEMAPENABLE_ON            0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_ORIGIN_ZOH                         4:4 /* RWXVF */
#define NV_PGRAPH_TEXFORMAT0_ORIGIN_ZOH_CENTER           0x00000000 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_ORIGIN_ZOH_CORNER           0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_ORIGIN_FOH                         6:6 /* RWXVF */
#define NV_PGRAPH_TEXFORMAT0_ORIGIN_FOH_CENTER           0x00000000 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_ORIGIN_FOH_CORNER           0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_COLOR                             11:7 /* RWXVF */
#define NV_PGRAPH_TEXFORMAT0_COLOR_LE_Y8                 0x00000000 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_COLOR_LE_AY8                0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_COLOR_LE_A1R5G5B5           0x00000002 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_COLOR_LE_X1R5G5B5           0x00000003 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_COLOR_LE_A4R4G4B4           0x00000004 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_COLOR_LE_R5G6B5             0x00000005 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_COLOR_LE_A8R8G8B8           0x00000006 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_COLOR_LE_X8R8G8B8           0x00000007 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_COLOR_LE_I8_A1R5G5B5        0x00000008 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_COLOR_LE_I8_R5G6B5          0x00000009 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_COLOR_LE_I8_A4R4G4B4        0x0000000A /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_COLOR_LE_I8_A8R8G8B8        0x0000000B /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_COLOR_LE_DXT1_A1R5G5B5      0x0000000C /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_COLOR_LE_DXT23_A8R8G8B8     0x0000000E /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_COLOR_LE_DXT45_A8R8G8B8     0x0000000F /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_COLOR_LE_IMAGE_A1R5G5B5     0x00000010 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_COLOR_LE_IMAGE_R5G6B5       0x00000011 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_COLOR_LE_IMAGE_A8R8G8B8     0x00000012 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_COLOR_LE_IMAGE_Y8           0x00000013 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_COLOR_LE_IMAGE_SY8          0x00000014 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_COLOR_LE_IMAGE_X7SY9        0x00000015 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_COLOR_LE_IMAGE_R8B8         0x00000016 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_COLOR_LE_IMAGE_G8B8         0x00000017 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_COLOR_LE_IMAGE_SG8SB8       0x00000018 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_MIPMAP_LEVELS                    15:12 /* RWXVF */
#define NV_PGRAPH_TEXFORMAT0_MIPMAP_LEVELS_INVALID       0x00000000 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_MIPMAP_LEVELS_1             0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_MIPMAP_LEVELS_2             0x00000002 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_MIPMAP_LEVELS_3             0x00000003 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_MIPMAP_LEVELS_4             0x00000004 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_MIPMAP_LEVELS_5             0x00000005 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_MIPMAP_LEVELS_6             0x00000006 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_MIPMAP_LEVELS_7             0x00000007 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_MIPMAP_LEVELS_8             0x00000008 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_MIPMAP_LEVELS_9             0x00000009 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_MIPMAP_LEVELS_10            0x0000000A /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_MIPMAP_LEVELS_11            0x0000000B /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_MIPMAP_LEVELS_12            0x0000000C /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_BASE_SIZE_U                      19:16 /* RWXVF */
#define NV_PGRAPH_TEXFORMAT0_BASE_SIZE_U_1               0x00000000 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_BASE_SIZE_U_2               0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_BASE_SIZE_U_4               0x00000002 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_BASE_SIZE_U_8               0x00000003 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_BASE_SIZE_U_16              0x00000004 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_BASE_SIZE_U_32              0x00000005 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_BASE_SIZE_U_64              0x00000006 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_BASE_SIZE_U_128             0x00000007 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_BASE_SIZE_U_256             0x00000008 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_BASE_SIZE_U_512             0x00000009 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_BASE_SIZE_U_1024            0x0000000A /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_BASE_SIZE_U_2048            0x0000000B /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_BASE_SIZE_V                      23:20 /* RWXVF */
#define NV_PGRAPH_TEXFORMAT0_BASE_SIZE_V_1               0x00000000 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_BASE_SIZE_V_2               0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_BASE_SIZE_V_4               0x00000002 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_BASE_SIZE_V_8               0x00000003 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_BASE_SIZE_V_16              0x00000004 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_BASE_SIZE_V_32              0x00000005 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_BASE_SIZE_V_64              0x00000006 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_BASE_SIZE_V_128             0x00000007 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_BASE_SIZE_V_256             0x00000008 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_BASE_SIZE_V_512             0x00000009 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_BASE_SIZE_V_1024            0x0000000A /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_BASE_SIZE_V_2048            0x0000000B /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_TEXTUREADDRESSU                  26:24 /* RWXVF */
#define NV_PGRAPH_TEXFORMAT0_TEXTUREADDRESSU_WRAP        0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_TEXTUREADDRESSU_MIRROR      0x00000002 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_TEXTUREADDRESSU_CLAMP       0x00000003 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_TEXTUREADDRESSU_BORDER      0x00000004 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_WRAPU                            27:27 /* RWXVF */
#define NV_PGRAPH_TEXFORMAT0_WRAPU_FALSE                 0x00000000 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_WRAPU_TRUE                  0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_TEXTUREADDRESSV                  30:28 /* RWXVF */
#define NV_PGRAPH_TEXFORMAT0_TEXTUREADDRESSV_WRAP        0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_TEXTUREADDRESSV_MIRROR      0x00000002 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_TEXTUREADDRESSV_CLAMP       0x00000003 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_TEXTUREADDRESSV_BORDER      0x00000004 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_WRAPV                            31:31 /* RWXVF */
#define NV_PGRAPH_TEXFORMAT0_WRAPV_FALSE                 0x00000000 /* RW--V */
#define NV_PGRAPH_TEXFORMAT0_WRAPV_TRUE                  0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1                             0x00400E14 /* RW-4R */
#define NV_PGRAPH_TEXFORMAT1_BUNDLE                      0x00000005 /* ----B */
#define NV_PGRAPH_TEXFORMAT1_CONTEXT_DMA                        1:1 /* RWXVF */
#define NV_PGRAPH_TEXFORMAT1_CONTEXT_DMA_A               0x00000000 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_CONTEXT_DMA_B               0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_CUBEMAPENABLE                      2:2 /* RWXVF */
#define NV_PGRAPH_TEXFORMAT1_CUBEMAPENABLE_OFF           0x00000000 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_CUBEMAPENABLE_ON            0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_ORIGIN_ZOH                         4:4 /* RWXVF */
#define NV_PGRAPH_TEXFORMAT1_ORIGIN_ZOH_CENTER           0x00000000 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_ORIGIN_ZOH_CORNER           0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_ORIGIN_FOH                         6:6 /* RWXVF */
#define NV_PGRAPH_TEXFORMAT1_ORIGIN_FOH_CENTER           0x00000000 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_ORIGIN_FOH_CORNER           0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_COLOR                             11:7 /* RWXVF */
#define NV_PGRAPH_TEXFORMAT1_COLOR_LE_Y8                 0x00000000 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_COLOR_LE_AY8                0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_COLOR_LE_A1R5G5B5           0x00000002 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_COLOR_LE_X1R5G5B5           0x00000003 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_COLOR_LE_A4R4G4B4           0x00000004 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_COLOR_LE_R5G6B5             0x00000005 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_COLOR_LE_A8R8G8B8           0x00000006 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_COLOR_LE_X8R8G8B8           0x00000007 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_COLOR_LE_I8_A1R5G5B5        0x00000008 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_COLOR_LE_I8_R5G6B5          0x00000009 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_COLOR_LE_I8_A4R4G4B4        0x0000000A /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_COLOR_LE_I8_A8R8G8B8        0x0000000B /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_COLOR_LE_DXT1_A1R5G5B5      0x0000000C /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_COLOR_LE_DXT23_A8R8G8B8     0x0000000E /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_COLOR_LE_DXT45_A8R8G8B8     0x0000000F /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_COLOR_LE_IMAGE_A1R5G5B5     0x00000010 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_COLOR_LE_IMAGE_R5G6B5       0x00000011 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_COLOR_LE_IMAGE_A8R8G8B8     0x00000012 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_COLOR_LE_IMAGE_Y8           0x00000013 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_COLOR_LE_IMAGE_SY8          0x00000014 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_COLOR_LE_IMAGE_X7SY9        0x00000015 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_COLOR_LE_IMAGE_R8B8         0x00000016 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_COLOR_LE_IMAGE_G8B8         0x00000017 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_COLOR_LE_IMAGE_SG8SB8       0x00000018 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_MIPMAP_LEVELS                    15:12 /* RWXVF */
#define NV_PGRAPH_TEXFORMAT1_MIPMAP_LEVELS_INVALID       0x00000000 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_MIPMAP_LEVELS_1             0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_MIPMAP_LEVELS_2             0x00000002 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_MIPMAP_LEVELS_3             0x00000003 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_MIPMAP_LEVELS_4             0x00000004 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_MIPMAP_LEVELS_5             0x00000005 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_MIPMAP_LEVELS_6             0x00000006 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_MIPMAP_LEVELS_7             0x00000007 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_MIPMAP_LEVELS_8             0x00000008 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_MIPMAP_LEVELS_9             0x00000009 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_MIPMAP_LEVELS_10            0x0000000A /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_MIPMAP_LEVELS_11            0x0000000B /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_MIPMAP_LEVELS_12            0x0000000C /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_MIPMAP_LEVELS_13            0x0000000D /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_MIPMAP_LEVELS_14            0x0000000E /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_MIPMAP_LEVELS_15            0x0000000F /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_BASE_SIZE_U                      19:16 /* RWXVF */
#define NV_PGRAPH_TEXFORMAT1_BASE_SIZE_U_1               0x00000000 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_BASE_SIZE_U_2               0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_BASE_SIZE_U_4               0x00000002 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_BASE_SIZE_U_8               0x00000003 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_BASE_SIZE_U_16              0x00000004 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_BASE_SIZE_U_32              0x00000005 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_BASE_SIZE_U_64              0x00000006 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_BASE_SIZE_U_128             0x00000007 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_BASE_SIZE_U_256             0x00000008 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_BASE_SIZE_U_512             0x00000009 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_BASE_SIZE_U_1024            0x0000000A /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_BASE_SIZE_U_2048            0x0000000B /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_BASE_SIZE_V                      23:20 /* RWXVF */
#define NV_PGRAPH_TEXFORMAT1_BASE_SIZE_V_1               0x00000000 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_BASE_SIZE_V_2               0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_BASE_SIZE_V_4               0x00000002 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_BASE_SIZE_V_8               0x00000003 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_BASE_SIZE_V_16              0x00000004 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_BASE_SIZE_V_32              0x00000005 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_BASE_SIZE_V_64              0x00000006 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_BASE_SIZE_V_128             0x00000007 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_BASE_SIZE_V_256             0x00000008 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_BASE_SIZE_V_512             0x00000009 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_BASE_SIZE_V_1024            0x0000000A /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_BASE_SIZE_V_2048            0x0000000B /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_TEXTUREADDRESSU                  26:24 /* RWXVF */
#define NV_PGRAPH_TEXFORMAT1_TEXTUREADDRESSU_WRAP        0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_TEXTUREADDRESSU_MIRROR      0x00000002 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_TEXTUREADDRESSU_CLAMP       0x00000003 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_TEXTUREADDRESSU_BORDER      0x00000004 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_WRAPU                            27:27 /* RWXVF */
#define NV_PGRAPH_TEXFORMAT1_WRAPU_FALSE                 0x00000000 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_WRAPU_TRUE                  0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_TEXTUREADDRESSV                  30:28 /* RWXVF */
#define NV_PGRAPH_TEXFORMAT1_TEXTUREADDRESSV_WRAP        0x00000001 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_TEXTUREADDRESSV_MIRROR      0x00000002 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_TEXTUREADDRESSV_CLAMP       0x00000003 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_TEXTUREADDRESSV_BORDER      0x00000004 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_WRAPV                            31:31 /* RWXVF */
#define NV_PGRAPH_TEXFORMAT1_WRAPV_FALSE                 0x00000000 /* RW--V */
#define NV_PGRAPH_TEXFORMAT1_WRAPV_TRUE                  0x00000001 /* RW--V */
#define NV_PGRAPH_TEXCONTROL0_0                          0x00400E18 /* RW-4R */
#define NV_PGRAPH_TEXCONTROL0_0_BUNDLE                   0x00000006 /* ----B */
#define NV_PGRAPH_TEXCONTROL0_0_COLORKEY_OP                     1:0 /* RWXVF */
#define NV_PGRAPH_TEXCONTROL0_0_COLORKEY_OP_DISABLE      0x00000000 /* RW--V */
#define NV_PGRAPH_TEXCONTROL0_0_COLORKEY_OP_CHANGE_ALPHA 0x00000001 /* RW--V */
#define NV_PGRAPH_TEXCONTROL0_0_COLORKEY_OP_CHANGE_ALL   0x00000002 /* RW--V */
#define NV_PGRAPH_TEXCONTROL0_0_COLORKEY_OP_MATCH_KILL   0x00000003 /* RW--V */
#define NV_PGRAPH_TEXCONTROL0_0_ALPHAKILLENABLE                 2:2 /* RWXVF */
#define NV_PGRAPH_TEXCONTROL0_0_ALPHAKILLENABLE_FALSE    0x00000000 /* RW--V */
#define NV_PGRAPH_TEXCONTROL0_0_ALPHAKILLENABLE_TRUE     0x00000001 /* RW--V */
#define NV_PGRAPH_TEXCONTROL0_0_FIELDENABLE                     3:3 /* RWXVF */
#define NV_PGRAPH_TEXCONTROL0_0_FIELDENABLE_FALSE        0x00000000 /* RW--V */
#define NV_PGRAPH_TEXCONTROL0_0_FIELDENABLE_TRUE         0x00000001 /* RW--V */
#define NV_PGRAPH_TEXCONTROL0_0_LOGMAXANISO                     5:4 /* RWXVF */
#define NV_PGRAPH_TEXCONTROL0_0_LOGMAXANISO_1            0x00000000 /* RW--V */
#define NV_PGRAPH_TEXCONTROL0_0_LOGMAXANISO_2            0x00000001 /* RW--V */
#define NV_PGRAPH_TEXCONTROL0_0_MAXLODCLAMP                    17:6 /* RWXSF */
#define NV_PGRAPH_TEXCONTROL0_0_MINLODCLAMP                   29:18 /* RWXSF */
#define NV_PGRAPH_TEXCONTROL0_0_ENABLE                        30:30 /* RWXVF */
#define NV_PGRAPH_TEXCONTROL0_0_ENABLE_FALSE             0x00000000 /* RW--V */
#define NV_PGRAPH_TEXCONTROL0_0_ENABLE_TRUE              0x00000001 /* RW--V */
#define NV_PGRAPH_TEXCONTROL0_1                          0x00400E1C /* RW-4R */
#define NV_PGRAPH_TEXCONTROL0_1_BUNDLE                   0x00000007 /* ----B */
#define NV_PGRAPH_TEXCONTROL0_1_COLORKEY_OP                     1:0 /* RWXVF */
#define NV_PGRAPH_TEXCONTROL0_1_COLORKEY_OP_DISABLE      0x00000000 /* RW--V */
#define NV_PGRAPH_TEXCONTROL0_1_COLORKEY_OP_CHANGE_ALPHA 0x00000001 /* RW--V */
#define NV_PGRAPH_TEXCONTROL0_1_COLORKEY_OP_CHANGE_ALL   0x00000002 /* RW--V */
#define NV_PGRAPH_TEXCONTROL0_1_COLORKEY_OP_MATCH_KILL   0x00000003 /* RW--V */
#define NV_PGRAPH_TEXCONTROL0_1_ALPHAKILLENABLE                 2:2 /* RWXVF */
#define NV_PGRAPH_TEXCONTROL0_1_ALPHAKILLENABLE_FALSE    0x00000000 /* RW--V */
#define NV_PGRAPH_TEXCONTROL0_1_ALPHAKILLENABLE_TRUE     0x00000001 /* RW--V */
#define NV_PGRAPH_TEXCONTROL0_1_FIELDENABLE                     3:3 /* RWXVF */
#define NV_PGRAPH_TEXCONTROL0_1_FIELDENABLE_FALSE        0x00000000 /* RW--V */
#define NV_PGRAPH_TEXCONTROL0_1_FIELDENABLE_TRUE         0x00000001 /* RW--V */
#define NV_PGRAPH_TEXCONTROL0_1_LOGMAXANISO                     5:4 /* RWXVF */
#define NV_PGRAPH_TEXCONTROL0_1_LOGMAXANISO_1            0x00000000 /* RW--V */
#define NV_PGRAPH_TEXCONTROL0_1_LOGMAXANISO_2            0x00000001 /* RW--V */
#define NV_PGRAPH_TEXCONTROL0_1_MAXLODCLAMP                    17:6 /* RWXSF */
#define NV_PGRAPH_TEXCONTROL0_1_MINLODCLAMP                   29:18 /* RWXSF */
#define NV_PGRAPH_TEXCONTROL0_1_ENABLE                        30:30 /* RWXVF */
#define NV_PGRAPH_TEXCONTROL0_1_ENABLE_FALSE             0x00000000 /* RW--V */
#define NV_PGRAPH_TEXCONTROL0_1_ENABLE_TRUE              0x00000001 /* RW--V */
#define NV_PGRAPH_TEXCONTROL1_0                          0x00400E20 /* RW-4R */
#define NV_PGRAPH_TEXCONTROL1_0_BUNDLE                   0x00000008 /* ----B */
#define NV_PGRAPH_TEXCONTROL1_0_IMAGEPITCH                    31:16 /* RWXUF */
#define NV_PGRAPH_TEXCONTROL1_1                          0x00400E24 /* RW-4R */
#define NV_PGRAPH_TEXCONTROL1_1_BUNDLE                   0x00000009 /* ----B */
#define NV_PGRAPH_TEXCONTROL1_1_IMAGEPITCH                    31:16 /* RWXUF */
#define NV_PGRAPH_TEXCONTROL2_0                          0x00400E28 /* RW-4R */
#define NV_PGRAPH_TEXCONTROL2_0_BUNDLE                   0x0000000A /* ----B */
#define NV_PGRAPH_TEXCONTROL2_0_PERTURB_DU                     11:0 /* RWXVF */
#define NV_PGRAPH_TEXCONTROL2_0_PERTURB_DV                    23:12 /* RWXUF */
#define NV_PGRAPH_TEXCONTROL2_0_IMAGE_LODF                    31:24 /* RWXUF */
#define NV_PGRAPH_TEXCONTROL2_1                          0x00400E2C /* RW-4R */
#define NV_PGRAPH_TEXCONTROL2_1_BUNDLE                   0x0000000B /* ----B */
#define NV_PGRAPH_TEXCONTROL2_1_PERTURB_DU                     11:0 /* RWXVF */
#define NV_PGRAPH_TEXCONTROL2_1_PERTURB_DV                    23:12 /* RWXUF */
#define NV_PGRAPH_TEXCONTROL2_1_IMAGE_LODF                    31:24 /* RWXUF */
#define NV_PGRAPH_IMAGERECT0                             0x00400E30 /* RW-4R */
#define NV_PGRAPH_IMAGERECT0_BUNDLE                      0x0000000C /* ----B */
#define NV_PGRAPH_IMAGERECT0_HEIGHT                            10:0 /* RWXUF */
#define NV_PGRAPH_IMAGERECT0_WIDTH                            26:16 /* RWXUF */
#define NV_PGRAPH_IMAGERECT1                             0x00400E34 /* RW-4R */
#define NV_PGRAPH_IMAGERECT1_BUNDLE                      0x0000000D /* ----B */
#define NV_PGRAPH_IMAGERECT1_HEIGHT                            10:0 /* RWXUF */
#define NV_PGRAPH_IMAGERECT1_WIDTH                            26:16 /* RWXUF */
#define NV_PGRAPH_FILTER0                                0x004005B0 /* RW-4R */
#define NV_PGRAPH_FILTER0_BUNDLE                         0x0000000E /* ----B */
#define NV_PGRAPH_FILTER0_KERNEL_SIZE_X                         4:1 /* RWXUF */
#define NV_PGRAPH_FILTER0_KERNEL_SIZE_Y                        12:9 /* RWXUF */
#define NV_PGRAPH_FILTER0_MIPMAP_DITHER_ENABLE                15:15 /* RWXVF */
#define NV_PGRAPH_FILTER0_MIPMAP_DITHER_ENABLE_FALSE     0x00000000 /* RW--V */
#define NV_PGRAPH_FILTER0_MIPMAP_DITHER_ENABLE_TRUE      0x00000001 /* RW--V */
#define NV_PGRAPH_FILTER0_MIPMAPLODBIAS                       23:16 /* RWXSF */
#define NV_PGRAPH_FILTER0_TEXTUREMIN                          26:24 /* RWXVF */
#define NV_PGRAPH_FILTER0_TEXTUREMIN_NEAREST             0x00000001 /* RW--V */
#define NV_PGRAPH_FILTER0_TEXTUREMIN_LINEAR              0x00000002 /* RW--V */
#define NV_PGRAPH_FILTER0_TEXTUREMIN_MIPNEAREST          0x00000003 /* RW--V */
#define NV_PGRAPH_FILTER0_TEXTUREMIN_MIPLINEAR           0x00000004 /* RW--V */
#define NV_PGRAPH_FILTER0_TEXTUREMIN_LINEARMIPNEAREST    0x00000005 /* RW--V */
#define NV_PGRAPH_FILTER0_TEXTUREMIN_LINEARMIPLINEAR     0x00000006 /* RW--V */
#define NV_PGRAPH_FILTER0_ANISOTROPIC_MIN_ENABLE              27:27 /* RWXVF */
#define NV_PGRAPH_FILTER0_ANISOTROPIC_MIN_ENABLE_FALSE   0x00000000 /* RW--V */
#define NV_PGRAPH_FILTER0_ANISOTROPIC_MIN_ENABLE_TRUE    0x00000001 /* RW--V */
#define NV_PGRAPH_FILTER0_TEXTUREMAG                          30:28 /* RWXVF */
#define NV_PGRAPH_FILTER0_TEXTUREMAG_NEAREST             0x00000001 /* RW--V */
#define NV_PGRAPH_FILTER0_TEXTUREMAG_LINEAR              0x00000002 /* RW--V */
#define NV_PGRAPH_FILTER0_TEXTUREMAG_MIPNEAREST          0x00000003 /* RW--V */
#define NV_PGRAPH_FILTER0_TEXTUREMAG_MIPLINEAR           0x00000004 /* RW--V */
#define NV_PGRAPH_FILTER0_TEXTUREMAG_LINEARMIPNEAREST    0x00000005 /* RW--V */
#define NV_PGRAPH_FILTER0_TEXTUREMAG_LINEARMIPLINEAR     0x00000006 /* RW--V */
#define NV_PGRAPH_FILTER0_ANISOTROPIC_MAG_ENABLE              31:31 /* RWXVF */
#define NV_PGRAPH_FILTER0_ANISOTROPIC_MAG_ENABLE_FALSE   0x00000000 /* RW--V */
#define NV_PGRAPH_FILTER0_ANISOTROPIC_MAG_ENABLE_TRUE    0x00000001 /* RW--V */
#define NV_PGRAPH_FILTER1                                0x004005B4 /* RW-4R */
#define NV_PGRAPH_FILTER1_BUNDLE                         0x0000000F /* ----B */
#define NV_PGRAPH_FILTER1_KERNEL_SIZE_X                         4:1 /* RWXUF */
#define NV_PGRAPH_FILTER1_KERNEL_SIZE_Y                        12:9 /* RWXUF */
#define NV_PGRAPH_FILTER1_MIPMAPLODBIAS                       23:16 /* RWXSF */
#define NV_PGRAPH_FILTER1_MIPMAP_DITHER_ENABLE                15:15 /* RWXVF */
#define NV_PGRAPH_FILTER1_MIPMAP_DITHER_ENABLE_FALSE     0x00000000 /* RW--V */
#define NV_PGRAPH_FILTER1_MIPMAP_DITHER_ENABLE_TRUE      0x00000001 /* RW--V */
#define NV_PGRAPH_FILTER1_TEXTUREMIN                          26:24 /* RWXVF */
#define NV_PGRAPH_FILTER1_TEXTUREMIN_NEAREST             0x00000001 /* RW--V */
#define NV_PGRAPH_FILTER1_TEXTUREMIN_LINEAR              0x00000002 /* RW--V */
#define NV_PGRAPH_FILTER1_TEXTUREMIN_MIPNEAREST          0x00000003 /* RW--V */
#define NV_PGRAPH_FILTER1_TEXTUREMIN_MIPLINEAR           0x00000004 /* RW--V */
#define NV_PGRAPH_FILTER1_TEXTUREMIN_LINEARMIPNEAREST    0x00000005 /* RW--V */
#define NV_PGRAPH_FILTER1_TEXTUREMIN_LINEARMIPLINEAR     0x00000006 /* RW--V */
#define NV_PGRAPH_FILTER1_ANISOTROPIC_MIN_ENABLE              27:27 /* RWXVF */
#define NV_PGRAPH_FILTER1_ANISOTROPIC_MIN_ENABLE_FALSE   0x00000000 /* RW--V */
#define NV_PGRAPH_FILTER1_ANISOTROPIC_MIN_ENABLE_TRUE    0x00000001 /* RW--V */
#define NV_PGRAPH_FILTER1_TEXTUREMAG                          30:28 /* RWXVF */
#define NV_PGRAPH_FILTER1_TEXTUREMAG_NEAREST             0x00000001 /* RW--V */
#define NV_PGRAPH_FILTER1_TEXTUREMAG_LINEAR              0x00000002 /* RW--V */
#define NV_PGRAPH_FILTER1_TEXTUREMAG_MIPNEAREST          0x00000003 /* RW--V */
#define NV_PGRAPH_FILTER1_TEXTUREMAG_MIPLINEAR           0x00000004 /* RW--V */
#define NV_PGRAPH_FILTER1_TEXTUREMAG_LINEARMIPNEAREST    0x00000005 /* RW--V */
#define NV_PGRAPH_FILTER1_TEXTUREMAG_LINEARMIPLINEAR     0x00000006 /* RW--V */
#define NV_PGRAPH_FILTER1_ANISOTROPIC_MAG_ENABLE              31:31 /* RWXVF */
#define NV_PGRAPH_FILTER1_ANISOTROPIC_MAG_ENABLE_FALSE   0x00000000 /* RW--V */
#define NV_PGRAPH_FILTER1_ANISOTROPIC_MAG_ENABLE_TRUE    0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW                       0x00400E40 /* RW-4R */
#define NV_PGRAPH_COMBINE0ALPHAICW_BUNDLE                0x00000010 /* ----B */
#define NV_PGRAPH_COMBINE0ALPHAICW_D_SOURCE                     3:0 /* RWXVF */
#define NV_PGRAPH_COMBINE0ALPHAICW_D_SOURCE_R0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_D_SOURCE_R1           0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_D_SOURCE_R2           0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_D_SOURCE_R3           0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_D_SOURCE_R4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_D_SOURCE_R5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_D_SOURCE_R8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_D_SOURCE_R9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_D_SOURCE_RC           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_D_SOURCE_RD           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_D_ALPHA                      4:4 /* RWXVF */
#define NV_PGRAPH_COMBINE0ALPHAICW_D_ALPHA_FROMBLUE      0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_D_ALPHA_FROMALPHA     0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_D_MAP                        7:5 /* RWXVF */
#define NV_PGRAPH_COMBINE0ALPHAICW_D_MAP_UNSIGNED_IDENT  0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_D_MAP_UNSIGNED_INVERT 0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_D_MAP_EXPAND_NORMAL   0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_D_MAP_EXPAND_NEGATE   0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_D_MAP_HALFBIAS_NORMAL 0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_D_MAP_HALFBIAS_NEGATE 0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_D_MAP_SIGNED_IDENTITY 0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_D_MAP_SIGNED_NEGATE   0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_C_SOURCE                    11:8 /* RWXVF */
#define NV_PGRAPH_COMBINE0ALPHAICW_C_SOURCE_R0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_C_SOURCE_R1           0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_C_SOURCE_R2           0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_C_SOURCE_R3           0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_C_SOURCE_R4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_C_SOURCE_R5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_C_SOURCE_R8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_C_SOURCE_R9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_C_SOURCE_RC           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_C_SOURCE_RD           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_C_ALPHA                    12:12 /* RWXVF */
#define NV_PGRAPH_COMBINE0ALPHAICW_C_ALPHA_FROMBLUE      0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_C_ALPHA_FROMALPHA     0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_C_MAP                      15:13 /* RWXVF */
#define NV_PGRAPH_COMBINE0ALPHAICW_C_MAP_UNSIGNED_IDENT  0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_C_MAP_UNSIGNED_INVERT 0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_C_MAP_EXPAND_NORMAL   0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_C_MAP_EXPAND_NEGATE   0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_C_MAP_HALFBIAS_NORMAL 0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_C_MAP_HALFBIAS_NEGATE 0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_C_MAP_SIGNED_IDENTITY 0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_C_MAP_SIGNED_NEGATE   0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_B_SOURCE                   19:16 /* RWXVF */
#define NV_PGRAPH_COMBINE0ALPHAICW_B_SOURCE_R0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_B_SOURCE_R1           0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_B_SOURCE_R2           0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_B_SOURCE_R3           0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_B_SOURCE_R4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_B_SOURCE_R5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_B_SOURCE_R8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_B_SOURCE_R9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_B_SOURCE_RC           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_B_SOURCE_RD           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_B_ALPHA                    20:20 /* RWXVF */
#define NV_PGRAPH_COMBINE0ALPHAICW_B_ALPHA_FROMBLUE      0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_B_ALPHA_FROMALPHA     0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_B_MAP                      23:21 /* RWXVF */
#define NV_PGRAPH_COMBINE0ALPHAICW_B_MAP_UNSIGNED_IDENT  0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_B_MAP_UNSIGNED_INVERT 0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_B_MAP_EXPAND_NORMAL   0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_B_MAP_EXPAND_NEGATE   0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_B_MAP_HALFBIAS_NORMAL 0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_B_MAP_HALFBIAS_NEGATE 0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_B_MAP_SIGNED_IDENTITY 0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_B_MAP_SIGNED_NEGATE   0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_A_SOURCE                   27:24 /* RWXVF */
#define NV_PGRAPH_COMBINE0ALPHAICW_A_SOURCE_R0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_A_SOURCE_R1           0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_A_SOURCE_R2           0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_A_SOURCE_R3           0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_A_SOURCE_R4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_A_SOURCE_R5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_A_SOURCE_R8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_A_SOURCE_R9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_A_SOURCE_RC           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_A_SOURCE_RD           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_A_ALPHA                    28:28 /* RWXVF */
#define NV_PGRAPH_COMBINE0ALPHAICW_A_ALPHA_FROMBLUE      0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_A_ALPHA_FROMALPHA     0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_A_MAP                      31:29 /* RWXVF */
#define NV_PGRAPH_COMBINE0ALPHAICW_A_MAP_UNSIGNED_IDENT  0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_A_MAP_UNSIGNED_INVERT 0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_A_MAP_EXPAND_NORMAL   0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_A_MAP_EXPAND_NEGATE   0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_A_MAP_HALFBIAS_NORMAL 0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_A_MAP_HALFBIAS_NEGATE 0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_A_MAP_SIGNED_IDENTITY 0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAICW_A_MAP_SIGNED_NEGATE   0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW                       0x00400E44 /* RW-4R */
#define NV_PGRAPH_COMBINE1ALPHAICW_BUNDLE                0x00000011 /* ----B */
#define NV_PGRAPH_COMBINE1ALPHAICW_D_SOURCE                     3:0 /* RWXVF */
#define NV_PGRAPH_COMBINE1ALPHAICW_D_SOURCE_R0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_D_SOURCE_R1           0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_D_SOURCE_R2           0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_D_SOURCE_R3           0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_D_SOURCE_R4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_D_SOURCE_R5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_D_SOURCE_R8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_D_SOURCE_R9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_D_SOURCE_RC           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_D_SOURCE_RD           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_D_ALPHA                      4:4 /* RWXVF */
#define NV_PGRAPH_COMBINE1ALPHAICW_D_ALPHA_FROMBLUE      0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_D_ALPHA_FROMALPHA     0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_D_MAP                        7:5 /* RWXVF */
#define NV_PGRAPH_COMBINE1ALPHAICW_D_MAP_UNSIGNED_IDENT  0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_D_MAP_UNSIGNED_INVERT 0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_D_MAP_EXPAND_NORMAL   0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_D_MAP_EXPAND_NEGATE   0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_D_MAP_HALFBIAS_NORMAL 0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_D_MAP_HALFBIAS_NEGATE 0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_D_MAP_SIGNED_IDENTITY 0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_D_MAP_SIGNED_NEGATE   0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_C_SOURCE                    11:8 /* RWXVF */
#define NV_PGRAPH_COMBINE1ALPHAICW_C_SOURCE_R0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_C_SOURCE_R1           0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_C_SOURCE_R2           0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_C_SOURCE_R3           0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_C_SOURCE_R4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_C_SOURCE_R5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_C_SOURCE_R8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_C_SOURCE_R9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_C_SOURCE_RC           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_C_SOURCE_RD           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_C_ALPHA                    12:12 /* RWXVF */
#define NV_PGRAPH_COMBINE1ALPHAICW_C_ALPHA_FROMBLUE      0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_C_ALPHA_FROMALPHA     0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_C_MAP                      15:13 /* RWXVF */
#define NV_PGRAPH_COMBINE1ALPHAICW_C_MAP_UNSIGNED_IDENT  0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_C_MAP_UNSIGNED_INVERT 0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_C_MAP_EXPAND_NORMAL   0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_C_MAP_EXPAND_NEGATE   0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_C_MAP_HALFBIAS_NORMAL 0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_C_MAP_HALFBIAS_NEGATE 0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_C_MAP_SIGNED_IDENTITY 0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_C_MAP_SIGNED_NEGATE   0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_B_SOURCE                   19:16 /* RWXVF */
#define NV_PGRAPH_COMBINE1ALPHAICW_B_SOURCE_R0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_B_SOURCE_R1           0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_B_SOURCE_R2           0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_B_SOURCE_R3           0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_B_SOURCE_R4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_B_SOURCE_R5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_B_SOURCE_R8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_B_SOURCE_R9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_B_SOURCE_RC           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_B_SOURCE_RD           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_B_ALPHA                    20:20 /* RWXVF */
#define NV_PGRAPH_COMBINE1ALPHAICW_B_ALPHA_FROMBLUE      0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_B_ALPHA_FROMALPHA     0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_B_MAP                      23:21 /* RWXVF */
#define NV_PGRAPH_COMBINE1ALPHAICW_B_MAP_UNSIGNED_IDENT  0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_B_MAP_UNSIGNED_INVERT 0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_B_MAP_EXPAND_NORMAL   0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_B_MAP_EXPAND_NEGATE   0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_B_MAP_HALFBIAS_NORMAL 0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_B_MAP_HALFBIAS_NEGATE 0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_B_MAP_SIGNED_IDENTITY 0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_B_MAP_SIGNED_NEGATE   0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_A_SOURCE                   27:24 /* RWXVF */
#define NV_PGRAPH_COMBINE1ALPHAICW_A_SOURCE_R0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_A_SOURCE_R1           0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_A_SOURCE_R2           0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_A_SOURCE_R3           0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_A_SOURCE_R4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_A_SOURCE_R5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_A_SOURCE_R8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_A_SOURCE_R9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_A_SOURCE_RC           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_A_SOURCE_RD           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_A_ALPHA                    28:28 /* RWXVF */
#define NV_PGRAPH_COMBINE1ALPHAICW_A_ALPHA_FROMBLUE      0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_A_ALPHA_FROMALPHA     0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_A_MAP                      31:29 /* RWXVF */
#define NV_PGRAPH_COMBINE1ALPHAICW_A_MAP_UNSIGNED_IDENT  0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_A_MAP_UNSIGNED_INVERT 0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_A_MAP_EXPAND_NORMAL   0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_A_MAP_EXPAND_NEGATE   0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_A_MAP_HALFBIAS_NORMAL 0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_A_MAP_HALFBIAS_NEGATE 0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_A_MAP_SIGNED_IDENTITY 0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAICW_A_MAP_SIGNED_NEGATE   0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW                       0x00400E48 /* RW-4R */
#define NV_PGRAPH_COMBINE0COLORICW_BUNDLE                0x00000012 /* ----B */
#define NV_PGRAPH_COMBINE0COLORICW_D_SOURCE                     3:0 /* RWXVF */
#define NV_PGRAPH_COMBINE0COLORICW_D_SOURCE_R0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_D_SOURCE_R1           0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_D_SOURCE_R2           0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_D_SOURCE_R3           0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_D_SOURCE_R4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_D_SOURCE_R5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_D_SOURCE_R8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_D_SOURCE_R9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_D_SOURCE_RC           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_D_SOURCE_RD           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_D_ALPHA                      4:4 /* RWXVF */
#define NV_PGRAPH_COMBINE0COLORICW_D_ALPHA_FALSE         0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_D_ALPHA_TRUE          0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_D_MAP                        7:5 /* RWXVF */
#define NV_PGRAPH_COMBINE0COLORICW_D_MAP_UNSIGNED_IDENT  0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_D_MAP_UNSIGNED_INVERT 0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_D_MAP_EXPAND_NORMAL   0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_D_MAP_EXPAND_NEGATE   0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_D_MAP_HALFBIAS_NORMAL 0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_D_MAP_HALFBIAS_NEGATE 0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_D_MAP_SIGNED_IDENTITY 0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_D_MAP_SIGNED_NEGATE   0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_C_SOURCE                    11:8 /* RWXVF */
#define NV_PGRAPH_COMBINE0COLORICW_C_SOURCE_R0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_C_SOURCE_R1           0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_C_SOURCE_R2           0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_C_SOURCE_R3           0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_C_SOURCE_R4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_C_SOURCE_R5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_C_SOURCE_R8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_C_SOURCE_R9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_C_SOURCE_RC           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_C_SOURCE_RD           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_C_ALPHA                    12:12 /* RWXVF */
#define NV_PGRAPH_COMBINE0COLORICW_C_ALPHA_FALSE         0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_C_ALPHA_TRUE          0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_C_MAP                      15:13 /* RWXVF */
#define NV_PGRAPH_COMBINE0COLORICW_C_MAP_UNSIGNED_IDENT  0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_C_MAP_UNSIGNED_INVERT 0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_C_MAP_EXPAND_NORMAL   0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_C_MAP_EXPAND_NEGATE   0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_C_MAP_HALFBIAS_NORMAL 0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_C_MAP_HALFBIAS_NEGATE 0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_C_MAP_SIGNED_IDENTITY 0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_C_MAP_SIGNED_NEGATE   0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_B_SOURCE                   19:16 /* RWXVF */
#define NV_PGRAPH_COMBINE0COLORICW_B_SOURCE_R0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_B_SOURCE_R1           0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_B_SOURCE_R2           0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_B_SOURCE_R3           0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_B_SOURCE_R4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_B_SOURCE_R5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_B_SOURCE_R8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_B_SOURCE_R9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_B_SOURCE_RC           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_B_SOURCE_RD           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_B_ALPHA                    20:20 /* RWXVF */
#define NV_PGRAPH_COMBINE0COLORICW_B_ALPHA_FALSE         0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_B_ALPHA_TRUE          0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_B_MAP                      23:21 /* RWXVF */
#define NV_PGRAPH_COMBINE0COLORICW_B_MAP_UNSIGNED_IDENT  0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_B_MAP_UNSIGNED_INVERT 0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_B_MAP_EXPAND_NORMAL   0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_B_MAP_EXPAND_NEGATE   0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_B_MAP_HALFBIAS_NORMAL 0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_B_MAP_HALFBIAS_NEGATE 0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_B_MAP_SIGNED_IDENTITY 0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_B_MAP_SIGNED_NEGATE   0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_A_SOURCE                   27:24 /* RWXVF */
#define NV_PGRAPH_COMBINE0COLORICW_A_SOURCE_R0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_A_SOURCE_R1           0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_A_SOURCE_R2           0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_A_SOURCE_R3           0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_A_SOURCE_R4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_A_SOURCE_R5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_A_SOURCE_R8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_A_SOURCE_R9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_A_SOURCE_RC           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_A_SOURCE_RD           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_A_ALPHA                    28:28 /* RWXVF */
#define NV_PGRAPH_COMBINE0COLORICW_A_ALPHA_FALSE         0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_A_ALPHA_TRUE          0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_A_MAP                      31:29 /* RWXVF */
#define NV_PGRAPH_COMBINE0COLORICW_A_MAP_UNSIGNED_IDENT  0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_A_MAP_UNSIGNED_INVERT 0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_A_MAP_EXPAND_NORMAL   0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_A_MAP_EXPAND_NEGATE   0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_A_MAP_HALFBIAS_NORMAL 0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_A_MAP_HALFBIAS_NEGATE 0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_A_MAP_SIGNED_IDENTITY 0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINE0COLORICW_A_MAP_SIGNED_NEGATE   0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW                       0x00400E4C /* RW-4R */
#define NV_PGRAPH_COMBINE1COLORICW_BUNDLE                0x00000013 /* ----B */
#define NV_PGRAPH_COMBINE1COLORICW_D_SOURCE                     3:0 /* RWXVF */
#define NV_PGRAPH_COMBINE1COLORICW_D_SOURCE_R0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_D_SOURCE_R1           0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_D_SOURCE_R2           0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_D_SOURCE_R3           0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_D_SOURCE_R4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_D_SOURCE_R5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_D_SOURCE_R8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_D_SOURCE_R9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_D_SOURCE_RC           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_D_SOURCE_RD           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_D_ALPHA                      4:4 /* RWXVF */
#define NV_PGRAPH_COMBINE1COLORICW_D_ALPHA_FALSE         0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_D_ALPHA_TRUE          0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_D_MAP                        7:5 /* RWXVF */
#define NV_PGRAPH_COMBINE1COLORICW_D_MAP_UNSIGNED_IDENT  0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_D_MAP_UNSIGNED_INVERT 0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_D_MAP_EXPAND_NORMAL   0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_D_MAP_EXPAND_NEGATE   0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_D_MAP_HALFBIAS_NORMAL 0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_D_MAP_HALFBIAS_NEGATE 0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_D_MAP_SIGNED_IDENTITY 0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_D_MAP_SIGNED_NEGATE   0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_C_SOURCE                    11:8 /* RWXVF */
#define NV_PGRAPH_COMBINE1COLORICW_C_SOURCE_R0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_C_SOURCE_R1           0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_C_SOURCE_R2           0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_C_SOURCE_R3           0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_C_SOURCE_R4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_C_SOURCE_R5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_C_SOURCE_R8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_C_SOURCE_R9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_C_SOURCE_RC           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_C_SOURCE_RD           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_C_ALPHA                    12:12 /* RWXVF */
#define NV_PGRAPH_COMBINE1COLORICW_C_ALPHA_FALSE         0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_C_ALPHA_TRUE          0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_C_MAP                      15:13 /* RWXVF */
#define NV_PGRAPH_COMBINE1COLORICW_C_MAP_UNSIGNED_IDENT  0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_C_MAP_UNSIGNED_INVERT 0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_C_MAP_EXPAND_NORMAL   0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_C_MAP_EXPAND_NEGATE   0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_C_MAP_HALFBIAS_NORMAL 0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_C_MAP_HALFBIAS_NEGATE 0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_C_MAP_SIGNED_IDENTITY 0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_C_MAP_SIGNED_NEGATE   0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_B_SOURCE                   19:16 /* RWXVF */
#define NV_PGRAPH_COMBINE1COLORICW_B_SOURCE_R0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_B_SOURCE_R1           0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_B_SOURCE_R2           0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_B_SOURCE_R3           0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_B_SOURCE_R4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_B_SOURCE_R5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_B_SOURCE_R8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_B_SOURCE_R9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_B_SOURCE_RC           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_B_SOURCE_RD           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_B_ALPHA                    20:20 /* RWXVF */
#define NV_PGRAPH_COMBINE1COLORICW_B_ALPHA_FALSE         0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_B_ALPHA_TRUE          0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_B_MAP                      23:21 /* RWXVF */
#define NV_PGRAPH_COMBINE1COLORICW_B_MAP_UNSIGNED_IDENT  0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_B_MAP_UNSIGNED_INVERT 0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_B_MAP_EXPAND_NORMAL   0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_B_MAP_EXPAND_NEGATE   0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_B_MAP_HALFBIAS_NORMAL 0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_B_MAP_HALFBIAS_NEGATE 0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_B_MAP_SIGNED_IDENTITY 0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_B_MAP_SIGNED_NEGATE   0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_A_SOURCE                   27:24 /* RWXVF */
#define NV_PGRAPH_COMBINE1COLORICW_A_SOURCE_R0           0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_A_SOURCE_R1           0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_A_SOURCE_R2           0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_A_SOURCE_R3           0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_A_SOURCE_R4           0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_A_SOURCE_R5           0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_A_SOURCE_R8           0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_A_SOURCE_R9           0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_A_SOURCE_RC           0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_A_SOURCE_RD           0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_A_ALPHA                    28:28 /* RWXVF */
#define NV_PGRAPH_COMBINE1COLORICW_A_ALPHA_FALSE         0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_A_ALPHA_TRUE          0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_A_MAP                      31:29 /* RWXVF */
#define NV_PGRAPH_COMBINE1COLORICW_A_MAP_UNSIGNED_IDENT  0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_A_MAP_UNSIGNED_INVERT 0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_A_MAP_EXPAND_NORMAL   0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_A_MAP_EXPAND_NEGATE   0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_A_MAP_HALFBIAS_NORMAL 0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_A_MAP_HALFBIAS_NEGATE 0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_A_MAP_SIGNED_IDENTITY 0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINE1COLORICW_A_MAP_SIGNED_NEGATE   0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINE0FACTOR                         0x00400E50 /* RW-4R */
#define NV_PGRAPH_COMBINE0FACTOR_BUNDLE                  0x00000014 /* ----B */
#define NV_PGRAPH_COMBINE0FACTOR_BLUE                           7:0 /* RWXUF */
#define NV_PGRAPH_COMBINE0FACTOR_GREEN                         15:8 /* RWXUF */
#define NV_PGRAPH_COMBINE0FACTOR_RED                          23:16 /* RWXUF */
#define NV_PGRAPH_COMBINE0FACTOR_ALPHA                        31:24 /* RWXUF */
#define NV_PGRAPH_COMBINE1FACTOR                         0x00400E54 /* RW-4R */
#define NV_PGRAPH_COMBINE1FACTOR_BUNDLE                  0x00000015 /* ----B */
#define NV_PGRAPH_COMBINE1FACTOR_BLUE                           7:0 /* RWXUF */
#define NV_PGRAPH_COMBINE1FACTOR_GREEN                         15:8 /* RWXUF */
#define NV_PGRAPH_COMBINE1FACTOR_RED                          23:16 /* RWXUF */
#define NV_PGRAPH_COMBINE1FACTOR_ALPHA                        31:24 /* RWXUF */
#define NV_PGRAPH_COMBINE0ALPHAOCW                       0x00400E58 /* RW-4R */
#define NV_PGRAPH_COMBINE0ALPHAOCW_BUNDLE                0x00000016 /* ----B */
#define NV_PGRAPH_COMBINE0ALPHAOCW_CD_DST                       3:0 /* RWXVF */
#define NV_PGRAPH_COMBINE0ALPHAOCW_CD_DST_R0             0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAOCW_CD_DST_R4             0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAOCW_CD_DST_R5             0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAOCW_CD_DST_R8             0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAOCW_CD_DST_R9             0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAOCW_CD_DST_RC             0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAOCW_CD_DST_RD             0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAOCW_AB_DST                       7:4 /* RWXVF */
#define NV_PGRAPH_COMBINE0ALPHAOCW_AB_DST_R0             0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAOCW_AB_DST_R4             0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAOCW_AB_DST_R5             0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAOCW_AB_DST_R8             0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAOCW_AB_DST_R9             0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAOCW_AB_DST_RC             0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAOCW_AB_DST_RD             0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAOCW_SUM_DST                     11:8 /* RWXVF */
#define NV_PGRAPH_COMBINE0ALPHAOCW_SUM_DST_R0            0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAOCW_SUM_DST_R4            0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAOCW_SUM_DST_R5            0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAOCW_SUM_DST_R8            0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAOCW_SUM_DST_R9            0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAOCW_SUM_DST_RC            0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAOCW_SUM_DST_RD            0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAOCW_MUX_ENABLE                 14:14 /* RWXVF */
#define NV_PGRAPH_COMBINE0ALPHAOCW_MUX_ENABLE_FALSE      0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAOCW_MUX_ENABLE_TRUE       0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAOCW_OPERATION                  17:15 /* RWXVF */
#define NV_PGRAPH_COMBINE0ALPHAOCW_OPERATION_NOSHIFT     0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAOCW_OPERATION_BIAS        0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAOCW_OPERATION_LEFT1       0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAOCW_OPERATION_LEFT1_BIAS  0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAOCW_OPERATION_LEFT2       0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHAOCW_OPERATION_RIGHT1      0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAOCW                       0x00400E5C /* RW-4R */
#define NV_PGRAPH_COMBINE1ALPHAOCW_BUNDLE                0x00000017 /* ----B */
#define NV_PGRAPH_COMBINE1ALPHAOCW_CD_DST                       3:0 /* RWXVF */
#define NV_PGRAPH_COMBINE1ALPHAOCW_CD_DST_R0             0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAOCW_CD_DST_R4             0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAOCW_CD_DST_R5             0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAOCW_CD_DST_R8             0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAOCW_CD_DST_R9             0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAOCW_CD_DST_RC             0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAOCW_CD_DST_RD             0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAOCW_AB_DST                       7:4 /* RWXVF */
#define NV_PGRAPH_COMBINE1ALPHAOCW_AB_DST_R0             0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAOCW_AB_DST_R4             0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAOCW_AB_DST_R5             0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAOCW_AB_DST_R8             0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAOCW_AB_DST_R9             0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAOCW_AB_DST_RC             0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAOCW_AB_DST_RD             0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAOCW_SUM_DST                     11:8 /* RWXVF */
#define NV_PGRAPH_COMBINE1ALPHAOCW_SUM_DST_R0            0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAOCW_SUM_DST_R4            0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAOCW_SUM_DST_R5            0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAOCW_SUM_DST_R8            0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAOCW_SUM_DST_R9            0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAOCW_SUM_DST_RC            0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAOCW_SUM_DST_RD            0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAOCW_MUX_ENABLE                 14:14 /* RWXVF */
#define NV_PGRAPH_COMBINE1ALPHAOCW_MUX_ENABLE_FALSE      0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAOCW_MUX_ENABLE_TRUE       0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAOCW_OPERATION                  17:15 /* RWXVF */
#define NV_PGRAPH_COMBINE1ALPHAOCW_OPERATION_NOSHIFT     0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAOCW_OPERATION_BIAS        0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAOCW_OPERATION_LEFT1       0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAOCW_OPERATION_LEFT1_BIAS  0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAOCW_OPERATION_LEFT2       0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHAOCW_OPERATION_RIGHT1      0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHA                          0x00400590 /* RW-4R */
#define NV_PGRAPH_COMBINE0ALPHA_INVERSE_0                       0:0 /* RWXVF */
#define NV_PGRAPH_COMBINE0ALPHA_INVERSE_0_NORMAL         0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHA_INVERSE_0_INVERSE        0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHA_ARGUMENT_0                      4:2 /* RWXVF */
#define NV_PGRAPH_COMBINE0ALPHA_ARGUMENT_0_ZERO          0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHA_ARGUMENT_0_FACTOR        0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHA_ARGUMENT_0_DIFFUSE       0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHA_ARGUMENT_0_INPUT         0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHA_ARGUMENT_0_TEXTURE0      0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHA_ARGUMENT_0_TEXTURE1      0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHA_ARGUMENT_0_TEXTURELOD    0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHA_INVERSE_1                       8:8 /* RWXVF */
#define NV_PGRAPH_COMBINE0ALPHA_INVERSE_1_NORMAL         0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHA_INVERSE_1_INVERSE        0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHA_ARGUMENT_1                    12:10 /* RWXVF */
#define NV_PGRAPH_COMBINE0ALPHA_ARGUMENT_1_ZERO          0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHA_ARGUMENT_1_FACTOR        0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHA_ARGUMENT_1_DIFFUSE       0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHA_ARGUMENT_1_INPUT         0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHA_ARGUMENT_1_TEXTURE0      0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHA_ARGUMENT_1_TEXTURE1      0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHA_ARGUMENT_1_TEXTURELOD    0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHA_INVERSE_2                     16:16 /* RWXVF */
#define NV_PGRAPH_COMBINE0ALPHA_INVERSE_2_NORMAL         0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHA_INVERSE_2_INVERSE        0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHA_ARGUMENT_2                    20:18 /* RWXVF */
#define NV_PGRAPH_COMBINE0ALPHA_ARGUMENT_2_ZERO          0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHA_ARGUMENT_2_FACTOR        0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHA_ARGUMENT_2_DIFFUSE       0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHA_ARGUMENT_2_INPUT         0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHA_ARGUMENT_2_TEXTURE0      0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHA_ARGUMENT_2_TEXTURE1      0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHA_ARGUMENT_2_TEXTURELOD    0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHA_INVERSE_3                     24:24 /* RWXVF */
#define NV_PGRAPH_COMBINE0ALPHA_INVERSE_3_NORMAL         0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHA_INVERSE_3_INVERSE        0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHA_ARGUMENT_3                    28:26 /* RWXVF */
#define NV_PGRAPH_COMBINE0ALPHA_ARGUMENT_3_ZERO          0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHA_ARGUMENT_3_FACTOR        0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHA_ARGUMENT_3_DIFFUSE       0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHA_ARGUMENT_3_INPUT         0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHA_ARGUMENT_3_TEXTURE0      0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHA_ARGUMENT_3_TEXTURE1      0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHA_ARGUMENT_3_TEXTURELOD    0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHA_OPERATION                     31:29 /* RWXVF */
#define NV_PGRAPH_COMBINE0ALPHA_OPERATION_ADD            0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHA_OPERATION_ADD2           0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHA_OPERATION_ADD4           0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHA_OPERATION_ADDSIGNED      0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHA_OPERATION_MUX            0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHA_OPERATION_ADDCOMPLEMENT  0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINE0ALPHA_OPERATION_ADDSIGNED2     0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOR                          0x00400594 /* RW-4R */
#define NV_PGRAPH_COMBINE0COLOR_INVERSE_0                       0:0 /* RWXVF */
#define NV_PGRAPH_COMBINE0COLOR_INVERSE_0_NORMAL         0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOR_INVERSE_0_INVERSE        0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOR_ALPHA_0                         1:1 /* RWXVF */
#define NV_PGRAPH_COMBINE0COLOR_ALPHA_0_COLOR            0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOR_ALPHA_0_ALPHA            0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOR_ARGUMENT_0                      4:2 /* RWXVF */
#define NV_PGRAPH_COMBINE0COLOR_ARGUMENT_0_ZERO          0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOR_ARGUMENT_0_FACTOR        0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOR_ARGUMENT_0_DIFFUSE       0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOR_ARGUMENT_0_INPUT         0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOR_ARGUMENT_0_TEXTURE0      0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOR_ARGUMENT_0_TEXTURE1      0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOR_ARGUMENT_0_TEXTURELOD    0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOR_INVERSE_1                       8:8 /* RWXVF */
#define NV_PGRAPH_COMBINE0COLOR_INVERSE_1_NORMAL         0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOR_INVERSE_1_INVERSE        0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOR_ALPHA_1                         9:9 /* RWXVF */
#define NV_PGRAPH_COMBINE0COLOR_ALPHA_1_COLOR            0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOR_ALPHA_1_ALPHA            0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOR_ARGUMENT_1                    12:10 /* RWXVF */
#define NV_PGRAPH_COMBINE0COLOR_ARGUMENT_1_ZERO          0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOR_ARGUMENT_1_FACTOR        0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOR_ARGUMENT_1_DIFFUSE       0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOR_ARGUMENT_1_INPUT         0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOR_ARGUMENT_1_TEXTURE0      0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOR_ARGUMENT_1_TEXTURE1      0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOR_ARGUMENT_1_TEXTURELOD    0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOR_INVERSE_2                     16:16 /* RWXVF */
#define NV_PGRAPH_COMBINE0COLOR_INVERSE_2_NORMAL         0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOR_INVERSE_2_INVERSE        0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOR_ALPHA_2                       17:17 /* RWXVF */
#define NV_PGRAPH_COMBINE0COLOR_ALPHA_2_COLOR            0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOR_ALPHA_2_ALPHA            0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOR_ARGUMENT_2                    20:18 /* RWXVF */
#define NV_PGRAPH_COMBINE0COLOR_ARGUMENT_2_ZERO          0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOR_ARGUMENT_2_FACTOR        0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOR_ARGUMENT_2_DIFFUSE       0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOR_ARGUMENT_2_INPUT         0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOR_ARGUMENT_2_TEXTURE0      0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOR_ARGUMENT_2_TEXTURE1      0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOR_ARGUMENT_2_TEXTURELOD    0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOR_INVERSE_3                     24:24 /* RWXVF */
#define NV_PGRAPH_COMBINE0COLOR_INVERSE_3_NORMAL         0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOR_INVERSE_3_INVERSE        0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOR_ALPHA_3                       25:25 /* RWXVF */
#define NV_PGRAPH_COMBINE0COLOR_ALPHA_3_COLOR            0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOR_ALPHA_3_ALPHA            0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOR_ARGUMENT_3                    28:26 /* RWXVF */
#define NV_PGRAPH_COMBINE0COLOR_ARGUMENT_3_ZERO          0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOR_ARGUMENT_3_FACTOR        0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOR_ARGUMENT_3_DIFFUSE       0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOR_ARGUMENT_3_INPUT         0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOR_ARGUMENT_3_TEXTURE0      0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOR_ARGUMENT_3_TEXTURE1      0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOR_ARGUMENT_3_TEXTURELOD    0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOR_OPERATION                     31:29 /* RWXVF */
#define NV_PGRAPH_COMBINE0COLOR_OPERATION_ADD            0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOR_OPERATION_ADD2           0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOR_OPERATION_ADD4           0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOR_OPERATION_ADDSIGNED      0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOR_OPERATION_MUX            0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOR_OPERATION_ADDCOMPLEMENT  0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOR_OPERATION_ADDSIGNED2     0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHA                          0x00400598 /* RW-4R */
#define NV_PGRAPH_COMBINE1ALPHA_INVERSE_0                       0:0 /* RWXVF */
#define NV_PGRAPH_COMBINE1ALPHA_INVERSE_0_NORMAL         0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHA_INVERSE_0_INVERSE        0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHA_ARGUMENT_0                      4:2 /* RWXVF */
#define NV_PGRAPH_COMBINE1ALPHA_ARGUMENT_0_ZERO          0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHA_ARGUMENT_0_FACTOR        0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHA_ARGUMENT_0_DIFFUSE       0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHA_ARGUMENT_0_INPUT         0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHA_ARGUMENT_0_TEXTURE0      0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHA_ARGUMENT_0_TEXTURE1      0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHA_INVERSE_1                       8:8 /* RWXVF */
#define NV_PGRAPH_COMBINE1ALPHA_INVERSE_1_NORMAL         0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHA_INVERSE_1_INVERSE        0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHA_ARGUMENT_1                    12:10 /* RWXVF */
#define NV_PGRAPH_COMBINE1ALPHA_ARGUMENT_1_ZERO          0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHA_ARGUMENT_1_FACTOR        0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHA_ARGUMENT_1_DIFFUSE       0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHA_ARGUMENT_1_INPUT         0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHA_ARGUMENT_1_TEXTURE0      0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHA_ARGUMENT_1_TEXTURE1      0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHA_INVERSE_2                     16:16 /* RWXVF */
#define NV_PGRAPH_COMBINE1ALPHA_INVERSE_2_NORMAL         0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHA_INVERSE_2_INVERSE        0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHA_ARGUMENT_2                    20:18 /* RWXVF */
#define NV_PGRAPH_COMBINE1ALPHA_ARGUMENT_2_ZERO          0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHA_ARGUMENT_2_FACTOR        0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHA_ARGUMENT_2_DIFFUSE       0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHA_ARGUMENT_2_INPUT         0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHA_ARGUMENT_2_TEXTURE0      0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHA_ARGUMENT_2_TEXTURE1      0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHA_INVERSE_3                     24:24 /* RWXVF */
#define NV_PGRAPH_COMBINE1ALPHA_INVERSE_3_NORMAL         0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHA_INVERSE_3_INVERSE        0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHA_ARGUMENT_3                    28:26 /* RWXVF */
#define NV_PGRAPH_COMBINE1ALPHA_ARGUMENT_3_ZERO          0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHA_ARGUMENT_3_FACTOR        0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHA_ARGUMENT_3_DIFFUSE       0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHA_ARGUMENT_3_INPUT         0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHA_ARGUMENT_3_TEXTURE0      0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHA_ARGUMENT_3_TEXTURE1      0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHA_OPERATION                     31:29 /* RWXVF */
#define NV_PGRAPH_COMBINE1ALPHA_OPERATION_ADD            0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHA_OPERATION_ADD2           0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHA_OPERATION_ADD4           0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHA_OPERATION_ADDSIGNED      0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHA_OPERATION_MUX            0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHA_OPERATION_ADDCOMPLEMENT  0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINE1ALPHA_OPERATION_ADDSIGNED2     0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOR                          0x0040059C /* RW-4R */
#define NV_PGRAPH_COMBINE1COLOR_INVERSE_0                       0:0 /* RWXVF */
#define NV_PGRAPH_COMBINE1COLOR_INVERSE_0_NORMAL         0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOR_INVERSE_0_INVERSE        0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOR_ALPHA_0                         1:1 /* RWXVF */
#define NV_PGRAPH_COMBINE1COLOR_ALPHA_0_COLOR            0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOR_ALPHA_0_ALPHA            0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOR_ARGUMENT_0                      4:2 /* RWXVF */
#define NV_PGRAPH_COMBINE1COLOR_ARGUMENT_0_ZERO          0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOR_ARGUMENT_0_FACTOR        0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOR_ARGUMENT_0_DIFFUSE       0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOR_ARGUMENT_0_INPUT         0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOR_ARGUMENT_0_TEXTURE0      0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOR_ARGUMENT_0_TEXTURE1      0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOR_INVERSE_1                       8:8 /* RWXVF */
#define NV_PGRAPH_COMBINE1COLOR_INVERSE_1_NORMAL         0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOR_INVERSE_1_INVERSE        0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOR_ALPHA_1                         9:9 /* RWXVF */
#define NV_PGRAPH_COMBINE1COLOR_ALPHA_1_COLOR            0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOR_ALPHA_1_ALPHA            0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOR_ARGUMENT_1                    12:10 /* RWXVF */
#define NV_PGRAPH_COMBINE1COLOR_ARGUMENT_1_ZERO          0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOR_ARGUMENT_1_FACTOR        0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOR_ARGUMENT_1_DIFFUSE       0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOR_ARGUMENT_1_INPUT         0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOR_ARGUMENT_1_TEXTURE0      0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOR_ARGUMENT_1_TEXTURE1      0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOR_INVERSE_2                     16:16 /* RWXVF */
#define NV_PGRAPH_COMBINE1COLOR_INVERSE_2_NORMAL         0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOR_INVERSE_2_INVERSE        0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOR_ALPHA_2                       17:17 /* RWXVF */
#define NV_PGRAPH_COMBINE1COLOR_ALPHA_2_COLOR            0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOR_ALPHA_2_ALPHA            0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOR_ARGUMENT_2                    20:18 /* RWXVF */
#define NV_PGRAPH_COMBINE1COLOR_ARGUMENT_2_ZERO          0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOR_ARGUMENT_2_FACTOR        0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOR_ARGUMENT_2_DIFFUSE       0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOR_ARGUMENT_2_INPUT         0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOR_ARGUMENT_2_TEXTURE0      0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOR_ARGUMENT_2_TEXTURE1      0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOR_INVERSE_3                     24:24 /* RWXVF */
#define NV_PGRAPH_COMBINE1COLOR_INVERSE_3_NORMAL         0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOR_INVERSE_3_INVERSE        0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOR_ALPHA_3                       25:25 /* RWXVF */
#define NV_PGRAPH_COMBINE1COLOR_ALPHA_3_COLOR            0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOR_ALPHA_3_ALPHA            0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOR_ARGUMENT_3                    28:26 /* RWXVF */
#define NV_PGRAPH_COMBINE1COLOR_ARGUMENT_3_ZERO          0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOR_ARGUMENT_3_FACTOR        0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOR_ARGUMENT_3_DIFFUSE       0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOR_ARGUMENT_3_INPUT         0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOR_ARGUMENT_3_TEXTURE0      0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOR_ARGUMENT_3_TEXTURE1      0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOR_OPERATION                     31:29 /* RWXVF */
#define NV_PGRAPH_COMBINE1COLOR_OPERATION_ADD            0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOR_OPERATION_ADD2           0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOR_OPERATION_ADD4           0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOR_OPERATION_ADDSIGNED      0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOR_OPERATION_MUX            0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOR_OPERATION_ADDCOMPLEMENT  0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOR_OPERATION_ADDSIGNED2     0x00000007 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOROCW                       0x00400E60 /* RW-4R */
#define NV_PGRAPH_COMBINE0COLOROCW_BUNDLE                0x00000018 /* ----B */
#define NV_PGRAPH_COMBINE0COLOROCW_CD_DST                       3:0 /* RWXVF */
#define NV_PGRAPH_COMBINE0COLOROCW_CD_DST_R0             0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOROCW_CD_DST_R4             0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOROCW_CD_DST_R5             0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOROCW_CD_DST_R8             0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOROCW_CD_DST_R9             0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOROCW_CD_DST_RC             0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINE0COLOROCW_CD_DST_RD             0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINE0COLOROCW_AB_DST                       7:4 /* RWXVF */
#define NV_PGRAPH_COMBINE0COLOROCW_AB_DST_R0             0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOROCW_AB_DST_R4             0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOROCW_AB_DST_R5             0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOROCW_AB_DST_R8             0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOROCW_AB_DST_R9             0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOROCW_AB_DST_RC             0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINE0COLOROCW_AB_DST_RD             0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINE0COLOROCW_SUM_DST                     11:8 /* RWXVF */
#define NV_PGRAPH_COMBINE0COLOROCW_SUM_DST_R0            0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOROCW_SUM_DST_R4            0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOROCW_SUM_DST_R5            0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOROCW_SUM_DST_R8            0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOROCW_SUM_DST_R9            0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOROCW_SUM_DST_RC            0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINE0COLOROCW_SUM_DST_RD            0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINE0COLOROCW_CD_DOT_ENABLE              12:12 /* RWXVF */
#define NV_PGRAPH_COMBINE0COLOROCW_CD_DOT_ENABLE_FALSE   0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOROCW_CD_DOT_ENABLE_TRUE    0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOROCW_AB_DOT_ENABLE              13:13 /* RWXVF */
#define NV_PGRAPH_COMBINE0COLOROCW_AB_DOT_ENABLE_FALSE   0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOROCW_AB_DOT_ENABLE_TRUE    0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOROCW_MUX_ENABLE                 14:14 /* RWXVF */
#define NV_PGRAPH_COMBINE0COLOROCW_MUX_ENABLE_FALSE      0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOROCW_MUX_ENABLE_TRUE       0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOROCW_OPERATION                  17:15 /* RWXVF */
#define NV_PGRAPH_COMBINE0COLOROCW_OPERATION_NOSHIFT     0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOROCW_OPERATION_BIAS        0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOROCW_OPERATION_LEFT1       0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOROCW_OPERATION_LEFT1_BIAS  0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOROCW_OPERATION_LEFT2       0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE0COLOROCW_OPERATION_RIGHT1      0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOROCW                       0x00400E64 /* RW-4R */
#define NV_PGRAPH_COMBINE1COLOROCW_BUNDLE                0x00000019 /* ----B */
#define NV_PGRAPH_COMBINE1COLOROCW_CD_DST                       3:0 /* RWXVF */
#define NV_PGRAPH_COMBINE1COLOROCW_CD_DST_R0             0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOROCW_CD_DST_R4             0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOROCW_CD_DST_R5             0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOROCW_CD_DST_R8             0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOROCW_CD_DST_R9             0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOROCW_CD_DST_RC             0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINE1COLOROCW_CD_DST_RD             0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINE1COLOROCW_AB_DST                       7:4 /* RWXVF */
#define NV_PGRAPH_COMBINE1COLOROCW_AB_DST_R0             0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOROCW_AB_DST_R4             0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOROCW_AB_DST_R5             0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOROCW_AB_DST_R8             0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOROCW_AB_DST_R9             0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOROCW_AB_DST_RC             0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINE1COLOROCW_AB_DST_RD             0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINE1COLOROCW_SUM_DST                     11:8 /* RWXVF */
#define NV_PGRAPH_COMBINE1COLOROCW_SUM_DST_R0            0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOROCW_SUM_DST_R4            0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOROCW_SUM_DST_R5            0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOROCW_SUM_DST_R8            0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOROCW_SUM_DST_R9            0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOROCW_SUM_DST_RC            0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINE1COLOROCW_SUM_DST_RD            0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINE1COLOROCW_CD_DOT_ENABLE              12:12 /* RWXVF */
#define NV_PGRAPH_COMBINE1COLOROCW_CD_DOT_ENABLE_FALSE   0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOROCW_CD_DOT_ENABLE_TRUE    0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOROCW_AB_DOT_ENABLE              13:13 /* RWXVF */
#define NV_PGRAPH_COMBINE1COLOROCW_AB_DOT_ENABLE_FALSE   0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOROCW_AB_DOT_ENABLE_TRUE    0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOROCW_MUX_ENABLE                 14:14 /* RWXVF */
#define NV_PGRAPH_COMBINE1COLOROCW_MUX_ENABLE_FALSE      0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOROCW_MUX_ENABLE_TRUE       0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOROCW_OPERATION                  17:15 /* RWXVF */
#define NV_PGRAPH_COMBINE1COLOROCW_OPERATION_NOSHIFT     0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOROCW_OPERATION_BIAS        0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOROCW_OPERATION_LEFT1       0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOROCW_OPERATION_LEFT1_BIAS  0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOROCW_OPERATION_LEFT2       0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOROCW_OPERATION_RIGHT1      0x00000006 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOROCW_MUX_SELECT                 27:27 /* RWXVF */
#define NV_PGRAPH_COMBINE1COLOROCW_MUX_SELECT_LSB        0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOROCW_MUX_SELECT_MSB        0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOROCW_ITERATION_COUNT            29:28 /* RWXVF */
#define NV_PGRAPH_COMBINE1COLOROCW_ITERATION_COUNT_ONE   0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINE1COLOROCW_ITERATION_COUNT_TWO   0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0                      0x00400E68 /* RW-4R */
#define NV_PGRAPH_COMBINESPECFOGCW0_BUNDLE               0x0000001A /* ----B */
#define NV_PGRAPH_COMBINESPECFOGCW0_D_SOURCE                    3:0 /* RWXVF */
#define NV_PGRAPH_COMBINESPECFOGCW0_D_SOURCE_R0          0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_D_SOURCE_R1          0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_D_SOURCE_R2          0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_D_SOURCE_R3          0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_D_SOURCE_R4          0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_D_SOURCE_R5          0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_D_SOURCE_R8          0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_D_SOURCE_R9          0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_D_SOURCE_RC          0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_D_SOURCE_RD          0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_D_SOURCE_RE          0x0000000E /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_D_SOURCE_RF          0x0000000F /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_D_ALPHA                     4:4 /* RWXVF */
#define NV_PGRAPH_COMBINESPECFOGCW0_D_ALPHA_FALSE        0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_D_ALPHA_TRUE         0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_D_INVERSE                   5:5 /* RWXVF */
#define NV_PGRAPH_COMBINESPECFOGCW0_D_INVERSE_FALSE      0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_D_INVERSE_TRUE       0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_C_SOURCE                   11:8 /* RWXVF */
#define NV_PGRAPH_COMBINESPECFOGCW0_C_SOURCE_R0          0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_C_SOURCE_R1          0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_C_SOURCE_R2          0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_C_SOURCE_R3          0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_C_SOURCE_R4          0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_C_SOURCE_R5          0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_C_SOURCE_R8          0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_C_SOURCE_R9          0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_C_SOURCE_RC          0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_C_SOURCE_RD          0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_C_SOURCE_RE          0x0000000E /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_C_SOURCE_RF          0x0000000F /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_C_ALPHA                   12:12 /* RWXVF */
#define NV_PGRAPH_COMBINESPECFOGCW0_C_ALPHA_FALSE        0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_C_ALPHA_TRUE         0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_C_INVERSE                 13:13 /* RWXVF */
#define NV_PGRAPH_COMBINESPECFOGCW0_C_INVERSE_FALSE      0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_C_INVERSE_TRUE       0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_B_SOURCE                  19:16 /* RWXVF */
#define NV_PGRAPH_COMBINESPECFOGCW0_B_SOURCE_R0          0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_B_SOURCE_R1          0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_B_SOURCE_R2          0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_B_SOURCE_R3          0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_B_SOURCE_R4          0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_B_SOURCE_R5          0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_B_SOURCE_R8          0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_B_SOURCE_R9          0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_B_SOURCE_RC          0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_B_SOURCE_RD          0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_B_SOURCE_RE          0x0000000E /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_B_SOURCE_RF          0x0000000F /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_B_ALPHA                   20:20 /* RWXVF */
#define NV_PGRAPH_COMBINESPECFOGCW0_B_ALPHA_FALSE        0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_B_ALPHA_TRUE         0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_B_INVERSE                 21:21 /* RWXVF */
#define NV_PGRAPH_COMBINESPECFOGCW0_B_INVERSE_FALSE      0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_B_INVERSE_TRUE       0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_A_SOURCE                  27:24 /* RWXVF */
#define NV_PGRAPH_COMBINESPECFOGCW0_A_SOURCE_R0          0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_A_SOURCE_R1          0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_A_SOURCE_R2          0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_A_SOURCE_R3          0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_A_SOURCE_R4          0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_A_SOURCE_R5          0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_A_SOURCE_R8          0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_A_SOURCE_R9          0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_A_SOURCE_RC          0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_A_SOURCE_RD          0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_A_SOURCE_RE          0x0000000E /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_A_SOURCE_RF          0x0000000F /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_A_ALPHA                   28:28 /* RWXVF */
#define NV_PGRAPH_COMBINESPECFOGCW0_A_ALPHA_FALSE        0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_A_ALPHA_TRUE         0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_A_INVERSE                 29:29 /* RWXVF */
#define NV_PGRAPH_COMBINESPECFOGCW0_A_INVERSE_FALSE      0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW0_A_INVERSE_TRUE       0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW1                      0x00400E6C /* RW-4R */
#define NV_PGRAPH_COMBINESPECFOGCW1_BUNDLE               0x0000001B /* ----B */
#define NV_PGRAPH_COMBINESPECFOGCW1_ADDINV_R12                  5:5 /* RWXVF */
#define NV_PGRAPH_COMBINESPECFOGCW1_ADDINV_R12_FALSE     0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW1_ADDINV_R12_TRUE      0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW1_ADDINV_R5                   6:6 /* RWXVF */
#define NV_PGRAPH_COMBINESPECFOGCW1_ADDINV_R5_FALSE      0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW1_ADDINV_R5_TRUE       0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW1_SPECCLAMP                   7:7 /* RWXVF */
#define NV_PGRAPH_COMBINESPECFOGCW1_SPECCLAMP_FALSE      0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW1_SPECCLAMP_TRUE       0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW1_G_SOURCE                   11:8 /* RWXVF */
#define NV_PGRAPH_COMBINESPECFOGCW1_G_SOURCE_R0          0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW1_G_SOURCE_R1          0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW1_G_SOURCE_R2          0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW1_G_SOURCE_R3          0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW1_G_SOURCE_R4          0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW1_G_SOURCE_R5          0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW1_G_SOURCE_R8          0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW1_G_SOURCE_R9          0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW1_G_SOURCE_RC          0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW1_G_SOURCE_RD          0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW1_G_ALPHA                   12:12 /* RWXVF */
#define NV_PGRAPH_COMBINESPECFOGCW1_G_ALPHA_FALSE        0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW1_G_ALPHA_TRUE         0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW1_G_INVERSE                 13:13 /* RWXVF */
#define NV_PGRAPH_COMBINESPECFOGCW1_G_INVERSE_FALSE      0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW1_G_INVERSE_TRUE       0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW1_F_SOURCE                  19:16 /* RWXVF */
#define NV_PGRAPH_COMBINESPECFOGCW1_F_SOURCE_R0          0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW1_F_SOURCE_R1          0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW1_F_SOURCE_R2          0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW1_F_SOURCE_R3          0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW1_F_SOURCE_R4          0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW1_F_SOURCE_R5          0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW1_F_SOURCE_R8          0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW1_F_SOURCE_R9          0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW1_F_SOURCE_RC          0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW1_F_SOURCE_RD          0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW1_F_ALPHA                   20:20 /* RWXVF */
#define NV_PGRAPH_COMBINESPECFOGCW1_F_ALPHA_FALSE        0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW1_F_ALPHA_TRUE         0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW1_F_INVERSE                 21:21 /* RWXVF */
#define NV_PGRAPH_COMBINESPECFOGCW1_F_INVERSE_FALSE      0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW1_F_INVERSE_TRUE       0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW1_E_SOURCE                  27:24 /* RWXVF */
#define NV_PGRAPH_COMBINESPECFOGCW1_E_SOURCE_R0          0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW1_E_SOURCE_R1          0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW1_E_SOURCE_R2          0x00000002 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW1_E_SOURCE_R3          0x00000003 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW1_E_SOURCE_R4          0x00000004 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW1_E_SOURCE_R5          0x00000005 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW1_E_SOURCE_R8          0x00000008 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW1_E_SOURCE_R9          0x00000009 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW1_E_SOURCE_RC          0x0000000C /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW1_E_SOURCE_RD          0x0000000D /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW1_E_ALPHA                   28:28 /* RWXVF */
#define NV_PGRAPH_COMBINESPECFOGCW1_E_ALPHA_FALSE        0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW1_E_ALPHA_TRUE         0x00000001 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW1_E_INVERSE                 29:29 /* RWXVF */
#define NV_PGRAPH_COMBINESPECFOGCW1_E_INVERSE_FALSE      0x00000000 /* RW--V */
#define NV_PGRAPH_COMBINESPECFOGCW1_E_INVERSE_TRUE       0x00000001 /* RW--V */
#define NV_PGRAPH_CONTROL0                               0x00400818 /* RW-4R */
#define NV_PGRAPH_CONTROL0_BUNDLE                        0x0000001C /* ----B */
#define NV_PGRAPH_CONTROL0_ALPHAREF                             7:0 /* RWXUF */
#define NV_PGRAPH_CONTROL0_ALPHAFUNC                           11:8 /* RWXVF */
#define NV_PGRAPH_CONTROL0_ALPHAFUNC_NEVER               0x00000001 /* RW--V */
#define NV_PGRAPH_CONTROL0_ALPHAFUNC_LESS                0x00000002 /* RW--V */
#define NV_PGRAPH_CONTROL0_ALPHAFUNC_EQUAL               0x00000003 /* RW--V */
#define NV_PGRAPH_CONTROL0_ALPHAFUNC_LESSEQUAL           0x00000004 /* RW--V */
#define NV_PGRAPH_CONTROL0_ALPHAFUNC_GREATER             0x00000005 /* RW--V */
#define NV_PGRAPH_CONTROL0_ALPHAFUNC_NOTEQUAL            0x00000006 /* RW--V */
#define NV_PGRAPH_CONTROL0_ALPHAFUNC_GREATEREQUAL        0x00000007 /* RW--V */
#define NV_PGRAPH_CONTROL0_ALPHAFUNC_ALWAYS              0x00000008 /* RW--V */
#define NV_PGRAPH_CONTROL0_ALPHATESTENABLE                    12:12 /* RWXVF */
#define NV_PGRAPH_CONTROL0_ALPHATESTENABLE_FALSE         0x00000000 /* RW--V */
#define NV_PGRAPH_CONTROL0_ALPHATESTENABLE_TRUE          0x00000001 /* RW--V */
#define NV_PGRAPH_CONTROL0_ORIGIN                             13:13 /* RWXVF */
#define NV_PGRAPH_CONTROL0_ORIGIN_CENTER                 0x00000000 /* RW--V */
#define NV_PGRAPH_CONTROL0_ORIGIN_CORNER                 0x00000001 /* RW--V */
#define NV_PGRAPH_CONTROL0_ZENABLE                            14:14 /* RWXVF */
#define NV_PGRAPH_CONTROL0_ZENABLE_FALSE                 0x00000000 /* RW--V */
#define NV_PGRAPH_CONTROL0_ZENABLE_TRUE                  0x00000001 /* RW--V */
#define NV_PGRAPH_CONTROL0_ZFUNC                              19:16 /* RWXVF */
#define NV_PGRAPH_CONTROL0_ZFUNC_NEVER                   0x00000001 /* RW--V */
#define NV_PGRAPH_CONTROL0_ZFUNC_LESS                    0x00000002 /* RW--V */
#define NV_PGRAPH_CONTROL0_ZFUNC_EQUAL                   0x00000003 /* RW--V */
#define NV_PGRAPH_CONTROL0_ZFUNC_LESSEQUAL               0x00000004 /* RW--V */
#define NV_PGRAPH_CONTROL0_ZFUNC_GREATER                 0x00000005 /* RW--V */
#define NV_PGRAPH_CONTROL0_ZFUNC_NOTEQUAL                0x00000006 /* RW--V */
#define NV_PGRAPH_CONTROL0_ZFUNC_GREATEREQUAL            0x00000007 /* RW--V */
#define NV_PGRAPH_CONTROL0_ZFUNC_ALWAYS                  0x00000008 /* RW--V */
#define NV_PGRAPH_CONTROL0_CULLMODE                           21:20 /* RWXVF */
#define NV_PGRAPH_CONTROL0_CULLMODE_NONE                 0x00000001 /* RW--V */
#define NV_PGRAPH_CONTROL0_CULLMODE_CW                   0x00000002 /* RW--V */
#define NV_PGRAPH_CONTROL0_CULLMODE_CCW                  0x00000003 /* RW--V */
#define NV_PGRAPH_CONTROL0_DITHERENABLE                       22:22 /* RWXVF */
#define NV_PGRAPH_CONTROL0_DITHERENABLE_FALSE            0x00000000 /* RW--V */
#define NV_PGRAPH_CONTROL0_DITHERENABLE_TRUE             0x00000001 /* RW--V */
#define NV_PGRAPH_CONTROL0_Z_PERSPECTIVE_ENABLE               23:23 /* RWXVF */
#define NV_PGRAPH_CONTROL0_Z_PERSPECTIVE_ENABLE_FALSE    0x00000000 /* RW--V */
#define NV_PGRAPH_CONTROL0_Z_PERSPECTIVE_ENABLE_TRUE     0x00000001 /* RW--V */
#define NV_PGRAPH_CONTROL0_ZWRITEENABLE                       24:24 /* RWXVF */
#define NV_PGRAPH_CONTROL0_ZWRITEENABLE_FALSE            0x00000000 /* RW--V */
#define NV_PGRAPH_CONTROL0_ZWRITEENABLE_TRUE             0x00000001 /* RW--V */
#define NV_PGRAPH_CONTROL0_STENCIL_WRITE_ENABLE               25:25 /* RWXVF */
#define NV_PGRAPH_CONTROL0_STENCIL_WRITE_ENABLE_FALSE    0x00000000 /* RW--V */
#define NV_PGRAPH_CONTROL0_STENCIL_WRITE_ENABLE_TRUE     0x00000001 /* RW--V */
#define NV_PGRAPH_CONTROL0_ALPHA_WRITE_ENABLE                 26:26 /* RWXVF */
#define NV_PGRAPH_CONTROL0_ALPHA_WRITE_ENABLE_FALSE      0x00000000 /* RW--V */
#define NV_PGRAPH_CONTROL0_ALPHA_WRITE_ENABLE_TRUE       0x00000001 /* RW--V */
#define NV_PGRAPH_CONTROL0_RED_WRITE_ENABLE                   27:27 /* RWXVF */
#define NV_PGRAPH_CONTROL0_RED_WRITE_ENABLE_FALSE        0x00000000 /* RW--V */
#define NV_PGRAPH_CONTROL0_RED_WRITE_ENABLE_TRUE         0x00000001 /* RW--V */
#define NV_PGRAPH_CONTROL0_GREEN_WRITE_ENABLE                 28:28 /* RWXVF */
#define NV_PGRAPH_CONTROL0_GREEN_WRITE_ENABLE_FALSE      0x00000000 /* RW--V */
#define NV_PGRAPH_CONTROL0_GREEN_WRITE_ENABLE_TRUE       0x00000001 /* RW--V */
#define NV_PGRAPH_CONTROL0_BLUE_WRITE_ENABLE                  29:29 /* RWXVF */
#define NV_PGRAPH_CONTROL0_BLUE_WRITE_ENABLE_FALSE       0x00000000 /* RW--V */
#define NV_PGRAPH_CONTROL0_BLUE_WRITE_ENABLE_TRUE        0x00000001 /* RW--V */
#define NV_PGRAPH_CONTROL0_Z_FORMAT                           31:30 /* RWXVF */
#define NV_PGRAPH_CONTROL0_Z_FORMAT_FIXED                0x00000001 /* RW--V */
#define NV_PGRAPH_CONTROL0_Z_FORMAT_FLOAT                0x00000002 /* RW--V */
#define NV_PGRAPH_CONTROL1                               0x0040081c /* RW-4R */
#define NV_PGRAPH_CONTROL1_BUNDLE                        0x0000001D /* ----B */
#define NV_PGRAPH_CONTROL1_STENCIL_TEST_ENABLE                  0:0 /* RWXVF */
#define NV_PGRAPH_CONTROL1_STENCIL_TEST_ENABLE_FALSE     0x00000000 /* RW--V */
#define NV_PGRAPH_CONTROL1_STENCIL_TEST_ENABLE_TRUE      0x00000001 /* RW--V */
#define NV_PGRAPH_CONTROL1_STENCIL_FUNC                         7:4 /* RWXVF */
#define NV_PGRAPH_CONTROL1_STENCIL_FUNC_NEVER            0x00000001 /* RW--V */
#define NV_PGRAPH_CONTROL1_STENCIL_FUNC_LESS             0x00000002 /* RW--V */
#define NV_PGRAPH_CONTROL1_STENCIL_FUNC_EQUAL            0x00000003 /* RW--V */
#define NV_PGRAPH_CONTROL1_STENCIL_FUNC_LESSEQUAL        0x00000004 /* RW--V */
#define NV_PGRAPH_CONTROL1_STENCIL_FUNC_GREATER          0x00000005 /* RW--V */
#define NV_PGRAPH_CONTROL1_STENCIL_FUNC_NOTEQUAL         0x00000006 /* RW--V */
#define NV_PGRAPH_CONTROL1_STENCIL_FUNC_GREATEREQUAL     0x00000007 /* RW--V */
#define NV_PGRAPH_CONTROL1_STENCIL_FUNC_ALWAYS           0x00000008 /* RW--V */
#define NV_PGRAPH_CONTROL1_STENCIL_REF                         15:8 /* RWXUF */
#define NV_PGRAPH_CONTROL1_STENCIL_MASK_READ                  23:16 /* RWXUF */
#define NV_PGRAPH_CONTROL1_STENCIL_MASK_WRITE                 31:24 /* RWXUF */
#define NV_PGRAPH_CONTROL2                               0x00400820 /* RW-4R */
#define NV_PGRAPH_CONTROL2_BUNDLE                        0x0000001E /* ----B */
#define NV_PGRAPH_CONTROL2_STENCIL_OP_FAIL                      3:0 /* RWXVF */
#define NV_PGRAPH_CONTROL2_STENCIL_OP_FAIL_KEEP          0x00000001 /* RW--V */
#define NV_PGRAPH_CONTROL2_STENCIL_OP_FAIL_ZERO          0x00000002 /* RW--V */
#define NV_PGRAPH_CONTROL2_STENCIL_OP_FAIL_REPLACE       0x00000003 /* RW--V */
#define NV_PGRAPH_CONTROL2_STENCIL_OP_FAIL_INCRSAT       0x00000004 /* RW--V */
#define NV_PGRAPH_CONTROL2_STENCIL_OP_FAIL_DECRSAT       0x00000005 /* RW--V */
#define NV_PGRAPH_CONTROL2_STENCIL_OP_FAIL_INVERT        0x00000006 /* RW--V */
#define NV_PGRAPH_CONTROL2_STENCIL_OP_FAIL_INCR          0x00000007 /* RW--V */
#define NV_PGRAPH_CONTROL2_STENCIL_OP_FAIL_DECR          0x00000008 /* RW--V */
#define NV_PGRAPH_CONTROL2_STENCIL_OP_ZFAIL                     7:4 /* RWXVF */
#define NV_PGRAPH_CONTROL2_STENCIL_OP_ZFAIL_KEEP         0x00000001 /* RW--V */
#define NV_PGRAPH_CONTROL2_STENCIL_OP_ZFAIL_ZERO         0x00000002 /* RW--V */
#define NV_PGRAPH_CONTROL2_STENCIL_OP_ZFAIL_REPLACE      0x00000003 /* RW--V */
#define NV_PGRAPH_CONTROL2_STENCIL_OP_ZFAIL_INCRSAT      0x00000004 /* RW--V */
#define NV_PGRAPH_CONTROL2_STENCIL_OP_ZFAIL_DECRSAT      0x00000005 /* RW--V */
#define NV_PGRAPH_CONTROL2_STENCIL_OP_ZFAIL_INVERT       0x00000006 /* RW--V */
#define NV_PGRAPH_CONTROL2_STENCIL_OP_ZFAIL_INCR         0x00000007 /* RW--V */
#define NV_PGRAPH_CONTROL2_STENCIL_OP_ZFAIL_DECR         0x00000008 /* RW--V */
#define NV_PGRAPH_CONTROL2_STENCIL_OP_ZPASS                    11:8 /* RWXVF */
#define NV_PGRAPH_CONTROL2_STENCIL_OP_ZPASS_KEEP         0x00000001 /* RW--V */
#define NV_PGRAPH_CONTROL2_STENCIL_OP_ZPASS_ZERO         0x00000002 /* RW--V */
#define NV_PGRAPH_CONTROL2_STENCIL_OP_ZPASS_REPLACE      0x00000003 /* RW--V */
#define NV_PGRAPH_CONTROL2_STENCIL_OP_ZPASS_INCRSAT      0x00000004 /* RW--V */
#define NV_PGRAPH_CONTROL2_STENCIL_OP_ZPASS_DECRSAT      0x00000005 /* RW--V */
#define NV_PGRAPH_CONTROL2_STENCIL_OP_ZPASS_INVERT       0x00000006 /* RW--V */
#define NV_PGRAPH_CONTROL2_STENCIL_OP_ZPASS_INCR         0x00000007 /* RW--V */
#define NV_PGRAPH_CONTROL2_STENCIL_OP_ZPASS_DECR         0x00000008 /* RW--V */
#define NV_PGRAPH_CONTROL3                               0x00400E7C /* RW-4R */
#define NV_PGRAPH_CONTROL3_BUNDLE                        0x0000001F /* ----B */
#define NV_PGRAPH_CONTROL3_FLATSHADE_OP                         0:0 /* RWXVF */
#define NV_PGRAPH_CONTROL3_FLATSHADE_OP_LASTVTX          0x00000000 /* RW--V */
#define NV_PGRAPH_CONTROL3_FLATSHADE_OP_FIRSTVTX         0x00000001 /* RW--V */
#define NV_PGRAPH_CONTROL3_PREMULTALPHA                         2:2 /* RWXVF */
#define NV_PGRAPH_CONTROL3_PREMULTALPHA_FALSE            0x00000000 /* RW--V */
#define NV_PGRAPH_CONTROL3_PREMULTALPHA_TRUE             0x00000001 /* RW--V */
#define NV_PGRAPH_CONTROL3_TEXTUREMAPBLEND                      4:4 /* RWXVF */
#define NV_PGRAPH_CONTROL3_SPECULARENABLE                       5:5 /* RWXVF */
#define NV_PGRAPH_CONTROL3_SPECULARENABLE_FALSE          0x00000000 /* RW--V */
#define NV_PGRAPH_CONTROL3_SPECULARENABLE_TRUE           0x00000001 /* RW--V */
#define NV_PGRAPH_CONTROL3_TEXTUREPERSPECTIVE                   6:6 /* RWXVF */
#define NV_PGRAPH_CONTROL3_TEXTUREPERSPECTIVE_FALSE      0x00000000 /* RW--V */
#define NV_PGRAPH_CONTROL3_TEXTUREPERSPECTIVE_TRUE       0x00000001 /* RW--V */
#define NV_PGRAPH_CONTROL3_SHADEMODE                            7:7 /* RWXVF */
#define NV_PGRAPH_CONTROL3_SHADEMODE_FLAT                0x00000000 /* RW--V */
#define NV_PGRAPH_CONTROL3_SHADEMODE_GOURAUD             0x00000001 /* RW--V */
#define NV_PGRAPH_CONTROL3_FOGENABLE                            8:8 /* RWXVF */
#define NV_PGRAPH_CONTROL3_FOGENABLE_FALSE               0x00000000 /* RW--V */
#define NV_PGRAPH_CONTROL3_FOGENABLE_TRUE                0x00000001 /* RW--V */
#define NV_PGRAPH_CONTROL3_POINT_PARAMS_EN                      9:9 /* RWXVF */
#define NV_PGRAPH_CONTROL3_POINT_PARAMS_EN_FALSE         0x00000000 /* RW--V */
#define NV_PGRAPH_CONTROL3_POINT_PARAMS_EN_TRUE          0x00000001 /* RW--V */
#define NV_PGRAPH_CONTROL3_W_BUFFER_SELECT                    13:10 /* RWXVF */
#define NV_PGRAPH_CONTROL3_W_BUFFER_SELECT_0             0x00000000 /* RW--V */
#define NV_PGRAPH_CONTROL3_W_BUFFER_SELECT_1             0x00000001 /* RW--V */
#define NV_PGRAPH_BLEND                                  0x00400824 /* RW-4R */
#define NV_PGRAPH_BLEND_BUNDLE                           0x00000020 /* ----B */
#define NV_PGRAPH_BLEND_BLENDEQUATION                           2:0 /* RWXVF */
#define NV_PGRAPH_BLEND_BLENDEQUATION_SUBTRACT           0x00000000 /* RW--V */
#define NV_PGRAPH_BLEND_BLENDEQUATION_REVSUBTRACT        0x00000001 /* RW--V */
#define NV_PGRAPH_BLEND_BLENDEQUATION_ADD                0x00000002 /* RW--V */
#define NV_PGRAPH_BLEND_BLENDEQUATION_MIN                0x00000003 /* RW--V */
#define NV_PGRAPH_BLEND_BLENDEQUATION_MAX                0x00000004 /* RW--V */
#define NV_PGRAPH_BLEND_TEXTUREMAPBLEND                         3:0 /* -WXVF */
#define NV_PGRAPH_BLEND_TEXTUREMAPBLEND_DECAL            0x00000001 /* -W--V */
#define NV_PGRAPH_BLEND_TEXTUREMAPBLEND_MODULATE         0x00000002 /* -W--V */
#define NV_PGRAPH_BLEND_TEXTUREMAPBLEND_DECALALPHA       0x00000003 /* -W--V */
#define NV_PGRAPH_BLEND_TEXTUREMAPBLEND_MODULATEALPHA    0x00000004 /* -W--V */
#define NV_PGRAPH_BLEND_TEXTUREMAPBLEND_DECALMASK        0x00000005 /* -W--V */
#define NV_PGRAPH_BLEND_TEXTUREMAPBLEND_MODULATEMASK     0x00000006 /* -W--V */
#define NV_PGRAPH_BLEND_TEXTUREMAPBLEND_COPY             0x00000007 /* -W--V */
#define NV_PGRAPH_BLEND_TEXTUREMAPBLEND_ADD              0x00000008 /* -W--V */
#define NV_PGRAPH_BLEND_MASK_BIT                                5:4 /* -WXVF */
#define NV_PGRAPH_BLEND_MASK_BIT_LSB                     0x00000001 /* -W--V */
#define NV_PGRAPH_BLEND_MASK_BIT_MSB                     0x00000002 /* -W--V */
#define NV_PGRAPH_BLEND_SHADEMODE                               7:6 /* -WXVF */
#define NV_PGRAPH_BLEND_SHADEMODE_FLAT                   0x00000001 /* -W--V */
#define NV_PGRAPH_BLEND_SHADEMODE_GOURAUD                0x00000002 /* -W--V */
#define NV_PGRAPH_BLEND_SHADEMODE_PHONG                  0x00000003 /* -W--V */
#define NV_PGRAPH_BLEND_TEXTUREPERSPECTIVE                      8:8 /* -WXVF */
#define NV_PGRAPH_BLEND_TEXTUREPERSPECTIVE_FALSE         0x00000000 /* -W--V */
#define NV_PGRAPH_BLEND_TEXTUREPERSPECTIVE_TRUE          0x00000001 /* -W--V */
#define NV_PGRAPH_BLEND_SPECULARENABLE                        12:12 /* -WXVF */
#define NV_PGRAPH_BLEND_SPECULARENABLE_FALSE             0x00000000 /* -W--V */
#define NV_PGRAPH_BLEND_SPECULARENABLE_TRUE              0x00000001 /* -W--V */
#define NV_PGRAPH_BLEND_FOGENABLE                             16:16 /* -WXVF */
#define NV_PGRAPH_BLEND_FOGENABLE_FALSE                  0x00000000 /* -W--V */
#define NV_PGRAPH_BLEND_FOGENABLE_TRUE                   0x00000001 /* -W--V */
#define NV_PGRAPH_BLEND_ALPHABLENDENABLE                      20:20 /* -WXVF */
#define NV_PGRAPH_BLEND_ALPHABLENDENABLE_FALSE           0x00000000 /* RW--V */
#define NV_PGRAPH_BLEND_ALPHABLENDENABLE_TRUE            0x00000001 /* RW--V */
#define NV_PGRAPH_BLEND_SRCBLEND                              27:24 /* -WXVF */
#define NV_PGRAPH_BLEND_SRCBLEND_INVCONSTCOLOR           0x0000000D /* RW--V */
#define NV_PGRAPH_BLEND_SRCBLEND_CONSTALPHA              0x0000000E /* RW--V */
#define NV_PGRAPH_BLEND_SRCBLEND_INVCONSTALPHA           0x0000000F /* RW--V */
#define NV_PGRAPH_BLEND_SRCBLEND_ZERO                    0x00000001 /* -W--V */
#define NV_PGRAPH_BLEND_SRCBLEND_ONE                     0x00000002 /* -W--V */
#define NV_PGRAPH_BLEND_SRCBLEND_SRCCOLOR                0x00000003 /* -W--V */
#define NV_PGRAPH_BLEND_SRCBLEND_INVSRCCOLOR             0x00000004 /* -W--V */
#define NV_PGRAPH_BLEND_SRCBLEND_SRCALPHA                0x00000005 /* -W--V */
#define NV_PGRAPH_BLEND_SRCBLEND_INVSRCALPHA             0x00000006 /* -W--V */
#define NV_PGRAPH_BLEND_SRCBLEND_DESTALPHA               0x00000007 /* -W--V */
#define NV_PGRAPH_BLEND_SRCBLEND_INVDESTALPHA            0x00000008 /* -W--V */
#define NV_PGRAPH_BLEND_SRCBLEND_DESTCOLOR               0x00000009 /* -W--V */
#define NV_PGRAPH_BLEND_SRCBLEND_INVDESTCOLOR            0x0000000A /* -W--V */
#define NV_PGRAPH_BLEND_SRCBLEND_SRCALPHASAT             0x0000000B /* -W--V */
#define NV_PGRAPH_BLEND_SRCBLEND_INVSRCALPHASAT          0x0000000C /* ----V */
#define NV_PGRAPH_BLEND_SRCBLEND_BETA                    0x0000000D /* ----V */
#define NV_PGRAPH_BLEND_DESTBLEND                             31:28 /* -WXVF */
#define NV_PGRAPH_BLEND_DESTBLEND_ZERO                   0x00000001 /* -W--V */
#define NV_PGRAPH_BLEND_DESTBLEND_ONE                    0x00000002 /* -W--V */
#define NV_PGRAPH_BLEND_DESTBLEND_SRCCOLOR               0x00000003 /* -W--V */
#define NV_PGRAPH_BLEND_DESTBLEND_INVSRCCOLOR            0x00000004 /* -W--V */
#define NV_PGRAPH_BLEND_DESTBLEND_SRCALPHA               0x00000005 /* -W--V */
#define NV_PGRAPH_BLEND_DESTBLEND_INVSRCALPHA            0x00000006 /* -W--V */
#define NV_PGRAPH_BLEND_DESTBLEND_DESTALPHA              0x00000007 /* -W--V */
#define NV_PGRAPH_BLEND_DESTBLEND_INVDESTALPHA           0x00000008 /* -W--V */
#define NV_PGRAPH_BLEND_DESTBLEND_DESTCOLOR              0x00000009 /* -W--V */
#define NV_PGRAPH_BLEND_DESTBLEND_INVDESTCOLOR           0x0000000A /* -W--V */
#define NV_PGRAPH_BLEND_DESTBLEND_SRCALPHASAT            0x0000000B /* -W--V */
#define NV_PGRAPH_BLEND_DESTBLEND_INVSRCALPHASAT         0x0000000B /* RW--V */
#define NV_PGRAPH_BLEND_DESTBLEND_CONSTCOLOR             0x0000000C /* RW--V */
#define NV_PGRAPH_BLEND_DESTBLEND_INVCONSTCOLOR          0x0000000D /* RW--V */
#define NV_PGRAPH_BLEND_DESTBLEND_CONSTALPHA             0x0000000E /* RW--V */
#define NV_PGRAPH_BLEND_DESTBLEND_INVCONSTALPHA          0x0000000F /* RW--V */
#define NV_PGRAPH_BLENDCOLOR                             0x00400E84 /* RW-4R */
#define NV_PGRAPH_BLENDCOLOR_BUNDLE                      0x00000021 /* ----B */
#define NV_PGRAPH_BLENDCOLOR_BLUE                               7:0 /* RWXVF */
#define NV_PGRAPH_BLENDCOLOR_GREEN                             15:8 /* RWXVF */
#define NV_PGRAPH_BLENDCOLOR_RED                              23:16 /* RWXVF */
#define NV_PGRAPH_BLENDCOLOR_ALPHA                            31:24 /* RWXVF */
#define NV_PGRAPH_SETUPRASTER                            0x00400E88 /* RW-4R */
#define NV_PGRAPH_SETUPRASTER_BUNDLE                     0x00000022 /* ----B */
#define NV_PGRAPH_SETUPRASTER_FRONTFACEMODE                     1:0 /* RWXVF */
#define NV_PGRAPH_SETUPRASTER_FRONTFACEMODE_FILL         0x00000000 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_FRONTFACEMODE_POINT        0x00000001 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_FRONTFACEMODE_LINE         0x00000002 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_BACKFACEMODE                      3:2 /* RWXVF */
#define NV_PGRAPH_SETUPRASTER_BACKFACEMODE_FILL          0x00000000 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_BACKFACEMODE_POINT         0x00000001 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_BACKFACEMODE_LINE          0x00000002 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_POFFSETPOINTENABLE                6:6 /* RWXVF */
#define NV_PGRAPH_SETUPRASTER_POFFSETPOINTENABLE_FALSE   0x00000000 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_POFFSETPOINTENABLE_TRUE    0x00000001 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_POFFSETLINEENABLE                 7:7 /* RWXVF */
#define NV_PGRAPH_SETUPRASTER_POFFSETLINEENABLE_FALSE    0x00000000 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_POFFSETLINEENABLE_TRUE     0x00000001 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_POFFSETFILLENABLE                 8:8 /* RWXVF */
#define NV_PGRAPH_SETUPRASTER_POFFSETFILLENABLE_FALSE    0x00000000 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_POFFSETFILLENABLE_TRUE     0x00000001 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_POINTSMOOTHENABLE                 9:9 /* RWXVF */
#define NV_PGRAPH_SETUPRASTER_POINTSMOOTHENABLE_FALSE    0x00000000 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_POINTSMOOTHENABLE_TRUE     0x00000001 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_LINESMOOTHENABLE                10:10 /* RWXVF */
#define NV_PGRAPH_SETUPRASTER_LINESMOOTHENABLE_FALSE     0x00000000 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_LINESMOOTHENABLE_TRUE      0x00000001 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_POLYSMOOTHENABLE                11:11 /* RWXVF */
#define NV_PGRAPH_SETUPRASTER_POLYSMOOTHENABLE_FALSE     0x00000000 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_POLYSMOOTHENABLE_TRUE      0x00000001 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_LINEWIDTH                       20:12 /* RWXVF */
#define NV_PGRAPH_SETUPRASTER_CULLCONTROL                     22:21 /* RWXVF */
#define NV_PGRAPH_SETUPRASTER_CULLCONTROL_CULLNON        0x00000000 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_CULLCONTROL_CULLFRONTFACE  0x00000001 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_CULLCONTROL_CULLBACKFACE   0x00000002 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_CULLCONTROL_CULLALL        0x00000003 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_FRONTFACE                       23:23 /* RWXVF */
#define NV_PGRAPH_SETUPRASTER_FRONTFACE_CW_FRONT         0x00000000 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_FRONTFACE_CCW_FRONT        0x00000001 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_SWATHWIDTH                      27:26 /* R-XVF */
#define NV_PGRAPH_SETUPRASTER_SWATHWIDTH_8               0x00000000 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_SWATHWIDTH_16              0x00000001 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_SWATHWIDTH_32              0x00000002 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_SWATHWIDTH_64              0x00000003 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_CULLENABLE                      28:28 /* RWXVF */
#define NV_PGRAPH_SETUPRASTER_CULLENABLE_FALSE           0x00000000 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_CULLENABLE_TRUE            0x00000001 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_Z_FORMAT                        29:29 /* RWXVF */
#define NV_PGRAPH_SETUPRASTER_Z_FORMAT_FIXED             0x00000000 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_Z_FORMAT_FLOAT             0x00000001 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_ZCLIPENABLE                     31:30 /* RWXVF */
#define NV_PGRAPH_SETUPRASTER_ZCLIPENABLE_NONE           0x00000000 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_ZCLIPENABLE_MIN_ONLY       0x00000001 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_ZCLIPENABLE_MAX_ONLY       0x00000002 /* RW--V */
#define NV_PGRAPH_SETUPRASTER_ZCLIPENABLE_MIN_AND_MAX    0x00000003 /* RW--V */
#define NV_PGRAPH_FOGCOLOR                               0x00400E8C /* RW-4R */
#define NV_PGRAPH_FOGCOLOR_BUNDLE                        0x00000023 /* ----B */
#define NV_PGRAPH_FOGCOLOR_BLUE                                 7:0 /* RWXVF */
#define NV_PGRAPH_FOGCOLOR_GREEN                               15:8 /* RWXVF */
#define NV_PGRAPH_FOGCOLOR_RED                                23:16 /* RWXVF */
#define NV_PGRAPH_FOGCOLOR_ALPHA                              31:24 /* RWXVF */
#define NV_PGRAPH_ZOFFSETFACTOR                          0x00400E90 /* RW-4R */
#define NV_PGRAPH_ZOFFSETFACTOR_BUNDLE                   0x00000024 /* ----B */
#define NV_PGRAPH_ZOFFSETFACTOR_VALUE                          31:0 /* RWXFF */
#define NV_PGRAPH_ZOFFSETBIAS                            0x00400E94 /* RW-4R */
#define NV_PGRAPH_ZOFFSETBIAS_BUNDLE                     0x00000025 /* ----B */
#define NV_PGRAPH_ZOFFSETBIAS_VALUE                            31:0 /* RWXFF */
#define NV_PGRAPH_ZCLIPMIN                               0x00400E98 /* RW-4R */
#define NV_PGRAPH_ZCLIPMIN_BUNDLE                        0x00000026 /* ----B */
#define NV_PGRAPH_ZCLIPMIN_VALUE                               31:0 /* RWXFF */
#define NV_PGRAPH_ZCLIPMAX                               0x00400E9C /* RW-4R */
#define NV_PGRAPH_ZCLIPMAX_BUNDLE                        0x00000027 /* ----B */
#define NV_PGRAPH_ZCLIPMAX_VALUE                               31:0 /* RWXFF */
#define NV_PGRAPH_COLORKEYCOLOR0                         0x00400EA0 /* RW-4R */
#define NV_PGRAPH_COLORKEYCOLOR0_BUNDLE                  0x00000028 /* ----B */
#define NV_PGRAPH_COLORKEYCOLOR0_VALUE                         31:0 /* RWXVF */
#define NV_PGRAPH_COLORKEYCOLOR1                         0x00400EA4 /* RW-4R */
#define NV_PGRAPH_COLORKEYCOLOR1_BUNDLE                  0x00000029 /* ----B */
#define NV_PGRAPH_COLORKEYCOLOR1_VALUE                         31:0 /* RWXVF */
#define NV_PGRAPH_POINTSIZE                              0x00400EA8 /* RW-4R */
#define NV_PGRAPH_POINTSIZE_BUNDLE                       0x0000002A /* ----B */
#define NV_PGRAPH_POINTSIZE_VALUE                               8:0 /* RWXVF */
#define NV_PGRAPH_WINDOWCLIP_HORIZONTAL(i)       (0x00400F00+(i)*4) /* RW-4A */
#define NV_PGRAPH_WINDOWCLIP_HORIZONTAL__SIZE_1                   8 /*       */
#define NV_PGRAPH_WINDOWCLIP_HORIZONTAL_MIN                    11:0 /* RWXSF */
#define NV_PGRAPH_WINDOWCLIP_HORIZONTAL_MAX                   27:16 /* RWXSF */
#define NV_PGRAPH_WINDOWCLIP_VERTICAL(i)         (0x00400F20+(i)*4) /* RW-4A */
#define NV_PGRAPH_WINDOWCLIP_VERTICAL__SIZE_1                     8 /*       */
#define NV_PGRAPH_WINDOWCLIP_VERTICAL_MIN                      11:0 /* RWXSF */
#define NV_PGRAPH_WINDOWCLIP_VERTICAL_MAX                     27:16 /* RWXSF */
#define NV_PGRAPH_XFMODE0                                0x00400F40 /* RW-4R */
#define NV_PGRAPH_XFMODE0_T0_EN                                 0:0 /* RWXVF */
#define NV_PGRAPH_XFMODE0_T0_EN_OFF                      0x00000000 /* RW--V */
#define NV_PGRAPH_XFMODE0_T0_EN_ON                       0x00000001 /* RW--V */
#define NV_PGRAPH_XFMODE0_T0_MODE                               1:1 /* RWXVF */
#define NV_PGRAPH_XFMODE0_T0_MODE_PASS                   0x00000000 /* RW--V */
#define NV_PGRAPH_XFMODE0_T0_MODE_TRANSFORM              0x00000001 /* RW--V */
#define NV_PGRAPH_XFMODE0_T0_DIV                                2:2 /* RWXVF */
#define NV_PGRAPH_XFMODE0_T0_DIV_OFF                     0x00000000 /* RW--V */
#define NV_PGRAPH_XFMODE0_T0_DIV_ON                      0x00000001 /* RW--V */
#define NV_PGRAPH_XFMODE0_T0_S                                  5:3 /* RWXVF */
#define NV_PGRAPH_XFMODE0_T0_S_PASS                      0x00000000 /* RW--V */
#define NV_PGRAPH_XFMODE0_T0_S_EYE                       0x00000001 /* RW--V */
#define NV_PGRAPH_XFMODE0_T0_S_OBJECT                    0x00000002 /* RW--V */
#define NV_PGRAPH_XFMODE0_T0_S_SPHERE                    0x00000003 /* RW--V */
#define NV_PGRAPH_XFMODE0_T0_S_NORMAL                    0x00000004 /* RW--V */
#define NV_PGRAPH_XFMODE0_T0_S_REFLECTION                0x00000005 /* RW--V */
#define NV_PGRAPH_XFMODE0_T0_S_EMBOSS                    0x00000006 /* RW--V */
#define NV_PGRAPH_XFMODE0_T0_T                                  8:6 /* RWXVF */
#define NV_PGRAPH_XFMODE0_T0_T_PASS                      0x00000000 /* RW--V */
#define NV_PGRAPH_XFMODE0_T0_T_EYE                       0x00000001 /* RW--V */
#define NV_PGRAPH_XFMODE0_T0_T_OBJECT                    0x00000002 /* RW--V */
#define NV_PGRAPH_XFMODE0_T0_T_SPHERE                    0x00000003 /* RW--V */
#define NV_PGRAPH_XFMODE0_T0_T_NORMAL                    0x00000004 /* RW--V */
#define NV_PGRAPH_XFMODE0_T0_T_REFLECTION                0x00000005 /* RW--V */
#define NV_PGRAPH_XFMODE0_T0_T_EMBOSS                    0x00000006 /* RW--V */
#define NV_PGRAPH_XFMODE0_T0_U                                 11:9 /* RWXVF */
#define NV_PGRAPH_XFMODE0_T0_U_PASS                      0x00000000 /* RW--V */
#define NV_PGRAPH_XFMODE0_T0_U_EYE                       0x00000001 /* RW--V */
#define NV_PGRAPH_XFMODE0_T0_U_OBJECT                    0x00000002 /* RW--V */
#define NV_PGRAPH_XFMODE0_T0_U_NORMAL                    0x00000004 /* RW--V */
#define NV_PGRAPH_XFMODE0_T0_U_REFLECTION                0x00000005 /* RW--V */
#define NV_PGRAPH_XFMODE0_T0_U_EMBOSS                    0x00000006 /* RW--V */
#define NV_PGRAPH_XFMODE0_T0_Q                                13:12 /* RWXVF */
#define NV_PGRAPH_XFMODE0_T0_Q_PASS                      0x00000000 /* RW--V */
#define NV_PGRAPH_XFMODE0_T0_Q_EYE                       0x00000001 /* RW--V */
#define NV_PGRAPH_XFMODE0_T0_Q_OBJECT                    0x00000002 /* RW--V */
#define NV_PGRAPH_XFMODE0_T1_EN                               14:14 /* RWXVF */
#define NV_PGRAPH_XFMODE0_T1_EN_OFF                      0x00000000 /* RW--V */
#define NV_PGRAPH_XFMODE0_T1_EN_ON                       0x00000001 /* RW--V */
#define NV_PGRAPH_XFMODE0_T1_MODE                             15:15 /* RWXVF */
#define NV_PGRAPH_XFMODE0_T1_MODE_PASS                   0x00000000 /* RW--V */
#define NV_PGRAPH_XFMODE0_T1_MODE_TRANSFORM              0x00000001 /* RW--V */
#define NV_PGRAPH_XFMODE0_T1_DIV                              16:16 /* RWXVF */
#define NV_PGRAPH_XFMODE0_T1_DIV_OFF                     0x00000000 /* RW--V */
#define NV_PGRAPH_XFMODE0_T1_DIV_ON                      0x00000001 /* RW--V */
#define NV_PGRAPH_XFMODE0_T1_S                                19:17 /* RWXVF */
#define NV_PGRAPH_XFMODE0_T1_S_PASS                      0x00000000 /* RW--V */
#define NV_PGRAPH_XFMODE0_T1_S_EYE                       0x00000001 /* RW--V */
#define NV_PGRAPH_XFMODE0_T1_S_OBJECT                    0x00000002 /* RW--V */
#define NV_PGRAPH_XFMODE0_T1_S_SPHERE                    0x00000003 /* RW--V */
#define NV_PGRAPH_XFMODE0_T1_S_NORMAL                    0x00000004 /* RW--V */
#define NV_PGRAPH_XFMODE0_T1_S_REFLECTION                0x00000005 /* RW--V */
#define NV_PGRAPH_XFMODE0_T1_S_EMBOSS                    0x00000006 /* RW--V */
#define NV_PGRAPH_XFMODE0_T1_T                                22:20 /* RWXVF */
#define NV_PGRAPH_XFMODE0_T1_T_PASS                      0x00000000 /* RW--V */
#define NV_PGRAPH_XFMODE0_T1_T_EYE                       0x00000001 /* RW--V */
#define NV_PGRAPH_XFMODE0_T1_T_OBJECT                    0x00000002 /* RW--V */
#define NV_PGRAPH_XFMODE0_T1_T_SPHERE                    0x00000003 /* RW--V */
#define NV_PGRAPH_XFMODE0_T1_T_NORMAL                    0x00000004 /* RW--V */
#define NV_PGRAPH_XFMODE0_T1_T_REFLECTION                0x00000005 /* RW--V */
#define NV_PGRAPH_XFMODE0_T1_T_EMBOSS                    0x00000006 /* RW--V */
#define NV_PGRAPH_XFMODE0_T1_U                                25:23 /* RWXVF */
#define NV_PGRAPH_XFMODE0_T1_U_PASS                      0x00000000 /* RW--V */
#define NV_PGRAPH_XFMODE0_T1_U_EYE                       0x00000001 /* RW--V */
#define NV_PGRAPH_XFMODE0_T1_U_OBJECT                    0x00000002 /* RW--V */
#define NV_PGRAPH_XFMODE0_T1_U_NORMAL                    0x00000004 /* RW--V */
#define NV_PGRAPH_XFMODE0_T1_U_REFLECTION                0x00000005 /* RW--V */
#define NV_PGRAPH_XFMODE0_T1_U_EMBOSS                    0x00000006 /* RW--V */
#define NV_PGRAPH_XFMODE0_T1_Q                                27:26 /* RWXVF */
#define NV_PGRAPH_XFMODE0_T1_Q_PASS                      0x00000000 /* RW--V */
#define NV_PGRAPH_XFMODE0_T1_Q_EYE                       0x00000001 /* RW--V */
#define NV_PGRAPH_XFMODE0_T1_Q_OBJECT                    0x00000002 /* RW--V */
#define NV_PGRAPH_XFMODE0_EYETYPE                             28:28 /* RWXVF */
#define NV_PGRAPH_XFMODE0_EYETYPE_INFINITE               0x00000000 /* RW--V */
#define NV_PGRAPH_XFMODE0_EYETYPE_LOCAL                  0x00000001 /* RW--V */
#define NV_PGRAPH_XFMODE0_LIGHTING                            29:29 /* RWXVF */
#define NV_PGRAPH_XFMODE0_LIGHTING_OFF                   0x00000000 /* RW--V */
#define NV_PGRAPH_XFMODE0_LIGHTING_ON                    0x00000001 /* RW--V */
#define NV_PGRAPH_XFMODE0_NORMAL                              30:30 /* RWXVF */
#define NV_PGRAPH_XFMODE0_NORMAL_OFF                     0x00000000 /* RW--V */
#define NV_PGRAPH_XFMODE0_NORMAL_ON                      0x00000001 /* RW--V */
#define NV_PGRAPH_XFMODE0_FOG                                 31:31 /* RWXVF */
#define NV_PGRAPH_XFMODE0_FOG_OFF                        0x00000000 /* RW--V */
#define NV_PGRAPH_XFMODE0_FOG_ON                         0x00000001 /* RW--V */
#define NV_PGRAPH_XFMODE1                                0x00400F44 /* RW-4R */
#define NV_PGRAPH_XFMODE1_LIGHT0                                1:0 /* RWXVF */
#define NV_PGRAPH_XFMODE1_LIGHT0_OFF                     0x00000000 /* RW--V */
#define NV_PGRAPH_XFMODE1_LIGHT0_INFINITE                0x00000001 /* RW--V */
#define NV_PGRAPH_XFMODE1_LIGHT0_LOCAL                   0x00000002 /* RW--V */
#define NV_PGRAPH_XFMODE1_LIGHT0_SPOT                    0x00000003 /* RW--V */
#define NV_PGRAPH_XFMODE1_LIGHT1                                3:2 /* RWXVF */
#define NV_PGRAPH_XFMODE1_LIGHT1_OFF                     0x00000000 /* RW--V */
#define NV_PGRAPH_XFMODE1_LIGHT1_INFINITE                0x00000001 /* RW--V */
#define NV_PGRAPH_XFMODE1_LIGHT1_LOCAL                   0x00000002 /* RW--V */
#define NV_PGRAPH_XFMODE1_LIGHT1_SPOT                    0x00000003 /* RW--V */
#define NV_PGRAPH_XFMODE1_LIGHT2                                5:4 /* RWXVF */
#define NV_PGRAPH_XFMODE1_LIGHT2_OFF                     0x00000000 /* RW--V */
#define NV_PGRAPH_XFMODE1_LIGHT2_INFINITE                0x00000001 /* RW--V */
#define NV_PGRAPH_XFMODE1_LIGHT2_LOCAL                   0x00000002 /* RW--V */
#define NV_PGRAPH_XFMODE1_LIGHT2_SPOT                    0x00000003 /* RW--V */
#define NV_PGRAPH_XFMODE1_LIGHT3                                7:6 /* RWXVF */
#define NV_PGRAPH_XFMODE1_LIGHT3_OFF                     0x00000000 /* RW--V */
#define NV_PGRAPH_XFMODE1_LIGHT3_INFINITE                0x00000001 /* RW--V */
#define NV_PGRAPH_XFMODE1_LIGHT3_LOCAL                   0x00000002 /* RW--V */
#define NV_PGRAPH_XFMODE1_LIGHT3_SPOT                    0x00000003 /* RW--V */
#define NV_PGRAPH_XFMODE1_LIGHT4                                9:8 /* RWXVF */
#define NV_PGRAPH_XFMODE1_LIGHT4_OFF                     0x00000000 /* RW--V */
#define NV_PGRAPH_XFMODE1_LIGHT4_INFINITE                0x00000001 /* RW--V */
#define NV_PGRAPH_XFMODE1_LIGHT4_LOCAL                   0x00000002 /* RW--V */
#define NV_PGRAPH_XFMODE1_LIGHT4_SPOT                    0x00000003 /* RW--V */
#define NV_PGRAPH_XFMODE1_LIGHT5                              11:10 /* RWXVF */
#define NV_PGRAPH_XFMODE1_LIGHT5_OFF                     0x00000000 /* RW--V */
#define NV_PGRAPH_XFMODE1_LIGHT5_INFINITE                0x00000001 /* RW--V */
#define NV_PGRAPH_XFMODE1_LIGHT5_LOCAL                   0x00000002 /* RW--V */
#define NV_PGRAPH_XFMODE1_LIGHT5_SPOT                    0x00000003 /* RW--V */
#define NV_PGRAPH_XFMODE1_LIGHT6                              13:12 /* RWXVF */
#define NV_PGRAPH_XFMODE1_LIGHT6_OFF                     0x00000000 /* RW--V */
#define NV_PGRAPH_XFMODE1_LIGHT6_INFINITE                0x00000001 /* RW--V */
#define NV_PGRAPH_XFMODE1_LIGHT6_LOCAL                   0x00000002 /* RW--V */
#define NV_PGRAPH_XFMODE1_LIGHT6_SPOT                    0x00000003 /* RW--V */
#define NV_PGRAPH_XFMODE1_LIGHT7                              15:14 /* RWXVF */
#define NV_PGRAPH_XFMODE1_LIGHT7_OFF                     0x00000000 /* RW--V */
#define NV_PGRAPH_XFMODE1_LIGHT7_INFINITE                0x00000001 /* RW--V */
#define NV_PGRAPH_XFMODE1_LIGHT7_LOCAL                   0x00000002 /* RW--V */
#define NV_PGRAPH_XFMODE1_LIGHT7_SPOT                    0x00000003 /* RW--V */
#define NV_PGRAPH_XFMODE1_FOGGEN                              17:16 /* RWXVF */
#define NV_PGRAPH_XFMODE1_FOGGEN_OFF                     0x00000000 /* RW--V */
#define NV_PGRAPH_XFMODE1_FOGGEN_RADIAL                  0x00000001 /* RW--V */
#define NV_PGRAPH_XFMODE1_FOGGEN_PLANE                   0x00000002 /* RW--V */
#define NV_PGRAPH_XFMODE1_FOGGEN_ABS_PLANAR              0x00000003 /* RW--V */
#define NV_PGRAPH_XFMODE1_LAT                                 18:18 /* RWXVF */
#define NV_PGRAPH_XFMODE1_LAT_OFF                        0x00000000 /* RW--V */
#define NV_PGRAPH_XFMODE1_LAT_ON                         0x00000001 /* RW--V */
#define NV_PGRAPH_XFMODE1_COLOR1I                             19:19 /* RWXVF */
#define NV_PGRAPH_XFMODE1_COLOR1I_OFF                    0x00000000 /* RW--V */
#define NV_PGRAPH_XFMODE1_COLOR1I_PASS                   0x00000001 /* RW--V */
#define NV_PGRAPH_XFMODE1_COLOR1O                             20:20 /* RWXVF */
#define NV_PGRAPH_XFMODE1_COLOR1O_OFF                    0x00000000 /* RW--V */
#define NV_PGRAPH_XFMODE1_COLOR1O_PASS                   0x00000001 /* RW--V */
#define NV_PGRAPH_XFMODE1_COLOR_MATERIAL                      24:21 /* RWXVF */
#define NV_PGRAPH_XFMODE1_COLOR_MATERIAL_DISABLED        0x00000000 /* RW--V */
#define NV_PGRAPH_XFMODE1_COLOR_MATERIAL_EMISSION        0x00000001 /* RW--V */
#define NV_PGRAPH_XFMODE1_COLOR_MATERIAL_AMBIENT         0x00000002 /* RW--V */
#define NV_PGRAPH_XFMODE1_COLOR_MATERIAL_DIFFUSE         0x00000004 /* RW--V */
#define NV_PGRAPH_XFMODE1_COLOR_MATERIAL_AMBIENT_DIFFUSE 0x00000006 /* RW--V */
#define NV_PGRAPH_XFMODE1_COLOR_MATERIAL_SPECULAR        0x00000008 /* RW--V */
#define NV_PGRAPH_XFMODE1_POINT_PARAM                         25:25 /* RWXVF */
#define NV_PGRAPH_XFMODE1_POINT_PARAM_OFF                0x00000000 /* RW--V */
#define NV_PGRAPH_XFMODE1_POINT_PARAM_ON                 0x00000001 /* RW--V */
#define NV_PGRAPH_XFMODE1_RESERVED                            26:26 /* RWXVF */
#define NV_PGRAPH_XFMODE1_RESERVED_0                     0x00000000 /* RW--V */
#define NV_PGRAPH_XFMODE1_SKIN_EN                             27:27 /* RWXVF */
#define NV_PGRAPH_XFMODE1_SKIN_EN_OFF                    0x00000000 /* RW--V */
#define NV_PGRAPH_XFMODE1_SKIN_EN_ON                     0x00000001 /* RW--V */
#define NV_PGRAPH_XFMODE1_PASS                                28:28 /* RWXVF */
#define NV_PGRAPH_XFMODE1_PASS_FULLOPERATION             0x00000000 /* RW--V */
#define NV_PGRAPH_XFMODE1_PASS_PASSTHROUGH               0x00000001 /* RW--V */
#define NV_PGRAPH_XFMODE1_HALFOFFSET                          29:29 /* RWXVF */
#define NV_PGRAPH_XFMODE1_HALFOFFSET_OFF                 0x00000000 /* RW--V */
#define NV_PGRAPH_XFMODE1_HALFOFFSET_ON                  0x00000001 /* RW--V */
#define NV_PGRAPH_GLOBALSTATE0                           0x00400F48 /* RW-4R */
#define NV_PGRAPH_GLOBALSTATE0_FOGMODE                          2:0 /* RWXVF */
#define NV_PGRAPH_GLOBALSTATE0_FOGMODE_LINEAR            0x00000000 /* RW--V */
#define NV_PGRAPH_GLOBALSTATE0_FOGMODE_EXP               0x00000001 /* RW--V */
#define NV_PGRAPH_GLOBALSTATE0_FOGMODE_EXP2              0x00000003 /* RW--V */
#define NV_PGRAPH_GLOBALSTATE0_FOGMODE_EXP_ABS           0x00000005 /* RW--V */
#define NV_PGRAPH_GLOBALSTATE0_FOGMODE_EXP2_ABS          0x00000007 /* RW--V */
#define NV_PGRAPH_GLOBALSTATE0_WINDOW_CLIPMODE                  4:4 /* RWXVF */
#define NV_PGRAPH_GLOBALSTATE0_WINDOW_CLIPMODE_INCLUSIVE 0x00000000 /* RW--V */
#define NV_PGRAPH_GLOBALSTATE0_WINDOW_CLIPMODE_EXCLUSIVE 0x00000001 /* RW--V */
#define NV_PGRAPH_GLOBALSTATE0_WITHIN_BEGINEND                  8:8 /* RWXVF */
#define NV_PGRAPH_GLOBALSTATE0_WITHIN_BEGINEND_FALSE     0x00000000 /* RW--V */
#define NV_PGRAPH_GLOBALSTATE0_WITHIN_BEGINEND_TRUE      0x00000001 /* RW--V */
#define NV_PGRAPH_GLOBALSTATE0_COMB0ALPHA_SINGLETEX           16:16 /* RWXVF */
#define NV_PGRAPH_GLOBALSTATE0_COMB0ALPHA_SINGLETEX_TRUE 0x00000001 /* RW--V */
#define NV_PGRAPH_GLOBALSTATE0_COMB0COLOR_SINGLETEX           17:17 /* RWXVF */
#define NV_PGRAPH_GLOBALSTATE0_COMB0COLOR_SINGLETEX_TRUE 0x00000001 /* RW--V */
#define NV_PGRAPH_GLOBALSTATE0_COMB1ALPHA_BYPASS              18:18 /* RWXVF */
#define NV_PGRAPH_GLOBALSTATE0_COMB1ALPHA_BYPASS_FALSE   0x00000000 /* RW--V */
#define NV_PGRAPH_GLOBALSTATE0_COMB1ALPHA_BYPASS_TRUE    0x00000001 /* RW--V */
#define NV_PGRAPH_GLOBALSTATE0_COMB1COLOR_BYPASS              19:19 /* RWXVF */
#define NV_PGRAPH_GLOBALSTATE0_COMB1COLOR_BYPASS_FALSE   0x00000000 /* RW--V */
#define NV_PGRAPH_GLOBALSTATE0_COMB1COLOR_BYPASS_TRUE    0x00000001 /* RW--V */
#define NV_PGRAPH_GLOBALSTATE0_COMB0ALPHA_ADDCMP              20:20 /* RWXVF */
#define NV_PGRAPH_GLOBALSTATE0_COMB0ALPHA_ADDCMP_FALSE   0x00000000 /* RW--V */
#define NV_PGRAPH_GLOBALSTATE0_COMB0ALPHA_ADDCMP_TRUE    0x00000001 /* RW--V */
#define NV_PGRAPH_GLOBALSTATE0_COMB0COLOR_ADDCMP              21:21 /* RWXVF */
#define NV_PGRAPH_GLOBALSTATE0_COMB0COLOR_ADDCMP_FALSE   0x00000000 /* RW--V */
#define NV_PGRAPH_GLOBALSTATE0_COMB0COLOR_ADDCMP_TRUE    0x00000001 /* RW--V */
#define NV_PGRAPH_GLOBALSTATE0_COMB1ALPHA_ADDCMP              22:22 /* RWXVF */
#define NV_PGRAPH_GLOBALSTATE0_COMB1ALPHA_ADDCMP_FALSE   0x00000000 /* RW--V */
#define NV_PGRAPH_GLOBALSTATE0_COMB1ALPHA_ADDCMP_TRUE    0x00000001 /* RW--V */
#define NV_PGRAPH_GLOBALSTATE0_COMB1COLOR_ADDCMP              23:23 /* RWXVF */
#define NV_PGRAPH_GLOBALSTATE0_COMB1COLOR_ADDCMP_FALSE   0x00000000 /* RW--V */
#define NV_PGRAPH_GLOBALSTATE0_COMB1COLOR_ADDCMP_TRUE    0x00000001 /* RW--V */
#define NV_PGRAPH_GLOBALSTATE0_Z_SETUP                        26:24 /* RWXVF */
#define NV_PGRAPH_GLOBALSTATE0_Z_SETUP_Z16ZFIXEDZBUFFER  0x00000000 /* RW--V */
#define NV_PGRAPH_GLOBALSTATE0_Z_SETUP_Z16ZFIXEDWBUFFER  0x00000001 /* RW--V */
#define NV_PGRAPH_GLOBALSTATE0_Z_SETUP_Z16ZFLOATZBUFFER  0x00000002 /* RW--V */
#define NV_PGRAPH_GLOBALSTATE0_Z_SETUP_Z16ZFLOATWBUFFER  0x00000003 /* RW--V */
#define NV_PGRAPH_GLOBALSTATE0_Z_SETUP_Z24ZFIXEDZBUFFER  0x00000004 /* RW--V */
#define NV_PGRAPH_GLOBALSTATE0_Z_SETUP_Z24ZFIXEDWBUFFER  0x00000005 /* RW--V */
#define NV_PGRAPH_GLOBALSTATE0_Z_SETUP_Z24ZFLOATZBUFFER  0x00000006 /* RW--V */
#define NV_PGRAPH_GLOBALSTATE0_Z_SETUP_Z24ZFLOATWBUFFER  0x00000007 /* RW--V */
#define NV_PGRAPH_GLOBALSTATE0_Z_INITIALIZED                  28:28 /* RWXVF */
#define NV_PGRAPH_GLOBALSTATE0_Z_INITIALIZED_FALSE       0x00000000 /* RW--V */
#define NV_PGRAPH_GLOBALSTATE0_Z_INITIALIZED_TRUE        0x00000001 /* RW--V */
#define NV_PGRAPH_GLOBALSTATE1                           0x00400F4C /* RW-4R */
#define NV_PGRAPH_GLOBALSTATE1_DMA_INSTANCE_2                  15:0 /* RWXUF */
#define NV_PGRAPH_GLOBALSTATE1_DMA_INSTANCE_2_INVALID        0x0000 /* RW--V */
#define NV_PGRAPH_GLOBALSTATE1_DMA_INSTANCE_3                 31:16 /* RWXUF */
#define NV_PGRAPH_GLOBALSTATE1_DMA_INSTANCE_3_INVALID        0x0000 /* RW--V */
#define NV_PGRAPH_PIPE_ADDRESS                           0x00400F50 /* RW-4R */
#define NV_PGRAPH_PIPE_ADDRESS_VALUE                           14:2 /* RWXVF */
#define NV_PGRAPH_PIPE_DATA                              0x00400F54 /* RW-4R */
#define NV_PGRAPH_PIPE_DATA_VALUE                              31:0 /* RWXVF */
#define NV_PGRAPH_DMA_START_0                            0x00401000 /* RW-4R */
#define NV_PGRAPH_DMA_START_0_VALUE                            31:0 /* RWXUF */
#define NV_PGRAPH_DMA_START_1                            0x00401004 /* RW-4R */
#define NV_PGRAPH_DMA_START_1_VALUE                            31:0 /* RWXUF */
#define NV_PGRAPH_DMA_LENGTH                             0x00401008 /* RW-4R */
#define NV_PGRAPH_DMA_LENGTH_VALUE                             21:0 /* RWXUF */
#define NV_PGRAPH_DMA_MISC                               0x0040100C /* RW-4R */
#define NV_PGRAPH_DMA_MISC_COUNT                               15:0 /* RWXUF */
#define NV_PGRAPH_DMA_MISC_FMT_SRC                            18:16 /* RWXVF */
#define NV_PGRAPH_DMA_MISC_FMT_DST                            22:20 /* RWXVF */
#define NV_PGRAPH_DMA_DATA_0                             0x00401020 /* RW-4R */
#define NV_PGRAPH_DMA_DATA_0_VALUE                             31:0 /* RWXUF */
#define NV_PGRAPH_DMA_DATA_1                             0x00401024 /* RW-4R */
#define NV_PGRAPH_DMA_DATA_1_VALUE                             31:0 /* RWXUF */
#define NV_PGRAPH_DMA_RM                                 0x00401030 /* RW-4R */
#define NV_PGRAPH_DMA_RM_ASSIST_A                               0:0 /* RWIVF */
#define NV_PGRAPH_DMA_RM_ASSIST_A_NOT_PENDING            0x00000000 /* R-I-V */
#define NV_PGRAPH_DMA_RM_ASSIST_A_PENDING                0x00000001 /* R---V */
#define NV_PGRAPH_DMA_RM_ASSIST_A_RESET                  0x00000001 /* -W--C */
#define NV_PGRAPH_DMA_RM_ASSIST_B                               1:1 /* RWIVF */
#define NV_PGRAPH_DMA_RM_ASSIST_B_NOT_PENDING            0x00000000 /* R-I-V */
#define NV_PGRAPH_DMA_RM_ASSIST_B_PENDING                0x00000001 /* R---V */
#define NV_PGRAPH_DMA_RM_ASSIST_B_RESET                  0x00000001 /* -W--C */
#define NV_PGRAPH_DMA_RM_WRITE_REQ                              4:4 /* CWIVF */
#define NV_PGRAPH_DMA_RM_WRITE_REQ_NOT_PENDING           0x00000000 /* CWI-V */
#define NV_PGRAPH_DMA_RM_WRITE_REQ_PENDING               0x00000001 /* -W--T */
#define NV_PGRAPH_DMA_A_XLATE_INST                       0x00401040 /* RW-4R */
#define NV_PGRAPH_DMA_A_XLATE_INST_VALUE                       15:0 /* RWXUF */
#define NV_PGRAPH_DMA_A_CONTROL                          0x00401044 /* RW-4R */
#define NV_PGRAPH_DMA_A_CONTROL_PAGE_TABLE                    12:12 /* RWIVF */
#define NV_PGRAPH_DMA_A_CONTROL_PAGE_TABLE_NOT_PRESENT   0x00000000 /* RWI-V */
#define NV_PGRAPH_DMA_A_CONTROL_PAGE_TABLE_PRESENT       0x00000001 /* RW--V */
#define NV_PGRAPH_DMA_A_CONTROL_PAGE_ENTRY                    13:13 /* RWXVF */
#define NV_PGRAPH_DMA_A_CONTROL_PAGE_ENTRY_NOT_LINEAR    0x00000000 /* RW--V */
#define NV_PGRAPH_DMA_A_CONTROL_PAGE_ENTRY_LINEAR        0x00000001 /* RW--V */
#define NV_PGRAPH_DMA_A_CONTROL_TARGET_NODE                   17:16 /* RWXUF */
#define NV_PGRAPH_DMA_A_CONTROL_TARGET_NODE_NVM          0x00000000 /* RW--V */
#define NV_PGRAPH_DMA_A_CONTROL_TARGET_NODE_PCI          0x00000002 /* RW--V */
#define NV_PGRAPH_DMA_A_CONTROL_TARGET_NODE_AGP          0x00000003 /* RW--V */
#define NV_PGRAPH_DMA_A_CONTROL_ADJUST                        31:20 /* RWXUF */
#define NV_PGRAPH_DMA_A_LIMIT                            0x00401048 /* RW-4R */
#define NV_PGRAPH_DMA_A_LIMIT_OFFSET                           31:0 /* RWXUF */
#define NV_PGRAPH_DMA_A_TLB_PTE                          0x0040104C /* RW-4R */
#define NV_PGRAPH_DMA_A_TLB_PTE_ACCESS                          1:1 /* RWXVF */
#define NV_PGRAPH_DMA_A_TLB_PTE_ACCESS_READ_ONLY         0x00000000 /* RW--V */
#define NV_PGRAPH_DMA_A_TLB_PTE_ACCESS_READ_WRITE        0x00000001 /* RW--V */
#define NV_PGRAPH_DMA_A_TLB_PTE_FRAME_ADDRESS                 31:12 /* RWXUF */
#define NV_PGRAPH_DMA_A_TLB_TAG                          0x00401050 /* RW-4R */
#define NV_PGRAPH_DMA_A_TLB_TAG_ADDRESS                       31:12 /* RWXUF */
#define NV_PGRAPH_DMA_A_ADJ_OFFSET                       0x00401054 /* RW-4R */
#define NV_PGRAPH_DMA_A_ADJ_OFFSET_VALUE                       31:0 /* RWXUF */
#define NV_PGRAPH_DMA_A_OFFSET                           0x00401058 /* RW-4R */
#define NV_PGRAPH_DMA_A_OFFSET_VALUE                           31:0 /* RWXUF */
#define NV_PGRAPH_DMA_A_SIZE                             0x0040105C /* RW-4R */
#define NV_PGRAPH_DMA_A_SIZE_VALUE                             24:0 /* RWXUF */
#define NV_PGRAPH_DMA_A_Y_SIZE                           0x00401060 /* RW-4R */
#define NV_PGRAPH_DMA_A_Y_SIZE_VALUE                           10:0 /* RWXUF */
#define NV_PGRAPH_DMA_B_XLATE_INST                       0x00401080 /* RW-4R */
#define NV_PGRAPH_DMA_B_XLATE_INST_VALUE                       15:0 /* RWXUF */
#define NV_PGRAPH_DMA_B_CONTROL                          0x00401084 /* RW-4R */
#define NV_PGRAPH_DMA_B_CONTROL_PAGE_TABLE                    12:12 /* RWIVF */
#define NV_PGRAPH_DMA_B_CONTROL_PAGE_TABLE_NOT_PRESENT   0x00000000 /* RWI-V */
#define NV_PGRAPH_DMA_B_CONTROL_PAGE_TABLE_PRESENT       0x00000001 /* RW--V */
#define NV_PGRAPH_DMA_B_CONTROL_PAGE_ENTRY                    13:13 /* RWXVF */
#define NV_PGRAPH_DMA_B_CONTROL_PAGE_ENTRY_NOT_LINEAR    0x00000000 /* RW--V */
#define NV_PGRAPH_DMA_B_CONTROL_PAGE_ENTRY_LINEAR        0x00000001 /* RW--V */
#define NV_PGRAPH_DMA_B_CONTROL_TARGET_NODE                   17:16 /* RWXUF */
#define NV_PGRAPH_DMA_B_CONTROL_TARGET_NODE_NVM          0x00000000 /* RW--V */
#define NV_PGRAPH_DMA_B_CONTROL_TARGET_NODE_PCI          0x00000002 /* RW--V */
#define NV_PGRAPH_DMA_B_CONTROL_TARGET_NODE_AGP          0x00000003 /* RW--V */
#define NV_PGRAPH_DMA_B_CONTROL_ADJUST                        31:20 /* RWXUF */
#define NV_PGRAPH_DMA_B_LIMIT                            0x00401088 /* RW-4R */
#define NV_PGRAPH_DMA_B_LIMIT_OFFSET                           31:0 /* RWXUF */
#define NV_PGRAPH_DMA_B_TLB_PTE                          0x0040108C /* RW-4R */
#define NV_PGRAPH_DMA_B_TLB_PTE_ACCESS                          1:1 /* RWXVF */
#define NV_PGRAPH_DMA_B_TLB_PTE_ACCESS_READ_ONLY         0x00000000 /* RW--V */
#define NV_PGRAPH_DMA_B_TLB_PTE_ACCESS_READ_WRITE        0x00000001 /* RW--V */
#define NV_PGRAPH_DMA_B_TLB_PTE_FRAME_ADDRESS                 31:12 /* RWXUF */
#define NV_PGRAPH_DMA_B_TLB_TAG                          0x00401090 /* RW-4R */
#define NV_PGRAPH_DMA_B_TLB_TAG_ADDRESS                       31:12 /* RWXUF */
#define NV_PGRAPH_DMA_B_ADJ_OFFSET                       0x00401094 /* RW-4R */
#define NV_PGRAPH_DMA_B_ADJ_OFFSET_VALUE                       31:0 /* RWXUF */
#define NV_PGRAPH_DMA_B_OFFSET                           0x00401098 /* RW-4R */
#define NV_PGRAPH_DMA_B_OFFSET_VALUE                           31:0 /* RWXUF */
#define NV_PGRAPH_DMA_B_SIZE                             0x0040109C /* RW-4R */
#define NV_PGRAPH_DMA_B_SIZE_VALUE                             24:0 /* RWXUF */
#define NV_PGRAPH_DMA_B_Y_SIZE                           0x004010A0 /* RW-4R */
#define NV_PGRAPH_DMA_B_Y_SIZE_VALUE                           10:0 /* RWXUF */
#define NV_PGRAPH_CONTROL_OUT_INTERPOLATOR                      1:0 /* -WIUF */
#define NV_PGRAPH_CONTROL_OUT_INTERPOLATOR_ZOH_MS        0x00000000 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_INTERPOLATOR_ZOH           0x00000001 /* -WIUV */
#define NV_PGRAPH_CONTROL_OUT_INTERPOLATOR_FOH           0x00000002 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_WRAP_U                            5:4 /* -WIUF */
#define NV_PGRAPH_CONTROL_OUT_WRAP_U_CYLINDRICAL         0x00000000 /* -WIUV */
#define NV_PGRAPH_CONTROL_OUT_WRAP_U_WRAP                0x00000001 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_WRAP_U_MIRROR              0x00000002 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_WRAP_U_CLAMP               0x00000003 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_WRAP_V                            7:6 /* -WIUF */
#define NV_PGRAPH_CONTROL_OUT_WRAP_V_CYLINDRICAL         0x00000000 /* -WIUV */
#define NV_PGRAPH_CONTROL_OUT_WRAP_V_WRAP                0x00000001 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_WRAP_V_MIRROR              0x00000002 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_WRAP_V_CLAMP               0x00000003 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_COLOR_FORMAT                      8:8 /* -WIUF */
#define NV_PGRAPH_CONTROL_OUT_COLOR_FORMAT_LE_X8R8G8B8   0x00000000 /* -WIUV */
#define NV_PGRAPH_CONTROL_OUT_COLOR_FORMAT_LE_A8R8G8B8   0x00000001 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_SRCCOLOR                        11:10 /* -W-UF */
#define NV_PGRAPH_CONTROL_OUT_SRCCOLOR_NORMAL            0x00000000 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_SRCCOLOR_COLOR_INVERSE     0x00000001 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_SRCCOLOR_ALPHA_INVERSE     0x00000002 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_SRCCOLOR_ALPHA_ONE         0x00000003 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_CULLING                         13:12 /* -WIUF */
#define NV_PGRAPH_CONTROL_OUT_CULLING_ILLEGAL            0x00000000 /* -WIUV */
#define NV_PGRAPH_CONTROL_OUT_CULLING_NONE               0x00000001 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_CULLING_COUNTERCLOCKWISE   0x00000002 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_CULLING_CLOCKWISE          0x00000003 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_ZBUFFER                         15:15 /* -WIUF */
#define NV_PGRAPH_CONTROL_OUT_ZBUFFER_SCREEN             0x00000000 /* -WIUV */
#define NV_PGRAPH_CONTROL_OUT_ZBUFFER_LINEAR             0x00000001 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_ZETA_COMPARE                    19:16 /* -WIUF */
#define NV_PGRAPH_CONTROL_OUT_ZETA_COMPARE_ILLEGAL       0x00000000 /* -WIUV */
#define NV_PGRAPH_CONTROL_OUT_ZETA_COMPARE_FALSE         0x00000001 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_ZETA_COMPARE_LT            0x00000002 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_ZETA_COMPARE_EQ            0x00000003 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_ZETA_COMPARE_LE            0x00000004 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_ZETA_COMPARE_GT            0x00000005 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_ZETA_COMPARE_NE            0x00000006 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_ZETA_COMPARE_GE            0x00000007 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_ZETA_COMPARE_TRUE          0x00000008 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_ZETA_WRITE                      22:20 /* -WIUF */
#define NV_PGRAPH_CONTROL_OUT_ZETA_WRITE_NEVER           0x00000000 /* -WIUV */
#define NV_PGRAPH_CONTROL_OUT_ZETA_WRITE_ALPHA           0x00000001 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_ZETA_WRITE_ALPHA_ZETA      0x00000002 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_ZETA_WRITE_ZETA            0x00000003 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_ZETA_WRITE_ALWAYS          0x00000004 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_COLOR_WRITE                     26:24 /* -WIUF */
#define NV_PGRAPH_CONTROL_OUT_COLOR_WRITE_NEVER          0x00000000 /* -WIUV */
#define NV_PGRAPH_CONTROL_OUT_COLOR_WRITE_ALPHA          0x00000001 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_COLOR_WRITE_ALPHA_ZETA     0x00000002 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_COLOR_WRITE_ZETA           0x00000003 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_ROP                             28:28 /* -WIUF */
#define NV_PGRAPH_CONTROL_OUT_ROP_BLEND_AND              0x00000000 /* -WIUV */
#define NV_PGRAPH_CONTROL_OUT_ROP_ADD_WITH_SATURATION    0x00000001 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_BLEND_BETA                      29:29 /* -W-UF */
#define NV_PGRAPH_CONTROL_OUT_BLEND_BETA_SRCALPHA        0x00000000 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_BLEND_BETA_DESTCOLOR       0x00000001 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_BLEND_INPUT0                    30:30 /* -W-UF */
#define NV_PGRAPH_CONTROL_OUT_BLEND_INPUT0_DESTCOLOR     0x00000000 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_BLEND_INPUT0_ZERO          0x00000001 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_BLEND_INPUT1                    31:31 /* -W-UF */
#define NV_PGRAPH_CONTROL_OUT_BLEND_INPUT1_SRCCOLOR      0x00000000 /* -W-UV */
#define NV_PGRAPH_CONTROL_OUT_BLEND_INPUT1_ZERO          0x00000001 /* -W-UV */
#define NV_PGRAPH_ALPHACNTRL_ALPHA_KEY                          7:0 /* RWXUF */
#define NV_PGRAPH_ALPHACNTRL_ALPHA_COMPARE                     11:8 /* RWXVF */
#define NV_PGRAPH_ALPHACNTRL_ALPHA_COMPARE_ILLEGAL       0x00000000 /* RW--V */
#define NV_PGRAPH_ALPHACNTRL_ALPHA_COMPARE_FALSE         0x00000001 /* RW--V */
#define NV_PGRAPH_ALPHACNTRL_ALPHA_COMPARE_LT            0x00000002 /* RW--V */
#define NV_PGRAPH_ALPHACNTRL_ALPHA_COMPARE_EQ            0x00000003 /* RW--V */
#define NV_PGRAPH_ALPHACNTRL_ALPHA_COMPARE_LE            0x00000004 /* RW--V */
#define NV_PGRAPH_ALPHACNTRL_ALPHA_COMPARE_GT            0x00000005 /* RW--V */
#define NV_PGRAPH_ALPHACNTRL_ALPHA_COMPARE_NE            0x00000006 /* RW--V */
#define NV_PGRAPH_ALPHACNTRL_ALPHA_COMPARE_GE            0x00000007 /* RW--V */
#define NV_PGRAPH_ALPHACNTRL_ALPHA_COMPARE_TRUE          0x00000008 /* RW--V */
/* dev_video.ref */
#define NV_PVIDEO                             0x006802FF:0x00680000 /* RW--D */
#define NV_PVIDEO_INTR_0                                 0x00680100 /* RWI4R */
#define NV_PVIDEO_INTR_0_NOTIFY                                 0:0 /* RWIVF */
#define NV_PVIDEO_INTR_0_NOTIFY_NOT_PENDING              0x00000000 /* R-I-V */
#define NV_PVIDEO_INTR_0_NOTIFY_PENDING                  0x00000001 /* R---V */
#define NV_PVIDEO_INTR_0_NOTIFY_RESET                    0x00000001 /* -W--V */
#define NV_PVIDEO_INTR_EN_0                              0x00680140 /* RWI4R */
#define NV_PVIDEO_INTR_EN_0_NOTIFY                              0:0 /* RWIVF */
#define NV_PVIDEO_INTR_EN_0_NOTIFY_DISABLED              0x00000000 /* RWI-V */
#define NV_PVIDEO_INTR_EN_0_NOTIFY_ENABLED               0x00000001 /* RW--V */
#define NV_PVIDEO_STEP_SIZE                              0x00680200 /* RW-4R */
#define NV_PVIDEO_STEP_SIZE_X                                  11:0 /* RWXVF */
#define NV_PVIDEO_STEP_SIZE_Y                                 27:16 /* RWXVF */
#define NV_PVIDEO_CONTROL_Y                              0x00680204 /* RW-4R */
#define NV_PVIDEO_CONTROL_Y_BLUR                                0:0 /* RW--F */
#define NV_PVIDEO_CONTROL_Y_BLUR_OFF                     0x00000000 /* RW--V */
#define NV_PVIDEO_CONTROL_Y_BLUR_ON                      0x00000001 /* RW--V */
#define NV_PVIDEO_CONTROL_Y_LINE                                4:4 /* RW--F */
#define NV_PVIDEO_CONTROL_Y_LINE_HALF                    0x00000000 /* RW--V */
#define NV_PVIDEO_CONTROL_Y_LINE_FULL                    0x00000001 /* RW--V */
#define NV_PVIDEO_CONTROL_X                              0x00680208 /* RW-4R */
#define NV_PVIDEO_CONTROL_X_WEIGHT                              0:0 /* RW--F */
#define NV_PVIDEO_CONTROL_X_WEIGHT_LIGHT                 0x00000000 /* RW--V */
#define NV_PVIDEO_CONTROL_X_WEIGHT_HEAVY                 0x00000001 /* RW--V */
#define NV_PVIDEO_CONTROL_X_SHARPENING                          4:4 /* RW--F */
#define NV_PVIDEO_CONTROL_X_SHARPENING_OFF               0x00000000 /* RW--V */
#define NV_PVIDEO_CONTROL_X_SHARPENING_ON                0x00000001 /* RW--V */
#define NV_PVIDEO_CONTROL_X_SMOOTHING                           8:8 /* RW--F */
#define NV_PVIDEO_CONTROL_X_SMOOTHING_OFF                0x00000000 /* RW--V */
#define NV_PVIDEO_CONTROL_X_SMOOTHING_ON                 0x00000001 /* RW--V */
#define NV_PVIDEO_BUFF0_START                            0x0068020c /* RW-4R */
#define NV_PVIDEO_BUFF0_START_ADDRESS                          23:2 /* RW-UF */
#define NV_PVIDEO_BUFF1_START                            0x00680210 /* RW-4R */
#define NV_PVIDEO_BUFF1_START_ADDRESS                          23:2 /* RW-UF */
#define NV_PVIDEO_BUFF0_PITCH                            0x00680214 /* RW-4R */
#define NV_PVIDEO_BUFF0_PITCH_LENGTH                           13:4 /* RW-UF */
#define NV_PVIDEO_BUFF1_PITCH                            0x00680218 /* RW-4R */
#define NV_PVIDEO_BUFF1_PITCH_LENGTH                           13:4 /* RW-UF */
#define NV_PVIDEO_BUFF0_OFFSET                           0x0068021c /* RW-4R */
#define NV_PVIDEO_BUFF0_OFFSET_X                                0:0 /* RW--F */
#define NV_PVIDEO_BUFF0_OFFSET_Y                                5:4 /* RW--F */
#define NV_PVIDEO_BUFF0_OFFSET_Y_OFF                     0x00000000 /* RW--V */
#define NV_PVIDEO_BUFF0_OFFSET_Y_QUARTER                 0x00000001 /* RW--V */
#define NV_PVIDEO_BUFF0_OFFSET_Y_HALF                    0x00000002 /* RW--V */
#define NV_PVIDEO_BUFF1_OFFSET                           0x00680220 /* RW-4R */
#define NV_PVIDEO_BUFF1_OFFSET_X                                0:0 /* RW--F */
#define NV_PVIDEO_BUFF1_OFFSET_Y                                5:4 /* RW--F */
#define NV_PVIDEO_BUFF1_OFFSET_Y_OFF                     0x00000000 /* RW--V */
#define NV_PVIDEO_BUFF1_OFFSET_Y_QUARTER                 0x00000001 /* RW--V */
#define NV_PVIDEO_BUFF1_OFFSET_Y_HALF                    0x00000002 /* RW--V */
#define NV_PVIDEO_OE_STATE                               0x00680224 /* RW-4R */
#define NV_PVIDEO_OE_STATE_BUFF0_INTR_NOTIFY                    0:0 /* RWXVF */
#define NV_PVIDEO_OE_STATE_BUFF1_INTR_NOTIFY                    4:4 /* RWXVF */
#define NV_PVIDEO_OE_STATE_BUFF0_ERROR                          8:8 /* RWXVF */
#define NV_PVIDEO_OE_STATE_BUFF1_ERROR                        12:12 /* RWXVF */
#define NV_PVIDEO_OE_STATE_BUFF0_IN_USE                       16:16 /* RWXVF */
#define NV_PVIDEO_OE_STATE_BUFF1_IN_USE                       20:20 /* RWXVF */
#define NV_PVIDEO_OE_STATE_CURRENT_BUFFER                     24:24 /* RWXVF */
#define NV_PVIDEO_OE_STATE_CURRENT_BUFFER_0              0x00000000 /* RW--V */
#define NV_PVIDEO_OE_STATE_CURRENT_BUFFER_1              0x00000001 /* RW--V */
#define NV_PVIDEO_SU_STATE                               0x00680228 /* RW-4R */
#define NV_PVIDEO_SU_STATE_BUFF0_IN_USE                       16:16 /* RWXVF */
#define NV_PVIDEO_SU_STATE_BUFF1_IN_USE                       20:20 /* RWXVF */
#define NV_PVIDEO_RM_STATE                               0x0068022c /* RW-4R */
#define NV_PVIDEO_RM_STATE_BUFF0_INTR_NOTIFY                    0:0 /* RWXVF */
#define NV_PVIDEO_RM_STATE_BUFF1_INTR_NOTIFY                    4:4 /* RWXVF */
#define NV_PVIDEO_WINDOW_START                           0x00680230 /* RW-4R */
#define NV_PVIDEO_WINDOW_START_X                               10:0 /* RWXUF */
#define NV_PVIDEO_WINDOW_START_Y                              26:16 /* RWXUF */
#define NV_PVIDEO_WINDOW_SIZE                            0x00680234 /* RW-4R */
#define NV_PVIDEO_WINDOW_SIZE_X                                10:0 /* RWXUF */
#define NV_PVIDEO_WINDOW_SIZE_Y                               26:16 /* RWXUF */
#define NV_PVIDEO_FIFO_THRES                             0x00680238 /* RW-4R */
#define NV_PVIDEO_FIFO_THRES_SIZE                               7:3 /* RW--F */
#define NV_PVIDEO_FIFO_BURST                             0x0068023c /* RW-4R */
#define NV_PVIDEO_FIFO_BURST_LENGTH                             1:0 /* RW--F */
#define NV_PVIDEO_FIFO_BURST_LENGTH_32                   0x00000001 /* RW--V */
#define NV_PVIDEO_FIFO_BURST_LENGTH_64                   0x00000002 /* RW--V */
#define NV_PVIDEO_FIFO_BURST_LENGTH_128                  0x00000003 /* RW--V */
#define NV_PVIDEO_KEY                                    0x00680240 /* RW-4R */
#define NV_PVIDEO_KEY_INDEX                                     7:0 /* RW-VF */
#define NV_PVIDEO_KEY_565                                      15:0 /* RW-VF */
#define NV_PVIDEO_KEY_555                                      14:0 /* RW-VF */
#define NV_PVIDEO_KEY_888                                      23:0 /* RW-VF */
#define NV_PVIDEO_KEY_PACK                                    31:24 /* RW-VF */
#define NV_PVIDEO_OVERLAY                                0x00680244 /* RWI4R */
#define NV_PVIDEO_OVERLAY_VIDEO                                 0:0 /* RWI-F */
#define NV_PVIDEO_OVERLAY_VIDEO_OFF                      0x00000000 /* RWI-V */
#define NV_PVIDEO_OVERLAY_VIDEO_ON                       0x00000001 /* RW--V */
#define NV_PVIDEO_OVERLAY_KEY                                   4:4 /* RW--F */
#define NV_PVIDEO_OVERLAY_KEY_OFF                        0x00000000 /* RW--V */
#define NV_PVIDEO_OVERLAY_KEY_ON                         0x00000001 /* RW--V */
#define NV_PVIDEO_OVERLAY_FORMAT                                8:8 /* RW--F */
#define NV_PVIDEO_OVERLAY_FORMAT_CCIR                    0x00000000 /* RW--V */
#define NV_PVIDEO_OVERLAY_FORMAT_YUY2                    0x00000001 /* RW--V */
#define NV_PVIDEO_RED_CSC                                0x00680280 /* RW-4R */
#define NV_PVIDEO_RED_CSC_OFFSET                                7:0 /* RWX-F */
#define NV_PVIDEO_GREEN_CSC                              0x00680284 /* RW-4R */
#define NV_PVIDEO_GREEN_CSC_OFFSET                              7:0 /* RWX-F */
#define NV_PVIDEO_BLUE_CSC                               0x00680288 /* RW-4R */
#define NV_PVIDEO_BLUE_CSC_OFFSET                               7:0 /* RWX-F */
#define NV_PVIDEO_CSC_ADJUST                             0x0068028c /* RW-4R */
#define NV_PVIDEO_CSC_ADJUST_B_FLAG                             0:0 /* RW--F */
#define NV_PVIDEO_CSC_ADJUST_B_FLAG_OFF                  0x00000000 /* RW--V */
#define NV_PVIDEO_CSC_ADJUST_B_FLAG_ON                   0x00000001 /* RW--V */
#define NV_PVIDEO_CSC_ADJUST_G_FLAG                             4:4 /* RW--F */
#define NV_PVIDEO_CSC_ADJUST_G_FLAG_OFF                  0x00000000 /* RW--V */
#define NV_PVIDEO_CSC_ADJUST_G_FLAG_ON                   0x00000001 /* RW--V */
#define NV_PVIDEO_CSC_ADJUST_R_FLAG                             8:8 /* RW--F */
#define NV_PVIDEO_CSC_ADJUST_R_FLAG_OFF                  0x00000000 /* RW--V */
#define NV_PVIDEO_CSC_ADJUST_R_FLAG_ON                   0x00000001 /* RW--V */
#define NV_PVIDEO_CSC_ADJUST_L_FLAG                           12:12 /* RW--F */
#define NV_PVIDEO_CSC_ADJUST_L_FLAG_OFF                  0x00000000 /* RW--V */
#define NV_PVIDEO_CSC_ADJUST_L_FLAG_ON                   0x00000001 /* RW--V */
#define NV_PVIDEO_CSC_ADJUST_CHROMA                           16:16 /* RW--F */
#define NV_PVIDEO_CSC_ADJUST_CHROMA_OFF                  0x00000000 /* RW--V */
#define NV_PVIDEO_CSC_ADJUST_CHROMA_ON                   0x00000001 /* RW--V */
/* dev_media.ref */
#define NV_PME                                0x00200FFF:0x00200000 /* RW--D */
#define NV_PME_DEBUG_0                                   0x00200080 /* RWI4R */
#define NV_PME_DEBUG_0_DET_FIELD_SWITCH                         0:0 /* RWI-F */
#define NV_PME_DEBUG_0_DET_FIELD_SWITCH_DISABLED         0x00000000 /* RWI-V */
#define NV_PME_DEBUG_0_DET_FIELD_SWITCH_ENABLED          0x00000001 /* RW--V */
#define NV_PME_DEBUG_0_CAPTURE_00_FF                            4:4 /* RWI-F */
#define NV_PME_DEBUG_0_CAPTURE_00_FF_DISABLED            0x00000000 /* RWI-V */
#define NV_PME_DEBUG_0_CAPTURE_00_FF_ENABLED             0x00000001 /* RW--V */
#define NV_PME_DEBUG_1                                   0x00200084 /* RWI4R */
#define NV_PME_DEBUG_1_SEL                                      1:0 /* RWI-F */
#define NV_PME_DEBUG_1_SEL_VIPCLK                        0x00000000 /* RWI-V */
#define NV_PME_DEBUG_1_SEL_MCLK                          0x00000001 /* RW--V */
#define NV_PME_DEBUG_1_SEL_GLOB                          0x00000002 /* RW--V */
#define NV_PME_DEBUG_1_VIPCLK_SEL                               6:4 /* RWI-F */
#define NV_PME_DEBUG_1_VIPCLK_SEL_DEFAULT                0x00000000 /* RWI-V */
#define NV_PME_DEBUG_1_MCLK_SEL                                 9:8 /* RWI-F */
#define NV_PME_DEBUG_1_MCLK_SEL_DEFAULT                  0x00000000 /* RWI-V */
#define NV_PME_INTR_0                                    0x00200100 /* RWI4R */
#define NV_PME_INTR_0_IMAGE_NOTIFY                              0:0 /* RWIVF */
#define NV_PME_INTR_0_IMAGE_NOTIFY_NOT_PENDING           0x00000000 /* R-I-V */
#define NV_PME_INTR_0_IMAGE_NOTIFY_PENDING               0x00000001 /* R---V */
#define NV_PME_INTR_0_IMAGE_NOTIFY_RESET                 0x00000001 /* -W--V */
#define NV_PME_INTR_0_VBI_NOTIFY                                4:4 /* RWIVF */
#define NV_PME_INTR_0_VBI_NOTIFY_NOT_PENDING             0x00000000 /* R-I-V */
#define NV_PME_INTR_0_VBI_NOTIFY_PENDING                 0x00000001 /* R---V */
#define NV_PME_INTR_0_VBI_NOTIFY_RESET                   0x00000001 /* -W--V */
#define NV_PME_INTR_0_VID_NOTIFY                                8:8 /* RWIVF */
#define NV_PME_INTR_0_VID_NOTIFY_NOT_PENDING             0x00000000 /* R-I-V */
#define NV_PME_INTR_0_VID_NOTIFY_PENDING                 0x00000001 /* R---V */
#define NV_PME_INTR_0_VID_NOTIFY_RESET                   0x00000001 /* -W--V */
#define NV_PME_INTR_0_AUD_NOTIFY                              12:12 /* RWIVF */
#define NV_PME_INTR_0_AUD_NOTIFY_NOT_PENDING             0x00000000 /* R-I-V */
#define NV_PME_INTR_0_AUD_NOTIFY_PENDING                 0x00000001 /* R---V */
#define NV_PME_INTR_0_AUD_NOTIFY_RESET                   0x00000001 /* -W--V */
#define NV_PME_INTR_0_VMI                                     16:16 /* RWIVF */
#define NV_PME_INTR_0_VMI_NOT_PENDING                    0x00000000 /* R-I-V */
#define NV_PME_INTR_0_VMI_PENDING                        0x00000001 /* R---V */
#define NV_PME_INTR_0_VMI_RESET                          0x00000001 /* -W--V */
#define NV_PME_INTR_EN_0                                 0x00200140 /* RWI4R */
#define NV_PME_INTR_EN_0_IMAGE_NOTIFY                           0:0 /* RWIVF */
#define NV_PME_INTR_EN_0_IMAGE_NOTIFY_DISABLED           0x00000000 /* RWI-V */
#define NV_PME_INTR_EN_0_IMAGE_NOTIFY_ENABLED            0x00000001 /* RW--V */
#define NV_PME_INTR_EN_0_VBI_NOTIFY                             4:4 /* RWIVF */
#define NV_PME_INTR_EN_0_VBI_NOTIFY_DISABLED             0x00000000 /* RWI-V */
#define NV_PME_INTR_EN_0_VBI_NOTIFY_ENABLED              0x00000001 /* RW--V */
#define NV_PME_INTR_EN_0_VID_NOTIFY                             8:8 /* RWIVF */
#define NV_PME_INTR_EN_0_VID_NOTIFY_DISABLED             0x00000000 /* RWI-V */
#define NV_PME_INTR_EN_0_VID_NOTIFY_ENABLED              0x00000001 /* RW--V */
#define NV_PME_INTR_EN_0_AUD_NOTIFY                           12:12 /* RWIVF */
#define NV_PME_INTR_EN_0_AUD_NOTIFY_DISABLED             0x00000000 /* RWI-V */
#define NV_PME_INTR_EN_0_AUD_NOTIFY_ENABLED              0x00000001 /* RW--V */
#define NV_PME_INTR_EN_0_VMI                                  16:16 /* RWIVF */
#define NV_PME_INTR_EN_0_VMI_DISABLED                    0x00000000 /* RWI-V */
#define NV_PME_INTR_EN_0_VMI_ENABLED                     0x00000001 /* RW--V */
#define NV_PME_CONFIG_0                                  0x00200200 /* RWI4R */
#define NV_PME_CONFIG_0_BUS_MODE                                1:0 /* RWIVF */
#define NV_PME_CONFIG_0_BUS_MODE_DISABLED                0x00000000 /* RWI-V */
#define NV_PME_CONFIG_0_BUS_MODE_VMI                     0x00000001 /* RW--V */
#define NV_PME_CONFIG_0_BUS_MODE_CCIR656                 0x00000002 /* RW--V */
#define NV_PME_CONFIG_0_IMAGE                                   4:4 /* RWIVF */
#define NV_PME_CONFIG_0_IMAGE_DISABLED                   0x00000000 /* RWI-V */
#define NV_PME_CONFIG_0_IMAGE_ENABLED                    0x00000001 /* RW--V */
#define NV_PME_CONFIG_0_VBI_MODE                                9:8 /* RWIVF */
#define NV_PME_CONFIG_0_VBI_MODE_DISABLED                0x00000000 /* RWI-V */
#define NV_PME_CONFIG_0_VBI_MODE_1                       0x00000001 /* RW--V */
#define NV_PME_CONFIG_0_VBI_MODE_2                       0x00000002 /* RW--V */
#define NV_PME_CONFIG_0_VID_CD                                12:12 /* RWIVF */
#define NV_PME_CONFIG_0_VID_CD_DISABLED                  0x00000000 /* RWI-V */
#define NV_PME_CONFIG_0_VID_CD_ENABLED                   0x00000001 /* RW--V */
#define NV_PME_CONFIG_0_AUD_CD                                16:16 /* RWIVF */
#define NV_PME_CONFIG_0_AUD_CD_DISABLED                  0x00000000 /* RWI-V */
#define NV_PME_CONFIG_0_AUD_CD_ENABLED                   0x00000001 /* RW--V */
#define NV_PME_CONFIG_1                                  0x00200204 /* RWI4R */
#define NV_PME_CONFIG_1_BUFFS                                   0:0 /* RWIVF */
#define NV_PME_CONFIG_1_BUFFS_PNVM                       0x00000000 /* RWI-V */
#define NV_PME_CONFIG_1_BUFFS_SYS                        0x00000001 /* RW--V */
#define NV_PME_CONFIG_1_HOST                                    4:4 /* RWIVF */
#define NV_PME_CONFIG_1_HOST_PCI                         0x00000000 /* RWI-V */
#define NV_PME_CONFIG_1_HOST_AGP                         0x00000001 /* RW--V */
#define NV_PME_NULL_DATA                                 0x00200208 /* RWI4R */
#define NV_PME_NULL_DATA_COMPARE                                0:0 /* RWIVF */
#define NV_PME_NULL_DATA_COMPARE_DISABLED                0x00000000 /* RWI-V */
#define NV_PME_NULL_DATA_COMPARE_ENABLED                 0x00000001 /* RW--V */
#define NV_PME_NULL_DATA_LINE_DETECT                            4:4 /* RWIVF */
#define NV_PME_NULL_DATA_LINE_DETECT_DISABLED            0x00000000 /* RWI-V */
#define NV_PME_NULL_DATA_LINE_DETECT_ENABLED             0x00000001 /* RW--V */
#define NV_PME_NULL_DATA_BYTE                                 31:24 /* RWXVF */
#define NV_PME_VID_BUFF0_START_SYS                       0x00200300 /* RWI4R */ 
#define NV_PME_VID_BUFF0_START_SYS_ADDRESS                     31:4 /* RWXUF */
#define NV_PME_VID_BUFF1_START_SYS                       0x00200304 /* RWI4R */ 
#define NV_PME_VID_BUFF1_START_SYS_ADDRESS                     31:4 /* RWXUF */
#define NV_PME_VID_BUFF0_START_PNVM                      0x00200308 /* RWI4R */ 
#define NV_PME_VID_BUFF0_START_PNVM_ADDRESS                    23:4 /* RWXUF */
#define NV_PME_VID_BUFF1_START_PNVM                      0x0020030c /* RWI4R */ 
#define NV_PME_VID_BUFF1_START_PNVM_ADDRESS                    23:4 /* RWXUF */
#define NV_PME_VID_BUFF0_LENGTH                          0x00200310 /* RWI4R */ 
#define NV_PME_VID_BUFF0_LENGTH_BITS                          15:12 /* RWXUF */
#define NV_PME_VID_BUFF1_LENGTH                          0x00200314 /* RWI4R */ 
#define NV_PME_VID_BUFF1_LENGTH_BITS                          15:12 /* RWXUF */
#define NV_PME_VID_ME_STATE                              0x00200318 /* RW-4R */
#define NV_PME_VID_ME_STATE_BUFF0_INTR_NOTIFY                   0:0 /* RWIVF */
#define NV_PME_VID_ME_STATE_BUFF1_INTR_NOTIFY                   4:4 /* RWXVF */
#define NV_PME_VID_ME_STATE_BUFF0_INTR_CHAINGAP                 8:8 /* RWXVF */
#define NV_PME_VID_ME_STATE_BUFF1_INTR_CHAINGAP               12:12 /* RWXVF */
#define NV_PME_VID_ME_STATE_BUFF0_IN_USE                      16:16 /* RWXVF */
#define NV_PME_VID_ME_STATE_BUFF1_IN_USE                      20:20 /* RWXVF */
#define NV_PME_VID_ME_STATE_CURRENT_BUFFER                    24:24 /* RWXVF */
#define NV_PME_VID_ME_STATE_CURRENT_BUFFER_0             0x00000000 /* RW--V */
#define NV_PME_VID_ME_STATE_CURRENT_BUFFER_1             0x00000001 /* RW--V */
#define NV_PME_VID_SU_STATE                              0x0020031c /* RW-4R */
#define NV_PME_VID_SU_STATE_BUFF0_IN_USE                      16:16 /* RWXVF */
#define NV_PME_VID_SU_STATE_BUFF1_IN_USE                      20:20 /* RWXVF */
#define NV_PME_VID_RM_STATE                              0x00200320 /* RW-4R */
#define NV_PME_VID_RM_STATE_BUFF0_INTR_NOTIFY                   0:0 /* RWXVF */
#define NV_PME_VID_RM_STATE_BUFF1_INTR_NOTIFY                   4:4 /* RWXVF */
#define NV_PME_VID_RM_STATE_BUFF0_INTR_CHAINGAP                 8:8 /* RWXVF */
#define NV_PME_VID_RM_STATE_BUFF1_INTR_CHAINGAP               12:12 /* RWXVF */
#define NV_PME_VID_CURRENT                               0x00200324 /* RWI4R */ 
#define NV_PME_VID_CURRENT_POS                                 15:2 /* RWXUF */
#define NV_PME_AUD_BUFF0_START_SYS                       0x00200340 /* RWI4R */ 
#define NV_PME_AUD_BUFF0_START_SYS_ADDRESS                     31:4 /* RWXUF */
#define NV_PME_AUD_BUFF1_START_SYS                       0x00200344 /* RWI4R */ 
#define NV_PME_AUD_BUFF1_START_SYS_ADDRESS                     31:4 /* RWXUF */
#define NV_PME_AUD_BUFF0_START_PNVM                      0x00200348 /* RWI4R */ 
#define NV_PME_AUD_BUFF0_START_PNVM_ADDRESS                    23:4 /* RWXUF */
#define NV_PME_AUD_BUFF1_START_PNVM                      0x0020034c /* RWI4R */ 
#define NV_PME_AUD_BUFF1_START_PNVM_ADDRESS                    23:4 /* RWXUF */
#define NV_PME_AUD_BUFF0_LENGTH                          0x00200350 /* RWI4R */ 
#define NV_PME_AUD_BUFF0_LENGTH_BITS                          12:10 /* RWXUF */
#define NV_PME_AUD_BUFF1_LENGTH                          0x00200354 /* RWI4R */ 
#define NV_PME_AUD_BUFF1_LENGTH_BITS                          12:10 /* RWXUF */
#define NV_PME_AUD_ME_STATE                              0x00200358 /* RW-4R */
#define NV_PME_AUD_ME_STATE_BUFF0_INTR_NOTIFY                   0:0 /* RWIVF */
#define NV_PME_AUD_ME_STATE_BUFF1_INTR_NOTIFY                   4:4 /* RWXVF */
#define NV_PME_AUD_ME_STATE_BUFF0_INTR_CHAINGAP                 8:8 /* RWXVF */
#define NV_PME_AUD_ME_STATE_BUFF1_INTR_CHAINGAP               12:12 /* RWXVF */
#define NV_PME_AUD_ME_STATE_BUFF0_IN_USE                      16:16 /* RWXVF */
#define NV_PME_AUD_ME_STATE_BUFF1_IN_USE                      20:20 /* RWXVF */
#define NV_PME_AUD_ME_STATE_CURRENT_BUFFER                    24:24 /* RWXVF */
#define NV_PME_AUD_ME_STATE_CURRENT_BUFFER_0             0x00000000 /* RW--V */
#define NV_PME_AUD_ME_STATE_CURRENT_BUFFER_1             0x00000001 /* RW--V */
#define NV_PME_AUD_SU_STATE                              0x0020035c /* RW-4R */
#define NV_PME_AUD_SU_STATE_BUFF0_IN_USE                      16:16 /* RWXVF */
#define NV_PME_AUD_SU_STATE_BUFF1_IN_USE                      20:20 /* RWXVF */
#define NV_PME_AUD_RM_STATE                              0x00200360 /* RW-4R */
#define NV_PME_AUD_RM_STATE_BUFF0_INTR_NOTIFY                   0:0 /* RWXVF */
#define NV_PME_AUD_RM_STATE_BUFF1_INTR_NOTIFY                   4:4 /* RWXVF */
#define NV_PME_AUD_RM_STATE_BUFF0_INTR_CHAINGAP                 8:8 /* RWXVF */
#define NV_PME_AUD_RM_STATE_BUFF1_INTR_CHAINGAP               12:12 /* RWXVF */
#define NV_PME_AUD_CURRENT                               0x00200364 /* RWI4R */ 
#define NV_PME_AUD_CURRENT_POS                                 12:2 /* RWXUF */
#define NV_PME_VBI_BUFF0_START                           0x00200380 /* RWI4R */ 
#define NV_PME_VBI_BUFF0_START_ADDRESS                         23:4 /* RWXUF */
#define NV_PME_VBI_BUFF1_START                           0x00200384 /* RWI4R */ 
#define NV_PME_VBI_BUFF1_START_ADDRESS                         23:4 /* RWXUF */
#define NV_PME_VBI_BUFF0_PITCH                           0x00200388 /* RWI4R */ 
#define NV_PME_VBI_BUFF0_PITCH_VALUE                           13:4 /* RWXUF */
#define NV_PME_VBI_BUFF1_PITCH                           0x0020038c /* RWI4R */ 
#define NV_PME_VBI_BUFF1_PITCH_VALUE                           13:4 /* RWXUF */
#define NV_PME_VBI_BUFF0_LENGTH                          0x00200390 /* RWI4R */ 
#define NV_PME_VBI_BUFF0_LENGTH_BITS                           19:4 /* RWXUF */
#define NV_PME_VBI_BUFF1_LENGTH                          0x00200394 /* RWI4R */ 
#define NV_PME_VBI_BUFF1_LENGTH_BITS                           19:4 /* RWXUF */
#define NV_PME_VBI_ME_STATE                              0x00200398 /* RW-4R */
#define NV_PME_VBI_ME_STATE_BUFF0_INTR_NOTIFY                   0:0 /* RWXVF */
#define NV_PME_VBI_ME_STATE_BUFF1_INTR_NOTIFY                   4:4 /* RWXVF */
#define NV_PME_VBI_ME_STATE_BUFF0_ERROR_CODE                   10:8 /* RWXVF */
#define NV_PME_VBI_ME_STATE_BUFF1_ERROR_CODE                  14:12 /* RWXVF */
#define NV_PME_VBI_ME_STATE_BUFF0_IN_USE                      16:16 /* RWXVF */
#define NV_PME_VBI_ME_STATE_BUFF1_IN_USE                      20:20 /* RWXVF */
#define NV_PME_VBI_ME_STATE_CURRENT_BUFFER                    24:24 /* RWXVF */
#define NV_PME_VBI_ME_STATE_CURRENT_BUFFER_0             0x00000000 /* RW--V */
#define NV_PME_VBI_ME_STATE_CURRENT_BUFFER_1             0x00000001 /* RW--V */
#define NV_PME_VBI_SU_STATE                              0x0020039c /* RW-4R */
#define NV_PME_VBI_SU_STATE_BUFF0_FIELD                         8:8 /* RWXVF */
#define NV_PME_VBI_SU_STATE_BUFF1_FIELD                       12:12 /* RWXVF */
#define NV_PME_VBI_SU_STATE_BUFF0_IN_USE                      16:16 /* RWXVF */
#define NV_PME_VBI_SU_STATE_BUFF1_IN_USE                      20:20 /* RWXVF */
#define NV_PME_VBI_RM_STATE                              0x002003a0 /* RW-4R */
#define NV_PME_VBI_RM_STATE_BUFF0_INTR_NOTIFY                   0:0 /* RWXVF */
#define NV_PME_VBI_RM_STATE_BUFF1_INTR_NOTIFY                   4:4 /* RWXVF */
#define NV_PME_VBI                                       0x002003a4 /* RWI4R */
#define NV_PME_VBI_START_LINE                                   4:0 /* RWX-F */
#define NV_PME_VBI_NUM_LINES                                  20:16 /* RWX-F */
#define NV_PME_IMAGE_BUFF0_START                         0x00200400 /* RWI4R */ 
#define NV_PME_IMAGE_BUFF0_START_ADDRESS                       23:4 /* RWXUF */
#define NV_PME_IMAGE_BUFF1_START                         0x00200404 /* RWI4R */ 
#define NV_PME_IMAGE_BUFF1_START_ADDRESS                       23:4 /* RWXUF */
#define NV_PME_IMAGE_BUFF0_PITCH                         0x00200408 /* RWI4R */ 
#define NV_PME_IMAGE_BUFF0_PITCH_VALUE                         13:4 /* RWXUF */
#define NV_PME_IMAGE_BUFF1_PITCH                         0x0020040c /* RWI4R */ 
#define NV_PME_IMAGE_BUFF1_PITCH_VALUE                         13:4 /* RWXUF */
#define NV_PME_IMAGE_BUFF0_LENGTH                        0x00200410 /* RWI4R */ 
#define NV_PME_IMAGE_BUFF0_LENGTH_BITS                         19:4 /* RWXUF */
#define NV_PME_IMAGE_BUFF1_LENGTH                        0x00200414 /* RWI4R */ 
#define NV_PME_IMAGE_BUFF1_LENGTH_BITS                         19:4 /* RWXUF */
#define NV_PME_IMAGE_ME_STATE                            0x00200418 /* RW-4R */
#define NV_PME_IMAGE_ME_STATE_BUFF0_INTR_NOTIFY                 0:0 /* RWXVF */
#define NV_PME_IMAGE_ME_STATE_BUFF1_INTR_NOTIFY                 4:4 /* RWXVF */
#define NV_PME_IMAGE_ME_STATE_BUFF0_ERROR_CODE                 10:8 /* RWXVF */
#define NV_PME_IMAGE_ME_STATE_BUFF1_ERROR_CODE                14:12 /* RWXVF */
#define NV_PME_IMAGE_ME_STATE_BUFF0_IN_USE                    16:16 /* RWXVF */
#define NV_PME_IMAGE_ME_STATE_BUFF1_IN_USE                    20:20 /* RWXVF */
#define NV_PME_IMAGE_ME_STATE_CURRENT_BUFFER                  24:24 /* RWXVF */
#define NV_PME_IMAGE_ME_STATE_CURRENT_BUFFER_0           0x00000000 /* RW--V */
#define NV_PME_IMAGE_ME_STATE_CURRENT_BUFFER_1           0x00000001 /* RW--V */
#define NV_PME_IMAGE_SU_STATE                            0x0020041c /* RW-4R */
#define NV_PME_IMAGE_SU_STATE_BUFF0_FIELD                       8:8 /* RWXVF */
#define NV_PME_IMAGE_SU_STATE_BUFF1_FIELD                     12:12 /* RWXVF */
#define NV_PME_IMAGE_SU_STATE_BUFF0_IN_USE                    16:16 /* RWXVF */
#define NV_PME_IMAGE_SU_STATE_BUFF1_IN_USE                    20:20 /* RWXVF */
#define NV_PME_IMAGE_RM_STATE                            0x00200420 /* RW-4R */
#define NV_PME_IMAGE_RM_STATE_BUFF0_INTR_NOTIFY                 0:0 /* RWXVF */
#define NV_PME_IMAGE_RM_STATE_BUFF1_INTR_NOTIFY                 4:4 /* RWXVF */
#define NV_PME_IMAGE_BUFF0_SCALE_INCR                    0x00200424 /* RW-4R */
#define NV_PME_IMAGE_BUFF0_SCALE_INCR_Y                       26:16 /* RWXVF */
#define NV_PME_IMAGE_BUFF0_SCALE_INCR_X                        10:0 /* RWXVF */
#define NV_PME_IMAGE_BUFF1_SCALE_INCR                    0x00200428 /* RW-4R */
#define NV_PME_IMAGE_BUFF1_SCALE_INCR_Y                       26:16 /* RWXVF */
#define NV_PME_IMAGE_BUFF1_SCALE_INCR_X                        10:0 /* RWXVF */
#define NV_PME_IMAGE_Y_CROP                              0x0020042c /* RW-4R */
#define NV_PME_IMAGE_Y_CROP_STARTLINE                           8:0 /* RWXVF */
#define NV_PME_FIFO_LINE_START                           0x00200480 /* RW-4R */
#define NV_PME_FIFO_LINE_START_ADDRESS                         20:4 /* RWXVF */
#define NV_PME_FIFO_CURRENT                              0x00200484 /* RW-4R */
#define NV_PME_FIFO_CURRENT_ADDRESS                            20:2 /* RWXVF */
#define NV_PME_VMI_POLL                                  0x00200488 /* R--4R */
#define NV_PME_VMI_POLL_UNCD                                    0:0 /* R-IVF */
#define NV_PME_VMI_POLL_UNCD_NOT_PENDING                 0x00000000 /* R-I-V */
#define NV_PME_VMI_POLL_UNCD_PENDING                     0x00000001 /* R---V */
#define NV_PME_VMI_POLL_VIDCD                                   1:1 /* R-IVF */
#define NV_PME_VMI_POLL_VIDCD_NOT_PENDING                0x00000000 /* R-I-V */
#define NV_PME_VMI_POLL_VIDCD_PENDING                    0x00000001 /* R---V */
#define NV_PME_VMI_POLL_AUDCD                                   2:2 /* R-IVF */
#define NV_PME_VMI_POLL_AUDCD_NOT_PENDING                0x00000000 /* R-I-V */
#define NV_PME_VMI_POLL_AUDCD_PENDING                    0x00000001 /* R---V */
#define NV_PME_VMI_POLL_INT                                     3:3 /* R-IVF */
#define NV_PME_VMI_POLL_INT_NOT_PENDING                  0x00000000 /* R-I-V */
#define NV_PME_VMI_POLL_INT_PENDING                      0x00000001 /* R---V */
#define NV_PME_VMI_POLL_CPURDREC                                4:4 /* R-IVF */
#define NV_PME_VMI_POLL_CPURDREC_NOT_PENDING             0x00000000 /* R-I-V */
#define NV_PME_VMI_POLL_CPURDREC_PENDING                 0x00000001 /* R---V */
#define NV_PME_EXTERNAL(i)                       (0x00200600+(i)*4) /* RW-4A */
#define NV_PME_EXTERNAL_SIZE_1                                  256 /*       */  
#define NV_PME_EXTERNAL_DATA                                    7:0 /* RWXVF */
/* dev_ram.ref */
#define NV_PDFB                               0x01FFFFFF:0x01000000 /* RW--D */
#define NV_PDFB_DATA032(i)                       (0x01000000+(i)*4) /* RW-4A */
#define NV_PDFB_DATA032__SIZE_1                              524288 /*       */
#define NV_PDFB_DATA032_VALUE                                  31:0 /* RWXVF */
#define NV_PDFB_DATA024(i)           (0x01000000+((i)/2)*4+((i)%2)) /* RW-3A */
#define NV_PDFB_DATA024__SIZE_1                             1048576 /*       */
#define NV_PDFB_DATA024_VALUE                                  23:0 /* RWXVF */
#define NV_PDFB_DATA016(i)           (0x01000000+((i)/3)*4+((i)%3)) /* RW-2A */
#define NV_PDFB_DATA016__SIZE_1                             1572864 /*       */
#define NV_PDFB_DATA016_VALUE                                  15:0 /* RWXVF */
#define NV_PDFB_DATA008(i)                         (0x01000000+(i)) /* RW-1A */
#define NV_PDFB_DATA008__SIZE_1                             2097152 /*       */
#define NV_PDFB_DATA008_VALUE                                   7:0 /* RWXVF */
/* dev_ext_devices.ref */
#define NV_PDAC                               0x00680FFF:0x00680000 /* RW--D */
#define NV_PDAC_DATA(i)                          (0x00680000+(i)*4) /* RW-4A */
#define NV_PDAC_DATA__SIZE_1                                     16 /*       */
#define NV_PDAC_DATA_VALUE                                      7:0 /* RW-VF */
/* dev_ext_devices.ref */
/* dev_ext_devices.ref */
/* dev_framebuffer.ref */
#define NV_PFB_BOOT_0                                    0x00100000 /* RW-4R */
#define NV_PFB_BOOT_0_RAM_AMOUNT                                1:0 /* RW-VF */
#define NV_PFB_BOOT_0_RAM_AMOUNT_2MB                     0x00000000 /* RW--V */
#define NV_PFB_BOOT_0_RAM_AMOUNT_4MB                     0x00000001 /* RW--V */
#define NV_PFB_BOOT_0_RAM_AMOUNT_8MB                     0x00000002 /* RW--V */
#define NV_PFB_BOOT_0_RAM_AMOUNT_16MB                    0x00000003 /* RW--V */
#define NV_PFB_BOOT_0_RAM_AMOUNT_32MB                    0x00000000 /* RW--V */
#define NV_PFB_BOOT_0_RAM_WIDTH_128                             2:2 /* RW-VF */
#define NV_PFB_BOOT_0_RAM_WIDTH_128_OFF                  0x00000000 /* RW--V */
#define NV_PFB_BOOT_0_RAM_WIDTH_128_ON                   0x00000001 /* RW--V */
#define NV_PFB_BOOT_0_RAM_TYPE                                  5:3 /* RW-VF */
#define NV_PFB_BOOT_0_RAM_TYPE_256K                      0x00000000 /* RW--V */
#define NV_PFB_BOOT_0_RAM_TYPE_512K_2BANK                0x00000001 /* RW--V */
#define NV_PFB_BOOT_0_RAM_TYPE_512K_4BANK                0x00000002 /* RW--V */
#define NV_PFB_BOOT_0_RAM_TYPE_1024K_2BANK               0x00000003 /* RW--V */
#define NV_PFB_BOOT_0_RAM_TYPE_SGRAM_8MBIT               0x00000000 /* R---V */
#define NV_PFB_BOOT_0_RAM_TYPE_SGRAM_16MBIT              0x00000001 /* R---V */
#define NV_PFB_BOOT_0_RAM_TYPE_SGRAM_16MBIT_4BANK        0x00000002 /* R---V */
#define NV_PFB_BOOT_0_RAM_TYPE_SDRAM_16MBIT              0x00000003 /* R---V */
#define NV_PFB_BOOT_0_RAM_TYPE_SDRAM_64MBIT              0x00000004 /* R---V */
#define NV_PFB_BOOT_0_RAM_TYPE_SDRAM_64MBITX16           0x00000005 /* R---V */
#define NV_PFB_BOOT_0_UMA                                       8:8 /* RW-VF */
#define NV_PFB_BOOT_0_UMA_DISABLE                        0x00000000 /* RWI-V */
#define NV_PFB_BOOT_0_UMA_ENABLE                         0x00000001 /* RW--V */
#define NV_PFB_BOOT_0_UMA_SIZE                                15:12 /* RW-VF */
#define NV_PFB_BOOT_0_UMA_SIZE_DEFAULT                   0x00000007 /* RWI-V */
#define NV_PFB_BOOT_0_UMA_SIZE_2M                        0x00000000 /* RW--V */
#define NV_PFB_BOOT_0_UMA_SIZE_4M                        0x00000001 /* RW--V */
#define NV_PFB_BOOT_0_UMA_SIZE_6M                        0x00000002 /* RW--V */
#define NV_PFB_BOOT_0_UMA_SIZE_8M                        0x00000003 /* RW--V */
#define NV_PFB_BOOT_0_UMA_SIZE_10M                       0x00000004 /* RW--V */
#define NV_PFB_BOOT_0_UMA_SIZE_12M                       0x00000005 /* RW--V */
#define NV_PFB_BOOT_0_UMA_SIZE_14M                       0x00000006 /* RW--V */
#define NV_PFB_BOOT_0_UMA_SIZE_16M                       0x00000007 /* RW--V */
#define NV_PFB_BOOT_0_UMA_SIZE_18M                       0x00000008 /* RW--V */
#define NV_PFB_BOOT_0_UMA_SIZE_20M                       0x00000009 /* RW--V */
#define NV_PFB_BOOT_0_UMA_SIZE_22M                       0x0000000a /* RW--V */
#define NV_PFB_BOOT_0_UMA_SIZE_24M                       0x0000000b /* RW--V */
#define NV_PFB_BOOT_0_UMA_SIZE_26M                       0x0000000c /* RW--V */
#define NV_PFB_BOOT_0_UMA_SIZE_28M                       0x0000000d /* RW--V */
#define NV_PFB_BOOT_0_UMA_SIZE_30M                       0x0000000e /* RW--V */
#define NV_PFB_BOOT_0_UMA_SIZE_32M                       0x0000000f /* RW--V */
#define NV_PFB_DEBUG_0                                   0x00100080 /* RW-4R */
#define NV_PFB_DEBUG_0_PAGE_MODE                                0:0 /* RWIVF */
#define NV_PFB_DEBUG_0_PAGE_MODE_ENABLED                 0x00000000 /* RWI-V */
#define NV_PFB_DEBUG_0_PAGE_MODE_DISABLED                0x00000001 /* RW--V */
#define NV_PFB_DEBUG_0_REFRESH                                  4:4 /* RWIVF */
#define NV_PFB_DEBUG_0_REFRESH_ENABLED                   0x00000000 /* RWI-V */
#define NV_PFB_DEBUG_0_REFRESH_DISABLED                  0x00000001 /* RW--V */
#define NV_PFB_DEBUG_0_REFRESH_COUNTX64                        13:8 /* RWIVF */
#define NV_PFB_DEBUG_0_REFRESH_COUNTX64_DEFAULT          0x00000010 /* RWI-V */
#define NV_PFB_DEBUG_0_REFRESH_SLOW_CLK                       14:14 /* RWIVF */
#define NV_PFB_DEBUG_0_REFRESH_SLOW_CLK_DISABLED         0x00000000 /* RWI-V */
#define NV_PFB_DEBUG_0_REFRESH_SLOW_CLK_ENABLED          0x00000001 /* RW--V */
#define NV_PFB_DEBUG_0_CASOE                                  20:20 /* RWIVF */
#define NV_PFB_DEBUG_0_CASOE_ENABLED                     0x00000000 /* RWI-V */
#define NV_PFB_DEBUG_0_CASOE_DISABLED                    0x00000001 /* RW--V */
#define NV_PFB_DEBUG_0_CKE_INVERT                             28:28 /* RWIVF */
#define NV_PFB_DEBUG_0_CKE_INVERT_OFF                    0x00000000 /* RWI-V */
#define NV_PFB_DEBUG_0_CKE_INVERT_ON                     0x00000001 /* RW--V */
#define NV_PFB_DEBUG_0_REFINC                                 29:29 /* RWIVF */
#define NV_PFB_DEBUG_0_REFINC_DISABLED                   0x00000000 /* RW--V */
#define NV_PFB_DEBUG_0_REFINC_ENABLED                    0x00000001 /* RWI-V */
#define NV_PFB_DEBUG_0_SAVE_POWER                             30:30 /* RWIVF */
#define NV_PFB_DEBUG_0_SAVE_POWER_ON                     0x00000000 /* RWI-V */
#define NV_PFB_DEBUG_0_SAVE_POWER_OFF                    0x00000001 /* RW--V */
#define NV_PFB_GREEN_0                                   0x001000C0 /* RW-4R */
#define NV_PFB_GREEN_0_LEVEL                                    1:0 /* RWIVF */
#define NV_PFB_GREEN_0_LEVEL_VIDEO_ENABLED               0x00000000 /* RW--V */
#define NV_PFB_GREEN_0_LEVEL_VIDEO_DISABLED              0x00000001 /* RW--V */
#define NV_PFB_GREEN_0_LEVEL_TIMING_DISABLED             0x00000002 /* RW--V */
#define NV_PFB_GREEN_0_LEVEL_MEMORY_DISABLED             0x00000003 /* RWI-V */
#define NV_PFB_CONFIG_0                                  0x00100200 /* RW-4R */
#define NV_PFB_CONFIG_0_TYPE                                   14:0 /* RWIVF */
#define NV_PFB_CONFIG_0_TYPE_OLD1024_FIXED_8BPP          0x00000120 /* RW--V */
#define NV_PFB_CONFIG_0_TYPE_OLD1024_FIXED_16BPP         0x00000220 /* RW--V */
#define NV_PFB_CONFIG_0_TYPE_OLD1024_FIXED_32BPP         0x00000320 /* RW--V */
#define NV_PFB_CONFIG_0_TYPE_OLD1024_VAR_8BPP            0x00004120 /* RW--V */
#define NV_PFB_CONFIG_0_TYPE_OLD1024_VAR_16BPP           0x00004220 /* RW--V */
#define NV_PFB_CONFIG_0_TYPE_OLD1024_VAR_32BPP           0x00004320 /* RW--V */
#define NV_PFB_CONFIG_0_TYPE_TETRIS                      0x00002000 /* RW--V */
#define NV_PFB_CONFIG_0_TYPE_NOTILING                    0x00001114 /* RWI-V */
#define NV_PFB_CONFIG_0_TETRIS_MODE                           17:15 /* RWI-F */
#define NV_PFB_CONFIG_0_TETRIS_MODE_PASS                 0x00000000 /* RWI-V */
#define NV_PFB_CONFIG_0_TETRIS_MODE_1                    0x00000001 /* RW--V */
#define NV_PFB_CONFIG_0_TETRIS_MODE_2                    0x00000002 /* RW--V */
#define NV_PFB_CONFIG_0_TETRIS_MODE_3                    0x00000003 /* RW--V */
#define NV_PFB_CONFIG_0_TETRIS_MODE_4                    0x00000004 /* RW--V */
#define NV_PFB_CONFIG_0_TETRIS_MODE_5                    0x00000005 /* RW--V */
#define NV_PFB_CONFIG_0_TETRIS_MODE_6                    0x00000006 /* RW--V */
#define NV_PFB_CONFIG_0_TETRIS_MODE_7                    0x00000007 /* RW--V */
#define NV_PFB_CONFIG_0_TETRIS_SHIFT                          19:18 /* RWI-F */
#define NV_PFB_CONFIG_0_TETRIS_SHIFT_0                   0x00000000 /* RWI-V */
#define NV_PFB_CONFIG_0_TETRIS_SHIFT_1                   0x00000001 /* RW--V */
#define NV_PFB_CONFIG_0_TETRIS_SHIFT_2                   0x00000002 /* RW--V */
#define NV_PFB_CONFIG_0_BANK_SWAP                             22:20 /* RWI-F */
#define NV_PFB_CONFIG_0_BANK_SWAP_OFF                    0x00000000 /* RWI-V */
#define NV_PFB_CONFIG_0_BANK_SWAP_1M                     0x00000001 /* RW--V */
#define NV_PFB_CONFIG_0_BANK_SWAP_2M                     0x00000005 /* RW--V */
#define NV_PFB_CONFIG_0_BANK_SWAP_4M                     0x00000007 /* RW--V */
#define NV_PFB_CONFIG_0_UNUSED                                23:23 /* RW-VF */
#define NV_PFB_CONFIG_0_SCRAMBLE_EN                           29:29 /* RWIVF */
#define NV_PFB_CONFIG_0_SCRAMBLE_EN_INIT                 0x00000000 /* RW--V */
#define NV_PFB_CONFIG_0_SCRAMBLE_ACTIVE                  0x00000001 /* RW--V */
#define NV_PFB_CONFIG_0_PRAMIN_WR                             28:28 /* RWIVF */
#define NV_PFB_CONFIG_0_PRAMIN_WR_INIT                   0x00000000 /* RW--V */
#define NV_PFB_CONFIG_0_PRAMIN_WR_DISABLED               0x00000001 /* RW--V */
#define NV_PFB_CONFIG_0_PRAMIN_WR_MASK                        27:24 /* RWIVF */
#define NV_PFB_CONFIG_0_PRAMIN_WR_MASK_INIT              0x00000000 /* RWI-V */
#define NV_PFB_CONFIG_0_PRAMIN_WR_MASK_CLEAR             0x0000000f /* RWI-V */
#define NV_PFB_CONFIG_1                                  0x00100204 /* RW-4R */
#define NV_PFB_CONFIG_1_CAS_LATENCY                             2:0 /* RWIVF */
#define NV_PFB_CONFIG_1_CAS_LATENCY_3                    0x00000003 /* RWI-V */
#define NV_PFB_CONFIG_1_CAS_LATENCY_2                    0x00000002 /* RW--V */
#define NV_PFB_CONFIG_1_CAS_LATENCY_4                    0x00000004 /* RW--V */
#define NV_PFB_CONFIG_1_RAS_RAS                                 7:4 /* RWIUF */
#define NV_PFB_CONFIG_1_RAS_RAS_DEFAULT                  0x00000009 /* RWI-V */
#define NV_PFB_CONFIG_1_RAS_RAS_9CYCLES                  0x00000008 /* RW--V */
#define NV_PFB_CONFIG_1_RAS_RAS_8CYCLES                  0x00000007 /* RW--V */
#define NV_PFB_CONFIG_1_RAS_RAS_7CYCLES                  0x00000006 /* RW--V */
#define NV_PFB_CONFIG_1_RAS_PCHG                               10:8 /* RWIUF */
#define NV_PFB_CONFIG_1_RAS_PCHG_DEFAULT                 0x00000002 /* RWI-V */
#define NV_PFB_CONFIG_1_RAS_PCHG_2CYCLES                 0x00000001 /* RW--V */
#define NV_PFB_CONFIG_1_RAS_LOW                               14:12 /* RWIUF */
#define NV_PFB_CONFIG_1_RAS_LOW_DEFAULT                  0x00000006 /* RWI-V */
#define NV_PFB_CONFIG_1_RAS_LOW_7CYCLES                  0x00000007 /* RW--V */
#define NV_PFB_CONFIG_1_RAS_LOW_5CYCLES                  0x00000005 /* RW--V */
#define NV_PFB_CONFIG_1_RAS_LOW_4CYCLES                  0x00000004 /* RW--V */
#define NV_PFB_CONFIG_1_MRS_TO_RAS                            18:16 /* RWIUF */
#define NV_PFB_CONFIG_1_MRS_TO_RAS_DEFAULT               0x00000001 /* RWI-V */
#define NV_PFB_CONFIG_1_MRS_TO_RAS_2CYCLES               0x00000002 /* RW--V */
#define NV_PFB_CONFIG_1_MRS_TO_RAS_0CYCLES               0x00000000 /* RW--V */
#define NV_PFB_CONFIG_1_WRITE_TO_READ                         22:20 /* RWIUF */
#define NV_PFB_CONFIG_1_WRITE_TO_READ_DEFAULT            0x00000000 /* RWI-V */
#define NV_PFB_CONFIG_1_SPECIAL32                             20:20 /* RWIUF */
#define NV_PFB_CONFIG_1_SPECIAL32_ON                     0x00000001 /* RWI-V */
#define NV_PFB_CONFIG_1_SPECIAL32_OFF                    0x00000000 /* RW--V */
#define NV_PFB_CONFIG_1_RAS_TO_CAS_M1                         26:24 /* RWIUF */
#define NV_PFB_CONFIG_1_RAS_TO_CAS_M1_DEFAULT            0x00000001 /* RWI-V */
#define NV_PFB_CONFIG_1_RAS_TO_CAS_M1_2CYCLES            0x00000002 /* RW--V */
#define NV_PFB_CONFIG_1_RAS_TO_CAS_M1_0CYCLES            0x00000000 /* RW--V */
#define NV_PFB_CONFIG_1_READ_TO_WRITE                         30:28 /* RWIUF */
#define NV_PFB_CONFIG_1_READ_TO_WRITE_DEFAULT            0x00000004 /* RWI-V */
#define NV_PFB_CONFIG_1_READ_TO_WRITE_5CYCLES            0x00000005 /* RW--V */
#define NV_PFB_CONFIG_1_READ_TO_WRITE_3CYCLES            0x00000003 /* RW--V */
#define NV_PFB_CONFIG_1_READ_TO_WRITE_2CYCLES            0x00000002 /* RW--V */
#define NV_PFB_CONFIG_1_READ_TO_PCHG                          31:31 /* RWIUF */
#define NV_PFB_CONFIG_1_READ_TO_PCHG_ON                  0x00000001 /* RWI-V */
#define NV_PFB_CONFIG_1_READ_TO_PCHG_OFF                 0x00000000 /* RW--V */
#define NV_PFB_RTL                                       0x00100300 /* RW-4R */
#define NV_PFB_RTL_H                                            0:0 /* RWIUF */
#define NV_PFB_RTL_H_DEFAULT                             0x00000000 /* RWI-V */
#define NV_PFB_RTL_MC                                           1:1 /* RWIUF */
#define NV_PFB_RTL_MC_DEFAULT                            0x00000000 /* RWI-V */
#define NV_PFB_RTL_V                                            2:2 /* RWIUF */
#define NV_PFB_RTL_V_DEFAULT                             0x00000000 /* RWI-V */
#define NV_PFB_RTL_G                                            3:3 /* RWIUF */
#define NV_PFB_RTL_G_DEFAULT                             0x00000000 /* RWI-V */
#define NV_PFB_RTL_GB                                           4:4 /* RWIUF */
#define NV_PFB_RTL_GB_DEFAULT                            0x00000000 /* RWI-V */
#define NV_PFB_SCRAMBLE(i)                     (0x00100400+((i)*4)) /* RW-4A */
#define NV_PFB_SCRAMBLE_SIZE_1                                    8 /*       */
#define NV_PFB_SCRAMBLE_w0                                      4:0 /* RWXUF */
#define NV_PFB_SCRAMBLE_w1                                     12:8 /* RWXUF */
#define NV_PFB_SCRAMBLE_w2                                    20:16 /* RWXUF */
#define NV_PFB_SCRAMBLE_w3                                    28:24 /* RWXUF */
#define NV_PFB_SCRAMBLE_EN                               0x00100420 /* RW-4R */
#define NV_PFB_SCRAMBLE_VALUE_0                          0x03020100 /* RW--V */
#define NV_PFB_SCRAMBLE_VALUE_1                          0x07060504 /* RW--V */
#define NV_PFB_SCRAMBLE_VALUE_2                          0x0b0a0908 /* RW--V */
#define NV_PFB_SCRAMBLE_VALUE_3                          0x0f0e0d0c /* RW--V */
#define NV_PFB_SCRAMBLE_VALUE_4                          0x13121110 /* RW--V */
#define NV_PFB_SCRAMBLE_VALUE_5                          0x17161514 /* RW--V */
#define NV_PFB_SCRAMBLE_VALUE_6                          0x1b1a1918 /* RW--V */
#define NV_PFB_SCRAMBLE_VALUE_7                          0x1f1e1d1c /* RW--V */
#define NV_PFB_CONFIG_0_RESOLUTION                              5:0 /* RWIVF */
#define NV_PFB_CONFIG_0_RESOLUTION_320_PIXELS            0x0000000a /* RW--V */
#define NV_PFB_CONFIG_0_RESOLUTION_400_PIXELS            0x0000000d /* RW--V */
#define NV_PFB_CONFIG_0_RESOLUTION_480_PIXELS            0x0000000f /* RW--V */
#define NV_PFB_CONFIG_0_RESOLUTION_512_PIXELS            0x00000010 /* RW--V */
#define NV_PFB_CONFIG_0_RESOLUTION_640_PIXELS            0x00000014 /* RW--V */
#define NV_PFB_CONFIG_0_RESOLUTION_800_PIXELS            0x00000019 /* RW--V */
#define NV_PFB_CONFIG_0_RESOLUTION_960_PIXELS            0x0000001e /* RW--V */
#define NV_PFB_CONFIG_0_RESOLUTION_1024_PIXELS           0x00000020 /* RW--V */
#define NV_PFB_CONFIG_0_RESOLUTION_1152_PIXELS           0x00000024 /* RW--V */
#define NV_PFB_CONFIG_0_RESOLUTION_1280_PIXELS           0x00000028 /* RW--V */
#define NV_PFB_CONFIG_0_RESOLUTION_1600_PIXELS           0x00000032 /* RW--V */
#define NV_PFB_CONFIG_0_RESOLUTION_DEFAULT               0x00000014 /* RWI-V */
#define NV_PFB_CONFIG_0_PIXEL_DEPTH                             9:8 /* RWIVF */
#define NV_PFB_CONFIG_0_PIXEL_DEPTH_8_BITS               0x00000001 /* RW--V */
#define NV_PFB_CONFIG_0_PIXEL_DEPTH_16_BITS              0x00000002 /* RW--V */
#define NV_PFB_CONFIG_0_PIXEL_DEPTH_32_BITS              0x00000003 /* RW--V */
#define NV_PFB_CONFIG_0_PIXEL_DEPTH_DEFAULT              0x00000001 /* RWI-V */
#define NV_PFB_CONFIG_0_TILING                                12:12 /* RWIVF */
#define NV_PFB_CONFIG_0_TILING_ENABLED                   0x00000000 /* RW--V */
#define NV_PFB_CONFIG_0_TILING_DISABLED                  0x00000001 /* RWI-V */
#define NV_PFB_CONFIG_0_TILING_DEBUG                          23:13 /* RWIVF */
#define NV_PFB_CONFIG_0_TILING_DEBUG_DISABLED            0x00000000 /* RW--V */
#define NV_PFB_CONFIG_0_TILE                                  14:12 /* RWIVF */
#define NV_PFB_CONFIG_0_TILE_OLD1024_FIXED               0x00000000 /* RW--V */
#define NV_PFB_CONFIG_0_TILE_OLD1024_VARIABLE            0x00000004 /* RW--V */
#define NV_PFB_CONFIG_0_TILE_TETRIS_ALLOW                0x00000001 /* RW--V */
#define NV_PFB_CONFIG_0_TILE_TETRIS_REDUNDANT            0x00000002 /* RW--V */
#define NV_PFB_CONFIG_0_TILE_TETRIS_REDUNDANT2           0x00000003 /* RW--V */
#define NV_PFB_CONFIG_0_TILING_DEBUG_ON                       13:13 /* RWI-F */
#define NV_PFB_CONFIG_0_TILING_DEBUG_ON_ENABLED          0x00000000 /* RWI-V */
#define NV_PFB_CONFIG_0_TILING_DEBUG_ON_DISABLED         0x00000001 /* RW--V */
#define NV_PFB_CONFIG_0_TILING_DEBUG_TILESIZE                 14:14 /* RWI-F */
#define NV_PFB_CONFIG_0_TILING_DEBUG_TILESIZE_FIXED      0x00000000 /* RWI-V */
#define NV_PFB_CONFIG_0_TILING_DEBUG_TILESIZE_VARIABLE   0x00000001 /* RW--V */
#define NV_PFB_CONFIG_0_TILING_DEBUG_TETRIS_MODE              17:15 /* RWI-F */
#define NV_PFB_CONFIG_0_TILING_DEBUG_TETRIS_MODE_PASS    0x00000000 /* RWI-V */
#define NV_PFB_CONFIG_0_TILING_DEBUG_TETRIS_MODE_1       0x00000001 /* RW--V */
#define NV_PFB_CONFIG_0_TILING_DEBUG_TETRIS_MODE_2       0x00000002 /* RW--V */
#define NV_PFB_CONFIG_0_TILING_DEBUG_TETRIS_MODE_3       0x00000003 /* RW--V */
#define NV_PFB_CONFIG_0_TILING_DEBUG_TETRIS_MODE_4       0x00000004 /* RW--V */
#define NV_PFB_CONFIG_0_TILING_DEBUG_TETRIS_MODE_5       0x00000005 /* RW--V */
#define NV_PFB_CONFIG_0_TILING_DEBUG_TETRIS_MODE_6       0x00000006 /* RW--V */
#define NV_PFB_CONFIG_0_TILING_DEBUG_TETRIS_MODE_7       0x00000007 /* RW--V */
#define NV_PFB_CONFIG_0_TILING_DEBUG_TETRIS_SHIFT             19:18 /* RWI-F */
#define NV_PFB_CONFIG_0_TILING_DEBUG_TETRIS_SHIFT_0      0x00000000 /* RWI-V */
#define NV_PFB_CONFIG_0_TILING_DEBUG_TETRIS_SHIFT_1      0x00000001 /* RW--V */
#define NV_PFB_CONFIG_0_TILING_DEBUG_TETRIS_SHIFT_2      0x00000002 /* RW--V */
#define NV_PFB_CONFIG_0_TILING_DEBUG_BANK_SWAP                20:20 /* RWI-F */
#define NV_PFB_CONFIG_0_TILING_DEBUG_BANK_SWAP_OFF       0x00000000 /* RWI-V */
#define NV_PFB_CONFIG_0_TILING_DEBUG_BANK_SWAP_ON        0x00000001 /* RWI-V */
#define NV_PFB_CONFIG_0_TILING_DEBUG_BANK_SWAP_MSB            22:21 /* RWI-F */
#define NV_PFB_CONFIG_0_TILING_DEBUG_BANK_SWAP_MSB_1M    0x00000000 /* RWI-V */
#define NV_PFB_CONFIG_0_TILING_DEBUG_BANK_SWAP_MSB_2M    0x00000002 /* RW--V */
#define NV_PFB_CONFIG_0_TILING_DEBUG_BANK_SWAP_MSB_4M    0x00000003 /* RW--V */
#define NV_PFB_CONFIG_0_TILING_DEBUG_UNUSED                   23:23 /* RW--F */
#define NV_PFB_CONFIG_1_SGRAM100                                3:3 /* RWIVF */
#define NV_PFB_CONFIG_1_SGRAM100_ENABLED                 0x00000000 /* RWI-V */
#define NV_PFB_CONFIG_1_SGRAM100_DISABLED                0x00000001 /* RW--V */
#define NV_PFB_DEBUG_0_CKE_ALWAYSON                           29:29 /* RWIVF */
#define NV_PFB_DEBUG_0_CKE_ALWAYSON_OFF                  0x00000000 /* RW--V */
#define NV_PFB_DEBUG_0_CKE_ALWAYSON_ON                   0x00000001 /* RWI-V */
/* dev_ram.ref */
#define NV_PNVM                               0x0FFFFFFF:0x08000000 /* RW--M */
#define NV_PNVM_DATA032(i)                       (0x08000000+(i)*4) /* RW-4A */
#define NV_PNVM_DATA032__SIZE_1                            33554432 /*       */
#define NV_PNVM_DATA032_VALUE                                  31:0 /* RWXVF */
#define NV_PNVM_DATA016(i)           (0x08000000+((i)/3)*4+((i)%3)) /* RW-2A */
#define NV_PNVM_DATA016__SIZE_1                           67108864  /*       */
#define NV_PNVM_DATA016_VALUE                                  15:0 /* RWXVF */
#define NV_PNVM_DATA008(i)                         (0x08000000+(i)) /* RW-1A */
#define NV_PNVM_DATA008__SIZE_1                           134217728 /*       */
#define NV_PNVM_DATA008_VALUE                                   7:0 /* RWXVF */
/* dev_ram.ref */
#define NV_PRAMIN                             0x007FFFFF:0x00700000 /* RW--M */
#define NV_PRAMIN_CONTEXT_0                   ( 0*32+31):( 0*32+ 0) /*       */
#define NV_PRAMIN_CONTEXT_1                   ( 1*32+31):( 1*32+ 0) /*       */
#define NV_PRAMIN_CONTEXT_2                   ( 2*32+31):( 2*32+ 0) /*       */
#define NV_PRAMIN_CONTEXT_3                   ( 3*32+31):( 3*32+ 0) /*       */
#define NV_PRAMIN_RAMHT_0                     0x00710FFF:0x00710000 /* RW--M */
#define NV_PRAMIN_RAMFC_0                     0x007111FF:0x00711000 /* RW--M */
#define NV_PRAMIN_RAMRO_0                     0x007113FF:0x00711200 /* RW--M */
#define NV_PRAMIN_CTX_0(i)                    (0x00700000 + (i)*16) /* RW--M */
#define NV_PRAMIN_CTX_0__SIZE_1                             0x10000 /*       */
#define NV_PRAMIN_CTX_0_NVCLASS                                11:0 /* RWXUF */
#define NV_PRAMIN_CTX_0_NVCLASS_NV_ROOT                  0x00000000 /* RWD-V */
#define NV_PRAMIN_CTX_0_NVCLASS_012                      0x00000012 /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_017                      0x00000017 /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_018                      0x00000018 /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_019                      0x00000019 /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_01C                      0x0000001C /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_01D                      0x0000001D /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_01E                      0x0000001E /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_01F                      0x0000001F /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_021                      0x00000021 /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_030                      0x00000030 /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_036                      0x00000036 /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_037                      0x00000037 /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_038                      0x00000038 /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_039                      0x00000039 /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_042                      0x00000042 /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_043                      0x00000043 /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_044                      0x00000044 /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_048                      0x00000048 /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_04A                      0x0000004A /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_04B                      0x0000004B /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_052                      0x00000052 /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_053                      0x00000053 /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_054                      0x00000054 /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_055                      0x00000055 /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_057                      0x00000057 /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_058                      0x00000058 /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_059                      0x00000059 /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_05A                      0x0000005A /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_05B                      0x0000005B /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_05C                      0x0000005C /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_05E                      0x0000005E /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_05F                      0x0000005F /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_060                      0x00000060 /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_061                      0x00000061 /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_064                      0x00000064 /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_065                      0x00000065 /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_066                      0x00000066 /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_067                      0x00000067 /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_072                      0x00000072 /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_076                      0x00000076 /* RWC-V */
#define NV_PRAMIN_CTX_0_NVCLASS_077                      0x00000077 /* RWC-V */
#define NV_PRAMIN_CTX_0_CHROMA_KEY                            12:12 /* RWXUF */
#define NV_PRAMIN_CTX_0_CHROMA_KEY_DISABLE               0x00000000 /* RWD-V */
#define NV_PRAMIN_CTX_0_CHROMA_KEY_ENABLE                0x00000001 /* RW--V */
#define NV_PRAMIN_CTX_0_USER_CLIP                             13:13 /* RWXUF */
#define NV_PRAMIN_CTX_0_USER_CLIP_DISABLE                0x00000000 /* RWD-V */
#define NV_PRAMIN_CTX_0_USER_CLIP_ENABLE                 0x00000001 /* RW--V */
#define NV_PRAMIN_CTX_0_SWIZZLE                               14:14 /* RWXUF */
#define NV_PRAMIN_CTX_0_SWIZZLE_DISABLE                  0x00000000 /* RWD-V */
#define NV_PRAMIN_CTX_0_SWIZZLE_ENABLE                   0x00000001 /* RW--V */
#define NV_PRAMIN_CTX_0_PATCH_CONFIG                          17:15 /* RWXUF */
#define NV_PRAMIN_CTX_0_PATCH_CONFIG_SRCCOPY_AND         0x00000000 /* RWD-V */
#define NV_PRAMIN_CTX_0_PATCH_CONFIG_ROP_AND             0x00000001 /* RW--V */
#define NV_PRAMIN_CTX_0_PATCH_CONFIG_BLEND_AND           0x00000002 /* RW--V */
#define NV_PRAMIN_CTX_0_PATCH_CONFIG_SRCCOPY             0x00000003 /* RW--V */
#define NV_PRAMIN_CTX_0_PATCH_CONFIG_SRCCOPY_PRE         0x00000004 /* RW--V */
#define NV_PRAMIN_CTX_0_PATCH_CONFIG_BLEND_PRE           0x00000005 /* RW--V */
#define NV_PRAMIN_CTX_0_DITHER_MODE                           21:20 /* RWXUF */
#define NV_PRAMIN_CTX_0_DITHER_MODE_COMPATIBILITY        0x00000000 /* RWD-V */
#define NV_PRAMIN_CTX_0_DITHER_MODE_DITHER               0x00000001 /* RW--V */
#define NV_PRAMIN_CTX_0_DITHER_MODE_TRUNCATE             0x00000002 /* RW--V */
#define NV_PRAMIN_CTX_0_DITHER_MODE_SUBTRACT_TRUNCATE    0x00000003 /* RW--V */
#define NV_PRAMIN_CTX_0_SINGLE_STEP                           23:23 /* RWXUF */
#define NV_PRAMIN_CTX_0_SINGLE_STEP_DISABLE              0x00000000 /* RWD-V */
#define NV_PRAMIN_CTX_0_SINGLE_STEP_ENABLE               0x00000001 /* RW--V */
#define NV_PRAMIN_CTX_0_PATCH_STATUS                          24:24 /* RWXUF */
#define NV_PRAMIN_CTX_0_PATCH_STATUS_INVALID             0x00000000 /* RWD-V */
#define NV_PRAMIN_CTX_0_PATCH_STATUS_VALID               0x00000001 /* RW--V */
#define NV_PRAMIN_CTX_0_CONTEXT_SURFACE                       25:25 /* RWXUF */
#define NV_PRAMIN_CTX_0_CONTEXT_SURFACE_INVALID          0x00000000 /* RW--V */
#define NV_PRAMIN_CTX_0_CONTEXT_SURFACE_VALID            0x00000001 /* RW--V */
#define NV_PRAMIN_CTX_0_CONTEXT_SURFACE0                      25:25 /* RWXUF */
#define NV_PRAMIN_CTX_0_CONTEXT_SURFACE0_INVALID         0x00000000 /* RWD-V */
#define NV_PRAMIN_CTX_0_CONTEXT_SURFACE0_VALID           0x00000001 /* RW--V */
#define NV_PRAMIN_CTX_0_CONTEXT_SURFACE1                      26:26 /* RWXUF */
#define NV_PRAMIN_CTX_0_CONTEXT_SURFACE1_INVALID         0x00000000 /* RWD-V */
#define NV_PRAMIN_CTX_0_CONTEXT_SURFACE1_VALID           0x00000001 /* RW--V */
#define NV_PRAMIN_CTX_0_CONTEXT_PATTERN                       27:27 /* RWXUF */
#define NV_PRAMIN_CTX_0_CONTEXT_PATTERN_INVALID          0x00000000 /* RWD-V */
#define NV_PRAMIN_CTX_0_CONTEXT_PATTERN_VALID            0x00000001 /* RW--V */
#define NV_PRAMIN_CTX_0_CONTEXT_ROP                           28:28 /* RWXUF */
#define NV_PRAMIN_CTX_0_CONTEXT_ROP_INVALID              0x00000000 /* RWD-V */
#define NV_PRAMIN_CTX_0_CONTEXT_ROP_VALID                0x00000001 /* RW--V */
#define NV_PRAMIN_CTX_0_CONTEXT_BETA1                         29:29 /* RWXUF */
#define NV_PRAMIN_CTX_0_CONTEXT_BETA1_INVALID            0x00000000 /* RWD-V */
#define NV_PRAMIN_CTX_0_CONTEXT_BETA1_VALID              0x00000001 /* RW--V */
#define NV_PRAMIN_CTX_0_CONTEXT_BETA4                         30:30 /* RWXUF */
#define NV_PRAMIN_CTX_0_CONTEXT_BETA4_INVALID            0x00000000 /* RWD-V */
#define NV_PRAMIN_CTX_0_CONTEXT_BETA4_VALID              0x00000001 /* RW--V */
#define NV_PRAMIN_CTX_1(i)                    (0x00700004 + (i)*16) /* RW--M */
#define NV_PRAMIN_CTX_1__SIZE_1                             0x10000 /*       */
#define NV_PRAMIN_CTX_1_MONO_FORMAT                             7:0 /* RWXUF */
#define NV_PRAMIN_CTX_1_MONO_FORMAT_INVALID                    0x00 /* RWD-V */
#define NV_PRAMIN_CTX_1_MONO_FORMAT_CGA6_M1                    0x01 /* RW--V */
#define NV_PRAMIN_CTX_1_MONO_FORMAT_LE_M1                      0x02 /* RW--V */
#define NV_PRAMIN_CTX_1_MONO_FORMAT_018                        0x01 /* RWC-V */
#define NV_PRAMIN_CTX_1_MONO_FORMAT_044                        0x01 /* RWC-V */
#define NV_PRAMIN_CTX_1_MONO_FORMAT_04A                        0x01 /* RWC-V */
#define NV_PRAMIN_CTX_1_MONO_FORMAT_04B                        0x01 /* RWC-V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT                           15:8 /* RWXUF */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_INVALID                   0x00 /* RWD-V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_LE_Y8                     0x01 /* RW--V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_LE_X16A8Y8                0x02 /* RW--V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_LE_X24Y8                  0x03 /* RW--V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_LE_A1R5G5B5               0x06 /* RW--V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_LE_X1R5G5B5               0x07 /* RW--V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_LE_X16A1R5G5B5            0x08 /* RW--V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_LE_X17R5G5B5              0x09 /* RW--V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_LE_R5G6B5                 0x0A /* RW--V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_LE_A16R5G6B5              0x0B /* RW--V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_LE_X16R5G6B5              0x0C /* RW--V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_LE_A8R8G8B8               0x0D /* RW--V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_LE_X8R8G8B8               0x0E /* RW--V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_LE_Y16                    0x0F /* RW--V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_LE_A16Y16                 0x10 /* RW--V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_LE_X16Y16                 0x11 /* RW--V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_LE_V8YB8U8YA8             0x12 /* RW--V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_LE_YB8V8YA8U8             0x13 /* RW--V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_LE_Y32                    0x14 /* RW--V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_017                 0x00000002 /* RWC-V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_018                 0x00000002 /* RWC-V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_01C                 0x00000003 /* RWC-V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_01D                 0x00000003 /* RWC-V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_01E                 0x00000003 /* RWC-V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_021                 0x00000001 /* RWC-V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_036                 0x00000001 /* RWC-V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_037                 0x00000006 /* RWC-V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_044                 0x0000000B /* RWC-V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_04A                 0x0000000C /* RWC-V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_04B                 0x00000003 /* RWC-V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_057                 0x0000000B /* RWC-V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_05C                 0x0000000C /* RWC-V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_05D                 0x0000000C /* RWC-V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_05E                 0x0000000C /* RWC-V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_060                 0x0000000A /* RWC-V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_061                 0x0000000A /* RWC-V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_076                 0x0000000A /* RWC-V */
#define NV_PRAMIN_CTX_1_COLOR_FORMAT_077                 0x00000006 /* RWC-V */
#define NV_PRAMIN_CTX_1_NOTIFY_INSTANCE                       31:16 /* RWXUF */
#define NV_PRAMIN_CTX_1_NOTIFY_INSTANCE_INVALID              0x0000 /* RWD-V */
#define NV_PRAMIN_CTX_2(i)                    (0x00700008 + (i)*16) /* RW--M */
#define NV_PRAMIN_CTX_2__SIZE_1                             0x10000 /*       */
#define NV_PRAMIN_CTX_2_DMA_0_INSTANCE                         15:0 /* RWXUF */
#define NV_PRAMIN_CTX_2_DMA_0_INSTANCE_INVALID               0x0000 /* RWD-V */
#define NV_PRAMIN_CTX_2_DMA_1_INSTANCE                        31:16 /* RWXUF */
#define NV_PRAMIN_CTX_2_DMA_1_INSTANCE_INVALID               0x0000 /* RWD-V */
#define NV_PRAMIN_CTX_3(i)                    (0x0070000C + (i)*16) /* RW--M */
#define NV_PRAMIN_CTX_3__SIZE_1                             0x10000 /*       */
#define NV_PRAMIN_CTX_3_METHOD_TRAPS                           31:0 /* RWXUF */
#define NV_PRAMIN_CTX_3_METHOD_TRAPS_DISABLED            0x00000000 /* RWD-V */
#define NV_PRAMIN_DATA032(i)                     (0x00700000+(i)*4) /* RW-4A */
#define NV_PRAMIN_DATA032__SIZE_1                            524288 /*       */
#define NV_PRAMIN_DATA032_VALUE                                31:0 /* RWXVF */
#define NV_PRAMIN_DATA016(i)         (0x00700000+((i)/3)*4+((i)%3)) /* RW-2A */
#define NV_PRAMIN_DATA016__SIZE_1                           1572864 /*       */
#define NV_PRAMIN_DATA016_VALUE                                15:0 /* RWXVF */
#define NV_PRAMIN_DATA008(i)                       (0x00700000+(i)) /* RW-1A */
#define NV_PRAMIN_DATA008__SIZE_1                           2097152 /*       */
#define NV_PRAMIN_DATA008_VALUE                                 7:0 /* RWXVF */
/* dev_ram.ref */
#define NV_FIFO_DMA_OPCODE                    ( 0*32+31):( 0*32+29) /* RWXUF */
#define NV_FIFO_DMA_OPCODE_METHOD                        0x00000000 /* ----V */
#define NV_FIFO_DMA_OPCODE_JUMP                          0x00000001 /* ----V */
#define NV_FIFO_DMA_OPCODE_NONINC_METHOD                 0x00000002 /* ----V */
#define NV_FIFO_DMA_METHOD_COUNT              ( 0*32+28):( 0*32+18) /* RWXUF */
#define NV_FIFO_DMA_METHOD_SUBCHANNEL         ( 0*32+15):( 0*32+13) /* RWXUF */
#define NV_FIFO_DMA_METHOD_ADDRESS            ( 0*32+12):( 0*32+ 2) /* RWXUF */
#define NV_FIFO_DMA_DATA                      ( 1*32+31):( 1*32+ 0) /* RWXUF */
#define NV_FIFO_DMA_JUMP_OFFSET                                28:2 /* RWXUF */
/* dev_ram.ref */
#define NV_PRAM                               0x00006FFF:0x00006000 /* RW--D */
/* dev_ram.ref */
#define NV_RAMHT__SIZE_0                      0x00000FFF:0x00000000 /* RW--M */
#define NV_RAMHT__SIZE_1                      0x00001FFF:0x00000000 /* RW--M */
#define NV_RAMHT__SIZE_2                      0x00003FFF:0x00000000 /* RW--M */
#define NV_RAMHT__SIZE_3                      0x00007FFF:0x00000000 /* RW--M */
#define NV_RAMHT_HANDLE                       ( 0*32+31):( 0*32+ 0) /* RWXVF */
#define NV_RAMHT_INSTANCE                     ( 1*32+15):( 1*32+ 0) /* RWXUF */
#define NV_RAMHT_ENGINE                       ( 1*32+17):( 1*32+16) /* RWXVF */
#define NV_RAMHT_ENGINE_SW                               0x00000000 /* RW--V */
#define NV_RAMHT_ENGINE_GRAPHICS                         0x00000001 /* RW--V */
#define NV_RAMHT_ENGINE_DVD                              0x00000002 /* RW--V */
#define NV_RAMHT_CHID                         ( 1*32+28):( 1*32+24) /* RWXUF */
#define NV_RAMHT_STATUS                       ( 1*32+31):( 1*32+31) /* RWXUF */
#define NV_RAMHT_STATUS_INVALID                          0x00000000 /* RW--V */
#define NV_RAMHT_STATUS_VALID                            0x00000001 /* RW--V */
/* dev_ram.ref */
#define NV_RAMRO__SIZE_0                      0x000001FF:0x00000000 /* RW--M */
#define NV_RAMRO__SIZE_1                      0x00001FFF:0x00000000 /* RW--M */
#define NV_RAMRO_METHOD                       ( 0*32+12):( 0*32+ 0) /* RWXUF */
#define NV_RAMRO_SUBCHANNEL                   ( 0*32+15):( 0*32+13) /* RWXUF */
#define NV_RAMRO_CHID                         ( 0*32+22):( 0*32+16) /* RWXUF */
#define NV_RAMRO_TYPE                         ( 0*32+23):( 0*32+23) /* RWXVF */
#define NV_RAMRO_TYPE_WRITE                              0x00000000 /* RW--V */
#define NV_RAMRO_TYPE_READ                               0x00000001 /* RW--V */
#define NV_RAMRO_BYTE_ENABLES                 ( 0*32+27):( 0*32+24) /* RWXVF */
#define NV_RAMRO_REASON                       ( 0*32+31):( 0*32+28) /* RWXVF */
#define NV_RAMRO_REASON_ILLEGAL_ACCESS                   0x00000000 /* RW--V */
#define NV_RAMRO_REASON_NO_CACHE_AVAILABLE               0x00000001 /* RW--V */
#define NV_RAMRO_REASON_CACHE_RAN_OUT                    0x00000002 /* RW--V */
#define NV_RAMRO_REASON_FREE_COUNT_OVERRUN               0x00000003 /* RW--V */
#define NV_RAMRO_REASON_CAUGHT_LYING                     0x00000004 /* RW--V */
#define NV_RAMRO_REASON_RESERVED_ACCESS                  0x00000005 /* RW--V */
#define NV_RAMRO_DATA                         ( 1*32+31):( 1*32+ 0) /* RWXVF */
/* dev_ram.ref */
#define NV_RAMFC__SIZE_0                      0x000001FF:0x00000000 /* RW--M */
#define NV_RAMFC_DMA_PUT                      ( 0*32+28):( 0*32+ 2) /* RWXUF */
#define NV_RAMFC_DMA_GET                      ( 1*32+28):( 1*32+ 2) /* RWXUF */
#define NV_RAMFC_DMA_INST                     ( 2*32+15):( 2*32+ 0) /* RWXUF */
#define NV_RAMFC_DMA_COUNT                    ( 2*32+28):( 2*32+18) /* RWXUF */
#define NV_RAMFC_DMA_METHOD                   ( 3*32+12):( 3*32+ 2) /* RWXUF */
#define NV_RAMFC_DMA_SUBCHANNEL               ( 3*32+15):( 3*32+13) /* RWXUF */
#define NV_RAMFC_DMA_METHOD_COUNT             ( 3*32+28):( 3*32+18) /* RWXUF */
#define NV_RAMFC_DMA_FETCH_TRIG               ( 4*32+ 7):( 4*32+ 3) /* RWXUF */
#define NV_RAMFC_DMA_FETCH_SIZE               ( 4*32+15):( 4*32+13) /* RWXUF */
#define NV_RAMFC_DMA_FETCH_MAX_REQS           ( 4*32+20):( 4*32+16) /* RWXUF */
#define NV_RAMFC_ENGINE_SUB_0                 ( 5*32+ 1):( 5*32+ 0) /* RWXUF */
#define NV_RAMFC_ENGINE_SUB_1                 ( 5*32+ 5):( 5*32+ 4) /* RWXUF */
#define NV_RAMFC_ENGINE_SUB_2                 ( 5*32+ 9):( 5*32+ 8) /* RWXUF */
#define NV_RAMFC_ENGINE_SUB_3                 ( 5*32+13):( 5*32+12) /* RWXUF */
#define NV_RAMFC_ENGINE_SUB_4                 ( 5*32+17):( 5*32+16) /* RWXUF */
#define NV_RAMFC_ENGINE_SUB_5                 ( 5*32+21):( 5*32+20) /* RWXUF */
#define NV_RAMFC_ENGINE_SUB_6                 ( 5*32+25):( 5*32+24) /* RWXUF */
#define NV_RAMFC_ENGINE_SUB_7                 ( 5*32+29):( 5*32+28) /* RWXUF */
#define NV_RAMFC_ENGINE_SW                               0x00000000 /* RW--V */
#define NV_RAMFC_ENGINE_GRAPHICS                         0x00000001 /* RW--V */
#define NV_RAMFC_ENGINE_DVD                              0x00000002 /* RW--V */
#define NV_RAMFC_PULL1_ENGINE                 ( 6*32+ 1):( 6*32+ 0) /* RWXUF */
#define NV_RAMFC_PULL1_ENGINE_SW                         0x00000000 /* RW--V */
#define NV_RAMFC_PULL1_ENGINE_GRAPHICS                   0x00000001 /* RW--V */
#define NV_RAMFC_PULL1_ENGINE_DVD                        0x00000002 /* RW--V */
/* dev_ram.ref */
#define NV_RAMDVD_CTX_TABLE                   (63*32+31):( 0*32+ 0) /* RWXUF */
#define NV_RAMDVD_CTX_TABLE_OBJECT(c,s) (((c)*4+((s)/2))*32+((s)%2)*16+15):(((c)*4+((s)/2))*32+((s)%2)*16) /* RWXUF */
#define NV_RAMDVD_CTX_TABLE_OBJECT_0_0        ( 0*32+15):( 0*32+ 0) /* RWXUF */
#define NV_RAMDVD_CTX_TABLE_OBJECT_0_1        ( 0*32+31):( 0*32+16) /* RWXUF */
#define NV_RAMDVD_CTX_TABLE_OBJECT_0_2        ( 1*32+15):( 1*32+ 0) /* RWXUF */
#define NV_RAMDVD_CTX_TABLE_OBJECT_0_3        ( 1*32+31):( 1*32+16) /* RWXUF */
#define NV_RAMDVD_CTX_TABLE_OBJECT_0_4        ( 2*32+15):( 2*32+ 0) /* RWXUF */
#define NV_RAMDVD_CTX_TABLE_OBJECT_0_5        ( 2*32+31):( 2*32+16) /* RWXUF */
#define NV_RAMDVD_CTX_TABLE_OBJECT_0_6        ( 3*32+15):( 3*32+ 0) /* RWXUF */
#define NV_RAMDVD_CTX_TABLE_OBJECT_0_7        ( 3*32+31):( 3*32+16) /* RWXUF */
#define NV_RAMDVD_CTX_TABLE_OBJECT_15_0       (60*32+15):(60*32+ 0) /* RWXUF */
#define NV_RAMDVD_CTX_TABLE_OBJECT_15_1       (60*32+31):(60*32+16) /* RWXUF */
#define NV_RAMDVD_CTX_TABLE_OBJECT_15_2       (61*32+15):(61*32+ 0) /* RWXUF */
#define NV_RAMDVD_CTX_TABLE_OBJECT_15_3       (61*32+31):(61*32+16) /* RWXUF */
#define NV_RAMDVD_CTX_TABLE_OBJECT_15_4       (62*32+15):(62*32+ 0) /* RWXUF */
#define NV_RAMDVD_CTX_TABLE_OBJECT_15_5       (62*32+31):(62*32+16) /* RWXUF */
#define NV_RAMDVD_CTX_TABLE_OBJECT_15_6       (63*32+15):(63*32+ 0) /* RWXUF */
#define NV_RAMDVD_CTX_TABLE_OBJECT_15_7       (63*32+31):(63*32+16) /* RWXUF */
/* dev_ram.ref */
#define NV_DMA_CLASS                          ( 0*32+11):( 0*32+ 0) /* RWXUF */
#define NV_DMA_PAGE_TABLE                     ( 0*32+12):( 0*32+12) /* RWXVF */
#define NV_DMA_PAGE_TABLE_NOT_PRESENT                    0x00000000 /* RW--V */
#define NV_DMA_PAGE_TABLE_PRESENT                        0x00000001 /* RW--V */
#define NV_DMA_PAGE_ENTRY                     ( 0*32+13):( 0*32+13) /* RWXVF */
#define NV_DMA_PAGE_ENTRY_NOT_LINEAR                     0x00000000 /* RW--V */
#define NV_DMA_PAGE_ENTRY_LINEAR                         0x00000001 /* RW--V */
#define NV_DMA_FLAGS_ACCESS                   ( 0*32+15):( 0*32+14) /* RWXVF */
#define NV_DMA_FLAGS_ACCESS_READ_WRITE                   0x00000000 /* RW--V */
#define NV_DMA_FLAGS_ACCESS_READ_ONLY                    0x00000001 /* RW--V */
#define NV_DMA_FLAGS_ACCESS_WRITE_ONLY                   0x00000002 /* RW--V */
#define NV_DMA_TARGET_NODE                    ( 0*32+17):( 0*32+16) /* RWXVF */
#define NV_DMA_TARGET_NODE_NVM                           0x00000000 /* RW--V */
#define NV_DMA_TARGET_NODE_NVM_TILED                     0x00000001 /* RW--V */
#define NV_DMA_TARGET_NODE_PCI                           0x00000002 /* RW--V */
#define NV_DMA_TARGET_NODE_AGP                           0x00000003 /* RW--V */
#define NV_DMA_ADJUST                         ( 0*32+31):( 0*32+20) /* RWXUF */
#define NV_DMA_LIMIT                          ( 1*32+31):( 1*32+ 0) /* RWXUF */
#define NV_DMA_ACCESS                         ( 2*32+ 1):( 2*32+ 1) /* RWXVF */
#define NV_DMA_ACCESS_READ_ONLY                          0x00000000 /* RW--V */
#define NV_DMA_ACCESS_READ_AND_WRITE                     0x00000001 /* RW--V */
#define NV_DMA_FRAME_ADDRESS                  ( 2*32+31):( 2*32+12) /* RWXUF */
/* dev_ram.ref */
#define NV_SUBCHAN_CTX_SWITCH                 ( 0*32+31):( 0*32+ 0) /* RWXUF */
#define NV_SUBCHAN_DMA_INSTANCE               ( 1*32+15):( 1*32+ 0) /* RWXUF */
#define NV_SUBCHAN_NOTIFY_INSTANCE            ( 1*32+31):( 1*32+16) /* RWXUF */
#define NV_SUBCHAN_MEMFMT_INSTANCE            ( 2*32+15):( 2*32+ 0) /* RWXUF */
#define NV_SUBCHAN_MEMFMT_LINEAR              ( 2*32+16):( 2*32+16) /* RWXUF */
#define NV_SUBCHAN_MEMFMT_LINEAR_OUT                     0x00000000 /* RW--V */
#define NV_SUBCHAN_MEMFMT_LINEAR_IN                      0x00000001 /* RW--V */
#ifdef DEFUNCT
/* dev_realmode.ref */
#define NV_IO_MPU_401_DATA                               0x00000330 /* R--1R */
#define NV_IO_MPU_401_DATA__ALIAS_1                      0x00000300 /* R--1R */
#define NV_IO_MPU_401_DATA__ALIAS_2                      0x00000230 /* R--1R */
#define NV_IO_MPU_401_DATA_VALUE                                7:0 /* R--VF */
#define NV_IO_MPU_401_DATA_ACK                           0x000000FE /* R---V */
#define NV_IO_MPU_401_STATUS                             0x00000331 /* R--1R */
#define NV_IO_MPU_401_STATUS__ALIAS_1                    0x00000301 /* R--1R */
#define NV_IO_MPU_401_STATUS__ALIAS_2                    0x00000231 /* R--1R */
#define NV_IO_MPU_401_STATUS_DATA                               5:0 /* R--VF */
#define NV_IO_MPU_401_STATUS_WRITE                              6:6 /* R--VF */
#define NV_IO_MPU_401_STATUS_WRITE_EMPTY                 0x00000000 /* R---V */
#define NV_IO_MPU_401_STATUS_WRITE_FULL                  0x00000001 /* R---V */
#define NV_IO_MPU_401_STATUS_READ                               7:7 /* R--VF */
#define NV_IO_MPU_401_STATUS_READ_FULL                   0x00000000 /* R---V */
#define NV_IO_MPU_401_STATUS_READ_EMPTY                  0x00000001 /* R---V */
#define NV_IO_MPU_401_COM                                0x00000331 /* -W-1R */
#define NV_IO_MPU_401_COM__ALIAS_1                       0x00000301 /* -W-1R */
#define NV_IO_MPU_401_COM__ALIAS_2                       0x00000231 /* -W-1R */
#define NV_IO_MPU_401_COM_UART_MODE                             7:0 /* -WIVF */
#define NV_IO_MPU_401_COM_UART_MODE_COMPLEX              0x000000ff /* -WI-V */
#define NV_IO_MPU_401_COM_UART_MODE_SIMPLE               0x0000003f /* -W--V */
/* dev_realmode.ref */
#define NV_PRM                                0x00005FFF:0x00004000 /* RW--D */
#define NV_PRM_INTR_0                                    0x00004100 /* RW-4R */
#define NV_PRM_INTR_0_TRACE_MPU401                              0:0 /* RWXVF */
#define NV_PRM_INTR_0_TRACE_MPU401_NOT_PENDING           0x00000000 /* R---V */
#define NV_PRM_INTR_0_TRACE_MPU401_PENDING               0x00000001 /* R---V */
#define NV_PRM_INTR_0_TRACE_MPU401_RESET                 0x00000001 /* -W--V */
#define NV_PRM_INTR_0_TRACE_FM                                  4:4 /* RWXVF */
#define NV_PRM_INTR_0_TRACE_FM_NOT_PENDING               0x00000000 /* R---V */
#define NV_PRM_INTR_0_TRACE_FM_PENDING                   0x00000001 /* R---V */
#define NV_PRM_INTR_0_TRACE_FM_RESET                     0x00000001 /* -W--V */
#define NV_PRM_INTR_0_TRACE_SB_DIGITAL                          8:8 /* RWXVF */
#define NV_PRM_INTR_0_TRACE_SB_DIGITAL_NOT_PENDING       0x00000000 /* R---V */
#define NV_PRM_INTR_0_TRACE_SB_DIGITAL_PENDING           0x00000001 /* R---V */
#define NV_PRM_INTR_0_TRACE_SB_DIGITAL_RESET             0x00000001 /* -W--V */
#define NV_PRM_INTR_0_TRACE_SB_MIXER                          12:12 /* RWXVF */
#define NV_PRM_INTR_0_TRACE_SB_MIXER_NOT_PENDING         0x00000000 /* R---V */
#define NV_PRM_INTR_0_TRACE_SB_MIXER_PENDING             0x00000001 /* R---V */
#define NV_PRM_INTR_0_TRACE_SB_MIXER_RESET               0x00000001 /* -W--V */
#define NV_PRM_INTR_0_TRACE_OVERFLOW                          16:16 /* RWXVF */
#define NV_PRM_INTR_0_TRACE_OVERFLOW_NOT_PENDING         0x00000000 /* R---V */
#define NV_PRM_INTR_0_TRACE_OVERFLOW_PENDING             0x00000001 /* R---V */
#define NV_PRM_INTR_0_TRACE_OVERFLOW_RESET               0x00000001 /* -W--V */
#define NV_PRM_INTR_EN_0                                 0x00004140 /* RW-4R */
#define NV_PRM_INTR_EN_0_TRACE_MPU401                           0:0 /* RWIVF */
#define NV_PRM_INTR_EN_0_TRACE_MPU401_DISABLED           0x00000000 /* RWI-V */
#define NV_PRM_INTR_EN_0_TRACE_MPU401_ENABLED            0x00000001 /* RW--V */
#define NV_PRM_INTR_EN_0_TRACE_FM                               4:4 /* RWIVF */
#define NV_PRM_INTR_EN_0_TRACE_FM_DISABLED               0x00000000 /* RWI-V */
#define NV_PRM_INTR_EN_0_TRACE_FM_ENABLED                0x00000001 /* RW--V */
#define NV_PRM_INTR_EN_0_TRACE_SB_DIGITAL                       8:8 /* RWIVF */
#define NV_PRM_INTR_EN_0_TRACE_SB_DIGITAL_DISABLED       0x00000000 /* RWI-V */
#define NV_PRM_INTR_EN_0_TRACE_SB_DIGITAL_ENABLED        0x00000001 /* RW--V */
#define NV_PRM_INTR_EN_0_TRACE_SB_MIXER                       12:12 /* RWIVF */
#define NV_PRM_INTR_EN_0_TRACE_SB_MIXER_DISABLED         0x00000000 /* RWI-V */
#define NV_PRM_INTR_EN_0_TRACE_SB_MIXER_ENABLED          0x00000001 /* RW--V */
#define NV_PRM_INTR_EN_0_TRACE_OVERFLOW                       16:16 /* RWIVF */
#define NV_PRM_INTR_EN_0_TRACE_OVERFLOW_DISABLED         0x00000000 /* RWI-V */
#define NV_PRM_INTR_EN_0_TRACE_OVERFLOW_ENABLED          0x00000001 /* RW--V */
#define NV_PRM_RAMRM                                     0x00004200 /* RW-4R */
#define NV_PRM_RAMRM_BASE_ADDRESS                             15:12 /* RWXVF */
#define NV_PRM_RAMRM_BASE_ADDRESS_2000                   0x00002000 /* RWI-V */
#define NV_PRM_TRACE                                     0x00004300 /* RW-4R */
#define NV_PRM_TRACE_IO_CAPTURE                                 1:0 /* RWIVF */
#define NV_PRM_TRACE_IO_CAPTURE_DISABLED                 0x00000000 /* RWI-V */
#define NV_PRM_TRACE_IO_CAPTURE_WRITES                   0x00000001 /* RW--V */
#define NV_PRM_TRACE_IO_CAPTURE_READS                    0x00000002 /* RW--V */
#define NV_PRM_TRACE_IO_CAPTURE_READS_WRITES             0x00000003 /* RW--V */
#define NV_PRM_TRACE_IO_WRITE                                   4:4 /* RWXVF */
#define NV_PRM_TRACE_IO_WRITE_NONE                       0x00000000 /* R---V */
#define NV_PRM_TRACE_IO_WRITE_OCCURED                    0x00000001 /* R---V */
#define NV_PRM_TRACE_IO_WRITE_RESET                      0x00000001 /* -W--V */
#define NV_PRM_TRACE_IO_READ                                    5:5 /* RWXVF */
#define NV_PRM_TRACE_IO_READ_NONE                        0x00000000 /* R---V */
#define NV_PRM_TRACE_IO_READ_OCCURED                     0x00000001 /* R---V */
#define NV_PRM_TRACE_IO_READ_RESET                       0x00000001 /* -W--V */
#define NV_PRM_TRACE_INDEX                               0x00004310 /* RW-4R */
#define NV_PRM_TRACE_INDEX_ADDRESS                              9:0 /* RWXUF */
#define NV_PRM_TRACE_INDEX_ADDRESS_0                     0x00000000 /* RW--V */
#define NV_PRM_IGNORE_0                                  0x00004320 /* RW-4R */
#define NV_PRM_IGNORE_0_MPU401                                  1:0 /* RWXVF */
#define NV_PRM_IGNORE_0_MPU401_DISABLED                  0x00000000 /* RW--V */
#define NV_PRM_IGNORE_0_MPU401_WRITES                    0x00000001 /* RW--V */
#define NV_PRM_IGNORE_0_MPU401_READS                     0x00000002 /* RW--V */
#define NV_PRM_IGNORE_0_MPU401_READS_WRITES              0x00000003 /* RW--V */
#define NV_PRM_IGNORE_0_FM                                      5:4 /* RWXVF */
#define NV_PRM_IGNORE_0_FM_DISABLED                      0x00000000 /* RW--V */
#define NV_PRM_IGNORE_0_FM_WRITES                        0x00000001 /* RW--V */
#define NV_PRM_IGNORE_0_FM_READS                         0x00000002 /* RW--V */
#define NV_PRM_IGNORE_0_FM_READS_WRITES                  0x00000003 /* RW--V */
#define NV_PRM_IGNORE_0_SB_DIGITAL                              9:8 /* RWXVF */
#define NV_PRM_IGNORE_0_SB_DIGITAL_DISABLED              0x00000000 /* RW--V */
#define NV_PRM_IGNORE_0_SB_DIGITAL_WRITES                0x00000001 /* RW--V */
#define NV_PRM_IGNORE_0_SB_DIGITAL_READS                 0x00000002 /* RW--V */
#define NV_PRM_IGNORE_0_SB_DIGITAL_READS_WRITES          0x00000003 /* RW--V */
#define NV_PRM_IGNORE_0_SB_MIXER                              13:12 /* RWXVF */
#define NV_PRM_IGNORE_0_SB_MIXER_DISABLED                0x00000000 /* RW--V */
#define NV_PRM_IGNORE_0_SB_MIXER_WRITES                  0x00000001 /* RW--V */
#define NV_PRM_IGNORE_0_SB_MIXER_READS                   0x00000002 /* RW--V */
#define NV_PRM_IGNORE_0_SB_MIXER_READS_WRITES            0x00000003 /* RW--V */
/* dev_realmode.ref */
#define NV_PRMIO                              0x00007FFF:0x00007000 /* RW--D */
/* dev_realmode.ref */
/* dev_realmode.ref */
#define NV_TRACE                              0x0000FFFF:0x00000000 /* RW--M */
#define NV_TRACE_DATA                         ( 0*32+ 7):( 0*32+ 0) /* RWXVF */
#define NV_TRACE_ACCESS                       ( 0*32+14):( 0*32+14) /* RWXVF */
#define NV_TRACE_ACCESS_WRITE                            0x00000000 /* RW--V */
#define NV_TRACE_ACCESS_READ                             0x00000001 /* RW--V */
#define NV_TRACE_TYPE                         ( 0*32+15):( 0*32+15) /* RWXVF */
#define NV_TRACE_TYPE_IO                                 0x00000000 /* RW--V */
#define NV_TRACE_TYPE_MEMORY                             0x00000001 /* RW--V */
#define NV_TRACE_ADDRESS                      ( 0*32+31):( 0*32+16) /* RWXUF */
#endif

#endif // _NV4_REF_H_
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Microsoft Xbox (1.00.4400) [April 2002] [src]\private\ntos\video\nv20\drivers\resman\kernel\inc\nv4\nv4_hal.h ===
#ifndef _NV4_HAL_H_
#define _NV4_HAL_H_
 /***************************************************************************\
|*                                                                           *|
|*        Copyright (c) 1993-2000 NVIDIA, Corp.  All rights reserved.        *|
|*                                                                           *|
|*     NOTICE TO USER:   The source code  is copyrighted under  U.S. and     *|
|*     international laws.   NVIDIA, Corp. of Sunnyvale, California owns     *|
|*     the copyright  and as design patents  pending  on the design  and     *|
|*     interface  of the NV chips.   Users and possessors of this source     *|
|*     code are hereby granted  a nonexclusive,  royalty-free  copyright     *|
|*     and  design  patent license  to use this code  in individual  and     *|
|*     commercial software.                                                  *|
|*                                                                           *|
|*     Any use of this source code must include,  in the user documenta-     *|
|*     tion and  internal comments to the code,  notices to the end user     *|
|*     as follows:                                                           *|
|*                                                                           *|
|*     Copyright (c) 1993-2000  NVIDIA, Corp.    NVIDIA  design  patents     *|
|*     pending in the U.S. and foreign countries.                            *|
|*                                                                           *|
|*     NVIDIA, CORP.  MAKES  NO REPRESENTATION ABOUT  THE SUITABILITY OF     *|
|*     THIS SOURCE CODE FOR ANY PURPOSE.  IT IS PROVIDED "AS IS" WITHOUT     *|
|*     EXPRESS OR IMPLIED WARRANTY OF ANY KIND.  NVIDIA, CORP. DISCLAIMS     *|
|*     ALL WARRANTIES  WITH REGARD  TO THIS SOURCE CODE,  INCLUDING  ALL     *|
|*     IMPLIED   WARRANTIES  OF  MERCHANTABILITY  AND   FITNESS   FOR  A     *|
|*     PARTICULAR  PURPOSE.   IN NO EVENT SHALL NVIDIA, CORP.  BE LIABLE     *|
|*     FOR ANY SPECIAL, INDIRECT, INCIDENTAL,  OR CONSEQUENTIAL DAMAGES,     *|
|*     OR ANY DAMAGES  WHATSOEVER  RESULTING  FROM LOSS OF USE,  DATA OR     *|
|*     PROFITS,  WHETHER IN AN ACTION  OF CONTRACT,  NEGLIGENCE OR OTHER     *|
|*     TORTIOUS ACTION, ARISING OUT  OF OR IN CONNECTION WITH THE USE OR     *|
|*     PERFORMANCE OF THIS SOURCE CODE.                                      *|
|*                                                                           *|
 \***************************************************************************/

/************************ NV4 HAL Defines and Structures *******************\
*                                                                           *
* Module: nv4_hal.h                                                         *
*       HAL interface defines and structures.                               *
*                                                                           *
*****************************************************************************
*                                                                           *
* History:                                                                  *
*                                                                           *
\***************************************************************************/

#include <nv4_gr.h>

//--------------------------------------------------------------------
// Mc
//--------------------------------------------------------------------

//
// *All* chip-dependent power state is stored here regardless
// of the engine to which it belongs.
//
typedef struct _def_mc_hal_power_info_nv04
{
    U032 PfbDebug0;
    U032 PfbBoot0;
    U032 PfbConfig0;
    U032 PfbConfig1;
    U032 PfifoRamHt;
    U032 PfifoRamFc;
    U032 PfifoRamRo;
} MCHALPOWERINFO_NV04, *PMCHALPOWERINFO_NV04;

typedef struct _def_mc_hal_info_nv04
{
    U032 SavePmc;
    U032 SaveIntrEn0;
    MCHALPOWERINFO_NV04 PowerInfo;
} MCHALINFO_NV04, *PMCHALINFO_NV04;

// chip id functions
BOOL IsNV4_NV04(PMCHALINFO);
BOOL IsNV5_NV04(PMCHALINFO);
BOOL IsNV0A_NV04(PMCHALINFO);
BOOL IsNV5orBetter_NV04(PMCHALINFO);

//--------------------------------------------------------------------
// Fifo
//--------------------------------------------------------------------

//
// 32 channels * 32 bytes each
//
#define NUM_FIFOS_NV04      16
#define FC_SIZE_NV04        32

typedef struct _def_fifo_hal_info_nv04 {
    U032 Mode;
    U032 InUse;
} FIFOHALINFO_NV04, *PFIFOHALINFO_NV04;

//--------------------------------------------------------------------
// Framebuffer
//--------------------------------------------------------------------

typedef struct _def_fb_hal_info_nv04
{
    U032 hashTableAddr;
    U032 hashTableSize;
    U032 fifoContextAddr;
    U032 fifoContextSize;
    U032 fifoRunoutAddr;
    U032 fifoRunoutSize;
    U032 fifoRunoutMask;
    U032 fbSave[2];
    U032 tilingDisabled;
    VOID *bufferBase;
} FBHALINFO_NV04, *PFBHALINFO_NV04;

//--------------------------------------------------------------------
// Graphics
//--------------------------------------------------------------------

//
// Graphics channel context switch data.
// 
typedef struct _def_graphics_channel_nv04
{
    //PCOMMONOBJECT       NotifyObject;
    U032                Notify;
    GRAPHICSPATCH_NV4   CurrentPatch;
    U032                Debug3;      // postdither_2d control
    U032                Exceptions;
    U032                ContextSwitch1;
    U032                ContextSwitch2;
    U032                ContextSwitch3;
    U032                ContextSwitch4;
    U032                ContextSwitch5;
    U032                ContextCache1[8];
    U032                ContextCache2[8];
    U032                ContextCache3[8];
    U032                ContextCache4[8];
    U032                ContextCache5[8];
#ifdef KJK
    PCOMMONOBJECT       CurrentObjects[8];
#endif
    U032                ContextUser;
    U032                DmaStart0;
    U032                DmaStart1;
    U032                DmaLength;
    U032                DmaMisc;
    U032                DmaPitch;
} GRAPHICSCHANNEL_NV04, *PGRAPHICSCHANNEL_NV04;

typedef struct _def_graphics_hal_info_nv04
{
    U032 Debug0;
    U032 Debug1;
    U032 Debug2;
    U032 Debug3;
    U032 currentChID;
    GRAPHICSCHANNEL_NV04 grChannels[NUM_FIFOS_NV04];
} GRHALINFO_NV04, *PGRHALINFO_NV04;

//--------------------------------------------------------------------
// Dac
//--------------------------------------------------------------------
typedef struct _def_dac_hal_info_nv04
{
    U032 foo;
} DACHALINFO_NV04, *PDACHALINFO_NV04;

//--------------------------------------------------------------------
// MediaPort
//--------------------------------------------------------------------

typedef struct _def_mp_hal_info_nv04
{
    VOID *CurrentDecompressor;
} MPHALINFO_NV04, *PMPHALINFO_NV04;

// c04dnv04.c interfaces
extern RM_STATUS class04DMethod_NV04(PMPMETHODARG_000);
extern RM_STATUS class04DGetEventStatus_NV04(PMPGETEVENTSTATUSARG_000);
extern RM_STATUS class04DServiceEvent_NV04(PMPSERVICEEVENTARG_000);

// c04env04.c interfaces
extern RM_STATUS class04EMethod_NV04(PMPMETHODARG_000);
extern RM_STATUS class04EGetEventStatus_NV04(PMPGETEVENTSTATUSARG_000);
extern RM_STATUS class04EServiceEvent_NV04(PMPSERVICEEVENTARG_000);

// c04fnv04.c interfaces
extern RM_STATUS class04FMethod_NV04(PMPMETHODARG_000);
extern RM_STATUS class04FGetEventStatus_NV04(PMPGETEVENTSTATUSARG_000);
extern RM_STATUS class04FServiceEvent_NV04(PMPSERVICEEVENTARG_000);

//--------------------------------------------------------------------
// Video
//--------------------------------------------------------------------

// vidnv04.c interfaces
extern RM_STATUS videoInit_NV04(PHALHWINFO, U032);
extern U016 videoConvertScaleFactor_NV04(S012d020);

// c047nv04.c interfaces
extern RM_STATUS class047Method_NV04(PVIDEOMETHODARG_000);
extern RM_STATUS class047InitXfer_NV04(PHALHWINFO, VOID *, U032);
extern RM_STATUS class047GetEventStatus_NV04(PVIDEOGETEVENTSTATUSARG_000);
extern RM_STATUS class047ServiceEvent_NV04(PVIDEOSERVICEEVENTARG_000);

// c63nv04.c interfaces
extern RM_STATUS class63Method_NV04(PVIDEOMETHODARG_000);
extern RM_STATUS class63InitXfer_NV04(PHALHWINFO, VOID *, U032);
extern VOID class63DualSurfaceDesktop_NV04(PHALHWINFO, U032);
extern RM_STATUS class63GetEventStatus_NV04(PVIDEOGETEVENTSTATUSARG_000);
extern RM_STATUS class63ServiceEvent_NV04(PVIDEOSERVICEEVENTARG_000);

// c64nv04.c interfaces
extern RM_STATUS class64Method_NV04(PVIDEOMETHODARG_000);

// c65nv04.c interfaces
extern RM_STATUS class65Method_NV04(PVIDEOMETHODARG_000);

#endif // _NV4_HAL_H_
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Microsoft Xbox (1.00.4400) [April 2002] [src]\private\ntos\video\nv20\drivers\resman\kernel\mc\nv\mcpower.c ===
/***************************************************************************\
|*                                                                           *|
|*        Copyright (c) 1993-2000 NVIDIA, Corp.  All rights reserved.        *|
|*                                                                           *|
|*     NOTICE TO USER:   The source code  is copyrighted under  U.S. and     *|
|*     international laws.   NVIDIA, Corp. of Sunnyvale, California owns     *|
|*     the copyright  and as design patents  pending  on the design  and     *|
|*     interface  of the NV chips.   Users and possessors of this source     *|
|*     code are hereby granted  a nonexclusive,  royalty-free  copyright     *|
|*     and  design  patent license  to use this code  in individual  and     *|
|*     commercial software.                                                  *|
|*                                                                           *|
|*     Any use of this source code must include,  in the user documenta-     *|
|*     tion and  internal comments to the code,  notices to the end user     *|
|*     as follows:                                                           *|
|*                                                                           *|
|*     Copyright (c) 1993-1997  NVIDIA, Corp.    NVIDIA  design  patents     *|
|*     pending in the U.S. and foreign countries.                            *|
|*                                                                           *|
|*     NVIDIA, CORP.  MAKES  NO REPRESENTATION ABOUT  THE SUITABILITY OF     *|
|*     THIS SOURCE CODE FOR ANY PURPOSE.  IT IS PROVIDED "AS IS" WITHOUT     *|
|*     EXPRESS OR IMPLIED WARRANTY OF ANY KIND.  NVIDIA, CORP. DISCLAIMS     *|
|*     ALL WARRANTIES  WITH REGARD  TO THIS SOURCE CODE,  INCLUDING  ALL     *|
|*     IMPLIED   WARRANTIES  OF  MERCHANTABILITY  AND   FITNESS   FOR  A     *|
|*     PARTICULAR  PURPOSE.   IN NO EVENT SHALL NVIDIA, CORP.  BE LIABLE     *|
|*     FOR ANY SPECIAL, INDIRECT, INCIDENTAL,  OR CONSEQUENTIAL DAMAGES,     *|
|*     OR ANY DAMAGES  WHATSOEVER  RESULTING  FROM LOSS OF USE,  DATA OR     *|
|*     PROFITS,  WHETHER IN AN ACTION  OF CONTRACT,  NEGLIGENCE OR OTHER     *|
|*     TORTIOUS ACTION, ARISING OUT  OF OR IN CONNECTION WITH THE USE OR     *|
|*     PERFORMANCE OF THIS SOURCE CODE.                                      *|
|*                                                                           *|
 \***************************************************************************/

/******************************************************************************
*
*   File: mcpower.c
*
*   Description:
*       This file contains the resource manager power management API.
*
******************************************************************************/

#include <nvrm.h>
#include <devinit.h>
#include "nvhw.h"
#include <nvagp.h>
#include <dac.h>

#define KERNEL_PM_STATE_CHANGE // Do in kernel state changes which used to be done in OS-specific section

// this define is in the chip-specific headers; it seems like it ought to go in nv_ref.h.
#define NV_PRMIO_RMA_PTR                                 0x00007104 /* RW-4R */

// For APM, slow down AGP data to slowest possible 
#define NV_PBUS_DEBUG_3_AGP_4X_NVCLK_SLOW  0x00000001   // NV_PBUS_DEBUG_3_AGP_4X_NVCLK data throttling for AGP


//
// Find our NV device on the PCI bus and enable MEM space accesses.
//
RM_STATUS
mcPowerRestorePCIIoMemSpace
(
    PHWINFO pDev
)
{
    VOID *handle;
    U008 bus, device;
    U016 vendorID, deviceID;
    U016 command;

    // do we already know our bus/device?
    if (pDev->Mapping.BusDevice == 0)
    {
        // we're checking all the device/funcs for the first 5 buses
        for (bus = 0; bus < 5; bus++)
        {
            for (device = 0; device < PCI_MAX_DEVICES; device++)
            {
                // read at bus, device (we're always function 0)
                handle = osPciInitHandle(bus, device, 0, &vendorID, &deviceID);
                if (!handle)
                    continue;

                if (vendorID != NV_PBUS_PCI_NV_0_VENDOR_ID_NVIDIA)
                    continue;

                // make sure we're a VGA device class
                if (osPciReadByte(handle, 0xB) != PCI_CLASS_DISPLAY_DEV)
                    continue;

                // if the BAR0 matches our PhysAddr, it's the correct device
                if (osPciReadDword(handle, PCI_BASE_ADDRESS_0) != pDev->Mapping.PhysAddr)
                    continue;

                // save our Bus and Device location
                pDev->Mapping.BusDevice = (bus << BUS_DEVICE_BUS_SHIFT) | device;
                RM_ASSERT(pDev->Mapping.BusDevice);    // expect this to be non-zero
                break;
            }
        }
    }

    if (pDev->Mapping.BusDevice == 0)
    {
        DBG_BREAKPOINT();
        return RM_ERROR;    // couldn't find it
    }

    bus =    (U008)(pDev->Mapping.BusDevice >> BUS_DEVICE_BUS_SHIFT);
    device = (U008)(pDev->Mapping.BusDevice & BUS_DEVICE_BUS_MASK);

    handle = osPciInitHandle(bus, device, 0, &vendorID, &deviceID);
    if (!handle)
    {
        DBG_BREAKPOINT();
        return RM_ERROR;    // couldn't create the handle
    }

    // restore IO/MEM space enables in our PCI config space
    command = osPciReadWord(handle, PCI_COMMAND);

    DBG_PRINT_STRING(DEBUGLEVEL_ERRORS,       "NVRM: Enabling IO/MEM Space via PCI Command:\n");
    DBG_PRINT_STRING_VALUE(DEBUGLEVEL_ERRORS, "NVRM: Bus: ", bus);
    DBG_PRINT_STRING_VALUE(DEBUGLEVEL_ERRORS, "NVRM: Device: ", device);
    DBG_PRINT_STRING_VALUE(DEBUGLEVEL_ERRORS, "      current  command: ", command);

    command &= ~0x3;        // clear existing bits
    command |= (U016)pDev->Power.PciIoMemSpace;
    osPciWriteWord(handle, PCI_COMMAND, command);

    DBG_PRINT_STRING_VALUE(DEBUGLEVEL_ERRORS, "      restored command: ", command);

    // verify we've been successful
    if (REG_RD_DRF(_PBUS, _PCI_NV_0, _VENDOR_ID) != NV_PBUS_PCI_NV_0_VENDOR_ID_NVIDIA)
    {
        DBG_PRINT_STRING(DEBUGLEVEL_ERRORS, "NVRM: Unable to Enable MEM Space Access\n");
        DBG_BREAKPOINT();
        return RM_ERROR;
    }

    return RM_OK;
}

//  Transition between power states
//  States are:
//  Level 0 - full on
//  Level 1 - slowed clocks
//  Level 2 - slowed clocks, mobile style (not all devices support)
//  Level 3 - very slow clocks, state saved (regs & instance memory)
RM_STATUS mcPowerState
(
    PHWINFO pDev, 
    U032    state,
    U032    Head
)
{
    U032 i, data, data32, status;
    U016 data16;
    U008 lock, retry = 0;
    U032 *fb_sv;
    BOOL   biosUsedToInit;
    U032    EAX, EBX, ECX, EDX;
    U032 /*M,N,P,*/ NVClkSlow, fpMode, NVClktemp;
    U008 lockA, lockB, cr3BhA, cr3BhB, cr2BhA, cr2BhB, data08;

    //
    // We have potential preemption issues in this code on MP systems
    // when accessing any of the indexed registers.  It's possible to take
    // an interrupt on another processor while we're in here and end up
    // with corrupted state.
    //
    // To avoid these races, we use the os{Enter,Exit}CriticalCode
    // routines to serialize these critical sections with other parts of
    // the RM that operate at interrupt level.
    //
    switch (state) 
    {
        case MC_POWER_LEVEL_0:          // power up
            DBG_PRINT_STRING(DEBUGLEVEL_TRACEINFO, "Power Level 0");

            //In Toshiba case, we resume to the system BIOS's choice of one
            // display, even if we were in clone mode when we shut down.  Yeesh.
            // In spanning mode, we use more convoluted logic.
//            pDev->Dac.DeviceProperties.InferAuxDev = FALSE;
            pDev->Dac.DeviceProperties.LastSwitchEvent = SWITCH_FROM_WINDOWS;

            switch (pDev->Power.State)  // procedure depends on what state we are transitioning from
            {
                case MC_POWER_LEVEL_1:
                    // Disable I/O broadcast mode for now to work around a
                    // a hardware bug that prevents us from reaching
                    // HeadB through privSpace with this enabled
                    FLD_WR_DRF_DEF(_PBUS, _DEBUG_1, _DISP_MIRROR, _DISABLE);

                    // turn clocks up
                    FLD_WR_DRF_DEF(_PRAMDAC, _TEST_CONTROL, _PWRDWN_DAC, _ON);
                    REG_WR32(NV_PRAMDAC_PLL_COEFF_SELECT, pDev->Power.coeff_select);

                    //Gradually step up nvclk
                    if (dacProgramNVClk(pDev) != RM_OK)
                    {
                        U032 M, N, P;

                        // Start with 50MHz
                        dacCalcMNP(pDev, 0, 5000, &M, &N, &P);
                        REG_WR32(NV_PRAMDAC_NVPLL_COEFF, DRF_NUM(_PRAMDAC, _NVPLL_COEFF, _MDIV, M) |
                                                         DRF_NUM(_PRAMDAC, _NVPLL_COEFF, _NDIV, N) |
                                                         DRF_NUM(_PRAMDAC, _NVPLL_COEFF, _PDIV, P));

                        // Move to 100MHz
                        dacCalcMNP(pDev, 0, 10000, &M, &N, &P);
                        REG_WR32(NV_PRAMDAC_NVPLL_COEFF, DRF_NUM(_PRAMDAC, _NVPLL_COEFF, _MDIV, M) |
                                                         DRF_NUM(_PRAMDAC, _NVPLL_COEFF, _NDIV, N) |
                                                         DRF_NUM(_PRAMDAC, _NVPLL_COEFF, _PDIV, P));

                        // Program final
                        REG_WR32(NV_PRAMDAC_NVPLL_COEFF, pDev->Power.nvpll);         // nvclk
                    }

                    REG_WR32(NV_PRAMDAC_MPLL_COEFF, pDev->Power.mpll);           // mclk
                    
                    nvHalMcPower(pDev, MC_POWER_LEVEL_0, pDev->Power.State);

                    //Re-detect devices on return from standby for non-Toshiba mobiles.
                    if (pDev->Power.MobileOperation && !(pDev->Dac.DeviceProperties.OverrideSBIOSDevs)) {
                        osEnterCriticalCode(pDev);
                        dacDetectDevices(pDev, FALSE, TRUE);
                        osExitCriticalCode(pDev);
                    }

                    //turn on backlight (if either head is the flat panel)
                    if ((pDev->Power.MobileOperation == 2) && ((GETDISPLAYTYPE(pDev, 0) == DISPLAY_TYPE_FLAT_PANEL) ||
                                                               (GETDISPLAYTYPE(pDev, 1) == DISPLAY_TYPE_FLAT_PANEL)))
                    {
                        status = dacBacklightOnMobilePanel(pDev);
                        if (status)
                            break;
                        pDev->Dac.DevicesEnabled |= DAC_PANEL_ENABLED;
                    }
                    
                    // Turn on sequencer. We cannot rely on display driver doing a config_VGA to set the mode.
                    osEnterCriticalCode(pDev);
                    WriteIndexed(NV_PRMVIO_SRX, 0x0101);
                    osExitCriticalCode(pDev);

                    pDev->Power.State = MC_POWER_LEVEL_0;
                    pDev->DeviceDisabled = FALSE;     // let ISR handle interrupts
                    break;
                
                case MC_POWER_LEVEL_2:
                    // Power level for standby on mobile systems

                    // Turn back on our PCI IO/MEM space
                    mcPowerRestorePCIIoMemSpace(pDev);

                    // Disable I/O broadcast mode for now to work around a
                    // a hardware bug that prevents us from reaching
                    // HeadB through privSpace with this enabled
                    FLD_WR_DRF_DEF(_PBUS, _DEBUG_1, _DISP_MIRROR, _DISABLE);

                    data32 = (pDev->Power.PbusDebug1 & ~(SF_DEF(_PBUS, _DEBUG_1_IDDQ, _ONE)));
                    REG_WR32(NV_PBUS_DEBUG_1, data32);

                    osDelay(2); // wait 2 ms

                    data32 &= ~(SF_DEF(_PBUS, _DEBUG_1_PLL_STOPCLK, _ENABLE));
                    REG_WR32(NV_PBUS_DEBUG_1, data32);

                    //It is possible that the TMDS link programming could 
                    //get messed up. This happens rather frequently when
                    //resuming from Hibernation on Win98 (Compal namely).
                    //We should power off the panel so it can be powered
                    //on later. This ensure the TMDS links get programmed
                    //correctly.
                    if (pDev->Power.MobileOperation)
                    {
                        osEnterCriticalCode(pDev);
                        lockB = UnlockCRTC(pDev, 1);
                        CRTC_RD(0x3B, cr3BhB, 1);
                        RestoreLock(pDev, 1, lockB);
                        osExitCriticalCode(pDev);

                        if (cr3BhB & 0x10)
                        {
                            U032 tempPowerFlags = pDev->Power.Flags & DAC_POWER_PENDING;

                            pDev->Dac.DevicesEnabled |= DAC_PANEL_ENABLED;
                            pDev->Power.Flags &= ~DAC_POWER_PENDING;
                            dacPowerOffMobilePanel(pDev, Head);
                            //restore original seetings for power flags.
                            pDev->Power.Flags |= tempPowerFlags;
                        }
                    }

                    // restore the fifo context in case the VBIOS was POSTed.
                    nvHalFbControl(pDev, FB_CONTROL_INSTWR_ENABLE);
                    nvHalMcPower(pDev, MC_POWER_LEVEL_0, pDev->Power.State);

                    // Make sure fb_save is not NULL
                    if (pDev->fb_save != 0)
                    {
                        // copy from save area to framebuffer instance memory
                        fb_sv = pDev->fb_save;

                        for(i=0; i < pDev->Pram.HalInfo.TotalInstSize / 4; i++)
                        {
                            data = *fb_sv++;
                            REG_WR32(NV_PRAMIN_DATA032(i), data);
                        }            
                        osFreeMem((VOID *)pDev->fb_save);
                        pDev->fb_save = 0;
                    }
                    
                    pDev->Power.State = MC_POWER_LEVEL_0;
                    
                    // now we are powered up
                    
                    // leave the real mode access window pointing to a safe place.
                    osEnterCriticalCode(pDev);
                    REG_WR32(NV_PRMIO_RMA_PTR, NV_CONFIG_PCI_NV_0); // point to revision reg
                    EnableHead(pDev, Head);                         // ensure I/O is directed to head 0
                    lock = UnlockCRTC(pDev, Head);
                    CRTC_WR(NV_CIO_CRE_RMA__INDEX, 0, Head);        // set index mode to be safe
                    RestoreLock(pDev, Head, lock);
                    osExitCriticalCode(pDev);
                    
                    //Re-detect devices on return from standby for non-Toshiba mobiles.
                    if (pDev->Power.MobileOperation && !(pDev->Dac.DeviceProperties.OverrideSBIOSDevs)) {
                        osEnterCriticalCode(pDev);
                        dacDetectDevices(pDev, FALSE, TRUE);
                        osExitCriticalCode(pDev);
                    }

                    // Here, we assume that all devices are turned off on non-Toshiba Mobiles
                    if((pDev->Power.MobileOperation) && (pDev->Power.MobileOperation != 2))
                        pDev->Dac.DevicesEnabled &= ~(DAC_ALL_DEVICES_ENABLED);

                    //Turn off DFP backlight
                    // This should be before the reset. The reset will turn off the 
                    // pixel clocks and start the LCD blooming.
                    if (pDev->Power.MobileOperation)
                    {
                        status = dacBacklightOffMobilePanel(pDev);
                        if (status)
                            break;
                    }

                    // now we are powered up
                    break;
                case MC_POWER_LEVEL_3:
                case MC_POWER_LEVEL_7:
                    // turn off bus master before resetting master enable
                    // else we may get spurious bus master cycles 
                        data32 = REG_RD32(NV_PBUS_PCI_NV_1);
                        FLD_WR_DRF_DEF(_PBUS, _PCI_NV_1, _BUS_MASTER, _DISABLED);

                        if (pDev->Power.MobileOperation) {
                            //Is it safe to make this call this early?  Probably not.
                            EAX = 0x4F14;       // VESA EDID function
                            EBX = 0x8002;       // set center/scale mode
                            ECX = 0;
                            EDX = 0;
                            status = osCallVideoBIOS(pDev, &EAX, &EBX, &ECX, &EDX, NULL);
                            if (status == RM_OK) {
                                if ((ECX & 0x0000FFFF ) == 1)
                                    fpMode = NV_PRAMDAC_FP_TG_CONTROL_MODE_CENTER;
                                else
                                    fpMode = NV_PRAMDAC_FP_TG_CONTROL_MODE_SCALE;
                            }
                            else {
                                fpMode = NV_PRAMDAC_FP_TG_CONTROL_MODE_SCALE;
                            }
                        }

                    

                    //Turn off DFP backlight
                    // This should be before the reset. The reset will turn off the 
                    // pixel clocks and start the LCD blooming.
                    if (pDev->Power.MobileOperation)
                    {
                        dacBacklightOffMobilePanel(pDev);
                    }


                    //Program PLL_COEFF_SELECT to 0 to get NVCLK and MCLK back to default
                    //values. On i850 chipset with NV5 the programmed slowed down values
                    //can result in sufficient delays on register reads to cause the host to
                    //hang the bus.
                    REG_WR32(NV_PRAMDAC_PLL_COEFF_SELECT, 0);

                    REG_WR32(NV_PTIMER_NUMERATOR, pDev->Timer.Numerator);     
                    REG_WR32(NV_PTIMER_DENOMINATOR, pDev->Timer.Denominator);

                    // Wait 10 ms to allow PLL to lock.
                    // HW guy says 1 ms should be enough.
                    // In fact, very small delay seems to do it.
                    tmrDelay(pDev, 10000000); 

                    if (pDev->Power.MobileOperation != 1) //if not Dell (causes hang in ACPI)
                    {
                        // Reset the chip, in case the HW didn't.
                        REG_WR32(NV_PMC_ENABLE, 0);
                        REG_RD32(NV_PMC_ENABLE);
                        REG_RD32(NV_PMC_ENABLE);

                        REG_WR32(NV_PMC_ENABLE, -1);
                        REG_RD32(NV_PMC_ENABLE);
                        REG_RD32(NV_PMC_ENABLE);

                        // Make sure that we know we've reset the device
                        // If we try to power on the flat panel without running the reset
                        // scripts, the flat panel will bloom.
                        pDev->Dac.DevicesEnabled |= DAC_PANEL_CLK_RESET;
                    }

                    // restore bus master enable
                    REG_WR32(NV_PBUS_PCI_NV_1, data32);

                    // Disable I/O broadcast mode for now to work around a
                    // a hardware bug that prevents us from reaching
                    // HeadB through privSpace with this enabled
                    FLD_WR_DRF_DEF(_PBUS, _DEBUG_1, _DISP_MIRROR, _DISABLE);

                    // turn DAC on
                    REG_WR32(NV_PRAMDAC_TEST_CONTROL, 0); // make sure test modes are off!
                    FLD_WR_DRF_DEF(_PRAMDAC, _TEST_CONTROL, _PWRDWN_DAC, _OFF); // leave output off

                    // Delay for a while before initializing chip; verify strap register is reading correctly.
                    // Note: it's not just incorrect strap values which cause the problem; without the delay,
                    // the problem still occurs, even if correct strap values are used to init.
                    // (else memory is not correctly init'd. Occurs on Dell Magellan (i820 chipset). Does not occur on rel4.)
               
                    while (REG_RD32(NV_PEXTDEV_BOOT_0) != pDev->Power.strapInfo) 
                    {
                        for (i=0; i<2000; i++) 
                        {
                            REG_RD32(NV_PMC_ENABLE);
                        }
                        REG_WR32(NV_PEXTDEV_BOOT_0, pDev->Power.strapInfo);    // WRITE STRAP REG
                        retry++;
                        if (retry == D0_DELAY_RETRIES) 
                            break;
                    }

                    //A hack, part A: read the CR3B registers before we re-POST the BIOS,
                    // because that overwrites the scratch registers.  Note that we can't
                    // just cache these registers on shutdown, because at power-up the
                    // system BIOS may have a different opinion about what displays are
                    // available and should be enabled.

                    //A hack, partA.1: it appears the CR2B also gets stomped on durring
                    //re-POST. CR2B[7:4] indicate which vga modes are valid. This is used
                    //for Toshiba when displaying a vga graphic when going into Hibernation
                    //on Win98.
                    if (pDev->Power.MobileOperation) {
                        osEnterCriticalCode(pDev);
                        lockA = UnlockCRTC(pDev, 0);
                        lockB = UnlockCRTC(pDev, 1);
                        CRTC_RD(0x3B, cr3BhA, 0);
                        CRTC_RD(0x3B, cr3BhB, 1);
                        CRTC_RD(0x2B, cr2BhA, 0);
                        CRTC_RD(0x2B, cr2BhB, 1);
                        RestoreLock(pDev, 0, lockA);
                        RestoreLock(pDev, 1, lockB);
                        osExitCriticalCode(pDev);
                    }

                    //Dac.HalInfo.NVClk will be reinitialized durring DevinitInitializeDevice
                    //save this value away so we keep the current clock setting. This only
                    //becomes an issue if the user has changed the default NVCLK via
                    //overclocking Control Panel controls.
                    NVClktemp = pDev->Dac.HalInfo.NVClk;

                    // Make sure fb_save is not NULL
                    if (pDev->fb_save != 0)
                    {
                        // POST the device using BIOS init tables
                        DevinitInitializeDevice(pDev, (PHWREG)pDev->fb_save, &biosUsedToInit);
                    }

                    pDev->Dac.HalInfo.NVClk = NVClktemp;

                    //A hack, part B: write the CR3B registers back post-POST.
                    // We read them immediately before the init.
                    if (pDev->Power.MobileOperation) {
                        //Stomp back in the CR3B values:
                        osEnterCriticalCode(pDev);
                        lockA = UnlockCRTC(pDev, 0);
                        lockB = UnlockCRTC(pDev, 1);
                        CRTC_WR(0x3B, cr3BhA, 0);
                        CRTC_WR(0x3B, cr3BhB, 1);
                        CRTC_WR(0x2B, cr2BhA, 0);
                        CRTC_WR(0x2B, cr2BhB, 1);
                        RestoreLock(pDev, 0, lockA);
                        RestoreLock(pDev, 1, lockB);
                        osExitCriticalCode(pDev);
                    }

                    // turn clocks up
                    REG_WR32(NV_PRAMDAC_PLL_COEFF_SELECT, pDev->Power.coeff_select);

                    //Gradually step up nvclk
                    if (dacProgramNVClk(pDev) != RM_OK)
                    {
                        U032 M, N, P;
                        
                        // Start with 50MHz
                        dacCalcMNP(pDev, 0, 5000, &M, &N, &P);
                        REG_WR32(NV_PRAMDAC_NVPLL_COEFF, DRF_NUM(_PRAMDAC, _NVPLL_COEFF, _MDIV, M) |
                                                         DRF_NUM(_PRAMDAC, _NVPLL_COEFF, _NDIV, N) |
                                                         DRF_NUM(_PRAMDAC, _NVPLL_COEFF, _PDIV, P));
                        
                        // Move to 100MHz
                        dacCalcMNP(pDev, 0, 10000, &M, &N, &P);
                        REG_WR32(NV_PRAMDAC_NVPLL_COEFF, DRF_NUM(_PRAMDAC, _NVPLL_COEFF, _MDIV, M) |
                                                         DRF_NUM(_PRAMDAC, _NVPLL_COEFF, _NDIV, N) |
                                                         DRF_NUM(_PRAMDAC, _NVPLL_COEFF, _PDIV, P));

                        // Program final
                        REG_WR32(NV_PRAMDAC_NVPLL_COEFF, pDev->Power.nvpll);         // nvclk
                    }

                    //
                    // For NV20, we let the HAL restore our mclk setting.
                    //
                    // XXXscottl - we should really let the  HAL do this for
                    // all chips.
                    //
                    if (!IsNV20orBetter(pDev))
                    {
                        U032 M, N, P;
                        
                        // Start with 50MHz
                        dacCalcMNP(pDev, 0, 5000, &M, &N, &P);
                        REG_WR32(NV_PRAMDAC_MPLL_COEFF, DRF_NUM(_PRAMDAC, _MPLL_COEFF, _MDIV, M) |
                                                        DRF_NUM(_PRAMDAC, _MPLL_COEFF, _NDIV, N) |
                                                        DRF_NUM(_PRAMDAC, _MPLL_COEFF, _PDIV, P));
                        
                        // Move to 100MHz
                        dacCalcMNP(pDev, 0, 10000, &M, &N, &P);
                        REG_WR32(NV_PRAMDAC_MPLL_COEFF, DRF_NUM(_PRAMDAC, _MPLL_COEFF, _MDIV, M) |
                                                        DRF_NUM(_PRAMDAC, _MPLL_COEFF, _NDIV, N) |
                                                        DRF_NUM(_PRAMDAC, _MPLL_COEFF, _PDIV, P));
                        
                        // Program final
                        REG_WR32(NV_PRAMDAC_MPLL_COEFF, pDev->Power.mpll);           // mclk
                    }

                    // restore timer before attempting delay
                    REG_WR32(NV_PTIMER_NUMERATOR, pDev->Timer.Numerator);     
                    REG_WR32(NV_PTIMER_DENOMINATOR, pDev->Timer.Denominator);

                    // Wait 10 ms to allow PLL to lock.
                    // HW guy says 1 ms should be enough.
                    // In fact, very small delay seems to do it.
                    tmrDelay(pDev, 10000000); 
                                                
                    if (pDev == NvDBPtr_Table[0]) // if primary
                        // enable VGA I/O
                        REG_WR08(NV_PRMVIO_VSE2, 0x01);
                    // the chip may come up with instance memory write protected! Make sure its not.
                    nvHalFbControl(pDev, FB_CONTROL_INSTWR_ENABLE);
                    nvHalMcPower(pDev, MC_POWER_LEVEL_0, pDev->Power.State);
                    // allow any further PLL changes to settle
                    tmrDelay(pDev, 2000000);    // 2ms

                    // restore critical registers lost during power down
                    REG_WR32(NV_PMC_ENABLE, pDev->Master.Enable);
                    //REG_WR32(NV_PBUS_PCI_NV_19, pDev->Master.PciNv19);    // not needed, now
                    // that we call nvUpdateAGPConfig (and dangerous, since FW could get re-enabled
                    // without re-enabling it in the motherboard chipset)

                    // next the display driver will get the foreground switch message, which calls rmEnableHires
                    // this starts us up again

                    //LPL: the 440BX-specific hack above to restore AGP registers
                    //can almost be removed.  The call below takes care of all the
                    //details (for more chipsets) except the register $50 issue.
                    NvUpdateAGPConfig(pDev);

                    // Make sure fb_save is not NULL
                    if (pDev->fb_save != 0)
                    {
                        // copy from save area to framebuffer instance memory
                        fb_sv = pDev->fb_save;

                        for(i=0; i < pDev->Pram.HalInfo.TotalInstSize / 4; i++)
                        {
                            data = *fb_sv++;
                            REG_WR32(NV_PRAMIN_DATA032(i), data);
                        }            
                        osFreeMem((VOID *)pDev->fb_save);
                        pDev->fb_save = 0;
                    }

                    pDev->DeviceDisabled = FALSE;     // let ISR handle interrupts

                    if (pDev->Power.MobileOperation) {
                        //Restore centered/scaled state.  We set both heads, as in
                        //dacSetFlatPanelScaling.
                        DAC_FLD_WR_DRF_NUM(_PRAMDAC, _FP_TG_CONTROL, _MODE, fpMode, 0);
                        DAC_FLD_WR_DRF_NUM(_PRAMDAC, _FP_TG_CONTROL, _MODE, fpMode, 1);
                    }

//                    pDev->Dac.DeviceProperties.InferAuxDev = FALSE;
                    pDev->Dac.DeviceProperties.LastSwitchEvent = SWITCH_FROM_COLD_START;
//                    dacDetectDevices(pDev, FALSE, pDev->Dac.DeviceProperties.OverrideSBIOSDevs);
                    dacDetectDevices(pDev, FALSE, TRUE);

                    // Here, we assume that all devices are turned off
                    pDev->Dac.DevicesEnabled &= ~(DAC_ALL_DEVICES_ENABLED);
 
                    //Restore Spread Spectrum settings
                    if (pDev->Power.MobileOperation) 
                    {
                        // only return the portion of GIPO that relates to spread spectrum
                        // leave the rest as is so that the panel doesn't get inadvertantly turned
                        // on before it is meant to.
                        // Look at all them bit masks!  Unfortunately, there isn't a single definition
                        // for all of GPIO_EXT_5, so I have to use the definitions for each bit field.
                        data32 = REG_RD32(NV_PCRTC_GPIO_EXT);
                        data32 &= ~((DRF_MASK(NV_PCRTC_GPIO_EXT_5_OUTPUT) << DRF_SHIFT(NV_PCRTC_GPIO_EXT_5_OUTPUT))
                               |    (DRF_MASK(NV_PCRTC_GPIO_EXT_5_ENABLE) << DRF_SHIFT(NV_PCRTC_GPIO_EXT_5_ENABLE))
                               |    (DRF_MASK(NV_PCRTC_GPIO_EXT_5_INPUT)  << DRF_SHIFT(NV_PCRTC_GPIO_EXT_5_INPUT)));

                        data32 |= (pDev->Power.GPIOExt & ((DRF_MASK(NV_PCRTC_GPIO_EXT_5_OUTPUT) << DRF_SHIFT(NV_PCRTC_GPIO_EXT_5_OUTPUT)) 
                                                       |  (DRF_MASK(NV_PCRTC_GPIO_EXT_5_ENABLE) << DRF_SHIFT(NV_PCRTC_GPIO_EXT_5_ENABLE)) 
                                                       |  (DRF_MASK(NV_PCRTC_GPIO_EXT_5_INPUT)  << DRF_SHIFT(NV_PCRTC_GPIO_EXT_5_INPUT))));

                        REG_WR32(NV_PCRTC_GPIO_EXT, data32);

                        osEnterCriticalCode(pDev);
                        lockA = UnlockCRTC(pDev, 0);
                        lockB = UnlockCRTC(pDev, 1);
                        CRTC_WR(0x51, pDev->Power.cr51hA, 0);
                        CRTC_WR(0x51, pDev->Power.cr51hB, 1);
                        RestoreLock(pDev, 0, lockA);
                        RestoreLock(pDev, 1, lockB);
                        osExitCriticalCode(pDev);
                    }

                    //
                    // Restore any neccessary agp chipset registers when coming out of hibernation.
                    //
                    if (pDev->Power.State == MC_POWER_LEVEL_7)
                        NvSaveRestoreAGPChipset(pDev, MC_POWER_LEVEL_0);

                    break;

            case MC_POWER_LEVEL_4:
                if (pDev->Power.MobileOperation) 
                {
                    // turn off bus master before resetting master enable
                    // else we may get spurious bus master cycles 

                        /*if (pDev->Power.MobileOperation) {
                            //Is it safe to make this call this early?  Probably not.
                            EAX = 0x4F14;       // VESA EDID function
                            EBX = 0x8002;       // set center/scale mode
                            ECX = 0;
                            EDX = 0;
                            status = osCallVideoBIOS(pDev, &EAX, &EBX, &ECX, &EDX, NULL);
                            if (status == RM_OK) {
                                if ((ECX & 0x0000FFFF ) == 1)
                                    fpMode = NV_PRAMDAC_FP_TG_CONTROL_MODE_CENTER;
                                else
                                    fpMode = NV_PRAMDAC_FP_TG_CONTROL_MODE_SCALE;
                            }
                            else {
                                fpMode = NV_PRAMDAC_FP_TG_CONTROL_MODE_SCALE;
                            }
                        } */

                    

                    //Turn off DFP backlight
                    // This should be before the reset. The reset will turn off the 
                    // pixel clocks and start the LCD blooming.
                    if (pDev->Power.MobileOperation)
                    {
                        dacBacklightOffMobilePanel(pDev);
                    }


                    //Program PLL_COEFF_SELECT to 0 to get NVCLK and MCLK back to default
                    //values. On i850 chipset with NV5 the programmed slowed down values
                    //can result in sufficient delays on register reads to cause the host to
                    //hang the bus.
                    REG_WR32(NV_PRAMDAC_PLL_COEFF_SELECT, 0);

                    REG_WR32(NV_PTIMER_NUMERATOR, pDev->Timer.Numerator);     
                    REG_WR32(NV_PTIMER_DENOMINATOR, pDev->Timer.Denominator);

                    // Wait 10 ms to allow PLL to lock.
                    // HW guy says 1 ms should be enough.
                    // In fact, very small delay seems to do it.
                    tmrDelay(pDev, 10000000); 

                    {
                        /*U032 PCI_NV19;

                        data32 = REG_RD32(NV_PBUS_PCI_NV_1);
                        FLD_WR_DRF_DEF(_PBUS, _PCI_NV_1, _BUS_MASTER, _DISABLED);
                        PCI_NV19 = REG_RD32(NV_PBUS_PCI_NV_19);
                        FLD_WR_DRF_DEF(_PBUS, _PCI_NV_19, _AGP_COMMAND_AGP_ENABLE, _OFF);
						*/

                            // Reset the chip, in case the HW didn't.
                            REG_WR32(NV_PMC_ENABLE, 0);
                            REG_RD32(NV_PMC_ENABLE);
                            REG_RD32(NV_PMC_ENABLE);

                            REG_WR32(NV_PMC_ENABLE, -1);
                            REG_RD32(NV_PMC_ENABLE);
                            REG_RD32(NV_PMC_ENABLE);

                            // Make sure that we know we've reset the device
                            // If we try to power on the flat panel without running the reset
                            // scripts, the flat panel will bloom.
                            pDev->Dac.DevicesEnabled |= DAC_PANEL_CLK_RESET;

                        // restore bus master enable
                        //REG_WR32(NV_PBUS_PCI_NV_1, data32);
                       // REG_WR32(NV_PBUS_PCI_NV_19, PCI_NV19);
                    }
                    // Disable I/O broadcast mode for now to work around a
                    // a hardware bug that prevents us from reaching
                    // HeadB through privSpace with this enabled
                    FLD_WR_DRF_DEF(_PBUS, _DEBUG_1, _DISP_MIRROR, _DISABLE);

                    // turn DAC on
                    REG_WR32(NV_PRAMDAC_TEST_CONTROL, 0); // make sure test modes are off!
                    FLD_WR_DRF_DEF(_PRAMDAC, _TEST_CONTROL, _PWRDWN_DAC, _OFF); // leave output off

                    // Delay for a while before initializing chip; verify strap register is reading correctly.
                    // Note: it's not just incorrect strap values which cause the problem; without the delay,
                    // the problem still occurs, even if correct strap values are used to init.
                    // (else memory is not correctly init'd. Occurs on Dell Magellan (i820 chipset). Does not occur on rel4.)
               
                    while (REG_RD32(NV_PEXTDEV_BOOT_0) != pDev->Power.strapInfo) 
                    {
                        for (i=0; i<2000; i++) 
                        {
                            REG_RD32(NV_PMC_ENABLE);
                        }
                        REG_WR32(NV_PEXTDEV_BOOT_0, pDev->Power.strapInfo);    // WRITE STRAP REG
                        retry++;
                        if (retry == D0_DELAY_RETRIES) 
                            break;
                    }

                    //A hack, part A: read the CR3B registers before we re-POST the BIOS,
                    // because that overwrites the scratch registers.  Note that we can't
                    // just cache these registers on shutdown, because at power-up the
                    // system BIOS may have a different opinion about what displays are
                    // available and should be enabled.

                    //A hack, partA.1: it appears the CR2B also gets stomped on durring
                    //re-POST. CR2B[7:4] indicate which vga modes are valid. This is used
                    //for Toshiba when displaying a vga graphic when going into Hibernation
                    //on Win98.
                    if (pDev->Power.MobileOperation) {
                        osEnterCriticalCode(pDev);
                        lockA = UnlockCRTC(pDev, 0);
                        lockB = UnlockCRTC(pDev, 1);
                        CRTC_RD(0x3B, cr3BhA, 0);
                        CRTC_RD(0x3B, cr3BhB, 1);
                        CRTC_RD(0x2B, cr2BhA, 0);
                        CRTC_RD(0x2B, cr2BhB, 1);
                        RestoreLock(pDev, 0, lockA);
                        RestoreLock(pDev, 1, lockB);
                        osExitCriticalCode(pDev);
                    }

                    //Dac.HalInfo.NVClk will be reinitialized durring DevinitInitializeDevice
                    //save this value away so we keep the current clock setting. This only
                    //becomes an issue if the user has changed the default NVCLK via
                    //overclocking Control Panel controls.
                    NVClktemp = pDev->Dac.HalInfo.NVClk;

                    // Make sure fb_save is not NULL
                    if (pDev->fb_save != 0)
                    {
                        // POST the device using BIOS init tables
                        DevinitInitializeDevice(pDev, (PHWREG)pDev->fb_save, &biosUsedToInit);
                    }

                    pDev->Dac.HalInfo.NVClk = NVClktemp;

                    //A hack, part B: write the CR3B registers back post-POST.
                    // We read them immediately before the init.
                    if (pDev->Power.MobileOperation) {
                        //Stomp back in the CR3B values:
                        osEnterCriticalCode(pDev);
                        lockA = UnlockCRTC(pDev, 0);
                        lockB = UnlockCRTC(pDev, 1);
                        CRTC_WR(0x3B, cr3BhA, 0);
                        CRTC_WR(0x3B, cr3BhB, 1);
                        CRTC_WR(0x2B, cr2BhA, 0);
                        CRTC_WR(0x2B, cr2BhB, 1);
                        RestoreLock(pDev, 0, lockA);
                        RestoreLock(pDev, 1, lockB);
                        osExitCriticalCode(pDev);
                    }

                    // turn clocks up
                    REG_WR32(NV_PRAMDAC_PLL_COEFF_SELECT, pDev->Power.coeff_select);

                    //Gradually step up nvclk
                    if (dacProgramNVClk(pDev) != RM_OK)
                    {
                        U032 M, N, P;
                        
                        // Start with 50MHz
                        dacCalcMNP(pDev, 0, 5000, &M, &N, &P);
                        REG_WR32(NV_PRAMDAC_NVPLL_COEFF, DRF_NUM(_PRAMDAC, _NVPLL_COEFF, _MDIV, M) |
                                                         DRF_NUM(_PRAMDAC, _NVPLL_COEFF, _NDIV, N) |
                                                         DRF_NUM(_PRAMDAC, _NVPLL_COEFF, _PDIV, P));
                        
                        // Move to 100MHz
                        dacCalcMNP(pDev, 0, 10000, &M, &N, &P);
                        REG_WR32(NV_PRAMDAC_NVPLL_COEFF, DRF_NUM(_PRAMDAC, _NVPLL_COEFF, _MDIV, M) |
                                                         DRF_NUM(_PRAMDAC, _NVPLL_COEFF, _NDIV, N) |
                                                         DRF_NUM(_PRAMDAC, _NVPLL_COEFF, _PDIV, P));

                        // Program final
                        REG_WR32(NV_PRAMDAC_NVPLL_COEFF, pDev->Power.nvpll);         // nvclk
                    }

                    //
                    // For NV20, we let the HAL restore our mclk setting.
                    //
                    // XXXscottl - we should really let the  HAL do this for
                    // all chips.
                    //
                    if (!IsNV20orBetter(pDev))
                    {
                        U032 M, N, P;
                        
                        // Start with 50MHz
                        dacCalcMNP(pDev, 0, 5000, &M, &N, &P);
                        REG_WR32(NV_PRAMDAC_MPLL_COEFF, DRF_NUM(_PRAMDAC, _MPLL_COEFF, _MDIV, M) |
                                                        DRF_NUM(_PRAMDAC, _MPLL_COEFF, _NDIV, N) |
                                                        DRF_NUM(_PRAMDAC, _MPLL_COEFF, _PDIV, P));
                        
                        // Move to 100MHz
                        dacCalcMNP(pDev, 0, 10000, &M, &N, &P);
                        REG_WR32(NV_PRAMDAC_MPLL_COEFF, DRF_NUM(_PRAMDAC, _MPLL_COEFF, _MDIV, M) |
                                                        DRF_NUM(_PRAMDAC, _MPLL_COEFF, _NDIV, N) |
                                                        DRF_NUM(_PRAMDAC, _MPLL_COEFF, _PDIV, P));
                        
                        // Program final
                        REG_WR32(NV_PRAMDAC_MPLL_COEFF, pDev->Power.mpll);           // mclk
                    }

                    // restore timer before attempting delay
                    REG_WR32(NV_PTIMER_NUMERATOR, pDev->Timer.Numerator);     
                    REG_WR32(NV_PTIMER_DENOMINATOR, pDev->Timer.Denominator);

                    // Wait 10 ms to allow PLL to lock.
                    // HW guy says 1 ms should be enough.
                    // In fact, very small delay seems to do it.
                    tmrDelay(pDev, 10000000); 
                                                
                    if (pDev == NvDBPtr_Table[0]) // if primary
                        // enable VGA I/O
                        REG_WR08(NV_PRMVIO_VSE2, 0x01);
                    // the chip may come up with instance memory write protected! Make sure its not.
                    nvHalFbControl(pDev, FB_CONTROL_INSTWR_ENABLE);
                    // come out of what LOOKS like Hal power level 3 (Mobile 4) into 0
                    nvHalMcPower(pDev, MC_POWER_LEVEL_0, MC_POWER_LEVEL_3);
                    // allow any further PLL changes to settle
                    tmrDelay(pDev, 2000000);    // 2ms

                    // restore critical registers lost during power down
                    REG_WR32(NV_PMC_ENABLE, pDev->Master.Enable);
                    //REG_WR32(NV_PBUS_PCI_NV_19, pDev->Master.PciNv19);    // not needed, now
                    // that we call nvUpdateAGPConfig (and dangerous, since FW could get re-enabled
                    // without re-enabling it in the motherboard chipset)

                    // next the display driver will get the foreground switch message, which calls rmEnableHires
                    // this starts us up again

                    //LPL: the 440BX-specific hack above to restore AGP registers
                    //can almost be removed.  The call below takes care of all the
                    //details (for more chipsets) except the register $50 issue.
                    NvUpdateAGPConfig(pDev);

                    // Make sure fb_save is not NULL
                    if (pDev->fb_save != 0)
                    {
                        // copy from save area to framebuffer instance memory
                        fb_sv = pDev->fb_save;

                        for(i=0; i < pDev->Pram.HalInfo.TotalInstSize / 4; i++)
                        {
                            data = *fb_sv++;
                            REG_WR32(NV_PRAMIN_DATA032(i), data);
                        }            
                        osFreeMem((VOID *)pDev->fb_save);
                        pDev->fb_save = 0;
                    }

                    pDev->DeviceDisabled = FALSE;     // let ISR handle interrupts

#if 0
                    if (pDev->Power.MobileOperation) {
                        //Restore centered/scaled state.  We set both heads, as in
                        //dacSetFlatPanelScaling.
                        DAC_FLD_WR_DRF_NUM(_PRAMDAC, _FP_TG_CONTROL, _MODE, fpMode, 0);
                        DAC_FLD_WR_DRF_NUM(_PRAMDAC, _FP_TG_CONTROL, _MODE, fpMode, 1);
                    }
#endif

//                    pDev->Dac.DeviceProperties.InferAuxDev = FALSE;
                    pDev->Dac.DeviceProperties.LastSwitchEvent = SWITCH_FROM_COLD_START;
//                    dacDetectDevices(pDev, FALSE, pDev->Dac.DeviceProperties.OverrideSBIOSDevs);
                    dacDetectDevices(pDev, FALSE, TRUE);

                    // Here, we assume that all devices are turned off
                    pDev->Dac.DevicesEnabled &= ~(DAC_ALL_DEVICES_ENABLED);
 
                    //Restore Spread Spectrum settings
                    if (pDev->Power.MobileOperation) 
                    {
                        // only return the portion of GIPO that relates to spread spectrum
                        // leave the rest as is so that the panel doesn't get inadvertantly turned
                        // on before it is meant to.
                        // Look at all them bit masks!  Unfortunately, there isn't a single definition
                        // for all of GPIO_EXT_5, so I have to use the definitions for each bit field.
                        data32 = REG_RD32(NV_PCRTC_GPIO_EXT);
                        data32 &= ~((DRF_MASK(NV_PCRTC_GPIO_EXT_5_OUTPUT) << DRF_SHIFT(NV_PCRTC_GPIO_EXT_5_OUTPUT))
                               |    (DRF_MASK(NV_PCRTC_GPIO_EXT_5_ENABLE) << DRF_SHIFT(NV_PCRTC_GPIO_EXT_5_ENABLE))
                               |    (DRF_MASK(NV_PCRTC_GPIO_EXT_5_INPUT)  << DRF_SHIFT(NV_PCRTC_GPIO_EXT_5_INPUT)));

                        data32 |= (pDev->Power.GPIOExt & ((DRF_MASK(NV_PCRTC_GPIO_EXT_5_OUTPUT) << DRF_SHIFT(NV_PCRTC_GPIO_EXT_5_OUTPUT)) 
                                                       |  (DRF_MASK(NV_PCRTC_GPIO_EXT_5_ENABLE) << DRF_SHIFT(NV_PCRTC_GPIO_EXT_5_ENABLE)) 
                                                       |  (DRF_MASK(NV_PCRTC_GPIO_EXT_5_INPUT)  << DRF_SHIFT(NV_PCRTC_GPIO_EXT_5_INPUT))));

                        REG_WR32(NV_PCRTC_GPIO_EXT, data32);

                        osEnterCriticalCode(pDev);
                        lockA = UnlockCRTC(pDev, 0);
                        lockB = UnlockCRTC(pDev, 1);
                        CRTC_WR(0x51, pDev->Power.cr51hA, 0);
                        CRTC_WR(0x51, pDev->Power.cr51hB, 1);
                        RestoreLock(pDev, 0, lockA);
                        RestoreLock(pDev, 1, lockB);
                        osExitCriticalCode(pDev);
                    }
                }
                else
                {
                    FLD_WR_DRF_DEF(_PCRTC, _INTR_EN_0, _VBLANK, _ENABLED);
                    FLD_WR_DRF_DEF(_PTIMER, _INTR_EN_0, _ALARM, _ENABLED);
                    data16 = ReadIndexed(NV_PRMCIO_CRX__COLOR, 0x1A);
                    WriteIndexed(NV_PRMCIO_CRX__COLOR, (U016) (data16 & ~0x8000));     // set Hsync to active

                    // turn clocks up
                    // restore PCI and AGP throttle 
                    FLD_WR_DRF_DEF(_PRAMDAC, _TEST_CONTROL, _PWRDWN_DAC, _ON);
                    REG_WR32(NV_PRAMDAC_PLL_COEFF_SELECT, pDev->Power.coeff_select);

                    //Gradually step up nvclk
                    {
                        U032 M, N, P;

                        // Start with 50MHz
                        dacCalcMNP(pDev, 0, 5000, &M, &N, &P);
                        REG_WR32(NV_PRAMDAC_NVPLL_COEFF, DRF_NUM(_PRAMDAC, _NVPLL_COEFF, _MDIV, M) |
                                                         DRF_NUM(_PRAMDAC, _NVPLL_COEFF, _NDIV, N) |
                                                         DRF_NUM(_PRAMDAC, _NVPLL_COEFF, _PDIV, P));

                        // Move to 100MHz
                        dacCalcMNP(pDev, 0, 10000, &M, &N, &P);
                        REG_WR32(NV_PRAMDAC_NVPLL_COEFF, DRF_NUM(_PRAMDAC, _NVPLL_COEFF, _MDIV, M) |
                                                         DRF_NUM(_PRAMDAC, _NVPLL_COEFF, _NDIV, N) |
                                                         DRF_NUM(_PRAMDAC, _NVPLL_COEFF, _PDIV, P));

                        // Program final
                        REG_WR32(NV_PRAMDAC_NVPLL_COEFF, pDev->Power.nvpll);         // nvclk
                    }

//                        REG_WR32(NV_PRAMDAC_MPLL_COEFF, pDev->Power.mpll);           // mclk
                    REG_WR32(NV_PBUS_DEBUG_3, pDev->Power.PbusDebug3);           // pbus debug 3                            
                    FLD_WR_DRF_DEF(_PBUS, _DEBUG_1, _PCIM_THROTTLE, _DISABLED);      // pbus debug 1
                    nvHalMcPower(pDev, MC_POWER_LEVEL_0, pDev->Power.State);
                    // Turn on sequencer. We cannot rely on display driver doing a config_VGA to set the mode.
                    WriteIndexed(NV_PRMVIO_SRX, 0x0101);
                }         
                    pDev->Power.State = MC_POWER_LEVEL_0;

                    break;
            } // switch (pDev->Power.State)
#ifdef KERNEL_PM_STATE_CHANGE   // Do in kernel state changes which used to be done in OS-specific section
            if(pDev->Power.State == MC_POWER_LEVEL_7)
            {
                U032    count;
        
                /*
                 * When coming back from hibernation under Win2k (MC_POWER_LEVEL_7), need to clear the display
                 * before unloading the VGA device state so that the display won't get filled with garbage
                 * text characters when the HIRES device state is loaded and the tiling bits are set.
                 * This happens because the display mode is still currently a VGA display mode and the hi-res
                 * mode set hasn't happened yet.
                 */
                for (count = 0; count < (64*1024); count += 4)
                    FB_WR32(count, 0);

            }
            // Unload VGA device state
            stateNv(pDev, STATE_UNLOAD);
            pDev->Vga.Enabled = FALSE;
            // Load HIRES device state
            stateNv(pDev, STATE_LOAD);

#endif

            osEnterCriticalCode(pDev);
            data16 = ReadIndexed(NV_PRMCIO_CRX__COLOR, 0x1A);
            WriteIndexed(NV_PRMCIO_CRX__COLOR, (U016) (data16 & 0x3fff));     // enable syncs
            REG_WR32(NV_PMC_INTR_EN_0, 1);                 // re-enable interrupts.
            dacSetFan(pDev, 1);   // turn on fan
            osExitCriticalCode(pDev);


            // Set power state in PCI config reg so BIOS can read
            FLD_WR_DRF_DEF(_PBUS, _PCI_NV_25, _POWER_STATE, _D0);
            // Make sure BUS MASTERING is turned on (bug in system BIOS?)
            FLD_WR_DRF_DEF(_PBUS, _PCI_NV_1, _BUS_MASTER, _ENABLED);
            // Make sure MEMORY is turned on (VGA BIOS may disable to prevent hang if something accesses framebuffer during LEVEL 2)
            FLD_WR_DRF_DEF(_PBUS, _PCI_NV_1, _MEMORY_SPACE, _ENABLED);
            // Make sure IO is turned on
            FLD_WR_DRF_DEF(_PBUS, _PCI_NV_1, _IO_SPACE, _ENABLED);
            
            pDev->Power.State = MC_POWER_LEVEL_0;
            break;
            // end case MC_POWER_LEVEL_0
        
        //
        // Power Down
        //
        case MC_POWER_LEVEL_1:
            DBG_PRINT_STRING(DEBUGLEVEL_TRACEINFO, "Power Level 1");

            //Turn off DFP backlight
            if (pDev->Power.MobileOperation == 2)
            {
                dacBacklightOffMobilePanel(pDev);
            }

#ifdef KERNEL_PM_STATE_CHANGE   // Do in kernel state changes which used to be done in OS-specific section
            // Unload HIRES device state
            stateNv(pDev, STATE_UNLOAD);
            pDev->Vga.Enabled = TRUE;
            // Load VGA device state
            stateNv(pDev, STATE_LOAD);
#endif            
            REG_WR32(NV_PMC_INTR_EN_0, 0);                      // disable all interrupts. 
            REG_WR32(NV_PMC_INTR_0, REG_RD32(NV_PMC_INTR_0));   // clear any pending ints
            pDev->DeviceDisabled = TRUE;                      // signal ISR to ignore

            osEnterCriticalCode(pDev);
            // stop fetching video mem
            data16 = ReadIndexed(NV_PRMVIO_SRX, 0x01);
            data16 |= 0x2000;   // screen off
            WriteIndexed(NV_PRMVIO_SRX, data16);
            osExitCriticalCode(pDev);
            
            // save current clock coefficients
            if (pDev->Power.State == 0) //Have we already slowed down the clocks?
            {

                U032 IsPllSlowed;

                //
                // Check to see if NVCLK is currently being dynamically slowed
                // If so, temporarily disable so we can get a true time delay
                //
                // KJK: I wonder if this should be halified?
                //
                if (IsNV11(pDev))
                {
                    IsPllSlowed = REG_RD_DRF(_PBUS, _DEBUG_1, _CORE_SLOWDWN);
                    FLD_WR_DRF_NUM(_PBUS, _DEBUG_1, _CORE_SLOWDWN, 0);
                }
                //
                // If the Power.DisplayState is currently MC_POWER_LEVEL_6 (off)
                // then there's no need to save this register since it's already
                // been saved. Doing so again could result in an incorrect value
                // being read since the dac has already been disabled.
                // This should only ever be the case on Win2K since other os's don't
                // use the MC_POWER_LEVEL_6 state. (i.e. all other os's should be saving
                // the PLL_COEFF_SELECT register here all the time.
                //
                if ((pDev->Power.DisplayState[0] != MC_POWER_LEVEL_6)  
                 && (pDev->Power.DisplayState[1] != MC_POWER_LEVEL_6))
                    pDev->Power.coeff_select = REG_RD32(NV_PRAMDAC_PLL_COEFF_SELECT);
                pDev->Power.nvpll = REG_RD32(NV_PRAMDAC_NVPLL_COEFF);   // nvclk
                pDev->Power.vpll = REG_RD32(NV_PRAMDAC_VPLL_COEFF);   // vclk
                pDev->Power.mpll = REG_RD32(NV_PRAMDAC_MPLL_COEFF);     // mclk

                //
                // Restore PLL slowdown setting
                //
                if (IsNV11(pDev))
                    FLD_WR_DRF_NUM(_PBUS, _DEBUG_1, _CORE_SLOWDWN, IsPllSlowed);

            }

            // turn clocks down to save power
            FLD_WR_DRF_DEF(_PRAMDAC,_PLL_COEFF_SELECT,_SOURCE,_PROG_ALL);   // program all clocks

            // NV5 and NV10 NV clocks are tied to MCLK
            if (IsNV15orBetter(pDev)) 
            {
                NVClkSlow = 6600;   // slow down to PCI clk speed
            }
            else
            {
                NVClkSlow = (pDev->Dac.HalInfo.MClk * 2)/30000;   // NV5/NV10 are limited to MCLK/1.5. Number is MHz * 100
            }

            //XXX: Don't do the slowdown for highspeed mems (DDR)
            if (pDev->Framebuffer.HalInfo.RamType != BUFFER_DDRAM)
            {
                NVClktemp = pDev->Dac.HalInfo.NVClk;
                pDev->Dac.HalInfo.NVClk = NVClkSlow * 10000;
                if (dacProgramNVClk(pDev) != RM_OK)
                {
                    REG_WR32(NV_PRAMDAC_NVPLL_COEFF, pDev->Power.nvpll);         // nvclk
                }
                pDev->Dac.HalInfo.NVClk = NVClktemp;
                FLD_WR_DRF_NUM(_PRAMDAC,_MPLL_COEFF, _PDIV, 5);                 // div by 32
                
                // Shut off fan only if NVCLK is slowed
                osEnterCriticalCode(pDev);
                dacSetFan(pDev, 0);   // turn off fan
                osExitCriticalCode(pDev);
            }

            // Set PCLK to use the crystal
            FLD_WR_DRF_DEF(_PRAMDAC,_PLL_COEFF_SELECT,_VPLL_SOURCE,_XTAL);  

            nvHalMcPower(pDev, MC_POWER_LEVEL_1, pDev->Power.State);

            // power down the DAC
            FLD_WR_DRF_DEF(_PRAMDAC, _TEST_CONTROL, _PWRDWN_DAC, _OFF);
            
            // Set power state in PCI config reg so BIOS can read
            FLD_WR_DRF_DEF(_PBUS, _PCI_NV_25, _POWER_STATE, _D3_HOT);
            
            pDev->Power.State = MC_POWER_LEVEL_1;
            break;
        
        case MC_POWER_LEVEL_2:

            //Turn off DFP backlight
            if (pDev->Power.MobileOperation == 2)
            {
                dacBacklightOffMobilePanel(pDev);
            }

            // Blank both heads
            osEnterCriticalCode(pDev);
            dacDisableDac(pDev, 0);
            dacDisableDac(pDev, 1);
            osExitCriticalCode(pDev);

            // Power management for mobile chips:
            // Set RAM self-refresh mode (HAL)
            // Set flag to tell VGA BIOS to handle
            DBG_PRINT_STRING(DEBUGLEVEL_TRACEINFO, "Power Level 2");

#ifdef KERNEL_PM_STATE_CHANGE   // Do in kernel state changes which used to be done in OS-specific section
            // Unload HIRES device state
            stateNv(pDev, STATE_UNLOAD);
            pDev->Vga.Enabled = TRUE;
            // Load VGA device state
            stateNv(pDev, STATE_LOAD);
#endif            
            // Save the fifo context (inc instance memory) in case the VBIOS gets POSTed (Dell)

            // copy from framebuffer instance memory to save area.
            status = osAllocMem((VOID **)&pDev->fb_save, pDev->Pram.HalInfo.TotalInstSize);
            if (!status)
            {
                fb_sv = pDev->fb_save;
                for(i=0; i < pDev->Pram.HalInfo.TotalInstSize / 4; i++)
                {
                    *fb_sv++ = REG_RD32(NV_PRAMIN_DATA032(i));      // from the top--64k BIOS + instance memory
                    // this actually decrements from the top
                }            
            }
            
            nvHalMcPower(pDev, MC_POWER_LEVEL_2, pDev->Power.State);
            
            // leave the real mode access window pointing to PBUS_DEBUG_1 so that the BIOS can wake us up if called.
            osEnterCriticalCode(pDev);
            REG_WR32(NV_PRMIO_RMA_PTR, NV_PBUS_DEBUG_1);    // point to PBUS_DEBUG_1 address
            EnableHead(pDev, Head);                         // ensure I/O is directed to head 0
            lock = UnlockCRTC(pDev, Head);
            CRTC_WR(NV_CIO_CRE_RMA__INDEX, 5, Head);        // set data mode
            CRTC_RD(0x2E, data08, Head);                    // leave pointing at innocuous location
            osExitCriticalCode(pDev);

            data32 = REG_RD32(NV_PBUS_DEBUG_1);
            pDev->Power.PbusDebug1 = data32;                // save this for resume function
            
            // save the current IO/MEM values
            pDev->Power.PciIoMemSpace = REG_RD32(NV_PBUS_PCI_NV_1) & 0x3;
            
            // For Dell, do not set NV_25_POWER_STATE. BIOS will handle.
            if (pDev->Power.MobileOperation == 1)        // if Dell, don't set standby
            {
                // Leave dac powered because BIOS does not turn this on!
                dacWriteLinkPLL(pDev, Head, NV_PRAMDAC_FP_DEBUG_0_PWRDOWN_NONE);
                
                // Set power state in PCI config reg so BIOS can read
                FLD_WR_DRF_DEF(_PBUS, _PCI_NV_25, _POWER_STATE, _D0);   // Let BIOS do standby
            }
            else // Not Dell
            {
                // Set power state in PCI config reg so BIOS can read
                FLD_WR_DRF_DEF(_PBUS, _PCI_NV_25, _POWER_STATE, _D3_HOT);  
                
                // If memory or I/O is accessed while asleep, we will hang, so don't allow it.
                // Disable in the PCI config space 
                FLD_WR_DRF_DEF(_PBUS, _DEBUG_1, _PLL_STOPCLK, _ENABLE);

                osDelay(2); // wait 2 ms

                FLD_WR_DRF_DEF(_PBUS, _DEBUG_1, _IDDQ, _ONE);
                
                //XXX: Don't do this right now. Causes hang in Standby for Toshiba Win2K.
                // disable I/O and memory
                //FLD_WR_DRF_DEF(_PBUS, _PCI_NV_1, _IO_SPACE, _DISABLED);     // disable I/O while we are asleep
                //FLD_WR_DRF_DEF(_PBUS, _PCI_NV_1, _MEMORY_SPACE, _DISABLED); // disable memory while we are asleep
            }

            pDev->Power.State = MC_POWER_LEVEL_2;
            break;
        
        case MC_POWER_LEVEL_3:
            DBG_PRINT_STRING(DEBUGLEVEL_TRACEINFO, "Power Level 3");
            //Turn off DFP backlight
            if (pDev->Power.MobileOperation == 2)
            {
                dacBacklightOffMobilePanel(pDev);
            }


#ifdef KERNEL_PM_STATE_CHANGE   // Do in kernel state changes which used to be done in OS-specific section
            // Unload HIRES device state
            stateNv(pDev, STATE_UNLOAD);
            pDev->Vga.Enabled = TRUE;
            // Load VGA device state
            stateNv(pDev, STATE_LOAD);
#endif

            REG_WR32(NV_PMC_INTR_EN_0, 0);                      // disable all interrupts. We're going to be shut down!
            REG_WR32(NV_PMC_INTR_0, REG_RD32(NV_PMC_INTR_0));   // clear any pending ints
            pDev->DeviceDisabled = TRUE;                      // signal ISR to ignore
            
            pDev->Power.strapInfo = REG_RD32(NV_PEXTDEV_BOOT_0);    // READ STRAPS
            //
            // On some architectures it's not always the case that we will get
            // to D3 having come through D1. On the Mac we may get here from
            // D0. If that is the case we should save the power_coeff here.
            //
            // Also do NOT save the COEFF_SELECT here if Power.DisplayState is currently
            // MC_POWER_LEVEL_6 (off) because it's already been saved.
            // been saved. Doing so again could result in an incorrect value
            // being read since the dac has already been disabled.
            // This should only ever be the case on Win2K since other os's don't
            // use the MC_POWER_LEVEL_6 state. (i.e. all other os's should be saving
            // the PLL_COEFF_SELECT register here all the time.
            //
            if ((pDev->Power.State == MC_POWER_LEVEL_0)
             && ((pDev->Power.DisplayState[0] != MC_POWER_LEVEL_6)  
             &&  (pDev->Power.DisplayState[1] != MC_POWER_LEVEL_6)))
                pDev->Power.coeff_select = REG_RD32(NV_PRAMDAC_PLL_COEFF_SELECT);
            
            // Before we set Hal power level, make sure that the current level is 0, else we will restore the wrong state
            // when we resume. The power level could be non-zero if we processed an APM suspend.
            if (pDev->Power.State != MC_POWER_LEVEL_0) 
            {
                nvHalMcPower(pDev, MC_POWER_LEVEL_0, pDev->Power.State); // restore full ON state
            }
            nvHalMcPower(pDev, MC_POWER_LEVEL_3, pDev->Power.State);    // save ON state, and set to power saving state
            // allow any further PLL changes to settle
            tmrDelay(pDev, 2000000);    // 2ms

            // We will always transition thru D0, so this SHOULDN'T ever be true.
            if (pDev->Power.State == MC_POWER_LEVEL_1) // if we slowed down mclk, restore it
            {
                REG_WR32(NV_PRAMDAC_MPLL_COEFF, pDev->Power.mpll);           // mclk
            }else if (pDev->Power.State == MC_POWER_LEVEL_4) //Have we gone through APM suspend?
            {
                // turn clocks up to avoid mem corruption when saving instance memory.
                REG_WR32(NV_PRAMDAC_PLL_COEFF_SELECT, pDev->Power.coeff_select);

                if (pDev->Power.MobileOperation)
                {
                    NVClktemp = pDev->Dac.HalInfo.NVClk;
                    pDev->Dac.HalInfo.NVClk = pDev->Power.PostNVCLK;
                }

                if (dacProgramNVClk(pDev) != RM_OK)
                {
                    REG_WR32(NV_PRAMDAC_NVPLL_COEFF, pDev->Power.nvpll);         // nvclk
                }

                if (pDev->Power.MobileOperation)
                {
                    pDev->Dac.HalInfo.NVClk = NVClktemp;
                }

                REG_WR32(NV_PRAMDAC_MPLL_COEFF, pDev->Power.mpll);           // mclk
            }
            
            //Save away Spread Spectrum settings
            if (pDev->Power.MobileOperation) 
            {
                pDev->Power.GPIOExt = REG_RD32(NV_PCRTC_GPIO_EXT);

                osEnterCriticalCode(pDev);
                lockA = UnlockCRTC(pDev, 0);
                lockB = UnlockCRTC(pDev, 1);
                CRTC_RD(0x51, pDev->Power.cr51hA, 0);
                CRTC_RD(0x51, pDev->Power.cr51hB, 1);
                RestoreLock(pDev, 0, lockA);
                RestoreLock(pDev, 1, lockB);
                osExitCriticalCode(pDev);
            }

            // copy from framebuffer instance memory to save area.
            status = osAllocMem((VOID **)&pDev->fb_save, pDev->Pram.HalInfo.TotalInstSize);
            if (!status)
            {
                fb_sv = pDev->fb_save;
                for(i=0; i < pDev->Pram.HalInfo.TotalInstSize / 4; i++)
                {
                    *fb_sv++ = REG_RD32(NV_PRAMIN_DATA032(i));      // from the top--64k BIOS + instance memory
                    // this actually decrements from the top
                }            
            }
            // Save clock coefficients
            if (pDev->Power.State == MC_POWER_LEVEL_0) // already slowed down clocks?
            {

                U032 IsPllSlowed;

                //
                // Check to see if NVCLK is currently being dynamically slowed
                // If so, temporarily disable so we can get a true time delay
                //
                // KJK: I wonder if this should be halified?
                //
                if (IsNV11(pDev))
                {
                    IsPllSlowed = REG_RD_DRF(_PBUS, _DEBUG_1, _CORE_SLOWDWN);
                    FLD_WR_DRF_NUM(_PBUS, _DEBUG_1, _CORE_SLOWDWN, 0);
                }

                pDev->Power.nvpll = REG_RD32(NV_PRAMDAC_NVPLL_COEFF);   // nvclk
                pDev->Power.vpll = REG_RD32(NV_PRAMDAC_VPLL_COEFF);   // vclk
                pDev->Power.mpll = REG_RD32(NV_PRAMDAC_MPLL_COEFF);     // mclk

                //
                // Restore PLL slowdown setting
                //
                if (IsNV11(pDev))
                    FLD_WR_DRF_NUM(_PBUS, _DEBUG_1, _CORE_SLOWDWN, IsPllSlowed);
            }

            // Dell mobile uses level 3 for hibernation only. Power goes off.
            if (pDev->Power.MobileOperation != 1)        // if not Dell
            {
                // turn clocks down to save power
                FLD_WR_DRF_DEF(_PRAMDAC,_PLL_COEFF_SELECT,_SOURCE,_PROG_ALL);   // program all clocks

                if (IsNV5(pDev)) // NV5 is robust, we can really crank it down
                {
                    FLD_WR_DRF_DEF(_PRAMDAC,_PLL_COEFF_SELECT,_SOURCE,_PROG_ALL);   // program all clocks
                    FLD_WR_DRF_NUM(_PRAMDAC,_NVPLL_COEFF, _PDIV, 4);    // max pwr saving is not max divisor
                    FLD_WR_DRF_NUM(_PRAMDAC,_NVPLL_COEFF, _NDIV, 4);    // pll lower limit around 4-10
                    FLD_WR_DRF_NUM(_PRAMDAC,_MPLL_COEFF, _PDIV, 5);                 // div by 32
                }
                else
                {
                    // NV10 NV clock is tied to MCLK
                    if (IsNV10(pDev)) 
                    {
                        NVClkSlow = (pDev->Dac.HalInfo.MClk * 2)/30000;   // NV10 is limited to MCLK/1.5. Number is MHz * 100
                    }
                        else
                    {
                            NVClkSlow = 6600;   // slow down to PCI clk speed
                    }

                    //XXX: Don't do the slowdown for highspeed mems (DDR)
                    if (pDev->Framebuffer.HalInfo.RamType != BUFFER_DDRAM)
                    {
                        NVClktemp = pDev->Dac.HalInfo.NVClk;
                        pDev->Dac.HalInfo.NVClk = NVClkSlow * 10000;
                        if (dacProgramNVClk(pDev) != RM_OK)
                        {
                            REG_WR32(NV_PRAMDAC_NVPLL_COEFF, pDev->Power.nvpll);         // nvclk
                        }
                        pDev->Dac.HalInfo.NVClk = NVClktemp;
                        FLD_WR_DRF_NUM(_PRAMDAC,_MPLL_COEFF, _PDIV, 5);                 // div by 32
                        
                        // Shut off fan only if NVCLK is slowed
                        osEnterCriticalCode(pDev);
                        dacSetFan(pDev, 0);   // turn off fan
                        osExitCriticalCode(pDev);
                    }
                }
            }            

            FLD_WR_DRF_DEF(_PRAMDAC,_PLL_COEFF_SELECT,_VPLL_SOURCE,_XTAL);  // use crystal

            // Power down DAC
            FLD_WR_DRF_DEF(_PRAMDAC, _TEST_CONTROL, _PWRDWN_DAC, _OFF);

            // Save a few critical registers that are going to be lost
            pDev->Master.Enable = REG_RD32(NV_PMC_ENABLE);    // gr enable gets blown away
            pDev->Master.PciNv19 = REG_RD32(NV_PBUS_PCI_NV_19);     // read AGP COMMAND

            dacDisableDac(pDev, 1);         // blank display on second head
            if (!IsNV5(pDev))               // if NV5, NVCLK is so slow, we shouldn't access CRTC
            {
                osEnterCriticalCode(pDev);
                dacDisableDac(pDev, 0);         // blank display on first head--and unslave to TV encoder
                osExitCriticalCode(pDev);
            }
            
                // Set power state in PCI config reg so BIOS can read
                FLD_WR_DRF_DEF(_PBUS, _PCI_NV_25, _POWER_STATE, _D3_HOT);

                if (pDev->Power.MobileOperation == 1)
                {
                    // Reset the chip, in case this is WHQL doing hibernate w/o HW reset.
                    // We see occasional hangs early in VBIOS POST on NV11 mobile. This seems to prevent this.
                    REG_WR32(NV_PMC_ENABLE, 0);
                    REG_RD32(NV_PMC_ENABLE);
                    REG_RD32(NV_PMC_ENABLE);

                    REG_WR32(NV_PMC_ENABLE, -1);
                    REG_RD32(NV_PMC_ENABLE);
                    REG_RD32(NV_PMC_ENABLE);
                }
            pDev->Power.State = MC_POWER_LEVEL_3;
            break; // case power level 3
        //This case handles APM suspend
    case  MC_POWER_LEVEL_4:
        if (pDev->Power.MobileOperation) 
        {
            //Turn off DFP backlight
            if (pDev->Power.MobileOperation == 2)
            {
                dacBacklightOffMobilePanel(pDev);
            }


#ifdef KERNEL_PM_STATE_CHANGE   // Do in kernel state changes which used to be done in OS-specific section
            // Unload HIRES device state
            stateNv(pDev, STATE_UNLOAD);
            pDev->Vga.Enabled = TRUE;
            // Load VGA device state
            stateNv(pDev, STATE_LOAD);
#endif

            if ((!IsNV10(pDev)) && (!IsNV15(pDev))) // NV10 runs too hot in standby to shut off the fan
            {
                osEnterCriticalCode(pDev);
                dacSetFan(pDev, 0);   // turn off fan
                osExitCriticalCode(pDev);
            }

            REG_WR32(NV_PMC_INTR_EN_0, 0);                      // disable all interrupts. We're going to be shut down!
            REG_WR32(NV_PMC_INTR_0, REG_RD32(NV_PMC_INTR_0));   // clear any pending ints
            pDev->DeviceDisabled = TRUE;                      // signal ISR to ignore
            
            pDev->Power.strapInfo = REG_RD32(NV_PEXTDEV_BOOT_0);    // READ STRAPS
            //
            // On some architectures it's not always the case that we will get
            // to D3 having come through D1. On the Mac we may get here from
            // D0. If that is the case we should save the power_coeff here.
            //
            // Also do NOT save the COEFF_SELECT here if Power.DisplayState is currently
            // MC_POWER_LEVEL_6 (off) because it's already been saved.
            // been saved. Doing so again could result in an incorrect value
            // being read since the dac has already been disabled.
            // This should only ever be the case on Win2K since other os's don't
            // use the MC_POWER_LEVEL_6 state. (i.e. all other os's should be saving
            // the PLL_COEFF_SELECT register here all the time.
            //
            if ((pDev->Power.State == MC_POWER_LEVEL_0)
             && ((pDev->Power.DisplayState[0] != MC_POWER_LEVEL_6)  
             &&  (pDev->Power.DisplayState[1] != MC_POWER_LEVEL_6)))
                pDev->Power.coeff_select = REG_RD32(NV_PRAMDAC_PLL_COEFF_SELECT);
            
            // Before we set Hal power level, make sure that the current level is 0, else we will restore the wrong state
            // when we resume. The power level could be non-zero if we processed an APM suspend.
            if (pDev->Power.State != MC_POWER_LEVEL_0) 
            {
                nvHalMcPower(pDev, MC_POWER_LEVEL_0, pDev->Power.State); // restore full ON state
            }
            nvHalMcPower(pDev, MC_POWER_LEVEL_3, pDev->Power.State);    // save ON state, and set to power saving state
            // allow any further PLL changes to settle
            tmrDelay(pDev, 2000000);    // 2ms

            // We will always transition thru D0, so this SHOULDN'T ever be true.
            if (pDev->Power.State == MC_POWER_LEVEL_1) // if we slowed down mclk, restore it
            {
                REG_WR32(NV_PRAMDAC_MPLL_COEFF, pDev->Power.mpll);           // mclk
            }else if (pDev->Power.State == MC_POWER_LEVEL_4) //Have we gone through APM suspend?
            {
                // turn clocks up to avoid mem corruption when saving instance memory.
                REG_WR32(NV_PRAMDAC_PLL_COEFF_SELECT, pDev->Power.coeff_select);

                if (pDev->Power.MobileOperation)
                {
                    NVClktemp = pDev->Dac.HalInfo.NVClk;
                    pDev->Dac.HalInfo.NVClk = pDev->Power.PostNVCLK;
                }

                if (dacProgramNVClk(pDev) != RM_OK)
                {
                    REG_WR32(NV_PRAMDAC_NVPLL_COEFF, pDev->Power.nvpll);         // nvclk
                }

                if (pDev->Power.MobileOperation)
                {
                    pDev->Dac.HalInfo.NVClk = NVClktemp;
                }

                REG_WR32(NV_PRAMDAC_MPLL_COEFF, pDev->Power.mpll);           // mclk
            }
            
            //Save away Spread Spectrum settings
            if (pDev->Power.MobileOperation) 
            {
                pDev->Power.GPIOExt = REG_RD32(NV_PCRTC_GPIO_EXT);

                osEnterCriticalCode(pDev);
                lockA = UnlockCRTC(pDev, 0);
                lockB = UnlockCRTC(pDev, 1);
                CRTC_RD(0x51, pDev->Power.cr51hA, 0);
                CRTC_RD(0x51, pDev->Power.cr51hB, 1);
                RestoreLock(pDev, 0, lockA);
                RestoreLock(pDev, 1, lockB);
                osExitCriticalCode(pDev);
            }

            // copy from framebuffer instance memory to save area.
            status = osAllocMem((VOID **)&pDev->fb_save, pDev->Pram.HalInfo.TotalInstSize);
            if (!status)
            {
                fb_sv = pDev->fb_save;
                for(i=0; i < pDev->Pram.HalInfo.TotalInstSize / 4; i++)
                {
                    *fb_sv++ = REG_RD32(NV_PRAMIN_DATA032(i));      // from the top--64k BIOS + instance memory
                    // this actually decrements from the top
                }            
            }
            // Save clock coefficients
            if (pDev->Power.State == MC_POWER_LEVEL_0) // already slowed down clocks?
            {

                U032 IsPllSlowed;

                //
                // Check to see if NVCLK is currently being dynamically slowed
                // If so, temporarily disable so we can get a true time delay
                //
                // KJK: I wonder if this should be halified?
                //
                if (IsNV11(pDev))
                {
                    IsPllSlowed = REG_RD_DRF(_PBUS, _DEBUG_1, _CORE_SLOWDWN);
                    FLD_WR_DRF_NUM(_PBUS, _DEBUG_1, _CORE_SLOWDWN, 0);
                }

                pDev->Power.nvpll = REG_RD32(NV_PRAMDAC_NVPLL_COEFF);   // nvclk
                pDev->Power.vpll = REG_RD32(NV_PRAMDAC_VPLL_COEFF);   // vclk
                pDev->Power.mpll = REG_RD32(NV_PRAMDAC_MPLL_COEFF);     // mclk

                //
                // Restore PLL slowdown setting
                //
                if (IsNV11(pDev))
                    FLD_WR_DRF_NUM(_PBUS, _DEBUG_1, _CORE_SLOWDWN, IsPllSlowed);
            }

            // Dell mobile uses level 3 for hibernation only. Power goes off.
            if (pDev->Power.MobileOperation != 1)        // if not Dell
            {
                // turn clocks down to save power
                FLD_WR_DRF_DEF(_PRAMDAC,_PLL_COEFF_SELECT,_SOURCE,_PROG_ALL);   // program all clocks

                if (IsNV5(pDev)) // NV5 is robust, we can really crank it down
                {
                    FLD_WR_DRF_DEF(_PRAMDAC,_PLL_COEFF_SELECT,_SOURCE,_PROG_ALL);   // program all clocks
                    FLD_WR_DRF_NUM(_PRAMDAC,_NVPLL_COEFF, _PDIV, 4);    // max pwr saving is not max divisor
                    FLD_WR_DRF_NUM(_PRAMDAC,_NVPLL_COEFF, _NDIV, 4);    // pll lower limit around 4-10
                    FLD_WR_DRF_NUM(_PRAMDAC,_MPLL_COEFF, _PDIV, 5);                 // div by 32
                }
                else
                {
                    // NV10 NV clock is tied to MCLK
                    if (IsNV10(pDev)) 
                    {
                        NVClkSlow = (pDev->Dac.HalInfo.MClk * 2)/30000;   // NV10 is limited to MCLK/1.5. Number is MHz * 100
                    }
                        else
                    {
                            NVClkSlow = 6600;   // slow down to PCI clk speed
                    }

                    //XXX: Don't do the slowdown for highspeed mems (DDR)
                    if (pDev->Framebuffer.HalInfo.RamType != BUFFER_DDRAM)
                    {
                        NVClktemp = pDev->Dac.HalInfo.NVClk;
                        pDev->Dac.HalInfo.NVClk = NVClkSlow * 10000;
                        if (dacProgramNVClk(pDev) != RM_OK)
                        {
                            REG_WR32(NV_PRAMDAC_NVPLL_COEFF, pDev->Power.nvpll);         // nvclk
                        }
                        pDev->Dac.HalInfo.NVClk = NVClktemp;
                        FLD_WR_DRF_NUM(_PRAMDAC,_MPLL_COEFF, _PDIV, 5);                 // div by 32
                    }
                }
            }            

            FLD_WR_DRF_DEF(_PRAMDAC,_PLL_COEFF_SELECT,_VPLL_SOURCE,_XTAL);  // use crystal

            // Power down DAC
            FLD_WR_DRF_DEF(_PRAMDAC, _TEST_CONTROL, _PWRDWN_DAC, _OFF);

            // Save a few critical registers that are going to be lost
            pDev->Master.Enable = REG_RD32(NV_PMC_ENABLE);    // gr enable gets blown away
            pDev->Master.PciNv19 = REG_RD32(NV_PBUS_PCI_NV_19);     // read AGP COMMAND

            dacDisableDac(pDev, 1);         // blank display on second head
            if (!IsNV5(pDev))               // if NV5, NVCLK is so slow, we shouldn't access CRTC
            {
                osEnterCriticalCode(pDev);
                dacDisableDac(pDev, 0);         // blank display on first head--and unslave to TV encoder
                osExitCriticalCode(pDev);
            }
            
            /*if (!is_apm) 
            {
                // Set power state in PCI config reg so BIOS can read
                FLD_WR_DRF_DEF(_PBUS, _PCI_NV_25, _POWER_STATE, _D3_HOT);

                if (pDev->Power.MobileOperation == 1)
                {
                    // Reset the chip, in case this is WHQL doing hibernate w/o HW reset.
                    // We see occasional hangs early in VBIOS POST on NV11 mobile. This seems to prevent this.
                    REG_WR32(NV_PMC_ENABLE, 0);
                    REG_RD32(NV_PMC_ENABLE);
                    REG_RD32(NV_PMC_ENABLE);

                    REG_WR32(NV_PMC_ENABLE, -1);
                    REG_RD32(NV_PMC_ENABLE);
                    REG_RD32(NV_PMC_ENABLE);
                }
            } */
        }
        else
        {
            DBG_PRINT_STRING(DEBUGLEVEL_TRACEINFO, "Power Level 4");
            // some power management systems (NEC) will resume when they see our interrupt, so disable timer and vblank
            FLD_WR_DRF_DEF(_PCRTC, _INTR_EN_0, _VBLANK, _DISABLED);
            FLD_WR_DRF_DEF(_PTIMER, _INTR_EN_0, _ALARM, _DISABLED);
            // some may not turn off the monitor
            data16 = ReadIndexed(NV_PRMCIO_CRX__COLOR, 0x1A);
            WriteIndexed(NV_PRMCIO_CRX__COLOR, (U016) (data16 | 0x8000));     // set Hsync to inactive

            // add PM for APM

            // It appears we can get both ACPI and APM calls, so only save the
            // PLL settings and lengthen the memory refresh, if we're not already
            // in a power down state.

            // turn clocks down to save power, set PCLK to use the crystal, increase mem refresh, shut off DAC
            pDev->Power.coeff_select = REG_RD32(NV_PRAMDAC_PLL_COEFF_SELECT);
            pDev->Power.nvpll = REG_RD32(NV_PRAMDAC_NVPLL_COEFF);   // nvclk
            pDev->Power.vpll = REG_RD32(NV_PRAMDAC_VPLL_COEFF);     // vclk
            pDev->Power.mpll = REG_RD32(NV_PRAMDAC_MPLL_COEFF);     // mclk

            nvHalMcPower(pDev, MC_POWER_LEVEL_4, pDev->Power.State);

            // Stop fetching video mem
            // On NV10, this is not just to save power; refresh does not have priority,
            // so when we turn the clock down, the memory will get starved because refresh
            // is held off because scanout is using up the bandwidth.
            data16 = ReadIndexed(NV_PRMVIO_SRX, 0x01);
            data16 |= 0x2000;   // screen off
            WriteIndexed(NV_PRMVIO_SRX, data16);

            FLD_WR_DRF_DEF(_PRAMDAC,_PLL_COEFF_SELECT,_SOURCE,_PROG_ALL);   // program all clocks

            // We can lower NVCLK to 66 MHz. When we do this, we also should slow down data going
            // across PCI and AGP. 

            // We won't even attempt to lower MCLK. It causes memory corruption on NV10.

            // When lowering NVCLK, also throttle down PCI and AGP
            FLD_WR_DRF_DEF(_PBUS, _DEBUG_1, _PCIM_THROTTLE, _ENABLED);        // nvclk < PCI
            FLD_WR_DRF_DEF(_PBUS, _DEBUG_3, _AGP_4X_NVCLK, _SLOW);            // nvclk < AGP

            // NV5 and NV10 NV clocks are tied to MCLK
            if (IsNV15orBetter(pDev)) 
                NVClkSlow = 6600;   // slow down to PCI clk speed
            else
                NVClkSlow = (pDev->Dac.HalInfo.MClk * 2)/30000;   // NV5/NV10 are limited to MCLK/1.5. Number is MHz * 100

            //XXX: Don't do the slowdown for highspeed mems on NV10 (DDR and Quadro)
            if (pDev->Framebuffer.HalInfo.RamType != BUFFER_DDRAM)
            {
                NVClktemp = pDev->Dac.HalInfo.NVClk;
                pDev->Dac.HalInfo.NVClk = NVClkSlow * 10000;
                if (dacProgramNVClk(pDev) != RM_OK)
                {
                    REG_WR32(NV_PRAMDAC_NVPLL_COEFF, pDev->Power.nvpll);         // nvclk
                }
                pDev->Dac.HalInfo.NVClk = NVClktemp;
            }

            FLD_WR_DRF_DEF(_PRAMDAC,_PLL_COEFF_SELECT,_VPLL_SOURCE,_XTAL);  // use crystal
            FLD_WR_DRF_DEF(_PRAMDAC, _TEST_CONTROL, _PWRDWN_DAC, _OFF);
        }
            pDev->Power.State = MC_POWER_LEVEL_4;
            break;
/*
 * MC_POWER_LEVEL_5 AND MC_POWER_LEVEL_6 HAVE MOVED TO THE NEW ROUTINE mcPowerDisplayState BELOW
 * I HAVE LEFT THEM HERE ONLY OUT OF PARANOIA OF BREAKING A DIFFERENT OS, HOWEVER I BELIEVE ONLY WIN2K
 * USES THEM.  HOPEFULLY THEY CAN BE REMOVED AT A LATER DATE.
 */
        case MC_POWER_LEVEL_5:
            DBG_PRINT_STRING(DEBUGLEVEL_TRACEINFO, "Power Level 5");

            // turn DAC on
            dacEnableDac(pDev, Head);

            if (pDev->Power.MobileOperation == 2)
            {
                dacBacklightOnMobilePanel(pDev);
                pDev->Dac.DevicesEnabled |= DAC_PANEL_ENABLED;

                osEnterCriticalCode(pDev);
                if ((GETDISPLAYTYPE(pDev, 0) == DISPLAY_TYPE_FLAT_PANEL) ||
                    (GETDISPLAYTYPE(pDev, 1) == DISPLAY_TYPE_FLAT_PANEL))
                {
                    U032 prevHead;
                    //
                    // Tosh issues:
                    //
                    // Make sure CR17[1:0] and SR1[5] are restored correctly.
                    // They may have been munged when we disabled the backlight.
                    //
                    CRTC_RD(NV_CIO_CR_MODE_INDEX, data, Head);
                    data |= 0x83;
                    CRTC_WR(NV_CIO_CR_MODE_INDEX, data, Head);

                    prevHead = (pDev->Dac.HalInfo.Head2RegOwner & 0x1);
                    EnableHead(pDev, Head);        // sequencer updates require setting CR44 

                    data16 = ReadIndexed(NV_PRMVIO_SRX, 0x01);
                    data16 &= ~0x2000;
                    WriteIndexed(NV_PRMVIO_SRX, data16);

                    EnableHead(pDev, prevHead);    // restore previous CR44 value
                }
                else if (GETDISPLAYTYPE(pDev, Head) == DISPLAY_TYPE_TV)
                {
                    U032 prevHead;
                    //
                    // Tosh issues:
                    //
                    // For TV, we're also seeing where SR1[5] is not being restored
                    // correctly, so we'll fix this by hand also.
                    //
                    prevHead = (pDev->Dac.HalInfo.Head2RegOwner & 0x1);
                    EnableHead(pDev, Head);        // sequencer updates require setting CR44 

                    data16 = ReadIndexed(NV_PRMVIO_SRX, 0x01);
                    data16 &= ~0x2000;
                    WriteIndexed(NV_PRMVIO_SRX, data16);

                    EnableHead(pDev, prevHead);    // restore previous CR44 value
                }
                osExitCriticalCode(pDev);
            }

            // 
            // This should be done in dacEnableTV to complement dacDisableTV.
            // 
            // But, dacEnableTV is called early in the modeset code possibly before the
            // encoder is fully setup and able slave the CRTC off of it.
            //
            // Here, we only need to offset the little bit of dacDisableTV when resuming
            // from POWER_LEVEL_6. We'll take the safer approach and include it here. In
            // the future, we might create DAC routines specific to standby/resume.
            //
            if (GETDISPLAYTYPE(pDev, Head) == DISPLAY_TYPE_TV)
            {
                // wait for previous dacEnableTV to get the encoder powered up
                tmrDelay(pDev, 200000000);   // delay 200 ms

                // move the clocking input source back to the TV
                REG_WR32(NV_PRAMDAC_PLL_COEFF_SELECT, pDev->Power.coeff_select);

                osEnterCriticalCode(pDev);

                // reslave the CRTC back to the TV
                lock = UnlockCRTC(pDev, Head);

                CRTC_RD(NV_CIO_CRE_PIXEL_INDEX, data08, Head);
                data08 |= 0x80;
                CRTC_WR(NV_CIO_CRE_PIXEL_INDEX, data08, Head);

                RestoreLock(pDev, Head, lock);

                osExitCriticalCode(pDev);
            }

            // flag that the sync state has not been set
            pDev->Dac.CrtcInfo[Head].SyncStateIsSaved = FALSE;

            pDev->Power.State = MC_POWER_LEVEL_0;    // back to LEVEL_0, not LEVEL_5
            break;

        case MC_POWER_LEVEL_6:
            DBG_PRINT_STRING(DEBUGLEVEL_TRACEINFO, "Power Level 6");

            // store away the sync states only on the first call
            if (!pDev->Dac.CrtcInfo[Head].SyncStateIsSaved)
            {
                pDev->Dac.CrtcInfo[Head].CurrentVsyncState = DAC_REG_RD_DRF(_PRAMDAC, _FP_TG_CONTROL, _VSYNC, Head);
                pDev->Dac.CrtcInfo[Head].CurrentHsyncState = DAC_REG_RD_DRF(_PRAMDAC, _FP_TG_CONTROL, _HSYNC, Head);
                pDev->Dac.CrtcInfo[Head].SyncStateIsSaved = TRUE;
            }

            if (pDev->Power.State == MC_POWER_LEVEL_0) 
            {
                // save PLL_COEFF_SELECT (cleared by dacDisableDac/dacDisableTV)
                pDev->Power.coeff_select = REG_RD32(NV_PRAMDAC_PLL_COEFF_SELECT);
            }

            //Turn off DFP backlight
            if (pDev->Power.MobileOperation == 2)
            {
                dacBacklightOffMobilePanel(pDev);

                //
                // Tosh issues:
                //
                // After this call to turn off the backlight, SR1 and
                // CR17 have been cleared!  We'll refresh the values
                // in POWER_LEVEL_5 when we turn the backlight back on. 
                //
            }

            // turn DAC off
            osEnterCriticalCode(pDev);
            dacDisableDac(pDev, Head);
            osExitCriticalCode(pDev);

            pDev->Power.State = MC_POWER_LEVEL_6;
            break;

        case MC_POWER_LEVEL_7:
            DBG_PRINT_STRING(DEBUGLEVEL_TRACEINFO, "Power Level 7");
            
            //
            // This is win2k hibernate mode.
            //
            // Msoft dictates that power to the chip (including
            // the dac) remain on but the state of the chip should
            // be saved/restored.
            // 
#ifdef KERNEL_PM_STATE_CHANGE   // Do in kernel state changes which used to be done in OS-specific section
            // Unload HIRES device state
            stateNv(pDev, STATE_UNLOAD);
            pDev->Vga.Enabled = TRUE;
            // Load VGA device state
            stateNv(pDev, STATE_LOAD);
#endif
            //
            // Save off any neccessary agp chipset registers
            //
            NvSaveRestoreAGPChipset(pDev, MC_POWER_LEVEL_7);

            pDev->Power.strapInfo = REG_RD32(NV_PEXTDEV_BOOT_0);    // READ STRAPS

            nvHalMcPower(pDev, MC_POWER_LEVEL_3, pDev->Power.State);

            // We will always transition thru D0, so this SHOULDN'T ever be true.
            if (pDev->Power.State == MC_POWER_LEVEL_1) // if we slowed down mclk, restore it
            {
                REG_WR32(NV_PRAMDAC_MPLL_COEFF, pDev->Power.mpll);           // mclk
            }else if (pDev->Power.State == MC_POWER_LEVEL_4) //Have we gone through APM suspend?
            {
                // turn clocks up to avoid mem corruption when saving instance memory.
                REG_WR32(NV_PRAMDAC_PLL_COEFF_SELECT, pDev->Power.coeff_select);
                
                if (pDev->Power.MobileOperation)
                {
                    NVClktemp = pDev->Dac.HalInfo.NVClk;
                    pDev->Dac.HalInfo.NVClk = pDev->Power.PostNVCLK;
                }

                if (dacProgramNVClk(pDev) != RM_OK)
                {
                    REG_WR32(NV_PRAMDAC_NVPLL_COEFF, pDev->Power.nvpll);         // nvclk
                }

                if (pDev->Power.MobileOperation)
                {
                    pDev->Dac.HalInfo.NVClk = NVClktemp;
                }

                REG_WR32(NV_PRAMDAC_MPLL_COEFF, pDev->Power.mpll);           // mclk
            }
            
            //Save away Spread Spectrum settings
            if (pDev->Power.MobileOperation) 
            {
                pDev->Power.GPIOExt = REG_RD32(NV_PCRTC_GPIO_EXT);

                osEnterCriticalCode(pDev);
                lockA = UnlockCRTC(pDev, 0);
                lockB = UnlockCRTC(pDev, 1);
                CRTC_RD(0x51, pDev->Power.cr51hA, 0);
                CRTC_RD(0x51, pDev->Power.cr51hB, 1);
                RestoreLock(pDev, 0, lockA);
                RestoreLock(pDev, 1, lockB);
                osExitCriticalCode(pDev);
            }

            // copy from framebuffer instance memory to save area.
            status = osAllocMem((VOID **)&pDev->fb_save, pDev->Pram.HalInfo.TotalInstSize);
            if (!status)
            {
                fb_sv = pDev->fb_save;
                for(i=0; i < pDev->Pram.HalInfo.TotalInstSize / 4; i++)
                {
                    *fb_sv++ = REG_RD32(NV_PRAMIN_DATA032(i));      // from the top--64k BIOS + instance memory
                    // this actually decrements from the top
                }            
            }
            // Save clock coefficients
            if (pDev->Power.State == MC_POWER_LEVEL_0) // already slowed down clocks?
            {
                U032 IsPllSlowed;

                //
                // Check to see if NVCLK is currently being dynamically slowed
                // If so, temporarily disable so we can get a true time delay
                //
                // KJK: I wonder if this should be halified?
                //
                if (IsNV11(pDev))
                {
                    IsPllSlowed = REG_RD_DRF(_PBUS, _DEBUG_1, _CORE_SLOWDWN);
                    FLD_WR_DRF_NUM(_PBUS, _DEBUG_1, _CORE_SLOWDWN, 0);
                }

                pDev->Power.nvpll = REG_RD32(NV_PRAMDAC_NVPLL_COEFF);   // nvclk
                pDev->Power.vpll = REG_RD32(NV_PRAMDAC_VPLL_COEFF);   // vclk
                pDev->Power.mpll = REG_RD32(NV_PRAMDAC_MPLL_COEFF);     // mclk

                //
                // Restore PLL slowdown setting
                //
                if (IsNV11(pDev))
                    FLD_WR_DRF_NUM(_PBUS, _DEBUG_1, _CORE_SLOWDWN, IsPllSlowed);
            }

            // On some architectures it's not always the case that we will get
            // to D3 having come through D1. On the Mac we may get here from
            // D0. If that is the case we should save the power_coeff here.
            //
            // Also do NOT save the COEFF_SELECT here if Power.DisplayState is currently
            // MC_POWER_LEVEL_6 (off) because it's already been saved.
            // been saved. Doing so again could result in an incorrect value
            // being read since the dac has already been disabled.
            // This should only ever be the case on Win2K since other os's don't
            // use the MC_POWER_LEVEL_6 state. (i.e. all other os's should be saving
            // the PLL_COEFF_SELECT register here all the time.
            //
            if ((pDev->Power.State == MC_POWER_LEVEL_0) 
             && ((pDev->Power.DisplayState[0] != MC_POWER_LEVEL_6)  
             &&  (pDev->Power.DisplayState[1] != MC_POWER_LEVEL_6)))
                pDev->Power.coeff_select = REG_RD32(NV_PRAMDAC_PLL_COEFF_SELECT);

            // Save a few critical registers that are going to be lost
            pDev->Master.Enable = REG_RD32(NV_PMC_ENABLE);    // gr enable gets blown away
            pDev->Master.PciNv19 = REG_RD32(NV_PBUS_PCI_NV_19);     // read AGP COMMAND

            pDev->Power.State = MC_POWER_LEVEL_7;
            break; // case power level 7
    }
    return RM_OK;
}
//  Transition between display power states
//  States are:
//  Level 5 - monitor on
//  Level 6 - monitor off
RM_STATUS mcPowerDisplayState
(
    PHWINFO pDev,
    U032    state,
    U032    Head
)
{
    U008                        lock, data08;
    U016                        data16;
    U032                        data;
    U032                        DisplayType;
    BOOL                        overrideDacClass = FALSE;
    VIDEO_LUT_CURSOR_DAC_OBJECT *pTempDacClass = NULL;

    //
    // This routine relies on knowing what type of device should be enabled
    // for this head.  However, on occassion (such as Standby->Hibernation
    // transitions on win2k) the DisplayType stored is 'none'.  In this case
    // determine what the current connected display type is and use that instead.
    //
    DisplayType = GETDISPLAYTYPE(pDev, Head);
    if (DisplayType == DISPLAY_TYPE_NONE)
    {
        switch (GETMONITORTYPE(pDev, Head))
        {
            case MONITOR_TYPE_VGA:
                DisplayType = DISPLAY_TYPE_MONITOR;
                break;
            case MONITOR_TYPE_NTSC:
            case MONITOR_TYPE_PAL:
                DisplayType = DISPLAY_TYPE_TV;
                break;
            case MONITOR_TYPE_FLAT_PANEL:
                DisplayType = DISPLAY_TYPE_FLAT_PANEL;
                break;
            default:
                DisplayType = DISPLAY_TYPE_MONITOR;
                break;

        }
    }
    /*
     * Need some special hackery for the case when transitioning from Standby->Hibernation.
     * In this situation, the driver doesn't not ever set a hi-res mode, therefore there are
     * no current VideoLutCursorDac class objects in use.  This is a problem for the lower
     * level routines in the RM for enabling and disabling the dac because they rely on a
     * valid VideoLutCursorDac class object to determine what the display type is. This can
     * result in either the hibernation screen not showing up or internal flat panels blooming.
     * To get around this, whenever a call comes through where there isn't a valid VideoLutCursorDac
     * class object, we'll build up a fake one that has enough information in it that the rm can
     * get the job done "correctly".
     * This fake DacClass has to be Nonpaged and zeroed out.  Interrupt could happen (and very 
     * likely to happen) inside this routine.
     */
    if (!pDev->Dac.CrtcInfo[Head].pVidLutCurDac)
    {
        if (osAllocMem((VOID **)&pTempDacClass, sizeof(VIDEO_LUT_CURSOR_DAC_OBJECT)) == 0)
        {
            U032    count;

            osMemSet(pTempDacClass, 0, sizeof(VIDEO_LUT_CURSOR_DAC_OBJECT));
            pTempDacClass->DisplayType = DisplayType;
            overrideDacClass = TRUE;
            pDev->Dac.CrtcInfo[Head].pVidLutCurDac = (VOID_PTR)pTempDacClass;
            /*
             * In the case where we are transitioning from Standby->Hibernation, the driver
             * doesn't ever set a hi-res mode. Win2k will only set a vga mode for displaying
             * the hibernation screen.  However, if we just turn the display on without first
             * clearing the first 64K of memory, there may be garbage left in memory that will
             * be displayed momentarily before the hibernation screen is drawn. To prevent this
             * clear out the first 64K of video memory now.
             */
            for (count = 0; count < (64*1024); count += 4)
                FB_WR32(count, 0);
        }
    }

    switch (state)
    {
        // Monitor On
        case MC_POWER_LEVEL_5:
            DBG_PRINT_STRING(DEBUGLEVEL_TRACEINFO, "Power Level 5");

//            if (pDev->Power.DisplayState[Head] != MC_POWER_LEVEL_5)
            {
                // turn DAC on
                dacEnableDac(pDev, Head);

                if (pDev->Power.MobileOperation == 2)
                {
                    U032 prevHead;

                    switch (DisplayType)
                    {
                        case DISPLAY_TYPE_MONITOR:
                            break;
                        case DISPLAY_TYPE_FLAT_PANEL:
                            if (!overrideDacClass)
                            {
                                osEnterCriticalCode(pDev);
                                //
                                // Tosh issues:
                                //
                                // Make sure CR17[1:0] and SR1[5] are restored correctly.
                                // They may have been munged when we disabled the backlight.
                                //
                                CRTC_RD(NV_CIO_CR_MODE_INDEX, data, Head);
                                data |= 0x83;
                                CRTC_WR(NV_CIO_CR_MODE_INDEX, data, Head);
                                //
                                // sequencer updates require setting CR44
                                // Save off current owner for restore later.
                                prevHead = (pDev->Dac.HalInfo.Head2RegOwner & 0x1);
                                EnableHead(pDev, Head);

                                data16 = ReadIndexed(NV_PRMVIO_SRX, 0x01);
                                data16 &= ~0x2000;
                                WriteIndexed(NV_PRMVIO_SRX, data16);

                                // restore previous CR44 value
                                EnableHead(pDev, prevHead);

                                osExitCriticalCode(pDev);
                            }
                            break;
                        case DISPLAY_TYPE_TV:
                            osEnterCriticalCode(pDev);
                            //
                            // Tosh issues:
                            //
                            // For TV, we're also seeing where SR1[5] is not being restored
                            // correctly, so we'll fix this by hand also.
                            //
                            prevHead = (pDev->Dac.HalInfo.Head2RegOwner & 0x1);
                            EnableHead(pDev, Head);        // sequencer updates require setting CR44

                            data16 = ReadIndexed(NV_PRMVIO_SRX, 0x01);
                            data16 &= ~0x2000;
                            WriteIndexed(NV_PRMVIO_SRX, data16);

                            EnableHead(pDev, prevHead);    // restore previous CR44 value

                            osExitCriticalCode(pDev);
                            break;
                    }
                }
                if (pDev->Power.MobileOperation == 2)
                {
                    dacBacklightOnMobilePanel(pDev);
                }
                //
                // This should be done in dacEnableTV to complement dacDisableTV.
                //
                // But, dacEnableTV is called early in the modeset code possibly before the
                // encoder is fully setup and able slave the CRTC off of it.
                //
                // Here, we only need to offset the little bit of dacDisableTV when resuming
                // from POWER_LEVEL_6. We'll take the safer approach and include it here. In
                // the future, we might create DAC routines specific to standby/resume.
                //
                if (DisplayType == DISPLAY_TYPE_TV)
                {
                    // wait for previous dacEnableTV to get the encoder powered up
                    tmrDelay(pDev, 200000000);   // delay 200 ms
                    //
                    // move the clocking input source back to the TV
                    // but only restore if saved value is non-zero, it's possible that we
                    // got here without actually having ever saved this state off.
                    // For instance if you start win2k on the tv and shut down or restart
                    // without ever having gone into a power save mode, pdev->Power.coeff_select
                    // will not have been initialized.  It would probably be better if this state
                    // was updated any time it was changed. But for now just assume that if the
                    // value is zero, then the current state is valid and what we want.
                    //
                    if(pDev->Power.coeff_select)
                        REG_WR32(NV_PRAMDAC_PLL_COEFF_SELECT, pDev->Power.coeff_select);

                    osEnterCriticalCode(pDev);

                    // reslave the CRTC back to the TV
                    lock = UnlockCRTC(pDev, Head);

                    CRTC_RD(NV_CIO_CRE_PIXEL_INDEX, data08, Head);
                    data08 |= 0x80;
                    CRTC_WR(NV_CIO_CRE_PIXEL_INDEX, data08, Head);

                    RestoreLock(pDev, Head, lock);


                    osExitCriticalCode(pDev);
                }

                // flag that the sync state has not been set
                pDev->Dac.CrtcInfo[Head].SyncStateIsSaved = FALSE;

                // Set current monitor power state for this head.
                pDev->Power.DisplayState[Head] = MC_POWER_LEVEL_5;
            }
            break;

        // Monitor Off
        case MC_POWER_LEVEL_6:
            DBG_PRINT_STRING(DEBUGLEVEL_TRACEINFO, "Power Level 6");

//            if (pDev->Power.DisplayState[Head] != MC_POWER_LEVEL_6)
            {
                // store away the sync states only on the first call
                if (!pDev->Dac.CrtcInfo[Head].SyncStateIsSaved)
                {
                    pDev->Dac.CrtcInfo[Head].CurrentVsyncState = DAC_REG_RD_DRF(_PRAMDAC, _FP_TG_CONTROL, _VSYNC, Head);
                    pDev->Dac.CrtcInfo[Head].CurrentHsyncState = DAC_REG_RD_DRF(_PRAMDAC, _FP_TG_CONTROL, _HSYNC, Head);
                    pDev->Dac.CrtcInfo[Head].SyncStateIsSaved = TRUE;
                }
                //
                // Save the PLL_COEFF_SELECT only if adapter is at MC_POWER_LEVEL_0
                // and we haven't already been through the MC_POWER_LEVEL_6 code already.
                // Don't want to end up saving a bogus value if we've already been through
                // this code once.
                //
                if ((pDev->Power.State == MC_POWER_LEVEL_0)
                 && ((pDev->Power.DisplayState[0] != MC_POWER_LEVEL_6)
                 &&  (pDev->Power.DisplayState[1] != MC_POWER_LEVEL_6)))
                {
                    // save PLL_COEFF_SELECT (cleared by dacDisableDac/dacDisableTV)
                    pDev->Power.coeff_select = REG_RD32(NV_PRAMDAC_PLL_COEFF_SELECT);
                }
                if (pDev->Power.MobileOperation == 2)
                {
                    switch (DisplayType)
                    {
                        case DISPLAY_TYPE_MONITOR:
                            break;
                        case DISPLAY_TYPE_FLAT_PANEL:
                            dacBacklightOffMobilePanel(pDev);
                            break;
                        case DISPLAY_TYPE_TV:
                            break;
                    }
                    //
                    // Tosh issues:
                    //
                    // After this call to turn off the backlight, SR1 and
                    // CR17 have been cleared!  We'll refresh the values
                    // in POWER_LEVEL_5 when we turn the backlight back on.
                    //
                }

                // turn DAC off
                osEnterCriticalCode(pDev);
                dacDisableDac(pDev, Head);
                osExitCriticalCode(pDev);

                pDev->Power.DisplayState[Head] = MC_POWER_LEVEL_6;
            }
            break;
    }
    if (overrideDacClass)
    {
        pDev->Dac.CrtcInfo[Head].pVidLutCurDac = (VOID_PTR)NULL;
        osFreeMem(pTempDacClass);
    }
    return RM_OK;
}
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Microsoft Xbox (1.00.4400) [April 2002] [src]\private\ntos\video\nv20\drivers\resman\kernel\mc\nv\mcstate.c ===
/***************************************************************************\
|*                                                                           *|
|*        Copyright (c) 1993-2000 NVIDIA, Corp.  All rights reserved.        *|
|*                                                                           *|
|*     NOTICE TO USER:   The source code  is copyrighted under  U.S. and     *|
|*     international laws.   NVIDIA, Corp. of Sunnyvale, California owns     *|
|*     the copyright  and as design patents  pending  on the design  and     *|
|*     interface  of the NV chips.   Users and possessors of this source     *|
|*     code are hereby granted  a nonexclusive,  royalty-free  copyright     *|
|*     and  design  patent license  to use this code  in individual  and     *|
|*     commercial software.                                                  *|
|*                                                                           *|
|*     Any use of this source code must include,  in the user documenta-     *|
|*     tion and  internal comments to the code,  notices to the end user     *|
|*     as follows:                                                           *|
|*                                                                           *|
|*     Copyright (c) 1993-2000  NVIDIA, Corp.    NVIDIA  design  patents     *|
|*     pending in the U.S. and foreign countries.                            *|
|*                                                                           *|
|*     NVIDIA, CORP.  MAKES  NO REPRESENTATION ABOUT  THE SUITABILITY OF     *|
|*     THIS SOURCE CODE FOR ANY PURPOSE.  IT IS PROVIDED "AS IS" WITHOUT     *|
|*     EXPRESS OR IMPLIED WARRANTY OF ANY KIND.  NVIDIA, CORP. DISCLAIMS     *|
|*     ALL WARRANTIES  WITH REGARD  TO THIS SOURCE CODE,  INCLUDING  ALL     *|
|*     IMPLIED   WARRANTIES  OF  MERCHANTABILITY  AND   FITNESS   FOR  A     *|
|*     PARTICULAR  PURPOSE.   IN NO EVENT SHALL NVIDIA, CORP.  BE LIABLE     *|
|*     FOR ANY SPECIAL, INDIRECT, INCIDENTAL,  OR CONSEQUENTIAL DAMAGES,     *|
|*     OR ANY DAMAGES  WHATSOEVER  RESULTING  FROM LOSS OF USE,  DATA OR     *|
|*     PROFITS,  WHETHER IN AN ACTION  OF CONTRACT,  NEGLIGENCE OR OTHER     *|
|*     TORTIOUS ACTION, ARISING OUT  OF OR IN CONNECTION WITH THE USE OR     *|
|*     PERFORMANCE OF THIS SOURCE CODE.                                      *|
|*                                                                           *|
 \***************************************************************************/

/******************************* MC Manager ********************************\
*                                                                           *
* Module: MCSTATE.C                                                         *
*   The Master Control state is changed in this module.                     *
*                                                                           *
*****************************************************************************
*                                                                           *
* History:                                                                  *
*                                                                           *
\***************************************************************************/
#include <nv_ref.h>
#include <nvrm.h>
#include <state.h>
#include <class.h>
#include <mc.h>
#include <os.h>
#include "nvhw.h"
#include "nvcm.h"
#include <bios.h>   //For hotkey defs.  Can remove once those are put in nv_ref.h

// Registry access
extern char strDevNodeRM[];
extern VOID dbgDumpMTRRs(VOID);

//
// Change Master Control hardware state.
//
RM_STATUS stateMc
(
    PHWINFO pDev, // handle to an nv device
    U032 msg
)
{
    RM_STATUS status;
    U032      data,temp;
    
    switch (msg)
    {
        case STATE_UPDATE:
            break;
        case STATE_LOAD:
            //
            // Enable all devices and interrupts.
            //
            // We must toggle the AGP COMMAND register to make sure that if we went thru a power standby,
            // AGP will be reset and send all command packets, not just those it thinks are not cached.
            // We only need to transition the SBA/AGP enable bits to reset NV for this case.
            //
            status = RM_OK;
            data = REG_RD32(NV_PBUS_PCI_NV_19);     // read AGP COMMAND
            REG_WR32(NV_PBUS_PCI_NV_19,
                     (data & ~(DRF_DEF(_PBUS, _PCI_NV_19, _AGP_COMMAND_SBA_ENABLE, _ON) |
                               DRF_DEF(_PBUS, _PCI_NV_19, _AGP_COMMAND_AGP_ENABLE, _ON))));
            temp = REG_RD32(NV_PRAMIN_DATA032(0));  // read inst mem to delay
            REG_WR32(NV_PBUS_PCI_NV_19, data);      // restore

            REG_WR32(NV_PMC_ENABLE, 0xFFFFFFFF);    // enable all engines
            REG_WR32(NV_PMC_INTR_EN_0, pDev->Chip.IntrEn0);    // setup in mcinit

#if defined(DEBUG) && !defined(IA64)
            // At times, it may be useful to verify the processors MTRRs
            dbgDumpMTRRs();
#endif
            if (status != RM_OK)
            {
                return (status);
            }

            break;
        case STATE_UNLOAD:
            //
            // Clear interrupts.
            //
            REG_WR32(NV_PMC_INTR_EN_0, 0x00000000);
            break;
        case STATE_INIT:
            //
            // We must determine if there is any customer-specific code
            // we need to enable for this device.  Start the customer
            // coding at generic (reference drivers), and then override
            // it with information from the registry  
            //
            pDev->Video.HalInfo.CustomizationCode = CUSTOMER_GENERIC;
            if (OS_READ_REGISTRY_DWORD(pDev, strDevNodeRM, "CustomizationCode", &data) == RM_OK)
                pDev->Video.HalInfo.CustomizationCode = data;

            //
            // Make sure we can find NV before partying on it.
            //
            status = initMapping(pDev);
            if (status)
                return (status);

            //
            // One time initialization.
            //
            status = initMc(pDev);
            if (status)
                return (status);
            break;
        case STATE_DESTROY:
            nvHalMcControl(pDev, MC_CONTROL_DESTROY);
            break;
    }    
    return (RM_OK);
}

RM_STATUS initMc
(
    PHWINFO pDev
)
{
    PRMINFO pRmInfo = (PRMINFO) pDev->pRmInfo;
    U032 data;
    U008 lock;

    //
    // Set the PCI Device ID's
    //
    pDev->Chip.HalInfo.PCIDeviceID = REG_RD32(NV_PBUS_PCI_NV_0);
    pDev->Chip.HalInfo.PCISubDeviceID = REG_RD32(NV_PBUS_PCI_NV_11);

    //
    // Call into HAL to chip-specific initialization.
    //
    nvHalMcControl(pDev, MC_CONTROL_INIT);

    //
    // Enable the interrupt mapping within the chip
    //
    switch(pDev->Mapping.IntPin)
    {
        case 0x01:
        case 0x0A:
            pDev->Chip.IntrEn0 = DRF_DEF(_PMC, _INTR_EN_0, _INTA, _HARDWARE);
            break;
        default:
            DBG_PRINT_STRING(DEBUGLEVEL_ERRORS, "NVRM: Bad initialization table!");
            DBG_BREAKPOINT();
            return(RM_ERROR);
    }

    //
    // Determine the current bus
    //
#ifdef IKOS
    //For IKOS just set bus type to PCI.
    pDev->Chip.Bus = BUS_PCI;
#else

    //
    // Instead of reading the strap, walk the PCI config space.  See if there is an AGP cap
    // after the power mgmt cap.
    //
    if (REG_RD_DRF(_PBUS, _PCI_NV_24, _NEXT_PTR) == NV_PBUS_PCI_NV_24_NEXT_PTR_AGP)
        pDev->Chip.Bus = BUS_AGP;
    else 
        pDev->Chip.Bus = BUS_PCI;
#endif // IKOS

    //
    // Set our flag indicating if AGP fast-writes are enabled for both NV10
    // and the chipset ... only A03 silicon or better has working FW support.
    //
    pRmInfo->AGP.AGPFWEnable = (IsNV10MaskRevA03orBetter(pDev) &&
                                REG_RD_DRF(_PBUS, _PCI_NV_19, _AGP_COMMAND_FW_ENABLE));

    //
    // Set our flag indicating if AGP fast-writes are at full speed or half speed.
    // Unfortunately, NV15 needs to run in NV10 crippled mode due to a compatibility
    // issue with Camino (and, unfortunately, it's not a selectable NV15 setting).
    // For NV11, if PBUS_DEBUG_1_AGPFW_ADIS is set, then we're not using NV10 compat
    // and do have fullspeed fastwrites (currently only settable through the registry.
    //
    pRmInfo->AGP.AGPFullSpeedFW = (pRmInfo->AGP.AGPFWEnable &&
                                   IsNV11orBetter(pDev) && 
                                   REG_RD_DRF(_PBUS, _DEBUG_1, _AGPFW_ADIS));

    //
    // convert HAL graphics caps, set in MC_CONTROL_INIT, to API values
    //
    pDev->Graphics.Capabilities = 0;
    
    if (pDev->Graphics.HalInfo.Capabilities & NVHAL_GRAPHICS_CAPS_UNKNOWN)
        pDev->Graphics.Capabilities |= NV_CFG_GRAPHICS_CAPS_UNKNOWN;
  
    if ((pDev->Graphics.HalInfo.Capabilities >> NVHAL_GRAPHICS_CAPS_MAXCLIPS_SHIFT)
                                                & NVHAL_GRAPHICS_CAPS_MAXCLIPS_MASK)
    {
        U032 numClips = (pDev->Graphics.HalInfo.Capabilities
                            >> NVHAL_GRAPHICS_CAPS_MAXCLIPS_SHIFT)
                            & NVHAL_GRAPHICS_CAPS_MAXCLIPS_MASK;

        pDev->Graphics.Capabilities |= ((numClips & NV_CFG_GRAPHICS_CAPS_MAXCLIPS_MASK)
                                        << NV_CFG_GRAPHICS_CAPS_MAXCLIPS_SHIFT);
    } 
    
    if (pDev->Graphics.HalInfo.Capabilities & NVHAL_GRAPHICS_CAPS_AA_LINES)
        pDev->Graphics.Capabilities |= NV_CFG_GRAPHICS_CAPS_AA_LINES;
   
    if (pDev->Graphics.HalInfo.Capabilities & NVHAL_GRAPHICS_CAPS_AA_POLYS)
        pDev->Graphics.Capabilities |= NV_CFG_GRAPHICS_CAPS_AA_POLYS;
   
    if (pDev->Graphics.HalInfo.Capabilities & NVHAL_GRAPHICS_CAPS_AKILL_USERCLIP)
        pDev->Graphics.Capabilities |= NV_CFG_GRAPHICS_CAPS_AKILL_USERCLIP;
   
    if (pDev->Graphics.HalInfo.Capabilities & NVHAL_GRAPHICS_CAPS_LOGIC_OPS)
        pDev->Graphics.Capabilities |= NV_CFG_GRAPHICS_CAPS_LOGIC_OPS;
   
    if (pDev->Graphics.HalInfo.Capabilities & NVHAL_GRAPHICS_CAPS_NV15_ALINES)
        pDev->Graphics.Capabilities |= NV_CFG_GRAPHICS_CAPS_NV15_ALINES;

    if (pDev->Graphics.HalInfo.Capabilities & NVHAL_GRAPHICS_CAPS_2SIDED_LIGHTING)
        pDev->Graphics.Capabilities |= NV_CFG_GRAPHICS_CAPS_2SIDED_LIGHTING;

    if (pDev->Graphics.HalInfo.Capabilities & NVHAL_GRAPHICS_CAPS_QUADRO_GENERIC)
        pDev->Graphics.Capabilities |= NV_CFG_GRAPHICS_CAPS_QUADRO_GENERIC;

    if (pDev->Graphics.HalInfo.Capabilities & NVHAL_GRAPHICS_CAPS_NV1X_COLOR_INVARIANCE)
        pDev->Graphics.Capabilities |= NV_CFG_GRAPHICS_CAPS_NV1X_COLOR_INVARIANCE;

    if (pDev->Graphics.HalInfo.Capabilities & NVHAL_GRAPHICS_CAPS_UBB)
        pDev->Graphics.Capabilities |= NV_CFG_GRAPHICS_CAPS_UBB;

    if (pDev->Graphics.HalInfo.Capabilities & NVHAL_GRAPHICS_CAPS_3D_TEXTURES)
        pDev->Graphics.Capabilities |= NV_CFG_GRAPHICS_CAPS_3D_TEXTURES;

    if (pDev->Graphics.HalInfo.Capabilities & NVHAL_GRAPHICS_CAPS_ANISOTROPIC)
        pDev->Graphics.Capabilities |= NV_CFG_GRAPHICS_CAPS_ANISOTROPIC;

    if (pDev->Graphics.Capabilities == 0)
        pDev->Graphics.Capabilities = 0x1;

    //
    // Set the BIOS revision and check the RM DWORD for driver compatibility
    //
    if (mcSetBiosRevision(pDev) != RM_OK)
        return (RM_ERROR);

    //
    // Temporary workaround to disable twinview functionality via a registry key
    //
    // Note the original count was determined down in the HAL routine
    //
    // AS SOON AS THE BIOS->RESMAN DISPLAY TABLE IS IN PLACE, REMOVE THIS OVERRIDE
    //
    if (IsNV11(pDev))
        if (OS_READ_REGISTRY_DWORD(pDev, strDevNodeRM, "TwinViewDisabled", &data) == RM_OK)
            pDev->Dac.HalInfo.NumCrtcs = 1;


    //
    // Determine if we're running this device in a mobile environment.  This
    // will enable various power saving and device functionality that is not
    // available with desktop devices.
    //
    {
        pDev->Power.MobileOperation = 0;
        pDev->Power.PostNVCLK = 0;
        pDev->Power.PostMCLK = 0;

        pDev->Power.PmNVCLK[0] = 0;         // Full NVClk
        pDev->Power.PmMCLK[0] = 0;          // Full MClk 

        pDev->Power.PmNVCLK[1] = 102000000; // 102 MHz
        pDev->Power.PmMCLK[1]  = 0;         // Full MClk

        pDev->Power.PmNVCLK[2] = 102000000; // 51 MHz
        pDev->Power.PmNVCLK[3] =  51000000; // 51 MHz
        pDev->Power.PmNVCLK[4] =  51000000; // 51 MHz

        if (pDev->Framebuffer.HalInfo.RamType == NV_CFG_RAM_TYPE_DDRRAM)
        {
            pDev->Power.PmMCLK[2]  = 166000000; // 166 MHz
            pDev->Power.PmMCLK[3]  = 166000000; // 166 MHz
            pDev->Power.PmMCLK[4]  = 120000000; // 120 MHz
        }
        else
        {
            // MClk scaling disabled on anything but DDR since it has
            // not been tested and since there are almost no DDR mobile
            // parts in the market.
            pDev->Power.PmMCLK[2]  = 0; // Full MClk
            pDev->Power.PmMCLK[3]  = 0; // Full MClk
            pDev->Power.PmMCLK[4]  = 0; // Full MClk
        }

        //Read the BIOS bit that indicates whether this is a laptop or not.
        lock = UnlockCRTC(pDev, 0);
        CRTC_RD(NV_CIO_CRE_SCRATCH6__INDEX, data, 0);
        RestoreLock(pDev, 0, lock);
    
        if (IsNV11(pDev) && (data & NV_IS_MOBILE_BIOS))
            pDev->Power.MobileOperation = 1;

        //
        // Just in case, check the registry for an override enable
        //
        if ((IsNV11(pDev)) &&
            (RM_OK == OS_READ_REGISTRY_DWORD(pDev, strDevNodeRM, "Mobile", &data)))
            pDev->Power.MobileOperation = data;

        // initialize access to the video bios (Linux only)
        
#ifdef LINUX
        if (pDev->Power.MobileOperation)
            osInitVideoBIOS(pDev->DBmpDeviceExtension);
#endif // LINUX
        
        //
        // Check for a registry override for the Idle NVClock setting
        //
        if (IsNV11(pDev))
        {
            if (OS_READ_REGISTRY_DWORD(pDev, strDevNodeRM, "PMNVCLOCK", &data) == RM_OK)
            {
                pDev->Power.PmNVCLK[1] = ((data >>  0) & 0xFF) * 1000000;
                pDev->Power.PmNVCLK[2] = ((data >>  8) & 0xFF) * 1000000;
                pDev->Power.PmNVCLK[3] = ((data >> 16) & 0xFF) * 1000000;
                pDev->Power.PmNVCLK[4] = ((data >> 24) & 0xFF) * 1000000;
            }
        }

        //
        // Check for a registry override for the Idle MClock setting
        //
        if (IsNV11(pDev))
        {
            U032 multiplier;

            if (pDev->Framebuffer.HalInfo.RamType == NV_CFG_RAM_TYPE_DDRRAM)
            {
                // For DDR, MCLK is in terms of pre-multiplied clock.
                multiplier = 2000000;
            }
            else
            {
                multiplier = 1000000;
            }
            if (OS_READ_REGISTRY_DWORD(pDev, strDevNodeRM, "PMMCLOCK", &data) == RM_OK)
            {
                pDev->Power.PmMCLK[1] = ((data >>  0) & 0xFF) * multiplier;
                pDev->Power.PmMCLK[2] = ((data >>  8) & 0xFF) * multiplier;
                pDev->Power.PmMCLK[3] = ((data >> 16) & 0xFF) * multiplier;
                pDev->Power.PmMCLK[4] = ((data >> 24) & 0xFF) * multiplier;
            }
        }

        //
        // Initialize Power Mizer
        //
        pDev->Power.PowerMizerDefault = POWER_MIZER_DEFAULT;
        if (IsNV11(pDev))
            if (OS_READ_REGISTRY_DWORD(pDev, strDevNodeRM, NV_REG_POWER_MIZER_DEFAULT, &data) == RM_OK)
                pDev->Power.PowerMizerDefault = data;

        pDev->Power.PowerMizerLevel = pDev->Power.PowerMizerDefault;
        if (IsNV11(pDev))
            if (OS_READ_REGISTRY_DWORD(pDev, strDevNodeRM, NV_REG_POWER_MIZER_LEVEL, &data) == RM_OK)
                pDev->Power.PowerMizerLevel = data;

        // 
        // Just in case this is not a real mobile BIOS, make sure hw power 
        // features are enabled
        //
        //if (pDev->Power.MobileOperation)
        //{
        //  FLD_WR_DRF_NUM(_PBUS, _DEBUG_1, _CORE_SLOWDWN, 3);
        //  FLD_WR_DRF_DEF(_PBUS, _DEBUG_1, _PCIM_THROTTLE, _ENABLED);
        //}
    }

    return (RM_OK);
}

RM_STATUS mcSetPowerMizerLevel(PHWINFO pDev, U032 PMLevel)
{
    pDev->Power.PowerMizerLevel = PMLevel;
    osWriteRegistryDword(pDev, strDevNodeRM, NV_REG_POWER_MIZER_LEVEL, PMLevel);

    return (RM_OK);
}
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Microsoft Xbox (1.00.4400) [April 2002] [src]\private\ntos\video\nv20\drivers\resman\kernel\mc\nv\mc.c ===
/***************************************************************************\
|*                                                                           *|
|*        Copyright (c) 1993-2000 NVIDIA, Corp.  All rights reserved.        *|
|*                                                                           *|
|*     NOTICE TO USER:   The source code  is copyrighted under  U.S. and     *|
|*     international laws.   NVIDIA, Corp. of Sunnyvale, California owns     *|
|*     the copyright  and as design patents  pending  on the design  and     *|
|*     interface  of the NV chips.   Users and possessors of this source     *|
|*     code are hereby granted  a nonexclusive,  royalty-free  copyright     *|
|*     and  design  patent license  to use this code  in individual  and     *|
|*     commercial software.                                                  *|
|*                                                                           *|
|*     Any use of this source code must include,  in the user documenta-     *|
|*     tion and  internal comments to the code,  notices to the end user     *|
|*     as follows:                                                           *|
|*                                                                           *|
|*     Copyright (c) 1993-2000  NVIDIA, Corp.    NVIDIA  design  patents     *|
|*     pending in the U.S. and foreign countries.                            *|
|*                                                                           *|
|*     NVIDIA, CORP.  MAKES  NO REPRESENTATION ABOUT  THE SUITABILITY OF     *|
|*     THIS SOURCE CODE FOR ANY PURPOSE.  IT IS PROVIDED "AS IS" WITHOUT     *|
|*     EXPRESS OR IMPLIED WARRANTY OF ANY KIND.  NVIDIA, CORP. DISCLAIMS     *|
|*     ALL WARRANTIES  WITH REGARD  TO THIS SOURCE CODE,  INCLUDING  ALL     *|
|*     IMPLIED   WARRANTIES  OF  MERCHANTABILITY  AND   FITNESS   FOR  A     *|
|*     PARTICULAR  PURPOSE.   IN NO EVENT SHALL NVIDIA, CORP.  BE LIABLE     *|
|*     FOR ANY SPECIAL, INDIRECT, INCIDENTAL,  OR CONSEQUENTIAL DAMAGES,     *|
|*     OR ANY DAMAGES  WHATSOEVER  RESULTING  FROM LOSS OF USE,  DATA OR     *|
|*     PROFITS,  WHETHER IN AN ACTION  OF CONTRACT,  NEGLIGENCE OR OTHER     *|
|*     TORTIOUS ACTION, ARISING OUT  OF OR IN CONNECTION WITH THE USE OR     *|
|*     PERFORMANCE OF THIS SOURCE CODE.                                      *|
|*                                                                           *|
 \***************************************************************************/

/******************************* MC Manager ********************************\
*                                                                           *
* Module: MC.C                                                              *
*   All global exceptions are dispatched through this module.               *
*                                                                           *
*****************************************************************************
*                                                                           *
* History:                                                                  *
*                                                                           *
\***************************************************************************/
#include <nv_ref.h>
#include <nvrm.h>
#include <state.h>
#include <class.h>
#include <vblank.h>
#include <dma.h>
#include <fifo.h>
#include <fb.h>
#include <gr.h>
#include <tmr.h>
#include <mc.h>
#include <os.h>
#include <devinit.h>
#include "nvhw.h"
#include "nvVer.h"

//---------------------------------------------------------------------------
//
//  Create/Delete chip id object.
//
//---------------------------------------------------------------------------

//---------------------------------------------------------------------------
//
//  Chip specific object method.
//
//---------------------------------------------------------------------------

//---------------------------------------------------------------------------
//
//  Resource Manager exception service handlers entrypoint.
//
//---------------------------------------------------------------------------

VOID mcService
(
    PHWINFO pDev  // pointer to an nv device
)
{
    V032 pending;
    V032 pmc;
#ifdef RM_STATS
    U032 EnterTimeLo;
    U032 EnterTimeHi;
    U032 ExitTimeLo;
    U032 ExitTimeHi;
    U032 ServiceTimeLo;
    U032 ServiceTimeHi;
#endif
    U032 MirrorEnabled = 0;

    NVRM_TRACE('MISR');

#ifdef RM_STATS
    pDev->Chip.ServiceCount++;
    tmrGetCurrentTime(&EnterTimeHi, &EnterTimeLo);
#endif
    osEnterCriticalCode(pDev);
    //
    // Disable I/O broadcast mode.  There are bugs in NV11's use of broadcast
    // mode where we can't reach HeadB through privSpace with this enabled.
    // It's possible that we've gotten an Int10 interrupt that enables
    // Broadcast mode before we've received the rmEnableVGA call.  We need
    // to disable this when servicing the interrupts, because these functions
    // need to access both Head A and Head B through privSpace.
    //
    // Chips after NV11 have this fixed.
    //
    if (IsNV11(pDev) && !pDev->Vga.Enabled)
    {
        // store broadcast support
        MirrorEnabled = REG_RD_DRF(_PBUS, _DEBUG_1, _DISP_MIRROR);

        // disable broadcast support
        FLD_WR_DRF_DEF(_PBUS, _DEBUG_1, _DISP_MIRROR, _DISABLE);

    }

    do
    {
        //
        // Process all exceptions as required
        //
        pending = 0;
        pmc     = REG_RD32(NV_PMC_INTR_0);
        
        if (pmc & DRF_DEF(_PMC, _INTR_0, _PTIMER, _PENDING))
        {
#ifdef RM_STATS
            pDev->Timer.ServiceCount++;
#endif
            pending |= tmrService(pDev);
        }
        
        if (pmc & (DRF_DEF(_PMC, _INTR_0, _PCRTC,    _PENDING) |
                   DRF_DEF(_PMC, _INTR_0, _PCRTC2,    _PENDING)))
        {
#ifdef RM_STATS
            pDev->Dac.ServiceCount++;
#endif
            pending |= dacService(pDev);
        }
        
        if (pmc & DRF_DEF(_PMC, _INTR_0, _PGRAPH, _PENDING))
        {
#ifdef RM_STATS
            pDev->Graphics.ServiceCount++;
#endif
            pending |= grService(pDev);
        }
        
        if (pmc & DRF_DEF(_PMC, _INTR_0, _PMEDIA, _PENDING))
        {
#ifdef RM_STATS
            pDev->MediaPort.ServiceCount++;
#endif
            pending |= mpService(pDev); 
        }
        
        if ((pmc & DRF_DEF(_PMC, _INTR_0, _PFIFO, _PENDING))
         || (REG_RD_DRF(_PFIFO, _DEBUG_0, _CACHE_ERROR0) == NV_PFIFO_DEBUG_0_CACHE_ERROR0_PENDING))
        {
#ifdef RM_STATS
            pDev->Fifo.ServiceCount++;
#endif
            pending |= fifoService(pDev);
        }
        
        if (pmc & DRF_DEF(_PMC, _INTR_0, _PVIDEO, _PENDING))
        {
#ifdef RM_STATS
            pDev->Video.ServiceCount++;
#endif
            pending |= videoService(pDev); 
        }
               
        if(pmc & DRF_DEF(_PMC, _INTR_0, _PBUS, _PENDING))
        {
#ifdef RM_STATS        
            pDev->Bus.ServiceCount++;
#endif
            pending |= busService(pDev);
        }
    }
    while (pending);
    
    // Restore Broadcast support if needed
    if (IsNV11(pDev) && !(pDev->Vga.Enabled) && MirrorEnabled)
    {
        FLD_WR_DRF_DEF(_PBUS, _DEBUG_1, _DISP_MIRROR, _ENABLE);
    }

    osExitCriticalCode(pDev);

#ifdef RM_STATS
    //
    // Add time spent in service routines to accumulated time.
    //
    tmrGetCurrentTime(&ExitTimeHi, &ExitTimeLo);
    ServiceTimeLo = ExitTimeLo - EnterTimeLo;
    ServiceTimeHi = ExitTimeHi - EnterTimeHi;
    if (ServiceTimeLo > ExitTimeLo)
        ServiceTimeHi--;
    pDev->Chip.ServiceTimeLo += ServiceTimeLo;
    if (pDev->Chip.ServiceTimeLo < ServiceTimeLo)
        ServiceTimeHi++;
    pDev->Chip.ServiceTimeHi += ServiceTimeHi;    
#endif

    NVRM_TRACE('misr');
}

V032 busService(PHWINFO pDev)
{    
    HotPlugService(pDev);
    
    //reset the bus interrupt in master
    

    //no pending irqs here- all interrupts serviced at once at this point
    return 0;
}

#define BIOS_RM_DWORD_REV       0x02050100

//
// Determine the current BIOS revision.
//
// If we've got a BIOS that is later than rev 2.05.01, we'll also check the dword
// that's been added to the BIOS header which indicates the minimum driver revision
// required for this HW.
//
// This allows us to add support for future chips before they've been completely
// validated. If a previously shipped driver turns out to not be able to safely
// boot the HW, we'll change the BIOS dword to require a later driver to boot.
//
RM_STATUS
mcSetBiosRevision
(
    PHWINFO pDev
)
{
#ifndef IKOS
    U032 offset;
    BMP_Control_Block bmpCtrlBlk;
    U016 minDrvRev;
    RM_STATUS rmStatus;
#endif

#ifndef IKOS
    rmStatus = DevinitGetBMPControlBlock(pDev,
                                         &bmpCtrlBlk,
                                         &offset);
    if (rmStatus == RM_OK)
    {
        // set the BiosRevision and BiosRMDword (if it's available)
        switch (bmpCtrlBlk.CTL_Version)
        {
            case BMP_INIT_TABLE_VER_1:
            {
                BMP_Struc_Rev1 BmpStrucRev1;
                BiosReadStructure(pDev,
                                  (U008 *) &BmpStrucRev1,
                                  offset,
                                  (U032 *) 0,
                                  BMP_INIT1_FMT);
                pDev->Chip.BiosRevision       = BmpStrucRev1.BIOS_Version;
                pDev->Chip.BiosOEMRevision    = 0;
                pDev->Chip.BiosRMDword        = 0x0;      // not supported
                break;
            }

            case BMP_INIT_TABLE_VER_2:
            case BMP_INIT_TABLE_VER_3:
            case BMP_INIT_TABLE_VER_4:
            {
                BMP_Struc_Rev2 BmpStrucRev2;
                BiosReadStructure(pDev,
                                  (U008 *) &BmpStrucRev2,
                                  offset,
                                  (U032 *) 0,
                                  BMP_INIT2_FMT);
                pDev->Chip.BiosRevision       = BmpStrucRev2.BIOS_Version;
                pDev->Chip.BiosOEMRevision    = 0;
                pDev->Chip.BiosRMDword        = BmpStrucRev2.BIOS_DriverInfo;
                break;
            }

            // default is BMP init table version 5 base-level functionality
            default:
            {
                BMP_Struc_Rev5 BmpStrucRev5;
                BiosReadStructure(pDev,
                                  (U008 *) &BmpStrucRev5,
                                  offset,
                                  (U032 *) 0,
                                  BMP_INIT5_FMT);

                pDev->Chip.BiosRevision       = BmpStrucRev5.BIOS_Version;
                pDev->Chip.BiosOEMRevision    = BmpStrucRev5.BMP_OEMRevision;
                pDev->Chip.BiosRMDword        = BmpStrucRev5.BIOS_DriverInfo;
                break;
            }
        }
    
        minDrvRev = (U016)(pDev->Chip.BiosRMDword & 0xFFFF);
                    
        // Check if we're loading a driver that is at the required rev or higher
        if (minDrvRev > NV_DRIVER_VERSION_NUMBER)
        {
            DBG_PRINT_STRING(DEBUGLEVEL_ERRORS, "NVRM: Later driver revision required!\n");
            DBG_PRINT_STRING_VALUE(DEBUGLEVEL_ERRORS, "          HW expects a revision >= ", minDrvRev);
            DBG_PRINT_STRING_VALUE(DEBUGLEVEL_ERRORS, "          RM driver version is ", NV_DRIVER_VERSION_NUMBER);
            return RM_ERROR;
        }
    
        return RM_OK;
    }
    else
#endif
    {
        U032 i = 0, found = 0;

        //
        // We have ourselves on old BIOS.     
        //
        // This is nasty, but we need to scan for the POST string
        //   I'm not sure this will work on the MAC, but it shouldn't matter.
        //
        while (!found && (i < 0x100))
        {
            if (REG_RD08(pDev->Pram.HalInfo.PraminOffset+i) == 'O')
                if (REG_RD08(pDev->Pram.HalInfo.PraminOffset+i+1) == 'S')
                    if (REG_RD08(pDev->Pram.HalInfo.PraminOffset+i+2) == ' ')
                        if (REG_RD08(pDev->Pram.HalInfo.PraminOffset+i+3) == 'V')
                        {
                            pDev->Chip.BiosRevision =
                                ((REG_RD08(pDev->Pram.HalInfo.PraminOffset+i+4) - '0') << 24)
                              | ((REG_RD08(pDev->Pram.HalInfo.PraminOffset+i+6) - '0') << 20)
                              | ((REG_RD08(pDev->Pram.HalInfo.PraminOffset+i+7) - '0') << 16);
                             
                            if (REG_RD08(pDev->Pram.HalInfo.PraminOffset+i+8) != '.')
                                pDev->Chip.BiosRevision |= (REG_RD08(pDev->Pram.HalInfo.PraminOffset+i+8) - 'A') & 0xFF;
                            else
                            {
                                pDev->Chip.BiosRevision |=
                                    ((REG_RD08(pDev->Pram.HalInfo.PraminOffset+i+9) - '0') << 4)
                                  | ((REG_RD08(pDev->Pram.HalInfo.PraminOffset+i+10) - '0'));
                            }
                        found = 1;
                        }                            
                            
            i++;  
        }                                  
        pDev->Chip.BiosOEMRevision = 0;
        return RM_OK;
    }
}


//
// A possible power state change is triggered by a variety of sources through
// the resman.  This routine will check the current state of the system and
// determine if a power-related change is required.
//
// All algorithms are localized in this routine as opposed to being sprinkled
// throughout the rest of the code.
//
RM_STATUS mcPowerStateTrigger
(
    PHWINFO pDev
)
{
    U032 NewNVClk;
    U032 NewMClk;
    U032 PMLevel = pDev->Power.PowerMizerLevel;

    //
    // Perform mobile-specific power management
    //

    if (pDev->Power.PostNVCLK == 0)
        pDev->Power.PostNVCLK = pDev->Dac.HalInfo.NVClk;
    if (pDev->Power.PostMCLK == 0)
        pDev->Power.PostMCLK = pDev->Dac.HalInfo.MClk;

    if (pDev->Power.MobileOperation)
    {

        if (pDev->Graphics.HalInfo.has3dObject)
        {
            if (PMLevel == 0)
            {
                NewNVClk = pDev->Power.PmNVCLK[0];
            }
            else
            {
                // 3D NVClk uses one PM level below the current one.
                NewNVClk = pDev->Power.PmNVCLK[PMLevel - 1];
            }
        }
        else
        {
            NewNVClk = pDev->Power.PmNVCLK[PMLevel];
        }

        // Both 2D and 3D shared the same MClk since it is difficult to
        // dynamically switch MClk
        NewMClk = pDev->Power.PmMCLK[PMLevel];

        if (!NewNVClk)
        {
            NewNVClk = pDev->Power.PostNVCLK;
        }
        if (!NewMClk)
        {
            NewMClk = pDev->Power.PostMCLK;
        }

        if (NewNVClk != pDev->Dac.HalInfo.NVClk)
        {
            pDev->Dac.HalInfo.NVClk = NewNVClk;
            dacProgramNVClk(pDev);
        }
        if (NewMClk != pDev->Dac.HalInfo.MClk)
        {
            pDev->Dac.HalInfo.MClk = NewMClk;
            dacProgramMClk(pDev, 1);
        }
    }
    return RM_OK;
}


//---------------------------------------------------------------------------
//
//  Chip ID functions.
//
//---------------------------------------------------------------------------


//-------------------------------------------------------------------
// NV4 and family
//-------------------------------------------------------------------
BOOL IsNV4(PHWINFO pDev)
{
    PMCHALINFO pMcHalInfo = pDev->halHwInfo.pMcHalInfo;

    // assert the architecture has been setup
    RM_ASSERT(pMcHalInfo->Architecture);

    return ((pMcHalInfo->Architecture == MC_ARCHITECTURE_NV04) &&
            (pMcHalInfo->Implementation == MC_IMPLEMENTATION_NV04));
}

BOOL IsNV5(PHWINFO pDev)
{
    PMCHALINFO pMcHalInfo = pDev->halHwInfo.pMcHalInfo;

    // assert the architecture has been setup
    RM_ASSERT(pMcHalInfo->Architecture);

    return ((pMcHalInfo->Architecture == MC_ARCHITECTURE_NV04) &&
            (pMcHalInfo->Implementation >= MC_IMPLEMENTATION_NV05));
}

BOOL IsNV0A(PHWINFO pDev)
{
    PMCHALINFO pMcHalInfo = pDev->halHwInfo.pMcHalInfo;

    // assert the architecture has been setup
    RM_ASSERT(pMcHalInfo->Architecture);

    return ((pMcHalInfo->Architecture == MC_ARCHITECTURE_NV04) &&
            (pMcHalInfo->Implementation == MC_IMPLEMENTATION_NV0A));
}

BOOL IsNV5orBetter(PHWINFO pDev)
{
    PMCHALINFO pMcHalInfo = pDev->halHwInfo.pMcHalInfo;

    // assert the architecture has been setup
    RM_ASSERT(pMcHalInfo->Architecture);

    return ((pMcHalInfo->Architecture > MC_ARCHITECTURE_NV04) ||
            ((pMcHalInfo->Architecture == MC_ARCHITECTURE_NV04) &&
             (pMcHalInfo->Implementation >= MC_IMPLEMENTATION_NV05)));
}

//-------------------------------------------------------------------
// NV10 and family.
//-------------------------------------------------------------------
BOOL IsNV10(PHWINFO pDev)
{
    PMCHALINFO pMcHalInfo = pDev->halHwInfo.pMcHalInfo;

    // assert the architecture has been setup
    RM_ASSERT(pMcHalInfo->Architecture);

    return ((pMcHalInfo->Architecture == MC_ARCHITECTURE_NV10) &&
            (pMcHalInfo->Implementation == MC_IMPLEMENTATION_NV10));
}

BOOL IsNV10MaskRevA02orBetter(PHWINFO pDev)
{
    PMCHALINFO pMcHalInfo = pDev->halHwInfo.pMcHalInfo;

    // assert the architecture has been setup
    RM_ASSERT(pMcHalInfo->Architecture);

    // Is this NV10 A02 or better.  Note that "better" also includes all 
    // NV1X parts above NV10.
    return ((pMcHalInfo->Architecture == MC_ARCHITECTURE_NV10) &&
            ((pMcHalInfo->MaskRevision >= MC_MASK_REVISION_A2) ||
             (pMcHalInfo->Implementation > MC_IMPLEMENTATION_NV10)));
}

BOOL IsNV10MaskRevA03orBetter(PHWINFO pDev)
{
    PMCHALINFO pMcHalInfo = pDev->halHwInfo.pMcHalInfo;

    // assert the architecture has been setup
    RM_ASSERT(pMcHalInfo->Architecture);

    // Is this NV10 A03 or better.  Note that "better" also includes all 
    // NV1X parts above NV10.
    return ((pMcHalInfo->Architecture == MC_ARCHITECTURE_NV10) &&
            (((pMcHalInfo->MaskRevision >= MC_MASK_REVISION_A3) &&
             (pMcHalInfo->MaskRevision != MC_MASK_REVISION_A6)) ||
             (pMcHalInfo->Implementation > MC_IMPLEMENTATION_NV10)));
}

BOOL IsNV11(PHWINFO pDev)
{
    PMCHALINFO pMcHalInfo = pDev->halHwInfo.pMcHalInfo;

    // assert the architecture has been setup
    RM_ASSERT(pMcHalInfo->Architecture);

    // Is this NV11?
    return ((pMcHalInfo->Architecture == MC_ARCHITECTURE_NV10) &&
            (pMcHalInfo->Implementation == MC_IMPLEMENTATION_NV11));
}

BOOL IsNV1A(PHWINFO pDev)
{
    PMCHALINFO pMcHalInfo = pDev->halHwInfo.pMcHalInfo;

    // assert the architecture has been setup
    RM_ASSERT(pMcHalInfo->Architecture);

    // Is this NV11?
    return ((pMcHalInfo->Architecture == MC_ARCHITECTURE_NV10) &&
            (pMcHalInfo->Implementation == MC_IMPLEMENTATION_NV1A));
}

BOOL IsNV15(PHWINFO pDev)
{
    PMCHALINFO pMcHalInfo = pDev->halHwInfo.pMcHalInfo;

    // assert the architecture has been setup
    RM_ASSERT(pMcHalInfo->Architecture);

    return ((pMcHalInfo->Architecture == MC_ARCHITECTURE_NV10) &&
            (pMcHalInfo->Implementation == MC_IMPLEMENTATION_NV15));
}

BOOL IsNV20(PHWINFO pDev)
{
    PMCHALINFO pMcHalInfo = pDev->halHwInfo.pMcHalInfo;

    // assert the architecture has been setup
    RM_ASSERT(pMcHalInfo->Architecture);

    return ((pMcHalInfo->Architecture == MC_ARCHITECTURE_NV20) &&
            (pMcHalInfo->Implementation == MC_IMPLEMENTATION_NV20));
}

#ifdef _WIN32
#pragma warning(disable: 4296)
#endif

BOOL IsNV10orBetter(PHWINFO pDev)
{
    PMCHALINFO pMcHalInfo = pDev->halHwInfo.pMcHalInfo;

    // assert the architecture has been setup
    RM_ASSERT(pMcHalInfo->Architecture);

    return ((pMcHalInfo->Architecture >= MC_ARCHITECTURE_NV10) &&
            (pMcHalInfo->Implementation >= MC_IMPLEMENTATION_NV10));
}

#ifdef _WIN32
#pragma warning(default: 4296)
#endif

BOOL IsNV15orBetter(PHWINFO pDev)
{
    PMCHALINFO pMcHalInfo = pDev->halHwInfo.pMcHalInfo;

    // assert the architecture has been setup
    RM_ASSERT(pMcHalInfo->Architecture);

    return (((pMcHalInfo->Architecture == MC_ARCHITECTURE_NV10) &&
             (pMcHalInfo->Implementation >= MC_IMPLEMENTATION_NV11)) ||
             (pMcHalInfo->Architecture >= MC_ARCHITECTURE_NV20));
}

BOOL IsNV15MaskRevA01(PHWINFO pDev)
{
    PMCHALINFO pMcHalInfo = pDev->halHwInfo.pMcHalInfo;

    // assert the architecture has been setup
    RM_ASSERT(pMcHalInfo->Architecture);

    // Is this NV15 Mask Revision A01?
    return ((pMcHalInfo->Architecture == MC_ARCHITECTURE_NV10) &&
            (pMcHalInfo->Implementation == MC_IMPLEMENTATION_NV15) &&
            (pMcHalInfo->MaskRevision == MC_MASK_REVISION_A1));
}

BOOL IsNV15MaskRevA02(PHWINFO pDev)
{
    PMCHALINFO pMcHalInfo = pDev->halHwInfo.pMcHalInfo;

    // assert the architecture has been setup
    RM_ASSERT(pMcHalInfo->Architecture);

    // Is this NV15 Mask Revision A02?
    return ((pMcHalInfo->Architecture == MC_ARCHITECTURE_NV10) &&
            (pMcHalInfo->Implementation == MC_IMPLEMENTATION_NV15) &&
            (pMcHalInfo->MaskRevision == MC_MASK_REVISION_A2));
}

BOOL IsNV15MaskRevA03(PHWINFO pDev)
{
    PMCHALINFO pMcHalInfo = pDev->halHwInfo.pMcHalInfo;

    // assert the architecture has been setup
    RM_ASSERT(pMcHalInfo->Architecture);

    // Is this NV15 Mask Revision A03?
    return ((pMcHalInfo->Architecture == MC_ARCHITECTURE_NV10) &&
            (pMcHalInfo->Implementation == MC_IMPLEMENTATION_NV15) &&
            (pMcHalInfo->MaskRevision == MC_MASK_REVISION_A3));
}

BOOL IsNV11orBetter(PHWINFO pDev)
{
    PMCHALINFO pMcHalInfo = pDev->halHwInfo.pMcHalInfo;

    // assert the architecture has been setup
    RM_ASSERT(pMcHalInfo->Architecture);

    // Is this NV11 or better?
    return (((pMcHalInfo->Architecture == MC_ARCHITECTURE_NV10) &&
             (pMcHalInfo->Implementation >= MC_IMPLEMENTATION_NV11) &&
             (pMcHalInfo->Implementation != MC_IMPLEMENTATION_NV15)) ||
             (pMcHalInfo->Architecture >= MC_ARCHITECTURE_NV20));
}

BOOL IsNV20orBetter(PHWINFO pDev)
{
    PMCHALINFO pMcHalInfo = pDev->halHwInfo.pMcHalInfo;

    // assert the architecture has been setup
    RM_ASSERT(pMcHalInfo->Architecture);

    return (pMcHalInfo->Architecture >= MC_ARCHITECTURE_NV20);
}
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Microsoft Xbox (1.00.4400) [April 2002] [src]\private\ntos\video\nv20\drivers\resman\kernel\mc\nv10\mcnv10.c ===
/***************************************************************************\
|*                                                                           *|
|*        Copyright (c) 1993-2000 NVIDIA, Corp.  All rights reserved.        *|
|*                                                                           *|
|*     NOTICE TO USER:   The source code  is copyrighted under  U.S. and     *|
|*     international laws.   NVIDIA, Corp. of Sunnyvale, California owns     *|
|*     the copyright  and as design patents  pending  on the design  and     *|
|*     interface  of the NV chips.   Users and possessors of this source     *|
|*     code are hereby granted  a nonexclusive,  royalty-free  copyright     *|
|*     and  design  patent license  to use this code  in individual  and     *|
|*     commercial software.                                                  *|
|*                                                                           *|
|*     Any use of this source code must include,  in the user documenta-     *|
|*     tion and  internal comments to the code,  notices to the end user     *|
|*     as follows:                                                           *|
|*                                                                           *|
|*     Copyright (c) 1993-2000  NVIDIA, Corp.    NVIDIA  design  patents     *|
|*     pending in the U.S. and foreign countries.                            *|
|*                                                                           *|
|*     NVIDIA, CORP.  MAKES  NO REPRESENTATION ABOUT  THE SUITABILITY OF     *|
|*     THIS SOURCE CODE FOR ANY PURPOSE.  IT IS PROVIDED "AS IS" WITHOUT     *|
|*     EXPRESS OR IMPLIED WARRANTY OF ANY KIND.  NVIDIA, CORP. DISCLAIMS     *|
|*     ALL WARRANTIES  WITH REGARD  TO THIS SOURCE CODE,  INCLUDING  ALL     *|
|*     IMPLIED   WARRANTIES  OF  MERCHANTABILITY  AND   FITNESS   FOR  A     *|
|*     PARTICULAR  PURPOSE.   IN NO EVENT SHALL NVIDIA, CORP.  BE LIABLE     *|
|*     FOR ANY SPECIAL, INDIRECT, INCIDENTAL,  OR CONSEQUENTIAL DAMAGES,     *|
|*     OR ANY DAMAGES  WHATSOEVER  RESULTING  FROM LOSS OF USE,  DATA OR     *|
|*     PROFITS,  WHETHER IN AN ACTION  OF CONTRACT,  NEGLIGENCE OR OTHER     *|
|*     TORTIOUS ACTION, ARISING OUT  OF OR IN CONNECTION WITH THE USE OR     *|
|*     PERFORMANCE OF THIS SOURCE CODE.                                      *|
|*                                                                           *|
 \***************************************************************************/

/******************************* MC Manager ********************************\
*                                                                           *
* Module: MCNV10.C                                                          *
*   The master control chip dependent HAL routines are kept here.           *
*                                                                           *
*****************************************************************************
*                                                                           *
* History:                                                                  *
*                                                                           *
\***************************************************************************/
#include <nv_ref.h>
#include <nvrm.h>
#include <nv10_ref.h>
#include <nv10_hal.h>
#include <heap.h>
#include "nvhw.h"
#include "nvhalcpp.h"
#include "cr11help.h"

//
// NV10 MC HAL entry points.
//

//
// nvHalMcControl
//
RM_STATUS
nvHalMcControl_NV10(VOID *arg)
{
    PMCCONTROLARG_000 pMcControlArg = (PMCCONTROLARG_000)arg;
    PHALHWINFO pHalHwInfo = pMcControlArg->pHalHwInfo;
    PMCHALINFO pMcHalInfo;
    PMCHALINFO_NV10 pMcHalPvtInfo;
    U032 M, N, O, P;
    U032 crystal, pmc_boot0;
    U032 IsPllSlowed = 0;  // some compilers think its uninitialized otherwise

    DBG_PRINT_STRING(DEBUGLEVEL_TRACEINFO, "NVRM: nvHalMcControl_NV10\r\n");

    // ASSERTIONS

    //
    // Verify interface revision.
    //
    if (pMcControlArg->id != MC_CONTROL_000)
        return (RM_ERR_VERSION_MISMATCH);

    pHalHwInfo = pMcControlArg->pHalHwInfo;
    pMcHalInfo = pHalHwInfo->pMcHalInfo;
    pMcHalPvtInfo = (PMCHALINFO_NV10)pHalHwInfo->pMcHalPvtInfo;

    switch (pMcControlArg->cmd)
    {
        case MC_CONTROL_SETREVISION:
        {
            PPRAMHALINFO pPramHalInfo = pHalHwInfo->pPramHalInfo;

            // set the inst mem offset
            pPramHalInfo->PraminOffset = DEVICE_BASE(NV_PRAMIN);

            //
            // Get chip revision information.
            //
            // We need to be careful here that the values we pull from the
            // hardware line up with the constants defined in mc.h, or
            // else we need to convert them accordingly.
            //
            // On NV10 and family, they do so we're OK.
            //
            pmc_boot0 = REG_RD32(NV_PMC_BOOT_0);

            pMcHalInfo->Subrevision      = 0;
            pMcHalInfo->MaskRevision     = MC_GET_MASKREVISION(pmc_boot0);
            pMcHalInfo->Revision         = MC_GET_REVISION(pmc_boot0);
            pMcHalInfo->Implementation   = MC_GET_IMPLEMENTATION(pmc_boot0);
            pMcHalInfo->Architecture     = MC_GET_ARCHITECTURE(pmc_boot0);
            pMcHalInfo->Manufacturer     = NV_PMC_BOOT_0_MANUFACTURER_NVIDIA;
            break;
        }
        case MC_CONTROL_INIT:
        {
            U032 PCI_NV1;
            U032 PCI_NV19;
            PDACHALINFO pDacHalInfo = pHalHwInfo->pDacHalInfo;
            PFIFOHALINFO pFifoHalInfo = pHalHwInfo->pFifoHalInfo;
            PGRHALINFO pGrHalInfo = pHalHwInfo->pGrHalInfo;

            //
            // Disable bus mastering before manipulating the NV_PMC_ENABLE register;
            // the dev_master.ref spec indicates that bus mastering must be disabled
            // before clearing PPMI, but experience has show that touching NV_PMC_ENABLE
            // AT ALL with bus mastering on can be dangerous.  This manifests itself on
            // linux with various systems (most notably Dell laptops with GeForce2Go)
            // where fiddling with the NV_PMC_ENABLE register causes the
            // NV_PFIFO_CACHE1_DMA_PUSH's busy bit to get set which in turn causes
            // system hangs when we mistakenly wait for the fifo to go idle.
            // Fixes bug 34247. - aritger
            // Also fixes bug 34388
            //
            PCI_NV1 = REG_RD32(NV_PBUS_PCI_NV_1);
            FLD_WR_DRF_DEF(_PBUS, _PCI_NV_1, _BUS_MASTER, _DISABLED);
	    
            // NV11 Manual says disable both PCI and AGP Bus Mastering
            // This is not needed for bug 34388 fix but may prevent problems in the future
            PCI_NV19 = REG_RD32(NV_PBUS_PCI_NV_19);
            FLD_WR_DRF_DEF(_PBUS, _PCI_NV_19, _AGP_COMMAND_AGP_ENABLE, _OFF);

            // JJV - Reset toggle the Master Control for the fifo and the Bus Mastering logic.
            // This is a fix for a DELL restart hang.19990409-125432.

           {
                U032 x;

                x=REG_RD32(NV_PMC_ENABLE);
                x&=~(DRF_DEF(_PMC, _ENABLE, _PFIFO, _ENABLED) | DRF_DEF(_PMC, _ENABLE, _PPMI, _ENABLED));
                REG_WR32(NV_PMC_ENABLE,x); 
                // This is 100 millisecond delay since this is causing a problem
                osDelay(100);
                x|=(DRF_DEF(_PMC, _ENABLE, _PFIFO, _ENABLED) | DRF_DEF(_PMC, _ENABLE, _PPMI, _ENABLED));
                REG_WR32(NV_PMC_ENABLE,x);
            }

            //
            // Save original MC registers.
            //
            pMcHalPvtInfo->SavePmc = REG_RD32(NV_PMC_ENABLE);
           
            if (pMcHalPvtInfo->SavePmc == 0)
            {
                //
                // This is 0 if NV not boot device! Enable everything so we at least work.
                //
                pMcHalPvtInfo->SavePmc = 0xFFFFFFFF;
                //
                // Reset all devices and interrupts.
                //
                REG_WR32(NV_PMC_ENABLE, 0x00000000);
            }
            pMcHalPvtInfo->SaveIntrEn0 = REG_RD32(NV_PMC_INTR_EN_0);
            REG_WR32(NV_PMC_ENABLE, 0xFFFFFFFF);

            // 
            // restore the previous value of NV_PBUS_PCI_NV_19/NV_PBUS_PCI_NV_1; this will
            // re-enable bus mastering if it was enabled above
            //
            REG_WR32(NV_PBUS_PCI_NV_19, PCI_NV19);
            REG_WR32(NV_PBUS_PCI_NV_1, PCI_NV1);

            // Get the current clock settings.  This, of course, assumes that someone
            // has already started up the PLL's.
            //
            // Determine current strap crystal frequency (in Hz)
            //
            if (REG_RD_DRF(_PEXTDEV, _BOOT_0, _STRAP_CRYSTAL) == NV_PEXTDEV_BOOT_0_STRAP_CRYSTAL_13500K)
                pMcHalInfo->CrystalFreq = 13500000;
            else if (REG_RD_DRF(_PEXTDEV, _BOOT_0, _STRAP_CRYSTAL) == NV_PEXTDEV_BOOT_0_STRAP_CRYSTAL_14318180)
                pMcHalInfo->CrystalFreq = 14318180;

            // Get the crystal (Fin) * 1000
            crystal = pMcHalInfo->CrystalFreq;

            M = REG_RD_DRF(_PRAMDAC, _MPLL_COEFF, _MDIV);
            N = REG_RD_DRF(_PRAMDAC, _MPLL_COEFF, _NDIV);
            P = REG_RD_DRF(_PRAMDAC, _MPLL_COEFF, _PDIV);
            O = 1;
    
            pDacHalInfo->MPllM = M;
            pDacHalInfo->MPllN = N;
            pDacHalInfo->MPllO = O;
            pDacHalInfo->MPllP = P;
            pDacHalInfo->MClk  = ( M != 0 ) ? (N * crystal / (1 << P) / M) : 0;
            
            M = REG_RD_DRF(_PRAMDAC, _VPLL_COEFF, _MDIV);
            N = REG_RD_DRF(_PRAMDAC, _VPLL_COEFF, _NDIV);
            P = REG_RD_DRF(_PRAMDAC, _VPLL_COEFF, _PDIV);
            O = 1;
    
            pDacHalInfo->VPllM = M;
            pDacHalInfo->VPllN = N;
            pDacHalInfo->VPllO = O;
            pDacHalInfo->VPllP = P;
            pDacHalInfo->VClk  = ( M != 0 ) ? (N * crystal / (1 << P) / M) : 0;

            // Make sure to disable the clock slowdown circuit
            if (IsNV11_NV10(pMcHalInfo))
            {
                IsPllSlowed = REG_RD_DRF(_PBUS, _DEBUG_1, _CORE_SLOWDWN);
                FLD_WR_DRF_NUM(_PBUS, _DEBUG_1, _CORE_SLOWDWN, 0);
            }

            M = REG_RD_DRF(_PRAMDAC, _NVPLL_COEFF, _MDIV);
            N = REG_RD_DRF(_PRAMDAC, _NVPLL_COEFF, _NDIV);
            P = REG_RD_DRF(_PRAMDAC, _NVPLL_COEFF, _PDIV);
            O = 1;
    
            // Restore the clock slowdown circuit
            if (IsNV11_NV10(pMcHalInfo))
                FLD_WR_DRF_NUM(_PBUS, _DEBUG_1, _CORE_SLOWDWN, IsPllSlowed);

            pDacHalInfo->NVPllM = M;
            pDacHalInfo->NVPllN = N;
            pDacHalInfo->NVPllO = O;
            pDacHalInfo->NVPllP = P;
            pDacHalInfo->NVClk  = ( M != 0 ) ? (N * crystal / (1 << P) / M) : 0;

            //
            // Get chip revision information.
            //
            // We need to be careful here that the values we pull from the
            // hardware line up with the constants defined in chipid.h, or
            // else we need to convert them accordingly.
            //
            // On NV10 and family, they do so we're OK.
            //
            pmc_boot0 = REG_RD32(NV_PMC_BOOT_0);

            pMcHalInfo->Subrevision      = 0;
            pMcHalInfo->MaskRevision     =  pmc_boot0 &        0xFF;
            pMcHalInfo->Revision         = (pmc_boot0 &     0xF0000) >> 16; 
            pMcHalInfo->Implementation   = (pmc_boot0 &    0xF00000) >> 20;
            pMcHalInfo->Architecture     = (pmc_boot0 &  0xFFF00000) >> 20;
            pMcHalInfo->Manufacturer     = NV_PMC_BOOT_0_MANUFACTURER_NVIDIA;

            // take the Implementation out of the Architecture field
            pMcHalInfo->Architecture     ^= pMcHalInfo->Implementation;

            //
            // Initialize number of crtcs.
            //
            // NOTE: This code needs to be flushed out further to consider the board
            // layout and the number of physical display connectors.  An NV11 device on
            // a board with only a VGA connector should only report one CRTC available.
            //
            if (IsNV11_NV10(pMcHalInfo))
                pDacHalInfo->NumCrtcs = 2;
            else
                pDacHalInfo->NumCrtcs = 1;

            //Save away total number of BAR addresses for the chip
            //as well as what those addresses are.
            pMcHalInfo->TotalPciBars = 2;
            pMcHalInfo->PciBars[0] = REG_RD32(NV_PBUS_PCI_NV_4);
            pMcHalInfo->PciBars[1] = REG_RD32(NV_PBUS_PCI_NV_5);

            //
            // Because of a HW bug in NV10/NV15 (fixed in NV11) regarding Celsius SetContextDmaVertex when
            // passed the NULL object, we need to guarantee the first DWORD of the BIOS image looks like a
            // valid context DMA.
            // 
            // Lucky for us normally what lives at instance addr 0 is the first part of the BIOS VGA
            // signature (0xAA55), which appears to have the NV_DMA_PAGE_ENTRY_LINEAR set. But on IKOS and
            // possibly non-IBM Compatible BIOS's, we may not be so lucky. So, we'll check what's there
            // and if necessary, OR-in the NV_DMA_PAGE_TABLE_PRESENT bit (gulp).
            //
            if (IsNV10_NV10(pMcHalInfo) || IsNV15_NV10(pMcHalInfo))
            {
                U032 inst_addr0 = REG_RD32(DEVICE_BASE(NV_PRAMIN));

                if ((DRF_VAL(_DMA, _PAGE, _TABLE, inst_addr0) == NV_DMA_PAGE_TABLE_NOT_PRESENT) &&
                    (DRF_VAL(_DMA, _PAGE, _ENTRY, inst_addr0) == NV_DMA_PAGE_ENTRY_NOT_LINEAR))
                {
#if !defined(IKOS) && !defined(MACOS)
                    DBG_PRINT_STRING(DEBUGLEVEL_ERRORS, "NVRM: Non-VGA BIOS image? Setting the PAGE_TABLE_PRESENT bit");
                    DBG_BREAKPOINT();
#endif
                    REG_WR32(DEVICE_BASE(NV_PRAMIN), (inst_addr0 | DRF_DEF(_DMA, _PAGE, _TABLE, _PRESENT)));
                }
            }

            //
            // Set fifo count/context size here so the values are
            // available for the rest of the STATE_INIT sequence.
            //
            pFifoHalInfo->Count = NUM_FIFOS_NV10;
            pFifoHalInfo->ContextSize = FC_SIZE_NV10;

            //
            // Determine what graphics capabilities we have.
            //
            // For future chips, we default to basic capabilities which is safest and most
            // reasonable in the compatibility versions of the drivers. For the performance
            // drivers that ship with the chip, we'll add the correct detection in that version.
            //
            if (IsNV10_NV10(pMcHalInfo))
            {
                //
                // NV10 relies on the PCI ID to match GL functionality
                //
                if ((pMcHalInfo->PCIDeviceID >> 16) == 0x103)
                    pGrHalInfo->Capabilities = ( NVHAL_GRAPHICS_CAPS_AKILL_USERCLIP     // fast user clip planes
                                                | NVHAL_GRAPHICS_CAPS_AA_LINES          // AA lines
                                                | NVHAL_GRAPHICS_CAPS_AA_POLYS          // AA polys
                                                | NVHAL_GRAPHICS_CAPS_2SIDED_LIGHTING   // two-sided lighting
                                                | NVHAL_GRAPHICS_CAPS_QUADRO_GENERIC    // anything not yet covered
                                                | NVHAL_GRAPHICS_CAPS_UBB               // unified backbuffers
                                                | NVHAL_GRAPHICS_CAPS_NV1X_COLOR_INVARIANCE // needs bug workaround
                                                | 0x8);                                 // max clips = 8
                //
                // also need to check for pseudo-Quadro boards
                //
                //  NV10 Elsa Quadro 0x0C481048
                //  Generic NV vendor overrides where SubsystemDeviceID[15] = 1
                //
                else if ((pMcHalInfo->PCISubDeviceID == 0x0C481048) ||
                         ((pMcHalInfo->PCISubDeviceID & 0x8000FFFF) == 0x800010DE))

                          pGrHalInfo->Capabilities = ( NVHAL_GRAPHICS_CAPS_UBB               // unified backbuffers
                                                      | NVHAL_GRAPHICS_CAPS_NV1X_COLOR_INVARIANCE // needs bug workaround
                                                      | 0x1);                                 // max clips = 1

                else 
                    pGrHalInfo->Capabilities = ( NVHAL_GRAPHICS_CAPS_NV1X_COLOR_INVARIANCE // needs bug workaround
                                                | 0x1);                                 // max clips = 1
            }
            else if (IsNV15_NV10(pMcHalInfo))
            {
                //
                // NV15 relies on the PCI ID to match GL functionality
                //
                if ((pMcHalInfo->PCIDeviceID >> 16) == 0x153)
                    pGrHalInfo->Capabilities = ( NVHAL_GRAPHICS_CAPS_LOGIC_OPS          // logic ops
                                                | NVHAL_GRAPHICS_CAPS_AKILL_USERCLIP    // fast user clip planes
                                                | NVHAL_GRAPHICS_CAPS_AA_LINES          // AA lines
                                                | NVHAL_GRAPHICS_CAPS_AA_POLYS          // AA polys
                                                | NVHAL_GRAPHICS_CAPS_2SIDED_LIGHTING   // two-sided lighting
                                                | NVHAL_GRAPHICS_CAPS_QUADRO_GENERIC    // anything not yet covered
                                                | NVHAL_GRAPHICS_CAPS_UBB               // unified backbuffers
                                                | NVHAL_GRAPHICS_CAPS_NV1X_COLOR_INVARIANCE // needs bug workaround
                                                | 0x8);                                 // max clips = 8
                
                //
                // also need to check for pseudo-Quadro boards
                //
                //  NV15 Dell 0x002E10DE
                //  Generic NV vendor overrides where SubsystemDeviceID[15] = 1
                //
                else if ((pMcHalInfo->PCISubDeviceID == 0x002E10DE) ||
                         ((pMcHalInfo->PCISubDeviceID & 0x8000FFFF) == 0x800010DE))
                
                    pGrHalInfo->Capabilities = ( NVHAL_GRAPHICS_CAPS_UBB               // unified backbuffers
                                                 | NVHAL_GRAPHICS_CAPS_NV1X_COLOR_INVARIANCE // needs bug workaround
                                                 | 0x1);                                 // max clips = 1

                else 
                    pGrHalInfo->Capabilities = ( NVHAL_GRAPHICS_CAPS_NV1X_COLOR_INVARIANCE // needs bug workaround
                                                | 0x1);                                 // max clips = 1
                
                // needs NV15 aliased line fix
                if (IsNV15MaskRevA03_NV10(pMcHalInfo) || IsNV15MaskRevA02_NV10(pMcHalInfo))
                {
                    pGrHalInfo->Capabilities |= NVHAL_GRAPHICS_CAPS_NV15_ALINES;       // aliased line fix
                }
            }
            else if (IsNV1A_NV10(pMcHalInfo) || IsNV11_NV10(pMcHalInfo))
            {
                //
                // NV11 relies on the PCI ID to match GL functionality
                // (note: no AA_LINES or AA_POLYS for the NV11 GL part)
                // (note2: no UBB for NV11-mobile part (0x0112)
                //
                if ((pMcHalInfo->PCIDeviceID >> 16) == 0x113)
                    pGrHalInfo->Capabilities = ( NVHAL_GRAPHICS_CAPS_LOGIC_OPS          // logic ops
                                                | NVHAL_GRAPHICS_CAPS_AKILL_USERCLIP    // fast user clip planes
                                                | NVHAL_GRAPHICS_CAPS_2SIDED_LIGHTING   // two-sided lighting
                                                | NVHAL_GRAPHICS_CAPS_QUADRO_GENERIC    // anything not yet covered
                                                | NVHAL_GRAPHICS_CAPS_UBB               // unified backbuffers
                                                | NVHAL_GRAPHICS_CAPS_NV1X_COLOR_INVARIANCE // needs bug workaround
                                                | 0x8);                                 // max clips = 8

                //
                // also need to check for pseudo-Quadro boards
                //
                //  NV11 IBM 0x004810DE
                //  Generic NV vendor overrides where SubsystemDeviceID[15] = 1
                //
                else if ((pMcHalInfo->PCISubDeviceID == 0x004810DE) ||
                         ((pMcHalInfo->PCISubDeviceID & 0x8000FFFF) == 0x800010DE))

                    pGrHalInfo->Capabilities = ( NVHAL_GRAPHICS_CAPS_UBB               // unified backbuffers
                                                | NVHAL_GRAPHICS_CAPS_NV1X_COLOR_INVARIANCE // needs bug workaround
                                                | 0x1);                                 // max clips = 1

                else if ((pMcHalInfo->PCIDeviceID >> 16) == 0x112)
                    pGrHalInfo->Capabilities = ( 0x1 );                                 // max clips = 1
                else 
                    pGrHalInfo->Capabilities = ( NVHAL_GRAPHICS_CAPS_NV1X_COLOR_INVARIANCE // needs bug workaround
                                                | 0x1);                                 // max clips = 1
            }
            else
            {
                //
                // Should never get here, but just in case
                //
                DBG_BREAKPOINT();
                pGrHalInfo->Capabilities = 0x1;     // no AA lines/polys, max clips = 1
            }
            
            //
            // All nv1x parts support a 2:1 anisotropic filtering
            //
            pGrHalInfo->Capabilities |= NVHAL_GRAPHICS_CAPS_ANISOTROPIC;
	    
            break;
        }
        case MC_CONTROL_DESTROY:
            REG_WR32(NV_PMC_ENABLE, pMcHalPvtInfo->SavePmc);
            REG_WR32(NV_PMC_INTR_EN_0, pMcHalPvtInfo->SaveIntrEn0);
            break;
        case MC_CONTROL_LOAD:
        case MC_CONTROL_UNLOAD:
        case MC_CONTROL_UPDATE:
            break;
    }
    return (RM_OK);
}


//
// nvHalMcPower
//
RM_STATUS
nvHalMcPower_NV10(VOID *arg)
{
    PMCPOWERARG_000 pMcPowerArg = (PMCPOWERARG_000)arg;
    PHALHWINFO pHalHwInfo = pMcPowerArg->pHalHwInfo;
    PMCHALINFO_NV10 pMcHalPvtInfo;
    PMCHALPOWERINFO_NV10 pMcHalPowerInfo;
    PDACHALINFO pDacHalInfo; 
    U032 i;

    DBG_PRINT_STRING(DEBUGLEVEL_TRACEINFO, "NVRM: nvHalMcPower_NV10\r\n");

    // ASSERTIONS

    //
    // Verify interface revision.
    //
    if (pMcPowerArg->id != MC_POWER_000)
        return (RM_ERR_VERSION_MISMATCH);

    pHalHwInfo = pMcPowerArg->pHalHwInfo;
    pMcHalPvtInfo = (PMCHALINFO_NV10)pHalHwInfo->pMcHalPvtInfo;
    pMcHalPowerInfo = &pMcHalPvtInfo->PowerInfo;
    pDacHalInfo = pHalHwInfo->pDacHalInfo;
    
    //
    // Handle power management state transition.
    //
    switch (pMcPowerArg->newLevel)
    {
        case MC_POWER_LEVEL_0:
            switch (pMcPowerArg->oldLevel)
            {
                case MC_POWER_LEVEL_1:
                    //
                    // Turn up clock.
                    //
                    FLD_WR_DRF_DEF(_PRAMDAC,_PLL_SETUP_CONTROL, _PWRDWN, _ON);
                    break;
                case MC_POWER_LEVEL_2:
                {
                    U032 data32;
                    PFIFOHALINFO_NV10 pFifoHalPvtInfo;
                    PFBHALINFO_NV10 pFbHalPvtInfo;

                    pFifoHalPvtInfo = (PFIFOHALINFO_NV10)pMcPowerArg->pHalHwInfo->pFifoHalPvtInfo;
                    pFbHalPvtInfo = (PFBHALINFO_NV10)pMcPowerArg->pHalHwInfo->pFbHalPvtInfo;

                    // Reset the AGP and bus mastering logic (else we get dma pusher parse errors when DMA'ing across AGP)
                    data32 = REG_RD32(NV_PBUS_PCI_NV_19);
                    REG_WR32(NV_PBUS_PCI_NV_19, 0);         // Clear all of AGP Command. It's important to reset DATA_RATE bits.
                    REG_WR32(NV_PBUS_PCI_NV_19, data32);
                    
                    FLD_WR_DRF_DEF(_PBUS, _PCI_NV_1, _BUS_MASTER, _DISABLED);
                    FLD_WR_DRF_DEF(_PBUS, _PCI_NV_1, _BUS_MASTER, _ENABLED);

                    //
                    // This section is for mobile only!
                    //
                    // We don't expose the MobileOperation switch to the HAL
                    // at the moment, so we rely on the RM to never use this
                    // state (MC_POWER_LEVEL_2) except when MobileOperation
                    // is defined.
                    //
                    // Refer to mcstate.c for the MobileOperation check.
                    //
                    //
                    // Restore fifo mode register.
                    //
                    REG_WR32(NV_PFIFO_MODE, pFifoHalPvtInfo->Mode);
                    
                    // Set to unused channel to force context switch
                    // when fifo is accessed.
                    //
                    REG_WR32(NV_PFIFO_CACHE0_PUSH1, NUM_FIFOS_NV10-1);
                    REG_WR32(NV_PFIFO_CACHE1_PUSH1, NUM_FIFOS_NV10-1);
                    
                    REG_WR32(NV_PFIFO_RAMHT, pMcHalPowerInfo->PfifoRamHt);
                    REG_WR32(NV_PFIFO_RAMFC, pMcHalPowerInfo->PfifoRamFc);
                    REG_WR32(NV_PFIFO_RAMRO, pMcHalPowerInfo->PfifoRamRo);
                    
                    data32 = REG_RD32(NV_PFB_SELF_REF);
                    data32 &= ~(SF_DEF(_PFB, _SELF_REF_CMD, _ENABLED));
                    REG_WR32(NV_PFB_SELF_REF, data32);

                    //
                    // We may have freed a tiled region when we were
                    // unable to write to the hardware...sync up our
                    // software state with the hardware now.
                    //
                    for (i = 0; i < NV_PFB_TILE__SIZE_1; i++)
                    {
                        if ((pFbHalPvtInfo->usedTiles & MEM_TYPE_TILE_RANGE_SHIFT(i)) == 0)
                        {
                            //
                            // Check for integrated graphics -- we need to setup tiling through the north bridge
                            //
                            if( IsNV1A_NV10(pHalHwInfo->pMcHalInfo) )
                            {
                                Nv1AInvalidateTile( pHalHwInfo, i, 1 );
                            }
                            else
                            {
                                do {
                                    // Now, wait until graphics is idle
                                    HAL_GR_IDLE(pHalHwInfo);

                                    // invalidate the range
                                    REG_WR32(NV_PFB_TILE(i), NV_PFB_TILE_REGION_INVALID);
                                    REG_WR32(NV_PGRAPH_TILE(i), NV_PFB_TILE_REGION_INVALID);    

                                } while (REG_RD32(NV_PFB_TILE(i)) != REG_RD32(NV_PGRAPH_TILE(i)));
                            }
                        }
                    }
                    break;
                }
                case MC_POWER_LEVEL_4:
                    // must set FBI differential
                    REG_WR32(NV_PBUS_DEBUG_1, pMcHalPowerInfo->PbusDebug1);
                    // refresh
                    REG_WR32(NV_PFB_TIMING2, pMcHalPowerInfo->PfbTiming2);
                    REG_WR32(NV_PFB_CFG, pMcHalPowerInfo->PfbBoot0);
                    REG_WR32(NV_PFB_CSTATUS, pMcHalPowerInfo->PfbConfig0);
                    REG_WR32(NV_PFB_REFCTRL, pMcHalPowerInfo->PfbConfig1);
                    REG_WR32(NV_PFB_MRS, pMcHalPowerInfo->PfbMrs);
                    //REG_WR32(NV_PFB_EMRS, pMcHalPowerInfo->PfbEmrs);
                    REG_WR32(NV_PFB_REF, pMcHalPowerInfo->PfbRef);
                    //
                    // Turn up clock.
                    //
                    FLD_WR_DRF_DEF(_PRAMDAC,_PLL_SETUP_CONTROL, _PWRDWN, _ON);

                    //
                    // restore CRTC config (may include endian-ness)
                    //
                    for (i=0; i < pDacHalInfo->NumCrtcs; i++)
                    {
                        REG_WR32(NV_PCRTC_CONFIG + pDacHalInfo->CrtcInfo[i].RegOffset, 
                                 pMcHalPowerInfo->SaveCrtcConfig[i]);
                    }                 

                    break;

                case MC_POWER_LEVEL_3:
                case MC_POWER_LEVEL_7:
                {
                    // 
                    // These two states are more or less identical (at least
                    // as far as power up is concerned).
                    //
                    PFIFOHALINFO_NV10 pFifoHalPvtInfo;
                    NV10_TILE_VALUES *tvp;

                    pFifoHalPvtInfo = (PFIFOHALINFO_NV10)pMcPowerArg->pHalHwInfo->pFifoHalPvtInfo;

                    //
                    // Restore fb regs.
                    //

                    // must set FBI differential
                    REG_WR32(NV_PBUS_DEBUG_1, pMcHalPowerInfo->PbusDebug1);
                    // refresh
                    REG_WR32(NV_PFB_TIMING2, pMcHalPowerInfo->PfbTiming2);
                    REG_WR32(NV_PFB_CFG, pMcHalPowerInfo->PfbBoot0);
                    REG_WR32(NV_PFB_CSTATUS, pMcHalPowerInfo->PfbConfig0);
                    REG_WR32(NV_PFB_REFCTRL, pMcHalPowerInfo->PfbConfig1);
                    REG_WR32(NV_PFB_MRS, pMcHalPowerInfo->PfbMrs);
                    //REG_WR32(NV_PFB_EMRS, pMcHalPowerInfo->PfbEmrs);
                    REG_WR32(NV_PFB_REF, pMcHalPowerInfo->PfbRef);

                    REG_WR32(NV_PFIFO_RAMHT, pMcHalPowerInfo->PfifoRamHt);
                    REG_WR32(NV_PFIFO_RAMFC, pMcHalPowerInfo->PfifoRamFc);
                    REG_WR32(NV_PFIFO_RAMRO, pMcHalPowerInfo->PfifoRamRo);

                    //
                    // Make sure write protection is disabled.
                    //
                    FLD_WR_DRF_DEF(_PFB, _NVM, _MODE, _DISABLE);

                    //
                    // Reset the MRS (Memory PLL)
                    //
                    FLD_WR_DRF_DEF(_PFB, _MRS, _DLL, _RESET);
                    FLD_WR_DRF_DEF(_PFB, _MRS, _DLL, _NORMAL);
                    
                    //
                    // Restore tiling registers.
                    //
                    tvp = (NV10_TILE_VALUES *)&pMcHalPowerInfo->TilingValues[0];

                    //
                    // Check for integrated graphics -- we need to setup tiling through the north bridge
                    //
                    if( IsNV1A_NV10(pHalHwInfo->pMcHalInfo) )
                    {
                        //North bridge integrated graphics has a different tile setup
                        U016	wNBVendorID;
                        U016	wNBDeviceID;
                        VOID    *uNBHandle = 0;
                        U032    uOffset;
                        U032    uSize;
                        U032    uPitch;
                        U032    uValid;

                        uNBHandle = osPciInitHandle(0, 0, 2, &wNBVendorID, &wNBDeviceID);
                        if( !uNBHandle )
                        {
	                    DBG_PRINT_STRING(DEBUGLEVEL_ERRORS, "NVRM: Unable to touch integrated graphics tiling\n");
	                    DBG_BREAKPOINT();
	                    return (RM_ERROR);
                        }

                        for (i = 0; i < NV_PFB_TILE__SIZE_1; i++, tvp++)
                        {
                            uOffset = tvp->tile & DRF_NUM(_PFB,_TILE,_ADR,0xffffffff);
                            uPitch = tvp->tsize;
                            uSize = tvp->tlimit - uOffset + 1;
                            uValid = DRF_VAL(_PGRAPH, _TILE, _REGION, tvp->tile);

          	            osPciWriteDword(uNBHandle, CR_XL_TBASE(i)  & 0xFF, WriteNBTBASE(uPitch, uOffset, uSize, uValid));
	                    osPciWriteDword(uNBHandle, CR_XL_TLIMIT(i) & 0xFF, WriteNBTLIMIT(uPitch, uOffset, uSize, uValid));

                            REG_WR32(NV_PGRAPH_TLIMIT(i),   tvp->tlimit);
                            REG_WR32(NV_PGRAPH_TSIZE(i),    tvp->tsize);
                            REG_WR32(NV_PGRAPH_TILE(i),     tvp->tile);
                        }
                    }
                    else
                    {
                        for (i = 0; i < NV_PFB_TILE__SIZE_1; i++, tvp++)
                        {
                            REG_WR32(NV_PFB_TLIMIT(i),      tvp->tlimit);
                            REG_WR32(NV_PFB_TSIZE(i),       tvp->tsize);
                            REG_WR32(NV_PFB_TILE(i),        tvp->tile);

                            REG_WR32(NV_PGRAPH_TLIMIT(i),   tvp->tlimit);
                            REG_WR32(NV_PGRAPH_TSIZE(i),    tvp->tsize);
                            REG_WR32(NV_PGRAPH_TILE(i),     tvp->tile);
                        }
                    }
                    
                    //
                    // Restore fifo mode register.
                    //
                    REG_WR32(NV_PFIFO_MODE, pFifoHalPvtInfo->Mode);

                    //
                    // Set to unused channel to force context switch
                    // when fifo is accessed.
                    //
                    REG_WR32(NV_PFIFO_CACHE0_PUSH1, NUM_FIFOS_NV10-1);
                    REG_WR32(NV_PFIFO_CACHE1_PUSH1, NUM_FIFOS_NV10-1);

                    //
                    // Turn up clock.
                    //
                    FLD_WR_DRF_DEF(_PRAMDAC, _PLL_SETUP_CONTROL, _PWRDWN, _ON);

                    //
                    // restore CRTC config for each head (may include endian-ness)
                    // Also restore range regs for each head.
                    //
                    for (i=0; i < pDacHalInfo->NumCrtcs; i++)
                    {
                        REG_WR32(NV_PCRTC_CONFIG + pDacHalInfo->CrtcInfo[i].RegOffset, 
                                 pMcHalPowerInfo->SaveCrtcConfig[i]);

                        REG_WR32(NV_PCRTC_RASTER_START + pDacHalInfo->CrtcInfo[i].RegOffset,
                                 pMcHalPowerInfo->PcrtcRasterStart[i]);
                        REG_WR32(NV_PCRTC_RASTER_STOP + pDacHalInfo->CrtcInfo[i].RegOffset,
                                 pMcHalPowerInfo->PcrtcRasterStop[i]);

                    }
                    
                    //REG_WR32(NV_PVIDEO_STOP,pMcHalPowerInfo->PvideoStop);
                    REG_WR32(NV_PVIDEO_BASE(0),pMcHalPowerInfo->PvideoBase0);
                    REG_WR32(NV_PVIDEO_BASE(1),pMcHalPowerInfo->PvideoBase1);
                    REG_WR32(NV_PVIDEO_LIMIT(0),pMcHalPowerInfo->PvideoLimit0);
                    REG_WR32(NV_PVIDEO_LIMIT(1),pMcHalPowerInfo->PvideoLimit1);
                    REG_WR32(NV_PVIDEO_LUMINANCE(0),pMcHalPowerInfo->PvideoLuminance0);
                    REG_WR32(NV_PVIDEO_LUMINANCE(1),pMcHalPowerInfo->PvideoLuminance1);
                    REG_WR32(NV_PVIDEO_CHROMINANCE(0),pMcHalPowerInfo->PvideoChrominance0);
                    REG_WR32(NV_PVIDEO_CHROMINANCE(1),pMcHalPowerInfo->PvideoChrominance1);
                    REG_WR32(NV_PVIDEO_OFFSET(0),pMcHalPowerInfo->PvideoOffset0);
                    REG_WR32(NV_PVIDEO_OFFSET(1),pMcHalPowerInfo->PvideoOffset1);
                    REG_WR32(NV_PVIDEO_SIZE_IN(0),pMcHalPowerInfo->PvideoSizeIn0);
                    REG_WR32(NV_PVIDEO_SIZE_IN(1),pMcHalPowerInfo->PvideoSizeIn1);
                    REG_WR32(NV_PVIDEO_POINT_IN(0),pMcHalPowerInfo->PvideoPointIn0);
                    REG_WR32(NV_PVIDEO_POINT_IN(1),pMcHalPowerInfo->PvideoPointIn1);
                    REG_WR32(NV_PVIDEO_DS_DX(0),pMcHalPowerInfo->PvideoDsDx0);
                    REG_WR32(NV_PVIDEO_DS_DX(1),pMcHalPowerInfo->PvideoDsDx1);
                    REG_WR32(NV_PVIDEO_DT_DY(0),pMcHalPowerInfo->PvideoDtDy0);
                    REG_WR32(NV_PVIDEO_DT_DY(1),pMcHalPowerInfo->PvideoDtDy1);
                    REG_WR32(NV_PVIDEO_POINT_OUT(0),pMcHalPowerInfo->PvideoPointOut0);
                    REG_WR32(NV_PVIDEO_POINT_OUT(1),pMcHalPowerInfo->PvideoPointOut1);
                    REG_WR32(NV_PVIDEO_SIZE_OUT(0),pMcHalPowerInfo->PvideoSizeOut0);
                    REG_WR32(NV_PVIDEO_SIZE_OUT(1),pMcHalPowerInfo->PvideoSizeOut1);
                    REG_WR32(NV_PVIDEO_FORMAT(0),pMcHalPowerInfo->PvideoFormat0);
                    REG_WR32(NV_PVIDEO_FORMAT(1),pMcHalPowerInfo->PvideoFormat1);
                    REG_WR32(NV_PVIDEO_COLOR_KEY,pMcHalPowerInfo->PvideoColorKey);
                    REG_WR32(NV_PVIDEO_INTR_EN,pMcHalPowerInfo->PvideoIntrEn);

                    //
                    // Restore SetOffsetRange registers.
                    //
                    //REG_WR32(NV_PCRTC_RASTER_START, pMcHalPowerInfo->PcrtcRasterStart);
                    //REG_WR32(NV_PCRTC_RASTER_STOP, pMcHalPowerInfo->PcrtcRasterStop);
                    
                    DBG_PRINT_STRING(DEBUGLEVEL_TRACEINFO," ");
                    
                    for(i=0;i<pDacHalInfo->NumCrtcs;i++)
                    {
                        REG_WR32(NV_PCRTC_RASTER_START+i*0x2000,pMcHalPowerInfo->PcrtcRasterStart[i]);
                        REG_WR32(NV_PCRTC_RASTER_STOP+i*0x2000,pMcHalPowerInfo->PcrtcRasterStop[i]);
                        
                        DBG_PRINT_STRING_VALUE(DEBUGLEVEL_TRACEINFO,"Raster on head - ",i);
                        DBG_PRINT_STRING_VALUE(DEBUGLEVEL_TRACEINFO,"Raster Start: ",pMcHalPowerInfo->PcrtcRasterStart[i]);
                        DBG_PRINT_STRING_VALUE(DEBUGLEVEL_TRACEINFO,"Raster Stop : ",pMcHalPowerInfo->PcrtcRasterStop[i]);
                    }
                    
                    DBG_PRINT_STRING(DEBUGLEVEL_TRACEINFO," ");
                }
            }
            break;
        case MC_POWER_LEVEL_1:
            //
            // Turn down clock.
            //
            FLD_WR_DRF_DEF(_PRAMDAC,_PLL_SETUP_CONTROL, _PWRDWN, _VPLL);
            break;
        case MC_POWER_LEVEL_2:
            //
            // This section is for mobile only!
            //
            // We don't expose the MobileOperation switch to the HAL
            // at the moment, so we rely on the RM to never use this
            // state (MC_POWER_LEVEL_2) except when MobileOperation
            // is defined.
            //
            // Refer to mcstate.c for the MobileOperation check.
            //
            pMcHalPowerInfo->PfifoRamHt = REG_RD32(NV_PFIFO_RAMHT);
            pMcHalPowerInfo->PfifoRamFc = REG_RD32(NV_PFIFO_RAMFC);
            pMcHalPowerInfo->PfifoRamRo = REG_RD32(NV_PFIFO_RAMRO);
            
            FLD_WR_DRF_DEF(_PFB, _SELF_REF, _CMD, _ENABLED);
            break;
        case MC_POWER_LEVEL_4:
            pMcHalPowerInfo->PfbTiming2 = REG_RD32(NV_PFB_TIMING2);     // refresh
            FLD_WR_DRF_NUM(_PFB, _TIMING2, _REFRESH, 0xFFFFFFFF);       // max refresh
            // Chip has been init'd with the BIOS init tables, unless the BIOS
            // has an incompatible structure and the table was not found, in which case
            // we used a default table, which may not have the correct RAM config, so
            // we save away the current config for restoration above.
            pMcHalPowerInfo->PfbBoot0 = REG_RD32(NV_PFB_CFG);
            pMcHalPowerInfo->PfbConfig0 = REG_RD32(NV_PFB_CSTATUS);
            pMcHalPowerInfo->PfbConfig1 = REG_RD32(NV_PFB_REFCTRL);
            pMcHalPowerInfo->PfbMrs = REG_RD32(NV_PFB_MRS);
            pMcHalPowerInfo->PfbEmrs = REG_RD32(NV_PFB_EMRS);
            pMcHalPowerInfo->PfbRef     = REG_RD32(NV_PFB_REF);
            // RAM config - FBI differential
            pMcHalPowerInfo->PbusDebug1 = REG_RD32(NV_PBUS_DEBUG_1);
            // CRTC config (may include endian-ness)
            for (i=0; i< pDacHalInfo->NumCrtcs; i++)
            {
                pMcHalPowerInfo->SaveCrtcConfig[i] = REG_RD32(NV_PCRTC_CONFIG + pDacHalInfo->CrtcInfo[i].RegOffset); 
            }

            //
            // Turn down clock.
            //
            //FLD_WR_DRF_DEF(_PRAMDAC, _PLL_SETUP_CONTROL, _PWRDWN, _VPLL);
            break;
        case MC_POWER_LEVEL_3:
        case MC_POWER_LEVEL_7:
        {
            NV10_TILE_VALUES *tvp;

            //
            // Save tiling value.
            //
            tvp = (NV10_TILE_VALUES *)&pMcHalPowerInfo->TilingValues[0];

            //
            // Check for integrated graphics -- we need to setup tiling through the north bridge
            //
            if( IsNV1A_NV10(pHalHwInfo->pMcHalInfo) )
            {
                //North bridge integrated graphics has a different tile setup
                for (i = 0; i < NV_PFB_TILE__SIZE_1; i++, tvp++)
                {
                    tvp->tlimit = REG_RD32(NV_PGRAPH_TLIMIT(i));
                    tvp->tsize  = REG_RD32(NV_PGRAPH_TSIZE(i));
                    tvp->tile   = REG_RD32(NV_PGRAPH_TILE(i));
                }
            }
            else
            {
                for (i = 0; i < NV_PFB_TILE__SIZE_1; i++, tvp++)
                {
                    tvp->tlimit = REG_RD32(NV_PFB_TLIMIT(i));
                    tvp->tsize  = REG_RD32(NV_PFB_TSIZE(i));
                    tvp->tile   = REG_RD32(NV_PFB_TILE(i));
                }
            }

#ifdef MACOS            
            //because apps do not get notification for power management in MacOS (unless registered, and no one does),
            //video must be absolutely stopped and the notifier posted for that stop before continuing power down.
            if(REG_RD32(NV_PVIDEO_BUFFER))
            {            	          
                //notify the chip we would like to stop video overlay buffer activity
                //(we assume resman was already wanting to wait for the scaler to finish current buffer)
                REG_WR32(NV_PVIDEO_STOP,DRF_DEF(_PVIDEO, _STOP, _OVERLAY, _ACTIVE)
                					  |DRF_DEF(_PVIDEO,_STOP,_METHOD,_NORMALLY));
                					  
                //wait for the hardware to finish
                while(REG_RD32(NV_PVIDEO_BUFFER)){}	    
            }               
#endif
           
            for(i=0;i<pDacHalInfo->NumCrtcs;i++)
            {
                pMcHalPowerInfo->PcrtcRasterStart[i]=REG_RD32(NV_PCRTC_RASTER_START+i*0x2000);
                pMcHalPowerInfo->PcrtcRasterStop[i]=REG_RD32(NV_PCRTC_RASTER_STOP+i*0x2000);
            }
                        
            //save interrupt allowance state for later restoration
            pMcHalPowerInfo->PvideoIntrEn=REG_RD32(NV_PVIDEO_INTR_EN);
                        
            //save stateful video registers
			pMcHalPowerInfo->PvideoBase0=REG_RD32(NV_PVIDEO_BASE(0));
			pMcHalPowerInfo->PvideoBase1=REG_RD32(NV_PVIDEO_BASE(1));
			pMcHalPowerInfo->PvideoLimit0=REG_RD32(NV_PVIDEO_LIMIT(0));
			pMcHalPowerInfo->PvideoLimit1=REG_RD32(NV_PVIDEO_LIMIT(1));
			pMcHalPowerInfo->PvideoLuminance0=REG_RD32(NV_PVIDEO_LUMINANCE(0));
			pMcHalPowerInfo->PvideoLuminance1=REG_RD32(NV_PVIDEO_LUMINANCE(1));
			pMcHalPowerInfo->PvideoChrominance0=REG_RD32(NV_PVIDEO_CHROMINANCE(0));
			pMcHalPowerInfo->PvideoChrominance1=REG_RD32(NV_PVIDEO_CHROMINANCE(1));
			pMcHalPowerInfo->PvideoOffset0=REG_RD32(NV_PVIDEO_OFFSET(0));
			pMcHalPowerInfo->PvideoOffset1=REG_RD32(NV_PVIDEO_OFFSET(1));
			pMcHalPowerInfo->PvideoSizeIn0=REG_RD32(NV_PVIDEO_SIZE_IN(0));
			pMcHalPowerInfo->PvideoSizeIn1=REG_RD32(NV_PVIDEO_SIZE_IN(1));
			pMcHalPowerInfo->PvideoPointIn0=REG_RD32(NV_PVIDEO_POINT_IN(0));
			pMcHalPowerInfo->PvideoPointIn1=REG_RD32(NV_PVIDEO_POINT_IN(1));
			pMcHalPowerInfo->PvideoDsDx0=REG_RD32(NV_PVIDEO_DS_DX(0));
			pMcHalPowerInfo->PvideoDsDx1=REG_RD32(NV_PVIDEO_DS_DX(1));
			pMcHalPowerInfo->PvideoDtDy0=REG_RD32(NV_PVIDEO_DT_DY(0));
			pMcHalPowerInfo->PvideoDtDy1=REG_RD32(NV_PVIDEO_DT_DY(1));
			pMcHalPowerInfo->PvideoPointOut0=REG_RD32(NV_PVIDEO_POINT_OUT(0));
			pMcHalPowerInfo->PvideoPointOut1=REG_RD32(NV_PVIDEO_POINT_OUT(1));
			pMcHalPowerInfo->PvideoSizeOut0=REG_RD32(NV_PVIDEO_SIZE_OUT(0));
			pMcHalPowerInfo->PvideoSizeOut1=REG_RD32(NV_PVIDEO_SIZE_OUT(1));
			pMcHalPowerInfo->PvideoFormat0=REG_RD32(NV_PVIDEO_FORMAT(0));
			pMcHalPowerInfo->PvideoFormat1=REG_RD32(NV_PVIDEO_FORMAT(1));
			pMcHalPowerInfo->PvideoColorKey=REG_RD32(NV_PVIDEO_COLOR_KEY);
			
            pMcHalPowerInfo->PfbTiming2 = REG_RD32(NV_PFB_TIMING2);     // refresh

            if (pMcPowerArg->newLevel == MC_POWER_LEVEL_3)
                FLD_WR_DRF_NUM(_PFB, _TIMING2, _REFRESH, 0xFFFFFFFF);       // max refresh

            // Chip has been init'd with the BIOS init tables, unless the BIOS
            // has an incompatible structure and the table was not found, in which case
            // we used a default table, which may not have the correct RAM config, so
            // we save away the current config for restoration above.
            pMcHalPowerInfo->PfbBoot0 = REG_RD32(NV_PFB_CFG);
            pMcHalPowerInfo->PfbConfig0 = REG_RD32(NV_PFB_CSTATUS);
            pMcHalPowerInfo->PfbConfig1 = REG_RD32(NV_PFB_REFCTRL);
            pMcHalPowerInfo->PfbMrs = REG_RD32(NV_PFB_MRS);
            pMcHalPowerInfo->PfbEmrs = REG_RD32(NV_PFB_EMRS);
            pMcHalPowerInfo->PfbRef     = REG_RD32(NV_PFB_REF);
            pMcHalPowerInfo->PfifoRamHt = REG_RD32(NV_PFIFO_RAMHT);
            pMcHalPowerInfo->PfifoRamFc = REG_RD32(NV_PFIFO_RAMFC);
            pMcHalPowerInfo->PfifoRamRo = REG_RD32(NV_PFIFO_RAMRO);
            // RAM config - FBI differential
            pMcHalPowerInfo->PbusDebug1 = REG_RD32(NV_PBUS_DEBUG_1);
            //
            // CRTC config (may include endian-ness)
            //
            // Also, save SetOffsetRange regs.
            //
            for (i=0; i< pDacHalInfo->NumCrtcs; i++)
            {
                pMcHalPowerInfo->SaveCrtcConfig[i] = REG_RD32(NV_PCRTC_CONFIG + pDacHalInfo->CrtcInfo[i].RegOffset); 

                pMcHalPowerInfo->PcrtcRasterStart[i] = REG_RD32(NV_PCRTC_RASTER_START + pDacHalInfo->CrtcInfo[i].RegOffset);
                pMcHalPowerInfo->PcrtcRasterStop[i] = REG_RD32(NV_PCRTC_RASTER_STOP + pDacHalInfo->CrtcInfo[i].RegOffset);
            }

            //
            // Reset the MRS (Memory PLL)
            //
            FLD_WR_DRF_DEF(_PFB, _MRS, _DLL, _RESET);
            FLD_WR_DRF_DEF(_PFB, _MRS, _DLL, _NORMAL);

/*
When going into hibernation, the NT miniport makes a power state transition from state 0 to state 3.  State 3
implies that ALL clocks have been put in a power-down state, i.e. lowered.  Unfortunately, NT also requires 
the ability to perform VGA accesses *AFTER* the power management call.  Putting PClk into a power-down state 
disables VGA accesses, so for the time being, for NT, we cannot allow PClk to be put into a power-down state.
NOTE:  This is a liability if the system does not truly remove power from the device during hibernation.  In
this case, PClk will still be drawing full current, which could lead to power saving specs' being violated or,
more importantly, reliability problems with the device.
*/
#ifndef NTRM
            //
            // Turn down clock.
            //
            if (pMcPowerArg->newLevel == MC_POWER_LEVEL_3)
            {
                FLD_WR_DRF_DEF(_PRAMDAC, _PLL_COEFF_SELECT, _V1SOURCE, _DEFAULT);
                FLD_WR_DRF_DEF(_PRAMDAC, _PLL_COEFF_SELECT, _V2SOURCE, _DEFAULT);
            }
                //FLD_WR_DRF_DEF(_PRAMDAC,_PLL_SETUP_CONTROL, _PWRDWN, _VPLL);
#endif
            break;
        }
        default:
            return RM_ERR_BAD_ARGUMENT;
    }

    return RM_OK;
}

BOOL IsNV10_NV10(PMCHALINFO pMcHalInfo)
{
#ifdef DEBUG
    if (!pMcHalInfo->Architecture)
        return (RM_ERROR);
        //DBG_BREAKPOINT();   // mask revision hasn't been set yet
#endif
    return ((pMcHalInfo->Architecture == MC_ARCHITECTURE_NV10) &&
            (pMcHalInfo->Implementation == MC_IMPLEMENTATION_NV10));
}

BOOL IsNV10MaskRevA02orBetter_NV10(PMCHALINFO pMcHalInfo)
{
#ifdef DEBUG
    if (!pMcHalInfo->Architecture)
        return (RM_ERROR);
        //DBG_BREAKPOINT();   // mask revision hasn't been set yet
#endif
    // Is this NV10 A02 or better.  Note that "better" also includes all 
    // NV1X parts above NV10.
    return ((pMcHalInfo->MaskRevision >= MC_MASK_REVISION_A2) ||
            (pMcHalInfo->Implementation > MC_IMPLEMENTATION_NV10));
}

BOOL IsNV10MaskRevA03orBetter_NV10(PMCHALINFO pMcHalInfo)
{
#ifdef DEBUG
    if (!pMcHalInfo->Architecture)
        return (RM_ERROR);
        //DBG_BREAKPOINT();   // mask revision hasn't been set yet
#endif
    // Is this NV10 A03 or better.  Note that "better" also includes all 
    // NV1X parts above NV10.
    return ((pMcHalInfo->MaskRevision >= MC_MASK_REVISION_A3) ||
            (pMcHalInfo->Implementation > MC_IMPLEMENTATION_NV10));
}

BOOL IsNV15_NV10(PMCHALINFO pMcHalInfo)
{
#ifdef DEBUG
    if (!pMcHalInfo->Architecture)
        return (RM_ERROR);
        //DBG_BREAKPOINT();   // mask revision hasn't been set yet
#endif
    // Is this NV15?
    return ((pMcHalInfo->Architecture == MC_ARCHITECTURE_NV10) &&
            (pMcHalInfo->Implementation == MC_IMPLEMENTATION_NV15));
}

#ifdef _WIN32
#pragma warning(disable: 4296)
#endif

BOOL IsNV10orBetter_NV10(PMCHALINFO pMcHalInfo)
{
#ifdef DEBUG
    if (!pMcHalInfo->Architecture)
        return (RM_ERROR);
        //DBG_BREAKPOINT();   // mask revision hasn't been set yet
#endif
    // Is this NV10 or better?
    return ((pMcHalInfo->Architecture >= MC_ARCHITECTURE_NV10) &&
            (pMcHalInfo->Implementation >= MC_IMPLEMENTATION_NV10));
}

#ifdef _WIN32
#pragma warning(default: 4296)
#endif

BOOL IsNV15orBetter_NV10(PMCHALINFO pMcHalInfo)
{
#ifdef DEBUG
    if (!pMcHalInfo->Architecture)
        return (RM_ERROR);
        //DBG_BREAKPOINT();   // mask revision hasn't been set yet
#endif
    // Is this NV15 or better?
    return ((pMcHalInfo->Architecture >= MC_ARCHITECTURE_NV10) &&
            (pMcHalInfo->Implementation >= MC_IMPLEMENTATION_NV11));
}

BOOL IsNV11orBetter_NV10(PMCHALINFO pMcHalInfo)
{
#ifdef DEBUG
    if (!pMcHalInfo->Architecture)
        return (RM_ERROR);
        //DBG_BREAKPOINT();   // mask revision hasn't been set yet
#endif
    // Is this NV11 or better?
    return (((pMcHalInfo->Architecture == MC_ARCHITECTURE_NV10) &&
             (pMcHalInfo->Implementation >= MC_IMPLEMENTATION_NV11) &&
             (pMcHalInfo->Implementation != MC_IMPLEMENTATION_NV15)) ||
             (pMcHalInfo->Architecture >= MC_ARCHITECTURE_NV20));
}

BOOL IsNV11_NV10(PMCHALINFO pMcHalInfo)
{
#ifdef DEBUG
    if (!pMcHalInfo->Architecture)
        return (RM_ERROR);
        //DBG_BREAKPOINT();   // mask revision hasn't been set yet
#endif
    // Is this NV11?
    return ((pMcHalInfo->Architecture == MC_ARCHITECTURE_NV10) &&
            (pMcHalInfo->Implementation == MC_IMPLEMENTATION_NV11));
}

BOOL IsNV1A_NV10(PMCHALINFO pMcHalInfo)
{
#ifdef DEBUG
    if (!pMcHalInfo->Architecture)
        return (RM_ERROR);
        //DBG_BREAKPOINT();   // mask revision hasn't been set yet
#endif
    // Is this NV1A?
    return ((pMcHalInfo->Architecture == MC_ARCHITECTURE_NV10) &&
            (pMcHalInfo->Implementation == MC_IMPLEMENTATION_NV1A));
}

BOOL IsNV15MaskRevA02_NV10(PMCHALINFO pMcHalInfo)
{
#ifdef DEBUG
    if (!pMcHalInfo->Architecture)
        return (RM_ERROR);
        //DBG_BREAKPOINT();   // mask revision hasn't been set yet
#endif

    // Is this NV15 Mask Revision A02?
    return ((pMcHalInfo->Architecture == MC_ARCHITECTURE_NV10) &&
            (pMcHalInfo->Implementation == MC_IMPLEMENTATION_NV15) &&
            (pMcHalInfo->MaskRevision == MC_MASK_REVISION_A2));
}

BOOL IsNV15MaskRevA03_NV10(PMCHALINFO pMcHalInfo)
{
#ifdef DEBUG
    if (!pMcHalInfo->Architecture)
        return (RM_ERROR);
        //DBG_BREAKPOINT();   // mask revision hasn't been set yet
#endif

    // Is this NV15 Mask Revision A03?
    return ((pMcHalInfo->Architecture == MC_ARCHITECTURE_NV10) &&
            (pMcHalInfo->Implementation == MC_IMPLEMENTATION_NV15) &&
            (pMcHalInfo->MaskRevision == MC_MASK_REVISION_A3));
}
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Microsoft Xbox (1.00.4400) [April 2002] [src]\private\ntos\video\nv20\drivers\resman\kernel\mc\nv4\mcnv04.c ===
/***************************************************************************\
|*                                                                           *|
|*        Copyright (c) 1993-2000 NVIDIA, Corp.  All rights reserved.        *|
|*                                                                           *|
|*     NOTICE TO USER:   The source code  is copyrighted under  U.S. and     *|
|*     international laws.   NVIDIA, Corp. of Sunnyvale, California owns     *|
|*     the copyright  and as design patents  pending  on the design  and     *|
|*     interface  of the NV chips.   Users and possessors of this source     *|
|*     code are hereby granted  a nonexclusive,  royalty-free  copyright     *|
|*     and  design  patent license  to use this code  in individual  and     *|
|*     commercial software.                                                  *|
|*                                                                           *|
|*     Any use of this source code must include,  in the user documenta-     *|
|*     tion and  internal comments to the code,  notices to the end user     *|
|*     as follows:                                                           *|
|*                                                                           *|
|*     Copyright (c) 1993-2000  NVIDIA, Corp.    NVIDIA  design  patents     *|
|*     pending in the U.S. and foreign countries.                            *|
|*                                                                           *|
|*     NVIDIA, CORP.  MAKES  NO REPRESENTATION ABOUT  THE SUITABILITY OF     *|
|*     THIS SOURCE CODE FOR ANY PURPOSE.  IT IS PROVIDED "AS IS" WITHOUT     *|
|*     EXPRESS OR IMPLIED WARRANTY OF ANY KIND.  NVIDIA, CORP. DISCLAIMS     *|
|*     ALL WARRANTIES  WITH REGARD  TO THIS SOURCE CODE,  INCLUDING  ALL     *|
|*     IMPLIED   WARRANTIES  OF  MERCHANTABILITY  AND   FITNESS   FOR  A     *|
|*     PARTICULAR  PURPOSE.   IN NO EVENT SHALL NVIDIA, CORP.  BE LIABLE     *|
|*     FOR ANY SPECIAL, INDIRECT, INCIDENTAL,  OR CONSEQUENTIAL DAMAGES,     *|
|*     OR ANY DAMAGES  WHATSOEVER  RESULTING  FROM LOSS OF USE,  DATA OR     *|
|*     PROFITS,  WHETHER IN AN ACTION  OF CONTRACT,  NEGLIGENCE OR OTHER     *|
|*     TORTIOUS ACTION, ARISING OUT  OF OR IN CONNECTION WITH THE USE OR     *|
|*     PERFORMANCE OF THIS SOURCE CODE.                                      *|
|*                                                                           *|
 \***************************************************************************/

/******************************* MC Manager ********************************\
*                                                                           *
* Module: MCNV04.C                                                          *
*   The master control chip dependent HAL routines are kept here.           *
*                                                                           *
*****************************************************************************
*                                                                           *
* History:                                                                  *
*                                                                           *
\***************************************************************************/
#include <nv_ref.h>
#include <nvrm.h>
#include <nv4_ref.h>
#include <nv4_hal.h>
#include "nvhw.h"
#include "nvhalcpp.h"

//
// NV04 MC HAL entry points.
//

//
// nvHalMcControl
//
RM_STATUS
nvHalMcControl_NV04(VOID *arg)
{
    PMCCONTROLARG_000 pMcControlArg = (PMCCONTROLARG_000)arg;
    PHALHWINFO pHalHwInfo = pMcControlArg->pHalHwInfo;
    PMCHALINFO pMcHalInfo;
    PMCHALINFO_NV04 pMcHalPvtInfo;
    U032 M, N, O, P;
    U032 crystal;

    DBG_PRINT_STRING(DEBUGLEVEL_TRACEINFO, "NVRM: nvHalMcControl_NV04\r\n");

    // ASSERTIONS

    //
    // Verify interface revision.
    //
    if (pMcControlArg->id != MC_CONTROL_000)
        return (RM_ERR_VERSION_MISMATCH);

    pMcHalInfo = pHalHwInfo->pMcHalInfo;
    pMcHalPvtInfo = (PMCHALINFO_NV04)pHalHwInfo->pMcHalPvtInfo;

    switch (pMcControlArg->cmd)
    {
        case MC_CONTROL_SETREVISION:
        {
            PPRAMHALINFO pPramHalInfo = pHalHwInfo->pPramHalInfo;

            // set the inst mem offset
            pPramHalInfo->PraminOffset = DEVICE_BASE(NV_PRAMIN);

            //
            // Get chip revision information.
            //
            // We need to be careful here that the values we pull from the
            // hardware line up with the constants defined in chipid.h, or
            // else we need to convert them accordingly.
            //
            // On NV4 and family, they do so we're OK.
            //

            pMcHalInfo->Revision = REG_RD_DRF(_PMC, _BOOT_0, _MAJOR_REVISION);
            pMcHalInfo->Subrevision = REG_RD_DRF(_PMC, _BOOT_0, _MINOR_REVISION);
            pMcHalInfo->Implementation = REG_RD_DRF(_PMC, _BOOT_0, _IMPLEMENTATION);
            pMcHalInfo->Architecture = REG_RD_DRF(_PMC, _BOOT_0, _ARCHITECTURE);
            pMcHalInfo->Manufacturer = REG_RD_DRF(_PMC, _BOOT_0, _MANUFACTURER);
            pMcHalInfo->MaskRevision = REG_RD_DRF(_PMC, _BOOT_0, _MASK_REVISION);

            //
            // Since the Implementation is used by the RM only, we
            // set it to the MASK_REVISION to make out chip id 
            // function implementations cleaner.
            //
            // NOTE: BE CAREFUL HERE!  The MaskRevision must line up
            // with the MC_IMPLEMENTATION macros in <mc.h>.
            //
            pMcHalInfo->Implementation = pMcHalInfo->MaskRevision;
            break;
        }
        case MC_CONTROL_INIT:
        {
            PDACHALINFO pDacHalInfo = pHalHwInfo->pDacHalInfo;
            PFIFOHALINFO pFifoHalInfo = pHalHwInfo->pFifoHalInfo;
            PGRHALINFO pGrHalInfo = pHalHwInfo->pGrHalInfo;

            // JJV - Reset toggle the Master Control for the fifo and the Bus Mastering logic.
            // This is a fix for a DELL restart hang.19990409-125432.
            {
                U032 x;

                x=REG_RD32(NV_PMC_ENABLE);
                x&=~(DRF_DEF(_PMC, _ENABLE, _PFIFO, _ENABLED) | DRF_DEF(_PMC, _ENABLE, _PPMI, _ENABLED));
                REG_WR32(NV_PMC_ENABLE,x); 
                x|=(DRF_DEF(_PMC, _ENABLE, _PFIFO, _ENABLED) | DRF_DEF(_PMC, _ENABLE, _PPMI, _ENABLED));
                REG_WR32(NV_PMC_ENABLE,x); 
            }

            //
            // Save original MC registers.
            //
            pMcHalPvtInfo->SavePmc = REG_RD32(NV_PMC_ENABLE);
            if (pMcHalPvtInfo->SavePmc == 0)
            {
                //
                // This is 0 if NV not boot device! Enable everything so we at least work.
                //
                pMcHalPvtInfo->SavePmc = 0xFFFFFFFF;
                //
                // Reset all devices and interrupts.
                //
                REG_WR32(NV_PMC_ENABLE, 0x00000000);
            }
            pMcHalPvtInfo->SaveIntrEn0 = REG_RD32(NV_PMC_INTR_EN_0);
            REG_WR32(NV_PMC_ENABLE, 0xFFFFFFFF);
    
            //
            // Get the current clock settings.  This, of course, assumes that someone
            // has already started up the PLL's.
            //
            // Determine current strap crystal frequency (in Hz)
            //
            if (REG_RD_DRF(_PEXTDEV, _BOOT_0, _STRAP_CRYSTAL) == NV_PEXTDEV_BOOT_0_STRAP_CRYSTAL_13500K)
                pMcHalInfo->CrystalFreq = 13500000;
            else if (REG_RD_DRF(_PEXTDEV, _BOOT_0, _STRAP_CRYSTAL) == NV_PEXTDEV_BOOT_0_STRAP_CRYSTAL_14318180)
                pMcHalInfo->CrystalFreq = 14318180;

            // Get the crystal (Fin) * 1000
            crystal = pMcHalInfo->CrystalFreq;

            M = REG_RD_DRF(_PRAMDAC, _MPLL_COEFF, _MDIV);
            N = REG_RD_DRF(_PRAMDAC, _MPLL_COEFF, _NDIV);
            P = REG_RD_DRF(_PRAMDAC, _MPLL_COEFF, _PDIV);
            O = 1;
    
            pDacHalInfo->MPllM = M;
            pDacHalInfo->MPllN = N;
            pDacHalInfo->MPllO = O;
            pDacHalInfo->MPllP = P;
            if ((!P) && IsNV4_NV04(pMcHalInfo))
                P = 1;      // never really zero on NV4
            pDacHalInfo->MClk  = ( M != 0 ) ? (N * crystal / (1 << P) / M) : 0;
    
            M = REG_RD_DRF(_PRAMDAC, _VPLL_COEFF, _MDIV);
            N = REG_RD_DRF(_PRAMDAC, _VPLL_COEFF, _NDIV);
            P = REG_RD_DRF(_PRAMDAC, _VPLL_COEFF, _PDIV);
            O = 1;
    
            pDacHalInfo->VPllM = M;
            pDacHalInfo->VPllN = N;
            pDacHalInfo->VPllO = O;
            pDacHalInfo->VPllP = P;
            //pDacHalInfo->VClk  = (N * 12096 / (1 << P) / M) * 500;
            pDacHalInfo->VClk  = ( M != 0 ) ? (N * crystal / (1 << P) / M) : 0;

            M = REG_RD_DRF(_PRAMDAC, _NVPLL_COEFF, _MDIV);
            N = REG_RD_DRF(_PRAMDAC, _NVPLL_COEFF, _NDIV);
            P = REG_RD_DRF(_PRAMDAC, _NVPLL_COEFF, _PDIV);
            O = 1;
    
            pDacHalInfo->NVPllM = M;
            pDacHalInfo->NVPllN = N;
            pDacHalInfo->NVPllO = O;
            pDacHalInfo->NVPllP = P;
            pDacHalInfo->NVClk  = ( M != 0 ) ? (N * crystal / (1 << P) / M) : 0;

            //
            // Initialize number of crtcs.
            //
            pDacHalInfo->NumCrtcs = 1;

            //
            // Get chip revision information.
            //
            // We need to be careful here that the values we pull from the
            // hardware line up with the constants defined in chipid.h, or
            // else we need to convert them accordingly.
            //
            // On NV4 and family, they do so we're OK.
            //
            pMcHalInfo->Revision = REG_RD_DRF(_PMC, _BOOT_0, _MAJOR_REVISION);
            pMcHalInfo->Subrevision = REG_RD_DRF(_PMC, _BOOT_0, _MINOR_REVISION);
            pMcHalInfo->Implementation = REG_RD_DRF(_PMC, _BOOT_0, _IMPLEMENTATION);
            pMcHalInfo->Architecture = REG_RD_DRF(_PMC, _BOOT_0, _ARCHITECTURE);
            pMcHalInfo->Manufacturer = REG_RD_DRF(_PMC, _BOOT_0, _MANUFACTURER);
            pMcHalInfo->MaskRevision = REG_RD_DRF(_PMC, _BOOT_0, _MASK_REVISION);

            //
            // Since the Implementation is used by the RM only, we
            // set it to the MASK_REVISION to make out chip id 
            // function implementations cleaner.
            //
            // NOTE: BE CAREFUL HERE!  The MaskRevision must line up
            // with the MC_IMPLEMENTATION macros in <mc.h>.
            //
            pMcHalInfo->Implementation = pMcHalInfo->MaskRevision;

            //Save away total number of BAR addresses for the chip
            //as well as what those addresses are.
            pMcHalInfo->TotalPciBars = 2;
            pMcHalInfo->PciBars[0] = REG_RD32(NV_PBUS_PCI_NV_4);
            pMcHalInfo->PciBars[1] = REG_RD32(NV_PBUS_PCI_NV_5);

            //
            // If this is a TNT2 revB, enable AGP differential mode
            //
            if (IsNV5orBetter_NV04(pMcHalInfo) &&
                (REG_RD_DRF(_PBUS, _PCI_NV_2, _REVISION_ID) & NV_PBUS_PCI_NV_2_REVISION_ID_B01))
            {
                FLD_WR_DRF_DEF(_PBUS, _DEBUG_2, _AGP_AD_STB, _DIFFERENTIAL);
            }

            //
            // Only worry about PMI toggling for NV5 class devices
            //
            if (IsNV5orBetter_NV04(pMcHalInfo))
            {
                U032 savedPCI1, savedPCI19;

                //
                // Toggle PMI off to clear any strobe glitches from Camino that occurred during POST
                //
                // First disable bus mastering
                //
                savedPCI1 = REG_RD32(NV_PBUS_PCI_NV_1);
                REG_WR32(NV_PBUS_PCI_NV_1, savedPCI1 & ~DRF_DEF(_PBUS, _PCI_NV_1, _BUS_MASTER, _ENABLED));
                savedPCI19 = REG_RD32(NV_PBUS_PCI_NV_19);
                REG_WR32(NV_PBUS_PCI_NV_19, savedPCI19 & ~DRF_DEF(_PBUS, _PCI_NV_19, _AGP_COMMAND_AGP_ENABLE, _ON));

                // Toggle PMI off                     
                REG_WR32(NV_PMC_ENABLE, 0xFFFFFFFF & ~DRF_DEF(_PMC, _ENABLE, _PPMI, _ENABLED));

                // Turn everything back on    
                REG_WR32(NV_PMC_ENABLE, 0xFFFFFFFF);

                //
                // Restore AGP Busmastering
                //
                REG_WR32(NV_PBUS_PCI_NV_1, savedPCI1);
                REG_WR32(NV_PBUS_PCI_NV_19, savedPCI19);
            }

            //
            // Set fifo count/context size here so the values are
            // available for the rest of the STATE_INIT sequence.
            //
            pFifoHalInfo->Count = NUM_FIFOS_NV04;
            pFifoHalInfo->ContextSize = FC_SIZE_NV04;

            //
            // Determine what graphics capabilities we have.
            //
            // For future chips, we default to basic capabilities which is safest and most
            // reasonable in the compatibility versions of the drivers. For the performance
            // drivers that ship with the chip, we'll add the correct detection in that version.
            //
            pGrHalInfo->Capabilities = ( NVHAL_GRAPHICS_CAPS_UBB                // unified backbuffers
                                        | 0x1);                                 // max clips = 1

            break;
        }
        case MC_CONTROL_DESTROY:
            REG_WR32(NV_PMC_ENABLE, pMcHalPvtInfo->SavePmc);
            REG_WR32(NV_PMC_INTR_EN_0, pMcHalPvtInfo->SaveIntrEn0);
            break;
        case MC_CONTROL_LOAD:
        case MC_CONTROL_UNLOAD:
        case MC_CONTROL_UPDATE:
            break;
    }

    return (RM_OK);
}

//
// nvHalMcPower
//
RM_STATUS
nvHalMcPower_NV04(VOID *arg)
{
    PMCPOWERARG_000 pMcPowerArg = (PMCPOWERARG_000)arg;
    PHALHWINFO pHalHwInfo = pMcPowerArg->pHalHwInfo;
    PMCHALINFO_NV04 pMcHalPvtInfo;
    PMCHALPOWERINFO_NV04 pMcHalPowerInfo;

    DBG_PRINT_STRING(DEBUGLEVEL_TRACEINFO, "NVRM: nvHalMcPower_NV04\r\n");

    // ASSERTIONS

    //
    // Verify interface revision.
    //
    if (pMcPowerArg->id != MC_POWER_000)
        return (RM_ERR_VERSION_MISMATCH);

    pMcHalPvtInfo = (PMCHALINFO_NV04)pHalHwInfo->pMcHalPvtInfo;
    pMcHalPowerInfo = &pMcHalPvtInfo->PowerInfo;

    //
    // Handle power management state transition.
    //
    switch (pMcPowerArg->newLevel)
    {
        case MC_POWER_LEVEL_0:
            switch (pMcPowerArg->oldLevel)
            {
                case MC_POWER_LEVEL_1:
                    //
                    // Turn up clock.
                    //
                    FLD_WR_DRF_DEF(_PRAMDAC,_PLL_SETUP_CONTROL, _PWRDWN, _ON);
                    break;
                case MC_POWER_LEVEL_2:
                    break;
                case MC_POWER_LEVEL_4:
                    //
                    // Power up mode - restore previous refresh value.
                    //
                    REG_WR32(NV_PFB_DEBUG_0, pMcHalPowerInfo->PfbDebug0);
                    REG_WR32(NV_PFB_BOOT_0, pMcHalPowerInfo->PfbBoot0);
                    REG_WR32(NV_PFB_CONFIG_0, pMcHalPowerInfo->PfbConfig0);
                    REG_WR32(NV_PFB_CONFIG_1, pMcHalPowerInfo->PfbConfig1);

                    //
                    // Turn up clock.
                    //
                    FLD_WR_DRF_DEF(_PRAMDAC,_PLL_SETUP_CONTROL, _PWRDWN, _ON);
                    break;
                case MC_POWER_LEVEL_3:
                case MC_POWER_LEVEL_7:
                {
                    PFIFOHALINFO_NV04 pFifoHalPvtInfo;

                    pFifoHalPvtInfo = (PFIFOHALINFO_NV04)pHalHwInfo->pFifoHalPvtInfo;
                    
                    //
                    // Power up mode - restore previous refresh value
                    //
                    REG_WR32(NV_PFB_DEBUG_0, pMcHalPowerInfo->PfbDebug0);
                    REG_WR32(NV_PFB_BOOT_0, pMcHalPowerInfo->PfbBoot0);
                    REG_WR32(NV_PFB_CONFIG_0, pMcHalPowerInfo->PfbConfig0);
                    REG_WR32(NV_PFB_CONFIG_1, pMcHalPowerInfo->PfbConfig1);

                    REG_WR32(NV_PFIFO_RAMHT, pMcHalPowerInfo->PfifoRamHt);
                    REG_WR32(NV_PFIFO_RAMFC, pMcHalPowerInfo->PfifoRamFc);
                    REG_WR32(NV_PFIFO_RAMRO, pMcHalPowerInfo->PfifoRamRo);

                    //
                    // Make sure write protection is disabled.
                    //
                    FLD_WR_DRF_DEF(_PFB, _CONFIG_0, _PRAMIN_WR, _INIT);

                    //
                    // Restore fifo mode register.
                    //
                    REG_WR32(NV_PFIFO_MODE, pFifoHalPvtInfo->Mode);

                    //
                    // Set to unused channel to force context switch
                    // when fifo is accessed.
                    //
                    REG_WR32(NV_PFIFO_CACHE0_PUSH1, NUM_FIFOS_NV04-1);
                    REG_WR32(NV_PFIFO_CACHE1_PUSH1, NUM_FIFOS_NV04-1);

                    //
                    // Turn up clock.
                    //
                    FLD_WR_DRF_DEF(_PRAMDAC,_PLL_SETUP_CONTROL, _PWRDWN, _ON);
                }
            }
            break;
        case MC_POWER_LEVEL_1:
            //
            // Turn down clock.
            //
            FLD_WR_DRF_DEF(_PRAMDAC,_PLL_SETUP_CONTROL, _PWRDWN, _VPLL);
            break;
        case MC_POWER_LEVEL_2:
            break;
        case MC_POWER_LEVEL_3:
        case MC_POWER_LEVEL_4:
        case MC_POWER_LEVEL_7:
            // power down mode - max out memory refresh value
            pMcHalPowerInfo->PfbDebug0 = REG_RD32(NV_PFB_DEBUG_0);
            FLD_WR_DRF_NUM(_PFB, _DEBUG_0, _REFRESH_COUNTX64, 0x01);

            // Chip has been init'd with the BIOS init tables, unless the BIOS
            // has an incompatible structure and the table was not found, in which case
            // we used a default table, which may not have the correct RAM config, so
            // we save away the current config for restoration above.
            pMcHalPowerInfo->PfbBoot0 = REG_RD32(NV_PFB_BOOT_0);
            pMcHalPowerInfo->PfbConfig0 = REG_RD32(NV_PFB_CONFIG_0);
            pMcHalPowerInfo->PfbConfig1 = REG_RD32(NV_PFB_CONFIG_1);

            pMcHalPowerInfo->PfifoRamHt = REG_RD32(NV_PFIFO_RAMHT);
            pMcHalPowerInfo->PfifoRamFc = REG_RD32(NV_PFIFO_RAMFC);
            pMcHalPowerInfo->PfifoRamRo = REG_RD32(NV_PFIFO_RAMRO);

/*
When going into hibernation, the NT miniport makes a power state transition from state 0 to state 3.  State 3
implies that ALL clocks have been put in a power-down state, i.e. lowered.  Unfortunately, NT also requires 
the ability to perform VGA accesses *AFTER* the power management call.  Putting PClk into a power-down state 
disables VGA accesses, so for the time being, for NT, we cannot allow PClk to be put into a power-down state.
NOTE:  This is a liability if the system does not truly remove power from the device during hibernation.  In
this case, PClk will still be drawing full current, which could lead to power saving specs' being violated or,
more importantly, reliability problems with the device.
*/
#ifndef NTRM
            //
            // Turn down clock.
            //
            //FLD_WR_DRF_DEF(_PRAMDAC,_PLL_SETUP_CONTROL, _PWRDWN, _VPLL);
#endif
            break;
        default:
            return (RM_ERR_BAD_ARGUMENT);
    }

    return (RM_OK);
}


//
// Chip id functions internal to the HAL.
//
// Note that checking for an Architecture value of MC_ARCHITECTURE_NV04
// should probably be replaced with an ASSERT (i.e. these routines should
// only be used by code operating on an nv4 family device).
//
BOOL
IsNV4_NV04(PMCHALINFO pMcHalInfo)
{
#ifdef DEBUG
    if (!pMcHalInfo->Architecture)
        return (RM_ERROR);
        //DBG_BREAKPOINT();   // mask revision hasn't been set yet
#endif
    return ((pMcHalInfo->Architecture == MC_ARCHITECTURE_NV04) &&
            (pMcHalInfo->Implementation == MC_IMPLEMENTATION_NV04));
}

BOOL
IsNV5_NV04(PMCHALINFO pMcHalInfo)
{
#ifdef DEBUG
    if (!pMcHalInfo->Architecture)
        return (RM_ERROR);
        //DBG_BREAKPOINT();   // mask revision hasn't been set yet
#endif
    return ((pMcHalInfo->Architecture == MC_ARCHITECTURE_NV04) &&
            (pMcHalInfo->Implementation >= MC_IMPLEMENTATION_NV05));
}

BOOL
IsNV0A_NV04(PMCHALINFO pMcHalInfo)
{
#ifdef DEBUG
    if (!pMcHalInfo->Architecture)
        return (RM_ERROR);
        //DBG_BREAKPOINT();   // mask revision hasn't been set yet
#endif
    return ((pMcHalInfo->Architecture == MC_ARCHITECTURE_NV04) &&
            (pMcHalInfo->Implementation == MC_IMPLEMENTATION_NV0A));
}

BOOL
IsNV5orBetter_NV04(PMCHALINFO pMcHalInfo)
{
#ifdef DEBUG
    if (!pMcHalInfo->Architecture)
        return (RM_ERROR);
        //DBG_BREAKPOINT();   // mask revision hasn't been set yet
#endif
    return ((pMcHalInfo->Architecture > MC_ARCHITECTURE_NV04) ||
            ((pMcHalInfo->Architecture == MC_ARCHITECTURE_NV04) &&
             (pMcHalInfo->Implementation >= MC_IMPLEMENTATION_NV05)));
}
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Microsoft Xbox (1.00.4400) [April 2002] [src]\private\ntos\video\nv20\drivers\resman\kernel\mc\nv20\mcnv20.c ===
/***************************************************************************\
|*                                                                           *|
|*        Copyright (c) 1993-2000 NVIDIA, Corp.  All rights reserved.        *|
|*                                                                           *|
|*     NOTICE TO USER:   The source code  is copyrighted under  U.S. and     *|
|*     international laws.   NVIDIA, Corp. of Sunnyvale, California owns     *|
|*     the copyright  and as design patents  pending  on the design  and     *|
|*     interface  of the NV chips.   Users and possessors of this source     *|
|*     code are hereby granted  a nonexclusive,  royalty-free  copyright     *|
|*     and  design  patent license  to use this code  in individual  and     *|
|*     commercial software.                                                  *|
|*                                                                           *|
|*     Any use of this source code must include,  in the user documenta-     *|
|*     tion and  internal comments to the code,  notices to the end user     *|
|*     as follows:                                                           *|
|*                                                                           *|
|*     Copyright (c) 1993-2000  NVIDIA, Corp.    NVIDIA  design  patents     *|
|*     pending in the U.S. and foreign countries.                            *|
|*                                                                           *|
|*     NVIDIA, CORP.  MAKES  NO REPRESENTATION ABOUT  THE SUITABILITY OF     *|
|*     THIS SOURCE CODE FOR ANY PURPOSE.  IT IS PROVIDED "AS IS" WITHOUT     *|
|*     EXPRESS OR IMPLIED WARRANTY OF ANY KIND.  NVIDIA, CORP. DISCLAIMS     *|
|*     ALL WARRANTIES  WITH REGARD  TO THIS SOURCE CODE,  INCLUDING  ALL     *|
|*     IMPLIED   WARRANTIES  OF  MERCHANTABILITY  AND   FITNESS   FOR  A     *|
|*     PARTICULAR  PURPOSE.   IN NO EVENT SHALL NVIDIA, CORP.  BE LIABLE     *|
|*     FOR ANY SPECIAL, INDIRECT, INCIDENTAL,  OR CONSEQUENTIAL DAMAGES,     *|
|*     OR ANY DAMAGES  WHATSOEVER  RESULTING  FROM LOSS OF USE,  DATA OR     *|
|*     PROFITS,  WHETHER IN AN ACTION  OF CONTRACT,  NEGLIGENCE OR OTHER     *|
|*     TORTIOUS ACTION, ARISING OUT  OF OR IN CONNECTION WITH THE USE OR     *|
|*     PERFORMANCE OF THIS SOURCE CODE.                                      *|
|*                                                                           *|
 \***************************************************************************/

/******************************* MC Manager ********************************\
*                                                                           *
* Module: MCNV20.C                                                          *
*   The master control chip dependent HAL routines are kept here.           *
*                                                                           *
*****************************************************************************
*                                                                           *
* History:                                                                  *
*                                                                           *
\***************************************************************************/
#include <nv_ref.h>
#include <nvrm.h>
#include <nv20_ref.h>
#include <nv20_hal.h>
#include <heap.h>
#include "nvhw.h"
#include "nvhalcpp.h"

//
// NV20 MC HAL entry points.
//

//
// nvHalMcControl
//
RM_STATUS
nvHalMcControl_NV20(VOID *arg)
{
    PMCCONTROLARG_000 pMcControlArg = (PMCCONTROLARG_000)arg;
    PHALHWINFO pHalHwInfo = pMcControlArg->pHalHwInfo;
    PMCHALINFO pMcHalInfo;
    PMCHALINFO_NV20 pMcHalPvtInfo;
    U032 M, N, O, P;
    U032 crystal, pmc_boot0;

    DBG_PRINT_STRING(DEBUGLEVEL_TRACEINFO, "NVRM: nvHalMcControl_NV20\r\n");

    // ASSERTIONS

    //
    // Verify interface revision.
    //
    if (pMcControlArg->id != MC_CONTROL_000)
        return (RM_ERR_VERSION_MISMATCH);

    pHalHwInfo = pMcControlArg->pHalHwInfo;
    pMcHalInfo = pHalHwInfo->pMcHalInfo;
    pMcHalPvtInfo = (PMCHALINFO_NV20)pHalHwInfo->pMcHalPvtInfo;

    switch (pMcControlArg->cmd)
    {
        case MC_CONTROL_SETREVISION:
        {
            PPRAMHALINFO pPramHalInfo = pHalHwInfo->pPramHalInfo;

            // set the inst mem offset
            pPramHalInfo->PraminOffset = DEVICE_BASE(NV_PRAMIN);

            //
            // Get chip revision information.
            //
            // We need to be careful here that the values we pull from the
            // hardware line up with the constants defined in mc.h, or
            // else we need to convert them accordingly.
            //
            pmc_boot0 = REG_RD32(NV_PMC_BOOT_0);

            pMcHalInfo->Subrevision      = 0;
            //
            // There's a bug in nv20 where PMC_BOOT_0 (on A02 silicon)
            // isn't accurate.  So we get the maskrev from the pci config
            // register.
            pMcHalInfo->MaskRevision     = REG_RD_DRF(_PBUS, _PCI_NV_2, _REVISION_ID);
            //pMcHalInfo->MaskRevision     = MC_GET_MASKREVISION(pmc_boot0);
            pMcHalInfo->Revision         = MC_GET_REVISION(pmc_boot0);
            pMcHalInfo->Implementation   = MC_GET_IMPLEMENTATION(pmc_boot0);
            pMcHalInfo->Architecture     = MC_GET_ARCHITECTURE(pmc_boot0);
            pMcHalInfo->Manufacturer     = NV_PMC_BOOT_0_MANUFACTURER_NVIDIA;

            break;
        }
        case MC_CONTROL_INIT:
        {
            PDACHALINFO pDacHalInfo = pMcControlArg->pHalHwInfo->pDacHalInfo;
            PFIFOHALINFO pFifoHalInfo = pMcControlArg->pHalHwInfo->pFifoHalInfo;
            PGRHALINFO pGrHalInfo = pHalHwInfo->pGrHalInfo;

            // JJV - Reset toggle the Master Control for the fifo and the Bus Mastering logic.
            // This is a fix for a DELL restart hang.19990409-125432.
            {
                U032 x;

                x=REG_RD32(NV_PMC_ENABLE);
                x&=~(DRF_DEF(_PMC, _ENABLE, _PFIFO, _ENABLED) | DRF_DEF(_PMC, _ENABLE, _PPMI, _ENABLED));
                REG_WR32(NV_PMC_ENABLE,x); 
                x|=(DRF_DEF(_PMC, _ENABLE, _PFIFO, _ENABLED) | DRF_DEF(_PMC, _ENABLE, _PPMI, _ENABLED));
                REG_WR32(NV_PMC_ENABLE,x); 
            }

            //
            // Save original MC registers.
            //
            pMcHalPvtInfo->SavePmc = REG_RD32(NV_PMC_ENABLE);
            if (pMcHalPvtInfo->SavePmc == 0)
            {
                //
                // This is 0 if NV not boot device! Enable everything so we at least work.
                //
                pMcHalPvtInfo->SavePmc = 0xFFFFFFFF;
                //
                // Reset all devices and interrupts.
                //
                REG_WR32(NV_PMC_ENABLE, 0x00000000);
            }
            pMcHalPvtInfo->SaveIntrEn0 = REG_RD32(NV_PMC_INTR_EN_0);
            REG_WR32(NV_PMC_ENABLE, 0xFFFFFFFF);

            //
            // Get the current clock settings.  This, of course, assumes that someone
            // has already started up the PLL's.
            //
            // Determine current strap crystal frequency (in Hz)
            //
            if (REG_RD_DRF(_PEXTDEV, _BOOT_0, _STRAP_CRYSTAL) == NV_PEXTDEV_BOOT_0_STRAP_CRYSTAL_13500K)
                pMcHalInfo->CrystalFreq = 13500000;
            else if (REG_RD_DRF(_PEXTDEV, _BOOT_0, _STRAP_CRYSTAL) == NV_PEXTDEV_BOOT_0_STRAP_CRYSTAL_14318180)
                pMcHalInfo->CrystalFreq = 14318180;

            // Get the crystal (Fin) * 1000
            crystal = pMcHalInfo->CrystalFreq;

            M = REG_RD_DRF(_PRAMDAC, _MPLL_COEFF, _MDIV);
            N = REG_RD_DRF(_PRAMDAC, _MPLL_COEFF, _NDIV);
            P = REG_RD_DRF(_PRAMDAC, _MPLL_COEFF, _PDIV);
            O = 1;
    
            pDacHalInfo->MPllM = M;
            pDacHalInfo->MPllN = N;
            pDacHalInfo->MPllO = O;
            pDacHalInfo->MPllP = P;
            pDacHalInfo->MClk  = ( M != 0 ) ? (N * crystal / (1 << P) / M) : 0;

            M = REG_RD_DRF(_PRAMDAC, _VPLL_COEFF, _MDIV);
            N = REG_RD_DRF(_PRAMDAC, _VPLL_COEFF, _NDIV);
            P = REG_RD_DRF(_PRAMDAC, _VPLL_COEFF, _PDIV);
            O = 1;
    
            pDacHalInfo->VPllM = M;
            pDacHalInfo->VPllN = N;
            pDacHalInfo->VPllO = O;
            pDacHalInfo->VPllP = P;
            pDacHalInfo->VClk  = ( M != 0 ) ? (N * crystal / (1 << P) / M) : 0;

            M = REG_RD_DRF(_PRAMDAC, _NVPLL_COEFF, _MDIV);
            N = REG_RD_DRF(_PRAMDAC, _NVPLL_COEFF, _NDIV);
            P = REG_RD_DRF(_PRAMDAC, _NVPLL_COEFF, _PDIV);
            O = 1;
    
            pDacHalInfo->NVPllM = M;
            pDacHalInfo->NVPllN = N;
            pDacHalInfo->NVPllO = O;
            pDacHalInfo->NVPllP = P;
            pDacHalInfo->NVClk  = ( M != 0 ) ? (N * crystal / (1 << P) / M) : 0;

            //
            // Initialize number of crtcs.
            //
            pDacHalInfo->NumCrtcs = 1;

            //
            // Get chip revision information.
            //
            // We need to be careful here that the values we pull from the
            // hardware line up with the constants defined in mc.h, or
            // else we need to convert them accordingly.
            //
            pmc_boot0 = REG_RD32(NV_PMC_BOOT_0);

            pMcHalInfo->Subrevision      = 0;
            //
            // There's a bug in nv20 where PMC_BOOT_0 (on A02 silicon)
            // isn't accurate.  So we get the maskrev from the pci config
            // register.
            pMcHalInfo->MaskRevision     = REG_RD_DRF(_PBUS, _PCI_NV_2, _REVISION_ID);
            //pMcHalInfo->MaskRevision     = MC_GET_MASKREVISION(pmc_boot0);
            pMcHalInfo->Revision         = MC_GET_REVISION(pmc_boot0);
            pMcHalInfo->Implementation   = MC_GET_IMPLEMENTATION(pmc_boot0);
            pMcHalInfo->Architecture     = MC_GET_ARCHITECTURE(pmc_boot0);
            pMcHalInfo->Manufacturer     = NV_PMC_BOOT_0_MANUFACTURER_NVIDIA;

            //Save away total number of BAR addresses for the chip
            //as well as what those addresses are.
            pMcHalInfo->TotalPciBars = 3;
            pMcHalInfo->PciBars[0] = REG_RD32(NV_PBUS_PCI_NV_4);
            pMcHalInfo->PciBars[1] = REG_RD32(NV_PBUS_PCI_NV_5);
            pMcHalInfo->PciBars[2] = REG_RD32(NV_PBUS_PCI_NV_6);

            //
            // Set fifo count/context size here so the values are
            // available for the rest of the STATE_INIT sequence.
            //
            pFifoHalInfo->Count = NUM_FIFOS_NV20;
            pFifoHalInfo->ContextSize = FC1_SIZE_NV20;

            //
            // Determine what graphics capabilities we have.
            //
            // For future chips, we default to basic capabilities which
            // is safest and most reasonable in the compatibility versions
            // of the drivers. For the performance drivers that ship with
            // the chip, we'll add the correct detection in that version.
            //

            //
            // NV20 relies on the PCI ID to match GL functionality
            //
            if ((pMcHalInfo->PCIDeviceID >> 16) == 0x203)
            {
                pGrHalInfo->Capabilities =
                    ( NVHAL_GRAPHICS_CAPS_LOGIC_OPS |
                      NVHAL_GRAPHICS_CAPS_AKILL_USERCLIP |
                      NVHAL_GRAPHICS_CAPS_AA_LINES |
                      NVHAL_GRAPHICS_CAPS_AA_POLYS |
                      NVHAL_GRAPHICS_CAPS_2SIDED_LIGHTING |
                      NVHAL_GRAPHICS_CAPS_QUADRO_GENERIC |
                      NVHAL_GRAPHICS_CAPS_UBB |
                      0x8);     // max clips = 8
            }
            else
            {
                pGrHalInfo->Capabilities =
                    ( NVHAL_GRAPHICS_CAPS_LOGIC_OPS |
                      NVHAL_GRAPHICS_CAPS_AA_LINES |
                      NVHAL_GRAPHICS_CAPS_AA_POLYS |
                      NVHAL_GRAPHICS_CAPS_2SIDED_LIGHTING |
                      0x1);     // max clips = 1
            }
            
            //
            // NV20 Rev A05 is properly identified in NV_PMC_BOOT_0,
            // but in PCI_NV_2 it shows up as A03, so we have to perform
            // this check of pmc_boot0 directly.
            //
            
#define MARKETING_HAS_FINALLY_DECIDED_TO_ALLOW_3DTEX_AND_ANISO          1

            if ((pMcHalInfo->Architecture == MC_ARCHITECTURE_NV20) &&
                (pMcHalInfo->Implementation == MC_IMPLEMENTATION_NV20) &&
                (pMcHalInfo->MaskRevision == MC_MASK_REVISION_A3) &&
                (MC_GET_MASKREVISION(pmc_boot0) == 0xA5) &&
                MARKETING_HAS_FINALLY_DECIDED_TO_ALLOW_3DTEX_AND_ANISO)
            {
                pGrHalInfo->Capabilities |=
                    ( NVHAL_GRAPHICS_CAPS_3D_TEXTURES |
                      NVHAL_GRAPHICS_CAPS_ANISOTROPIC );
            }
            break;
        }
        case MC_CONTROL_DESTROY:
            REG_WR32(NV_PMC_ENABLE, pMcHalPvtInfo->SavePmc);
            REG_WR32(NV_PMC_INTR_EN_0, pMcHalPvtInfo->SaveIntrEn0);
            break;
        case MC_CONTROL_LOAD:
        case MC_CONTROL_UNLOAD:
        case MC_CONTROL_UPDATE:
            break;
    }
    return (RM_OK);
}


//
// nvHalMcPower
//
extern VOID nvHalFbCalcDrvSlw_NV20(PHALHWINFO);

RM_STATUS
nvHalMcPower_NV20(VOID *arg)
{
    PMCPOWERARG_000 pMcPowerArg = (PMCPOWERARG_000)arg;
    PHALHWINFO pHalHwInfo = pMcPowerArg->pHalHwInfo;
    PMCHALINFO_NV20 pMcHalPvtInfo;
    PMCHALPOWERINFO_NV20 pMcHalPowerInfo;
    PDACHALINFO pDacHalInfo; 
    U032 i;

    DBG_PRINT_STRING(DEBUGLEVEL_TRACEINFO, "NVRM: nvHalMcPower_NV20\r\n");

    // ASSERTIONS

    //
    // Verify interface revision.
    //
    if (pMcPowerArg->id != MC_POWER_000)
        return (RM_ERR_VERSION_MISMATCH);

    pHalHwInfo = pMcPowerArg->pHalHwInfo;
    pMcHalPvtInfo = (PMCHALINFO_NV20)pHalHwInfo->pMcHalPvtInfo;
    pMcHalPowerInfo = &pMcHalPvtInfo->PowerInfo;
    pDacHalInfo = pHalHwInfo->pDacHalInfo;

    //
    // Handle power management state transition.
    //
    switch (pMcPowerArg->newLevel)
    {
        case MC_POWER_LEVEL_0:
            switch (pMcPowerArg->oldLevel)
            {
                case MC_POWER_LEVEL_1:
                    //
                    // Turn up clock.
                    //
                    FLD_WR_DRF_DEF(_PRAMDAC,_PLL_SETUP_CONTROL, _PWRDWN, _ON);
                    break;
                case MC_POWER_LEVEL_2:
                    break;
                case MC_POWER_LEVEL_4:
                    //
                    // Restore fb regs.
                    // XXX Does cstatus really need to be power managed?
                    //     It's an ro register!?!?
                    //
                    REG_WR32(NV_PBUS_DEBUG_1, pMcHalPowerInfo->PbusDebug1);
                    REG_WR32(NV_PFB_TIMING2, pMcHalPowerInfo->PfbTiming2);
                    REG_WR32(NV_PFB_CFG0, pMcHalPowerInfo->PfbCfg0);
                    REG_WR32(NV_PFB_CFG1, pMcHalPowerInfo->PfbCfg1);
                    REG_WR32(NV_PGRAPH_FBCFG0, pMcHalPowerInfo->PfbCfg0);
                    REG_WR32(NV_PGRAPH_FBCFG1, pMcHalPowerInfo->PfbCfg1);
                    REG_WR32(NV_PFB_REMAP, pMcHalPowerInfo->PfbRemap);
                    REG_WR32(NV_PFB_ARB_XFER_SZ, pMcHalPowerInfo->PfbArbXferSz);
                    REG_WR32(NV_PFB_ARB_TIMEOUT, pMcHalPowerInfo->PfbArbTimeout);
                    REG_WR32(NV_PFB_ARB_PREDIVIDER, pMcHalPowerInfo->PfbArbPredivider);
                    REG_WR32(NV_PFB_CSTATUS, pMcHalPowerInfo->PfbCstatus);
                    REG_WR32(NV_PFB_REFCTRL, pMcHalPowerInfo->PfbRefCtrl);
                    REG_WR32(NV_PFB_MRS, pMcHalPowerInfo->PfbMrs);
                    //REG_WR32(NV_PFB_EMRS, pMcHalPowerInfo->PfbEmrs);
                    REG_WR32(NV_PFB_REF, pMcHalPowerInfo->PfbRef);

                    //
                    // Turn up clock.
                    //
                    FLD_WR_DRF_DEF(_PRAMDAC,_PLL_SETUP_CONTROL, _PWRDWN, _ON);

                    //
                    // restore CRTC config (may include endian-ness)
                    //
                    for (i=0; i < pDacHalInfo->NumCrtcs; i++)
                    {
                        REG_WR32(NV_PCRTC_CONFIG + pDacHalInfo->CrtcInfo[i].RegOffset, 
                                 pMcHalPowerInfo->SaveCrtcConfig[i]);
                    }                 

                    break;

                case MC_POWER_LEVEL_3:
                case MC_POWER_LEVEL_7:
                {
                    PFIFOHALINFO_NV20 pFifoHalPvtInfo;
                    PFBHALINFO_NV20 pFbHalPvtInfo;
                    NV20_TILE_VALUES *tvp;
                    NV20_ZCOMP_VALUES *zvp;

                    pFifoHalPvtInfo = (PFIFOHALINFO_NV20)pMcPowerArg->pHalHwInfo->pFifoHalPvtInfo;
                    pFbHalPvtInfo = (PFBHALINFO_NV20)pMcPowerArg->pHalHwInfo->pFifoHalPvtInfo;

                    nvHalFbCalcDrvSlw_NV20(pHalHwInfo);

                    //
                    // Restore fb regs.
                    // XXX Does cstatus really need to be power managed?
                    //     It's an ro register!?!?
                    //
                    REG_WR32(NV_PBUS_DEBUG_1, pMcHalPowerInfo->PbusDebug1);
                    REG_WR32(NV_PFB_TIMING2, pMcHalPowerInfo->PfbTiming2);
                    REG_WR32(NV_PFB_CFG0, pMcHalPowerInfo->PfbCfg0);
                    REG_WR32(NV_PFB_CFG1, pMcHalPowerInfo->PfbCfg1);
                    REG_WR32(NV_PGRAPH_FBCFG0, pMcHalPowerInfo->PfbCfg0);
                    REG_WR32(NV_PGRAPH_FBCFG1, pMcHalPowerInfo->PfbCfg1);
                    REG_WR32(NV_PFB_CSTATUS, pMcHalPowerInfo->PfbCstatus);
                    REG_WR32(NV_PFB_REFCTRL, pMcHalPowerInfo->PfbRefCtrl);
                    REG_WR32(NV_PFB_MRS, pMcHalPowerInfo->PfbMrs);
                    REG_WR32(NV_PFB_REF, pMcHalPowerInfo->PfbRef);

                    REG_WR32(NV_PFIFO_RAMHT, pMcHalPowerInfo->PfifoRamHt);
                    REG_WR32(NV_PFIFO_RAMFC, pMcHalPowerInfo->PfifoRamFc);
                    REG_WR32(NV_PFIFO_RAMRO, pMcHalPowerInfo->PfifoRamRo);

                    //
                    // Make sure write protection is disabled.
                    //
                    FLD_WR_DRF_DEF(_PFB, _NVM, _MODE, _DISABLE);
                    
                    // restore video registers - 8/29/2000 - dpearce
                    REG_WR32(NV_PVIDEO_BASE(0),pMcHalPowerInfo->PvideoBase0) ;
                    REG_WR32(NV_PVIDEO_BASE(1),pMcHalPowerInfo->PvideoBase1) ;
                    REG_WR32(NV_PVIDEO_LIMIT(0),pMcHalPowerInfo->PvideoLimit0) ;
                    REG_WR32(NV_PVIDEO_LIMIT(1),pMcHalPowerInfo->PvideoLimit1) ;
                    REG_WR32(NV_PVIDEO_LUMINANCE(0),pMcHalPowerInfo->PvideoLuminance0) ;
                    REG_WR32(NV_PVIDEO_LUMINANCE(1),pMcHalPowerInfo->PvideoLuminance1) ;
                    REG_WR32(NV_PVIDEO_CHROMINANCE(0),pMcHalPowerInfo->PvideoChrominance0) ;
                    REG_WR32(NV_PVIDEO_CHROMINANCE(1),pMcHalPowerInfo->PvideoChrominance1) ;
                    REG_WR32(NV_PVIDEO_OFFSET(0),pMcHalPowerInfo->PvideoOffset0) ;
                    REG_WR32(NV_PVIDEO_OFFSET(1),pMcHalPowerInfo->PvideoOffset1) ;
                    REG_WR32(NV_PVIDEO_SIZE_IN(0),pMcHalPowerInfo->PvideoSizeIn0) ;
                    REG_WR32(NV_PVIDEO_SIZE_IN(1),pMcHalPowerInfo->PvideoSizeIn1) ;
                    REG_WR32(NV_PVIDEO_POINT_IN(0),pMcHalPowerInfo->PvideoPointIn0) ;
                    REG_WR32(NV_PVIDEO_POINT_IN(1),pMcHalPowerInfo->PvideoPointIn1) ;
                    REG_WR32(NV_PVIDEO_DS_DX(0),pMcHalPowerInfo->PvideoDsDx0) ;
                    REG_WR32(NV_PVIDEO_DS_DX(1),pMcHalPowerInfo->PvideoDsDx1) ;
                    REG_WR32(NV_PVIDEO_DT_DY(0),pMcHalPowerInfo->PvideoDtDy0) ;
                    REG_WR32(NV_PVIDEO_DT_DY(1),pMcHalPowerInfo->PvideoDtDy1) ;
                    REG_WR32(NV_PVIDEO_POINT_OUT(0),pMcHalPowerInfo->PvideoPointOut0) ;
                    REG_WR32(NV_PVIDEO_POINT_OUT(1),pMcHalPowerInfo->PvideoPointOut1) ;
                    REG_WR32(NV_PVIDEO_SIZE_OUT(0),pMcHalPowerInfo->PvideoSizeOut0) ;
                    REG_WR32(NV_PVIDEO_SIZE_OUT(1),pMcHalPowerInfo->PvideoSizeOut1) ;
                    REG_WR32(NV_PVIDEO_FORMAT(0),pMcHalPowerInfo->PvideoFormat0) ;
                    REG_WR32(NV_PVIDEO_FORMAT(1),pMcHalPowerInfo->PvideoFormat1) ;
                    REG_WR32(NV_PVIDEO_COLOR_KEY,pMcHalPowerInfo->PvideoColorKey) ;

                    //
                    // Restore tiling registers.
                    //
                    tvp = &pMcHalPowerInfo->TilingValues[0];
                    for (i = 0; i < NV_PFB_TILE__SIZE_1; i++, tvp++)
                    {
                        //
                        // We may have freed a tiled region when we were
                        // unable to write to the hardware...sync up the
                        // hw to our software state now.
                        //
                        if ((pFbHalPvtInfo->usedTiles & MEM_TYPE_TILE_RANGE_SHIFT(i)) == 0)
                            tvp->tile &= ~DRF_DEF(_PFB, _TILE, _REGION, _VALID);
                        REG_WR32(NV_PFB_TLIMIT(i), tvp->tlimit);
                        REG_WR32(NV_PFB_TSIZE(i), tvp->tsize);
                        REG_WR32(NV_PFB_TILE(i), tvp->tile);

                        REG_WR32(NV_PGRAPH_TLIMIT(i), tvp->tlimit);
                        REG_WR32(NV_PGRAPH_TSIZE(i), tvp->tsize);
                        REG_WR32(NV_PGRAPH_TILE(i), tvp->tile);

                        RDI_REG_WR32(NV_IGRAPH_TC_MINTFCDEBUG_SELECT,
                                     NV_IGRAPH_TC_MINTFCDEBUG_TLIMIT_ADDRESS(i),
                                     tvp->tlimit);
                        RDI_REG_WR32(NV_IGRAPH_TC_MINTFCDEBUG_SELECT,
                                     NV_IGRAPH_TC_MINTFCDEBUG_TPITCH_ADDRESS(i),
                                     tvp->tsize);
                        RDI_REG_WR32(NV_IGRAPH_TC_MINTFCDEBUG_SELECT,
                                     NV_IGRAPH_TC_MINTFCDEBUG_TILE_ADDRESS(i),
                                     tvp->tile);
                    }

                    //
                    // Restore Z compression registers.
                    //
                    zvp = &pMcHalPowerInfo->ZcompValues[0];
                    for (i = 0; i < NV_PFB_ZCOMP__SIZE_1; i++, zvp++)
                    {
                        if ((pFbHalPvtInfo->usedTiles & MEM_TYPE_TILE_RANGE_SHIFT(i)) == 0)
                            zvp->zcomp &= ~DRF_DEF(_PFB, _ZCOMP, _EN, _TRUE);
                        REG_WR32(NV_PFB_ZCOMP(i), zvp->zcomp);
                        REG_WR32(NV_PGRAPH_ZCOMP(i), zvp->zcomp);
                        RDI_REG_WR32(NV_IGRAPH_TC_MINTFCDEBUG_SELECT,
                                     NV_IGRAPH_TC_MINTFCDEBUG_ZCOMP_ADDRESS(i),
                                     zvp->zcomp);
                    }
                    REG_WR32(NV_PFB_ZCOMP_OFFSET, pMcHalPowerInfo->ZcompOffset);
                    REG_WR32(NV_PGRAPH_ZCOMP_OFFSET, pMcHalPowerInfo->ZcompOffset);

                    //
                    // Restore fifo mode register.
                    //
                    REG_WR32(NV_PFIFO_MODE, pFifoHalPvtInfo->Mode);

                    //
                    // Set to unused channel to force context switch
                    // when fifo is accessed.
                    //
                    REG_WR32(NV_PFIFO_CACHE0_PUSH1, NUM_FIFOS_NV20-1);
                    REG_WR32(NV_PFIFO_CACHE1_PUSH1, NUM_FIFOS_NV20-1);

                    //
                    // Turn up clock.
                    //
                    FLD_WR_DRF_DEF(_PRAMDAC,_PLL_SETUP_CONTROL, _PWRDWN, _ON);

                    //
                    // Restore CRTC config (may include endian-ness).
                    //
                    //
                    // Restore SetOffsetRange registers.
                    //
                    //
                    for (i=0; i < pDacHalInfo->NumCrtcs; i++)
                    {
                        REG_WR32(NV_PCRTC_CONFIG + pDacHalInfo->CrtcInfo[i].RegOffset, 
                                 pMcHalPowerInfo->SaveCrtcConfig[i]);

                        REG_WR32(NV_PCRTC_RASTER_START + pDacHalInfo->CrtcInfo[i].RegOffset,
                                 pMcHalPowerInfo->PcrtcRasterStart[i]);
                        REG_WR32(NV_PCRTC_RASTER_STOP + pDacHalInfo->CrtcInfo[i].RegOffset,
                                 pMcHalPowerInfo->PcrtcRasterStop[i]);
                    }                 
                }
            }
            break;
        case MC_POWER_LEVEL_1:
            //
            // Turn down clocks.
            //
            FLD_WR_DRF_DEF(_PRAMDAC,_PLL_SETUP_CONTROL, _PWRDWN, _VPLL);
            FLD_WR_DRF_DEF(_PRAMDAC,_PLL_SETUP_CONTROL, _PWRDWN, _VPLL2);
            break;
        case MC_POWER_LEVEL_2:
            break;
        case MC_POWER_LEVEL_4:
            // refresh
            pMcHalPowerInfo->PfbTiming2 = REG_RD32(NV_PFB_TIMING2);
            // max refresh
            FLD_WR_DRF_NUM(_PFB, _TIMING2, _REFRESH, 0xFFFFFFFF);

            //
            // Chip has been init'd with the BIOS init tables, unless the BIOS
            // has an incompatible structure and the table was not found, in
            // which case we used a default table, which may not have the
            // correct RAM config, so we save away the current config for
            // restoration above.
            //
            pMcHalPowerInfo->PfbRemap = REG_RD32(NV_PFB_REMAP);
            pMcHalPowerInfo->PfbArbXferSz = REG_RD32(NV_PFB_ARB_XFER_SZ);
            pMcHalPowerInfo->PfbArbTimeout = REG_RD32(NV_PFB_ARB_TIMEOUT);
            pMcHalPowerInfo->PfbArbPredivider = REG_RD32(NV_PFB_ARB_PREDIVIDER);
            pMcHalPowerInfo->PfbCfg0 = REG_RD32(NV_PFB_CFG0);
            pMcHalPowerInfo->PfbCfg1 = REG_RD32(NV_PFB_CFG1);
            pMcHalPowerInfo->PfbCstatus = REG_RD32(NV_PFB_CSTATUS);
            pMcHalPowerInfo->PfbRefCtrl = REG_RD32(NV_PFB_REFCTRL);
            pMcHalPowerInfo->PfbMrs = REG_RD32(NV_PFB_MRS);
            pMcHalPowerInfo->PfbEmrs = REG_RD32(NV_PFB_EMRS);
            pMcHalPowerInfo->PfbRef = REG_RD32(NV_PFB_REF);
            pMcHalPowerInfo->PbusDebug1 = REG_RD32(NV_PBUS_DEBUG_1);

            // CRTC config (may include endian-ness)
            for (i=0; i< pDacHalInfo->NumCrtcs; i++)
            {
                pMcHalPowerInfo->SaveCrtcConfig[i] = REG_RD32(NV_PCRTC_CONFIG + pDacHalInfo->CrtcInfo[i].RegOffset); 
            }
            //
            // Turn down clock.
            //
            //FLD_WR_DRF_DEF(_PRAMDAC, _PLL_SETUP_CONTROL, _PWRDWN, _VPLL);
            //FLD_WR_DRF_DEF(_PRAMDAC, _PLL_SETUP_CONTROL, _PWRDWN, _VPLL2);
            break;
        case MC_POWER_LEVEL_3:
        case MC_POWER_LEVEL_7:
        {
            NV20_TILE_VALUES *tvp;
            NV20_ZCOMP_VALUES *zvp;

            //
            // Save tiling value.
            //
            tvp = &pMcHalPowerInfo->TilingValues[0];
            for (i = 0; i < NV_PFB_TILE__SIZE_1; i++, tvp++)
            {
                tvp->tlimit = REG_RD32(NV_PFB_TLIMIT(i));
                tvp->tsize  = REG_RD32(NV_PFB_TSIZE(i));
                tvp->tile   = REG_RD32(NV_PFB_TILE(i));
            }
            
#ifdef MACOS            
            //because apps do not get notification for power management in MacOS (unless registered, and no one does),
            //video must be absolutely stopped and the notifier posted for that stop before continuing power down.
            if(REG_RD32(NV_PVIDEO_BUFFER))
            {                         
                //notify the chip we would like to stop video overlay buffer activity
                //(we assume resman was already wanting to wait for the scaler to finish current buffer)
                REG_WR32(NV_PVIDEO_STOP,DRF_DEF(_PVIDEO, _STOP, _OVERLAY, _ACTIVE)
                                      |DRF_DEF(_PVIDEO,_STOP,_METHOD,_NORMALLY));
                                      
                //wait for the hardware to finish
                while(REG_RD32(NV_PVIDEO_BUFFER)){}     
            }               
#endif

            //save some video registers
            pMcHalPowerInfo->PvideoBase0=REG_RD32(NV_PVIDEO_BASE(0));
            pMcHalPowerInfo->PvideoBase1=REG_RD32(NV_PVIDEO_BASE(1));
            pMcHalPowerInfo->PvideoLimit0=REG_RD32(NV_PVIDEO_LIMIT(0));
            pMcHalPowerInfo->PvideoLimit1=REG_RD32(NV_PVIDEO_LIMIT(1));
            pMcHalPowerInfo->PvideoLuminance0=REG_RD32(NV_PVIDEO_LUMINANCE(0));
            pMcHalPowerInfo->PvideoLuminance1=REG_RD32(NV_PVIDEO_LUMINANCE(1));
            pMcHalPowerInfo->PvideoChrominance0=REG_RD32(NV_PVIDEO_CHROMINANCE(0));
            pMcHalPowerInfo->PvideoChrominance1=REG_RD32(NV_PVIDEO_CHROMINANCE(1));
            pMcHalPowerInfo->PvideoOffset0=REG_RD32(NV_PVIDEO_OFFSET(0));
            pMcHalPowerInfo->PvideoOffset1=REG_RD32(NV_PVIDEO_OFFSET(1));
            pMcHalPowerInfo->PvideoSizeIn0=REG_RD32(NV_PVIDEO_SIZE_IN(0));
            pMcHalPowerInfo->PvideoSizeIn1=REG_RD32(NV_PVIDEO_SIZE_IN(1));
            pMcHalPowerInfo->PvideoPointIn0=REG_RD32(NV_PVIDEO_POINT_IN(0));
            pMcHalPowerInfo->PvideoPointIn1=REG_RD32(NV_PVIDEO_POINT_IN(1));
            pMcHalPowerInfo->PvideoDsDx0=REG_RD32(NV_PVIDEO_DS_DX(0));
            pMcHalPowerInfo->PvideoDsDx1=REG_RD32(NV_PVIDEO_DS_DX(1));
            pMcHalPowerInfo->PvideoDtDy0=REG_RD32(NV_PVIDEO_DT_DY(0));
            pMcHalPowerInfo->PvideoDtDy1=REG_RD32(NV_PVIDEO_DT_DY(1));
            pMcHalPowerInfo->PvideoPointOut0=REG_RD32(NV_PVIDEO_POINT_OUT(0));
            pMcHalPowerInfo->PvideoPointOut1=REG_RD32(NV_PVIDEO_POINT_OUT(1));
            pMcHalPowerInfo->PvideoSizeOut0=REG_RD32(NV_PVIDEO_SIZE_OUT(0));
            pMcHalPowerInfo->PvideoSizeOut1=REG_RD32(NV_PVIDEO_SIZE_OUT(1));
            pMcHalPowerInfo->PvideoFormat0=REG_RD32(NV_PVIDEO_FORMAT(0));
            pMcHalPowerInfo->PvideoFormat1=REG_RD32(NV_PVIDEO_FORMAT(1));
            pMcHalPowerInfo->PvideoColorKey=REG_RD32(NV_PVIDEO_COLOR_KEY);


            //
            // Save Z compression registers.
            //
            zvp = &pMcHalPowerInfo->ZcompValues[0];
            for (i = 0; i < NV_PFB_ZCOMP__SIZE_1; i++, zvp++)
            {
                zvp->zcomp = REG_RD32(NV_PFB_ZCOMP(i));
            }
            pMcHalPowerInfo->ZcompOffset = REG_RD32(NV_PFB_ZCOMP_OFFSET);

            // refresh
            pMcHalPowerInfo->PfbTiming2 = REG_RD32(NV_PFB_TIMING2);

            // max refresh
            if (pMcPowerArg->newLevel == MC_POWER_LEVEL_3)
                FLD_WR_DRF_NUM(_PFB, _TIMING2, _REFRESH, 0xFFFFFFFF);

            //
            // Chip has been init'd with the BIOS init tables, unless the BIOS
            // has an incompatible structure and the table was not found, in
            // which case we used a default table, which may not have the
            // correct RAM config, so we save away the current config for
            // restoration above.
            //
            pMcHalPowerInfo->PfbCfg0 = REG_RD32(NV_PFB_CFG0);
            pMcHalPowerInfo->PfbCfg1 = REG_RD32(NV_PFB_CFG1);
#if 0
            //
            // On nv20, the PGRAPH_FBCFG* registers do not completely
            // mirror the PFB_CFG* equivalents, so the comparisons below
            // will always fail.
            //
            // Here's the details from the hw dudes:
            //
            // fbcfg0
            //fbregs.nv_pfb_cfg0.part = ToInt(ToU002(NV_PFB_CFG0_PART_2));
            //fbregs.nv_pfb_cfg0.partsense =
            //               ToInt(ToU002(NV_PFB_CFG0_PARTSENSE_00));
            //fbregs.nv_pfb_cfg0.extbank =
            //               ToInt(ToU001(NV_PFB_CFG0_EXTBANK_0));
            //
            // fbcfg1 (we only instantiate a portion of this reg)
            //fbregs.nv_pfb_cfg1.col   = ToInt(ToU004(NV_PFB_CFG1_COL_8));
            //fbregs.nv_pfb_cfg1.rowA  = ToInt(ToU004(NV_PFB_CFG1_ROWA_9));
            //fbregs.nv_pfb_cfg1.rowB  = ToInt(ToU004(NV_PFB_CFG1_ROWB_9));
            //fbregs.nv_pfb_cfg1.bankA = ToInt(ToU001(NV_PFB_CFG1_BANKA_1));
            //fbregs.nv_pfb_cfg1.bankB = ToInt(ToU001(NV_PFB_CFG1_BANKB_1));
            //

            //
            // Assert NV_PGRAPH_CFG0/NV_PGRAPH_CFG1 are the same.
            //
            if (REG_RD32(NV_PFB_CFG0) != REG_RD32(NV_PGRAPH_FBCFG0))
            {
                DBG_PRINT_STRING(DEBUGLEVEL_ERRORS, "NVRM: pfb_cfg0 != pgraph_cfg0\n");
                DBG_PRINT_STRING_VALUE(DEBUGLEVEL_ERRORS, " pfb_cfg0 ", REG_RD32(NV_PFB_CFG0));
                DBG_PRINT_STRING_VALUE(DEBUGLEVEL_ERRORS, " pgraph_cfg0 ", REG_RD32(NV_PGRAPH_FBCFG0));
                DBG_BREAKPOINT();
            }
            if (REG_RD32(NV_PFB_CFG1) != REG_RD32(NV_PGRAPH_FBCFG1))
            {
                DBG_PRINT_STRING(DEBUGLEVEL_ERRORS, "NVRM: pfb_cfg1 != pgraph_cfg1\n");
                DBG_PRINT_STRING_VALUE(DEBUGLEVEL_ERRORS, " pfb_cfg1 ", REG_RD32(NV_PFB_CFG1));
                DBG_PRINT_STRING_VALUE(DEBUGLEVEL_ERRORS, " pgraph_cfg1 ", REG_RD32(NV_PGRAPH_FBCFG1));
                DBG_BREAKPOINT();
            }
#endif

            pMcHalPowerInfo->PfbRemap = REG_RD32(NV_PFB_REMAP);
            pMcHalPowerInfo->PfbArbXferSz = REG_RD32(NV_PFB_ARB_XFER_SZ);
            pMcHalPowerInfo->PfbArbTimeout = REG_RD32(NV_PFB_ARB_TIMEOUT);
            pMcHalPowerInfo->PfbArbPredivider = REG_RD32(NV_PFB_ARB_PREDIVIDER);
            pMcHalPowerInfo->PfbCstatus = REG_RD32(NV_PFB_CSTATUS);
            pMcHalPowerInfo->PfbRefCtrl = REG_RD32(NV_PFB_REFCTRL);
            pMcHalPowerInfo->PfbMrs = REG_RD32(NV_PFB_MRS);
            pMcHalPowerInfo->PfbEmrs = REG_RD32(NV_PFB_EMRS);
            pMcHalPowerInfo->PfbRef = REG_RD32(NV_PFB_REF);
            pMcHalPowerInfo->PbusDebug1 = REG_RD32(NV_PBUS_DEBUG_1);
            pMcHalPowerInfo->PfifoRamHt = REG_RD32(NV_PFIFO_RAMHT);
            pMcHalPowerInfo->PfifoRamFc = REG_RD32(NV_PFIFO_RAMFC);
            pMcHalPowerInfo->PfifoRamRo = REG_RD32(NV_PFIFO_RAMRO);

            //
            // CRTC config (may include endian-ness)
            //
            // Save SetOffsetRange regs.
            //
            for (i=0; i < pDacHalInfo->NumCrtcs; i++)
            {
                pMcHalPowerInfo->SaveCrtcConfig[i] = REG_RD32(NV_PCRTC_CONFIG + pDacHalInfo->CrtcInfo[i].RegOffset); 
                pMcHalPowerInfo->PcrtcRasterStart[i] = REG_RD32(NV_PCRTC_RASTER_START + pDacHalInfo->CrtcInfo[i].RegOffset);
                pMcHalPowerInfo->PcrtcRasterStop[i] = REG_RD32(NV_PCRTC_RASTER_STOP + pDacHalInfo->CrtcInfo[i].RegOffset); 
            }

/*
When going into hibernation, the NT miniport makes a power state transition from state 0 to state 3.  State 3
implies that ALL clocks have been put in a power-down state, i.e. lowered.  Unfortunately, NT also requires 
the ability to perform VGA accesses *AFTER* the power management call.  Putting PClk into a power-down state 
disables VGA accesses, so for the time being, for NT, we cannot allow PClk to be put into a power-down state.
NOTE:  This is a liability if the system does not truly remove power from the device during hibernation.  In
this case, PClk will still be drawing full current, which could lead to power saving specs' being violated or,
more importantly, reliability problems with the device.
*/
#ifndef NTRM
            //
            // Turn down clock.
            //
            if (pMcPowerArg->newLevel == MC_POWER_LEVEL_3)
            {
                FLD_WR_DRF_DEF(_PRAMDAC, _PLL_SETUP_CONTROL, _PWRDWN, _VPLL);
                FLD_WR_DRF_DEF(_PRAMDAC, _PLL_SETUP_CONTROL, _PWRDWN, _VPLL2);
            }
            break;
#endif
        }
        default:
            return (RM_ERR_BAD_ARGUMENT);
    }

    return (RM_OK);
}

BOOL IsNV20_NV20(PMCHALINFO pMcHalInfo)
{
    return ((pMcHalInfo->Architecture == MC_ARCHITECTURE_NV20) &&
            (pMcHalInfo->Implementation == MC_IMPLEMENTATION_NV20));
}

BOOL IsNV20MaskRevA02_NV20(PMCHALINFO pMcHalInfo)
{
    return ((pMcHalInfo->Architecture == MC_ARCHITECTURE_NV20) &&
            (pMcHalInfo->Implementation == MC_IMPLEMENTATION_NV20) &&
            (pMcHalInfo->MaskRevision == MC_MASK_REVISION_A2));
}

BOOL IsNV20MaskRevA03_NV20(PMCHALINFO pMcHalInfo)
{
    return ((pMcHalInfo->Architecture == MC_ARCHITECTURE_NV20) &&
            (pMcHalInfo->Implementation == MC_IMPLEMENTATION_NV20) &&
            (pMcHalInfo->MaskRevision == MC_MASK_REVISION_A3));
}
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Microsoft Xbox (1.00.4400) [April 2002] [src]\private\ntos\video\nv20\drivers\resman\kernel\modular\nv\class017.c ===
/***************************************************************************\
|*                                                                           *|
|*        Copyright (c) 1993-2000 NVIDIA, Corp.  All rights reserved.        *|
|*                                                                           *|
|*     NOTICE TO USER:   The source code  is copyrighted under  U.S. and     *|
|*     international laws.   NVIDIA, Corp. of Sunnyvale, California owns     *|
|*     the copyright  and as design patents  pending  on the design  and     *|
|*     interface  of the NV chips.   Users and possessors of this source     *|
|*     code are hereby granted  a nonexclusive,  royalty-free  copyright     *|
|*     and  design  patent license  to use this code  in individual  and     *|
|*     commercial software.                                                  *|
|*                                                                           *|
|*     Any use of this source code must include,  in the user documenta-     *|
|*     tion and  internal comments to the code,  notices to the end user     *|
|*     as follows:                                                           *|
|*                                                                           *|
|*     Copyright (c) 1993-2000  NVIDIA, Corp.    NVIDIA  design  patents     *|
|*     pending in the U.S. and foreign countries.                            *|
|*                                                                           *|
|*     NVIDIA, CORP.  MAKES  NO REPRESENTATION ABOUT  THE SUITABILITY OF     *|
|*     THIS SOURCE CODE FOR ANY PURPOSE.  IT IS PROVIDED "AS IS" WITHOUT     *|
|*     EXPRESS OR IMPLIED WARRANTY OF ANY KIND.  NVIDIA, CORP. DISCLAIMS     *|
|*     ALL WARRANTIES  WITH REGARD  TO THIS SOURCE CODE,  INCLUDING  ALL     *|
|*     IMPLIED   WARRANTIES  OF  MERCHANTABILITY  AND   FITNESS   FOR  A     *|
|*     PARTICULAR  PURPOSE.   IN NO EVENT SHALL NVIDIA, CORP.  BE LIABLE     *|
|*     FOR ANY SPECIAL, INDIRECT, INCIDENTAL,  OR CONSEQUENTIAL DAMAGES,     *|
|*     OR ANY DAMAGES  WHATSOEVER  RESULTING  FROM LOSS OF USE,  DATA OR     *|
|*     PROFITS,  WHETHER IN AN ACTION  OF CONTRACT,  NEGLIGENCE OR OTHER     *|
|*     TORTIOUS ACTION, ARISING OUT  OF OR IN CONNECTION WITH THE USE OR     *|
|*     PERFORMANCE OF THIS SOURCE CODE.                                      *|
|*                                                                           *|
 \***************************************************************************/

/************************ NV1_CONTEXT_COLOR_KEY *****************************\
*                                                                           *
* Module: CLASS017.C                                                        *
*   This module implements the NV1_CONTEXT_COLOR_KEY object class           *
*   and its corresponding methods.                                          *
*                                                                           *
*****************************************************************************
*                                                                           *
* History:                                                                  *
*                                                                           *
\***************************************************************************/
#include <nv_ref.h>
#include <nvrm.h>
#include <state.h>
#include <class.h>
#include <gr.h>   
#include <dma.h>   
#include <modular.h>
#include <fifo.h>
#include <os.h>
#include <nv32.h>
#include "smp.h"

//
// Externs.
//


//---------------------------------------------------------------------------
//
//  Create/Destroy object routines.
//
//---------------------------------------------------------------------------


//---------------------------------------------------------------------------
//
//  Miscellaneous class support routines.
//
//---------------------------------------------------------------------------


//---------------------------------------------------------------------------
//
//  Class validation routines.
//
//---------------------------------------------------------------------------


//---------------------------------------------------------------------------
//
//  Class method routines.
//
//---------------------------------------------------------------------------
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Microsoft Xbox (1.00.4400) [April 2002] [src]\private\ntos\video\nv20\drivers\resman\kernel\modular\nv\class012.c ===
/***************************************************************************\
|*                                                                           *|
|*        Copyright (c) 1993-2000 NVIDIA, Corp.  All rights reserved.        *|
|*                                                                           *|
|*     NOTICE TO USER:   The source code  is copyrighted under  U.S. and     *|
|*     international laws.   NVIDIA, Corp. of Sunnyvale, California owns     *|
|*     the copyright  and as design patents  pending  on the design  and     *|
|*     interface  of the NV chips.   Users and possessors of this source     *|
|*     code are hereby granted  a nonexclusive,  royalty-free  copyright     *|
|*     and  design  patent license  to use this code  in individual  and     *|
|*     commercial software.                                                  *|
|*                                                                           *|
|*     Any use of this source code must include,  in the user documenta-     *|
|*     tion and  internal comments to the code,  notices to the end user     *|
|*     as follows:                                                           *|
|*                                                                           *|
|*     Copyright (c) 1993-2000  NVIDIA, Corp.    NVIDIA  design  patents     *|
|*     pending in the U.S. and foreign countries.                            *|
|*                                                                           *|
|*     NVIDIA, CORP.  MAKES  NO REPRESENTATION ABOUT  THE SUITABILITY OF     *|
|*     THIS SOURCE CODE FOR ANY PURPOSE.  IT IS PROVIDED "AS IS" WITHOUT     *|
|*     EXPRESS OR IMPLIED WARRANTY OF ANY KIND.  NVIDIA, CORP. DISCLAIMS     *|
|*     ALL WARRANTIES  WITH REGARD  TO THIS SOURCE CODE,  INCLUDING  ALL     *|
|*     IMPLIED   WARRANTIES  OF  MERCHANTABILITY  AND   FITNESS   FOR  A     *|
|*     PARTICULAR  PURPOSE.   IN NO EVENT SHALL NVIDIA, CORP.  BE LIABLE     *|
|*     FOR ANY SPECIAL, INDIRECT, INCIDENTAL,  OR CONSEQUENTIAL DAMAGES,     *|
|*     OR ANY DAMAGES  WHATSOEVER  RESULTING  FROM LOSS OF USE,  DATA OR     *|
|*     PROFITS,  WHETHER IN AN ACTION  OF CONTRACT,  NEGLIGENCE OR OTHER     *|
|*     TORTIOUS ACTION, ARISING OUT  OF OR IN CONNECTION WITH THE USE OR     *|
|*     PERFORMANCE OF THIS SOURCE CODE.                                      *|
|*                                                                           *|
 \***************************************************************************/

/*************************** NV1_BETA_SOLID ********************************\
*                                                                           *
* Module: CLASS012.C                                                        *
*   This module implements the NV1_BETA_SOLID object class                  *
*   and its corresponding methods.                                          *
*                                                                           *
*****************************************************************************
*                                                                           *
* History:                                                                  *
*                                                                           *
\***************************************************************************/
#include <nv_ref.h>
#include <nvrm.h>
#include <state.h>
#include <class.h>
#include <gr.h>   
#include <dma.h>   
#include <modular.h>
#include <fifo.h>
#include <os.h>
#include <nv32.h>
#include "smp.h"

//
// Externs.
//


//---------------------------------------------------------------------------
//
//  Create/Destroy object routines.
//
//---------------------------------------------------------------------------


//---------------------------------------------------------------------------
//
//  Miscellaneous class support routines.
//
//---------------------------------------------------------------------------


//---------------------------------------------------------------------------
//
//  Class validation routines.
//
//---------------------------------------------------------------------------


//---------------------------------------------------------------------------
//
//  Class method routines.
//
//---------------------------------------------------------------------------
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Microsoft Xbox (1.00.4400) [April 2002] [src]\private\ntos\video\nv20\drivers\resman\kernel\modular\nv\class018.c ===
/***************************************************************************\
|*                                                                           *|
|*        Copyright (c) 1993-2000 NVIDIA, Corp.  All rights reserved.        *|
|*                                                                           *|
|*     NOTICE TO USER:   The source code  is copyrighted under  U.S. and     *|
|*     international laws.   NVIDIA, Corp. of Sunnyvale, California owns     *|
|*     the copyright  and as design patents  pending  on the design  and     *|
|*     interface  of the NV chips.   Users and possessors of this source     *|
|*     code are hereby granted  a nonexclusive,  royalty-free  copyright     *|
|*     and  design  patent license  to use this code  in individual  and     *|
|*     commercial software.                                                  *|
|*                                                                           *|
|*     Any use of this source code must include,  in the user documenta-     *|
|*     tion and  internal comments to the code,  notices to the end user     *|
|*     as follows:                                                           *|
|*                                                                           *|
|*     Copyright (c) 1993-2000  NVIDIA, Corp.    NVIDIA  design  patents     *|
|*     pending in the U.S. and foreign countries.                            *|
|*                                                                           *|
|*     NVIDIA, CORP.  MAKES  NO REPRESENTATION ABOUT  THE SUITABILITY OF     *|
|*     THIS SOURCE CODE FOR ANY PURPOSE.  IT IS PROVIDED "AS IS" WITHOUT     *|
|*     EXPRESS OR IMPLIED WARRANTY OF ANY KIND.  NVIDIA, CORP. DISCLAIMS     *|
|*     ALL WARRANTIES  WITH REGARD  TO THIS SOURCE CODE,  INCLUDING  ALL     *|
|*     IMPLIED   WARRANTIES  OF  MERCHANTABILITY  AND   FITNESS   FOR  A     *|
|*     PARTICULAR  PURPOSE.   IN NO EVENT SHALL NVIDIA, CORP.  BE LIABLE     *|
|*     FOR ANY SPECIAL, INDIRECT, INCIDENTAL,  OR CONSEQUENTIAL DAMAGES,     *|
|*     OR ANY DAMAGES  WHATSOEVER  RESULTING  FROM LOSS OF USE,  DATA OR     *|
|*     PROFITS,  WHETHER IN AN ACTION  OF CONTRACT,  NEGLIGENCE OR OTHER     *|
|*     TORTIOUS ACTION, ARISING OUT  OF OR IN CONNECTION WITH THE USE OR     *|
|*     PERFORMANCE OF THIS SOURCE CODE.                                      *|
|*                                                                           *|
 \***************************************************************************/

/*********************** NV01_CONTEXT_PATTERN ******************************\
*                                                                           *
* Module: CLASS018.C                                                        *
*   This module implements the NV01_CONTEXT_PATTERN object class            *
*   and its corresponding methods.                                          *
*                                                                           *
*****************************************************************************
*                                                                           *
* History:                                                                  *
*                                                                           *
\***************************************************************************/
#include <nv_ref.h>
#include <nvrm.h>
#include <state.h>
#include <class.h>
#include <gr.h>   
#include <dma.h>   
#include <modular.h>
#include <fifo.h>
#include <os.h>
#include <nv32.h>
#include "smp.h"

//
// Externs.
//


//---------------------------------------------------------------------------
//
//  Create/Destroy object routines.
//
//---------------------------------------------------------------------------


//---------------------------------------------------------------------------
//
//  Miscellaneous class support routines.
//
//---------------------------------------------------------------------------


//---------------------------------------------------------------------------
//
//  Class validation routines.
//
//---------------------------------------------------------------------------


//---------------------------------------------------------------------------
//
//  Class method routines.
//
//---------------------------------------------------------------------------
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Microsoft Xbox (1.00.4400) [April 2002] [src]\private\ntos\video\nv20\drivers\resman\kernel\modular\nv\class019.c ===
/***************************************************************************\
|*                                                                           *|
|*        Copyright (c) 1993-2000 NVIDIA, Corp.  All rights reserved.        *|
|*                                                                           *|
|*     NOTICE TO USER:   The source code  is copyrighted under  U.S. and     *|
|*     international laws.   NVIDIA, Corp. of Sunnyvale, California owns     *|
|*     the copyright  and as design patents  pending  on the design  and     *|
|*     interface  of the NV chips.   Users and possessors of this source     *|
|*     code are hereby granted  a nonexclusive,  royalty-free  copyright     *|
|*     and  design  patent license  to use this code  in individual  and     *|
|*     commercial software.                                                  *|
|*                                                                           *|
|*     Any use of this source code must include,  in the user documenta-     *|
|*     tion and  internal comments to the code,  notices to the end user     *|
|*     as follows:                                                           *|
|*                                                                           *|
|*     Copyright (c) 1993-2000  NVIDIA, Corp.    NVIDIA  design  patents     *|
|*     pending in the U.S. and foreign countries.                            *|
|*                                                                           *|
|*     NVIDIA, CORP.  MAKES  NO REPRESENTATION ABOUT  THE SUITABILITY OF     *|
|*     THIS SOURCE CODE FOR ANY PURPOSE.  IT IS PROVIDED "AS IS" WITHOUT     *|
|*     EXPRESS OR IMPLIED WARRANTY OF ANY KIND.  NVIDIA, CORP. DISCLAIMS     *|
|*     ALL WARRANTIES  WITH REGARD  TO THIS SOURCE CODE,  INCLUDING  ALL     *|
|*     IMPLIED   WARRANTIES  OF  MERCHANTABILITY  AND   FITNESS   FOR  A     *|
|*     PARTICULAR  PURPOSE.   IN NO EVENT SHALL NVIDIA, CORP.  BE LIABLE     *|
|*     FOR ANY SPECIAL, INDIRECT, INCIDENTAL,  OR CONSEQUENTIAL DAMAGES,     *|
|*     OR ANY DAMAGES  WHATSOEVER  RESULTING  FROM LOSS OF USE,  DATA OR     *|
|*     PROFITS,  WHETHER IN AN ACTION  OF CONTRACT,  NEGLIGENCE OR OTHER     *|
|*     TORTIOUS ACTION, ARISING OUT  OF OR IN CONNECTION WITH THE USE OR     *|
|*     PERFORMANCE OF THIS SOURCE CODE.                                      *|
|*                                                                           *|
 \***************************************************************************/

/********************** NV1_IMAGE_BLACK_RECTANGLE **************************\
*                                                                           *
* Module: CLASS019.C                                                        *
*   This module implements the NV1_IMAGE_BLACK_RECTANGLE object class       *
*   and its corresponding methods.                                          *
*                                                                           *
*****************************************************************************
*                                                                           *
* History:                                                                  *
*                                                                           *
\***************************************************************************/
#include <nv_ref.h>
#include <nvrm.h>
#include <state.h>
#include <class.h>
#include <gr.h>   
#include <dma.h>   
#include <modular.h>
#include <fifo.h>
#include <os.h>
#include <nv32.h>
#include "smp.h"

//
// Externs.
//


//---------------------------------------------------------------------------
//
//  Create/Destroy object routines.
//
//---------------------------------------------------------------------------


//---------------------------------------------------------------------------
//
//  Miscellaneous class support routines.
//
//---------------------------------------------------------------------------


//---------------------------------------------------------------------------
//
//  Class validation routines.
//
//---------------------------------------------------------------------------


//---------------------------------------------------------------------------
//
//  Class method routines.
//
//---------------------------------------------------------------------------
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Microsoft Xbox (1.00.4400) [April 2002] [src]\private\ntos\video\nv20\drivers\resman\kernel\modular\nv\class01d.c ===
/***************************************************************************\
|*                                                                           *|
|*        Copyright (c) 1993-2000 NVIDIA, Corp.  All rights reserved.        *|
|*                                                                           *|
|*     NOTICE TO USER:   The source code  is copyrighted under  U.S. and     *|
|*     international laws.   NVIDIA, Corp. of Sunnyvale, California owns     *|
|*     the copyright  and as design patents  pending  on the design  and     *|
|*     interface  of the NV chips.   Users and possessors of this source     *|
|*     code are hereby granted  a nonexclusive,  royalty-free  copyright     *|
|*     and  design  patent license  to use this code  in individual  and     *|
|*     commercial software.                                                  *|
|*                                                                           *|
|*     Any use of this source code must include,  in the user documenta-     *|
|*     tion and  internal comments to the code,  notices to the end user     *|
|*     as follows:                                                           *|
|*                                                                           *|
|*     Copyright (c) 1993-2000  NVIDIA, Corp.    NVIDIA  design  patents     *|
|*     pending in the U.S. and foreign countries.                            *|
|*                                                                           *|
|*     NVIDIA, CORP.  MAKES  NO REPRESENTATION ABOUT  THE SUITABILITY OF     *|
|*     THIS SOURCE CODE FOR ANY PURPOSE.  IT IS PROVIDED "AS IS" WITHOUT     *|
|*     EXPRESS OR IMPLIED WARRANTY OF ANY KIND.  NVIDIA, CORP. DISCLAIMS     *|
|*     ALL WARRANTIES  WITH REGARD  TO THIS SOURCE CODE,  INCLUDING  ALL     *|
|*     IMPLIED   WARRANTIES  OF  MERCHANTABILITY  AND   FITNESS   FOR  A     *|
|*     PARTICULAR  PURPOSE.   IN NO EVENT SHALL NVIDIA, CORP.  BE LIABLE     *|
|*     FOR ANY SPECIAL, INDIRECT, INCIDENTAL,  OR CONSEQUENTIAL DAMAGES,     *|
|*     OR ANY DAMAGES  WHATSOEVER  RESULTING  FROM LOSS OF USE,  DATA OR     *|
|*     PROFITS,  WHETHER IN AN ACTION  OF CONTRACT,  NEGLIGENCE OR OTHER     *|
|*     TORTIOUS ACTION, ARISING OUT  OF OR IN CONNECTION WITH THE USE OR     *|
|*     PERFORMANCE OF THIS SOURCE CODE.                                      *|
|*                                                                           *|
 \***************************************************************************/

/********************** NV1_RENDER_SOLID_TRIANGLE **************************\
*                                                                           *
* Module: CLASS01D.C                                                        *
*   This module implements the NV1_RENDER_SOLID_TRIANGLE object class       *
*   and its corresponding methods.                                          *
*                                                                           *
*****************************************************************************
*                                                                           *
* History:                                                                  *
*                                                                           *
\***************************************************************************/
#include <nv_ref.h>
#include <nvrm.h>
#include <state.h>
#include <class.h>
#include <gr.h>   
#include <dma.h>   
#include <modular.h>
#include <fifo.h>
#include <os.h>
#include <nv32.h>
#include "smp.h"

//
// Externs.
//

//---------------------------------------------------------------------------
//
//  Create/Destroy object routines.
//
//---------------------------------------------------------------------------


//---------------------------------------------------------------------------
//
//  Miscellaneous class support routines.
//
//---------------------------------------------------------------------------


//---------------------------------------------------------------------------
//
//  Class validation routines.
//
//---------------------------------------------------------------------------

RM_STATUS class01DValidate
(
	PHWINFO             pDev,
    PRENDERCOMMONOBJECT pRenderObject,
    U032                andMask,
    U032                orMask
)
{
    RM_STATUS status = RM_OK;

    //
    // Validate the current configuration of this object.  Update the object
    // instance data structure accordingly.
    //
    if ((pRenderObject->RCPatchContext.Operation != NV_ROP_AND  ||  
                    pRenderObject->RCPatchContext.Pattern != NULL)  &&
	    (pRenderObject->RCPatchContext.Operation != NV_ROP_AND  ||  
                    pRenderObject->RCPatchContext.Rop != NULL)  &&
	    (pRenderObject->RCPatchContext.Operation != NV_BLEND_AND  ||  
                    pRenderObject->RCPatchContext.Beta1 != NULL)  &&
	    (pRenderObject->RCPatchContext.Surface != NULL))
    {
        //
        // Patch status is valid
        //
        nvHalGrSetObjectContext(pDev,
                                ~DRF_DEF(_PGRAPH, _CTX_SWITCH1, _PATCH_STATUS, _VALID) & andMask,
                                DRF_DEF(_PGRAPH, _CTX_SWITCH1, _PATCH_STATUS, _VALID) | orMask,
                                pRenderObject->Common.Base.ChID,
                                pRenderObject->Common.Instance);
        pRenderObject->CValid = TRUE;
    
    } else {
        //
        // Patch status is invalid
        //
        nvHalGrSetObjectContext(pDev,
                                ~DRF_DEF(_PGRAPH, _CTX_SWITCH1, _PATCH_STATUS, _VALID) & andMask,
                                orMask,
                                pRenderObject->Common.Base.ChID,
                                pRenderObject->Common.Instance);
        pRenderObject->CValid = FALSE;
    }

    return (status);
}


//---------------------------------------------------------------------------
//
//  Class method routines.
//
//---------------------------------------------------------------------------

//
//  NOTE: Any method not listed here is most likely aliased to HWMethod()
//

RM_STATUS class01DSetContextClip
(
	PHWINFO pDev,
    POBJECT Object,
    PMETHOD Method,
    U032    Offset,
    U032    Data
)
{
    POBJECT                 TempObject;
    PRENDERCOMMONOBJECT     pRenderObject;
    U032                    andMask, orMask;
    RM_STATUS               status = RM_OK;

    DBG_PRINT_STRING(DEBUGLEVEL_TRACEINFO, "NVRM: class01DSetContextClip\r\n");

    //
    // A nice cast to make the code more readable.
    //
    pRenderObject = (PRENDERCOMMONOBJECT)Object;

    //
    // We'll be updating this bit.
    //
    andMask = ~DRF_DEF(_PGRAPH, _CTX_SWITCH1, _USER_CLIP, _ENABLE);

    //
    // Verify the incoming data is valid for this method
    //
    if (Data == NV1_NULL_OBJECT) 
    {
        //
        // Set to the NULL object and disable the colorkey.
        //
        orMask = 0;
        pRenderObject->RCPatchContext.Clip = (PCOMMONOBJECT)NULL;        
    }
    else if (fifoSearchObject(pDev, Data, pRenderObject->CBase.ChID, &TempObject) == RM_OK)
    {
        //
        // There is a corresponding object in this channel.  Validate.
        //
        switch (TempObject->Class->Type)
        {
            case NV1_IMAGE_BLACK_RECTANGLE:
                //
                // This is a valid colorkey object
                //
                orMask = DRF_DEF(_PGRAPH, _CTX_SWITCH1, _USER_CLIP, _ENABLE);
                pRenderObject->RCPatchContext.Clip = (PCOMMONOBJECT)TempObject;
                break;
            
            case NV1_NULL:
            case NV1_NULL_OBJECT:
                //
                // A NULL class should disable
                //
                orMask = 0;
                pRenderObject->RCPatchContext.Clip = (PCOMMONOBJECT)NULL;
                break;
                
            default:
                //
                // Any other class is an error
                //
                DBG_PRINT_STRING_VALUE(DEBUGLEVEL_ERRORS, "NVRM: SetContext with invalid object: ", Data);
                return (NV01D_NOTIFICATION_STATUS_ERROR_BAD_ARGUMENT); 
                break;
        }
    }
    else
    {
        //
        // Object not found or data invalid.
        //
        DBG_PRINT_STRING_VALUE(DEBUGLEVEL_ERRORS, "NVRM: SetContext with invalid object: ", Data);
        return (NV01D_NOTIFICATION_STATUS_ERROR_BAD_ARGUMENT);
    }
    
    //
    // Update object validation
    //
    status = class01DValidate(pDev, pRenderObject, andMask, orMask);
    
    return (status);
}


RM_STATUS class01DSetContextPattern
(
	PHWINFO pDev,
    POBJECT Object,
    PMETHOD Method,
    U032    Offset,
    U032    Data
)
{
    POBJECT                 TempObject;
    PRENDERCOMMONOBJECT     pRenderObject;
    RM_STATUS               status = RM_OK;

    DBG_PRINT_STRING(DEBUGLEVEL_TRACEINFO, "NVRM: class01DSetContextPattern\r\n");

    //
    // A nice cast to make the code more readable.
    //
    pRenderObject = (PRENDERCOMMONOBJECT)Object;

    //
    // Verify the incoming data is valid for this method
    //
    if (Data == NV1_NULL_OBJECT) 
    {
        //
        // Set to the NULL object
        //
        pRenderObject->RCPatchContext.Pattern = (PCOMMONOBJECT)NULL;
        
    }
    else if (fifoSearchObject(pDev, Data, pRenderObject->CBase.ChID, &TempObject) == RM_OK)
    {
        //
        // There is a corresponding object in this channel.  Validate.
        //
        switch (TempObject->Class->Type)
        {
            case NV1_IMAGE_PATTERN:
                //
                // This is a valid object
                //            
                pRenderObject->RCPatchContext.Pattern = (PCOMMONOBJECT)TempObject;
                break;
            
            case NV1_NULL:
            case NV1_NULL_OBJECT:
                //
                // A NULL class should disable
                //
                pRenderObject->RCPatchContext.Pattern = (PCOMMONOBJECT)NULL;
                break;
                
            default:
                //
                // Any other class is an error
                //
                DBG_PRINT_STRING_VALUE(DEBUGLEVEL_ERRORS, "NVRM: SetContext with invalid object: ", Data);
                return (NV01D_NOTIFICATION_STATUS_ERROR_BAD_ARGUMENT); 
                break;
        }
    }
    else
    {
        //
        // Object not found or data invalid.
        //
        DBG_PRINT_STRING_VALUE(DEBUGLEVEL_ERRORS, "NVRM: SetContext with invalid object: ", Data);
        return (NV01D_NOTIFICATION_STATUS_ERROR_BAD_ARGUMENT);
    }
    
    //
    // Update object validation
    //
    status = class01DValidate(pDev, pRenderObject, 0xffffffff, 0);
    
    return (status);
}


RM_STATUS class01DSetContextRop
(
	PHWINFO pDev,
    POBJECT Object,
    PMETHOD Method,
    U032    Offset,
    U032    Data
)
{
    POBJECT                 TempObject;
    PRENDERCOMMONOBJECT     pRenderObject;
    RM_STATUS               status = RM_OK;

    DBG_PRINT_STRING(DEBUGLEVEL_TRACEINFO, "NVRM: class01DSetContextRop\r\n");

    //
    // A nice cast to make the code more readable.
    //
    pRenderObject = (PRENDERCOMMONOBJECT)Object;

    //
    // Verify the incoming data is valid for this method
    //
    if (Data == NV1_NULL_OBJECT) 
    {
        //
        // Set to the NULL object
        //
        pRenderObject->RCPatchContext.Rop = (PCOMMONOBJECT)NULL;
        
    }
    else if (fifoSearchObject(pDev, Data, pRenderObject->CBase.ChID, &TempObject) == RM_OK)
    {
        //
        // There is a corresponding object in this channel.  Validate.
        //
        switch (TempObject->Class->Type)
        {
            case NV3_CONTEXT_ROP:
                //
                // This is a valid object
                //            
                pRenderObject->RCPatchContext.Rop = (PCOMMONOBJECT)TempObject;
                break;
            
            case NV1_NULL:
            case NV1_NULL_OBJECT:
                //
                // A NULL class should disable
                //
                pRenderObject->RCPatchContext.Rop = (PCOMMONOBJECT)NULL;
                break;
                
            default:
                //
                // Any other class is an error
                //
                DBG_PRINT_STRING_VALUE(DEBUGLEVEL_ERRORS, "NVRM: SetContext with invalid object: ", Data);
                return (NV01D_NOTIFICATION_STATUS_ERROR_BAD_ARGUMENT); 
                break;
        }
    }
    else
    {
        //
        // Object not found or data invalid.
        //
        DBG_PRINT_STRING_VALUE(DEBUGLEVEL_ERRORS, "NVRM: SetContext with invalid object: ", Data);
        return (NV01D_NOTIFICATION_STATUS_ERROR_BAD_ARGUMENT);
    }
    
    //
    // Update object validation
    //
    status = class01DValidate(pDev, pRenderObject, 0xffffffff, 0);
    
    return (status);
}


RM_STATUS class01DSetContextBeta1
(
	PHWINFO pDev,
    POBJECT Object,
    PMETHOD Method,
    U032    Offset,
    U032    Data
)
{
    POBJECT                 TempObject;
    PRENDERCOMMONOBJECT     pRenderObject;
    RM_STATUS               status = RM_OK;

    DBG_PRINT_STRING(DEBUGLEVEL_TRACEINFO, "NVRM: class01DSetContextBeta1\r\n");

    //
    // A nice cast to make the code more readable.
    //
    pRenderObject = (PRENDERCOMMONOBJECT)Object;

    //
    // Verify the incoming data is valid for this method
    //
    if (Data == NV1_NULL_OBJECT) 
    {
        //
        // Set to the NULL object
        //
        pRenderObject->RCPatchContext.Beta1 = (PCOMMONOBJECT)NULL;
        
    }
    else if (fifoSearchObject(pDev, Data, pRenderObject->CBase.ChID, &TempObject) == RM_OK)
    {
        //
        // There is a corresponding object in this channel.  Validate.
        //
        switch (TempObject->Class->Type)
        {
            case NV1_BETA_SOLID:
                //
                // This is a valid object
                //            
                pRenderObject->RCPatchContext.Beta1 = (PCOMMONOBJECT)TempObject;
                break;
            
            case NV1_NULL:
            case NV1_NULL_OBJECT:
                //
                // A NULL class should disable
                //
                pRenderObject->RCPatchContext.Beta1 = (PCOMMONOBJECT)NULL;
                break;
                
            default:
                //
                // Any other class is an error
                //
                DBG_PRINT_STRING_VALUE(DEBUGLEVEL_ERRORS, "NVRM: SetContext with invalid object: ", Data);
                return (NV01D_NOTIFICATION_STATUS_ERROR_BAD_ARGUMENT); 
                break;
        }
    }
    else
    {
        //
        // Object not found or data invalid.
        //
        DBG_PRINT_STRING_VALUE(DEBUGLEVEL_ERRORS, "NVRM: SetContext with invalid object: ", Data);
        return (NV01D_NOTIFICATION_STATUS_ERROR_BAD_ARGUMENT);
    }
    
    //
    // Update object validation
    //
    status = class01DValidate(pDev, pRenderObject, 0xffffffff, 0);
    
    return (status);
}


RM_STATUS class01DSetContextSurface
(
	PHWINFO pDev,
    POBJECT Object,
    PMETHOD Method,
    U032    Offset,
    U032    Data
)
{
    POBJECT                 TempObject;
    PRENDERCOMMONOBJECT     pRenderObject;
    RM_STATUS               status = RM_OK;

    DBG_PRINT_STRING(DEBUGLEVEL_TRACEINFO, "NVRM: class01DSetContextSurface\r\n");

    //
    // A nice cast to make the code more readable.
    //
    pRenderObject = (PRENDERCOMMONOBJECT)Object;

    //
    // Verify the incoming data is valid for this method
    //
    if (Data == NV1_NULL_OBJECT) 
    {
        //
        // Set to the NULL object
        //
        pRenderObject->RCPatchContext.Surface = (PCOMMONOBJECT)NULL;
        
    }
    else if (fifoSearchObject(pDev, Data, pRenderObject->CBase.ChID, &TempObject) == RM_OK)
    {
        //
        // There is a corresponding object in this channel.  Validate.
        //
        switch (TempObject->Class->Type)
        {
            case NV3_CONTEXT_SURFACE_0:
                //
                // This is a valid object
                //            
                pRenderObject->RCPatchContext.Surface = (PCOMMONOBJECT)TempObject;
                break;
            
            case NV1_NULL:
            case NV1_NULL_OBJECT:
                //
                // A NULL class should disable
                //
                pRenderObject->RCPatchContext.Surface = (PCOMMONOBJECT)NULL;
                break;
                
            default:
                //
                // Any other class is an error
                //
                DBG_PRINT_STRING_VALUE(DEBUGLEVEL_ERRORS, "NVRM: SetContext with invalid object: ", Data);
                return (NV01D_NOTIFICATION_STATUS_ERROR_BAD_ARGUMENT); 
                break;
        }
    }
    else
    {
        //
        // Object not found or data invalid.
        //
        DBG_PRINT_STRING_VALUE(DEBUGLEVEL_ERRORS, "NVRM: SetContext with invalid object: ", Data);
        return (NV01D_NOTIFICATION_STATUS_ERROR_BAD_ARGUMENT);
    }
    
    //
    // Update object validation
    //
    status = class01DValidate(pDev, pRenderObject, 0xffffffff, 0);
    
    return (status);
}


RM_STATUS class01DSetOperation
(
	PHWINFO pDev,
    POBJECT Object,
    PMETHOD Method,
    U032    Offset,
    U032    Data
)
{
    PRENDERCOMMONOBJECT     pRenderObject;
    U032                    andMask, orMask;
    RM_STATUS               status = RM_OK;

    DBG_PRINT_STRING(DEBUGLEVEL_TRACEINFO, "NVRM: class01DSetOperation\r\n");
    //
    // A nice cast to make the code more readable.
    //
    pRenderObject = (PRENDERCOMMONOBJECT)Object;

    //
    // Verify the incoming data is valid for this method
    //
    if (Data < NV3_GR_OPERATIONS) 
    {
        //
        // Set the new value
        //
        andMask = ~(DRF_MASK(NV_PGRAPH_CTX_SWITCH1_PATCH_CONFIG) << DRF_SHIFT(NV_PGRAPH_CTX_SWITCH1_PATCH_CONFIG));
        orMask = DRF_NUM(_PGRAPH, _CTX_SWITCH1, _PATCH_CONFIG, Data);
        pRenderObject->RCPatchContext.Operation = Data;     // save the arch value for validation
    }
    else
    {
        //
        // Data invalid.
        //
        DBG_PRINT_STRING_VALUE(DEBUGLEVEL_ERRORS, "NVRM: SetContext with invalid data: ", Data);
        return (NV01D_NOTIFICATION_STATUS_ERROR_BAD_ARGUMENT);
    }
    
    //
    // Update object validation
    //
    status = class01DValidate(pDev, pRenderObject, andMask, orMask);
    
    return (status);
}
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Microsoft Xbox (1.00.4400) [April 2002] [src]\private\ntos\video\nv20\drivers\resman\kernel\modular\nv\class01c.c ===
/***************************************************************************\
|*                                                                           *|
|*        Copyright (c) 1993-2000 NVIDIA, Corp.  All rights reserved.        *|
|*                                                                           *|
|*     NOTICE TO USER:   The source code  is copyrighted under  U.S. and     *|
|*     international laws.   NVIDIA, Corp. of Sunnyvale, California owns     *|
|*     the copyright  and as design patents  pending  on the design  and     *|
|*     interface  of the NV chips.   Users and possessors of this source     *|
|*     code are hereby granted  a nonexclusive,  royalty-free  copyright     *|
|*     and  design  patent license  to use this code  in individual  and     *|
|*     commercial software.                                                  *|
|*                                                                           *|
|*     Any use of this source code must include,  in the user documenta-     *|
|*     tion and  internal comments to the code,  notices to the end user     *|
|*     as follows:                                                           *|
|*                                                                           *|
|*     Copyright (c) 1993-2000  NVIDIA, Corp.    NVIDIA  design  patents     *|
|*     pending in the U.S. and foreign countries.                            *|
|*                                                                           *|
|*     NVIDIA, CORP.  MAKES  NO REPRESENTATION ABOUT  THE SUITABILITY OF     *|
|*     THIS SOURCE CODE FOR ANY PURPOSE.  IT IS PROVIDED "AS IS" WITHOUT     *|
|*     EXPRESS OR IMPLIED WARRANTY OF ANY KIND.  NVIDIA, CORP. DISCLAIMS     *|
|*     ALL WARRANTIES  WITH REGARD  TO THIS SOURCE CODE,  INCLUDING  ALL     *|
|*     IMPLIED   WARRANTIES  OF  MERCHANTABILITY  AND   FITNESS   FOR  A     *|
|*     PARTICULAR  PURPOSE.   IN NO EVENT SHALL NVIDIA, CORP.  BE LIABLE     *|
|*     FOR ANY SPECIAL, INDIRECT, INCIDENTAL,  OR CONSEQUENTIAL DAMAGES,     *|
|*     OR ANY DAMAGES  WHATSOEVER  RESULTING  FROM LOSS OF USE,  DATA OR     *|
|*     PROFITS,  WHETHER IN AN ACTION  OF CONTRACT,  NEGLIGENCE OR OTHER     *|
|*     TORTIOUS ACTION, ARISING OUT  OF OR IN CONNECTION WITH THE USE OR     *|
|*     PERFORMANCE OF THIS SOURCE CODE.                                      *|
|*                                                                           *|
 \***************************************************************************/

/************************ NV1_RENDER_SOLID_LIN *****************************\
*                                                                           *
* Module: CLASS01C.C                                                        *
*   This module implements the NV1_RENDER_SOLID_LIN object class            *
*   and its corresponding methods.                                          *
*                                                                           *
*****************************************************************************
*                                                                           *
* History:                                                                  *
*                                                                           *
\***************************************************************************/
#include <nv_ref.h>
#include <nvrm.h>
#include <state.h>
#include <class.h>
#include <gr.h>   
#include <dma.h>   
#include <modular.h>
#include <fifo.h>
#include <os.h>
#include <nv32.h>
#include "smp.h"

//
// Externs.
//


//---------------------------------------------------------------------------
//
//  Create/Destroy object routines.
//
//---------------------------------------------------------------------------


//---------------------------------------------------------------------------
//
//  Miscellaneous class support routines.
//
//---------------------------------------------------------------------------


//---------------------------------------------------------------------------
//
//  Class validation routines.
//
//---------------------------------------------------------------------------

RM_STATUS class01CValidate
(
	PHWINFO             pDev,
    PRENDERCOMMONOBJECT pRenderObject,
    U032 andMask,
    U032 orMask
)
{
    RM_STATUS status = RM_OK;
    
    //
    // Validate the current configuration of this object.  Update the object
    // instance data structure accordingly.
    //
    if ((pRenderObject->RCPatchContext.Operation != NV_ROP_AND  ||  
                    pRenderObject->RCPatchContext.Pattern != NULL)  &&
	    (pRenderObject->RCPatchContext.Operation != NV_ROP_AND  ||  
                    pRenderObject->RCPatchContext.Rop != NULL)  &&
	    (pRenderObject->RCPatchContext.Operation != NV_BLEND_AND  ||  
                    pRenderObject->RCPatchContext.Beta1 != NULL)  &&
	    (pRenderObject->RCPatchContext.Surface != NULL))
    {
        //
        // Patch status is valid
        //
        nvHalGrSetObjectContext(pDev,
                                ~DRF_DEF(_PGRAPH, _CTX_SWITCH1, _PATCH_STATUS, _VALID) & andMask,
                                DRF_DEF(_PGRAPH, _CTX_SWITCH1, _PATCH_STATUS, _VALID) | orMask,
                                pRenderObject->Common.Base.ChID,
                                pRenderObject->Common.Instance);
        pRenderObject->CValid = TRUE;
    
    } else {
        //
        // Patch status is invalid
        //
        nvHalGrSetObjectContext(pDev,
                                ~DRF_DEF(_PGRAPH, _CTX_SWITCH1, _PATCH_STATUS, _VALID) & andMask,
                                orMask,
                                pRenderObject->Common.Base.ChID,
                                pRenderObject->Common.Instance);
        pRenderObject->CValid = FALSE;
    }

    return (status);
}


//---------------------------------------------------------------------------
//
//  Class method routines.
//
//---------------------------------------------------------------------------

//
//  NOTE: Any method not listed here is most likely aliased to HWMethod()
//

RM_STATUS class01CSetContextClip
(
	PHWINFO pDev,
    POBJECT Object,
    PMETHOD Method,
    U032    Offset,
    U032    Data
)
{
    POBJECT                 TempObject;
    PRENDERCOMMONOBJECT     pRenderObject;
    U032                    andMask, orMask;
    RM_STATUS               status = RM_OK;

    DBG_PRINT_STRING(DEBUGLEVEL_WARNINGS, "NVRM: class01CSetContextClip\r\n");

    //
    // A nice cast to make the code more readable.
    //
    pRenderObject = (PRENDERCOMMONOBJECT)Object;

    //
    // We'll be updating this bit.
    //
    andMask = ~DRF_DEF(_PGRAPH, _CTX_SWITCH1, _USER_CLIP, _ENABLE);

    //
    // Verify the incoming data is valid for this method
    //
    if (Data == NV1_NULL_OBJECT) 
    {
        //
        // Set to the NULL object and disable the colorkey.
        //
        orMask = 0;
        pRenderObject->RCPatchContext.Clip = (PCOMMONOBJECT)NULL;        
    }
    else if (fifoSearchObject(pDev, Data, pRenderObject->CBase.ChID, &TempObject) == RM_OK)
    {
        //
        // There is a corresponding object in this channel.  Validate.
        //
        switch (TempObject->Class->Type)
        {
            case NV1_IMAGE_BLACK_RECTANGLE:
                //
                // This is a valid colorkey object
                //
                orMask = DRF_DEF(_PGRAPH, _CTX_SWITCH1, _USER_CLIP, _ENABLE);
                pRenderObject->RCPatchContext.Clip = (PCOMMONOBJECT)TempObject;
                break;
            
            case NV1_NULL:
            case NV1_NULL_OBJECT:
                //
                // A NULL class should disable
                //
                orMask = 0;
                pRenderObject->RCPatchContext.Clip = (PCOMMONOBJECT)NULL;
                break;
                
            default:
                //
                // Any other class is an error
                //
                DBG_PRINT_STRING_VALUE(DEBUGLEVEL_ERRORS, "NVRM: SetContext with invalid object: ", Data);
                return (NV01C_NOTIFICATION_STATUS_ERROR_BAD_ARGUMENT); 
                break;
        }
    }
    else
    {
        //
        // Object not found or data invalid.
        //
        DBG_PRINT_STRING_VALUE(DEBUGLEVEL_ERRORS, "NVRM: SetContext with invalid object: ", Data);
        return (NV01C_NOTIFICATION_STATUS_ERROR_BAD_ARGUMENT);
    }
    
    //
    // Update object validation
    //
    status = class01CValidate(pDev, pRenderObject, andMask, orMask);
    
    return (status);
}


RM_STATUS class01CSetContextPattern
(
	PHWINFO pDev,
    POBJECT Object,
    PMETHOD Method,
    U032    Offset,
    U032    Data
)
{
    POBJECT                 TempObject;
    PRENDERCOMMONOBJECT     pRenderObject;
    RM_STATUS               status = RM_OK;

    DBG_PRINT_STRING(DEBUGLEVEL_TRACEINFO, "NVRM: class01CSetContextPattern\r\n");

    //
    // A nice cast to make the code more readable.
    //
    pRenderObject = (PRENDERCOMMONOBJECT)Object;

    //
    // Verify the incoming data is valid for this method
    //
    if (Data == NV1_NULL_OBJECT) 
    {
        //
        // Set to the NULL object
        //
        pRenderObject->RCPatchContext.Pattern = (PCOMMONOBJECT)NULL;
        
    }
    else if (fifoSearchObject(pDev, Data, pRenderObject->CBase.ChID, &TempObject) == RM_OK)
    {
        //
        // There is a corresponding object in this channel.  Validate.
        //
        switch (TempObject->Class->Type)
        {
            case NV1_IMAGE_PATTERN:
                //
                // This is a valid object
                //            
                pRenderObject->RCPatchContext.Pattern = (PCOMMONOBJECT)TempObject;
                break;
            
            case NV1_NULL:
            case NV1_NULL_OBJECT:
                //
                // A NULL class should disable
                //
                pRenderObject->RCPatchContext.Pattern = (PCOMMONOBJECT)NULL;
                break;
                
            default:
                //
                // Any other class is an error
                //
                DBG_PRINT_STRING_VALUE(DEBUGLEVEL_ERRORS, "NVRM: SetContext with invalid object: ", Data);
                return (NV01C_NOTIFICATION_STATUS_ERROR_BAD_ARGUMENT); 
                break;
        }
    }
    else
    {
        //
        // Object not found or data invalid.
        //
        DBG_PRINT_STRING_VALUE(DEBUGLEVEL_ERRORS, "NVRM: SetContext with invalid object: ", Data);
        return (NV01C_NOTIFICATION_STATUS_ERROR_BAD_ARGUMENT);
    }
    
    //
    // Update object validation
    //
    status = class01CValidate(pDev, pRenderObject, 0xffffffff, 0);
    
    return (status);
}


RM_STATUS class01CSetContextRop
(
	PHWINFO pDev,
    POBJECT Object,
    PMETHOD Method,
    U032    Offset,
    U032    Data
)
{
    POBJECT                 TempObject;
    PRENDERCOMMONOBJECT     pRenderObject;
    RM_STATUS               status = RM_OK;

    DBG_PRINT_STRING(DEBUGLEVEL_TRACEINFO, "NVRM: class01CSetContextRop\r\n");

    //
    // A nice cast to make the code more readable.
    //
    pRenderObject = (PRENDERCOMMONOBJECT)Object;

    //
    // Verify the incoming data is valid for this method
    //
    if (Data == NV1_NULL_OBJECT) 
    {
        //
        // Set to the NULL object
        //
        pRenderObject->RCPatchContext.Rop = (PCOMMONOBJECT)NULL;
        
    }
    else if (fifoSearchObject(pDev, Data, pRenderObject->CBase.ChID, &TempObject) == RM_OK)
    {
        //
        // There is a corresponding object in this channel.  Validate.
        //
        switch (TempObject->Class->Type)
        {
            case NV3_CONTEXT_ROP:
                //
                // This is a valid object
                //            
                pRenderObject->RCPatchContext.Rop = (PCOMMONOBJECT)TempObject;
                break;
            
            case NV1_NULL:
            case NV1_NULL_OBJECT:
                //
                // A NULL class should disable
                //
                pRenderObject->RCPatchContext.Rop = (PCOMMONOBJECT)NULL;
                break;
                
            default:
                //
                // Any other class is an error
                //
                DBG_PRINT_STRING_VALUE(DEBUGLEVEL_ERRORS, "NVRM: SetContext with invalid object: ", Data);
                return (NV01C_NOTIFICATION_STATUS_ERROR_BAD_ARGUMENT); 
                break;
        }
    }
    else
    {
        //
        // Object not found or data invalid.
        //
        DBG_PRINT_STRING_VALUE(DEBUGLEVEL_ERRORS, "NVRM: SetContext with invalid object: ", Data);
        return (NV01C_NOTIFICATION_STATUS_ERROR_BAD_ARGUMENT);
    }
    
    //
    // Update object validation
    //
    status = class01CValidate(pDev, pRenderObject, 0xffffffff, 0);
    
    return (status);
}


RM_STATUS class01CSetContextBeta1
(
	PHWINFO pDev,
    POBJECT Object,
    PMETHOD Method,
    U032    Offset,
    U032    Data
)
{
    POBJECT                 TempObject;
    PRENDERCOMMONOBJECT     pRenderObject;
    RM_STATUS               status = RM_OK;

    DBG_PRINT_STRING(DEBUGLEVEL_TRACEINFO, "NVRM: class01CSetContextBeta1\r\n");

    //
    // A nice cast to make the code more readable.
    //
    pRenderObject = (PRENDERCOMMONOBJECT)Object;

    //
    // Verify the incoming data is valid for this method
    //
    if (Data == NV1_NULL_OBJECT) 
    {
        //
        // Set to the NULL object
        //
        pRenderObject->RCPatchContext.Beta1 = (PCOMMONOBJECT)NULL;
        
    }
    else if (fifoSearchObject(pDev, Data, pRenderObject->CBase.ChID, &TempObject) == RM_OK)
    {
        //
        // There is a corresponding object in this channel.  Validate.
        //
        switch (TempObject->Class->Type)
        {
            case NV1_BETA_SOLID:
                //
                // This is a valid object
                //            
                pRenderObject->RCPatchContext.Beta1 = (PCOMMONOBJECT)TempObject;
                break;
            
            case NV1_NULL:
            case NV1_NULL_OBJECT:
                //
                // A NULL class should disable
                //
                pRenderObject->RCPatchContext.Beta1 = (PCOMMONOBJECT)NULL;
                break;
                
            default:
                //
                // Any other class is an error
                //
                DBG_PRINT_STRING_VALUE(DEBUGLEVEL_ERRORS, "NVRM: SetContext with invalid object: ", Data);
                return (NV01C_NOTIFICATION_STATUS_ERROR_BAD_ARGUMENT); 
                break;
        }
    }
    else
    {
        //
        // Object not found or data invalid.
        //
        DBG_PRINT_STRING_VALUE(DEBUGLEVEL_ERRORS, "NVRM: SetContext with invalid object: ", Data);
        return (NV01C_NOTIFICATION_STATUS_ERROR_BAD_ARGUMENT);
    }
    
    //
    // Update object validation
    //
    status = class01CValidate(pDev, pRenderObject, 0xffffffff, 0);
    
    return (status);
}


RM_STATUS class01CSetContextSurface
(
	PHWINFO pDev,
    POBJECT Object,
    PMETHOD Method,
    U032    Offset,
    U032    Data
)
{
    POBJECT                 TempObject;
    PRENDERCOMMONOBJECT     pRenderObject;
    RM_STATUS               status = RM_OK;

    DBG_PRINT_STRING(DEBUGLEVEL_TRACEINFO, "NVRM: class01CSetContextSurface\r\n");

    //
    // A nice cast to make the code more readable.
    //
    pRenderObject = (PRENDERCOMMONOBJECT)Object;

    //
    // Verify the incoming data is valid for this method
    //
    if (Data == NV1_NULL_OBJECT) 
    {
        //
        // Set to the NULL object
        //
        pRenderObject->RCPatchContext.Surface = (PCOMMONOBJECT)NULL;
        
    }
    else if (fifoSearchObject(pDev, Data, pRenderObject->CBase.ChID, &TempObject) == RM_OK)
    {
        //
        // There is a corresponding object in this channel.  Validate.
        //
        switch (TempObject->Class->Type)
        {
            case NV3_CONTEXT_SURFACE_0:
                //
                // This is a valid object
                //            
                pRenderObject->RCPatchContext.Surface = (PCOMMONOBJECT)TempObject;
                break;
            
            case NV1_NULL:
            case NV1_NULL_OBJECT:
                //
                // A NULL class should disable
                //
                pRenderObject->RCPatchContext.Surface = (PCOMMONOBJECT)NULL;
                break;
                
            default:
                //
                // Any other class is an error
                //
                DBG_PRINT_STRING_VALUE(DEBUGLEVEL_ERRORS, "NVRM: SetContext with invalid object: ", Data);
                return (NV01C_NOTIFICATION_STATUS_ERROR_BAD_ARGUMENT); 
                break;
        }
    }
    else
    {
        //
        // Object not found or data invalid.
        //
        DBG_PRINT_STRING_VALUE(DEBUGLEVEL_ERRORS, "NVRM: SetContext with invalid object: ", Data);
        return (NV01C_NOTIFICATION_STATUS_ERROR_BAD_ARGUMENT);
    }
    
    //
    // Update object validation
    //
    status = class01CValidate(pDev, pRenderObject, 0xffffffff, 0);
    
    return (status);
}


RM_STATUS class01CSetOperation
(
	PHWINFO pDev,
    POBJECT Object,
    PMETHOD Method,
    U032    Offset,
    U032    Data
)
{
    PRENDERCOMMONOBJECT     pRenderObject;
    U032                    andMask, orMask;
    RM_STATUS               status = RM_OK;

    DBG_PRINT_STRING(DEBUGLEVEL_TRACEINFO, "NVRM: class01CSetOperation\r\n");

    //
    // A nice cast to make the code more readable.
    //
    pRenderObject = (PRENDERCOMMONOBJECT)Object;

    //
    // Verify the incoming data is valid for this method
    //
    if (Data < NV3_GR_OPERATIONS) 
    {
        //
        // Set the new value
        //
        andMask = ~(DRF_MASK(NV_PGRAPH_CTX_SWITCH1_PATCH_CONFIG) << DRF_SHIFT(NV_PGRAPH_CTX_SWITCH1_PATCH_CONFIG));
        orMask = DRF_NUM(_PGRAPH, _CTX_SWITCH1, _PATCH_CONFIG, Data);
        pRenderObject->RCPatchContext.Operation = Data;     // save the arch value for validation
    }
    else
    {
        //
        // Data invalid.
        //
        DBG_PRINT_STRING_VALUE(DEBUGLEVEL_ERRORS, "NVRM: SetContext with invalid data: ", Data);
        return (NV01C_NOTIFICATION_STATUS_ERROR_BAD_ARGUMENT);
    }
    
    //
    // Update object validation
    //
    status = class01CValidate(pDev, pRenderObject, andMask, orMask);
    
    return (status);
}
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Microsoft Xbox (1.00.4400) [April 2002] [src]\private\ntos\video\nv20\drivers\resman\kernel\modular\nv\class01e.c ===
/***************************************************************************\
|*                                                                           *|
|*        Copyright (c) 1993-2000 NVIDIA, Corp.  All rights reserved.        *|
|*                                                                           *|
|*     NOTICE TO USER:   The source code  is copyrighted under  U.S. and     *|
|*     international laws.   NVIDIA, Corp. of Sunnyvale, California owns     *|
|*     the copyright  and as design patents  pending  on the design  and     *|
|*     interface  of the NV chips.   Users and possessors of this source     *|
|*     code are hereby granted  a nonexclusive,  royalty-free  copyright     *|
|*     and  design  patent license  to use this code  in individual  and     *|
|*     commercial software.                                                  *|
|*                                                                           *|
|*     Any use of this source code must include,  in the user documenta-     *|
|*     tion and  internal comments to the code,  notices to the end user     *|
|*     as follows:                                                           *|
|*                                                                           *|
|*     Copyright (c) 1993-2000  NVIDIA, Corp.    NVIDIA  design  patents     *|
|*     pending in the U.S. and foreign countries.                            *|
|*                                                                           *|
|*     NVIDIA, CORP.  MAKES  NO REPRESENTATION ABOUT  THE SUITABILITY OF     *|
|*     THIS SOURCE CODE FOR ANY PURPOSE.  IT IS PROVIDED "AS IS" WITHOUT     *|
|*     EXPRESS OR IMPLIED WARRANTY OF ANY KIND.  NVIDIA, CORP. DISCLAIMS     *|
|*     ALL WARRANTIES  WITH REGARD  TO THIS SOURCE CODE,  INCLUDING  ALL     *|
|*     IMPLIED   WARRANTIES  OF  MERCHANTABILITY  AND   FITNESS   FOR  A     *|
|*     PARTICULAR  PURPOSE.   IN NO EVENT SHALL NVIDIA, CORP.  BE LIABLE     *|
|*     FOR ANY SPECIAL, INDIRECT, INCIDENTAL,  OR CONSEQUENTIAL DAMAGES,     *|
|*     OR ANY DAMAGES  WHATSOEVER  RESULTING  FROM LOSS OF USE,  DATA OR     *|
|*     PROFITS,  WHETHER IN AN ACTION  OF CONTRACT,  NEGLIGENCE OR OTHER     *|
|*     TORTIOUS ACTION, ARISING OUT  OF OR IN CONNECTION WITH THE USE OR     *|
|*     PERFORMANCE OF THIS SOURCE CODE.                                      *|
|*                                                                           *|
 \***************************************************************************/

/********************** NV1_RENDER_SOLID_RECTANGLE *************************\
*                                                                           *
* Module: CLASS01E.C                                                        *
*   This module implements the NV1_RENDER_SOLID_RECTANGLE object class      *
*   and its corresponding methods.                                          *
*                                                                           *
*****************************************************************************
*                                                                           *
* History:                                                                  *
*                                                                           *
\***************************************************************************/
#include <nv_ref.h>
#include <nvrm.h>
#include <state.h>
#include <class.h>
#include <gr.h>   
#include <dma.h>   
#include <modular.h>
#include <fifo.h>
#include <os.h>
#include <nv32.h>
#include "smp.h"

//
// Externs.
//


//---------------------------------------------------------------------------
//
//  Create/Destroy object routines.
//
//---------------------------------------------------------------------------


//---------------------------------------------------------------------------
//
//  Miscellaneous class support routines.
//
//---------------------------------------------------------------------------


//---------------------------------------------------------------------------
//
//  Class validation routines.
//
//---------------------------------------------------------------------------

RM_STATUS class01EValidate
(
	PHWINFO             pDev,
    PRENDERCOMMONOBJECT pRenderObject,
    U032                andMask,
    U032                orMask
)
{
    RM_STATUS status = RM_OK;

    //
    // Validate the current configuration of this object.  Update the object
    // instance data structure accordingly.
    //
    if ((pRenderObject->RCPatchContext.Operation != NV_ROP_AND  ||  
                    pRenderObject->RCPatchContext.Pattern != NULL)  &&
	    (pRenderObject->RCPatchContext.Operation != NV_ROP_AND  ||  
                    pRenderObject->RCPatchContext.Rop != NULL)  &&
	    (pRenderObject->RCPatchContext.Operation != NV_BLEND_AND  ||  
                    pRenderObject->RCPatchContext.Beta1 != NULL)  &&
	    (pRenderObject->RCPatchContext.Surface != NULL))
    {
        //
        // Patch status is valid
        //
        nvHalGrSetObjectContext(pDev,
                                ~DRF_DEF(_PGRAPH, _CTX_SWITCH1, _PATCH_STATUS, _VALID) & andMask,
                                DRF_DEF(_PGRAPH, _CTX_SWITCH1, _PATCH_STATUS, _VALID) | orMask,
                                pRenderObject->Common.Base.ChID,
                                pRenderObject->Common.Instance);
        pRenderObject->CValid = TRUE;
    } else {
        //
        // Patch status is invalid
        //
        nvHalGrSetObjectContext(pDev,
                                ~DRF_DEF(_PGRAPH, _CTX_SWITCH1, _PATCH_STATUS, _VALID) & andMask,
                                orMask,
                                pRenderObject->Common.Base.ChID,
                                pRenderObject->Common.Instance);
        pRenderObject->CValid = FALSE;
    }

    return (status);
}


//---------------------------------------------------------------------------
//
//  Class method routines.
//
//---------------------------------------------------------------------------

//
//  NOTE: Any method not listed here is most likely aliased to HWMethod()
//

RM_STATUS class01ESetContextClip
(
	PHWINFO pDev,
    POBJECT Object,
    PMETHOD Method,
    U032    Offset,
    U032    Data
)
{
    POBJECT                 TempObject;
    PRENDERCOMMONOBJECT     pRenderObject;
    U032                    andMask, orMask;
    RM_STATUS               status = RM_OK;

    DBG_PRINT_STRING(DEBUGLEVEL_TRACEINFO, "NVRM: class01ESetContextClip\r\n");

    //
    // A nice cast to make the code more readable.
    //
    pRenderObject = (PRENDERCOMMONOBJECT)Object;

    //
    // We'll be updating this bit.
    //
    andMask = ~DRF_DEF(_PGRAPH, _CTX_SWITCH1, _USER_CLIP, _ENABLE);

    //
    // Verify the incoming data is valid for this method
    //
    if (Data == NV1_NULL_OBJECT) 
    {
        //
        // Set to the NULL object and disable the colorkey.
        //
        orMask = 0;
        pRenderObject->RCPatchContext.Clip = (PCOMMONOBJECT)NULL;
    }
    else if (fifoSearchObject(pDev, Data, pRenderObject->CBase.ChID, &TempObject) == RM_OK)
    {
        //
        // There is a corresponding object in this channel.  Validate.
        //
        switch (TempObject->Class->Type)
        {
            case NV1_IMAGE_BLACK_RECTANGLE:
                //
                // This is a valid colorkey object
                //
                orMask = DRF_DEF(_PGRAPH, _CTX_SWITCH1, _USER_CLIP, _ENABLE);
                pRenderObject->RCPatchContext.Clip = (PCOMMONOBJECT)TempObject;
                break;
            
            case NV1_NULL:
            case NV1_NULL_OBJECT:
                //
                // A NULL class should disable
                //
                orMask = 0;
                pRenderObject->RCPatchContext.Clip = (PCOMMONOBJECT)NULL;
                break;
                
            default:
                //
                // Any other class is an error
                //
                DBG_PRINT_STRING_VALUE(DEBUGLEVEL_ERRORS, "NVRM: SetContext with invalid object: ", Data);
                return (NV01E_NOTIFICATION_STATUS_ERROR_BAD_ARGUMENT); 
                break;
        }
    }
    else
    {
        //
        // Object not found or data invalid.
        //
        DBG_PRINT_STRING_VALUE(DEBUGLEVEL_ERRORS, "NVRM: SetContext with invalid object: ", Data);
        return (NV01E_NOTIFICATION_STATUS_ERROR_BAD_ARGUMENT);
    }
    
    //
    // Update object validation
    //
    status = class01EValidate(pDev, pRenderObject, andMask, orMask);
    
    return (status);
}


RM_STATUS class01ESetContextPattern
(
	PHWINFO pDev,
    POBJECT Object,
    PMETHOD Method,
    U032    Offset,
    U032    Data
)
{
    POBJECT                 TempObject;
    PRENDERCOMMONOBJECT     pRenderObject;
    RM_STATUS               status = RM_OK;

    DBG_PRINT_STRING(DEBUGLEVEL_TRACEINFO, "NVRM: class01ESetContextPattern\r\n");

    //
    // A nice cast to make the code more readable.
    //
    pRenderObject = (PRENDERCOMMONOBJECT)Object;

    //
    // Verify the incoming data is valid for this method
    //
    if (Data == NV1_NULL_OBJECT) 
    {
        //
        // Set to the NULL object
        //
        pRenderObject->RCPatchContext.Pattern = (PCOMMONOBJECT)NULL;
        
    }
    else if (fifoSearchObject(pDev, Data, pRenderObject->CBase.ChID, &TempObject) == RM_OK)
    {
        //
        // There is a corresponding object in this channel.  Validate.
        //
        switch (TempObject->Class->Type)
        {
            case NV1_IMAGE_PATTERN:
                //
                // This is a valid object
                //            
                pRenderObject->RCPatchContext.Pattern = (PCOMMONOBJECT)TempObject;
                break;
            
            case NV1_NULL:
            case NV1_NULL_OBJECT:
                //
                // A NULL class should disable
                //
                pRenderObject->RCPatchContext.Pattern = (PCOMMONOBJECT)NULL;
                break;
                
            default:
                //
                // Any other class is an error
                //
                DBG_PRINT_STRING_VALUE(DEBUGLEVEL_ERRORS, "NVRM: SetContext with invalid object: ", Data);
                return (NV01E_NOTIFICATION_STATUS_ERROR_BAD_ARGUMENT); 
                break;
        }
    }
    else
    {
        //
        // Object not found or data invalid.
        //
        DBG_PRINT_STRING_VALUE(DEBUGLEVEL_ERRORS, "NVRM: SetContext with invalid object: ", Data);
        return (NV01E_NOTIFICATION_STATUS_ERROR_BAD_ARGUMENT);
    }
    
    //
    // Update object validation
    //
    status = class01EValidate(pDev, pRenderObject, 0xffffffff, 0);
    
    return (status);
}


RM_STATUS class01ESetContextRop
(
	PHWINFO pDev,
    POBJECT Object,
    PMETHOD Method,
    U032    Offset,
    U032    Data
)
{
    POBJECT                 TempObject;
    PRENDERCOMMONOBJECT     pRenderObject;
    RM_STATUS               status = RM_OK;

    DBG_PRINT_STRING(DEBUGLEVEL_TRACEINFO, "NVRM: class01ESetContextRop\r\n");

    //
    // A nice cast to make the code more readable.
    //
    pRenderObject = (PRENDERCOMMONOBJECT)Object;

    //
    // Verify the incoming data is valid for this method
    //
    if (Data == NV1_NULL_OBJECT) 
    {
        //
        // Set to the NULL object
        //
        pRenderObject->RCPatchContext.Rop = (PCOMMONOBJECT)NULL;
        
    }
    else if (fifoSearchObject(pDev, Data, pRenderObject->CBase.ChID, &TempObject) == RM_OK)
    {
        //
        // There is a corresponding object in this channel.  Validate.
        //
        switch (TempObject->Class->Type)
        {
            case NV3_CONTEXT_ROP:
                //
                // This is a valid object
                //            
                pRenderObject->RCPatchContext.Rop = (PCOMMONOBJECT)TempObject;
                break;
            
            case NV1_NULL:
            case NV1_NULL_OBJECT:
                //
                // A NULL class should disable
                //
                pRenderObject->RCPatchContext.Rop = (PCOMMONOBJECT)NULL;
                break;
                
            default:
                //
                // Any other class is an error
                //
                DBG_PRINT_STRING_VALUE(DEBUGLEVEL_ERRORS, "NVRM: SetContext with invalid object: ", Data);
                return (NV01E_NOTIFICATION_STATUS_ERROR_BAD_ARGUMENT); 
                break;
        }
    }
    else
    {
        //
        // Object not found or data invalid.
        //
        DBG_PRINT_STRING_VALUE(DEBUGLEVEL_ERRORS, "NVRM: SetContext with invalid object: ", Data);
        return (NV01E_NOTIFICATION_STATUS_ERROR_BAD_ARGUMENT);
    }
    
    //
    // Update object validation
    //
    status = class01EValidate(pDev, pRenderObject, 0xffffffff, 0);
    
    return (status);
}


RM_STATUS class01ESetContextBeta1
(
	PHWINFO pDev,
    POBJECT Object,
    PMETHOD Method,
    U032    Offset,
    U032    Data
)
{
    POBJECT                 TempObject;
    PRENDERCOMMONOBJECT     pRenderObject;
    RM_STATUS               status = RM_OK;

    DBG_PRINT_STRING(DEBUGLEVEL_TRACEINFO, "NVRM: class01ESetContextBeta1\r\n");

    //
    // A nice cast to make the code more readable.
    //
    pRenderObject = (PRENDERCOMMONOBJECT)Object;

    //
    // Verify the incoming data is valid for this method
    //
    if (Data == NV1_NULL_OBJECT) 
    {
        //
        // Set to the NULL object
        //
        pRenderObject->RCPatchContext.Beta1 = (PCOMMONOBJECT)NULL;
        
    }
    else if (fifoSearchObject(pDev, Data, pRenderObject->CBase.ChID, &TempObject) == RM_OK)
    {
        //
        // There is a corresponding object in this channel.  Validate.
        //
        switch (TempObject->Class->Type)
        {
            case NV1_BETA_SOLID:
                //
                // This is a valid object
                //            
                pRenderObject->RCPatchContext.Beta1 = (PCOMMONOBJECT)TempObject;
                break;
            
            case NV1_NULL:
            case NV1_NULL_OBJECT:
                //
                // A NULL class should disable
                //
                pRenderObject->RCPatchContext.Beta1 = (PCOMMONOBJECT)NULL;
                break;
                
            default:
                //
                // Any other class is an error
                //
                DBG_PRINT_STRING_VALUE(DEBUGLEVEL_ERRORS, "NVRM: SetContext with invalid object: ", Data);
                return (NV01E_NOTIFICATION_STATUS_ERROR_BAD_ARGUMENT); 
                break;
        }
    }
    else
    {
        //
        // Object not found or data invalid.
        //
        DBG_PRINT_STRING_VALUE(DEBUGLEVEL_ERRORS, "NVRM: SetContext with invalid object: ", Data);
        return (NV01E_NOTIFICATION_STATUS_ERROR_BAD_ARGUMENT);
    }
    
    //
    // Update object validation
    //
    status = class01EValidate(pDev, pRenderObject, 0xffffffff, 0);
    
    return (status);
}


RM_STATUS class01ESetContextSurface
(
	PHWINFO pDev,
    POBJECT Object,
    PMETHOD Method,
    U032    Offset,
    U032    Data
)
{
    POBJECT                 TempObject;
    PRENDERCOMMONOBJECT     pRenderObject;
    RM_STATUS               status = RM_OK;

    DBG_PRINT_STRING(DEBUGLEVEL_TRACEINFO, "NVRM: class01ESetContextSurface\r\n");

    //
    // A nice cast to make the code more readable.
    //
    pRenderObject = (PRENDERCOMMONOBJECT)Object;

    //
    // Verify the incoming data is valid for this method
    //
    if (Data == NV1_NULL_OBJECT) 
    {
        //
        // Set to the NULL object
        //
        pRenderObject->RCPatchContext.Surface = (PCOMMONOBJECT)NULL;
        
    }
    else if (fifoSearchObject(pDev, Data, pRenderObject->CBase.ChID, &TempObject) == RM_OK)
    {
        //
        // There is a corresponding object in this channel.  Validate.
        //
        switch (TempObject->Class->Type)
        {
            case NV3_CONTEXT_SURFACE_0:
                //
                // This is a valid object
                //            
                pRenderObject->RCPatchContext.Surface = (PCOMMONOBJECT)TempObject;
                break;
            
            case NV1_NULL:
            case NV1_NULL_OBJECT:
                //
                // A NULL class should disable
                //
                pRenderObject->RCPatchContext.Surface = (PCOMMONOBJECT)NULL;
                break;
                
            default:
                //
                // Any other class is an error
                //
                DBG_PRINT_STRING_VALUE(DEBUGLEVEL_ERRORS, "NVRM: SetContext with invalid object: ", Data);
                return (NV01E_NOTIFICATION_STATUS_ERROR_BAD_ARGUMENT); 
                break;
        }
    }
    else
    {
        //
        // Object not found or data invalid.
        //
        DBG_PRINT_STRING_VALUE(DEBUGLEVEL_ERRORS, "NVRM: SetContext with invalid object: ", Data);
        return (NV01E_NOTIFICATION_STATUS_ERROR_BAD_ARGUMENT);
    }
    
    //
    // Update object validation
    //
    status = class01EValidate(pDev, pRenderObject, 0xffffffff, 0);
    
    return (status);
}


RM_STATUS class01ESetOperation
(
	PHWINFO pDev,
    POBJECT Object,
    PMETHOD Method,
    U032    Offset,
    U032    Data
)
{
    PRENDERCOMMONOBJECT     pRenderObject;
    U032                    andMask, orMask;
    RM_STATUS               status = RM_OK;

    DBG_PRINT_STRING(DEBUGLEVEL_TRACEINFO, "NVRM: class01ESetOperation\r\n");
    //
    // A nice cast to make the code more readable.
    //
    pRenderObject = (PRENDERCOMMONOBJECT)Object;

    //
    // Verify the incoming data is valid for this method
    //
    if (Data < NV3_GR_OPERATIONS) 
    {
        //
        // Set the new value
        //
        andMask = ~(DRF_MASK(NV_PGRAPH_CTX_SWITCH1_PATCH_CONFIG) << DRF_SHIFT(NV_PGRAPH_CTX_SWITCH1_PATCH_CONFIG));
        orMask = DRF_NUM(_PGRAPH, _CTX_SWITCH1, _PATCH_CONFIG, Data);
        pRenderObject->RCPatchContext.Operation = Data;     // save the arch value for validation
    }
    else
    {
        //
        // Data invalid.
        //
        DBG_PRINT_STRING_VALUE(DEBUGLEVEL_ERRORS, "NVRM: SetContext with invalid data: ", Data);
        return (NV01E_NOTIFICATION_STATUS_ERROR_BAD_ARGUMENT);
    }
    
    //
    // Update object validation
    //
    status = class01EValidate(pDev, pRenderObject, andMask, orMask);
    
    return (status);
}
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Microsoft Xbox (1.00.4400) [April 2002] [src]\private\ntos\video\nv20\drivers\resman\kernel\modular\nv\class030.c ===
/***************************************************************************\
|*                                                                           *|
|*        Copyright (c) 1993-2000 NVIDIA, Corp.  All rights reserved.        *|
|*                                                                           *|
|*     NOTICE TO USER:   The source code  is copyrighted under  U.S. and     *|
|*     international laws.   NVIDIA, Corp. of Sunnyvale, California owns     *|
|*     the copyright  and as design patents  pending  on the design  and     *|
|*     interface  of the NV chips.   Users and possessors of this source     *|
|*     code are hereby granted  a nonexclusive,  royalty-free  copyright     *|
|*     and  design  patent license  to use this code  in individual  and     *|
|*     commercial software.                                                  *|
|*                                                                           *|
|*     Any use of this source code must include,  in the user documenta-     *|
|*     tion and  internal comments to the code,  notices to the end user     *|
|*     as follows:                                                           *|
|*                                                                           *|
|*     Copyright (c) 1993-2000  NVIDIA, Corp.    NVIDIA  design  patents     *|
|*     pending in the U.S. and foreign countries.                            *|
|*                                                                           *|
|*     NVIDIA, CORP.  MAKES  NO REPRESENTATION ABOUT  THE SUITABILITY OF     *|
|*     THIS SOURCE CODE FOR ANY PURPOSE.  IT IS PROVIDED "AS IS" WITHOUT     *|
|*     EXPRESS OR IMPLIED WARRANTY OF ANY KIND.  NVIDIA, CORP. DISCLAIMS     *|
|*     ALL WARRANTIES  WITH REGARD  TO THIS SOURCE CODE,  INCLUDING  ALL     *|
|*     IMPLIED   WARRANTIES  OF  MERCHANTABILITY  AND   FITNESS   FOR  A     *|
|*     PARTICULAR  PURPOSE.   IN NO EVENT SHALL NVIDIA, CORP.  BE LIABLE     *|
|*     FOR ANY SPECIAL, INDIRECT, INCIDENTAL,  OR CONSEQUENTIAL DAMAGES,     *|
|*     OR ANY DAMAGES  WHATSOEVER  RESULTING  FROM LOSS OF USE,  DATA OR     *|
|*     PROFITS,  WHETHER IN AN ACTION  OF CONTRACT,  NEGLIGENCE OR OTHER     *|
|*     TORTIOUS ACTION, ARISING OUT  OF OR IN CONNECTION WITH THE USE OR     *|
|*     PERFORMANCE OF THIS SOURCE CODE.                                      *|
|*                                                                           *|
 \***************************************************************************/

/************************** NV1_NULL_OBJECT ********************************\
*                                                                           *
* Module: CLASS030.C                                                        *
*   This module implements the NV1_NULL_OBJECT object class                 *
*   and its corresponding methods.                                          *
*                                                                           *
*****************************************************************************
*                                                                           *
* History:                                                                  *
*                                                                           *
\***************************************************************************/
#include <nv_ref.h>
#include <nvrm.h>
#include <state.h>
#include <class.h>
#include <gr.h>   
#include <dma.h>   
#include <modular.h>
#include <fifo.h>
#include <os.h>
#include <nv32.h>
#include "nvhw.h"
#include "smp.h"

//
// Externs.
//


//---------------------------------------------------------------------------
//
//  Create/Destroy object routines.
//
//---------------------------------------------------------------------------


//---------------------------------------------------------------------------
//
//  Miscellaneous class support routines.
//
//---------------------------------------------------------------------------


//---------------------------------------------------------------------------
//
//  Class validation routines.
//
//---------------------------------------------------------------------------


//---------------------------------------------------------------------------
//
//  Class method routines.
//
//---------------------------------------------------------------------------
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Microsoft Xbox (1.00.4400) [April 2002] [src]\private\ntos\video\nv20\drivers\resman\kernel\modular\nv\class021.c ===
/***************************************************************************\
|*                                                                           *|
|*        Copyright (c) 1993-2000 NVIDIA, Corp.  All rights reserved.        *|
|*                                                                           *|
|*     NOTICE TO USER:   The source code  is copyrighted under  U.S. and     *|
|*     international laws.   NVIDIA, Corp. of Sunnyvale, California owns     *|
|*     the copyright  and as design patents  pending  on the design  and     *|
|*     interface  of the NV chips.   Users and possessors of this source     *|
|*     code are hereby granted  a nonexclusive,  royalty-free  copyright     *|
|*     and  design  patent license  to use this code  in individual  and     *|
|*     commercial software.                                                  *|
|*                                                                           *|
|*     Any use of this source code must include,  in the user documenta-     *|
|*     tion and  internal comments to the code,  notices to the end user     *|
|*     as follows:                                                           *|
|*                                                                           *|
|*     Copyright (c) 1993-2000  NVIDIA, Corp.    NVIDIA  design  patents     *|
|*     pending in the U.S. and foreign countries.                            *|
|*                                                                           *|
|*     NVIDIA, CORP.  MAKES  NO REPRESENTATION ABOUT  THE SUITABILITY OF     *|
|*     THIS SOURCE CODE FOR ANY PURPOSE.  IT IS PROVIDED "AS IS" WITHOUT     *|
|*     EXPRESS OR IMPLIED WARRANTY OF ANY KIND.  NVIDIA, CORP. DISCLAIMS     *|
|*     ALL WARRANTIES  WITH REGARD  TO THIS SOURCE CODE,  INCLUDING  ALL     *|
|*     IMPLIED   WARRANTIES  OF  MERCHANTABILITY  AND   FITNESS   FOR  A     *|
|*     PARTICULAR  PURPOSE.   IN NO EVENT SHALL NVIDIA, CORP.  BE LIABLE     *|
|*     FOR ANY SPECIAL, INDIRECT, INCIDENTAL,  OR CONSEQUENTIAL DAMAGES,     *|
|*     OR ANY DAMAGES  WHATSOEVER  RESULTING  FROM LOSS OF USE,  DATA OR     *|
|*     PROFITS,  WHETHER IN AN ACTION  OF CONTRACT,  NEGLIGENCE OR OTHER     *|
|*     TORTIOUS ACTION, ARISING OUT  OF OR IN CONNECTION WITH THE USE OR     *|
|*     PERFORMANCE OF THIS SOURCE CODE.                                      *|
|*                                                                           *|
 \***************************************************************************/

/************************* NV1_IMAGE_FROM_CPU ******************************\
*                                                                           *
* Module: CLASS021.C                                                        *
*   This module implements the NV1_IMAGE_FROM_CPU object class              *
*   and its corresponding methods.                                          *
*                                                                           *
*****************************************************************************
*                                                                           *
* History:                                                                  *
*                                                                           *
\***************************************************************************/
#include <nv_ref.h>
#include <nvrm.h>
#include <state.h>
#include <class.h>
#include <gr.h>   
#include <dma.h>   
#include <modular.h>
#include <fifo.h>
#include <os.h>
#include <nv32.h>
#include "smp.h"

//
// Externs.
//


//---------------------------------------------------------------------------
//
//  Create/Destroy object routines.
//
//---------------------------------------------------------------------------


//---------------------------------------------------------------------------
//
//  Miscellaneous class support routines.
//
//---------------------------------------------------------------------------


//---------------------------------------------------------------------------
//
//  Class validation routines.
//
//---------------------------------------------------------------------------

RM_STATUS class021Validate
(
	PHWINFO             pDev,
    PRENDERCOMMONOBJECT pRenderObject,
    U032                andMask,
    U032                orMask
)
{
    RM_STATUS status = RM_OK;

    //
    // Validate the current configuration of this object.  Update the object
    // instance data structure accordingly.
    //
    if ((pRenderObject->RCPatchContext.Operation == NV_SRCCOPY_AND  ||  
                    pRenderObject->RCPatchContext.ColorKey == NULL)  &&
        (pRenderObject->RCPatchContext.Operation != NV_ROP_AND  ||  
                    pRenderObject->RCPatchContext.Pattern != NULL)  &&
	    (pRenderObject->RCPatchContext.Operation != NV_ROP_AND  ||  
                    pRenderObject->RCPatchContext.Rop != NULL)  &&
	    (pRenderObject->RCPatchContext.Operation != NV_BLEND_AND  ||  
                    pRenderObject->RCPatchContext.Beta1 != NULL)  &&
	    (pRenderObject->RCPatchContext.Surface != NULL))
    {
        //
        // Patch status is valid
        //
        nvHalGrSetObjectContext(pDev,
                                ~DRF_DEF(_PGRAPH, _CTX_SWITCH1, _PATCH_STATUS, _VALID) & andMask,
                                DRF_DEF(_PGRAPH, _CTX_SWITCH1, _PATCH_STATUS, _VALID) | orMask,
                                pRenderObject->Common.Base.ChID,
                                pRenderObject->Common.Instance);
        pRenderObject->CValid = TRUE;
    } else {
        //
        // Patch status is invalid
        //
        nvHalGrSetObjectContext(pDev,
                                ~DRF_DEF(_PGRAPH, _CTX_SWITCH1, _PATCH_STATUS, _VALID) & andMask,
                                orMask,
                                pRenderObject->Common.Base.ChID,
                                pRenderObject->Common.Instance);
        pRenderObject->CValid = FALSE;
    }

    return (status);
}


//---------------------------------------------------------------------------
//
//  Class method routines.
//
//---------------------------------------------------------------------------

//
//  NOTE: Any method not listed here is most likely aliased to HWMethod()
//

RM_STATUS class021SetContextColorKey
(
	PHWINFO pDev,
    POBJECT Object,
    PMETHOD Method,
    U032    Offset,
    U032    Data
)
{
    POBJECT                 TempObject;
    PRENDERCOMMONOBJECT     pRenderObject;
    U032                    andMask, orMask;
    RM_STATUS               status = RM_OK;

    DBG_PRINT_STRING(DEBUGLEVEL_TRACEINFO, "NVRM: class021SetContextColorKey\r\n");

    //
    // A nice cast to make the code more readable.
    //
    pRenderObject = (PRENDERCOMMONOBJECT)Object;

    //
    // We'll be updating this bit.
    //
    andMask = ~DRF_DEF(_PGRAPH, _CTX_SWITCH1, _CHROMA_KEY, _ENABLE);

    //
    // Verify the incoming data is valid for this method
    //
    if (Data == NV1_NULL_OBJECT) 
    {
        //
        // Set to the NULL object and disable the colorkey.
        //
        orMask = 0;
        pRenderObject->RCPatchContext.ColorKey = (PCOMMONOBJECT)NULL;
    }
    else if (fifoSearchObject(pDev, Data, pRenderObject->CBase.ChID, &TempObject) == RM_OK)
    {
        //
        // There is a corresponding object in this channel.  Validate.
        //
        switch (TempObject->Class->Type)
        {
            case NV1_IMAGE_SOLID:
                //
                // This is a valid colorkey object
                //
                orMask = DRF_DEF(_PGRAPH, _CTX_SWITCH1, _CHROMA_KEY, _ENABLE);
                pRenderObject->RCPatchContext.ColorKey = (PCOMMONOBJECT)TempObject;
                break;
            
            case NV1_NULL:
            case NV1_NULL_OBJECT:
                //
                // A NULL class should disable
                //
                orMask = 0;
                pRenderObject->RCPatchContext.ColorKey = (PCOMMONOBJECT)NULL;
                break;
                
            default:
                //
                // Any other class is an error
                //
                DBG_PRINT_STRING_VALUE(DEBUGLEVEL_ERRORS, "NVRM: SetContext with invalid object: ", Data);
                return (NV021_NOTIFICATION_STATUS_ERROR_BAD_ARGUMENT); 
                break;
        }
    }
    else
    {
        //
        // Object not found or data invalid.
        //
        DBG_PRINT_STRING_VALUE(DEBUGLEVEL_ERRORS, "NVRM: SetContext with invalid object: ", Data);
        return (NV021_NOTIFICATION_STATUS_ERROR_BAD_ARGUMENT);
    }
    
    //
    // Update object validation
    //
    status = class021Validate(pDev, pRenderObject, andMask, orMask);
    
    return (status);
}


RM_STATUS class021SetContextClip
(
	PHWINFO pDev,
    POBJECT Object,
    PMETHOD Method,
    U032    Offset,
    U032    Data
)
{
    POBJECT                 TempObject;
    PRENDERCOMMONOBJECT     pRenderObject;
    U032                    andMask, orMask;
    RM_STATUS               status = RM_OK;

    DBG_PRINT_STRING(DEBUGLEVEL_TRACEINFO, "NVRM: class021SetContextClip\r\n");

    //
    // A nice cast to make the code more readable.
    //
    pRenderObject = (PRENDERCOMMONOBJECT)Object;

    //
    // We'll be updating this bit.
    //
    andMask = ~DRF_DEF(_PGRAPH, _CTX_SWITCH1, _USER_CLIP, _ENABLE);

    //
    // Verify the incoming data is valid for this method
    //
    if (Data == NV1_NULL_OBJECT) 
    {
        //
        // Set to the NULL object and disable the colorkey.
        //
        orMask = 0;
        pRenderObject->RCPatchContext.Clip = (PCOMMONOBJECT)NULL;
    }
    else if (fifoSearchObject(pDev, Data, pRenderObject->CBase.ChID, &TempObject) == RM_OK)
    {
        //
        // There is a corresponding object in this channel.  Validate.
        //
        switch (TempObject->Class->Type)
        {
            case NV1_IMAGE_BLACK_RECTANGLE:
                //
                // This is a valid colorkey object
                //
                orMask = DRF_DEF(_PGRAPH, _CTX_SWITCH1, _USER_CLIP, _ENABLE);
                pRenderObject->RCPatchContext.Clip = (PCOMMONOBJECT)TempObject;
                break;
            
            case NV1_NULL:
            case NV1_NULL_OBJECT:
                //
                // A NULL class should disable
                //
                orMask = 0;
                pRenderObject->RCPatchContext.Clip = (PCOMMONOBJECT)NULL;
                break;
                
            default:
                //
                // Any other class is an error
                //
                DBG_PRINT_STRING_VALUE(DEBUGLEVEL_ERRORS, "NVRM: SetContext with invalid object: ", Data);
                return (NV021_NOTIFICATION_STATUS_ERROR_BAD_ARGUMENT); 
                break;
        }
    }
    else
    {
        //
        // Object not found or data invalid.
        //
        DBG_PRINT_STRING_VALUE(DEBUGLEVEL_ERRORS, "NVRM: SetContext with invalid object: ", Data);
        return (NV021_NOTIFICATION_STATUS_ERROR_BAD_ARGUMENT);
    }
    
    //
    // Update object validation
    //
    status = class021Validate(pDev, pRenderObject, andMask, orMask);
    
    return (status);
}


RM_STATUS class021SetContextPattern
(
	PHWINFO pDev,
    POBJECT Object,
    PMETHOD Method,
    U032    Offset,
    U032    Data
)
{
    POBJECT                 TempObject;
    PRENDERCOMMONOBJECT     pRenderObject;
    RM_STATUS               status = RM_OK;

    DBG_PRINT_STRING(DEBUGLEVEL_TRACEINFO, "NVRM: class021SetContextPattern\r\n");

    //
    // A nice cast to make the code more readable.
    //
    pRenderObject = (PRENDERCOMMONOBJECT)Object;

    //
    // Verify the incoming data is valid for this method
    //
    if (Data == NV1_NULL_OBJECT) 
    {
        //
        // Set to the NULL object
        //
        pRenderObject->RCPatchContext.Pattern = (PCOMMONOBJECT)NULL;
        
    }
    else if (fifoSearchObject(pDev, Data, pRenderObject->CBase.ChID, &TempObject) == RM_OK)
    {
        //
        // There is a corresponding object in this channel.  Validate.
        //
        switch (TempObject->Class->Type)
        {
            case NV1_IMAGE_PATTERN:
                //
                // This is a valid object
                //            
                pRenderObject->RCPatchContext.Pattern = (PCOMMONOBJECT)TempObject;
                break;
            
            case NV1_NULL:
            case NV1_NULL_OBJECT:
                //
                // A NULL class should disable
                //
                pRenderObject->RCPatchContext.Pattern = (PCOMMONOBJECT)NULL;
                break;
                
            default:
                //
                // Any other class is an error
                //
                DBG_PRINT_STRING_VALUE(DEBUGLEVEL_ERRORS, "NVRM: SetContext with invalid object: ", Data);
                return (NV021_NOTIFICATION_STATUS_ERROR_BAD_ARGUMENT); 
                break;
        }
    }
    else
    {
        //
        // Object not found or data invalid.
        //
        DBG_PRINT_STRING_VALUE(DEBUGLEVEL_ERRORS, "NVRM: SetContext with invalid object: ", Data);
        return (NV021_NOTIFICATION_STATUS_ERROR_BAD_ARGUMENT);
    }
    
    //
    // Update object validation
    //
    status = class021Validate(pDev, pRenderObject, 0xffffffff, 0);
    
    return (status);
}


RM_STATUS class021SetContextRop
(
	PHWINFO pDev,
    POBJECT Object,
    PMETHOD Method,
    U032    Offset,
    U032    Data
)
{
    POBJECT                 TempObject;
    PRENDERCOMMONOBJECT     pRenderObject;
    RM_STATUS               status = RM_OK;

    DBG_PRINT_STRING(DEBUGLEVEL_TRACEINFO, "NVRM: class021SetContextRop\r\n");

    //
    // A nice cast to make the code more readable.
    //
    pRenderObject = (PRENDERCOMMONOBJECT)Object;

    //
    // Verify the incoming data is valid for this method
    //
    if (Data == NV1_NULL_OBJECT) 
    {
        //
        // Set to the NULL object
        //
        pRenderObject->RCPatchContext.Rop = (PCOMMONOBJECT)NULL;
        
    }
    else if (fifoSearchObject(pDev, Data, pRenderObject->CBase.ChID, &TempObject) == RM_OK)
    {
        //
        // There is a corresponding object in this channel.  Validate.
        //
        switch (TempObject->Class->Type)
        {
            case NV3_CONTEXT_ROP:
                //
                // This is a valid object
                //            
                pRenderObject->RCPatchContext.Rop = (PCOMMONOBJECT)TempObject;
                break;
            
            case NV1_NULL:
            case NV1_NULL_OBJECT:
                //
                // A NULL class should disable
                //
                pRenderObject->RCPatchContext.Rop = (PCOMMONOBJECT)NULL;
                break;
                
            default:
                //
                // Any other class is an error
                //
                DBG_PRINT_STRING_VALUE(DEBUGLEVEL_ERRORS, "NVRM: SetContext with invalid object: ", Data);
                return (NV021_NOTIFICATION_STATUS_ERROR_BAD_ARGUMENT); 
                break;
        }
    }
    else
    {
        //
        // Object not found or data invalid.
        //
        DBG_PRINT_STRING_VALUE(DEBUGLEVEL_ERRORS, "NVRM: SetContext with invalid object: ", Data);
        return (NV021_NOTIFICATION_STATUS_ERROR_BAD_ARGUMENT);
    }
    
    //
    // Update object validation
    //
    status = class021Validate(pDev, pRenderObject, 0xffffffff, 0);
    
    return (status);
}


RM_STATUS class021SetContextBeta1
(
	PHWINFO pDev,
    POBJECT Object,
    PMETHOD Method,
    U032    Offset,
    U032    Data
)
{
    POBJECT                 TempObject;
    PRENDERCOMMONOBJECT     pRenderObject;
    RM_STATUS               status = RM_OK;

    DBG_PRINT_STRING(DEBUGLEVEL_TRACEINFO, "NVRM: class021SetContextBeta1\r\n");

    //
    // A nice cast to make the code more readable.
    //
    pRenderObject = (PRENDERCOMMONOBJECT)Object;

    //
    // Verify the incoming data is valid for this method
    //
    if (Data == NV1_NULL_OBJECT) 
    {
        //
        // Set to the NULL object
        //
        pRenderObject->RCPatchContext.Beta1 = (PCOMMONOBJECT)NULL;
        
    }
    else if (fifoSearchObject(pDev, Data, pRenderObject->CBase.ChID, &TempObject) == RM_OK)
    {
        //
        // There is a corresponding object in this channel.  Validate.
        //
        switch (TempObject->Class->Type)
        {
            case NV1_BETA_SOLID:
                //
                // This is a valid object
                //            
                pRenderObject->RCPatchContext.Beta1 = (PCOMMONOBJECT)TempObject;
                break;
            
            case NV1_NULL:
            case NV1_NULL_OBJECT:
                //
                // A NULL class should disable
                //
                pRenderObject->RCPatchContext.Beta1 = (PCOMMONOBJECT)NULL;
                break;
                
            default:
                //
                // Any other class is an error
                //
                DBG_PRINT_STRING_VALUE(DEBUGLEVEL_ERRORS, "NVRM: SetContext with invalid object: ", Data);
                return (NV021_NOTIFICATION_STATUS_ERROR_BAD_ARGUMENT); 
                break;
        }
    }
    else
    {
        //
        // Object not found or data invalid.
        //
        DBG_PRINT_STRING_VALUE(DEBUGLEVEL_ERRORS, "NVRM: SetContext with invalid object: ", Data);
        return (NV021_NOTIFICATION_STATUS_ERROR_BAD_ARGUMENT);
    }
    
    //
    // Update object validation
    //
    status = class021Validate(pDev, pRenderObject, 0xffffffff, 0);
    
    return (status);
}


RM_STATUS class021SetContextSurface
(
	PHWINFO pDev,
    POBJECT Object,
    PMETHOD Method,
    U032    Offset,
    U032    Data
)
{
    POBJECT                 TempObject;
    PRENDERCOMMONOBJECT     pRenderObject;
    RM_STATUS               status = RM_OK;

    DBG_PRINT_STRING(DEBUGLEVEL_TRACEINFO, "NVRM: class021SetContextSurface\r\n");

    //
    // A nice cast to make the code more readable.
    //
    pRenderObject = (PRENDERCOMMONOBJECT)Object;

    //
    // Verify the incoming data is valid for this method
    //
    if (Data == NV1_NULL_OBJECT) 
    {
        //
        // Set to the NULL object
        //
        pRenderObject->RCPatchContext.Surface = (PCOMMONOBJECT)NULL;
        
    }
    else if (fifoSearchObject(pDev, Data, pRenderObject->CBase.ChID, &TempObject) == RM_OK)
    {
        //
        // There is a corresponding object in this channel.  Validate.
        //
        switch (TempObject->Class->Type)
        {
            case NV3_CONTEXT_SURFACE_0:
                //
                // This is a valid object
                //            
                pRenderObject->RCPatchContext.Surface = (PCOMMONOBJECT)TempObject;
                break;
            
            case NV1_NULL:
            case NV1_NULL_OBJECT:
                //
                // A NULL class should disable
                //
                pRenderObject->RCPatchContext.Surface = (PCOMMONOBJECT)NULL;
                break;
                
            default:
                //
                // Any other class is an error
                //
                DBG_PRINT_STRING_VALUE(DEBUGLEVEL_ERRORS, "NVRM: SetContext with invalid object: ", Data);
                return (NV021_NOTIFICATION_STATUS_ERROR_BAD_ARGUMENT); 
                break;
        }
    }
    else
    {
        //
        // Object not found or data invalid.
        //
        DBG_PRINT_STRING_VALUE(DEBUGLEVEL_ERRORS, "NVRM: SetContext with invalid object: ", Data);
        return (NV021_NOTIFICATION_STATUS_ERROR_BAD_ARGUMENT);
    }
    
    //
    // Update object validation
    //
    status = class021Validate(pDev, pRenderObject, 0xffffffff, 0);
    
    return (status);
}


RM_STATUS class021SetOperation
(
    PHWINFO pDev,
    POBJECT Object,
    PMETHOD Method,
    U032    Offset,
    U032    Data
)
{
    PRENDERCOMMONOBJECT     pRenderObject;
    U032                    andMask, orMask;
    RM_STATUS               status = RM_OK;

    DBG_PRINT_STRING(DEBUGLEVEL_TRACEINFO, "NVRM: class021SetOperation\r\n");
    //
    // A nice cast to make the code more readable.
    //
    pRenderObject = (PRENDERCOMMONOBJECT)Object;

    //
    // Verify the incoming data is valid for this method
    //
    if (Data < NV3_GR_OPERATIONS) 
    {
        //
        // Set the new value
        //
        andMask = ~(DRF_MASK(NV_PGRAPH_CTX_SWITCH1_PATCH_CONFIG) << DRF_SHIFT(NV_PGRAPH_CTX_SWITCH1_PATCH_CONFIG));
        orMask = DRF_NUM(_PGRAPH, _CTX_SWITCH1, _PATCH_CONFIG, Data);
        pRenderObject->RCPatchContext.Operation = Data;     // save the arch value for validation
    }
    else
    {
        //
        // Data invalid.
        //
        DBG_PRINT_STRING_VALUE(DEBUGLEVEL_ERRORS, "NVRM: SetContext with invalid data: ", Data);
        return (NV021_NOTIFICATION_STATUS_ERROR_BAD_ARGUMENT);
    }
    
    //
    // Update object validation
    //
    status = class021Validate(pDev, pRenderObject, andMask, orMask);
    
    return (status);
}
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Microsoft Xbox (1.00.4400) [April 2002] [src]\private\ntos\video\nv20\drivers\resman\kernel\modular\nv\class036.c ===
/***************************************************************************\
|*                                                                           *|
|*        Copyright (c) 1993-2000 NVIDIA, Corp.  All rights reserved.        *|
|*                                                                           *|
|*     NOTICE TO USER:   The source code  is copyrighted under  U.S. and     *|
|*     international laws.   NVIDIA, Corp. of Sunnyvale, California owns     *|
|*     the copyright  and as design patents  pending  on the design  and     *|
|*     interface  of the NV chips.   Users and possessors of this source     *|
|*     code are hereby granted  a nonexclusive,  royalty-free  copyright     *|
|*     and  design  patent license  to use this code  in individual  and     *|
|*     commercial software.                                                  *|
|*                                                                           *|
|*     Any use of this source code must include,  in the user documenta-     *|
|*     tion and  internal comments to the code,  notices to the end user     *|
|*     as follows:                                                           *|
|*                                                                           *|
|*     Copyright (c) 1993-2000  NVIDIA, Corp.    NVIDIA  design  patents     *|
|*     pending in the U.S. and foreign countries.                            *|
|*                                                                           *|
|*     NVIDIA, CORP.  MAKES  NO REPRESENTATION ABOUT  THE SUITABILITY OF     *|
|*     THIS SOURCE CODE FOR ANY PURPOSE.  IT IS PROVIDED "AS IS" WITHOUT     *|
|*     EXPRESS OR IMPLIED WARRANTY OF ANY KIND.  NVIDIA, CORP. DISCLAIMS     *|
|*     ALL WARRANTIES  WITH REGARD  TO THIS SOURCE CODE,  INCLUDING  ALL     *|
|*     IMPLIED   WARRANTIES  OF  MERCHANTABILITY  AND   FITNESS   FOR  A     *|
|*     PARTICULAR  PURPOSE.   IN NO EVENT SHALL NVIDIA, CORP.  BE LIABLE     *|
|*     FOR ANY SPECIAL, INDIRECT, INCIDENTAL,  OR CONSEQUENTIAL DAMAGES,     *|
|*     OR ANY DAMAGES  WHATSOEVER  RESULTING  FROM LOSS OF USE,  DATA OR     *|
|*     PROFITS,  WHETHER IN AN ACTION  OF CONTRACT,  NEGLIGENCE OR OTHER     *|
|*     TORTIOUS ACTION, ARISING OUT  OF OR IN CONNECTION WITH THE USE OR     *|
|*     PERFORMANCE OF THIS SOURCE CODE.                                      *|
|*                                                                           *|
 \***************************************************************************/

/******************** NV3_STRETCHED_IMAGE_FROM_CPU *************************\
*                                                                           *
* Module: CLASS036.C                                                        *
*   This module implements the NV3_STRETCHED_IMAGE_FROM_CPU object class    *
*   and its corresponding methods.                                          *
*                                                                           *
*****************************************************************************
*                                                                           *
* History:                                                                  *
*                                                                           *
\***************************************************************************/
#include <nv_ref.h>
#include <nvrm.h>
#include <state.h>
#include <class.h>
#include <gr.h>   
#include <dma.h>   
#include <modular.h>
#include <fifo.h>
#include <os.h>
#include <nv32.h>
#include "smp.h"

//
// Externs.
//


//---------------------------------------------------------------------------
//
//  Create/Destroy object routines.
//
//---------------------------------------------------------------------------


//---------------------------------------------------------------------------
//
//  Miscellaneous class support routines.
//
//---------------------------------------------------------------------------


//---------------------------------------------------------------------------
//
//  Class validation routines.
//
//---------------------------------------------------------------------------

RM_STATUS class036Validate
(
	PHWINFO             pDev,
    PRENDERCOMMONOBJECT pRenderObject,
    U032                andMask,
    U032                orMask
)
{
    RM_STATUS status = RM_OK;

    //
    // Validate the current configuration of this object.  Update the object
    // instance data structure accordingly.
    //
    if ((pRenderObject->RCPatchContext.Operation == NV_SRCCOPY_AND  ||  
                    pRenderObject->RCPatchContext.ColorKey == NULL)  &&
        (pRenderObject->RCPatchContext.Operation != NV_ROP_AND  ||  
                    pRenderObject->RCPatchContext.Pattern != NULL)  &&
	    (pRenderObject->RCPatchContext.Operation != NV_ROP_AND  ||  
                    pRenderObject->RCPatchContext.Rop != NULL)  &&
	    (pRenderObject->RCPatchContext.Operation != NV_BLEND_AND  ||  
                    pRenderObject->RCPatchContext.Beta1 != NULL)  &&
	    (pRenderObject->RCPatchContext.Surface != NULL))
    {
        //
        // Patch status is valid
        //
        nvHalGrSetObjectContext(pDev,
                                ~DRF_DEF(_PGRAPH, _CTX_SWITCH1, _PATCH_STATUS, _VALID) & andMask,
                                DRF_DEF(_PGRAPH, _CTX_SWITCH1, _PATCH_STATUS, _VALID) | orMask,
                                pRenderObject->Common.Base.ChID,
                                pRenderObject->Common.Instance);
        pRenderObject->CValid = TRUE;
    } else {
        //
        // Patch status is invalid
        //
        nvHalGrSetObjectContext(pDev,
                                ~DRF_DEF(_PGRAPH, _CTX_SWITCH1, _PATCH_STATUS, _VALID) & andMask,
                                orMask,
                                pRenderObject->Common.Base.ChID,
                                pRenderObject->Common.Instance);
        pRenderObject->CValid = FALSE;
    }
        
    return (status);
}


//---------------------------------------------------------------------------
//
//  Class method routines.
//
//---------------------------------------------------------------------------

//
//  NOTE: Any method not listed here is most likely aliased to HWMethod()
//

RM_STATUS class036SetContextColorKey
(
	PHWINFO pDev,
    POBJECT Object,
    PMETHOD Method,
    U032    Offset,
    U032    Data
)
{
    POBJECT                 TempObject;
    PRENDERCOMMONOBJECT     pRenderObject;
    U032                    andMask, orMask;
    RM_STATUS               status = RM_OK;

    DBG_PRINT_STRING(DEBUGLEVEL_TRACEINFO, "NVRM: class036SetContextColorKey\r\n");

    //
    // A nice cast to make the code more readable.
    //
    pRenderObject = (PRENDERCOMMONOBJECT)Object;

    //
    // We'll be updating this bit.
    //
    andMask = ~DRF_DEF(_PGRAPH, _CTX_SWITCH1, _CHROMA_KEY, _ENABLE);

    //
    // Verify the incoming data is valid for this method
    //
    if (Data == NV1_NULL_OBJECT) 
    {
        //
        // Set to the NULL object and disable the colorkey.
        //
        orMask = 0;
        pRenderObject->RCPatchContext.ColorKey = (PCOMMONOBJECT)NULL;
        
    }
    else if (fifoSearchObject(pDev, Data, pRenderObject->CBase.ChID, &TempObject) == RM_OK)
    {
        //
        // There is a corresponding object in this channel.  Validate.
        //
        switch (TempObject->Class->Type)
        {
            case NV1_IMAGE_SOLID:
                //
                // This is a valid colorkey object
                //
                orMask = 0;
                pRenderObject->RCPatchContext.ColorKey = (PCOMMONOBJECT)TempObject;
                break;
            
            case NV1_NULL:
            case NV1_NULL_OBJECT:
                //
                // A NULL class should disable
                //
                orMask = 0;
                pRenderObject->RCPatchContext.ColorKey = (PCOMMONOBJECT)NULL;
                break;
                
            default:
                //
                // Any other class is an error
                //
                DBG_PRINT_STRING_VALUE(DEBUGLEVEL_ERRORS, "NVRM: SetContext with invalid object: ", Data);
                return (NV036_NOTIFICATION_STATUS_ERROR_BAD_ARGUMENT); 
                break;
        }
    }
    else
    {
        //
        // Object not found or data i